				 *** Text Processing using Spacy *** 


================================ Paragraph 1 =================================

ACCELERATE  DEEP LEARNING  WITH A MODERN  DATA PLATFORM   

------------------- Sentence 1 -------------------

ACCELERATE  DEEP LEARNING  WITH A MODERN  DATA PLATFORM    


>> Tokens are: 
[ACCELERATE,  , DEEP, LEARNING,  , MODERN,  , DATA, PLATFORM,   ] 

>> PoS Tags are: 
[('ACCELERATE', 'VERB'), (' ', 'SPACE'), ('DEEP', 'ADJ'), ('LEARNING', 'PROPN'), (' ', 'SPACE'), ('MODERN', 'PROPN'), (' ', 'SPACE'), ('DATA', 'PROPN'), ('PLATFORM', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('ACCELERATE', 'ROOT'), (' ', 'dobj'), ('DEEP', 'amod'), ('LEARNING', 'npadvmod'), (' ', 'nummod'), ('MODERN', 'nmod'), (' ', 'nummod'), ('DATA', 'compound'), ('PLATFORM', 'compound'), ('  ', 'pobj')]

>> Bigrams: 
[[ACCELERATE,  ], [ , DEEP], [DEEP, LEARNING], [LEARNING,  ], [ , MODERN], [MODERN,  ], [ , DATA], [DATA, PLATFORM], [PLATFORM,   ]]

>> Trigrams: 
[[ACCELERATE,  , DEEP], [ , DEEP, LEARNING], [DEEP, LEARNING,  ], [LEARNING,  , MODERN], [ , MODERN,  ], [MODERN,  , DATA], [ , DATA, PLATFORM], [DATA, PLATFORM,   ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('ACCELERATE', 'ORG'), ('MODERN', 'FAC'), ('DATA', 'ORG')] 


================================ Paragraph 2 =================================

PRODUCED BY TABOR CUSTOM PUBLISHING IN  CONJUNCTION WITH: 

------------------- Sentence 1 -------------------

PRODUCED BY TABOR CUSTOM PUBLISHING IN   


>> Tokens are: 
[PRODUCED, TABOR, CUSTOM, PUBLISHING,  ] 

>> PoS Tags are: 
[('PRODUCED', 'PROPN'), ('TABOR', 'PROPN'), ('CUSTOM', 'PROPN'), ('PUBLISHING', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('PRODUCED', 'ROOT'), ('TABOR', 'compound'), ('CUSTOM', 'pobj'), ('PUBLISHING', 'nmod'), (' ', 'pobj')]

>> Bigrams: 
[[PRODUCED, TABOR], [TABOR, CUSTOM], [CUSTOM, PUBLISHING], [PUBLISHING,  ]]

>> Trigrams: 
[[PRODUCED, TABOR, CUSTOM], [TABOR, CUSTOM, PUBLISHING], [CUSTOM, PUBLISHING,  ]]

>> Noun Phrases are: 
[PRODUCED, TABOR CUSTOM]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

CONJUNCTION 


>> Tokens are: 
[CONJUNCTION] 

>> PoS Tags are: 
[('CONJUNCTION', 'NOUN')] 

>> Dependency Tags are: 
[('CONJUNCTION', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[CONJUNCTION]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

WITH: 


>> Tokens are: 
[:] 

>> PoS Tags are: 
[(':', 'PUNCT')] 

>> Dependency Tags are: 
[(':', 'punct')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 3 =================================

SP ON 

------------------- Sentence 1 -------------------

SP ON 


>> Tokens are: 
[SP] 

>> PoS Tags are: 
[('SP', 'NOUN')] 

>> Dependency Tags are: 
[('SP', 'compound')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('SP', 'NORP')] 


================================ Paragraph 4 =================================

SO RE 

------------------- Sentence 1 -------------------

SO RE 


>> Tokens are: 
[] 

>> PoS Tags are: 
[] 

>> Dependency Tags are: 
[]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[SO RE]

>> Named Entities are: 
[] 


================================ Paragraph 5 =================================

D  BY 

------------------- Sentence 1 -------------------

D  BY 


>> Tokens are: 
[D,  ] 

>> PoS Tags are: 
[('D', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('D', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[D,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[D]

>> Named Entities are: 
[] 


================================ Paragraph 6 =================================

:

------------------- Sentence 1 -------------------

: 


>> Tokens are: 
[:] 

>> PoS Tags are: 
[(':', 'PUNCT')] 

>> Dependency Tags are: 
[(':', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 7 =================================

DATANAMI: ACCELER ATE DEEP LEARNING WITH A MODERN DATA PLATFORM 

------------------- Sentence 1 -------------------

DATANAMI: ACCELER ATE DEEP LEARNING WITH A MODERN DATA PLATFORM 


>> Tokens are: 
[DATANAMI, :, ACCELER, ATE, DEEP, LEARNING, MODERN, DATA, PLATFORM] 

>> PoS Tags are: 
[('DATANAMI', 'PROPN'), (':', 'PUNCT'), ('ACCELER', 'ADJ'), ('ATE', 'VERB'), ('DEEP', 'ADJ'), ('LEARNING', 'NOUN'), ('MODERN', 'PROPN'), ('DATA', 'PROPN'), ('PLATFORM', 'NOUN')] 

>> Dependency Tags are: 
[('DATANAMI', 'dep'), (':', 'punct'), ('ACCELER', 'nsubj'), ('ATE', 'ROOT'), ('DEEP', 'amod'), ('LEARNING', 'dobj'), ('MODERN', 'compound'), ('DATA', 'compound'), ('PLATFORM', 'pobj')]

>> Bigrams: 
[[DATANAMI, :], [:, ACCELER], [ACCELER, ATE], [ATE, DEEP], [DEEP, LEARNING], [LEARNING, MODERN], [MODERN, DATA], [DATA, PLATFORM]]

>> Trigrams: 
[[DATANAMI, :, ACCELER], [:, ACCELER, ATE], [ACCELER, ATE, DEEP], [ATE, DEEP, LEARNING], [DEEP, LEARNING, MODERN], [LEARNING, MODERN, DATA], [MODERN, DATA, PLATFORM]]

>> Noun Phrases are: 
[DEEP LEARNING, A MODERN DATA PLATFORM]

>> Named Entities are: 
[] 


================================ Paragraph 8 =================================

2TABOR CUSTOM PUBLISHING 

------------------- Sentence 1 -------------------

2TABOR CUSTOM PUBLISHING 


>> Tokens are: 
[2TABOR, CUSTOM, PUBLISHING] 

>> PoS Tags are: 
[('2TABOR', 'DET'), ('CUSTOM', 'PROPN'), ('PUBLISHING', 'NOUN')] 

>> Dependency Tags are: 
[('2TABOR', 'det'), ('CUSTOM', 'compound'), ('PUBLISHING', 'ROOT')]

>> Bigrams: 
[[2TABOR, CUSTOM], [CUSTOM, PUBLISHING]]

>> Trigrams: 
[[2TABOR, CUSTOM, PUBLISHING]]

>> Noun Phrases are: 
[2TABOR CUSTOM PUBLISHING]

>> Named Entities are: 
[] 


================================ Paragraph 9 =================================

DON’T DISREGARD THE COST OF  DOING NOTHING 

------------------- Sentence 1 -------------------

DON’T DISREGARD 


>> Tokens are: 
[DON’T, DISREGARD] 

>> PoS Tags are: 
[('DON’T', 'PROPN'), ('DISREGARD', 'PROPN')] 

>> Dependency Tags are: 
[('DON’T', 'compound'), ('DISREGARD', 'ROOT')]

>> Bigrams: 
[[DON’T, DISREGARD]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[DON’T DISREGARD]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

THE COST OF  DOING NOTHING 


>> Tokens are: 
[COST,  ] 

>> PoS Tags are: 
[('COST', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('COST', 'nsubj'), (' ', 'pobj')]

>> Bigrams: 
[[COST,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[THE COST, NOTHING]

>> Named Entities are: 
[] 


================================ Paragraph 10 =================================

This initiative often starts with improving data storage,  enabling better utilization of customer data to enhance  service levels and competitive advantage. Overcoming  silos and building processes that consolidate and  increase availability of data to analytics is key to  building an AI-ready infrastructure, as well as delivering  insight on customer experience. This will address issues  such as response, satisfaction and loyalty. 

------------------- Sentence 1 -------------------

This initiative often starts with improving data storage,  enabling better utilization of customer data to enhance  service levels and competitive advantage. 


>> Tokens are: 
[initiative, starts, improving, data, storage, ,,  , enabling, better, utilization, customer, data, enhance,  , service, levels, competitive, advantage, .] 

>> PoS Tags are: 
[('initiative', 'NOUN'), ('starts', 'VERB'), ('improving', 'VERB'), ('data', 'NOUN'), ('storage', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('enabling', 'VERB'), ('better', 'ADJ'), ('utilization', 'NOUN'), ('customer', 'NOUN'), ('data', 'NOUN'), ('enhance', 'VERB'), (' ', 'SPACE'), ('service', 'NOUN'), ('levels', 'NOUN'), ('competitive', 'ADJ'), ('advantage', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('initiative', 'nsubj'), ('starts', 'ROOT'), ('improving', 'pcomp'), ('data', 'compound'), ('storage', 'dobj'), (',', 'punct'), (' ', 'nsubj'), ('enabling', 'pcomp'), ('better', 'amod'), ('utilization', 'dobj'), ('customer', 'compound'), ('data', 'pobj'), ('enhance', 'advcl'), (' ', 'dobj'), ('service', 'compound'), ('levels', 'dobj'), ('competitive', 'amod'), ('advantage', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[initiative, starts], [starts, improving], [improving, data], [data, storage], [storage, ,], [,,  ], [ , enabling], [enabling, better], [better, utilization], [utilization, customer], [customer, data], [data, enhance], [enhance,  ], [ , service], [service, levels], [levels, competitive], [competitive, advantage], [advantage, .]]

>> Trigrams: 
[[initiative, starts, improving], [starts, improving, data], [improving, data, storage], [data, storage, ,], [storage, ,,  ], [,,  , enabling], [ , enabling, better], [enabling, better, utilization], [better, utilization, customer], [utilization, customer, data], [customer, data, enhance], [data, enhance,  ], [enhance,  , service], [ , service, levels], [service, levels, competitive], [levels, competitive, advantage], [competitive, advantage, .]]

>> Noun Phrases are: 
[This initiative, data storage, better utilization, customer data, service levels, competitive advantage]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Overcoming  silos and building processes that consolidate and  increase availability of data to analytics is key to  building an AI-ready infrastructure, as well as delivering  insight on customer experience. 


>> Tokens are: 
[Overcoming,  , silos, building, processes, consolidate,  , increase, availability, data, analytics, key,  , building, AI, -, ready, infrastructure, ,, delivering,  , insight, customer, experience, .] 

>> PoS Tags are: 
[('Overcoming', 'VERB'), (' ', 'SPACE'), ('silos', 'X'), ('building', 'NOUN'), ('processes', 'NOUN'), ('consolidate', 'VERB'), (' ', 'SPACE'), ('increase', 'VERB'), ('availability', 'NOUN'), ('data', 'NOUN'), ('analytics', 'NOUN'), ('key', 'ADJ'), (' ', 'SPACE'), ('building', 'VERB'), ('AI', 'PROPN'), ('-', 'PUNCT'), ('ready', 'ADJ'), ('infrastructure', 'NOUN'), (',', 'PUNCT'), ('delivering', 'VERB'), (' ', 'SPACE'), ('insight', 'NOUN'), ('customer', 'NOUN'), ('experience', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Overcoming', 'csubj'), (' ', 'dobj'), ('silos', 'dobj'), ('building', 'compound'), ('processes', 'conj'), ('consolidate', 'relcl'), (' ', 'conj'), ('increase', 'csubj'), ('availability', 'dobj'), ('data', 'pobj'), ('analytics', 'pobj'), ('key', 'acomp'), (' ', 'pobj'), ('building', 'acl'), ('AI', 'npadvmod'), ('-', 'punct'), ('ready', 'amod'), ('infrastructure', 'dobj'), (',', 'punct'), ('delivering', 'pcomp'), (' ', 'dobj'), ('insight', 'dobj'), ('customer', 'compound'), ('experience', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Overcoming,  ], [ , silos], [silos, building], [building, processes], [processes, consolidate], [consolidate,  ], [ , increase], [increase, availability], [availability, data], [data, analytics], [analytics, key], [key,  ], [ , building], [building, AI], [AI, -], [-, ready], [ready, infrastructure], [infrastructure, ,], [,, delivering], [delivering,  ], [ , insight], [insight, customer], [customer, experience], [experience, .]]

>> Trigrams: 
[[Overcoming,  , silos], [ , silos, building], [silos, building, processes], [building, processes, consolidate], [processes, consolidate,  ], [consolidate,  , increase], [ , increase, availability], [increase, availability, data], [availability, data, analytics], [data, analytics, key], [analytics, key,  ], [key,  , building], [ , building, AI], [building, AI, -], [AI, -, ready], [-, ready, infrastructure], [ready, infrastructure, ,], [infrastructure, ,, delivering], [,, delivering,  ], [delivering,  , insight], [ , insight, customer], [insight, customer, experience], [customer, experience, .]]

>> Noun Phrases are: 
[building processes, availability, data, analytics, an AI-ready infrastructure, insight, customer experience]

>> Named Entities are: 
[('AI', 'ORG')] 

------------------- Sentence 3 -------------------

This will address issues  such as response, satisfaction and loyalty. 


>> Tokens are: 
[address, issues,  , response, ,, satisfaction, loyalty, .] 

>> PoS Tags are: 
[('address', 'VERB'), ('issues', 'NOUN'), (' ', 'SPACE'), ('response', 'NOUN'), (',', 'PUNCT'), ('satisfaction', 'NOUN'), ('loyalty', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('address', 'ROOT'), ('issues', 'dobj'), (' ', 'appos'), ('response', 'pobj'), (',', 'punct'), ('satisfaction', 'conj'), ('loyalty', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[address, issues], [issues,  ], [ , response], [response, ,], [,, satisfaction], [satisfaction, loyalty], [loyalty, .]]

>> Trigrams: 
[[address, issues,  ], [issues,  , response], [ , response, ,], [response, ,, satisfaction], [,, satisfaction, loyalty], [satisfaction, loyalty, .]]

>> Noun Phrases are: 
[issues, response, satisfaction, loyalty]

>> Named Entities are: 
[] 


================================ Paragraph 11 =================================

Data, machine learning and AI are a must for financial  services businesses. Through generating intelligence,  accelerating innovation and fully enabling mobility,  financial services companies can remove barriers to  adoption, improve efficiencies, mitigate risk and look  forward to improved prosperity. 

------------------- Sentence 1 -------------------

Data, machine learning and AI are a must for financial  services businesses. 


>> Tokens are: 
[Data, ,, machine, learning, AI, financial,  , services, businesses, .] 

>> PoS Tags are: 
[('Data', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('AI', 'PROPN'), ('financial', 'ADJ'), (' ', 'SPACE'), ('services', 'NOUN'), ('businesses', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Data', 'nsubj'), (',', 'punct'), ('machine', 'compound'), ('learning', 'appos'), ('AI', 'conj'), ('financial', 'amod'), (' ', 'compound'), ('services', 'compound'), ('businesses', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Data, ,], [,, machine], [machine, learning], [learning, AI], [AI, financial], [financial,  ], [ , services], [services, businesses], [businesses, .]]

>> Trigrams: 
[[Data, ,, machine], [,, machine, learning], [machine, learning, AI], [learning, AI, financial], [AI, financial,  ], [financial,  , services], [ , services, businesses], [services, businesses, .]]

>> Noun Phrases are: 
[Data, machine learning, AI, a must, financial  services businesses]

>> Named Entities are: 
[('AI', 'ORG')] 

------------------- Sentence 2 -------------------

Through generating intelligence,  accelerating innovation and fully enabling mobility,  financial services companies can remove barriers to  adoption, improve efficiencies, mitigate risk and look  forward to improved prosperity. 


>> Tokens are: 
[generating, intelligence, ,,  , accelerating, innovation, fully, enabling, mobility, ,,  , financial, services, companies, remove, barriers,  , adoption, ,, improve, efficiencies, ,, mitigate, risk, look,  , forward, improved, prosperity, .] 

>> PoS Tags are: 
[('generating', 'VERB'), ('intelligence', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('accelerating', 'VERB'), ('innovation', 'NOUN'), ('fully', 'ADV'), ('enabling', 'VERB'), ('mobility', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('financial', 'ADJ'), ('services', 'NOUN'), ('companies', 'NOUN'), ('remove', 'VERB'), ('barriers', 'NOUN'), (' ', 'SPACE'), ('adoption', 'NOUN'), (',', 'PUNCT'), ('improve', 'VERB'), ('efficiencies', 'NOUN'), (',', 'PUNCT'), ('mitigate', 'VERB'), ('risk', 'NOUN'), ('look', 'VERB'), (' ', 'SPACE'), ('forward', 'ADV'), ('improved', 'ADJ'), ('prosperity', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('generating', 'amod'), ('intelligence', 'pobj'), (',', 'punct'), (' ', 'dep'), ('accelerating', 'acl'), ('innovation', 'dobj'), ('fully', 'advmod'), ('enabling', 'conj'), ('mobility', 'dobj'), (',', 'punct'), (' ', 'nmod'), ('financial', 'amod'), ('services', 'compound'), ('companies', 'nsubj'), ('remove', 'ROOT'), ('barriers', 'dobj'), (' ', 'pobj'), ('adoption', 'pobj'), (',', 'punct'), ('improve', 'conj'), ('efficiencies', 'dobj'), (',', 'punct'), ('mitigate', 'conj'), ('risk', 'dobj'), ('look', 'conj'), (' ', 'dobj'), ('forward', 'advmod'), ('improved', 'amod'), ('prosperity', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[generating, intelligence], [intelligence, ,], [,,  ], [ , accelerating], [accelerating, innovation], [innovation, fully], [fully, enabling], [enabling, mobility], [mobility, ,], [,,  ], [ , financial], [financial, services], [services, companies], [companies, remove], [remove, barriers], [barriers,  ], [ , adoption], [adoption, ,], [,, improve], [improve, efficiencies], [efficiencies, ,], [,, mitigate], [mitigate, risk], [risk, look], [look,  ], [ , forward], [forward, improved], [improved, prosperity], [prosperity, .]]

>> Trigrams: 
[[generating, intelligence, ,], [intelligence, ,,  ], [,,  , accelerating], [ , accelerating, innovation], [accelerating, innovation, fully], [innovation, fully, enabling], [fully, enabling, mobility], [enabling, mobility, ,], [mobility, ,,  ], [,,  , financial], [ , financial, services], [financial, services, companies], [services, companies, remove], [companies, remove, barriers], [remove, barriers,  ], [barriers,  , adoption], [ , adoption, ,], [adoption, ,, improve], [,, improve, efficiencies], [improve, efficiencies, ,], [efficiencies, ,, mitigate], [,, mitigate, risk], [mitigate, risk, look], [risk, look,  ], [look,  , forward], [ , forward, improved], [forward, improved, prosperity], [improved, prosperity, .]]

>> Noun Phrases are: 
[generating intelligence, innovation, mobility,  financial services companies, barriers, adoption, efficiencies, risk, improved prosperity]

>> Named Entities are: 
[] 


================================ Paragraph 12 =================================

Financial services businesses face unprecedented  market challenges. Disruption from Fintech firms,  increased local and international regulation, geo-  political upheavals and wavering customer loyalty. The  need to fully understand the market, to innovate, to  reduce costs and be more competitive has never been  greater, and this is where AI can help. 

------------------- Sentence 1 -------------------

Financial services businesses face unprecedented  market challenges. 


>> Tokens are: 
[Financial, services, businesses, face, unprecedented,  , market, challenges, .] 

>> PoS Tags are: 
[('Financial', 'ADJ'), ('services', 'NOUN'), ('businesses', 'NOUN'), ('face', 'VERB'), ('unprecedented', 'ADJ'), (' ', 'SPACE'), ('market', 'NOUN'), ('challenges', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Financial', 'amod'), ('services', 'compound'), ('businesses', 'nsubj'), ('face', 'ROOT'), ('unprecedented', 'amod'), (' ', 'compound'), ('market', 'compound'), ('challenges', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Financial, services], [services, businesses], [businesses, face], [face, unprecedented], [unprecedented,  ], [ , market], [market, challenges], [challenges, .]]

>> Trigrams: 
[[Financial, services, businesses], [services, businesses, face], [businesses, face, unprecedented], [face, unprecedented,  ], [unprecedented,  , market], [ , market, challenges], [market, challenges, .]]

>> Noun Phrases are: 
[Financial services businesses, unprecedented  market challenges]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Disruption from Fintech firms,  increased local and international regulation, geo-  political upheavals and wavering customer loyalty. 


>> Tokens are: 
[Disruption, Fintech, firms, ,,  , increased, local, international, regulation, ,, geo-,  , political, upheavals, wavering, customer, loyalty, .] 

>> PoS Tags are: 
[('Disruption', 'NOUN'), ('Fintech', 'PROPN'), ('firms', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('increased', 'VERB'), ('local', 'ADJ'), ('international', 'ADJ'), ('regulation', 'NOUN'), (',', 'PUNCT'), ('geo-', 'ADJ'), (' ', 'SPACE'), ('political', 'ADJ'), ('upheavals', 'NOUN'), ('wavering', 'VERB'), ('customer', 'NOUN'), ('loyalty', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Disruption', 'nsubj'), ('Fintech', 'compound'), ('firms', 'pobj'), (',', 'punct'), (' ', 'nsubj'), ('increased', 'ROOT'), ('local', 'amod'), ('international', 'conj'), ('regulation', 'dobj'), (',', 'punct'), ('geo-', 'amod'), (' ', 'nmod'), ('political', 'amod'), ('upheavals', 'conj'), ('wavering', 'amod'), ('customer', 'compound'), ('loyalty', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Disruption, Fintech], [Fintech, firms], [firms, ,], [,,  ], [ , increased], [increased, local], [local, international], [international, regulation], [regulation, ,], [,, geo-], [geo-,  ], [ , political], [political, upheavals], [upheavals, wavering], [wavering, customer], [customer, loyalty], [loyalty, .]]

>> Trigrams: 
[[Disruption, Fintech, firms], [Fintech, firms, ,], [firms, ,,  ], [,,  , increased], [ , increased, local], [increased, local, international], [local, international, regulation], [international, regulation, ,], [regulation, ,, geo-], [,, geo-,  ], [geo-,  , political], [ , political, upheavals], [political, upheavals, wavering], [upheavals, wavering, customer], [wavering, customer, loyalty], [customer, loyalty, .]]

>> Noun Phrases are: 
[Disruption, Fintech firms, local and international regulation, geo-  political upheavals, wavering customer loyalty]

>> Named Entities are: 
[('Fintech', 'ORG')] 

------------------- Sentence 3 -------------------

The  need to fully understand the market, to innovate, to  reduce costs and be more competitive has never been  greater, and this is where AI can help. 


>> Tokens are: 
[ , need, fully, understand, market, ,, innovate, ,,  , reduce, costs, competitive,  , greater, ,, AI, help, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('need', 'VERB'), ('fully', 'ADV'), ('understand', 'VERB'), ('market', 'NOUN'), (',', 'PUNCT'), ('innovate', 'VERB'), (',', 'PUNCT'), (' ', 'SPACE'), ('reduce', 'VERB'), ('costs', 'NOUN'), ('competitive', 'ADJ'), (' ', 'SPACE'), ('greater', 'ADJ'), (',', 'PUNCT'), ('AI', 'PROPN'), ('help', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nsubj'), ('need', 'ROOT'), ('fully', 'advmod'), ('understand', 'xcomp'), ('market', 'dobj'), (',', 'punct'), ('innovate', 'conj'), (',', 'punct'), (' ', 'pobj'), ('reduce', 'conj'), ('costs', 'dobj'), ('competitive', 'acomp'), (' ', 'attr'), ('greater', 'amod'), (',', 'punct'), ('AI', 'nsubj'), ('help', 'ccomp'), ('.', 'punct')]

>> Bigrams: 
[[ , need], [need, fully], [fully, understand], [understand, market], [market, ,], [,, innovate], [innovate, ,], [,,  ], [ , reduce], [reduce, costs], [costs, competitive], [competitive,  ], [ , greater], [greater, ,], [,, AI], [AI, help], [help, .]]

>> Trigrams: 
[[ , need, fully], [need, fully, understand], [fully, understand, market], [understand, market, ,], [market, ,, innovate], [,, innovate, ,], [innovate, ,,  ], [,,  , reduce], [ , reduce, costs], [reduce, costs, competitive], [costs, competitive,  ], [competitive,  , greater], [ , greater, ,], [greater, ,, AI], [,, AI, help], [AI, help, .]]

>> Noun Phrases are: 
[the market, costs, AI]

>> Named Entities are: 
[('AI', 'ORG')] 


================================ Paragraph 13 =================================

According to one fintech research company, by 2030 the  financial services sector could reduce operational costs  using AI, by as much as 22%. It suggests that will equate  to around $1 trillion in efficiencies. So, from a purely  operational point of view, doing nothing is not really an  option for companies that want to remain competitive. 

------------------- Sentence 1 -------------------

According to one fintech research company, by 2030 the  financial services sector could reduce operational costs  using AI, by as much as 22%. 


>> Tokens are: 
[According, fintech, research, company, ,, 2030,  , financial, services, sector, reduce, operational, costs,  , AI, ,, 22, %, .] 

>> PoS Tags are: 
[('According', 'VERB'), ('fintech', 'NOUN'), ('research', 'NOUN'), ('company', 'NOUN'), (',', 'PUNCT'), ('2030', 'NUM'), (' ', 'SPACE'), ('financial', 'ADJ'), ('services', 'NOUN'), ('sector', 'NOUN'), ('reduce', 'VERB'), ('operational', 'ADJ'), ('costs', 'NOUN'), (' ', 'SPACE'), ('AI', 'PROPN'), (',', 'PUNCT'), ('22', 'NUM'), ('%', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('According', 'prep'), ('fintech', 'compound'), ('research', 'compound'), ('company', 'pobj'), (',', 'punct'), ('2030', 'pobj'), (' ', 'nmod'), ('financial', 'amod'), ('services', 'compound'), ('sector', 'nsubj'), ('reduce', 'ROOT'), ('operational', 'amod'), ('costs', 'dobj'), (' ', 'dobj'), ('AI', 'dobj'), (',', 'punct'), ('22', 'nummod'), ('%', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[According, fintech], [fintech, research], [research, company], [company, ,], [,, 2030], [2030,  ], [ , financial], [financial, services], [services, sector], [sector, reduce], [reduce, operational], [operational, costs], [costs,  ], [ , AI], [AI, ,], [,, 22], [22, %], [%, .]]

>> Trigrams: 
[[According, fintech, research], [fintech, research, company], [research, company, ,], [company, ,, 2030], [,, 2030,  ], [2030,  , financial], [ , financial, services], [financial, services, sector], [services, sector, reduce], [sector, reduce, operational], [reduce, operational, costs], [operational, costs,  ], [costs,  , AI], [ , AI, ,], [AI, ,, 22], [,, 22, %], [22, %, .]]

>> Noun Phrases are: 
[one fintech research company, the  financial services sector, operational costs, AI, as much as 22%]

>> Named Entities are: 
[('one', 'CARDINAL'), ('2030', 'DATE'), ('AI', 'ORG'), ('as much as 22%', 'PERCENT')] 

------------------- Sentence 2 -------------------

It suggests that will equate  to around $1 trillion in efficiencies. 


>> Tokens are: 
[suggests, equate,  , $, 1, trillion, efficiencies, .] 

>> PoS Tags are: 
[('suggests', 'VERB'), ('equate', 'VERB'), (' ', 'SPACE'), ('$', 'SYM'), ('1', 'NUM'), ('trillion', 'NUM'), ('efficiencies', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('suggests', 'ROOT'), ('equate', 'ccomp'), (' ', 'dobj'), ('$', 'quantmod'), ('1', 'compound'), ('trillion', 'pobj'), ('efficiencies', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[suggests, equate], [equate,  ], [ , $], [$, 1], [1, trillion], [trillion, efficiencies], [efficiencies, .]]

>> Trigrams: 
[[suggests, equate,  ], [equate,  , $], [ , $, 1], [$, 1, trillion], [1, trillion, efficiencies], [trillion, efficiencies, .]]

>> Noun Phrases are: 
[It, efficiencies]

>> Named Entities are: 
[('around $1 trillion', 'MONEY')] 

------------------- Sentence 3 -------------------

So, from a purely  operational point of view, doing nothing is not really an  option for companies that want to remain competitive. 


>> Tokens are: 
[,, purely,  , operational, point, view, ,,  , option, companies, want, remain, competitive, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('purely', 'ADV'), (' ', 'SPACE'), ('operational', 'ADJ'), ('point', 'NOUN'), ('view', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('option', 'NOUN'), ('companies', 'NOUN'), ('want', 'VERB'), ('remain', 'VERB'), ('competitive', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('purely', 'advmod'), (' ', 'nmod'), ('operational', 'amod'), ('point', 'pobj'), ('view', 'pobj'), (',', 'punct'), (' ', 'compound'), ('option', 'attr'), ('companies', 'pobj'), ('want', 'relcl'), ('remain', 'xcomp'), ('competitive', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[,, purely], [purely,  ], [ , operational], [operational, point], [point, view], [view, ,], [,,  ], [ , option], [option, companies], [companies, want], [want, remain], [remain, competitive], [competitive, .]]

>> Trigrams: 
[[,, purely,  ], [purely,  , operational], [ , operational, point], [operational, point, view], [point, view, ,], [view, ,,  ], [,,  , option], [ , option, companies], [option, companies, want], [companies, want, remain], [want, remain, competitive], [remain, competitive, .]]

>> Noun Phrases are: 
[a purely  operational point, view, nothing, an  option, companies]

>> Named Entities are: 
[] 


================================ Paragraph 14 =================================

Today, financial services firms across the board need  to rejuvenate customer experience to protect against  client attrition, and protect those customers against  risk. While data analysis and visualization are key to  making sense of data, the fundamental challenge for  all businesses is building an infrastructure capable of  collecting and processing data from a variety of sources.

------------------- Sentence 1 -------------------

Today, financial services firms across the board need  to rejuvenate customer experience to protect against  client attrition, and protect those customers against  risk. 


>> Tokens are: 
[Today, ,, financial, services, firms, board, need,  , rejuvenate, customer, experience, protect,  , client, attrition, ,, protect, customers,  , risk, .] 

>> PoS Tags are: 
[('Today', 'NOUN'), (',', 'PUNCT'), ('financial', 'ADJ'), ('services', 'NOUN'), ('firms', 'NOUN'), ('board', 'NOUN'), ('need', 'VERB'), (' ', 'SPACE'), ('rejuvenate', 'VERB'), ('customer', 'NOUN'), ('experience', 'NOUN'), ('protect', 'VERB'), (' ', 'SPACE'), ('client', 'NOUN'), ('attrition', 'NOUN'), (',', 'PUNCT'), ('protect', 'VERB'), ('customers', 'NOUN'), (' ', 'SPACE'), ('risk', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Today', 'npadvmod'), (',', 'punct'), ('financial', 'amod'), ('services', 'compound'), ('firms', 'nsubj'), ('board', 'pobj'), ('need', 'ROOT'), (' ', 'nsubj'), ('rejuvenate', 'advcl'), ('customer', 'compound'), ('experience', 'dobj'), ('protect', 'advcl'), (' ', 'compound'), ('client', 'compound'), ('attrition', 'pobj'), (',', 'punct'), ('protect', 'conj'), ('customers', 'dobj'), (' ', 'compound'), ('risk', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Today, ,], [,, financial], [financial, services], [services, firms], [firms, board], [board, need], [need,  ], [ , rejuvenate], [rejuvenate, customer], [customer, experience], [experience, protect], [protect,  ], [ , client], [client, attrition], [attrition, ,], [,, protect], [protect, customers], [customers,  ], [ , risk], [risk, .]]

>> Trigrams: 
[[Today, ,, financial], [,, financial, services], [financial, services, firms], [services, firms, board], [firms, board, need], [board, need,  ], [need,  , rejuvenate], [ , rejuvenate, customer], [rejuvenate, customer, experience], [customer, experience, protect], [experience, protect,  ], [protect,  , client], [ , client, attrition], [client, attrition, ,], [attrition, ,, protect], [,, protect, customers], [protect, customers,  ], [customers,  , risk], [ , risk, .]]

>> Noun Phrases are: 
[financial services firms, the board, customer experience,  client attrition, those customers,  risk]

>> Named Entities are: 
[('Today', 'DATE')] 

------------------- Sentence 2 -------------------

While data analysis and visualization are key to  making sense of data, the fundamental challenge for  all businesses is building an infrastructure capable of  collecting and processing data from a variety of sources. 


>> Tokens are: 
[data, analysis, visualization, key,  , making, sense, data, ,, fundamental, challenge,  , businesses, building, infrastructure, capable,  , collecting, processing, data, variety, sources, .] 

>> PoS Tags are: 
[('data', 'NOUN'), ('analysis', 'NOUN'), ('visualization', 'NOUN'), ('key', 'ADJ'), (' ', 'SPACE'), ('making', 'VERB'), ('sense', 'NOUN'), ('data', 'NOUN'), (',', 'PUNCT'), ('fundamental', 'ADJ'), ('challenge', 'NOUN'), (' ', 'SPACE'), ('businesses', 'NOUN'), ('building', 'VERB'), ('infrastructure', 'NOUN'), ('capable', 'ADJ'), (' ', 'SPACE'), ('collecting', 'VERB'), ('processing', 'NOUN'), ('data', 'NOUN'), ('variety', 'NOUN'), ('sources', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('data', 'compound'), ('analysis', 'nsubj'), ('visualization', 'conj'), ('key', 'acomp'), (' ', 'pobj'), ('making', 'pcomp'), ('sense', 'dobj'), ('data', 'pobj'), (',', 'punct'), ('fundamental', 'amod'), ('challenge', 'nsubj'), (' ', 'pobj'), ('businesses', 'nsubj'), ('building', 'ROOT'), ('infrastructure', 'dobj'), ('capable', 'amod'), (' ', 'nsubj'), ('collecting', 'pcomp'), ('processing', 'compound'), ('data', 'pobj'), ('variety', 'pobj'), ('sources', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[data, analysis], [analysis, visualization], [visualization, key], [key,  ], [ , making], [making, sense], [sense, data], [data, ,], [,, fundamental], [fundamental, challenge], [challenge,  ], [ , businesses], [businesses, building], [building, infrastructure], [infrastructure, capable], [capable,  ], [ , collecting], [collecting, processing], [processing, data], [data, variety], [variety, sources], [sources, .]]

>> Trigrams: 
[[data, analysis, visualization], [analysis, visualization, key], [visualization, key,  ], [key,  , making], [ , making, sense], [making, sense, data], [sense, data, ,], [data, ,, fundamental], [,, fundamental, challenge], [fundamental, challenge,  ], [challenge,  , businesses], [ , businesses, building], [businesses, building, infrastructure], [building, infrastructure, capable], [infrastructure, capable,  ], [capable,  , collecting], [ , collecting, processing], [collecting, processing, data], [processing, data, variety], [data, variety, sources], [variety, sources, .]]

>> Noun Phrases are: 
[data analysis, visualization, sense, data, the fundamental challenge, all businesses, an infrastructure, processing data, a variety, sources]

>> Named Entities are: 
[] 


================================ Paragraph 15 =================================

DATANAMI: ACCELER ATE DEEP LEARNING WITH A MODERN DATA PLATFORM 

------------------- Sentence 1 -------------------

DATANAMI: ACCELER ATE DEEP LEARNING WITH A MODERN DATA PLATFORM 


>> Tokens are: 
[DATANAMI, :, ACCELER, ATE, DEEP, LEARNING, MODERN, DATA, PLATFORM] 

>> PoS Tags are: 
[('DATANAMI', 'PROPN'), (':', 'PUNCT'), ('ACCELER', 'ADJ'), ('ATE', 'VERB'), ('DEEP', 'ADJ'), ('LEARNING', 'NOUN'), ('MODERN', 'PROPN'), ('DATA', 'PROPN'), ('PLATFORM', 'NOUN')] 

>> Dependency Tags are: 
[('DATANAMI', 'dep'), (':', 'punct'), ('ACCELER', 'nsubj'), ('ATE', 'ROOT'), ('DEEP', 'amod'), ('LEARNING', 'dobj'), ('MODERN', 'compound'), ('DATA', 'compound'), ('PLATFORM', 'pobj')]

>> Bigrams: 
[[DATANAMI, :], [:, ACCELER], [ACCELER, ATE], [ATE, DEEP], [DEEP, LEARNING], [LEARNING, MODERN], [MODERN, DATA], [DATA, PLATFORM]]

>> Trigrams: 
[[DATANAMI, :, ACCELER], [:, ACCELER, ATE], [ACCELER, ATE, DEEP], [ATE, DEEP, LEARNING], [DEEP, LEARNING, MODERN], [LEARNING, MODERN, DATA], [MODERN, DATA, PLATFORM]]

>> Noun Phrases are: 
[DEEP LEARNING, A MODERN DATA PLATFORM]

>> Named Entities are: 
[] 


================================ Paragraph 16 =================================

3TABOR CUSTOM PUBLISHING 

------------------- Sentence 1 -------------------

3TABOR CUSTOM PUBLISHING 


>> Tokens are: 
[3TABOR, CUSTOM, PUBLISHING] 

>> PoS Tags are: 
[('3TABOR', 'DET'), ('CUSTOM', 'PROPN'), ('PUBLISHING', 'NOUN')] 

>> Dependency Tags are: 
[('3TABOR', 'amod'), ('CUSTOM', 'compound'), ('PUBLISHING', 'ROOT')]

>> Bigrams: 
[[3TABOR, CUSTOM], [CUSTOM, PUBLISHING]]

>> Trigrams: 
[[3TABOR, CUSTOM, PUBLISHING]]

>> Noun Phrases are: 
[3TABOR CUSTOM PUBLISHING]

>> Named Entities are: 
[] 


================================ Paragraph 17 =================================

SOCIETAL IMPACT OF ARTIFICIAL INTELLIGENCE   ▷ Baidu: A speech-recognition system called Deep  

------------------- Sentence 1 -------------------

SOCIETAL IMPACT OF ARTIFICIAL INTELLIGENCE    


>> Tokens are: 
[SOCIETAL, IMPACT, ARTIFICIAL, INTELLIGENCE,   ] 

>> PoS Tags are: 
[('SOCIETAL', 'PROPN'), ('IMPACT', 'PROPN'), ('ARTIFICIAL', 'PROPN'), ('INTELLIGENCE', 'NOUN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('SOCIETAL', 'compound'), ('IMPACT', 'ROOT'), ('ARTIFICIAL', 'compound'), ('INTELLIGENCE', 'pobj'), ('  ', 'npadvmod')]

>> Bigrams: 
[[SOCIETAL, IMPACT], [IMPACT, ARTIFICIAL], [ARTIFICIAL, INTELLIGENCE], [INTELLIGENCE,   ]]

>> Trigrams: 
[[SOCIETAL, IMPACT, ARTIFICIAL], [IMPACT, ARTIFICIAL, INTELLIGENCE], [ARTIFICIAL, INTELLIGENCE,   ]]

>> Noun Phrases are: 
[SOCIETAL IMPACT, ARTIFICIAL INTELLIGENCE]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

▷ Baidu: A speech-recognition system called Deep   


>> Tokens are: 
[▷, Baidu, :, speech, -, recognition, system, called, Deep,  ] 

>> PoS Tags are: 
[('▷', 'PROPN'), ('Baidu', 'PROPN'), (':', 'PUNCT'), ('speech', 'NOUN'), ('-', 'PUNCT'), ('recognition', 'NOUN'), ('system', 'NOUN'), ('called', 'VERB'), ('Deep', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('▷', 'compound'), ('Baidu', 'ROOT'), (':', 'punct'), ('speech', 'compound'), ('-', 'punct'), ('recognition', 'compound'), ('system', 'appos'), ('called', 'acl'), ('Deep', 'amod'), (' ', 'oprd')]

>> Bigrams: 
[[▷, Baidu], [Baidu, :], [:, speech], [speech, -], [-, recognition], [recognition, system], [system, called], [called, Deep], [Deep,  ]]

>> Trigrams: 
[[▷, Baidu, :], [Baidu, :, speech], [:, speech, -], [speech, -, recognition], [-, recognition, system], [recognition, system, called], [system, called, Deep], [called, Deep,  ]]

>> Noun Phrases are: 
[▷ Baidu, A speech-recognition system]

>> Named Entities are: 
[('Deep  ', 'WORK_OF_ART')] 


================================ Paragraph 18 =================================

Speech 2 developed by Baidu easily recognizes  English or Mandarin Chinese speech and, in some  cases, can translate more accurately than humans.  

------------------- Sentence 1 -------------------

Speech 2 developed by Baidu easily recognizes  English or Mandarin Chinese speech and, in some  cases, can translate more accurately than humans. 


>> Tokens are: 
[Speech, 2, developed, Baidu, easily, recognizes,  , English, Mandarin, Chinese, speech, ,,  , cases, ,, translate, accurately, humans, .] 

>> PoS Tags are: 
[('Speech', 'NOUN'), ('2', 'NUM'), ('developed', 'VERB'), ('Baidu', 'PROPN'), ('easily', 'ADV'), ('recognizes', 'VERB'), (' ', 'SPACE'), ('English', 'PROPN'), ('Mandarin', 'PROPN'), ('Chinese', 'ADJ'), ('speech', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('cases', 'NOUN'), (',', 'PUNCT'), ('translate', 'VERB'), ('accurately', 'ADV'), ('humans', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Speech', 'nsubj'), ('2', 'nummod'), ('developed', 'acl'), ('Baidu', 'pobj'), ('easily', 'advmod'), ('recognizes', 'ROOT'), (' ', 'nmod'), ('English', 'amod'), ('Mandarin', 'conj'), ('Chinese', 'amod'), ('speech', 'dobj'), (',', 'punct'), (' ', 'pobj'), ('cases', 'pobj'), (',', 'punct'), ('translate', 'conj'), ('accurately', 'advmod'), ('humans', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Speech, 2], [2, developed], [developed, Baidu], [Baidu, easily], [easily, recognizes], [recognizes,  ], [ , English], [English, Mandarin], [Mandarin, Chinese], [Chinese, speech], [speech, ,], [,,  ], [ , cases], [cases, ,], [,, translate], [translate, accurately], [accurately, humans], [humans, .]]

>> Trigrams: 
[[Speech, 2, developed], [2, developed, Baidu], [developed, Baidu, easily], [Baidu, easily, recognizes], [easily, recognizes,  ], [recognizes,  , English], [ , English, Mandarin], [English, Mandarin, Chinese], [Mandarin, Chinese, speech], [Chinese, speech, ,], [speech, ,,  ], [,,  , cases], [ , cases, ,], [cases, ,, translate], [,, translate, accurately], [translate, accurately, humans], [accurately, humans, .]]

>> Noun Phrases are: 
[Speech, Baidu,  English or Mandarin Chinese speech, cases, humans]

>> Named Entities are: 
[('Speech 2', 'PERSON'), ('Baidu', 'ORG'), ('English', 'LANGUAGE'), ('Mandarin Chinese', 'NORP')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 19 =================================

 ▷ Facebook: Facebook’s DeepMask and SharpMask  software works in conjunction with its  MultiPathNet neural networks allowing Facebook  to understand an image based on each pixel it  contains. 

------------------- Sentence 1 -------------------

 ▷ Facebook: Facebook’s DeepMask and SharpMask  software works in conjunction with its  MultiPathNet neural networks allowing Facebook  to understand an image based on each pixel it  contains. 


>> Tokens are: 
[ , ▷, Facebook, :, Facebook, DeepMask, SharpMask,  , software, works, conjunction,  , MultiPathNet, neural, networks, allowing, Facebook,  , understand, image, based, pixel,  , contains, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('▷', 'PROPN'), ('Facebook', 'PROPN'), (':', 'PUNCT'), ('Facebook', 'PROPN'), ('DeepMask', 'PROPN'), ('SharpMask', 'PROPN'), (' ', 'SPACE'), ('software', 'NOUN'), ('works', 'VERB'), ('conjunction', 'NOUN'), (' ', 'SPACE'), ('MultiPathNet', 'NUM'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('allowing', 'VERB'), ('Facebook', 'PROPN'), (' ', 'SPACE'), ('understand', 'VERB'), ('image', 'NOUN'), ('based', 'VERB'), ('pixel', 'NOUN'), (' ', 'SPACE'), ('contains', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('▷', 'compound'), ('Facebook', 'dep'), (':', 'punct'), ('Facebook', 'appos'), ('DeepMask', 'appos'), ('SharpMask', 'compound'), (' ', 'compound'), ('software', 'nsubj'), ('works', 'ROOT'), ('conjunction', 'pobj'), (' ', 'nmod'), ('MultiPathNet', 'nummod'), ('neural', 'amod'), ('networks', 'pobj'), ('allowing', 'acl'), ('Facebook', 'compound'), (' ', 'nsubj'), ('understand', 'ccomp'), ('image', 'dobj'), ('based', 'acl'), ('pixel', 'pobj'), (' ', 'nsubj'), ('contains', 'relcl'), ('.', 'punct')]

>> Bigrams: 
[[ , ▷], [▷, Facebook], [Facebook, :], [:, Facebook], [Facebook, DeepMask], [DeepMask, SharpMask], [SharpMask,  ], [ , software], [software, works], [works, conjunction], [conjunction,  ], [ , MultiPathNet], [MultiPathNet, neural], [neural, networks], [networks, allowing], [allowing, Facebook], [Facebook,  ], [ , understand], [understand, image], [image, based], [based, pixel], [pixel,  ], [ , contains], [contains, .]]

>> Trigrams: 
[[ , ▷, Facebook], [▷, Facebook, :], [Facebook, :, Facebook], [:, Facebook, DeepMask], [Facebook, DeepMask, SharpMask], [DeepMask, SharpMask,  ], [SharpMask,  , software], [ , software, works], [software, works, conjunction], [works, conjunction,  ], [conjunction,  , MultiPathNet], [ , MultiPathNet, neural], [MultiPathNet, neural, networks], [neural, networks, allowing], [networks, allowing, Facebook], [allowing, Facebook,  ], [Facebook,  , understand], [ , understand, image], [understand, image, based], [image, based, pixel], [based, pixel,  ], [pixel,  , contains], [ , contains, .]]

>> Noun Phrases are: 
[Facebook, DeepMask, SharpMask  software, conjunction, its  MultiPathNet neural networks, an image, each pixel, it]

>> Named Entities are: 
[('DeepMask', 'PRODUCT'), ('SharpMask', 'ORG')] 


================================ Paragraph 20 =================================

 ▷ Google (Alphabet): Google CEO Sundar Pichai  indicates that when users tap on Google Maps  that the Google StreetView product uses AI to  automatically recognize street signs or business  signs to help define the location.  

------------------- Sentence 1 -------------------

 ▷ Google (Alphabet): Google CEO Sundar Pichai  indicates that when users tap on Google Maps  that the Google StreetView product uses AI to  automatically recognize street signs or business  signs to help define the location. 


>> Tokens are: 
[ , ▷, Google, (, Alphabet, ):, Google, CEO, Sundar, Pichai,  , indicates, users, tap, Google, Maps,  , Google, StreetView, product, uses, AI,  , automatically, recognize, street, signs, business,  , signs, help, define, location, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('▷', 'PROPN'), ('Google', 'PROPN'), ('(', 'PUNCT'), ('Alphabet', 'PROPN'), ('):', 'PUNCT'), ('Google', 'PROPN'), ('CEO', 'PROPN'), ('Sundar', 'PROPN'), ('Pichai', 'PROPN'), (' ', 'SPACE'), ('indicates', 'VERB'), ('users', 'NOUN'), ('tap', 'VERB'), ('Google', 'PROPN'), ('Maps', 'PROPN'), (' ', 'SPACE'), ('Google', 'PROPN'), ('StreetView', 'PROPN'), ('product', 'NOUN'), ('uses', 'VERB'), ('AI', 'PROPN'), (' ', 'SPACE'), ('automatically', 'ADV'), ('recognize', 'VERB'), ('street', 'NOUN'), ('signs', 'NOUN'), ('business', 'NOUN'), (' ', 'SPACE'), ('signs', 'NOUN'), ('help', 'VERB'), ('define', 'VERB'), ('location', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'npadvmod'), ('▷', 'compound'), ('Google', 'nsubj'), ('(', 'punct'), ('Alphabet', 'appos'), ('):', 'punct'), ('Google', 'compound'), ('CEO', 'compound'), ('Sundar', 'compound'), ('Pichai', 'appos'), (' ', 'appos'), ('indicates', 'ROOT'), ('users', 'nsubj'), ('tap', 'advcl'), ('Google', 'compound'), ('Maps', 'pobj'), (' ', 'appos'), ('Google', 'compound'), ('StreetView', 'compound'), ('product', 'nsubj'), ('uses', 'ccomp'), ('AI', 'dobj'), (' ', 'nsubj'), ('automatically', 'advmod'), ('recognize', 'xcomp'), ('street', 'compound'), ('signs', 'dobj'), ('business', 'compound'), (' ', 'compound'), ('signs', 'conj'), ('help', 'advcl'), ('define', 'xcomp'), ('location', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[ , ▷], [▷, Google], [Google, (], [(, Alphabet], [Alphabet, ):], [):, Google], [Google, CEO], [CEO, Sundar], [Sundar, Pichai], [Pichai,  ], [ , indicates], [indicates, users], [users, tap], [tap, Google], [Google, Maps], [Maps,  ], [ , Google], [Google, StreetView], [StreetView, product], [product, uses], [uses, AI], [AI,  ], [ , automatically], [automatically, recognize], [recognize, street], [street, signs], [signs, business], [business,  ], [ , signs], [signs, help], [help, define], [define, location], [location, .]]

>> Trigrams: 
[[ , ▷, Google], [▷, Google, (], [Google, (, Alphabet], [(, Alphabet, ):], [Alphabet, ):, Google], [):, Google, CEO], [Google, CEO, Sundar], [CEO, Sundar, Pichai], [Sundar, Pichai,  ], [Pichai,  , indicates], [ , indicates, users], [indicates, users, tap], [users, tap, Google], [tap, Google, Maps], [Google, Maps,  ], [Maps,  , Google], [ , Google, StreetView], [Google, StreetView, product], [StreetView, product, uses], [product, uses, AI], [uses, AI,  ], [AI,  , automatically], [ , automatically, recognize], [automatically, recognize, street], [recognize, street, signs], [street, signs, business], [signs, business,  ], [business,  , signs], [ , signs, help], [signs, help, define], [help, define, location], [define, location, .]]

>> Noun Phrases are: 
[▷ Google, Alphabet, Google CEO Sundar Pichai, users, Google Maps, the Google StreetView product, AI, street signs, business  signs, the location]

>> Named Entities are: 
[('Sundar Pichai', 'PERSON'), ('AI', 'ORG')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 21 =================================

 ▷ Microsoft: Microsoft’s AI uses a cognitive vision  system in PowerPoint that analyzes photos and  auto-generates Alt-Text or suggests diagrams that  illustrate that process. 

------------------- Sentence 1 -------------------

 ▷ Microsoft: Microsoft’s AI uses a cognitive vision  system in PowerPoint that analyzes photos and  auto-generates Alt-Text or suggests diagrams that  illustrate that process. 


>> Tokens are: 
[ , ▷, Microsoft, :, Microsoft, AI, uses, cognitive, vision,  , system, PowerPoint, analyzes, photos,  , auto, -, generates, Alt, -, Text, suggests, diagrams,  , illustrate, process, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('▷', 'PROPN'), ('Microsoft', 'PROPN'), (':', 'PUNCT'), ('Microsoft', 'PROPN'), ('AI', 'PROPN'), ('uses', 'VERB'), ('cognitive', 'ADJ'), ('vision', 'NOUN'), (' ', 'SPACE'), ('system', 'NOUN'), ('PowerPoint', 'PROPN'), ('analyzes', 'VERB'), ('photos', 'NOUN'), (' ', 'SPACE'), ('auto', 'NOUN'), ('-', 'PUNCT'), ('generates', 'VERB'), ('Alt', 'PROPN'), ('-', 'PUNCT'), ('Text', 'PROPN'), ('suggests', 'VERB'), ('diagrams', 'NOUN'), (' ', 'SPACE'), ('illustrate', 'VERB'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('▷', 'compound'), ('Microsoft', 'nsubj'), (':', 'punct'), ('Microsoft', 'poss'), ('AI', 'nsubj'), ('uses', 'ROOT'), ('cognitive', 'amod'), ('vision', 'nmod'), (' ', 'compound'), ('system', 'dobj'), ('PowerPoint', 'pobj'), ('analyzes', 'relcl'), ('photos', 'dobj'), (' ', 'conj'), ('auto', 'compound'), ('-', 'punct'), ('generates', 'compound'), ('Alt', 'compound'), ('-', 'punct'), ('Text', 'appos'), ('suggests', 'conj'), ('diagrams', 'dobj'), (' ', 'nsubj'), ('illustrate', 'acl'), ('process', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[ , ▷], [▷, Microsoft], [Microsoft, :], [:, Microsoft], [Microsoft, AI], [AI, uses], [uses, cognitive], [cognitive, vision], [vision,  ], [ , system], [system, PowerPoint], [PowerPoint, analyzes], [analyzes, photos], [photos,  ], [ , auto], [auto, -], [-, generates], [generates, Alt], [Alt, -], [-, Text], [Text, suggests], [suggests, diagrams], [diagrams,  ], [ , illustrate], [illustrate, process], [process, .]]

>> Trigrams: 
[[ , ▷, Microsoft], [▷, Microsoft, :], [Microsoft, :, Microsoft], [:, Microsoft, AI], [Microsoft, AI, uses], [AI, uses, cognitive], [uses, cognitive, vision], [cognitive, vision,  ], [vision,  , system], [ , system, PowerPoint], [system, PowerPoint, analyzes], [PowerPoint, analyzes, photos], [analyzes, photos,  ], [photos,  , auto], [ , auto, -], [auto, -, generates], [-, generates, Alt], [generates, Alt, -], [Alt, -, Text], [-, Text, suggests], [Text, suggests, diagrams], [suggests, diagrams,  ], [diagrams,  , illustrate], [ , illustrate, process], [illustrate, process, .]]

>> Noun Phrases are: 
[ ▷ Microsoft, Microsoft’s AI, a cognitive vision  system, PowerPoint, photos, auto-generates Alt-Text, diagrams, that process]

>> Named Entities are: 
[('Microsoft', 'PERSON'), ('Microsoft’s', 'ORG'), ('AI', 'ORG'), ('PowerPoint', 'ORG')] 


================================ Paragraph 22 =================================

 ▷ NVIDIA: NVIDIA DRIVE™ PX is the open AI car  computing platform that enables automakers  and tier 1 suppliers to accelerate production of  automated and autonomous vehicles. 

------------------- Sentence 1 -------------------

 ▷ NVIDIA: NVIDIA DRIVE™ PX is the open AI car  computing platform that enables automakers  and tier 1 suppliers to accelerate production of  automated and autonomous vehicles. 


>> Tokens are: 
[ , ▷, NVIDIA, :, NVIDIA, DRIVE, ™, PX, open, AI, car,  , computing, platform, enables, automakers,  , tier, 1, suppliers, accelerate, production,  , automated, autonomous, vehicles, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('▷', 'PROPN'), ('NVIDIA', 'PROPN'), (':', 'PUNCT'), ('NVIDIA', 'PROPN'), ('DRIVE', 'VERB'), ('™', 'NUM'), ('PX', 'PROPN'), ('open', 'ADJ'), ('AI', 'PROPN'), ('car', 'NOUN'), (' ', 'SPACE'), ('computing', 'VERB'), ('platform', 'NOUN'), ('enables', 'VERB'), ('automakers', 'NOUN'), (' ', 'SPACE'), ('tier', 'NOUN'), ('1', 'NUM'), ('suppliers', 'NOUN'), ('accelerate', 'VERB'), ('production', 'NOUN'), (' ', 'SPACE'), ('automated', 'VERB'), ('autonomous', 'ADJ'), ('vehicles', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('▷', 'compound'), ('NVIDIA', 'dep'), (':', 'punct'), ('NVIDIA', 'nsubj'), ('DRIVE', 'ROOT'), ('™', 'amod'), ('PX', 'nsubj'), ('open', 'amod'), ('AI', 'compound'), ('car', 'attr'), (' ', 'nummod'), ('computing', 'acl'), ('platform', 'dobj'), ('enables', 'relcl'), ('automakers', 'compound'), (' ', 'dobj'), ('tier', 'nmod'), ('1', 'nummod'), ('suppliers', 'conj'), ('accelerate', 'advcl'), ('production', 'dobj'), (' ', 'pobj'), ('automated', 'amod'), ('autonomous', 'conj'), ('vehicles', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[ , ▷], [▷, NVIDIA], [NVIDIA, :], [:, NVIDIA], [NVIDIA, DRIVE], [DRIVE, ™], [™, PX], [PX, open], [open, AI], [AI, car], [car,  ], [ , computing], [computing, platform], [platform, enables], [enables, automakers], [automakers,  ], [ , tier], [tier, 1], [1, suppliers], [suppliers, accelerate], [accelerate, production], [production,  ], [ , automated], [automated, autonomous], [autonomous, vehicles], [vehicles, .]]

>> Trigrams: 
[[ , ▷, NVIDIA], [▷, NVIDIA, :], [NVIDIA, :, NVIDIA], [:, NVIDIA, DRIVE], [NVIDIA, DRIVE, ™], [DRIVE, ™, PX], [™, PX, open], [PX, open, AI], [open, AI, car], [AI, car,  ], [car,  , computing], [ , computing, platform], [computing, platform, enables], [platform, enables, automakers], [enables, automakers,  ], [automakers,  , tier], [ , tier, 1], [tier, 1, suppliers], [1, suppliers, accelerate], [suppliers, accelerate, production], [accelerate, production,  ], [production,  , automated], [ , automated, autonomous], [automated, autonomous, vehicles], [autonomous, vehicles, .]]

>> Noun Phrases are: 
[NVIDIA, ™ PX, the open AI car, platform, tier 1 suppliers, production, automated and autonomous vehicles]

>> Named Entities are: 
[('PX', 'ORG'), ('AI', 'ORG'), ('1', 'CARDINAL')] 


================================ Paragraph 23 =================================

IMPORTANCE OF AI Research by Forrester called “Artificial Intelligence:  What’s Possible for Enterprises in 2017” indicates  that AI is finally becoming a reality and that more  organizations, researchers and educational institutions  are looking at its potential. The report found that “only  12% of the 391 business and technology professionals it  polled are currently using AI systems. However, 58% are  researching AI technologies and what it takes to support  their use in the enterprise, and 39% are identifying and  designing AI capacities to deploy. The report, published  in November 2016, also found that 36% of respondents  are educating the business or building the business  case about AI’s potential.”  

------------------- Sentence 1 -------------------

IMPORTANCE OF AI Research by Forrester called “Artificial Intelligence:   


>> Tokens are: 
[IMPORTANCE, AI, Research, Forrester, called, “, Artificial, Intelligence, :,  ] 

>> PoS Tags are: 
[('IMPORTANCE', 'PROPN'), ('AI', 'PROPN'), ('Research', 'PROPN'), ('Forrester', 'PROPN'), ('called', 'VERB'), ('“', 'PUNCT'), ('Artificial', 'PROPN'), ('Intelligence', 'PROPN'), (':', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('IMPORTANCE', 'nsubj'), ('AI', 'compound'), ('Research', 'pobj'), ('Forrester', 'pobj'), ('called', 'ROOT'), ('“', 'punct'), ('Artificial', 'compound'), ('Intelligence', 'oprd'), (':', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[IMPORTANCE, AI], [AI, Research], [Research, Forrester], [Forrester, called], [called, “], [“, Artificial], [Artificial, Intelligence], [Intelligence, :], [:,  ]]

>> Trigrams: 
[[IMPORTANCE, AI, Research], [AI, Research, Forrester], [Research, Forrester, called], [Forrester, called, “], [called, “, Artificial], [“, Artificial, Intelligence], [Artificial, Intelligence, :], [Intelligence, :,  ]]

>> Noun Phrases are: 
[IMPORTANCE, AI Research, Forrester, “Artificial Intelligence]

>> Named Entities are: 
[('IMPORTANCE OF AI Research', 'ORG'), ('Forrester', 'PERSON'), ('Artificial Intelligence:  ', 'WORK_OF_ART')] 

------------------- Sentence 2 -------------------

What’s Possible for Enterprises in 2017” indicates  that AI is finally becoming a reality and that more  organizations, researchers and educational institutions  are looking at its potential. 


>> Tokens are: 
[Possible, Enterprises, 2017, ”, indicates,  , AI, finally, reality,  , organizations, ,, researchers, educational, institutions,  , looking, potential, .] 

>> PoS Tags are: 
[('Possible', 'ADJ'), ('Enterprises', 'PROPN'), ('2017', 'NUM'), ('”', 'PUNCT'), ('indicates', 'VERB'), (' ', 'SPACE'), ('AI', 'PROPN'), ('finally', 'ADV'), ('reality', 'NOUN'), (' ', 'SPACE'), ('organizations', 'NOUN'), (',', 'PUNCT'), ('researchers', 'NOUN'), ('educational', 'ADJ'), ('institutions', 'NOUN'), (' ', 'SPACE'), ('looking', 'VERB'), ('potential', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Possible', 'acomp'), ('Enterprises', 'pobj'), ('2017', 'pobj'), ('”', 'punct'), ('indicates', 'ROOT'), (' ', 'dobj'), ('AI', 'nsubj'), ('finally', 'advmod'), ('reality', 'attr'), (' ', 'compound'), ('organizations', 'nsubj'), (',', 'punct'), ('researchers', 'conj'), ('educational', 'amod'), ('institutions', 'conj'), (' ', 'appos'), ('looking', 'conj'), ('potential', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Possible, Enterprises], [Enterprises, 2017], [2017, ”], [”, indicates], [indicates,  ], [ , AI], [AI, finally], [finally, reality], [reality,  ], [ , organizations], [organizations, ,], [,, researchers], [researchers, educational], [educational, institutions], [institutions,  ], [ , looking], [looking, potential], [potential, .]]

>> Trigrams: 
[[Possible, Enterprises, 2017], [Enterprises, 2017, ”], [2017, ”, indicates], [”, indicates,  ], [indicates,  , AI], [ , AI, finally], [AI, finally, reality], [finally, reality,  ], [reality,  , organizations], [ , organizations, ,], [organizations, ,, researchers], [,, researchers, educational], [researchers, educational, institutions], [educational, institutions,  ], [institutions,  , looking], [ , looking, potential], [looking, potential, .]]

>> Noun Phrases are: 
[What, Enterprises, AI, a reality, more  organizations, researchers, educational institutions, its potential]

>> Named Entities are: 
[('2017', 'DATE'), ('AI', 'ORG')] 

------------------- Sentence 3 -------------------

The report found that “only  12% of the 391 business and technology professionals it  polled are currently using AI systems. 


>> Tokens are: 
[report, found, “,  , 12, %, 391, business, technology, professionals,  , polled, currently, AI, systems, .] 

>> PoS Tags are: 
[('report', 'NOUN'), ('found', 'VERB'), ('“', 'PUNCT'), (' ', 'SPACE'), ('12', 'NUM'), ('%', 'NOUN'), ('391', 'NUM'), ('business', 'NOUN'), ('technology', 'NOUN'), ('professionals', 'NOUN'), (' ', 'SPACE'), ('polled', 'VERB'), ('currently', 'ADV'), ('AI', 'PROPN'), ('systems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('report', 'nsubj'), ('found', 'ROOT'), ('“', 'punct'), (' ', 'nsubj'), ('12', 'nummod'), ('%', 'nmod'), ('391', 'nummod'), ('business', 'nmod'), ('technology', 'conj'), ('professionals', 'pobj'), (' ', 'nsubj'), ('polled', 'relcl'), ('currently', 'advmod'), ('AI', 'compound'), ('systems', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[report, found], [found, “], [“,  ], [ , 12], [12, %], [%, 391], [391, business], [business, technology], [technology, professionals], [professionals,  ], [ , polled], [polled, currently], [currently, AI], [AI, systems], [systems, .]]

>> Trigrams: 
[[report, found, “], [found, “,  ], [“,  , 12], [ , 12, %], [12, %, 391], [%, 391, business], [391, business, technology], [business, technology, professionals], [technology, professionals,  ], [professionals,  , polled], [ , polled, currently], [polled, currently, AI], [currently, AI, systems], [AI, systems, .]]

>> Noun Phrases are: 
[The report, the 391 business and technology professionals, it, AI systems]

>> Named Entities are: 
[('12%', 'PERCENT'), ('391', 'CARDINAL'), ('AI', 'ORG')] 

------------------- Sentence 4 -------------------

However, 58% are  researching AI technologies and what it takes to support  their use in the enterprise, and 39% are identifying and  designing AI capacities to deploy. 


>> Tokens are: 
[,, 58, %,  , researching, AI, technologies, takes, support,  , use, enterprise, ,, 39, %, identifying,  , designing, AI, capacities, deploy, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('58', 'NUM'), ('%', 'NOUN'), (' ', 'SPACE'), ('researching', 'VERB'), ('AI', 'NOUN'), ('technologies', 'NOUN'), ('takes', 'VERB'), ('support', 'VERB'), (' ', 'SPACE'), ('use', 'NOUN'), ('enterprise', 'NOUN'), (',', 'PUNCT'), ('39', 'NUM'), ('%', 'NOUN'), ('identifying', 'VERB'), (' ', 'SPACE'), ('designing', 'VERB'), ('AI', 'NOUN'), ('capacities', 'NOUN'), ('deploy', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('58', 'nummod'), ('%', 'nsubj'), (' ', 'attr'), ('researching', 'acl'), ('AI', 'compound'), ('technologies', 'dobj'), ('takes', 'conj'), ('support', 'xcomp'), (' ', 'dobj'), ('use', 'dobj'), ('enterprise', 'pobj'), (',', 'punct'), ('39', 'nummod'), ('%', 'nsubj'), ('identifying', 'conj'), (' ', 'conj'), ('designing', 'acl'), ('AI', 'compound'), ('capacities', 'dobj'), ('deploy', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[,, 58], [58, %], [%,  ], [ , researching], [researching, AI], [AI, technologies], [technologies, takes], [takes, support], [support,  ], [ , use], [use, enterprise], [enterprise, ,], [,, 39], [39, %], [%, identifying], [identifying,  ], [ , designing], [designing, AI], [AI, capacities], [capacities, deploy], [deploy, .]]

>> Trigrams: 
[[,, 58, %], [58, %,  ], [%,  , researching], [ , researching, AI], [researching, AI, technologies], [AI, technologies, takes], [technologies, takes, support], [takes, support,  ], [support,  , use], [ , use, enterprise], [use, enterprise, ,], [enterprise, ,, 39], [,, 39, %], [39, %, identifying], [%, identifying,  ], [identifying,  , designing], [ , designing, AI], [designing, AI, capacities], [AI, capacities, deploy], [capacities, deploy, .]]

>> Noun Phrases are: 
[58%, AI technologies, what, it, their use, the enterprise, 39%, AI capacities]

>> Named Entities are: 
[('58%', 'PERCENT'), ('39%', 'PERCENT'), ('AI', 'ORG')] 

------------------- Sentence 5 -------------------

The report, published  in November 2016, also found that 36% of respondents  are educating the business or building the business  case about AI’s potential.” 


>> Tokens are: 
[report, ,, published,  , November, 2016, ,, found, 36, %, respondents,  , educating, business, building, business,  , case, AI, potential, ., ”] 

>> PoS Tags are: 
[('report', 'NOUN'), (',', 'PUNCT'), ('published', 'VERB'), (' ', 'SPACE'), ('November', 'PROPN'), ('2016', 'NUM'), (',', 'PUNCT'), ('found', 'VERB'), ('36', 'NUM'), ('%', 'NOUN'), ('respondents', 'NOUN'), (' ', 'SPACE'), ('educating', 'VERB'), ('business', 'NOUN'), ('building', 'VERB'), ('business', 'NOUN'), (' ', 'SPACE'), ('case', 'NOUN'), ('AI', 'PROPN'), ('potential', 'NOUN'), ('.', 'PUNCT'), ('”', 'PUNCT')] 

>> Dependency Tags are: 
[('report', 'nsubj'), (',', 'punct'), ('published', 'acl'), (' ', 'dobj'), ('November', 'pobj'), ('2016', 'nummod'), (',', 'punct'), ('found', 'ROOT'), ('36', 'nummod'), ('%', 'nsubj'), ('respondents', 'pobj'), (' ', 'nsubj'), ('educating', 'ccomp'), ('business', 'dobj'), ('building', 'conj'), ('business', 'compound'), (' ', 'compound'), ('case', 'dobj'), ('AI', 'poss'), ('potential', 'pobj'), ('.', 'punct'), ('”', 'punct')]

>> Bigrams: 
[[report, ,], [,, published], [published,  ], [ , November], [November, 2016], [2016, ,], [,, found], [found, 36], [36, %], [%, respondents], [respondents,  ], [ , educating], [educating, business], [business, building], [building, business], [business,  ], [ , case], [case, AI], [AI, potential], [potential, .], [., ”]]

>> Trigrams: 
[[report, ,, published], [,, published,  ], [published,  , November], [ , November, 2016], [November, 2016, ,], [2016, ,, found], [,, found, 36], [found, 36, %], [36, %, respondents], [%, respondents,  ], [respondents,  , educating], [ , educating, business], [educating, business, building], [business, building, business], [building, business,  ], [business,  , case], [ , case, AI], [case, AI, potential], [AI, potential, .], [potential, ., ”]]

>> Noun Phrases are: 
[The report, November, 36%, respondents, the business, the business  case, AI’s potential]

>> Named Entities are: 
[('November 2016', 'DATE'), ('36%', 'PERCENT')] 

------------------- Sentence 6 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 24 =================================

Massive amounts of data are being created driven by  billions of sensors all around us such as cameras, smart  phones, cars as well as the large amounts of data across  enterprises, education systems and organizations. In  the age of big data, artificial intelligence (AI), machine  learning and deep learning deliver unprecedented  insights in the massive amounts of data.   

------------------- Sentence 1 -------------------

Massive amounts of data are being created driven by  billions of sensors all around us such as cameras, smart  phones, cars as well as the large amounts of data across  enterprises, education systems and organizations. 


>> Tokens are: 
[Massive, amounts, data, created, driven,  , billions, sensors, cameras, ,, smart,  , phones, ,, cars, large, amounts, data,  , enterprises, ,, education, systems, organizations, .] 

>> PoS Tags are: 
[('Massive', 'ADJ'), ('amounts', 'NOUN'), ('data', 'NOUN'), ('created', 'VERB'), ('driven', 'VERB'), (' ', 'SPACE'), ('billions', 'NOUN'), ('sensors', 'NOUN'), ('cameras', 'NOUN'), (',', 'PUNCT'), ('smart', 'ADJ'), (' ', 'SPACE'), ('phones', 'NOUN'), (',', 'PUNCT'), ('cars', 'NOUN'), ('large', 'ADJ'), ('amounts', 'NOUN'), ('data', 'NOUN'), (' ', 'SPACE'), ('enterprises', 'NOUN'), (',', 'PUNCT'), ('education', 'NOUN'), ('systems', 'NOUN'), ('organizations', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Massive', 'amod'), ('amounts', 'nsubjpass'), ('data', 'pobj'), ('created', 'ROOT'), ('driven', 'advcl'), (' ', 'pobj'), ('billions', 'punct'), ('sensors', 'pobj'), ('cameras', 'pobj'), (',', 'punct'), ('smart', 'amod'), (' ', 'compound'), ('phones', 'conj'), (',', 'punct'), ('cars', 'conj'), ('large', 'amod'), ('amounts', 'conj'), ('data', 'pobj'), (' ', 'nmod'), ('enterprises', 'pobj'), (',', 'punct'), ('education', 'compound'), ('systems', 'conj'), ('organizations', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Massive, amounts], [amounts, data], [data, created], [created, driven], [driven,  ], [ , billions], [billions, sensors], [sensors, cameras], [cameras, ,], [,, smart], [smart,  ], [ , phones], [phones, ,], [,, cars], [cars, large], [large, amounts], [amounts, data], [data,  ], [ , enterprises], [enterprises, ,], [,, education], [education, systems], [systems, organizations], [organizations, .]]

>> Trigrams: 
[[Massive, amounts, data], [amounts, data, created], [data, created, driven], [created, driven,  ], [driven,  , billions], [ , billions, sensors], [billions, sensors, cameras], [sensors, cameras, ,], [cameras, ,, smart], [,, smart,  ], [smart,  , phones], [ , phones, ,], [phones, ,, cars], [,, cars, large], [cars, large, amounts], [large, amounts, data], [amounts, data,  ], [data,  , enterprises], [ , enterprises, ,], [enterprises, ,, education], [,, education, systems], [education, systems, organizations], [systems, organizations, .]]

>> Noun Phrases are: 
[Massive amounts, data, sensors, us, cameras, smart  phones, cars, the large amounts, data,  enterprises, education systems, organizations]

>> Named Entities are: 
[('billions', 'CARDINAL')] 

------------------- Sentence 2 -------------------

In  the age of big data, artificial intelligence (AI), machine  learning and deep learning deliver unprecedented  insights in the massive amounts of data. 


>> Tokens are: 
[ , age, big, data, ,, artificial, intelligence, (, AI, ), ,, machine,  , learning, deep, learning, deliver, unprecedented,  , insights, massive, amounts, data, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('age', 'NOUN'), ('big', 'ADJ'), ('data', 'NOUN'), (',', 'PUNCT'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('(', 'PUNCT'), ('AI', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('machine', 'NOUN'), (' ', 'SPACE'), ('learning', 'NOUN'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('deliver', 'VERB'), ('unprecedented', 'ADJ'), (' ', 'SPACE'), ('insights', 'NOUN'), ('massive', 'ADJ'), ('amounts', 'NOUN'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'pobj'), ('age', 'pobj'), ('big', 'amod'), ('data', 'pobj'), (',', 'punct'), ('artificial', 'amod'), ('intelligence', 'conj'), ('(', 'punct'), ('AI', 'appos'), (')', 'punct'), (',', 'punct'), ('machine', 'nmod'), (' ', 'punct'), ('learning', 'nsubj'), ('deep', 'amod'), ('learning', 'conj'), ('deliver', 'ROOT'), ('unprecedented', 'amod'), (' ', 'compound'), ('insights', 'dobj'), ('massive', 'amod'), ('amounts', 'pobj'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , age], [age, big], [big, data], [data, ,], [,, artificial], [artificial, intelligence], [intelligence, (], [(, AI], [AI, )], [), ,], [,, machine], [machine,  ], [ , learning], [learning, deep], [deep, learning], [learning, deliver], [deliver, unprecedented], [unprecedented,  ], [ , insights], [insights, massive], [massive, amounts], [amounts, data], [data, .]]

>> Trigrams: 
[[ , age, big], [age, big, data], [big, data, ,], [data, ,, artificial], [,, artificial, intelligence], [artificial, intelligence, (], [intelligence, (, AI], [(, AI, )], [AI, ), ,], [), ,, machine], [,, machine,  ], [machine,  , learning], [ , learning, deep], [learning, deep, learning], [deep, learning, deliver], [learning, deliver, unprecedented], [deliver, unprecedented,  ], [unprecedented,  , insights], [ , insights, massive], [insights, massive, amounts], [massive, amounts, data], [amounts, data, .]]

>> Noun Phrases are: 
[the age, big data, artificial intelligence, (AI, machine  learning, deep learning, unprecedented  insights, the massive amounts, data]

>> Named Entities are: 
[('AI', 'ORG')] 

------------------- Sentence 3 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 25 =================================

Amazon CEO Jeff Bezos spoke about the potential of  artificial intelligence and machine learning at the 2017  Internet Association‘s annual gala in Washington, D.C.,  “It is a renaissance, it is a golden age,” Bezos said.  “We are solving problems with machine learning and  artificial intelligence that were in the realm of science  fiction for the last several decades. Natural language  understanding, machine vision problems, it really is  an amazing renaissance.” Machine learning and AI is a  horizontal enabling layer. It will empower and improve  every business, every government organization, every  philanthropy — basically there’s no institution in the  world that cannot be improved with machine learning.” 

------------------- Sentence 1 -------------------

Amazon CEO Jeff Bezos spoke about the potential of  artificial intelligence and machine learning at the 2017  Internet Association‘s annual gala in Washington, D.C.,   


>> Tokens are: 
[Amazon, CEO, Jeff, Bezos, spoke, potential,  , artificial, intelligence, machine, learning, 2017,  , Internet, Association‘s, annual, gala, Washington, ,, D.C., ,,  ] 

>> PoS Tags are: 
[('Amazon', 'PROPN'), ('CEO', 'PROPN'), ('Jeff', 'PROPN'), ('Bezos', 'PROPN'), ('spoke', 'VERB'), ('potential', 'NOUN'), (' ', 'SPACE'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('2017', 'NUM'), (' ', 'SPACE'), ('Internet', 'NOUN'), ('Association‘s', 'NOUN'), ('annual', 'ADJ'), ('gala', 'NOUN'), ('Washington', 'PROPN'), (',', 'PUNCT'), ('D.C.', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Amazon', 'compound'), ('CEO', 'compound'), ('Jeff', 'compound'), ('Bezos', 'nsubj'), ('spoke', 'ROOT'), ('potential', 'pobj'), (' ', 'nmod'), ('artificial', 'amod'), ('intelligence', 'pobj'), ('machine', 'conj'), ('learning', 'pobj'), ('2017', 'nummod'), (' ', 'nmod'), ('Internet', 'nmod'), ('Association‘s', 'nmod'), ('annual', 'amod'), ('gala', 'pobj'), ('Washington', 'pobj'), (',', 'punct'), ('D.C.', 'appos'), (',', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Amazon, CEO], [CEO, Jeff], [Jeff, Bezos], [Bezos, spoke], [spoke, potential], [potential,  ], [ , artificial], [artificial, intelligence], [intelligence, machine], [machine, learning], [learning, 2017], [2017,  ], [ , Internet], [Internet, Association‘s], [Association‘s, annual], [annual, gala], [gala, Washington], [Washington, ,], [,, D.C.], [D.C., ,], [,,  ]]

>> Trigrams: 
[[Amazon, CEO, Jeff], [CEO, Jeff, Bezos], [Jeff, Bezos, spoke], [Bezos, spoke, potential], [spoke, potential,  ], [potential,  , artificial], [ , artificial, intelligence], [artificial, intelligence, machine], [intelligence, machine, learning], [machine, learning, 2017], [learning, 2017,  ], [2017,  , Internet], [ , Internet, Association‘s], [Internet, Association‘s, annual], [Association‘s, annual, gala], [annual, gala, Washington], [gala, Washington, ,], [Washington, ,, D.C.], [,, D.C., ,], [D.C., ,,  ]]

>> Noun Phrases are: 
[Amazon CEO Jeff Bezos, the potential,  artificial intelligence, machine, learning, the 2017  Internet Association‘s annual gala, Washington, D.C.]

>> Named Entities are: 
[('Amazon', 'ORG'), ('Jeff Bezos', 'PERSON'), ('2017', 'DATE'), ('annual', 'DATE'), ('Washington', 'GPE'), ('D.C.', 'GPE')] 

------------------- Sentence 2 -------------------

“It is a renaissance, it is a golden age,” Bezos said. 


>> Tokens are: 
[“, renaissance, ,, golden, age, ,, ”, Bezos, said, .] 

>> PoS Tags are: 
[('“', 'PUNCT'), ('renaissance', 'NOUN'), (',', 'PUNCT'), ('golden', 'ADJ'), ('age', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('Bezos', 'PROPN'), ('said', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('“', 'punct'), ('renaissance', 'attr'), (',', 'punct'), ('golden', 'amod'), ('age', 'attr'), (',', 'punct'), ('”', 'punct'), ('Bezos', 'nsubj'), ('said', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[“, renaissance], [renaissance, ,], [,, golden], [golden, age], [age, ,], [,, ”], [”, Bezos], [Bezos, said], [said, .]]

>> Trigrams: 
[[“, renaissance, ,], [renaissance, ,, golden], [,, golden, age], [golden, age, ,], [age, ,, ”], [,, ”, Bezos], [”, Bezos, said], [Bezos, said, .]]

>> Noun Phrases are: 
[It, a renaissance, it, a golden age, Bezos]

>> Named Entities are: 
[('Bezos', 'PERSON')] 

------------------- Sentence 3 -------------------

 “We are solving problems with machine learning and  artificial intelligence that were in the realm of science  fiction for the last several decades. 


>> Tokens are: 
[ , “, solving, problems, machine, learning,  , artificial, intelligence, realm, science,  , fiction, decades, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('“', 'PUNCT'), ('solving', 'VERB'), ('problems', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), (' ', 'SPACE'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('realm', 'NOUN'), ('science', 'NOUN'), (' ', 'SPACE'), ('fiction', 'NOUN'), ('decades', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'dep'), ('“', 'punct'), ('solving', 'ROOT'), ('problems', 'dobj'), ('machine', 'compound'), ('learning', 'pobj'), (' ', 'nmod'), ('artificial', 'amod'), ('intelligence', 'conj'), ('realm', 'pobj'), ('science', 'compound'), (' ', 'compound'), ('fiction', 'pobj'), ('decades', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , “], [“, solving], [solving, problems], [problems, machine], [machine, learning], [learning,  ], [ , artificial], [artificial, intelligence], [intelligence, realm], [realm, science], [science,  ], [ , fiction], [fiction, decades], [decades, .]]

>> Trigrams: 
[[ , “, solving], [“, solving, problems], [solving, problems, machine], [problems, machine, learning], [machine, learning,  ], [learning,  , artificial], [ , artificial, intelligence], [artificial, intelligence, realm], [intelligence, realm, science], [realm, science,  ], [science,  , fiction], [ , fiction, decades], [fiction, decades, .]]

>> Noun Phrases are: 
[We, problems, machine learning,  artificial intelligence, the realm, science  fiction, the last several decades]

>> Named Entities are: 
[('the last several decades', 'DATE')] 

------------------- Sentence 4 -------------------

Natural language  understanding, machine vision problems, it really is  an amazing renaissance.” 


>> Tokens are: 
[Natural, language,  , understanding, ,, machine, vision, problems, ,,  , amazing, renaissance, ., ”] 

>> PoS Tags are: 
[('Natural', 'ADJ'), ('language', 'NOUN'), (' ', 'SPACE'), ('understanding', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('vision', 'NOUN'), ('problems', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('amazing', 'ADJ'), ('renaissance', 'NOUN'), ('.', 'PUNCT'), ('”', 'PUNCT')] 

>> Dependency Tags are: 
[('Natural', 'amod'), ('language', 'compound'), (' ', 'prep'), ('understanding', 'appos'), (',', 'punct'), ('machine', 'compound'), ('vision', 'compound'), ('problems', 'dobj'), (',', 'punct'), (' ', 'attr'), ('amazing', 'amod'), ('renaissance', 'attr'), ('.', 'punct'), ('”', 'punct')]

>> Bigrams: 
[[Natural, language], [language,  ], [ , understanding], [understanding, ,], [,, machine], [machine, vision], [vision, problems], [problems, ,], [,,  ], [ , amazing], [amazing, renaissance], [renaissance, .], [., ”]]

>> Trigrams: 
[[Natural, language,  ], [language,  , understanding], [ , understanding, ,], [understanding, ,, machine], [,, machine, vision], [machine, vision, problems], [vision, problems, ,], [problems, ,,  ], [,,  , amazing], [ , amazing, renaissance], [amazing, renaissance, .], [renaissance, ., ”]]

>> Noun Phrases are: 
[understanding, machine vision problems, it, an amazing renaissance]

>> Named Entities are: 
[] 

------------------- Sentence 5 -------------------

Machine learning and AI is a  horizontal enabling layer. 


>> Tokens are: 
[Machine, learning, AI,  , horizontal, enabling, layer, .] 

>> PoS Tags are: 
[('Machine', 'NOUN'), ('learning', 'NOUN'), ('AI', 'PROPN'), (' ', 'SPACE'), ('horizontal', 'ADJ'), ('enabling', 'VERB'), ('layer', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Machine', 'compound'), ('learning', 'nsubj'), ('AI', 'conj'), (' ', 'nmod'), ('horizontal', 'amod'), ('enabling', 'amod'), ('layer', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[Machine, learning], [learning, AI], [AI,  ], [ , horizontal], [horizontal, enabling], [enabling, layer], [layer, .]]

>> Trigrams: 
[[Machine, learning, AI], [learning, AI,  ], [AI,  , horizontal], [ , horizontal, enabling], [horizontal, enabling, layer], [enabling, layer, .]]

>> Noun Phrases are: 
[Machine learning, AI, a  horizontal enabling layer]

>> Named Entities are: 
[('AI', 'ORG')] 

------------------- Sentence 6 -------------------

It will empower and improve  every business, every government organization, every  philanthropy — basically there’s no institution in the  world that cannot be improved with machine learning.” 


>> Tokens are: 
[empower, improve,  , business, ,, government, organization, ,,  , philanthropy, —, basically, institution,  , world, improved, machine, learning, ., ”] 

>> PoS Tags are: 
[('empower', 'VERB'), ('improve', 'VERB'), (' ', 'SPACE'), ('business', 'NOUN'), (',', 'PUNCT'), ('government', 'NOUN'), ('organization', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('philanthropy', 'NOUN'), ('—', 'PUNCT'), ('basically', 'ADV'), ('institution', 'NOUN'), (' ', 'SPACE'), ('world', 'NOUN'), ('improved', 'VERB'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('.', 'PUNCT'), ('”', 'PUNCT')] 

>> Dependency Tags are: 
[('empower', 'ccomp'), ('improve', 'conj'), (' ', 'dobj'), ('business', 'dobj'), (',', 'punct'), ('government', 'compound'), ('organization', 'npadvmod'), (',', 'punct'), (' ', 'compound'), ('philanthropy', 'appos'), ('—', 'punct'), ('basically', 'advmod'), ('institution', 'attr'), (' ', 'compound'), ('world', 'pobj'), ('improved', 'relcl'), ('machine', 'compound'), ('learning', 'pobj'), ('.', 'punct'), ('”', 'punct')]

>> Bigrams: 
[[empower, improve], [improve,  ], [ , business], [business, ,], [,, government], [government, organization], [organization, ,], [,,  ], [ , philanthropy], [philanthropy, —], [—, basically], [basically, institution], [institution,  ], [ , world], [world, improved], [improved, machine], [machine, learning], [learning, .], [., ”]]

>> Trigrams: 
[[empower, improve,  ], [improve,  , business], [ , business, ,], [business, ,, government], [,, government, organization], [government, organization, ,], [organization, ,,  ], [,,  , philanthropy], [ , philanthropy, —], [philanthropy, —, basically], [—, basically, institution], [basically, institution,  ], [institution,  , world], [ , world, improved], [world, improved, machine], [improved, machine, learning], [machine, learning, .], [learning, ., ”]]

>> Noun Phrases are: 
[It, every business, every  philanthropy, no institution, the  world, machine learning]

>> Named Entities are: 
[] 


================================ Paragraph 26 =================================

Technology companies such as Amazon, Apple,  Baidu, Facebook, Google (Alphabet), Microsoft and  NVIDIA have dedicated teams working on AI projects  in areas such as image recognition, natural language  understanding, visual search, robotics, self-driving cars  and text-to-speech. Examples of their innovative AI,  machine and deep learning projects include: 

------------------- Sentence 1 -------------------

Technology companies such as Amazon, Apple,   


>> Tokens are: 
[Technology, companies, Amazon, ,, Apple, ,,  ] 

>> PoS Tags are: 
[('Technology', 'NOUN'), ('companies', 'NOUN'), ('Amazon', 'PROPN'), (',', 'PUNCT'), ('Apple', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Technology', 'compound'), ('companies', 'ROOT'), ('Amazon', 'pobj'), (',', 'punct'), ('Apple', 'conj'), (',', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Technology, companies], [companies, Amazon], [Amazon, ,], [,, Apple], [Apple, ,], [,,  ]]

>> Trigrams: 
[[Technology, companies, Amazon], [companies, Amazon, ,], [Amazon, ,, Apple], [,, Apple, ,], [Apple, ,,  ]]

>> Noun Phrases are: 
[Technology companies, Amazon, Apple]

>> Named Entities are: 
[('Amazon', 'ORG'), ('Apple', 'ORG')] 

------------------- Sentence 2 -------------------

Baidu, Facebook, Google (Alphabet), Microsoft and  NVIDIA have dedicated teams working on AI projects  in areas such as image recognition, natural language  understanding, visual search, robotics, self-driving cars  and text-to-speech. 


>> Tokens are: 
[Baidu, ,, Facebook, ,, Google, (, Alphabet, ), ,, Microsoft,  , NVIDIA, dedicated, teams, working, AI, projects,  , areas, image, recognition, ,, natural, language,  , understanding, ,, visual, search, ,, robotics, ,, self, -, driving, cars,  , text, -, -, speech, .] 

>> PoS Tags are: 
[('Baidu', 'PROPN'), (',', 'PUNCT'), ('Facebook', 'PROPN'), (',', 'PUNCT'), ('Google', 'PROPN'), ('(', 'PUNCT'), ('Alphabet', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('Microsoft', 'PROPN'), (' ', 'SPACE'), ('NVIDIA', 'PROPN'), ('dedicated', 'VERB'), ('teams', 'NOUN'), ('working', 'VERB'), ('AI', 'PROPN'), ('projects', 'NOUN'), (' ', 'SPACE'), ('areas', 'NOUN'), ('image', 'NOUN'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('natural', 'ADJ'), ('language', 'NOUN'), (' ', 'SPACE'), ('understanding', 'NOUN'), (',', 'PUNCT'), ('visual', 'ADJ'), ('search', 'NOUN'), (',', 'PUNCT'), ('robotics', 'NOUN'), (',', 'PUNCT'), ('self', 'NOUN'), ('-', 'PUNCT'), ('driving', 'VERB'), ('cars', 'NOUN'), (' ', 'SPACE'), ('text', 'NOUN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('speech', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Baidu', 'nsubj'), (',', 'punct'), ('Facebook', 'npadvmod'), (',', 'punct'), ('Google', 'conj'), ('(', 'punct'), ('Alphabet', 'appos'), (')', 'punct'), (',', 'punct'), ('Microsoft', 'conj'), (' ', 'compound'), ('NVIDIA', 'conj'), ('dedicated', 'amod'), ('teams', 'dobj'), ('working', 'acl'), ('AI', 'compound'), ('projects', 'pobj'), (' ', 'dobj'), ('areas', 'pobj'), ('image', 'compound'), ('recognition', 'pobj'), (',', 'punct'), ('natural', 'amod'), ('language', 'conj'), (' ', 'punct'), ('understanding', 'pobj'), (',', 'punct'), ('visual', 'amod'), ('search', 'conj'), (',', 'punct'), ('robotics', 'conj'), (',', 'punct'), ('self', 'npadvmod'), ('-', 'punct'), ('driving', 'amod'), ('cars', 'compound'), (' ', 'conj'), ('text', 'conj'), ('-', 'punct'), ('-', 'punct'), ('speech', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Baidu, ,], [,, Facebook], [Facebook, ,], [,, Google], [Google, (], [(, Alphabet], [Alphabet, )], [), ,], [,, Microsoft], [Microsoft,  ], [ , NVIDIA], [NVIDIA, dedicated], [dedicated, teams], [teams, working], [working, AI], [AI, projects], [projects,  ], [ , areas], [areas, image], [image, recognition], [recognition, ,], [,, natural], [natural, language], [language,  ], [ , understanding], [understanding, ,], [,, visual], [visual, search], [search, ,], [,, robotics], [robotics, ,], [,, self], [self, -], [-, driving], [driving, cars], [cars,  ], [ , text], [text, -], [-, -], [-, speech], [speech, .]]

>> Trigrams: 
[[Baidu, ,, Facebook], [,, Facebook, ,], [Facebook, ,, Google], [,, Google, (], [Google, (, Alphabet], [(, Alphabet, )], [Alphabet, ), ,], [), ,, Microsoft], [,, Microsoft,  ], [Microsoft,  , NVIDIA], [ , NVIDIA, dedicated], [NVIDIA, dedicated, teams], [dedicated, teams, working], [teams, working, AI], [working, AI, projects], [AI, projects,  ], [projects,  , areas], [ , areas, image], [areas, image, recognition], [image, recognition, ,], [recognition, ,, natural], [,, natural, language], [natural, language,  ], [language,  , understanding], [ , understanding, ,], [understanding, ,, visual], [,, visual, search], [visual, search, ,], [search, ,, robotics], [,, robotics, ,], [robotics, ,, self], [,, self, -], [self, -, driving], [-, driving, cars], [driving, cars,  ], [cars,  , text], [ , text, -], [text, -, -], [-, -, speech], [-, speech, .]]

>> Noun Phrases are: 
[Baidu, (Alphabet, Microsoft,  NVIDIA, dedicated teams, AI projects, areas, image recognition, natural language, understanding, visual search, robotics, text, speech]

>> Named Entities are: 
[('Alphabet', 'GPE'), ('Microsoft', 'ORG'), ('AI', 'ORG')] 

------------------- Sentence 3 -------------------

Examples of their innovative AI,  machine and deep learning projects include: 


>> Tokens are: 
[Examples, innovative, AI, ,,  , machine, deep, learning, projects, include, :] 

>> PoS Tags are: 
[('Examples', 'NOUN'), ('innovative', 'ADJ'), ('AI', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE'), ('machine', 'NOUN'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('projects', 'NOUN'), ('include', 'VERB'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Examples', 'nsubj'), ('innovative', 'amod'), ('AI', 'pobj'), (',', 'punct'), (' ', 'compound'), ('machine', 'conj'), ('deep', 'amod'), ('learning', 'compound'), ('projects', 'conj'), ('include', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[Examples, innovative], [innovative, AI], [AI, ,], [,,  ], [ , machine], [machine, deep], [deep, learning], [learning, projects], [projects, include], [include, :]]

>> Trigrams: 
[[Examples, innovative, AI], [innovative, AI, ,], [AI, ,,  ], [,,  , machine], [ , machine, deep], [machine, deep, learning], [deep, learning, projects], [learning, projects, include], [projects, include, :]]

>> Noun Phrases are: 
[Examples, their innovative AI,  machine, deep learning projects]

>> Named Entities are: 
[('AI', 'ORG')] 


================================ Paragraph 27 =================================

 ▷ Amazon: Amazon uses AI and complex learning  algorithms that continuously assess the market  dynamics to determine product recommendations  and which products are selected for the Amazon  Buy Box. 

------------------- Sentence 1 -------------------

 ▷ Amazon: Amazon uses AI and complex learning  algorithms that continuously assess the market  dynamics to determine product recommendations  and which products are selected for the Amazon  Buy Box. 


>> Tokens are: 
[ , ▷, Amazon, :, Amazon, uses, AI, complex, learning,  , algorithms, continuously, assess, market,  , dynamics, determine, product, recommendations,  , products, selected, Amazon,  , Buy, Box, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('▷', 'PROPN'), ('Amazon', 'PROPN'), (':', 'PUNCT'), ('Amazon', 'PROPN'), ('uses', 'VERB'), ('AI', 'PROPN'), ('complex', 'ADJ'), ('learning', 'NOUN'), (' ', 'SPACE'), ('algorithms', 'NOUN'), ('continuously', 'ADV'), ('assess', 'VERB'), ('market', 'NOUN'), (' ', 'SPACE'), ('dynamics', 'NOUN'), ('determine', 'VERB'), ('product', 'NOUN'), ('recommendations', 'NOUN'), (' ', 'SPACE'), ('products', 'NOUN'), ('selected', 'VERB'), ('Amazon', 'PROPN'), (' ', 'SPACE'), ('Buy', 'PROPN'), ('Box', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('▷', 'compound'), ('Amazon', 'nsubj'), (':', 'punct'), ('Amazon', 'nsubj'), ('uses', 'ROOT'), ('AI', 'dobj'), ('complex', 'amod'), ('learning', 'conj'), (' ', 'compound'), ('algorithms', 'dobj'), ('continuously', 'advmod'), ('assess', 'relcl'), ('market', 'dobj'), (' ', 'ccomp'), ('dynamics', 'dobj'), ('determine', 'advcl'), ('product', 'compound'), ('recommendations', 'dobj'), (' ', 'dobj'), ('products', 'nsubjpass'), ('selected', 'conj'), ('Amazon', 'compound'), (' ', 'nsubj'), ('Buy', 'advcl'), ('Box', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[ , ▷], [▷, Amazon], [Amazon, :], [:, Amazon], [Amazon, uses], [uses, AI], [AI, complex], [complex, learning], [learning,  ], [ , algorithms], [algorithms, continuously], [continuously, assess], [assess, market], [market,  ], [ , dynamics], [dynamics, determine], [determine, product], [product, recommendations], [recommendations,  ], [ , products], [products, selected], [selected, Amazon], [Amazon,  ], [ , Buy], [Buy, Box], [Box, .]]

>> Trigrams: 
[[ , ▷, Amazon], [▷, Amazon, :], [Amazon, :, Amazon], [:, Amazon, uses], [Amazon, uses, AI], [uses, AI, complex], [AI, complex, learning], [complex, learning,  ], [learning,  , algorithms], [ , algorithms, continuously], [algorithms, continuously, assess], [continuously, assess, market], [assess, market,  ], [market,  , dynamics], [ , dynamics, determine], [dynamics, determine, product], [determine, product, recommendations], [product, recommendations,  ], [recommendations,  , products], [ , products, selected], [products, selected, Amazon], [selected, Amazon,  ], [Amazon,  , Buy], [ , Buy, Box], [Buy, Box, .]]

>> Noun Phrases are: 
[ ▷ Amazon, Amazon, AI, complex learning,  algorithms, the market, dynamics, product recommendations, which products, Box]

>> Named Entities are: 
[('Amazon', 'ORG'), ('Amazon', 'ORG'), ('AI', 'ORG'), ('Amazon', 'ORG')] 


================================ Paragraph 28 =================================

 ▷ Apple: Apple’s Siri virtual assistant on iPhones  and other Apple hardware uses deep learning to  do searches as well as provide relevant answers  interactively using a voice interface.

------------------- Sentence 1 -------------------

 ▷ Apple: 


>> Tokens are: 
[ , ▷, Apple, :] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('▷', 'PROPN'), ('Apple', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('▷', 'compound'), ('Apple', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[ , ▷], [▷, Apple], [Apple, :]]

>> Trigrams: 
[[ , ▷, Apple], [▷, Apple, :]]

>> Noun Phrases are: 
[ ▷ Apple]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Apple’s Siri virtual assistant on iPhones  and other Apple hardware uses deep learning to  do searches as well as provide relevant answers  interactively using a voice interface. 


>> Tokens are: 
[Apple, Siri, virtual, assistant, iPhones,  , Apple, hardware, uses, deep, learning,  , searches, provide, relevant, answers,  , interactively, voice, interface, .] 

>> PoS Tags are: 
[('Apple', 'PROPN'), ('Siri', 'PROPN'), ('virtual', 'ADJ'), ('assistant', 'NOUN'), ('iPhones', 'PROPN'), (' ', 'SPACE'), ('Apple', 'PROPN'), ('hardware', 'NOUN'), ('uses', 'VERB'), ('deep', 'ADJ'), ('learning', 'NOUN'), (' ', 'SPACE'), ('searches', 'NOUN'), ('provide', 'VERB'), ('relevant', 'ADJ'), ('answers', 'NOUN'), (' ', 'SPACE'), ('interactively', 'ADV'), ('voice', 'NOUN'), ('interface', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Apple', 'poss'), ('Siri', 'nmod'), ('virtual', 'amod'), ('assistant', 'nsubj'), ('iPhones', 'compound'), (' ', 'pobj'), ('Apple', 'compound'), ('hardware', 'conj'), ('uses', 'ROOT'), ('deep', 'amod'), ('learning', 'dobj'), (' ', 'pobj'), ('searches', 'dobj'), ('provide', 'xcomp'), ('relevant', 'amod'), ('answers', 'dobj'), (' ', 'dobj'), ('interactively', 'advmod'), ('voice', 'compound'), ('interface', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Apple, Siri], [Siri, virtual], [virtual, assistant], [assistant, iPhones], [iPhones,  ], [ , Apple], [Apple, hardware], [hardware, uses], [uses, deep], [deep, learning], [learning,  ], [ , searches], [searches, provide], [provide, relevant], [relevant, answers], [answers,  ], [ , interactively], [interactively, voice], [voice, interface], [interface, .]]

>> Trigrams: 
[[Apple, Siri, virtual], [Siri, virtual, assistant], [virtual, assistant, iPhones], [assistant, iPhones,  ], [iPhones,  , Apple], [ , Apple, hardware], [Apple, hardware, uses], [hardware, uses, deep], [uses, deep, learning], [deep, learning,  ], [learning,  , searches], [ , searches, provide], [searches, provide, relevant], [provide, relevant, answers], [relevant, answers,  ], [answers,  , interactively], [ , interactively, voice], [interactively, voice, interface], [voice, interface, .]]

>> Noun Phrases are: 
[Apple’s Siri virtual assistant, other Apple hardware, deep learning, searches, relevant answers, a voice interface]

>> Named Entities are: 
[('Apple’s', 'ORG'), ('iPhones', 'ORG'), ('Apple', 'ORG')] 


================================ Paragraph 29 =================================

DATANAMI: ACCELER ATE DEEP LEARNING WITH A MODERN DATA PLATFORM 

------------------- Sentence 1 -------------------

DATANAMI: ACCELER ATE DEEP LEARNING WITH A MODERN DATA PLATFORM 


>> Tokens are: 
[DATANAMI, :, ACCELER, ATE, DEEP, LEARNING, MODERN, DATA, PLATFORM] 

>> PoS Tags are: 
[('DATANAMI', 'PROPN'), (':', 'PUNCT'), ('ACCELER', 'ADJ'), ('ATE', 'VERB'), ('DEEP', 'ADJ'), ('LEARNING', 'NOUN'), ('MODERN', 'PROPN'), ('DATA', 'PROPN'), ('PLATFORM', 'NOUN')] 

>> Dependency Tags are: 
[('DATANAMI', 'dep'), (':', 'punct'), ('ACCELER', 'nsubj'), ('ATE', 'ROOT'), ('DEEP', 'amod'), ('LEARNING', 'dobj'), ('MODERN', 'compound'), ('DATA', 'compound'), ('PLATFORM', 'pobj')]

>> Bigrams: 
[[DATANAMI, :], [:, ACCELER], [ACCELER, ATE], [ATE, DEEP], [DEEP, LEARNING], [LEARNING, MODERN], [MODERN, DATA], [DATA, PLATFORM]]

>> Trigrams: 
[[DATANAMI, :, ACCELER], [:, ACCELER, ATE], [ACCELER, ATE, DEEP], [ATE, DEEP, LEARNING], [DEEP, LEARNING, MODERN], [LEARNING, MODERN, DATA], [MODERN, DATA, PLATFORM]]

>> Noun Phrases are: 
[DEEP LEARNING, A MODERN DATA PLATFORM]

>> Named Entities are: 
[] 


================================ Paragraph 30 =================================

4TABOR CUSTOM PUBLISHING 

------------------- Sentence 1 -------------------

4TABOR CUSTOM PUBLISHING 


>> Tokens are: 
[4TABOR, CUSTOM, PUBLISHING] 

>> PoS Tags are: 
[('4TABOR', 'PROPN'), ('CUSTOM', 'NOUN'), ('PUBLISHING', 'NOUN')] 

>> Dependency Tags are: 
[('4TABOR', 'compound'), ('CUSTOM', 'compound'), ('PUBLISHING', 'ROOT')]

>> Bigrams: 
[[4TABOR, CUSTOM], [CUSTOM, PUBLISHING]]

>> Trigrams: 
[[4TABOR, CUSTOM, PUBLISHING]]

>> Noun Phrases are: 
[4TABOR CUSTOM PUBLISHING]

>> Named Entities are: 
[] 


================================ Paragraph 31 =================================

BIG BANG OF ARTIFICIAL INTELLIGENCE investment from their logos shown during the event. It  can take an entire quarter to adjust brand marketing  expenditures. 

------------------- Sentence 1 -------------------

BIG BANG OF ARTIFICIAL INTELLIGENCE investment from their logos shown during the event. 


>> Tokens are: 
[BIG, BANG, ARTIFICIAL, INTELLIGENCE, investment, logos, shown, event, .] 

>> PoS Tags are: 
[('BIG', 'PROPN'), ('BANG', 'PROPN'), ('ARTIFICIAL', 'PROPN'), ('INTELLIGENCE', 'PROPN'), ('investment', 'NOUN'), ('logos', 'NOUN'), ('shown', 'VERB'), ('event', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('BIG', 'compound'), ('BANG', 'ROOT'), ('ARTIFICIAL', 'compound'), ('INTELLIGENCE', 'compound'), ('investment', 'pobj'), ('logos', 'pobj'), ('shown', 'acl'), ('event', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[BIG, BANG], [BANG, ARTIFICIAL], [ARTIFICIAL, INTELLIGENCE], [INTELLIGENCE, investment], [investment, logos], [logos, shown], [shown, event], [event, .]]

>> Trigrams: 
[[BIG, BANG, ARTIFICIAL], [BANG, ARTIFICIAL, INTELLIGENCE], [ARTIFICIAL, INTELLIGENCE, investment], [INTELLIGENCE, investment, logos], [investment, logos, shown], [logos, shown, event], [shown, event, .]]

>> Noun Phrases are: 
[BIG BANG, ARTIFICIAL INTELLIGENCE investment, their logos, the event]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

It  can take an entire quarter to adjust brand marketing  expenditures. 


>> Tokens are: 
[ , entire, quarter, adjust, brand, marketing,  , expenditures, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('entire', 'ADJ'), ('quarter', 'NOUN'), ('adjust', 'VERB'), ('brand', 'NOUN'), ('marketing', 'NOUN'), (' ', 'SPACE'), ('expenditures', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nsubj'), ('entire', 'amod'), ('quarter', 'dobj'), ('adjust', 'xcomp'), ('brand', 'compound'), ('marketing', 'dobj'), (' ', 'prep'), ('expenditures', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , entire], [entire, quarter], [quarter, adjust], [adjust, brand], [brand, marketing], [marketing,  ], [ , expenditures], [expenditures, .]]

>> Trigrams: 
[[ , entire, quarter], [entire, quarter, adjust], [quarter, adjust, brand], [adjust, brand, marketing], [brand, marketing,  ], [marketing,  , expenditures], [ , expenditures, .]]

>> Noun Phrases are: 
[It, an entire quarter, brand marketing, expenditures]

>> Named Entities are: 
[('an entire quarter', 'DATE')] 


================================ Paragraph 32 =================================

SAP Brand Impact software uses deep neural networks  trained on an NVIDIA DGX-1 system. SAP’s deep learning  analysisi provides immediate and accurate results of  the logos in the video. With the SAP software, auditable  results are delivered in a day. Figure 1 shows an example  of video analysis. 

------------------- Sentence 1 -------------------

SAP Brand Impact software uses deep neural networks  trained on an NVIDIA DGX-1 system. 


>> Tokens are: 
[SAP, Brand, Impact, software, uses, deep, neural, networks,  , trained, NVIDIA, DGX-1, system, .] 

>> PoS Tags are: 
[('SAP', 'PROPN'), ('Brand', 'PROPN'), ('Impact', 'PROPN'), ('software', 'NOUN'), ('uses', 'VERB'), ('deep', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), (' ', 'SPACE'), ('trained', 'VERB'), ('NVIDIA', 'PROPN'), ('DGX-1', 'PROPN'), ('system', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('SAP', 'csubj'), ('Brand', 'compound'), ('Impact', 'compound'), ('software', 'dobj'), ('uses', 'ROOT'), ('deep', 'amod'), ('neural', 'amod'), ('networks', 'dobj'), (' ', 'appos'), ('trained', 'acl'), ('NVIDIA', 'compound'), ('DGX-1', 'compound'), ('system', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[SAP, Brand], [Brand, Impact], [Impact, software], [software, uses], [uses, deep], [deep, neural], [neural, networks], [networks,  ], [ , trained], [trained, NVIDIA], [NVIDIA, DGX-1], [DGX-1, system], [system, .]]

>> Trigrams: 
[[SAP, Brand, Impact], [Brand, Impact, software], [Impact, software, uses], [software, uses, deep], [uses, deep, neural], [deep, neural, networks], [neural, networks,  ], [networks,  , trained], [ , trained, NVIDIA], [trained, NVIDIA, DGX-1], [NVIDIA, DGX-1, system], [DGX-1, system, .]]

>> Noun Phrases are: 
[Brand Impact software, deep neural networks, an NVIDIA DGX-1 system]

>> Named Entities are: 
[('SAP Brand Impact', 'ORG')] 

------------------- Sentence 2 -------------------

SAP’s deep learning  analysisi provides immediate and accurate results of  the logos in the video. 


>> Tokens are: 
[SAP, deep, learning,  , analysisi, provides, immediate, accurate, results,  , logos, video, .] 

>> PoS Tags are: 
[('SAP', 'PROPN'), ('deep', 'ADJ'), ('learning', 'NOUN'), (' ', 'SPACE'), ('analysisi', 'NOUN'), ('provides', 'VERB'), ('immediate', 'ADJ'), ('accurate', 'ADJ'), ('results', 'NOUN'), (' ', 'SPACE'), ('logos', 'NOUN'), ('video', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('SAP', 'nsubj'), ('deep', 'amod'), ('learning', 'acl'), (' ', 'punct'), ('analysisi', 'appos'), ('provides', 'ROOT'), ('immediate', 'amod'), ('accurate', 'conj'), ('results', 'dobj'), (' ', 'pobj'), ('logos', 'dobj'), ('video', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[SAP, deep], [deep, learning], [learning,  ], [ , analysisi], [analysisi, provides], [provides, immediate], [immediate, accurate], [accurate, results], [results,  ], [ , logos], [logos, video], [video, .]]

>> Trigrams: 
[[SAP, deep, learning], [deep, learning,  ], [learning,  , analysisi], [ , analysisi, provides], [analysisi, provides, immediate], [provides, immediate, accurate], [immediate, accurate, results], [accurate, results,  ], [results,  , logos], [ , logos, video], [logos, video, .]]

>> Noun Phrases are: 
[SAP, analysisi, immediate and accurate results, the logos, the video]

>> Named Entities are: 
[('SAP', 'GPE')] 

------------------- Sentence 3 -------------------

With the SAP software, auditable  results are delivered in a day. 


>> Tokens are: 
[SAP, software, ,, auditable,  , results, delivered, day, .] 

>> PoS Tags are: 
[('SAP', 'PROPN'), ('software', 'NOUN'), (',', 'PUNCT'), ('auditable', 'ADJ'), (' ', 'SPACE'), ('results', 'NOUN'), ('delivered', 'VERB'), ('day', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('SAP', 'compound'), ('software', 'pobj'), (',', 'punct'), ('auditable', 'amod'), (' ', 'prep'), ('results', 'nsubjpass'), ('delivered', 'ROOT'), ('day', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[SAP, software], [software, ,], [,, auditable], [auditable,  ], [ , results], [results, delivered], [delivered, day], [day, .]]

>> Trigrams: 
[[SAP, software, ,], [software, ,, auditable], [,, auditable,  ], [auditable,  , results], [ , results, delivered], [results, delivered, day], [delivered, day, .]]

>> Noun Phrases are: 
[the SAP software, auditable  results, a day]

>> Named Entities are: 
[('SAP', 'GPE')] 

------------------- Sentence 4 -------------------

Figure 1 shows an example  of video analysis. 


>> Tokens are: 
[Figure, 1, shows, example,  , video, analysis, .] 

>> PoS Tags are: 
[('Figure', 'NOUN'), ('1', 'NUM'), ('shows', 'VERB'), ('example', 'NOUN'), (' ', 'SPACE'), ('video', 'NOUN'), ('analysis', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Figure', 'nsubj'), ('1', 'nummod'), ('shows', 'ROOT'), ('example', 'dobj'), (' ', 'appos'), ('video', 'compound'), ('analysis', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Figure, 1], [1, shows], [shows, example], [example,  ], [ , video], [video, analysis], [analysis, .]]

>> Trigrams: 
[[Figure, 1, shows], [1, shows, example], [shows, example,  ], [example,  , video], [ , video, analysis], [video, analysis, .]]

>> Noun Phrases are: 
[Figure, an example, video analysis]

>> Named Entities are: 
[('1', 'CARDINAL')] 


================================ Paragraph 33 =================================

GPU: THE MODERN PARALLEL PROCESSOR Modern compute typically consists of multi-core CPUs  or GPUs. It’s not uncommon for CPUs to have up to 20  cores and GPUs have thousands of cores as shown in  Figure 2. Both CPUs and GPUs are parallel processors  capable of performing parallel computing on more than  one task.  

------------------- Sentence 1 -------------------

GPU: THE MODERN PARALLEL PROCESSOR Modern compute typically consists of multi-core CPUs  or GPUs. 


>> Tokens are: 
[GPU, :, MODERN, PARALLEL, PROCESSOR, Modern, compute, typically, consists, multi, -, core, CPUs,  , GPUs, .] 

>> PoS Tags are: 
[('GPU', 'NOUN'), (':', 'PUNCT'), ('MODERN', 'PROPN'), ('PARALLEL', 'PROPN'), ('PROCESSOR', 'ADJ'), ('Modern', 'PROPN'), ('compute', 'NOUN'), ('typically', 'ADV'), ('consists', 'VERB'), ('multi', 'ADJ'), ('-', 'ADJ'), ('core', 'ADJ'), ('CPUs', 'NOUN'), (' ', 'SPACE'), ('GPUs', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('GPU', 'nsubj'), (':', 'punct'), ('MODERN', 'compound'), ('PARALLEL', 'amod'), ('PROCESSOR', 'amod'), ('Modern', 'amod'), ('compute', 'nsubj'), ('typically', 'advmod'), ('consists', 'ROOT'), ('multi', 'amod'), ('-', 'amod'), ('core', 'amod'), ('CPUs', 'pobj'), (' ', 'appos'), ('GPUs', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[GPU, :], [:, MODERN], [MODERN, PARALLEL], [PARALLEL, PROCESSOR], [PROCESSOR, Modern], [Modern, compute], [compute, typically], [typically, consists], [consists, multi], [multi, -], [-, core], [core, CPUs], [CPUs,  ], [ , GPUs], [GPUs, .]]

>> Trigrams: 
[[GPU, :, MODERN], [:, MODERN, PARALLEL], [MODERN, PARALLEL, PROCESSOR], [PARALLEL, PROCESSOR, Modern], [PROCESSOR, Modern, compute], [Modern, compute, typically], [compute, typically, consists], [typically, consists, multi], [consists, multi, -], [multi, -, core], [-, core, CPUs], [core, CPUs,  ], [CPUs,  , GPUs], [ , GPUs, .]]

>> Noun Phrases are: 
[GPU, THE MODERN PARALLEL PROCESSOR Modern compute, multi-core CPUs, GPUs]

>> Named Entities are: 
[('GPU', 'ORG'), ('THE MODERN PARALLEL PROCESSOR Modern', 'ORG')] 

------------------- Sentence 2 -------------------

It’s not uncommon for CPUs to have up to 20  cores and GPUs have thousands of cores as shown in   


>> Tokens are: 
[uncommon, CPUs, 20,  , cores, GPUs, thousands, cores, shown,  ] 

>> PoS Tags are: 
[('uncommon', 'ADJ'), ('CPUs', 'NOUN'), ('20', 'NUM'), (' ', 'SPACE'), ('cores', 'NOUN'), ('GPUs', 'NOUN'), ('thousands', 'NOUN'), ('cores', 'NOUN'), ('shown', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('uncommon', 'acomp'), ('CPUs', 'nsubj'), ('20', 'nummod'), (' ', 'compound'), ('cores', 'dobj'), ('GPUs', 'conj'), ('thousands', 'dobj'), ('cores', 'pobj'), ('shown', 'advcl'), (' ', 'pobj')]

>> Bigrams: 
[[uncommon, CPUs], [CPUs, 20], [20,  ], [ , cores], [cores, GPUs], [GPUs, thousands], [thousands, cores], [cores, shown], [shown,  ]]

>> Trigrams: 
[[uncommon, CPUs, 20], [CPUs, 20,  ], [20,  , cores], [ , cores, GPUs], [cores, GPUs, thousands], [GPUs, thousands, cores], [thousands, cores, shown], [cores, shown,  ]]

>> Noun Phrases are: 
[It, CPUs, up to 20  cores, GPUs, thousands, cores]

>> Named Entities are: 
[('up to', 'CARDINAL'), ('20', 'CARDINAL'), ('thousands', 'CARDINAL')] 

------------------- Sentence 3 -------------------

Figure 2. 


>> Tokens are: 
[Figure, 2, .] 

>> PoS Tags are: 
[('Figure', 'NOUN'), ('2', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Figure', 'ROOT'), ('2', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[Figure, 2], [2, .]]

>> Trigrams: 
[[Figure, 2, .]]

>> Noun Phrases are: 
[Figure]

>> Named Entities are: 
[('2', 'CARDINAL')] 

------------------- Sentence 4 -------------------

Both CPUs and GPUs are parallel processors  capable of performing parallel computing on more than  one task. 


>> Tokens are: 
[CPUs, GPUs, parallel, processors,  , capable, performing, parallel, computing,  , task, .] 

>> PoS Tags are: 
[('CPUs', 'NOUN'), ('GPUs', 'NOUN'), ('parallel', 'ADJ'), ('processors', 'NOUN'), (' ', 'SPACE'), ('capable', 'ADJ'), ('performing', 'VERB'), ('parallel', 'ADJ'), ('computing', 'NOUN'), (' ', 'SPACE'), ('task', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('CPUs', 'nsubj'), ('GPUs', 'conj'), ('parallel', 'amod'), ('processors', 'attr'), (' ', 'appos'), ('capable', 'amod'), ('performing', 'pcomp'), ('parallel', 'amod'), ('computing', 'dobj'), (' ', 'pobj'), ('task', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[CPUs, GPUs], [GPUs, parallel], [parallel, processors], [processors,  ], [ , capable], [capable, performing], [performing, parallel], [parallel, computing], [computing,  ], [ , task], [task, .]]

>> Trigrams: 
[[CPUs, GPUs, parallel], [GPUs, parallel, processors], [parallel, processors,  ], [processors,  , capable], [ , capable, performing], [capable, performing, parallel], [performing, parallel, computing], [parallel, computing,  ], [computing,  , task], [ , task, .]]

>> Noun Phrases are: 
[Both CPUs, GPUs, parallel processors, parallel computing, one task]

>> Named Entities are: 
[('one', 'CARDINAL')] 

------------------- Sentence 5 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 34 =================================

In 1997, NVIDIA pioneered GPU-accelerated  computing, a new computing model that accelerates  massively parallel workloads. This approach offloads  

------------------- Sentence 1 -------------------

In 1997, NVIDIA pioneered GPU-accelerated  computing, a new computing model that accelerates  massively parallel workloads. 


>> Tokens are: 
[1997, ,, NVIDIA, pioneered, GPU, -, accelerated,  , computing, ,, new, computing, model, accelerates,  , massively, parallel, workloads, .] 

>> PoS Tags are: 
[('1997', 'NUM'), (',', 'PUNCT'), ('NVIDIA', 'PROPN'), ('pioneered', 'VERB'), ('GPU', 'PROPN'), ('-', 'PUNCT'), ('accelerated', 'VERB'), (' ', 'SPACE'), ('computing', 'VERB'), (',', 'PUNCT'), ('new', 'ADJ'), ('computing', 'NOUN'), ('model', 'NOUN'), ('accelerates', 'VERB'), (' ', 'SPACE'), ('massively', 'ADV'), ('parallel', 'ADJ'), ('workloads', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1997', 'pobj'), (',', 'punct'), ('NVIDIA', 'nsubj'), ('pioneered', 'ROOT'), ('GPU', 'npadvmod'), ('-', 'punct'), ('accelerated', 'xcomp'), (' ', 'compound'), ('computing', 'dobj'), (',', 'punct'), ('new', 'amod'), ('computing', 'compound'), ('model', 'dobj'), ('accelerates', 'relcl'), (' ', 'nsubj'), ('massively', 'advmod'), ('parallel', 'relcl'), ('workloads', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[1997, ,], [,, NVIDIA], [NVIDIA, pioneered], [pioneered, GPU], [GPU, -], [-, accelerated], [accelerated,  ], [ , computing], [computing, ,], [,, new], [new, computing], [computing, model], [model, accelerates], [accelerates,  ], [ , massively], [massively, parallel], [parallel, workloads], [workloads, .]]

>> Trigrams: 
[[1997, ,, NVIDIA], [,, NVIDIA, pioneered], [NVIDIA, pioneered, GPU], [pioneered, GPU, -], [GPU, -, accelerated], [-, accelerated,  ], [accelerated,  , computing], [ , computing, ,], [computing, ,, new], [,, new, computing], [new, computing, model], [computing, model, accelerates], [model, accelerates,  ], [accelerates,  , massively], [ , massively, parallel], [massively, parallel, workloads], [parallel, workloads, .]]

>> Noun Phrases are: 
[NVIDIA, a new computing model, workloads]

>> Named Entities are: 
[('1997', 'DATE'), ('NVIDIA', 'ORG'), ('GPU', 'ORG')] 

------------------- Sentence 2 -------------------

This approach offloads   


>> Tokens are: 
[approach, offloads,  ] 

>> PoS Tags are: 
[('approach', 'NOUN'), ('offloads', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('approach', 'nsubj'), ('offloads', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[approach, offloads], [offloads,  ]]

>> Trigrams: 
[[approach, offloads,  ]]

>> Noun Phrases are: 
[This approach]

>> Named Entities are: 
[] 


================================ Paragraph 35 =================================

The emergence of AI started when three key  technologies came together like a perfect storm,  known as the big bang of AI. The three key drivers are  deep learning algorithms, parallel processors based on  graphics processing units (GPUs) and the availability of  big data.  

------------------- Sentence 1 -------------------

The emergence of AI started when three key  technologies came together like a perfect storm,  known as the big bang of AI. 


>> Tokens are: 
[emergence, AI, started, key,  , technologies, came, like, perfect, storm, ,,  , known, big, bang, AI, .] 

>> PoS Tags are: 
[('emergence', 'NOUN'), ('AI', 'PROPN'), ('started', 'VERB'), ('key', 'ADJ'), (' ', 'SPACE'), ('technologies', 'NOUN'), ('came', 'VERB'), ('like', 'ADP'), ('perfect', 'ADJ'), ('storm', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('known', 'VERB'), ('big', 'ADJ'), ('bang', 'NOUN'), ('AI', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('emergence', 'nsubj'), ('AI', 'pobj'), ('started', 'ROOT'), ('key', 'amod'), (' ', 'compound'), ('technologies', 'nsubj'), ('came', 'advcl'), ('like', 'prep'), ('perfect', 'amod'), ('storm', 'pobj'), (',', 'punct'), (' ', 'npadvmod'), ('known', 'acl'), ('big', 'amod'), ('bang', 'pobj'), ('AI', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[emergence, AI], [AI, started], [started, key], [key,  ], [ , technologies], [technologies, came], [came, like], [like, perfect], [perfect, storm], [storm, ,], [,,  ], [ , known], [known, big], [big, bang], [bang, AI], [AI, .]]

>> Trigrams: 
[[emergence, AI, started], [AI, started, key], [started, key,  ], [key,  , technologies], [ , technologies, came], [technologies, came, like], [came, like, perfect], [like, perfect, storm], [perfect, storm, ,], [storm, ,,  ], [,,  , known], [ , known, big], [known, big, bang], [big, bang, AI], [bang, AI, .]]

>> Noun Phrases are: 
[The emergence, AI, three key  technologies, a perfect storm, the big bang, AI]

>> Named Entities are: 
[('AI', 'ORG'), ('three', 'CARDINAL'), ('AI', 'ORG')] 

------------------- Sentence 2 -------------------

The three key drivers are  deep learning algorithms, parallel processors based on  graphics processing units (GPUs) and the availability of  big data. 


>> Tokens are: 
[key, drivers,  , deep, learning, algorithms, ,, parallel, processors, based,  , graphics, processing, units, (, GPUs, ), availability,  , big, data, .] 

>> PoS Tags are: 
[('key', 'ADJ'), ('drivers', 'NOUN'), (' ', 'SPACE'), ('deep', 'ADJ'), ('learning', 'VERB'), ('algorithms', 'NOUN'), (',', 'PUNCT'), ('parallel', 'ADJ'), ('processors', 'NOUN'), ('based', 'VERB'), (' ', 'SPACE'), ('graphics', 'NOUN'), ('processing', 'NOUN'), ('units', 'NOUN'), ('(', 'PUNCT'), ('GPUs', 'PROPN'), (')', 'PUNCT'), ('availability', 'NOUN'), (' ', 'SPACE'), ('big', 'ADJ'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('key', 'amod'), ('drivers', 'nsubj'), (' ', 'nmod'), ('deep', 'amod'), ('learning', 'amod'), ('algorithms', 'attr'), (',', 'punct'), ('parallel', 'amod'), ('processors', 'conj'), ('based', 'acl'), (' ', 'nmod'), ('graphics', 'compound'), ('processing', 'compound'), ('units', 'pobj'), ('(', 'punct'), ('GPUs', 'appos'), (')', 'punct'), ('availability', 'conj'), (' ', 'nmod'), ('big', 'amod'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[key, drivers], [drivers,  ], [ , deep], [deep, learning], [learning, algorithms], [algorithms, ,], [,, parallel], [parallel, processors], [processors, based], [based,  ], [ , graphics], [graphics, processing], [processing, units], [units, (], [(, GPUs], [GPUs, )], [), availability], [availability,  ], [ , big], [big, data], [data, .]]

>> Trigrams: 
[[key, drivers,  ], [drivers,  , deep], [ , deep, learning], [deep, learning, algorithms], [learning, algorithms, ,], [algorithms, ,, parallel], [,, parallel, processors], [parallel, processors, based], [processors, based,  ], [based,  , graphics], [ , graphics, processing], [graphics, processing, units], [processing, units, (], [units, (, GPUs], [(, GPUs, )], [GPUs, ), availability], [), availability,  ], [availability,  , big], [ , big, data], [big, data, .]]

>> Noun Phrases are: 
[The three key drivers,  deep learning algorithms, parallel processors,  graphics processing units, GPUs, the availability,  big data]

>> Named Entities are: 
[('three', 'CARDINAL')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 36 =================================

DEEP LEARNING—NEW COMPUTING MODEL  THAT WRITES ITS OWN SOFTWARE Traditionally, programs were  designed to sequentially process  data and to use specific code  instructions in the processing. Deep  learning allows computer systems  to analyze data to provide insights  and predictions about the data.  Machine learning refers to any type  of computer program that can learn  by itself without being programmed  by a human. Deep learning, also  called deep structured learning  or hierarchical learning, is an  element of machine learning that  uses artificial neural networks.  Deep learning systems can be  supervised, partially supervised or  unsupervised.  

------------------- Sentence 1 -------------------

DEEP LEARNING—NEW COMPUTING MODEL   


>> Tokens are: 
[DEEP, LEARNING, —, NEW, COMPUTING, MODEL,  ] 

>> PoS Tags are: 
[('DEEP', 'ADJ'), ('LEARNING', 'PROPN'), ('—', 'PUNCT'), ('NEW', 'ADJ'), ('COMPUTING', 'PROPN'), ('MODEL', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('DEEP', 'amod'), ('LEARNING', 'ROOT'), ('—', 'punct'), ('NEW', 'compound'), ('COMPUTING', 'compound'), ('MODEL', 'appos'), (' ', 'appos')]

>> Bigrams: 
[[DEEP, LEARNING], [LEARNING, —], [—, NEW], [NEW, COMPUTING], [COMPUTING, MODEL], [MODEL,  ]]

>> Trigrams: 
[[DEEP, LEARNING, —], [LEARNING, —, NEW], [—, NEW, COMPUTING], [NEW, COMPUTING, MODEL], [COMPUTING, MODEL,  ]]

>> Noun Phrases are: 
[DEEP LEARNING, NEW COMPUTING MODEL]

>> Named Entities are: 
[('DEEP LEARNING', 'PERSON')] 

------------------- Sentence 2 -------------------

THAT WRITES ITS OWN SOFTWARE Traditionally, programs were  designed to sequentially process  data and to use specific code 


>> Tokens are: 
[WRITES, SOFTWARE, Traditionally, ,, programs,  , designed, sequentially, process,  , data, use, specific, code] 

>> PoS Tags are: 
[('WRITES', 'VERB'), ('SOFTWARE', 'PROPN'), ('Traditionally', 'ADV'), (',', 'PUNCT'), ('programs', 'NOUN'), (' ', 'SPACE'), ('designed', 'VERB'), ('sequentially', 'ADV'), ('process', 'VERB'), (' ', 'SPACE'), ('data', 'NOUN'), ('use', 'VERB'), ('specific', 'ADJ'), ('code', 'NOUN')] 

>> Dependency Tags are: 
[('WRITES', 'ROOT'), ('SOFTWARE', 'dobj'), ('Traditionally', 'advmod'), (',', 'punct'), ('programs', 'nsubjpass'), (' ', 'dep'), ('designed', 'ccomp'), ('sequentially', 'advmod'), ('process', 'xcomp'), (' ', 'compound'), ('data', 'dobj'), ('use', 'conj'), ('specific', 'amod'), ('code', 'dobj')]

>> Bigrams: 
[[WRITES, SOFTWARE], [SOFTWARE, Traditionally], [Traditionally, ,], [,, programs], [programs,  ], [ , designed], [designed, sequentially], [sequentially, process], [process,  ], [ , data], [data, use], [use, specific], [specific, code]]

>> Trigrams: 
[[WRITES, SOFTWARE, Traditionally], [SOFTWARE, Traditionally, ,], [Traditionally, ,, programs], [,, programs,  ], [programs,  , designed], [ , designed, sequentially], [designed, sequentially, process], [sequentially, process,  ], [process,  , data], [ , data, use], [data, use, specific], [use, specific, code]]

>> Noun Phrases are: 
[ITS OWN SOFTWARE, programs,  data, specific code]

>> Named Entities are: 
[('OWN SOFTWARE Traditionally', 'ORG')] 

------------------- Sentence 3 -------------------

 instructions in the processing. 


>> Tokens are: 
[ , instructions, processing, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('instructions', 'NOUN'), ('processing', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('instructions', 'ROOT'), ('processing', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , instructions], [instructions, processing], [processing, .]]

>> Trigrams: 
[[ , instructions, processing], [instructions, processing, .]]

>> Noun Phrases are: 
[ instructions, the processing]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

Deep  learning allows computer systems  to analyze data to provide insights  and predictions about the data. 


>> Tokens are: 
[Deep,  , learning, allows, computer, systems,  , analyze, data, provide, insights,  , predictions, data, .] 

>> PoS Tags are: 
[('Deep', 'ADJ'), (' ', 'SPACE'), ('learning', 'NOUN'), ('allows', 'VERB'), ('computer', 'NOUN'), ('systems', 'NOUN'), (' ', 'SPACE'), ('analyze', 'VERB'), ('data', 'NOUN'), ('provide', 'VERB'), ('insights', 'NOUN'), (' ', 'SPACE'), ('predictions', 'NOUN'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Deep', 'amod'), (' ', 'compound'), ('learning', 'nsubj'), ('allows', 'ROOT'), ('computer', 'compound'), ('systems', 'nsubj'), (' ', 'appos'), ('analyze', 'ccomp'), ('data', 'dobj'), ('provide', 'advcl'), ('insights', 'dobj'), (' ', 'dobj'), ('predictions', 'conj'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Deep,  ], [ , learning], [learning, allows], [allows, computer], [computer, systems], [systems,  ], [ , analyze], [analyze, data], [data, provide], [provide, insights], [insights,  ], [ , predictions], [predictions, data], [data, .]]

>> Trigrams: 
[[Deep,  , learning], [ , learning, allows], [learning, allows, computer], [allows, computer, systems], [computer, systems,  ], [systems,  , analyze], [ , analyze, data], [analyze, data, provide], [data, provide, insights], [provide, insights,  ], [insights,  , predictions], [ , predictions, data], [predictions, data, .]]

>> Noun Phrases are: 
[Deep  learning, computer systems, data, insights, predictions, the data]

>> Named Entities are: 
[] 

------------------- Sentence 5 -------------------

 Machine learning refers to any type  of computer program that can learn  by itself without being programmed  by a human. 


>> Tokens are: 
[ , Machine, learning, refers, type,  , computer, program, learn,  , programmed,  , human, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Machine', 'NOUN'), ('learning', 'NOUN'), ('refers', 'VERB'), ('type', 'NOUN'), (' ', 'SPACE'), ('computer', 'NOUN'), ('program', 'NOUN'), ('learn', 'VERB'), (' ', 'SPACE'), ('programmed', 'VERB'), (' ', 'SPACE'), ('human', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('Machine', 'compound'), ('learning', 'nsubj'), ('refers', 'ROOT'), ('type', 'pobj'), (' ', 'appos'), ('computer', 'compound'), ('program', 'pobj'), ('learn', 'relcl'), (' ', 'dobj'), ('programmed', 'pcomp'), (' ', 'dobj'), ('human', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , Machine], [Machine, learning], [learning, refers], [refers, type], [type,  ], [ , computer], [computer, program], [program, learn], [learn,  ], [ , programmed], [programmed,  ], [ , human], [human, .]]

>> Trigrams: 
[[ , Machine, learning], [Machine, learning, refers], [learning, refers, type], [refers, type,  ], [type,  , computer], [ , computer, program], [computer, program, learn], [program, learn,  ], [learn,  , programmed], [ , programmed,  ], [programmed,  , human], [ , human, .]]

>> Noun Phrases are: 
[ Machine learning, any type, computer program, itself, a human]

>> Named Entities are: 
[] 

------------------- Sentence 6 -------------------

Deep learning, also  called deep structured learning  or hierarchical learning, is an  element of machine learning that  uses artificial neural networks. 


>> Tokens are: 
[Deep, learning, ,,  , called, deep, structured, learning,  , hierarchical, learning, ,,  , element, machine, learning,  , uses, artificial, neural, networks, .] 

>> PoS Tags are: 
[('Deep', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('called', 'VERB'), ('deep', 'ADJ'), ('structured', 'ADJ'), ('learning', 'NOUN'), (' ', 'SPACE'), ('hierarchical', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('element', 'NOUN'), ('machine', 'NOUN'), ('learning', 'VERB'), (' ', 'SPACE'), ('uses', 'VERB'), ('artificial', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Deep', 'amod'), ('learning', 'nsubj'), (',', 'punct'), (' ', 'nsubj'), ('called', 'acl'), ('deep', 'amod'), ('structured', 'amod'), ('learning', 'compound'), (' ', 'dobj'), ('hierarchical', 'amod'), ('learning', 'conj'), (',', 'punct'), (' ', 'compound'), ('element', 'attr'), ('machine', 'pobj'), ('learning', 'acl'), (' ', 'nsubj'), ('uses', 'ccomp'), ('artificial', 'amod'), ('neural', 'amod'), ('networks', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Deep, learning], [learning, ,], [,,  ], [ , called], [called, deep], [deep, structured], [structured, learning], [learning,  ], [ , hierarchical], [hierarchical, learning], [learning, ,], [,,  ], [ , element], [element, machine], [machine, learning], [learning,  ], [ , uses], [uses, artificial], [artificial, neural], [neural, networks], [networks, .]]

>> Trigrams: 
[[Deep, learning, ,], [learning, ,,  ], [,,  , called], [ , called, deep], [called, deep, structured], [deep, structured, learning], [structured, learning,  ], [learning,  , hierarchical], [ , hierarchical, learning], [hierarchical, learning, ,], [learning, ,,  ], [,,  , element], [ , element, machine], [element, machine, learning], [machine, learning,  ], [learning,  , uses], [ , uses, artificial], [uses, artificial, neural], [artificial, neural, networks], [neural, networks, .]]

>> Noun Phrases are: 
[Deep learning, hierarchical learning, an  element, machine, artificial neural networks]

>> Named Entities are: 
[] 

------------------- Sentence 7 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 8 -------------------

Deep learning systems can be  supervised, partially supervised or  unsupervised. 


>> Tokens are: 
[Deep, learning, systems,  , supervised, ,, partially, supervised,  , unsupervised, .] 

>> PoS Tags are: 
[('Deep', 'ADJ'), ('learning', 'NOUN'), ('systems', 'NOUN'), (' ', 'SPACE'), ('supervised', 'VERB'), (',', 'PUNCT'), ('partially', 'ADV'), ('supervised', 'ADJ'), (' ', 'SPACE'), ('unsupervised', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Deep', 'amod'), ('learning', 'compound'), ('systems', 'nsubjpass'), (' ', 'nsubjpass'), ('supervised', 'ROOT'), (',', 'punct'), ('partially', 'advmod'), ('supervised', 'dep'), (' ', 'nsubj'), ('unsupervised', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Deep, learning], [learning, systems], [systems,  ], [ , supervised], [supervised, ,], [,, partially], [partially, supervised], [supervised,  ], [ , unsupervised], [unsupervised, .]]

>> Trigrams: 
[[Deep, learning, systems], [learning, systems,  ], [systems,  , supervised], [ , supervised, ,], [supervised, ,, partially], [,, partially, supervised], [partially, supervised,  ], [supervised,  , unsupervised], [ , unsupervised, .]]

>> Noun Phrases are: 
[Deep learning systems]

>> Named Entities are: 
[] 

------------------- Sentence 9 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 37 =================================

AI IN ACTION: MEASURING BRAND IMPACT The SAP Brand Impact product is an example of how  deep learning is used to analyze a company’s brand  exposure. The SAP application was shown thousands  of images or videos and trained on how to recognize  logos and other brand information from the images,  without the need to explicitly program the software.  Many brands rely on sponsoring televised events and  they typically use a manual process that takes up to six  weeks after an event to report brand impact return on  

------------------- Sentence 1 -------------------

AI IN ACTION: MEASURING BRAND IMPACT 


>> Tokens are: 
[AI, ACTION, :, MEASURING, BRAND, IMPACT] 

>> PoS Tags are: 
[('AI', 'NOUN'), ('ACTION', 'PROPN'), (':', 'PUNCT'), ('MEASURING', 'VERB'), ('BRAND', 'NOUN'), ('IMPACT', 'PROPN')] 

>> Dependency Tags are: 
[('AI', 'ROOT'), ('ACTION', 'pobj'), (':', 'punct'), ('MEASURING', 'compound'), ('BRAND', 'compound'), ('IMPACT', 'appos')]

>> Bigrams: 
[[AI, ACTION], [ACTION, :], [:, MEASURING], [MEASURING, BRAND], [BRAND, IMPACT]]

>> Trigrams: 
[[AI, ACTION, :], [ACTION, :, MEASURING], [:, MEASURING, BRAND], [MEASURING, BRAND, IMPACT]]

>> Noun Phrases are: 
[AI, ACTION, MEASURING BRAND IMPACT]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

The SAP Brand Impact product is an example of how  deep learning is used to analyze a company’s brand  exposure. 


>> Tokens are: 
[SAP, Brand, Impact, product, example,  , deep, learning, analyze, company, brand,  , exposure, .] 

>> PoS Tags are: 
[('SAP', 'PROPN'), ('Brand', 'PROPN'), ('Impact', 'PROPN'), ('product', 'NOUN'), ('example', 'NOUN'), (' ', 'SPACE'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('analyze', 'VERB'), ('company', 'NOUN'), ('brand', 'NOUN'), (' ', 'SPACE'), ('exposure', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('SAP', 'compound'), ('Brand', 'compound'), ('Impact', 'compound'), ('product', 'nsubj'), ('example', 'attr'), (' ', 'nmod'), ('deep', 'amod'), ('learning', 'nsubjpass'), ('analyze', 'xcomp'), ('company', 'poss'), ('brand', 'compound'), (' ', 'compound'), ('exposure', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[SAP, Brand], [Brand, Impact], [Impact, product], [product, example], [example,  ], [ , deep], [deep, learning], [learning, analyze], [analyze, company], [company, brand], [brand,  ], [ , exposure], [exposure, .]]

>> Trigrams: 
[[SAP, Brand, Impact], [Brand, Impact, product], [Impact, product, example], [product, example,  ], [example,  , deep], [ , deep, learning], [deep, learning, analyze], [learning, analyze, company], [analyze, company, brand], [company, brand,  ], [brand,  , exposure], [ , exposure, .]]

>> Noun Phrases are: 
[The SAP Brand Impact product, an example,  deep learning, a company’s brand  exposure]

>> Named Entities are: 
[('The SAP Brand Impact', 'ORG')] 

------------------- Sentence 3 -------------------

The SAP application was shown thousands  of images or videos and trained on how to recognize  logos and other brand information from the images,  without the need to explicitly program the software. 


>> Tokens are: 
[SAP, application, shown, thousands,  , images, videos, trained, recognize,  , logos, brand, information, images, ,,  , need, explicitly, program, software, .] 

>> PoS Tags are: 
[('SAP', 'PROPN'), ('application', 'NOUN'), ('shown', 'VERB'), ('thousands', 'NOUN'), (' ', 'SPACE'), ('images', 'NOUN'), ('videos', 'NOUN'), ('trained', 'VERB'), ('recognize', 'VERB'), (' ', 'SPACE'), ('logos', 'NOUN'), ('brand', 'NOUN'), ('information', 'NOUN'), ('images', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('need', 'NOUN'), ('explicitly', 'ADV'), ('program', 'VERB'), ('software', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('SAP', 'compound'), ('application', 'nsubjpass'), ('shown', 'ROOT'), ('thousands', 'dobj'), (' ', 'appos'), ('images', 'pobj'), ('videos', 'conj'), ('trained', 'conj'), ('recognize', 'pcomp'), (' ', 'compound'), ('logos', 'dobj'), ('brand', 'compound'), ('information', 'conj'), ('images', 'pobj'), (',', 'punct'), (' ', 'conj'), ('need', 'pobj'), ('explicitly', 'advmod'), ('program', 'acl'), ('software', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[SAP, application], [application, shown], [shown, thousands], [thousands,  ], [ , images], [images, videos], [videos, trained], [trained, recognize], [recognize,  ], [ , logos], [logos, brand], [brand, information], [information, images], [images, ,], [,,  ], [ , need], [need, explicitly], [explicitly, program], [program, software], [software, .]]

>> Trigrams: 
[[SAP, application, shown], [application, shown, thousands], [shown, thousands,  ], [thousands,  , images], [ , images, videos], [images, videos, trained], [videos, trained, recognize], [trained, recognize,  ], [recognize,  , logos], [ , logos, brand], [logos, brand, information], [brand, information, images], [information, images, ,], [images, ,,  ], [,,  , need], [ , need, explicitly], [need, explicitly, program], [explicitly, program, software], [program, software, .]]

>> Noun Phrases are: 
[The SAP application, thousands, images, videos,  logos, other brand information, the images, the need, the software]

>> Named Entities are: 
[('SAP', 'GPE'), ('thousands', 'CARDINAL')] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 5 -------------------

Many brands rely on sponsoring televised events and  they typically use a manual process that takes up to six  weeks after an event to report brand impact return on   


>> Tokens are: 
[brands, rely, sponsoring, televised, events,  , typically, use, manual, process, takes,  , weeks, event, report, brand, impact, return,  ] 

>> PoS Tags are: 
[('brands', 'NOUN'), ('rely', 'VERB'), ('sponsoring', 'VERB'), ('televised', 'VERB'), ('events', 'NOUN'), (' ', 'SPACE'), ('typically', 'ADV'), ('use', 'VERB'), ('manual', 'ADJ'), ('process', 'NOUN'), ('takes', 'VERB'), (' ', 'SPACE'), ('weeks', 'NOUN'), ('event', 'NOUN'), ('report', 'VERB'), ('brand', 'NOUN'), ('impact', 'NOUN'), ('return', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('brands', 'nsubj'), ('rely', 'ROOT'), ('sponsoring', 'pcomp'), ('televised', 'amod'), ('events', 'dobj'), (' ', 'conj'), ('typically', 'advmod'), ('use', 'ccomp'), ('manual', 'amod'), ('process', 'dobj'), ('takes', 'relcl'), (' ', 'nummod'), ('weeks', 'dobj'), ('event', 'pobj'), ('report', 'relcl'), ('brand', 'compound'), ('impact', 'compound'), ('return', 'dobj'), (' ', 'pobj')]

>> Bigrams: 
[[brands, rely], [rely, sponsoring], [sponsoring, televised], [televised, events], [events,  ], [ , typically], [typically, use], [use, manual], [manual, process], [process, takes], [takes,  ], [ , weeks], [weeks, event], [event, report], [report, brand], [brand, impact], [impact, return], [return,  ]]

>> Trigrams: 
[[brands, rely, sponsoring], [rely, sponsoring, televised], [sponsoring, televised, events], [televised, events,  ], [events,  , typically], [ , typically, use], [typically, use, manual], [use, manual, process], [manual, process, takes], [process, takes,  ], [takes,  , weeks], [ , weeks, event], [weeks, event, report], [event, report, brand], [report, brand, impact], [brand, impact, return], [impact, return,  ]]

>> Noun Phrases are: 
[Many brands, televised events, they, a manual process, to six  weeks, an event]

>> Named Entities are: 
[('up to six', 'CARDINAL'), ('weeks', 'DATE')] 


================================ Paragraph 38 =================================

Figure 1. SAP Brand Impact — capturing brand logo placement in near real time. (Source: SAP).

------------------- Sentence 1 -------------------

Figure 1. 


>> Tokens are: 
[Figure, 1, .] 

>> PoS Tags are: 
[('Figure', 'NOUN'), ('1', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Figure', 'ROOT'), ('1', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[Figure, 1], [1, .]]

>> Trigrams: 
[[Figure, 1, .]]

>> Noun Phrases are: 
[Figure]

>> Named Entities are: 
[('1', 'CARDINAL')] 

------------------- Sentence 2 -------------------

SAP Brand Impact — capturing brand logo placement in near real time. 


>> Tokens are: 
[SAP, Brand, Impact, —, capturing, brand, logo, placement, near, real, time, .] 

>> PoS Tags are: 
[('SAP', 'PROPN'), ('Brand', 'NOUN'), ('Impact', 'PROPN'), ('—', 'PUNCT'), ('capturing', 'VERB'), ('brand', 'NOUN'), ('logo', 'NOUN'), ('placement', 'NOUN'), ('near', 'SCONJ'), ('real', 'ADJ'), ('time', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('SAP', 'ROOT'), ('Brand', 'compound'), ('Impact', 'dobj'), ('—', 'punct'), ('capturing', 'advcl'), ('brand', 'compound'), ('logo', 'compound'), ('placement', 'dobj'), ('near', 'prep'), ('real', 'amod'), ('time', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[SAP, Brand], [Brand, Impact], [Impact, —], [—, capturing], [capturing, brand], [brand, logo], [logo, placement], [placement, near], [near, real], [real, time], [time, .]]

>> Trigrams: 
[[SAP, Brand, Impact], [Brand, Impact, —], [Impact, —, capturing], [—, capturing, brand], [capturing, brand, logo], [brand, logo, placement], [logo, placement, near], [placement, near, real], [near, real, time], [real, time, .]]

>> Noun Phrases are: 
[SAP, Brand Impact, brand logo placement, real time]

>> Named Entities are: 
[('SAP Brand', 'ORG')] 

------------------- Sentence 3 -------------------

(Source: SAP). 


>> Tokens are: 
[(, Source, :, SAP, ), .] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('Source', 'NOUN'), (':', 'PUNCT'), ('SAP', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('Source', 'ROOT'), (':', 'punct'), ('SAP', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[(, Source], [Source, :], [:, SAP], [SAP, )], [), .]]

>> Trigrams: 
[[(, Source, :], [Source, :, SAP], [:, SAP, )], [SAP, ), .]]

>> Noun Phrases are: 
[(Source, SAP]

>> Named Entities are: 
[('SAP', 'GPE')] 


================================ Paragraph 39 =================================

DATANAMI: ACCELER ATE DEEP LEARNING WITH A MODERN DATA PLATFORM 

------------------- Sentence 1 -------------------

DATANAMI: ACCELER ATE DEEP LEARNING WITH A MODERN DATA PLATFORM 


>> Tokens are: 
[DATANAMI, :, ACCELER, ATE, DEEP, LEARNING, MODERN, DATA, PLATFORM] 

>> PoS Tags are: 
[('DATANAMI', 'PROPN'), (':', 'PUNCT'), ('ACCELER', 'ADJ'), ('ATE', 'VERB'), ('DEEP', 'ADJ'), ('LEARNING', 'NOUN'), ('MODERN', 'PROPN'), ('DATA', 'PROPN'), ('PLATFORM', 'NOUN')] 

>> Dependency Tags are: 
[('DATANAMI', 'dep'), (':', 'punct'), ('ACCELER', 'nsubj'), ('ATE', 'ROOT'), ('DEEP', 'amod'), ('LEARNING', 'dobj'), ('MODERN', 'compound'), ('DATA', 'compound'), ('PLATFORM', 'pobj')]

>> Bigrams: 
[[DATANAMI, :], [:, ACCELER], [ACCELER, ATE], [ATE, DEEP], [DEEP, LEARNING], [LEARNING, MODERN], [MODERN, DATA], [DATA, PLATFORM]]

>> Trigrams: 
[[DATANAMI, :, ACCELER], [:, ACCELER, ATE], [ACCELER, ATE, DEEP], [ATE, DEEP, LEARNING], [DEEP, LEARNING, MODERN], [LEARNING, MODERN, DATA], [MODERN, DATA, PLATFORM]]

>> Noun Phrases are: 
[DEEP LEARNING, A MODERN DATA PLATFORM]

>> Named Entities are: 
[] 


================================ Paragraph 40 =================================

5TABOR CUSTOM PUBLISHING 

------------------- Sentence 1 -------------------

5TABOR CUSTOM PUBLISHING 


>> Tokens are: 
[5TABOR, CUSTOM, PUBLISHING] 

>> PoS Tags are: 
[('5TABOR', 'PROPN'), ('CUSTOM', 'PROPN'), ('PUBLISHING', 'NOUN')] 

>> Dependency Tags are: 
[('5TABOR', 'compound'), ('CUSTOM', 'compound'), ('PUBLISHING', 'ROOT')]

>> Bigrams: 
[[5TABOR, CUSTOM], [CUSTOM, PUBLISHING]]

>> Trigrams: 
[[5TABOR, CUSTOM, PUBLISHING]]

>> Noun Phrases are: 
[5TABOR CUSTOM PUBLISHING]

>> Named Entities are: 
[] 


================================ Paragraph 41 =================================

compute-intensive portions of the application to the  GPU, while the remainder of the code still runs on  the CPU. Powered by NVIDIA Volta™, the latest GPU  architecture, NVIDIA introduced the Tesla® V100 which  offers the performance of 100 CPUs in a single GPU.  

------------------- Sentence 1 -------------------

compute-intensive portions of the application to the  GPU, while the remainder of the code still runs on  the CPU. 


>> Tokens are: 
[compute, -, intensive, portions, application,  , GPU, ,, remainder, code, runs,  , CPU, .] 

>> PoS Tags are: 
[('compute', 'NOUN'), ('-', 'PUNCT'), ('intensive', 'ADJ'), ('portions', 'NOUN'), ('application', 'NOUN'), (' ', 'SPACE'), ('GPU', 'PROPN'), (',', 'PUNCT'), ('remainder', 'NOUN'), ('code', 'NOUN'), ('runs', 'VERB'), (' ', 'SPACE'), ('CPU', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('compute', 'advmod'), ('-', 'punct'), ('intensive', 'amod'), ('portions', 'ROOT'), ('application', 'pobj'), (' ', 'compound'), ('GPU', 'pobj'), (',', 'punct'), ('remainder', 'nsubj'), ('code', 'pobj'), ('runs', 'advcl'), (' ', 'pobj'), ('CPU', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[compute, -], [-, intensive], [intensive, portions], [portions, application], [application,  ], [ , GPU], [GPU, ,], [,, remainder], [remainder, code], [code, runs], [runs,  ], [ , CPU], [CPU, .]]

>> Trigrams: 
[[compute, -, intensive], [-, intensive, portions], [intensive, portions, application], [portions, application,  ], [application,  , GPU], [ , GPU, ,], [GPU, ,, remainder], [,, remainder, code], [remainder, code, runs], [code, runs,  ], [runs,  , CPU], [ , CPU, .]]

>> Noun Phrases are: 
[compute-intensive portions, the application, the  GPU, the remainder, the code, the CPU]

>> Named Entities are: 
[('GPU', 'ORG')] 

------------------- Sentence 2 -------------------

Powered by NVIDIA Volta™, the latest GPU  architecture, NVIDIA introduced the Tesla® V100 which  offers the performance of 100 CPUs in a single GPU.   


>> Tokens are: 
[Powered, NVIDIA, Volta, ™, ,, latest, GPU,  , architecture, ,, NVIDIA, introduced, Tesla, ®, V100,  , offers, performance, 100, CPUs, single, GPU, .,  ] 

>> PoS Tags are: 
[('Powered', 'VERB'), ('NVIDIA', 'PROPN'), ('Volta', 'PROPN'), ('™', 'PROPN'), (',', 'PUNCT'), ('latest', 'ADJ'), ('GPU', 'PROPN'), (' ', 'SPACE'), ('architecture', 'NOUN'), (',', 'PUNCT'), ('NVIDIA', 'PROPN'), ('introduced', 'VERB'), ('Tesla', 'PROPN'), ('®', 'NOUN'), ('V100', 'NOUN'), (' ', 'SPACE'), ('offers', 'VERB'), ('performance', 'NOUN'), ('100', 'NUM'), ('CPUs', 'NOUN'), ('single', 'ADJ'), ('GPU', 'PROPN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Powered', 'advcl'), ('NVIDIA', 'compound'), ('Volta', 'compound'), ('™', 'pobj'), (',', 'punct'), ('latest', 'amod'), ('GPU', 'nmod'), (' ', 'nummod'), ('architecture', 'npadvmod'), (',', 'punct'), ('NVIDIA', 'nsubj'), ('introduced', 'ROOT'), ('Tesla', 'compound'), ('®', 'dobj'), ('V100', 'appos'), (' ', 'nsubj'), ('offers', 'relcl'), ('performance', 'dobj'), ('100', 'nummod'), ('CPUs', 'pobj'), ('single', 'amod'), ('GPU', 'pobj'), ('.', 'punct'), (' ', 'dobj')]

>> Bigrams: 
[[Powered, NVIDIA], [NVIDIA, Volta], [Volta, ™], [™, ,], [,, latest], [latest, GPU], [GPU,  ], [ , architecture], [architecture, ,], [,, NVIDIA], [NVIDIA, introduced], [introduced, Tesla], [Tesla, ®], [®, V100], [V100,  ], [ , offers], [offers, performance], [performance, 100], [100, CPUs], [CPUs, single], [single, GPU], [GPU, .], [.,  ]]

>> Trigrams: 
[[Powered, NVIDIA, Volta], [NVIDIA, Volta, ™], [Volta, ™, ,], [™, ,, latest], [,, latest, GPU], [latest, GPU,  ], [GPU,  , architecture], [ , architecture, ,], [architecture, ,, NVIDIA], [,, NVIDIA, introduced], [NVIDIA, introduced, Tesla], [introduced, Tesla, ®], [Tesla, ®, V100], [®, V100,  ], [V100,  , offers], [ , offers, performance], [offers, performance, 100], [performance, 100, CPUs], [100, CPUs, single], [CPUs, single, GPU], [single, GPU, .], [GPU, .,  ]]

>> Noun Phrases are: 
[NVIDIA Volta™, NVIDIA, the Tesla®, V100, the performance, 100 CPUs, a single GPU]

>> Named Entities are: 
[('GPU', 'ORG'), ('100', 'CARDINAL'), ('GPU', 'ORG')] 


================================ Paragraph 42 =================================

Today, both multi-core CPUs and GPUs are used to  accelerate deep learning, analytics, and engineering  applications—enabling data scientists, researchers,  and engineers to tackle challenges that were once  impossible. New deep learning algorithms leverage  massively parallel neural networks inspired by the  human brain. Instead of experts handcrafting software,  a deep learning model writes its own software by  learning from many examples, delivering super-human  accuracy for common tasks like image, video, and text  processing. 

------------------- Sentence 1 -------------------

Today, both multi-core CPUs and GPUs are used to  accelerate deep learning, analytics, and engineering  applications—enabling data scientists, researchers,  and engineers to tackle challenges that were once  impossible. 


>> Tokens are: 
[Today, ,, multi, -, core, CPUs, GPUs,  , accelerate, deep, learning, ,, analytics, ,, engineering,  , applications, —, enabling, data, scientists, ,, researchers, ,,  , engineers, tackle, challenges,  , impossible, .] 

>> PoS Tags are: 
[('Today', 'NOUN'), (',', 'PUNCT'), ('multi', 'ADJ'), ('-', 'ADJ'), ('core', 'ADJ'), ('CPUs', 'NOUN'), ('GPUs', 'NOUN'), (' ', 'SPACE'), ('accelerate', 'VERB'), ('deep', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('analytics', 'NOUN'), (',', 'PUNCT'), ('engineering', 'VERB'), (' ', 'SPACE'), ('applications', 'NOUN'), ('—', 'PUNCT'), ('enabling', 'VERB'), ('data', 'NOUN'), ('scientists', 'NOUN'), (',', 'PUNCT'), ('researchers', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('engineers', 'NOUN'), ('tackle', 'VERB'), ('challenges', 'NOUN'), (' ', 'SPACE'), ('impossible', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Today', 'npadvmod'), (',', 'punct'), ('multi', 'amod'), ('-', 'amod'), ('core', 'amod'), ('CPUs', 'nsubjpass'), ('GPUs', 'conj'), (' ', 'pobj'), ('accelerate', 'xcomp'), ('deep', 'amod'), ('learning', 'dobj'), (',', 'punct'), ('analytics', 'conj'), (',', 'punct'), ('engineering', 'compound'), (' ', 'compound'), ('applications', 'conj'), ('—', 'punct'), ('enabling', 'amod'), ('data', 'compound'), ('scientists', 'appos'), (',', 'punct'), ('researchers', 'conj'), (',', 'punct'), (' ', 'conj'), ('engineers', 'conj'), ('tackle', 'relcl'), ('challenges', 'dobj'), (' ', 'nsubj'), ('impossible', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[Today, ,], [,, multi], [multi, -], [-, core], [core, CPUs], [CPUs, GPUs], [GPUs,  ], [ , accelerate], [accelerate, deep], [deep, learning], [learning, ,], [,, analytics], [analytics, ,], [,, engineering], [engineering,  ], [ , applications], [applications, —], [—, enabling], [enabling, data], [data, scientists], [scientists, ,], [,, researchers], [researchers, ,], [,,  ], [ , engineers], [engineers, tackle], [tackle, challenges], [challenges,  ], [ , impossible], [impossible, .]]

>> Trigrams: 
[[Today, ,, multi], [,, multi, -], [multi, -, core], [-, core, CPUs], [core, CPUs, GPUs], [CPUs, GPUs,  ], [GPUs,  , accelerate], [ , accelerate, deep], [accelerate, deep, learning], [deep, learning, ,], [learning, ,, analytics], [,, analytics, ,], [analytics, ,, engineering], [,, engineering,  ], [engineering,  , applications], [ , applications, —], [applications, —, enabling], [—, enabling, data], [enabling, data, scientists], [data, scientists, ,], [scientists, ,, researchers], [,, researchers, ,], [researchers, ,,  ], [,,  , engineers], [ , engineers, tackle], [engineers, tackle, challenges], [tackle, challenges,  ], [challenges,  , impossible], [ , impossible, .]]

>> Noun Phrases are: 
[both multi-core CPUs, GPUs, deep learning, analytics, engineering  applications, enabling data scientists, researchers, engineers, challenges]

>> Named Entities are: 
[('Today', 'DATE')] 

------------------- Sentence 2 -------------------

New deep learning algorithms leverage  massively parallel neural networks inspired by the  human brain. 


>> Tokens are: 
[New, deep, learning, algorithms, leverage,  , massively, parallel, neural, networks, inspired,  , human, brain, .] 

>> PoS Tags are: 
[('New', 'ADJ'), ('deep', 'ADJ'), ('learning', 'VERB'), ('algorithms', 'NOUN'), ('leverage', 'NOUN'), (' ', 'SPACE'), ('massively', 'ADV'), ('parallel', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('inspired', 'VERB'), (' ', 'SPACE'), ('human', 'ADJ'), ('brain', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('New', 'amod'), ('deep', 'amod'), ('learning', 'amod'), ('algorithms', 'compound'), ('leverage', 'ROOT'), (' ', 'appos'), ('massively', 'advmod'), ('parallel', 'amod'), ('neural', 'amod'), ('networks', 'appos'), ('inspired', 'acl'), (' ', 'nmod'), ('human', 'amod'), ('brain', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[New, deep], [deep, learning], [learning, algorithms], [algorithms, leverage], [leverage,  ], [ , massively], [massively, parallel], [parallel, neural], [neural, networks], [networks, inspired], [inspired,  ], [ , human], [human, brain], [brain, .]]

>> Trigrams: 
[[New, deep, learning], [deep, learning, algorithms], [learning, algorithms, leverage], [algorithms, leverage,  ], [leverage,  , massively], [ , massively, parallel], [massively, parallel, neural], [parallel, neural, networks], [neural, networks, inspired], [networks, inspired,  ], [inspired,  , human], [ , human, brain], [human, brain, .]]

>> Noun Phrases are: 
[New deep learning algorithms leverage, massively parallel neural networks, the  human brain]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Instead of experts handcrafting software,  a deep learning model writes its own software by  learning from many examples, delivering super-human  accuracy for common tasks like image, video, and text  processing. 


>> Tokens are: 
[Instead, experts, handcrafting, software, ,,  , deep, learning, model, writes, software,  , learning, examples, ,, delivering, super, -, human,  , accuracy, common, tasks, like, image, ,, video, ,, text,  , processing, .] 

>> PoS Tags are: 
[('Instead', 'ADV'), ('experts', 'NOUN'), ('handcrafting', 'VERB'), ('software', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('model', 'NOUN'), ('writes', 'VERB'), ('software', 'NOUN'), (' ', 'SPACE'), ('learning', 'VERB'), ('examples', 'NOUN'), (',', 'PUNCT'), ('delivering', 'VERB'), ('super', 'ADJ'), ('-', 'ADJ'), ('human', 'ADJ'), (' ', 'SPACE'), ('accuracy', 'NOUN'), ('common', 'ADJ'), ('tasks', 'NOUN'), ('like', 'ADP'), ('image', 'NOUN'), (',', 'PUNCT'), ('video', 'NOUN'), (',', 'PUNCT'), ('text', 'NOUN'), (' ', 'SPACE'), ('processing', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Instead', 'advmod'), ('experts', 'pobj'), ('handcrafting', 'acl'), ('software', 'dobj'), (',', 'punct'), (' ', 'nsubj'), ('deep', 'amod'), ('learning', 'compound'), ('model', 'nsubj'), ('writes', 'ROOT'), ('software', 'dobj'), (' ', 'pobj'), ('learning', 'acl'), ('examples', 'pobj'), (',', 'punct'), ('delivering', 'advcl'), ('super', 'amod'), ('-', 'amod'), ('human', 'amod'), (' ', 'compound'), ('accuracy', 'dobj'), ('common', 'amod'), ('tasks', 'pobj'), ('like', 'prep'), ('image', 'pobj'), (',', 'punct'), ('video', 'conj'), (',', 'punct'), ('text', 'compound'), (' ', 'compound'), ('processing', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Instead, experts], [experts, handcrafting], [handcrafting, software], [software, ,], [,,  ], [ , deep], [deep, learning], [learning, model], [model, writes], [writes, software], [software,  ], [ , learning], [learning, examples], [examples, ,], [,, delivering], [delivering, super], [super, -], [-, human], [human,  ], [ , accuracy], [accuracy, common], [common, tasks], [tasks, like], [like, image], [image, ,], [,, video], [video, ,], [,, text], [text,  ], [ , processing], [processing, .]]

>> Trigrams: 
[[Instead, experts, handcrafting], [experts, handcrafting, software], [handcrafting, software, ,], [software, ,,  ], [,,  , deep], [ , deep, learning], [deep, learning, model], [learning, model, writes], [model, writes, software], [writes, software,  ], [software,  , learning], [ , learning, examples], [learning, examples, ,], [examples, ,, delivering], [,, delivering, super], [delivering, super, -], [super, -, human], [-, human,  ], [human,  , accuracy], [ , accuracy, common], [accuracy, common, tasks], [common, tasks, like], [tasks, like, image], [like, image, ,], [image, ,, video], [,, video, ,], [video, ,, text], [,, text,  ], [text,  , processing], [ , processing, .]]

>> Noun Phrases are: 
[experts, software, a deep learning model, its own software, many examples, super-human  accuracy, common tasks, image, video, text  processing]

>> Named Entities are: 
[] 


================================ Paragraph 43 =================================

Figure 2 provides an example of how the combination  of using parallel computing and running new deep  learning massively parallel algorithms provide a  superhuman accuracy rate in identifying images.  

------------------- Sentence 1 -------------------

Figure 2 provides an example of how the combination  of using parallel computing and running new deep  learning massively parallel algorithms provide a  superhuman accuracy rate in identifying images. 


>> Tokens are: 
[Figure, 2, provides, example, combination,  , parallel, computing, running, new, deep,  , learning, massively, parallel, algorithms, provide,  , superhuman, accuracy, rate, identifying, images, .] 

>> PoS Tags are: 
[('Figure', 'NOUN'), ('2', 'NUM'), ('provides', 'VERB'), ('example', 'NOUN'), ('combination', 'NOUN'), (' ', 'SPACE'), ('parallel', 'ADJ'), ('computing', 'NOUN'), ('running', 'VERB'), ('new', 'ADJ'), ('deep', 'ADJ'), (' ', 'SPACE'), ('learning', 'VERB'), ('massively', 'ADV'), ('parallel', 'ADJ'), ('algorithms', 'NOUN'), ('provide', 'VERB'), (' ', 'SPACE'), ('superhuman', 'ADJ'), ('accuracy', 'NOUN'), ('rate', 'NOUN'), ('identifying', 'VERB'), ('images', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Figure', 'nsubj'), ('2', 'nummod'), ('provides', 'ROOT'), ('example', 'dobj'), ('combination', 'pobj'), (' ', 'appos'), ('parallel', 'amod'), ('computing', 'dobj'), ('running', 'conj'), ('new', 'amod'), ('deep', 'amod'), (' ', 'dobj'), ('learning', 'conj'), ('massively', 'advmod'), ('parallel', 'amod'), ('algorithms', 'nsubj'), ('provide', 'ccomp'), (' ', 'compound'), ('superhuman', 'amod'), ('accuracy', 'compound'), ('rate', 'dobj'), ('identifying', 'pcomp'), ('images', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Figure, 2], [2, provides], [provides, example], [example, combination], [combination,  ], [ , parallel], [parallel, computing], [computing, running], [running, new], [new, deep], [deep,  ], [ , learning], [learning, massively], [massively, parallel], [parallel, algorithms], [algorithms, provide], [provide,  ], [ , superhuman], [superhuman, accuracy], [accuracy, rate], [rate, identifying], [identifying, images], [images, .]]

>> Trigrams: 
[[Figure, 2, provides], [2, provides, example], [provides, example, combination], [example, combination,  ], [combination,  , parallel], [ , parallel, computing], [parallel, computing, running], [computing, running, new], [running, new, deep], [new, deep,  ], [deep,  , learning], [ , learning, massively], [learning, massively, parallel], [massively, parallel, algorithms], [parallel, algorithms, provide], [algorithms, provide,  ], [provide,  , superhuman], [ , superhuman, accuracy], [superhuman, accuracy, rate], [accuracy, rate, identifying], [rate, identifying, images], [identifying, images, .]]

>> Noun Phrases are: 
[Figure, an example, how the combination, parallel computing, massively parallel algorithms, a  superhuman accuracy rate, images]

>> Named Entities are: 
[('2', 'CARDINAL')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 44 =================================

BIG DATA 

------------------- Sentence 1 -------------------

BIG DATA 


>> Tokens are: 
[BIG, DATA] 

>> PoS Tags are: 
[('BIG', 'ADJ'), ('DATA', 'PROPN')] 

>> Dependency Tags are: 
[('BIG', 'amod'), ('DATA', 'ROOT')]

>> Bigrams: 
[[BIG, DATA]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[BIG DATA]

>> Named Entities are: 
[('BIG DATA', 'ORG')] 


================================ Paragraph 45 =================================

Data is the most important asset in an organization. In  fact, the Economist in May 2017 claimed that data has  become more valuable than oil. And data continues to  grow. According to IDC’s The Digital Universe in 2020  

------------------- Sentence 1 -------------------

Data is the most important asset in an organization. 


>> Tokens are: 
[Data, important, asset, organization, .] 

>> PoS Tags are: 
[('Data', 'PROPN'), ('important', 'ADJ'), ('asset', 'NOUN'), ('organization', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Data', 'nsubj'), ('important', 'amod'), ('asset', 'attr'), ('organization', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Data, important], [important, asset], [asset, organization], [organization, .]]

>> Trigrams: 
[[Data, important, asset], [important, asset, organization], [asset, organization, .]]

>> Noun Phrases are: 
[Data, the most important asset, an organization]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In  fact, the Economist in May 2017 claimed that data has  become more valuable than oil. 


>> Tokens are: 
[ , fact, ,, Economist, 2017, claimed, data,  , valuable, oil, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('fact', 'NOUN'), (',', 'PUNCT'), ('Economist', 'PROPN'), ('2017', 'NUM'), ('claimed', 'VERB'), ('data', 'NOUN'), (' ', 'SPACE'), ('valuable', 'ADJ'), ('oil', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'pobj'), ('fact', 'pobj'), (',', 'punct'), ('Economist', 'nsubj'), ('2017', 'nummod'), ('claimed', 'ROOT'), ('data', 'nsubj'), (' ', 'nsubj'), ('valuable', 'acomp'), ('oil', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , fact], [fact, ,], [,, Economist], [Economist, 2017], [2017, claimed], [claimed, data], [data,  ], [ , valuable], [valuable, oil], [oil, .]]

>> Trigrams: 
[[ , fact, ,], [fact, ,, Economist], [,, Economist, 2017], [Economist, 2017, claimed], [2017, claimed, data], [claimed, data,  ], [data,  , valuable], [ , valuable, oil], [valuable, oil, .]]

>> Noun Phrases are: 
[fact, the Economist, May, data, oil]

>> Named Entities are: 
[('May 2017', 'DATE')] 

------------------- Sentence 3 -------------------

And data continues to  grow. 


>> Tokens are: 
[data, continues,  , grow, .] 

>> PoS Tags are: 
[('data', 'NOUN'), ('continues', 'VERB'), (' ', 'SPACE'), ('grow', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('data', 'nsubj'), ('continues', 'ROOT'), (' ', 'nsubj'), ('grow', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[data, continues], [continues,  ], [ , grow], [grow, .]]

>> Trigrams: 
[[data, continues,  ], [continues,  , grow], [ , grow, .]]

>> Noun Phrases are: 
[data]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

According to IDC’s The Digital Universe in 2020   


>> Tokens are: 
[According, IDC, Digital, Universe, 2020,  ] 

>> PoS Tags are: 
[('According', 'VERB'), ('IDC', 'PROPN'), ('Digital', 'PROPN'), ('Universe', 'PROPN'), ('2020', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('According', 'ROOT'), ('IDC', 'pobj'), ('Digital', 'compound'), ('Universe', 'pobj'), ('2020', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[According, IDC], [IDC, Digital], [Digital, Universe], [Universe, 2020], [2020,  ]]

>> Trigrams: 
[[According, IDC, Digital], [IDC, Digital, Universe], [Digital, Universe, 2020], [Universe, 2020,  ]]

>> Noun Phrases are: 
[IDC, The Digital Universe]

>> Named Entities are: 
[('Digital', 'ORG'), ('2020', 'DATE')] 


================================ Paragraph 46 =================================

report, “The Digital Universe is the total collection  of newly created data including streaming video and  stored digital data which is growing at an incredible  pace. It doubles in size every two years, in 2013 it was  4.4 Zettabytes, and is expected to exceed 50 Zettabytes  in 2020.”  

------------------- Sentence 1 -------------------

report, “The Digital Universe is the total collection  of newly created data including streaming video and  stored digital data which is growing at an incredible  pace. 


>> Tokens are: 
[report, ,, “, Digital, Universe, total, collection,  , newly, created, data, including, streaming, video,  , stored, digital, data, growing, incredible,  , pace, .] 

>> PoS Tags are: 
[('report', 'NOUN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Digital', 'PROPN'), ('Universe', 'PROPN'), ('total', 'ADJ'), ('collection', 'NOUN'), (' ', 'SPACE'), ('newly', 'ADV'), ('created', 'VERB'), ('data', 'NOUN'), ('including', 'VERB'), ('streaming', 'VERB'), ('video', 'NOUN'), (' ', 'SPACE'), ('stored', 'VERB'), ('digital', 'ADJ'), ('data', 'NOUN'), ('growing', 'VERB'), ('incredible', 'ADJ'), (' ', 'SPACE'), ('pace', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('report', 'ROOT'), (',', 'punct'), ('“', 'punct'), ('Digital', 'compound'), ('Universe', 'nsubj'), ('total', 'amod'), ('collection', 'attr'), (' ', 'appos'), ('newly', 'advmod'), ('created', 'amod'), ('data', 'pobj'), ('including', 'prep'), ('streaming', 'amod'), ('video', 'pobj'), (' ', 'nsubj'), ('stored', 'conj'), ('digital', 'amod'), ('data', 'dobj'), ('growing', 'relcl'), ('incredible', 'amod'), (' ', 'compound'), ('pace', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[report, ,], [,, “], [“, Digital], [Digital, Universe], [Universe, total], [total, collection], [collection,  ], [ , newly], [newly, created], [created, data], [data, including], [including, streaming], [streaming, video], [video,  ], [ , stored], [stored, digital], [digital, data], [data, growing], [growing, incredible], [incredible,  ], [ , pace], [pace, .]]

>> Trigrams: 
[[report, ,, “], [,, “, Digital], [“, Digital, Universe], [Digital, Universe, total], [Universe, total, collection], [total, collection,  ], [collection,  , newly], [ , newly, created], [newly, created, data], [created, data, including], [data, including, streaming], [including, streaming, video], [streaming, video,  ], [video,  , stored], [ , stored, digital], [stored, digital, data], [digital, data, growing], [data, growing, incredible], [growing, incredible,  ], [incredible,  , pace], [ , pace, .]]

>> Noun Phrases are: 
[report, The Digital Universe, the total collection, newly created data, streaming video, digital data, an incredible  pace]

>> Named Entities are: 
[('Digital', 'ORG')] 

------------------- Sentence 2 -------------------

It doubles in size every two years, in 2013 it was  4.4 Zettabytes, and is expected to exceed 50 Zettabytes  in 2020.” 


>> Tokens are: 
[doubles, size, years, ,, 2013,  , 4.4, Zettabytes, ,, expected, exceed, 50, Zettabytes,  , 2020, ., ”] 

>> PoS Tags are: 
[('doubles', 'VERB'), ('size', 'NOUN'), ('years', 'NOUN'), (',', 'PUNCT'), ('2013', 'NUM'), (' ', 'SPACE'), ('4.4', 'NUM'), ('Zettabytes', 'PROPN'), (',', 'PUNCT'), ('expected', 'VERB'), ('exceed', 'VERB'), ('50', 'NUM'), ('Zettabytes', 'PROPN'), (' ', 'SPACE'), ('2020', 'NUM'), ('.', 'PUNCT'), ('”', 'PUNCT')] 

>> Dependency Tags are: 
[('doubles', 'ccomp'), ('size', 'pobj'), ('years', 'npadvmod'), (',', 'punct'), ('2013', 'pobj'), (' ', 'attr'), ('4.4', 'nummod'), ('Zettabytes', 'dobj'), (',', 'punct'), ('expected', 'conj'), ('exceed', 'xcomp'), ('50', 'nummod'), ('Zettabytes', 'dobj'), (' ', 'nummod'), ('2020', 'pobj'), ('.', 'punct'), ('”', 'punct')]

>> Bigrams: 
[[doubles, size], [size, years], [years, ,], [,, 2013], [2013,  ], [ , 4.4], [4.4, Zettabytes], [Zettabytes, ,], [,, expected], [expected, exceed], [exceed, 50], [50, Zettabytes], [Zettabytes,  ], [ , 2020], [2020, .], [., ”]]

>> Trigrams: 
[[doubles, size, years], [size, years, ,], [years, ,, 2013], [,, 2013,  ], [2013,  , 4.4], [ , 4.4, Zettabytes], [4.4, Zettabytes, ,], [Zettabytes, ,, expected], [,, expected, exceed], [expected, exceed, 50], [exceed, 50, Zettabytes], [50, Zettabytes,  ], [Zettabytes,  , 2020], [ , 2020, .], [2020, ., ”]]

>> Noun Phrases are: 
[It, size, it, 4.4 Zettabytes, 50 Zettabytes]

>> Named Entities are: 
[('every two years', 'DATE'), ('2013', 'DATE'), ('4.4', 'CARDINAL'), ('50', 'CARDINAL'), ('Zettabytes  ', 'PERSON'), ('2020', 'DATE')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 47 =================================

Deep learning technology and neural networks  have been around for a long time. So why is deep  learning now starting to peak and what is the value  of big data? Andrew Ng, a luminary in the field of AI,  described the evolution of big data and deep learning  at the 2016 Spark Conferenceii. Ng indicated that  if you take an older traditional learning algorithm  such as logistic regression and feed it more data, the  system performance plateaus because the algorithm  cannot squeeze any more insight with more data. Ng  observed that deep neural networks are different. The  more training data is fed into the neural network, the  more accurate it becomes, as shown in Figure 3. The  adoption of deep learning is rapidly growing because of  algorithm innovation, performance leaps of GPU-based  computing systems, and the constant growth of big  data.  

------------------- Sentence 1 -------------------

Deep learning technology and neural networks  have been around for a long time. 


>> Tokens are: 
[Deep, learning, technology, neural, networks,  , long, time, .] 

>> PoS Tags are: 
[('Deep', 'ADJ'), ('learning', 'NOUN'), ('technology', 'NOUN'), ('neural', 'ADJ'), ('networks', 'NOUN'), (' ', 'SPACE'), ('long', 'ADJ'), ('time', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Deep', 'amod'), ('learning', 'compound'), ('technology', 'nsubj'), ('neural', 'amod'), ('networks', 'conj'), (' ', 'nsubj'), ('long', 'amod'), ('time', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Deep, learning], [learning, technology], [technology, neural], [neural, networks], [networks,  ], [ , long], [long, time], [time, .]]

>> Trigrams: 
[[Deep, learning, technology], [learning, technology, neural], [technology, neural, networks], [neural, networks,  ], [networks,  , long], [ , long, time], [long, time, .]]

>> Noun Phrases are: 
[Deep learning technology, neural networks, a long time]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

So why is deep  learning now starting to peak and what is the value  of big data? 


>> Tokens are: 
[deep,  , learning, starting, peak, value,  , big, data, ?] 

>> PoS Tags are: 
[('deep', 'ADJ'), (' ', 'SPACE'), ('learning', 'VERB'), ('starting', 'VERB'), ('peak', 'VERB'), ('value', 'NOUN'), (' ', 'SPACE'), ('big', 'ADJ'), ('data', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('deep', 'amod'), (' ', 'nsubj'), ('learning', 'advcl'), ('starting', 'advcl'), ('peak', 'xcomp'), ('value', 'nsubj'), (' ', 'appos'), ('big', 'amod'), ('data', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[deep,  ], [ , learning], [learning, starting], [starting, peak], [peak, value], [value,  ], [ , big], [big, data], [data, ?]]

>> Trigrams: 
[[deep,  , learning], [ , learning, starting], [learning, starting, peak], [starting, peak, value], [peak, value,  ], [value,  , big], [ , big, data], [big, data, ?]]

>> Noun Phrases are: 
[what, the value, big data]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Andrew Ng, a luminary in the field of AI,  described the evolution of big data and deep learning  at the 2016 Spark Conferenceii. 


>> Tokens are: 
[Andrew, Ng, ,, luminary, field, AI, ,,  , described, evolution, big, data, deep, learning,  , 2016, Spark, Conferenceii, .] 

>> PoS Tags are: 
[('Andrew', 'PROPN'), ('Ng', 'PROPN'), (',', 'PUNCT'), ('luminary', 'NOUN'), ('field', 'NOUN'), ('AI', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE'), ('described', 'VERB'), ('evolution', 'NOUN'), ('big', 'ADJ'), ('data', 'NOUN'), ('deep', 'ADJ'), ('learning', 'VERB'), (' ', 'SPACE'), ('2016', 'NUM'), ('Spark', 'PROPN'), ('Conferenceii', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Andrew', 'compound'), ('Ng', 'nsubj'), (',', 'punct'), ('luminary', 'appos'), ('field', 'pobj'), ('AI', 'pobj'), (',', 'punct'), (' ', 'nsubj'), ('described', 'ROOT'), ('evolution', 'dobj'), ('big', 'amod'), ('data', 'pobj'), ('deep', 'amod'), ('learning', 'advcl'), (' ', 'dobj'), ('2016', 'nummod'), ('Spark', 'compound'), ('Conferenceii', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Andrew, Ng], [Ng, ,], [,, luminary], [luminary, field], [field, AI], [AI, ,], [,,  ], [ , described], [described, evolution], [evolution, big], [big, data], [data, deep], [deep, learning], [learning,  ], [ , 2016], [2016, Spark], [Spark, Conferenceii], [Conferenceii, .]]

>> Trigrams: 
[[Andrew, Ng, ,], [Ng, ,, luminary], [,, luminary, field], [luminary, field, AI], [field, AI, ,], [AI, ,,  ], [,,  , described], [ , described, evolution], [described, evolution, big], [evolution, big, data], [big, data, deep], [data, deep, learning], [deep, learning,  ], [learning,  , 2016], [ , 2016, Spark], [2016, Spark, Conferenceii], [Spark, Conferenceii, .]]

>> Noun Phrases are: 
[Andrew Ng, a luminary, the field, AI, the evolution, big data, the 2016 Spark Conferenceii]

>> Named Entities are: 
[('Andrew Ng', 'PERSON'), ('AI', 'ORG'), ('2016', 'DATE'), ('Spark Conferenceii', 'PERSON')] 

------------------- Sentence 4 -------------------

Ng indicated that  if you take an older traditional learning algorithm  such as logistic regression and feed it more data, the  system performance plateaus because the algorithm  cannot squeeze any more insight with more data. 


>> Tokens are: 
[Ng, indicated,  , older, traditional, learning, algorithm,  , logistic, regression, feed, data, ,,  , system, performance, plateaus, algorithm,  , squeeze, insight, data, .] 

>> PoS Tags are: 
[('Ng', 'PROPN'), ('indicated', 'VERB'), (' ', 'SPACE'), ('older', 'ADJ'), ('traditional', 'ADJ'), ('learning', 'NOUN'), ('algorithm', 'NOUN'), (' ', 'SPACE'), ('logistic', 'ADJ'), ('regression', 'NOUN'), ('feed', 'VERB'), ('data', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('system', 'NOUN'), ('performance', 'NOUN'), ('plateaus', 'NOUN'), ('algorithm', 'NOUN'), (' ', 'SPACE'), ('squeeze', 'VERB'), ('insight', 'NOUN'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Ng', 'nsubj'), ('indicated', 'ROOT'), (' ', 'meta'), ('older', 'amod'), ('traditional', 'amod'), ('learning', 'compound'), ('algorithm', 'dobj'), (' ', 'dobj'), ('logistic', 'amod'), ('regression', 'pobj'), ('feed', 'conj'), ('data', 'dobj'), (',', 'punct'), (' ', 'compound'), ('system', 'compound'), ('performance', 'compound'), ('plateaus', 'meta'), ('algorithm', 'nsubj'), (' ', 'nsubj'), ('squeeze', 'advcl'), ('insight', 'dobj'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Ng, indicated], [indicated,  ], [ , older], [older, traditional], [traditional, learning], [learning, algorithm], [algorithm,  ], [ , logistic], [logistic, regression], [regression, feed], [feed, data], [data, ,], [,,  ], [ , system], [system, performance], [performance, plateaus], [plateaus, algorithm], [algorithm,  ], [ , squeeze], [squeeze, insight], [insight, data], [data, .]]

>> Trigrams: 
[[Ng, indicated,  ], [indicated,  , older], [ , older, traditional], [older, traditional, learning], [traditional, learning, algorithm], [learning, algorithm,  ], [algorithm,  , logistic], [ , logistic, regression], [logistic, regression, feed], [regression, feed, data], [feed, data, ,], [data, ,,  ], [,,  , system], [ , system, performance], [system, performance, plateaus], [performance, plateaus, algorithm], [plateaus, algorithm,  ], [algorithm,  , squeeze], [ , squeeze, insight], [squeeze, insight, data], [insight, data, .]]

>> Noun Phrases are: 
[Ng, you, an older traditional learning algorithm, logistic regression, it, more data, the algorithm, any more insight, more data]

>> Named Entities are: 
[] 

------------------- Sentence 5 -------------------

Ng  observed that deep neural networks are different. 


>> Tokens are: 
[Ng,  , observed, deep, neural, networks, different, .] 

>> PoS Tags are: 
[('Ng', 'PROPN'), (' ', 'SPACE'), ('observed', 'VERB'), ('deep', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('different', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Ng', 'advmod'), (' ', 'nsubj'), ('observed', 'ROOT'), ('deep', 'amod'), ('neural', 'amod'), ('networks', 'nsubj'), ('different', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[Ng,  ], [ , observed], [observed, deep], [deep, neural], [neural, networks], [networks, different], [different, .]]

>> Trigrams: 
[[Ng,  , observed], [ , observed, deep], [observed, deep, neural], [deep, neural, networks], [neural, networks, different], [networks, different, .]]

>> Noun Phrases are: 
[deep neural networks]

>> Named Entities are: 
[] 

------------------- Sentence 6 -------------------

The  more training data is fed into the neural network, the  more accurate it becomes, as shown in Figure 3. 


>> Tokens are: 
[ , training, data, fed, neural, network, ,,  , accurate, ,, shown, Figure, 3, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('training', 'NOUN'), ('data', 'NOUN'), ('fed', 'VERB'), ('neural', 'ADJ'), ('network', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('accurate', 'ADJ'), (',', 'PUNCT'), ('shown', 'VERB'), ('Figure', 'PROPN'), ('3', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'npadvmod'), ('training', 'compound'), ('data', 'nsubjpass'), ('fed', 'ROOT'), ('neural', 'amod'), ('network', 'pobj'), (',', 'punct'), (' ', 'npadvmod'), ('accurate', 'advcl'), (',', 'punct'), ('shown', 'advcl'), ('Figure', 'pobj'), ('3', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[ , training], [training, data], [data, fed], [fed, neural], [neural, network], [network, ,], [,,  ], [ , accurate], [accurate, ,], [,, shown], [shown, Figure], [Figure, 3], [3, .]]

>> Trigrams: 
[[ , training, data], [training, data, fed], [data, fed, neural], [fed, neural, network], [neural, network, ,], [network, ,,  ], [,,  , accurate], [ , accurate, ,], [accurate, ,, shown], [,, shown, Figure], [shown, Figure, 3], [Figure, 3, .]]

>> Noun Phrases are: 
[The  more training data, the neural network, it, Figure]

>> Named Entities are: 
[('3', 'CARDINAL')] 

------------------- Sentence 7 -------------------

The  adoption of deep learning is rapidly growing because of  algorithm innovation, performance leaps of GPU-based  computing systems, and the constant growth of big  data. 


>> Tokens are: 
[ , adoption, deep, learning, rapidly, growing,  , algorithm, innovation, ,, performance, leaps, GPU, -, based,  , computing, systems, ,, constant, growth, big,  , data, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('adoption', 'NOUN'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('rapidly', 'ADV'), ('growing', 'VERB'), (' ', 'SPACE'), ('algorithm', 'NOUN'), ('innovation', 'NOUN'), (',', 'PUNCT'), ('performance', 'NOUN'), ('leaps', 'NOUN'), ('GPU', 'PROPN'), ('-', 'PUNCT'), ('based', 'VERB'), (' ', 'SPACE'), ('computing', 'NOUN'), ('systems', 'NOUN'), (',', 'PUNCT'), ('constant', 'ADJ'), ('growth', 'NOUN'), ('big', 'ADJ'), (' ', 'SPACE'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('adoption', 'nsubj'), ('deep', 'amod'), ('learning', 'pobj'), ('rapidly', 'advmod'), ('growing', 'ROOT'), (' ', 'pobj'), ('algorithm', 'compound'), ('innovation', 'pobj'), (',', 'punct'), ('performance', 'compound'), ('leaps', 'conj'), ('GPU', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), (' ', 'compound'), ('computing', 'compound'), ('systems', 'pobj'), (',', 'punct'), ('constant', 'amod'), ('growth', 'conj'), ('big', 'amod'), (' ', 'compound'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , adoption], [adoption, deep], [deep, learning], [learning, rapidly], [rapidly, growing], [growing,  ], [ , algorithm], [algorithm, innovation], [innovation, ,], [,, performance], [performance, leaps], [leaps, GPU], [GPU, -], [-, based], [based,  ], [ , computing], [computing, systems], [systems, ,], [,, constant], [constant, growth], [growth, big], [big,  ], [ , data], [data, .]]

>> Trigrams: 
[[ , adoption, deep], [adoption, deep, learning], [deep, learning, rapidly], [learning, rapidly, growing], [rapidly, growing,  ], [growing,  , algorithm], [ , algorithm, innovation], [algorithm, innovation, ,], [innovation, ,, performance], [,, performance, leaps], [performance, leaps, GPU], [leaps, GPU, -], [GPU, -, based], [-, based,  ], [based,  , computing], [ , computing, systems], [computing, systems, ,], [systems, ,, constant], [,, constant, growth], [constant, growth, big], [growth, big,  ], [big,  , data], [ , data, .]]

>> Noun Phrases are: 
[The  adoption, deep learning, algorithm innovation, performance leaps, GPU-based  computing systems, the constant growth, big  data]

>> Named Entities are: 
[('GPU', 'ORG')] 

------------------- Sentence 8 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 48 =================================

Figure 2. The big bang of intelligence fueled by parallel computing, new  algorithms and big data. Courtesy of Pure Storage.  

------------------- Sentence 1 -------------------

Figure 2. 


>> Tokens are: 
[Figure, 2, .] 

>> PoS Tags are: 
[('Figure', 'NOUN'), ('2', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Figure', 'ROOT'), ('2', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[Figure, 2], [2, .]]

>> Trigrams: 
[[Figure, 2, .]]

>> Noun Phrases are: 
[Figure]

>> Named Entities are: 
[('2', 'CARDINAL')] 

------------------- Sentence 2 -------------------

The big bang of intelligence fueled by parallel computing, new  algorithms and big data. 


>> Tokens are: 
[big, bang, intelligence, fueled, parallel, computing, ,, new,  , algorithms, big, data, .] 

>> PoS Tags are: 
[('big', 'ADJ'), ('bang', 'NOUN'), ('intelligence', 'NOUN'), ('fueled', 'VERB'), ('parallel', 'ADJ'), ('computing', 'NOUN'), (',', 'PUNCT'), ('new', 'ADJ'), (' ', 'SPACE'), ('algorithms', 'NOUN'), ('big', 'ADJ'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('big', 'amod'), ('bang', 'ROOT'), ('intelligence', 'pobj'), ('fueled', 'acl'), ('parallel', 'amod'), ('computing', 'amod'), (',', 'punct'), ('new', 'amod'), (' ', 'compound'), ('algorithms', 'pobj'), ('big', 'amod'), ('data', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[big, bang], [bang, intelligence], [intelligence, fueled], [fueled, parallel], [parallel, computing], [computing, ,], [,, new], [new,  ], [ , algorithms], [algorithms, big], [big, data], [data, .]]

>> Trigrams: 
[[big, bang, intelligence], [bang, intelligence, fueled], [intelligence, fueled, parallel], [fueled, parallel, computing], [parallel, computing, ,], [computing, ,, new], [,, new,  ], [new,  , algorithms], [ , algorithms, big], [algorithms, big, data], [big, data, .]]

>> Noun Phrases are: 
[The big bang, intelligence, parallel computing, new  algorithms, big data]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Courtesy of Pure Storage. 


>> Tokens are: 
[Courtesy, Pure, Storage, .] 

>> PoS Tags are: 
[('Courtesy', 'NOUN'), ('Pure', 'PROPN'), ('Storage', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Courtesy', 'ROOT'), ('Pure', 'compound'), ('Storage', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Courtesy, Pure], [Pure, Storage], [Storage, .]]

>> Trigrams: 
[[Courtesy, Pure, Storage], [Pure, Storage, .]]

>> Noun Phrases are: 
[Courtesy, Pure Storage]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 49 =================================

Figure 3. Deep learning performance grows with more data. (Source: Andrew Ng).

------------------- Sentence 1 -------------------

Figure 3. 


>> Tokens are: 
[Figure, 3, .] 

>> PoS Tags are: 
[('Figure', 'VERB'), ('3', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Figure', 'ROOT'), ('3', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[Figure, 3], [3, .]]

>> Trigrams: 
[[Figure, 3, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('3', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Deep learning performance grows with more data. 


>> Tokens are: 
[Deep, learning, performance, grows, data, .] 

>> PoS Tags are: 
[('Deep', 'ADJ'), ('learning', 'NOUN'), ('performance', 'NOUN'), ('grows', 'VERB'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Deep', 'amod'), ('learning', 'compound'), ('performance', 'nsubj'), ('grows', 'ROOT'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Deep, learning], [learning, performance], [performance, grows], [grows, data], [data, .]]

>> Trigrams: 
[[Deep, learning, performance], [learning, performance, grows], [performance, grows, data], [grows, data, .]]

>> Noun Phrases are: 
[Deep learning performance, more data]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

(Source: Andrew Ng). 


>> Tokens are: 
[(, Source, :, Andrew, Ng, ), .] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('Source', 'NOUN'), (':', 'PUNCT'), ('Andrew', 'PROPN'), ('Ng', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('Source', 'ROOT'), (':', 'punct'), ('Andrew', 'compound'), ('Ng', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[(, Source], [Source, :], [:, Andrew], [Andrew, Ng], [Ng, )], [), .]]

>> Trigrams: 
[[(, Source, :], [Source, :, Andrew], [:, Andrew, Ng], [Andrew, Ng, )], [Ng, ), .]]

>> Noun Phrases are: 
[(Source, Andrew Ng]

>> Named Entities are: 
[('Andrew Ng', 'PERSON')] 


================================ Paragraph 50 =================================

DATANAMI: ACCELER ATE DEEP LEARNING WITH A MODERN DATA PLATFORM 

------------------- Sentence 1 -------------------

DATANAMI: ACCELER ATE DEEP LEARNING WITH A MODERN DATA PLATFORM 


>> Tokens are: 
[DATANAMI, :, ACCELER, ATE, DEEP, LEARNING, MODERN, DATA, PLATFORM] 

>> PoS Tags are: 
[('DATANAMI', 'PROPN'), (':', 'PUNCT'), ('ACCELER', 'ADJ'), ('ATE', 'VERB'), ('DEEP', 'ADJ'), ('LEARNING', 'NOUN'), ('MODERN', 'PROPN'), ('DATA', 'PROPN'), ('PLATFORM', 'NOUN')] 

>> Dependency Tags are: 
[('DATANAMI', 'dep'), (':', 'punct'), ('ACCELER', 'nsubj'), ('ATE', 'ROOT'), ('DEEP', 'amod'), ('LEARNING', 'dobj'), ('MODERN', 'compound'), ('DATA', 'compound'), ('PLATFORM', 'pobj')]

>> Bigrams: 
[[DATANAMI, :], [:, ACCELER], [ACCELER, ATE], [ATE, DEEP], [DEEP, LEARNING], [LEARNING, MODERN], [MODERN, DATA], [DATA, PLATFORM]]

>> Trigrams: 
[[DATANAMI, :, ACCELER], [:, ACCELER, ATE], [ACCELER, ATE, DEEP], [ATE, DEEP, LEARNING], [DEEP, LEARNING, MODERN], [LEARNING, MODERN, DATA], [MODERN, DATA, PLATFORM]]

>> Noun Phrases are: 
[DEEP LEARNING, A MODERN DATA PLATFORM]

>> Named Entities are: 
[] 


================================ Paragraph 51 =================================

6TABOR CUSTOM PUBLISHING 

------------------- Sentence 1 -------------------

6TABOR CUSTOM PUBLISHING 


>> Tokens are: 
[6TABOR, CUSTOM, PUBLISHING] 

>> PoS Tags are: 
[('6TABOR', 'NOUN'), ('CUSTOM', 'NOUN'), ('PUBLISHING', 'NOUN')] 

>> Dependency Tags are: 
[('6TABOR', 'compound'), ('CUSTOM', 'compound'), ('PUBLISHING', 'ROOT')]

>> Bigrams: 
[[6TABOR, CUSTOM], [CUSTOM, PUBLISHING]]

>> Trigrams: 
[[6TABOR, CUSTOM, PUBLISHING]]

>> Noun Phrases are: 
[6TABOR CUSTOM PUBLISHING]

>> Named Entities are: 
[] 


================================ Paragraph 52 =================================

WHY TRADITIONAL STORAGE CAN’T MEET DEEP LEARNING NEEDS 

------------------- Sentence 1 -------------------

WHY TRADITIONAL STORAGE CAN’T MEET DEEP LEARNING NEEDS 


>> Tokens are: 
[TRADITIONAL, STORAGE, CAN’T, MEET, DEEP, LEARNING, NEEDS] 

>> PoS Tags are: 
[('TRADITIONAL', 'PROPN'), ('STORAGE', 'NOUN'), ('CAN’T', 'NOUN'), ('MEET', 'VERB'), ('DEEP', 'PROPN'), ('LEARNING', 'PROPN'), ('NEEDS', 'PROPN')] 

>> Dependency Tags are: 
[('TRADITIONAL', 'compound'), ('STORAGE', 'compound'), ('CAN’T', 'nsubj'), ('MEET', 'ROOT'), ('DEEP', 'compound'), ('LEARNING', 'compound'), ('NEEDS', 'dobj')]

>> Bigrams: 
[[TRADITIONAL, STORAGE], [STORAGE, CAN’T], [CAN’T, MEET], [MEET, DEEP], [DEEP, LEARNING], [LEARNING, NEEDS]]

>> Trigrams: 
[[TRADITIONAL, STORAGE, CAN’T], [STORAGE, CAN’T, MEET], [CAN’T, MEET, DEEP], [MEET, DEEP, LEARNING], [DEEP, LEARNING, NEEDS]]

>> Noun Phrases are: 
[TRADITIONAL STORAGE CAN’T, DEEP LEARNING NEEDS]

>> Named Entities are: 
[] 


================================ Paragraph 53 =================================

REAL BUSINESS BENEFITS FOR LEVERAGING  DEEP LEARNING Companies and institutions that have already invested  in AI or deep learning saw these benefits:  

------------------- Sentence 1 -------------------

REAL BUSINESS BENEFITS FOR LEVERAGING   


>> Tokens are: 
[REAL, BUSINESS, BENEFITS, LEVERAGING,  ] 

>> PoS Tags are: 
[('REAL', 'ADJ'), ('BUSINESS', 'NOUN'), ('BENEFITS', 'NOUN'), ('LEVERAGING', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('REAL', 'amod'), ('BUSINESS', 'compound'), ('BENEFITS', 'ROOT'), ('LEVERAGING', 'pcomp'), (' ', 'punct')]

>> Bigrams: 
[[REAL, BUSINESS], [BUSINESS, BENEFITS], [BENEFITS, LEVERAGING], [LEVERAGING,  ]]

>> Trigrams: 
[[REAL, BUSINESS, BENEFITS], [BUSINESS, BENEFITS, LEVERAGING], [BENEFITS, LEVERAGING,  ]]

>> Noun Phrases are: 
[REAL BUSINESS BENEFITS]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

DEEP LEARNING Companies and institutions that have already invested  in AI or deep learning saw these benefits: 


>> Tokens are: 
[DEEP, LEARNING, Companies, institutions, invested,  , AI, deep, learning, saw, benefits, :] 

>> PoS Tags are: 
[('DEEP', 'ADJ'), ('LEARNING', 'PROPN'), ('Companies', 'PROPN'), ('institutions', 'NOUN'), ('invested', 'VERB'), (' ', 'SPACE'), ('AI', 'PROPN'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('saw', 'VERB'), ('benefits', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('DEEP', 'amod'), ('LEARNING', 'compound'), ('Companies', 'nsubj'), ('institutions', 'conj'), ('invested', 'relcl'), (' ', 'dobj'), ('AI', 'pobj'), ('deep', 'amod'), ('learning', 'conj'), ('saw', 'ROOT'), ('benefits', 'dobj'), (':', 'punct')]

>> Bigrams: 
[[DEEP, LEARNING], [LEARNING, Companies], [Companies, institutions], [institutions, invested], [invested,  ], [ , AI], [AI, deep], [deep, learning], [learning, saw], [saw, benefits], [benefits, :]]

>> Trigrams: 
[[DEEP, LEARNING, Companies], [LEARNING, Companies, institutions], [Companies, institutions, invested], [institutions, invested,  ], [invested,  , AI], [ , AI, deep], [AI, deep, learning], [deep, learning, saw], [learning, saw, benefits], [saw, benefits, :]]

>> Noun Phrases are: 
[DEEP LEARNING Companies, institutions, AI, deep learning, these benefits]

>> Named Entities are: 
[('AI', 'GPE')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 54 =================================

Forrester results: 25% said they achieved business  process efficiency, 21% improvement in customer  satisfaction and 18% cost savings. 

------------------- Sentence 1 -------------------

Forrester results: 25% said they achieved business  process efficiency, 21% improvement in customer  satisfaction and 18% cost savings. 


>> Tokens are: 
[Forrester, results, :, 25, %, said, achieved, business,  , process, efficiency, ,, 21, %, improvement, customer,  , satisfaction, 18, %, cost, savings, .] 

>> PoS Tags are: 
[('Forrester', 'PROPN'), ('results', 'VERB'), (':', 'PUNCT'), ('25', 'NUM'), ('%', 'NOUN'), ('said', 'VERB'), ('achieved', 'VERB'), ('business', 'NOUN'), (' ', 'SPACE'), ('process', 'NOUN'), ('efficiency', 'NOUN'), (',', 'PUNCT'), ('21', 'NUM'), ('%', 'NOUN'), ('improvement', 'NOUN'), ('customer', 'NOUN'), (' ', 'SPACE'), ('satisfaction', 'NOUN'), ('18', 'NUM'), ('%', 'NOUN'), ('cost', 'NOUN'), ('savings', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Forrester', 'nsubj'), ('results', 'ccomp'), (':', 'punct'), ('25', 'nummod'), ('%', 'nsubj'), ('said', 'ROOT'), ('achieved', 'ccomp'), ('business', 'compound'), (' ', 'compound'), ('process', 'compound'), ('efficiency', 'dobj'), (',', 'punct'), ('21', 'nummod'), ('%', 'compound'), ('improvement', 'conj'), ('customer', 'nmod'), (' ', 'nummod'), ('satisfaction', 'pobj'), ('18', 'nummod'), ('%', 'compound'), ('cost', 'compound'), ('savings', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Forrester, results], [results, :], [:, 25], [25, %], [%, said], [said, achieved], [achieved, business], [business,  ], [ , process], [process, efficiency], [efficiency, ,], [,, 21], [21, %], [%, improvement], [improvement, customer], [customer,  ], [ , satisfaction], [satisfaction, 18], [18, %], [%, cost], [cost, savings], [savings, .]]

>> Trigrams: 
[[Forrester, results, :], [results, :, 25], [:, 25, %], [25, %, said], [%, said, achieved], [said, achieved, business], [achieved, business,  ], [business,  , process], [ , process, efficiency], [process, efficiency, ,], [efficiency, ,, 21], [,, 21, %], [21, %, improvement], [%, improvement, customer], [improvement, customer,  ], [customer,  , satisfaction], [ , satisfaction, 18], [satisfaction, 18, %], [18, %, cost], [%, cost, savings], [cost, savings, .]]

>> Noun Phrases are: 
[Forrester, 25%, they, business  process efficiency, 21% improvement, customer  satisfaction, 18% cost savings]

>> Named Entities are: 
[('25%', 'PERCENT'), ('21%', 'PERCENT'), ('18%', 'PERCENT')] 


================================ Paragraph 55 =================================

Health care institution: Deployed agile predictive  analytics to discover that 10 % of the covered employees  were consuming 70% of the resources due to chronic  conditions and other issues with care management. 

------------------- Sentence 1 -------------------

Health care institution: Deployed agile predictive  analytics to discover that 10 % of the covered employees  were consuming 70% of the resources due to chronic  conditions and other issues with care management. 


>> Tokens are: 
[Health, care, institution, :, Deployed, agile, predictive,  , analytics, discover, 10, %, covered, employees,  , consuming, 70, %, resources, chronic,  , conditions, issues, care, management, .] 

>> PoS Tags are: 
[('Health', 'NOUN'), ('care', 'NOUN'), ('institution', 'NOUN'), (':', 'PUNCT'), ('Deployed', 'VERB'), ('agile', 'ADJ'), ('predictive', 'ADJ'), (' ', 'SPACE'), ('analytics', 'NOUN'), ('discover', 'VERB'), ('10', 'NUM'), ('%', 'NOUN'), ('covered', 'VERB'), ('employees', 'NOUN'), (' ', 'SPACE'), ('consuming', 'VERB'), ('70', 'NUM'), ('%', 'NOUN'), ('resources', 'NOUN'), ('chronic', 'ADJ'), (' ', 'SPACE'), ('conditions', 'NOUN'), ('issues', 'NOUN'), ('care', 'NOUN'), ('management', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Health', 'compound'), ('care', 'compound'), ('institution', 'nsubj'), (':', 'punct'), ('Deployed', 'ROOT'), ('agile', 'amod'), ('predictive', 'amod'), (' ', 'compound'), ('analytics', 'dobj'), ('discover', 'advcl'), ('10', 'nummod'), ('%', 'nsubj'), ('covered', 'amod'), ('employees', 'pobj'), (' ', 'nsubj'), ('consuming', 'ccomp'), ('70', 'nummod'), ('%', 'dobj'), ('resources', 'pobj'), ('chronic', 'amod'), (' ', 'compound'), ('conditions', 'pobj'), ('issues', 'conj'), ('care', 'compound'), ('management', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Health, care], [care, institution], [institution, :], [:, Deployed], [Deployed, agile], [agile, predictive], [predictive,  ], [ , analytics], [analytics, discover], [discover, 10], [10, %], [%, covered], [covered, employees], [employees,  ], [ , consuming], [consuming, 70], [70, %], [%, resources], [resources, chronic], [chronic,  ], [ , conditions], [conditions, issues], [issues, care], [care, management], [management, .]]

>> Trigrams: 
[[Health, care, institution], [care, institution, :], [institution, :, Deployed], [:, Deployed, agile], [Deployed, agile, predictive], [agile, predictive,  ], [predictive,  , analytics], [ , analytics, discover], [analytics, discover, 10], [discover, 10, %], [10, %, covered], [%, covered, employees], [covered, employees,  ], [employees,  , consuming], [ , consuming, 70], [consuming, 70, %], [70, %, resources], [%, resources, chronic], [resources, chronic,  ], [chronic,  , conditions], [ , conditions, issues], [conditions, issues, care], [issues, care, management], [care, management, .]]

>> Noun Phrases are: 
[Health care institution, agile predictive  analytics, 10 %, the covered employees, 70%, the resources, chronic  conditions, other issues, care management]

>> Named Entities are: 
[('10 %', 'PERCENT'), ('70%', 'PERCENT')] 


================================ Paragraph 56 =================================

Data center: DeepMind AI reduces data center cooling  bill by 40%. 

------------------- Sentence 1 -------------------

Data center: DeepMind AI reduces data center cooling  bill by 40%. 


>> Tokens are: 
[Data, center, :, DeepMind, AI, reduces, data, center, cooling,  , bill, 40, %, .] 

>> PoS Tags are: 
[('Data', 'NOUN'), ('center', 'NOUN'), (':', 'PUNCT'), ('DeepMind', 'PROPN'), ('AI', 'PROPN'), ('reduces', 'VERB'), ('data', 'NOUN'), ('center', 'NOUN'), ('cooling', 'VERB'), (' ', 'SPACE'), ('bill', 'NOUN'), ('40', 'NUM'), ('%', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Data', 'compound'), ('center', 'dep'), (':', 'punct'), ('DeepMind', 'compound'), ('AI', 'nsubj'), ('reduces', 'ROOT'), ('data', 'compound'), ('center', 'dobj'), ('cooling', 'xcomp'), (' ', 'compound'), ('bill', 'dobj'), ('40', 'nummod'), ('%', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Data, center], [center, :], [:, DeepMind], [DeepMind, AI], [AI, reduces], [reduces, data], [data, center], [center, cooling], [cooling,  ], [ , bill], [bill, 40], [40, %], [%, .]]

>> Trigrams: 
[[Data, center, :], [center, :, DeepMind], [:, DeepMind, AI], [DeepMind, AI, reduces], [AI, reduces, data], [reduces, data, center], [data, center, cooling], [center, cooling,  ], [cooling,  , bill], [ , bill, 40], [bill, 40, %], [40, %, .]]

>> Noun Phrases are: 
[DeepMind AI, data center,  bill, 40%]

>> Named Entities are: 
[('DeepMind AI', 'ORG'), ('40%', 'PERCENT')] 


================================ Paragraph 57 =================================

Cost reduction for testing computer chips: A major  chip manufacturer saved a total of $3 million in  manufacturing costs using predictive analytics for chip  testing. 

------------------- Sentence 1 -------------------

Cost reduction for testing computer chips: A major  chip manufacturer saved a total of $3 million in  manufacturing costs using predictive analytics for chip  testing. 


>> Tokens are: 
[Cost, reduction, testing, computer, chips, :, major,  , chip, manufacturer, saved, total, $, 3, million,  , manufacturing, costs, predictive, analytics, chip,  , testing, .] 

>> PoS Tags are: 
[('Cost', 'NOUN'), ('reduction', 'NOUN'), ('testing', 'VERB'), ('computer', 'NOUN'), ('chips', 'NOUN'), (':', 'PUNCT'), ('major', 'ADJ'), (' ', 'SPACE'), ('chip', 'NOUN'), ('manufacturer', 'NOUN'), ('saved', 'VERB'), ('total', 'NOUN'), ('$', 'SYM'), ('3', 'NUM'), ('million', 'NUM'), (' ', 'SPACE'), ('manufacturing', 'NOUN'), ('costs', 'NOUN'), ('predictive', 'ADJ'), ('analytics', 'NOUN'), ('chip', 'NOUN'), (' ', 'SPACE'), ('testing', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Cost', 'compound'), ('reduction', 'dep'), ('testing', 'pcomp'), ('computer', 'compound'), ('chips', 'dobj'), (':', 'punct'), ('major', 'amod'), (' ', 'compound'), ('chip', 'compound'), ('manufacturer', 'nsubj'), ('saved', 'ROOT'), ('total', 'dobj'), ('$', 'quantmod'), ('3', 'compound'), ('million', 'pobj'), (' ', 'pobj'), ('manufacturing', 'compound'), ('costs', 'pobj'), ('predictive', 'amod'), ('analytics', 'dobj'), ('chip', 'compound'), (' ', 'compound'), ('testing', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Cost, reduction], [reduction, testing], [testing, computer], [computer, chips], [chips, :], [:, major], [major,  ], [ , chip], [chip, manufacturer], [manufacturer, saved], [saved, total], [total, $], [$, 3], [3, million], [million,  ], [ , manufacturing], [manufacturing, costs], [costs, predictive], [predictive, analytics], [analytics, chip], [chip,  ], [ , testing], [testing, .]]

>> Trigrams: 
[[Cost, reduction, testing], [reduction, testing, computer], [testing, computer, chips], [computer, chips, :], [chips, :, major], [:, major,  ], [major,  , chip], [ , chip, manufacturer], [chip, manufacturer, saved], [manufacturer, saved, total], [saved, total, $], [total, $, 3], [$, 3, million], [3, million,  ], [million,  , manufacturing], [ , manufacturing, costs], [manufacturing, costs, predictive], [costs, predictive, analytics], [predictive, analytics, chip], [analytics, chip,  ], [chip,  , testing], [ , testing, .]]

>> Noun Phrases are: 
[computer chips, A major  chip manufacturer, a total, manufacturing costs, predictive analytics, chip  testing]

>> Named Entities are: 
[('$3 million', 'MONEY')] 


================================ Paragraph 58 =================================

Machine learning at Tour de France: In 2017, the Tour  de France used machine learning for predictions and  merging historical data with 2017 race content providing  more detailed information than previously available.  

------------------- Sentence 1 -------------------

Machine learning at Tour de France: 


>> Tokens are: 
[Machine, learning, Tour, de, France, :] 

>> PoS Tags are: 
[('Machine', 'NOUN'), ('learning', 'NOUN'), ('Tour', 'PROPN'), ('de', 'ADP'), ('France', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Machine', 'compound'), ('learning', 'ROOT'), ('Tour', 'compound'), ('de', 'nmod'), ('France', 'pobj'), (':', 'punct')]

>> Bigrams: 
[[Machine, learning], [learning, Tour], [Tour, de], [de, France], [France, :]]

>> Trigrams: 
[[Machine, learning, Tour], [learning, Tour, de], [Tour, de, France], [de, France, :]]

>> Noun Phrases are: 
[Machine learning, Tour de France]

>> Named Entities are: 
[('Tour de France', 'FAC')] 

------------------- Sentence 2 -------------------

In 2017, the Tour  de France used machine learning for predictions and  merging historical data with 2017 race content providing  more detailed information than previously available.   


>> Tokens are: 
[2017, ,, Tour,  , de, France, machine, learning, predictions,  , merging, historical, data, 2017, race, content, providing,  , detailed, information, previously, available, .,  ] 

>> PoS Tags are: 
[('2017', 'NUM'), (',', 'PUNCT'), ('Tour', 'PROPN'), (' ', 'SPACE'), ('de', 'PROPN'), ('France', 'PROPN'), ('machine', 'NOUN'), ('learning', 'VERB'), ('predictions', 'NOUN'), (' ', 'SPACE'), ('merging', 'VERB'), ('historical', 'ADJ'), ('data', 'NOUN'), ('2017', 'NUM'), ('race', 'NOUN'), ('content', 'NOUN'), ('providing', 'VERB'), (' ', 'SPACE'), ('detailed', 'ADJ'), ('information', 'NOUN'), ('previously', 'ADV'), ('available', 'ADJ'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('2017', 'pobj'), (',', 'punct'), ('Tour', 'nmod'), (' ', 'nmod'), ('de', 'nmod'), ('France', 'nsubj'), ('machine', 'dobj'), ('learning', 'xcomp'), ('predictions', 'pobj'), (' ', 'conj'), ('merging', 'acl'), ('historical', 'amod'), ('data', 'dobj'), ('2017', 'nummod'), ('race', 'compound'), ('content', 'pobj'), ('providing', 'acl'), (' ', 'dative'), ('detailed', 'amod'), ('information', 'dobj'), ('previously', 'advmod'), ('available', 'amod'), ('.', 'punct'), (' ', 'dobj')]

>> Bigrams: 
[[2017, ,], [,, Tour], [Tour,  ], [ , de], [de, France], [France, machine], [machine, learning], [learning, predictions], [predictions,  ], [ , merging], [merging, historical], [historical, data], [data, 2017], [2017, race], [race, content], [content, providing], [providing,  ], [ , detailed], [detailed, information], [information, previously], [previously, available], [available, .], [.,  ]]

>> Trigrams: 
[[2017, ,, Tour], [,, Tour,  ], [Tour,  , de], [ , de, France], [de, France, machine], [France, machine, learning], [machine, learning, predictions], [learning, predictions,  ], [predictions,  , merging], [ , merging, historical], [merging, historical, data], [historical, data, 2017], [data, 2017, race], [2017, race, content], [race, content, providing], [content, providing,  ], [providing,  , detailed], [ , detailed, information], [detailed, information, previously], [information, previously, available], [previously, available, .], [available, .,  ]]

>> Noun Phrases are: 
[the Tour  de France, machine, predictions, historical data, 2017 race content, more detailed information]

>> Named Entities are: 
[('2017', 'DATE'), ('the Tour  de France', 'PRODUCT'), ('2017', 'CARDINAL')] 


================================ Paragraph 59 =================================

Enabling the smart electric grid: Research by the  McKinsey Global Institute found that AI can make the  electrical grid smarter by using sensors and machine  learning to allow by-the-minute adjustments to  maximize electric generation efficiency. 

------------------- Sentence 1 -------------------

Enabling the smart electric grid: Research by the   


>> Tokens are: 
[Enabling, smart, electric, grid, :, Research,  ] 

>> PoS Tags are: 
[('Enabling', 'VERB'), ('smart', 'ADJ'), ('electric', 'ADJ'), ('grid', 'NOUN'), (':', 'PUNCT'), ('Research', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Enabling', 'advcl'), ('smart', 'amod'), ('electric', 'amod'), ('grid', 'dobj'), (':', 'punct'), ('Research', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[Enabling, smart], [smart, electric], [electric, grid], [grid, :], [:, Research], [Research,  ]]

>> Trigrams: 
[[Enabling, smart, electric], [smart, electric, grid], [electric, grid, :], [grid, :, Research], [:, Research,  ]]

>> Noun Phrases are: 
[the smart electric grid]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

McKinsey Global Institute found that AI can make the  electrical grid smarter by using sensors and machine  learning to allow by-the-minute adjustments to  maximize electric generation efficiency. 


>> Tokens are: 
[McKinsey, Global, Institute, found, AI,  , electrical, grid, smarter, sensors, machine,  , learning, allow, -, -, minute, adjustments,  , maximize, electric, generation, efficiency, .] 

>> PoS Tags are: 
[('McKinsey', 'PROPN'), ('Global', 'PROPN'), ('Institute', 'PROPN'), ('found', 'VERB'), ('AI', 'PROPN'), (' ', 'SPACE'), ('electrical', 'ADJ'), ('grid', 'NOUN'), ('smarter', 'ADJ'), ('sensors', 'NOUN'), ('machine', 'NOUN'), (' ', 'SPACE'), ('learning', 'VERB'), ('allow', 'VERB'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('minute', 'NOUN'), ('adjustments', 'NOUN'), (' ', 'SPACE'), ('maximize', 'VERB'), ('electric', 'ADJ'), ('generation', 'NOUN'), ('efficiency', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('McKinsey', 'compound'), ('Global', 'compound'), ('Institute', 'nsubj'), ('found', 'ROOT'), ('AI', 'nsubj'), (' ', 'nmod'), ('electrical', 'amod'), ('grid', 'nsubj'), ('smarter', 'ccomp'), ('sensors', 'dobj'), ('machine', 'compound'), (' ', 'conj'), ('learning', 'xcomp'), ('allow', 'xcomp'), ('-', 'punct'), ('-', 'punct'), ('minute', 'pobj'), ('adjustments', 'dobj'), (' ', 'pobj'), ('maximize', 'advcl'), ('electric', 'amod'), ('generation', 'compound'), ('efficiency', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[McKinsey, Global], [Global, Institute], [Institute, found], [found, AI], [AI,  ], [ , electrical], [electrical, grid], [grid, smarter], [smarter, sensors], [sensors, machine], [machine,  ], [ , learning], [learning, allow], [allow, -], [-, -], [-, minute], [minute, adjustments], [adjustments,  ], [ , maximize], [maximize, electric], [electric, generation], [generation, efficiency], [efficiency, .]]

>> Trigrams: 
[[McKinsey, Global, Institute], [Global, Institute, found], [Institute, found, AI], [found, AI,  ], [AI,  , electrical], [ , electrical, grid], [electrical, grid, smarter], [grid, smarter, sensors], [smarter, sensors, machine], [sensors, machine,  ], [machine,  , learning], [ , learning, allow], [learning, allow, -], [allow, -, -], [-, -, minute], [-, minute, adjustments], [minute, adjustments,  ], [adjustments,  , maximize], [ , maximize, electric], [maximize, electric, generation], [electric, generation, efficiency], [generation, efficiency, .]]

>> Noun Phrases are: 
[McKinsey Global Institute, AI, the  electrical grid, sensors, the-minute, adjustments, electric generation efficiency]

>> Named Entities are: 
[('McKinsey Global Institute', 'ORG'), ('AI', 'ORG')] 


================================ Paragraph 60 =================================

Improving job performance: Factories use the UpSkill  Skylight platform augmented reality smart glasses  that connect hands-on workers to the information they  need to do their jobs with greater efficiency and fewer  errors. Average worker performance has improved up  to 32%. 

------------------- Sentence 1 -------------------

Improving job performance: Factories use the UpSkill   


>> Tokens are: 
[Improving, job, performance, :, Factories, use, UpSkill,  ] 

>> PoS Tags are: 
[('Improving', 'VERB'), ('job', 'NOUN'), ('performance', 'NOUN'), (':', 'PUNCT'), ('Factories', 'NOUN'), ('use', 'VERB'), ('UpSkill', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Improving', 'advcl'), ('job', 'compound'), ('performance', 'dobj'), (':', 'punct'), ('Factories', 'nsubj'), ('use', 'ROOT'), ('UpSkill', 'dobj'), (' ', 'appos')]

>> Bigrams: 
[[Improving, job], [job, performance], [performance, :], [:, Factories], [Factories, use], [use, UpSkill], [UpSkill,  ]]

>> Trigrams: 
[[Improving, job, performance], [job, performance, :], [performance, :, Factories], [:, Factories, use], [Factories, use, UpSkill], [use, UpSkill,  ]]

>> Noun Phrases are: 
[job performance, Factories, the UpSkill]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Skylight platform augmented reality smart glasses  that connect hands-on workers to the information they  need to do their jobs with greater efficiency and fewer  errors. 


>> Tokens are: 
[Skylight, platform, augmented, reality, smart, glasses,  , connect, hands, -, workers, information,  , need, jobs, greater, efficiency, fewer,  , errors, .] 

>> PoS Tags are: 
[('Skylight', 'PROPN'), ('platform', 'NOUN'), ('augmented', 'VERB'), ('reality', 'NOUN'), ('smart', 'ADJ'), ('glasses', 'NOUN'), (' ', 'SPACE'), ('connect', 'VERB'), ('hands', 'NOUN'), ('-', 'PUNCT'), ('workers', 'NOUN'), ('information', 'NOUN'), (' ', 'SPACE'), ('need', 'VERB'), ('jobs', 'NOUN'), ('greater', 'ADJ'), ('efficiency', 'NOUN'), ('fewer', 'ADJ'), (' ', 'SPACE'), ('errors', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Skylight', 'compound'), ('platform', 'npadvmod'), ('augmented', 'ROOT'), ('reality', 'dobj'), ('smart', 'amod'), ('glasses', 'dobj'), (' ', 'appos'), ('connect', 'relcl'), ('hands', 'dobj'), ('-', 'punct'), ('workers', 'dobj'), ('information', 'pobj'), (' ', 'appos'), ('need', 'relcl'), ('jobs', 'dobj'), ('greater', 'amod'), ('efficiency', 'pobj'), ('fewer', 'amod'), (' ', 'compound'), ('errors', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Skylight, platform], [platform, augmented], [augmented, reality], [reality, smart], [smart, glasses], [glasses,  ], [ , connect], [connect, hands], [hands, -], [-, workers], [workers, information], [information,  ], [ , need], [need, jobs], [jobs, greater], [greater, efficiency], [efficiency, fewer], [fewer,  ], [ , errors], [errors, .]]

>> Trigrams: 
[[Skylight, platform, augmented], [platform, augmented, reality], [augmented, reality, smart], [reality, smart, glasses], [smart, glasses,  ], [glasses,  , connect], [ , connect, hands], [connect, hands, -], [hands, -, workers], [-, workers, information], [workers, information,  ], [information,  , need], [ , need, jobs], [need, jobs, greater], [jobs, greater, efficiency], [greater, efficiency, fewer], [efficiency, fewer,  ], [fewer,  , errors], [ , errors, .]]

>> Noun Phrases are: 
[reality, smart glasses, hands, workers, the information, they, their jobs, greater efficiency, fewer  errors]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Average worker performance has improved up  to 32%. 


>> Tokens are: 
[Average, worker, performance, improved,  , 32, %, .] 

>> PoS Tags are: 
[('Average', 'ADJ'), ('worker', 'NOUN'), ('performance', 'NOUN'), ('improved', 'VERB'), (' ', 'SPACE'), ('32', 'NUM'), ('%', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Average', 'amod'), ('worker', 'compound'), ('performance', 'nsubj'), ('improved', 'ROOT'), (' ', 'pobj'), ('32', 'nummod'), ('%', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Average, worker], [worker, performance], [performance, improved], [improved,  ], [ , 32], [32, %], [%, .]]

>> Trigrams: 
[[Average, worker, performance], [worker, performance, improved], [performance, improved,  ], [improved,  , 32], [ , 32, %], [32, %, .]]

>> Noun Phrases are: 
[Average worker performance, 32%]

>> Named Entities are: 
[('32%', 'PERCENT')] 


================================ Paragraph 61 =================================

There’s been significant advancement in parallel  computing and algorithms, but the technology that  stores and delivers big data has largely been built on  legacy building blocks, designed in the serial era. A new  type of storage system is required to deliver the massive  amounts of data for these new computing paradigms.  

------------------- Sentence 1 -------------------

There’s been significant advancement in parallel  computing and algorithms, but the technology that  stores and delivers big data has largely been built on  legacy building blocks, designed in the serial era. 


>> Tokens are: 
[significant, advancement, parallel,  , computing, algorithms, ,, technology,  , stores, delivers, big, data, largely, built,  , legacy, building, blocks, ,, designed, serial, era, .] 

>> PoS Tags are: 
[('significant', 'ADJ'), ('advancement', 'NOUN'), ('parallel', 'NOUN'), (' ', 'SPACE'), ('computing', 'VERB'), ('algorithms', 'NOUN'), (',', 'PUNCT'), ('technology', 'NOUN'), (' ', 'SPACE'), ('stores', 'NOUN'), ('delivers', 'VERB'), ('big', 'ADJ'), ('data', 'NOUN'), ('largely', 'ADV'), ('built', 'VERB'), (' ', 'SPACE'), ('legacy', 'NOUN'), ('building', 'NOUN'), ('blocks', 'NOUN'), (',', 'PUNCT'), ('designed', 'VERB'), ('serial', 'ADJ'), ('era', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('significant', 'amod'), ('advancement', 'attr'), ('parallel', 'pobj'), (' ', 'nsubj'), ('computing', 'pobj'), ('algorithms', 'conj'), (',', 'punct'), ('technology', 'conj'), (' ', 'compound'), ('stores', 'nsubjpass'), ('delivers', 'conj'), ('big', 'amod'), ('data', 'dobj'), ('largely', 'advmod'), ('built', 'relcl'), (' ', 'nummod'), ('legacy', 'compound'), ('building', 'compound'), ('blocks', 'pobj'), (',', 'punct'), ('designed', 'acl'), ('serial', 'amod'), ('era', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[significant, advancement], [advancement, parallel], [parallel,  ], [ , computing], [computing, algorithms], [algorithms, ,], [,, technology], [technology,  ], [ , stores], [stores, delivers], [delivers, big], [big, data], [data, largely], [largely, built], [built,  ], [ , legacy], [legacy, building], [building, blocks], [blocks, ,], [,, designed], [designed, serial], [serial, era], [era, .]]

>> Trigrams: 
[[significant, advancement, parallel], [advancement, parallel,  ], [parallel,  , computing], [ , computing, algorithms], [computing, algorithms, ,], [algorithms, ,, technology], [,, technology,  ], [technology,  , stores], [ , stores, delivers], [stores, delivers, big], [delivers, big, data], [big, data, largely], [data, largely, built], [largely, built,  ], [built,  , legacy], [ , legacy, building], [legacy, building, blocks], [building, blocks, ,], [blocks, ,, designed], [,, designed, serial], [designed, serial, era], [serial, era, .]]

>> Noun Phrases are: 
[significant advancement, parallel, algorithms, the technology,  stores, big data,  legacy building blocks, the serial era]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

A new  type of storage system is required to deliver the massive  amounts of data for these new computing paradigms. 


>> Tokens are: 
[new,  , type, storage, system, required, deliver, massive,  , amounts, data, new, computing, paradigms, .] 

>> PoS Tags are: 
[('new', 'ADJ'), (' ', 'SPACE'), ('type', 'NOUN'), ('storage', 'NOUN'), ('system', 'NOUN'), ('required', 'VERB'), ('deliver', 'VERB'), ('massive', 'ADJ'), (' ', 'SPACE'), ('amounts', 'NOUN'), ('data', 'NOUN'), ('new', 'ADJ'), ('computing', 'NOUN'), ('paradigms', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('new', 'amod'), (' ', 'compound'), ('type', 'nsubjpass'), ('storage', 'compound'), ('system', 'pobj'), ('required', 'ROOT'), ('deliver', 'xcomp'), ('massive', 'amod'), (' ', 'compound'), ('amounts', 'dobj'), ('data', 'pobj'), ('new', 'amod'), ('computing', 'compound'), ('paradigms', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[new,  ], [ , type], [type, storage], [storage, system], [system, required], [required, deliver], [deliver, massive], [massive,  ], [ , amounts], [amounts, data], [data, new], [new, computing], [computing, paradigms], [paradigms, .]]

>> Trigrams: 
[[new,  , type], [ , type, storage], [type, storage, system], [storage, system, required], [system, required, deliver], [required, deliver, massive], [deliver, massive,  ], [massive,  , amounts], [ , amounts, data], [amounts, data, new], [data, new, computing], [new, computing, paradigms], [computing, paradigms, .]]

>> Noun Phrases are: 
[A new  type, storage system, the massive  amounts, data, these new computing paradigms]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 62 =================================

In the past several years alone, the amount of compute  required by deep learning and the amount of compute  delivered by GPUs jumped more than 10 times.  Meanwhile, disks and SSDs have not increased in  performance during the same period. While the volume  of unstructured data is exploding, legacy storage  struggles to handle the storage performance needs of  the emerging big data drivers. 

------------------- Sentence 1 -------------------

In the past several years alone, the amount of compute  required by deep learning and the amount of compute  delivered by GPUs jumped more than 10 times.   


>> Tokens are: 
[past, years, ,, compute,  , required, deep, learning, compute,  , delivered, GPUs, jumped, 10, times, .,  ] 

>> PoS Tags are: 
[('past', 'ADJ'), ('years', 'NOUN'), (',', 'PUNCT'), ('compute', 'NOUN'), (' ', 'SPACE'), ('required', 'VERB'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('compute', 'NOUN'), (' ', 'SPACE'), ('delivered', 'VERB'), ('GPUs', 'NOUN'), ('jumped', 'VERB'), ('10', 'NUM'), ('times', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('past', 'amod'), ('years', 'pobj'), (',', 'punct'), ('compute', 'amod'), (' ', 'pobj'), ('required', 'acl'), ('deep', 'amod'), ('learning', 'pobj'), ('compute', 'amod'), (' ', 'pobj'), ('delivered', 'acl'), ('GPUs', 'pobj'), ('jumped', 'ROOT'), ('10', 'nummod'), ('times', 'npadvmod'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[past, years], [years, ,], [,, compute], [compute,  ], [ , required], [required, deep], [deep, learning], [learning, compute], [compute,  ], [ , delivered], [delivered, GPUs], [GPUs, jumped], [jumped, 10], [10, times], [times, .], [.,  ]]

>> Trigrams: 
[[past, years, ,], [years, ,, compute], [,, compute,  ], [compute,  , required], [ , required, deep], [required, deep, learning], [deep, learning, compute], [learning, compute,  ], [compute,  , delivered], [ , delivered, GPUs], [delivered, GPUs, jumped], [GPUs, jumped, 10], [jumped, 10, times], [10, times, .], [times, .,  ]]

>> Noun Phrases are: 
[the past several years, the amount, deep learning, the amount, GPUs]

>> Named Entities are: 
[('the past several years', 'DATE'), ('more than 10', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Meanwhile, disks and SSDs have not increased in  performance during the same period. 


>> Tokens are: 
[,, disks, SSDs, increased,  , performance, period, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('disks', 'NOUN'), ('SSDs', 'NOUN'), ('increased', 'VERB'), (' ', 'SPACE'), ('performance', 'NOUN'), ('period', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('disks', 'nsubj'), ('SSDs', 'conj'), ('increased', 'ROOT'), (' ', 'compound'), ('performance', 'pobj'), ('period', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[,, disks], [disks, SSDs], [SSDs, increased], [increased,  ], [ , performance], [performance, period], [period, .]]

>> Trigrams: 
[[,, disks, SSDs], [disks, SSDs, increased], [SSDs, increased,  ], [increased,  , performance], [ , performance, period], [performance, period, .]]

>> Noun Phrases are: 
[disks, SSDs,  performance, the same period]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

While the volume  of unstructured data is exploding, legacy storage  struggles to handle the storage performance needs of  the emerging big data drivers. 


>> Tokens are: 
[volume,  , unstructured, data, exploding, ,, legacy, storage,  , struggles, handle, storage, performance, needs,  , emerging, big, data, drivers, .] 

>> PoS Tags are: 
[('volume', 'NOUN'), (' ', 'SPACE'), ('unstructured', 'ADJ'), ('data', 'NOUN'), ('exploding', 'VERB'), (',', 'PUNCT'), ('legacy', 'NOUN'), ('storage', 'NOUN'), (' ', 'SPACE'), ('struggles', 'VERB'), ('handle', 'VERB'), ('storage', 'NOUN'), ('performance', 'NOUN'), ('needs', 'NOUN'), (' ', 'SPACE'), ('emerging', 'VERB'), ('big', 'ADJ'), ('data', 'NOUN'), ('drivers', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('volume', 'nsubj'), (' ', 'nsubj'), ('unstructured', 'amod'), ('data', 'pobj'), ('exploding', 'advcl'), (',', 'punct'), ('legacy', 'compound'), ('storage', 'ROOT'), (' ', 'nsubj'), ('struggles', 'relcl'), ('handle', 'xcomp'), ('storage', 'compound'), ('performance', 'compound'), ('needs', 'dobj'), (' ', 'pobj'), ('emerging', 'amod'), ('big', 'amod'), ('data', 'compound'), ('drivers', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[volume,  ], [ , unstructured], [unstructured, data], [data, exploding], [exploding, ,], [,, legacy], [legacy, storage], [storage,  ], [ , struggles], [struggles, handle], [handle, storage], [storage, performance], [performance, needs], [needs,  ], [ , emerging], [emerging, big], [big, data], [data, drivers], [drivers, .]]

>> Trigrams: 
[[volume,  , unstructured], [ , unstructured, data], [unstructured, data, exploding], [data, exploding, ,], [exploding, ,, legacy], [,, legacy, storage], [legacy, storage,  ], [storage,  , struggles], [ , struggles, handle], [struggles, handle, storage], [handle, storage, performance], [storage, performance, needs], [performance, needs,  ], [needs,  , emerging], [ , emerging, big], [emerging, big, data], [big, data, drivers], [data, drivers, .]]

>> Noun Phrases are: 
[the volume, unstructured data, the storage performance needs]

>> Named Entities are: 
[] 


================================ Paragraph 63 =================================

Most deployments today use direct-attached storage  (DAS) or distributed direct attached storage (DDAS)  where datasets are spread across disks in each server.  Use of DDAS allowed data scientists to use commodity  off-the-shelf systems/components for their analytics  pipeline, like X86 processors and standard hard disk  drives, but the approach is full of potential problems. At  the time that modern data analytics technologies were  being developed, there wasn’t a storage platform big  enough for such large amounts of data nor fast enough  to meet the high bandwidth requirements from big  data software.  

------------------- Sentence 1 -------------------

Most deployments today use direct-attached storage  (DAS) or distributed direct attached storage (DDAS)  where datasets are spread across disks in each server. 


>> Tokens are: 
[deployments, today, use, direct, -, attached, storage,  , (, DAS, ), distributed, direct, attached, storage, (, DDAS, ),  , datasets, spread, disks, server, .] 

>> PoS Tags are: 
[('deployments', 'NOUN'), ('today', 'NOUN'), ('use', 'VERB'), ('direct', 'ADJ'), ('-', 'PUNCT'), ('attached', 'VERB'), ('storage', 'NOUN'), (' ', 'SPACE'), ('(', 'PUNCT'), ('DAS', 'PROPN'), (')', 'PUNCT'), ('distributed', 'VERB'), ('direct', 'ADJ'), ('attached', 'ADJ'), ('storage', 'NOUN'), ('(', 'PUNCT'), ('DDAS', 'PROPN'), (')', 'PUNCT'), (' ', 'SPACE'), ('datasets', 'NOUN'), ('spread', 'VERB'), ('disks', 'NOUN'), ('server', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('deployments', 'nsubj'), ('today', 'npadvmod'), ('use', 'ROOT'), ('direct', 'advmod'), ('-', 'punct'), ('attached', 'amod'), ('storage', 'compound'), (' ', 'dobj'), ('(', 'punct'), ('DAS', 'appos'), (')', 'punct'), ('distributed', 'conj'), ('direct', 'amod'), ('attached', 'amod'), ('storage', 'dobj'), ('(', 'punct'), ('DDAS', 'appos'), (')', 'punct'), (' ', 'appos'), ('datasets', 'nsubjpass'), ('spread', 'relcl'), ('disks', 'pobj'), ('server', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[deployments, today], [today, use], [use, direct], [direct, -], [-, attached], [attached, storage], [storage,  ], [ , (], [(, DAS], [DAS, )], [), distributed], [distributed, direct], [direct, attached], [attached, storage], [storage, (], [(, DDAS], [DDAS, )], [),  ], [ , datasets], [datasets, spread], [spread, disks], [disks, server], [server, .]]

>> Trigrams: 
[[deployments, today, use], [today, use, direct], [use, direct, -], [direct, -, attached], [-, attached, storage], [attached, storage,  ], [storage,  , (], [ , (, DAS], [(, DAS, )], [DAS, ), distributed], [), distributed, direct], [distributed, direct, attached], [direct, attached, storage], [attached, storage, (], [storage, (, DDAS], [(, DDAS, )], [DDAS, ),  ], [),  , datasets], [ , datasets, spread], [datasets, spread, disks], [spread, disks, server], [disks, server, .]]

>> Noun Phrases are: 
[Most deployments, DAS, direct attached storage, DDAS, datasets, disks, each server]

>> Named Entities are: 
[('today', 'DATE')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Use of DDAS allowed data scientists to use commodity  off-the-shelf systems/components for their analytics  pipeline, like X86 processors and standard hard disk  drives, but the approach is full of potential problems. 


>> Tokens are: 
[Use, DDAS, allowed, data, scientists, use, commodity,  , -, -, shelf, systems, /, components, analytics,  , pipeline, ,, like, X86, processors, standard, hard, disk,  , drives, ,, approach, potential, problems, .] 

>> PoS Tags are: 
[('Use', 'PROPN'), ('DDAS', 'PROPN'), ('allowed', 'VERB'), ('data', 'NOUN'), ('scientists', 'NOUN'), ('use', 'VERB'), ('commodity', 'NOUN'), (' ', 'SPACE'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('shelf', 'NOUN'), ('systems', 'NOUN'), ('/', 'SYM'), ('components', 'NOUN'), ('analytics', 'NOUN'), (' ', 'SPACE'), ('pipeline', 'NOUN'), (',', 'PUNCT'), ('like', 'ADP'), ('X86', 'ADJ'), ('processors', 'NOUN'), ('standard', 'ADJ'), ('hard', 'ADJ'), ('disk', 'NOUN'), (' ', 'SPACE'), ('drives', 'NOUN'), (',', 'PUNCT'), ('approach', 'NOUN'), ('potential', 'ADJ'), ('problems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Use', 'nsubj'), ('DDAS', 'pobj'), ('allowed', 'ROOT'), ('data', 'compound'), ('scientists', 'nsubj'), ('use', 'ccomp'), ('commodity', 'dobj'), (' ', 'dobj'), ('-', 'punct'), ('-', 'punct'), ('shelf', 'pobj'), ('systems', 'nmod'), ('/', 'punct'), ('components', 'dobj'), ('analytics', 'pobj'), (' ', 'compound'), ('pipeline', 'dobj'), (',', 'punct'), ('like', 'prep'), ('X86', 'compound'), ('processors', 'pobj'), ('standard', 'amod'), ('hard', 'amod'), ('disk', 'conj'), (' ', 'compound'), ('drives', 'conj'), (',', 'punct'), ('approach', 'nsubj'), ('potential', 'amod'), ('problems', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Use, DDAS], [DDAS, allowed], [allowed, data], [data, scientists], [scientists, use], [use, commodity], [commodity,  ], [ , -], [-, -], [-, shelf], [shelf, systems], [systems, /], [/, components], [components, analytics], [analytics,  ], [ , pipeline], [pipeline, ,], [,, like], [like, X86], [X86, processors], [processors, standard], [standard, hard], [hard, disk], [disk,  ], [ , drives], [drives, ,], [,, approach], [approach, potential], [potential, problems], [problems, .]]

>> Trigrams: 
[[Use, DDAS, allowed], [DDAS, allowed, data], [allowed, data, scientists], [data, scientists, use], [scientists, use, commodity], [use, commodity,  ], [commodity,  , -], [ , -, -], [-, -, shelf], [-, shelf, systems], [shelf, systems, /], [systems, /, components], [/, components, analytics], [components, analytics,  ], [analytics,  , pipeline], [ , pipeline, ,], [pipeline, ,, like], [,, like, X86], [like, X86, processors], [X86, processors, standard], [processors, standard, hard], [standard, hard, disk], [hard, disk,  ], [disk,  , drives], [ , drives, ,], [drives, ,, approach], [,, approach, potential], [approach, potential, problems], [potential, problems, .]]

>> Noun Phrases are: 
[Use, DDAS, data scientists, commodity, the-shelf, their analytics,  pipeline, X86 processors, standard hard disk,  drives, the approach, potential problems]

>> Named Entities are: 
[('DDAS', 'ORG')] 

------------------- Sentence 4 -------------------

At  the time that modern data analytics technologies were  being developed, there wasn’t a storage platform big  enough for such large amounts of data nor fast enough  to meet the high bandwidth requirements from big  data software. 


>> Tokens are: 
[ , time, modern, data, analytics, technologies,  , developed, ,, storage, platform, big,  , large, amounts, data, fast,  , meet, high, bandwidth, requirements, big,  , data, software, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('time', 'NOUN'), ('modern', 'ADJ'), ('data', 'NOUN'), ('analytics', 'NOUN'), ('technologies', 'NOUN'), (' ', 'SPACE'), ('developed', 'VERB'), (',', 'PUNCT'), ('storage', 'NOUN'), ('platform', 'NOUN'), ('big', 'ADJ'), (' ', 'SPACE'), ('large', 'ADJ'), ('amounts', 'NOUN'), ('data', 'NOUN'), ('fast', 'ADJ'), (' ', 'SPACE'), ('meet', 'VERB'), ('high', 'ADJ'), ('bandwidth', 'ADJ'), ('requirements', 'NOUN'), ('big', 'ADJ'), (' ', 'SPACE'), ('data', 'NOUN'), ('software', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'pobj'), ('time', 'npadvmod'), ('modern', 'amod'), ('data', 'compound'), ('analytics', 'compound'), ('technologies', 'nsubjpass'), (' ', 'nsubjpass'), ('developed', 'relcl'), (',', 'punct'), ('storage', 'compound'), ('platform', 'attr'), ('big', 'amod'), (' ', 'appos'), ('large', 'amod'), ('amounts', 'pobj'), ('data', 'pobj'), ('fast', 'amod'), (' ', 'conj'), ('meet', 'advcl'), ('high', 'amod'), ('bandwidth', 'amod'), ('requirements', 'dobj'), ('big', 'amod'), (' ', 'compound'), ('data', 'compound'), ('software', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , time], [time, modern], [modern, data], [data, analytics], [analytics, technologies], [technologies,  ], [ , developed], [developed, ,], [,, storage], [storage, platform], [platform, big], [big,  ], [ , large], [large, amounts], [amounts, data], [data, fast], [fast,  ], [ , meet], [meet, high], [high, bandwidth], [bandwidth, requirements], [requirements, big], [big,  ], [ , data], [data, software], [software, .]]

>> Trigrams: 
[[ , time, modern], [time, modern, data], [modern, data, analytics], [data, analytics, technologies], [analytics, technologies,  ], [technologies,  , developed], [ , developed, ,], [developed, ,, storage], [,, storage, platform], [storage, platform, big], [platform, big,  ], [big,  , large], [ , large, amounts], [large, amounts, data], [amounts, data, fast], [data, fast,  ], [fast,  , meet], [ , meet, high], [meet, high, bandwidth], [high, bandwidth, requirements], [bandwidth, requirements, big], [requirements, big,  ], [big,  , data], [ , data, software], [data, software, .]]

>> Noun Phrases are: 
[modern data analytics technologies, a storage platform, such large amounts, data, the high bandwidth requirements, big  data software]

>> Named Entities are: 
[] 

------------------- Sentence 5 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 64 =================================

A goal of modern analytics is to analyze data and  extract insights from that data. This information is  often unstructured data from sources such as logs  and Internet of Things (IoT) devices. The older systems  may only work for highly normalized data and are not  optimized to analyze semi-structured and unstructured  data often used in AI and deep learning. As a result,  legacy storage has become the primary bottleneck  for applications—performance is bottlenecked by  decades-old, serial technologies in the stack that’s  not optimized for unstructured data. If data is the new  currency for the fourth industrial revolution, why is the  storage industry still stuck in the serial era? 

------------------- Sentence 1 -------------------

A goal of modern analytics is to analyze data and  extract insights from that data. 


>> Tokens are: 
[goal, modern, analytics, analyze, data,  , extract, insights, data, .] 

>> PoS Tags are: 
[('goal', 'NOUN'), ('modern', 'ADJ'), ('analytics', 'NOUN'), ('analyze', 'VERB'), ('data', 'NOUN'), (' ', 'SPACE'), ('extract', 'VERB'), ('insights', 'NOUN'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('goal', 'nsubj'), ('modern', 'amod'), ('analytics', 'pobj'), ('analyze', 'xcomp'), ('data', 'dobj'), (' ', 'conj'), ('extract', 'advcl'), ('insights', 'dobj'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[goal, modern], [modern, analytics], [analytics, analyze], [analyze, data], [data,  ], [ , extract], [extract, insights], [insights, data], [data, .]]

>> Trigrams: 
[[goal, modern, analytics], [modern, analytics, analyze], [analytics, analyze, data], [analyze, data,  ], [data,  , extract], [ , extract, insights], [extract, insights, data], [insights, data, .]]

>> Noun Phrases are: 
[A goal, modern analytics, data, insights, that data]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

This information is  often unstructured data from sources such as logs  and Internet of Things (IoT) devices. 


>> Tokens are: 
[information,  , unstructured, data, sources, logs,  , Internet, Things, (, IoT, ), devices, .] 

>> PoS Tags are: 
[('information', 'NOUN'), (' ', 'SPACE'), ('unstructured', 'ADJ'), ('data', 'NOUN'), ('sources', 'NOUN'), ('logs', 'NOUN'), (' ', 'SPACE'), ('Internet', 'NOUN'), ('Things', 'PROPN'), ('(', 'PUNCT'), ('IoT', 'PROPN'), (')', 'PUNCT'), ('devices', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('information', 'nsubj'), (' ', 'nmod'), ('unstructured', 'amod'), ('data', 'attr'), ('sources', 'pobj'), ('logs', 'pobj'), (' ', 'appos'), ('Internet', 'conj'), ('Things', 'pobj'), ('(', 'punct'), ('IoT', 'appos'), (')', 'punct'), ('devices', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[information,  ], [ , unstructured], [unstructured, data], [data, sources], [sources, logs], [logs,  ], [ , Internet], [Internet, Things], [Things, (], [(, IoT], [IoT, )], [), devices], [devices, .]]

>> Trigrams: 
[[information,  , unstructured], [ , unstructured, data], [unstructured, data, sources], [data, sources, logs], [sources, logs,  ], [logs,  , Internet], [ , Internet, Things], [Internet, Things, (], [Things, (, IoT], [(, IoT, )], [IoT, ), devices], [), devices, .]]

>> Noun Phrases are: 
[This information,  often unstructured data, sources, logs, Internet, Things, IoT, ) devices]

>> Named Entities are: 
[('IoT', 'ORG')] 

------------------- Sentence 3 -------------------

The older systems  may only work for highly normalized data and are not  optimized to analyze semi-structured and unstructured  data often used in AI and deep learning. 


>> Tokens are: 
[older, systems,  , work, highly, normalized, data,  , optimized, analyze, semi, -, structured, unstructured,  , data, AI, deep, learning, .] 

>> PoS Tags are: 
[('older', 'ADJ'), ('systems', 'NOUN'), (' ', 'SPACE'), ('work', 'VERB'), ('highly', 'ADV'), ('normalized', 'VERB'), ('data', 'NOUN'), (' ', 'SPACE'), ('optimized', 'VERB'), ('analyze', 'VERB'), ('semi', 'ADJ'), ('-', 'ADJ'), ('structured', 'ADJ'), ('unstructured', 'ADJ'), (' ', 'SPACE'), ('data', 'NOUN'), ('AI', 'PROPN'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('older', 'amod'), ('systems', 'ROOT'), (' ', 'nsubj'), ('work', 'relcl'), ('highly', 'advmod'), ('normalized', 'amod'), ('data', 'pobj'), (' ', 'dep'), ('optimized', 'conj'), ('analyze', 'xcomp'), ('semi', 'dobj'), ('-', 'dobj'), ('structured', 'ccomp'), ('unstructured', 'conj'), (' ', 'compound'), ('data', 'dobj'), ('AI', 'pobj'), ('deep', 'amod'), ('learning', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[older, systems], [systems,  ], [ , work], [work, highly], [highly, normalized], [normalized, data], [data,  ], [ , optimized], [optimized, analyze], [analyze, semi], [semi, -], [-, structured], [structured, unstructured], [unstructured,  ], [ , data], [data, AI], [AI, deep], [deep, learning], [learning, .]]

>> Trigrams: 
[[older, systems,  ], [systems,  , work], [ , work, highly], [work, highly, normalized], [highly, normalized, data], [normalized, data,  ], [data,  , optimized], [ , optimized, analyze], [optimized, analyze, semi], [analyze, semi, -], [semi, -, structured], [-, structured, unstructured], [structured, unstructured,  ], [unstructured,  , data], [ , data, AI], [data, AI, deep], [AI, deep, learning], [deep, learning, .]]

>> Noun Phrases are: 
[The older systems, highly normalized data,  data, AI, deep learning]

>> Named Entities are: 
[('AI', 'ORG')] 

------------------- Sentence 4 -------------------

As a result,  legacy storage has become the primary bottleneck  for applications—performance is bottlenecked by  decades-old, serial technologies in the stack that’s  not optimized for unstructured data. 


>> Tokens are: 
[result, ,,  , legacy, storage, primary, bottleneck,  , applications, —, performance, bottlenecked,  , decades, -, old, ,, serial, technologies, stack,  , optimized, unstructured, data, .] 

>> PoS Tags are: 
[('result', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('legacy', 'NOUN'), ('storage', 'NOUN'), ('primary', 'ADJ'), ('bottleneck', 'NOUN'), (' ', 'SPACE'), ('applications', 'NOUN'), ('—', 'PUNCT'), ('performance', 'NOUN'), ('bottlenecked', 'VERB'), (' ', 'SPACE'), ('decades', 'NOUN'), ('-', 'PUNCT'), ('old', 'ADJ'), (',', 'PUNCT'), ('serial', 'ADJ'), ('technologies', 'NOUN'), ('stack', 'NOUN'), (' ', 'SPACE'), ('optimized', 'VERB'), ('unstructured', 'ADJ'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('result', 'pobj'), (',', 'punct'), (' ', 'nmod'), ('legacy', 'compound'), ('storage', 'nsubj'), ('primary', 'amod'), ('bottleneck', 'attr'), (' ', 'appos'), ('applications', 'pobj'), ('—', 'punct'), ('performance', 'nsubjpass'), ('bottlenecked', 'relcl'), (' ', 'nummod'), ('decades', 'npadvmod'), ('-', 'punct'), ('old', 'amod'), (',', 'punct'), ('serial', 'amod'), ('technologies', 'pobj'), ('stack', 'pobj'), (' ', 'attr'), ('optimized', 'acl'), ('unstructured', 'amod'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[result, ,], [,,  ], [ , legacy], [legacy, storage], [storage, primary], [primary, bottleneck], [bottleneck,  ], [ , applications], [applications, —], [—, performance], [performance, bottlenecked], [bottlenecked,  ], [ , decades], [decades, -], [-, old], [old, ,], [,, serial], [serial, technologies], [technologies, stack], [stack,  ], [ , optimized], [optimized, unstructured], [unstructured, data], [data, .]]

>> Trigrams: 
[[result, ,,  ], [,,  , legacy], [ , legacy, storage], [legacy, storage, primary], [storage, primary, bottleneck], [primary, bottleneck,  ], [bottleneck,  , applications], [ , applications, —], [applications, —, performance], [—, performance, bottlenecked], [performance, bottlenecked,  ], [bottlenecked,  , decades], [ , decades, -], [decades, -, old], [-, old, ,], [old, ,, serial], [,, serial, technologies], [serial, technologies, stack], [technologies, stack,  ], [stack,  , optimized], [ , optimized, unstructured], [optimized, unstructured, data], [unstructured, data, .]]

>> Noun Phrases are: 
[a result,  legacy storage, the primary bottleneck, applications, performance,  decades-old, serial technologies, the stack, unstructured data]

>> Named Entities are: 
[('decades-old', 'DATE')] 

------------------- Sentence 5 -------------------

If data is the new  currency for the fourth industrial revolution, why is the  storage industry still stuck in the serial era? 


>> Tokens are: 
[data, new,  , currency, fourth, industrial, revolution, ,,  , storage, industry, stuck, serial, era, ?] 

>> PoS Tags are: 
[('data', 'NOUN'), ('new', 'ADJ'), (' ', 'SPACE'), ('currency', 'NOUN'), ('fourth', 'ADJ'), ('industrial', 'ADJ'), ('revolution', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('storage', 'NOUN'), ('industry', 'NOUN'), ('stuck', 'VERB'), ('serial', 'ADJ'), ('era', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('data', 'nsubj'), ('new', 'amod'), (' ', 'compound'), ('currency', 'attr'), ('fourth', 'amod'), ('industrial', 'amod'), ('revolution', 'pobj'), (',', 'punct'), (' ', 'compound'), ('storage', 'compound'), ('industry', 'nsubj'), ('stuck', 'ccomp'), ('serial', 'amod'), ('era', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[data, new], [new,  ], [ , currency], [currency, fourth], [fourth, industrial], [industrial, revolution], [revolution, ,], [,,  ], [ , storage], [storage, industry], [industry, stuck], [stuck, serial], [serial, era], [era, ?]]

>> Trigrams: 
[[data, new,  ], [new,  , currency], [ , currency, fourth], [currency, fourth, industrial], [fourth, industrial, revolution], [industrial, revolution, ,], [revolution, ,,  ], [,,  , storage], [ , storage, industry], [storage, industry, stuck], [industry, stuck, serial], [stuck, serial, era], [serial, era, ?]]

>> Noun Phrases are: 
[data, the new  currency, the fourth industrial revolution, the  storage industry, the serial era]

>> Named Entities are: 
[('fourth', 'ORDINAL')] 


================================ Paragraph 65 =================================

DATANAMI: ACCELER ATE DEEP LEARNING WITH A MODERN DATA PLATFORM 

------------------- Sentence 1 -------------------

DATANAMI: ACCELER ATE DEEP LEARNING WITH A MODERN DATA PLATFORM 


>> Tokens are: 
[DATANAMI, :, ACCELER, ATE, DEEP, LEARNING, MODERN, DATA, PLATFORM] 

>> PoS Tags are: 
[('DATANAMI', 'PROPN'), (':', 'PUNCT'), ('ACCELER', 'ADJ'), ('ATE', 'VERB'), ('DEEP', 'ADJ'), ('LEARNING', 'NOUN'), ('MODERN', 'PROPN'), ('DATA', 'PROPN'), ('PLATFORM', 'NOUN')] 

>> Dependency Tags are: 
[('DATANAMI', 'dep'), (':', 'punct'), ('ACCELER', 'nsubj'), ('ATE', 'ROOT'), ('DEEP', 'amod'), ('LEARNING', 'dobj'), ('MODERN', 'compound'), ('DATA', 'compound'), ('PLATFORM', 'pobj')]

>> Bigrams: 
[[DATANAMI, :], [:, ACCELER], [ACCELER, ATE], [ATE, DEEP], [DEEP, LEARNING], [LEARNING, MODERN], [MODERN, DATA], [DATA, PLATFORM]]

>> Trigrams: 
[[DATANAMI, :, ACCELER], [:, ACCELER, ATE], [ACCELER, ATE, DEEP], [ATE, DEEP, LEARNING], [DEEP, LEARNING, MODERN], [LEARNING, MODERN, DATA], [MODERN, DATA, PLATFORM]]

>> Noun Phrases are: 
[DEEP LEARNING, A MODERN DATA PLATFORM]

>> Named Entities are: 
[] 


================================ Paragraph 66 =================================

7TABOR CUSTOM PUBLISHING 

------------------- Sentence 1 -------------------

7TABOR CUSTOM PUBLISHING 


>> Tokens are: 
[7TABOR, CUSTOM, PUBLISHING] 

>> PoS Tags are: 
[('7TABOR', 'DET'), ('CUSTOM', 'PROPN'), ('PUBLISHING', 'NOUN')] 

>> Dependency Tags are: 
[('7TABOR', 'det'), ('CUSTOM', 'compound'), ('PUBLISHING', 'ROOT')]

>> Bigrams: 
[[7TABOR, CUSTOM], [CUSTOM, PUBLISHING]]

>> Trigrams: 
[[7TABOR, CUSTOM, PUBLISHING]]

>> Noun Phrases are: 
[7TABOR CUSTOM PUBLISHING]

>> Named Entities are: 
[] 


================================ Paragraph 67 =================================

FLASHBLADE BUILT FOR DEEP LEARNING as customer requirements dictate. This is possible  because at its core, from software to flash, FlashBlade  is massively parallel. With its unique Evergreen™  business model, customers never rebuy any terabytes  (TBs) they already own and can upgrade technologies  as they evolve without disrupting service or diminishing  performance or data integrity.  See Figure 4 for an  example of a FlashBlade Chassis. 

------------------- Sentence 1 -------------------

FLASHBLADE BUILT FOR DEEP LEARNING as customer requirements dictate. 


>> Tokens are: 
[FLASHBLADE, BUILT, DEEP, LEARNING, customer, requirements, dictate, .] 

>> PoS Tags are: 
[('FLASHBLADE', 'PROPN'), ('BUILT', 'PROPN'), ('DEEP', 'ADJ'), ('LEARNING', 'PROPN'), ('customer', 'NOUN'), ('requirements', 'NOUN'), ('dictate', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('FLASHBLADE', 'nsubj'), ('BUILT', 'ROOT'), ('DEEP', 'amod'), ('LEARNING', 'pobj'), ('customer', 'compound'), ('requirements', 'nsubj'), ('dictate', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[FLASHBLADE, BUILT], [BUILT, DEEP], [DEEP, LEARNING], [LEARNING, customer], [customer, requirements], [requirements, dictate], [dictate, .]]

>> Trigrams: 
[[FLASHBLADE, BUILT, DEEP], [BUILT, DEEP, LEARNING], [DEEP, LEARNING, customer], [LEARNING, customer, requirements], [customer, requirements, dictate], [requirements, dictate, .]]

>> Noun Phrases are: 
[FLASHBLADE, DEEP LEARNING, customer requirements]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

This is possible  because at its core, from software to flash, FlashBlade  is massively parallel. 


>> Tokens are: 
[possible,  , core, ,, software, flash, ,, FlashBlade,  , massively, parallel, .] 

>> PoS Tags are: 
[('possible', 'ADJ'), (' ', 'SPACE'), ('core', 'NOUN'), (',', 'PUNCT'), ('software', 'NOUN'), ('flash', 'VERB'), (',', 'PUNCT'), ('FlashBlade', 'PROPN'), (' ', 'SPACE'), ('massively', 'ADV'), ('parallel', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('possible', 'acomp'), (' ', 'attr'), ('core', 'pobj'), (',', 'punct'), ('software', 'pobj'), ('flash', 'pcomp'), (',', 'punct'), ('FlashBlade', 'nsubj'), (' ', 'nummod'), ('massively', 'advmod'), ('parallel', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[possible,  ], [ , core], [core, ,], [,, software], [software, flash], [flash, ,], [,, FlashBlade], [FlashBlade,  ], [ , massively], [massively, parallel], [parallel, .]]

>> Trigrams: 
[[possible,  , core], [ , core, ,], [core, ,, software], [,, software, flash], [software, flash, ,], [flash, ,, FlashBlade], [,, FlashBlade,  ], [FlashBlade,  , massively], [ , massively, parallel], [massively, parallel, .]]

>> Noun Phrases are: 
[its core, software, FlashBlade]

>> Named Entities are: 
[('FlashBlade  ', 'PRODUCT')] 

------------------- Sentence 3 -------------------

With its unique Evergreen™  business model, customers never rebuy any terabytes  (TBs) they already own and can upgrade technologies  as they evolve without disrupting service or diminishing  performance or data integrity. 


>> Tokens are: 
[unique, Evergreen, ™,  , business, model, ,, customers, rebuy, terabytes,  , (, TBs, ), upgrade, technologies,  , evolve, disrupting, service, diminishing,  , performance, data, integrity, .] 

>> PoS Tags are: 
[('unique', 'ADJ'), ('Evergreen', 'PROPN'), ('™', 'NOUN'), (' ', 'SPACE'), ('business', 'NOUN'), ('model', 'NOUN'), (',', 'PUNCT'), ('customers', 'NOUN'), ('rebuy', 'VERB'), ('terabytes', 'NOUN'), (' ', 'SPACE'), ('(', 'PUNCT'), ('TBs', 'NOUN'), (')', 'PUNCT'), ('upgrade', 'VERB'), ('technologies', 'NOUN'), (' ', 'SPACE'), ('evolve', 'VERB'), ('disrupting', 'VERB'), ('service', 'NOUN'), ('diminishing', 'VERB'), (' ', 'SPACE'), ('performance', 'NOUN'), ('data', 'NOUN'), ('integrity', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('unique', 'amod'), ('Evergreen', 'compound'), ('™', 'pobj'), (' ', 'appos'), ('business', 'compound'), ('model', 'appos'), (',', 'punct'), ('customers', 'nsubj'), ('rebuy', 'ROOT'), ('terabytes', 'dobj'), (' ', 'appos'), ('(', 'punct'), ('TBs', 'appos'), (')', 'punct'), ('upgrade', 'conj'), ('technologies', 'dobj'), (' ', 'dobj'), ('evolve', 'advcl'), ('disrupting', 'pcomp'), ('service', 'dobj'), ('diminishing', 'conj'), (' ', 'nummod'), ('performance', 'nmod'), ('data', 'conj'), ('integrity', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[unique, Evergreen], [Evergreen, ™], [™,  ], [ , business], [business, model], [model, ,], [,, customers], [customers, rebuy], [rebuy, terabytes], [terabytes,  ], [ , (], [(, TBs], [TBs, )], [), upgrade], [upgrade, technologies], [technologies,  ], [ , evolve], [evolve, disrupting], [disrupting, service], [service, diminishing], [diminishing,  ], [ , performance], [performance, data], [data, integrity], [integrity, .]]

>> Trigrams: 
[[unique, Evergreen, ™], [Evergreen, ™,  ], [™,  , business], [ , business, model], [business, model, ,], [model, ,, customers], [,, customers, rebuy], [customers, rebuy, terabytes], [rebuy, terabytes,  ], [terabytes,  , (], [ , (, TBs], [(, TBs, )], [TBs, ), upgrade], [), upgrade, technologies], [upgrade, technologies,  ], [technologies,  , evolve], [ , evolve, disrupting], [evolve, disrupting, service], [disrupting, service, diminishing], [service, diminishing,  ], [diminishing,  , performance], [ , performance, data], [performance, data, integrity], [data, integrity, .]]

>> Noun Phrases are: 
[its unique Evergreen™, business model, customers, any terabytes, TBs, they, technologies, they, service, performance or data integrity]

>> Named Entities are: 
[('Evergreen', 'ORG')] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 5 -------------------

See Figure 4 for an  example of a FlashBlade Chassis. 


>> Tokens are: 
[Figure, 4,  , example, FlashBlade, Chassis, .] 

>> PoS Tags are: 
[('Figure', 'PROPN'), ('4', 'NUM'), (' ', 'SPACE'), ('example', 'NOUN'), ('FlashBlade', 'PROPN'), ('Chassis', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Figure', 'dobj'), ('4', 'nummod'), (' ', 'amod'), ('example', 'pobj'), ('FlashBlade', 'compound'), ('Chassis', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Figure, 4], [4,  ], [ , example], [example, FlashBlade], [FlashBlade, Chassis], [Chassis, .]]

>> Trigrams: 
[[Figure, 4,  ], [4,  , example], [ , example, FlashBlade], [example, FlashBlade, Chassis], [FlashBlade, Chassis, .]]

>> Noun Phrases are: 
[Figure, an  example, a FlashBlade Chassis]

>> Named Entities are: 
[('4', 'CARDINAL')] 


================================ Paragraph 68 =================================

In the new age of big data, applications are leveraging  large farms of powerful servers and extremely fast  networks to access petabytes of data served for  everything from data analytics to scientific discovery  to movie rendering. These new applications demand  fast and efficient storage, which legacy solutions are no  longer capable of providing. 

------------------- Sentence 1 -------------------

In the new age of big data, applications are leveraging  large farms of powerful servers and extremely fast  networks to access petabytes of data served for  everything from data analytics to scientific discovery  to movie rendering. 


>> Tokens are: 
[new, age, big, data, ,, applications, leveraging,  , large, farms, powerful, servers, extremely, fast,  , networks, access, petabytes, data, served,  , data, analytics, scientific, discovery,  , movie, rendering, .] 

>> PoS Tags are: 
[('new', 'ADJ'), ('age', 'NOUN'), ('big', 'ADJ'), ('data', 'NOUN'), (',', 'PUNCT'), ('applications', 'NOUN'), ('leveraging', 'VERB'), (' ', 'SPACE'), ('large', 'ADJ'), ('farms', 'NOUN'), ('powerful', 'ADJ'), ('servers', 'NOUN'), ('extremely', 'ADV'), ('fast', 'ADJ'), (' ', 'SPACE'), ('networks', 'NOUN'), ('access', 'VERB'), ('petabytes', 'NOUN'), ('data', 'NOUN'), ('served', 'VERB'), (' ', 'SPACE'), ('data', 'NOUN'), ('analytics', 'NOUN'), ('scientific', 'ADJ'), ('discovery', 'NOUN'), (' ', 'SPACE'), ('movie', 'NOUN'), ('rendering', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('new', 'amod'), ('age', 'pobj'), ('big', 'amod'), ('data', 'pobj'), (',', 'punct'), ('applications', 'nsubj'), ('leveraging', 'ROOT'), (' ', 'dative'), ('large', 'amod'), ('farms', 'dobj'), ('powerful', 'amod'), ('servers', 'pobj'), ('extremely', 'advmod'), ('fast', 'amod'), (' ', 'compound'), ('networks', 'conj'), ('access', 'compound'), ('petabytes', 'pobj'), ('data', 'pobj'), ('served', 'acl'), (' ', 'pobj'), ('data', 'compound'), ('analytics', 'pobj'), ('scientific', 'amod'), ('discovery', 'pobj'), (' ', 'npadvmod'), ('movie', 'compound'), ('rendering', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[new, age], [age, big], [big, data], [data, ,], [,, applications], [applications, leveraging], [leveraging,  ], [ , large], [large, farms], [farms, powerful], [powerful, servers], [servers, extremely], [extremely, fast], [fast,  ], [ , networks], [networks, access], [access, petabytes], [petabytes, data], [data, served], [served,  ], [ , data], [data, analytics], [analytics, scientific], [scientific, discovery], [discovery,  ], [ , movie], [movie, rendering], [rendering, .]]

>> Trigrams: 
[[new, age, big], [age, big, data], [big, data, ,], [data, ,, applications], [,, applications, leveraging], [applications, leveraging,  ], [leveraging,  , large], [ , large, farms], [large, farms, powerful], [farms, powerful, servers], [powerful, servers, extremely], [servers, extremely, fast], [extremely, fast,  ], [fast,  , networks], [ , networks, access], [networks, access, petabytes], [access, petabytes, data], [petabytes, data, served], [data, served,  ], [served,  , data], [ , data, analytics], [data, analytics, scientific], [analytics, scientific, discovery], [scientific, discovery,  ], [discovery,  , movie], [ , movie, rendering], [movie, rendering, .]]

>> Noun Phrases are: 
[the new age, big data, applications, large farms, powerful servers, extremely fast  networks, access petabytes, data, everything, data analytics, scientific discovery, movie rendering]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

These new applications demand  fast and efficient storage, which legacy solutions are no  longer capable of providing. 


>> Tokens are: 
[new, applications, demand,  , fast, efficient, storage, ,, legacy, solutions,  , longer, capable, providing, .] 

>> PoS Tags are: 
[('new', 'ADJ'), ('applications', 'NOUN'), ('demand', 'VERB'), (' ', 'SPACE'), ('fast', 'ADJ'), ('efficient', 'ADJ'), ('storage', 'NOUN'), (',', 'PUNCT'), ('legacy', 'NOUN'), ('solutions', 'NOUN'), (' ', 'SPACE'), ('longer', 'ADV'), ('capable', 'ADJ'), ('providing', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('new', 'amod'), ('applications', 'nsubj'), ('demand', 'ROOT'), (' ', 'appos'), ('fast', 'amod'), ('efficient', 'conj'), ('storage', 'appos'), (',', 'punct'), ('legacy', 'compound'), ('solutions', 'nsubj'), (' ', 'npadvmod'), ('longer', 'advmod'), ('capable', 'acomp'), ('providing', 'pcomp'), ('.', 'punct')]

>> Bigrams: 
[[new, applications], [applications, demand], [demand,  ], [ , fast], [fast, efficient], [efficient, storage], [storage, ,], [,, legacy], [legacy, solutions], [solutions,  ], [ , longer], [longer, capable], [capable, providing], [providing, .]]

>> Trigrams: 
[[new, applications, demand], [applications, demand,  ], [demand,  , fast], [ , fast, efficient], [fast, efficient, storage], [efficient, storage, ,], [storage, ,, legacy], [,, legacy, solutions], [legacy, solutions,  ], [solutions,  , longer], [ , longer, capable], [longer, capable, providing], [capable, providing, .]]

>> Noun Phrases are: 
[These new applications, fast and efficient storage, legacy solutions]

>> Named Entities are: 
[] 


================================ Paragraph 69 =================================

What’s needed is a new, innovative storage architecture  to support advanced applications while providing  best-of-breed performance in all dimensions of  concurrency – including input/output operations per  second (IOPs), throughput, latency, and capacity –  while offering breakthrough levels of density. The new  FlashBlade™ flash-based storage by Pure Storage®  meets all these needs. FlashBlade can handle big data  and concurrent workloads that will drive tomorrow’s  discoveries, insights and creations.  

------------------- Sentence 1 -------------------

What’s needed is a new, innovative storage architecture  to support advanced applications while providing  best-of-breed performance in all dimensions of  concurrency – including input/output operations per  second (IOPs), throughput, latency, and capacity –  while offering breakthrough levels of density. 


>> Tokens are: 
[needed, new, ,, innovative, storage, architecture,  , support, advanced, applications, providing,  , best, -, -, breed, performance, dimensions,  , concurrency, –, including, input, /, output, operations,  , second, (, IOPs, ), ,, throughput, ,, latency, ,, capacity, –,  , offering, breakthrough, levels, density, .] 

>> PoS Tags are: 
[('needed', 'VERB'), ('new', 'ADJ'), (',', 'PUNCT'), ('innovative', 'ADJ'), ('storage', 'NOUN'), ('architecture', 'NOUN'), (' ', 'SPACE'), ('support', 'VERB'), ('advanced', 'ADJ'), ('applications', 'NOUN'), ('providing', 'VERB'), (' ', 'SPACE'), ('best', 'ADV'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('breed', 'NOUN'), ('performance', 'NOUN'), ('dimensions', 'NOUN'), (' ', 'SPACE'), ('concurrency', 'NOUN'), ('–', 'PUNCT'), ('including', 'VERB'), ('input', 'NOUN'), ('/', 'SYM'), ('output', 'NOUN'), ('operations', 'NOUN'), (' ', 'SPACE'), ('second', 'ADJ'), ('(', 'PUNCT'), ('IOPs', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('throughput', 'NOUN'), (',', 'PUNCT'), ('latency', 'NOUN'), (',', 'PUNCT'), ('capacity', 'NOUN'), ('–', 'PUNCT'), (' ', 'SPACE'), ('offering', 'VERB'), ('breakthrough', 'NOUN'), ('levels', 'NOUN'), ('density', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('needed', 'csubj'), ('new', 'amod'), (',', 'punct'), ('innovative', 'amod'), ('storage', 'compound'), ('architecture', 'attr'), (' ', 'appos'), ('support', 'relcl'), ('advanced', 'amod'), ('applications', 'dobj'), ('providing', 'advcl'), (' ', 'dative'), ('best', 'amod'), ('-', 'punct'), ('-', 'punct'), ('breed', 'pobj'), ('performance', 'dobj'), ('dimensions', 'pobj'), (' ', 'compound'), ('concurrency', 'pobj'), ('–', 'punct'), ('including', 'prep'), ('input', 'nmod'), ('/', 'punct'), ('output', 'compound'), ('operations', 'pobj'), (' ', 'pobj'), ('second', 'appos'), ('(', 'punct'), ('IOPs', 'appos'), (')', 'punct'), (',', 'punct'), ('throughput', 'conj'), (',', 'punct'), ('latency', 'conj'), (',', 'punct'), ('capacity', 'conj'), ('–', 'punct'), (' ', 'dobj'), ('offering', 'advcl'), ('breakthrough', 'compound'), ('levels', 'dobj'), ('density', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[needed, new], [new, ,], [,, innovative], [innovative, storage], [storage, architecture], [architecture,  ], [ , support], [support, advanced], [advanced, applications], [applications, providing], [providing,  ], [ , best], [best, -], [-, -], [-, breed], [breed, performance], [performance, dimensions], [dimensions,  ], [ , concurrency], [concurrency, –], [–, including], [including, input], [input, /], [/, output], [output, operations], [operations,  ], [ , second], [second, (], [(, IOPs], [IOPs, )], [), ,], [,, throughput], [throughput, ,], [,, latency], [latency, ,], [,, capacity], [capacity, –], [–,  ], [ , offering], [offering, breakthrough], [breakthrough, levels], [levels, density], [density, .]]

>> Trigrams: 
[[needed, new, ,], [new, ,, innovative], [,, innovative, storage], [innovative, storage, architecture], [storage, architecture,  ], [architecture,  , support], [ , support, advanced], [support, advanced, applications], [advanced, applications, providing], [applications, providing,  ], [providing,  , best], [ , best, -], [best, -, -], [-, -, breed], [-, breed, performance], [breed, performance, dimensions], [performance, dimensions,  ], [dimensions,  , concurrency], [ , concurrency, –], [concurrency, –, including], [–, including, input], [including, input, /], [input, /, output], [/, output, operations], [output, operations,  ], [operations,  , second], [ , second, (], [second, (, IOPs], [(, IOPs, )], [IOPs, ), ,], [), ,, throughput], [,, throughput, ,], [throughput, ,, latency], [,, latency, ,], [latency, ,, capacity], [,, capacity, –], [capacity, –,  ], [–,  , offering], [ , offering, breakthrough], [offering, breakthrough, levels], [breakthrough, levels, density], [levels, density, .]]

>> Noun Phrases are: 
[What, a new, innovative storage architecture, advanced applications, breed, all dimensions,  concurrency, input/output operations, (IOPs, throughput, latency, capacity, breakthrough levels, density]

>> Named Entities are: 
[('second', 'ORDINAL')] 

------------------- Sentence 2 -------------------

The new  FlashBlade™ flash-based storage by Pure Storage®  meets all these needs. 


>> Tokens are: 
[new,  , FlashBlade, ™, flash, -, based, storage, Pure, Storage, ®,  , meets, needs, .] 

>> PoS Tags are: 
[('new', 'ADJ'), (' ', 'SPACE'), ('FlashBlade', 'PROPN'), ('™', 'NOUN'), ('flash', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('storage', 'NOUN'), ('Pure', 'PROPN'), ('Storage', 'PROPN'), ('®', 'NOUN'), (' ', 'SPACE'), ('meets', 'VERB'), ('needs', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('new', 'amod'), (' ', 'compound'), ('FlashBlade', 'compound'), ('™', 'nmod'), ('flash', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('storage', 'nsubj'), ('Pure', 'compound'), ('Storage', 'compound'), ('®', 'pobj'), (' ', 'nsubj'), ('meets', 'ROOT'), ('needs', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[new,  ], [ , FlashBlade], [FlashBlade, ™], [™, flash], [flash, -], [-, based], [based, storage], [storage, Pure], [Pure, Storage], [Storage, ®], [®,  ], [ , meets], [meets, needs], [needs, .]]

>> Trigrams: 
[[new,  , FlashBlade], [ , FlashBlade, ™], [FlashBlade, ™, flash], [™, flash, -], [flash, -, based], [-, based, storage], [based, storage, Pure], [storage, Pure, Storage], [Pure, Storage, ®], [Storage, ®,  ], [®,  , meets], [ , meets, needs], [meets, needs, .]]

>> Noun Phrases are: 
[The new  FlashBlade™ flash-based storage, Pure Storage®, all these needs]

>> Named Entities are: 
[('FlashBlade', 'PRODUCT')] 

------------------- Sentence 3 -------------------

FlashBlade can handle big data  and concurrent workloads that will drive tomorrow’s  discoveries, insights and creations. 


>> Tokens are: 
[FlashBlade, handle, big, data,  , concurrent, workloads, drive, tomorrow,  , discoveries, ,, insights, creations, .] 

>> PoS Tags are: 
[('FlashBlade', 'PROPN'), ('handle', 'VERB'), ('big', 'ADJ'), ('data', 'NOUN'), (' ', 'SPACE'), ('concurrent', 'ADJ'), ('workloads', 'NOUN'), ('drive', 'VERB'), ('tomorrow', 'NOUN'), (' ', 'SPACE'), ('discoveries', 'NOUN'), (',', 'PUNCT'), ('insights', 'NOUN'), ('creations', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('FlashBlade', 'nsubj'), ('handle', 'ROOT'), ('big', 'amod'), ('data', 'compound'), (' ', 'dobj'), ('concurrent', 'amod'), ('workloads', 'conj'), ('drive', 'relcl'), ('tomorrow', 'nmod'), (' ', 'nummod'), ('discoveries', 'dobj'), (',', 'punct'), ('insights', 'conj'), ('creations', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[FlashBlade, handle], [handle, big], [big, data], [data,  ], [ , concurrent], [concurrent, workloads], [workloads, drive], [drive, tomorrow], [tomorrow,  ], [ , discoveries], [discoveries, ,], [,, insights], [insights, creations], [creations, .]]

>> Trigrams: 
[[FlashBlade, handle, big], [handle, big, data], [big, data,  ], [data,  , concurrent], [ , concurrent, workloads], [concurrent, workloads, drive], [workloads, drive, tomorrow], [drive, tomorrow,  ], [tomorrow,  , discoveries], [ , discoveries, ,], [discoveries, ,, insights], [,, insights, creations], [insights, creations, .]]

>> Noun Phrases are: 
[FlashBlade, concurrent workloads, tomorrow’s  discoveries, insights, creations]

>> Named Entities are: 
[('tomorrow', 'DATE')] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 70 =================================

PURE STORAGE  For the past four years, Gartner has rated Pure Storage  as a Leader in the Magic Quadrant of Solid State Arrays  for their innovations in all-flash data storage. Since  Pure Storage unveiled its FlashBlade scale-out storage  platform, the company has made significant inroads in  providing storage for real-time and big data analytics,  financial analysis and manufacturing.  

------------------- Sentence 1 -------------------

PURE STORAGE   


>> Tokens are: 
[PURE, STORAGE,  ] 

>> PoS Tags are: 
[('PURE', 'PROPN'), ('STORAGE', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('PURE', 'amod'), ('STORAGE', 'ROOT'), (' ', 'appos')]

>> Bigrams: 
[[PURE, STORAGE], [STORAGE,  ]]

>> Trigrams: 
[[PURE, STORAGE,  ]]

>> Noun Phrases are: 
[PURE STORAGE]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

For the past four years, Gartner has rated Pure Storage  as a Leader in the Magic Quadrant of Solid State Arrays  for their innovations in all-flash data storage. 


>> Tokens are: 
[past, years, ,, Gartner, rated, Pure, Storage,  , Leader, Magic, Quadrant, Solid, State, Arrays,  , innovations, -, flash, data, storage, .] 

>> PoS Tags are: 
[('past', 'ADJ'), ('years', 'NOUN'), (',', 'PUNCT'), ('Gartner', 'PROPN'), ('rated', 'VERB'), ('Pure', 'PROPN'), ('Storage', 'PROPN'), (' ', 'SPACE'), ('Leader', 'PROPN'), ('Magic', 'PROPN'), ('Quadrant', 'PROPN'), ('Solid', 'PROPN'), ('State', 'PROPN'), ('Arrays', 'PROPN'), (' ', 'SPACE'), ('innovations', 'NOUN'), ('-', 'PUNCT'), ('flash', 'NOUN'), ('data', 'NOUN'), ('storage', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('past', 'amod'), ('years', 'pobj'), (',', 'punct'), ('Gartner', 'nsubj'), ('rated', 'ROOT'), ('Pure', 'compound'), ('Storage', 'dobj'), (' ', 'appos'), ('Leader', 'pobj'), ('Magic', 'compound'), ('Quadrant', 'pobj'), ('Solid', 'compound'), ('State', 'compound'), ('Arrays', 'pobj'), (' ', 'pobj'), ('innovations', 'pobj'), ('-', 'punct'), ('flash', 'compound'), ('data', 'compound'), ('storage', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[past, years], [years, ,], [,, Gartner], [Gartner, rated], [rated, Pure], [Pure, Storage], [Storage,  ], [ , Leader], [Leader, Magic], [Magic, Quadrant], [Quadrant, Solid], [Solid, State], [State, Arrays], [Arrays,  ], [ , innovations], [innovations, -], [-, flash], [flash, data], [data, storage], [storage, .]]

>> Trigrams: 
[[past, years, ,], [years, ,, Gartner], [,, Gartner, rated], [Gartner, rated, Pure], [rated, Pure, Storage], [Pure, Storage,  ], [Storage,  , Leader], [ , Leader, Magic], [Leader, Magic, Quadrant], [Magic, Quadrant, Solid], [Quadrant, Solid, State], [Solid, State, Arrays], [State, Arrays,  ], [Arrays,  , innovations], [ , innovations, -], [innovations, -, flash], [-, flash, data], [flash, data, storage], [data, storage, .]]

>> Noun Phrases are: 
[the past four years, Gartner, Pure Storage, a Leader, the Magic Quadrant, Solid State Arrays, their innovations, all-flash data storage]

>> Named Entities are: 
[('the past four years', 'DATE'), ('Gartner', 'PERSON'), ('Pure Storage', 'ORG')] 

------------------- Sentence 3 -------------------

Since  Pure Storage unveiled its FlashBlade scale-out storage  platform, the company has made significant inroads in  providing storage for real-time and big data analytics,  financial analysis and manufacturing. 


>> Tokens are: 
[ , Pure, Storage, unveiled, FlashBlade, scale, -, storage,  , platform, ,, company, significant, inroads,  , providing, storage, real, -, time, big, data, analytics, ,,  , financial, analysis, manufacturing, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Pure', 'PROPN'), ('Storage', 'PROPN'), ('unveiled', 'VERB'), ('FlashBlade', 'PROPN'), ('scale', 'NOUN'), ('-', 'PUNCT'), ('storage', 'NOUN'), (' ', 'SPACE'), ('platform', 'NOUN'), (',', 'PUNCT'), ('company', 'NOUN'), ('significant', 'ADJ'), ('inroads', 'NOUN'), (' ', 'SPACE'), ('providing', 'VERB'), ('storage', 'NOUN'), ('real', 'ADJ'), ('-', 'PUNCT'), ('time', 'NOUN'), ('big', 'ADJ'), ('data', 'NOUN'), ('analytics', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('financial', 'ADJ'), ('analysis', 'NOUN'), ('manufacturing', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'pobj'), ('Pure', 'compound'), ('Storage', 'nsubj'), ('unveiled', 'advcl'), ('FlashBlade', 'compound'), ('scale', 'nmod'), ('-', 'punct'), ('storage', 'nmod'), (' ', 'punct'), ('platform', 'dobj'), (',', 'punct'), ('company', 'nsubj'), ('significant', 'amod'), ('inroads', 'dobj'), (' ', 'pobj'), ('providing', 'pcomp'), ('storage', 'dobj'), ('real', 'amod'), ('-', 'punct'), ('time', 'nmod'), ('big', 'conj'), ('data', 'compound'), ('analytics', 'pobj'), (',', 'punct'), (' ', 'nmod'), ('financial', 'amod'), ('analysis', 'conj'), ('manufacturing', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[ , Pure], [Pure, Storage], [Storage, unveiled], [unveiled, FlashBlade], [FlashBlade, scale], [scale, -], [-, storage], [storage,  ], [ , platform], [platform, ,], [,, company], [company, significant], [significant, inroads], [inroads,  ], [ , providing], [providing, storage], [storage, real], [real, -], [-, time], [time, big], [big, data], [data, analytics], [analytics, ,], [,,  ], [ , financial], [financial, analysis], [analysis, manufacturing], [manufacturing, .]]

>> Trigrams: 
[[ , Pure, Storage], [Pure, Storage, unveiled], [Storage, unveiled, FlashBlade], [unveiled, FlashBlade, scale], [FlashBlade, scale, -], [scale, -, storage], [-, storage,  ], [storage,  , platform], [ , platform, ,], [platform, ,, company], [,, company, significant], [company, significant, inroads], [significant, inroads,  ], [inroads,  , providing], [ , providing, storage], [providing, storage, real], [storage, real, -], [real, -, time], [-, time, big], [time, big, data], [big, data, analytics], [data, analytics, ,], [analytics, ,,  ], [,,  , financial], [ , financial, analysis], [financial, analysis, manufacturing], [analysis, manufacturing, .]]

>> Noun Phrases are: 
[Pure Storage, its FlashBlade scale-out storage  platform, the company, significant inroads, storage, real-time and big data analytics,  financial analysis, manufacturing]

>> Named Entities are: 
[('FlashBlade', 'PRODUCT')] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 71 =================================

The FlashBlade architecture is designed from the  ground-up for modern analytics workloads, delivering  high performance, cost-effective, simple-to-own-and- operate scale-out storage for petabytes of operational  data. It is specifically designed for flash media and  the architecture contains no provision for mechanical  disks. FlashBlade is purpose-built for massively  parallel workloads that are required for deep learning  processing. 

------------------- Sentence 1 -------------------

The FlashBlade architecture is designed from the  ground-up for modern analytics workloads, delivering  high performance, cost-effective, simple-to-own-and- operate scale-out storage for petabytes of operational  data. 


>> Tokens are: 
[FlashBlade, architecture, designed,  , ground, -, modern, analytics, workloads, ,, delivering,  , high, performance, ,, cost, -, effective, ,, simple, -, -, -, and-, operate, scale, -, storage, petabytes, operational,  , data, .] 

>> PoS Tags are: 
[('FlashBlade', 'PROPN'), ('architecture', 'NOUN'), ('designed', 'VERB'), (' ', 'SPACE'), ('ground', 'NOUN'), ('-', 'PUNCT'), ('modern', 'ADJ'), ('analytics', 'NOUN'), ('workloads', 'NOUN'), (',', 'PUNCT'), ('delivering', 'VERB'), (' ', 'SPACE'), ('high', 'ADJ'), ('performance', 'NOUN'), (',', 'PUNCT'), ('cost', 'NOUN'), ('-', 'PUNCT'), ('effective', 'ADJ'), (',', 'PUNCT'), ('simple', 'ADJ'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('and-', 'NOUN'), ('operate', 'NOUN'), ('scale', 'NOUN'), ('-', 'PUNCT'), ('storage', 'NOUN'), ('petabytes', 'NOUN'), ('operational', 'ADJ'), (' ', 'SPACE'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('FlashBlade', 'compound'), ('architecture', 'nsubjpass'), ('designed', 'ROOT'), (' ', 'compound'), ('ground', 'compound'), ('-', 'punct'), ('modern', 'amod'), ('analytics', 'compound'), ('workloads', 'pobj'), (',', 'punct'), ('delivering', 'advcl'), (' ', 'dobj'), ('high', 'amod'), ('performance', 'dobj'), (',', 'punct'), ('cost', 'npadvmod'), ('-', 'punct'), ('effective', 'amod'), (',', 'punct'), ('simple', 'amod'), ('-', 'punct'), ('-', 'punct'), ('-', 'punct'), ('and-', 'pobj'), ('operate', 'conj'), ('scale', 'nmod'), ('-', 'punct'), ('storage', 'dobj'), ('petabytes', 'pobj'), ('operational', 'amod'), (' ', 'compound'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[FlashBlade, architecture], [architecture, designed], [designed,  ], [ , ground], [ground, -], [-, modern], [modern, analytics], [analytics, workloads], [workloads, ,], [,, delivering], [delivering,  ], [ , high], [high, performance], [performance, ,], [,, cost], [cost, -], [-, effective], [effective, ,], [,, simple], [simple, -], [-, -], [-, -], [-, and-], [and-, operate], [operate, scale], [scale, -], [-, storage], [storage, petabytes], [petabytes, operational], [operational,  ], [ , data], [data, .]]

>> Trigrams: 
[[FlashBlade, architecture, designed], [architecture, designed,  ], [designed,  , ground], [ , ground, -], [ground, -, modern], [-, modern, analytics], [modern, analytics, workloads], [analytics, workloads, ,], [workloads, ,, delivering], [,, delivering,  ], [delivering,  , high], [ , high, performance], [high, performance, ,], [performance, ,, cost], [,, cost, -], [cost, -, effective], [-, effective, ,], [effective, ,, simple], [,, simple, -], [simple, -, -], [-, -, -], [-, -, and-], [-, and-, operate], [and-, operate, scale], [operate, scale, -], [scale, -, storage], [-, storage, petabytes], [storage, petabytes, operational], [petabytes, operational,  ], [operational,  , data], [ , data, .]]

>> Noun Phrases are: 
[The FlashBlade architecture, the  ground-up, modern analytics workloads, high performance, own-and-, petabytes, operational  data]

>> Named Entities are: 
[('FlashBlade', 'ORG')] 

------------------- Sentence 2 -------------------

It is specifically designed for flash media and  the architecture contains no provision for mechanical  disks. 


>> Tokens are: 
[specifically, designed, flash, media,  , architecture, contains, provision, mechanical,  , disks, .] 

>> PoS Tags are: 
[('specifically', 'ADV'), ('designed', 'VERB'), ('flash', 'NOUN'), ('media', 'NOUN'), (' ', 'SPACE'), ('architecture', 'NOUN'), ('contains', 'VERB'), ('provision', 'NOUN'), ('mechanical', 'ADJ'), (' ', 'SPACE'), ('disks', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('specifically', 'advmod'), ('designed', 'ROOT'), ('flash', 'compound'), ('media', 'pobj'), (' ', 'conj'), ('architecture', 'nsubj'), ('contains', 'conj'), ('provision', 'dobj'), ('mechanical', 'amod'), (' ', 'compound'), ('disks', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[specifically, designed], [designed, flash], [flash, media], [media,  ], [ , architecture], [architecture, contains], [contains, provision], [provision, mechanical], [mechanical,  ], [ , disks], [disks, .]]

>> Trigrams: 
[[specifically, designed, flash], [designed, flash, media], [flash, media,  ], [media,  , architecture], [ , architecture, contains], [architecture, contains, provision], [contains, provision, mechanical], [provision, mechanical,  ], [mechanical,  , disks], [ , disks, .]]

>> Noun Phrases are: 
[It, flash media, the architecture, no provision, mechanical  disks]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

FlashBlade is purpose-built for massively  parallel workloads that are required for deep learning  processing. 


>> Tokens are: 
[FlashBlade, purpose, -, built, massively,  , parallel, workloads, required, deep, learning,  , processing, .] 

>> PoS Tags are: 
[('FlashBlade', 'PROPN'), ('purpose', 'NOUN'), ('-', 'PUNCT'), ('built', 'VERB'), ('massively', 'ADV'), (' ', 'SPACE'), ('parallel', 'ADJ'), ('workloads', 'NOUN'), ('required', 'VERB'), ('deep', 'ADJ'), ('learning', 'NOUN'), (' ', 'SPACE'), ('processing', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('FlashBlade', 'nsubj'), ('purpose', 'npadvmod'), ('-', 'punct'), ('built', 'acomp'), ('massively', 'advmod'), (' ', 'pobj'), ('parallel', 'amod'), ('workloads', 'pobj'), ('required', 'relcl'), ('deep', 'amod'), ('learning', 'amod'), (' ', 'compound'), ('processing', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[FlashBlade, purpose], [purpose, -], [-, built], [built, massively], [massively,  ], [ , parallel], [parallel, workloads], [workloads, required], [required, deep], [deep, learning], [learning,  ], [ , processing], [processing, .]]

>> Trigrams: 
[[FlashBlade, purpose, -], [purpose, -, built], [-, built, massively], [built, massively,  ], [massively,  , parallel], [ , parallel, workloads], [parallel, workloads, required], [workloads, required, deep], [required, deep, learning], [deep, learning,  ], [learning,  , processing], [ , processing, .]]

>> Noun Phrases are: 
[FlashBlade, parallel workloads, deep learning  processing]

>> Named Entities are: 
[('FlashBlade', 'ORG')] 


================================ Paragraph 72 =================================

The key property of FlashBlade is to deliver elastic  performance at scale – the ability to increase  performance, capacity, connectivity, and functionality  

------------------- Sentence 1 -------------------

The key property of FlashBlade is to deliver elastic  performance at scale – the ability to increase  performance, capacity, connectivity, and functionality   


>> Tokens are: 
[key, property, FlashBlade, deliver, elastic,  , performance, scale, –, ability, increase,  , performance, ,, capacity, ,, connectivity, ,, functionality,  ] 

>> PoS Tags are: 
[('key', 'ADJ'), ('property', 'NOUN'), ('FlashBlade', 'PROPN'), ('deliver', 'VERB'), ('elastic', 'ADJ'), (' ', 'SPACE'), ('performance', 'NOUN'), ('scale', 'NOUN'), ('–', 'PUNCT'), ('ability', 'NOUN'), ('increase', 'VERB'), (' ', 'SPACE'), ('performance', 'NOUN'), (',', 'PUNCT'), ('capacity', 'NOUN'), (',', 'PUNCT'), ('connectivity', 'NOUN'), (',', 'PUNCT'), ('functionality', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('key', 'amod'), ('property', 'nsubj'), ('FlashBlade', 'pobj'), ('deliver', 'xcomp'), ('elastic', 'amod'), (' ', 'compound'), ('performance', 'dobj'), ('scale', 'pobj'), ('–', 'punct'), ('ability', 'appos'), ('increase', 'acl'), (' ', 'compound'), ('performance', 'dobj'), (',', 'punct'), ('capacity', 'conj'), (',', 'punct'), ('connectivity', 'conj'), (',', 'punct'), ('functionality', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[key, property], [property, FlashBlade], [FlashBlade, deliver], [deliver, elastic], [elastic,  ], [ , performance], [performance, scale], [scale, –], [–, ability], [ability, increase], [increase,  ], [ , performance], [performance, ,], [,, capacity], [capacity, ,], [,, connectivity], [connectivity, ,], [,, functionality], [functionality,  ]]

>> Trigrams: 
[[key, property, FlashBlade], [property, FlashBlade, deliver], [FlashBlade, deliver, elastic], [deliver, elastic,  ], [elastic,  , performance], [ , performance, scale], [performance, scale, –], [scale, –, ability], [–, ability, increase], [ability, increase,  ], [increase,  , performance], [ , performance, ,], [performance, ,, capacity], [,, capacity, ,], [capacity, ,, connectivity], [,, connectivity, ,], [connectivity, ,, functionality], [,, functionality,  ]]

>> Noun Phrases are: 
[The key property, FlashBlade, elastic  performance, scale, the ability,  performance, capacity, connectivity]

>> Named Entities are: 
[('FlashBlade', 'PRODUCT')] 


================================ Paragraph 73 =================================

Figure 4. FlashBlade Chassis: 1.6 Petabytes in 4U. Courtesy of Pure Storage.

------------------- Sentence 1 -------------------

Figure 4. 


>> Tokens are: 
[Figure, 4, .] 

>> PoS Tags are: 
[('Figure', 'VERB'), ('4', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Figure', 'ROOT'), ('4', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[Figure, 4], [4, .]]

>> Trigrams: 
[[Figure, 4, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('4', 'CARDINAL')] 

------------------- Sentence 2 -------------------

FlashBlade Chassis: 1.6 Petabytes in 4U. Courtesy of Pure Storage. 


>> Tokens are: 
[FlashBlade, Chassis, :, 1.6, Petabytes, 4U., Courtesy, Pure, Storage, .] 

>> PoS Tags are: 
[('FlashBlade', 'PROPN'), ('Chassis', 'PROPN'), (':', 'PUNCT'), ('1.6', 'NUM'), ('Petabytes', 'PROPN'), ('4U.', 'NUM'), ('Courtesy', 'PROPN'), ('Pure', 'PROPN'), ('Storage', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('FlashBlade', 'compound'), ('Chassis', 'ROOT'), (':', 'punct'), ('1.6', 'nummod'), ('Petabytes', 'appos'), ('4U.', 'nummod'), ('Courtesy', 'pobj'), ('Pure', 'compound'), ('Storage', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[FlashBlade, Chassis], [Chassis, :], [:, 1.6], [1.6, Petabytes], [Petabytes, 4U.], [4U., Courtesy], [Courtesy, Pure], [Pure, Storage], [Storage, .]]

>> Trigrams: 
[[FlashBlade, Chassis, :], [Chassis, :, 1.6], [:, 1.6, Petabytes], [1.6, Petabytes, 4U.], [Petabytes, 4U., Courtesy], [4U., Courtesy, Pure], [Courtesy, Pure, Storage], [Pure, Storage, .]]

>> Noun Phrases are: 
[FlashBlade Chassis, 1.6 Petabytes, 4U. Courtesy, Pure Storage]

>> Named Entities are: 
[] 


================================ Paragraph 74 =================================

DATANAMI: ACCELER ATE DEEP LEARNING WITH A MODERN DATA PLATFORM 

------------------- Sentence 1 -------------------

DATANAMI: ACCELER ATE DEEP LEARNING WITH A MODERN DATA PLATFORM 


>> Tokens are: 
[DATANAMI, :, ACCELER, ATE, DEEP, LEARNING, MODERN, DATA, PLATFORM] 

>> PoS Tags are: 
[('DATANAMI', 'PROPN'), (':', 'PUNCT'), ('ACCELER', 'ADJ'), ('ATE', 'VERB'), ('DEEP', 'ADJ'), ('LEARNING', 'NOUN'), ('MODERN', 'PROPN'), ('DATA', 'PROPN'), ('PLATFORM', 'NOUN')] 

>> Dependency Tags are: 
[('DATANAMI', 'dep'), (':', 'punct'), ('ACCELER', 'nsubj'), ('ATE', 'ROOT'), ('DEEP', 'amod'), ('LEARNING', 'dobj'), ('MODERN', 'compound'), ('DATA', 'compound'), ('PLATFORM', 'pobj')]

>> Bigrams: 
[[DATANAMI, :], [:, ACCELER], [ACCELER, ATE], [ATE, DEEP], [DEEP, LEARNING], [LEARNING, MODERN], [MODERN, DATA], [DATA, PLATFORM]]

>> Trigrams: 
[[DATANAMI, :, ACCELER], [:, ACCELER, ATE], [ACCELER, ATE, DEEP], [ATE, DEEP, LEARNING], [DEEP, LEARNING, MODERN], [LEARNING, MODERN, DATA], [MODERN, DATA, PLATFORM]]

>> Noun Phrases are: 
[DEEP LEARNING, A MODERN DATA PLATFORM]

>> Named Entities are: 
[] 


================================ Paragraph 75 =================================

8TABOR CUSTOM PUBLISHING 

------------------- Sentence 1 -------------------

8TABOR CUSTOM PUBLISHING 


>> Tokens are: 
[8TABOR, CUSTOM, PUBLISHING] 

>> PoS Tags are: 
[('8TABOR', 'PROPN'), ('CUSTOM', 'PROPN'), ('PUBLISHING', 'NOUN')] 

>> Dependency Tags are: 
[('8TABOR', 'compound'), ('CUSTOM', 'compound'), ('PUBLISHING', 'ROOT')]

>> Bigrams: 
[[8TABOR, CUSTOM], [CUSTOM, PUBLISHING]]

>> Trigrams: 
[[8TABOR, CUSTOM, PUBLISHING]]

>> Noun Phrases are: 
[8TABOR CUSTOM PUBLISHING]

>> Named Entities are: 
[('8TABOR CUSTOM PUBLISHING', 'ORG')] 


================================ Paragraph 76 =================================

DELIVERING DATA THROUGHPUT FOR AI 

------------------- Sentence 1 -------------------

DELIVERING DATA THROUGHPUT FOR AI 


>> Tokens are: 
[DELIVERING, DATA, THROUGHPUT, AI] 

>> PoS Tags are: 
[('DELIVERING', 'VERB'), ('DATA', 'PROPN'), ('THROUGHPUT', 'PROPN'), ('AI', 'NOUN')] 

>> Dependency Tags are: 
[('DELIVERING', 'ROOT'), ('DATA', 'compound'), ('THROUGHPUT', 'dobj'), ('AI', 'pobj')]

>> Bigrams: 
[[DELIVERING, DATA], [DATA, THROUGHPUT], [THROUGHPUT, AI]]

>> Trigrams: 
[[DELIVERING, DATA, THROUGHPUT], [DATA, THROUGHPUT, AI]]

>> Noun Phrases are: 
[DATA THROUGHPUT, AI]

>> Named Entities are: 
[] 


================================ Paragraph 77 =================================

Figure 5. Example of how FlashBlade delivers required AI throughput. Courtesy of Pure Storage. 

------------------- Sentence 1 -------------------

Figure 5. 


>> Tokens are: 
[Figure, 5, .] 

>> PoS Tags are: 
[('Figure', 'VERB'), ('5', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Figure', 'ROOT'), ('5', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[Figure, 5], [5, .]]

>> Trigrams: 
[[Figure, 5, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('5', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Example of how FlashBlade delivers required AI throughput. 


>> Tokens are: 
[Example, FlashBlade, delivers, required, AI, throughput, .] 

>> PoS Tags are: 
[('Example', 'NOUN'), ('FlashBlade', 'PROPN'), ('delivers', 'VERB'), ('required', 'VERB'), ('AI', 'PROPN'), ('throughput', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Example', 'ROOT'), ('FlashBlade', 'nsubj'), ('delivers', 'pcomp'), ('required', 'amod'), ('AI', 'compound'), ('throughput', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Example, FlashBlade], [FlashBlade, delivers], [delivers, required], [required, AI], [AI, throughput], [throughput, .]]

>> Trigrams: 
[[Example, FlashBlade, delivers], [FlashBlade, delivers, required], [delivers, required, AI], [required, AI, throughput], [AI, throughput, .]]

>> Noun Phrases are: 
[Example, FlashBlade, required AI throughput]

>> Named Entities are: 
[('FlashBlade', 'PRODUCT'), ('AI', 'ORG')] 

------------------- Sentence 3 -------------------

Courtesy of Pure Storage. 


>> Tokens are: 
[Courtesy, Pure, Storage, .] 

>> PoS Tags are: 
[('Courtesy', 'NOUN'), ('Pure', 'PROPN'), ('Storage', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Courtesy', 'ROOT'), ('Pure', 'compound'), ('Storage', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Courtesy, Pure], [Pure, Storage], [Storage, .]]

>> Trigrams: 
[[Courtesy, Pure, Storage], [Pure, Storage, .]]

>> Noun Phrases are: 
[Courtesy, Pure Storage]

>> Named Entities are: 
[] 


================================ Paragraph 78 =================================

CNTK framework. The training model uses small files  with random access, which older legacy systems do  not handle efficiently. In this example, a FlashBlade can  deliver enough ingest throughput to maximize training  performance on multiple DGX-1 systems. 

------------------- Sentence 1 -------------------

CNTK framework. 


>> Tokens are: 
[CNTK, framework, .] 

>> PoS Tags are: 
[('CNTK', 'PROPN'), ('framework', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('CNTK', 'compound'), ('framework', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[CNTK, framework], [framework, .]]

>> Trigrams: 
[[CNTK, framework, .]]

>> Noun Phrases are: 
[CNTK framework]

>> Named Entities are: 
[('CNTK', 'ORG')] 

------------------- Sentence 2 -------------------

The training model uses small files  with random access, which older legacy systems do  not handle efficiently. 


>> Tokens are: 
[training, model, uses, small, files,  , random, access, ,, older, legacy, systems,  , handle, efficiently, .] 

>> PoS Tags are: 
[('training', 'NOUN'), ('model', 'NOUN'), ('uses', 'VERB'), ('small', 'ADJ'), ('files', 'NOUN'), (' ', 'SPACE'), ('random', 'ADJ'), ('access', 'NOUN'), (',', 'PUNCT'), ('older', 'ADJ'), ('legacy', 'NOUN'), ('systems', 'NOUN'), (' ', 'SPACE'), ('handle', 'VERB'), ('efficiently', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('training', 'compound'), ('model', 'nsubj'), ('uses', 'ROOT'), ('small', 'amod'), ('files', 'dobj'), (' ', 'appos'), ('random', 'amod'), ('access', 'pobj'), (',', 'punct'), ('older', 'amod'), ('legacy', 'compound'), ('systems', 'nsubj'), (' ', 'nsubj'), ('handle', 'relcl'), ('efficiently', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[training, model], [model, uses], [uses, small], [small, files], [files,  ], [ , random], [random, access], [access, ,], [,, older], [older, legacy], [legacy, systems], [systems,  ], [ , handle], [handle, efficiently], [efficiently, .]]

>> Trigrams: 
[[training, model, uses], [model, uses, small], [uses, small, files], [small, files,  ], [files,  , random], [ , random, access], [random, access, ,], [access, ,, older], [,, older, legacy], [older, legacy, systems], [legacy, systems,  ], [systems,  , handle], [ , handle, efficiently], [handle, efficiently, .]]

>> Noun Phrases are: 
[The training model, small files, random access, older legacy systems]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

In this example, a FlashBlade can  deliver enough ingest throughput to maximize training  performance on multiple DGX-1 systems. 


>> Tokens are: 
[example, ,, FlashBlade,  , deliver, ingest, throughput, maximize, training,  , performance, multiple, DGX-1, systems, .] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), ('FlashBlade', 'PROPN'), (' ', 'SPACE'), ('deliver', 'VERB'), ('ingest', 'ADJ'), ('throughput', 'NOUN'), ('maximize', 'VERB'), ('training', 'NOUN'), (' ', 'SPACE'), ('performance', 'NOUN'), ('multiple', 'ADJ'), ('DGX-1', 'PROPN'), ('systems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct'), ('FlashBlade', 'nsubj'), (' ', 'nsubj'), ('deliver', 'ROOT'), ('ingest', 'amod'), ('throughput', 'dobj'), ('maximize', 'advcl'), ('training', 'compound'), (' ', 'compound'), ('performance', 'dobj'), ('multiple', 'amod'), ('DGX-1', 'compound'), ('systems', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[example, ,], [,, FlashBlade], [FlashBlade,  ], [ , deliver], [deliver, ingest], [ingest, throughput], [throughput, maximize], [maximize, training], [training,  ], [ , performance], [performance, multiple], [multiple, DGX-1], [DGX-1, systems], [systems, .]]

>> Trigrams: 
[[example, ,, FlashBlade], [,, FlashBlade,  ], [FlashBlade,  , deliver], [ , deliver, ingest], [deliver, ingest, throughput], [ingest, throughput, maximize], [throughput, maximize, training], [maximize, training,  ], [training,  , performance], [ , performance, multiple], [performance, multiple, DGX-1], [multiple, DGX-1, systems], [DGX-1, systems, .]]

>> Noun Phrases are: 
[this example, a FlashBlade, enough ingest throughput, training  performance, multiple DGX-1 systems]

>> Named Entities are: 
[('FlashBlade', 'PRODUCT')] 


================================ Paragraph 79 =================================

Deep learning systems often use mostly small files to  keep the training computers busy. In the example shown  in Figure 5, the deep learning training is running on  NVIDIA DGX-1 servers and the FlashBlade data storage  platform. In the example, each DGX-1 is processing 13k  images per second through AlexNet using Microsoft 

------------------- Sentence 1 -------------------

Deep learning systems often use mostly small files to  keep the training computers busy. 


>> Tokens are: 
[Deep, learning, systems, use, small, files,  , training, computers, busy, .] 

>> PoS Tags are: 
[('Deep', 'ADJ'), ('learning', 'NOUN'), ('systems', 'NOUN'), ('use', 'VERB'), ('small', 'ADJ'), ('files', 'NOUN'), (' ', 'SPACE'), ('training', 'NOUN'), ('computers', 'NOUN'), ('busy', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Deep', 'amod'), ('learning', 'compound'), ('systems', 'nsubj'), ('use', 'ROOT'), ('small', 'amod'), ('files', 'dobj'), (' ', 'pobj'), ('training', 'compound'), ('computers', 'dobj'), ('busy', 'oprd'), ('.', 'punct')]

>> Bigrams: 
[[Deep, learning], [learning, systems], [systems, use], [use, small], [small, files], [files,  ], [ , training], [training, computers], [computers, busy], [busy, .]]

>> Trigrams: 
[[Deep, learning, systems], [learning, systems, use], [systems, use, small], [use, small, files], [small, files,  ], [files,  , training], [ , training, computers], [training, computers, busy], [computers, busy, .]]

>> Noun Phrases are: 
[Deep learning systems, mostly small files, the training computers]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In the example shown  in Figure 5, the deep learning training is running on  NVIDIA DGX-1 servers and the FlashBlade data storage  platform. 


>> Tokens are: 
[example, shown,  , Figure, 5, ,, deep, learning, training, running,  , NVIDIA, DGX-1, servers, FlashBlade, data, storage,  , platform, .] 

>> PoS Tags are: 
[('example', 'NOUN'), ('shown', 'VERB'), (' ', 'SPACE'), ('Figure', 'PROPN'), ('5', 'NUM'), (',', 'PUNCT'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('training', 'NOUN'), ('running', 'VERB'), (' ', 'SPACE'), ('NVIDIA', 'PROPN'), ('DGX-1', 'PROPN'), ('servers', 'NOUN'), ('FlashBlade', 'PROPN'), ('data', 'NOUN'), ('storage', 'NOUN'), (' ', 'SPACE'), ('platform', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), ('shown', 'advcl'), (' ', 'dobj'), ('Figure', 'pobj'), ('5', 'nummod'), (',', 'punct'), ('deep', 'amod'), ('learning', 'compound'), ('training', 'nsubj'), ('running', 'ROOT'), (' ', 'pobj'), ('NVIDIA', 'compound'), ('DGX-1', 'compound'), ('servers', 'pobj'), ('FlashBlade', 'compound'), ('data', 'compound'), ('storage', 'conj'), (' ', 'compound'), ('platform', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[example, shown], [shown,  ], [ , Figure], [Figure, 5], [5, ,], [,, deep], [deep, learning], [learning, training], [training, running], [running,  ], [ , NVIDIA], [NVIDIA, DGX-1], [DGX-1, servers], [servers, FlashBlade], [FlashBlade, data], [data, storage], [storage,  ], [ , platform], [platform, .]]

>> Trigrams: 
[[example, shown,  ], [shown,  , Figure], [ , Figure, 5], [Figure, 5, ,], [5, ,, deep], [,, deep, learning], [deep, learning, training], [learning, training, running], [training, running,  ], [running,  , NVIDIA], [ , NVIDIA, DGX-1], [NVIDIA, DGX-1, servers], [DGX-1, servers, FlashBlade], [servers, FlashBlade, data], [FlashBlade, data, storage], [data, storage,  ], [storage,  , platform], [ , platform, .]]

>> Noun Phrases are: 
[the example, Figure, the deep learning training, NVIDIA DGX-1 servers, the FlashBlade data storage,  platform]

>> Named Entities are: 
[('5', 'CARDINAL'), ('FlashBlade', 'ORG')] 

------------------- Sentence 3 -------------------

In the example, each DGX-1 is processing 13k  images per second through AlexNet using Microsoft 


>> Tokens are: 
[example, ,, DGX-1, processing, 13k,  , images, second, AlexNet, Microsoft] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), ('DGX-1', 'PROPN'), ('processing', 'VERB'), ('13k', 'NUM'), (' ', 'SPACE'), ('images', 'NOUN'), ('second', 'ADJ'), ('AlexNet', 'PROPN'), ('Microsoft', 'PROPN')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct'), ('DGX-1', 'nsubj'), ('processing', 'ROOT'), ('13k', 'dobj'), (' ', 'nummod'), ('images', 'dobj'), ('second', 'pobj'), ('AlexNet', 'pobj'), ('Microsoft', 'dobj')]

>> Bigrams: 
[[example, ,], [,, DGX-1], [DGX-1, processing], [processing, 13k], [13k,  ], [ , images], [images, second], [second, AlexNet], [AlexNet, Microsoft]]

>> Trigrams: 
[[example, ,, DGX-1], [,, DGX-1, processing], [DGX-1, processing, 13k], [processing, 13k,  ], [13k,  , images], [ , images, second], [images, second, AlexNet], [second, AlexNet, Microsoft]]

>> Noun Phrases are: 
[the example, each DGX-1,  images, AlexNet, Microsoft]

>> Named Entities are: 
[('13k', 'DATE'), ('second', 'ORDINAL'), ('AlexNet', 'ORG'), ('Microsoft', 'ORG')] 


================================ Paragraph 80 =================================

DATANAMI: ACCELER ATE DEEP LEARNING WITH A MODERN DATA PLATFORM 

------------------- Sentence 1 -------------------

DATANAMI: ACCELER ATE DEEP LEARNING WITH A MODERN DATA PLATFORM 


>> Tokens are: 
[DATANAMI, :, ACCELER, ATE, DEEP, LEARNING, MODERN, DATA, PLATFORM] 

>> PoS Tags are: 
[('DATANAMI', 'PROPN'), (':', 'PUNCT'), ('ACCELER', 'ADJ'), ('ATE', 'VERB'), ('DEEP', 'ADJ'), ('LEARNING', 'NOUN'), ('MODERN', 'PROPN'), ('DATA', 'PROPN'), ('PLATFORM', 'NOUN')] 

>> Dependency Tags are: 
[('DATANAMI', 'dep'), (':', 'punct'), ('ACCELER', 'nsubj'), ('ATE', 'ROOT'), ('DEEP', 'amod'), ('LEARNING', 'dobj'), ('MODERN', 'compound'), ('DATA', 'compound'), ('PLATFORM', 'pobj')]

>> Bigrams: 
[[DATANAMI, :], [:, ACCELER], [ACCELER, ATE], [ATE, DEEP], [DEEP, LEARNING], [LEARNING, MODERN], [MODERN, DATA], [DATA, PLATFORM]]

>> Trigrams: 
[[DATANAMI, :, ACCELER], [:, ACCELER, ATE], [ACCELER, ATE, DEEP], [ATE, DEEP, LEARNING], [DEEP, LEARNING, MODERN], [LEARNING, MODERN, DATA], [MODERN, DATA, PLATFORM]]

>> Noun Phrases are: 
[DEEP LEARNING, A MODERN DATA PLATFORM]

>> Named Entities are: 
[] 


================================ Paragraph 81 =================================

9TABOR CUSTOM PUBLISHING 

------------------- Sentence 1 -------------------

9TABOR CUSTOM PUBLISHING 


>> Tokens are: 
[9TABOR, CUSTOM, PUBLISHING] 

>> PoS Tags are: 
[('9TABOR', 'PROPN'), ('CUSTOM', 'PROPN'), ('PUBLISHING', 'NOUN')] 

>> Dependency Tags are: 
[('9TABOR', 'compound'), ('CUSTOM', 'compound'), ('PUBLISHING', 'ROOT')]

>> Bigrams: 
[[9TABOR, CUSTOM], [CUSTOM, PUBLISHING]]

>> Trigrams: 
[[9TABOR, CUSTOM, PUBLISHING]]

>> Noun Phrases are: 
[9TABOR CUSTOM PUBLISHING]

>> Named Entities are: 
[] 


================================ Paragraph 82 =================================

SUMMARY the massive concurrency required by machine learning.  Legacy storage is becoming a bottleneck in processing  big data and a new storage technology is needed to  meet data analytics performance needs. 

------------------- Sentence 1 -------------------

SUMMARY the massive concurrency required by machine learning. 


>> Tokens are: 
[SUMMARY, massive, concurrency, required, machine, learning, .] 

>> PoS Tags are: 
[('SUMMARY', 'PROPN'), ('massive', 'ADJ'), ('concurrency', 'NOUN'), ('required', 'VERB'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('SUMMARY', 'ROOT'), ('massive', 'amod'), ('concurrency', 'dobj'), ('required', 'acl'), ('machine', 'compound'), ('learning', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[SUMMARY, massive], [massive, concurrency], [concurrency, required], [required, machine], [machine, learning], [learning, .]]

>> Trigrams: 
[[SUMMARY, massive, concurrency], [massive, concurrency, required], [concurrency, required, machine], [required, machine, learning], [machine, learning, .]]

>> Noun Phrases are: 
[SUMMARY, the massive concurrency, machine learning]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Legacy storage is becoming a bottleneck in processing  big data and a new storage technology is needed to  meet data analytics performance needs. 


>> Tokens are: 
[Legacy, storage, bottleneck, processing,  , big, data, new, storage, technology, needed,  , meet, data, analytics, performance, needs, .] 

>> PoS Tags are: 
[('Legacy', 'PROPN'), ('storage', 'NOUN'), ('bottleneck', 'NOUN'), ('processing', 'VERB'), (' ', 'SPACE'), ('big', 'ADJ'), ('data', 'NOUN'), ('new', 'ADJ'), ('storage', 'NOUN'), ('technology', 'NOUN'), ('needed', 'VERB'), (' ', 'SPACE'), ('meet', 'VERB'), ('data', 'NOUN'), ('analytics', 'NOUN'), ('performance', 'NOUN'), ('needs', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Legacy', 'compound'), ('storage', 'nsubj'), ('bottleneck', 'attr'), ('processing', 'pcomp'), (' ', 'dobj'), ('big', 'amod'), ('data', 'dobj'), ('new', 'amod'), ('storage', 'compound'), ('technology', 'conj'), ('needed', 'conj'), (' ', 'pobj'), ('meet', 'advcl'), ('data', 'compound'), ('analytics', 'compound'), ('performance', 'compound'), ('needs', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Legacy, storage], [storage, bottleneck], [bottleneck, processing], [processing,  ], [ , big], [big, data], [data, new], [new, storage], [storage, technology], [technology, needed], [needed,  ], [ , meet], [meet, data], [data, analytics], [analytics, performance], [performance, needs], [needs, .]]

>> Trigrams: 
[[Legacy, storage, bottleneck], [storage, bottleneck, processing], [bottleneck, processing,  ], [processing,  , big], [ , big, data], [big, data, new], [data, new, storage], [new, storage, technology], [storage, technology, needed], [technology, needed,  ], [needed,  , meet], [ , meet, data], [meet, data, analytics], [data, analytics, performance], [analytics, performance, needs], [performance, needs, .]]

>> Noun Phrases are: 
[Legacy storage, a bottleneck, big data, a new storage technology, data analytics performance needs]

>> Named Entities are: 
[] 


================================ Paragraph 83 =================================

The FlashBlade all-flash storage array from Pure  Storage is designed to meet these needs. FlashBlade  performance improves linearly with more data.  Whether files are small or large, FlashBlade delivers  true linear scaling of capacity and performance, and as  a result, is well-suited to modern analytics workloads  for AI and deep learning. 

------------------- Sentence 1 -------------------

The FlashBlade all-flash storage array from Pure  Storage is designed to meet these needs. 


>> Tokens are: 
[FlashBlade, -, flash, storage, array, Pure,  , Storage, designed, meet, needs, .] 

>> PoS Tags are: 
[('FlashBlade', 'PROPN'), ('-', 'PUNCT'), ('flash', 'NOUN'), ('storage', 'NOUN'), ('array', 'NOUN'), ('Pure', 'ADJ'), (' ', 'SPACE'), ('Storage', 'PROPN'), ('designed', 'VERB'), ('meet', 'VERB'), ('needs', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('FlashBlade', 'nmod'), ('-', 'punct'), ('flash', 'compound'), ('storage', 'compound'), ('array', 'nsubjpass'), ('Pure', 'amod'), (' ', 'compound'), ('Storage', 'pobj'), ('designed', 'ROOT'), ('meet', 'xcomp'), ('needs', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[FlashBlade, -], [-, flash], [flash, storage], [storage, array], [array, Pure], [Pure,  ], [ , Storage], [Storage, designed], [designed, meet], [meet, needs], [needs, .]]

>> Trigrams: 
[[FlashBlade, -, flash], [-, flash, storage], [flash, storage, array], [storage, array, Pure], [array, Pure,  ], [Pure,  , Storage], [ , Storage, designed], [Storage, designed, meet], [designed, meet, needs], [meet, needs, .]]

>> Noun Phrases are: 
[The FlashBlade all-flash storage array, Pure  Storage, these needs]

>> Named Entities are: 
[('FlashBlade', 'PRODUCT')] 

------------------- Sentence 2 -------------------

FlashBlade  performance improves linearly with more data.   


>> Tokens are: 
[FlashBlade,  , performance, improves, linearly, data, .,  ] 

>> PoS Tags are: 
[('FlashBlade', 'PROPN'), (' ', 'SPACE'), ('performance', 'NOUN'), ('improves', 'VERB'), ('linearly', 'ADV'), ('data', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('FlashBlade', 'compound'), (' ', 'compound'), ('performance', 'nsubj'), ('improves', 'ROOT'), ('linearly', 'advmod'), ('data', 'pobj'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[FlashBlade,  ], [ , performance], [performance, improves], [improves, linearly], [linearly, data], [data, .], [.,  ]]

>> Trigrams: 
[[FlashBlade,  , performance], [ , performance, improves], [performance, improves, linearly], [improves, linearly, data], [linearly, data, .], [data, .,  ]]

>> Noun Phrases are: 
[FlashBlade  performance, more data]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Whether files are small or large, FlashBlade delivers  true linear scaling of capacity and performance, and as  a result, is well-suited to modern analytics workloads  for AI and deep learning. 


>> Tokens are: 
[files, small, large, ,, FlashBlade, delivers,  , true, linear, scaling, capacity, performance, ,,  , result, ,, -, suited, modern, analytics, workloads,  , AI, deep, learning, .] 

>> PoS Tags are: 
[('files', 'NOUN'), ('small', 'ADJ'), ('large', 'ADJ'), (',', 'PUNCT'), ('FlashBlade', 'PROPN'), ('delivers', 'VERB'), (' ', 'SPACE'), ('true', 'ADJ'), ('linear', 'ADJ'), ('scaling', 'NOUN'), ('capacity', 'NOUN'), ('performance', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('result', 'NOUN'), (',', 'PUNCT'), ('-', 'PUNCT'), ('suited', 'ADJ'), ('modern', 'ADJ'), ('analytics', 'NOUN'), ('workloads', 'VERB'), (' ', 'SPACE'), ('AI', 'PROPN'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('files', 'nsubj'), ('small', 'acomp'), ('large', 'conj'), (',', 'punct'), ('FlashBlade', 'nsubj'), ('delivers', 'ROOT'), (' ', 'dobj'), ('true', 'amod'), ('linear', 'amod'), ('scaling', 'dobj'), ('capacity', 'pobj'), ('performance', 'conj'), (',', 'punct'), (' ', 'pobj'), ('result', 'pobj'), (',', 'punct'), ('-', 'punct'), ('suited', 'acomp'), ('modern', 'amod'), ('analytics', 'pobj'), ('workloads', 'conj'), (' ', 'dobj'), ('AI', 'pobj'), ('deep', 'amod'), ('learning', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[files, small], [small, large], [large, ,], [,, FlashBlade], [FlashBlade, delivers], [delivers,  ], [ , true], [true, linear], [linear, scaling], [scaling, capacity], [capacity, performance], [performance, ,], [,,  ], [ , result], [result, ,], [,, -], [-, suited], [suited, modern], [modern, analytics], [analytics, workloads], [workloads,  ], [ , AI], [AI, deep], [deep, learning], [learning, .]]

>> Trigrams: 
[[files, small, large], [small, large, ,], [large, ,, FlashBlade], [,, FlashBlade, delivers], [FlashBlade, delivers,  ], [delivers,  , true], [ , true, linear], [true, linear, scaling], [linear, scaling, capacity], [scaling, capacity, performance], [capacity, performance, ,], [performance, ,,  ], [,,  , result], [ , result, ,], [result, ,, -], [,, -, suited], [-, suited, modern], [suited, modern, analytics], [modern, analytics, workloads], [analytics, workloads,  ], [workloads,  , AI], [ , AI, deep], [AI, deep, learning], [deep, learning, .]]

>> Noun Phrases are: 
[files, FlashBlade, true linear scaling, capacity, performance, a result, modern analytics, AI, deep learning]

>> Named Entities are: 
[('FlashBlade', 'PRODUCT'), ('AI', 'ORG')] 


================================ Paragraph 84 =================================

“Modern computing frameworks have given rise to  increasingly complex, high-performance analytics and  valuable data,” said Par Botes, VP of Engineering, Pure  Storage. “With FlashBlade, our mission is to make big  data into fast data with an all-flash platform that is  big, fast, and simple to deploy — and one that provides  value across all industries and segments.” 

------------------- Sentence 1 -------------------

“Modern computing frameworks have given rise to  increasingly complex, high-performance analytics and  valuable data,” said Par Botes, VP of Engineering, Pure  Storage. 


>> Tokens are: 
[“, Modern, computing, frameworks, given, rise,  , increasingly, complex, ,, high, -, performance, analytics,  , valuable, data, ,, ”, said, Par, Botes, ,, VP, Engineering, ,, Pure,  , Storage, .] 

>> PoS Tags are: 
[('“', 'PUNCT'), ('Modern', 'ADJ'), ('computing', 'NOUN'), ('frameworks', 'NOUN'), ('given', 'VERB'), ('rise', 'NOUN'), (' ', 'SPACE'), ('increasingly', 'ADV'), ('complex', 'ADJ'), (',', 'PUNCT'), ('high', 'ADJ'), ('-', 'PUNCT'), ('performance', 'NOUN'), ('analytics', 'NOUN'), (' ', 'SPACE'), ('valuable', 'ADJ'), ('data', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('said', 'VERB'), ('Par', 'PROPN'), ('Botes', 'PROPN'), (',', 'PUNCT'), ('VP', 'PROPN'), ('Engineering', 'PROPN'), (',', 'PUNCT'), ('Pure', 'PROPN'), (' ', 'SPACE'), ('Storage', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('“', 'punct'), ('Modern', 'amod'), ('computing', 'compound'), ('frameworks', 'nsubj'), ('given', 'ccomp'), ('rise', 'dobj'), (' ', 'nmod'), ('increasingly', 'advmod'), ('complex', 'amod'), (',', 'punct'), ('high', 'amod'), ('-', 'punct'), ('performance', 'compound'), ('analytics', 'pobj'), (' ', 'nmod'), ('valuable', 'amod'), ('data', 'conj'), (',', 'punct'), ('”', 'punct'), ('said', 'ROOT'), ('Par', 'compound'), ('Botes', 'nsubj'), (',', 'punct'), ('VP', 'appos'), ('Engineering', 'pobj'), (',', 'punct'), ('Pure', 'amod'), (' ', 'compound'), ('Storage', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[“, Modern], [Modern, computing], [computing, frameworks], [frameworks, given], [given, rise], [rise,  ], [ , increasingly], [increasingly, complex], [complex, ,], [,, high], [high, -], [-, performance], [performance, analytics], [analytics,  ], [ , valuable], [valuable, data], [data, ,], [,, ”], [”, said], [said, Par], [Par, Botes], [Botes, ,], [,, VP], [VP, Engineering], [Engineering, ,], [,, Pure], [Pure,  ], [ , Storage], [Storage, .]]

>> Trigrams: 
[[“, Modern, computing], [Modern, computing, frameworks], [computing, frameworks, given], [frameworks, given, rise], [given, rise,  ], [rise,  , increasingly], [ , increasingly, complex], [increasingly, complex, ,], [complex, ,, high], [,, high, -], [high, -, performance], [-, performance, analytics], [performance, analytics,  ], [analytics,  , valuable], [ , valuable, data], [valuable, data, ,], [data, ,, ”], [,, ”, said], [”, said, Par], [said, Par, Botes], [Par, Botes, ,], [Botes, ,, VP], [,, VP, Engineering], [VP, Engineering, ,], [Engineering, ,, Pure], [,, Pure,  ], [Pure,  , Storage], [ , Storage, .]]

>> Noun Phrases are: 
[Modern computing frameworks, rise,  increasingly complex, high-performance analytics,  valuable data, Par Botes, VP, Engineering, Pure  Storage]

>> Named Entities are: 
[('Par Botes', 'ORG')] 

------------------- Sentence 2 -------------------

“With FlashBlade, our mission is to make big  data into fast data with an all-flash platform that is  big, fast, and simple to deploy — and one that provides  value across all industries and segments.” 


>> Tokens are: 
[“, FlashBlade, ,, mission, big,  , data, fast, data, -, flash, platform,  , big, ,, fast, ,, simple, deploy, —, provides,  , value, industries, segments, ., ”] 

>> PoS Tags are: 
[('“', 'PUNCT'), ('FlashBlade', 'PROPN'), (',', 'PUNCT'), ('mission', 'NOUN'), ('big', 'ADJ'), (' ', 'SPACE'), ('data', 'NOUN'), ('fast', 'ADJ'), ('data', 'NOUN'), ('-', 'PUNCT'), ('flash', 'NOUN'), ('platform', 'NOUN'), (' ', 'SPACE'), ('big', 'ADJ'), (',', 'PUNCT'), ('fast', 'ADV'), (',', 'PUNCT'), ('simple', 'ADJ'), ('deploy', 'VERB'), ('—', 'PUNCT'), ('provides', 'VERB'), (' ', 'SPACE'), ('value', 'NOUN'), ('industries', 'NOUN'), ('segments', 'NOUN'), ('.', 'PUNCT'), ('”', 'PUNCT')] 

>> Dependency Tags are: 
[('“', 'punct'), ('FlashBlade', 'pobj'), (',', 'punct'), ('mission', 'nsubj'), ('big', 'amod'), (' ', 'compound'), ('data', 'dobj'), ('fast', 'amod'), ('data', 'pobj'), ('-', 'punct'), ('flash', 'compound'), ('platform', 'pobj'), (' ', 'attr'), ('big', 'acomp'), (',', 'punct'), ('fast', 'conj'), (',', 'punct'), ('simple', 'conj'), ('deploy', 'relcl'), ('—', 'punct'), ('provides', 'relcl'), (' ', 'compound'), ('value', 'dobj'), ('industries', 'pobj'), ('segments', 'conj'), ('.', 'punct'), ('”', 'punct')]

>> Bigrams: 
[[“, FlashBlade], [FlashBlade, ,], [,, mission], [mission, big], [big,  ], [ , data], [data, fast], [fast, data], [data, -], [-, flash], [flash, platform], [platform,  ], [ , big], [big, ,], [,, fast], [fast, ,], [,, simple], [simple, deploy], [deploy, —], [—, provides], [provides,  ], [ , value], [value, industries], [industries, segments], [segments, .], [., ”]]

>> Trigrams: 
[[“, FlashBlade, ,], [FlashBlade, ,, mission], [,, mission, big], [mission, big,  ], [big,  , data], [ , data, fast], [data, fast, data], [fast, data, -], [data, -, flash], [-, flash, platform], [flash, platform,  ], [platform,  , big], [ , big, ,], [big, ,, fast], [,, fast, ,], [fast, ,, simple], [,, simple, deploy], [simple, deploy, —], [deploy, —, provides], [—, provides,  ], [provides,  , value], [ , value, industries], [value, industries, segments], [industries, segments, .], [segments, ., ”]]

>> Noun Phrases are: 
[FlashBlade, our mission, big  data, fast data, an all-flash platform,  value, all industries, segments]

>> Named Entities are: 
[('FlashBlade', 'ORG')] 


================================ Paragraph 85 =================================

As PwC’s Financial Services Technology 2020 and  Beyond: Embracing Disruption report says; “Customer  intelligence will be the most important predictor of  revenue growth and profitability.” Data, machine  learning and AI are the only tools in town that can really  help financial services companies achieve this goal. 

------------------- Sentence 1 -------------------

As PwC’s Financial Services Technology 2020 and  Beyond: Embracing Disruption report says; “Customer  intelligence will be the most important predictor of  revenue growth and profitability.” 


>> Tokens are: 
[PwC, Financial, Services, Technology, 2020,  , :, Embracing, Disruption, report, says, ;, “, Customer,  , intelligence, important, predictor,  , revenue, growth, profitability, ., ”] 

>> PoS Tags are: 
[('PwC', 'PROPN'), ('Financial', 'PROPN'), ('Services', 'PROPN'), ('Technology', 'PROPN'), ('2020', 'NUM'), (' ', 'SPACE'), (':', 'PUNCT'), ('Embracing', 'VERB'), ('Disruption', 'PROPN'), ('report', 'NOUN'), ('says', 'VERB'), (';', 'PUNCT'), ('“', 'PUNCT'), ('Customer', 'NOUN'), (' ', 'SPACE'), ('intelligence', 'NOUN'), ('important', 'ADJ'), ('predictor', 'NOUN'), (' ', 'SPACE'), ('revenue', 'NOUN'), ('growth', 'NOUN'), ('profitability', 'NOUN'), ('.', 'PUNCT'), ('”', 'PUNCT')] 

>> Dependency Tags are: 
[('PwC', 'poss'), ('Financial', 'compound'), ('Services', 'compound'), ('Technology', 'compound'), ('2020', 'pobj'), (' ', 'conj'), (':', 'punct'), ('Embracing', 'compound'), ('Disruption', 'compound'), ('report', 'nsubj'), ('says', 'parataxis'), (';', 'punct'), ('“', 'punct'), ('Customer', 'nmod'), (' ', 'nummod'), ('intelligence', 'nsubj'), ('important', 'amod'), ('predictor', 'attr'), (' ', 'pobj'), ('revenue', 'compound'), ('growth', 'pobj'), ('profitability', 'conj'), ('.', 'punct'), ('”', 'punct')]

>> Bigrams: 
[[PwC, Financial], [Financial, Services], [Services, Technology], [Technology, 2020], [2020,  ], [ , :], [:, Embracing], [Embracing, Disruption], [Disruption, report], [report, says], [says, ;], [;, “], [“, Customer], [Customer,  ], [ , intelligence], [intelligence, important], [important, predictor], [predictor,  ], [ , revenue], [revenue, growth], [growth, profitability], [profitability, .], [., ”]]

>> Trigrams: 
[[PwC, Financial, Services], [Financial, Services, Technology], [Services, Technology, 2020], [Technology, 2020,  ], [2020,  , :], [ , :, Embracing], [:, Embracing, Disruption], [Embracing, Disruption, report], [Disruption, report, says], [report, says, ;], [says, ;, “], [;, “, Customer], [“, Customer,  ], [Customer,  , intelligence], [ , intelligence, important], [intelligence, important, predictor], [important, predictor,  ], [predictor,  , revenue], [ , revenue, growth], [revenue, growth, profitability], [growth, profitability, .], [profitability, ., ”]]

>> Noun Phrases are: 
[Embracing Disruption report, Customer  intelligence, the most important predictor, revenue growth, profitability]

>> Named Entities are: 
[('PwC’s Financial Services Technology 2020', 'ORG')] 

------------------- Sentence 2 -------------------

Data, machine  learning and AI are the only tools in town that can really  help financial services companies achieve this goal. 


>> Tokens are: 
[Data, ,, machine,  , learning, AI, tools, town,  , help, financial, services, companies, achieve, goal, .] 

>> PoS Tags are: 
[('Data', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), (' ', 'SPACE'), ('learning', 'NOUN'), ('AI', 'PROPN'), ('tools', 'NOUN'), ('town', 'NOUN'), (' ', 'SPACE'), ('help', 'VERB'), ('financial', 'ADJ'), ('services', 'NOUN'), ('companies', 'NOUN'), ('achieve', 'VERB'), ('goal', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Data', 'nsubj'), (',', 'punct'), ('machine', 'compound'), (' ', 'punct'), ('learning', 'appos'), ('AI', 'conj'), ('tools', 'attr'), ('town', 'pobj'), (' ', 'nsubj'), ('help', 'relcl'), ('financial', 'amod'), ('services', 'compound'), ('companies', 'nsubj'), ('achieve', 'ccomp'), ('goal', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Data, ,], [,, machine], [machine,  ], [ , learning], [learning, AI], [AI, tools], [tools, town], [town,  ], [ , help], [help, financial], [financial, services], [services, companies], [companies, achieve], [achieve, goal], [goal, .]]

>> Trigrams: 
[[Data, ,, machine], [,, machine,  ], [machine,  , learning], [ , learning, AI], [learning, AI, tools], [AI, tools, town], [tools, town,  ], [town,  , help], [ , help, financial], [help, financial, services], [financial, services, companies], [services, companies, achieve], [companies, achieve, goal], [achieve, goal, .]]

>> Noun Phrases are: 
[Data, machine  learning, AI, the only tools, town, financial services companies, this goal]

>> Named Entities are: 
[('AI', 'ORG')] 


================================ Paragraph 86 =================================

Data is already growing at amazing rates in the financial  services industry, given the ubiquity of digital devices  and wide variety of sources of customer and client data,  whether it’s banking, insurance or commercial trading.  Now the industry needs to harness that data and gain  intelligence from it. New techniques in data processing  and analytics including AI, machine and deep learning  can allow specially designed applications to not only  analyze this data but learn from the analysis and make  predictions. 

------------------- Sentence 1 -------------------

Data is already growing at amazing rates in the financial  services industry, given the ubiquity of digital devices  and wide variety of sources of customer and client data,  whether it’s banking, insurance or commercial trading. 


>> Tokens are: 
[Data, growing, amazing, rates, financial,  , services, industry, ,, given, ubiquity, digital, devices,  , wide, variety, sources, customer, client, data, ,,  , banking, ,, insurance, commercial, trading, .] 

>> PoS Tags are: 
[('Data', 'PROPN'), ('growing', 'VERB'), ('amazing', 'ADJ'), ('rates', 'NOUN'), ('financial', 'ADJ'), (' ', 'SPACE'), ('services', 'NOUN'), ('industry', 'NOUN'), (',', 'PUNCT'), ('given', 'VERB'), ('ubiquity', 'NOUN'), ('digital', 'ADJ'), ('devices', 'NOUN'), (' ', 'SPACE'), ('wide', 'ADJ'), ('variety', 'NOUN'), ('sources', 'NOUN'), ('customer', 'NOUN'), ('client', 'NOUN'), ('data', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('banking', 'NOUN'), (',', 'PUNCT'), ('insurance', 'NOUN'), ('commercial', 'ADJ'), ('trading', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Data', 'nsubj'), ('growing', 'ROOT'), ('amazing', 'amod'), ('rates', 'pobj'), ('financial', 'amod'), (' ', 'compound'), ('services', 'compound'), ('industry', 'pobj'), (',', 'punct'), ('given', 'prep'), ('ubiquity', 'pobj'), ('digital', 'amod'), ('devices', 'pobj'), (' ', 'appos'), ('wide', 'amod'), ('variety', 'conj'), ('sources', 'pobj'), ('customer', 'nmod'), ('client', 'conj'), ('data', 'pobj'), (',', 'punct'), (' ', 'dep'), ('banking', 'attr'), (',', 'punct'), ('insurance', 'conj'), ('commercial', 'amod'), ('trading', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Data, growing], [growing, amazing], [amazing, rates], [rates, financial], [financial,  ], [ , services], [services, industry], [industry, ,], [,, given], [given, ubiquity], [ubiquity, digital], [digital, devices], [devices,  ], [ , wide], [wide, variety], [variety, sources], [sources, customer], [customer, client], [client, data], [data, ,], [,,  ], [ , banking], [banking, ,], [,, insurance], [insurance, commercial], [commercial, trading], [trading, .]]

>> Trigrams: 
[[Data, growing, amazing], [growing, amazing, rates], [amazing, rates, financial], [rates, financial,  ], [financial,  , services], [ , services, industry], [services, industry, ,], [industry, ,, given], [,, given, ubiquity], [given, ubiquity, digital], [ubiquity, digital, devices], [digital, devices,  ], [devices,  , wide], [ , wide, variety], [wide, variety, sources], [variety, sources, customer], [sources, customer, client], [customer, client, data], [client, data, ,], [data, ,,  ], [,,  , banking], [ , banking, ,], [banking, ,, insurance], [,, insurance, commercial], [insurance, commercial, trading], [commercial, trading, .]]

>> Noun Phrases are: 
[Data, amazing rates, the financial  services industry, the ubiquity, digital devices, wide variety, sources, customer and client data, it, banking, insurance, commercial trading]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Now the industry needs to harness that data and gain  intelligence from it. 


>> Tokens are: 
[industry, needs, harness, data, gain,  , intelligence, .] 

>> PoS Tags are: 
[('industry', 'NOUN'), ('needs', 'VERB'), ('harness', 'VERB'), ('data', 'NOUN'), ('gain', 'VERB'), (' ', 'SPACE'), ('intelligence', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('industry', 'nsubj'), ('needs', 'ROOT'), ('harness', 'xcomp'), ('data', 'dobj'), ('gain', 'conj'), (' ', 'nmod'), ('intelligence', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[industry, needs], [needs, harness], [harness, data], [data, gain], [gain,  ], [ , intelligence], [intelligence, .]]

>> Trigrams: 
[[industry, needs, harness], [needs, harness, data], [harness, data, gain], [data, gain,  ], [gain,  , intelligence], [ , intelligence, .]]

>> Noun Phrases are: 
[the industry, that data,  intelligence, it]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

New techniques in data processing  and analytics including AI, machine and deep learning  can allow specially designed applications to not only  analyze this data but learn from the analysis and make  predictions. 


>> Tokens are: 
[New, techniques, data, processing,  , analytics, including, AI, ,, machine, deep, learning,  , allow, specially, designed, applications,  , analyze, data, learn, analysis,  , predictions, .] 

>> PoS Tags are: 
[('New', 'ADJ'), ('techniques', 'NOUN'), ('data', 'NOUN'), ('processing', 'NOUN'), (' ', 'SPACE'), ('analytics', 'NOUN'), ('including', 'VERB'), ('AI', 'PROPN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('deep', 'ADJ'), ('learning', 'NOUN'), (' ', 'SPACE'), ('allow', 'VERB'), ('specially', 'ADV'), ('designed', 'VERB'), ('applications', 'NOUN'), (' ', 'SPACE'), ('analyze', 'VERB'), ('data', 'NOUN'), ('learn', 'VERB'), ('analysis', 'NOUN'), (' ', 'SPACE'), ('predictions', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('New', 'amod'), ('techniques', 'nsubj'), ('data', 'compound'), ('processing', 'compound'), (' ', 'pobj'), ('analytics', 'conj'), ('including', 'prep'), ('AI', 'pobj'), (',', 'punct'), ('machine', 'conj'), ('deep', 'amod'), ('learning', 'conj'), (' ', 'conj'), ('allow', 'ROOT'), ('specially', 'advmod'), ('designed', 'amod'), ('applications', 'dobj'), (' ', 'nsubj'), ('analyze', 'ccomp'), ('data', 'dobj'), ('learn', 'conj'), ('analysis', 'pobj'), (' ', 'compound'), ('predictions', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[New, techniques], [techniques, data], [data, processing], [processing,  ], [ , analytics], [analytics, including], [including, AI], [AI, ,], [,, machine], [machine, deep], [deep, learning], [learning,  ], [ , allow], [allow, specially], [specially, designed], [designed, applications], [applications,  ], [ , analyze], [analyze, data], [data, learn], [learn, analysis], [analysis,  ], [ , predictions], [predictions, .]]

>> Trigrams: 
[[New, techniques, data], [techniques, data, processing], [data, processing,  ], [processing,  , analytics], [ , analytics, including], [analytics, including, AI], [including, AI, ,], [AI, ,, machine], [,, machine, deep], [machine, deep, learning], [deep, learning,  ], [learning,  , allow], [ , allow, specially], [allow, specially, designed], [specially, designed, applications], [designed, applications,  ], [applications,  , analyze], [ , analyze, data], [analyze, data, learn], [data, learn, analysis], [learn, analysis,  ], [analysis,  , predictions], [ , predictions, .]]

>> Noun Phrases are: 
[New techniques, analytics, AI, machine, deep learning, specially designed applications, this data, the analysis,  predictions]

>> Named Entities are: 
[('AI', 'ORG')] 


================================ Paragraph 87 =================================

Computer systems consisting of multi-core CPUs or  GPUs using parallel processing and extremely fast  networks are required to process the data. However,  legacy storage solutions are based on architectures  that are decades old, un-scalable and not well suited for 

------------------- Sentence 1 -------------------

Computer systems consisting of multi-core CPUs or  GPUs using parallel processing and extremely fast  networks are required to process the data. 


>> Tokens are: 
[Computer, systems, consisting, multi, -, core, CPUs,  , GPUs, parallel, processing, extremely, fast,  , networks, required, process, data, .] 

>> PoS Tags are: 
[('Computer', 'NOUN'), ('systems', 'NOUN'), ('consisting', 'VERB'), ('multi', 'ADJ'), ('-', 'ADJ'), ('core', 'ADJ'), ('CPUs', 'NOUN'), (' ', 'SPACE'), ('GPUs', 'NOUN'), ('parallel', 'ADJ'), ('processing', 'NOUN'), ('extremely', 'ADV'), ('fast', 'ADJ'), (' ', 'SPACE'), ('networks', 'NOUN'), ('required', 'VERB'), ('process', 'VERB'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Computer', 'compound'), ('systems', 'nsubjpass'), ('consisting', 'acl'), ('multi', 'amod'), ('-', 'amod'), ('core', 'amod'), ('CPUs', 'pobj'), (' ', 'compound'), ('GPUs', 'conj'), ('parallel', 'amod'), ('processing', 'dobj'), ('extremely', 'advmod'), ('fast', 'amod'), (' ', 'compound'), ('networks', 'conj'), ('required', 'ROOT'), ('process', 'xcomp'), ('data', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Computer, systems], [systems, consisting], [consisting, multi], [multi, -], [-, core], [core, CPUs], [CPUs,  ], [ , GPUs], [GPUs, parallel], [parallel, processing], [processing, extremely], [extremely, fast], [fast,  ], [ , networks], [networks, required], [required, process], [process, data], [data, .]]

>> Trigrams: 
[[Computer, systems, consisting], [systems, consisting, multi], [consisting, multi, -], [multi, -, core], [-, core, CPUs], [core, CPUs,  ], [CPUs,  , GPUs], [ , GPUs, parallel], [GPUs, parallel, processing], [parallel, processing, extremely], [processing, extremely, fast], [extremely, fast,  ], [fast,  , networks], [ , networks, required], [networks, required, process], [required, process, data], [process, data, .]]

>> Noun Phrases are: 
[Computer systems, multi-core CPUs,  GPUs, parallel processing, extremely fast  networks, the data]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

However,  legacy storage solutions are based on architectures  that are decades old, un-scalable and not well suited for 


>> Tokens are: 
[,,  , legacy, storage, solutions, based, architectures,  , decades, old, ,, un, -, scalable, suited] 

>> PoS Tags are: 
[(',', 'PUNCT'), (' ', 'SPACE'), ('legacy', 'NOUN'), ('storage', 'NOUN'), ('solutions', 'NOUN'), ('based', 'VERB'), ('architectures', 'NOUN'), (' ', 'SPACE'), ('decades', 'NOUN'), ('old', 'ADJ'), (',', 'PUNCT'), ('un', 'ADJ'), ('-', 'ADJ'), ('scalable', 'ADJ'), ('suited', 'ADJ')] 

>> Dependency Tags are: 
[(',', 'punct'), (' ', 'nmod'), ('legacy', 'compound'), ('storage', 'compound'), ('solutions', 'nsubjpass'), ('based', 'ROOT'), ('architectures', 'pobj'), (' ', 'appos'), ('decades', 'npadvmod'), ('old', 'acomp'), (',', 'punct'), ('un', 'intj'), ('-', 'amod'), ('scalable', 'amod'), ('suited', 'conj')]

>> Bigrams: 
[[,,  ], [ , legacy], [legacy, storage], [storage, solutions], [solutions, based], [based, architectures], [architectures,  ], [ , decades], [decades, old], [old, ,], [,, un], [un, -], [-, scalable], [scalable, suited]]

>> Trigrams: 
[[,,  , legacy], [ , legacy, storage], [legacy, storage, solutions], [storage, solutions, based], [solutions, based, architectures], [based, architectures,  ], [architectures,  , decades], [ , decades, old], [decades, old, ,], [old, ,, un], [,, un, -], [un, -, scalable], [-, scalable, suited]]

>> Noun Phrases are: 
[ legacy storage solutions, architectures]

>> Named Entities are: 
[('decades', 'DATE')] 


================================ Paragraph 88 =================================

DATANAMI: ACCELER ATE DEEP LEARNING WITH A MODERN DATA PLATFORM 

------------------- Sentence 1 -------------------

DATANAMI: ACCELER ATE DEEP LEARNING WITH A MODERN DATA PLATFORM 


>> Tokens are: 
[DATANAMI, :, ACCELER, ATE, DEEP, LEARNING, MODERN, DATA, PLATFORM] 

>> PoS Tags are: 
[('DATANAMI', 'PROPN'), (':', 'PUNCT'), ('ACCELER', 'ADJ'), ('ATE', 'VERB'), ('DEEP', 'ADJ'), ('LEARNING', 'NOUN'), ('MODERN', 'PROPN'), ('DATA', 'PROPN'), ('PLATFORM', 'NOUN')] 

>> Dependency Tags are: 
[('DATANAMI', 'dep'), (':', 'punct'), ('ACCELER', 'nsubj'), ('ATE', 'ROOT'), ('DEEP', 'amod'), ('LEARNING', 'dobj'), ('MODERN', 'compound'), ('DATA', 'compound'), ('PLATFORM', 'pobj')]

>> Bigrams: 
[[DATANAMI, :], [:, ACCELER], [ACCELER, ATE], [ATE, DEEP], [DEEP, LEARNING], [LEARNING, MODERN], [MODERN, DATA], [DATA, PLATFORM]]

>> Trigrams: 
[[DATANAMI, :, ACCELER], [:, ACCELER, ATE], [ACCELER, ATE, DEEP], [ATE, DEEP, LEARNING], [DEEP, LEARNING, MODERN], [LEARNING, MODERN, DATA], [MODERN, DATA, PLATFORM]]

>> Noun Phrases are: 
[DEEP LEARNING, A MODERN DATA PLATFORM]

>> Named Entities are: 
[] 


================================ Paragraph 89 =================================

10TABOR CUSTOM PUBLISHING 

------------------- Sentence 1 -------------------

10TABOR CUSTOM PUBLISHING 


>> Tokens are: 
[10TABOR, CUSTOM, PUBLISHING] 

>> PoS Tags are: 
[('10TABOR', 'NUM'), ('CUSTOM', 'NOUN'), ('PUBLISHING', 'NOUN')] 

>> Dependency Tags are: 
[('10TABOR', 'nummod'), ('CUSTOM', 'compound'), ('PUBLISHING', 'ROOT')]

>> Bigrams: 
[[10TABOR, CUSTOM], [CUSTOM, PUBLISHING]]

>> Trigrams: 
[[10TABOR, CUSTOM, PUBLISHING]]

>> Noun Phrases are: 
[10TABOR CUSTOM PUBLISHING]

>> Named Entities are: 
[] 


================================ Paragraph 90 =================================

ABOUT PURE STORAGE  its customer-friendly business model, drives business  and IT transformation with solutions that are effortless,  efficient and evergreen. With Pure’s industry leading  Satmetrix-certified NPS score of 83.5, Pure customers  are some of the happiest in the world, and include  organizations of all sizes, across an ever-expanding  range of industries. 

------------------- Sentence 1 -------------------

ABOUT PURE STORAGE  its customer-friendly business model, drives business  and IT transformation with solutions that are effortless,  efficient and evergreen. 


>> Tokens are: 
[PURE, STORAGE,  , customer, -, friendly, business, model, ,, drives, business,  , transformation, solutions, effortless, ,,  , efficient, evergreen, .] 

>> PoS Tags are: 
[('PURE', 'PROPN'), ('STORAGE', 'PROPN'), (' ', 'SPACE'), ('customer', 'NOUN'), ('-', 'PUNCT'), ('friendly', 'ADJ'), ('business', 'NOUN'), ('model', 'NOUN'), (',', 'PUNCT'), ('drives', 'VERB'), ('business', 'NOUN'), (' ', 'SPACE'), ('transformation', 'NOUN'), ('solutions', 'NOUN'), ('effortless', 'ADJ'), (',', 'PUNCT'), (' ', 'SPACE'), ('efficient', 'ADJ'), ('evergreen', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('PURE', 'compound'), ('STORAGE', 'pobj'), (' ', 'ROOT'), ('customer', 'npadvmod'), ('-', 'punct'), ('friendly', 'amod'), ('business', 'compound'), ('model', 'dobj'), (',', 'punct'), ('drives', 'conj'), ('business', 'compound'), (' ', 'dobj'), ('transformation', 'conj'), ('solutions', 'pobj'), ('effortless', 'acomp'), (',', 'punct'), (' ', 'conj'), ('efficient', 'amod'), ('evergreen', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[PURE, STORAGE], [STORAGE,  ], [ , customer], [customer, -], [-, friendly], [friendly, business], [business, model], [model, ,], [,, drives], [drives, business], [business,  ], [ , transformation], [transformation, solutions], [solutions, effortless], [effortless, ,], [,,  ], [ , efficient], [efficient, evergreen], [evergreen, .]]

>> Trigrams: 
[[PURE, STORAGE,  ], [STORAGE,  , customer], [ , customer, -], [customer, -, friendly], [-, friendly, business], [friendly, business, model], [business, model, ,], [model, ,, drives], [,, drives, business], [drives, business,  ], [business,  , transformation], [ , transformation, solutions], [transformation, solutions, effortless], [solutions, effortless, ,], [effortless, ,,  ], [,,  , efficient], [ , efficient, evergreen], [efficient, evergreen, .]]

>> Noun Phrases are: 
[PURE STORAGE, its customer-friendly business model, IT transformation, solutions]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

With Pure’s industry leading   


>> Tokens are: 
[Pure, industry, leading,  ] 

>> PoS Tags are: 
[('Pure', 'PROPN'), ('industry', 'NOUN'), ('leading', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Pure', 'poss'), ('industry', 'nsubj'), ('leading', 'pcomp'), (' ', 'pobj')]

>> Bigrams: 
[[Pure, industry], [industry, leading], [leading,  ]]

>> Trigrams: 
[[Pure, industry, leading], [industry, leading,  ]]

>> Noun Phrases are: 
[Pure’s industry]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Satmetrix-certified NPS score of 83.5, Pure customers  are some of the happiest in the world, and include  organizations of all sizes, across an ever-expanding  range of industries. 


>> Tokens are: 
[Satmetrix, -, certified, NPS, score, 83.5, ,, Pure, customers,  , happiest, world, ,, include,  , organizations, sizes, ,, -, expanding,  , range, industries, .] 

>> PoS Tags are: 
[('Satmetrix', 'PROPN'), ('-', 'PUNCT'), ('certified', 'VERB'), ('NPS', 'PROPN'), ('score', 'NOUN'), ('83.5', 'NUM'), (',', 'PUNCT'), ('Pure', 'ADJ'), ('customers', 'NOUN'), (' ', 'SPACE'), ('happiest', 'ADJ'), ('world', 'NOUN'), (',', 'PUNCT'), ('include', 'VERB'), (' ', 'SPACE'), ('organizations', 'NOUN'), ('sizes', 'NOUN'), (',', 'PUNCT'), ('-', 'PUNCT'), ('expanding', 'VERB'), (' ', 'SPACE'), ('range', 'NOUN'), ('industries', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Satmetrix', 'npadvmod'), ('-', 'punct'), ('certified', 'amod'), ('NPS', 'compound'), ('score', 'nsubj'), ('83.5', 'pobj'), (',', 'punct'), ('Pure', 'amod'), ('customers', 'nsubj'), (' ', 'appos'), ('happiest', 'pobj'), ('world', 'pobj'), (',', 'punct'), ('include', 'conj'), (' ', 'compound'), ('organizations', 'dobj'), ('sizes', 'pobj'), (',', 'punct'), ('-', 'punct'), ('expanding', 'amod'), (' ', 'dobj'), ('range', 'pobj'), ('industries', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Satmetrix, -], [-, certified], [certified, NPS], [NPS, score], [score, 83.5], [83.5, ,], [,, Pure], [Pure, customers], [customers,  ], [ , happiest], [happiest, world], [world, ,], [,, include], [include,  ], [ , organizations], [organizations, sizes], [sizes, ,], [,, -], [-, expanding], [expanding,  ], [ , range], [range, industries], [industries, .]]

>> Trigrams: 
[[Satmetrix, -, certified], [-, certified, NPS], [certified, NPS, score], [NPS, score, 83.5], [score, 83.5, ,], [83.5, ,, Pure], [,, Pure, customers], [Pure, customers,  ], [customers,  , happiest], [ , happiest, world], [happiest, world, ,], [world, ,, include], [,, include,  ], [include,  , organizations], [ , organizations, sizes], [organizations, sizes, ,], [sizes, ,, -], [,, -, expanding], [-, expanding,  ], [expanding,  , range], [ , range, industries], [range, industries, .]]

>> Noun Phrases are: 
[Satmetrix-certified NPS score, Pure customers, the world,  organizations, all sizes, an ever-expanding  range, industries]

>> Named Entities are: 
[('Satmetrix', 'ORG'), ('NPS', 'ORG'), ('83.5', 'CARDINAL')] 


================================ Paragraph 91 =================================

Pure Storageiii (NYSE:PSTG) helps companies push the  boundaries of what’s possible. Pure’s end-to-end data  platform - including FlashArray, FlashBlade and our  converged offering with Cisco, FlashStack – is powered  by innovative software that’s cloud-connected for  management from anywhere on a mobile device and  supported by the Evergreen business model. The  company’s all-flash based technology, combined with  

------------------- Sentence 1 -------------------

Pure Storageiii (NYSE:PSTG) helps companies push the  boundaries of what’s possible. 


>> Tokens are: 
[Pure, Storageiii, (, NYSE, :, PSTG, ), helps, companies, push,  , boundaries, possible, .] 

>> PoS Tags are: 
[('Pure', 'ADJ'), ('Storageiii', 'PROPN'), ('(', 'PUNCT'), ('NYSE', 'PROPN'), (':', 'PUNCT'), ('PSTG', 'PROPN'), (')', 'PUNCT'), ('helps', 'VERB'), ('companies', 'NOUN'), ('push', 'VERB'), (' ', 'SPACE'), ('boundaries', 'NOUN'), ('possible', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Pure', 'amod'), ('Storageiii', 'nsubj'), ('(', 'punct'), ('NYSE', 'appos'), (':', 'punct'), ('PSTG', 'appos'), (')', 'punct'), ('helps', 'ROOT'), ('companies', 'nsubj'), ('push', 'ccomp'), (' ', 'compound'), ('boundaries', 'dobj'), ('possible', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[Pure, Storageiii], [Storageiii, (], [(, NYSE], [NYSE, :], [:, PSTG], [PSTG, )], [), helps], [helps, companies], [companies, push], [push,  ], [ , boundaries], [boundaries, possible], [possible, .]]

>> Trigrams: 
[[Pure, Storageiii, (], [Storageiii, (, NYSE], [(, NYSE, :], [NYSE, :, PSTG], [:, PSTG, )], [PSTG, ), helps], [), helps, companies], [helps, companies, push], [companies, push,  ], [push,  , boundaries], [ , boundaries, possible], [boundaries, possible, .]]

>> Noun Phrases are: 
[Pure Storageiii, (NYSE, PSTG, companies, the  boundaries, what]

>> Named Entities are: 
[('Pure Storageiii', 'PERSON'), ('NYSE', 'ORG')] 

------------------- Sentence 2 -------------------

Pure’s end-to-end data  platform - including FlashArray, FlashBlade and our  converged offering with Cisco, FlashStack – is powered  by innovative software that’s cloud-connected for  management from anywhere on a mobile device and  supported by the Evergreen business model. 


>> Tokens are: 
[Pure, end, -, -, end, data,  , platform, -, including, FlashArray, ,, FlashBlade,  , converged, offering, Cisco, ,, FlashStack, –, powered,  , innovative, software, cloud, -, connected,  , management, mobile, device,  , supported, Evergreen, business, model, .] 

>> PoS Tags are: 
[('Pure', 'ADJ'), ('end', 'NOUN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('end', 'NOUN'), ('data', 'NOUN'), (' ', 'SPACE'), ('platform', 'NOUN'), ('-', 'PUNCT'), ('including', 'VERB'), ('FlashArray', 'PROPN'), (',', 'PUNCT'), ('FlashBlade', 'PROPN'), (' ', 'SPACE'), ('converged', 'ADJ'), ('offering', 'NOUN'), ('Cisco', 'PROPN'), (',', 'PUNCT'), ('FlashStack', 'PROPN'), ('–', 'PUNCT'), ('powered', 'VERB'), (' ', 'SPACE'), ('innovative', 'ADJ'), ('software', 'NOUN'), ('cloud', 'ADV'), ('-', 'PUNCT'), ('connected', 'VERB'), (' ', 'SPACE'), ('management', 'NOUN'), ('mobile', 'ADJ'), ('device', 'NOUN'), (' ', 'SPACE'), ('supported', 'VERB'), ('Evergreen', 'PROPN'), ('business', 'NOUN'), ('model', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Pure', 'amod'), ('end', 'nmod'), ('-', 'punct'), ('-', 'punct'), ('end', 'pobj'), ('data', 'nmod'), (' ', 'prep'), ('platform', 'nsubjpass'), ('-', 'punct'), ('including', 'prep'), ('FlashArray', 'pobj'), (',', 'punct'), ('FlashBlade', 'conj'), (' ', 'nmod'), ('converged', 'amod'), ('offering', 'conj'), ('Cisco', 'pobj'), (',', 'punct'), ('FlashStack', 'appos'), ('–', 'punct'), ('powered', 'ROOT'), (' ', 'npadvmod'), ('innovative', 'amod'), ('software', 'pobj'), ('cloud', 'npadvmod'), ('-', 'punct'), ('connected', 'acomp'), (' ', 'pobj'), ('management', 'appos'), ('mobile', 'amod'), ('device', 'pobj'), (' ', 'conj'), ('supported', 'acl'), ('Evergreen', 'compound'), ('business', 'compound'), ('model', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Pure, end], [end, -], [-, -], [-, end], [end, data], [data,  ], [ , platform], [platform, -], [-, including], [including, FlashArray], [FlashArray, ,], [,, FlashBlade], [FlashBlade,  ], [ , converged], [converged, offering], [offering, Cisco], [Cisco, ,], [,, FlashStack], [FlashStack, –], [–, powered], [powered,  ], [ , innovative], [innovative, software], [software, cloud], [cloud, -], [-, connected], [connected,  ], [ , management], [management, mobile], [mobile, device], [device,  ], [ , supported], [supported, Evergreen], [Evergreen, business], [business, model], [model, .]]

>> Trigrams: 
[[Pure, end, -], [end, -, -], [-, -, end], [-, end, data], [end, data,  ], [data,  , platform], [ , platform, -], [platform, -, including], [-, including, FlashArray], [including, FlashArray, ,], [FlashArray, ,, FlashBlade], [,, FlashBlade,  ], [FlashBlade,  , converged], [ , converged, offering], [converged, offering, Cisco], [offering, Cisco, ,], [Cisco, ,, FlashStack], [,, FlashStack, –], [FlashStack, –, powered], [–, powered,  ], [powered,  , innovative], [ , innovative, software], [innovative, software, cloud], [software, cloud, -], [cloud, -, connected], [-, connected,  ], [connected,  , management], [ , management, mobile], [management, mobile, device], [mobile, device,  ], [device,  , supported], [ , supported, Evergreen], [supported, Evergreen, business], [Evergreen, business, model], [business, model, .]]

>> Noun Phrases are: 
[end, FlashArray, FlashBlade, our  converged offering, Cisco, FlashStack, innovative software, management, a mobile device, the Evergreen business model]

>> Named Entities are: 
[('FlashArray', 'ORG'), ('FlashBlade', 'PRODUCT'), ('Cisco', 'GPE'), ('Evergreen', 'ORG')] 

------------------- Sentence 3 -------------------

The  company’s all-flash based technology, combined with   


>> Tokens are: 
[ , company, -, flash, based, technology, ,, combined,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('company', 'NOUN'), ('-', 'PUNCT'), ('flash', 'NOUN'), ('based', 'VERB'), ('technology', 'NOUN'), (',', 'PUNCT'), ('combined', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('company', 'poss'), ('-', 'punct'), ('flash', 'nmod'), ('based', 'amod'), ('technology', 'ROOT'), (',', 'punct'), ('combined', 'acl'), (' ', 'pobj')]

>> Bigrams: 
[[ , company], [company, -], [-, flash], [flash, based], [based, technology], [technology, ,], [,, combined], [combined,  ]]

>> Trigrams: 
[[ , company, -], [company, -, flash], [-, flash, based], [flash, based, technology], [based, technology, ,], [technology, ,, combined], [,, combined,  ]]

>> Noun Phrases are: 
[The  company’s all-flash based technology]

>> Named Entities are: 
[] 


================================ Paragraph 92 =================================

i NVIDIA and SAP Partner to Create a New Wave  of AI Business Applications, https://blogs.nvidia.com/ blog/2017/05/10/nvidia-sap-partner/. ii AI: The New Electricity, Andrew Ng, Spark 2016 Summit,  https://www.youtube.com/watch?v=4eJhcxfYR4I. iii Pure Storage, FlashBlade and the “P” logo are  trademarks or registered trademarks of Pure Storage in the U.S.  and other countries.  All other trademarks are the property of  their respective owners.

------------------- Sentence 1 -------------------

i NVIDIA and SAP Partner to Create a New Wave  of AI Business Applications, https://blogs.nvidia.com/ blog/2017/05/10/nvidia-sap-partner/. ii AI: The New Electricity, Andrew Ng, Spark 2016 Summit,  https://www.youtube.com/watch?v=4eJhcxfYR4I. iii Pure Storage, FlashBlade and the “P” logo are  trademarks or registered trademarks of Pure Storage in the U.S.  and other countries. 


>> Tokens are: 
[NVIDIA, SAP, Partner, Create, New, Wave,  , AI, Business, Applications, ,, https://blogs.nvidia.com/, blog/2017/05/10, /, nvidia, -, sap, -, partner/., ii, AI, :, New, Electricity, ,, Andrew, Ng, ,, Spark, 2016, Summit, ,,  , https://www.youtube.com/watch?v=4eJhcxfYR4I., iii, Pure, Storage, ,, FlashBlade, “, P, ”, logo,  , trademarks, registered, trademarks, Pure, Storage, U.S.,  , countries, .] 

>> PoS Tags are: 
[('NVIDIA', 'PROPN'), ('SAP', 'PROPN'), ('Partner', 'PROPN'), ('Create', 'VERB'), ('New', 'PROPN'), ('Wave', 'PROPN'), (' ', 'SPACE'), ('AI', 'PROPN'), ('Business', 'PROPN'), ('Applications', 'PROPN'), (',', 'PUNCT'), ('https://blogs.nvidia.com/', 'NOUN'), ('blog/2017/05/10', 'NOUN'), ('/', 'SYM'), ('nvidia', 'NOUN'), ('-', 'PUNCT'), ('sap', 'NOUN'), ('-', 'PUNCT'), ('partner/.', 'PROPN'), ('ii', 'NUM'), ('AI', 'PROPN'), (':', 'PUNCT'), ('New', 'PROPN'), ('Electricity', 'PROPN'), (',', 'PUNCT'), ('Andrew', 'PROPN'), ('Ng', 'PROPN'), (',', 'PUNCT'), ('Spark', 'PROPN'), ('2016', 'NUM'), ('Summit', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE'), ('https://www.youtube.com/watch?v=4eJhcxfYR4I.', 'PROPN'), ('iii', 'DET'), ('Pure', 'PROPN'), ('Storage', 'PROPN'), (',', 'PUNCT'), ('FlashBlade', 'PROPN'), ('“', 'PUNCT'), ('P', 'NOUN'), ('”', 'PUNCT'), ('logo', 'NOUN'), (' ', 'SPACE'), ('trademarks', 'NOUN'), ('registered', 'VERB'), ('trademarks', 'NOUN'), ('Pure', 'PROPN'), ('Storage', 'PROPN'), ('U.S.', 'PROPN'), (' ', 'SPACE'), ('countries', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('NVIDIA', 'appos'), ('SAP', 'compound'), ('Partner', 'conj'), ('Create', 'advcl'), ('New', 'compound'), ('Wave', 'dobj'), (' ', 'nummod'), ('AI', 'compound'), ('Business', 'compound'), ('Applications', 'pobj'), (',', 'punct'), ('https://blogs.nvidia.com/', 'nmod'), ('blog/2017/05/10', 'nmod'), ('/', 'punct'), ('nvidia', 'compound'), ('-', 'punct'), ('sap', 'nmod'), ('-', 'punct'), ('partner/.', 'compound'), ('ii', 'compound'), ('AI', 'appos'), (':', 'punct'), ('New', 'compound'), ('Electricity', 'appos'), (',', 'punct'), ('Andrew', 'compound'), ('Ng', 'conj'), (',', 'punct'), ('Spark', 'compound'), ('2016', 'nummod'), ('Summit', 'appos'), (',', 'punct'), (' ', 'appos'), ('https://www.youtube.com/watch?v=4eJhcxfYR4I.', 'nmod'), ('iii', 'compound'), ('Pure', 'compound'), ('Storage', 'appos'), (',', 'punct'), ('FlashBlade', 'conj'), ('“', 'punct'), ('P', 'nmod'), ('”', 'punct'), ('logo', 'conj'), (' ', 'dep'), ('trademarks', 'attr'), ('registered', 'amod'), ('trademarks', 'conj'), ('Pure', 'compound'), ('Storage', 'pobj'), ('U.S.', 'compound'), (' ', 'pobj'), ('countries', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[NVIDIA, SAP], [SAP, Partner], [Partner, Create], [Create, New], [New, Wave], [Wave,  ], [ , AI], [AI, Business], [Business, Applications], [Applications, ,], [,, https://blogs.nvidia.com/], [https://blogs.nvidia.com/, blog/2017/05/10], [blog/2017/05/10, /], [/, nvidia], [nvidia, -], [-, sap], [sap, -], [-, partner/.], [partner/., ii], [ii, AI], [AI, :], [:, New], [New, Electricity], [Electricity, ,], [,, Andrew], [Andrew, Ng], [Ng, ,], [,, Spark], [Spark, 2016], [2016, Summit], [Summit, ,], [,,  ], [ , https://www.youtube.com/watch?v=4eJhcxfYR4I.], [https://www.youtube.com/watch?v=4eJhcxfYR4I., iii], [iii, Pure], [Pure, Storage], [Storage, ,], [,, FlashBlade], [FlashBlade, “], [“, P], [P, ”], [”, logo], [logo,  ], [ , trademarks], [trademarks, registered], [registered, trademarks], [trademarks, Pure], [Pure, Storage], [Storage, U.S.], [U.S.,  ], [ , countries], [countries, .]]

>> Trigrams: 
[[NVIDIA, SAP, Partner], [SAP, Partner, Create], [Partner, Create, New], [Create, New, Wave], [New, Wave,  ], [Wave,  , AI], [ , AI, Business], [AI, Business, Applications], [Business, Applications, ,], [Applications, ,, https://blogs.nvidia.com/], [,, https://blogs.nvidia.com/, blog/2017/05/10], [https://blogs.nvidia.com/, blog/2017/05/10, /], [blog/2017/05/10, /, nvidia], [/, nvidia, -], [nvidia, -, sap], [-, sap, -], [sap, -, partner/.], [-, partner/., ii], [partner/., ii, AI], [ii, AI, :], [AI, :, New], [:, New, Electricity], [New, Electricity, ,], [Electricity, ,, Andrew], [,, Andrew, Ng], [Andrew, Ng, ,], [Ng, ,, Spark], [,, Spark, 2016], [Spark, 2016, Summit], [2016, Summit, ,], [Summit, ,,  ], [,,  , https://www.youtube.com/watch?v=4eJhcxfYR4I.], [ , https://www.youtube.com/watch?v=4eJhcxfYR4I., iii], [https://www.youtube.com/watch?v=4eJhcxfYR4I., iii, Pure], [iii, Pure, Storage], [Pure, Storage, ,], [Storage, ,, FlashBlade], [,, FlashBlade, “], [FlashBlade, “, P], [“, P, ”], [P, ”, logo], [”, logo,  ], [logo,  , trademarks], [ , trademarks, registered], [trademarks, registered, trademarks], [registered, trademarks, Pure], [trademarks, Pure, Storage], [Pure, Storage, U.S.], [Storage, U.S.,  ], [U.S.,  , countries], [ , countries, .]]

>> Noun Phrases are: 
[i, NVIDIA, SAP Partner, a New Wave, AI Business Applications, https://blogs.nvidia.com/ blog/2017/05/10/nvidia-sap-partner/. ii AI, The New Electricity, Andrew Ng, Spark 2016 Summit, https://www.youtube.com/watch?v=4eJhcxfYR4I. iii Pure Storage, FlashBlade, the “P” logo, trademarks, registered trademarks, Pure Storage, other countries]

>> Named Entities are: 
[('SAP Partner', 'ORG'), ('The New Electricity', 'ORG'), ('Andrew Ng', 'PERSON'), ('Spark 2016 Summit', 'ORG'), ('FlashBlade', 'PRODUCT'), ('U.S.', 'GPE')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

All other trademarks are the property of  their respective owners. 


>> Tokens are: 
[trademarks, property,  , respective, owners, .] 

>> PoS Tags are: 
[('trademarks', 'NOUN'), ('property', 'NOUN'), (' ', 'SPACE'), ('respective', 'ADJ'), ('owners', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('trademarks', 'nsubj'), ('property', 'attr'), (' ', 'pobj'), ('respective', 'amod'), ('owners', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[trademarks, property], [property,  ], [ , respective], [respective, owners], [owners, .]]

>> Trigrams: 
[[trademarks, property,  ], [property,  , respective], [ , respective, owners], [respective, owners, .]]

>> Noun Phrases are: 
[All other trademarks, the property, their respective owners]

>> Named Entities are: 
[] 
