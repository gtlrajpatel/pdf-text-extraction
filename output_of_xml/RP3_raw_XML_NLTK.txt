				 *** Text Processing using NLTK *** 


========================================== PARAGRAPH 1 ===========================================

White PaperCustomer Service Solutions Natural language understanding 

------------------- Sentence 1 -------------------

White PaperCustomer Service Solutions Natural language understanding

>> Tokens are: 
 ['White', 'PaperCustomer', 'Service', 'Solutions', 'Natural', 'language', 'understanding']

>> Bigrams are: 
 [('White', 'PaperCustomer'), ('PaperCustomer', 'Service'), ('Service', 'Solutions'), ('Solutions', 'Natural'), ('Natural', 'language'), ('language', 'understanding')]

>> Trigrams are: 
 [('White', 'PaperCustomer', 'Service'), ('PaperCustomer', 'Service', 'Solutions'), ('Service', 'Solutions', 'Natural'), ('Solutions', 'Natural', 'language'), ('Natural', 'language', 'understanding')]

>> POS Tags are: 
 [('White', 'NNP'), ('PaperCustomer', 'NNP'), ('Service', 'NNP'), ('Solutions', 'NNP'), ('Natural', 'NNP'), ('language', 'NN'), ('understanding', 'NN')]

>> Noun Phrases are: 
 ['White PaperCustomer Service Solutions Natural language understanding']

>> Named Entities are: 
 [('FACILITY', 'White'), ('ORGANIZATION', 'PaperCustomer Service Solutions Natural')] 

>> Stemming using Porter Stemmer: 
 [('White', 'white'), ('PaperCustomer', 'papercustom'), ('Service', 'servic'), ('Solutions', 'solut'), ('Natural', 'natur'), ('language', 'languag'), ('understanding', 'understand')]

>> Stemming using Snowball Stemmer: 
 [('White', 'white'), ('PaperCustomer', 'papercustom'), ('Service', 'servic'), ('Solutions', 'solut'), ('Natural', 'natur'), ('language', 'languag'), ('understanding', 'understand')]

>> Lemmatization: 
 [('White', 'White'), ('PaperCustomer', 'PaperCustomer'), ('Service', 'Service'), ('Solutions', 'Solutions'), ('Natural', 'Natural'), ('language', 'language'), ('understanding', 'understanding')]



========================================== PARAGRAPH 2 ===========================================

Natural language  understanding Learning to speak customer-ese.

------------------- Sentence 1 -------------------

Natural language  understanding Learning to speak customer-ese.

>> Tokens are: 
 ['Natural', 'language', 'understanding', 'Learning', 'speak', 'customer-ese', '.']

>> Bigrams are: 
 [('Natural', 'language'), ('language', 'understanding'), ('understanding', 'Learning'), ('Learning', 'speak'), ('speak', 'customer-ese'), ('customer-ese', '.')]

>> Trigrams are: 
 [('Natural', 'language', 'understanding'), ('language', 'understanding', 'Learning'), ('understanding', 'Learning', 'speak'), ('Learning', 'speak', 'customer-ese'), ('speak', 'customer-ese', '.')]

>> POS Tags are: 
 [('Natural', 'JJ'), ('language', 'NN'), ('understanding', 'VBG'), ('Learning', 'NNP'), ('speak', 'JJ'), ('customer-ese', 'JJ'), ('.', '.')]

>> Noun Phrases are: 
 ['Natural language', 'Learning']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Natural', 'natur'), ('language', 'languag'), ('understanding', 'understand'), ('Learning', 'learn'), ('speak', 'speak'), ('customer-ese', 'customer-es'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Natural', 'natur'), ('language', 'languag'), ('understanding', 'understand'), ('Learning', 'learn'), ('speak', 'speak'), ('customer-ese', 'customer-es'), ('.', '.')]

>> Lemmatization: 
 [('Natural', 'Natural'), ('language', 'language'), ('understanding', 'understanding'), ('Learning', 'Learning'), ('speak', 'speak'), ('customer-ese', 'customer-ese'), ('.', '.')]



========================================== PARAGRAPH 3 ===========================================

Table of contents 

------------------- Sentence 1 -------------------

Table of contents

>> Tokens are: 
 ['Table', 'contents']

>> Bigrams are: 
 [('Table', 'contents')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('Table', 'JJ'), ('contents', 'NNS')]

>> Noun Phrases are: 
 ['Table contents']

>> Named Entities are: 
 [('GPE', 'Table')] 

>> Stemming using Porter Stemmer: 
 [('Table', 'tabl'), ('contents', 'content')]

>> Stemming using Snowball Stemmer: 
 [('Table', 'tabl'), ('contents', 'content')]

>> Lemmatization: 
 [('Table', 'Table'), ('contents', 'content')]



========================================== PARAGRAPH 4 ===========================================

1 Speech-enabled automation / p2 

------------------- Sentence 1 -------------------

1 Speech-enabled automation / p2

>> Tokens are: 
 ['1', 'Speech-enabled', 'automation', '/', 'p2']

>> Bigrams are: 
 [('1', 'Speech-enabled'), ('Speech-enabled', 'automation'), ('automation', '/'), ('/', 'p2')]

>> Trigrams are: 
 [('1', 'Speech-enabled', 'automation'), ('Speech-enabled', 'automation', '/'), ('automation', '/', 'p2')]

>> POS Tags are: 
 [('1', 'CD'), ('Speech-enabled', 'JJ'), ('automation', 'NN'), ('/', 'NNP'), ('p2', 'NN')]

>> Noun Phrases are: 
 ['Speech-enabled automation / p2']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('1', '1'), ('Speech-enabled', 'speech-en'), ('automation', 'autom'), ('/', '/'), ('p2', 'p2')]

>> Stemming using Snowball Stemmer: 
 [('1', '1'), ('Speech-enabled', 'speech-en'), ('automation', 'autom'), ('/', '/'), ('p2', 'p2')]

>> Lemmatization: 
 [('1', '1'), ('Speech-enabled', 'Speech-enabled'), ('automation', 'automation'), ('/', '/'), ('p2', 'p2')]



========================================== PARAGRAPH 5 ===========================================

2 Learning to speak customer-ese / p3 

------------------- Sentence 1 -------------------

2 Learning to speak customer-ese / p3

>> Tokens are: 
 ['2', 'Learning', 'speak', 'customer-ese', '/', 'p3']

>> Bigrams are: 
 [('2', 'Learning'), ('Learning', 'speak'), ('speak', 'customer-ese'), ('customer-ese', '/'), ('/', 'p3')]

>> Trigrams are: 
 [('2', 'Learning', 'speak'), ('Learning', 'speak', 'customer-ese'), ('speak', 'customer-ese', '/'), ('customer-ese', '/', 'p3')]

>> POS Tags are: 
 [('2', 'CD'), ('Learning', 'NNP'), ('speak', 'JJ'), ('customer-ese', 'JJ'), ('/', 'NN'), ('p3', 'NN')]

>> Noun Phrases are: 
 ['Learning', 'speak customer-ese / p3']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('2', '2'), ('Learning', 'learn'), ('speak', 'speak'), ('customer-ese', 'customer-es'), ('/', '/'), ('p3', 'p3')]

>> Stemming using Snowball Stemmer: 
 [('2', '2'), ('Learning', 'learn'), ('speak', 'speak'), ('customer-ese', 'customer-es'), ('/', '/'), ('p3', 'p3')]

>> Lemmatization: 
 [('2', '2'), ('Learning', 'Learning'), ('speak', 'speak'), ('customer-ese', 'customer-ese'), ('/', '/'), ('p3', 'p3')]



========================================== PARAGRAPH 6 ===========================================

3 Make the translation book bigger / p4 

------------------- Sentence 1 -------------------

3 Make the translation book bigger / p4

>> Tokens are: 
 ['3', 'Make', 'translation', 'book', 'bigger', '/', 'p4']

>> Bigrams are: 
 [('3', 'Make'), ('Make', 'translation'), ('translation', 'book'), ('book', 'bigger'), ('bigger', '/'), ('/', 'p4')]

>> Trigrams are: 
 [('3', 'Make', 'translation'), ('Make', 'translation', 'book'), ('translation', 'book', 'bigger'), ('book', 'bigger', '/'), ('bigger', '/', 'p4')]

>> POS Tags are: 
 [('3', 'CD'), ('Make', 'NNP'), ('translation', 'NN'), ('book', 'NN'), ('bigger', 'JJR'), ('/', 'NN'), ('p4', 'NN')]

>> Noun Phrases are: 
 ['Make translation book', '/ p4']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('3', '3'), ('Make', 'make'), ('translation', 'translat'), ('book', 'book'), ('bigger', 'bigger'), ('/', '/'), ('p4', 'p4')]

>> Stemming using Snowball Stemmer: 
 [('3', '3'), ('Make', 'make'), ('translation', 'translat'), ('book', 'book'), ('bigger', 'bigger'), ('/', '/'), ('p4', 'p4')]

>> Lemmatization: 
 [('3', '3'), ('Make', 'Make'), ('translation', 'translation'), ('book', 'book'), ('bigger', 'bigger'), ('/', '/'), ('p4', 'p4')]



========================================== PARAGRAPH 7 ===========================================

4 Learn to recognize variations of phrases / p4 

------------------- Sentence 1 -------------------

4 Learn to recognize variations of phrases / p4

>> Tokens are: 
 ['4', 'Learn', 'recognize', 'variations', 'phrases', '/', 'p4']

>> Bigrams are: 
 [('4', 'Learn'), ('Learn', 'recognize'), ('recognize', 'variations'), ('variations', 'phrases'), ('phrases', '/'), ('/', 'p4')]

>> Trigrams are: 
 [('4', 'Learn', 'recognize'), ('Learn', 'recognize', 'variations'), ('recognize', 'variations', 'phrases'), ('variations', 'phrases', '/'), ('phrases', '/', 'p4')]

>> POS Tags are: 
 [('4', 'CD'), ('Learn', 'NNP'), ('recognize', 'NN'), ('variations', 'NNS'), ('phrases', 'VBZ'), ('/', 'CD'), ('p4', 'NN')]

>> Noun Phrases are: 
 ['Learn recognize variations', 'p4']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('4', '4'), ('Learn', 'learn'), ('recognize', 'recogn'), ('variations', 'variat'), ('phrases', 'phrase'), ('/', '/'), ('p4', 'p4')]

>> Stemming using Snowball Stemmer: 
 [('4', '4'), ('Learn', 'learn'), ('recognize', 'recogn'), ('variations', 'variat'), ('phrases', 'phrase'), ('/', '/'), ('p4', 'p4')]

>> Lemmatization: 
 [('4', '4'), ('Learn', 'Learn'), ('recognize', 'recognize'), ('variations', 'variation'), ('phrases', 'phrase'), ('/', '/'), ('p4', 'p4')]



========================================== PARAGRAPH 8 ===========================================

5	 Become	fluent	/	p4 

------------------- Sentence 1 -------------------

5	 Become	fluent	/	p4

>> Tokens are: 
 ['5', 'Become', 'fluent', '/', 'p4']

>> Bigrams are: 
 [('5', 'Become'), ('Become', 'fluent'), ('fluent', '/'), ('/', 'p4')]

>> Trigrams are: 
 [('5', 'Become', 'fluent'), ('Become', 'fluent', '/'), ('fluent', '/', 'p4')]

>> POS Tags are: 
 [('5', 'CD'), ('Become', 'NNP'), ('fluent', 'JJ'), ('/', 'NNP'), ('p4', 'NN')]

>> Noun Phrases are: 
 ['Become', 'fluent / p4']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('5', '5'), ('Become', 'becom'), ('fluent', 'fluent'), ('/', '/'), ('p4', 'p4')]

>> Stemming using Snowball Stemmer: 
 [('5', '5'), ('Become', 'becom'), ('fluent', 'fluent'), ('/', '/'), ('p4', 'p4')]

>> Lemmatization: 
 [('5', '5'), ('Become', 'Become'), ('fluent', 'fluent'), ('/', '/'), ('p4', 'p4')]



========================================== PARAGRAPH 9 ===========================================

6	 Provide	a	more	flexible	script	/	p5 

------------------- Sentence 1 -------------------

6	 Provide	a	more	flexible	script	/	p5

>> Tokens are: 
 ['6', 'Provide', 'flexible', 'script', '/', 'p5']

>> Bigrams are: 
 [('6', 'Provide'), ('Provide', 'flexible'), ('flexible', 'script'), ('script', '/'), ('/', 'p5')]

>> Trigrams are: 
 [('6', 'Provide', 'flexible'), ('Provide', 'flexible', 'script'), ('flexible', 'script', '/'), ('script', '/', 'p5')]

>> POS Tags are: 
 [('6', 'CD'), ('Provide', 'NNP'), ('flexible', 'JJ'), ('script', 'NN'), ('/', 'NNP'), ('p5', 'NN')]

>> Noun Phrases are: 
 ['Provide', 'flexible script / p5']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('6', '6'), ('Provide', 'provid'), ('flexible', 'flexibl'), ('script', 'script'), ('/', '/'), ('p5', 'p5')]

>> Stemming using Snowball Stemmer: 
 [('6', '6'), ('Provide', 'provid'), ('flexible', 'flexibl'), ('script', 'script'), ('/', '/'), ('p5', 'p5')]

>> Lemmatization: 
 [('6', '6'), ('Provide', 'Provide'), ('flexible', 'flexible'), ('script', 'script'), ('/', '/'), ('p5', 'p5')]



========================================== PARAGRAPH 10 ===========================================

7 Conclusion / p6 

------------------- Sentence 1 -------------------

7 Conclusion / p6

>> Tokens are: 
 ['7', 'Conclusion', '/', 'p6']

>> Bigrams are: 
 [('7', 'Conclusion'), ('Conclusion', '/'), ('/', 'p6')]

>> Trigrams are: 
 [('7', 'Conclusion', '/'), ('Conclusion', '/', 'p6')]

>> POS Tags are: 
 [('7', 'CD'), ('Conclusion', 'NNP'), ('/', 'NNP'), ('p6', 'NN')]

>> Noun Phrases are: 
 ['Conclusion / p6']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('7', '7'), ('Conclusion', 'conclus'), ('/', '/'), ('p6', 'p6')]

>> Stemming using Snowball Stemmer: 
 [('7', '7'), ('Conclusion', 'conclus'), ('/', '/'), ('p6', 'p6')]

>> Lemmatization: 
 [('7', '7'), ('Conclusion', 'Conclusion'), ('/', '/'), ('p6', 'p6')]



========================================== PARAGRAPH 11 ===========================================

White PaperCustomer Service Solutions Natural language understanding1

------------------- Sentence 1 -------------------

White PaperCustomer Service Solutions Natural language understanding1

>> Tokens are: 
 ['White', 'PaperCustomer', 'Service', 'Solutions', 'Natural', 'language', 'understanding1']

>> Bigrams are: 
 [('White', 'PaperCustomer'), ('PaperCustomer', 'Service'), ('Service', 'Solutions'), ('Solutions', 'Natural'), ('Natural', 'language'), ('language', 'understanding1')]

>> Trigrams are: 
 [('White', 'PaperCustomer', 'Service'), ('PaperCustomer', 'Service', 'Solutions'), ('Service', 'Solutions', 'Natural'), ('Solutions', 'Natural', 'language'), ('Natural', 'language', 'understanding1')]

>> POS Tags are: 
 [('White', 'NNP'), ('PaperCustomer', 'NNP'), ('Service', 'NNP'), ('Solutions', 'NNP'), ('Natural', 'NNP'), ('language', 'NN'), ('understanding1', 'NN')]

>> Noun Phrases are: 
 ['White PaperCustomer Service Solutions Natural language understanding1']

>> Named Entities are: 
 [('FACILITY', 'White'), ('ORGANIZATION', 'PaperCustomer Service Solutions Natural')] 

>> Stemming using Porter Stemmer: 
 [('White', 'white'), ('PaperCustomer', 'papercustom'), ('Service', 'servic'), ('Solutions', 'solut'), ('Natural', 'natur'), ('language', 'languag'), ('understanding1', 'understanding1')]

>> Stemming using Snowball Stemmer: 
 [('White', 'white'), ('PaperCustomer', 'papercustom'), ('Service', 'servic'), ('Solutions', 'solut'), ('Natural', 'natur'), ('language', 'languag'), ('understanding1', 'understanding1')]

>> Lemmatization: 
 [('White', 'White'), ('PaperCustomer', 'PaperCustomer'), ('Service', 'Service'), ('Solutions', 'Solutions'), ('Natural', 'Natural'), ('language', 'language'), ('understanding1', 'understanding1')]



========================================== PARAGRAPH 12 ===========================================

In recent years speech recognition systems have made impressive advances  in their ability to provide rich and natural interactions with callers. The term  Natural Language (NL)—and its family of synonymous abbreviations: Natural  Language Understanding (NLU), Natural Language Processing (NLP), and  Natural Language Technology (NLT)—have been held up as the panacea for  improving the accuracy of a speech system. Natural language suggests that,  rather than constrain a caller to a list of choices, the caller can say anything in  any context and be understood by the system. Speech vendors trumpet their  NL capabilities, linguists at research labs talk about advancements in NLP  technology, contact centers evaluating vendor proposals ask for explanations  of available NLU features and industry press proclaim NLT as the future of  speech recognition. 

------------------- Sentence 1 -------------------

In recent years speech recognition systems have made impressive advances  in their ability to provide rich and natural interactions with callers.

>> Tokens are: 
 ['In', 'recent', 'years', 'speech', 'recognition', 'systems', 'made', 'impressive', 'advances', 'ability', 'provide', 'rich', 'natural', 'interactions', 'callers', '.']

>> Bigrams are: 
 [('In', 'recent'), ('recent', 'years'), ('years', 'speech'), ('speech', 'recognition'), ('recognition', 'systems'), ('systems', 'made'), ('made', 'impressive'), ('impressive', 'advances'), ('advances', 'ability'), ('ability', 'provide'), ('provide', 'rich'), ('rich', 'natural'), ('natural', 'interactions'), ('interactions', 'callers'), ('callers', '.')]

>> Trigrams are: 
 [('In', 'recent', 'years'), ('recent', 'years', 'speech'), ('years', 'speech', 'recognition'), ('speech', 'recognition', 'systems'), ('recognition', 'systems', 'made'), ('systems', 'made', 'impressive'), ('made', 'impressive', 'advances'), ('impressive', 'advances', 'ability'), ('advances', 'ability', 'provide'), ('ability', 'provide', 'rich'), ('provide', 'rich', 'natural'), ('rich', 'natural', 'interactions'), ('natural', 'interactions', 'callers'), ('interactions', 'callers', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('recent', 'JJ'), ('years', 'NNS'), ('speech', 'JJ'), ('recognition', 'NN'), ('systems', 'NNS'), ('made', 'VBD'), ('impressive', 'JJ'), ('advances', 'NNS'), ('ability', 'NN'), ('provide', 'VBP'), ('rich', 'JJ'), ('natural', 'JJ'), ('interactions', 'NNS'), ('callers', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['recent years', 'speech recognition systems', 'impressive advances ability', 'rich natural interactions callers']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('recent', 'recent'), ('years', 'year'), ('speech', 'speech'), ('recognition', 'recognit'), ('systems', 'system'), ('made', 'made'), ('impressive', 'impress'), ('advances', 'advanc'), ('ability', 'abil'), ('provide', 'provid'), ('rich', 'rich'), ('natural', 'natur'), ('interactions', 'interact'), ('callers', 'caller'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('recent', 'recent'), ('years', 'year'), ('speech', 'speech'), ('recognition', 'recognit'), ('systems', 'system'), ('made', 'made'), ('impressive', 'impress'), ('advances', 'advanc'), ('ability', 'abil'), ('provide', 'provid'), ('rich', 'rich'), ('natural', 'natur'), ('interactions', 'interact'), ('callers', 'caller'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('recent', 'recent'), ('years', 'year'), ('speech', 'speech'), ('recognition', 'recognition'), ('systems', 'system'), ('made', 'made'), ('impressive', 'impressive'), ('advances', 'advance'), ('ability', 'ability'), ('provide', 'provide'), ('rich', 'rich'), ('natural', 'natural'), ('interactions', 'interaction'), ('callers', 'caller'), ('.', '.')]


------------------- Sentence 2 -------------------

The term  Natural Language (NL)—and its family of synonymous abbreviations: Natural  Language Understanding (NLU), Natural Language Processing (NLP), and  Natural Language Technology (NLT)—have been held up as the panacea for  improving the accuracy of a speech system.

>> Tokens are: 
 ['The', 'term', 'Natural', 'Language', '(', 'NL', ')', '—and', 'family', 'synonymous', 'abbreviations', ':', 'Natural', 'Language', 'Understanding', '(', 'NLU', ')', ',', 'Natural', 'Language', 'Processing', '(', 'NLP', ')', ',', 'Natural', 'Language', 'Technology', '(', 'NLT', ')', '—have', 'held', 'panacea', 'improving', 'accuracy', 'speech', 'system', '.']

>> Bigrams are: 
 [('The', 'term'), ('term', 'Natural'), ('Natural', 'Language'), ('Language', '('), ('(', 'NL'), ('NL', ')'), (')', '—and'), ('—and', 'family'), ('family', 'synonymous'), ('synonymous', 'abbreviations'), ('abbreviations', ':'), (':', 'Natural'), ('Natural', 'Language'), ('Language', 'Understanding'), ('Understanding', '('), ('(', 'NLU'), ('NLU', ')'), (')', ','), (',', 'Natural'), ('Natural', 'Language'), ('Language', 'Processing'), ('Processing', '('), ('(', 'NLP'), ('NLP', ')'), (')', ','), (',', 'Natural'), ('Natural', 'Language'), ('Language', 'Technology'), ('Technology', '('), ('(', 'NLT'), ('NLT', ')'), (')', '—have'), ('—have', 'held'), ('held', 'panacea'), ('panacea', 'improving'), ('improving', 'accuracy'), ('accuracy', 'speech'), ('speech', 'system'), ('system', '.')]

>> Trigrams are: 
 [('The', 'term', 'Natural'), ('term', 'Natural', 'Language'), ('Natural', 'Language', '('), ('Language', '(', 'NL'), ('(', 'NL', ')'), ('NL', ')', '—and'), (')', '—and', 'family'), ('—and', 'family', 'synonymous'), ('family', 'synonymous', 'abbreviations'), ('synonymous', 'abbreviations', ':'), ('abbreviations', ':', 'Natural'), (':', 'Natural', 'Language'), ('Natural', 'Language', 'Understanding'), ('Language', 'Understanding', '('), ('Understanding', '(', 'NLU'), ('(', 'NLU', ')'), ('NLU', ')', ','), (')', ',', 'Natural'), (',', 'Natural', 'Language'), ('Natural', 'Language', 'Processing'), ('Language', 'Processing', '('), ('Processing', '(', 'NLP'), ('(', 'NLP', ')'), ('NLP', ')', ','), (')', ',', 'Natural'), (',', 'Natural', 'Language'), ('Natural', 'Language', 'Technology'), ('Language', 'Technology', '('), ('Technology', '(', 'NLT'), ('(', 'NLT', ')'), ('NLT', ')', '—have'), (')', '—have', 'held'), ('—have', 'held', 'panacea'), ('held', 'panacea', 'improving'), ('panacea', 'improving', 'accuracy'), ('improving', 'accuracy', 'speech'), ('accuracy', 'speech', 'system'), ('speech', 'system', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('term', 'NN'), ('Natural', 'NNP'), ('Language', 'NNP'), ('(', '('), ('NL', 'NNP'), (')', ')'), ('—and', 'VBP'), ('family', 'NN'), ('synonymous', 'JJ'), ('abbreviations', 'NNS'), (':', ':'), ('Natural', 'JJ'), ('Language', 'NNP'), ('Understanding', 'NNP'), ('(', '('), ('NLU', 'NNP'), (')', ')'), (',', ','), ('Natural', 'NNP'), ('Language', 'NNP'), ('Processing', 'NNP'), ('(', '('), ('NLP', 'NNP'), (')', ')'), (',', ','), ('Natural', 'NNP'), ('Language', 'NNP'), ('Technology', 'NNP'), ('(', '('), ('NLT', 'NNP'), (')', ')'), ('—have', 'VBP'), ('held', 'VBN'), ('panacea', 'JJ'), ('improving', 'VBG'), ('accuracy', 'NN'), ('speech', 'NN'), ('system', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['The term Natural Language', 'NL', 'family', 'synonymous abbreviations', 'Natural Language Understanding', 'NLU', 'Natural Language Processing', 'NLP', 'Natural Language Technology', 'NLT', 'accuracy speech system']

>> Named Entities are: 
 [('ORGANIZATION', 'Natural Language'), ('ORGANIZATION', 'NLU'), ('ORGANIZATION', 'Natural Language'), ('ORGANIZATION', 'NLP'), ('ORGANIZATION', 'Natural Language Technology'), ('ORGANIZATION', 'NLT')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('term', 'term'), ('Natural', 'natur'), ('Language', 'languag'), ('(', '('), ('NL', 'nl'), (')', ')'), ('—and', '—and'), ('family', 'famili'), ('synonymous', 'synonym'), ('abbreviations', 'abbrevi'), (':', ':'), ('Natural', 'natur'), ('Language', 'languag'), ('Understanding', 'understand'), ('(', '('), ('NLU', 'nlu'), (')', ')'), (',', ','), ('Natural', 'natur'), ('Language', 'languag'), ('Processing', 'process'), ('(', '('), ('NLP', 'nlp'), (')', ')'), (',', ','), ('Natural', 'natur'), ('Language', 'languag'), ('Technology', 'technolog'), ('(', '('), ('NLT', 'nlt'), (')', ')'), ('—have', '—have'), ('held', 'held'), ('panacea', 'panacea'), ('improving', 'improv'), ('accuracy', 'accuraci'), ('speech', 'speech'), ('system', 'system'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('term', 'term'), ('Natural', 'natur'), ('Language', 'languag'), ('(', '('), ('NL', 'nl'), (')', ')'), ('—and', '—and'), ('family', 'famili'), ('synonymous', 'synonym'), ('abbreviations', 'abbrevi'), (':', ':'), ('Natural', 'natur'), ('Language', 'languag'), ('Understanding', 'understand'), ('(', '('), ('NLU', 'nlu'), (')', ')'), (',', ','), ('Natural', 'natur'), ('Language', 'languag'), ('Processing', 'process'), ('(', '('), ('NLP', 'nlp'), (')', ')'), (',', ','), ('Natural', 'natur'), ('Language', 'languag'), ('Technology', 'technolog'), ('(', '('), ('NLT', 'nlt'), (')', ')'), ('—have', '—have'), ('held', 'held'), ('panacea', 'panacea'), ('improving', 'improv'), ('accuracy', 'accuraci'), ('speech', 'speech'), ('system', 'system'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('term', 'term'), ('Natural', 'Natural'), ('Language', 'Language'), ('(', '('), ('NL', 'NL'), (')', ')'), ('—and', '—and'), ('family', 'family'), ('synonymous', 'synonymous'), ('abbreviations', 'abbreviation'), (':', ':'), ('Natural', 'Natural'), ('Language', 'Language'), ('Understanding', 'Understanding'), ('(', '('), ('NLU', 'NLU'), (')', ')'), (',', ','), ('Natural', 'Natural'), ('Language', 'Language'), ('Processing', 'Processing'), ('(', '('), ('NLP', 'NLP'), (')', ')'), (',', ','), ('Natural', 'Natural'), ('Language', 'Language'), ('Technology', 'Technology'), ('(', '('), ('NLT', 'NLT'), (')', ')'), ('—have', '—have'), ('held', 'held'), ('panacea', 'panacea'), ('improving', 'improving'), ('accuracy', 'accuracy'), ('speech', 'speech'), ('system', 'system'), ('.', '.')]


------------------- Sentence 3 -------------------

Natural language suggests that,  rather than constrain a caller to a list of choices, the caller can say anything in  any context and be understood by the system.

>> Tokens are: 
 ['Natural', 'language', 'suggests', ',', 'rather', 'constrain', 'caller', 'list', 'choices', ',', 'caller', 'say', 'anything', 'context', 'understood', 'system', '.']

>> Bigrams are: 
 [('Natural', 'language'), ('language', 'suggests'), ('suggests', ','), (',', 'rather'), ('rather', 'constrain'), ('constrain', 'caller'), ('caller', 'list'), ('list', 'choices'), ('choices', ','), (',', 'caller'), ('caller', 'say'), ('say', 'anything'), ('anything', 'context'), ('context', 'understood'), ('understood', 'system'), ('system', '.')]

>> Trigrams are: 
 [('Natural', 'language', 'suggests'), ('language', 'suggests', ','), ('suggests', ',', 'rather'), (',', 'rather', 'constrain'), ('rather', 'constrain', 'caller'), ('constrain', 'caller', 'list'), ('caller', 'list', 'choices'), ('list', 'choices', ','), ('choices', ',', 'caller'), (',', 'caller', 'say'), ('caller', 'say', 'anything'), ('say', 'anything', 'context'), ('anything', 'context', 'understood'), ('context', 'understood', 'system'), ('understood', 'system', '.')]

>> POS Tags are: 
 [('Natural', 'JJ'), ('language', 'NN'), ('suggests', 'VBZ'), (',', ','), ('rather', 'RB'), ('constrain', 'VBP'), ('caller', 'JJ'), ('list', 'NN'), ('choices', 'NNS'), (',', ','), ('caller', 'NNS'), ('say', 'VBP'), ('anything', 'NN'), ('context', 'JJ'), ('understood', 'NN'), ('system', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['Natural language', 'caller list choices', 'caller', 'anything', 'context understood system']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Natural', 'natur'), ('language', 'languag'), ('suggests', 'suggest'), (',', ','), ('rather', 'rather'), ('constrain', 'constrain'), ('caller', 'caller'), ('list', 'list'), ('choices', 'choic'), (',', ','), ('caller', 'caller'), ('say', 'say'), ('anything', 'anyth'), ('context', 'context'), ('understood', 'understood'), ('system', 'system'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Natural', 'natur'), ('language', 'languag'), ('suggests', 'suggest'), (',', ','), ('rather', 'rather'), ('constrain', 'constrain'), ('caller', 'caller'), ('list', 'list'), ('choices', 'choic'), (',', ','), ('caller', 'caller'), ('say', 'say'), ('anything', 'anyth'), ('context', 'context'), ('understood', 'understood'), ('system', 'system'), ('.', '.')]

>> Lemmatization: 
 [('Natural', 'Natural'), ('language', 'language'), ('suggests', 'suggests'), (',', ','), ('rather', 'rather'), ('constrain', 'constrain'), ('caller', 'caller'), ('list', 'list'), ('choices', 'choice'), (',', ','), ('caller', 'caller'), ('say', 'say'), ('anything', 'anything'), ('context', 'context'), ('understood', 'understood'), ('system', 'system'), ('.', '.')]


------------------- Sentence 4 -------------------

Speech vendors trumpet their  NL capabilities, linguists at research labs talk about advancements in NLP  technology, contact centers evaluating vendor proposals ask for explanations  of available NLU features and industry press proclaim NLT as the future of  speech recognition.

>> Tokens are: 
 ['Speech', 'vendors', 'trumpet', 'NL', 'capabilities', ',', 'linguists', 'research', 'labs', 'talk', 'advancements', 'NLP', 'technology', ',', 'contact', 'centers', 'evaluating', 'vendor', 'proposals', 'ask', 'explanations', 'available', 'NLU', 'features', 'industry', 'press', 'proclaim', 'NLT', 'future', 'speech', 'recognition', '.']

>> Bigrams are: 
 [('Speech', 'vendors'), ('vendors', 'trumpet'), ('trumpet', 'NL'), ('NL', 'capabilities'), ('capabilities', ','), (',', 'linguists'), ('linguists', 'research'), ('research', 'labs'), ('labs', 'talk'), ('talk', 'advancements'), ('advancements', 'NLP'), ('NLP', 'technology'), ('technology', ','), (',', 'contact'), ('contact', 'centers'), ('centers', 'evaluating'), ('evaluating', 'vendor'), ('vendor', 'proposals'), ('proposals', 'ask'), ('ask', 'explanations'), ('explanations', 'available'), ('available', 'NLU'), ('NLU', 'features'), ('features', 'industry'), ('industry', 'press'), ('press', 'proclaim'), ('proclaim', 'NLT'), ('NLT', 'future'), ('future', 'speech'), ('speech', 'recognition'), ('recognition', '.')]

>> Trigrams are: 
 [('Speech', 'vendors', 'trumpet'), ('vendors', 'trumpet', 'NL'), ('trumpet', 'NL', 'capabilities'), ('NL', 'capabilities', ','), ('capabilities', ',', 'linguists'), (',', 'linguists', 'research'), ('linguists', 'research', 'labs'), ('research', 'labs', 'talk'), ('labs', 'talk', 'advancements'), ('talk', 'advancements', 'NLP'), ('advancements', 'NLP', 'technology'), ('NLP', 'technology', ','), ('technology', ',', 'contact'), (',', 'contact', 'centers'), ('contact', 'centers', 'evaluating'), ('centers', 'evaluating', 'vendor'), ('evaluating', 'vendor', 'proposals'), ('vendor', 'proposals', 'ask'), ('proposals', 'ask', 'explanations'), ('ask', 'explanations', 'available'), ('explanations', 'available', 'NLU'), ('available', 'NLU', 'features'), ('NLU', 'features', 'industry'), ('features', 'industry', 'press'), ('industry', 'press', 'proclaim'), ('press', 'proclaim', 'NLT'), ('proclaim', 'NLT', 'future'), ('NLT', 'future', 'speech'), ('future', 'speech', 'recognition'), ('speech', 'recognition', '.')]

>> POS Tags are: 
 [('Speech', 'NN'), ('vendors', 'NNS'), ('trumpet', 'VBP'), ('NL', 'NNP'), ('capabilities', 'NNS'), (',', ','), ('linguists', 'NNS'), ('research', 'NN'), ('labs', 'NN'), ('talk', 'NN'), ('advancements', 'NNS'), ('NLP', 'NNP'), ('technology', 'NN'), (',', ','), ('contact', 'NN'), ('centers', 'NNS'), ('evaluating', 'VBG'), ('vendor', 'NN'), ('proposals', 'NNS'), ('ask', 'VBP'), ('explanations', 'NNS'), ('available', 'JJ'), ('NLU', 'NNP'), ('features', 'NNS'), ('industry', 'NN'), ('press', 'NN'), ('proclaim', 'NN'), ('NLT', 'NNP'), ('future', 'NN'), ('speech', 'NN'), ('recognition', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['Speech vendors', 'NL capabilities', 'linguists research labs talk advancements NLP technology', 'contact centers', 'vendor proposals', 'explanations', 'available NLU features industry press proclaim NLT future speech recognition']

>> Named Entities are: 
 [('GPE', 'Speech'), ('ORGANIZATION', 'NLP'), ('ORGANIZATION', 'NLU'), ('ORGANIZATION', 'NLT')] 

>> Stemming using Porter Stemmer: 
 [('Speech', 'speech'), ('vendors', 'vendor'), ('trumpet', 'trumpet'), ('NL', 'nl'), ('capabilities', 'capabl'), (',', ','), ('linguists', 'linguist'), ('research', 'research'), ('labs', 'lab'), ('talk', 'talk'), ('advancements', 'advanc'), ('NLP', 'nlp'), ('technology', 'technolog'), (',', ','), ('contact', 'contact'), ('centers', 'center'), ('evaluating', 'evalu'), ('vendor', 'vendor'), ('proposals', 'propos'), ('ask', 'ask'), ('explanations', 'explan'), ('available', 'avail'), ('NLU', 'nlu'), ('features', 'featur'), ('industry', 'industri'), ('press', 'press'), ('proclaim', 'proclaim'), ('NLT', 'nlt'), ('future', 'futur'), ('speech', 'speech'), ('recognition', 'recognit'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Speech', 'speech'), ('vendors', 'vendor'), ('trumpet', 'trumpet'), ('NL', 'nl'), ('capabilities', 'capabl'), (',', ','), ('linguists', 'linguist'), ('research', 'research'), ('labs', 'lab'), ('talk', 'talk'), ('advancements', 'advanc'), ('NLP', 'nlp'), ('technology', 'technolog'), (',', ','), ('contact', 'contact'), ('centers', 'center'), ('evaluating', 'evalu'), ('vendor', 'vendor'), ('proposals', 'propos'), ('ask', 'ask'), ('explanations', 'explan'), ('available', 'avail'), ('NLU', 'nlu'), ('features', 'featur'), ('industry', 'industri'), ('press', 'press'), ('proclaim', 'proclaim'), ('NLT', 'nlt'), ('future', 'futur'), ('speech', 'speech'), ('recognition', 'recognit'), ('.', '.')]

>> Lemmatization: 
 [('Speech', 'Speech'), ('vendors', 'vendor'), ('trumpet', 'trumpet'), ('NL', 'NL'), ('capabilities', 'capability'), (',', ','), ('linguists', 'linguist'), ('research', 'research'), ('labs', 'lab'), ('talk', 'talk'), ('advancements', 'advancement'), ('NLP', 'NLP'), ('technology', 'technology'), (',', ','), ('contact', 'contact'), ('centers', 'center'), ('evaluating', 'evaluating'), ('vendor', 'vendor'), ('proposals', 'proposal'), ('ask', 'ask'), ('explanations', 'explanation'), ('available', 'available'), ('NLU', 'NLU'), ('features', 'feature'), ('industry', 'industry'), ('press', 'press'), ('proclaim', 'proclaim'), ('NLT', 'NLT'), ('future', 'future'), ('speech', 'speech'), ('recognition', 'recognition'), ('.', '.')]



========================================== PARAGRAPH 13 ===========================================

The problem is that the term “natural language” has become meaningless.  This standard speech industry terminology is anything but standard. It implies  that you could call up a travel service and say, “I’d like a flight to London for  the 25th, for two adults, no wait make that two adults and an infant on my  lap, and can I have two aisle seats next to each other?” The term natural  language is vague and overused, full of promise, yet promising nothing. For it  to mean something, one needs specifics. 

------------------- Sentence 1 -------------------

The problem is that the term “natural language” has become meaningless.

>> Tokens are: 
 ['The', 'problem', 'term', '“', 'natural', 'language', '”', 'become', 'meaningless', '.']

>> Bigrams are: 
 [('The', 'problem'), ('problem', 'term'), ('term', '“'), ('“', 'natural'), ('natural', 'language'), ('language', '”'), ('”', 'become'), ('become', 'meaningless'), ('meaningless', '.')]

>> Trigrams are: 
 [('The', 'problem', 'term'), ('problem', 'term', '“'), ('term', '“', 'natural'), ('“', 'natural', 'language'), ('natural', 'language', '”'), ('language', '”', 'become'), ('”', 'become', 'meaningless'), ('become', 'meaningless', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('problem', 'NN'), ('term', 'NN'), ('“', 'NNP'), ('natural', 'JJ'), ('language', 'NN'), ('”', 'VBD'), ('become', 'JJ'), ('meaningless', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['The problem term “', 'natural language', 'become meaningless']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('problem', 'problem'), ('term', 'term'), ('“', '“'), ('natural', 'natur'), ('language', 'languag'), ('”', '”'), ('become', 'becom'), ('meaningless', 'meaningless'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('problem', 'problem'), ('term', 'term'), ('“', '“'), ('natural', 'natur'), ('language', 'languag'), ('”', '”'), ('become', 'becom'), ('meaningless', 'meaningless'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('problem', 'problem'), ('term', 'term'), ('“', '“'), ('natural', 'natural'), ('language', 'language'), ('”', '”'), ('become', 'become'), ('meaningless', 'meaningless'), ('.', '.')]


------------------- Sentence 2 -------------------

This standard speech industry terminology is anything but standard.

>> Tokens are: 
 ['This', 'standard', 'speech', 'industry', 'terminology', 'anything', 'standard', '.']

>> Bigrams are: 
 [('This', 'standard'), ('standard', 'speech'), ('speech', 'industry'), ('industry', 'terminology'), ('terminology', 'anything'), ('anything', 'standard'), ('standard', '.')]

>> Trigrams are: 
 [('This', 'standard', 'speech'), ('standard', 'speech', 'industry'), ('speech', 'industry', 'terminology'), ('industry', 'terminology', 'anything'), ('terminology', 'anything', 'standard'), ('anything', 'standard', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('standard', 'JJ'), ('speech', 'NN'), ('industry', 'NN'), ('terminology', 'NN'), ('anything', 'NN'), ('standard', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['This standard speech industry terminology anything standard']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('standard', 'standard'), ('speech', 'speech'), ('industry', 'industri'), ('terminology', 'terminolog'), ('anything', 'anyth'), ('standard', 'standard'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('standard', 'standard'), ('speech', 'speech'), ('industry', 'industri'), ('terminology', 'terminolog'), ('anything', 'anyth'), ('standard', 'standard'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('standard', 'standard'), ('speech', 'speech'), ('industry', 'industry'), ('terminology', 'terminology'), ('anything', 'anything'), ('standard', 'standard'), ('.', '.')]


------------------- Sentence 3 -------------------

It implies  that you could call up a travel service and say, “I’d like a flight to London for  the 25th, for two adults, no wait make that two adults and an infant on my  lap, and can I have two aisle seats next to each other?” The term natural  language is vague and overused, full of promise, yet promising nothing.

>> Tokens are: 
 ['It', 'implies', 'could', 'call', 'travel', 'service', 'say', ',', '“', 'I', '’', 'like', 'flight', 'London', '25th', ',', 'two', 'adults', ',', 'wait', 'make', 'two', 'adults', 'infant', 'lap', ',', 'I', 'two', 'aisle', 'seats', 'next', '?', '”', 'The', 'term', 'natural', 'language', 'vague', 'overused', ',', 'full', 'promise', ',', 'yet', 'promising', 'nothing', '.']

>> Bigrams are: 
 [('It', 'implies'), ('implies', 'could'), ('could', 'call'), ('call', 'travel'), ('travel', 'service'), ('service', 'say'), ('say', ','), (',', '“'), ('“', 'I'), ('I', '’'), ('’', 'like'), ('like', 'flight'), ('flight', 'London'), ('London', '25th'), ('25th', ','), (',', 'two'), ('two', 'adults'), ('adults', ','), (',', 'wait'), ('wait', 'make'), ('make', 'two'), ('two', 'adults'), ('adults', 'infant'), ('infant', 'lap'), ('lap', ','), (',', 'I'), ('I', 'two'), ('two', 'aisle'), ('aisle', 'seats'), ('seats', 'next'), ('next', '?'), ('?', '”'), ('”', 'The'), ('The', 'term'), ('term', 'natural'), ('natural', 'language'), ('language', 'vague'), ('vague', 'overused'), ('overused', ','), (',', 'full'), ('full', 'promise'), ('promise', ','), (',', 'yet'), ('yet', 'promising'), ('promising', 'nothing'), ('nothing', '.')]

>> Trigrams are: 
 [('It', 'implies', 'could'), ('implies', 'could', 'call'), ('could', 'call', 'travel'), ('call', 'travel', 'service'), ('travel', 'service', 'say'), ('service', 'say', ','), ('say', ',', '“'), (',', '“', 'I'), ('“', 'I', '’'), ('I', '’', 'like'), ('’', 'like', 'flight'), ('like', 'flight', 'London'), ('flight', 'London', '25th'), ('London', '25th', ','), ('25th', ',', 'two'), (',', 'two', 'adults'), ('two', 'adults', ','), ('adults', ',', 'wait'), (',', 'wait', 'make'), ('wait', 'make', 'two'), ('make', 'two', 'adults'), ('two', 'adults', 'infant'), ('adults', 'infant', 'lap'), ('infant', 'lap', ','), ('lap', ',', 'I'), (',', 'I', 'two'), ('I', 'two', 'aisle'), ('two', 'aisle', 'seats'), ('aisle', 'seats', 'next'), ('seats', 'next', '?'), ('next', '?', '”'), ('?', '”', 'The'), ('”', 'The', 'term'), ('The', 'term', 'natural'), ('term', 'natural', 'language'), ('natural', 'language', 'vague'), ('language', 'vague', 'overused'), ('vague', 'overused', ','), ('overused', ',', 'full'), (',', 'full', 'promise'), ('full', 'promise', ','), ('promise', ',', 'yet'), (',', 'yet', 'promising'), ('yet', 'promising', 'nothing'), ('promising', 'nothing', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('implies', 'VBZ'), ('could', 'MD'), ('call', 'VB'), ('travel', 'JJ'), ('service', 'NN'), ('say', 'VBP'), (',', ','), ('“', 'VBP'), ('I', 'PRP'), ('’', 'VBP'), ('like', 'IN'), ('flight', 'NN'), ('London', 'NNP'), ('25th', 'CD'), (',', ','), ('two', 'CD'), ('adults', 'NNS'), (',', ','), ('wait', 'VBP'), ('make', 'VBP'), ('two', 'CD'), ('adults', 'NNS'), ('infant', 'JJ'), ('lap', 'NN'), (',', ','), ('I', 'PRP'), ('two', 'CD'), ('aisle', 'VBP'), ('seats', 'NNS'), ('next', 'IN'), ('?', '.'), ('”', 'VB'), ('The', 'DT'), ('term', 'NN'), ('natural', 'JJ'), ('language', 'NN'), ('vague', 'NN'), ('overused', 'VBD'), (',', ','), ('full', 'JJ'), ('promise', 'NN'), (',', ','), ('yet', 'RB'), ('promising', 'VBG'), ('nothing', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['travel service', 'flight London', 'adults', 'adults', 'infant lap', 'seats', 'The term', 'natural language vague', 'full promise', 'nothing']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('implies', 'impli'), ('could', 'could'), ('call', 'call'), ('travel', 'travel'), ('service', 'servic'), ('say', 'say'), (',', ','), ('“', '“'), ('I', 'i'), ('’', '’'), ('like', 'like'), ('flight', 'flight'), ('London', 'london'), ('25th', '25th'), (',', ','), ('two', 'two'), ('adults', 'adult'), (',', ','), ('wait', 'wait'), ('make', 'make'), ('two', 'two'), ('adults', 'adult'), ('infant', 'infant'), ('lap', 'lap'), (',', ','), ('I', 'i'), ('two', 'two'), ('aisle', 'aisl'), ('seats', 'seat'), ('next', 'next'), ('?', '?'), ('”', '”'), ('The', 'the'), ('term', 'term'), ('natural', 'natur'), ('language', 'languag'), ('vague', 'vagu'), ('overused', 'overus'), (',', ','), ('full', 'full'), ('promise', 'promis'), (',', ','), ('yet', 'yet'), ('promising', 'promis'), ('nothing', 'noth'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('implies', 'impli'), ('could', 'could'), ('call', 'call'), ('travel', 'travel'), ('service', 'servic'), ('say', 'say'), (',', ','), ('“', '“'), ('I', 'i'), ('’', '’'), ('like', 'like'), ('flight', 'flight'), ('London', 'london'), ('25th', '25th'), (',', ','), ('two', 'two'), ('adults', 'adult'), (',', ','), ('wait', 'wait'), ('make', 'make'), ('two', 'two'), ('adults', 'adult'), ('infant', 'infant'), ('lap', 'lap'), (',', ','), ('I', 'i'), ('two', 'two'), ('aisle', 'aisl'), ('seats', 'seat'), ('next', 'next'), ('?', '?'), ('”', '”'), ('The', 'the'), ('term', 'term'), ('natural', 'natur'), ('language', 'languag'), ('vague', 'vagu'), ('overused', 'overus'), (',', ','), ('full', 'full'), ('promise', 'promis'), (',', ','), ('yet', 'yet'), ('promising', 'promis'), ('nothing', 'noth'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('implies', 'implies'), ('could', 'could'), ('call', 'call'), ('travel', 'travel'), ('service', 'service'), ('say', 'say'), (',', ','), ('“', '“'), ('I', 'I'), ('’', '’'), ('like', 'like'), ('flight', 'flight'), ('London', 'London'), ('25th', '25th'), (',', ','), ('two', 'two'), ('adults', 'adult'), (',', ','), ('wait', 'wait'), ('make', 'make'), ('two', 'two'), ('adults', 'adult'), ('infant', 'infant'), ('lap', 'lap'), (',', ','), ('I', 'I'), ('two', 'two'), ('aisle', 'aisle'), ('seats', 'seat'), ('next', 'next'), ('?', '?'), ('”', '”'), ('The', 'The'), ('term', 'term'), ('natural', 'natural'), ('language', 'language'), ('vague', 'vague'), ('overused', 'overused'), (',', ','), ('full', 'full'), ('promise', 'promise'), (',', ','), ('yet', 'yet'), ('promising', 'promising'), ('nothing', 'nothing'), ('.', '.')]


------------------- Sentence 4 -------------------

For it  to mean something, one needs specifics.

>> Tokens are: 
 ['For', 'mean', 'something', ',', 'one', 'needs', 'specifics', '.']

>> Bigrams are: 
 [('For', 'mean'), ('mean', 'something'), ('something', ','), (',', 'one'), ('one', 'needs'), ('needs', 'specifics'), ('specifics', '.')]

>> Trigrams are: 
 [('For', 'mean', 'something'), ('mean', 'something', ','), ('something', ',', 'one'), (',', 'one', 'needs'), ('one', 'needs', 'specifics'), ('needs', 'specifics', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('mean', 'JJ'), ('something', 'NN'), (',', ','), ('one', 'CD'), ('needs', 'VBZ'), ('specifics', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['mean something', 'specifics']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('mean', 'mean'), ('something', 'someth'), (',', ','), ('one', 'one'), ('needs', 'need'), ('specifics', 'specif'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('mean', 'mean'), ('something', 'someth'), (',', ','), ('one', 'one'), ('needs', 'need'), ('specifics', 'specif'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('mean', 'mean'), ('something', 'something'), (',', ','), ('one', 'one'), ('needs', 'need'), ('specifics', 'specific'), ('.', '.')]



========================================== PARAGRAPH 14 ===========================================

In this paper, the specific benefits of natural language in speech recognition  are explained and the approaches examined in detail. By the time you’ve  finished reading, you’ll understand natural language and how it can be  effective in improving the overall accuracy of your speech-based IVR system  while providing callers a more engaging experience. 

------------------- Sentence 1 -------------------

In this paper, the specific benefits of natural language in speech recognition  are explained and the approaches examined in detail.

>> Tokens are: 
 ['In', 'paper', ',', 'specific', 'benefits', 'natural', 'language', 'speech', 'recognition', 'explained', 'approaches', 'examined', 'detail', '.']

>> Bigrams are: 
 [('In', 'paper'), ('paper', ','), (',', 'specific'), ('specific', 'benefits'), ('benefits', 'natural'), ('natural', 'language'), ('language', 'speech'), ('speech', 'recognition'), ('recognition', 'explained'), ('explained', 'approaches'), ('approaches', 'examined'), ('examined', 'detail'), ('detail', '.')]

>> Trigrams are: 
 [('In', 'paper', ','), ('paper', ',', 'specific'), (',', 'specific', 'benefits'), ('specific', 'benefits', 'natural'), ('benefits', 'natural', 'language'), ('natural', 'language', 'speech'), ('language', 'speech', 'recognition'), ('speech', 'recognition', 'explained'), ('recognition', 'explained', 'approaches'), ('explained', 'approaches', 'examined'), ('approaches', 'examined', 'detail'), ('examined', 'detail', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('paper', 'NN'), (',', ','), ('specific', 'JJ'), ('benefits', 'NNS'), ('natural', 'JJ'), ('language', 'NN'), ('speech', 'NN'), ('recognition', 'NN'), ('explained', 'VBD'), ('approaches', 'NNS'), ('examined', 'VBD'), ('detail', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['paper', 'specific benefits', 'natural language speech recognition', 'approaches', 'detail']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('paper', 'paper'), (',', ','), ('specific', 'specif'), ('benefits', 'benefit'), ('natural', 'natur'), ('language', 'languag'), ('speech', 'speech'), ('recognition', 'recognit'), ('explained', 'explain'), ('approaches', 'approach'), ('examined', 'examin'), ('detail', 'detail'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('paper', 'paper'), (',', ','), ('specific', 'specif'), ('benefits', 'benefit'), ('natural', 'natur'), ('language', 'languag'), ('speech', 'speech'), ('recognition', 'recognit'), ('explained', 'explain'), ('approaches', 'approach'), ('examined', 'examin'), ('detail', 'detail'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('paper', 'paper'), (',', ','), ('specific', 'specific'), ('benefits', 'benefit'), ('natural', 'natural'), ('language', 'language'), ('speech', 'speech'), ('recognition', 'recognition'), ('explained', 'explained'), ('approaches', 'approach'), ('examined', 'examined'), ('detail', 'detail'), ('.', '.')]


------------------- Sentence 2 -------------------

By the time you’ve  finished reading, you’ll understand natural language and how it can be  effective in improving the overall accuracy of your speech-based IVR system  while providing callers a more engaging experience.

>> Tokens are: 
 ['By', 'time', '’', 'finished', 'reading', ',', '’', 'understand', 'natural', 'language', 'effective', 'improving', 'overall', 'accuracy', 'speech-based', 'IVR', 'system', 'providing', 'callers', 'engaging', 'experience', '.']

>> Bigrams are: 
 [('By', 'time'), ('time', '’'), ('’', 'finished'), ('finished', 'reading'), ('reading', ','), (',', '’'), ('’', 'understand'), ('understand', 'natural'), ('natural', 'language'), ('language', 'effective'), ('effective', 'improving'), ('improving', 'overall'), ('overall', 'accuracy'), ('accuracy', 'speech-based'), ('speech-based', 'IVR'), ('IVR', 'system'), ('system', 'providing'), ('providing', 'callers'), ('callers', 'engaging'), ('engaging', 'experience'), ('experience', '.')]

>> Trigrams are: 
 [('By', 'time', '’'), ('time', '’', 'finished'), ('’', 'finished', 'reading'), ('finished', 'reading', ','), ('reading', ',', '’'), (',', '’', 'understand'), ('’', 'understand', 'natural'), ('understand', 'natural', 'language'), ('natural', 'language', 'effective'), ('language', 'effective', 'improving'), ('effective', 'improving', 'overall'), ('improving', 'overall', 'accuracy'), ('overall', 'accuracy', 'speech-based'), ('accuracy', 'speech-based', 'IVR'), ('speech-based', 'IVR', 'system'), ('IVR', 'system', 'providing'), ('system', 'providing', 'callers'), ('providing', 'callers', 'engaging'), ('callers', 'engaging', 'experience'), ('engaging', 'experience', '.')]

>> POS Tags are: 
 [('By', 'IN'), ('time', 'NN'), ('’', 'NNS'), ('finished', 'VBD'), ('reading', 'NN'), (',', ','), ('’', 'NNP'), ('understand', 'VBP'), ('natural', 'JJ'), ('language', 'NN'), ('effective', 'JJ'), ('improving', 'VBG'), ('overall', 'JJ'), ('accuracy', 'NN'), ('speech-based', 'JJ'), ('IVR', 'NNP'), ('system', 'NN'), ('providing', 'VBG'), ('callers', 'NNS'), ('engaging', 'VBG'), ('experience', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['time ’', 'reading', '’', 'natural language', 'overall accuracy', 'speech-based IVR system', 'callers', 'experience']

>> Named Entities are: 
 [('ORGANIZATION', 'IVR')] 

>> Stemming using Porter Stemmer: 
 [('By', 'by'), ('time', 'time'), ('’', '’'), ('finished', 'finish'), ('reading', 'read'), (',', ','), ('’', '’'), ('understand', 'understand'), ('natural', 'natur'), ('language', 'languag'), ('effective', 'effect'), ('improving', 'improv'), ('overall', 'overal'), ('accuracy', 'accuraci'), ('speech-based', 'speech-bas'), ('IVR', 'ivr'), ('system', 'system'), ('providing', 'provid'), ('callers', 'caller'), ('engaging', 'engag'), ('experience', 'experi'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('By', 'by'), ('time', 'time'), ('’', '’'), ('finished', 'finish'), ('reading', 'read'), (',', ','), ('’', '’'), ('understand', 'understand'), ('natural', 'natur'), ('language', 'languag'), ('effective', 'effect'), ('improving', 'improv'), ('overall', 'overal'), ('accuracy', 'accuraci'), ('speech-based', 'speech-bas'), ('IVR', 'ivr'), ('system', 'system'), ('providing', 'provid'), ('callers', 'caller'), ('engaging', 'engag'), ('experience', 'experi'), ('.', '.')]

>> Lemmatization: 
 [('By', 'By'), ('time', 'time'), ('’', '’'), ('finished', 'finished'), ('reading', 'reading'), (',', ','), ('’', '’'), ('understand', 'understand'), ('natural', 'natural'), ('language', 'language'), ('effective', 'effective'), ('improving', 'improving'), ('overall', 'overall'), ('accuracy', 'accuracy'), ('speech-based', 'speech-based'), ('IVR', 'IVR'), ('system', 'system'), ('providing', 'providing'), ('callers', 'caller'), ('engaging', 'engaging'), ('experience', 'experience'), ('.', '.')]



========================================== PARAGRAPH 15 ===========================================

Speech-enabled automation Interactive Voice Response (IVR) systems are at the heart of today’s contact  center self-service solutions. Without IVR systems to automate calls, most  contact centers would be overwhelmed by operating costs and by angry  customers facing long queue times. But by automating common customer  service requests, customers can resolve many issues quickly and agents can  focus on helping the customers who truly need them. 

------------------- Sentence 1 -------------------

Speech-enabled automation Interactive Voice Response (IVR) systems are at the heart of today’s contact  center self-service solutions.

>> Tokens are: 
 ['Speech-enabled', 'automation', 'Interactive', 'Voice', 'Response', '(', 'IVR', ')', 'systems', 'heart', 'today', '’', 'contact', 'center', 'self-service', 'solutions', '.']

>> Bigrams are: 
 [('Speech-enabled', 'automation'), ('automation', 'Interactive'), ('Interactive', 'Voice'), ('Voice', 'Response'), ('Response', '('), ('(', 'IVR'), ('IVR', ')'), (')', 'systems'), ('systems', 'heart'), ('heart', 'today'), ('today', '’'), ('’', 'contact'), ('contact', 'center'), ('center', 'self-service'), ('self-service', 'solutions'), ('solutions', '.')]

>> Trigrams are: 
 [('Speech-enabled', 'automation', 'Interactive'), ('automation', 'Interactive', 'Voice'), ('Interactive', 'Voice', 'Response'), ('Voice', 'Response', '('), ('Response', '(', 'IVR'), ('(', 'IVR', ')'), ('IVR', ')', 'systems'), (')', 'systems', 'heart'), ('systems', 'heart', 'today'), ('heart', 'today', '’'), ('today', '’', 'contact'), ('’', 'contact', 'center'), ('contact', 'center', 'self-service'), ('center', 'self-service', 'solutions'), ('self-service', 'solutions', '.')]

>> POS Tags are: 
 [('Speech-enabled', 'JJ'), ('automation', 'NN'), ('Interactive', 'NNP'), ('Voice', 'NNP'), ('Response', 'NNP'), ('(', '('), ('IVR', 'NNP'), (')', ')'), ('systems', 'NNS'), ('heart', 'NN'), ('today', 'NN'), ('’', 'NNP'), ('contact', 'NN'), ('center', 'NN'), ('self-service', 'JJ'), ('solutions', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['Speech-enabled automation Interactive Voice Response', 'IVR', 'systems heart today ’ contact center', 'self-service solutions']

>> Named Entities are: 
 [('ORGANIZATION', 'Interactive'), ('ORGANIZATION', 'IVR')] 

>> Stemming using Porter Stemmer: 
 [('Speech-enabled', 'speech-en'), ('automation', 'autom'), ('Interactive', 'interact'), ('Voice', 'voic'), ('Response', 'respons'), ('(', '('), ('IVR', 'ivr'), (')', ')'), ('systems', 'system'), ('heart', 'heart'), ('today', 'today'), ('’', '’'), ('contact', 'contact'), ('center', 'center'), ('self-service', 'self-servic'), ('solutions', 'solut'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Speech-enabled', 'speech-en'), ('automation', 'autom'), ('Interactive', 'interact'), ('Voice', 'voic'), ('Response', 'respons'), ('(', '('), ('IVR', 'ivr'), (')', ')'), ('systems', 'system'), ('heart', 'heart'), ('today', 'today'), ('’', '’'), ('contact', 'contact'), ('center', 'center'), ('self-service', 'self-servic'), ('solutions', 'solut'), ('.', '.')]

>> Lemmatization: 
 [('Speech-enabled', 'Speech-enabled'), ('automation', 'automation'), ('Interactive', 'Interactive'), ('Voice', 'Voice'), ('Response', 'Response'), ('(', '('), ('IVR', 'IVR'), (')', ')'), ('systems', 'system'), ('heart', 'heart'), ('today', 'today'), ('’', '’'), ('contact', 'contact'), ('center', 'center'), ('self-service', 'self-service'), ('solutions', 'solution'), ('.', '.')]


------------------- Sentence 2 -------------------

Without IVR systems to automate calls, most  contact centers would be overwhelmed by operating costs and by angry  customers facing long queue times.

>> Tokens are: 
 ['Without', 'IVR', 'systems', 'automate', 'calls', ',', 'contact', 'centers', 'would', 'overwhelmed', 'operating', 'costs', 'angry', 'customers', 'facing', 'long', 'queue', 'times', '.']

>> Bigrams are: 
 [('Without', 'IVR'), ('IVR', 'systems'), ('systems', 'automate'), ('automate', 'calls'), ('calls', ','), (',', 'contact'), ('contact', 'centers'), ('centers', 'would'), ('would', 'overwhelmed'), ('overwhelmed', 'operating'), ('operating', 'costs'), ('costs', 'angry'), ('angry', 'customers'), ('customers', 'facing'), ('facing', 'long'), ('long', 'queue'), ('queue', 'times'), ('times', '.')]

>> Trigrams are: 
 [('Without', 'IVR', 'systems'), ('IVR', 'systems', 'automate'), ('systems', 'automate', 'calls'), ('automate', 'calls', ','), ('calls', ',', 'contact'), (',', 'contact', 'centers'), ('contact', 'centers', 'would'), ('centers', 'would', 'overwhelmed'), ('would', 'overwhelmed', 'operating'), ('overwhelmed', 'operating', 'costs'), ('operating', 'costs', 'angry'), ('costs', 'angry', 'customers'), ('angry', 'customers', 'facing'), ('customers', 'facing', 'long'), ('facing', 'long', 'queue'), ('long', 'queue', 'times'), ('queue', 'times', '.')]

>> POS Tags are: 
 [('Without', 'IN'), ('IVR', 'NNP'), ('systems', 'NNS'), ('automate', 'VBP'), ('calls', 'NNS'), (',', ','), ('contact', 'NN'), ('centers', 'NNS'), ('would', 'MD'), ('overwhelmed', 'VB'), ('operating', 'NN'), ('costs', 'NNS'), ('angry', 'JJ'), ('customers', 'NNS'), ('facing', 'VBG'), ('long', 'RB'), ('queue', 'JJ'), ('times', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['IVR systems', 'calls', 'contact centers', 'operating costs', 'angry customers', 'queue times']

>> Named Entities are: 
 [('ORGANIZATION', 'IVR')] 

>> Stemming using Porter Stemmer: 
 [('Without', 'without'), ('IVR', 'ivr'), ('systems', 'system'), ('automate', 'autom'), ('calls', 'call'), (',', ','), ('contact', 'contact'), ('centers', 'center'), ('would', 'would'), ('overwhelmed', 'overwhelm'), ('operating', 'oper'), ('costs', 'cost'), ('angry', 'angri'), ('customers', 'custom'), ('facing', 'face'), ('long', 'long'), ('queue', 'queue'), ('times', 'time'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Without', 'without'), ('IVR', 'ivr'), ('systems', 'system'), ('automate', 'autom'), ('calls', 'call'), (',', ','), ('contact', 'contact'), ('centers', 'center'), ('would', 'would'), ('overwhelmed', 'overwhelm'), ('operating', 'oper'), ('costs', 'cost'), ('angry', 'angri'), ('customers', 'custom'), ('facing', 'face'), ('long', 'long'), ('queue', 'queue'), ('times', 'time'), ('.', '.')]

>> Lemmatization: 
 [('Without', 'Without'), ('IVR', 'IVR'), ('systems', 'system'), ('automate', 'automate'), ('calls', 'call'), (',', ','), ('contact', 'contact'), ('centers', 'center'), ('would', 'would'), ('overwhelmed', 'overwhelmed'), ('operating', 'operating'), ('costs', 'cost'), ('angry', 'angry'), ('customers', 'customer'), ('facing', 'facing'), ('long', 'long'), ('queue', 'queue'), ('times', 'time'), ('.', '.')]


------------------- Sentence 3 -------------------

But by automating common customer  service requests, customers can resolve many issues quickly and agents can  focus on helping the customers who truly need them.

>> Tokens are: 
 ['But', 'automating', 'common', 'customer', 'service', 'requests', ',', 'customers', 'resolve', 'many', 'issues', 'quickly', 'agents', 'focus', 'helping', 'customers', 'truly', 'need', '.']

>> Bigrams are: 
 [('But', 'automating'), ('automating', 'common'), ('common', 'customer'), ('customer', 'service'), ('service', 'requests'), ('requests', ','), (',', 'customers'), ('customers', 'resolve'), ('resolve', 'many'), ('many', 'issues'), ('issues', 'quickly'), ('quickly', 'agents'), ('agents', 'focus'), ('focus', 'helping'), ('helping', 'customers'), ('customers', 'truly'), ('truly', 'need'), ('need', '.')]

>> Trigrams are: 
 [('But', 'automating', 'common'), ('automating', 'common', 'customer'), ('common', 'customer', 'service'), ('customer', 'service', 'requests'), ('service', 'requests', ','), ('requests', ',', 'customers'), (',', 'customers', 'resolve'), ('customers', 'resolve', 'many'), ('resolve', 'many', 'issues'), ('many', 'issues', 'quickly'), ('issues', 'quickly', 'agents'), ('quickly', 'agents', 'focus'), ('agents', 'focus', 'helping'), ('focus', 'helping', 'customers'), ('helping', 'customers', 'truly'), ('customers', 'truly', 'need'), ('truly', 'need', '.')]

>> POS Tags are: 
 [('But', 'CC'), ('automating', 'VBG'), ('common', 'JJ'), ('customer', 'NN'), ('service', 'NN'), ('requests', 'NNS'), (',', ','), ('customers', 'NNS'), ('resolve', 'VBP'), ('many', 'JJ'), ('issues', 'NNS'), ('quickly', 'RB'), ('agents', 'NNS'), ('focus', 'VBP'), ('helping', 'VBG'), ('customers', 'NNS'), ('truly', 'RB'), ('need', 'VBP'), ('.', '.')]

>> Noun Phrases are: 
 ['common customer service requests', 'customers', 'many issues', 'agents', 'customers']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('But', 'but'), ('automating', 'autom'), ('common', 'common'), ('customer', 'custom'), ('service', 'servic'), ('requests', 'request'), (',', ','), ('customers', 'custom'), ('resolve', 'resolv'), ('many', 'mani'), ('issues', 'issu'), ('quickly', 'quickli'), ('agents', 'agent'), ('focus', 'focu'), ('helping', 'help'), ('customers', 'custom'), ('truly', 'truli'), ('need', 'need'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('But', 'but'), ('automating', 'autom'), ('common', 'common'), ('customer', 'custom'), ('service', 'servic'), ('requests', 'request'), (',', ','), ('customers', 'custom'), ('resolve', 'resolv'), ('many', 'mani'), ('issues', 'issu'), ('quickly', 'quick'), ('agents', 'agent'), ('focus', 'focus'), ('helping', 'help'), ('customers', 'custom'), ('truly', 'truli'), ('need', 'need'), ('.', '.')]

>> Lemmatization: 
 [('But', 'But'), ('automating', 'automating'), ('common', 'common'), ('customer', 'customer'), ('service', 'service'), ('requests', 'request'), (',', ','), ('customers', 'customer'), ('resolve', 'resolve'), ('many', 'many'), ('issues', 'issue'), ('quickly', 'quickly'), ('agents', 'agent'), ('focus', 'focus'), ('helping', 'helping'), ('customers', 'customer'), ('truly', 'truly'), ('need', 'need'), ('.', '.')]



========================================== PARAGRAPH 16 ===========================================

Speech-enabled IVRs improve the overall automation rate of self-service  systems. Unlike an IVR with only touchtone options, a speech-based self-ser- vice system can handle more complex tasks, like updating an address, and  can simplifying existing tasks to further increase automation. The resulting  increase in automation rates mean more satisfied customers and lower costs  for the contact center. 

------------------- Sentence 1 -------------------

Speech-enabled IVRs improve the overall automation rate of self-service  systems.

>> Tokens are: 
 ['Speech-enabled', 'IVRs', 'improve', 'overall', 'automation', 'rate', 'self-service', 'systems', '.']

>> Bigrams are: 
 [('Speech-enabled', 'IVRs'), ('IVRs', 'improve'), ('improve', 'overall'), ('overall', 'automation'), ('automation', 'rate'), ('rate', 'self-service'), ('self-service', 'systems'), ('systems', '.')]

>> Trigrams are: 
 [('Speech-enabled', 'IVRs', 'improve'), ('IVRs', 'improve', 'overall'), ('improve', 'overall', 'automation'), ('overall', 'automation', 'rate'), ('automation', 'rate', 'self-service'), ('rate', 'self-service', 'systems'), ('self-service', 'systems', '.')]

>> POS Tags are: 
 [('Speech-enabled', 'JJ'), ('IVRs', 'NNP'), ('improve', 'VB'), ('overall', 'JJ'), ('automation', 'NN'), ('rate', 'NN'), ('self-service', 'JJ'), ('systems', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['Speech-enabled IVRs', 'overall automation rate', 'self-service systems']

>> Named Entities are: 
 [('ORGANIZATION', 'IVRs')] 

>> Stemming using Porter Stemmer: 
 [('Speech-enabled', 'speech-en'), ('IVRs', 'ivr'), ('improve', 'improv'), ('overall', 'overal'), ('automation', 'autom'), ('rate', 'rate'), ('self-service', 'self-servic'), ('systems', 'system'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Speech-enabled', 'speech-en'), ('IVRs', 'ivr'), ('improve', 'improv'), ('overall', 'overal'), ('automation', 'autom'), ('rate', 'rate'), ('self-service', 'self-servic'), ('systems', 'system'), ('.', '.')]

>> Lemmatization: 
 [('Speech-enabled', 'Speech-enabled'), ('IVRs', 'IVRs'), ('improve', 'improve'), ('overall', 'overall'), ('automation', 'automation'), ('rate', 'rate'), ('self-service', 'self-service'), ('systems', 'system'), ('.', '.')]


------------------- Sentence 2 -------------------

Unlike an IVR with only touchtone options, a speech-based self-ser- vice system can handle more complex tasks, like updating an address, and  can simplifying existing tasks to further increase automation.

>> Tokens are: 
 ['Unlike', 'IVR', 'touchtone', 'options', ',', 'speech-based', 'self-ser-', 'vice', 'system', 'handle', 'complex', 'tasks', ',', 'like', 'updating', 'address', ',', 'simplifying', 'existing', 'tasks', 'increase', 'automation', '.']

>> Bigrams are: 
 [('Unlike', 'IVR'), ('IVR', 'touchtone'), ('touchtone', 'options'), ('options', ','), (',', 'speech-based'), ('speech-based', 'self-ser-'), ('self-ser-', 'vice'), ('vice', 'system'), ('system', 'handle'), ('handle', 'complex'), ('complex', 'tasks'), ('tasks', ','), (',', 'like'), ('like', 'updating'), ('updating', 'address'), ('address', ','), (',', 'simplifying'), ('simplifying', 'existing'), ('existing', 'tasks'), ('tasks', 'increase'), ('increase', 'automation'), ('automation', '.')]

>> Trigrams are: 
 [('Unlike', 'IVR', 'touchtone'), ('IVR', 'touchtone', 'options'), ('touchtone', 'options', ','), ('options', ',', 'speech-based'), (',', 'speech-based', 'self-ser-'), ('speech-based', 'self-ser-', 'vice'), ('self-ser-', 'vice', 'system'), ('vice', 'system', 'handle'), ('system', 'handle', 'complex'), ('handle', 'complex', 'tasks'), ('complex', 'tasks', ','), ('tasks', ',', 'like'), (',', 'like', 'updating'), ('like', 'updating', 'address'), ('updating', 'address', ','), ('address', ',', 'simplifying'), (',', 'simplifying', 'existing'), ('simplifying', 'existing', 'tasks'), ('existing', 'tasks', 'increase'), ('tasks', 'increase', 'automation'), ('increase', 'automation', '.')]

>> POS Tags are: 
 [('Unlike', 'IN'), ('IVR', 'NNP'), ('touchtone', 'NN'), ('options', 'NNS'), (',', ','), ('speech-based', 'JJ'), ('self-ser-', 'JJ'), ('vice', 'NN'), ('system', 'NN'), ('handle', 'JJ'), ('complex', 'JJ'), ('tasks', 'NNS'), (',', ','), ('like', 'IN'), ('updating', 'VBG'), ('address', 'NN'), (',', ','), ('simplifying', 'VBG'), ('existing', 'VBG'), ('tasks', 'NNS'), ('increase', 'JJ'), ('automation', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['IVR touchtone options', 'speech-based self-ser- vice system', 'handle complex tasks', 'address', 'tasks', 'increase automation']

>> Named Entities are: 
 [('ORGANIZATION', 'IVR')] 

>> Stemming using Porter Stemmer: 
 [('Unlike', 'unlik'), ('IVR', 'ivr'), ('touchtone', 'touchton'), ('options', 'option'), (',', ','), ('speech-based', 'speech-bas'), ('self-ser-', 'self-ser-'), ('vice', 'vice'), ('system', 'system'), ('handle', 'handl'), ('complex', 'complex'), ('tasks', 'task'), (',', ','), ('like', 'like'), ('updating', 'updat'), ('address', 'address'), (',', ','), ('simplifying', 'simplifi'), ('existing', 'exist'), ('tasks', 'task'), ('increase', 'increas'), ('automation', 'autom'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unlike', 'unlik'), ('IVR', 'ivr'), ('touchtone', 'touchton'), ('options', 'option'), (',', ','), ('speech-based', 'speech-bas'), ('self-ser-', 'self-ser-'), ('vice', 'vice'), ('system', 'system'), ('handle', 'handl'), ('complex', 'complex'), ('tasks', 'task'), (',', ','), ('like', 'like'), ('updating', 'updat'), ('address', 'address'), (',', ','), ('simplifying', 'simplifi'), ('existing', 'exist'), ('tasks', 'task'), ('increase', 'increas'), ('automation', 'autom'), ('.', '.')]

>> Lemmatization: 
 [('Unlike', 'Unlike'), ('IVR', 'IVR'), ('touchtone', 'touchtone'), ('options', 'option'), (',', ','), ('speech-based', 'speech-based'), ('self-ser-', 'self-ser-'), ('vice', 'vice'), ('system', 'system'), ('handle', 'handle'), ('complex', 'complex'), ('tasks', 'task'), (',', ','), ('like', 'like'), ('updating', 'updating'), ('address', 'address'), (',', ','), ('simplifying', 'simplifying'), ('existing', 'existing'), ('tasks', 'task'), ('increase', 'increase'), ('automation', 'automation'), ('.', '.')]


------------------- Sentence 3 -------------------

The resulting  increase in automation rates mean more satisfied customers and lower costs  for the contact center.

>> Tokens are: 
 ['The', 'resulting', 'increase', 'automation', 'rates', 'mean', 'satisfied', 'customers', 'lower', 'costs', 'contact', 'center', '.']

>> Bigrams are: 
 [('The', 'resulting'), ('resulting', 'increase'), ('increase', 'automation'), ('automation', 'rates'), ('rates', 'mean'), ('mean', 'satisfied'), ('satisfied', 'customers'), ('customers', 'lower'), ('lower', 'costs'), ('costs', 'contact'), ('contact', 'center'), ('center', '.')]

>> Trigrams are: 
 [('The', 'resulting', 'increase'), ('resulting', 'increase', 'automation'), ('increase', 'automation', 'rates'), ('automation', 'rates', 'mean'), ('rates', 'mean', 'satisfied'), ('mean', 'satisfied', 'customers'), ('satisfied', 'customers', 'lower'), ('customers', 'lower', 'costs'), ('lower', 'costs', 'contact'), ('costs', 'contact', 'center'), ('contact', 'center', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('resulting', 'JJ'), ('increase', 'NN'), ('automation', 'NN'), ('rates', 'NNS'), ('mean', 'VBP'), ('satisfied', 'JJ'), ('customers', 'NNS'), ('lower', 'JJR'), ('costs', 'NNS'), ('contact', 'VBP'), ('center', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['The resulting increase automation rates', 'satisfied customers', 'costs', 'center']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('resulting', 'result'), ('increase', 'increas'), ('automation', 'autom'), ('rates', 'rate'), ('mean', 'mean'), ('satisfied', 'satisfi'), ('customers', 'custom'), ('lower', 'lower'), ('costs', 'cost'), ('contact', 'contact'), ('center', 'center'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('resulting', 'result'), ('increase', 'increas'), ('automation', 'autom'), ('rates', 'rate'), ('mean', 'mean'), ('satisfied', 'satisfi'), ('customers', 'custom'), ('lower', 'lower'), ('costs', 'cost'), ('contact', 'contact'), ('center', 'center'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('resulting', 'resulting'), ('increase', 'increase'), ('automation', 'automation'), ('rates', 'rate'), ('mean', 'mean'), ('satisfied', 'satisfied'), ('customers', 'customer'), ('lower', 'lower'), ('costs', 'cost'), ('contact', 'contact'), ('center', 'center'), ('.', '.')]



========================================== PARAGRAPH 17 ===========================================

Nevertheless, the automation rate can only be as good as the accuracy  during the caller’s entire interaction with a speech recognition system.  Several recognition factors can limit the automation rate of a speech system.  

------------------- Sentence 1 -------------------

Nevertheless, the automation rate can only be as good as the accuracy  during the caller’s entire interaction with a speech recognition system.

>> Tokens are: 
 ['Nevertheless', ',', 'automation', 'rate', 'good', 'accuracy', 'caller', '’', 'entire', 'interaction', 'speech', 'recognition', 'system', '.']

>> Bigrams are: 
 [('Nevertheless', ','), (',', 'automation'), ('automation', 'rate'), ('rate', 'good'), ('good', 'accuracy'), ('accuracy', 'caller'), ('caller', '’'), ('’', 'entire'), ('entire', 'interaction'), ('interaction', 'speech'), ('speech', 'recognition'), ('recognition', 'system'), ('system', '.')]

>> Trigrams are: 
 [('Nevertheless', ',', 'automation'), (',', 'automation', 'rate'), ('automation', 'rate', 'good'), ('rate', 'good', 'accuracy'), ('good', 'accuracy', 'caller'), ('accuracy', 'caller', '’'), ('caller', '’', 'entire'), ('’', 'entire', 'interaction'), ('entire', 'interaction', 'speech'), ('interaction', 'speech', 'recognition'), ('speech', 'recognition', 'system'), ('recognition', 'system', '.')]

>> POS Tags are: 
 [('Nevertheless', 'RB'), (',', ','), ('automation', 'NN'), ('rate', 'NN'), ('good', 'JJ'), ('accuracy', 'NN'), ('caller', 'NN'), ('’', 'NNP'), ('entire', 'JJ'), ('interaction', 'NN'), ('speech', 'NN'), ('recognition', 'NN'), ('system', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['automation rate', 'good accuracy caller ’', 'entire interaction speech recognition system']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Nevertheless', 'nevertheless'), (',', ','), ('automation', 'autom'), ('rate', 'rate'), ('good', 'good'), ('accuracy', 'accuraci'), ('caller', 'caller'), ('’', '’'), ('entire', 'entir'), ('interaction', 'interact'), ('speech', 'speech'), ('recognition', 'recognit'), ('system', 'system'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Nevertheless', 'nevertheless'), (',', ','), ('automation', 'autom'), ('rate', 'rate'), ('good', 'good'), ('accuracy', 'accuraci'), ('caller', 'caller'), ('’', '’'), ('entire', 'entir'), ('interaction', 'interact'), ('speech', 'speech'), ('recognition', 'recognit'), ('system', 'system'), ('.', '.')]

>> Lemmatization: 
 [('Nevertheless', 'Nevertheless'), (',', ','), ('automation', 'automation'), ('rate', 'rate'), ('good', 'good'), ('accuracy', 'accuracy'), ('caller', 'caller'), ('’', '’'), ('entire', 'entire'), ('interaction', 'interaction'), ('speech', 'speech'), ('recognition', 'recognition'), ('system', 'system'), ('.', '.')]


------------------- Sentence 2 -------------------

Several recognition factors can limit the automation rate of a speech system.

>> Tokens are: 
 ['Several', 'recognition', 'factors', 'limit', 'automation', 'rate', 'speech', 'system', '.']

>> Bigrams are: 
 [('Several', 'recognition'), ('recognition', 'factors'), ('factors', 'limit'), ('limit', 'automation'), ('automation', 'rate'), ('rate', 'speech'), ('speech', 'system'), ('system', '.')]

>> Trigrams are: 
 [('Several', 'recognition', 'factors'), ('recognition', 'factors', 'limit'), ('factors', 'limit', 'automation'), ('limit', 'automation', 'rate'), ('automation', 'rate', 'speech'), ('rate', 'speech', 'system'), ('speech', 'system', '.')]

>> POS Tags are: 
 [('Several', 'JJ'), ('recognition', 'NN'), ('factors', 'NNS'), ('limit', 'VBP'), ('automation', 'NN'), ('rate', 'NN'), ('speech', 'NN'), ('system', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['Several recognition factors', 'automation rate speech system']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Several', 'sever'), ('recognition', 'recognit'), ('factors', 'factor'), ('limit', 'limit'), ('automation', 'autom'), ('rate', 'rate'), ('speech', 'speech'), ('system', 'system'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Several', 'sever'), ('recognition', 'recognit'), ('factors', 'factor'), ('limit', 'limit'), ('automation', 'autom'), ('rate', 'rate'), ('speech', 'speech'), ('system', 'system'), ('.', '.')]

>> Lemmatization: 
 [('Several', 'Several'), ('recognition', 'recognition'), ('factors', 'factor'), ('limit', 'limit'), ('automation', 'automation'), ('rate', 'rate'), ('speech', 'speech'), ('system', 'system'), ('.', '.')]



========================================== PARAGRAPH 18 ===========================================

White PaperCustomer Service Solutions Natural language understanding2 

------------------- Sentence 1 -------------------

White PaperCustomer Service Solutions Natural language understanding2

>> Tokens are: 
 ['White', 'PaperCustomer', 'Service', 'Solutions', 'Natural', 'language', 'understanding2']

>> Bigrams are: 
 [('White', 'PaperCustomer'), ('PaperCustomer', 'Service'), ('Service', 'Solutions'), ('Solutions', 'Natural'), ('Natural', 'language'), ('language', 'understanding2')]

>> Trigrams are: 
 [('White', 'PaperCustomer', 'Service'), ('PaperCustomer', 'Service', 'Solutions'), ('Service', 'Solutions', 'Natural'), ('Solutions', 'Natural', 'language'), ('Natural', 'language', 'understanding2')]

>> POS Tags are: 
 [('White', 'NNP'), ('PaperCustomer', 'NNP'), ('Service', 'NNP'), ('Solutions', 'NNP'), ('Natural', 'NNP'), ('language', 'NN'), ('understanding2', 'NN')]

>> Noun Phrases are: 
 ['White PaperCustomer Service Solutions Natural language understanding2']

>> Named Entities are: 
 [('FACILITY', 'White'), ('ORGANIZATION', 'PaperCustomer Service Solutions Natural')] 

>> Stemming using Porter Stemmer: 
 [('White', 'white'), ('PaperCustomer', 'papercustom'), ('Service', 'servic'), ('Solutions', 'solut'), ('Natural', 'natur'), ('language', 'languag'), ('understanding2', 'understanding2')]

>> Stemming using Snowball Stemmer: 
 [('White', 'white'), ('PaperCustomer', 'papercustom'), ('Service', 'servic'), ('Solutions', 'solut'), ('Natural', 'natur'), ('language', 'languag'), ('understanding2', 'understanding2')]

>> Lemmatization: 
 [('White', 'White'), ('PaperCustomer', 'PaperCustomer'), ('Service', 'Service'), ('Solutions', 'Solutions'), ('Natural', 'Natural'), ('language', 'language'), ('understanding2', 'understanding2')]



========================================== PARAGRAPH 19 ===========================================

Automation Preferences “Which of the example systems do you find most appealing?” 

------------------- Sentence 1 -------------------

Automation Preferences “Which of the example systems do you find most appealing?”

>> Tokens are: 
 ['Automation', 'Preferences', '“', 'Which', 'example', 'systems', 'find', 'appealing', '?', '”']

>> Bigrams are: 
 [('Automation', 'Preferences'), ('Preferences', '“'), ('“', 'Which'), ('Which', 'example'), ('example', 'systems'), ('systems', 'find'), ('find', 'appealing'), ('appealing', '?'), ('?', '”')]

>> Trigrams are: 
 [('Automation', 'Preferences', '“'), ('Preferences', '“', 'Which'), ('“', 'Which', 'example'), ('Which', 'example', 'systems'), ('example', 'systems', 'find'), ('systems', 'find', 'appealing'), ('find', 'appealing', '?'), ('appealing', '?', '”')]

>> POS Tags are: 
 [('Automation', 'NN'), ('Preferences', 'NNS'), ('“', 'VBP'), ('Which', 'JJ'), ('example', 'NN'), ('systems', 'NNS'), ('find', 'VBP'), ('appealing', 'VBG'), ('?', '.'), ('”', 'NN')]

>> Noun Phrases are: 
 ['Automation Preferences', 'Which example systems', '”']

>> Named Entities are: 
 [('GPE', 'Automation'), ('PERSON', 'Which')] 

>> Stemming using Porter Stemmer: 
 [('Automation', 'autom'), ('Preferences', 'prefer'), ('“', '“'), ('Which', 'which'), ('example', 'exampl'), ('systems', 'system'), ('find', 'find'), ('appealing', 'appeal'), ('?', '?'), ('”', '”')]

>> Stemming using Snowball Stemmer: 
 [('Automation', 'autom'), ('Preferences', 'prefer'), ('“', '“'), ('Which', 'which'), ('example', 'exampl'), ('systems', 'system'), ('find', 'find'), ('appealing', 'appeal'), ('?', '?'), ('”', '”')]

>> Lemmatization: 
 [('Automation', 'Automation'), ('Preferences', 'Preferences'), ('“', '“'), ('Which', 'Which'), ('example', 'example'), ('systems', 'system'), ('find', 'find'), ('appealing', 'appealing'), ('?', '?'), ('”', '”')]



========================================== PARAGRAPH 20 ===========================================

Consumers found the  speech applications  overwhelmingly more appealing. 

------------------- Sentence 1 -------------------

Consumers found the  speech applications  overwhelmingly more appealing.

>> Tokens are: 
 ['Consumers', 'found', 'speech', 'applications', 'overwhelmingly', 'appealing', '.']

>> Bigrams are: 
 [('Consumers', 'found'), ('found', 'speech'), ('speech', 'applications'), ('applications', 'overwhelmingly'), ('overwhelmingly', 'appealing'), ('appealing', '.')]

>> Trigrams are: 
 [('Consumers', 'found', 'speech'), ('found', 'speech', 'applications'), ('speech', 'applications', 'overwhelmingly'), ('applications', 'overwhelmingly', 'appealing'), ('overwhelmingly', 'appealing', '.')]

>> POS Tags are: 
 [('Consumers', 'NNS'), ('found', 'VBD'), ('speech', 'NN'), ('applications', 'NNS'), ('overwhelmingly', 'RB'), ('appealing', 'VBG'), ('.', '.')]

>> Noun Phrases are: 
 ['Consumers', 'speech applications']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Consumers', 'consum'), ('found', 'found'), ('speech', 'speech'), ('applications', 'applic'), ('overwhelmingly', 'overwhelmingli'), ('appealing', 'appeal'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Consumers', 'consum'), ('found', 'found'), ('speech', 'speech'), ('applications', 'applic'), ('overwhelmingly', 'overwhelm'), ('appealing', 'appeal'), ('.', '.')]

>> Lemmatization: 
 [('Consumers', 'Consumers'), ('found', 'found'), ('speech', 'speech'), ('applications', 'application'), ('overwhelmingly', 'overwhelmingly'), ('appealing', 'appealing'), ('.', '.')]



========================================== PARAGRAPH 21 ===========================================

Source: Harris Interactive 

------------------- Sentence 1 -------------------

Source: Harris Interactive

>> Tokens are: 
 ['Source', ':', 'Harris', 'Interactive']

>> Bigrams are: 
 [('Source', ':'), (':', 'Harris'), ('Harris', 'Interactive')]

>> Trigrams are: 
 [('Source', ':', 'Harris'), (':', 'Harris', 'Interactive')]

>> POS Tags are: 
 [('Source', 'NN'), (':', ':'), ('Harris', 'NNP'), ('Interactive', 'NNP')]

>> Noun Phrases are: 
 ['Source', 'Harris Interactive']

>> Named Entities are: 
 [('GPE', 'Source'), ('PERSON', 'Harris Interactive')] 

>> Stemming using Porter Stemmer: 
 [('Source', 'sourc'), (':', ':'), ('Harris', 'harri'), ('Interactive', 'interact')]

>> Stemming using Snowball Stemmer: 
 [('Source', 'sourc'), (':', ':'), ('Harris', 'harri'), ('Interactive', 'interact')]

>> Lemmatization: 
 [('Source', 'Source'), (':', ':'), ('Harris', 'Harris'), ('Interactive', 'Interactive')]



========================================== PARAGRAPH 22 ===========================================

41%Natural Language 

------------------- Sentence 1 -------------------

41%Natural Language

>> Tokens are: 
 ['41', '%', 'Natural', 'Language']

>> Bigrams are: 
 [('41', '%'), ('%', 'Natural'), ('Natural', 'Language')]

>> Trigrams are: 
 [('41', '%', 'Natural'), ('%', 'Natural', 'Language')]

>> POS Tags are: 
 [('41', 'CD'), ('%', 'NN'), ('Natural', 'NNP'), ('Language', 'NNP')]

>> Noun Phrases are: 
 ['% Natural Language']

>> Named Entities are: 
 [('ORGANIZATION', 'Natural Language')] 

>> Stemming using Porter Stemmer: 
 [('41', '41'), ('%', '%'), ('Natural', 'natur'), ('Language', 'languag')]

>> Stemming using Snowball Stemmer: 
 [('41', '41'), ('%', '%'), ('Natural', 'natur'), ('Language', 'languag')]

>> Lemmatization: 
 [('41', '41'), ('%', '%'), ('Natural', 'Natural'), ('Language', 'Language')]



========================================== PARAGRAPH 23 ===========================================

38%Directed dialog 

------------------- Sentence 1 -------------------

38%Directed dialog

>> Tokens are: 
 ['38', '%', 'Directed', 'dialog']

>> Bigrams are: 
 [('38', '%'), ('%', 'Directed'), ('Directed', 'dialog')]

>> Trigrams are: 
 [('38', '%', 'Directed'), ('%', 'Directed', 'dialog')]

>> POS Tags are: 
 [('38', 'CD'), ('%', 'NN'), ('Directed', 'NNP'), ('dialog', 'NN')]

>> Noun Phrases are: 
 ['% Directed dialog']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('38', '38'), ('%', '%'), ('Directed', 'direct'), ('dialog', 'dialog')]

>> Stemming using Snowball Stemmer: 
 [('38', '38'), ('%', '%'), ('Directed', 'direct'), ('dialog', 'dialog')]

>> Lemmatization: 
 [('38', '38'), ('%', '%'), ('Directed', 'Directed'), ('dialog', 'dialog')]



========================================== PARAGRAPH 24 ===========================================

20%Touch tone

------------------- Sentence 1 -------------------

20%Touch tone

>> Tokens are: 
 ['20', '%', 'Touch', 'tone']

>> Bigrams are: 
 [('20', '%'), ('%', 'Touch'), ('Touch', 'tone')]

>> Trigrams are: 
 [('20', '%', 'Touch'), ('%', 'Touch', 'tone')]

>> POS Tags are: 
 [('20', 'CD'), ('%', 'NN'), ('Touch', 'NNP'), ('tone', 'NN')]

>> Noun Phrases are: 
 ['% Touch tone']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('20', '20'), ('%', '%'), ('Touch', 'touch'), ('tone', 'tone')]

>> Stemming using Snowball Stemmer: 
 [('20', '20'), ('%', '%'), ('Touch', 'touch'), ('tone', 'tone')]

>> Lemmatization: 
 [('20', '20'), ('%', '%'), ('Touch', 'Touch'), ('tone', 'tone')]



========================================== PARAGRAPH 25 ===========================================

Noisy backgrounds, confused callers, very heavy accents, and mumbled  responses can make it hard for a system to complete a call. Of course, those  factors can affect the ability of a live agent to complete those calls as well.  And despite much advancement in technology, it is still possible for a speech  recognition engine to simply make a mistake. 

------------------- Sentence 1 -------------------

Noisy backgrounds, confused callers, very heavy accents, and mumbled  responses can make it hard for a system to complete a call.

>> Tokens are: 
 ['Noisy', 'backgrounds', ',', 'confused', 'callers', ',', 'heavy', 'accents', ',', 'mumbled', 'responses', 'make', 'hard', 'system', 'complete', 'call', '.']

>> Bigrams are: 
 [('Noisy', 'backgrounds'), ('backgrounds', ','), (',', 'confused'), ('confused', 'callers'), ('callers', ','), (',', 'heavy'), ('heavy', 'accents'), ('accents', ','), (',', 'mumbled'), ('mumbled', 'responses'), ('responses', 'make'), ('make', 'hard'), ('hard', 'system'), ('system', 'complete'), ('complete', 'call'), ('call', '.')]

>> Trigrams are: 
 [('Noisy', 'backgrounds', ','), ('backgrounds', ',', 'confused'), (',', 'confused', 'callers'), ('confused', 'callers', ','), ('callers', ',', 'heavy'), (',', 'heavy', 'accents'), ('heavy', 'accents', ','), ('accents', ',', 'mumbled'), (',', 'mumbled', 'responses'), ('mumbled', 'responses', 'make'), ('responses', 'make', 'hard'), ('make', 'hard', 'system'), ('hard', 'system', 'complete'), ('system', 'complete', 'call'), ('complete', 'call', '.')]

>> POS Tags are: 
 [('Noisy', 'NNP'), ('backgrounds', 'NNS'), (',', ','), ('confused', 'VBD'), ('callers', 'NNS'), (',', ','), ('heavy', 'JJ'), ('accents', 'NNS'), (',', ','), ('mumbled', 'VBD'), ('responses', 'NNS'), ('make', 'VBP'), ('hard', 'JJ'), ('system', 'NN'), ('complete', 'JJ'), ('call', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['Noisy backgrounds', 'callers', 'heavy accents', 'responses', 'hard system', 'complete call']

>> Named Entities are: 
 [('GPE', 'Noisy')] 

>> Stemming using Porter Stemmer: 
 [('Noisy', 'noisi'), ('backgrounds', 'background'), (',', ','), ('confused', 'confus'), ('callers', 'caller'), (',', ','), ('heavy', 'heavi'), ('accents', 'accent'), (',', ','), ('mumbled', 'mumbl'), ('responses', 'respons'), ('make', 'make'), ('hard', 'hard'), ('system', 'system'), ('complete', 'complet'), ('call', 'call'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Noisy', 'noisi'), ('backgrounds', 'background'), (',', ','), ('confused', 'confus'), ('callers', 'caller'), (',', ','), ('heavy', 'heavi'), ('accents', 'accent'), (',', ','), ('mumbled', 'mumbl'), ('responses', 'respons'), ('make', 'make'), ('hard', 'hard'), ('system', 'system'), ('complete', 'complet'), ('call', 'call'), ('.', '.')]

>> Lemmatization: 
 [('Noisy', 'Noisy'), ('backgrounds', 'background'), (',', ','), ('confused', 'confused'), ('callers', 'caller'), (',', ','), ('heavy', 'heavy'), ('accents', 'accent'), (',', ','), ('mumbled', 'mumbled'), ('responses', 'response'), ('make', 'make'), ('hard', 'hard'), ('system', 'system'), ('complete', 'complete'), ('call', 'call'), ('.', '.')]


------------------- Sentence 2 -------------------

Of course, those  factors can affect the ability of a live agent to complete those calls as well.

>> Tokens are: 
 ['Of', 'course', ',', 'factors', 'affect', 'ability', 'live', 'agent', 'complete', 'calls', 'well', '.']

>> Bigrams are: 
 [('Of', 'course'), ('course', ','), (',', 'factors'), ('factors', 'affect'), ('affect', 'ability'), ('ability', 'live'), ('live', 'agent'), ('agent', 'complete'), ('complete', 'calls'), ('calls', 'well'), ('well', '.')]

>> Trigrams are: 
 [('Of', 'course', ','), ('course', ',', 'factors'), (',', 'factors', 'affect'), ('factors', 'affect', 'ability'), ('affect', 'ability', 'live'), ('ability', 'live', 'agent'), ('live', 'agent', 'complete'), ('agent', 'complete', 'calls'), ('complete', 'calls', 'well'), ('calls', 'well', '.')]

>> POS Tags are: 
 [('Of', 'IN'), ('course', 'NN'), (',', ','), ('factors', 'NNS'), ('affect', 'VBP'), ('ability', 'NN'), ('live', 'VBP'), ('agent', 'NN'), ('complete', 'JJ'), ('calls', 'VBZ'), ('well', 'RB'), ('.', '.')]

>> Noun Phrases are: 
 ['course', 'factors', 'ability', 'agent']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Of', 'of'), ('course', 'cours'), (',', ','), ('factors', 'factor'), ('affect', 'affect'), ('ability', 'abil'), ('live', 'live'), ('agent', 'agent'), ('complete', 'complet'), ('calls', 'call'), ('well', 'well'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Of', 'of'), ('course', 'cours'), (',', ','), ('factors', 'factor'), ('affect', 'affect'), ('ability', 'abil'), ('live', 'live'), ('agent', 'agent'), ('complete', 'complet'), ('calls', 'call'), ('well', 'well'), ('.', '.')]

>> Lemmatization: 
 [('Of', 'Of'), ('course', 'course'), (',', ','), ('factors', 'factor'), ('affect', 'affect'), ('ability', 'ability'), ('live', 'live'), ('agent', 'agent'), ('complete', 'complete'), ('calls', 'call'), ('well', 'well'), ('.', '.')]


------------------- Sentence 3 -------------------

And despite much advancement in technology, it is still possible for a speech  recognition engine to simply make a mistake.

>> Tokens are: 
 ['And', 'despite', 'much', 'advancement', 'technology', ',', 'still', 'possible', 'speech', 'recognition', 'engine', 'simply', 'make', 'mistake', '.']

>> Bigrams are: 
 [('And', 'despite'), ('despite', 'much'), ('much', 'advancement'), ('advancement', 'technology'), ('technology', ','), (',', 'still'), ('still', 'possible'), ('possible', 'speech'), ('speech', 'recognition'), ('recognition', 'engine'), ('engine', 'simply'), ('simply', 'make'), ('make', 'mistake'), ('mistake', '.')]

>> Trigrams are: 
 [('And', 'despite', 'much'), ('despite', 'much', 'advancement'), ('much', 'advancement', 'technology'), ('advancement', 'technology', ','), ('technology', ',', 'still'), (',', 'still', 'possible'), ('still', 'possible', 'speech'), ('possible', 'speech', 'recognition'), ('speech', 'recognition', 'engine'), ('recognition', 'engine', 'simply'), ('engine', 'simply', 'make'), ('simply', 'make', 'mistake'), ('make', 'mistake', '.')]

>> POS Tags are: 
 [('And', 'CC'), ('despite', 'IN'), ('much', 'JJ'), ('advancement', 'NN'), ('technology', 'NN'), (',', ','), ('still', 'RB'), ('possible', 'JJ'), ('speech', 'NN'), ('recognition', 'NN'), ('engine', 'NN'), ('simply', 'RB'), ('make', 'VB'), ('mistake', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['much advancement technology', 'possible speech recognition engine', 'mistake']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('And', 'and'), ('despite', 'despit'), ('much', 'much'), ('advancement', 'advanc'), ('technology', 'technolog'), (',', ','), ('still', 'still'), ('possible', 'possibl'), ('speech', 'speech'), ('recognition', 'recognit'), ('engine', 'engin'), ('simply', 'simpli'), ('make', 'make'), ('mistake', 'mistak'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('And', 'and'), ('despite', 'despit'), ('much', 'much'), ('advancement', 'advanc'), ('technology', 'technolog'), (',', ','), ('still', 'still'), ('possible', 'possibl'), ('speech', 'speech'), ('recognition', 'recognit'), ('engine', 'engin'), ('simply', 'simpli'), ('make', 'make'), ('mistake', 'mistak'), ('.', '.')]

>> Lemmatization: 
 [('And', 'And'), ('despite', 'despite'), ('much', 'much'), ('advancement', 'advancement'), ('technology', 'technology'), (',', ','), ('still', 'still'), ('possible', 'possible'), ('speech', 'speech'), ('recognition', 'recognition'), ('engine', 'engine'), ('simply', 'simply'), ('make', 'make'), ('mistake', 'mistake'), ('.', '.')]



========================================== PARAGRAPH 26 ===========================================

Learning to speak customer-ese As all contact center agents know, callers truly believe they are speaking in  a clear and obvious manner when they are explaining their concerns. In fact,  each caller is really speaking in ‘customer-ese’, their own personal dialect  that agents and IVR systems need to decode. This interpretation process  is very similar to learning a new foreign language. To address the challenge  many speech recognition systems have a list of acceptable phrases, known  as the grammar, that the system is programmed to recognize at any given  time. Grammars ensure that a speech recognition engine knows that the  phrase “new to speech” is not a “nudist beach”, and that “agent,” “operator,”  and “I want to speak to someone” all direct the caller to a live person. 

------------------- Sentence 1 -------------------

Learning to speak customer-ese As all contact center agents know, callers truly believe they are speaking in  a clear and obvious manner when they are explaining their concerns.

>> Tokens are: 
 ['Learning', 'speak', 'customer-ese', 'As', 'contact', 'center', 'agents', 'know', ',', 'callers', 'truly', 'believe', 'speaking', 'clear', 'obvious', 'manner', 'explaining', 'concerns', '.']

>> Bigrams are: 
 [('Learning', 'speak'), ('speak', 'customer-ese'), ('customer-ese', 'As'), ('As', 'contact'), ('contact', 'center'), ('center', 'agents'), ('agents', 'know'), ('know', ','), (',', 'callers'), ('callers', 'truly'), ('truly', 'believe'), ('believe', 'speaking'), ('speaking', 'clear'), ('clear', 'obvious'), ('obvious', 'manner'), ('manner', 'explaining'), ('explaining', 'concerns'), ('concerns', '.')]

>> Trigrams are: 
 [('Learning', 'speak', 'customer-ese'), ('speak', 'customer-ese', 'As'), ('customer-ese', 'As', 'contact'), ('As', 'contact', 'center'), ('contact', 'center', 'agents'), ('center', 'agents', 'know'), ('agents', 'know', ','), ('know', ',', 'callers'), (',', 'callers', 'truly'), ('callers', 'truly', 'believe'), ('truly', 'believe', 'speaking'), ('believe', 'speaking', 'clear'), ('speaking', 'clear', 'obvious'), ('clear', 'obvious', 'manner'), ('obvious', 'manner', 'explaining'), ('manner', 'explaining', 'concerns'), ('explaining', 'concerns', '.')]

>> POS Tags are: 
 [('Learning', 'VBG'), ('speak', 'JJ'), ('customer-ese', 'JJ'), ('As', 'IN'), ('contact', 'NN'), ('center', 'NN'), ('agents', 'NNS'), ('know', 'VBP'), (',', ','), ('callers', 'NNS'), ('truly', 'RB'), ('believe', 'VBP'), ('speaking', 'VBG'), ('clear', 'JJ'), ('obvious', 'JJ'), ('manner', 'NN'), ('explaining', 'VBG'), ('concerns', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['contact center agents', 'callers', 'clear obvious manner', 'concerns']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Learning', 'learn'), ('speak', 'speak'), ('customer-ese', 'customer-es'), ('As', 'as'), ('contact', 'contact'), ('center', 'center'), ('agents', 'agent'), ('know', 'know'), (',', ','), ('callers', 'caller'), ('truly', 'truli'), ('believe', 'believ'), ('speaking', 'speak'), ('clear', 'clear'), ('obvious', 'obviou'), ('manner', 'manner'), ('explaining', 'explain'), ('concerns', 'concern'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Learning', 'learn'), ('speak', 'speak'), ('customer-ese', 'customer-es'), ('As', 'as'), ('contact', 'contact'), ('center', 'center'), ('agents', 'agent'), ('know', 'know'), (',', ','), ('callers', 'caller'), ('truly', 'truli'), ('believe', 'believ'), ('speaking', 'speak'), ('clear', 'clear'), ('obvious', 'obvious'), ('manner', 'manner'), ('explaining', 'explain'), ('concerns', 'concern'), ('.', '.')]

>> Lemmatization: 
 [('Learning', 'Learning'), ('speak', 'speak'), ('customer-ese', 'customer-ese'), ('As', 'As'), ('contact', 'contact'), ('center', 'center'), ('agents', 'agent'), ('know', 'know'), (',', ','), ('callers', 'caller'), ('truly', 'truly'), ('believe', 'believe'), ('speaking', 'speaking'), ('clear', 'clear'), ('obvious', 'obvious'), ('manner', 'manner'), ('explaining', 'explaining'), ('concerns', 'concern'), ('.', '.')]


------------------- Sentence 2 -------------------

In fact,  each caller is really speaking in ‘customer-ese’, their own personal dialect  that agents and IVR systems need to decode.

>> Tokens are: 
 ['In', 'fact', ',', 'caller', 'really', 'speaking', '‘', 'customer-ese', '’', ',', 'personal', 'dialect', 'agents', 'IVR', 'systems', 'need', 'decode', '.']

>> Bigrams are: 
 [('In', 'fact'), ('fact', ','), (',', 'caller'), ('caller', 'really'), ('really', 'speaking'), ('speaking', '‘'), ('‘', 'customer-ese'), ('customer-ese', '’'), ('’', ','), (',', 'personal'), ('personal', 'dialect'), ('dialect', 'agents'), ('agents', 'IVR'), ('IVR', 'systems'), ('systems', 'need'), ('need', 'decode'), ('decode', '.')]

>> Trigrams are: 
 [('In', 'fact', ','), ('fact', ',', 'caller'), (',', 'caller', 'really'), ('caller', 'really', 'speaking'), ('really', 'speaking', '‘'), ('speaking', '‘', 'customer-ese'), ('‘', 'customer-ese', '’'), ('customer-ese', '’', ','), ('’', ',', 'personal'), (',', 'personal', 'dialect'), ('personal', 'dialect', 'agents'), ('dialect', 'agents', 'IVR'), ('agents', 'IVR', 'systems'), ('IVR', 'systems', 'need'), ('systems', 'need', 'decode'), ('need', 'decode', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('fact', 'NN'), (',', ','), ('caller', 'NN'), ('really', 'RB'), ('speaking', 'VBG'), ('‘', 'JJ'), ('customer-ese', 'JJ'), ('’', 'NN'), (',', ','), ('personal', 'JJ'), ('dialect', 'NN'), ('agents', 'NNS'), ('IVR', 'NNP'), ('systems', 'NNS'), ('need', 'VBP'), ('decode', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['fact', 'caller', '‘ customer-ese ’', 'personal dialect agents IVR systems', 'decode']

>> Named Entities are: 
 [('ORGANIZATION', 'IVR')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('fact', 'fact'), (',', ','), ('caller', 'caller'), ('really', 'realli'), ('speaking', 'speak'), ('‘', '‘'), ('customer-ese', 'customer-es'), ('’', '’'), (',', ','), ('personal', 'person'), ('dialect', 'dialect'), ('agents', 'agent'), ('IVR', 'ivr'), ('systems', 'system'), ('need', 'need'), ('decode', 'decod'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('fact', 'fact'), (',', ','), ('caller', 'caller'), ('really', 'realli'), ('speaking', 'speak'), ('‘', '‘'), ('customer-ese', 'customer-es'), ('’', '’'), (',', ','), ('personal', 'person'), ('dialect', 'dialect'), ('agents', 'agent'), ('IVR', 'ivr'), ('systems', 'system'), ('need', 'need'), ('decode', 'decod'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('fact', 'fact'), (',', ','), ('caller', 'caller'), ('really', 'really'), ('speaking', 'speaking'), ('‘', '‘'), ('customer-ese', 'customer-ese'), ('’', '’'), (',', ','), ('personal', 'personal'), ('dialect', 'dialect'), ('agents', 'agent'), ('IVR', 'IVR'), ('systems', 'system'), ('need', 'need'), ('decode', 'decode'), ('.', '.')]


------------------- Sentence 3 -------------------

This interpretation process  is very similar to learning a new foreign language.

>> Tokens are: 
 ['This', 'interpretation', 'process', 'similar', 'learning', 'new', 'foreign', 'language', '.']

>> Bigrams are: 
 [('This', 'interpretation'), ('interpretation', 'process'), ('process', 'similar'), ('similar', 'learning'), ('learning', 'new'), ('new', 'foreign'), ('foreign', 'language'), ('language', '.')]

>> Trigrams are: 
 [('This', 'interpretation', 'process'), ('interpretation', 'process', 'similar'), ('process', 'similar', 'learning'), ('similar', 'learning', 'new'), ('learning', 'new', 'foreign'), ('new', 'foreign', 'language'), ('foreign', 'language', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('interpretation', 'NN'), ('process', 'NN'), ('similar', 'JJ'), ('learning', 'VBG'), ('new', 'JJ'), ('foreign', 'JJ'), ('language', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['This interpretation process', 'new foreign language']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('interpretation', 'interpret'), ('process', 'process'), ('similar', 'similar'), ('learning', 'learn'), ('new', 'new'), ('foreign', 'foreign'), ('language', 'languag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('interpretation', 'interpret'), ('process', 'process'), ('similar', 'similar'), ('learning', 'learn'), ('new', 'new'), ('foreign', 'foreign'), ('language', 'languag'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('interpretation', 'interpretation'), ('process', 'process'), ('similar', 'similar'), ('learning', 'learning'), ('new', 'new'), ('foreign', 'foreign'), ('language', 'language'), ('.', '.')]


------------------- Sentence 4 -------------------

To address the challenge  many speech recognition systems have a list of acceptable phrases, known  as the grammar, that the system is programmed to recognize at any given  time.

>> Tokens are: 
 ['To', 'address', 'challenge', 'many', 'speech', 'recognition', 'systems', 'list', 'acceptable', 'phrases', ',', 'known', 'grammar', ',', 'system', 'programmed', 'recognize', 'given', 'time', '.']

>> Bigrams are: 
 [('To', 'address'), ('address', 'challenge'), ('challenge', 'many'), ('many', 'speech'), ('speech', 'recognition'), ('recognition', 'systems'), ('systems', 'list'), ('list', 'acceptable'), ('acceptable', 'phrases'), ('phrases', ','), (',', 'known'), ('known', 'grammar'), ('grammar', ','), (',', 'system'), ('system', 'programmed'), ('programmed', 'recognize'), ('recognize', 'given'), ('given', 'time'), ('time', '.')]

>> Trigrams are: 
 [('To', 'address', 'challenge'), ('address', 'challenge', 'many'), ('challenge', 'many', 'speech'), ('many', 'speech', 'recognition'), ('speech', 'recognition', 'systems'), ('recognition', 'systems', 'list'), ('systems', 'list', 'acceptable'), ('list', 'acceptable', 'phrases'), ('acceptable', 'phrases', ','), ('phrases', ',', 'known'), (',', 'known', 'grammar'), ('known', 'grammar', ','), ('grammar', ',', 'system'), (',', 'system', 'programmed'), ('system', 'programmed', 'recognize'), ('programmed', 'recognize', 'given'), ('recognize', 'given', 'time'), ('given', 'time', '.')]

>> POS Tags are: 
 [('To', 'TO'), ('address', 'VB'), ('challenge', 'VB'), ('many', 'JJ'), ('speech', 'JJ'), ('recognition', 'NN'), ('systems', 'NNS'), ('list', 'RBR'), ('acceptable', 'JJ'), ('phrases', 'NNS'), (',', ','), ('known', 'VBN'), ('grammar', 'NN'), (',', ','), ('system', 'NN'), ('programmed', 'VBD'), ('recognize', 'VB'), ('given', 'VBN'), ('time', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['many speech recognition systems', 'acceptable phrases', 'grammar', 'system', 'time']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('To', 'to'), ('address', 'address'), ('challenge', 'challeng'), ('many', 'mani'), ('speech', 'speech'), ('recognition', 'recognit'), ('systems', 'system'), ('list', 'list'), ('acceptable', 'accept'), ('phrases', 'phrase'), (',', ','), ('known', 'known'), ('grammar', 'grammar'), (',', ','), ('system', 'system'), ('programmed', 'program'), ('recognize', 'recogn'), ('given', 'given'), ('time', 'time'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('To', 'to'), ('address', 'address'), ('challenge', 'challeng'), ('many', 'mani'), ('speech', 'speech'), ('recognition', 'recognit'), ('systems', 'system'), ('list', 'list'), ('acceptable', 'accept'), ('phrases', 'phrase'), (',', ','), ('known', 'known'), ('grammar', 'grammar'), (',', ','), ('system', 'system'), ('programmed', 'program'), ('recognize', 'recogn'), ('given', 'given'), ('time', 'time'), ('.', '.')]

>> Lemmatization: 
 [('To', 'To'), ('address', 'address'), ('challenge', 'challenge'), ('many', 'many'), ('speech', 'speech'), ('recognition', 'recognition'), ('systems', 'system'), ('list', 'list'), ('acceptable', 'acceptable'), ('phrases', 'phrase'), (',', ','), ('known', 'known'), ('grammar', 'grammar'), (',', ','), ('system', 'system'), ('programmed', 'programmed'), ('recognize', 'recognize'), ('given', 'given'), ('time', 'time'), ('.', '.')]


------------------- Sentence 5 -------------------

Grammars ensure that a speech recognition engine knows that the  phrase “new to speech” is not a “nudist beach”, and that “agent,” “operator,”  and “I want to speak to someone” all direct the caller to a live person.

>> Tokens are: 
 ['Grammars', 'ensure', 'speech', 'recognition', 'engine', 'knows', 'phrase', '“', 'new', 'speech', '”', '“', 'nudist', 'beach', '”', ',', '“', 'agent', ',', '”', '“', 'operator', ',', '”', '“', 'I', 'want', 'speak', 'someone', '”', 'direct', 'caller', 'live', 'person', '.']

>> Bigrams are: 
 [('Grammars', 'ensure'), ('ensure', 'speech'), ('speech', 'recognition'), ('recognition', 'engine'), ('engine', 'knows'), ('knows', 'phrase'), ('phrase', '“'), ('“', 'new'), ('new', 'speech'), ('speech', '”'), ('”', '“'), ('“', 'nudist'), ('nudist', 'beach'), ('beach', '”'), ('”', ','), (',', '“'), ('“', 'agent'), ('agent', ','), (',', '”'), ('”', '“'), ('“', 'operator'), ('operator', ','), (',', '”'), ('”', '“'), ('“', 'I'), ('I', 'want'), ('want', 'speak'), ('speak', 'someone'), ('someone', '”'), ('”', 'direct'), ('direct', 'caller'), ('caller', 'live'), ('live', 'person'), ('person', '.')]

>> Trigrams are: 
 [('Grammars', 'ensure', 'speech'), ('ensure', 'speech', 'recognition'), ('speech', 'recognition', 'engine'), ('recognition', 'engine', 'knows'), ('engine', 'knows', 'phrase'), ('knows', 'phrase', '“'), ('phrase', '“', 'new'), ('“', 'new', 'speech'), ('new', 'speech', '”'), ('speech', '”', '“'), ('”', '“', 'nudist'), ('“', 'nudist', 'beach'), ('nudist', 'beach', '”'), ('beach', '”', ','), ('”', ',', '“'), (',', '“', 'agent'), ('“', 'agent', ','), ('agent', ',', '”'), (',', '”', '“'), ('”', '“', 'operator'), ('“', 'operator', ','), ('operator', ',', '”'), (',', '”', '“'), ('”', '“', 'I'), ('“', 'I', 'want'), ('I', 'want', 'speak'), ('want', 'speak', 'someone'), ('speak', 'someone', '”'), ('someone', '”', 'direct'), ('”', 'direct', 'caller'), ('direct', 'caller', 'live'), ('caller', 'live', 'person'), ('live', 'person', '.')]

>> POS Tags are: 
 [('Grammars', 'NNP'), ('ensure', 'VB'), ('speech', 'JJ'), ('recognition', 'NN'), ('engine', 'NN'), ('knows', 'VBZ'), ('phrase', 'VB'), ('“', 'JJ'), ('new', 'JJ'), ('speech', 'NN'), ('”', 'NNP'), ('“', 'NNP'), ('nudist', 'JJ'), ('beach', 'NN'), ('”', 'NN'), (',', ','), ('“', 'NNP'), ('agent', 'NN'), (',', ','), ('”', 'NNP'), ('“', 'NNP'), ('operator', 'NN'), (',', ','), ('”', 'NNP'), ('“', 'NNP'), ('I', 'PRP'), ('want', 'VBP'), ('speak', 'JJ'), ('someone', 'NN'), ('”', 'NNP'), ('direct', 'JJ'), ('caller', 'NN'), ('live', 'JJ'), ('person', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['Grammars', 'speech recognition engine', '“ new speech ” “', 'nudist beach ”', '“ agent', '” “ operator', '” “', 'speak someone ”', 'direct caller', 'live person']

>> Named Entities are: 
 [('GPE', 'Grammars')] 

>> Stemming using Porter Stemmer: 
 [('Grammars', 'grammar'), ('ensure', 'ensur'), ('speech', 'speech'), ('recognition', 'recognit'), ('engine', 'engin'), ('knows', 'know'), ('phrase', 'phrase'), ('“', '“'), ('new', 'new'), ('speech', 'speech'), ('”', '”'), ('“', '“'), ('nudist', 'nudist'), ('beach', 'beach'), ('”', '”'), (',', ','), ('“', '“'), ('agent', 'agent'), (',', ','), ('”', '”'), ('“', '“'), ('operator', 'oper'), (',', ','), ('”', '”'), ('“', '“'), ('I', 'i'), ('want', 'want'), ('speak', 'speak'), ('someone', 'someon'), ('”', '”'), ('direct', 'direct'), ('caller', 'caller'), ('live', 'live'), ('person', 'person'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Grammars', 'grammar'), ('ensure', 'ensur'), ('speech', 'speech'), ('recognition', 'recognit'), ('engine', 'engin'), ('knows', 'know'), ('phrase', 'phrase'), ('“', '“'), ('new', 'new'), ('speech', 'speech'), ('”', '”'), ('“', '“'), ('nudist', 'nudist'), ('beach', 'beach'), ('”', '”'), (',', ','), ('“', '“'), ('agent', 'agent'), (',', ','), ('”', '”'), ('“', '“'), ('operator', 'oper'), (',', ','), ('”', '”'), ('“', '“'), ('I', 'i'), ('want', 'want'), ('speak', 'speak'), ('someone', 'someon'), ('”', '”'), ('direct', 'direct'), ('caller', 'caller'), ('live', 'live'), ('person', 'person'), ('.', '.')]

>> Lemmatization: 
 [('Grammars', 'Grammars'), ('ensure', 'ensure'), ('speech', 'speech'), ('recognition', 'recognition'), ('engine', 'engine'), ('knows', 'know'), ('phrase', 'phrase'), ('“', '“'), ('new', 'new'), ('speech', 'speech'), ('”', '”'), ('“', '“'), ('nudist', 'nudist'), ('beach', 'beach'), ('”', '”'), (',', ','), ('“', '“'), ('agent', 'agent'), (',', ','), ('”', '”'), ('“', '“'), ('operator', 'operator'), (',', ','), ('”', '”'), ('“', '“'), ('I', 'I'), ('want', 'want'), ('speak', 'speak'), ('someone', 'someone'), ('”', '”'), ('direct', 'direct'), ('caller', 'caller'), ('live', 'live'), ('person', 'person'), ('.', '.')]



========================================== PARAGRAPH 27 ===========================================

If implementing a speech-enabled self-service system is like teaching a  foreign language, then a grammar is like a translation book, mapping com- mon phrases to their meaning. It works quite well… as long as people stick to  those phrases. So what happens if a phrase is not in the book? 

------------------- Sentence 1 -------------------

If implementing a speech-enabled self-service system is like teaching a  foreign language, then a grammar is like a translation book, mapping com- mon phrases to their meaning.

>> Tokens are: 
 ['If', 'implementing', 'speech-enabled', 'self-service', 'system', 'like', 'teaching', 'foreign', 'language', ',', 'grammar', 'like', 'translation', 'book', ',', 'mapping', 'com-', 'mon', 'phrases', 'meaning', '.']

>> Bigrams are: 
 [('If', 'implementing'), ('implementing', 'speech-enabled'), ('speech-enabled', 'self-service'), ('self-service', 'system'), ('system', 'like'), ('like', 'teaching'), ('teaching', 'foreign'), ('foreign', 'language'), ('language', ','), (',', 'grammar'), ('grammar', 'like'), ('like', 'translation'), ('translation', 'book'), ('book', ','), (',', 'mapping'), ('mapping', 'com-'), ('com-', 'mon'), ('mon', 'phrases'), ('phrases', 'meaning'), ('meaning', '.')]

>> Trigrams are: 
 [('If', 'implementing', 'speech-enabled'), ('implementing', 'speech-enabled', 'self-service'), ('speech-enabled', 'self-service', 'system'), ('self-service', 'system', 'like'), ('system', 'like', 'teaching'), ('like', 'teaching', 'foreign'), ('teaching', 'foreign', 'language'), ('foreign', 'language', ','), ('language', ',', 'grammar'), (',', 'grammar', 'like'), ('grammar', 'like', 'translation'), ('like', 'translation', 'book'), ('translation', 'book', ','), ('book', ',', 'mapping'), (',', 'mapping', 'com-'), ('mapping', 'com-', 'mon'), ('com-', 'mon', 'phrases'), ('mon', 'phrases', 'meaning'), ('phrases', 'meaning', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('implementing', 'JJ'), ('speech-enabled', 'JJ'), ('self-service', 'NN'), ('system', 'NN'), ('like', 'IN'), ('teaching', 'VBG'), ('foreign', 'JJ'), ('language', 'NN'), (',', ','), ('grammar', 'NN'), ('like', 'IN'), ('translation', 'NN'), ('book', 'NN'), (',', ','), ('mapping', 'VBG'), ('com-', 'JJ'), ('mon', 'NN'), ('phrases', 'NNS'), ('meaning', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['implementing speech-enabled self-service system', 'foreign language', 'grammar', 'translation book', 'com- mon phrases meaning']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('implementing', 'implement'), ('speech-enabled', 'speech-en'), ('self-service', 'self-servic'), ('system', 'system'), ('like', 'like'), ('teaching', 'teach'), ('foreign', 'foreign'), ('language', 'languag'), (',', ','), ('grammar', 'grammar'), ('like', 'like'), ('translation', 'translat'), ('book', 'book'), (',', ','), ('mapping', 'map'), ('com-', 'com-'), ('mon', 'mon'), ('phrases', 'phrase'), ('meaning', 'mean'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('implementing', 'implement'), ('speech-enabled', 'speech-en'), ('self-service', 'self-servic'), ('system', 'system'), ('like', 'like'), ('teaching', 'teach'), ('foreign', 'foreign'), ('language', 'languag'), (',', ','), ('grammar', 'grammar'), ('like', 'like'), ('translation', 'translat'), ('book', 'book'), (',', ','), ('mapping', 'map'), ('com-', 'com-'), ('mon', 'mon'), ('phrases', 'phrase'), ('meaning', 'mean'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('implementing', 'implementing'), ('speech-enabled', 'speech-enabled'), ('self-service', 'self-service'), ('system', 'system'), ('like', 'like'), ('teaching', 'teaching'), ('foreign', 'foreign'), ('language', 'language'), (',', ','), ('grammar', 'grammar'), ('like', 'like'), ('translation', 'translation'), ('book', 'book'), (',', ','), ('mapping', 'mapping'), ('com-', 'com-'), ('mon', 'mon'), ('phrases', 'phrase'), ('meaning', 'meaning'), ('.', '.')]


------------------- Sentence 2 -------------------

It works quite well… as long as people stick to  those phrases.

>> Tokens are: 
 ['It', 'works', 'quite', 'well…', 'long', 'people', 'stick', 'phrases', '.']

>> Bigrams are: 
 [('It', 'works'), ('works', 'quite'), ('quite', 'well…'), ('well…', 'long'), ('long', 'people'), ('people', 'stick'), ('stick', 'phrases'), ('phrases', '.')]

>> Trigrams are: 
 [('It', 'works', 'quite'), ('works', 'quite', 'well…'), ('quite', 'well…', 'long'), ('well…', 'long', 'people'), ('long', 'people', 'stick'), ('people', 'stick', 'phrases'), ('stick', 'phrases', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('works', 'VBZ'), ('quite', 'RB'), ('well…', 'JJ'), ('long', 'JJ'), ('people', 'NNS'), ('stick', 'VBP'), ('phrases', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['well… long people', 'phrases']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('works', 'work'), ('quite', 'quit'), ('well…', 'well…'), ('long', 'long'), ('people', 'peopl'), ('stick', 'stick'), ('phrases', 'phrase'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('works', 'work'), ('quite', 'quit'), ('well…', 'well…'), ('long', 'long'), ('people', 'peopl'), ('stick', 'stick'), ('phrases', 'phrase'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('works', 'work'), ('quite', 'quite'), ('well…', 'well…'), ('long', 'long'), ('people', 'people'), ('stick', 'stick'), ('phrases', 'phrase'), ('.', '.')]


------------------- Sentence 3 -------------------

So what happens if a phrase is not in the book?

>> Tokens are: 
 ['So', 'happens', 'phrase', 'book', '?']

>> Bigrams are: 
 [('So', 'happens'), ('happens', 'phrase'), ('phrase', 'book'), ('book', '?')]

>> Trigrams are: 
 [('So', 'happens', 'phrase'), ('happens', 'phrase', 'book'), ('phrase', 'book', '?')]

>> POS Tags are: 
 [('So', 'RB'), ('happens', 'JJ'), ('phrase', 'NN'), ('book', 'NN'), ('?', '.')]

>> Noun Phrases are: 
 ['happens phrase book']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('So', 'so'), ('happens', 'happen'), ('phrase', 'phrase'), ('book', 'book'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('So', 'so'), ('happens', 'happen'), ('phrase', 'phrase'), ('book', 'book'), ('?', '?')]

>> Lemmatization: 
 [('So', 'So'), ('happens', 'happens'), ('phrase', 'phrase'), ('book', 'book'), ('?', '?')]



========================================== PARAGRAPH 28 ===========================================

When a caller believes that a speech system has misrecognized his or her  response, it is more likely that the caller spoke something which was out-of- grammar—the system simply wasn’t expecting the caller to respond quite like  that. 

------------------- Sentence 1 -------------------

When a caller believes that a speech system has misrecognized his or her  response, it is more likely that the caller spoke something which was out-of- grammar—the system simply wasn’t expecting the caller to respond quite like  that.

>> Tokens are: 
 ['When', 'caller', 'believes', 'speech', 'system', 'misrecognized', 'response', ',', 'likely', 'caller', 'spoke', 'something', 'out-of-', 'grammar—the', 'system', 'simply', '’', 'expecting', 'caller', 'respond', 'quite', 'like', '.']

>> Bigrams are: 
 [('When', 'caller'), ('caller', 'believes'), ('believes', 'speech'), ('speech', 'system'), ('system', 'misrecognized'), ('misrecognized', 'response'), ('response', ','), (',', 'likely'), ('likely', 'caller'), ('caller', 'spoke'), ('spoke', 'something'), ('something', 'out-of-'), ('out-of-', 'grammar—the'), ('grammar—the', 'system'), ('system', 'simply'), ('simply', '’'), ('’', 'expecting'), ('expecting', 'caller'), ('caller', 'respond'), ('respond', 'quite'), ('quite', 'like'), ('like', '.')]

>> Trigrams are: 
 [('When', 'caller', 'believes'), ('caller', 'believes', 'speech'), ('believes', 'speech', 'system'), ('speech', 'system', 'misrecognized'), ('system', 'misrecognized', 'response'), ('misrecognized', 'response', ','), ('response', ',', 'likely'), (',', 'likely', 'caller'), ('likely', 'caller', 'spoke'), ('caller', 'spoke', 'something'), ('spoke', 'something', 'out-of-'), ('something', 'out-of-', 'grammar—the'), ('out-of-', 'grammar—the', 'system'), ('grammar—the', 'system', 'simply'), ('system', 'simply', '’'), ('simply', '’', 'expecting'), ('’', 'expecting', 'caller'), ('expecting', 'caller', 'respond'), ('caller', 'respond', 'quite'), ('respond', 'quite', 'like'), ('quite', 'like', '.')]

>> POS Tags are: 
 [('When', 'WRB'), ('caller', 'NN'), ('believes', 'VBZ'), ('speech', 'JJ'), ('system', 'NN'), ('misrecognized', 'VBN'), ('response', 'NN'), (',', ','), ('likely', 'JJ'), ('caller', 'NN'), ('spoke', 'VBD'), ('something', 'NN'), ('out-of-', 'JJ'), ('grammar—the', 'NN'), ('system', 'NN'), ('simply', 'RB'), ('’', 'JJ'), ('expecting', 'VBG'), ('caller', 'NN'), ('respond', 'NN'), ('quite', 'RB'), ('like', 'IN'), ('.', '.')]

>> Noun Phrases are: 
 ['caller', 'speech system', 'response', 'likely caller', 'something', 'out-of- grammar—the system', 'caller respond']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('When', 'when'), ('caller', 'caller'), ('believes', 'believ'), ('speech', 'speech'), ('system', 'system'), ('misrecognized', 'misrecogn'), ('response', 'respons'), (',', ','), ('likely', 'like'), ('caller', 'caller'), ('spoke', 'spoke'), ('something', 'someth'), ('out-of-', 'out-of-'), ('grammar—the', 'grammar—th'), ('system', 'system'), ('simply', 'simpli'), ('’', '’'), ('expecting', 'expect'), ('caller', 'caller'), ('respond', 'respond'), ('quite', 'quit'), ('like', 'like'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('When', 'when'), ('caller', 'caller'), ('believes', 'believ'), ('speech', 'speech'), ('system', 'system'), ('misrecognized', 'misrecogn'), ('response', 'respons'), (',', ','), ('likely', 'like'), ('caller', 'caller'), ('spoke', 'spoke'), ('something', 'someth'), ('out-of-', 'out-of-'), ('grammar—the', 'grammar—th'), ('system', 'system'), ('simply', 'simpli'), ('’', '’'), ('expecting', 'expect'), ('caller', 'caller'), ('respond', 'respond'), ('quite', 'quit'), ('like', 'like'), ('.', '.')]

>> Lemmatization: 
 [('When', 'When'), ('caller', 'caller'), ('believes', 'belief'), ('speech', 'speech'), ('system', 'system'), ('misrecognized', 'misrecognized'), ('response', 'response'), (',', ','), ('likely', 'likely'), ('caller', 'caller'), ('spoke', 'spoke'), ('something', 'something'), ('out-of-', 'out-of-'), ('grammar—the', 'grammar—the'), ('system', 'system'), ('simply', 'simply'), ('’', '’'), ('expecting', 'expecting'), ('caller', 'caller'), ('respond', 'respond'), ('quite', 'quite'), ('like', 'like'), ('.', '.')]



========================================== PARAGRAPH 29 ===========================================

An analysis of a number of representative speech applications confirms that  out-of-grammar errors outnumber misrecognition errors by a factor of as high  as 5-to-1. Put simply, the problem is not recognizing what the caller said…  it’s knowing what the caller meant. Therefore, to increase the accuracy of any  system—improving its automation rate, making customers happier with the  use of the system, and lowering overall costs for the contact center—a critical  factor is to reduce these out-of-grammar errors. 

------------------- Sentence 1 -------------------

An analysis of a number of representative speech applications confirms that  out-of-grammar errors outnumber misrecognition errors by a factor of as high  as 5-to-1.

>> Tokens are: 
 ['An', 'analysis', 'number', 'representative', 'speech', 'applications', 'confirms', 'out-of-grammar', 'errors', 'outnumber', 'misrecognition', 'errors', 'factor', 'high', '5-to-1', '.']

>> Bigrams are: 
 [('An', 'analysis'), ('analysis', 'number'), ('number', 'representative'), ('representative', 'speech'), ('speech', 'applications'), ('applications', 'confirms'), ('confirms', 'out-of-grammar'), ('out-of-grammar', 'errors'), ('errors', 'outnumber'), ('outnumber', 'misrecognition'), ('misrecognition', 'errors'), ('errors', 'factor'), ('factor', 'high'), ('high', '5-to-1'), ('5-to-1', '.')]

>> Trigrams are: 
 [('An', 'analysis', 'number'), ('analysis', 'number', 'representative'), ('number', 'representative', 'speech'), ('representative', 'speech', 'applications'), ('speech', 'applications', 'confirms'), ('applications', 'confirms', 'out-of-grammar'), ('confirms', 'out-of-grammar', 'errors'), ('out-of-grammar', 'errors', 'outnumber'), ('errors', 'outnumber', 'misrecognition'), ('outnumber', 'misrecognition', 'errors'), ('misrecognition', 'errors', 'factor'), ('errors', 'factor', 'high'), ('factor', 'high', '5-to-1'), ('high', '5-to-1', '.')]

>> POS Tags are: 
 [('An', 'DT'), ('analysis', 'NN'), ('number', 'NN'), ('representative', 'JJ'), ('speech', 'NN'), ('applications', 'NNS'), ('confirms', 'VBZ'), ('out-of-grammar', 'JJ'), ('errors', 'NNS'), ('outnumber', 'VBP'), ('misrecognition', 'NN'), ('errors', 'NNS'), ('factor', 'VBP'), ('high', 'JJ'), ('5-to-1', 'JJ'), ('.', '.')]

>> Noun Phrases are: 
 ['An analysis number', 'representative speech applications', 'out-of-grammar errors', 'misrecognition errors']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('An', 'an'), ('analysis', 'analysi'), ('number', 'number'), ('representative', 'repres'), ('speech', 'speech'), ('applications', 'applic'), ('confirms', 'confirm'), ('out-of-grammar', 'out-of-grammar'), ('errors', 'error'), ('outnumber', 'outnumb'), ('misrecognition', 'misrecognit'), ('errors', 'error'), ('factor', 'factor'), ('high', 'high'), ('5-to-1', '5-to-1'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('An', 'an'), ('analysis', 'analysi'), ('number', 'number'), ('representative', 'repres'), ('speech', 'speech'), ('applications', 'applic'), ('confirms', 'confirm'), ('out-of-grammar', 'out-of-grammar'), ('errors', 'error'), ('outnumber', 'outnumb'), ('misrecognition', 'misrecognit'), ('errors', 'error'), ('factor', 'factor'), ('high', 'high'), ('5-to-1', '5-to-1'), ('.', '.')]

>> Lemmatization: 
 [('An', 'An'), ('analysis', 'analysis'), ('number', 'number'), ('representative', 'representative'), ('speech', 'speech'), ('applications', 'application'), ('confirms', 'confirms'), ('out-of-grammar', 'out-of-grammar'), ('errors', 'error'), ('outnumber', 'outnumber'), ('misrecognition', 'misrecognition'), ('errors', 'error'), ('factor', 'factor'), ('high', 'high'), ('5-to-1', '5-to-1'), ('.', '.')]


------------------- Sentence 2 -------------------

Put simply, the problem is not recognizing what the caller said…  it’s knowing what the caller meant.

>> Tokens are: 
 ['Put', 'simply', ',', 'problem', 'recognizing', 'caller', 'said…', '’', 'knowing', 'caller', 'meant', '.']

>> Bigrams are: 
 [('Put', 'simply'), ('simply', ','), (',', 'problem'), ('problem', 'recognizing'), ('recognizing', 'caller'), ('caller', 'said…'), ('said…', '’'), ('’', 'knowing'), ('knowing', 'caller'), ('caller', 'meant'), ('meant', '.')]

>> Trigrams are: 
 [('Put', 'simply', ','), ('simply', ',', 'problem'), (',', 'problem', 'recognizing'), ('problem', 'recognizing', 'caller'), ('recognizing', 'caller', 'said…'), ('caller', 'said…', '’'), ('said…', '’', 'knowing'), ('’', 'knowing', 'caller'), ('knowing', 'caller', 'meant'), ('caller', 'meant', '.')]

>> POS Tags are: 
 [('Put', 'VB'), ('simply', 'RB'), (',', ','), ('problem', 'NN'), ('recognizing', 'VBG'), ('caller', 'NN'), ('said…', 'NN'), ('’', 'NNP'), ('knowing', 'VBG'), ('caller', 'NN'), ('meant', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['problem', 'caller said… ’', 'caller meant']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Put', 'put'), ('simply', 'simpli'), (',', ','), ('problem', 'problem'), ('recognizing', 'recogn'), ('caller', 'caller'), ('said…', 'said…'), ('’', '’'), ('knowing', 'know'), ('caller', 'caller'), ('meant', 'meant'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Put', 'put'), ('simply', 'simpli'), (',', ','), ('problem', 'problem'), ('recognizing', 'recogn'), ('caller', 'caller'), ('said…', 'said…'), ('’', '’'), ('knowing', 'know'), ('caller', 'caller'), ('meant', 'meant'), ('.', '.')]

>> Lemmatization: 
 [('Put', 'Put'), ('simply', 'simply'), (',', ','), ('problem', 'problem'), ('recognizing', 'recognizing'), ('caller', 'caller'), ('said…', 'said…'), ('’', '’'), ('knowing', 'knowing'), ('caller', 'caller'), ('meant', 'meant'), ('.', '.')]


------------------- Sentence 3 -------------------

Therefore, to increase the accuracy of any  system—improving its automation rate, making customers happier with the  use of the system, and lowering overall costs for the contact center—a critical  factor is to reduce these out-of-grammar errors.

>> Tokens are: 
 ['Therefore', ',', 'increase', 'accuracy', 'system—improving', 'automation', 'rate', ',', 'making', 'customers', 'happier', 'use', 'system', ',', 'lowering', 'overall', 'costs', 'contact', 'center—a', 'critical', 'factor', 'reduce', 'out-of-grammar', 'errors', '.']

>> Bigrams are: 
 [('Therefore', ','), (',', 'increase'), ('increase', 'accuracy'), ('accuracy', 'system—improving'), ('system—improving', 'automation'), ('automation', 'rate'), ('rate', ','), (',', 'making'), ('making', 'customers'), ('customers', 'happier'), ('happier', 'use'), ('use', 'system'), ('system', ','), (',', 'lowering'), ('lowering', 'overall'), ('overall', 'costs'), ('costs', 'contact'), ('contact', 'center—a'), ('center—a', 'critical'), ('critical', 'factor'), ('factor', 'reduce'), ('reduce', 'out-of-grammar'), ('out-of-grammar', 'errors'), ('errors', '.')]

>> Trigrams are: 
 [('Therefore', ',', 'increase'), (',', 'increase', 'accuracy'), ('increase', 'accuracy', 'system—improving'), ('accuracy', 'system—improving', 'automation'), ('system—improving', 'automation', 'rate'), ('automation', 'rate', ','), ('rate', ',', 'making'), (',', 'making', 'customers'), ('making', 'customers', 'happier'), ('customers', 'happier', 'use'), ('happier', 'use', 'system'), ('use', 'system', ','), ('system', ',', 'lowering'), (',', 'lowering', 'overall'), ('lowering', 'overall', 'costs'), ('overall', 'costs', 'contact'), ('costs', 'contact', 'center—a'), ('contact', 'center—a', 'critical'), ('center—a', 'critical', 'factor'), ('critical', 'factor', 'reduce'), ('factor', 'reduce', 'out-of-grammar'), ('reduce', 'out-of-grammar', 'errors'), ('out-of-grammar', 'errors', '.')]

>> POS Tags are: 
 [('Therefore', 'RB'), (',', ','), ('increase', 'VB'), ('accuracy', 'NN'), ('system—improving', 'VBG'), ('automation', 'NN'), ('rate', 'NN'), (',', ','), ('making', 'VBG'), ('customers', 'NNS'), ('happier', 'RBR'), ('use', 'NN'), ('system', 'NN'), (',', ','), ('lowering', 'VBG'), ('overall', 'JJ'), ('costs', 'NNS'), ('contact', 'VBP'), ('center—a', 'JJ'), ('critical', 'JJ'), ('factor', 'NN'), ('reduce', 'VB'), ('out-of-grammar', 'JJ'), ('errors', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['accuracy', 'automation rate', 'customers', 'use system', 'overall costs', 'center—a critical factor', 'out-of-grammar errors']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Therefore', 'therefor'), (',', ','), ('increase', 'increas'), ('accuracy', 'accuraci'), ('system—improving', 'system—improv'), ('automation', 'autom'), ('rate', 'rate'), (',', ','), ('making', 'make'), ('customers', 'custom'), ('happier', 'happier'), ('use', 'use'), ('system', 'system'), (',', ','), ('lowering', 'lower'), ('overall', 'overal'), ('costs', 'cost'), ('contact', 'contact'), ('center—a', 'center—a'), ('critical', 'critic'), ('factor', 'factor'), ('reduce', 'reduc'), ('out-of-grammar', 'out-of-grammar'), ('errors', 'error'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Therefore', 'therefor'), (',', ','), ('increase', 'increas'), ('accuracy', 'accuraci'), ('system—improving', 'system—improv'), ('automation', 'autom'), ('rate', 'rate'), (',', ','), ('making', 'make'), ('customers', 'custom'), ('happier', 'happier'), ('use', 'use'), ('system', 'system'), (',', ','), ('lowering', 'lower'), ('overall', 'overal'), ('costs', 'cost'), ('contact', 'contact'), ('center—a', 'center—a'), ('critical', 'critic'), ('factor', 'factor'), ('reduce', 'reduc'), ('out-of-grammar', 'out-of-grammar'), ('errors', 'error'), ('.', '.')]

>> Lemmatization: 
 [('Therefore', 'Therefore'), (',', ','), ('increase', 'increase'), ('accuracy', 'accuracy'), ('system—improving', 'system—improving'), ('automation', 'automation'), ('rate', 'rate'), (',', ','), ('making', 'making'), ('customers', 'customer'), ('happier', 'happier'), ('use', 'use'), ('system', 'system'), (',', ','), ('lowering', 'lowering'), ('overall', 'overall'), ('costs', 'cost'), ('contact', 'contact'), ('center—a', 'center—a'), ('critical', 'critical'), ('factor', 'factor'), ('reduce', 'reduce'), ('out-of-grammar', 'out-of-grammar'), ('errors', 'error'), ('.', '.')]



========================================== PARAGRAPH 30 ===========================================

So how can we teach a speech recognition system to speak this language  of the customer? Different natural language capabilities provide different  approaches to tackling that problem. 

------------------- Sentence 1 -------------------

So how can we teach a speech recognition system to speak this language  of the customer?

>> Tokens are: 
 ['So', 'teach', 'speech', 'recognition', 'system', 'speak', 'language', 'customer', '?']

>> Bigrams are: 
 [('So', 'teach'), ('teach', 'speech'), ('speech', 'recognition'), ('recognition', 'system'), ('system', 'speak'), ('speak', 'language'), ('language', 'customer'), ('customer', '?')]

>> Trigrams are: 
 [('So', 'teach', 'speech'), ('teach', 'speech', 'recognition'), ('speech', 'recognition', 'system'), ('recognition', 'system', 'speak'), ('system', 'speak', 'language'), ('speak', 'language', 'customer'), ('language', 'customer', '?')]

>> POS Tags are: 
 [('So', 'RB'), ('teach', 'JJ'), ('speech', 'NN'), ('recognition', 'NN'), ('system', 'NN'), ('speak', 'JJ'), ('language', 'NN'), ('customer', 'NN'), ('?', '.')]

>> Noun Phrases are: 
 ['teach speech recognition system', 'speak language customer']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('So', 'so'), ('teach', 'teach'), ('speech', 'speech'), ('recognition', 'recognit'), ('system', 'system'), ('speak', 'speak'), ('language', 'languag'), ('customer', 'custom'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('So', 'so'), ('teach', 'teach'), ('speech', 'speech'), ('recognition', 'recognit'), ('system', 'system'), ('speak', 'speak'), ('language', 'languag'), ('customer', 'custom'), ('?', '?')]

>> Lemmatization: 
 [('So', 'So'), ('teach', 'teach'), ('speech', 'speech'), ('recognition', 'recognition'), ('system', 'system'), ('speak', 'speak'), ('language', 'language'), ('customer', 'customer'), ('?', '?')]


------------------- Sentence 2 -------------------

Different natural language capabilities provide different  approaches to tackling that problem.

>> Tokens are: 
 ['Different', 'natural', 'language', 'capabilities', 'provide', 'different', 'approaches', 'tackling', 'problem', '.']

>> Bigrams are: 
 [('Different', 'natural'), ('natural', 'language'), ('language', 'capabilities'), ('capabilities', 'provide'), ('provide', 'different'), ('different', 'approaches'), ('approaches', 'tackling'), ('tackling', 'problem'), ('problem', '.')]

>> Trigrams are: 
 [('Different', 'natural', 'language'), ('natural', 'language', 'capabilities'), ('language', 'capabilities', 'provide'), ('capabilities', 'provide', 'different'), ('provide', 'different', 'approaches'), ('different', 'approaches', 'tackling'), ('approaches', 'tackling', 'problem'), ('tackling', 'problem', '.')]

>> POS Tags are: 
 [('Different', 'NNP'), ('natural', 'JJ'), ('language', 'NN'), ('capabilities', 'NNS'), ('provide', 'VBP'), ('different', 'JJ'), ('approaches', 'NNS'), ('tackling', 'VBG'), ('problem', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['Different', 'natural language capabilities', 'different approaches', 'problem']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Different', 'differ'), ('natural', 'natur'), ('language', 'languag'), ('capabilities', 'capabl'), ('provide', 'provid'), ('different', 'differ'), ('approaches', 'approach'), ('tackling', 'tackl'), ('problem', 'problem'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Different', 'differ'), ('natural', 'natur'), ('language', 'languag'), ('capabilities', 'capabl'), ('provide', 'provid'), ('different', 'differ'), ('approaches', 'approach'), ('tackling', 'tackl'), ('problem', 'problem'), ('.', '.')]

>> Lemmatization: 
 [('Different', 'Different'), ('natural', 'natural'), ('language', 'language'), ('capabilities', 'capability'), ('provide', 'provide'), ('different', 'different'), ('approaches', 'approach'), ('tackling', 'tackling'), ('problem', 'problem'), ('.', '.')]



========================================== PARAGRAPH 31 ===========================================

White PaperCustomer Service Solutions Natural language understanding3 

------------------- Sentence 1 -------------------

White PaperCustomer Service Solutions Natural language understanding3

>> Tokens are: 
 ['White', 'PaperCustomer', 'Service', 'Solutions', 'Natural', 'language', 'understanding3']

>> Bigrams are: 
 [('White', 'PaperCustomer'), ('PaperCustomer', 'Service'), ('Service', 'Solutions'), ('Solutions', 'Natural'), ('Natural', 'language'), ('language', 'understanding3')]

>> Trigrams are: 
 [('White', 'PaperCustomer', 'Service'), ('PaperCustomer', 'Service', 'Solutions'), ('Service', 'Solutions', 'Natural'), ('Solutions', 'Natural', 'language'), ('Natural', 'language', 'understanding3')]

>> POS Tags are: 
 [('White', 'NNP'), ('PaperCustomer', 'NNP'), ('Service', 'NNP'), ('Solutions', 'NNP'), ('Natural', 'NNP'), ('language', 'NN'), ('understanding3', 'NN')]

>> Noun Phrases are: 
 ['White PaperCustomer Service Solutions Natural language understanding3']

>> Named Entities are: 
 [('FACILITY', 'White'), ('ORGANIZATION', 'PaperCustomer Service Solutions Natural')] 

>> Stemming using Porter Stemmer: 
 [('White', 'white'), ('PaperCustomer', 'papercustom'), ('Service', 'servic'), ('Solutions', 'solut'), ('Natural', 'natur'), ('language', 'languag'), ('understanding3', 'understanding3')]

>> Stemming using Snowball Stemmer: 
 [('White', 'white'), ('PaperCustomer', 'papercustom'), ('Service', 'servic'), ('Solutions', 'solut'), ('Natural', 'natur'), ('language', 'languag'), ('understanding3', 'understanding3')]

>> Lemmatization: 
 [('White', 'White'), ('PaperCustomer', 'PaperCustomer'), ('Service', 'Service'), ('Solutions', 'Solutions'), ('Natural', 'Natural'), ('language', 'language'), ('understanding3', 'understanding3')]



========================================== PARAGRAPH 32 ===========================================

The Need for Natural Language A Typical Example 

------------------- Sentence 1 -------------------

The Need for Natural Language A Typical Example

>> Tokens are: 
 ['The', 'Need', 'Natural', 'Language', 'A', 'Typical', 'Example']

>> Bigrams are: 
 [('The', 'Need'), ('Need', 'Natural'), ('Natural', 'Language'), ('Language', 'A'), ('A', 'Typical'), ('Typical', 'Example')]

>> Trigrams are: 
 [('The', 'Need', 'Natural'), ('Need', 'Natural', 'Language'), ('Natural', 'Language', 'A'), ('Language', 'A', 'Typical'), ('A', 'Typical', 'Example')]

>> POS Tags are: 
 [('The', 'DT'), ('Need', 'NNP'), ('Natural', 'NNP'), ('Language', 'NNP'), ('A', 'NNP'), ('Typical', 'JJ'), ('Example', 'NN')]

>> Noun Phrases are: 
 ['The Need Natural Language A', 'Typical Example']

>> Named Entities are: 
 [('ORGANIZATION', 'Need Natural')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('Need', 'need'), ('Natural', 'natur'), ('Language', 'languag'), ('A', 'a'), ('Typical', 'typic'), ('Example', 'exampl')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('Need', 'need'), ('Natural', 'natur'), ('Language', 'languag'), ('A', 'a'), ('Typical', 'typic'), ('Example', 'exampl')]

>> Lemmatization: 
 [('The', 'The'), ('Need', 'Need'), ('Natural', 'Natural'), ('Language', 'Language'), ('A', 'A'), ('Typical', 'Typical'), ('Example', 'Example')]



========================================== PARAGRAPH 33 ===========================================

CALLER: I guess I’d like  billing. 

------------------- Sentence 1 -------------------

CALLER: I guess I’d like  billing.

>> Tokens are: 
 ['CALLER', ':', 'I', 'guess', 'I', '’', 'like', 'billing', '.']

>> Bigrams are: 
 [('CALLER', ':'), (':', 'I'), ('I', 'guess'), ('guess', 'I'), ('I', '’'), ('’', 'like'), ('like', 'billing'), ('billing', '.')]

>> Trigrams are: 
 [('CALLER', ':', 'I'), (':', 'I', 'guess'), ('I', 'guess', 'I'), ('guess', 'I', '’'), ('I', '’', 'like'), ('’', 'like', 'billing'), ('like', 'billing', '.')]

>> POS Tags are: 
 [('CALLER', 'NN'), (':', ':'), ('I', 'PRP'), ('guess', 'VBP'), ('I', 'PRP'), ('’', 'VBP'), ('like', 'IN'), ('billing', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['CALLER', 'billing']

>> Named Entities are: 
 [('GPE', 'CALLER')] 

>> Stemming using Porter Stemmer: 
 [('CALLER', 'caller'), (':', ':'), ('I', 'i'), ('guess', 'guess'), ('I', 'i'), ('’', '’'), ('like', 'like'), ('billing', 'bill'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('CALLER', 'caller'), (':', ':'), ('I', 'i'), ('guess', 'guess'), ('I', 'i'), ('’', '’'), ('like', 'like'), ('billing', 'bill'), ('.', '.')]

>> Lemmatization: 
 [('CALLER', 'CALLER'), (':', ':'), ('I', 'I'), ('guess', 'guess'), ('I', 'I'), ('’', '’'), ('like', 'like'), ('billing', 'billing'), ('.', '.')]



========================================== PARAGRAPH 34 ===========================================

I said billing!   Billing!  BILLING! 

------------------- Sentence 1 -------------------

I said billing!

>> Tokens are: 
 ['I', 'said', 'billing', '!']

>> Bigrams are: 
 [('I', 'said'), ('said', 'billing'), ('billing', '!')]

>> Trigrams are: 
 [('I', 'said', 'billing'), ('said', 'billing', '!')]

>> POS Tags are: 
 [('I', 'PRP'), ('said', 'VBD'), ('billing', 'NN'), ('!', '.')]

>> Noun Phrases are: 
 ['billing']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('I', 'i'), ('said', 'said'), ('billing', 'bill'), ('!', '!')]

>> Stemming using Snowball Stemmer: 
 [('I', 'i'), ('said', 'said'), ('billing', 'bill'), ('!', '!')]

>> Lemmatization: 
 [('I', 'I'), ('said', 'said'), ('billing', 'billing'), ('!', '!')]


------------------- Sentence 2 -------------------

Billing!

>> Tokens are: 
 ['Billing', '!']

>> Bigrams are: 
 [('Billing', '!')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('Billing', 'NN'), ('!', '.')]

>> Noun Phrases are: 
 ['Billing']

>> Named Entities are: 
 [('GPE', 'Billing')] 

>> Stemming using Porter Stemmer: 
 [('Billing', 'bill'), ('!', '!')]

>> Stemming using Snowball Stemmer: 
 [('Billing', 'bill'), ('!', '!')]

>> Lemmatization: 
 [('Billing', 'Billing'), ('!', '!')]


------------------- Sentence 3 -------------------

BILLING!

>> Tokens are: 
 ['BILLING', '!']

>> Bigrams are: 
 [('BILLING', '!')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('BILLING', 'NN'), ('!', '.')]

>> Noun Phrases are: 
 ['BILLING']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('BILLING', 'bill'), ('!', '!')]

>> Stemming using Snowball Stemmer: 
 [('BILLING', 'bill'), ('!', '!')]

>> Lemmatization: 
 [('BILLING', 'BILLING'), ('!', '!')]



========================================== PARAGRAPH 35 ===========================================

Would you like account information,  billing, or technical support? 

------------------- Sentence 1 -------------------

Would you like account information,  billing, or technical support?

>> Tokens are: 
 ['Would', 'like', 'account', 'information', ',', 'billing', ',', 'technical', 'support', '?']

>> Bigrams are: 
 [('Would', 'like'), ('like', 'account'), ('account', 'information'), ('information', ','), (',', 'billing'), ('billing', ','), (',', 'technical'), ('technical', 'support'), ('support', '?')]

>> Trigrams are: 
 [('Would', 'like', 'account'), ('like', 'account', 'information'), ('account', 'information', ','), ('information', ',', 'billing'), (',', 'billing', ','), ('billing', ',', 'technical'), (',', 'technical', 'support'), ('technical', 'support', '?')]

>> POS Tags are: 
 [('Would', 'MD'), ('like', 'VB'), ('account', 'NN'), ('information', 'NN'), (',', ','), ('billing', 'NN'), (',', ','), ('technical', 'JJ'), ('support', 'NN'), ('?', '.')]

>> Noun Phrases are: 
 ['account information', 'billing', 'technical support']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Would', 'would'), ('like', 'like'), ('account', 'account'), ('information', 'inform'), (',', ','), ('billing', 'bill'), (',', ','), ('technical', 'technic'), ('support', 'support'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('Would', 'would'), ('like', 'like'), ('account', 'account'), ('information', 'inform'), (',', ','), ('billing', 'bill'), (',', ','), ('technical', 'technic'), ('support', 'support'), ('?', '?')]

>> Lemmatization: 
 [('Would', 'Would'), ('like', 'like'), ('account', 'account'), ('information', 'information'), (',', ','), ('billing', 'billing'), (',', ','), ('technical', 'technical'), ('support', 'support'), ('?', '?')]



========================================== PARAGRAPH 36 ===========================================

SYSTEM: 

------------------- Sentence 1 -------------------

SYSTEM:

>> Tokens are: 
 ['SYSTEM', ':']

>> Bigrams are: 
 [('SYSTEM', ':')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('SYSTEM', 'NN'), (':', ':')]

>> Noun Phrases are: 
 ['SYSTEM']

>> Named Entities are: 
 [('GPE', 'SYSTEM')] 

>> Stemming using Porter Stemmer: 
 [('SYSTEM', 'system'), (':', ':')]

>> Stemming using Snowball Stemmer: 
 [('SYSTEM', 'system'), (':', ':')]

>> Lemmatization: 
 [('SYSTEM', 'SYSTEM'), (':', ':')]



========================================== PARAGRAPH 37 ===========================================

I’m sorry, I didn’t understand what  you said... 

------------------- Sentence 1 -------------------

I’m sorry, I didn’t understand what  you said...

>> Tokens are: 
 ['I', '’', 'sorry', ',', 'I', '’', 'understand', 'said', '...']

>> Bigrams are: 
 [('I', '’'), ('’', 'sorry'), ('sorry', ','), (',', 'I'), ('I', '’'), ('’', 'understand'), ('understand', 'said'), ('said', '...')]

>> Trigrams are: 
 [('I', '’', 'sorry'), ('’', 'sorry', ','), ('sorry', ',', 'I'), (',', 'I', '’'), ('I', '’', 'understand'), ('’', 'understand', 'said'), ('understand', 'said', '...')]

>> POS Tags are: 
 [('I', 'PRP'), ('’', 'VBP'), ('sorry', 'JJ'), (',', ','), ('I', 'PRP'), ('’', 'VBP'), ('understand', 'NN'), ('said', 'VBD'), ('...', ':')]

>> Noun Phrases are: 
 ['understand']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('I', 'i'), ('’', '’'), ('sorry', 'sorri'), (',', ','), ('I', 'i'), ('’', '’'), ('understand', 'understand'), ('said', 'said'), ('...', '...')]

>> Stemming using Snowball Stemmer: 
 [('I', 'i'), ('’', '’'), ('sorry', 'sorri'), (',', ','), ('I', 'i'), ('’', '’'), ('understand', 'understand'), ('said', 'said'), ('...', '...')]

>> Lemmatization: 
 [('I', 'I'), ('’', '’'), ('sorry', 'sorry'), (',', ','), ('I', 'I'), ('’', '’'), ('understand', 'understand'), ('said', 'said'), ('...', '...')]



========================================== PARAGRAPH 38 ===========================================

I’m sorry, I didn’t understand what  you said... please wait for the next  available agent.

------------------- Sentence 1 -------------------

I’m sorry, I didn’t understand what  you said... please wait for the next  available agent.

>> Tokens are: 
 ['I', '’', 'sorry', ',', 'I', '’', 'understand', 'said', '...', 'please', 'wait', 'next', 'available', 'agent', '.']

>> Bigrams are: 
 [('I', '’'), ('’', 'sorry'), ('sorry', ','), (',', 'I'), ('I', '’'), ('’', 'understand'), ('understand', 'said'), ('said', '...'), ('...', 'please'), ('please', 'wait'), ('wait', 'next'), ('next', 'available'), ('available', 'agent'), ('agent', '.')]

>> Trigrams are: 
 [('I', '’', 'sorry'), ('’', 'sorry', ','), ('sorry', ',', 'I'), (',', 'I', '’'), ('I', '’', 'understand'), ('’', 'understand', 'said'), ('understand', 'said', '...'), ('said', '...', 'please'), ('...', 'please', 'wait'), ('please', 'wait', 'next'), ('wait', 'next', 'available'), ('next', 'available', 'agent'), ('available', 'agent', '.')]

>> POS Tags are: 
 [('I', 'PRP'), ('’', 'VBP'), ('sorry', 'JJ'), (',', ','), ('I', 'PRP'), ('’', 'VBP'), ('understand', 'NN'), ('said', 'VBD'), ('...', ':'), ('please', 'NN'), ('wait', 'VBP'), ('next', 'JJ'), ('available', 'JJ'), ('agent', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['understand', 'please', 'next available agent']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('I', 'i'), ('’', '’'), ('sorry', 'sorri'), (',', ','), ('I', 'i'), ('’', '’'), ('understand', 'understand'), ('said', 'said'), ('...', '...'), ('please', 'pleas'), ('wait', 'wait'), ('next', 'next'), ('available', 'avail'), ('agent', 'agent'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('I', 'i'), ('’', '’'), ('sorry', 'sorri'), (',', ','), ('I', 'i'), ('’', '’'), ('understand', 'understand'), ('said', 'said'), ('...', '...'), ('please', 'pleas'), ('wait', 'wait'), ('next', 'next'), ('available', 'avail'), ('agent', 'agent'), ('.', '.')]

>> Lemmatization: 
 [('I', 'I'), ('’', '’'), ('sorry', 'sorry'), (',', ','), ('I', 'I'), ('’', '’'), ('understand', 'understand'), ('said', 'said'), ('...', '...'), ('please', 'please'), ('wait', 'wait'), ('next', 'next'), ('available', 'available'), ('agent', 'agent'), ('.', '.')]



========================================== PARAGRAPH 39 ===========================================

Make the translation book bigger You can make the grammar contain a larger list of entries to appear like   natural language is at work. This works best when trying to pick between  a limited number of responses – for instance, a confirmation dialog may  recognize yes, yup, you betcha, sure, heck yeah, as well as many other  variations of a positive response. 

------------------- Sentence 1 -------------------

Make the translation book bigger You can make the grammar contain a larger list of entries to appear like   natural language is at work.

>> Tokens are: 
 ['Make', 'translation', 'book', 'bigger', 'You', 'make', 'grammar', 'contain', 'larger', 'list', 'entries', 'appear', 'like', 'natural', 'language', 'work', '.']

>> Bigrams are: 
 [('Make', 'translation'), ('translation', 'book'), ('book', 'bigger'), ('bigger', 'You'), ('You', 'make'), ('make', 'grammar'), ('grammar', 'contain'), ('contain', 'larger'), ('larger', 'list'), ('list', 'entries'), ('entries', 'appear'), ('appear', 'like'), ('like', 'natural'), ('natural', 'language'), ('language', 'work'), ('work', '.')]

>> Trigrams are: 
 [('Make', 'translation', 'book'), ('translation', 'book', 'bigger'), ('book', 'bigger', 'You'), ('bigger', 'You', 'make'), ('You', 'make', 'grammar'), ('make', 'grammar', 'contain'), ('grammar', 'contain', 'larger'), ('contain', 'larger', 'list'), ('larger', 'list', 'entries'), ('list', 'entries', 'appear'), ('entries', 'appear', 'like'), ('appear', 'like', 'natural'), ('like', 'natural', 'language'), ('natural', 'language', 'work'), ('language', 'work', '.')]

>> POS Tags are: 
 [('Make', 'NNP'), ('translation', 'NN'), ('book', 'NN'), ('bigger', 'JJR'), ('You', 'PRP'), ('make', 'VBP'), ('grammar', 'JJ'), ('contain', 'NN'), ('larger', 'JJR'), ('list', 'NN'), ('entries', 'NNS'), ('appear', 'VBP'), ('like', 'IN'), ('natural', 'JJ'), ('language', 'NN'), ('work', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['Make translation book', 'grammar contain', 'list entries', 'natural language work']

>> Named Entities are: 
 [('GPE', 'Make')] 

>> Stemming using Porter Stemmer: 
 [('Make', 'make'), ('translation', 'translat'), ('book', 'book'), ('bigger', 'bigger'), ('You', 'you'), ('make', 'make'), ('grammar', 'grammar'), ('contain', 'contain'), ('larger', 'larger'), ('list', 'list'), ('entries', 'entri'), ('appear', 'appear'), ('like', 'like'), ('natural', 'natur'), ('language', 'languag'), ('work', 'work'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Make', 'make'), ('translation', 'translat'), ('book', 'book'), ('bigger', 'bigger'), ('You', 'you'), ('make', 'make'), ('grammar', 'grammar'), ('contain', 'contain'), ('larger', 'larger'), ('list', 'list'), ('entries', 'entri'), ('appear', 'appear'), ('like', 'like'), ('natural', 'natur'), ('language', 'languag'), ('work', 'work'), ('.', '.')]

>> Lemmatization: 
 [('Make', 'Make'), ('translation', 'translation'), ('book', 'book'), ('bigger', 'bigger'), ('You', 'You'), ('make', 'make'), ('grammar', 'grammar'), ('contain', 'contain'), ('larger', 'larger'), ('list', 'list'), ('entries', 'entry'), ('appear', 'appear'), ('like', 'like'), ('natural', 'natural'), ('language', 'language'), ('work', 'work'), ('.', '.')]


------------------- Sentence 2 -------------------

This works best when trying to pick between  a limited number of responses – for instance, a confirmation dialog may  recognize yes, yup, you betcha, sure, heck yeah, as well as many other  variations of a positive response.

>> Tokens are: 
 ['This', 'works', 'best', 'trying', 'pick', 'limited', 'number', 'responses', '–', 'instance', ',', 'confirmation', 'dialog', 'may', 'recognize', 'yes', ',', 'yup', ',', 'betcha', ',', 'sure', ',', 'heck', 'yeah', ',', 'well', 'many', 'variations', 'positive', 'response', '.']

>> Bigrams are: 
 [('This', 'works'), ('works', 'best'), ('best', 'trying'), ('trying', 'pick'), ('pick', 'limited'), ('limited', 'number'), ('number', 'responses'), ('responses', '–'), ('–', 'instance'), ('instance', ','), (',', 'confirmation'), ('confirmation', 'dialog'), ('dialog', 'may'), ('may', 'recognize'), ('recognize', 'yes'), ('yes', ','), (',', 'yup'), ('yup', ','), (',', 'betcha'), ('betcha', ','), (',', 'sure'), ('sure', ','), (',', 'heck'), ('heck', 'yeah'), ('yeah', ','), (',', 'well'), ('well', 'many'), ('many', 'variations'), ('variations', 'positive'), ('positive', 'response'), ('response', '.')]

>> Trigrams are: 
 [('This', 'works', 'best'), ('works', 'best', 'trying'), ('best', 'trying', 'pick'), ('trying', 'pick', 'limited'), ('pick', 'limited', 'number'), ('limited', 'number', 'responses'), ('number', 'responses', '–'), ('responses', '–', 'instance'), ('–', 'instance', ','), ('instance', ',', 'confirmation'), (',', 'confirmation', 'dialog'), ('confirmation', 'dialog', 'may'), ('dialog', 'may', 'recognize'), ('may', 'recognize', 'yes'), ('recognize', 'yes', ','), ('yes', ',', 'yup'), (',', 'yup', ','), ('yup', ',', 'betcha'), (',', 'betcha', ','), ('betcha', ',', 'sure'), (',', 'sure', ','), ('sure', ',', 'heck'), (',', 'heck', 'yeah'), ('heck', 'yeah', ','), ('yeah', ',', 'well'), (',', 'well', 'many'), ('well', 'many', 'variations'), ('many', 'variations', 'positive'), ('variations', 'positive', 'response'), ('positive', 'response', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('works', 'VBZ'), ('best', 'JJS'), ('trying', 'VBG'), ('pick', 'NN'), ('limited', 'VBD'), ('number', 'NN'), ('responses', 'NNS'), ('–', 'JJ'), ('instance', 'NN'), (',', ','), ('confirmation', 'NN'), ('dialog', 'NN'), ('may', 'MD'), ('recognize', 'VB'), ('yes', 'NNS'), (',', ','), ('yup', 'NN'), (',', ','), ('betcha', 'NN'), (',', ','), ('sure', 'JJ'), (',', ','), ('heck', 'JJ'), ('yeah', 'NN'), (',', ','), ('well', 'RB'), ('many', 'JJ'), ('variations', 'NNS'), ('positive', 'JJ'), ('response', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['pick', 'number responses', '– instance', 'confirmation dialog', 'yes', 'yup', 'betcha', 'heck yeah', 'many variations', 'positive response']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('works', 'work'), ('best', 'best'), ('trying', 'tri'), ('pick', 'pick'), ('limited', 'limit'), ('number', 'number'), ('responses', 'respons'), ('–', '–'), ('instance', 'instanc'), (',', ','), ('confirmation', 'confirm'), ('dialog', 'dialog'), ('may', 'may'), ('recognize', 'recogn'), ('yes', 'ye'), (',', ','), ('yup', 'yup'), (',', ','), ('betcha', 'betcha'), (',', ','), ('sure', 'sure'), (',', ','), ('heck', 'heck'), ('yeah', 'yeah'), (',', ','), ('well', 'well'), ('many', 'mani'), ('variations', 'variat'), ('positive', 'posit'), ('response', 'respons'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('works', 'work'), ('best', 'best'), ('trying', 'tri'), ('pick', 'pick'), ('limited', 'limit'), ('number', 'number'), ('responses', 'respons'), ('–', '–'), ('instance', 'instanc'), (',', ','), ('confirmation', 'confirm'), ('dialog', 'dialog'), ('may', 'may'), ('recognize', 'recogn'), ('yes', 'yes'), (',', ','), ('yup', 'yup'), (',', ','), ('betcha', 'betcha'), (',', ','), ('sure', 'sure'), (',', ','), ('heck', 'heck'), ('yeah', 'yeah'), (',', ','), ('well', 'well'), ('many', 'mani'), ('variations', 'variat'), ('positive', 'posit'), ('response', 'respons'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('works', 'work'), ('best', 'best'), ('trying', 'trying'), ('pick', 'pick'), ('limited', 'limited'), ('number', 'number'), ('responses', 'response'), ('–', '–'), ('instance', 'instance'), (',', ','), ('confirmation', 'confirmation'), ('dialog', 'dialog'), ('may', 'may'), ('recognize', 'recognize'), ('yes', 'yes'), (',', ','), ('yup', 'yup'), (',', ','), ('betcha', 'betcha'), (',', ','), ('sure', 'sure'), (',', ','), ('heck', 'heck'), ('yeah', 'yeah'), (',', ','), ('well', 'well'), ('many', 'many'), ('variations', 'variation'), ('positive', 'positive'), ('response', 'response'), ('.', '.')]



========================================== PARAGRAPH 40 ===========================================

This straightforward, brute-force technique can provide a semblance of  natural language understanding. However, the approach has significant  drawbacks as the list of possible responses gets longer and longer. It  becomes harder to tune and maintain a system while keeping track of all  these options. Even worse, it is possible for the overall performance of the  system to decrease as the recognition engine struggles to compare the  caller’s response to such a potentially confusing list of phrases. 

------------------- Sentence 1 -------------------

This straightforward, brute-force technique can provide a semblance of  natural language understanding.

>> Tokens are: 
 ['This', 'straightforward', ',', 'brute-force', 'technique', 'provide', 'semblance', 'natural', 'language', 'understanding', '.']

>> Bigrams are: 
 [('This', 'straightforward'), ('straightforward', ','), (',', 'brute-force'), ('brute-force', 'technique'), ('technique', 'provide'), ('provide', 'semblance'), ('semblance', 'natural'), ('natural', 'language'), ('language', 'understanding'), ('understanding', '.')]

>> Trigrams are: 
 [('This', 'straightforward', ','), ('straightforward', ',', 'brute-force'), (',', 'brute-force', 'technique'), ('brute-force', 'technique', 'provide'), ('technique', 'provide', 'semblance'), ('provide', 'semblance', 'natural'), ('semblance', 'natural', 'language'), ('natural', 'language', 'understanding'), ('language', 'understanding', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('straightforward', 'NN'), (',', ','), ('brute-force', 'NN'), ('technique', 'NN'), ('provide', 'VBP'), ('semblance', 'NN'), ('natural', 'JJ'), ('language', 'NN'), ('understanding', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['This straightforward', 'brute-force technique', 'semblance', 'natural language understanding']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('straightforward', 'straightforward'), (',', ','), ('brute-force', 'brute-forc'), ('technique', 'techniqu'), ('provide', 'provid'), ('semblance', 'semblanc'), ('natural', 'natur'), ('language', 'languag'), ('understanding', 'understand'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('straightforward', 'straightforward'), (',', ','), ('brute-force', 'brute-forc'), ('technique', 'techniqu'), ('provide', 'provid'), ('semblance', 'semblanc'), ('natural', 'natur'), ('language', 'languag'), ('understanding', 'understand'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('straightforward', 'straightforward'), (',', ','), ('brute-force', 'brute-force'), ('technique', 'technique'), ('provide', 'provide'), ('semblance', 'semblance'), ('natural', 'natural'), ('language', 'language'), ('understanding', 'understanding'), ('.', '.')]


------------------- Sentence 2 -------------------

However, the approach has significant  drawbacks as the list of possible responses gets longer and longer.

>> Tokens are: 
 ['However', ',', 'approach', 'significant', 'drawbacks', 'list', 'possible', 'responses', 'gets', 'longer', 'longer', '.']

>> Bigrams are: 
 [('However', ','), (',', 'approach'), ('approach', 'significant'), ('significant', 'drawbacks'), ('drawbacks', 'list'), ('list', 'possible'), ('possible', 'responses'), ('responses', 'gets'), ('gets', 'longer'), ('longer', 'longer'), ('longer', '.')]

>> Trigrams are: 
 [('However', ',', 'approach'), (',', 'approach', 'significant'), ('approach', 'significant', 'drawbacks'), ('significant', 'drawbacks', 'list'), ('drawbacks', 'list', 'possible'), ('list', 'possible', 'responses'), ('possible', 'responses', 'gets'), ('responses', 'gets', 'longer'), ('gets', 'longer', 'longer'), ('longer', 'longer', '.')]

>> POS Tags are: 
 [('However', 'RB'), (',', ','), ('approach', 'NN'), ('significant', 'JJ'), ('drawbacks', 'NNS'), ('list', 'NN'), ('possible', 'JJ'), ('responses', 'NNS'), ('gets', 'VBZ'), ('longer', 'RB'), ('longer', 'RBR'), ('.', '.')]

>> Noun Phrases are: 
 ['approach', 'significant drawbacks list', 'possible responses']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('However', 'howev'), (',', ','), ('approach', 'approach'), ('significant', 'signific'), ('drawbacks', 'drawback'), ('list', 'list'), ('possible', 'possibl'), ('responses', 'respons'), ('gets', 'get'), ('longer', 'longer'), ('longer', 'longer'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('However', 'howev'), (',', ','), ('approach', 'approach'), ('significant', 'signific'), ('drawbacks', 'drawback'), ('list', 'list'), ('possible', 'possibl'), ('responses', 'respons'), ('gets', 'get'), ('longer', 'longer'), ('longer', 'longer'), ('.', '.')]

>> Lemmatization: 
 [('However', 'However'), (',', ','), ('approach', 'approach'), ('significant', 'significant'), ('drawbacks', 'drawback'), ('list', 'list'), ('possible', 'possible'), ('responses', 'response'), ('gets', 'get'), ('longer', 'longer'), ('longer', 'longer'), ('.', '.')]


------------------- Sentence 3 -------------------

It  becomes harder to tune and maintain a system while keeping track of all  these options.

>> Tokens are: 
 ['It', 'becomes', 'harder', 'tune', 'maintain', 'system', 'keeping', 'track', 'options', '.']

>> Bigrams are: 
 [('It', 'becomes'), ('becomes', 'harder'), ('harder', 'tune'), ('tune', 'maintain'), ('maintain', 'system'), ('system', 'keeping'), ('keeping', 'track'), ('track', 'options'), ('options', '.')]

>> Trigrams are: 
 [('It', 'becomes', 'harder'), ('becomes', 'harder', 'tune'), ('harder', 'tune', 'maintain'), ('tune', 'maintain', 'system'), ('maintain', 'system', 'keeping'), ('system', 'keeping', 'track'), ('keeping', 'track', 'options'), ('track', 'options', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('becomes', 'VBZ'), ('harder', 'JJR'), ('tune', 'NN'), ('maintain', 'NN'), ('system', 'NN'), ('keeping', 'VBG'), ('track', 'NN'), ('options', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['tune maintain system', 'track options']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('becomes', 'becom'), ('harder', 'harder'), ('tune', 'tune'), ('maintain', 'maintain'), ('system', 'system'), ('keeping', 'keep'), ('track', 'track'), ('options', 'option'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('becomes', 'becom'), ('harder', 'harder'), ('tune', 'tune'), ('maintain', 'maintain'), ('system', 'system'), ('keeping', 'keep'), ('track', 'track'), ('options', 'option'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('becomes', 'becomes'), ('harder', 'harder'), ('tune', 'tune'), ('maintain', 'maintain'), ('system', 'system'), ('keeping', 'keeping'), ('track', 'track'), ('options', 'option'), ('.', '.')]


------------------- Sentence 4 -------------------

Even worse, it is possible for the overall performance of the  system to decrease as the recognition engine struggles to compare the  caller’s response to such a potentially confusing list of phrases.

>> Tokens are: 
 ['Even', 'worse', ',', 'possible', 'overall', 'performance', 'system', 'decrease', 'recognition', 'engine', 'struggles', 'compare', 'caller', '’', 'response', 'potentially', 'confusing', 'list', 'phrases', '.']

>> Bigrams are: 
 [('Even', 'worse'), ('worse', ','), (',', 'possible'), ('possible', 'overall'), ('overall', 'performance'), ('performance', 'system'), ('system', 'decrease'), ('decrease', 'recognition'), ('recognition', 'engine'), ('engine', 'struggles'), ('struggles', 'compare'), ('compare', 'caller'), ('caller', '’'), ('’', 'response'), ('response', 'potentially'), ('potentially', 'confusing'), ('confusing', 'list'), ('list', 'phrases'), ('phrases', '.')]

>> Trigrams are: 
 [('Even', 'worse', ','), ('worse', ',', 'possible'), (',', 'possible', 'overall'), ('possible', 'overall', 'performance'), ('overall', 'performance', 'system'), ('performance', 'system', 'decrease'), ('system', 'decrease', 'recognition'), ('decrease', 'recognition', 'engine'), ('recognition', 'engine', 'struggles'), ('engine', 'struggles', 'compare'), ('struggles', 'compare', 'caller'), ('compare', 'caller', '’'), ('caller', '’', 'response'), ('’', 'response', 'potentially'), ('response', 'potentially', 'confusing'), ('potentially', 'confusing', 'list'), ('confusing', 'list', 'phrases'), ('list', 'phrases', '.')]

>> POS Tags are: 
 [('Even', 'RB'), ('worse', 'JJR'), (',', ','), ('possible', 'JJ'), ('overall', 'JJ'), ('performance', 'NN'), ('system', 'NN'), ('decrease', 'NN'), ('recognition', 'NN'), ('engine', 'NN'), ('struggles', 'VBZ'), ('compare', 'VBP'), ('caller', 'NN'), ('’', 'NNP'), ('response', 'NN'), ('potentially', 'RB'), ('confusing', 'JJ'), ('list', 'NN'), ('phrases', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['possible overall performance system decrease recognition engine', 'caller ’ response', 'confusing list phrases']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Even', 'even'), ('worse', 'wors'), (',', ','), ('possible', 'possibl'), ('overall', 'overal'), ('performance', 'perform'), ('system', 'system'), ('decrease', 'decreas'), ('recognition', 'recognit'), ('engine', 'engin'), ('struggles', 'struggl'), ('compare', 'compar'), ('caller', 'caller'), ('’', '’'), ('response', 'respons'), ('potentially', 'potenti'), ('confusing', 'confus'), ('list', 'list'), ('phrases', 'phrase'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Even', 'even'), ('worse', 'wors'), (',', ','), ('possible', 'possibl'), ('overall', 'overal'), ('performance', 'perform'), ('system', 'system'), ('decrease', 'decreas'), ('recognition', 'recognit'), ('engine', 'engin'), ('struggles', 'struggl'), ('compare', 'compar'), ('caller', 'caller'), ('’', '’'), ('response', 'respons'), ('potentially', 'potenti'), ('confusing', 'confus'), ('list', 'list'), ('phrases', 'phrase'), ('.', '.')]

>> Lemmatization: 
 [('Even', 'Even'), ('worse', 'worse'), (',', ','), ('possible', 'possible'), ('overall', 'overall'), ('performance', 'performance'), ('system', 'system'), ('decrease', 'decrease'), ('recognition', 'recognition'), ('engine', 'engine'), ('struggles', 'struggle'), ('compare', 'compare'), ('caller', 'caller'), ('’', '’'), ('response', 'response'), ('potentially', 'potentially'), ('confusing', 'confusing'), ('list', 'list'), ('phrases', 'phrase'), ('.', '.')]



========================================== PARAGRAPH 41 ===========================================

The reality is that it is impossible to foresee and capture every conceivable  response variant even in a very large grammar. To learn to speak customer-  ese, the self-service system needs more natural language capabilities. 

------------------- Sentence 1 -------------------

The reality is that it is impossible to foresee and capture every conceivable  response variant even in a very large grammar.

>> Tokens are: 
 ['The', 'reality', 'impossible', 'foresee', 'capture', 'every', 'conceivable', 'response', 'variant', 'even', 'large', 'grammar', '.']

>> Bigrams are: 
 [('The', 'reality'), ('reality', 'impossible'), ('impossible', 'foresee'), ('foresee', 'capture'), ('capture', 'every'), ('every', 'conceivable'), ('conceivable', 'response'), ('response', 'variant'), ('variant', 'even'), ('even', 'large'), ('large', 'grammar'), ('grammar', '.')]

>> Trigrams are: 
 [('The', 'reality', 'impossible'), ('reality', 'impossible', 'foresee'), ('impossible', 'foresee', 'capture'), ('foresee', 'capture', 'every'), ('capture', 'every', 'conceivable'), ('every', 'conceivable', 'response'), ('conceivable', 'response', 'variant'), ('response', 'variant', 'even'), ('variant', 'even', 'large'), ('even', 'large', 'grammar'), ('large', 'grammar', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('reality', 'NN'), ('impossible', 'JJ'), ('foresee', 'NN'), ('capture', 'NN'), ('every', 'DT'), ('conceivable', 'JJ'), ('response', 'NN'), ('variant', 'NN'), ('even', 'RB'), ('large', 'JJ'), ('grammar', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['The reality', 'impossible foresee capture', 'every conceivable response variant', 'large grammar']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('reality', 'realiti'), ('impossible', 'imposs'), ('foresee', 'forese'), ('capture', 'captur'), ('every', 'everi'), ('conceivable', 'conceiv'), ('response', 'respons'), ('variant', 'variant'), ('even', 'even'), ('large', 'larg'), ('grammar', 'grammar'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('reality', 'realiti'), ('impossible', 'imposs'), ('foresee', 'forese'), ('capture', 'captur'), ('every', 'everi'), ('conceivable', 'conceiv'), ('response', 'respons'), ('variant', 'variant'), ('even', 'even'), ('large', 'larg'), ('grammar', 'grammar'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('reality', 'reality'), ('impossible', 'impossible'), ('foresee', 'foresee'), ('capture', 'capture'), ('every', 'every'), ('conceivable', 'conceivable'), ('response', 'response'), ('variant', 'variant'), ('even', 'even'), ('large', 'large'), ('grammar', 'grammar'), ('.', '.')]


------------------- Sentence 2 -------------------

To learn to speak customer-  ese, the self-service system needs more natural language capabilities.

>> Tokens are: 
 ['To', 'learn', 'speak', 'customer-', 'ese', ',', 'self-service', 'system', 'needs', 'natural', 'language', 'capabilities', '.']

>> Bigrams are: 
 [('To', 'learn'), ('learn', 'speak'), ('speak', 'customer-'), ('customer-', 'ese'), ('ese', ','), (',', 'self-service'), ('self-service', 'system'), ('system', 'needs'), ('needs', 'natural'), ('natural', 'language'), ('language', 'capabilities'), ('capabilities', '.')]

>> Trigrams are: 
 [('To', 'learn', 'speak'), ('learn', 'speak', 'customer-'), ('speak', 'customer-', 'ese'), ('customer-', 'ese', ','), ('ese', ',', 'self-service'), (',', 'self-service', 'system'), ('self-service', 'system', 'needs'), ('system', 'needs', 'natural'), ('needs', 'natural', 'language'), ('natural', 'language', 'capabilities'), ('language', 'capabilities', '.')]

>> POS Tags are: 
 [('To', 'TO'), ('learn', 'VB'), ('speak', 'JJ'), ('customer-', 'JJ'), ('ese', 'JJ'), (',', ','), ('self-service', 'JJ'), ('system', 'NN'), ('needs', 'VBZ'), ('natural', 'JJ'), ('language', 'NN'), ('capabilities', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['self-service system', 'natural language capabilities']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('To', 'to'), ('learn', 'learn'), ('speak', 'speak'), ('customer-', 'customer-'), ('ese', 'ese'), (',', ','), ('self-service', 'self-servic'), ('system', 'system'), ('needs', 'need'), ('natural', 'natur'), ('language', 'languag'), ('capabilities', 'capabl'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('To', 'to'), ('learn', 'learn'), ('speak', 'speak'), ('customer-', 'customer-'), ('ese', 'ese'), (',', ','), ('self-service', 'self-servic'), ('system', 'system'), ('needs', 'need'), ('natural', 'natur'), ('language', 'languag'), ('capabilities', 'capabl'), ('.', '.')]

>> Lemmatization: 
 [('To', 'To'), ('learn', 'learn'), ('speak', 'speak'), ('customer-', 'customer-'), ('ese', 'ese'), (',', ','), ('self-service', 'self-service'), ('system', 'system'), ('needs', 'need'), ('natural', 'natural'), ('language', 'language'), ('capabilities', 'capability'), ('.', '.')]



========================================== PARAGRAPH 42 ===========================================

Learn to recognize variations of phrases Since every caller expresses themselves in a unique manner, often adding  extraneous information to their response, focusing on recognizing certain  keywords is another approach for avoiding out-of-grammar errors and  achieving higher automation rates. 

------------------- Sentence 1 -------------------

Learn to recognize variations of phrases Since every caller expresses themselves in a unique manner, often adding  extraneous information to their response, focusing on recognizing certain  keywords is another approach for avoiding out-of-grammar errors and  achieving higher automation rates.

>> Tokens are: 
 ['Learn', 'recognize', 'variations', 'phrases', 'Since', 'every', 'caller', 'expresses', 'unique', 'manner', ',', 'often', 'adding', 'extraneous', 'information', 'response', ',', 'focusing', 'recognizing', 'certain', 'keywords', 'another', 'approach', 'avoiding', 'out-of-grammar', 'errors', 'achieving', 'higher', 'automation', 'rates', '.']

>> Bigrams are: 
 [('Learn', 'recognize'), ('recognize', 'variations'), ('variations', 'phrases'), ('phrases', 'Since'), ('Since', 'every'), ('every', 'caller'), ('caller', 'expresses'), ('expresses', 'unique'), ('unique', 'manner'), ('manner', ','), (',', 'often'), ('often', 'adding'), ('adding', 'extraneous'), ('extraneous', 'information'), ('information', 'response'), ('response', ','), (',', 'focusing'), ('focusing', 'recognizing'), ('recognizing', 'certain'), ('certain', 'keywords'), ('keywords', 'another'), ('another', 'approach'), ('approach', 'avoiding'), ('avoiding', 'out-of-grammar'), ('out-of-grammar', 'errors'), ('errors', 'achieving'), ('achieving', 'higher'), ('higher', 'automation'), ('automation', 'rates'), ('rates', '.')]

>> Trigrams are: 
 [('Learn', 'recognize', 'variations'), ('recognize', 'variations', 'phrases'), ('variations', 'phrases', 'Since'), ('phrases', 'Since', 'every'), ('Since', 'every', 'caller'), ('every', 'caller', 'expresses'), ('caller', 'expresses', 'unique'), ('expresses', 'unique', 'manner'), ('unique', 'manner', ','), ('manner', ',', 'often'), (',', 'often', 'adding'), ('often', 'adding', 'extraneous'), ('adding', 'extraneous', 'information'), ('extraneous', 'information', 'response'), ('information', 'response', ','), ('response', ',', 'focusing'), (',', 'focusing', 'recognizing'), ('focusing', 'recognizing', 'certain'), ('recognizing', 'certain', 'keywords'), ('certain', 'keywords', 'another'), ('keywords', 'another', 'approach'), ('another', 'approach', 'avoiding'), ('approach', 'avoiding', 'out-of-grammar'), ('avoiding', 'out-of-grammar', 'errors'), ('out-of-grammar', 'errors', 'achieving'), ('errors', 'achieving', 'higher'), ('achieving', 'higher', 'automation'), ('higher', 'automation', 'rates'), ('automation', 'rates', '.')]

>> POS Tags are: 
 [('Learn', 'NNP'), ('recognize', 'VBP'), ('variations', 'NNS'), ('phrases', 'NNS'), ('Since', 'IN'), ('every', 'DT'), ('caller', 'NN'), ('expresses', 'VBZ'), ('unique', 'JJ'), ('manner', 'NN'), (',', ','), ('often', 'RB'), ('adding', 'VBG'), ('extraneous', 'JJ'), ('information', 'NN'), ('response', 'NN'), (',', ','), ('focusing', 'VBG'), ('recognizing', 'VBG'), ('certain', 'JJ'), ('keywords', 'NNS'), ('another', 'DT'), ('approach', 'NN'), ('avoiding', 'VBG'), ('out-of-grammar', 'JJ'), ('errors', 'NNS'), ('achieving', 'VBG'), ('higher', 'JJR'), ('automation', 'NN'), ('rates', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['Learn', 'variations phrases', 'every caller', 'unique manner', 'extraneous information response', 'certain keywords', 'another approach', 'out-of-grammar errors', 'automation rates']

>> Named Entities are: 
 [('GPE', 'Learn')] 

>> Stemming using Porter Stemmer: 
 [('Learn', 'learn'), ('recognize', 'recogn'), ('variations', 'variat'), ('phrases', 'phrase'), ('Since', 'sinc'), ('every', 'everi'), ('caller', 'caller'), ('expresses', 'express'), ('unique', 'uniqu'), ('manner', 'manner'), (',', ','), ('often', 'often'), ('adding', 'ad'), ('extraneous', 'extran'), ('information', 'inform'), ('response', 'respons'), (',', ','), ('focusing', 'focus'), ('recognizing', 'recogn'), ('certain', 'certain'), ('keywords', 'keyword'), ('another', 'anoth'), ('approach', 'approach'), ('avoiding', 'avoid'), ('out-of-grammar', 'out-of-grammar'), ('errors', 'error'), ('achieving', 'achiev'), ('higher', 'higher'), ('automation', 'autom'), ('rates', 'rate'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Learn', 'learn'), ('recognize', 'recogn'), ('variations', 'variat'), ('phrases', 'phrase'), ('Since', 'sinc'), ('every', 'everi'), ('caller', 'caller'), ('expresses', 'express'), ('unique', 'uniqu'), ('manner', 'manner'), (',', ','), ('often', 'often'), ('adding', 'ad'), ('extraneous', 'extran'), ('information', 'inform'), ('response', 'respons'), (',', ','), ('focusing', 'focus'), ('recognizing', 'recogn'), ('certain', 'certain'), ('keywords', 'keyword'), ('another', 'anoth'), ('approach', 'approach'), ('avoiding', 'avoid'), ('out-of-grammar', 'out-of-grammar'), ('errors', 'error'), ('achieving', 'achiev'), ('higher', 'higher'), ('automation', 'autom'), ('rates', 'rate'), ('.', '.')]

>> Lemmatization: 
 [('Learn', 'Learn'), ('recognize', 'recognize'), ('variations', 'variation'), ('phrases', 'phrase'), ('Since', 'Since'), ('every', 'every'), ('caller', 'caller'), ('expresses', 'express'), ('unique', 'unique'), ('manner', 'manner'), (',', ','), ('often', 'often'), ('adding', 'adding'), ('extraneous', 'extraneous'), ('information', 'information'), ('response', 'response'), (',', ','), ('focusing', 'focusing'), ('recognizing', 'recognizing'), ('certain', 'certain'), ('keywords', 'keywords'), ('another', 'another'), ('approach', 'approach'), ('avoiding', 'avoiding'), ('out-of-grammar', 'out-of-grammar'), ('errors', 'error'), ('achieving', 'achieving'), ('higher', 'higher'), ('automation', 'automation'), ('rates', 'rate'), ('.', '.')]



========================================== PARAGRAPH 43 ===========================================

Keyword spotting, sometimes referred to as robust parsing, is used when a  caller says what the system is expecting but surrounds their response with  filler phrases. Instead of simply saying “Yes” they may actually say “Um, I  think so, yes”. The keyword spotting approach is most effective with short  menus and yes/no dialogs which typically account for more than 70% of  speech-enabled application interactions. 

------------------- Sentence 1 -------------------

Keyword spotting, sometimes referred to as robust parsing, is used when a  caller says what the system is expecting but surrounds their response with  filler phrases.

>> Tokens are: 
 ['Keyword', 'spotting', ',', 'sometimes', 'referred', 'robust', 'parsing', ',', 'used', 'caller', 'says', 'system', 'expecting', 'surrounds', 'response', 'filler', 'phrases', '.']

>> Bigrams are: 
 [('Keyword', 'spotting'), ('spotting', ','), (',', 'sometimes'), ('sometimes', 'referred'), ('referred', 'robust'), ('robust', 'parsing'), ('parsing', ','), (',', 'used'), ('used', 'caller'), ('caller', 'says'), ('says', 'system'), ('system', 'expecting'), ('expecting', 'surrounds'), ('surrounds', 'response'), ('response', 'filler'), ('filler', 'phrases'), ('phrases', '.')]

>> Trigrams are: 
 [('Keyword', 'spotting', ','), ('spotting', ',', 'sometimes'), (',', 'sometimes', 'referred'), ('sometimes', 'referred', 'robust'), ('referred', 'robust', 'parsing'), ('robust', 'parsing', ','), ('parsing', ',', 'used'), (',', 'used', 'caller'), ('used', 'caller', 'says'), ('caller', 'says', 'system'), ('says', 'system', 'expecting'), ('system', 'expecting', 'surrounds'), ('expecting', 'surrounds', 'response'), ('surrounds', 'response', 'filler'), ('response', 'filler', 'phrases'), ('filler', 'phrases', '.')]

>> POS Tags are: 
 [('Keyword', 'NNP'), ('spotting', 'NN'), (',', ','), ('sometimes', 'RB'), ('referred', 'VBD'), ('robust', 'JJ'), ('parsing', 'NN'), (',', ','), ('used', 'VBN'), ('caller', 'NN'), ('says', 'VBZ'), ('system', 'NN'), ('expecting', 'VBG'), ('surrounds', 'NNS'), ('response', 'NN'), ('filler', 'NN'), ('phrases', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['Keyword spotting', 'robust parsing', 'caller', 'system', 'surrounds response filler phrases']

>> Named Entities are: 
 [('GPE', 'Keyword')] 

>> Stemming using Porter Stemmer: 
 [('Keyword', 'keyword'), ('spotting', 'spot'), (',', ','), ('sometimes', 'sometim'), ('referred', 'refer'), ('robust', 'robust'), ('parsing', 'pars'), (',', ','), ('used', 'use'), ('caller', 'caller'), ('says', 'say'), ('system', 'system'), ('expecting', 'expect'), ('surrounds', 'surround'), ('response', 'respons'), ('filler', 'filler'), ('phrases', 'phrase'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Keyword', 'keyword'), ('spotting', 'spot'), (',', ','), ('sometimes', 'sometim'), ('referred', 'refer'), ('robust', 'robust'), ('parsing', 'pars'), (',', ','), ('used', 'use'), ('caller', 'caller'), ('says', 'say'), ('system', 'system'), ('expecting', 'expect'), ('surrounds', 'surround'), ('response', 'respons'), ('filler', 'filler'), ('phrases', 'phrase'), ('.', '.')]

>> Lemmatization: 
 [('Keyword', 'Keyword'), ('spotting', 'spotting'), (',', ','), ('sometimes', 'sometimes'), ('referred', 'referred'), ('robust', 'robust'), ('parsing', 'parsing'), (',', ','), ('used', 'used'), ('caller', 'caller'), ('says', 'say'), ('system', 'system'), ('expecting', 'expecting'), ('surrounds', 'surround'), ('response', 'response'), ('filler', 'filler'), ('phrases', 'phrase'), ('.', '.')]


------------------- Sentence 2 -------------------

Instead of simply saying “Yes” they may actually say “Um, I  think so, yes”.

>> Tokens are: 
 ['Instead', 'simply', 'saying', '“', 'Yes', '”', 'may', 'actually', 'say', '“', 'Um', ',', 'I', 'think', ',', 'yes', '”', '.']

>> Bigrams are: 
 [('Instead', 'simply'), ('simply', 'saying'), ('saying', '“'), ('“', 'Yes'), ('Yes', '”'), ('”', 'may'), ('may', 'actually'), ('actually', 'say'), ('say', '“'), ('“', 'Um'), ('Um', ','), (',', 'I'), ('I', 'think'), ('think', ','), (',', 'yes'), ('yes', '”'), ('”', '.')]

>> Trigrams are: 
 [('Instead', 'simply', 'saying'), ('simply', 'saying', '“'), ('saying', '“', 'Yes'), ('“', 'Yes', '”'), ('Yes', '”', 'may'), ('”', 'may', 'actually'), ('may', 'actually', 'say'), ('actually', 'say', '“'), ('say', '“', 'Um'), ('“', 'Um', ','), ('Um', ',', 'I'), (',', 'I', 'think'), ('I', 'think', ','), ('think', ',', 'yes'), (',', 'yes', '”'), ('yes', '”', '.')]

>> POS Tags are: 
 [('Instead', 'RB'), ('simply', 'RB'), ('saying', 'VBG'), ('“', 'JJ'), ('Yes', 'NNP'), ('”', 'NN'), ('may', 'MD'), ('actually', 'RB'), ('say', 'VB'), ('“', 'JJ'), ('Um', 'NNP'), (',', ','), ('I', 'PRP'), ('think', 'VBP'), (',', ','), ('yes', 'UH'), ('”', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['“ Yes ”', '“ Um', '”']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Instead', 'instead'), ('simply', 'simpli'), ('saying', 'say'), ('“', '“'), ('Yes', 'ye'), ('”', '”'), ('may', 'may'), ('actually', 'actual'), ('say', 'say'), ('“', '“'), ('Um', 'um'), (',', ','), ('I', 'i'), ('think', 'think'), (',', ','), ('yes', 'ye'), ('”', '”'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Instead', 'instead'), ('simply', 'simpli'), ('saying', 'say'), ('“', '“'), ('Yes', 'yes'), ('”', '”'), ('may', 'may'), ('actually', 'actual'), ('say', 'say'), ('“', '“'), ('Um', 'um'), (',', ','), ('I', 'i'), ('think', 'think'), (',', ','), ('yes', 'yes'), ('”', '”'), ('.', '.')]

>> Lemmatization: 
 [('Instead', 'Instead'), ('simply', 'simply'), ('saying', 'saying'), ('“', '“'), ('Yes', 'Yes'), ('”', '”'), ('may', 'may'), ('actually', 'actually'), ('say', 'say'), ('“', '“'), ('Um', 'Um'), (',', ','), ('I', 'I'), ('think', 'think'), (',', ','), ('yes', 'yes'), ('”', '”'), ('.', '.')]


------------------- Sentence 3 -------------------

The keyword spotting approach is most effective with short  menus and yes/no dialogs which typically account for more than 70% of  speech-enabled application interactions.

>> Tokens are: 
 ['The', 'keyword', 'spotting', 'approach', 'effective', 'short', 'menus', 'yes/no', 'dialogs', 'typically', 'account', '70', '%', 'speech-enabled', 'application', 'interactions', '.']

>> Bigrams are: 
 [('The', 'keyword'), ('keyword', 'spotting'), ('spotting', 'approach'), ('approach', 'effective'), ('effective', 'short'), ('short', 'menus'), ('menus', 'yes/no'), ('yes/no', 'dialogs'), ('dialogs', 'typically'), ('typically', 'account'), ('account', '70'), ('70', '%'), ('%', 'speech-enabled'), ('speech-enabled', 'application'), ('application', 'interactions'), ('interactions', '.')]

>> Trigrams are: 
 [('The', 'keyword', 'spotting'), ('keyword', 'spotting', 'approach'), ('spotting', 'approach', 'effective'), ('approach', 'effective', 'short'), ('effective', 'short', 'menus'), ('short', 'menus', 'yes/no'), ('menus', 'yes/no', 'dialogs'), ('yes/no', 'dialogs', 'typically'), ('dialogs', 'typically', 'account'), ('typically', 'account', '70'), ('account', '70', '%'), ('70', '%', 'speech-enabled'), ('%', 'speech-enabled', 'application'), ('speech-enabled', 'application', 'interactions'), ('application', 'interactions', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('keyword', 'NN'), ('spotting', 'VBG'), ('approach', 'NN'), ('effective', 'JJ'), ('short', 'JJ'), ('menus', 'NN'), ('yes/no', 'NNS'), ('dialogs', 'VBP'), ('typically', 'RB'), ('account', 'VBP'), ('70', 'CD'), ('%', 'NN'), ('speech-enabled', 'JJ'), ('application', 'NN'), ('interactions', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['The keyword', 'approach', 'effective short menus yes/no', '%', 'speech-enabled application interactions']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('keyword', 'keyword'), ('spotting', 'spot'), ('approach', 'approach'), ('effective', 'effect'), ('short', 'short'), ('menus', 'menu'), ('yes/no', 'yes/no'), ('dialogs', 'dialog'), ('typically', 'typic'), ('account', 'account'), ('70', '70'), ('%', '%'), ('speech-enabled', 'speech-en'), ('application', 'applic'), ('interactions', 'interact'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('keyword', 'keyword'), ('spotting', 'spot'), ('approach', 'approach'), ('effective', 'effect'), ('short', 'short'), ('menus', 'menus'), ('yes/no', 'yes/no'), ('dialogs', 'dialog'), ('typically', 'typic'), ('account', 'account'), ('70', '70'), ('%', '%'), ('speech-enabled', 'speech-en'), ('application', 'applic'), ('interactions', 'interact'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('keyword', 'keyword'), ('spotting', 'spotting'), ('approach', 'approach'), ('effective', 'effective'), ('short', 'short'), ('menus', 'menu'), ('yes/no', 'yes/no'), ('dialogs', 'dialog'), ('typically', 'typically'), ('account', 'account'), ('70', '70'), ('%', '%'), ('speech-enabled', 'speech-enabled'), ('application', 'application'), ('interactions', 'interaction'), ('.', '.')]



========================================== PARAGRAPH 44 ===========================================

This statistical technique is based on comparing vocabularies of filler phrases  created from transcriptions of previous calls or from classes of common  phrases refined over time. Applying these vocabularies can provide an  impressive 30% or more increase in recognition accuracy. 

------------------- Sentence 1 -------------------

This statistical technique is based on comparing vocabularies of filler phrases  created from transcriptions of previous calls or from classes of common  phrases refined over time.

>> Tokens are: 
 ['This', 'statistical', 'technique', 'based', 'comparing', 'vocabularies', 'filler', 'phrases', 'created', 'transcriptions', 'previous', 'calls', 'classes', 'common', 'phrases', 'refined', 'time', '.']

>> Bigrams are: 
 [('This', 'statistical'), ('statistical', 'technique'), ('technique', 'based'), ('based', 'comparing'), ('comparing', 'vocabularies'), ('vocabularies', 'filler'), ('filler', 'phrases'), ('phrases', 'created'), ('created', 'transcriptions'), ('transcriptions', 'previous'), ('previous', 'calls'), ('calls', 'classes'), ('classes', 'common'), ('common', 'phrases'), ('phrases', 'refined'), ('refined', 'time'), ('time', '.')]

>> Trigrams are: 
 [('This', 'statistical', 'technique'), ('statistical', 'technique', 'based'), ('technique', 'based', 'comparing'), ('based', 'comparing', 'vocabularies'), ('comparing', 'vocabularies', 'filler'), ('vocabularies', 'filler', 'phrases'), ('filler', 'phrases', 'created'), ('phrases', 'created', 'transcriptions'), ('created', 'transcriptions', 'previous'), ('transcriptions', 'previous', 'calls'), ('previous', 'calls', 'classes'), ('calls', 'classes', 'common'), ('classes', 'common', 'phrases'), ('common', 'phrases', 'refined'), ('phrases', 'refined', 'time'), ('refined', 'time', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('statistical', 'JJ'), ('technique', 'NN'), ('based', 'VBN'), ('comparing', 'VBG'), ('vocabularies', 'NNS'), ('filler', 'NN'), ('phrases', 'NNS'), ('created', 'VBD'), ('transcriptions', 'NNS'), ('previous', 'JJ'), ('calls', 'NNS'), ('classes', 'NNS'), ('common', 'JJ'), ('phrases', 'NNS'), ('refined', 'JJ'), ('time', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['This statistical technique', 'vocabularies filler phrases', 'transcriptions', 'previous calls classes', 'common phrases', 'refined time']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('statistical', 'statist'), ('technique', 'techniqu'), ('based', 'base'), ('comparing', 'compar'), ('vocabularies', 'vocabulari'), ('filler', 'filler'), ('phrases', 'phrase'), ('created', 'creat'), ('transcriptions', 'transcript'), ('previous', 'previou'), ('calls', 'call'), ('classes', 'class'), ('common', 'common'), ('phrases', 'phrase'), ('refined', 'refin'), ('time', 'time'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('statistical', 'statist'), ('technique', 'techniqu'), ('based', 'base'), ('comparing', 'compar'), ('vocabularies', 'vocabulari'), ('filler', 'filler'), ('phrases', 'phrase'), ('created', 'creat'), ('transcriptions', 'transcript'), ('previous', 'previous'), ('calls', 'call'), ('classes', 'class'), ('common', 'common'), ('phrases', 'phrase'), ('refined', 'refin'), ('time', 'time'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('statistical', 'statistical'), ('technique', 'technique'), ('based', 'based'), ('comparing', 'comparing'), ('vocabularies', 'vocabulary'), ('filler', 'filler'), ('phrases', 'phrase'), ('created', 'created'), ('transcriptions', 'transcription'), ('previous', 'previous'), ('calls', 'call'), ('classes', 'class'), ('common', 'common'), ('phrases', 'phrase'), ('refined', 'refined'), ('time', 'time'), ('.', '.')]


------------------- Sentence 2 -------------------

Applying these vocabularies can provide an  impressive 30% or more increase in recognition accuracy.

>> Tokens are: 
 ['Applying', 'vocabularies', 'provide', 'impressive', '30', '%', 'increase', 'recognition', 'accuracy', '.']

>> Bigrams are: 
 [('Applying', 'vocabularies'), ('vocabularies', 'provide'), ('provide', 'impressive'), ('impressive', '30'), ('30', '%'), ('%', 'increase'), ('increase', 'recognition'), ('recognition', 'accuracy'), ('accuracy', '.')]

>> Trigrams are: 
 [('Applying', 'vocabularies', 'provide'), ('vocabularies', 'provide', 'impressive'), ('provide', 'impressive', '30'), ('impressive', '30', '%'), ('30', '%', 'increase'), ('%', 'increase', 'recognition'), ('increase', 'recognition', 'accuracy'), ('recognition', 'accuracy', '.')]

>> POS Tags are: 
 [('Applying', 'VBG'), ('vocabularies', 'NNS'), ('provide', 'VBP'), ('impressive', 'JJ'), ('30', 'CD'), ('%', 'NN'), ('increase', 'NN'), ('recognition', 'NN'), ('accuracy', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['vocabularies', '% increase recognition accuracy']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Applying', 'appli'), ('vocabularies', 'vocabulari'), ('provide', 'provid'), ('impressive', 'impress'), ('30', '30'), ('%', '%'), ('increase', 'increas'), ('recognition', 'recognit'), ('accuracy', 'accuraci'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Applying', 'appli'), ('vocabularies', 'vocabulari'), ('provide', 'provid'), ('impressive', 'impress'), ('30', '30'), ('%', '%'), ('increase', 'increas'), ('recognition', 'recognit'), ('accuracy', 'accuraci'), ('.', '.')]

>> Lemmatization: 
 [('Applying', 'Applying'), ('vocabularies', 'vocabulary'), ('provide', 'provide'), ('impressive', 'impressive'), ('30', '30'), ('%', '%'), ('increase', 'increase'), ('recognition', 'recognition'), ('accuracy', 'accuracy'), ('.', '.')]



========================================== PARAGRAPH 45 ===========================================

As callers have more flexibility in how they can exactly respond, the caller’s  perceived accuracy is typically very high when using keyword spotting. As  with any increase in accuracy, callers also appreciate interactions that avoid  retry prompts and repeated confirmations. 

------------------- Sentence 1 -------------------

As callers have more flexibility in how they can exactly respond, the caller’s  perceived accuracy is typically very high when using keyword spotting.

>> Tokens are: 
 ['As', 'callers', 'flexibility', 'exactly', 'respond', ',', 'caller', '’', 'perceived', 'accuracy', 'typically', 'high', 'using', 'keyword', 'spotting', '.']

>> Bigrams are: 
 [('As', 'callers'), ('callers', 'flexibility'), ('flexibility', 'exactly'), ('exactly', 'respond'), ('respond', ','), (',', 'caller'), ('caller', '’'), ('’', 'perceived'), ('perceived', 'accuracy'), ('accuracy', 'typically'), ('typically', 'high'), ('high', 'using'), ('using', 'keyword'), ('keyword', 'spotting'), ('spotting', '.')]

>> Trigrams are: 
 [('As', 'callers', 'flexibility'), ('callers', 'flexibility', 'exactly'), ('flexibility', 'exactly', 'respond'), ('exactly', 'respond', ','), ('respond', ',', 'caller'), (',', 'caller', '’'), ('caller', '’', 'perceived'), ('’', 'perceived', 'accuracy'), ('perceived', 'accuracy', 'typically'), ('accuracy', 'typically', 'high'), ('typically', 'high', 'using'), ('high', 'using', 'keyword'), ('using', 'keyword', 'spotting'), ('keyword', 'spotting', '.')]

>> POS Tags are: 
 [('As', 'IN'), ('callers', 'NNS'), ('flexibility', 'VBP'), ('exactly', 'RB'), ('respond', 'RB'), (',', ','), ('caller', 'NN'), ('’', 'NNP'), ('perceived', 'VBD'), ('accuracy', 'NN'), ('typically', 'RB'), ('high', 'JJ'), ('using', 'VBG'), ('keyword', 'NN'), ('spotting', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['callers', 'caller ’', 'accuracy', 'keyword spotting']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('As', 'as'), ('callers', 'caller'), ('flexibility', 'flexibl'), ('exactly', 'exactli'), ('respond', 'respond'), (',', ','), ('caller', 'caller'), ('’', '’'), ('perceived', 'perceiv'), ('accuracy', 'accuraci'), ('typically', 'typic'), ('high', 'high'), ('using', 'use'), ('keyword', 'keyword'), ('spotting', 'spot'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('As', 'as'), ('callers', 'caller'), ('flexibility', 'flexibl'), ('exactly', 'exact'), ('respond', 'respond'), (',', ','), ('caller', 'caller'), ('’', '’'), ('perceived', 'perceiv'), ('accuracy', 'accuraci'), ('typically', 'typic'), ('high', 'high'), ('using', 'use'), ('keyword', 'keyword'), ('spotting', 'spot'), ('.', '.')]

>> Lemmatization: 
 [('As', 'As'), ('callers', 'caller'), ('flexibility', 'flexibility'), ('exactly', 'exactly'), ('respond', 'respond'), (',', ','), ('caller', 'caller'), ('’', '’'), ('perceived', 'perceived'), ('accuracy', 'accuracy'), ('typically', 'typically'), ('high', 'high'), ('using', 'using'), ('keyword', 'keyword'), ('spotting', 'spotting'), ('.', '.')]


------------------- Sentence 2 -------------------

As  with any increase in accuracy, callers also appreciate interactions that avoid  retry prompts and repeated confirmations.

>> Tokens are: 
 ['As', 'increase', 'accuracy', ',', 'callers', 'also', 'appreciate', 'interactions', 'avoid', 'retry', 'prompts', 'repeated', 'confirmations', '.']

>> Bigrams are: 
 [('As', 'increase'), ('increase', 'accuracy'), ('accuracy', ','), (',', 'callers'), ('callers', 'also'), ('also', 'appreciate'), ('appreciate', 'interactions'), ('interactions', 'avoid'), ('avoid', 'retry'), ('retry', 'prompts'), ('prompts', 'repeated'), ('repeated', 'confirmations'), ('confirmations', '.')]

>> Trigrams are: 
 [('As', 'increase', 'accuracy'), ('increase', 'accuracy', ','), ('accuracy', ',', 'callers'), (',', 'callers', 'also'), ('callers', 'also', 'appreciate'), ('also', 'appreciate', 'interactions'), ('appreciate', 'interactions', 'avoid'), ('interactions', 'avoid', 'retry'), ('avoid', 'retry', 'prompts'), ('retry', 'prompts', 'repeated'), ('prompts', 'repeated', 'confirmations'), ('repeated', 'confirmations', '.')]

>> POS Tags are: 
 [('As', 'IN'), ('increase', 'NN'), ('accuracy', 'NN'), (',', ','), ('callers', 'NNS'), ('also', 'RB'), ('appreciate', 'VBP'), ('interactions', 'NNS'), ('avoid', 'VBP'), ('retry', 'NN'), ('prompts', 'NNS'), ('repeated', 'VBD'), ('confirmations', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['increase accuracy', 'callers', 'interactions', 'retry prompts', 'confirmations']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('As', 'as'), ('increase', 'increas'), ('accuracy', 'accuraci'), (',', ','), ('callers', 'caller'), ('also', 'also'), ('appreciate', 'appreci'), ('interactions', 'interact'), ('avoid', 'avoid'), ('retry', 'retri'), ('prompts', 'prompt'), ('repeated', 'repeat'), ('confirmations', 'confirm'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('As', 'as'), ('increase', 'increas'), ('accuracy', 'accuraci'), (',', ','), ('callers', 'caller'), ('also', 'also'), ('appreciate', 'appreci'), ('interactions', 'interact'), ('avoid', 'avoid'), ('retry', 'retri'), ('prompts', 'prompt'), ('repeated', 'repeat'), ('confirmations', 'confirm'), ('.', '.')]

>> Lemmatization: 
 [('As', 'As'), ('increase', 'increase'), ('accuracy', 'accuracy'), (',', ','), ('callers', 'caller'), ('also', 'also'), ('appreciate', 'appreciate'), ('interactions', 'interaction'), ('avoid', 'avoid'), ('retry', 'retry'), ('prompts', 'prompt'), ('repeated', 'repeated'), ('confirmations', 'confirmation'), ('.', '.')]



========================================== PARAGRAPH 46 ===========================================

Although the self-service system has already taken a big step towards  learning to speak customer-ese, the caller’s responses are still limited to  words that have been chosen for them rather than allowing them to use their  own words. There are still more natural language capabilities to explore. 

------------------- Sentence 1 -------------------

Although the self-service system has already taken a big step towards  learning to speak customer-ese, the caller’s responses are still limited to  words that have been chosen for them rather than allowing them to use their  own words.

>> Tokens are: 
 ['Although', 'self-service', 'system', 'already', 'taken', 'big', 'step', 'towards', 'learning', 'speak', 'customer-ese', ',', 'caller', '’', 'responses', 'still', 'limited', 'words', 'chosen', 'rather', 'allowing', 'use', 'words', '.']

>> Bigrams are: 
 [('Although', 'self-service'), ('self-service', 'system'), ('system', 'already'), ('already', 'taken'), ('taken', 'big'), ('big', 'step'), ('step', 'towards'), ('towards', 'learning'), ('learning', 'speak'), ('speak', 'customer-ese'), ('customer-ese', ','), (',', 'caller'), ('caller', '’'), ('’', 'responses'), ('responses', 'still'), ('still', 'limited'), ('limited', 'words'), ('words', 'chosen'), ('chosen', 'rather'), ('rather', 'allowing'), ('allowing', 'use'), ('use', 'words'), ('words', '.')]

>> Trigrams are: 
 [('Although', 'self-service', 'system'), ('self-service', 'system', 'already'), ('system', 'already', 'taken'), ('already', 'taken', 'big'), ('taken', 'big', 'step'), ('big', 'step', 'towards'), ('step', 'towards', 'learning'), ('towards', 'learning', 'speak'), ('learning', 'speak', 'customer-ese'), ('speak', 'customer-ese', ','), ('customer-ese', ',', 'caller'), (',', 'caller', '’'), ('caller', '’', 'responses'), ('’', 'responses', 'still'), ('responses', 'still', 'limited'), ('still', 'limited', 'words'), ('limited', 'words', 'chosen'), ('words', 'chosen', 'rather'), ('chosen', 'rather', 'allowing'), ('rather', 'allowing', 'use'), ('allowing', 'use', 'words'), ('use', 'words', '.')]

>> POS Tags are: 
 [('Although', 'IN'), ('self-service', 'JJ'), ('system', 'NN'), ('already', 'RB'), ('taken', 'VBN'), ('big', 'JJ'), ('step', 'NN'), ('towards', 'NNS'), ('learning', 'VBG'), ('speak', 'JJ'), ('customer-ese', 'JJ'), (',', ','), ('caller', 'NN'), ('’', 'NN'), ('responses', 'NNS'), ('still', 'RB'), ('limited', 'JJ'), ('words', 'NNS'), ('chosen', 'VBP'), ('rather', 'RB'), ('allowing', 'VBG'), ('use', 'NN'), ('words', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['self-service system', 'big step towards', 'caller ’ responses', 'limited words', 'use words']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Although', 'although'), ('self-service', 'self-servic'), ('system', 'system'), ('already', 'alreadi'), ('taken', 'taken'), ('big', 'big'), ('step', 'step'), ('towards', 'toward'), ('learning', 'learn'), ('speak', 'speak'), ('customer-ese', 'customer-es'), (',', ','), ('caller', 'caller'), ('’', '’'), ('responses', 'respons'), ('still', 'still'), ('limited', 'limit'), ('words', 'word'), ('chosen', 'chosen'), ('rather', 'rather'), ('allowing', 'allow'), ('use', 'use'), ('words', 'word'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Although', 'although'), ('self-service', 'self-servic'), ('system', 'system'), ('already', 'alreadi'), ('taken', 'taken'), ('big', 'big'), ('step', 'step'), ('towards', 'toward'), ('learning', 'learn'), ('speak', 'speak'), ('customer-ese', 'customer-es'), (',', ','), ('caller', 'caller'), ('’', '’'), ('responses', 'respons'), ('still', 'still'), ('limited', 'limit'), ('words', 'word'), ('chosen', 'chosen'), ('rather', 'rather'), ('allowing', 'allow'), ('use', 'use'), ('words', 'word'), ('.', '.')]

>> Lemmatization: 
 [('Although', 'Although'), ('self-service', 'self-service'), ('system', 'system'), ('already', 'already'), ('taken', 'taken'), ('big', 'big'), ('step', 'step'), ('towards', 'towards'), ('learning', 'learning'), ('speak', 'speak'), ('customer-ese', 'customer-ese'), (',', ','), ('caller', 'caller'), ('’', '’'), ('responses', 'response'), ('still', 'still'), ('limited', 'limited'), ('words', 'word'), ('chosen', 'chosen'), ('rather', 'rather'), ('allowing', 'allowing'), ('use', 'use'), ('words', 'word'), ('.', '.')]


------------------- Sentence 2 -------------------

There are still more natural language capabilities to explore.

>> Tokens are: 
 ['There', 'still', 'natural', 'language', 'capabilities', 'explore', '.']

>> Bigrams are: 
 [('There', 'still'), ('still', 'natural'), ('natural', 'language'), ('language', 'capabilities'), ('capabilities', 'explore'), ('explore', '.')]

>> Trigrams are: 
 [('There', 'still', 'natural'), ('still', 'natural', 'language'), ('natural', 'language', 'capabilities'), ('language', 'capabilities', 'explore'), ('capabilities', 'explore', '.')]

>> POS Tags are: 
 [('There', 'EX'), ('still', 'RB'), ('natural', 'JJ'), ('language', 'NN'), ('capabilities', 'NNS'), ('explore', 'RBR'), ('.', '.')]

>> Noun Phrases are: 
 ['natural language capabilities']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('There', 'there'), ('still', 'still'), ('natural', 'natur'), ('language', 'languag'), ('capabilities', 'capabl'), ('explore', 'explor'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('There', 'there'), ('still', 'still'), ('natural', 'natur'), ('language', 'languag'), ('capabilities', 'capabl'), ('explore', 'explor'), ('.', '.')]

>> Lemmatization: 
 [('There', 'There'), ('still', 'still'), ('natural', 'natural'), ('language', 'language'), ('capabilities', 'capability'), ('explore', 'explore'), ('.', '.')]



========================================== PARAGRAPH 47 ===========================================

Become	fluent Rather than focusing only on matches within and around a grammar, another  approach for determining meaning is to ask callers to describe a problem in  their own words. 

------------------- Sentence 1 -------------------

Become	fluent Rather than focusing only on matches within and around a grammar, another  approach for determining meaning is to ask callers to describe a problem in  their own words.

>> Tokens are: 
 ['Become', 'fluent', 'Rather', 'focusing', 'matches', 'within', 'around', 'grammar', ',', 'another', 'approach', 'determining', 'meaning', 'ask', 'callers', 'describe', 'problem', 'words', '.']

>> Bigrams are: 
 [('Become', 'fluent'), ('fluent', 'Rather'), ('Rather', 'focusing'), ('focusing', 'matches'), ('matches', 'within'), ('within', 'around'), ('around', 'grammar'), ('grammar', ','), (',', 'another'), ('another', 'approach'), ('approach', 'determining'), ('determining', 'meaning'), ('meaning', 'ask'), ('ask', 'callers'), ('callers', 'describe'), ('describe', 'problem'), ('problem', 'words'), ('words', '.')]

>> Trigrams are: 
 [('Become', 'fluent', 'Rather'), ('fluent', 'Rather', 'focusing'), ('Rather', 'focusing', 'matches'), ('focusing', 'matches', 'within'), ('matches', 'within', 'around'), ('within', 'around', 'grammar'), ('around', 'grammar', ','), ('grammar', ',', 'another'), (',', 'another', 'approach'), ('another', 'approach', 'determining'), ('approach', 'determining', 'meaning'), ('determining', 'meaning', 'ask'), ('meaning', 'ask', 'callers'), ('ask', 'callers', 'describe'), ('callers', 'describe', 'problem'), ('describe', 'problem', 'words'), ('problem', 'words', '.')]

>> POS Tags are: 
 [('Become', 'NNP'), ('fluent', 'NN'), ('Rather', 'NNP'), ('focusing', 'NN'), ('matches', 'NNS'), ('within', 'IN'), ('around', 'IN'), ('grammar', 'NN'), (',', ','), ('another', 'DT'), ('approach', 'NN'), ('determining', 'VBG'), ('meaning', 'VBG'), ('ask', 'JJ'), ('callers', 'NNS'), ('describe', 'VBP'), ('problem', 'NN'), ('words', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['Become fluent Rather focusing matches', 'grammar', 'another approach', 'ask callers', 'problem words']

>> Named Entities are: 
 [('GPE', 'Become')] 

>> Stemming using Porter Stemmer: 
 [('Become', 'becom'), ('fluent', 'fluent'), ('Rather', 'rather'), ('focusing', 'focus'), ('matches', 'match'), ('within', 'within'), ('around', 'around'), ('grammar', 'grammar'), (',', ','), ('another', 'anoth'), ('approach', 'approach'), ('determining', 'determin'), ('meaning', 'mean'), ('ask', 'ask'), ('callers', 'caller'), ('describe', 'describ'), ('problem', 'problem'), ('words', 'word'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Become', 'becom'), ('fluent', 'fluent'), ('Rather', 'rather'), ('focusing', 'focus'), ('matches', 'match'), ('within', 'within'), ('around', 'around'), ('grammar', 'grammar'), (',', ','), ('another', 'anoth'), ('approach', 'approach'), ('determining', 'determin'), ('meaning', 'mean'), ('ask', 'ask'), ('callers', 'caller'), ('describe', 'describ'), ('problem', 'problem'), ('words', 'word'), ('.', '.')]

>> Lemmatization: 
 [('Become', 'Become'), ('fluent', 'fluent'), ('Rather', 'Rather'), ('focusing', 'focusing'), ('matches', 'match'), ('within', 'within'), ('around', 'around'), ('grammar', 'grammar'), (',', ','), ('another', 'another'), ('approach', 'approach'), ('determining', 'determining'), ('meaning', 'meaning'), ('ask', 'ask'), ('callers', 'caller'), ('describe', 'describe'), ('problem', 'problem'), ('words', 'word'), ('.', '.')]



========================================== PARAGRAPH 48 ===========================================

This approach often begins by offering callers an open-ended prompt  such as “how may I help you?” Callers respond by describing in their own  words why they are calling, perhaps by saying “there’s a strange charge on  my credit card statement”. The system then uses sophisticated statistical  modeling to identify key phrases and look for a match in a list of example  phrases that have known meanings. In this case, the likely meaning would be  associated with billing even though the word ‘billing’ was never spoken. 

------------------- Sentence 1 -------------------

This approach often begins by offering callers an open-ended prompt  such as “how may I help you?” Callers respond by describing in their own  words why they are calling, perhaps by saying “there’s a strange charge on  my credit card statement”.

>> Tokens are: 
 ['This', 'approach', 'often', 'begins', 'offering', 'callers', 'open-ended', 'prompt', '“', 'may', 'I', 'help', '?', '”', 'Callers', 'respond', 'describing', 'words', 'calling', ',', 'perhaps', 'saying', '“', '’', 'strange', 'charge', 'credit', 'card', 'statement', '”', '.']

>> Bigrams are: 
 [('This', 'approach'), ('approach', 'often'), ('often', 'begins'), ('begins', 'offering'), ('offering', 'callers'), ('callers', 'open-ended'), ('open-ended', 'prompt'), ('prompt', '“'), ('“', 'may'), ('may', 'I'), ('I', 'help'), ('help', '?'), ('?', '”'), ('”', 'Callers'), ('Callers', 'respond'), ('respond', 'describing'), ('describing', 'words'), ('words', 'calling'), ('calling', ','), (',', 'perhaps'), ('perhaps', 'saying'), ('saying', '“'), ('“', '’'), ('’', 'strange'), ('strange', 'charge'), ('charge', 'credit'), ('credit', 'card'), ('card', 'statement'), ('statement', '”'), ('”', '.')]

>> Trigrams are: 
 [('This', 'approach', 'often'), ('approach', 'often', 'begins'), ('often', 'begins', 'offering'), ('begins', 'offering', 'callers'), ('offering', 'callers', 'open-ended'), ('callers', 'open-ended', 'prompt'), ('open-ended', 'prompt', '“'), ('prompt', '“', 'may'), ('“', 'may', 'I'), ('may', 'I', 'help'), ('I', 'help', '?'), ('help', '?', '”'), ('?', '”', 'Callers'), ('”', 'Callers', 'respond'), ('Callers', 'respond', 'describing'), ('respond', 'describing', 'words'), ('describing', 'words', 'calling'), ('words', 'calling', ','), ('calling', ',', 'perhaps'), (',', 'perhaps', 'saying'), ('perhaps', 'saying', '“'), ('saying', '“', '’'), ('“', '’', 'strange'), ('’', 'strange', 'charge'), ('strange', 'charge', 'credit'), ('charge', 'credit', 'card'), ('credit', 'card', 'statement'), ('card', 'statement', '”'), ('statement', '”', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('approach', 'NN'), ('often', 'RB'), ('begins', 'VBZ'), ('offering', 'VBG'), ('callers', 'NNS'), ('open-ended', 'JJ'), ('prompt', 'JJ'), ('“', 'NN'), ('may', 'MD'), ('I', 'PRP'), ('help', 'VB'), ('?', '.'), ('”', 'JJ'), ('Callers', 'NNPS'), ('respond', 'VBP'), ('describing', 'VBG'), ('words', 'NNS'), ('calling', 'VBG'), (',', ','), ('perhaps', 'RB'), ('saying', 'VBG'), ('“', 'NNP'), ('’', 'NNP'), ('strange', 'JJ'), ('charge', 'NN'), ('credit', 'NN'), ('card', 'NN'), ('statement', 'NN'), ('”', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['This approach', 'callers', 'open-ended prompt “', 'words', '“ ’', 'strange charge credit card statement ”']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('approach', 'approach'), ('often', 'often'), ('begins', 'begin'), ('offering', 'offer'), ('callers', 'caller'), ('open-ended', 'open-end'), ('prompt', 'prompt'), ('“', '“'), ('may', 'may'), ('I', 'i'), ('help', 'help'), ('?', '?'), ('”', '”'), ('Callers', 'caller'), ('respond', 'respond'), ('describing', 'describ'), ('words', 'word'), ('calling', 'call'), (',', ','), ('perhaps', 'perhap'), ('saying', 'say'), ('“', '“'), ('’', '’'), ('strange', 'strang'), ('charge', 'charg'), ('credit', 'credit'), ('card', 'card'), ('statement', 'statement'), ('”', '”'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('approach', 'approach'), ('often', 'often'), ('begins', 'begin'), ('offering', 'offer'), ('callers', 'caller'), ('open-ended', 'open-end'), ('prompt', 'prompt'), ('“', '“'), ('may', 'may'), ('I', 'i'), ('help', 'help'), ('?', '?'), ('”', '”'), ('Callers', 'caller'), ('respond', 'respond'), ('describing', 'describ'), ('words', 'word'), ('calling', 'call'), (',', ','), ('perhaps', 'perhap'), ('saying', 'say'), ('“', '“'), ('’', '’'), ('strange', 'strang'), ('charge', 'charg'), ('credit', 'credit'), ('card', 'card'), ('statement', 'statement'), ('”', '”'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('approach', 'approach'), ('often', 'often'), ('begins', 'begin'), ('offering', 'offering'), ('callers', 'caller'), ('open-ended', 'open-ended'), ('prompt', 'prompt'), ('“', '“'), ('may', 'may'), ('I', 'I'), ('help', 'help'), ('?', '?'), ('”', '”'), ('Callers', 'Callers'), ('respond', 'respond'), ('describing', 'describing'), ('words', 'word'), ('calling', 'calling'), (',', ','), ('perhaps', 'perhaps'), ('saying', 'saying'), ('“', '“'), ('’', '’'), ('strange', 'strange'), ('charge', 'charge'), ('credit', 'credit'), ('card', 'card'), ('statement', 'statement'), ('”', '”'), ('.', '.')]


------------------- Sentence 2 -------------------

The system then uses sophisticated statistical  modeling to identify key phrases and look for a match in a list of example  phrases that have known meanings.

>> Tokens are: 
 ['The', 'system', 'uses', 'sophisticated', 'statistical', 'modeling', 'identify', 'key', 'phrases', 'look', 'match', 'list', 'example', 'phrases', 'known', 'meanings', '.']

>> Bigrams are: 
 [('The', 'system'), ('system', 'uses'), ('uses', 'sophisticated'), ('sophisticated', 'statistical'), ('statistical', 'modeling'), ('modeling', 'identify'), ('identify', 'key'), ('key', 'phrases'), ('phrases', 'look'), ('look', 'match'), ('match', 'list'), ('list', 'example'), ('example', 'phrases'), ('phrases', 'known'), ('known', 'meanings'), ('meanings', '.')]

>> Trigrams are: 
 [('The', 'system', 'uses'), ('system', 'uses', 'sophisticated'), ('uses', 'sophisticated', 'statistical'), ('sophisticated', 'statistical', 'modeling'), ('statistical', 'modeling', 'identify'), ('modeling', 'identify', 'key'), ('identify', 'key', 'phrases'), ('key', 'phrases', 'look'), ('phrases', 'look', 'match'), ('look', 'match', 'list'), ('match', 'list', 'example'), ('list', 'example', 'phrases'), ('example', 'phrases', 'known'), ('phrases', 'known', 'meanings'), ('known', 'meanings', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('system', 'NN'), ('uses', 'VBZ'), ('sophisticated', 'JJ'), ('statistical', 'JJ'), ('modeling', 'NN'), ('identify', 'NN'), ('key', 'JJ'), ('phrases', 'NNS'), ('look', 'VBP'), ('match', 'JJ'), ('list', 'NN'), ('example', 'NN'), ('phrases', 'NNS'), ('known', 'VBN'), ('meanings', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['The system', 'sophisticated statistical modeling identify', 'key phrases', 'match list example phrases', 'meanings']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('system', 'system'), ('uses', 'use'), ('sophisticated', 'sophist'), ('statistical', 'statist'), ('modeling', 'model'), ('identify', 'identifi'), ('key', 'key'), ('phrases', 'phrase'), ('look', 'look'), ('match', 'match'), ('list', 'list'), ('example', 'exampl'), ('phrases', 'phrase'), ('known', 'known'), ('meanings', 'mean'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('system', 'system'), ('uses', 'use'), ('sophisticated', 'sophist'), ('statistical', 'statist'), ('modeling', 'model'), ('identify', 'identifi'), ('key', 'key'), ('phrases', 'phrase'), ('look', 'look'), ('match', 'match'), ('list', 'list'), ('example', 'exampl'), ('phrases', 'phrase'), ('known', 'known'), ('meanings', 'mean'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('system', 'system'), ('uses', 'us'), ('sophisticated', 'sophisticated'), ('statistical', 'statistical'), ('modeling', 'modeling'), ('identify', 'identify'), ('key', 'key'), ('phrases', 'phrase'), ('look', 'look'), ('match', 'match'), ('list', 'list'), ('example', 'example'), ('phrases', 'phrase'), ('known', 'known'), ('meanings', 'meaning'), ('.', '.')]


------------------- Sentence 3 -------------------

In this case, the likely meaning would be  associated with billing even though the word ‘billing’ was never spoken.

>> Tokens are: 
 ['In', 'case', ',', 'likely', 'meaning', 'would', 'associated', 'billing', 'even', 'though', 'word', '‘', 'billing', '’', 'never', 'spoken', '.']

>> Bigrams are: 
 [('In', 'case'), ('case', ','), (',', 'likely'), ('likely', 'meaning'), ('meaning', 'would'), ('would', 'associated'), ('associated', 'billing'), ('billing', 'even'), ('even', 'though'), ('though', 'word'), ('word', '‘'), ('‘', 'billing'), ('billing', '’'), ('’', 'never'), ('never', 'spoken'), ('spoken', '.')]

>> Trigrams are: 
 [('In', 'case', ','), ('case', ',', 'likely'), (',', 'likely', 'meaning'), ('likely', 'meaning', 'would'), ('meaning', 'would', 'associated'), ('would', 'associated', 'billing'), ('associated', 'billing', 'even'), ('billing', 'even', 'though'), ('even', 'though', 'word'), ('though', 'word', '‘'), ('word', '‘', 'billing'), ('‘', 'billing', '’'), ('billing', '’', 'never'), ('’', 'never', 'spoken'), ('never', 'spoken', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('case', 'NN'), (',', ','), ('likely', 'JJ'), ('meaning', 'NN'), ('would', 'MD'), ('associated', 'VB'), ('billing', 'VBG'), ('even', 'RB'), ('though', 'IN'), ('word', 'NN'), ('‘', 'NN'), ('billing', 'NN'), ('’', 'NN'), ('never', 'RB'), ('spoken', 'VBN'), ('.', '.')]

>> Noun Phrases are: 
 ['case', 'likely meaning', 'word ‘ billing ’']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('case', 'case'), (',', ','), ('likely', 'like'), ('meaning', 'mean'), ('would', 'would'), ('associated', 'associ'), ('billing', 'bill'), ('even', 'even'), ('though', 'though'), ('word', 'word'), ('‘', '‘'), ('billing', 'bill'), ('’', '’'), ('never', 'never'), ('spoken', 'spoken'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('case', 'case'), (',', ','), ('likely', 'like'), ('meaning', 'mean'), ('would', 'would'), ('associated', 'associ'), ('billing', 'bill'), ('even', 'even'), ('though', 'though'), ('word', 'word'), ('‘', '‘'), ('billing', 'bill'), ('’', '’'), ('never', 'never'), ('spoken', 'spoken'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('case', 'case'), (',', ','), ('likely', 'likely'), ('meaning', 'meaning'), ('would', 'would'), ('associated', 'associated'), ('billing', 'billing'), ('even', 'even'), ('though', 'though'), ('word', 'word'), ('‘', '‘'), ('billing', 'billing'), ('’', '’'), ('never', 'never'), ('spoken', 'spoken'), ('.', '.')]



========================================== PARAGRAPH 49 ===========================================

SmartListener™ technology  increases automation by interpreting  the meaning of caller responses that  include filler phrases that do not  exactly match expected dialogs. 

------------------- Sentence 1 -------------------

SmartListener™ technology  increases automation by interpreting  the meaning of caller responses that  include filler phrases that do not  exactly match expected dialogs.

>> Tokens are: 
 ['SmartListener™', 'technology', 'increases', 'automation', 'interpreting', 'meaning', 'caller', 'responses', 'include', 'filler', 'phrases', 'exactly', 'match', 'expected', 'dialogs', '.']

>> Bigrams are: 
 [('SmartListener™', 'technology'), ('technology', 'increases'), ('increases', 'automation'), ('automation', 'interpreting'), ('interpreting', 'meaning'), ('meaning', 'caller'), ('caller', 'responses'), ('responses', 'include'), ('include', 'filler'), ('filler', 'phrases'), ('phrases', 'exactly'), ('exactly', 'match'), ('match', 'expected'), ('expected', 'dialogs'), ('dialogs', '.')]

>> Trigrams are: 
 [('SmartListener™', 'technology', 'increases'), ('technology', 'increases', 'automation'), ('increases', 'automation', 'interpreting'), ('automation', 'interpreting', 'meaning'), ('interpreting', 'meaning', 'caller'), ('meaning', 'caller', 'responses'), ('caller', 'responses', 'include'), ('responses', 'include', 'filler'), ('include', 'filler', 'phrases'), ('filler', 'phrases', 'exactly'), ('phrases', 'exactly', 'match'), ('exactly', 'match', 'expected'), ('match', 'expected', 'dialogs'), ('expected', 'dialogs', '.')]

>> POS Tags are: 
 [('SmartListener™', 'NNP'), ('technology', 'NN'), ('increases', 'NNS'), ('automation', 'VBP'), ('interpreting', 'VBG'), ('meaning', 'VBG'), ('caller', 'NN'), ('responses', 'NNS'), ('include', 'VBP'), ('filler', 'JJ'), ('phrases', 'NNS'), ('exactly', 'RB'), ('match', 'VBP'), ('expected', 'VBN'), ('dialogs', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['SmartListener™ technology increases', 'caller responses', 'filler phrases', 'dialogs']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('SmartListener™', 'smartlistener™'), ('technology', 'technolog'), ('increases', 'increas'), ('automation', 'autom'), ('interpreting', 'interpret'), ('meaning', 'mean'), ('caller', 'caller'), ('responses', 'respons'), ('include', 'includ'), ('filler', 'filler'), ('phrases', 'phrase'), ('exactly', 'exactli'), ('match', 'match'), ('expected', 'expect'), ('dialogs', 'dialog'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('SmartListener™', 'smartlistener™'), ('technology', 'technolog'), ('increases', 'increas'), ('automation', 'autom'), ('interpreting', 'interpret'), ('meaning', 'mean'), ('caller', 'caller'), ('responses', 'respons'), ('include', 'includ'), ('filler', 'filler'), ('phrases', 'phrase'), ('exactly', 'exact'), ('match', 'match'), ('expected', 'expect'), ('dialogs', 'dialog'), ('.', '.')]

>> Lemmatization: 
 [('SmartListener™', 'SmartListener™'), ('technology', 'technology'), ('increases', 'increase'), ('automation', 'automation'), ('interpreting', 'interpreting'), ('meaning', 'meaning'), ('caller', 'caller'), ('responses', 'response'), ('include', 'include'), ('filler', 'filler'), ('phrases', 'phrase'), ('exactly', 'exactly'), ('match', 'match'), ('expected', 'expected'), ('dialogs', 'dialog'), ('.', '.')]



========================================== PARAGRAPH 50 ===========================================

White PaperCustomer Service Solutions Natural language understanding4

------------------- Sentence 1 -------------------

White PaperCustomer Service Solutions Natural language understanding4

>> Tokens are: 
 ['White', 'PaperCustomer', 'Service', 'Solutions', 'Natural', 'language', 'understanding4']

>> Bigrams are: 
 [('White', 'PaperCustomer'), ('PaperCustomer', 'Service'), ('Service', 'Solutions'), ('Solutions', 'Natural'), ('Natural', 'language'), ('language', 'understanding4')]

>> Trigrams are: 
 [('White', 'PaperCustomer', 'Service'), ('PaperCustomer', 'Service', 'Solutions'), ('Service', 'Solutions', 'Natural'), ('Solutions', 'Natural', 'language'), ('Natural', 'language', 'understanding4')]

>> POS Tags are: 
 [('White', 'NNP'), ('PaperCustomer', 'NNP'), ('Service', 'NNP'), ('Solutions', 'NNP'), ('Natural', 'NNP'), ('language', 'NN'), ('understanding4', 'NN')]

>> Noun Phrases are: 
 ['White PaperCustomer Service Solutions Natural language understanding4']

>> Named Entities are: 
 [('FACILITY', 'White'), ('ORGANIZATION', 'PaperCustomer Service Solutions Natural')] 

>> Stemming using Porter Stemmer: 
 [('White', 'white'), ('PaperCustomer', 'papercustom'), ('Service', 'servic'), ('Solutions', 'solut'), ('Natural', 'natur'), ('language', 'languag'), ('understanding4', 'understanding4')]

>> Stemming using Snowball Stemmer: 
 [('White', 'white'), ('PaperCustomer', 'papercustom'), ('Service', 'servic'), ('Solutions', 'solut'), ('Natural', 'natur'), ('language', 'languag'), ('understanding4', 'understanding4')]

>> Lemmatization: 
 [('White', 'White'), ('PaperCustomer', 'PaperCustomer'), ('Service', 'Service'), ('Solutions', 'Solutions'), ('Natural', 'Natural'), ('language', 'language'), ('understanding4', 'understanding4')]



========================================== PARAGRAPH 51 ===========================================

Although developing the detailed statistical models involves manual efforts to  define and assign the agreed upon meanings to each transcription, the result  is very high automation rates and high customer satisfaction. The key to  extracting the correct meaning from this open-ended approach is the proper  tagging of previously transcribed phrases. As with grammars, if the caller  gives a completely unexpected response, like talking about ‘pizza toppings’  to an electricity provider’s system, there will not be a match. 

------------------- Sentence 1 -------------------

Although developing the detailed statistical models involves manual efforts to  define and assign the agreed upon meanings to each transcription, the result  is very high automation rates and high customer satisfaction.

>> Tokens are: 
 ['Although', 'developing', 'detailed', 'statistical', 'models', 'involves', 'manual', 'efforts', 'define', 'assign', 'agreed', 'upon', 'meanings', 'transcription', ',', 'result', 'high', 'automation', 'rates', 'high', 'customer', 'satisfaction', '.']

>> Bigrams are: 
 [('Although', 'developing'), ('developing', 'detailed'), ('detailed', 'statistical'), ('statistical', 'models'), ('models', 'involves'), ('involves', 'manual'), ('manual', 'efforts'), ('efforts', 'define'), ('define', 'assign'), ('assign', 'agreed'), ('agreed', 'upon'), ('upon', 'meanings'), ('meanings', 'transcription'), ('transcription', ','), (',', 'result'), ('result', 'high'), ('high', 'automation'), ('automation', 'rates'), ('rates', 'high'), ('high', 'customer'), ('customer', 'satisfaction'), ('satisfaction', '.')]

>> Trigrams are: 
 [('Although', 'developing', 'detailed'), ('developing', 'detailed', 'statistical'), ('detailed', 'statistical', 'models'), ('statistical', 'models', 'involves'), ('models', 'involves', 'manual'), ('involves', 'manual', 'efforts'), ('manual', 'efforts', 'define'), ('efforts', 'define', 'assign'), ('define', 'assign', 'agreed'), ('assign', 'agreed', 'upon'), ('agreed', 'upon', 'meanings'), ('upon', 'meanings', 'transcription'), ('meanings', 'transcription', ','), ('transcription', ',', 'result'), (',', 'result', 'high'), ('result', 'high', 'automation'), ('high', 'automation', 'rates'), ('automation', 'rates', 'high'), ('rates', 'high', 'customer'), ('high', 'customer', 'satisfaction'), ('customer', 'satisfaction', '.')]

>> POS Tags are: 
 [('Although', 'IN'), ('developing', 'VBG'), ('detailed', 'JJ'), ('statistical', 'JJ'), ('models', 'NNS'), ('involves', 'VBZ'), ('manual', 'JJ'), ('efforts', 'NNS'), ('define', 'VBP'), ('assign', 'JJ'), ('agreed', 'VBD'), ('upon', 'IN'), ('meanings', 'NNS'), ('transcription', 'NN'), (',', ','), ('result', 'NN'), ('high', 'JJ'), ('automation', 'NN'), ('rates', 'NNS'), ('high', 'JJ'), ('customer', 'NN'), ('satisfaction', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['detailed statistical models', 'manual efforts', 'meanings transcription', 'result', 'high automation rates', 'high customer satisfaction']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Although', 'although'), ('developing', 'develop'), ('detailed', 'detail'), ('statistical', 'statist'), ('models', 'model'), ('involves', 'involv'), ('manual', 'manual'), ('efforts', 'effort'), ('define', 'defin'), ('assign', 'assign'), ('agreed', 'agre'), ('upon', 'upon'), ('meanings', 'mean'), ('transcription', 'transcript'), (',', ','), ('result', 'result'), ('high', 'high'), ('automation', 'autom'), ('rates', 'rate'), ('high', 'high'), ('customer', 'custom'), ('satisfaction', 'satisfact'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Although', 'although'), ('developing', 'develop'), ('detailed', 'detail'), ('statistical', 'statist'), ('models', 'model'), ('involves', 'involv'), ('manual', 'manual'), ('efforts', 'effort'), ('define', 'defin'), ('assign', 'assign'), ('agreed', 'agre'), ('upon', 'upon'), ('meanings', 'mean'), ('transcription', 'transcript'), (',', ','), ('result', 'result'), ('high', 'high'), ('automation', 'autom'), ('rates', 'rate'), ('high', 'high'), ('customer', 'custom'), ('satisfaction', 'satisfact'), ('.', '.')]

>> Lemmatization: 
 [('Although', 'Although'), ('developing', 'developing'), ('detailed', 'detailed'), ('statistical', 'statistical'), ('models', 'model'), ('involves', 'involves'), ('manual', 'manual'), ('efforts', 'effort'), ('define', 'define'), ('assign', 'assign'), ('agreed', 'agreed'), ('upon', 'upon'), ('meanings', 'meaning'), ('transcription', 'transcription'), (',', ','), ('result', 'result'), ('high', 'high'), ('automation', 'automation'), ('rates', 'rate'), ('high', 'high'), ('customer', 'customer'), ('satisfaction', 'satisfaction'), ('.', '.')]


------------------- Sentence 2 -------------------

The key to  extracting the correct meaning from this open-ended approach is the proper  tagging of previously transcribed phrases.

>> Tokens are: 
 ['The', 'key', 'extracting', 'correct', 'meaning', 'open-ended', 'approach', 'proper', 'tagging', 'previously', 'transcribed', 'phrases', '.']

>> Bigrams are: 
 [('The', 'key'), ('key', 'extracting'), ('extracting', 'correct'), ('correct', 'meaning'), ('meaning', 'open-ended'), ('open-ended', 'approach'), ('approach', 'proper'), ('proper', 'tagging'), ('tagging', 'previously'), ('previously', 'transcribed'), ('transcribed', 'phrases'), ('phrases', '.')]

>> Trigrams are: 
 [('The', 'key', 'extracting'), ('key', 'extracting', 'correct'), ('extracting', 'correct', 'meaning'), ('correct', 'meaning', 'open-ended'), ('meaning', 'open-ended', 'approach'), ('open-ended', 'approach', 'proper'), ('approach', 'proper', 'tagging'), ('proper', 'tagging', 'previously'), ('tagging', 'previously', 'transcribed'), ('previously', 'transcribed', 'phrases'), ('transcribed', 'phrases', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('key', 'NN'), ('extracting', 'VBG'), ('correct', 'JJ'), ('meaning', 'VBG'), ('open-ended', 'JJ'), ('approach', 'NN'), ('proper', 'IN'), ('tagging', 'VBG'), ('previously', 'RB'), ('transcribed', 'VBN'), ('phrases', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['The key', 'open-ended approach', 'phrases']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('key', 'key'), ('extracting', 'extract'), ('correct', 'correct'), ('meaning', 'mean'), ('open-ended', 'open-end'), ('approach', 'approach'), ('proper', 'proper'), ('tagging', 'tag'), ('previously', 'previous'), ('transcribed', 'transcrib'), ('phrases', 'phrase'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('key', 'key'), ('extracting', 'extract'), ('correct', 'correct'), ('meaning', 'mean'), ('open-ended', 'open-end'), ('approach', 'approach'), ('proper', 'proper'), ('tagging', 'tag'), ('previously', 'previous'), ('transcribed', 'transcrib'), ('phrases', 'phrase'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('key', 'key'), ('extracting', 'extracting'), ('correct', 'correct'), ('meaning', 'meaning'), ('open-ended', 'open-ended'), ('approach', 'approach'), ('proper', 'proper'), ('tagging', 'tagging'), ('previously', 'previously'), ('transcribed', 'transcribed'), ('phrases', 'phrase'), ('.', '.')]


------------------- Sentence 3 -------------------

As with grammars, if the caller  gives a completely unexpected response, like talking about ‘pizza toppings’  to an electricity provider’s system, there will not be a match.

>> Tokens are: 
 ['As', 'grammars', ',', 'caller', 'gives', 'completely', 'unexpected', 'response', ',', 'like', 'talking', '‘', 'pizza', 'toppings', '’', 'electricity', 'provider', '’', 'system', ',', 'match', '.']

>> Bigrams are: 
 [('As', 'grammars'), ('grammars', ','), (',', 'caller'), ('caller', 'gives'), ('gives', 'completely'), ('completely', 'unexpected'), ('unexpected', 'response'), ('response', ','), (',', 'like'), ('like', 'talking'), ('talking', '‘'), ('‘', 'pizza'), ('pizza', 'toppings'), ('toppings', '’'), ('’', 'electricity'), ('electricity', 'provider'), ('provider', '’'), ('’', 'system'), ('system', ','), (',', 'match'), ('match', '.')]

>> Trigrams are: 
 [('As', 'grammars', ','), ('grammars', ',', 'caller'), (',', 'caller', 'gives'), ('caller', 'gives', 'completely'), ('gives', 'completely', 'unexpected'), ('completely', 'unexpected', 'response'), ('unexpected', 'response', ','), ('response', ',', 'like'), (',', 'like', 'talking'), ('like', 'talking', '‘'), ('talking', '‘', 'pizza'), ('‘', 'pizza', 'toppings'), ('pizza', 'toppings', '’'), ('toppings', '’', 'electricity'), ('’', 'electricity', 'provider'), ('electricity', 'provider', '’'), ('provider', '’', 'system'), ('’', 'system', ','), ('system', ',', 'match'), (',', 'match', '.')]

>> POS Tags are: 
 [('As', 'IN'), ('grammars', 'NNS'), (',', ','), ('caller', 'NN'), ('gives', 'VBZ'), ('completely', 'RB'), ('unexpected', 'JJ'), ('response', 'NN'), (',', ','), ('like', 'IN'), ('talking', 'VBG'), ('‘', 'NNP'), ('pizza', 'NN'), ('toppings', 'NNS'), ('’', 'VBP'), ('electricity', 'NN'), ('provider', 'NN'), ('’', 'NNP'), ('system', 'NN'), (',', ','), ('match', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['grammars', 'caller', 'unexpected response', '‘ pizza toppings', 'electricity provider ’ system', 'match']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('As', 'as'), ('grammars', 'grammar'), (',', ','), ('caller', 'caller'), ('gives', 'give'), ('completely', 'complet'), ('unexpected', 'unexpect'), ('response', 'respons'), (',', ','), ('like', 'like'), ('talking', 'talk'), ('‘', '‘'), ('pizza', 'pizza'), ('toppings', 'top'), ('’', '’'), ('electricity', 'electr'), ('provider', 'provid'), ('’', '’'), ('system', 'system'), (',', ','), ('match', 'match'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('As', 'as'), ('grammars', 'grammar'), (',', ','), ('caller', 'caller'), ('gives', 'give'), ('completely', 'complet'), ('unexpected', 'unexpect'), ('response', 'respons'), (',', ','), ('like', 'like'), ('talking', 'talk'), ('‘', '‘'), ('pizza', 'pizza'), ('toppings', 'top'), ('’', '’'), ('electricity', 'electr'), ('provider', 'provid'), ('’', '’'), ('system', 'system'), (',', ','), ('match', 'match'), ('.', '.')]

>> Lemmatization: 
 [('As', 'As'), ('grammars', 'grammar'), (',', ','), ('caller', 'caller'), ('gives', 'give'), ('completely', 'completely'), ('unexpected', 'unexpected'), ('response', 'response'), (',', ','), ('like', 'like'), ('talking', 'talking'), ('‘', '‘'), ('pizza', 'pizza'), ('toppings', 'topping'), ('’', '’'), ('electricity', 'electricity'), ('provider', 'provider'), ('’', '’'), ('system', 'system'), (',', ','), ('match', 'match'), ('.', '.')]



========================================== PARAGRAPH 52 ===========================================

When there is no match, the system will offer a fall-back alternative that  uses traditional grammars to determine the caller’s intent such as “I’m sorry  I did not get that, would you like mortgages, credit cards, …” Experience  has shown that applying the keyword spotting approach to these fall-back  grammars often leads to a successful interaction. 

------------------- Sentence 1 -------------------

When there is no match, the system will offer a fall-back alternative that  uses traditional grammars to determine the caller’s intent such as “I’m sorry  I did not get that, would you like mortgages, credit cards, …” Experience  has shown that applying the keyword spotting approach to these fall-back  grammars often leads to a successful interaction.

>> Tokens are: 
 ['When', 'match', ',', 'system', 'offer', 'fall-back', 'alternative', 'uses', 'traditional', 'grammars', 'determine', 'caller', '’', 'intent', '“', 'I', '’', 'sorry', 'I', 'get', ',', 'would', 'like', 'mortgages', ',', 'credit', 'cards', ',', '…', '”', 'Experience', 'shown', 'applying', 'keyword', 'spotting', 'approach', 'fall-back', 'grammars', 'often', 'leads', 'successful', 'interaction', '.']

>> Bigrams are: 
 [('When', 'match'), ('match', ','), (',', 'system'), ('system', 'offer'), ('offer', 'fall-back'), ('fall-back', 'alternative'), ('alternative', 'uses'), ('uses', 'traditional'), ('traditional', 'grammars'), ('grammars', 'determine'), ('determine', 'caller'), ('caller', '’'), ('’', 'intent'), ('intent', '“'), ('“', 'I'), ('I', '’'), ('’', 'sorry'), ('sorry', 'I'), ('I', 'get'), ('get', ','), (',', 'would'), ('would', 'like'), ('like', 'mortgages'), ('mortgages', ','), (',', 'credit'), ('credit', 'cards'), ('cards', ','), (',', '…'), ('…', '”'), ('”', 'Experience'), ('Experience', 'shown'), ('shown', 'applying'), ('applying', 'keyword'), ('keyword', 'spotting'), ('spotting', 'approach'), ('approach', 'fall-back'), ('fall-back', 'grammars'), ('grammars', 'often'), ('often', 'leads'), ('leads', 'successful'), ('successful', 'interaction'), ('interaction', '.')]

>> Trigrams are: 
 [('When', 'match', ','), ('match', ',', 'system'), (',', 'system', 'offer'), ('system', 'offer', 'fall-back'), ('offer', 'fall-back', 'alternative'), ('fall-back', 'alternative', 'uses'), ('alternative', 'uses', 'traditional'), ('uses', 'traditional', 'grammars'), ('traditional', 'grammars', 'determine'), ('grammars', 'determine', 'caller'), ('determine', 'caller', '’'), ('caller', '’', 'intent'), ('’', 'intent', '“'), ('intent', '“', 'I'), ('“', 'I', '’'), ('I', '’', 'sorry'), ('’', 'sorry', 'I'), ('sorry', 'I', 'get'), ('I', 'get', ','), ('get', ',', 'would'), (',', 'would', 'like'), ('would', 'like', 'mortgages'), ('like', 'mortgages', ','), ('mortgages', ',', 'credit'), (',', 'credit', 'cards'), ('credit', 'cards', ','), ('cards', ',', '…'), (',', '…', '”'), ('…', '”', 'Experience'), ('”', 'Experience', 'shown'), ('Experience', 'shown', 'applying'), ('shown', 'applying', 'keyword'), ('applying', 'keyword', 'spotting'), ('keyword', 'spotting', 'approach'), ('spotting', 'approach', 'fall-back'), ('approach', 'fall-back', 'grammars'), ('fall-back', 'grammars', 'often'), ('grammars', 'often', 'leads'), ('often', 'leads', 'successful'), ('leads', 'successful', 'interaction'), ('successful', 'interaction', '.')]

>> POS Tags are: 
 [('When', 'WRB'), ('match', 'NN'), (',', ','), ('system', 'NN'), ('offer', 'VBP'), ('fall-back', 'JJ'), ('alternative', 'JJ'), ('uses', 'NNS'), ('traditional', 'JJ'), ('grammars', 'NNS'), ('determine', 'VBP'), ('caller', 'NN'), ('’', 'NNP'), ('intent', 'NN'), ('“', 'NN'), ('I', 'PRP'), ('’', 'VBP'), ('sorry', 'JJ'), ('I', 'PRP'), ('get', 'VBP'), (',', ','), ('would', 'MD'), ('like', 'VB'), ('mortgages', 'NNS'), (',', ','), ('credit', 'NN'), ('cards', 'NNS'), (',', ','), ('…', 'NNP'), ('”', 'NNP'), ('Experience', 'NNP'), ('shown', 'VBN'), ('applying', 'VBG'), ('keyword', 'NN'), ('spotting', 'VBG'), ('approach', 'NN'), ('fall-back', 'JJ'), ('grammars', 'NNS'), ('often', 'RB'), ('leads', 'VBZ'), ('successful', 'JJ'), ('interaction', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['match', 'system', 'fall-back alternative uses', 'traditional grammars', 'caller ’ intent “', 'mortgages', 'credit cards', '… ” Experience', 'keyword', 'approach', 'fall-back grammars', 'successful interaction']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('When', 'when'), ('match', 'match'), (',', ','), ('system', 'system'), ('offer', 'offer'), ('fall-back', 'fall-back'), ('alternative', 'altern'), ('uses', 'use'), ('traditional', 'tradit'), ('grammars', 'grammar'), ('determine', 'determin'), ('caller', 'caller'), ('’', '’'), ('intent', 'intent'), ('“', '“'), ('I', 'i'), ('’', '’'), ('sorry', 'sorri'), ('I', 'i'), ('get', 'get'), (',', ','), ('would', 'would'), ('like', 'like'), ('mortgages', 'mortgag'), (',', ','), ('credit', 'credit'), ('cards', 'card'), (',', ','), ('…', '…'), ('”', '”'), ('Experience', 'experi'), ('shown', 'shown'), ('applying', 'appli'), ('keyword', 'keyword'), ('spotting', 'spot'), ('approach', 'approach'), ('fall-back', 'fall-back'), ('grammars', 'grammar'), ('often', 'often'), ('leads', 'lead'), ('successful', 'success'), ('interaction', 'interact'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('When', 'when'), ('match', 'match'), (',', ','), ('system', 'system'), ('offer', 'offer'), ('fall-back', 'fall-back'), ('alternative', 'altern'), ('uses', 'use'), ('traditional', 'tradit'), ('grammars', 'grammar'), ('determine', 'determin'), ('caller', 'caller'), ('’', '’'), ('intent', 'intent'), ('“', '“'), ('I', 'i'), ('’', '’'), ('sorry', 'sorri'), ('I', 'i'), ('get', 'get'), (',', ','), ('would', 'would'), ('like', 'like'), ('mortgages', 'mortgag'), (',', ','), ('credit', 'credit'), ('cards', 'card'), (',', ','), ('…', '…'), ('”', '”'), ('Experience', 'experi'), ('shown', 'shown'), ('applying', 'appli'), ('keyword', 'keyword'), ('spotting', 'spot'), ('approach', 'approach'), ('fall-back', 'fall-back'), ('grammars', 'grammar'), ('often', 'often'), ('leads', 'lead'), ('successful', 'success'), ('interaction', 'interact'), ('.', '.')]

>> Lemmatization: 
 [('When', 'When'), ('match', 'match'), (',', ','), ('system', 'system'), ('offer', 'offer'), ('fall-back', 'fall-back'), ('alternative', 'alternative'), ('uses', 'us'), ('traditional', 'traditional'), ('grammars', 'grammar'), ('determine', 'determine'), ('caller', 'caller'), ('’', '’'), ('intent', 'intent'), ('“', '“'), ('I', 'I'), ('’', '’'), ('sorry', 'sorry'), ('I', 'I'), ('get', 'get'), (',', ','), ('would', 'would'), ('like', 'like'), ('mortgages', 'mortgage'), (',', ','), ('credit', 'credit'), ('cards', 'card'), (',', ','), ('…', '…'), ('”', '”'), ('Experience', 'Experience'), ('shown', 'shown'), ('applying', 'applying'), ('keyword', 'keyword'), ('spotting', 'spotting'), ('approach', 'approach'), ('fall-back', 'fall-back'), ('grammars', 'grammar'), ('often', 'often'), ('leads', 'lead'), ('successful', 'successful'), ('interaction', 'interaction'), ('.', '.')]



========================================== PARAGRAPH 53 ===========================================

Appropriate for determining the meaning of any open-ended response, this  powerful approach is highly effective for call routing applications. When  callers use their own words, there tends to be drastically fewer zero-outs  and misroutes as complicated menus are bypassed and confusing or arcane  jargon is avoided. 

------------------- Sentence 1 -------------------

Appropriate for determining the meaning of any open-ended response, this  powerful approach is highly effective for call routing applications.

>> Tokens are: 
 ['Appropriate', 'determining', 'meaning', 'open-ended', 'response', ',', 'powerful', 'approach', 'highly', 'effective', 'call', 'routing', 'applications', '.']

>> Bigrams are: 
 [('Appropriate', 'determining'), ('determining', 'meaning'), ('meaning', 'open-ended'), ('open-ended', 'response'), ('response', ','), (',', 'powerful'), ('powerful', 'approach'), ('approach', 'highly'), ('highly', 'effective'), ('effective', 'call'), ('call', 'routing'), ('routing', 'applications'), ('applications', '.')]

>> Trigrams are: 
 [('Appropriate', 'determining', 'meaning'), ('determining', 'meaning', 'open-ended'), ('meaning', 'open-ended', 'response'), ('open-ended', 'response', ','), ('response', ',', 'powerful'), (',', 'powerful', 'approach'), ('powerful', 'approach', 'highly'), ('approach', 'highly', 'effective'), ('highly', 'effective', 'call'), ('effective', 'call', 'routing'), ('call', 'routing', 'applications'), ('routing', 'applications', '.')]

>> POS Tags are: 
 [('Appropriate', 'NNP'), ('determining', 'VBG'), ('meaning', 'VBG'), ('open-ended', 'JJ'), ('response', 'NN'), (',', ','), ('powerful', 'JJ'), ('approach', 'NN'), ('highly', 'RB'), ('effective', 'JJ'), ('call', 'NN'), ('routing', 'NN'), ('applications', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['Appropriate', 'open-ended response', 'powerful approach', 'effective call routing applications']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Appropriate', 'appropri'), ('determining', 'determin'), ('meaning', 'mean'), ('open-ended', 'open-end'), ('response', 'respons'), (',', ','), ('powerful', 'power'), ('approach', 'approach'), ('highly', 'highli'), ('effective', 'effect'), ('call', 'call'), ('routing', 'rout'), ('applications', 'applic'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Appropriate', 'appropri'), ('determining', 'determin'), ('meaning', 'mean'), ('open-ended', 'open-end'), ('response', 'respons'), (',', ','), ('powerful', 'power'), ('approach', 'approach'), ('highly', 'high'), ('effective', 'effect'), ('call', 'call'), ('routing', 'rout'), ('applications', 'applic'), ('.', '.')]

>> Lemmatization: 
 [('Appropriate', 'Appropriate'), ('determining', 'determining'), ('meaning', 'meaning'), ('open-ended', 'open-ended'), ('response', 'response'), (',', ','), ('powerful', 'powerful'), ('approach', 'approach'), ('highly', 'highly'), ('effective', 'effective'), ('call', 'call'), ('routing', 'routing'), ('applications', 'application'), ('.', '.')]


------------------- Sentence 2 -------------------

When  callers use their own words, there tends to be drastically fewer zero-outs  and misroutes as complicated menus are bypassed and confusing or arcane  jargon is avoided.

>> Tokens are: 
 ['When', 'callers', 'use', 'words', ',', 'tends', 'drastically', 'fewer', 'zero-outs', 'misroutes', 'complicated', 'menus', 'bypassed', 'confusing', 'arcane', 'jargon', 'avoided', '.']

>> Bigrams are: 
 [('When', 'callers'), ('callers', 'use'), ('use', 'words'), ('words', ','), (',', 'tends'), ('tends', 'drastically'), ('drastically', 'fewer'), ('fewer', 'zero-outs'), ('zero-outs', 'misroutes'), ('misroutes', 'complicated'), ('complicated', 'menus'), ('menus', 'bypassed'), ('bypassed', 'confusing'), ('confusing', 'arcane'), ('arcane', 'jargon'), ('jargon', 'avoided'), ('avoided', '.')]

>> Trigrams are: 
 [('When', 'callers', 'use'), ('callers', 'use', 'words'), ('use', 'words', ','), ('words', ',', 'tends'), (',', 'tends', 'drastically'), ('tends', 'drastically', 'fewer'), ('drastically', 'fewer', 'zero-outs'), ('fewer', 'zero-outs', 'misroutes'), ('zero-outs', 'misroutes', 'complicated'), ('misroutes', 'complicated', 'menus'), ('complicated', 'menus', 'bypassed'), ('menus', 'bypassed', 'confusing'), ('bypassed', 'confusing', 'arcane'), ('confusing', 'arcane', 'jargon'), ('arcane', 'jargon', 'avoided'), ('jargon', 'avoided', '.')]

>> POS Tags are: 
 [('When', 'WRB'), ('callers', 'NNS'), ('use', 'VBP'), ('words', 'NNS'), (',', ','), ('tends', 'VBZ'), ('drastically', 'RB'), ('fewer', 'JJR'), ('zero-outs', 'JJ'), ('misroutes', 'NNS'), ('complicated', 'VBD'), ('menus', 'NNS'), ('bypassed', 'VBD'), ('confusing', 'VBG'), ('arcane', 'NN'), ('jargon', 'NN'), ('avoided', 'VBD'), ('.', '.')]

>> Noun Phrases are: 
 ['callers', 'words', 'zero-outs misroutes', 'menus', 'arcane jargon']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('When', 'when'), ('callers', 'caller'), ('use', 'use'), ('words', 'word'), (',', ','), ('tends', 'tend'), ('drastically', 'drastic'), ('fewer', 'fewer'), ('zero-outs', 'zero-out'), ('misroutes', 'misrout'), ('complicated', 'complic'), ('menus', 'menu'), ('bypassed', 'bypass'), ('confusing', 'confus'), ('arcane', 'arcan'), ('jargon', 'jargon'), ('avoided', 'avoid'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('When', 'when'), ('callers', 'caller'), ('use', 'use'), ('words', 'word'), (',', ','), ('tends', 'tend'), ('drastically', 'drastic'), ('fewer', 'fewer'), ('zero-outs', 'zero-out'), ('misroutes', 'misrout'), ('complicated', 'complic'), ('menus', 'menus'), ('bypassed', 'bypass'), ('confusing', 'confus'), ('arcane', 'arcan'), ('jargon', 'jargon'), ('avoided', 'avoid'), ('.', '.')]

>> Lemmatization: 
 [('When', 'When'), ('callers', 'caller'), ('use', 'use'), ('words', 'word'), (',', ','), ('tends', 'tends'), ('drastically', 'drastically'), ('fewer', 'fewer'), ('zero-outs', 'zero-outs'), ('misroutes', 'misroutes'), ('complicated', 'complicated'), ('menus', 'menu'), ('bypassed', 'bypassed'), ('confusing', 'confusing'), ('arcane', 'arcane'), ('jargon', 'jargon'), ('avoided', 'avoided'), ('.', '.')]



========================================== PARAGRAPH 54 ===========================================

Provide	a	more	flexible	script Accurately recognizing the meaning of what a caller says is only part of how  natural language can improve automation. The next step in learning to speak  customer-ese is for the self-service system to have a conversation with the  caller. 

------------------- Sentence 1 -------------------

Provide	a	more	flexible	script Accurately recognizing the meaning of what a caller says is only part of how  natural language can improve automation.

>> Tokens are: 
 ['Provide', 'flexible', 'script', 'Accurately', 'recognizing', 'meaning', 'caller', 'says', 'part', 'natural', 'language', 'improve', 'automation', '.']

>> Bigrams are: 
 [('Provide', 'flexible'), ('flexible', 'script'), ('script', 'Accurately'), ('Accurately', 'recognizing'), ('recognizing', 'meaning'), ('meaning', 'caller'), ('caller', 'says'), ('says', 'part'), ('part', 'natural'), ('natural', 'language'), ('language', 'improve'), ('improve', 'automation'), ('automation', '.')]

>> Trigrams are: 
 [('Provide', 'flexible', 'script'), ('flexible', 'script', 'Accurately'), ('script', 'Accurately', 'recognizing'), ('Accurately', 'recognizing', 'meaning'), ('recognizing', 'meaning', 'caller'), ('meaning', 'caller', 'says'), ('caller', 'says', 'part'), ('says', 'part', 'natural'), ('part', 'natural', 'language'), ('natural', 'language', 'improve'), ('language', 'improve', 'automation'), ('improve', 'automation', '.')]

>> POS Tags are: 
 [('Provide', 'NNP'), ('flexible', 'JJ'), ('script', 'NN'), ('Accurately', 'RB'), ('recognizing', 'VBG'), ('meaning', 'VBG'), ('caller', 'NN'), ('says', 'VBZ'), ('part', 'NN'), ('natural', 'JJ'), ('language', 'NN'), ('improve', 'VB'), ('automation', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['Provide', 'flexible script', 'caller', 'part', 'natural language', 'automation']

>> Named Entities are: 
 [('GPE', 'Provide')] 

>> Stemming using Porter Stemmer: 
 [('Provide', 'provid'), ('flexible', 'flexibl'), ('script', 'script'), ('Accurately', 'accur'), ('recognizing', 'recogn'), ('meaning', 'mean'), ('caller', 'caller'), ('says', 'say'), ('part', 'part'), ('natural', 'natur'), ('language', 'languag'), ('improve', 'improv'), ('automation', 'autom'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Provide', 'provid'), ('flexible', 'flexibl'), ('script', 'script'), ('Accurately', 'accur'), ('recognizing', 'recogn'), ('meaning', 'mean'), ('caller', 'caller'), ('says', 'say'), ('part', 'part'), ('natural', 'natur'), ('language', 'languag'), ('improve', 'improv'), ('automation', 'autom'), ('.', '.')]

>> Lemmatization: 
 [('Provide', 'Provide'), ('flexible', 'flexible'), ('script', 'script'), ('Accurately', 'Accurately'), ('recognizing', 'recognizing'), ('meaning', 'meaning'), ('caller', 'caller'), ('says', 'say'), ('part', 'part'), ('natural', 'natural'), ('language', 'language'), ('improve', 'improve'), ('automation', 'automation'), ('.', '.')]


------------------- Sentence 2 -------------------

The next step in learning to speak  customer-ese is for the self-service system to have a conversation with the  caller.

>> Tokens are: 
 ['The', 'next', 'step', 'learning', 'speak', 'customer-ese', 'self-service', 'system', 'conversation', 'caller', '.']

>> Bigrams are: 
 [('The', 'next'), ('next', 'step'), ('step', 'learning'), ('learning', 'speak'), ('speak', 'customer-ese'), ('customer-ese', 'self-service'), ('self-service', 'system'), ('system', 'conversation'), ('conversation', 'caller'), ('caller', '.')]

>> Trigrams are: 
 [('The', 'next', 'step'), ('next', 'step', 'learning'), ('step', 'learning', 'speak'), ('learning', 'speak', 'customer-ese'), ('speak', 'customer-ese', 'self-service'), ('customer-ese', 'self-service', 'system'), ('self-service', 'system', 'conversation'), ('system', 'conversation', 'caller'), ('conversation', 'caller', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('next', 'JJ'), ('step', 'NN'), ('learning', 'VBG'), ('speak', 'JJ'), ('customer-ese', 'JJ'), ('self-service', 'NN'), ('system', 'NN'), ('conversation', 'NN'), ('caller', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['The next step', 'speak customer-ese self-service system conversation caller']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('next', 'next'), ('step', 'step'), ('learning', 'learn'), ('speak', 'speak'), ('customer-ese', 'customer-es'), ('self-service', 'self-servic'), ('system', 'system'), ('conversation', 'convers'), ('caller', 'caller'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('next', 'next'), ('step', 'step'), ('learning', 'learn'), ('speak', 'speak'), ('customer-ese', 'customer-es'), ('self-service', 'self-servic'), ('system', 'system'), ('conversation', 'convers'), ('caller', 'caller'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('next', 'next'), ('step', 'step'), ('learning', 'learning'), ('speak', 'speak'), ('customer-ese', 'customer-ese'), ('self-service', 'self-service'), ('system', 'system'), ('conversation', 'conversation'), ('caller', 'caller'), ('.', '.')]



========================================== PARAGRAPH 55 ===========================================

The conversational approach relies on dialogs that continuously adapt to  the information provided. This way the caller has a personalized experience  while they control the conversation. For example, callers often provide  more information than prompted for. A system that can respond to varying  amounts of information will have more productive and shorter calls. Notice in  the dialog at the right the caller provides the ‘extra’ information of the return  date allowing the system to avoid having to ask for it. 

------------------- Sentence 1 -------------------

The conversational approach relies on dialogs that continuously adapt to  the information provided.

>> Tokens are: 
 ['The', 'conversational', 'approach', 'relies', 'dialogs', 'continuously', 'adapt', 'information', 'provided', '.']

>> Bigrams are: 
 [('The', 'conversational'), ('conversational', 'approach'), ('approach', 'relies'), ('relies', 'dialogs'), ('dialogs', 'continuously'), ('continuously', 'adapt'), ('adapt', 'information'), ('information', 'provided'), ('provided', '.')]

>> Trigrams are: 
 [('The', 'conversational', 'approach'), ('conversational', 'approach', 'relies'), ('approach', 'relies', 'dialogs'), ('relies', 'dialogs', 'continuously'), ('dialogs', 'continuously', 'adapt'), ('continuously', 'adapt', 'information'), ('adapt', 'information', 'provided'), ('information', 'provided', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('conversational', 'JJ'), ('approach', 'NN'), ('relies', 'NNS'), ('dialogs', 'VBP'), ('continuously', 'RB'), ('adapt', 'JJ'), ('information', 'NN'), ('provided', 'VBD'), ('.', '.')]

>> Noun Phrases are: 
 ['The conversational approach relies', 'adapt information']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('conversational', 'convers'), ('approach', 'approach'), ('relies', 'reli'), ('dialogs', 'dialog'), ('continuously', 'continu'), ('adapt', 'adapt'), ('information', 'inform'), ('provided', 'provid'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('conversational', 'convers'), ('approach', 'approach'), ('relies', 'reli'), ('dialogs', 'dialog'), ('continuously', 'continu'), ('adapt', 'adapt'), ('information', 'inform'), ('provided', 'provid'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('conversational', 'conversational'), ('approach', 'approach'), ('relies', 'relies'), ('dialogs', 'dialog'), ('continuously', 'continuously'), ('adapt', 'adapt'), ('information', 'information'), ('provided', 'provided'), ('.', '.')]


------------------- Sentence 2 -------------------

This way the caller has a personalized experience  while they control the conversation.

>> Tokens are: 
 ['This', 'way', 'caller', 'personalized', 'experience', 'control', 'conversation', '.']

>> Bigrams are: 
 [('This', 'way'), ('way', 'caller'), ('caller', 'personalized'), ('personalized', 'experience'), ('experience', 'control'), ('control', 'conversation'), ('conversation', '.')]

>> Trigrams are: 
 [('This', 'way', 'caller'), ('way', 'caller', 'personalized'), ('caller', 'personalized', 'experience'), ('personalized', 'experience', 'control'), ('experience', 'control', 'conversation'), ('control', 'conversation', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('way', 'NN'), ('caller', 'NN'), ('personalized', 'VBD'), ('experience', 'NN'), ('control', 'NN'), ('conversation', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['This way caller', 'experience control conversation']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('way', 'way'), ('caller', 'caller'), ('personalized', 'person'), ('experience', 'experi'), ('control', 'control'), ('conversation', 'convers'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('way', 'way'), ('caller', 'caller'), ('personalized', 'person'), ('experience', 'experi'), ('control', 'control'), ('conversation', 'convers'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('way', 'way'), ('caller', 'caller'), ('personalized', 'personalized'), ('experience', 'experience'), ('control', 'control'), ('conversation', 'conversation'), ('.', '.')]


------------------- Sentence 3 -------------------

For example, callers often provide  more information than prompted for.

>> Tokens are: 
 ['For', 'example', ',', 'callers', 'often', 'provide', 'information', 'prompted', '.']

>> Bigrams are: 
 [('For', 'example'), ('example', ','), (',', 'callers'), ('callers', 'often'), ('often', 'provide'), ('provide', 'information'), ('information', 'prompted'), ('prompted', '.')]

>> Trigrams are: 
 [('For', 'example', ','), ('example', ',', 'callers'), (',', 'callers', 'often'), ('callers', 'often', 'provide'), ('often', 'provide', 'information'), ('provide', 'information', 'prompted'), ('information', 'prompted', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('example', 'NN'), (',', ','), ('callers', 'NNS'), ('often', 'RB'), ('provide', 'VBP'), ('information', 'NN'), ('prompted', 'VBN'), ('.', '.')]

>> Noun Phrases are: 
 ['example', 'callers', 'information']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('callers', 'caller'), ('often', 'often'), ('provide', 'provid'), ('information', 'inform'), ('prompted', 'prompt'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('callers', 'caller'), ('often', 'often'), ('provide', 'provid'), ('information', 'inform'), ('prompted', 'prompt'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('example', 'example'), (',', ','), ('callers', 'caller'), ('often', 'often'), ('provide', 'provide'), ('information', 'information'), ('prompted', 'prompted'), ('.', '.')]


------------------- Sentence 4 -------------------

A system that can respond to varying  amounts of information will have more productive and shorter calls.

>> Tokens are: 
 ['A', 'system', 'respond', 'varying', 'amounts', 'information', 'productive', 'shorter', 'calls', '.']

>> Bigrams are: 
 [('A', 'system'), ('system', 'respond'), ('respond', 'varying'), ('varying', 'amounts'), ('amounts', 'information'), ('information', 'productive'), ('productive', 'shorter'), ('shorter', 'calls'), ('calls', '.')]

>> Trigrams are: 
 [('A', 'system', 'respond'), ('system', 'respond', 'varying'), ('respond', 'varying', 'amounts'), ('varying', 'amounts', 'information'), ('amounts', 'information', 'productive'), ('information', 'productive', 'shorter'), ('productive', 'shorter', 'calls'), ('shorter', 'calls', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('system', 'NN'), ('respond', 'NN'), ('varying', 'VBG'), ('amounts', 'NNS'), ('information', 'NN'), ('productive', 'JJ'), ('shorter', 'NN'), ('calls', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['A system respond', 'amounts information', 'productive shorter calls']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('system', 'system'), ('respond', 'respond'), ('varying', 'vari'), ('amounts', 'amount'), ('information', 'inform'), ('productive', 'product'), ('shorter', 'shorter'), ('calls', 'call'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('system', 'system'), ('respond', 'respond'), ('varying', 'vari'), ('amounts', 'amount'), ('information', 'inform'), ('productive', 'product'), ('shorter', 'shorter'), ('calls', 'call'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('system', 'system'), ('respond', 'respond'), ('varying', 'varying'), ('amounts', 'amount'), ('information', 'information'), ('productive', 'productive'), ('shorter', 'shorter'), ('calls', 'call'), ('.', '.')]


------------------- Sentence 5 -------------------

Notice in  the dialog at the right the caller provides the ‘extra’ information of the return  date allowing the system to avoid having to ask for it.

>> Tokens are: 
 ['Notice', 'dialog', 'right', 'caller', 'provides', '‘', 'extra', '’', 'information', 'return', 'date', 'allowing', 'system', 'avoid', 'ask', '.']

>> Bigrams are: 
 [('Notice', 'dialog'), ('dialog', 'right'), ('right', 'caller'), ('caller', 'provides'), ('provides', '‘'), ('‘', 'extra'), ('extra', '’'), ('’', 'information'), ('information', 'return'), ('return', 'date'), ('date', 'allowing'), ('allowing', 'system'), ('system', 'avoid'), ('avoid', 'ask'), ('ask', '.')]

>> Trigrams are: 
 [('Notice', 'dialog', 'right'), ('dialog', 'right', 'caller'), ('right', 'caller', 'provides'), ('caller', 'provides', '‘'), ('provides', '‘', 'extra'), ('‘', 'extra', '’'), ('extra', '’', 'information'), ('’', 'information', 'return'), ('information', 'return', 'date'), ('return', 'date', 'allowing'), ('date', 'allowing', 'system'), ('allowing', 'system', 'avoid'), ('system', 'avoid', 'ask'), ('avoid', 'ask', '.')]

>> POS Tags are: 
 [('Notice', 'NNP'), ('dialog', 'NN'), ('right', 'RB'), ('caller', 'NN'), ('provides', 'VBZ'), ('‘', 'JJ'), ('extra', 'JJ'), ('’', 'NN'), ('information', 'NN'), ('return', 'NN'), ('date', 'NN'), ('allowing', 'VBG'), ('system', 'NN'), ('avoid', 'JJ'), ('ask', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['Notice dialog', 'caller', '‘ extra ’ information return date', 'system', 'avoid ask']

>> Named Entities are: 
 [('GPE', 'Notice')] 

>> Stemming using Porter Stemmer: 
 [('Notice', 'notic'), ('dialog', 'dialog'), ('right', 'right'), ('caller', 'caller'), ('provides', 'provid'), ('‘', '‘'), ('extra', 'extra'), ('’', '’'), ('information', 'inform'), ('return', 'return'), ('date', 'date'), ('allowing', 'allow'), ('system', 'system'), ('avoid', 'avoid'), ('ask', 'ask'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Notice', 'notic'), ('dialog', 'dialog'), ('right', 'right'), ('caller', 'caller'), ('provides', 'provid'), ('‘', '‘'), ('extra', 'extra'), ('’', '’'), ('information', 'inform'), ('return', 'return'), ('date', 'date'), ('allowing', 'allow'), ('system', 'system'), ('avoid', 'avoid'), ('ask', 'ask'), ('.', '.')]

>> Lemmatization: 
 [('Notice', 'Notice'), ('dialog', 'dialog'), ('right', 'right'), ('caller', 'caller'), ('provides', 'provides'), ('‘', '‘'), ('extra', 'extra'), ('’', '’'), ('information', 'information'), ('return', 'return'), ('date', 'date'), ('allowing', 'allowing'), ('system', 'system'), ('avoid', 'avoid'), ('ask', 'ask'), ('.', '.')]



========================================== PARAGRAPH 56 ===========================================

More than collecting information, a natural language conversation needs  to flow smoothly. A system that constantly asks for confirmations creates a  disjointed conversation that callers tend to reject. However systems that can  handle corrections and verifications by dynamically embedding the confir- mations in the next prompt are more engaging, leading to better automation  rates. Notice in the dialog below how the system confirms the change to  Boston when the caller requests a window seat. 

------------------- Sentence 1 -------------------

More than collecting information, a natural language conversation needs  to flow smoothly.

>> Tokens are: 
 ['More', 'collecting', 'information', ',', 'natural', 'language', 'conversation', 'needs', 'flow', 'smoothly', '.']

>> Bigrams are: 
 [('More', 'collecting'), ('collecting', 'information'), ('information', ','), (',', 'natural'), ('natural', 'language'), ('language', 'conversation'), ('conversation', 'needs'), ('needs', 'flow'), ('flow', 'smoothly'), ('smoothly', '.')]

>> Trigrams are: 
 [('More', 'collecting', 'information'), ('collecting', 'information', ','), ('information', ',', 'natural'), (',', 'natural', 'language'), ('natural', 'language', 'conversation'), ('language', 'conversation', 'needs'), ('conversation', 'needs', 'flow'), ('needs', 'flow', 'smoothly'), ('flow', 'smoothly', '.')]

>> POS Tags are: 
 [('More', 'RBR'), ('collecting', 'JJ'), ('information', 'NN'), (',', ','), ('natural', 'JJ'), ('language', 'NN'), ('conversation', 'NN'), ('needs', 'VBZ'), ('flow', 'JJ'), ('smoothly', 'RB'), ('.', '.')]

>> Noun Phrases are: 
 ['collecting information', 'natural language conversation']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('More', 'more'), ('collecting', 'collect'), ('information', 'inform'), (',', ','), ('natural', 'natur'), ('language', 'languag'), ('conversation', 'convers'), ('needs', 'need'), ('flow', 'flow'), ('smoothly', 'smoothli'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('More', 'more'), ('collecting', 'collect'), ('information', 'inform'), (',', ','), ('natural', 'natur'), ('language', 'languag'), ('conversation', 'convers'), ('needs', 'need'), ('flow', 'flow'), ('smoothly', 'smooth'), ('.', '.')]

>> Lemmatization: 
 [('More', 'More'), ('collecting', 'collecting'), ('information', 'information'), (',', ','), ('natural', 'natural'), ('language', 'language'), ('conversation', 'conversation'), ('needs', 'need'), ('flow', 'flow'), ('smoothly', 'smoothly'), ('.', '.')]


------------------- Sentence 2 -------------------

A system that constantly asks for confirmations creates a  disjointed conversation that callers tend to reject.

>> Tokens are: 
 ['A', 'system', 'constantly', 'asks', 'confirmations', 'creates', 'disjointed', 'conversation', 'callers', 'tend', 'reject', '.']

>> Bigrams are: 
 [('A', 'system'), ('system', 'constantly'), ('constantly', 'asks'), ('asks', 'confirmations'), ('confirmations', 'creates'), ('creates', 'disjointed'), ('disjointed', 'conversation'), ('conversation', 'callers'), ('callers', 'tend'), ('tend', 'reject'), ('reject', '.')]

>> Trigrams are: 
 [('A', 'system', 'constantly'), ('system', 'constantly', 'asks'), ('constantly', 'asks', 'confirmations'), ('asks', 'confirmations', 'creates'), ('confirmations', 'creates', 'disjointed'), ('creates', 'disjointed', 'conversation'), ('disjointed', 'conversation', 'callers'), ('conversation', 'callers', 'tend'), ('callers', 'tend', 'reject'), ('tend', 'reject', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('system', 'NN'), ('constantly', 'RB'), ('asks', 'VBZ'), ('confirmations', 'NNS'), ('creates', 'NNS'), ('disjointed', 'VBD'), ('conversation', 'NN'), ('callers', 'NNS'), ('tend', 'VBP'), ('reject', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['A system', 'confirmations creates', 'conversation callers', 'reject']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('system', 'system'), ('constantly', 'constantli'), ('asks', 'ask'), ('confirmations', 'confirm'), ('creates', 'creat'), ('disjointed', 'disjoint'), ('conversation', 'convers'), ('callers', 'caller'), ('tend', 'tend'), ('reject', 'reject'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('system', 'system'), ('constantly', 'constant'), ('asks', 'ask'), ('confirmations', 'confirm'), ('creates', 'creat'), ('disjointed', 'disjoint'), ('conversation', 'convers'), ('callers', 'caller'), ('tend', 'tend'), ('reject', 'reject'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('system', 'system'), ('constantly', 'constantly'), ('asks', 'asks'), ('confirmations', 'confirmation'), ('creates', 'creates'), ('disjointed', 'disjointed'), ('conversation', 'conversation'), ('callers', 'caller'), ('tend', 'tend'), ('reject', 'reject'), ('.', '.')]


------------------- Sentence 3 -------------------

However systems that can  handle corrections and verifications by dynamically embedding the confir- mations in the next prompt are more engaging, leading to better automation  rates.

>> Tokens are: 
 ['However', 'systems', 'handle', 'corrections', 'verifications', 'dynamically', 'embedding', 'confir-', 'mations', 'next', 'prompt', 'engaging', ',', 'leading', 'better', 'automation', 'rates', '.']

>> Bigrams are: 
 [('However', 'systems'), ('systems', 'handle'), ('handle', 'corrections'), ('corrections', 'verifications'), ('verifications', 'dynamically'), ('dynamically', 'embedding'), ('embedding', 'confir-'), ('confir-', 'mations'), ('mations', 'next'), ('next', 'prompt'), ('prompt', 'engaging'), ('engaging', ','), (',', 'leading'), ('leading', 'better'), ('better', 'automation'), ('automation', 'rates'), ('rates', '.')]

>> Trigrams are: 
 [('However', 'systems', 'handle'), ('systems', 'handle', 'corrections'), ('handle', 'corrections', 'verifications'), ('corrections', 'verifications', 'dynamically'), ('verifications', 'dynamically', 'embedding'), ('dynamically', 'embedding', 'confir-'), ('embedding', 'confir-', 'mations'), ('confir-', 'mations', 'next'), ('mations', 'next', 'prompt'), ('next', 'prompt', 'engaging'), ('prompt', 'engaging', ','), ('engaging', ',', 'leading'), (',', 'leading', 'better'), ('leading', 'better', 'automation'), ('better', 'automation', 'rates'), ('automation', 'rates', '.')]

>> POS Tags are: 
 [('However', 'RB'), ('systems', 'NNS'), ('handle', 'VBP'), ('corrections', 'NNS'), ('verifications', 'NNS'), ('dynamically', 'RB'), ('embedding', 'VBG'), ('confir-', 'JJ'), ('mations', 'NNS'), ('next', 'IN'), ('prompt', 'JJ'), ('engaging', 'NN'), (',', ','), ('leading', 'VBG'), ('better', 'JJR'), ('automation', 'NN'), ('rates', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['systems', 'corrections verifications', 'confir- mations', 'prompt engaging', 'automation rates']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('However', 'howev'), ('systems', 'system'), ('handle', 'handl'), ('corrections', 'correct'), ('verifications', 'verif'), ('dynamically', 'dynam'), ('embedding', 'embed'), ('confir-', 'confir-'), ('mations', 'mation'), ('next', 'next'), ('prompt', 'prompt'), ('engaging', 'engag'), (',', ','), ('leading', 'lead'), ('better', 'better'), ('automation', 'autom'), ('rates', 'rate'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('However', 'howev'), ('systems', 'system'), ('handle', 'handl'), ('corrections', 'correct'), ('verifications', 'verif'), ('dynamically', 'dynam'), ('embedding', 'embed'), ('confir-', 'confir-'), ('mations', 'mation'), ('next', 'next'), ('prompt', 'prompt'), ('engaging', 'engag'), (',', ','), ('leading', 'lead'), ('better', 'better'), ('automation', 'autom'), ('rates', 'rate'), ('.', '.')]

>> Lemmatization: 
 [('However', 'However'), ('systems', 'system'), ('handle', 'handle'), ('corrections', 'correction'), ('verifications', 'verification'), ('dynamically', 'dynamically'), ('embedding', 'embedding'), ('confir-', 'confir-'), ('mations', 'mations'), ('next', 'next'), ('prompt', 'prompt'), ('engaging', 'engaging'), (',', ','), ('leading', 'leading'), ('better', 'better'), ('automation', 'automation'), ('rates', 'rate'), ('.', '.')]


------------------- Sentence 4 -------------------

Notice in the dialog below how the system confirms the change to  Boston when the caller requests a window seat.

>> Tokens are: 
 ['Notice', 'dialog', 'system', 'confirms', 'change', 'Boston', 'caller', 'requests', 'window', 'seat', '.']

>> Bigrams are: 
 [('Notice', 'dialog'), ('dialog', 'system'), ('system', 'confirms'), ('confirms', 'change'), ('change', 'Boston'), ('Boston', 'caller'), ('caller', 'requests'), ('requests', 'window'), ('window', 'seat'), ('seat', '.')]

>> Trigrams are: 
 [('Notice', 'dialog', 'system'), ('dialog', 'system', 'confirms'), ('system', 'confirms', 'change'), ('confirms', 'change', 'Boston'), ('change', 'Boston', 'caller'), ('Boston', 'caller', 'requests'), ('caller', 'requests', 'window'), ('requests', 'window', 'seat'), ('window', 'seat', '.')]

>> POS Tags are: 
 [('Notice', 'NNP'), ('dialog', 'NN'), ('system', 'NN'), ('confirms', 'VBZ'), ('change', 'VBP'), ('Boston', 'NNP'), ('caller', 'NN'), ('requests', 'NNS'), ('window', 'VBP'), ('seat', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['Notice dialog system', 'Boston caller requests', 'seat']

>> Named Entities are: 
 [('GPE', 'Notice'), ('GPE', 'Boston')] 

>> Stemming using Porter Stemmer: 
 [('Notice', 'notic'), ('dialog', 'dialog'), ('system', 'system'), ('confirms', 'confirm'), ('change', 'chang'), ('Boston', 'boston'), ('caller', 'caller'), ('requests', 'request'), ('window', 'window'), ('seat', 'seat'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Notice', 'notic'), ('dialog', 'dialog'), ('system', 'system'), ('confirms', 'confirm'), ('change', 'chang'), ('Boston', 'boston'), ('caller', 'caller'), ('requests', 'request'), ('window', 'window'), ('seat', 'seat'), ('.', '.')]

>> Lemmatization: 
 [('Notice', 'Notice'), ('dialog', 'dialog'), ('system', 'system'), ('confirms', 'confirms'), ('change', 'change'), ('Boston', 'Boston'), ('caller', 'caller'), ('requests', 'request'), ('window', 'window'), ('seat', 'seat'), ('.', '.')]



========================================== PARAGRAPH 57 ===========================================

Natural Language Understanding  technology increases automation by  correctly interpreting the meaning  behind open-ended caller responses  allowing callers to use their own words  rather than words chosen for them. 

------------------- Sentence 1 -------------------

Natural Language Understanding  technology increases automation by  correctly interpreting the meaning  behind open-ended caller responses  allowing callers to use their own words  rather than words chosen for them.

>> Tokens are: 
 ['Natural', 'Language', 'Understanding', 'technology', 'increases', 'automation', 'correctly', 'interpreting', 'meaning', 'behind', 'open-ended', 'caller', 'responses', 'allowing', 'callers', 'use', 'words', 'rather', 'words', 'chosen', '.']

>> Bigrams are: 
 [('Natural', 'Language'), ('Language', 'Understanding'), ('Understanding', 'technology'), ('technology', 'increases'), ('increases', 'automation'), ('automation', 'correctly'), ('correctly', 'interpreting'), ('interpreting', 'meaning'), ('meaning', 'behind'), ('behind', 'open-ended'), ('open-ended', 'caller'), ('caller', 'responses'), ('responses', 'allowing'), ('allowing', 'callers'), ('callers', 'use'), ('use', 'words'), ('words', 'rather'), ('rather', 'words'), ('words', 'chosen'), ('chosen', '.')]

>> Trigrams are: 
 [('Natural', 'Language', 'Understanding'), ('Language', 'Understanding', 'technology'), ('Understanding', 'technology', 'increases'), ('technology', 'increases', 'automation'), ('increases', 'automation', 'correctly'), ('automation', 'correctly', 'interpreting'), ('correctly', 'interpreting', 'meaning'), ('interpreting', 'meaning', 'behind'), ('meaning', 'behind', 'open-ended'), ('behind', 'open-ended', 'caller'), ('open-ended', 'caller', 'responses'), ('caller', 'responses', 'allowing'), ('responses', 'allowing', 'callers'), ('allowing', 'callers', 'use'), ('callers', 'use', 'words'), ('use', 'words', 'rather'), ('words', 'rather', 'words'), ('rather', 'words', 'chosen'), ('words', 'chosen', '.')]

>> POS Tags are: 
 [('Natural', 'JJ'), ('Language', 'NNP'), ('Understanding', 'NNP'), ('technology', 'NN'), ('increases', 'NNS'), ('automation', 'VBP'), ('correctly', 'RB'), ('interpreting', 'VBG'), ('meaning', 'VBG'), ('behind', 'IN'), ('open-ended', 'JJ'), ('caller', 'NN'), ('responses', 'NNS'), ('allowing', 'VBG'), ('callers', 'NNS'), ('use', 'VBP'), ('words', 'NNS'), ('rather', 'RB'), ('words', 'NNS'), ('chosen', 'VBN'), ('.', '.')]

>> Noun Phrases are: 
 ['Natural Language Understanding technology increases', 'open-ended caller responses', 'callers', 'words', 'words']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Natural', 'natur'), ('Language', 'languag'), ('Understanding', 'understand'), ('technology', 'technolog'), ('increases', 'increas'), ('automation', 'autom'), ('correctly', 'correctli'), ('interpreting', 'interpret'), ('meaning', 'mean'), ('behind', 'behind'), ('open-ended', 'open-end'), ('caller', 'caller'), ('responses', 'respons'), ('allowing', 'allow'), ('callers', 'caller'), ('use', 'use'), ('words', 'word'), ('rather', 'rather'), ('words', 'word'), ('chosen', 'chosen'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Natural', 'natur'), ('Language', 'languag'), ('Understanding', 'understand'), ('technology', 'technolog'), ('increases', 'increas'), ('automation', 'autom'), ('correctly', 'correct'), ('interpreting', 'interpret'), ('meaning', 'mean'), ('behind', 'behind'), ('open-ended', 'open-end'), ('caller', 'caller'), ('responses', 'respons'), ('allowing', 'allow'), ('callers', 'caller'), ('use', 'use'), ('words', 'word'), ('rather', 'rather'), ('words', 'word'), ('chosen', 'chosen'), ('.', '.')]

>> Lemmatization: 
 [('Natural', 'Natural'), ('Language', 'Language'), ('Understanding', 'Understanding'), ('technology', 'technology'), ('increases', 'increase'), ('automation', 'automation'), ('correctly', 'correctly'), ('interpreting', 'interpreting'), ('meaning', 'meaning'), ('behind', 'behind'), ('open-ended', 'open-ended'), ('caller', 'caller'), ('responses', 'response'), ('allowing', 'allowing'), ('callers', 'caller'), ('use', 'use'), ('words', 'word'), ('rather', 'rather'), ('words', 'word'), ('chosen', 'chosen'), ('.', '.')]



========================================== PARAGRAPH 58 ===========================================

White PaperCustomer Service Solutions Natural language understanding5 

------------------- Sentence 1 -------------------

White PaperCustomer Service Solutions Natural language understanding5

>> Tokens are: 
 ['White', 'PaperCustomer', 'Service', 'Solutions', 'Natural', 'language', 'understanding5']

>> Bigrams are: 
 [('White', 'PaperCustomer'), ('PaperCustomer', 'Service'), ('Service', 'Solutions'), ('Solutions', 'Natural'), ('Natural', 'language'), ('language', 'understanding5')]

>> Trigrams are: 
 [('White', 'PaperCustomer', 'Service'), ('PaperCustomer', 'Service', 'Solutions'), ('Service', 'Solutions', 'Natural'), ('Solutions', 'Natural', 'language'), ('Natural', 'language', 'understanding5')]

>> POS Tags are: 
 [('White', 'NNP'), ('PaperCustomer', 'NNP'), ('Service', 'NNP'), ('Solutions', 'NNP'), ('Natural', 'NNP'), ('language', 'NN'), ('understanding5', 'NN')]

>> Noun Phrases are: 
 ['White PaperCustomer Service Solutions Natural language understanding5']

>> Named Entities are: 
 [('FACILITY', 'White'), ('ORGANIZATION', 'PaperCustomer Service Solutions Natural')] 

>> Stemming using Porter Stemmer: 
 [('White', 'white'), ('PaperCustomer', 'papercustom'), ('Service', 'servic'), ('Solutions', 'solut'), ('Natural', 'natur'), ('language', 'languag'), ('understanding5', 'understanding5')]

>> Stemming using Snowball Stemmer: 
 [('White', 'white'), ('PaperCustomer', 'papercustom'), ('Service', 'servic'), ('Solutions', 'solut'), ('Natural', 'natur'), ('language', 'languag'), ('understanding5', 'understanding5')]

>> Lemmatization: 
 [('White', 'White'), ('PaperCustomer', 'PaperCustomer'), ('Service', 'Service'), ('Solutions', 'Solutions'), ('Natural', 'Natural'), ('language', 'language'), ('understanding5', 'understanding5')]



========================================== PARAGRAPH 59 ===========================================

Natural  Language  

------------------- Sentence 1 -------------------

Natural  Language

>> Tokens are: 
 ['Natural', 'Language']

>> Bigrams are: 
 [('Natural', 'Language')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('Natural', 'JJ'), ('Language', 'NN')]

>> Noun Phrases are: 
 ['Natural Language']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Natural', 'natur'), ('Language', 'languag')]

>> Stemming using Snowball Stemmer: 
 [('Natural', 'natur'), ('Language', 'languag')]

>> Lemmatization: 
 [('Natural', 'Natural'), ('Language', 'Language')]



========================================== PARAGRAPH 60 ===========================================

Understanding 

------------------- Sentence 1 -------------------

Understanding

>> Tokens are: 
 ['Understanding']

>> Bigrams are: 
 []

>> Trigrams are: 
 []

>> POS Tags are: 
 [('Understanding', 'VBG')]

>> Noun Phrases are: 
 []

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Understanding', 'understand')]

>> Stemming using Snowball Stemmer: 
 [('Understanding', 'understand')]

>> Lemmatization: 
 [('Understanding', 'Understanding')]



========================================== PARAGRAPH 61 ===========================================

Directed Dialogue or DTMF Method Only -  Requires Pre-Defined Menu Tree  

------------------- Sentence 1 -------------------

Directed Dialogue or DTMF Method Only -  Requires Pre-Defined Menu Tree

>> Tokens are: 
 ['Directed', 'Dialogue', 'DTMF', 'Method', 'Only', '-', 'Requires', 'Pre-Defined', 'Menu', 'Tree']

>> Bigrams are: 
 [('Directed', 'Dialogue'), ('Dialogue', 'DTMF'), ('DTMF', 'Method'), ('Method', 'Only'), ('Only', '-'), ('-', 'Requires'), ('Requires', 'Pre-Defined'), ('Pre-Defined', 'Menu'), ('Menu', 'Tree')]

>> Trigrams are: 
 [('Directed', 'Dialogue', 'DTMF'), ('Dialogue', 'DTMF', 'Method'), ('DTMF', 'Method', 'Only'), ('Method', 'Only', '-'), ('Only', '-', 'Requires'), ('-', 'Requires', 'Pre-Defined'), ('Requires', 'Pre-Defined', 'Menu'), ('Pre-Defined', 'Menu', 'Tree')]

>> POS Tags are: 
 [('Directed', 'NNP'), ('Dialogue', 'NNP'), ('DTMF', 'NNP'), ('Method', 'NNP'), ('Only', 'NNP'), ('-', ':'), ('Requires', 'VBZ'), ('Pre-Defined', 'JJ'), ('Menu', 'NNP'), ('Tree', 'NNP')]

>> Noun Phrases are: 
 ['Directed Dialogue DTMF Method Only', 'Pre-Defined Menu Tree']

>> Named Entities are: 
 [('GPE', 'Directed'), ('PERSON', 'Dialogue DTMF Method Only'), ('ORGANIZATION', 'Menu Tree')] 

>> Stemming using Porter Stemmer: 
 [('Directed', 'direct'), ('Dialogue', 'dialogu'), ('DTMF', 'dtmf'), ('Method', 'method'), ('Only', 'onli'), ('-', '-'), ('Requires', 'requir'), ('Pre-Defined', 'pre-defin'), ('Menu', 'menu'), ('Tree', 'tree')]

>> Stemming using Snowball Stemmer: 
 [('Directed', 'direct'), ('Dialogue', 'dialogu'), ('DTMF', 'dtmf'), ('Method', 'method'), ('Only', 'onli'), ('-', '-'), ('Requires', 'requir'), ('Pre-Defined', 'pre-defin'), ('Menu', 'menu'), ('Tree', 'tree')]

>> Lemmatization: 
 [('Directed', 'Directed'), ('Dialogue', 'Dialogue'), ('DTMF', 'DTMF'), ('Method', 'Method'), ('Only', 'Only'), ('-', '-'), ('Requires', 'Requires'), ('Pre-Defined', 'Pre-Defined'), ('Menu', 'Menu'), ('Tree', 'Tree')]



========================================== PARAGRAPH 62 ===========================================

I lost my card and need another one. 

------------------- Sentence 1 -------------------

I lost my card and need another one.

>> Tokens are: 
 ['I', 'lost', 'card', 'need', 'another', 'one', '.']

>> Bigrams are: 
 [('I', 'lost'), ('lost', 'card'), ('card', 'need'), ('need', 'another'), ('another', 'one'), ('one', '.')]

>> Trigrams are: 
 [('I', 'lost', 'card'), ('lost', 'card', 'need'), ('card', 'need', 'another'), ('need', 'another', 'one'), ('another', 'one', '.')]

>> POS Tags are: 
 [('I', 'PRP'), ('lost', 'VBD'), ('card', 'RB'), ('need', 'MD'), ('another', 'DT'), ('one', 'CD'), ('.', '.')]

>> Noun Phrases are: 
 []

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('I', 'i'), ('lost', 'lost'), ('card', 'card'), ('need', 'need'), ('another', 'anoth'), ('one', 'one'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('I', 'i'), ('lost', 'lost'), ('card', 'card'), ('need', 'need'), ('another', 'anoth'), ('one', 'one'), ('.', '.')]

>> Lemmatization: 
 [('I', 'I'), ('lost', 'lost'), ('card', 'card'), ('need', 'need'), ('another', 'another'), ('one', 'one'), ('.', '.')]



========================================== PARAGRAPH 63 ===========================================

Replacement  Card 

------------------- Sentence 1 -------------------

Replacement  Card

>> Tokens are: 
 ['Replacement', 'Card']

>> Bigrams are: 
 [('Replacement', 'Card')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('Replacement', 'NNP'), ('Card', 'NNP')]

>> Noun Phrases are: 
 ['Replacement Card']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Replacement', 'replac'), ('Card', 'card')]

>> Stemming using Snowball Stemmer: 
 [('Replacement', 'replac'), ('Card', 'card')]

>> Lemmatization: 
 [('Replacement', 'Replacement'), ('Card', 'Card')]



========================================== PARAGRAPH 64 ===========================================

Conversational dialogs can build in confirmations without having to explicitly ask for them 

------------------- Sentence 1 -------------------

Conversational dialogs can build in confirmations without having to explicitly ask for them

>> Tokens are: 
 ['Conversational', 'dialogs', 'build', 'confirmations', 'without', 'explicitly', 'ask']

>> Bigrams are: 
 [('Conversational', 'dialogs'), ('dialogs', 'build'), ('build', 'confirmations'), ('confirmations', 'without'), ('without', 'explicitly'), ('explicitly', 'ask')]

>> Trigrams are: 
 [('Conversational', 'dialogs', 'build'), ('dialogs', 'build', 'confirmations'), ('build', 'confirmations', 'without'), ('confirmations', 'without', 'explicitly'), ('without', 'explicitly', 'ask')]

>> POS Tags are: 
 [('Conversational', 'NNP'), ('dialogs', 'NNS'), ('build', 'VBP'), ('confirmations', 'NNS'), ('without', 'IN'), ('explicitly', 'RB'), ('ask', 'VB')]

>> Noun Phrases are: 
 ['Conversational dialogs', 'confirmations']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Conversational', 'convers'), ('dialogs', 'dialog'), ('build', 'build'), ('confirmations', 'confirm'), ('without', 'without'), ('explicitly', 'explicitli'), ('ask', 'ask')]

>> Stemming using Snowball Stemmer: 
 [('Conversational', 'convers'), ('dialogs', 'dialog'), ('build', 'build'), ('confirmations', 'confirm'), ('without', 'without'), ('explicitly', 'explicit'), ('ask', 'ask')]

>> Lemmatization: 
 [('Conversational', 'Conversational'), ('dialogs', 'dialog'), ('build', 'build'), ('confirmations', 'confirmation'), ('without', 'without'), ('explicitly', 'explicitly'), ('ask', 'ask')]



========================================== PARAGRAPH 65 ===========================================

CALLER: No, not Austin, Boston! 

------------------- Sentence 1 -------------------

CALLER: No, not Austin, Boston!

>> Tokens are: 
 ['CALLER', ':', 'No', ',', 'Austin', ',', 'Boston', '!']

>> Bigrams are: 
 [('CALLER', ':'), (':', 'No'), ('No', ','), (',', 'Austin'), ('Austin', ','), (',', 'Boston'), ('Boston', '!')]

>> Trigrams are: 
 [('CALLER', ':', 'No'), (':', 'No', ','), ('No', ',', 'Austin'), (',', 'Austin', ','), ('Austin', ',', 'Boston'), (',', 'Boston', '!')]

>> POS Tags are: 
 [('CALLER', 'NN'), (':', ':'), ('No', 'UH'), (',', ','), ('Austin', 'NNP'), (',', ','), ('Boston', 'NNP'), ('!', '.')]

>> Noun Phrases are: 
 ['CALLER', 'Austin', 'Boston']

>> Named Entities are: 
 [('GPE', 'CALLER'), ('GPE', 'Austin'), ('GPE', 'Boston')] 

>> Stemming using Porter Stemmer: 
 [('CALLER', 'caller'), (':', ':'), ('No', 'no'), (',', ','), ('Austin', 'austin'), (',', ','), ('Boston', 'boston'), ('!', '!')]

>> Stemming using Snowball Stemmer: 
 [('CALLER', 'caller'), (':', ':'), ('No', 'no'), (',', ','), ('Austin', 'austin'), (',', ','), ('Boston', 'boston'), ('!', '!')]

>> Lemmatization: 
 [('CALLER', 'CALLER'), (':', ':'), ('No', 'No'), (',', ','), ('Austin', 'Austin'), (',', ','), ('Boston', 'Boston'), ('!', '!')]



========================================== PARAGRAPH 66 ===========================================

Window. 

------------------- Sentence 1 -------------------

Window.

>> Tokens are: 
 ['Window', '.']

>> Bigrams are: 
 [('Window', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('Window', 'NNP'), ('.', '.')]

>> Noun Phrases are: 
 ['Window']

>> Named Entities are: 
 [('GPE', 'Window')] 

>> Stemming using Porter Stemmer: 
 [('Window', 'window'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Window', 'window'), ('.', '.')]

>> Lemmatization: 
 [('Window', 'Window'), ('.', '.')]



========================================== PARAGRAPH 67 ===========================================

Would you like to fly to Austin? SYSTEM: 

------------------- Sentence 1 -------------------

Would you like to fly to Austin?

>> Tokens are: 
 ['Would', 'like', 'fly', 'Austin', '?']

>> Bigrams are: 
 [('Would', 'like'), ('like', 'fly'), ('fly', 'Austin'), ('Austin', '?')]

>> Trigrams are: 
 [('Would', 'like', 'fly'), ('like', 'fly', 'Austin'), ('fly', 'Austin', '?')]

>> POS Tags are: 
 [('Would', 'MD'), ('like', 'VB'), ('fly', 'VB'), ('Austin', 'NNP'), ('?', '.')]

>> Noun Phrases are: 
 ['Austin']

>> Named Entities are: 
 [('PERSON', 'Austin')] 

>> Stemming using Porter Stemmer: 
 [('Would', 'would'), ('like', 'like'), ('fly', 'fli'), ('Austin', 'austin'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('Would', 'would'), ('like', 'like'), ('fly', 'fli'), ('Austin', 'austin'), ('?', '?')]

>> Lemmatization: 
 [('Would', 'Would'), ('like', 'like'), ('fly', 'fly'), ('Austin', 'Austin'), ('?', '?')]


------------------- Sentence 2 -------------------

SYSTEM:

>> Tokens are: 
 ['SYSTEM', ':']

>> Bigrams are: 
 [('SYSTEM', ':')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('SYSTEM', 'NN'), (':', ':')]

>> Noun Phrases are: 
 ['SYSTEM']

>> Named Entities are: 
 [('GPE', 'SYSTEM')] 

>> Stemming using Porter Stemmer: 
 [('SYSTEM', 'system'), (':', ':')]

>> Stemming using Snowball Stemmer: 
 [('SYSTEM', 'system'), (':', ':')]

>> Lemmatization: 
 [('SYSTEM', 'SYSTEM'), (':', ':')]



========================================== PARAGRAPH 68 ===========================================

Okay, do you prefer a window or  aisle seat to Boston? 

------------------- Sentence 1 -------------------

Okay, do you prefer a window or  aisle seat to Boston?

>> Tokens are: 
 ['Okay', ',', 'prefer', 'window', 'aisle', 'seat', 'Boston', '?']

>> Bigrams are: 
 [('Okay', ','), (',', 'prefer'), ('prefer', 'window'), ('window', 'aisle'), ('aisle', 'seat'), ('seat', 'Boston'), ('Boston', '?')]

>> Trigrams are: 
 [('Okay', ',', 'prefer'), (',', 'prefer', 'window'), ('prefer', 'window', 'aisle'), ('window', 'aisle', 'seat'), ('aisle', 'seat', 'Boston'), ('seat', 'Boston', '?')]

>> POS Tags are: 
 [('Okay', 'NNP'), (',', ','), ('prefer', 'VBP'), ('window', 'JJ'), ('aisle', 'JJ'), ('seat', 'NN'), ('Boston', 'NNP'), ('?', '.')]

>> Noun Phrases are: 
 ['Okay', 'window aisle seat Boston']

>> Named Entities are: 
 [('GPE', 'Okay'), ('GPE', 'Boston')] 

>> Stemming using Porter Stemmer: 
 [('Okay', 'okay'), (',', ','), ('prefer', 'prefer'), ('window', 'window'), ('aisle', 'aisl'), ('seat', 'seat'), ('Boston', 'boston'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('Okay', 'okay'), (',', ','), ('prefer', 'prefer'), ('window', 'window'), ('aisle', 'aisl'), ('seat', 'seat'), ('Boston', 'boston'), ('?', '?')]

>> Lemmatization: 
 [('Okay', 'Okay'), (',', ','), ('prefer', 'prefer'), ('window', 'window'), ('aisle', 'aisle'), ('seat', 'seat'), ('Boston', 'Boston'), ('?', '?')]



========================================== PARAGRAPH 69 ===========================================

Conversational dialogs can  handle more than one piece  of information 

------------------- Sentence 1 -------------------

Conversational dialogs can  handle more than one piece  of information

>> Tokens are: 
 ['Conversational', 'dialogs', 'handle', 'one', 'piece', 'information']

>> Bigrams are: 
 [('Conversational', 'dialogs'), ('dialogs', 'handle'), ('handle', 'one'), ('one', 'piece'), ('piece', 'information')]

>> Trigrams are: 
 [('Conversational', 'dialogs', 'handle'), ('dialogs', 'handle', 'one'), ('handle', 'one', 'piece'), ('one', 'piece', 'information')]

>> POS Tags are: 
 [('Conversational', 'JJ'), ('dialogs', 'NNS'), ('handle', 'VBP'), ('one', 'CD'), ('piece', 'NN'), ('information', 'NN')]

>> Noun Phrases are: 
 ['Conversational dialogs', 'piece information']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Conversational', 'convers'), ('dialogs', 'dialog'), ('handle', 'handl'), ('one', 'one'), ('piece', 'piec'), ('information', 'inform')]

>> Stemming using Snowball Stemmer: 
 [('Conversational', 'convers'), ('dialogs', 'dialog'), ('handle', 'handl'), ('one', 'one'), ('piece', 'piec'), ('information', 'inform')]

>> Lemmatization: 
 [('Conversational', 'Conversational'), ('dialogs', 'dialog'), ('handle', 'handle'), ('one', 'one'), ('piece', 'piece'), ('information', 'information')]



========================================== PARAGRAPH 70 ===========================================

Natural Language Understanding Caller provides responses the way  they want to and the system accepts  and interprets the information. 

------------------- Sentence 1 -------------------

Natural Language Understanding Caller provides responses the way  they want to and the system accepts  and interprets the information.

>> Tokens are: 
 ['Natural', 'Language', 'Understanding', 'Caller', 'provides', 'responses', 'way', 'want', 'system', 'accepts', 'interprets', 'information', '.']

>> Bigrams are: 
 [('Natural', 'Language'), ('Language', 'Understanding'), ('Understanding', 'Caller'), ('Caller', 'provides'), ('provides', 'responses'), ('responses', 'way'), ('way', 'want'), ('want', 'system'), ('system', 'accepts'), ('accepts', 'interprets'), ('interprets', 'information'), ('information', '.')]

>> Trigrams are: 
 [('Natural', 'Language', 'Understanding'), ('Language', 'Understanding', 'Caller'), ('Understanding', 'Caller', 'provides'), ('Caller', 'provides', 'responses'), ('provides', 'responses', 'way'), ('responses', 'way', 'want'), ('way', 'want', 'system'), ('want', 'system', 'accepts'), ('system', 'accepts', 'interprets'), ('accepts', 'interprets', 'information'), ('interprets', 'information', '.')]

>> POS Tags are: 
 [('Natural', 'JJ'), ('Language', 'NNP'), ('Understanding', 'NNP'), ('Caller', 'NNP'), ('provides', 'VBZ'), ('responses', 'NNS'), ('way', 'NN'), ('want', 'VBP'), ('system', 'NN'), ('accepts', 'JJ'), ('interprets', 'VBZ'), ('information', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['Natural Language Understanding Caller', 'responses way', 'system', 'information']

>> Named Entities are: 
 [('PERSON', 'Caller')] 

>> Stemming using Porter Stemmer: 
 [('Natural', 'natur'), ('Language', 'languag'), ('Understanding', 'understand'), ('Caller', 'caller'), ('provides', 'provid'), ('responses', 'respons'), ('way', 'way'), ('want', 'want'), ('system', 'system'), ('accepts', 'accept'), ('interprets', 'interpret'), ('information', 'inform'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Natural', 'natur'), ('Language', 'languag'), ('Understanding', 'understand'), ('Caller', 'caller'), ('provides', 'provid'), ('responses', 'respons'), ('way', 'way'), ('want', 'want'), ('system', 'system'), ('accepts', 'accept'), ('interprets', 'interpret'), ('information', 'inform'), ('.', '.')]

>> Lemmatization: 
 [('Natural', 'Natural'), ('Language', 'Language'), ('Understanding', 'Understanding'), ('Caller', 'Caller'), ('provides', 'provides'), ('responses', 'response'), ('way', 'way'), ('want', 'want'), ('system', 'system'), ('accepts', 'accepts'), ('interprets', 'interprets'), ('information', 'information'), ('.', '.')]



========================================== PARAGRAPH 71 ===========================================

AIRLINE SYSTEM with  Natural Language Understanding: 

------------------- Sentence 1 -------------------

AIRLINE SYSTEM with  Natural Language Understanding:

>> Tokens are: 
 ['AIRLINE', 'SYSTEM', 'Natural', 'Language', 'Understanding', ':']

>> Bigrams are: 
 [('AIRLINE', 'SYSTEM'), ('SYSTEM', 'Natural'), ('Natural', 'Language'), ('Language', 'Understanding'), ('Understanding', ':')]

>> Trigrams are: 
 [('AIRLINE', 'SYSTEM', 'Natural'), ('SYSTEM', 'Natural', 'Language'), ('Natural', 'Language', 'Understanding'), ('Language', 'Understanding', ':')]

>> POS Tags are: 
 [('AIRLINE', 'NNP'), ('SYSTEM', 'NNP'), ('Natural', 'NNP'), ('Language', 'NNP'), ('Understanding', 'NN'), (':', ':')]

>> Noun Phrases are: 
 ['AIRLINE SYSTEM Natural Language Understanding']

>> Named Entities are: 
 [('ORGANIZATION', 'AIRLINE'), ('ORGANIZATION', 'SYSTEM Natural Language')] 

>> Stemming using Porter Stemmer: 
 [('AIRLINE', 'airlin'), ('SYSTEM', 'system'), ('Natural', 'natur'), ('Language', 'languag'), ('Understanding', 'understand'), (':', ':')]

>> Stemming using Snowball Stemmer: 
 [('AIRLINE', 'airlin'), ('SYSTEM', 'system'), ('Natural', 'natur'), ('Language', 'languag'), ('Understanding', 'understand'), (':', ':')]

>> Lemmatization: 
 [('AIRLINE', 'AIRLINE'), ('SYSTEM', 'SYSTEM'), ('Natural', 'Natural'), ('Language', 'Language'), ('Understanding', 'Understanding'), (':', ':')]



========================================== PARAGRAPH 72 ===========================================

Information to Collect 

------------------- Sentence 1 -------------------

Information to Collect

>> Tokens are: 
 ['Information', 'Collect']

>> Bigrams are: 
 [('Information', 'Collect')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('Information', 'NN'), ('Collect', 'NNP')]

>> Noun Phrases are: 
 ['Information Collect']

>> Named Entities are: 
 [('PERSON', 'Collect')] 

>> Stemming using Porter Stemmer: 
 [('Information', 'inform'), ('Collect', 'collect')]

>> Stemming using Snowball Stemmer: 
 [('Information', 'inform'), ('Collect', 'collect')]

>> Lemmatization: 
 [('Information', 'Information'), ('Collect', 'Collect')]



========================================== PARAGRAPH 73 ===========================================

Departure City Departure Date Number of Adults Number of Children Return City Return Date Seating Assignments 

------------------- Sentence 1 -------------------

Departure City Departure Date Number of Adults Number of Children Return City Return Date Seating Assignments

>> Tokens are: 
 ['Departure', 'City', 'Departure', 'Date', 'Number', 'Adults', 'Number', 'Children', 'Return', 'City', 'Return', 'Date', 'Seating', 'Assignments']

>> Bigrams are: 
 [('Departure', 'City'), ('City', 'Departure'), ('Departure', 'Date'), ('Date', 'Number'), ('Number', 'Adults'), ('Adults', 'Number'), ('Number', 'Children'), ('Children', 'Return'), ('Return', 'City'), ('City', 'Return'), ('Return', 'Date'), ('Date', 'Seating'), ('Seating', 'Assignments')]

>> Trigrams are: 
 [('Departure', 'City', 'Departure'), ('City', 'Departure', 'Date'), ('Departure', 'Date', 'Number'), ('Date', 'Number', 'Adults'), ('Number', 'Adults', 'Number'), ('Adults', 'Number', 'Children'), ('Number', 'Children', 'Return'), ('Children', 'Return', 'City'), ('Return', 'City', 'Return'), ('City', 'Return', 'Date'), ('Return', 'Date', 'Seating'), ('Date', 'Seating', 'Assignments')]

>> POS Tags are: 
 [('Departure', 'NNP'), ('City', 'NNP'), ('Departure', 'NNP'), ('Date', 'NNP'), ('Number', 'NNP'), ('Adults', 'NNP'), ('Number', 'NNP'), ('Children', 'NNP'), ('Return', 'NNP'), ('City', 'NNP'), ('Return', 'NNP'), ('Date', 'NNP'), ('Seating', 'NNP'), ('Assignments', 'NNS')]

>> Noun Phrases are: 
 ['Departure City Departure Date Number Adults Number Children Return City Return Date Seating Assignments']

>> Named Entities are: 
 [('PERSON', 'Departure'), ('GPE', 'City'), ('PERSON', 'Return City Return Date Seating')] 

>> Stemming using Porter Stemmer: 
 [('Departure', 'departur'), ('City', 'citi'), ('Departure', 'departur'), ('Date', 'date'), ('Number', 'number'), ('Adults', 'adult'), ('Number', 'number'), ('Children', 'children'), ('Return', 'return'), ('City', 'citi'), ('Return', 'return'), ('Date', 'date'), ('Seating', 'seat'), ('Assignments', 'assign')]

>> Stemming using Snowball Stemmer: 
 [('Departure', 'departur'), ('City', 'citi'), ('Departure', 'departur'), ('Date', 'date'), ('Number', 'number'), ('Adults', 'adult'), ('Number', 'number'), ('Children', 'children'), ('Return', 'return'), ('City', 'citi'), ('Return', 'return'), ('Date', 'date'), ('Seating', 'seat'), ('Assignments', 'assign')]

>> Lemmatization: 
 [('Departure', 'Departure'), ('City', 'City'), ('Departure', 'Departure'), ('Date', 'Date'), ('Number', 'Number'), ('Adults', 'Adults'), ('Number', 'Number'), ('Children', 'Children'), ('Return', 'Return'), ('City', 'City'), ('Return', 'Return'), ('Date', 'Date'), ('Seating', 'Seating'), ('Assignments', 'Assignments')]



========================================== PARAGRAPH 74 ===========================================

CALLER: On Wednesday and returning on Friday. 

------------------- Sentence 1 -------------------

CALLER: On Wednesday and returning on Friday.

>> Tokens are: 
 ['CALLER', ':', 'On', 'Wednesday', 'returning', 'Friday', '.']

>> Bigrams are: 
 [('CALLER', ':'), (':', 'On'), ('On', 'Wednesday'), ('Wednesday', 'returning'), ('returning', 'Friday'), ('Friday', '.')]

>> Trigrams are: 
 [('CALLER', ':', 'On'), (':', 'On', 'Wednesday'), ('On', 'Wednesday', 'returning'), ('Wednesday', 'returning', 'Friday'), ('returning', 'Friday', '.')]

>> POS Tags are: 
 [('CALLER', 'NN'), (':', ':'), ('On', 'IN'), ('Wednesday', 'NNP'), ('returning', 'VBG'), ('Friday', 'NNP'), ('.', '.')]

>> Noun Phrases are: 
 ['CALLER', 'Wednesday', 'Friday']

>> Named Entities are: 
 [('GPE', 'CALLER')] 

>> Stemming using Porter Stemmer: 
 [('CALLER', 'caller'), (':', ':'), ('On', 'on'), ('Wednesday', 'wednesday'), ('returning', 'return'), ('Friday', 'friday'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('CALLER', 'caller'), (':', ':'), ('On', 'on'), ('Wednesday', 'wednesday'), ('returning', 'return'), ('Friday', 'friday'), ('.', '.')]

>> Lemmatization: 
 [('CALLER', 'CALLER'), (':', ':'), ('On', 'On'), ('Wednesday', 'Wednesday'), ('returning', 'returning'), ('Friday', 'Friday'), ('.', '.')]



========================================== PARAGRAPH 75 ===========================================

What day are you leaving? 

------------------- Sentence 1 -------------------

What day are you leaving?

>> Tokens are: 
 ['What', 'day', 'leaving', '?']

>> Bigrams are: 
 [('What', 'day'), ('day', 'leaving'), ('leaving', '?')]

>> Trigrams are: 
 [('What', 'day', 'leaving'), ('day', 'leaving', '?')]

>> POS Tags are: 
 [('What', 'WP'), ('day', 'NN'), ('leaving', 'VBG'), ('?', '.')]

>> Noun Phrases are: 
 ['day']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('What', 'what'), ('day', 'day'), ('leaving', 'leav'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('What', 'what'), ('day', 'day'), ('leaving', 'leav'), ('?', '?')]

>> Lemmatization: 
 [('What', 'What'), ('day', 'day'), ('leaving', 'leaving'), ('?', '?')]



========================================== PARAGRAPH 76 ===========================================

SYSTEM: 

------------------- Sentence 1 -------------------

SYSTEM:

>> Tokens are: 
 ['SYSTEM', ':']

>> Bigrams are: 
 [('SYSTEM', ':')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('SYSTEM', 'NN'), (':', ':')]

>> Noun Phrases are: 
 ['SYSTEM']

>> Named Entities are: 
 [('GPE', 'SYSTEM')] 

>> Stemming using Porter Stemmer: 
 [('SYSTEM', 'system'), (':', ':')]

>> Stemming using Snowball Stemmer: 
 [('SYSTEM', 'system'), (':', ':')]

>> Lemmatization: 
 [('SYSTEM', 'SYSTEM'), (':', ':')]



========================================== PARAGRAPH 77 ===========================================

� � � � � � � 

------------------- Sentence 1 -------------------

� � � � � � �

>> Tokens are: 
 ['�', '�', '�', '�', '�', '�', '�']

>> Bigrams are: 
 [('�', '�'), ('�', '�'), ('�', '�'), ('�', '�'), ('�', '�'), ('�', '�')]

>> Trigrams are: 
 [('�', '�', '�'), ('�', '�', '�'), ('�', '�', '�'), ('�', '�', '�'), ('�', '�', '�')]

>> POS Tags are: 
 [('�', 'JJ'), ('�', 'NNP'), ('�', 'NNP'), ('�', 'NNP'), ('�', 'NNP'), ('�', 'NNP'), ('�', 'NN')]

>> Noun Phrases are: 
 ['� � � � � � �']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('�', '�'), ('�', '�'), ('�', '�'), ('�', '�'), ('�', '�'), ('�', '�'), ('�', '�')]

>> Stemming using Snowball Stemmer: 
 [('�', '�'), ('�', '�'), ('�', '�'), ('�', '�'), ('�', '�'), ('�', '�'), ('�', '�')]

>> Lemmatization: 
 [('�', '�'), ('�', '�'), ('�', '�'), ('�', '�'), ('�', '�'), ('�', '�'), ('�', '�')]



========================================== PARAGRAPH 78 ===========================================

� 

------------------- Sentence 1 -------------------

�

>> Tokens are: 
 ['�']

>> Bigrams are: 
 []

>> Trigrams are: 
 []

>> POS Tags are: 
 [('�', 'NN')]

>> Noun Phrases are: 
 ['�']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('�', '�')]

>> Stemming using Snowball Stemmer: 
 [('�', '�')]

>> Lemmatization: 
 [('�', '�')]



========================================== PARAGRAPH 79 ===========================================

�

------------------- Sentence 1 -------------------

�

>> Tokens are: 
 ['�']

>> Bigrams are: 
 []

>> Trigrams are: 
 []

>> POS Tags are: 
 [('�', 'NN')]

>> Noun Phrases are: 
 ['�']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('�', '�')]

>> Stemming using Snowball Stemmer: 
 [('�', '�')]

>> Lemmatization: 
 [('�', '�')]



========================================== PARAGRAPH 80 ===========================================

White PaperCustomer Service Solutions Natural language understanding6 This dialog flexibility is controlled by rules designed into prompts themselves  so the system can respond and guide callers rather than dictate to them.  Perhaps the defining characteristic of a natural language experience is  engaging callers with intuitive and direct conversations. 

------------------- Sentence 1 -------------------

White PaperCustomer Service Solutions Natural language understanding6 This dialog flexibility is controlled by rules designed into prompts themselves  so the system can respond and guide callers rather than dictate to them.

>> Tokens are: 
 ['White', 'PaperCustomer', 'Service', 'Solutions', 'Natural', 'language', 'understanding6', 'This', 'dialog', 'flexibility', 'controlled', 'rules', 'designed', 'prompts', 'system', 'respond', 'guide', 'callers', 'rather', 'dictate', '.']

>> Bigrams are: 
 [('White', 'PaperCustomer'), ('PaperCustomer', 'Service'), ('Service', 'Solutions'), ('Solutions', 'Natural'), ('Natural', 'language'), ('language', 'understanding6'), ('understanding6', 'This'), ('This', 'dialog'), ('dialog', 'flexibility'), ('flexibility', 'controlled'), ('controlled', 'rules'), ('rules', 'designed'), ('designed', 'prompts'), ('prompts', 'system'), ('system', 'respond'), ('respond', 'guide'), ('guide', 'callers'), ('callers', 'rather'), ('rather', 'dictate'), ('dictate', '.')]

>> Trigrams are: 
 [('White', 'PaperCustomer', 'Service'), ('PaperCustomer', 'Service', 'Solutions'), ('Service', 'Solutions', 'Natural'), ('Solutions', 'Natural', 'language'), ('Natural', 'language', 'understanding6'), ('language', 'understanding6', 'This'), ('understanding6', 'This', 'dialog'), ('This', 'dialog', 'flexibility'), ('dialog', 'flexibility', 'controlled'), ('flexibility', 'controlled', 'rules'), ('controlled', 'rules', 'designed'), ('rules', 'designed', 'prompts'), ('designed', 'prompts', 'system'), ('prompts', 'system', 'respond'), ('system', 'respond', 'guide'), ('respond', 'guide', 'callers'), ('guide', 'callers', 'rather'), ('callers', 'rather', 'dictate'), ('rather', 'dictate', '.')]

>> POS Tags are: 
 [('White', 'NNP'), ('PaperCustomer', 'NNP'), ('Service', 'NNP'), ('Solutions', 'NNP'), ('Natural', 'NNP'), ('language', 'NN'), ('understanding6', 'NN'), ('This', 'DT'), ('dialog', 'NN'), ('flexibility', 'NN'), ('controlled', 'VBD'), ('rules', 'NNS'), ('designed', 'VBN'), ('prompts', 'NNS'), ('system', 'NN'), ('respond', 'NN'), ('guide', 'NN'), ('callers', 'NNS'), ('rather', 'RB'), ('dictate', 'VBP'), ('.', '.')]

>> Noun Phrases are: 
 ['White PaperCustomer Service Solutions Natural language understanding6', 'This dialog flexibility', 'rules', 'prompts system respond guide callers']

>> Named Entities are: 
 [('FACILITY', 'White'), ('ORGANIZATION', 'PaperCustomer Service Solutions Natural')] 

>> Stemming using Porter Stemmer: 
 [('White', 'white'), ('PaperCustomer', 'papercustom'), ('Service', 'servic'), ('Solutions', 'solut'), ('Natural', 'natur'), ('language', 'languag'), ('understanding6', 'understanding6'), ('This', 'thi'), ('dialog', 'dialog'), ('flexibility', 'flexibl'), ('controlled', 'control'), ('rules', 'rule'), ('designed', 'design'), ('prompts', 'prompt'), ('system', 'system'), ('respond', 'respond'), ('guide', 'guid'), ('callers', 'caller'), ('rather', 'rather'), ('dictate', 'dictat'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('White', 'white'), ('PaperCustomer', 'papercustom'), ('Service', 'servic'), ('Solutions', 'solut'), ('Natural', 'natur'), ('language', 'languag'), ('understanding6', 'understanding6'), ('This', 'this'), ('dialog', 'dialog'), ('flexibility', 'flexibl'), ('controlled', 'control'), ('rules', 'rule'), ('designed', 'design'), ('prompts', 'prompt'), ('system', 'system'), ('respond', 'respond'), ('guide', 'guid'), ('callers', 'caller'), ('rather', 'rather'), ('dictate', 'dictat'), ('.', '.')]

>> Lemmatization: 
 [('White', 'White'), ('PaperCustomer', 'PaperCustomer'), ('Service', 'Service'), ('Solutions', 'Solutions'), ('Natural', 'Natural'), ('language', 'language'), ('understanding6', 'understanding6'), ('This', 'This'), ('dialog', 'dialog'), ('flexibility', 'flexibility'), ('controlled', 'controlled'), ('rules', 'rule'), ('designed', 'designed'), ('prompts', 'prompt'), ('system', 'system'), ('respond', 'respond'), ('guide', 'guide'), ('callers', 'caller'), ('rather', 'rather'), ('dictate', 'dictate'), ('.', '.')]


------------------- Sentence 2 -------------------

Perhaps the defining characteristic of a natural language experience is  engaging callers with intuitive and direct conversations.

>> Tokens are: 
 ['Perhaps', 'defining', 'characteristic', 'natural', 'language', 'experience', 'engaging', 'callers', 'intuitive', 'direct', 'conversations', '.']

>> Bigrams are: 
 [('Perhaps', 'defining'), ('defining', 'characteristic'), ('characteristic', 'natural'), ('natural', 'language'), ('language', 'experience'), ('experience', 'engaging'), ('engaging', 'callers'), ('callers', 'intuitive'), ('intuitive', 'direct'), ('direct', 'conversations'), ('conversations', '.')]

>> Trigrams are: 
 [('Perhaps', 'defining', 'characteristic'), ('defining', 'characteristic', 'natural'), ('characteristic', 'natural', 'language'), ('natural', 'language', 'experience'), ('language', 'experience', 'engaging'), ('experience', 'engaging', 'callers'), ('engaging', 'callers', 'intuitive'), ('callers', 'intuitive', 'direct'), ('intuitive', 'direct', 'conversations'), ('direct', 'conversations', '.')]

>> POS Tags are: 
 [('Perhaps', 'RB'), ('defining', 'VBG'), ('characteristic', 'JJ'), ('natural', 'JJ'), ('language', 'NN'), ('experience', 'NN'), ('engaging', 'VBG'), ('callers', 'NNS'), ('intuitive', 'JJ'), ('direct', 'JJ'), ('conversations', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['characteristic natural language experience', 'callers', 'intuitive direct conversations']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Perhaps', 'perhap'), ('defining', 'defin'), ('characteristic', 'characterist'), ('natural', 'natur'), ('language', 'languag'), ('experience', 'experi'), ('engaging', 'engag'), ('callers', 'caller'), ('intuitive', 'intuit'), ('direct', 'direct'), ('conversations', 'convers'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Perhaps', 'perhap'), ('defining', 'defin'), ('characteristic', 'characterist'), ('natural', 'natur'), ('language', 'languag'), ('experience', 'experi'), ('engaging', 'engag'), ('callers', 'caller'), ('intuitive', 'intuit'), ('direct', 'direct'), ('conversations', 'convers'), ('.', '.')]

>> Lemmatization: 
 [('Perhaps', 'Perhaps'), ('defining', 'defining'), ('characteristic', 'characteristic'), ('natural', 'natural'), ('language', 'language'), ('experience', 'experience'), ('engaging', 'engaging'), ('callers', 'caller'), ('intuitive', 'intuitive'), ('direct', 'direct'), ('conversations', 'conversation'), ('.', '.')]



========================================== PARAGRAPH 81 ===========================================

Conclusion In challenging economic conditions, the importance of cost-savings can not  be underestimated. By applying effective natural language techniques to a  speech-enabled self-service IVR system, automation rates will increase lead- ing directly to lower costs. This paper has shown that different approaches to  natural language can be applied throughout the caller’s interaction to achieve  these improved automation rates. The three complementary natural language  approaches of increasing the recognition accuracy within and around  grammars, allowing callers to give open-ended responses, and interacting  with adaptive dialogs all lead to more efficient and appealing calls. 

------------------- Sentence 1 -------------------

Conclusion In challenging economic conditions, the importance of cost-savings can not  be underestimated.

>> Tokens are: 
 ['Conclusion', 'In', 'challenging', 'economic', 'conditions', ',', 'importance', 'cost-savings', 'underestimated', '.']

>> Bigrams are: 
 [('Conclusion', 'In'), ('In', 'challenging'), ('challenging', 'economic'), ('economic', 'conditions'), ('conditions', ','), (',', 'importance'), ('importance', 'cost-savings'), ('cost-savings', 'underestimated'), ('underestimated', '.')]

>> Trigrams are: 
 [('Conclusion', 'In', 'challenging'), ('In', 'challenging', 'economic'), ('challenging', 'economic', 'conditions'), ('economic', 'conditions', ','), ('conditions', ',', 'importance'), (',', 'importance', 'cost-savings'), ('importance', 'cost-savings', 'underestimated'), ('cost-savings', 'underestimated', '.')]

>> POS Tags are: 
 [('Conclusion', 'NN'), ('In', 'IN'), ('challenging', 'VBG'), ('economic', 'JJ'), ('conditions', 'NNS'), (',', ','), ('importance', 'NN'), ('cost-savings', 'NNS'), ('underestimated', 'JJ'), ('.', '.')]

>> Noun Phrases are: 
 ['Conclusion', 'economic conditions', 'importance cost-savings']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Conclusion', 'conclus'), ('In', 'in'), ('challenging', 'challeng'), ('economic', 'econom'), ('conditions', 'condit'), (',', ','), ('importance', 'import'), ('cost-savings', 'cost-sav'), ('underestimated', 'underestim'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Conclusion', 'conclus'), ('In', 'in'), ('challenging', 'challeng'), ('economic', 'econom'), ('conditions', 'condit'), (',', ','), ('importance', 'import'), ('cost-savings', 'cost-sav'), ('underestimated', 'underestim'), ('.', '.')]

>> Lemmatization: 
 [('Conclusion', 'Conclusion'), ('In', 'In'), ('challenging', 'challenging'), ('economic', 'economic'), ('conditions', 'condition'), (',', ','), ('importance', 'importance'), ('cost-savings', 'cost-savings'), ('underestimated', 'underestimated'), ('.', '.')]


------------------- Sentence 2 -------------------

By applying effective natural language techniques to a  speech-enabled self-service IVR system, automation rates will increase lead- ing directly to lower costs.

>> Tokens are: 
 ['By', 'applying', 'effective', 'natural', 'language', 'techniques', 'speech-enabled', 'self-service', 'IVR', 'system', ',', 'automation', 'rates', 'increase', 'lead-', 'ing', 'directly', 'lower', 'costs', '.']

>> Bigrams are: 
 [('By', 'applying'), ('applying', 'effective'), ('effective', 'natural'), ('natural', 'language'), ('language', 'techniques'), ('techniques', 'speech-enabled'), ('speech-enabled', 'self-service'), ('self-service', 'IVR'), ('IVR', 'system'), ('system', ','), (',', 'automation'), ('automation', 'rates'), ('rates', 'increase'), ('increase', 'lead-'), ('lead-', 'ing'), ('ing', 'directly'), ('directly', 'lower'), ('lower', 'costs'), ('costs', '.')]

>> Trigrams are: 
 [('By', 'applying', 'effective'), ('applying', 'effective', 'natural'), ('effective', 'natural', 'language'), ('natural', 'language', 'techniques'), ('language', 'techniques', 'speech-enabled'), ('techniques', 'speech-enabled', 'self-service'), ('speech-enabled', 'self-service', 'IVR'), ('self-service', 'IVR', 'system'), ('IVR', 'system', ','), ('system', ',', 'automation'), (',', 'automation', 'rates'), ('automation', 'rates', 'increase'), ('rates', 'increase', 'lead-'), ('increase', 'lead-', 'ing'), ('lead-', 'ing', 'directly'), ('ing', 'directly', 'lower'), ('directly', 'lower', 'costs'), ('lower', 'costs', '.')]

>> POS Tags are: 
 [('By', 'IN'), ('applying', 'VBG'), ('effective', 'JJ'), ('natural', 'JJ'), ('language', 'NN'), ('techniques', 'NNS'), ('speech-enabled', 'JJ'), ('self-service', 'JJ'), ('IVR', 'NNP'), ('system', 'NN'), (',', ','), ('automation', 'NN'), ('rates', 'NNS'), ('increase', 'VBP'), ('lead-', 'JJ'), ('ing', 'VBG'), ('directly', 'RB'), ('lower', 'JJR'), ('costs', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['effective natural language techniques', 'speech-enabled self-service IVR system', 'automation rates', 'costs']

>> Named Entities are: 
 [('ORGANIZATION', 'IVR')] 

>> Stemming using Porter Stemmer: 
 [('By', 'by'), ('applying', 'appli'), ('effective', 'effect'), ('natural', 'natur'), ('language', 'languag'), ('techniques', 'techniqu'), ('speech-enabled', 'speech-en'), ('self-service', 'self-servic'), ('IVR', 'ivr'), ('system', 'system'), (',', ','), ('automation', 'autom'), ('rates', 'rate'), ('increase', 'increas'), ('lead-', 'lead-'), ('ing', 'ing'), ('directly', 'directli'), ('lower', 'lower'), ('costs', 'cost'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('By', 'by'), ('applying', 'appli'), ('effective', 'effect'), ('natural', 'natur'), ('language', 'languag'), ('techniques', 'techniqu'), ('speech-enabled', 'speech-en'), ('self-service', 'self-servic'), ('IVR', 'ivr'), ('system', 'system'), (',', ','), ('automation', 'autom'), ('rates', 'rate'), ('increase', 'increas'), ('lead-', 'lead-'), ('ing', 'ing'), ('directly', 'direct'), ('lower', 'lower'), ('costs', 'cost'), ('.', '.')]

>> Lemmatization: 
 [('By', 'By'), ('applying', 'applying'), ('effective', 'effective'), ('natural', 'natural'), ('language', 'language'), ('techniques', 'technique'), ('speech-enabled', 'speech-enabled'), ('self-service', 'self-service'), ('IVR', 'IVR'), ('system', 'system'), (',', ','), ('automation', 'automation'), ('rates', 'rate'), ('increase', 'increase'), ('lead-', 'lead-'), ('ing', 'ing'), ('directly', 'directly'), ('lower', 'lower'), ('costs', 'cost'), ('.', '.')]


------------------- Sentence 3 -------------------

This paper has shown that different approaches to  natural language can be applied throughout the caller’s interaction to achieve  these improved automation rates.

>> Tokens are: 
 ['This', 'paper', 'shown', 'different', 'approaches', 'natural', 'language', 'applied', 'throughout', 'caller', '’', 'interaction', 'achieve', 'improved', 'automation', 'rates', '.']

>> Bigrams are: 
 [('This', 'paper'), ('paper', 'shown'), ('shown', 'different'), ('different', 'approaches'), ('approaches', 'natural'), ('natural', 'language'), ('language', 'applied'), ('applied', 'throughout'), ('throughout', 'caller'), ('caller', '’'), ('’', 'interaction'), ('interaction', 'achieve'), ('achieve', 'improved'), ('improved', 'automation'), ('automation', 'rates'), ('rates', '.')]

>> Trigrams are: 
 [('This', 'paper', 'shown'), ('paper', 'shown', 'different'), ('shown', 'different', 'approaches'), ('different', 'approaches', 'natural'), ('approaches', 'natural', 'language'), ('natural', 'language', 'applied'), ('language', 'applied', 'throughout'), ('applied', 'throughout', 'caller'), ('throughout', 'caller', '’'), ('caller', '’', 'interaction'), ('’', 'interaction', 'achieve'), ('interaction', 'achieve', 'improved'), ('achieve', 'improved', 'automation'), ('improved', 'automation', 'rates'), ('automation', 'rates', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('paper', 'NN'), ('shown', 'VBN'), ('different', 'JJ'), ('approaches', 'NNS'), ('natural', 'JJ'), ('language', 'NN'), ('applied', 'VBN'), ('throughout', 'IN'), ('caller', 'NN'), ('’', 'NNP'), ('interaction', 'NN'), ('achieve', 'VBP'), ('improved', 'VBN'), ('automation', 'NN'), ('rates', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['This paper', 'different approaches', 'natural language', 'caller ’ interaction', 'automation rates']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('paper', 'paper'), ('shown', 'shown'), ('different', 'differ'), ('approaches', 'approach'), ('natural', 'natur'), ('language', 'languag'), ('applied', 'appli'), ('throughout', 'throughout'), ('caller', 'caller'), ('’', '’'), ('interaction', 'interact'), ('achieve', 'achiev'), ('improved', 'improv'), ('automation', 'autom'), ('rates', 'rate'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('paper', 'paper'), ('shown', 'shown'), ('different', 'differ'), ('approaches', 'approach'), ('natural', 'natur'), ('language', 'languag'), ('applied', 'appli'), ('throughout', 'throughout'), ('caller', 'caller'), ('’', '’'), ('interaction', 'interact'), ('achieve', 'achiev'), ('improved', 'improv'), ('automation', 'autom'), ('rates', 'rate'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('paper', 'paper'), ('shown', 'shown'), ('different', 'different'), ('approaches', 'approach'), ('natural', 'natural'), ('language', 'language'), ('applied', 'applied'), ('throughout', 'throughout'), ('caller', 'caller'), ('’', '’'), ('interaction', 'interaction'), ('achieve', 'achieve'), ('improved', 'improved'), ('automation', 'automation'), ('rates', 'rate'), ('.', '.')]


------------------- Sentence 4 -------------------

The three complementary natural language  approaches of increasing the recognition accuracy within and around  grammars, allowing callers to give open-ended responses, and interacting  with adaptive dialogs all lead to more efficient and appealing calls.

>> Tokens are: 
 ['The', 'three', 'complementary', 'natural', 'language', 'approaches', 'increasing', 'recognition', 'accuracy', 'within', 'around', 'grammars', ',', 'allowing', 'callers', 'give', 'open-ended', 'responses', ',', 'interacting', 'adaptive', 'dialogs', 'lead', 'efficient', 'appealing', 'calls', '.']

>> Bigrams are: 
 [('The', 'three'), ('three', 'complementary'), ('complementary', 'natural'), ('natural', 'language'), ('language', 'approaches'), ('approaches', 'increasing'), ('increasing', 'recognition'), ('recognition', 'accuracy'), ('accuracy', 'within'), ('within', 'around'), ('around', 'grammars'), ('grammars', ','), (',', 'allowing'), ('allowing', 'callers'), ('callers', 'give'), ('give', 'open-ended'), ('open-ended', 'responses'), ('responses', ','), (',', 'interacting'), ('interacting', 'adaptive'), ('adaptive', 'dialogs'), ('dialogs', 'lead'), ('lead', 'efficient'), ('efficient', 'appealing'), ('appealing', 'calls'), ('calls', '.')]

>> Trigrams are: 
 [('The', 'three', 'complementary'), ('three', 'complementary', 'natural'), ('complementary', 'natural', 'language'), ('natural', 'language', 'approaches'), ('language', 'approaches', 'increasing'), ('approaches', 'increasing', 'recognition'), ('increasing', 'recognition', 'accuracy'), ('recognition', 'accuracy', 'within'), ('accuracy', 'within', 'around'), ('within', 'around', 'grammars'), ('around', 'grammars', ','), ('grammars', ',', 'allowing'), (',', 'allowing', 'callers'), ('allowing', 'callers', 'give'), ('callers', 'give', 'open-ended'), ('give', 'open-ended', 'responses'), ('open-ended', 'responses', ','), ('responses', ',', 'interacting'), (',', 'interacting', 'adaptive'), ('interacting', 'adaptive', 'dialogs'), ('adaptive', 'dialogs', 'lead'), ('dialogs', 'lead', 'efficient'), ('lead', 'efficient', 'appealing'), ('efficient', 'appealing', 'calls'), ('appealing', 'calls', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('three', 'CD'), ('complementary', 'JJ'), ('natural', 'JJ'), ('language', 'NN'), ('approaches', 'NNS'), ('increasing', 'VBG'), ('recognition', 'NN'), ('accuracy', 'NN'), ('within', 'IN'), ('around', 'IN'), ('grammars', 'NNS'), (',', ','), ('allowing', 'VBG'), ('callers', 'NNS'), ('give', 'VBP'), ('open-ended', 'JJ'), ('responses', 'NNS'), (',', ','), ('interacting', 'VBG'), ('adaptive', 'JJ'), ('dialogs', 'NNS'), ('lead', 'VBP'), ('efficient', 'JJ'), ('appealing', 'VBG'), ('calls', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['complementary natural language approaches', 'recognition accuracy', 'grammars', 'callers', 'open-ended responses', 'adaptive dialogs', 'calls']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('three', 'three'), ('complementary', 'complementari'), ('natural', 'natur'), ('language', 'languag'), ('approaches', 'approach'), ('increasing', 'increas'), ('recognition', 'recognit'), ('accuracy', 'accuraci'), ('within', 'within'), ('around', 'around'), ('grammars', 'grammar'), (',', ','), ('allowing', 'allow'), ('callers', 'caller'), ('give', 'give'), ('open-ended', 'open-end'), ('responses', 'respons'), (',', ','), ('interacting', 'interact'), ('adaptive', 'adapt'), ('dialogs', 'dialog'), ('lead', 'lead'), ('efficient', 'effici'), ('appealing', 'appeal'), ('calls', 'call'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('three', 'three'), ('complementary', 'complementari'), ('natural', 'natur'), ('language', 'languag'), ('approaches', 'approach'), ('increasing', 'increas'), ('recognition', 'recognit'), ('accuracy', 'accuraci'), ('within', 'within'), ('around', 'around'), ('grammars', 'grammar'), (',', ','), ('allowing', 'allow'), ('callers', 'caller'), ('give', 'give'), ('open-ended', 'open-end'), ('responses', 'respons'), (',', ','), ('interacting', 'interact'), ('adaptive', 'adapt'), ('dialogs', 'dialog'), ('lead', 'lead'), ('efficient', 'effici'), ('appealing', 'appeal'), ('calls', 'call'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('three', 'three'), ('complementary', 'complementary'), ('natural', 'natural'), ('language', 'language'), ('approaches', 'approach'), ('increasing', 'increasing'), ('recognition', 'recognition'), ('accuracy', 'accuracy'), ('within', 'within'), ('around', 'around'), ('grammars', 'grammar'), (',', ','), ('allowing', 'allowing'), ('callers', 'caller'), ('give', 'give'), ('open-ended', 'open-ended'), ('responses', 'response'), (',', ','), ('interacting', 'interacting'), ('adaptive', 'adaptive'), ('dialogs', 'dialog'), ('lead', 'lead'), ('efficient', 'efficient'), ('appealing', 'appealing'), ('calls', 'call'), ('.', '.')]



========================================== PARAGRAPH 82 ===========================================

Copyright © 2015 Nuance Communications, Inc. All rights reserved. Nuance, and the Nuance logo, are trademarks and/or  registered trademarks, of Nuance Communications, Inc. or its affiliates in the United States and/or other countries. All other  brand and product names are trademarks or registered trademarks of their respective companies.  

------------------- Sentence 1 -------------------

Copyright © 2015 Nuance Communications, Inc. All rights reserved.

>> Tokens are: 
 ['Copyright', '©', '2015', 'Nuance', 'Communications', ',', 'Inc.', 'All', 'rights', 'reserved', '.']

>> Bigrams are: 
 [('Copyright', '©'), ('©', '2015'), ('2015', 'Nuance'), ('Nuance', 'Communications'), ('Communications', ','), (',', 'Inc.'), ('Inc.', 'All'), ('All', 'rights'), ('rights', 'reserved'), ('reserved', '.')]

>> Trigrams are: 
 [('Copyright', '©', '2015'), ('©', '2015', 'Nuance'), ('2015', 'Nuance', 'Communications'), ('Nuance', 'Communications', ','), ('Communications', ',', 'Inc.'), (',', 'Inc.', 'All'), ('Inc.', 'All', 'rights'), ('All', 'rights', 'reserved'), ('rights', 'reserved', '.')]

>> POS Tags are: 
 [('Copyright', 'NNP'), ('©', 'NN'), ('2015', 'CD'), ('Nuance', 'NNP'), ('Communications', 'NNP'), (',', ','), ('Inc.', 'NNP'), ('All', 'NNP'), ('rights', 'NNS'), ('reserved', 'VBN'), ('.', '.')]

>> Noun Phrases are: 
 ['Copyright ©', 'Nuance Communications', 'Inc. All rights']

>> Named Entities are: 
 [('GPE', 'Copyright'), ('ORGANIZATION', 'Nuance Communications')] 

>> Stemming using Porter Stemmer: 
 [('Copyright', 'copyright'), ('©', '©'), ('2015', '2015'), ('Nuance', 'nuanc'), ('Communications', 'commun'), (',', ','), ('Inc.', 'inc.'), ('All', 'all'), ('rights', 'right'), ('reserved', 'reserv'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Copyright', 'copyright'), ('©', '©'), ('2015', '2015'), ('Nuance', 'nuanc'), ('Communications', 'communic'), (',', ','), ('Inc.', 'inc.'), ('All', 'all'), ('rights', 'right'), ('reserved', 'reserv'), ('.', '.')]

>> Lemmatization: 
 [('Copyright', 'Copyright'), ('©', '©'), ('2015', '2015'), ('Nuance', 'Nuance'), ('Communications', 'Communications'), (',', ','), ('Inc.', 'Inc.'), ('All', 'All'), ('rights', 'right'), ('reserved', 'reserved'), ('.', '.')]


------------------- Sentence 2 -------------------

Nuance, and the Nuance logo, are trademarks and/or  registered trademarks, of Nuance Communications, Inc. or its affiliates in the United States and/or other countries.

>> Tokens are: 
 ['Nuance', ',', 'Nuance', 'logo', ',', 'trademarks', 'and/or', 'registered', 'trademarks', ',', 'Nuance', 'Communications', ',', 'Inc.', 'affiliates', 'United', 'States', 'and/or', 'countries', '.']

>> Bigrams are: 
 [('Nuance', ','), (',', 'Nuance'), ('Nuance', 'logo'), ('logo', ','), (',', 'trademarks'), ('trademarks', 'and/or'), ('and/or', 'registered'), ('registered', 'trademarks'), ('trademarks', ','), (',', 'Nuance'), ('Nuance', 'Communications'), ('Communications', ','), (',', 'Inc.'), ('Inc.', 'affiliates'), ('affiliates', 'United'), ('United', 'States'), ('States', 'and/or'), ('and/or', 'countries'), ('countries', '.')]

>> Trigrams are: 
 [('Nuance', ',', 'Nuance'), (',', 'Nuance', 'logo'), ('Nuance', 'logo', ','), ('logo', ',', 'trademarks'), (',', 'trademarks', 'and/or'), ('trademarks', 'and/or', 'registered'), ('and/or', 'registered', 'trademarks'), ('registered', 'trademarks', ','), ('trademarks', ',', 'Nuance'), (',', 'Nuance', 'Communications'), ('Nuance', 'Communications', ','), ('Communications', ',', 'Inc.'), (',', 'Inc.', 'affiliates'), ('Inc.', 'affiliates', 'United'), ('affiliates', 'United', 'States'), ('United', 'States', 'and/or'), ('States', 'and/or', 'countries'), ('and/or', 'countries', '.')]

>> POS Tags are: 
 [('Nuance', 'NN'), (',', ','), ('Nuance', 'NNP'), ('logo', 'NN'), (',', ','), ('trademarks', 'NNS'), ('and/or', 'VBP'), ('registered', 'VBN'), ('trademarks', 'NNS'), (',', ','), ('Nuance', 'NNP'), ('Communications', 'NNP'), (',', ','), ('Inc.', 'NNP'), ('affiliates', 'VBZ'), ('United', 'NNP'), ('States', 'NNPS'), ('and/or', 'JJ'), ('countries', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['Nuance', 'Nuance logo', 'trademarks', 'trademarks', 'Nuance Communications', 'Inc.', 'United', 'and/or countries']

>> Named Entities are: 
 [('GPE', 'Nuance'), ('GPE', 'Nuance'), ('PERSON', 'Nuance Communications'), ('GPE', 'United States')] 

>> Stemming using Porter Stemmer: 
 [('Nuance', 'nuanc'), (',', ','), ('Nuance', 'nuanc'), ('logo', 'logo'), (',', ','), ('trademarks', 'trademark'), ('and/or', 'and/or'), ('registered', 'regist'), ('trademarks', 'trademark'), (',', ','), ('Nuance', 'nuanc'), ('Communications', 'commun'), (',', ','), ('Inc.', 'inc.'), ('affiliates', 'affili'), ('United', 'unit'), ('States', 'state'), ('and/or', 'and/or'), ('countries', 'countri'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Nuance', 'nuanc'), (',', ','), ('Nuance', 'nuanc'), ('logo', 'logo'), (',', ','), ('trademarks', 'trademark'), ('and/or', 'and/or'), ('registered', 'regist'), ('trademarks', 'trademark'), (',', ','), ('Nuance', 'nuanc'), ('Communications', 'communic'), (',', ','), ('Inc.', 'inc.'), ('affiliates', 'affili'), ('United', 'unit'), ('States', 'state'), ('and/or', 'and/or'), ('countries', 'countri'), ('.', '.')]

>> Lemmatization: 
 [('Nuance', 'Nuance'), (',', ','), ('Nuance', 'Nuance'), ('logo', 'logo'), (',', ','), ('trademarks', 'trademark'), ('and/or', 'and/or'), ('registered', 'registered'), ('trademarks', 'trademark'), (',', ','), ('Nuance', 'Nuance'), ('Communications', 'Communications'), (',', ','), ('Inc.', 'Inc.'), ('affiliates', 'affiliate'), ('United', 'United'), ('States', 'States'), ('and/or', 'and/or'), ('countries', 'country'), ('.', '.')]


------------------- Sentence 3 -------------------

All other  brand and product names are trademarks or registered trademarks of their respective companies.

>> Tokens are: 
 ['All', 'brand', 'product', 'names', 'trademarks', 'registered', 'trademarks', 'respective', 'companies', '.']

>> Bigrams are: 
 [('All', 'brand'), ('brand', 'product'), ('product', 'names'), ('names', 'trademarks'), ('trademarks', 'registered'), ('registered', 'trademarks'), ('trademarks', 'respective'), ('respective', 'companies'), ('companies', '.')]

>> Trigrams are: 
 [('All', 'brand', 'product'), ('brand', 'product', 'names'), ('product', 'names', 'trademarks'), ('names', 'trademarks', 'registered'), ('trademarks', 'registered', 'trademarks'), ('registered', 'trademarks', 'respective'), ('trademarks', 'respective', 'companies'), ('respective', 'companies', '.')]

>> POS Tags are: 
 [('All', 'DT'), ('brand', 'NN'), ('product', 'NN'), ('names', 'NNS'), ('trademarks', 'NNS'), ('registered', 'VBD'), ('trademarks', 'NNS'), ('respective', 'JJ'), ('companies', 'NNS'), ('.', '.')]

>> Noun Phrases are: 
 ['All brand product names trademarks', 'trademarks', 'respective companies']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('All', 'all'), ('brand', 'brand'), ('product', 'product'), ('names', 'name'), ('trademarks', 'trademark'), ('registered', 'regist'), ('trademarks', 'trademark'), ('respective', 'respect'), ('companies', 'compani'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('All', 'all'), ('brand', 'brand'), ('product', 'product'), ('names', 'name'), ('trademarks', 'trademark'), ('registered', 'regist'), ('trademarks', 'trademark'), ('respective', 'respect'), ('companies', 'compani'), ('.', '.')]

>> Lemmatization: 
 [('All', 'All'), ('brand', 'brand'), ('product', 'product'), ('names', 'name'), ('trademarks', 'trademark'), ('registered', 'registered'), ('trademarks', 'trademark'), ('respective', 'respective'), ('companies', 'company'), ('.', '.')]



========================================== PARAGRAPH 83 ===========================================

NUAN–CS–385–01–WP, Feb 17 2015 

------------------- Sentence 1 -------------------

NUAN–CS–385–01–WP, Feb 17 2015

>> Tokens are: 
 ['NUAN–CS–385–01–WP', ',', 'Feb', '17', '2015']

>> Bigrams are: 
 [('NUAN–CS–385–01–WP', ','), (',', 'Feb'), ('Feb', '17'), ('17', '2015')]

>> Trigrams are: 
 [('NUAN–CS–385–01–WP', ',', 'Feb'), (',', 'Feb', '17'), ('Feb', '17', '2015')]

>> POS Tags are: 
 [('NUAN–CS–385–01–WP', 'NNP'), (',', ','), ('Feb', 'NNP'), ('17', 'CD'), ('2015', 'CD')]

>> Noun Phrases are: 
 ['NUAN–CS–385–01–WP', 'Feb']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('NUAN–CS–385–01–WP', 'nuan–cs–385–01–wp'), (',', ','), ('Feb', 'feb'), ('17', '17'), ('2015', '2015')]

>> Stemming using Snowball Stemmer: 
 [('NUAN–CS–385–01–WP', 'nuan–cs–385–01–wp'), (',', ','), ('Feb', 'feb'), ('17', '17'), ('2015', '2015')]

>> Lemmatization: 
 [('NUAN–CS–385–01–WP', 'NUAN–CS–385–01–WP'), (',', ','), ('Feb', 'Feb'), ('17', '17'), ('2015', '2015')]



========================================== PARAGRAPH 84 ===========================================

About Nuance Communications, Inc. Nuance Communications is reinventing the relationship between people and technology. Through its voice and  language offerings, the company is creating a more human conversation with the many systems, devices, electronics,  apps and services around us. Every day, millions of people and thousands of businesses experience Nuance through  intelligent systems that can listen, understand, learn and adapt to your life and your work. For more information, please  visit nuance.com. 

------------------- Sentence 1 -------------------

About Nuance Communications, Inc. Nuance Communications is reinventing the relationship between people and technology.

>> Tokens are: 
 ['About', 'Nuance', 'Communications', ',', 'Inc.', 'Nuance', 'Communications', 'reinventing', 'relationship', 'people', 'technology', '.']

>> Bigrams are: 
 [('About', 'Nuance'), ('Nuance', 'Communications'), ('Communications', ','), (',', 'Inc.'), ('Inc.', 'Nuance'), ('Nuance', 'Communications'), ('Communications', 'reinventing'), ('reinventing', 'relationship'), ('relationship', 'people'), ('people', 'technology'), ('technology', '.')]

>> Trigrams are: 
 [('About', 'Nuance', 'Communications'), ('Nuance', 'Communications', ','), ('Communications', ',', 'Inc.'), (',', 'Inc.', 'Nuance'), ('Inc.', 'Nuance', 'Communications'), ('Nuance', 'Communications', 'reinventing'), ('Communications', 'reinventing', 'relationship'), ('reinventing', 'relationship', 'people'), ('relationship', 'people', 'technology'), ('people', 'technology', '.')]

>> POS Tags are: 
 [('About', 'IN'), ('Nuance', 'NNP'), ('Communications', 'NNP'), (',', ','), ('Inc.', 'NNP'), ('Nuance', 'NNP'), ('Communications', 'NNP'), ('reinventing', 'VBG'), ('relationship', 'NN'), ('people', 'NNS'), ('technology', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['Nuance Communications', 'Inc. Nuance Communications', 'relationship people technology']

>> Named Entities are: 
 [('PERSON', 'Nuance Communications')] 

>> Stemming using Porter Stemmer: 
 [('About', 'about'), ('Nuance', 'nuanc'), ('Communications', 'commun'), (',', ','), ('Inc.', 'inc.'), ('Nuance', 'nuanc'), ('Communications', 'commun'), ('reinventing', 'reinvent'), ('relationship', 'relationship'), ('people', 'peopl'), ('technology', 'technolog'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('About', 'about'), ('Nuance', 'nuanc'), ('Communications', 'communic'), (',', ','), ('Inc.', 'inc.'), ('Nuance', 'nuanc'), ('Communications', 'communic'), ('reinventing', 'reinvent'), ('relationship', 'relationship'), ('people', 'peopl'), ('technology', 'technolog'), ('.', '.')]

>> Lemmatization: 
 [('About', 'About'), ('Nuance', 'Nuance'), ('Communications', 'Communications'), (',', ','), ('Inc.', 'Inc.'), ('Nuance', 'Nuance'), ('Communications', 'Communications'), ('reinventing', 'reinventing'), ('relationship', 'relationship'), ('people', 'people'), ('technology', 'technology'), ('.', '.')]


------------------- Sentence 2 -------------------

Through its voice and  language offerings, the company is creating a more human conversation with the many systems, devices, electronics,  apps and services around us.

>> Tokens are: 
 ['Through', 'voice', 'language', 'offerings', ',', 'company', 'creating', 'human', 'conversation', 'many', 'systems', ',', 'devices', ',', 'electronics', ',', 'apps', 'services', 'around', 'us', '.']

>> Bigrams are: 
 [('Through', 'voice'), ('voice', 'language'), ('language', 'offerings'), ('offerings', ','), (',', 'company'), ('company', 'creating'), ('creating', 'human'), ('human', 'conversation'), ('conversation', 'many'), ('many', 'systems'), ('systems', ','), (',', 'devices'), ('devices', ','), (',', 'electronics'), ('electronics', ','), (',', 'apps'), ('apps', 'services'), ('services', 'around'), ('around', 'us'), ('us', '.')]

>> Trigrams are: 
 [('Through', 'voice', 'language'), ('voice', 'language', 'offerings'), ('language', 'offerings', ','), ('offerings', ',', 'company'), (',', 'company', 'creating'), ('company', 'creating', 'human'), ('creating', 'human', 'conversation'), ('human', 'conversation', 'many'), ('conversation', 'many', 'systems'), ('many', 'systems', ','), ('systems', ',', 'devices'), (',', 'devices', ','), ('devices', ',', 'electronics'), (',', 'electronics', ','), ('electronics', ',', 'apps'), (',', 'apps', 'services'), ('apps', 'services', 'around'), ('services', 'around', 'us'), ('around', 'us', '.')]

>> POS Tags are: 
 [('Through', 'IN'), ('voice', 'NN'), ('language', 'NN'), ('offerings', 'NNS'), (',', ','), ('company', 'NN'), ('creating', 'VBG'), ('human', 'JJ'), ('conversation', 'NN'), ('many', 'JJ'), ('systems', 'NNS'), (',', ','), ('devices', 'NNS'), (',', ','), ('electronics', 'NNS'), (',', ','), ('apps', 'NN'), ('services', 'NNS'), ('around', 'IN'), ('us', 'PRP'), ('.', '.')]

>> Noun Phrases are: 
 ['voice language offerings', 'company', 'human conversation', 'many systems', 'devices', 'electronics', 'apps services']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Through', 'through'), ('voice', 'voic'), ('language', 'languag'), ('offerings', 'offer'), (',', ','), ('company', 'compani'), ('creating', 'creat'), ('human', 'human'), ('conversation', 'convers'), ('many', 'mani'), ('systems', 'system'), (',', ','), ('devices', 'devic'), (',', ','), ('electronics', 'electron'), (',', ','), ('apps', 'app'), ('services', 'servic'), ('around', 'around'), ('us', 'us'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Through', 'through'), ('voice', 'voic'), ('language', 'languag'), ('offerings', 'offer'), (',', ','), ('company', 'compani'), ('creating', 'creat'), ('human', 'human'), ('conversation', 'convers'), ('many', 'mani'), ('systems', 'system'), (',', ','), ('devices', 'devic'), (',', ','), ('electronics', 'electron'), (',', ','), ('apps', 'app'), ('services', 'servic'), ('around', 'around'), ('us', 'us'), ('.', '.')]

>> Lemmatization: 
 [('Through', 'Through'), ('voice', 'voice'), ('language', 'language'), ('offerings', 'offering'), (',', ','), ('company', 'company'), ('creating', 'creating'), ('human', 'human'), ('conversation', 'conversation'), ('many', 'many'), ('systems', 'system'), (',', ','), ('devices', 'device'), (',', ','), ('electronics', 'electronics'), (',', ','), ('apps', 'apps'), ('services', 'service'), ('around', 'around'), ('us', 'u'), ('.', '.')]


------------------- Sentence 3 -------------------

Every day, millions of people and thousands of businesses experience Nuance through  intelligent systems that can listen, understand, learn and adapt to your life and your work.

>> Tokens are: 
 ['Every', 'day', ',', 'millions', 'people', 'thousands', 'businesses', 'experience', 'Nuance', 'intelligent', 'systems', 'listen', ',', 'understand', ',', 'learn', 'adapt', 'life', 'work', '.']

>> Bigrams are: 
 [('Every', 'day'), ('day', ','), (',', 'millions'), ('millions', 'people'), ('people', 'thousands'), ('thousands', 'businesses'), ('businesses', 'experience'), ('experience', 'Nuance'), ('Nuance', 'intelligent'), ('intelligent', 'systems'), ('systems', 'listen'), ('listen', ','), (',', 'understand'), ('understand', ','), (',', 'learn'), ('learn', 'adapt'), ('adapt', 'life'), ('life', 'work'), ('work', '.')]

>> Trigrams are: 
 [('Every', 'day', ','), ('day', ',', 'millions'), (',', 'millions', 'people'), ('millions', 'people', 'thousands'), ('people', 'thousands', 'businesses'), ('thousands', 'businesses', 'experience'), ('businesses', 'experience', 'Nuance'), ('experience', 'Nuance', 'intelligent'), ('Nuance', 'intelligent', 'systems'), ('intelligent', 'systems', 'listen'), ('systems', 'listen', ','), ('listen', ',', 'understand'), (',', 'understand', ','), ('understand', ',', 'learn'), (',', 'learn', 'adapt'), ('learn', 'adapt', 'life'), ('adapt', 'life', 'work'), ('life', 'work', '.')]

>> POS Tags are: 
 [('Every', 'DT'), ('day', 'NN'), (',', ','), ('millions', 'NNS'), ('people', 'NNS'), ('thousands', 'NNS'), ('businesses', 'NNS'), ('experience', 'VBP'), ('Nuance', 'NNP'), ('intelligent', 'JJ'), ('systems', 'NNS'), ('listen', 'VBN'), (',', ','), ('understand', 'NN'), (',', ','), ('learn', 'NN'), ('adapt', 'JJ'), ('life', 'NN'), ('work', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['Every day', 'millions people thousands businesses', 'Nuance', 'intelligent systems', 'understand', 'learn', 'adapt life work']

>> Named Entities are: 
 [('GPE', 'Nuance')] 

>> Stemming using Porter Stemmer: 
 [('Every', 'everi'), ('day', 'day'), (',', ','), ('millions', 'million'), ('people', 'peopl'), ('thousands', 'thousand'), ('businesses', 'busi'), ('experience', 'experi'), ('Nuance', 'nuanc'), ('intelligent', 'intellig'), ('systems', 'system'), ('listen', 'listen'), (',', ','), ('understand', 'understand'), (',', ','), ('learn', 'learn'), ('adapt', 'adapt'), ('life', 'life'), ('work', 'work'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Every', 'everi'), ('day', 'day'), (',', ','), ('millions', 'million'), ('people', 'peopl'), ('thousands', 'thousand'), ('businesses', 'busi'), ('experience', 'experi'), ('Nuance', 'nuanc'), ('intelligent', 'intellig'), ('systems', 'system'), ('listen', 'listen'), (',', ','), ('understand', 'understand'), (',', ','), ('learn', 'learn'), ('adapt', 'adapt'), ('life', 'life'), ('work', 'work'), ('.', '.')]

>> Lemmatization: 
 [('Every', 'Every'), ('day', 'day'), (',', ','), ('millions', 'million'), ('people', 'people'), ('thousands', 'thousand'), ('businesses', 'business'), ('experience', 'experience'), ('Nuance', 'Nuance'), ('intelligent', 'intelligent'), ('systems', 'system'), ('listen', 'listen'), (',', ','), ('understand', 'understand'), (',', ','), ('learn', 'learn'), ('adapt', 'adapt'), ('life', 'life'), ('work', 'work'), ('.', '.')]


------------------- Sentence 4 -------------------

For more information, please  visit nuance.com.

>> Tokens are: 
 ['For', 'information', ',', 'please', 'visit', 'nuance.com', '.']

>> Bigrams are: 
 [('For', 'information'), ('information', ','), (',', 'please'), ('please', 'visit'), ('visit', 'nuance.com'), ('nuance.com', '.')]

>> Trigrams are: 
 [('For', 'information', ','), ('information', ',', 'please'), (',', 'please', 'visit'), ('please', 'visit', 'nuance.com'), ('visit', 'nuance.com', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('information', 'NN'), (',', ','), ('please', 'VB'), ('visit', 'NN'), ('nuance.com', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['information', 'visit nuance.com']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('information', 'inform'), (',', ','), ('please', 'pleas'), ('visit', 'visit'), ('nuance.com', 'nuance.com'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('information', 'inform'), (',', ','), ('please', 'pleas'), ('visit', 'visit'), ('nuance.com', 'nuance.com'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('information', 'information'), (',', ','), ('please', 'please'), ('visit', 'visit'), ('nuance.com', 'nuance.com'), ('.', '.')]



========================================== PARAGRAPH 85 ===========================================

Nuance Adaptive Dialog Modules  are specialized building blocks used  to efficiently create intuitive speech- enabled dialogs that drive automation.

------------------- Sentence 1 -------------------

Nuance Adaptive Dialog Modules  are specialized building blocks used  to efficiently create intuitive speech- enabled dialogs that drive automation.

>> Tokens are: 
 ['Nuance', 'Adaptive', 'Dialog', 'Modules', 'specialized', 'building', 'blocks', 'used', 'efficiently', 'create', 'intuitive', 'speech-', 'enabled', 'dialogs', 'drive', 'automation', '.']

>> Bigrams are: 
 [('Nuance', 'Adaptive'), ('Adaptive', 'Dialog'), ('Dialog', 'Modules'), ('Modules', 'specialized'), ('specialized', 'building'), ('building', 'blocks'), ('blocks', 'used'), ('used', 'efficiently'), ('efficiently', 'create'), ('create', 'intuitive'), ('intuitive', 'speech-'), ('speech-', 'enabled'), ('enabled', 'dialogs'), ('dialogs', 'drive'), ('drive', 'automation'), ('automation', '.')]

>> Trigrams are: 
 [('Nuance', 'Adaptive', 'Dialog'), ('Adaptive', 'Dialog', 'Modules'), ('Dialog', 'Modules', 'specialized'), ('Modules', 'specialized', 'building'), ('specialized', 'building', 'blocks'), ('building', 'blocks', 'used'), ('blocks', 'used', 'efficiently'), ('used', 'efficiently', 'create'), ('efficiently', 'create', 'intuitive'), ('create', 'intuitive', 'speech-'), ('intuitive', 'speech-', 'enabled'), ('speech-', 'enabled', 'dialogs'), ('enabled', 'dialogs', 'drive'), ('dialogs', 'drive', 'automation'), ('drive', 'automation', '.')]

>> POS Tags are: 
 [('Nuance', 'NNP'), ('Adaptive', 'NNP'), ('Dialog', 'NNP'), ('Modules', 'NNP'), ('specialized', 'VBD'), ('building', 'NN'), ('blocks', 'NNS'), ('used', 'VBN'), ('efficiently', 'RB'), ('create', 'JJ'), ('intuitive', 'JJ'), ('speech-', 'NN'), ('enabled', 'VBD'), ('dialogs', 'NNS'), ('drive', 'JJ'), ('automation', 'NN'), ('.', '.')]

>> Noun Phrases are: 
 ['Nuance Adaptive Dialog Modules', 'building blocks', 'create intuitive speech-', 'dialogs', 'drive automation']

>> Named Entities are: 
 [('GPE', 'Nuance'), ('PERSON', 'Adaptive Dialog Modules')] 

>> Stemming using Porter Stemmer: 
 [('Nuance', 'nuanc'), ('Adaptive', 'adapt'), ('Dialog', 'dialog'), ('Modules', 'modul'), ('specialized', 'special'), ('building', 'build'), ('blocks', 'block'), ('used', 'use'), ('efficiently', 'effici'), ('create', 'creat'), ('intuitive', 'intuit'), ('speech-', 'speech-'), ('enabled', 'enabl'), ('dialogs', 'dialog'), ('drive', 'drive'), ('automation', 'autom'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Nuance', 'nuanc'), ('Adaptive', 'adapt'), ('Dialog', 'dialog'), ('Modules', 'modul'), ('specialized', 'special'), ('building', 'build'), ('blocks', 'block'), ('used', 'use'), ('efficiently', 'effici'), ('create', 'creat'), ('intuitive', 'intuit'), ('speech-', 'speech-'), ('enabled', 'enabl'), ('dialogs', 'dialog'), ('drive', 'drive'), ('automation', 'autom'), ('.', '.')]

>> Lemmatization: 
 [('Nuance', 'Nuance'), ('Adaptive', 'Adaptive'), ('Dialog', 'Dialog'), ('Modules', 'Modules'), ('specialized', 'specialized'), ('building', 'building'), ('blocks', 'block'), ('used', 'used'), ('efficiently', 'efficiently'), ('create', 'create'), ('intuitive', 'intuitive'), ('speech-', 'speech-'), ('enabled', 'enabled'), ('dialogs', 'dialog'), ('drive', 'drive'), ('automation', 'automation'), ('.', '.')]

