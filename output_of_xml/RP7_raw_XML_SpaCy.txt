				 *** Text Processing using Spacy *** 


================================ Paragraph 1 =================================

Natural Language Processing: State of The Art, Current Trends and  

------------------- Sentence 1 -------------------

Natural Language Processing: State of The Art, Current Trends and   


>> Tokens are: 
[Natural, Language, Processing, :, State, Art, ,, Current, Trends,  ] 

>> PoS Tags are: 
[('Natural', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'NOUN'), (':', 'PUNCT'), ('State', 'NOUN'), ('Art', 'PROPN'), (',', 'PUNCT'), ('Current', 'PROPN'), ('Trends', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Natural', 'compound'), ('Language', 'compound'), ('Processing', 'ROOT'), (':', 'punct'), ('State', 'appos'), ('Art', 'pobj'), (',', 'punct'), ('Current', 'compound'), ('Trends', 'conj'), (' ', 'conj')]

>> Bigrams: 
[[Natural, Language], [Language, Processing], [Processing, :], [:, State], [State, Art], [Art, ,], [,, Current], [Current, Trends], [Trends,  ]]

>> Trigrams: 
[[Natural, Language, Processing], [Language, Processing, :], [Processing, :, State], [:, State, Art], [State, Art, ,], [Art, ,, Current], [,, Current, Trends], [Current, Trends,  ]]

>> Noun Phrases are: 
[Natural Language Processing, State, The Art, Current Trends]

>> Named Entities are: 
[] 


================================ Paragraph 2 =================================

Challenges  

------------------- Sentence 1 -------------------

Challenges   


>> Tokens are: 
[Challenges,  ] 

>> PoS Tags are: 
[('Challenges', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Challenges', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[Challenges,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 3 =================================

Diksha Khurana 1 , Aditya Koli 

------------------- Sentence 1 -------------------

Diksha Khurana 1 , Aditya Koli 


>> Tokens are: 
[Diksha, Khurana, 1, ,, Aditya, Koli] 

>> PoS Tags are: 
[('Diksha', 'PROPN'), ('Khurana', 'PROPN'), ('1', 'NUM'), (',', 'PUNCT'), ('Aditya', 'PROPN'), ('Koli', 'PROPN')] 

>> Dependency Tags are: 
[('Diksha', 'compound'), ('Khurana', 'ROOT'), ('1', 'nummod'), (',', 'punct'), ('Aditya', 'compound'), ('Koli', 'appos')]

>> Bigrams: 
[[Diksha, Khurana], [Khurana, 1], [1, ,], [,, Aditya], [Aditya, Koli]]

>> Trigrams: 
[[Diksha, Khurana, 1], [Khurana, 1, ,], [1, ,, Aditya], [,, Aditya, Koli]]

>> Noun Phrases are: 
[Diksha Khurana, Aditya Koli]

>> Named Entities are: 
[('Diksha', 'ORG'), ('Aditya Koli', 'PERSON')] 


================================ Paragraph 4 =================================

1 , Kiran Khatter 

------------------- Sentence 1 -------------------

1 , Kiran Khatter 


>> Tokens are: 
[1, ,, Kiran, Khatter] 

>> PoS Tags are: 
[('1', 'X'), (',', 'PUNCT'), ('Kiran', 'PROPN'), ('Khatter', 'PROPN')] 

>> Dependency Tags are: 
[('1', 'ROOT'), (',', 'punct'), ('Kiran', 'compound'), ('Khatter', 'npadvmod')]

>> Bigrams: 
[[1, ,], [,, Kiran], [Kiran, Khatter]]

>> Trigrams: 
[[1, ,, Kiran], [,, Kiran, Khatter]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1', 'CARDINAL'), ('Kiran Khatter', 'PERSON')] 


================================ Paragraph 5 =================================

1,2  and Sukhdev Singh 

------------------- Sentence 1 -------------------

1,2  and Sukhdev Singh 


>> Tokens are: 
[1,2,  , Sukhdev, Singh] 

>> PoS Tags are: 
[('1,2', 'NUM'), (' ', 'SPACE'), ('Sukhdev', 'PROPN'), ('Singh', 'PROPN')] 

>> Dependency Tags are: 
[('1,2', 'nummod'), (' ', 'ROOT'), ('Sukhdev', 'compound'), ('Singh', 'conj')]

>> Bigrams: 
[[1,2,  ], [ , Sukhdev], [Sukhdev, Singh]]

>> Trigrams: 
[[1,2,  , Sukhdev], [ , Sukhdev, Singh]]

>> Noun Phrases are: 
[Sukhdev Singh]

>> Named Entities are: 
[('1,2', 'CARDINAL'), ('Sukhdev Singh', 'PERSON')] 


================================ Paragraph 6 =================================

1,2   

------------------- Sentence 1 -------------------

1,2    


>> Tokens are: 
[1,2,   ] 

>> PoS Tags are: 
[('1,2', 'NUM'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('1,2', 'nummod'), ('  ', 'ROOT')]

>> Bigrams: 
[[1,2,   ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1,2', 'CARDINAL')] 


================================ Paragraph 7 =================================

1 Department of Computer Science and Engineering  

------------------- Sentence 1 -------------------

1 Department of Computer Science and Engineering   


>> Tokens are: 
[1, Department, Computer, Science, Engineering,  ] 

>> PoS Tags are: 
[('1', 'NUM'), ('Department', 'PROPN'), ('Computer', 'PROPN'), ('Science', 'PROPN'), ('Engineering', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('1', 'nummod'), ('Department', 'ROOT'), ('Computer', 'compound'), ('Science', 'pobj'), ('Engineering', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[1, Department], [Department, Computer], [Computer, Science], [Science, Engineering], [Engineering,  ]]

>> Trigrams: 
[[1, Department, Computer], [Department, Computer, Science], [Computer, Science, Engineering], [Science, Engineering,  ]]

>> Noun Phrases are: 
[1 Department, Computer Science, Engineering]

>> Named Entities are: 
[('1 Department of Computer Science and Engineering', 'ORG')] 


================================ Paragraph 8 =================================

Manav Rachna International University, Faridabad-121004, India  2 Accendere Knowledge Management Services Pvt. Ltd., India  

------------------- Sentence 1 -------------------

Manav Rachna International University, Faridabad-121004, India  2 Accendere Knowledge Management Services Pvt. 


>> Tokens are: 
[Manav, Rachna, International, University, ,, Faridabad-121004, ,, India,  , 2, Accendere, Knowledge, Management, Services, Pvt, .] 

>> PoS Tags are: 
[('Manav', 'PROPN'), ('Rachna', 'PROPN'), ('International', 'PROPN'), ('University', 'PROPN'), (',', 'PUNCT'), ('Faridabad-121004', 'PROPN'), (',', 'PUNCT'), ('India', 'PROPN'), (' ', 'SPACE'), ('2', 'NUM'), ('Accendere', 'PROPN'), ('Knowledge', 'PROPN'), ('Management', 'PROPN'), ('Services', 'PROPN'), ('Pvt', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Manav', 'compound'), ('Rachna', 'compound'), ('International', 'compound'), ('University', 'ROOT'), (',', 'punct'), ('Faridabad-121004', 'appos'), (',', 'punct'), ('India', 'nmod'), (' ', 'nmod'), ('2', 'nummod'), ('Accendere', 'compound'), ('Knowledge', 'compound'), ('Management', 'compound'), ('Services', 'compound'), ('Pvt', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Manav, Rachna], [Rachna, International], [International, University], [University, ,], [,, Faridabad-121004], [Faridabad-121004, ,], [,, India], [India,  ], [ , 2], [2, Accendere], [Accendere, Knowledge], [Knowledge, Management], [Management, Services], [Services, Pvt], [Pvt, .]]

>> Trigrams: 
[[Manav, Rachna, International], [Rachna, International, University], [International, University, ,], [University, ,, Faridabad-121004], [,, Faridabad-121004, ,], [Faridabad-121004, ,, India], [,, India,  ], [India,  , 2], [ , 2, Accendere], [2, Accendere, Knowledge], [Accendere, Knowledge, Management], [Knowledge, Management, Services], [Management, Services, Pvt], [Services, Pvt, .]]

>> Noun Phrases are: 
[Manav Rachna International University, Faridabad-121004, India  2 Accendere Knowledge Management Services Pvt]

>> Named Entities are: 
[('Manav Rachna International University', 'ORG'), ('Faridabad-121004', 'ORG'), ('India', 'GPE'), ('2', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Ltd., India   


>> Tokens are: 
[Ltd., ,, India,  ] 

>> PoS Tags are: 
[('Ltd.', 'PROPN'), (',', 'PUNCT'), ('India', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Ltd.', 'ROOT'), (',', 'punct'), ('India', 'npadvmod'), (' ', 'nummod')]

>> Bigrams: 
[[Ltd., ,], [,, India], [India,  ]]

>> Trigrams: 
[[Ltd., ,, India], [,, India,  ]]

>> Noun Phrases are: 
[Ltd.]

>> Named Entities are: 
[('India', 'GPE')] 


================================ Paragraph 9 =================================

  

------------------- Sentence 1 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 10 =================================

Abstract   

------------------- Sentence 1 -------------------

Abstract    


>> Tokens are: 
[Abstract,   ] 

>> PoS Tags are: 
[('Abstract', 'ADJ'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Abstract', 'amod'), ('  ', 'ROOT')]

>> Bigrams: 
[[Abstract,   ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 11 =================================

Natural language processing (NLP) has recently gained much attention for representing and  

------------------- Sentence 1 -------------------

Natural language processing (NLP) has recently gained much attention for representing and   


>> Tokens are: 
[Natural, language, processing, (, NLP, ), recently, gained, attention, representing,  ] 

>> PoS Tags are: 
[('Natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), ('(', 'PUNCT'), ('NLP', 'PROPN'), (')', 'PUNCT'), ('recently', 'ADV'), ('gained', 'VERB'), ('attention', 'NOUN'), ('representing', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Natural', 'amod'), ('language', 'compound'), ('processing', 'nsubj'), ('(', 'punct'), ('NLP', 'appos'), (')', 'punct'), ('recently', 'advmod'), ('gained', 'ROOT'), ('attention', 'dobj'), ('representing', 'pcomp'), (' ', 'punct')]

>> Bigrams: 
[[Natural, language], [language, processing], [processing, (], [(, NLP], [NLP, )], [), recently], [recently, gained], [gained, attention], [attention, representing], [representing,  ]]

>> Trigrams: 
[[Natural, language, processing], [language, processing, (], [processing, (, NLP], [(, NLP, )], [NLP, ), recently], [), recently, gained], [recently, gained, attention], [gained, attention, representing], [attention, representing,  ]]

>> Noun Phrases are: 
[Natural language processing, NLP, much attention]

>> Named Entities are: 
[('NLP', 'ORG')] 


================================ Paragraph 12 =================================

analysing human language computationally. It has spread its applications in various fields  

------------------- Sentence 1 -------------------

analysing human language computationally. 


>> Tokens are: 
[analysing, human, language, computationally, .] 

>> PoS Tags are: 
[('analysing', 'VERB'), ('human', 'ADJ'), ('language', 'NOUN'), ('computationally', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('analysing', 'ROOT'), ('human', 'amod'), ('language', 'dobj'), ('computationally', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[analysing, human], [human, language], [language, computationally], [computationally, .]]

>> Trigrams: 
[[analysing, human, language], [human, language, computationally], [language, computationally, .]]

>> Noun Phrases are: 
[human language]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

It has spread its applications in various fields   


>> Tokens are: 
[spread, applications, fields,  ] 

>> PoS Tags are: 
[('spread', 'VERB'), ('applications', 'NOUN'), ('fields', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('spread', 'ROOT'), ('applications', 'dobj'), ('fields', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[spread, applications], [applications, fields], [fields,  ]]

>> Trigrams: 
[[spread, applications, fields], [applications, fields,  ]]

>> Noun Phrases are: 
[It, its applications, various fields]

>> Named Entities are: 
[] 


================================ Paragraph 13 =================================

such as machine translation, email spam detection, information extraction, summarization,  

------------------- Sentence 1 -------------------

such as machine translation, email spam detection, information extraction, summarization,   


>> Tokens are: 
[machine, translation, ,, email, spam, detection, ,, information, extraction, ,, summarization, ,,  ] 

>> PoS Tags are: 
[('machine', 'NOUN'), ('translation', 'NOUN'), (',', 'PUNCT'), ('email', 'NOUN'), ('spam', 'NOUN'), ('detection', 'NOUN'), (',', 'PUNCT'), ('information', 'NOUN'), ('extraction', 'NOUN'), (',', 'PUNCT'), ('summarization', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('machine', 'compound'), ('translation', 'pobj'), (',', 'punct'), ('email', 'compound'), ('spam', 'compound'), ('detection', 'conj'), (',', 'punct'), ('information', 'compound'), ('extraction', 'conj'), (',', 'punct'), ('summarization', 'conj'), (',', 'punct'), (' ', 'pobj')]

>> Bigrams: 
[[machine, translation], [translation, ,], [,, email], [email, spam], [spam, detection], [detection, ,], [,, information], [information, extraction], [extraction, ,], [,, summarization], [summarization, ,], [,,  ]]

>> Trigrams: 
[[machine, translation, ,], [translation, ,, email], [,, email, spam], [email, spam, detection], [spam, detection, ,], [detection, ,, information], [,, information, extraction], [information, extraction, ,], [extraction, ,, summarization], [,, summarization, ,], [summarization, ,,  ]]

>> Noun Phrases are: 
[machine translation, email spam detection, information extraction, summarization]

>> Named Entities are: 
[] 


================================ Paragraph 14 =================================

medical, and question answering etc. The paper distinguishes four phases by discussing  

------------------- Sentence 1 -------------------

medical, and question answering etc. 


>> Tokens are: 
[medical, ,, question, answering, etc, .] 

>> PoS Tags are: 
[('medical', 'ADJ'), (',', 'PUNCT'), ('question', 'VERB'), ('answering', 'VERB'), ('etc', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('medical', 'ROOT'), (',', 'punct'), ('question', 'conj'), ('answering', 'xcomp'), ('etc', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[medical, ,], [,, question], [question, answering], [answering, etc], [etc, .]]

>> Trigrams: 
[[medical, ,, question], [,, question, answering], [question, answering, etc], [answering, etc, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

The paper distinguishes four phases by discussing   


>> Tokens are: 
[paper, distinguishes, phases, discussing,  ] 

>> PoS Tags are: 
[('paper', 'NOUN'), ('distinguishes', 'VERB'), ('phases', 'NOUN'), ('discussing', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('paper', 'nsubj'), ('distinguishes', 'ROOT'), ('phases', 'dobj'), ('discussing', 'pcomp'), (' ', 'dobj')]

>> Bigrams: 
[[paper, distinguishes], [distinguishes, phases], [phases, discussing], [discussing,  ]]

>> Trigrams: 
[[paper, distinguishes, phases], [distinguishes, phases, discussing], [phases, discussing,  ]]

>> Noun Phrases are: 
[The paper, four phases]

>> Named Entities are: 
[('four', 'CARDINAL')] 


================================ Paragraph 15 =================================

different levels of NLP and components of Natural Language Generation (NLG) followed by  

------------------- Sentence 1 -------------------

different levels of NLP and components of Natural Language Generation (NLG) followed by   


>> Tokens are: 
[different, levels, NLP, components, Natural, Language, Generation, (, NLG, ), followed,  ] 

>> PoS Tags are: 
[('different', 'ADJ'), ('levels', 'NOUN'), ('NLP', 'PROPN'), ('components', 'NOUN'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('Generation', 'PROPN'), ('(', 'PUNCT'), ('NLG', 'PROPN'), (')', 'PUNCT'), ('followed', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('different', 'amod'), ('levels', 'nsubj'), ('NLP', 'pobj'), ('components', 'conj'), ('Natural', 'compound'), ('Language', 'compound'), ('Generation', 'pobj'), ('(', 'punct'), ('NLG', 'appos'), (')', 'punct'), ('followed', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[different, levels], [levels, NLP], [NLP, components], [components, Natural], [Natural, Language], [Language, Generation], [Generation, (], [(, NLG], [NLG, )], [), followed], [followed,  ]]

>> Trigrams: 
[[different, levels, NLP], [levels, NLP, components], [NLP, components, Natural], [components, Natural, Language], [Natural, Language, Generation], [Language, Generation, (], [Generation, (, NLG], [(, NLG, )], [NLG, ), followed], [), followed,  ]]

>> Noun Phrases are: 
[different levels, NLP, components, Natural Language Generation, NLG]

>> Named Entities are: 
[('NLP', 'ORG'), ('Natural Language Generation', 'ORG')] 


================================ Paragraph 16 =================================

presenting the history and evolution of NLP, state of the art presenting the various  

------------------- Sentence 1 -------------------

presenting the history and evolution of NLP, state of the art presenting the various   


>> Tokens are: 
[presenting, history, evolution, NLP, ,, state, art, presenting,  ] 

>> PoS Tags are: 
[('presenting', 'VERB'), ('history', 'NOUN'), ('evolution', 'NOUN'), ('NLP', 'PROPN'), (',', 'PUNCT'), ('state', 'NOUN'), ('art', 'NOUN'), ('presenting', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('presenting', 'ROOT'), ('history', 'dobj'), ('evolution', 'conj'), ('NLP', 'pobj'), (',', 'punct'), ('state', 'appos'), ('art', 'pobj'), ('presenting', 'acl'), (' ', 'dobj')]

>> Bigrams: 
[[presenting, history], [history, evolution], [evolution, NLP], [NLP, ,], [,, state], [state, art], [art, presenting], [presenting,  ]]

>> Trigrams: 
[[presenting, history, evolution], [history, evolution, NLP], [evolution, NLP, ,], [NLP, ,, state], [,, state, art], [state, art, presenting], [art, presenting,  ]]

>> Noun Phrases are: 
[the history, evolution, NLP, state, the art]

>> Named Entities are: 
[('NLP', 'ORG')] 


================================ Paragraph 17 =================================

applications of NLP and current trends and challenges.   

------------------- Sentence 1 -------------------

applications of NLP and current trends and challenges. 


>> Tokens are: 
[applications, NLP, current, trends, challenges, .] 

>> PoS Tags are: 
[('applications', 'NOUN'), ('NLP', 'NOUN'), ('current', 'ADJ'), ('trends', 'NOUN'), ('challenges', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('applications', 'ROOT'), ('NLP', 'pobj'), ('current', 'amod'), ('trends', 'conj'), ('challenges', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[applications, NLP], [NLP, current], [current, trends], [trends, challenges], [challenges, .]]

>> Trigrams: 
[[applications, NLP, current], [NLP, current, trends], [current, trends, challenges], [trends, challenges, .]]

>> Noun Phrases are: 
[applications, NLP, current trends, challenges]

>> Named Entities are: 
[('NLP', 'ORG')] 

------------------- Sentence 2 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 18 =================================

  

------------------- Sentence 1 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 19 =================================

1. Introduction  

------------------- Sentence 1 -------------------

1. 


>> Tokens are: 
[1, .] 

>> PoS Tags are: 
[('1', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[1, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Introduction   


>> Tokens are: 
[Introduction,  ] 

>> PoS Tags are: 
[('Introduction', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Introduction', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[Introduction,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Introduction]

>> Named Entities are: 
[] 


================================ Paragraph 20 =================================

Natural Language Processing (NLP) is a tract of Artificial Intelligence and Linguistics,  

------------------- Sentence 1 -------------------

Natural Language Processing (NLP) is a tract of Artificial Intelligence and Linguistics,   


>> Tokens are: 
[Natural, Language, Processing, (, NLP, ), tract, Artificial, Intelligence, Linguistics, ,,  ] 

>> PoS Tags are: 
[('Natural', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'PROPN'), ('(', 'PUNCT'), ('NLP', 'PROPN'), (')', 'PUNCT'), ('tract', 'NOUN'), ('Artificial', 'PROPN'), ('Intelligence', 'PROPN'), ('Linguistics', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Natural', 'compound'), ('Language', 'compound'), ('Processing', 'nsubj'), ('(', 'punct'), ('NLP', 'appos'), (')', 'punct'), ('tract', 'attr'), ('Artificial', 'compound'), ('Intelligence', 'pobj'), ('Linguistics', 'conj'), (',', 'punct'), (' ', 'attr')]

>> Bigrams: 
[[Natural, Language], [Language, Processing], [Processing, (], [(, NLP], [NLP, )], [), tract], [tract, Artificial], [Artificial, Intelligence], [Intelligence, Linguistics], [Linguistics, ,], [,,  ]]

>> Trigrams: 
[[Natural, Language, Processing], [Language, Processing, (], [Processing, (, NLP], [(, NLP, )], [NLP, ), tract], [), tract, Artificial], [tract, Artificial, Intelligence], [Artificial, Intelligence, Linguistics], [Intelligence, Linguistics, ,], [Linguistics, ,,  ]]

>> Noun Phrases are: 
[Natural Language Processing, NLP, a tract, Artificial Intelligence, Linguistics]

>> Named Entities are: 
[('NLP', 'ORG'), ('Artificial Intelligence and Linguistics', 'ORG')] 


================================ Paragraph 21 =================================

devoted to make computers understand the statements or words written in human languages.  

------------------- Sentence 1 -------------------

devoted to make computers understand the statements or words written in human languages. 


>> Tokens are: 
[devoted, computers, understand, statements, words, written, human, languages, .] 

>> PoS Tags are: 
[('devoted', 'ADJ'), ('computers', 'NOUN'), ('understand', 'VERB'), ('statements', 'NOUN'), ('words', 'NOUN'), ('written', 'VERB'), ('human', 'ADJ'), ('languages', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('devoted', 'ROOT'), ('computers', 'nsubj'), ('understand', 'ccomp'), ('statements', 'dobj'), ('words', 'conj'), ('written', 'acl'), ('human', 'amod'), ('languages', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[devoted, computers], [computers, understand], [understand, statements], [statements, words], [words, written], [written, human], [human, languages], [languages, .]]

>> Trigrams: 
[[devoted, computers, understand], [computers, understand, statements], [understand, statements, words], [statements, words, written], [words, written, human], [written, human, languages], [human, languages, .]]

>> Noun Phrases are: 
[computers, the statements, words, human languages]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 22 =================================

Natural language processing came into existence to ease the user’s work and to satisfy the  

------------------- Sentence 1 -------------------

Natural language processing came into existence to ease the user’s work and to satisfy the   


>> Tokens are: 
[Natural, language, processing, came, existence, ease, user, work, satisfy,  ] 

>> PoS Tags are: 
[('Natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), ('came', 'VERB'), ('existence', 'NOUN'), ('ease', 'VERB'), ('user', 'NOUN'), ('work', 'NOUN'), ('satisfy', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Natural', 'amod'), ('language', 'compound'), ('processing', 'nsubj'), ('came', 'ROOT'), ('existence', 'pobj'), ('ease', 'advcl'), ('user', 'poss'), ('work', 'dobj'), ('satisfy', 'conj'), (' ', 'dobj')]

>> Bigrams: 
[[Natural, language], [language, processing], [processing, came], [came, existence], [existence, ease], [ease, user], [user, work], [work, satisfy], [satisfy,  ]]

>> Trigrams: 
[[Natural, language, processing], [language, processing, came], [processing, came, existence], [came, existence, ease], [existence, ease, user], [ease, user, work], [user, work, satisfy], [work, satisfy,  ]]

>> Noun Phrases are: 
[Natural language processing, existence, the user’s work]

>> Named Entities are: 
[] 


================================ Paragraph 23 =================================

wish to communicate with the computer in natural language. Since all the users may not be  

------------------- Sentence 1 -------------------

wish to communicate with the computer in natural language. 


>> Tokens are: 
[wish, communicate, computer, natural, language, .] 

>> PoS Tags are: 
[('wish', 'VERB'), ('communicate', 'VERB'), ('computer', 'NOUN'), ('natural', 'ADJ'), ('language', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('wish', 'ROOT'), ('communicate', 'xcomp'), ('computer', 'pobj'), ('natural', 'amod'), ('language', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[wish, communicate], [communicate, computer], [computer, natural], [natural, language], [language, .]]

>> Trigrams: 
[[wish, communicate, computer], [communicate, computer, natural], [computer, natural, language], [natural, language, .]]

>> Noun Phrases are: 
[the computer, natural language]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Since all the users may not be   


>> Tokens are: 
[users,  ] 

>> PoS Tags are: 
[('users', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('users', 'nsubj'), (' ', 'attr')]

>> Bigrams: 
[[users,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[all the users]

>> Named Entities are: 
[] 


================================ Paragraph 24 =================================

well-versed in machine specific language, NLP caters those users who do not have enough  

------------------- Sentence 1 -------------------

well-versed in machine specific language, NLP caters those users who do not have enough   


>> Tokens are: 
[-, versed, machine, specific, language, ,, NLP, caters, users,  ] 

>> PoS Tags are: 
[('-', 'PUNCT'), ('versed', 'VERB'), ('machine', 'NOUN'), ('specific', 'ADJ'), ('language', 'NOUN'), (',', 'PUNCT'), ('NLP', 'PROPN'), ('caters', 'VERB'), ('users', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('-', 'punct'), ('versed', 'advcl'), ('machine', 'npadvmod'), ('specific', 'amod'), ('language', 'pobj'), (',', 'punct'), ('NLP', 'nsubj'), ('caters', 'ROOT'), ('users', 'dobj'), (' ', 'dobj')]

>> Bigrams: 
[[-, versed], [versed, machine], [machine, specific], [specific, language], [language, ,], [,, NLP], [NLP, caters], [caters, users], [users,  ]]

>> Trigrams: 
[[-, versed, machine], [versed, machine, specific], [machine, specific, language], [specific, language, ,], [language, ,, NLP], [,, NLP, caters], [NLP, caters, users], [caters, users,  ]]

>> Noun Phrases are: 
[machine specific language, NLP, those users, who]

>> Named Entities are: 
[('NLP', 'ORG')] 


================================ Paragraph 25 =================================

time to learn new languages or get perfection in it.   

------------------- Sentence 1 -------------------

time to learn new languages or get perfection in it. 


>> Tokens are: 
[time, learn, new, languages, perfection, .] 

>> PoS Tags are: 
[('time', 'NOUN'), ('learn', 'VERB'), ('new', 'ADJ'), ('languages', 'NOUN'), ('perfection', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('time', 'ROOT'), ('learn', 'relcl'), ('new', 'amod'), ('languages', 'dobj'), ('perfection', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[time, learn], [learn, new], [new, languages], [languages, perfection], [perfection, .]]

>> Trigrams: 
[[time, learn, new], [learn, new, languages], [new, languages, perfection], [languages, perfection, .]]

>> Noun Phrases are: 
[time, new languages, perfection, it]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 26 =================================

A language can be defined as a set of rules or set of symbol. Symbol are combined and used  

------------------- Sentence 1 -------------------

A language can be defined as a set of rules or set of symbol. 


>> Tokens are: 
[language, defined, set, rules, set, symbol, .] 

>> PoS Tags are: 
[('language', 'NOUN'), ('defined', 'VERB'), ('set', 'NOUN'), ('rules', 'NOUN'), ('set', 'VERB'), ('symbol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('language', 'nsubjpass'), ('defined', 'ROOT'), ('set', 'pobj'), ('rules', 'pobj'), ('set', 'conj'), ('symbol', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[language, defined], [defined, set], [set, rules], [rules, set], [set, symbol], [symbol, .]]

>> Trigrams: 
[[language, defined, set], [defined, set, rules], [set, rules, set], [rules, set, symbol], [set, symbol, .]]

>> Noun Phrases are: 
[A language, a set, rules, symbol]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Symbol are combined and used   


>> Tokens are: 
[Symbol, combined,  ] 

>> PoS Tags are: 
[('Symbol', 'NOUN'), ('combined', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Symbol', 'nsubjpass'), ('combined', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[Symbol, combined], [combined,  ]]

>> Trigrams: 
[[Symbol, combined,  ]]

>> Noun Phrases are: 
[Symbol]

>> Named Entities are: 
[] 


================================ Paragraph 27 =================================

for conveying information or broadcasting the information. Symbols are tyrannized by the  

------------------- Sentence 1 -------------------

for conveying information or broadcasting the information. 


>> Tokens are: 
[conveying, information, broadcasting, information, .] 

>> PoS Tags are: 
[('conveying', 'VERB'), ('information', 'NOUN'), ('broadcasting', 'VERB'), ('information', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('conveying', 'pcomp'), ('information', 'dobj'), ('broadcasting', 'conj'), ('information', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[conveying, information], [information, broadcasting], [broadcasting, information], [information, .]]

>> Trigrams: 
[[conveying, information, broadcasting], [information, broadcasting, information], [broadcasting, information, .]]

>> Noun Phrases are: 
[information, the information]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Symbols are tyrannized by the   


>> Tokens are: 
[Symbols, tyrannized,  ] 

>> PoS Tags are: 
[('Symbols', 'NOUN'), ('tyrannized', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Symbols', 'nsubjpass'), ('tyrannized', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[Symbols, tyrannized], [tyrannized,  ]]

>> Trigrams: 
[[Symbols, tyrannized,  ]]

>> Noun Phrases are: 
[Symbols]

>> Named Entities are: 
[] 


================================ Paragraph 28 =================================

Rules. Natural Language Processing basically can be classified into two parts i.e.- Natural  

------------------- Sentence 1 -------------------

Rules. 


>> Tokens are: 
[Rules, .] 

>> PoS Tags are: 
[('Rules', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Rules', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Rules, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Rules]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Natural Language Processing basically can be classified into two parts i.e.- Natural   


>> Tokens are: 
[Natural, Language, Processing, basically, classified, parts, i.e.-, Natural,  ] 

>> PoS Tags are: 
[('Natural', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'PROPN'), ('basically', 'ADV'), ('classified', 'VERB'), ('parts', 'NOUN'), ('i.e.-', 'PROPN'), ('Natural', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Natural', 'compound'), ('Language', 'compound'), ('Processing', 'nsubjpass'), ('basically', 'advmod'), ('classified', 'ROOT'), ('parts', 'pobj'), ('i.e.-', 'advcl'), ('Natural', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[Natural, Language], [Language, Processing], [Processing, basically], [basically, classified], [classified, parts], [parts, i.e.-], [i.e.-, Natural], [Natural,  ]]

>> Trigrams: 
[[Natural, Language, Processing], [Language, Processing, basically], [Processing, basically, classified], [basically, classified, parts], [classified, parts, i.e.-], [parts, i.e.-, Natural], [i.e.-, Natural,  ]]

>> Noun Phrases are: 
[Natural Language Processing, two parts, Natural]

>> Named Entities are: 
[('two', 'CARDINAL')] 


================================ Paragraph 29 =================================

Language Understanding and Natural Language Generation which evolves the task to  

------------------- Sentence 1 -------------------

Language Understanding and Natural Language Generation which evolves the task to   


>> Tokens are: 
[Language, Understanding, Natural, Language, Generation, evolves, task,  ] 

>> PoS Tags are: 
[('Language', 'PROPN'), ('Understanding', 'PROPN'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('Generation', 'PROPN'), ('evolves', 'VERB'), ('task', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Language', 'compound'), ('Understanding', 'nmod'), ('Natural', 'compound'), ('Language', 'conj'), ('Generation', 'ROOT'), ('evolves', 'relcl'), ('task', 'dobj'), (' ', 'pobj')]

>> Bigrams: 
[[Language, Understanding], [Understanding, Natural], [Natural, Language], [Language, Generation], [Generation, evolves], [evolves, task], [task,  ]]

>> Trigrams: 
[[Language, Understanding, Natural], [Understanding, Natural, Language], [Natural, Language, Generation], [Language, Generation, evolves], [Generation, evolves, task], [evolves, task,  ]]

>> Noun Phrases are: 
[Language Understanding and Natural Language Generation, the task]

>> Named Entities are: 
[('Natural Language Generation', 'WORK_OF_ART')] 


================================ Paragraph 30 =================================

understand and generate the text (Figure 1).  

------------------- Sentence 1 -------------------

understand and generate the text (Figure 1). 


>> Tokens are: 
[understand, generate, text, (, Figure, 1, ), .] 

>> PoS Tags are: 
[('understand', 'VERB'), ('generate', 'VERB'), ('text', 'NOUN'), ('(', 'PUNCT'), ('Figure', 'NOUN'), ('1', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('understand', 'ROOT'), ('generate', 'conj'), ('text', 'dobj'), ('(', 'punct'), ('Figure', 'appos'), ('1', 'nummod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[understand, generate], [generate, text], [text, (], [(, Figure], [Figure, 1], [1, )], [), .]]

>> Trigrams: 
[[understand, generate, text], [generate, text, (], [text, (, Figure], [(, Figure, 1], [Figure, 1, )], [1, ), .]]

>> Noun Phrases are: 
[the text, (Figure]

>> Named Entities are: 
[('1', 'CARDINAL')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 31 =================================

  

------------------- Sentence 1 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 32 =================================

                                      Figure 1. Broad Classification of NLP  

------------------- Sentence 1 -------------------

                                      Figure 1. 


>> Tokens are: 
[                                      , Figure, 1, .] 

>> PoS Tags are: 
[('                                      ', 'SPACE'), ('Figure', 'NOUN'), ('1', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('                                      ', 'nummod'), ('Figure', 'ROOT'), ('1', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[                                      , Figure], [Figure, 1], [1, .]]

>> Trigrams: 
[[                                      , Figure, 1], [Figure, 1, .]]

>> Noun Phrases are: 
[                                      Figure]

>> Named Entities are: 
[('1', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Broad Classification of NLP   


>> Tokens are: 
[Broad, Classification, NLP,  ] 

>> PoS Tags are: 
[('Broad', 'PROPN'), ('Classification', 'PROPN'), ('NLP', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Broad', 'compound'), ('Classification', 'ROOT'), ('NLP', 'pobj'), (' ', 'nummod')]

>> Bigrams: 
[[Broad, Classification], [Classification, NLP], [NLP,  ]]

>> Trigrams: 
[[Broad, Classification, NLP], [Classification, NLP,  ]]

>> Noun Phrases are: 
[Broad Classification, NLP]

>> Named Entities are: 
[('Broad Classification', 'ORG'), ('NLP', 'ORG')] 


================================ Paragraph 33 =================================

Linguistics is the science of language which includes Phonology that refers to sound,  

------------------- Sentence 1 -------------------

Linguistics is the science of language which includes Phonology that refers to sound,   


>> Tokens are: 
[Linguistics, science, language, includes, Phonology, refers, sound, ,,  ] 

>> PoS Tags are: 
[('Linguistics', 'PROPN'), ('science', 'NOUN'), ('language', 'NOUN'), ('includes', 'VERB'), ('Phonology', 'PROPN'), ('refers', 'VERB'), ('sound', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Linguistics', 'nsubj'), ('science', 'attr'), ('language', 'pobj'), ('includes', 'relcl'), ('Phonology', 'dobj'), ('refers', 'relcl'), ('sound', 'xcomp'), (',', 'punct'), (' ', 'attr')]

>> Bigrams: 
[[Linguistics, science], [science, language], [language, includes], [includes, Phonology], [Phonology, refers], [refers, sound], [sound, ,], [,,  ]]

>> Trigrams: 
[[Linguistics, science, language], [science, language, includes], [language, includes, Phonology], [includes, Phonology, refers], [Phonology, refers, sound], [refers, sound, ,], [sound, ,,  ]]

>> Noun Phrases are: 
[Linguistics, the science, language, Phonology]

>> Named Entities are: 
[] 


================================ Paragraph 34 =================================

Morphology word formation, Syntax sentence structure, Semantics syntax and Pragmatics  

------------------- Sentence 1 -------------------

Morphology word formation, Syntax sentence structure, Semantics syntax and Pragmatics   


>> Tokens are: 
[Morphology, word, formation, ,, Syntax, sentence, structure, ,, Semantics, syntax, Pragmatics,  ] 

>> PoS Tags are: 
[('Morphology', 'NOUN'), ('word', 'NOUN'), ('formation', 'NOUN'), (',', 'PUNCT'), ('Syntax', 'PROPN'), ('sentence', 'NOUN'), ('structure', 'NOUN'), (',', 'PUNCT'), ('Semantics', 'PROPN'), ('syntax', 'NOUN'), ('Pragmatics', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Morphology', 'compound'), ('word', 'compound'), ('formation', 'ROOT'), (',', 'punct'), ('Syntax', 'compound'), ('sentence', 'compound'), ('structure', 'appos'), (',', 'punct'), ('Semantics', 'compound'), ('syntax', 'conj'), ('Pragmatics', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[Morphology, word], [word, formation], [formation, ,], [,, Syntax], [Syntax, sentence], [sentence, structure], [structure, ,], [,, Semantics], [Semantics, syntax], [syntax, Pragmatics], [Pragmatics,  ]]

>> Trigrams: 
[[Morphology, word, formation], [word, formation, ,], [formation, ,, Syntax], [,, Syntax, sentence], [Syntax, sentence, structure], [sentence, structure, ,], [structure, ,, Semantics], [,, Semantics, syntax], [Semantics, syntax, Pragmatics], [syntax, Pragmatics,  ]]

>> Noun Phrases are: 
[Morphology word formation, Syntax sentence structure, Semantics syntax, Pragmatics]

>> Named Entities are: 
[('Syntax', 'ORG'), ('Semantics', 'ORG')] 


================================ Paragraph 35 =================================

which refers to understanding.  

------------------- Sentence 1 -------------------

which refers to understanding. 


>> Tokens are: 
[refers, understanding, .] 

>> PoS Tags are: 
[('refers', 'VERB'), ('understanding', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('refers', 'ROOT'), ('understanding', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[refers, understanding], [understanding, .]]

>> Trigrams: 
[[refers, understanding, .]]

>> Noun Phrases are: 
[understanding]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 36 =================================

Noah Chomsky, one of the first linguists of twelfth century that started syntactic theories,  

------------------- Sentence 1 -------------------

Noah Chomsky, one of the first linguists of twelfth century that started syntactic theories,   


>> Tokens are: 
[Noah, Chomsky, ,, linguists, twelfth, century, started, syntactic, theories, ,,  ] 

>> PoS Tags are: 
[('Noah', 'PROPN'), ('Chomsky', 'PROPN'), (',', 'PUNCT'), ('linguists', 'NOUN'), ('twelfth', 'ADJ'), ('century', 'NOUN'), ('started', 'VERB'), ('syntactic', 'ADJ'), ('theories', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Noah', 'compound'), ('Chomsky', 'ROOT'), (',', 'punct'), ('linguists', 'pobj'), ('twelfth', 'amod'), ('century', 'pobj'), ('started', 'relcl'), ('syntactic', 'amod'), ('theories', 'dobj'), (',', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Noah, Chomsky], [Chomsky, ,], [,, linguists], [linguists, twelfth], [twelfth, century], [century, started], [started, syntactic], [syntactic, theories], [theories, ,], [,,  ]]

>> Trigrams: 
[[Noah, Chomsky, ,], [Chomsky, ,, linguists], [,, linguists, twelfth], [linguists, twelfth, century], [twelfth, century, started], [century, started, syntactic], [started, syntactic, theories], [syntactic, theories, ,], [theories, ,,  ]]

>> Noun Phrases are: 
[Noah Chomsky, the first linguists, twelfth century, syntactic theories]

>> Named Entities are: 
[('Noah Chomsky', 'PERSON'), ('one', 'CARDINAL'), ('first', 'ORDINAL'), ('twelfth century', 'DATE')] 


================================ Paragraph 37 =================================

marked a unique position in the field of theoretical linguistics because he revolutionised the  

------------------- Sentence 1 -------------------

marked a unique position in the field of theoretical linguistics because he revolutionised the   


>> Tokens are: 
[marked, unique, position, field, theoretical, linguistics, revolutionised,  ] 

>> PoS Tags are: 
[('marked', 'VERB'), ('unique', 'ADJ'), ('position', 'NOUN'), ('field', 'NOUN'), ('theoretical', 'ADJ'), ('linguistics', 'NOUN'), ('revolutionised', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('marked', 'ROOT'), ('unique', 'amod'), ('position', 'dobj'), ('field', 'pobj'), ('theoretical', 'amod'), ('linguistics', 'pobj'), ('revolutionised', 'advcl'), (' ', 'dobj')]

>> Bigrams: 
[[marked, unique], [unique, position], [position, field], [field, theoretical], [theoretical, linguistics], [linguistics, revolutionised], [revolutionised,  ]]

>> Trigrams: 
[[marked, unique, position], [unique, position, field], [position, field, theoretical], [field, theoretical, linguistics], [theoretical, linguistics, revolutionised], [linguistics, revolutionised,  ]]

>> Noun Phrases are: 
[a unique position, the field, theoretical linguistics, he]

>> Named Entities are: 
[] 


================================ Paragraph 38 =================================

area of syntax (Chomsky, 1965) [1]. Which can be broadly categorized into two levels Higher  

------------------- Sentence 1 -------------------

area of syntax (Chomsky, 1965) 


>> Tokens are: 
[area, syntax, (, Chomsky, ,, 1965, )] 

>> PoS Tags are: 
[('area', 'NOUN'), ('syntax', 'NOUN'), ('(', 'PUNCT'), ('Chomsky', 'PROPN'), (',', 'PUNCT'), ('1965', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('area', 'ROOT'), ('syntax', 'pobj'), ('(', 'punct'), ('Chomsky', 'appos'), (',', 'punct'), ('1965', 'npadvmod'), (')', 'punct')]

>> Bigrams: 
[[area, syntax], [syntax, (], [(, Chomsky], [Chomsky, ,], [,, 1965], [1965, )]]

>> Trigrams: 
[[area, syntax, (], [syntax, (, Chomsky], [(, Chomsky, ,], [Chomsky, ,, 1965], [,, 1965, )]]

>> Noun Phrases are: 
[area, syntax, Chomsky]

>> Named Entities are: 
[('Chomsky', 'ORG'), ('1965', 'DATE')] 

------------------- Sentence 2 -------------------

[1]. 


>> Tokens are: 
[[, 1, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('1', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('1', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 1], [1, ]], [], .]]

>> Trigrams: 
[[[, 1, ]], [1, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Which can be broadly categorized into two levels Higher   


>> Tokens are: 
[broadly, categorized, levels, Higher,  ] 

>> PoS Tags are: 
[('broadly', 'ADV'), ('categorized', 'VERB'), ('levels', 'NOUN'), ('Higher', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('broadly', 'advmod'), ('categorized', 'ROOT'), ('levels', 'pobj'), ('Higher', 'amod'), (' ', 'punct')]

>> Bigrams: 
[[broadly, categorized], [categorized, levels], [levels, Higher], [Higher,  ]]

>> Trigrams: 
[[broadly, categorized, levels], [categorized, levels, Higher], [levels, Higher,  ]]

>> Noun Phrases are: 
[two levels]

>> Named Entities are: 
[('two', 'CARDINAL')] 


================================ Paragraph 39 =================================

Level which include speech recognition and Lower Level which corresponds to natural  

------------------- Sentence 1 -------------------

Level which include speech recognition and Lower Level which corresponds to natural   


>> Tokens are: 
[Level, include, speech, recognition, Lower, Level, corresponds, natural,  ] 

>> PoS Tags are: 
[('Level', 'NOUN'), ('include', 'VERB'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('Lower', 'PROPN'), ('Level', 'PROPN'), ('corresponds', 'VERB'), ('natural', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Level', 'ROOT'), ('include', 'relcl'), ('speech', 'compound'), ('recognition', 'dobj'), ('Lower', 'compound'), ('Level', 'conj'), ('corresponds', 'relcl'), ('natural', 'amod'), (' ', 'pobj')]

>> Bigrams: 
[[Level, include], [include, speech], [speech, recognition], [recognition, Lower], [Lower, Level], [Level, corresponds], [corresponds, natural], [natural,  ]]

>> Trigrams: 
[[Level, include, speech], [include, speech, recognition], [speech, recognition, Lower], [recognition, Lower, Level], [Lower, Level, corresponds], [Level, corresponds, natural], [corresponds, natural,  ]]

>> Noun Phrases are: 
[Level, speech recognition, Lower Level]

>> Named Entities are: 
[('Lower Level', 'LOC')] 


================================ Paragraph 40 =================================

language. Few of the researched tasks of NLP are Automatic Summarization, Co-Reference  

------------------- Sentence 1 -------------------

language. 


>> Tokens are: 
[language, .] 

>> PoS Tags are: 
[('language', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('language', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[language, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[language]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Few of the researched tasks of NLP are Automatic Summarization, Co-Reference   


>> Tokens are: 
[researched, tasks, NLP, Automatic, Summarization, ,, Co, -, Reference,  ] 

>> PoS Tags are: 
[('researched', 'VERB'), ('tasks', 'NOUN'), ('NLP', 'PROPN'), ('Automatic', 'ADJ'), ('Summarization', 'PROPN'), (',', 'PUNCT'), ('Co', 'PROPN'), ('-', 'PROPN'), ('Reference', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('researched', 'amod'), ('tasks', 'pobj'), ('NLP', 'pobj'), ('Automatic', 'amod'), ('Summarization', 'attr'), (',', 'punct'), ('Co', 'appos'), ('-', 'appos'), ('Reference', 'appos'), (' ', 'nummod')]

>> Bigrams: 
[[researched, tasks], [tasks, NLP], [NLP, Automatic], [Automatic, Summarization], [Summarization, ,], [,, Co], [Co, -], [-, Reference], [Reference,  ]]

>> Trigrams: 
[[researched, tasks, NLP], [tasks, NLP, Automatic], [NLP, Automatic, Summarization], [Automatic, Summarization, ,], [Summarization, ,, Co], [,, Co, -], [Co, -, Reference], [-, Reference,  ]]

>> Noun Phrases are: 
[the researched tasks, NLP, Automatic Summarization, Co, -, Reference]

>> Named Entities are: 
[('NLP', 'ORG'), ('Automatic Summarization', 'ORG')] 


================================ Paragraph 41 =================================

Resolution, Discourse Analysis, Machine Translation, Morphological Segmentation, Named  

------------------- Sentence 1 -------------------

Resolution, Discourse Analysis, Machine Translation, Morphological Segmentation, Named   


>> Tokens are: 
[Resolution, ,, Discourse, Analysis, ,, Machine, Translation, ,, Morphological, Segmentation, ,, Named,  ] 

>> PoS Tags are: 
[('Resolution', 'NOUN'), (',', 'PUNCT'), ('Discourse', 'PROPN'), ('Analysis', 'PROPN'), (',', 'PUNCT'), ('Machine', 'PROPN'), ('Translation', 'PROPN'), (',', 'PUNCT'), ('Morphological', 'PROPN'), ('Segmentation', 'PROPN'), (',', 'PUNCT'), ('Named', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Resolution', 'ROOT'), (',', 'punct'), ('Discourse', 'compound'), ('Analysis', 'conj'), (',', 'punct'), ('Machine', 'compound'), ('Translation', 'conj'), (',', 'punct'), ('Morphological', 'compound'), ('Segmentation', 'conj'), (',', 'punct'), ('Named', 'acl'), (' ', 'oprd')]

>> Bigrams: 
[[Resolution, ,], [,, Discourse], [Discourse, Analysis], [Analysis, ,], [,, Machine], [Machine, Translation], [Translation, ,], [,, Morphological], [Morphological, Segmentation], [Segmentation, ,], [,, Named], [Named,  ]]

>> Trigrams: 
[[Resolution, ,, Discourse], [,, Discourse, Analysis], [Discourse, Analysis, ,], [Analysis, ,, Machine], [,, Machine, Translation], [Machine, Translation, ,], [Translation, ,, Morphological], [,, Morphological, Segmentation], [Morphological, Segmentation, ,], [Segmentation, ,, Named], [,, Named,  ]]

>> Noun Phrases are: 
[Resolution, Discourse Analysis, Machine Translation, Morphological Segmentation]

>> Named Entities are: 
[('Machine Translation', 'ORG')] 


================================ Paragraph 42 =================================

Entity Recognition, Optical Character Recognition, Part Of Speech Tagging etc. Some of  

------------------- Sentence 1 -------------------

Entity Recognition, Optical Character Recognition, Part Of Speech Tagging etc. 


>> Tokens are: 
[Entity, Recognition, ,, Optical, Character, Recognition, ,, Speech, Tagging, etc, .] 

>> PoS Tags are: 
[('Entity', 'PROPN'), ('Recognition', 'PROPN'), (',', 'PUNCT'), ('Optical', 'PROPN'), ('Character', 'PROPN'), ('Recognition', 'PROPN'), (',', 'PUNCT'), ('Speech', 'PROPN'), ('Tagging', 'PROPN'), ('etc', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Entity', 'compound'), ('Recognition', 'ROOT'), (',', 'punct'), ('Optical', 'compound'), ('Character', 'compound'), ('Recognition', 'appos'), (',', 'punct'), ('Speech', 'compound'), ('Tagging', 'pobj'), ('etc', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Entity, Recognition], [Recognition, ,], [,, Optical], [Optical, Character], [Character, Recognition], [Recognition, ,], [,, Speech], [Speech, Tagging], [Tagging, etc], [etc, .]]

>> Trigrams: 
[[Entity, Recognition, ,], [Recognition, ,, Optical], [,, Optical, Character], [Optical, Character, Recognition], [Character, Recognition, ,], [Recognition, ,, Speech], [,, Speech, Tagging], [Speech, Tagging, etc], [Tagging, etc, .]]

>> Noun Phrases are: 
[Entity Recognition, Optical Character Recognition, Part, Speech Tagging]

>> Named Entities are: 
[('Speech Tagging', 'PERSON')] 

------------------- Sentence 2 -------------------

Some of   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'pobj')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 43 =================================

these tasks have direct real world applications such as Machine translation, Named entity  

------------------- Sentence 1 -------------------

these tasks have direct real world applications such as Machine translation, Named entity   


>> Tokens are: 
[tasks, direct, real, world, applications, Machine, translation, ,, Named, entity,  ] 

>> PoS Tags are: 
[('tasks', 'NOUN'), ('direct', 'ADJ'), ('real', 'ADJ'), ('world', 'NOUN'), ('applications', 'NOUN'), ('Machine', 'NOUN'), ('translation', 'NOUN'), (',', 'PUNCT'), ('Named', 'VERB'), ('entity', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('tasks', 'nsubj'), ('direct', 'amod'), ('real', 'amod'), ('world', 'compound'), ('applications', 'dobj'), ('Machine', 'compound'), ('translation', 'pobj'), (',', 'punct'), ('Named', 'amod'), ('entity', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[tasks, direct], [direct, real], [real, world], [world, applications], [applications, Machine], [Machine, translation], [translation, ,], [,, Named], [Named, entity], [entity,  ]]

>> Trigrams: 
[[tasks, direct, real], [direct, real, world], [real, world, applications], [world, applications, Machine], [applications, Machine, translation], [Machine, translation, ,], [translation, ,, Named], [,, Named, entity], [Named, entity,  ]]

>> Noun Phrases are: 
[these tasks, direct real world applications, Machine translation, Named entity]

>> Named Entities are: 
[('Machine', 'PERSON')] 


================================ Paragraph 44 =================================

recognition, Optical character recognition etc. Automatic summarization produces an  

------------------- Sentence 1 -------------------

recognition, Optical character recognition etc. 


>> Tokens are: 
[recognition, ,, Optical, character, recognition, etc, .] 

>> PoS Tags are: 
[('recognition', 'NOUN'), (',', 'PUNCT'), ('Optical', 'ADJ'), ('character', 'NOUN'), ('recognition', 'NOUN'), ('etc', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('recognition', 'ROOT'), (',', 'punct'), ('Optical', 'amod'), ('character', 'compound'), ('recognition', 'appos'), ('etc', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[recognition, ,], [,, Optical], [Optical, character], [character, recognition], [recognition, etc], [etc, .]]

>> Trigrams: 
[[recognition, ,, Optical], [,, Optical, character], [Optical, character, recognition], [character, recognition, etc], [recognition, etc, .]]

>> Noun Phrases are: 
[recognition, Optical character recognition]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Automatic summarization produces an   


>> Tokens are: 
[Automatic, summarization, produces,  ] 

>> PoS Tags are: 
[('Automatic', 'ADJ'), ('summarization', 'NOUN'), ('produces', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Automatic', 'amod'), ('summarization', 'nsubj'), ('produces', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[Automatic, summarization], [summarization, produces], [produces,  ]]

>> Trigrams: 
[[Automatic, summarization, produces], [summarization, produces,  ]]

>> Noun Phrases are: 
[Automatic summarization]

>> Named Entities are: 
[] 


================================ Paragraph 45 =================================

understandable summary of a set of text and provides summaries or detailed information of  

------------------- Sentence 1 -------------------

understandable summary of a set of text and provides summaries or detailed information of   


>> Tokens are: 
[understandable, summary, set, text, provides, summaries, detailed, information,  ] 

>> PoS Tags are: 
[('understandable', 'ADJ'), ('summary', 'NOUN'), ('set', 'NOUN'), ('text', 'NOUN'), ('provides', 'VERB'), ('summaries', 'NOUN'), ('detailed', 'ADJ'), ('information', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('understandable', 'amod'), ('summary', 'ROOT'), ('set', 'pobj'), ('text', 'pobj'), ('provides', 'conj'), ('summaries', 'dobj'), ('detailed', 'amod'), ('information', 'conj'), (' ', 'pobj')]

>> Bigrams: 
[[understandable, summary], [summary, set], [set, text], [text, provides], [provides, summaries], [summaries, detailed], [detailed, information], [information,  ]]

>> Trigrams: 
[[understandable, summary, set], [summary, set, text], [set, text, provides], [text, provides, summaries], [provides, summaries, detailed], [summaries, detailed, information], [detailed, information,  ]]

>> Noun Phrases are: 
[understandable summary, a set, text, summaries, detailed information]

>> Named Entities are: 
[] 


================================ Paragraph 46 =================================

text of a known type. Co-reference resolution it refers to a sentence or larger set of text that  

------------------- Sentence 1 -------------------

text of a known type. 


>> Tokens are: 
[text, known, type, .] 

>> PoS Tags are: 
[('text', 'NOUN'), ('known', 'VERB'), ('type', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('text', 'ROOT'), ('known', 'amod'), ('type', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[text, known], [known, type], [type, .]]

>> Trigrams: 
[[text, known, type], [known, type, .]]

>> Noun Phrases are: 
[text, a known type]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Co-reference resolution it refers to a sentence or larger set of text 


>> Tokens are: 
[Co, -, reference, resolution, refers, sentence, larger, set, text] 

>> PoS Tags are: 
[('Co', 'NOUN'), ('-', 'NOUN'), ('reference', 'NOUN'), ('resolution', 'NOUN'), ('refers', 'VERB'), ('sentence', 'NOUN'), ('larger', 'ADJ'), ('set', 'NOUN'), ('text', 'NOUN')] 

>> Dependency Tags are: 
[('Co', 'compound'), ('-', 'compound'), ('reference', 'compound'), ('resolution', 'ROOT'), ('refers', 'relcl'), ('sentence', 'pobj'), ('larger', 'amod'), ('set', 'conj'), ('text', 'pobj')]

>> Bigrams: 
[[Co, -], [-, reference], [reference, resolution], [resolution, refers], [refers, sentence], [sentence, larger], [larger, set], [set, text]]

>> Trigrams: 
[[Co, -, reference], [-, reference, resolution], [reference, resolution, refers], [resolution, refers, sentence], [refers, sentence, larger], [sentence, larger, set], [larger, set, text]]

>> Noun Phrases are: 
[Co-reference resolution, it, a sentence, larger set, text]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

that   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'punct')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 47 =================================

determines which word refer to the same object. Discourse analysis refers to the task of  

------------------- Sentence 1 -------------------

determines which word refer to the same object. 


>> Tokens are: 
[determines, word, refer, object, .] 

>> PoS Tags are: 
[('determines', 'NOUN'), ('word', 'NOUN'), ('refer', 'VERB'), ('object', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('determines', 'ROOT'), ('word', 'nsubj'), ('refer', 'ccomp'), ('object', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[determines, word], [word, refer], [refer, object], [object, .]]

>> Trigrams: 
[[determines, word, refer], [word, refer, object], [refer, object, .]]

>> Noun Phrases are: 
[determines, which word, the same object]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Discourse analysis refers to the task of   


>> Tokens are: 
[Discourse, analysis, refers, task,  ] 

>> PoS Tags are: 
[('Discourse', 'NOUN'), ('analysis', 'NOUN'), ('refers', 'VERB'), ('task', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Discourse', 'compound'), ('analysis', 'nsubj'), ('refers', 'ROOT'), ('task', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Discourse, analysis], [analysis, refers], [refers, task], [task,  ]]

>> Trigrams: 
[[Discourse, analysis, refers], [analysis, refers, task], [refers, task,  ]]

>> Noun Phrases are: 
[Discourse analysis, the task]

>> Named Entities are: 
[] 


================================ Paragraph 48 =================================

identifying the discourse structure of connected text. Machine translation which refers to  

------------------- Sentence 1 -------------------

identifying the discourse structure of connected text. 


>> Tokens are: 
[identifying, discourse, structure, connected, text, .] 

>> PoS Tags are: 
[('identifying', 'VERB'), ('discourse', 'NOUN'), ('structure', 'NOUN'), ('connected', 'ADJ'), ('text', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('identifying', 'ROOT'), ('discourse', 'compound'), ('structure', 'dobj'), ('connected', 'amod'), ('text', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[identifying, discourse], [discourse, structure], [structure, connected], [connected, text], [text, .]]

>> Trigrams: 
[[identifying, discourse, structure], [discourse, structure, connected], [structure, connected, text], [connected, text, .]]

>> Noun Phrases are: 
[the discourse structure, connected text]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Machine translation which refers to   


>> Tokens are: 
[Machine, translation, refers,  ] 

>> PoS Tags are: 
[('Machine', 'NOUN'), ('translation', 'NOUN'), ('refers', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Machine', 'compound'), ('translation', 'ROOT'), ('refers', 'relcl'), (' ', 'pobj')]

>> Bigrams: 
[[Machine, translation], [translation, refers], [refers,  ]]

>> Trigrams: 
[[Machine, translation, refers], [translation, refers,  ]]

>> Noun Phrases are: 
[Machine translation]

>> Named Entities are: 
[] 


================================ Paragraph 49 =================================

automatic translation of text from one human language to another. Morphological  

------------------- Sentence 1 -------------------

automatic translation of text from one human language to another. 


>> Tokens are: 
[automatic, translation, text, human, language, .] 

>> PoS Tags are: 
[('automatic', 'ADJ'), ('translation', 'NOUN'), ('text', 'NOUN'), ('human', 'ADJ'), ('language', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('automatic', 'amod'), ('translation', 'ROOT'), ('text', 'pobj'), ('human', 'amod'), ('language', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[automatic, translation], [translation, text], [text, human], [human, language], [language, .]]

>> Trigrams: 
[[automatic, translation, text], [translation, text, human], [text, human, language], [human, language, .]]

>> Noun Phrases are: 
[automatic translation, text, one human language]

>> Named Entities are: 
[('one', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Morphological   


>> Tokens are: 
[Morphological,  ] 

>> PoS Tags are: 
[('Morphological', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Morphological', 'amod'), (' ', 'ROOT')]

>> Bigrams: 
[[Morphological,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 50 =================================

segmentation which refers to separate word into individual morphemes and identify the class  

------------------- Sentence 1 -------------------

segmentation which refers to separate word into individual morphemes and identify the class   


>> Tokens are: 
[segmentation, refers, separate, word, individual, morphemes, identify, class,  ] 

>> PoS Tags are: 
[('segmentation', 'NOUN'), ('refers', 'VERB'), ('separate', 'ADJ'), ('word', 'NOUN'), ('individual', 'ADJ'), ('morphemes', 'NOUN'), ('identify', 'VERB'), ('class', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('segmentation', 'ROOT'), ('refers', 'relcl'), ('separate', 'amod'), ('word', 'pobj'), ('individual', 'amod'), ('morphemes', 'pobj'), ('identify', 'conj'), ('class', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[segmentation, refers], [refers, separate], [separate, word], [word, individual], [individual, morphemes], [morphemes, identify], [identify, class], [class,  ]]

>> Trigrams: 
[[segmentation, refers, separate], [refers, separate, word], [separate, word, individual], [word, individual, morphemes], [individual, morphemes, identify], [morphemes, identify, class], [identify, class,  ]]

>> Noun Phrases are: 
[segmentation, separate word, individual morphemes, the class]

>> Named Entities are: 
[] 


================================ Paragraph 51 =================================

of the morphemes. Named entity recognition (NER) it describes a stream of text, determine  

------------------- Sentence 1 -------------------

of the morphemes. 


>> Tokens are: 
[morphemes, .] 

>> PoS Tags are: 
[('morphemes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('morphemes', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[morphemes, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[the morphemes]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Named entity recognition (NER) it describes a stream of text, determine   


>> Tokens are: 
[Named, entity, recognition, (, NER, ), describes, stream, text, ,, determine,  ] 

>> PoS Tags are: 
[('Named', 'VERB'), ('entity', 'NOUN'), ('recognition', 'NOUN'), ('(', 'PUNCT'), ('NER', 'PROPN'), (')', 'PUNCT'), ('describes', 'VERB'), ('stream', 'NOUN'), ('text', 'NOUN'), (',', 'PUNCT'), ('determine', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Named', 'advcl'), ('entity', 'compound'), ('recognition', 'oprd'), ('(', 'punct'), ('NER', 'npadvmod'), (')', 'punct'), ('describes', 'ROOT'), ('stream', 'dobj'), ('text', 'pobj'), (',', 'punct'), ('determine', 'conj'), (' ', 'dobj')]

>> Bigrams: 
[[Named, entity], [entity, recognition], [recognition, (], [(, NER], [NER, )], [), describes], [describes, stream], [stream, text], [text, ,], [,, determine], [determine,  ]]

>> Trigrams: 
[[Named, entity, recognition], [entity, recognition, (], [recognition, (, NER], [(, NER, )], [NER, ), describes], [), describes, stream], [describes, stream, text], [stream, text, ,], [text, ,, determine], [,, determine,  ]]

>> Noun Phrases are: 
[entity recognition, it, a stream, text]

>> Named Entities are: 
[] 


================================ Paragraph 52 =================================

which items in the text relates to proper names. Optical character recognition (OCR) it gives  

------------------- Sentence 1 -------------------

which items in the text relates to proper names. 


>> Tokens are: 
[items, text, relates, proper, names, .] 

>> PoS Tags are: 
[('items', 'NOUN'), ('text', 'NOUN'), ('relates', 'VERB'), ('proper', 'ADJ'), ('names', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('items', 'nsubj'), ('text', 'pobj'), ('relates', 'ROOT'), ('proper', 'amod'), ('names', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[items, text], [text, relates], [relates, proper], [proper, names], [names, .]]

>> Trigrams: 
[[items, text, relates], [text, relates, proper], [relates, proper, names], [proper, names, .]]

>> Noun Phrases are: 
[which items, the text, proper names]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Optical character recognition (OCR) it gives   


>> Tokens are: 
[Optical, character, recognition, (, OCR, ), gives,  ] 

>> PoS Tags are: 
[('Optical', 'ADJ'), ('character', 'NOUN'), ('recognition', 'NOUN'), ('(', 'PUNCT'), ('OCR', 'PROPN'), (')', 'PUNCT'), ('gives', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Optical', 'amod'), ('character', 'compound'), ('recognition', 'nsubj'), ('(', 'punct'), ('OCR', 'appos'), (')', 'punct'), ('gives', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[Optical, character], [character, recognition], [recognition, (], [(, OCR], [OCR, )], [), gives], [gives,  ]]

>> Trigrams: 
[[Optical, character, recognition], [character, recognition, (], [recognition, (, OCR], [(, OCR, )], [OCR, ), gives], [), gives,  ]]

>> Noun Phrases are: 
[Optical character recognition, OCR, it]

>> Named Entities are: 
[] 


================================ Paragraph 53 =================================

an image representing printed text, which help in determining the corresponding or related  

------------------- Sentence 1 -------------------

an image representing printed text, which help in determining the corresponding or related   


>> Tokens are: 
[image, representing, printed, text, ,, help, determining, corresponding, related,  ] 

>> PoS Tags are: 
[('image', 'NOUN'), ('representing', 'VERB'), ('printed', 'VERB'), ('text', 'NOUN'), (',', 'PUNCT'), ('help', 'VERB'), ('determining', 'VERB'), ('corresponding', 'ADJ'), ('related', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('image', 'ROOT'), ('representing', 'acl'), ('printed', 'amod'), ('text', 'dobj'), (',', 'punct'), ('help', 'relcl'), ('determining', 'pcomp'), ('corresponding', 'amod'), ('related', 'conj'), (' ', 'dobj')]

>> Bigrams: 
[[image, representing], [representing, printed], [printed, text], [text, ,], [,, help], [help, determining], [determining, corresponding], [corresponding, related], [related,  ]]

>> Trigrams: 
[[image, representing, printed], [representing, printed, text], [printed, text, ,], [text, ,, help], [,, help, determining], [help, determining, corresponding], [determining, corresponding, related], [corresponding, related,  ]]

>> Noun Phrases are: 
[an image, printed text]

>> Named Entities are: 
[] 


================================ Paragraph 54 =================================

text. Part of speech tagging it describes a sentence, determines the part of speech for each  

------------------- Sentence 1 -------------------

text. 


>> Tokens are: 
[text, .] 

>> PoS Tags are: 
[('text', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('text', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[text, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[text]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Part of speech tagging it describes a sentence, determines the part of speech for each   


>> Tokens are: 
[speech, tagging, describes, sentence, ,, determines, speech,  ] 

>> PoS Tags are: 
[('speech', 'NOUN'), ('tagging', 'NOUN'), ('describes', 'VERB'), ('sentence', 'NOUN'), (',', 'PUNCT'), ('determines', 'VERB'), ('speech', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('speech', 'compound'), ('tagging', 'pobj'), ('describes', 'ROOT'), ('sentence', 'dobj'), (',', 'punct'), ('determines', 'conj'), ('speech', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[speech, tagging], [tagging, describes], [describes, sentence], [sentence, ,], [,, determines], [determines, speech], [speech,  ]]

>> Trigrams: 
[[speech, tagging, describes], [tagging, describes, sentence], [describes, sentence, ,], [sentence, ,, determines], [,, determines, speech], [determines, speech,  ]]

>> Noun Phrases are: 
[speech tagging, it, a sentence, the part, speech]

>> Named Entities are: 
[] 


================================ Paragraph 55 =================================

word. Though NLP tasks are obviously very closely interweaved but they are used  

------------------- Sentence 1 -------------------

word. 


>> Tokens are: 
[word, .] 

>> PoS Tags are: 
[('word', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('word', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[word, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[word]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Though NLP tasks are obviously very closely interweaved but they are used   


>> Tokens are: 
[NLP, tasks, obviously, closely, interweaved,  ] 

>> PoS Tags are: 
[('NLP', 'PROPN'), ('tasks', 'NOUN'), ('obviously', 'ADV'), ('closely', 'ADV'), ('interweaved', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('NLP', 'compound'), ('tasks', 'nsubj'), ('obviously', 'advmod'), ('closely', 'advmod'), ('interweaved', 'acomp'), (' ', 'dobj')]

>> Bigrams: 
[[NLP, tasks], [tasks, obviously], [obviously, closely], [closely, interweaved], [interweaved,  ]]

>> Trigrams: 
[[NLP, tasks, obviously], [tasks, obviously, closely], [obviously, closely, interweaved], [closely, interweaved,  ]]

>> Noun Phrases are: 
[NLP tasks, they]

>> Named Entities are: 
[('NLP', 'ORG')] 


================================ Paragraph 56 =================================

frequently, for convenience. Some of the task such as automatic summarisation, co-reference  

------------------- Sentence 1 -------------------

frequently, for convenience. 


>> Tokens are: 
[frequently, ,, convenience, .] 

>> PoS Tags are: 
[('frequently', 'ADV'), (',', 'PUNCT'), ('convenience', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('frequently', 'advmod'), (',', 'punct'), ('convenience', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[frequently, ,], [,, convenience], [convenience, .]]

>> Trigrams: 
[[frequently, ,, convenience], [,, convenience, .]]

>> Noun Phrases are: 
[convenience]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Some of the task such as automatic summarisation, co-reference   


>> Tokens are: 
[task, automatic, summarisation, ,, co, -, reference,  ] 

>> PoS Tags are: 
[('task', 'NOUN'), ('automatic', 'ADJ'), ('summarisation', 'NOUN'), (',', 'PUNCT'), ('co', 'NOUN'), ('-', 'NOUN'), ('reference', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('task', 'pobj'), ('automatic', 'amod'), ('summarisation', 'pobj'), (',', 'punct'), ('co', 'amod'), ('-', 'ROOT'), ('reference', 'prep'), (' ', 'punct')]

>> Bigrams: 
[[task, automatic], [automatic, summarisation], [summarisation, ,], [,, co], [co, -], [-, reference], [reference,  ]]

>> Trigrams: 
[[task, automatic, summarisation], [automatic, summarisation, ,], [summarisation, ,, co], [,, co, -], [co, -, reference], [-, reference,  ]]

>> Noun Phrases are: 
[the task, automatic summarisation]

>> Named Entities are: 
[] 


================================ Paragraph 57 =================================

analysis etc. act as subtask that are used in solving larger tasks.  

------------------- Sentence 1 -------------------

analysis etc. act as subtask that are used in solving larger tasks. 


>> Tokens are: 
[analysis, etc, ., act, subtask, solving, larger, tasks, .] 

>> PoS Tags are: 
[('analysis', 'NOUN'), ('etc', 'X'), ('.', 'X'), ('act', 'VERB'), ('subtask', 'NOUN'), ('solving', 'VERB'), ('larger', 'ADJ'), ('tasks', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('analysis', 'nsubj'), ('etc', 'appos'), ('.', 'conj'), ('act', 'ROOT'), ('subtask', 'pobj'), ('solving', 'pcomp'), ('larger', 'amod'), ('tasks', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[analysis, etc], [etc, .], [., act], [act, subtask], [subtask, solving], [solving, larger], [larger, tasks], [tasks, .]]

>> Trigrams: 
[[analysis, etc, .], [etc, ., act], [., act, subtask], [act, subtask, solving], [subtask, solving, larger], [solving, larger, tasks], [larger, tasks, .]]

>> Noun Phrases are: 
[analysis, subtask, larger tasks]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 58 =================================

The goal of Natural Language Processing is to accommodate one or more specialities of an  

------------------- Sentence 1 -------------------

The goal of Natural Language Processing is to accommodate one or more specialities of an   


>> Tokens are: 
[goal, Natural, Language, Processing, accommodate, specialities,  ] 

>> PoS Tags are: 
[('goal', 'NOUN'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'PROPN'), ('accommodate', 'VERB'), ('specialities', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('goal', 'nsubj'), ('Natural', 'compound'), ('Language', 'compound'), ('Processing', 'pobj'), ('accommodate', 'xcomp'), ('specialities', 'dobj'), (' ', 'pobj')]

>> Bigrams: 
[[goal, Natural], [Natural, Language], [Language, Processing], [Processing, accommodate], [accommodate, specialities], [specialities,  ]]

>> Trigrams: 
[[goal, Natural, Language], [Natural, Language, Processing], [Language, Processing, accommodate], [Processing, accommodate, specialities], [accommodate, specialities,  ]]

>> Noun Phrases are: 
[The goal, Natural Language Processing, one or more specialities]

>> Named Entities are: 
[('Natural Language Processing', 'WORK_OF_ART'), ('one', 'CARDINAL')] 


================================ Paragraph 59 =================================

algorithm or system. The metric of NLP assess on an algorithmic system allows for the  

------------------- Sentence 1 -------------------

algorithm or system. 


>> Tokens are: 
[algorithm, system, .] 

>> PoS Tags are: 
[('algorithm', 'NOUN'), ('system', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('algorithm', 'ROOT'), ('system', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[algorithm, system], [system, .]]

>> Trigrams: 
[[algorithm, system, .]]

>> Noun Phrases are: 
[algorithm, system]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

The metric of NLP assess on an algorithmic system allows for the   


>> Tokens are: 
[metric, NLP, assess, algorithmic, system, allows,  ] 

>> PoS Tags are: 
[('metric', 'NOUN'), ('NLP', 'PROPN'), ('assess', 'NOUN'), ('algorithmic', 'ADJ'), ('system', 'NOUN'), ('allows', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('metric', 'nsubj'), ('NLP', 'compound'), ('assess', 'pobj'), ('algorithmic', 'amod'), ('system', 'pobj'), ('allows', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[metric, NLP], [NLP, assess], [assess, algorithmic], [algorithmic, system], [system, allows], [allows,  ]]

>> Trigrams: 
[[metric, NLP, assess], [NLP, assess, algorithmic], [assess, algorithmic, system], [algorithmic, system, allows], [system, allows,  ]]

>> Noun Phrases are: 
[The metric, NLP assess, an algorithmic system]

>> Named Entities are: 
[('NLP', 'ORG')] 


================================ Paragraph 60 =================================

integration of language understanding and language generation. It is even used in  

------------------- Sentence 1 -------------------

integration of language understanding and language generation. 


>> Tokens are: 
[integration, language, understanding, language, generation, .] 

>> PoS Tags are: 
[('integration', 'NOUN'), ('language', 'NOUN'), ('understanding', 'NOUN'), ('language', 'NOUN'), ('generation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('integration', 'ROOT'), ('language', 'compound'), ('understanding', 'pobj'), ('language', 'compound'), ('generation', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[integration, language], [language, understanding], [understanding, language], [language, generation], [generation, .]]

>> Trigrams: 
[[integration, language, understanding], [language, understanding, language], [understanding, language, generation], [language, generation, .]]

>> Noun Phrases are: 
[integration, language understanding, language generation]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

It is even used in   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'pobj')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[It]

>> Named Entities are: 
[] 


================================ Paragraph 61 =================================

multilingual event detection Rospocher et al. [2] purposed a novel modular system for cross- 

------------------- Sentence 1 -------------------

multilingual event detection Rospocher et al. 


>> Tokens are: 
[multilingual, event, detection, Rospocher, et, al, .] 

>> PoS Tags are: 
[('multilingual', 'ADJ'), ('event', 'NOUN'), ('detection', 'NOUN'), ('Rospocher', 'PROPN'), ('et', 'NOUN'), ('al', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('multilingual', 'amod'), ('event', 'compound'), ('detection', 'ROOT'), ('Rospocher', 'dobj'), ('et', 'compound'), ('al', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[multilingual, event], [event, detection], [detection, Rospocher], [Rospocher, et], [et, al], [al, .]]

>> Trigrams: 
[[multilingual, event, detection], [event, detection, Rospocher], [detection, Rospocher, et], [Rospocher, et, al], [et, al, .]]

>> Noun Phrases are: 
[multilingual event detection, Rospocher, et al]

>> Named Entities are: 
[('Rospocher', 'PERSON')] 

------------------- Sentence 2 -------------------

[2] purposed a novel modular system for cross- 


>> Tokens are: 
[[, 2, ], purposed, novel, modular, system, cross-] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('2', 'X'), (']', 'PUNCT'), ('purposed', 'VERB'), ('novel', 'ADJ'), ('modular', 'ADJ'), ('system', 'NOUN'), ('cross-', 'PROPN')] 

>> Dependency Tags are: 
[('[', 'dep'), ('2', 'dep'), (']', 'dep'), ('purposed', 'ROOT'), ('novel', 'amod'), ('modular', 'amod'), ('system', 'dobj'), ('cross-', 'pobj')]

>> Bigrams: 
[[[, 2], [2, ]], [], purposed], [purposed, novel], [novel, modular], [modular, system], [system, cross-]]

>> Trigrams: 
[[[, 2, ]], [2, ], purposed], [], purposed, novel], [purposed, novel, modular], [novel, modular, system], [modular, system, cross-]]

>> Noun Phrases are: 
[a novel modular system, cross-]

>> Named Entities are: 
[('2', 'CARDINAL')] 


================================ Paragraph 62 =================================

lingual event extraction for English, Dutch and Italian texts by using different pipelines for  

------------------- Sentence 1 -------------------

lingual event extraction for English, Dutch and Italian texts by using different pipelines for   


>> Tokens are: 
[lingual, event, extraction, English, ,, Dutch, Italian, texts, different, pipelines,  ] 

>> PoS Tags are: 
[('lingual', 'ADJ'), ('event', 'NOUN'), ('extraction', 'NOUN'), ('English', 'PROPN'), (',', 'PUNCT'), ('Dutch', 'ADJ'), ('Italian', 'ADJ'), ('texts', 'NOUN'), ('different', 'ADJ'), ('pipelines', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('lingual', 'amod'), ('event', 'compound'), ('extraction', 'ROOT'), ('English', 'amod'), (',', 'punct'), ('Dutch', 'conj'), ('Italian', 'conj'), ('texts', 'pobj'), ('different', 'amod'), ('pipelines', 'dobj'), (' ', 'pobj')]

>> Bigrams: 
[[lingual, event], [event, extraction], [extraction, English], [English, ,], [,, Dutch], [Dutch, Italian], [Italian, texts], [texts, different], [different, pipelines], [pipelines,  ]]

>> Trigrams: 
[[lingual, event, extraction], [event, extraction, English], [extraction, English, ,], [English, ,, Dutch], [,, Dutch, Italian], [Dutch, Italian, texts], [Italian, texts, different], [texts, different, pipelines], [different, pipelines,  ]]

>> Noun Phrases are: 
[lingual event extraction, English, Dutch and Italian texts, different pipelines]

>> Named Entities are: 
[('English', 'NORP'), ('Dutch', 'NORP'), ('Italian', 'NORP')] 


================================ Paragraph 63 =================================

different languages. The system incorporates a modular set of foremost multilingual Natural  

------------------- Sentence 1 -------------------

different languages. 


>> Tokens are: 
[different, languages, .] 

>> PoS Tags are: 
[('different', 'ADJ'), ('languages', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('different', 'amod'), ('languages', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[different, languages], [languages, .]]

>> Trigrams: 
[[different, languages, .]]

>> Noun Phrases are: 
[different languages]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

The system incorporates a modular set of foremost multilingual Natural   


>> Tokens are: 
[system, incorporates, modular, set, foremost, multilingual, Natural,  ] 

>> PoS Tags are: 
[('system', 'NOUN'), ('incorporates', 'VERB'), ('modular', 'ADJ'), ('set', 'NOUN'), ('foremost', 'ADJ'), ('multilingual', 'ADJ'), ('Natural', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('system', 'nsubj'), ('incorporates', 'ROOT'), ('modular', 'amod'), ('set', 'dobj'), ('foremost', 'amod'), ('multilingual', 'amod'), ('Natural', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[system, incorporates], [incorporates, modular], [modular, set], [set, foremost], [foremost, multilingual], [multilingual, Natural], [Natural,  ]]

>> Trigrams: 
[[system, incorporates, modular], [incorporates, modular, set], [modular, set, foremost], [set, foremost, multilingual], [foremost, multilingual, Natural], [multilingual, Natural,  ]]

>> Noun Phrases are: 
[The system, a modular set, foremost multilingual Natural]

>> Named Entities are: 
[] 


================================ Paragraph 64 =================================

Language Processing (NLP) tools. The pipeline integrates modules for basic NLP processing  

------------------- Sentence 1 -------------------

Language Processing (NLP) tools. 


>> Tokens are: 
[Language, Processing, (, NLP, ), tools, .] 

>> PoS Tags are: 
[('Language', 'PROPN'), ('Processing', 'PROPN'), ('(', 'PUNCT'), ('NLP', 'PROPN'), (')', 'PUNCT'), ('tools', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Language', 'compound'), ('Processing', 'nmod'), ('(', 'punct'), ('NLP', 'appos'), (')', 'punct'), ('tools', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Language, Processing], [Processing, (], [(, NLP], [NLP, )], [), tools], [tools, .]]

>> Trigrams: 
[[Language, Processing, (], [Processing, (, NLP], [(, NLP, )], [NLP, ), tools], [), tools, .]]

>> Noun Phrases are: 
[NLP]

>> Named Entities are: 
[('NLP', 'ORG')] 

------------------- Sentence 2 -------------------

The pipeline integrates modules for basic NLP processing   


>> Tokens are: 
[pipeline, integrates, modules, basic, NLP, processing,  ] 

>> PoS Tags are: 
[('pipeline', 'NOUN'), ('integrates', 'VERB'), ('modules', 'NOUN'), ('basic', 'ADJ'), ('NLP', 'PROPN'), ('processing', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('pipeline', 'nsubj'), ('integrates', 'ROOT'), ('modules', 'dobj'), ('basic', 'amod'), ('NLP', 'compound'), ('processing', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[pipeline, integrates], [integrates, modules], [modules, basic], [basic, NLP], [NLP, processing], [processing,  ]]

>> Trigrams: 
[[pipeline, integrates, modules], [integrates, modules, basic], [modules, basic, NLP], [basic, NLP, processing], [NLP, processing,  ]]

>> Noun Phrases are: 
[The pipeline, modules, basic NLP processing]

>> Named Entities are: 
[('NLP', 'ORG')] 


================================ Paragraph 65 =================================

as well as more advanced tasks such as cross-lingual named entity linking, semantic role  

------------------- Sentence 1 -------------------

as well as 


>> Tokens are: 
[] 

>> PoS Tags are: 
[] 

>> Dependency Tags are: 
[]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

more advanced tasks such as cross-lingual named entity linking, semantic role   


>> Tokens are: 
[advanced, tasks, cross, -, lingual, named, entity, linking, ,, semantic, role,  ] 

>> PoS Tags are: 
[('advanced', 'ADJ'), ('tasks', 'NOUN'), ('cross', 'ADJ'), ('-', 'ADJ'), ('lingual', 'ADJ'), ('named', 'VERB'), ('entity', 'NOUN'), ('linking', 'NOUN'), (',', 'PUNCT'), ('semantic', 'ADJ'), ('role', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('advanced', 'amod'), ('tasks', 'ROOT'), ('cross', 'pobj'), ('-', 'amod'), ('lingual', 'amod'), ('named', 'amod'), ('entity', 'compound'), ('linking', 'pobj'), (',', 'punct'), ('semantic', 'amod'), ('role', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[advanced, tasks], [tasks, cross], [cross, -], [-, lingual], [lingual, named], [named, entity], [entity, linking], [linking, ,], [,, semantic], [semantic, role], [role,  ]]

>> Trigrams: 
[[advanced, tasks, cross], [tasks, cross, -], [cross, -, lingual], [-, lingual, named], [lingual, named, entity], [named, entity, linking], [entity, linking, ,], [linking, ,, semantic], [,, semantic, role], [semantic, role,  ]]

>> Noun Phrases are: 
[more advanced tasks, -lingual named entity linking, semantic role]

>> Named Entities are: 
[] 


================================ Paragraph 66 =================================

labelling and time normalization. Thus, the cross-lingual framework allows for the  

------------------- Sentence 1 -------------------

labelling and time normalization. 


>> Tokens are: 
[labelling, time, normalization, .] 

>> PoS Tags are: 
[('labelling', 'NOUN'), ('time', 'NOUN'), ('normalization', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('labelling', 'nmod'), ('time', 'conj'), ('normalization', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[labelling, time], [time, normalization], [normalization, .]]

>> Trigrams: 
[[labelling, time, normalization], [time, normalization, .]]

>> Noun Phrases are: 
[labelling and time normalization]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Thus, the cross-lingual framework allows for the   


>> Tokens are: 
[,, cross, -, lingual, framework, allows,  ] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('cross', 'ADJ'), ('-', 'ADJ'), ('lingual', 'ADJ'), ('framework', 'NOUN'), ('allows', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(',', 'punct'), ('cross', 'amod'), ('-', 'amod'), ('lingual', 'amod'), ('framework', 'nsubj'), ('allows', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[,, cross], [cross, -], [-, lingual], [lingual, framework], [framework, allows], [allows,  ]]

>> Trigrams: 
[[,, cross, -], [cross, -, lingual], [-, lingual, framework], [lingual, framework, allows], [framework, allows,  ]]

>> Noun Phrases are: 
[the cross-lingual framework]

>> Named Entities are: 
[] 


================================ Paragraph 67 =================================

interpretation of events, participants, locations and time, as well as the relations between  

------------------- Sentence 1 -------------------

interpretation of events, participants, locations and time, as well as the relations between   


>> Tokens are: 
[interpretation, events, ,, participants, ,, locations, time, ,, relations,  ] 

>> PoS Tags are: 
[('interpretation', 'NOUN'), ('events', 'NOUN'), (',', 'PUNCT'), ('participants', 'NOUN'), (',', 'PUNCT'), ('locations', 'NOUN'), ('time', 'NOUN'), (',', 'PUNCT'), ('relations', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('interpretation', 'ROOT'), ('events', 'pobj'), (',', 'punct'), ('participants', 'conj'), (',', 'punct'), ('locations', 'conj'), ('time', 'conj'), (',', 'punct'), ('relations', 'conj'), (' ', 'pobj')]

>> Bigrams: 
[[interpretation, events], [events, ,], [,, participants], [participants, ,], [,, locations], [locations, time], [time, ,], [,, relations], [relations,  ]]

>> Trigrams: 
[[interpretation, events, ,], [events, ,, participants], [,, participants, ,], [participants, ,, locations], [,, locations, time], [locations, time, ,], [time, ,, relations], [,, relations,  ]]

>> Noun Phrases are: 
[interpretation, events, participants, locations, time, the relations]

>> Named Entities are: 
[] 


================================ Paragraph 68 =================================

them. Output of these individual pipelines is intended to be used as input for a system that  

------------------- Sentence 1 -------------------

them. 


>> Tokens are: 
[.] 

>> PoS Tags are: 
[('.', 'PUNCT')] 

>> Dependency Tags are: 
[('.', 'punct')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[them]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Output of these individual pipelines is intended to be used as input for a system 


>> Tokens are: 
[Output, individual, pipelines, intended, input, system] 

>> PoS Tags are: 
[('Output', 'NOUN'), ('individual', 'ADJ'), ('pipelines', 'NOUN'), ('intended', 'VERB'), ('input', 'NOUN'), ('system', 'NOUN')] 

>> Dependency Tags are: 
[('Output', 'nsubjpass'), ('individual', 'amod'), ('pipelines', 'pobj'), ('intended', 'ROOT'), ('input', 'pobj'), ('system', 'pobj')]

>> Bigrams: 
[[Output, individual], [individual, pipelines], [pipelines, intended], [intended, input], [input, system]]

>> Trigrams: 
[[Output, individual, pipelines], [individual, pipelines, intended], [pipelines, intended, input], [intended, input, system]]

>> Noun Phrases are: 
[Output, these individual pipelines, input, a system]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

that   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'punct')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 69 =================================

obtains event centric knowledge graphs. All modules behave like UNIX pipes: they all take  

------------------- Sentence 1 -------------------

obtains event centric knowledge graphs. 


>> Tokens are: 
[obtains, event, centric, knowledge, graphs, .] 

>> PoS Tags are: 
[('obtains', 'VERB'), ('event', 'NOUN'), ('centric', 'ADJ'), ('knowledge', 'NOUN'), ('graphs', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('obtains', 'ROOT'), ('event', 'dobj'), ('centric', 'amod'), ('knowledge', 'compound'), ('graphs', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[obtains, event], [event, centric], [centric, knowledge], [knowledge, graphs], [graphs, .]]

>> Trigrams: 
[[obtains, event, centric], [event, centric, knowledge], [centric, knowledge, graphs], [knowledge, graphs, .]]

>> Noun Phrases are: 
[event, centric knowledge graphs]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

All modules behave like UNIX pipes: they all take   


>> Tokens are: 
[modules, behave, like, UNIX, pipes, :,  ] 

>> PoS Tags are: 
[('modules', 'NOUN'), ('behave', 'VERB'), ('like', 'ADP'), ('UNIX', 'PROPN'), ('pipes', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('modules', 'nsubj'), ('behave', 'ccomp'), ('like', 'prep'), ('UNIX', 'compound'), ('pipes', 'pobj'), (':', 'punct'), (' ', 'dobj')]

>> Bigrams: 
[[modules, behave], [behave, like], [like, UNIX], [UNIX, pipes], [pipes, :], [:,  ]]

>> Trigrams: 
[[modules, behave, like], [behave, like, UNIX], [like, UNIX, pipes], [UNIX, pipes, :], [pipes, :,  ]]

>> Noun Phrases are: 
[All modules, UNIX pipes, they]

>> Named Entities are: 
[] 


================================ Paragraph 70 =================================

standard input, to do some annotation, and produce standard output which in turn is the input  

------------------- Sentence 1 -------------------

standard input, to do some annotation, and produce standard output which in turn is the input   


>> Tokens are: 
[standard, input, ,, annotation, ,, produce, standard, output, turn, input,  ] 

>> PoS Tags are: 
[('standard', 'ADJ'), ('input', 'NOUN'), (',', 'PUNCT'), ('annotation', 'NOUN'), (',', 'PUNCT'), ('produce', 'VERB'), ('standard', 'ADJ'), ('output', 'NOUN'), ('turn', 'NOUN'), ('input', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('standard', 'amod'), ('input', 'ROOT'), (',', 'punct'), ('annotation', 'dobj'), (',', 'punct'), ('produce', 'conj'), ('standard', 'amod'), ('output', 'dobj'), ('turn', 'pobj'), ('input', 'attr'), (' ', 'punct')]

>> Bigrams: 
[[standard, input], [input, ,], [,, annotation], [annotation, ,], [,, produce], [produce, standard], [standard, output], [output, turn], [turn, input], [input,  ]]

>> Trigrams: 
[[standard, input, ,], [input, ,, annotation], [,, annotation, ,], [annotation, ,, produce], [,, produce, standard], [produce, standard, output], [standard, output, turn], [output, turn, input], [turn, input,  ]]

>> Noun Phrases are: 
[standard input, some annotation, standard output, turn, the input]

>> Named Entities are: 
[] 


================================ Paragraph 71 =================================

for the next module pipelines are built as a data centric architecture so that modules can be  

------------------- Sentence 1 -------------------

for the next module pipelines are built as a data centric architecture so that modules can be   


>> Tokens are: 
[module, pipelines, built, data, centric, architecture, modules,  ] 

>> PoS Tags are: 
[('module', 'NOUN'), ('pipelines', 'NOUN'), ('built', 'VERB'), ('data', 'NOUN'), ('centric', 'ADJ'), ('architecture', 'NOUN'), ('modules', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('module', 'compound'), ('pipelines', 'nsubjpass'), ('built', 'ROOT'), ('data', 'compound'), ('centric', 'amod'), ('architecture', 'pobj'), ('modules', 'nsubj'), (' ', 'attr')]

>> Bigrams: 
[[module, pipelines], [pipelines, built], [built, data], [data, centric], [centric, architecture], [architecture, modules], [modules,  ]]

>> Trigrams: 
[[module, pipelines, built], [pipelines, built, data], [built, data, centric], [data, centric, architecture], [centric, architecture, modules], [architecture, modules,  ]]

>> Noun Phrases are: 
[the next module pipelines, a data centric architecture, modules]

>> Named Entities are: 
[] 


================================ Paragraph 72 =================================

adapted and replaced. Furthermore, modular architecture allows for different configurations  

------------------- Sentence 1 -------------------

adapted and replaced. 


>> Tokens are: 
[adapted, replaced, .] 

>> PoS Tags are: 
[('adapted', 'VERB'), ('replaced', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('adapted', 'ROOT'), ('replaced', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[adapted, replaced], [replaced, .]]

>> Trigrams: 
[[adapted, replaced, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Furthermore, modular architecture allows for different configurations   


>> Tokens are: 
[Furthermore, ,, modular, architecture, allows, different, configurations,  ] 

>> PoS Tags are: 
[('Furthermore', 'ADV'), (',', 'PUNCT'), ('modular', 'ADJ'), ('architecture', 'NOUN'), ('allows', 'VERB'), ('different', 'ADJ'), ('configurations', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Furthermore', 'advmod'), (',', 'punct'), ('modular', 'amod'), ('architecture', 'nsubj'), ('allows', 'ROOT'), ('different', 'amod'), ('configurations', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Furthermore, ,], [,, modular], [modular, architecture], [architecture, allows], [allows, different], [different, configurations], [configurations,  ]]

>> Trigrams: 
[[Furthermore, ,, modular], [,, modular, architecture], [modular, architecture, allows], [architecture, allows, different], [allows, different, configurations], [different, configurations,  ]]

>> Noun Phrases are: 
[modular architecture, different configurations]

>> Named Entities are: 
[] 


================================ Paragraph 73 =================================

and for dynamic distribution.  

------------------- Sentence 1 -------------------

and for dynamic distribution.   


>> Tokens are: 
[dynamic, distribution, .,  ] 

>> PoS Tags are: 
[('dynamic', 'ADJ'), ('distribution', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('dynamic', 'amod'), ('distribution', 'pobj'), ('.', 'punct'), (' ', 'pobj')]

>> Bigrams: 
[[dynamic, distribution], [distribution, .], [.,  ]]

>> Trigrams: 
[[dynamic, distribution, .], [distribution, .,  ]]

>> Noun Phrases are: 
[dynamic distribution]

>> Named Entities are: 
[] 


================================ Paragraph 74 =================================

Most of the work in Natural Language Processing is conducted by computer scientists while  

------------------- Sentence 1 -------------------

Most of the work in Natural Language Processing is conducted by computer scientists 


>> Tokens are: 
[work, Natural, Language, Processing, conducted, computer, scientists] 

>> PoS Tags are: 
[('work', 'NOUN'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'PROPN'), ('conducted', 'VERB'), ('computer', 'NOUN'), ('scientists', 'NOUN')] 

>> Dependency Tags are: 
[('work', 'pobj'), ('Natural', 'compound'), ('Language', 'compound'), ('Processing', 'pobj'), ('conducted', 'ROOT'), ('computer', 'compound'), ('scientists', 'pobj')]

>> Bigrams: 
[[work, Natural], [Natural, Language], [Language, Processing], [Processing, conducted], [conducted, computer], [computer, scientists]]

>> Trigrams: 
[[work, Natural, Language], [Natural, Language, Processing], [Language, Processing, conducted], [Processing, conducted, computer], [conducted, computer, scientists]]

>> Noun Phrases are: 
[the work, Natural Language Processing, computer scientists]

>> Named Entities are: 
[('Natural Language Processing', 'WORK_OF_ART')] 

------------------- Sentence 2 -------------------

while   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'pobj')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 75 =================================

various other professionals have also shown interest such as linguistics, psychologist and  

------------------- Sentence 1 -------------------

various other professionals have also shown interest such as linguistics, psychologist and   


>> Tokens are: 
[professionals, shown, interest, linguistics, ,, psychologist,  ] 

>> PoS Tags are: 
[('professionals', 'NOUN'), ('shown', 'VERB'), ('interest', 'NOUN'), ('linguistics', 'NOUN'), (',', 'PUNCT'), ('psychologist', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('professionals', 'nsubj'), ('shown', 'ROOT'), ('interest', 'dobj'), ('linguistics', 'pobj'), (',', 'punct'), ('psychologist', 'conj'), (' ', 'conj')]

>> Bigrams: 
[[professionals, shown], [shown, interest], [interest, linguistics], [linguistics, ,], [,, psychologist], [psychologist,  ]]

>> Trigrams: 
[[professionals, shown, interest], [shown, interest, linguistics], [interest, linguistics, ,], [linguistics, ,, psychologist], [,, psychologist,  ]]

>> Noun Phrases are: 
[various other professionals, interest, linguistics, psychologist]

>> Named Entities are: 
[] 


================================ Paragraph 76 =================================

philosophers etc. One of the most ironical aspect of NLP is that it adds up to the knowledge  

------------------- Sentence 1 -------------------

philosophers etc. 


>> Tokens are: 
[philosophers, etc, .] 

>> PoS Tags are: 
[('philosophers', 'NOUN'), ('etc', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('philosophers', 'nsubj'), ('etc', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[philosophers, etc], [etc, .]]

>> Trigrams: 
[[philosophers, etc, .]]

>> Noun Phrases are: 
[philosophers]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

One of the most ironical aspect of NLP is that it adds up to the knowledge   


>> Tokens are: 
[ironical, aspect, NLP, adds, knowledge,  ] 

>> PoS Tags are: 
[('ironical', 'ADJ'), ('aspect', 'NOUN'), ('NLP', 'PROPN'), ('adds', 'VERB'), ('knowledge', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('ironical', 'amod'), ('aspect', 'pobj'), ('NLP', 'pobj'), ('adds', 'ccomp'), ('knowledge', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[ironical, aspect], [aspect, NLP], [NLP, adds], [adds, knowledge], [knowledge,  ]]

>> Trigrams: 
[[ironical, aspect, NLP], [aspect, NLP, adds], [NLP, adds, knowledge], [adds, knowledge,  ]]

>> Noun Phrases are: 
[the most ironical aspect, NLP, it, the knowledge]

>> Named Entities are: 
[('One', 'CARDINAL'), ('NLP', 'ORG')] 


================================ Paragraph 77 =================================

of human language. The field of Natural Language Processing is related with different  

------------------- Sentence 1 -------------------

of human language. 


>> Tokens are: 
[human, language, .] 

>> PoS Tags are: 
[('human', 'ADJ'), ('language', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('human', 'amod'), ('language', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[human, language], [language, .]]

>> Trigrams: 
[[human, language, .]]

>> Noun Phrases are: 
[human language]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

The field of Natural Language Processing is related with different   


>> Tokens are: 
[field, Natural, Language, Processing, related, different,  ] 

>> PoS Tags are: 
[('field', 'NOUN'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'PROPN'), ('related', 'VERB'), ('different', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('field', 'nsubjpass'), ('Natural', 'compound'), ('Language', 'compound'), ('Processing', 'pobj'), ('related', 'ROOT'), ('different', 'amod'), (' ', 'pobj')]

>> Bigrams: 
[[field, Natural], [Natural, Language], [Language, Processing], [Processing, related], [related, different], [different,  ]]

>> Trigrams: 
[[field, Natural, Language], [Natural, Language, Processing], [Language, Processing, related], [Processing, related, different], [related, different,  ]]

>> Noun Phrases are: 
[The field, Natural Language Processing]

>> Named Entities are: 
[('Natural Language Processing', 'WORK_OF_ART')] 


================================ Paragraph 78 =================================

theories and techniques that deal with the problem of natural language of communicating  

------------------- Sentence 1 -------------------

theories and techniques that deal with the problem of natural language of communicating   


>> Tokens are: 
[theories, techniques, deal, problem, natural, language, communicating,  ] 

>> PoS Tags are: 
[('theories', 'NOUN'), ('techniques', 'NOUN'), ('deal', 'VERB'), ('problem', 'NOUN'), ('natural', 'ADJ'), ('language', 'NOUN'), ('communicating', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('theories', 'ROOT'), ('techniques', 'conj'), ('deal', 'relcl'), ('problem', 'pobj'), ('natural', 'amod'), ('language', 'pobj'), ('communicating', 'pcomp'), (' ', 'dobj')]

>> Bigrams: 
[[theories, techniques], [techniques, deal], [deal, problem], [problem, natural], [natural, language], [language, communicating], [communicating,  ]]

>> Trigrams: 
[[theories, techniques, deal], [techniques, deal, problem], [deal, problem, natural], [problem, natural, language], [natural, language, communicating], [language, communicating,  ]]

>> Noun Phrases are: 
[theories, techniques, the problem, natural language]

>> Named Entities are: 
[] 


================================ Paragraph 79 =================================

with the computers. Ambiguity is one of the major problem of natural language which is  

------------------- Sentence 1 -------------------

with the computers. 


>> Tokens are: 
[computers, .] 

>> PoS Tags are: 
[('computers', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('computers', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[computers, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[the computers]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Ambiguity is one of the major problem of natural language which is   


>> Tokens are: 
[Ambiguity, major, problem, natural, language,  ] 

>> PoS Tags are: 
[('Ambiguity', 'NOUN'), ('major', 'ADJ'), ('problem', 'NOUN'), ('natural', 'ADJ'), ('language', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Ambiguity', 'nsubj'), ('major', 'amod'), ('problem', 'pobj'), ('natural', 'amod'), ('language', 'pobj'), (' ', 'attr')]

>> Bigrams: 
[[Ambiguity, major], [major, problem], [problem, natural], [natural, language], [language,  ]]

>> Trigrams: 
[[Ambiguity, major, problem], [major, problem, natural], [problem, natural, language], [natural, language,  ]]

>> Noun Phrases are: 
[Ambiguity, the major problem, natural language]

>> Named Entities are: 
[] 


================================ Paragraph 80 =================================

usually faced in syntactic level which has subtask as lexical and morphology which are  

------------------- Sentence 1 -------------------

usually faced in syntactic level which has subtask as lexical and morphology which are   


>> Tokens are: 
[usually, faced, syntactic, level, subtask, lexical, morphology,  ] 

>> PoS Tags are: 
[('usually', 'ADV'), ('faced', 'VERB'), ('syntactic', 'ADJ'), ('level', 'NOUN'), ('subtask', 'NOUN'), ('lexical', 'ADJ'), ('morphology', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('usually', 'advmod'), ('faced', 'ROOT'), ('syntactic', 'amod'), ('level', 'pobj'), ('subtask', 'dobj'), ('lexical', 'amod'), ('morphology', 'conj'), (' ', 'attr')]

>> Bigrams: 
[[usually, faced], [faced, syntactic], [syntactic, level], [level, subtask], [subtask, lexical], [lexical, morphology], [morphology,  ]]

>> Trigrams: 
[[usually, faced, syntactic], [faced, syntactic, level], [syntactic, level, subtask], [level, subtask, lexical], [subtask, lexical, morphology], [lexical, morphology,  ]]

>> Noun Phrases are: 
[syntactic level, subtask]

>> Named Entities are: 
[] 


================================ Paragraph 81 =================================

concerned with the study of words and word formation. Each of these levels can produce  

------------------- Sentence 1 -------------------

concerned with the study of words and word formation. 


>> Tokens are: 
[concerned, study, words, word, formation, .] 

>> PoS Tags are: 
[('concerned', 'ADJ'), ('study', 'NOUN'), ('words', 'NOUN'), ('word', 'NOUN'), ('formation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('concerned', 'ROOT'), ('study', 'pobj'), ('words', 'pobj'), ('word', 'compound'), ('formation', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[concerned, study], [study, words], [words, word], [word, formation], [formation, .]]

>> Trigrams: 
[[concerned, study, words], [study, words, word], [words, word, formation], [word, formation, .]]

>> Noun Phrases are: 
[the study, words, word formation]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Each of these levels can produce   


>> Tokens are: 
[levels, produce,  ] 

>> PoS Tags are: 
[('levels', 'NOUN'), ('produce', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('levels', 'pobj'), ('produce', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[levels, produce], [produce,  ]]

>> Trigrams: 
[[levels, produce,  ]]

>> Noun Phrases are: 
[these levels]

>> Named Entities are: 
[] 


================================ Paragraph 82 =================================

ambiguities that can be solved by the knowledge of the complete sentence. The ambiguity  

------------------- Sentence 1 -------------------

ambiguities that can be solved by the knowledge of the complete sentence. 


>> Tokens are: 
[ambiguities, solved, knowledge, complete, sentence, .] 

>> PoS Tags are: 
[('ambiguities', 'NOUN'), ('solved', 'VERB'), ('knowledge', 'NOUN'), ('complete', 'ADJ'), ('sentence', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ambiguities', 'ROOT'), ('solved', 'relcl'), ('knowledge', 'pobj'), ('complete', 'amod'), ('sentence', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ambiguities, solved], [solved, knowledge], [knowledge, complete], [complete, sentence], [sentence, .]]

>> Trigrams: 
[[ambiguities, solved, knowledge], [solved, knowledge, complete], [knowledge, complete, sentence], [complete, sentence, .]]

>> Noun Phrases are: 
[ambiguities, the knowledge, the complete sentence]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

The ambiguity   


>> Tokens are: 
[ambiguity,  ] 

>> PoS Tags are: 
[('ambiguity', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('ambiguity', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[ambiguity,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[The ambiguity]

>> Named Entities are: 
[] 


================================ Paragraph 83 =================================

can be solved by various methods such as Minimising Ambiguity, Preserving Ambiguity,  

------------------- Sentence 1 -------------------

can be solved by various methods such as Minimising Ambiguity, Preserving Ambiguity, 


>> Tokens are: 
[solved, methods, Minimising, Ambiguity, ,, Preserving, Ambiguity, ,] 

>> PoS Tags are: 
[('solved', 'VERB'), ('methods', 'NOUN'), ('Minimising', 'VERB'), ('Ambiguity', 'NOUN'), (',', 'PUNCT'), ('Preserving', 'PROPN'), ('Ambiguity', 'NOUN'), (',', 'PUNCT')] 

>> Dependency Tags are: 
[('solved', 'ROOT'), ('methods', 'pobj'), ('Minimising', 'pcomp'), ('Ambiguity', 'dobj'), (',', 'punct'), ('Preserving', 'compound'), ('Ambiguity', 'conj'), (',', 'punct')]

>> Bigrams: 
[[solved, methods], [methods, Minimising], [Minimising, Ambiguity], [Ambiguity, ,], [,, Preserving], [Preserving, Ambiguity], [Ambiguity, ,]]

>> Trigrams: 
[[solved, methods, Minimising], [methods, Minimising, Ambiguity], [Minimising, Ambiguity, ,], [Ambiguity, ,, Preserving], [,, Preserving, Ambiguity], [Preserving, Ambiguity, ,]]

>> Noun Phrases are: 
[various methods, Ambiguity, Preserving Ambiguity]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 84 =================================

Interactive Disambiguity and Weighting Ambiguity [3]. Some of the methods proposed by  

------------------- Sentence 1 -------------------

Interactive Disambiguity and Weighting Ambiguity [3]. 


>> Tokens are: 
[Interactive, Disambiguity, Weighting, Ambiguity, [, 3, ], .] 

>> PoS Tags are: 
[('Interactive', 'PROPN'), ('Disambiguity', 'PROPN'), ('Weighting', 'PROPN'), ('Ambiguity', 'PROPN'), ('[', 'PUNCT'), ('3', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Interactive', 'compound'), ('Disambiguity', 'ROOT'), ('Weighting', 'compound'), ('Ambiguity', 'conj'), ('[', 'punct'), ('3', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Interactive, Disambiguity], [Disambiguity, Weighting], [Weighting, Ambiguity], [Ambiguity, [], [[, 3], [3, ]], [], .]]

>> Trigrams: 
[[Interactive, Disambiguity, Weighting], [Disambiguity, Weighting, Ambiguity], [Weighting, Ambiguity, [], [Ambiguity, [, 3], [[, 3, ]], [3, ], .]]

>> Noun Phrases are: 
[Interactive Disambiguity, Weighting Ambiguity]

>> Named Entities are: 
[('Interactive Disambiguity and Weighting Ambiguity', 'ORG'), ('3', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Some of the methods proposed by   


>> Tokens are: 
[methods, proposed,  ] 

>> PoS Tags are: 
[('methods', 'NOUN'), ('proposed', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('methods', 'pobj'), ('proposed', 'acl'), (' ', 'pobj')]

>> Bigrams: 
[[methods, proposed], [proposed,  ]]

>> Trigrams: 
[[methods, proposed,  ]]

>> Noun Phrases are: 
[the methods]

>> Named Entities are: 
[] 


================================ Paragraph 85 =================================

researchers to remove ambiguity is preserving ambiguity, e.g.- (Shemtov 1997; Emele &  

------------------- Sentence 1 -------------------

researchers to remove ambiguity is preserving ambiguity, e.g.- (Shemtov 1997; Emele &   


>> Tokens are: 
[researchers, remove, ambiguity, preserving, ambiguity, ,, e.g.-, (, Shemtov, 1997, ;, Emele, &,  ] 

>> PoS Tags are: 
[('researchers', 'NOUN'), ('remove', 'VERB'), ('ambiguity', 'NOUN'), ('preserving', 'VERB'), ('ambiguity', 'NOUN'), (',', 'PUNCT'), ('e.g.-', 'PROPN'), ('(', 'PUNCT'), ('Shemtov', 'ADJ'), ('1997', 'NUM'), (';', 'PUNCT'), ('Emele', 'PROPN'), ('&', 'CCONJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('researchers', 'nsubj'), ('remove', 'acl'), ('ambiguity', 'dobj'), ('preserving', 'ROOT'), ('ambiguity', 'dobj'), (',', 'punct'), ('e.g.-', 'npadvmod'), ('(', 'punct'), ('Shemtov', 'appos'), ('1997', 'npadvmod'), (';', 'punct'), ('Emele', 'dobj'), ('&', 'cc'), (' ', 'conj')]

>> Bigrams: 
[[researchers, remove], [remove, ambiguity], [ambiguity, preserving], [preserving, ambiguity], [ambiguity, ,], [,, e.g.-], [e.g.-, (], [(, Shemtov], [Shemtov, 1997], [1997, ;], [;, Emele], [Emele, &], [&,  ]]

>> Trigrams: 
[[researchers, remove, ambiguity], [remove, ambiguity, preserving], [ambiguity, preserving, ambiguity], [preserving, ambiguity, ,], [ambiguity, ,, e.g.-], [,, e.g.-, (], [e.g.-, (, Shemtov], [(, Shemtov, 1997], [Shemtov, 1997, ;], [1997, ;, Emele], [;, Emele, &], [Emele, &,  ]]

>> Noun Phrases are: 
[researchers, ambiguity, ambiguity, Emele]

>> Named Entities are: 
[('e.g.- (Shemtov 1997', 'ORG'), ('Emele &  ', 'ORG')] 


================================ Paragraph 86 =================================

Dorna 1998; Knight & Langkilde 2000) [3][4][5] Their objectives are closely in line with the  

------------------- Sentence 1 -------------------

Dorna 1998; Knight & Langkilde 2000) 


>> Tokens are: 
[Dorna, 1998, ;, Knight, &, Langkilde, 2000, )] 

>> PoS Tags are: 
[('Dorna', 'PROPN'), ('1998', 'NUM'), (';', 'PUNCT'), ('Knight', 'PROPN'), ('&', 'CCONJ'), ('Langkilde', 'PROPN'), ('2000', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Dorna', 'ROOT'), ('1998', 'nummod'), (';', 'punct'), ('Knight', 'appos'), ('&', 'cc'), ('Langkilde', 'conj'), ('2000', 'nummod'), (')', 'punct')]

>> Bigrams: 
[[Dorna, 1998], [1998, ;], [;, Knight], [Knight, &], [&, Langkilde], [Langkilde, 2000], [2000, )]]

>> Trigrams: 
[[Dorna, 1998, ;], [1998, ;, Knight], [;, Knight, &], [Knight, &, Langkilde], [&, Langkilde, 2000], [Langkilde, 2000, )]]

>> Noun Phrases are: 
[Dorna, Knight, Langkilde]

>> Named Entities are: 
[('Dorna', 'GPE'), ('1998', 'DATE'), ('Knight & Langkilde 2000', 'ORG')] 

------------------- Sentence 2 -------------------

[3][4][5] Their objectives are closely in line with the   


>> Tokens are: 
[[, 3][4][5, ], objectives, closely, line,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('3][4][5', 'NUM'), (']', 'PUNCT'), ('objectives', 'NOUN'), ('closely', 'ADV'), ('line', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('3][4][5', 'nsubj'), (']', 'punct'), ('objectives', 'nsubj'), ('closely', 'advmod'), ('line', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[[, 3][4][5], [3][4][5, ]], [], objectives], [objectives, closely], [closely, line], [line,  ]]

>> Trigrams: 
[[[, 3][4][5, ]], [3][4][5, ], objectives], [], objectives, closely], [objectives, closely, line], [closely, line,  ]]

>> Noun Phrases are: 
[Their objectives, line]

>> Named Entities are: 
[('3][4][5', 'CARDINAL')] 


================================ Paragraph 87 =================================

last of these: they cover a wide range of ambiguities and there is a statistical element implicit  

------------------- Sentence 1 -------------------

last of these: they cover a wide range of ambiguities and there is a statistical element implicit   


>> Tokens are: 
[:, cover, wide, range, ambiguities, statistical, element, implicit,  ] 

>> PoS Tags are: 
[(':', 'PUNCT'), ('cover', 'VERB'), ('wide', 'ADJ'), ('range', 'NOUN'), ('ambiguities', 'NOUN'), ('statistical', 'ADJ'), ('element', 'NOUN'), ('implicit', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(':', 'punct'), ('cover', 'ROOT'), ('wide', 'amod'), ('range', 'dobj'), ('ambiguities', 'pobj'), ('statistical', 'amod'), ('element', 'compound'), ('implicit', 'attr'), (' ', 'attr')]

>> Bigrams: 
[[:, cover], [cover, wide], [wide, range], [range, ambiguities], [ambiguities, statistical], [statistical, element], [element, implicit], [implicit,  ]]

>> Trigrams: 
[[:, cover, wide], [cover, wide, range], [wide, range, ambiguities], [range, ambiguities, statistical], [ambiguities, statistical, element], [statistical, element, implicit], [element, implicit,  ]]

>> Noun Phrases are: 
[they, a wide range, ambiguities]

>> Named Entities are: 
[] 


================================ Paragraph 88 =================================

in their approach.   

------------------- Sentence 1 -------------------

in their approach. 


>> Tokens are: 
[approach, .] 

>> PoS Tags are: 
[('approach', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('approach', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[approach, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[their approach]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 89 =================================

2. Levels of NLP  

------------------- Sentence 1 -------------------

2. 


>> Tokens are: 
[2, .] 

>> PoS Tags are: 
[('2', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('2', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[2, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Levels of NLP   


>> Tokens are: 
[Levels, NLP,  ] 

>> PoS Tags are: 
[('Levels', 'NOUN'), ('NLP', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Levels', 'ROOT'), ('NLP', 'pobj'), (' ', 'nummod')]

>> Bigrams: 
[[Levels, NLP], [NLP,  ]]

>> Trigrams: 
[[Levels, NLP,  ]]

>> Noun Phrases are: 
[Levels, NLP]

>> Named Entities are: 
[('NLP', 'ORG')] 


================================ Paragraph 90 =================================

The ‘levels of language’ are one of the most explanatory method for representing the Natural  

------------------- Sentence 1 -------------------

The ‘levels of language’ are one of the most explanatory method for representing the Natural   


>> Tokens are: 
[‘, levels, language, ’, explanatory, method, representing, Natural,  ] 

>> PoS Tags are: 
[('‘', 'PUNCT'), ('levels', 'NOUN'), ('language', 'NOUN'), ('’', 'PUNCT'), ('explanatory', 'ADJ'), ('method', 'NOUN'), ('representing', 'VERB'), ('Natural', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('‘', 'punct'), ('levels', 'nsubj'), ('language', 'pobj'), ('’', 'punct'), ('explanatory', 'amod'), ('method', 'pobj'), ('representing', 'pcomp'), ('Natural', 'amod'), (' ', 'dobj')]

>> Bigrams: 
[[‘, levels], [levels, language], [language, ’], [’, explanatory], [explanatory, method], [method, representing], [representing, Natural], [Natural,  ]]

>> Trigrams: 
[[‘, levels, language], [levels, language, ’], [language, ’, explanatory], [’, explanatory, method], [explanatory, method, representing], [method, representing, Natural], [representing, Natural,  ]]

>> Noun Phrases are: 
[The ‘levels, language, the most explanatory method]

>> Named Entities are: 
[] 


================================ Paragraph 91 =================================

Language processing which helps to generate the NLP text by realising Content Planning,  

------------------- Sentence 1 -------------------

Language processing which helps to generate the NLP text by realising Content Planning,   


>> Tokens are: 
[Language, processing, helps, generate, NLP, text, realising, Content, Planning, ,,  ] 

>> PoS Tags are: 
[('Language', 'NOUN'), ('processing', 'NOUN'), ('helps', 'VERB'), ('generate', 'VERB'), ('NLP', 'PROPN'), ('text', 'NOUN'), ('realising', 'VERB'), ('Content', 'PROPN'), ('Planning', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Language', 'compound'), ('processing', 'ROOT'), ('helps', 'relcl'), ('generate', 'xcomp'), ('NLP', 'compound'), ('text', 'dobj'), ('realising', 'pcomp'), ('Content', 'compound'), ('Planning', 'dobj'), (',', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Language, processing], [processing, helps], [helps, generate], [generate, NLP], [NLP, text], [text, realising], [realising, Content], [Content, Planning], [Planning, ,], [,,  ]]

>> Trigrams: 
[[Language, processing, helps], [processing, helps, generate], [helps, generate, NLP], [generate, NLP, text], [NLP, text, realising], [text, realising, Content], [realising, Content, Planning], [Content, Planning, ,], [Planning, ,,  ]]

>> Noun Phrases are: 
[Language processing, the NLP text, Content Planning]

>> Named Entities are: 
[('NLP', 'ORG'), ('Content Planning', 'PERSON')] 


================================ Paragraph 92 =================================

Sentence Planning and Surface Realization phases (Figure 2).  

------------------- Sentence 1 -------------------

Sentence Planning and Surface Realization phases (Figure 2). 


>> Tokens are: 
[Sentence, Planning, Surface, Realization, phases, (, Figure, 2, ), .] 

>> PoS Tags are: 
[('Sentence', 'PROPN'), ('Planning', 'PROPN'), ('Surface', 'PROPN'), ('Realization', 'PROPN'), ('phases', 'NOUN'), ('(', 'PUNCT'), ('Figure', 'NOUN'), ('2', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Sentence', 'nmod'), ('Planning', 'nsubj'), ('Surface', 'compound'), ('Realization', 'conj'), ('phases', 'ROOT'), ('(', 'punct'), ('Figure', 'parataxis'), ('2', 'nummod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Sentence, Planning], [Planning, Surface], [Surface, Realization], [Realization, phases], [phases, (], [(, Figure], [Figure, 2], [2, )], [), .]]

>> Trigrams: 
[[Sentence, Planning, Surface], [Planning, Surface, Realization], [Surface, Realization, phases], [Realization, phases, (], [phases, (, Figure], [(, Figure, 2], [Figure, 2, )], [2, ), .]]

>> Noun Phrases are: 
[Sentence Planning, Surface Realization]

>> Named Entities are: 
[('2', 'CARDINAL')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 93 =================================

  

------------------- Sentence 1 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 94 =================================

                                      Figure 2. Phases of NLP architecture  

------------------- Sentence 1 -------------------

                                      Figure 2. 


>> Tokens are: 
[                                      , Figure, 2, .] 

>> PoS Tags are: 
[('                                      ', 'SPACE'), ('Figure', 'NOUN'), ('2', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('                                      ', 'nummod'), ('Figure', 'ROOT'), ('2', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[                                      , Figure], [Figure, 2], [2, .]]

>> Trigrams: 
[[                                      , Figure, 2], [Figure, 2, .]]

>> Noun Phrases are: 
[                                      Figure]

>> Named Entities are: 
[('2', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Phases of NLP architecture   


>> Tokens are: 
[Phases, NLP, architecture,  ] 

>> PoS Tags are: 
[('Phases', 'NOUN'), ('NLP', 'PROPN'), ('architecture', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Phases', 'ROOT'), ('NLP', 'compound'), ('architecture', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Phases, NLP], [NLP, architecture], [architecture,  ]]

>> Trigrams: 
[[Phases, NLP, architecture], [NLP, architecture,  ]]

>> Noun Phrases are: 
[Phases, NLP architecture]

>> Named Entities are: 
[('NLP', 'ORG')] 


================================ Paragraph 95 =================================

Linguistic is the science which involves meaning of language, language context and various  

------------------- Sentence 1 -------------------

Linguistic is the science which involves meaning of language, language context and various   


>> Tokens are: 
[Linguistic, science, involves, meaning, language, ,, language, context,  ] 

>> PoS Tags are: 
[('Linguistic', 'ADJ'), ('science', 'NOUN'), ('involves', 'VERB'), ('meaning', 'NOUN'), ('language', 'NOUN'), (',', 'PUNCT'), ('language', 'NOUN'), ('context', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Linguistic', 'nsubj'), ('science', 'attr'), ('involves', 'relcl'), ('meaning', 'dobj'), ('language', 'pobj'), (',', 'punct'), ('language', 'compound'), ('context', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[Linguistic, science], [science, involves], [involves, meaning], [meaning, language], [language, ,], [,, language], [language, context], [context,  ]]

>> Trigrams: 
[[Linguistic, science, involves], [science, involves, meaning], [involves, meaning, language], [meaning, language, ,], [language, ,, language], [,, language, context], [language, context,  ]]

>> Noun Phrases are: 
[the science, meaning, language, language context]

>> Named Entities are: 
[] 


================================ Paragraph 96 =================================

forms of the language. The various important terminologies of Natural Language Processing  

------------------- Sentence 1 -------------------

forms of the language. 


>> Tokens are: 
[forms, language, .] 

>> PoS Tags are: 
[('forms', 'NOUN'), ('language', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('forms', 'ROOT'), ('language', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[forms, language], [language, .]]

>> Trigrams: 
[[forms, language, .]]

>> Noun Phrases are: 
[forms, the language]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

The various important terminologies of Natural Language Processing   


>> Tokens are: 
[important, terminologies, Natural, Language, Processing,  ] 

>> PoS Tags are: 
[('important', 'ADJ'), ('terminologies', 'NOUN'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('important', 'amod'), ('terminologies', 'ROOT'), ('Natural', 'compound'), ('Language', 'compound'), ('Processing', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[important, terminologies], [terminologies, Natural], [Natural, Language], [Language, Processing], [Processing,  ]]

>> Trigrams: 
[[important, terminologies, Natural], [terminologies, Natural, Language], [Natural, Language, Processing], [Language, Processing,  ]]

>> Noun Phrases are: 
[The various important terminologies, Natural Language Processing]

>> Named Entities are: 
[('Natural Language Processing', 'WORK_OF_ART')] 


================================ Paragraph 97 =================================

are: -  

------------------- Sentence 1 -------------------

are: -   


>> Tokens are: 
[:, -,  ] 

>> PoS Tags are: 
[(':', 'PUNCT'), ('-', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(':', 'punct'), ('-', 'punct'), (' ', 'nsubj')]

>> Bigrams: 
[[:, -], [-,  ]]

>> Trigrams: 
[[:, -,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 98 =================================

1. Phonology  

------------------- Sentence 1 -------------------

1. 


>> Tokens are: 
[1, .] 

>> PoS Tags are: 
[('1', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[1, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Phonology   


>> Tokens are: 
[Phonology,  ] 

>> PoS Tags are: 
[('Phonology', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Phonology', 'compound'), (' ', 'ROOT')]

>> Bigrams: 
[[Phonology,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 99 =================================

Phonology is the part of Linguistics which refers to the systematic arrangement of sound. The  

------------------- Sentence 1 -------------------

Phonology is the part of Linguistics which refers to the systematic arrangement of sound. 


>> Tokens are: 
[Phonology, Linguistics, refers, systematic, arrangement, sound, .] 

>> PoS Tags are: 
[('Phonology', 'NOUN'), ('Linguistics', 'PROPN'), ('refers', 'VERB'), ('systematic', 'ADJ'), ('arrangement', 'NOUN'), ('sound', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Phonology', 'nsubj'), ('Linguistics', 'pobj'), ('refers', 'relcl'), ('systematic', 'amod'), ('arrangement', 'pobj'), ('sound', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Phonology, Linguistics], [Linguistics, refers], [refers, systematic], [systematic, arrangement], [arrangement, sound], [sound, .]]

>> Trigrams: 
[[Phonology, Linguistics, refers], [Linguistics, refers, systematic], [refers, systematic, arrangement], [systematic, arrangement, sound], [arrangement, sound, .]]

>> Noun Phrases are: 
[Phonology, the part, Linguistics, the systematic arrangement, sound]

>> Named Entities are: 
[('Linguistics', 'ORG')] 

------------------- Sentence 2 -------------------

The   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 100 =================================

term phonology comes from Ancient Greek and the term phono- which means voice or  

------------------- Sentence 1 -------------------

term phonology comes from Ancient Greek and the term phono- which means voice or   


>> Tokens are: 
[term, phonology, comes, Ancient, Greek, term, phono-, means, voice,  ] 

>> PoS Tags are: 
[('term', 'NOUN'), ('phonology', 'NOUN'), ('comes', 'VERB'), ('Ancient', 'PROPN'), ('Greek', 'PROPN'), ('term', 'NOUN'), ('phono-', 'ADJ'), ('means', 'VERB'), ('voice', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('term', 'compound'), ('phonology', 'nsubj'), ('comes', 'ROOT'), ('Ancient', 'compound'), ('Greek', 'pobj'), ('term', 'conj'), ('phono-', 'appos'), ('means', 'relcl'), ('voice', 'dobj'), (' ', 'conj')]

>> Bigrams: 
[[term, phonology], [phonology, comes], [comes, Ancient], [Ancient, Greek], [Greek, term], [term, phono-], [phono-, means], [means, voice], [voice,  ]]

>> Trigrams: 
[[term, phonology, comes], [phonology, comes, Ancient], [comes, Ancient, Greek], [Ancient, Greek, term], [Greek, term, phono-], [term, phono-, means], [phono-, means, voice], [means, voice,  ]]

>> Noun Phrases are: 
[term phonology, Ancient Greek, the term, voice]

>> Named Entities are: 
[('Ancient Greek', 'PERSON')] 


================================ Paragraph 101 =================================

sound, and the suffix –logy refers to word or speech. In 1993 Nikolai Trubetzkoy stated that  

------------------- Sentence 1 -------------------

sound, and the suffix –logy refers to word or speech. 


>> Tokens are: 
[sound, ,, suffix, –, logy, refers, word, speech, .] 

>> PoS Tags are: 
[('sound', 'NOUN'), (',', 'PUNCT'), ('suffix', 'NOUN'), ('–', 'PUNCT'), ('logy', 'NOUN'), ('refers', 'VERB'), ('word', 'NOUN'), ('speech', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('sound', 'nsubj'), (',', 'punct'), ('suffix', 'conj'), ('–', 'punct'), ('logy', 'nsubj'), ('refers', 'ROOT'), ('word', 'pobj'), ('speech', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[sound, ,], [,, suffix], [suffix, –], [–, logy], [logy, refers], [refers, word], [word, speech], [speech, .]]

>> Trigrams: 
[[sound, ,, suffix], [,, suffix, –], [suffix, –, logy], [–, logy, refers], [logy, refers, word], [refers, word, speech], [word, speech, .]]

>> Noun Phrases are: 
[sound, the suffix, logy, word, speech]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In 1993 Nikolai Trubetzkoy stated that   


>> Tokens are: 
[1993, Nikolai, Trubetzkoy, stated,  ] 

>> PoS Tags are: 
[('1993', 'NUM'), ('Nikolai', 'PROPN'), ('Trubetzkoy', 'PROPN'), ('stated', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('1993', 'pobj'), ('Nikolai', 'compound'), ('Trubetzkoy', 'nsubj'), ('stated', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[1993, Nikolai], [Nikolai, Trubetzkoy], [Trubetzkoy, stated], [stated,  ]]

>> Trigrams: 
[[1993, Nikolai, Trubetzkoy], [Nikolai, Trubetzkoy, stated], [Trubetzkoy, stated,  ]]

>> Noun Phrases are: 
[Nikolai Trubetzkoy]

>> Named Entities are: 
[('1993', 'DATE'), ('Nikolai Trubetzkoy', 'PERSON')] 


================================ Paragraph 102 =================================

Phonology is “the study of sound pertaining to the system of language". Whereas Lass in  

------------------- Sentence 1 -------------------

Phonology is “the study of sound pertaining to the system of language". 


>> Tokens are: 
[Phonology, “, study, sound, pertaining, system, language, ", .] 

>> PoS Tags are: 
[('Phonology', 'NOUN'), ('“', 'PUNCT'), ('study', 'NOUN'), ('sound', 'NOUN'), ('pertaining', 'VERB'), ('system', 'NOUN'), ('language', 'NOUN'), ('"', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Phonology', 'nsubj'), ('“', 'punct'), ('study', 'attr'), ('sound', 'pobj'), ('pertaining', 'acl'), ('system', 'pobj'), ('language', 'pobj'), ('"', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Phonology, “], [“, study], [study, sound], [sound, pertaining], [pertaining, system], [system, language], [language, "], [", .]]

>> Trigrams: 
[[Phonology, “, study], [“, study, sound], [study, sound, pertaining], [sound, pertaining, system], [pertaining, system, language], [system, language, "], [language, ", .]]

>> Noun Phrases are: 
[Phonology, the study, sound, the system, language]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Whereas 


>> Tokens are: 
[] 

>> PoS Tags are: 
[] 

>> Dependency Tags are: 
[]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Lass in   


>> Tokens are: 
[Lass,  ] 

>> PoS Tags are: 
[('Lass', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Lass', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[Lass,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Lass]

>> Named Entities are: 
[] 


================================ Paragraph 103 =================================

1998 wrote that phonology refers broadly with the sounds of language, concerned with the to  

------------------- Sentence 1 -------------------

1998 wrote that phonology refers broadly with the sounds of language, concerned with the to   


>> Tokens are: 
[1998, wrote, phonology, refers, broadly, sounds, language, ,, concerned,  ] 

>> PoS Tags are: 
[('1998', 'NUM'), ('wrote', 'VERB'), ('phonology', 'NOUN'), ('refers', 'VERB'), ('broadly', 'ADV'), ('sounds', 'NOUN'), ('language', 'NOUN'), (',', 'PUNCT'), ('concerned', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('1998', 'nsubj'), ('wrote', 'ROOT'), ('phonology', 'nsubj'), ('refers', 'ccomp'), ('broadly', 'advmod'), ('sounds', 'pobj'), ('language', 'pobj'), (',', 'punct'), ('concerned', 'advcl'), (' ', 'pobj')]

>> Bigrams: 
[[1998, wrote], [wrote, phonology], [phonology, refers], [refers, broadly], [broadly, sounds], [sounds, language], [language, ,], [,, concerned], [concerned,  ]]

>> Trigrams: 
[[1998, wrote, phonology], [wrote, phonology, refers], [phonology, refers, broadly], [refers, broadly, sounds], [broadly, sounds, language], [sounds, language, ,], [language, ,, concerned], [,, concerned,  ]]

>> Noun Phrases are: 
[phonology, the sounds, language]

>> Named Entities are: 
[('1998', 'DATE')] 


================================ Paragraph 104 =================================

lathe sub discipline of linguistics, whereas it could be explained as, "phonology proper is  

------------------- Sentence 1 -------------------

lathe sub discipline of linguistics, whereas it could be explained as, "phonology proper is   


>> Tokens are: 
[lathe, sub, discipline, linguistics, ,, explained, ,, ", phonology, proper,  ] 

>> PoS Tags are: 
[('lathe', 'NOUN'), ('sub', 'NOUN'), ('discipline', 'NOUN'), ('linguistics', 'NOUN'), (',', 'PUNCT'), ('explained', 'VERB'), (',', 'PUNCT'), ('"', 'PUNCT'), ('phonology', 'NOUN'), ('proper', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('lathe', 'nmod'), ('sub', 'compound'), ('discipline', 'nsubj'), ('linguistics', 'pobj'), (',', 'punct'), ('explained', 'advcl'), (',', 'punct'), ('"', 'punct'), ('phonology', 'nsubj'), ('proper', 'amod'), (' ', 'attr')]

>> Bigrams: 
[[lathe, sub], [sub, discipline], [discipline, linguistics], [linguistics, ,], [,, explained], [explained, ,], [,, "], [", phonology], [phonology, proper], [proper,  ]]

>> Trigrams: 
[[lathe, sub, discipline], [sub, discipline, linguistics], [discipline, linguistics, ,], [linguistics, ,, explained], [,, explained, ,], [explained, ,, "], [,, ", phonology], [", phonology, proper], [phonology, proper,  ]]

>> Noun Phrases are: 
[lathe sub discipline, linguistics, it, phonology]

>> Named Entities are: 
[] 


================================ Paragraph 105 =================================

concerned with the function, behaviour and organization of sounds as linguistic items.  

------------------- Sentence 1 -------------------

concerned with the function, behaviour and organization of sounds as linguistic items. 


>> Tokens are: 
[concerned, function, ,, behaviour, organization, sounds, linguistic, items, .] 

>> PoS Tags are: 
[('concerned', 'ADJ'), ('function', 'NOUN'), (',', 'PUNCT'), ('behaviour', 'NOUN'), ('organization', 'NOUN'), ('sounds', 'NOUN'), ('linguistic', 'ADJ'), ('items', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('concerned', 'ROOT'), ('function', 'pobj'), (',', 'punct'), ('behaviour', 'conj'), ('organization', 'conj'), ('sounds', 'pobj'), ('linguistic', 'amod'), ('items', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[concerned, function], [function, ,], [,, behaviour], [behaviour, organization], [organization, sounds], [sounds, linguistic], [linguistic, items], [items, .]]

>> Trigrams: 
[[concerned, function, ,], [function, ,, behaviour], [,, behaviour, organization], [behaviour, organization, sounds], [organization, sounds, linguistic], [sounds, linguistic, items], [linguistic, items, .]]

>> Noun Phrases are: 
[the function, behaviour, organization, sounds, linguistic items]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 106 =================================

Phonology include semantic use of sound to encode meaning of any Human language.   

------------------- Sentence 1 -------------------

Phonology include semantic use of sound to encode meaning of any Human language. 


>> Tokens are: 
[Phonology, include, semantic, use, sound, encode, meaning, Human, language, .] 

>> PoS Tags are: 
[('Phonology', 'NOUN'), ('include', 'VERB'), ('semantic', 'ADJ'), ('use', 'NOUN'), ('sound', 'NOUN'), ('encode', 'ADJ'), ('meaning', 'NOUN'), ('Human', 'PROPN'), ('language', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Phonology', 'nsubj'), ('include', 'ROOT'), ('semantic', 'amod'), ('use', 'dobj'), ('sound', 'pobj'), ('encode', 'amod'), ('meaning', 'dobj'), ('Human', 'compound'), ('language', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Phonology, include], [include, semantic], [semantic, use], [use, sound], [sound, encode], [encode, meaning], [meaning, Human], [Human, language], [language, .]]

>> Trigrams: 
[[Phonology, include, semantic], [include, semantic, use], [semantic, use, sound], [use, sound, encode], [sound, encode, meaning], [encode, meaning, Human], [meaning, Human, language], [Human, language, .]]

>> Noun Phrases are: 
[Phonology, semantic use, sound, to encode meaning, any Human language]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 107 =================================

(Clark et al.,2007) [6].  

------------------- Sentence 1 -------------------

(Clark et al.,2007) 


>> Tokens are: 
[(, Clark, et, al, ., ,2007, )] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('Clark', 'PROPN'), ('et', 'PROPN'), ('al', 'PROPN'), ('.', 'PUNCT'), (',2007', 'PUNCT'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('Clark', 'compound'), ('et', 'compound'), ('al', 'ROOT'), ('.', 'punct'), (',2007', 'punct'), (')', 'punct')]

>> Bigrams: 
[[(, Clark], [Clark, et], [et, al], [al, .], [., ,2007], [,2007, )]]

>> Trigrams: 
[[(, Clark, et], [Clark, et, al], [et, al, .], [al, ., ,2007], [., ,2007, )]]

>> Noun Phrases are: 
[(Clark et al]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

[6]. 


>> Tokens are: 
[[, 6, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('6', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('6', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 6], [6, ]], [], .]]

>> Trigrams: 
[[[, 6, ]], [6, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('6', 'CARDINAL')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 108 =================================

2. Morphology  

------------------- Sentence 1 -------------------

2. 


>> Tokens are: 
[2, .] 

>> PoS Tags are: 
[('2', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('2', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[2, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Morphology   


>> Tokens are: 
[Morphology,  ] 

>> PoS Tags are: 
[('Morphology', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Morphology', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[Morphology,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Morphology]

>> Named Entities are: 
[] 


================================ Paragraph 109 =================================

The different parts of the word represent the smallest units of meaning known as Morphemes.  

------------------- Sentence 1 -------------------

The different parts of the word represent the smallest units of meaning known as Morphemes.   


>> Tokens are: 
[different, parts, word, represent, smallest, units, meaning, known, Morphemes, .,  ] 

>> PoS Tags are: 
[('different', 'ADJ'), ('parts', 'NOUN'), ('word', 'NOUN'), ('represent', 'VERB'), ('smallest', 'ADJ'), ('units', 'NOUN'), ('meaning', 'NOUN'), ('known', 'VERB'), ('Morphemes', 'PROPN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('different', 'amod'), ('parts', 'nsubj'), ('word', 'pobj'), ('represent', 'ROOT'), ('smallest', 'amod'), ('units', 'dobj'), ('meaning', 'pobj'), ('known', 'acl'), ('Morphemes', 'pobj'), ('.', 'punct'), (' ', 'dobj')]

>> Bigrams: 
[[different, parts], [parts, word], [word, represent], [represent, smallest], [smallest, units], [units, meaning], [meaning, known], [known, Morphemes], [Morphemes, .], [.,  ]]

>> Trigrams: 
[[different, parts, word], [parts, word, represent], [word, represent, smallest], [represent, smallest, units], [smallest, units, meaning], [units, meaning, known], [meaning, known, Morphemes], [known, Morphemes, .], [Morphemes, .,  ]]

>> Noun Phrases are: 
[The different parts, the word, the smallest units, meaning, Morphemes]

>> Named Entities are: 
[] 


================================ Paragraph 110 =================================

Morphology which comprise of Nature of words, are initiated by morphemes. An example of  

------------------- Sentence 1 -------------------

Morphology which comprise of Nature of words, are initiated by morphemes. 


>> Tokens are: 
[Morphology, comprise, Nature, words, ,, initiated, morphemes, .] 

>> PoS Tags are: 
[('Morphology', 'NOUN'), ('comprise', 'VERB'), ('Nature', 'PROPN'), ('words', 'NOUN'), (',', 'PUNCT'), ('initiated', 'VERB'), ('morphemes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Morphology', 'nsubjpass'), ('comprise', 'relcl'), ('Nature', 'pobj'), ('words', 'pobj'), (',', 'punct'), ('initiated', 'ROOT'), ('morphemes', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Morphology, comprise], [comprise, Nature], [Nature, words], [words, ,], [,, initiated], [initiated, morphemes], [morphemes, .]]

>> Trigrams: 
[[Morphology, comprise, Nature], [comprise, Nature, words], [Nature, words, ,], [words, ,, initiated], [,, initiated, morphemes], [initiated, morphemes, .]]

>> Noun Phrases are: 
[Morphology, Nature, words, morphemes]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

An example of   


>> Tokens are: 
[example,  ] 

>> PoS Tags are: 
[('example', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('example', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[example,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[An example]

>> Named Entities are: 
[] 


================================ Paragraph 111 =================================

Morpheme could be, the word precancellation can be morphologically scrutinized into three  

------------------- Sentence 1 -------------------

Morpheme could be, the word precancellation can be morphologically scrutinized into three   


>> Tokens are: 
[Morpheme, ,, word, precancellation, morphologically, scrutinized,  ] 

>> PoS Tags are: 
[('Morpheme', 'NOUN'), (',', 'PUNCT'), ('word', 'NOUN'), ('precancellation', 'NOUN'), ('morphologically', 'ADV'), ('scrutinized', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Morpheme', 'nsubj'), (',', 'punct'), ('word', 'compound'), ('precancellation', 'nsubjpass'), ('morphologically', 'advmod'), ('scrutinized', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[Morpheme, ,], [,, word], [word, precancellation], [precancellation, morphologically], [morphologically, scrutinized], [scrutinized,  ]]

>> Trigrams: 
[[Morpheme, ,, word], [,, word, precancellation], [word, precancellation, morphologically], [precancellation, morphologically, scrutinized], [morphologically, scrutinized,  ]]

>> Noun Phrases are: 
[Morpheme, the word precancellation]

>> Named Entities are: 
[('three', 'CARDINAL')] 


================================ Paragraph 112 =================================

separate morphemes: the prefix pre, the root cancella, and the suffix -tion. The interpretation  

------------------- Sentence 1 -------------------

separate morphemes: the prefix pre, the root cancella, and the suffix -tion. 


>> Tokens are: 
[separate, morphemes, :, prefix, pre, ,, root, cancella, ,, suffix, -tion, .] 

>> PoS Tags are: 
[('separate', 'ADJ'), ('morphemes', 'NOUN'), (':', 'PUNCT'), ('prefix', 'NOUN'), ('pre', 'NOUN'), (',', 'PUNCT'), ('root', 'NOUN'), ('cancella', 'NOUN'), (',', 'PUNCT'), ('suffix', 'NOUN'), ('-tion', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('separate', 'amod'), ('morphemes', 'ROOT'), (':', 'punct'), ('prefix', 'compound'), ('pre', 'appos'), (',', 'punct'), ('root', 'compound'), ('cancella', 'conj'), (',', 'punct'), ('suffix', 'compound'), ('-tion', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[separate, morphemes], [morphemes, :], [:, prefix], [prefix, pre], [pre, ,], [,, root], [root, cancella], [cancella, ,], [,, suffix], [suffix, -tion], [-tion, .]]

>> Trigrams: 
[[separate, morphemes, :], [morphemes, :, prefix], [:, prefix, pre], [prefix, pre, ,], [pre, ,, root], [,, root, cancella], [root, cancella, ,], [cancella, ,, suffix], [,, suffix, -tion], [suffix, -tion, .]]

>> Noun Phrases are: 
[separate morphemes, the prefix pre, the root cancella, the suffix -tion]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

The interpretation   


>> Tokens are: 
[interpretation,  ] 

>> PoS Tags are: 
[('interpretation', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('interpretation', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[interpretation,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[The interpretation]

>> Named Entities are: 
[] 


================================ Paragraph 113 =================================

of morpheme stays same across all the words, just to understand the meaning humans can  

------------------- Sentence 1 -------------------

of morpheme stays same across all the words, just to understand the meaning humans can   


>> Tokens are: 
[morpheme, stays, words, ,, understand, meaning, humans,  ] 

>> PoS Tags are: 
[('morpheme', 'NOUN'), ('stays', 'NOUN'), ('words', 'NOUN'), (',', 'PUNCT'), ('understand', 'VERB'), ('meaning', 'NOUN'), ('humans', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('morpheme', 'compound'), ('stays', 'pobj'), ('words', 'pobj'), (',', 'punct'), ('understand', 'ROOT'), ('meaning', 'dobj'), ('humans', 'nsubj'), (' ', 'dobj')]

>> Bigrams: 
[[morpheme, stays], [stays, words], [words, ,], [,, understand], [understand, meaning], [meaning, humans], [humans,  ]]

>> Trigrams: 
[[morpheme, stays, words], [stays, words, ,], [words, ,, understand], [,, understand, meaning], [understand, meaning, humans], [meaning, humans,  ]]

>> Noun Phrases are: 
[morpheme stays, all the words, the meaning, humans]

>> Named Entities are: 
[] 


================================ Paragraph 114 =================================

break any unknown word into morphemes. For example, adding the suffix –ed to a verb,  

------------------- Sentence 1 -------------------

break any unknown word into morphemes. 


>> Tokens are: 
[break, unknown, word, morphemes, .] 

>> PoS Tags are: 
[('break', 'VERB'), ('unknown', 'ADJ'), ('word', 'NOUN'), ('morphemes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('break', 'ROOT'), ('unknown', 'amod'), ('word', 'dobj'), ('morphemes', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[break, unknown], [unknown, word], [word, morphemes], [morphemes, .]]

>> Trigrams: 
[[break, unknown, word], [unknown, word, morphemes], [word, morphemes, .]]

>> Noun Phrases are: 
[any unknown word, morphemes]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

For example, adding the suffix –ed to a verb,   


>> Tokens are: 
[example, ,, adding, suffix, –, ed, verb, ,,  ] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), ('adding', 'VERB'), ('suffix', 'NOUN'), ('–', 'PUNCT'), ('ed', 'NOUN'), ('verb', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct'), ('adding', 'pcomp'), ('suffix', 'dobj'), ('–', 'punct'), ('ed', 'dobj'), ('verb', 'pobj'), (',', 'punct'), (' ', 'pobj')]

>> Bigrams: 
[[example, ,], [,, adding], [adding, suffix], [suffix, –], [–, ed], [ed, verb], [verb, ,], [,,  ]]

>> Trigrams: 
[[example, ,, adding], [,, adding, suffix], [adding, suffix, –], [suffix, –, ed], [–, ed, verb], [ed, verb, ,], [verb, ,,  ]]

>> Noun Phrases are: 
[example, the suffix, ed, a verb]

>> Named Entities are: 
[] 


================================ Paragraph 115 =================================

conveys that the action of the verb took place in the past. The words that cannot be divided  

------------------- Sentence 1 -------------------

conveys that the action of the verb took place in the past. 


>> Tokens are: 
[conveys, action, verb, took, place, past, .] 

>> PoS Tags are: 
[('conveys', 'VERB'), ('action', 'NOUN'), ('verb', 'NOUN'), ('took', 'VERB'), ('place', 'NOUN'), ('past', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('conveys', 'ROOT'), ('action', 'nsubj'), ('verb', 'pobj'), ('took', 'ccomp'), ('place', 'dobj'), ('past', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[conveys, action], [action, verb], [verb, took], [took, place], [place, past], [past, .]]

>> Trigrams: 
[[conveys, action, verb], [action, verb, took], [verb, took, place], [took, place, past], [place, past, .]]

>> Noun Phrases are: 
[the action, the verb, place, the past]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

The words that cannot be divided   


>> Tokens are: 
[words, divided,  ] 

>> PoS Tags are: 
[('words', 'NOUN'), ('divided', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('words', 'ROOT'), ('divided', 'relcl'), (' ', 'punct')]

>> Bigrams: 
[[words, divided], [divided,  ]]

>> Trigrams: 
[[words, divided,  ]]

>> Noun Phrases are: 
[The words]

>> Named Entities are: 
[] 


================================ Paragraph 116 =================================

and have meaning by themselves are called Lexical morpheme (e.g.-: table, chair) The words  

------------------- Sentence 1 -------------------

and have meaning by themselves are called Lexical morpheme (e.g.-: table, chair) 


>> Tokens are: 
[meaning, called, Lexical, morpheme, (, e.g.-, :, table, ,, chair, )] 

>> PoS Tags are: 
[('meaning', 'NOUN'), ('called', 'VERB'), ('Lexical', 'PROPN'), ('morpheme', 'NOUN'), ('(', 'PUNCT'), ('e.g.-', 'NOUN'), (':', 'PUNCT'), ('table', 'NOUN'), (',', 'PUNCT'), ('chair', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('meaning', 'dobj'), ('called', 'ROOT'), ('Lexical', 'compound'), ('morpheme', 'oprd'), ('(', 'punct'), ('e.g.-', 'appos'), (':', 'punct'), ('table', 'appos'), (',', 'punct'), ('chair', 'appos'), (')', 'punct')]

>> Bigrams: 
[[meaning, called], [called, Lexical], [Lexical, morpheme], [morpheme, (], [(, e.g.-], [e.g.-, :], [:, table], [table, ,], [,, chair], [chair, )]]

>> Trigrams: 
[[meaning, called, Lexical], [called, Lexical, morpheme], [Lexical, morpheme, (], [morpheme, (, e.g.-], [(, e.g.-, :], [e.g.-, :, table], [:, table, ,], [table, ,, chair], [,, chair, )]]

>> Noun Phrases are: 
[meaning, themselves, Lexical morpheme, e.g.-, table, chair]

>> Named Entities are: 
[('e.g.-', 'ORG')] 

------------------- Sentence 2 -------------------

The words   


>> Tokens are: 
[words,  ] 

>> PoS Tags are: 
[('words', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('words', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[words,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[The words]

>> Named Entities are: 
[] 


================================ Paragraph 117 =================================

(e.g.- -ed, -ing, -est, -ly, -ful) that are combined with the lexical morpheme are known as  

------------------- Sentence 1 -------------------

(e.g.- -ed, -ing, -est, -ly, -ful) that are combined with the lexical morpheme are known as   


>> Tokens are: 
[(, e.g.-, -ed, ,, -ing, ,, -est, ,, -ly, ,, -ful, ), combined, lexical, morpheme, known,  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('e.g.-', 'VERB'), ('-ed', 'INTJ'), (',', 'PUNCT'), ('-ing', 'INTJ'), (',', 'PUNCT'), ('-est', 'INTJ'), (',', 'PUNCT'), ('-ly', 'INTJ'), (',', 'PUNCT'), ('-ful', 'INTJ'), (')', 'PUNCT'), ('combined', 'VERB'), ('lexical', 'ADJ'), ('morpheme', 'NOUN'), ('known', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('e.g.-', 'dep'), ('-ed', 'punct'), (',', 'punct'), ('-ing', 'intj'), (',', 'punct'), ('-est', 'intj'), (',', 'punct'), ('-ly', 'intj'), (',', 'punct'), ('-ful', 'intj'), (')', 'punct'), ('combined', 'csubjpass'), ('lexical', 'amod'), ('morpheme', 'pobj'), ('known', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[(, e.g.-], [e.g.-, -ed], [-ed, ,], [,, -ing], [-ing, ,], [,, -est], [-est, ,], [,, -ly], [-ly, ,], [,, -ful], [-ful, )], [), combined], [combined, lexical], [lexical, morpheme], [morpheme, known], [known,  ]]

>> Trigrams: 
[[(, e.g.-, -ed], [e.g.-, -ed, ,], [-ed, ,, -ing], [,, -ing, ,], [-ing, ,, -est], [,, -est, ,], [-est, ,, -ly], [,, -ly, ,], [-ly, ,, -ful], [,, -ful, )], [-ful, ), combined], [), combined, lexical], [combined, lexical, morpheme], [lexical, morpheme, known], [morpheme, known,  ]]

>> Noun Phrases are: 
[the lexical morpheme]

>> Named Entities are: 
[('e.g.- -ed', 'ORG')] 


================================ Paragraph 118 =================================

Grammatical morphemes (eg. Worked, Consulting, Smallest, Likely, Use). Those  

------------------- Sentence 1 -------------------

Grammatical morphemes (eg. 


>> Tokens are: 
[Grammatical, morphemes, (, eg, .] 

>> PoS Tags are: 
[('Grammatical', 'ADJ'), ('morphemes', 'NOUN'), ('(', 'PUNCT'), ('eg', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Grammatical', 'amod'), ('morphemes', 'ROOT'), ('(', 'punct'), ('eg', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Grammatical, morphemes], [morphemes, (], [(, eg], [eg, .]]

>> Trigrams: 
[[Grammatical, morphemes, (], [morphemes, (, eg], [(, eg, .]]

>> Noun Phrases are: 
[Grammatical morphemes, (eg]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Worked, Consulting, Smallest, Likely, Use). 


>> Tokens are: 
[Worked, ,, Consulting, ,, Smallest, ,, Likely, ,, Use, ), .] 

>> PoS Tags are: 
[('Worked', 'PROPN'), (',', 'PUNCT'), ('Consulting', 'PROPN'), (',', 'PUNCT'), ('Smallest', 'PROPN'), (',', 'PUNCT'), ('Likely', 'PROPN'), (',', 'PUNCT'), ('Use', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Worked', 'ROOT'), (',', 'punct'), ('Consulting', 'npadvmod'), (',', 'punct'), ('Smallest', 'conj'), (',', 'punct'), ('Likely', 'conj'), (',', 'punct'), ('Use', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Worked, ,], [,, Consulting], [Consulting, ,], [,, Smallest], [Smallest, ,], [,, Likely], [Likely, ,], [,, Use], [Use, )], [), .]]

>> Trigrams: 
[[Worked, ,, Consulting], [,, Consulting, ,], [Consulting, ,, Smallest], [,, Smallest, ,], [Smallest, ,, Likely], [,, Likely, ,], [Likely, ,, Use], [,, Use, )], [Use, ), .]]

>> Noun Phrases are: 
[Worked]

>> Named Entities are: 
[('Smallest', 'GPE')] 

------------------- Sentence 3 -------------------

Those   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 119 =================================

grammatical morphemes that occurs in combination called bound morphemes( eg. -ed, -ing)  

------------------- Sentence 1 -------------------

grammatical morphemes that occurs in combination called bound morphemes( eg. 


>> Tokens are: 
[grammatical, morphemes, occurs, combination, called, bound, morphemes, (, eg, .] 

>> PoS Tags are: 
[('grammatical', 'ADJ'), ('morphemes', 'NOUN'), ('occurs', 'VERB'), ('combination', 'NOUN'), ('called', 'VERB'), ('bound', 'VERB'), ('morphemes', 'NOUN'), ('(', 'PUNCT'), ('eg', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('grammatical', 'amod'), ('morphemes', 'ROOT'), ('occurs', 'relcl'), ('combination', 'pobj'), ('called', 'acl'), ('bound', 'amod'), ('morphemes', 'oprd'), ('(', 'punct'), ('eg', 'oprd'), ('.', 'punct')]

>> Bigrams: 
[[grammatical, morphemes], [morphemes, occurs], [occurs, combination], [combination, called], [called, bound], [bound, morphemes], [morphemes, (], [(, eg], [eg, .]]

>> Trigrams: 
[[grammatical, morphemes, occurs], [morphemes, occurs, combination], [occurs, combination, called], [combination, called, bound], [called, bound, morphemes], [bound, morphemes, (], [morphemes, (, eg], [(, eg, .]]

>> Noun Phrases are: 
[grammatical morphemes, combination, bound morphemes]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

-ed, -ing) 


>> Tokens are: 
[-ed, ,, -ing, )] 

>> PoS Tags are: 
[('-ed', 'INTJ'), (',', 'PUNCT'), ('-ing', 'INTJ'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('-ed', 'ROOT'), (',', 'punct'), ('-ing', 'intj'), (')', 'punct')]

>> Bigrams: 
[[-ed, ,], [,, -ing], [-ing, )]]

>> Trigrams: 
[[-ed, ,, -ing], [,, -ing, )]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 120 =================================

Grammatical morphemes can be divided into bound morphemes and derivational morphemes.     

------------------- Sentence 1 -------------------

Grammatical morphemes can be divided into bound morphemes and derivational morphemes. 


>> Tokens are: 
[Grammatical, morphemes, divided, bound, morphemes, derivational, morphemes, .] 

>> PoS Tags are: 
[('Grammatical', 'ADJ'), ('morphemes', 'NOUN'), ('divided', 'VERB'), ('bound', 'VERB'), ('morphemes', 'NOUN'), ('derivational', 'ADJ'), ('morphemes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Grammatical', 'amod'), ('morphemes', 'nsubjpass'), ('divided', 'ROOT'), ('bound', 'amod'), ('morphemes', 'pobj'), ('derivational', 'amod'), ('morphemes', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Grammatical, morphemes], [morphemes, divided], [divided, bound], [bound, morphemes], [morphemes, derivational], [derivational, morphemes], [morphemes, .]]

>> Trigrams: 
[[Grammatical, morphemes, divided], [morphemes, divided, bound], [divided, bound, morphemes], [bound, morphemes, derivational], [morphemes, derivational, morphemes], [derivational, morphemes, .]]

>> Noun Phrases are: 
[Grammatical morphemes, bound morphemes, derivational morphemes]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

     


>> Tokens are: 
[    ] 

>> PoS Tags are: 
[('    ', 'SPACE')] 

>> Dependency Tags are: 
[('    ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 121 =================================

3. Lexical  

------------------- Sentence 1 -------------------

3. 


>> Tokens are: 
[3, .] 

>> PoS Tags are: 
[('3', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('3', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[3, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('3', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Lexical   


>> Tokens are: 
[Lexical,  ] 

>> PoS Tags are: 
[('Lexical', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Lexical', 'amod'), (' ', 'ROOT')]

>> Bigrams: 
[[Lexical,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 122 =================================

In Lexical, humans, as well as NLP systems, interpret the meaning of individual words.  

------------------- Sentence 1 -------------------

In Lexical, humans, as well as NLP systems, interpret the meaning of individual words.   


>> Tokens are: 
[Lexical, ,, humans, ,, NLP, systems, ,, interpret, meaning, individual, words, .,  ] 

>> PoS Tags are: 
[('Lexical', 'PROPN'), (',', 'PUNCT'), ('humans', 'NOUN'), (',', 'PUNCT'), ('NLP', 'PROPN'), ('systems', 'NOUN'), (',', 'PUNCT'), ('interpret', 'VERB'), ('meaning', 'NOUN'), ('individual', 'ADJ'), ('words', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Lexical', 'pobj'), (',', 'punct'), ('humans', 'nsubj'), (',', 'punct'), ('NLP', 'compound'), ('systems', 'conj'), (',', 'punct'), ('interpret', 'ROOT'), ('meaning', 'dobj'), ('individual', 'amod'), ('words', 'pobj'), ('.', 'punct'), (' ', 'dobj')]

>> Bigrams: 
[[Lexical, ,], [,, humans], [humans, ,], [,, NLP], [NLP, systems], [systems, ,], [,, interpret], [interpret, meaning], [meaning, individual], [individual, words], [words, .], [.,  ]]

>> Trigrams: 
[[Lexical, ,, humans], [,, humans, ,], [humans, ,, NLP], [,, NLP, systems], [NLP, systems, ,], [systems, ,, interpret], [,, interpret, meaning], [interpret, meaning, individual], [meaning, individual, words], [individual, words, .], [words, .,  ]]

>> Noun Phrases are: 
[Lexical, humans, NLP systems, the meaning, individual words]

>> Named Entities are: 
[('NLP', 'ORG')] 


================================ Paragraph 123 =================================

Sundry types of processing bestow to word-level understanding – the first of these being a  

------------------- Sentence 1 -------------------

Sundry types of processing bestow to word-level understanding – the first of these being a   


>> Tokens are: 
[Sundry, types, processing, bestow, word, -, level, understanding, –,  ] 

>> PoS Tags are: 
[('Sundry', 'ADJ'), ('types', 'NOUN'), ('processing', 'NOUN'), ('bestow', 'ADJ'), ('word', 'NOUN'), ('-', 'PUNCT'), ('level', 'NOUN'), ('understanding', 'NOUN'), ('–', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Sundry', 'amod'), ('types', 'nsubj'), ('processing', 'pobj'), ('bestow', 'ROOT'), ('word', 'compound'), ('-', 'punct'), ('level', 'compound'), ('understanding', 'pobj'), ('–', 'punct'), (' ', 'attr')]

>> Bigrams: 
[[Sundry, types], [types, processing], [processing, bestow], [bestow, word], [word, -], [-, level], [level, understanding], [understanding, –], [–,  ]]

>> Trigrams: 
[[Sundry, types, processing], [types, processing, bestow], [processing, bestow, word], [bestow, word, -], [word, -, level], [-, level, understanding], [level, understanding, –], [understanding, –,  ]]

>> Noun Phrases are: 
[Sundry types, processing, word-level understanding]

>> Named Entities are: 
[('Sundry', 'FAC'), ('first', 'ORDINAL')] 


================================ Paragraph 124 =================================

part-of-speech tag to each word. In this processing, words that can act as more than one part- 

------------------- Sentence 1 -------------------

part-of-speech tag to each word. 


>> Tokens are: 
[-, -, speech, tag, word, .] 

>> PoS Tags are: 
[('-', 'PUNCT'), ('-', 'PUNCT'), ('speech', 'NOUN'), ('tag', 'NOUN'), ('word', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('-', 'punct'), ('-', 'punct'), ('speech', 'pobj'), ('tag', 'ROOT'), ('word', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[-, -], [-, speech], [speech, tag], [tag, word], [word, .]]

>> Trigrams: 
[[-, -, speech], [-, speech, tag], [speech, tag, word], [tag, word, .]]

>> Noun Phrases are: 
[speech, each word]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In this processing, words that can act as more than one part- 


>> Tokens are: 
[processing, ,, words, act, part-] 

>> PoS Tags are: 
[('processing', 'NOUN'), (',', 'PUNCT'), ('words', 'NOUN'), ('act', 'VERB'), ('part-', 'ADJ')] 

>> Dependency Tags are: 
[('processing', 'pobj'), (',', 'punct'), ('words', 'ROOT'), ('act', 'relcl'), ('part-', 'advmod')]

>> Bigrams: 
[[processing, ,], [,, words], [words, act], [act, part-]]

>> Trigrams: 
[[processing, ,, words], [,, words, act], [words, act, part-]]

>> Noun Phrases are: 
[this processing]

>> Named Entities are: 
[('more than one', 'CARDINAL')] 


================================ Paragraph 125 =================================

of-speech are assigned the most probable part-of speech tag based on the context in which  

------------------- Sentence 1 -------------------

of-speech are assigned the most probable part-of speech tag based on the context in which   


>> Tokens are: 
[-, speech, assigned, probable, -, speech, tag, based, context,  ] 

>> PoS Tags are: 
[('-', 'PUNCT'), ('speech', 'NOUN'), ('assigned', 'VERB'), ('probable', 'ADJ'), ('-', 'PUNCT'), ('speech', 'NOUN'), ('tag', 'NOUN'), ('based', 'VERB'), ('context', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('-', 'punct'), ('speech', 'pobj'), ('assigned', 'ROOT'), ('probable', 'amod'), ('-', 'punct'), ('speech', 'compound'), ('tag', 'dobj'), ('based', 'acl'), ('context', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[-, speech], [speech, assigned], [assigned, probable], [probable, -], [-, speech], [speech, tag], [tag, based], [based, context], [context,  ]]

>> Trigrams: 
[[-, speech, assigned], [speech, assigned, probable], [assigned, probable, -], [probable, -, speech], [-, speech, tag], [speech, tag, based], [tag, based, context], [based, context,  ]]

>> Noun Phrases are: 
[speech, the most probable part-of speech tag, the context]

>> Named Entities are: 
[] 


================================ Paragraph 126 =================================

they occur. At the lexical level, Semantic representations can be replaced by the words that  

------------------- Sentence 1 -------------------

they occur. 


>> Tokens are: 
[occur, .] 

>> PoS Tags are: 
[('occur', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('occur', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[occur, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[they]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

At the lexical level, Semantic representations can be replaced by the words that   


>> Tokens are: 
[lexical, level, ,, Semantic, representations, replaced, words,  ] 

>> PoS Tags are: 
[('lexical', 'ADJ'), ('level', 'NOUN'), (',', 'PUNCT'), ('Semantic', 'ADJ'), ('representations', 'NOUN'), ('replaced', 'VERB'), ('words', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('lexical', 'amod'), ('level', 'pobj'), (',', 'punct'), ('Semantic', 'amod'), ('representations', 'nsubjpass'), ('replaced', 'ROOT'), ('words', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[lexical, level], [level, ,], [,, Semantic], [Semantic, representations], [representations, replaced], [replaced, words], [words,  ]]

>> Trigrams: 
[[lexical, level, ,], [level, ,, Semantic], [,, Semantic, representations], [Semantic, representations, replaced], [representations, replaced, words], [replaced, words,  ]]

>> Noun Phrases are: 
[the lexical level, Semantic representations, the words]

>> Named Entities are: 
[] 


================================ Paragraph 127 =================================

have one meaning. In NLP system, the nature of the representation varies according to the  

------------------- Sentence 1 -------------------

have one meaning. 


>> Tokens are: 
[meaning, .] 

>> PoS Tags are: 
[('meaning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('meaning', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[meaning, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[one meaning]

>> Named Entities are: 
[('one', 'CARDINAL')] 

------------------- Sentence 2 -------------------

In NLP system, the nature of the representation varies according to the   


>> Tokens are: 
[NLP, system, ,, nature, representation, varies, according,  ] 

>> PoS Tags are: 
[('NLP', 'PROPN'), ('system', 'NOUN'), (',', 'PUNCT'), ('nature', 'NOUN'), ('representation', 'NOUN'), ('varies', 'VERB'), ('according', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('NLP', 'compound'), ('system', 'pobj'), (',', 'punct'), ('nature', 'nsubj'), ('representation', 'pobj'), ('varies', 'ROOT'), ('according', 'prep'), (' ', 'pobj')]

>> Bigrams: 
[[NLP, system], [system, ,], [,, nature], [nature, representation], [representation, varies], [varies, according], [according,  ]]

>> Trigrams: 
[[NLP, system, ,], [system, ,, nature], [,, nature, representation], [nature, representation, varies], [representation, varies, according], [varies, according,  ]]

>> Noun Phrases are: 
[NLP system, the nature, the representation]

>> Named Entities are: 
[('NLP', 'ORG')] 


================================ Paragraph 128 =================================

semantic theory deployed.  

------------------- Sentence 1 -------------------

semantic theory deployed. 


>> Tokens are: 
[semantic, theory, deployed, .] 

>> PoS Tags are: 
[('semantic', 'ADJ'), ('theory', 'NOUN'), ('deployed', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('semantic', 'amod'), ('theory', 'nsubj'), ('deployed', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[semantic, theory], [theory, deployed], [deployed, .]]

>> Trigrams: 
[[semantic, theory, deployed], [theory, deployed, .]]

>> Noun Phrases are: 
[semantic theory]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 129 =================================

4. Syntactic  

------------------- Sentence 1 -------------------

4. 


>> Tokens are: 
[4, .] 

>> PoS Tags are: 
[('4', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('4', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[4, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('4', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Syntactic   


>> Tokens are: 
[Syntactic,  ] 

>> PoS Tags are: 
[('Syntactic', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Syntactic', 'amod'), (' ', 'ROOT')]

>> Bigrams: 
[[Syntactic,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 130 =================================

This level emphasis to scrutinize the words in a sentence so as to uncover the grammatical  

------------------- Sentence 1 -------------------

This level emphasis to scrutinize the words in a sentence so as to uncover the grammatical   


>> Tokens are: 
[level, emphasis, scrutinize, words, sentence, uncover, grammatical,  ] 

>> PoS Tags are: 
[('level', 'NOUN'), ('emphasis', 'NOUN'), ('scrutinize', 'VERB'), ('words', 'NOUN'), ('sentence', 'NOUN'), ('uncover', 'VERB'), ('grammatical', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('level', 'compound'), ('emphasis', 'ROOT'), ('scrutinize', 'relcl'), ('words', 'dobj'), ('sentence', 'pobj'), ('uncover', 'advcl'), ('grammatical', 'amod'), (' ', 'dobj')]

>> Bigrams: 
[[level, emphasis], [emphasis, scrutinize], [scrutinize, words], [words, sentence], [sentence, uncover], [uncover, grammatical], [grammatical,  ]]

>> Trigrams: 
[[level, emphasis, scrutinize], [emphasis, scrutinize, words], [scrutinize, words, sentence], [words, sentence, uncover], [sentence, uncover, grammatical], [uncover, grammatical,  ]]

>> Noun Phrases are: 
[This level emphasis, the words, a sentence]

>> Named Entities are: 
[] 


================================ Paragraph 131 =================================

structure of the sentence. Both grammar and parser are required in this level. The output of  

------------------- Sentence 1 -------------------

structure of the sentence. 


>> Tokens are: 
[structure, sentence, .] 

>> PoS Tags are: 
[('structure', 'NOUN'), ('sentence', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('structure', 'ROOT'), ('sentence', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[structure, sentence], [sentence, .]]

>> Trigrams: 
[[structure, sentence, .]]

>> Noun Phrases are: 
[structure, the sentence]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Both grammar and parser are required in this level. 


>> Tokens are: 
[grammar, parser, required, level, .] 

>> PoS Tags are: 
[('grammar', 'NOUN'), ('parser', 'NOUN'), ('required', 'VERB'), ('level', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('grammar', 'nsubjpass'), ('parser', 'conj'), ('required', 'ROOT'), ('level', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[grammar, parser], [parser, required], [required, level], [level, .]]

>> Trigrams: 
[[grammar, parser, required], [parser, required, level], [required, level, .]]

>> Noun Phrases are: 
[Both grammar, parser, this level]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

The output of   


>> Tokens are: 
[output,  ] 

>> PoS Tags are: 
[('output', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('output', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[output,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[The output]

>> Named Entities are: 
[] 


================================ Paragraph 132 =================================

this level of processing is representation of the sentence that divulge the structural  

------------------- Sentence 1 -------------------

this level of processing is representation of the sentence that divulge the structural   


>> Tokens are: 
[level, processing, representation, sentence, divulge, structural,  ] 

>> PoS Tags are: 
[('level', 'NOUN'), ('processing', 'NOUN'), ('representation', 'NOUN'), ('sentence', 'NOUN'), ('divulge', 'VERB'), ('structural', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('level', 'nsubj'), ('processing', 'pobj'), ('representation', 'attr'), ('sentence', 'pobj'), ('divulge', 'relcl'), ('structural', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[level, processing], [processing, representation], [representation, sentence], [sentence, divulge], [divulge, structural], [structural,  ]]

>> Trigrams: 
[[level, processing, representation], [processing, representation, sentence], [representation, sentence, divulge], [sentence, divulge, structural], [divulge, structural,  ]]

>> Noun Phrases are: 
[this level, processing, representation, the sentence]

>> Named Entities are: 
[] 


================================ Paragraph 133 =================================

dependency relationships between the words. There are various grammars that can be  

------------------- Sentence 1 -------------------

dependency relationships between the words. 


>> Tokens are: 
[dependency, relationships, words, .] 

>> PoS Tags are: 
[('dependency', 'NOUN'), ('relationships', 'NOUN'), ('words', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('dependency', 'compound'), ('relationships', 'ROOT'), ('words', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[dependency, relationships], [relationships, words], [words, .]]

>> Trigrams: 
[[dependency, relationships, words], [relationships, words, .]]

>> Noun Phrases are: 
[dependency relationships, the words]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

There are various grammars that can be   


>> Tokens are: 
[grammars,  ] 

>> PoS Tags are: 
[('grammars', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('grammars', 'attr'), (' ', 'attr')]

>> Bigrams: 
[[grammars,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[various grammars]

>> Named Entities are: 
[] 


================================ Paragraph 134 =================================

impeded, and which in twirl, whack the option of a parser. Not all NLP applications require a  

------------------- Sentence 1 -------------------

impeded, and which in twirl, whack the option of a parser. 


>> Tokens are: 
[impeded, ,, twirl, ,, whack, option, parser, .] 

>> PoS Tags are: 
[('impeded', 'VERB'), (',', 'PUNCT'), ('twirl', 'NOUN'), (',', 'PUNCT'), ('whack', 'VERB'), ('option', 'NOUN'), ('parser', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('impeded', 'ROOT'), (',', 'punct'), ('twirl', 'pobj'), (',', 'punct'), ('whack', 'conj'), ('option', 'dobj'), ('parser', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[impeded, ,], [,, twirl], [twirl, ,], [,, whack], [whack, option], [option, parser], [parser, .]]

>> Trigrams: 
[[impeded, ,, twirl], [,, twirl, ,], [twirl, ,, whack], [,, whack, option], [whack, option, parser], [option, parser, .]]

>> Noun Phrases are: 
[twirl, the option, a parser]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Not all NLP applications require a   


>> Tokens are: 
[NLP, applications, require,  ] 

>> PoS Tags are: 
[('NLP', 'PROPN'), ('applications', 'NOUN'), ('require', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('NLP', 'compound'), ('applications', 'nsubj'), ('require', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[NLP, applications], [applications, require], [require,  ]]

>> Trigrams: 
[[NLP, applications, require], [applications, require,  ]]

>> Noun Phrases are: 
[Not all NLP applications]

>> Named Entities are: 
[('NLP', 'ORG')] 


================================ Paragraph 135 =================================

full parse of sentences, therefore the abide challenges in parsing of prepositional phrase  

------------------- Sentence 1 -------------------

full parse of sentences, therefore the abide challenges in parsing of prepositional phrase   


>> Tokens are: 
[parse, sentences, ,, abide, challenges, parsing, prepositional, phrase,  ] 

>> PoS Tags are: 
[('parse', 'NOUN'), ('sentences', 'NOUN'), (',', 'PUNCT'), ('abide', 'NOUN'), ('challenges', 'VERB'), ('parsing', 'NOUN'), ('prepositional', 'ADJ'), ('phrase', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('parse', 'dep'), ('sentences', 'pobj'), (',', 'punct'), ('abide', 'nsubj'), ('challenges', 'ROOT'), ('parsing', 'pobj'), ('prepositional', 'amod'), ('phrase', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[parse, sentences], [sentences, ,], [,, abide], [abide, challenges], [challenges, parsing], [parsing, prepositional], [prepositional, phrase], [phrase,  ]]

>> Trigrams: 
[[parse, sentences, ,], [sentences, ,, abide], [,, abide, challenges], [abide, challenges, parsing], [challenges, parsing, prepositional], [parsing, prepositional, phrase], [prepositional, phrase,  ]]

>> Noun Phrases are: 
[sentences, the abide, parsing, prepositional phrase]

>> Named Entities are: 
[] 


================================ Paragraph 136 =================================

attachment and conjunction audit no longer impede that plea for which phrasal and clausal  

------------------- Sentence 1 -------------------

attachment and conjunction audit no longer impede that plea for which phrasal and clausal   


>> Tokens are: 
[attachment, conjunction, audit, longer, impede, plea, phrasal, clausal,  ] 

>> PoS Tags are: 
[('attachment', 'NOUN'), ('conjunction', 'NOUN'), ('audit', 'NOUN'), ('longer', 'ADV'), ('impede', 'VERB'), ('plea', 'NOUN'), ('phrasal', 'NOUN'), ('clausal', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('attachment', 'nmod'), ('conjunction', 'conj'), ('audit', 'nsubj'), ('longer', 'advmod'), ('impede', 'ROOT'), ('plea', 'dobj'), ('phrasal', 'relcl'), ('clausal', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[attachment, conjunction], [conjunction, audit], [audit, longer], [longer, impede], [impede, plea], [plea, phrasal], [phrasal, clausal], [clausal,  ]]

>> Trigrams: 
[[attachment, conjunction, audit], [conjunction, audit, longer], [audit, longer, impede], [longer, impede, plea], [impede, plea, phrasal], [plea, phrasal, clausal], [phrasal, clausal,  ]]

>> Noun Phrases are: 
[attachment and conjunction audit, that plea]

>> Named Entities are: 
[] 


================================ Paragraph 137 =================================

dependencies are adequate [7]. Syntax conveys meaning in most languages because order and  

------------------- Sentence 1 -------------------

dependencies are adequate [7]. 


>> Tokens are: 
[dependencies, adequate, [, 7, ], .] 

>> PoS Tags are: 
[('dependencies', 'NOUN'), ('adequate', 'ADJ'), ('[', 'PUNCT'), ('7', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('dependencies', 'nsubj'), ('adequate', 'acomp'), ('[', 'punct'), ('7', 'dep'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[dependencies, adequate], [adequate, [], [[, 7], [7, ]], [], .]]

>> Trigrams: 
[[dependencies, adequate, [], [adequate, [, 7], [[, 7, ]], [7, ], .]]

>> Noun Phrases are: 
[dependencies]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Syntax conveys meaning in most languages because order and   


>> Tokens are: 
[Syntax, conveys, meaning, languages, order,  ] 

>> PoS Tags are: 
[('Syntax', 'PROPN'), ('conveys', 'VERB'), ('meaning', 'VERB'), ('languages', 'NOUN'), ('order', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Syntax', 'nsubj'), ('conveys', 'ROOT'), ('meaning', 'xcomp'), ('languages', 'pobj'), ('order', 'punct'), (' ', 'conj')]

>> Bigrams: 
[[Syntax, conveys], [conveys, meaning], [meaning, languages], [languages, order], [order,  ]]

>> Trigrams: 
[[Syntax, conveys, meaning], [conveys, meaning, languages], [meaning, languages, order], [languages, order,  ]]

>> Noun Phrases are: 
[Syntax, most languages]

>> Named Entities are: 
[] 


================================ Paragraph 138 =================================

dependency contribute to connotation. For example, the two sentences: ‘The cat chased the  

------------------- Sentence 1 -------------------

dependency contribute to connotation. 


>> Tokens are: 
[dependency, contribute, connotation, .] 

>> PoS Tags are: 
[('dependency', 'NOUN'), ('contribute', 'NOUN'), ('connotation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('dependency', 'compound'), ('contribute', 'ROOT'), ('connotation', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[dependency, contribute], [contribute, connotation], [connotation, .]]

>> Trigrams: 
[[dependency, contribute, connotation], [contribute, connotation, .]]

>> Noun Phrases are: 
[dependency contribute, connotation]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

For example, 


>> Tokens are: 
[example, ,] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct')]

>> Bigrams: 
[[example, ,]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[example]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

the two sentences: ‘The cat chased the   


>> Tokens are: 
[sentences, :, ‘, cat, chased,  ] 

>> PoS Tags are: 
[('sentences', 'NOUN'), (':', 'PUNCT'), ('‘', 'PUNCT'), ('cat', 'NOUN'), ('chased', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('sentences', 'ROOT'), (':', 'punct'), ('‘', 'punct'), ('cat', 'nsubj'), ('chased', 'acl'), (' ', 'dobj')]

>> Bigrams: 
[[sentences, :], [:, ‘], [‘, cat], [cat, chased], [chased,  ]]

>> Trigrams: 
[[sentences, :, ‘], [:, ‘, cat], [‘, cat, chased], [cat, chased,  ]]

>> Noun Phrases are: 
[the two sentences, The cat]

>> Named Entities are: 
[('two', 'CARDINAL')] 


================================ Paragraph 139 =================================

mouse.’ and ‘The mouse chased the cat.’ differ only in terms of syntax, yet convey quite  

------------------- Sentence 1 -------------------

mouse.’ 


>> Tokens are: 
[mouse, ., ’] 

>> PoS Tags are: 
[('mouse', 'NOUN'), ('.', 'PUNCT'), ('’', 'PUNCT')] 

>> Dependency Tags are: 
[('mouse', 'ROOT'), ('.', 'punct'), ('’', 'punct')]

>> Bigrams: 
[[mouse, .], [., ’]]

>> Trigrams: 
[[mouse, ., ’]]

>> Noun Phrases are: 
[mouse]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

and ‘The mouse chased the cat.’ differ only in terms of syntax, yet convey quite   


>> Tokens are: 
[‘, mouse, chased, cat, ., ’, differ, terms, syntax, ,, convey,  ] 

>> PoS Tags are: 
[('‘', 'PUNCT'), ('mouse', 'NOUN'), ('chased', 'VERB'), ('cat', 'NOUN'), ('.', 'PUNCT'), ('’', 'PUNCT'), ('differ', 'VERB'), ('terms', 'NOUN'), ('syntax', 'NOUN'), (',', 'PUNCT'), ('convey', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('‘', 'punct'), ('mouse', 'nsubj'), ('chased', 'ROOT'), ('cat', 'dobj'), ('.', 'punct'), ('’', 'punct'), ('differ', 'xcomp'), ('terms', 'pobj'), ('syntax', 'pobj'), (',', 'punct'), ('convey', 'conj'), (' ', 'dobj')]

>> Bigrams: 
[[‘, mouse], [mouse, chased], [chased, cat], [cat, .], [., ’], [’, differ], [differ, terms], [terms, syntax], [syntax, ,], [,, convey], [convey,  ]]

>> Trigrams: 
[[‘, mouse, chased], [mouse, chased, cat], [chased, cat, .], [cat, ., ’], [., ’, differ], [’, differ, terms], [differ, terms, syntax], [terms, syntax, ,], [syntax, ,, convey], [,, convey,  ]]

>> Noun Phrases are: 
[The mouse, the cat, terms, syntax]

>> Named Entities are: 
[] 


================================ Paragraph 140 =================================

different meanings.  

------------------- Sentence 1 -------------------

different meanings. 


>> Tokens are: 
[different, meanings, .] 

>> PoS Tags are: 
[('different', 'ADJ'), ('meanings', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('different', 'amod'), ('meanings', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[different, meanings], [meanings, .]]

>> Trigrams: 
[[different, meanings, .]]

>> Noun Phrases are: 
[different meanings]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 141 =================================

5. Semantic  

------------------- Sentence 1 -------------------

5. 


>> Tokens are: 
[5, .] 

>> PoS Tags are: 
[('5', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('5', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[5, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('5', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Semantic   


>> Tokens are: 
[Semantic,  ] 

>> PoS Tags are: 
[('Semantic', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Semantic', 'amod'), (' ', 'ROOT')]

>> Bigrams: 
[[Semantic,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 142 =================================

In semantic most people think that meaning is determined, however, this is not it is all the  

------------------- Sentence 1 -------------------

In semantic most people think that meaning is determined, however, this is not it is all the   


>> Tokens are: 
[semantic, people, think, meaning, determined, ,, ,,  ] 

>> PoS Tags are: 
[('semantic', 'ADJ'), ('people', 'NOUN'), ('think', 'VERB'), ('meaning', 'NOUN'), ('determined', 'VERB'), (',', 'PUNCT'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('semantic', 'amod'), ('people', 'nsubj'), ('think', 'ccomp'), ('meaning', 'nsubjpass'), ('determined', 'ccomp'), (',', 'punct'), (',', 'punct'), (' ', 'attr')]

>> Bigrams: 
[[semantic, people], [people, think], [think, meaning], [meaning, determined], [determined, ,], [,, ,], [,,  ]]

>> Trigrams: 
[[semantic, people, think], [people, think, meaning], [think, meaning, determined], [meaning, determined, ,], [determined, ,, ,], [,, ,,  ]]

>> Noun Phrases are: 
[semantic most people, meaning, it]

>> Named Entities are: 
[] 


================================ Paragraph 143 =================================

levels that bestow to meaning. Semantic processing determines the possible meanings of a  

------------------- Sentence 1 -------------------

levels that bestow to meaning. 


>> Tokens are: 
[levels, bestow, meaning, .] 

>> PoS Tags are: 
[('levels', 'NOUN'), ('bestow', 'VERB'), ('meaning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('levels', 'ROOT'), ('bestow', 'relcl'), ('meaning', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[levels, bestow], [bestow, meaning], [meaning, .]]

>> Trigrams: 
[[levels, bestow, meaning], [bestow, meaning, .]]

>> Noun Phrases are: 
[levels, meaning]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Semantic processing determines the possible meanings of a   


>> Tokens are: 
[Semantic, processing, determines, possible, meanings,  ] 

>> PoS Tags are: 
[('Semantic', 'ADJ'), ('processing', 'NOUN'), ('determines', 'VERB'), ('possible', 'ADJ'), ('meanings', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Semantic', 'amod'), ('processing', 'nsubj'), ('determines', 'ROOT'), ('possible', 'amod'), ('meanings', 'dobj'), (' ', 'pobj')]

>> Bigrams: 
[[Semantic, processing], [processing, determines], [determines, possible], [possible, meanings], [meanings,  ]]

>> Trigrams: 
[[Semantic, processing, determines], [processing, determines, possible], [determines, possible, meanings], [possible, meanings,  ]]

>> Noun Phrases are: 
[Semantic processing, the possible meanings]

>> Named Entities are: 
[] 


================================ Paragraph 144 =================================

sentence by pivoting on the interactions among word-level meanings in the sentence. This  

------------------- Sentence 1 -------------------

sentence by pivoting on the interactions among word-level meanings in the sentence. 


>> Tokens are: 
[sentence, pivoting, interactions, word, -, level, meanings, sentence, .] 

>> PoS Tags are: 
[('sentence', 'NOUN'), ('pivoting', 'VERB'), ('interactions', 'NOUN'), ('word', 'NOUN'), ('-', 'PUNCT'), ('level', 'NOUN'), ('meanings', 'NOUN'), ('sentence', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('sentence', 'ROOT'), ('pivoting', 'pcomp'), ('interactions', 'pobj'), ('word', 'compound'), ('-', 'punct'), ('level', 'compound'), ('meanings', 'pobj'), ('sentence', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[sentence, pivoting], [pivoting, interactions], [interactions, word], [word, -], [-, level], [level, meanings], [meanings, sentence], [sentence, .]]

>> Trigrams: 
[[sentence, pivoting, interactions], [pivoting, interactions, word], [interactions, word, -], [word, -, level], [-, level, meanings], [level, meanings, sentence], [meanings, sentence, .]]

>> Noun Phrases are: 
[sentence, the interactions, word-level meanings, the sentence]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

This   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 145 =================================

level of processing can incorporate the semantic disambiguation of words with multiple  

------------------- Sentence 1 -------------------

level of processing can incorporate the semantic disambiguation of words with multiple   


>> Tokens are: 
[level, processing, incorporate, semantic, disambiguation, words, multiple,  ] 

>> PoS Tags are: 
[('level', 'NOUN'), ('processing', 'NOUN'), ('incorporate', 'VERB'), ('semantic', 'ADJ'), ('disambiguation', 'NOUN'), ('words', 'NOUN'), ('multiple', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('level', 'nsubj'), ('processing', 'pobj'), ('incorporate', 'ROOT'), ('semantic', 'amod'), ('disambiguation', 'dobj'), ('words', 'pobj'), ('multiple', 'amod'), (' ', 'pobj')]

>> Bigrams: 
[[level, processing], [processing, incorporate], [incorporate, semantic], [semantic, disambiguation], [disambiguation, words], [words, multiple], [multiple,  ]]

>> Trigrams: 
[[level, processing, incorporate], [processing, incorporate, semantic], [incorporate, semantic, disambiguation], [semantic, disambiguation, words], [disambiguation, words, multiple], [words, multiple,  ]]

>> Noun Phrases are: 
[level, processing, the semantic disambiguation, words]

>> Named Entities are: 
[] 


================================ Paragraph 146 =================================

senses; in a cognate way to how syntactic disambiguation of words that can errand as  

------------------- Sentence 1 -------------------

senses; 


>> Tokens are: 
[senses, ;] 

>> PoS Tags are: 
[('senses', 'NOUN'), (';', 'PUNCT')] 

>> Dependency Tags are: 
[('senses', 'ROOT'), (';', 'punct')]

>> Bigrams: 
[[senses, ;]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[senses]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

in a cognate way to how syntactic disambiguation of words that can errand as   


>> Tokens are: 
[cognate, way, syntactic, disambiguation, words, errand,  ] 

>> PoS Tags are: 
[('cognate', 'ADJ'), ('way', 'NOUN'), ('syntactic', 'ADJ'), ('disambiguation', 'NOUN'), ('words', 'NOUN'), ('errand', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('cognate', 'amod'), ('way', 'pobj'), ('syntactic', 'amod'), ('disambiguation', 'pobj'), ('words', 'pobj'), ('errand', 'relcl'), (' ', 'pobj')]

>> Bigrams: 
[[cognate, way], [way, syntactic], [syntactic, disambiguation], [disambiguation, words], [words, errand], [errand,  ]]

>> Trigrams: 
[[cognate, way, syntactic], [way, syntactic, disambiguation], [syntactic, disambiguation, words], [disambiguation, words, errand], [words, errand,  ]]

>> Noun Phrases are: 
[a cognate way, how syntactic disambiguation, words]

>> Named Entities are: 
[] 


================================ Paragraph 147 =================================

multiple parts-of-speech is adroit at the syntactic level. For example, amongst other  

------------------- Sentence 1 -------------------

multiple parts-of-speech is adroit at the syntactic level. 


>> Tokens are: 
[multiple, parts, -, -, speech, adroit, syntactic, level, .] 

>> PoS Tags are: 
[('multiple', 'ADJ'), ('parts', 'NOUN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('speech', 'NOUN'), ('adroit', 'ADV'), ('syntactic', 'ADJ'), ('level', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('multiple', 'amod'), ('parts', 'nsubj'), ('-', 'punct'), ('-', 'punct'), ('speech', 'pobj'), ('adroit', 'advmod'), ('syntactic', 'amod'), ('level', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[multiple, parts], [parts, -], [-, -], [-, speech], [speech, adroit], [adroit, syntactic], [syntactic, level], [level, .]]

>> Trigrams: 
[[multiple, parts, -], [parts, -, -], [-, -, speech], [-, speech, adroit], [speech, adroit, syntactic], [adroit, syntactic, level], [syntactic, level, .]]

>> Noun Phrases are: 
[multiple parts, speech, the syntactic level]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

For example, 


>> Tokens are: 
[example, ,] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct')]

>> Bigrams: 
[[example, ,]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[example]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

amongst other   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'pobj')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 148 =================================

meanings, ‘file’ as a noun can mean either a binder for gathering papers, or a tool to form  

------------------- Sentence 1 -------------------

meanings, ‘file’ as a noun can mean either a binder for gathering papers, or a tool to form   


>> Tokens are: 
[meanings, ,, ‘, file, ’, noun, mean, binder, gathering, papers, ,, tool, form,  ] 

>> PoS Tags are: 
[('meanings', 'NOUN'), (',', 'PUNCT'), ('‘', 'PUNCT'), ('file', 'NOUN'), ('’', 'PUNCT'), ('noun', 'NOUN'), ('mean', 'VERB'), ('binder', 'NOUN'), ('gathering', 'VERB'), ('papers', 'NOUN'), (',', 'PUNCT'), ('tool', 'NOUN'), ('form', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('meanings', 'ROOT'), (',', 'punct'), ('‘', 'punct'), ('file', 'appos'), ('’', 'punct'), ('noun', 'nsubj'), ('mean', 'advcl'), ('binder', 'dobj'), ('gathering', 'pcomp'), ('papers', 'dobj'), (',', 'punct'), ('tool', 'conj'), ('form', 'relcl'), (' ', 'dobj')]

>> Bigrams: 
[[meanings, ,], [,, ‘], [‘, file], [file, ’], [’, noun], [noun, mean], [mean, binder], [binder, gathering], [gathering, papers], [papers, ,], [,, tool], [tool, form], [form,  ]]

>> Trigrams: 
[[meanings, ,, ‘], [,, ‘, file], [‘, file, ’], [file, ’, noun], [’, noun, mean], [noun, mean, binder], [mean, binder, gathering], [binder, gathering, papers], [gathering, papers, ,], [papers, ,, tool], [,, tool, form], [tool, form,  ]]

>> Noun Phrases are: 
[meanings, file, a noun, either a binder, papers, a tool]

>> Named Entities are: 
[] 


================================ Paragraph 149 =================================

one’s fingernails, or a line of individuals in a queue (Elizabeth D. Liddy,2001) [7]. The  

------------------- Sentence 1 -------------------

one’s fingernails, or a line of individuals in a queue (Elizabeth D. Liddy,2001) 


>> Tokens are: 
[fingernails, ,, line, individuals, queue, (, Elizabeth, D., Liddy,2001, )] 

>> PoS Tags are: 
[('fingernails', 'NOUN'), (',', 'PUNCT'), ('line', 'NOUN'), ('individuals', 'NOUN'), ('queue', 'NOUN'), ('(', 'PUNCT'), ('Elizabeth', 'PROPN'), ('D.', 'PROPN'), ('Liddy,2001', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('fingernails', 'ROOT'), (',', 'punct'), ('line', 'conj'), ('individuals', 'pobj'), ('queue', 'pobj'), ('(', 'punct'), ('Elizabeth', 'compound'), ('D.', 'compound'), ('Liddy,2001', 'appos'), (')', 'punct')]

>> Bigrams: 
[[fingernails, ,], [,, line], [line, individuals], [individuals, queue], [queue, (], [(, Elizabeth], [Elizabeth, D.], [D., Liddy,2001], [Liddy,2001, )]]

>> Trigrams: 
[[fingernails, ,, line], [,, line, individuals], [line, individuals, queue], [individuals, queue, (], [queue, (, Elizabeth], [(, Elizabeth, D.], [Elizabeth, D., Liddy,2001], [D., Liddy,2001, )]]

>> Noun Phrases are: 
[one, a line, individuals, a queue, (Elizabeth D. Liddy,2001]

>> Named Entities are: 
[('Elizabeth D. Liddy,2001', 'PERSON')] 

------------------- Sentence 2 -------------------

[7]. 


>> Tokens are: 
[[, 7, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('7', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('7', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 7], [7, ]], [], .]]

>> Trigrams: 
[[[, 7, ]], [7, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

The   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 150 =================================

semantic level scrutinizes words for their dictionary elucidation, but also for the elucidation  

------------------- Sentence 1 -------------------

semantic level scrutinizes words for their dictionary elucidation, but also for the elucidation   


>> Tokens are: 
[semantic, level, scrutinizes, words, dictionary, elucidation, ,, elucidation,  ] 

>> PoS Tags are: 
[('semantic', 'ADJ'), ('level', 'NOUN'), ('scrutinizes', 'VERB'), ('words', 'NOUN'), ('dictionary', 'ADJ'), ('elucidation', 'NOUN'), (',', 'PUNCT'), ('elucidation', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('semantic', 'amod'), ('level', 'nsubj'), ('scrutinizes', 'ROOT'), ('words', 'dobj'), ('dictionary', 'amod'), ('elucidation', 'pobj'), (',', 'punct'), ('elucidation', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[semantic, level], [level, scrutinizes], [scrutinizes, words], [words, dictionary], [dictionary, elucidation], [elucidation, ,], [,, elucidation], [elucidation,  ]]

>> Trigrams: 
[[semantic, level, scrutinizes], [level, scrutinizes, words], [scrutinizes, words, dictionary], [words, dictionary, elucidation], [dictionary, elucidation, ,], [elucidation, ,, elucidation], [,, elucidation,  ]]

>> Noun Phrases are: 
[semantic level, words, their dictionary elucidation, the elucidation]

>> Named Entities are: 
[] 


================================ Paragraph 151 =================================

they derive from the milieu of the sentence. Semantics milieu that most words have more  

------------------- Sentence 1 -------------------

they derive from the milieu of the sentence. 


>> Tokens are: 
[derive, milieu, sentence, .] 

>> PoS Tags are: 
[('derive', 'VERB'), ('milieu', 'NOUN'), ('sentence', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('derive', 'ROOT'), ('milieu', 'pobj'), ('sentence', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[derive, milieu], [milieu, sentence], [sentence, .]]

>> Trigrams: 
[[derive, milieu, sentence], [milieu, sentence, .]]

>> Noun Phrases are: 
[they, the milieu, the sentence]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Semantics milieu that most words have more   


>> Tokens are: 
[Semantics, milieu, words,  ] 

>> PoS Tags are: 
[('Semantics', 'NOUN'), ('milieu', 'NOUN'), ('words', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Semantics', 'compound'), ('milieu', 'ROOT'), ('words', 'nsubj'), (' ', 'dobj')]

>> Bigrams: 
[[Semantics, milieu], [milieu, words], [words,  ]]

>> Trigrams: 
[[Semantics, milieu, words], [milieu, words,  ]]

>> Noun Phrases are: 
[Semantics milieu, most words]

>> Named Entities are: 
[] 


================================ Paragraph 152 =================================

than one elucidation but that we can spot the appropriate one by looking at the rest of the  

------------------- Sentence 1 -------------------

than one elucidation but that we can spot the appropriate one by looking at the rest of the   


>> Tokens are: 
[elucidation, spot, appropriate, looking, rest,  ] 

>> PoS Tags are: 
[('elucidation', 'NOUN'), ('spot', 'VERB'), ('appropriate', 'ADJ'), ('looking', 'VERB'), ('rest', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('elucidation', 'pobj'), ('spot', 'conj'), ('appropriate', 'amod'), ('looking', 'pcomp'), ('rest', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[elucidation, spot], [spot, appropriate], [appropriate, looking], [looking, rest], [rest,  ]]

>> Trigrams: 
[[elucidation, spot, appropriate], [spot, appropriate, looking], [appropriate, looking, rest], [looking, rest,  ]]

>> Noun Phrases are: 
[one elucidation, we, the appropriate one, the rest]

>> Named Entities are: 
[('one', 'CARDINAL')] 


================================ Paragraph 153 =================================

sentence. [8]  

------------------- Sentence 1 -------------------

sentence. 


>> Tokens are: 
[sentence, .] 

>> PoS Tags are: 
[('sentence', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('sentence', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[sentence, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[sentence]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

[8] 


>> Tokens are: 
[[, 8, ]] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('8', 'NUM'), (']', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('8', 'ROOT'), (']', 'punct')]

>> Bigrams: 
[[[, 8], [8, ]]]

>> Trigrams: 
[[[, 8, ]]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('8', 'CARDINAL')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 154 =================================

6. Discourse  

------------------- Sentence 1 -------------------

6. 


>> Tokens are: 
[6, .] 

>> PoS Tags are: 
[('6', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('6', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[6, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('6', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Discourse   


>> Tokens are: 
[Discourse,  ] 

>> PoS Tags are: 
[('Discourse', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Discourse', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[Discourse,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 155 =================================

While syntax and semantics travail with sentence-length units, the discourse level of NLP  

------------------- Sentence 1 -------------------

While syntax and semantics travail with sentence-length units, the discourse level of NLP   


>> Tokens are: 
[syntax, semantics, travail, sentence, -, length, units, ,, discourse, level, NLP,  ] 

>> PoS Tags are: 
[('syntax', 'NOUN'), ('semantics', 'NOUN'), ('travail', 'VERB'), ('sentence', 'NOUN'), ('-', 'PUNCT'), ('length', 'NOUN'), ('units', 'NOUN'), (',', 'PUNCT'), ('discourse', 'NOUN'), ('level', 'NOUN'), ('NLP', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('syntax', 'nsubj'), ('semantics', 'conj'), ('travail', 'advcl'), ('sentence', 'compound'), ('-', 'punct'), ('length', 'compound'), ('units', 'pobj'), (',', 'punct'), ('discourse', 'compound'), ('level', 'ROOT'), ('NLP', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[syntax, semantics], [semantics, travail], [travail, sentence], [sentence, -], [-, length], [length, units], [units, ,], [,, discourse], [discourse, level], [level, NLP], [NLP,  ]]

>> Trigrams: 
[[syntax, semantics, travail], [semantics, travail, sentence], [travail, sentence, -], [sentence, -, length], [-, length, units], [length, units, ,], [units, ,, discourse], [,, discourse, level], [discourse, level, NLP], [level, NLP,  ]]

>> Noun Phrases are: 
[syntax, semantics, sentence-length units, NLP]

>> Named Entities are: 
[('NLP', 'ORG')] 


================================ Paragraph 156 =================================

travail with units of text longer than a sentence i.e, it does not interpret multi sentence texts as  

------------------- Sentence 1 -------------------

travail with units of text longer than a sentence i.e, it does not interpret multi sentence texts as   


>> Tokens are: 
[travail, units, text, longer, sentence, i.e, ,, interpret, multi, sentence, texts,  ] 

>> PoS Tags are: 
[('travail', 'VERB'), ('units', 'NOUN'), ('text', 'NOUN'), ('longer', 'ADV'), ('sentence', 'NOUN'), ('i.e', 'X'), (',', 'PUNCT'), ('interpret', 'VERB'), ('multi', 'ADJ'), ('sentence', 'NOUN'), ('texts', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('travail', 'advcl'), ('units', 'pobj'), ('text', 'pobj'), ('longer', 'advmod'), ('sentence', 'pobj'), ('i.e', 'npadvmod'), (',', 'punct'), ('interpret', 'ROOT'), ('multi', 'amod'), ('sentence', 'compound'), ('texts', 'dobj'), (' ', 'pobj')]

>> Bigrams: 
[[travail, units], [units, text], [text, longer], [longer, sentence], [sentence, i.e], [i.e, ,], [,, interpret], [interpret, multi], [multi, sentence], [sentence, texts], [texts,  ]]

>> Trigrams: 
[[travail, units, text], [units, text, longer], [text, longer, sentence], [longer, sentence, i.e], [sentence, i.e, ,], [i.e, ,, interpret], [,, interpret, multi], [interpret, multi, sentence], [multi, sentence, texts], [sentence, texts,  ]]

>> Noun Phrases are: 
[units, text, a sentence, it, multi sentence texts]

>> Named Entities are: 
[] 


================================ Paragraph 157 =================================

just sequence sentences, apiece of which can be elucidated singly. Rather, discourse focuses  

------------------- Sentence 1 -------------------

just sequence sentences, apiece of which can be elucidated singly. 


>> Tokens are: 
[sequence, sentences, ,, apiece, elucidated, singly, .] 

>> PoS Tags are: 
[('sequence', 'NOUN'), ('sentences', 'NOUN'), (',', 'PUNCT'), ('apiece', 'ADV'), ('elucidated', 'VERB'), ('singly', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('sequence', 'compound'), ('sentences', 'nsubjpass'), (',', 'punct'), ('apiece', 'advmod'), ('elucidated', 'ROOT'), ('singly', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[sequence, sentences], [sentences, ,], [,, apiece], [apiece, elucidated], [elucidated, singly], [singly, .]]

>> Trigrams: 
[[sequence, sentences, ,], [sentences, ,, apiece], [,, apiece, elucidated], [apiece, elucidated, singly], [elucidated, singly, .]]

>> Noun Phrases are: 
[just sequence sentences]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Rather, discourse focuses   


>> Tokens are: 
[,, discourse, focuses,  ] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('discourse', 'NOUN'), ('focuses', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(',', 'punct'), ('discourse', 'nsubj'), ('focuses', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[,, discourse], [discourse, focuses], [focuses,  ]]

>> Trigrams: 
[[,, discourse, focuses], [discourse, focuses,  ]]

>> Noun Phrases are: 
[discourse]

>> Named Entities are: 
[] 


================================ Paragraph 158 =================================

on the properties of the text as a whole that convey meaning by making connections between  

------------------- Sentence 1 -------------------

on the properties of the text as a whole that convey meaning by making connections between   


>> Tokens are: 
[properties, text, convey, meaning, making, connections,  ] 

>> PoS Tags are: 
[('properties', 'NOUN'), ('text', 'NOUN'), ('convey', 'VERB'), ('meaning', 'NOUN'), ('making', 'VERB'), ('connections', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('properties', 'pobj'), ('text', 'pobj'), ('convey', 'relcl'), ('meaning', 'dobj'), ('making', 'pcomp'), ('connections', 'dobj'), (' ', 'pobj')]

>> Bigrams: 
[[properties, text], [text, convey], [convey, meaning], [meaning, making], [making, connections], [connections,  ]]

>> Trigrams: 
[[properties, text, convey], [text, convey, meaning], [convey, meaning, making], [meaning, making, connections], [making, connections,  ]]

>> Noun Phrases are: 
[the properties, the text, a whole, meaning, connections]

>> Named Entities are: 
[] 


================================ Paragraph 159 =================================

component sentences (Elizabeth D. Liddy,2001) [7]. The two of the most common levels are  

------------------- Sentence 1 -------------------

component sentences (Elizabeth D. Liddy,2001) 


>> Tokens are: 
[component, sentences, (, Elizabeth, D., Liddy,2001, )] 

>> PoS Tags are: 
[('component', 'NOUN'), ('sentences', 'NOUN'), ('(', 'PUNCT'), ('Elizabeth', 'PROPN'), ('D.', 'PROPN'), ('Liddy,2001', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('component', 'compound'), ('sentences', 'ROOT'), ('(', 'punct'), ('Elizabeth', 'compound'), ('D.', 'compound'), ('Liddy,2001', 'appos'), (')', 'punct')]

>> Bigrams: 
[[component, sentences], [sentences, (], [(, Elizabeth], [Elizabeth, D.], [D., Liddy,2001], [Liddy,2001, )]]

>> Trigrams: 
[[component, sentences, (], [sentences, (, Elizabeth], [(, Elizabeth, D.], [Elizabeth, D., Liddy,2001], [D., Liddy,2001, )]]

>> Noun Phrases are: 
[component sentences, (Elizabeth D. Liddy,2001]

>> Named Entities are: 
[('Elizabeth D. Liddy,2001', 'PERSON')] 

------------------- Sentence 2 -------------------

[7]. 


>> Tokens are: 
[[, 7, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('7', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('7', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 7], [7, ]], [], .]]

>> Trigrams: 
[[[, 7, ]], [7, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

The two of the most common levels are   


>> Tokens are: 
[common, levels,  ] 

>> PoS Tags are: 
[('common', 'ADJ'), ('levels', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('common', 'amod'), ('levels', 'pobj'), (' ', 'attr')]

>> Bigrams: 
[[common, levels], [levels,  ]]

>> Trigrams: 
[[common, levels,  ]]

>> Noun Phrases are: 
[the most common levels]

>> Named Entities are: 
[('two', 'CARDINAL')] 


================================ Paragraph 160 =================================

Anaphora Resolution - Anaphora resolution is the replacing of words such as pronouns,  

------------------- Sentence 1 -------------------

Anaphora Resolution - Anaphora resolution is the replacing of words such as pronouns,   


>> Tokens are: 
[Anaphora, Resolution, -, Anaphora, resolution, replacing, words, pronouns, ,,  ] 

>> PoS Tags are: 
[('Anaphora', 'PROPN'), ('Resolution', 'PROPN'), ('-', 'PUNCT'), ('Anaphora', 'PROPN'), ('resolution', 'NOUN'), ('replacing', 'NOUN'), ('words', 'NOUN'), ('pronouns', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Anaphora', 'compound'), ('Resolution', 'compound'), ('-', 'punct'), ('Anaphora', 'compound'), ('resolution', 'nsubj'), ('replacing', 'attr'), ('words', 'pobj'), ('pronouns', 'pobj'), (',', 'punct'), (' ', 'attr')]

>> Bigrams: 
[[Anaphora, Resolution], [Resolution, -], [-, Anaphora], [Anaphora, resolution], [resolution, replacing], [replacing, words], [words, pronouns], [pronouns, ,], [,,  ]]

>> Trigrams: 
[[Anaphora, Resolution, -], [Resolution, -, Anaphora], [-, Anaphora, resolution], [Anaphora, resolution, replacing], [resolution, replacing, words], [replacing, words, pronouns], [words, pronouns, ,], [pronouns, ,,  ]]

>> Noun Phrases are: 
[Anaphora Resolution - Anaphora resolution, the replacing, words, pronouns]

>> Named Entities are: 
[('Anaphora Resolution - Anaphora', 'PERSON')] 


================================ Paragraph 161 =================================

which are semantically stranded, with the pertinent entity to which they refer. Discourse/Text  

------------------- Sentence 1 -------------------

which are semantically stranded, with the pertinent entity to which they refer. 


>> Tokens are: 
[semantically, stranded, ,, pertinent, entity, refer, .] 

>> PoS Tags are: 
[('semantically', 'ADV'), ('stranded', 'VERB'), (',', 'PUNCT'), ('pertinent', 'ADJ'), ('entity', 'NOUN'), ('refer', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('semantically', 'advmod'), ('stranded', 'ROOT'), (',', 'punct'), ('pertinent', 'amod'), ('entity', 'pobj'), ('refer', 'relcl'), ('.', 'punct')]

>> Bigrams: 
[[semantically, stranded], [stranded, ,], [,, pertinent], [pertinent, entity], [entity, refer], [refer, .]]

>> Trigrams: 
[[semantically, stranded, ,], [stranded, ,, pertinent], [,, pertinent, entity], [pertinent, entity, refer], [entity, refer, .]]

>> Noun Phrases are: 
[the pertinent entity, they]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Discourse/Text   


>> Tokens are: 
[Discourse, /, Text,  ] 

>> PoS Tags are: 
[('Discourse', 'PROPN'), ('/', 'SYM'), ('Text', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Discourse', 'nmod'), ('/', 'punct'), ('Text', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[Discourse, /], [/, Text], [Text,  ]]

>> Trigrams: 
[[Discourse, /, Text], [/, Text,  ]]

>> Noun Phrases are: 
[Discourse/Text]

>> Named Entities are: 
[] 


================================ Paragraph 162 =================================

Structure Recognition - Discourse/text structure recognition sway the functions of sentences  

------------------- Sentence 1 -------------------

Structure Recognition - Discourse/text structure recognition sway the functions of sentences   


>> Tokens are: 
[Structure, Recognition, -, Discourse, /, text, structure, recognition, sway, functions, sentences,  ] 

>> PoS Tags are: 
[('Structure', 'NOUN'), ('Recognition', 'PROPN'), ('-', 'PUNCT'), ('Discourse', 'PROPN'), ('/', 'SYM'), ('text', 'NOUN'), ('structure', 'NOUN'), ('recognition', 'NOUN'), ('sway', 'VERB'), ('functions', 'NOUN'), ('sentences', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Structure', 'compound'), ('Recognition', 'nmod'), ('-', 'punct'), ('Discourse', 'nmod'), ('/', 'punct'), ('text', 'compound'), ('structure', 'compound'), ('recognition', 'nsubj'), ('sway', 'ROOT'), ('functions', 'dobj'), ('sentences', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Structure, Recognition], [Recognition, -], [-, Discourse], [Discourse, /], [/, text], [text, structure], [structure, recognition], [recognition, sway], [sway, functions], [functions, sentences], [sentences,  ]]

>> Trigrams: 
[[Structure, Recognition, -], [Recognition, -, Discourse], [-, Discourse, /], [Discourse, /, text], [/, text, structure], [text, structure, recognition], [structure, recognition, sway], [recognition, sway, functions], [sway, functions, sentences], [functions, sentences,  ]]

>> Noun Phrases are: 
[Structure Recognition - Discourse/text structure recognition, the functions, sentences]

>> Named Entities are: 
[] 


================================ Paragraph 163 =================================

in the text, which, in turn, adds to the meaningful representation of the text.  

------------------- Sentence 1 -------------------

in the text, which, in turn, adds to the meaningful representation of the text. 


>> Tokens are: 
[text, ,, ,, turn, ,, adds, meaningful, representation, text, .] 

>> PoS Tags are: 
[('text', 'NOUN'), (',', 'PUNCT'), (',', 'PUNCT'), ('turn', 'NOUN'), (',', 'PUNCT'), ('adds', 'VERB'), ('meaningful', 'ADJ'), ('representation', 'NOUN'), ('text', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('text', 'pobj'), (',', 'punct'), (',', 'punct'), ('turn', 'pobj'), (',', 'punct'), ('adds', 'relcl'), ('meaningful', 'amod'), ('representation', 'pobj'), ('text', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[text, ,], [,, ,], [,, turn], [turn, ,], [,, adds], [adds, meaningful], [meaningful, representation], [representation, text], [text, .]]

>> Trigrams: 
[[text, ,, ,], [,, ,, turn], [,, turn, ,], [turn, ,, adds], [,, adds, meaningful], [adds, meaningful, representation], [meaningful, representation, text], [representation, text, .]]

>> Noun Phrases are: 
[the text, turn, the meaningful representation, the text]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 164 =================================

7. Pragmatic: 

------------------- Sentence 1 -------------------

7. 


>> Tokens are: 
[7, .] 

>> PoS Tags are: 
[('7', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('7', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[7, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('7', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Pragmatic: 


>> Tokens are: 
[Pragmatic, :] 

>> PoS Tags are: 
[('Pragmatic', 'ADJ'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Pragmatic', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[Pragmatic, :]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 165 =================================

Pragmatic is concerned with the firm use of language in situations and utilizes nub over and  

------------------- Sentence 1 -------------------

Pragmatic is concerned with the firm use of language in situations and utilizes nub over and   


>> Tokens are: 
[Pragmatic, concerned, firm, use, language, situations, utilizes, nub,  ] 

>> PoS Tags are: 
[('Pragmatic', 'ADJ'), ('concerned', 'VERB'), ('firm', 'ADJ'), ('use', 'NOUN'), ('language', 'NOUN'), ('situations', 'NOUN'), ('utilizes', 'VERB'), ('nub', 'ADV'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Pragmatic', 'nsubjpass'), ('concerned', 'ROOT'), ('firm', 'amod'), ('use', 'pobj'), ('language', 'pobj'), ('situations', 'pobj'), ('utilizes', 'conj'), ('nub', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[Pragmatic, concerned], [concerned, firm], [firm, use], [use, language], [language, situations], [situations, utilizes], [utilizes, nub], [nub,  ]]

>> Trigrams: 
[[Pragmatic, concerned, firm], [concerned, firm, use], [firm, use, language], [use, language, situations], [language, situations, utilizes], [situations, utilizes, nub], [utilizes, nub,  ]]

>> Noun Phrases are: 
[the firm use, language, situations]

>> Named Entities are: 
[] 


================================ Paragraph 166 =================================

above the nub of the text for understanding the goal and to explain how extra meaning is read  

------------------- Sentence 1 -------------------

above the nub of the text for understanding the goal and to explain how extra meaning is read   


>> Tokens are: 
[nub, text, understanding, goal, explain, extra, meaning, read,  ] 

>> PoS Tags are: 
[('nub', 'NOUN'), ('text', 'NOUN'), ('understanding', 'VERB'), ('goal', 'NOUN'), ('explain', 'VERB'), ('extra', 'ADJ'), ('meaning', 'NOUN'), ('read', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('nub', 'pobj'), ('text', 'pobj'), ('understanding', 'pcomp'), ('goal', 'dobj'), ('explain', 'conj'), ('extra', 'amod'), ('meaning', 'nsubjpass'), ('read', 'ccomp'), (' ', 'pobj')]

>> Bigrams: 
[[nub, text], [text, understanding], [understanding, goal], [goal, explain], [explain, extra], [extra, meaning], [meaning, read], [read,  ]]

>> Trigrams: 
[[nub, text, understanding], [text, understanding, goal], [understanding, goal, explain], [goal, explain, extra], [explain, extra, meaning], [extra, meaning, read], [meaning, read,  ]]

>> Noun Phrases are: 
[the nub, the text, the goal, how extra meaning]

>> Named Entities are: 
[] 


================================ Paragraph 167 =================================

into texts without literally being encoded in them. This requisite much world knowledge,  

------------------- Sentence 1 -------------------

into texts without literally being encoded in them. 


>> Tokens are: 
[texts, literally, encoded, .] 

>> PoS Tags are: 
[('texts', 'NOUN'), ('literally', 'ADV'), ('encoded', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('texts', 'pobj'), ('literally', 'advmod'), ('encoded', 'pcomp'), ('.', 'punct')]

>> Bigrams: 
[[texts, literally], [literally, encoded], [encoded, .]]

>> Trigrams: 
[[texts, literally, encoded], [literally, encoded, .]]

>> Noun Phrases are: 
[texts, them]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

This requisite much world knowledge,   


>> Tokens are: 
[requisite, world, knowledge, ,,  ] 

>> PoS Tags are: 
[('requisite', 'ADJ'), ('world', 'NOUN'), ('knowledge', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('requisite', 'amod'), ('world', 'compound'), ('knowledge', 'ROOT'), (',', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[requisite, world], [world, knowledge], [knowledge, ,], [,,  ]]

>> Trigrams: 
[[requisite, world, knowledge], [world, knowledge, ,], [knowledge, ,,  ]]

>> Noun Phrases are: 
[This requisite much world knowledge]

>> Named Entities are: 
[] 


================================ Paragraph 168 =================================

including the understanding of intentions, plans, and goals. For example, the following two  

------------------- Sentence 1 -------------------

including the understanding of intentions, plans, and goals. 


>> Tokens are: 
[including, understanding, intentions, ,, plans, ,, goals, .] 

>> PoS Tags are: 
[('including', 'VERB'), ('understanding', 'NOUN'), ('intentions', 'NOUN'), (',', 'PUNCT'), ('plans', 'NOUN'), (',', 'PUNCT'), ('goals', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('including', 'ROOT'), ('understanding', 'pobj'), ('intentions', 'pobj'), (',', 'punct'), ('plans', 'conj'), (',', 'punct'), ('goals', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[including, understanding], [understanding, intentions], [intentions, ,], [,, plans], [plans, ,], [,, goals], [goals, .]]

>> Trigrams: 
[[including, understanding, intentions], [understanding, intentions, ,], [intentions, ,, plans], [,, plans, ,], [plans, ,, goals], [,, goals, .]]

>> Noun Phrases are: 
[the understanding, intentions, plans, goals]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

For example, the following two   


>> Tokens are: 
[example, ,, following,  ] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), ('following', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct'), ('following', 'amod'), (' ', 'pobj')]

>> Bigrams: 
[[example, ,], [,, following], [following,  ]]

>> Trigrams: 
[[example, ,, following], [,, following,  ]]

>> Noun Phrases are: 
[example]

>> Named Entities are: 
[('two', 'CARDINAL')] 


================================ Paragraph 169 =================================

sentences need aspiration of the anaphoric term ‘they’, but this aspiration requires pragmatic  

------------------- Sentence 1 -------------------

sentences need aspiration of the anaphoric term ‘they’, but this aspiration requires pragmatic   


>> Tokens are: 
[sentences, need, aspiration, anaphoric, term, ‘, ’, ,, aspiration, requires, pragmatic,  ] 

>> PoS Tags are: 
[('sentences', 'NOUN'), ('need', 'VERB'), ('aspiration', 'NOUN'), ('anaphoric', 'ADJ'), ('term', 'NOUN'), ('‘', 'PUNCT'), ('’', 'PUNCT'), (',', 'PUNCT'), ('aspiration', 'NOUN'), ('requires', 'VERB'), ('pragmatic', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('sentences', 'nsubj'), ('need', 'ROOT'), ('aspiration', 'dobj'), ('anaphoric', 'amod'), ('term', 'pobj'), ('‘', 'punct'), ('’', 'punct'), (',', 'punct'), ('aspiration', 'nsubj'), ('requires', 'conj'), ('pragmatic', 'amod'), (' ', 'dobj')]

>> Bigrams: 
[[sentences, need], [need, aspiration], [aspiration, anaphoric], [anaphoric, term], [term, ‘], [‘, ’], [’, ,], [,, aspiration], [aspiration, requires], [requires, pragmatic], [pragmatic,  ]]

>> Trigrams: 
[[sentences, need, aspiration], [need, aspiration, anaphoric], [aspiration, anaphoric, term], [anaphoric, term, ‘], [term, ‘, ’], [‘, ’, ,], [’, ,, aspiration], [,, aspiration, requires], [aspiration, requires, pragmatic], [requires, pragmatic,  ]]

>> Noun Phrases are: 
[sentences, aspiration, the anaphoric term, they, this aspiration]

>> Named Entities are: 
[] 


================================ Paragraph 170 =================================

or world knowledge (Elizabeth D. Liddy,2001) [7].  

------------------- Sentence 1 -------------------

or world knowledge (Elizabeth D. Liddy,2001) [7]. 


>> Tokens are: 
[world, knowledge, (, Elizabeth, D., Liddy,2001, ), [, 7, ], .] 

>> PoS Tags are: 
[('world', 'NOUN'), ('knowledge', 'NOUN'), ('(', 'PUNCT'), ('Elizabeth', 'PROPN'), ('D.', 'PROPN'), ('Liddy,2001', 'PROPN'), (')', 'PUNCT'), ('[', 'PUNCT'), ('7', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('world', 'compound'), ('knowledge', 'ROOT'), ('(', 'punct'), ('Elizabeth', 'compound'), ('D.', 'compound'), ('Liddy,2001', 'appos'), (')', 'punct'), ('[', 'punct'), ('7', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[world, knowledge], [knowledge, (], [(, Elizabeth], [Elizabeth, D.], [D., Liddy,2001], [Liddy,2001, )], [), [], [[, 7], [7, ]], [], .]]

>> Trigrams: 
[[world, knowledge, (], [knowledge, (, Elizabeth], [(, Elizabeth, D.], [Elizabeth, D., Liddy,2001], [D., Liddy,2001, )], [Liddy,2001, ), [], [), [, 7], [[, 7, ]], [7, ], .]]

>> Noun Phrases are: 
[or world knowledge, (Elizabeth D. Liddy,2001]

>> Named Entities are: 
[('Elizabeth D. Liddy,2001', 'PERSON')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 171 =================================

3. Natural Language Generation  

------------------- Sentence 1 -------------------

3. 


>> Tokens are: 
[3, .] 

>> PoS Tags are: 
[('3', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('3', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[3, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('3', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Natural Language Generation   


>> Tokens are: 
[Natural, Language, Generation,  ] 

>> PoS Tags are: 
[('Natural', 'PROPN'), ('Language', 'PROPN'), ('Generation', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Natural', 'compound'), ('Language', 'compound'), ('Generation', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[Natural, Language], [Language, Generation], [Generation,  ]]

>> Trigrams: 
[[Natural, Language, Generation], [Language, Generation,  ]]

>> Noun Phrases are: 
[Natural Language Generation]

>> Named Entities are: 
[] 


================================ Paragraph 172 =================================

Natural Language Generation (NLG) is the process of producing phrases, sentences and  

------------------- Sentence 1 -------------------

Natural Language Generation (NLG) is the process of producing phrases, sentences and   


>> Tokens are: 
[Natural, Language, Generation, (, NLG, ), process, producing, phrases, ,, sentences,  ] 

>> PoS Tags are: 
[('Natural', 'PROPN'), ('Language', 'PROPN'), ('Generation', 'PROPN'), ('(', 'PUNCT'), ('NLG', 'PROPN'), (')', 'PUNCT'), ('process', 'NOUN'), ('producing', 'VERB'), ('phrases', 'NOUN'), (',', 'PUNCT'), ('sentences', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Natural', 'compound'), ('Language', 'compound'), ('Generation', 'nsubj'), ('(', 'punct'), ('NLG', 'appos'), (')', 'punct'), ('process', 'attr'), ('producing', 'pcomp'), ('phrases', 'dobj'), (',', 'punct'), ('sentences', 'conj'), (' ', 'conj')]

>> Bigrams: 
[[Natural, Language], [Language, Generation], [Generation, (], [(, NLG], [NLG, )], [), process], [process, producing], [producing, phrases], [phrases, ,], [,, sentences], [sentences,  ]]

>> Trigrams: 
[[Natural, Language, Generation], [Language, Generation, (], [Generation, (, NLG], [(, NLG, )], [NLG, ), process], [), process, producing], [process, producing, phrases], [producing, phrases, ,], [phrases, ,, sentences], [,, sentences,  ]]

>> Noun Phrases are: 
[Natural Language Generation, NLG, the process, phrases, sentences]

>> Named Entities are: 
[] 


================================ Paragraph 173 =================================

paragraphs that are meaningful from an internal representation. It is a part of Natural  

------------------- Sentence 1 -------------------

paragraphs that are meaningful from an internal representation. 


>> Tokens are: 
[paragraphs, meaningful, internal, representation, .] 

>> PoS Tags are: 
[('paragraphs', 'NOUN'), ('meaningful', 'ADJ'), ('internal', 'ADJ'), ('representation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('paragraphs', 'ROOT'), ('meaningful', 'acomp'), ('internal', 'amod'), ('representation', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[paragraphs, meaningful], [meaningful, internal], [internal, representation], [representation, .]]

>> Trigrams: 
[[paragraphs, meaningful, internal], [meaningful, internal, representation], [internal, representation, .]]

>> Noun Phrases are: 
[paragraphs, an internal representation]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

It is a part of Natural   


>> Tokens are: 
[Natural,  ] 

>> PoS Tags are: 
[('Natural', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Natural', 'amod'), (' ', 'pobj')]

>> Bigrams: 
[[Natural,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[It, a part]

>> Named Entities are: 
[] 


================================ Paragraph 174 =================================

Language Processing and happens in four phases: identifying the goals, planning on how  

------------------- Sentence 1 -------------------

Language Processing and happens in four phases: identifying the goals, planning on how   


>> Tokens are: 
[Language, Processing, happens, phases, :, identifying, goals, ,, planning,  ] 

>> PoS Tags are: 
[('Language', 'PROPN'), ('Processing', 'PROPN'), ('happens', 'VERB'), ('phases', 'NOUN'), (':', 'PUNCT'), ('identifying', 'VERB'), ('goals', 'NOUN'), (',', 'PUNCT'), ('planning', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Language', 'compound'), ('Processing', 'nsubj'), ('happens', 'ROOT'), ('phases', 'pobj'), (':', 'punct'), ('identifying', 'advcl'), ('goals', 'dobj'), (',', 'punct'), ('planning', 'advcl'), (' ', 'pobj')]

>> Bigrams: 
[[Language, Processing], [Processing, happens], [happens, phases], [phases, :], [:, identifying], [identifying, goals], [goals, ,], [,, planning], [planning,  ]]

>> Trigrams: 
[[Language, Processing, happens], [Processing, happens, phases], [happens, phases, :], [phases, :, identifying], [:, identifying, goals], [identifying, goals, ,], [goals, ,, planning], [,, planning,  ]]

>> Noun Phrases are: 
[Language Processing, four phases, the goals]

>> Named Entities are: 
[('four', 'CARDINAL')] 


================================ Paragraph 175 =================================

goals maybe achieved by evaluating the situation and available communicative sources and  

------------------- Sentence 1 -------------------

goals maybe achieved by evaluating the situation and available communicative sources and   


>> Tokens are: 
[goals, maybe, achieved, evaluating, situation, available, communicative, sources,  ] 

>> PoS Tags are: 
[('goals', 'NOUN'), ('maybe', 'ADV'), ('achieved', 'VERB'), ('evaluating', 'VERB'), ('situation', 'NOUN'), ('available', 'ADJ'), ('communicative', 'ADJ'), ('sources', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('goals', 'ROOT'), ('maybe', 'advmod'), ('achieved', 'acl'), ('evaluating', 'pcomp'), ('situation', 'dobj'), ('available', 'amod'), ('communicative', 'amod'), ('sources', 'conj'), (' ', 'conj')]

>> Bigrams: 
[[goals, maybe], [maybe, achieved], [achieved, evaluating], [evaluating, situation], [situation, available], [available, communicative], [communicative, sources], [sources,  ]]

>> Trigrams: 
[[goals, maybe, achieved], [maybe, achieved, evaluating], [achieved, evaluating, situation], [evaluating, situation, available], [situation, available, communicative], [available, communicative, sources], [communicative, sources,  ]]

>> Noun Phrases are: 
[goals, the situation, available communicative sources]

>> Named Entities are: 
[] 


================================ Paragraph 176 =================================

realizing the plans as a text [Figure 3]. It is opposite to Understanding.  

------------------- Sentence 1 -------------------

realizing the plans as a text [Figure 3]. 


>> Tokens are: 
[realizing, plans, text, [, Figure, 3, ], .] 

>> PoS Tags are: 
[('realizing', 'VERB'), ('plans', 'NOUN'), ('text', 'NOUN'), ('[', 'PUNCT'), ('Figure', 'VERB'), ('3', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('realizing', 'advcl'), ('plans', 'dobj'), ('text', 'pobj'), ('[', 'punct'), ('Figure', 'ROOT'), ('3', 'nummod'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[realizing, plans], [plans, text], [text, [], [[, Figure], [Figure, 3], [3, ]], [], .]]

>> Trigrams: 
[[realizing, plans, text], [plans, text, [], [text, [, Figure], [[, Figure, 3], [Figure, 3, ]], [3, ], .]]

>> Noun Phrases are: 
[the plans, a text]

>> Named Entities are: 
[('3', 'CARDINAL')] 

------------------- Sentence 2 -------------------

It is opposite to Understanding. 


>> Tokens are: 
[opposite, Understanding, .] 

>> PoS Tags are: 
[('opposite', 'ADJ'), ('Understanding', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('opposite', 'acomp'), ('Understanding', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[opposite, Understanding], [Understanding, .]]

>> Trigrams: 
[[opposite, Understanding, .]]

>> Noun Phrases are: 
[It, Understanding]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 177 =================================

  

------------------- Sentence 1 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 178 =================================

                                      Figure 3. Components of NLG  

------------------- Sentence 1 -------------------

                                      Figure 3. 


>> Tokens are: 
[                                      , Figure, 3, .] 

>> PoS Tags are: 
[('                                      ', 'SPACE'), ('Figure', 'NOUN'), ('3', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('                                      ', 'nummod'), ('Figure', 'ROOT'), ('3', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[                                      , Figure], [Figure, 3], [3, .]]

>> Trigrams: 
[[                                      , Figure, 3], [Figure, 3, .]]

>> Noun Phrases are: 
[                                      Figure]

>> Named Entities are: 
[('3', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Components of NLG   


>> Tokens are: 
[Components, NLG,  ] 

>> PoS Tags are: 
[('Components', 'NOUN'), ('NLG', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Components', 'ROOT'), ('NLG', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Components, NLG], [NLG,  ]]

>> Trigrams: 
[[Components, NLG,  ]]

>> Noun Phrases are: 
[Components, NLG]

>> Named Entities are: 
[] 


================================ Paragraph 179 =================================

Components of NLG are as follows:  

------------------- Sentence 1 -------------------

Components of NLG are as follows:   


>> Tokens are: 
[Components, NLG, follows, :,  ] 

>> PoS Tags are: 
[('Components', 'NOUN'), ('NLG', 'PROPN'), ('follows', 'VERB'), (':', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Components', 'nsubj'), ('NLG', 'pobj'), ('follows', 'advcl'), (':', 'punct'), (' ', 'attr')]

>> Bigrams: 
[[Components, NLG], [NLG, follows], [follows, :], [:,  ]]

>> Trigrams: 
[[Components, NLG, follows], [NLG, follows, :], [follows, :,  ]]

>> Noun Phrases are: 
[Components, NLG]

>> Named Entities are: 
[] 


================================ Paragraph 180 =================================

Speaker and Generator – To generate a text we need to have a speaker or an application  

------------------- Sentence 1 -------------------

Speaker and Generator – To generate a text we need to have a speaker or an application   


>> Tokens are: 
[Speaker, Generator, –, generate, text, need, speaker, application,  ] 

>> PoS Tags are: 
[('Speaker', 'PROPN'), ('Generator', 'PROPN'), ('–', 'PUNCT'), ('generate', 'VERB'), ('text', 'NOUN'), ('need', 'VERB'), ('speaker', 'NOUN'), ('application', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Speaker', 'ROOT'), ('Generator', 'conj'), ('–', 'punct'), ('generate', 'appos'), ('text', 'dobj'), ('need', 'relcl'), ('speaker', 'dobj'), ('application', 'conj'), (' ', 'nummod')]

>> Bigrams: 
[[Speaker, Generator], [Generator, –], [–, generate], [generate, text], [text, need], [need, speaker], [speaker, application], [application,  ]]

>> Trigrams: 
[[Speaker, Generator, –], [Generator, –, generate], [–, generate, text], [generate, text, need], [text, need, speaker], [need, speaker, application], [speaker, application,  ]]

>> Noun Phrases are: 
[Speaker, Generator, a text, we, a speaker, an application]

>> Named Entities are: 
[] 


================================ Paragraph 181 =================================

and a generator or a program that renders the application’s intentions into fluent phrase  

------------------- Sentence 1 -------------------

and a generator or a program that renders the application’s intentions into fluent phrase   


>> Tokens are: 
[generator, program, renders, application, intentions, fluent, phrase,  ] 

>> PoS Tags are: 
[('generator', 'NOUN'), ('program', 'NOUN'), ('renders', 'VERB'), ('application', 'NOUN'), ('intentions', 'NOUN'), ('fluent', 'ADJ'), ('phrase', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('generator', 'ROOT'), ('program', 'conj'), ('renders', 'relcl'), ('application', 'poss'), ('intentions', 'dobj'), ('fluent', 'amod'), ('phrase', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[generator, program], [program, renders], [renders, application], [application, intentions], [intentions, fluent], [fluent, phrase], [phrase,  ]]

>> Trigrams: 
[[generator, program, renders], [program, renders, application], [renders, application, intentions], [application, intentions, fluent], [intentions, fluent, phrase], [fluent, phrase,  ]]

>> Noun Phrases are: 
[and a generator, a program, the application’s intentions, fluent phrase]

>> Named Entities are: 
[] 


================================ Paragraph 182 =================================

relevant to the situation.   

------------------- Sentence 1 -------------------

relevant to the situation. 


>> Tokens are: 
[relevant, situation, .] 

>> PoS Tags are: 
[('relevant', 'ADJ'), ('situation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('relevant', 'ROOT'), ('situation', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[relevant, situation], [situation, .]]

>> Trigrams: 
[[relevant, situation, .]]

>> Noun Phrases are: 
[the situation]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 183 =================================

Components and Levels of Representation -The process of language generation involves  

------------------- Sentence 1 -------------------

Components and Levels of Representation -The process of language generation involves   


>> Tokens are: 
[Components, Levels, Representation, -The, process, language, generation, involves,  ] 

>> PoS Tags are: 
[('Components', 'NOUN'), ('Levels', 'PROPN'), ('Representation', 'PROPN'), ('-The', 'PUNCT'), ('process', 'NOUN'), ('language', 'NOUN'), ('generation', 'NOUN'), ('involves', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Components', 'nsubj'), ('Levels', 'conj'), ('Representation', 'pobj'), ('-The', 'punct'), ('process', 'appos'), ('language', 'compound'), ('generation', 'pobj'), ('involves', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[Components, Levels], [Levels, Representation], [Representation, -The], [-The, process], [process, language], [language, generation], [generation, involves], [involves,  ]]

>> Trigrams: 
[[Components, Levels, Representation], [Levels, Representation, -The], [Representation, -The, process], [-The, process, language], [process, language, generation], [language, generation, involves], [generation, involves,  ]]

>> Noun Phrases are: 
[Components, Levels, Representation, process, language generation]

>> Named Entities are: 
[('Levels of Representation', 'ORG')] 


================================ Paragraph 184 =================================

the following interweaved tasks. Content selection: Information should be selected and  

------------------- Sentence 1 -------------------

the following interweaved tasks. 


>> Tokens are: 
[following, interweaved, tasks, .] 

>> PoS Tags are: 
[('following', 'VERB'), ('interweaved', 'VERB'), ('tasks', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('following', 'amod'), ('interweaved', 'amod'), ('tasks', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[following, interweaved], [interweaved, tasks], [tasks, .]]

>> Trigrams: 
[[following, interweaved, tasks], [interweaved, tasks, .]]

>> Noun Phrases are: 
[the following interweaved tasks]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Content selection: Information should be selected and   


>> Tokens are: 
[Content, selection, :, Information, selected,  ] 

>> PoS Tags are: 
[('Content', 'NOUN'), ('selection', 'NOUN'), (':', 'PUNCT'), ('Information', 'NOUN'), ('selected', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Content', 'compound'), ('selection', 'dep'), (':', 'punct'), ('Information', 'nsubjpass'), ('selected', 'ROOT'), (' ', 'conj')]

>> Bigrams: 
[[Content, selection], [selection, :], [:, Information], [Information, selected], [selected,  ]]

>> Trigrams: 
[[Content, selection, :], [selection, :, Information], [:, Information, selected], [Information, selected,  ]]

>> Noun Phrases are: 
[Information]

>> Named Entities are: 
[] 


================================ Paragraph 185 =================================

included in the set. Depending on how this information is parsed into representational units,  

------------------- Sentence 1 -------------------

included in the set. 


>> Tokens are: 
[included, set, .] 

>> PoS Tags are: 
[('included', 'VERB'), ('set', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('included', 'ROOT'), ('set', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[included, set], [set, .]]

>> Trigrams: 
[[included, set, .]]

>> Noun Phrases are: 
[the set]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Depending on how this information is parsed into representational units, 


>> Tokens are: 
[Depending, information, parsed, representational, units, ,] 

>> PoS Tags are: 
[('Depending', 'VERB'), ('information', 'NOUN'), ('parsed', 'VERB'), ('representational', 'ADJ'), ('units', 'NOUN'), (',', 'PUNCT')] 

>> Dependency Tags are: 
[('Depending', 'ROOT'), ('information', 'nsubjpass'), ('parsed', 'pcomp'), ('representational', 'amod'), ('units', 'pobj'), (',', 'punct')]

>> Bigrams: 
[[Depending, information], [information, parsed], [parsed, representational], [representational, units], [units, ,]]

>> Trigrams: 
[[Depending, information, parsed], [information, parsed, representational], [parsed, representational, units], [representational, units, ,]]

>> Noun Phrases are: 
[this information, representational units]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 186 =================================

parts of the units may have to be removed while some others may be added by default.  

------------------- Sentence 1 -------------------

parts of the units may have to be removed while some others may be added by default. 


>> Tokens are: 
[parts, units, removed, added, default, .] 

>> PoS Tags are: 
[('parts', 'NOUN'), ('units', 'NOUN'), ('removed', 'VERB'), ('added', 'VERB'), ('default', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('parts', 'nsubj'), ('units', 'pobj'), ('removed', 'xcomp'), ('added', 'advcl'), ('default', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[parts, units], [units, removed], [removed, added], [added, default], [default, .]]

>> Trigrams: 
[[parts, units, removed], [units, removed, added], [removed, added, default], [added, default, .]]

>> Noun Phrases are: 
[parts, the units, some others, default]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 187 =================================

Textual Organization: The information must be textually organized according the grammar, it  

------------------- Sentence 1 -------------------

Textual Organization: 


>> Tokens are: 
[Textual, Organization, :] 

>> PoS Tags are: 
[('Textual', 'PROPN'), ('Organization', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Textual', 'compound'), ('Organization', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[Textual, Organization], [Organization, :]]

>> Trigrams: 
[[Textual, Organization, :]]

>> Noun Phrases are: 
[Textual Organization]

>> Named Entities are: 
[('Textual Organization', 'ORG')] 

------------------- Sentence 2 -------------------

The information must be textually organized according the grammar, it   


>> Tokens are: 
[information, textually, organized, according, grammar, ,,  ] 

>> PoS Tags are: 
[('information', 'NOUN'), ('textually', 'ADV'), ('organized', 'VERB'), ('according', 'VERB'), ('grammar', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('information', 'nsubjpass'), ('textually', 'advmod'), ('organized', 'ROOT'), ('according', 'prep'), ('grammar', 'pobj'), (',', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[information, textually], [textually, organized], [organized, according], [according, grammar], [grammar, ,], [,,  ]]

>> Trigrams: 
[[information, textually, organized], [textually, organized, according], [organized, according, grammar], [according, grammar, ,], [grammar, ,,  ]]

>> Noun Phrases are: 
[The information, the grammar]

>> Named Entities are: 
[] 


================================ Paragraph 188 =================================

must be ordered both sequentially and in terms of linguistic relations like modifications.  

------------------- Sentence 1 -------------------

must be ordered both sequentially and in terms of linguistic relations like modifications. 


>> Tokens are: 
[ordered, sequentially, terms, linguistic, relations, like, modifications, .] 

>> PoS Tags are: 
[('ordered', 'VERB'), ('sequentially', 'ADV'), ('terms', 'NOUN'), ('linguistic', 'ADJ'), ('relations', 'NOUN'), ('like', 'ADP'), ('modifications', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ordered', 'ROOT'), ('sequentially', 'advmod'), ('terms', 'pobj'), ('linguistic', 'amod'), ('relations', 'pobj'), ('like', 'prep'), ('modifications', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ordered, sequentially], [sequentially, terms], [terms, linguistic], [linguistic, relations], [relations, like], [like, modifications], [modifications, .]]

>> Trigrams: 
[[ordered, sequentially, terms], [sequentially, terms, linguistic], [terms, linguistic, relations], [linguistic, relations, like], [relations, like, modifications], [like, modifications, .]]

>> Noun Phrases are: 
[terms, linguistic relations, modifications]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 189 =================================

Linguistic Resources: To support the information’s realization, linguistic resources must be 

------------------- Sentence 1 -------------------

Linguistic Resources: To support the information’s realization, linguistic resources must be 


>> Tokens are: 
[Linguistic, Resources, :, support, information, realization, ,, linguistic, resources] 

>> PoS Tags are: 
[('Linguistic', 'ADJ'), ('Resources', 'NOUN'), (':', 'PUNCT'), ('support', 'VERB'), ('information', 'NOUN'), ('realization', 'NOUN'), (',', 'PUNCT'), ('linguistic', 'ADJ'), ('resources', 'NOUN')] 

>> Dependency Tags are: 
[('Linguistic', 'amod'), ('Resources', 'nsubj'), (':', 'punct'), ('support', 'acl'), ('information', 'poss'), ('realization', 'nmod'), (',', 'punct'), ('linguistic', 'amod'), ('resources', 'dobj')]

>> Bigrams: 
[[Linguistic, Resources], [Resources, :], [:, support], [support, information], [information, realization], [realization, ,], [,, linguistic], [linguistic, resources]]

>> Trigrams: 
[[Linguistic, Resources, :], [Resources, :, support], [:, support, information], [support, information, realization], [information, realization, ,], [realization, ,, linguistic], [,, linguistic, resources]]

>> Noun Phrases are: 
[Linguistic Resources, the information’s realization, linguistic resources]

>> Named Entities are: 
[('Linguistic Resources', 'ORG')] 


================================ Paragraph 190 =================================

chosen. In the end these resources will come down to choices of particular words, idioms,  

------------------- Sentence 1 -------------------

chosen. 


>> Tokens are: 
[chosen, .] 

>> PoS Tags are: 
[('chosen', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('chosen', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[chosen, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In the end these resources will come down to choices of particular words, idioms,   


>> Tokens are: 
[end, resources, come, choices, particular, words, ,, idioms, ,,  ] 

>> PoS Tags are: 
[('end', 'NOUN'), ('resources', 'NOUN'), ('come', 'VERB'), ('choices', 'NOUN'), ('particular', 'ADJ'), ('words', 'NOUN'), (',', 'PUNCT'), ('idioms', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('end', 'pobj'), ('resources', 'nsubj'), ('come', 'ROOT'), ('choices', 'pobj'), ('particular', 'amod'), ('words', 'pobj'), (',', 'punct'), ('idioms', 'conj'), (',', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[end, resources], [resources, come], [come, choices], [choices, particular], [particular, words], [words, ,], [,, idioms], [idioms, ,], [,,  ]]

>> Trigrams: 
[[end, resources, come], [resources, come, choices], [come, choices, particular], [choices, particular, words], [particular, words, ,], [words, ,, idioms], [,, idioms, ,], [idioms, ,,  ]]

>> Noun Phrases are: 
[the end, these resources, choices, particular words, idioms]

>> Named Entities are: 
[] 


================================ Paragraph 191 =================================

syntactic constructs etc. Realization: The selected and organized resources must be realized  

------------------- Sentence 1 -------------------

syntactic constructs etc. 


>> Tokens are: 
[syntactic, constructs, etc, .] 

>> PoS Tags are: 
[('syntactic', 'ADJ'), ('constructs', 'NOUN'), ('etc', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('syntactic', 'amod'), ('constructs', 'ROOT'), ('etc', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[syntactic, constructs], [constructs, etc], [etc, .]]

>> Trigrams: 
[[syntactic, constructs, etc], [constructs, etc, .]]

>> Noun Phrases are: 
[syntactic constructs]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Realization: The selected and organized resources must be realized   


>> Tokens are: 
[Realization, :, selected, organized, resources, realized,  ] 

>> PoS Tags are: 
[('Realization', 'NOUN'), (':', 'PUNCT'), ('selected', 'ADJ'), ('organized', 'ADJ'), ('resources', 'NOUN'), ('realized', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Realization', 'ROOT'), (':', 'punct'), ('selected', 'amod'), ('organized', 'conj'), ('resources', 'nsubjpass'), ('realized', 'acl'), (' ', 'punct')]

>> Bigrams: 
[[Realization, :], [:, selected], [selected, organized], [organized, resources], [resources, realized], [realized,  ]]

>> Trigrams: 
[[Realization, :, selected], [:, selected, organized], [selected, organized, resources], [organized, resources, realized], [resources, realized,  ]]

>> Noun Phrases are: 
[Realization, The selected and organized resources]

>> Named Entities are: 
[] 


================================ Paragraph 192 =================================

as an actual text or voice output.   

------------------- Sentence 1 -------------------

as an actual text or voice output. 


>> Tokens are: 
[actual, text, voice, output, .] 

>> PoS Tags are: 
[('actual', 'ADJ'), ('text', 'NOUN'), ('voice', 'NOUN'), ('output', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('actual', 'amod'), ('text', 'pobj'), ('voice', 'compound'), ('output', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[actual, text], [text, voice], [voice, output], [output, .]]

>> Trigrams: 
[[actual, text, voice], [text, voice, output], [voice, output, .]]

>> Noun Phrases are: 
[an actual text, voice output]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 193 =================================

Application or Speaker –  This is only for maintaining the model of the situation. Here the  

------------------- Sentence 1 -------------------

Application or Speaker –   


>> Tokens are: 
[Application, Speaker, –,  ] 

>> PoS Tags are: 
[('Application', 'NOUN'), ('Speaker', 'PROPN'), ('–', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Application', 'ROOT'), ('Speaker', 'conj'), ('–', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Application, Speaker], [Speaker, –], [–,  ]]

>> Trigrams: 
[[Application, Speaker, –], [Speaker, –,  ]]

>> Noun Phrases are: 
[Application, Speaker]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

This is only for maintaining the model of the situation. 


>> Tokens are: 
[maintaining, model, situation, .] 

>> PoS Tags are: 
[('maintaining', 'VERB'), ('model', 'NOUN'), ('situation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('maintaining', 'pcomp'), ('model', 'dobj'), ('situation', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[maintaining, model], [model, situation], [situation, .]]

>> Trigrams: 
[[maintaining, model, situation], [model, situation, .]]

>> Noun Phrases are: 
[the model, the situation]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Here 


>> Tokens are: 
[] 

>> PoS Tags are: 
[] 

>> Dependency Tags are: 
[]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

the   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 194 =================================

speaker just initiates the process doesn’t take part in the language generation. It stores the  

------------------- Sentence 1 -------------------

speaker just initiates the process doesn’t take part in the language generation. 


>> Tokens are: 
[speaker, initiates, process, language, generation, .] 

>> PoS Tags are: 
[('speaker', 'NOUN'), ('initiates', 'VERB'), ('process', 'NOUN'), ('language', 'NOUN'), ('generation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('speaker', 'nsubj'), ('initiates', 'ROOT'), ('process', 'nsubj'), ('language', 'compound'), ('generation', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[speaker, initiates], [initiates, process], [process, language], [language, generation], [generation, .]]

>> Trigrams: 
[[speaker, initiates, process], [initiates, process, language], [process, language, generation], [language, generation, .]]

>> Noun Phrases are: 
[speaker, the process, part, the language generation]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

It stores the   


>> Tokens are: 
[stores,  ] 

>> PoS Tags are: 
[('stores', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('stores', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[stores,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[It]

>> Named Entities are: 
[] 


================================ Paragraph 195 =================================

history, structures the content that is potentially relevant and deploys a representation of what  

------------------- Sentence 1 -------------------

history, structures the content that is potentially relevant and deploys a representation of what   


>> Tokens are: 
[history, ,, structures, content, potentially, relevant, deploys, representation,  ] 

>> PoS Tags are: 
[('history', 'NOUN'), (',', 'PUNCT'), ('structures', 'VERB'), ('content', 'NOUN'), ('potentially', 'ADV'), ('relevant', 'ADJ'), ('deploys', 'VERB'), ('representation', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('history', 'npadvmod'), (',', 'punct'), ('structures', 'ROOT'), ('content', 'dobj'), ('potentially', 'advmod'), ('relevant', 'acomp'), ('deploys', 'conj'), ('representation', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[history, ,], [,, structures], [structures, content], [content, potentially], [potentially, relevant], [relevant, deploys], [deploys, representation], [representation,  ]]

>> Trigrams: 
[[history, ,, structures], [,, structures, content], [structures, content, potentially], [content, potentially, relevant], [potentially, relevant, deploys], [relevant, deploys, representation], [deploys, representation,  ]]

>> Noun Phrases are: 
[the content, a representation, what]

>> Named Entities are: 
[] 


================================ Paragraph 196 =================================

it actually knows. All these form the situation, while selecting subset of propositions that  

------------------- Sentence 1 -------------------

it actually knows. 


>> Tokens are: 
[actually, knows, .] 

>> PoS Tags are: 
[('actually', 'ADV'), ('knows', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('actually', 'advmod'), ('knows', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[actually, knows], [knows, .]]

>> Trigrams: 
[[actually, knows, .]]

>> Noun Phrases are: 
[it]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

All these form the situation, while selecting subset of propositions 


>> Tokens are: 
[form, situation, ,, selecting, subset, propositions] 

>> PoS Tags are: 
[('form', 'VERB'), ('situation', 'NOUN'), (',', 'PUNCT'), ('selecting', 'VERB'), ('subset', 'NOUN'), ('propositions', 'NOUN')] 

>> Dependency Tags are: 
[('form', 'ROOT'), ('situation', 'dobj'), (',', 'punct'), ('selecting', 'advcl'), ('subset', 'dobj'), ('propositions', 'pobj')]

>> Bigrams: 
[[form, situation], [situation, ,], [,, selecting], [selecting, subset], [subset, propositions]]

>> Trigrams: 
[[form, situation, ,], [situation, ,, selecting], [,, selecting, subset], [selecting, subset, propositions]]

>> Noun Phrases are: 
[the situation, subset, propositions]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

that   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'pobj')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 197 =================================

speaker has. The only requirement is the speaker has to make sense of the situation. [9]   

------------------- Sentence 1 -------------------

speaker has. 


>> Tokens are: 
[speaker, .] 

>> PoS Tags are: 
[('speaker', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('speaker', 'nsubj'), ('.', 'punct')]

>> Bigrams: 
[[speaker, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[speaker]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

The only requirement is the speaker has to make sense of the situation. 


>> Tokens are: 
[requirement, speaker, sense, situation, .] 

>> PoS Tags are: 
[('requirement', 'NOUN'), ('speaker', 'NOUN'), ('sense', 'NOUN'), ('situation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('requirement', 'nsubj'), ('speaker', 'nsubj'), ('sense', 'dobj'), ('situation', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[requirement, speaker], [speaker, sense], [sense, situation], [situation, .]]

>> Trigrams: 
[[requirement, speaker, sense], [speaker, sense, situation], [sense, situation, .]]

>> Noun Phrases are: 
[The only requirement, the speaker, sense, the situation]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

[9] 


>> Tokens are: 
[[, 9, ]] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('9', 'NUM'), (']', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'ROOT'), ('9', 'meta'), (']', 'punct')]

>> Bigrams: 
[[[, 9], [9, ]]]

>> Trigrams: 
[[[, 9, ]]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('9', 'CARDINAL')] 

------------------- Sentence 4 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 198 =================================

4. History of NLP  

------------------- Sentence 1 -------------------

4. 


>> Tokens are: 
[4, .] 

>> PoS Tags are: 
[('4', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('4', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[4, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('4', 'CARDINAL')] 

------------------- Sentence 2 -------------------

History of NLP   


>> Tokens are: 
[History, NLP,  ] 

>> PoS Tags are: 
[('History', 'NOUN'), ('NLP', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('History', 'ROOT'), ('NLP', 'pobj'), (' ', 'nummod')]

>> Bigrams: 
[[History, NLP], [NLP,  ]]

>> Trigrams: 
[[History, NLP,  ]]

>> Noun Phrases are: 
[History, NLP]

>> Named Entities are: 
[('NLP', 'ORG')] 


================================ Paragraph 199 =================================

In late 1940s the term wasn’t even in existence, but the work regarding machine translation  

------------------- Sentence 1 -------------------

In late 1940s the term wasn’t even in existence, but the work regarding machine translation   


>> Tokens are: 
[late, 1940s, term, existence, ,, work, machine, translation,  ] 

>> PoS Tags are: 
[('late', 'ADJ'), ('1940s', 'NOUN'), ('term', 'NOUN'), ('existence', 'NOUN'), (',', 'PUNCT'), ('work', 'NOUN'), ('machine', 'NOUN'), ('translation', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('late', 'amod'), ('1940s', 'pobj'), ('term', 'nsubj'), ('existence', 'pobj'), (',', 'punct'), ('work', 'conj'), ('machine', 'compound'), ('translation', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[late, 1940s], [1940s, term], [term, existence], [existence, ,], [,, work], [work, machine], [machine, translation], [translation,  ]]

>> Trigrams: 
[[late, 1940s, term], [1940s, term, existence], [term, existence, ,], [existence, ,, work], [,, work, machine], [work, machine, translation], [machine, translation,  ]]

>> Noun Phrases are: 
[late 1940s, the term, existence, the work, machine translation]

>> Named Entities are: 
[('late 1940s', 'DATE')] 


================================ Paragraph 200 =================================

(MT) had started. Research in this period was not completely localised. Russian and English  

------------------- Sentence 1 -------------------

(MT) had started. 


>> Tokens are: 
[(, MT, ), started, .] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('MT', 'PROPN'), (')', 'PUNCT'), ('started', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('MT', 'nsubj'), (')', 'punct'), ('started', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[(, MT], [MT, )], [), started], [started, .]]

>> Trigrams: 
[[(, MT, )], [MT, ), started], [), started, .]]

>> Noun Phrases are: 
[(MT]

>> Named Entities are: 
[('MT', 'ORG')] 

------------------- Sentence 2 -------------------

Research in this period was not completely localised. 


>> Tokens are: 
[Research, period, completely, localised, .] 

>> PoS Tags are: 
[('Research', 'NOUN'), ('period', 'NOUN'), ('completely', 'ADV'), ('localised', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Research', 'nsubj'), ('period', 'pobj'), ('completely', 'advmod'), ('localised', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[Research, period], [period, completely], [completely, localised], [localised, .]]

>> Trigrams: 
[[Research, period, completely], [period, completely, localised], [completely, localised, .]]

>> Noun Phrases are: 
[Research, this period]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Russian and English   


>> Tokens are: 
[Russian, English,  ] 

>> PoS Tags are: 
[('Russian', 'ADJ'), ('English', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Russian', 'amod'), ('English', 'conj'), (' ', 'ROOT')]

>> Bigrams: 
[[Russian, English], [English,  ]]

>> Trigrams: 
[[Russian, English,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('Russian', 'LANGUAGE'), ('English', 'LANGUAGE')] 


================================ Paragraph 201 =================================

were the dominant languages for MT, but others, like Chinese were used for MT (Booth  

------------------- Sentence 1 -------------------

were the dominant languages for MT, but others, like Chinese were used for MT (Booth   


>> Tokens are: 
[dominant, languages, MT, ,, ,, like, Chinese, MT, (, Booth,  ] 

>> PoS Tags are: 
[('dominant', 'ADJ'), ('languages', 'NOUN'), ('MT', 'PROPN'), (',', 'PUNCT'), (',', 'PUNCT'), ('like', 'ADP'), ('Chinese', 'PROPN'), ('MT', 'PROPN'), ('(', 'PUNCT'), ('Booth', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('dominant', 'amod'), ('languages', 'attr'), ('MT', 'pobj'), (',', 'punct'), (',', 'punct'), ('like', 'mark'), ('Chinese', 'nsubjpass'), ('MT', 'pobj'), ('(', 'punct'), ('Booth', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[dominant, languages], [languages, MT], [MT, ,], [,, ,], [,, like], [like, Chinese], [Chinese, MT], [MT, (], [(, Booth], [Booth,  ]]

>> Trigrams: 
[[dominant, languages, MT], [languages, MT, ,], [MT, ,, ,], [,, ,, like], [,, like, Chinese], [like, Chinese, MT], [Chinese, MT, (], [MT, (, Booth], [(, Booth,  ]]

>> Noun Phrases are: 
[the dominant languages, MT, others, Chinese, MT, Booth]

>> Named Entities are: 
[('MT', 'ORG'), ('Chinese', 'NORP')] 


================================ Paragraph 202 =================================

,1967) [10]. MT/NLP research was almost died in 1966 according to ALPAC report, which  

------------------- Sentence 1 -------------------

, 


>> Tokens are: 
[,] 

>> PoS Tags are: 
[(',', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

1967) 


>> Tokens are: 
[1967, )] 

>> PoS Tags are: 
[('1967', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('1967', 'ROOT'), (')', 'punct')]

>> Bigrams: 
[[1967, )]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1967', 'DATE')] 

------------------- Sentence 3 -------------------

[10]. 


>> Tokens are: 
[[, 10, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('10', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('10', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 10], [10, ]], [], .]]

>> Trigrams: 
[[[, 10, ]], [10, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('10', 'CARDINAL')] 

------------------- Sentence 4 -------------------

MT/NLP research was almost died in 1966 according to ALPAC report, 


>> Tokens are: 
[MT, /, NLP, research, died, 1966, according, ALPAC, report, ,] 

>> PoS Tags are: 
[('MT', 'PROPN'), ('/', 'SYM'), ('NLP', 'PROPN'), ('research', 'NOUN'), ('died', 'VERB'), ('1966', 'NUM'), ('according', 'VERB'), ('ALPAC', 'PROPN'), ('report', 'NOUN'), (',', 'PUNCT')] 

>> Dependency Tags are: 
[('MT', 'nmod'), ('/', 'punct'), ('NLP', 'compound'), ('research', 'nsubjpass'), ('died', 'ROOT'), ('1966', 'pobj'), ('according', 'prep'), ('ALPAC', 'compound'), ('report', 'pobj'), (',', 'punct')]

>> Bigrams: 
[[MT, /], [/, NLP], [NLP, research], [research, died], [died, 1966], [1966, according], [according, ALPAC], [ALPAC, report], [report, ,]]

>> Trigrams: 
[[MT, /, NLP], [/, NLP, research], [NLP, research, died], [research, died, 1966], [died, 1966, according], [1966, according, ALPAC], [according, ALPAC, report], [ALPAC, report, ,]]

>> Noun Phrases are: 
[MT/NLP research, ALPAC report]

>> Named Entities are: 
[('NLP', 'ORG'), ('1966', 'DATE')] 

------------------- Sentence 5 -------------------

which   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 203 =================================

concluded that MT is going nowhere. But later on some MT production systems were  

------------------- Sentence 1 -------------------

concluded that MT is going nowhere. 


>> Tokens are: 
[concluded, MT, going, .] 

>> PoS Tags are: 
[('concluded', 'VERB'), ('MT', 'PROPN'), ('going', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('concluded', 'ROOT'), ('MT', 'nsubj'), ('going', 'ccomp'), ('.', 'punct')]

>> Bigrams: 
[[concluded, MT], [MT, going], [going, .]]

>> Trigrams: 
[[concluded, MT, going], [MT, going, .]]

>> Noun Phrases are: 
[MT]

>> Named Entities are: 
[('MT', 'ORG')] 

------------------- Sentence 2 -------------------

But later on some MT production systems were   


>> Tokens are: 
[later, MT, production, systems,  ] 

>> PoS Tags are: 
[('later', 'ADV'), ('MT', 'PROPN'), ('production', 'NOUN'), ('systems', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('later', 'advmod'), ('MT', 'compound'), ('production', 'compound'), ('systems', 'pobj'), (' ', 'attr')]

>> Bigrams: 
[[later, MT], [MT, production], [production, systems], [systems,  ]]

>> Trigrams: 
[[later, MT, production], [MT, production, systems], [production, systems,  ]]

>> Noun Phrases are: 
[some MT production systems]

>> Named Entities are: 
[('MT', 'ORG')] 


================================ Paragraph 204 =================================

providing output to their customers (Hutchins, 1986) [11]. By this time, work on the use of  

------------------- Sentence 1 -------------------

providing output to their customers (Hutchins, 1986) 


>> Tokens are: 
[providing, output, customers, (, Hutchins, ,, 1986, )] 

>> PoS Tags are: 
[('providing', 'VERB'), ('output', 'NOUN'), ('customers', 'NOUN'), ('(', 'PUNCT'), ('Hutchins', 'PROPN'), (',', 'PUNCT'), ('1986', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('providing', 'ROOT'), ('output', 'dobj'), ('customers', 'pobj'), ('(', 'punct'), ('Hutchins', 'appos'), (',', 'punct'), ('1986', 'npadvmod'), (')', 'punct')]

>> Bigrams: 
[[providing, output], [output, customers], [customers, (], [(, Hutchins], [Hutchins, ,], [,, 1986], [1986, )]]

>> Trigrams: 
[[providing, output, customers], [output, customers, (], [customers, (, Hutchins], [(, Hutchins, ,], [Hutchins, ,, 1986], [,, 1986, )]]

>> Noun Phrases are: 
[output, their customers, Hutchins]

>> Named Entities are: 
[('Hutchins', 'ORG'), ('1986', 'DATE')] 

------------------- Sentence 2 -------------------

[11]. 


>> Tokens are: 
[[, 11, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('11', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('11', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 11], [11, ]], [], .]]

>> Trigrams: 
[[[, 11, ]], [11, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('11', 'CARDINAL')] 

------------------- Sentence 3 -------------------

By this time, work on the use of   


>> Tokens are: 
[time, ,, work, use,  ] 

>> PoS Tags are: 
[('time', 'NOUN'), (',', 'PUNCT'), ('work', 'VERB'), ('use', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('time', 'pobj'), (',', 'punct'), ('work', 'ROOT'), ('use', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[time, ,], [,, work], [work, use], [use,  ]]

>> Trigrams: 
[[time, ,, work], [,, work, use], [work, use,  ]]

>> Noun Phrases are: 
[this time, the use]

>> Named Entities are: 
[] 


================================ Paragraph 205 =================================

computers for literary and linguistic studies had also started.   

------------------- Sentence 1 -------------------

computers for literary and linguistic studies had also started. 


>> Tokens are: 
[computers, literary, linguistic, studies, started, .] 

>> PoS Tags are: 
[('computers', 'NOUN'), ('literary', 'ADJ'), ('linguistic', 'ADJ'), ('studies', 'NOUN'), ('started', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('computers', 'nsubj'), ('literary', 'amod'), ('linguistic', 'conj'), ('studies', 'pobj'), ('started', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[computers, literary], [literary, linguistic], [linguistic, studies], [studies, started], [started, .]]

>> Trigrams: 
[[computers, literary, linguistic], [literary, linguistic, studies], [linguistic, studies, started], [studies, started, .]]

>> Noun Phrases are: 
[computers, literary and linguistic studies]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 206 =================================

As early as 1960 signature work influenced by AI began, with the BASEBALL Q-A systems  

------------------- Sentence 1 -------------------

As early as 1960 signature work influenced by AI began, with the BASEBALL Q-A systems   


>> Tokens are: 
[early, 1960, signature, work, influenced, AI, began, ,, BASEBALL, Q, -, systems,  ] 

>> PoS Tags are: 
[('early', 'ADV'), ('1960', 'NUM'), ('signature', 'NOUN'), ('work', 'NOUN'), ('influenced', 'VERB'), ('AI', 'PROPN'), ('began', 'VERB'), (',', 'PUNCT'), ('BASEBALL', 'PROPN'), ('Q', 'PROPN'), ('-', 'PUNCT'), ('systems', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('early', 'advmod'), ('1960', 'nummod'), ('signature', 'compound'), ('work', 'pobj'), ('influenced', 'acl'), ('AI', 'pobj'), ('began', 'ROOT'), (',', 'punct'), ('BASEBALL', 'nmod'), ('Q', 'compound'), ('-', 'punct'), ('systems', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[early, 1960], [1960, signature], [signature, work], [work, influenced], [influenced, AI], [AI, began], [began, ,], [,, BASEBALL], [BASEBALL, Q], [Q, -], [-, systems], [systems,  ]]

>> Trigrams: 
[[early, 1960, signature], [1960, signature, work], [signature, work, influenced], [work, influenced, AI], [influenced, AI, began], [AI, began, ,], [began, ,, BASEBALL], [,, BASEBALL, Q], [BASEBALL, Q, -], [Q, -, systems], [-, systems,  ]]

>> Noun Phrases are: 
[1960 signature work, AI, the BASEBALL Q-A systems]

>> Named Entities are: 
[('1960', 'DATE'), ('AI', 'ORG')] 


================================ Paragraph 207 =================================

(Green et al., 1961) [12]. LUNAR (Woods ,1978) [13] and Winograd SHRDLU were natural  

------------------- Sentence 1 -------------------

(Green et al., 1961) 


>> Tokens are: 
[(, Green, et, al, ., ,, 1961, )] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('Green', 'PROPN'), ('et', 'NOUN'), ('al', 'PROPN'), ('.', 'PROPN'), (',', 'PUNCT'), ('1961', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('Green', 'nmod'), ('et', 'compound'), ('al', 'ROOT'), ('.', 'punct'), (',', 'punct'), ('1961', 'appos'), (')', 'punct')]

>> Bigrams: 
[[(, Green], [Green, et], [et, al], [al, .], [., ,], [,, 1961], [1961, )]]

>> Trigrams: 
[[(, Green, et], [Green, et, al], [et, al, .], [al, ., ,], [., ,, 1961], [,, 1961, )]]

>> Noun Phrases are: 
[(Green et al]

>> Named Entities are: 
[('1961', 'DATE')] 

------------------- Sentence 2 -------------------

[12]. 


>> Tokens are: 
[[, 12, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('12', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('12', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 12], [12, ]], [], .]]

>> Trigrams: 
[[[, 12, ]], [12, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('12', 'CARDINAL')] 

------------------- Sentence 3 -------------------

LUNAR (Woods ,1978) 


>> Tokens are: 
[LUNAR, (, Woods, ,, 1978, )] 

>> PoS Tags are: 
[('LUNAR', 'PROPN'), ('(', 'PUNCT'), ('Woods', 'PROPN'), (',', 'PUNCT'), ('1978', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('LUNAR', 'ROOT'), ('(', 'punct'), ('Woods', 'npadvmod'), (',', 'punct'), ('1978', 'npadvmod'), (')', 'punct')]

>> Bigrams: 
[[LUNAR, (], [(, Woods], [Woods, ,], [,, 1978], [1978, )]]

>> Trigrams: 
[[LUNAR, (, Woods], [(, Woods, ,], [Woods, ,, 1978], [,, 1978, )]]

>> Noun Phrases are: 
[LUNAR]

>> Named Entities are: 
[('1978', 'DATE')] 

------------------- Sentence 4 -------------------

[13] and Winograd SHRDLU were natural   


>> Tokens are: 
[[, 13, ], Winograd, SHRDLU, natural,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('13', 'NUM'), (']', 'PUNCT'), ('Winograd', 'PROPN'), ('SHRDLU', 'PROPN'), ('natural', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('13', 'nsubj'), (']', 'punct'), ('Winograd', 'compound'), ('SHRDLU', 'nsubj'), ('natural', 'amod'), (' ', 'punct')]

>> Bigrams: 
[[[, 13], [13, ]], [], Winograd], [Winograd, SHRDLU], [SHRDLU, natural], [natural,  ]]

>> Trigrams: 
[[[, 13, ]], [13, ], Winograd], [], Winograd, SHRDLU], [Winograd, SHRDLU, natural], [SHRDLU, natural,  ]]

>> Noun Phrases are: 
[Winograd SHRDLU]

>> Named Entities are: 
[('13', 'CARDINAL'), ('Winograd SHRDLU', 'GPE')] 


================================ Paragraph 208 =================================

successors of these systems but they were seen as stepped up sophistication, in terms of their  

------------------- Sentence 1 -------------------

successors of these systems but they were seen as stepped up sophistication, in terms of their   


>> Tokens are: 
[successors, systems, seen, stepped, sophistication, ,, terms,  ] 

>> PoS Tags are: 
[('successors', 'NOUN'), ('systems', 'NOUN'), ('seen', 'VERB'), ('stepped', 'VERB'), ('sophistication', 'NOUN'), (',', 'PUNCT'), ('terms', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('successors', 'nsubjpass'), ('systems', 'pobj'), ('seen', 'ROOT'), ('stepped', 'advcl'), ('sophistication', 'dobj'), (',', 'punct'), ('terms', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[successors, systems], [systems, seen], [seen, stepped], [stepped, sophistication], [sophistication, ,], [,, terms], [terms,  ]]

>> Trigrams: 
[[successors, systems, seen], [systems, seen, stepped], [seen, stepped, sophistication], [stepped, sophistication, ,], [sophistication, ,, terms], [,, terms,  ]]

>> Noun Phrases are: 
[successors, these systems, they, sophistication, terms]

>> Named Entities are: 
[] 


================================ Paragraph 209 =================================

linguistic and their task processing capabilities. There was a widespread belief that progress  

------------------- Sentence 1 -------------------

linguistic and their task processing capabilities. 


>> Tokens are: 
[linguistic, task, processing, capabilities, .] 

>> PoS Tags are: 
[('linguistic', 'ADJ'), ('task', 'NOUN'), ('processing', 'NOUN'), ('capabilities', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('linguistic', 'ROOT'), ('task', 'compound'), ('processing', 'compound'), ('capabilities', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[linguistic, task], [task, processing], [processing, capabilities], [capabilities, .]]

>> Trigrams: 
[[linguistic, task, processing], [task, processing, capabilities], [processing, capabilities, .]]

>> Noun Phrases are: 
[their task processing capabilities]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

There was a widespread belief that progress   


>> Tokens are: 
[widespread, belief, progress,  ] 

>> PoS Tags are: 
[('widespread', 'ADJ'), ('belief', 'NOUN'), ('progress', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('widespread', 'amod'), ('belief', 'attr'), ('progress', 'relcl'), (' ', 'punct')]

>> Bigrams: 
[[widespread, belief], [belief, progress], [progress,  ]]

>> Trigrams: 
[[widespread, belief, progress], [belief, progress,  ]]

>> Noun Phrases are: 
[a widespread belief]

>> Named Entities are: 
[] 


================================ Paragraph 210 =================================

could only be made on the two sides, one is ARPA Speech Understanding Research (SUR)  

------------------- Sentence 1 -------------------

could only be made on the two sides, one is ARPA Speech Understanding Research (SUR)   


>> Tokens are: 
[sides, ,, ARPA, Speech, Understanding, Research, (, SUR, ),  ] 

>> PoS Tags are: 
[('sides', 'NOUN'), (',', 'PUNCT'), ('ARPA', 'PROPN'), ('Speech', 'PROPN'), ('Understanding', 'PROPN'), ('Research', 'PROPN'), ('(', 'PUNCT'), ('SUR', 'PROPN'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('sides', 'pobj'), (',', 'punct'), ('ARPA', 'compound'), ('Speech', 'compound'), ('Understanding', 'compound'), ('Research', 'attr'), ('(', 'punct'), ('SUR', 'appos'), (')', 'punct'), (' ', 'attr')]

>> Bigrams: 
[[sides, ,], [,, ARPA], [ARPA, Speech], [Speech, Understanding], [Understanding, Research], [Research, (], [(, SUR], [SUR, )], [),  ]]

>> Trigrams: 
[[sides, ,, ARPA], [,, ARPA, Speech], [ARPA, Speech, Understanding], [Speech, Understanding, Research], [Understanding, Research, (], [Research, (, SUR], [(, SUR, )], [SUR, ),  ]]

>> Noun Phrases are: 
[the two sides, ARPA Speech Understanding Research, SUR]

>> Named Entities are: 
[('two', 'CARDINAL'), ('ARPA Speech Understanding Research', 'ORG')] 


================================ Paragraph 211 =================================

project (Lea, 1980) and other in some major system developments projects building database  

------------------- Sentence 1 -------------------

project (Lea, 1980) and other in some major system developments projects building database   


>> Tokens are: 
[project, (, Lea, ,, 1980, ), major, system, developments, projects, building, database,  ] 

>> PoS Tags are: 
[('project', 'NOUN'), ('(', 'PUNCT'), ('Lea', 'PROPN'), (',', 'PUNCT'), ('1980', 'NUM'), (')', 'PUNCT'), ('major', 'ADJ'), ('system', 'NOUN'), ('developments', 'NOUN'), ('projects', 'VERB'), ('building', 'VERB'), ('database', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('project', 'ROOT'), ('(', 'punct'), ('Lea', 'appos'), (',', 'punct'), ('1980', 'npadvmod'), (')', 'punct'), ('major', 'amod'), ('system', 'compound'), ('developments', 'pobj'), ('projects', 'appos'), ('building', 'compound'), ('database', 'appos'), (' ', 'nummod')]

>> Bigrams: 
[[project, (], [(, Lea], [Lea, ,], [,, 1980], [1980, )], [), major], [major, system], [system, developments], [developments, projects], [projects, building], [building, database], [database,  ]]

>> Trigrams: 
[[project, (, Lea], [(, Lea, ,], [Lea, ,, 1980], [,, 1980, )], [1980, ), major], [), major, system], [major, system, developments], [system, developments, projects], [developments, projects, building], [projects, building, database], [building, database,  ]]

>> Noun Phrases are: 
[project, Lea, some major system developments, building database]

>> Named Entities are: 
[('Lea', 'PERSON'), ('1980', 'DATE')] 


================================ Paragraph 212 =================================

front ends. The front-end projects (Hendrix et al., 1978) [14] were intended to go beyond  

------------------- Sentence 1 -------------------

front ends. 


>> Tokens are: 
[ends, .] 

>> PoS Tags are: 
[('ends', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ends', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[ends, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[front]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

The front-end projects (Hendrix et al., 1978) 


>> Tokens are: 
[-, end, projects, (, Hendrix, et, al, ., ,, 1978, )] 

>> PoS Tags are: 
[('-', 'PUNCT'), ('end', 'NOUN'), ('projects', 'NOUN'), ('(', 'PUNCT'), ('Hendrix', 'PROPN'), ('et', 'NOUN'), ('al', 'PROPN'), ('.', 'PROPN'), (',', 'PUNCT'), ('1978', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('-', 'punct'), ('end', 'compound'), ('projects', 'ROOT'), ('(', 'punct'), ('Hendrix', 'appos'), ('et', 'npadvmod'), ('al', 'appos'), ('.', 'punct'), (',', 'punct'), ('1978', 'appos'), (')', 'punct')]

>> Bigrams: 
[[-, end], [end, projects], [projects, (], [(, Hendrix], [Hendrix, et], [et, al], [al, .], [., ,], [,, 1978], [1978, )]]

>> Trigrams: 
[[-, end, projects], [end, projects, (], [projects, (, Hendrix], [(, Hendrix, et], [Hendrix, et, al], [et, al, .], [al, ., ,], [., ,, 1978], [,, 1978, )]]

>> Noun Phrases are: 
[The front-end projects, Hendrix, al]

>> Named Entities are: 
[('Hendrix', 'PERSON'), ('1978', 'DATE')] 

------------------- Sentence 3 -------------------

[14] were intended to go beyond   


>> Tokens are: 
[[, 14, ], intended,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('14', 'NUM'), (']', 'PUNCT'), ('intended', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('14', 'dep'), (']', 'punct'), ('intended', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[[, 14], [14, ]], [], intended], [intended,  ]]

>> Trigrams: 
[[[, 14, ]], [14, ], intended], [], intended,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('14', 'CARDINAL')] 


================================ Paragraph 213 =================================

LUNAR in interfacing the large databases.  

------------------- Sentence 1 -------------------

LUNAR in interfacing the large databases. 


>> Tokens are: 
[LUNAR, interfacing, large, databases, .] 

>> PoS Tags are: 
[('LUNAR', 'VERB'), ('interfacing', 'VERB'), ('large', 'ADJ'), ('databases', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('LUNAR', 'ROOT'), ('interfacing', 'pcomp'), ('large', 'amod'), ('databases', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[LUNAR, interfacing], [interfacing, large], [large, databases], [databases, .]]

>> Trigrams: 
[[LUNAR, interfacing, large], [interfacing, large, databases], [large, databases, .]]

>> Noun Phrases are: 
[the large databases]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 214 =================================

In early 1980s computational grammar theory became a very active area of research linked  

------------------- Sentence 1 -------------------

In early 1980s computational grammar theory became a very active area of research linked   


>> Tokens are: 
[early, 1980s, computational, grammar, theory, active, area, research, linked,  ] 

>> PoS Tags are: 
[('early', 'ADJ'), ('1980s', 'NOUN'), ('computational', 'ADJ'), ('grammar', 'NOUN'), ('theory', 'NOUN'), ('active', 'ADJ'), ('area', 'NOUN'), ('research', 'NOUN'), ('linked', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('early', 'amod'), ('1980s', 'pobj'), ('computational', 'amod'), ('grammar', 'compound'), ('theory', 'nsubj'), ('active', 'amod'), ('area', 'attr'), ('research', 'pobj'), ('linked', 'acl'), (' ', 'attr')]

>> Bigrams: 
[[early, 1980s], [1980s, computational], [computational, grammar], [grammar, theory], [theory, active], [active, area], [area, research], [research, linked], [linked,  ]]

>> Trigrams: 
[[early, 1980s, computational], [1980s, computational, grammar], [computational, grammar, theory], [grammar, theory, active], [theory, active, area], [active, area, research], [area, research, linked], [research, linked,  ]]

>> Noun Phrases are: 
[early 1980s, computational grammar theory, a very active area, research]

>> Named Entities are: 
[('early 1980s', 'DATE')] 


================================ Paragraph 215 =================================

with logics for meaning and knowledge’s ability to deal with the user’s beliefs and intentions  

------------------- Sentence 1 -------------------

with logics for meaning and knowledge’s ability to deal with the user’s beliefs and intentions   


>> Tokens are: 
[logics, meaning, knowledge, ability, deal, user, beliefs, intentions,  ] 

>> PoS Tags are: 
[('logics', 'NOUN'), ('meaning', 'NOUN'), ('knowledge', 'NOUN'), ('ability', 'NOUN'), ('deal', 'VERB'), ('user', 'NOUN'), ('beliefs', 'NOUN'), ('intentions', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('logics', 'pobj'), ('meaning', 'pobj'), ('knowledge', 'poss'), ('ability', 'conj'), ('deal', 'acl'), ('user', 'poss'), ('beliefs', 'pobj'), ('intentions', 'conj'), (' ', 'pobj')]

>> Bigrams: 
[[logics, meaning], [meaning, knowledge], [knowledge, ability], [ability, deal], [deal, user], [user, beliefs], [beliefs, intentions], [intentions,  ]]

>> Trigrams: 
[[logics, meaning, knowledge], [meaning, knowledge, ability], [knowledge, ability, deal], [ability, deal, user], [deal, user, beliefs], [user, beliefs, intentions], [beliefs, intentions,  ]]

>> Noun Phrases are: 
[logics, meaning, knowledge’s ability, the user’s beliefs, intentions]

>> Named Entities are: 
[] 


================================ Paragraph 216 =================================

and with functions like emphasis and themes.  

------------------- Sentence 1 -------------------

and with functions like emphasis and themes.   


>> Tokens are: 
[functions, like, emphasis, themes, .,  ] 

>> PoS Tags are: 
[('functions', 'NOUN'), ('like', 'ADP'), ('emphasis', 'NOUN'), ('themes', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('functions', 'pobj'), ('like', 'prep'), ('emphasis', 'pobj'), ('themes', 'conj'), ('.', 'punct'), (' ', 'pobj')]

>> Bigrams: 
[[functions, like], [like, emphasis], [emphasis, themes], [themes, .], [.,  ]]

>> Trigrams: 
[[functions, like, emphasis], [like, emphasis, themes], [emphasis, themes, .], [themes, .,  ]]

>> Noun Phrases are: 
[functions, emphasis, themes]

>> Named Entities are: 
[] 


================================ Paragraph 217 =================================

By the end of the decade the powerful general purpose sentence processors like SRI’s Core  

------------------- Sentence 1 -------------------

By the end of the decade the powerful general purpose sentence processors like SRI’s Core   


>> Tokens are: 
[end, decade, powerful, general, purpose, sentence, processors, like, SRI, Core,  ] 

>> PoS Tags are: 
[('end', 'NOUN'), ('decade', 'NOUN'), ('powerful', 'ADJ'), ('general', 'ADJ'), ('purpose', 'NOUN'), ('sentence', 'NOUN'), ('processors', 'NOUN'), ('like', 'ADP'), ('SRI', 'PROPN'), ('Core', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('end', 'pobj'), ('decade', 'pobj'), ('powerful', 'amod'), ('general', 'amod'), ('purpose', 'compound'), ('sentence', 'compound'), ('processors', 'pobj'), ('like', 'prep'), ('SRI', 'pobj'), ('Core', 'appos'), (' ', 'pobj')]

>> Bigrams: 
[[end, decade], [decade, powerful], [powerful, general], [general, purpose], [purpose, sentence], [sentence, processors], [processors, like], [like, SRI], [SRI, Core], [Core,  ]]

>> Trigrams: 
[[end, decade, powerful], [decade, powerful, general], [powerful, general, purpose], [general, purpose, sentence], [purpose, sentence, processors], [sentence, processors, like], [processors, like, SRI], [like, SRI, Core], [SRI, Core,  ]]

>> Noun Phrases are: 
[the end, the decade, the powerful general purpose sentence processors, SRI, Core]

>> Named Entities are: 
[('the end of the decade', 'DATE'), ('SRI’s', 'ORG')] 


================================ Paragraph 218 =================================

Language Engine (Alshawi,1992) [15] and Discourse Representation Theory (Kamp and  

------------------- Sentence 1 -------------------

Language Engine (Alshawi,1992) [15] and Discourse Representation Theory (Kamp and   


>> Tokens are: 
[Language, Engine, (, Alshawi,1992, ), [, 15, ], Discourse, Representation, Theory, (, Kamp,  ] 

>> PoS Tags are: 
[('Language', 'PROPN'), ('Engine', 'PROPN'), ('(', 'PUNCT'), ('Alshawi,1992', 'NOUN'), (')', 'PUNCT'), ('[', 'PUNCT'), ('15', 'NUM'), (']', 'PUNCT'), ('Discourse', 'PROPN'), ('Representation', 'PROPN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('Kamp', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Language', 'compound'), ('Engine', 'ROOT'), ('(', 'punct'), ('Alshawi,1992', 'appos'), (')', 'punct'), ('[', 'punct'), ('15', 'appos'), (']', 'punct'), ('Discourse', 'compound'), ('Representation', 'compound'), ('Theory', 'conj'), ('(', 'punct'), ('Kamp', 'appos'), (' ', 'conj')]

>> Bigrams: 
[[Language, Engine], [Engine, (], [(, Alshawi,1992], [Alshawi,1992, )], [), [], [[, 15], [15, ]], [], Discourse], [Discourse, Representation], [Representation, Theory], [Theory, (], [(, Kamp], [Kamp,  ]]

>> Trigrams: 
[[Language, Engine, (], [Engine, (, Alshawi,1992], [(, Alshawi,1992, )], [Alshawi,1992, ), [], [), [, 15], [[, 15, ]], [15, ], Discourse], [], Discourse, Representation], [Discourse, Representation, Theory], [Representation, Theory, (], [Theory, (, Kamp], [(, Kamp,  ]]

>> Noun Phrases are: 
[Language Engine, (Alshawi,1992, Discourse Representation Theory, Kamp]

>> Named Entities are: 
[('Language Engine', 'PERSON'), ('15', 'CARDINAL')] 


================================ Paragraph 219 =================================

Reyle,1993) [16] offered a means of tackling more extended discourse within the  

------------------- Sentence 1 -------------------

Reyle,1993) 


>> Tokens are: 
[Reyle,1993, )] 

>> PoS Tags are: 
[('Reyle,1993', 'INTJ'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Reyle,1993', 'ROOT'), (')', 'punct')]

>> Bigrams: 
[[Reyle,1993, )]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

[16] offered a means of tackling more extended discourse within the   


>> Tokens are: 
[[, 16, ], offered, means, tackling, extended, discourse,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('16', 'NUM'), (']', 'PUNCT'), ('offered', 'VERB'), ('means', 'NOUN'), ('tackling', 'VERB'), ('extended', 'ADJ'), ('discourse', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('16', 'meta'), (']', 'punct'), ('offered', 'ROOT'), ('means', 'dobj'), ('tackling', 'pcomp'), ('extended', 'amod'), ('discourse', 'dobj'), (' ', 'pobj')]

>> Bigrams: 
[[[, 16], [16, ]], [], offered], [offered, means], [means, tackling], [tackling, extended], [extended, discourse], [discourse,  ]]

>> Trigrams: 
[[[, 16, ]], [16, ], offered], [], offered, means], [offered, means, tackling], [means, tackling, extended], [tackling, extended, discourse], [extended, discourse,  ]]

>> Noun Phrases are: 
[a means, more extended discourse]

>> Named Entities are: 
[('16', 'CARDINAL')] 


================================ Paragraph 220 =================================

grammatico-logical framework. This period was one of the growing community. Practical  

------------------- Sentence 1 -------------------

grammatico-logical framework. 


>> Tokens are: 
[grammatico, -, logical, framework, .] 

>> PoS Tags are: 
[('grammatico', 'NOUN'), ('-', 'PUNCT'), ('logical', 'ADJ'), ('framework', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('grammatico', 'nmod'), ('-', 'punct'), ('logical', 'amod'), ('framework', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[grammatico, -], [-, logical], [logical, framework], [framework, .]]

>> Trigrams: 
[[grammatico, -, logical], [-, logical, framework], [logical, framework, .]]

>> Noun Phrases are: 
[grammatico-logical framework]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

This period was one of the growing community. 


>> Tokens are: 
[period, growing, community, .] 

>> PoS Tags are: 
[('period', 'NOUN'), ('growing', 'VERB'), ('community', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('period', 'nsubj'), ('growing', 'amod'), ('community', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[period, growing], [growing, community], [community, .]]

>> Trigrams: 
[[period, growing, community], [growing, community, .]]

>> Noun Phrases are: 
[This period, the growing community]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Practical   


>> Tokens are: 
[Practical,  ] 

>> PoS Tags are: 
[('Practical', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Practical', 'amod'), (' ', 'ROOT')]

>> Bigrams: 
[[Practical,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 221 =================================

resources, grammars, and tools and parsers became available (e.g the Alvey Natural  

------------------- Sentence 1 -------------------

resources, grammars, and tools and parsers became available (e.g the Alvey Natural   


>> Tokens are: 
[resources, ,, grammars, ,, tools, parsers, available, (, e.g, Alvey, Natural,  ] 

>> PoS Tags are: 
[('resources', 'NOUN'), (',', 'PUNCT'), ('grammars', 'NOUN'), (',', 'PUNCT'), ('tools', 'NOUN'), ('parsers', 'NOUN'), ('available', 'ADJ'), ('(', 'PUNCT'), ('e.g', 'X'), ('Alvey', 'PROPN'), ('Natural', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('resources', 'nsubj'), (',', 'punct'), ('grammars', 'conj'), (',', 'punct'), ('tools', 'conj'), ('parsers', 'conj'), ('available', 'acomp'), ('(', 'punct'), ('e.g', 'dep'), ('Alvey', 'compound'), ('Natural', 'nsubj'), (' ', 'punct')]

>> Bigrams: 
[[resources, ,], [,, grammars], [grammars, ,], [,, tools], [tools, parsers], [parsers, available], [available, (], [(, e.g], [e.g, Alvey], [Alvey, Natural], [Natural,  ]]

>> Trigrams: 
[[resources, ,, grammars], [,, grammars, ,], [grammars, ,, tools], [,, tools, parsers], [tools, parsers, available], [parsers, available, (], [available, (, e.g], [(, e.g, Alvey], [e.g, Alvey, Natural], [Alvey, Natural,  ]]

>> Noun Phrases are: 
[resources, grammars, tools, parsers, the Alvey Natural]

>> Named Entities are: 
[('e.g', 'ORG')] 


================================ Paragraph 222 =================================

Language Tools (Briscoe et al., 1987) [17]. The (D)ARPA speech recognition and message  

------------------- Sentence 1 -------------------

Language Tools (Briscoe et al., 1987) 


>> Tokens are: 
[Language, Tools, (, Briscoe, et, al, ., ,, 1987, )] 

>> PoS Tags are: 
[('Language', 'PROPN'), ('Tools', 'PROPN'), ('(', 'PUNCT'), ('Briscoe', 'PROPN'), ('et', 'PROPN'), ('al', 'PROPN'), ('.', 'PROPN'), (',', 'PUNCT'), ('1987', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Language', 'compound'), ('Tools', 'ROOT'), ('(', 'punct'), ('Briscoe', 'appos'), ('et', 'compound'), ('al', 'appos'), ('.', 'punct'), (',', 'punct'), ('1987', 'npadvmod'), (')', 'punct')]

>> Bigrams: 
[[Language, Tools], [Tools, (], [(, Briscoe], [Briscoe, et], [et, al], [al, .], [., ,], [,, 1987], [1987, )]]

>> Trigrams: 
[[Language, Tools, (], [Tools, (, Briscoe], [(, Briscoe, et], [Briscoe, et, al], [et, al, .], [al, ., ,], [., ,, 1987], [,, 1987, )]]

>> Noun Phrases are: 
[Language Tools, Briscoe, et al]

>> Named Entities are: 
[('Language Tools', 'PERSON'), ('1987', 'DATE')] 

------------------- Sentence 2 -------------------

[17]. 


>> Tokens are: 
[[, 17, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('17', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('17', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 17], [17, ]], [], .]]

>> Trigrams: 
[[[, 17, ]], [17, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('17', 'CARDINAL')] 

------------------- Sentence 3 -------------------

The (D)ARPA speech recognition and message   


>> Tokens are: 
[(, D)ARPA, speech, recognition, message,  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('D)ARPA', 'ADJ'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('message', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('D)ARPA', 'amod'), ('speech', 'compound'), ('recognition', 'ROOT'), ('message', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[(, D)ARPA], [D)ARPA, speech], [speech, recognition], [recognition, message], [message,  ]]

>> Trigrams: 
[[(, D)ARPA, speech], [D)ARPA, speech, recognition], [speech, recognition, message], [recognition, message,  ]]

>> Noun Phrases are: 
[The (D)ARPA speech recognition, message]

>> Named Entities are: 
[('D)ARPA', 'PERSON')] 


================================ Paragraph 223 =================================

understanding (information extraction) conferences were not only for the tasks they  

------------------- Sentence 1 -------------------

understanding (information extraction) conferences were not only for the tasks they   


>> Tokens are: 
[understanding, (, information, extraction, ), conferences, tasks,  ] 

>> PoS Tags are: 
[('understanding', 'NOUN'), ('(', 'PUNCT'), ('information', 'NOUN'), ('extraction', 'NOUN'), (')', 'PUNCT'), ('conferences', 'NOUN'), ('tasks', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('understanding', 'nmod'), ('(', 'punct'), ('information', 'compound'), ('extraction', 'appos'), (')', 'punct'), ('conferences', 'nsubj'), ('tasks', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[understanding, (], [(, information], [information, extraction], [extraction, )], [), conferences], [conferences, tasks], [tasks,  ]]

>> Trigrams: 
[[understanding, (, information], [(, information, extraction], [information, extraction, )], [extraction, ), conferences], [), conferences, tasks], [conferences, tasks,  ]]

>> Noun Phrases are: 
[information extraction, the tasks, they]

>> Named Entities are: 
[] 


================================ Paragraph 224 =================================

addressed but for the emphasis on heavy evaluation, starting a trend that became a major  

------------------- Sentence 1 -------------------

addressed but for the emphasis on heavy evaluation, starting a trend that became a major   


>> Tokens are: 
[addressed, emphasis, heavy, evaluation, ,, starting, trend, major,  ] 

>> PoS Tags are: 
[('addressed', 'VERB'), ('emphasis', 'NOUN'), ('heavy', 'ADJ'), ('evaluation', 'NOUN'), (',', 'PUNCT'), ('starting', 'VERB'), ('trend', 'NOUN'), ('major', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('addressed', 'ROOT'), ('emphasis', 'pobj'), ('heavy', 'amod'), ('evaluation', 'pobj'), (',', 'punct'), ('starting', 'advcl'), ('trend', 'dobj'), ('major', 'amod'), (' ', 'attr')]

>> Bigrams: 
[[addressed, emphasis], [emphasis, heavy], [heavy, evaluation], [evaluation, ,], [,, starting], [starting, trend], [trend, major], [major,  ]]

>> Trigrams: 
[[addressed, emphasis, heavy], [emphasis, heavy, evaluation], [heavy, evaluation, ,], [evaluation, ,, starting], [,, starting, trend], [starting, trend, major], [trend, major,  ]]

>> Noun Phrases are: 
[the emphasis, heavy evaluation, a trend]

>> Named Entities are: 
[] 


================================ Paragraph 225 =================================

feature in 1990s (Young and Chase, 1998; Sundheim and Chinchor ,1993) [18][19]. Work on  

------------------- Sentence 1 -------------------

feature in 1990s (Young and Chase, 1998; Sundheim and Chinchor ,1993) 


>> Tokens are: 
[feature, 1990s, (, Young, Chase, ,, 1998, ;, Sundheim, Chinchor, ,, 1993, )] 

>> PoS Tags are: 
[('feature', 'NOUN'), ('1990s', 'NUM'), ('(', 'PUNCT'), ('Young', 'PROPN'), ('Chase', 'PROPN'), (',', 'PUNCT'), ('1998', 'NUM'), (';', 'PUNCT'), ('Sundheim', 'PROPN'), ('Chinchor', 'PROPN'), (',', 'PUNCT'), ('1993', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('feature', 'ROOT'), ('1990s', 'pobj'), ('(', 'punct'), ('Young', 'appos'), ('Chase', 'conj'), (',', 'punct'), ('1998', 'appos'), (';', 'punct'), ('Sundheim', 'appos'), ('Chinchor', 'conj'), (',', 'punct'), ('1993', 'appos'), (')', 'punct')]

>> Bigrams: 
[[feature, 1990s], [1990s, (], [(, Young], [Young, Chase], [Chase, ,], [,, 1998], [1998, ;], [;, Sundheim], [Sundheim, Chinchor], [Chinchor, ,], [,, 1993], [1993, )]]

>> Trigrams: 
[[feature, 1990s, (], [1990s, (, Young], [(, Young, Chase], [Young, Chase, ,], [Chase, ,, 1998], [,, 1998, ;], [1998, ;, Sundheim], [;, Sundheim, Chinchor], [Sundheim, Chinchor, ,], [Chinchor, ,, 1993], [,, 1993, )]]

>> Noun Phrases are: 
[feature, Young, Chase, Sundheim, Chinchor]

>> Named Entities are: 
[('1990s', 'DATE'), ('Young', 'PERSON'), ('Chase', 'ORG'), ('1998', 'DATE'), ('Sundheim', 'GPE'), ('Chinchor', 'GPE'), ('1993', 'DATE')] 

------------------- Sentence 2 -------------------

[18][19]. 


>> Tokens are: 
[[, 18][19, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('18][19', 'X'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('18][19', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 18][19], [18][19, ]], [], .]]

>> Trigrams: 
[[[, 18][19, ]], [18][19, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('18][19', 'CARDINAL')] 

------------------- Sentence 3 -------------------

Work on   


>> Tokens are: 
[Work,  ] 

>> PoS Tags are: 
[('Work', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Work', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[Work,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 226 =================================

user modelling (Kobsa and Wahlster , 1989) [20]  was one strand in research paper and on  

------------------- Sentence 1 -------------------

user modelling (Kobsa and Wahlster , 1989) 


>> Tokens are: 
[user, modelling, (, Kobsa, Wahlster, ,, 1989, )] 

>> PoS Tags are: 
[('user', 'NOUN'), ('modelling', 'NOUN'), ('(', 'PUNCT'), ('Kobsa', 'PROPN'), ('Wahlster', 'PROPN'), (',', 'PUNCT'), ('1989', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('user', 'compound'), ('modelling', 'ROOT'), ('(', 'punct'), ('Kobsa', 'appos'), ('Wahlster', 'conj'), (',', 'punct'), ('1989', 'nummod'), (')', 'punct')]

>> Bigrams: 
[[user, modelling], [modelling, (], [(, Kobsa], [Kobsa, Wahlster], [Wahlster, ,], [,, 1989], [1989, )]]

>> Trigrams: 
[[user, modelling, (], [modelling, (, Kobsa], [(, Kobsa, Wahlster], [Kobsa, Wahlster, ,], [Wahlster, ,, 1989], [,, 1989, )]]

>> Noun Phrases are: 
[user modelling, Kobsa, Wahlster]

>> Named Entities are: 
[('Kobsa', 'PERSON'), ('Wahlster', 'PERSON'), ('1989', 'DATE')] 

------------------- Sentence 2 -------------------

[20]  was one strand in research paper and on   


>> Tokens are: 
[[, 20, ],  , strand, research, paper,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('20', 'NUM'), (']', 'PUNCT'), (' ', 'SPACE'), ('strand', 'NOUN'), ('research', 'NOUN'), ('paper', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('20', 'dep'), (']', 'punct'), (' ', 'nsubj'), ('strand', 'attr'), ('research', 'compound'), ('paper', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[[, 20], [20, ]], [],  ], [ , strand], [strand, research], [research, paper], [paper,  ]]

>> Trigrams: 
[[[, 20, ]], [20, ],  ], [],  , strand], [ , strand, research], [strand, research, paper], [research, paper,  ]]

>> Noun Phrases are: 
[one strand, research paper]

>> Named Entities are: 
[('20', 'CARDINAL')] 


================================ Paragraph 227 =================================

discourse structure serving this (Cohen et al., 1990)  [21]. At the same time, as McKeown  

------------------- Sentence 1 -------------------

discourse structure serving this (Cohen et al., 1990) 


>> Tokens are: 
[discourse, structure, serving, (, Cohen, et, al, ., ,, 1990, )] 

>> PoS Tags are: 
[('discourse', 'NOUN'), ('structure', 'NOUN'), ('serving', 'VERB'), ('(', 'PUNCT'), ('Cohen', 'PROPN'), ('et', 'PROPN'), ('al', 'PROPN'), ('.', 'PROPN'), (',', 'PUNCT'), ('1990', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('discourse', 'compound'), ('structure', 'ROOT'), ('serving', 'acl'), ('(', 'punct'), ('Cohen', 'compound'), ('et', 'compound'), ('al', 'appos'), ('.', 'punct'), (',', 'punct'), ('1990', 'appos'), (')', 'punct')]

>> Bigrams: 
[[discourse, structure], [structure, serving], [serving, (], [(, Cohen], [Cohen, et], [et, al], [al, .], [., ,], [,, 1990], [1990, )]]

>> Trigrams: 
[[discourse, structure, serving], [structure, serving, (], [serving, (, Cohen], [(, Cohen, et], [Cohen, et, al], [et, al, .], [al, ., ,], [., ,, 1990], [,, 1990, )]]

>> Noun Phrases are: 
[discourse structure, Cohen et al]

>> Named Entities are: 
[('Cohen', 'PERSON'), ('1990', 'DATE')] 

------------------- Sentence 2 -------------------

 [21]. 


>> Tokens are: 
[ , [, 21, ], .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('[', 'PUNCT'), ('21', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('[', 'punct'), ('21', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[ , [], [[, 21], [21, ]], [], .]]

>> Trigrams: 
[[ , [, 21], [[, 21, ]], [21, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('21', 'CARDINAL')] 

------------------- Sentence 3 -------------------

At the same time, 


>> Tokens are: 
[time, ,] 

>> PoS Tags are: 
[('time', 'NOUN'), (',', 'PUNCT')] 

>> Dependency Tags are: 
[('time', 'pobj'), (',', 'punct')]

>> Bigrams: 
[[time, ,]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[the same time]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

as McKeown   


>> Tokens are: 
[McKeown,  ] 

>> PoS Tags are: 
[('McKeown', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('McKeown', 'pobj'), (' ', 'nummod')]

>> Bigrams: 
[[McKeown,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[McKeown]

>> Named Entities are: 
[] 


================================ Paragraph 228 =================================

(1985) [22] showed, rhetorical schemas could be used for producing both linguistically  

------------------- Sentence 1 -------------------

(1985) 


>> Tokens are: 
[(, 1985, )] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('1985', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('1985', 'ROOT'), (')', 'punct')]

>> Bigrams: 
[[(, 1985], [1985, )]]

>> Trigrams: 
[[(, 1985, )]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1985', 'DATE')] 

------------------- Sentence 2 -------------------

[22] showed, rhetorical schemas could be used for producing both linguistically   


>> Tokens are: 
[[, 22, ], showed, ,, rhetorical, schemas, producing, linguistically,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('22', 'NUM'), (']', 'PUNCT'), ('showed', 'VERB'), (',', 'PUNCT'), ('rhetorical', 'ADJ'), ('schemas', 'NOUN'), ('producing', 'VERB'), ('linguistically', 'ADV'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('22', 'dep'), (']', 'punct'), ('showed', 'ROOT'), (',', 'punct'), ('rhetorical', 'amod'), ('schemas', 'nsubjpass'), ('producing', 'pcomp'), ('linguistically', 'advmod'), (' ', 'punct')]

>> Bigrams: 
[[[, 22], [22, ]], [], showed], [showed, ,], [,, rhetorical], [rhetorical, schemas], [schemas, producing], [producing, linguistically], [linguistically,  ]]

>> Trigrams: 
[[[, 22, ]], [22, ], showed], [], showed, ,], [showed, ,, rhetorical], [,, rhetorical, schemas], [rhetorical, schemas, producing], [schemas, producing, linguistically], [producing, linguistically,  ]]

>> Noun Phrases are: 
[rhetorical schemas]

>> Named Entities are: 
[('22', 'CARDINAL')] 


================================ Paragraph 229 =================================

coherent and communicatively effective text. Some researches in NLP marked important  

------------------- Sentence 1 -------------------

coherent and communicatively effective text. 


>> Tokens are: 
[coherent, communicatively, effective, text, .] 

>> PoS Tags are: 
[('coherent', 'ADJ'), ('communicatively', 'ADV'), ('effective', 'ADJ'), ('text', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('coherent', 'amod'), ('communicatively', 'advmod'), ('effective', 'conj'), ('text', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[coherent, communicatively], [communicatively, effective], [effective, text], [text, .]]

>> Trigrams: 
[[coherent, communicatively, effective], [communicatively, effective, text], [effective, text, .]]

>> Noun Phrases are: 
[coherent and communicatively effective text]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Some researches in NLP marked important   


>> Tokens are: 
[researches, NLP, marked, important,  ] 

>> PoS Tags are: 
[('researches', 'VERB'), ('NLP', 'PROPN'), ('marked', 'VERB'), ('important', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('researches', 'nsubj'), ('NLP', 'pobj'), ('marked', 'ROOT'), ('important', 'amod'), (' ', 'dobj')]

>> Bigrams: 
[[researches, NLP], [NLP, marked], [marked, important], [important,  ]]

>> Trigrams: 
[[researches, NLP, marked], [NLP, marked, important], [marked, important,  ]]

>> Noun Phrases are: 
[NLP]

>> Named Entities are: 
[('NLP', 'ORG')] 


================================ Paragraph 230 =================================

topics for future like word sense disambiguation (Small et al., 1988) [23] and probabilistic  

------------------- Sentence 1 -------------------

topics for future like word sense disambiguation (Small et al., 1988) 


>> Tokens are: 
[topics, future, like, word, sense, disambiguation, (, Small, et, al, ., ,, 1988, )] 

>> PoS Tags are: 
[('topics', 'NOUN'), ('future', 'NOUN'), ('like', 'ADP'), ('word', 'NOUN'), ('sense', 'NOUN'), ('disambiguation', 'NOUN'), ('(', 'PUNCT'), ('Small', 'PROPN'), ('et', 'NOUN'), ('al', 'PROPN'), ('.', 'PROPN'), (',', 'PUNCT'), ('1988', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('topics', 'ROOT'), ('future', 'pobj'), ('like', 'prep'), ('word', 'compound'), ('sense', 'compound'), ('disambiguation', 'pobj'), ('(', 'punct'), ('Small', 'compound'), ('et', 'compound'), ('al', 'appos'), ('.', 'punct'), (',', 'punct'), ('1988', 'appos'), (')', 'punct')]

>> Bigrams: 
[[topics, future], [future, like], [like, word], [word, sense], [sense, disambiguation], [disambiguation, (], [(, Small], [Small, et], [et, al], [al, .], [., ,], [,, 1988], [1988, )]]

>> Trigrams: 
[[topics, future, like], [future, like, word], [like, word, sense], [word, sense, disambiguation], [sense, disambiguation, (], [disambiguation, (, Small], [(, Small, et], [Small, et, al], [et, al, .], [al, ., ,], [., ,, 1988], [,, 1988, )]]

>> Noun Phrases are: 
[topics, future, word sense disambiguation, Small et al]

>> Named Entities are: 
[('1988', 'DATE')] 

------------------- Sentence 2 -------------------

[23] and probabilistic   


>> Tokens are: 
[[, 23, ], probabilistic,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('23', 'NUM'), (']', 'PUNCT'), ('probabilistic', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('23', 'ROOT'), (']', 'punct'), ('probabilistic', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[[, 23], [23, ]], [], probabilistic], [probabilistic,  ]]

>> Trigrams: 
[[[, 23, ]], [23, ], probabilistic], [], probabilistic,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('23', 'CARDINAL')] 


================================ Paragraph 231 =================================

networks, statistically coloured NLP, the work on the lexicon, also pointed in this direction.  

------------------- Sentence 1 -------------------

networks, statistically coloured NLP, the work on the lexicon, also pointed in this direction. 


>> Tokens are: 
[networks, ,, statistically, coloured, NLP, ,, work, lexicon, ,, pointed, direction, .] 

>> PoS Tags are: 
[('networks', 'NOUN'), (',', 'PUNCT'), ('statistically', 'ADV'), ('coloured', 'ADJ'), ('NLP', 'PROPN'), (',', 'PUNCT'), ('work', 'NOUN'), ('lexicon', 'NOUN'), (',', 'PUNCT'), ('pointed', 'VERB'), ('direction', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('networks', 'nsubj'), (',', 'punct'), ('statistically', 'advmod'), ('coloured', 'amod'), ('NLP', 'appos'), (',', 'punct'), ('work', 'appos'), ('lexicon', 'pobj'), (',', 'punct'), ('pointed', 'ROOT'), ('direction', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[networks, ,], [,, statistically], [statistically, coloured], [coloured, NLP], [NLP, ,], [,, work], [work, lexicon], [lexicon, ,], [,, pointed], [pointed, direction], [direction, .]]

>> Trigrams: 
[[networks, ,, statistically], [,, statistically, coloured], [statistically, coloured, NLP], [coloured, NLP, ,], [NLP, ,, work], [,, work, lexicon], [work, lexicon, ,], [lexicon, ,, pointed], [,, pointed, direction], [pointed, direction, .]]

>> Noun Phrases are: 
[networks, statistically coloured NLP, the work, the lexicon, this direction]

>> Named Entities are: 
[('NLP', 'ORG')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 232 =================================

Statistical language processing was a major thing in 90s (Manning and Schuetze,1999) [24],  

------------------- Sentence 1 -------------------

Statistical language processing was a major thing in 90s (Manning and Schuetze,1999) 


>> Tokens are: 
[Statistical, language, processing, major, thing, 90s, (, Manning, Schuetze,1999, )] 

>> PoS Tags are: 
[('Statistical', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), ('major', 'ADJ'), ('thing', 'NOUN'), ('90s', 'NOUN'), ('(', 'PUNCT'), ('Manning', 'NOUN'), ('Schuetze,1999', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Statistical', 'amod'), ('language', 'compound'), ('processing', 'nsubj'), ('major', 'amod'), ('thing', 'attr'), ('90s', 'pobj'), ('(', 'punct'), ('Manning', 'dep'), ('Schuetze,1999', 'conj'), (')', 'punct')]

>> Bigrams: 
[[Statistical, language], [language, processing], [processing, major], [major, thing], [thing, 90s], [90s, (], [(, Manning], [Manning, Schuetze,1999], [Schuetze,1999, )]]

>> Trigrams: 
[[Statistical, language, processing], [language, processing, major], [processing, major, thing], [major, thing, 90s], [thing, 90s, (], [90s, (, Manning], [(, Manning, Schuetze,1999], [Manning, Schuetze,1999, )]]

>> Noun Phrases are: 
[Statistical language processing, a major thing, 90s]

>> Named Entities are: 
[('90s', 'DATE')] 

------------------- Sentence 2 -------------------

[24], 


>> Tokens are: 
[[, 24, ], ,] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('24', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('24', 'ROOT'), (']', 'punct'), (',', 'punct')]

>> Bigrams: 
[[[, 24], [24, ]], [], ,]]

>> Trigrams: 
[[[, 24, ]], [24, ], ,]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('24', 'CARDINAL')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 233 =================================

because this not only involves data analysts. Information extraction and automatic  

------------------- Sentence 1 -------------------

because this not only involves data analysts. 


>> Tokens are: 
[involves, data, analysts, .] 

>> PoS Tags are: 
[('involves', 'VERB'), ('data', 'NOUN'), ('analysts', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('involves', 'ROOT'), ('data', 'compound'), ('analysts', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[involves, data], [data, analysts], [analysts, .]]

>> Trigrams: 
[[involves, data, analysts], [data, analysts, .]]

>> Noun Phrases are: 
[data analysts]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Information extraction and automatic   


>> Tokens are: 
[Information, extraction, automatic,  ] 

>> PoS Tags are: 
[('Information', 'NOUN'), ('extraction', 'NOUN'), ('automatic', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Information', 'compound'), ('extraction', 'ROOT'), ('automatic', 'amod'), (' ', 'conj')]

>> Bigrams: 
[[Information, extraction], [extraction, automatic], [automatic,  ]]

>> Trigrams: 
[[Information, extraction, automatic], [extraction, automatic,  ]]

>> Noun Phrases are: 
[Information extraction]

>> Named Entities are: 
[] 


================================ Paragraph 234 =================================

summarising (Mani and Maybury ,1999) [25] was also a point of focus.  

------------------- Sentence 1 -------------------

summarising (Mani and Maybury ,1999) 


>> Tokens are: 
[summarising, (, Mani, Maybury, ,, 1999, )] 

>> PoS Tags are: 
[('summarising', 'VERB'), ('(', 'PUNCT'), ('Mani', 'PROPN'), ('Maybury', 'PROPN'), (',', 'PUNCT'), ('1999', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('summarising', 'ROOT'), ('(', 'punct'), ('Mani', 'dobj'), ('Maybury', 'conj'), (',', 'punct'), ('1999', 'npadvmod'), (')', 'punct')]

>> Bigrams: 
[[summarising, (], [(, Mani], [Mani, Maybury], [Maybury, ,], [,, 1999], [1999, )]]

>> Trigrams: 
[[summarising, (, Mani], [(, Mani, Maybury], [Mani, Maybury, ,], [Maybury, ,, 1999], [,, 1999, )]]

>> Noun Phrases are: 
[Mani, Maybury]

>> Named Entities are: 
[('Mani', 'PERSON'), ('1999', 'DATE')] 

------------------- Sentence 2 -------------------

[25] was also a point of focus. 


>> Tokens are: 
[[, 25, ], point, focus, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('25', 'NUM'), (']', 'PUNCT'), ('point', 'NOUN'), ('focus', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('25', 'nsubj'), (']', 'punct'), ('point', 'attr'), ('focus', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[[, 25], [25, ]], [], point], [point, focus], [focus, .]]

>> Trigrams: 
[[[, 25, ]], [25, ], point], [], point, focus], [point, focus, .]]

>> Noun Phrases are: 
[a point, focus]

>> Named Entities are: 
[('25', 'CARDINAL')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 235 =================================

Recent researches are mainly focused on unsupervised and semi-supervised learning  

------------------- Sentence 1 -------------------

Recent researches are mainly focused on unsupervised and semi-supervised learning   


>> Tokens are: 
[Recent, researches, mainly, focused, unsupervised, semi, -, supervised, learning,  ] 

>> PoS Tags are: 
[('Recent', 'ADJ'), ('researches', 'NOUN'), ('mainly', 'ADV'), ('focused', 'VERB'), ('unsupervised', 'ADJ'), ('semi', 'ADJ'), ('-', 'ADJ'), ('supervised', 'ADJ'), ('learning', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Recent', 'amod'), ('researches', 'nsubj'), ('mainly', 'advmod'), ('focused', 'acomp'), ('unsupervised', 'amod'), ('semi', 'conj'), ('-', 'conj'), ('supervised', 'amod'), ('learning', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Recent, researches], [researches, mainly], [mainly, focused], [focused, unsupervised], [unsupervised, semi], [semi, -], [-, supervised], [supervised, learning], [learning,  ]]

>> Trigrams: 
[[Recent, researches, mainly], [researches, mainly, focused], [mainly, focused, unsupervised], [focused, unsupervised, semi], [unsupervised, semi, -], [semi, -, supervised], [-, supervised, learning], [supervised, learning,  ]]

>> Noun Phrases are: 
[Recent researches, unsupervised and semi-supervised learning]

>> Named Entities are: 
[] 


================================ Paragraph 236 =================================

algorithms.  

------------------- Sentence 1 -------------------

algorithms. 


>> Tokens are: 
[algorithms, .] 

>> PoS Tags are: 
[('algorithms', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('algorithms', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[algorithms, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[algorithms]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 237 =================================

5. Related Work  

------------------- Sentence 1 -------------------

5. 


>> Tokens are: 
[5, .] 

>> PoS Tags are: 
[('5', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('5', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[5, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('5', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Related Work   


>> Tokens are: 
[Related, Work,  ] 

>> PoS Tags are: 
[('Related', 'VERB'), ('Work', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Related', 'amod'), ('Work', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[Related, Work], [Work,  ]]

>> Trigrams: 
[[Related, Work,  ]]

>> Noun Phrases are: 
[Related Work]

>> Named Entities are: 
[] 


================================ Paragraph 238 =================================

Many researchers worked on NLP, building tools and systems which makes NLP what it is  

------------------- Sentence 1 -------------------

Many researchers worked on NLP, building tools and systems which makes NLP what it is   


>> Tokens are: 
[researchers, worked, NLP, ,, building, tools, systems, makes, NLP,  ] 

>> PoS Tags are: 
[('researchers', 'NOUN'), ('worked', 'VERB'), ('NLP', 'PROPN'), (',', 'PUNCT'), ('building', 'NOUN'), ('tools', 'NOUN'), ('systems', 'NOUN'), ('makes', 'VERB'), ('NLP', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('researchers', 'nsubj'), ('worked', 'ROOT'), ('NLP', 'pobj'), (',', 'punct'), ('building', 'compound'), ('tools', 'conj'), ('systems', 'conj'), ('makes', 'relcl'), ('NLP', 'ccomp'), (' ', 'punct')]

>> Bigrams: 
[[researchers, worked], [worked, NLP], [NLP, ,], [,, building], [building, tools], [tools, systems], [systems, makes], [makes, NLP], [NLP,  ]]

>> Trigrams: 
[[researchers, worked, NLP], [worked, NLP, ,], [NLP, ,, building], [,, building, tools], [building, tools, systems], [tools, systems, makes], [systems, makes, NLP], [makes, NLP,  ]]

>> Noun Phrases are: 
[Many researchers, NLP, building tools, systems, what, it]

>> Named Entities are: 
[('NLP', 'ORG'), ('NLP', 'ORG')] 


================================ Paragraph 239 =================================

today. Tools like Sentiment Analyser, Parts of Speech (POS)Taggers, Chunking, Named  

------------------- Sentence 1 -------------------

today. 


>> Tokens are: 
[today, .] 

>> PoS Tags are: 
[('today', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('today', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[today, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[today]

>> Named Entities are: 
[('today', 'DATE')] 

------------------- Sentence 2 -------------------

Tools like Sentiment Analyser, Parts of Speech (POS)Taggers, Chunking, Named   


>> Tokens are: 
[Tools, like, Sentiment, Analyser, ,, Parts, Speech, (, POS)Taggers, ,, Chunking, ,, Named,  ] 

>> PoS Tags are: 
[('Tools', 'NOUN'), ('like', 'ADP'), ('Sentiment', 'PROPN'), ('Analyser', 'PROPN'), (',', 'PUNCT'), ('Parts', 'PROPN'), ('Speech', 'PROPN'), ('(', 'PUNCT'), ('POS)Taggers', 'PROPN'), (',', 'PUNCT'), ('Chunking', 'PROPN'), (',', 'PUNCT'), ('Named', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Tools', 'ROOT'), ('like', 'prep'), ('Sentiment', 'compound'), ('Analyser', 'pobj'), (',', 'punct'), ('Parts', 'appos'), ('Speech', 'pobj'), ('(', 'punct'), ('POS)Taggers', 'appos'), (',', 'punct'), ('Chunking', 'conj'), (',', 'punct'), ('Named', 'acl'), (' ', 'nummod')]

>> Bigrams: 
[[Tools, like], [like, Sentiment], [Sentiment, Analyser], [Analyser, ,], [,, Parts], [Parts, Speech], [Speech, (], [(, POS)Taggers], [POS)Taggers, ,], [,, Chunking], [Chunking, ,], [,, Named], [Named,  ]]

>> Trigrams: 
[[Tools, like, Sentiment], [like, Sentiment, Analyser], [Sentiment, Analyser, ,], [Analyser, ,, Parts], [,, Parts, Speech], [Parts, Speech, (], [Speech, (, POS)Taggers], [(, POS)Taggers, ,], [POS)Taggers, ,, Chunking], [,, Chunking, ,], [Chunking, ,, Named], [,, Named,  ]]

>> Noun Phrases are: 
[Tools, Sentiment Analyser, Parts, Speech, (POS)Taggers, Chunking]

>> Named Entities are: 
[('Sentiment Analyser', 'PERSON'), ('Chunking', 'ORG')] 


================================ Paragraph 240 =================================

Entity Recognitions (NER), Emotion detection, Semantic Role Labelling made NLP a good  

------------------- Sentence 1 -------------------

Entity Recognitions (NER), Emotion detection, Semantic Role Labelling made NLP a good   


>> Tokens are: 
[Entity, Recognitions, (, NER, ), ,, Emotion, detection, ,, Semantic, Role, Labelling, NLP, good,  ] 

>> PoS Tags are: 
[('Entity', 'PROPN'), ('Recognitions', 'PROPN'), ('(', 'PUNCT'), ('NER', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('Emotion', 'NOUN'), ('detection', 'NOUN'), (',', 'PUNCT'), ('Semantic', 'PROPN'), ('Role', 'PROPN'), ('Labelling', 'PROPN'), ('NLP', 'PROPN'), ('good', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Entity', 'compound'), ('Recognitions', 'dep'), ('(', 'punct'), ('NER', 'appos'), (')', 'punct'), (',', 'punct'), ('Emotion', 'compound'), ('detection', 'appos'), (',', 'punct'), ('Semantic', 'compound'), ('Role', 'compound'), ('Labelling', 'nsubj'), ('NLP', 'nsubj'), ('good', 'ccomp'), (' ', 'punct')]

>> Bigrams: 
[[Entity, Recognitions], [Recognitions, (], [(, NER], [NER, )], [), ,], [,, Emotion], [Emotion, detection], [detection, ,], [,, Semantic], [Semantic, Role], [Role, Labelling], [Labelling, NLP], [NLP, good], [good,  ]]

>> Trigrams: 
[[Entity, Recognitions, (], [Recognitions, (, NER], [(, NER, )], [NER, ), ,], [), ,, Emotion], [,, Emotion, detection], [Emotion, detection, ,], [detection, ,, Semantic], [,, Semantic, Role], [Semantic, Role, Labelling], [Role, Labelling, NLP], [Labelling, NLP, good], [NLP, good,  ]]

>> Noun Phrases are: 
[NER, Emotion detection, Semantic Role Labelling, NLP]

>> Named Entities are: 
[('Semantic Role Labelling', 'ORG'), ('NLP', 'ORG')] 


================================ Paragraph 241 =================================

topic for research.   

------------------- Sentence 1 -------------------

topic for research. 


>> Tokens are: 
[topic, research, .] 

>> PoS Tags are: 
[('topic', 'NOUN'), ('research', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('topic', 'ROOT'), ('research', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[topic, research], [research, .]]

>> Trigrams: 
[[topic, research, .]]

>> Noun Phrases are: 
[topic, research]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 242 =================================

Sentiment analyser (Jeonghee etal.,2003) [26] works by extracting sentiments about given  

------------------- Sentence 1 -------------------

Sentiment analyser (Jeonghee etal.,2003) 


>> Tokens are: 
[Sentiment, analyser, (, Jeonghee, etal, ., ,2003, )] 

>> PoS Tags are: 
[('Sentiment', 'NOUN'), ('analyser', 'NOUN'), ('(', 'PUNCT'), ('Jeonghee', 'NOUN'), ('etal', 'NOUN'), ('.', 'PUNCT'), (',2003', 'PUNCT'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Sentiment', 'compound'), ('analyser', 'ROOT'), ('(', 'punct'), ('Jeonghee', 'compound'), ('etal', 'appos'), ('.', 'punct'), (',2003', 'punct'), (')', 'punct')]

>> Bigrams: 
[[Sentiment, analyser], [analyser, (], [(, Jeonghee], [Jeonghee, etal], [etal, .], [., ,2003], [,2003, )]]

>> Trigrams: 
[[Sentiment, analyser, (], [analyser, (, Jeonghee], [(, Jeonghee, etal], [Jeonghee, etal, .], [etal, ., ,2003], [., ,2003, )]]

>> Noun Phrases are: 
[Sentiment analyser, Jeonghee etal]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

[26] works by extracting sentiments about given   


>> Tokens are: 
[[, 26, ], works, extracting, sentiments, given,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('26', 'NUM'), (']', 'PUNCT'), ('works', 'VERB'), ('extracting', 'VERB'), ('sentiments', 'NOUN'), ('given', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('26', 'dep'), (']', 'dep'), ('works', 'ROOT'), ('extracting', 'amod'), ('sentiments', 'pobj'), ('given', 'prep'), (' ', 'dobj')]

>> Bigrams: 
[[[, 26], [26, ]], [], works], [works, extracting], [extracting, sentiments], [sentiments, given], [given,  ]]

>> Trigrams: 
[[[, 26, ]], [26, ], works], [], works, extracting], [works, extracting, sentiments], [extracting, sentiments, given], [sentiments, given,  ]]

>> Noun Phrases are: 
[extracting sentiments]

>> Named Entities are: 
[('26', 'CARDINAL')] 


================================ Paragraph 243 =================================

topic. Sentiment analysis consists of a topic specific feature term extraction, sentiment  

------------------- Sentence 1 -------------------

topic. 


>> Tokens are: 
[topic, .] 

>> PoS Tags are: 
[('topic', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('topic', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[topic, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[topic]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Sentiment analysis consists of a topic specific feature term extraction, sentiment   


>> Tokens are: 
[Sentiment, analysis, consists, topic, specific, feature, term, extraction, ,, sentiment,  ] 

>> PoS Tags are: 
[('Sentiment', 'NOUN'), ('analysis', 'NOUN'), ('consists', 'VERB'), ('topic', 'NOUN'), ('specific', 'ADJ'), ('feature', 'NOUN'), ('term', 'NOUN'), ('extraction', 'NOUN'), (',', 'PUNCT'), ('sentiment', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Sentiment', 'compound'), ('analysis', 'nsubj'), ('consists', 'ROOT'), ('topic', 'nmod'), ('specific', 'amod'), ('feature', 'compound'), ('term', 'compound'), ('extraction', 'pobj'), (',', 'punct'), ('sentiment', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[Sentiment, analysis], [analysis, consists], [consists, topic], [topic, specific], [specific, feature], [feature, term], [term, extraction], [extraction, ,], [,, sentiment], [sentiment,  ]]

>> Trigrams: 
[[Sentiment, analysis, consists], [analysis, consists, topic], [consists, topic, specific], [topic, specific, feature], [specific, feature, term], [feature, term, extraction], [term, extraction, ,], [extraction, ,, sentiment], [,, sentiment,  ]]

>> Noun Phrases are: 
[Sentiment analysis, a topic specific feature term extraction, sentiment]

>> Named Entities are: 
[] 


================================ Paragraph 244 =================================

extraction, and association by relationship analysis. Sentiment Analysis utilizes two linguistic  

------------------- Sentence 1 -------------------

extraction, and association by relationship analysis. 


>> Tokens are: 
[extraction, ,, association, relationship, analysis, .] 

>> PoS Tags are: 
[('extraction', 'NOUN'), (',', 'PUNCT'), ('association', 'NOUN'), ('relationship', 'NOUN'), ('analysis', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('extraction', 'ROOT'), (',', 'punct'), ('association', 'conj'), ('relationship', 'compound'), ('analysis', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[extraction, ,], [,, association], [association, relationship], [relationship, analysis], [analysis, .]]

>> Trigrams: 
[[extraction, ,, association], [,, association, relationship], [association, relationship, analysis], [relationship, analysis, .]]

>> Noun Phrases are: 
[extraction, association, relationship analysis]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Sentiment Analysis utilizes two linguistic   


>> Tokens are: 
[Sentiment, Analysis, utilizes, linguistic,  ] 

>> PoS Tags are: 
[('Sentiment', 'NOUN'), ('Analysis', 'PROPN'), ('utilizes', 'VERB'), ('linguistic', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Sentiment', 'compound'), ('Analysis', 'nsubj'), ('utilizes', 'ROOT'), ('linguistic', 'amod'), (' ', 'dobj')]

>> Bigrams: 
[[Sentiment, Analysis], [Analysis, utilizes], [utilizes, linguistic], [linguistic,  ]]

>> Trigrams: 
[[Sentiment, Analysis, utilizes], [Analysis, utilizes, linguistic], [utilizes, linguistic,  ]]

>> Noun Phrases are: 
[Sentiment Analysis]

>> Named Entities are: 
[] 


================================ Paragraph 245 =================================

resources for the analysis: the sentiment lexicon and the sentiment pattern database. It  

------------------- Sentence 1 -------------------

resources for the analysis: the sentiment lexicon and the sentiment pattern database. 


>> Tokens are: 
[resources, analysis, :, sentiment, lexicon, sentiment, pattern, database, .] 

>> PoS Tags are: 
[('resources', 'NOUN'), ('analysis', 'NOUN'), (':', 'PUNCT'), ('sentiment', 'NOUN'), ('lexicon', 'VERB'), ('sentiment', 'NOUN'), ('pattern', 'NOUN'), ('database', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('resources', 'dep'), ('analysis', 'pobj'), (':', 'punct'), ('sentiment', 'nsubj'), ('lexicon', 'ROOT'), ('sentiment', 'compound'), ('pattern', 'compound'), ('database', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[resources, analysis], [analysis, :], [:, sentiment], [sentiment, lexicon], [lexicon, sentiment], [sentiment, pattern], [pattern, database], [database, .]]

>> Trigrams: 
[[resources, analysis, :], [analysis, :, sentiment], [:, sentiment, lexicon], [sentiment, lexicon, sentiment], [lexicon, sentiment, pattern], [sentiment, pattern, database], [pattern, database, .]]

>> Noun Phrases are: 
[the analysis, the sentiment, the sentiment pattern database]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

It   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'punct')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[It]

>> Named Entities are: 
[] 


================================ Paragraph 246 =================================

analyses the documents for positive and negative words and try to give ratings on scale -5 to  

------------------- Sentence 1 -------------------

analyses the documents for positive and negative words and try to give ratings on scale -5 to   


>> Tokens are: 
[analyses, documents, positive, negative, words, try, ratings, scale, -5,  ] 

>> PoS Tags are: 
[('analyses', 'VERB'), ('documents', 'NOUN'), ('positive', 'ADJ'), ('negative', 'ADJ'), ('words', 'NOUN'), ('try', 'VERB'), ('ratings', 'NOUN'), ('scale', 'NOUN'), ('-5', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('analyses', 'ROOT'), ('documents', 'dobj'), ('positive', 'amod'), ('negative', 'conj'), ('words', 'pobj'), ('try', 'conj'), ('ratings', 'dobj'), ('scale', 'pobj'), ('-5', 'punct'), (' ', 'pobj')]

>> Bigrams: 
[[analyses, documents], [documents, positive], [positive, negative], [negative, words], [words, try], [try, ratings], [ratings, scale], [scale, -5], [-5,  ]]

>> Trigrams: 
[[analyses, documents, positive], [documents, positive, negative], [positive, negative, words], [negative, words, try], [words, try, ratings], [try, ratings, scale], [ratings, scale, -5], [scale, -5,  ]]

>> Noun Phrases are: 
[the documents, positive and negative words, ratings, scale]

>> Named Entities are: 
[] 


================================ Paragraph 247 =================================

+5.  

------------------- Sentence 1 -------------------

+5. 


>> Tokens are: 
[+5, .] 

>> PoS Tags are: 
[('+5', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('+5', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[+5, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[+5]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 248 =================================

Parts of speech taggers for the languages like European languages, research is being done on  

------------------- Sentence 1 -------------------

Parts of speech taggers for the languages like European languages, research is being done on   


>> Tokens are: 
[Parts, speech, taggers, languages, like, European, languages, ,, research,  ] 

>> PoS Tags are: 
[('Parts', 'NOUN'), ('speech', 'NOUN'), ('taggers', 'NOUN'), ('languages', 'NOUN'), ('like', 'ADP'), ('European', 'ADJ'), ('languages', 'NOUN'), (',', 'PUNCT'), ('research', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Parts', 'nsubjpass'), ('speech', 'compound'), ('taggers', 'pobj'), ('languages', 'pobj'), ('like', 'prep'), ('European', 'amod'), ('languages', 'pobj'), (',', 'punct'), ('research', 'nsubjpass'), (' ', 'pobj')]

>> Bigrams: 
[[Parts, speech], [speech, taggers], [taggers, languages], [languages, like], [like, European], [European, languages], [languages, ,], [,, research], [research,  ]]

>> Trigrams: 
[[Parts, speech, taggers], [speech, taggers, languages], [taggers, languages, like], [languages, like, European], [like, European, languages], [European, languages, ,], [languages, ,, research], [,, research,  ]]

>> Noun Phrases are: 
[Parts, speech taggers, the languages, European languages, research]

>> Named Entities are: 
[('European', 'NORP')] 


================================ Paragraph 249 =================================

making parts of speech taggers for other languages like Arabic, Sanskrit (Namrata Tapswi ,  

------------------- Sentence 1 -------------------

making parts of speech taggers for other languages like Arabic, Sanskrit (Namrata Tapswi ,   


>> Tokens are: 
[making, parts, speech, taggers, languages, like, Arabic, ,, Sanskrit, (, Namrata, Tapswi, ,,  ] 

>> PoS Tags are: 
[('making', 'VERB'), ('parts', 'NOUN'), ('speech', 'NOUN'), ('taggers', 'NOUN'), ('languages', 'NOUN'), ('like', 'ADP'), ('Arabic', 'PROPN'), (',', 'PUNCT'), ('Sanskrit', 'PROPN'), ('(', 'PUNCT'), ('Namrata', 'PROPN'), ('Tapswi', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('making', 'ROOT'), ('parts', 'dobj'), ('speech', 'compound'), ('taggers', 'pobj'), ('languages', 'pobj'), ('like', 'prep'), ('Arabic', 'pobj'), (',', 'punct'), ('Sanskrit', 'conj'), ('(', 'punct'), ('Namrata', 'compound'), ('Tapswi', 'appos'), (',', 'punct'), (' ', 'dobj')]

>> Bigrams: 
[[making, parts], [parts, speech], [speech, taggers], [taggers, languages], [languages, like], [like, Arabic], [Arabic, ,], [,, Sanskrit], [Sanskrit, (], [(, Namrata], [Namrata, Tapswi], [Tapswi, ,], [,,  ]]

>> Trigrams: 
[[making, parts, speech], [parts, speech, taggers], [speech, taggers, languages], [taggers, languages, like], [languages, like, Arabic], [like, Arabic, ,], [Arabic, ,, Sanskrit], [,, Sanskrit, (], [Sanskrit, (, Namrata], [(, Namrata, Tapswi], [Namrata, Tapswi, ,], [Tapswi, ,,  ]]

>> Noun Phrases are: 
[parts, speech taggers, other languages, Arabic, Sanskrit, Namrata Tapswi]

>> Named Entities are: 
[('Arabic', 'LANGUAGE'), ('Sanskrit', 'PERSON'), ('Namrata Tapswi', 'FAC')] 


================================ Paragraph 250 =================================

Suresh Jain ., 2012) [27], Hindi (Pradipta Ranjan Ray et al., 2003 )[28] etc. It can efficiently  

------------------- Sentence 1 -------------------

Suresh Jain ., 2012) 


>> Tokens are: 
[Suresh, Jain, ., ,, 2012, )] 

>> PoS Tags are: 
[('Suresh', 'PROPN'), ('Jain', 'PROPN'), ('.', 'PUNCT'), (',', 'PUNCT'), ('2012', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Suresh', 'compound'), ('Jain', 'ROOT'), ('.', 'punct'), (',', 'punct'), ('2012', 'npadvmod'), (')', 'punct')]

>> Bigrams: 
[[Suresh, Jain], [Jain, .], [., ,], [,, 2012], [2012, )]]

>> Trigrams: 
[[Suresh, Jain, .], [Jain, ., ,], [., ,, 2012], [,, 2012, )]]

>> Noun Phrases are: 
[Suresh Jain]

>> Named Entities are: 
[('Suresh Jain', 'PERSON'), ('2012', 'DATE')] 

------------------- Sentence 2 -------------------

[27], Hindi (Pradipta Ranjan Ray et al., 2003 ) 


>> Tokens are: 
[[, 27, ], ,, Hindi, (, Pradipta, Ranjan, Ray, et, al, ., ,, 2003, )] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('27', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('Hindi', 'PROPN'), ('(', 'PUNCT'), ('Pradipta', 'PROPN'), ('Ranjan', 'PROPN'), ('Ray', 'PROPN'), ('et', 'PROPN'), ('al', 'PROPN'), ('.', 'PROPN'), (',', 'PUNCT'), ('2003', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('27', 'ROOT'), (']', 'punct'), (',', 'punct'), ('Hindi', 'nmod'), ('(', 'punct'), ('Pradipta', 'compound'), ('Ranjan', 'compound'), ('Ray', 'compound'), ('et', 'compound'), ('al', 'appos'), ('.', 'punct'), (',', 'punct'), ('2003', 'appos'), (')', 'punct')]

>> Bigrams: 
[[[, 27], [27, ]], [], ,], [,, Hindi], [Hindi, (], [(, Pradipta], [Pradipta, Ranjan], [Ranjan, Ray], [Ray, et], [et, al], [al, .], [., ,], [,, 2003], [2003, )]]

>> Trigrams: 
[[[, 27, ]], [27, ], ,], [], ,, Hindi], [,, Hindi, (], [Hindi, (, Pradipta], [(, Pradipta, Ranjan], [Pradipta, Ranjan, Ray], [Ranjan, Ray, et], [Ray, et, al], [et, al, .], [al, ., ,], [., ,, 2003], [,, 2003, )]]

>> Noun Phrases are: 
[Hindi (Pradipta Ranjan Ray et al]

>> Named Entities are: 
[('27', 'CARDINAL'), ('2003', 'DATE')] 

------------------- Sentence 3 -------------------

[28] etc. 


>> Tokens are: 
[[, 28, ], etc, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('28', 'NUM'), (']', 'PUNCT'), ('etc', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('28', 'nummod'), (']', 'punct'), ('etc', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[[, 28], [28, ]], [], etc], [etc, .]]

>> Trigrams: 
[[[, 28, ]], [28, ], etc], [], etc, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('28', 'CARDINAL')] 

------------------- Sentence 4 -------------------

It can efficiently   


>> Tokens are: 
[efficiently,  ] 

>> PoS Tags are: 
[('efficiently', 'ADV'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('efficiently', 'advmod'), (' ', 'punct')]

>> Bigrams: 
[[efficiently,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[It]

>> Named Entities are: 
[] 


================================ Paragraph 251 =================================

tag and classify words as nouns, adjectives, verbs etc. The most procedures for part of speech  

------------------- Sentence 1 -------------------

tag and classify words as nouns, adjectives, verbs etc. 


>> Tokens are: 
[tag, classify, words, nouns, ,, adjectives, ,, verbs, etc, .] 

>> PoS Tags are: 
[('tag', 'INTJ'), ('classify', 'VERB'), ('words', 'NOUN'), ('nouns', 'NOUN'), (',', 'PUNCT'), ('adjectives', 'NOUN'), (',', 'PUNCT'), ('verbs', 'VERB'), ('etc', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('tag', 'ROOT'), ('classify', 'conj'), ('words', 'dobj'), ('nouns', 'pobj'), (',', 'punct'), ('adjectives', 'conj'), (',', 'punct'), ('verbs', 'conj'), ('etc', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[tag, classify], [classify, words], [words, nouns], [nouns, ,], [,, adjectives], [adjectives, ,], [,, verbs], [verbs, etc], [etc, .]]

>> Trigrams: 
[[tag, classify, words], [classify, words, nouns], [words, nouns, ,], [nouns, ,, adjectives], [,, adjectives, ,], [adjectives, ,, verbs], [,, verbs, etc], [verbs, etc, .]]

>> Noun Phrases are: 
[words, nouns, adjectives]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

The most procedures for part of speech   


>> Tokens are: 
[procedures, speech,  ] 

>> PoS Tags are: 
[('procedures', 'NOUN'), ('speech', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('procedures', 'ROOT'), ('speech', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[procedures, speech], [speech,  ]]

>> Trigrams: 
[[procedures, speech,  ]]

>> Noun Phrases are: 
[The most procedures, part, speech]

>> Named Entities are: 
[] 


================================ Paragraph 252 =================================

can work efficiently on European languages, but it won’t on Asian languages or middle  

------------------- Sentence 1 -------------------

can work efficiently on European languages, but it won’t on Asian languages or middle   


>> Tokens are: 
[work, efficiently, European, languages, ,, wo, Asian, languages, middle,  ] 

>> PoS Tags are: 
[('work', 'VERB'), ('efficiently', 'ADV'), ('European', 'ADJ'), ('languages', 'NOUN'), (',', 'PUNCT'), ('wo', 'AUX'), ('Asian', 'ADJ'), ('languages', 'NOUN'), ('middle', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('work', 'ROOT'), ('efficiently', 'advmod'), ('European', 'amod'), ('languages', 'pobj'), (',', 'punct'), ('wo', 'conj'), ('Asian', 'amod'), ('languages', 'pobj'), ('middle', 'amod'), (' ', 'punct')]

>> Bigrams: 
[[work, efficiently], [efficiently, European], [European, languages], [languages, ,], [,, wo], [wo, Asian], [Asian, languages], [languages, middle], [middle,  ]]

>> Trigrams: 
[[work, efficiently, European], [efficiently, European, languages], [European, languages, ,], [languages, ,, wo], [,, wo, Asian], [wo, Asian, languages], [Asian, languages, middle], [languages, middle,  ]]

>> Noun Phrases are: 
[European languages, it, Asian languages]

>> Named Entities are: 
[('European', 'NORP'), ('Asian', 'NORP')] 


================================ Paragraph 253 =================================

eastern languages. Sanskrit part of speech tagger is specifically uses treebank technique.  

------------------- Sentence 1 -------------------

eastern languages. 


>> Tokens are: 
[eastern, languages, .] 

>> PoS Tags are: 
[('eastern', 'ADJ'), ('languages', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('eastern', 'amod'), ('languages', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[eastern, languages], [languages, .]]

>> Trigrams: 
[[eastern, languages, .]]

>> Noun Phrases are: 
[eastern languages]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Sanskrit part of speech tagger is specifically uses treebank technique. 


>> Tokens are: 
[Sanskrit, speech, tagger, specifically, uses, treebank, technique, .] 

>> PoS Tags are: 
[('Sanskrit', 'NOUN'), ('speech', 'NOUN'), ('tagger', 'NOUN'), ('specifically', 'ADV'), ('uses', 'VERB'), ('treebank', 'NOUN'), ('technique', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Sanskrit', 'compound'), ('speech', 'compound'), ('tagger', 'pobj'), ('specifically', 'advmod'), ('uses', 'ROOT'), ('treebank', 'compound'), ('technique', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Sanskrit, speech], [speech, tagger], [tagger, specifically], [specifically, uses], [uses, treebank], [treebank, technique], [technique, .]]

>> Trigrams: 
[[Sanskrit, speech, tagger], [speech, tagger, specifically], [tagger, specifically, uses], [specifically, uses, treebank], [uses, treebank, technique], [treebank, technique, .]]

>> Noun Phrases are: 
[Sanskrit part, speech tagger, treebank technique]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 254 =================================

Arabic uses Support Vector Machine (SVM) (Mona Diab etal.,2004) [29] approach to  

------------------- Sentence 1 -------------------

Arabic uses Support Vector Machine (SVM) (Mona Diab etal.,2004) 


>> Tokens are: 
[Arabic, uses, Support, Vector, Machine, (, SVM, ), (, Mona, Diab, etal, ., ,2004, )] 

>> PoS Tags are: 
[('Arabic', 'PROPN'), ('uses', 'VERB'), ('Support', 'PROPN'), ('Vector', 'PROPN'), ('Machine', 'PROPN'), ('(', 'PUNCT'), ('SVM', 'PROPN'), (')', 'PUNCT'), ('(', 'PUNCT'), ('Mona', 'PROPN'), ('Diab', 'PROPN'), ('etal', 'NOUN'), ('.', 'PUNCT'), (',2004', 'PUNCT'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Arabic', 'nsubj'), ('uses', 'ROOT'), ('Support', 'compound'), ('Vector', 'compound'), ('Machine', 'dobj'), ('(', 'punct'), ('SVM', 'appos'), (')', 'punct'), ('(', 'punct'), ('Mona', 'compound'), ('Diab', 'compound'), ('etal', 'appos'), ('.', 'punct'), (',2004', 'punct'), (')', 'punct')]

>> Bigrams: 
[[Arabic, uses], [uses, Support], [Support, Vector], [Vector, Machine], [Machine, (], [(, SVM], [SVM, )], [), (], [(, Mona], [Mona, Diab], [Diab, etal], [etal, .], [., ,2004], [,2004, )]]

>> Trigrams: 
[[Arabic, uses, Support], [uses, Support, Vector], [Support, Vector, Machine], [Vector, Machine, (], [Machine, (, SVM], [(, SVM, )], [SVM, ), (], [), (, Mona], [(, Mona, Diab], [Mona, Diab, etal], [Diab, etal, .], [etal, ., ,2004], [., ,2004, )]]

>> Noun Phrases are: 
[Arabic, Support Vector Machine, SVM, (Mona Diab etal]

>> Named Entities are: 
[('Arabic', 'NORP'), ('Support Vector Machine', 'ORG'), ('SVM', 'ORG'), ('Mona Diab', 'PERSON')] 

------------------- Sentence 2 -------------------

[29] approach to   


>> Tokens are: 
[[, 29, ], approach,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('29', 'NUM'), (']', 'PUNCT'), ('approach', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('29', 'nummod'), (']', 'dep'), ('approach', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[[, 29], [29, ]], [], approach], [approach,  ]]

>> Trigrams: 
[[[, 29, ]], [29, ], approach], [], approach,  ]]

>> Noun Phrases are: 
[[29] approach]

>> Named Entities are: 
[('29', 'CARDINAL')] 


================================ Paragraph 255 =================================

automatically tokenize, parts of speech tag and annotate base phrases in Arabic text.  

------------------- Sentence 1 -------------------

automatically tokenize, parts of speech tag and annotate base phrases in Arabic text. 


>> Tokens are: 
[automatically, tokenize, ,, parts, speech, tag, annotate, base, phrases, Arabic, text, .] 

>> PoS Tags are: 
[('automatically', 'ADV'), ('tokenize', 'VERB'), (',', 'PUNCT'), ('parts', 'NOUN'), ('speech', 'NOUN'), ('tag', 'NOUN'), ('annotate', 'VERB'), ('base', 'NOUN'), ('phrases', 'NOUN'), ('Arabic', 'ADJ'), ('text', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('automatically', 'advmod'), ('tokenize', 'ROOT'), (',', 'punct'), ('parts', 'dobj'), ('speech', 'compound'), ('tag', 'pobj'), ('annotate', 'conj'), ('base', 'compound'), ('phrases', 'dobj'), ('Arabic', 'amod'), ('text', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[automatically, tokenize], [tokenize, ,], [,, parts], [parts, speech], [speech, tag], [tag, annotate], [annotate, base], [base, phrases], [phrases, Arabic], [Arabic, text], [text, .]]

>> Trigrams: 
[[automatically, tokenize, ,], [tokenize, ,, parts], [,, parts, speech], [parts, speech, tag], [speech, tag, annotate], [tag, annotate, base], [annotate, base, phrases], [base, phrases, Arabic], [phrases, Arabic, text], [Arabic, text, .]]

>> Noun Phrases are: 
[parts, speech tag, base phrases, Arabic text]

>> Named Entities are: 
[('Arabic', 'LANGUAGE')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 256 =================================

  

------------------- Sentence 1 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 257 =================================

Chunking – it is also known as Shadow Parsing, it works by labelling segments of sentences  

------------------- Sentence 1 -------------------

Chunking – it is also known as Shadow Parsing, it works by labelling segments of sentences   


>> Tokens are: 
[Chunking, –, known, Shadow, Parsing, ,, works, labelling, segments, sentences,  ] 

>> PoS Tags are: 
[('Chunking', 'VERB'), ('–', 'PUNCT'), ('known', 'VERB'), ('Shadow', 'PROPN'), ('Parsing', 'PROPN'), (',', 'PUNCT'), ('works', 'VERB'), ('labelling', 'VERB'), ('segments', 'NOUN'), ('sentences', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Chunking', 'advcl'), ('–', 'punct'), ('known', 'ccomp'), ('Shadow', 'compound'), ('Parsing', 'pobj'), (',', 'punct'), ('works', 'ROOT'), ('labelling', 'pcomp'), ('segments', 'dobj'), ('sentences', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Chunking, –], [–, known], [known, Shadow], [Shadow, Parsing], [Parsing, ,], [,, works], [works, labelling], [labelling, segments], [segments, sentences], [sentences,  ]]

>> Trigrams: 
[[Chunking, –, known], [–, known, Shadow], [known, Shadow, Parsing], [Shadow, Parsing, ,], [Parsing, ,, works], [,, works, labelling], [works, labelling, segments], [labelling, segments, sentences], [segments, sentences,  ]]

>> Noun Phrases are: 
[it, Shadow Parsing, it, segments, sentences]

>> Named Entities are: 
[] 


================================ Paragraph 258 =================================

with syntactic correlated keywords like Noun Phrase and Verb Phrase (NP or VP). Every  

------------------- Sentence 1 -------------------

with syntactic correlated keywords like Noun Phrase and Verb Phrase (NP or VP). 


>> Tokens are: 
[syntactic, correlated, keywords, like, Noun, Phrase, Verb, Phrase, (, NP, VP, ), .] 

>> PoS Tags are: 
[('syntactic', 'ADJ'), ('correlated', 'VERB'), ('keywords', 'NOUN'), ('like', 'ADP'), ('Noun', 'PROPN'), ('Phrase', 'PROPN'), ('Verb', 'PROPN'), ('Phrase', 'PROPN'), ('(', 'PUNCT'), ('NP', 'PROPN'), ('VP', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('syntactic', 'amod'), ('correlated', 'amod'), ('keywords', 'pobj'), ('like', 'prep'), ('Noun', 'compound'), ('Phrase', 'pobj'), ('Verb', 'compound'), ('Phrase', 'conj'), ('(', 'punct'), ('NP', 'appos'), ('VP', 'conj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[syntactic, correlated], [correlated, keywords], [keywords, like], [like, Noun], [Noun, Phrase], [Phrase, Verb], [Verb, Phrase], [Phrase, (], [(, NP], [NP, VP], [VP, )], [), .]]

>> Trigrams: 
[[syntactic, correlated, keywords], [correlated, keywords, like], [keywords, like, Noun], [like, Noun, Phrase], [Noun, Phrase, Verb], [Phrase, Verb, Phrase], [Verb, Phrase, (], [Phrase, (, NP], [(, NP, VP], [NP, VP, )], [VP, ), .]]

>> Noun Phrases are: 
[syntactic correlated keywords, Noun Phrase, Verb Phrase, NP, VP]

>> Named Entities are: 
[('Noun Phrase', 'PERSON'), ('Verb Phrase', 'PERSON'), ('NP', 'ORG')] 

------------------- Sentence 2 -------------------

Every   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 259 =================================

word has a unique tag often marked as Begin Chunk (B-NP) tag or Inside Chunk (I-NP) tag.  

------------------- Sentence 1 -------------------

word has a unique tag often marked as Begin Chunk (B-NP) tag or Inside Chunk (I-NP) tag.   


>> Tokens are: 
[word, unique, tag, marked, Begin, Chunk, (, B, -, NP, ), tag, Inside, Chunk, (, -, NP, ), tag, .,  ] 

>> PoS Tags are: 
[('word', 'NOUN'), ('unique', 'ADJ'), ('tag', 'NOUN'), ('marked', 'VERB'), ('Begin', 'PROPN'), ('Chunk', 'PROPN'), ('(', 'PUNCT'), ('B', 'PROPN'), ('-', 'PUNCT'), ('NP', 'PROPN'), (')', 'PUNCT'), ('tag', 'NOUN'), ('Inside', 'ADP'), ('Chunk', 'PROPN'), ('(', 'PUNCT'), ('-', 'PUNCT'), ('NP', 'PROPN'), (')', 'PUNCT'), ('tag', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('word', 'nsubj'), ('unique', 'amod'), ('tag', 'dobj'), ('marked', 'acl'), ('Begin', 'compound'), ('Chunk', 'pobj'), ('(', 'punct'), ('B', 'compound'), ('-', 'punct'), ('NP', 'appos'), (')', 'punct'), ('tag', 'appos'), ('Inside', 'prep'), ('Chunk', 'pobj'), ('(', 'punct'), ('-', 'punct'), ('NP', 'appos'), (')', 'punct'), ('tag', 'parataxis'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[word, unique], [unique, tag], [tag, marked], [marked, Begin], [Begin, Chunk], [Chunk, (], [(, B], [B, -], [-, NP], [NP, )], [), tag], [tag, Inside], [Inside, Chunk], [Chunk, (], [(, -], [-, NP], [NP, )], [), tag], [tag, .], [.,  ]]

>> Trigrams: 
[[word, unique, tag], [unique, tag, marked], [tag, marked, Begin], [marked, Begin, Chunk], [Begin, Chunk, (], [Chunk, (, B], [(, B, -], [B, -, NP], [-, NP, )], [NP, ), tag], [), tag, Inside], [tag, Inside, Chunk], [Inside, Chunk, (], [Chunk, (, -], [(, -, NP], [-, NP, )], [NP, ), tag], [), tag, .], [tag, .,  ]]

>> Noun Phrases are: 
[word, a unique tag, Begin Chunk, (B-NP, tag, Chunk, -NP]

>> Named Entities are: 
[('Begin Chunk', 'PERSON'), ('Inside Chunk', 'WORK_OF_ART')] 


================================ Paragraph 260 =================================

Chunking is often evaluated using the CoNLL 2000 shared task.  CoNLL 2000 provides test  

------------------- Sentence 1 -------------------

Chunking is often evaluated using the CoNLL 2000 shared task. 


>> Tokens are: 
[Chunking, evaluated, CoNLL, 2000, shared, task, .] 

>> PoS Tags are: 
[('Chunking', 'VERB'), ('evaluated', 'VERB'), ('CoNLL', 'PROPN'), ('2000', 'NUM'), ('shared', 'VERB'), ('task', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Chunking', 'nsubjpass'), ('evaluated', 'ROOT'), ('CoNLL', 'npadvmod'), ('2000', 'nummod'), ('shared', 'amod'), ('task', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Chunking, evaluated], [evaluated, CoNLL], [CoNLL, 2000], [2000, shared], [shared, task], [task, .]]

>> Trigrams: 
[[Chunking, evaluated, CoNLL], [evaluated, CoNLL, 2000], [CoNLL, 2000, shared], [2000, shared, task], [shared, task, .]]

>> Noun Phrases are: 
[the CoNLL 2000 shared task]

>> Named Entities are: 
[('Chunking', 'ORG')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

CoNLL 2000 provides test   


>> Tokens are: 
[CoNLL, 2000, provides, test,  ] 

>> PoS Tags are: 
[('CoNLL', 'PROPN'), ('2000', 'NUM'), ('provides', 'VERB'), ('test', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('CoNLL', 'compound'), ('2000', 'nsubj'), ('provides', 'ROOT'), ('test', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[CoNLL, 2000], [2000, provides], [provides, test], [test,  ]]

>> Trigrams: 
[[CoNLL, 2000, provides], [2000, provides, test], [provides, test,  ]]

>> Noun Phrases are: 
[test]

>> Named Entities are: 
[] 


================================ Paragraph 261 =================================

data for Chunking. Since then, a certain number of systems arised (Sha and Pereira, 2003;  

------------------- Sentence 1 -------------------

data for Chunking. 


>> Tokens are: 
[data, Chunking, .] 

>> PoS Tags are: 
[('data', 'NOUN'), ('Chunking', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('data', 'ROOT'), ('Chunking', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[data, Chunking], [Chunking, .]]

>> Trigrams: 
[[data, Chunking, .]]

>> Noun Phrases are: 
[data, Chunking]

>> Named Entities are: 
[('Chunking', 'ORG')] 

------------------- Sentence 2 -------------------

Since then, a certain number of systems arised (Sha and Pereira, 2003; 


>> Tokens are: 
[,, certain, number, systems, arised, (, Sha, Pereira, ,, 2003, ;] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('certain', 'ADJ'), ('number', 'NOUN'), ('systems', 'NOUN'), ('arised', 'VERB'), ('(', 'PUNCT'), ('Sha', 'PROPN'), ('Pereira', 'PROPN'), (',', 'PUNCT'), ('2003', 'NUM'), (';', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('certain', 'amod'), ('number', 'nsubj'), ('systems', 'pobj'), ('arised', 'ROOT'), ('(', 'punct'), ('Sha', 'nmod'), ('Pereira', 'conj'), (',', 'punct'), ('2003', 'appos'), (';', 'punct')]

>> Bigrams: 
[[,, certain], [certain, number], [number, systems], [systems, arised], [arised, (], [(, Sha], [Sha, Pereira], [Pereira, ,], [,, 2003], [2003, ;]]

>> Trigrams: 
[[,, certain, number], [certain, number, systems], [number, systems, arised], [systems, arised, (], [arised, (, Sha], [(, Sha, Pereira], [Sha, Pereira, ,], [Pereira, ,, 2003], [,, 2003, ;]]

>> Noun Phrases are: 
[a certain number, systems]

>> Named Entities are: 
[('2003', 'DATE')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 262 =================================

McDonald et al., 2005; Sun et al., 2008) [30] [31] [32], all reporting around 94.3% F1 score.  These systems use features composed of words, POS tags, and tags.  

------------------- Sentence 1 -------------------

McDonald et al., 2005; Sun et al., 2008) 


>> Tokens are: 
[McDonald, et, al, ., ,, 2005, ;, Sun, et, al, ., ,, 2008, )] 

>> PoS Tags are: 
[('McDonald', 'NOUN'), ('et', 'NOUN'), ('al', 'PROPN'), ('.', 'PROPN'), (',', 'PUNCT'), ('2005', 'NUM'), (';', 'PUNCT'), ('Sun', 'PROPN'), ('et', 'PROPN'), ('al', 'PROPN'), ('.', 'PROPN'), (',', 'PUNCT'), ('2008', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('McDonald', 'compound'), ('et', 'compound'), ('al', 'ROOT'), ('.', 'punct'), (',', 'punct'), ('2005', 'appos'), (';', 'punct'), ('Sun', 'compound'), ('et', 'compound'), ('al', 'appos'), ('.', 'punct'), (',', 'punct'), ('2008', 'appos'), (')', 'punct')]

>> Bigrams: 
[[McDonald, et], [et, al], [al, .], [., ,], [,, 2005], [2005, ;], [;, Sun], [Sun, et], [et, al], [al, .], [., ,], [,, 2008], [2008, )]]

>> Trigrams: 
[[McDonald, et, al], [et, al, .], [al, ., ,], [., ,, 2005], [,, 2005, ;], [2005, ;, Sun], [;, Sun, et], [Sun, et, al], [et, al, .], [al, ., ,], [., ,, 2008], [,, 2008, )]]

>> Noun Phrases are: 
[McDonald et al, Sun et al]

>> Named Entities are: 
[('McDonald', 'ORG'), ('2005', 'DATE')] 

------------------- Sentence 2 -------------------

[30] [31] [32], all reporting around 94.3% F1 score. 


>> Tokens are: 
[[, 30, ], [, 31, ], [, 32, ], ,, reporting, 94.3, %, F1, score, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('30', 'NUM'), (']', 'PUNCT'), ('[', 'PUNCT'), ('31', 'NUM'), (']', 'PUNCT'), ('[', 'PUNCT'), ('32', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('reporting', 'VERB'), ('94.3', 'NUM'), ('%', 'NOUN'), ('F1', 'NOUN'), ('score', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('30', 'dep'), (']', 'dep'), ('[', 'punct'), ('31', 'dep'), (']', 'punct'), ('[', 'punct'), ('32', 'appos'), (']', 'punct'), (',', 'punct'), ('reporting', 'ROOT'), ('94.3', 'nummod'), ('%', 'compound'), ('F1', 'compound'), ('score', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[[, 30], [30, ]], [], [], [[, 31], [31, ]], [], [], [[, 32], [32, ]], [], ,], [,, reporting], [reporting, 94.3], [94.3, %], [%, F1], [F1, score], [score, .]]

>> Trigrams: 
[[[, 30, ]], [30, ], [], [], [, 31], [[, 31, ]], [31, ], [], [], [, 32], [[, 32, ]], [32, ], ,], [], ,, reporting], [,, reporting, 94.3], [reporting, 94.3, %], [94.3, %, F1], [%, F1, score], [F1, score, .]]

>> Noun Phrases are: 
[around 94.3% F1 score]

>> Named Entities are: 
[('30', 'CARDINAL'), ('32', 'CARDINAL'), ('around 94.3%', 'PERCENT')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

These systems use features composed of words, POS tags, and tags. 


>> Tokens are: 
[systems, use, features, composed, words, ,, POS, tags, ,, tags, .] 

>> PoS Tags are: 
[('systems', 'NOUN'), ('use', 'VERB'), ('features', 'NOUN'), ('composed', 'VERB'), ('words', 'NOUN'), (',', 'PUNCT'), ('POS', 'PROPN'), ('tags', 'NOUN'), (',', 'PUNCT'), ('tags', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('systems', 'nsubj'), ('use', 'ROOT'), ('features', 'dobj'), ('composed', 'acl'), ('words', 'pobj'), (',', 'punct'), ('POS', 'compound'), ('tags', 'conj'), (',', 'punct'), ('tags', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[systems, use], [use, features], [features, composed], [composed, words], [words, ,], [,, POS], [POS, tags], [tags, ,], [,, tags], [tags, .]]

>> Trigrams: 
[[systems, use, features], [use, features, composed], [features, composed, words], [composed, words, ,], [words, ,, POS], [,, POS, tags], [POS, tags, ,], [tags, ,, tags], [,, tags, .]]

>> Noun Phrases are: 
[These systems, features, words, POS tags, tags]

>> Named Entities are: 
[] 

------------------- Sentence 5 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 263 =================================

  

------------------- Sentence 1 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 264 =================================

Usage of Named Entity Recognition in places such as Internet is a problem as people don’t  

------------------- Sentence 1 -------------------

Usage of Named Entity Recognition in places such as Internet is a problem as people don’t   


>> Tokens are: 
[Usage, Named, Entity, Recognition, places, Internet, problem, people,  ] 

>> PoS Tags are: 
[('Usage', 'NOUN'), ('Named', 'PROPN'), ('Entity', 'PROPN'), ('Recognition', 'PROPN'), ('places', 'NOUN'), ('Internet', 'NOUN'), ('problem', 'NOUN'), ('people', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Usage', 'nsubj'), ('Named', 'compound'), ('Entity', 'compound'), ('Recognition', 'pobj'), ('places', 'pobj'), ('Internet', 'pobj'), ('problem', 'attr'), ('people', 'nsubj'), (' ', 'punct')]

>> Bigrams: 
[[Usage, Named], [Named, Entity], [Entity, Recognition], [Recognition, places], [places, Internet], [Internet, problem], [problem, people], [people,  ]]

>> Trigrams: 
[[Usage, Named, Entity], [Named, Entity, Recognition], [Entity, Recognition, places], [Recognition, places, Internet], [places, Internet, problem], [Internet, problem, people], [problem, people,  ]]

>> Noun Phrases are: 
[Usage, Named Entity Recognition, places, Internet, a problem, people]

>> Named Entities are: 
[] 


================================ Paragraph 265 =================================

use traditional or standard English. This degrades the performance of standard natural  

------------------- Sentence 1 -------------------

use traditional or standard English. 


>> Tokens are: 
[use, traditional, standard, English, .] 

>> PoS Tags are: 
[('use', 'VERB'), ('traditional', 'ADJ'), ('standard', 'ADJ'), ('English', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('use', 'ROOT'), ('traditional', 'amod'), ('standard', 'conj'), ('English', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[use, traditional], [traditional, standard], [standard, English], [English, .]]

>> Trigrams: 
[[use, traditional, standard], [traditional, standard, English], [standard, English, .]]

>> Noun Phrases are: 
[traditional or standard English]

>> Named Entities are: 
[('English', 'LANGUAGE')] 

------------------- Sentence 2 -------------------

This degrades the performance of standard natural   


>> Tokens are: 
[degrades, performance, standard, natural,  ] 

>> PoS Tags are: 
[('degrades', 'VERB'), ('performance', 'NOUN'), ('standard', 'ADJ'), ('natural', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('degrades', 'ROOT'), ('performance', 'dobj'), ('standard', 'amod'), ('natural', 'amod'), (' ', 'pobj')]

>> Bigrams: 
[[degrades, performance], [performance, standard], [standard, natural], [natural,  ]]

>> Trigrams: 
[[degrades, performance, standard], [performance, standard, natural], [standard, natural,  ]]

>> Noun Phrases are: 
[the performance]

>> Named Entities are: 
[] 


================================ Paragraph 266 =================================

language processing tools substantially. By annotating the phrases or tweets and building  

------------------- Sentence 1 -------------------

language processing tools substantially. 


>> Tokens are: 
[language, processing, tools, substantially, .] 

>> PoS Tags are: 
[('language', 'NOUN'), ('processing', 'NOUN'), ('tools', 'NOUN'), ('substantially', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('language', 'compound'), ('processing', 'compound'), ('tools', 'ROOT'), ('substantially', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[language, processing], [processing, tools], [tools, substantially], [substantially, .]]

>> Trigrams: 
[[language, processing, tools], [processing, tools, substantially], [tools, substantially, .]]

>> Noun Phrases are: 
[language processing tools]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

By annotating the phrases or tweets and building   


>> Tokens are: 
[annotating, phrases, tweets, building,  ] 

>> PoS Tags are: 
[('annotating', 'VERB'), ('phrases', 'NOUN'), ('tweets', 'NOUN'), ('building', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('annotating', 'pcomp'), ('phrases', 'dobj'), ('tweets', 'conj'), ('building', 'conj'), (' ', 'dobj')]

>> Bigrams: 
[[annotating, phrases], [phrases, tweets], [tweets, building], [building,  ]]

>> Trigrams: 
[[annotating, phrases, tweets], [phrases, tweets, building], [tweets, building,  ]]

>> Noun Phrases are: 
[the phrases, tweets]

>> Named Entities are: 
[] 


================================ Paragraph 267 =================================

tools trained on unlabelled, in domain and out domain data (Alan Ritter., 2011) [33]. It  

------------------- Sentence 1 -------------------

tools trained on unlabelled, in domain and out domain data (Alan Ritter., 2011) 


>> Tokens are: 
[tools, trained, unlabelled, ,, domain, domain, data, (, Alan, Ritter, ., ,, 2011, )] 

>> PoS Tags are: 
[('tools', 'NOUN'), ('trained', 'VERB'), ('unlabelled', 'ADJ'), (',', 'PUNCT'), ('domain', 'NOUN'), ('domain', 'NOUN'), ('data', 'NOUN'), ('(', 'PUNCT'), ('Alan', 'PROPN'), ('Ritter', 'PROPN'), ('.', 'PUNCT'), (',', 'PUNCT'), ('2011', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('tools', 'ROOT'), ('trained', 'acl'), ('unlabelled', 'amod'), (',', 'punct'), ('domain', 'pobj'), ('domain', 'compound'), ('data', 'pobj'), ('(', 'punct'), ('Alan', 'compound'), ('Ritter', 'appos'), ('.', 'punct'), (',', 'punct'), ('2011', 'npadvmod'), (')', 'punct')]

>> Bigrams: 
[[tools, trained], [trained, unlabelled], [unlabelled, ,], [,, domain], [domain, domain], [domain, data], [data, (], [(, Alan], [Alan, Ritter], [Ritter, .], [., ,], [,, 2011], [2011, )]]

>> Trigrams: 
[[tools, trained, unlabelled], [trained, unlabelled, ,], [unlabelled, ,, domain], [,, domain, domain], [domain, domain, data], [domain, data, (], [data, (, Alan], [(, Alan, Ritter], [Alan, Ritter, .], [Ritter, ., ,], [., ,, 2011], [,, 2011, )]]

>> Noun Phrases are: 
[tools, domain, domain data, (Alan Ritter]

>> Named Entities are: 
[('Alan Ritter', 'PERSON'), ('2011', 'DATE')] 

------------------- Sentence 2 -------------------

[33]. 


>> Tokens are: 
[[, 33, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('33', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('33', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 33], [33, ]], [], .]]

>> Trigrams: 
[[[, 33, ]], [33, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('33', 'CARDINAL')] 

------------------- Sentence 3 -------------------

It   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'punct')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[It]

>> Named Entities are: 
[] 


================================ Paragraph 268 =================================

improves the performance as compared to standard natural language processing tools.  

------------------- Sentence 1 -------------------

improves the performance as compared to standard natural language processing tools. 


>> Tokens are: 
[improves, performance, compared, standard, natural, language, processing, tools, .] 

>> PoS Tags are: 
[('improves', 'VERB'), ('performance', 'NOUN'), ('compared', 'VERB'), ('standard', 'ADJ'), ('natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), ('tools', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('improves', 'ROOT'), ('performance', 'dobj'), ('compared', 'advcl'), ('standard', 'amod'), ('natural', 'amod'), ('language', 'compound'), ('processing', 'compound'), ('tools', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[improves, performance], [performance, compared], [compared, standard], [standard, natural], [natural, language], [language, processing], [processing, tools], [tools, .]]

>> Trigrams: 
[[improves, performance, compared], [performance, compared, standard], [compared, standard, natural], [standard, natural, language], [natural, language, processing], [language, processing, tools], [processing, tools, .]]

>> Noun Phrases are: 
[the performance, standard natural language processing tools]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 269 =================================

  

------------------- Sentence 1 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 270 =================================

Emotion Detection (Shashank Sharma, 2016) [34] is similar to sentiment analysis, but it  

------------------- Sentence 1 -------------------

Emotion Detection (Shashank Sharma, 2016) 


>> Tokens are: 
[Emotion, Detection, (, Shashank, Sharma, ,, 2016, )] 

>> PoS Tags are: 
[('Emotion', 'PROPN'), ('Detection', 'PROPN'), ('(', 'PUNCT'), ('Shashank', 'PROPN'), ('Sharma', 'PROPN'), (',', 'PUNCT'), ('2016', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Emotion', 'compound'), ('Detection', 'ROOT'), ('(', 'punct'), ('Shashank', 'compound'), ('Sharma', 'appos'), (',', 'punct'), ('2016', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Emotion, Detection], [Detection, (], [(, Shashank], [Shashank, Sharma], [Sharma, ,], [,, 2016], [2016, )]]

>> Trigrams: 
[[Emotion, Detection, (], [Detection, (, Shashank], [(, Shashank, Sharma], [Shashank, Sharma, ,], [Sharma, ,, 2016], [,, 2016, )]]

>> Noun Phrases are: 
[Emotion Detection, Shashank Sharma]

>> Named Entities are: 
[('Emotion Detection', 'ORG'), ('2016', 'DATE')] 

------------------- Sentence 2 -------------------

[34] is similar to sentiment analysis, but it   


>> Tokens are: 
[[, 34, ], similar, sentiment, analysis, ,,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('34', 'NUM'), (']', 'PUNCT'), ('similar', 'ADJ'), ('sentiment', 'NOUN'), ('analysis', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'dep'), ('34', 'dep'), (']', 'nsubj'), ('similar', 'acomp'), ('sentiment', 'xcomp'), ('analysis', 'dobj'), (',', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[[, 34], [34, ]], [], similar], [similar, sentiment], [sentiment, analysis], [analysis, ,], [,,  ]]

>> Trigrams: 
[[[, 34, ]], [34, ], similar], [], similar, sentiment], [similar, sentiment, analysis], [sentiment, analysis, ,], [analysis, ,,  ]]

>> Noun Phrases are: 
[analysis, it]

>> Named Entities are: 
[('34', 'CARDINAL')] 


================================ Paragraph 271 =================================

works on social media platforms on mixing of two languages (English + Any other Indian  

------------------- Sentence 1 -------------------

works on social media platforms on mixing of two languages (English + Any other Indian   


>> Tokens are: 
[works, social, media, platforms, mixing, languages, (, English, +, Indian,  ] 

>> PoS Tags are: 
[('works', 'VERB'), ('social', 'ADJ'), ('media', 'NOUN'), ('platforms', 'NOUN'), ('mixing', 'NOUN'), ('languages', 'NOUN'), ('(', 'PUNCT'), ('English', 'PROPN'), ('+', 'ADP'), ('Indian', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('works', 'ROOT'), ('social', 'amod'), ('media', 'compound'), ('platforms', 'pobj'), ('mixing', 'pobj'), ('languages', 'pobj'), ('(', 'punct'), ('English', 'appos'), ('+', 'cc'), ('Indian', 'amod'), (' ', 'punct')]

>> Bigrams: 
[[works, social], [social, media], [media, platforms], [platforms, mixing], [mixing, languages], [languages, (], [(, English], [English, +], [+, Indian], [Indian,  ]]

>> Trigrams: 
[[works, social, media], [social, media, platforms], [media, platforms, mixing], [platforms, mixing, languages], [mixing, languages, (], [languages, (, English], [(, English, +], [English, +, Indian], [+, Indian,  ]]

>> Noun Phrases are: 
[social media platforms, mixing, two languages, English]

>> Named Entities are: 
[('two', 'CARDINAL'), ('English', 'LANGUAGE'), ('Indian', 'NORP')] 


================================ Paragraph 272 =================================

Language). It categorizes statements into six groups based on emotions. During this process,  

------------------- Sentence 1 -------------------

Language). 


>> Tokens are: 
[Language, ), .] 

>> PoS Tags are: 
[('Language', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Language', 'ROOT'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Language, )], [), .]]

>> Trigrams: 
[[Language, ), .]]

>> Noun Phrases are: 
[Language]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

It categorizes statements into six groups based on emotions. 


>> Tokens are: 
[categorizes, statements, groups, based, emotions, .] 

>> PoS Tags are: 
[('categorizes', 'VERB'), ('statements', 'NOUN'), ('groups', 'NOUN'), ('based', 'VERB'), ('emotions', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('categorizes', 'ROOT'), ('statements', 'dobj'), ('groups', 'pobj'), ('based', 'acl'), ('emotions', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[categorizes, statements], [statements, groups], [groups, based], [based, emotions], [emotions, .]]

>> Trigrams: 
[[categorizes, statements, groups], [statements, groups, based], [groups, based, emotions], [based, emotions, .]]

>> Noun Phrases are: 
[It, statements, six groups, emotions]

>> Named Entities are: 
[('six', 'CARDINAL')] 

------------------- Sentence 3 -------------------

During this process,   


>> Tokens are: 
[process, ,,  ] 

>> PoS Tags are: 
[('process', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('process', 'pobj'), (',', 'punct'), (' ', 'pobj')]

>> Bigrams: 
[[process, ,], [,,  ]]

>> Trigrams: 
[[process, ,,  ]]

>> Noun Phrases are: 
[this process]

>> Named Entities are: 
[] 


================================ Paragraph 273 =================================

they were able to identify the language of ambiguous words which were common in Hindi  

------------------- Sentence 1 -------------------

they were able to identify the language of ambiguous words which were common in Hindi   


>> Tokens are: 
[able, identify, language, ambiguous, words, common, Hindi,  ] 

>> PoS Tags are: 
[('able', 'ADJ'), ('identify', 'VERB'), ('language', 'NOUN'), ('ambiguous', 'ADJ'), ('words', 'NOUN'), ('common', 'ADJ'), ('Hindi', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('able', 'acomp'), ('identify', 'xcomp'), ('language', 'dobj'), ('ambiguous', 'amod'), ('words', 'pobj'), ('common', 'acomp'), ('Hindi', 'amod'), (' ', 'pobj')]

>> Bigrams: 
[[able, identify], [identify, language], [language, ambiguous], [ambiguous, words], [words, common], [common, Hindi], [Hindi,  ]]

>> Trigrams: 
[[able, identify, language], [identify, language, ambiguous], [language, ambiguous, words], [ambiguous, words, common], [words, common, Hindi], [common, Hindi,  ]]

>> Noun Phrases are: 
[they, the language, ambiguous words]

>> Named Entities are: 
[('Hindi', 'GPE')] 


================================ Paragraph 274 =================================

and English and tag lexical category or parts of speech in mixed script by identifying the base  

------------------- Sentence 1 -------------------

and English and tag lexical category or parts of speech in mixed script by identifying the base 


>> Tokens are: 
[English, tag, lexical, category, parts, speech, mixed, script, identifying, base] 

>> PoS Tags are: 
[('English', 'PROPN'), ('tag', 'INTJ'), ('lexical', 'ADJ'), ('category', 'NOUN'), ('parts', 'NOUN'), ('speech', 'NOUN'), ('mixed', 'ADJ'), ('script', 'NOUN'), ('identifying', 'VERB'), ('base', 'NOUN')] 

>> Dependency Tags are: 
[('English', 'ROOT'), ('tag', 'nmod'), ('lexical', 'amod'), ('category', 'conj'), ('parts', 'conj'), ('speech', 'pobj'), ('mixed', 'amod'), ('script', 'pobj'), ('identifying', 'pcomp'), ('base', 'dobj')]

>> Bigrams: 
[[English, tag], [tag, lexical], [lexical, category], [category, parts], [parts, speech], [speech, mixed], [mixed, script], [script, identifying], [identifying, base]]

>> Trigrams: 
[[English, tag, lexical], [tag, lexical, category], [lexical, category, parts], [category, parts, speech], [parts, speech, mixed], [speech, mixed, script], [mixed, script, identifying], [script, identifying, base]]

>> Noun Phrases are: 
[and English, tag lexical category, parts, speech, mixed script, the base]

>> Named Entities are: 
[('English', 'LANGUAGE')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 275 =================================

language of the speaker.  

------------------- Sentence 1 -------------------

language of the speaker. 


>> Tokens are: 
[language, speaker, .] 

>> PoS Tags are: 
[('language', 'NOUN'), ('speaker', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('language', 'ROOT'), ('speaker', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[language, speaker], [speaker, .]]

>> Trigrams: 
[[language, speaker, .]]

>> Noun Phrases are: 
[language, the speaker]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 276 =================================

 

------------------- Sentence 1 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 277 =================================

Sematic Role Labelling – SRL works by giving a semantic role to a sentence. For example in  

------------------- Sentence 1 -------------------

Sematic Role Labelling – SRL works by giving a semantic role to a sentence. 


>> Tokens are: 
[Sematic, Role, Labelling, –, SRL, works, giving, semantic, role, sentence, .] 

>> PoS Tags are: 
[('Sematic', 'PROPN'), ('Role', 'PROPN'), ('Labelling', 'PROPN'), ('–', 'PUNCT'), ('SRL', 'PROPN'), ('works', 'VERB'), ('giving', 'VERB'), ('semantic', 'ADJ'), ('role', 'NOUN'), ('sentence', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Sematic', 'compound'), ('Role', 'compound'), ('Labelling', 'nsubj'), ('–', 'punct'), ('SRL', 'nsubj'), ('works', 'ROOT'), ('giving', 'pcomp'), ('semantic', 'amod'), ('role', 'dobj'), ('sentence', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Sematic, Role], [Role, Labelling], [Labelling, –], [–, SRL], [SRL, works], [works, giving], [giving, semantic], [semantic, role], [role, sentence], [sentence, .]]

>> Trigrams: 
[[Sematic, Role, Labelling], [Role, Labelling, –], [Labelling, –, SRL], [–, SRL, works], [SRL, works, giving], [works, giving, semantic], [giving, semantic, role], [semantic, role, sentence], [role, sentence, .]]

>> Noun Phrases are: 
[Sematic Role Labelling, SRL, a semantic role, a sentence]

>> Named Entities are: 
[('Sematic', 'NORP'), ('SRL', 'ORG')] 

------------------- Sentence 2 -------------------

For example in   


>> Tokens are: 
[example,  ] 

>> PoS Tags are: 
[('example', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('example', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[example,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[example]

>> Named Entities are: 
[] 


================================ Paragraph 278 =================================

the PropBank (Palmer et al., 2005) [35] formalism, one assigns roles to words that are  

------------------- Sentence 1 -------------------

the PropBank (Palmer et al., 2005) 


>> Tokens are: 
[PropBank, (, Palmer, et, al, ., ,, 2005, )] 

>> PoS Tags are: 
[('PropBank', 'PROPN'), ('(', 'PUNCT'), ('Palmer', 'PROPN'), ('et', 'NOUN'), ('al', 'PROPN'), ('.', 'PROPN'), (',', 'PUNCT'), ('2005', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('PropBank', 'ROOT'), ('(', 'punct'), ('Palmer', 'compound'), ('et', 'compound'), ('al', 'appos'), ('.', 'punct'), (',', 'punct'), ('2005', 'appos'), (')', 'punct')]

>> Bigrams: 
[[PropBank, (], [(, Palmer], [Palmer, et], [et, al], [al, .], [., ,], [,, 2005], [2005, )]]

>> Trigrams: 
[[PropBank, (, Palmer], [(, Palmer, et], [Palmer, et, al], [et, al, .], [al, ., ,], [., ,, 2005], [,, 2005, )]]

>> Noun Phrases are: 
[the PropBank, Palmer et al]

>> Named Entities are: 
[('PropBank', 'ORG'), ('2005', 'DATE')] 

------------------- Sentence 2 -------------------

[35] formalism, one assigns roles to words that are   


>> Tokens are: 
[[, 35, ], formalism, ,, assigns, roles, words,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('35', 'NUM'), (']', 'PUNCT'), ('formalism', 'NOUN'), (',', 'PUNCT'), ('assigns', 'VERB'), ('roles', 'NOUN'), ('words', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('35', 'nummod'), (']', 'punct'), ('formalism', 'ROOT'), (',', 'punct'), ('assigns', 'conj'), ('roles', 'dobj'), ('words', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[[, 35], [35, ]], [], formalism], [formalism, ,], [,, assigns], [assigns, roles], [roles, words], [words,  ]]

>> Trigrams: 
[[[, 35, ]], [35, ], formalism], [], formalism, ,], [formalism, ,, assigns], [,, assigns, roles], [assigns, roles, words], [roles, words,  ]]

>> Noun Phrases are: 
[[35] formalism, roles, words]

>> Named Entities are: 
[('35', 'CARDINAL')] 


================================ Paragraph 279 =================================

arguments of a verb in the sentence. The precise arguments depend on verb frame and if there  

------------------- Sentence 1 -------------------

arguments of a verb in the sentence. 


>> Tokens are: 
[arguments, verb, sentence, .] 

>> PoS Tags are: 
[('arguments', 'NOUN'), ('verb', 'NOUN'), ('sentence', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('arguments', 'ROOT'), ('verb', 'pobj'), ('sentence', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[arguments, verb], [verb, sentence], [sentence, .]]

>> Trigrams: 
[[arguments, verb, sentence], [verb, sentence, .]]

>> Noun Phrases are: 
[arguments, a verb, the sentence]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

The precise arguments depend on verb frame and if there   


>> Tokens are: 
[precise, arguments, depend, verb, frame,  ] 

>> PoS Tags are: 
[('precise', 'ADJ'), ('arguments', 'NOUN'), ('depend', 'VERB'), ('verb', 'NOUN'), ('frame', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('precise', 'amod'), ('arguments', 'nsubj'), ('depend', 'ROOT'), ('verb', 'compound'), ('frame', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[precise, arguments], [arguments, depend], [depend, verb], [verb, frame], [frame,  ]]

>> Trigrams: 
[[precise, arguments, depend], [arguments, depend, verb], [depend, verb, frame], [verb, frame,  ]]

>> Noun Phrases are: 
[The precise arguments, verb frame]

>> Named Entities are: 
[] 


================================ Paragraph 280 =================================

exists multiple verbs  in a sentence, it might have multiple tags. State-of-the-art SRL systems  

------------------- Sentence 1 -------------------

exists multiple verbs  in a sentence, it might have multiple tags. 


>> Tokens are: 
[exists, multiple, verbs,  , sentence, ,, multiple, tags, .] 

>> PoS Tags are: 
[('exists', 'VERB'), ('multiple', 'ADJ'), ('verbs', 'NOUN'), (' ', 'SPACE'), ('sentence', 'NOUN'), (',', 'PUNCT'), ('multiple', 'ADJ'), ('tags', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('exists', 'advcl'), ('multiple', 'amod'), ('verbs', 'dobj'), (' ', 'appos'), ('sentence', 'pobj'), (',', 'punct'), ('multiple', 'amod'), ('tags', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[exists, multiple], [multiple, verbs], [verbs,  ], [ , sentence], [sentence, ,], [,, multiple], [multiple, tags], [tags, .]]

>> Trigrams: 
[[exists, multiple, verbs], [multiple, verbs,  ], [verbs,  , sentence], [ , sentence, ,], [sentence, ,, multiple], [,, multiple, tags], [multiple, tags, .]]

>> Noun Phrases are: 
[multiple verbs, a sentence, it, multiple tags]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

State-of-the-art SRL systems   


>> Tokens are: 
[State, -, -, -, art, SRL, systems,  ] 

>> PoS Tags are: 
[('State', 'NOUN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('art', 'NOUN'), ('SRL', 'PROPN'), ('systems', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('State', 'nmod'), ('-', 'punct'), ('-', 'punct'), ('-', 'punct'), ('art', 'pobj'), ('SRL', 'compound'), ('systems', 'compound'), (' ', 'ROOT')]

>> Bigrams: 
[[State, -], [-, -], [-, -], [-, art], [art, SRL], [SRL, systems], [systems,  ]]

>> Trigrams: 
[[State, -, -], [-, -, -], [-, -, art], [-, art, SRL], [art, SRL, systems], [SRL, systems,  ]]

>> Noun Phrases are: 
[the-art]

>> Named Entities are: 
[('SRL', 'ORG')] 


================================ Paragraph 281 =================================

comprise of several stages: creating a parse tree, identifying which parse tree nodes represent  

------------------- Sentence 1 -------------------

comprise of several stages: creating a parse tree, identifying which parse tree nodes represent   


>> Tokens are: 
[comprise, stages, :, creating, parse, tree, ,, identifying, parse, tree, nodes, represent,  ] 

>> PoS Tags are: 
[('comprise', 'NOUN'), ('stages', 'NOUN'), (':', 'PUNCT'), ('creating', 'VERB'), ('parse', 'NOUN'), ('tree', 'NOUN'), (',', 'PUNCT'), ('identifying', 'VERB'), ('parse', 'NOUN'), ('tree', 'NOUN'), ('nodes', 'NOUN'), ('represent', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('comprise', 'ROOT'), ('stages', 'pobj'), (':', 'punct'), ('creating', 'acl'), ('parse', 'compound'), ('tree', 'dobj'), (',', 'punct'), ('identifying', 'advcl'), ('parse', 'compound'), ('tree', 'compound'), ('nodes', 'nsubj'), ('represent', 'ccomp'), (' ', 'dobj')]

>> Bigrams: 
[[comprise, stages], [stages, :], [:, creating], [creating, parse], [parse, tree], [tree, ,], [,, identifying], [identifying, parse], [parse, tree], [tree, nodes], [nodes, represent], [represent,  ]]

>> Trigrams: 
[[comprise, stages, :], [stages, :, creating], [:, creating, parse], [creating, parse, tree], [parse, tree, ,], [tree, ,, identifying], [,, identifying, parse], [identifying, parse, tree], [parse, tree, nodes], [tree, nodes, represent], [nodes, represent,  ]]

>> Noun Phrases are: 
[comprise, several stages, a parse tree, which parse tree nodes]

>> Named Entities are: 
[] 


================================ Paragraph 282 =================================

the arguments of a given verb, and finally classifying these nodes to compute the  

------------------- Sentence 1 -------------------

the arguments of a given verb, and finally classifying these nodes to compute the   


>> Tokens are: 
[arguments, given, verb, ,, finally, classifying, nodes, compute,  ] 

>> PoS Tags are: 
[('arguments', 'NOUN'), ('given', 'VERB'), ('verb', 'NOUN'), (',', 'PUNCT'), ('finally', 'ADV'), ('classifying', 'VERB'), ('nodes', 'NOUN'), ('compute', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('arguments', 'ROOT'), ('given', 'amod'), ('verb', 'pobj'), (',', 'punct'), ('finally', 'advmod'), ('classifying', 'conj'), ('nodes', 'dobj'), ('compute', 'advcl'), (' ', 'dobj')]

>> Bigrams: 
[[arguments, given], [given, verb], [verb, ,], [,, finally], [finally, classifying], [classifying, nodes], [nodes, compute], [compute,  ]]

>> Trigrams: 
[[arguments, given, verb], [given, verb, ,], [verb, ,, finally], [,, finally, classifying], [finally, classifying, nodes], [classifying, nodes, compute], [nodes, compute,  ]]

>> Noun Phrases are: 
[the arguments, a given verb, these nodes]

>> Named Entities are: 
[] 


================================ Paragraph 283 =================================

corresponding SRL tags.  

------------------- Sentence 1 -------------------

corresponding SRL tags.   


>> Tokens are: 
[corresponding, SRL, tags, .,  ] 

>> PoS Tags are: 
[('corresponding', 'VERB'), ('SRL', 'PROPN'), ('tags', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('corresponding', 'amod'), ('SRL', 'compound'), ('tags', 'dobj'), ('.', 'punct'), (' ', 'ROOT')]

>> Bigrams: 
[[corresponding, SRL], [SRL, tags], [tags, .], [.,  ]]

>> Trigrams: 
[[corresponding, SRL, tags], [SRL, tags, .], [tags, .,  ]]

>> Noun Phrases are: 
[SRL tags]

>> Named Entities are: 
[('SRL', 'ORG')] 


================================ Paragraph 284 =================================

  

------------------- Sentence 1 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 285 =================================

Event discovery in social media feeds (Edward Benson et al.,2011) [36], using a graphical  

------------------- Sentence 1 -------------------

Event discovery in social media feeds (Edward Benson et al.,2011) 


>> Tokens are: 
[Event, discovery, social, media, feeds, (, Edward, Benson, et, al, ., ,2011, )] 

>> PoS Tags are: 
[('Event', 'NOUN'), ('discovery', 'NOUN'), ('social', 'ADJ'), ('media', 'NOUN'), ('feeds', 'NOUN'), ('(', 'PUNCT'), ('Edward', 'PROPN'), ('Benson', 'PROPN'), ('et', 'PROPN'), ('al', 'PROPN'), ('.', 'PUNCT'), (',2011', 'PUNCT'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Event', 'compound'), ('discovery', 'ROOT'), ('social', 'amod'), ('media', 'compound'), ('feeds', 'pobj'), ('(', 'punct'), ('Edward', 'compound'), ('Benson', 'compound'), ('et', 'compound'), ('al', 'parataxis'), ('.', 'punct'), (',2011', 'punct'), (')', 'punct')]

>> Bigrams: 
[[Event, discovery], [discovery, social], [social, media], [media, feeds], [feeds, (], [(, Edward], [Edward, Benson], [Benson, et], [et, al], [al, .], [., ,2011], [,2011, )]]

>> Trigrams: 
[[Event, discovery, social], [discovery, social, media], [social, media, feeds], [media, feeds, (], [feeds, (, Edward], [(, Edward, Benson], [Edward, Benson, et], [Benson, et, al], [et, al, .], [al, ., ,2011], [., ,2011, )]]

>> Noun Phrases are: 
[Event discovery, social media feeds]

>> Named Entities are: 
[('Edward Benson', 'PERSON'), ('al', 'PERSON')] 

------------------- Sentence 2 -------------------

[36], 


>> Tokens are: 
[[, 36, ], ,] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('36', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'ROOT'), ('36', 'meta'), (']', 'punct'), (',', 'punct')]

>> Bigrams: 
[[[, 36], [36, ]], [], ,]]

>> Trigrams: 
[[[, 36, ]], [36, ], ,]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('36', 'CARDINAL')] 

------------------- Sentence 3 -------------------

using a graphical   


>> Tokens are: 
[graphical,  ] 

>> PoS Tags are: 
[('graphical', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('graphical', 'amod'), (' ', 'dobj')]

>> Bigrams: 
[[graphical,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 286 =================================

model to analyse any social media feeds to determine whether it contains name of a person or  

------------------- Sentence 1 -------------------

model to analyse any social media feeds to determine whether it contains name of a person or   


>> Tokens are: 
[model, analyse, social, media, feeds, determine, contains, person,  ] 

>> PoS Tags are: 
[('model', 'NOUN'), ('analyse', 'VERB'), ('social', 'ADJ'), ('media', 'NOUN'), ('feeds', 'VERB'), ('determine', 'VERB'), ('contains', 'VERB'), ('person', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('model', 'ROOT'), ('analyse', 'xcomp'), ('social', 'amod'), ('media', 'nsubj'), ('feeds', 'dobj'), ('determine', 'advcl'), ('contains', 'ccomp'), ('person', 'pobj'), (' ', 'conj')]

>> Bigrams: 
[[model, analyse], [analyse, social], [social, media], [media, feeds], [feeds, determine], [determine, contains], [contains, person], [person,  ]]

>> Trigrams: 
[[model, analyse, social], [analyse, social, media], [social, media, feeds], [media, feeds, determine], [feeds, determine, contains], [determine, contains, person], [contains, person,  ]]

>> Noun Phrases are: 
[model, any social media, it, name, a person]

>> Named Entities are: 
[] 


================================ Paragraph 287 =================================

name of a venue, place, time etc. The model operates on noisy feeds of data to extract records  

------------------- Sentence 1 -------------------

name of a venue, place, time etc. 


>> Tokens are: 
[venue, ,, place, ,, time, etc, .] 

>> PoS Tags are: 
[('venue', 'NOUN'), (',', 'PUNCT'), ('place', 'NOUN'), (',', 'PUNCT'), ('time', 'NOUN'), ('etc', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('venue', 'pobj'), (',', 'punct'), ('place', 'conj'), (',', 'punct'), ('time', 'compound'), ('etc', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[venue, ,], [,, place], [place, ,], [,, time], [time, etc], [etc, .]]

>> Trigrams: 
[[venue, ,, place], [,, place, ,], [place, ,, time], [,, time, etc], [time, etc, .]]

>> Noun Phrases are: 
[name, a venue, place]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

The model operates on noisy feeds of data to extract records   


>> Tokens are: 
[model, operates, noisy, feeds, data, extract, records,  ] 

>> PoS Tags are: 
[('model', 'NOUN'), ('operates', 'VERB'), ('noisy', 'ADJ'), ('feeds', 'NOUN'), ('data', 'NOUN'), ('extract', 'VERB'), ('records', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('model', 'nsubj'), ('operates', 'ROOT'), ('noisy', 'amod'), ('feeds', 'pobj'), ('data', 'pobj'), ('extract', 'advcl'), ('records', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[model, operates], [operates, noisy], [noisy, feeds], [feeds, data], [data, extract], [extract, records], [records,  ]]

>> Trigrams: 
[[model, operates, noisy], [operates, noisy, feeds], [noisy, feeds, data], [feeds, data, extract], [data, extract, records], [extract, records,  ]]

>> Noun Phrases are: 
[The model, noisy feeds, data, records]

>> Named Entities are: 
[] 


================================ Paragraph 288 =================================

of events by aggregating multiple information across multiple messages, despite the noise of  

------------------- Sentence 1 -------------------

of events by aggregating multiple information across multiple messages, 


>> Tokens are: 
[events, aggregating, multiple, information, multiple, messages, ,] 

>> PoS Tags are: 
[('events', 'NOUN'), ('aggregating', 'VERB'), ('multiple', 'ADJ'), ('information', 'NOUN'), ('multiple', 'ADJ'), ('messages', 'NOUN'), (',', 'PUNCT')] 

>> Dependency Tags are: 
[('events', 'pobj'), ('aggregating', 'pcomp'), ('multiple', 'amod'), ('information', 'dobj'), ('multiple', 'amod'), ('messages', 'pobj'), (',', 'punct')]

>> Bigrams: 
[[events, aggregating], [aggregating, multiple], [multiple, information], [information, multiple], [multiple, messages], [messages, ,]]

>> Trigrams: 
[[events, aggregating, multiple], [aggregating, multiple, information], [multiple, information, multiple], [information, multiple, messages], [multiple, messages, ,]]

>> Noun Phrases are: 
[events, multiple information, multiple messages]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

despite the noise of   


>> Tokens are: 
[despite, noise,  ] 

>> PoS Tags are: 
[('despite', 'SCONJ'), ('noise', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('despite', 'ROOT'), ('noise', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[despite, noise], [noise,  ]]

>> Trigrams: 
[[despite, noise,  ]]

>> Noun Phrases are: 
[the noise]

>> Named Entities are: 
[] 


================================ Paragraph 289 =================================

irrelevant noisy messages and very irregular message language, this model was able to extract  

------------------- Sentence 1 -------------------

irrelevant noisy messages and very irregular message language, this model was able to extract   


>> Tokens are: 
[irrelevant, noisy, messages, irregular, message, language, ,, model, able, extract,  ] 

>> PoS Tags are: 
[('irrelevant', 'ADJ'), ('noisy', 'ADJ'), ('messages', 'NOUN'), ('irregular', 'ADJ'), ('message', 'NOUN'), ('language', 'NOUN'), (',', 'PUNCT'), ('model', 'NOUN'), ('able', 'ADJ'), ('extract', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('irrelevant', 'amod'), ('noisy', 'amod'), ('messages', 'dep'), ('irregular', 'amod'), ('message', 'compound'), ('language', 'conj'), (',', 'punct'), ('model', 'nsubj'), ('able', 'acomp'), ('extract', 'xcomp'), (' ', 'dobj')]

>> Bigrams: 
[[irrelevant, noisy], [noisy, messages], [messages, irregular], [irregular, message], [message, language], [language, ,], [,, model], [model, able], [able, extract], [extract,  ]]

>> Trigrams: 
[[irrelevant, noisy, messages], [noisy, messages, irregular], [messages, irregular, message], [irregular, message, language], [message, language, ,], [language, ,, model], [,, model, able], [model, able, extract], [able, extract,  ]]

>> Noun Phrases are: 
[this model]

>> Named Entities are: 
[] 


================================ Paragraph 290 =================================

records with high accuracy. However, there is some scope for improvement using broader  

------------------- Sentence 1 -------------------

records with high accuracy. 


>> Tokens are: 
[records, high, accuracy, .] 

>> PoS Tags are: 
[('records', 'NOUN'), ('high', 'ADJ'), ('accuracy', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('records', 'ROOT'), ('high', 'amod'), ('accuracy', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[records, high], [high, accuracy], [accuracy, .]]

>> Trigrams: 
[[records, high, accuracy], [high, accuracy, .]]

>> Noun Phrases are: 
[records, high accuracy]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

However, there is some scope for improvement using broader   


>> Tokens are: 
[,, scope, improvement, broader,  ] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('scope', 'NOUN'), ('improvement', 'NOUN'), ('broader', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(',', 'punct'), ('scope', 'attr'), ('improvement', 'pobj'), ('broader', 'amod'), (' ', 'dobj')]

>> Bigrams: 
[[,, scope], [scope, improvement], [improvement, broader], [broader,  ]]

>> Trigrams: 
[[,, scope, improvement], [scope, improvement, broader], [improvement, broader,  ]]

>> Noun Phrases are: 
[some scope, improvement]

>> Named Entities are: 
[] 


================================ Paragraph 291 =================================

array of features on factors.  

------------------- Sentence 1 -------------------

array of features on factors. 


>> Tokens are: 
[array, features, factors, .] 

>> PoS Tags are: 
[('array', 'NOUN'), ('features', 'NOUN'), ('factors', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('array', 'ROOT'), ('features', 'pobj'), ('factors', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[array, features], [features, factors], [factors, .]]

>> Trigrams: 
[[array, features, factors], [features, factors, .]]

>> Noun Phrases are: 
[array, features, factors]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 292 =================================

  

------------------- Sentence 1 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 293 =================================

6. Applications of NLP  

------------------- Sentence 1 -------------------

6. 


>> Tokens are: 
[6, .] 

>> PoS Tags are: 
[('6', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('6', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[6, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('6', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Applications of NLP   


>> Tokens are: 
[Applications, NLP,  ] 

>> PoS Tags are: 
[('Applications', 'NOUN'), ('NLP', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Applications', 'ROOT'), ('NLP', 'pobj'), (' ', 'nummod')]

>> Bigrams: 
[[Applications, NLP], [NLP,  ]]

>> Trigrams: 
[[Applications, NLP,  ]]

>> Noun Phrases are: 
[Applications, NLP]

>> Named Entities are: 
[('NLP', 'ORG')] 


================================ Paragraph 294 =================================

Natural Language Processing can be applied into various areas like Machine Translation,  

------------------- Sentence 1 -------------------

Natural Language Processing can be applied into various areas like Machine Translation,   


>> Tokens are: 
[Natural, Language, Processing, applied, areas, like, Machine, Translation, ,,  ] 

>> PoS Tags are: 
[('Natural', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'NOUN'), ('applied', 'VERB'), ('areas', 'NOUN'), ('like', 'ADP'), ('Machine', 'PROPN'), ('Translation', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Natural', 'compound'), ('Language', 'compound'), ('Processing', 'nsubjpass'), ('applied', 'ROOT'), ('areas', 'pobj'), ('like', 'prep'), ('Machine', 'compound'), ('Translation', 'pobj'), (',', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Natural, Language], [Language, Processing], [Processing, applied], [applied, areas], [areas, like], [like, Machine], [Machine, Translation], [Translation, ,], [,,  ]]

>> Trigrams: 
[[Natural, Language, Processing], [Language, Processing, applied], [Processing, applied, areas], [applied, areas, like], [areas, like, Machine], [like, Machine, Translation], [Machine, Translation, ,], [Translation, ,,  ]]

>> Noun Phrases are: 
[Natural Language Processing, various areas, Machine Translation]

>> Named Entities are: 
[('Machine Translation', 'ORG')] 


================================ Paragraph 295 =================================

Email Spam detection, Information Extraction, Summarization, Question Answering etc.  

------------------- Sentence 1 -------------------

Email Spam detection, Information Extraction, Summarization, Question Answering etc.   


>> Tokens are: 
[Email, Spam, detection, ,, Information, Extraction, ,, Summarization, ,, Question, Answering, etc, .,  ] 

>> PoS Tags are: 
[('Email', 'PROPN'), ('Spam', 'PROPN'), ('detection', 'NOUN'), (',', 'PUNCT'), ('Information', 'PROPN'), ('Extraction', 'PROPN'), (',', 'PUNCT'), ('Summarization', 'PROPN'), (',', 'PUNCT'), ('Question', 'PROPN'), ('Answering', 'PROPN'), ('etc', 'X'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Email', 'compound'), ('Spam', 'compound'), ('detection', 'ROOT'), (',', 'punct'), ('Information', 'compound'), ('Extraction', 'conj'), (',', 'punct'), ('Summarization', 'conj'), (',', 'punct'), ('Question', 'compound'), ('Answering', 'conj'), ('etc', 'appos'), ('.', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Email, Spam], [Spam, detection], [detection, ,], [,, Information], [Information, Extraction], [Extraction, ,], [,, Summarization], [Summarization, ,], [,, Question], [Question, Answering], [Answering, etc], [etc, .], [.,  ]]

>> Trigrams: 
[[Email, Spam, detection], [Spam, detection, ,], [detection, ,, Information], [,, Information, Extraction], [Information, Extraction, ,], [Extraction, ,, Summarization], [,, Summarization, ,], [Summarization, ,, Question], [,, Question, Answering], [Question, Answering, etc], [Answering, etc, .], [etc, .,  ]]

>> Noun Phrases are: 
[Email Spam detection, Information Extraction, Summarization, Question Answering]

>> Named Entities are: 
[('Email Spam', 'PERSON'), ('Information Extraction', 'ORG')] 


================================ Paragraph 296 =================================

6.1 Machine Translation   

------------------- Sentence 1 -------------------

6.1 Machine Translation    


>> Tokens are: 
[6.1, Machine, Translation,   ] 

>> PoS Tags are: 
[('6.1', 'NUM'), ('Machine', 'NOUN'), ('Translation', 'NOUN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('6.1', 'nummod'), ('Machine', 'compound'), ('Translation', 'compound'), ('  ', 'ROOT')]

>> Bigrams: 
[[6.1, Machine], [Machine, Translation], [Translation,   ]]

>> Trigrams: 
[[6.1, Machine, Translation], [Machine, Translation,   ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('6.1', 'CARDINAL')] 


================================ Paragraph 297 =================================

As most of the world is online, the task of making data accessible and available to all is a  

------------------- Sentence 1 -------------------

As most of the world is online, the task of making data accessible and available to all is a   


>> Tokens are: 
[world, online, ,, task, making, data, accessible, available,  ] 

>> PoS Tags are: 
[('world', 'NOUN'), ('online', 'ADJ'), (',', 'PUNCT'), ('task', 'NOUN'), ('making', 'VERB'), ('data', 'NOUN'), ('accessible', 'ADJ'), ('available', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('world', 'pobj'), ('online', 'acomp'), (',', 'punct'), ('task', 'nsubj'), ('making', 'pcomp'), ('data', 'nsubj'), ('accessible', 'ccomp'), ('available', 'conj'), (' ', 'attr')]

>> Bigrams: 
[[world, online], [online, ,], [,, task], [task, making], [making, data], [data, accessible], [accessible, available], [available,  ]]

>> Trigrams: 
[[world, online, ,], [online, ,, task], [,, task, making], [task, making, data], [making, data, accessible], [data, accessible, available], [accessible, available,  ]]

>> Noun Phrases are: 
[the world, the task, data]

>> Named Entities are: 
[] 


================================ Paragraph 298 =================================

challenge. Major challenge in making data accessible is the language barrier. There are  

------------------- Sentence 1 -------------------

challenge. 


>> Tokens are: 
[challenge, .] 

>> PoS Tags are: 
[('challenge', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('challenge', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[challenge, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[challenge]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Major challenge in making data accessible is the language barrier. 


>> Tokens are: 
[Major, challenge, making, data, accessible, language, barrier, .] 

>> PoS Tags are: 
[('Major', 'ADJ'), ('challenge', 'NOUN'), ('making', 'VERB'), ('data', 'NOUN'), ('accessible', 'ADJ'), ('language', 'NOUN'), ('barrier', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Major', 'amod'), ('challenge', 'nsubj'), ('making', 'pcomp'), ('data', 'nsubj'), ('accessible', 'ccomp'), ('language', 'compound'), ('barrier', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[Major, challenge], [challenge, making], [making, data], [data, accessible], [accessible, language], [language, barrier], [barrier, .]]

>> Trigrams: 
[[Major, challenge, making], [challenge, making, data], [making, data, accessible], [data, accessible, language], [accessible, language, barrier], [language, barrier, .]]

>> Noun Phrases are: 
[Major challenge, data, the language barrier]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

There are   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'attr')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 299 =================================

multitude of languages with different sentence structure and grammar. Machine Translation is  

------------------- Sentence 1 -------------------

multitude of languages with different sentence structure and grammar. 


>> Tokens are: 
[multitude, languages, different, sentence, structure, grammar, .] 

>> PoS Tags are: 
[('multitude', 'NOUN'), ('languages', 'NOUN'), ('different', 'ADJ'), ('sentence', 'NOUN'), ('structure', 'NOUN'), ('grammar', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('multitude', 'ROOT'), ('languages', 'pobj'), ('different', 'amod'), ('sentence', 'compound'), ('structure', 'pobj'), ('grammar', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[multitude, languages], [languages, different], [different, sentence], [sentence, structure], [structure, grammar], [grammar, .]]

>> Trigrams: 
[[multitude, languages, different], [languages, different, sentence], [different, sentence, structure], [sentence, structure, grammar], [structure, grammar, .]]

>> Noun Phrases are: 
[multitude, languages, different sentence structure, grammar]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Machine Translation is   


>> Tokens are: 
[Machine, Translation,  ] 

>> PoS Tags are: 
[('Machine', 'NOUN'), ('Translation', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Machine', 'compound'), ('Translation', 'nsubj'), (' ', 'attr')]

>> Bigrams: 
[[Machine, Translation], [Translation,  ]]

>> Trigrams: 
[[Machine, Translation,  ]]

>> Noun Phrases are: 
[Machine Translation]

>> Named Entities are: 
[('Machine Translation', 'ORG')] 


================================ Paragraph 300 =================================

generally translating phrases from one language to another with the help of a statistical  

------------------- Sentence 1 -------------------

generally translating phrases from one language to another with the help of a statistical   


>> Tokens are: 
[generally, translating, phrases, language, help, statistical,  ] 

>> PoS Tags are: 
[('generally', 'ADV'), ('translating', 'VERB'), ('phrases', 'NOUN'), ('language', 'NOUN'), ('help', 'NOUN'), ('statistical', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('generally', 'advmod'), ('translating', 'ROOT'), ('phrases', 'dobj'), ('language', 'pobj'), ('help', 'pobj'), ('statistical', 'amod'), (' ', 'pobj')]

>> Bigrams: 
[[generally, translating], [translating, phrases], [phrases, language], [language, help], [help, statistical], [statistical,  ]]

>> Trigrams: 
[[generally, translating, phrases], [translating, phrases, language], [phrases, language, help], [language, help, statistical], [help, statistical,  ]]

>> Noun Phrases are: 
[phrases, one language, the help]

>> Named Entities are: 
[] 


================================ Paragraph 301 =================================

engine like Google Translate. The challenge with machine translation technologies is not  

------------------- Sentence 1 -------------------

engine like Google Translate. 


>> Tokens are: 
[engine, like, Google, Translate, .] 

>> PoS Tags are: 
[('engine', 'NOUN'), ('like', 'ADP'), ('Google', 'PROPN'), ('Translate', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('engine', 'ROOT'), ('like', 'prep'), ('Google', 'compound'), ('Translate', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[engine, like], [like, Google], [Google, Translate], [Translate, .]]

>> Trigrams: 
[[engine, like, Google], [like, Google, Translate], [Google, Translate, .]]

>> Noun Phrases are: 
[engine, Google Translate]

>> Named Entities are: 
[('Google Translate', 'PRODUCT')] 

------------------- Sentence 2 -------------------

The challenge with machine translation technologies is not   


>> Tokens are: 
[challenge, machine, translation, technologies,  ] 

>> PoS Tags are: 
[('challenge', 'NOUN'), ('machine', 'NOUN'), ('translation', 'NOUN'), ('technologies', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('challenge', 'nsubj'), ('machine', 'compound'), ('translation', 'compound'), ('technologies', 'pobj'), (' ', 'attr')]

>> Bigrams: 
[[challenge, machine], [machine, translation], [translation, technologies], [technologies,  ]]

>> Trigrams: 
[[challenge, machine, translation], [machine, translation, technologies], [translation, technologies,  ]]

>> Noun Phrases are: 
[The challenge, machine translation technologies]

>> Named Entities are: 
[] 


================================ Paragraph 302 =================================

directly translating words but keeping the meaning of sentences intact along with grammar  

------------------- Sentence 1 -------------------

directly translating words but keeping the meaning of sentences intact along with grammar   


>> Tokens are: 
[directly, translating, words, keeping, meaning, sentences, intact, grammar,  ] 

>> PoS Tags are: 
[('directly', 'ADV'), ('translating', 'VERB'), ('words', 'NOUN'), ('keeping', 'VERB'), ('meaning', 'NOUN'), ('sentences', 'NOUN'), ('intact', 'ADJ'), ('grammar', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('directly', 'advmod'), ('translating', 'ROOT'), ('words', 'dobj'), ('keeping', 'conj'), ('meaning', 'dobj'), ('sentences', 'pobj'), ('intact', 'amod'), ('grammar', 'compound'), (' ', 'pobj')]

>> Bigrams: 
[[directly, translating], [translating, words], [words, keeping], [keeping, meaning], [meaning, sentences], [sentences, intact], [intact, grammar], [grammar,  ]]

>> Trigrams: 
[[directly, translating, words], [translating, words, keeping], [words, keeping, meaning], [keeping, meaning, sentences], [meaning, sentences, intact], [sentences, intact, grammar], [intact, grammar,  ]]

>> Noun Phrases are: 
[words, the meaning, sentences]

>> Named Entities are: 
[] 


================================ Paragraph 303 =================================

and tenses. The statistical machine learning gathers as many data as they can find that seems  

------------------- Sentence 1 -------------------

and tenses. 


>> Tokens are: 
[tenses, .] 

>> PoS Tags are: 
[('tenses', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('tenses', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[tenses, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[and tenses]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

The statistical machine learning gathers as many data as they can find that seems   


>> Tokens are: 
[statistical, machine, learning, gathers, data, find,  ] 

>> PoS Tags are: 
[('statistical', 'ADJ'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('gathers', 'VERB'), ('data', 'NOUN'), ('find', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('statistical', 'amod'), ('machine', 'compound'), ('learning', 'nsubj'), ('gathers', 'ROOT'), ('data', 'pobj'), ('find', 'advcl'), (' ', 'dobj')]

>> Bigrams: 
[[statistical, machine], [machine, learning], [learning, gathers], [gathers, data], [data, find], [find,  ]]

>> Trigrams: 
[[statistical, machine, learning], [machine, learning, gathers], [learning, gathers, data], [gathers, data, find], [data, find,  ]]

>> Noun Phrases are: 
[The statistical machine learning, many data, they]

>> Named Entities are: 
[] 


================================ Paragraph 304 =================================

to be parallel between two languages and they crunch their data to find the likelihood that  

------------------- Sentence 1 -------------------

to be parallel between two languages and they crunch their data to find the likelihood 


>> Tokens are: 
[parallel, languages, crunch, data, find, likelihood] 

>> PoS Tags are: 
[('parallel', 'ADJ'), ('languages', 'NOUN'), ('crunch', 'VERB'), ('data', 'NOUN'), ('find', 'VERB'), ('likelihood', 'NOUN')] 

>> Dependency Tags are: 
[('parallel', 'acomp'), ('languages', 'pobj'), ('crunch', 'conj'), ('data', 'dobj'), ('find', 'advcl'), ('likelihood', 'dobj')]

>> Bigrams: 
[[parallel, languages], [languages, crunch], [crunch, data], [data, find], [find, likelihood]]

>> Trigrams: 
[[parallel, languages, crunch], [languages, crunch, data], [crunch, data, find], [data, find, likelihood]]

>> Noun Phrases are: 
[two languages, they, their data, the likelihood]

>> Named Entities are: 
[('two', 'CARDINAL')] 

------------------- Sentence 2 -------------------

that   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'pobj')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 305 =================================

something in Language A corresponds to something in Language B. As for Google, in  

------------------- Sentence 1 -------------------

something in 


>> Tokens are: 
[] 

>> PoS Tags are: 
[] 

>> Dependency Tags are: 
[]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[something]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Language A corresponds to something in Language B. 


>> Tokens are: 
[Language, corresponds, Language, B.] 

>> PoS Tags are: 
[('Language', 'PROPN'), ('corresponds', 'NOUN'), ('Language', 'PROPN'), ('B.', 'PROPN')] 

>> Dependency Tags are: 
[('Language', 'compound'), ('corresponds', 'ROOT'), ('Language', 'compound'), ('B.', 'pobj')]

>> Bigrams: 
[[Language, corresponds], [corresponds, Language], [Language, B.]]

>> Trigrams: 
[[Language, corresponds, Language], [corresponds, Language, B.]]

>> Noun Phrases are: 
[Language A, something, Language B.]

>> Named Entities are: 
[('Language A', 'LOC'), ('Language B.', 'PERSON')] 

------------------- Sentence 3 -------------------

As for Google, in   


>> Tokens are: 
[Google, ,,  ] 

>> PoS Tags are: 
[('Google', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Google', 'pobj'), (',', 'punct'), (' ', 'pobj')]

>> Bigrams: 
[[Google, ,], [,,  ]]

>> Trigrams: 
[[Google, ,,  ]]

>> Noun Phrases are: 
[Google]

>> Named Entities are: 
[('Google', 'ORG')] 


================================ Paragraph 306 =================================

September 2016, announced a new machine translation system based on Artificial neural  

------------------- Sentence 1 -------------------

September 2016, announced a new machine translation system based on Artificial neural   


>> Tokens are: 
[September, 2016, ,, announced, new, machine, translation, system, based, Artificial, neural,  ] 

>> PoS Tags are: 
[('September', 'PROPN'), ('2016', 'NUM'), (',', 'PUNCT'), ('announced', 'VERB'), ('new', 'ADJ'), ('machine', 'NOUN'), ('translation', 'NOUN'), ('system', 'NOUN'), ('based', 'VERB'), ('Artificial', 'ADJ'), ('neural', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('September', 'npadvmod'), ('2016', 'nummod'), (',', 'punct'), ('announced', 'ROOT'), ('new', 'amod'), ('machine', 'compound'), ('translation', 'compound'), ('system', 'dobj'), ('based', 'acl'), ('Artificial', 'amod'), ('neural', 'amod'), (' ', 'pobj')]

>> Bigrams: 
[[September, 2016], [2016, ,], [,, announced], [announced, new], [new, machine], [machine, translation], [translation, system], [system, based], [based, Artificial], [Artificial, neural], [neural,  ]]

>> Trigrams: 
[[September, 2016, ,], [2016, ,, announced], [,, announced, new], [announced, new, machine], [new, machine, translation], [machine, translation, system], [translation, system, based], [system, based, Artificial], [based, Artificial, neural], [Artificial, neural,  ]]

>> Noun Phrases are: 
[a new machine translation system]

>> Named Entities are: 
[('September 2016', 'DATE'), ('Artificial', 'ORG')] 


================================ Paragraph 307 =================================

networks and Deep learning . In recent years, various methods have been proposed to  

------------------- Sentence 1 -------------------

networks and Deep learning . 


>> Tokens are: 
[networks, Deep, learning, .] 

>> PoS Tags are: 
[('networks', 'NOUN'), ('Deep', 'ADJ'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('networks', 'ROOT'), ('Deep', 'amod'), ('learning', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[networks, Deep], [Deep, learning], [learning, .]]

>> Trigrams: 
[[networks, Deep, learning], [Deep, learning, .]]

>> Noun Phrases are: 
[networks, Deep learning]

>> Named Entities are: 
[('Deep', 'PERSON')] 

------------------- Sentence 2 -------------------

In recent years, various methods have been proposed to   


>> Tokens are: 
[recent, years, ,, methods, proposed,  ] 

>> PoS Tags are: 
[('recent', 'ADJ'), ('years', 'NOUN'), (',', 'PUNCT'), ('methods', 'NOUN'), ('proposed', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('recent', 'amod'), ('years', 'pobj'), (',', 'punct'), ('methods', 'nsubjpass'), ('proposed', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[recent, years], [years, ,], [,, methods], [methods, proposed], [proposed,  ]]

>> Trigrams: 
[[recent, years, ,], [years, ,, methods], [,, methods, proposed], [methods, proposed,  ]]

>> Noun Phrases are: 
[recent years, various methods]

>> Named Entities are: 
[('recent years', 'DATE')] 


================================ Paragraph 308 =================================

automatically evaluate machine translation quality by comparing hypothesis translations with  

------------------- Sentence 1 -------------------

automatically evaluate machine translation quality by comparing hypothesis translations with   


>> Tokens are: 
[automatically, evaluate, machine, translation, quality, comparing, hypothesis, translations,  ] 

>> PoS Tags are: 
[('automatically', 'ADV'), ('evaluate', 'VERB'), ('machine', 'NOUN'), ('translation', 'NOUN'), ('quality', 'NOUN'), ('comparing', 'VERB'), ('hypothesis', 'NOUN'), ('translations', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('automatically', 'advmod'), ('evaluate', 'ROOT'), ('machine', 'compound'), ('translation', 'compound'), ('quality', 'dobj'), ('comparing', 'pcomp'), ('hypothesis', 'compound'), ('translations', 'dobj'), (' ', 'pobj')]

>> Bigrams: 
[[automatically, evaluate], [evaluate, machine], [machine, translation], [translation, quality], [quality, comparing], [comparing, hypothesis], [hypothesis, translations], [translations,  ]]

>> Trigrams: 
[[automatically, evaluate, machine], [evaluate, machine, translation], [machine, translation, quality], [translation, quality, comparing], [quality, comparing, hypothesis], [comparing, hypothesis, translations], [hypothesis, translations,  ]]

>> Noun Phrases are: 
[machine translation quality, hypothesis translations]

>> Named Entities are: 
[] 


================================ Paragraph 309 =================================

reference translations. Examples of such methods are word error rate, position-independent  

------------------- Sentence 1 -------------------

reference translations. 


>> Tokens are: 
[reference, translations, .] 

>> PoS Tags are: 
[('reference', 'NOUN'), ('translations', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('reference', 'compound'), ('translations', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[reference, translations], [translations, .]]

>> Trigrams: 
[[reference, translations, .]]

>> Noun Phrases are: 
[reference translations]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Examples of such methods are word error rate, position-independent   


>> Tokens are: 
[Examples, methods, word, error, rate, ,, position, -, independent,  ] 

>> PoS Tags are: 
[('Examples', 'NOUN'), ('methods', 'NOUN'), ('word', 'NOUN'), ('error', 'NOUN'), ('rate', 'NOUN'), (',', 'PUNCT'), ('position', 'NOUN'), ('-', 'PUNCT'), ('independent', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Examples', 'nsubj'), ('methods', 'pobj'), ('word', 'compound'), ('error', 'compound'), ('rate', 'attr'), (',', 'punct'), ('position', 'npadvmod'), ('-', 'punct'), ('independent', 'amod'), (' ', 'punct')]

>> Bigrams: 
[[Examples, methods], [methods, word], [word, error], [error, rate], [rate, ,], [,, position], [position, -], [-, independent], [independent,  ]]

>> Trigrams: 
[[Examples, methods, word], [methods, word, error], [word, error, rate], [error, rate, ,], [rate, ,, position], [,, position, -], [position, -, independent], [-, independent,  ]]

>> Noun Phrases are: 
[Examples, such methods, word error rate]

>> Named Entities are: 
[] 


================================ Paragraph 310 =================================

word error rate (Tillmann et al., 1997) [37], generation string accuracy (Bangalore et al.,  

------------------- Sentence 1 -------------------

word error rate (Tillmann et al., 1997) 


>> Tokens are: 
[word, error, rate, (, Tillmann, et, al, ., ,, 1997, )] 

>> PoS Tags are: 
[('word', 'NOUN'), ('error', 'NOUN'), ('rate', 'NOUN'), ('(', 'PUNCT'), ('Tillmann', 'PROPN'), ('et', 'PROPN'), ('al', 'PROPN'), ('.', 'PROPN'), (',', 'PUNCT'), ('1997', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('word', 'compound'), ('error', 'compound'), ('rate', 'ROOT'), ('(', 'punct'), ('Tillmann', 'compound'), ('et', 'compound'), ('al', 'appos'), ('.', 'punct'), (',', 'punct'), ('1997', 'npadvmod'), (')', 'punct')]

>> Bigrams: 
[[word, error], [error, rate], [rate, (], [(, Tillmann], [Tillmann, et], [et, al], [al, .], [., ,], [,, 1997], [1997, )]]

>> Trigrams: 
[[word, error, rate], [error, rate, (], [rate, (, Tillmann], [(, Tillmann, et], [Tillmann, et, al], [et, al, .], [al, ., ,], [., ,, 1997], [,, 1997, )]]

>> Noun Phrases are: 
[word error rate, Tillmann et al]

>> Named Entities are: 
[('Tillmann', 'PERSON'), ('1997', 'DATE')] 

------------------- Sentence 2 -------------------

[37], generation string accuracy (Bangalore et al., 


>> Tokens are: 
[[, 37, ], ,, generation, string, accuracy, (, Bangalore, et, al, ., ,] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('37', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('generation', 'NOUN'), ('string', 'NOUN'), ('accuracy', 'NOUN'), ('(', 'PUNCT'), ('Bangalore', 'PROPN'), ('et', 'PROPN'), ('al', 'PROPN'), ('.', 'PUNCT'), (',', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('37', 'dep'), (']', 'dep'), (',', 'punct'), ('generation', 'compound'), ('string', 'compound'), ('accuracy', 'ROOT'), ('(', 'punct'), ('Bangalore', 'compound'), ('et', 'compound'), ('al', 'appos'), ('.', 'punct'), (',', 'punct')]

>> Bigrams: 
[[[, 37], [37, ]], [], ,], [,, generation], [generation, string], [string, accuracy], [accuracy, (], [(, Bangalore], [Bangalore, et], [et, al], [al, .], [., ,]]

>> Trigrams: 
[[[, 37, ]], [37, ], ,], [], ,, generation], [,, generation, string], [generation, string, accuracy], [string, accuracy, (], [accuracy, (, Bangalore], [(, Bangalore, et], [Bangalore, et, al], [et, al, .], [al, ., ,]]

>> Noun Phrases are: 
[[37], generation string accuracy, Bangalore et al]

>> Named Entities are: 
[('37', 'CARDINAL')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 311 =================================

2000) [38], multi-reference word error rate (Nießen et al., 2000) [39], BLEU score (Papineni  

------------------- Sentence 1 -------------------

2000) 


>> Tokens are: 
[2000, )] 

>> PoS Tags are: 
[('2000', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('2000', 'ROOT'), (')', 'punct')]

>> Bigrams: 
[[2000, )]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2000', 'DATE')] 

------------------- Sentence 2 -------------------

[38], multi-reference word error rate (Nießen et al., 2000) 


>> Tokens are: 
[[, 38, ], ,, multi, -, reference, word, error, rate, (, Nießen, et, al, ., ,, 2000, )] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('38', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('multi', 'ADJ'), ('-', 'ADJ'), ('reference', 'ADJ'), ('word', 'NOUN'), ('error', 'NOUN'), ('rate', 'NOUN'), ('(', 'PUNCT'), ('Nießen', 'PROPN'), ('et', 'NOUN'), ('al', 'PROPN'), ('.', 'PROPN'), (',', 'PUNCT'), ('2000', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('38', 'dep'), (']', 'dep'), (',', 'punct'), ('multi', 'amod'), ('-', 'amod'), ('reference', 'amod'), ('word', 'compound'), ('error', 'compound'), ('rate', 'ROOT'), ('(', 'punct'), ('Nießen', 'npadvmod'), ('et', 'compound'), ('al', 'appos'), ('.', 'punct'), (',', 'punct'), ('2000', 'appos'), (')', 'punct')]

>> Bigrams: 
[[[, 38], [38, ]], [], ,], [,, multi], [multi, -], [-, reference], [reference, word], [word, error], [error, rate], [rate, (], [(, Nießen], [Nießen, et], [et, al], [al, .], [., ,], [,, 2000], [2000, )]]

>> Trigrams: 
[[[, 38, ]], [38, ], ,], [], ,, multi], [,, multi, -], [multi, -, reference], [-, reference, word], [reference, word, error], [word, error, rate], [error, rate, (], [rate, (, Nießen], [(, Nießen, et], [Nießen, et, al], [et, al, .], [al, ., ,], [., ,, 2000], [,, 2000, )]]

>> Noun Phrases are: 
[[38], multi-reference word error rate, et al]

>> Named Entities are: 
[('38', 'CARDINAL'), ('Nießen', 'ORG'), ('2000', 'DATE')] 

------------------- Sentence 3 -------------------

[39], BLEU score (Papineni   


>> Tokens are: 
[[, 39, ], ,, BLEU, score, (, Papineni,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('39', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('BLEU', 'PROPN'), ('score', 'NOUN'), ('(', 'PUNCT'), ('Papineni', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('39', 'meta'), (']', 'punct'), (',', 'punct'), ('BLEU', 'compound'), ('score', 'ROOT'), ('(', 'punct'), ('Papineni', 'amod'), (' ', 'punct')]

>> Bigrams: 
[[[, 39], [39, ]], [], ,], [,, BLEU], [BLEU, score], [score, (], [(, Papineni], [Papineni,  ]]

>> Trigrams: 
[[[, 39, ]], [39, ], ,], [], ,, BLEU], [,, BLEU, score], [BLEU, score, (], [score, (, Papineni], [(, Papineni,  ]]

>> Noun Phrases are: 
[[39], BLEU score]

>> Named Entities are: 
[('39', 'CARDINAL'), ('BLEU', 'ORG'), ('Papineni', 'NORP')] 


================================ Paragraph 312 =================================

et al., 2002) [40], NIST score (Doddington, 2002) [41]  All these criteria try to approximate  

------------------- Sentence 1 -------------------

et al., 2002) 


>> Tokens are: 
[et, al, ., ,, 2002, )] 

>> PoS Tags are: 
[('et', 'X'), ('al', 'PROPN'), ('.', 'PROPN'), (',', 'PUNCT'), ('2002', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('et', 'ROOT'), ('al', 'pobj'), ('.', 'pobj'), (',', 'punct'), ('2002', 'appos'), (')', 'punct')]

>> Bigrams: 
[[et, al], [al, .], [., ,], [,, 2002], [2002, )]]

>> Trigrams: 
[[et, al, .], [al, ., ,], [., ,, 2002], [,, 2002, )]]

>> Noun Phrases are: 
[al, .]

>> Named Entities are: 
[('2002', 'DATE')] 

------------------- Sentence 2 -------------------

[40], NIST score (Doddington, 2002) 


>> Tokens are: 
[[, 40, ], ,, NIST, score, (, Doddington, ,, 2002, )] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('40', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('NIST', 'PROPN'), ('score', 'NOUN'), ('(', 'PUNCT'), ('Doddington', 'PROPN'), (',', 'PUNCT'), ('2002', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('40', 'meta'), (']', 'punct'), (',', 'punct'), ('NIST', 'compound'), ('score', 'ROOT'), ('(', 'punct'), ('Doddington', 'appos'), (',', 'punct'), ('2002', 'appos'), (')', 'punct')]

>> Bigrams: 
[[[, 40], [40, ]], [], ,], [,, NIST], [NIST, score], [score, (], [(, Doddington], [Doddington, ,], [,, 2002], [2002, )]]

>> Trigrams: 
[[[, 40, ]], [40, ], ,], [], ,, NIST], [,, NIST, score], [NIST, score, (], [score, (, Doddington], [(, Doddington, ,], [Doddington, ,, 2002], [,, 2002, )]]

>> Noun Phrases are: 
[[40], NIST score, Doddington]

>> Named Entities are: 
[('40', 'CARDINAL'), ('NIST', 'ORG'), ('2002', 'DATE')] 

------------------- Sentence 3 -------------------

[41]   


>> Tokens are: 
[[, 41, ],  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('41', 'NUM'), (']', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('41', 'ROOT'), (']', 'punct'), (' ', 'dative')]

>> Bigrams: 
[[[, 41], [41, ]], [],  ]]

>> Trigrams: 
[[[, 41, ]], [41, ],  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('41', 'CARDINAL')] 

------------------- Sentence 4 -------------------

All these criteria try to approximate   


>> Tokens are: 
[criteria, try, approximate,  ] 

>> PoS Tags are: 
[('criteria', 'NOUN'), ('try', 'VERB'), ('approximate', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('criteria', 'nsubj'), ('try', 'ROOT'), ('approximate', 'xcomp'), (' ', 'dobj')]

>> Bigrams: 
[[criteria, try], [try, approximate], [approximate,  ]]

>> Trigrams: 
[[criteria, try, approximate], [try, approximate,  ]]

>> Noun Phrases are: 
[All these criteria]

>> Named Entities are: 
[] 


================================ Paragraph 313 =================================

human assessment and often achieve an astonishing degree of correlation to human subjective  

------------------- Sentence 1 -------------------

human assessment and often achieve an astonishing degree of correlation to human subjective   


>> Tokens are: 
[human, assessment, achieve, astonishing, degree, correlation, human, subjective,  ] 

>> PoS Tags are: 
[('human', 'ADJ'), ('assessment', 'NOUN'), ('achieve', 'VERB'), ('astonishing', 'ADJ'), ('degree', 'NOUN'), ('correlation', 'NOUN'), ('human', 'ADJ'), ('subjective', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('human', 'amod'), ('assessment', 'ROOT'), ('achieve', 'conj'), ('astonishing', 'amod'), ('degree', 'dobj'), ('correlation', 'pobj'), ('human', 'amod'), ('subjective', 'amod'), (' ', 'pobj')]

>> Bigrams: 
[[human, assessment], [assessment, achieve], [achieve, astonishing], [astonishing, degree], [degree, correlation], [correlation, human], [human, subjective], [subjective,  ]]

>> Trigrams: 
[[human, assessment, achieve], [assessment, achieve, astonishing], [achieve, astonishing, degree], [astonishing, degree, correlation], [degree, correlation, human], [correlation, human, subjective], [human, subjective,  ]]

>> Noun Phrases are: 
[human assessment, an astonishing degree, correlation]

>> Named Entities are: 
[] 


================================ Paragraph 314 =================================

evaluation of fluency and adequacy (Papineni et al., 2001; Doddington, 2002) [42][43].   

------------------- Sentence 1 -------------------

evaluation of fluency and adequacy (Papineni et al., 2001; Doddington, 2002) 


>> Tokens are: 
[evaluation, fluency, adequacy, (, Papineni, et, al, ., ,, 2001, ;, Doddington, ,, 2002, )] 

>> PoS Tags are: 
[('evaluation', 'NOUN'), ('fluency', 'NOUN'), ('adequacy', 'NOUN'), ('(', 'PUNCT'), ('Papineni', 'PROPN'), ('et', 'NOUN'), ('al', 'PROPN'), ('.', 'PROPN'), (',', 'PUNCT'), ('2001', 'NUM'), (';', 'PUNCT'), ('Doddington', 'PROPN'), (',', 'PUNCT'), ('2002', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('evaluation', 'ROOT'), ('fluency', 'pobj'), ('adequacy', 'conj'), ('(', 'punct'), ('Papineni', 'compound'), ('et', 'compound'), ('al', 'appos'), ('.', 'punct'), (',', 'punct'), ('2001', 'appos'), (';', 'punct'), ('Doddington', 'appos'), (',', 'punct'), ('2002', 'appos'), (')', 'punct')]

>> Bigrams: 
[[evaluation, fluency], [fluency, adequacy], [adequacy, (], [(, Papineni], [Papineni, et], [et, al], [al, .], [., ,], [,, 2001], [2001, ;], [;, Doddington], [Doddington, ,], [,, 2002], [2002, )]]

>> Trigrams: 
[[evaluation, fluency, adequacy], [fluency, adequacy, (], [adequacy, (, Papineni], [(, Papineni, et], [Papineni, et, al], [et, al, .], [al, ., ,], [., ,, 2001], [,, 2001, ;], [2001, ;, Doddington], [;, Doddington, ,], [Doddington, ,, 2002], [,, 2002, )]]

>> Noun Phrases are: 
[evaluation, fluency, adequacy, Papineni et al, Doddington]

>> Named Entities are: 
[('2001', 'DATE'), ('Doddington', 'GPE'), ('2002', 'DATE')] 

------------------- Sentence 2 -------------------

[42][43]. 


>> Tokens are: 
[[, 42][43, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('42][43', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('42][43', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 42][43], [42][43, ]], [], .]]

>> Trigrams: 
[[[, 42][43, ]], [42][43, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 315 =================================

6.2 Text Categorization   

------------------- Sentence 1 -------------------

6.2 Text Categorization    


>> Tokens are: 
[6.2, Text, Categorization,   ] 

>> PoS Tags are: 
[('6.2', 'NUM'), ('Text', 'PROPN'), ('Categorization', 'NOUN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('6.2', 'nummod'), ('Text', 'compound'), ('Categorization', 'ROOT'), ('  ', 'appos')]

>> Bigrams: 
[[6.2, Text], [Text, Categorization], [Categorization,   ]]

>> Trigrams: 
[[6.2, Text, Categorization], [Text, Categorization,   ]]

>> Noun Phrases are: 
[6.2 Text Categorization]

>> Named Entities are: 
[] 


================================ Paragraph 316 =================================

Categorization systems inputs a large flow of data like official documents, military casualty  

------------------- Sentence 1 -------------------

Categorization systems inputs a large flow of data like official documents, military casualty   


>> Tokens are: 
[Categorization, systems, inputs, large, flow, data, like, official, documents, ,, military, casualty,  ] 

>> PoS Tags are: 
[('Categorization', 'NOUN'), ('systems', 'NOUN'), ('inputs', 'VERB'), ('large', 'ADJ'), ('flow', 'NOUN'), ('data', 'NOUN'), ('like', 'ADP'), ('official', 'ADJ'), ('documents', 'NOUN'), (',', 'PUNCT'), ('military', 'ADJ'), ('casualty', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Categorization', 'compound'), ('systems', 'nsubj'), ('inputs', 'ROOT'), ('large', 'amod'), ('flow', 'dobj'), ('data', 'pobj'), ('like', 'prep'), ('official', 'amod'), ('documents', 'pobj'), (',', 'punct'), ('military', 'amod'), ('casualty', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[Categorization, systems], [systems, inputs], [inputs, large], [large, flow], [flow, data], [data, like], [like, official], [official, documents], [documents, ,], [,, military], [military, casualty], [casualty,  ]]

>> Trigrams: 
[[Categorization, systems, inputs], [systems, inputs, large], [inputs, large, flow], [large, flow, data], [flow, data, like], [data, like, official], [like, official, documents], [official, documents, ,], [documents, ,, military], [,, military, casualty], [military, casualty,  ]]

>> Noun Phrases are: 
[Categorization systems, a large flow, data, official documents, military casualty]

>> Named Entities are: 
[] 


================================ Paragraph 317 =================================

reports, market data, newswires etc. and assign them to predefined categories or indices. For  

------------------- Sentence 1 -------------------

reports, market data, newswires etc. 


>> Tokens are: 
[reports, ,, market, data, ,, newswires, etc, .] 

>> PoS Tags are: 
[('reports', 'NOUN'), (',', 'PUNCT'), ('market', 'NOUN'), ('data', 'NOUN'), (',', 'PUNCT'), ('newswires', 'NOUN'), ('etc', 'X'), ('.', 'X')] 

>> Dependency Tags are: 
[('reports', 'ROOT'), (',', 'punct'), ('market', 'compound'), ('data', 'conj'), (',', 'punct'), ('newswires', 'conj'), ('etc', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[reports, ,], [,, market], [market, data], [data, ,], [,, newswires], [newswires, etc], [etc, .]]

>> Trigrams: 
[[reports, ,, market], [,, market, data], [market, data, ,], [data, ,, newswires], [,, newswires, etc], [newswires, etc, .]]

>> Noun Phrases are: 
[reports, market data, newswires]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

and assign them to predefined categories or indices. 


>> Tokens are: 
[assign, predefined, categories, indices, .] 

>> PoS Tags are: 
[('assign', 'VERB'), ('predefined', 'VERB'), ('categories', 'NOUN'), ('indices', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('assign', 'ROOT'), ('predefined', 'amod'), ('categories', 'pobj'), ('indices', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[assign, predefined], [predefined, categories], [categories, indices], [indices, .]]

>> Trigrams: 
[[assign, predefined, categories], [predefined, categories, indices], [categories, indices, .]]

>> Noun Phrases are: 
[them, predefined categories, indices]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

For   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'pobj')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 318 =================================

example, The Carnegie Group’s Construe system (Hayes PJ ,Westein ; 1991)[44] , inputs  

------------------- Sentence 1 -------------------

example, The Carnegie Group’s Construe system (Hayes PJ ,Westein ; 1991)[44] , inputs   


>> Tokens are: 
[example, ,, Carnegie, Group, Construe, system, (, Hayes, PJ, ,, Westein, ;, 1991)[44, ], ,, inputs,  ] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), ('Carnegie', 'PROPN'), ('Group', 'PROPN'), ('Construe', 'PROPN'), ('system', 'NOUN'), ('(', 'PUNCT'), ('Hayes', 'PROPN'), ('PJ', 'PROPN'), (',', 'PUNCT'), ('Westein', 'PROPN'), (';', 'PUNCT'), ('1991)[44', 'NOUN'), (']', 'PUNCT'), (',', 'PUNCT'), ('inputs', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('example', 'npadvmod'), (',', 'punct'), ('Carnegie', 'compound'), ('Group', 'poss'), ('Construe', 'compound'), ('system', 'nsubj'), ('(', 'punct'), ('Hayes', 'compound'), ('PJ', 'appos'), (',', 'punct'), ('Westein', 'appos'), (';', 'punct'), ('1991)[44', 'appos'), (']', 'punct'), (',', 'punct'), ('inputs', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[example, ,], [,, Carnegie], [Carnegie, Group], [Group, Construe], [Construe, system], [system, (], [(, Hayes], [Hayes, PJ], [PJ, ,], [,, Westein], [Westein, ;], [;, 1991)[44], [1991)[44, ]], [], ,], [,, inputs], [inputs,  ]]

>> Trigrams: 
[[example, ,, Carnegie], [,, Carnegie, Group], [Carnegie, Group, Construe], [Group, Construe, system], [Construe, system, (], [system, (, Hayes], [(, Hayes, PJ], [Hayes, PJ, ,], [PJ, ,, Westein], [,, Westein, ;], [Westein, ;, 1991)[44], [;, 1991)[44, ]], [1991)[44, ], ,], [], ,, inputs], [,, inputs,  ]]

>> Noun Phrases are: 
[The Carnegie Group’s Construe system, Hayes PJ, Westein, 1991)[44]

>> Named Entities are: 
[('The Carnegie Group’s', 'ORG'), ('Hayes PJ', 'PERSON'), ('Westein', 'PERSON'), ('1991)[44', 'CARDINAL')] 


================================ Paragraph 319 =================================

Reuters articles and saves much time by doing the work that is to be done by staff or human 

------------------- Sentence 1 -------------------

Reuters articles and saves much time by doing the work that is to be done by staff or human 


>> Tokens are: 
[Reuters, articles, saves, time, work, staff, human] 

>> PoS Tags are: 
[('Reuters', 'PROPN'), ('articles', 'NOUN'), ('saves', 'VERB'), ('time', 'NOUN'), ('work', 'NOUN'), ('staff', 'NOUN'), ('human', 'NOUN')] 

>> Dependency Tags are: 
[('Reuters', 'compound'), ('articles', 'ROOT'), ('saves', 'conj'), ('time', 'dobj'), ('work', 'dobj'), ('staff', 'pobj'), ('human', 'conj')]

>> Bigrams: 
[[Reuters, articles], [articles, saves], [saves, time], [time, work], [work, staff], [staff, human]]

>> Trigrams: 
[[Reuters, articles, saves], [articles, saves, time], [saves, time, work], [time, work, staff], [work, staff, human]]

>> Noun Phrases are: 
[Reuters articles, much time, the work, staff, human]

>> Named Entities are: 
[('Reuters', 'ORG')] 


================================ Paragraph 320 =================================

indexers. Some companies have been using categorization systems to categorize trouble  

------------------- Sentence 1 -------------------

indexers. 


>> Tokens are: 
[indexers, .] 

>> PoS Tags are: 
[('indexers', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('indexers', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[indexers, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[indexers]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Some companies have been using categorization systems to categorize trouble   


>> Tokens are: 
[companies, categorization, systems, categorize, trouble,  ] 

>> PoS Tags are: 
[('companies', 'NOUN'), ('categorization', 'NOUN'), ('systems', 'NOUN'), ('categorize', 'VERB'), ('trouble', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('companies', 'nsubj'), ('categorization', 'compound'), ('systems', 'dobj'), ('categorize', 'xcomp'), ('trouble', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[companies, categorization], [categorization, systems], [systems, categorize], [categorize, trouble], [trouble,  ]]

>> Trigrams: 
[[companies, categorization, systems], [categorization, systems, categorize], [systems, categorize, trouble], [categorize, trouble,  ]]

>> Noun Phrases are: 
[Some companies, categorization systems, trouble]

>> Named Entities are: 
[] 


================================ Paragraph 321 =================================

tickets or complaint requests and routing to the appropriate desks. Another application of text  

------------------- Sentence 1 -------------------

tickets or complaint requests and routing to the appropriate desks. 


>> Tokens are: 
[tickets, complaint, requests, routing, appropriate, desks, .] 

>> PoS Tags are: 
[('tickets', 'NOUN'), ('complaint', 'NOUN'), ('requests', 'NOUN'), ('routing', 'VERB'), ('appropriate', 'ADJ'), ('desks', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('tickets', 'ROOT'), ('complaint', 'compound'), ('requests', 'conj'), ('routing', 'conj'), ('appropriate', 'amod'), ('desks', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[tickets, complaint], [complaint, requests], [requests, routing], [routing, appropriate], [appropriate, desks], [desks, .]]

>> Trigrams: 
[[tickets, complaint, requests], [complaint, requests, routing], [requests, routing, appropriate], [routing, appropriate, desks], [appropriate, desks, .]]

>> Noun Phrases are: 
[tickets, complaint requests, the appropriate desks]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Another application of text   


>> Tokens are: 
[application, text,  ] 

>> PoS Tags are: 
[('application', 'NOUN'), ('text', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('application', 'ROOT'), ('text', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[application, text], [text,  ]]

>> Trigrams: 
[[application, text,  ]]

>> Noun Phrases are: 
[Another application, text]

>> Named Entities are: 
[] 


================================ Paragraph 322 =================================

categorization is email spam filters. Spam filters is becoming important as the first line of  

------------------- Sentence 1 -------------------

categorization is email spam filters. 


>> Tokens are: 
[categorization, email, spam, filters, .] 

>> PoS Tags are: 
[('categorization', 'NOUN'), ('email', 'NOUN'), ('spam', 'NOUN'), ('filters', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('categorization', 'nsubj'), ('email', 'compound'), ('spam', 'compound'), ('filters', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[categorization, email], [email, spam], [spam, filters], [filters, .]]

>> Trigrams: 
[[categorization, email, spam], [email, spam, filters], [spam, filters, .]]

>> Noun Phrases are: 
[categorization, email spam filters]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Spam filters is becoming important as the first line of   


>> Tokens are: 
[Spam, filters, important, line,  ] 

>> PoS Tags are: 
[('Spam', 'NOUN'), ('filters', 'NOUN'), ('important', 'ADJ'), ('line', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Spam', 'compound'), ('filters', 'nsubj'), ('important', 'acomp'), ('line', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Spam, filters], [filters, important], [important, line], [line,  ]]

>> Trigrams: 
[[Spam, filters, important], [filters, important, line], [important, line,  ]]

>> Noun Phrases are: 
[Spam filters, the first line]

>> Named Entities are: 
[('first', 'ORDINAL')] 


================================ Paragraph 323 =================================

defence against the unwanted emails. A false negative and false positive issues of spam filters  

------------------- Sentence 1 -------------------

defence against the unwanted emails. 


>> Tokens are: 
[defence, unwanted, emails, .] 

>> PoS Tags are: 
[('defence', 'NOUN'), ('unwanted', 'ADJ'), ('emails', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('defence', 'ROOT'), ('unwanted', 'amod'), ('emails', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[defence, unwanted], [unwanted, emails], [emails, .]]

>> Trigrams: 
[[defence, unwanted, emails], [unwanted, emails, .]]

>> Noun Phrases are: 
[defence, the unwanted emails]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

A false negative and false positive issues of spam filters   


>> Tokens are: 
[false, negative, false, positive, issues, spam, filters,  ] 

>> PoS Tags are: 
[('false', 'ADJ'), ('negative', 'ADJ'), ('false', 'ADJ'), ('positive', 'ADJ'), ('issues', 'NOUN'), ('spam', 'NOUN'), ('filters', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('false', 'amod'), ('negative', 'amod'), ('false', 'conj'), ('positive', 'amod'), ('issues', 'ROOT'), ('spam', 'compound'), ('filters', 'pobj'), (' ', 'appos')]

>> Bigrams: 
[[false, negative], [negative, false], [false, positive], [positive, issues], [issues, spam], [spam, filters], [filters,  ]]

>> Trigrams: 
[[false, negative, false], [negative, false, positive], [false, positive, issues], [positive, issues, spam], [issues, spam, filters], [spam, filters,  ]]

>> Noun Phrases are: 
[A false negative and false positive issues, spam filters]

>> Named Entities are: 
[] 


================================ Paragraph 324 =================================

are at the heart of NLP technology, its brought down to the challenge of extracting meaning  

------------------- Sentence 1 -------------------

are at the heart of NLP technology, its brought down to the challenge of extracting meaning   


>> Tokens are: 
[heart, NLP, technology, ,, brought, challenge, extracting, meaning,  ] 

>> PoS Tags are: 
[('heart', 'NOUN'), ('NLP', 'PROPN'), ('technology', 'NOUN'), (',', 'PUNCT'), ('brought', 'VERB'), ('challenge', 'NOUN'), ('extracting', 'VERB'), ('meaning', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('heart', 'pobj'), ('NLP', 'compound'), ('technology', 'pobj'), (',', 'punct'), ('brought', 'dep'), ('challenge', 'pobj'), ('extracting', 'pcomp'), ('meaning', 'xcomp'), (' ', 'punct')]

>> Bigrams: 
[[heart, NLP], [NLP, technology], [technology, ,], [,, brought], [brought, challenge], [challenge, extracting], [extracting, meaning], [meaning,  ]]

>> Trigrams: 
[[heart, NLP, technology], [NLP, technology, ,], [technology, ,, brought], [,, brought, challenge], [brought, challenge, extracting], [challenge, extracting, meaning], [extracting, meaning,  ]]

>> Noun Phrases are: 
[the heart, NLP technology, the challenge]

>> Named Entities are: 
[('NLP', 'ORG')] 


================================ Paragraph 325 =================================

from strings of text. A filtering solution that is applied to an email system uses a set of  

------------------- Sentence 1 -------------------

from strings of text. 


>> Tokens are: 
[strings, text, .] 

>> PoS Tags are: 
[('strings', 'NOUN'), ('text', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('strings', 'pobj'), ('text', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[strings, text], [text, .]]

>> Trigrams: 
[[strings, text, .]]

>> Noun Phrases are: 
[strings, text]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

A filtering solution that is applied to an email system uses a set of   


>> Tokens are: 
[filtering, solution, applied, email, system, uses, set,  ] 

>> PoS Tags are: 
[('filtering', 'VERB'), ('solution', 'NOUN'), ('applied', 'VERB'), ('email', 'NOUN'), ('system', 'NOUN'), ('uses', 'VERB'), ('set', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('filtering', 'amod'), ('solution', 'nsubj'), ('applied', 'relcl'), ('email', 'compound'), ('system', 'pobj'), ('uses', 'ROOT'), ('set', 'dobj'), (' ', 'pobj')]

>> Bigrams: 
[[filtering, solution], [solution, applied], [applied, email], [email, system], [system, uses], [uses, set], [set,  ]]

>> Trigrams: 
[[filtering, solution, applied], [solution, applied, email], [applied, email, system], [email, system, uses], [system, uses, set], [uses, set,  ]]

>> Noun Phrases are: 
[A filtering solution, an email system, a set]

>> Named Entities are: 
[] 


================================ Paragraph 326 =================================

protocols to determine which of the incoming messages are spam and which are not. There  

------------------- Sentence 1 -------------------

protocols to determine which of the incoming messages are spam and which are not. 


>> Tokens are: 
[protocols, determine, incoming, messages, spam, .] 

>> PoS Tags are: 
[('protocols', 'NOUN'), ('determine', 'VERB'), ('incoming', 'ADJ'), ('messages', 'NOUN'), ('spam', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('protocols', 'nsubj'), ('determine', 'relcl'), ('incoming', 'amod'), ('messages', 'pobj'), ('spam', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[protocols, determine], [determine, incoming], [incoming, messages], [messages, spam], [spam, .]]

>> Trigrams: 
[[protocols, determine, incoming], [determine, incoming, messages], [incoming, messages, spam], [messages, spam, .]]

>> Noun Phrases are: 
[protocols, the incoming messages, spam]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

There   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'punct')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 327 =================================

are several types of spam filters available. Content filters: Review the content within the  

------------------- Sentence 1 -------------------

are several types of spam filters available. 


>> Tokens are: 
[types, spam, filters, available, .] 

>> PoS Tags are: 
[('types', 'NOUN'), ('spam', 'NOUN'), ('filters', 'NOUN'), ('available', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('types', 'attr'), ('spam', 'compound'), ('filters', 'pobj'), ('available', 'amod'), ('.', 'punct')]

>> Bigrams: 
[[types, spam], [spam, filters], [filters, available], [available, .]]

>> Trigrams: 
[[types, spam, filters], [spam, filters, available], [filters, available, .]]

>> Noun Phrases are: 
[several types, spam filters]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Content filters 


>> Tokens are: 
[Content, filters] 

>> PoS Tags are: 
[('Content', 'NOUN'), ('filters', 'NOUN')] 

>> Dependency Tags are: 
[('Content', 'compound'), ('filters', 'ROOT')]

>> Bigrams: 
[[Content, filters]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Content filters]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

: Review the content within the   


>> Tokens are: 
[:, Review, content,  ] 

>> PoS Tags are: 
[(':', 'PUNCT'), ('Review', 'VERB'), ('content', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(':', 'punct'), ('Review', 'ROOT'), ('content', 'dobj'), (' ', 'pobj')]

>> Bigrams: 
[[:, Review], [Review, content], [content,  ]]

>> Trigrams: 
[[:, Review, content], [Review, content,  ]]

>> Noun Phrases are: 
[the content]

>> Named Entities are: 
[] 


================================ Paragraph 328 =================================

message to determine whether it is a spam or not. Header filters: Review the email header  

------------------- Sentence 1 -------------------

message to determine whether it is a spam or not. 


>> Tokens are: 
[message, determine, spam, .] 

>> PoS Tags are: 
[('message', 'NOUN'), ('determine', 'VERB'), ('spam', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('message', 'ROOT'), ('determine', 'relcl'), ('spam', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[message, determine], [determine, spam], [spam, .]]

>> Trigrams: 
[[message, determine, spam], [determine, spam, .]]

>> Noun Phrases are: 
[message, it, a spam]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Header filters: Review the email header   


>> Tokens are: 
[Header, filters, :, Review, email, header,  ] 

>> PoS Tags are: 
[('Header', 'NOUN'), ('filters', 'VERB'), (':', 'PUNCT'), ('Review', 'VERB'), ('email', 'NOUN'), ('header', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Header', 'compound'), ('filters', 'nsubj'), (':', 'punct'), ('Review', 'ROOT'), ('email', 'compound'), ('header', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[Header, filters], [filters, :], [:, Review], [Review, email], [email, header], [header,  ]]

>> Trigrams: 
[[Header, filters, :], [filters, :, Review], [:, Review, email], [Review, email, header], [email, header,  ]]

>> Noun Phrases are: 
[the email header]

>> Named Entities are: 
[] 


================================ Paragraph 329 =================================

looking for fake information. General Blacklist filters: Stopes all emails from blacklisted  

------------------- Sentence 1 -------------------

looking for fake information. 


>> Tokens are: 
[looking, fake, information, .] 

>> PoS Tags are: 
[('looking', 'VERB'), ('fake', 'ADJ'), ('information', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('looking', 'ROOT'), ('fake', 'amod'), ('information', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[looking, fake], [fake, information], [information, .]]

>> Trigrams: 
[[looking, fake, information], [fake, information, .]]

>> Noun Phrases are: 
[fake information]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

General Blacklist filters: Stopes all emails from blacklisted   


>> Tokens are: 
[General, Blacklist, filters, :, Stopes, emails, blacklisted,  ] 

>> PoS Tags are: 
[('General', 'PROPN'), ('Blacklist', 'PROPN'), ('filters', 'VERB'), (':', 'PUNCT'), ('Stopes', 'NOUN'), ('emails', 'NOUN'), ('blacklisted', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('General', 'compound'), ('Blacklist', 'nsubj'), ('filters', 'ROOT'), (':', 'punct'), ('Stopes', 'appos'), ('emails', 'appos'), ('blacklisted', 'amod'), (' ', 'pobj')]

>> Bigrams: 
[[General, Blacklist], [Blacklist, filters], [filters, :], [:, Stopes], [Stopes, emails], [emails, blacklisted], [blacklisted,  ]]

>> Trigrams: 
[[General, Blacklist, filters], [Blacklist, filters, :], [filters, :, Stopes], [:, Stopes, emails], [Stopes, emails, blacklisted], [emails, blacklisted,  ]]

>> Noun Phrases are: 
[General Blacklist, Stopes, all emails]

>> Named Entities are: 
[('Blacklist', 'PERSON')] 


================================ Paragraph 330 =================================

recipients. Rules Based Filters: It uses user-defined criteria. Such as stopping mails from  

------------------- Sentence 1 -------------------

recipients. 


>> Tokens are: 
[recipients, .] 

>> PoS Tags are: 
[('recipients', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('recipients', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[recipients, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[recipients]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Rules Based Filters: It uses user-defined criteria. 


>> Tokens are: 
[Rules, Based, Filters, :, uses, user, -, defined, criteria, .] 

>> PoS Tags are: 
[('Rules', 'NOUN'), ('Based', 'PROPN'), ('Filters', 'NOUN'), (':', 'PUNCT'), ('uses', 'VERB'), ('user', 'NOUN'), ('-', 'PUNCT'), ('defined', 'VERB'), ('criteria', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Rules', 'compound'), ('Based', 'compound'), ('Filters', 'dep'), (':', 'punct'), ('uses', 'ROOT'), ('user', 'npadvmod'), ('-', 'punct'), ('defined', 'amod'), ('criteria', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Rules, Based], [Based, Filters], [Filters, :], [:, uses], [uses, user], [user, -], [-, defined], [defined, criteria], [criteria, .]]

>> Trigrams: 
[[Rules, Based, Filters], [Based, Filters, :], [Filters, :, uses], [:, uses, user], [uses, user, -], [user, -, defined], [-, defined, criteria], [defined, criteria, .]]

>> Noun Phrases are: 
[It, user-defined criteria]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Such as stopping mails from   


>> Tokens are: 
[stopping, mails,  ] 

>> PoS Tags are: 
[('stopping', 'VERB'), ('mails', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('stopping', 'pcomp'), ('mails', 'dobj'), (' ', 'pobj')]

>> Bigrams: 
[[stopping, mails], [mails,  ]]

>> Trigrams: 
[[stopping, mails,  ]]

>> Noun Phrases are: 
[mails]

>> Named Entities are: 
[] 


================================ Paragraph 331 =================================

specific person or stopping mail including a specific word. Permission Filters: Require  

------------------- Sentence 1 -------------------

specific person or stopping mail including a specific word. 


>> Tokens are: 
[specific, person, stopping, mail, including, specific, word, .] 

>> PoS Tags are: 
[('specific', 'ADJ'), ('person', 'NOUN'), ('stopping', 'VERB'), ('mail', 'NOUN'), ('including', 'VERB'), ('specific', 'ADJ'), ('word', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('specific', 'amod'), ('person', 'ROOT'), ('stopping', 'conj'), ('mail', 'dobj'), ('including', 'prep'), ('specific', 'amod'), ('word', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[specific, person], [person, stopping], [stopping, mail], [mail, including], [including, specific], [specific, word], [word, .]]

>> Trigrams: 
[[specific, person, stopping], [person, stopping, mail], [stopping, mail, including], [mail, including, specific], [including, specific, word], [specific, word, .]]

>> Noun Phrases are: 
[specific person, mail, a specific word]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Permission Filters: Require   


>> Tokens are: 
[Permission, Filters, :, Require,  ] 

>> PoS Tags are: 
[('Permission', 'NOUN'), ('Filters', 'NOUN'), (':', 'PUNCT'), ('Require', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Permission', 'compound'), ('Filters', 'dep'), (':', 'punct'), ('Require', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[Permission, Filters], [Filters, :], [:, Require], [Require,  ]]

>> Trigrams: 
[[Permission, Filters, :], [Filters, :, Require], [:, Require,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('Require', 'PERSON')] 


================================ Paragraph 332 =================================

anyone sending a message to be pre-approved by the recipient. Challenge Response Filters:  

------------------- Sentence 1 -------------------

anyone sending a message to be pre-approved by the recipient. 


>> Tokens are: 
[sending, message, pre, -, approved, recipient, .] 

>> PoS Tags are: 
[('sending', 'VERB'), ('message', 'NOUN'), ('pre', 'VERB'), ('-', 'VERB'), ('approved', 'VERB'), ('recipient', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('sending', 'acl'), ('message', 'dobj'), ('pre', 'acomp'), ('-', 'acomp'), ('approved', 'acomp'), ('recipient', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[sending, message], [message, pre], [pre, -], [-, approved], [approved, recipient], [recipient, .]]

>> Trigrams: 
[[sending, message, pre], [message, pre, -], [pre, -, approved], [-, approved, recipient], [approved, recipient, .]]

>> Noun Phrases are: 
[anyone, a message, the recipient]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Challenge Response Filters:   


>> Tokens are: 
[Challenge, Response, Filters, :,  ] 

>> PoS Tags are: 
[('Challenge', 'PROPN'), ('Response', 'PROPN'), ('Filters', 'PROPN'), (':', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Challenge', 'compound'), ('Response', 'compound'), ('Filters', 'ROOT'), (':', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Challenge, Response], [Response, Filters], [Filters, :], [:,  ]]

>> Trigrams: 
[[Challenge, Response, Filters], [Response, Filters, :], [Filters, :,  ]]

>> Noun Phrases are: 
[Challenge Response Filters]

>> Named Entities are: 
[] 


================================ Paragraph 333 =================================

Requires anyone sending a message to enter a code in order to gain permission to send email.  

------------------- Sentence 1 -------------------

Requires anyone sending a message to enter a code in order to gain permission to send email. 


>> Tokens are: 
[Requires, sending, message, enter, code, order, gain, permission, send, email, .] 

>> PoS Tags are: 
[('Requires', 'VERB'), ('sending', 'VERB'), ('message', 'NOUN'), ('enter', 'VERB'), ('code', 'NOUN'), ('order', 'NOUN'), ('gain', 'VERB'), ('permission', 'NOUN'), ('send', 'VERB'), ('email', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Requires', 'ROOT'), ('sending', 'xcomp'), ('message', 'dobj'), ('enter', 'acl'), ('code', 'dobj'), ('order', 'pobj'), ('gain', 'acl'), ('permission', 'dobj'), ('send', 'acl'), ('email', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Requires, sending], [sending, message], [message, enter], [enter, code], [code, order], [order, gain], [gain, permission], [permission, send], [send, email], [email, .]]

>> Trigrams: 
[[Requires, sending, message], [sending, message, enter], [message, enter, code], [enter, code, order], [code, order, gain], [order, gain, permission], [gain, permission, send], [permission, send, email], [send, email, .]]

>> Noun Phrases are: 
[anyone, a message, a code, order, permission, email]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 334 =================================

6.3 Spam Filtering   

------------------- Sentence 1 -------------------

6.3 Spam Filtering    


>> Tokens are: 
[6.3, Spam, Filtering,   ] 

>> PoS Tags are: 
[('6.3', 'NUM'), ('Spam', 'PROPN'), ('Filtering', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('6.3', 'nummod'), ('Spam', 'compound'), ('Filtering', 'ROOT'), ('  ', 'appos')]

>> Bigrams: 
[[6.3, Spam], [Spam, Filtering], [Filtering,   ]]

>> Trigrams: 
[[6.3, Spam, Filtering], [Spam, Filtering,   ]]

>> Noun Phrases are: 
[6.3 Spam Filtering]

>> Named Entities are: 
[('6.3', 'CARDINAL')] 


================================ Paragraph 335 =================================

It works using text categorization and in recent times, various machine learning techniques  

------------------- Sentence 1 -------------------

It works using text categorization and in recent times, various machine learning techniques   


>> Tokens are: 
[works, text, categorization, recent, times, ,, machine, learning, techniques,  ] 

>> PoS Tags are: 
[('works', 'VERB'), ('text', 'NOUN'), ('categorization', 'NOUN'), ('recent', 'ADJ'), ('times', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('learning', 'VERB'), ('techniques', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('works', 'ROOT'), ('text', 'compound'), ('categorization', 'dobj'), ('recent', 'amod'), ('times', 'pobj'), (',', 'punct'), ('machine', 'compound'), ('learning', 'compound'), ('techniques', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[works, text], [text, categorization], [categorization, recent], [recent, times], [times, ,], [,, machine], [machine, learning], [learning, techniques], [techniques,  ]]

>> Trigrams: 
[[works, text, categorization], [text, categorization, recent], [categorization, recent, times], [recent, times, ,], [times, ,, machine], [,, machine, learning], [machine, learning, techniques], [learning, techniques,  ]]

>> Noun Phrases are: 
[It, text categorization, recent times, various machine learning techniques]

>> Named Entities are: 
[] 


================================ Paragraph 336 =================================

have been applied to text categorization or Anti-Spam Filtering  like Rule Learning (Cohen  

------------------- Sentence 1 -------------------

have been applied to text categorization or Anti-Spam Filtering  like Rule Learning (Cohen   


>> Tokens are: 
[applied, text, categorization, Anti, -, Spam, Filtering,  , like, Rule, Learning, (, Cohen,  ] 

>> PoS Tags are: 
[('applied', 'VERB'), ('text', 'NOUN'), ('categorization', 'NOUN'), ('Anti', 'PROPN'), ('-', 'PROPN'), ('Spam', 'ADJ'), ('Filtering', 'PROPN'), (' ', 'SPACE'), ('like', 'ADP'), ('Rule', 'PROPN'), ('Learning', 'PROPN'), ('(', 'PUNCT'), ('Cohen', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('applied', 'ROOT'), ('text', 'compound'), ('categorization', 'pobj'), ('Anti', 'compound'), ('-', 'compound'), ('Spam', 'compound'), ('Filtering', 'conj'), (' ', 'appos'), ('like', 'prep'), ('Rule', 'compound'), ('Learning', 'pobj'), ('(', 'punct'), ('Cohen', 'appos'), (' ', 'nummod')]

>> Bigrams: 
[[applied, text], [text, categorization], [categorization, Anti], [Anti, -], [-, Spam], [Spam, Filtering], [Filtering,  ], [ , like], [like, Rule], [Rule, Learning], [Learning, (], [(, Cohen], [Cohen,  ]]

>> Trigrams: 
[[applied, text, categorization], [text, categorization, Anti], [categorization, Anti, -], [Anti, -, Spam], [-, Spam, Filtering], [Spam, Filtering,  ], [Filtering,  , like], [ , like, Rule], [like, Rule, Learning], [Rule, Learning, (], [Learning, (, Cohen], [(, Cohen,  ]]

>> Noun Phrases are: 
[text categorization, Anti-Spam Filtering, Rule Learning, (Cohen]

>> Named Entities are: 
[('Anti-Spam Filtering', 'ORG'), ('Cohen', 'PERSON')] 


================================ Paragraph 337 =================================

1996)[45], Naïve Bayes (Sahami et al., 1998 ;Androutsopoulos et al.,2000b ;Rennie  

------------------- Sentence 1 -------------------

1996)[45], Naïve Bayes (Sahami et al., 1998 ;Androutsopoulos et al.,2000b ; 


>> Tokens are: 
[1996)[45, ], ,, Naïve, Bayes, (, Sahami, et, al, ., ,, 1998, ;, Androutsopoulos, et, al, ., ,2000b, ;] 

>> PoS Tags are: 
[('1996)[45', 'PROPN'), (']', 'PUNCT'), (',', 'PUNCT'), ('Naïve', 'PROPN'), ('Bayes', 'PROPN'), ('(', 'PUNCT'), ('Sahami', 'PROPN'), ('et', 'NOUN'), ('al', 'PROPN'), ('.', 'PROPN'), (',', 'PUNCT'), ('1998', 'NUM'), (';', 'PUNCT'), ('Androutsopoulos', 'PROPN'), ('et', 'PROPN'), ('al', 'PROPN'), ('.', 'PUNCT'), (',2000b', 'PROPN'), (';', 'PUNCT')] 

>> Dependency Tags are: 
[('1996)[45', 'ROOT'), (']', 'punct'), (',', 'punct'), ('Naïve', 'compound'), ('Bayes', 'appos'), ('(', 'punct'), ('Sahami', 'compound'), ('et', 'compound'), ('al', 'appos'), ('.', 'punct'), (',', 'punct'), ('1998', 'appos'), (';', 'punct'), ('Androutsopoulos', 'compound'), ('et', 'compound'), ('al', 'conj'), ('.', 'punct'), (',2000b', 'punct'), (';', 'punct')]

>> Bigrams: 
[[1996)[45, ]], [], ,], [,, Naïve], [Naïve, Bayes], [Bayes, (], [(, Sahami], [Sahami, et], [et, al], [al, .], [., ,], [,, 1998], [1998, ;], [;, Androutsopoulos], [Androutsopoulos, et], [et, al], [al, .], [., ,2000b], [,2000b, ;]]

>> Trigrams: 
[[1996)[45, ], ,], [], ,, Naïve], [,, Naïve, Bayes], [Naïve, Bayes, (], [Bayes, (, Sahami], [(, Sahami, et], [Sahami, et, al], [et, al, .], [al, ., ,], [., ,, 1998], [,, 1998, ;], [1998, ;, Androutsopoulos], [;, Androutsopoulos, et], [Androutsopoulos, et, al], [et, al, .], [al, ., ,2000b], [., ,2000b, ;]]

>> Noun Phrases are: 
[1996)[45, Naïve Bayes, Sahami et al, Androutsopoulos et al]

>> Named Entities are: 
[('1996)[45', 'CARDINAL'), ('1998', 'DATE'), ('Androutsopoulos', 'PERSON')] 

------------------- Sentence 2 -------------------

Rennie   


>> Tokens are: 
[Rennie,  ] 

>> PoS Tags are: 
[('Rennie', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Rennie', 'compound'), (' ', 'ROOT')]

>> Bigrams: 
[[Rennie,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('Rennie', 'PERSON')] 


================================ Paragraph 338 =================================

.,2000)[46][47][48],Memory based Learning (Androutsopoulos et al.,2000b)[47], Support  

------------------- Sentence 1 -------------------

.,2000)[46][47][48],Memory based Learning (Androutsopoulos et al. 


>> Tokens are: 
[.,2000)[46][47][48],Memory, based, Learning, (, Androutsopoulos, et, al, .] 

>> PoS Tags are: 
[('.,2000)[46][47][48],Memory', 'PUNCT'), ('based', 'VERB'), ('Learning', 'PROPN'), ('(', 'PUNCT'), ('Androutsopoulos', 'PROPN'), ('et', 'PROPN'), ('al', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('.,2000)[46][47][48],Memory', 'punct'), ('based', 'ROOT'), ('Learning', 'dobj'), ('(', 'punct'), ('Androutsopoulos', 'compound'), ('et', 'compound'), ('al', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[.,2000)[46][47][48],Memory, based], [based, Learning], [Learning, (], [(, Androutsopoulos], [Androutsopoulos, et], [et, al], [al, .]]

>> Trigrams: 
[[.,2000)[46][47][48],Memory, based, Learning], [based, Learning, (], [Learning, (, Androutsopoulos], [(, Androutsopoulos, et], [Androutsopoulos, et, al], [et, al, .]]

>> Noun Phrases are: 
[Learning, Androutsopoulos et al]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

,2000b)[47], Support   


>> Tokens are: 
[,2000b)[47, ], ,, Support,  ] 

>> PoS Tags are: 
[(',2000b)[47', 'PUNCT'), (']', 'PUNCT'), (',', 'PUNCT'), ('Support', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(',2000b)[47', 'punct'), (']', 'dep'), (',', 'punct'), ('Support', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[,2000b)[47, ]], [], ,], [,, Support], [Support,  ]]

>> Trigrams: 
[[,2000b)[47, ], ,], [], ,, Support], [,, Support,  ]]

>> Noun Phrases are: 
[,2000b)[47], Support]

>> Named Entities are: 
[] 


================================ Paragraph 339 =================================

vector machines (Druker et al., 1999)[49], Decision Trees (Carreras and Marquez , 2001)[50]  

------------------- Sentence 1 -------------------

vector machines (Druker et al., 1999)[49], Decision Trees (Carreras and Marquez , 2001)[50]   


>> Tokens are: 
[vector, machines, (, Druker, et, al, ., ,, 1999)[49, ], ,, Decision, Trees, (, Carreras, Marquez, ,, 2001)[50, ],  ] 

>> PoS Tags are: 
[('vector', 'NOUN'), ('machines', 'NOUN'), ('(', 'PUNCT'), ('Druker', 'PROPN'), ('et', 'PROPN'), ('al', 'PROPN'), ('.', 'PUNCT'), (',', 'PUNCT'), ('1999)[49', 'NOUN'), (']', 'PUNCT'), (',', 'PUNCT'), ('Decision', 'NOUN'), ('Trees', 'PROPN'), ('(', 'PUNCT'), ('Carreras', 'PROPN'), ('Marquez', 'PROPN'), (',', 'PUNCT'), ('2001)[50', 'PROPN'), (']', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('vector', 'compound'), ('machines', 'ROOT'), ('(', 'punct'), ('Druker', 'appos'), ('et', 'compound'), ('al', 'appos'), ('.', 'punct'), (',', 'punct'), ('1999)[49', 'appos'), (']', 'punct'), (',', 'punct'), ('Decision', 'compound'), ('Trees', 'appos'), ('(', 'punct'), ('Carreras', 'appos'), ('Marquez', 'conj'), (',', 'punct'), ('2001)[50', 'appos'), (']', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[vector, machines], [machines, (], [(, Druker], [Druker, et], [et, al], [al, .], [., ,], [,, 1999)[49], [1999)[49, ]], [], ,], [,, Decision], [Decision, Trees], [Trees, (], [(, Carreras], [Carreras, Marquez], [Marquez, ,], [,, 2001)[50], [2001)[50, ]], [],  ]]

>> Trigrams: 
[[vector, machines, (], [machines, (, Druker], [(, Druker, et], [Druker, et, al], [et, al, .], [al, ., ,], [., ,, 1999)[49], [,, 1999)[49, ]], [1999)[49, ], ,], [], ,, Decision], [,, Decision, Trees], [Decision, Trees, (], [Trees, (, Carreras], [(, Carreras, Marquez], [Carreras, Marquez, ,], [Marquez, ,, 2001)[50], [,, 2001)[50, ]], [2001)[50, ],  ]]

>> Noun Phrases are: 
[vector machines, Druker, et al, 1999)[49, Decision Trees, Carreras, Marquez, 2001)[50]

>> Named Entities are: 
[('Marquez', 'ORG'), ('2001)[50', 'CARDINAL')] 


================================ Paragraph 340 =================================

Maximum Entropy Model (Berger et al. 1996)[51]. Sometimes combining different learners  

------------------- Sentence 1 -------------------

Maximum Entropy Model (Berger et al. 


>> Tokens are: 
[Maximum, Entropy, Model, (, Berger, et, al, .] 

>> PoS Tags are: 
[('Maximum', 'PROPN'), ('Entropy', 'PROPN'), ('Model', 'PROPN'), ('(', 'PUNCT'), ('Berger', 'PROPN'), ('et', 'PROPN'), ('al', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Maximum', 'compound'), ('Entropy', 'compound'), ('Model', 'ROOT'), ('(', 'punct'), ('Berger', 'compound'), ('et', 'compound'), ('al', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Maximum, Entropy], [Entropy, Model], [Model, (], [(, Berger], [Berger, et], [et, al], [al, .]]

>> Trigrams: 
[[Maximum, Entropy, Model], [Entropy, Model, (], [Model, (, Berger], [(, Berger, et], [Berger, et, al], [et, al, .]]

>> Noun Phrases are: 
[Maximum Entropy Model, Berger et al]

>> Named Entities are: 
[('Berger', 'PERSON')] 

------------------- Sentence 2 -------------------

1996)[51]. 


>> Tokens are: 
[1996)[51, ], .] 

>> PoS Tags are: 
[('1996)[51', 'X'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1996)[51', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[1996)[51, ]], [], .]]

>> Trigrams: 
[[1996)[51, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Sometimes combining different learners   


>> Tokens are: 
[combining, different, learners,  ] 

>> PoS Tags are: 
[('combining', 'VERB'), ('different', 'ADJ'), ('learners', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('combining', 'ROOT'), ('different', 'amod'), ('learners', 'dobj'), (' ', 'nummod')]

>> Bigrams: 
[[combining, different], [different, learners], [learners,  ]]

>> Trigrams: 
[[combining, different, learners], [different, learners,  ]]

>> Noun Phrases are: 
[different learners]

>> Named Entities are: 
[] 


================================ Paragraph 341 =================================

(Sakkis et al., 2001) [52]. Using these approaches is better as classifier is learned from  

------------------- Sentence 1 -------------------

(Sakkis et al., 2001) 


>> Tokens are: 
[(, Sakkis, et, al, ., ,, 2001, )] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('Sakkis', 'PROPN'), ('et', 'NOUN'), ('al', 'PROPN'), ('.', 'PROPN'), (',', 'PUNCT'), ('2001', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('Sakkis', 'compound'), ('et', 'compound'), ('al', 'ROOT'), ('.', 'punct'), (',', 'punct'), ('2001', 'appos'), (')', 'punct')]

>> Bigrams: 
[[(, Sakkis], [Sakkis, et], [et, al], [al, .], [., ,], [,, 2001], [2001, )]]

>> Trigrams: 
[[(, Sakkis, et], [Sakkis, et, al], [et, al, .], [al, ., ,], [., ,, 2001], [,, 2001, )]]

>> Noun Phrases are: 
[(Sakkis et al]

>> Named Entities are: 
[('2001', 'DATE')] 

------------------- Sentence 2 -------------------

[52]. 


>> Tokens are: 
[[, 52, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('52', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('52', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 52], [52, ]], [], .]]

>> Trigrams: 
[[[, 52, ]], [52, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('52', 'CARDINAL')] 

------------------- Sentence 3 -------------------

Using these approaches is better as classifier is learned from   


>> Tokens are: 
[approaches, better, classifier, learned,  ] 

>> PoS Tags are: 
[('approaches', 'NOUN'), ('better', 'ADJ'), ('classifier', 'NOUN'), ('learned', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('approaches', 'dobj'), ('better', 'acomp'), ('classifier', 'nsubjpass'), ('learned', 'advcl'), (' ', 'pobj')]

>> Bigrams: 
[[approaches, better], [better, classifier], [classifier, learned], [learned,  ]]

>> Trigrams: 
[[approaches, better, classifier], [better, classifier, learned], [classifier, learned,  ]]

>> Noun Phrases are: 
[these approaches, classifier]

>> Named Entities are: 
[] 


================================ Paragraph 342 =================================

training data rather than making by hand. The naïve bayes is preferred because of its  

------------------- Sentence 1 -------------------

training data rather than making by hand. 


>> Tokens are: 
[training, data, making, hand, .] 

>> PoS Tags are: 
[('training', 'NOUN'), ('data', 'NOUN'), ('making', 'VERB'), ('hand', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('training', 'compound'), ('data', 'ROOT'), ('making', 'pcomp'), ('hand', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[training, data], [data, making], [making, hand], [hand, .]]

>> Trigrams: 
[[training, data, making], [data, making, hand], [making, hand, .]]

>> Noun Phrases are: 
[training data, hand]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

The naïve bayes is preferred because of its   


>> Tokens are: 
[naïve, bayes, preferred,  ] 

>> PoS Tags are: 
[('naïve', 'ADJ'), ('bayes', 'NOUN'), ('preferred', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('naïve', 'amod'), ('bayes', 'nsubjpass'), ('preferred', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[naïve, bayes], [bayes, preferred], [preferred,  ]]

>> Trigrams: 
[[naïve, bayes, preferred], [bayes, preferred,  ]]

>> Noun Phrases are: 
[The naïve bayes]

>> Named Entities are: 
[] 


================================ Paragraph 343 =================================

performance despite its simplicity (Lewis, 1998) [53] In Text Categorization two types of  

------------------- Sentence 1 -------------------

performance despite its simplicity (Lewis, 1998) 


>> Tokens are: 
[performance, despite, simplicity, (, Lewis, ,, 1998, )] 

>> PoS Tags are: 
[('performance', 'NOUN'), ('despite', 'SCONJ'), ('simplicity', 'NOUN'), ('(', 'PUNCT'), ('Lewis', 'PROPN'), (',', 'PUNCT'), ('1998', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('performance', 'ROOT'), ('despite', 'prep'), ('simplicity', 'pobj'), ('(', 'punct'), ('Lewis', 'appos'), (',', 'punct'), ('1998', 'npadvmod'), (')', 'punct')]

>> Bigrams: 
[[performance, despite], [despite, simplicity], [simplicity, (], [(, Lewis], [Lewis, ,], [,, 1998], [1998, )]]

>> Trigrams: 
[[performance, despite, simplicity], [despite, simplicity, (], [simplicity, (, Lewis], [(, Lewis, ,], [Lewis, ,, 1998], [,, 1998, )]]

>> Noun Phrases are: 
[performance, its simplicity, (Lewis]

>> Named Entities are: 
[('1998', 'DATE')] 

------------------- Sentence 2 -------------------

[ 


>> Tokens are: 
[[] 

>> PoS Tags are: 
[('[', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

53] In Text Categorization two types of   


>> Tokens are: 
[53, ], Text, Categorization, types,  ] 

>> PoS Tags are: 
[('53', 'NUM'), (']', 'PUNCT'), ('Text', 'PROPN'), ('Categorization', 'NOUN'), ('types', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('53', 'nummod'), (']', 'dep'), ('Text', 'compound'), ('Categorization', 'pobj'), ('types', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[53, ]], [], Text], [Text, Categorization], [Categorization, types], [types,  ]]

>> Trigrams: 
[[53, ], Text], [], Text, Categorization], [Text, Categorization, types], [Categorization, types,  ]]

>> Noun Phrases are: 
[Text Categorization]

>> Named Entities are: 
[('53', 'CARDINAL'), ('two', 'CARDINAL')] 


================================ Paragraph 344 =================================

models have been used (McCallum and Nigam, 1998) [54]. Both modules assume that a fixed  

------------------- Sentence 1 -------------------

models have been used (McCallum and Nigam, 1998) 


>> Tokens are: 
[models, (, McCallum, Nigam, ,, 1998, )] 

>> PoS Tags are: 
[('models', 'NOUN'), ('(', 'PUNCT'), ('McCallum', 'PROPN'), ('Nigam', 'PROPN'), (',', 'PUNCT'), ('1998', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('models', 'nsubjpass'), ('(', 'punct'), ('McCallum', 'appos'), ('Nigam', 'conj'), (',', 'punct'), ('1998', 'appos'), (')', 'punct')]

>> Bigrams: 
[[models, (], [(, McCallum], [McCallum, Nigam], [Nigam, ,], [,, 1998], [1998, )]]

>> Trigrams: 
[[models, (, McCallum], [(, McCallum, Nigam], [McCallum, Nigam, ,], [Nigam, ,, 1998], [,, 1998, )]]

>> Noun Phrases are: 
[models, (McCallum, Nigam]

>> Named Entities are: 
[('1998', 'DATE')] 

------------------- Sentence 2 -------------------

[54]. 


>> Tokens are: 
[[, 54, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('54', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('54', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 54], [54, ]], [], .]]

>> Trigrams: 
[[[, 54, ]], [54, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('54', 'CARDINAL')] 

------------------- Sentence 3 -------------------

Both modules assume that a fixed   


>> Tokens are: 
[modules, assume, fixed,  ] 

>> PoS Tags are: 
[('modules', 'NOUN'), ('assume', 'VERB'), ('fixed', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('modules', 'nsubj'), ('assume', 'ROOT'), ('fixed', 'amod'), (' ', 'punct')]

>> Bigrams: 
[[modules, assume], [assume, fixed], [fixed,  ]]

>> Trigrams: 
[[modules, assume, fixed], [assume, fixed,  ]]

>> Noun Phrases are: 
[Both modules]

>> Named Entities are: 
[] 


================================ Paragraph 345 =================================

vocabulary is present. But in first model a document is generated by first choosing a subset of  

------------------- Sentence 1 -------------------

vocabulary is present. 


>> Tokens are: 
[vocabulary, present, .] 

>> PoS Tags are: 
[('vocabulary', 'NOUN'), ('present', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('vocabulary', 'nsubj'), ('present', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[vocabulary, present], [present, .]]

>> Trigrams: 
[[vocabulary, present, .]]

>> Noun Phrases are: 
[vocabulary]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

But in first model a document is generated by first choosing a subset of   


>> Tokens are: 
[model, document, generated, choosing, subset,  ] 

>> PoS Tags are: 
[('model', 'NOUN'), ('document', 'NOUN'), ('generated', 'VERB'), ('choosing', 'VERB'), ('subset', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('model', 'pobj'), ('document', 'nsubjpass'), ('generated', 'ROOT'), ('choosing', 'pcomp'), ('subset', 'dobj'), (' ', 'pobj')]

>> Bigrams: 
[[model, document], [document, generated], [generated, choosing], [choosing, subset], [subset,  ]]

>> Trigrams: 
[[model, document, generated], [document, generated, choosing], [generated, choosing, subset], [choosing, subset,  ]]

>> Noun Phrases are: 
[first model, a document, a subset]

>> Named Entities are: 
[('first', 'ORDINAL'), ('first', 'ORDINAL')] 


================================ Paragraph 346 =================================

vocabulary and then using the selected words any number of times, at least once irrespective  

------------------- Sentence 1 -------------------

vocabulary and then using the selected words any number of times, at least once irrespective   


>> Tokens are: 
[vocabulary, selected, words, number, times, ,, irrespective,  ] 

>> PoS Tags are: 
[('vocabulary', 'ADJ'), ('selected', 'VERB'), ('words', 'NOUN'), ('number', 'NOUN'), ('times', 'NOUN'), (',', 'PUNCT'), ('irrespective', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('vocabulary', 'amod'), ('selected', 'amod'), ('words', 'dobj'), ('number', 'npadvmod'), ('times', 'pobj'), (',', 'punct'), ('irrespective', 'advmod'), (' ', 'ROOT')]

>> Bigrams: 
[[vocabulary, selected], [selected, words], [words, number], [number, times], [times, ,], [,, irrespective], [irrespective,  ]]

>> Trigrams: 
[[vocabulary, selected, words], [selected, words, number], [words, number, times], [number, times, ,], [times, ,, irrespective], [,, irrespective,  ]]

>> Noun Phrases are: 
[the selected words, times]

>> Named Entities are: 
[] 


================================ Paragraph 347 =================================

of order. This is called Multi-variate Bernoulli model. It takes the information of which  

------------------- Sentence 1 -------------------

of order. 


>> Tokens are: 
[order, .] 

>> PoS Tags are: 
[('order', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('order', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[order, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[order]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

This is called Multi-variate Bernoulli model. 


>> Tokens are: 
[called, Multi, -, variate, Bernoulli, model, .] 

>> PoS Tags are: 
[('called', 'VERB'), ('Multi', 'PROPN'), ('-', 'ADJ'), ('variate', 'ADJ'), ('Bernoulli', 'PROPN'), ('model', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('called', 'ROOT'), ('Multi', 'compound'), ('-', 'amod'), ('variate', 'amod'), ('Bernoulli', 'compound'), ('model', 'oprd'), ('.', 'punct')]

>> Bigrams: 
[[called, Multi], [Multi, -], [-, variate], [variate, Bernoulli], [Bernoulli, model], [model, .]]

>> Trigrams: 
[[called, Multi, -], [Multi, -, variate], [-, variate, Bernoulli], [variate, Bernoulli, model], [Bernoulli, model, .]]

>> Noun Phrases are: 
[Multi-variate Bernoulli model]

>> Named Entities are: 
[('Bernoulli', 'PERSON')] 

------------------- Sentence 3 -------------------

It takes the information of which   


>> Tokens are: 
[takes, information,  ] 

>> PoS Tags are: 
[('takes', 'VERB'), ('information', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('takes', 'ROOT'), ('information', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[takes, information], [information,  ]]

>> Trigrams: 
[[takes, information,  ]]

>> Noun Phrases are: 
[It, the information]

>> Named Entities are: 
[] 


================================ Paragraph 348 =================================

words are used in a document irrespective of number of words and order. In second model, a  

------------------- Sentence 1 -------------------

words are used in a document irrespective of number of words and order. 


>> Tokens are: 
[words, document, irrespective, number, words, order, .] 

>> PoS Tags are: 
[('words', 'NOUN'), ('document', 'NOUN'), ('irrespective', 'ADV'), ('number', 'NOUN'), ('words', 'NOUN'), ('order', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('words', 'nsubjpass'), ('document', 'pobj'), ('irrespective', 'amod'), ('number', 'pobj'), ('words', 'pobj'), ('order', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[words, document], [document, irrespective], [irrespective, number], [number, words], [words, order], [order, .]]

>> Trigrams: 
[[words, document, irrespective], [document, irrespective, number], [irrespective, number, words], [number, words, order], [words, order, .]]

>> Noun Phrases are: 
[words, a document, number, words, order]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In second model, a   


>> Tokens are: 
[second, model, ,,  ] 

>> PoS Tags are: 
[('second', 'ADJ'), ('model', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('second', 'amod'), ('model', 'pobj'), (',', 'punct'), (' ', 'pobj')]

>> Bigrams: 
[[second, model], [model, ,], [,,  ]]

>> Trigrams: 
[[second, model, ,], [model, ,,  ]]

>> Noun Phrases are: 
[second model]

>> Named Entities are: 
[('second', 'ORDINAL')] 


================================ Paragraph 349 =================================

document is generated by choosing a set of word occurrences and arranging them in any  

------------------- Sentence 1 -------------------

document is generated by choosing a set of word occurrences and arranging them in any   


>> Tokens are: 
[document, generated, choosing, set, word, occurrences, arranging,  ] 

>> PoS Tags are: 
[('document', 'NOUN'), ('generated', 'VERB'), ('choosing', 'VERB'), ('set', 'NOUN'), ('word', 'NOUN'), ('occurrences', 'NOUN'), ('arranging', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('document', 'nsubjpass'), ('generated', 'ROOT'), ('choosing', 'pcomp'), ('set', 'dobj'), ('word', 'compound'), ('occurrences', 'pobj'), ('arranging', 'conj'), (' ', 'pobj')]

>> Bigrams: 
[[document, generated], [generated, choosing], [choosing, set], [set, word], [word, occurrences], [occurrences, arranging], [arranging,  ]]

>> Trigrams: 
[[document, generated, choosing], [generated, choosing, set], [choosing, set, word], [set, word, occurrences], [word, occurrences, arranging], [occurrences, arranging,  ]]

>> Noun Phrases are: 
[document, a set, word occurrences, them]

>> Named Entities are: 
[] 


================================ Paragraph 350 =================================

order. this model is called multi-nomial model, in addition to the Multi-variate Bernoulli  

------------------- Sentence 1 -------------------

order. 


>> Tokens are: 
[order, .] 

>> PoS Tags are: 
[('order', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('order', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[order, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[order]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

this model is called multi-nomial model, in addition to the Multi-variate Bernoulli   


>> Tokens are: 
[model, called, multi, -, nomial, model, ,, addition, Multi, -, variate, Bernoulli,  ] 

>> PoS Tags are: 
[('model', 'NOUN'), ('called', 'VERB'), ('multi', 'ADJ'), ('-', 'ADJ'), ('nomial', 'ADJ'), ('model', 'NOUN'), (',', 'PUNCT'), ('addition', 'NOUN'), ('Multi', 'PROPN'), ('-', 'ADJ'), ('variate', 'ADJ'), ('Bernoulli', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('model', 'nsubjpass'), ('called', 'ROOT'), ('multi', 'amod'), ('-', 'amod'), ('nomial', 'amod'), ('model', 'oprd'), (',', 'punct'), ('addition', 'pobj'), ('Multi', 'compound'), ('-', 'amod'), ('variate', 'amod'), ('Bernoulli', 'compound'), (' ', 'pobj')]

>> Bigrams: 
[[model, called], [called, multi], [multi, -], [-, nomial], [nomial, model], [model, ,], [,, addition], [addition, Multi], [Multi, -], [-, variate], [variate, Bernoulli], [Bernoulli,  ]]

>> Trigrams: 
[[model, called, multi], [called, multi, -], [multi, -, nomial], [-, nomial, model], [nomial, model, ,], [model, ,, addition], [,, addition, Multi], [addition, Multi, -], [Multi, -, variate], [-, variate, Bernoulli], [variate, Bernoulli,  ]]

>> Noun Phrases are: 
[this model, multi-nomial model, addition]

>> Named Entities are: 
[('Bernoulli', 'PERSON')] 


================================ Paragraph 351 =================================

model, it also captures information on how many times a word is used in a document. Most  

------------------- Sentence 1 -------------------

model, it also captures information on how many times a word is used in a document. 


>> Tokens are: 
[model, ,, captures, information, times, word, document, .] 

>> PoS Tags are: 
[('model', 'NOUN'), (',', 'PUNCT'), ('captures', 'VERB'), ('information', 'NOUN'), ('times', 'NOUN'), ('word', 'NOUN'), ('document', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('model', 'npadvmod'), (',', 'punct'), ('captures', 'ROOT'), ('information', 'dobj'), ('times', 'npadvmod'), ('word', 'nsubjpass'), ('document', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[model, ,], [,, captures], [captures, information], [information, times], [times, word], [word, document], [document, .]]

>> Trigrams: 
[[model, ,, captures], [,, captures, information], [captures, information, times], [information, times, word], [times, word, document], [word, document, .]]

>> Noun Phrases are: 
[it, information, a word, a document]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Most   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 352 =================================

text categorization approaches to anti spam Email filtering have used multi variate Bernoulli  

------------------- Sentence 1 -------------------

text categorization approaches to anti spam Email filtering have used multi variate Bernoulli   


>> Tokens are: 
[text, categorization, approaches, anti, spam, Email, filtering, multi, variate, Bernoulli,  ] 

>> PoS Tags are: 
[('text', 'NOUN'), ('categorization', 'NOUN'), ('approaches', 'NOUN'), ('anti', 'ADJ'), ('spam', 'NOUN'), ('Email', 'PROPN'), ('filtering', 'NOUN'), ('multi', 'ADJ'), ('variate', 'ADJ'), ('Bernoulli', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('text', 'compound'), ('categorization', 'compound'), ('approaches', 'nsubj'), ('anti', 'amod'), ('spam', 'compound'), ('Email', 'compound'), ('filtering', 'pobj'), ('multi', 'amod'), ('variate', 'dobj'), ('Bernoulli', 'compound'), (' ', 'dobj')]

>> Bigrams: 
[[text, categorization], [categorization, approaches], [approaches, anti], [anti, spam], [spam, Email], [Email, filtering], [filtering, multi], [multi, variate], [variate, Bernoulli], [Bernoulli,  ]]

>> Trigrams: 
[[text, categorization, approaches], [categorization, approaches, anti], [approaches, anti, spam], [anti, spam, Email], [spam, Email, filtering], [Email, filtering, multi], [filtering, multi, variate], [multi, variate, Bernoulli], [variate, Bernoulli,  ]]

>> Noun Phrases are: 
[text categorization approaches, anti spam Email filtering]

>> Named Entities are: 
[('Bernoulli', 'PERSON')] 


================================ Paragraph 353 =================================

model (Androutsopoulos et al.,2000b) [47]  

------------------- Sentence 1 -------------------

model (Androutsopoulos et al. 


>> Tokens are: 
[model, (, Androutsopoulos, et, al, .] 

>> PoS Tags are: 
[('model', 'NOUN'), ('(', 'PUNCT'), ('Androutsopoulos', 'PROPN'), ('et', 'PROPN'), ('al', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('model', 'ROOT'), ('(', 'punct'), ('Androutsopoulos', 'compound'), ('et', 'compound'), ('al', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[model, (], [(, Androutsopoulos], [Androutsopoulos, et], [et, al], [al, .]]

>> Trigrams: 
[[model, (, Androutsopoulos], [(, Androutsopoulos, et], [Androutsopoulos, et, al], [et, al, .]]

>> Noun Phrases are: 
[model, Androutsopoulos et al]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

,2000b) 


>> Tokens are: 
[,2000b, )] 

>> PoS Tags are: 
[(',2000b', 'PUNCT'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[(',2000b', 'ROOT'), (')', 'punct')]

>> Bigrams: 
[[,2000b, )]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

[47] 


>> Tokens are: 
[[, 47, ]] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('47', 'NUM'), (']', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('47', 'ROOT'), (']', 'punct')]

>> Bigrams: 
[[[, 47], [47, ]]]

>> Trigrams: 
[[[, 47, ]]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('47', 'CARDINAL')] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 354 =================================

6.4 Information Extraction  

------------------- Sentence 1 -------------------

6.4 Information Extraction   


>> Tokens are: 
[6.4, Information, Extraction,  ] 

>> PoS Tags are: 
[('6.4', 'NUM'), ('Information', 'PROPN'), ('Extraction', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('6.4', 'nummod'), ('Information', 'compound'), ('Extraction', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[6.4, Information], [Information, Extraction], [Extraction,  ]]

>> Trigrams: 
[[6.4, Information, Extraction], [Information, Extraction,  ]]

>> Noun Phrases are: 
[6.4 Information Extraction]

>> Named Entities are: 
[('6.4', 'CARDINAL'), ('Information Extraction', 'PRODUCT')] 


================================ Paragraph 355 =================================

Information extraction is concerned with identifying phrases of interest of textual data. For  

------------------- Sentence 1 -------------------

Information extraction is concerned with identifying phrases of interest of textual data. 


>> Tokens are: 
[Information, extraction, concerned, identifying, phrases, interest, textual, data, .] 

>> PoS Tags are: 
[('Information', 'NOUN'), ('extraction', 'NOUN'), ('concerned', 'VERB'), ('identifying', 'VERB'), ('phrases', 'NOUN'), ('interest', 'NOUN'), ('textual', 'ADJ'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Information', 'compound'), ('extraction', 'nsubjpass'), ('concerned', 'ROOT'), ('identifying', 'pcomp'), ('phrases', 'dobj'), ('interest', 'pobj'), ('textual', 'amod'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Information, extraction], [extraction, concerned], [concerned, identifying], [identifying, phrases], [phrases, interest], [interest, textual], [textual, data], [data, .]]

>> Trigrams: 
[[Information, extraction, concerned], [extraction, concerned, identifying], [concerned, identifying, phrases], [identifying, phrases, interest], [phrases, interest, textual], [interest, textual, data], [textual, data, .]]

>> Noun Phrases are: 
[Information extraction, phrases, interest, textual data]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

For   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'pobj')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 356 =================================

many applications, extracting entities such as names, places, events, dates, times and prices is  

------------------- Sentence 1 -------------------

many applications, extracting entities such as names, places, events, dates, times and prices is   


>> Tokens are: 
[applications, ,, extracting, entities, names, ,, places, ,, events, ,, dates, ,, times, prices,  ] 

>> PoS Tags are: 
[('applications', 'NOUN'), (',', 'PUNCT'), ('extracting', 'VERB'), ('entities', 'NOUN'), ('names', 'NOUN'), (',', 'PUNCT'), ('places', 'NOUN'), (',', 'PUNCT'), ('events', 'NOUN'), (',', 'PUNCT'), ('dates', 'NOUN'), (',', 'PUNCT'), ('times', 'NOUN'), ('prices', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('applications', 'nsubj'), (',', 'punct'), ('extracting', 'amod'), ('entities', 'appos'), ('names', 'pobj'), (',', 'punct'), ('places', 'conj'), (',', 'punct'), ('events', 'conj'), (',', 'punct'), ('dates', 'conj'), (',', 'punct'), ('times', 'conj'), ('prices', 'conj'), (' ', 'attr')]

>> Bigrams: 
[[applications, ,], [,, extracting], [extracting, entities], [entities, names], [names, ,], [,, places], [places, ,], [,, events], [events, ,], [,, dates], [dates, ,], [,, times], [times, prices], [prices,  ]]

>> Trigrams: 
[[applications, ,, extracting], [,, extracting, entities], [extracting, entities, names], [entities, names, ,], [names, ,, places], [,, places, ,], [places, ,, events], [,, events, ,], [events, ,, dates], [,, dates, ,], [dates, ,, times], [,, times, prices], [times, prices,  ]]

>> Noun Phrases are: 
[many applications, extracting entities, names, places, events, dates, times, prices]

>> Named Entities are: 
[] 


================================ Paragraph 357 =================================

a powerful way of summarize the information relevant to a user’s needs. In the case of a  

------------------- Sentence 1 -------------------

a powerful way of summarize the information relevant to a user’s needs. 


>> Tokens are: 
[powerful, way, summarize, information, relevant, user, needs, .] 

>> PoS Tags are: 
[('powerful', 'ADJ'), ('way', 'NOUN'), ('summarize', 'VERB'), ('information', 'NOUN'), ('relevant', 'ADJ'), ('user', 'NOUN'), ('needs', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('powerful', 'amod'), ('way', 'ROOT'), ('summarize', 'relcl'), ('information', 'dobj'), ('relevant', 'amod'), ('user', 'poss'), ('needs', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[powerful, way], [way, summarize], [summarize, information], [information, relevant], [relevant, user], [user, needs], [needs, .]]

>> Trigrams: 
[[powerful, way, summarize], [way, summarize, information], [summarize, information, relevant], [information, relevant, user], [relevant, user, needs], [user, needs, .]]

>> Noun Phrases are: 
[a powerful way, the information, a user’s needs]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In the case of a   


>> Tokens are: 
[case,  ] 

>> PoS Tags are: 
[('case', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('case', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[case,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[the case]

>> Named Entities are: 
[] 


================================ Paragraph 358 =================================

domain specific search engine, the automatic identification of important information can  

------------------- Sentence 1 -------------------

domain specific search engine, the automatic identification of important information can   


>> Tokens are: 
[domain, specific, search, engine, ,, automatic, identification, important, information,  ] 

>> PoS Tags are: 
[('domain', 'VERB'), ('specific', 'ADJ'), ('search', 'NOUN'), ('engine', 'NOUN'), (',', 'PUNCT'), ('automatic', 'ADJ'), ('identification', 'NOUN'), ('important', 'ADJ'), ('information', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('domain', 'advcl'), ('specific', 'amod'), ('search', 'compound'), ('engine', 'dobj'), (',', 'punct'), ('automatic', 'amod'), ('identification', 'nsubj'), ('important', 'amod'), ('information', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[domain, specific], [specific, search], [search, engine], [engine, ,], [,, automatic], [automatic, identification], [identification, important], [important, information], [information,  ]]

>> Trigrams: 
[[domain, specific, search], [specific, search, engine], [search, engine, ,], [engine, ,, automatic], [,, automatic, identification], [automatic, identification, important], [identification, important, information], [important, information,  ]]

>> Noun Phrases are: 
[specific search engine, the automatic identification, important information]

>> Named Entities are: 
[] 


================================ Paragraph 359 =================================

increase accuracy and efficiency of a directed search. There is use of hidden Markov models  

------------------- Sentence 1 -------------------

increase accuracy and efficiency of a directed search. 


>> Tokens are: 
[increase, accuracy, efficiency, directed, search, .] 

>> PoS Tags are: 
[('increase', 'VERB'), ('accuracy', 'NOUN'), ('efficiency', 'NOUN'), ('directed', 'VERB'), ('search', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('increase', 'ROOT'), ('accuracy', 'dobj'), ('efficiency', 'conj'), ('directed', 'amod'), ('search', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[increase, accuracy], [accuracy, efficiency], [efficiency, directed], [directed, search], [search, .]]

>> Trigrams: 
[[increase, accuracy, efficiency], [accuracy, efficiency, directed], [efficiency, directed, search], [directed, search, .]]

>> Noun Phrases are: 
[accuracy, efficiency, a directed search]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

There is use of hidden Markov models   


>> Tokens are: 
[use, hidden, Markov, models,  ] 

>> PoS Tags are: 
[('use', 'NOUN'), ('hidden', 'VERB'), ('Markov', 'PROPN'), ('models', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('use', 'attr'), ('hidden', 'amod'), ('Markov', 'compound'), ('models', 'pobj'), (' ', 'attr')]

>> Bigrams: 
[[use, hidden], [hidden, Markov], [Markov, models], [models,  ]]

>> Trigrams: 
[[use, hidden, Markov], [hidden, Markov, models], [Markov, models,  ]]

>> Noun Phrases are: 
[use, hidden Markov models]

>> Named Entities are: 
[('Markov', 'PERSON')] 


================================ Paragraph 360 =================================

(HMMs) to extract the relevant fields of research papers. These extracted text segments are 

------------------- Sentence 1 -------------------

(HMMs) to extract the relevant fields of research papers. 


>> Tokens are: 
[(, HMMs, ), extract, relevant, fields, research, papers, .] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('HMMs', 'NOUN'), (')', 'PUNCT'), ('extract', 'VERB'), ('relevant', 'ADJ'), ('fields', 'NOUN'), ('research', 'NOUN'), ('papers', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('HMMs', 'ROOT'), (')', 'punct'), ('extract', 'relcl'), ('relevant', 'amod'), ('fields', 'dobj'), ('research', 'compound'), ('papers', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[(, HMMs], [HMMs, )], [), extract], [extract, relevant], [relevant, fields], [fields, research], [research, papers], [papers, .]]

>> Trigrams: 
[[(, HMMs, )], [HMMs, ), extract], [), extract, relevant], [extract, relevant, fields], [relevant, fields, research], [fields, research, papers], [research, papers, .]]

>> Noun Phrases are: 
[(HMMs, the relevant fields, research papers]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

These extracted text segments are 


>> Tokens are: 
[extracted, text, segments] 

>> PoS Tags are: 
[('extracted', 'VERB'), ('text', 'NOUN'), ('segments', 'NOUN')] 

>> Dependency Tags are: 
[('extracted', 'amod'), ('text', 'compound'), ('segments', 'nsubj')]

>> Bigrams: 
[[extracted, text], [text, segments]]

>> Trigrams: 
[[extracted, text, segments]]

>> Noun Phrases are: 
[These extracted text segments]

>> Named Entities are: 
[] 


================================ Paragraph 361 =================================

used to allow searched over specific fields and to provide effective presentation of search  

------------------- Sentence 1 -------------------

used to allow searched over specific fields and to provide effective presentation of search   


>> Tokens are: 
[allow, searched, specific, fields, provide, effective, presentation, search,  ] 

>> PoS Tags are: 
[('allow', 'VERB'), ('searched', 'VERB'), ('specific', 'ADJ'), ('fields', 'NOUN'), ('provide', 'VERB'), ('effective', 'ADJ'), ('presentation', 'NOUN'), ('search', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('allow', 'xcomp'), ('searched', 'xcomp'), ('specific', 'amod'), ('fields', 'pobj'), ('provide', 'conj'), ('effective', 'amod'), ('presentation', 'dobj'), ('search', 'compound'), (' ', 'pobj')]

>> Bigrams: 
[[allow, searched], [searched, specific], [specific, fields], [fields, provide], [provide, effective], [effective, presentation], [presentation, search], [search,  ]]

>> Trigrams: 
[[allow, searched, specific], [searched, specific, fields], [specific, fields, provide], [fields, provide, effective], [provide, effective, presentation], [effective, presentation, search], [presentation, search,  ]]

>> Noun Phrases are: 
[specific fields, effective presentation]

>> Named Entities are: 
[] 


================================ Paragraph 362 =================================

results and to match references to papers. For example, noticing the pop up ads on any  

------------------- Sentence 1 -------------------

results and to match references to papers. 


>> Tokens are: 
[results, match, references, papers, .] 

>> PoS Tags are: 
[('results', 'NOUN'), ('match', 'VERB'), ('references', 'NOUN'), ('papers', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('results', 'ROOT'), ('match', 'conj'), ('references', 'dobj'), ('papers', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[results, match], [match, references], [references, papers], [papers, .]]

>> Trigrams: 
[[results, match, references], [match, references, papers], [references, papers, .]]

>> Noun Phrases are: 
[results, references, papers]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

For example, noticing the pop up ads on any   


>> Tokens are: 
[example, ,, noticing, pop, ads,  ] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), ('noticing', 'VERB'), ('pop', 'NOUN'), ('ads', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct'), ('noticing', 'pcomp'), ('pop', 'amod'), ('ads', 'dobj'), (' ', 'pobj')]

>> Bigrams: 
[[example, ,], [,, noticing], [noticing, pop], [pop, ads], [ads,  ]]

>> Trigrams: 
[[example, ,, noticing], [,, noticing, pop], [noticing, pop, ads], [pop, ads,  ]]

>> Noun Phrases are: 
[example, the pop up ads]

>> Named Entities are: 
[] 


================================ Paragraph 363 =================================

websites showing the recent items you might have looked on an online store with discounts.  

------------------- Sentence 1 -------------------

websites showing the recent items you might have looked on an online store with discounts. 


>> Tokens are: 
[websites, showing, recent, items, looked, online, store, discounts, .] 

>> PoS Tags are: 
[('websites', 'NOUN'), ('showing', 'VERB'), ('recent', 'ADJ'), ('items', 'NOUN'), ('looked', 'VERB'), ('online', 'ADJ'), ('store', 'NOUN'), ('discounts', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('websites', 'ROOT'), ('showing', 'acl'), ('recent', 'amod'), ('items', 'dobj'), ('looked', 'relcl'), ('online', 'amod'), ('store', 'pobj'), ('discounts', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[websites, showing], [showing, recent], [recent, items], [items, looked], [looked, online], [online, store], [store, discounts], [discounts, .]]

>> Trigrams: 
[[websites, showing, recent], [showing, recent, items], [recent, items, looked], [items, looked, online], [looked, online, store], [online, store, discounts], [store, discounts, .]]

>> Noun Phrases are: 
[websites, the recent items, you, an online store, discounts]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 364 =================================

In Information Retrieval two types of models have been used (McCallum and Nigam, 1998)  

------------------- Sentence 1 -------------------

In Information Retrieval two types of models have been used (McCallum and Nigam, 1998) 


>> Tokens are: 
[Information, Retrieval, types, models, (, McCallum, Nigam, ,, 1998, )] 

>> PoS Tags are: 
[('Information', 'PROPN'), ('Retrieval', 'PROPN'), ('types', 'NOUN'), ('models', 'NOUN'), ('(', 'PUNCT'), ('McCallum', 'PROPN'), ('Nigam', 'PROPN'), (',', 'PUNCT'), ('1998', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Information', 'compound'), ('Retrieval', 'pobj'), ('types', 'nsubjpass'), ('models', 'pobj'), ('(', 'punct'), ('McCallum', 'appos'), ('Nigam', 'conj'), (',', 'punct'), ('1998', 'npadvmod'), (')', 'punct')]

>> Bigrams: 
[[Information, Retrieval], [Retrieval, types], [types, models], [models, (], [(, McCallum], [McCallum, Nigam], [Nigam, ,], [,, 1998], [1998, )]]

>> Trigrams: 
[[Information, Retrieval, types], [Retrieval, types, models], [types, models, (], [models, (, McCallum], [(, McCallum, Nigam], [McCallum, Nigam, ,], [Nigam, ,, 1998], [,, 1998, )]]

>> Noun Phrases are: 
[Information Retrieval, two types, models, (McCallum, Nigam]

>> Named Entities are: 
[('Information Retrieval', 'PRODUCT'), ('two', 'CARDINAL'), ('1998', 'DATE')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 365 =================================

[55]. Both modules assume that a fixed vocabulary is present. But in first model a document  

------------------- Sentence 1 -------------------

[55]. 


>> Tokens are: 
[[, 55, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('55', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('55', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 55], [55, ]], [], .]]

>> Trigrams: 
[[[, 55, ]], [55, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('55', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Both modules assume that a fixed vocabulary is present. 


>> Tokens are: 
[modules, assume, fixed, vocabulary, present, .] 

>> PoS Tags are: 
[('modules', 'NOUN'), ('assume', 'VERB'), ('fixed', 'VERB'), ('vocabulary', 'NOUN'), ('present', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('modules', 'nsubj'), ('assume', 'ROOT'), ('fixed', 'amod'), ('vocabulary', 'nsubj'), ('present', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[modules, assume], [assume, fixed], [fixed, vocabulary], [vocabulary, present], [present, .]]

>> Trigrams: 
[[modules, assume, fixed], [assume, fixed, vocabulary], [fixed, vocabulary, present], [vocabulary, present, .]]

>> Noun Phrases are: 
[Both modules, a fixed vocabulary]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

But in first model 


>> Tokens are: 
[model] 

>> PoS Tags are: 
[('model', 'NOUN')] 

>> Dependency Tags are: 
[('model', 'pobj')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[first model]

>> Named Entities are: 
[('first', 'ORDINAL')] 

------------------- Sentence 4 -------------------

a document   


>> Tokens are: 
[document,  ] 

>> PoS Tags are: 
[('document', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('document', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[document,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[a document]

>> Named Entities are: 
[] 


================================ Paragraph 366 =================================

is generated by first choosing a subset of vocabulary and then using the selected words any  

------------------- Sentence 1 -------------------

is generated by first choosing a subset of vocabulary and then using the selected words any   


>> Tokens are: 
[generated, choosing, subset, vocabulary, selected, words,  ] 

>> PoS Tags are: 
[('generated', 'VERB'), ('choosing', 'VERB'), ('subset', 'NOUN'), ('vocabulary', 'NOUN'), ('selected', 'VERB'), ('words', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('generated', 'ROOT'), ('choosing', 'pcomp'), ('subset', 'dobj'), ('vocabulary', 'pobj'), ('selected', 'amod'), ('words', 'dobj'), (' ', 'npadvmod')]

>> Bigrams: 
[[generated, choosing], [choosing, subset], [subset, vocabulary], [vocabulary, selected], [selected, words], [words,  ]]

>> Trigrams: 
[[generated, choosing, subset], [choosing, subset, vocabulary], [subset, vocabulary, selected], [vocabulary, selected, words], [selected, words,  ]]

>> Noun Phrases are: 
[a subset, vocabulary, the selected words]

>> Named Entities are: 
[('first', 'ORDINAL')] 


================================ Paragraph 367 =================================

number of times, at least once without any order. This is called Multi-variate Bernoulli  

------------------- Sentence 1 -------------------

number of times, at least once without any order. 


>> Tokens are: 
[number, times, ,, order, .] 

>> PoS Tags are: 
[('number', 'NOUN'), ('times', 'NOUN'), (',', 'PUNCT'), ('order', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('number', 'ROOT'), ('times', 'pobj'), (',', 'punct'), ('order', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[number, times], [times, ,], [,, order], [order, .]]

>> Trigrams: 
[[number, times, ,], [times, ,, order], [,, order, .]]

>> Noun Phrases are: 
[number, times, any order]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

This is called Multi-variate Bernoulli   


>> Tokens are: 
[called, Multi, -, variate, Bernoulli,  ] 

>> PoS Tags are: 
[('called', 'VERB'), ('Multi', 'PROPN'), ('-', 'ADJ'), ('variate', 'ADJ'), ('Bernoulli', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('called', 'ROOT'), ('Multi', 'compound'), ('-', 'amod'), ('variate', 'amod'), ('Bernoulli', 'compound'), (' ', 'oprd')]

>> Bigrams: 
[[called, Multi], [Multi, -], [-, variate], [variate, Bernoulli], [Bernoulli,  ]]

>> Trigrams: 
[[called, Multi, -], [Multi, -, variate], [-, variate, Bernoulli], [variate, Bernoulli,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('Bernoulli', 'PERSON')] 


================================ Paragraph 368 =================================

model. It takes the information of which words are used in a document irrespective of number  

------------------- Sentence 1 -------------------

model. 


>> Tokens are: 
[model, .] 

>> PoS Tags are: 
[('model', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('model', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[model, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[model]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

It takes the information of which words are used in a document irrespective of number   


>> Tokens are: 
[takes, information, words, document, irrespective, number,  ] 

>> PoS Tags are: 
[('takes', 'VERB'), ('information', 'NOUN'), ('words', 'NOUN'), ('document', 'NOUN'), ('irrespective', 'ADV'), ('number', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('takes', 'ROOT'), ('information', 'dobj'), ('words', 'nsubjpass'), ('document', 'pobj'), ('irrespective', 'amod'), ('number', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[takes, information], [information, words], [words, document], [document, irrespective], [irrespective, number], [number,  ]]

>> Trigrams: 
[[takes, information, words], [information, words, document], [words, document, irrespective], [document, irrespective, number], [irrespective, number,  ]]

>> Noun Phrases are: 
[It, the information, words, a document, number]

>> Named Entities are: 
[] 


================================ Paragraph 369 =================================

of words and order. In second model, a document is generated by choosing a set of word  

------------------- Sentence 1 -------------------

of words and order. 


>> Tokens are: 
[words, order, .] 

>> PoS Tags are: 
[('words', 'NOUN'), ('order', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('words', 'pobj'), ('order', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[words, order], [order, .]]

>> Trigrams: 
[[words, order, .]]

>> Noun Phrases are: 
[words, order]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In second model, a document is generated by choosing a set of word   


>> Tokens are: 
[second, model, ,, document, generated, choosing, set, word,  ] 

>> PoS Tags are: 
[('second', 'ADJ'), ('model', 'NOUN'), (',', 'PUNCT'), ('document', 'NOUN'), ('generated', 'VERB'), ('choosing', 'VERB'), ('set', 'NOUN'), ('word', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('second', 'amod'), ('model', 'pobj'), (',', 'punct'), ('document', 'nsubjpass'), ('generated', 'ROOT'), ('choosing', 'pcomp'), ('set', 'dobj'), ('word', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[second, model], [model, ,], [,, document], [document, generated], [generated, choosing], [choosing, set], [set, word], [word,  ]]

>> Trigrams: 
[[second, model, ,], [model, ,, document], [,, document, generated], [document, generated, choosing], [generated, choosing, set], [choosing, set, word], [set, word,  ]]

>> Noun Phrases are: 
[second model, a document, a set, word]

>> Named Entities are: 
[('second', 'ORDINAL')] 


================================ Paragraph 370 =================================

occurrences and arranging them in any order. this model is called multi-nomial model, in  

------------------- Sentence 1 -------------------

occurrences and arranging them in any order. 


>> Tokens are: 
[occurrences, arranging, order, .] 

>> PoS Tags are: 
[('occurrences', 'NOUN'), ('arranging', 'VERB'), ('order', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('occurrences', 'ROOT'), ('arranging', 'conj'), ('order', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[occurrences, arranging], [arranging, order], [order, .]]

>> Trigrams: 
[[occurrences, arranging, order], [arranging, order, .]]

>> Noun Phrases are: 
[occurrences, them, any order]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

this model is called multi-nomial model, in   


>> Tokens are: 
[model, called, multi, -, nomial, model, ,,  ] 

>> PoS Tags are: 
[('model', 'NOUN'), ('called', 'VERB'), ('multi', 'ADJ'), ('-', 'ADJ'), ('nomial', 'ADJ'), ('model', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('model', 'nsubjpass'), ('called', 'ROOT'), ('multi', 'amod'), ('-', 'amod'), ('nomial', 'amod'), ('model', 'oprd'), (',', 'punct'), (' ', 'pobj')]

>> Bigrams: 
[[model, called], [called, multi], [multi, -], [-, nomial], [nomial, model], [model, ,], [,,  ]]

>> Trigrams: 
[[model, called, multi], [called, multi, -], [multi, -, nomial], [-, nomial, model], [nomial, model, ,], [model, ,,  ]]

>> Noun Phrases are: 
[this model, multi-nomial model]

>> Named Entities are: 
[] 


================================ Paragraph 371 =================================

addition to the Multi-variate Bernoulli model , it also captures information on how many  

------------------- Sentence 1 -------------------

addition to the Multi-variate Bernoulli model , it also captures information on how many   


>> Tokens are: 
[addition, Multi, -, variate, Bernoulli, model, ,, captures, information,  ] 

>> PoS Tags are: 
[('addition', 'NOUN'), ('Multi', 'PROPN'), ('-', 'ADJ'), ('variate', 'ADJ'), ('Bernoulli', 'PROPN'), ('model', 'NOUN'), (',', 'PUNCT'), ('captures', 'VERB'), ('information', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('addition', 'advcl'), ('Multi', 'compound'), ('-', 'amod'), ('variate', 'amod'), ('Bernoulli', 'compound'), ('model', 'pobj'), (',', 'punct'), ('captures', 'ROOT'), ('information', 'dobj'), (' ', 'pobj')]

>> Bigrams: 
[[addition, Multi], [Multi, -], [-, variate], [variate, Bernoulli], [Bernoulli, model], [model, ,], [,, captures], [captures, information], [information,  ]]

>> Trigrams: 
[[addition, Multi, -], [Multi, -, variate], [-, variate, Bernoulli], [variate, Bernoulli, model], [Bernoulli, model, ,], [model, ,, captures], [,, captures, information], [captures, information,  ]]

>> Noun Phrases are: 
[the Multi-variate Bernoulli model, it, information]

>> Named Entities are: 
[('Bernoulli', 'PERSON')] 


================================ Paragraph 372 =================================

times a word is used in a document  

------------------- Sentence 1 -------------------

times a word is used in a document   


>> Tokens are: 
[times, word, document,  ] 

>> PoS Tags are: 
[('times', 'NOUN'), ('word', 'NOUN'), ('document', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('times', 'npadvmod'), ('word', 'nsubjpass'), ('document', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[times, word], [word, document], [document,  ]]

>> Trigrams: 
[[times, word, document], [word, document,  ]]

>> Noun Phrases are: 
[a word, a document]

>> Named Entities are: 
[] 


================================ Paragraph 373 =================================

Discovery of knowledge is becoming important areas of research over the recent years.  

------------------- Sentence 1 -------------------

Discovery of knowledge is becoming important areas of research over the recent years. 


>> Tokens are: 
[Discovery, knowledge, important, areas, research, recent, years, .] 

>> PoS Tags are: 
[('Discovery', 'PROPN'), ('knowledge', 'NOUN'), ('important', 'ADJ'), ('areas', 'NOUN'), ('research', 'NOUN'), ('recent', 'ADJ'), ('years', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Discovery', 'nsubj'), ('knowledge', 'pobj'), ('important', 'amod'), ('areas', 'attr'), ('research', 'pobj'), ('recent', 'amod'), ('years', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Discovery, knowledge], [knowledge, important], [important, areas], [areas, research], [research, recent], [recent, years], [years, .]]

>> Trigrams: 
[[Discovery, knowledge, important], [knowledge, important, areas], [important, areas, research], [areas, research, recent], [research, recent, years], [recent, years, .]]

>> Noun Phrases are: 
[Discovery, knowledge, important areas, research, the recent years]

>> Named Entities are: 
[('the recent years', 'DATE')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 374 =================================

Knowledge discovery research use a variety of techniques in order to extract useful  

------------------- Sentence 1 -------------------

Knowledge discovery research use a variety of techniques in order to extract useful   


>> Tokens are: 
[Knowledge, discovery, research, use, variety, techniques, order, extract, useful,  ] 

>> PoS Tags are: 
[('Knowledge', 'NOUN'), ('discovery', 'NOUN'), ('research', 'NOUN'), ('use', 'VERB'), ('variety', 'NOUN'), ('techniques', 'NOUN'), ('order', 'NOUN'), ('extract', 'VERB'), ('useful', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Knowledge', 'compound'), ('discovery', 'compound'), ('research', 'nsubj'), ('use', 'ROOT'), ('variety', 'dobj'), ('techniques', 'pobj'), ('order', 'pobj'), ('extract', 'acl'), ('useful', 'amod'), (' ', 'dobj')]

>> Bigrams: 
[[Knowledge, discovery], [discovery, research], [research, use], [use, variety], [variety, techniques], [techniques, order], [order, extract], [extract, useful], [useful,  ]]

>> Trigrams: 
[[Knowledge, discovery, research], [discovery, research, use], [research, use, variety], [use, variety, techniques], [variety, techniques, order], [techniques, order, extract], [order, extract, useful], [extract, useful,  ]]

>> Noun Phrases are: 
[Knowledge discovery research, a variety, techniques, order]

>> Named Entities are: 
[] 


================================ Paragraph 375 =================================

information from source documents like   

------------------- Sentence 1 -------------------

information from source documents like    


>> Tokens are: 
[information, source, documents, like,   ] 

>> PoS Tags are: 
[('information', 'NOUN'), ('source', 'NOUN'), ('documents', 'NOUN'), ('like', 'ADP'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('information', 'ROOT'), ('source', 'compound'), ('documents', 'pobj'), ('like', 'prep'), ('  ', 'pobj')]

>> Bigrams: 
[[information, source], [source, documents], [documents, like], [like,   ]]

>> Trigrams: 
[[information, source, documents], [source, documents, like], [documents, like,   ]]

>> Noun Phrases are: 
[information, source documents]

>> Named Entities are: 
[] 


================================ Paragraph 376 =================================

Parts of Speech (POS) tagging, Chunking or Shadow Parsing, Stop-words (Keywords that  

------------------- Sentence 1 -------------------

Parts of Speech (POS) tagging, Chunking or Shadow Parsing, Stop-words (Keywords 


>> Tokens are: 
[Parts, Speech, (, POS, ), tagging, ,, Chunking, Shadow, Parsing, ,, Stop, -, words, (, Keywords] 

>> PoS Tags are: 
[('Parts', 'NOUN'), ('Speech', 'PROPN'), ('(', 'PUNCT'), ('POS', 'PROPN'), (')', 'PUNCT'), ('tagging', 'NOUN'), (',', 'PUNCT'), ('Chunking', 'PROPN'), ('Shadow', 'PROPN'), ('Parsing', 'PROPN'), (',', 'PUNCT'), ('Stop', 'VERB'), ('-', 'PUNCT'), ('words', 'NOUN'), ('(', 'PUNCT'), ('Keywords', 'NOUN')] 

>> Dependency Tags are: 
[('Parts', 'ROOT'), ('Speech', 'nmod'), ('(', 'punct'), ('POS', 'nmod'), (')', 'punct'), ('tagging', 'pobj'), (',', 'punct'), ('Chunking', 'conj'), ('Shadow', 'compound'), ('Parsing', 'conj'), (',', 'punct'), ('Stop', 'conj'), ('-', 'punct'), ('words', 'dobj'), ('(', 'punct'), ('Keywords', 'appos')]

>> Bigrams: 
[[Parts, Speech], [Speech, (], [(, POS], [POS, )], [), tagging], [tagging, ,], [,, Chunking], [Chunking, Shadow], [Shadow, Parsing], [Parsing, ,], [,, Stop], [Stop, -], [-, words], [words, (], [(, Keywords]]

>> Trigrams: 
[[Parts, Speech, (], [Speech, (, POS], [(, POS, )], [POS, ), tagging], [), tagging, ,], [tagging, ,, Chunking], [,, Chunking, Shadow], [Chunking, Shadow, Parsing], [Shadow, Parsing, ,], [Parsing, ,, Stop], [,, Stop, -], [Stop, -, words], [-, words, (], [words, (, Keywords]]

>> Noun Phrases are: 
[Parts, Speech (POS) tagging, Chunking, Shadow Parsing, words, (Keywords]

>> Named Entities are: 
[('Chunking', 'ORG'), ('Shadow Parsing, Stop-words (Keywords', 'WORK_OF_ART')] 

------------------- Sentence 2 -------------------

that   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'pobj')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 377 =================================

are used and must be removed before processing documents), Stemming (Mapping words to  

------------------- Sentence 1 -------------------

are used and must be removed before processing documents), 


>> Tokens are: 
[removed, processing, documents, ), ,] 

>> PoS Tags are: 
[('removed', 'VERB'), ('processing', 'VERB'), ('documents', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT')] 

>> Dependency Tags are: 
[('removed', 'conj'), ('processing', 'pcomp'), ('documents', 'dobj'), (')', 'punct'), (',', 'punct')]

>> Bigrams: 
[[removed, processing], [processing, documents], [documents, )], [), ,]]

>> Trigrams: 
[[removed, processing, documents], [processing, documents, )], [documents, ), ,]]

>> Noun Phrases are: 
[documents]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Stemming (Mapping words to   


>> Tokens are: 
[Stemming, (, Mapping, words,  ] 

>> PoS Tags are: 
[('Stemming', 'VERB'), ('(', 'PUNCT'), ('Mapping', 'NOUN'), ('words', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Stemming', 'ROOT'), ('(', 'punct'), ('Mapping', 'compound'), ('words', 'dobj'), (' ', 'pobj')]

>> Bigrams: 
[[Stemming, (], [(, Mapping], [Mapping, words], [words,  ]]

>> Trigrams: 
[[Stemming, (, Mapping], [(, Mapping, words], [Mapping, words,  ]]

>> Noun Phrases are: 
[(Mapping words]

>> Named Entities are: 
[] 


================================ Paragraph 378 =================================

some base for, it has two methods, dictionary based stemming and Porter style stemming  

------------------- Sentence 1 -------------------

some base for 


>> Tokens are: 
[base] 

>> PoS Tags are: 
[('base', 'NOUN')] 

>> Dependency Tags are: 
[('base', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[some base]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

, it has two methods, dictionary based stemming and Porter style stemming   


>> Tokens are: 
[,, methods, ,, dictionary, based, stemming, Porter, style, stemming,  ] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('methods', 'NOUN'), (',', 'PUNCT'), ('dictionary', 'ADJ'), ('based', 'VERB'), ('stemming', 'NOUN'), ('Porter', 'PROPN'), ('style', 'NOUN'), ('stemming', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(',', 'punct'), ('methods', 'dobj'), (',', 'punct'), ('dictionary', 'amod'), ('based', 'amod'), ('stemming', 'nmod'), ('Porter', 'conj'), ('style', 'appos'), ('stemming', 'acl'), (' ', 'dobj')]

>> Bigrams: 
[[,, methods], [methods, ,], [,, dictionary], [dictionary, based], [based, stemming], [stemming, Porter], [Porter, style], [style, stemming], [stemming,  ]]

>> Trigrams: 
[[,, methods, ,], [methods, ,, dictionary], [,, dictionary, based], [dictionary, based, stemming], [based, stemming, Porter], [stemming, Porter, style], [Porter, style, stemming], [style, stemming,  ]]

>> Noun Phrases are: 
[it, two methods, dictionary based stemming and Porter style]

>> Named Entities are: 
[('two', 'CARDINAL')] 


================================ Paragraph 379 =================================

(Porter, 1980) [55]. Former one has higher accuracy but higher cost of implementation while  

------------------- Sentence 1 -------------------

(Porter, 1980) 


>> Tokens are: 
[(, Porter, ,, 1980, )] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('Porter', 'PROPN'), (',', 'PUNCT'), ('1980', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('Porter', 'ROOT'), (',', 'punct'), ('1980', 'npadvmod'), (')', 'punct')]

>> Bigrams: 
[[(, Porter], [Porter, ,], [,, 1980], [1980, )]]

>> Trigrams: 
[[(, Porter, ,], [Porter, ,, 1980], [,, 1980, )]]

>> Noun Phrases are: 
[(Porter]

>> Named Entities are: 
[('1980', 'DATE')] 

------------------- Sentence 2 -------------------

[55]. 


>> Tokens are: 
[[, 55, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('55', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('55', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 55], [55, ]], [], .]]

>> Trigrams: 
[[[, 55, ]], [55, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('55', 'CARDINAL')] 

------------------- Sentence 3 -------------------

Former one has higher accuracy but higher cost of implementation while   


>> Tokens are: 
[higher, accuracy, higher, cost, implementation,  ] 

>> PoS Tags are: 
[('higher', 'ADJ'), ('accuracy', 'NOUN'), ('higher', 'ADJ'), ('cost', 'NOUN'), ('implementation', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('higher', 'amod'), ('accuracy', 'dobj'), ('higher', 'amod'), ('cost', 'conj'), ('implementation', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[higher, accuracy], [accuracy, higher], [higher, cost], [cost, implementation], [implementation,  ]]

>> Trigrams: 
[[higher, accuracy, higher], [accuracy, higher, cost], [higher, cost, implementation], [cost, implementation,  ]]

>> Noun Phrases are: 
[Former one, higher accuracy, higher cost, implementation]

>> Named Entities are: 
[] 


================================ Paragraph 380 =================================

latter has lower implementation cost and is usually insufficient for IR). Compound or  

------------------- Sentence 1 -------------------

latter has lower implementation cost and is usually insufficient for IR). 


>> Tokens are: 
[lower, implementation, cost, usually, insufficient, IR, ), .] 

>> PoS Tags are: 
[('lower', 'ADJ'), ('implementation', 'NOUN'), ('cost', 'NOUN'), ('usually', 'ADV'), ('insufficient', 'ADJ'), ('IR', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('lower', 'amod'), ('implementation', 'compound'), ('cost', 'dobj'), ('usually', 'advmod'), ('insufficient', 'acomp'), ('IR', 'pobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[lower, implementation], [implementation, cost], [cost, usually], [usually, insufficient], [insufficient, IR], [IR, )], [), .]]

>> Trigrams: 
[[lower, implementation, cost], [implementation, cost, usually], [cost, usually, insufficient], [usually, insufficient, IR], [insufficient, IR, )], [IR, ), .]]

>> Noun Phrases are: 
[lower implementation cost, IR]

>> Named Entities are: 
[('IR', 'ORG')] 

------------------- Sentence 2 -------------------

Compound or   


>> Tokens are: 
[Compound,  ] 

>> PoS Tags are: 
[('Compound', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Compound', 'ROOT'), (' ', 'conj')]

>> Bigrams: 
[[Compound,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Compound]

>> Named Entities are: 
[] 


================================ Paragraph 381 =================================

Statistical Phrases (Compounds and statistical phrases index multi token units instead of  

------------------- Sentence 1 -------------------

Statistical Phrases (Compounds and statistical phrases index multi token units instead of   


>> Tokens are: 
[Statistical, Phrases, (, Compounds, statistical, phrases, index, multi, token, units, instead,  ] 

>> PoS Tags are: 
[('Statistical', 'PROPN'), ('Phrases', 'PROPN'), ('(', 'PUNCT'), ('Compounds', 'PROPN'), ('statistical', 'ADJ'), ('phrases', 'NOUN'), ('index', 'NOUN'), ('multi', 'ADJ'), ('token', 'ADJ'), ('units', 'NOUN'), ('instead', 'ADV'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Statistical', 'compound'), ('Phrases', 'ROOT'), ('(', 'punct'), ('Compounds', 'appos'), ('statistical', 'amod'), ('phrases', 'compound'), ('index', 'nmod'), ('multi', 'amod'), ('token', 'amod'), ('units', 'appos'), ('instead', 'advmod'), (' ', 'appos')]

>> Bigrams: 
[[Statistical, Phrases], [Phrases, (], [(, Compounds], [Compounds, statistical], [statistical, phrases], [phrases, index], [index, multi], [multi, token], [token, units], [units, instead], [instead,  ]]

>> Trigrams: 
[[Statistical, Phrases, (], [Phrases, (, Compounds], [(, Compounds, statistical], [Compounds, statistical, phrases], [statistical, phrases, index], [phrases, index, multi], [index, multi, token], [multi, token, units], [token, units, instead], [units, instead,  ]]

>> Noun Phrases are: 
[Statistical Phrases, Compounds, statistical phrases index multi token units]

>> Named Entities are: 
[] 


================================ Paragraph 382 =================================

single tokens.) Word Sense Disambiguation (Word sense disambiguation is the task of  

------------------- Sentence 1 -------------------

single tokens.) 


>> Tokens are: 
[single, tokens, ., )] 

>> PoS Tags are: 
[('single', 'ADJ'), ('tokens', 'NOUN'), ('.', 'PUNCT'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('single', 'amod'), ('tokens', 'ROOT'), ('.', 'punct'), (')', 'punct')]

>> Bigrams: 
[[single, tokens], [tokens, .], [., )]]

>> Trigrams: 
[[single, tokens, .], [tokens, ., )]]

>> Noun Phrases are: 
[single tokens]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Word Sense Disambiguation (Word sense disambiguation is the task of   


>> Tokens are: 
[Word, Sense, Disambiguation, (, Word, sense, disambiguation, task,  ] 

>> PoS Tags are: 
[('Word', 'NOUN'), ('Sense', 'NOUN'), ('Disambiguation', 'PROPN'), ('(', 'PUNCT'), ('Word', 'PROPN'), ('sense', 'NOUN'), ('disambiguation', 'NOUN'), ('task', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Word', 'compound'), ('Sense', 'compound'), ('Disambiguation', 'ROOT'), ('(', 'punct'), ('Word', 'compound'), ('sense', 'compound'), ('disambiguation', 'nsubj'), ('task', 'attr'), (' ', 'pobj')]

>> Bigrams: 
[[Word, Sense], [Sense, Disambiguation], [Disambiguation, (], [(, Word], [Word, sense], [sense, disambiguation], [disambiguation, task], [task,  ]]

>> Trigrams: 
[[Word, Sense, Disambiguation], [Sense, Disambiguation, (], [Disambiguation, (, Word], [(, Word, sense], [Word, sense, disambiguation], [sense, disambiguation, task], [disambiguation, task,  ]]

>> Noun Phrases are: 
[Word Sense Disambiguation, Word sense disambiguation, the task]

>> Named Entities are: 
[] 


================================ Paragraph 383 =================================

understanding the correct sense of a word in context. When used for information retrieval,  

------------------- Sentence 1 -------------------

understanding the correct sense of a word in context. 


>> Tokens are: 
[understanding, correct, sense, word, context, .] 

>> PoS Tags are: 
[('understanding', 'VERB'), ('correct', 'ADJ'), ('sense', 'NOUN'), ('word', 'NOUN'), ('context', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('understanding', 'ROOT'), ('correct', 'amod'), ('sense', 'dobj'), ('word', 'pobj'), ('context', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[understanding, correct], [correct, sense], [sense, word], [word, context], [context, .]]

>> Trigrams: 
[[understanding, correct, sense], [correct, sense, word], [sense, word, context], [word, context, .]]

>> Noun Phrases are: 
[the correct sense, a word, context]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

When used for information retrieval,   


>> Tokens are: 
[information, retrieval, ,,  ] 

>> PoS Tags are: 
[('information', 'NOUN'), ('retrieval', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('information', 'compound'), ('retrieval', 'pobj'), (',', 'punct'), (' ', 'npadvmod')]

>> Bigrams: 
[[information, retrieval], [retrieval, ,], [,,  ]]

>> Trigrams: 
[[information, retrieval, ,], [retrieval, ,,  ]]

>> Noun Phrases are: 
[information retrieval]

>> Named Entities are: 
[] 


================================ Paragraph 384 =================================

terms are replaced by their senses in the document vector.)  

------------------- Sentence 1 -------------------

terms are replaced by their senses in the document vector.) 


>> Tokens are: 
[terms, replaced, senses, document, vector, ., )] 

>> PoS Tags are: 
[('terms', 'NOUN'), ('replaced', 'VERB'), ('senses', 'NOUN'), ('document', 'NOUN'), ('vector', 'NOUN'), ('.', 'PUNCT'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('terms', 'nsubjpass'), ('replaced', 'ROOT'), ('senses', 'pobj'), ('document', 'compound'), ('vector', 'pobj'), ('.', 'punct'), (')', 'punct')]

>> Bigrams: 
[[terms, replaced], [replaced, senses], [senses, document], [document, vector], [vector, .], [., )]]

>> Trigrams: 
[[terms, replaced, senses], [replaced, senses, document], [senses, document, vector], [document, vector, .], [vector, ., )]]

>> Noun Phrases are: 
[terms, their senses, the document vector]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 385 =================================

  

------------------- Sentence 1 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 386 =================================

Its extracted information can be applied on a variety of purpose, for example to prepare a  

------------------- Sentence 1 -------------------

Its extracted information can be applied on a variety of purpose, for example to prepare a   


>> Tokens are: 
[extracted, information, applied, variety, purpose, ,, example, prepare,  ] 

>> PoS Tags are: 
[('extracted', 'VERB'), ('information', 'NOUN'), ('applied', 'VERB'), ('variety', 'NOUN'), ('purpose', 'NOUN'), (',', 'PUNCT'), ('example', 'NOUN'), ('prepare', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('extracted', 'amod'), ('information', 'nsubjpass'), ('applied', 'ROOT'), ('variety', 'pobj'), ('purpose', 'pobj'), (',', 'punct'), ('example', 'pobj'), ('prepare', 'advcl'), (' ', 'dobj')]

>> Bigrams: 
[[extracted, information], [information, applied], [applied, variety], [variety, purpose], [purpose, ,], [,, example], [example, prepare], [prepare,  ]]

>> Trigrams: 
[[extracted, information, applied], [information, applied, variety], [applied, variety, purpose], [variety, purpose, ,], [purpose, ,, example], [,, example, prepare], [example, prepare,  ]]

>> Noun Phrases are: 
[Its extracted information, a variety, purpose, example]

>> Named Entities are: 
[] 


================================ Paragraph 387 =================================

summary, to build databases, identify keywords, classifying text items according to some pre- 

------------------- Sentence 1 -------------------

summary, to build databases, identify keywords, classifying text items according to some pre- 


>> Tokens are: 
[summary, ,, build, databases, ,, identify, keywords, ,, classifying, text, items, according, pre-] 

>> PoS Tags are: 
[('summary', 'NOUN'), (',', 'PUNCT'), ('build', 'VERB'), ('databases', 'NOUN'), (',', 'PUNCT'), ('identify', 'VERB'), ('keywords', 'NOUN'), (',', 'PUNCT'), ('classifying', 'VERB'), ('text', 'NOUN'), ('items', 'NOUN'), ('according', 'VERB'), ('pre-', 'NOUN')] 

>> Dependency Tags are: 
[('summary', 'ROOT'), (',', 'punct'), ('build', 'advcl'), ('databases', 'dobj'), (',', 'punct'), ('identify', 'xcomp'), ('keywords', 'dobj'), (',', 'punct'), ('classifying', 'advcl'), ('text', 'compound'), ('items', 'dobj'), ('according', 'prep'), ('pre-', 'pobj')]

>> Bigrams: 
[[summary, ,], [,, build], [build, databases], [databases, ,], [,, identify], [identify, keywords], [keywords, ,], [,, classifying], [classifying, text], [text, items], [items, according], [according, pre-]]

>> Trigrams: 
[[summary, ,, build], [,, build, databases], [build, databases, ,], [databases, ,, identify], [,, identify, keywords], [identify, keywords, ,], [keywords, ,, classifying], [,, classifying, text], [classifying, text, items], [text, items, according], [items, according, pre-]]

>> Noun Phrases are: 
[summary, databases, keywords, text items, some pre-]

>> Named Entities are: 
[] 


================================ Paragraph 388 =================================

defined categories etc. For example   CONSTRUE, it was developed for Reuters, that is used  

------------------- Sentence 1 -------------------

defined categories etc. 


>> Tokens are: 
[defined, categories, etc, .] 

>> PoS Tags are: 
[('defined', 'VERB'), ('categories', 'NOUN'), ('etc', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('defined', 'amod'), ('categories', 'ROOT'), ('etc', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[defined, categories], [categories, etc], [etc, .]]

>> Trigrams: 
[[defined, categories, etc], [categories, etc, .]]

>> Noun Phrases are: 
[defined categories]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

For example   CONSTRUE, it was developed for Reuters, that is used   


>> Tokens are: 
[example,   , CONSTRUE, ,, developed, Reuters, ,,  ] 

>> PoS Tags are: 
[('example', 'NOUN'), ('  ', 'SPACE'), ('CONSTRUE', 'NOUN'), (',', 'PUNCT'), ('developed', 'VERB'), ('Reuters', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('example', 'pobj'), ('  ', 'compound'), ('CONSTRUE', 'pobj'), (',', 'punct'), ('developed', 'ROOT'), ('Reuters', 'pobj'), (',', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[example,   ], [  , CONSTRUE], [CONSTRUE, ,], [,, developed], [developed, Reuters], [Reuters, ,], [,,  ]]

>> Trigrams: 
[[example,   , CONSTRUE], [  , CONSTRUE, ,], [CONSTRUE, ,, developed], [,, developed, Reuters], [developed, Reuters, ,], [Reuters, ,,  ]]

>> Noun Phrases are: 
[example,   CONSTRUE, it, Reuters]

>> Named Entities are: 
[('Reuters', 'ORG')] 


================================ Paragraph 389 =================================

in classifying news stories (Hayes, 1992) [57]. It has been suggested that many IE systems  

------------------- Sentence 1 -------------------

in classifying news stories (Hayes, 1992) 


>> Tokens are: 
[classifying, news, stories, (, Hayes, ,, 1992, )] 

>> PoS Tags are: 
[('classifying', 'VERB'), ('news', 'NOUN'), ('stories', 'NOUN'), ('(', 'PUNCT'), ('Hayes', 'PROPN'), (',', 'PUNCT'), ('1992', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('classifying', 'pcomp'), ('news', 'compound'), ('stories', 'dobj'), ('(', 'punct'), ('Hayes', 'appos'), (',', 'punct'), ('1992', 'npadvmod'), (')', 'punct')]

>> Bigrams: 
[[classifying, news], [news, stories], [stories, (], [(, Hayes], [Hayes, ,], [,, 1992], [1992, )]]

>> Trigrams: 
[[classifying, news, stories], [news, stories, (], [stories, (, Hayes], [(, Hayes, ,], [Hayes, ,, 1992], [,, 1992, )]]

>> Noun Phrases are: 
[news stories, Hayes]

>> Named Entities are: 
[('Hayes', 'PRODUCT'), ('1992', 'DATE')] 

------------------- Sentence 2 -------------------

[57]. 


>> Tokens are: 
[[, 57, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('57', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('57', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 57], [57, ]], [], .]]

>> Trigrams: 
[[[, 57, ]], [57, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('57', 'CARDINAL')] 

------------------- Sentence 3 -------------------

It has been suggested that many IE systems   


>> Tokens are: 
[suggested, IE, systems,  ] 

>> PoS Tags are: 
[('suggested', 'VERB'), ('IE', 'PROPN'), ('systems', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('suggested', 'ROOT'), ('IE', 'nsubj'), ('systems', 'ccomp'), (' ', 'dobj')]

>> Bigrams: 
[[suggested, IE], [IE, systems], [systems,  ]]

>> Trigrams: 
[[suggested, IE, systems], [IE, systems,  ]]

>> Noun Phrases are: 
[It, many IE]

>> Named Entities are: 
[] 


================================ Paragraph 390 =================================

can successfully extract terms from documents, acquiring relations between the terms is still a  

------------------- Sentence 1 -------------------

can successfully extract terms from documents, acquiring relations between the terms is still a   


>> Tokens are: 
[successfully, extract, terms, documents, ,, acquiring, relations, terms,  ] 

>> PoS Tags are: 
[('successfully', 'ADV'), ('extract', 'VERB'), ('terms', 'NOUN'), ('documents', 'NOUN'), (',', 'PUNCT'), ('acquiring', 'VERB'), ('relations', 'NOUN'), ('terms', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('successfully', 'advmod'), ('extract', 'ROOT'), ('terms', 'dobj'), ('documents', 'pobj'), (',', 'punct'), ('acquiring', 'advcl'), ('relations', 'dobj'), ('terms', 'pobj'), (' ', 'attr')]

>> Bigrams: 
[[successfully, extract], [extract, terms], [terms, documents], [documents, ,], [,, acquiring], [acquiring, relations], [relations, terms], [terms,  ]]

>> Trigrams: 
[[successfully, extract, terms], [extract, terms, documents], [terms, documents, ,], [documents, ,, acquiring], [,, acquiring, relations], [acquiring, relations, terms], [relations, terms,  ]]

>> Noun Phrases are: 
[terms, documents, relations, the terms]

>> Named Entities are: 
[] 


================================ Paragraph 391 =================================

difficulty. PROMETHEE is a system that extracts lexico-syntactic patterns relative to a  

------------------- Sentence 1 -------------------

difficulty. 


>> Tokens are: 
[difficulty, .] 

>> PoS Tags are: 
[('difficulty', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('difficulty', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[difficulty, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[difficulty]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

PROMETHEE is a system that extracts lexico-syntactic patterns relative to a   


>> Tokens are: 
[PROMETHEE, system, extracts, lexico, -, syntactic, patterns, relative,  ] 

>> PoS Tags are: 
[('PROMETHEE', 'PROPN'), ('system', 'NOUN'), ('extracts', 'VERB'), ('lexico', 'ADJ'), ('-', 'PUNCT'), ('syntactic', 'ADJ'), ('patterns', 'NOUN'), ('relative', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('PROMETHEE', 'nsubj'), ('system', 'attr'), ('extracts', 'relcl'), ('lexico', 'amod'), ('-', 'punct'), ('syntactic', 'amod'), ('patterns', 'dobj'), ('relative', 'advmod'), (' ', 'pobj')]

>> Bigrams: 
[[PROMETHEE, system], [system, extracts], [extracts, lexico], [lexico, -], [-, syntactic], [syntactic, patterns], [patterns, relative], [relative,  ]]

>> Trigrams: 
[[PROMETHEE, system, extracts], [system, extracts, lexico], [extracts, lexico, -], [lexico, -, syntactic], [-, syntactic, patterns], [syntactic, patterns, relative], [patterns, relative,  ]]

>> Noun Phrases are: 
[PROMETHEE, a system, lexico-syntactic patterns]

>> Named Entities are: 
[] 


================================ Paragraph 392 =================================

specific conceptual relation (Morin,1999) [58]. IE systems should work at many levels, from  

------------------- Sentence 1 -------------------

specific conceptual relation (Morin,1999) [58]. 


>> Tokens are: 
[specific, conceptual, relation, (, Morin,1999, ), [, 58, ], .] 

>> PoS Tags are: 
[('specific', 'ADJ'), ('conceptual', 'ADJ'), ('relation', 'NOUN'), ('(', 'PUNCT'), ('Morin,1999', 'NOUN'), (')', 'PUNCT'), ('[', 'PUNCT'), ('58', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('specific', 'amod'), ('conceptual', 'amod'), ('relation', 'ROOT'), ('(', 'punct'), ('Morin,1999', 'appos'), (')', 'punct'), ('[', 'punct'), ('58', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[specific, conceptual], [conceptual, relation], [relation, (], [(, Morin,1999], [Morin,1999, )], [), [], [[, 58], [58, ]], [], .]]

>> Trigrams: 
[[specific, conceptual, relation], [conceptual, relation, (], [relation, (, Morin,1999], [(, Morin,1999, )], [Morin,1999, ), [], [), [, 58], [[, 58, ]], [58, ], .]]

>> Noun Phrases are: 
[specific conceptual relation, (Morin,1999]

>> Named Entities are: 
[('58', 'CARDINAL')] 

------------------- Sentence 2 -------------------

IE systems should work at many levels, from   


>> Tokens are: 
[IE, systems, work, levels, ,,  ] 

>> PoS Tags are: 
[('IE', 'PROPN'), ('systems', 'NOUN'), ('work', 'VERB'), ('levels', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('IE', 'compound'), ('systems', 'nsubj'), ('work', 'ROOT'), ('levels', 'pobj'), (',', 'punct'), (' ', 'pobj')]

>> Bigrams: 
[[IE, systems], [systems, work], [work, levels], [levels, ,], [,,  ]]

>> Trigrams: 
[[IE, systems, work], [systems, work, levels], [work, levels, ,], [levels, ,,  ]]

>> Noun Phrases are: 
[IE systems, many levels]

>> Named Entities are: 
[] 


================================ Paragraph 393 =================================

word recognition to discourse analysis at the level of the complete document. An application  

------------------- Sentence 1 -------------------

word recognition to discourse analysis at the level of the complete document. 


>> Tokens are: 
[word, recognition, discourse, analysis, level, complete, document, .] 

>> PoS Tags are: 
[('word', 'NOUN'), ('recognition', 'NOUN'), ('discourse', 'VERB'), ('analysis', 'NOUN'), ('level', 'NOUN'), ('complete', 'ADJ'), ('document', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('word', 'compound'), ('recognition', 'ROOT'), ('discourse', 'acl'), ('analysis', 'dobj'), ('level', 'pobj'), ('complete', 'amod'), ('document', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[word, recognition], [recognition, discourse], [discourse, analysis], [analysis, level], [level, complete], [complete, document], [document, .]]

>> Trigrams: 
[[word, recognition, discourse], [recognition, discourse, analysis], [discourse, analysis, level], [analysis, level, complete], [level, complete, document], [complete, document, .]]

>> Noun Phrases are: 
[word recognition, analysis, the level, the complete document]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

An application   


>> Tokens are: 
[application,  ] 

>> PoS Tags are: 
[('application', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('application', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[application,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[An application]

>> Named Entities are: 
[] 


================================ Paragraph 394 =================================

of the Blank Slate Language Processor (BSLP) (Bondale et al., 1999) [59] approach for the  

------------------- Sentence 1 -------------------

of the Blank Slate Language Processor (BSLP) (Bondale et al., 1999) 


>> Tokens are: 
[Blank, Slate, Language, Processor, (, BSLP, ), (, Bondale, et, al, ., ,, 1999, )] 

>> PoS Tags are: 
[('Blank', 'PROPN'), ('Slate', 'PROPN'), ('Language', 'PROPN'), ('Processor', 'PROPN'), ('(', 'PUNCT'), ('BSLP', 'PROPN'), (')', 'PUNCT'), ('(', 'PUNCT'), ('Bondale', 'PROPN'), ('et', 'NOUN'), ('al', 'PROPN'), ('.', 'PROPN'), (',', 'PUNCT'), ('1999', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Blank', 'compound'), ('Slate', 'compound'), ('Language', 'compound'), ('Processor', 'pobj'), ('(', 'punct'), ('BSLP', 'appos'), (')', 'punct'), ('(', 'punct'), ('Bondale', 'compound'), ('et', 'compound'), ('al', 'appos'), ('.', 'pobj'), (',', 'punct'), ('1999', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Blank, Slate], [Slate, Language], [Language, Processor], [Processor, (], [(, BSLP], [BSLP, )], [), (], [(, Bondale], [Bondale, et], [et, al], [al, .], [., ,], [,, 1999], [1999, )]]

>> Trigrams: 
[[Blank, Slate, Language], [Slate, Language, Processor], [Language, Processor, (], [Processor, (, BSLP], [(, BSLP, )], [BSLP, ), (], [), (, Bondale], [(, Bondale, et], [Bondale, et, al], [et, al, .], [al, ., ,], [., ,, 1999], [,, 1999, )]]

>> Noun Phrases are: 
[the Blank Slate Language Processor, (BSLP, (Bondale et al, .]

>> Named Entities are: 
[('the Blank Slate Language Processor', 'ORG'), ('1999', 'DATE')] 

------------------- Sentence 2 -------------------

[59] approach for the   


>> Tokens are: 
[[, 59, ], approach,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('59', 'NUM'), (']', 'PUNCT'), ('approach', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('59', 'nummod'), (']', 'compound'), ('approach', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[[, 59], [59, ]], [], approach], [approach,  ]]

>> Trigrams: 
[[[, 59, ]], [59, ], approach], [], approach,  ]]

>> Noun Phrases are: 
[[59] approach]

>> Named Entities are: 
[('59', 'CARDINAL')] 


================================ Paragraph 395 =================================

analysis of a real life natural language corpus that consists of responses to open-ended  

------------------- Sentence 1 -------------------

analysis of a real life natural language corpus that consists of responses to open-ended   


>> Tokens are: 
[analysis, real, life, natural, language, corpus, consists, responses, open, -, ended,  ] 

>> PoS Tags are: 
[('analysis', 'NOUN'), ('real', 'ADJ'), ('life', 'NOUN'), ('natural', 'ADJ'), ('language', 'NOUN'), ('corpus', 'NOUN'), ('consists', 'VERB'), ('responses', 'NOUN'), ('open', 'ADV'), ('-', 'PUNCT'), ('ended', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('analysis', 'ROOT'), ('real', 'amod'), ('life', 'nmod'), ('natural', 'amod'), ('language', 'compound'), ('corpus', 'pobj'), ('consists', 'relcl'), ('responses', 'pobj'), ('open', 'advmod'), ('-', 'punct'), ('ended', 'amod'), (' ', 'punct')]

>> Bigrams: 
[[analysis, real], [real, life], [life, natural], [natural, language], [language, corpus], [corpus, consists], [consists, responses], [responses, open], [open, -], [-, ended], [ended,  ]]

>> Trigrams: 
[[analysis, real, life], [real, life, natural], [life, natural, language], [natural, language, corpus], [language, corpus, consists], [corpus, consists, responses], [consists, responses, open], [responses, open, -], [open, -, ended], [-, ended,  ]]

>> Noun Phrases are: 
[analysis, a real life natural language corpus, responses]

>> Named Entities are: 
[] 


================================ Paragraph 396 =================================

questionnaires in the field of advertising.  

------------------- Sentence 1 -------------------

questionnaires in the field of advertising. 


>> Tokens are: 
[questionnaires, field, advertising, .] 

>> PoS Tags are: 
[('questionnaires', 'NOUN'), ('field', 'NOUN'), ('advertising', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('questionnaires', 'ROOT'), ('field', 'pobj'), ('advertising', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[questionnaires, field], [field, advertising], [advertising, .]]

>> Trigrams: 
[[questionnaires, field, advertising], [field, advertising, .]]

>> Noun Phrases are: 
[questionnaires, the field, advertising]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 397 =================================

There’s a system called MITA (Metlife’s Intelligent Text Analyzer) (Glasgow et al. (1998)  

------------------- Sentence 1 -------------------

There’s a system called MITA (Metlife’s Intelligent Text Analyzer) (Glasgow et al. 


>> Tokens are: 
[system, called, MITA, (, Metlife, Intelligent, Text, Analyzer, ), (, Glasgow, et, al, .] 

>> PoS Tags are: 
[('system', 'NOUN'), ('called', 'VERB'), ('MITA', 'PROPN'), ('(', 'PUNCT'), ('Metlife', 'PROPN'), ('Intelligent', 'PROPN'), ('Text', 'PROPN'), ('Analyzer', 'PROPN'), (')', 'PUNCT'), ('(', 'PUNCT'), ('Glasgow', 'PROPN'), ('et', 'NOUN'), ('al', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('system', 'attr'), ('called', 'acl'), ('MITA', 'oprd'), ('(', 'punct'), ('Metlife', 'poss'), ('Intelligent', 'compound'), ('Text', 'compound'), ('Analyzer', 'appos'), (')', 'punct'), ('(', 'punct'), ('Glasgow', 'compound'), ('et', 'compound'), ('al', 'dep'), ('.', 'punct')]

>> Bigrams: 
[[system, called], [called, MITA], [MITA, (], [(, Metlife], [Metlife, Intelligent], [Intelligent, Text], [Text, Analyzer], [Analyzer, )], [), (], [(, Glasgow], [Glasgow, et], [et, al], [al, .]]

>> Trigrams: 
[[system, called, MITA], [called, MITA, (], [MITA, (, Metlife], [(, Metlife, Intelligent], [Metlife, Intelligent, Text], [Intelligent, Text, Analyzer], [Text, Analyzer, )], [Analyzer, ), (], [), (, Glasgow], [(, Glasgow, et], [Glasgow, et, al], [et, al, .]]

>> Noun Phrases are: 
[a system, MITA, Metlife’s Intelligent Text Analyzer]

>> Named Entities are: 
[('MITA', 'PERSON'), ('Metlife’s', 'ORG'), ('Glasgow', 'PERSON')] 

------------------- Sentence 2 -------------------

(1998) 


>> Tokens are: 
[(, 1998, )] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('1998', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('1998', 'ROOT'), (')', 'punct')]

>> Bigrams: 
[[(, 1998], [1998, )]]

>> Trigrams: 
[[(, 1998, )]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1998', 'DATE')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 398 =================================

[60]) that extracts information from life insurance applications. Ahonen et al. (1998) [61]  

------------------- Sentence 1 -------------------

[60]) that extracts information from life insurance applications. 


>> Tokens are: 
[[, 60, ], ), extracts, information, life, insurance, applications, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('60', 'NUM'), (']', 'PUNCT'), (')', 'PUNCT'), ('extracts', 'VERB'), ('information', 'NOUN'), ('life', 'NOUN'), ('insurance', 'NOUN'), ('applications', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('60', 'ROOT'), (']', 'punct'), (')', 'punct'), ('extracts', 'relcl'), ('information', 'dobj'), ('life', 'compound'), ('insurance', 'compound'), ('applications', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[[, 60], [60, ]], [], )], [), extracts], [extracts, information], [information, life], [life, insurance], [insurance, applications], [applications, .]]

>> Trigrams: 
[[[, 60, ]], [60, ], )], [], ), extracts], [), extracts, information], [extracts, information, life], [information, life, insurance], [life, insurance, applications], [insurance, applications, .]]

>> Noun Phrases are: 
[information, life insurance applications]

>> Named Entities are: 
[('60', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Ahonen et al. 


>> Tokens are: 
[Ahonen, et, al, .] 

>> PoS Tags are: 
[('Ahonen', 'PROPN'), ('et', 'PROPN'), ('al', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Ahonen', 'compound'), ('et', 'compound'), ('al', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Ahonen, et], [et, al], [al, .]]

>> Trigrams: 
[[Ahonen, et, al], [et, al, .]]

>> Noun Phrases are: 
[Ahonen et al]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

(1998) 


>> Tokens are: 
[(, 1998, )] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('1998', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('1998', 'ROOT'), (')', 'punct')]

>> Bigrams: 
[[(, 1998], [1998, )]]

>> Trigrams: 
[[(, 1998, )]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1998', 'DATE')] 

------------------- Sentence 4 -------------------

[61]   


>> Tokens are: 
[[, 61, ],  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('61', 'NUM'), (']', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('61', 'nummod'), (']', 'punct'), (' ', 'ROOT')]

>> Bigrams: 
[[[, 61], [61, ]], [],  ]]

>> Trigrams: 
[[[, 61, ]], [61, ],  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('61', 'CARDINAL')] 


================================ Paragraph 399 =================================

suggested a mainstream framework for text mining that uses pragmatic and discourse level  

------------------- Sentence 1 -------------------

suggested a mainstream framework for text mining that uses pragmatic and discourse level   


>> Tokens are: 
[suggested, mainstream, framework, text, mining, uses, pragmatic, discourse, level,  ] 

>> PoS Tags are: 
[('suggested', 'VERB'), ('mainstream', 'ADJ'), ('framework', 'NOUN'), ('text', 'NOUN'), ('mining', 'NOUN'), ('uses', 'VERB'), ('pragmatic', 'ADJ'), ('discourse', 'ADJ'), ('level', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('suggested', 'ROOT'), ('mainstream', 'compound'), ('framework', 'dobj'), ('text', 'compound'), ('mining', 'pobj'), ('uses', 'relcl'), ('pragmatic', 'amod'), ('discourse', 'conj'), ('level', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[suggested, mainstream], [mainstream, framework], [framework, text], [text, mining], [mining, uses], [uses, pragmatic], [pragmatic, discourse], [discourse, level], [level,  ]]

>> Trigrams: 
[[suggested, mainstream, framework], [mainstream, framework, text], [framework, text, mining], [text, mining, uses], [mining, uses, pragmatic], [uses, pragmatic, discourse], [pragmatic, discourse, level], [discourse, level,  ]]

>> Noun Phrases are: 
[a mainstream framework, text mining, pragmatic and discourse level]

>> Named Entities are: 
[] 


================================ Paragraph 400 =================================

analyses of text.  

------------------- Sentence 1 -------------------

analyses of text. 


>> Tokens are: 
[analyses, text, .] 

>> PoS Tags are: 
[('analyses', 'NOUN'), ('text', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('analyses', 'ROOT'), ('text', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[analyses, text], [text, .]]

>> Trigrams: 
[[analyses, text, .]]

>> Noun Phrases are: 
[analyses, text]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 401 =================================

6.5 Summarization  

------------------- Sentence 1 -------------------

6.5 Summarization   


>> Tokens are: 
[6.5, Summarization,  ] 

>> PoS Tags are: 
[('6.5', 'NUM'), ('Summarization', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('6.5', 'nummod'), ('Summarization', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[6.5, Summarization], [Summarization,  ]]

>> Trigrams: 
[[6.5, Summarization,  ]]

>> Noun Phrases are: 
[6.5 Summarization]

>> Named Entities are: 
[('6.5', 'CARDINAL')] 


================================ Paragraph 402 =================================

Overload of information is the real thing in this digital age, and already our reach and access  

------------------- Sentence 1 -------------------

Overload of information is the real thing in this digital age, and already our reach and access   


>> Tokens are: 
[Overload, information, real, thing, digital, age, ,, reach, access,  ] 

>> PoS Tags are: 
[('Overload', 'NOUN'), ('information', 'NOUN'), ('real', 'ADJ'), ('thing', 'NOUN'), ('digital', 'ADJ'), ('age', 'NOUN'), (',', 'PUNCT'), ('reach', 'NOUN'), ('access', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Overload', 'nsubj'), ('information', 'pobj'), ('real', 'amod'), ('thing', 'attr'), ('digital', 'amod'), ('age', 'pobj'), (',', 'punct'), ('reach', 'conj'), ('access', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[Overload, information], [information, real], [real, thing], [thing, digital], [digital, age], [age, ,], [,, reach], [reach, access], [access,  ]]

>> Trigrams: 
[[Overload, information, real], [information, real, thing], [real, thing, digital], [thing, digital, age], [digital, age, ,], [age, ,, reach], [,, reach, access], [reach, access,  ]]

>> Noun Phrases are: 
[Overload, information, the real thing, this digital age, already our reach, access]

>> Named Entities are: 
[] 


================================ Paragraph 403 =================================

to knowledge and information exceeds our capacity to understand it. This trend is not slowing  

------------------- Sentence 1 -------------------

to knowledge and information exceeds our capacity to understand it. 


>> Tokens are: 
[knowledge, information, exceeds, capacity, understand, .] 

>> PoS Tags are: 
[('knowledge', 'NOUN'), ('information', 'NOUN'), ('exceeds', 'VERB'), ('capacity', 'NOUN'), ('understand', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('knowledge', 'pobj'), ('information', 'conj'), ('exceeds', 'ROOT'), ('capacity', 'dobj'), ('understand', 'acl'), ('.', 'punct')]

>> Bigrams: 
[[knowledge, information], [information, exceeds], [exceeds, capacity], [capacity, understand], [understand, .]]

>> Trigrams: 
[[knowledge, information, exceeds], [information, exceeds, capacity], [exceeds, capacity, understand], [capacity, understand, .]]

>> Noun Phrases are: 
[knowledge, information, our capacity, it]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

This trend is not slowing   


>> Tokens are: 
[trend, slowing,  ] 

>> PoS Tags are: 
[('trend', 'NOUN'), ('slowing', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('trend', 'nsubj'), ('slowing', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[trend, slowing], [slowing,  ]]

>> Trigrams: 
[[trend, slowing,  ]]

>> Noun Phrases are: 
[This trend]

>> Named Entities are: 
[] 


================================ Paragraph 404 =================================

down, so an ability to summarize the data while keeping the meaning intact is highly 

------------------- Sentence 1 -------------------

down, so an ability to summarize the data while keeping the meaning intact is highly 


>> Tokens are: 
[,, ability, summarize, data, keeping, meaning, intact, highly] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('ability', 'NOUN'), ('summarize', 'VERB'), ('data', 'NOUN'), ('keeping', 'VERB'), ('meaning', 'NOUN'), ('intact', 'ADJ'), ('highly', 'ADV')] 

>> Dependency Tags are: 
[(',', 'punct'), ('ability', 'nsubj'), ('summarize', 'acl'), ('data', 'dobj'), ('keeping', 'advcl'), ('meaning', 'dobj'), ('intact', 'oprd'), ('highly', 'advmod')]

>> Bigrams: 
[[,, ability], [ability, summarize], [summarize, data], [data, keeping], [keeping, meaning], [meaning, intact], [intact, highly]]

>> Trigrams: 
[[,, ability, summarize], [ability, summarize, data], [summarize, data, keeping], [data, keeping, meaning], [keeping, meaning, intact], [meaning, intact, highly]]

>> Noun Phrases are: 
[an ability, the data, the meaning]

>> Named Entities are: 
[] 


================================ Paragraph 405 =================================

required. This is important not just allowing us the ability to recognize the understand the  

------------------- Sentence 1 -------------------

required. 


>> Tokens are: 
[required, .] 

>> PoS Tags are: 
[('required', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('required', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[required, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

This is important not just allowing us the ability to recognize the understand the   


>> Tokens are: 
[important, allowing, ability, recognize, understand,  ] 

>> PoS Tags are: 
[('important', 'ADJ'), ('allowing', 'VERB'), ('ability', 'NOUN'), ('recognize', 'VERB'), ('understand', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('important', 'acomp'), ('allowing', 'advcl'), ('ability', 'ccomp'), ('recognize', 'acl'), ('understand', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[important, allowing], [allowing, ability], [ability, recognize], [recognize, understand], [understand,  ]]

>> Trigrams: 
[[important, allowing, ability], [allowing, ability, recognize], [ability, recognize, understand], [recognize, understand,  ]]

>> Noun Phrases are: 
[us, the understand]

>> Named Entities are: 
[] 


================================ Paragraph 406 =================================

important information for a large set of data, it is used to understand the deeper emotional  

------------------- Sentence 1 -------------------

important information for a large set of data, it is used to understand the deeper emotional   


>> Tokens are: 
[important, information, large, set, data, ,, understand, deeper, emotional,  ] 

>> PoS Tags are: 
[('important', 'ADJ'), ('information', 'NOUN'), ('large', 'ADJ'), ('set', 'NOUN'), ('data', 'NOUN'), (',', 'PUNCT'), ('understand', 'VERB'), ('deeper', 'ADJ'), ('emotional', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('important', 'amod'), ('information', 'nsubjpass'), ('large', 'amod'), ('set', 'pobj'), ('data', 'pobj'), (',', 'punct'), ('understand', 'xcomp'), ('deeper', 'advmod'), ('emotional', 'amod'), (' ', 'dobj')]

>> Bigrams: 
[[important, information], [information, large], [large, set], [set, data], [data, ,], [,, understand], [understand, deeper], [deeper, emotional], [emotional,  ]]

>> Trigrams: 
[[important, information, large], [information, large, set], [large, set, data], [set, data, ,], [data, ,, understand], [,, understand, deeper], [understand, deeper, emotional], [deeper, emotional,  ]]

>> Noun Phrases are: 
[important information, a large set, data, it]

>> Named Entities are: 
[] 


================================ Paragraph 407 =================================

meanings; For example, a company determine the general sentiment on social media and use  

------------------- Sentence 1 -------------------

meanings 


>> Tokens are: 
[meanings] 

>> PoS Tags are: 
[('meanings', 'NOUN')] 

>> Dependency Tags are: 
[('meanings', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[meanings]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

; For example, a company determine the general sentiment on social media and use   


>> Tokens are: 
[;, example, ,, company, determine, general, sentiment, social, media, use,  ] 

>> PoS Tags are: 
[(';', 'PUNCT'), ('example', 'NOUN'), (',', 'PUNCT'), ('company', 'NOUN'), ('determine', 'VERB'), ('general', 'ADJ'), ('sentiment', 'NOUN'), ('social', 'ADJ'), ('media', 'NOUN'), ('use', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(';', 'punct'), ('example', 'pobj'), (',', 'punct'), ('company', 'nsubj'), ('determine', 'ROOT'), ('general', 'amod'), ('sentiment', 'dobj'), ('social', 'amod'), ('media', 'pobj'), ('use', 'conj'), (' ', 'dobj')]

>> Bigrams: 
[[;, example], [example, ,], [,, company], [company, determine], [determine, general], [general, sentiment], [sentiment, social], [social, media], [media, use], [use,  ]]

>> Trigrams: 
[[;, example, ,], [example, ,, company], [,, company, determine], [company, determine, general], [determine, general, sentiment], [general, sentiment, social], [sentiment, social, media], [social, media, use], [media, use,  ]]

>> Noun Phrases are: 
[example, a company, the general sentiment, social media]

>> Named Entities are: 
[] 


================================ Paragraph 408 =================================

it on their latest product offering. This application is useful as a valuable marketing asset.  

------------------- Sentence 1 -------------------

it on their latest product offering. 


>> Tokens are: 
[latest, product, offering, .] 

>> PoS Tags are: 
[('latest', 'ADJ'), ('product', 'NOUN'), ('offering', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('latest', 'amod'), ('product', 'compound'), ('offering', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[latest, product], [product, offering], [offering, .]]

>> Trigrams: 
[[latest, product, offering], [product, offering, .]]

>> Noun Phrases are: 
[it, their latest product offering]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

This application is useful as a valuable marketing asset. 


>> Tokens are: 
[application, useful, valuable, marketing, asset, .] 

>> PoS Tags are: 
[('application', 'NOUN'), ('useful', 'ADJ'), ('valuable', 'ADJ'), ('marketing', 'NOUN'), ('asset', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('application', 'nsubj'), ('useful', 'acomp'), ('valuable', 'amod'), ('marketing', 'compound'), ('asset', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[application, useful], [useful, valuable], [valuable, marketing], [marketing, asset], [asset, .]]

>> Trigrams: 
[[application, useful, valuable], [useful, valuable, marketing], [valuable, marketing, asset], [marketing, asset, .]]

>> Noun Phrases are: 
[This application, a valuable marketing asset]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 409 =================================

The types of text summarization depends on the basis of the number of documents and  the  

------------------- Sentence 1 -------------------

The types of text summarization depends on the basis of the number of documents and  the   


>> Tokens are: 
[types, text, summarization, depends, basis, number, documents,  ,  ] 

>> PoS Tags are: 
[('types', 'NOUN'), ('text', 'NOUN'), ('summarization', 'NOUN'), ('depends', 'VERB'), ('basis', 'NOUN'), ('number', 'NOUN'), ('documents', 'NOUN'), (' ', 'SPACE'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('types', 'nsubj'), ('text', 'compound'), ('summarization', 'pobj'), ('depends', 'ROOT'), ('basis', 'pobj'), ('number', 'pobj'), ('documents', 'pobj'), (' ', 'conj'), (' ', 'dobj')]

>> Bigrams: 
[[types, text], [text, summarization], [summarization, depends], [depends, basis], [basis, number], [number, documents], [documents,  ], [ ,  ]]

>> Trigrams: 
[[types, text, summarization], [text, summarization, depends], [summarization, depends, basis], [depends, basis, number], [basis, number, documents], [number, documents,  ], [documents,  ,  ]]

>> Noun Phrases are: 
[The types, text summarization, the basis, the number, documents]

>> Named Entities are: 
[] 


================================ Paragraph 410 =================================

two important categories are single document summarization and multi document  

------------------- Sentence 1 -------------------

two important categories are single document summarization and multi document   


>> Tokens are: 
[important, categories, single, document, summarization, multi, document,  ] 

>> PoS Tags are: 
[('important', 'ADJ'), ('categories', 'NOUN'), ('single', 'ADJ'), ('document', 'NOUN'), ('summarization', 'NOUN'), ('multi', 'ADJ'), ('document', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('important', 'amod'), ('categories', 'nsubj'), ('single', 'amod'), ('document', 'compound'), ('summarization', 'attr'), ('multi', 'amod'), ('document', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[important, categories], [categories, single], [single, document], [document, summarization], [summarization, multi], [multi, document], [document,  ]]

>> Trigrams: 
[[important, categories, single], [categories, single, document], [single, document, summarization], [document, summarization, multi], [summarization, multi, document], [multi, document,  ]]

>> Noun Phrases are: 
[two important categories, single document summarization, multi document]

>> Named Entities are: 
[('two', 'CARDINAL')] 


================================ Paragraph 411 =================================

summarization (Zajic et al. 2008 [62]; Fattah and Ren 2009 [63]). Summaries can also be of  

------------------- Sentence 1 -------------------

summarization (Zajic et al. 


>> Tokens are: 
[summarization, (, Zajic, et, al, .] 

>> PoS Tags are: 
[('summarization', 'NOUN'), ('(', 'PUNCT'), ('Zajic', 'PROPN'), ('et', 'NOUN'), ('al', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('summarization', 'ROOT'), ('(', 'punct'), ('Zajic', 'compound'), ('et', 'compound'), ('al', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[summarization, (], [(, Zajic], [Zajic, et], [et, al], [al, .]]

>> Trigrams: 
[[summarization, (, Zajic], [(, Zajic, et], [Zajic, et, al], [et, al, .]]

>> Noun Phrases are: 
[summarization, Zajic et al]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

2008 


>> Tokens are: 
[2008] 

>> PoS Tags are: 
[('2008', 'NUM')] 

>> Dependency Tags are: 
[('2008', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

[62]; Fattah and Ren 2009 [63]). 


>> Tokens are: 
[[, 62, ], ;, Fattah, Ren, 2009, [, 63, ], ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('62', 'NUM'), (']', 'PUNCT'), (';', 'PUNCT'), ('Fattah', 'PROPN'), ('Ren', 'PROPN'), ('2009', 'NUM'), ('[', 'PUNCT'), ('63', 'NUM'), (']', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('62', 'ROOT'), (']', 'punct'), (';', 'punct'), ('Fattah', 'appos'), ('Ren', 'conj'), ('2009', 'nummod'), ('[', 'punct'), ('63', 'appos'), (']', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 62], [62, ]], [], ;], [;, Fattah], [Fattah, Ren], [Ren, 2009], [2009, [], [[, 63], [63, ]], [], )], [), .]]

>> Trigrams: 
[[[, 62, ]], [62, ], ;], [], ;, Fattah], [;, Fattah, Ren], [Fattah, Ren, 2009], [Ren, 2009, [], [2009, [, 63], [[, 63, ]], [63, ], )], [], ), .]]

>> Noun Phrases are: 
[Fattah, Ren]

>> Named Entities are: 
[('62', 'CARDINAL'), ('Fattah', 'GPE'), ('63', 'CARDINAL')] 

------------------- Sentence 4 -------------------

Summaries can also be of   


>> Tokens are: 
[Summaries,  ] 

>> PoS Tags are: 
[('Summaries', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Summaries', 'nsubj'), (' ', 'pobj')]

>> Bigrams: 
[[Summaries,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Summaries]

>> Named Entities are: 
[] 


================================ Paragraph 412 =================================

two types: generic or query-focused (Gong and Liu 2001 [64]; Dunlavy et al. 2007 [65]; Wan  

------------------- Sentence 1 -------------------

two types: generic or query-focused (Gong and Liu 2001 [64]; Dunlavy et al. 


>> Tokens are: 
[types, :, generic, query, -, focused, (, Gong, Liu, 2001, [, 64, ], ;, Dunlavy, et, al, .] 

>> PoS Tags are: 
[('types', 'NOUN'), (':', 'PUNCT'), ('generic', 'ADJ'), ('query', 'NOUN'), ('-', 'PUNCT'), ('focused', 'VERB'), ('(', 'PUNCT'), ('Gong', 'PROPN'), ('Liu', 'PROPN'), ('2001', 'NUM'), ('[', 'PUNCT'), ('64', 'NUM'), (']', 'PUNCT'), (';', 'PUNCT'), ('Dunlavy', 'PROPN'), ('et', 'NOUN'), ('al', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('types', 'ROOT'), (':', 'punct'), ('generic', 'amod'), ('query', 'conj'), ('-', 'punct'), ('focused', 'amod'), ('(', 'punct'), ('Gong', 'appos'), ('Liu', 'conj'), ('2001', 'npadvmod'), ('[', 'punct'), ('64', 'appos'), (']', 'punct'), (';', 'punct'), ('Dunlavy', 'compound'), ('et', 'compound'), ('al', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[types, :], [:, generic], [generic, query], [query, -], [-, focused], [focused, (], [(, Gong], [Gong, Liu], [Liu, 2001], [2001, [], [[, 64], [64, ]], [], ;], [;, Dunlavy], [Dunlavy, et], [et, al], [al, .]]

>> Trigrams: 
[[types, :, generic], [:, generic, query], [generic, query, -], [query, -, focused], [-, focused, (], [focused, (, Gong], [(, Gong, Liu], [Gong, Liu, 2001], [Liu, 2001, [], [2001, [, 64], [[, 64, ]], [64, ], ;], [], ;, Dunlavy], [;, Dunlavy, et], [Dunlavy, et, al], [et, al, .]]

>> Noun Phrases are: 
[two types, generic or query-focused (Gong, Liu, Dunlavy et al]

>> Named Entities are: 
[('two', 'CARDINAL'), ('2001', 'DATE'), ('64', 'CARDINAL')] 

------------------- Sentence 2 -------------------

2007 


>> Tokens are: 
[2007] 

>> PoS Tags are: 
[('2007', 'NUM')] 

>> Dependency Tags are: 
[('2007', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2007', 'DATE')] 

------------------- Sentence 3 -------------------

[65]; 


>> Tokens are: 
[[, 65, ], ;] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('65', 'NUM'), (']', 'PUNCT'), (';', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('65', 'ROOT'), (']', 'punct'), (';', 'punct')]

>> Bigrams: 
[[[, 65], [65, ]], [], ;]]

>> Trigrams: 
[[[, 65, ]], [65, ], ;]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('65', 'CARDINAL')] 

------------------- Sentence 4 -------------------

Wan   


>> Tokens are: 
[Wan,  ] 

>> PoS Tags are: 
[('Wan', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Wan', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Wan,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Wan]

>> Named Entities are: 
[('Wan  ', 'PERSON')] 


================================ Paragraph 413 =================================

2008 [66]; Ouyang et al. 2011 [67]). Summarization task can be either supervised or  

------------------- Sentence 1 -------------------

2008 [66]; 


>> Tokens are: 
[2008, [, 66, ], ;] 

>> PoS Tags are: 
[('2008', 'NUM'), ('[', 'PUNCT'), ('66', 'NUM'), (']', 'PUNCT'), (';', 'PUNCT')] 

>> Dependency Tags are: 
[('2008', 'ROOT'), ('[', 'punct'), ('66', 'prep'), (']', 'punct'), (';', 'punct')]

>> Bigrams: 
[[2008, [], [[, 66], [66, ]], [], ;]]

>> Trigrams: 
[[2008, [, 66], [[, 66, ]], [66, ], ;]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('66', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Ouyang et al. 


>> Tokens are: 
[Ouyang, et, al, .] 

>> PoS Tags are: 
[('Ouyang', 'PROPN'), ('et', 'NOUN'), ('al', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Ouyang', 'compound'), ('et', 'compound'), ('al', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Ouyang, et], [et, al], [al, .]]

>> Trigrams: 
[[Ouyang, et, al], [et, al, .]]

>> Noun Phrases are: 
[Ouyang et al]

>> Named Entities are: 
[('Ouyang', 'PERSON')] 

------------------- Sentence 3 -------------------

2011 [67]). 


>> Tokens are: 
[2011, [, 67, ], ), .] 

>> PoS Tags are: 
[('2011', 'NUM'), ('[', 'PUNCT'), ('67', 'NUM'), (']', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('2011', 'ROOT'), ('[', 'punct'), ('67', 'parataxis'), (']', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[2011, [], [[, 67], [67, ]], [], )], [), .]]

>> Trigrams: 
[[2011, [, 67], [[, 67, ]], [67, ], )], [], ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2011', 'DATE'), ('67', 'CARDINAL')] 

------------------- Sentence 4 -------------------

Summarization task can be either supervised or   


>> Tokens are: 
[Summarization, task, supervised,  ] 

>> PoS Tags are: 
[('Summarization', 'NOUN'), ('task', 'NOUN'), ('supervised', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Summarization', 'compound'), ('task', 'nsubjpass'), ('supervised', 'ROOT'), (' ', 'conj')]

>> Bigrams: 
[[Summarization, task], [task, supervised], [supervised,  ]]

>> Trigrams: 
[[Summarization, task, supervised], [task, supervised,  ]]

>> Noun Phrases are: 
[Summarization task]

>> Named Entities are: 
[] 


================================ Paragraph 414 =================================

unsupervised (Mani and Maybury 1999 [68]; Fattah and Ren 2009 [63]; Riedhammer et al.  

------------------- Sentence 1 -------------------

unsupervised (Mani and Maybury 1999 


>> Tokens are: 
[unsupervised, (, Mani, Maybury, 1999] 

>> PoS Tags are: 
[('unsupervised', 'ADJ'), ('(', 'PUNCT'), ('Mani', 'PROPN'), ('Maybury', 'PROPN'), ('1999', 'NUM')] 

>> Dependency Tags are: 
[('unsupervised', 'ROOT'), ('(', 'punct'), ('Mani', 'parataxis'), ('Maybury', 'conj'), ('1999', 'npadvmod')]

>> Bigrams: 
[[unsupervised, (], [(, Mani], [Mani, Maybury], [Maybury, 1999]]

>> Trigrams: 
[[unsupervised, (, Mani], [(, Mani, Maybury], [Mani, Maybury, 1999]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('Mani', 'PERSON'), ('1999', 'DATE')] 

------------------- Sentence 2 -------------------

[68]; Fattah and Ren 2009 [63]; Riedhammer et al. 


>> Tokens are: 
[[, 68, ], ;, Fattah, Ren, 2009, [, 63, ], ;, Riedhammer, et, al, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('68', 'NUM'), (']', 'PUNCT'), (';', 'PUNCT'), ('Fattah', 'PROPN'), ('Ren', 'PROPN'), ('2009', 'NUM'), ('[', 'PUNCT'), ('63', 'NUM'), (']', 'PUNCT'), (';', 'PUNCT'), ('Riedhammer', 'PROPN'), ('et', 'NOUN'), ('al', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('68', 'ROOT'), (']', 'punct'), (';', 'punct'), ('Fattah', 'appos'), ('Ren', 'conj'), ('2009', 'conj'), ('[', 'punct'), ('63', 'appos'), (']', 'punct'), (';', 'punct'), ('Riedhammer', 'compound'), ('et', 'compound'), ('al', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 68], [68, ]], [], ;], [;, Fattah], [Fattah, Ren], [Ren, 2009], [2009, [], [[, 63], [63, ]], [], ;], [;, Riedhammer], [Riedhammer, et], [et, al], [al, .]]

>> Trigrams: 
[[[, 68, ]], [68, ], ;], [], ;, Fattah], [;, Fattah, Ren], [Fattah, Ren, 2009], [Ren, 2009, [], [2009, [, 63], [[, 63, ]], [63, ], ;], [], ;, Riedhammer], [;, Riedhammer, et], [Riedhammer, et, al], [et, al, .]]

>> Noun Phrases are: 
[Fattah, Ren, Riedhammer et al]

>> Named Entities are: 
[('68', 'CARDINAL'), ('Fattah', 'GPE'), ('63', 'CARDINAL'), ('Riedhammer', 'PERSON')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 415 =================================

2010 [69]). Training data is required in a supervised system for selecting relevant material  

------------------- Sentence 1 -------------------

2010 [69]). 


>> Tokens are: 
[2010, [, 69, ], ), .] 

>> PoS Tags are: 
[('2010', 'NUM'), ('[', 'PUNCT'), ('69', 'NUM'), (']', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('2010', 'ROOT'), ('[', 'punct'), ('69', 'appos'), (']', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[2010, [], [[, 69], [69, ]], [], )], [), .]]

>> Trigrams: 
[[2010, [, 69], [[, 69, ]], [69, ], )], [], ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('69', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Training data is required in a supervised system for selecting relevant material   


>> Tokens are: 
[Training, data, required, supervised, system, selecting, relevant, material,  ] 

>> PoS Tags are: 
[('Training', 'NOUN'), ('data', 'NOUN'), ('required', 'VERB'), ('supervised', 'ADJ'), ('system', 'NOUN'), ('selecting', 'VERB'), ('relevant', 'ADJ'), ('material', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Training', 'compound'), ('data', 'nsubjpass'), ('required', 'ROOT'), ('supervised', 'amod'), ('system', 'pobj'), ('selecting', 'pcomp'), ('relevant', 'amod'), ('material', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[Training, data], [data, required], [required, supervised], [supervised, system], [system, selecting], [selecting, relevant], [relevant, material], [material,  ]]

>> Trigrams: 
[[Training, data, required], [data, required, supervised], [required, supervised, system], [supervised, system, selecting], [system, selecting, relevant], [selecting, relevant, material], [relevant, material,  ]]

>> Noun Phrases are: 
[Training data, a supervised system, relevant material]

>> Named Entities are: 
[] 


================================ Paragraph 416 =================================

from the documents. Large amount of annotated data is needed for learning techniques. Few  

------------------- Sentence 1 -------------------

from the documents. 


>> Tokens are: 
[documents, .] 

>> PoS Tags are: 
[('documents', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('documents', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[documents, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[the documents]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Large amount of annotated data is needed for learning techniques. 


>> Tokens are: 
[Large, annotated, data, needed, learning, techniques, .] 

>> PoS Tags are: 
[('Large', 'ADJ'), ('annotated', 'VERB'), ('data', 'NOUN'), ('needed', 'VERB'), ('learning', 'VERB'), ('techniques', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Large', 'amod'), ('annotated', 'amod'), ('data', 'pobj'), ('needed', 'ROOT'), ('learning', 'pcomp'), ('techniques', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Large, annotated], [annotated, data], [data, needed], [needed, learning], [learning, techniques], [techniques, .]]

>> Trigrams: 
[[Large, annotated, data], [annotated, data, needed], [data, needed, learning], [needed, learning, techniques], [learning, techniques, .]]

>> Noun Phrases are: 
[Large amount, annotated data, techniques]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Few   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 417 =================================

techniques are as follows–  

------------------- Sentence 1 -------------------

techniques are as follows–   


>> Tokens are: 
[techniques, follows, –,  ] 

>> PoS Tags are: 
[('techniques', 'NOUN'), ('follows', 'VERB'), ('–', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('techniques', 'nsubj'), ('follows', 'advcl'), ('–', 'punct'), (' ', 'attr')]

>> Bigrams: 
[[techniques, follows], [follows, –], [–,  ]]

>> Trigrams: 
[[techniques, follows, –], [follows, –,  ]]

>> Noun Phrases are: 
[techniques]

>> Named Entities are: 
[] 


================================ Paragraph 418 =================================

- Bayesian Sentence based Topic Model (BSTM) uses both term-sentences and term  document associations for summarizing multiple documents. (Wang et al. 2009  [70])    

------------------- Sentence 1 -------------------

- Bayesian Sentence based Topic Model (BSTM) uses both term-sentences and term  document associations for summarizing multiple documents. 


>> Tokens are: 
[-, Bayesian, Sentence, based, Topic, Model, (, BSTM, ), uses, term, -, sentences, term,  , document, associations, summarizing, multiple, documents, .] 

>> PoS Tags are: 
[('-', 'PUNCT'), ('Bayesian', 'PROPN'), ('Sentence', 'PROPN'), ('based', 'VERB'), ('Topic', 'PROPN'), ('Model', 'PROPN'), ('(', 'PUNCT'), ('BSTM', 'PROPN'), (')', 'PUNCT'), ('uses', 'VERB'), ('term', 'NOUN'), ('-', 'PUNCT'), ('sentences', 'NOUN'), ('term', 'NOUN'), (' ', 'SPACE'), ('document', 'NOUN'), ('associations', 'NOUN'), ('summarizing', 'VERB'), ('multiple', 'ADJ'), ('documents', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('-', 'punct'), ('Bayesian', 'nmod'), ('Sentence', 'npadvmod'), ('based', 'amod'), ('Topic', 'compound'), ('Model', 'nsubj'), ('(', 'punct'), ('BSTM', 'appos'), (')', 'punct'), ('uses', 'ROOT'), ('term', 'compound'), ('-', 'punct'), ('sentences', 'dobj'), ('term', 'compound'), (' ', 'conj'), ('document', 'compound'), ('associations', 'dobj'), ('summarizing', 'pcomp'), ('multiple', 'amod'), ('documents', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[-, Bayesian], [Bayesian, Sentence], [Sentence, based], [based, Topic], [Topic, Model], [Model, (], [(, BSTM], [BSTM, )], [), uses], [uses, term], [term, -], [-, sentences], [sentences, term], [term,  ], [ , document], [document, associations], [associations, summarizing], [summarizing, multiple], [multiple, documents], [documents, .]]

>> Trigrams: 
[[-, Bayesian, Sentence], [Bayesian, Sentence, based], [Sentence, based, Topic], [based, Topic, Model], [Topic, Model, (], [Model, (, BSTM], [(, BSTM, )], [BSTM, ), uses], [), uses, term], [uses, term, -], [term, -, sentences], [-, sentences, term], [sentences, term,  ], [term,  , document], [ , document, associations], [document, associations, summarizing], [associations, summarizing, multiple], [summarizing, multiple, documents], [multiple, documents, .]]

>> Noun Phrases are: 
[- Bayesian Sentence based Topic Model, BSTM, both term-sentences, document associations, multiple documents]

>> Named Entities are: 
[('Topic Model (BSTM', 'WORK_OF_ART')] 

------------------- Sentence 2 -------------------

(Wang et al. 


>> Tokens are: 
[(, Wang, et, al, .] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('Wang', 'PROPN'), ('et', 'NOUN'), ('al', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('Wang', 'compound'), ('et', 'compound'), ('al', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[(, Wang], [Wang, et], [et, al], [al, .]]

>> Trigrams: 
[[(, Wang, et], [Wang, et, al], [et, al, .]]

>> Noun Phrases are: 
[(Wang et al]

>> Named Entities are: 
[('Wang', 'PERSON')] 

------------------- Sentence 3 -------------------

2009  [70]) 


>> Tokens are: 
[2009,  , [, 70, ], )] 

>> PoS Tags are: 
[('2009', 'NUM'), (' ', 'SPACE'), ('[', 'PUNCT'), ('70', 'NUM'), (']', 'PUNCT'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('2009', 'nummod'), (' ', 'ROOT'), ('[', 'punct'), ('70', 'appos'), (']', 'punct'), (')', 'punct')]

>> Bigrams: 
[[2009,  ], [ , [], [[, 70], [70, ]], [], )]]

>> Trigrams: 
[[2009,  , [], [ , [, 70], [[, 70, ]], [70, ], )]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2009', 'DATE'), ('70', 'CARDINAL')] 

------------------- Sentence 4 -------------------

    


>> Tokens are: 
[   ] 

>> PoS Tags are: 
[('   ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 419 =================================

- Factorization with Given Bases (FGB) is a language model where sentence bases  are the given bases and it utilizes document-term and sentence term matrices.  This approach groups and summarizes the documents simultaneously. (Wang et  al. 2011) [71])  

------------------- Sentence 1 -------------------

- Factorization with Given Bases (FGB) is a language model where sentence bases  are the given bases and it utilizes document-term and sentence term matrices. 


>> Tokens are: 
[-, Factorization, Given, Bases, (, FGB, ), language, model, sentence, bases,  , given, bases, utilizes, document, -, term, sentence, term, matrices, .] 

>> PoS Tags are: 
[('-', 'PUNCT'), ('Factorization', 'PROPN'), ('Given', 'PROPN'), ('Bases', 'PROPN'), ('(', 'PUNCT'), ('FGB', 'PROPN'), (')', 'PUNCT'), ('language', 'NOUN'), ('model', 'NOUN'), ('sentence', 'NOUN'), ('bases', 'NOUN'), (' ', 'SPACE'), ('given', 'VERB'), ('bases', 'NOUN'), ('utilizes', 'VERB'), ('document', 'NOUN'), ('-', 'PUNCT'), ('term', 'NOUN'), ('sentence', 'NOUN'), ('term', 'NOUN'), ('matrices', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('-', 'punct'), ('Factorization', 'nsubj'), ('Given', 'compound'), ('Bases', 'pobj'), ('(', 'punct'), ('FGB', 'appos'), (')', 'punct'), ('language', 'compound'), ('model', 'attr'), ('sentence', 'compound'), ('bases', 'nsubj'), (' ', 'appos'), ('given', 'amod'), ('bases', 'attr'), ('utilizes', 'conj'), ('document', 'nmod'), ('-', 'punct'), ('term', 'nmod'), ('sentence', 'compound'), ('term', 'conj'), ('matrices', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[-, Factorization], [Factorization, Given], [Given, Bases], [Bases, (], [(, FGB], [FGB, )], [), language], [language, model], [model, sentence], [sentence, bases], [bases,  ], [ , given], [given, bases], [bases, utilizes], [utilizes, document], [document, -], [-, term], [term, sentence], [sentence, term], [term, matrices], [matrices, .]]

>> Trigrams: 
[[-, Factorization, Given], [Factorization, Given, Bases], [Given, Bases, (], [Bases, (, FGB], [(, FGB, )], [FGB, ), language], [), language, model], [language, model, sentence], [model, sentence, bases], [sentence, bases,  ], [bases,  , given], [ , given, bases], [given, bases, utilizes], [bases, utilizes, document], [utilizes, document, -], [document, -, term], [-, term, sentence], [term, sentence, term], [sentence, term, matrices], [term, matrices, .]]

>> Noun Phrases are: 
[- Factorization, Given Bases, FGB, a language model, sentence bases, the given bases, it, document-term and sentence term matrices]

>> Named Entities are: 
[('FGB', 'ORG')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

This approach groups and summarizes the documents simultaneously. 


>> Tokens are: 
[approach, groups, summarizes, documents, simultaneously, .] 

>> PoS Tags are: 
[('approach', 'NOUN'), ('groups', 'NOUN'), ('summarizes', 'VERB'), ('documents', 'NOUN'), ('simultaneously', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('approach', 'compound'), ('groups', 'ROOT'), ('summarizes', 'conj'), ('documents', 'dobj'), ('simultaneously', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[approach, groups], [groups, summarizes], [summarizes, documents], [documents, simultaneously], [simultaneously, .]]

>> Trigrams: 
[[approach, groups, summarizes], [groups, summarizes, documents], [summarizes, documents, simultaneously], [documents, simultaneously, .]]

>> Noun Phrases are: 
[This approach groups, the documents]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

(Wang et   


>> Tokens are: 
[(, Wang, et,  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('Wang', 'PROPN'), ('et', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('Wang', 'ROOT'), ('et', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[(, Wang], [Wang, et], [et,  ]]

>> Trigrams: 
[[(, Wang, et], [Wang, et,  ]]

>> Noun Phrases are: 
[(Wang]

>> Named Entities are: 
[('Wang', 'ORG')] 

------------------- Sentence 5 -------------------

al. 2011) 


>> Tokens are: 
[al, ., 2011, )] 

>> PoS Tags are: 
[('al', 'PROPN'), ('.', 'PUNCT'), ('2011', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('al', 'ROOT'), ('.', 'punct'), ('2011', 'nummod'), (')', 'punct')]

>> Bigrams: 
[[al, .], [., 2011], [2011, )]]

>> Trigrams: 
[[al, ., 2011], [., 2011, )]]

>> Noun Phrases are: 
[al]

>> Named Entities are: 
[('2011', 'DATE')] 

------------------- Sentence 6 -------------------

[71]) 


>> Tokens are: 
[[, 71, ], )] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('71', 'NUM'), (']', 'PUNCT'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('71', 'ROOT'), (']', 'punct'), (')', 'punct')]

>> Bigrams: 
[[[, 71], [71, ]], [], )]]

>> Trigrams: 
[[[, 71, ]], [71, ], )]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('71', 'CARDINAL')] 

------------------- Sentence 7 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 420 =================================

- Topic Aspect-Oriented Summarization (TAOS) is based on topic factors. These  topic factors are various features that describe topics such as capital words are  used to represent entity. Various topics can have various aspects and various  preferences of features are used to represent various aspects. (Fang et al. 2015 [72])  

------------------- Sentence 1 -------------------

- Topic Aspect-Oriented Summarization (TAOS) is based on topic factors. 


>> Tokens are: 
[-, Topic, Aspect, -, Oriented, Summarization, (, TAOS, ), based, topic, factors, .] 

>> PoS Tags are: 
[('-', 'PUNCT'), ('Topic', 'NOUN'), ('Aspect', 'PROPN'), ('-', 'PUNCT'), ('Oriented', 'VERB'), ('Summarization', 'PROPN'), ('(', 'PUNCT'), ('TAOS', 'PROPN'), (')', 'PUNCT'), ('based', 'VERB'), ('topic', 'NOUN'), ('factors', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('-', 'punct'), ('Topic', 'compound'), ('Aspect', 'npadvmod'), ('-', 'punct'), ('Oriented', 'amod'), ('Summarization', 'nsubjpass'), ('(', 'punct'), ('TAOS', 'appos'), (')', 'punct'), ('based', 'ROOT'), ('topic', 'compound'), ('factors', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[-, Topic], [Topic, Aspect], [Aspect, -], [-, Oriented], [Oriented, Summarization], [Summarization, (], [(, TAOS], [TAOS, )], [), based], [based, topic], [topic, factors], [factors, .]]

>> Trigrams: 
[[-, Topic, Aspect], [Topic, Aspect, -], [Aspect, -, Oriented], [-, Oriented, Summarization], [Oriented, Summarization, (], [Summarization, (, TAOS], [(, TAOS, )], [TAOS, ), based], [), based, topic], [based, topic, factors], [topic, factors, .]]

>> Noun Phrases are: 
[- Topic Aspect-Oriented Summarization, TAOS, topic factors]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

These  topic factors are various features that describe topics such as capital words are  used to represent entity. 


>> Tokens are: 
[ , topic, factors, features, describe, topics, capital, words,  , represent, entity, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('topic', 'NOUN'), ('factors', 'NOUN'), ('features', 'NOUN'), ('describe', 'VERB'), ('topics', 'NOUN'), ('capital', 'NOUN'), ('words', 'NOUN'), (' ', 'SPACE'), ('represent', 'VERB'), ('entity', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('topic', 'compound'), ('factors', 'nsubj'), ('features', 'attr'), ('describe', 'relcl'), ('topics', 'dobj'), ('capital', 'compound'), ('words', 'pobj'), (' ', 'nsubjpass'), ('represent', 'xcomp'), ('entity', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[ , topic], [topic, factors], [factors, features], [features, describe], [describe, topics], [topics, capital], [capital, words], [words,  ], [ , represent], [represent, entity], [entity, .]]

>> Trigrams: 
[[ , topic, factors], [topic, factors, features], [factors, features, describe], [features, describe, topics], [describe, topics, capital], [topics, capital, words], [capital, words,  ], [words,  , represent], [ , represent, entity], [represent, entity, .]]

>> Noun Phrases are: 
[These  topic factors, various features, topics, capital words, entity]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Various topics can have various aspects and various  preferences of features are used to represent various aspects. 


>> Tokens are: 
[topics, aspects,  , preferences, features, represent, aspects, .] 

>> PoS Tags are: 
[('topics', 'NOUN'), ('aspects', 'NOUN'), (' ', 'SPACE'), ('preferences', 'NOUN'), ('features', 'NOUN'), ('represent', 'VERB'), ('aspects', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('topics', 'nsubj'), ('aspects', 'dobj'), (' ', 'compound'), ('preferences', 'conj'), ('features', 'pobj'), ('represent', 'xcomp'), ('aspects', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[topics, aspects], [aspects,  ], [ , preferences], [preferences, features], [features, represent], [represent, aspects], [aspects, .]]

>> Trigrams: 
[[topics, aspects,  ], [aspects,  , preferences], [ , preferences, features], [preferences, features, represent], [features, represent, aspects], [represent, aspects, .]]

>> Noun Phrases are: 
[Various topics, various aspects, various  preferences, features, various aspects]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

(Fang et al. 


>> Tokens are: 
[(, Fang, et, al, .] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('Fang', 'PROPN'), ('et', 'NOUN'), ('al', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('Fang', 'compound'), ('et', 'compound'), ('al', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[(, Fang], [Fang, et], [et, al], [al, .]]

>> Trigrams: 
[[(, Fang, et], [Fang, et, al], [et, al, .]]

>> Noun Phrases are: 
[(Fang et al]

>> Named Entities are: 
[] 

------------------- Sentence 5 -------------------

2015 


>> Tokens are: 
[2015] 

>> PoS Tags are: 
[('2015', 'NUM')] 

>> Dependency Tags are: 
[('2015', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2015', 'DATE')] 

------------------- Sentence 6 -------------------

[72]) 


>> Tokens are: 
[[, 72, ], )] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('72', 'NUM'), (']', 'PUNCT'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('72', 'ROOT'), (']', 'punct'), (')', 'punct')]

>> Bigrams: 
[[[, 72], [72, ]], [], )]]

>> Trigrams: 
[[[, 72, ]], [72, ], )]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('72', 'CARDINAL')] 

------------------- Sentence 7 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 421 =================================

  6.6 Dialogue System  

------------------- Sentence 1 -------------------

  6.6 Dialogue System   


>> Tokens are: 
[  , 6.6, Dialogue, System,  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('6.6', 'NUM'), ('Dialogue', 'PROPN'), ('System', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'nmod'), ('6.6', 'nummod'), ('Dialogue', 'compound'), ('System', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[  , 6.6], [6.6, Dialogue], [Dialogue, System], [System,  ]]

>> Trigrams: 
[[  , 6.6, Dialogue], [6.6, Dialogue, System], [Dialogue, System,  ]]

>> Noun Phrases are: 
[  6.6 Dialogue System]

>> Named Entities are: 
[('6.6', 'CARDINAL')] 


================================ Paragraph 422 =================================

Perhaps the most desirable application of the future, in the systems envisioned by large  

------------------- Sentence 1 -------------------

Perhaps the most desirable application of the future, in the systems envisioned by large   


>> Tokens are: 
[desirable, application, future, ,, systems, envisioned, large,  ] 

>> PoS Tags are: 
[('desirable', 'ADJ'), ('application', 'NOUN'), ('future', 'NOUN'), (',', 'PUNCT'), ('systems', 'NOUN'), ('envisioned', 'VERB'), ('large', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('desirable', 'amod'), ('application', 'ROOT'), ('future', 'pobj'), (',', 'punct'), ('systems', 'pobj'), ('envisioned', 'acl'), ('large', 'amod'), (' ', 'pobj')]

>> Bigrams: 
[[desirable, application], [application, future], [future, ,], [,, systems], [systems, envisioned], [envisioned, large], [large,  ]]

>> Trigrams: 
[[desirable, application, future], [application, future, ,], [future, ,, systems], [,, systems, envisioned], [systems, envisioned, large], [envisioned, large,  ]]

>> Noun Phrases are: 
[Perhaps the most desirable application, the future, the systems]

>> Named Entities are: 
[] 


================================ Paragraph 423 =================================

providers of end user applications, Dialogue systems, which focuses on a narrowly defined  

------------------- Sentence 1 -------------------

providers of end user applications, Dialogue systems, which focuses on a narrowly defined   


>> Tokens are: 
[providers, end, user, applications, ,, Dialogue, systems, ,, focuses, narrowly, defined,  ] 

>> PoS Tags are: 
[('providers', 'NOUN'), ('end', 'NOUN'), ('user', 'NOUN'), ('applications', 'NOUN'), (',', 'PUNCT'), ('Dialogue', 'PROPN'), ('systems', 'NOUN'), (',', 'PUNCT'), ('focuses', 'VERB'), ('narrowly', 'ADV'), ('defined', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('providers', 'ROOT'), ('end', 'compound'), ('user', 'compound'), ('applications', 'pobj'), (',', 'punct'), ('Dialogue', 'compound'), ('systems', 'appos'), (',', 'punct'), ('focuses', 'relcl'), ('narrowly', 'advmod'), ('defined', 'amod'), (' ', 'pobj')]

>> Bigrams: 
[[providers, end], [end, user], [user, applications], [applications, ,], [,, Dialogue], [Dialogue, systems], [systems, ,], [,, focuses], [focuses, narrowly], [narrowly, defined], [defined,  ]]

>> Trigrams: 
[[providers, end, user], [end, user, applications], [user, applications, ,], [applications, ,, Dialogue], [,, Dialogue, systems], [Dialogue, systems, ,], [systems, ,, focuses], [,, focuses, narrowly], [focuses, narrowly, defined], [narrowly, defined,  ]]

>> Noun Phrases are: 
[providers, end user applications, Dialogue systems]

>> Named Entities are: 
[] 


================================ Paragraph 424 =================================

applications (like refrigerator or home theater systems) currently uses the phonetic and lexical  

------------------- Sentence 1 -------------------

applications (like refrigerator or home theater systems) currently uses the phonetic and lexical   


>> Tokens are: 
[applications, (, like, refrigerator, home, theater, systems, ), currently, uses, phonetic, lexical,  ] 

>> PoS Tags are: 
[('applications', 'NOUN'), ('(', 'PUNCT'), ('like', 'ADP'), ('refrigerator', 'NOUN'), ('home', 'NOUN'), ('theater', 'NOUN'), ('systems', 'NOUN'), (')', 'PUNCT'), ('currently', 'ADV'), ('uses', 'VERB'), ('phonetic', 'ADJ'), ('lexical', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('applications', 'nsubj'), ('(', 'punct'), ('like', 'prep'), ('refrigerator', 'nmod'), ('home', 'compound'), ('theater', 'compound'), ('systems', 'pobj'), (')', 'punct'), ('currently', 'advmod'), ('uses', 'ROOT'), ('phonetic', 'dobj'), ('lexical', 'conj'), (' ', 'dobj')]

>> Bigrams: 
[[applications, (], [(, like], [like, refrigerator], [refrigerator, home], [home, theater], [theater, systems], [systems, )], [), currently], [currently, uses], [uses, phonetic], [phonetic, lexical], [lexical,  ]]

>> Trigrams: 
[[applications, (, like], [(, like, refrigerator], [like, refrigerator, home], [refrigerator, home, theater], [home, theater, systems], [theater, systems, )], [systems, ), currently], [), currently, uses], [currently, uses, phonetic], [uses, phonetic, lexical], [phonetic, lexical,  ]]

>> Noun Phrases are: 
[applications, refrigerator or home theater systems]

>> Named Entities are: 
[] 


================================ Paragraph 425 =================================

levels of language. It is believed that these dialogue systems when utilizing all levels of  

------------------- Sentence 1 -------------------

levels of language. 


>> Tokens are: 
[levels, language, .] 

>> PoS Tags are: 
[('levels', 'NOUN'), ('language', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('levels', 'ROOT'), ('language', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[levels, language], [language, .]]

>> Trigrams: 
[[levels, language, .]]

>> Noun Phrases are: 
[levels, language]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

It is believed that these dialogue systems when utilizing all levels of   


>> Tokens are: 
[believed, dialogue, systems, utilizing, levels,  ] 

>> PoS Tags are: 
[('believed', 'VERB'), ('dialogue', 'NOUN'), ('systems', 'NOUN'), ('utilizing', 'VERB'), ('levels', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('believed', 'ROOT'), ('dialogue', 'compound'), ('systems', 'ccomp'), ('utilizing', 'acl'), ('levels', 'dobj'), (' ', 'pobj')]

>> Bigrams: 
[[believed, dialogue], [dialogue, systems], [systems, utilizing], [utilizing, levels], [levels,  ]]

>> Trigrams: 
[[believed, dialogue, systems], [dialogue, systems, utilizing], [systems, utilizing, levels], [utilizing, levels,  ]]

>> Noun Phrases are: 
[It, all levels]

>> Named Entities are: 
[] 


================================ Paragraph 426 =================================

language processing offer potential for fully automated dialog systems. (Elizabeth D. Liddy,  

------------------- Sentence 1 -------------------

language processing offer potential for fully automated dialog systems. 


>> Tokens are: 
[language, processing, offer, potential, fully, automated, dialog, systems, .] 

>> PoS Tags are: 
[('language', 'NOUN'), ('processing', 'NOUN'), ('offer', 'VERB'), ('potential', 'NOUN'), ('fully', 'ADV'), ('automated', 'VERB'), ('dialog', 'NOUN'), ('systems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('language', 'compound'), ('processing', 'nsubj'), ('offer', 'ROOT'), ('potential', 'dobj'), ('fully', 'advmod'), ('automated', 'amod'), ('dialog', 'compound'), ('systems', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[language, processing], [processing, offer], [offer, potential], [potential, fully], [fully, automated], [automated, dialog], [dialog, systems], [systems, .]]

>> Trigrams: 
[[language, processing, offer], [processing, offer, potential], [offer, potential, fully], [potential, fully, automated], [fully, automated, dialog], [automated, dialog, systems], [dialog, systems, .]]

>> Noun Phrases are: 
[language processing, potential, fully automated dialog systems]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

(Elizabeth D. Liddy,   


>> Tokens are: 
[(, Elizabeth, D., Liddy, ,,  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('Elizabeth', 'PROPN'), ('D.', 'PROPN'), ('Liddy', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('Elizabeth', 'compound'), ('D.', 'compound'), ('Liddy', 'ROOT'), (',', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[(, Elizabeth], [Elizabeth, D.], [D., Liddy], [Liddy, ,], [,,  ]]

>> Trigrams: 
[[(, Elizabeth, D.], [Elizabeth, D., Liddy], [D., Liddy, ,], [Liddy, ,,  ]]

>> Noun Phrases are: 
[(Elizabeth D. Liddy]

>> Named Entities are: 
[('Elizabeth D. Liddy', 'PERSON')] 


================================ Paragraph 427 =================================

2001) [7]. Whether on text or via voice. This could lead to produce systems that can enable  

------------------- Sentence 1 -------------------

2001) 


>> Tokens are: 
[2001, )] 

>> PoS Tags are: 
[('2001', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('2001', 'ROOT'), (')', 'punct')]

>> Bigrams: 
[[2001, )]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2001', 'DATE')] 

------------------- Sentence 2 -------------------

[7]. 


>> Tokens are: 
[[, 7, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('7', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('7', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 7], [7, ]], [], .]]

>> Trigrams: 
[[[, 7, ]], [7, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Whether on text or via voice. 


>> Tokens are: 
[text, voice, .] 

>> PoS Tags are: 
[('text', 'NOUN'), ('voice', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('text', 'pobj'), ('voice', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[text, voice], [voice, .]]

>> Trigrams: 
[[text, voice, .]]

>> Noun Phrases are: 
[text, voice]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

This could lead to produce systems that can enable   


>> Tokens are: 
[lead, produce, systems, enable,  ] 

>> PoS Tags are: 
[('lead', 'VERB'), ('produce', 'VERB'), ('systems', 'NOUN'), ('enable', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('lead', 'ROOT'), ('produce', 'xcomp'), ('systems', 'dobj'), ('enable', 'relcl'), (' ', 'dobj')]

>> Bigrams: 
[[lead, produce], [produce, systems], [systems, enable], [enable,  ]]

>> Trigrams: 
[[lead, produce, systems], [produce, systems, enable], [systems, enable,  ]]

>> Noun Phrases are: 
[systems]

>> Named Entities are: 
[] 


================================ Paragraph 428 =================================

robots to interact with humans in natural languages. Examples like Google’s assistant,  

------------------- Sentence 1 -------------------

robots to interact with humans in natural languages. 


>> Tokens are: 
[robots, interact, humans, natural, languages, .] 

>> PoS Tags are: 
[('robots', 'NOUN'), ('interact', 'VERB'), ('humans', 'NOUN'), ('natural', 'ADJ'), ('languages', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('robots', 'ROOT'), ('interact', 'relcl'), ('humans', 'pobj'), ('natural', 'amod'), ('languages', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[robots, interact], [interact, humans], [humans, natural], [natural, languages], [languages, .]]

>> Trigrams: 
[[robots, interact, humans], [interact, humans, natural], [humans, natural, languages], [natural, languages, .]]

>> Noun Phrases are: 
[robots, humans, natural languages]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Examples like Google’s assistant,   


>> Tokens are: 
[Examples, like, Google, assistant, ,,  ] 

>> PoS Tags are: 
[('Examples', 'NOUN'), ('like', 'ADP'), ('Google', 'PROPN'), ('assistant', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Examples', 'ROOT'), ('like', 'prep'), ('Google', 'poss'), ('assistant', 'pobj'), (',', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Examples, like], [like, Google], [Google, assistant], [assistant, ,], [,,  ]]

>> Trigrams: 
[[Examples, like, Google], [like, Google, assistant], [Google, assistant, ,], [assistant, ,,  ]]

>> Noun Phrases are: 
[Examples, Google’s assistant]

>> Named Entities are: 
[] 


================================ Paragraph 429 =================================

Windows Cortana, Apple’s Siri and Amazon’s Alexa are the software and devices that follow  

------------------- Sentence 1 -------------------

Windows Cortana, Apple’s Siri and Amazon’s Alexa are the software and devices that follow   


>> Tokens are: 
[Windows, Cortana, ,, Apple, Siri, Amazon, Alexa, software, devices, follow,  ] 

>> PoS Tags are: 
[('Windows', 'PROPN'), ('Cortana', 'PROPN'), (',', 'PUNCT'), ('Apple', 'PROPN'), ('Siri', 'PROPN'), ('Amazon', 'PROPN'), ('Alexa', 'PROPN'), ('software', 'NOUN'), ('devices', 'NOUN'), ('follow', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Windows', 'compound'), ('Cortana', 'npadvmod'), (',', 'punct'), ('Apple', 'poss'), ('Siri', 'nmod'), ('Amazon', 'conj'), ('Alexa', 'nsubj'), ('software', 'attr'), ('devices', 'conj'), ('follow', 'relcl'), (' ', 'dobj')]

>> Bigrams: 
[[Windows, Cortana], [Cortana, ,], [,, Apple], [Apple, Siri], [Siri, Amazon], [Amazon, Alexa], [Alexa, software], [software, devices], [devices, follow], [follow,  ]]

>> Trigrams: 
[[Windows, Cortana, ,], [Cortana, ,, Apple], [,, Apple, Siri], [Apple, Siri, Amazon], [Siri, Amazon, Alexa], [Amazon, Alexa, software], [Alexa, software, devices], [software, devices, follow], [devices, follow,  ]]

>> Noun Phrases are: 
[Apple’s Siri and Amazon’s Alexa, the software, devices]

>> Named Entities are: 
[('Windows Cortana', 'PERSON'), ('Apple’s Siri', 'ORG'), ('Amazon’s', 'ORG'), ('Alexa', 'ORG')] 


================================ Paragraph 430 =================================

Dialogue systems.  

------------------- Sentence 1 -------------------

Dialogue systems. 


>> Tokens are: 
[Dialogue, systems, .] 

>> PoS Tags are: 
[('Dialogue', 'NOUN'), ('systems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Dialogue', 'compound'), ('systems', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Dialogue, systems], [systems, .]]

>> Trigrams: 
[[Dialogue, systems, .]]

>> Noun Phrases are: 
[Dialogue systems]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 431 =================================

6.7 Medicine  

------------------- Sentence 1 -------------------

6.7 Medicine   


>> Tokens are: 
[6.7, Medicine,  ] 

>> PoS Tags are: 
[('6.7', 'NUM'), ('Medicine', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('6.7', 'nummod'), ('Medicine', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[6.7, Medicine], [Medicine,  ]]

>> Trigrams: 
[[6.7, Medicine,  ]]

>> Noun Phrases are: 
[6.7 Medicine]

>> Named Entities are: 
[('6.7 Medicine', 'PERCENT')] 


================================ Paragraph 432 =================================

NLP is applied in medicine field as well. The Linguistic String Project-Medical Language  

------------------- Sentence 1 -------------------

NLP is applied in medicine field as well. 


>> Tokens are: 
[NLP, applied, medicine, field, .] 

>> PoS Tags are: 
[('NLP', 'PROPN'), ('applied', 'VERB'), ('medicine', 'NOUN'), ('field', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('NLP', 'nsubjpass'), ('applied', 'ROOT'), ('medicine', 'compound'), ('field', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[NLP, applied], [applied, medicine], [medicine, field], [field, .]]

>> Trigrams: 
[[NLP, applied, medicine], [applied, medicine, field], [medicine, field, .]]

>> Noun Phrases are: 
[NLP, medicine field]

>> Named Entities are: 
[('NLP', 'ORG')] 

------------------- Sentence 2 -------------------

The Linguistic String Project-Medical Language   


>> Tokens are: 
[Linguistic, String, Project, -, Medical, Language,  ] 

>> PoS Tags are: 
[('Linguistic', 'PROPN'), ('String', 'PROPN'), ('Project', 'PROPN'), ('-', 'PUNCT'), ('Medical', 'PROPN'), ('Language', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Linguistic', 'compound'), ('String', 'compound'), ('Project', 'compound'), ('-', 'punct'), ('Medical', 'compound'), ('Language', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[Linguistic, String], [String, Project], [Project, -], [-, Medical], [Medical, Language], [Language,  ]]

>> Trigrams: 
[[Linguistic, String, Project], [String, Project, -], [Project, -, Medical], [-, Medical, Language], [Medical, Language,  ]]

>> Noun Phrases are: 
[The Linguistic String Project-Medical Language]

>> Named Entities are: 
[('The Linguistic String Project-Medical Language', 'WORK_OF_ART')] 


================================ Paragraph 433 =================================

Processor is one the large scale projects of NLP in the field of medicine [74][75][76][77][78].  

------------------- Sentence 1 -------------------

Processor is one the large scale projects of NLP in the field of medicine [74][75][76][77][78]. 


>> Tokens are: 
[Processor, large, scale, projects, NLP, field, medicine, [, 74][75][76][77][78, ], .] 

>> PoS Tags are: 
[('Processor', 'PROPN'), ('large', 'ADJ'), ('scale', 'NOUN'), ('projects', 'NOUN'), ('NLP', 'NOUN'), ('field', 'NOUN'), ('medicine', 'NOUN'), ('[', 'PUNCT'), ('74][75][76][77][78', 'X'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Processor', 'nsubj'), ('large', 'amod'), ('scale', 'compound'), ('projects', 'attr'), ('NLP', 'pobj'), ('field', 'pobj'), ('medicine', 'pobj'), ('[', 'punct'), ('74][75][76][77][78', 'dep'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Processor, large], [large, scale], [scale, projects], [projects, NLP], [NLP, field], [field, medicine], [medicine, [], [[, 74][75][76][77][78], [74][75][76][77][78, ]], [], .]]

>> Trigrams: 
[[Processor, large, scale], [large, scale, projects], [scale, projects, NLP], [projects, NLP, field], [NLP, field, medicine], [field, medicine, [], [medicine, [, 74][75][76][77][78], [[, 74][75][76][77][78, ]], [74][75][76][77][78, ], .]]

>> Noun Phrases are: 
[Processor, one the large scale projects, NLP, the field, medicine]

>> Named Entities are: 
[('NLP', 'ORG')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 434 =================================

The LSP-MLP helps enabling physicians to extract and summarize information of any signs  

------------------- Sentence 1 -------------------

The LSP-MLP helps enabling physicians to extract and summarize information of any signs   


>> Tokens are: 
[LSP, -, MLP, helps, enabling, physicians, extract, summarize, information, signs,  ] 

>> PoS Tags are: 
[('LSP', 'PROPN'), ('-', 'PUNCT'), ('MLP', 'PROPN'), ('helps', 'VERB'), ('enabling', 'VERB'), ('physicians', 'NOUN'), ('extract', 'VERB'), ('summarize', 'VERB'), ('information', 'NOUN'), ('signs', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('LSP', 'compound'), ('-', 'punct'), ('MLP', 'nsubj'), ('helps', 'ROOT'), ('enabling', 'xcomp'), ('physicians', 'dobj'), ('extract', 'xcomp'), ('summarize', 'conj'), ('information', 'dobj'), ('signs', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[LSP, -], [-, MLP], [MLP, helps], [helps, enabling], [enabling, physicians], [physicians, extract], [extract, summarize], [summarize, information], [information, signs], [signs,  ]]

>> Trigrams: 
[[LSP, -, MLP], [-, MLP, helps], [MLP, helps, enabling], [helps, enabling, physicians], [enabling, physicians, extract], [physicians, extract, summarize], [extract, summarize, information], [summarize, information, signs], [information, signs,  ]]

>> Noun Phrases are: 
[The LSP-MLP, physicians, information, any signs]

>> Named Entities are: 
[] 


================================ Paragraph 435 =================================

or symptoms, drug dosage and response data with aim of identifying possible side effects of  

------------------- Sentence 1 -------------------

or symptoms, drug dosage and response data with aim of identifying possible side effects of   


>> Tokens are: 
[symptoms, ,, drug, dosage, response, data, aim, identifying, possible, effects,  ] 

>> PoS Tags are: 
[('symptoms', 'NOUN'), (',', 'PUNCT'), ('drug', 'NOUN'), ('dosage', 'NOUN'), ('response', 'NOUN'), ('data', 'NOUN'), ('aim', 'NOUN'), ('identifying', 'VERB'), ('possible', 'ADJ'), ('effects', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('symptoms', 'ROOT'), (',', 'punct'), ('drug', 'compound'), ('dosage', 'conj'), ('response', 'compound'), ('data', 'conj'), ('aim', 'pobj'), ('identifying', 'pcomp'), ('possible', 'amod'), ('effects', 'dobj'), (' ', 'pobj')]

>> Bigrams: 
[[symptoms, ,], [,, drug], [drug, dosage], [dosage, response], [response, data], [data, aim], [aim, identifying], [identifying, possible], [possible, effects], [effects,  ]]

>> Trigrams: 
[[symptoms, ,, drug], [,, drug, dosage], [drug, dosage, response], [dosage, response, data], [response, data, aim], [data, aim, identifying], [aim, identifying, possible], [identifying, possible, effects], [possible, effects,  ]]

>> Noun Phrases are: 
[or symptoms, drug dosage, response data, aim, possible side effects]

>> Named Entities are: 
[] 


================================ Paragraph 436 =================================

any medicine while highlighting or flagging data items [74]. The National Library of  

------------------- Sentence 1 -------------------

any medicine while highlighting or flagging data items [74]. 


>> Tokens are: 
[medicine, highlighting, flagging, data, items, [, 74, ], .] 

>> PoS Tags are: 
[('medicine', 'NOUN'), ('highlighting', 'VERB'), ('flagging', 'ADJ'), ('data', 'NOUN'), ('items', 'NOUN'), ('[', 'PUNCT'), ('74', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('medicine', 'ROOT'), ('highlighting', 'advcl'), ('flagging', 'amod'), ('data', 'compound'), ('items', 'conj'), ('[', 'punct'), ('74', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[medicine, highlighting], [highlighting, flagging], [flagging, data], [data, items], [items, [], [[, 74], [74, ]], [], .]]

>> Trigrams: 
[[medicine, highlighting, flagging], [highlighting, flagging, data], [flagging, data, items], [data, items, [], [items, [, 74], [[, 74, ]], [74, ], .]]

>> Noun Phrases are: 
[any medicine]

>> Named Entities are: 
[('74', 'CARDINAL')] 

------------------- Sentence 2 -------------------

The National Library of   


>> Tokens are: 
[National, Library,  ] 

>> PoS Tags are: 
[('National', 'PROPN'), ('Library', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('National', 'compound'), ('Library', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[National, Library], [Library,  ]]

>> Trigrams: 
[[National, Library,  ]]

>> Noun Phrases are: 
[The National Library]

>> Named Entities are: 
[('The National Library of  ', 'ORG')] 


================================ Paragraph 437 =================================

Medicine is developing The Specialist System [79][80][81][82][83]. It is expected to function  

------------------- Sentence 1 -------------------

Medicine is developing The Specialist System [79][80][81][82][83]. 


>> Tokens are: 
[Medicine, developing, Specialist, System, [, 79][80][81][82][83, ], .] 

>> PoS Tags are: 
[('Medicine', 'PROPN'), ('developing', 'VERB'), ('Specialist', 'PROPN'), ('System', 'PROPN'), ('[', 'PUNCT'), ('79][80][81][82][83', 'X'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Medicine', 'nsubj'), ('developing', 'ROOT'), ('Specialist', 'compound'), ('System', 'dobj'), ('[', 'punct'), ('79][80][81][82][83', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Medicine, developing], [developing, Specialist], [Specialist, System], [System, [], [[, 79][80][81][82][83], [79][80][81][82][83, ]], [], .]]

>> Trigrams: 
[[Medicine, developing, Specialist], [developing, Specialist, System], [Specialist, System, [], [System, [, 79][80][81][82][83], [[, 79][80][81][82][83, ]], [79][80][81][82][83, ], .]]

>> Noun Phrases are: 
[Medicine, The Specialist System]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

It is expected to function   


>> Tokens are: 
[expected, function,  ] 

>> PoS Tags are: 
[('expected', 'VERB'), ('function', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('expected', 'ROOT'), ('function', 'xcomp'), (' ', 'dobj')]

>> Bigrams: 
[[expected, function], [function,  ]]

>> Trigrams: 
[[expected, function,  ]]

>> Noun Phrases are: 
[It]

>> Named Entities are: 
[] 


================================ Paragraph 438 =================================

as Information Extraction tool for Biomedical Knowledge Bases, particularly Medline 

------------------- Sentence 1 -------------------

as Information Extraction tool for Biomedical Knowledge Bases, 


>> Tokens are: 
[Information, Extraction, tool, Biomedical, Knowledge, Bases, ,] 

>> PoS Tags are: 
[('Information', 'PROPN'), ('Extraction', 'PROPN'), ('tool', 'NOUN'), ('Biomedical', 'PROPN'), ('Knowledge', 'PROPN'), ('Bases', 'PROPN'), (',', 'PUNCT')] 

>> Dependency Tags are: 
[('Information', 'compound'), ('Extraction', 'compound'), ('tool', 'pobj'), ('Biomedical', 'compound'), ('Knowledge', 'compound'), ('Bases', 'pobj'), (',', 'punct')]

>> Bigrams: 
[[Information, Extraction], [Extraction, tool], [tool, Biomedical], [Biomedical, Knowledge], [Knowledge, Bases], [Bases, ,]]

>> Trigrams: 
[[Information, Extraction, tool], [Extraction, tool, Biomedical], [tool, Biomedical, Knowledge], [Biomedical, Knowledge, Bases], [Knowledge, Bases, ,]]

>> Noun Phrases are: 
[Information Extraction tool, Biomedical Knowledge Bases]

>> Named Entities are: 
[('Information Extraction', 'PRODUCT')] 

------------------- Sentence 2 -------------------

particularly Medline 


>> Tokens are: 
[particularly, Medline] 

>> PoS Tags are: 
[('particularly', 'ADV'), ('Medline', 'PROPN')] 

>> Dependency Tags are: 
[('particularly', 'advmod'), ('Medline', 'ROOT')]

>> Bigrams: 
[[particularly, Medline]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[particularly Medline]

>> Named Entities are: 
[('Medline', 'GPE')] 


================================ Paragraph 439 =================================

abstracts. The lexicon was created using MeSH (Medical Subject Headings), Dorland’s  

------------------- Sentence 1 -------------------

abstracts. 


>> Tokens are: 
[abstracts, .] 

>> PoS Tags are: 
[('abstracts', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('abstracts', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[abstracts, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[abstracts]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

The lexicon was created using MeSH (Medical Subject Headings), Dorland’s   


>> Tokens are: 
[lexicon, created, MeSH, (, Medical, Subject, Headings, ), ,, Dorland,  ] 

>> PoS Tags are: 
[('lexicon', 'NOUN'), ('created', 'VERB'), ('MeSH', 'PROPN'), ('(', 'PUNCT'), ('Medical', 'PROPN'), ('Subject', 'PROPN'), ('Headings', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('Dorland', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('lexicon', 'nsubjpass'), ('created', 'ROOT'), ('MeSH', 'dobj'), ('(', 'punct'), ('Medical', 'compound'), ('Subject', 'compound'), ('Headings', 'appos'), (')', 'punct'), (',', 'punct'), ('Dorland', 'npadvmod'), (' ', 'nummod')]

>> Bigrams: 
[[lexicon, created], [created, MeSH], [MeSH, (], [(, Medical], [Medical, Subject], [Subject, Headings], [Headings, )], [), ,], [,, Dorland], [Dorland,  ]]

>> Trigrams: 
[[lexicon, created, MeSH], [created, MeSH, (], [MeSH, (, Medical], [(, Medical, Subject], [Medical, Subject, Headings], [Subject, Headings, )], [Headings, ), ,], [), ,, Dorland], [,, Dorland,  ]]

>> Noun Phrases are: 
[The lexicon, MeSH, Medical Subject Headings]

>> Named Entities are: 
[('MeSH (Medical Subject Headings', 'ORG'), ('Dorland’s', 'ORG')] 


================================ Paragraph 440 =================================

Illustrated Medical Dictionary and general English Dictionaries. The Centre d’Informatique  

------------------- Sentence 1 -------------------

Illustrated Medical Dictionary and general English Dictionaries. 


>> Tokens are: 
[Illustrated, Medical, Dictionary, general, English, Dictionaries, .] 

>> PoS Tags are: 
[('Illustrated', 'PROPN'), ('Medical', 'PROPN'), ('Dictionary', 'PROPN'), ('general', 'ADJ'), ('English', 'PROPN'), ('Dictionaries', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Illustrated', 'compound'), ('Medical', 'compound'), ('Dictionary', 'ROOT'), ('general', 'amod'), ('English', 'compound'), ('Dictionaries', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Illustrated, Medical], [Medical, Dictionary], [Dictionary, general], [general, English], [English, Dictionaries], [Dictionaries, .]]

>> Trigrams: 
[[Illustrated, Medical, Dictionary], [Medical, Dictionary, general], [Dictionary, general, English], [general, English, Dictionaries], [English, Dictionaries, .]]

>> Noun Phrases are: 
[Illustrated Medical Dictionary, general English Dictionaries]

>> Named Entities are: 
[('Illustrated Medical Dictionary', 'ORG'), ('English Dictionaries', 'PERSON')] 

------------------- Sentence 2 -------------------

The Centre d’Informatique   


>> Tokens are: 
[Centre, d’Informatique,  ] 

>> PoS Tags are: 
[('Centre', 'PROPN'), ('d’Informatique', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Centre', 'nsubj'), ('d’Informatique', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Centre, d’Informatique], [d’Informatique,  ]]

>> Trigrams: 
[[Centre, d’Informatique,  ]]

>> Noun Phrases are: 
[The Centre]

>> Named Entities are: 
[] 


================================ Paragraph 441 =================================

Hospitaliere of the Hopital Cantonal de Geneve is working on an electronic archiving  

------------------- Sentence 1 -------------------

Hospitaliere of the Hopital Cantonal de Geneve is working on an electronic archiving   


>> Tokens are: 
[Hospitaliere, Hopital, Cantonal, de, Geneve, working, electronic, archiving,  ] 

>> PoS Tags are: 
[('Hospitaliere', 'PROPN'), ('Hopital', 'PROPN'), ('Cantonal', 'PROPN'), ('de', 'PROPN'), ('Geneve', 'PROPN'), ('working', 'VERB'), ('electronic', 'ADJ'), ('archiving', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Hospitaliere', 'nsubj'), ('Hopital', 'compound'), ('Cantonal', 'compound'), ('de', 'compound'), ('Geneve', 'pobj'), ('working', 'ROOT'), ('electronic', 'amod'), ('archiving', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Hospitaliere, Hopital], [Hopital, Cantonal], [Cantonal, de], [de, Geneve], [Geneve, working], [working, electronic], [electronic, archiving], [archiving,  ]]

>> Trigrams: 
[[Hospitaliere, Hopital, Cantonal], [Hopital, Cantonal, de], [Cantonal, de, Geneve], [de, Geneve, working], [Geneve, working, electronic], [working, electronic, archiving], [electronic, archiving,  ]]

>> Noun Phrases are: 
[Hospitaliere, the Hopital Cantonal de Geneve, an electronic archiving]

>> Named Entities are: 
[('the Hopital Cantonal de Geneve', 'ORG')] 


================================ Paragraph 442 =================================

environment with NLP features [84][85]. In first phase, patient records were archived . At  

------------------- Sentence 1 -------------------

environment with NLP features [84][85]. 


>> Tokens are: 
[environment, NLP, features, [, 84][85, ], .] 

>> PoS Tags are: 
[('environment', 'NOUN'), ('NLP', 'PROPN'), ('features', 'NOUN'), ('[', 'PUNCT'), ('84][85', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('environment', 'ROOT'), ('NLP', 'compound'), ('features', 'pobj'), ('[', 'punct'), ('84][85', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[environment, NLP], [NLP, features], [features, [], [[, 84][85], [84][85, ]], [], .]]

>> Trigrams: 
[[environment, NLP, features], [NLP, features, [], [features, [, 84][85], [[, 84][85, ]], [84][85, ], .]]

>> Noun Phrases are: 
[environment, NLP features]

>> Named Entities are: 
[('NLP', 'ORG')] 

------------------- Sentence 2 -------------------

In first phase, patient records were archived . 


>> Tokens are: 
[phase, ,, patient, records, archived, .] 

>> PoS Tags are: 
[('phase', 'NOUN'), (',', 'PUNCT'), ('patient', 'NOUN'), ('records', 'NOUN'), ('archived', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('phase', 'pobj'), (',', 'punct'), ('patient', 'compound'), ('records', 'nsubjpass'), ('archived', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[phase, ,], [,, patient], [patient, records], [records, archived], [archived, .]]

>> Trigrams: 
[[phase, ,, patient], [,, patient, records], [patient, records, archived], [records, archived, .]]

>> Noun Phrases are: 
[first phase, patient records]

>> Named Entities are: 
[('first', 'ORDINAL')] 

------------------- Sentence 3 -------------------

At   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'pobj')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 443 =================================

later stage the LSP-MLP has been adapted for French [86][87][88][89] , and finally , a proper  

------------------- Sentence 1 -------------------

later stage the LSP-MLP has been adapted for French [86][87][88][89] , and finally , a proper   


>> Tokens are: 
[later, stage, LSP, -, MLP, adapted, French, [, 86][87][88][89, ], ,, finally, ,, proper,  ] 

>> PoS Tags are: 
[('later', 'ADV'), ('stage', 'NOUN'), ('LSP', 'PROPN'), ('-', 'PUNCT'), ('MLP', 'PROPN'), ('adapted', 'VERB'), ('French', 'PROPN'), ('[', 'PUNCT'), ('86][87][88][89', 'X'), (']', 'PUNCT'), (',', 'PUNCT'), ('finally', 'ADV'), (',', 'PUNCT'), ('proper', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('later', 'advmod'), ('stage', 'dep'), ('LSP', 'npadvmod'), ('-', 'punct'), ('MLP', 'nsubjpass'), ('adapted', 'ROOT'), ('French', 'pobj'), ('[', 'punct'), ('86][87][88][89', 'appos'), (']', 'punct'), (',', 'punct'), ('finally', 'advmod'), (',', 'punct'), ('proper', 'amod'), (' ', 'punct')]

>> Bigrams: 
[[later, stage], [stage, LSP], [LSP, -], [-, MLP], [MLP, adapted], [adapted, French], [French, [], [[, 86][87][88][89], [86][87][88][89, ]], [], ,], [,, finally], [finally, ,], [,, proper], [proper,  ]]

>> Trigrams: 
[[later, stage, LSP], [stage, LSP, -], [LSP, -, MLP], [-, MLP, adapted], [MLP, adapted, French], [adapted, French, [], [French, [, 86][87][88][89], [[, 86][87][88][89, ]], [86][87][88][89, ], ,], [], ,, finally], [,, finally, ,], [finally, ,, proper], [,, proper,  ]]

>> Noun Phrases are: 
[MLP, French]

>> Named Entities are: 
[('French', 'NORP')] 


================================ Paragraph 444 =================================

NLP system called RECIT  [90][91][92][93] has been developed using a method called  

------------------- Sentence 1 -------------------

NLP system called RECIT   


>> Tokens are: 
[NLP, system, called, RECIT,  ] 

>> PoS Tags are: 
[('NLP', 'PROPN'), ('system', 'NOUN'), ('called', 'VERB'), ('RECIT', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('NLP', 'compound'), ('system', 'nsubj'), ('called', 'ROOT'), ('RECIT', 'oprd'), (' ', 'oprd')]

>> Bigrams: 
[[NLP, system], [system, called], [called, RECIT], [RECIT,  ]]

>> Trigrams: 
[[NLP, system, called], [system, called, RECIT], [called, RECIT,  ]]

>> Noun Phrases are: 
[NLP system, RECIT]

>> Named Entities are: 
[('NLP', 'ORG')] 

------------------- Sentence 2 -------------------

[90][91][92][93] has been developed using a method called   


>> Tokens are: 
[[, 90][91][92][93, ], developed, method, called,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('90][91][92][93', 'NOUN'), (']', 'PUNCT'), ('developed', 'VERB'), ('method', 'NOUN'), ('called', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('90][91][92][93', 'nsubjpass'), (']', 'punct'), ('developed', 'ROOT'), ('method', 'dobj'), ('called', 'acl'), (' ', 'oprd')]

>> Bigrams: 
[[[, 90][91][92][93], [90][91][92][93, ]], [], developed], [developed, method], [method, called], [called,  ]]

>> Trigrams: 
[[[, 90][91][92][93, ]], [90][91][92][93, ], developed], [], developed, method], [developed, method, called], [method, called,  ]]

>> Noun Phrases are: 
[90][91][92][93, a method]

>> Named Entities are: 
[] 


================================ Paragraph 445 =================================

Proximity Processing [94]. It’s task was to implement a robust and multilingual system able  

------------------- Sentence 1 -------------------

Proximity Processing [94]. 


>> Tokens are: 
[Proximity, Processing, [, 94, ], .] 

>> PoS Tags are: 
[('Proximity', 'PROPN'), ('Processing', 'PROPN'), ('[', 'PUNCT'), ('94', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Proximity', 'compound'), ('Processing', 'ROOT'), ('[', 'punct'), ('94', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Proximity, Processing], [Processing, [], [[, 94], [94, ]], [], .]]

>> Trigrams: 
[[Proximity, Processing, [], [Processing, [, 94], [[, 94, ]], [94, ], .]]

>> Noun Phrases are: 
[Proximity Processing]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

It’s task was to implement a robust and multilingual system able   


>> Tokens are: 
[task, implement, robust, multilingual, system, able,  ] 

>> PoS Tags are: 
[('task', 'NOUN'), ('implement', 'VERB'), ('robust', 'ADJ'), ('multilingual', 'ADJ'), ('system', 'NOUN'), ('able', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('task', 'attr'), ('implement', 'xcomp'), ('robust', 'amod'), ('multilingual', 'conj'), ('system', 'dobj'), ('able', 'advcl'), (' ', 'punct')]

>> Bigrams: 
[[task, implement], [implement, robust], [robust, multilingual], [multilingual, system], [system, able], [able,  ]]

>> Trigrams: 
[[task, implement, robust], [implement, robust, multilingual], [robust, multilingual, system], [multilingual, system, able], [system, able,  ]]

>> Noun Phrases are: 
[It, task, a robust and multilingual system]

>> Named Entities are: 
[] 


================================ Paragraph 446 =================================

to analyze/comprehend medical sentences, and to preserve a knowledge of free text into a  

------------------- Sentence 1 -------------------

to analyze/comprehend medical sentences, and to preserve a knowledge of free text into a   


>> Tokens are: 
[analyze, /, comprehend, medical, sentences, ,, preserve, knowledge, free, text,  ] 

>> PoS Tags are: 
[('analyze', 'VERB'), ('/', 'SYM'), ('comprehend', 'VERB'), ('medical', 'ADJ'), ('sentences', 'NOUN'), (',', 'PUNCT'), ('preserve', 'VERB'), ('knowledge', 'NOUN'), ('free', 'ADJ'), ('text', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('analyze', 'ROOT'), ('/', 'punct'), ('comprehend', 'dep'), ('medical', 'amod'), ('sentences', 'dobj'), (',', 'punct'), ('preserve', 'conj'), ('knowledge', 'dobj'), ('free', 'amod'), ('text', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[analyze, /], [/, comprehend], [comprehend, medical], [medical, sentences], [sentences, ,], [,, preserve], [preserve, knowledge], [knowledge, free], [free, text], [text,  ]]

>> Trigrams: 
[[analyze, /, comprehend], [/, comprehend, medical], [comprehend, medical, sentences], [medical, sentences, ,], [sentences, ,, preserve], [,, preserve, knowledge], [preserve, knowledge, free], [knowledge, free, text], [free, text,  ]]

>> Noun Phrases are: 
[medical sentences, a knowledge, free text]

>> Named Entities are: 
[] 


================================ Paragraph 447 =================================

language independent knowledge representation [95][96]. The Columbia university of New  

------------------- Sentence 1 -------------------

language independent knowledge representation [95][96]. 


>> Tokens are: 
[language, independent, knowledge, representation, [, 95][96, ], .] 

>> PoS Tags are: 
[('language', 'NOUN'), ('independent', 'ADJ'), ('knowledge', 'NOUN'), ('representation', 'NOUN'), ('[', 'X'), ('95][96', 'NOUN'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('language', 'nmod'), ('independent', 'amod'), ('knowledge', 'compound'), ('representation', 'ROOT'), ('[', 'punct'), ('95][96', 'npadvmod'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[language, independent], [independent, knowledge], [knowledge, representation], [representation, [], [[, 95][96], [95][96, ]], [], .]]

>> Trigrams: 
[[language, independent, knowledge], [independent, knowledge, representation], [knowledge, representation, [], [representation, [, 95][96], [[, 95][96, ]], [95][96, ], .]]

>> Noun Phrases are: 
[language independent knowledge representation]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

The Columbia university of New   


>> Tokens are: 
[Columbia, university, New,  ] 

>> PoS Tags are: 
[('Columbia', 'PROPN'), ('university', 'NOUN'), ('New', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Columbia', 'compound'), ('university', 'ROOT'), ('New', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Columbia, university], [university, New], [New,  ]]

>> Trigrams: 
[[Columbia, university, New], [university, New,  ]]

>> Noun Phrases are: 
[The Columbia university, New]

>> Named Entities are: 
[('Columbia', 'ORG')] 


================================ Paragraph 448 =================================

York has developed an NLP system called MEDLEE (MEDical Language Extraction and  

------------------- Sentence 1 -------------------

York has developed an NLP system called MEDLEE (MEDical Language Extraction and   


>> Tokens are: 
[York, developed, NLP, system, called, MEDLEE, (, MEDical, Language, Extraction,  ] 

>> PoS Tags are: 
[('York', 'PROPN'), ('developed', 'VERB'), ('NLP', 'PROPN'), ('system', 'NOUN'), ('called', 'VERB'), ('MEDLEE', 'PROPN'), ('(', 'PUNCT'), ('MEDical', 'PROPN'), ('Language', 'PROPN'), ('Extraction', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('York', 'nsubj'), ('developed', 'ROOT'), ('NLP', 'compound'), ('system', 'dobj'), ('called', 'acl'), ('MEDLEE', 'nmod'), ('(', 'punct'), ('MEDical', 'compound'), ('Language', 'compound'), ('Extraction', 'oprd'), (' ', 'conj')]

>> Bigrams: 
[[York, developed], [developed, NLP], [NLP, system], [system, called], [called, MEDLEE], [MEDLEE, (], [(, MEDical], [MEDical, Language], [Language, Extraction], [Extraction,  ]]

>> Trigrams: 
[[York, developed, NLP], [developed, NLP, system], [NLP, system, called], [system, called, MEDLEE], [called, MEDLEE, (], [MEDLEE, (, MEDical], [(, MEDical, Language], [MEDical, Language, Extraction], [Language, Extraction,  ]]

>> Noun Phrases are: 
[York, an NLP system, MEDLEE (MEDical Language Extraction]

>> Named Entities are: 
[('NLP', 'ORG'), ('MEDLEE', 'ORG')] 


================================ Paragraph 449 =================================

Encoding System) that identifies clinical information in narrative reports and transforms the  

------------------- Sentence 1 -------------------

Encoding System) that identifies clinical information in narrative reports and transforms the   


>> Tokens are: 
[Encoding, System, ), identifies, clinical, information, narrative, reports, transforms,  ] 

>> PoS Tags are: 
[('Encoding', 'PROPN'), ('System', 'PROPN'), (')', 'PUNCT'), ('identifies', 'VERB'), ('clinical', 'ADJ'), ('information', 'NOUN'), ('narrative', 'ADJ'), ('reports', 'NOUN'), ('transforms', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Encoding', 'ROOT'), ('System', 'dobj'), (')', 'punct'), ('identifies', 'relcl'), ('clinical', 'amod'), ('information', 'dobj'), ('narrative', 'amod'), ('reports', 'pobj'), ('transforms', 'conj'), (' ', 'dobj')]

>> Bigrams: 
[[Encoding, System], [System, )], [), identifies], [identifies, clinical], [clinical, information], [information, narrative], [narrative, reports], [reports, transforms], [transforms,  ]]

>> Trigrams: 
[[Encoding, System, )], [System, ), identifies], [), identifies, clinical], [identifies, clinical, information], [clinical, information, narrative], [information, narrative, reports], [narrative, reports, transforms], [reports, transforms,  ]]

>> Noun Phrases are: 
[Encoding, System, clinical information, narrative reports]

>> Named Entities are: 
[] 


================================ Paragraph 450 =================================

textual information into structured representation [97].  

------------------- Sentence 1 -------------------

textual information into structured representation [97]. 


>> Tokens are: 
[textual, information, structured, representation, [, 97, ], .] 

>> PoS Tags are: 
[('textual', 'ADJ'), ('information', 'NOUN'), ('structured', 'ADJ'), ('representation', 'NOUN'), ('[', 'PUNCT'), ('97', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('textual', 'amod'), ('information', 'ROOT'), ('structured', 'amod'), ('representation', 'pobj'), ('[', 'punct'), ('97', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[textual, information], [information, structured], [structured, representation], [representation, [], [[, 97], [97, ]], [], .]]

>> Trigrams: 
[[textual, information, structured], [information, structured, representation], [structured, representation, [], [representation, [, 97], [[, 97, ]], [97, ], .]]

>> Noun Phrases are: 
[textual information, structured representation]

>> Named Entities are: 
[('97', 'CARDINAL')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 451 =================================

7. Approaches  

------------------- Sentence 1 -------------------

7. 


>> Tokens are: 
[7, .] 

>> PoS Tags are: 
[('7', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('7', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[7, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('7', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Approaches   


>> Tokens are: 
[Approaches,  ] 

>> PoS Tags are: 
[('Approaches', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Approaches', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[Approaches,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 452 =================================

Rationalist approach or symbolic approach assume that crucial part of the knowledge in the  

------------------- Sentence 1 -------------------

Rationalist approach or symbolic approach assume that 


>> Tokens are: 
[Rationalist, approach, symbolic, approach, assume] 

>> PoS Tags are: 
[('Rationalist', 'ADJ'), ('approach', 'NOUN'), ('symbolic', 'ADJ'), ('approach', 'NOUN'), ('assume', 'VERB')] 

>> Dependency Tags are: 
[('Rationalist', 'amod'), ('approach', 'nsubj'), ('symbolic', 'amod'), ('approach', 'conj'), ('assume', 'ROOT')]

>> Bigrams: 
[[Rationalist, approach], [approach, symbolic], [symbolic, approach], [approach, assume]]

>> Trigrams: 
[[Rationalist, approach, symbolic], [approach, symbolic, approach], [symbolic, approach, assume]]

>> Noun Phrases are: 
[Rationalist approach, symbolic approach]

>> Named Entities are: 
[('Rationalist', 'ORG')] 

------------------- Sentence 2 -------------------

crucial part of the knowledge in the   


>> Tokens are: 
[crucial, knowledge,  ] 

>> PoS Tags are: 
[('crucial', 'ADJ'), ('knowledge', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('crucial', 'amod'), ('knowledge', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[crucial, knowledge], [knowledge,  ]]

>> Trigrams: 
[[crucial, knowledge,  ]]

>> Noun Phrases are: 
[crucial part, the knowledge]

>> Named Entities are: 
[] 


================================ Paragraph 453 =================================

human mind is not derived by the sense but is firm in advance, probably by genetic in  

------------------- Sentence 1 -------------------

human mind is not derived by the sense but is firm in advance, probably by genetic in   


>> Tokens are: 
[human, mind, derived, sense, firm, advance, ,, probably, genetic,  ] 

>> PoS Tags are: 
[('human', 'ADJ'), ('mind', 'NOUN'), ('derived', 'VERB'), ('sense', 'NOUN'), ('firm', 'ADJ'), ('advance', 'NOUN'), (',', 'PUNCT'), ('probably', 'ADV'), ('genetic', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('human', 'amod'), ('mind', 'nsubjpass'), ('derived', 'ROOT'), ('sense', 'pobj'), ('firm', 'acomp'), ('advance', 'pobj'), (',', 'punct'), ('probably', 'advmod'), ('genetic', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[human, mind], [mind, derived], [derived, sense], [sense, firm], [firm, advance], [advance, ,], [,, probably], [probably, genetic], [genetic,  ]]

>> Trigrams: 
[[human, mind, derived], [mind, derived, sense], [derived, sense, firm], [sense, firm, advance], [firm, advance, ,], [advance, ,, probably], [,, probably, genetic], [probably, genetic,  ]]

>> Noun Phrases are: 
[human mind, the sense, advance]

>> Named Entities are: 
[] 


================================ Paragraph 454 =================================

heritance. Noam Chomsky was the strongest advocate of this approach. It was trusted that  

------------------- Sentence 1 -------------------

heritance. 


>> Tokens are: 
[heritance, .] 

>> PoS Tags are: 
[('heritance', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('heritance', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[heritance, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[heritance]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Noam Chomsky was the strongest advocate of this approach. 


>> Tokens are: 
[Noam, Chomsky, strongest, advocate, approach, .] 

>> PoS Tags are: 
[('Noam', 'PROPN'), ('Chomsky', 'PROPN'), ('strongest', 'ADJ'), ('advocate', 'NOUN'), ('approach', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Noam', 'compound'), ('Chomsky', 'nsubj'), ('strongest', 'amod'), ('advocate', 'attr'), ('approach', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Noam, Chomsky], [Chomsky, strongest], [strongest, advocate], [advocate, approach], [approach, .]]

>> Trigrams: 
[[Noam, Chomsky, strongest], [Chomsky, strongest, advocate], [strongest, advocate, approach], [advocate, approach, .]]

>> Noun Phrases are: 
[Noam Chomsky, the strongest advocate, this approach]

>> Named Entities are: 
[('Noam Chomsky', 'PERSON')] 

------------------- Sentence 3 -------------------

It was trusted that   


>> Tokens are: 
[trusted,  ] 

>> PoS Tags are: 
[('trusted', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('trusted', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[trusted,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[It]

>> Named Entities are: 
[] 


================================ Paragraph 455 =================================

machine can be  made to function like human brain by giving some fundamental knowledge  

------------------- Sentence 1 -------------------

machine can be  made to function like human brain by giving some fundamental knowledge   


>> Tokens are: 
[machine,  , function, like, human, brain, giving, fundamental, knowledge,  ] 

>> PoS Tags are: 
[('machine', 'NOUN'), (' ', 'SPACE'), ('function', 'VERB'), ('like', 'ADP'), ('human', 'ADJ'), ('brain', 'NOUN'), ('giving', 'VERB'), ('fundamental', 'ADJ'), ('knowledge', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('machine', 'nsubjpass'), (' ', 'nsubjpass'), ('function', 'advcl'), ('like', 'prep'), ('human', 'amod'), ('brain', 'pobj'), ('giving', 'pcomp'), ('fundamental', 'amod'), ('knowledge', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[machine,  ], [ , function], [function, like], [like, human], [human, brain], [brain, giving], [giving, fundamental], [fundamental, knowledge], [knowledge,  ]]

>> Trigrams: 
[[machine,  , function], [ , function, like], [function, like, human], [like, human, brain], [human, brain, giving], [brain, giving, fundamental], [giving, fundamental, knowledge], [fundamental, knowledge,  ]]

>> Noun Phrases are: 
[machine, human brain, some fundamental knowledge]

>> Named Entities are: 
[] 


================================ Paragraph 456 =================================

and reasoning mechanism linguistics  knowledge is directly encoded in rule or other forms of  

------------------- Sentence 1 -------------------

and reasoning mechanism linguistics  knowledge is directly encoded in rule or other forms of   


>> Tokens are: 
[reasoning, mechanism, linguistics,  , knowledge, directly, encoded, rule, forms,  ] 

>> PoS Tags are: 
[('reasoning', 'VERB'), ('mechanism', 'NOUN'), ('linguistics', 'NOUN'), (' ', 'SPACE'), ('knowledge', 'NOUN'), ('directly', 'ADV'), ('encoded', 'VERB'), ('rule', 'NOUN'), ('forms', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('reasoning', 'amod'), ('mechanism', 'compound'), ('linguistics', 'dobj'), (' ', 'prep'), ('knowledge', 'nsubjpass'), ('directly', 'advmod'), ('encoded', 'ROOT'), ('rule', 'pobj'), ('forms', 'conj'), (' ', 'pobj')]

>> Bigrams: 
[[reasoning, mechanism], [mechanism, linguistics], [linguistics,  ], [ , knowledge], [knowledge, directly], [directly, encoded], [encoded, rule], [rule, forms], [forms,  ]]

>> Trigrams: 
[[reasoning, mechanism, linguistics], [mechanism, linguistics,  ], [linguistics,  , knowledge], [ , knowledge, directly], [knowledge, directly, encoded], [directly, encoded, rule], [encoded, rule, forms], [rule, forms,  ]]

>> Noun Phrases are: 
[mechanism linguistics, rule, other forms]

>> Named Entities are: 
[] 


================================ Paragraph 457 =================================

representation. This helps automatic process of natural languages. [98] Statistical and  

------------------- Sentence 1 -------------------

representation. 


>> Tokens are: 
[representation, .] 

>> PoS Tags are: 
[('representation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('representation', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[representation, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[representation]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

This helps automatic process of natural languages. 


>> Tokens are: 
[helps, automatic, process, natural, languages, .] 

>> PoS Tags are: 
[('helps', 'VERB'), ('automatic', 'ADJ'), ('process', 'NOUN'), ('natural', 'ADJ'), ('languages', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('helps', 'ROOT'), ('automatic', 'amod'), ('process', 'dobj'), ('natural', 'amod'), ('languages', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[helps, automatic], [automatic, process], [process, natural], [natural, languages], [languages, .]]

>> Trigrams: 
[[helps, automatic, process], [automatic, process, natural], [process, natural, languages], [natural, languages, .]]

>> Noun Phrases are: 
[automatic process, natural languages]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

[ 


>> Tokens are: 
[[] 

>> PoS Tags are: 
[('[', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

98] Statistical and   


>> Tokens are: 
[98, ], Statistical,  ] 

>> PoS Tags are: 
[('98', 'NUM'), (']', 'PUNCT'), ('Statistical', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('98', 'nummod'), (']', 'punct'), ('Statistical', 'ROOT'), (' ', 'conj')]

>> Bigrams: 
[[98, ]], [], Statistical], [Statistical,  ]]

>> Trigrams: 
[[98, ], Statistical], [], Statistical,  ]]

>> Noun Phrases are: 
[98] Statistical]

>> Named Entities are: 
[('98', 'CARDINAL')] 


================================ Paragraph 458 =================================

machine learning entail evolution of algorithms that allow a program to infer patterns. An  

------------------- Sentence 1 -------------------

machine learning entail evolution of algorithms that allow a program to infer patterns. 


>> Tokens are: 
[machine, learning, entail, evolution, algorithms, allow, program, infer, patterns, .] 

>> PoS Tags are: 
[('machine', 'NOUN'), ('learning', 'NOUN'), ('entail', 'NOUN'), ('evolution', 'NOUN'), ('algorithms', 'NOUN'), ('allow', 'VERB'), ('program', 'NOUN'), ('infer', 'VERB'), ('patterns', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('machine', 'compound'), ('learning', 'nsubj'), ('entail', 'compound'), ('evolution', 'ROOT'), ('algorithms', 'pobj'), ('allow', 'relcl'), ('program', 'nsubj'), ('infer', 'ccomp'), ('patterns', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[machine, learning], [learning, entail], [entail, evolution], [evolution, algorithms], [algorithms, allow], [allow, program], [program, infer], [infer, patterns], [patterns, .]]

>> Trigrams: 
[[machine, learning, entail], [learning, entail, evolution], [entail, evolution, algorithms], [evolution, algorithms, allow], [algorithms, allow, program], [allow, program, infer], [program, infer, patterns], [infer, patterns, .]]

>> Noun Phrases are: 
[machine learning, algorithms, a program, patterns]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

An   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 459 =================================

iterative process is used to characterize a given algorithm’s underlying algorithm that are  

------------------- Sentence 1 -------------------

iterative process is used to characterize a given algorithm’s underlying algorithm that are   


>> Tokens are: 
[iterative, process, characterize, given, algorithm, underlying, algorithm,  ] 

>> PoS Tags are: 
[('iterative', 'ADJ'), ('process', 'NOUN'), ('characterize', 'VERB'), ('given', 'VERB'), ('algorithm', 'NOUN'), ('underlying', 'VERB'), ('algorithm', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('iterative', 'amod'), ('process', 'nsubjpass'), ('characterize', 'xcomp'), ('given', 'amod'), ('algorithm', 'nmod'), ('underlying', 'amod'), ('algorithm', 'dobj'), (' ', 'attr')]

>> Bigrams: 
[[iterative, process], [process, characterize], [characterize, given], [given, algorithm], [algorithm, underlying], [underlying, algorithm], [algorithm,  ]]

>> Trigrams: 
[[iterative, process, characterize], [process, characterize, given], [characterize, given, algorithm], [given, algorithm, underlying], [algorithm, underlying, algorithm], [underlying, algorithm,  ]]

>> Noun Phrases are: 
[iterative process, a given algorithm’s underlying algorithm]

>> Named Entities are: 
[] 


================================ Paragraph 460 =================================

optimised by a numerical measure that characterize numerical parameters and learning phase.  

------------------- Sentence 1 -------------------

optimised by a numerical measure that characterize numerical parameters and learning phase. 


>> Tokens are: 
[optimised, numerical, measure, characterize, numerical, parameters, learning, phase, .] 

>> PoS Tags are: 
[('optimised', 'VERB'), ('numerical', 'ADJ'), ('measure', 'NOUN'), ('characterize', 'VERB'), ('numerical', 'ADJ'), ('parameters', 'NOUN'), ('learning', 'NOUN'), ('phase', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('optimised', 'ROOT'), ('numerical', 'amod'), ('measure', 'pobj'), ('characterize', 'relcl'), ('numerical', 'amod'), ('parameters', 'dobj'), ('learning', 'compound'), ('phase', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[optimised, numerical], [numerical, measure], [measure, characterize], [characterize, numerical], [numerical, parameters], [parameters, learning], [learning, phase], [phase, .]]

>> Trigrams: 
[[optimised, numerical, measure], [numerical, measure, characterize], [measure, characterize, numerical], [characterize, numerical, parameters], [numerical, parameters, learning], [parameters, learning, phase], [learning, phase, .]]

>> Noun Phrases are: 
[a numerical measure, numerical parameters, learning phase]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 461 =================================

Machine-learning models can be predominantly categorized as either generative or  

------------------- Sentence 1 -------------------

Machine-learning models can be predominantly categorized as either generative or   


>> Tokens are: 
[Machine, -, learning, models, predominantly, categorized, generative,  ] 

>> PoS Tags are: 
[('Machine', 'NOUN'), ('-', 'PUNCT'), ('learning', 'VERB'), ('models', 'NOUN'), ('predominantly', 'ADV'), ('categorized', 'VERB'), ('generative', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Machine', 'compound'), ('-', 'punct'), ('learning', 'compound'), ('models', 'nsubjpass'), ('predominantly', 'advmod'), ('categorized', 'ROOT'), ('generative', 'pobj'), (' ', 'conj')]

>> Bigrams: 
[[Machine, -], [-, learning], [learning, models], [models, predominantly], [predominantly, categorized], [categorized, generative], [generative,  ]]

>> Trigrams: 
[[Machine, -, learning], [-, learning, models], [learning, models, predominantly], [models, predominantly, categorized], [predominantly, categorized, generative], [categorized, generative,  ]]

>> Noun Phrases are: 
[Machine-learning models]

>> Named Entities are: 
[] 


================================ Paragraph 462 =================================

discriminative. Generative methods can generate synthetic data because of which they create  

------------------- Sentence 1 -------------------

discriminative. 


>> Tokens are: 
[discriminative, .] 

>> PoS Tags are: 
[('discriminative', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('discriminative', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[discriminative, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[discriminative]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Generative methods can generate synthetic data because of which they create   


>> Tokens are: 
[Generative, methods, generate, synthetic, data, create,  ] 

>> PoS Tags are: 
[('Generative', 'ADJ'), ('methods', 'NOUN'), ('generate', 'VERB'), ('synthetic', 'ADJ'), ('data', 'NOUN'), ('create', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Generative', 'amod'), ('methods', 'nsubj'), ('generate', 'ROOT'), ('synthetic', 'amod'), ('data', 'dobj'), ('create', 'pcomp'), (' ', 'dobj')]

>> Bigrams: 
[[Generative, methods], [methods, generate], [generate, synthetic], [synthetic, data], [data, create], [create,  ]]

>> Trigrams: 
[[Generative, methods, generate], [methods, generate, synthetic], [generate, synthetic, data], [synthetic, data, create], [data, create,  ]]

>> Noun Phrases are: 
[Generative methods, synthetic data, they]

>> Named Entities are: 
[] 


================================ Paragraph 463 =================================

rich models of probability distributions. Discriminative methods are more functional and  

------------------- Sentence 1 -------------------

rich models of probability distributions. 


>> Tokens are: 
[rich, models, probability, distributions, .] 

>> PoS Tags are: 
[('rich', 'ADJ'), ('models', 'NOUN'), ('probability', 'NOUN'), ('distributions', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('rich', 'amod'), ('models', 'ROOT'), ('probability', 'compound'), ('distributions', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[rich, models], [models, probability], [probability, distributions], [distributions, .]]

>> Trigrams: 
[[rich, models, probability], [models, probability, distributions], [probability, distributions, .]]

>> Noun Phrases are: 
[rich models, probability distributions]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Discriminative methods are more functional and   


>> Tokens are: 
[Discriminative, methods, functional,  ] 

>> PoS Tags are: 
[('Discriminative', 'ADJ'), ('methods', 'NOUN'), ('functional', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Discriminative', 'amod'), ('methods', 'nsubj'), ('functional', 'acomp'), (' ', 'punct')]

>> Bigrams: 
[[Discriminative, methods], [methods, functional], [functional,  ]]

>> Trigrams: 
[[Discriminative, methods, functional], [methods, functional,  ]]

>> Noun Phrases are: 
[Discriminative methods]

>> Named Entities are: 
[] 


================================ Paragraph 464 =================================

have right estimating posterior probabilities and are based on observations.   

------------------- Sentence 1 -------------------

have right estimating posterior probabilities and are based on observations. 


>> Tokens are: 
[right, estimating, posterior, probabilities, based, observations, .] 

>> PoS Tags are: 
[('right', 'ADJ'), ('estimating', 'VERB'), ('posterior', 'ADJ'), ('probabilities', 'NOUN'), ('based', 'VERB'), ('observations', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('right', 'advmod'), ('estimating', 'dobj'), ('posterior', 'amod'), ('probabilities', 'dobj'), ('based', 'conj'), ('observations', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[right, estimating], [estimating, posterior], [posterior, probabilities], [probabilities, based], [based, observations], [observations, .]]

>> Trigrams: 
[[right, estimating, posterior], [estimating, posterior, probabilities], [posterior, probabilities, based], [probabilities, based, observations], [based, observations, .]]

>> Noun Phrases are: 
[posterior probabilities, observations]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 465 =================================

Srihari [99] explains the different generative models as one with a resemblance that is used to  

------------------- Sentence 1 -------------------

Srihari [99] explains the different generative models as one with a resemblance that is used to   


>> Tokens are: 
[Srihari, [, 99, ], explains, different, generative, models, resemblance,  ] 

>> PoS Tags are: 
[('Srihari', 'PROPN'), ('[', 'PUNCT'), ('99', 'NUM'), (']', 'PUNCT'), ('explains', 'VERB'), ('different', 'ADJ'), ('generative', 'ADJ'), ('models', 'NOUN'), ('resemblance', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Srihari', 'nsubj'), ('[', 'punct'), ('99', 'appos'), (']', 'punct'), ('explains', 'ROOT'), ('different', 'amod'), ('generative', 'amod'), ('models', 'dobj'), ('resemblance', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Srihari, [], [[, 99], [99, ]], [], explains], [explains, different], [different, generative], [generative, models], [models, resemblance], [resemblance,  ]]

>> Trigrams: 
[[Srihari, [, 99], [[, 99, ]], [99, ], explains], [], explains, different], [explains, different, generative], [different, generative, models], [generative, models, resemblance], [models, resemblance,  ]]

>> Noun Phrases are: 
[Srihari, the different generative models, a resemblance]

>> Named Entities are: 
[('99', 'CARDINAL')] 


================================ Paragraph 466 =================================

spot an unknown speaker’s language and would bid the deep knowledge of numerous  

------------------- Sentence 1 -------------------

spot an unknown speaker’s language and would bid the deep knowledge of numerous   


>> Tokens are: 
[spot, unknown, speaker, language, bid, deep, knowledge, numerous,  ] 

>> PoS Tags are: 
[('spot', 'VERB'), ('unknown', 'ADJ'), ('speaker', 'NOUN'), ('language', 'NOUN'), ('bid', 'VERB'), ('deep', 'ADJ'), ('knowledge', 'NOUN'), ('numerous', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('spot', 'ROOT'), ('unknown', 'amod'), ('speaker', 'poss'), ('language', 'dobj'), ('bid', 'conj'), ('deep', 'amod'), ('knowledge', 'dobj'), ('numerous', 'amod'), (' ', 'pobj')]

>> Bigrams: 
[[spot, unknown], [unknown, speaker], [speaker, language], [language, bid], [bid, deep], [deep, knowledge], [knowledge, numerous], [numerous,  ]]

>> Trigrams: 
[[spot, unknown, speaker], [unknown, speaker, language], [speaker, language, bid], [language, bid, deep], [bid, deep, knowledge], [deep, knowledge, numerous], [knowledge, numerous,  ]]

>> Noun Phrases are: 
[an unknown speaker’s language, the deep knowledge]

>> Named Entities are: 
[] 


================================ Paragraph 467 =================================

language to perform the match. Whereas discriminative methods rely on a less knowledge- 

------------------- Sentence 1 -------------------

language to perform the match. 


>> Tokens are: 
[language, perform, match, .] 

>> PoS Tags are: 
[('language', 'NOUN'), ('perform', 'VERB'), ('match', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('language', 'ROOT'), ('perform', 'relcl'), ('match', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[language, perform], [perform, match], [match, .]]

>> Trigrams: 
[[language, perform, match], [perform, match, .]]

>> Noun Phrases are: 
[language, the match]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Whereas discriminative methods rely on a less knowledge- 


>> Tokens are: 
[discriminative, methods, rely, knowledge-] 

>> PoS Tags are: 
[('discriminative', 'ADJ'), ('methods', 'NOUN'), ('rely', 'VERB'), ('knowledge-', 'ADJ')] 

>> Dependency Tags are: 
[('discriminative', 'amod'), ('methods', 'nsubj'), ('rely', 'ROOT'), ('knowledge-', 'pobj')]

>> Bigrams: 
[[discriminative, methods], [methods, rely], [rely, knowledge-]]

>> Trigrams: 
[[discriminative, methods, rely], [methods, rely, knowledge-]]

>> Noun Phrases are: 
[discriminative methods]

>> Named Entities are: 
[] 


================================ Paragraph 468 =================================

intensive approach and using distinction between language.  Whereas generative models, can  

------------------- Sentence 1 -------------------

intensive approach and using distinction between language. 


>> Tokens are: 
[intensive, approach, distinction, language, .] 

>> PoS Tags are: 
[('intensive', 'ADJ'), ('approach', 'NOUN'), ('distinction', 'NOUN'), ('language', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('intensive', 'amod'), ('approach', 'ROOT'), ('distinction', 'dobj'), ('language', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[intensive, approach], [approach, distinction], [distinction, language], [language, .]]

>> Trigrams: 
[[intensive, approach, distinction], [approach, distinction, language], [distinction, language, .]]

>> Noun Phrases are: 
[intensive approach, distinction, language]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Whereas generative models, can   


>> Tokens are: 
[generative, models, ,,  ] 

>> PoS Tags are: 
[('generative', 'ADJ'), ('models', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('generative', 'amod'), ('models', 'pobj'), (',', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[generative, models], [models, ,], [,,  ]]

>> Trigrams: 
[[generative, models, ,], [models, ,,  ]]

>> Noun Phrases are: 
[generative models]

>> Named Entities are: 
[] 


================================ Paragraph 469 =================================

become troublesome when many features are used and discriminative models allow use of  

------------------- Sentence 1 -------------------

become troublesome when many features are used and discriminative models allow use of   


>> Tokens are: 
[troublesome, features, discriminative, models, allow, use,  ] 

>> PoS Tags are: 
[('troublesome', 'ADJ'), ('features', 'NOUN'), ('discriminative', 'ADJ'), ('models', 'NOUN'), ('allow', 'VERB'), ('use', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('troublesome', 'acomp'), ('features', 'nsubjpass'), ('discriminative', 'conj'), ('models', 'nsubj'), ('allow', 'conj'), ('use', 'dobj'), (' ', 'pobj')]

>> Bigrams: 
[[troublesome, features], [features, discriminative], [discriminative, models], [models, allow], [allow, use], [use,  ]]

>> Trigrams: 
[[troublesome, features, discriminative], [features, discriminative, models], [discriminative, models, allow], [models, allow, use], [allow, use,  ]]

>> Noun Phrases are: 
[many features, models, use]

>> Named Entities are: 
[] 


================================ Paragraph 470 =================================

more features. [100] Few of the examples of discriminative methods are Logistic regression  

------------------- Sentence 1 -------------------

more features. 


>> Tokens are: 
[features, .] 

>> PoS Tags are: 
[('features', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('features', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[features, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[more features]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

[100] Few of the examples of discriminative methods are Logistic regression   


>> Tokens are: 
[[, 100, ], examples, discriminative, methods, Logistic, regression,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('100', 'X'), (']', 'PUNCT'), ('examples', 'NOUN'), ('discriminative', 'ADJ'), ('methods', 'NOUN'), ('Logistic', 'ADJ'), ('regression', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('100', 'dep'), (']', 'punct'), ('examples', 'pobj'), ('discriminative', 'amod'), ('methods', 'pobj'), ('Logistic', 'amod'), ('regression', 'attr'), (' ', 'punct')]

>> Bigrams: 
[[[, 100], [100, ]], [], examples], [examples, discriminative], [discriminative, methods], [methods, Logistic], [Logistic, regression], [regression,  ]]

>> Trigrams: 
[[[, 100, ]], [100, ], examples], [], examples, discriminative], [examples, discriminative, methods], [discriminative, methods, Logistic], [methods, Logistic, regression], [Logistic, regression,  ]]

>> Noun Phrases are: 
[the examples, discriminative methods, Logistic regression]

>> Named Entities are: 
[('100', 'CARDINAL'), ('Logistic', 'NORP')] 


================================ Paragraph 471 =================================

and conditional random fields (CRFs), generative methods are Naive Bayes classifiers and  

------------------- Sentence 1 -------------------

and conditional random fields (CRFs), generative methods are Naive Bayes classifiers and   


>> Tokens are: 
[conditional, random, fields, (, CRFs, ), ,, generative, methods, Naive, Bayes, classifiers,  ] 

>> PoS Tags are: 
[('conditional', 'ADJ'), ('random', 'ADJ'), ('fields', 'NOUN'), ('(', 'PUNCT'), ('CRFs', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('generative', 'ADJ'), ('methods', 'NOUN'), ('Naive', 'PROPN'), ('Bayes', 'PROPN'), ('classifiers', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('conditional', 'amod'), ('random', 'amod'), ('fields', 'nsubj'), ('(', 'punct'), ('CRFs', 'appos'), (')', 'punct'), (',', 'punct'), ('generative', 'amod'), ('methods', 'nsubj'), ('Naive', 'compound'), ('Bayes', 'compound'), ('classifiers', 'attr'), (' ', 'conj')]

>> Bigrams: 
[[conditional, random], [random, fields], [fields, (], [(, CRFs], [CRFs, )], [), ,], [,, generative], [generative, methods], [methods, Naive], [Naive, Bayes], [Bayes, classifiers], [classifiers,  ]]

>> Trigrams: 
[[conditional, random, fields], [random, fields, (], [fields, (, CRFs], [(, CRFs, )], [CRFs, ), ,], [), ,, generative], [,, generative, methods], [generative, methods, Naive], [methods, Naive, Bayes], [Naive, Bayes, classifiers], [Bayes, classifiers,  ]]

>> Noun Phrases are: 
[and conditional random fields, CRFs, generative methods, Naive Bayes classifiers]

>> Named Entities are: 
[('Bayes', 'ORG')] 


================================ Paragraph 472 =================================

hidden Markov models (HMMs).  

------------------- Sentence 1 -------------------

hidden Markov models (HMMs). 


>> Tokens are: 
[hidden, Markov, models, (, HMMs, ), .] 

>> PoS Tags are: 
[('hidden', 'VERB'), ('Markov', 'PROPN'), ('models', 'NOUN'), ('(', 'PUNCT'), ('HMMs', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('hidden', 'amod'), ('Markov', 'compound'), ('models', 'ROOT'), ('(', 'punct'), ('HMMs', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[hidden, Markov], [Markov, models], [models, (], [(, HMMs], [HMMs, )], [), .]]

>> Trigrams: 
[[hidden, Markov, models], [Markov, models, (], [models, (, HMMs], [(, HMMs, )], [HMMs, ), .]]

>> Noun Phrases are: 
[hidden Markov models, HMMs]

>> Named Entities are: 
[('Markov', 'PERSON')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 473 =================================

7.1 Hidden Markov Model (HMM)  

------------------- Sentence 1 -------------------

7.1 Hidden Markov Model (HMM)   


>> Tokens are: 
[7.1, Hidden, Markov, Model, (, HMM, ),  ] 

>> PoS Tags are: 
[('7.1', 'NUM'), ('Hidden', 'PROPN'), ('Markov', 'PROPN'), ('Model', 'PROPN'), ('(', 'PUNCT'), ('HMM', 'PROPN'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('7.1', 'nummod'), ('Hidden', 'amod'), ('Markov', 'compound'), ('Model', 'ROOT'), ('(', 'punct'), ('HMM', 'appos'), (')', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[7.1, Hidden], [Hidden, Markov], [Markov, Model], [Model, (], [(, HMM], [HMM, )], [),  ]]

>> Trigrams: 
[[7.1, Hidden, Markov], [Hidden, Markov, Model], [Markov, Model, (], [Model, (, HMM], [(, HMM, )], [HMM, ),  ]]

>> Noun Phrases are: 
[7.1 Hidden Markov Model, HMM]

>> Named Entities are: 
[('7.1', 'CARDINAL'), ('Hidden Markov Model', 'PERSON'), ('HMM', 'ORG')] 


================================ Paragraph 474 =================================

An HMM is a system where a shifting takes place between several states, generating feasible  

------------------- Sentence 1 -------------------

An HMM is a system where a shifting takes place between several states, generating feasible   


>> Tokens are: 
[HMM, system, shifting, takes, place, states, ,, generating, feasible,  ] 

>> PoS Tags are: 
[('HMM', 'PROPN'), ('system', 'NOUN'), ('shifting', 'NOUN'), ('takes', 'VERB'), ('place', 'NOUN'), ('states', 'NOUN'), (',', 'PUNCT'), ('generating', 'VERB'), ('feasible', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('HMM', 'nsubj'), ('system', 'attr'), ('shifting', 'nsubj'), ('takes', 'relcl'), ('place', 'dobj'), ('states', 'pobj'), (',', 'punct'), ('generating', 'advcl'), ('feasible', 'amod'), (' ', 'dobj')]

>> Bigrams: 
[[HMM, system], [system, shifting], [shifting, takes], [takes, place], [place, states], [states, ,], [,, generating], [generating, feasible], [feasible,  ]]

>> Trigrams: 
[[HMM, system, shifting], [system, shifting, takes], [shifting, takes, place], [takes, place, states], [place, states, ,], [states, ,, generating], [,, generating, feasible], [generating, feasible,  ]]

>> Noun Phrases are: 
[An HMM, a system, a shifting, place, several states]

>> Named Entities are: 
[('HMM', 'ORG')] 


================================ Paragraph 475 =================================

output symbols with each switch. The sets of viable states and unique symbols may be large,  

------------------- Sentence 1 -------------------

output symbols with each switch. 


>> Tokens are: 
[output, symbols, switch, .] 

>> PoS Tags are: 
[('output', 'NOUN'), ('symbols', 'NOUN'), ('switch', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('output', 'compound'), ('symbols', 'ROOT'), ('switch', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[output, symbols], [symbols, switch], [switch, .]]

>> Trigrams: 
[[output, symbols, switch], [symbols, switch, .]]

>> Noun Phrases are: 
[output symbols, each switch]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

The sets of viable states and unique symbols may be large,   


>> Tokens are: 
[sets, viable, states, unique, symbols, large, ,,  ] 

>> PoS Tags are: 
[('sets', 'NOUN'), ('viable', 'ADJ'), ('states', 'NOUN'), ('unique', 'ADJ'), ('symbols', 'NOUN'), ('large', 'ADJ'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('sets', 'nsubj'), ('viable', 'amod'), ('states', 'pobj'), ('unique', 'amod'), ('symbols', 'conj'), ('large', 'acomp'), (',', 'punct'), (' ', 'npadvmod')]

>> Bigrams: 
[[sets, viable], [viable, states], [states, unique], [unique, symbols], [symbols, large], [large, ,], [,,  ]]

>> Trigrams: 
[[sets, viable, states], [viable, states, unique], [states, unique, symbols], [unique, symbols, large], [symbols, large, ,], [large, ,,  ]]

>> Noun Phrases are: 
[The sets, viable states, unique symbols]

>> Named Entities are: 
[] 


================================ Paragraph 476 =================================

but finite and known. We can descry the outputs, but the system’s internals are hidden. Few  

------------------- Sentence 1 -------------------

but finite and known. 


>> Tokens are: 
[finite, known, .] 

>> PoS Tags are: 
[('finite', 'ADJ'), ('known', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('finite', 'ROOT'), ('known', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[finite, known], [known, .]]

>> Trigrams: 
[[finite, known, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

We can descry the outputs, but the system’s internals are hidden. 


>> Tokens are: 
[descry, outputs, ,, system, internals, hidden, .] 

>> PoS Tags are: 
[('descry', 'VERB'), ('outputs', 'NOUN'), (',', 'PUNCT'), ('system', 'NOUN'), ('internals', 'NOUN'), ('hidden', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('descry', 'ROOT'), ('outputs', 'dobj'), (',', 'punct'), ('system', 'poss'), ('internals', 'nsubjpass'), ('hidden', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[descry, outputs], [outputs, ,], [,, system], [system, internals], [internals, hidden], [hidden, .]]

>> Trigrams: 
[[descry, outputs, ,], [outputs, ,, system], [,, system, internals], [system, internals, hidden], [internals, hidden, .]]

>> Noun Phrases are: 
[We, the outputs, the system’s internals]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Few   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 477 =================================

of the problem could be solved are by Inference A certain sequence of output symbols,  

------------------- Sentence 1 -------------------

of the problem could be solved are by Inference A certain sequence of output symbols, 


>> Tokens are: 
[problem, solved, Inference, certain, sequence, output, symbols, ,] 

>> PoS Tags are: 
[('problem', 'NOUN'), ('solved', 'VERB'), ('Inference', 'PROPN'), ('certain', 'ADJ'), ('sequence', 'NOUN'), ('output', 'NOUN'), ('symbols', 'NOUN'), (',', 'PUNCT')] 

>> Dependency Tags are: 
[('problem', 'pobj'), ('solved', 'ROOT'), ('Inference', 'compound'), ('certain', 'amod'), ('sequence', 'pobj'), ('output', 'compound'), ('symbols', 'pobj'), (',', 'punct')]

>> Bigrams: 
[[problem, solved], [solved, Inference], [Inference, certain], [certain, sequence], [sequence, output], [output, symbols], [symbols, ,]]

>> Trigrams: 
[[problem, solved, Inference], [solved, Inference, certain], [Inference, certain, sequence], [certain, sequence, output], [sequence, output, symbols], [output, symbols, ,]]

>> Noun Phrases are: 
[the problem, Inference A certain sequence, output symbols]

>> Named Entities are: 
[('Inference A', 'ORG')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 478 =================================

compute the probabilities of one or more candidate states with sequences. Pattern matching  

------------------- Sentence 1 -------------------

compute the probabilities of one or more candidate states with sequences. 


>> Tokens are: 
[compute, probabilities, candidate, states, sequences, .] 

>> PoS Tags are: 
[('compute', 'VERB'), ('probabilities', 'NOUN'), ('candidate', 'NOUN'), ('states', 'NOUN'), ('sequences', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('compute', 'ROOT'), ('probabilities', 'dobj'), ('candidate', 'compound'), ('states', 'pobj'), ('sequences', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[compute, probabilities], [probabilities, candidate], [candidate, states], [states, sequences], [sequences, .]]

>> Trigrams: 
[[compute, probabilities, candidate], [probabilities, candidate, states], [candidate, states, sequences], [states, sequences, .]]

>> Noun Phrases are: 
[the probabilities, one or more candidate states, sequences]

>> Named Entities are: 
[('one', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Pattern matching   


>> Tokens are: 
[Pattern, matching,  ] 

>> PoS Tags are: 
[('Pattern', 'NOUN'), ('matching', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Pattern', 'ROOT'), ('matching', 'acl'), (' ', 'dobj')]

>> Bigrams: 
[[Pattern, matching], [matching,  ]]

>> Trigrams: 
[[Pattern, matching,  ]]

>> Noun Phrases are: 
[Pattern]

>> Named Entities are: 
[] 


================================ Paragraph 479 =================================

the state-switch sequence is realised are most likely to have generated a particular output-

------------------- Sentence 1 -------------------

the state-switch sequence is realised are most likely to have generated a particular output- 


>> Tokens are: 
[state, -, switch, sequence, realised, likely, generated, particular, output-] 

>> PoS Tags are: 
[('state', 'NOUN'), ('-', 'PUNCT'), ('switch', 'NOUN'), ('sequence', 'NOUN'), ('realised', 'VERB'), ('likely', 'ADJ'), ('generated', 'VERB'), ('particular', 'ADJ'), ('output-', 'PUNCT')] 

>> Dependency Tags are: 
[('state', 'compound'), ('-', 'punct'), ('switch', 'compound'), ('sequence', 'nsubjpass'), ('realised', 'ROOT'), ('likely', 'acomp'), ('generated', 'xcomp'), ('particular', 'dobj'), ('output-', 'punct')]

>> Bigrams: 
[[state, -], [-, switch], [switch, sequence], [sequence, realised], [realised, likely], [likely, generated], [generated, particular], [particular, output-]]

>> Trigrams: 
[[state, -, switch], [-, switch, sequence], [switch, sequence, realised], [sequence, realised, likely], [realised, likely, generated], [likely, generated, particular], [generated, particular, output-]]

>> Noun Phrases are: 
[the state-switch sequence]

>> Named Entities are: 
[] 


================================ Paragraph 480 =================================

symbol sequence. Training the output-symbol chain data, reckon the state-switch/output  

------------------- Sentence 1 -------------------

symbol sequence. 


>> Tokens are: 
[symbol, sequence, .] 

>> PoS Tags are: 
[('symbol', 'NOUN'), ('sequence', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('symbol', 'compound'), ('sequence', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[symbol, sequence], [sequence, .]]

>> Trigrams: 
[[symbol, sequence, .]]

>> Noun Phrases are: 
[symbol sequence]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Training the output-symbol chain data, reckon the state-switch/output   


>> Tokens are: 
[Training, output, -, symbol, chain, data, ,, reckon, state, -, switch, /, output,  ] 

>> PoS Tags are: 
[('Training', 'VERB'), ('output', 'NOUN'), ('-', 'PUNCT'), ('symbol', 'NOUN'), ('chain', 'NOUN'), ('data', 'NOUN'), (',', 'PUNCT'), ('reckon', 'VERB'), ('state', 'NOUN'), ('-', 'PUNCT'), ('switch', 'NOUN'), ('/', 'SYM'), ('output', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Training', 'ROOT'), ('output', 'compound'), ('-', 'punct'), ('symbol', 'compound'), ('chain', 'compound'), ('data', 'dobj'), (',', 'punct'), ('reckon', 'conj'), ('state', 'nmod'), ('-', 'punct'), ('switch', 'nmod'), ('/', 'punct'), ('output', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[Training, output], [output, -], [-, symbol], [symbol, chain], [chain, data], [data, ,], [,, reckon], [reckon, state], [state, -], [-, switch], [switch, /], [/, output], [output,  ]]

>> Trigrams: 
[[Training, output, -], [output, -, symbol], [-, symbol, chain], [symbol, chain, data], [chain, data, ,], [data, ,, reckon], [,, reckon, state], [reckon, state, -], [state, -, switch], [-, switch, /], [switch, /, output], [/, output,  ]]

>> Noun Phrases are: 
[the output-symbol chain data, the state-switch/output]

>> Named Entities are: 
[] 


================================ Paragraph 481 =================================

probabilities that fit this data best.  

------------------- Sentence 1 -------------------

probabilities that fit this data best. 


>> Tokens are: 
[probabilities, fit, data, best, .] 

>> PoS Tags are: 
[('probabilities', 'NOUN'), ('fit', 'VERB'), ('data', 'NOUN'), ('best', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('probabilities', 'ROOT'), ('fit', 'relcl'), ('data', 'dobj'), ('best', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[probabilities, fit], [fit, data], [data, best], [best, .]]

>> Trigrams: 
[[probabilities, fit, data], [fit, data, best], [data, best, .]]

>> Noun Phrases are: 
[probabilities, this data]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 482 =================================

Hidden Markov Models are extensively used for speech recognition, where the output  

------------------- Sentence 1 -------------------

Hidden Markov Models are extensively used for speech recognition, where 


>> Tokens are: 
[Hidden, Markov, Models, extensively, speech, recognition, ,] 

>> PoS Tags are: 
[('Hidden', 'VERB'), ('Markov', 'PROPN'), ('Models', 'PROPN'), ('extensively', 'ADV'), ('speech', 'NOUN'), ('recognition', 'NOUN'), (',', 'PUNCT')] 

>> Dependency Tags are: 
[('Hidden', 'amod'), ('Markov', 'compound'), ('Models', 'nsubjpass'), ('extensively', 'advmod'), ('speech', 'compound'), ('recognition', 'pobj'), (',', 'punct')]

>> Bigrams: 
[[Hidden, Markov], [Markov, Models], [Models, extensively], [extensively, speech], [speech, recognition], [recognition, ,]]

>> Trigrams: 
[[Hidden, Markov, Models], [Markov, Models, extensively], [Models, extensively, speech], [extensively, speech, recognition], [speech, recognition, ,]]

>> Noun Phrases are: 
[Hidden Markov Models, speech recognition]

>> Named Entities are: 
[('Hidden Markov Models', 'PERSON')] 

------------------- Sentence 2 -------------------

the output   


>> Tokens are: 
[output,  ] 

>> PoS Tags are: 
[('output', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('output', 'ROOT'), (' ', 'appos')]

>> Bigrams: 
[[output,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[the output]

>> Named Entities are: 
[] 


================================ Paragraph 483 =================================

sequence is matched to the sequence of individual phonemes. Frederick Jelinek, a statistical- 

------------------- Sentence 1 -------------------

sequence is matched to the sequence of individual phonemes. 


>> Tokens are: 
[sequence, matched, sequence, individual, phonemes, .] 

>> PoS Tags are: 
[('sequence', 'NOUN'), ('matched', 'VERB'), ('sequence', 'NOUN'), ('individual', 'ADJ'), ('phonemes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('sequence', 'nsubjpass'), ('matched', 'ROOT'), ('sequence', 'pobj'), ('individual', 'amod'), ('phonemes', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[sequence, matched], [matched, sequence], [sequence, individual], [individual, phonemes], [phonemes, .]]

>> Trigrams: 
[[sequence, matched, sequence], [matched, sequence, individual], [sequence, individual, phonemes], [individual, phonemes, .]]

>> Noun Phrases are: 
[sequence, the sequence, individual phonemes]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Frederick Jelinek, a statistical- 


>> Tokens are: 
[Frederick, Jelinek, ,, statistical-] 

>> PoS Tags are: 
[('Frederick', 'PROPN'), ('Jelinek', 'PROPN'), (',', 'PUNCT'), ('statistical-', 'NOUN')] 

>> Dependency Tags are: 
[('Frederick', 'compound'), ('Jelinek', 'ROOT'), (',', 'punct'), ('statistical-', 'appos')]

>> Bigrams: 
[[Frederick, Jelinek], [Jelinek, ,], [,, statistical-]]

>> Trigrams: 
[[Frederick, Jelinek, ,], [Jelinek, ,, statistical-]]

>> Noun Phrases are: 
[Frederick Jelinek, a statistical-]

>> Named Entities are: 
[('Frederick Jelinek', 'PERSON')] 


================================ Paragraph 484 =================================

NLP advocate who first instigated HMMs at IBM’s Speech Recognition Group, reportedly  

------------------- Sentence 1 -------------------

NLP advocate who first instigated HMMs at IBM’s Speech Recognition Group, reportedly 


>> Tokens are: 
[NLP, advocate, instigated, HMMs, IBM, Speech, Recognition, Group, ,, reportedly] 

>> PoS Tags are: 
[('NLP', 'PROPN'), ('advocate', 'NOUN'), ('instigated', 'VERB'), ('HMMs', 'NOUN'), ('IBM', 'PROPN'), ('Speech', 'PROPN'), ('Recognition', 'PROPN'), ('Group', 'PROPN'), (',', 'PUNCT'), ('reportedly', 'ADV')] 

>> Dependency Tags are: 
[('NLP', 'compound'), ('advocate', 'ROOT'), ('instigated', 'relcl'), ('HMMs', 'dobj'), ('IBM', 'poss'), ('Speech', 'compound'), ('Recognition', 'compound'), ('Group', 'pobj'), (',', 'punct'), ('reportedly', 'advmod')]

>> Bigrams: 
[[NLP, advocate], [advocate, instigated], [instigated, HMMs], [HMMs, IBM], [IBM, Speech], [Speech, Recognition], [Recognition, Group], [Group, ,], [,, reportedly]]

>> Trigrams: 
[[NLP, advocate, instigated], [advocate, instigated, HMMs], [instigated, HMMs, IBM], [HMMs, IBM, Speech], [IBM, Speech, Recognition], [Speech, Recognition, Group], [Recognition, Group, ,], [Group, ,, reportedly]]

>> Noun Phrases are: 
[NLP advocate, who, HMMs, IBM’s Speech Recognition Group]

>> Named Entities are: 
[('NLP', 'ORG'), ('first', 'ORDINAL'), ('IBM', 'ORG'), ('Speech Recognition Group', 'ORG')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 485 =================================

joked, every time a linguist leaves my group, the speech recognizer’s performance improves.  

------------------- Sentence 1 -------------------

joked, every time a linguist leaves my group, the speech recognizer’s performance improves. 


>> Tokens are: 
[joked, ,, time, linguist, leaves, group, ,, speech, recognizer, performance, improves, .] 

>> PoS Tags are: 
[('joked', 'VERB'), (',', 'PUNCT'), ('time', 'NOUN'), ('linguist', 'NOUN'), ('leaves', 'VERB'), ('group', 'NOUN'), (',', 'PUNCT'), ('speech', 'NOUN'), ('recognizer', 'NOUN'), ('performance', 'NOUN'), ('improves', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('joked', 'ROOT'), (',', 'punct'), ('time', 'npadvmod'), ('linguist', 'nsubj'), ('leaves', 'relcl'), ('group', 'dobj'), (',', 'punct'), ('speech', 'compound'), ('recognizer', 'poss'), ('performance', 'nsubj'), ('improves', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[joked, ,], [,, time], [time, linguist], [linguist, leaves], [leaves, group], [group, ,], [,, speech], [speech, recognizer], [recognizer, performance], [performance, improves], [improves, .]]

>> Trigrams: 
[[joked, ,, time], [,, time, linguist], [time, linguist, leaves], [linguist, leaves, group], [leaves, group, ,], [group, ,, speech], [,, speech, recognizer], [speech, recognizer, performance], [recognizer, performance, improves], [performance, improves, .]]

>> Noun Phrases are: 
[a linguist, my group, the speech recognizer’s performance]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 486 =================================

[101] HMM is not restricted to this application it has several others such as bioinformatics  

------------------- Sentence 1 -------------------

[101] HMM is not restricted to this application it has several others such as bioinformatics   


>> Tokens are: 
[[, 101, ], HMM, restricted, application, bioinformatics,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('101', 'NUM'), (']', 'PUNCT'), ('HMM', 'PROPN'), ('restricted', 'VERB'), ('application', 'NOUN'), ('bioinformatics', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('101', 'dep'), (']', 'punct'), ('HMM', 'nsubjpass'), ('restricted', 'ROOT'), ('application', 'pobj'), ('bioinformatics', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[[, 101], [101, ]], [], HMM], [HMM, restricted], [restricted, application], [application, bioinformatics], [bioinformatics,  ]]

>> Trigrams: 
[[[, 101, ]], [101, ], HMM], [], HMM, restricted], [HMM, restricted, application], [restricted, application, bioinformatics], [application, bioinformatics,  ]]

>> Noun Phrases are: 
[HMM, this application, it, several others, bioinformatics]

>> Named Entities are: 
[('101', 'CARDINAL'), ('HMM', 'ORG')] 


================================ Paragraph 487 =================================

problems, for example, multiple sequence alignment [102]. Sonnhammer mentioned that  

------------------- Sentence 1 -------------------

problems, for example, multiple sequence alignment [102]. 


>> Tokens are: 
[problems, ,, example, ,, multiple, sequence, alignment, [, 102, ], .] 

>> PoS Tags are: 
[('problems', 'NOUN'), (',', 'PUNCT'), ('example', 'NOUN'), (',', 'PUNCT'), ('multiple', 'ADJ'), ('sequence', 'NOUN'), ('alignment', 'NOUN'), ('[', 'PUNCT'), ('102', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('problems', 'ROOT'), (',', 'punct'), ('example', 'pobj'), (',', 'punct'), ('multiple', 'amod'), ('sequence', 'compound'), ('alignment', 'appos'), ('[', 'punct'), ('102', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[problems, ,], [,, example], [example, ,], [,, multiple], [multiple, sequence], [sequence, alignment], [alignment, [], [[, 102], [102, ]], [], .]]

>> Trigrams: 
[[problems, ,, example], [,, example, ,], [example, ,, multiple], [,, multiple, sequence], [multiple, sequence, alignment], [sequence, alignment, [], [alignment, [, 102], [[, 102, ]], [102, ], .]]

>> Noun Phrases are: 
[problems, example]

>> Named Entities are: 
[('102', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Sonnhammer mentioned that   


>> Tokens are: 
[Sonnhammer, mentioned,  ] 

>> PoS Tags are: 
[('Sonnhammer', 'PROPN'), ('mentioned', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Sonnhammer', 'nsubj'), ('mentioned', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Sonnhammer, mentioned], [mentioned,  ]]

>> Trigrams: 
[[Sonnhammer, mentioned,  ]]

>> Noun Phrases are: 
[Sonnhammer]

>> Named Entities are: 
[] 


================================ Paragraph 488 =================================

Pfam hold multiple alignments and hidden Markov model based profiles (HMM-profiles) of  

------------------- Sentence 1 -------------------

Pfam hold multiple alignments and hidden Markov model based profiles (HMM-profiles) of   


>> Tokens are: 
[Pfam, hold, multiple, alignments, hidden, Markov, model, based, profiles, (, HMM, -, profiles, ),  ] 

>> PoS Tags are: 
[('Pfam', 'PROPN'), ('hold', 'VERB'), ('multiple', 'ADJ'), ('alignments', 'NOUN'), ('hidden', 'VERB'), ('Markov', 'PROPN'), ('model', 'NOUN'), ('based', 'VERB'), ('profiles', 'NOUN'), ('(', 'PUNCT'), ('HMM', 'PROPN'), ('-', 'PUNCT'), ('profiles', 'NOUN'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Pfam', 'nsubj'), ('hold', 'ROOT'), ('multiple', 'amod'), ('alignments', 'dobj'), ('hidden', 'amod'), ('Markov', 'nmod'), ('model', 'npadvmod'), ('based', 'amod'), ('profiles', 'conj'), ('(', 'punct'), ('HMM', 'compound'), ('-', 'punct'), ('profiles', 'appos'), (')', 'punct'), (' ', 'pobj')]

>> Bigrams: 
[[Pfam, hold], [hold, multiple], [multiple, alignments], [alignments, hidden], [hidden, Markov], [Markov, model], [model, based], [based, profiles], [profiles, (], [(, HMM], [HMM, -], [-, profiles], [profiles, )], [),  ]]

>> Trigrams: 
[[Pfam, hold, multiple], [hold, multiple, alignments], [multiple, alignments, hidden], [alignments, hidden, Markov], [hidden, Markov, model], [Markov, model, based], [model, based, profiles], [based, profiles, (], [profiles, (, HMM], [(, HMM, -], [HMM, -, profiles], [-, profiles, )], [profiles, ),  ]]

>> Noun Phrases are: 
[Pfam, multiple alignments, hidden Markov model based profiles, HMM-profiles]

>> Named Entities are: 
[('Markov', 'PERSON'), ('HMM', 'ORG')] 


================================ Paragraph 489 =================================

entire protein domains. The cue of domain boundaries, family members and alignment is  

------------------- Sentence 1 -------------------

entire protein domains. 


>> Tokens are: 
[entire, protein, domains, .] 

>> PoS Tags are: 
[('entire', 'ADJ'), ('protein', 'NOUN'), ('domains', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('entire', 'amod'), ('protein', 'compound'), ('domains', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[entire, protein], [protein, domains], [domains, .]]

>> Trigrams: 
[[entire, protein, domains], [protein, domains, .]]

>> Noun Phrases are: 
[entire protein domains]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

The cue of domain boundaries, family members and alignment is   


>> Tokens are: 
[cue, domain, boundaries, ,, family, members, alignment,  ] 

>> PoS Tags are: 
[('cue', 'NOUN'), ('domain', 'NOUN'), ('boundaries', 'NOUN'), (',', 'PUNCT'), ('family', 'NOUN'), ('members', 'NOUN'), ('alignment', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('cue', 'nsubj'), ('domain', 'compound'), ('boundaries', 'pobj'), (',', 'punct'), ('family', 'compound'), ('members', 'conj'), ('alignment', 'conj'), (' ', 'attr')]

>> Bigrams: 
[[cue, domain], [domain, boundaries], [boundaries, ,], [,, family], [family, members], [members, alignment], [alignment,  ]]

>> Trigrams: 
[[cue, domain, boundaries], [domain, boundaries, ,], [boundaries, ,, family], [,, family, members], [family, members, alignment], [members, alignment,  ]]

>> Noun Phrases are: 
[The cue, domain boundaries, family members, alignment]

>> Named Entities are: 
[] 


================================ Paragraph 490 =================================

done semi-automatically found on expert knowledge, sequence similarity, other protein  

------------------- Sentence 1 -------------------

done semi-automatically found on expert knowledge, sequence similarity, other protein   


>> Tokens are: 
[semi, -, automatically, found, expert, knowledge, ,, sequence, similarity, ,, protein,  ] 

>> PoS Tags are: 
[('semi', 'ADV'), ('-', 'ADV'), ('automatically', 'ADV'), ('found', 'VERB'), ('expert', 'ADJ'), ('knowledge', 'NOUN'), (',', 'PUNCT'), ('sequence', 'NOUN'), ('similarity', 'NOUN'), (',', 'PUNCT'), ('protein', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('semi', 'dobj'), ('-', 'punct'), ('automatically', 'advmod'), ('found', 'conj'), ('expert', 'compound'), ('knowledge', 'pobj'), (',', 'punct'), ('sequence', 'compound'), ('similarity', 'conj'), (',', 'punct'), ('protein', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[semi, -], [-, automatically], [automatically, found], [found, expert], [expert, knowledge], [knowledge, ,], [,, sequence], [sequence, similarity], [similarity, ,], [,, protein], [protein,  ]]

>> Trigrams: 
[[semi, -, automatically], [-, automatically, found], [automatically, found, expert], [found, expert, knowledge], [expert, knowledge, ,], [knowledge, ,, sequence], [,, sequence, similarity], [sequence, similarity, ,], [similarity, ,, protein], [,, protein,  ]]

>> Noun Phrases are: 
[expert knowledge, sequence similarity, other protein]

>> Named Entities are: 
[] 


================================ Paragraph 491 =================================

family databases and the capability of HMM-profiles to correctly identify and align the  

------------------- Sentence 1 -------------------

family databases and the capability of HMM-profiles to correctly identify and align the   


>> Tokens are: 
[family, databases, capability, HMM, -, profiles, correctly, identify, align,  ] 

>> PoS Tags are: 
[('family', 'NOUN'), ('databases', 'VERB'), ('capability', 'NOUN'), ('HMM', 'PROPN'), ('-', 'PUNCT'), ('profiles', 'NOUN'), ('correctly', 'ADV'), ('identify', 'VERB'), ('align', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('family', 'nsubj'), ('databases', 'ROOT'), ('capability', 'conj'), ('HMM', 'compound'), ('-', 'punct'), ('profiles', 'pobj'), ('correctly', 'advmod'), ('identify', 'advcl'), ('align', 'conj'), (' ', 'dobj')]

>> Bigrams: 
[[family, databases], [databases, capability], [capability, HMM], [HMM, -], [-, profiles], [profiles, correctly], [correctly, identify], [identify, align], [align,  ]]

>> Trigrams: 
[[family, databases, capability], [databases, capability, HMM], [capability, HMM, -], [HMM, -, profiles], [-, profiles, correctly], [profiles, correctly, identify], [correctly, identify, align], [identify, align,  ]]

>> Noun Phrases are: 
[family, the capability, HMM-profiles]

>> Named Entities are: 
[('HMM', 'ORG')] 


================================ Paragraph 492 =================================

members. [103]   

------------------- Sentence 1 -------------------

members. 


>> Tokens are: 
[members, .] 

>> PoS Tags are: 
[('members', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('members', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[members, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[members]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

[103] 


>> Tokens are: 
[[, 103, ]] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('103', 'NUM'), (']', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('103', 'ROOT'), (']', 'punct')]

>> Bigrams: 
[[[, 103], [103, ]]]

>> Trigrams: 
[[[, 103, ]]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('103', 'CARDINAL')] 

------------------- Sentence 3 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 493 =================================

7.2 Naive Bayes Classifiers  

------------------- Sentence 1 -------------------

7.2 Naive Bayes Classifiers   


>> Tokens are: 
[7.2, Naive, Bayes, Classifiers,  ] 

>> PoS Tags are: 
[('7.2', 'NUM'), ('Naive', 'PROPN'), ('Bayes', 'PROPN'), ('Classifiers', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('7.2', 'nummod'), ('Naive', 'compound'), ('Bayes', 'compound'), ('Classifiers', 'ROOT'), (' ', 'appos')]

>> Bigrams: 
[[7.2, Naive], [Naive, Bayes], [Bayes, Classifiers], [Classifiers,  ]]

>> Trigrams: 
[[7.2, Naive, Bayes], [Naive, Bayes, Classifiers], [Bayes, Classifiers,  ]]

>> Noun Phrases are: 
[7.2 Naive Bayes Classifiers]

>> Named Entities are: 
[('7.2', 'CARDINAL'), ('Naive Bayes Classifiers', 'ORG')] 


================================ Paragraph 494 =================================

 The choice of area is wide ranging covering usual items like word segmentation and  

------------------- Sentence 1 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

The choice of area is wide ranging covering usual items like word segmentation and   


>> Tokens are: 
[choice, area, wide, ranging, covering, usual, items, like, word, segmentation,  ] 

>> PoS Tags are: 
[('choice', 'NOUN'), ('area', 'NOUN'), ('wide', 'ADJ'), ('ranging', 'VERB'), ('covering', 'VERB'), ('usual', 'ADJ'), ('items', 'NOUN'), ('like', 'ADP'), ('word', 'NOUN'), ('segmentation', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('choice', 'nsubj'), ('area', 'pobj'), ('wide', 'amod'), ('ranging', 'acomp'), ('covering', 'acl'), ('usual', 'amod'), ('items', 'dobj'), ('like', 'prep'), ('word', 'compound'), ('segmentation', 'pobj'), (' ', 'conj')]

>> Bigrams: 
[[choice, area], [area, wide], [wide, ranging], [ranging, covering], [covering, usual], [usual, items], [items, like], [like, word], [word, segmentation], [segmentation,  ]]

>> Trigrams: 
[[choice, area, wide], [area, wide, ranging], [wide, ranging, covering], [ranging, covering, usual], [covering, usual, items], [usual, items, like], [items, like, word], [like, word, segmentation], [word, segmentation,  ]]

>> Noun Phrases are: 
[The choice, area, usual items, word segmentation]

>> Named Entities are: 
[] 


================================ Paragraph 495 =================================

translation but also unusual areas like segmentation for infant learning and identifying  

------------------- Sentence 1 -------------------

translation but also unusual areas like segmentation for infant learning and identifying   


>> Tokens are: 
[translation, unusual, areas, like, segmentation, infant, learning, identifying,  ] 

>> PoS Tags are: 
[('translation', 'NOUN'), ('unusual', 'ADJ'), ('areas', 'NOUN'), ('like', 'ADP'), ('segmentation', 'NOUN'), ('infant', 'NOUN'), ('learning', 'NOUN'), ('identifying', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('translation', 'ROOT'), ('unusual', 'amod'), ('areas', 'conj'), ('like', 'prep'), ('segmentation', 'pobj'), ('infant', 'compound'), ('learning', 'pobj'), ('identifying', 'conj'), (' ', 'dobj')]

>> Bigrams: 
[[translation, unusual], [unusual, areas], [areas, like], [like, segmentation], [segmentation, infant], [infant, learning], [learning, identifying], [identifying,  ]]

>> Trigrams: 
[[translation, unusual, areas], [unusual, areas, like], [areas, like, segmentation], [like, segmentation, infant], [segmentation, infant, learning], [infant, learning, identifying], [learning, identifying,  ]]

>> Noun Phrases are: 
[translation, unusual areas, segmentation, infant learning]

>> Named Entities are: 
[] 


================================ Paragraph 496 =================================

documents for opinions and facts. In addition, exclusive article was selected for its use of  

------------------- Sentence 1 -------------------

documents for opinions and facts. 


>> Tokens are: 
[documents, opinions, facts, .] 

>> PoS Tags are: 
[('documents', 'NOUN'), ('opinions', 'NOUN'), ('facts', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('documents', 'ROOT'), ('opinions', 'pobj'), ('facts', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[documents, opinions], [opinions, facts], [facts, .]]

>> Trigrams: 
[[documents, opinions, facts], [opinions, facts, .]]

>> Noun Phrases are: 
[documents, opinions, facts]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In addition, exclusive article was selected for its use of   


>> Tokens are: 
[addition, ,, exclusive, article, selected, use,  ] 

>> PoS Tags are: 
[('addition', 'NOUN'), (',', 'PUNCT'), ('exclusive', 'ADJ'), ('article', 'NOUN'), ('selected', 'VERB'), ('use', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('addition', 'pobj'), (',', 'punct'), ('exclusive', 'amod'), ('article', 'nsubjpass'), ('selected', 'ROOT'), ('use', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[addition, ,], [,, exclusive], [exclusive, article], [article, selected], [selected, use], [use,  ]]

>> Trigrams: 
[[addition, ,, exclusive], [,, exclusive, article], [exclusive, article, selected], [article, selected, use], [selected, use,  ]]

>> Noun Phrases are: 
[addition, exclusive article, its use]

>> Named Entities are: 
[] 


================================ Paragraph 497 =================================

Bayesian methods to aid the research in designing algorithms for their investigation.  

------------------- Sentence 1 -------------------

Bayesian methods to aid the research in designing algorithms for their investigation. 


>> Tokens are: 
[Bayesian, methods, aid, research, designing, algorithms, investigation, .] 

>> PoS Tags are: 
[('Bayesian', 'ADJ'), ('methods', 'NOUN'), ('aid', 'VERB'), ('research', 'NOUN'), ('designing', 'VERB'), ('algorithms', 'NOUN'), ('investigation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Bayesian', 'amod'), ('methods', 'ROOT'), ('aid', 'relcl'), ('research', 'dobj'), ('designing', 'pcomp'), ('algorithms', 'dobj'), ('investigation', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Bayesian, methods], [methods, aid], [aid, research], [research, designing], [designing, algorithms], [algorithms, investigation], [investigation, .]]

>> Trigrams: 
[[Bayesian, methods, aid], [methods, aid, research], [aid, research, designing], [research, designing, algorithms], [designing, algorithms, investigation], [algorithms, investigation, .]]

>> Noun Phrases are: 
[Bayesian methods, the research, algorithms, their investigation]

>> Named Entities are: 
[('Bayesian', 'NORP')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 498 =================================

8. NLP in Talk  

------------------- Sentence 1 -------------------

8. 


>> Tokens are: 
[8, .] 

>> PoS Tags are: 
[('8', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('8', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[8, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('8', 'CARDINAL')] 

------------------- Sentence 2 -------------------

NLP in Talk   


>> Tokens are: 
[NLP, Talk,  ] 

>> PoS Tags are: 
[('NLP', 'VERB'), ('Talk', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('NLP', 'ROOT'), ('Talk', 'compound'), (' ', 'pobj')]

>> Bigrams: 
[[NLP, Talk], [Talk,  ]]

>> Trigrams: 
[[NLP, Talk,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('NLP', 'ORG'), ('Talk  ', 'WORK_OF_ART')] 


================================ Paragraph 499 =================================

This section discusses the recent developments in the NLP projects implemented by various  

------------------- Sentence 1 -------------------

This section discusses the recent developments in the NLP projects implemented by various   


>> Tokens are: 
[section, discusses, recent, developments, NLP, projects, implemented,  ] 

>> PoS Tags are: 
[('section', 'NOUN'), ('discusses', 'VERB'), ('recent', 'ADJ'), ('developments', 'NOUN'), ('NLP', 'PROPN'), ('projects', 'NOUN'), ('implemented', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('section', 'nsubj'), ('discusses', 'ROOT'), ('recent', 'amod'), ('developments', 'dobj'), ('NLP', 'compound'), ('projects', 'pobj'), ('implemented', 'acl'), (' ', 'pobj')]

>> Bigrams: 
[[section, discusses], [discusses, recent], [recent, developments], [developments, NLP], [NLP, projects], [projects, implemented], [implemented,  ]]

>> Trigrams: 
[[section, discusses, recent], [discusses, recent, developments], [recent, developments, NLP], [developments, NLP, projects], [NLP, projects, implemented], [projects, implemented,  ]]

>> Noun Phrases are: 
[This section, the recent developments, the NLP projects]

>> Named Entities are: 
[('NLP', 'ORG')] 


================================ Paragraph 500 =================================

companies and these are as follows:  

------------------- Sentence 1 -------------------

companies and these are as follows:   


>> Tokens are: 
[companies, follows, :,  ] 

>> PoS Tags are: 
[('companies', 'NOUN'), ('follows', 'VERB'), (':', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('companies', 'nsubj'), ('follows', 'advcl'), (':', 'punct'), (' ', 'attr')]

>> Bigrams: 
[[companies, follows], [follows, :], [:,  ]]

>> Trigrams: 
[[companies, follows, :], [follows, :,  ]]

>> Noun Phrases are: 
[companies]

>> Named Entities are: 
[] 


================================ Paragraph 501 =================================

8.1 ACE Powered GDPR Robot Launched by RAVN Systems [104]  

------------------- Sentence 1 -------------------

8.1 ACE Powered GDPR Robot Launched by RAVN Systems [104] 


>> Tokens are: 
[8.1, ACE, Powered, GDPR, Robot, Launched, RAVN, Systems, [, 104, ]] 

>> PoS Tags are: 
[('8.1', 'NUM'), ('ACE', 'PROPN'), ('Powered', 'PROPN'), ('GDPR', 'PROPN'), ('Robot', 'PROPN'), ('Launched', 'VERB'), ('RAVN', 'PROPN'), ('Systems', 'PROPN'), ('[', 'PUNCT'), ('104', 'NUM'), (']', 'PUNCT')] 

>> Dependency Tags are: 
[('8.1', 'nummod'), ('ACE', 'nsubj'), ('Powered', 'compound'), ('GDPR', 'compound'), ('Robot', 'appos'), ('Launched', 'ROOT'), ('RAVN', 'compound'), ('Systems', 'pobj'), ('[', 'punct'), ('104', 'npadvmod'), (']', 'punct')]

>> Bigrams: 
[[8.1, ACE], [ACE, Powered], [Powered, GDPR], [GDPR, Robot], [Robot, Launched], [Launched, RAVN], [RAVN, Systems], [Systems, [], [[, 104], [104, ]]]

>> Trigrams: 
[[8.1, ACE, Powered], [ACE, Powered, GDPR], [Powered, GDPR, Robot], [GDPR, Robot, Launched], [Robot, Launched, RAVN], [Launched, RAVN, Systems], [RAVN, Systems, [], [Systems, [, 104], [[, 104, ]]]

>> Noun Phrases are: 
[8.1 ACE, Powered GDPR Robot, RAVN Systems]

>> Named Entities are: 
[('8.1', 'CARDINAL'), ('104]', 'PRODUCT')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 502 =================================

RAVN Systems, an leading expert in Artificial Intelligence (AI), Search and Knowledge  

------------------- Sentence 1 -------------------

RAVN Systems, an leading expert in Artificial Intelligence (AI), Search and Knowledge   


>> Tokens are: 
[RAVN, Systems, ,, leading, expert, Artificial, Intelligence, (, AI, ), ,, Search, Knowledge,  ] 

>> PoS Tags are: 
[('RAVN', 'PROPN'), ('Systems', 'PROPN'), (',', 'PUNCT'), ('leading', 'VERB'), ('expert', 'NOUN'), ('Artificial', 'PROPN'), ('Intelligence', 'PROPN'), ('(', 'PUNCT'), ('AI', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('Search', 'PROPN'), ('Knowledge', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('RAVN', 'compound'), ('Systems', 'ROOT'), (',', 'punct'), ('leading', 'amod'), ('expert', 'appos'), ('Artificial', 'compound'), ('Intelligence', 'pobj'), ('(', 'punct'), ('AI', 'appos'), (')', 'punct'), (',', 'punct'), ('Search', 'conj'), ('Knowledge', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[RAVN, Systems], [Systems, ,], [,, leading], [leading, expert], [expert, Artificial], [Artificial, Intelligence], [Intelligence, (], [(, AI], [AI, )], [), ,], [,, Search], [Search, Knowledge], [Knowledge,  ]]

>> Trigrams: 
[[RAVN, Systems, ,], [Systems, ,, leading], [,, leading, expert], [leading, expert, Artificial], [expert, Artificial, Intelligence], [Artificial, Intelligence, (], [Intelligence, (, AI], [(, AI, )], [AI, ), ,], [), ,, Search], [,, Search, Knowledge], [Search, Knowledge,  ]]

>> Noun Phrases are: 
[RAVN Systems, an leading expert, Artificial Intelligence, (AI, Search, Knowledge]

>> Named Entities are: 
[('Artificial Intelligence', 'ORG'), ('Search', 'GPE')] 


================================ Paragraph 503 =================================

Management Solutions, announced the launch of a RAVN ("Applied Cognitive Engine") i.e  

------------------- Sentence 1 -------------------

Management Solutions, announced the launch of a RAVN ("Applied Cognitive Engine") 


>> Tokens are: 
[Management, Solutions, ,, announced, launch, RAVN, (, ", Applied, Cognitive, Engine, ", )] 

>> PoS Tags are: 
[('Management', 'PROPN'), ('Solutions', 'PROPN'), (',', 'PUNCT'), ('announced', 'VERB'), ('launch', 'NOUN'), ('RAVN', 'PROPN'), ('(', 'PUNCT'), ('"', 'PUNCT'), ('Applied', 'PROPN'), ('Cognitive', 'PROPN'), ('Engine', 'PROPN'), ('"', 'PUNCT'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Management', 'compound'), ('Solutions', 'nsubj'), (',', 'punct'), ('announced', 'ROOT'), ('launch', 'dobj'), ('RAVN', 'pobj'), ('(', 'punct'), ('"', 'punct'), ('Applied', 'compound'), ('Cognitive', 'compound'), ('Engine', 'appos'), ('"', 'punct'), (')', 'punct')]

>> Bigrams: 
[[Management, Solutions], [Solutions, ,], [,, announced], [announced, launch], [launch, RAVN], [RAVN, (], [(, "], [", Applied], [Applied, Cognitive], [Cognitive, Engine], [Engine, "], [", )]]

>> Trigrams: 
[[Management, Solutions, ,], [Solutions, ,, announced], [,, announced, launch], [announced, launch, RAVN], [launch, RAVN, (], [RAVN, (, "], [(, ", Applied], [", Applied, Cognitive], [Applied, Cognitive, Engine], [Cognitive, Engine, "], [Engine, ", )]]

>> Noun Phrases are: 
[Management Solutions, the launch, a RAVN, ("Applied Cognitive Engine]

>> Named Entities are: 
[('Management Solutions', 'ORG'), ('Applied Cognitive Engine', 'WORK_OF_ART')] 

------------------- Sentence 2 -------------------

i.e   


>> Tokens are: 
[i.e,  ] 

>> PoS Tags are: 
[('i.e', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('i.e', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[i.e,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 504 =================================

powered software Robot to help and facilitate the GDPR ("General Data Protection  

------------------- Sentence 1 -------------------

powered software Robot to help and facilitate the GDPR ("General Data Protection   


>> Tokens are: 
[powered, software, Robot, help, facilitate, GDPR, (, ", General, Data, Protection,  ] 

>> PoS Tags are: 
[('powered', 'VERB'), ('software', 'NOUN'), ('Robot', 'PROPN'), ('help', 'VERB'), ('facilitate', 'VERB'), ('GDPR', 'PROPN'), ('(', 'PUNCT'), ('"', 'PUNCT'), ('General', 'PROPN'), ('Data', 'PROPN'), ('Protection', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('powered', 'amod'), ('software', 'compound'), ('Robot', 'nsubj'), ('help', 'ROOT'), ('facilitate', 'conj'), ('GDPR', 'dobj'), ('(', 'punct'), ('"', 'punct'), ('General', 'compound'), ('Data', 'compound'), ('Protection', 'appos'), (' ', 'npadvmod')]

>> Bigrams: 
[[powered, software], [software, Robot], [Robot, help], [help, facilitate], [facilitate, GDPR], [GDPR, (], [(, "], [", General], [General, Data], [Data, Protection], [Protection,  ]]

>> Trigrams: 
[[powered, software, Robot], [software, Robot, help], [Robot, help, facilitate], [help, facilitate, GDPR], [facilitate, GDPR, (], [GDPR, (, "], [(, ", General], [", General, Data], [General, Data, Protection], [Data, Protection,  ]]

>> Noun Phrases are: 
[powered software Robot, the GDPR, ("General Data Protection]

>> Named Entities are: 
[('General Data Protection', 'ORG')] 


================================ Paragraph 505 =================================

Regulation") compliance.  

------------------- Sentence 1 -------------------

Regulation") compliance. 


>> Tokens are: 
[Regulation, ", ), compliance, .] 

>> PoS Tags are: 
[('Regulation', 'NOUN'), ('"', 'PUNCT'), (')', 'PUNCT'), ('compliance', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Regulation', 'nmod'), ('"', 'punct'), (')', 'punct'), ('compliance', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Regulation, "], [", )], [), compliance], [compliance, .]]

>> Trigrams: 
[[Regulation, ", )], [", ), compliance], [), compliance, .]]

>> Noun Phrases are: 
[Regulation") compliance]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 506 =================================

The Robot uses AI techniques to automatically analyse documents and other types of data in  

------------------- Sentence 1 -------------------

The Robot uses AI techniques to automatically analyse documents and other types of data in   


>> Tokens are: 
[Robot, uses, AI, techniques, automatically, analyse, documents, types, data,  ] 

>> PoS Tags are: 
[('Robot', 'PROPN'), ('uses', 'VERB'), ('AI', 'PROPN'), ('techniques', 'NOUN'), ('automatically', 'ADV'), ('analyse', 'VERB'), ('documents', 'NOUN'), ('types', 'NOUN'), ('data', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Robot', 'nsubj'), ('uses', 'ROOT'), ('AI', 'compound'), ('techniques', 'dobj'), ('automatically', 'advmod'), ('analyse', 'xcomp'), ('documents', 'dobj'), ('types', 'conj'), ('data', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Robot, uses], [uses, AI], [AI, techniques], [techniques, automatically], [automatically, analyse], [analyse, documents], [documents, types], [types, data], [data,  ]]

>> Trigrams: 
[[Robot, uses, AI], [uses, AI, techniques], [AI, techniques, automatically], [techniques, automatically, analyse], [automatically, analyse, documents], [analyse, documents, types], [documents, types, data], [types, data,  ]]

>> Noun Phrases are: 
[The Robot, AI techniques, documents, other types, data]

>> Named Entities are: 
[('Robot', 'ORG'), ('AI', 'ORG')] 


================================ Paragraph 507 =================================

any business system which is subject to GDPR rules. It allows users to quickly and easily  

------------------- Sentence 1 -------------------

any business system which is subject to GDPR rules. 


>> Tokens are: 
[business, system, subject, GDPR, rules, .] 

>> PoS Tags are: 
[('business', 'NOUN'), ('system', 'NOUN'), ('subject', 'ADJ'), ('GDPR', 'PROPN'), ('rules', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('business', 'compound'), ('system', 'ROOT'), ('subject', 'acomp'), ('GDPR', 'compound'), ('rules', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[business, system], [system, subject], [subject, GDPR], [GDPR, rules], [rules, .]]

>> Trigrams: 
[[business, system, subject], [system, subject, GDPR], [subject, GDPR, rules], [GDPR, rules, .]]

>> Noun Phrases are: 
[any business system, GDPR rules]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

It allows users to quickly and easily   


>> Tokens are: 
[allows, users, quickly, easily,  ] 

>> PoS Tags are: 
[('allows', 'VERB'), ('users', 'NOUN'), ('quickly', 'ADV'), ('easily', 'ADV'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('allows', 'ROOT'), ('users', 'nsubj'), ('quickly', 'ccomp'), ('easily', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[allows, users], [users, quickly], [quickly, easily], [easily,  ]]

>> Trigrams: 
[[allows, users, quickly], [users, quickly, easily], [quickly, easily,  ]]

>> Noun Phrases are: 
[It, users]

>> Named Entities are: 
[] 


================================ Paragraph 508 =================================

search, retrieve, flag, classify and report on data mediated to be supersensitive under GDPR.  

------------------- Sentence 1 -------------------

search, retrieve, flag, classify and report on data mediated to be supersensitive under GDPR. 


>> Tokens are: 
[search, ,, retrieve, ,, flag, ,, classify, report, data, mediated, supersensitive, GDPR, .] 

>> PoS Tags are: 
[('search', 'NOUN'), (',', 'PUNCT'), ('retrieve', 'NOUN'), (',', 'PUNCT'), ('flag', 'NOUN'), (',', 'PUNCT'), ('classify', 'NOUN'), ('report', 'VERB'), ('data', 'NOUN'), ('mediated', 'VERB'), ('supersensitive', 'ADJ'), ('GDPR', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('search', 'ROOT'), (',', 'punct'), ('retrieve', 'conj'), (',', 'punct'), ('flag', 'conj'), (',', 'punct'), ('classify', 'conj'), ('report', 'conj'), ('data', 'pobj'), ('mediated', 'acl'), ('supersensitive', 'acomp'), ('GDPR', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[search, ,], [,, retrieve], [retrieve, ,], [,, flag], [flag, ,], [,, classify], [classify, report], [report, data], [data, mediated], [mediated, supersensitive], [supersensitive, GDPR], [GDPR, .]]

>> Trigrams: 
[[search, ,, retrieve], [,, retrieve, ,], [retrieve, ,, flag], [,, flag, ,], [flag, ,, classify], [,, classify, report], [classify, report, data], [report, data, mediated], [data, mediated, supersensitive], [mediated, supersensitive, GDPR], [supersensitive, GDPR, .]]

>> Noun Phrases are: 
[search, retrieve, flag, classify, data, GDPR]

>> Named Entities are: 
[('GDPR', 'ORG')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 509 =================================

Users also have the ability to identify personal data from documents, view feeds on the latest  

------------------- Sentence 1 -------------------

Users also have the ability to identify personal data from documents, view feeds on the latest   


>> Tokens are: 
[Users, ability, identify, personal, data, documents, ,, view, feeds, latest,  ] 

>> PoS Tags are: 
[('Users', 'NOUN'), ('ability', 'NOUN'), ('identify', 'VERB'), ('personal', 'ADJ'), ('data', 'NOUN'), ('documents', 'NOUN'), (',', 'PUNCT'), ('view', 'VERB'), ('feeds', 'VERB'), ('latest', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Users', 'nsubj'), ('ability', 'dobj'), ('identify', 'acl'), ('personal', 'amod'), ('data', 'dobj'), ('documents', 'pobj'), (',', 'punct'), ('view', 'nsubj'), ('feeds', 'ROOT'), ('latest', 'amod'), (' ', 'pobj')]

>> Bigrams: 
[[Users, ability], [ability, identify], [identify, personal], [personal, data], [data, documents], [documents, ,], [,, view], [view, feeds], [feeds, latest], [latest,  ]]

>> Trigrams: 
[[Users, ability, identify], [ability, identify, personal], [identify, personal, data], [personal, data, documents], [data, documents, ,], [documents, ,, view], [,, view, feeds], [view, feeds, latest], [feeds, latest,  ]]

>> Noun Phrases are: 
[Users, the ability, personal data, documents]

>> Named Entities are: 
[] 


================================ Paragraph 510 =================================

personal data that requires attention and provide reports on the data suggested to be deleted or  

------------------- Sentence 1 -------------------

personal data that requires attention and provide reports on the data suggested to be deleted or   


>> Tokens are: 
[personal, data, requires, attention, provide, reports, data, suggested, deleted,  ] 

>> PoS Tags are: 
[('personal', 'ADJ'), ('data', 'NOUN'), ('requires', 'VERB'), ('attention', 'NOUN'), ('provide', 'VERB'), ('reports', 'NOUN'), ('data', 'NOUN'), ('suggested', 'VERB'), ('deleted', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('personal', 'amod'), ('data', 'nsubj'), ('requires', 'relcl'), ('attention', 'dobj'), ('provide', 'conj'), ('reports', 'dobj'), ('data', 'pobj'), ('suggested', 'ROOT'), ('deleted', 'xcomp'), (' ', 'punct')]

>> Bigrams: 
[[personal, data], [data, requires], [requires, attention], [attention, provide], [provide, reports], [reports, data], [data, suggested], [suggested, deleted], [deleted,  ]]

>> Trigrams: 
[[personal, data, requires], [data, requires, attention], [requires, attention, provide], [attention, provide, reports], [provide, reports, data], [reports, data, suggested], [data, suggested, deleted], [suggested, deleted,  ]]

>> Noun Phrases are: 
[personal data, attention, reports, the data]

>> Named Entities are: 
[] 


================================ Paragraph 511 =================================

secured.  RAVN's GDPR Robot is also able to hasten requests for information (Data Subject  

------------------- Sentence 1 -------------------

secured. 


>> Tokens are: 
[secured, .] 

>> PoS Tags are: 
[('secured', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('secured', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[secured, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

 RAVN's GDPR Robot is also able to hasten requests for information (Data Subject   


>> Tokens are: 
[ , RAVN, GDPR, Robot, able, hasten, requests, information, (, Data, Subject,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('RAVN', 'PROPN'), ('GDPR', 'PROPN'), ('Robot', 'PROPN'), ('able', 'ADJ'), ('hasten', 'VERB'), ('requests', 'NOUN'), ('information', 'NOUN'), ('(', 'PUNCT'), ('Data', 'PROPN'), ('Subject', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'nmod'), ('RAVN', 'poss'), ('GDPR', 'compound'), ('Robot', 'nsubj'), ('able', 'acomp'), ('hasten', 'xcomp'), ('requests', 'dobj'), ('information', 'pobj'), ('(', 'punct'), ('Data', 'compound'), ('Subject', 'appos'), (' ', 'nummod')]

>> Bigrams: 
[[ , RAVN], [RAVN, GDPR], [GDPR, Robot], [Robot, able], [able, hasten], [hasten, requests], [requests, information], [information, (], [(, Data], [Data, Subject], [Subject,  ]]

>> Trigrams: 
[[ , RAVN, GDPR], [RAVN, GDPR, Robot], [GDPR, Robot, able], [Robot, able, hasten], [able, hasten, requests], [hasten, requests, information], [requests, information, (], [information, (, Data], [(, Data, Subject], [Data, Subject,  ]]

>> Noun Phrases are: 
[ RAVN's GDPR Robot, requests, information, (Data Subject]

>> Named Entities are: 
[('GDPR Robot', 'PERSON'), ('Data Subject', 'ORG')] 


================================ Paragraph 512 =================================

Access Requests - "DSAR") in a simple and efficient way, removing the need for a physical  

------------------- Sentence 1 -------------------

Access Requests - "DSAR") in a simple and efficient way, removing the need for a physical   


>> Tokens are: 
[Access, Requests, -, ", DSAR, ", ), simple, efficient, way, ,, removing, need, physical,  ] 

>> PoS Tags are: 
[('Access', 'PROPN'), ('Requests', 'PROPN'), ('-', 'PUNCT'), ('"', 'PUNCT'), ('DSAR', 'PROPN'), ('"', 'PUNCT'), (')', 'PUNCT'), ('simple', 'ADJ'), ('efficient', 'ADJ'), ('way', 'NOUN'), (',', 'PUNCT'), ('removing', 'VERB'), ('need', 'NOUN'), ('physical', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Access', 'compound'), ('Requests', 'dep'), ('-', 'punct'), ('"', 'punct'), ('DSAR', 'ROOT'), ('"', 'punct'), (')', 'punct'), ('simple', 'amod'), ('efficient', 'conj'), ('way', 'pobj'), (',', 'punct'), ('removing', 'advcl'), ('need', 'dobj'), ('physical', 'amod'), (' ', 'pobj')]

>> Bigrams: 
[[Access, Requests], [Requests, -], [-, "], [", DSAR], [DSAR, "], [", )], [), simple], [simple, efficient], [efficient, way], [way, ,], [,, removing], [removing, need], [need, physical], [physical,  ]]

>> Trigrams: 
[[Access, Requests, -], [Requests, -, "], [-, ", DSAR], [", DSAR, "], [DSAR, ", )], [", ), simple], [), simple, efficient], [simple, efficient, way], [efficient, way, ,], [way, ,, removing], [,, removing, need], [removing, need, physical], [need, physical,  ]]

>> Noun Phrases are: 
[Access Requests - "DSAR, a simple and efficient way, the need]

>> Named Entities are: 
[] 


================================ Paragraph 513 =================================

approach to these requests which tends to be very labour thorough. Peter Wallqvist, CSO at  

------------------- Sentence 1 -------------------

approach to these requests which tends to be very labour thorough. 


>> Tokens are: 
[approach, requests, tends, labour, thorough, .] 

>> PoS Tags are: 
[('approach', 'NOUN'), ('requests', 'NOUN'), ('tends', 'VERB'), ('labour', 'ADJ'), ('thorough', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('approach', 'ROOT'), ('requests', 'pobj'), ('tends', 'relcl'), ('labour', 'advmod'), ('thorough', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[approach, requests], [requests, tends], [tends, labour], [labour, thorough], [thorough, .]]

>> Trigrams: 
[[approach, requests, tends], [requests, tends, labour], [tends, labour, thorough], [labour, thorough, .]]

>> Noun Phrases are: 
[approach, these requests]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Peter Wallqvist, CSO at   


>> Tokens are: 
[Peter, Wallqvist, ,, CSO,  ] 

>> PoS Tags are: 
[('Peter', 'PROPN'), ('Wallqvist', 'PROPN'), (',', 'PUNCT'), ('CSO', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Peter', 'compound'), ('Wallqvist', 'dep'), (',', 'punct'), ('CSO', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[Peter, Wallqvist], [Wallqvist, ,], [,, CSO], [CSO,  ]]

>> Trigrams: 
[[Peter, Wallqvist, ,], [Wallqvist, ,, CSO], [,, CSO,  ]]

>> Noun Phrases are: 
[Peter Wallqvist, CSO]

>> Named Entities are: 
[('Peter Wallqvist', 'PERSON'), ('CSO', 'ORG')] 


================================ Paragraph 514 =================================

RAVN Systems commented, "GDPR compliance is of universal paramountcy as it will  

------------------- Sentence 1 -------------------

RAVN Systems commented, "GDPR compliance is of universal paramountcy as it will   


>> Tokens are: 
[RAVN, Systems, commented, ,, ", GDPR, compliance, universal, paramountcy,  ] 

>> PoS Tags are: 
[('RAVN', 'PROPN'), ('Systems', 'PROPN'), ('commented', 'VERB'), (',', 'PUNCT'), ('"', 'PUNCT'), ('GDPR', 'ADJ'), ('compliance', 'NOUN'), ('universal', 'ADJ'), ('paramountcy', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('RAVN', 'compound'), ('Systems', 'nsubj'), ('commented', 'ROOT'), (',', 'punct'), ('"', 'punct'), ('GDPR', 'compound'), ('compliance', 'nsubj'), ('universal', 'amod'), ('paramountcy', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[RAVN, Systems], [Systems, commented], [commented, ,], [,, "], [", GDPR], [GDPR, compliance], [compliance, universal], [universal, paramountcy], [paramountcy,  ]]

>> Trigrams: 
[[RAVN, Systems, commented], [Systems, commented, ,], [commented, ,, "], [,, ", GDPR], [", GDPR, compliance], [GDPR, compliance, universal], [compliance, universal, paramountcy], [universal, paramountcy,  ]]

>> Noun Phrases are: 
[RAVN Systems, GDPR compliance, universal paramountcy, it]

>> Named Entities are: 
[] 


================================ Paragraph 515 =================================

exploit to any organisation that control and process data concerning EU citizens.  

------------------- Sentence 1 -------------------

exploit to any organisation that control and process data concerning EU citizens. 


>> Tokens are: 
[exploit, organisation, control, process, data, concerning, EU, citizens, .] 

>> PoS Tags are: 
[('exploit', 'VERB'), ('organisation', 'NOUN'), ('control', 'VERB'), ('process', 'NOUN'), ('data', 'NOUN'), ('concerning', 'VERB'), ('EU', 'PROPN'), ('citizens', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('exploit', 'ROOT'), ('organisation', 'pobj'), ('control', 'nmod'), ('process', 'conj'), ('data', 'dobj'), ('concerning', 'acl'), ('EU', 'compound'), ('citizens', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[exploit, organisation], [organisation, control], [control, process], [process, data], [data, concerning], [concerning, EU], [EU, citizens], [citizens, .]]

>> Trigrams: 
[[exploit, organisation, control], [organisation, control, process], [control, process, data], [process, data, concerning], [data, concerning, EU], [concerning, EU, citizens], [EU, citizens, .]]

>> Noun Phrases are: 
[any organisation, that control and process data, EU citizens]

>> Named Entities are: 
[('EU', 'ORG')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 516 =================================

LINK:http://markets.financialcontent.com/stocks/news/read/33888795/RAVN_Systems_Launch_the_ACE_Po 

------------------- Sentence 1 -------------------

LINK:http://markets.financialcontent.com/stocks/news/read/33888795/RAVN_Systems_Launch_the_ACE_Po 


>> Tokens are: 
[LINK, :, http://markets.financialcontent.com, /, stocks, /, news, /, read/33888795, /, RAVN_Systems_Launch_the_ACE_Po] 

>> PoS Tags are: 
[('LINK', 'PROPN'), (':', 'PUNCT'), ('http://markets.financialcontent.com', 'X'), ('/', 'SYM'), ('stocks', 'NOUN'), ('/', 'SYM'), ('news', 'NOUN'), ('/', 'SYM'), ('read/33888795', 'PROPN'), ('/', 'PUNCT'), ('RAVN_Systems_Launch_the_ACE_Po', 'PROPN')] 

>> Dependency Tags are: 
[('LINK', 'ROOT'), (':', 'punct'), ('http://markets.financialcontent.com', 'appos'), ('/', 'punct'), ('stocks', 'nmod'), ('/', 'punct'), ('news', 'nmod'), ('/', 'punct'), ('read/33888795', 'appos'), ('/', 'punct'), ('RAVN_Systems_Launch_the_ACE_Po', 'appos')]

>> Bigrams: 
[[LINK, :], [:, http://markets.financialcontent.com], [http://markets.financialcontent.com, /], [/, stocks], [stocks, /], [/, news], [news, /], [/, read/33888795], [read/33888795, /], [/, RAVN_Systems_Launch_the_ACE_Po]]

>> Trigrams: 
[[LINK, :, http://markets.financialcontent.com], [:, http://markets.financialcontent.com, /], [http://markets.financialcontent.com, /, stocks], [/, stocks, /], [stocks, /, news], [/, news, /], [news, /, read/33888795], [/, read/33888795, /], [read/33888795, /, RAVN_Systems_Launch_the_ACE_Po]]

>> Noun Phrases are: 
[LINK, /stocks/news/read/33888795, RAVN_Systems_Launch_the_ACE_Po]

>> Named Entities are: 
[] 


================================ Paragraph 517 =================================

wered_GDPR_Robot  

------------------- Sentence 1 -------------------

wered_GDPR_Robot   


>> Tokens are: 
[wered_GDPR_Robot,  ] 

>> PoS Tags are: 
[('wered_GDPR_Robot', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('wered_GDPR_Robot', 'compound'), (' ', 'ROOT')]

>> Bigrams: 
[[wered_GDPR_Robot,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 518 =================================

8.2 Eno A Natural Language Chatbot Launched by Capital One [105] 

------------------- Sentence 1 -------------------

8.2 Eno A Natural Language Chatbot Launched by Capital One 


>> Tokens are: 
[8.2, Eno, Natural, Language, Chatbot, Launched, Capital] 

>> PoS Tags are: 
[('8.2', 'NUM'), ('Eno', 'PROPN'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('Chatbot', 'PROPN'), ('Launched', 'VERB'), ('Capital', 'PROPN')] 

>> Dependency Tags are: 
[('8.2', 'nummod'), ('Eno', 'compound'), ('Natural', 'compound'), ('Language', 'compound'), ('Chatbot', 'nsubj'), ('Launched', 'ROOT'), ('Capital', 'pobj')]

>> Bigrams: 
[[8.2, Eno], [Eno, Natural], [Natural, Language], [Language, Chatbot], [Chatbot, Launched], [Launched, Capital]]

>> Trigrams: 
[[8.2, Eno, Natural], [Eno, Natural, Language], [Natural, Language, Chatbot], [Language, Chatbot, Launched], [Chatbot, Launched, Capital]]

>> Noun Phrases are: 
[8.2 Eno A Natural Language Chatbot, Capital]

>> Named Entities are: 
[('8.2', 'CARDINAL'), ('Capital One', 'ORG')] 

------------------- Sentence 2 -------------------

[105] 


>> Tokens are: 
[[, 105, ]] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('105', 'NUM'), (']', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('105', 'ROOT'), (']', 'punct')]

>> Bigrams: 
[[[, 105], [105, ]]]

>> Trigrams: 
[[[, 105, ]]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('105', 'CARDINAL')] 


================================ Paragraph 519 =================================

Capital one announces chatbot for customers called Eno. Eno is a natural language chatbot  

------------------- Sentence 1 -------------------

Capital one announces chatbot for customers called Eno. 


>> Tokens are: 
[Capital, announces, chatbot, customers, called, Eno, .] 

>> PoS Tags are: 
[('Capital', 'NOUN'), ('announces', 'VERB'), ('chatbot', 'NOUN'), ('customers', 'NOUN'), ('called', 'VERB'), ('Eno', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Capital', 'nsubj'), ('announces', 'ROOT'), ('chatbot', 'dobj'), ('customers', 'pobj'), ('called', 'acl'), ('Eno', 'oprd'), ('.', 'punct')]

>> Bigrams: 
[[Capital, announces], [announces, chatbot], [chatbot, customers], [customers, called], [called, Eno], [Eno, .]]

>> Trigrams: 
[[Capital, announces, chatbot], [announces, chatbot, customers], [chatbot, customers, called], [customers, called, Eno], [called, Eno, .]]

>> Noun Phrases are: 
[Capital, chatbot, customers, Eno]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Eno is a natural language chatbot   


>> Tokens are: 
[Eno, natural, language, chatbot,  ] 

>> PoS Tags are: 
[('Eno', 'PROPN'), ('natural', 'ADJ'), ('language', 'NOUN'), ('chatbot', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Eno', 'nsubj'), ('natural', 'amod'), ('language', 'compound'), ('chatbot', 'attr'), (' ', 'punct')]

>> Bigrams: 
[[Eno, natural], [natural, language], [language, chatbot], [chatbot,  ]]

>> Trigrams: 
[[Eno, natural, language], [natural, language, chatbot], [language, chatbot,  ]]

>> Noun Phrases are: 
[Eno, a natural language chatbot]

>> Named Entities are: 
[] 


================================ Paragraph 520 =================================

that people socialize through texting. Capital one claims that Eno is First natural language  

------------------- Sentence 1 -------------------

that people socialize through texting. 


>> Tokens are: 
[people, socialize, texting, .] 

>> PoS Tags are: 
[('people', 'NOUN'), ('socialize', 'VERB'), ('texting', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('people', 'nsubj'), ('socialize', 'ROOT'), ('texting', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[people, socialize], [socialize, texting], [texting, .]]

>> Trigrams: 
[[people, socialize, texting], [socialize, texting, .]]

>> Noun Phrases are: 
[people, texting]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Capital one claims that Eno is First natural language   


>> Tokens are: 
[Capital, claims, Eno, natural, language,  ] 

>> PoS Tags are: 
[('Capital', 'NOUN'), ('claims', 'VERB'), ('Eno', 'PROPN'), ('natural', 'ADJ'), ('language', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Capital', 'nsubj'), ('claims', 'ROOT'), ('Eno', 'nsubj'), ('natural', 'amod'), ('language', 'attr'), (' ', 'punct')]

>> Bigrams: 
[[Capital, claims], [claims, Eno], [Eno, natural], [natural, language], [language,  ]]

>> Trigrams: 
[[Capital, claims, Eno], [claims, Eno, natural], [Eno, natural, language], [natural, language,  ]]

>> Noun Phrases are: 
[Capital, Eno, First natural language]

>> Named Entities are: 
[('First', 'ORDINAL')] 


================================ Paragraph 521 =================================

SMS chatbot from a U.S. bank that allows customer to ask questions using natural language.  

------------------- Sentence 1 -------------------

SMS chatbot from a U.S. bank that allows customer to ask questions using natural language. 


>> Tokens are: 
[SMS, chatbot, U.S., bank, allows, customer, ask, questions, natural, language, .] 

>> PoS Tags are: 
[('SMS', 'NOUN'), ('chatbot', 'NOUN'), ('U.S.', 'PROPN'), ('bank', 'NOUN'), ('allows', 'VERB'), ('customer', 'NOUN'), ('ask', 'VERB'), ('questions', 'NOUN'), ('natural', 'ADJ'), ('language', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('SMS', 'compound'), ('chatbot', 'ROOT'), ('U.S.', 'compound'), ('bank', 'pobj'), ('allows', 'relcl'), ('customer', 'nsubj'), ('ask', 'ccomp'), ('questions', 'dobj'), ('natural', 'amod'), ('language', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[SMS, chatbot], [chatbot, U.S.], [U.S., bank], [bank, allows], [allows, customer], [customer, ask], [ask, questions], [questions, natural], [natural, language], [language, .]]

>> Trigrams: 
[[SMS, chatbot, U.S.], [chatbot, U.S., bank], [U.S., bank, allows], [bank, allows, customer], [allows, customer, ask], [customer, ask, questions], [ask, questions, natural], [questions, natural, language], [natural, language, .]]

>> Noun Phrases are: 
[SMS chatbot, a U.S. bank, customer, questions, natural language]

>> Named Entities are: 
[('U.S.', 'GPE')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 522 =================================

Customers can interact with Eno asking questions about their savings and others using a text  

------------------- Sentence 1 -------------------

Customers can interact with Eno asking questions about their savings and others using a text   


>> Tokens are: 
[Customers, interact, Eno, asking, questions, savings, text,  ] 

>> PoS Tags are: 
[('Customers', 'NOUN'), ('interact', 'VERB'), ('Eno', 'PROPN'), ('asking', 'VERB'), ('questions', 'NOUN'), ('savings', 'NOUN'), ('text', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Customers', 'nsubj'), ('interact', 'ROOT'), ('Eno', 'nsubj'), ('asking', 'pcomp'), ('questions', 'dobj'), ('savings', 'pobj'), ('text', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[Customers, interact], [interact, Eno], [Eno, asking], [asking, questions], [questions, savings], [savings, text], [text,  ]]

>> Trigrams: 
[[Customers, interact, Eno], [interact, Eno, asking], [Eno, asking, questions], [asking, questions, savings], [questions, savings, text], [savings, text,  ]]

>> Noun Phrases are: 
[Customers, Eno, questions, their savings, others, a text]

>> Named Entities are: 
[] 


================================ Paragraph 523 =================================

interface. Eno makes such an environment that it feels that a human is interacting. Ken  

------------------- Sentence 1 -------------------

interface. 


>> Tokens are: 
[interface, .] 

>> PoS Tags are: 
[('interface', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('interface', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[interface, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[interface]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Eno makes such an environment that it feels that a human is interacting. 


>> Tokens are: 
[Eno, makes, environment, feels, human, interacting, .] 

>> PoS Tags are: 
[('Eno', 'PROPN'), ('makes', 'VERB'), ('environment', 'NOUN'), ('feels', 'VERB'), ('human', 'NOUN'), ('interacting', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Eno', 'nsubj'), ('makes', 'ROOT'), ('environment', 'dobj'), ('feels', 'acl'), ('human', 'nsubj'), ('interacting', 'ccomp'), ('.', 'punct')]

>> Bigrams: 
[[Eno, makes], [makes, environment], [environment, feels], [feels, human], [human, interacting], [interacting, .]]

>> Trigrams: 
[[Eno, makes, environment], [makes, environment, feels], [environment, feels, human], [feels, human, interacting], [human, interacting, .]]

>> Noun Phrases are: 
[Eno, such an environment, it, a human]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Ken   


>> Tokens are: 
[Ken,  ] 

>> PoS Tags are: 
[('Ken', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Ken', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[Ken,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Ken]

>> Named Entities are: 
[('Ken', 'PERSON')] 


================================ Paragraph 524 =================================

Dodelin, Capital One’s vice president of digital product development, said “We kind of  

------------------- Sentence 1 -------------------

Dodelin, Capital One’s vice president of digital product development, said “We kind of   


>> Tokens are: 
[Dodelin, ,, Capital, vice, president, digital, product, development, ,, said, “, kind,  ] 

>> PoS Tags are: 
[('Dodelin', 'PROPN'), (',', 'PUNCT'), ('Capital', 'PROPN'), ('vice', 'NOUN'), ('president', 'NOUN'), ('digital', 'ADJ'), ('product', 'NOUN'), ('development', 'NOUN'), (',', 'PUNCT'), ('said', 'VERB'), ('“', 'PUNCT'), ('kind', 'ADV'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Dodelin', 'nsubj'), (',', 'punct'), ('Capital', 'compound'), ('vice', 'compound'), ('president', 'appos'), ('digital', 'amod'), ('product', 'compound'), ('development', 'pobj'), (',', 'punct'), ('said', 'ROOT'), ('“', 'punct'), ('kind', 'advmod'), (' ', 'punct')]

>> Bigrams: 
[[Dodelin, ,], [,, Capital], [Capital, vice], [vice, president], [president, digital], [digital, product], [product, development], [development, ,], [,, said], [said, “], [“, kind], [kind,  ]]

>> Trigrams: 
[[Dodelin, ,, Capital], [,, Capital, vice], [Capital, vice, president], [vice, president, digital], [president, digital, product], [digital, product, development], [product, development, ,], [development, ,, said], [,, said, “], [said, “, kind], [“, kind,  ]]

>> Noun Phrases are: 
[Dodelin, Capital One, vice president, digital product development, We]

>> Named Entities are: 
[('Capital One’s', 'ORG')] 


================================ Paragraph 525 =================================

launched a chatbot and didn’t know it.”   

------------------- Sentence 1 -------------------

launched a chatbot and didn’t know it.” 


>> Tokens are: 
[launched, chatbot, know, ., ”] 

>> PoS Tags are: 
[('launched', 'VERB'), ('chatbot', 'NOUN'), ('know', 'VERB'), ('.', 'PUNCT'), ('”', 'PUNCT')] 

>> Dependency Tags are: 
[('launched', 'ROOT'), ('chatbot', 'dobj'), ('know', 'conj'), ('.', 'punct'), ('”', 'punct')]

>> Bigrams: 
[[launched, chatbot], [chatbot, know], [know, .], [., ”]]

>> Trigrams: 
[[launched, chatbot, know], [chatbot, know, .], [know, ., ”]]

>> Noun Phrases are: 
[a chatbot, it]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 526 =================================

This provides a different platform than other brands that launch chatbots like Facebook  

------------------- Sentence 1 -------------------

This provides a different platform than other brands that launch chatbots like Facebook   


>> Tokens are: 
[provides, different, platform, brands, launch, chatbots, like, Facebook,  ] 

>> PoS Tags are: 
[('provides', 'VERB'), ('different', 'ADJ'), ('platform', 'NOUN'), ('brands', 'NOUN'), ('launch', 'VERB'), ('chatbots', 'NOUN'), ('like', 'ADP'), ('Facebook', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('provides', 'ROOT'), ('different', 'amod'), ('platform', 'dobj'), ('brands', 'pobj'), ('launch', 'relcl'), ('chatbots', 'dobj'), ('like', 'prep'), ('Facebook', 'compound'), (' ', 'pobj')]

>> Bigrams: 
[[provides, different], [different, platform], [platform, brands], [brands, launch], [launch, chatbots], [chatbots, like], [like, Facebook], [Facebook,  ]]

>> Trigrams: 
[[provides, different, platform], [different, platform, brands], [platform, brands, launch], [brands, launch, chatbots], [launch, chatbots, like], [chatbots, like, Facebook], [like, Facebook,  ]]

>> Noun Phrases are: 
[a different platform, other brands, chatbots]

>> Named Entities are: 
[('Facebook  ', 'PRODUCT')] 


================================ Paragraph 527 =================================

Messenger and Skype. They believed that Facebook has too much access of private  

------------------- Sentence 1 -------------------

Messenger and Skype. 


>> Tokens are: 
[Messenger, Skype, .] 

>> PoS Tags are: 
[('Messenger', 'PROPN'), ('Skype', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Messenger', 'ROOT'), ('Skype', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Messenger, Skype], [Skype, .]]

>> Trigrams: 
[[Messenger, Skype, .]]

>> Noun Phrases are: 
[Messenger, Skype]

>> Named Entities are: 
[('Skype', 'PERSON')] 

------------------- Sentence 2 -------------------

They believed that Facebook has too much access of private   


>> Tokens are: 
[believed, Facebook, access, private,  ] 

>> PoS Tags are: 
[('believed', 'VERB'), ('Facebook', 'PROPN'), ('access', 'NOUN'), ('private', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('believed', 'ROOT'), ('Facebook', 'nsubj'), ('access', 'dobj'), ('private', 'amod'), (' ', 'pobj')]

>> Bigrams: 
[[believed, Facebook], [Facebook, access], [access, private], [private,  ]]

>> Trigrams: 
[[believed, Facebook, access], [Facebook, access, private], [access, private,  ]]

>> Noun Phrases are: 
[They, Facebook, too much access]

>> Named Entities are: 
[] 


================================ Paragraph 528 =================================

information of a person, which could get them into trouble with privacy laws of U.S.  

------------------- Sentence 1 -------------------

information of a person, which could get them into trouble with privacy laws of U.S.   


>> Tokens are: 
[information, person, ,, trouble, privacy, laws, U.S.,  ] 

>> PoS Tags are: 
[('information', 'NOUN'), ('person', 'NOUN'), (',', 'PUNCT'), ('trouble', 'NOUN'), ('privacy', 'NOUN'), ('laws', 'NOUN'), ('U.S.', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('information', 'ROOT'), ('person', 'pobj'), (',', 'punct'), ('trouble', 'pobj'), ('privacy', 'compound'), ('laws', 'pobj'), ('U.S.', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[information, person], [person, ,], [,, trouble], [trouble, privacy], [privacy, laws], [laws, U.S.], [U.S.,  ]]

>> Trigrams: 
[[information, person, ,], [person, ,, trouble], [,, trouble, privacy], [trouble, privacy, laws], [privacy, laws, U.S.], [laws, U.S.,  ]]

>> Noun Phrases are: 
[information, a person, them, trouble, privacy laws, U.S.]

>> Named Entities are: 
[('U.S.', 'GPE')] 


================================ Paragraph 529 =================================

financial institutions work under. Like any Facebook Page admin can access full transcripts  

------------------- Sentence 1 -------------------

financial institutions work under. 


>> Tokens are: 
[financial, institutions, work, .] 

>> PoS Tags are: 
[('financial', 'ADJ'), ('institutions', 'NOUN'), ('work', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('financial', 'amod'), ('institutions', 'nsubj'), ('work', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[financial, institutions], [institutions, work], [work, .]]

>> Trigrams: 
[[financial, institutions, work], [institutions, work, .]]

>> Noun Phrases are: 
[financial institutions]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Like any Facebook Page admin can access full transcripts   


>> Tokens are: 
[Like, Facebook, Page, admin, access, transcripts,  ] 

>> PoS Tags are: 
[('Like', 'ADP'), ('Facebook', 'PROPN'), ('Page', 'PROPN'), ('admin', 'NOUN'), ('access', 'VERB'), ('transcripts', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Like', 'prep'), ('Facebook', 'compound'), ('Page', 'compound'), ('admin', 'nsubj'), ('access', 'ROOT'), ('transcripts', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[Like, Facebook], [Facebook, Page], [Page, admin], [admin, access], [access, transcripts], [transcripts,  ]]

>> Trigrams: 
[[Like, Facebook, Page], [Facebook, Page, admin], [Page, admin, access], [admin, access, transcripts], [access, transcripts,  ]]

>> Noun Phrases are: 
[any Facebook Page admin, full transcripts]

>> Named Entities are: 
[] 


================================ Paragraph 530 =================================

of the bot’s conversations. If that would be the case then the admins could easily view the  

------------------- Sentence 1 -------------------

of the bot’s conversations. 


>> Tokens are: 
[bot, conversations, .] 

>> PoS Tags are: 
[('bot', 'NOUN'), ('conversations', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('bot', 'poss'), ('conversations', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[bot, conversations], [conversations, .]]

>> Trigrams: 
[[bot, conversations, .]]

>> Noun Phrases are: 
[the bot’s conversations]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

If that would be the case then the admins could easily view the   


>> Tokens are: 
[case, admins, easily, view,  ] 

>> PoS Tags are: 
[('case', 'NOUN'), ('admins', 'NOUN'), ('easily', 'ADV'), ('view', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('case', 'attr'), ('admins', 'nsubj'), ('easily', 'advmod'), ('view', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[case, admins], [admins, easily], [easily, view], [view,  ]]

>> Trigrams: 
[[case, admins, easily], [admins, easily, view], [easily, view,  ]]

>> Noun Phrases are: 
[the case, the admins]

>> Named Entities are: 
[] 


================================ Paragraph 531 =================================

personal banking information of customers with is not correct  

------------------- Sentence 1 -------------------

personal banking information of customers with is not correct   


>> Tokens are: 
[personal, banking, information, customers, correct,  ] 

>> PoS Tags are: 
[('personal', 'ADJ'), ('banking', 'NOUN'), ('information', 'NOUN'), ('customers', 'NOUN'), ('correct', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('personal', 'amod'), ('banking', 'compound'), ('information', 'nsubj'), ('customers', 'pobj'), ('correct', 'acomp'), (' ', 'punct')]

>> Bigrams: 
[[personal, banking], [banking, information], [information, customers], [customers, correct], [correct,  ]]

>> Trigrams: 
[[personal, banking, information], [banking, information, customers], [information, customers, correct], [customers, correct,  ]]

>> Noun Phrases are: 
[personal banking information, customers]

>> Named Entities are: 
[] 


================================ Paragraph 532 =================================

 LINK: https://www.macobserver.com/analysis/capital-one-natural-language-chatbot-eno/  

------------------- Sentence 1 -------------------

 LINK: https://www.macobserver.com/analysis/capital-one-natural-language-chatbot-eno/   


>> Tokens are: 
[ , LINK, :, https://www.macobserver.com/analysis/capital-one-natural-language-chatbot-eno/,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('LINK', 'PROPN'), (':', 'PUNCT'), ('https://www.macobserver.com/analysis/capital-one-natural-language-chatbot-eno/', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('LINK', 'ROOT'), (':', 'punct'), ('https://www.macobserver.com/analysis/capital-one-natural-language-chatbot-eno/', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[ , LINK], [LINK, :], [:, https://www.macobserver.com/analysis/capital-one-natural-language-chatbot-eno/], [https://www.macobserver.com/analysis/capital-one-natural-language-chatbot-eno/,  ]]

>> Trigrams: 
[[ , LINK, :], [LINK, :, https://www.macobserver.com/analysis/capital-one-natural-language-chatbot-eno/], [:, https://www.macobserver.com/analysis/capital-one-natural-language-chatbot-eno/,  ]]

>> Noun Phrases are: 
[ LINK, https://www.macobserver.com/analysis/capital-one-natural-language-chatbot-eno/]

>> Named Entities are: 
[] 


================================ Paragraph 533 =================================

8.3  Future of BI in Natural Language Processing [106]  

------------------- Sentence 1 -------------------

8.3  Future of BI in Natural Language Processing [106]   


>> Tokens are: 
[8.3,  , Future, BI, Natural, Language, Processing, [, 106, ],  ] 

>> PoS Tags are: 
[('8.3', 'NUM'), (' ', 'SPACE'), ('Future', 'PROPN'), ('BI', 'PROPN'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'PROPN'), ('[', 'PUNCT'), ('106', 'NUM'), (']', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('8.3', 'nummod'), (' ', 'prep'), ('Future', 'ROOT'), ('BI', 'pobj'), ('Natural', 'compound'), ('Language', 'compound'), ('Processing', 'pobj'), ('[', 'punct'), ('106', 'appos'), (']', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[8.3,  ], [ , Future], [Future, BI], [BI, Natural], [Natural, Language], [Language, Processing], [Processing, [], [[, 106], [106, ]], [],  ]]

>> Trigrams: 
[[8.3,  , Future], [ , Future, BI], [Future, BI, Natural], [BI, Natural, Language], [Natural, Language, Processing], [Language, Processing, [], [Processing, [, 106], [[, 106, ]], [106, ],  ]]

>> Noun Phrases are: 
[8.3  Future, BI, Natural Language Processing]

>> Named Entities are: 
[('8.3', 'CARDINAL'), ('106', 'CARDINAL')] 


================================ Paragraph 534 =================================

Several companies in Bi spaces are trying to get with the trend and trying hard to ensure that  

------------------- Sentence 1 -------------------

Several companies in Bi spaces are trying to get with the trend and trying hard to ensure 


>> Tokens are: 
[companies, Bi, spaces, trying, trend, trying, hard, ensure] 

>> PoS Tags are: 
[('companies', 'NOUN'), ('Bi', 'PROPN'), ('spaces', 'NOUN'), ('trying', 'VERB'), ('trend', 'NOUN'), ('trying', 'VERB'), ('hard', 'ADV'), ('ensure', 'VERB')] 

>> Dependency Tags are: 
[('companies', 'nsubj'), ('Bi', 'compound'), ('spaces', 'pobj'), ('trying', 'ROOT'), ('trend', 'pobj'), ('trying', 'conj'), ('hard', 'advmod'), ('ensure', 'advcl')]

>> Bigrams: 
[[companies, Bi], [Bi, spaces], [spaces, trying], [trying, trend], [trend, trying], [trying, hard], [hard, ensure]]

>> Trigrams: 
[[companies, Bi, spaces], [Bi, spaces, trying], [spaces, trying, trend], [trying, trend, trying], [trend, trying, hard], [trying, hard, ensure]]

>> Noun Phrases are: 
[Several companies, Bi spaces, the trend]

>> Named Entities are: 
[('Bi', 'ORG')] 

------------------- Sentence 2 -------------------

that   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'pobj')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 535 =================================

data becomes more friendly and easily accessible. But still there is long way for this.BI will  

------------------- Sentence 1 -------------------

data becomes more friendly and easily accessible. 


>> Tokens are: 
[data, friendly, easily, accessible, .] 

>> PoS Tags are: 
[('data', 'NOUN'), ('friendly', 'ADJ'), ('easily', 'ADV'), ('accessible', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('data', 'nsubj'), ('friendly', 'acomp'), ('easily', 'advmod'), ('accessible', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[data, friendly], [friendly, easily], [easily, accessible], [accessible, .]]

>> Trigrams: 
[[data, friendly, easily], [friendly, easily, accessible], [easily, accessible, .]]

>> Noun Phrases are: 
[data]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

But still there is long way for this. 


>> Tokens are: 
[long, way, .] 

>> PoS Tags are: 
[('long', 'ADJ'), ('way', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('long', 'amod'), ('way', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[long, way], [way, .]]

>> Trigrams: 
[[long, way, .]]

>> Noun Phrases are: 
[long way]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

BI will   


>> Tokens are: 
[BI,  ] 

>> PoS Tags are: 
[('BI', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('BI', 'nsubj'), (' ', 'ROOT')]

>> Bigrams: 
[[BI,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[BI]

>> Named Entities are: 
[('BI', 'ORG')] 


================================ Paragraph 536 =================================

also make it easier to access as GUI is not needed. Because now a days the queries are made  

------------------- Sentence 1 -------------------

also make it easier to access as GUI is not needed. 


>> Tokens are: 
[easier, access, GUI, needed, .] 

>> PoS Tags are: 
[('easier', 'ADJ'), ('access', 'VERB'), ('GUI', 'PROPN'), ('needed', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('easier', 'ccomp'), ('access', 'xcomp'), ('GUI', 'nsubjpass'), ('needed', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[easier, access], [access, GUI], [GUI, needed], [needed, .]]

>> Trigrams: 
[[easier, access, GUI], [access, GUI, needed], [GUI, needed, .]]

>> Noun Phrases are: 
[it, GUI]

>> Named Entities are: 
[('GUI', 'ORG')] 

------------------- Sentence 2 -------------------

Because now a days the queries are made   


>> Tokens are: 
[days, queries,  ] 

>> PoS Tags are: 
[('days', 'NOUN'), ('queries', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('days', 'npadvmod'), ('queries', 'nsubjpass'), (' ', 'punct')]

>> Bigrams: 
[[days, queries], [queries,  ]]

>> Trigrams: 
[[days, queries,  ]]

>> Noun Phrases are: 
[the queries]

>> Named Entities are: 
[] 


================================ Paragraph 537 =================================

by text or voice command on smartphones.one of the most common example is Google might  

------------------- Sentence 1 -------------------

by text or voice command on smartphones.one of the most common example is Google might   


>> Tokens are: 
[text, voice, command, smartphones.one, common, example, Google,  ] 

>> PoS Tags are: 
[('text', 'NOUN'), ('voice', 'NOUN'), ('command', 'NOUN'), ('smartphones.one', 'X'), ('common', 'ADJ'), ('example', 'NOUN'), ('Google', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('text', 'pobj'), ('voice', 'compound'), ('command', 'conj'), ('smartphones.one', 'pobj'), ('common', 'amod'), ('example', 'pobj'), ('Google', 'nsubj'), (' ', 'attr')]

>> Bigrams: 
[[text, voice], [voice, command], [command, smartphones.one], [smartphones.one, common], [common, example], [example, Google], [Google,  ]]

>> Trigrams: 
[[text, voice, command], [voice, command, smartphones.one], [command, smartphones.one, common], [smartphones.one, common, example], [common, example, Google], [example, Google,  ]]

>> Noun Phrases are: 
[text, voice command, the most common example, Google]

>> Named Entities are: 
[('Google', 'ORG')] 


================================ Paragraph 538 =================================

tell you today what will be the tomorrows weather. But soon enough, we will be able to ask  

------------------- Sentence 1 -------------------

tell you today what will be the tomorrows weather. 


>> Tokens are: 
[tell, today, tomorrows, weather, .] 

>> PoS Tags are: 
[('tell', 'VERB'), ('today', 'NOUN'), ('tomorrows', 'NOUN'), ('weather', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('tell', 'ROOT'), ('today', 'npadvmod'), ('tomorrows', 'compound'), ('weather', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[tell, today], [today, tomorrows], [tomorrows, weather], [weather, .]]

>> Trigrams: 
[[tell, today, tomorrows], [today, tomorrows, weather], [tomorrows, weather, .]]

>> Noun Phrases are: 
[you, what, the tomorrows weather]

>> Named Entities are: 
[('today', 'DATE')] 

------------------- Sentence 2 -------------------

But soon enough, we will be able to ask   


>> Tokens are: 
[soon, ,, able, ask,  ] 

>> PoS Tags are: 
[('soon', 'ADV'), (',', 'PUNCT'), ('able', 'ADJ'), ('ask', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('soon', 'advmod'), (',', 'punct'), ('able', 'acomp'), ('ask', 'xcomp'), (' ', 'dobj')]

>> Bigrams: 
[[soon, ,], [,, able], [able, ask], [ask,  ]]

>> Trigrams: 
[[soon, ,, able], [,, able, ask], [able, ask,  ]]

>> Noun Phrases are: 
[we]

>> Named Entities are: 
[] 


================================ Paragraph 539 =================================

our personal data chatbot about customer sentiment today, and how do we feel about their  

------------------- Sentence 1 -------------------

our personal data chatbot about customer sentiment today, and how do we feel about their   


>> Tokens are: 
[personal, data, chatbot, customer, sentiment, today, ,, feel,  ] 

>> PoS Tags are: 
[('personal', 'ADJ'), ('data', 'NOUN'), ('chatbot', 'NOUN'), ('customer', 'NOUN'), ('sentiment', 'NOUN'), ('today', 'NOUN'), (',', 'PUNCT'), ('feel', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('personal', 'amod'), ('data', 'compound'), ('chatbot', 'ROOT'), ('customer', 'compound'), ('sentiment', 'pobj'), ('today', 'npadvmod'), (',', 'punct'), ('feel', 'conj'), (' ', 'pobj')]

>> Bigrams: 
[[personal, data], [data, chatbot], [chatbot, customer], [customer, sentiment], [sentiment, today], [today, ,], [,, feel], [feel,  ]]

>> Trigrams: 
[[personal, data, chatbot], [data, chatbot, customer], [chatbot, customer, sentiment], [customer, sentiment, today], [sentiment, today, ,], [today, ,, feel], [,, feel,  ]]

>> Noun Phrases are: 
[our personal data chatbot, customer sentiment, we]

>> Named Entities are: 
[('today', 'DATE')] 


================================ Paragraph 540 =================================

brand next week; all while walking down the street. Today, NLP tends to be based on turning  

------------------- Sentence 1 -------------------

brand next week; all while walking down the street. 


>> Tokens are: 
[brand, week, ;, walking, street, .] 

>> PoS Tags are: 
[('brand', 'NOUN'), ('week', 'NOUN'), (';', 'PUNCT'), ('walking', 'VERB'), ('street', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('brand', 'npadvmod'), ('week', 'npadvmod'), (';', 'punct'), ('walking', 'ROOT'), ('street', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[brand, week], [week, ;], [;, walking], [walking, street], [street, .]]

>> Trigrams: 
[[brand, week, ;], [week, ;, walking], [;, walking, street], [walking, street, .]]

>> Noun Phrases are: 
[the street]

>> Named Entities are: 
[('next week', 'DATE')] 

------------------- Sentence 2 -------------------

Today, NLP tends to be based on turning   


>> Tokens are: 
[Today, ,, NLP, tends, based, turning,  ] 

>> PoS Tags are: 
[('Today', 'NOUN'), (',', 'PUNCT'), ('NLP', 'PROPN'), ('tends', 'VERB'), ('based', 'VERB'), ('turning', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Today', 'npadvmod'), (',', 'punct'), ('NLP', 'nsubj'), ('tends', 'ROOT'), ('based', 'xcomp'), ('turning', 'pcomp'), (' ', 'dobj')]

>> Bigrams: 
[[Today, ,], [,, NLP], [NLP, tends], [tends, based], [based, turning], [turning,  ]]

>> Trigrams: 
[[Today, ,, NLP], [,, NLP, tends], [NLP, tends, based], [tends, based, turning], [based, turning,  ]]

>> Noun Phrases are: 
[NLP]

>> Named Entities are: 
[('Today', 'DATE'), ('NLP', 'ORG')] 


================================ Paragraph 541 =================================

natural language into machine language. But with time the technology matures – especially  

------------------- Sentence 1 -------------------

natural language into machine language. 


>> Tokens are: 
[natural, language, machine, language, .] 

>> PoS Tags are: 
[('natural', 'ADJ'), ('language', 'NOUN'), ('machine', 'NOUN'), ('language', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('natural', 'amod'), ('language', 'ROOT'), ('machine', 'compound'), ('language', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[natural, language], [language, machine], [machine, language], [language, .]]

>> Trigrams: 
[[natural, language, machine], [language, machine, language], [machine, language, .]]

>> Noun Phrases are: 
[natural language, machine language]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

But with time the technology matures – especially   


>> Tokens are: 
[time, technology, matures, –, especially,  ] 

>> PoS Tags are: 
[('time', 'NOUN'), ('technology', 'NOUN'), ('matures', 'VERB'), ('–', 'PUNCT'), ('especially', 'ADV'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('time', 'pobj'), ('technology', 'nsubj'), ('matures', 'relcl'), ('–', 'punct'), ('especially', 'advmod'), (' ', 'ROOT')]

>> Bigrams: 
[[time, technology], [technology, matures], [matures, –], [–, especially], [especially,  ]]

>> Trigrams: 
[[time, technology, matures], [technology, matures, –], [matures, –, especially], [–, especially,  ]]

>> Noun Phrases are: 
[time, the technology]

>> Named Entities are: 
[] 


================================ Paragraph 542 =================================

the AI component –the computer will get better at “understanding” the query and start to  

------------------- Sentence 1 -------------------

the AI component –the computer will get better at “understanding” the query and start to   


>> Tokens are: 
[AI, component, –, computer, better, “, understanding, ”, query, start,  ] 

>> PoS Tags are: 
[('AI', 'PROPN'), ('component', 'NOUN'), ('–', 'PUNCT'), ('computer', 'NOUN'), ('better', 'ADJ'), ('“', 'PUNCT'), ('understanding', 'NOUN'), ('”', 'PUNCT'), ('query', 'NOUN'), ('start', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('AI', 'compound'), ('component', 'nsubj'), ('–', 'punct'), ('computer', 'nsubj'), ('better', 'acomp'), ('“', 'punct'), ('understanding', 'pobj'), ('”', 'punct'), ('query', 'dobj'), ('start', 'conj'), (' ', 'pobj')]

>> Bigrams: 
[[AI, component], [component, –], [–, computer], [computer, better], [better, “], [“, understanding], [understanding, ”], [”, query], [query, start], [start,  ]]

>> Trigrams: 
[[AI, component, –], [component, –, computer], [–, computer, better], [computer, better, “], [better, “, understanding], [“, understanding, ”], [understanding, ”, query], [”, query, start], [query, start,  ]]

>> Noun Phrases are: 
[the AI component, the computer, understanding, the query]

>> Named Entities are: 
[('AI', 'ORG')] 


================================ Paragraph 543 =================================

deliver answers rather than search results.  

------------------- Sentence 1 -------------------

deliver answers rather than search results.   


>> Tokens are: 
[deliver, answers, search, results, .,  ] 

>> PoS Tags are: 
[('deliver', 'VERB'), ('answers', 'NOUN'), ('search', 'NOUN'), ('results', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('deliver', 'ROOT'), ('answers', 'dobj'), ('search', 'compound'), ('results', 'pobj'), ('.', 'punct'), (' ', 'dobj')]

>> Bigrams: 
[[deliver, answers], [answers, search], [search, results], [results, .], [.,  ]]

>> Trigrams: 
[[deliver, answers, search], [answers, search, results], [search, results, .], [results, .,  ]]

>> Noun Phrases are: 
[answers, search results]

>> Named Entities are: 
[] 


================================ Paragraph 544 =================================

 Initially, the data chatbot will probably ask the question as how have revenues changed over  

------------------- Sentence 1 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Initially, the data chatbot will probably ask the question as how have revenues changed over   


>> Tokens are: 
[Initially, ,, data, chatbot, probably, ask, question, revenues, changed,  ] 

>> PoS Tags are: 
[('Initially', 'ADV'), (',', 'PUNCT'), ('data', 'NOUN'), ('chatbot', 'NOUN'), ('probably', 'ADV'), ('ask', 'VERB'), ('question', 'NOUN'), ('revenues', 'NOUN'), ('changed', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Initially', 'advmod'), (',', 'punct'), ('data', 'compound'), ('chatbot', 'nsubj'), ('probably', 'advmod'), ('ask', 'ROOT'), ('question', 'dobj'), ('revenues', 'nsubj'), ('changed', 'pcomp'), (' ', 'pobj')]

>> Bigrams: 
[[Initially, ,], [,, data], [data, chatbot], [chatbot, probably], [probably, ask], [ask, question], [question, revenues], [revenues, changed], [changed,  ]]

>> Trigrams: 
[[Initially, ,, data], [,, data, chatbot], [data, chatbot, probably], [chatbot, probably, ask], [probably, ask, question], [ask, question, revenues], [question, revenues, changed], [revenues, changed,  ]]

>> Noun Phrases are: 
[the data chatbot, the question, revenues]

>> Named Entities are: 
[] 


================================ Paragraph 545 =================================

the last three-quarters?’ and then return pages of data for you to analyse. But once it learns  

------------------- Sentence 1 -------------------

the last three-quarters?’ 


>> Tokens are: 
[-, quarters, ?, ’] 

>> PoS Tags are: 
[('-', 'PUNCT'), ('quarters', 'NOUN'), ('?', 'PUNCT'), ('’', 'PUNCT')] 

>> Dependency Tags are: 
[('-', 'punct'), ('quarters', 'ROOT'), ('?', 'punct'), ('’', 'punct')]

>> Bigrams: 
[[-, quarters], [quarters, ?], [?, ’]]

>> Trigrams: 
[[-, quarters, ?], [quarters, ?, ’]]

>> Noun Phrases are: 
[the last three-quarters]

>> Named Entities are: 
[('three-quarters', 'DATE')] 

------------------- Sentence 2 -------------------

and then return pages of data for you to analyse. 


>> Tokens are: 
[return, pages, data, analyse, .] 

>> PoS Tags are: 
[('return', 'VERB'), ('pages', 'NOUN'), ('data', 'NOUN'), ('analyse', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('return', 'ROOT'), ('pages', 'dobj'), ('data', 'pobj'), ('analyse', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[return, pages], [pages, data], [data, analyse], [analyse, .]]

>> Trigrams: 
[[return, pages, data], [pages, data, analyse], [data, analyse, .]]

>> Noun Phrases are: 
[pages, data, you, analyse]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

But 


>> Tokens are: 
[] 

>> PoS Tags are: 
[] 

>> Dependency Tags are: 
[]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

once it learns   


>> Tokens are: 
[learns,  ] 

>> PoS Tags are: 
[('learns', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('learns', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[learns,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[it]

>> Named Entities are: 
[] 


================================ Paragraph 546 =================================

the semantic relations and inferences of the question, it will be able to automatically perform  

------------------- Sentence 1 -------------------

the semantic relations and inferences of the question, it will be able to automatically perform   


>> Tokens are: 
[semantic, relations, inferences, question, ,, able, automatically, perform,  ] 

>> PoS Tags are: 
[('semantic', 'ADJ'), ('relations', 'NOUN'), ('inferences', 'NOUN'), ('question', 'NOUN'), (',', 'PUNCT'), ('able', 'ADJ'), ('automatically', 'ADV'), ('perform', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('semantic', 'amod'), ('relations', 'nsubj'), ('inferences', 'conj'), ('question', 'pobj'), (',', 'punct'), ('able', 'acomp'), ('automatically', 'advmod'), ('perform', 'xcomp'), (' ', 'dobj')]

>> Bigrams: 
[[semantic, relations], [relations, inferences], [inferences, question], [question, ,], [,, able], [able, automatically], [automatically, perform], [perform,  ]]

>> Trigrams: 
[[semantic, relations, inferences], [relations, inferences, question], [inferences, question, ,], [question, ,, able], [,, able, automatically], [able, automatically, perform], [automatically, perform,  ]]

>> Noun Phrases are: 
[the semantic relations, inferences, the question, it]

>> Named Entities are: 
[] 


================================ Paragraph 547 =================================

the filtering and formulation necessary to provide an intelligible answer, rather than simply  

------------------- Sentence 1 -------------------

the filtering and formulation necessary to provide an intelligible answer, rather than simply   


>> Tokens are: 
[filtering, formulation, necessary, provide, intelligible, answer, ,, simply,  ] 

>> PoS Tags are: 
[('filtering', 'NOUN'), ('formulation', 'NOUN'), ('necessary', 'ADJ'), ('provide', 'VERB'), ('intelligible', 'ADJ'), ('answer', 'NOUN'), (',', 'PUNCT'), ('simply', 'ADV'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('filtering', 'amod'), ('formulation', 'conj'), ('necessary', 'amod'), ('provide', 'xcomp'), ('intelligible', 'amod'), ('answer', 'dobj'), (',', 'punct'), ('simply', 'advmod'), (' ', 'ROOT')]

>> Bigrams: 
[[filtering, formulation], [formulation, necessary], [necessary, provide], [provide, intelligible], [intelligible, answer], [answer, ,], [,, simply], [simply,  ]]

>> Trigrams: 
[[filtering, formulation, necessary], [formulation, necessary, provide], [necessary, provide, intelligible], [provide, intelligible, answer], [intelligible, answer, ,], [answer, ,, simply], [,, simply,  ]]

>> Noun Phrases are: 
[an intelligible answer]

>> Named Entities are: 
[] 


================================ Paragraph 548 =================================

showing you data.  

------------------- Sentence 1 -------------------

showing you data.   


>> Tokens are: 
[showing, data, .,  ] 

>> PoS Tags are: 
[('showing', 'VERB'), ('data', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('showing', 'ROOT'), ('data', 'dobj'), ('.', 'punct'), (' ', 'dobj')]

>> Bigrams: 
[[showing, data], [data, .], [.,  ]]

>> Trigrams: 
[[showing, data, .], [data, .,  ]]

>> Noun Phrases are: 
[you, data]

>> Named Entities are: 
[] 


================================ Paragraph 549 =================================

Link: http://www.smartdatacollective.com/eran-levy/489410/here-s-why-natural-language-processing-future-bi  

------------------- Sentence 1 -------------------

Link: http://www.smartdatacollective.com/eran-levy/489410/here-s-why-natural-language-processing-future-bi   


>> Tokens are: 
[Link, :, http://www.smartdatacollective.com/eran-levy/489410/here-s-why-natural-language-processing-future-bi,  ] 

>> PoS Tags are: 
[('Link', 'VERB'), (':', 'PUNCT'), ('http://www.smartdatacollective.com/eran-levy/489410/here-s-why-natural-language-processing-future-bi', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Link', 'ROOT'), (':', 'punct'), ('http://www.smartdatacollective.com/eran-levy/489410/here-s-why-natural-language-processing-future-bi', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[Link, :], [:, http://www.smartdatacollective.com/eran-levy/489410/here-s-why-natural-language-processing-future-bi], [http://www.smartdatacollective.com/eran-levy/489410/here-s-why-natural-language-processing-future-bi,  ]]

>> Trigrams: 
[[Link, :, http://www.smartdatacollective.com/eran-levy/489410/here-s-why-natural-language-processing-future-bi], [:, http://www.smartdatacollective.com/eran-levy/489410/here-s-why-natural-language-processing-future-bi,  ]]

>> Noun Phrases are: 
[http://www.smartdatacollective.com/eran-levy/489410/here-s-why-natural-language-processing-future-bi]

>> Named Entities are: 
[] 


================================ Paragraph 550 =================================

8.4 Using Natural Language Processing and Network Analysis to  

------------------- Sentence 1 -------------------

8.4 Using Natural Language Processing and Network Analysis to   


>> Tokens are: 
[8.4, Natural, Language, Processing, Network, Analysis,  ] 

>> PoS Tags are: 
[('8.4', 'NUM'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'PROPN'), ('Network', 'PROPN'), ('Analysis', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('8.4', 'ROOT'), ('Natural', 'compound'), ('Language', 'compound'), ('Processing', 'dobj'), ('Network', 'compound'), ('Analysis', 'conj'), (' ', 'pobj')]

>> Bigrams: 
[[8.4, Natural], [Natural, Language], [Language, Processing], [Processing, Network], [Network, Analysis], [Analysis,  ]]

>> Trigrams: 
[[8.4, Natural, Language], [Natural, Language, Processing], [Language, Processing, Network], [Processing, Network, Analysis], [Network, Analysis,  ]]

>> Noun Phrases are: 
[Natural Language Processing, Network Analysis]

>> Named Entities are: 
[('8.4', 'CARDINAL')] 


================================ Paragraph 551 =================================

Develop a Conceptual Framework for Medication Therapy  

------------------- Sentence 1 -------------------

Develop a Conceptual Framework for Medication Therapy   


>> Tokens are: 
[Develop, Conceptual, Framework, Medication, Therapy,  ] 

>> PoS Tags are: 
[('Develop', 'VERB'), ('Conceptual', 'PROPN'), ('Framework', 'PROPN'), ('Medication', 'PROPN'), ('Therapy', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Develop', 'ROOT'), ('Conceptual', 'compound'), ('Framework', 'dobj'), ('Medication', 'compound'), ('Therapy', 'pobj'), (' ', 'npadvmod')]

>> Bigrams: 
[[Develop, Conceptual], [Conceptual, Framework], [Framework, Medication], [Medication, Therapy], [Therapy,  ]]

>> Trigrams: 
[[Develop, Conceptual, Framework], [Conceptual, Framework, Medication], [Framework, Medication, Therapy], [Medication, Therapy,  ]]

>> Noun Phrases are: 
[a Conceptual Framework, Medication Therapy]

>> Named Entities are: 
[] 


================================ Paragraph 552 =================================

Management Research [107]  

------------------- Sentence 1 -------------------

Management Research [107]   


>> Tokens are: 
[Management, Research, [, 107, ],  ] 

>> PoS Tags are: 
[('Management', 'PROPN'), ('Research', 'PROPN'), ('[', 'PUNCT'), ('107', 'NUM'), (']', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Management', 'compound'), ('Research', 'ROOT'), ('[', 'punct'), ('107', 'appos'), (']', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Management, Research], [Research, [], [[, 107], [107, ]], [],  ]]

>> Trigrams: 
[[Management, Research, [], [Research, [, 107], [[, 107, ]], [107, ],  ]]

>> Noun Phrases are: 
[Management Research]

>> Named Entities are: 
[('107', 'CARDINAL')] 


================================ Paragraph 553 =================================

Natural Language Processing and Network Analysis to Develop a Conceptual Framework for  

------------------- Sentence 1 -------------------

Natural Language Processing and Network Analysis to Develop a Conceptual Framework for   


>> Tokens are: 
[Natural, Language, Processing, Network, Analysis, Develop, Conceptual, Framework,  ] 

>> PoS Tags are: 
[('Natural', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'PROPN'), ('Network', 'PROPN'), ('Analysis', 'PROPN'), ('Develop', 'VERB'), ('Conceptual', 'PROPN'), ('Framework', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Natural', 'compound'), ('Language', 'compound'), ('Processing', 'ROOT'), ('Network', 'compound'), ('Analysis', 'conj'), ('Develop', 'relcl'), ('Conceptual', 'compound'), ('Framework', 'dobj'), (' ', 'pobj')]

>> Bigrams: 
[[Natural, Language], [Language, Processing], [Processing, Network], [Network, Analysis], [Analysis, Develop], [Develop, Conceptual], [Conceptual, Framework], [Framework,  ]]

>> Trigrams: 
[[Natural, Language, Processing], [Language, Processing, Network], [Processing, Network, Analysis], [Network, Analysis, Develop], [Analysis, Develop, Conceptual], [Develop, Conceptual, Framework], [Conceptual, Framework,  ]]

>> Noun Phrases are: 
[Natural Language Processing, Network Analysis, a Conceptual Framework]

>> Named Entities are: 
[] 


================================ Paragraph 554 =================================

Medication Therapy Management Research describes a theory derivation process that is used  

------------------- Sentence 1 -------------------

Medication Therapy Management Research describes a theory derivation process that is used   


>> Tokens are: 
[Medication, Therapy, Management, Research, describes, theory, derivation, process,  ] 

>> PoS Tags are: 
[('Medication', 'PROPN'), ('Therapy', 'PROPN'), ('Management', 'PROPN'), ('Research', 'PROPN'), ('describes', 'VERB'), ('theory', 'NOUN'), ('derivation', 'NOUN'), ('process', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Medication', 'compound'), ('Therapy', 'compound'), ('Management', 'compound'), ('Research', 'nsubj'), ('describes', 'ROOT'), ('theory', 'compound'), ('derivation', 'compound'), ('process', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[Medication, Therapy], [Therapy, Management], [Management, Research], [Research, describes], [describes, theory], [theory, derivation], [derivation, process], [process,  ]]

>> Trigrams: 
[[Medication, Therapy, Management], [Therapy, Management, Research], [Management, Research, describes], [Research, describes, theory], [describes, theory, derivation], [theory, derivation, process], [derivation, process,  ]]

>> Noun Phrases are: 
[Medication Therapy Management Research, a theory derivation process]

>> Named Entities are: 
[('Medication Therapy Management Research', 'ORG')] 


================================ Paragraph 555 =================================

to develop conceptual framework for medication therapy management (MTM) research. The  

------------------- Sentence 1 -------------------

to develop conceptual framework for medication therapy management (MTM) research. 


>> Tokens are: 
[develop, conceptual, framework, medication, therapy, management, (, MTM, ), research, .] 

>> PoS Tags are: 
[('develop', 'VERB'), ('conceptual', 'ADJ'), ('framework', 'NOUN'), ('medication', 'NOUN'), ('therapy', 'NOUN'), ('management', 'NOUN'), ('(', 'PUNCT'), ('MTM', 'PROPN'), (')', 'PUNCT'), ('research', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('develop', 'ROOT'), ('conceptual', 'amod'), ('framework', 'dobj'), ('medication', 'compound'), ('therapy', 'compound'), ('management', 'nmod'), ('(', 'punct'), ('MTM', 'appos'), (')', 'punct'), ('research', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[develop, conceptual], [conceptual, framework], [framework, medication], [medication, therapy], [therapy, management], [management, (], [(, MTM], [MTM, )], [), research], [research, .]]

>> Trigrams: 
[[develop, conceptual, framework], [conceptual, framework, medication], [framework, medication, therapy], [medication, therapy, management], [therapy, management, (], [management, (, MTM], [(, MTM, )], [MTM, ), research], [), research, .]]

>> Noun Phrases are: 
[conceptual framework, (MTM]

>> Named Entities are: 
[('MTM', 'ORG')] 

------------------- Sentence 2 -------------------

The   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 556 =================================

MTM service model and chronic care model are selected as parent theories. Review article 

------------------- Sentence 1 -------------------

MTM service model and chronic care model are selected as parent theories. 


>> Tokens are: 
[MTM, service, model, chronic, care, model, selected, parent, theories, .] 

>> PoS Tags are: 
[('MTM', 'PROPN'), ('service', 'NOUN'), ('model', 'NOUN'), ('chronic', 'ADJ'), ('care', 'NOUN'), ('model', 'NOUN'), ('selected', 'VERB'), ('parent', 'NOUN'), ('theories', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('MTM', 'compound'), ('service', 'compound'), ('model', 'nsubjpass'), ('chronic', 'amod'), ('care', 'compound'), ('model', 'conj'), ('selected', 'ROOT'), ('parent', 'compound'), ('theories', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[MTM, service], [service, model], [model, chronic], [chronic, care], [care, model], [model, selected], [selected, parent], [parent, theories], [theories, .]]

>> Trigrams: 
[[MTM, service, model], [service, model, chronic], [model, chronic, care], [chronic, care, model], [care, model, selected], [model, selected, parent], [selected, parent, theories], [parent, theories, .]]

>> Noun Phrases are: 
[MTM service model, chronic care model, parent theories]

>> Named Entities are: 
[('MTM', 'ORG')] 

------------------- Sentence 2 -------------------

Review article 


>> Tokens are: 
[Review, article] 

>> PoS Tags are: 
[('Review', 'NOUN'), ('article', 'NOUN')] 

>> Dependency Tags are: 
[('Review', 'compound'), ('article', 'ROOT')]

>> Bigrams: 
[[Review, article]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Review article]

>> Named Entities are: 
[] 


================================ Paragraph 557 =================================

abstracts target medication therapy management in chronic disease care that were retrieved  

------------------- Sentence 1 -------------------

abstracts target medication therapy management in chronic disease care that were retrieved 


>> Tokens are: 
[abstracts, target, medication, therapy, management, chronic, disease, care, retrieved] 

>> PoS Tags are: 
[('abstracts', 'NOUN'), ('target', 'VERB'), ('medication', 'NOUN'), ('therapy', 'NOUN'), ('management', 'NOUN'), ('chronic', 'ADJ'), ('disease', 'NOUN'), ('care', 'NOUN'), ('retrieved', 'VERB')] 

>> Dependency Tags are: 
[('abstracts', 'nsubj'), ('target', 'compound'), ('medication', 'compound'), ('therapy', 'compound'), ('management', 'ROOT'), ('chronic', 'amod'), ('disease', 'compound'), ('care', 'pobj'), ('retrieved', 'relcl')]

>> Bigrams: 
[[abstracts, target], [target, medication], [medication, therapy], [therapy, management], [management, chronic], [chronic, disease], [disease, care], [care, retrieved]]

>> Trigrams: 
[[abstracts, target, medication], [target, medication, therapy], [medication, therapy, management], [therapy, management, chronic], [management, chronic, disease], [chronic, disease, care], [disease, care, retrieved]]

>> Noun Phrases are: 
[abstracts, chronic disease care]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 558 =================================

from Ovid Medline (2000-2016).  

------------------- Sentence 1 -------------------

from Ovid Medline (2000-2016). 


>> Tokens are: 
[Ovid, Medline, (, 2000, -, 2016, ), .] 

>> PoS Tags are: 
[('Ovid', 'PROPN'), ('Medline', 'PROPN'), ('(', 'PUNCT'), ('2000', 'NUM'), ('-', 'SYM'), ('2016', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Ovid', 'compound'), ('Medline', 'pobj'), ('(', 'punct'), ('2000', 'appos'), ('-', 'punct'), ('2016', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Ovid, Medline], [Medline, (], [(, 2000], [2000, -], [-, 2016], [2016, )], [), .]]

>> Trigrams: 
[[Ovid, Medline, (], [Medline, (, 2000], [(, 2000, -], [2000, -, 2016], [-, 2016, )], [2016, ), .]]

>> Noun Phrases are: 
[Ovid Medline]

>> Named Entities are: 
[('Ovid Medline', 'ORG'), ('2000-2016', 'DATE')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 559 =================================

Unique concepts in each abstract are extracted using Meta Map and their pairwise  

------------------- Sentence 1 -------------------

Unique concepts in each abstract are extracted using Meta Map and their pairwise   


>> Tokens are: 
[Unique, concepts, abstract, extracted, Meta, Map, pairwise,  ] 

>> PoS Tags are: 
[('Unique', 'ADJ'), ('concepts', 'NOUN'), ('abstract', 'NOUN'), ('extracted', 'VERB'), ('Meta', 'PROPN'), ('Map', 'PROPN'), ('pairwise', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Unique', 'amod'), ('concepts', 'nsubjpass'), ('abstract', 'pobj'), ('extracted', 'ROOT'), ('Meta', 'compound'), ('Map', 'dobj'), ('pairwise', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[Unique, concepts], [concepts, abstract], [abstract, extracted], [extracted, Meta], [Meta, Map], [Map, pairwise], [pairwise,  ]]

>> Trigrams: 
[[Unique, concepts, abstract], [concepts, abstract, extracted], [abstract, extracted, Meta], [extracted, Meta, Map], [Meta, Map, pairwise], [Map, pairwise,  ]]

>> Noun Phrases are: 
[Unique concepts, each abstract, Meta Map, their pairwise]

>> Named Entities are: 
[('Meta Map', 'ORG')] 


================================ Paragraph 560 =================================

cooccurrence are determined. Then the information is used to construct a network graph of  

------------------- Sentence 1 -------------------

cooccurrence are determined. 


>> Tokens are: 
[cooccurrence, determined, .] 

>> PoS Tags are: 
[('cooccurrence', 'NOUN'), ('determined', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('cooccurrence', 'nsubjpass'), ('determined', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[cooccurrence, determined], [determined, .]]

>> Trigrams: 
[[cooccurrence, determined, .]]

>> Noun Phrases are: 
[cooccurrence]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Then the information is used to construct a network graph of   


>> Tokens are: 
[information, construct, network, graph,  ] 

>> PoS Tags are: 
[('information', 'NOUN'), ('construct', 'VERB'), ('network', 'NOUN'), ('graph', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('information', 'nsubjpass'), ('construct', 'xcomp'), ('network', 'compound'), ('graph', 'dobj'), (' ', 'pobj')]

>> Bigrams: 
[[information, construct], [construct, network], [network, graph], [graph,  ]]

>> Trigrams: 
[[information, construct, network], [construct, network, graph], [network, graph,  ]]

>> Noun Phrases are: 
[the information, a network graph]

>> Named Entities are: 
[] 


================================ Paragraph 561 =================================

concept co-occurrence that is further analysed to identify content for the new conceptual  

------------------- Sentence 1 -------------------

concept co- 


>> Tokens are: 
[concept, co, -] 

>> PoS Tags are: 
[('concept', 'NOUN'), ('co', 'NOUN'), ('-', 'NOUN')] 

>> Dependency Tags are: 
[('concept', 'compound'), ('co', 'ROOT'), ('-', 'prep')]

>> Bigrams: 
[[concept, co], [co, -]]

>> Trigrams: 
[[concept, co, -]]

>> Noun Phrases are: 
[concept co]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

occurrence that is further analysed to identify content for the new conceptual   


>> Tokens are: 
[occurrence, analysed, identify, content, new, conceptual,  ] 

>> PoS Tags are: 
[('occurrence', 'NOUN'), ('analysed', 'VERB'), ('identify', 'VERB'), ('content', 'NOUN'), ('new', 'ADJ'), ('conceptual', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('occurrence', 'ROOT'), ('analysed', 'relcl'), ('identify', 'xcomp'), ('content', 'dobj'), ('new', 'amod'), ('conceptual', 'amod'), (' ', 'pobj')]

>> Bigrams: 
[[occurrence, analysed], [analysed, identify], [identify, content], [content, new], [new, conceptual], [conceptual,  ]]

>> Trigrams: 
[[occurrence, analysed, identify], [analysed, identify, content], [identify, content, new], [content, new, conceptual], [new, conceptual,  ]]

>> Noun Phrases are: 
[occurrence, content]

>> Named Entities are: 
[] 


================================ Paragraph 562 =================================

model. 142 abstracts are analysed. Medication adherence is the most studied drug therapy  

------------------- Sentence 1 -------------------

model. 


>> Tokens are: 
[model, .] 

>> PoS Tags are: 
[('model', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('model', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[model, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[model]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

142 abstracts are analysed. 


>> Tokens are: 
[142, abstracts, analysed, .] 

>> PoS Tags are: 
[('142', 'NUM'), ('abstracts', 'NOUN'), ('analysed', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('142', 'nummod'), ('abstracts', 'nsubjpass'), ('analysed', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[142, abstracts], [abstracts, analysed], [analysed, .]]

>> Trigrams: 
[[142, abstracts, analysed], [abstracts, analysed, .]]

>> Noun Phrases are: 
[142 abstracts]

>> Named Entities are: 
[('142', 'CARDINAL')] 

------------------- Sentence 3 -------------------

Medication adherence is the most studied drug therapy   


>> Tokens are: 
[Medication, adherence, studied, drug, therapy,  ] 

>> PoS Tags are: 
[('Medication', 'NOUN'), ('adherence', 'NOUN'), ('studied', 'VERB'), ('drug', 'NOUN'), ('therapy', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Medication', 'compound'), ('adherence', 'nsubj'), ('studied', 'amod'), ('drug', 'compound'), ('therapy', 'attr'), (' ', 'punct')]

>> Bigrams: 
[[Medication, adherence], [adherence, studied], [studied, drug], [drug, therapy], [therapy,  ]]

>> Trigrams: 
[[Medication, adherence, studied], [adherence, studied, drug], [studied, drug, therapy], [drug, therapy,  ]]

>> Noun Phrases are: 
[Medication adherence, the most studied drug therapy]

>> Named Entities are: 
[] 


================================ Paragraph 563 =================================

problem and co-occurred with concepts related to patient-centred interventions targeting self- 

------------------- Sentence 1 -------------------

problem and co-occurred with concepts related to patient-centred interventions targeting self- 


>> Tokens are: 
[problem, co, -, occurred, concepts, related, patient, -, centred, interventions, targeting, self-] 

>> PoS Tags are: 
[('problem', 'NOUN'), ('co', 'VERB'), ('-', 'VERB'), ('occurred', 'VERB'), ('concepts', 'NOUN'), ('related', 'VERB'), ('patient', 'NOUN'), ('-', 'PUNCT'), ('centred', 'VERB'), ('interventions', 'NOUN'), ('targeting', 'VERB'), ('self-', 'NUM')] 

>> Dependency Tags are: 
[('problem', 'nsubj'), ('co', 'conj'), ('-', 'acl'), ('occurred', 'ROOT'), ('concepts', 'pobj'), ('related', 'acl'), ('patient', 'npadvmod'), ('-', 'punct'), ('centred', 'amod'), ('interventions', 'pobj'), ('targeting', 'acl'), ('self-', 'dobj')]

>> Bigrams: 
[[problem, co], [co, -], [-, occurred], [occurred, concepts], [concepts, related], [related, patient], [patient, -], [-, centred], [centred, interventions], [interventions, targeting], [targeting, self-]]

>> Trigrams: 
[[problem, co, -], [co, -, occurred], [-, occurred, concepts], [occurred, concepts, related], [concepts, related, patient], [related, patient, -], [patient, -, centred], [-, centred, interventions], [centred, interventions, targeting], [interventions, targeting, self-]]

>> Noun Phrases are: 
[problem, concepts, patient-centred interventions]

>> Named Entities are: 
[] 


================================ Paragraph 564 =================================

management. The enhanced model consists of 65 concepts clustered into 14 constructs. The  

------------------- Sentence 1 -------------------

management. 


>> Tokens are: 
[management, .] 

>> PoS Tags are: 
[('management', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('management', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[management, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[management]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

The enhanced model consists of 65 concepts clustered into 14 constructs. 


>> Tokens are: 
[enhanced, model, consists, 65, concepts, clustered, 14, constructs, .] 

>> PoS Tags are: 
[('enhanced', 'ADJ'), ('model', 'NOUN'), ('consists', 'VERB'), ('65', 'NUM'), ('concepts', 'NOUN'), ('clustered', 'VERB'), ('14', 'NUM'), ('constructs', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('enhanced', 'amod'), ('model', 'nsubj'), ('consists', 'ROOT'), ('65', 'nummod'), ('concepts', 'pobj'), ('clustered', 'acl'), ('14', 'nummod'), ('constructs', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[enhanced, model], [model, consists], [consists, 65], [65, concepts], [concepts, clustered], [clustered, 14], [14, constructs], [constructs, .]]

>> Trigrams: 
[[enhanced, model, consists], [model, consists, 65], [consists, 65, concepts], [65, concepts, clustered], [concepts, clustered, 14], [clustered, 14, constructs], [14, constructs, .]]

>> Noun Phrases are: 
[The enhanced model, 65 concepts, 14 constructs]

>> Named Entities are: 
[('65', 'CARDINAL'), ('14', 'CARDINAL')] 

------------------- Sentence 3 -------------------

The   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 565 =================================

framework requires additional refinement and evaluation to determine its relevance and  

------------------- Sentence 1 -------------------

framework requires additional refinement and evaluation to determine its relevance and   


>> Tokens are: 
[framework, requires, additional, refinement, evaluation, determine, relevance,  ] 

>> PoS Tags are: 
[('framework', 'NOUN'), ('requires', 'VERB'), ('additional', 'ADJ'), ('refinement', 'NOUN'), ('evaluation', 'NOUN'), ('determine', 'VERB'), ('relevance', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('framework', 'nsubj'), ('requires', 'ROOT'), ('additional', 'amod'), ('refinement', 'dobj'), ('evaluation', 'conj'), ('determine', 'advcl'), ('relevance', 'dobj'), (' ', 'conj')]

>> Bigrams: 
[[framework, requires], [requires, additional], [additional, refinement], [refinement, evaluation], [evaluation, determine], [determine, relevance], [relevance,  ]]

>> Trigrams: 
[[framework, requires, additional], [requires, additional, refinement], [additional, refinement, evaluation], [refinement, evaluation, determine], [evaluation, determine, relevance], [determine, relevance,  ]]

>> Noun Phrases are: 
[framework, additional refinement, evaluation, its relevance]

>> Named Entities are: 
[] 


================================ Paragraph 566 =================================

applicability across a broad audience including underserved settings.  

------------------- Sentence 1 -------------------

applicability across a broad audience including underserved settings. 


>> Tokens are: 
[applicability, broad, audience, including, underserved, settings, .] 

>> PoS Tags are: 
[('applicability', 'NOUN'), ('broad', 'ADJ'), ('audience', 'NOUN'), ('including', 'VERB'), ('underserved', 'ADJ'), ('settings', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('applicability', 'ROOT'), ('broad', 'amod'), ('audience', 'pobj'), ('including', 'prep'), ('underserved', 'amod'), ('settings', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[applicability, broad], [broad, audience], [audience, including], [including, underserved], [underserved, settings], [settings, .]]

>> Trigrams: 
[[applicability, broad, audience], [broad, audience, including], [audience, including, underserved], [including, underserved, settings], [underserved, settings, .]]

>> Noun Phrases are: 
[applicability, a broad audience, underserved settings]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 567 =================================

Link: https://www.ncbi.nlm.nih.gov/pubmed/28269895?dopt=Abstract  

------------------- Sentence 1 -------------------

Link: https://www.ncbi.nlm.nih.gov/pubmed/28269895?dopt=Abstract   


>> Tokens are: 
[Link, :, https://www.ncbi.nlm.nih.gov/pubmed/28269895?dopt=Abstract,  ] 

>> PoS Tags are: 
[('Link', 'VERB'), (':', 'PUNCT'), ('https://www.ncbi.nlm.nih.gov/pubmed/28269895?dopt=Abstract', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Link', 'ROOT'), (':', 'punct'), ('https://www.ncbi.nlm.nih.gov/pubmed/28269895?dopt=Abstract', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[Link, :], [:, https://www.ncbi.nlm.nih.gov/pubmed/28269895?dopt=Abstract], [https://www.ncbi.nlm.nih.gov/pubmed/28269895?dopt=Abstract,  ]]

>> Trigrams: 
[[Link, :, https://www.ncbi.nlm.nih.gov/pubmed/28269895?dopt=Abstract], [:, https://www.ncbi.nlm.nih.gov/pubmed/28269895?dopt=Abstract,  ]]

>> Noun Phrases are: 
[https://www.ncbi.nlm.nih.gov/pubmed/28269895?dopt=Abstract]

>> Named Entities are: 
[] 


================================ Paragraph 568 =================================

8.5 Meet the Pilot, world’s first language translating earbuds [108]  

------------------- Sentence 1 -------------------

8.5 Meet the Pilot, world’s first language translating earbuds [108]   


>> Tokens are: 
[8.5, Meet, Pilot, ,, world, language, translating, earbuds, [, 108, ],  ] 

>> PoS Tags are: 
[('8.5', 'NUM'), ('Meet', 'VERB'), ('Pilot', 'PROPN'), (',', 'PUNCT'), ('world', 'NOUN'), ('language', 'NOUN'), ('translating', 'VERB'), ('earbuds', 'NOUN'), ('[', 'PUNCT'), ('108', 'NUM'), (']', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('8.5', 'nummod'), ('Meet', 'appos'), ('Pilot', 'dobj'), (',', 'punct'), ('world', 'poss'), ('language', 'npadvmod'), ('translating', 'amod'), ('earbuds', 'ROOT'), ('[', 'punct'), ('108', 'appos'), (']', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[8.5, Meet], [Meet, Pilot], [Pilot, ,], [,, world], [world, language], [language, translating], [translating, earbuds], [earbuds, [], [[, 108], [108, ]], [],  ]]

>> Trigrams: 
[[8.5, Meet, Pilot], [Meet, Pilot, ,], [Pilot, ,, world], [,, world, language], [world, language, translating], [language, translating, earbuds], [translating, earbuds, [], [earbuds, [, 108], [[, 108, ]], [108, ],  ]]

>> Noun Phrases are: 
[the Pilot]

>> Named Entities are: 
[('first', 'ORDINAL'), ('108', 'CARDINAL')] 


================================ Paragraph 569 =================================

The world’s first smart earpiece Pilot will soon be transcribed over 15 languages. According  

------------------- Sentence 1 -------------------

The world’s first smart earpiece Pilot will soon be transcribed over 15 languages. 


>> Tokens are: 
[world, smart, earpiece, Pilot, soon, transcribed, 15, languages, .] 

>> PoS Tags are: 
[('world', 'NOUN'), ('smart', 'ADJ'), ('earpiece', 'NOUN'), ('Pilot', 'PROPN'), ('soon', 'ADV'), ('transcribed', 'VERB'), ('15', 'NUM'), ('languages', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('world', 'poss'), ('smart', 'amod'), ('earpiece', 'compound'), ('Pilot', 'nsubjpass'), ('soon', 'advmod'), ('transcribed', 'ROOT'), ('15', 'nummod'), ('languages', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[world, smart], [smart, earpiece], [earpiece, Pilot], [Pilot, soon], [soon, transcribed], [transcribed, 15], [15, languages], [languages, .]]

>> Trigrams: 
[[world, smart, earpiece], [smart, earpiece, Pilot], [earpiece, Pilot, soon], [Pilot, soon, transcribed], [soon, transcribed, 15], [transcribed, 15, languages], [15, languages, .]]

>> Noun Phrases are: 
[The world’s first smart earpiece Pilot, over 15 languages]

>> Named Entities are: 
[('first', 'ORDINAL'), ('15', 'CARDINAL')] 

------------------- Sentence 2 -------------------

According   


>> Tokens are: 
[According,  ] 

>> PoS Tags are: 
[('According', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('According', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[According,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 570 =================================

to Spring wise, Waverly Labs’ Pilot can already transliterate five spoken languages, English,  

------------------- Sentence 1 -------------------

to Spring wise, Waverly Labs’ Pilot can already transliterate five spoken languages, English,   


>> Tokens are: 
[Spring, wise, ,, Waverly, Labs, ’, Pilot, transliterate, spoken, languages, ,, English, ,,  ] 

>> PoS Tags are: 
[('Spring', 'PROPN'), ('wise', 'ADJ'), (',', 'PUNCT'), ('Waverly', 'PROPN'), ('Labs', 'PROPN'), ('’', 'PUNCT'), ('Pilot', 'PROPN'), ('transliterate', 'VERB'), ('spoken', 'ADJ'), ('languages', 'NOUN'), (',', 'PUNCT'), ('English', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Spring', 'pobj'), ('wise', 'amod'), (',', 'punct'), ('Waverly', 'compound'), ('Labs', 'nmod'), ('’', 'punct'), ('Pilot', 'nsubj'), ('transliterate', 'ROOT'), ('spoken', 'amod'), ('languages', 'dobj'), (',', 'punct'), ('English', 'npadvmod'), (',', 'punct'), (' ', 'dobj')]

>> Bigrams: 
[[Spring, wise], [wise, ,], [,, Waverly], [Waverly, Labs], [Labs, ’], [’, Pilot], [Pilot, transliterate], [transliterate, spoken], [spoken, languages], [languages, ,], [,, English], [English, ,], [,,  ]]

>> Trigrams: 
[[Spring, wise, ,], [wise, ,, Waverly], [,, Waverly, Labs], [Waverly, Labs, ’], [Labs, ’, Pilot], [’, Pilot, transliterate], [Pilot, transliterate, spoken], [transliterate, spoken, languages], [spoken, languages, ,], [languages, ,, English], [,, English, ,], [English, ,,  ]]

>> Noun Phrases are: 
[Spring, Waverly Labs’ Pilot, five spoken languages]

>> Named Entities are: 
[('Waverly Labs’ Pilot', 'WORK_OF_ART'), ('five', 'CARDINAL'), ('English', 'LANGUAGE')] 


================================ Paragraph 571 =================================

French, Italian, Portuguese and Spanish, and seven written affixed languages, German, Hindi,  

------------------- Sentence 1 -------------------

French, Italian, Portuguese and Spanish, and seven written affixed languages, German, Hindi,   


>> Tokens are: 
[French, ,, Italian, ,, Portuguese, Spanish, ,, seven, written, affixed, languages, ,, German, ,, Hindi, ,,  ] 

>> PoS Tags are: 
[('French', 'ADJ'), (',', 'PUNCT'), ('Italian', 'ADJ'), (',', 'PUNCT'), ('Portuguese', 'ADJ'), ('Spanish', 'PROPN'), (',', 'PUNCT'), ('seven', 'NUM'), ('written', 'VERB'), ('affixed', 'VERB'), ('languages', 'NOUN'), (',', 'PUNCT'), ('German', 'ADJ'), (',', 'PUNCT'), ('Hindi', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('French', 'amod'), (',', 'punct'), ('Italian', 'amod'), (',', 'punct'), ('Portuguese', 'conj'), ('Spanish', 'conj'), (',', 'punct'), ('seven', 'nummod'), ('written', 'amod'), ('affixed', 'amod'), ('languages', 'ROOT'), (',', 'punct'), ('German', 'npadvmod'), (',', 'punct'), ('Hindi', 'conj'), (',', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[French, ,], [,, Italian], [Italian, ,], [,, Portuguese], [Portuguese, Spanish], [Spanish, ,], [,, seven], [seven, written], [written, affixed], [affixed, languages], [languages, ,], [,, German], [German, ,], [,, Hindi], [Hindi, ,], [,,  ]]

>> Trigrams: 
[[French, ,, Italian], [,, Italian, ,], [Italian, ,, Portuguese], [,, Portuguese, Spanish], [Portuguese, Spanish, ,], [Spanish, ,, seven], [,, seven, written], [seven, written, affixed], [written, affixed, languages], [affixed, languages, ,], [languages, ,, German], [,, German, ,], [German, ,, Hindi], [,, Hindi, ,], [Hindi, ,,  ]]

>> Noun Phrases are: 
[French, Italian, Portuguese and Spanish, and seven written affixed languages]

>> Named Entities are: 
[('French', 'NORP'), ('Italian', 'NORP'), ('Portuguese', 'NORP'), ('Spanish', 'LANGUAGE'), ('seven', 'CARDINAL'), ('German', 'NORP'), ('Hindi', 'GPE')] 


================================ Paragraph 572 =================================

Russian, Japanese, Arabic, Korean and Mandarin Chinese. The Pilot earpiece is connected  

------------------- Sentence 1 -------------------

Russian, Japanese, Arabic, Korean and Mandarin Chinese. 


>> Tokens are: 
[Russian, ,, Japanese, ,, Arabic, ,, Korean, Mandarin, Chinese, .] 

>> PoS Tags are: 
[('Russian', 'ADJ'), (',', 'PUNCT'), ('Japanese', 'ADJ'), (',', 'PUNCT'), ('Arabic', 'ADJ'), (',', 'PUNCT'), ('Korean', 'ADJ'), ('Mandarin', 'PROPN'), ('Chinese', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Russian', 'amod'), (',', 'punct'), ('Japanese', 'conj'), (',', 'punct'), ('Arabic', 'conj'), (',', 'punct'), ('Korean', 'conj'), ('Mandarin', 'conj'), ('Chinese', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Russian, ,], [,, Japanese], [Japanese, ,], [,, Arabic], [Arabic, ,], [,, Korean], [Korean, Mandarin], [Mandarin, Chinese], [Chinese, .]]

>> Trigrams: 
[[Russian, ,, Japanese], [,, Japanese, ,], [Japanese, ,, Arabic], [,, Arabic, ,], [Arabic, ,, Korean], [,, Korean, Mandarin], [Korean, Mandarin, Chinese], [Mandarin, Chinese, .]]

>> Noun Phrases are: 
[Russian, Japanese, Arabic, Korean and Mandarin Chinese]

>> Named Entities are: 
[('Russian', 'NORP'), ('Japanese', 'NORP'), ('Arabic', 'LANGUAGE'), ('Korean', 'NORP'), ('Mandarin Chinese', 'NORP')] 

------------------- Sentence 2 -------------------

The Pilot earpiece is connected   


>> Tokens are: 
[Pilot, earpiece, connected,  ] 

>> PoS Tags are: 
[('Pilot', 'PROPN'), ('earpiece', 'NOUN'), ('connected', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Pilot', 'compound'), ('earpiece', 'nsubjpass'), ('connected', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Pilot, earpiece], [earpiece, connected], [connected,  ]]

>> Trigrams: 
[[Pilot, earpiece, connected], [earpiece, connected,  ]]

>> Noun Phrases are: 
[The Pilot earpiece]

>> Named Entities are: 
[] 


================================ Paragraph 573 =================================

via Bluetooth to the Pilot speech translation app, which uses speech recognition, machine  

------------------- Sentence 1 -------------------

via Bluetooth to the Pilot speech translation app, which uses speech recognition, machine   


>> Tokens are: 
[Bluetooth, Pilot, speech, translation, app, ,, uses, speech, recognition, ,, machine,  ] 

>> PoS Tags are: 
[('Bluetooth', 'PROPN'), ('Pilot', 'PROPN'), ('speech', 'NOUN'), ('translation', 'NOUN'), ('app', 'NOUN'), (',', 'PUNCT'), ('uses', 'VERB'), ('speech', 'NOUN'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Bluetooth', 'pobj'), ('Pilot', 'compound'), ('speech', 'compound'), ('translation', 'compound'), ('app', 'pobj'), (',', 'punct'), ('uses', 'relcl'), ('speech', 'compound'), ('recognition', 'dobj'), (',', 'punct'), ('machine', 'pobj'), (' ', 'nummod')]

>> Bigrams: 
[[Bluetooth, Pilot], [Pilot, speech], [speech, translation], [translation, app], [app, ,], [,, uses], [uses, speech], [speech, recognition], [recognition, ,], [,, machine], [machine,  ]]

>> Trigrams: 
[[Bluetooth, Pilot, speech], [Pilot, speech, translation], [speech, translation, app], [translation, app, ,], [app, ,, uses], [,, uses, speech], [uses, speech, recognition], [speech, recognition, ,], [recognition, ,, machine], [,, machine,  ]]

>> Noun Phrases are: 
[Bluetooth, the Pilot speech translation app, speech recognition, machine]

>> Named Entities are: 
[] 


================================ Paragraph 574 =================================

translation and machine learning and speech synthesis technology.  

------------------- Sentence 1 -------------------

translation and machine learning and speech synthesis technology. 


>> Tokens are: 
[translation, machine, learning, speech, synthesis, technology, .] 

>> PoS Tags are: 
[('translation', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('speech', 'NOUN'), ('synthesis', 'NOUN'), ('technology', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('translation', 'ROOT'), ('machine', 'compound'), ('learning', 'conj'), ('speech', 'compound'), ('synthesis', 'compound'), ('technology', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[translation, machine], [machine, learning], [learning, speech], [speech, synthesis], [synthesis, technology], [technology, .]]

>> Trigrams: 
[[translation, machine, learning], [machine, learning, speech], [learning, speech, synthesis], [speech, synthesis, technology], [synthesis, technology, .]]

>> Noun Phrases are: 
[translation, machine learning, speech synthesis technology]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 575 =================================

Simultaneously, the user will hear the translated version of the speech on the second earpiece.  

------------------- Sentence 1 -------------------

Simultaneously, the user will hear the translated version of the speech on the second earpiece.   


>> Tokens are: 
[Simultaneously, ,, user, hear, translated, version, speech, second, earpiece, .,  ] 

>> PoS Tags are: 
[('Simultaneously', 'ADV'), (',', 'PUNCT'), ('user', 'NOUN'), ('hear', 'VERB'), ('translated', 'VERB'), ('version', 'NOUN'), ('speech', 'NOUN'), ('second', 'ADJ'), ('earpiece', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Simultaneously', 'advmod'), (',', 'punct'), ('user', 'nsubj'), ('hear', 'ROOT'), ('translated', 'amod'), ('version', 'dobj'), ('speech', 'pobj'), ('second', 'amod'), ('earpiece', 'pobj'), ('.', 'punct'), (' ', 'dobj')]

>> Bigrams: 
[[Simultaneously, ,], [,, user], [user, hear], [hear, translated], [translated, version], [version, speech], [speech, second], [second, earpiece], [earpiece, .], [.,  ]]

>> Trigrams: 
[[Simultaneously, ,, user], [,, user, hear], [user, hear, translated], [hear, translated, version], [translated, version, speech], [version, speech, second], [speech, second, earpiece], [second, earpiece, .], [earpiece, .,  ]]

>> Noun Phrases are: 
[the user, the translated version, the speech, the second earpiece]

>> Named Entities are: 
[('second', 'ORDINAL')] 


================================ Paragraph 576 =================================

Moreover, it is not necessary that conversation would be taking place between two people  

------------------- Sentence 1 -------------------

Moreover, it is not necessary that conversation would be taking place between two people   


>> Tokens are: 
[,, necessary, conversation, taking, place, people,  ] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('necessary', 'ADJ'), ('conversation', 'NOUN'), ('taking', 'VERB'), ('place', 'NOUN'), ('people', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(',', 'punct'), ('necessary', 'acomp'), ('conversation', 'nsubj'), ('taking', 'ccomp'), ('place', 'dobj'), ('people', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[,, necessary], [necessary, conversation], [conversation, taking], [taking, place], [place, people], [people,  ]]

>> Trigrams: 
[[,, necessary, conversation], [necessary, conversation, taking], [conversation, taking, place], [taking, place, people], [place, people,  ]]

>> Noun Phrases are: 
[it, conversation, place, two people]

>> Named Entities are: 
[('two', 'CARDINAL')] 


================================ Paragraph 577 =================================

only the users can join in and discuss as a group. As if now the user may experience a few  

------------------- Sentence 1 -------------------

only the users can join in and discuss as a group. 


>> Tokens are: 
[users, join, discuss, group, .] 

>> PoS Tags are: 
[('users', 'NOUN'), ('join', 'VERB'), ('discuss', 'VERB'), ('group', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('users', 'nsubj'), ('join', 'ROOT'), ('discuss', 'conj'), ('group', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[users, join], [join, discuss], [discuss, group], [group, .]]

>> Trigrams: 
[[users, join, discuss], [join, discuss, group], [discuss, group, .]]

>> Noun Phrases are: 
[only the users, a group]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

As if now the user may experience a few   


>> Tokens are: 
[user, experience,  ] 

>> PoS Tags are: 
[('user', 'NOUN'), ('experience', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('user', 'nsubj'), ('experience', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[user, experience], [experience,  ]]

>> Trigrams: 
[[user, experience,  ]]

>> Noun Phrases are: 
[the user]

>> Named Entities are: 
[] 


================================ Paragraph 578 =================================

second lag interpolated the speech and translation, which Waverly Labs pursue to reduce.  

------------------- Sentence 1 -------------------

second lag interpolated the speech and translation, which Waverly Labs pursue to reduce. 


>> Tokens are: 
[second, lag, interpolated, speech, translation, ,, Waverly, Labs, pursue, reduce, .] 

>> PoS Tags are: 
[('second', 'ADJ'), ('lag', 'NOUN'), ('interpolated', 'VERB'), ('speech', 'NOUN'), ('translation', 'NOUN'), (',', 'PUNCT'), ('Waverly', 'PROPN'), ('Labs', 'PROPN'), ('pursue', 'VERB'), ('reduce', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('second', 'amod'), ('lag', 'nsubj'), ('interpolated', 'ROOT'), ('speech', 'dobj'), ('translation', 'conj'), (',', 'punct'), ('Waverly', 'compound'), ('Labs', 'nsubj'), ('pursue', 'relcl'), ('reduce', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[second, lag], [lag, interpolated], [interpolated, speech], [speech, translation], [translation, ,], [,, Waverly], [Waverly, Labs], [Labs, pursue], [pursue, reduce], [reduce, .]]

>> Trigrams: 
[[second, lag, interpolated], [lag, interpolated, speech], [interpolated, speech, translation], [speech, translation, ,], [translation, ,, Waverly], [,, Waverly, Labs], [Waverly, Labs, pursue], [Labs, pursue, reduce], [pursue, reduce, .]]

>> Noun Phrases are: 
[second lag, the speech, translation, Waverly Labs]

>> Named Entities are: 
[('second', 'ORDINAL'), ('Waverly Labs', 'PERSON')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 579 =================================

The Pilot earpiece will be available from September, but can be pre-ordered now for $249.  

------------------- Sentence 1 -------------------

The Pilot earpiece will be available from September, but can be pre-ordered now for $249. 


>> Tokens are: 
[Pilot, earpiece, available, September, ,, pre, -, ordered, $, 249, .] 

>> PoS Tags are: 
[('Pilot', 'PROPN'), ('earpiece', 'NOUN'), ('available', 'ADJ'), ('September', 'PROPN'), (',', 'PUNCT'), ('pre', 'ADJ'), ('-', 'VERB'), ('ordered', 'VERB'), ('$', 'SYM'), ('249', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Pilot', 'compound'), ('earpiece', 'nsubj'), ('available', 'acomp'), ('September', 'pobj'), (',', 'punct'), ('pre', 'acomp'), ('-', 'acomp'), ('ordered', 'advcl'), ('$', 'nmod'), ('249', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Pilot, earpiece], [earpiece, available], [available, September], [September, ,], [,, pre], [pre, -], [-, ordered], [ordered, $], [$, 249], [249, .]]

>> Trigrams: 
[[Pilot, earpiece, available], [earpiece, available, September], [available, September, ,], [September, ,, pre], [,, pre, -], [pre, -, ordered], [-, ordered, $], [ordered, $, 249], [$, 249, .]]

>> Noun Phrases are: 
[The Pilot earpiece, September]

>> Named Entities are: 
[('September', 'DATE'), ('249', 'MONEY')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 580 =================================

The earpieces can also be used for streaming music, answering voice calls and getting audio  

------------------- Sentence 1 -------------------

The earpieces can also be used for streaming music, answering voice calls and getting audio   


>> Tokens are: 
[earpieces, streaming, music, ,, answering, voice, calls, getting, audio,  ] 

>> PoS Tags are: 
[('earpieces', 'NOUN'), ('streaming', 'NOUN'), ('music', 'NOUN'), (',', 'PUNCT'), ('answering', 'VERB'), ('voice', 'NOUN'), ('calls', 'VERB'), ('getting', 'VERB'), ('audio', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('earpieces', 'nsubjpass'), ('streaming', 'compound'), ('music', 'pobj'), (',', 'punct'), ('answering', 'compound'), ('voice', 'nsubj'), ('calls', 'ROOT'), ('getting', 'conj'), ('audio', 'amod'), (' ', 'dobj')]

>> Bigrams: 
[[earpieces, streaming], [streaming, music], [music, ,], [,, answering], [answering, voice], [voice, calls], [calls, getting], [getting, audio], [audio,  ]]

>> Trigrams: 
[[earpieces, streaming, music], [streaming, music, ,], [music, ,, answering], [,, answering, voice], [answering, voice, calls], [voice, calls, getting], [calls, getting, audio], [getting, audio,  ]]

>> Noun Phrases are: 
[The earpieces, streaming music, answering voice]

>> Named Entities are: 
[] 


================================ Paragraph 581 =================================

notifications.  

------------------- Sentence 1 -------------------

notifications. 


>> Tokens are: 
[notifications, .] 

>> PoS Tags are: 
[('notifications', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('notifications', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[notifications, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[notifications]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 582 =================================

Link:https://www.indiegogo.com/projects/meet-the-pilot-smart-earpiece-language-translator- 

------------------- Sentence 1 -------------------

Link:https://www.indiegogo.com/projects/meet-the-pilot-smart-earpiece-language-translator- 


>> Tokens are: 
[Link, :, https://www.indiegogo.com, /, projects, /, meet, -, -, pilot, -, smart, -, earpiece, -, language, -, translator-] 

>> PoS Tags are: 
[('Link', 'VERB'), (':', 'PUNCT'), ('https://www.indiegogo.com', 'X'), ('/', 'SYM'), ('projects', 'NOUN'), ('/', 'SYM'), ('meet', 'NOUN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('pilot', 'NOUN'), ('-', 'PUNCT'), ('smart', 'ADJ'), ('-', 'PUNCT'), ('earpiece', 'NOUN'), ('-', 'PUNCT'), ('language', 'NOUN'), ('-', 'PUNCT'), ('translator-', 'NOUN')] 

>> Dependency Tags are: 
[('Link', 'ROOT'), (':', 'punct'), ('https://www.indiegogo.com', 'appos'), ('/', 'punct'), ('projects', 'npadvmod'), ('/', 'punct'), ('meet', 'dep'), ('-', 'punct'), ('-', 'punct'), ('pilot', 'dobj'), ('-', 'punct'), ('smart', 'amod'), ('-', 'punct'), ('earpiece', 'amod'), ('-', 'punct'), ('language', 'dobj'), ('-', 'punct'), ('translator-', 'nsubj')]

>> Bigrams: 
[[Link, :], [:, https://www.indiegogo.com], [https://www.indiegogo.com, /], [/, projects], [projects, /], [/, meet], [meet, -], [-, -], [-, pilot], [pilot, -], [-, smart], [smart, -], [-, earpiece], [earpiece, -], [-, language], [language, -], [-, translator-]]

>> Trigrams: 
[[Link, :, https://www.indiegogo.com], [:, https://www.indiegogo.com, /], [https://www.indiegogo.com, /, projects], [/, projects, /], [projects, /, meet], [/, meet, -], [meet, -, -], [-, -, pilot], [-, pilot, -], [pilot, -, smart], [-, smart, -], [smart, -, earpiece], [-, earpiece, -], [earpiece, -, language], [-, language, -], [language, -, translator-]]

>> Noun Phrases are: 
[the-pilot, translator-]

>> Named Entities are: 
[] 


================================ Paragraph 583 =================================

headphones-travel#/  

------------------- Sentence 1 -------------------

headphones-travel#/   


>> Tokens are: 
[headphones, -, travel#/,  ] 

>> PoS Tags are: 
[('headphones', 'NOUN'), ('-', 'PUNCT'), ('travel#/', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('headphones', 'compound'), ('-', 'punct'), ('travel#/', 'compound'), (' ', 'ROOT')]

>> Bigrams: 
[[headphones, -], [-, travel#/], [travel#/,  ]]

>> Trigrams: 
[[headphones, -, travel#/], [-, travel#/,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 584 =================================

  

------------------- Sentence 1 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 585 =================================

REFRENCES  

------------------- Sentence 1 -------------------

REFRENCES   


>> Tokens are: 
[REFRENCES,  ] 

>> PoS Tags are: 
[('REFRENCES', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('REFRENCES', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[REFRENCES,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[REFRENCES]

>> Named Entities are: 
[] 


================================ Paragraph 586 =================================

[1] Chomsky, Noam, 1965, Aspects of the Theory of Syntax, Cambridge, Massachusetts:  

------------------- Sentence 1 -------------------

[1] Chomsky, Noam, 1965, Aspects of the Theory of Syntax, Cambridge, Massachusetts: 


>> Tokens are: 
[[, 1, ], Chomsky, ,, Noam, ,, 1965, ,, Aspects, Theory, Syntax, ,, Cambridge, ,, Massachusetts, :] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('1', 'X'), (']', 'PUNCT'), ('Chomsky', 'PROPN'), (',', 'PUNCT'), ('Noam', 'PROPN'), (',', 'PUNCT'), ('1965', 'NUM'), (',', 'PUNCT'), ('Aspects', 'NOUN'), ('Theory', 'PROPN'), ('Syntax', 'PROPN'), (',', 'PUNCT'), ('Cambridge', 'PROPN'), (',', 'PUNCT'), ('Massachusetts', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('1', 'nummod'), (']', 'punct'), ('Chomsky', 'ROOT'), (',', 'punct'), ('Noam', 'conj'), (',', 'punct'), ('1965', 'appos'), (',', 'punct'), ('Aspects', 'conj'), ('Theory', 'pobj'), ('Syntax', 'pobj'), (',', 'punct'), ('Cambridge', 'conj'), (',', 'punct'), ('Massachusetts', 'appos'), (':', 'punct')]

>> Bigrams: 
[[[, 1], [1, ]], [], Chomsky], [Chomsky, ,], [,, Noam], [Noam, ,], [,, 1965], [1965, ,], [,, Aspects], [Aspects, Theory], [Theory, Syntax], [Syntax, ,], [,, Cambridge], [Cambridge, ,], [,, Massachusetts], [Massachusetts, :]]

>> Trigrams: 
[[[, 1, ]], [1, ], Chomsky], [], Chomsky, ,], [Chomsky, ,, Noam], [,, Noam, ,], [Noam, ,, 1965], [,, 1965, ,], [1965, ,, Aspects], [,, Aspects, Theory], [Aspects, Theory, Syntax], [Theory, Syntax, ,], [Syntax, ,, Cambridge], [,, Cambridge, ,], [Cambridge, ,, Massachusetts], [,, Massachusetts, :]]

>> Noun Phrases are: 
[[1] Chomsky, Noam, Aspects, the Theory, Syntax, Cambridge, Massachusetts]

>> Named Entities are: 
[('Noam', 'PERSON'), ('1965', 'DATE'), ('Aspects of the Theory of Syntax', 'ORG'), ('Cambridge', 'GPE'), ('Massachusetts', 'GPE')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 587 =================================

MIT Press.   

------------------- Sentence 1 -------------------

MIT Press. 


>> Tokens are: 
[MIT, Press, .] 

>> PoS Tags are: 
[('MIT', 'PROPN'), ('Press', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('MIT', 'compound'), ('Press', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[MIT, Press], [Press, .]]

>> Trigrams: 
[[MIT, Press, .]]

>> Noun Phrases are: 
[MIT Press]

>> Named Entities are: 
[('MIT Press', 'ORG')] 

------------------- Sentence 2 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 588 =================================

 [2] Rospocher, M., van Erp, M., Vossen, P., Fokkens, A., Aldabe,I., Rigau, G., Soroa, A.,  

------------------- Sentence 1 -------------------

 [2] Rospocher, M., van Erp, M., Vossen, P., Fokkens, A., Aldabe,I., Rigau, G., Soroa, A.,   


>> Tokens are: 
[ , [, 2, ], Rospocher, ,, M., ,, van, Erp, ,, M., ,, Vossen, ,, P., ,, Fokkens, ,, A., ,, Aldabe, ,, I., ,, Rigau, ,, G., ,, Soroa, ,, A., ,,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('[', 'PUNCT'), ('2', 'NUM'), (']', 'PUNCT'), ('Rospocher', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), (',', 'PUNCT'), ('van', 'PROPN'), ('Erp', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), (',', 'PUNCT'), ('Vossen', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), (',', 'PUNCT'), ('Fokkens', 'PROPN'), (',', 'PUNCT'), ('A.', 'NOUN'), (',', 'PUNCT'), ('Aldabe', 'PROPN'), (',', 'PUNCT'), ('I.', 'PROPN'), (',', 'PUNCT'), ('Rigau', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), (',', 'PUNCT'), ('Soroa', 'PROPN'), (',', 'PUNCT'), ('A.', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('[', 'punct'), ('2', 'prep'), (']', 'punct'), ('Rospocher', 'appos'), (',', 'punct'), ('M.', 'conj'), (',', 'punct'), ('van', 'compound'), ('Erp', 'conj'), (',', 'punct'), ('M.', 'conj'), (',', 'punct'), ('Vossen', 'conj'), (',', 'punct'), ('P.', 'conj'), (',', 'punct'), ('Fokkens', 'conj'), (',', 'punct'), ('A.', 'conj'), (',', 'punct'), ('Aldabe', 'conj'), (',', 'punct'), ('I.', 'conj'), (',', 'punct'), ('Rigau', 'conj'), (',', 'punct'), ('G.', 'conj'), (',', 'punct'), ('Soroa', 'conj'), (',', 'punct'), ('A.', 'conj'), (',', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[ , [], [[, 2], [2, ]], [], Rospocher], [Rospocher, ,], [,, M.], [M., ,], [,, van], [van, Erp], [Erp, ,], [,, M.], [M., ,], [,, Vossen], [Vossen, ,], [,, P.], [P., ,], [,, Fokkens], [Fokkens, ,], [,, A.], [A., ,], [,, Aldabe], [Aldabe, ,], [,, I.], [I., ,], [,, Rigau], [Rigau, ,], [,, G.], [G., ,], [,, Soroa], [Soroa, ,], [,, A.], [A., ,], [,,  ]]

>> Trigrams: 
[[ , [, 2], [[, 2, ]], [2, ], Rospocher], [], Rospocher, ,], [Rospocher, ,, M.], [,, M., ,], [M., ,, van], [,, van, Erp], [van, Erp, ,], [Erp, ,, M.], [,, M., ,], [M., ,, Vossen], [,, Vossen, ,], [Vossen, ,, P.], [,, P., ,], [P., ,, Fokkens], [,, Fokkens, ,], [Fokkens, ,, A.], [,, A., ,], [A., ,, Aldabe], [,, Aldabe, ,], [Aldabe, ,, I.], [,, I., ,], [I., ,, Rigau], [,, Rigau, ,], [Rigau, ,, G.], [,, G., ,], [G., ,, Soroa], [,, Soroa, ,], [Soroa, ,, A.], [,, A., ,], [A., ,,  ]]

>> Noun Phrases are: 
[Rospocher, M., van Erp, M., Vossen, P., Fokkens, A., Aldabe, I., Rigau, G., Soroa, A.]

>> Named Entities are: 
[('van Erp', 'PERSON'), ('M.', 'GPE'), ('Vossen', 'GPE')] 


================================ Paragraph 589 =================================

Ploeger, T., and Bogaard, T.(2016). Building event-centric knowledge graphs from news.  

------------------- Sentence 1 -------------------

Ploeger, T., and Bogaard, T.(2016). 


>> Tokens are: 
[Ploeger, ,, T., ,, Bogaard, ,, T.(2016, ), .] 

>> PoS Tags are: 
[('Ploeger', 'NOUN'), (',', 'PUNCT'), ('T.', 'PROPN'), (',', 'PUNCT'), ('Bogaard', 'PROPN'), (',', 'PUNCT'), ('T.(2016', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Ploeger', 'ROOT'), (',', 'punct'), ('T.', 'conj'), (',', 'punct'), ('Bogaard', 'conj'), (',', 'punct'), ('T.(2016', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Ploeger, ,], [,, T.], [T., ,], [,, Bogaard], [Bogaard, ,], [,, T.(2016], [T.(2016, )], [), .]]

>> Trigrams: 
[[Ploeger, ,, T.], [,, T., ,], [T., ,, Bogaard], [,, Bogaard, ,], [Bogaard, ,, T.(2016], [,, T.(2016, )], [T.(2016, ), .]]

>> Noun Phrases are: 
[Ploeger, T., Bogaard]

>> Named Entities are: 
[('Bogaard', 'GPE')] 

------------------- Sentence 2 -------------------

Building event-centric knowledge graphs from news. 


>> Tokens are: 
[Building, event, -, centric, knowledge, graphs, news, .] 

>> PoS Tags are: 
[('Building', 'VERB'), ('event', 'NOUN'), ('-', 'PUNCT'), ('centric', 'ADJ'), ('knowledge', 'NOUN'), ('graphs', 'NOUN'), ('news', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Building', 'ROOT'), ('event', 'npadvmod'), ('-', 'punct'), ('centric', 'amod'), ('knowledge', 'compound'), ('graphs', 'dobj'), ('news', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Building, event], [event, -], [-, centric], [centric, knowledge], [knowledge, graphs], [graphs, news], [news, .]]

>> Trigrams: 
[[Building, event, -], [event, -, centric], [-, centric, knowledge], [centric, knowledge, graphs], [knowledge, graphs, news], [graphs, news, .]]

>> Noun Phrases are: 
[event-centric knowledge graphs, news]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 590 =================================

Web Semantics: Science, Services and Agents on the World Wide Web, In Press.  

------------------- Sentence 1 -------------------

Web Semantics: Science, Services and Agents on the World Wide Web, In Press. 


>> Tokens are: 
[Web, Semantics, :, Science, ,, Services, Agents, World, Wide, Web, ,, Press, .] 

>> PoS Tags are: 
[('Web', 'NOUN'), ('Semantics', 'NOUN'), (':', 'PUNCT'), ('Science', 'PROPN'), (',', 'PUNCT'), ('Services', 'PROPN'), ('Agents', 'PROPN'), ('World', 'PROPN'), ('Wide', 'ADJ'), ('Web', 'NOUN'), (',', 'PUNCT'), ('Press', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Web', 'compound'), ('Semantics', 'ROOT'), (':', 'punct'), ('Science', 'appos'), (',', 'punct'), ('Services', 'conj'), ('Agents', 'conj'), ('World', 'nmod'), ('Wide', 'amod'), ('Web', 'pobj'), (',', 'punct'), ('Press', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Web, Semantics], [Semantics, :], [:, Science], [Science, ,], [,, Services], [Services, Agents], [Agents, World], [World, Wide], [Wide, Web], [Web, ,], [,, Press], [Press, .]]

>> Trigrams: 
[[Web, Semantics, :], [Semantics, :, Science], [:, Science, ,], [Science, ,, Services], [,, Services, Agents], [Services, Agents, World], [Agents, World, Wide], [World, Wide, Web], [Wide, Web, ,], [Web, ,, Press], [,, Press, .]]

>> Noun Phrases are: 
[Web Semantics, Science, Services, Agents, the World Wide Web, Press]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 591 =================================

[3] Shemtov, H. (1997). Ambiguity management in natural language generation. Stanford  

------------------- Sentence 1 -------------------

[3] Shemtov, H. (1997). 


>> Tokens are: 
[[, 3, ], Shemtov, ,, H., (, 1997, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('3', 'X'), (']', 'PUNCT'), ('Shemtov', 'ADJ'), (',', 'PUNCT'), ('H.', 'PROPN'), ('(', 'PUNCT'), ('1997', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('3', 'meta'), (']', 'punct'), ('Shemtov', 'ROOT'), (',', 'punct'), ('H.', 'npadvmod'), ('(', 'punct'), ('1997', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 3], [3, ]], [], Shemtov], [Shemtov, ,], [,, H.], [H., (], [(, 1997], [1997, )], [), .]]

>> Trigrams: 
[[[, 3, ]], [3, ], Shemtov], [], Shemtov, ,], [Shemtov, ,, H.], [,, H., (], [H., (, 1997], [(, 1997, )], [1997, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1997', 'DATE')] 

------------------- Sentence 2 -------------------

Ambiguity management in natural language generation. 


>> Tokens are: 
[Ambiguity, management, natural, language, generation, .] 

>> PoS Tags are: 
[('Ambiguity', 'NOUN'), ('management', 'NOUN'), ('natural', 'ADJ'), ('language', 'NOUN'), ('generation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Ambiguity', 'compound'), ('management', 'ROOT'), ('natural', 'amod'), ('language', 'compound'), ('generation', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Ambiguity, management], [management, natural], [natural, language], [language, generation], [generation, .]]

>> Trigrams: 
[[Ambiguity, management, natural], [management, natural, language], [natural, language, generation], [language, generation, .]]

>> Noun Phrases are: 
[Ambiguity management, natural language generation]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Stanford   


>> Tokens are: 
[Stanford,  ] 

>> PoS Tags are: 
[('Stanford', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Stanford', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[Stanford,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Stanford]

>> Named Entities are: 
[('Stanford', 'ORG')] 


================================ Paragraph 592 =================================

University.   

------------------- Sentence 1 -------------------

University. 


>> Tokens are: 
[University, .] 

>> PoS Tags are: 
[('University', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('University', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[University, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[University]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 593 =================================

[4] Emele, M. C., & Dorna, M. (1998, August). Ambiguity preserving machine translation  

------------------- Sentence 1 -------------------

[4] Emele, M. C., & Dorna, M. (1998, August). 


>> Tokens are: 
[[, 4, ], Emele, ,, M., C., ,, &, Dorna, ,, M., (, 1998, ,, August, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('4', 'X'), (']', 'PUNCT'), ('Emele', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('C.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Dorna', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('(', 'PUNCT'), ('1998', 'NUM'), (',', 'PUNCT'), ('August', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('4', 'dep'), (']', 'punct'), ('Emele', 'ROOT'), (',', 'punct'), ('M.', 'compound'), ('C.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Dorna', 'conj'), (',', 'punct'), ('M.', 'punct'), ('(', 'punct'), ('1998', 'appos'), (',', 'punct'), ('August', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 4], [4, ]], [], Emele], [Emele, ,], [,, M.], [M., C.], [C., ,], [,, &], [&, Dorna], [Dorna, ,], [,, M.], [M., (], [(, 1998], [1998, ,], [,, August], [August, )], [), .]]

>> Trigrams: 
[[[, 4, ]], [4, ], Emele], [], Emele, ,], [Emele, ,, M.], [,, M., C.], [M., C., ,], [C., ,, &], [,, &, Dorna], [&, Dorna, ,], [Dorna, ,, M.], [,, M., (], [M., (, 1998], [(, 1998, ,], [1998, ,, August], [,, August, )], [August, ), .]]

>> Noun Phrases are: 
[[4] Emele, M. C., Dorna]

>> Named Entities are: 
[('4', 'CARDINAL'), ('1998', 'DATE'), ('August', 'DATE')] 

------------------- Sentence 2 -------------------

Ambiguity preserving machine translation   


>> Tokens are: 
[Ambiguity, preserving, machine, translation,  ] 

>> PoS Tags are: 
[('Ambiguity', 'NOUN'), ('preserving', 'VERB'), ('machine', 'NOUN'), ('translation', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Ambiguity', 'npadvmod'), ('preserving', 'ROOT'), ('machine', 'compound'), ('translation', 'dobj'), (' ', 'dobj')]

>> Bigrams: 
[[Ambiguity, preserving], [preserving, machine], [machine, translation], [translation,  ]]

>> Trigrams: 
[[Ambiguity, preserving, machine], [preserving, machine, translation], [machine, translation,  ]]

>> Noun Phrases are: 
[machine translation]

>> Named Entities are: 
[] 


================================ Paragraph 594 =================================

using packed representations. In Proceedings of the 36th Annual Meeting of the Association 

------------------- Sentence 1 -------------------

using packed representations. 


>> Tokens are: 
[packed, representations, .] 

>> PoS Tags are: 
[('packed', 'VERB'), ('representations', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('packed', 'amod'), ('representations', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[packed, representations], [representations, .]]

>> Trigrams: 
[[packed, representations, .]]

>> Noun Phrases are: 
[packed representations]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Proceedings of the 36th Annual Meeting of the Association 


>> Tokens are: 
[Proceedings, 36th, Annual, Meeting, Association] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('36th', 'ADJ'), ('Annual', 'PROPN'), ('Meeting', 'PROPN'), ('Association', 'PROPN')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('36th', 'amod'), ('Annual', 'compound'), ('Meeting', 'pobj'), ('Association', 'pobj')]

>> Bigrams: 
[[Proceedings, 36th], [36th, Annual], [Annual, Meeting], [Meeting, Association]]

>> Trigrams: 
[[Proceedings, 36th, Annual], [36th, Annual, Meeting], [Annual, Meeting, Association]]

>> Noun Phrases are: 
[Proceedings, the 36th Annual Meeting, the Association]

>> Named Entities are: 
[('Proceedings', 'PERSON'), ('36th', 'ORDINAL')] 


================================ Paragraph 595 =================================

for Computational Linguistics and 17th International Conference on Computational  

------------------- Sentence 1 -------------------

for Computational Linguistics and 17th International Conference on Computational   


>> Tokens are: 
[Computational, Linguistics, 17th, International, Conference, Computational,  ] 

>> PoS Tags are: 
[('Computational', 'PROPN'), ('Linguistics', 'PROPN'), ('17th', 'ADJ'), ('International', 'PROPN'), ('Conference', 'PROPN'), ('Computational', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Computational', 'compound'), ('Linguistics', 'nmod'), ('17th', 'conj'), ('International', 'compound'), ('Conference', 'pobj'), ('Computational', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Computational, Linguistics], [Linguistics, 17th], [17th, International], [International, Conference], [Conference, Computational], [Computational,  ]]

>> Trigrams: 
[[Computational, Linguistics, 17th], [Linguistics, 17th, International], [17th, International, Conference], [International, Conference, Computational], [Conference, Computational,  ]]

>> Noun Phrases are: 
[Computational Linguistics and 17th International Conference, Computational]

>> Named Entities are: 
[('Computational Linguistics', 'PERSON'), ('17th', 'ORDINAL')] 


================================ Paragraph 596 =================================

Linguistics-Volume 1 (pp. 365-371). Association for Computational Linguistics.  

------------------- Sentence 1 -------------------

Linguistics-Volume 1 (pp. 


>> Tokens are: 
[Linguistics, -, Volume, 1, (, pp, .] 

>> PoS Tags are: 
[('Linguistics', 'PROPN'), ('-', 'PUNCT'), ('Volume', 'NOUN'), ('1', 'NUM'), ('(', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Linguistics', 'compound'), ('-', 'punct'), ('Volume', 'ROOT'), ('1', 'nummod'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Linguistics, -], [-, Volume], [Volume, 1], [1, (], [(, pp], [pp, .]]

>> Trigrams: 
[[Linguistics, -, Volume], [-, Volume, 1], [Volume, 1, (], [1, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[Linguistics-Volume]

>> Named Entities are: 
[('Linguistics-Volume', 'ORG')] 

------------------- Sentence 2 -------------------

365-371). 


>> Tokens are: 
[365, -, 371, ), .] 

>> PoS Tags are: 
[('365', 'NUM'), ('-', 'SYM'), ('371', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('365', 'ROOT'), ('-', 'punct'), ('371', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[365, -], [-, 371], [371, )], [), .]]

>> Trigrams: 
[[365, -, 371], [-, 371, )], [371, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Association for Computational Linguistics. 


>> Tokens are: 
[Association, Computational, Linguistics, .] 

>> PoS Tags are: 
[('Association', 'PROPN'), ('Computational', 'PROPN'), ('Linguistics', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Association', 'ROOT'), ('Computational', 'compound'), ('Linguistics', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Association, Computational], [Computational, Linguistics], [Linguistics, .]]

>> Trigrams: 
[[Association, Computational, Linguistics], [Computational, Linguistics, .]]

>> Noun Phrases are: 
[Association, Computational Linguistics]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 597 =================================

[5] Knight, K., & Langkilde, I. (2000, July). Preserving ambiguities in generation via  

------------------- Sentence 1 -------------------

[5] Knight, K., & Langkilde, I. (2000, July). 


>> Tokens are: 
[[, 5, ], Knight, ,, K., ,, &, Langkilde, ,, I., (, 2000, ,, July, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('5', 'X'), (']', 'PUNCT'), ('Knight', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Langkilde', 'PROPN'), (',', 'PUNCT'), ('I.', 'NOUN'), ('(', 'PUNCT'), ('2000', 'NUM'), (',', 'PUNCT'), ('July', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('5', 'nummod'), (']', 'punct'), ('Knight', 'ROOT'), (',', 'punct'), ('K.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Langkilde', 'conj'), (',', 'punct'), ('I.', 'conj'), ('(', 'punct'), ('2000', 'appos'), (',', 'punct'), ('July', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 5], [5, ]], [], Knight], [Knight, ,], [,, K.], [K., ,], [,, &], [&, Langkilde], [Langkilde, ,], [,, I.], [I., (], [(, 2000], [2000, ,], [,, July], [July, )], [), .]]

>> Trigrams: 
[[[, 5, ]], [5, ], Knight], [], Knight, ,], [Knight, ,, K.], [,, K., ,], [K., ,, &], [,, &, Langkilde], [&, Langkilde, ,], [Langkilde, ,, I.], [,, I., (], [I., (, 2000], [(, 2000, ,], [2000, ,, July], [,, July, )], [July, ), .]]

>> Noun Phrases are: 
[[5] Knight, K., Langkilde, I.]

>> Named Entities are: 
[('K., & Langkilde', 'ORG'), ('I.', 'ORG'), ('July', 'DATE')] 

------------------- Sentence 2 -------------------

Preserving ambiguities in generation via   


>> Tokens are: 
[Preserving, ambiguities, generation,  ] 

>> PoS Tags are: 
[('Preserving', 'VERB'), ('ambiguities', 'NOUN'), ('generation', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Preserving', 'amod'), ('ambiguities', 'ROOT'), ('generation', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Preserving, ambiguities], [ambiguities, generation], [generation,  ]]

>> Trigrams: 
[[Preserving, ambiguities, generation], [ambiguities, generation,  ]]

>> Noun Phrases are: 
[Preserving ambiguities, generation]

>> Named Entities are: 
[] 


================================ Paragraph 598 =================================

automata intersection. In AAAI/IAAI (pp. 697-702).  

------------------- Sentence 1 -------------------

automata intersection. 


>> Tokens are: 
[automata, intersection, .] 

>> PoS Tags are: 
[('automata', 'NOUN'), ('intersection', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('automata', 'compound'), ('intersection', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[automata, intersection], [intersection, .]]

>> Trigrams: 
[[automata, intersection, .]]

>> Noun Phrases are: 
[automata intersection]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In AAAI/IAAI (pp. 


>> Tokens are: 
[AAAI, /, IAAI, (, pp, .] 

>> PoS Tags are: 
[('AAAI', 'PROPN'), ('/', 'SYM'), ('IAAI', 'PROPN'), ('(', 'PUNCT'), ('pp', 'INTJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('AAAI', 'nmod'), ('/', 'punct'), ('IAAI', 'pobj'), ('(', 'punct'), ('pp', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[AAAI, /], [/, IAAI], [IAAI, (], [(, pp], [pp, .]]

>> Trigrams: 
[[AAAI, /, IAAI], [/, IAAI, (], [IAAI, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[AAAI/IAAI]

>> Named Entities are: 
[('AAAI/IAAI', 'ORG')] 

------------------- Sentence 3 -------------------

697-702). 


>> Tokens are: 
[697, -, 702, ), .] 

>> PoS Tags are: 
[('697', 'NUM'), ('-', 'SYM'), ('702', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('697', 'nummod'), ('-', 'punct'), ('702', 'ROOT'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[697, -], [-, 702], [702, )], [), .]]

>> Trigrams: 
[[697, -, 702], [-, 702, )], [702, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('697-702', 'CARDINAL')] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 599 =================================

[6] Nation, K., Snowling, M. J., & Clarke, P. (2007). Dissecting the relationship between  

------------------- Sentence 1 -------------------

[6] Nation, K., Snowling, M. J., & Clarke, P. (2007). 


>> Tokens are: 
[[, 6, ], Nation, ,, K., ,, Snowling, ,, M., J., ,, &, Clarke, ,, P., (, 2007, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('6', 'NUM'), (']', 'PUNCT'), ('Nation', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), (',', 'PUNCT'), ('Snowling', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('J.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Clarke', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('(', 'PUNCT'), ('2007', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('6', 'nummod'), (']', 'punct'), ('Nation', 'ROOT'), (',', 'punct'), ('K.', 'conj'), (',', 'punct'), ('Snowling', 'conj'), (',', 'punct'), ('M.', 'compound'), ('J.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Clarke', 'conj'), (',', 'punct'), ('P.', 'conj'), ('(', 'punct'), ('2007', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 6], [6, ]], [], Nation], [Nation, ,], [,, K.], [K., ,], [,, Snowling], [Snowling, ,], [,, M.], [M., J.], [J., ,], [,, &], [&, Clarke], [Clarke, ,], [,, P.], [P., (], [(, 2007], [2007, )], [), .]]

>> Trigrams: 
[[[, 6, ]], [6, ], Nation], [], Nation, ,], [Nation, ,, K.], [,, K., ,], [K., ,, Snowling], [,, Snowling, ,], [Snowling, ,, M.], [,, M., J.], [M., J., ,], [J., ,, &], [,, &, Clarke], [&, Clarke, ,], [Clarke, ,, P.], [,, P., (], [P., (, 2007], [(, 2007, )], [2007, ), .]]

>> Noun Phrases are: 
[[6] Nation, K., Snowling, M. J., Clarke, P.]

>> Named Entities are: 
[('6', 'CARDINAL'), ('M. J., & Clarke', 'PERSON'), ('2007', 'DATE')] 

------------------- Sentence 2 -------------------

Dissecting the relationship between   


>> Tokens are: 
[Dissecting, relationship,  ] 

>> PoS Tags are: 
[('Dissecting', 'VERB'), ('relationship', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Dissecting', 'ROOT'), ('relationship', 'dobj'), (' ', 'pobj')]

>> Bigrams: 
[[Dissecting, relationship], [relationship,  ]]

>> Trigrams: 
[[Dissecting, relationship,  ]]

>> Noun Phrases are: 
[the relationship]

>> Named Entities are: 
[] 


================================ Paragraph 600 =================================

language skills and learning to read: Semantic and phonological contributions to new  

------------------- Sentence 1 -------------------

language skills and learning to read: Semantic and phonological contributions to new   


>> Tokens are: 
[language, skills, learning, read, :, Semantic, phonological, contributions, new,  ] 

>> PoS Tags are: 
[('language', 'NOUN'), ('skills', 'NOUN'), ('learning', 'VERB'), ('read', 'VERB'), (':', 'PUNCT'), ('Semantic', 'ADJ'), ('phonological', 'ADJ'), ('contributions', 'NOUN'), ('new', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('language', 'compound'), ('skills', 'ROOT'), ('learning', 'conj'), ('read', 'xcomp'), (':', 'punct'), ('Semantic', 'amod'), ('phonological', 'conj'), ('contributions', 'appos'), ('new', 'amod'), (' ', 'pobj')]

>> Bigrams: 
[[language, skills], [skills, learning], [learning, read], [read, :], [:, Semantic], [Semantic, phonological], [phonological, contributions], [contributions, new], [new,  ]]

>> Trigrams: 
[[language, skills, learning], [skills, learning, read], [learning, read, :], [read, :, Semantic], [:, Semantic, phonological], [Semantic, phonological, contributions], [phonological, contributions, new], [contributions, new,  ]]

>> Noun Phrases are: 
[language skills, Semantic and phonological contributions]

>> Named Entities are: 
[] 


================================ Paragraph 601 =================================

vocabulary learning in children with poor reading comprehension. Advances in Speech  

------------------- Sentence 1 -------------------

vocabulary learning in children with poor reading comprehension. 


>> Tokens are: 
[vocabulary, learning, children, poor, reading, comprehension, .] 

>> PoS Tags are: 
[('vocabulary', 'ADJ'), ('learning', 'NOUN'), ('children', 'NOUN'), ('poor', 'ADJ'), ('reading', 'NOUN'), ('comprehension', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('vocabulary', 'amod'), ('learning', 'ROOT'), ('children', 'pobj'), ('poor', 'amod'), ('reading', 'compound'), ('comprehension', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[vocabulary, learning], [learning, children], [children, poor], [poor, reading], [reading, comprehension], [comprehension, .]]

>> Trigrams: 
[[vocabulary, learning, children], [learning, children, poor], [children, poor, reading], [poor, reading, comprehension], [reading, comprehension, .]]

>> Noun Phrases are: 
[vocabulary learning, children, poor reading comprehension]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Advances in Speech   


>> Tokens are: 
[Advances, Speech,  ] 

>> PoS Tags are: 
[('Advances', 'NOUN'), ('Speech', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Advances', 'ROOT'), ('Speech', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Advances, Speech], [Speech,  ]]

>> Trigrams: 
[[Advances, Speech,  ]]

>> Noun Phrases are: 
[Advances, Speech]

>> Named Entities are: 
[('Speech', 'PERSON')] 


================================ Paragraph 602 =================================

Language Pathology, 9(2), 131-139.  

------------------- Sentence 1 -------------------

Language Pathology, 9(2), 131-139. 


>> Tokens are: 
[Language, Pathology, ,, 9(2, ), ,, 131, -, 139, .] 

>> PoS Tags are: 
[('Language', 'PROPN'), ('Pathology', 'PROPN'), (',', 'PUNCT'), ('9(2', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('131', 'NUM'), ('-', 'SYM'), ('139', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Language', 'compound'), ('Pathology', 'ROOT'), (',', 'punct'), ('9(2', 'appos'), (')', 'punct'), (',', 'punct'), ('131', 'appos'), ('-', 'punct'), ('139', 'prep'), ('.', 'punct')]

>> Bigrams: 
[[Language, Pathology], [Pathology, ,], [,, 9(2], [9(2, )], [), ,], [,, 131], [131, -], [-, 139], [139, .]]

>> Trigrams: 
[[Language, Pathology, ,], [Pathology, ,, 9(2], [,, 9(2, )], [9(2, ), ,], [), ,, 131], [,, 131, -], [131, -, 139], [-, 139, .]]

>> Noun Phrases are: 
[Language Pathology, 9(2]

>> Named Entities are: 
[('131', 'CARDINAL')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 603 =================================

[7] Liddy, E. D. (2001). Natural language processing.  

------------------- Sentence 1 -------------------

[7] Liddy, E. D. (2001). 


>> Tokens are: 
[[, 7, ], Liddy, ,, E., D., (, 2001, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('7', 'NUM'), (']', 'PUNCT'), ('Liddy', 'PROPN'), (',', 'PUNCT'), ('E.', 'PROPN'), ('D.', 'PROPN'), ('(', 'PUNCT'), ('2001', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('7', 'nummod'), (']', 'punct'), ('Liddy', 'ROOT'), (',', 'punct'), ('E.', 'compound'), ('D.', 'conj'), ('(', 'punct'), ('2001', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 7], [7, ]], [], Liddy], [Liddy, ,], [,, E.], [E., D.], [D., (], [(, 2001], [2001, )], [), .]]

>> Trigrams: 
[[[, 7, ]], [7, ], Liddy], [], Liddy, ,], [Liddy, ,, E.], [,, E., D.], [E., D., (], [D., (, 2001], [(, 2001, )], [2001, ), .]]

>> Noun Phrases are: 
[[7] Liddy, E. D.]

>> Named Entities are: 
[('7', 'CARDINAL'), ('E. D.', 'NORP'), ('2001', 'DATE')] 

------------------- Sentence 2 -------------------

Natural language processing. 


>> Tokens are: 
[Natural, language, processing, .] 

>> PoS Tags are: 
[('Natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Natural', 'amod'), ('language', 'compound'), ('processing', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Natural, language], [language, processing], [processing, .]]

>> Trigrams: 
[[Natural, language, processing], [language, processing, .]]

>> Noun Phrases are: 
[Natural language processing]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 604 =================================

[8] Feldman, S. (1999). NLP Meets the Jabberwocky: Natural Language Processing in  

------------------- Sentence 1 -------------------

[8] Feldman, S. (1999). 


>> Tokens are: 
[[, 8, ], Feldman, ,, S., (, 1999, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('8', 'NUM'), (']', 'PUNCT'), ('Feldman', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('(', 'PUNCT'), ('1999', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('8', 'nummod'), (']', 'punct'), ('Feldman', 'ROOT'), (',', 'punct'), ('S.', 'appos'), ('(', 'punct'), ('1999', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 8], [8, ]], [], Feldman], [Feldman, ,], [,, S.], [S., (], [(, 1999], [1999, )], [), .]]

>> Trigrams: 
[[[, 8, ]], [8, ], Feldman], [], Feldman, ,], [Feldman, ,, S.], [,, S., (], [S., (, 1999], [(, 1999, )], [1999, ), .]]

>> Noun Phrases are: 
[[8] Feldman, S.]

>> Named Entities are: 
[('8', 'CARDINAL'), ('1999', 'DATE')] 

------------------- Sentence 2 -------------------

NLP Meets the Jabberwocky: Natural Language Processing in   


>> Tokens are: 
[NLP, Meets, Jabberwocky, :, Natural, Language, Processing,  ] 

>> PoS Tags are: 
[('NLP', 'PROPN'), ('Meets', 'VERB'), ('Jabberwocky', 'PROPN'), (':', 'PUNCT'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('NLP', 'nsubj'), ('Meets', 'ROOT'), ('Jabberwocky', 'dobj'), (':', 'punct'), ('Natural', 'compound'), ('Language', 'compound'), ('Processing', 'appos'), (' ', 'pobj')]

>> Bigrams: 
[[NLP, Meets], [Meets, Jabberwocky], [Jabberwocky, :], [:, Natural], [Natural, Language], [Language, Processing], [Processing,  ]]

>> Trigrams: 
[[NLP, Meets, Jabberwocky], [Meets, Jabberwocky, :], [Jabberwocky, :, Natural], [:, Natural, Language], [Natural, Language, Processing], [Language, Processing,  ]]

>> Noun Phrases are: 
[NLP, the Jabberwocky, Natural Language Processing]

>> Named Entities are: 
[('NLP', 'ORG')] 


================================ Paragraph 605 =================================

Information Retrieval. ONLINE-WESTON THEN WILTON-, 23, 62-73.  

------------------- Sentence 1 -------------------

Information Retrieval. 


>> Tokens are: 
[Information, Retrieval, .] 

>> PoS Tags are: 
[('Information', 'PROPN'), ('Retrieval', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Information', 'compound'), ('Retrieval', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Information, Retrieval], [Retrieval, .]]

>> Trigrams: 
[[Information, Retrieval, .]]

>> Noun Phrases are: 
[Information Retrieval]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

ONLINE-WESTON THEN WILTON-, 23, 62-73. 


>> Tokens are: 
[ONLINE, -, WESTON, WILTON-, ,, 23, ,, 62, -, 73, .] 

>> PoS Tags are: 
[('ONLINE', 'PROPN'), ('-', 'PUNCT'), ('WESTON', 'PROPN'), ('WILTON-', 'PROPN'), (',', 'PUNCT'), ('23', 'NUM'), (',', 'PUNCT'), ('62', 'NUM'), ('-', 'SYM'), ('73', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ONLINE', 'compound'), ('-', 'punct'), ('WESTON', 'ROOT'), ('WILTON-', 'appos'), (',', 'punct'), ('23', 'nummod'), (',', 'punct'), ('62', 'appos'), ('-', 'punct'), ('73', 'prep'), ('.', 'punct')]

>> Bigrams: 
[[ONLINE, -], [-, WESTON], [WESTON, WILTON-], [WILTON-, ,], [,, 23], [23, ,], [,, 62], [62, -], [-, 73], [73, .]]

>> Trigrams: 
[[ONLINE, -, WESTON], [-, WESTON, WILTON-], [WESTON, WILTON-, ,], [WILTON-, ,, 23], [,, 23, ,], [23, ,, 62], [,, 62, -], [62, -, 73], [-, 73, .]]

>> Noun Phrases are: 
[ONLINE-WESTON, WILTON-]

>> Named Entities are: 
[('23', 'DATE'), ('62-73', 'DATE')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 606 =================================

[9] "Natural Language Processing." Natural Language Processing RSS. N.p., n.d. Web. 25  

------------------- Sentence 1 -------------------

[9] "Natural Language Processing. 


>> Tokens are: 
[[, 9, ], ", Natural, Language, Processing, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('9', 'NUM'), (']', 'PUNCT'), ('"', 'PUNCT'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('9', 'dep'), (']', 'dep'), ('"', 'punct'), ('Natural', 'compound'), ('Language', 'compound'), ('Processing', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[[, 9], [9, ]], [], "], [", Natural], [Natural, Language], [Language, Processing], [Processing, .]]

>> Trigrams: 
[[[, 9, ]], [9, ], "], [], ", Natural], [", Natural, Language], [Natural, Language, Processing], [Language, Processing, .]]

>> Noun Phrases are: 
[[9] "Natural Language Processing]

>> Named Entities are: 
[('9', 'CARDINAL'), ('Natural Language Processing', 'WORK_OF_ART')] 

------------------- Sentence 2 -------------------

" Natural Language Processing RSS. 


>> Tokens are: 
[", Natural, Language, Processing, RSS, .] 

>> PoS Tags are: 
[('"', 'PUNCT'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'PROPN'), ('RSS', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('"', 'punct'), ('Natural', 'compound'), ('Language', 'compound'), ('Processing', 'compound'), ('RSS', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[", Natural], [Natural, Language], [Language, Processing], [Processing, RSS], [RSS, .]]

>> Trigrams: 
[[", Natural, Language], [Natural, Language, Processing], [Language, Processing, RSS], [Processing, RSS, .]]

>> Noun Phrases are: 
[" Natural Language Processing RSS]

>> Named Entities are: 
[('Natural Language Processing RSS', 'WORK_OF_ART')] 

------------------- Sentence 3 -------------------

N.p., n.d. 


>> Tokens are: 
[N.p, ., ,, n.d, .] 

>> PoS Tags are: 
[('N.p', 'PROPN'), ('.', 'PUNCT'), (',', 'PUNCT'), ('n.d', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('N.p', 'ROOT'), ('.', 'punct'), (',', 'punct'), ('n.d', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[N.p, .], [., ,], [,, n.d], [n.d, .]]

>> Trigrams: 
[[N.p, ., ,], [., ,, n.d], [,, n.d, .]]

>> Noun Phrases are: 
[N.p]

>> Named Entities are: 
[('n.d', 'PERSON')] 

------------------- Sentence 4 -------------------

Web. 


>> Tokens are: 
[Web, .] 

>> PoS Tags are: 
[('Web', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Web', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Web, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Web]

>> Named Entities are: 
[] 

------------------- Sentence 5 -------------------

25   


>> Tokens are: 
[25,  ] 

>> PoS Tags are: 
[('25', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('25', 'nummod'), (' ', 'ROOT')]

>> Bigrams: 
[[25,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('25', 'CARDINAL')] 


================================ Paragraph 607 =================================

Mar. 2017  

------------------- Sentence 1 -------------------

Mar. 2017   


>> Tokens are: 
[Mar., 2017,  ] 

>> PoS Tags are: 
[('Mar.', 'PROPN'), ('2017', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Mar.', 'ROOT'), ('2017', 'nummod'), (' ', 'punct')]

>> Bigrams: 
[[Mar., 2017], [2017,  ]]

>> Trigrams: 
[[Mar., 2017,  ]]

>> Noun Phrases are: 
[Mar.]

>> Named Entities are: 
[('2017', 'DATE')] 


================================ Paragraph 608 =================================

[10] Hutchins, W. J. (1986). Machine translation: past, present, future (p. 66). Chichester:  

------------------- Sentence 1 -------------------

[10] Hutchins, W. J. (1986). 


>> Tokens are: 
[[, 10, ], Hutchins, ,, W., J., (, 1986, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('10', 'NUM'), (']', 'PUNCT'), ('Hutchins', 'PROPN'), (',', 'PUNCT'), ('W.', 'PROPN'), ('J.', 'PROPN'), ('(', 'PUNCT'), ('1986', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('10', 'dep'), (']', 'dep'), ('Hutchins', 'ROOT'), (',', 'punct'), ('W.', 'compound'), ('J.', 'conj'), ('(', 'punct'), ('1986', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 10], [10, ]], [], Hutchins], [Hutchins, ,], [,, W.], [W., J.], [J., (], [(, 1986], [1986, )], [), .]]

>> Trigrams: 
[[[, 10, ]], [10, ], Hutchins], [], Hutchins, ,], [Hutchins, ,, W.], [,, W., J.], [W., J., (], [J., (, 1986], [(, 1986, )], [1986, ), .]]

>> Noun Phrases are: 
[[10] Hutchins, W. J.]

>> Named Entities are: 
[('10', 'CARDINAL'), ('W. J.', 'PERSON'), ('1986', 'DATE')] 

------------------- Sentence 2 -------------------

Machine translation: past, present, future (p. 66). 


>> Tokens are: 
[Machine, translation, :, past, ,, present, ,, future, (, p., 66, ), .] 

>> PoS Tags are: 
[('Machine', 'NOUN'), ('translation', 'NOUN'), (':', 'PUNCT'), ('past', 'ADJ'), (',', 'PUNCT'), ('present', 'ADJ'), (',', 'PUNCT'), ('future', 'ADJ'), ('(', 'PUNCT'), ('p.', 'NOUN'), ('66', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Machine', 'compound'), ('translation', 'ROOT'), (':', 'punct'), ('past', 'appos'), (',', 'punct'), ('present', 'conj'), (',', 'punct'), ('future', 'conj'), ('(', 'punct'), ('p.', 'appos'), ('66', 'nummod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Machine, translation], [translation, :], [:, past], [past, ,], [,, present], [present, ,], [,, future], [future, (], [(, p.], [p., 66], [66, )], [), .]]

>> Trigrams: 
[[Machine, translation, :], [translation, :, past], [:, past, ,], [past, ,, present], [,, present, ,], [present, ,, future], [,, future, (], [future, (, p.], [(, p., 66], [p., 66, )], [66, ), .]]

>> Noun Phrases are: 
[Machine translation, (p.]

>> Named Entities are: 
[('66', 'CARDINAL')] 

------------------- Sentence 3 -------------------

Chichester:   


>> Tokens are: 
[Chichester, :,  ] 

>> PoS Tags are: 
[('Chichester', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Chichester', 'ROOT'), (':', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Chichester, :], [:,  ]]

>> Trigrams: 
[[Chichester, :,  ]]

>> Noun Phrases are: 
[Chichester]

>> Named Entities are: 
[] 


================================ Paragraph 609 =================================

Ellis Horwood.  

------------------- Sentence 1 -------------------

Ellis Horwood. 


>> Tokens are: 
[Ellis, Horwood, .] 

>> PoS Tags are: 
[('Ellis', 'PROPN'), ('Horwood', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Ellis', 'compound'), ('Horwood', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Ellis, Horwood], [Horwood, .]]

>> Trigrams: 
[[Ellis, Horwood, .]]

>> Noun Phrases are: 
[Ellis Horwood]

>> Named Entities are: 
[('Ellis Horwood', 'PERSON')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 610 =================================

[11] Hutchins, W. J. (Ed.). (2000). Early years in machine translation: memoirs and  

------------------- Sentence 1 -------------------

[11] Hutchins, W. J. (Ed.). 


>> Tokens are: 
[[, 11, ], Hutchins, ,, W., J., (, Ed, ., ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('11', 'NUM'), (']', 'PUNCT'), ('Hutchins', 'PROPN'), (',', 'PUNCT'), ('W.', 'PROPN'), ('J.', 'PROPN'), ('(', 'PUNCT'), ('Ed', 'PROPN'), ('.', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('11', 'dep'), (']', 'dep'), ('Hutchins', 'ROOT'), (',', 'punct'), ('W.', 'compound'), ('J.', 'conj'), ('(', 'punct'), ('Ed', 'appos'), ('.', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 11], [11, ]], [], Hutchins], [Hutchins, ,], [,, W.], [W., J.], [J., (], [(, Ed], [Ed, .], [., )], [), .]]

>> Trigrams: 
[[[, 11, ]], [11, ], Hutchins], [], Hutchins, ,], [Hutchins, ,, W.], [,, W., J.], [W., J., (], [J., (, Ed], [(, Ed, .], [Ed, ., )], [., ), .]]

>> Noun Phrases are: 
[[11] Hutchins, W. J., Ed]

>> Named Entities are: 
[('11', 'CARDINAL'), ('W. J. (Ed', 'PERSON')] 

------------------- Sentence 2 -------------------

(2000). 


>> Tokens are: 
[(, 2000, ), .] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('2000', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('2000', 'ROOT'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[(, 2000], [2000, )], [), .]]

>> Trigrams: 
[[(, 2000, )], [2000, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2000', 'DATE')] 

------------------- Sentence 3 -------------------

Early years in machine translation: memoirs and   


>> Tokens are: 
[Early, years, machine, translation, :, memoirs,  ] 

>> PoS Tags are: 
[('Early', 'ADJ'), ('years', 'NOUN'), ('machine', 'NOUN'), ('translation', 'NOUN'), (':', 'PUNCT'), ('memoirs', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Early', 'amod'), ('years', 'ROOT'), ('machine', 'compound'), ('translation', 'pobj'), (':', 'punct'), ('memoirs', 'appos'), (' ', 'conj')]

>> Bigrams: 
[[Early, years], [years, machine], [machine, translation], [translation, :], [:, memoirs], [memoirs,  ]]

>> Trigrams: 
[[Early, years, machine], [years, machine, translation], [machine, translation, :], [translation, :, memoirs], [:, memoirs,  ]]

>> Noun Phrases are: 
[Early years, machine translation, memoirs]

>> Named Entities are: 
[('Early years', 'DATE')] 


================================ Paragraph 611 =================================

biographies of pioneers (Vol. 97). John Benjamins Publishing.  

------------------- Sentence 1 -------------------

biographies of pioneers (Vol. 97). 


>> Tokens are: 
[biographies, pioneers, (, Vol, ., 97, ), .] 

>> PoS Tags are: 
[('biographies', 'NOUN'), ('pioneers', 'NOUN'), ('(', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT'), ('97', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('biographies', 'ROOT'), ('pioneers', 'pobj'), ('(', 'punct'), ('Vol', 'appos'), ('.', 'punct'), ('97', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[biographies, pioneers], [pioneers, (], [(, Vol], [Vol, .], [., 97], [97, )], [), .]]

>> Trigrams: 
[[biographies, pioneers, (], [pioneers, (, Vol], [(, Vol, .], [Vol, ., 97], [., 97, )], [97, ), .]]

>> Noun Phrases are: 
[biographies, pioneers, Vol]

>> Named Entities are: 
[('97', 'CARDINAL')] 

------------------- Sentence 2 -------------------

John Benjamins Publishing. 


>> Tokens are: 
[John, Benjamins, Publishing, .] 

>> PoS Tags are: 
[('John', 'PROPN'), ('Benjamins', 'PROPN'), ('Publishing', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('John', 'compound'), ('Benjamins', 'compound'), ('Publishing', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[John, Benjamins], [Benjamins, Publishing], [Publishing, .]]

>> Trigrams: 
[[John, Benjamins, Publishing], [Benjamins, Publishing, .]]

>> Noun Phrases are: 
[John Benjamins Publishing]

>> Named Entities are: 
[('John Benjamins Publishing', 'PERSON')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 612 =================================

[12] Green Jr, B. F., Wolf, A. K., Chomsky, C., & Laughery, K. (1961, May). Baseball: an  

------------------- Sentence 1 -------------------

[12] Green Jr, B. F., Wolf, A. K., Chomsky, C., & Laughery, K. (1961, May). 


>> Tokens are: 
[[, 12, ], Green, Jr, ,, B., F., ,, Wolf, ,, A., K., ,, Chomsky, ,, C., ,, &, Laughery, ,, K., (, 1961, ,, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('12', 'NUM'), (']', 'PUNCT'), ('Green', 'PROPN'), ('Jr', 'PROPN'), (',', 'PUNCT'), ('B.', 'PROPN'), ('F.', 'PROPN'), (',', 'PUNCT'), ('Wolf', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('K.', 'PROPN'), (',', 'PUNCT'), ('Chomsky', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Laughery', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), ('(', 'PUNCT'), ('1961', 'NUM'), (',', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('12', 'nummod'), (']', 'punct'), ('Green', 'compound'), ('Jr', 'ROOT'), (',', 'punct'), ('B.', 'compound'), ('F.', 'appos'), (',', 'punct'), ('Wolf', 'npadvmod'), (',', 'punct'), ('A.', 'compound'), ('K.', 'appos'), (',', 'punct'), ('Chomsky', 'conj'), (',', 'punct'), ('C.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Laughery', 'conj'), (',', 'punct'), ('K.', 'conj'), ('(', 'punct'), ('1961', 'appos'), (',', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 12], [12, ]], [], Green], [Green, Jr], [Jr, ,], [,, B.], [B., F.], [F., ,], [,, Wolf], [Wolf, ,], [,, A.], [A., K.], [K., ,], [,, Chomsky], [Chomsky, ,], [,, C.], [C., ,], [,, &], [&, Laughery], [Laughery, ,], [,, K.], [K., (], [(, 1961], [1961, ,], [,, )], [), .]]

>> Trigrams: 
[[[, 12, ]], [12, ], Green], [], Green, Jr], [Green, Jr, ,], [Jr, ,, B.], [,, B., F.], [B., F., ,], [F., ,, Wolf], [,, Wolf, ,], [Wolf, ,, A.], [,, A., K.], [A., K., ,], [K., ,, Chomsky], [,, Chomsky, ,], [Chomsky, ,, C.], [,, C., ,], [C., ,, &], [,, &, Laughery], [&, Laughery, ,], [Laughery, ,, K.], [,, K., (], [K., (, 1961], [(, 1961, ,], [1961, ,, )], [,, ), .]]

>> Noun Phrases are: 
[[12] Green Jr, B. F., , A. K., Chomsky, C., Laughery, K.]

>> Named Entities are: 
[('12', 'CARDINAL'), ('Green Jr', 'PERSON'), ('B. F.', 'PERSON'), ('Wolf', 'PERSON'), ('A. K.', 'PERSON'), ('Chomsky', 'GPE'), ('K.', 'NORP'), ('1961', 'DATE'), ('May', 'DATE')] 

------------------- Sentence 2 -------------------

Baseball: an   


>> Tokens are: 
[Baseball, :,  ] 

>> PoS Tags are: 
[('Baseball', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Baseball', 'ROOT'), (':', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Baseball, :], [:,  ]]

>> Trigrams: 
[[Baseball, :,  ]]

>> Noun Phrases are: 
[Baseball]

>> Named Entities are: 
[] 


================================ Paragraph 613 =================================

automatic question-answerer. In Papers presented at the May 9-11, 1961, western joint IRE- 

------------------- Sentence 1 -------------------

automatic question-answerer. 


>> Tokens are: 
[automatic, question, -, answerer, .] 

>> PoS Tags are: 
[('automatic', 'ADJ'), ('question', 'NOUN'), ('-', 'PUNCT'), ('answerer', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('automatic', 'amod'), ('question', 'compound'), ('-', 'punct'), ('answerer', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[automatic, question], [question, -], [-, answerer], [answerer, .]]

>> Trigrams: 
[[automatic, question, -], [question, -, answerer], [-, answerer, .]]

>> Noun Phrases are: 
[automatic question-answerer]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Papers presented at the May 9-11, 1961, 


>> Tokens are: 
[Papers, presented, 9, -, 11, ,, 1961, ,] 

>> PoS Tags are: 
[('Papers', 'PROPN'), ('presented', 'VERB'), ('9', 'NUM'), ('-', 'SYM'), ('11', 'NUM'), (',', 'PUNCT'), ('1961', 'NUM'), (',', 'PUNCT')] 

>> Dependency Tags are: 
[('Papers', 'pobj'), ('presented', 'acl'), ('9', 'nummod'), ('-', 'punct'), ('11', 'prep'), (',', 'punct'), ('1961', 'nummod'), (',', 'punct')]

>> Bigrams: 
[[Papers, presented], [presented, 9], [9, -], [-, 11], [11, ,], [,, 1961], [1961, ,]]

>> Trigrams: 
[[Papers, presented, 9], [presented, 9, -], [9, -, 11], [-, 11, ,], [11, ,, 1961], [,, 1961, ,]]

>> Noun Phrases are: 
[Papers, the May]

>> Named Entities are: 
[('Papers', 'WORK_OF_ART'), ('May 9-11, 1961', 'DATE')] 

------------------- Sentence 3 -------------------

western joint IRE- 


>> Tokens are: 
[western, joint, IRE-] 

>> PoS Tags are: 
[('western', 'ADJ'), ('joint', 'ADJ'), ('IRE-', 'NUM')] 

>> Dependency Tags are: 
[('western', 'amod'), ('joint', 'amod'), ('IRE-', 'ROOT')]

>> Bigrams: 
[[western, joint], [joint, IRE-]]

>> Trigrams: 
[[western, joint, IRE-]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 614 =================================

AIEE-ACM computer conference (pp. 219-224). ACM.  

------------------- Sentence 1 -------------------

AIEE-ACM computer conference (pp. 


>> Tokens are: 
[AIEE, -, ACM, computer, conference, (, pp, .] 

>> PoS Tags are: 
[('AIEE', 'PROPN'), ('-', 'PUNCT'), ('ACM', 'PROPN'), ('computer', 'NOUN'), ('conference', 'NOUN'), ('(', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('AIEE', 'compound'), ('-', 'punct'), ('ACM', 'compound'), ('computer', 'compound'), ('conference', 'ROOT'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[AIEE, -], [-, ACM], [ACM, computer], [computer, conference], [conference, (], [(, pp], [pp, .]]

>> Trigrams: 
[[AIEE, -, ACM], [-, ACM, computer], [ACM, computer, conference], [computer, conference, (], [conference, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[AIEE-ACM computer conference, pp]

>> Named Entities are: 
[('AIEE', 'ORG'), ('ACM', 'ORG')] 

------------------- Sentence 2 -------------------

219-224). 


>> Tokens are: 
[219, -, 224, ), .] 

>> PoS Tags are: 
[('219', 'NUM'), ('-', 'SYM'), ('224', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('219', 'ROOT'), ('-', 'punct'), ('224', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[219, -], [-, 224], [224, )], [), .]]

>> Trigrams: 
[[219, -, 224], [-, 224, )], [224, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('219', 'CARDINAL')] 

------------------- Sentence 3 -------------------

ACM. 


>> Tokens are: 
[ACM, .] 

>> PoS Tags are: 
[('ACM', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ACM', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[ACM, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[ACM]

>> Named Entities are: 
[('ACM', 'ORG')] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 615 =================================

[13] Woods, W. A. (1978). Semantics and quantification in natural language question  

------------------- Sentence 1 -------------------

[13] Woods, W. A. (1978). 


>> Tokens are: 
[[, 13, ], Woods, ,, W., A., (, 1978, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('13', 'NUM'), (']', 'PUNCT'), ('Woods', 'PROPN'), (',', 'PUNCT'), ('W.', 'PROPN'), ('A.', 'PROPN'), ('(', 'PUNCT'), ('1978', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('13', 'nummod'), (']', 'punct'), ('Woods', 'ROOT'), (',', 'punct'), ('W.', 'compound'), ('A.', 'conj'), ('(', 'punct'), ('1978', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 13], [13, ]], [], Woods], [Woods, ,], [,, W.], [W., A.], [A., (], [(, 1978], [1978, )], [), .]]

>> Trigrams: 
[[[, 13, ]], [13, ], Woods], [], Woods, ,], [Woods, ,, W.], [,, W., A.], [W., A., (], [A., (, 1978], [(, 1978, )], [1978, ), .]]

>> Noun Phrases are: 
[[13] Woods, W. A.]

>> Named Entities are: 
[('13', 'CARDINAL'), ('W. A.', 'PERSON'), ('1978', 'DATE')] 

------------------- Sentence 2 -------------------

Semantics and quantification in natural language question   


>> Tokens are: 
[Semantics, quantification, natural, language, question,  ] 

>> PoS Tags are: 
[('Semantics', 'NOUN'), ('quantification', 'NOUN'), ('natural', 'ADJ'), ('language', 'NOUN'), ('question', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Semantics', 'ROOT'), ('quantification', 'conj'), ('natural', 'amod'), ('language', 'compound'), ('question', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Semantics, quantification], [quantification, natural], [natural, language], [language, question], [question,  ]]

>> Trigrams: 
[[Semantics, quantification, natural], [quantification, natural, language], [natural, language, question], [language, question,  ]]

>> Noun Phrases are: 
[Semantics, quantification, natural language question]

>> Named Entities are: 
[] 


================================ Paragraph 616 =================================

answering. Advances in computers, 17, 1-87.  

------------------- Sentence 1 -------------------

answering. 


>> Tokens are: 
[answering, .] 

>> PoS Tags are: 
[('answering', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('answering', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[answering, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Advances in computers, 17, 1-87. 


>> Tokens are: 
[Advances, computers, ,, 17, ,, 1, -, 87, .] 

>> PoS Tags are: 
[('Advances', 'NOUN'), ('computers', 'NOUN'), (',', 'PUNCT'), ('17', 'NUM'), (',', 'PUNCT'), ('1', 'NUM'), ('-', 'SYM'), ('87', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Advances', 'ROOT'), ('computers', 'pobj'), (',', 'punct'), ('17', 'appos'), (',', 'punct'), ('1', 'appos'), ('-', 'punct'), ('87', 'prep'), ('.', 'punct')]

>> Bigrams: 
[[Advances, computers], [computers, ,], [,, 17], [17, ,], [,, 1], [1, -], [-, 87], [87, .]]

>> Trigrams: 
[[Advances, computers, ,], [computers, ,, 17], [,, 17, ,], [17, ,, 1], [,, 1, -], [1, -, 87], [-, 87, .]]

>> Noun Phrases are: 
[Advances, computers]

>> Named Entities are: 
[('17', 'CARDINAL'), ('1-87', 'DATE')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 617 =================================

[14] Hendrix, G. G., Sacerdoti, E. D., Sagalowicz, D., & Slocum, J. (1978). Developing a  

------------------- Sentence 1 -------------------

[14] Hendrix, G. G., Sacerdoti, E. D., Sagalowicz, D., & Slocum, J. (1978). 


>> Tokens are: 
[[, 14, ], Hendrix, ,, G., G., ,, Sacerdoti, ,, E., D., ,, Sagalowicz, ,, D., ,, &, Slocum, ,, J., (, 1978, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('14', 'NUM'), (']', 'PUNCT'), ('Hendrix', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('G.', 'PROPN'), (',', 'PUNCT'), ('Sacerdoti', 'PROPN'), (',', 'PUNCT'), ('E.', 'PROPN'), ('D.', 'PROPN'), (',', 'PUNCT'), ('Sagalowicz', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Slocum', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('(', 'PUNCT'), ('1978', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('14', 'nmod'), (']', 'punct'), ('Hendrix', 'ROOT'), (',', 'punct'), ('G.', 'compound'), ('G.', 'appos'), (',', 'punct'), ('Sacerdoti', 'conj'), (',', 'punct'), ('E.', 'compound'), ('D.', 'conj'), (',', 'punct'), ('Sagalowicz', 'conj'), (',', 'punct'), ('D.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Slocum', 'conj'), (',', 'punct'), ('J.', 'conj'), ('(', 'punct'), ('1978', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 14], [14, ]], [], Hendrix], [Hendrix, ,], [,, G.], [G., G.], [G., ,], [,, Sacerdoti], [Sacerdoti, ,], [,, E.], [E., D.], [D., ,], [,, Sagalowicz], [Sagalowicz, ,], [,, D.], [D., ,], [,, &], [&, Slocum], [Slocum, ,], [,, J.], [J., (], [(, 1978], [1978, )], [), .]]

>> Trigrams: 
[[[, 14, ]], [14, ], Hendrix], [], Hendrix, ,], [Hendrix, ,, G.], [,, G., G.], [G., G., ,], [G., ,, Sacerdoti], [,, Sacerdoti, ,], [Sacerdoti, ,, E.], [,, E., D.], [E., D., ,], [D., ,, Sagalowicz], [,, Sagalowicz, ,], [Sagalowicz, ,, D.], [,, D., ,], [D., ,, &], [,, &, Slocum], [&, Slocum, ,], [Slocum, ,, J.], [,, J., (], [J., (, 1978], [(, 1978, )], [1978, ), .]]

>> Noun Phrases are: 
[[14] Hendrix, G. G., Sacerdoti, E. D., Sagalowicz, D., Slocum, J.]

>> Named Entities are: 
[('14', 'CARDINAL'), ('G. G.', 'PERSON'), ('Sacerdoti', 'ORG'), ('E. D.', 'NORP'), ('Sagalowicz', 'ORG'), ('D.', 'NORP'), ('J.', 'ORG'), ('1978', 'DATE')] 

------------------- Sentence 2 -------------------

Developing a   


>> Tokens are: 
[Developing,  ] 

>> PoS Tags are: 
[('Developing', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Developing', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[Developing,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 618 =================================

natural language interface to complex data. ACM Transactions on Database Systems  

------------------- Sentence 1 -------------------

natural language interface to complex data. 


>> Tokens are: 
[natural, language, interface, complex, data, .] 

>> PoS Tags are: 
[('natural', 'ADJ'), ('language', 'NOUN'), ('interface', 'NOUN'), ('complex', 'ADJ'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('natural', 'amod'), ('language', 'compound'), ('interface', 'ROOT'), ('complex', 'amod'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[natural, language], [language, interface], [interface, complex], [complex, data], [data, .]]

>> Trigrams: 
[[natural, language, interface], [language, interface, complex], [interface, complex, data], [complex, data, .]]

>> Noun Phrases are: 
[natural language interface, complex data]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

ACM Transactions on Database Systems   


>> Tokens are: 
[ACM, Transactions, Database, Systems,  ] 

>> PoS Tags are: 
[('ACM', 'PROPN'), ('Transactions', 'PROPN'), ('Database', 'PROPN'), ('Systems', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('ACM', 'compound'), ('Transactions', 'ROOT'), ('Database', 'compound'), ('Systems', 'compound'), (' ', 'pobj')]

>> Bigrams: 
[[ACM, Transactions], [Transactions, Database], [Database, Systems], [Systems,  ]]

>> Trigrams: 
[[ACM, Transactions, Database], [Transactions, Database, Systems], [Database, Systems,  ]]

>> Noun Phrases are: 
[ACM Transactions]

>> Named Entities are: 
[('ACM Transactions', 'ORG')] 


================================ Paragraph 619 =================================

(TODS), 3(2), 105-147.  

------------------- Sentence 1 -------------------

(TODS), 3(2), 105-147. 


>> Tokens are: 
[(, TODS, ), ,, 3(2, ), ,, 105, -, 147, .] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('TODS', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('3(2', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('105', 'NUM'), ('-', 'SYM'), ('147', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('TODS', 'ROOT'), (')', 'punct'), (',', 'punct'), ('3(2', 'appos'), (')', 'punct'), (',', 'punct'), ('105', 'appos'), ('-', 'punct'), ('147', 'prep'), ('.', 'punct')]

>> Bigrams: 
[[(, TODS], [TODS, )], [), ,], [,, 3(2], [3(2, )], [), ,], [,, 105], [105, -], [-, 147], [147, .]]

>> Trigrams: 
[[(, TODS, )], [TODS, ), ,], [), ,, 3(2], [,, 3(2, )], [3(2, ), ,], [), ,, 105], [,, 105, -], [105, -, 147], [-, 147, .]]

>> Noun Phrases are: 
[(TODS]

>> Named Entities are: 
[('3(2', 'CARDINAL'), ('105-147', 'CARDINAL')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 620 =================================

[15] Alshawi, H. (1992). The core language engine. MIT press.  

------------------- Sentence 1 -------------------

[15] Alshawi, H. (1992). 


>> Tokens are: 
[[, 15, ], Alshawi, ,, H., (, 1992, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('15', 'NUM'), (']', 'PUNCT'), ('Alshawi', 'PROPN'), (',', 'PUNCT'), ('H.', 'PROPN'), ('(', 'PUNCT'), ('1992', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('15', 'dep'), (']', 'punct'), ('Alshawi', 'ROOT'), (',', 'punct'), ('H.', 'npadvmod'), ('(', 'punct'), ('1992', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 15], [15, ]], [], Alshawi], [Alshawi, ,], [,, H.], [H., (], [(, 1992], [1992, )], [), .]]

>> Trigrams: 
[[[, 15, ]], [15, ], Alshawi], [], Alshawi, ,], [Alshawi, ,, H.], [,, H., (], [H., (, 1992], [(, 1992, )], [1992, ), .]]

>> Noun Phrases are: 
[[15] Alshawi]

>> Named Entities are: 
[('15', 'CARDINAL'), ('1992', 'DATE')] 

------------------- Sentence 2 -------------------

The core language engine. 


>> Tokens are: 
[core, language, engine, .] 

>> PoS Tags are: 
[('core', 'NOUN'), ('language', 'NOUN'), ('engine', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('core', 'compound'), ('language', 'compound'), ('engine', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[core, language], [language, engine], [engine, .]]

>> Trigrams: 
[[core, language, engine], [language, engine, .]]

>> Noun Phrases are: 
[The core language engine]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

MIT press. 


>> Tokens are: 
[MIT, press, .] 

>> PoS Tags are: 
[('MIT', 'PROPN'), ('press', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('MIT', 'compound'), ('press', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[MIT, press], [press, .]]

>> Trigrams: 
[[MIT, press, .]]

>> Noun Phrases are: 
[MIT press]

>> Named Entities are: 
[('MIT', 'ORG')] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 621 =================================

[16] Kamp, H., & Reyle, U. (1993). Tense and Aspect. In From Discourse to Logic (pp. 483- 

------------------- Sentence 1 -------------------

[16] Kamp, H., & Reyle, U. (1993). 


>> Tokens are: 
[[, 16, ], Kamp, ,, H., ,, &, Reyle, ,, U., (, 1993, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('16', 'NUM'), (']', 'PUNCT'), ('Kamp', 'PROPN'), (',', 'PUNCT'), ('H.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Reyle', 'PROPN'), (',', 'PUNCT'), ('U.', 'PROPN'), ('(', 'PUNCT'), ('1993', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('16', 'nummod'), (']', 'punct'), ('Kamp', 'ROOT'), (',', 'punct'), ('H.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Reyle', 'conj'), (',', 'punct'), ('U.', 'conj'), ('(', 'punct'), ('1993', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 16], [16, ]], [], Kamp], [Kamp, ,], [,, H.], [H., ,], [,, &], [&, Reyle], [Reyle, ,], [,, U.], [U., (], [(, 1993], [1993, )], [), .]]

>> Trigrams: 
[[[, 16, ]], [16, ], Kamp], [], Kamp, ,], [Kamp, ,, H.], [,, H., ,], [H., ,, &], [,, &, Reyle], [&, Reyle, ,], [Reyle, ,, U.], [,, U., (], [U., (, 1993], [(, 1993, )], [1993, ), .]]

>> Noun Phrases are: 
[[16] Kamp, H., Reyle, U.]

>> Named Entities are: 
[('16', 'CARDINAL'), ('1993', 'DATE')] 

------------------- Sentence 2 -------------------

Tense and Aspect. 


>> Tokens are: 
[Tense, Aspect, .] 

>> PoS Tags are: 
[('Tense', 'ADJ'), ('Aspect', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Tense', 'ROOT'), ('Aspect', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Tense, Aspect], [Aspect, .]]

>> Trigrams: 
[[Tense, Aspect, .]]

>> Noun Phrases are: 
[Aspect]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

In From Discourse to Logic (pp. 


>> Tokens are: 
[Discourse, Logic, (, pp, .] 

>> PoS Tags are: 
[('Discourse', 'PROPN'), ('Logic', 'PROPN'), ('(', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Discourse', 'pobj'), ('Logic', 'pobj'), ('(', 'punct'), ('pp', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Discourse, Logic], [Logic, (], [(, pp], [pp, .]]

>> Trigrams: 
[[Discourse, Logic, (], [Logic, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[Discourse, Logic]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

483- 


>> Tokens are: 
[483-] 

>> PoS Tags are: 
[('483-', 'NUM')] 

>> Dependency Tags are: 
[('483-', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 622 =================================

689). Springer Netherlands.  

------------------- Sentence 1 -------------------

689). 


>> Tokens are: 
[689, ), .] 

>> PoS Tags are: 
[('689', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('689', 'ROOT'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[689, )], [), .]]

>> Trigrams: 
[[689, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('689', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Springer Netherlands. 


>> Tokens are: 
[Springer, Netherlands, .] 

>> PoS Tags are: 
[('Springer', 'PROPN'), ('Netherlands', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Springer', 'compound'), ('Netherlands', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Springer, Netherlands], [Netherlands, .]]

>> Trigrams: 
[[Springer, Netherlands, .]]

>> Noun Phrases are: 
[Springer Netherlands]

>> Named Entities are: 
[('Springer Netherlands', 'PERSON')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 623 =================================

[17] Lea , W.A Trends in speech recognition , Englewoods Cliffs , NJ: Prentice Hall , 1980.  

------------------- Sentence 1 -------------------

[17] Lea , W.A Trends in speech recognition , Englewoods Cliffs , NJ: Prentice Hall , 1980. 


>> Tokens are: 
[[, 17, ], Lea, ,, W.A, Trends, speech, recognition, ,, Englewoods, Cliffs, ,, NJ, :, Prentice, Hall, ,, 1980, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('17', 'NUM'), (']', 'PUNCT'), ('Lea', 'PROPN'), (',', 'PUNCT'), ('W.A', 'PROPN'), ('Trends', 'PROPN'), ('speech', 'NOUN'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('Englewoods', 'PROPN'), ('Cliffs', 'PROPN'), (',', 'PUNCT'), ('NJ', 'PROPN'), (':', 'PUNCT'), ('Prentice', 'PROPN'), ('Hall', 'PROPN'), (',', 'PUNCT'), ('1980', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('17', 'dep'), (']', 'punct'), ('Lea', 'npadvmod'), (',', 'punct'), ('W.A', 'compound'), ('Trends', 'ROOT'), ('speech', 'compound'), ('recognition', 'pobj'), (',', 'punct'), ('Englewoods', 'compound'), ('Cliffs', 'conj'), (',', 'punct'), ('NJ', 'appos'), (':', 'punct'), ('Prentice', 'compound'), ('Hall', 'appos'), (',', 'punct'), ('1980', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 17], [17, ]], [], Lea], [Lea, ,], [,, W.A], [W.A, Trends], [Trends, speech], [speech, recognition], [recognition, ,], [,, Englewoods], [Englewoods, Cliffs], [Cliffs, ,], [,, NJ], [NJ, :], [:, Prentice], [Prentice, Hall], [Hall, ,], [,, 1980], [1980, .]]

>> Trigrams: 
[[[, 17, ]], [17, ], Lea], [], Lea, ,], [Lea, ,, W.A], [,, W.A, Trends], [W.A, Trends, speech], [Trends, speech, recognition], [speech, recognition, ,], [recognition, ,, Englewoods], [,, Englewoods, Cliffs], [Englewoods, Cliffs, ,], [Cliffs, ,, NJ], [,, NJ, :], [NJ, :, Prentice], [:, Prentice, Hall], [Prentice, Hall, ,], [Hall, ,, 1980], [,, 1980, .]]

>> Noun Phrases are: 
[[17] Lea , W.A Trends, speech recognition, Englewoods Cliffs, NJ, Prentice Hall]

>> Named Entities are: 
[('17', 'CARDINAL'), ('Lea', 'PERSON'), ('Englewoods Cliffs', 'PERSON'), ('Prentice Hall', 'ORG'), ('1980', 'DATE')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 624 =================================

[18] Young, S. J., & Chase, L. L. (1998). Speech recognition evaluation: a review of the US  

------------------- Sentence 1 -------------------

[18] 


>> Tokens are: 
[[, 18, ]] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('18', 'NUM'), (']', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('18', 'ROOT'), (']', 'punct')]

>> Bigrams: 
[[[, 18], [18, ]]]

>> Trigrams: 
[[[, 18, ]]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('18', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Young, S. J., & Chase, L. L. (1998). 


>> Tokens are: 
[Young, ,, S., J., ,, &, Chase, ,, L., L., (, 1998, ), .] 

>> PoS Tags are: 
[('Young', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('J.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Chase', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('L.', 'PROPN'), ('(', 'PUNCT'), ('1998', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Young', 'ROOT'), (',', 'punct'), ('S.', 'compound'), ('J.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Chase', 'conj'), (',', 'punct'), ('L.', 'compound'), ('L.', 'conj'), ('(', 'punct'), ('1998', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Young, ,], [,, S.], [S., J.], [J., ,], [,, &], [&, Chase], [Chase, ,], [,, L.], [L., L.], [L., (], [(, 1998], [1998, )], [), .]]

>> Trigrams: 
[[Young, ,, S.], [,, S., J.], [S., J., ,], [J., ,, &], [,, &, Chase], [&, Chase, ,], [Chase, ,, L.], [,, L., L.], [L., L., (], [L., (, 1998], [(, 1998, )], [1998, ), .]]

>> Noun Phrases are: 
[Young, S. J., Chase, L. L.]

>> Named Entities are: 
[('S. J., & Chase', 'PERSON'), ('L. L.', 'PERSON'), ('1998', 'DATE')] 

------------------- Sentence 3 -------------------

Speech recognition evaluation: a review of the US   


>> Tokens are: 
[Speech, recognition, evaluation, :, review,  ] 

>> PoS Tags are: 
[('Speech', 'NOUN'), ('recognition', 'NOUN'), ('evaluation', 'NOUN'), (':', 'PUNCT'), ('review', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Speech', 'compound'), ('recognition', 'compound'), ('evaluation', 'ROOT'), (':', 'punct'), ('review', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[Speech, recognition], [recognition, evaluation], [evaluation, :], [:, review], [review,  ]]

>> Trigrams: 
[[Speech, recognition, evaluation], [recognition, evaluation, :], [evaluation, :, review], [:, review,  ]]

>> Noun Phrases are: 
[Speech recognition evaluation, a review, the US]

>> Named Entities are: 
[('US', 'GPE')] 


================================ Paragraph 625 =================================

CSR and LVCSR programmes. Computer Speech & Language, 12(4), 263-279.  

------------------- Sentence 1 -------------------

CSR and LVCSR programmes. 


>> Tokens are: 
[CSR, LVCSR, programmes, .] 

>> PoS Tags are: 
[('CSR', 'PROPN'), ('LVCSR', 'PROPN'), ('programmes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('CSR', 'ROOT'), ('LVCSR', 'compound'), ('programmes', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[CSR, LVCSR], [LVCSR, programmes], [programmes, .]]

>> Trigrams: 
[[CSR, LVCSR, programmes], [LVCSR, programmes, .]]

>> Noun Phrases are: 
[CSR, LVCSR programmes]

>> Named Entities are: 
[('CSR', 'ORG'), ('LVCSR', 'PERSON')] 

------------------- Sentence 2 -------------------

Computer Speech & Language, 12(4), 263-279. 


>> Tokens are: 
[Computer, Speech, &, Language, ,, 12(4, ), ,, 263, -, 279, .] 

>> PoS Tags are: 
[('Computer', 'PROPN'), ('Speech', 'PROPN'), ('&', 'CCONJ'), ('Language', 'PROPN'), (',', 'PUNCT'), ('12(4', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('263', 'NUM'), ('-', 'SYM'), ('279', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Computer', 'compound'), ('Speech', 'ROOT'), ('&', 'cc'), ('Language', 'conj'), (',', 'punct'), ('12(4', 'appos'), (')', 'punct'), (',', 'punct'), ('263', 'appos'), ('-', 'punct'), ('279', 'prep'), ('.', 'punct')]

>> Bigrams: 
[[Computer, Speech], [Speech, &], [&, Language], [Language, ,], [,, 12(4], [12(4, )], [), ,], [,, 263], [263, -], [-, 279], [279, .]]

>> Trigrams: 
[[Computer, Speech, &], [Speech, &, Language], [&, Language, ,], [Language, ,, 12(4], [,, 12(4, )], [12(4, ), ,], [), ,, 263], [,, 263, -], [263, -, 279], [-, 279, .]]

>> Noun Phrases are: 
[Computer Speech, Language, 12(4]

>> Named Entities are: 
[('Computer Speech & Language', 'ORG'), ('12(4', 'CARDINAL'), ('263', 'CARDINAL')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 626 =================================

[19] Sundheim, B. M., & Chinchor, N. A. (1993, March). Survey of the message  

------------------- Sentence 1 -------------------

[19] Sundheim, B. M., & Chinchor, N. A. (1993, March). 


>> Tokens are: 
[[, 19, ], Sundheim, ,, B., M., ,, &, Chinchor, ,, N., A., (, 1993, ,, March, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('19', 'NUM'), (']', 'PUNCT'), ('Sundheim', 'PROPN'), (',', 'PUNCT'), ('B.', 'PROPN'), ('M.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Chinchor', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), ('A.', 'NOUN'), ('(', 'PUNCT'), ('1993', 'NUM'), (',', 'PUNCT'), ('March', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('19', 'nummod'), (']', 'punct'), ('Sundheim', 'ROOT'), (',', 'punct'), ('B.', 'compound'), ('M.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Chinchor', 'conj'), (',', 'punct'), ('N.', 'compound'), ('A.', 'conj'), ('(', 'punct'), ('1993', 'appos'), (',', 'punct'), ('March', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 19], [19, ]], [], Sundheim], [Sundheim, ,], [,, B.], [B., M.], [M., ,], [,, &], [&, Chinchor], [Chinchor, ,], [,, N.], [N., A.], [A., (], [(, 1993], [1993, ,], [,, March], [March, )], [), .]]

>> Trigrams: 
[[[, 19, ]], [19, ], Sundheim], [], Sundheim, ,], [Sundheim, ,, B.], [,, B., M.], [B., M., ,], [M., ,, &], [,, &, Chinchor], [&, Chinchor, ,], [Chinchor, ,, N.], [,, N., A.], [N., A., (], [A., (, 1993], [(, 1993, ,], [1993, ,, March], [,, March, )], [March, ), .]]

>> Noun Phrases are: 
[[19] Sundheim, B. M., Chinchor, N. A.]

>> Named Entities are: 
[('19', 'CARDINAL'), ('Sundheim', 'GPE'), ('B. M.,', 'PERSON'), ('& Chinchor', 'ORG'), ('N. A.', 'PERSON'), ('1993', 'DATE'), ('March', 'DATE')] 

------------------- Sentence 2 -------------------

Survey of the message   


>> Tokens are: 
[Survey, message,  ] 

>> PoS Tags are: 
[('Survey', 'NOUN'), ('message', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Survey', 'ROOT'), ('message', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Survey, message], [message,  ]]

>> Trigrams: 
[[Survey, message,  ]]

>> Noun Phrases are: 
[Survey, the message]

>> Named Entities are: 
[] 


================================ Paragraph 627 =================================

understanding conferences. In Proceedings of the workshop on Human Language  

------------------- Sentence 1 -------------------

understanding conferences. 


>> Tokens are: 
[understanding, conferences, .] 

>> PoS Tags are: 
[('understanding', 'VERB'), ('conferences', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('understanding', 'ROOT'), ('conferences', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[understanding, conferences], [conferences, .]]

>> Trigrams: 
[[understanding, conferences, .]]

>> Noun Phrases are: 
[conferences]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Proceedings of the workshop on Human Language   


>> Tokens are: 
[Proceedings, workshop, Human, Language,  ] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('workshop', 'NOUN'), ('Human', 'PROPN'), ('Language', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('workshop', 'pobj'), ('Human', 'compound'), ('Language', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Proceedings, workshop], [workshop, Human], [Human, Language], [Language,  ]]

>> Trigrams: 
[[Proceedings, workshop, Human], [workshop, Human, Language], [Human, Language,  ]]

>> Noun Phrases are: 
[Proceedings, the workshop, Human Language]

>> Named Entities are: 
[('Proceedings', 'GPE'), ('Human Language', 'WORK_OF_ART')] 


================================ Paragraph 628 =================================

Technology (pp. 56-60). Association for Computational Linguistics. 

------------------- Sentence 1 -------------------

Technology (pp. 


>> Tokens are: 
[Technology, (, pp, .] 

>> PoS Tags are: 
[('Technology', 'NOUN'), ('(', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Technology', 'ROOT'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Technology, (], [(, pp], [pp, .]]

>> Trigrams: 
[[Technology, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[Technology, (pp]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

56-60). 


>> Tokens are: 
[56, -, 60, ), .] 

>> PoS Tags are: 
[('56', 'NUM'), ('-', 'SYM'), ('60', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('56', 'ROOT'), ('-', 'punct'), ('60', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[56, -], [-, 60], [60, )], [), .]]

>> Trigrams: 
[[56, -, 60], [-, 60, )], [60, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('56-60', 'DATE')] 

------------------- Sentence 3 -------------------

Association for Computational Linguistics. 


>> Tokens are: 
[Association, Computational, Linguistics, .] 

>> PoS Tags are: 
[('Association', 'PROPN'), ('Computational', 'PROPN'), ('Linguistics', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Association', 'ROOT'), ('Computational', 'compound'), ('Linguistics', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Association, Computational], [Computational, Linguistics], [Linguistics, .]]

>> Trigrams: 
[[Association, Computational, Linguistics], [Computational, Linguistics, .]]

>> Noun Phrases are: 
[Association, Computational Linguistics]

>> Named Entities are: 
[] 


================================ Paragraph 629 =================================

[20] Wahlster, W., & Kobsa, A. (1989). User models in dialog systems. In User models in  

------------------- Sentence 1 -------------------

[20] Wahlster, W., & Kobsa, A. (1989). 


>> Tokens are: 
[[, 20, ], Wahlster, ,, W., ,, &, Kobsa, ,, A., (, 1989, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('20', 'NUM'), (']', 'PUNCT'), ('Wahlster', 'PROPN'), (',', 'PUNCT'), ('W.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Kobsa', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('(', 'PUNCT'), ('1989', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('20', 'nummod'), (']', 'punct'), ('Wahlster', 'ROOT'), (',', 'punct'), ('W.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Kobsa', 'conj'), (',', 'punct'), ('A.', 'dobj'), ('(', 'punct'), ('1989', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 20], [20, ]], [], Wahlster], [Wahlster, ,], [,, W.], [W., ,], [,, &], [&, Kobsa], [Kobsa, ,], [,, A.], [A., (], [(, 1989], [1989, )], [), .]]

>> Trigrams: 
[[[, 20, ]], [20, ], Wahlster], [], Wahlster, ,], [Wahlster, ,, W.], [,, W., ,], [W., ,, &], [,, &, Kobsa], [&, Kobsa, ,], [Kobsa, ,, A.], [,, A., (], [A., (, 1989], [(, 1989, )], [1989, ), .]]

>> Noun Phrases are: 
[[20] Wahlster, W., Kobsa, A.]

>> Named Entities are: 
[('20', 'CARDINAL'), ('A.', 'ORG'), ('1989', 'DATE')] 

------------------- Sentence 2 -------------------

User models in dialog systems. 


>> Tokens are: 
[User, models, dialog, systems, .] 

>> PoS Tags are: 
[('User', 'NOUN'), ('models', 'NOUN'), ('dialog', 'NOUN'), ('systems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('User', 'compound'), ('models', 'ROOT'), ('dialog', 'compound'), ('systems', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[User, models], [models, dialog], [dialog, systems], [systems, .]]

>> Trigrams: 
[[User, models, dialog], [models, dialog, systems], [dialog, systems, .]]

>> Noun Phrases are: 
[User models, dialog systems]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

In User models in   


>> Tokens are: 
[User, models,  ] 

>> PoS Tags are: 
[('User', 'PROPN'), ('models', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('User', 'compound'), ('models', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[User, models], [models,  ]]

>> Trigrams: 
[[User, models,  ]]

>> Noun Phrases are: 
[User models]

>> Named Entities are: 
[('User', 'ORG')] 


================================ Paragraph 630 =================================

dialog systems (pp. 4-34). Springer Berlin Heidelberg.  

------------------- Sentence 1 -------------------

dialog systems (pp. 


>> Tokens are: 
[dialog, systems, (, pp, .] 

>> PoS Tags are: 
[('dialog', 'NOUN'), ('systems', 'NOUN'), ('(', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('dialog', 'compound'), ('systems', 'ROOT'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[dialog, systems], [systems, (], [(, pp], [pp, .]]

>> Trigrams: 
[[dialog, systems, (], [systems, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[dialog systems, pp]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

4-34). 


>> Tokens are: 
[4, -, 34, ), .] 

>> PoS Tags are: 
[('4', 'NUM'), ('-', 'SYM'), ('34', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('4', 'ROOT'), ('-', 'punct'), ('34', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[4, -], [-, 34], [34, )], [), .]]

>> Trigrams: 
[[4, -, 34], [-, 34, )], [34, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('4', 'CARDINAL')] 

------------------- Sentence 3 -------------------

Springer Berlin Heidelberg. 


>> Tokens are: 
[Springer, Berlin, Heidelberg, .] 

>> PoS Tags are: 
[('Springer', 'PROPN'), ('Berlin', 'PROPN'), ('Heidelberg', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Springer', 'compound'), ('Berlin', 'compound'), ('Heidelberg', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Springer, Berlin], [Berlin, Heidelberg], [Heidelberg, .]]

>> Trigrams: 
[[Springer, Berlin, Heidelberg], [Berlin, Heidelberg, .]]

>> Noun Phrases are: 
[Springer Berlin Heidelberg]

>> Named Entities are: 
[('Berlin Heidelberg', 'PERSON')] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 631 =================================

[21] McKeown, K.R. Text generation , Cambridge: Cambridge University Press , 1985.  

------------------- Sentence 1 -------------------

[21] McKeown, K.R. Text generation , Cambridge: Cambridge University Press , 1985. 


>> Tokens are: 
[[, 21, ], McKeown, ,, K.R., Text, generation, ,, Cambridge, :, Cambridge, University, Press, ,, 1985, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('21', 'NUM'), (']', 'PUNCT'), ('McKeown', 'PROPN'), (',', 'PUNCT'), ('K.R.', 'PROPN'), ('Text', 'PROPN'), ('generation', 'NOUN'), (',', 'PUNCT'), ('Cambridge', 'PROPN'), (':', 'PUNCT'), ('Cambridge', 'PROPN'), ('University', 'PROPN'), ('Press', 'PROPN'), (',', 'PUNCT'), ('1985', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('21', 'nummod'), (']', 'dep'), ('McKeown', 'nmod'), (',', 'punct'), ('K.R.', 'compound'), ('Text', 'compound'), ('generation', 'dep'), (',', 'punct'), ('Cambridge', 'ROOT'), (':', 'punct'), ('Cambridge', 'compound'), ('University', 'compound'), ('Press', 'appos'), (',', 'punct'), ('1985', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 21], [21, ]], [], McKeown], [McKeown, ,], [,, K.R.], [K.R., Text], [Text, generation], [generation, ,], [,, Cambridge], [Cambridge, :], [:, Cambridge], [Cambridge, University], [University, Press], [Press, ,], [,, 1985], [1985, .]]

>> Trigrams: 
[[[, 21, ]], [21, ], McKeown], [], McKeown, ,], [McKeown, ,, K.R.], [,, K.R., Text], [K.R., Text, generation], [Text, generation, ,], [generation, ,, Cambridge], [,, Cambridge, :], [Cambridge, :, Cambridge], [:, Cambridge, University], [Cambridge, University, Press], [University, Press, ,], [Press, ,, 1985], [,, 1985, .]]

>> Noun Phrases are: 
[[21] McKeown, K.R. Text generation , Cambridge, Cambridge University Press]

>> Named Entities are: 
[('21', 'CARDINAL'), ('K.R.', 'GPE'), ('Cambridge', 'GPE'), ('Cambridge University Press', 'ORG'), ('1985', 'DATE')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 632 =================================

[22] Small S.L., Cortell G.W., and Tanenhaus , M.K. Lexical Ambiguity Resolutions , San  

------------------- Sentence 1 -------------------

[22] Small S.L., Cortell G.W., and Tanenhaus , M.K. Lexical Ambiguity Resolutions , San   


>> Tokens are: 
[[, 22, ], Small, S.L., ,, Cortell, G.W., ,, Tanenhaus, ,, M.K., Lexical, Ambiguity, Resolutions, ,, San,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('22', 'NUM'), (']', 'PUNCT'), ('Small', 'ADJ'), ('S.L.', 'PROPN'), (',', 'PUNCT'), ('Cortell', 'PROPN'), ('G.W.', 'PROPN'), (',', 'PUNCT'), ('Tanenhaus', 'PROPN'), (',', 'PUNCT'), ('M.K.', 'PROPN'), ('Lexical', 'PROPN'), ('Ambiguity', 'PROPN'), ('Resolutions', 'PROPN'), (',', 'PUNCT'), ('San', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('22', 'nummod'), (']', 'punct'), ('Small', 'amod'), ('S.L.', 'ROOT'), (',', 'punct'), ('Cortell', 'compound'), ('G.W.', 'conj'), (',', 'punct'), ('Tanenhaus', 'conj'), (',', 'punct'), ('M.K.', 'compound'), ('Lexical', 'compound'), ('Ambiguity', 'compound'), ('Resolutions', 'appos'), (',', 'punct'), ('San', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[[, 22], [22, ]], [], Small], [Small, S.L.], [S.L., ,], [,, Cortell], [Cortell, G.W.], [G.W., ,], [,, Tanenhaus], [Tanenhaus, ,], [,, M.K.], [M.K., Lexical], [Lexical, Ambiguity], [Ambiguity, Resolutions], [Resolutions, ,], [,, San], [San,  ]]

>> Trigrams: 
[[[, 22, ]], [22, ], Small], [], Small, S.L.], [Small, S.L., ,], [S.L., ,, Cortell], [,, Cortell, G.W.], [Cortell, G.W., ,], [G.W., ,, Tanenhaus], [,, Tanenhaus, ,], [Tanenhaus, ,, M.K.], [,, M.K., Lexical], [M.K., Lexical, Ambiguity], [Lexical, Ambiguity, Resolutions], [Ambiguity, Resolutions, ,], [Resolutions, ,, San], [,, San,  ]]

>> Noun Phrases are: 
[[22] Small S.L., Cortell G.W., Tanenhaus, M.K. Lexical Ambiguity Resolutions, San]

>> Named Entities are: 
[('22', 'CARDINAL'), ('Cortell G.W.', 'PERSON'), ('Tanenhaus', 'ORG'), ('M.K. Lexical Ambiguity Resolutions', 'ORG')] 


================================ Paragraph 633 =================================

Mateo , CA : Morgan Kauffman, 1988.  

------------------- Sentence 1 -------------------

Mateo , CA : Morgan Kauffman, 1988.   


>> Tokens are: 
[Mateo, ,, :, Morgan, Kauffman, ,, 1988, .,  ] 

>> PoS Tags are: 
[('Mateo', 'PROPN'), (',', 'PUNCT'), (':', 'PUNCT'), ('Morgan', 'PROPN'), ('Kauffman', 'PROPN'), (',', 'PUNCT'), ('1988', 'NUM'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Mateo', 'ROOT'), (',', 'punct'), (':', 'punct'), ('Morgan', 'compound'), ('Kauffman', 'appos'), (',', 'punct'), ('1988', 'appos'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Mateo, ,], [,, :], [:, Morgan], [Morgan, Kauffman], [Kauffman, ,], [,, 1988], [1988, .], [.,  ]]

>> Trigrams: 
[[Mateo, ,, :], [,, :, Morgan], [:, Morgan, Kauffman], [Morgan, Kauffman, ,], [Kauffman, ,, 1988], [,, 1988, .], [1988, .,  ]]

>> Noun Phrases are: 
[Mateo, Morgan Kauffman]

>> Named Entities are: 
[('Morgan Kauffman', 'PERSON'), ('1988', 'DATE')] 


================================ Paragraph 634 =================================

[23] Manning, C. D., & Schütze, H. (1999). Foundations of statistical natural language  

------------------- Sentence 1 -------------------

[23] Manning, C. D., & Schütze, H. (1999). 


>> Tokens are: 
[[, 23, ], Manning, ,, C., D., ,, &, Schütze, ,, H., (, 1999, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('23', 'NUM'), (']', 'PUNCT'), ('Manning', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), ('D.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Schütze', 'PROPN'), (',', 'PUNCT'), ('H.', 'PROPN'), ('(', 'PUNCT'), ('1999', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('23', 'dep'), (']', 'punct'), ('Manning', 'nmod'), (',', 'punct'), ('C.', 'compound'), ('D.', 'ROOT'), (',', 'punct'), ('&', 'cc'), ('Schütze', 'conj'), (',', 'punct'), ('H.', 'conj'), ('(', 'punct'), ('1999', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 23], [23, ]], [], Manning], [Manning, ,], [,, C.], [C., D.], [D., ,], [,, &], [&, Schütze], [Schütze, ,], [,, H.], [H., (], [(, 1999], [1999, )], [), .]]

>> Trigrams: 
[[[, 23, ]], [23, ], Manning], [], Manning, ,], [Manning, ,, C.], [,, C., D.], [C., D., ,], [D., ,, &], [,, &, Schütze], [&, Schütze, ,], [Schütze, ,, H.], [,, H., (], [H., (, 1999], [(, 1999, )], [1999, ), .]]

>> Noun Phrases are: 
[[23] Manning, C. D., Schütze, H.]

>> Named Entities are: 
[('23', 'CARDINAL'), ('C. D.', 'PERSON'), ('& Schütze', 'ORG'), ('1999', 'DATE')] 

------------------- Sentence 2 -------------------

Foundations of statistical natural language   


>> Tokens are: 
[Foundations, statistical, natural, language,  ] 

>> PoS Tags are: 
[('Foundations', 'NOUN'), ('statistical', 'ADJ'), ('natural', 'ADJ'), ('language', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Foundations', 'ROOT'), ('statistical', 'amod'), ('natural', 'amod'), ('language', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Foundations, statistical], [statistical, natural], [natural, language], [language,  ]]

>> Trigrams: 
[[Foundations, statistical, natural], [statistical, natural, language], [natural, language,  ]]

>> Noun Phrases are: 
[Foundations, statistical natural language]

>> Named Entities are: 
[] 


================================ Paragraph 635 =================================

processing (Vol. 999). Cambridge: MIT press.  

------------------- Sentence 1 -------------------

processing (Vol. 999). 


>> Tokens are: 
[processing, (, Vol, ., 999, ), .] 

>> PoS Tags are: 
[('processing', 'NOUN'), ('(', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT'), ('999', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('processing', 'ROOT'), ('(', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct'), ('999', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[processing, (], [(, Vol], [Vol, .], [., 999], [999, )], [), .]]

>> Trigrams: 
[[processing, (, Vol], [(, Vol, .], [Vol, ., 999], [., 999, )], [999, ), .]]

>> Noun Phrases are: 
[processing]

>> Named Entities are: 
[('999', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Cambridge: MIT press. 


>> Tokens are: 
[Cambridge, :, MIT, press, .] 

>> PoS Tags are: 
[('Cambridge', 'NOUN'), (':', 'PUNCT'), ('MIT', 'PROPN'), ('press', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Cambridge', 'ROOT'), (':', 'punct'), ('MIT', 'compound'), ('press', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Cambridge, :], [:, MIT], [MIT, press], [press, .]]

>> Trigrams: 
[[Cambridge, :, MIT], [:, MIT, press], [MIT, press, .]]

>> Noun Phrases are: 
[Cambridge, MIT press]

>> Named Entities are: 
[('MIT', 'ORG')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 636 =================================

[24] Mani, I., & Maybury, M. T. (Eds.). (1999). Advances in automatic text  

------------------- Sentence 1 -------------------

[24] Mani, I., & Maybury, M. T. 


>> Tokens are: 
[[, 24, ], Mani, ,, I., ,, &, Maybury, ,, M., T.] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('24', 'NUM'), (']', 'PUNCT'), ('Mani', 'PROPN'), (',', 'PUNCT'), ('I.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Maybury', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('T.', 'PROPN')] 

>> Dependency Tags are: 
[('[', 'punct'), ('24', 'nummod'), (']', 'punct'), ('Mani', 'ROOT'), (',', 'punct'), ('I.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Maybury', 'conj'), (',', 'punct'), ('M.', 'compound'), ('T.', 'appos')]

>> Bigrams: 
[[[, 24], [24, ]], [], Mani], [Mani, ,], [,, I.], [I., ,], [,, &], [&, Maybury], [Maybury, ,], [,, M.], [M., T.]]

>> Trigrams: 
[[[, 24, ]], [24, ], Mani], [], Mani, ,], [Mani, ,, I.], [,, I., ,], [I., ,, &], [,, &, Maybury], [&, Maybury, ,], [Maybury, ,, M.], [,, M., T.]]

>> Noun Phrases are: 
[[24] Mani, I., Maybury, M. T.]

>> Named Entities are: 
[('24', 'CARDINAL'), ('Mani', 'PERSON'), ('I., & Maybury', 'ORG'), ('M. T.', 'PERSON')] 

------------------- Sentence 2 -------------------

(Eds.). 


>> Tokens are: 
[(, Eds, ., ), .] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('Eds', 'PROPN'), ('.', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('Eds', 'ROOT'), ('.', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[(, Eds], [Eds, .], [., )], [), .]]

>> Trigrams: 
[[(, Eds, .], [Eds, ., )], [., ), .]]

>> Noun Phrases are: 
[(Eds]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

(1999). 


>> Tokens are: 
[(, 1999, ), .] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('1999', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('1999', 'ROOT'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[(, 1999], [1999, )], [), .]]

>> Trigrams: 
[[(, 1999, )], [1999, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1999', 'DATE')] 

------------------- Sentence 4 -------------------

Advances in automatic text   


>> Tokens are: 
[Advances, automatic, text,  ] 

>> PoS Tags are: 
[('Advances', 'NOUN'), ('automatic', 'ADJ'), ('text', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Advances', 'ROOT'), ('automatic', 'amod'), ('text', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Advances, automatic], [automatic, text], [text,  ]]

>> Trigrams: 
[[Advances, automatic, text], [automatic, text,  ]]

>> Noun Phrases are: 
[Advances, automatic text]

>> Named Entities are: 
[] 


================================ Paragraph 637 =================================

summarization (Vol. 293). Cambridge, MA: MIT press.  

------------------- Sentence 1 -------------------

summarization (Vol. 293). 


>> Tokens are: 
[summarization, (, Vol, ., 293, ), .] 

>> PoS Tags are: 
[('summarization', 'NOUN'), ('(', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT'), ('293', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('summarization', 'ROOT'), ('(', 'punct'), ('Vol', 'appos'), ('.', 'punct'), ('293', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[summarization, (], [(, Vol], [Vol, .], [., 293], [293, )], [), .]]

>> Trigrams: 
[[summarization, (, Vol], [(, Vol, .], [Vol, ., 293], [., 293, )], [293, ), .]]

>> Noun Phrases are: 
[summarization, Vol]

>> Named Entities are: 
[('293', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Cambridge, MA: MIT press. 


>> Tokens are: 
[Cambridge, ,, MA, :, MIT, press, .] 

>> PoS Tags are: 
[('Cambridge', 'PROPN'), (',', 'PUNCT'), ('MA', 'PROPN'), (':', 'PUNCT'), ('MIT', 'PROPN'), ('press', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Cambridge', 'ROOT'), (',', 'punct'), ('MA', 'appos'), (':', 'punct'), ('MIT', 'compound'), ('press', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Cambridge, ,], [,, MA], [MA, :], [:, MIT], [MIT, press], [press, .]]

>> Trigrams: 
[[Cambridge, ,, MA], [,, MA, :], [MA, :, MIT], [:, MIT, press], [MIT, press, .]]

>> Noun Phrases are: 
[Cambridge, MA, MIT press]

>> Named Entities are: 
[('Cambridge', 'GPE'), ('MIT', 'ORG')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 638 =================================

[25] Yi, J., Nasukawa, T., Bunescu, R., & Niblack, W. (2003, November). Sentiment  

------------------- Sentence 1 -------------------

[25] Yi, J., Nasukawa, T., Bunescu, R., & Niblack, W. (2003, November). 


>> Tokens are: 
[[, 25, ], Yi, ,, J., ,, Nasukawa, ,, T., ,, Bunescu, ,, R., ,, &, Niblack, ,, W., (, 2003, ,, November, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('25', 'NUM'), (']', 'PUNCT'), ('Yi', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), (',', 'PUNCT'), ('Nasukawa', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), (',', 'PUNCT'), ('Bunescu', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Niblack', 'PROPN'), (',', 'PUNCT'), ('W.', 'PROPN'), ('(', 'PUNCT'), ('2003', 'NUM'), (',', 'PUNCT'), ('November', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('25', 'nummod'), (']', 'punct'), ('Yi', 'ROOT'), (',', 'punct'), ('J.', 'conj'), (',', 'punct'), ('Nasukawa', 'conj'), (',', 'punct'), ('T.', 'conj'), (',', 'punct'), ('Bunescu', 'conj'), (',', 'punct'), ('R.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Niblack', 'conj'), (',', 'punct'), ('W.', 'appos'), ('(', 'punct'), ('2003', 'appos'), (',', 'punct'), ('November', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 25], [25, ]], [], Yi], [Yi, ,], [,, J.], [J., ,], [,, Nasukawa], [Nasukawa, ,], [,, T.], [T., ,], [,, Bunescu], [Bunescu, ,], [,, R.], [R., ,], [,, &], [&, Niblack], [Niblack, ,], [,, W.], [W., (], [(, 2003], [2003, ,], [,, November], [November, )], [), .]]

>> Trigrams: 
[[[, 25, ]], [25, ], Yi], [], Yi, ,], [Yi, ,, J.], [,, J., ,], [J., ,, Nasukawa], [,, Nasukawa, ,], [Nasukawa, ,, T.], [,, T., ,], [T., ,, Bunescu], [,, Bunescu, ,], [Bunescu, ,, R.], [,, R., ,], [R., ,, &], [,, &, Niblack], [&, Niblack, ,], [Niblack, ,, W.], [,, W., (], [W., (, 2003], [(, 2003, ,], [2003, ,, November], [,, November, )], [November, ), .]]

>> Noun Phrases are: 
[[25] Yi, J., Nasukawa, T., Bunescu, R., Niblack, W.]

>> Named Entities are: 
[('25', 'CARDINAL'), ('Bunescu', 'PERSON'), ('R.', 'NORP'), ('W.', 'PERSON'), ('2003, November', 'DATE')] 

------------------- Sentence 2 -------------------

Sentiment   


>> Tokens are: 
[Sentiment,  ] 

>> PoS Tags are: 
[('Sentiment', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Sentiment', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[Sentiment,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Sentiment]

>> Named Entities are: 
[] 


================================ Paragraph 639 =================================

analyzer: Extracting sentiments about a given topic using natural language processing  

------------------- Sentence 1 -------------------

analyzer: 


>> Tokens are: 
[analyzer, :] 

>> PoS Tags are: 
[('analyzer', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('analyzer', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[analyzer, :]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[analyzer]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Extracting sentiments about a given topic using natural language processing   


>> Tokens are: 
[Extracting, sentiments, given, topic, natural, language, processing,  ] 

>> PoS Tags are: 
[('Extracting', 'VERB'), ('sentiments', 'NOUN'), ('given', 'VERB'), ('topic', 'NOUN'), ('natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Extracting', 'ROOT'), ('sentiments', 'dobj'), ('given', 'amod'), ('topic', 'pobj'), ('natural', 'amod'), ('language', 'compound'), ('processing', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[Extracting, sentiments], [sentiments, given], [given, topic], [topic, natural], [natural, language], [language, processing], [processing,  ]]

>> Trigrams: 
[[Extracting, sentiments, given], [sentiments, given, topic], [given, topic, natural], [topic, natural, language], [natural, language, processing], [language, processing,  ]]

>> Noun Phrases are: 
[sentiments, a given topic, natural language processing]

>> Named Entities are: 
[] 


================================ Paragraph 640 =================================

techniques. In Data Mining, 2003. ICDM 2003. Third IEEE International Conference on (pp.  

------------------- Sentence 1 -------------------

techniques. 


>> Tokens are: 
[techniques, .] 

>> PoS Tags are: 
[('techniques', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('techniques', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[techniques, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[techniques]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Data Mining, 2003. 


>> Tokens are: 
[Data, Mining, ,, 2003, .] 

>> PoS Tags are: 
[('Data', 'PROPN'), ('Mining', 'PROPN'), (',', 'PUNCT'), ('2003', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Data', 'compound'), ('Mining', 'pobj'), (',', 'punct'), ('2003', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Data, Mining], [Mining, ,], [,, 2003], [2003, .]]

>> Trigrams: 
[[Data, Mining, ,], [Mining, ,, 2003], [,, 2003, .]]

>> Noun Phrases are: 
[Data Mining]

>> Named Entities are: 
[('Data Mining', 'ORG'), ('2003', 'DATE')] 

------------------- Sentence 3 -------------------

ICDM 2003. 


>> Tokens are: 
[ICDM, 2003, .] 

>> PoS Tags are: 
[('ICDM', 'NOUN'), ('2003', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ICDM', 'ROOT'), ('2003', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[ICDM, 2003], [2003, .]]

>> Trigrams: 
[[ICDM, 2003, .]]

>> Noun Phrases are: 
[ICDM]

>> Named Entities are: 
[('ICDM', 'ORG'), ('2003', 'DATE')] 

------------------- Sentence 4 -------------------

Third IEEE International Conference on (pp. 


>> Tokens are: 
[IEEE, International, Conference, (, pp, .] 

>> PoS Tags are: 
[('IEEE', 'PROPN'), ('International', 'PROPN'), ('Conference', 'PROPN'), ('(', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('IEEE', 'compound'), ('International', 'compound'), ('Conference', 'ROOT'), ('(', 'punct'), ('pp', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[IEEE, International], [International, Conference], [Conference, (], [(, pp], [pp, .]]

>> Trigrams: 
[[IEEE, International, Conference], [International, Conference, (], [Conference, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[Third IEEE International Conference]

>> Named Entities are: 
[] 

------------------- Sentence 5 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 641 =================================

427-434). IEEE.  

------------------- Sentence 1 -------------------

427-434). 


>> Tokens are: 
[427, -, 434, ), .] 

>> PoS Tags are: 
[('427', 'NUM'), ('-', 'SYM'), ('434', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('427', 'ROOT'), ('-', 'punct'), ('434', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[427, -], [-, 434], [434, )], [), .]]

>> Trigrams: 
[[427, -, 434], [-, 434, )], [434, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('427', 'CARDINAL')] 

------------------- Sentence 2 -------------------

IEEE. 


>> Tokens are: 
[IEEE, .] 

>> PoS Tags are: 
[('IEEE', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('IEEE', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[IEEE, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[IEEE]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 642 =================================

[26] Yi, J., Nasukawa, T., Bunescu, R., & Niblack, W. (2003, November). Sentiment  

------------------- Sentence 1 -------------------

[26] Yi, J., Nasukawa, T., Bunescu, R., & Niblack, W. (2003, November). 


>> Tokens are: 
[[, 26, ], Yi, ,, J., ,, Nasukawa, ,, T., ,, Bunescu, ,, R., ,, &, Niblack, ,, W., (, 2003, ,, November, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('26', 'NUM'), (']', 'PUNCT'), ('Yi', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), (',', 'PUNCT'), ('Nasukawa', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), (',', 'PUNCT'), ('Bunescu', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Niblack', 'PROPN'), (',', 'PUNCT'), ('W.', 'PROPN'), ('(', 'PUNCT'), ('2003', 'NUM'), (',', 'PUNCT'), ('November', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('26', 'nmod'), (']', 'punct'), ('Yi', 'ROOT'), (',', 'punct'), ('J.', 'conj'), (',', 'punct'), ('Nasukawa', 'conj'), (',', 'punct'), ('T.', 'conj'), (',', 'punct'), ('Bunescu', 'conj'), (',', 'punct'), ('R.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Niblack', 'conj'), (',', 'punct'), ('W.', 'appos'), ('(', 'punct'), ('2003', 'appos'), (',', 'punct'), ('November', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 26], [26, ]], [], Yi], [Yi, ,], [,, J.], [J., ,], [,, Nasukawa], [Nasukawa, ,], [,, T.], [T., ,], [,, Bunescu], [Bunescu, ,], [,, R.], [R., ,], [,, &], [&, Niblack], [Niblack, ,], [,, W.], [W., (], [(, 2003], [2003, ,], [,, November], [November, )], [), .]]

>> Trigrams: 
[[[, 26, ]], [26, ], Yi], [], Yi, ,], [Yi, ,, J.], [,, J., ,], [J., ,, Nasukawa], [,, Nasukawa, ,], [Nasukawa, ,, T.], [,, T., ,], [T., ,, Bunescu], [,, Bunescu, ,], [Bunescu, ,, R.], [,, R., ,], [R., ,, &], [,, &, Niblack], [&, Niblack, ,], [Niblack, ,, W.], [,, W., (], [W., (, 2003], [(, 2003, ,], [2003, ,, November], [,, November, )], [November, ), .]]

>> Noun Phrases are: 
[[26] Yi, J., Nasukawa, T., Bunescu, R., Niblack, W.]

>> Named Entities are: 
[('26', 'CARDINAL'), ('Bunescu', 'PERSON'), ('R.', 'NORP'), ('W.', 'PERSON'), ('2003, November', 'DATE')] 

------------------- Sentence 2 -------------------

Sentiment   


>> Tokens are: 
[Sentiment,  ] 

>> PoS Tags are: 
[('Sentiment', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Sentiment', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[Sentiment,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Sentiment]

>> Named Entities are: 
[] 


================================ Paragraph 643 =================================

analyzer: Extracting sentiments about a given topic using natural language processing  

------------------- Sentence 1 -------------------

analyzer: 


>> Tokens are: 
[analyzer, :] 

>> PoS Tags are: 
[('analyzer', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('analyzer', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[analyzer, :]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[analyzer]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Extracting sentiments about a given topic using natural language processing   


>> Tokens are: 
[Extracting, sentiments, given, topic, natural, language, processing,  ] 

>> PoS Tags are: 
[('Extracting', 'VERB'), ('sentiments', 'NOUN'), ('given', 'VERB'), ('topic', 'NOUN'), ('natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Extracting', 'ROOT'), ('sentiments', 'dobj'), ('given', 'amod'), ('topic', 'pobj'), ('natural', 'amod'), ('language', 'compound'), ('processing', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[Extracting, sentiments], [sentiments, given], [given, topic], [topic, natural], [natural, language], [language, processing], [processing,  ]]

>> Trigrams: 
[[Extracting, sentiments, given], [sentiments, given, topic], [given, topic, natural], [topic, natural, language], [natural, language, processing], [language, processing,  ]]

>> Noun Phrases are: 
[sentiments, a given topic, natural language processing]

>> Named Entities are: 
[] 


================================ Paragraph 644 =================================

techniques. In Data Mining, 2003. ICDM 2003. Third IEEE International Conference on (pp.  

------------------- Sentence 1 -------------------

techniques. 


>> Tokens are: 
[techniques, .] 

>> PoS Tags are: 
[('techniques', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('techniques', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[techniques, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[techniques]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Data Mining, 2003. 


>> Tokens are: 
[Data, Mining, ,, 2003, .] 

>> PoS Tags are: 
[('Data', 'PROPN'), ('Mining', 'PROPN'), (',', 'PUNCT'), ('2003', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Data', 'compound'), ('Mining', 'pobj'), (',', 'punct'), ('2003', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Data, Mining], [Mining, ,], [,, 2003], [2003, .]]

>> Trigrams: 
[[Data, Mining, ,], [Mining, ,, 2003], [,, 2003, .]]

>> Noun Phrases are: 
[Data Mining]

>> Named Entities are: 
[('Data Mining', 'ORG'), ('2003', 'DATE')] 

------------------- Sentence 3 -------------------

ICDM 2003. 


>> Tokens are: 
[ICDM, 2003, .] 

>> PoS Tags are: 
[('ICDM', 'NOUN'), ('2003', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ICDM', 'ROOT'), ('2003', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[ICDM, 2003], [2003, .]]

>> Trigrams: 
[[ICDM, 2003, .]]

>> Noun Phrases are: 
[ICDM]

>> Named Entities are: 
[('ICDM', 'ORG'), ('2003', 'DATE')] 

------------------- Sentence 4 -------------------

Third IEEE International Conference on (pp. 


>> Tokens are: 
[IEEE, International, Conference, (, pp, .] 

>> PoS Tags are: 
[('IEEE', 'PROPN'), ('International', 'PROPN'), ('Conference', 'PROPN'), ('(', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('IEEE', 'compound'), ('International', 'compound'), ('Conference', 'ROOT'), ('(', 'punct'), ('pp', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[IEEE, International], [International, Conference], [Conference, (], [(, pp], [pp, .]]

>> Trigrams: 
[[IEEE, International, Conference], [International, Conference, (], [Conference, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[Third IEEE International Conference]

>> Named Entities are: 
[] 

------------------- Sentence 5 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 645 =================================

427-434). IEEE.  

------------------- Sentence 1 -------------------

427-434). 


>> Tokens are: 
[427, -, 434, ), .] 

>> PoS Tags are: 
[('427', 'NUM'), ('-', 'SYM'), ('434', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('427', 'ROOT'), ('-', 'punct'), ('434', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[427, -], [-, 434], [434, )], [), .]]

>> Trigrams: 
[[427, -, 434], [-, 434, )], [434, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('427', 'CARDINAL')] 

------------------- Sentence 2 -------------------

IEEE. 


>> Tokens are: 
[IEEE, .] 

>> PoS Tags are: 
[('IEEE', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('IEEE', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[IEEE, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[IEEE]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 646 =================================

[27] Tapaswi, N., & Jain, S. (2012, September). Treebank based deep grammar acquisition  

------------------- Sentence 1 -------------------

[27] Tapaswi, N., & Jain, S. (2012, September). 


>> Tokens are: 
[[, 27, ], Tapaswi, ,, N., ,, &, Jain, ,, S., (, 2012, ,, September, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('27', 'NUM'), (']', 'PUNCT'), ('Tapaswi', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Jain', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('(', 'PUNCT'), ('2012', 'NUM'), (',', 'PUNCT'), ('September', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('27', 'ROOT'), (']', 'punct'), ('Tapaswi', 'npadvmod'), (',', 'punct'), ('N.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Jain', 'conj'), (',', 'punct'), ('S.', 'appos'), ('(', 'punct'), ('2012', 'appos'), (',', 'punct'), ('September', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 27], [27, ]], [], Tapaswi], [Tapaswi, ,], [,, N.], [N., ,], [,, &], [&, Jain], [Jain, ,], [,, S.], [S., (], [(, 2012], [2012, ,], [,, September], [September, )], [), .]]

>> Trigrams: 
[[[, 27, ]], [27, ], Tapaswi], [], Tapaswi, ,], [Tapaswi, ,, N.], [,, N., ,], [N., ,, &], [,, &, Jain], [&, Jain, ,], [Jain, ,, S.], [,, S., (], [S., (, 2012], [(, 2012, ,], [2012, ,, September], [,, September, )], [September, ), .]]

>> Noun Phrases are: 
[S.]

>> Named Entities are: 
[('27', 'CARDINAL'), ('2012', 'DATE'), ('September', 'DATE')] 

------------------- Sentence 2 -------------------

Treebank based deep grammar acquisition   


>> Tokens are: 
[Treebank, based, deep, grammar, acquisition,  ] 

>> PoS Tags are: 
[('Treebank', 'PROPN'), ('based', 'VERB'), ('deep', 'ADJ'), ('grammar', 'NOUN'), ('acquisition', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Treebank', 'nsubj'), ('based', 'ROOT'), ('deep', 'amod'), ('grammar', 'compound'), ('acquisition', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[Treebank, based], [based, deep], [deep, grammar], [grammar, acquisition], [acquisition,  ]]

>> Trigrams: 
[[Treebank, based, deep], [based, deep, grammar], [deep, grammar, acquisition], [grammar, acquisition,  ]]

>> Noun Phrases are: 
[Treebank, deep grammar acquisition]

>> Named Entities are: 
[] 


================================ Paragraph 647 =================================

and Part-Of-Speech Tagging for Sanskrit sentences. In Software Engineering (CONSEG),  

------------------- Sentence 1 -------------------

and Part-Of-Speech Tagging for Sanskrit sentences. 


>> Tokens are: 
[-, -, Speech, Tagging, Sanskrit, sentences, .] 

>> PoS Tags are: 
[('-', 'PUNCT'), ('-', 'PUNCT'), ('Speech', 'PROPN'), ('Tagging', 'PROPN'), ('Sanskrit', 'PROPN'), ('sentences', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('-', 'punct'), ('-', 'punct'), ('Speech', 'compound'), ('Tagging', 'pobj'), ('Sanskrit', 'pobj'), ('sentences', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[-, -], [-, Speech], [Speech, Tagging], [Tagging, Sanskrit], [Sanskrit, sentences], [sentences, .]]

>> Trigrams: 
[[-, -, Speech], [-, Speech, Tagging], [Speech, Tagging, Sanskrit], [Tagging, Sanskrit, sentences], [Sanskrit, sentences, .]]

>> Noun Phrases are: 
[Speech Tagging, Sanskrit]

>> Named Entities are: 
[('Sanskrit', 'FAC')] 

------------------- Sentence 2 -------------------

In Software Engineering (CONSEG),   


>> Tokens are: 
[Software, Engineering, (, CONSEG, ), ,,  ] 

>> PoS Tags are: 
[('Software', 'PROPN'), ('Engineering', 'PROPN'), ('(', 'PUNCT'), ('CONSEG', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Software', 'compound'), ('Engineering', 'pobj'), ('(', 'punct'), ('CONSEG', 'appos'), (')', 'punct'), (',', 'punct'), (' ', 'pobj')]

>> Bigrams: 
[[Software, Engineering], [Engineering, (], [(, CONSEG], [CONSEG, )], [), ,], [,,  ]]

>> Trigrams: 
[[Software, Engineering, (], [Engineering, (, CONSEG], [(, CONSEG, )], [CONSEG, ), ,], [), ,,  ]]

>> Noun Phrases are: 
[Software Engineering, (CONSEG]

>> Named Entities are: 
[('Software Engineering', 'ORG'), ('CONSEG', 'PERSON')] 


================================ Paragraph 648 =================================

2012 CSI Sixth International Conference on (pp. 1-4). IEEE.  

------------------- Sentence 1 -------------------

2012 CSI Sixth International Conference on (pp. 


>> Tokens are: 
[2012, CSI, Sixth, International, Conference, (, pp, .] 

>> PoS Tags are: 
[('2012', 'NUM'), ('CSI', 'PROPN'), ('Sixth', 'PROPN'), ('International', 'PROPN'), ('Conference', 'PROPN'), ('(', 'PUNCT'), ('pp', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('2012', 'nummod'), ('CSI', 'compound'), ('Sixth', 'compound'), ('International', 'compound'), ('Conference', 'ROOT'), ('(', 'punct'), ('pp', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[2012, CSI], [CSI, Sixth], [Sixth, International], [International, Conference], [Conference, (], [(, pp], [pp, .]]

>> Trigrams: 
[[2012, CSI, Sixth], [CSI, Sixth, International], [Sixth, International, Conference], [International, Conference, (], [Conference, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[2012 CSI Sixth International Conference, pp]

>> Named Entities are: 
[('2012', 'DATE'), ('Sixth', 'ORDINAL')] 

------------------- Sentence 2 -------------------

1-4). 


>> Tokens are: 
[1, -, 4, ), .] 

>> PoS Tags are: 
[('1', 'NUM'), ('-', 'SYM'), ('4', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1', 'ROOT'), ('-', 'punct'), ('4', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[1, -], [-, 4], [4, )], [), .]]

>> Trigrams: 
[[1, -, 4], [-, 4, )], [4, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

IEEE. 


>> Tokens are: 
[IEEE, .] 

>> PoS Tags are: 
[('IEEE', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('IEEE', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[IEEE, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[IEEE]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 649 =================================

[28] Ranjan, P., & Basu, H. V. S. S. A. (2003). Part of speech tagging and local word  

------------------- Sentence 1 -------------------

[28] Ranjan, P., & Basu, H. V. S. S. A. (2003). 


>> Tokens are: 
[[, 28, ], Ranjan, ,, P., ,, &, Basu, ,, H., V., S., S., A., (, 2003, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('28', 'NUM'), (']', 'PUNCT'), ('Ranjan', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Basu', 'PROPN'), (',', 'PUNCT'), ('H.', 'PROPN'), ('V.', 'PROPN'), ('S.', 'PROPN'), ('S.', 'PROPN'), ('A.', 'PROPN'), ('(', 'PUNCT'), ('2003', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('28', 'dep'), (']', 'punct'), ('Ranjan', 'ROOT'), (',', 'punct'), ('P.', 'npadvmod'), (',', 'punct'), ('&', 'cc'), ('Basu', 'conj'), (',', 'punct'), ('H.', 'compound'), ('V.', 'compound'), ('S.', 'compound'), ('S.', 'compound'), ('A.', 'appos'), ('(', 'punct'), ('2003', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 28], [28, ]], [], Ranjan], [Ranjan, ,], [,, P.], [P., ,], [,, &], [&, Basu], [Basu, ,], [,, H.], [H., V.], [V., S.], [S., S.], [S., A.], [A., (], [(, 2003], [2003, )], [), .]]

>> Trigrams: 
[[[, 28, ]], [28, ], Ranjan], [], Ranjan, ,], [Ranjan, ,, P.], [,, P., ,], [P., ,, &], [,, &, Basu], [&, Basu, ,], [Basu, ,, H.], [,, H., V.], [H., V., S.], [V., S., S.], [S., S., A.], [S., A., (], [A., (, 2003], [(, 2003, )], [2003, ), .]]

>> Noun Phrases are: 
[[28] Ranjan, H. V. S. S. A.]

>> Named Entities are: 
[('28', 'CARDINAL'), ('H. V. S. S. A.', 'PERSON'), ('2003', 'DATE')] 

------------------- Sentence 2 -------------------

Part of speech tagging and local word   


>> Tokens are: 
[speech, tagging, local, word,  ] 

>> PoS Tags are: 
[('speech', 'NOUN'), ('tagging', 'NOUN'), ('local', 'ADJ'), ('word', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('speech', 'compound'), ('tagging', 'pobj'), ('local', 'conj'), ('word', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[speech, tagging], [tagging, local], [local, word], [word,  ]]

>> Trigrams: 
[[speech, tagging, local], [tagging, local, word], [local, word,  ]]

>> Noun Phrases are: 
[speech tagging]

>> Named Entities are: 
[] 


================================ Paragraph 650 =================================

grouping techniques for natural language parsing in Hindi. In Proceedings of the 1st  

------------------- Sentence 1 -------------------

grouping techniques for natural language parsing in Hindi. 


>> Tokens are: 
[grouping, techniques, natural, language, parsing, Hindi, .] 

>> PoS Tags are: 
[('grouping', 'VERB'), ('techniques', 'NOUN'), ('natural', 'ADJ'), ('language', 'NOUN'), ('parsing', 'NOUN'), ('Hindi', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('grouping', 'ROOT'), ('techniques', 'dobj'), ('natural', 'amod'), ('language', 'compound'), ('parsing', 'pobj'), ('Hindi', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[grouping, techniques], [techniques, natural], [natural, language], [language, parsing], [parsing, Hindi], [Hindi, .]]

>> Trigrams: 
[[grouping, techniques, natural], [techniques, natural, language], [natural, language, parsing], [language, parsing, Hindi], [parsing, Hindi, .]]

>> Noun Phrases are: 
[techniques, natural language parsing, Hindi]

>> Named Entities are: 
[('Hindi', 'GPE')] 

------------------- Sentence 2 -------------------

In Proceedings of the 1st   


>> Tokens are: 
[Proceedings, 1st,  ] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('1st', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('1st', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Proceedings, 1st], [1st,  ]]

>> Trigrams: 
[[Proceedings, 1st,  ]]

>> Noun Phrases are: 
[Proceedings]

>> Named Entities are: 
[('Proceedings', 'GPE'), ('the 1st', 'DATE')] 


================================ Paragraph 651 =================================

International Conference on Natural Language Processing (ICON 2003).  

------------------- Sentence 1 -------------------

International Conference on Natural Language Processing (ICON 2003). 


>> Tokens are: 
[International, Conference, Natural, Language, Processing, (, ICON, 2003, ), .] 

>> PoS Tags are: 
[('International', 'PROPN'), ('Conference', 'PROPN'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'PROPN'), ('(', 'PUNCT'), ('ICON', 'PROPN'), ('2003', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('International', 'compound'), ('Conference', 'ROOT'), ('Natural', 'compound'), ('Language', 'compound'), ('Processing', 'pobj'), ('(', 'punct'), ('ICON', 'appos'), ('2003', 'nummod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[International, Conference], [Conference, Natural], [Natural, Language], [Language, Processing], [Processing, (], [(, ICON], [ICON, 2003], [2003, )], [), .]]

>> Trigrams: 
[[International, Conference, Natural], [Conference, Natural, Language], [Natural, Language, Processing], [Language, Processing, (], [Processing, (, ICON], [(, ICON, 2003], [ICON, 2003, )], [2003, ), .]]

>> Noun Phrases are: 
[International Conference, Natural Language Processing, ICON]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 652 =================================

[29] Diab, M., Hacioglu, K., & Jurafsky, D. (2004, May). Automatic tagging of Arabic text:  

------------------- Sentence 1 -------------------

[29] Diab, M., Hacioglu, K., & Jurafsky, D. (2004, May). 


>> Tokens are: 
[[, 29, ], Diab, ,, M., ,, Hacioglu, ,, K., ,, &, Jurafsky, ,, D., (, 2004, ,, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('29', 'NUM'), (']', 'PUNCT'), ('Diab', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), (',', 'PUNCT'), ('Hacioglu', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Jurafsky', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('(', 'PUNCT'), ('2004', 'NUM'), (',', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('29', 'nummod'), (']', 'punct'), ('Diab', 'ROOT'), (',', 'punct'), ('M.', 'conj'), (',', 'punct'), ('Hacioglu', 'conj'), (',', 'punct'), ('K.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Jurafsky', 'conj'), (',', 'punct'), ('D.', 'appos'), ('(', 'punct'), ('2004', 'appos'), (',', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 29], [29, ]], [], Diab], [Diab, ,], [,, M.], [M., ,], [,, Hacioglu], [Hacioglu, ,], [,, K.], [K., ,], [,, &], [&, Jurafsky], [Jurafsky, ,], [,, D.], [D., (], [(, 2004], [2004, ,], [,, )], [), .]]

>> Trigrams: 
[[[, 29, ]], [29, ], Diab], [], Diab, ,], [Diab, ,, M.], [,, M., ,], [M., ,, Hacioglu], [,, Hacioglu, ,], [Hacioglu, ,, K.], [,, K., ,], [K., ,, &], [,, &, Jurafsky], [&, Jurafsky, ,], [Jurafsky, ,, D.], [,, D., (], [D., (, 2004], [(, 2004, ,], [2004, ,, )], [,, ), .]]

>> Noun Phrases are: 
[[29] Diab, M., Hacioglu, K., Jurafsky, D., May]

>> Named Entities are: 
[('29', 'CARDINAL'), ('D.', 'NORP')] 

------------------- Sentence 2 -------------------

Automatic tagging of Arabic text:   


>> Tokens are: 
[Automatic, tagging, Arabic, text, :,  ] 

>> PoS Tags are: 
[('Automatic', 'ADJ'), ('tagging', 'NOUN'), ('Arabic', 'ADJ'), ('text', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Automatic', 'amod'), ('tagging', 'ROOT'), ('Arabic', 'amod'), ('text', 'pobj'), (':', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Automatic, tagging], [tagging, Arabic], [Arabic, text], [text, :], [:,  ]]

>> Trigrams: 
[[Automatic, tagging, Arabic], [tagging, Arabic, text], [Arabic, text, :], [text, :,  ]]

>> Noun Phrases are: 
[Automatic tagging, Arabic text]

>> Named Entities are: 
[('Arabic', 'LANGUAGE')] 


================================ Paragraph 653 =================================

From raw text to base phrase chunks. In Proceedings of HLT-NAACL 2004: Short  

------------------- Sentence 1 -------------------

From raw text to base phrase chunks. 


>> Tokens are: 
[raw, text, base, phrase, chunks, .] 

>> PoS Tags are: 
[('raw', 'ADJ'), ('text', 'NOUN'), ('base', 'VERB'), ('phrase', 'NOUN'), ('chunks', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('raw', 'amod'), ('text', 'pobj'), ('base', 'pcomp'), ('phrase', 'compound'), ('chunks', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[raw, text], [text, base], [base, phrase], [phrase, chunks], [chunks, .]]

>> Trigrams: 
[[raw, text, base], [text, base, phrase], [base, phrase, chunks], [phrase, chunks, .]]

>> Noun Phrases are: 
[raw text, phrase chunks]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Proceedings of HLT-NAACL 2004: 


>> Tokens are: 
[Proceedings, HLT, -, NAACL, 2004, :] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('HLT', 'PROPN'), ('-', 'PUNCT'), ('NAACL', 'PROPN'), ('2004', 'NUM'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('HLT', 'pobj'), ('-', 'punct'), ('NAACL', 'appos'), ('2004', 'nummod'), (':', 'punct')]

>> Bigrams: 
[[Proceedings, HLT], [HLT, -], [-, NAACL], [NAACL, 2004], [2004, :]]

>> Trigrams: 
[[Proceedings, HLT, -], [HLT, -, NAACL], [-, NAACL, 2004], [NAACL, 2004, :]]

>> Noun Phrases are: 
[Proceedings, HLT, NAACL]

>> Named Entities are: 
[('HLT-NAACL 2004', 'ORG')] 

------------------- Sentence 3 -------------------

Short   


>> Tokens are: 
[Short,  ] 

>> PoS Tags are: 
[('Short', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Short', 'amod'), (' ', 'ROOT')]

>> Bigrams: 
[[Short,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 654 =================================

papers (pp. 149-152). Association for Computational Linguistics.  

------------------- Sentence 1 -------------------

papers (pp. 


>> Tokens are: 
[papers, (, pp, .] 

>> PoS Tags are: 
[('papers', 'NOUN'), ('(', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('papers', 'ROOT'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[papers, (], [(, pp], [pp, .]]

>> Trigrams: 
[[papers, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[papers, pp]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

149-152). 


>> Tokens are: 
[149, -, 152, ), .] 

>> PoS Tags are: 
[('149', 'NUM'), ('-', 'SYM'), ('152', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('149', 'ROOT'), ('-', 'punct'), ('152', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[149, -], [-, 152], [152, )], [), .]]

>> Trigrams: 
[[149, -, 152], [-, 152, )], [152, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('149', 'CARDINAL')] 

------------------- Sentence 3 -------------------

Association for Computational Linguistics. 


>> Tokens are: 
[Association, Computational, Linguistics, .] 

>> PoS Tags are: 
[('Association', 'PROPN'), ('Computational', 'PROPN'), ('Linguistics', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Association', 'ROOT'), ('Computational', 'compound'), ('Linguistics', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Association, Computational], [Computational, Linguistics], [Linguistics, .]]

>> Trigrams: 
[[Association, Computational, Linguistics], [Computational, Linguistics, .]]

>> Noun Phrases are: 
[Association, Computational Linguistics]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 655 =================================

[30] Sha, F., & Pereira, F. (2003, May). Shallow parsing with conditional random fields.  

------------------- Sentence 1 -------------------

[30] Sha, F., & Pereira, F. (2003, May). 


>> Tokens are: 
[[, 30, ], Sha, ,, F., ,, &, Pereira, ,, F., (, 2003, ,, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('30', 'NUM'), (']', 'PUNCT'), ('Sha', 'PROPN'), (',', 'PUNCT'), ('F.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Pereira', 'PROPN'), (',', 'PUNCT'), ('F.', 'PROPN'), ('(', 'PUNCT'), ('2003', 'NUM'), (',', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('30', 'dep'), (']', 'dep'), ('Sha', 'ROOT'), (',', 'punct'), ('F.', 'appos'), (',', 'punct'), ('&', 'cc'), ('Pereira', 'conj'), (',', 'punct'), ('F.', 'appos'), ('(', 'punct'), ('2003', 'appos'), (',', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 30], [30, ]], [], Sha], [Sha, ,], [,, F.], [F., ,], [,, &], [&, Pereira], [Pereira, ,], [,, F.], [F., (], [(, 2003], [2003, ,], [,, )], [), .]]

>> Trigrams: 
[[[, 30, ]], [30, ], Sha], [], Sha, ,], [Sha, ,, F.], [,, F., ,], [F., ,, &], [,, &, Pereira], [&, Pereira, ,], [Pereira, ,, F.], [,, F., (], [F., (, 2003], [(, 2003, ,], [2003, ,, )], [,, ), .]]

>> Noun Phrases are: 
[[30] Sha, F., Pereira, F.]

>> Named Entities are: 
[('30', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Shallow parsing with conditional random fields. 


>> Tokens are: 
[Shallow, parsing, conditional, random, fields, .] 

>> PoS Tags are: 
[('Shallow', 'ADJ'), ('parsing', 'VERB'), ('conditional', 'ADJ'), ('random', 'ADJ'), ('fields', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Shallow', 'amod'), ('parsing', 'ROOT'), ('conditional', 'amod'), ('random', 'amod'), ('fields', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Shallow, parsing], [parsing, conditional], [conditional, random], [random, fields], [fields, .]]

>> Trigrams: 
[[Shallow, parsing, conditional], [parsing, conditional, random], [conditional, random, fields], [random, fields, .]]

>> Noun Phrases are: 
[conditional random fields]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 656 =================================

In Proceedings of the 2003 Conference of the North American Chapter of the Association for  

------------------- Sentence 1 -------------------

In Proceedings of the 2003 Conference of the North American Chapter of the Association for   


>> Tokens are: 
[Proceedings, 2003, Conference, North, American, Chapter, Association,  ] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('2003', 'NUM'), ('Conference', 'PROPN'), ('North', 'ADJ'), ('American', 'ADJ'), ('Chapter', 'NOUN'), ('Association', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('2003', 'nummod'), ('Conference', 'pobj'), ('North', 'amod'), ('American', 'amod'), ('Chapter', 'pobj'), ('Association', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Proceedings, 2003], [2003, Conference], [Conference, North], [North, American], [American, Chapter], [Chapter, Association], [Association,  ]]

>> Trigrams: 
[[Proceedings, 2003, Conference], [2003, Conference, North], [Conference, North, American], [North, American, Chapter], [American, Chapter, Association], [Chapter, Association,  ]]

>> Noun Phrases are: 
[Proceedings, the 2003 Conference, the North American Chapter, the Association]

>> Named Entities are: 
[('Proceedings', 'GPE'), ('2003', 'DATE'), ('the North American Chapter of', 'ORG'), ('the Association for  ', 'ORG')] 


================================ Paragraph 657 =================================

Computational Linguistics on Human Language Technology-Volume 1 (pp. 134-141).  

------------------- Sentence 1 -------------------

Computational Linguistics on Human Language Technology-Volume 1 (pp. 


>> Tokens are: 
[Computational, Linguistics, Human, Language, Technology, -, Volume, 1, (, pp, .] 

>> PoS Tags are: 
[('Computational', 'PROPN'), ('Linguistics', 'PROPN'), ('Human', 'PROPN'), ('Language', 'PROPN'), ('Technology', 'PROPN'), ('-', 'PUNCT'), ('Volume', 'NOUN'), ('1', 'NUM'), ('(', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Computational', 'compound'), ('Linguistics', 'ROOT'), ('Human', 'compound'), ('Language', 'compound'), ('Technology', 'compound'), ('-', 'punct'), ('Volume', 'pobj'), ('1', 'nummod'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Computational, Linguistics], [Linguistics, Human], [Human, Language], [Language, Technology], [Technology, -], [-, Volume], [Volume, 1], [1, (], [(, pp], [pp, .]]

>> Trigrams: 
[[Computational, Linguistics, Human], [Linguistics, Human, Language], [Human, Language, Technology], [Language, Technology, -], [Technology, -, Volume], [-, Volume, 1], [Volume, 1, (], [1, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[Computational Linguistics, Human Language Technology-Volume, pp]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

134-141). 


>> Tokens are: 
[134, -, 141, ), .] 

>> PoS Tags are: 
[('134', 'NUM'), ('-', 'SYM'), ('141', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('134', 'ROOT'), ('-', 'punct'), ('141', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[134, -], [-, 141], [141, )], [), .]]

>> Trigrams: 
[[134, -, 141], [-, 141, )], [141, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('134', 'CARDINAL')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 658 =================================

Association for Computational Linguistics.  

------------------- Sentence 1 -------------------

Association for Computational Linguistics. 


>> Tokens are: 
[Association, Computational, Linguistics, .] 

>> PoS Tags are: 
[('Association', 'PROPN'), ('Computational', 'PROPN'), ('Linguistics', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Association', 'ROOT'), ('Computational', 'compound'), ('Linguistics', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Association, Computational], [Computational, Linguistics], [Linguistics, .]]

>> Trigrams: 
[[Association, Computational, Linguistics], [Computational, Linguistics, .]]

>> Noun Phrases are: 
[Association, Computational Linguistics]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 659 =================================

[31] McDonald, R., Crammer, K., & Pereira, F. (2005, October). Flexible text segmentation  

------------------- Sentence 1 -------------------

[31] McDonald, R., Crammer, K., & Pereira, F. (2005, October). 


>> Tokens are: 
[[, 31, ], McDonald, ,, R., ,, Crammer, ,, K., ,, &, Pereira, ,, F., (, 2005, ,, October, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('31', 'NUM'), (']', 'PUNCT'), ('McDonald', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), (',', 'PUNCT'), ('Crammer', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Pereira', 'PROPN'), (',', 'PUNCT'), ('F.', 'PROPN'), ('(', 'PUNCT'), ('2005', 'NUM'), (',', 'PUNCT'), ('October', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('31', 'nummod'), (']', 'punct'), ('McDonald', 'ROOT'), (',', 'punct'), ('R.', 'appos'), (',', 'punct'), ('Crammer', 'npadvmod'), (',', 'punct'), ('K.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Pereira', 'conj'), (',', 'punct'), ('F.', 'conj'), ('(', 'punct'), ('2005', 'appos'), (',', 'punct'), ('October', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 31], [31, ]], [], McDonald], [McDonald, ,], [,, R.], [R., ,], [,, Crammer], [Crammer, ,], [,, K.], [K., ,], [,, &], [&, Pereira], [Pereira, ,], [,, F.], [F., (], [(, 2005], [2005, ,], [,, October], [October, )], [), .]]

>> Trigrams: 
[[[, 31, ]], [31, ], McDonald], [], McDonald, ,], [McDonald, ,, R.], [,, R., ,], [R., ,, Crammer], [,, Crammer, ,], [Crammer, ,, K.], [,, K., ,], [K., ,, &], [,, &, Pereira], [&, Pereira, ,], [Pereira, ,, F.], [,, F., (], [F., (, 2005], [(, 2005, ,], [2005, ,, October], [,, October, )], [October, ), .]]

>> Noun Phrases are: 
[[31] McDonald, R.]

>> Named Entities are: 
[('31', 'CARDINAL'), ('McDonald', 'NORP'), ('R.', 'NORP'), ('Crammer', 'ORG'), ('October', 'DATE')] 

------------------- Sentence 2 -------------------

Flexible text segmentation   


>> Tokens are: 
[Flexible, text, segmentation,  ] 

>> PoS Tags are: 
[('Flexible', 'ADJ'), ('text', 'NOUN'), ('segmentation', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Flexible', 'amod'), ('text', 'compound'), ('segmentation', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[Flexible, text], [text, segmentation], [segmentation,  ]]

>> Trigrams: 
[[Flexible, text, segmentation], [text, segmentation,  ]]

>> Noun Phrases are: 
[Flexible text segmentation]

>> Named Entities are: 
[] 


================================ Paragraph 660 =================================

with structured multilabel classification. In Proceedings of the conference on Human  

------------------- Sentence 1 -------------------

with structured multilabel classification. 


>> Tokens are: 
[structured, multilabel, classification, .] 

>> PoS Tags are: 
[('structured', 'ADJ'), ('multilabel', 'NOUN'), ('classification', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('structured', 'amod'), ('multilabel', 'compound'), ('classification', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[structured, multilabel], [multilabel, classification], [classification, .]]

>> Trigrams: 
[[structured, multilabel, classification], [multilabel, classification, .]]

>> Noun Phrases are: 
[structured multilabel classification]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Proceedings of the conference on Human   


>> Tokens are: 
[Proceedings, conference, Human,  ] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('conference', 'NOUN'), ('Human', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('conference', 'pobj'), ('Human', 'compound'), (' ', 'pobj')]

>> Bigrams: 
[[Proceedings, conference], [conference, Human], [Human,  ]]

>> Trigrams: 
[[Proceedings, conference, Human], [conference, Human,  ]]

>> Noun Phrases are: 
[Proceedings, the conference]

>> Named Entities are: 
[] 


================================ Paragraph 661 =================================

Language Technology and Empirical Methods in Natural Language Processing (pp. 987- 

------------------- Sentence 1 -------------------

Language Technology and Empirical Methods in Natural Language Processing (pp. 


>> Tokens are: 
[Language, Technology, Empirical, Methods, Natural, Language, Processing, (, pp, .] 

>> PoS Tags are: 
[('Language', 'PROPN'), ('Technology', 'PROPN'), ('Empirical', 'PROPN'), ('Methods', 'PROPN'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'PROPN'), ('(', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Language', 'compound'), ('Technology', 'ROOT'), ('Empirical', 'compound'), ('Methods', 'conj'), ('Natural', 'compound'), ('Language', 'compound'), ('Processing', 'pobj'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Language, Technology], [Technology, Empirical], [Empirical, Methods], [Methods, Natural], [Natural, Language], [Language, Processing], [Processing, (], [(, pp], [pp, .]]

>> Trigrams: 
[[Language, Technology, Empirical], [Technology, Empirical, Methods], [Empirical, Methods, Natural], [Methods, Natural, Language], [Natural, Language, Processing], [Language, Processing, (], [Processing, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[Language Technology, Empirical Methods, Natural Language Processing]

>> Named Entities are: 
[('Language Technology', 'ORG'), ('Empirical Methods in Natural Language Processing', 'ORG')] 

------------------- Sentence 2 -------------------

987- 


>> Tokens are: 
[987-] 

>> PoS Tags are: 
[('987-', 'NUM')] 

>> Dependency Tags are: 
[('987-', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 662 =================================

994). Association for Computational Linguistics.  

------------------- Sentence 1 -------------------

994). 


>> Tokens are: 
[994, ), .] 

>> PoS Tags are: 
[('994', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('994', 'ROOT'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[994, )], [), .]]

>> Trigrams: 
[[994, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('994', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Association for Computational Linguistics. 


>> Tokens are: 
[Association, Computational, Linguistics, .] 

>> PoS Tags are: 
[('Association', 'PROPN'), ('Computational', 'PROPN'), ('Linguistics', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Association', 'ROOT'), ('Computational', 'compound'), ('Linguistics', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Association, Computational], [Computational, Linguistics], [Linguistics, .]]

>> Trigrams: 
[[Association, Computational, Linguistics], [Computational, Linguistics, .]]

>> Noun Phrases are: 
[Association, Computational Linguistics]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 663 =================================

[32] Sun, X., Morency, L. P., Okanohara, D., & Tsujii, J. I. (2008, August). Modeling latent- 

------------------- Sentence 1 -------------------

[32] Sun, X., Morency, L. P., Okanohara, D., & Tsujii, J. I. (2008, August). 


>> Tokens are: 
[[, 32, ], Sun, ,, X., ,, Morency, ,, L., P., ,, Okanohara, ,, D., ,, &, Tsujii, ,, J., I., (, 2008, ,, August, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('32', 'NUM'), (']', 'PUNCT'), ('Sun', 'PROPN'), (',', 'PUNCT'), ('X.', 'PROPN'), (',', 'PUNCT'), ('Morency', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('P.', 'PROPN'), (',', 'PUNCT'), ('Okanohara', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Tsujii', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('I.', 'PROPN'), ('(', 'PUNCT'), ('2008', 'NUM'), (',', 'PUNCT'), ('August', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('32', 'nummod'), (']', 'punct'), ('Sun', 'ROOT'), (',', 'punct'), ('X.', 'conj'), (',', 'punct'), ('Morency', 'conj'), (',', 'punct'), ('L.', 'compound'), ('P.', 'conj'), (',', 'punct'), ('Okanohara', 'conj'), (',', 'punct'), ('D.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Tsujii', 'conj'), (',', 'punct'), ('J.', 'compound'), ('I.', 'conj'), ('(', 'punct'), ('2008', 'appos'), (',', 'punct'), ('August', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 32], [32, ]], [], Sun], [Sun, ,], [,, X.], [X., ,], [,, Morency], [Morency, ,], [,, L.], [L., P.], [P., ,], [,, Okanohara], [Okanohara, ,], [,, D.], [D., ,], [,, &], [&, Tsujii], [Tsujii, ,], [,, J.], [J., I.], [I., (], [(, 2008], [2008, ,], [,, August], [August, )], [), .]]

>> Trigrams: 
[[[, 32, ]], [32, ], Sun], [], Sun, ,], [Sun, ,, X.], [,, X., ,], [X., ,, Morency], [,, Morency, ,], [Morency, ,, L.], [,, L., P.], [L., P., ,], [P., ,, Okanohara], [,, Okanohara, ,], [Okanohara, ,, D.], [,, D., ,], [D., ,, &], [,, &, Tsujii], [&, Tsujii, ,], [Tsujii, ,, J.], [,, J., I.], [J., I., (], [I., (, 2008], [(, 2008, ,], [2008, ,, August], [,, August, )], [August, ), .]]

>> Noun Phrases are: 
[[32] Sun, X., Morency, L. P., Okanohara, D., Tsujii, J. I.]

>> Named Entities are: 
[('32', 'CARDINAL'), ('L. P.', 'PERSON'), ('Okanohara', 'GPE'), ('D.', 'NORP'), ('J. I. (2008', 'PERSON'), ('August', 'DATE')] 

------------------- Sentence 2 -------------------

Modeling latent- 


>> Tokens are: 
[Modeling, latent-] 

>> PoS Tags are: 
[('Modeling', 'VERB'), ('latent-', 'ADJ')] 

>> Dependency Tags are: 
[('Modeling', 'ROOT'), ('latent-', 'advmod')]

>> Bigrams: 
[[Modeling, latent-]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 664 =================================

dynamic in shallow parsing: a latent conditional model with improved inference. 

------------------- Sentence 1 -------------------

dynamic in shallow parsing: a latent conditional model with improved inference. 


>> Tokens are: 
[dynamic, shallow, parsing, :, latent, conditional, model, improved, inference, .] 

>> PoS Tags are: 
[('dynamic', 'ADJ'), ('shallow', 'ADJ'), ('parsing', 'NOUN'), (':', 'PUNCT'), ('latent', 'ADJ'), ('conditional', 'ADJ'), ('model', 'NOUN'), ('improved', 'VERB'), ('inference', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('dynamic', 'ROOT'), ('shallow', 'amod'), ('parsing', 'pobj'), (':', 'punct'), ('latent', 'amod'), ('conditional', 'amod'), ('model', 'appos'), ('improved', 'amod'), ('inference', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[dynamic, shallow], [shallow, parsing], [parsing, :], [:, latent], [latent, conditional], [conditional, model], [model, improved], [improved, inference], [inference, .]]

>> Trigrams: 
[[dynamic, shallow, parsing], [shallow, parsing, :], [parsing, :, latent], [:, latent, conditional], [latent, conditional, model], [conditional, model, improved], [model, improved, inference], [improved, inference, .]]

>> Noun Phrases are: 
[shallow parsing, a latent conditional model, improved inference]

>> Named Entities are: 
[] 


================================ Paragraph 665 =================================

In Proceedings of the 22nd International Conference on Computational Linguistics-Volume  

------------------- Sentence 1 -------------------

In Proceedings of the 22nd International Conference on Computational Linguistics-Volume   


>> Tokens are: 
[Proceedings, 22nd, International, Conference, Computational, Linguistics, -, Volume,  ] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('22nd', 'ADJ'), ('International', 'PROPN'), ('Conference', 'PROPN'), ('Computational', 'PROPN'), ('Linguistics', 'PROPN'), ('-', 'PUNCT'), ('Volume', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('22nd', 'compound'), ('International', 'compound'), ('Conference', 'pobj'), ('Computational', 'compound'), ('Linguistics', 'compound'), ('-', 'punct'), ('Volume', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Proceedings, 22nd], [22nd, International], [International, Conference], [Conference, Computational], [Computational, Linguistics], [Linguistics, -], [-, Volume], [Volume,  ]]

>> Trigrams: 
[[Proceedings, 22nd, International], [22nd, International, Conference], [International, Conference, Computational], [Conference, Computational, Linguistics], [Computational, Linguistics, -], [Linguistics, -, Volume], [-, Volume,  ]]

>> Noun Phrases are: 
[Proceedings, the 22nd International Conference, Computational Linguistics-Volume]

>> Named Entities are: 
[('Proceedings', 'GPE'), ('22nd', 'ORDINAL'), ('International Conference on', 'EVENT')] 


================================ Paragraph 666 =================================

1 (pp. 841-848). Association for Computational Linguistics.  

------------------- Sentence 1 -------------------

1 (pp. 


>> Tokens are: 
[1, (, pp, .] 

>> PoS Tags are: 
[('1', 'NUM'), ('(', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1', 'ROOT'), ('(', 'punct'), ('pp', 'prep'), ('.', 'punct')]

>> Bigrams: 
[[1, (], [(, pp], [pp, .]]

>> Trigrams: 
[[1, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1', 'CARDINAL')] 

------------------- Sentence 2 -------------------

841-848). 


>> Tokens are: 
[841, -, 848, ), .] 

>> PoS Tags are: 
[('841', 'NUM'), ('-', 'SYM'), ('848', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('841', 'ROOT'), ('-', 'punct'), ('848', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[841, -], [-, 848], [848, )], [), .]]

>> Trigrams: 
[[841, -, 848], [-, 848, )], [848, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Association for Computational Linguistics. 


>> Tokens are: 
[Association, Computational, Linguistics, .] 

>> PoS Tags are: 
[('Association', 'PROPN'), ('Computational', 'PROPN'), ('Linguistics', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Association', 'ROOT'), ('Computational', 'compound'), ('Linguistics', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Association, Computational], [Computational, Linguistics], [Linguistics, .]]

>> Trigrams: 
[[Association, Computational, Linguistics], [Computational, Linguistics, .]]

>> Noun Phrases are: 
[Association, Computational Linguistics]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 667 =================================

[33] Ritter, A., Clark, S., & Etzioni, O. (2011, July). Named entity recognition in tweets: an  

------------------- Sentence 1 -------------------

[33] Ritter, A., Clark, S., & Etzioni, O. (2011, July). 


>> Tokens are: 
[[, 33, ], Ritter, ,, A., ,, Clark, ,, S., ,, &, Etzioni, ,, O., (, 2011, ,, July, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('33', 'NUM'), (']', 'PUNCT'), ('Ritter', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), (',', 'PUNCT'), ('Clark', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Etzioni', 'PROPN'), (',', 'PUNCT'), ('O.', 'PROPN'), ('(', 'PUNCT'), ('2011', 'NUM'), (',', 'PUNCT'), ('July', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('33', 'dep'), (']', 'dep'), ('Ritter', 'ROOT'), (',', 'punct'), ('A.', 'conj'), (',', 'punct'), ('Clark', 'conj'), (',', 'punct'), ('S.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Etzioni', 'conj'), (',', 'punct'), ('O.', 'appos'), ('(', 'punct'), ('2011', 'appos'), (',', 'punct'), ('July', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 33], [33, ]], [], Ritter], [Ritter, ,], [,, A.], [A., ,], [,, Clark], [Clark, ,], [,, S.], [S., ,], [,, &], [&, Etzioni], [Etzioni, ,], [,, O.], [O., (], [(, 2011], [2011, ,], [,, July], [July, )], [), .]]

>> Trigrams: 
[[[, 33, ]], [33, ], Ritter], [], Ritter, ,], [Ritter, ,, A.], [,, A., ,], [A., ,, Clark], [,, Clark, ,], [Clark, ,, S.], [,, S., ,], [S., ,, &], [,, &, Etzioni], [&, Etzioni, ,], [Etzioni, ,, O.], [,, O., (], [O., (, 2011], [(, 2011, ,], [2011, ,, July], [,, July, )], [July, ), .]]

>> Noun Phrases are: 
[[33] Ritter, A., Clark, S., Etzioni, O.]

>> Named Entities are: 
[('33', 'CARDINAL'), ('Clark', 'GPE'), ('July', 'DATE')] 

------------------- Sentence 2 -------------------

Named entity recognition in tweets: 


>> Tokens are: 
[Named, entity, recognition, tweets, :] 

>> PoS Tags are: 
[('Named', 'VERB'), ('entity', 'NOUN'), ('recognition', 'NOUN'), ('tweets', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Named', 'ROOT'), ('entity', 'compound'), ('recognition', 'oprd'), ('tweets', 'pobj'), (':', 'punct')]

>> Bigrams: 
[[Named, entity], [entity, recognition], [recognition, tweets], [tweets, :]]

>> Trigrams: 
[[Named, entity, recognition], [entity, recognition, tweets], [recognition, tweets, :]]

>> Noun Phrases are: 
[entity recognition, tweets]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

an   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 668 =================================

experimental study. In Proceedings of the Conference on Empirical Methods in Natural  

------------------- Sentence 1 -------------------

experimental study. 


>> Tokens are: 
[experimental, study, .] 

>> PoS Tags are: 
[('experimental', 'ADJ'), ('study', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('experimental', 'amod'), ('study', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[experimental, study], [study, .]]

>> Trigrams: 
[[experimental, study, .]]

>> Noun Phrases are: 
[experimental study]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Proceedings of the Conference on Empirical Methods in Natural   


>> Tokens are: 
[Proceedings, Conference, Empirical, Methods, Natural,  ] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('Conference', 'PROPN'), ('Empirical', 'PROPN'), ('Methods', 'PROPN'), ('Natural', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('Conference', 'pobj'), ('Empirical', 'compound'), ('Methods', 'pobj'), ('Natural', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Proceedings, Conference], [Conference, Empirical], [Empirical, Methods], [Methods, Natural], [Natural,  ]]

>> Trigrams: 
[[Proceedings, Conference, Empirical], [Conference, Empirical, Methods], [Empirical, Methods, Natural], [Methods, Natural,  ]]

>> Noun Phrases are: 
[Proceedings, the Conference, Empirical Methods, Natural]

>> Named Entities are: 
[('Proceedings of the Conference on Empirical Methods in Natural', 'ORG')] 


================================ Paragraph 669 =================================

Language Processing (pp. 1524-1534). Association for Computational Linguistics.  

------------------- Sentence 1 -------------------

Language Processing (pp. 


>> Tokens are: 
[Language, Processing, (, pp, .] 

>> PoS Tags are: 
[('Language', 'PROPN'), ('Processing', 'PROPN'), ('(', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Language', 'compound'), ('Processing', 'ROOT'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Language, Processing], [Processing, (], [(, pp], [pp, .]]

>> Trigrams: 
[[Language, Processing, (], [Processing, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[Language Processing, pp]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

1524-1534). 


>> Tokens are: 
[1524, -, 1534, ), .] 

>> PoS Tags are: 
[('1524', 'NUM'), ('-', 'SYM'), ('1534', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1524', 'ROOT'), ('-', 'punct'), ('1534', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[1524, -], [-, 1534], [1534, )], [), .]]

>> Trigrams: 
[[1524, -, 1534], [-, 1534, )], [1534, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1524-1534', 'DATE')] 

------------------- Sentence 3 -------------------

Association for Computational Linguistics. 


>> Tokens are: 
[Association, Computational, Linguistics, .] 

>> PoS Tags are: 
[('Association', 'PROPN'), ('Computational', 'PROPN'), ('Linguistics', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Association', 'ROOT'), ('Computational', 'compound'), ('Linguistics', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Association, Computational], [Computational, Linguistics], [Linguistics, .]]

>> Trigrams: 
[[Association, Computational, Linguistics], [Computational, Linguistics, .]]

>> Noun Phrases are: 
[Association, Computational Linguistics]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 670 =================================

[34] Sharma, S., Srinivas, PYKL, & Balabantaray, RC (2016). Emotion Detection using  

------------------- Sentence 1 -------------------

[34] Sharma, S., Srinivas, PYKL, & Balabantaray, RC (2016). 


>> Tokens are: 
[[, 34, ], Sharma, ,, S., ,, Srinivas, ,, PYKL, ,, &, Balabantaray, ,, RC, (, 2016, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('34', 'NUM'), (']', 'PUNCT'), ('Sharma', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), (',', 'PUNCT'), ('Srinivas', 'PROPN'), (',', 'PUNCT'), ('PYKL', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Balabantaray', 'PROPN'), (',', 'PUNCT'), ('RC', 'PROPN'), ('(', 'PUNCT'), ('2016', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('34', 'nummod'), (']', 'punct'), ('Sharma', 'ROOT'), (',', 'punct'), ('S.', 'appos'), (',', 'punct'), ('Srinivas', 'conj'), (',', 'punct'), ('PYKL', 'conj'), (',', 'punct'), ('&', 'cc'), ('Balabantaray', 'conj'), (',', 'punct'), ('RC', 'appos'), ('(', 'punct'), ('2016', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 34], [34, ]], [], Sharma], [Sharma, ,], [,, S.], [S., ,], [,, Srinivas], [Srinivas, ,], [,, PYKL], [PYKL, ,], [,, &], [&, Balabantaray], [Balabantaray, ,], [,, RC], [RC, (], [(, 2016], [2016, )], [), .]]

>> Trigrams: 
[[[, 34, ]], [34, ], Sharma], [], Sharma, ,], [Sharma, ,, S.], [,, S., ,], [S., ,, Srinivas], [,, Srinivas, ,], [Srinivas, ,, PYKL], [,, PYKL, ,], [PYKL, ,, &], [,, &, Balabantaray], [&, Balabantaray, ,], [Balabantaray, ,, RC], [,, RC, (], [RC, (, 2016], [(, 2016, )], [2016, ), .]]

>> Noun Phrases are: 
[[34] Sharma, S., Srinivas, PYKL, Balabantaray, RC]

>> Named Entities are: 
[('34', 'CARDINAL'), ('PYKL', 'ORG'), ('& Balabantaray', 'ORG'), ('2016', 'DATE')] 

------------------- Sentence 2 -------------------

Emotion Detection using   


>> Tokens are: 
[Emotion, Detection,  ] 

>> PoS Tags are: 
[('Emotion', 'PROPN'), ('Detection', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Emotion', 'compound'), ('Detection', 'nsubj'), (' ', 'dobj')]

>> Bigrams: 
[[Emotion, Detection], [Detection,  ]]

>> Trigrams: 
[[Emotion, Detection,  ]]

>> Noun Phrases are: 
[Emotion Detection]

>> Named Entities are: 
[('Emotion Detection', 'ORG')] 


================================ Paragraph 671 =================================

Online Machine Learning Method and TLBO on Mixed Script. In Proceedings of Language  

------------------- Sentence 1 -------------------

Online Machine Learning Method and TLBO on Mixed Script. 


>> Tokens are: 
[Online, Machine, Learning, Method, TLBO, Mixed, Script, .] 

>> PoS Tags are: 
[('Online', 'ADJ'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('Method', 'PROPN'), ('TLBO', 'PROPN'), ('Mixed', 'PROPN'), ('Script', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Online', 'amod'), ('Machine', 'compound'), ('Learning', 'compound'), ('Method', 'ROOT'), ('TLBO', 'conj'), ('Mixed', 'compound'), ('Script', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Online, Machine], [Machine, Learning], [Learning, Method], [Method, TLBO], [TLBO, Mixed], [Mixed, Script], [Script, .]]

>> Trigrams: 
[[Online, Machine, Learning], [Machine, Learning, Method], [Learning, Method, TLBO], [Method, TLBO, Mixed], [TLBO, Mixed, Script], [Mixed, Script, .]]

>> Noun Phrases are: 
[Online Machine Learning Method, TLBO, Mixed Script]

>> Named Entities are: 
[('Mixed Script', 'GPE')] 

------------------- Sentence 2 -------------------

In Proceedings of Language   


>> Tokens are: 
[Proceedings, Language,  ] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('Language', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('Language', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Proceedings, Language], [Language,  ]]

>> Trigrams: 
[[Proceedings, Language,  ]]

>> Noun Phrases are: 
[Proceedings, Language]

>> Named Entities are: 
[('Proceedings of Language', 'LOC')] 


================================ Paragraph 672 =================================

Resources and Evaluation Conference 2016 (pp. 47-51).  

------------------- Sentence 1 -------------------

Resources and Evaluation Conference 2016 (pp. 


>> Tokens are: 
[Resources, Evaluation, Conference, 2016, (, pp, .] 

>> PoS Tags are: 
[('Resources', 'PROPN'), ('Evaluation', 'PROPN'), ('Conference', 'PROPN'), ('2016', 'NUM'), ('(', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Resources', 'nmod'), ('Evaluation', 'conj'), ('Conference', 'ROOT'), ('2016', 'appos'), ('(', 'punct'), ('pp', 'parataxis'), ('.', 'punct')]

>> Bigrams: 
[[Resources, Evaluation], [Evaluation, Conference], [Conference, 2016], [2016, (], [(, pp], [pp, .]]

>> Trigrams: 
[[Resources, Evaluation, Conference], [Evaluation, Conference, 2016], [Conference, 2016, (], [2016, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[Resources and Evaluation Conference]

>> Named Entities are: 
[('2016', 'DATE')] 

------------------- Sentence 2 -------------------

47-51). 


>> Tokens are: 
[47, -, 51, ), .] 

>> PoS Tags are: 
[('47', 'NUM'), ('-', 'SYM'), ('51', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('47', 'nummod'), ('-', 'punct'), ('51', 'ROOT'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[47, -], [-, 51], [51, )], [), .]]

>> Trigrams: 
[[47, -, 51], [-, 51, )], [51, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('47-51', 'DATE')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 673 =================================

[35] Palmer, M., Gildea, D., & Kingsbury, P. (2005). The proposition bank: An annotated  

------------------- Sentence 1 -------------------

[35] Palmer, M., Gildea, D., & Kingsbury, P. (2005). 


>> Tokens are: 
[[, 35, ], Palmer, ,, M., ,, Gildea, ,, D., ,, &, Kingsbury, ,, P., (, 2005, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('35', 'NUM'), (']', 'PUNCT'), ('Palmer', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), (',', 'PUNCT'), ('Gildea', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Kingsbury', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('(', 'PUNCT'), ('2005', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('35', 'nummod'), (']', 'punct'), ('Palmer', 'ROOT'), (',', 'punct'), ('M.', 'conj'), (',', 'punct'), ('Gildea', 'conj'), (',', 'punct'), ('D.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Kingsbury', 'conj'), (',', 'punct'), ('P.', 'conj'), ('(', 'punct'), ('2005', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 35], [35, ]], [], Palmer], [Palmer, ,], [,, M.], [M., ,], [,, Gildea], [Gildea, ,], [,, D.], [D., ,], [,, &], [&, Kingsbury], [Kingsbury, ,], [,, P.], [P., (], [(, 2005], [2005, )], [), .]]

>> Trigrams: 
[[[, 35, ]], [35, ], Palmer], [], Palmer, ,], [Palmer, ,, M.], [,, M., ,], [M., ,, Gildea], [,, Gildea, ,], [Gildea, ,, D.], [,, D., ,], [D., ,, &], [,, &, Kingsbury], [&, Kingsbury, ,], [Kingsbury, ,, P.], [,, P., (], [P., (, 2005], [(, 2005, )], [2005, ), .]]

>> Noun Phrases are: 
[[35] Palmer, M., Gildea, D., Kingsbury, P.]

>> Named Entities are: 
[('35', 'CARDINAL'), ('Gildea', 'PERSON'), ('D.', 'NORP'), ('& Kingsbury', 'GPE'), ('P.', 'ORG')] 

------------------- Sentence 2 -------------------

The proposition bank: An annotated   


>> Tokens are: 
[proposition, bank, :, annotated,  ] 

>> PoS Tags are: 
[('proposition', 'NOUN'), ('bank', 'NOUN'), (':', 'PUNCT'), ('annotated', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('proposition', 'compound'), ('bank', 'ROOT'), (':', 'punct'), ('annotated', 'amod'), (' ', 'appos')]

>> Bigrams: 
[[proposition, bank], [bank, :], [:, annotated], [annotated,  ]]

>> Trigrams: 
[[proposition, bank, :], [bank, :, annotated], [:, annotated,  ]]

>> Noun Phrases are: 
[The proposition bank]

>> Named Entities are: 
[] 


================================ Paragraph 674 =================================

corpus of semantic roles. Computational linguistics, 31(1), 71-106.  

------------------- Sentence 1 -------------------

corpus of semantic roles. 


>> Tokens are: 
[corpus, semantic, roles, .] 

>> PoS Tags are: 
[('corpus', 'NOUN'), ('semantic', 'ADJ'), ('roles', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('corpus', 'ROOT'), ('semantic', 'amod'), ('roles', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[corpus, semantic], [semantic, roles], [roles, .]]

>> Trigrams: 
[[corpus, semantic, roles], [semantic, roles, .]]

>> Noun Phrases are: 
[corpus, semantic roles]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Computational linguistics, 31(1), 71-106.   


>> Tokens are: 
[Computational, linguistics, ,, 31(1, ), ,, 71, -, 106, .,  ] 

>> PoS Tags are: 
[('Computational', 'ADJ'), ('linguistics', 'NOUN'), (',', 'PUNCT'), ('31(1', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('71', 'NUM'), ('-', 'SYM'), ('106', 'NUM'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Computational', 'amod'), ('linguistics', 'ROOT'), (',', 'punct'), ('31(1', 'appos'), (')', 'punct'), (',', 'punct'), ('71', 'appos'), ('-', 'punct'), ('106', 'prep'), ('.', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Computational, linguistics], [linguistics, ,], [,, 31(1], [31(1, )], [), ,], [,, 71], [71, -], [-, 106], [106, .], [.,  ]]

>> Trigrams: 
[[Computational, linguistics, ,], [linguistics, ,, 31(1], [,, 31(1, )], [31(1, ), ,], [), ,, 71], [,, 71, -], [71, -, 106], [-, 106, .], [106, .,  ]]

>> Noun Phrases are: 
[Computational linguistics]

>> Named Entities are: 
[('31(1', 'CARDINAL'), ('71', 'CARDINAL')] 


================================ Paragraph 675 =================================

[36] Benson, E., Haghighi, A., & Barzilay, R. (2011, June). Event discovery in social media  

------------------- Sentence 1 -------------------

[36] Benson, E., Haghighi, A., & Barzilay, R. (2011, June). 


>> Tokens are: 
[[, 36, ], Benson, ,, E., ,, Haghighi, ,, A., ,, &, Barzilay, ,, R., (, 2011, ,, June, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('36', 'NUM'), (']', 'PUNCT'), ('Benson', 'PROPN'), (',', 'PUNCT'), ('E.', 'PROPN'), (',', 'PUNCT'), ('Haghighi', 'PROPN'), (',', 'PUNCT'), ('A.', 'NOUN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Barzilay', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('(', 'PUNCT'), ('2011', 'NUM'), (',', 'PUNCT'), ('June', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('36', 'nummod'), (']', 'punct'), ('Benson', 'ROOT'), (',', 'punct'), ('E.', 'conj'), (',', 'punct'), ('Haghighi', 'conj'), (',', 'punct'), ('A.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Barzilay', 'conj'), (',', 'punct'), ('R.', 'appos'), ('(', 'punct'), ('2011', 'npadvmod'), (',', 'punct'), ('June', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 36], [36, ]], [], Benson], [Benson, ,], [,, E.], [E., ,], [,, Haghighi], [Haghighi, ,], [,, A.], [A., ,], [,, &], [&, Barzilay], [Barzilay, ,], [,, R.], [R., (], [(, 2011], [2011, ,], [,, June], [June, )], [), .]]

>> Trigrams: 
[[[, 36, ]], [36, ], Benson], [], Benson, ,], [Benson, ,, E.], [,, E., ,], [E., ,, Haghighi], [,, Haghighi, ,], [Haghighi, ,, A.], [,, A., ,], [A., ,, &], [,, &, Barzilay], [&, Barzilay, ,], [Barzilay, ,, R.], [,, R., (], [R., (, 2011], [(, 2011, ,], [2011, ,, June], [,, June, )], [June, ), .]]

>> Noun Phrases are: 
[[36] Benson, E., Haghighi, A., Barzilay, R.]

>> Named Entities are: 
[('36', 'CARDINAL'), ('R.', 'NORP'), ('June', 'DATE')] 

------------------- Sentence 2 -------------------

Event discovery in social media   


>> Tokens are: 
[Event, discovery, social, media,  ] 

>> PoS Tags are: 
[('Event', 'NOUN'), ('discovery', 'NOUN'), ('social', 'ADJ'), ('media', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Event', 'compound'), ('discovery', 'ROOT'), ('social', 'amod'), ('media', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Event, discovery], [discovery, social], [social, media], [media,  ]]

>> Trigrams: 
[[Event, discovery, social], [discovery, social, media], [social, media,  ]]

>> Noun Phrases are: 
[Event discovery, social media]

>> Named Entities are: 
[] 


================================ Paragraph 676 =================================

feeds. In Proceedings of the 49th Annual Meeting of the Association for Computational  

------------------- Sentence 1 -------------------

feeds. 


>> Tokens are: 
[feeds, .] 

>> PoS Tags are: 
[('feeds', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('feeds', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[feeds, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Proceedings of the 49th Annual Meeting of the Association for Computational   


>> Tokens are: 
[Proceedings, 49th, Annual, Meeting, Association, Computational,  ] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('49th', 'ADJ'), ('Annual', 'PROPN'), ('Meeting', 'PROPN'), ('Association', 'PROPN'), ('Computational', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('49th', 'amod'), ('Annual', 'compound'), ('Meeting', 'pobj'), ('Association', 'pobj'), ('Computational', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Proceedings, 49th], [49th, Annual], [Annual, Meeting], [Meeting, Association], [Association, Computational], [Computational,  ]]

>> Trigrams: 
[[Proceedings, 49th, Annual], [49th, Annual, Meeting], [Annual, Meeting, Association], [Meeting, Association, Computational], [Association, Computational,  ]]

>> Noun Phrases are: 
[Proceedings, the 49th Annual Meeting, the Association, Computational]

>> Named Entities are: 
[('Proceedings', 'PERSON'), ('49th', 'ORDINAL'), ('the Association for Computational', 'ORG')] 


================================ Paragraph 677 =================================

Linguistics: Human Language Technologies-Volume 1 (pp. 389-398). Association for  

------------------- Sentence 1 -------------------

Linguistics: Human Language Technologies-Volume 1 (pp. 


>> Tokens are: 
[Linguistics, :, Human, Language, Technologies, -, Volume, 1, (, pp, .] 

>> PoS Tags are: 
[('Linguistics', 'NOUN'), (':', 'PUNCT'), ('Human', 'PROPN'), ('Language', 'PROPN'), ('Technologies', 'PROPN'), ('-', 'PUNCT'), ('Volume', 'NOUN'), ('1', 'NUM'), ('(', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Linguistics', 'ROOT'), (':', 'punct'), ('Human', 'compound'), ('Language', 'compound'), ('Technologies', 'compound'), ('-', 'punct'), ('Volume', 'appos'), ('1', 'nummod'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Linguistics, :], [:, Human], [Human, Language], [Language, Technologies], [Technologies, -], [-, Volume], [Volume, 1], [1, (], [(, pp], [pp, .]]

>> Trigrams: 
[[Linguistics, :, Human], [:, Human, Language], [Human, Language, Technologies], [Language, Technologies, -], [Technologies, -, Volume], [-, Volume, 1], [Volume, 1, (], [1, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[Linguistics, Human Language Technologies-Volume]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

389-398). 


>> Tokens are: 
[389, -, 398, ), .] 

>> PoS Tags are: 
[('389', 'NUM'), ('-', 'SYM'), ('398', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('389', 'ROOT'), ('-', 'punct'), ('398', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[389, -], [-, 398], [398, )], [), .]]

>> Trigrams: 
[[389, -, 398], [-, 398, )], [398, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('389', 'CARDINAL')] 

------------------- Sentence 3 -------------------

Association for   


>> Tokens are: 
[Association,  ] 

>> PoS Tags are: 
[('Association', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Association', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[Association,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Association]

>> Named Entities are: 
[] 


================================ Paragraph 678 =================================

Computational Linguistics.  

------------------- Sentence 1 -------------------

Computational Linguistics. 


>> Tokens are: 
[Computational, Linguistics, .] 

>> PoS Tags are: 
[('Computational', 'PROPN'), ('Linguistics', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Computational', 'compound'), ('Linguistics', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Computational, Linguistics], [Linguistics, .]]

>> Trigrams: 
[[Computational, Linguistics, .]]

>> Noun Phrases are: 
[Computational Linguistics]

>> Named Entities are: 
[('Computational Linguistics', 'PERSON')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 679 =================================

[37] Tillmann, C., Vogel, S., Ney, H., Zubiaga, A., & Sawaf, H. (1997, September).  

------------------- Sentence 1 -------------------

[37] Tillmann, C., Vogel, S., Ney, H., Zubiaga, A., & Sawaf, H. (1997, September). 


>> Tokens are: 
[[, 37, ], Tillmann, ,, C., ,, Vogel, ,, S., ,, Ney, ,, H., ,, Zubiaga, ,, A., ,, &, Sawaf, ,, H., (, 1997, ,, September, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('37', 'NUM'), (']', 'PUNCT'), ('Tillmann', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), (',', 'PUNCT'), ('Vogel', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), (',', 'PUNCT'), ('Ney', 'PROPN'), (',', 'PUNCT'), ('H.', 'PROPN'), (',', 'PUNCT'), ('Zubiaga', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Sawaf', 'PROPN'), (',', 'PUNCT'), ('H.', 'PROPN'), ('(', 'PUNCT'), ('1997', 'NUM'), (',', 'PUNCT'), ('September', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('37', 'nummod'), (']', 'punct'), ('Tillmann', 'ROOT'), (',', 'punct'), ('C.', 'appos'), (',', 'punct'), ('Vogel', 'conj'), (',', 'punct'), ('S.', 'conj'), (',', 'punct'), ('Ney', 'conj'), (',', 'punct'), ('H.', 'nmod'), (',', 'punct'), ('Zubiaga', 'nmod'), (',', 'punct'), ('A.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Sawaf', 'conj'), (',', 'punct'), ('H.', 'conj'), ('(', 'punct'), ('1997', 'appos'), (',', 'punct'), ('September', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 37], [37, ]], [], Tillmann], [Tillmann, ,], [,, C.], [C., ,], [,, Vogel], [Vogel, ,], [,, S.], [S., ,], [,, Ney], [Ney, ,], [,, H.], [H., ,], [,, Zubiaga], [Zubiaga, ,], [,, A.], [A., ,], [,, &], [&, Sawaf], [Sawaf, ,], [,, H.], [H., (], [(, 1997], [1997, ,], [,, September], [September, )], [), .]]

>> Trigrams: 
[[[, 37, ]], [37, ], Tillmann], [], Tillmann, ,], [Tillmann, ,, C.], [,, C., ,], [C., ,, Vogel], [,, Vogel, ,], [Vogel, ,, S.], [,, S., ,], [S., ,, Ney], [,, Ney, ,], [Ney, ,, H.], [,, H., ,], [H., ,, Zubiaga], [,, Zubiaga, ,], [Zubiaga, ,, A.], [,, A., ,], [A., ,, &], [,, &, Sawaf], [&, Sawaf, ,], [Sawaf, ,, H.], [,, H., (], [H., (, 1997], [(, 1997, ,], [1997, ,, September], [,, September, )], [September, ), .]]

>> Noun Phrases are: 
[[37] Tillmann, C., Vogel, S., Ney, H., Zubiaga, A., Sawaf, H.]

>> Named Entities are: 
[('37', 'CARDINAL'), ('Vogel', 'GPE'), ('1997', 'DATE'), ('September', 'DATE')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 680 =================================

Accelerated DP based search for statistical translation. In Eurospeech.  

------------------- Sentence 1 -------------------

Accelerated DP based search for statistical translation. 


>> Tokens are: 
[Accelerated, DP, based, search, statistical, translation, .] 

>> PoS Tags are: 
[('Accelerated', 'ADJ'), ('DP', 'PROPN'), ('based', 'VERB'), ('search', 'NOUN'), ('statistical', 'ADJ'), ('translation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Accelerated', 'amod'), ('DP', 'npadvmod'), ('based', 'amod'), ('search', 'ROOT'), ('statistical', 'amod'), ('translation', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Accelerated, DP], [DP, based], [based, search], [search, statistical], [statistical, translation], [translation, .]]

>> Trigrams: 
[[Accelerated, DP, based], [DP, based, search], [based, search, statistical], [search, statistical, translation], [statistical, translation, .]]

>> Noun Phrases are: 
[Accelerated DP based search, statistical translation]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Eurospeech.   


>> Tokens are: 
[Eurospeech, .,  ] 

>> PoS Tags are: 
[('Eurospeech', 'PROPN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Eurospeech', 'pobj'), ('.', 'punct'), (' ', 'pobj')]

>> Bigrams: 
[[Eurospeech, .], [.,  ]]

>> Trigrams: 
[[Eurospeech, .,  ]]

>> Noun Phrases are: 
[Eurospeech]

>> Named Entities are: 
[('Eurospeech', 'GPE')] 


================================ Paragraph 681 =================================

[38] Bangalore, S., Rambow, O., & Whittaker, S. (2000, June). Evaluation metrics for  

------------------- Sentence 1 -------------------

[38] Bangalore, S., Rambow, O., & Whittaker, S. (2000, June). 


>> Tokens are: 
[[, 38, ], Bangalore, ,, S., ,, Rambow, ,, O., ,, &, Whittaker, ,, S., (, 2000, ,, June, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('38', 'NUM'), (']', 'PUNCT'), ('Bangalore', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), (',', 'PUNCT'), ('Rambow', 'PROPN'), (',', 'PUNCT'), ('O.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Whittaker', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('(', 'PUNCT'), ('2000', 'NUM'), (',', 'PUNCT'), ('June', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('38', 'nmod'), (']', 'punct'), ('Bangalore', 'ROOT'), (',', 'punct'), ('S.', 'conj'), (',', 'punct'), ('Rambow', 'conj'), (',', 'punct'), ('O.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Whittaker', 'conj'), (',', 'punct'), ('S.', 'appos'), ('(', 'punct'), ('2000', 'appos'), (',', 'punct'), ('June', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 38], [38, ]], [], Bangalore], [Bangalore, ,], [,, S.], [S., ,], [,, Rambow], [Rambow, ,], [,, O.], [O., ,], [,, &], [&, Whittaker], [Whittaker, ,], [,, S.], [S., (], [(, 2000], [2000, ,], [,, June], [June, )], [), .]]

>> Trigrams: 
[[[, 38, ]], [38, ], Bangalore], [], Bangalore, ,], [Bangalore, ,, S.], [,, S., ,], [S., ,, Rambow], [,, Rambow, ,], [Rambow, ,, O.], [,, O., ,], [O., ,, &], [,, &, Whittaker], [&, Whittaker, ,], [Whittaker, ,, S.], [,, S., (], [S., (, 2000], [(, 2000, ,], [2000, ,, June], [,, June, )], [June, ), .]]

>> Noun Phrases are: 
[[38] Bangalore, S., Rambow, O., Whittaker, S.]

>> Named Entities are: 
[('38', 'CARDINAL'), ('S.', 'ORG'), ('June', 'DATE')] 

------------------- Sentence 2 -------------------

Evaluation metrics for   


>> Tokens are: 
[Evaluation, metrics,  ] 

>> PoS Tags are: 
[('Evaluation', 'NOUN'), ('metrics', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Evaluation', 'compound'), ('metrics', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[Evaluation, metrics], [metrics,  ]]

>> Trigrams: 
[[Evaluation, metrics,  ]]

>> Noun Phrases are: 
[Evaluation metrics]

>> Named Entities are: 
[] 


================================ Paragraph 682 =================================

generation. In Proceedings of the first international conference on Natural language  

------------------- Sentence 1 -------------------

generation. 


>> Tokens are: 
[generation, .] 

>> PoS Tags are: 
[('generation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('generation', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[generation, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[generation]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Proceedings of the first international conference on Natural language   


>> Tokens are: 
[Proceedings, international, conference, Natural, language,  ] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('international', 'ADJ'), ('conference', 'NOUN'), ('Natural', 'ADJ'), ('language', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('international', 'amod'), ('conference', 'pobj'), ('Natural', 'amod'), ('language', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Proceedings, international], [international, conference], [conference, Natural], [Natural, language], [language,  ]]

>> Trigrams: 
[[Proceedings, international, conference], [international, conference, Natural], [conference, Natural, language], [Natural, language,  ]]

>> Noun Phrases are: 
[Proceedings, the first international conference, Natural language]

>> Named Entities are: 
[('Proceedings', 'GPE'), ('first', 'ORDINAL')] 


================================ Paragraph 683 =================================

generation-Volume 14 (pp. 1-8). Association for Computational Linguistics  

------------------- Sentence 1 -------------------

generation-Volume 14 (pp. 


>> Tokens are: 
[generation, -, Volume, 14, (, pp, .] 

>> PoS Tags are: 
[('generation', 'NOUN'), ('-', 'PUNCT'), ('Volume', 'NOUN'), ('14', 'NUM'), ('(', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('generation', 'compound'), ('-', 'punct'), ('Volume', 'ROOT'), ('14', 'nummod'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[generation, -], [-, Volume], [Volume, 14], [14, (], [(, pp], [pp, .]]

>> Trigrams: 
[[generation, -, Volume], [-, Volume, 14], [Volume, 14, (], [14, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[generation-Volume]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

1-8). 


>> Tokens are: 
[1, -, 8), .] 

>> PoS Tags are: 
[('1', 'NUM'), ('-', 'SYM'), ('8)', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1', 'nummod'), ('-', 'punct'), ('8)', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[1, -], [-, 8)], [8), .]]

>> Trigrams: 
[[1, -, 8)], [-, 8), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Association for Computational Linguistics   


>> Tokens are: 
[Association, Computational, Linguistics,  ] 

>> PoS Tags are: 
[('Association', 'PROPN'), ('Computational', 'PROPN'), ('Linguistics', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Association', 'ROOT'), ('Computational', 'compound'), ('Linguistics', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Association, Computational], [Computational, Linguistics], [Linguistics,  ]]

>> Trigrams: 
[[Association, Computational, Linguistics], [Computational, Linguistics,  ]]

>> Noun Phrases are: 
[Association, Computational Linguistics]

>> Named Entities are: 
[] 


================================ Paragraph 684 =================================

[39] Nießen, S., Och, F. J., Leusch, G., & Ney, H. (2000, May). An Evaluation Tool for  

------------------- Sentence 1 -------------------

[39] Nießen, S., Och, F. J., Leusch, G., & Ney, H. (2000, May). 


>> Tokens are: 
[[, 39, ], Nießen, ,, S., ,, Och, ,, F., J., ,, Leusch, ,, G., ,, &, Ney, ,, H., (, 2000, ,, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('39', 'NUM'), (']', 'PUNCT'), ('Nießen', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), (',', 'PUNCT'), ('Och', 'PROPN'), (',', 'PUNCT'), ('F.', 'PROPN'), ('J.', 'PROPN'), (',', 'PUNCT'), ('Leusch', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Ney', 'PROPN'), (',', 'PUNCT'), ('H.', 'PROPN'), ('(', 'PUNCT'), ('2000', 'NUM'), (',', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('39', 'nummod'), (']', 'punct'), ('Nießen', 'ROOT'), (',', 'punct'), ('S.', 'appos'), (',', 'punct'), ('Och', 'conj'), (',', 'punct'), ('F.', 'compound'), ('J.', 'conj'), (',', 'punct'), ('Leusch', 'conj'), (',', 'punct'), ('G.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Ney', 'conj'), (',', 'punct'), ('H.', 'appos'), ('(', 'punct'), ('2000', 'appos'), (',', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 39], [39, ]], [], Nießen], [Nießen, ,], [,, S.], [S., ,], [,, Och], [Och, ,], [,, F.], [F., J.], [J., ,], [,, Leusch], [Leusch, ,], [,, G.], [G., ,], [,, &], [&, Ney], [Ney, ,], [,, H.], [H., (], [(, 2000], [2000, ,], [,, )], [), .]]

>> Trigrams: 
[[[, 39, ]], [39, ], Nießen], [], Nießen, ,], [Nießen, ,, S.], [,, S., ,], [S., ,, Och], [,, Och, ,], [Och, ,, F.], [,, F., J.], [F., J., ,], [J., ,, Leusch], [,, Leusch, ,], [Leusch, ,, G.], [,, G., ,], [G., ,, &], [,, &, Ney], [&, Ney, ,], [Ney, ,, H.], [,, H., (], [H., (, 2000], [(, 2000, ,], [2000, ,, )], [,, ), .]]

>> Noun Phrases are: 
[[39] Nießen, S., Och, F. J., Leusch, G., Ney, H., May]

>> Named Entities are: 
[('39', 'CARDINAL'), ('Nießen', 'ORG'), ('F. J.', 'PERSON'), ('Leusch, G., & Ney', 'ORG')] 

------------------- Sentence 2 -------------------

An Evaluation Tool for   


>> Tokens are: 
[Evaluation, Tool,  ] 

>> PoS Tags are: 
[('Evaluation', 'PROPN'), ('Tool', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Evaluation', 'compound'), ('Tool', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[Evaluation, Tool], [Tool,  ]]

>> Trigrams: 
[[Evaluation, Tool,  ]]

>> Noun Phrases are: 
[An Evaluation Tool]

>> Named Entities are: 
[] 


================================ Paragraph 685 =================================

Machine Translation: Fast Evaluation for MT Research. In LREC  

------------------- Sentence 1 -------------------

Machine Translation: Fast Evaluation for MT Research. 


>> Tokens are: 
[Machine, Translation, :, Fast, Evaluation, MT, Research, .] 

>> PoS Tags are: 
[('Machine', 'NOUN'), ('Translation', 'NOUN'), (':', 'PUNCT'), ('Fast', 'PROPN'), ('Evaluation', 'PROPN'), ('MT', 'PROPN'), ('Research', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Machine', 'compound'), ('Translation', 'ROOT'), (':', 'punct'), ('Fast', 'compound'), ('Evaluation', 'appos'), ('MT', 'compound'), ('Research', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Machine, Translation], [Translation, :], [:, Fast], [Fast, Evaluation], [Evaluation, MT], [MT, Research], [Research, .]]

>> Trigrams: 
[[Machine, Translation, :], [Translation, :, Fast], [:, Fast, Evaluation], [Fast, Evaluation, MT], [Evaluation, MT, Research], [MT, Research, .]]

>> Noun Phrases are: 
[Machine Translation, Fast Evaluation, MT Research]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In LREC   


>> Tokens are: 
[LREC,  ] 

>> PoS Tags are: 
[('LREC', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('LREC', 'pobj'), (' ', 'nummod')]

>> Bigrams: 
[[LREC,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[LREC]

>> Named Entities are: 
[] 


================================ Paragraph 686 =================================

[40] Papineni, K., Roukos, S., Ward, T., & Zhu, W. J. (2002, July). BLEU: a method for  

------------------- Sentence 1 -------------------

[40] Papineni, K., Roukos, S., Ward, T., & Zhu, W. J. (2002, July). 


>> Tokens are: 
[[, 40, ], Papineni, ,, K., ,, Roukos, ,, S., ,, Ward, ,, T., ,, &, Zhu, ,, W., J., (, 2002, ,, July, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('40', 'NUM'), (']', 'PUNCT'), ('Papineni', 'ADJ'), (',', 'PUNCT'), ('K.', 'PROPN'), (',', 'PUNCT'), ('Roukos', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), (',', 'PUNCT'), ('Ward', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Zhu', 'PROPN'), (',', 'PUNCT'), ('W.', 'PROPN'), ('J.', 'PROPN'), ('(', 'PUNCT'), ('2002', 'NUM'), (',', 'PUNCT'), ('July', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('40', 'nummod'), (']', 'punct'), ('Papineni', 'ROOT'), (',', 'punct'), ('K.', 'conj'), (',', 'punct'), ('Roukos', 'conj'), (',', 'punct'), ('S.', 'conj'), (',', 'punct'), ('Ward', 'conj'), (',', 'punct'), ('T.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Zhu', 'conj'), (',', 'punct'), ('W.', 'compound'), ('J.', 'conj'), ('(', 'punct'), ('2002', 'appos'), (',', 'punct'), ('July', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 40], [40, ]], [], Papineni], [Papineni, ,], [,, K.], [K., ,], [,, Roukos], [Roukos, ,], [,, S.], [S., ,], [,, Ward], [Ward, ,], [,, T.], [T., ,], [,, &], [&, Zhu], [Zhu, ,], [,, W.], [W., J.], [J., (], [(, 2002], [2002, ,], [,, July], [July, )], [), .]]

>> Trigrams: 
[[[, 40, ]], [40, ], Papineni], [], Papineni, ,], [Papineni, ,, K.], [,, K., ,], [K., ,, Roukos], [,, Roukos, ,], [Roukos, ,, S.], [,, S., ,], [S., ,, Ward], [,, Ward, ,], [Ward, ,, T.], [,, T., ,], [T., ,, &], [,, &, Zhu], [&, Zhu, ,], [Zhu, ,, W.], [,, W., J.], [W., J., (], [J., (, 2002], [(, 2002, ,], [2002, ,, July], [,, July, )], [July, ), .]]

>> Noun Phrases are: 
[K., Roukos, S., Ward, T., Zhu, W. J.]

>> Named Entities are: 
[('40', 'CARDINAL'), ('K.', 'NORP'), ('W. J.', 'PERSON'), ('July', 'DATE')] 

------------------- Sentence 2 -------------------

BLEU: a method for   


>> Tokens are: 
[BLEU, :, method,  ] 

>> PoS Tags are: 
[('BLEU', 'PROPN'), (':', 'PUNCT'), ('method', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('BLEU', 'ROOT'), (':', 'punct'), ('method', 'appos'), (' ', 'pobj')]

>> Bigrams: 
[[BLEU, :], [:, method], [method,  ]]

>> Trigrams: 
[[BLEU, :, method], [:, method,  ]]

>> Noun Phrases are: 
[BLEU, a method]

>> Named Entities are: 
[] 


================================ Paragraph 687 =================================

automatic evaluation of machine translation. In Proceedings of the 40th annual meeting on  

------------------- Sentence 1 -------------------

automatic evaluation of machine translation. 


>> Tokens are: 
[automatic, evaluation, machine, translation, .] 

>> PoS Tags are: 
[('automatic', 'ADJ'), ('evaluation', 'NOUN'), ('machine', 'NOUN'), ('translation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('automatic', 'amod'), ('evaluation', 'ROOT'), ('machine', 'compound'), ('translation', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[automatic, evaluation], [evaluation, machine], [machine, translation], [translation, .]]

>> Trigrams: 
[[automatic, evaluation, machine], [evaluation, machine, translation], [machine, translation, .]]

>> Noun Phrases are: 
[automatic evaluation, machine translation]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Proceedings of the 40th annual meeting on   


>> Tokens are: 
[Proceedings, 40th, annual, meeting,  ] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('40th', 'ADJ'), ('annual', 'ADJ'), ('meeting', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('40th', 'amod'), ('annual', 'amod'), ('meeting', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Proceedings, 40th], [40th, annual], [annual, meeting], [meeting,  ]]

>> Trigrams: 
[[Proceedings, 40th, annual], [40th, annual, meeting], [annual, meeting,  ]]

>> Noun Phrases are: 
[Proceedings, the 40th annual meeting]

>> Named Entities are: 
[('Proceedings', 'GPE'), ('40th', 'ORDINAL'), ('annual', 'DATE')] 


================================ Paragraph 688 =================================

association for computational linguistics (pp. 311-318). Association for Computational  

------------------- Sentence 1 -------------------

association for computational linguistics (pp. 


>> Tokens are: 
[association, computational, linguistics, (, pp, .] 

>> PoS Tags are: 
[('association', 'NOUN'), ('computational', 'ADJ'), ('linguistics', 'NOUN'), ('(', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('association', 'ROOT'), ('computational', 'amod'), ('linguistics', 'pobj'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[association, computational], [computational, linguistics], [linguistics, (], [(, pp], [pp, .]]

>> Trigrams: 
[[association, computational, linguistics], [computational, linguistics, (], [linguistics, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[association, computational linguistics]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

311-318). 


>> Tokens are: 
[311, -, 318, ), .] 

>> PoS Tags are: 
[('311', 'NUM'), ('-', 'SYM'), ('318', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('311', 'ROOT'), ('-', 'punct'), ('318', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[311, -], [-, 318], [318, )], [), .]]

>> Trigrams: 
[[311, -, 318], [-, 318, )], [318, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('311', 'CARDINAL')] 

------------------- Sentence 3 -------------------

Association for Computational   


>> Tokens are: 
[Association, Computational,  ] 

>> PoS Tags are: 
[('Association', 'NOUN'), ('Computational', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Association', 'ROOT'), ('Computational', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Association, Computational], [Computational,  ]]

>> Trigrams: 
[[Association, Computational,  ]]

>> Noun Phrases are: 
[Association, Computational]

>> Named Entities are: 
[] 


================================ Paragraph 689 =================================

Linguistics  

------------------- Sentence 1 -------------------

Linguistics   


>> Tokens are: 
[Linguistics,  ] 

>> PoS Tags are: 
[('Linguistics', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Linguistics', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[Linguistics,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Linguistics]

>> Named Entities are: 
[] 


================================ Paragraph 690 =================================

[41] Doddington, G. (2002, March). Automatic evaluation of machine translation quality  

------------------- Sentence 1 -------------------

[41] Doddington, G. (2002, March). 


>> Tokens are: 
[[, 41, ], Doddington, ,, G., (, 2002, ,, March, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('41', 'NUM'), (']', 'PUNCT'), ('Doddington', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('(', 'PUNCT'), ('2002', 'NUM'), (',', 'PUNCT'), ('March', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('41', 'ROOT'), (']', 'punct'), ('Doddington', 'npadvmod'), (',', 'punct'), ('G.', 'appos'), ('(', 'punct'), ('2002', 'appos'), (',', 'punct'), ('March', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 41], [41, ]], [], Doddington], [Doddington, ,], [,, G.], [G., (], [(, 2002], [2002, ,], [,, March], [March, )], [), .]]

>> Trigrams: 
[[[, 41, ]], [41, ], Doddington], [], Doddington, ,], [Doddington, ,, G.], [,, G., (], [G., (, 2002], [(, 2002, ,], [2002, ,, March], [,, March, )], [March, ), .]]

>> Noun Phrases are: 
[G., March]

>> Named Entities are: 
[('41', 'CARDINAL'), ('March', 'DATE')] 

------------------- Sentence 2 -------------------

Automatic evaluation of machine translation quality   


>> Tokens are: 
[Automatic, evaluation, machine, translation, quality,  ] 

>> PoS Tags are: 
[('Automatic', 'ADJ'), ('evaluation', 'NOUN'), ('machine', 'NOUN'), ('translation', 'NOUN'), ('quality', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Automatic', 'amod'), ('evaluation', 'ROOT'), ('machine', 'compound'), ('translation', 'compound'), ('quality', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Automatic, evaluation], [evaluation, machine], [machine, translation], [translation, quality], [quality,  ]]

>> Trigrams: 
[[Automatic, evaluation, machine], [evaluation, machine, translation], [machine, translation, quality], [translation, quality,  ]]

>> Noun Phrases are: 
[Automatic evaluation, machine translation quality]

>> Named Entities are: 
[] 


================================ Paragraph 691 =================================

using n-gram co-occurrence statistics. In Proceedings of the second international conference  

------------------- Sentence 1 -------------------

using n-gram co-occurrence statistics. 


>> Tokens are: 
[n, -, gram, co, -, occurrence, statistics, .] 

>> PoS Tags are: 
[('n', 'NOUN'), ('-', 'PUNCT'), ('gram', 'NOUN'), ('co', 'NOUN'), ('-', 'NOUN'), ('occurrence', 'ADJ'), ('statistics', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('n', 'dobj'), ('-', 'punct'), ('gram', 'quantmod'), ('co', 'amod'), ('-', 'amod'), ('occurrence', 'amod'), ('statistics', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[n, -], [-, gram], [gram, co], [co, -], [-, occurrence], [occurrence, statistics], [statistics, .]]

>> Trigrams: 
[[n, -, gram], [-, gram, co], [gram, co, -], [co, -, occurrence], [-, occurrence, statistics], [occurrence, statistics, .]]

>> Noun Phrases are: 
[n, co-occurrence statistics]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Proceedings of the second international conference   


>> Tokens are: 
[Proceedings, second, international, conference,  ] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('second', 'ADJ'), ('international', 'ADJ'), ('conference', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('second', 'amod'), ('international', 'amod'), ('conference', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Proceedings, second], [second, international], [international, conference], [conference,  ]]

>> Trigrams: 
[[Proceedings, second, international], [second, international, conference], [international, conference,  ]]

>> Noun Phrases are: 
[Proceedings, the second international conference]

>> Named Entities are: 
[('Proceedings', 'GPE'), ('second', 'ORDINAL')] 


================================ Paragraph 692 =================================

on Human Language Technology Research (pp. 138-145). Morgan Kaufmann Publishers Inc   

------------------- Sentence 1 -------------------

on Human Language Technology Research (pp. 


>> Tokens are: 
[Human, Language, Technology, Research, (, pp, .] 

>> PoS Tags are: 
[('Human', 'PROPN'), ('Language', 'PROPN'), ('Technology', 'PROPN'), ('Research', 'PROPN'), ('(', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Human', 'compound'), ('Language', 'compound'), ('Technology', 'compound'), ('Research', 'pobj'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Human, Language], [Language, Technology], [Technology, Research], [Research, (], [(, pp], [pp, .]]

>> Trigrams: 
[[Human, Language, Technology], [Language, Technology, Research], [Technology, Research, (], [Research, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[Human Language Technology Research, (pp]

>> Named Entities are: 
[('Human Language Technology Research', 'ORG')] 

------------------- Sentence 2 -------------------

138-145). 


>> Tokens are: 
[138, -, 145, ), .] 

>> PoS Tags are: 
[('138', 'NUM'), ('-', 'SYM'), ('145', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('138', 'ROOT'), ('-', 'punct'), ('145', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[138, -], [-, 145], [145, )], [), .]]

>> Trigrams: 
[[138, -, 145], [-, 145, )], [145, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('138', 'CARDINAL')] 

------------------- Sentence 3 -------------------

Morgan Kaufmann Publishers Inc    


>> Tokens are: 
[Morgan, Kaufmann, Publishers, Inc,   ] 

>> PoS Tags are: 
[('Morgan', 'PROPN'), ('Kaufmann', 'PROPN'), ('Publishers', 'PROPN'), ('Inc', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Morgan', 'compound'), ('Kaufmann', 'compound'), ('Publishers', 'nsubj'), ('Inc', 'ROOT'), ('  ', 'dobj')]

>> Bigrams: 
[[Morgan, Kaufmann], [Kaufmann, Publishers], [Publishers, Inc], [Inc,   ]]

>> Trigrams: 
[[Morgan, Kaufmann, Publishers], [Kaufmann, Publishers, Inc], [Publishers, Inc,   ]]

>> Noun Phrases are: 
[Morgan Kaufmann Publishers]

>> Named Entities are: 
[('Morgan Kaufmann Publishers Inc', 'ORG')] 


================================ Paragraph 693 =================================

[42] Papineni, K., Roukos, S., Ward, T., & Zhu, W. J. (2002, July). BLEU: a method for  

------------------- Sentence 1 -------------------

[42] Papineni, K., Roukos, S., Ward, T., & Zhu, W. J. (2002, July). 


>> Tokens are: 
[[, 42, ], Papineni, ,, K., ,, Roukos, ,, S., ,, Ward, ,, T., ,, &, Zhu, ,, W., J., (, 2002, ,, July, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('42', 'NUM'), (']', 'PUNCT'), ('Papineni', 'ADJ'), (',', 'PUNCT'), ('K.', 'PROPN'), (',', 'PUNCT'), ('Roukos', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), (',', 'PUNCT'), ('Ward', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Zhu', 'PROPN'), (',', 'PUNCT'), ('W.', 'PROPN'), ('J.', 'PROPN'), ('(', 'PUNCT'), ('2002', 'NUM'), (',', 'PUNCT'), ('July', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('42', 'nummod'), (']', 'punct'), ('Papineni', 'ROOT'), (',', 'punct'), ('K.', 'conj'), (',', 'punct'), ('Roukos', 'conj'), (',', 'punct'), ('S.', 'conj'), (',', 'punct'), ('Ward', 'conj'), (',', 'punct'), ('T.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Zhu', 'conj'), (',', 'punct'), ('W.', 'compound'), ('J.', 'conj'), ('(', 'punct'), ('2002', 'appos'), (',', 'punct'), ('July', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 42], [42, ]], [], Papineni], [Papineni, ,], [,, K.], [K., ,], [,, Roukos], [Roukos, ,], [,, S.], [S., ,], [,, Ward], [Ward, ,], [,, T.], [T., ,], [,, &], [&, Zhu], [Zhu, ,], [,, W.], [W., J.], [J., (], [(, 2002], [2002, ,], [,, July], [July, )], [), .]]

>> Trigrams: 
[[[, 42, ]], [42, ], Papineni], [], Papineni, ,], [Papineni, ,, K.], [,, K., ,], [K., ,, Roukos], [,, Roukos, ,], [Roukos, ,, S.], [,, S., ,], [S., ,, Ward], [,, Ward, ,], [Ward, ,, T.], [,, T., ,], [T., ,, &], [,, &, Zhu], [&, Zhu, ,], [Zhu, ,, W.], [,, W., J.], [W., J., (], [J., (, 2002], [(, 2002, ,], [2002, ,, July], [,, July, )], [July, ), .]]

>> Noun Phrases are: 
[K., Roukos, S., Ward, T., Zhu, W. J.]

>> Named Entities are: 
[('42', 'CARDINAL'), ('K.', 'NORP'), ('W. J.', 'PERSON'), ('July', 'DATE')] 

------------------- Sentence 2 -------------------

BLEU: a method for   


>> Tokens are: 
[BLEU, :, method,  ] 

>> PoS Tags are: 
[('BLEU', 'PROPN'), (':', 'PUNCT'), ('method', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('BLEU', 'ROOT'), (':', 'punct'), ('method', 'appos'), (' ', 'pobj')]

>> Bigrams: 
[[BLEU, :], [:, method], [method,  ]]

>> Trigrams: 
[[BLEU, :, method], [:, method,  ]]

>> Noun Phrases are: 
[BLEU, a method]

>> Named Entities are: 
[] 


================================ Paragraph 694 =================================

automatic evaluation of machine translation. In Proceedings of the 40th annual meeting on  

------------------- Sentence 1 -------------------

automatic evaluation of machine translation. 


>> Tokens are: 
[automatic, evaluation, machine, translation, .] 

>> PoS Tags are: 
[('automatic', 'ADJ'), ('evaluation', 'NOUN'), ('machine', 'NOUN'), ('translation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('automatic', 'amod'), ('evaluation', 'ROOT'), ('machine', 'compound'), ('translation', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[automatic, evaluation], [evaluation, machine], [machine, translation], [translation, .]]

>> Trigrams: 
[[automatic, evaluation, machine], [evaluation, machine, translation], [machine, translation, .]]

>> Noun Phrases are: 
[automatic evaluation, machine translation]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Proceedings of the 40th annual meeting on   


>> Tokens are: 
[Proceedings, 40th, annual, meeting,  ] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('40th', 'ADJ'), ('annual', 'ADJ'), ('meeting', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('40th', 'amod'), ('annual', 'amod'), ('meeting', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Proceedings, 40th], [40th, annual], [annual, meeting], [meeting,  ]]

>> Trigrams: 
[[Proceedings, 40th, annual], [40th, annual, meeting], [annual, meeting,  ]]

>> Noun Phrases are: 
[Proceedings, the 40th annual meeting]

>> Named Entities are: 
[('Proceedings', 'GPE'), ('40th', 'ORDINAL'), ('annual', 'DATE')] 


================================ Paragraph 695 =================================

association for computational linguistics (pp. 311-318). Association for Computational  

------------------- Sentence 1 -------------------

association for computational linguistics (pp. 


>> Tokens are: 
[association, computational, linguistics, (, pp, .] 

>> PoS Tags are: 
[('association', 'NOUN'), ('computational', 'ADJ'), ('linguistics', 'NOUN'), ('(', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('association', 'ROOT'), ('computational', 'amod'), ('linguistics', 'pobj'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[association, computational], [computational, linguistics], [linguistics, (], [(, pp], [pp, .]]

>> Trigrams: 
[[association, computational, linguistics], [computational, linguistics, (], [linguistics, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[association, computational linguistics]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

311-318). 


>> Tokens are: 
[311, -, 318, ), .] 

>> PoS Tags are: 
[('311', 'NUM'), ('-', 'SYM'), ('318', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('311', 'ROOT'), ('-', 'punct'), ('318', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[311, -], [-, 318], [318, )], [), .]]

>> Trigrams: 
[[311, -, 318], [-, 318, )], [318, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('311', 'CARDINAL')] 

------------------- Sentence 3 -------------------

Association for Computational   


>> Tokens are: 
[Association, Computational,  ] 

>> PoS Tags are: 
[('Association', 'NOUN'), ('Computational', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Association', 'ROOT'), ('Computational', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Association, Computational], [Computational,  ]]

>> Trigrams: 
[[Association, Computational,  ]]

>> Noun Phrases are: 
[Association, Computational]

>> Named Entities are: 
[] 


================================ Paragraph 696 =================================

Linguistics  

------------------- Sentence 1 -------------------

Linguistics   


>> Tokens are: 
[Linguistics,  ] 

>> PoS Tags are: 
[('Linguistics', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Linguistics', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[Linguistics,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Linguistics]

>> Named Entities are: 
[] 


================================ Paragraph 697 =================================

[43] Doddington, G. (2002, March). Automatic evaluation of machine translation quality  

------------------- Sentence 1 -------------------

[43] Doddington, G. (2002, March). 


>> Tokens are: 
[[, 43, ], Doddington, ,, G., (, 2002, ,, March, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('43', 'NUM'), (']', 'PUNCT'), ('Doddington', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('(', 'PUNCT'), ('2002', 'NUM'), (',', 'PUNCT'), ('March', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('43', 'ROOT'), (']', 'punct'), ('Doddington', 'npadvmod'), (',', 'punct'), ('G.', 'appos'), ('(', 'punct'), ('2002', 'appos'), (',', 'punct'), ('March', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 43], [43, ]], [], Doddington], [Doddington, ,], [,, G.], [G., (], [(, 2002], [2002, ,], [,, March], [March, )], [), .]]

>> Trigrams: 
[[[, 43, ]], [43, ], Doddington], [], Doddington, ,], [Doddington, ,, G.], [,, G., (], [G., (, 2002], [(, 2002, ,], [2002, ,, March], [,, March, )], [March, ), .]]

>> Noun Phrases are: 
[G., March]

>> Named Entities are: 
[('43', 'CARDINAL'), ('March', 'DATE')] 

------------------- Sentence 2 -------------------

Automatic evaluation of machine translation quality   


>> Tokens are: 
[Automatic, evaluation, machine, translation, quality,  ] 

>> PoS Tags are: 
[('Automatic', 'ADJ'), ('evaluation', 'NOUN'), ('machine', 'NOUN'), ('translation', 'NOUN'), ('quality', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Automatic', 'amod'), ('evaluation', 'ROOT'), ('machine', 'compound'), ('translation', 'compound'), ('quality', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Automatic, evaluation], [evaluation, machine], [machine, translation], [translation, quality], [quality,  ]]

>> Trigrams: 
[[Automatic, evaluation, machine], [evaluation, machine, translation], [machine, translation, quality], [translation, quality,  ]]

>> Noun Phrases are: 
[Automatic evaluation, machine translation quality]

>> Named Entities are: 
[] 


================================ Paragraph 698 =================================

using n-gram co-occurrence statistics. In Proceedings of the second international conference  

------------------- Sentence 1 -------------------

using n-gram co-occurrence statistics. 


>> Tokens are: 
[n, -, gram, co, -, occurrence, statistics, .] 

>> PoS Tags are: 
[('n', 'NOUN'), ('-', 'PUNCT'), ('gram', 'NOUN'), ('co', 'NOUN'), ('-', 'NOUN'), ('occurrence', 'ADJ'), ('statistics', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('n', 'dobj'), ('-', 'punct'), ('gram', 'quantmod'), ('co', 'amod'), ('-', 'amod'), ('occurrence', 'amod'), ('statistics', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[n, -], [-, gram], [gram, co], [co, -], [-, occurrence], [occurrence, statistics], [statistics, .]]

>> Trigrams: 
[[n, -, gram], [-, gram, co], [gram, co, -], [co, -, occurrence], [-, occurrence, statistics], [occurrence, statistics, .]]

>> Noun Phrases are: 
[n, co-occurrence statistics]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Proceedings of the second international conference   


>> Tokens are: 
[Proceedings, second, international, conference,  ] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('second', 'ADJ'), ('international', 'ADJ'), ('conference', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('second', 'amod'), ('international', 'amod'), ('conference', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Proceedings, second], [second, international], [international, conference], [conference,  ]]

>> Trigrams: 
[[Proceedings, second, international], [second, international, conference], [international, conference,  ]]

>> Noun Phrases are: 
[Proceedings, the second international conference]

>> Named Entities are: 
[('Proceedings', 'GPE'), ('second', 'ORDINAL')] 


================================ Paragraph 699 =================================

on Human Language Technology Research (pp. 138-145). Morgan Kaufmann Publishers Inc 

------------------- Sentence 1 -------------------

on Human Language Technology Research (pp. 


>> Tokens are: 
[Human, Language, Technology, Research, (, pp, .] 

>> PoS Tags are: 
[('Human', 'PROPN'), ('Language', 'PROPN'), ('Technology', 'PROPN'), ('Research', 'PROPN'), ('(', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Human', 'compound'), ('Language', 'compound'), ('Technology', 'compound'), ('Research', 'pobj'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Human, Language], [Language, Technology], [Technology, Research], [Research, (], [(, pp], [pp, .]]

>> Trigrams: 
[[Human, Language, Technology], [Language, Technology, Research], [Technology, Research, (], [Research, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[Human Language Technology Research, (pp]

>> Named Entities are: 
[('Human Language Technology Research', 'ORG')] 

------------------- Sentence 2 -------------------

138-145). 


>> Tokens are: 
[138, -, 145, ), .] 

>> PoS Tags are: 
[('138', 'NUM'), ('-', 'SYM'), ('145', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('138', 'ROOT'), ('-', 'punct'), ('145', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[138, -], [-, 145], [145, )], [), .]]

>> Trigrams: 
[[138, -, 145], [-, 145, )], [145, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('138', 'CARDINAL')] 

------------------- Sentence 3 -------------------

Morgan Kaufmann Publishers Inc 


>> Tokens are: 
[Morgan, Kaufmann, Publishers, Inc] 

>> PoS Tags are: 
[('Morgan', 'PROPN'), ('Kaufmann', 'PROPN'), ('Publishers', 'PROPN'), ('Inc', 'PROPN')] 

>> Dependency Tags are: 
[('Morgan', 'compound'), ('Kaufmann', 'compound'), ('Publishers', 'compound'), ('Inc', 'ROOT')]

>> Bigrams: 
[[Morgan, Kaufmann], [Kaufmann, Publishers], [Publishers, Inc]]

>> Trigrams: 
[[Morgan, Kaufmann, Publishers], [Kaufmann, Publishers, Inc]]

>> Noun Phrases are: 
[Morgan Kaufmann Publishers Inc]

>> Named Entities are: 
[('Morgan Kaufmann Publishers Inc', 'ORG')] 


================================ Paragraph 700 =================================

[44] Hayes, P. J. (1992). Intelligent high-volume text processing using shallow, domain- 

------------------- Sentence 1 -------------------

[44] Hayes, P. J. (1992). 


>> Tokens are: 
[[, 44, ], Hayes, ,, P., J., (, 1992, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('44', 'NUM'), (']', 'PUNCT'), ('Hayes', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('J.', 'PROPN'), ('(', 'PUNCT'), ('1992', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('44', 'dep'), (']', 'punct'), ('Hayes', 'ROOT'), (',', 'punct'), ('P.', 'compound'), ('J.', 'conj'), ('(', 'punct'), ('1992', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 44], [44, ]], [], Hayes], [Hayes, ,], [,, P.], [P., J.], [J., (], [(, 1992], [1992, )], [), .]]

>> Trigrams: 
[[[, 44, ]], [44, ], Hayes], [], Hayes, ,], [Hayes, ,, P.], [,, P., J.], [P., J., (], [J., (, 1992], [(, 1992, )], [1992, ), .]]

>> Noun Phrases are: 
[[44] Hayes, P. J.]

>> Named Entities are: 
[('44', 'CARDINAL'), ('P. J.', 'PERSON'), ('1992', 'DATE')] 

------------------- Sentence 2 -------------------

Intelligent high-volume text processing using shallow, 


>> Tokens are: 
[Intelligent, high, -, volume, text, processing, shallow, ,] 

>> PoS Tags are: 
[('Intelligent', 'ADJ'), ('high', 'ADJ'), ('-', 'PUNCT'), ('volume', 'NOUN'), ('text', 'NOUN'), ('processing', 'NOUN'), ('shallow', 'NOUN'), (',', 'PUNCT')] 

>> Dependency Tags are: 
[('Intelligent', 'amod'), ('high', 'amod'), ('-', 'punct'), ('volume', 'compound'), ('text', 'compound'), ('processing', 'ROOT'), ('shallow', 'dobj'), (',', 'punct')]

>> Bigrams: 
[[Intelligent, high], [high, -], [-, volume], [volume, text], [text, processing], [processing, shallow], [shallow, ,]]

>> Trigrams: 
[[Intelligent, high, -], [high, -, volume], [-, volume, text], [volume, text, processing], [text, processing, shallow], [processing, shallow, ,]]

>> Noun Phrases are: 
[Intelligent high-volume text processing, shallow]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

domain- 


>> Tokens are: 
[domain-] 

>> PoS Tags are: 
[('domain-', 'NOUN')] 

>> Dependency Tags are: 
[('domain-', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[domain-]

>> Named Entities are: 
[] 


================================ Paragraph 701 =================================

specific techniques. Text-based intelligent systems: Current research and practice in  

------------------- Sentence 1 -------------------

specific techniques. 


>> Tokens are: 
[specific, techniques, .] 

>> PoS Tags are: 
[('specific', 'ADJ'), ('techniques', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('specific', 'amod'), ('techniques', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[specific, techniques], [techniques, .]]

>> Trigrams: 
[[specific, techniques, .]]

>> Noun Phrases are: 
[specific techniques]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Text-based intelligent systems: Current research and practice in   


>> Tokens are: 
[Text, -, based, intelligent, systems, :, Current, research, practice,  ] 

>> PoS Tags are: 
[('Text', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('intelligent', 'ADJ'), ('systems', 'NOUN'), (':', 'PUNCT'), ('Current', 'ADJ'), ('research', 'NOUN'), ('practice', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Text', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('intelligent', 'amod'), ('systems', 'ROOT'), (':', 'punct'), ('Current', 'amod'), ('research', 'appos'), ('practice', 'conj'), (' ', 'pobj')]

>> Bigrams: 
[[Text, -], [-, based], [based, intelligent], [intelligent, systems], [systems, :], [:, Current], [Current, research], [research, practice], [practice,  ]]

>> Trigrams: 
[[Text, -, based], [-, based, intelligent], [based, intelligent, systems], [intelligent, systems, :], [systems, :, Current], [:, Current, research], [Current, research, practice], [research, practice,  ]]

>> Noun Phrases are: 
[Text-based intelligent systems, Current research, practice]

>> Named Entities are: 
[] 


================================ Paragraph 702 =================================

information extraction and retrieval, 227-242.  

------------------- Sentence 1 -------------------

information extraction and retrieval, 227-242. 


>> Tokens are: 
[information, extraction, retrieval, ,, 227, -, 242, .] 

>> PoS Tags are: 
[('information', 'NOUN'), ('extraction', 'NOUN'), ('retrieval', 'NOUN'), (',', 'PUNCT'), ('227', 'NUM'), ('-', 'SYM'), ('242', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('information', 'compound'), ('extraction', 'ROOT'), ('retrieval', 'conj'), (',', 'punct'), ('227', 'npadvmod'), ('-', 'punct'), ('242', 'prep'), ('.', 'punct')]

>> Bigrams: 
[[information, extraction], [extraction, retrieval], [retrieval, ,], [,, 227], [227, -], [-, 242], [242, .]]

>> Trigrams: 
[[information, extraction, retrieval], [extraction, retrieval, ,], [retrieval, ,, 227], [,, 227, -], [227, -, 242], [-, 242, .]]

>> Noun Phrases are: 
[information extraction, retrieval]

>> Named Entities are: 
[('227', 'CARDINAL')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 703 =================================

[45] Cohen, W. W. (1996, March). Learning rules that classify e-mail. In AAAI spring  

------------------- Sentence 1 -------------------

[45] Cohen, W. W. (1996, March). 


>> Tokens are: 
[[, 45, ], Cohen, ,, W., W., (, 1996, ,, March, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('45', 'NUM'), (']', 'PUNCT'), ('Cohen', 'PROPN'), (',', 'PUNCT'), ('W.', 'PROPN'), ('W.', 'PROPN'), ('(', 'PUNCT'), ('1996', 'NUM'), (',', 'PUNCT'), ('March', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('45', 'nummod'), (']', 'punct'), ('Cohen', 'ROOT'), (',', 'punct'), ('W.', 'compound'), ('W.', 'appos'), ('(', 'punct'), ('1996', 'appos'), (',', 'punct'), ('March', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 45], [45, ]], [], Cohen], [Cohen, ,], [,, W.], [W., W.], [W., (], [(, 1996], [1996, ,], [,, March], [March, )], [), .]]

>> Trigrams: 
[[[, 45, ]], [45, ], Cohen], [], Cohen, ,], [Cohen, ,, W.], [,, W., W.], [W., W., (], [W., (, 1996], [(, 1996, ,], [1996, ,, March], [,, March, )], [March, ), .]]

>> Noun Phrases are: 
[[45] Cohen, W. W., March]

>> Named Entities are: 
[('45', 'CARDINAL'), ('Cohen', 'PERSON'), ('W. W.', 'PERSON'), ('March', 'DATE')] 

------------------- Sentence 2 -------------------

Learning rules that classify e-mail. 


>> Tokens are: 
[Learning, rules, classify, e, -, mail, .] 

>> PoS Tags are: 
[('Learning', 'VERB'), ('rules', 'NOUN'), ('classify', 'VERB'), ('e', 'NOUN'), ('-', 'NOUN'), ('mail', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Learning', 'compound'), ('rules', 'ROOT'), ('classify', 'relcl'), ('e', 'dobj'), ('-', 'dobj'), ('mail', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Learning, rules], [rules, classify], [classify, e], [e, -], [-, mail], [mail, .]]

>> Trigrams: 
[[Learning, rules, classify], [rules, classify, e], [classify, e, -], [e, -, mail], [-, mail, .]]

>> Noun Phrases are: 
[Learning rules, e, -, mail]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

In AAAI spring   


>> Tokens are: 
[AAAI, spring,  ] 

>> PoS Tags are: 
[('AAAI', 'PROPN'), ('spring', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('AAAI', 'compound'), ('spring', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[AAAI, spring], [spring,  ]]

>> Trigrams: 
[[AAAI, spring,  ]]

>> Noun Phrases are: 
[AAAI spring]

>> Named Entities are: 
[('AAAI', 'ORG'), ('spring', 'DATE')] 


================================ Paragraph 704 =================================

symposium on machine learning in information access (Vol. 18, p. 25).  

------------------- Sentence 1 -------------------

symposium on machine learning in information access (Vol. 


>> Tokens are: 
[symposium, machine, learning, information, access, (, Vol, .] 

>> PoS Tags are: 
[('symposium', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('information', 'NOUN'), ('access', 'NOUN'), ('(', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('symposium', 'ROOT'), ('machine', 'compound'), ('learning', 'pobj'), ('information', 'compound'), ('access', 'pobj'), ('(', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[symposium, machine], [machine, learning], [learning, information], [information, access], [access, (], [(, Vol], [Vol, .]]

>> Trigrams: 
[[symposium, machine, learning], [machine, learning, information], [learning, information, access], [information, access, (], [access, (, Vol], [(, Vol, .]]

>> Noun Phrases are: 
[symposium, machine learning, information access]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

18, p. 25). 


>> Tokens are: 
[18, ,, p., 25, ), .] 

>> PoS Tags are: 
[('18', 'NUM'), (',', 'PUNCT'), ('p.', 'NOUN'), ('25', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('18', 'ROOT'), (',', 'punct'), ('p.', 'npadvmod'), ('25', 'nummod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[18, ,], [,, p.], [p., 25], [25, )], [), .]]

>> Trigrams: 
[[18, ,, p.], [,, p., 25], [p., 25, )], [25, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('18', 'CARDINAL'), ('25', 'CARDINAL')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 705 =================================

[46] Sahami, M., Dumais, S., Heckerman, D., & Horvitz, E. (1998, July). A Bayesian  

------------------- Sentence 1 -------------------

[46] Sahami, M., Dumais, S., Heckerman, D., & Horvitz, E. (1998, July). 


>> Tokens are: 
[[, 46, ], Sahami, ,, M., ,, Dumais, ,, S., ,, Heckerman, ,, D., ,, &, Horvitz, ,, E., (, 1998, ,, July, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('46', 'NUM'), (']', 'PUNCT'), ('Sahami', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), (',', 'PUNCT'), ('Dumais', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), (',', 'PUNCT'), ('Heckerman', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Horvitz', 'PROPN'), (',', 'PUNCT'), ('E.', 'PROPN'), ('(', 'PUNCT'), ('1998', 'NUM'), (',', 'PUNCT'), ('July', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('46', 'ROOT'), (']', 'punct'), ('Sahami', 'npadvmod'), (',', 'punct'), ('M.', 'conj'), (',', 'punct'), ('Dumais', 'conj'), (',', 'punct'), ('S.', 'conj'), (',', 'punct'), ('Heckerman', 'conj'), (',', 'punct'), ('D.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Horvitz', 'conj'), (',', 'punct'), ('E.', 'appos'), ('(', 'punct'), ('1998', 'appos'), (',', 'punct'), ('July', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 46], [46, ]], [], Sahami], [Sahami, ,], [,, M.], [M., ,], [,, Dumais], [Dumais, ,], [,, S.], [S., ,], [,, Heckerman], [Heckerman, ,], [,, D.], [D., ,], [,, &], [&, Horvitz], [Horvitz, ,], [,, E.], [E., (], [(, 1998], [1998, ,], [,, July], [July, )], [), .]]

>> Trigrams: 
[[[, 46, ]], [46, ], Sahami], [], Sahami, ,], [Sahami, ,, M.], [,, M., ,], [M., ,, Dumais], [,, Dumais, ,], [Dumais, ,, S.], [,, S., ,], [S., ,, Heckerman], [,, Heckerman, ,], [Heckerman, ,, D.], [,, D., ,], [D., ,, &], [,, &, Horvitz], [&, Horvitz, ,], [Horvitz, ,, E.], [,, E., (], [E., (, 1998], [(, 1998, ,], [1998, ,, July], [,, July, )], [July, ), .]]

>> Noun Phrases are: 
[E.]

>> Named Entities are: 
[('46', 'CARDINAL'), ('Dumais', 'GPE'), ('D.', 'NORP'), ('1998, July', 'DATE')] 

------------------- Sentence 2 -------------------

A Bayesian   


>> Tokens are: 
[Bayesian,  ] 

>> PoS Tags are: 
[('Bayesian', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Bayesian', 'ROOT'), (' ', 'appos')]

>> Bigrams: 
[[Bayesian,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[A Bayesian]

>> Named Entities are: 
[('Bayesian', 'NORP')] 


================================ Paragraph 706 =================================

approach to filtering junk e-mail. In Learning for Text Categorization: Papers from the 1998  

------------------- Sentence 1 -------------------

approach to filtering junk e-mail. 


>> Tokens are: 
[approach, filtering, junk, e, -, mail, .] 

>> PoS Tags are: 
[('approach', 'NOUN'), ('filtering', 'VERB'), ('junk', 'NOUN'), ('e', 'NOUN'), ('-', 'NOUN'), ('mail', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('approach', 'ROOT'), ('filtering', 'amod'), ('junk', 'compound'), ('e', 'pobj'), ('-', 'pobj'), ('mail', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[approach, filtering], [filtering, junk], [junk, e], [e, -], [-, mail], [mail, .]]

>> Trigrams: 
[[approach, filtering, junk], [filtering, junk, e], [junk, e, -], [e, -, mail], [-, mail, .]]

>> Noun Phrases are: 
[approach, filtering junk e, -, mail]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Learning for Text Categorization: Papers from the 1998   


>> Tokens are: 
[Learning, Text, Categorization, :, Papers, 1998,  ] 

>> PoS Tags are: 
[('Learning', 'PROPN'), ('Text', 'PROPN'), ('Categorization', 'NOUN'), (':', 'PUNCT'), ('Papers', 'NOUN'), ('1998', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Learning', 'pobj'), ('Text', 'compound'), ('Categorization', 'pobj'), (':', 'punct'), ('Papers', 'ROOT'), ('1998', 'nummod'), (' ', 'punct')]

>> Bigrams: 
[[Learning, Text], [Text, Categorization], [Categorization, :], [:, Papers], [Papers, 1998], [1998,  ]]

>> Trigrams: 
[[Learning, Text, Categorization], [Text, Categorization, :], [Categorization, :, Papers], [:, Papers, 1998], [Papers, 1998,  ]]

>> Noun Phrases are: 
[Learning, Text Categorization]

>> Named Entities are: 
[('1998', 'DATE')] 


================================ Paragraph 707 =================================

workshop (Vol. 62, pp. 98-105).  

------------------- Sentence 1 -------------------

workshop (Vol. 


>> Tokens are: 
[workshop, (, Vol, .] 

>> PoS Tags are: 
[('workshop', 'NOUN'), ('(', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('workshop', 'ROOT'), ('(', 'punct'), ('Vol', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[workshop, (], [(, Vol], [Vol, .]]

>> Trigrams: 
[[workshop, (, Vol], [(, Vol, .]]

>> Noun Phrases are: 
[workshop, (Vol]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

62, pp. 


>> Tokens are: 
[62, ,, pp, .] 

>> PoS Tags are: 
[('62', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('62', 'ROOT'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[62, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[62, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[pp]

>> Named Entities are: 
[('62', 'DATE')] 

------------------- Sentence 3 -------------------

98-105). 


>> Tokens are: 
[98, -, 105, ), .] 

>> PoS Tags are: 
[('98', 'NUM'), ('-', 'SYM'), ('105', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('98', 'ROOT'), ('-', 'punct'), ('105', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[98, -], [-, 105], [105, )], [), .]]

>> Trigrams: 
[[98, -, 105], [-, 105, )], [105, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('98', 'CARDINAL')] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 708 =================================

[47] Androutsopoulos, I., Paliouras, G., Karkaletsis, V., Sakkis, G., Spyropoulos, C. D., &  

------------------- Sentence 1 -------------------

[47] 


>> Tokens are: 
[[, 47, ]] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('47', 'NUM'), (']', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'ROOT'), ('47', 'nmod'), (']', 'punct')]

>> Bigrams: 
[[[, 47], [47, ]]]

>> Trigrams: 
[[[, 47, ]]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('47', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Androutsopoulos, I., Paliouras, G., Karkaletsis, V., Sakkis, G., Spyropoulos, C. D., &   


>> Tokens are: 
[Androutsopoulos, ,, I., ,, Paliouras, ,, G., ,, Karkaletsis, ,, V., ,, Sakkis, ,, G., ,, Spyropoulos, ,, C., D., ,, &,  ] 

>> PoS Tags are: 
[('Androutsopoulos', 'PROPN'), (',', 'PUNCT'), ('I.', 'PROPN'), (',', 'PUNCT'), ('Paliouras', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), (',', 'PUNCT'), ('Karkaletsis', 'PROPN'), (',', 'PUNCT'), ('V.', 'PROPN'), (',', 'PUNCT'), ('Sakkis', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), (',', 'PUNCT'), ('Spyropoulos', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), ('D.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Androutsopoulos', 'ROOT'), (',', 'punct'), ('I.', 'appos'), (',', 'punct'), ('Paliouras', 'conj'), (',', 'punct'), ('G.', 'conj'), (',', 'punct'), ('Karkaletsis', 'conj'), (',', 'punct'), ('V.', 'conj'), (',', 'punct'), ('Sakkis', 'conj'), (',', 'punct'), ('G.', 'conj'), (',', 'punct'), ('Spyropoulos', 'conj'), (',', 'punct'), ('C.', 'compound'), ('D.', 'conj'), (',', 'punct'), ('&', 'cc'), (' ', 'conj')]

>> Bigrams: 
[[Androutsopoulos, ,], [,, I.], [I., ,], [,, Paliouras], [Paliouras, ,], [,, G.], [G., ,], [,, Karkaletsis], [Karkaletsis, ,], [,, V.], [V., ,], [,, Sakkis], [Sakkis, ,], [,, G.], [G., ,], [,, Spyropoulos], [Spyropoulos, ,], [,, C.], [C., D.], [D., ,], [,, &], [&,  ]]

>> Trigrams: 
[[Androutsopoulos, ,, I.], [,, I., ,], [I., ,, Paliouras], [,, Paliouras, ,], [Paliouras, ,, G.], [,, G., ,], [G., ,, Karkaletsis], [,, Karkaletsis, ,], [Karkaletsis, ,, V.], [,, V., ,], [V., ,, Sakkis], [,, Sakkis, ,], [Sakkis, ,, G.], [,, G., ,], [G., ,, Spyropoulos], [,, Spyropoulos, ,], [Spyropoulos, ,, C.], [,, C., D.], [C., D., ,], [D., ,, &], [,, &,  ]]

>> Noun Phrases are: 
[Androutsopoulos, I., Paliouras, G., Karkaletsis, V., Sakkis, G., Spyropoulos, C. D.]

>> Named Entities are: 
[('I.', 'ORG'), ('Paliouras', 'GPE'), ('Sakkis', 'GPE'), ('G.', 'PERSON'), ('Spyropoulos', 'PERSON'), ('C. D.', 'PERSON')] 


================================ Paragraph 709 =================================

Stamatopoulos, P. (2000). Learning to filter spam e-mail: A comparison of a naive bayesian  

------------------- Sentence 1 -------------------

Stamatopoulos, P. (2000). 


>> Tokens are: 
[Stamatopoulos, ,, P., (, 2000, ), .] 

>> PoS Tags are: 
[('Stamatopoulos', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('(', 'PUNCT'), ('2000', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Stamatopoulos', 'ROOT'), (',', 'punct'), ('P.', 'appos'), ('(', 'punct'), ('2000', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Stamatopoulos, ,], [,, P.], [P., (], [(, 2000], [2000, )], [), .]]

>> Trigrams: 
[[Stamatopoulos, ,, P.], [,, P., (], [P., (, 2000], [(, 2000, )], [2000, ), .]]

>> Noun Phrases are: 
[Stamatopoulos, P.]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Learning to filter spam e-mail: A comparison of a naive bayesian   


>> Tokens are: 
[Learning, filter, spam, e, -, mail, :, comparison, naive, bayesian,  ] 

>> PoS Tags are: 
[('Learning', 'VERB'), ('filter', 'VERB'), ('spam', 'NOUN'), ('e', 'NOUN'), ('-', 'NOUN'), ('mail', 'NOUN'), (':', 'PUNCT'), ('comparison', 'NOUN'), ('naive', 'ADJ'), ('bayesian', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Learning', 'ROOT'), ('filter', 'xcomp'), ('spam', 'dobj'), ('e', 'punct'), ('-', 'dobj'), ('mail', 'dobj'), (':', 'punct'), ('comparison', 'dobj'), ('naive', 'amod'), ('bayesian', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Learning, filter], [filter, spam], [spam, e], [e, -], [-, mail], [mail, :], [:, comparison], [comparison, naive], [naive, bayesian], [bayesian,  ]]

>> Trigrams: 
[[Learning, filter, spam], [filter, spam, e], [spam, e, -], [e, -, mail], [-, mail, :], [mail, :, comparison], [:, comparison, naive], [comparison, naive, bayesian], [naive, bayesian,  ]]

>> Noun Phrases are: 
[spam, -, mail, : A comparison, a naive bayesian]

>> Named Entities are: 
[] 


================================ Paragraph 710 =================================

and a memory-based approach. arXiv preprint cs/0009009.  

------------------- Sentence 1 -------------------

and a memory-based approach. 


>> Tokens are: 
[memory, -, based, approach, .] 

>> PoS Tags are: 
[('memory', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('approach', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('memory', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('approach', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[memory, -], [-, based], [based, approach], [approach, .]]

>> Trigrams: 
[[memory, -, based], [-, based, approach], [based, approach, .]]

>> Noun Phrases are: 
[and a memory-based approach]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

arXiv preprint cs/0009009. 


>> Tokens are: 
[arXiv, preprint, cs/0009009, .] 

>> PoS Tags are: 
[('arXiv', 'NOUN'), ('preprint', 'NOUN'), ('cs/0009009', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('arXiv', 'nsubj'), ('preprint', 'ROOT'), ('cs/0009009', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[arXiv, preprint], [preprint, cs/0009009], [cs/0009009, .]]

>> Trigrams: 
[[arXiv, preprint, cs/0009009], [preprint, cs/0009009, .]]

>> Noun Phrases are: 
[arXiv, cs/0009009]

>> Named Entities are: 
[('cs/0009009', 'DATE')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 711 =================================

[48] Rennie, J. (2000, August). ifile: An application of machine learning to e-mail filtering.  

------------------- Sentence 1 -------------------

[48] Rennie, J. (2000, August). 


>> Tokens are: 
[[, 48, ], Rennie, ,, J., (, 2000, ,, August, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('48', 'NUM'), (']', 'PUNCT'), ('Rennie', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('(', 'PUNCT'), ('2000', 'NUM'), (',', 'PUNCT'), ('August', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('48', 'nummod'), (']', 'punct'), ('Rennie', 'ROOT'), (',', 'punct'), ('J.', 'appos'), ('(', 'punct'), ('2000', 'appos'), (',', 'punct'), ('August', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 48], [48, ]], [], Rennie], [Rennie, ,], [,, J.], [J., (], [(, 2000], [2000, ,], [,, August], [August, )], [), .]]

>> Trigrams: 
[[[, 48, ]], [48, ], Rennie], [], Rennie, ,], [Rennie, ,, J.], [,, J., (], [J., (, 2000], [(, 2000, ,], [2000, ,, August], [,, August, )], [August, ), .]]

>> Noun Phrases are: 
[[48] Rennie, J.]

>> Named Entities are: 
[('48', 'CARDINAL'), ('Rennie', 'ORG'), ('J.', 'ORG'), ('August', 'DATE')] 

------------------- Sentence 2 -------------------

ifile: An application of machine learning to e-mail filtering. 


>> Tokens are: 
[ifile, :, application, machine, learning, e, -, mail, filtering, .] 

>> PoS Tags are: 
[('ifile', 'NOUN'), (':', 'PUNCT'), ('application', 'NOUN'), ('machine', 'NOUN'), ('learning', 'VERB'), ('e', 'NOUN'), ('-', 'NOUN'), ('mail', 'NOUN'), ('filtering', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ifile', 'ROOT'), (':', 'punct'), ('application', 'appos'), ('machine', 'pobj'), ('learning', 'acl'), ('e', 'pobj'), ('-', 'pobj'), ('mail', 'compound'), ('filtering', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ifile, :], [:, application], [application, machine], [machine, learning], [learning, e], [e, -], [-, mail], [mail, filtering], [filtering, .]]

>> Trigrams: 
[[ifile, :, application], [:, application, machine], [application, machine, learning], [machine, learning, e], [learning, e, -], [e, -, mail], [-, mail, filtering], [mail, filtering, .]]

>> Noun Phrases are: 
[ifile, An application, machine, e, -, mail filtering]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 712 =================================

In Proc. KDD 2000 Workshop on Text Mining, Boston, MA  

------------------- Sentence 1 -------------------

In Proc. 


>> Tokens are: 
[Proc, .] 

>> PoS Tags are: 
[('Proc', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Proc', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Proc, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Proc]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

KDD 2000 Workshop on Text Mining, Boston, MA   


>> Tokens are: 
[KDD, 2000, Workshop, Text, Mining, ,, Boston, ,, MA,  ] 

>> PoS Tags are: 
[('KDD', 'PROPN'), ('2000', 'NUM'), ('Workshop', 'PROPN'), ('Text', 'PROPN'), ('Mining', 'PROPN'), (',', 'PUNCT'), ('Boston', 'PROPN'), (',', 'PUNCT'), ('MA', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('KDD', 'nmod'), ('2000', 'nummod'), ('Workshop', 'ROOT'), ('Text', 'compound'), ('Mining', 'pobj'), (',', 'punct'), ('Boston', 'appos'), (',', 'punct'), ('MA', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[KDD, 2000], [2000, Workshop], [Workshop, Text], [Text, Mining], [Mining, ,], [,, Boston], [Boston, ,], [,, MA], [MA,  ]]

>> Trigrams: 
[[KDD, 2000, Workshop], [2000, Workshop, Text], [Workshop, Text, Mining], [Text, Mining, ,], [Mining, ,, Boston], [,, Boston, ,], [Boston, ,, MA], [,, MA,  ]]

>> Noun Phrases are: 
[KDD 2000 Workshop, Text Mining, Boston, MA]

>> Named Entities are: 
[('Boston', 'GPE'), ('MA', 'PERSON')] 


================================ Paragraph 713 =================================

[49] Drucker, H., Wu, D., & Vapnik, V. N. (1999). Support vector machines for spam  

------------------- Sentence 1 -------------------

[49] Drucker, H., Wu, D., & Vapnik, V. N. (1999). 


>> Tokens are: 
[[, 49, ], Drucker, ,, H., ,, Wu, ,, D., ,, &, Vapnik, ,, V., N., (, 1999, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('49', 'NUM'), (']', 'PUNCT'), ('Drucker', 'PROPN'), (',', 'PUNCT'), ('H.', 'PROPN'), (',', 'PUNCT'), ('Wu', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Vapnik', 'PROPN'), (',', 'PUNCT'), ('V.', 'PROPN'), ('N.', 'PROPN'), ('(', 'PUNCT'), ('1999', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('49', 'nmod'), (']', 'punct'), ('Drucker', 'appos'), (',', 'punct'), ('H.', 'nmod'), (',', 'punct'), ('Wu', 'npadvmod'), (',', 'punct'), ('D.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Vapnik', 'conj'), (',', 'punct'), ('V.', 'compound'), ('N.', 'ROOT'), ('(', 'punct'), ('1999', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 49], [49, ]], [], Drucker], [Drucker, ,], [,, H.], [H., ,], [,, Wu], [Wu, ,], [,, D.], [D., ,], [,, &], [&, Vapnik], [Vapnik, ,], [,, V.], [V., N.], [N., (], [(, 1999], [1999, )], [), .]]

>> Trigrams: 
[[[, 49, ]], [49, ], Drucker], [], Drucker, ,], [Drucker, ,, H.], [,, H., ,], [H., ,, Wu], [,, Wu, ,], [Wu, ,, D.], [,, D., ,], [D., ,, &], [,, &, Vapnik], [&, Vapnik, ,], [Vapnik, ,, V.], [,, V., N.], [V., N., (], [N., (, 1999], [(, 1999, )], [1999, ), .]]

>> Noun Phrases are: 
[Drucker]

>> Named Entities are: 
[('49', 'CARDINAL'), ('Wu', 'PERSON'), ('D.', 'NORP'), ('V. N.', 'PERSON'), ('1999', 'DATE')] 

------------------- Sentence 2 -------------------

Support vector machines for spam   


>> Tokens are: 
[Support, vector, machines, spam,  ] 

>> PoS Tags are: 
[('Support', 'NOUN'), ('vector', 'NOUN'), ('machines', 'NOUN'), ('spam', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Support', 'compound'), ('vector', 'compound'), ('machines', 'ROOT'), ('spam', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Support, vector], [vector, machines], [machines, spam], [spam,  ]]

>> Trigrams: 
[[Support, vector, machines], [vector, machines, spam], [machines, spam,  ]]

>> Noun Phrases are: 
[Support vector machines, spam]

>> Named Entities are: 
[] 


================================ Paragraph 714 =================================

categorization. IEEE Transactions on Neural networks, 10(5), 1048-1054  

------------------- Sentence 1 -------------------

categorization. 


>> Tokens are: 
[categorization, .] 

>> PoS Tags are: 
[('categorization', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('categorization', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[categorization, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[categorization]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

IEEE Transactions on Neural networks, 10(5), 1048-1054   


>> Tokens are: 
[IEEE, Transactions, Neural, networks, ,, 10(5, ), ,, 1048, -, 1054,  ] 

>> PoS Tags are: 
[('IEEE', 'PROPN'), ('Transactions', 'PROPN'), ('Neural', 'PROPN'), ('networks', 'NOUN'), (',', 'PUNCT'), ('10(5', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('1048', 'NUM'), ('-', 'SYM'), ('1054', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('IEEE', 'compound'), ('Transactions', 'ROOT'), ('Neural', 'compound'), ('networks', 'pobj'), (',', 'punct'), ('10(5', 'appos'), (')', 'punct'), (',', 'punct'), ('1048', 'npadvmod'), ('-', 'punct'), ('1054', 'prep'), (' ', 'appos')]

>> Bigrams: 
[[IEEE, Transactions], [Transactions, Neural], [Neural, networks], [networks, ,], [,, 10(5], [10(5, )], [), ,], [,, 1048], [1048, -], [-, 1054], [1054,  ]]

>> Trigrams: 
[[IEEE, Transactions, Neural], [Transactions, Neural, networks], [Neural, networks, ,], [networks, ,, 10(5], [,, 10(5, )], [10(5, ), ,], [), ,, 1048], [,, 1048, -], [1048, -, 1054], [-, 1054,  ]]

>> Noun Phrases are: 
[IEEE Transactions, Neural networks]

>> Named Entities are: 
[('IEEE Transactions on Neural', 'ORG'), ('10(5', 'CARDINAL'), ('1048-1054', 'DATE')] 


================================ Paragraph 715 =================================

[50] Carreras, X., & Marquez, L. (2001). Boosting trees for anti-spam email filtering. arXiv  

------------------- Sentence 1 -------------------

[50] Carreras, X., & Marquez, L. (2001). 


>> Tokens are: 
[[, 50, ], Carreras, ,, X., ,, &, Marquez, ,, L., (, 2001, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('50', 'NUM'), (']', 'PUNCT'), ('Carreras', 'PROPN'), (',', 'PUNCT'), ('X.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Marquez', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('(', 'PUNCT'), ('2001', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('50', 'nummod'), (']', 'punct'), ('Carreras', 'ROOT'), (',', 'punct'), ('X.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Marquez', 'conj'), (',', 'punct'), ('L.', 'conj'), ('(', 'punct'), ('2001', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 50], [50, ]], [], Carreras], [Carreras, ,], [,, X.], [X., ,], [,, &], [&, Marquez], [Marquez, ,], [,, L.], [L., (], [(, 2001], [2001, )], [), .]]

>> Trigrams: 
[[[, 50, ]], [50, ], Carreras], [], Carreras, ,], [Carreras, ,, X.], [,, X., ,], [X., ,, &], [,, &, Marquez], [&, Marquez, ,], [Marquez, ,, L.], [,, L., (], [L., (, 2001], [(, 2001, )], [2001, ), .]]

>> Noun Phrases are: 
[[50] Carreras, X., Marquez, L.]

>> Named Entities are: 
[('50', 'CARDINAL'), ('X., & Marquez', 'ORG'), ('2001', 'DATE')] 

------------------- Sentence 2 -------------------

Boosting trees for anti-spam email filtering. 


>> Tokens are: 
[Boosting, trees, anti, -, spam, email, filtering, .] 

>> PoS Tags are: 
[('Boosting', 'VERB'), ('trees', 'NOUN'), ('anti', 'ADJ'), ('-', 'ADJ'), ('spam', 'ADJ'), ('email', 'NOUN'), ('filtering', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Boosting', 'ROOT'), ('trees', 'dobj'), ('anti', 'amod'), ('-', 'amod'), ('spam', 'amod'), ('email', 'compound'), ('filtering', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Boosting, trees], [trees, anti], [anti, -], [-, spam], [spam, email], [email, filtering], [filtering, .]]

>> Trigrams: 
[[Boosting, trees, anti], [trees, anti, -], [anti, -, spam], [-, spam, email], [spam, email, filtering], [email, filtering, .]]

>> Noun Phrases are: 
[trees, anti-spam email filtering]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

arXiv   


>> Tokens are: 
[arXiv,  ] 

>> PoS Tags are: 
[('arXiv', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('arXiv', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[arXiv,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[arXiv]

>> Named Entities are: 
[] 


================================ Paragraph 716 =================================

preprint cs/0109015  

------------------- Sentence 1 -------------------

preprint cs/0109015   


>> Tokens are: 
[preprint, cs/0109015,  ] 

>> PoS Tags are: 
[('preprint', 'VERB'), ('cs/0109015', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('preprint', 'ROOT'), ('cs/0109015', 'dobj'), (' ', 'nummod')]

>> Bigrams: 
[[preprint, cs/0109015], [cs/0109015,  ]]

>> Trigrams: 
[[preprint, cs/0109015,  ]]

>> Noun Phrases are: 
[cs/0109015]

>> Named Entities are: 
[] 


================================ Paragraph 717 =================================

[51] BERGER, A. L., DELLA PIETRA, S. A., AND DELLA PIETRA, V. J. 1996. A  

------------------- Sentence 1 -------------------

[51] BERGER, A. L., DELLA PIETRA, S. A., AND DELLA PIETRA, V. J. 1996. 


>> Tokens are: 
[[, 51, ], BERGER, ,, A., L., ,, DELLA, PIETRA, ,, S., A., ,, DELLA, PIETRA, ,, V., J., 1996, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('51', 'NUM'), (']', 'PUNCT'), ('BERGER', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('L.', 'PROPN'), (',', 'PUNCT'), ('DELLA', 'PROPN'), ('PIETRA', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('A.', 'PROPN'), (',', 'PUNCT'), ('DELLA', 'PROPN'), ('PIETRA', 'PROPN'), (',', 'PUNCT'), ('V.', 'PROPN'), ('J.', 'PROPN'), ('1996', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('51', 'nummod'), (']', 'punct'), ('BERGER', 'dep'), (',', 'punct'), ('A.', 'compound'), ('L.', 'ROOT'), (',', 'punct'), ('DELLA', 'compound'), ('PIETRA', 'appos'), (',', 'punct'), ('S.', 'compound'), ('A.', 'conj'), (',', 'punct'), ('DELLA', 'compound'), ('PIETRA', 'conj'), (',', 'punct'), ('V.', 'compound'), ('J.', 'appos'), ('1996', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[[, 51], [51, ]], [], BERGER], [BERGER, ,], [,, A.], [A., L.], [L., ,], [,, DELLA], [DELLA, PIETRA], [PIETRA, ,], [,, S.], [S., A.], [A., ,], [,, DELLA], [DELLA, PIETRA], [PIETRA, ,], [,, V.], [V., J.], [J., 1996], [1996, .]]

>> Trigrams: 
[[[, 51, ]], [51, ], BERGER], [], BERGER, ,], [BERGER, ,, A.], [,, A., L.], [A., L., ,], [L., ,, DELLA], [,, DELLA, PIETRA], [DELLA, PIETRA, ,], [PIETRA, ,, S.], [,, S., A.], [S., A., ,], [A., ,, DELLA], [,, DELLA, PIETRA], [DELLA, PIETRA, ,], [PIETRA, ,, V.], [,, V., J.], [V., J., 1996], [J., 1996, .]]

>> Noun Phrases are: 
[[51] BERGER, A. L., DELLA PIETRA, S. A., DELLA PIETRA, V. J.]

>> Named Entities are: 
[('51', 'CARDINAL'), ('A. L.', 'PERSON'), ('S. A.', 'PERSON'), ('V. J. 1996', 'PERSON')] 

------------------- Sentence 2 -------------------

A   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 718 =================================

maximum entropy approach to natural language processing. Computational Linguistics 22, 1,  

------------------- Sentence 1 -------------------

maximum entropy approach to natural language processing. 


>> Tokens are: 
[maximum, entropy, approach, natural, language, processing, .] 

>> PoS Tags are: 
[('maximum', 'ADJ'), ('entropy', 'NOUN'), ('approach', 'NOUN'), ('natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('maximum', 'amod'), ('entropy', 'compound'), ('approach', 'ROOT'), ('natural', 'amod'), ('language', 'compound'), ('processing', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[maximum, entropy], [entropy, approach], [approach, natural], [natural, language], [language, processing], [processing, .]]

>> Trigrams: 
[[maximum, entropy, approach], [entropy, approach, natural], [approach, natural, language], [natural, language, processing], [language, processing, .]]

>> Noun Phrases are: 
[maximum entropy approach, natural language processing]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Computational Linguistics 22, 1,   


>> Tokens are: 
[Computational, Linguistics, 22, ,, 1, ,,  ] 

>> PoS Tags are: 
[('Computational', 'PROPN'), ('Linguistics', 'PROPN'), ('22', 'NUM'), (',', 'PUNCT'), ('1', 'NUM'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Computational', 'compound'), ('Linguistics', 'ROOT'), ('22', 'nummod'), (',', 'punct'), ('1', 'appos'), (',', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Computational, Linguistics], [Linguistics, 22], [22, ,], [,, 1], [1, ,], [,,  ]]

>> Trigrams: 
[[Computational, Linguistics, 22], [Linguistics, 22, ,], [22, ,, 1], [,, 1, ,], [1, ,,  ]]

>> Noun Phrases are: 
[Computational Linguistics]

>> Named Entities are: 
[('Computational Linguistics', 'PERSON'), ('22', 'CARDINAL'), ('1', 'CARDINAL')] 


================================ Paragraph 719 =================================

39–71  

------------------- Sentence 1 -------------------

39–71   


>> Tokens are: 
[39–71,  ] 

>> PoS Tags are: 
[('39–71', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('39–71', 'nummod'), (' ', 'ROOT')]

>> Bigrams: 
[[39–71,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('39–71', 'CARDINAL')] 


================================ Paragraph 720 =================================

[52] Sakkis, G., Androutsopoulos, I., Paliouras, G., Karkaletsis, V., Spyropoulos, C. D., &  

------------------- Sentence 1 -------------------

[52] 


>> Tokens are: 
[[, 52, ]] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('52', 'NUM'), (']', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('52', 'ROOT'), (']', 'punct')]

>> Bigrams: 
[[[, 52], [52, ]]]

>> Trigrams: 
[[[, 52, ]]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('52', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Sakkis, G., Androutsopoulos, I., Paliouras, G., Karkaletsis, V., Spyropoulos, C. D., &   


>> Tokens are: 
[Sakkis, ,, G., ,, Androutsopoulos, ,, I., ,, Paliouras, ,, G., ,, Karkaletsis, ,, V., ,, Spyropoulos, ,, C., D., ,, &,  ] 

>> PoS Tags are: 
[('Sakkis', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), (',', 'PUNCT'), ('Androutsopoulos', 'PROPN'), (',', 'PUNCT'), ('I.', 'PROPN'), (',', 'PUNCT'), ('Paliouras', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), (',', 'PUNCT'), ('Karkaletsis', 'PROPN'), (',', 'PUNCT'), ('V.', 'PROPN'), (',', 'PUNCT'), ('Spyropoulos', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), ('D.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Sakkis', 'ROOT'), (',', 'punct'), ('G.', 'conj'), (',', 'punct'), ('Androutsopoulos', 'conj'), (',', 'punct'), ('I.', 'conj'), (',', 'punct'), ('Paliouras', 'conj'), (',', 'punct'), ('G.', 'conj'), (',', 'punct'), ('Karkaletsis', 'conj'), (',', 'punct'), ('V.', 'conj'), (',', 'punct'), ('Spyropoulos', 'conj'), (',', 'punct'), ('C.', 'compound'), ('D.', 'appos'), (',', 'punct'), ('&', 'cc'), (' ', 'conj')]

>> Bigrams: 
[[Sakkis, ,], [,, G.], [G., ,], [,, Androutsopoulos], [Androutsopoulos, ,], [,, I.], [I., ,], [,, Paliouras], [Paliouras, ,], [,, G.], [G., ,], [,, Karkaletsis], [Karkaletsis, ,], [,, V.], [V., ,], [,, Spyropoulos], [Spyropoulos, ,], [,, C.], [C., D.], [D., ,], [,, &], [&,  ]]

>> Trigrams: 
[[Sakkis, ,, G.], [,, G., ,], [G., ,, Androutsopoulos], [,, Androutsopoulos, ,], [Androutsopoulos, ,, I.], [,, I., ,], [I., ,, Paliouras], [,, Paliouras, ,], [Paliouras, ,, G.], [,, G., ,], [G., ,, Karkaletsis], [,, Karkaletsis, ,], [Karkaletsis, ,, V.], [,, V., ,], [V., ,, Spyropoulos], [,, Spyropoulos, ,], [Spyropoulos, ,, C.], [,, C., D.], [C., D., ,], [D., ,, &], [,, &,  ]]

>> Noun Phrases are: 
[Sakkis, G., Androutsopoulos, I., Paliouras, G., Karkaletsis, V., Spyropoulos, C. D.]

>> Named Entities are: 
[('Androutsopoulos', 'ORG'), ('I.', 'ORG'), ('Paliouras', 'GPE'), ('Spyropoulos', 'PERSON'), ('C. D.', 'PERSON')] 


================================ Paragraph 721 =================================

Stamatopoulos, P. (2001). Stacking classifiers for anti-spam filtering of e-mail. arXiv preprint  

------------------- Sentence 1 -------------------

Stamatopoulos, P. (2001). 


>> Tokens are: 
[Stamatopoulos, ,, P., (, 2001, ), .] 

>> PoS Tags are: 
[('Stamatopoulos', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('(', 'PUNCT'), ('2001', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Stamatopoulos', 'ROOT'), (',', 'punct'), ('P.', 'appos'), ('(', 'punct'), ('2001', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Stamatopoulos, ,], [,, P.], [P., (], [(, 2001], [2001, )], [), .]]

>> Trigrams: 
[[Stamatopoulos, ,, P.], [,, P., (], [P., (, 2001], [(, 2001, )], [2001, ), .]]

>> Noun Phrases are: 
[Stamatopoulos, P.]

>> Named Entities are: 
[('2001', 'DATE')] 

------------------- Sentence 2 -------------------

Stacking classifiers for anti-spam filtering of e-mail. 


>> Tokens are: 
[Stacking, classifiers, anti, -, spam, filtering, e, -, mail, .] 

>> PoS Tags are: 
[('Stacking', 'VERB'), ('classifiers', 'NOUN'), ('anti', 'ADJ'), ('-', 'ADJ'), ('spam', 'ADJ'), ('filtering', 'NOUN'), ('e', 'NOUN'), ('-', 'NOUN'), ('mail', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Stacking', 'ROOT'), ('classifiers', 'dobj'), ('anti', 'amod'), ('-', 'amod'), ('spam', 'amod'), ('filtering', 'pobj'), ('e', 'pobj'), ('-', 'pobj'), ('mail', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Stacking, classifiers], [classifiers, anti], [anti, -], [-, spam], [spam, filtering], [filtering, e], [e, -], [-, mail], [mail, .]]

>> Trigrams: 
[[Stacking, classifiers, anti], [classifiers, anti, -], [anti, -, spam], [-, spam, filtering], [spam, filtering, e], [filtering, e, -], [e, -, mail], [-, mail, .]]

>> Noun Phrases are: 
[classifiers, anti-spam filtering, e, -, mail]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

arXiv preprint   


>> Tokens are: 
[arXiv, preprint,  ] 

>> PoS Tags are: 
[('arXiv', 'NOUN'), ('preprint', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('arXiv', 'nsubj'), ('preprint', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[arXiv, preprint], [preprint,  ]]

>> Trigrams: 
[[arXiv, preprint,  ]]

>> Noun Phrases are: 
[arXiv]

>> Named Entities are: 
[] 


================================ Paragraph 722 =================================

cs/0106040..  

------------------- Sentence 1 -------------------

cs/0106040..   


>> Tokens are: 
[cs/0106040, ..,  ] 

>> PoS Tags are: 
[('cs/0106040', 'PROPN'), ('..', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('cs/0106040', 'ROOT'), ('..', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[cs/0106040, ..], [..,  ]]

>> Trigrams: 
[[cs/0106040, ..,  ]]

>> Noun Phrases are: 
[cs/0106040]

>> Named Entities are: 
[] 


================================ Paragraph 723 =================================

[53] Lewis, D. D. (1998, April). Naive (Bayes) at forty: The independence assumption in  

------------------- Sentence 1 -------------------

[53] Lewis, D. D. (1998, April). 


>> Tokens are: 
[[, 53, ], Lewis, ,, D., D., (, 1998, ,, April, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('53', 'NUM'), (']', 'PUNCT'), ('Lewis', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('D.', 'PROPN'), ('(', 'PUNCT'), ('1998', 'NUM'), (',', 'PUNCT'), ('April', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('53', 'nummod'), (']', 'punct'), ('Lewis', 'ROOT'), (',', 'punct'), ('D.', 'compound'), ('D.', 'appos'), ('(', 'punct'), ('1998', 'appos'), (',', 'punct'), ('April', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 53], [53, ]], [], Lewis], [Lewis, ,], [,, D.], [D., D.], [D., (], [(, 1998], [1998, ,], [,, April], [April, )], [), .]]

>> Trigrams: 
[[[, 53, ]], [53, ], Lewis], [], Lewis, ,], [Lewis, ,, D.], [,, D., D.], [D., D., (], [D., (, 1998], [(, 1998, ,], [1998, ,, April], [,, April, )], [April, ), .]]

>> Noun Phrases are: 
[[53] Lewis, D. D.]

>> Named Entities are: 
[('D. D.', 'NORP'), ('1998', 'DATE'), ('April', 'DATE')] 

------------------- Sentence 2 -------------------

Naive (Bayes) at forty: 


>> Tokens are: 
[Naive, (, Bayes, ), :] 

>> PoS Tags are: 
[('Naive', 'PROPN'), ('(', 'PUNCT'), ('Bayes', 'PROPN'), (')', 'PUNCT'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Naive', 'ROOT'), ('(', 'punct'), ('Bayes', 'appos'), (')', 'punct'), (':', 'punct')]

>> Bigrams: 
[[Naive, (], [(, Bayes], [Bayes, )], [), :]]

>> Trigrams: 
[[Naive, (, Bayes], [(, Bayes, )], [Bayes, ), :]]

>> Noun Phrases are: 
[Naive, (Bayes]

>> Named Entities are: 
[('Bayes', 'ORG'), ('forty', 'CARDINAL')] 

------------------- Sentence 3 -------------------

The independence assumption in   


>> Tokens are: 
[independence, assumption,  ] 

>> PoS Tags are: 
[('independence', 'NOUN'), ('assumption', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('independence', 'compound'), ('assumption', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[independence, assumption], [assumption,  ]]

>> Trigrams: 
[[independence, assumption,  ]]

>> Noun Phrases are: 
[The independence assumption]

>> Named Entities are: 
[] 


================================ Paragraph 724 =================================

information retrieval. In European conference on machine learning (pp. 4-15). Springer  

------------------- Sentence 1 -------------------

information retrieval. 


>> Tokens are: 
[information, retrieval, .] 

>> PoS Tags are: 
[('information', 'NOUN'), ('retrieval', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('information', 'compound'), ('retrieval', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[information, retrieval], [retrieval, .]]

>> Trigrams: 
[[information, retrieval, .]]

>> Noun Phrases are: 
[information retrieval]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In European conference on machine learning (pp. 


>> Tokens are: 
[European, conference, machine, learning, (, pp, .] 

>> PoS Tags are: 
[('European', 'ADJ'), ('conference', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('(', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('European', 'amod'), ('conference', 'pobj'), ('machine', 'compound'), ('learning', 'pobj'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[European, conference], [conference, machine], [machine, learning], [learning, (], [(, pp], [pp, .]]

>> Trigrams: 
[[European, conference, machine], [conference, machine, learning], [machine, learning, (], [learning, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[European conference, machine learning, pp]

>> Named Entities are: 
[('European', 'NORP')] 

------------------- Sentence 3 -------------------

4-15). 


>> Tokens are: 
[4, -, 15, ), .] 

>> PoS Tags are: 
[('4', 'NUM'), ('-', 'SYM'), ('15', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('4', 'ROOT'), ('-', 'punct'), ('15', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[4, -], [-, 15], [15, )], [), .]]

>> Trigrams: 
[[4, -, 15], [-, 15, )], [15, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

Springer   


>> Tokens are: 
[Springer,  ] 

>> PoS Tags are: 
[('Springer', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Springer', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[Springer,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Springer]

>> Named Entities are: 
[] 


================================ Paragraph 725 =================================

Berlin Heidelberg  

------------------- Sentence 1 -------------------

Berlin Heidelberg   


>> Tokens are: 
[Berlin, Heidelberg,  ] 

>> PoS Tags are: 
[('Berlin', 'PROPN'), ('Heidelberg', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Berlin', 'compound'), ('Heidelberg', 'ROOT'), (' ', 'appos')]

>> Bigrams: 
[[Berlin, Heidelberg], [Heidelberg,  ]]

>> Trigrams: 
[[Berlin, Heidelberg,  ]]

>> Noun Phrases are: 
[Berlin Heidelberg]

>> Named Entities are: 
[('Berlin Heidelberg', 'PERSON')] 


================================ Paragraph 726 =================================

[54] McCallum, A., & Nigam, K. (1998, July). A comparison of event models for naive bayes  

------------------- Sentence 1 -------------------

[54] McCallum, A., & Nigam, K. (1998, July). 


>> Tokens are: 
[[, 54, ], McCallum, ,, A., ,, &, Nigam, ,, K., (, 1998, ,, July, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('54', 'NUM'), (']', 'PUNCT'), ('McCallum', 'PROPN'), (',', 'PUNCT'), ('A.', 'NOUN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Nigam', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), ('(', 'PUNCT'), ('1998', 'NUM'), (',', 'PUNCT'), ('July', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('54', 'nmod'), (']', 'punct'), ('McCallum', 'ROOT'), (',', 'punct'), ('A.', 'appos'), (',', 'punct'), ('&', 'cc'), ('Nigam', 'conj'), (',', 'punct'), ('K.', 'appos'), ('(', 'punct'), ('1998', 'appos'), (',', 'punct'), ('July', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 54], [54, ]], [], McCallum], [McCallum, ,], [,, A.], [A., ,], [,, &], [&, Nigam], [Nigam, ,], [,, K.], [K., (], [(, 1998], [1998, ,], [,, July], [July, )], [), .]]

>> Trigrams: 
[[[, 54, ]], [54, ], McCallum], [], McCallum, ,], [McCallum, ,, A.], [,, A., ,], [A., ,, &], [,, &, Nigam], [&, Nigam, ,], [Nigam, ,, K.], [,, K., (], [K., (, 1998], [(, 1998, ,], [1998, ,, July], [,, July, )], [July, ), .]]

>> Noun Phrases are: 
[[54] McCallum, A., Nigam, K.]

>> Named Entities are: 
[('54', 'CARDINAL'), ('July', 'DATE')] 

------------------- Sentence 2 -------------------

A comparison of event models for naive bayes   


>> Tokens are: 
[comparison, event, models, naive, bayes,  ] 

>> PoS Tags are: 
[('comparison', 'NOUN'), ('event', 'NOUN'), ('models', 'NOUN'), ('naive', 'ADJ'), ('bayes', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('comparison', 'ROOT'), ('event', 'compound'), ('models', 'pobj'), ('naive', 'amod'), ('bayes', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[comparison, event], [event, models], [models, naive], [naive, bayes], [bayes,  ]]

>> Trigrams: 
[[comparison, event, models], [event, models, naive], [models, naive, bayes], [naive, bayes,  ]]

>> Noun Phrases are: 
[A comparison, event models, naive bayes]

>> Named Entities are: 
[] 


================================ Paragraph 727 =================================

text classification. In AAAI-98 workshop on learning for text categorization (Vol. 752, pp.  

------------------- Sentence 1 -------------------

text classification. 


>> Tokens are: 
[text, classification, .] 

>> PoS Tags are: 
[('text', 'NOUN'), ('classification', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('text', 'compound'), ('classification', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[text, classification], [classification, .]]

>> Trigrams: 
[[text, classification, .]]

>> Noun Phrases are: 
[text classification]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In AAAI-98 workshop on learning for text categorization (Vol. 


>> Tokens are: 
[AAAI-98, workshop, learning, text, categorization, (, Vol, .] 

>> PoS Tags are: 
[('AAAI-98', 'NOUN'), ('workshop', 'NOUN'), ('learning', 'VERB'), ('text', 'NOUN'), ('categorization', 'NOUN'), ('(', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('AAAI-98', 'compound'), ('workshop', 'pobj'), ('learning', 'pcomp'), ('text', 'compound'), ('categorization', 'pobj'), ('(', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[AAAI-98, workshop], [workshop, learning], [learning, text], [text, categorization], [categorization, (], [(, Vol], [Vol, .]]

>> Trigrams: 
[[AAAI-98, workshop, learning], [workshop, learning, text], [learning, text, categorization], [text, categorization, (], [categorization, (, Vol], [(, Vol, .]]

>> Noun Phrases are: 
[AAAI-98 workshop, text categorization]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

752, pp. 


>> Tokens are: 
[752, ,, pp, .] 

>> PoS Tags are: 
[('752', 'NUM'), (',', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('752', 'ROOT'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[752, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[752, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 728 =================================

41-48).  

------------------- Sentence 1 -------------------

41-48). 


>> Tokens are: 
[41, -, 48, ), .] 

>> PoS Tags are: 
[('41', 'NUM'), ('-', 'SYM'), ('48', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('41', 'ROOT'), ('-', 'punct'), ('48', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[41, -], [-, 48], [48, )], [), .]]

>> Trigrams: 
[[41, -, 48], [-, 48, )], [48, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('41-48', 'DATE')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 729 =================================

[55] McCallum, A., & Nigam, K. (1998, July). A comparison of event models for naive bayes  

------------------- Sentence 1 -------------------

[55] McCallum, A., & Nigam, K. (1998, July). 


>> Tokens are: 
[[, 55, ], McCallum, ,, A., ,, &, Nigam, ,, K., (, 1998, ,, July, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('55', 'NUM'), (']', 'PUNCT'), ('McCallum', 'PROPN'), (',', 'PUNCT'), ('A.', 'NOUN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Nigam', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), ('(', 'PUNCT'), ('1998', 'NUM'), (',', 'PUNCT'), ('July', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('55', 'nummod'), (']', 'punct'), ('McCallum', 'ROOT'), (',', 'punct'), ('A.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Nigam', 'conj'), (',', 'punct'), ('K.', 'appos'), ('(', 'punct'), ('1998', 'appos'), (',', 'punct'), ('July', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 55], [55, ]], [], McCallum], [McCallum, ,], [,, A.], [A., ,], [,, &], [&, Nigam], [Nigam, ,], [,, K.], [K., (], [(, 1998], [1998, ,], [,, July], [July, )], [), .]]

>> Trigrams: 
[[[, 55, ]], [55, ], McCallum], [], McCallum, ,], [McCallum, ,, A.], [,, A., ,], [A., ,, &], [,, &, Nigam], [&, Nigam, ,], [Nigam, ,, K.], [,, K., (], [K., (, 1998], [(, 1998, ,], [1998, ,, July], [,, July, )], [July, ), .]]

>> Noun Phrases are: 
[[55] McCallum, A., Nigam, K.]

>> Named Entities are: 
[('55', 'CARDINAL'), ('July', 'DATE')] 

------------------- Sentence 2 -------------------

A comparison of event models for naive bayes   


>> Tokens are: 
[comparison, event, models, naive, bayes,  ] 

>> PoS Tags are: 
[('comparison', 'NOUN'), ('event', 'NOUN'), ('models', 'NOUN'), ('naive', 'ADJ'), ('bayes', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('comparison', 'ROOT'), ('event', 'compound'), ('models', 'pobj'), ('naive', 'amod'), ('bayes', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[comparison, event], [event, models], [models, naive], [naive, bayes], [bayes,  ]]

>> Trigrams: 
[[comparison, event, models], [event, models, naive], [models, naive, bayes], [naive, bayes,  ]]

>> Noun Phrases are: 
[A comparison, event models, naive bayes]

>> Named Entities are: 
[] 


================================ Paragraph 730 =================================

text classification. In AAAI-98 workshop on learning for text categorization (Vol. 752, pp.  

------------------- Sentence 1 -------------------

text classification. 


>> Tokens are: 
[text, classification, .] 

>> PoS Tags are: 
[('text', 'NOUN'), ('classification', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('text', 'compound'), ('classification', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[text, classification], [classification, .]]

>> Trigrams: 
[[text, classification, .]]

>> Noun Phrases are: 
[text classification]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In AAAI-98 workshop on learning for text categorization (Vol. 


>> Tokens are: 
[AAAI-98, workshop, learning, text, categorization, (, Vol, .] 

>> PoS Tags are: 
[('AAAI-98', 'NOUN'), ('workshop', 'NOUN'), ('learning', 'VERB'), ('text', 'NOUN'), ('categorization', 'NOUN'), ('(', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('AAAI-98', 'compound'), ('workshop', 'pobj'), ('learning', 'pcomp'), ('text', 'compound'), ('categorization', 'pobj'), ('(', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[AAAI-98, workshop], [workshop, learning], [learning, text], [text, categorization], [categorization, (], [(, Vol], [Vol, .]]

>> Trigrams: 
[[AAAI-98, workshop, learning], [workshop, learning, text], [learning, text, categorization], [text, categorization, (], [categorization, (, Vol], [(, Vol, .]]

>> Noun Phrases are: 
[AAAI-98 workshop, text categorization]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

752, pp. 


>> Tokens are: 
[752, ,, pp, .] 

>> PoS Tags are: 
[('752', 'NUM'), (',', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('752', 'ROOT'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[752, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[752, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 731 =================================

41-48).  

------------------- Sentence 1 -------------------

41-48). 


>> Tokens are: 
[41, -, 48, ), .] 

>> PoS Tags are: 
[('41', 'NUM'), ('-', 'SYM'), ('48', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('41', 'ROOT'), ('-', 'punct'), ('48', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[41, -], [-, 48], [48, )], [), .]]

>> Trigrams: 
[[41, -, 48], [-, 48, )], [48, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('41-48', 'DATE')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 732 =================================

[56] Porter, M. F. (1980). An algorithm for suffix stripping. Program, 14(3), 130-137 

------------------- Sentence 1 -------------------

[56] Porter, M. F. (1980). 


>> Tokens are: 
[[, 56, ], Porter, ,, M., F., (, 1980, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('56', 'NUM'), (']', 'PUNCT'), ('Porter', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('F.', 'PROPN'), ('(', 'PUNCT'), ('1980', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('56', 'nummod'), (']', 'punct'), ('Porter', 'ROOT'), (',', 'punct'), ('M.', 'compound'), ('F.', 'conj'), ('(', 'punct'), ('1980', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 56], [56, ]], [], Porter], [Porter, ,], [,, M.], [M., F.], [F., (], [(, 1980], [1980, )], [), .]]

>> Trigrams: 
[[[, 56, ]], [56, ], Porter], [], Porter, ,], [Porter, ,, M.], [,, M., F.], [M., F., (], [F., (, 1980], [(, 1980, )], [1980, ), .]]

>> Noun Phrases are: 
[[56] Porter, M. F.]

>> Named Entities are: 
[('56', 'CARDINAL'), ('1980', 'DATE')] 

------------------- Sentence 2 -------------------

An algorithm for suffix stripping. 


>> Tokens are: 
[algorithm, suffix, stripping, .] 

>> PoS Tags are: 
[('algorithm', 'NOUN'), ('suffix', 'NOUN'), ('stripping', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('algorithm', 'ROOT'), ('suffix', 'compound'), ('stripping', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[algorithm, suffix], [suffix, stripping], [stripping, .]]

>> Trigrams: 
[[algorithm, suffix, stripping], [suffix, stripping, .]]

>> Noun Phrases are: 
[An algorithm, suffix stripping]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Program, 14(3), 130-137 


>> Tokens are: 
[Program, ,, 14(3, ), ,, 130, -, 137] 

>> PoS Tags are: 
[('Program', 'PROPN'), (',', 'PUNCT'), ('14(3', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('130', 'NUM'), ('-', 'SYM'), ('137', 'NUM')] 

>> Dependency Tags are: 
[('Program', 'ROOT'), (',', 'punct'), ('14(3', 'appos'), (')', 'punct'), (',', 'punct'), ('130', 'appos'), ('-', 'punct'), ('137', 'nummod')]

>> Bigrams: 
[[Program, ,], [,, 14(3], [14(3, )], [), ,], [,, 130], [130, -], [-, 137]]

>> Trigrams: 
[[Program, ,, 14(3], [,, 14(3, )], [14(3, ), ,], [), ,, 130], [,, 130, -], [130, -, 137]]

>> Noun Phrases are: 
[Program, 14(3]

>> Named Entities are: 
[('14(3', 'DATE'), ('130', 'CARDINAL')] 


================================ Paragraph 733 =================================

[57] Hayes, P. J. (1992). Intelligent high-volume text processing using shallow, domain- 

------------------- Sentence 1 -------------------

[57] Hayes, P. J. (1992). 


>> Tokens are: 
[[, 57, ], Hayes, ,, P., J., (, 1992, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('57', 'NUM'), (']', 'PUNCT'), ('Hayes', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('J.', 'PROPN'), ('(', 'PUNCT'), ('1992', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('57', 'dep'), (']', 'dep'), ('Hayes', 'ROOT'), (',', 'punct'), ('P.', 'compound'), ('J.', 'conj'), ('(', 'punct'), ('1992', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 57], [57, ]], [], Hayes], [Hayes, ,], [,, P.], [P., J.], [J., (], [(, 1992], [1992, )], [), .]]

>> Trigrams: 
[[[, 57, ]], [57, ], Hayes], [], Hayes, ,], [Hayes, ,, P.], [,, P., J.], [P., J., (], [J., (, 1992], [(, 1992, )], [1992, ), .]]

>> Noun Phrases are: 
[[57] Hayes, P. J.]

>> Named Entities are: 
[('57', 'CARDINAL'), ('P. J.', 'PERSON'), ('1992', 'DATE')] 

------------------- Sentence 2 -------------------

Intelligent high-volume text processing using shallow, 


>> Tokens are: 
[Intelligent, high, -, volume, text, processing, shallow, ,] 

>> PoS Tags are: 
[('Intelligent', 'ADJ'), ('high', 'ADJ'), ('-', 'PUNCT'), ('volume', 'NOUN'), ('text', 'NOUN'), ('processing', 'NOUN'), ('shallow', 'NOUN'), (',', 'PUNCT')] 

>> Dependency Tags are: 
[('Intelligent', 'amod'), ('high', 'amod'), ('-', 'punct'), ('volume', 'compound'), ('text', 'compound'), ('processing', 'ROOT'), ('shallow', 'dobj'), (',', 'punct')]

>> Bigrams: 
[[Intelligent, high], [high, -], [-, volume], [volume, text], [text, processing], [processing, shallow], [shallow, ,]]

>> Trigrams: 
[[Intelligent, high, -], [high, -, volume], [-, volume, text], [volume, text, processing], [text, processing, shallow], [processing, shallow, ,]]

>> Noun Phrases are: 
[Intelligent high-volume text processing, shallow]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

domain- 


>> Tokens are: 
[domain-] 

>> PoS Tags are: 
[('domain-', 'NOUN')] 

>> Dependency Tags are: 
[('domain-', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[domain-]

>> Named Entities are: 
[] 


================================ Paragraph 734 =================================

specific techniques. Text-based intelligent systems: Current research and practice in  

------------------- Sentence 1 -------------------

specific techniques. 


>> Tokens are: 
[specific, techniques, .] 

>> PoS Tags are: 
[('specific', 'ADJ'), ('techniques', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('specific', 'amod'), ('techniques', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[specific, techniques], [techniques, .]]

>> Trigrams: 
[[specific, techniques, .]]

>> Noun Phrases are: 
[specific techniques]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Text-based intelligent systems: Current research and practice in   


>> Tokens are: 
[Text, -, based, intelligent, systems, :, Current, research, practice,  ] 

>> PoS Tags are: 
[('Text', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('intelligent', 'ADJ'), ('systems', 'NOUN'), (':', 'PUNCT'), ('Current', 'ADJ'), ('research', 'NOUN'), ('practice', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Text', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('intelligent', 'amod'), ('systems', 'ROOT'), (':', 'punct'), ('Current', 'amod'), ('research', 'appos'), ('practice', 'conj'), (' ', 'pobj')]

>> Bigrams: 
[[Text, -], [-, based], [based, intelligent], [intelligent, systems], [systems, :], [:, Current], [Current, research], [research, practice], [practice,  ]]

>> Trigrams: 
[[Text, -, based], [-, based, intelligent], [based, intelligent, systems], [intelligent, systems, :], [systems, :, Current], [:, Current, research], [Current, research, practice], [research, practice,  ]]

>> Noun Phrases are: 
[Text-based intelligent systems, Current research, practice]

>> Named Entities are: 
[] 


================================ Paragraph 735 =================================

information extraction and retrieval, 227-242  

------------------- Sentence 1 -------------------

information extraction and retrieval, 227-242   


>> Tokens are: 
[information, extraction, retrieval, ,, 227, -, 242,  ] 

>> PoS Tags are: 
[('information', 'NOUN'), ('extraction', 'NOUN'), ('retrieval', 'NOUN'), (',', 'PUNCT'), ('227', 'NUM'), ('-', 'SYM'), ('242', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('information', 'compound'), ('extraction', 'ROOT'), ('retrieval', 'conj'), (',', 'punct'), ('227', 'nummod'), ('-', 'punct'), ('242', 'prep'), (' ', 'appos')]

>> Bigrams: 
[[information, extraction], [extraction, retrieval], [retrieval, ,], [,, 227], [227, -], [-, 242], [242,  ]]

>> Trigrams: 
[[information, extraction, retrieval], [extraction, retrieval, ,], [retrieval, ,, 227], [,, 227, -], [227, -, 242], [-, 242,  ]]

>> Noun Phrases are: 
[information extraction, retrieval]

>> Named Entities are: 
[('227', 'CARDINAL')] 


================================ Paragraph 736 =================================

[58] Morin, E. (1999, August). Automatic acquisition of semantic relations between terms  

------------------- Sentence 1 -------------------

[58] Morin, E. (1999, August). 


>> Tokens are: 
[[, 58, ], Morin, ,, E., (, 1999, ,, August, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('58', 'NUM'), (']', 'PUNCT'), ('Morin', 'PROPN'), (',', 'PUNCT'), ('E.', 'PROPN'), ('(', 'PUNCT'), ('1999', 'NUM'), (',', 'PUNCT'), ('August', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('58', 'ROOT'), (']', 'punct'), ('Morin', 'appos'), (',', 'punct'), ('E.', 'appos'), ('(', 'punct'), ('1999', 'appos'), (',', 'punct'), ('August', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 58], [58, ]], [], Morin], [Morin, ,], [,, E.], [E., (], [(, 1999], [1999, ,], [,, August], [August, )], [), .]]

>> Trigrams: 
[[[, 58, ]], [58, ], Morin], [], Morin, ,], [Morin, ,, E.], [,, E., (], [E., (, 1999], [(, 1999, ,], [1999, ,, August], [,, August, )], [August, ), .]]

>> Noun Phrases are: 
[Morin, E.]

>> Named Entities are: 
[('58', 'CARDINAL'), ('1999', 'DATE'), ('August', 'DATE')] 

------------------- Sentence 2 -------------------

Automatic acquisition of semantic relations between terms   


>> Tokens are: 
[Automatic, acquisition, semantic, relations, terms,  ] 

>> PoS Tags are: 
[('Automatic', 'ADJ'), ('acquisition', 'NOUN'), ('semantic', 'ADJ'), ('relations', 'NOUN'), ('terms', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Automatic', 'amod'), ('acquisition', 'ROOT'), ('semantic', 'amod'), ('relations', 'pobj'), ('terms', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Automatic, acquisition], [acquisition, semantic], [semantic, relations], [relations, terms], [terms,  ]]

>> Trigrams: 
[[Automatic, acquisition, semantic], [acquisition, semantic, relations], [semantic, relations, terms], [relations, terms,  ]]

>> Noun Phrases are: 
[Automatic acquisition, semantic relations, terms]

>> Named Entities are: 
[('Automatic', 'GPE')] 


================================ Paragraph 737 =================================

from technical corpora. In Proc. of the Fifth International Congress on Terminology and  

------------------- Sentence 1 -------------------

from technical corpora. 


>> Tokens are: 
[technical, corpora, .] 

>> PoS Tags are: 
[('technical', 'ADJ'), ('corpora', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('technical', 'amod'), ('corpora', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[technical, corpora], [corpora, .]]

>> Trigrams: 
[[technical, corpora, .]]

>> Noun Phrases are: 
[technical corpora]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Proc. 


>> Tokens are: 
[Proc, .] 

>> PoS Tags are: 
[('Proc', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Proc', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Proc, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Proc]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

of the Fifth International Congress on Terminology and   


>> Tokens are: 
[Fifth, International, Congress, Terminology,  ] 

>> PoS Tags are: 
[('Fifth', 'PROPN'), ('International', 'PROPN'), ('Congress', 'PROPN'), ('Terminology', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Fifth', 'compound'), ('International', 'compound'), ('Congress', 'pobj'), ('Terminology', 'pobj'), (' ', 'conj')]

>> Bigrams: 
[[Fifth, International], [International, Congress], [Congress, Terminology], [Terminology,  ]]

>> Trigrams: 
[[Fifth, International, Congress], [International, Congress, Terminology], [Congress, Terminology,  ]]

>> Noun Phrases are: 
[the Fifth International Congress, Terminology]

>> Named Entities are: 
[('the Fifth International Congress on Terminology', 'ORG')] 


================================ Paragraph 738 =================================

Knowledge Engineering-TKE’99.  

------------------- Sentence 1 -------------------

Knowledge Engineering-TKE’99. 


>> Tokens are: 
[Knowledge, Engineering, -, TKE’99, .] 

>> PoS Tags are: 
[('Knowledge', 'PROPN'), ('Engineering', 'PROPN'), ('-', 'PUNCT'), ('TKE’99', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Knowledge', 'compound'), ('Engineering', 'compound'), ('-', 'punct'), ('TKE’99', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Knowledge, Engineering], [Engineering, -], [-, TKE’99], [TKE’99, .]]

>> Trigrams: 
[[Knowledge, Engineering, -], [Engineering, -, TKE’99], [-, TKE’99, .]]

>> Noun Phrases are: 
[Knowledge Engineering-TKE’99]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 739 =================================

[59] Bondale, N., Maloor, P., Vaidyanathan, A., Sengupta, S., & Rao, P. V. (1999).  

------------------- Sentence 1 -------------------

[59] Bondale, N., Maloor, P., Vaidyanathan, A., Sengupta, S., & Rao, P. V. (1999). 


>> Tokens are: 
[[, 59, ], Bondale, ,, N., ,, Maloor, ,, P., ,, Vaidyanathan, ,, A., ,, Sengupta, ,, S., ,, &, Rao, ,, P., V., (, 1999, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('59', 'NUM'), (']', 'PUNCT'), ('Bondale', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), (',', 'PUNCT'), ('Maloor', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), (',', 'PUNCT'), ('Vaidyanathan', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), (',', 'PUNCT'), ('Sengupta', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Rao', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('V.', 'PROPN'), ('(', 'PUNCT'), ('1999', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('59', 'nummod'), (']', 'punct'), ('Bondale', 'ROOT'), (',', 'punct'), ('N.', 'conj'), (',', 'punct'), ('Maloor', 'conj'), (',', 'punct'), ('P.', 'appos'), (',', 'punct'), ('Vaidyanathan', 'conj'), (',', 'punct'), ('A.', 'nmod'), (',', 'punct'), ('Sengupta', 'conj'), (',', 'punct'), ('S.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Rao', 'conj'), (',', 'punct'), ('P.', 'compound'), ('V.', 'conj'), ('(', 'punct'), ('1999', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 59], [59, ]], [], Bondale], [Bondale, ,], [,, N.], [N., ,], [,, Maloor], [Maloor, ,], [,, P.], [P., ,], [,, Vaidyanathan], [Vaidyanathan, ,], [,, A.], [A., ,], [,, Sengupta], [Sengupta, ,], [,, S.], [S., ,], [,, &], [&, Rao], [Rao, ,], [,, P.], [P., V.], [V., (], [(, 1999], [1999, )], [), .]]

>> Trigrams: 
[[[, 59, ]], [59, ], Bondale], [], Bondale, ,], [Bondale, ,, N.], [,, N., ,], [N., ,, Maloor], [,, Maloor, ,], [Maloor, ,, P.], [,, P., ,], [P., ,, Vaidyanathan], [,, Vaidyanathan, ,], [Vaidyanathan, ,, A.], [,, A., ,], [A., ,, Sengupta], [,, Sengupta, ,], [Sengupta, ,, S.], [,, S., ,], [S., ,, &], [,, &, Rao], [&, Rao, ,], [Rao, ,, P.], [,, P., V.], [P., V., (], [V., (, 1999], [(, 1999, )], [1999, ), .]]

>> Noun Phrases are: 
[[59] Bondale, N., Maloor, P., Vaidyanathan, A., Sengupta, S., Rao, P. V.]

>> Named Entities are: 
[('59', 'CARDINAL'), ('Vaidyanathan', 'GPE'), ('Sengupta', 'GPE'), ('P. V.', 'PERSON'), ('1999', 'DATE')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 740 =================================

Extraction of information from open-ended questionnaires using natural language processing  

------------------- Sentence 1 -------------------

Extraction of information from open-ended questionnaires using natural language processing   


>> Tokens are: 
[Extraction, information, open, -, ended, questionnaires, natural, language, processing,  ] 

>> PoS Tags are: 
[('Extraction', 'NOUN'), ('information', 'NOUN'), ('open', 'ADV'), ('-', 'PUNCT'), ('ended', 'ADJ'), ('questionnaires', 'NOUN'), ('natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Extraction', 'ROOT'), ('information', 'pobj'), ('open', 'advmod'), ('-', 'punct'), ('ended', 'amod'), ('questionnaires', 'pobj'), ('natural', 'amod'), ('language', 'compound'), ('processing', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[Extraction, information], [information, open], [open, -], [-, ended], [ended, questionnaires], [questionnaires, natural], [natural, language], [language, processing], [processing,  ]]

>> Trigrams: 
[[Extraction, information, open], [information, open, -], [open, -, ended], [-, ended, questionnaires], [ended, questionnaires, natural], [questionnaires, natural, language], [natural, language, processing], [language, processing,  ]]

>> Noun Phrases are: 
[Extraction, information, open-ended questionnaires, natural language processing]

>> Named Entities are: 
[] 


================================ Paragraph 741 =================================

techniques. Computer Science and Informatics, 29(2), 15-22  

------------------- Sentence 1 -------------------

techniques. 


>> Tokens are: 
[techniques, .] 

>> PoS Tags are: 
[('techniques', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('techniques', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[techniques, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[techniques]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Computer Science and Informatics, 29(2), 15-22   


>> Tokens are: 
[Computer, Science, Informatics, ,, 29(2, ), ,, 15, -, 22,  ] 

>> PoS Tags are: 
[('Computer', 'PROPN'), ('Science', 'PROPN'), ('Informatics', 'PROPN'), (',', 'PUNCT'), ('29(2', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('15', 'NUM'), ('-', 'SYM'), ('22', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Computer', 'compound'), ('Science', 'ROOT'), ('Informatics', 'conj'), (',', 'punct'), ('29(2', 'appos'), (')', 'punct'), (',', 'punct'), ('15', 'appos'), ('-', 'punct'), ('22', 'prep'), (' ', 'appos')]

>> Bigrams: 
[[Computer, Science], [Science, Informatics], [Informatics, ,], [,, 29(2], [29(2, )], [), ,], [,, 15], [15, -], [-, 22], [22,  ]]

>> Trigrams: 
[[Computer, Science, Informatics], [Science, Informatics, ,], [Informatics, ,, 29(2], [,, 29(2, )], [29(2, ), ,], [), ,, 15], [,, 15, -], [15, -, 22], [-, 22,  ]]

>> Noun Phrases are: 
[Computer Science, Informatics]

>> Named Entities are: 
[('Computer Science', 'ORG'), ('15-22', 'TIME')] 


================================ Paragraph 742 =================================

[60] Glasgow, B., Mandell, A., Binney, D., Ghemri, L., & Fisher, D. (1998). MITA: An  

------------------- Sentence 1 -------------------

[60] Glasgow, B., Mandell, A., Binney, D., Ghemri, L., & Fisher, D. (1998). 


>> Tokens are: 
[[, 60, ], Glasgow, ,, B., ,, Mandell, ,, A., ,, Binney, ,, D., ,, Ghemri, ,, L., ,, &, Fisher, ,, D., (, 1998, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('60', 'NUM'), (']', 'PUNCT'), ('Glasgow', 'PROPN'), (',', 'PUNCT'), ('B.', 'PROPN'), (',', 'PUNCT'), ('Mandell', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), (',', 'PUNCT'), ('Binney', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), (',', 'PUNCT'), ('Ghemri', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Fisher', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('(', 'PUNCT'), ('1998', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('60', 'dep'), (']', 'punct'), ('Glasgow', 'ROOT'), (',', 'punct'), ('B.', 'conj'), (',', 'punct'), ('Mandell', 'conj'), (',', 'punct'), ('A.', 'conj'), (',', 'punct'), ('Binney', 'conj'), (',', 'punct'), ('D.', 'conj'), (',', 'punct'), ('Ghemri', 'conj'), (',', 'punct'), ('L.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Fisher', 'conj'), (',', 'punct'), ('D.', 'conj'), ('(', 'punct'), ('1998', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 60], [60, ]], [], Glasgow], [Glasgow, ,], [,, B.], [B., ,], [,, Mandell], [Mandell, ,], [,, A.], [A., ,], [,, Binney], [Binney, ,], [,, D.], [D., ,], [,, Ghemri], [Ghemri, ,], [,, L.], [L., ,], [,, &], [&, Fisher], [Fisher, ,], [,, D.], [D., (], [(, 1998], [1998, )], [), .]]

>> Trigrams: 
[[[, 60, ]], [60, ], Glasgow], [], Glasgow, ,], [Glasgow, ,, B.], [,, B., ,], [B., ,, Mandell], [,, Mandell, ,], [Mandell, ,, A.], [,, A., ,], [A., ,, Binney], [,, Binney, ,], [Binney, ,, D.], [,, D., ,], [D., ,, Ghemri], [,, Ghemri, ,], [Ghemri, ,, L.], [,, L., ,], [L., ,, &], [,, &, Fisher], [&, Fisher, ,], [Fisher, ,, D.], [,, D., (], [D., (, 1998], [(, 1998, )], [1998, ), .]]

>> Noun Phrases are: 
[[60] Glasgow, B., Mandell, A., Binney, D., Ghemri, L., Fisher, D.]

>> Named Entities are: 
[('60', 'CARDINAL'), ('B.', 'PERSON'), ('Mandell, A.', 'ORG'), ('Binney', 'GPE'), ('D.', 'NORP'), ('D.', 'NORP'), ('1998', 'DATE')] 

------------------- Sentence 2 -------------------

MITA: 


>> Tokens are: 
[MITA, :] 

>> PoS Tags are: 
[('MITA', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('MITA', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[MITA, :]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[MITA]

>> Named Entities are: 
[('MITA', 'PERSON')] 

------------------- Sentence 3 -------------------

An   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 743 =================================

information-extraction approach to the analysis of free-form text in life insurance  

------------------- Sentence 1 -------------------

information-extraction approach to the analysis of free-form text in life insurance   


>> Tokens are: 
[information, -, extraction, approach, analysis, free, -, form, text, life, insurance,  ] 

>> PoS Tags are: 
[('information', 'NOUN'), ('-', 'PUNCT'), ('extraction', 'NOUN'), ('approach', 'NOUN'), ('analysis', 'NOUN'), ('free', 'ADJ'), ('-', 'PUNCT'), ('form', 'NOUN'), ('text', 'NOUN'), ('life', 'NOUN'), ('insurance', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('information', 'compound'), ('-', 'punct'), ('extraction', 'compound'), ('approach', 'ROOT'), ('analysis', 'pobj'), ('free', 'amod'), ('-', 'punct'), ('form', 'compound'), ('text', 'pobj'), ('life', 'compound'), ('insurance', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[information, -], [-, extraction], [extraction, approach], [approach, analysis], [analysis, free], [free, -], [-, form], [form, text], [text, life], [life, insurance], [insurance,  ]]

>> Trigrams: 
[[information, -, extraction], [-, extraction, approach], [extraction, approach, analysis], [approach, analysis, free], [analysis, free, -], [free, -, form], [-, form, text], [form, text, life], [text, life, insurance], [life, insurance,  ]]

>> Noun Phrases are: 
[information-extraction approach, the analysis, free-form text, life insurance]

>> Named Entities are: 
[] 


================================ Paragraph 744 =================================

applications. AI magazine, 19(1), 59.  

------------------- Sentence 1 -------------------

applications. 


>> Tokens are: 
[applications, .] 

>> PoS Tags are: 
[('applications', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('applications', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[applications, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[applications]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

AI magazine, 19(1), 59.   


>> Tokens are: 
[AI, magazine, ,, 19(1, ), ,, 59, .,  ] 

>> PoS Tags are: 
[('AI', 'PROPN'), ('magazine', 'NOUN'), (',', 'PUNCT'), ('19(1', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('59', 'NUM'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('AI', 'compound'), ('magazine', 'ROOT'), (',', 'punct'), ('19(1', 'appos'), (')', 'punct'), (',', 'punct'), ('59', 'appos'), ('.', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[AI, magazine], [magazine, ,], [,, 19(1], [19(1, )], [), ,], [,, 59], [59, .], [.,  ]]

>> Trigrams: 
[[AI, magazine, ,], [magazine, ,, 19(1], [,, 19(1, )], [19(1, ), ,], [), ,, 59], [,, 59, .], [59, .,  ]]

>> Noun Phrases are: 
[AI magazine]

>> Named Entities are: 
[('AI', 'ORG'), ('19(1', 'DATE'), ('59', 'DATE')] 


================================ Paragraph 745 =================================

[61] Ahonen, H., Heinonen, O., Klemettinen, M., & Verkamo, A. I. (1998, April). Applying  

------------------- Sentence 1 -------------------

[61] Ahonen, H., Heinonen, O., Klemettinen, M., & Verkamo, A. I. (1998, April). 


>> Tokens are: 
[[, 61, ], Ahonen, ,, H., ,, Heinonen, ,, O., ,, Klemettinen, ,, M., ,, &, Verkamo, ,, A., I., (, 1998, ,, April, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('61', 'NUM'), (']', 'PUNCT'), ('Ahonen', 'PROPN'), (',', 'PUNCT'), ('H.', 'PROPN'), (',', 'PUNCT'), ('Heinonen', 'PROPN'), (',', 'PUNCT'), ('O.', 'PROPN'), (',', 'PUNCT'), ('Klemettinen', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Verkamo', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('I.', 'NOUN'), ('(', 'PUNCT'), ('1998', 'NUM'), (',', 'PUNCT'), ('April', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('61', 'nummod'), (']', 'punct'), ('Ahonen', 'ROOT'), (',', 'punct'), ('H.', 'conj'), (',', 'punct'), ('Heinonen', 'conj'), (',', 'punct'), ('O.', 'conj'), (',', 'punct'), ('Klemettinen', 'conj'), (',', 'punct'), ('M.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Verkamo', 'conj'), (',', 'punct'), ('A.', 'compound'), ('I.', 'conj'), ('(', 'punct'), ('1998', 'appos'), (',', 'punct'), ('April', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 61], [61, ]], [], Ahonen], [Ahonen, ,], [,, H.], [H., ,], [,, Heinonen], [Heinonen, ,], [,, O.], [O., ,], [,, Klemettinen], [Klemettinen, ,], [,, M.], [M., ,], [,, &], [&, Verkamo], [Verkamo, ,], [,, A.], [A., I.], [I., (], [(, 1998], [1998, ,], [,, April], [April, )], [), .]]

>> Trigrams: 
[[[, 61, ]], [61, ], Ahonen], [], Ahonen, ,], [Ahonen, ,, H.], [,, H., ,], [H., ,, Heinonen], [,, Heinonen, ,], [Heinonen, ,, O.], [,, O., ,], [O., ,, Klemettinen], [,, Klemettinen, ,], [Klemettinen, ,, M.], [,, M., ,], [M., ,, &], [,, &, Verkamo], [&, Verkamo, ,], [Verkamo, ,, A.], [,, A., I.], [A., I., (], [I., (, 1998], [(, 1998, ,], [1998, ,, April], [,, April, )], [April, ), .]]

>> Noun Phrases are: 
[[61] Ahonen, H., Heinonen, O., Klemettinen, M., Verkamo, A. I.]

>> Named Entities are: 
[('61', 'CARDINAL'), ('Heinonen', 'GPE'), ('O.', 'PERSON'), ('A. I.', 'PERSON'), ('1998', 'DATE'), ('April', 'DATE')] 

------------------- Sentence 2 -------------------

Applying   


>> Tokens are: 
[Applying,  ] 

>> PoS Tags are: 
[('Applying', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Applying', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[Applying,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 746 =================================

data mining techniques for descriptive phrase extraction in digital document collections.  

------------------- Sentence 1 -------------------

data mining techniques for descriptive phrase extraction in digital document collections. 


>> Tokens are: 
[data, mining, techniques, descriptive, phrase, extraction, digital, document, collections, .] 

>> PoS Tags are: 
[('data', 'NOUN'), ('mining', 'NOUN'), ('techniques', 'NOUN'), ('descriptive', 'ADJ'), ('phrase', 'NOUN'), ('extraction', 'NOUN'), ('digital', 'ADJ'), ('document', 'NOUN'), ('collections', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('data', 'compound'), ('mining', 'compound'), ('techniques', 'ROOT'), ('descriptive', 'amod'), ('phrase', 'compound'), ('extraction', 'pobj'), ('digital', 'amod'), ('document', 'compound'), ('collections', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[data, mining], [mining, techniques], [techniques, descriptive], [descriptive, phrase], [phrase, extraction], [extraction, digital], [digital, document], [document, collections], [collections, .]]

>> Trigrams: 
[[data, mining, techniques], [mining, techniques, descriptive], [techniques, descriptive, phrase], [descriptive, phrase, extraction], [phrase, extraction, digital], [extraction, digital, document], [digital, document, collections], [document, collections, .]]

>> Noun Phrases are: 
[data mining techniques, descriptive phrase extraction, digital document collections]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 747 =================================

In Research and Technology Advances in Digital Libraries, 1998. ADL 98. Proceedings.  

------------------- Sentence 1 -------------------

In Research and Technology Advances in Digital Libraries, 1998. 


>> Tokens are: 
[Research, Technology, Advances, Digital, Libraries, ,, 1998, .] 

>> PoS Tags are: 
[('Research', 'PROPN'), ('Technology', 'PROPN'), ('Advances', 'PROPN'), ('Digital', 'PROPN'), ('Libraries', 'PROPN'), (',', 'PUNCT'), ('1998', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Research', 'nmod'), ('Technology', 'conj'), ('Advances', 'pobj'), ('Digital', 'compound'), ('Libraries', 'pobj'), (',', 'punct'), ('1998', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Research, Technology], [Technology, Advances], [Advances, Digital], [Digital, Libraries], [Libraries, ,], [,, 1998], [1998, .]]

>> Trigrams: 
[[Research, Technology, Advances], [Technology, Advances, Digital], [Advances, Digital, Libraries], [Digital, Libraries, ,], [Libraries, ,, 1998], [,, 1998, .]]

>> Noun Phrases are: 
[Research and Technology Advances, Digital Libraries]

>> Named Entities are: 
[('Research and Technology Advances', 'ORG'), ('Digital Libraries', 'ORG'), ('1998', 'DATE')] 

------------------- Sentence 2 -------------------

ADL 98. 


>> Tokens are: 
[ADL, 98, .] 

>> PoS Tags are: 
[('ADL', 'PROPN'), ('98', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ADL', 'ROOT'), ('98', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[ADL, 98], [98, .]]

>> Trigrams: 
[[ADL, 98, .]]

>> Noun Phrases are: 
[ADL]

>> Named Entities are: 
[('98', 'CARDINAL')] 

------------------- Sentence 3 -------------------

Proceedings.   


>> Tokens are: 
[Proceedings, .,  ] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'ROOT'), ('.', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Proceedings, .], [.,  ]]

>> Trigrams: 
[[Proceedings, .,  ]]

>> Noun Phrases are: 
[Proceedings]

>> Named Entities are: 
[] 


================================ Paragraph 748 =================================

IEEE International Forum on (pp. 2-11). IEEE.  

------------------- Sentence 1 -------------------

IEEE International Forum on (pp. 


>> Tokens are: 
[IEEE, International, Forum, (, pp, .] 

>> PoS Tags are: 
[('IEEE', 'PROPN'), ('International', 'PROPN'), ('Forum', 'PROPN'), ('(', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('IEEE', 'compound'), ('International', 'compound'), ('Forum', 'ROOT'), ('(', 'punct'), ('pp', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[IEEE, International], [International, Forum], [Forum, (], [(, pp], [pp, .]]

>> Trigrams: 
[[IEEE, International, Forum], [International, Forum, (], [Forum, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[IEEE International Forum, (pp]

>> Named Entities are: 
[('IEEE International Forum', 'ORG')] 

------------------- Sentence 2 -------------------

2-11). 


>> Tokens are: 
[2, -, 11, ), .] 

>> PoS Tags are: 
[('2', 'NUM'), ('-', 'SYM'), ('11', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('2', 'ROOT'), ('-', 'punct'), ('11', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[2, -], [-, 11], [11, )], [), .]]

>> Trigrams: 
[[2, -, 11], [-, 11, )], [11, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2-11', 'DATE')] 

------------------- Sentence 3 -------------------

IEEE. 


>> Tokens are: 
[IEEE, .] 

>> PoS Tags are: 
[('IEEE', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('IEEE', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[IEEE, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[IEEE]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 749 =================================

[62] Zajic, D. M., Dorr, B. J., & Lin, J. (2008). Single-document and multi-document  

------------------- Sentence 1 -------------------

[62] Zajic, D. M., Dorr, B. J., & Lin, J. (2008). 


>> Tokens are: 
[[, 62, ], Zajic, ,, D., M., ,, Dorr, ,, B., J., ,, &, Lin, ,, J., (, 2008, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('62', 'NUM'), (']', 'PUNCT'), ('Zajic', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('M.', 'PROPN'), (',', 'PUNCT'), ('Dorr', 'PROPN'), (',', 'PUNCT'), ('B.', 'PROPN'), ('J.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Lin', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('(', 'PUNCT'), ('2008', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('62', 'dep'), (']', 'dep'), ('Zajic', 'ROOT'), (',', 'punct'), ('D.', 'compound'), ('M.', 'appos'), (',', 'punct'), ('Dorr', 'conj'), (',', 'punct'), ('B.', 'compound'), ('J.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Lin', 'conj'), (',', 'punct'), ('J.', 'conj'), ('(', 'punct'), ('2008', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 62], [62, ]], [], Zajic], [Zajic, ,], [,, D.], [D., M.], [M., ,], [,, Dorr], [Dorr, ,], [,, B.], [B., J.], [J., ,], [,, &], [&, Lin], [Lin, ,], [,, J.], [J., (], [(, 2008], [2008, )], [), .]]

>> Trigrams: 
[[[, 62, ]], [62, ], Zajic], [], Zajic, ,], [Zajic, ,, D.], [,, D., M.], [D., M., ,], [M., ,, Dorr], [,, Dorr, ,], [Dorr, ,, B.], [,, B., J.], [B., J., ,], [J., ,, &], [,, &, Lin], [&, Lin, ,], [Lin, ,, J.], [,, J., (], [J., (, 2008], [(, 2008, )], [2008, ), .]]

>> Noun Phrases are: 
[[62] Zajic, , D. M., Dorr, B. J., Lin, J.]

>> Named Entities are: 
[('62', 'CARDINAL'), ('D. M.', 'NORP'), ('Dorr', 'PERSON'), ('B. J.', 'PERSON')] 

------------------- Sentence 2 -------------------

Single-document and multi-document   


>> Tokens are: 
[Single, -, document, multi, -, document,  ] 

>> PoS Tags are: 
[('Single', 'ADJ'), ('-', 'PUNCT'), ('document', 'NOUN'), ('multi', 'ADJ'), ('-', 'NOUN'), ('document', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Single', 'amod'), ('-', 'punct'), ('document', 'nsubj'), ('multi', 'conj'), ('-', 'conj'), ('document', 'amod'), (' ', 'ROOT')]

>> Bigrams: 
[[Single, -], [-, document], [document, multi], [multi, -], [-, document], [document,  ]]

>> Trigrams: 
[[Single, -, document], [-, document, multi], [document, multi, -], [multi, -, document], [-, document,  ]]

>> Noun Phrases are: 
[Single-document, -]

>> Named Entities are: 
[] 


================================ Paragraph 750 =================================

summarization techniques for email threads using sentence compression. Information  

------------------- Sentence 1 -------------------

summarization techniques for email threads using sentence compression. 


>> Tokens are: 
[summarization, techniques, email, threads, sentence, compression, .] 

>> PoS Tags are: 
[('summarization', 'NOUN'), ('techniques', 'NOUN'), ('email', 'NOUN'), ('threads', 'NOUN'), ('sentence', 'NOUN'), ('compression', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('summarization', 'compound'), ('techniques', 'ROOT'), ('email', 'compound'), ('threads', 'pobj'), ('sentence', 'compound'), ('compression', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[summarization, techniques], [techniques, email], [email, threads], [threads, sentence], [sentence, compression], [compression, .]]

>> Trigrams: 
[[summarization, techniques, email], [techniques, email, threads], [email, threads, sentence], [threads, sentence, compression], [sentence, compression, .]]

>> Noun Phrases are: 
[summarization techniques, email threads, sentence compression]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Information   


>> Tokens are: 
[Information,  ] 

>> PoS Tags are: 
[('Information', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Information', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[Information,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Information]

>> Named Entities are: 
[] 


================================ Paragraph 751 =================================

Processing & Management, 44(4), 1600-1610.  

------------------- Sentence 1 -------------------

Processing & Management, 44(4), 1600-1610. 


>> Tokens are: 
[Processing, &, Management, ,, 44(4, ), ,, 1600, -, 1610, .] 

>> PoS Tags are: 
[('Processing', 'PROPN'), ('&', 'CCONJ'), ('Management', 'PROPN'), (',', 'PUNCT'), ('44(4', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('1600', 'NUM'), ('-', 'SYM'), ('1610', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Processing', 'ROOT'), ('&', 'cc'), ('Management', 'conj'), (',', 'punct'), ('44(4', 'npadvmod'), (')', 'punct'), (',', 'punct'), ('1600', 'npadvmod'), ('-', 'punct'), ('1610', 'prep'), ('.', 'punct')]

>> Bigrams: 
[[Processing, &], [&, Management], [Management, ,], [,, 44(4], [44(4, )], [), ,], [,, 1600], [1600, -], [-, 1610], [1610, .]]

>> Trigrams: 
[[Processing, &, Management], [&, Management, ,], [Management, ,, 44(4], [,, 44(4, )], [44(4, ), ,], [), ,, 1600], [,, 1600, -], [1600, -, 1610], [-, 1610, .]]

>> Noun Phrases are: 
[Processing, Management]

>> Named Entities are: 
[('Processing & Management', 'ORG'), ('44(4', 'DATE'), ('1600-1610', 'DATE')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 752 =================================

[63] Fattah, M. A., & Ren, F. (2009). GA, MR, FFNN, PNN and GMM based models for  

------------------- Sentence 1 -------------------

[63] Fattah, M. A., & Ren, F. (2009). 


>> Tokens are: 
[[, 63, ], Fattah, ,, M., A., ,, &, Ren, ,, F., (, 2009, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('63', 'NUM'), (']', 'PUNCT'), ('Fattah', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('A.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Ren', 'PROPN'), (',', 'PUNCT'), ('F.', 'PROPN'), ('(', 'PUNCT'), ('2009', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('63', 'dep'), (']', 'punct'), ('Fattah', 'ROOT'), (',', 'punct'), ('M.', 'compound'), ('A.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Ren', 'conj'), (',', 'punct'), ('F.', 'appos'), ('(', 'punct'), ('2009', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 63], [63, ]], [], Fattah], [Fattah, ,], [,, M.], [M., A.], [A., ,], [,, &], [&, Ren], [Ren, ,], [,, F.], [F., (], [(, 2009], [2009, )], [), .]]

>> Trigrams: 
[[[, 63, ]], [63, ], Fattah], [], Fattah, ,], [Fattah, ,, M.], [,, M., A.], [M., A., ,], [A., ,, &], [,, &, Ren], [&, Ren, ,], [Ren, ,, F.], [,, F., (], [F., (, 2009], [(, 2009, )], [2009, ), .]]

>> Noun Phrases are: 
[[63] Fattah, M. A., Ren, F.]

>> Named Entities are: 
[('63', 'CARDINAL'), ('M. A.', 'PERSON'), ('& Ren, F.', 'WORK_OF_ART'), ('2009', 'DATE')] 

------------------- Sentence 2 -------------------

GA, MR, FFNN, PNN and GMM based models for   


>> Tokens are: 
[GA, ,, MR, ,, FFNN, ,, PNN, GMM, based, models,  ] 

>> PoS Tags are: 
[('GA', 'PROPN'), (',', 'PUNCT'), ('MR', 'PROPN'), (',', 'PUNCT'), ('FFNN', 'PROPN'), (',', 'PUNCT'), ('PNN', 'PROPN'), ('GMM', 'PROPN'), ('based', 'VERB'), ('models', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('GA', 'ROOT'), (',', 'punct'), ('MR', 'appos'), (',', 'punct'), ('FFNN', 'conj'), (',', 'punct'), ('PNN', 'conj'), ('GMM', 'nmod'), ('based', 'amod'), ('models', 'conj'), (' ', 'pobj')]

>> Bigrams: 
[[GA, ,], [,, MR], [MR, ,], [,, FFNN], [FFNN, ,], [,, PNN], [PNN, GMM], [GMM, based], [based, models], [models,  ]]

>> Trigrams: 
[[GA, ,, MR], [,, MR, ,], [MR, ,, FFNN], [,, FFNN, ,], [FFNN, ,, PNN], [,, PNN, GMM], [PNN, GMM, based], [GMM, based, models], [based, models,  ]]

>> Noun Phrases are: 
[GA, MR, FFNN, PNN, GMM based models]

>> Named Entities are: 
[('MR', 'GPE'), ('FFNN', 'ORG'), ('PNN', 'ORG'), ('GMM', 'ORG')] 


================================ Paragraph 753 =================================

automatic text summarization. Computer Speech & Language, 23(1), 126-144.  

------------------- Sentence 1 -------------------

automatic text summarization. 


>> Tokens are: 
[automatic, text, summarization, .] 

>> PoS Tags are: 
[('automatic', 'ADJ'), ('text', 'NOUN'), ('summarization', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('automatic', 'amod'), ('text', 'compound'), ('summarization', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[automatic, text], [text, summarization], [summarization, .]]

>> Trigrams: 
[[automatic, text, summarization], [text, summarization, .]]

>> Noun Phrases are: 
[automatic text summarization]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Computer Speech & Language, 23(1), 126-144.   


>> Tokens are: 
[Computer, Speech, &, Language, ,, 23(1, ), ,, 126, -, 144, .,  ] 

>> PoS Tags are: 
[('Computer', 'PROPN'), ('Speech', 'PROPN'), ('&', 'CCONJ'), ('Language', 'PROPN'), (',', 'PUNCT'), ('23(1', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('126', 'NUM'), ('-', 'SYM'), ('144', 'NUM'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Computer', 'compound'), ('Speech', 'ROOT'), ('&', 'cc'), ('Language', 'conj'), (',', 'punct'), ('23(1', 'appos'), (')', 'punct'), (',', 'punct'), ('126', 'appos'), ('-', 'punct'), ('144', 'prep'), ('.', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Computer, Speech], [Speech, &], [&, Language], [Language, ,], [,, 23(1], [23(1, )], [), ,], [,, 126], [126, -], [-, 144], [144, .], [.,  ]]

>> Trigrams: 
[[Computer, Speech, &], [Speech, &, Language], [&, Language, ,], [Language, ,, 23(1], [,, 23(1, )], [23(1, ), ,], [), ,, 126], [,, 126, -], [126, -, 144], [-, 144, .], [144, .,  ]]

>> Noun Phrases are: 
[Computer Speech, Language]

>> Named Entities are: 
[('Computer Speech & Language', 'ORG'), ('126', 'CARDINAL')] 


================================ Paragraph 754 =================================

[64] Gong, Y., & Liu, X. (2001, September). Generic text summarization using relevance  

------------------- Sentence 1 -------------------

[64] Gong, Y., & Liu, X. (2001, September). 


>> Tokens are: 
[[, 64, ], Gong, ,, Y., ,, &, Liu, ,, X., (, 2001, ,, September, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('64', 'NUM'), (']', 'PUNCT'), ('Gong', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Liu', 'PROPN'), (',', 'PUNCT'), ('X.', 'PROPN'), ('(', 'PUNCT'), ('2001', 'NUM'), (',', 'PUNCT'), ('September', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('64', 'dep'), (']', 'punct'), ('Gong', 'ROOT'), (',', 'punct'), ('Y.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Liu', 'conj'), (',', 'punct'), ('X.', 'conj'), ('(', 'punct'), ('2001', 'appos'), (',', 'punct'), ('September', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 64], [64, ]], [], Gong], [Gong, ,], [,, Y.], [Y., ,], [,, &], [&, Liu], [Liu, ,], [,, X.], [X., (], [(, 2001], [2001, ,], [,, September], [September, )], [), .]]

>> Trigrams: 
[[[, 64, ]], [64, ], Gong], [], Gong, ,], [Gong, ,, Y.], [,, Y., ,], [Y., ,, &], [,, &, Liu], [&, Liu, ,], [Liu, ,, X.], [,, X., (], [X., (, 2001], [(, 2001, ,], [2001, ,, September], [,, September, )], [September, ), .]]

>> Noun Phrases are: 
[[64] Gong, Y., Liu, X.]

>> Named Entities are: 
[('64', 'CARDINAL'), ('X.', 'PERSON'), ('2001, September', 'DATE')] 

------------------- Sentence 2 -------------------

Generic text summarization using relevance   


>> Tokens are: 
[Generic, text, summarization, relevance,  ] 

>> PoS Tags are: 
[('Generic', 'ADJ'), ('text', 'NOUN'), ('summarization', 'NOUN'), ('relevance', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Generic', 'amod'), ('text', 'compound'), ('summarization', 'ROOT'), ('relevance', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[Generic, text], [text, summarization], [summarization, relevance], [relevance,  ]]

>> Trigrams: 
[[Generic, text, summarization], [text, summarization, relevance], [summarization, relevance,  ]]

>> Noun Phrases are: 
[Generic text summarization, relevance]

>> Named Entities are: 
[] 


================================ Paragraph 755 =================================

measure and latent semantic analysis. In Proceedings of the 24th annual international ACM  

------------------- Sentence 1 -------------------

measure and latent semantic analysis. 


>> Tokens are: 
[measure, latent, semantic, analysis, .] 

>> PoS Tags are: 
[('measure', 'NOUN'), ('latent', 'NOUN'), ('semantic', 'ADJ'), ('analysis', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('measure', 'ROOT'), ('latent', 'nmod'), ('semantic', 'amod'), ('analysis', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[measure, latent], [latent, semantic], [semantic, analysis], [analysis, .]]

>> Trigrams: 
[[measure, latent, semantic], [latent, semantic, analysis], [semantic, analysis, .]]

>> Noun Phrases are: 
[measure, latent semantic analysis]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Proceedings of the 24th annual international ACM   


>> Tokens are: 
[Proceedings, 24th, annual, international, ACM,  ] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('24th', 'ADJ'), ('annual', 'ADJ'), ('international', 'ADJ'), ('ACM', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('24th', 'amod'), ('annual', 'amod'), ('international', 'amod'), ('ACM', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Proceedings, 24th], [24th, annual], [annual, international], [international, ACM], [ACM,  ]]

>> Trigrams: 
[[Proceedings, 24th, annual], [24th, annual, international], [annual, international, ACM], [international, ACM,  ]]

>> Noun Phrases are: 
[Proceedings, the 24th annual international ACM]

>> Named Entities are: 
[('Proceedings', 'PERSON'), ('24th', 'ORDINAL'), ('annual', 'DATE'), ('ACM', 'ORG')] 


================================ Paragraph 756 =================================

SIGIR conference on Research and development in information retrieval (pp. 19-25). ACM.  

------------------- Sentence 1 -------------------

SIGIR conference on Research and development in information retrieval (pp. 


>> Tokens are: 
[SIGIR, conference, Research, development, information, retrieval, (, pp, .] 

>> PoS Tags are: 
[('SIGIR', 'ADJ'), ('conference', 'NOUN'), ('Research', 'PROPN'), ('development', 'NOUN'), ('information', 'NOUN'), ('retrieval', 'NOUN'), ('(', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('SIGIR', 'compound'), ('conference', 'ROOT'), ('Research', 'pobj'), ('development', 'conj'), ('information', 'compound'), ('retrieval', 'pobj'), ('(', 'punct'), ('pp', 'parataxis'), ('.', 'punct')]

>> Bigrams: 
[[SIGIR, conference], [conference, Research], [Research, development], [development, information], [information, retrieval], [retrieval, (], [(, pp], [pp, .]]

>> Trigrams: 
[[SIGIR, conference, Research], [conference, Research, development], [Research, development, information], [development, information, retrieval], [information, retrieval, (], [retrieval, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[SIGIR conference, Research, development, information retrieval]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

19-25). 


>> Tokens are: 
[19, -, 25, ), .] 

>> PoS Tags are: 
[('19', 'NUM'), ('-', 'SYM'), ('25', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('19', 'ROOT'), ('-', 'punct'), ('25', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[19, -], [-, 25], [25, )], [), .]]

>> Trigrams: 
[[19, -, 25], [-, 25, )], [25, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('19-25', 'DATE')] 

------------------- Sentence 3 -------------------

ACM. 


>> Tokens are: 
[ACM, .] 

>> PoS Tags are: 
[('ACM', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ACM', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[ACM, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[ACM]

>> Named Entities are: 
[('ACM', 'ORG')] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 757 =================================

[65] Dunlavy, D. M., O’Leary, D. P., Conroy, J. M., & Schlesinger, J. D. (2007). QCS: A  

------------------- Sentence 1 -------------------

[65] Dunlavy, D. M., O’Leary, D. P., Conroy, J. M., & Schlesinger, J. D. (2007). 


>> Tokens are: 
[[, 65, ], Dunlavy, ,, D., M., ,, O’Leary, ,, D., P., ,, Conroy, ,, J., M., ,, &, Schlesinger, ,, J., D., (, 2007, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('65', 'NUM'), (']', 'PUNCT'), ('Dunlavy', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('M.', 'PROPN'), (',', 'PUNCT'), ('O’Leary', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('P.', 'PROPN'), (',', 'PUNCT'), ('Conroy', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('M.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Schlesinger', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('D.', 'PROPN'), ('(', 'PUNCT'), ('2007', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('65', 'nummod'), (']', 'punct'), ('Dunlavy', 'ROOT'), (',', 'punct'), ('D.', 'compound'), ('M.', 'conj'), (',', 'punct'), ('O’Leary', 'appos'), (',', 'punct'), ('D.', 'compound'), ('P.', 'appos'), (',', 'punct'), ('Conroy', 'conj'), (',', 'punct'), ('J.', 'compound'), ('M.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Schlesinger', 'conj'), (',', 'punct'), ('J.', 'compound'), ('D.', 'conj'), ('(', 'punct'), ('2007', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 65], [65, ]], [], Dunlavy], [Dunlavy, ,], [,, D.], [D., M.], [M., ,], [,, O’Leary], [O’Leary, ,], [,, D.], [D., P.], [P., ,], [,, Conroy], [Conroy, ,], [,, J.], [J., M.], [M., ,], [,, &], [&, Schlesinger], [Schlesinger, ,], [,, J.], [J., D.], [D., (], [(, 2007], [2007, )], [), .]]

>> Trigrams: 
[[[, 65, ]], [65, ], Dunlavy], [], Dunlavy, ,], [Dunlavy, ,, D.], [,, D., M.], [D., M., ,], [M., ,, O’Leary], [,, O’Leary, ,], [O’Leary, ,, D.], [,, D., P.], [D., P., ,], [P., ,, Conroy], [,, Conroy, ,], [Conroy, ,, J.], [,, J., M.], [J., M., ,], [M., ,, &], [,, &, Schlesinger], [&, Schlesinger, ,], [Schlesinger, ,, J.], [,, J., D.], [J., D., (], [D., (, 2007], [(, 2007, )], [2007, ), .]]

>> Noun Phrases are: 
[[65] Dunlavy, D. M., O’Leary, D. P., Conroy, J. M., Schlesinger, J. D.]

>> Named Entities are: 
[('65', 'CARDINAL'), ('D. M.', 'NORP'), ('D. P.', 'PERSON'), ('Conroy', 'GPE'), ('J. M.,', 'PERSON'), ('J. D.', 'PERSON'), ('2007', 'DATE')] 

------------------- Sentence 2 -------------------

QCS: 


>> Tokens are: 
[QCS, :] 

>> PoS Tags are: 
[('QCS', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('QCS', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[QCS, :]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[QCS]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

A   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 758 =================================

system for querying, clustering and summarizing documents. Information processing &  

------------------- Sentence 1 -------------------

system for querying, clustering and summarizing documents. 


>> Tokens are: 
[system, querying, ,, clustering, summarizing, documents, .] 

>> PoS Tags are: 
[('system', 'NOUN'), ('querying', 'VERB'), (',', 'PUNCT'), ('clustering', 'NOUN'), ('summarizing', 'VERB'), ('documents', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('system', 'ROOT'), ('querying', 'pcomp'), (',', 'punct'), ('clustering', 'conj'), ('summarizing', 'conj'), ('documents', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[system, querying], [querying, ,], [,, clustering], [clustering, summarizing], [summarizing, documents], [documents, .]]

>> Trigrams: 
[[system, querying, ,], [querying, ,, clustering], [,, clustering, summarizing], [clustering, summarizing, documents], [summarizing, documents, .]]

>> Noun Phrases are: 
[system, clustering, documents]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Information processing &   


>> Tokens are: 
[Information, processing, &,  ] 

>> PoS Tags are: 
[('Information', 'NOUN'), ('processing', 'NOUN'), ('&', 'CCONJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Information', 'compound'), ('processing', 'ROOT'), ('&', 'cc'), (' ', 'conj')]

>> Bigrams: 
[[Information, processing], [processing, &], [&,  ]]

>> Trigrams: 
[[Information, processing, &], [processing, &,  ]]

>> Noun Phrases are: 
[Information processing]

>> Named Entities are: 
[] 


================================ Paragraph 759 =================================

management, 43(6), 1588-1605.  

------------------- Sentence 1 -------------------

management, 43(6), 1588-1605. 


>> Tokens are: 
[management, ,, 43(6, ), ,, 1588, -, 1605, .] 

>> PoS Tags are: 
[('management', 'NOUN'), (',', 'PUNCT'), ('43(6', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('1588', 'NUM'), ('-', 'SYM'), ('1605', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('management', 'ROOT'), (',', 'punct'), ('43(6', 'appos'), (')', 'punct'), (',', 'punct'), ('1588', 'npadvmod'), ('-', 'punct'), ('1605', 'prep'), ('.', 'punct')]

>> Bigrams: 
[[management, ,], [,, 43(6], [43(6, )], [), ,], [,, 1588], [1588, -], [-, 1605], [1605, .]]

>> Trigrams: 
[[management, ,, 43(6], [,, 43(6, )], [43(6, ), ,], [), ,, 1588], [,, 1588, -], [1588, -, 1605], [-, 1605, .]]

>> Noun Phrases are: 
[management, 43(6]

>> Named Entities are: 
[('43(6', 'CARDINAL'), ('1588-1605', 'DATE')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 760 =================================

[66] Wan, X. (2008). Using only cross-document relationships for both generic and topic- 

------------------- Sentence 1 -------------------

[66] Wan, X. (2008). 


>> Tokens are: 
[[, 66, ], Wan, ,, X., (, 2008, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('66', 'NUM'), (']', 'PUNCT'), ('Wan', 'PROPN'), (',', 'PUNCT'), ('X.', 'PROPN'), ('(', 'PUNCT'), ('2008', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('66', 'dep'), (']', 'punct'), ('Wan', 'ROOT'), (',', 'punct'), ('X.', 'conj'), ('(', 'punct'), ('2008', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 66], [66, ]], [], Wan], [Wan, ,], [,, X.], [X., (], [(, 2008], [2008, )], [), .]]

>> Trigrams: 
[[[, 66, ]], [66, ], Wan], [], Wan, ,], [Wan, ,, X.], [,, X., (], [X., (, 2008], [(, 2008, )], [2008, ), .]]

>> Noun Phrases are: 
[[66] Wan, X.]

>> Named Entities are: 
[('66', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Using only cross-document relationships for both generic and topic- 


>> Tokens are: 
[cross, -, document, relationships, generic, topic-] 

>> PoS Tags are: 
[('cross', 'ADJ'), ('-', 'ADJ'), ('document', 'ADJ'), ('relationships', 'NOUN'), ('generic', 'ADJ'), ('topic-', 'ADJ')] 

>> Dependency Tags are: 
[('cross', 'amod'), ('-', 'amod'), ('document', 'amod'), ('relationships', 'dobj'), ('generic', 'pobj'), ('topic-', 'conj')]

>> Bigrams: 
[[cross, -], [-, document], [document, relationships], [relationships, generic], [generic, topic-]]

>> Trigrams: 
[[cross, -, document], [-, document, relationships], [document, relationships, generic], [relationships, generic, topic-]]

>> Noun Phrases are: 
[only cross-document relationships]

>> Named Entities are: 
[] 


================================ Paragraph 761 =================================

focused multi-document summarizations. Information Retrieval, 11(1), 25-49.  

------------------- Sentence 1 -------------------

focused multi-document summarizations. 


>> Tokens are: 
[focused, multi, -, document, summarizations, .] 

>> PoS Tags are: 
[('focused', 'VERB'), ('multi', 'ADJ'), ('-', 'ADJ'), ('document', 'ADJ'), ('summarizations', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('focused', 'ROOT'), ('multi', 'amod'), ('-', 'amod'), ('document', 'amod'), ('summarizations', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[focused, multi], [multi, -], [-, document], [document, summarizations], [summarizations, .]]

>> Trigrams: 
[[focused, multi, -], [multi, -, document], [-, document, summarizations], [document, summarizations, .]]

>> Noun Phrases are: 
[multi-document summarizations]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Information Retrieval, 11(1), 25-49. 


>> Tokens are: 
[Information, Retrieval, ,, 11(1, ), ,, 25, -, 49, .] 

>> PoS Tags are: 
[('Information', 'PROPN'), ('Retrieval', 'PROPN'), (',', 'PUNCT'), ('11(1', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('25', 'NUM'), ('-', 'SYM'), ('49', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Information', 'compound'), ('Retrieval', 'ROOT'), (',', 'punct'), ('11(1', 'appos'), (')', 'punct'), (',', 'punct'), ('25', 'appos'), ('-', 'punct'), ('49', 'prep'), ('.', 'punct')]

>> Bigrams: 
[[Information, Retrieval], [Retrieval, ,], [,, 11(1], [11(1, )], [), ,], [,, 25], [25, -], [-, 49], [49, .]]

>> Trigrams: 
[[Information, Retrieval, ,], [Retrieval, ,, 11(1], [,, 11(1, )], [11(1, ), ,], [), ,, 25], [,, 25, -], [25, -, 49], [-, 49, .]]

>> Noun Phrases are: 
[Information Retrieval]

>> Named Entities are: 
[('Information Retrieval', 'ORG'), ('11(1', 'DATE'), ('25-49', 'DATE')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 762 =================================

[67] Ouyang, Y., Li, W., Li, S., & Lu, Q. (2011). Applying regression models to query- 

------------------- Sentence 1 -------------------

[67] Ouyang, Y., Li, W., Li, S., & Lu, Q. (2011). 


>> Tokens are: 
[[, 67, ], Ouyang, ,, Y., ,, Li, ,, W., ,, Li, ,, S., ,, &, Lu, ,, Q., (, 2011, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('67', 'NUM'), (']', 'PUNCT'), ('Ouyang', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), (',', 'PUNCT'), ('Li', 'PROPN'), (',', 'PUNCT'), ('W.', 'PROPN'), (',', 'PUNCT'), ('Li', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Lu', 'PROPN'), (',', 'PUNCT'), ('Q.', 'PROPN'), ('(', 'PUNCT'), ('2011', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('67', 'nummod'), (']', 'punct'), ('Ouyang', 'ROOT'), (',', 'punct'), ('Y.', 'conj'), (',', 'punct'), ('Li', 'conj'), (',', 'punct'), ('W.', 'conj'), (',', 'punct'), ('Li', 'conj'), (',', 'punct'), ('S.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Lu', 'conj'), (',', 'punct'), ('Q.', 'appos'), ('(', 'punct'), ('2011', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 67], [67, ]], [], Ouyang], [Ouyang, ,], [,, Y.], [Y., ,], [,, Li], [Li, ,], [,, W.], [W., ,], [,, Li], [Li, ,], [,, S.], [S., ,], [,, &], [&, Lu], [Lu, ,], [,, Q.], [Q., (], [(, 2011], [2011, )], [), .]]

>> Trigrams: 
[[[, 67, ]], [67, ], Ouyang], [], Ouyang, ,], [Ouyang, ,, Y.], [,, Y., ,], [Y., ,, Li], [,, Li, ,], [Li, ,, W.], [,, W., ,], [W., ,, Li], [,, Li, ,], [Li, ,, S.], [,, S., ,], [S., ,, &], [,, &, Lu], [&, Lu, ,], [Lu, ,, Q.], [,, Q., (], [Q., (, 2011], [(, 2011, )], [2011, ), .]]

>> Noun Phrases are: 
[[67] Ouyang, Y., Li, W., Li, S., Lu, Q.]

>> Named Entities are: 
[('67', 'CARDINAL'), ('Li', 'GPE'), ('Q.', 'GPE'), ('2011', 'DATE')] 

------------------- Sentence 2 -------------------

Applying regression models to query- 


>> Tokens are: 
[Applying, regression, models, query-] 

>> PoS Tags are: 
[('Applying', 'VERB'), ('regression', 'NOUN'), ('models', 'NOUN'), ('query-', 'VERB')] 

>> Dependency Tags are: 
[('Applying', 'ROOT'), ('regression', 'compound'), ('models', 'dobj'), ('query-', 'xcomp')]

>> Bigrams: 
[[Applying, regression], [regression, models], [models, query-]]

>> Trigrams: 
[[Applying, regression, models], [regression, models, query-]]

>> Noun Phrases are: 
[regression models]

>> Named Entities are: 
[] 


================================ Paragraph 763 =================================

focused multi-document summarization. Information Processing & Management, 47(2), 227- 

------------------- Sentence 1 -------------------

focused multi-document summarization. 


>> Tokens are: 
[focused, multi, -, document, summarization, .] 

>> PoS Tags are: 
[('focused', 'VERB'), ('multi', 'ADJ'), ('-', 'ADJ'), ('document', 'ADJ'), ('summarization', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('focused', 'ROOT'), ('multi', 'amod'), ('-', 'amod'), ('document', 'amod'), ('summarization', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[focused, multi], [multi, -], [-, document], [document, summarization], [summarization, .]]

>> Trigrams: 
[[focused, multi, -], [multi, -, document], [-, document, summarization], [document, summarization, .]]

>> Noun Phrases are: 
[multi-document summarization]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Information Processing & Management, 47(2), 227- 


>> Tokens are: 
[Information, Processing, &, Management, ,, 47(2, ), ,, 227-] 

>> PoS Tags are: 
[('Information', 'NOUN'), ('Processing', 'PROPN'), ('&', 'CCONJ'), ('Management', 'PROPN'), (',', 'PUNCT'), ('47(2', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('227-', 'NUM')] 

>> Dependency Tags are: 
[('Information', 'compound'), ('Processing', 'ROOT'), ('&', 'cc'), ('Management', 'conj'), (',', 'punct'), ('47(2', 'appos'), (')', 'punct'), (',', 'punct'), ('227-', 'appos')]

>> Bigrams: 
[[Information, Processing], [Processing, &], [&, Management], [Management, ,], [,, 47(2], [47(2, )], [), ,], [,, 227-]]

>> Trigrams: 
[[Information, Processing, &], [Processing, &, Management], [&, Management, ,], [Management, ,, 47(2], [,, 47(2, )], [47(2, ), ,], [), ,, 227-]]

>> Noun Phrases are: 
[Information Processing, Management]

>> Named Entities are: 
[('Information Processing & Management', 'ORG'), ('47(2', 'CARDINAL')] 


================================ Paragraph 764 =================================

237.  

------------------- Sentence 1 -------------------

237. 


>> Tokens are: 
[237, .] 

>> PoS Tags are: 
[('237', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('237', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[237, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('237', 'CARDINAL')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 765 =================================

[68] Mani, I., & Maybury, M. T. (Eds.). (1999). Advances in automatic text  

------------------- Sentence 1 -------------------

[68] Mani, I., & Maybury, M. T. 


>> Tokens are: 
[[, 68, ], Mani, ,, I., ,, &, Maybury, ,, M., T.] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('68', 'NUM'), (']', 'PUNCT'), ('Mani', 'PROPN'), (',', 'PUNCT'), ('I.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Maybury', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('T.', 'PROPN')] 

>> Dependency Tags are: 
[('[', 'punct'), ('68', 'meta'), (']', 'punct'), ('Mani', 'ROOT'), (',', 'punct'), ('I.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Maybury', 'conj'), (',', 'punct'), ('M.', 'compound'), ('T.', 'appos')]

>> Bigrams: 
[[[, 68], [68, ]], [], Mani], [Mani, ,], [,, I.], [I., ,], [,, &], [&, Maybury], [Maybury, ,], [,, M.], [M., T.]]

>> Trigrams: 
[[[, 68, ]], [68, ], Mani], [], Mani, ,], [Mani, ,, I.], [,, I., ,], [I., ,, &], [,, &, Maybury], [&, Maybury, ,], [Maybury, ,, M.], [,, M., T.]]

>> Noun Phrases are: 
[[68] Mani, I., Maybury, M. T.]

>> Named Entities are: 
[('68', 'CARDINAL'), ('Mani', 'PERSON'), ('I., & Maybury', 'ORG'), ('M. T.', 'PERSON')] 

------------------- Sentence 2 -------------------

(Eds.). 


>> Tokens are: 
[(, Eds, ., ), .] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('Eds', 'PROPN'), ('.', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('Eds', 'ROOT'), ('.', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[(, Eds], [Eds, .], [., )], [), .]]

>> Trigrams: 
[[(, Eds, .], [Eds, ., )], [., ), .]]

>> Noun Phrases are: 
[(Eds]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

(1999). 


>> Tokens are: 
[(, 1999, ), .] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('1999', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('1999', 'ROOT'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[(, 1999], [1999, )], [), .]]

>> Trigrams: 
[[(, 1999, )], [1999, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1999', 'DATE')] 

------------------- Sentence 4 -------------------

Advances in automatic text   


>> Tokens are: 
[Advances, automatic, text,  ] 

>> PoS Tags are: 
[('Advances', 'NOUN'), ('automatic', 'ADJ'), ('text', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Advances', 'ROOT'), ('automatic', 'amod'), ('text', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Advances, automatic], [automatic, text], [text,  ]]

>> Trigrams: 
[[Advances, automatic, text], [automatic, text,  ]]

>> Noun Phrases are: 
[Advances, automatic text]

>> Named Entities are: 
[] 


================================ Paragraph 766 =================================

summarization (Vol. 293). Cambridge, MA: MIT press. 

------------------- Sentence 1 -------------------

summarization (Vol. 293). 


>> Tokens are: 
[summarization, (, Vol, ., 293, ), .] 

>> PoS Tags are: 
[('summarization', 'NOUN'), ('(', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT'), ('293', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('summarization', 'ROOT'), ('(', 'punct'), ('Vol', 'appos'), ('.', 'punct'), ('293', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[summarization, (], [(, Vol], [Vol, .], [., 293], [293, )], [), .]]

>> Trigrams: 
[[summarization, (, Vol], [(, Vol, .], [Vol, ., 293], [., 293, )], [293, ), .]]

>> Noun Phrases are: 
[summarization, Vol]

>> Named Entities are: 
[('293', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Cambridge, MA: MIT press. 


>> Tokens are: 
[Cambridge, ,, MA, :, MIT, press, .] 

>> PoS Tags are: 
[('Cambridge', 'PROPN'), (',', 'PUNCT'), ('MA', 'PROPN'), (':', 'PUNCT'), ('MIT', 'PROPN'), ('press', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Cambridge', 'ROOT'), (',', 'punct'), ('MA', 'appos'), (':', 'punct'), ('MIT', 'compound'), ('press', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Cambridge, ,], [,, MA], [MA, :], [:, MIT], [MIT, press], [press, .]]

>> Trigrams: 
[[Cambridge, ,, MA], [,, MA, :], [MA, :, MIT], [:, MIT, press], [MIT, press, .]]

>> Noun Phrases are: 
[Cambridge, MA, MIT press]

>> Named Entities are: 
[('Cambridge', 'GPE'), ('MIT', 'ORG')] 


================================ Paragraph 767 =================================

[69] Riedhammer, K., Favre, B., & Hakkani-Tür, D. (2010). Long story short–global  

------------------- Sentence 1 -------------------

[69] Riedhammer, K., Favre, B., & Hakkani-Tür, D. (2010). 


>> Tokens are: 
[[, 69, ], Riedhammer, ,, K., ,, Favre, ,, B., ,, &, Hakkani, -, Tür, ,, D., (, 2010, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('69', 'NUM'), (']', 'PUNCT'), ('Riedhammer', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), (',', 'PUNCT'), ('Favre', 'PROPN'), (',', 'PUNCT'), ('B.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Hakkani', 'PROPN'), ('-', 'PUNCT'), ('Tür', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('(', 'PUNCT'), ('2010', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('69', 'dep'), (']', 'punct'), ('Riedhammer', 'nmod'), (',', 'punct'), ('K.', 'ROOT'), (',', 'punct'), ('Favre', 'conj'), (',', 'punct'), ('B.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Hakkani', 'compound'), ('-', 'punct'), ('Tür', 'conj'), (',', 'punct'), ('D.', 'appos'), ('(', 'punct'), ('2010', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 69], [69, ]], [], Riedhammer], [Riedhammer, ,], [,, K.], [K., ,], [,, Favre], [Favre, ,], [,, B.], [B., ,], [,, &], [&, Hakkani], [Hakkani, -], [-, Tür], [Tür, ,], [,, D.], [D., (], [(, 2010], [2010, )], [), .]]

>> Trigrams: 
[[[, 69, ]], [69, ], Riedhammer], [], Riedhammer, ,], [Riedhammer, ,, K.], [,, K., ,], [K., ,, Favre], [,, Favre, ,], [Favre, ,, B.], [,, B., ,], [B., ,, &], [,, &, Hakkani], [&, Hakkani, -], [Hakkani, -, Tür], [-, Tür, ,], [Tür, ,, D.], [,, D., (], [D., (, 2010], [(, 2010, )], [2010, ), .]]

>> Noun Phrases are: 
[[69] Riedhammer, K., Favre, B., Hakkani-Tür, D.]

>> Named Entities are: 
[('69', 'CARDINAL'), ('K.', 'NORP'), ('Favre', 'PERSON'), ('B.', 'ORG'), ('& Hakkani-Tür', 'ORG'), ('D.', 'NORP'), ('2010', 'DATE')] 

------------------- Sentence 2 -------------------

Long story short–global   


>> Tokens are: 
[Long, story, short, –, global,  ] 

>> PoS Tags are: 
[('Long', 'ADJ'), ('story', 'NOUN'), ('short', 'ADJ'), ('–', 'PUNCT'), ('global', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Long', 'amod'), ('story', 'ROOT'), ('short', 'amod'), ('–', 'punct'), ('global', 'amod'), (' ', 'appos')]

>> Bigrams: 
[[Long, story], [story, short], [short, –], [–, global], [global,  ]]

>> Trigrams: 
[[Long, story, short], [story, short, –], [short, –, global], [–, global,  ]]

>> Noun Phrases are: 
[Long story]

>> Named Entities are: 
[] 


================================ Paragraph 768 =================================

unsupervised models for keyphrase based meeting summarization. Speech  

------------------- Sentence 1 -------------------

unsupervised models for keyphrase based meeting summarization. 


>> Tokens are: 
[unsupervised, models, keyphrase, based, meeting, summarization, .] 

>> PoS Tags are: 
[('unsupervised', 'ADJ'), ('models', 'NOUN'), ('keyphrase', 'NOUN'), ('based', 'VERB'), ('meeting', 'NOUN'), ('summarization', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('unsupervised', 'amod'), ('models', 'ROOT'), ('keyphrase', 'npadvmod'), ('based', 'amod'), ('meeting', 'compound'), ('summarization', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[unsupervised, models], [models, keyphrase], [keyphrase, based], [based, meeting], [meeting, summarization], [summarization, .]]

>> Trigrams: 
[[unsupervised, models, keyphrase], [models, keyphrase, based], [keyphrase, based, meeting], [based, meeting, summarization], [meeting, summarization, .]]

>> Noun Phrases are: 
[unsupervised models, keyphrase based meeting summarization]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Speech   


>> Tokens are: 
[Speech,  ] 

>> PoS Tags are: 
[('Speech', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Speech', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[Speech,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Speech]

>> Named Entities are: 
[] 


================================ Paragraph 769 =================================

Communication, 52(10), 801-815.  

------------------- Sentence 1 -------------------

Communication, 52(10), 801-815. 


>> Tokens are: 
[Communication, ,, 52(10, ), ,, 801, -, 815, .] 

>> PoS Tags are: 
[('Communication', 'NOUN'), (',', 'PUNCT'), ('52(10', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('801', 'NUM'), ('-', 'SYM'), ('815', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Communication', 'ROOT'), (',', 'punct'), ('52(10', 'npadvmod'), (')', 'punct'), (',', 'punct'), ('801', 'appos'), ('-', 'punct'), ('815', 'prep'), ('.', 'punct')]

>> Bigrams: 
[[Communication, ,], [,, 52(10], [52(10, )], [), ,], [,, 801], [801, -], [-, 815], [815, .]]

>> Trigrams: 
[[Communication, ,, 52(10], [,, 52(10, )], [52(10, ), ,], [), ,, 801], [,, 801, -], [801, -, 815], [-, 815, .]]

>> Noun Phrases are: 
[Communication]

>> Named Entities are: 
[('801', 'CARDINAL')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 770 =================================

[70] Wang, D., Zhu, S., Li, T., & Gong, Y. (2009, August). Multi-document summarization  

------------------- Sentence 1 -------------------

[70] Wang, D., Zhu, S., Li, T., & Gong, Y. (2009, August). 


>> Tokens are: 
[[, 70, ], Wang, ,, D., ,, Zhu, ,, S., ,, Li, ,, T., ,, &, Gong, ,, Y., (, 2009, ,, August, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('70', 'NUM'), (']', 'PUNCT'), ('Wang', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), (',', 'PUNCT'), ('Zhu', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), (',', 'PUNCT'), ('Li', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Gong', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('(', 'PUNCT'), ('2009', 'NUM'), (',', 'PUNCT'), ('August', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('70', 'dep'), (']', 'punct'), ('Wang', 'ROOT'), (',', 'punct'), ('D.', 'appos'), (',', 'punct'), ('Zhu', 'conj'), (',', 'punct'), ('S.', 'conj'), (',', 'punct'), ('Li', 'conj'), (',', 'punct'), ('T.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Gong', 'conj'), (',', 'punct'), ('Y.', 'appos'), ('(', 'punct'), ('2009', 'appos'), (',', 'punct'), ('August', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 70], [70, ]], [], Wang], [Wang, ,], [,, D.], [D., ,], [,, Zhu], [Zhu, ,], [,, S.], [S., ,], [,, Li], [Li, ,], [,, T.], [T., ,], [,, &], [&, Gong], [Gong, ,], [,, Y.], [Y., (], [(, 2009], [2009, ,], [,, August], [August, )], [), .]]

>> Trigrams: 
[[[, 70, ]], [70, ], Wang], [], Wang, ,], [Wang, ,, D.], [,, D., ,], [D., ,, Zhu], [,, Zhu, ,], [Zhu, ,, S.], [,, S., ,], [S., ,, Li], [,, Li, ,], [Li, ,, T.], [,, T., ,], [T., ,, &], [,, &, Gong], [&, Gong, ,], [Gong, ,, Y.], [,, Y., (], [Y., (, 2009], [(, 2009, ,], [2009, ,, August], [,, August, )], [August, ), .]]

>> Noun Phrases are: 
[[70] Wang, D., Zhu, S., Li, T., Gong, Y.]

>> Named Entities are: 
[('70', 'CARDINAL'), ('Wang', 'ORG'), ('D.', 'NORP'), ('Zhu', 'PERSON'), ('2009', 'DATE'), ('August', 'DATE')] 

------------------- Sentence 2 -------------------

Multi-document summarization   


>> Tokens are: 
[Multi, -, document, summarization,  ] 

>> PoS Tags are: 
[('Multi', 'ADJ'), ('-', 'NOUN'), ('document', 'NOUN'), ('summarization', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Multi', 'amod'), ('-', 'amod'), ('document', 'amod'), ('summarization', 'ROOT'), (' ', 'appos')]

>> Bigrams: 
[[Multi, -], [-, document], [document, summarization], [summarization,  ]]

>> Trigrams: 
[[Multi, -, document], [-, document, summarization], [document, summarization,  ]]

>> Noun Phrases are: 
[Multi-document summarization]

>> Named Entities are: 
[] 


================================ Paragraph 771 =================================

using sentence-based topic models. In Proceedings of the ACL-IJCNLP 2009 Conference  

------------------- Sentence 1 -------------------

using sentence-based topic models. 


>> Tokens are: 
[sentence, -, based, topic, models, .] 

>> PoS Tags are: 
[('sentence', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('topic', 'NOUN'), ('models', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('sentence', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('topic', 'compound'), ('models', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[sentence, -], [-, based], [based, topic], [topic, models], [models, .]]

>> Trigrams: 
[[sentence, -, based], [-, based, topic], [based, topic, models], [topic, models, .]]

>> Noun Phrases are: 
[sentence-based topic models]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Proceedings of the ACL-IJCNLP 2009 Conference   


>> Tokens are: 
[Proceedings, ACL, -, IJCNLP, 2009, Conference,  ] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('ACL', 'PROPN'), ('-', 'PUNCT'), ('IJCNLP', 'PROPN'), ('2009', 'NUM'), ('Conference', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('ACL', 'compound'), ('-', 'punct'), ('IJCNLP', 'pobj'), ('2009', 'nummod'), ('Conference', 'appos'), (' ', 'nummod')]

>> Bigrams: 
[[Proceedings, ACL], [ACL, -], [-, IJCNLP], [IJCNLP, 2009], [2009, Conference], [Conference,  ]]

>> Trigrams: 
[[Proceedings, ACL, -], [ACL, -, IJCNLP], [-, IJCNLP, 2009], [IJCNLP, 2009, Conference], [2009, Conference,  ]]

>> Noun Phrases are: 
[Proceedings, the ACL-IJCNLP, 2009 Conference]

>> Named Entities are: 
[('ACL', 'ORG')] 


================================ Paragraph 772 =================================

Short Papers (pp. 297-300). Association for Computational Linguistics.  

------------------- Sentence 1 -------------------

Short Papers (pp. 


>> Tokens are: 
[Short, Papers, (, pp, .] 

>> PoS Tags are: 
[('Short', 'PROPN'), ('Papers', 'PROPN'), ('(', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Short', 'compound'), ('Papers', 'ROOT'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Short, Papers], [Papers, (], [(, pp], [pp, .]]

>> Trigrams: 
[[Short, Papers, (], [Papers, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[Short Papers, pp]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

297-300). 


>> Tokens are: 
[297, -, 300, ), .] 

>> PoS Tags are: 
[('297', 'NUM'), ('-', 'SYM'), ('300', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('297', 'ROOT'), ('-', 'punct'), ('300', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[297, -], [-, 300], [300, )], [), .]]

>> Trigrams: 
[[297, -, 300], [-, 300, )], [300, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('297-300', 'CARDINAL')] 

------------------- Sentence 3 -------------------

Association for Computational Linguistics. 


>> Tokens are: 
[Association, Computational, Linguistics, .] 

>> PoS Tags are: 
[('Association', 'PROPN'), ('Computational', 'PROPN'), ('Linguistics', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Association', 'ROOT'), ('Computational', 'compound'), ('Linguistics', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Association, Computational], [Computational, Linguistics], [Linguistics, .]]

>> Trigrams: 
[[Association, Computational, Linguistics], [Computational, Linguistics, .]]

>> Noun Phrases are: 
[Association, Computational Linguistics]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 773 =================================

[71] Wang, D., Zhu, S., Li, T., Chi, Y., & Gong, Y. (2011). Integrating document clustering  

------------------- Sentence 1 -------------------

[71] Wang, D., Zhu, S., Li, T., Chi, Y., & Gong, Y. (2011). 


>> Tokens are: 
[[, 71, ], Wang, ,, D., ,, Zhu, ,, S., ,, Li, ,, T., ,, Chi, ,, Y., ,, &, Gong, ,, Y., (, 2011, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('71', 'NUM'), (']', 'PUNCT'), ('Wang', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), (',', 'PUNCT'), ('Zhu', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), (',', 'PUNCT'), ('Li', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), (',', 'PUNCT'), ('Chi', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Gong', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('(', 'PUNCT'), ('2011', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('71', 'dep'), (']', 'punct'), ('Wang', 'ROOT'), (',', 'punct'), ('D.', 'appos'), (',', 'punct'), ('Zhu', 'conj'), (',', 'punct'), ('S.', 'conj'), (',', 'punct'), ('Li', 'conj'), (',', 'punct'), ('T.', 'conj'), (',', 'punct'), ('Chi', 'conj'), (',', 'punct'), ('Y.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Gong', 'conj'), (',', 'punct'), ('Y.', 'conj'), ('(', 'punct'), ('2011', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 71], [71, ]], [], Wang], [Wang, ,], [,, D.], [D., ,], [,, Zhu], [Zhu, ,], [,, S.], [S., ,], [,, Li], [Li, ,], [,, T.], [T., ,], [,, Chi], [Chi, ,], [,, Y.], [Y., ,], [,, &], [&, Gong], [Gong, ,], [,, Y.], [Y., (], [(, 2011], [2011, )], [), .]]

>> Trigrams: 
[[[, 71, ]], [71, ], Wang], [], Wang, ,], [Wang, ,, D.], [,, D., ,], [D., ,, Zhu], [,, Zhu, ,], [Zhu, ,, S.], [,, S., ,], [S., ,, Li], [,, Li, ,], [Li, ,, T.], [,, T., ,], [T., ,, Chi], [,, Chi, ,], [Chi, ,, Y.], [,, Y., ,], [Y., ,, &], [,, &, Gong], [&, Gong, ,], [Gong, ,, Y.], [,, Y., (], [Y., (, 2011], [(, 2011, )], [2011, ), .]]

>> Noun Phrases are: 
[[71] Wang, D., Zhu, S., Li, T., Chi, Y., Gong, Y.]

>> Named Entities are: 
[('71', 'CARDINAL'), ('D.', 'NORP'), ('Zhu', 'PERSON'), ('2011', 'DATE')] 

------------------- Sentence 2 -------------------

Integrating document clustering   


>> Tokens are: 
[Integrating, document, clustering,  ] 

>> PoS Tags are: 
[('Integrating', 'VERB'), ('document', 'NOUN'), ('clustering', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Integrating', 'ROOT'), ('document', 'dobj'), ('clustering', 'advcl'), (' ', 'dobj')]

>> Bigrams: 
[[Integrating, document], [document, clustering], [clustering,  ]]

>> Trigrams: 
[[Integrating, document, clustering], [document, clustering,  ]]

>> Noun Phrases are: 
[document]

>> Named Entities are: 
[] 


================================ Paragraph 774 =================================

and multidocument summarization. ACM Transactions on Knowledge Discovery from Data  

------------------- Sentence 1 -------------------

and multidocument summarization. 


>> Tokens are: 
[multidocument, summarization, .] 

>> PoS Tags are: 
[('multidocument', 'NOUN'), ('summarization', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('multidocument', 'compound'), ('summarization', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[multidocument, summarization], [summarization, .]]

>> Trigrams: 
[[multidocument, summarization, .]]

>> Noun Phrases are: 
[and multidocument summarization]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

ACM Transactions on Knowledge Discovery from Data   


>> Tokens are: 
[ACM, Transactions, Knowledge, Discovery, Data,  ] 

>> PoS Tags are: 
[('ACM', 'PROPN'), ('Transactions', 'PROPN'), ('Knowledge', 'PROPN'), ('Discovery', 'PROPN'), ('Data', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('ACM', 'compound'), ('Transactions', 'ROOT'), ('Knowledge', 'compound'), ('Discovery', 'pobj'), ('Data', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[ACM, Transactions], [Transactions, Knowledge], [Knowledge, Discovery], [Discovery, Data], [Data,  ]]

>> Trigrams: 
[[ACM, Transactions, Knowledge], [Transactions, Knowledge, Discovery], [Knowledge, Discovery, Data], [Discovery, Data,  ]]

>> Noun Phrases are: 
[ACM Transactions, Knowledge Discovery, Data]

>> Named Entities are: 
[('ACM Transactions', 'ORG'), ('Data', 'ORG')] 


================================ Paragraph 775 =================================

(TKDD), 5(3), 14.  

------------------- Sentence 1 -------------------

(TKDD), 5(3), 14.   


>> Tokens are: 
[(, TKDD, ), ,, 5(3, ), ,, 14, .,  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('TKDD', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('5(3', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('14', 'NUM'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('TKDD', 'ROOT'), (')', 'punct'), (',', 'punct'), ('5(3', 'npadvmod'), (')', 'punct'), (',', 'punct'), ('14', 'appos'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[(, TKDD], [TKDD, )], [), ,], [,, 5(3], [5(3, )], [), ,], [,, 14], [14, .], [.,  ]]

>> Trigrams: 
[[(, TKDD, )], [TKDD, ), ,], [), ,, 5(3], [,, 5(3, )], [5(3, ), ,], [), ,, 14], [,, 14, .], [14, .,  ]]

>> Noun Phrases are: 
[(TKDD]

>> Named Entities are: 
[('5(3', 'CARDINAL'), ('14', 'DATE')] 


================================ Paragraph 776 =================================

[72] Fang, H., Lu, W., Wu, F., Zhang, Y., Shang, X., Shao, J., & Zhuang, Y. (2015). Topic  

------------------- Sentence 1 -------------------

[72] Fang, H., Lu, W., Wu, F., Zhang, Y., Shang, X., Shao, J., & Zhuang, Y. (2015). 


>> Tokens are: 
[[, 72, ], Fang, ,, H., ,, Lu, ,, W., ,, Wu, ,, F., ,, Zhang, ,, Y., ,, Shang, ,, X., ,, Shao, ,, J., ,, &, Zhuang, ,, Y., (, 2015, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('72', 'NUM'), (']', 'PUNCT'), ('Fang', 'PROPN'), (',', 'PUNCT'), ('H.', 'PROPN'), (',', 'PUNCT'), ('Lu', 'PROPN'), (',', 'PUNCT'), ('W.', 'PROPN'), (',', 'PUNCT'), ('Wu', 'PROPN'), (',', 'PUNCT'), ('F.', 'PROPN'), (',', 'PUNCT'), ('Zhang', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), (',', 'PUNCT'), ('Shang', 'PROPN'), (',', 'PUNCT'), ('X.', 'PROPN'), (',', 'PUNCT'), ('Shao', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Zhuang', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('(', 'PUNCT'), ('2015', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('72', 'dep'), (']', 'punct'), ('Fang', 'ROOT'), (',', 'punct'), ('H.', 'conj'), (',', 'punct'), ('Lu', 'conj'), (',', 'punct'), ('W.', 'conj'), (',', 'punct'), ('Wu', 'appos'), (',', 'punct'), ('F.', 'appos'), (',', 'punct'), ('Zhang', 'conj'), (',', 'punct'), ('Y.', 'conj'), (',', 'punct'), ('Shang', 'conj'), (',', 'punct'), ('X.', 'conj'), (',', 'punct'), ('Shao', 'conj'), (',', 'punct'), ('J.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Zhuang', 'conj'), (',', 'punct'), ('Y.', 'appos'), ('(', 'punct'), ('2015', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 72], [72, ]], [], Fang], [Fang, ,], [,, H.], [H., ,], [,, Lu], [Lu, ,], [,, W.], [W., ,], [,, Wu], [Wu, ,], [,, F.], [F., ,], [,, Zhang], [Zhang, ,], [,, Y.], [Y., ,], [,, Shang], [Shang, ,], [,, X.], [X., ,], [,, Shao], [Shao, ,], [,, J.], [J., ,], [,, &], [&, Zhuang], [Zhuang, ,], [,, Y.], [Y., (], [(, 2015], [2015, )], [), .]]

>> Trigrams: 
[[[, 72, ]], [72, ], Fang], [], Fang, ,], [Fang, ,, H.], [,, H., ,], [H., ,, Lu], [,, Lu, ,], [Lu, ,, W.], [,, W., ,], [W., ,, Wu], [,, Wu, ,], [Wu, ,, F.], [,, F., ,], [F., ,, Zhang], [,, Zhang, ,], [Zhang, ,, Y.], [,, Y., ,], [Y., ,, Shang], [,, Shang, ,], [Shang, ,, X.], [,, X., ,], [X., ,, Shao], [,, Shao, ,], [Shao, ,, J.], [,, J., ,], [J., ,, &], [,, &, Zhuang], [&, Zhuang, ,], [Zhuang, ,, Y.], [,, Y., (], [Y., (, 2015], [(, 2015, )], [2015, ), .]]

>> Noun Phrases are: 
[[72] Fang, H., Lu, W., Wu, F., Zhang, Y., Shang, X., Shao, J., Zhuang, Y.]

>> Named Entities are: 
[('72', 'CARDINAL'), ('F., Zhang', 'PERSON'), ('Shang', 'GPE'), ('X.', 'GPE'), ('Shao', 'NORP'), ('J., & Zhuang', 'ORG'), ('2015', 'DATE')] 

------------------- Sentence 2 -------------------

Topic   


>> Tokens are: 
[Topic,  ] 

>> PoS Tags are: 
[('Topic', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Topic', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[Topic,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 777 =================================

aspect-oriented summarization via group selection. Neurocomputing, 149, 1613-1619.  

------------------- Sentence 1 -------------------

aspect-oriented summarization via group selection. 


>> Tokens are: 
[aspect, -, oriented, summarization, group, selection, .] 

>> PoS Tags are: 
[('aspect', 'NOUN'), ('-', 'PUNCT'), ('oriented', 'VERB'), ('summarization', 'NOUN'), ('group', 'NOUN'), ('selection', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('aspect', 'npadvmod'), ('-', 'punct'), ('oriented', 'amod'), ('summarization', 'ROOT'), ('group', 'compound'), ('selection', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[aspect, -], [-, oriented], [oriented, summarization], [summarization, group], [group, selection], [selection, .]]

>> Trigrams: 
[[aspect, -, oriented], [-, oriented, summarization], [oriented, summarization, group], [summarization, group, selection], [group, selection, .]]

>> Noun Phrases are: 
[aspect-oriented summarization, group selection]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Neurocomputing, 149, 1613-1619. 


>> Tokens are: 
[Neurocomputing, ,, 149, ,, 1613, -, 1619, .] 

>> PoS Tags are: 
[('Neurocomputing', 'PROPN'), (',', 'PUNCT'), ('149', 'NUM'), (',', 'PUNCT'), ('1613', 'NUM'), ('-', 'SYM'), ('1619', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Neurocomputing', 'ROOT'), (',', 'punct'), ('149', 'appos'), (',', 'punct'), ('1613', 'nummod'), ('-', 'punct'), ('1619', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Neurocomputing, ,], [,, 149], [149, ,], [,, 1613], [1613, -], [-, 1619], [1619, .]]

>> Trigrams: 
[[Neurocomputing, ,, 149], [,, 149, ,], [149, ,, 1613], [,, 1613, -], [1613, -, 1619], [-, 1619, .]]

>> Noun Phrases are: 
[Neurocomputing]

>> Named Entities are: 
[('149', 'CARDINAL'), ('1613-1619', 'DATE')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 778 =================================

[73] Sager, N., Lyman, M., Nhan, N. T., & Tick, L. J. (1995). Medical language processing:  

------------------- Sentence 1 -------------------

[73] Sager, N., Lyman, M., Nhan, N. T., & Tick, L. J. (1995). 


>> Tokens are: 
[[, 73, ], Sager, ,, N., ,, Lyman, ,, M., ,, Nhan, ,, N., T., ,, &, Tick, ,, L., J., (, 1995, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('73', 'NUM'), (']', 'PUNCT'), ('Sager', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), (',', 'PUNCT'), ('Lyman', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), (',', 'PUNCT'), ('Nhan', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), ('T.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Tick', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('J.', 'PROPN'), ('(', 'PUNCT'), ('1995', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('73', 'nummod'), (']', 'punct'), ('Sager', 'ROOT'), (',', 'punct'), ('N.', 'appos'), (',', 'punct'), ('Lyman', 'conj'), (',', 'punct'), ('M.', 'conj'), (',', 'punct'), ('Nhan', 'conj'), (',', 'punct'), ('N.', 'compound'), ('T.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Tick', 'conj'), (',', 'punct'), ('L.', 'compound'), ('J.', 'conj'), ('(', 'punct'), ('1995', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 73], [73, ]], [], Sager], [Sager, ,], [,, N.], [N., ,], [,, Lyman], [Lyman, ,], [,, M.], [M., ,], [,, Nhan], [Nhan, ,], [,, N.], [N., T.], [T., ,], [,, &], [&, Tick], [Tick, ,], [,, L.], [L., J.], [J., (], [(, 1995], [1995, )], [), .]]

>> Trigrams: 
[[[, 73, ]], [73, ], Sager], [], Sager, ,], [Sager, ,, N.], [,, N., ,], [N., ,, Lyman], [,, Lyman, ,], [Lyman, ,, M.], [,, M., ,], [M., ,, Nhan], [,, Nhan, ,], [Nhan, ,, N.], [,, N., T.], [N., T., ,], [T., ,, &], [,, &, Tick], [&, Tick, ,], [Tick, ,, L.], [,, L., J.], [L., J., (], [J., (, 1995], [(, 1995, )], [1995, ), .]]

>> Noun Phrases are: 
[[73] Sager, N., Lyman, M., Nhan, N. T., Tick, L. J.]

>> Named Entities are: 
[('73', 'CARDINAL'), ('N.', 'ORG'), ('Lyman', 'ORG'), ('N. T., & Tick', 'PERSON'), ('L. J.', 'PERSON'), ('1995', 'DATE')] 

------------------- Sentence 2 -------------------

Medical language processing:   


>> Tokens are: 
[Medical, language, processing, :,  ] 

>> PoS Tags are: 
[('Medical', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Medical', 'amod'), ('language', 'compound'), ('processing', 'ROOT'), (':', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Medical, language], [language, processing], [processing, :], [:,  ]]

>> Trigrams: 
[[Medical, language, processing], [language, processing, :], [processing, :,  ]]

>> Noun Phrases are: 
[Medical language processing]

>> Named Entities are: 
[] 


================================ Paragraph 779 =================================

applications to patient data representation and automatic encoding. Methods of information in  

------------------- Sentence 1 -------------------

applications to patient data representation and automatic encoding. 


>> Tokens are: 
[applications, patient, data, representation, automatic, encoding, .] 

>> PoS Tags are: 
[('applications', 'NOUN'), ('patient', 'VERB'), ('data', 'NOUN'), ('representation', 'NOUN'), ('automatic', 'ADJ'), ('encoding', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('applications', 'ROOT'), ('patient', 'acl'), ('data', 'compound'), ('representation', 'dobj'), ('automatic', 'amod'), ('encoding', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[applications, patient], [patient, data], [data, representation], [representation, automatic], [automatic, encoding], [encoding, .]]

>> Trigrams: 
[[applications, patient, data], [patient, data, representation], [data, representation, automatic], [representation, automatic, encoding], [automatic, encoding, .]]

>> Noun Phrases are: 
[applications, data representation, automatic encoding]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Methods of information in   


>> Tokens are: 
[Methods, information,  ] 

>> PoS Tags are: 
[('Methods', 'NOUN'), ('information', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Methods', 'ROOT'), ('information', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Methods, information], [information,  ]]

>> Trigrams: 
[[Methods, information,  ]]

>> Noun Phrases are: 
[Methods, information]

>> Named Entities are: 
[] 


================================ Paragraph 780 =================================

medicine, 34(1-2), 140-146.  

------------------- Sentence 1 -------------------

medicine, 34(1-2), 140-146. 


>> Tokens are: 
[medicine, ,, 34(1, -, 2, ), ,, 140, -, 146, .] 

>> PoS Tags are: 
[('medicine', 'NOUN'), (',', 'PUNCT'), ('34(1', 'NUM'), ('-', 'PUNCT'), ('2', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('140', 'NUM'), ('-', 'SYM'), ('146', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('medicine', 'ROOT'), (',', 'punct'), ('34(1', 'appos'), ('-', 'punct'), ('2', 'prep'), (')', 'punct'), (',', 'punct'), ('140', 'appos'), ('-', 'punct'), ('146', 'prep'), ('.', 'punct')]

>> Bigrams: 
[[medicine, ,], [,, 34(1], [34(1, -], [-, 2], [2, )], [), ,], [,, 140], [140, -], [-, 146], [146, .]]

>> Trigrams: 
[[medicine, ,, 34(1], [,, 34(1, -], [34(1, -, 2], [-, 2, )], [2, ), ,], [), ,, 140], [,, 140, -], [140, -, 146], [-, 146, .]]

>> Noun Phrases are: 
[medicine]

>> Named Entities are: 
[('34(1', 'CARDINAL'), ('140', 'CARDINAL')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 781 =================================

[74] Chi, E. C., Lyman, M. S., Sager, N., Friedman, C., & Macleod, C. (1985, November). A  

------------------- Sentence 1 -------------------

[74] Chi, E. C., Lyman, M. S., Sager, N., Friedman, C., & Macleod, C. (1985, November). 


>> Tokens are: 
[[, 74, ], Chi, ,, E., C., ,, Lyman, ,, M., S., ,, Sager, ,, N., ,, Friedman, ,, C., ,, &, Macleod, ,, C., (, 1985, ,, November, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('74', 'NUM'), (']', 'PUNCT'), ('Chi', 'PROPN'), (',', 'PUNCT'), ('E.', 'PROPN'), ('C.', 'PROPN'), (',', 'PUNCT'), ('Lyman', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('S.', 'PROPN'), (',', 'PUNCT'), ('Sager', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), (',', 'PUNCT'), ('Friedman', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Macleod', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), ('(', 'PUNCT'), ('1985', 'NUM'), (',', 'PUNCT'), ('November', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('74', 'nummod'), (']', 'punct'), ('Chi', 'ROOT'), (',', 'punct'), ('E.', 'compound'), ('C.', 'appos'), (',', 'punct'), ('Lyman', 'conj'), (',', 'punct'), ('M.', 'compound'), ('S.', 'conj'), (',', 'punct'), ('Sager', 'conj'), (',', 'punct'), ('N.', 'conj'), (',', 'punct'), ('Friedman', 'conj'), (',', 'punct'), ('C.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Macleod', 'conj'), (',', 'punct'), ('C.', 'conj'), ('(', 'punct'), ('1985', 'appos'), (',', 'punct'), ('November', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 74], [74, ]], [], Chi], [Chi, ,], [,, E.], [E., C.], [C., ,], [,, Lyman], [Lyman, ,], [,, M.], [M., S.], [S., ,], [,, Sager], [Sager, ,], [,, N.], [N., ,], [,, Friedman], [Friedman, ,], [,, C.], [C., ,], [,, &], [&, Macleod], [Macleod, ,], [,, C.], [C., (], [(, 1985], [1985, ,], [,, November], [November, )], [), .]]

>> Trigrams: 
[[[, 74, ]], [74, ], Chi], [], Chi, ,], [Chi, ,, E.], [,, E., C.], [E., C., ,], [C., ,, Lyman], [,, Lyman, ,], [Lyman, ,, M.], [,, M., S.], [M., S., ,], [S., ,, Sager], [,, Sager, ,], [Sager, ,, N.], [,, N., ,], [N., ,, Friedman], [,, Friedman, ,], [Friedman, ,, C.], [,, C., ,], [C., ,, &], [,, &, Macleod], [&, Macleod, ,], [Macleod, ,, C.], [,, C., (], [C., (, 1985], [(, 1985, ,], [1985, ,, November], [,, November, )], [November, ), .]]

>> Noun Phrases are: 
[[74] Chi, E. C., Lyman, M. S., Sager, N., Friedman, C., Macleod, C.]

>> Named Entities are: 
[('74', 'CARDINAL'), ('E. C.', 'PERSON'), ('Lyman', 'ORG'), ('M. S.', 'PERSON'), ('N.', 'ORG'), ('Friedman', 'ORG'), ('C., & Macleod', 'ORG'), ('November', 'DATE')] 

------------------- Sentence 2 -------------------

A   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 782 =================================

database of computer-structured narrative: methods of computing complex relations.  

------------------- Sentence 1 -------------------

database of computer-structured narrative: methods of computing complex relations. 


>> Tokens are: 
[database, computer, -, structured, narrative, :, methods, computing, complex, relations, .] 

>> PoS Tags are: 
[('database', 'NOUN'), ('computer', 'NOUN'), ('-', 'PUNCT'), ('structured', 'VERB'), ('narrative', 'NOUN'), (':', 'PUNCT'), ('methods', 'NOUN'), ('computing', 'VERB'), ('complex', 'ADJ'), ('relations', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('database', 'ROOT'), ('computer', 'npadvmod'), ('-', 'punct'), ('structured', 'amod'), ('narrative', 'pobj'), (':', 'punct'), ('methods', 'appos'), ('computing', 'pcomp'), ('complex', 'amod'), ('relations', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[database, computer], [computer, -], [-, structured], [structured, narrative], [narrative, :], [:, methods], [methods, computing], [computing, complex], [complex, relations], [relations, .]]

>> Trigrams: 
[[database, computer, -], [computer, -, structured], [-, structured, narrative], [structured, narrative, :], [narrative, :, methods], [:, methods, computing], [methods, computing, complex], [computing, complex, relations], [complex, relations, .]]

>> Noun Phrases are: 
[database, computer-structured narrative, methods, complex relations]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 783 =================================

In Proceedings of the Annual Symposium on Computer Application in Medical Care (p. 221).  

------------------- Sentence 1 -------------------

In Proceedings of the Annual Symposium on Computer Application in Medical Care (p. 221). 


>> Tokens are: 
[Proceedings, Annual, Symposium, Computer, Application, Medical, Care, (, p., 221, ), .] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('Annual', 'PROPN'), ('Symposium', 'PROPN'), ('Computer', 'PROPN'), ('Application', 'PROPN'), ('Medical', 'PROPN'), ('Care', 'PROPN'), ('(', 'PUNCT'), ('p.', 'NOUN'), ('221', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('Annual', 'compound'), ('Symposium', 'pobj'), ('Computer', 'compound'), ('Application', 'pobj'), ('Medical', 'compound'), ('Care', 'pobj'), ('(', 'punct'), ('p.', 'ROOT'), ('221', 'nummod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Proceedings, Annual], [Annual, Symposium], [Symposium, Computer], [Computer, Application], [Application, Medical], [Medical, Care], [Care, (], [(, p.], [p., 221], [221, )], [), .]]

>> Trigrams: 
[[Proceedings, Annual, Symposium], [Annual, Symposium, Computer], [Symposium, Computer, Application], [Computer, Application, Medical], [Application, Medical, Care], [Medical, Care, (], [Care, (, p.], [(, p., 221], [p., 221, )], [221, ), .]]

>> Noun Phrases are: 
[Proceedings, the Annual Symposium, Computer Application, Medical Care]

>> Named Entities are: 
[('the Annual Symposium on Computer Application in Medical Care (', 'EVENT'), ('221', 'CARDINAL')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 784 =================================

American Medical Informatics Association.  

------------------- Sentence 1 -------------------

American Medical Informatics Association. 


>> Tokens are: 
[American, Medical, Informatics, Association, .] 

>> PoS Tags are: 
[('American', 'PROPN'), ('Medical', 'PROPN'), ('Informatics', 'PROPN'), ('Association', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('American', 'compound'), ('Medical', 'compound'), ('Informatics', 'compound'), ('Association', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[American, Medical], [Medical, Informatics], [Informatics, Association], [Association, .]]

>> Trigrams: 
[[American, Medical, Informatics], [Medical, Informatics, Association], [Informatics, Association, .]]

>> Noun Phrases are: 
[American Medical Informatics Association]

>> Named Entities are: 
[('American Medical Informatics Association', 'ORG')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 785 =================================

[75] Grishman, R., Sager, N., Raze, C., & Bookchin, B. (1973, June). The linguistic string  

------------------- Sentence 1 -------------------

[75] Grishman, R., Sager, N., Raze, C., & Bookchin, B. (1973, June). 


>> Tokens are: 
[[, 75, ], Grishman, ,, R., ,, Sager, ,, N., ,, Raze, ,, C., ,, &, Bookchin, ,, B., (, 1973, ,, June, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('75', 'NUM'), (']', 'PUNCT'), ('Grishman', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), (',', 'PUNCT'), ('Sager', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), (',', 'PUNCT'), ('Raze', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Bookchin', 'PROPN'), (',', 'PUNCT'), ('B.', 'PROPN'), ('(', 'PUNCT'), ('1973', 'NUM'), (',', 'PUNCT'), ('June', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('75', 'nummod'), (']', 'punct'), ('Grishman', 'ROOT'), (',', 'punct'), ('R.', 'appos'), (',', 'punct'), ('Sager', 'conj'), (',', 'punct'), ('N.', 'conj'), (',', 'punct'), ('Raze', 'conj'), (',', 'punct'), ('C.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Bookchin', 'conj'), (',', 'punct'), ('B.', 'appos'), ('(', 'punct'), ('1973', 'appos'), (',', 'punct'), ('June', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 75], [75, ]], [], Grishman], [Grishman, ,], [,, R.], [R., ,], [,, Sager], [Sager, ,], [,, N.], [N., ,], [,, Raze], [Raze, ,], [,, C.], [C., ,], [,, &], [&, Bookchin], [Bookchin, ,], [,, B.], [B., (], [(, 1973], [1973, ,], [,, June], [June, )], [), .]]

>> Trigrams: 
[[[, 75, ]], [75, ], Grishman], [], Grishman, ,], [Grishman, ,, R.], [,, R., ,], [R., ,, Sager], [,, Sager, ,], [Sager, ,, N.], [,, N., ,], [N., ,, Raze], [,, Raze, ,], [Raze, ,, C.], [,, C., ,], [C., ,, &], [,, &, Bookchin], [&, Bookchin, ,], [Bookchin, ,, B.], [,, B., (], [B., (, 1973], [(, 1973, ,], [1973, ,, June], [,, June, )], [June, ), .]]

>> Noun Phrases are: 
[[75] Grishman, R., Sager, N., Raze, C., Bookchin, B.]

>> Named Entities are: 
[('75', 'CARDINAL'), ('Grishman', 'PERSON'), ('R.', 'NORP'), ('B.', 'PERSON'), ('1973', 'DATE'), ('June', 'DATE')] 

------------------- Sentence 2 -------------------

The linguistic string   


>> Tokens are: 
[linguistic, string,  ] 

>> PoS Tags are: 
[('linguistic', 'ADJ'), ('string', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('linguistic', 'amod'), ('string', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[linguistic, string], [string,  ]]

>> Trigrams: 
[[linguistic, string,  ]]

>> Noun Phrases are: 
[The linguistic string]

>> Named Entities are: 
[] 


================================ Paragraph 786 =================================

parser. In Proceedings of the June 4-8, 1973, national computer conference and  

------------------- Sentence 1 -------------------

parser. 


>> Tokens are: 
[parser, .] 

>> PoS Tags are: 
[('parser', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('parser', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[parser, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[parser]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Proceedings of the June 4-8, 1973, national computer conference and   


>> Tokens are: 
[Proceedings, June, 4, -, 8, ,, 1973, ,, national, computer, conference,  ] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('June', 'PROPN'), ('4', 'NUM'), ('-', 'SYM'), ('8', 'NUM'), (',', 'PUNCT'), ('1973', 'NUM'), (',', 'PUNCT'), ('national', 'ADJ'), ('computer', 'NOUN'), ('conference', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('June', 'pobj'), ('4', 'nummod'), ('-', 'punct'), ('8', 'prep'), (',', 'punct'), ('1973', 'appos'), (',', 'punct'), ('national', 'amod'), ('computer', 'compound'), ('conference', 'conj'), (' ', 'conj')]

>> Bigrams: 
[[Proceedings, June], [June, 4], [4, -], [-, 8], [8, ,], [,, 1973], [1973, ,], [,, national], [national, computer], [computer, conference], [conference,  ]]

>> Trigrams: 
[[Proceedings, June, 4], [June, 4, -], [4, -, 8], [-, 8, ,], [8, ,, 1973], [,, 1973, ,], [1973, ,, national], [,, national, computer], [national, computer, conference], [computer, conference,  ]]

>> Noun Phrases are: 
[Proceedings, the June, national computer conference]

>> Named Entities are: 
[('Proceedings', 'GPE'), ('June 4-8, 1973', 'DATE')] 


================================ Paragraph 787 =================================

exposition (pp. 427-434). ACM.  

------------------- Sentence 1 -------------------

exposition (pp. 


>> Tokens are: 
[exposition, (, pp, .] 

>> PoS Tags are: 
[('exposition', 'NOUN'), ('(', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('exposition', 'ROOT'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[exposition, (], [(, pp], [pp, .]]

>> Trigrams: 
[[exposition, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[exposition, pp]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

427-434). 


>> Tokens are: 
[427, -, 434, ), .] 

>> PoS Tags are: 
[('427', 'NUM'), ('-', 'SYM'), ('434', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('427', 'ROOT'), ('-', 'punct'), ('434', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[427, -], [-, 434], [434, )], [), .]]

>> Trigrams: 
[[427, -, 434], [-, 434, )], [434, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('427', 'CARDINAL')] 

------------------- Sentence 3 -------------------

ACM. 


>> Tokens are: 
[ACM, .] 

>> PoS Tags are: 
[('ACM', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ACM', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[ACM, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[ACM]

>> Named Entities are: 
[('ACM', 'ORG')] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 788 =================================

[76] Hirschman, L., Grishman, R., & Sager, N. (1976, June). From text to structured  

------------------- Sentence 1 -------------------

[76] Hirschman, L., Grishman, R., & Sager, N. (1976, June). 


>> Tokens are: 
[[, 76, ], Hirschman, ,, L., ,, Grishman, ,, R., ,, &, Sager, ,, N., (, 1976, ,, June, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('76', 'NUM'), (']', 'PUNCT'), ('Hirschman', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), (',', 'PUNCT'), ('Grishman', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Sager', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), ('(', 'PUNCT'), ('1976', 'NUM'), (',', 'PUNCT'), ('June', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('76', 'nummod'), (']', 'punct'), ('Hirschman', 'ROOT'), (',', 'punct'), ('L.', 'conj'), (',', 'punct'), ('Grishman', 'conj'), (',', 'punct'), ('R.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Sager', 'conj'), (',', 'punct'), ('N.', 'conj'), ('(', 'punct'), ('1976', 'appos'), (',', 'punct'), ('June', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 76], [76, ]], [], Hirschman], [Hirschman, ,], [,, L.], [L., ,], [,, Grishman], [Grishman, ,], [,, R.], [R., ,], [,, &], [&, Sager], [Sager, ,], [,, N.], [N., (], [(, 1976], [1976, ,], [,, June], [June, )], [), .]]

>> Trigrams: 
[[[, 76, ]], [76, ], Hirschman], [], Hirschman, ,], [Hirschman, ,, L.], [,, L., ,], [L., ,, Grishman], [,, Grishman, ,], [Grishman, ,, R.], [,, R., ,], [R., ,, &], [,, &, Sager], [&, Sager, ,], [Sager, ,, N.], [,, N., (], [N., (, 1976], [(, 1976, ,], [1976, ,, June], [,, June, )], [June, ), .]]

>> Noun Phrases are: 
[[76] Hirschman, L., Grishman, R., Sager, N.]

>> Named Entities are: 
[('76', 'CARDINAL'), ('L.', 'GPE'), ('Grishman', 'PERSON'), ('R.', 'NORP'), ('1976, June', 'DATE')] 

------------------- Sentence 2 -------------------

From text to structured   


>> Tokens are: 
[text, structured,  ] 

>> PoS Tags are: 
[('text', 'NOUN'), ('structured', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('text', 'pobj'), ('structured', 'advcl'), (' ', 'dobj')]

>> Bigrams: 
[[text, structured], [structured,  ]]

>> Trigrams: 
[[text, structured,  ]]

>> Noun Phrases are: 
[text]

>> Named Entities are: 
[] 


================================ Paragraph 789 =================================

information: automatic processing of medical reports. In Proceedings of the June 7-10, 1976,  

------------------- Sentence 1 -------------------

information: automatic processing of medical reports. 


>> Tokens are: 
[information, :, automatic, processing, medical, reports, .] 

>> PoS Tags are: 
[('information', 'NOUN'), (':', 'PUNCT'), ('automatic', 'ADJ'), ('processing', 'NOUN'), ('medical', 'ADJ'), ('reports', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('information', 'ROOT'), (':', 'punct'), ('automatic', 'amod'), ('processing', 'appos'), ('medical', 'amod'), ('reports', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[information, :], [:, automatic], [automatic, processing], [processing, medical], [medical, reports], [reports, .]]

>> Trigrams: 
[[information, :, automatic], [:, automatic, processing], [automatic, processing, medical], [processing, medical, reports], [medical, reports, .]]

>> Noun Phrases are: 
[information, automatic processing, medical reports]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Proceedings of the June 7-10, 1976,   


>> Tokens are: 
[Proceedings, June, 7, -, 10, ,, 1976, ,,  ] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('June', 'PROPN'), ('7', 'NUM'), ('-', 'SYM'), ('10', 'NUM'), (',', 'PUNCT'), ('1976', 'NUM'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('June', 'pobj'), ('7', 'nummod'), ('-', 'punct'), ('10', 'prep'), (',', 'punct'), ('1976', 'appos'), (',', 'punct'), (' ', 'pobj')]

>> Bigrams: 
[[Proceedings, June], [June, 7], [7, -], [-, 10], [10, ,], [,, 1976], [1976, ,], [,,  ]]

>> Trigrams: 
[[Proceedings, June, 7], [June, 7, -], [7, -, 10], [-, 10, ,], [10, ,, 1976], [,, 1976, ,], [1976, ,,  ]]

>> Noun Phrases are: 
[Proceedings, the June]

>> Named Entities are: 
[('Proceedings', 'GPE')] 


================================ Paragraph 790 =================================

national computer conference and exposition (pp. 267-275). ACM.  

------------------- Sentence 1 -------------------

national computer conference and exposition (pp. 


>> Tokens are: 
[national, computer, conference, exposition, (, pp, .] 

>> PoS Tags are: 
[('national', 'ADJ'), ('computer', 'NOUN'), ('conference', 'NOUN'), ('exposition', 'NOUN'), ('(', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('national', 'amod'), ('computer', 'compound'), ('conference', 'ROOT'), ('exposition', 'conj'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[national, computer], [computer, conference], [conference, exposition], [exposition, (], [(, pp], [pp, .]]

>> Trigrams: 
[[national, computer, conference], [computer, conference, exposition], [conference, exposition, (], [exposition, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[national computer conference, exposition, pp]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

267-275). 


>> Tokens are: 
[267, -, 275, ), .] 

>> PoS Tags are: 
[('267', 'NUM'), ('-', 'SYM'), ('275', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('267', 'ROOT'), ('-', 'punct'), ('275', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[267, -], [-, 275], [275, )], [), .]]

>> Trigrams: 
[[267, -, 275], [-, 275, )], [275, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('267', 'CARDINAL')] 

------------------- Sentence 3 -------------------

ACM. 


>> Tokens are: 
[ACM, .] 

>> PoS Tags are: 
[('ACM', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ACM', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[ACM, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[ACM]

>> Named Entities are: 
[('ACM', 'ORG')] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 791 =================================

[77] Sager, N. (1981). Natural language information processing. Addison-Wesley Publishing  

------------------- Sentence 1 -------------------

[77] Sager, N. (1981). 


>> Tokens are: 
[[, 77, ], Sager, ,, N., (, 1981, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('77', 'NUM'), (']', 'PUNCT'), ('Sager', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), ('(', 'PUNCT'), ('1981', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('77', 'nummod'), (']', 'punct'), ('Sager', 'ROOT'), (',', 'punct'), ('N.', 'appos'), ('(', 'punct'), ('1981', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 77], [77, ]], [], Sager], [Sager, ,], [,, N.], [N., (], [(, 1981], [1981, )], [), .]]

>> Trigrams: 
[[[, 77, ]], [77, ], Sager], [], Sager, ,], [Sager, ,, N.], [,, N., (], [N., (, 1981], [(, 1981, )], [1981, ), .]]

>> Noun Phrases are: 
[[77] Sager, N.]

>> Named Entities are: 
[('1981', 'DATE')] 

------------------- Sentence 2 -------------------

Natural language information processing. 


>> Tokens are: 
[Natural, language, information, processing, .] 

>> PoS Tags are: 
[('Natural', 'ADJ'), ('language', 'NOUN'), ('information', 'NOUN'), ('processing', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Natural', 'amod'), ('language', 'compound'), ('information', 'compound'), ('processing', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Natural, language], [language, information], [information, processing], [processing, .]]

>> Trigrams: 
[[Natural, language, information], [language, information, processing], [information, processing, .]]

>> Noun Phrases are: 
[Natural language information processing]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Addison-Wesley Publishing   


>> Tokens are: 
[Addison, -, Wesley, Publishing,  ] 

>> PoS Tags are: 
[('Addison', 'PROPN'), ('-', 'PUNCT'), ('Wesley', 'PROPN'), ('Publishing', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Addison', 'compound'), ('-', 'punct'), ('Wesley', 'compound'), ('Publishing', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[Addison, -], [-, Wesley], [Wesley, Publishing], [Publishing,  ]]

>> Trigrams: 
[[Addison, -, Wesley], [-, Wesley, Publishing], [Wesley, Publishing,  ]]

>> Noun Phrases are: 
[Addison-Wesley Publishing]

>> Named Entities are: 
[('Addison-Wesley Publishing', 'ORG')] 


================================ Paragraph 792 =================================

Company, Advanced Book Program.  

------------------- Sentence 1 -------------------

Company, Advanced Book Program. 


>> Tokens are: 
[Company, ,, Advanced, Book, Program, .] 

>> PoS Tags are: 
[('Company', 'NOUN'), (',', 'PUNCT'), ('Advanced', 'PROPN'), ('Book', 'PROPN'), ('Program', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Company', 'ROOT'), (',', 'punct'), ('Advanced', 'compound'), ('Book', 'compound'), ('Program', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Company, ,], [,, Advanced], [Advanced, Book], [Book, Program], [Program, .]]

>> Trigrams: 
[[Company, ,, Advanced], [,, Advanced, Book], [Advanced, Book, Program], [Book, Program, .]]

>> Noun Phrases are: 
[Company, Advanced Book Program]

>> Named Entities are: 
[('Advanced Book Program', 'WORK_OF_ART')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 793 =================================

[78] Lyman, M., Sager, N., Friedman, C., & Chi, E. (1985, November). Computer-structured  

------------------- Sentence 1 -------------------

[78] Lyman, M., Sager, N., Friedman, C., & Chi, E. (1985, November). 


>> Tokens are: 
[[, 78, ], Lyman, ,, M., ,, Sager, ,, N., ,, Friedman, ,, C., ,, &, Chi, ,, E., (, 1985, ,, November, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('78', 'NUM'), (']', 'PUNCT'), ('Lyman', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), (',', 'PUNCT'), ('Sager', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), (',', 'PUNCT'), ('Friedman', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Chi', 'PROPN'), (',', 'PUNCT'), ('E.', 'PROPN'), ('(', 'PUNCT'), ('1985', 'NUM'), (',', 'PUNCT'), ('November', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('78', 'ROOT'), (']', 'punct'), ('Lyman', 'npadvmod'), (',', 'punct'), ('M.', 'conj'), (',', 'punct'), ('Sager', 'conj'), (',', 'punct'), ('N.', 'conj'), (',', 'punct'), ('Friedman', 'conj'), (',', 'punct'), ('C.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Chi', 'conj'), (',', 'punct'), ('E.', 'conj'), ('(', 'punct'), ('1985', 'appos'), (',', 'punct'), ('November', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 78], [78, ]], [], Lyman], [Lyman, ,], [,, M.], [M., ,], [,, Sager], [Sager, ,], [,, N.], [N., ,], [,, Friedman], [Friedman, ,], [,, C.], [C., ,], [,, &], [&, Chi], [Chi, ,], [,, E.], [E., (], [(, 1985], [1985, ,], [,, November], [November, )], [), .]]

>> Trigrams: 
[[[, 78, ]], [78, ], Lyman], [], Lyman, ,], [Lyman, ,, M.], [,, M., ,], [M., ,, Sager], [,, Sager, ,], [Sager, ,, N.], [,, N., ,], [N., ,, Friedman], [,, Friedman, ,], [Friedman, ,, C.], [,, C., ,], [C., ,, &], [,, &, Chi], [&, Chi, ,], [Chi, ,, E.], [,, E., (], [E., (, 1985], [(, 1985, ,], [1985, ,, November], [,, November, )], [November, ), .]]

>> Noun Phrases are: 
[November]

>> Named Entities are: 
[('78', 'CARDINAL'), ('N.', 'ORG'), ('Friedman', 'ORG'), ('C., & Chi', 'ORG'), ('1985, November', 'DATE')] 

------------------- Sentence 2 -------------------

Computer-structured   


>> Tokens are: 
[Computer, -, structured,  ] 

>> PoS Tags are: 
[('Computer', 'NOUN'), ('-', 'PUNCT'), ('structured', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Computer', 'npadvmod'), ('-', 'punct'), ('structured', 'amod'), (' ', 'ROOT')]

>> Bigrams: 
[[Computer, -], [-, structured], [structured,  ]]

>> Trigrams: 
[[Computer, -, structured], [-, structured,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 794 =================================

narrative in ambulatory care: its use in longitudinal review of clinical data. In Proceedings of  

------------------- Sentence 1 -------------------

narrative in ambulatory care: its use in longitudinal review of clinical data. 


>> Tokens are: 
[narrative, ambulatory, care, :, use, longitudinal, review, clinical, data, .] 

>> PoS Tags are: 
[('narrative', 'NOUN'), ('ambulatory', 'ADJ'), ('care', 'NOUN'), (':', 'PUNCT'), ('use', 'NOUN'), ('longitudinal', 'ADJ'), ('review', 'NOUN'), ('clinical', 'ADJ'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('narrative', 'ROOT'), ('ambulatory', 'amod'), ('care', 'pobj'), (':', 'punct'), ('use', 'appos'), ('longitudinal', 'amod'), ('review', 'pobj'), ('clinical', 'amod'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[narrative, ambulatory], [ambulatory, care], [care, :], [:, use], [use, longitudinal], [longitudinal, review], [review, clinical], [clinical, data], [data, .]]

>> Trigrams: 
[[narrative, ambulatory, care], [ambulatory, care, :], [care, :, use], [:, use, longitudinal], [use, longitudinal, review], [longitudinal, review, clinical], [review, clinical, data], [clinical, data, .]]

>> Noun Phrases are: 
[narrative, ambulatory care, its use, longitudinal review, clinical data]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Proceedings of   


>> Tokens are: 
[Proceedings,  ] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Proceedings,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Proceedings]

>> Named Entities are: 
[('Proceedings of', 'ORG')] 


================================ Paragraph 795 =================================

the Annual Symposium on Computer Application in Medical Care (p. 82). American Medical  

------------------- Sentence 1 -------------------

the Annual Symposium on Computer Application in Medical Care (p. 82). 


>> Tokens are: 
[Annual, Symposium, Computer, Application, Medical, Care, (, p., 82, ), .] 

>> PoS Tags are: 
[('Annual', 'PROPN'), ('Symposium', 'PROPN'), ('Computer', 'PROPN'), ('Application', 'PROPN'), ('Medical', 'PROPN'), ('Care', 'PROPN'), ('(', 'PUNCT'), ('p.', 'NOUN'), ('82', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Annual', 'compound'), ('Symposium', 'ROOT'), ('Computer', 'compound'), ('Application', 'pobj'), ('Medical', 'compound'), ('Care', 'pobj'), ('(', 'punct'), ('p.', 'appos'), ('82', 'nummod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Annual, Symposium], [Symposium, Computer], [Computer, Application], [Application, Medical], [Medical, Care], [Care, (], [(, p.], [p., 82], [82, )], [), .]]

>> Trigrams: 
[[Annual, Symposium, Computer], [Symposium, Computer, Application], [Computer, Application, Medical], [Application, Medical, Care], [Medical, Care, (], [Care, (, p.], [(, p., 82], [p., 82, )], [82, ), .]]

>> Noun Phrases are: 
[the Annual Symposium, Computer Application, Medical Care, (p.]

>> Named Entities are: 
[('the Annual Symposium on Computer Application in Medical Care', 'EVENT'), ('82', 'CARDINAL')] 

------------------- Sentence 2 -------------------

American Medical   


>> Tokens are: 
[American, Medical,  ] 

>> PoS Tags are: 
[('American', 'PROPN'), ('Medical', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('American', 'compound'), ('Medical', 'compound'), (' ', 'ROOT')]

>> Bigrams: 
[[American, Medical], [Medical,  ]]

>> Trigrams: 
[[American, Medical,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('American Medical', 'ORG')] 


================================ Paragraph 796 =================================

Informatics Association.  

------------------- Sentence 1 -------------------

Informatics Association. 


>> Tokens are: 
[Informatics, Association, .] 

>> PoS Tags are: 
[('Informatics', 'PROPN'), ('Association', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Informatics', 'compound'), ('Association', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Informatics, Association], [Association, .]]

>> Trigrams: 
[[Informatics, Association, .]]

>> Noun Phrases are: 
[Informatics Association]

>> Named Entities are: 
[('Informatics Association', 'ORG')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 797 =================================

[79] McCray, A. T., & Nelson, S. J. (1995). The representation of meaning in the  

------------------- Sentence 1 -------------------

[79] McCray, A. T., & Nelson, S. J. (1995). 


>> Tokens are: 
[[, 79, ], McCray, ,, A., T., ,, &, Nelson, ,, S., J., (, 1995, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('79', 'NUM'), (']', 'PUNCT'), ('McCray', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('T.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Nelson', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('J.', 'PROPN'), ('(', 'PUNCT'), ('1995', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('79', 'dep'), (']', 'punct'), ('McCray', 'ROOT'), (',', 'punct'), ('A.', 'compound'), ('T.', 'appos'), (',', 'punct'), ('&', 'cc'), ('Nelson', 'conj'), (',', 'punct'), ('S.', 'compound'), ('J.', 'conj'), ('(', 'punct'), ('1995', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 79], [79, ]], [], McCray], [McCray, ,], [,, A.], [A., T.], [T., ,], [,, &], [&, Nelson], [Nelson, ,], [,, S.], [S., J.], [J., (], [(, 1995], [1995, )], [), .]]

>> Trigrams: 
[[[, 79, ]], [79, ], McCray], [], McCray, ,], [McCray, ,, A.], [,, A., T.], [A., T., ,], [T., ,, &], [,, &, Nelson], [&, Nelson, ,], [Nelson, ,, S.], [,, S., J.], [S., J., (], [J., (, 1995], [(, 1995, )], [1995, ), .]]

>> Noun Phrases are: 
[[79] McCray, A. T., Nelson, S. J.]

>> Named Entities are: 
[('79', 'CARDINAL'), ('A. T., & Nelson', 'PERSON'), ('S. J.', 'PERSON'), ('1995', 'DATE')] 

------------------- Sentence 2 -------------------

The representation of meaning in the   


>> Tokens are: 
[representation, meaning,  ] 

>> PoS Tags are: 
[('representation', 'NOUN'), ('meaning', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('representation', 'ROOT'), ('meaning', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[representation, meaning], [meaning,  ]]

>> Trigrams: 
[[representation, meaning,  ]]

>> Noun Phrases are: 
[The representation, meaning]

>> Named Entities are: 
[] 


================================ Paragraph 798 =================================

UMLS. Methods of information in medicine, 34(1-2), 193-201.  

------------------- Sentence 1 -------------------

UMLS. 


>> Tokens are: 
[UMLS, .] 

>> PoS Tags are: 
[('UMLS', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('UMLS', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[UMLS, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[UMLS]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Methods of information in medicine, 34(1-2), 193-201. 


>> Tokens are: 
[Methods, information, medicine, ,, 34(1, -, 2, ), ,, 193, -, 201, .] 

>> PoS Tags are: 
[('Methods', 'NOUN'), ('information', 'NOUN'), ('medicine', 'NOUN'), (',', 'PUNCT'), ('34(1', 'NUM'), ('-', 'PUNCT'), ('2', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('193', 'NUM'), ('-', 'SYM'), ('201', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Methods', 'ROOT'), ('information', 'pobj'), ('medicine', 'pobj'), (',', 'punct'), ('34(1', 'appos'), ('-', 'punct'), ('2', 'prep'), (')', 'punct'), (',', 'punct'), ('193', 'appos'), ('-', 'punct'), ('201', 'prep'), ('.', 'punct')]

>> Bigrams: 
[[Methods, information], [information, medicine], [medicine, ,], [,, 34(1], [34(1, -], [-, 2], [2, )], [), ,], [,, 193], [193, -], [-, 201], [201, .]]

>> Trigrams: 
[[Methods, information, medicine], [information, medicine, ,], [medicine, ,, 34(1], [,, 34(1, -], [34(1, -, 2], [-, 2, )], [2, ), ,], [), ,, 193], [,, 193, -], [193, -, 201], [-, 201, .]]

>> Noun Phrases are: 
[Methods, information, medicine]

>> Named Entities are: 
[('34(1', 'CARDINAL'), ('193', 'CARDINAL')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 799 =================================

[80] McGray, A. T., Sponsler, J. L., Brylawski, B., & Browne, A. C. (1987, November). The  

------------------- Sentence 1 -------------------

[80] McGray, A. T., Sponsler, J. L., Brylawski, B., & Browne, A. C. (1987, November). 


>> Tokens are: 
[[, 80, ], McGray, ,, A., T., ,, Sponsler, ,, J., L., ,, Brylawski, ,, B., ,, &, Browne, ,, A., C., (, 1987, ,, November, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('80', 'NUM'), (']', 'PUNCT'), ('McGray', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('T.', 'NOUN'), (',', 'PUNCT'), ('Sponsler', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('L.', 'PROPN'), (',', 'PUNCT'), ('Brylawski', 'PROPN'), (',', 'PUNCT'), ('B.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Browne', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('C.', 'PROPN'), ('(', 'PUNCT'), ('1987', 'NUM'), (',', 'PUNCT'), ('November', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('80', 'nummod'), (']', 'punct'), ('McGray', 'nmod'), (',', 'punct'), ('A.', 'compound'), ('T.', 'ROOT'), (',', 'punct'), ('Sponsler', 'conj'), (',', 'punct'), ('J.', 'compound'), ('L.', 'conj'), (',', 'punct'), ('Brylawski', 'conj'), (',', 'punct'), ('B.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Browne', 'conj'), (',', 'punct'), ('A.', 'compound'), ('C.', 'conj'), ('(', 'punct'), ('1987', 'appos'), (',', 'punct'), ('November', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 80], [80, ]], [], McGray], [McGray, ,], [,, A.], [A., T.], [T., ,], [,, Sponsler], [Sponsler, ,], [,, J.], [J., L.], [L., ,], [,, Brylawski], [Brylawski, ,], [,, B.], [B., ,], [,, &], [&, Browne], [Browne, ,], [,, A.], [A., C.], [C., (], [(, 1987], [1987, ,], [,, November], [November, )], [), .]]

>> Trigrams: 
[[[, 80, ]], [80, ], McGray], [], McGray, ,], [McGray, ,, A.], [,, A., T.], [A., T., ,], [T., ,, Sponsler], [,, Sponsler, ,], [Sponsler, ,, J.], [,, J., L.], [J., L., ,], [L., ,, Brylawski], [,, Brylawski, ,], [Brylawski, ,, B.], [,, B., ,], [B., ,, &], [,, &, Browne], [&, Browne, ,], [Browne, ,, A.], [,, A., C.], [A., C., (], [C., (, 1987], [(, 1987, ,], [1987, ,, November], [,, November, )], [November, ), .]]

>> Noun Phrases are: 
[[80] McGray, A. T., Sponsler, J. L., Brylawski, B., Browne, A. C.]

>> Named Entities are: 
[('80', 'CARDINAL'), ('A. T.', 'PERSON'), ('Sponsler', 'PERSON'), ('J. L.', 'PERSON'), ('Brylawski', 'PERSON'), ('1987', 'DATE'), ('November', 'DATE')] 

------------------- Sentence 2 -------------------

The   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 800 =================================

role of lexical knowledge in biomedical text understanding. In Proceedings of the Annual  

------------------- Sentence 1 -------------------

role of lexical knowledge in biomedical text understanding. 


>> Tokens are: 
[role, lexical, knowledge, biomedical, text, understanding, .] 

>> PoS Tags are: 
[('role', 'NOUN'), ('lexical', 'ADJ'), ('knowledge', 'NOUN'), ('biomedical', 'ADJ'), ('text', 'NOUN'), ('understanding', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('role', 'ROOT'), ('lexical', 'amod'), ('knowledge', 'pobj'), ('biomedical', 'amod'), ('text', 'compound'), ('understanding', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[role, lexical], [lexical, knowledge], [knowledge, biomedical], [biomedical, text], [text, understanding], [understanding, .]]

>> Trigrams: 
[[role, lexical, knowledge], [lexical, knowledge, biomedical], [knowledge, biomedical, text], [biomedical, text, understanding], [text, understanding, .]]

>> Noun Phrases are: 
[role, lexical knowledge, biomedical text understanding]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Proceedings of the Annual   


>> Tokens are: 
[Proceedings, Annual,  ] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('Annual', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('Annual', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Proceedings, Annual], [Annual,  ]]

>> Trigrams: 
[[Proceedings, Annual,  ]]

>> Noun Phrases are: 
[Proceedings]

>> Named Entities are: 
[('Proceedings', 'PERSON'), ('Annual', 'DATE')] 


================================ Paragraph 801 =================================

Symposium on Computer Application in Medical Care (p. 103). American Medical  

------------------- Sentence 1 -------------------

Symposium on Computer Application in Medical Care (p. 103). 


>> Tokens are: 
[Symposium, Computer, Application, Medical, Care, (, p., 103, ), .] 

>> PoS Tags are: 
[('Symposium', 'NOUN'), ('Computer', 'PROPN'), ('Application', 'PROPN'), ('Medical', 'PROPN'), ('Care', 'PROPN'), ('(', 'PUNCT'), ('p.', 'NOUN'), ('103', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Symposium', 'ROOT'), ('Computer', 'compound'), ('Application', 'pobj'), ('Medical', 'compound'), ('Care', 'pobj'), ('(', 'punct'), ('p.', 'npadvmod'), ('103', 'nummod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Symposium, Computer], [Computer, Application], [Application, Medical], [Medical, Care], [Care, (], [(, p.], [p., 103], [103, )], [), .]]

>> Trigrams: 
[[Symposium, Computer, Application], [Computer, Application, Medical], [Application, Medical, Care], [Medical, Care, (], [Care, (, p.], [(, p., 103], [p., 103, )], [103, ), .]]

>> Noun Phrases are: 
[Symposium, Computer Application, Medical Care]

>> Named Entities are: 
[('103', 'CARDINAL')] 

------------------- Sentence 2 -------------------

American Medical   


>> Tokens are: 
[American, Medical,  ] 

>> PoS Tags are: 
[('American', 'PROPN'), ('Medical', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('American', 'compound'), ('Medical', 'compound'), (' ', 'ROOT')]

>> Bigrams: 
[[American, Medical], [Medical,  ]]

>> Trigrams: 
[[American, Medical,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('American Medical', 'ORG')] 


================================ Paragraph 802 =================================

Informatics Association. 

------------------- Sentence 1 -------------------

Informatics Association. 


>> Tokens are: 
[Informatics, Association, .] 

>> PoS Tags are: 
[('Informatics', 'PROPN'), ('Association', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Informatics', 'compound'), ('Association', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Informatics, Association], [Association, .]]

>> Trigrams: 
[[Informatics, Association, .]]

>> Noun Phrases are: 
[Informatics Association]

>> Named Entities are: 
[('Informatics Association', 'ORG')] 


================================ Paragraph 803 =================================

[81] McCray, A. T. (1991). Natural language processing for intelligent information retrieval.  

------------------- Sentence 1 -------------------

[81] McCray, A. T. (1991). 


>> Tokens are: 
[[, 81, ], McCray, ,, A., T., (, 1991, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('81', 'NUM'), (']', 'PUNCT'), ('McCray', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('T.', 'NOUN'), ('(', 'PUNCT'), ('1991', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('81', 'nummod'), (']', 'punct'), ('McCray', 'dep'), (',', 'punct'), ('A.', 'compound'), ('T.', 'ROOT'), ('(', 'punct'), ('1991', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 81], [81, ]], [], McCray], [McCray, ,], [,, A.], [A., T.], [T., (], [(, 1991], [1991, )], [), .]]

>> Trigrams: 
[[[, 81, ]], [81, ], McCray], [], McCray, ,], [McCray, ,, A.], [,, A., T.], [A., T., (], [T., (, 1991], [(, 1991, )], [1991, ), .]]

>> Noun Phrases are: 
[[81] McCray, A. T.]

>> Named Entities are: 
[('81', 'CARDINAL'), ('A. T.', 'PERSON'), ('1991', 'DATE')] 

------------------- Sentence 2 -------------------

Natural language processing for intelligent information retrieval. 


>> Tokens are: 
[Natural, language, processing, intelligent, information, retrieval, .] 

>> PoS Tags are: 
[('Natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), ('intelligent', 'ADJ'), ('information', 'NOUN'), ('retrieval', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Natural', 'amod'), ('language', 'compound'), ('processing', 'ROOT'), ('intelligent', 'amod'), ('information', 'compound'), ('retrieval', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Natural, language], [language, processing], [processing, intelligent], [intelligent, information], [information, retrieval], [retrieval, .]]

>> Trigrams: 
[[Natural, language, processing], [language, processing, intelligent], [processing, intelligent, information], [intelligent, information, retrieval], [information, retrieval, .]]

>> Noun Phrases are: 
[Natural language processing, intelligent information retrieval]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 804 =================================

In Engineering in Medicine and Biology Society, 1991. Vol. 13: 1991., Proceedings of the  

------------------- Sentence 1 -------------------

In Engineering in Medicine and Biology Society, 1991. 


>> Tokens are: 
[Engineering, Medicine, Biology, Society, ,, 1991, .] 

>> PoS Tags are: 
[('Engineering', 'PROPN'), ('Medicine', 'PROPN'), ('Biology', 'PROPN'), ('Society', 'PROPN'), (',', 'PUNCT'), ('1991', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Engineering', 'pobj'), ('Medicine', 'nmod'), ('Biology', 'conj'), ('Society', 'pobj'), (',', 'punct'), ('1991', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[Engineering, Medicine], [Medicine, Biology], [Biology, Society], [Society, ,], [,, 1991], [1991, .]]

>> Trigrams: 
[[Engineering, Medicine, Biology], [Medicine, Biology, Society], [Biology, Society, ,], [Society, ,, 1991], [,, 1991, .]]

>> Noun Phrases are: 
[Engineering, Medicine and Biology Society]

>> Named Entities are: 
[('1991', 'DATE')] 

------------------- Sentence 2 -------------------

Vol. 


>> Tokens are: 
[Vol, .] 

>> PoS Tags are: 
[('Vol', 'INTJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Vol', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Vol, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

13: 1991. 


>> Tokens are: 
[13, :, 1991, .] 

>> PoS Tags are: 
[('13', 'NUM'), (':', 'SYM'), ('1991', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('13', 'ROOT'), (':', 'punct'), ('1991', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[13, :], [:, 1991], [1991, .]]

>> Trigrams: 
[[13, :, 1991], [:, 1991, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('13', 'CARDINAL'), ('1991', 'DATE')] 

------------------- Sentence 4 -------------------

, 


>> Tokens are: 
[,] 

>> PoS Tags are: 
[(',', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 5 -------------------

Proceedings of the   


>> Tokens are: 
[Proceedings,  ] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[Proceedings,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Proceedings]

>> Named Entities are: 
[] 


================================ Paragraph 805 =================================

Annual International Conference of the IEEE (pp. 1160-1161). IEEE.  

------------------- Sentence 1 -------------------

Annual International Conference of the IEEE (pp. 


>> Tokens are: 
[Annual, International, Conference, IEEE, (, pp, .] 

>> PoS Tags are: 
[('Annual', 'PROPN'), ('International', 'PROPN'), ('Conference', 'PROPN'), ('IEEE', 'PROPN'), ('(', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Annual', 'compound'), ('International', 'compound'), ('Conference', 'ROOT'), ('IEEE', 'pobj'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Annual, International], [International, Conference], [Conference, IEEE], [IEEE, (], [(, pp], [pp, .]]

>> Trigrams: 
[[Annual, International, Conference], [International, Conference, IEEE], [Conference, IEEE, (], [IEEE, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[Annual International Conference, the IEEE, (pp]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

1160-1161). 


>> Tokens are: 
[1160, -, 1161, ), .] 

>> PoS Tags are: 
[('1160', 'NUM'), ('-', 'SYM'), ('1161', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1160', 'ROOT'), ('-', 'punct'), ('1161', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[1160, -], [-, 1161], [1161, )], [), .]]

>> Trigrams: 
[[1160, -, 1161], [-, 1161, )], [1161, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1160-1161', 'DATE')] 

------------------- Sentence 3 -------------------

IEEE. 


>> Tokens are: 
[IEEE, .] 

>> PoS Tags are: 
[('IEEE', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('IEEE', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[IEEE, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[IEEE]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 806 =================================

[82] McCray, A. T. (1991). Extending a natural language parser with UMLS knowledge.  

------------------- Sentence 1 -------------------

[82] McCray, A. T. (1991). 


>> Tokens are: 
[[, 82, ], McCray, ,, A., T., (, 1991, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('82', 'NUM'), (']', 'PUNCT'), ('McCray', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('T.', 'NOUN'), ('(', 'PUNCT'), ('1991', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('82', 'nummod'), (']', 'dep'), ('McCray', 'dep'), (',', 'punct'), ('A.', 'compound'), ('T.', 'ROOT'), ('(', 'punct'), ('1991', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 82], [82, ]], [], McCray], [McCray, ,], [,, A.], [A., T.], [T., (], [(, 1991], [1991, )], [), .]]

>> Trigrams: 
[[[, 82, ]], [82, ], McCray], [], McCray, ,], [McCray, ,, A.], [,, A., T.], [A., T., (], [T., (, 1991], [(, 1991, )], [1991, ), .]]

>> Noun Phrases are: 
[[82] McCray, A. T.]

>> Named Entities are: 
[('82', 'CARDINAL'), ('A. T.', 'PERSON'), ('1991', 'DATE')] 

------------------- Sentence 2 -------------------

Extending a natural language parser with UMLS knowledge.   


>> Tokens are: 
[Extending, natural, language, parser, UMLS, knowledge, .,  ] 

>> PoS Tags are: 
[('Extending', 'VERB'), ('natural', 'ADJ'), ('language', 'NOUN'), ('parser', 'NOUN'), ('UMLS', 'NOUN'), ('knowledge', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Extending', 'ROOT'), ('natural', 'amod'), ('language', 'compound'), ('parser', 'dobj'), ('UMLS', 'compound'), ('knowledge', 'pobj'), ('.', 'punct'), (' ', 'dobj')]

>> Bigrams: 
[[Extending, natural], [natural, language], [language, parser], [parser, UMLS], [UMLS, knowledge], [knowledge, .], [.,  ]]

>> Trigrams: 
[[Extending, natural, language], [natural, language, parser], [language, parser, UMLS], [parser, UMLS, knowledge], [UMLS, knowledge, .], [knowledge, .,  ]]

>> Noun Phrases are: 
[a natural language parser, UMLS knowledge]

>> Named Entities are: 
[] 


================================ Paragraph 807 =================================

In Proceedings of the Annual Symposium on Computer Application in Medical Care (p. 194).  

------------------- Sentence 1 -------------------

In Proceedings of the Annual Symposium on Computer Application in Medical Care (p. 194). 


>> Tokens are: 
[Proceedings, Annual, Symposium, Computer, Application, Medical, Care, (, p., 194, ), .] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('Annual', 'PROPN'), ('Symposium', 'PROPN'), ('Computer', 'PROPN'), ('Application', 'PROPN'), ('Medical', 'PROPN'), ('Care', 'PROPN'), ('(', 'PUNCT'), ('p.', 'NOUN'), ('194', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('Annual', 'compound'), ('Symposium', 'pobj'), ('Computer', 'compound'), ('Application', 'pobj'), ('Medical', 'compound'), ('Care', 'pobj'), ('(', 'punct'), ('p.', 'ROOT'), ('194', 'nummod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Proceedings, Annual], [Annual, Symposium], [Symposium, Computer], [Computer, Application], [Application, Medical], [Medical, Care], [Care, (], [(, p.], [p., 194], [194, )], [), .]]

>> Trigrams: 
[[Proceedings, Annual, Symposium], [Annual, Symposium, Computer], [Symposium, Computer, Application], [Computer, Application, Medical], [Application, Medical, Care], [Medical, Care, (], [Care, (, p.], [(, p., 194], [p., 194, )], [194, ), .]]

>> Noun Phrases are: 
[Proceedings, the Annual Symposium, Computer Application, Medical Care]

>> Named Entities are: 
[('the Annual Symposium on Computer Application in Medical Care', 'EVENT'), ('194', 'CARDINAL')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 808 =================================

American Medical Informatics Association.  

------------------- Sentence 1 -------------------

American Medical Informatics Association. 


>> Tokens are: 
[American, Medical, Informatics, Association, .] 

>> PoS Tags are: 
[('American', 'PROPN'), ('Medical', 'PROPN'), ('Informatics', 'PROPN'), ('Association', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('American', 'compound'), ('Medical', 'compound'), ('Informatics', 'compound'), ('Association', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[American, Medical], [Medical, Informatics], [Informatics, Association], [Association, .]]

>> Trigrams: 
[[American, Medical, Informatics], [Medical, Informatics, Association], [Informatics, Association, .]]

>> Noun Phrases are: 
[American Medical Informatics Association]

>> Named Entities are: 
[('American Medical Informatics Association', 'ORG')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 809 =================================

[83] McCray, A. T., Srinivasan, S., & Browne, A. C. (1994). Lexical methods for managing  

------------------- Sentence 1 -------------------

[83] McCray, A. T., Srinivasan, S., & Browne, A. C. (1994). 


>> Tokens are: 
[[, 83, ], McCray, ,, A., T., ,, Srinivasan, ,, S., ,, &, Browne, ,, A., C., (, 1994, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('83', 'NUM'), (']', 'PUNCT'), ('McCray', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('T.', 'NOUN'), (',', 'PUNCT'), ('Srinivasan', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Browne', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('C.', 'PROPN'), ('(', 'PUNCT'), ('1994', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('83', 'dep'), (']', 'punct'), ('McCray', 'ROOT'), (',', 'punct'), ('A.', 'compound'), ('T.', 'appos'), (',', 'punct'), ('Srinivasan', 'conj'), (',', 'punct'), ('S.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Browne', 'conj'), (',', 'punct'), ('A.', 'compound'), ('C.', 'conj'), ('(', 'punct'), ('1994', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 83], [83, ]], [], McCray], [McCray, ,], [,, A.], [A., T.], [T., ,], [,, Srinivasan], [Srinivasan, ,], [,, S.], [S., ,], [,, &], [&, Browne], [Browne, ,], [,, A.], [A., C.], [C., (], [(, 1994], [1994, )], [), .]]

>> Trigrams: 
[[[, 83, ]], [83, ], McCray], [], McCray, ,], [McCray, ,, A.], [,, A., T.], [A., T., ,], [T., ,, Srinivasan], [,, Srinivasan, ,], [Srinivasan, ,, S.], [,, S., ,], [S., ,, &], [,, &, Browne], [&, Browne, ,], [Browne, ,, A.], [,, A., C.], [A., C., (], [C., (, 1994], [(, 1994, )], [1994, ), .]]

>> Noun Phrases are: 
[[83] McCray, A. T., Srinivasan, S., Browne, A. C.]

>> Named Entities are: 
[('83', 'CARDINAL'), ('A. T.', 'PERSON'), ('Srinivasan', 'ORG')] 

------------------- Sentence 2 -------------------

Lexical methods for managing   


>> Tokens are: 
[Lexical, methods, managing,  ] 

>> PoS Tags are: 
[('Lexical', 'ADJ'), ('methods', 'NOUN'), ('managing', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Lexical', 'amod'), ('methods', 'ROOT'), ('managing', 'pcomp'), (' ', 'dobj')]

>> Bigrams: 
[[Lexical, methods], [methods, managing], [managing,  ]]

>> Trigrams: 
[[Lexical, methods, managing], [methods, managing,  ]]

>> Noun Phrases are: 
[Lexical methods]

>> Named Entities are: 
[] 


================================ Paragraph 810 =================================

variation in biomedical terminologies. In Proceedings of the Annual Symposium on  

------------------- Sentence 1 -------------------

variation in biomedical terminologies. 


>> Tokens are: 
[variation, biomedical, terminologies, .] 

>> PoS Tags are: 
[('variation', 'NOUN'), ('biomedical', 'ADJ'), ('terminologies', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('variation', 'ROOT'), ('biomedical', 'amod'), ('terminologies', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[variation, biomedical], [biomedical, terminologies], [terminologies, .]]

>> Trigrams: 
[[variation, biomedical, terminologies], [biomedical, terminologies, .]]

>> Noun Phrases are: 
[variation, biomedical terminologies]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Proceedings of the Annual Symposium on   


>> Tokens are: 
[Proceedings, Annual, Symposium,  ] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('Annual', 'PROPN'), ('Symposium', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('Annual', 'compound'), ('Symposium', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Proceedings, Annual], [Annual, Symposium], [Symposium,  ]]

>> Trigrams: 
[[Proceedings, Annual, Symposium], [Annual, Symposium,  ]]

>> Noun Phrases are: 
[Proceedings, the Annual Symposium]

>> Named Entities are: 
[('Proceedings', 'GPE'), ('the Annual Symposium', 'EVENT')] 


================================ Paragraph 811 =================================

Computer Application in Medical Care (p. 235). American Medical Informatics Association.  

------------------- Sentence 1 -------------------

Computer Application in Medical Care (p. 235). 


>> Tokens are: 
[Computer, Application, Medical, Care, (, p., 235, ), .] 

>> PoS Tags are: 
[('Computer', 'PROPN'), ('Application', 'PROPN'), ('Medical', 'PROPN'), ('Care', 'PROPN'), ('(', 'PUNCT'), ('p.', 'NOUN'), ('235', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Computer', 'compound'), ('Application', 'ROOT'), ('Medical', 'compound'), ('Care', 'pobj'), ('(', 'punct'), ('p.', 'appos'), ('235', 'nummod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Computer, Application], [Application, Medical], [Medical, Care], [Care, (], [(, p.], [p., 235], [235, )], [), .]]

>> Trigrams: 
[[Computer, Application, Medical], [Application, Medical, Care], [Medical, Care, (], [Care, (, p.], [(, p., 235], [p., 235, )], [235, ), .]]

>> Noun Phrases are: 
[Computer Application, Medical Care, p.]

>> Named Entities are: 
[('Computer Application in Medical Care', 'ORG'), ('235', 'CARDINAL')] 

------------------- Sentence 2 -------------------

American Medical Informatics Association. 


>> Tokens are: 
[American, Medical, Informatics, Association, .] 

>> PoS Tags are: 
[('American', 'PROPN'), ('Medical', 'PROPN'), ('Informatics', 'PROPN'), ('Association', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('American', 'compound'), ('Medical', 'compound'), ('Informatics', 'compound'), ('Association', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[American, Medical], [Medical, Informatics], [Informatics, Association], [Association, .]]

>> Trigrams: 
[[American, Medical, Informatics], [Medical, Informatics, Association], [Informatics, Association, .]]

>> Noun Phrases are: 
[American Medical Informatics Association]

>> Named Entities are: 
[('American Medical Informatics Association', 'ORG')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 812 =================================

[84] McCray, A. T., & Razi, A. (1994). The UMLS Knowledge Source server. Medinfo.  

------------------- Sentence 1 -------------------

[84] McCray, A. T., & Razi, A. (1994). 


>> Tokens are: 
[[, 84, ], McCray, ,, A., T., ,, &, Razi, ,, A., (, 1994, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('84', 'NUM'), (']', 'PUNCT'), ('McCray', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('T.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Razi', 'PROPN'), (',', 'PUNCT'), ('A.', 'NOUN'), ('(', 'PUNCT'), ('1994', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('84', 'dep'), (']', 'punct'), ('McCray', 'ROOT'), (',', 'punct'), ('A.', 'compound'), ('T.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Razi', 'conj'), (',', 'punct'), ('A.', 'appos'), ('(', 'punct'), ('1994', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 84], [84, ]], [], McCray], [McCray, ,], [,, A.], [A., T.], [T., ,], [,, &], [&, Razi], [Razi, ,], [,, A.], [A., (], [(, 1994], [1994, )], [), .]]

>> Trigrams: 
[[[, 84, ]], [84, ], McCray], [], McCray, ,], [McCray, ,, A.], [,, A., T.], [A., T., ,], [T., ,, &], [,, &, Razi], [&, Razi, ,], [Razi, ,, A.], [,, A., (], [A., (, 1994], [(, 1994, )], [1994, ), .]]

>> Noun Phrases are: 
[[84] McCray, A. T., Razi, A.]

>> Named Entities are: 
[('84', 'CARDINAL'), ('A. T., & Razi', 'PERSON'), ('1994', 'DATE')] 

------------------- Sentence 2 -------------------

The UMLS Knowledge Source server. 


>> Tokens are: 
[UMLS, Knowledge, Source, server, .] 

>> PoS Tags are: 
[('UMLS', 'PROPN'), ('Knowledge', 'PROPN'), ('Source', 'PROPN'), ('server', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('UMLS', 'compound'), ('Knowledge', 'compound'), ('Source', 'compound'), ('server', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[UMLS, Knowledge], [Knowledge, Source], [Source, server], [server, .]]

>> Trigrams: 
[[UMLS, Knowledge, Source], [Knowledge, Source, server], [Source, server, .]]

>> Noun Phrases are: 
[The UMLS Knowledge Source server]

>> Named Entities are: 
[('The UMLS Knowledge Source', 'ORG')] 

------------------- Sentence 3 -------------------

Medinfo. 


>> Tokens are: 
[Medinfo, .] 

>> PoS Tags are: 
[('Medinfo', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Medinfo', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Medinfo, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Medinfo]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 813 =================================

MEDINFO, 8, 144-147.  

------------------- Sentence 1 -------------------

MEDINFO, 8, 144-147.   


>> Tokens are: 
[MEDINFO, ,, 8, ,, 144, -, 147, .,  ] 

>> PoS Tags are: 
[('MEDINFO', 'PROPN'), (',', 'PUNCT'), ('8', 'NUM'), (',', 'PUNCT'), ('144', 'NUM'), ('-', 'SYM'), ('147', 'NUM'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('MEDINFO', 'ROOT'), (',', 'punct'), ('8', 'appos'), (',', 'punct'), ('144', 'appos'), ('-', 'punct'), ('147', 'prep'), ('.', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[MEDINFO, ,], [,, 8], [8, ,], [,, 144], [144, -], [-, 147], [147, .], [.,  ]]

>> Trigrams: 
[[MEDINFO, ,, 8], [,, 8, ,], [8, ,, 144], [,, 144, -], [144, -, 147], [-, 147, .], [147, .,  ]]

>> Noun Phrases are: 
[MEDINFO]

>> Named Entities are: 
[('8', 'CARDINAL'), ('144-147', 'CARDINAL')] 


================================ Paragraph 814 =================================

[85] Scherrer, J. R., Revillard, C., Borst, F., Berthoud, M., & Lovis, C. (1994). Medical office  

------------------- Sentence 1 -------------------

[85] Scherrer, J. R., Revillard, C., Borst, F., Berthoud, M., & Lovis, C. (1994). 


>> Tokens are: 
[[, 85, ], Scherrer, ,, J., R., ,, Revillard, ,, C., ,, Borst, ,, F., ,, Berthoud, ,, M., ,, &, Lovis, ,, C., (, 1994, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('85', 'NUM'), (']', 'PUNCT'), ('Scherrer', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('R.', 'PROPN'), (',', 'PUNCT'), ('Revillard', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), (',', 'PUNCT'), ('Borst', 'PROPN'), (',', 'PUNCT'), ('F.', 'PROPN'), (',', 'PUNCT'), ('Berthoud', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Lovis', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), ('(', 'PUNCT'), ('1994', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('85', 'nummod'), (']', 'punct'), ('Scherrer', 'ROOT'), (',', 'punct'), ('J.', 'compound'), ('R.', 'conj'), (',', 'punct'), ('Revillard', 'conj'), (',', 'punct'), ('C.', 'conj'), (',', 'punct'), ('Borst', 'conj'), (',', 'punct'), ('F.', 'conj'), (',', 'punct'), ('Berthoud', 'conj'), (',', 'punct'), ('M.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Lovis', 'conj'), (',', 'punct'), ('C.', 'conj'), ('(', 'punct'), ('1994', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 85], [85, ]], [], Scherrer], [Scherrer, ,], [,, J.], [J., R.], [R., ,], [,, Revillard], [Revillard, ,], [,, C.], [C., ,], [,, Borst], [Borst, ,], [,, F.], [F., ,], [,, Berthoud], [Berthoud, ,], [,, M.], [M., ,], [,, &], [&, Lovis], [Lovis, ,], [,, C.], [C., (], [(, 1994], [1994, )], [), .]]

>> Trigrams: 
[[[, 85, ]], [85, ], Scherrer], [], Scherrer, ,], [Scherrer, ,, J.], [,, J., R.], [J., R., ,], [R., ,, Revillard], [,, Revillard, ,], [Revillard, ,, C.], [,, C., ,], [C., ,, Borst], [,, Borst, ,], [Borst, ,, F.], [,, F., ,], [F., ,, Berthoud], [,, Berthoud, ,], [Berthoud, ,, M.], [,, M., ,], [M., ,, &], [,, &, Lovis], [&, Lovis, ,], [Lovis, ,, C.], [,, C., (], [C., (, 1994], [(, 1994, )], [1994, ), .]]

>> Noun Phrases are: 
[[85] Scherrer, J. R., Revillard, C., Borst, F., Berthoud, M., Lovis, C.]

>> Named Entities are: 
[('85', 'CARDINAL'), ('J. R.', 'PERSON'), ('Revillard', 'PERSON')] 

------------------- Sentence 2 -------------------

Medical office   


>> Tokens are: 
[Medical, office,  ] 

>> PoS Tags are: 
[('Medical', 'ADJ'), ('office', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Medical', 'amod'), ('office', 'compound'), (' ', 'ROOT')]

>> Bigrams: 
[[Medical, office], [office,  ]]

>> Trigrams: 
[[Medical, office,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 815 =================================

automation integrated into the distributed architecture of a hospital information  

------------------- Sentence 1 -------------------

automation integrated into the distributed architecture of a hospital information   


>> Tokens are: 
[automation, integrated, distributed, architecture, hospital, information,  ] 

>> PoS Tags are: 
[('automation', 'NOUN'), ('integrated', 'VERB'), ('distributed', 'VERB'), ('architecture', 'NOUN'), ('hospital', 'NOUN'), ('information', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('automation', 'nsubj'), ('integrated', 'ROOT'), ('distributed', 'amod'), ('architecture', 'pobj'), ('hospital', 'compound'), ('information', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[automation, integrated], [integrated, distributed], [distributed, architecture], [architecture, hospital], [hospital, information], [information,  ]]

>> Trigrams: 
[[automation, integrated, distributed], [integrated, distributed, architecture], [distributed, architecture, hospital], [architecture, hospital, information], [hospital, information,  ]]

>> Noun Phrases are: 
[automation, the distributed architecture, a hospital information]

>> Named Entities are: 
[] 


================================ Paragraph 816 =================================

system. Methods of information in medicine, 33(2), 174-179.  

------------------- Sentence 1 -------------------

system. 


>> Tokens are: 
[system, .] 

>> PoS Tags are: 
[('system', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('system', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[system, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[system]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Methods of information in medicine, 33(2), 174-179. 


>> Tokens are: 
[Methods, information, medicine, ,, 33(2, ), ,, 174, -, 179, .] 

>> PoS Tags are: 
[('Methods', 'NOUN'), ('information', 'NOUN'), ('medicine', 'NOUN'), (',', 'PUNCT'), ('33(2', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('174', 'NUM'), ('-', 'SYM'), ('179', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Methods', 'ROOT'), ('information', 'pobj'), ('medicine', 'pobj'), (',', 'punct'), ('33(2', 'appos'), (')', 'punct'), (',', 'punct'), ('174', 'appos'), ('-', 'punct'), ('179', 'prep'), ('.', 'punct')]

>> Bigrams: 
[[Methods, information], [information, medicine], [medicine, ,], [,, 33(2], [33(2, )], [), ,], [,, 174], [174, -], [-, 179], [179, .]]

>> Trigrams: 
[[Methods, information, medicine], [information, medicine, ,], [medicine, ,, 33(2], [,, 33(2, )], [33(2, ), ,], [), ,, 174], [,, 174, -], [174, -, 179], [-, 179, .]]

>> Noun Phrases are: 
[Methods, information, medicine]

>> Named Entities are: 
[('33(2', 'CARDINAL'), ('174-179', 'CARDINAL')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 817 =================================

[86] Baud, R. H., Rassinoux, A. M., & Scherrer, J. R. (1992). Natural language processing  

------------------- Sentence 1 -------------------

[86] Baud, R. H., Rassinoux, A. M., & Scherrer, J. R. (1992). 


>> Tokens are: 
[[, 86, ], Baud, ,, R., H., ,, Rassinoux, ,, A., M., ,, &, Scherrer, ,, J., R., (, 1992, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('86', 'NUM'), (']', 'PUNCT'), ('Baud', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('H.', 'PROPN'), (',', 'PUNCT'), ('Rassinoux', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('M.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Scherrer', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('R.', 'PROPN'), ('(', 'PUNCT'), ('1992', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('86', 'meta'), (']', 'punct'), ('Baud', 'ROOT'), (',', 'punct'), ('R.', 'compound'), ('H.', 'appos'), (',', 'punct'), ('Rassinoux', 'conj'), (',', 'punct'), ('A.', 'compound'), ('M.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Scherrer', 'conj'), (',', 'punct'), ('J.', 'compound'), ('R.', 'conj'), ('(', 'punct'), ('1992', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 86], [86, ]], [], Baud], [Baud, ,], [,, R.], [R., H.], [H., ,], [,, Rassinoux], [Rassinoux, ,], [,, A.], [A., M.], [M., ,], [,, &], [&, Scherrer], [Scherrer, ,], [,, J.], [J., R.], [R., (], [(, 1992], [1992, )], [), .]]

>> Trigrams: 
[[[, 86, ]], [86, ], Baud], [], Baud, ,], [Baud, ,, R.], [,, R., H.], [R., H., ,], [H., ,, Rassinoux], [,, Rassinoux, ,], [Rassinoux, ,, A.], [,, A., M.], [A., M., ,], [M., ,, &], [,, &, Scherrer], [&, Scherrer, ,], [Scherrer, ,, J.], [,, J., R.], [J., R., (], [R., (, 1992], [(, 1992, )], [1992, ), .]]

>> Noun Phrases are: 
[[86] Baud, R. H., Rassinoux, A. M., Scherrer, J. R.]

>> Named Entities are: 
[('86', 'CARDINAL'), ('R. H.', 'PERSON'), ('& Scherrer', 'ORG'), ('J. R.', 'PERSON'), ('1992', 'DATE')] 

------------------- Sentence 2 -------------------

Natural language processing   


>> Tokens are: 
[Natural, language, processing,  ] 

>> PoS Tags are: 
[('Natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Natural', 'amod'), ('language', 'compound'), ('processing', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Natural, language], [language, processing], [processing,  ]]

>> Trigrams: 
[[Natural, language, processing], [language, processing,  ]]

>> Noun Phrases are: 
[Natural language processing]

>> Named Entities are: 
[] 


================================ Paragraph 818 =================================

and semantical representation of medical texts. Methods of information in medicine, 31(2),  

------------------- Sentence 1 -------------------

and semantical representation of medical texts. 


>> Tokens are: 
[semantical, representation, medical, texts, .] 

>> PoS Tags are: 
[('semantical', 'ADJ'), ('representation', 'NOUN'), ('medical', 'ADJ'), ('texts', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('semantical', 'amod'), ('representation', 'ROOT'), ('medical', 'amod'), ('texts', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[semantical, representation], [representation, medical], [medical, texts], [texts, .]]

>> Trigrams: 
[[semantical, representation, medical], [representation, medical, texts], [medical, texts, .]]

>> Noun Phrases are: 
[and semantical representation, medical texts]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Methods of information in medicine, 31(2),   


>> Tokens are: 
[Methods, information, medicine, ,, 31(2, ), ,,  ] 

>> PoS Tags are: 
[('Methods', 'NOUN'), ('information', 'NOUN'), ('medicine', 'NOUN'), (',', 'PUNCT'), ('31(2', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Methods', 'ROOT'), ('information', 'pobj'), ('medicine', 'pobj'), (',', 'punct'), ('31(2', 'appos'), (')', 'punct'), (',', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Methods, information], [information, medicine], [medicine, ,], [,, 31(2], [31(2, )], [), ,], [,,  ]]

>> Trigrams: 
[[Methods, information, medicine], [information, medicine, ,], [medicine, ,, 31(2], [,, 31(2, )], [31(2, ), ,], [), ,,  ]]

>> Noun Phrases are: 
[Methods, information, medicine]

>> Named Entities are: 
[('31(2', 'CARDINAL')] 


================================ Paragraph 819 =================================

117-125.  

------------------- Sentence 1 -------------------

117-125. 


>> Tokens are: 
[117, -, 125, .] 

>> PoS Tags are: 
[('117', 'NUM'), ('-', 'SYM'), ('125', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('117', 'ROOT'), ('-', 'punct'), ('125', 'prep'), ('.', 'punct')]

>> Bigrams: 
[[117, -], [-, 125], [125, .]]

>> Trigrams: 
[[117, -, 125], [-, 125, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('117-125', 'CARDINAL')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 820 =================================

[87] Lyman, M., Sager, N., Chi, E. C., Tick, L. J., Nhan, N. T., Su, Y., ... & Scherrer, J.  

------------------- Sentence 1 -------------------

[87] Lyman, M., Sager, N., Chi, E. C., Tick, L. J., Nhan, N. T., Su, Y., ... & Scherrer, J.   


>> Tokens are: 
[[, 87, ], Lyman, ,, M., ,, Sager, ,, N., ,, Chi, ,, E., C., ,, Tick, ,, L., J., ,, Nhan, ,, N., T., ,, Su, ,, Y., ,, ..., &, Scherrer, ,, J.,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('87', 'NUM'), (']', 'PUNCT'), ('Lyman', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), (',', 'PUNCT'), ('Sager', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), (',', 'PUNCT'), ('Chi', 'PROPN'), (',', 'PUNCT'), ('E.', 'PROPN'), ('C.', 'PROPN'), (',', 'PUNCT'), ('Tick', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('J.', 'PROPN'), (',', 'PUNCT'), ('Nhan', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), ('T.', 'PROPN'), (',', 'PUNCT'), ('Su', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), (',', 'PUNCT'), ('...', 'PUNCT'), ('&', 'CCONJ'), ('Scherrer', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('87', 'nmod'), (']', 'punct'), ('Lyman', 'ROOT'), (',', 'punct'), ('M.', 'conj'), (',', 'punct'), ('Sager', 'conj'), (',', 'punct'), ('N.', 'conj'), (',', 'punct'), ('Chi', 'conj'), (',', 'punct'), ('E.', 'compound'), ('C.', 'conj'), (',', 'punct'), ('Tick', 'conj'), (',', 'punct'), ('L.', 'compound'), ('J.', 'conj'), (',', 'punct'), ('Nhan', 'conj'), (',', 'punct'), ('N.', 'compound'), ('T.', 'conj'), (',', 'punct'), ('Su', 'conj'), (',', 'punct'), ('Y.', 'conj'), (',', 'punct'), ('...', 'punct'), ('&', 'cc'), ('Scherrer', 'conj'), (',', 'punct'), ('J.', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[[, 87], [87, ]], [], Lyman], [Lyman, ,], [,, M.], [M., ,], [,, Sager], [Sager, ,], [,, N.], [N., ,], [,, Chi], [Chi, ,], [,, E.], [E., C.], [C., ,], [,, Tick], [Tick, ,], [,, L.], [L., J.], [J., ,], [,, Nhan], [Nhan, ,], [,, N.], [N., T.], [T., ,], [,, Su], [Su, ,], [,, Y.], [Y., ,], [,, ...], [..., &], [&, Scherrer], [Scherrer, ,], [,, J.], [J.,  ]]

>> Trigrams: 
[[[, 87, ]], [87, ], Lyman], [], Lyman, ,], [Lyman, ,, M.], [,, M., ,], [M., ,, Sager], [,, Sager, ,], [Sager, ,, N.], [,, N., ,], [N., ,, Chi], [,, Chi, ,], [Chi, ,, E.], [,, E., C.], [E., C., ,], [C., ,, Tick], [,, Tick, ,], [Tick, ,, L.], [,, L., J.], [L., J., ,], [J., ,, Nhan], [,, Nhan, ,], [Nhan, ,, N.], [,, N., T.], [N., T., ,], [T., ,, Su], [,, Su, ,], [Su, ,, Y.], [,, Y., ,], [Y., ,, ...], [,, ..., &], [..., &, Scherrer], [&, Scherrer, ,], [Scherrer, ,, J.], [,, J.,  ]]

>> Noun Phrases are: 
[[87] Lyman, M., Sager, N., Chi, E. C., Tick, L. J., Nhan, N. T., Su, Y., Scherrer, J.]

>> Named Entities are: 
[('87', 'CARDINAL'), ('E. C.', 'PERSON'), ('L. J.', 'PERSON'), ('N. T.', 'PERSON'), ('& Scherrer', 'PERSON')] 


================================ Paragraph 821 =================================

(1989, November). Medical Language Processing for Knowledge Representation and  

------------------- Sentence 1 -------------------

(1989, November). 


>> Tokens are: 
[(, 1989, ,, November, ), .] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('1989', 'NUM'), (',', 'PUNCT'), ('November', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('1989', 'ROOT'), (',', 'punct'), ('November', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[(, 1989], [1989, ,], [,, November], [November, )], [), .]]

>> Trigrams: 
[[(, 1989, ,], [1989, ,, November], [,, November, )], [November, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1989', 'DATE'), ('November', 'DATE')] 

------------------- Sentence 2 -------------------

Medical Language Processing for Knowledge Representation and   


>> Tokens are: 
[Medical, Language, Processing, Knowledge, Representation,  ] 

>> PoS Tags are: 
[('Medical', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'PROPN'), ('Knowledge', 'PROPN'), ('Representation', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Medical', 'compound'), ('Language', 'compound'), ('Processing', 'ROOT'), ('Knowledge', 'compound'), ('Representation', 'pobj'), (' ', 'conj')]

>> Bigrams: 
[[Medical, Language], [Language, Processing], [Processing, Knowledge], [Knowledge, Representation], [Representation,  ]]

>> Trigrams: 
[[Medical, Language, Processing], [Language, Processing, Knowledge], [Processing, Knowledge, Representation], [Knowledge, Representation,  ]]

>> Noun Phrases are: 
[Medical Language Processing, Knowledge Representation]

>> Named Entities are: 
[] 


================================ Paragraph 822 =================================

Retrievals. In Proceedings. Symposium on Computer Applications in Medical Care (pp. 548- 

------------------- Sentence 1 -------------------

Retrievals. 


>> Tokens are: 
[Retrievals, .] 

>> PoS Tags are: 
[('Retrievals', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Retrievals', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Retrievals, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Retrievals]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Proceedings. 


>> Tokens are: 
[Proceedings, .] 

>> PoS Tags are: 
[('Proceedings', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Proceedings, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Proceedings]

>> Named Entities are: 
[('Proceedings', 'GPE')] 

------------------- Sentence 3 -------------------

Symposium on Computer Applications in Medical Care (pp. 


>> Tokens are: 
[Symposium, Computer, Applications, Medical, Care, (, pp, .] 

>> PoS Tags are: 
[('Symposium', 'NOUN'), ('Computer', 'PROPN'), ('Applications', 'PROPN'), ('Medical', 'PROPN'), ('Care', 'PROPN'), ('(', 'PUNCT'), ('pp', 'INTJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Symposium', 'ROOT'), ('Computer', 'compound'), ('Applications', 'pobj'), ('Medical', 'compound'), ('Care', 'pobj'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Symposium, Computer], [Computer, Applications], [Applications, Medical], [Medical, Care], [Care, (], [(, pp], [pp, .]]

>> Trigrams: 
[[Symposium, Computer, Applications], [Computer, Applications, Medical], [Applications, Medical, Care], [Medical, Care, (], [Care, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[Symposium, Computer Applications, Medical Care]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

548- 


>> Tokens are: 
[548-] 

>> PoS Tags are: 
[('548-', 'NUM')] 

>> Dependency Tags are: 
[('548-', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 823 =================================

553). American Medical Informatics Association.  

------------------- Sentence 1 -------------------

553). 


>> Tokens are: 
[553, ), .] 

>> PoS Tags are: 
[('553', 'X'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('553', 'ROOT'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[553, )], [), .]]

>> Trigrams: 
[[553, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('553', 'CARDINAL')] 

------------------- Sentence 2 -------------------

American Medical Informatics Association. 


>> Tokens are: 
[American, Medical, Informatics, Association, .] 

>> PoS Tags are: 
[('American', 'PROPN'), ('Medical', 'PROPN'), ('Informatics', 'PROPN'), ('Association', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('American', 'compound'), ('Medical', 'compound'), ('Informatics', 'compound'), ('Association', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[American, Medical], [Medical, Informatics], [Informatics, Association], [Association, .]]

>> Trigrams: 
[[American, Medical, Informatics], [Medical, Informatics, Association], [Informatics, Association, .]]

>> Noun Phrases are: 
[American Medical Informatics Association]

>> Named Entities are: 
[('American Medical Informatics Association', 'ORG')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 824 =================================

[88] Nhàn, N. T., Sager, N., Lyman, M., Tick, L. J., Borst, F., & Su, Y. (1989, November). A  

------------------- Sentence 1 -------------------

[88] Nhàn, N. T., Sager, N., Lyman, M., Tick, L. J., Borst, F., & Su, Y. (1989, November). 


>> Tokens are: 
[[, 88, ], Nhàn, ,, N., T., ,, Sager, ,, N., ,, Lyman, ,, M., ,, Tick, ,, L., J., ,, Borst, ,, F., ,, &, Su, ,, Y., (, 1989, ,, November, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('88', 'NUM'), (']', 'PUNCT'), ('Nhàn', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), ('T.', 'PROPN'), (',', 'PUNCT'), ('Sager', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), (',', 'PUNCT'), ('Lyman', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), (',', 'PUNCT'), ('Tick', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('J.', 'PROPN'), (',', 'PUNCT'), ('Borst', 'PROPN'), (',', 'PUNCT'), ('F.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Su', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('(', 'PUNCT'), ('1989', 'NUM'), (',', 'PUNCT'), ('November', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('88', 'nummod'), (']', 'punct'), ('Nhàn', 'ROOT'), (',', 'punct'), ('N.', 'compound'), ('T.', 'npadvmod'), (',', 'punct'), ('Sager', 'conj'), (',', 'punct'), ('N.', 'conj'), (',', 'punct'), ('Lyman', 'conj'), (',', 'punct'), ('M.', 'conj'), (',', 'punct'), ('Tick', 'conj'), (',', 'punct'), ('L.', 'compound'), ('J.', 'conj'), (',', 'punct'), ('Borst', 'conj'), (',', 'punct'), ('F.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Su', 'conj'), (',', 'punct'), ('Y.', 'conj'), ('(', 'punct'), ('1989', 'appos'), (',', 'punct'), ('November', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 88], [88, ]], [], Nhàn], [Nhàn, ,], [,, N.], [N., T.], [T., ,], [,, Sager], [Sager, ,], [,, N.], [N., ,], [,, Lyman], [Lyman, ,], [,, M.], [M., ,], [,, Tick], [Tick, ,], [,, L.], [L., J.], [J., ,], [,, Borst], [Borst, ,], [,, F.], [F., ,], [,, &], [&, Su], [Su, ,], [,, Y.], [Y., (], [(, 1989], [1989, ,], [,, November], [November, )], [), .]]

>> Trigrams: 
[[[, 88, ]], [88, ], Nhàn], [], Nhàn, ,], [Nhàn, ,, N.], [,, N., T.], [N., T., ,], [T., ,, Sager], [,, Sager, ,], [Sager, ,, N.], [,, N., ,], [N., ,, Lyman], [,, Lyman, ,], [Lyman, ,, M.], [,, M., ,], [M., ,, Tick], [,, Tick, ,], [Tick, ,, L.], [,, L., J.], [L., J., ,], [J., ,, Borst], [,, Borst, ,], [Borst, ,, F.], [,, F., ,], [F., ,, &], [,, &, Su], [&, Su, ,], [Su, ,, Y.], [,, Y., (], [Y., (, 1989], [(, 1989, ,], [1989, ,, November], [,, November, )], [November, ), .]]

>> Noun Phrases are: 
[[88] Nhàn]

>> Named Entities are: 
[('88', 'CARDINAL'), ('N. T.', 'PERSON'), ('N.', 'ORG'), ('Lyman', 'ORG'), ('L. J.', 'PERSON'), ('1989', 'DATE'), ('November', 'DATE')] 

------------------- Sentence 2 -------------------

A   


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 825 =================================

Medical Language Processor for Two Indo-European Languages. In Proceedings.  

------------------- Sentence 1 -------------------

Medical Language Processor for Two Indo-European Languages. 


>> Tokens are: 
[Medical, Language, Processor, Indo, -, European, Languages, .] 

>> PoS Tags are: 
[('Medical', 'PROPN'), ('Language', 'PROPN'), ('Processor', 'PROPN'), ('Indo', 'PROPN'), ('-', 'PUNCT'), ('European', 'PROPN'), ('Languages', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Medical', 'compound'), ('Language', 'compound'), ('Processor', 'ROOT'), ('Indo', 'compound'), ('-', 'punct'), ('European', 'compound'), ('Languages', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Medical, Language], [Language, Processor], [Processor, Indo], [Indo, -], [-, European], [European, Languages], [Languages, .]]

>> Trigrams: 
[[Medical, Language, Processor], [Language, Processor, Indo], [Processor, Indo, -], [Indo, -, European], [-, European, Languages], [European, Languages, .]]

>> Noun Phrases are: 
[Medical Language Processor, Two Indo-European Languages]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Proceedings.   


>> Tokens are: 
[Proceedings, .,  ] 

>> PoS Tags are: 
[('Proceedings', 'PROPN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('.', 'punct'), (' ', 'pobj')]

>> Bigrams: 
[[Proceedings, .], [.,  ]]

>> Trigrams: 
[[Proceedings, .,  ]]

>> Noun Phrases are: 
[Proceedings]

>> Named Entities are: 
[('Proceedings', 'GPE')] 


================================ Paragraph 826 =================================

Symposium on Computer Applications in Medical Care (pp. 554-558). American Medical  

------------------- Sentence 1 -------------------

Symposium on Computer Applications in Medical Care (pp. 


>> Tokens are: 
[Symposium, Computer, Applications, Medical, Care, (, pp, .] 

>> PoS Tags are: 
[('Symposium', 'NOUN'), ('Computer', 'PROPN'), ('Applications', 'PROPN'), ('Medical', 'PROPN'), ('Care', 'PROPN'), ('(', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Symposium', 'ROOT'), ('Computer', 'compound'), ('Applications', 'pobj'), ('Medical', 'compound'), ('Care', 'pobj'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Symposium, Computer], [Computer, Applications], [Applications, Medical], [Medical, Care], [Care, (], [(, pp], [pp, .]]

>> Trigrams: 
[[Symposium, Computer, Applications], [Computer, Applications, Medical], [Applications, Medical, Care], [Medical, Care, (], [Care, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[Symposium, Computer Applications, Medical Care]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

554-558). 


>> Tokens are: 
[554, -, 558, ), .] 

>> PoS Tags are: 
[('554', 'NUM'), ('-', 'SYM'), ('558', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('554', 'ROOT'), ('-', 'punct'), ('558', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[554, -], [-, 558], [558, )], [), .]]

>> Trigrams: 
[[554, -, 558], [-, 558, )], [558, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('554', 'CARDINAL')] 

------------------- Sentence 3 -------------------

American Medical   


>> Tokens are: 
[American, Medical,  ] 

>> PoS Tags are: 
[('American', 'PROPN'), ('Medical', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('American', 'compound'), ('Medical', 'compound'), (' ', 'ROOT')]

>> Bigrams: 
[[American, Medical], [Medical,  ]]

>> Trigrams: 
[[American, Medical,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('American Medical', 'ORG')] 


================================ Paragraph 827 =================================

Informatics Association.  

------------------- Sentence 1 -------------------

Informatics Association. 


>> Tokens are: 
[Informatics, Association, .] 

>> PoS Tags are: 
[('Informatics', 'PROPN'), ('Association', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Informatics', 'compound'), ('Association', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Informatics, Association], [Association, .]]

>> Trigrams: 
[[Informatics, Association, .]]

>> Noun Phrases are: 
[Informatics Association]

>> Named Entities are: 
[('Informatics Association', 'ORG')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 828 =================================

[89] Sager, N., Lyman, M., Tick, L. J., Borst, F., Nhan, N. T., Revillard, C., ... & Scherrer, J.  

------------------- Sentence 1 -------------------

[89] Sager, N., Lyman, M., Tick, L. J., Borst, F., Nhan, N. T., Revillard, C., ... & Scherrer, J.   


>> Tokens are: 
[[, 89, ], Sager, ,, N., ,, Lyman, ,, M., ,, Tick, ,, L., J., ,, Borst, ,, F., ,, Nhan, ,, N., T., ,, Revillard, ,, C., ,, ..., &, Scherrer, ,, J.,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('89', 'NUM'), (']', 'PUNCT'), ('Sager', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), (',', 'PUNCT'), ('Lyman', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), (',', 'PUNCT'), ('Tick', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('J.', 'PROPN'), (',', 'PUNCT'), ('Borst', 'PROPN'), (',', 'PUNCT'), ('F.', 'PROPN'), (',', 'PUNCT'), ('Nhan', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), ('T.', 'PROPN'), (',', 'PUNCT'), ('Revillard', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), (',', 'PUNCT'), ('...', 'PUNCT'), ('&', 'CCONJ'), ('Scherrer', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('89', 'nummod'), (']', 'punct'), ('Sager', 'ROOT'), (',', 'punct'), ('N.', 'appos'), (',', 'punct'), ('Lyman', 'conj'), (',', 'punct'), ('M.', 'conj'), (',', 'punct'), ('Tick', 'conj'), (',', 'punct'), ('L.', 'compound'), ('J.', 'conj'), (',', 'punct'), ('Borst', 'conj'), (',', 'punct'), ('F.', 'appos'), (',', 'punct'), ('Nhan', 'conj'), (',', 'punct'), ('N.', 'compound'), ('T.', 'conj'), (',', 'punct'), ('Revillard', 'conj'), (',', 'punct'), ('C.', 'conj'), (',', 'punct'), ('...', 'punct'), ('&', 'cc'), ('Scherrer', 'conj'), (',', 'punct'), ('J.', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[[, 89], [89, ]], [], Sager], [Sager, ,], [,, N.], [N., ,], [,, Lyman], [Lyman, ,], [,, M.], [M., ,], [,, Tick], [Tick, ,], [,, L.], [L., J.], [J., ,], [,, Borst], [Borst, ,], [,, F.], [F., ,], [,, Nhan], [Nhan, ,], [,, N.], [N., T.], [T., ,], [,, Revillard], [Revillard, ,], [,, C.], [C., ,], [,, ...], [..., &], [&, Scherrer], [Scherrer, ,], [,, J.], [J.,  ]]

>> Trigrams: 
[[[, 89, ]], [89, ], Sager], [], Sager, ,], [Sager, ,, N.], [,, N., ,], [N., ,, Lyman], [,, Lyman, ,], [Lyman, ,, M.], [,, M., ,], [M., ,, Tick], [,, Tick, ,], [Tick, ,, L.], [,, L., J.], [L., J., ,], [J., ,, Borst], [,, Borst, ,], [Borst, ,, F.], [,, F., ,], [F., ,, Nhan], [,, Nhan, ,], [Nhan, ,, N.], [,, N., T.], [N., T., ,], [T., ,, Revillard], [,, Revillard, ,], [Revillard, ,, C.], [,, C., ,], [C., ,, ...], [,, ..., &], [..., &, Scherrer], [&, Scherrer, ,], [Scherrer, ,, J.], [,, J.,  ]]

>> Noun Phrases are: 
[[89] Sager, N., Lyman, M., Tick, L. J., Borst, F., Nhan, N. T., Revillard, C., Scherrer, J.]

>> Named Entities are: 
[('89', 'CARDINAL'), ('N.', 'ORG'), ('Lyman', 'ORG'), ('L. J.', 'PERSON'), ('N. T.', 'PERSON'), ('Revillard', 'PERSON'), ('& Scherrer', 'PERSON')] 


================================ Paragraph 829 =================================

R. (1989). Adapting a medical language processor from English to French. Medinfo, 89, 795- 

------------------- Sentence 1 -------------------

R. (1989). 


>> Tokens are: 
[R., (, 1989, ), .] 

>> PoS Tags are: 
[('R.', 'PROPN'), ('(', 'PUNCT'), ('1989', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('R.', 'ROOT'), ('(', 'punct'), ('1989', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[R., (], [(, 1989], [1989, )], [), .]]

>> Trigrams: 
[[R., (, 1989], [(, 1989, )], [1989, ), .]]

>> Noun Phrases are: 
[R.]

>> Named Entities are: 
[('R.', 'NORP'), ('1989', 'DATE')] 

------------------- Sentence 2 -------------------

Adapting a medical language processor from English to French. 


>> Tokens are: 
[Adapting, medical, language, processor, English, French, .] 

>> PoS Tags are: 
[('Adapting', 'VERB'), ('medical', 'ADJ'), ('language', 'NOUN'), ('processor', 'NOUN'), ('English', 'PROPN'), ('French', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Adapting', 'ROOT'), ('medical', 'amod'), ('language', 'compound'), ('processor', 'dobj'), ('English', 'pobj'), ('French', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Adapting, medical], [medical, language], [language, processor], [processor, English], [English, French], [French, .]]

>> Trigrams: 
[[Adapting, medical, language], [medical, language, processor], [language, processor, English], [processor, English, French], [English, French, .]]

>> Noun Phrases are: 
[a medical language processor, English, French]

>> Named Entities are: 
[('English', 'LANGUAGE'), ('French', 'NORP')] 

------------------- Sentence 3 -------------------

Medinfo, 89, 795- 


>> Tokens are: 
[Medinfo, ,, 89, ,, 795-] 

>> PoS Tags are: 
[('Medinfo', 'PROPN'), (',', 'PUNCT'), ('89', 'NUM'), (',', 'PUNCT'), ('795-', 'NUM')] 

>> Dependency Tags are: 
[('Medinfo', 'ROOT'), (',', 'punct'), ('89', 'appos'), (',', 'punct'), ('795-', 'appos')]

>> Bigrams: 
[[Medinfo, ,], [,, 89], [89, ,], [,, 795-]]

>> Trigrams: 
[[Medinfo, ,, 89], [,, 89, ,], [89, ,, 795-]]

>> Noun Phrases are: 
[Medinfo]

>> Named Entities are: 
[('89', 'DATE')] 


================================ Paragraph 830 =================================

799.  

------------------- Sentence 1 -------------------

799. 


>> Tokens are: 
[799, .] 

>> PoS Tags are: 
[('799', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('799', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[799, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('799', 'CARDINAL')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 831 =================================

[90] Borst, F., Sager, N., Nhàn, N. T., Su, Y., Lyman, M., Tick, L. J., ... & Scherrer, J. R.  

------------------- Sentence 1 -------------------

[90] 


>> Tokens are: 
[[, 90, ]] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('90', 'NUM'), (']', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('90', 'ROOT'), (']', 'punct')]

>> Bigrams: 
[[[, 90], [90, ]]]

>> Trigrams: 
[[[, 90, ]]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('90', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Borst, F., Sager, N., Nhàn, N. T., Su, Y., Lyman, M., Tick, L. J., ... & Scherrer, J. R.   


>> Tokens are: 
[Borst, ,, F., ,, Sager, ,, N., ,, Nhàn, ,, N., T., ,, Su, ,, Y., ,, Lyman, ,, M., ,, Tick, ,, L., J., ,, ..., &, Scherrer, ,, J., R.,  ] 

>> PoS Tags are: 
[('Borst', 'ADV'), (',', 'PUNCT'), ('F.', 'PROPN'), (',', 'PUNCT'), ('Sager', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), (',', 'PUNCT'), ('Nhàn', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), ('T.', 'PROPN'), (',', 'PUNCT'), ('Su', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), (',', 'PUNCT'), ('Lyman', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), (',', 'PUNCT'), ('Tick', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('J.', 'PROPN'), (',', 'PUNCT'), ('...', 'PUNCT'), ('&', 'CCONJ'), ('Scherrer', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('R.', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Borst', 'ROOT'), (',', 'punct'), ('F.', 'npadvmod'), (',', 'punct'), ('Sager', 'conj'), (',', 'punct'), ('N.', 'conj'), (',', 'punct'), ('Nhàn', 'conj'), (',', 'punct'), ('N.', 'compound'), ('T.', 'conj'), (',', 'punct'), ('Su', 'conj'), (',', 'punct'), ('Y.', 'conj'), (',', 'punct'), ('Lyman', 'conj'), (',', 'punct'), ('M.', 'conj'), (',', 'punct'), ('Tick', 'conj'), (',', 'punct'), ('L.', 'compound'), ('J.', 'conj'), (',', 'punct'), ('...', 'punct'), ('&', 'cc'), ('Scherrer', 'conj'), (',', 'punct'), ('J.', 'compound'), ('R.', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[Borst, ,], [,, F.], [F., ,], [,, Sager], [Sager, ,], [,, N.], [N., ,], [,, Nhàn], [Nhàn, ,], [,, N.], [N., T.], [T., ,], [,, Su], [Su, ,], [,, Y.], [Y., ,], [,, Lyman], [Lyman, ,], [,, M.], [M., ,], [,, Tick], [Tick, ,], [,, L.], [L., J.], [J., ,], [,, ...], [..., &], [&, Scherrer], [Scherrer, ,], [,, J.], [J., R.], [R.,  ]]

>> Trigrams: 
[[Borst, ,, F.], [,, F., ,], [F., ,, Sager], [,, Sager, ,], [Sager, ,, N.], [,, N., ,], [N., ,, Nhàn], [,, Nhàn, ,], [Nhàn, ,, N.], [,, N., T.], [N., T., ,], [T., ,, Su], [,, Su, ,], [Su, ,, Y.], [,, Y., ,], [Y., ,, Lyman], [,, Lyman, ,], [Lyman, ,, M.], [,, M., ,], [M., ,, Tick], [,, Tick, ,], [Tick, ,, L.], [,, L., J.], [L., J., ,], [J., ,, ...], [,, ..., &], [..., &, Scherrer], [&, Scherrer, ,], [Scherrer, ,, J.], [,, J., R.], [J., R.,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('Nhàn', 'ORG'), ('N. T.', 'PERSON'), ('Y.', 'ORG'), ('Lyman', 'ORG'), ('L. J.', 'PERSON'), ('& Scherrer', 'ORG'), ('J. R.  ', 'PERSON')] 


================================ Paragraph 832 =================================

(1989). Analyse automatique de comptes rendus d'hospitalisation. In Degoulet P, Stephan JC,  

------------------- Sentence 1 -------------------

(1989). 


>> Tokens are: 
[(, 1989, ), .] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('1989', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('1989', 'ROOT'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[(, 1989], [1989, )], [), .]]

>> Trigrams: 
[[(, 1989, )], [1989, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1989', 'DATE')] 

------------------- Sentence 2 -------------------

Analyse automatique de comptes rendus d'hospitalisation. 


>> Tokens are: 
[Analyse, automatique, de, comptes, rendus, d'hospitalisation, .] 

>> PoS Tags are: 
[('Analyse', 'NOUN'), ('automatique', 'PROPN'), ('de', 'X'), ('comptes', 'VERB'), ('rendus', 'ADJ'), ("d'hospitalisation", 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Analyse', 'compound'), ('automatique', 'nsubj'), ('de', 'prep'), ('comptes', 'ROOT'), ('rendus', 'amod'), ("d'hospitalisation", 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Analyse, automatique], [automatique, de], [de, comptes], [comptes, rendus], [rendus, d'hospitalisation], [d'hospitalisation, .]]

>> Trigrams: 
[[Analyse, automatique, de], [automatique, de, comptes], [de, comptes, rendus], [comptes, rendus, d'hospitalisation], [rendus, d'hospitalisation, .]]

>> Noun Phrases are: 
[Analyse automatique, rendus d'hospitalisation]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

In Degoulet P, Stephan JC, 


>> Tokens are: 
[Degoulet, P, ,, Stephan, JC, ,] 

>> PoS Tags are: 
[('Degoulet', 'PROPN'), ('P', 'PROPN'), (',', 'PUNCT'), ('Stephan', 'PROPN'), ('JC', 'PROPN'), (',', 'PUNCT')] 

>> Dependency Tags are: 
[('Degoulet', 'compound'), ('P', 'pobj'), (',', 'punct'), ('Stephan', 'compound'), ('JC', 'conj'), (',', 'punct')]

>> Bigrams: 
[[Degoulet, P], [P, ,], [,, Stephan], [Stephan, JC], [JC, ,]]

>> Trigrams: 
[[Degoulet, P, ,], [P, ,, Stephan], [,, Stephan, JC], [Stephan, JC, ,]]

>> Noun Phrases are: 
[Degoulet P, Stephan JC]

>> Named Entities are: 
[('Degoulet P', 'GPE'), ('Stephan JC', 'PERSON')] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 833 =================================

Venot A, Yvon PJ, rédacteurs. Informatique et Santé, Informatique et Gestion des Unités de  

------------------- Sentence 1 -------------------

Venot A, Yvon PJ, rédacteurs. 


>> Tokens are: 
[Venot, ,, Yvon, PJ, ,, rédacteurs, .] 

>> PoS Tags are: 
[('Venot', 'PROPN'), (',', 'PUNCT'), ('Yvon', 'PROPN'), ('PJ', 'PROPN'), (',', 'PUNCT'), ('rédacteurs', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Venot', 'compound'), (',', 'punct'), ('Yvon', 'compound'), ('PJ', 'appos'), (',', 'punct'), ('rédacteurs', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Venot, ,], [,, Yvon], [Yvon, PJ], [PJ, ,], [,, rédacteurs], [rédacteurs, .]]

>> Trigrams: 
[[Venot, ,, Yvon], [,, Yvon, PJ], [Yvon, PJ, ,], [PJ, ,, rédacteurs], [,, rédacteurs, .]]

>> Noun Phrases are: 
[Venot A, Yvon PJ]

>> Named Entities are: 
[('Yvon PJ', 'PERSON')] 

------------------- Sentence 2 -------------------

Informatique et Santé, Informatique et Gestion des Unités de   


>> Tokens are: 
[Informatique, et, Santé, ,, Informatique, et, Gestion, des, Unités, de,  ] 

>> PoS Tags are: 
[('Informatique', 'PROPN'), ('et', 'NOUN'), ('Santé', 'PROPN'), (',', 'PUNCT'), ('Informatique', 'PROPN'), ('et', 'NOUN'), ('Gestion', 'PROPN'), ('des', 'X'), ('Unités', 'PROPN'), ('de', 'ADP'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Informatique', 'nmod'), ('et', 'compound'), ('Santé', 'nmod'), (',', 'punct'), ('Informatique', 'nmod'), ('et', 'nmod'), ('Gestion', 'nmod'), ('des', 'nmod'), ('Unités', 'nmod'), ('de', 'nmod'), (' ', 'ROOT')]

>> Bigrams: 
[[Informatique, et], [et, Santé], [Santé, ,], [,, Informatique], [Informatique, et], [et, Gestion], [Gestion, des], [des, Unités], [Unités, de], [de,  ]]

>> Trigrams: 
[[Informatique, et, Santé], [et, Santé, ,], [Santé, ,, Informatique], [,, Informatique, et], [Informatique, et, Gestion], [et, Gestion, des], [Gestion, des, Unités], [des, Unités, de], [Unités, de,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('Santé', 'PERSON')] 


================================ Paragraph 834 =================================

Soins, Comptes Rendus du Colloque AIM-IF, Paris (pp. 246-56). [5]  

------------------- Sentence 1 -------------------

Soins, Comptes Rendus du Colloque AIM-IF, Paris (pp. 


>> Tokens are: 
[Soins, ,, Comptes, Rendus, du, Colloque, AIM, -, ,, Paris, (, pp, .] 

>> PoS Tags are: 
[('Soins', 'NOUN'), (',', 'PUNCT'), ('Comptes', 'PROPN'), ('Rendus', 'PROPN'), ('du', 'ADP'), ('Colloque', 'PROPN'), ('AIM', 'PROPN'), ('-', 'PUNCT'), (',', 'PUNCT'), ('Paris', 'PROPN'), ('(', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Soins', 'ROOT'), (',', 'punct'), ('Comptes', 'compound'), ('Rendus', 'compound'), ('du', 'nmod'), ('Colloque', 'compound'), ('AIM', 'compound'), ('-', 'punct'), (',', 'punct'), ('Paris', 'appos'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Soins, ,], [,, Comptes], [Comptes, Rendus], [Rendus, du], [du, Colloque], [Colloque, AIM], [AIM, -], [-, ,], [,, Paris], [Paris, (], [(, pp], [pp, .]]

>> Trigrams: 
[[Soins, ,, Comptes], [,, Comptes, Rendus], [Comptes, Rendus, du], [Rendus, du, Colloque], [du, Colloque, AIM], [Colloque, AIM, -], [AIM, -, ,], [-, ,, Paris], [,, Paris, (], [Paris, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[Soins, Comptes Rendus du Colloque AIM-IF, Paris, pp]

>> Named Entities are: 
[('Colloque AIM-IF', 'ORG'), ('Paris', 'GPE')] 

------------------- Sentence 2 -------------------

246-56). 


>> Tokens are: 
[246, -, 56, ), .] 

>> PoS Tags are: 
[('246', 'NUM'), ('-', 'SYM'), ('56', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('246', 'ROOT'), ('-', 'punct'), ('56', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[246, -], [-, 56], [56, )], [), .]]

>> Trigrams: 
[[246, -, 56], [-, 56, )], [56, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

[5] 


>> Tokens are: 
[[, 5, ]] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('5', 'X'), (']', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('5', 'ROOT'), (']', 'punct')]

>> Bigrams: 
[[[, 5], [5, ]]]

>> Trigrams: 
[[[, 5, ]]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('5', 'CARDINAL')] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 835 =================================

[91] Baud, R. H., Rassinoux, A. M., & Scherrer, J. R. (1991). Knowledge representation of  

------------------- Sentence 1 -------------------

[91] Baud, R. H., Rassinoux, A. M., & Scherrer, J. R. (1991). 


>> Tokens are: 
[[, 91, ], Baud, ,, R., H., ,, Rassinoux, ,, A., M., ,, &, Scherrer, ,, J., R., (, 1991, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('91', 'NUM'), (']', 'PUNCT'), ('Baud', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('H.', 'PROPN'), (',', 'PUNCT'), ('Rassinoux', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('M.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Scherrer', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('R.', 'PROPN'), ('(', 'PUNCT'), ('1991', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('91', 'nmod'), (']', 'punct'), ('Baud', 'ROOT'), (',', 'punct'), ('R.', 'compound'), ('H.', 'appos'), (',', 'punct'), ('Rassinoux', 'conj'), (',', 'punct'), ('A.', 'compound'), ('M.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Scherrer', 'conj'), (',', 'punct'), ('J.', 'compound'), ('R.', 'conj'), ('(', 'punct'), ('1991', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 91], [91, ]], [], Baud], [Baud, ,], [,, R.], [R., H.], [H., ,], [,, Rassinoux], [Rassinoux, ,], [,, A.], [A., M.], [M., ,], [,, &], [&, Scherrer], [Scherrer, ,], [,, J.], [J., R.], [R., (], [(, 1991], [1991, )], [), .]]

>> Trigrams: 
[[[, 91, ]], [91, ], Baud], [], Baud, ,], [Baud, ,, R.], [,, R., H.], [R., H., ,], [H., ,, Rassinoux], [,, Rassinoux, ,], [Rassinoux, ,, A.], [,, A., M.], [A., M., ,], [M., ,, &], [,, &, Scherrer], [&, Scherrer, ,], [Scherrer, ,, J.], [,, J., R.], [J., R., (], [R., (, 1991], [(, 1991, )], [1991, ), .]]

>> Noun Phrases are: 
[[91] Baud, R. H., Rassinoux, A. M., Scherrer, J. R.]

>> Named Entities are: 
[('91', 'CARDINAL'), ('R. H.', 'PERSON'), ('& Scherrer', 'ORG'), ('J. R.', 'PERSON'), ('1991', 'DATE')] 

------------------- Sentence 2 -------------------

Knowledge representation of   


>> Tokens are: 
[Knowledge, representation,  ] 

>> PoS Tags are: 
[('Knowledge', 'NOUN'), ('representation', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Knowledge', 'compound'), ('representation', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[Knowledge, representation], [representation,  ]]

>> Trigrams: 
[[Knowledge, representation,  ]]

>> Noun Phrases are: 
[Knowledge representation]

>> Named Entities are: 
[] 


================================ Paragraph 836 =================================

discharge summaries. In AIME 91 (pp. 173-182). Springer Berlin Heidelberg.  

------------------- Sentence 1 -------------------

discharge summaries. 


>> Tokens are: 
[discharge, summaries, .] 

>> PoS Tags are: 
[('discharge', 'NOUN'), ('summaries', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('discharge', 'compound'), ('summaries', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[discharge, summaries], [summaries, .]]

>> Trigrams: 
[[discharge, summaries, .]]

>> Noun Phrases are: 
[discharge summaries]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In AIME 91 (pp. 


>> Tokens are: 
[AIME, 91, (, pp, .] 

>> PoS Tags are: 
[('AIME', 'NOUN'), ('91', 'NUM'), ('(', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('AIME', 'pobj'), ('91', 'nummod'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[AIME, 91], [91, (], [(, pp], [pp, .]]

>> Trigrams: 
[[AIME, 91, (], [91, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[AIME]

>> Named Entities are: 
[('AIME 91', 'DATE')] 

------------------- Sentence 3 -------------------

173-182). 


>> Tokens are: 
[173, -, 182, ), .] 

>> PoS Tags are: 
[('173', 'NUM'), ('-', 'SYM'), ('182', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('173', 'ROOT'), ('-', 'punct'), ('182', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[173, -], [-, 182], [182, )], [), .]]

>> Trigrams: 
[[173, -, 182], [-, 182, )], [182, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('173', 'CARDINAL')] 

------------------- Sentence 4 -------------------

Springer Berlin Heidelberg. 


>> Tokens are: 
[Springer, Berlin, Heidelberg, .] 

>> PoS Tags are: 
[('Springer', 'PROPN'), ('Berlin', 'PROPN'), ('Heidelberg', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Springer', 'compound'), ('Berlin', 'compound'), ('Heidelberg', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Springer, Berlin], [Berlin, Heidelberg], [Heidelberg, .]]

>> Trigrams: 
[[Springer, Berlin, Heidelberg], [Berlin, Heidelberg, .]]

>> Noun Phrases are: 
[Springer Berlin Heidelberg]

>> Named Entities are: 
[('Berlin Heidelberg', 'PERSON')] 

------------------- Sentence 5 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 837 =================================

[92] Baud, R. H., Alpay, L., & Lovis, C. (1994). Let’s Meet the Users with Natural Language  

------------------- Sentence 1 -------------------

[92] Baud, R. H., Alpay, L., & Lovis, C. (1994). 


>> Tokens are: 
[[, 92, ], Baud, ,, R., H., ,, Alpay, ,, L., ,, &, Lovis, ,, C., (, 1994, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('92', 'NUM'), (']', 'PUNCT'), ('Baud', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('H.', 'PROPN'), (',', 'PUNCT'), ('Alpay', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Lovis', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), ('(', 'PUNCT'), ('1994', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('92', 'nummod'), (']', 'punct'), ('Baud', 'ROOT'), (',', 'punct'), ('R.', 'compound'), ('H.', 'appos'), (',', 'punct'), ('Alpay', 'conj'), (',', 'punct'), ('L.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Lovis', 'conj'), (',', 'punct'), ('C.', 'conj'), ('(', 'punct'), ('1994', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 92], [92, ]], [], Baud], [Baud, ,], [,, R.], [R., H.], [H., ,], [,, Alpay], [Alpay, ,], [,, L.], [L., ,], [,, &], [&, Lovis], [Lovis, ,], [,, C.], [C., (], [(, 1994], [1994, )], [), .]]

>> Trigrams: 
[[[, 92, ]], [92, ], Baud], [], Baud, ,], [Baud, ,, R.], [,, R., H.], [R., H., ,], [H., ,, Alpay], [,, Alpay, ,], [Alpay, ,, L.], [,, L., ,], [L., ,, &], [,, &, Lovis], [&, Lovis, ,], [Lovis, ,, C.], [,, C., (], [C., (, 1994], [(, 1994, )], [1994, ), .]]

>> Noun Phrases are: 
[[92] Baud, R. H., Alpay, L., Lovis, C.]

>> Named Entities are: 
[('92', 'CARDINAL'), ('R. H.', 'PERSON'), ('Alpay', 'NORP')] 

------------------- Sentence 2 -------------------

Let’s Meet the Users with Natural Language   


>> Tokens are: 
[Let, Meet, Users, Natural, Language,  ] 

>> PoS Tags are: 
[('Let', 'VERB'), ('Meet', 'VERB'), ('Users', 'PROPN'), ('Natural', 'PROPN'), ('Language', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Let', 'ROOT'), ('Meet', 'ccomp'), ('Users', 'dobj'), ('Natural', 'compound'), ('Language', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Let, Meet], [Meet, Users], [Users, Natural], [Natural, Language], [Language,  ]]

>> Trigrams: 
[[Let, Meet, Users], [Meet, Users, Natural], [Users, Natural, Language], [Natural, Language,  ]]

>> Noun Phrases are: 
[’s, the Users, Natural Language]

>> Named Entities are: 
[] 


================================ Paragraph 838 =================================

Understanding. Knowledge and Decisions in Health Telematics: The Next Decade, 12, 103. 

------------------- Sentence 1 -------------------

Understanding. 


>> Tokens are: 
[Understanding, .] 

>> PoS Tags are: 
[('Understanding', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Understanding', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Understanding, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Understanding]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Knowledge and Decisions in Health Telematics: 


>> Tokens are: 
[Knowledge, Decisions, Health, Telematics, :] 

>> PoS Tags are: 
[('Knowledge', 'PROPN'), ('Decisions', 'PROPN'), ('Health', 'PROPN'), ('Telematics', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Knowledge', 'ROOT'), ('Decisions', 'conj'), ('Health', 'compound'), ('Telematics', 'pobj'), (':', 'punct')]

>> Bigrams: 
[[Knowledge, Decisions], [Decisions, Health], [Health, Telematics], [Telematics, :]]

>> Trigrams: 
[[Knowledge, Decisions, Health], [Decisions, Health, Telematics], [Health, Telematics, :]]

>> Noun Phrases are: 
[Knowledge, Decisions, Health Telematics]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

The Next Decade, 12, 103. 


>> Tokens are: 
[Decade, ,, 12, ,, 103, .] 

>> PoS Tags are: 
[('Decade', 'PROPN'), (',', 'PUNCT'), ('12', 'NUM'), (',', 'PUNCT'), ('103', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Decade', 'ROOT'), (',', 'punct'), ('12', 'appos'), (',', 'punct'), ('103', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[Decade, ,], [,, 12], [12, ,], [,, 103], [103, .]]

>> Trigrams: 
[[Decade, ,, 12], [,, 12, ,], [12, ,, 103], [,, 103, .]]

>> Noun Phrases are: 
[The Next Decade]

>> Named Entities are: 
[('12', 'DATE'), ('103', 'CARDINAL')] 


================================ Paragraph 839 =================================

[93] Rassinoux, A. M., Baud, R. H., & Scherrer, J. R. (1992). Conceptual graphs model  

------------------- Sentence 1 -------------------

[93] Rassinoux, A. M., Baud, R. H., & Scherrer, J. R. (1992). 


>> Tokens are: 
[[, 93, ], Rassinoux, ,, A., M., ,, Baud, ,, R., H., ,, &, Scherrer, ,, J., R., (, 1992, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('93', 'NUM'), (']', 'PUNCT'), ('Rassinoux', 'VERB'), (',', 'PUNCT'), ('A.', 'PROPN'), ('M.', 'PROPN'), (',', 'PUNCT'), ('Baud', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('H.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Scherrer', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('R.', 'PROPN'), ('(', 'PUNCT'), ('1992', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('93', 'dep'), (']', 'punct'), ('Rassinoux', 'ROOT'), (',', 'punct'), ('A.', 'compound'), ('M.', 'dep'), (',', 'punct'), ('Baud', 'conj'), (',', 'punct'), ('R.', 'compound'), ('H.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Scherrer', 'conj'), (',', 'punct'), ('J.', 'compound'), ('R.', 'conj'), ('(', 'punct'), ('1992', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 93], [93, ]], [], Rassinoux], [Rassinoux, ,], [,, A.], [A., M.], [M., ,], [,, Baud], [Baud, ,], [,, R.], [R., H.], [H., ,], [,, &], [&, Scherrer], [Scherrer, ,], [,, J.], [J., R.], [R., (], [(, 1992], [1992, )], [), .]]

>> Trigrams: 
[[[, 93, ]], [93, ], Rassinoux], [], Rassinoux, ,], [Rassinoux, ,, A.], [,, A., M.], [A., M., ,], [M., ,, Baud], [,, Baud, ,], [Baud, ,, R.], [,, R., H.], [R., H., ,], [H., ,, &], [,, &, Scherrer], [&, Scherrer, ,], [Scherrer, ,, J.], [,, J., R.], [J., R., (], [R., (, 1992], [(, 1992, )], [1992, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('93', 'CARDINAL'), ('Baud', 'PERSON'), ('R. H.', 'PERSON'), ('J. R.', 'PERSON'), ('1992', 'DATE')] 

------------------- Sentence 2 -------------------

Conceptual graphs model   


>> Tokens are: 
[Conceptual, graphs, model,  ] 

>> PoS Tags are: 
[('Conceptual', 'ADJ'), ('graphs', 'NOUN'), ('model', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Conceptual', 'amod'), ('graphs', 'nsubj'), ('model', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[Conceptual, graphs], [graphs, model], [model,  ]]

>> Trigrams: 
[[Conceptual, graphs, model], [graphs, model,  ]]

>> Noun Phrases are: 
[Conceptual graphs]

>> Named Entities are: 
[] 


================================ Paragraph 840 =================================

extension for knowledge representation of medical texts. MEDINFO, 92, 1368-1374.  

------------------- Sentence 1 -------------------

extension for knowledge representation of medical texts. 


>> Tokens are: 
[extension, knowledge, representation, medical, texts, .] 

>> PoS Tags are: 
[('extension', 'NOUN'), ('knowledge', 'NOUN'), ('representation', 'NOUN'), ('medical', 'ADJ'), ('texts', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('extension', 'ROOT'), ('knowledge', 'compound'), ('representation', 'pobj'), ('medical', 'amod'), ('texts', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[extension, knowledge], [knowledge, representation], [representation, medical], [medical, texts], [texts, .]]

>> Trigrams: 
[[extension, knowledge, representation], [knowledge, representation, medical], [representation, medical, texts], [medical, texts, .]]

>> Noun Phrases are: 
[extension, knowledge representation, medical texts]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

MEDINFO, 92, 1368-1374. 


>> Tokens are: 
[MEDINFO, ,, 92, ,, 1368, -, 1374, .] 

>> PoS Tags are: 
[('MEDINFO', 'PROPN'), (',', 'PUNCT'), ('92', 'NUM'), (',', 'PUNCT'), ('1368', 'NUM'), ('-', 'SYM'), ('1374', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('MEDINFO', 'ROOT'), (',', 'punct'), ('92', 'appos'), (',', 'punct'), ('1368', 'appos'), ('-', 'punct'), ('1374', 'prep'), ('.', 'punct')]

>> Bigrams: 
[[MEDINFO, ,], [,, 92], [92, ,], [,, 1368], [1368, -], [-, 1374], [1374, .]]

>> Trigrams: 
[[MEDINFO, ,, 92], [,, 92, ,], [92, ,, 1368], [,, 1368, -], [1368, -, 1374], [-, 1374, .]]

>> Noun Phrases are: 
[MEDINFO]

>> Named Entities are: 
[('92', 'DATE'), ('1368-1374', 'DATE')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 841 =================================

[94] Morel-Guillemaz, A. M., Baud, R. H., & Scherrer, J. R. (1990). Proximity Processing of  

------------------- Sentence 1 -------------------

[94] Morel-Guillemaz, A. M., Baud, R. H., & Scherrer, J. R. (1990). 


>> Tokens are: 
[[, 94, ], Morel, -, Guillemaz, ,, A., M., ,, Baud, ,, R., H., ,, &, Scherrer, ,, J., R., (, 1990, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('94', 'NUM'), (']', 'PUNCT'), ('Morel', 'PROPN'), ('-', 'PUNCT'), ('Guillemaz', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('M.', 'PROPN'), (',', 'PUNCT'), ('Baud', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('H.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Scherrer', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('R.', 'PROPN'), ('(', 'PUNCT'), ('1990', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('94', 'nummod'), (']', 'punct'), ('Morel', 'compound'), ('-', 'punct'), ('Guillemaz', 'ROOT'), (',', 'punct'), ('A.', 'compound'), ('M.', 'conj'), (',', 'punct'), ('Baud', 'conj'), (',', 'punct'), ('R.', 'compound'), ('H.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Scherrer', 'conj'), (',', 'punct'), ('J.', 'compound'), ('R.', 'conj'), ('(', 'punct'), ('1990', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 94], [94, ]], [], Morel], [Morel, -], [-, Guillemaz], [Guillemaz, ,], [,, A.], [A., M.], [M., ,], [,, Baud], [Baud, ,], [,, R.], [R., H.], [H., ,], [,, &], [&, Scherrer], [Scherrer, ,], [,, J.], [J., R.], [R., (], [(, 1990], [1990, )], [), .]]

>> Trigrams: 
[[[, 94, ]], [94, ], Morel], [], Morel, -], [Morel, -, Guillemaz], [-, Guillemaz, ,], [Guillemaz, ,, A.], [,, A., M.], [A., M., ,], [M., ,, Baud], [,, Baud, ,], [Baud, ,, R.], [,, R., H.], [R., H., ,], [H., ,, &], [,, &, Scherrer], [&, Scherrer, ,], [Scherrer, ,, J.], [,, J., R.], [J., R., (], [R., (, 1990], [(, 1990, )], [1990, ), .]]

>> Noun Phrases are: 
[[94] Morel-Guillemaz, A. M., Baud, R. H., Scherrer, J. R.]

>> Named Entities are: 
[('94', 'CARDINAL'), ('A. M.', 'PERSON'), ('Baud', 'PERSON'), ('R. H.', 'PERSON'), ('J. R.', 'PERSON'), ('1990', 'DATE')] 

------------------- Sentence 2 -------------------

Proximity Processing of   


>> Tokens are: 
[Proximity, Processing,  ] 

>> PoS Tags are: 
[('Proximity', 'PROPN'), ('Processing', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proximity', 'compound'), ('Processing', 'ROOT'), (' ', 'pobj')]

>> Bigrams: 
[[Proximity, Processing], [Processing,  ]]

>> Trigrams: 
[[Proximity, Processing,  ]]

>> Noun Phrases are: 
[Proximity Processing]

>> Named Entities are: 
[] 


================================ Paragraph 842 =================================

Medical Text. In Medical Informatics Europe’90 (pp. 625-630). Springer Berlin Heidelberg.  

------------------- Sentence 1 -------------------

Medical Text. 


>> Tokens are: 
[Medical, Text, .] 

>> PoS Tags are: 
[('Medical', 'PROPN'), ('Text', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Medical', 'compound'), ('Text', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Medical, Text], [Text, .]]

>> Trigrams: 
[[Medical, Text, .]]

>> Noun Phrases are: 
[Medical Text]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Medical Informatics Europe’90 (pp. 


>> Tokens are: 
[Medical, Informatics, Europe’90, (, pp, .] 

>> PoS Tags are: 
[('Medical', 'ADJ'), ('Informatics', 'PROPN'), ('Europe’90', 'PROPN'), ('(', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Medical', 'compound'), ('Informatics', 'compound'), ('Europe’90', 'pobj'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Medical, Informatics], [Informatics, Europe’90], [Europe’90, (], [(, pp], [pp, .]]

>> Trigrams: 
[[Medical, Informatics, Europe’90], [Informatics, Europe’90, (], [Europe’90, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[Medical Informatics Europe’90]

>> Named Entities are: 
[('Medical Informatics', 'ORG')] 

------------------- Sentence 3 -------------------

625-630). 


>> Tokens are: 
[625, -, 630, ), .] 

>> PoS Tags are: 
[('625', 'NUM'), ('-', 'SYM'), ('630', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('625', 'ROOT'), ('-', 'punct'), ('630', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[625, -], [-, 630], [630, )], [), .]]

>> Trigrams: 
[[625, -, 630], [-, 630, )], [630, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('625', 'CARDINAL')] 

------------------- Sentence 4 -------------------

Springer Berlin Heidelberg. 


>> Tokens are: 
[Springer, Berlin, Heidelberg, .] 

>> PoS Tags are: 
[('Springer', 'PROPN'), ('Berlin', 'PROPN'), ('Heidelberg', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Springer', 'compound'), ('Berlin', 'compound'), ('Heidelberg', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Springer, Berlin], [Berlin, Heidelberg], [Heidelberg, .]]

>> Trigrams: 
[[Springer, Berlin, Heidelberg], [Berlin, Heidelberg, .]]

>> Noun Phrases are: 
[Springer Berlin Heidelberg]

>> Named Entities are: 
[('Berlin Heidelberg', 'PERSON')] 

------------------- Sentence 5 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 843 =================================

[95] Rassinoux, A. M., Michel, P. A., Juge, C., Baud, R., & Scherrer, J. R. (1994). Natural  

------------------- Sentence 1 -------------------

[95] Rassinoux, A. M., Michel, P. A., Juge, C., Baud, R., & Scherrer, J. R. (1994). 


>> Tokens are: 
[[, 95, ], Rassinoux, ,, A., M., ,, Michel, ,, P., A., ,, Juge, ,, C., ,, Baud, ,, R., ,, &, Scherrer, ,, J., R., (, 1994, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('95', 'NUM'), (']', 'PUNCT'), ('Rassinoux', 'VERB'), (',', 'PUNCT'), ('A.', 'PROPN'), ('M.', 'PROPN'), (',', 'PUNCT'), ('Michel', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('A.', 'PROPN'), (',', 'PUNCT'), ('Juge', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), (',', 'PUNCT'), ('Baud', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Scherrer', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('R.', 'PROPN'), ('(', 'PUNCT'), ('1994', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('95', 'dep'), (']', 'punct'), ('Rassinoux', 'ROOT'), (',', 'punct'), ('A.', 'compound'), ('M.', 'dobj'), (',', 'punct'), ('Michel', 'conj'), (',', 'punct'), ('P.', 'compound'), ('A.', 'conj'), (',', 'punct'), ('Juge', 'conj'), (',', 'punct'), ('C.', 'conj'), (',', 'punct'), ('Baud', 'conj'), (',', 'punct'), ('R.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Scherrer', 'conj'), (',', 'punct'), ('J.', 'compound'), ('R.', 'conj'), ('(', 'punct'), ('1994', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 95], [95, ]], [], Rassinoux], [Rassinoux, ,], [,, A.], [A., M.], [M., ,], [,, Michel], [Michel, ,], [,, P.], [P., A.], [A., ,], [,, Juge], [Juge, ,], [,, C.], [C., ,], [,, Baud], [Baud, ,], [,, R.], [R., ,], [,, &], [&, Scherrer], [Scherrer, ,], [,, J.], [J., R.], [R., (], [(, 1994], [1994, )], [), .]]

>> Trigrams: 
[[[, 95, ]], [95, ], Rassinoux], [], Rassinoux, ,], [Rassinoux, ,, A.], [,, A., M.], [A., M., ,], [M., ,, Michel], [,, Michel, ,], [Michel, ,, P.], [,, P., A.], [P., A., ,], [A., ,, Juge], [,, Juge, ,], [Juge, ,, C.], [,, C., ,], [C., ,, Baud], [,, Baud, ,], [Baud, ,, R.], [,, R., ,], [R., ,, &], [,, &, Scherrer], [&, Scherrer, ,], [Scherrer, ,, J.], [,, J., R.], [J., R., (], [R., (, 1994], [(, 1994, )], [1994, ), .]]

>> Noun Phrases are: 
[, A. M., Michel, P. A., Juge, C., Baud, R., Scherrer, J. R.]

>> Named Entities are: 
[('95', 'CARDINAL'), ('Michel', 'PERSON'), ('P. A.', 'PERSON'), ('Juge, C., Baud', 'ORG'), ('R.', 'NORP'), ('J. R.', 'PERSON'), ('1994', 'DATE')] 

------------------- Sentence 2 -------------------

Natural   


>> Tokens are: 
[Natural,  ] 

>> PoS Tags are: 
[('Natural', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Natural', 'amod'), (' ', 'ROOT')]

>> Bigrams: 
[[Natural,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 844 =================================

language processing of medical texts within the HELIOS environment. Computer methods  

------------------- Sentence 1 -------------------

language processing of medical texts within the HELIOS environment. 


>> Tokens are: 
[language, processing, medical, texts, HELIOS, environment, .] 

>> PoS Tags are: 
[('language', 'NOUN'), ('processing', 'NOUN'), ('medical', 'ADJ'), ('texts', 'NOUN'), ('HELIOS', 'PROPN'), ('environment', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('language', 'compound'), ('processing', 'ROOT'), ('medical', 'amod'), ('texts', 'pobj'), ('HELIOS', 'compound'), ('environment', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[language, processing], [processing, medical], [medical, texts], [texts, HELIOS], [HELIOS, environment], [environment, .]]

>> Trigrams: 
[[language, processing, medical], [processing, medical, texts], [medical, texts, HELIOS], [texts, HELIOS, environment], [HELIOS, environment, .]]

>> Noun Phrases are: 
[language processing, medical texts, the HELIOS environment]

>> Named Entities are: 
[('HELIOS', 'ORG')] 

------------------- Sentence 2 -------------------

Computer methods   


>> Tokens are: 
[Computer, methods,  ] 

>> PoS Tags are: 
[('Computer', 'NOUN'), ('methods', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Computer', 'compound'), ('methods', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[Computer, methods], [methods,  ]]

>> Trigrams: 
[[Computer, methods,  ]]

>> Noun Phrases are: 
[Computer methods]

>> Named Entities are: 
[] 


================================ Paragraph 845 =================================

and programs in biomedicine, 45, S79-96.  

------------------- Sentence 1 -------------------

and programs in biomedicine, 45, S79-96. 


>> Tokens are: 
[programs, biomedicine, ,, 45, ,, S79, -, 96, .] 

>> PoS Tags are: 
[('programs', 'NOUN'), ('biomedicine', 'NOUN'), (',', 'PUNCT'), ('45', 'NUM'), (',', 'PUNCT'), ('S79', 'PROPN'), ('-', 'PUNCT'), ('96', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('programs', 'nsubj'), ('biomedicine', 'pobj'), (',', 'punct'), ('45', 'appos'), (',', 'punct'), ('S79', 'compound'), ('-', 'punct'), ('96', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[programs, biomedicine], [biomedicine, ,], [,, 45], [45, ,], [,, S79], [S79, -], [-, 96], [96, .]]

>> Trigrams: 
[[programs, biomedicine, ,], [biomedicine, ,, 45], [,, 45, ,], [45, ,, S79], [,, S79, -], [S79, -, 96], [-, 96, .]]

>> Noun Phrases are: 
[programs, biomedicine]

>> Named Entities are: 
[('45', 'DATE')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 846 =================================

[96] Rassinoux, A. M., Juge, C., Michel, P. A., Baud, R. H., Lemaitre, D., Jean, F. C., ... &  

------------------- Sentence 1 -------------------

[96] Rassinoux, A. M., Juge, C., Michel, P. A., Baud, R. H., Lemaitre, D., Jean, F. C., ... &   


>> Tokens are: 
[[, 96, ], Rassinoux, ,, A., M., ,, Juge, ,, C., ,, Michel, ,, P., A., ,, Baud, ,, R., H., ,, Lemaitre, ,, D., ,, Jean, ,, F., C., ,, ..., &,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('96', 'NUM'), (']', 'PUNCT'), ('Rassinoux', 'VERB'), (',', 'PUNCT'), ('A.', 'PROPN'), ('M.', 'PROPN'), (',', 'PUNCT'), ('Juge', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), (',', 'PUNCT'), ('Michel', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('A.', 'PROPN'), (',', 'PUNCT'), ('Baud', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('H.', 'PROPN'), (',', 'PUNCT'), ('Lemaitre', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), (',', 'PUNCT'), ('Jean', 'PROPN'), (',', 'PUNCT'), ('F.', 'PROPN'), ('C.', 'PROPN'), (',', 'PUNCT'), ('...', 'PUNCT'), ('&', 'CCONJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('96', 'meta'), (']', 'punct'), ('Rassinoux', 'ROOT'), (',', 'punct'), ('A.', 'compound'), ('M.', 'conj'), (',', 'punct'), ('Juge', 'conj'), (',', 'punct'), ('C.', 'conj'), (',', 'punct'), ('Michel', 'conj'), (',', 'punct'), ('P.', 'compound'), ('A.', 'conj'), (',', 'punct'), ('Baud', 'conj'), (',', 'punct'), ('R.', 'compound'), ('H.', 'conj'), (',', 'punct'), ('Lemaitre', 'conj'), (',', 'punct'), ('D.', 'conj'), (',', 'punct'), ('Jean', 'conj'), (',', 'punct'), ('F.', 'compound'), ('C.', 'appos'), (',', 'punct'), ('...', 'punct'), ('&', 'cc'), (' ', 'punct')]

>> Bigrams: 
[[[, 96], [96, ]], [], Rassinoux], [Rassinoux, ,], [,, A.], [A., M.], [M., ,], [,, Juge], [Juge, ,], [,, C.], [C., ,], [,, Michel], [Michel, ,], [,, P.], [P., A.], [A., ,], [,, Baud], [Baud, ,], [,, R.], [R., H.], [H., ,], [,, Lemaitre], [Lemaitre, ,], [,, D.], [D., ,], [,, Jean], [Jean, ,], [,, F.], [F., C.], [C., ,], [,, ...], [..., &], [&,  ]]

>> Trigrams: 
[[[, 96, ]], [96, ], Rassinoux], [], Rassinoux, ,], [Rassinoux, ,, A.], [,, A., M.], [A., M., ,], [M., ,, Juge], [,, Juge, ,], [Juge, ,, C.], [,, C., ,], [C., ,, Michel], [,, Michel, ,], [Michel, ,, P.], [,, P., A.], [P., A., ,], [A., ,, Baud], [,, Baud, ,], [Baud, ,, R.], [,, R., H.], [R., H., ,], [H., ,, Lemaitre], [,, Lemaitre, ,], [Lemaitre, ,, D.], [,, D., ,], [D., ,, Jean], [,, Jean, ,], [Jean, ,, F.], [,, F., C.], [F., C., ,], [C., ,, ...], [,, ..., &], [..., &,  ]]

>> Noun Phrases are: 
[A. M., Juge, C., Michel, P. A., Baud, R. H., Lemaitre, D., Jean, F. C.]

>> Named Entities are: 
[('96', 'CARDINAL'), ('P. A.', 'PERSON'), ('Baud', 'ORG'), ('R. H.', 'PERSON'), ('Lemaitre', 'GPE'), ('D.', 'NORP'), ('Jean', 'PERSON'), ('F. C.', 'PERSON')] 


================================ Paragraph 847 =================================

Scherrer, J. R. (1995, June). Analysis of medical jargon: The RECIT system. In Conference  

------------------- Sentence 1 -------------------

Scherrer, J. R. (1995, June). 


>> Tokens are: 
[Scherrer, ,, J., R., (, 1995, ,, June, ), .] 

>> PoS Tags are: 
[('Scherrer', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('R.', 'PROPN'), ('(', 'PUNCT'), ('1995', 'NUM'), (',', 'PUNCT'), ('June', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Scherrer', 'ROOT'), (',', 'punct'), ('J.', 'compound'), ('R.', 'appos'), ('(', 'punct'), ('1995', 'appos'), (',', 'punct'), ('June', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Scherrer, ,], [,, J.], [J., R.], [R., (], [(, 1995], [1995, ,], [,, June], [June, )], [), .]]

>> Trigrams: 
[[Scherrer, ,, J.], [,, J., R.], [J., R., (], [R., (, 1995], [(, 1995, ,], [1995, ,, June], [,, June, )], [June, ), .]]

>> Noun Phrases are: 
[Scherrer, J. R.]

>> Named Entities are: 
[('J. R.', 'PERSON'), ('June', 'DATE')] 

------------------- Sentence 2 -------------------

Analysis of medical jargon: The RECIT system. 


>> Tokens are: 
[Analysis, medical, jargon, :, RECIT, system, .] 

>> PoS Tags are: 
[('Analysis', 'NOUN'), ('medical', 'ADJ'), ('jargon', 'NOUN'), (':', 'PUNCT'), ('RECIT', 'PROPN'), ('system', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Analysis', 'ROOT'), ('medical', 'amod'), ('jargon', 'pobj'), (':', 'punct'), ('RECIT', 'compound'), ('system', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Analysis, medical], [medical, jargon], [jargon, :], [:, RECIT], [RECIT, system], [system, .]]

>> Trigrams: 
[[Analysis, medical, jargon], [medical, jargon, :], [jargon, :, RECIT], [:, RECIT, system], [RECIT, system, .]]

>> Noun Phrases are: 
[Analysis, medical jargon, The RECIT system]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

In Conference   


>> Tokens are: 
[Conference,  ] 

>> PoS Tags are: 
[('Conference', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Conference', 'pobj'), (' ', 'nummod')]

>> Bigrams: 
[[Conference,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Conference]

>> Named Entities are: 
[] 


================================ Paragraph 848 =================================

on Artificial Intelligence in Medicine in Europe (pp. 42-52). Springer Berlin Heidelberg.  

------------------- Sentence 1 -------------------

on Artificial Intelligence in Medicine in Europe (pp. 


>> Tokens are: 
[Artificial, Intelligence, Medicine, Europe, (, pp, .] 

>> PoS Tags are: 
[('Artificial', 'PROPN'), ('Intelligence', 'PROPN'), ('Medicine', 'PROPN'), ('Europe', 'PROPN'), ('(', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Artificial', 'compound'), ('Intelligence', 'pobj'), ('Medicine', 'pobj'), ('Europe', 'pobj'), ('(', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Artificial, Intelligence], [Intelligence, Medicine], [Medicine, Europe], [Europe, (], [(, pp], [pp, .]]

>> Trigrams: 
[[Artificial, Intelligence, Medicine], [Intelligence, Medicine, Europe], [Medicine, Europe, (], [Europe, (, pp], [(, pp, .]]

>> Noun Phrases are: 
[Artificial Intelligence, Medicine, Europe, (pp]

>> Named Entities are: 
[('Artificial Intelligence in Medicine in', 'ORG'), ('Europe', 'LOC')] 

------------------- Sentence 2 -------------------

42-52). 


>> Tokens are: 
[42, -, 52, ), .] 

>> PoS Tags are: 
[('42', 'NUM'), ('-', 'SYM'), ('52', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('42', 'ROOT'), ('-', 'punct'), ('52', 'prep'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[42, -], [-, 52], [52, )], [), .]]

>> Trigrams: 
[[42, -, 52], [-, 52, )], [52, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('42-52', 'DATE')] 

------------------- Sentence 3 -------------------

Springer Berlin Heidelberg. 


>> Tokens are: 
[Springer, Berlin, Heidelberg, .] 

>> PoS Tags are: 
[('Springer', 'PROPN'), ('Berlin', 'PROPN'), ('Heidelberg', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Springer', 'compound'), ('Berlin', 'compound'), ('Heidelberg', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Springer, Berlin], [Berlin, Heidelberg], [Heidelberg, .]]

>> Trigrams: 
[[Springer, Berlin, Heidelberg], [Berlin, Heidelberg, .]]

>> Noun Phrases are: 
[Springer Berlin Heidelberg]

>> Named Entities are: 
[('Berlin Heidelberg', 'PERSON')] 

------------------- Sentence 4 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 849 =================================

[97] Friedman, C., Cimino, J. J., & Johnson, S. B. (1993). A conceptual model for clinical  

------------------- Sentence 1 -------------------

[97] Friedman, C., Cimino, J. J., & Johnson, S. B. (1993). 


>> Tokens are: 
[[, 97, ], Friedman, ,, C., ,, Cimino, ,, J., J., ,, &, Johnson, ,, S., B., (, 1993, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('97', 'NUM'), (']', 'PUNCT'), ('Friedman', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), (',', 'PUNCT'), ('Cimino', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('J.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Johnson', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('B.', 'PROPN'), ('(', 'PUNCT'), ('1993', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('97', 'nummod'), (']', 'punct'), ('Friedman', 'ROOT'), (',', 'punct'), ('C.', 'conj'), (',', 'punct'), ('Cimino', 'conj'), (',', 'punct'), ('J.', 'compound'), ('J.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Johnson', 'conj'), (',', 'punct'), ('S.', 'compound'), ('B.', 'conj'), ('(', 'punct'), ('1993', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 97], [97, ]], [], Friedman], [Friedman, ,], [,, C.], [C., ,], [,, Cimino], [Cimino, ,], [,, J.], [J., J.], [J., ,], [,, &], [&, Johnson], [Johnson, ,], [,, S.], [S., B.], [B., (], [(, 1993], [1993, )], [), .]]

>> Trigrams: 
[[[, 97, ]], [97, ], Friedman], [], Friedman, ,], [Friedman, ,, C.], [,, C., ,], [C., ,, Cimino], [,, Cimino, ,], [Cimino, ,, J.], [,, J., J.], [J., J., ,], [J., ,, &], [,, &, Johnson], [&, Johnson, ,], [Johnson, ,, S.], [,, S., B.], [S., B., (], [B., (, 1993], [(, 1993, )], [1993, ), .]]

>> Noun Phrases are: 
[[97] Friedman, C., Cimino, J. J., Johnson, S. B.]

>> Named Entities are: 
[('97', 'CARDINAL'), ('Friedman', 'ORG'), ('Cimino', 'NORP'), ('J. J.', 'PERSON'), ('S. B.', 'PERSON'), ('1993', 'DATE')] 

------------------- Sentence 2 -------------------

A conceptual model for clinical   


>> Tokens are: 
[conceptual, model, clinical,  ] 

>> PoS Tags are: 
[('conceptual', 'ADJ'), ('model', 'NOUN'), ('clinical', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('conceptual', 'amod'), ('model', 'ROOT'), ('clinical', 'amod'), (' ', 'pobj')]

>> Bigrams: 
[[conceptual, model], [model, clinical], [clinical,  ]]

>> Trigrams: 
[[conceptual, model, clinical], [model, clinical,  ]]

>> Noun Phrases are: 
[A conceptual model]

>> Named Entities are: 
[] 


================================ Paragraph 850 =================================

radiology reports. In Proceedings of the Annual Symposium on Computer Application in  

------------------- Sentence 1 -------------------

radiology reports. 


>> Tokens are: 
[radiology, reports, .] 

>> PoS Tags are: 
[('radiology', 'NOUN'), ('reports', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('radiology', 'nsubj'), ('reports', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[radiology, reports], [reports, .]]

>> Trigrams: 
[[radiology, reports, .]]

>> Noun Phrases are: 
[radiology]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

In Proceedings of the Annual Symposium on Computer Application in   


>> Tokens are: 
[Proceedings, Annual, Symposium, Computer, Application,  ] 

>> PoS Tags are: 
[('Proceedings', 'NOUN'), ('Annual', 'PROPN'), ('Symposium', 'PROPN'), ('Computer', 'PROPN'), ('Application', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Proceedings', 'pobj'), ('Annual', 'compound'), ('Symposium', 'pobj'), ('Computer', 'compound'), ('Application', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Proceedings, Annual], [Annual, Symposium], [Symposium, Computer], [Computer, Application], [Application,  ]]

>> Trigrams: 
[[Proceedings, Annual, Symposium], [Annual, Symposium, Computer], [Symposium, Computer, Application], [Computer, Application,  ]]

>> Noun Phrases are: 
[Proceedings, the Annual Symposium, Computer Application]

>> Named Entities are: 
[('Proceedings', 'GPE'), ('the Annual Symposium on Computer Application', 'EVENT')] 


================================ Paragraph 851 =================================

Medical Care (p. 829). American Medical Informatics Association.  

------------------- Sentence 1 -------------------

Medical Care (p. 829). 


>> Tokens are: 
[Medical, Care, (, p., 829, ), .] 

>> PoS Tags are: 
[('Medical', 'PROPN'), ('Care', 'PROPN'), ('(', 'PUNCT'), ('p.', 'NOUN'), ('829', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Medical', 'compound'), ('Care', 'ROOT'), ('(', 'punct'), ('p.', 'appos'), ('829', 'nummod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Medical, Care], [Care, (], [(, p.], [p., 829], [829, )], [), .]]

>> Trigrams: 
[[Medical, Care, (], [Care, (, p.], [(, p., 829], [p., 829, )], [829, ), .]]

>> Noun Phrases are: 
[Medical Care, (p.]

>> Named Entities are: 
[('829', 'CARDINAL')] 

------------------- Sentence 2 -------------------

American Medical Informatics Association. 


>> Tokens are: 
[American, Medical, Informatics, Association, .] 

>> PoS Tags are: 
[('American', 'PROPN'), ('Medical', 'PROPN'), ('Informatics', 'PROPN'), ('Association', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('American', 'compound'), ('Medical', 'compound'), ('Informatics', 'compound'), ('Association', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[American, Medical], [Medical, Informatics], [Informatics, Association], [Association, .]]

>> Trigrams: 
[[American, Medical, Informatics], [Medical, Informatics, Association], [Informatics, Association, .]]

>> Noun Phrases are: 
[American Medical Informatics Association]

>> Named Entities are: 
[('American Medical Informatics Association', 'ORG')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 852 =================================

[98] "Natural Language Processing." Natural Language Processing RSS. N.p., n.d. Web. 23  

------------------- Sentence 1 -------------------

[98] "Natural Language Processing. 


>> Tokens are: 
[[, 98, ], ", Natural, Language, Processing, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('98', 'NUM'), (']', 'PUNCT'), ('"', 'PUNCT'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('98', 'dep'), (']', 'dep'), ('"', 'punct'), ('Natural', 'compound'), ('Language', 'compound'), ('Processing', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[[, 98], [98, ]], [], "], [", Natural], [Natural, Language], [Language, Processing], [Processing, .]]

>> Trigrams: 
[[[, 98, ]], [98, ], "], [], ", Natural], [", Natural, Language], [Natural, Language, Processing], [Language, Processing, .]]

>> Noun Phrases are: 
[[98] "Natural Language Processing]

>> Named Entities are: 
[('98', 'CARDINAL'), ('Natural Language Processing', 'WORK_OF_ART')] 

------------------- Sentence 2 -------------------

" Natural Language Processing RSS. 


>> Tokens are: 
[", Natural, Language, Processing, RSS, .] 

>> PoS Tags are: 
[('"', 'PUNCT'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'PROPN'), ('RSS', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('"', 'punct'), ('Natural', 'compound'), ('Language', 'compound'), ('Processing', 'compound'), ('RSS', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[", Natural], [Natural, Language], [Language, Processing], [Processing, RSS], [RSS, .]]

>> Trigrams: 
[[", Natural, Language], [Natural, Language, Processing], [Language, Processing, RSS], [Processing, RSS, .]]

>> Noun Phrases are: 
[" Natural Language Processing RSS]

>> Named Entities are: 
[('Natural Language Processing RSS', 'WORK_OF_ART')] 

------------------- Sentence 3 -------------------

N.p., n.d. 


>> Tokens are: 
[N.p, ., ,, n.d, .] 

>> PoS Tags are: 
[('N.p', 'PROPN'), ('.', 'PUNCT'), (',', 'PUNCT'), ('n.d', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('N.p', 'ROOT'), ('.', 'punct'), (',', 'punct'), ('n.d', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[N.p, .], [., ,], [,, n.d], [n.d, .]]

>> Trigrams: 
[[N.p, ., ,], [., ,, n.d], [,, n.d, .]]

>> Noun Phrases are: 
[N.p]

>> Named Entities are: 
[('n.d', 'PERSON')] 

------------------- Sentence 4 -------------------

Web. 


>> Tokens are: 
[Web, .] 

>> PoS Tags are: 
[('Web', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Web', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Web, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Web]

>> Named Entities are: 
[] 

------------------- Sentence 5 -------------------

23   


>> Tokens are: 
[23,  ] 

>> PoS Tags are: 
[('23', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('23', 'nummod'), (' ', 'ROOT')]

>> Bigrams: 
[[23,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('23', 'CARDINAL')] 


================================ Paragraph 853 =================================

Mar. 2017.    

------------------- Sentence 1 -------------------

Mar. 2017. 


>> Tokens are: 
[Mar., 2017, .] 

>> PoS Tags are: 
[('Mar.', 'PROPN'), ('2017', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Mar.', 'ROOT'), ('2017', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[Mar., 2017], [2017, .]]

>> Trigrams: 
[[Mar., 2017, .]]

>> Noun Phrases are: 
[Mar.]

>> Named Entities are: 
[('Mar. 2017', 'DATE')] 

------------------- Sentence 2 -------------------

    


>> Tokens are: 
[   ] 

>> PoS Tags are: 
[('   ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 854 =================================

[99] [Srihari S. Machine Learning: Generative and Discriminative Models. 2010. http://  

------------------- Sentence 1 -------------------

[99] 


>> Tokens are: 
[[, 99, ]] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('99', 'NUM'), (']', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('99', 'ROOT'), (']', 'punct')]

>> Bigrams: 
[[[, 99], [99, ]]]

>> Trigrams: 
[[[, 99, ]]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('99', 'CARDINAL')] 

------------------- Sentence 2 -------------------

[Srihari S. Machine Learning: 


>> Tokens are: 
[[, Srihari, S., Machine, Learning, :] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('Srihari', 'PROPN'), ('S.', 'PROPN'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('Srihari', 'compound'), ('S.', 'compound'), ('Machine', 'compound'), ('Learning', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[[, Srihari], [Srihari, S.], [S., Machine], [Machine, Learning], [Learning, :]]

>> Trigrams: 
[[[, Srihari, S.], [Srihari, S., Machine], [S., Machine, Learning], [Machine, Learning, :]]

>> Noun Phrases are: 
[[Srihari S. Machine Learning]

>> Named Entities are: 
[('Srihari S. Machine Learning:', 'ORG')] 

------------------- Sentence 3 -------------------

Generative and Discriminative Models. 


>> Tokens are: 
[Generative, Discriminative, Models, .] 

>> PoS Tags are: 
[('Generative', 'PROPN'), ('Discriminative', 'PROPN'), ('Models', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Generative', 'ROOT'), ('Discriminative', 'compound'), ('Models', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Generative, Discriminative], [Discriminative, Models], [Models, .]]

>> Trigrams: 
[[Generative, Discriminative, Models], [Discriminative, Models, .]]

>> Noun Phrases are: 
[Generative, Discriminative Models]

>> Named Entities are: 
[] 

------------------- Sentence 4 -------------------

2010. 


>> Tokens are: 
[2010, .] 

>> PoS Tags are: 
[('2010', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('2010', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[2010, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2010', 'DATE')] 

------------------- Sentence 5 -------------------

http://   


>> Tokens are: 
[http://,  ] 

>> PoS Tags are: 
[('http://', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('http://', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[http://,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 855 =================================

www.cedar.buffalo.edu/wsrihari/CSE574/Discriminative-Generative.pdf (accessed 31 May  

------------------- Sentence 1 -------------------

www.cedar.buffalo.edu/wsrihari/CSE574/Discriminative-Generative.pdf (accessed 31 May   


>> Tokens are: 
[www.cedar.buffalo.edu/wsrihari/CSE574/Discriminative-Generative.pdf, (, accessed, 31,  ] 

>> PoS Tags are: 
[('www.cedar.buffalo.edu/wsrihari/CSE574/Discriminative-Generative.pdf', 'PROPN'), ('(', 'PUNCT'), ('accessed', 'VERB'), ('31', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('www.cedar.buffalo.edu/wsrihari/CSE574/Discriminative-Generative.pdf', 'ROOT'), ('(', 'punct'), ('accessed', 'acl'), ('31', 'nummod'), (' ', 'punct')]

>> Bigrams: 
[[www.cedar.buffalo.edu/wsrihari/CSE574/Discriminative-Generative.pdf, (], [(, accessed], [accessed, 31], [31,  ]]

>> Trigrams: 
[[www.cedar.buffalo.edu/wsrihari/CSE574/Discriminative-Generative.pdf, (, accessed], [(, accessed, 31], [accessed, 31,  ]]

>> Noun Phrases are: 
[www.cedar.buffalo.edu/wsrihari/CSE574/Discriminative-Generative.pdf]

>> Named Entities are: 
[] 


================================ Paragraph 856 =================================

2011).]  

------------------- Sentence 1 -------------------

2011). 


>> Tokens are: 
[2011, ), .] 

>> PoS Tags are: 
[('2011', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('2011', 'ROOT'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[2011, )], [), .]]

>> Trigrams: 
[[2011, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2011', 'DATE')] 

------------------- Sentence 2 -------------------

] 


>> Tokens are: 
[]] 

>> PoS Tags are: 
[(']', 'PUNCT')] 

>> Dependency Tags are: 
[(']', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 857 =================================

[100] [Elkan C. Log-Linear Models and Conditional Random Fields. 2008. http://cseweb.  

------------------- Sentence 1 -------------------

[100] [Elkan C. Log-Linear Models and Conditional Random Fields. 2008. 


>> Tokens are: 
[[, 100, ], [, Elkan, C., Log, -, Linear, Models, Conditional, Random, Fields, ., 2008, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('100', 'NUM'), (']', 'PUNCT'), ('[', 'PUNCT'), ('Elkan', 'PROPN'), ('C.', 'PROPN'), ('Log', 'PROPN'), ('-', 'PUNCT'), ('Linear', 'PROPN'), ('Models', 'PROPN'), ('Conditional', 'PROPN'), ('Random', 'PROPN'), ('Fields', 'PROPN'), ('.', 'PUNCT'), ('2008', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('100', 'nummod'), (']', 'punct'), ('[', 'punct'), ('Elkan', 'compound'), ('C.', 'compound'), ('Log', 'compound'), ('-', 'punct'), ('Linear', 'compound'), ('Models', 'ROOT'), ('Conditional', 'compound'), ('Random', 'compound'), ('Fields', 'conj'), ('.', 'punct'), ('2008', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[[, 100], [100, ]], [], [], [[, Elkan], [Elkan, C.], [C., Log], [Log, -], [-, Linear], [Linear, Models], [Models, Conditional], [Conditional, Random], [Random, Fields], [Fields, .], [., 2008], [2008, .]]

>> Trigrams: 
[[[, 100, ]], [100, ], [], [], [, Elkan], [[, Elkan, C.], [Elkan, C., Log], [C., Log, -], [Log, -, Linear], [-, Linear, Models], [Linear, Models, Conditional], [Models, Conditional, Random], [Conditional, Random, Fields], [Random, Fields, .], [Fields, ., 2008], [., 2008, .]]

>> Noun Phrases are: 
[[100] [Elkan C. Log-Linear Models, Conditional Random Fields]

>> Named Entities are: 
[('100', 'CARDINAL')] 

------------------- Sentence 2 -------------------

http://cseweb. 


>> Tokens are: 
[http://cseweb, .] 

>> PoS Tags are: 
[('http://cseweb', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('http://cseweb', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[http://cseweb, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[http://cseweb]

>> Named Entities are: 
[('http://cseweb', 'PERSON')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 858 =================================

ucsd.edu/welkan/250B/cikmtutorial.pdf (accessed 28 Jun 2011). 62. Hearst MA, Dumais ST,  

------------------- Sentence 1 -------------------

ucsd.edu/welkan/250B/cikmtutorial.pdf (accessed 28 Jun 2011). 


>> Tokens are: 
[ucsd.edu/welkan/250B/cikmtutorial.pdf, (, accessed, 28, Jun, 2011, ), .] 

>> PoS Tags are: 
[('ucsd.edu/welkan/250B/cikmtutorial.pdf', 'ADJ'), ('(', 'PUNCT'), ('accessed', 'VERB'), ('28', 'NUM'), ('Jun', 'PROPN'), ('2011', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ucsd.edu/welkan/250B/cikmtutorial.pdf', 'ROOT'), ('(', 'punct'), ('accessed', 'acl'), ('28', 'nummod'), ('Jun', 'npadvmod'), ('2011', 'nummod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[ucsd.edu/welkan/250B/cikmtutorial.pdf, (], [(, accessed], [accessed, 28], [28, Jun], [Jun, 2011], [2011, )], [), .]]

>> Trigrams: 
[[ucsd.edu/welkan/250B/cikmtutorial.pdf, (, accessed], [(, accessed, 28], [accessed, 28, Jun], [28, Jun, 2011], [Jun, 2011, )], [2011, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('28 Jun 2011', 'DATE')] 

------------------- Sentence 2 -------------------

62. 


>> Tokens are: 
[62, .] 

>> PoS Tags are: 
[('62', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('62', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[62, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('62', 'CARDINAL')] 

------------------- Sentence 3 -------------------

Hearst MA, Dumais ST,   


>> Tokens are: 
[Hearst, MA, ,, Dumais, ST, ,,  ] 

>> PoS Tags are: 
[('Hearst', 'PROPN'), ('MA', 'PROPN'), (',', 'PUNCT'), ('Dumais', 'PROPN'), ('ST', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Hearst', 'compound'), ('MA', 'ROOT'), (',', 'punct'), ('Dumais', 'compound'), ('ST', 'conj'), (',', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Hearst, MA], [MA, ,], [,, Dumais], [Dumais, ST], [ST, ,], [,,  ]]

>> Trigrams: 
[[Hearst, MA, ,], [MA, ,, Dumais], [,, Dumais, ST], [Dumais, ST, ,], [ST, ,,  ]]

>> Noun Phrases are: 
[Hearst MA, Dumais ST]

>> Named Entities are: 
[('Hearst MA', 'ORG'), ('Dumais ST', 'ORG')] 


================================ Paragraph 859 =================================

Osman E, et al. Support vector machines]  

------------------- Sentence 1 -------------------

Osman E, et al. 


>> Tokens are: 
[Osman, E, ,, et, al, .] 

>> PoS Tags are: 
[('Osman', 'PROPN'), ('E', 'PROPN'), (',', 'PUNCT'), ('et', 'X'), ('al', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Osman', 'compound'), ('E', 'ROOT'), (',', 'punct'), ('et', 'compound'), ('al', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Osman, E], [E, ,], [,, et], [et, al], [al, .]]

>> Trigrams: 
[[Osman, E, ,], [E, ,, et], [,, et, al], [et, al, .]]

>> Noun Phrases are: 
[Osman E, et al]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Support vector machines]   


>> Tokens are: 
[Support, vector, machines, ],  ] 

>> PoS Tags are: 
[('Support', 'NOUN'), ('vector', 'NOUN'), ('machines', 'NOUN'), (']', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Support', 'compound'), ('vector', 'compound'), ('machines', 'ROOT'), (']', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Support, vector], [vector, machines], [machines, ]], [],  ]]

>> Trigrams: 
[[Support, vector, machines], [vector, machines, ]], [machines, ],  ]]

>> Noun Phrases are: 
[Support vector machines]

>> Named Entities are: 
[] 


================================ Paragraph 860 =================================

[101] [Jurafsky D, Martin JH. Speech and Language Processing. 2nd edn. Englewood Cliffs,  

------------------- Sentence 1 -------------------

[101] [Jurafsky D, Martin JH. 


>> Tokens are: 
[[, 101, ], [, Jurafsky, D, ,, Martin, JH, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('101', 'NUM'), (']', 'PUNCT'), ('[', 'PUNCT'), ('Jurafsky', 'PROPN'), ('D', 'PROPN'), (',', 'PUNCT'), ('Martin', 'PROPN'), ('JH', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('101', 'dep'), (']', 'punct'), ('[', 'punct'), ('Jurafsky', 'compound'), ('D', 'ROOT'), (',', 'punct'), ('Martin', 'compound'), ('JH', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 101], [101, ]], [], [], [[, Jurafsky], [Jurafsky, D], [D, ,], [,, Martin], [Martin, JH], [JH, .]]

>> Trigrams: 
[[[, 101, ]], [101, ], [], [], [, Jurafsky], [[, Jurafsky, D], [Jurafsky, D, ,], [D, ,, Martin], [,, Martin, JH], [Martin, JH, .]]

>> Noun Phrases are: 
[[101] [Jurafsky D, Martin JH]

>> Named Entities are: 
[('Jurafsky D', 'PERSON'), ('Martin JH', 'PERSON')] 

------------------- Sentence 2 -------------------

Speech and Language Processing. 


>> Tokens are: 
[Speech, Language, Processing, .] 

>> PoS Tags are: 
[('Speech', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Speech', 'nmod'), ('Language', 'conj'), ('Processing', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Speech, Language], [Language, Processing], [Processing, .]]

>> Trigrams: 
[[Speech, Language, Processing], [Language, Processing, .]]

>> Noun Phrases are: 
[Speech and Language Processing]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

2nd edn. 


>> Tokens are: 
[2nd, edn, .] 

>> PoS Tags are: 
[('2nd', 'ADJ'), ('edn', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('2nd', 'amod'), ('edn', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[2nd, edn], [edn, .]]

>> Trigrams: 
[[2nd, edn, .]]

>> Noun Phrases are: 
[2nd edn]

>> Named Entities are: 
[('2nd', 'ORDINAL')] 

------------------- Sentence 4 -------------------

Englewood Cliffs,   


>> Tokens are: 
[Englewood, Cliffs, ,,  ] 

>> PoS Tags are: 
[('Englewood', 'PROPN'), ('Cliffs', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Englewood', 'compound'), ('Cliffs', 'ROOT'), (',', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Englewood, Cliffs], [Cliffs, ,], [,,  ]]

>> Trigrams: 
[[Englewood, Cliffs, ,], [Cliffs, ,,  ]]

>> Noun Phrases are: 
[Englewood Cliffs]

>> Named Entities are: 
[('Englewood Cliffs', 'PERSON')] 


================================ Paragraph 861 =================================

NJ: Prentice-Hall, 2008.]  

------------------- Sentence 1 -------------------

NJ: Prentice-Hall, 2008.] 


>> Tokens are: 
[NJ, :, Prentice, -, Hall, ,, 2008, ., ]] 

>> PoS Tags are: 
[('NJ', 'PROPN'), (':', 'PUNCT'), ('Prentice', 'PROPN'), ('-', 'PUNCT'), ('Hall', 'PROPN'), (',', 'PUNCT'), ('2008', 'NUM'), ('.', 'PUNCT'), (']', 'PUNCT')] 

>> Dependency Tags are: 
[('NJ', 'ROOT'), (':', 'punct'), ('Prentice', 'compound'), ('-', 'punct'), ('Hall', 'appos'), (',', 'punct'), ('2008', 'appos'), ('.', 'punct'), (']', 'punct')]

>> Bigrams: 
[[NJ, :], [:, Prentice], [Prentice, -], [-, Hall], [Hall, ,], [,, 2008], [2008, .], [., ]]]

>> Trigrams: 
[[NJ, :, Prentice], [:, Prentice, -], [Prentice, -, Hall], [-, Hall, ,], [Hall, ,, 2008], [,, 2008, .], [2008, ., ]]]

>> Noun Phrases are: 
[NJ, Prentice-Hall]

>> Named Entities are: 
[('Prentice-Hall, 2008', 'ORG')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 862 =================================

[102] [Sonnhammer ELL, Eddy SR, Birney E, et al. Pfam: Multiple sequence alignments and  

------------------- Sentence 1 -------------------

[102] [Sonnhammer ELL, Eddy SR, Birney E, et al. 


>> Tokens are: 
[[, 102, ], [, Sonnhammer, ELL, ,, Eddy, SR, ,, Birney, E, ,, et, al, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('102', 'NUM'), (']', 'PUNCT'), ('[', 'PUNCT'), ('Sonnhammer', 'PROPN'), ('ELL', 'PROPN'), (',', 'PUNCT'), ('Eddy', 'PROPN'), ('SR', 'PROPN'), (',', 'PUNCT'), ('Birney', 'PROPN'), ('E', 'PROPN'), (',', 'PUNCT'), ('et', 'X'), ('al', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('102', 'ROOT'), (']', 'punct'), ('[', 'punct'), ('Sonnhammer', 'compound'), ('ELL', 'appos'), (',', 'punct'), ('Eddy', 'compound'), ('SR', 'conj'), (',', 'punct'), ('Birney', 'compound'), ('E', 'conj'), (',', 'punct'), ('et', 'compound'), ('al', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[[, 102], [102, ]], [], [], [[, Sonnhammer], [Sonnhammer, ELL], [ELL, ,], [,, Eddy], [Eddy, SR], [SR, ,], [,, Birney], [Birney, E], [E, ,], [,, et], [et, al], [al, .]]

>> Trigrams: 
[[[, 102, ]], [102, ], [], [], [, Sonnhammer], [[, Sonnhammer, ELL], [Sonnhammer, ELL, ,], [ELL, ,, Eddy], [,, Eddy, SR], [Eddy, SR, ,], [SR, ,, Birney], [,, Birney, E], [Birney, E, ,], [E, ,, et], [,, et, al], [et, al, .]]

>> Noun Phrases are: 
[Sonnhammer ELL, Eddy SR, Birney E, et al]

>> Named Entities are: 
[('102', 'CARDINAL'), ('Eddy SR', 'ORG'), ('Birney E', 'ORG')] 

------------------- Sentence 2 -------------------

Pfam: Multiple sequence alignments and   


>> Tokens are: 
[Pfam, :, Multiple, sequence, alignments,  ] 

>> PoS Tags are: 
[('Pfam', 'PROPN'), (':', 'PUNCT'), ('Multiple', 'ADJ'), ('sequence', 'NOUN'), ('alignments', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Pfam', 'ROOT'), (':', 'punct'), ('Multiple', 'amod'), ('sequence', 'compound'), ('alignments', 'appos'), (' ', 'conj')]

>> Bigrams: 
[[Pfam, :], [:, Multiple], [Multiple, sequence], [sequence, alignments], [alignments,  ]]

>> Trigrams: 
[[Pfam, :, Multiple], [:, Multiple, sequence], [Multiple, sequence, alignments], [sequence, alignments,  ]]

>> Noun Phrases are: 
[Pfam, Multiple sequence alignments]

>> Named Entities are: 
[] 


================================ Paragraph 863 =================================

HMM-profiles of protein domains. Nucleic Acids Res 1998;26:320]  

------------------- Sentence 1 -------------------

HMM-profiles of protein domains. 


>> Tokens are: 
[HMM, -, profiles, protein, domains, .] 

>> PoS Tags are: 
[('HMM', 'PROPN'), ('-', 'PUNCT'), ('profiles', 'NOUN'), ('protein', 'NOUN'), ('domains', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('HMM', 'compound'), ('-', 'punct'), ('profiles', 'ROOT'), ('protein', 'compound'), ('domains', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[HMM, -], [-, profiles], [profiles, protein], [protein, domains], [domains, .]]

>> Trigrams: 
[[HMM, -, profiles], [-, profiles, protein], [profiles, protein, domains], [protein, domains, .]]

>> Noun Phrases are: 
[HMM-profiles, protein domains]

>> Named Entities are: 
[('HMM', 'ORG')] 

------------------- Sentence 2 -------------------

Nucleic Acids Res 1998;26:320] 


>> Tokens are: 
[Nucleic, Acids, Res, 1998;26:320, ]] 

>> PoS Tags are: 
[('Nucleic', 'PROPN'), ('Acids', 'PROPN'), ('Res', 'PROPN'), ('1998;26:320', 'NUM'), (']', 'PUNCT')] 

>> Dependency Tags are: 
[('Nucleic', 'compound'), ('Acids', 'compound'), ('Res', 'compound'), ('1998;26:320', 'ROOT'), (']', 'punct')]

>> Bigrams: 
[[Nucleic, Acids], [Acids, Res], [Res, 1998;26:320], [1998;26:320, ]]]

>> Trigrams: 
[[Nucleic, Acids, Res], [Acids, Res, 1998;26:320], [Res, 1998;26:320, ]]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('Nucleic Acids Res', 'PERSON')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 864 =================================

[103] [Sonnhammer, E. L., Eddy, S. R., Birney, E., Bateman, A., & Durbin, R. (1998). Pfam:  

------------------- Sentence 1 -------------------

[103] 


>> Tokens are: 
[[, 103, ]] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('103', 'NUM'), (']', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('103', 'ROOT'), (']', 'punct')]

>> Bigrams: 
[[[, 103], [103, ]]]

>> Trigrams: 
[[[, 103, ]]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('103', 'CARDINAL')] 

------------------- Sentence 2 -------------------

[Sonnhammer, E. L., Eddy, S. R., Birney, E., Bateman, A., & Durbin, R. (1998). 


>> Tokens are: 
[[, Sonnhammer, ,, E., L., ,, Eddy, ,, S., R., ,, Birney, ,, E., ,, Bateman, ,, A., ,, &, Durbin, ,, R., (, 1998, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('Sonnhammer', 'PROPN'), (',', 'PUNCT'), ('E.', 'PROPN'), ('L.', 'PROPN'), (',', 'PUNCT'), ('Eddy', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('R.', 'PROPN'), (',', 'PUNCT'), ('Birney', 'PROPN'), (',', 'PUNCT'), ('E.', 'PROPN'), (',', 'PUNCT'), ('Bateman', 'PROPN'), (',', 'PUNCT'), ('A.', 'NOUN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Durbin', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('(', 'PUNCT'), ('1998', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('Sonnhammer', 'ROOT'), (',', 'punct'), ('E.', 'compound'), ('L.', 'appos'), (',', 'punct'), ('Eddy', 'conj'), (',', 'punct'), ('S.', 'compound'), ('R.', 'appos'), (',', 'punct'), ('Birney', 'conj'), (',', 'punct'), ('E.', 'conj'), (',', 'punct'), ('Bateman', 'conj'), (',', 'punct'), ('A.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Durbin', 'conj'), (',', 'punct'), ('R.', 'appos'), ('(', 'punct'), ('1998', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, Sonnhammer], [Sonnhammer, ,], [,, E.], [E., L.], [L., ,], [,, Eddy], [Eddy, ,], [,, S.], [S., R.], [R., ,], [,, Birney], [Birney, ,], [,, E.], [E., ,], [,, Bateman], [Bateman, ,], [,, A.], [A., ,], [,, &], [&, Durbin], [Durbin, ,], [,, R.], [R., (], [(, 1998], [1998, )], [), .]]

>> Trigrams: 
[[[, Sonnhammer, ,], [Sonnhammer, ,, E.], [,, E., L.], [E., L., ,], [L., ,, Eddy], [,, Eddy, ,], [Eddy, ,, S.], [,, S., R.], [S., R., ,], [R., ,, Birney], [,, Birney, ,], [Birney, ,, E.], [,, E., ,], [E., ,, Bateman], [,, Bateman, ,], [Bateman, ,, A.], [,, A., ,], [A., ,, &], [,, &, Durbin], [&, Durbin, ,], [Durbin, ,, R.], [,, R., (], [R., (, 1998], [(, 1998, )], [1998, ), .]]

>> Noun Phrases are: 
[[Sonnhammer, E. L., Eddy, S. R., Birney, E., Bateman, A., Durbin, R.]

>> Named Entities are: 
[('E. L., Eddy', 'PERSON'), ('S. R.', 'PERSON'), ('Birney', 'PERSON'), ('R.', 'NORP'), ('1998', 'DATE')] 

------------------- Sentence 3 -------------------

Pfam:   


>> Tokens are: 
[Pfam, :,  ] 

>> PoS Tags are: 
[('Pfam', 'PROPN'), (':', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Pfam', 'ROOT'), (':', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Pfam, :], [:,  ]]

>> Trigrams: 
[[Pfam, :,  ]]

>> Noun Phrases are: 
[Pfam]

>> Named Entities are: 
[] 


================================ Paragraph 865 =================================

multiple sequence alignments and HMM-profiles of protein domains. Nucleic acids  

------------------- Sentence 1 -------------------

multiple sequence alignments and HMM-profiles of protein domains. 


>> Tokens are: 
[multiple, sequence, alignments, HMM, -, profiles, protein, domains, .] 

>> PoS Tags are: 
[('multiple', 'ADJ'), ('sequence', 'NOUN'), ('alignments', 'NOUN'), ('HMM', 'PROPN'), ('-', 'PUNCT'), ('profiles', 'NOUN'), ('protein', 'NOUN'), ('domains', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('multiple', 'amod'), ('sequence', 'compound'), ('alignments', 'ROOT'), ('HMM', 'compound'), ('-', 'punct'), ('profiles', 'conj'), ('protein', 'compound'), ('domains', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[multiple, sequence], [sequence, alignments], [alignments, HMM], [HMM, -], [-, profiles], [profiles, protein], [protein, domains], [domains, .]]

>> Trigrams: 
[[multiple, sequence, alignments], [sequence, alignments, HMM], [alignments, HMM, -], [HMM, -, profiles], [-, profiles, protein], [profiles, protein, domains], [protein, domains, .]]

>> Noun Phrases are: 
[multiple sequence alignments, HMM-profiles, protein domains]

>> Named Entities are: 
[('HMM', 'ORG')] 

------------------- Sentence 2 -------------------

Nucleic acids   


>> Tokens are: 
[Nucleic, acids,  ] 

>> PoS Tags are: 
[('Nucleic', 'ADJ'), ('acids', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Nucleic', 'amod'), ('acids', 'compound'), (' ', 'ROOT')]

>> Bigrams: 
[[Nucleic, acids], [acids,  ]]

>> Trigrams: 
[[Nucleic, acids,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 866 =================================

research, 26(1), 320-322]  

------------------- Sentence 1 -------------------

research, 26(1), 320-322]   


>> Tokens are: 
[research, ,, 26(1, ), ,, 320, -, 322, ],  ] 

>> PoS Tags are: 
[('research', 'NOUN'), (',', 'PUNCT'), ('26(1', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('320', 'NUM'), ('-', 'SYM'), ('322', 'NUM'), (']', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('research', 'ROOT'), (',', 'punct'), ('26(1', 'appos'), (')', 'punct'), (',', 'punct'), ('320', 'appos'), ('-', 'punct'), ('322', 'nummod'), (']', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[research, ,], [,, 26(1], [26(1, )], [), ,], [,, 320], [320, -], [-, 322], [322, ]], [],  ]]

>> Trigrams: 
[[research, ,, 26(1], [,, 26(1, )], [26(1, ), ,], [), ,, 320], [,, 320, -], [320, -, 322], [-, 322, ]], [322, ],  ]]

>> Noun Phrases are: 
[research]

>> Named Entities are: 
[('26(1', 'CARDINAL'), ('320', 'CARDINAL')] 


================================ Paragraph 867 =================================

[104] Systems, RAVN. "RAVN Systems Launch the ACE Powered GDPR Robot - Artificial  

------------------- Sentence 1 -------------------

[104] Systems, RAVN. 


>> Tokens are: 
[[, 104, ], Systems, ,, RAVN, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('104', 'NUM'), (']', 'PUNCT'), ('Systems', 'PROPN'), (',', 'PUNCT'), ('RAVN', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('104', 'dep'), (']', 'punct'), ('Systems', 'ROOT'), (',', 'punct'), ('RAVN', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 104], [104, ]], [], Systems], [Systems, ,], [,, RAVN], [RAVN, .]]

>> Trigrams: 
[[[, 104, ]], [104, ], Systems], [], Systems, ,], [Systems, ,, RAVN], [,, RAVN, .]]

>> Noun Phrases are: 
[[104] Systems, RAVN]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

"RAVN Systems Launch the ACE Powered GDPR Robot - Artificial   


>> Tokens are: 
[", RAVN, Systems, Launch, ACE, Powered, GDPR, Robot, -, Artificial,  ] 

>> PoS Tags are: 
[('"', 'PUNCT'), ('RAVN', 'PROPN'), ('Systems', 'PROPN'), ('Launch', 'PROPN'), ('ACE', 'PROPN'), ('Powered', 'PROPN'), ('GDPR', 'PROPN'), ('Robot', 'PROPN'), ('-', 'PUNCT'), ('Artificial', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('"', 'punct'), ('RAVN', 'compound'), ('Systems', 'compound'), ('Launch', 'ROOT'), ('ACE', 'appos'), ('Powered', 'compound'), ('GDPR', 'compound'), ('Robot', 'compound'), ('-', 'punct'), ('Artificial', 'appos'), (' ', 'nummod')]

>> Bigrams: 
[[", RAVN], [RAVN, Systems], [Systems, Launch], [Launch, ACE], [ACE, Powered], [Powered, GDPR], [GDPR, Robot], [Robot, -], [-, Artificial], [Artificial,  ]]

>> Trigrams: 
[[", RAVN, Systems], [RAVN, Systems, Launch], [Systems, Launch, ACE], [Launch, ACE, Powered], [ACE, Powered, GDPR], [Powered, GDPR, Robot], [GDPR, Robot, -], [Robot, -, Artificial], [-, Artificial,  ]]

>> Noun Phrases are: 
["RAVN Systems Launch, the ACE, Powered GDPR Robot - Artificial]

>> Named Entities are: 
[] 


================================ Paragraph 868 =================================

Intelligence to Expedite GDPR Compliance." Stock Market. PR Newswire, n.d. Web. 19  

------------------- Sentence 1 -------------------

Intelligence to Expedite GDPR Compliance." 


>> Tokens are: 
[Intelligence, Expedite, GDPR, Compliance, ., "] 

>> PoS Tags are: 
[('Intelligence', 'NOUN'), ('Expedite', 'PROPN'), ('GDPR', 'PROPN'), ('Compliance', 'PROPN'), ('.', 'PUNCT'), ('"', 'PUNCT')] 

>> Dependency Tags are: 
[('Intelligence', 'ROOT'), ('Expedite', 'relcl'), ('GDPR', 'compound'), ('Compliance', 'dobj'), ('.', 'punct'), ('"', 'punct')]

>> Bigrams: 
[[Intelligence, Expedite], [Expedite, GDPR], [GDPR, Compliance], [Compliance, .], [., "]]

>> Trigrams: 
[[Intelligence, Expedite, GDPR], [Expedite, GDPR, Compliance], [GDPR, Compliance, .], [Compliance, ., "]]

>> Noun Phrases are: 
[Intelligence, GDPR Compliance]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

Stock Market. 


>> Tokens are: 
[Stock, Market, .] 

>> PoS Tags are: 
[('Stock', 'PROPN'), ('Market', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Stock', 'compound'), ('Market', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Stock, Market], [Market, .]]

>> Trigrams: 
[[Stock, Market, .]]

>> Noun Phrases are: 
[Stock Market]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

PR Newswire, n.d. 


>> Tokens are: 
[PR, Newswire, ,, n.d, .] 

>> PoS Tags are: 
[('PR', 'PROPN'), ('Newswire', 'PROPN'), (',', 'PUNCT'), ('n.d', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('PR', 'compound'), ('Newswire', 'ROOT'), (',', 'punct'), ('n.d', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[PR, Newswire], [Newswire, ,], [,, n.d], [n.d, .]]

>> Trigrams: 
[[PR, Newswire, ,], [Newswire, ,, n.d], [,, n.d, .]]

>> Noun Phrases are: 
[PR Newswire, n.d]

>> Named Entities are: 
[('PR Newswire', 'ORG'), ('n.d', 'GPE')] 

------------------- Sentence 4 -------------------

Web. 


>> Tokens are: 
[Web, .] 

>> PoS Tags are: 
[('Web', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Web', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Web, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Web]

>> Named Entities are: 
[] 

------------------- Sentence 5 -------------------

19   


>> Tokens are: 
[19,  ] 

>> PoS Tags are: 
[('19', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('19', 'nummod'), (' ', 'ROOT')]

>> Bigrams: 
[[19,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('19', 'CARDINAL')] 


================================ Paragraph 869 =================================

Mar. 2017.  

------------------- Sentence 1 -------------------

Mar. 2017. 


>> Tokens are: 
[Mar., 2017, .] 

>> PoS Tags are: 
[('Mar.', 'PROPN'), ('2017', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Mar.', 'ROOT'), ('2017', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[Mar., 2017], [2017, .]]

>> Trigrams: 
[[Mar., 2017, .]]

>> Noun Phrases are: 
[Mar.]

>> Named Entities are: 
[('Mar. 2017', 'DATE')] 

------------------- Sentence 2 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 870 =================================

 [105] "Here's Why Natural Language Processing is the Future of BI." SmartData Collective.  

------------------- Sentence 1 -------------------

 [105] "Here's Why Natural Language Processing is the Future of BI. 


>> Tokens are: 
[ , [, 105, ], ", Natural, Language, Processing, Future, BI, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('[', 'PUNCT'), ('105', 'NUM'), (']', 'PUNCT'), ('"', 'PUNCT'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'PROPN'), ('Future', 'PROPN'), ('BI', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nsubj'), ('[', 'punct'), ('105', 'appos'), (']', 'punct'), ('"', 'punct'), ('Natural', 'compound'), ('Language', 'compound'), ('Processing', 'nsubj'), ('Future', 'attr'), ('BI', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , [], [[, 105], [105, ]], [], "], [", Natural], [Natural, Language], [Language, Processing], [Processing, Future], [Future, BI], [BI, .]]

>> Trigrams: 
[[ , [, 105], [[, 105, ]], [105, ], "], [], ", Natural], [", Natural, Language], [Natural, Language, Processing], [Language, Processing, Future], [Processing, Future, BI], [Future, BI, .]]

>> Noun Phrases are: 
[Natural Language Processing, the Future, BI]

>> Named Entities are: 
[('105', 'CARDINAL')] 

------------------- Sentence 2 -------------------

" SmartData Collective. 


>> Tokens are: 
[", SmartData, Collective, .] 

>> PoS Tags are: 
[('"', 'PUNCT'), ('SmartData', 'PROPN'), ('Collective', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('"', 'punct'), ('SmartData', 'compound'), ('Collective', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[", SmartData], [SmartData, Collective], [Collective, .]]

>> Trigrams: 
[[", SmartData, Collective], [SmartData, Collective, .]]

>> Noun Phrases are: 
[" SmartData Collective]

>> Named Entities are: 
[('SmartData Collective', 'WORK_OF_ART')] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 871 =================================

N.p., n.d. Web. 19 Mar. 2017 

------------------- Sentence 1 -------------------

N.p., n.d. 


>> Tokens are: 
[N.p, ., ,, n.d, .] 

>> PoS Tags are: 
[('N.p', 'PROPN'), ('.', 'PUNCT'), (',', 'PUNCT'), ('n.d', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('N.p', 'ROOT'), ('.', 'punct'), (',', 'punct'), ('n.d', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[N.p, .], [., ,], [,, n.d], [n.d, .]]

>> Trigrams: 
[[N.p, ., ,], [., ,, n.d], [,, n.d, .]]

>> Noun Phrases are: 
[N.p]

>> Named Entities are: 
[('N.p', 'ORG'), ('n.d', 'PERSON')] 

------------------- Sentence 2 -------------------

Web. 


>> Tokens are: 
[Web, .] 

>> PoS Tags are: 
[('Web', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Web', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Web, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Web]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

19 Mar. 2017 


>> Tokens are: 
[19, Mar., 2017] 

>> PoS Tags are: 
[('19', 'NUM'), ('Mar.', 'NUM'), ('2017', 'NUM')] 

>> Dependency Tags are: 
[('19', 'nummod'), ('Mar.', 'ROOT'), ('2017', 'nummod')]

>> Bigrams: 
[[19, Mar.], [Mar., 2017]]

>> Trigrams: 
[[19, Mar., 2017]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('19', 'CARDINAL'), ('2017', 'DATE')] 


================================ Paragraph 872 =================================

[106] "Using Natural Language Processing and Network Analysis to Develop a Conceptual  

------------------- Sentence 1 -------------------

[106] " 


>> Tokens are: 
[[, 106, ], "] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('106', 'NUM'), (']', 'PUNCT'), ('"', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('106', 'ROOT'), (']', 'punct'), ('"', 'punct')]

>> Bigrams: 
[[[, 106], [106, ]], [], "]]

>> Trigrams: 
[[[, 106, ]], [106, ], "]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('106', 'CARDINAL')] 

------------------- Sentence 2 -------------------

Using Natural Language Processing and Network Analysis to Develop a Conceptual   


>> Tokens are: 
[Natural, Language, Processing, Network, Analysis, Develop, Conceptual,  ] 

>> PoS Tags are: 
[('Natural', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'PROPN'), ('Network', 'PROPN'), ('Analysis', 'PROPN'), ('Develop', 'VERB'), ('Conceptual', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Natural', 'compound'), ('Language', 'compound'), ('Processing', 'dobj'), ('Network', 'compound'), ('Analysis', 'conj'), ('Develop', 'xcomp'), ('Conceptual', 'amod'), (' ', 'dobj')]

>> Bigrams: 
[[Natural, Language], [Language, Processing], [Processing, Network], [Network, Analysis], [Analysis, Develop], [Develop, Conceptual], [Conceptual,  ]]

>> Trigrams: 
[[Natural, Language, Processing], [Language, Processing, Network], [Processing, Network, Analysis], [Network, Analysis, Develop], [Analysis, Develop, Conceptual], [Develop, Conceptual,  ]]

>> Noun Phrases are: 
[Natural Language Processing, Network Analysis]

>> Named Entities are: 
[('Using Natural Language Processing and Network Analysis to Develop a Conceptual  ', 'WORK_OF_ART')] 


================================ Paragraph 873 =================================

Framework for Medication Therapy Management Research." AMIA ... Annual Symposium  

------------------- Sentence 1 -------------------

Framework for Medication Therapy Management Research." 


>> Tokens are: 
[Framework, Medication, Therapy, Management, Research, ., "] 

>> PoS Tags are: 
[('Framework', 'PROPN'), ('Medication', 'PROPN'), ('Therapy', 'PROPN'), ('Management', 'PROPN'), ('Research', 'PROPN'), ('.', 'PUNCT'), ('"', 'PUNCT')] 

>> Dependency Tags are: 
[('Framework', 'ROOT'), ('Medication', 'compound'), ('Therapy', 'compound'), ('Management', 'compound'), ('Research', 'pobj'), ('.', 'punct'), ('"', 'punct')]

>> Bigrams: 
[[Framework, Medication], [Medication, Therapy], [Therapy, Management], [Management, Research], [Research, .], [., "]]

>> Trigrams: 
[[Framework, Medication, Therapy], [Medication, Therapy, Management], [Therapy, Management, Research], [Management, Research, .], [Research, ., "]]

>> Noun Phrases are: 
[Framework, Medication Therapy Management Research]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

AMIA ... 


>> Tokens are: 
[AMIA, ...] 

>> PoS Tags are: 
[('AMIA', 'NOUN'), ('...', 'PUNCT')] 

>> Dependency Tags are: 
[('AMIA', 'ROOT'), ('...', 'punct')]

>> Bigrams: 
[[AMIA, ...]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[AMIA]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

Annual Symposium   


>> Tokens are: 
[Annual, Symposium,  ] 

>> PoS Tags are: 
[('Annual', 'PROPN'), ('Symposium', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Annual', 'amod'), ('Symposium', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[Annual, Symposium], [Symposium,  ]]

>> Trigrams: 
[[Annual, Symposium,  ]]

>> Noun Phrases are: 
[Annual Symposium]

>> Named Entities are: 
[] 


================================ Paragraph 874 =================================

proceedings. AMIA Symposium. U.S. National Library of Medicine, n.d. Web. 19 Mar. 2017  

------------------- Sentence 1 -------------------

proceedings. 


>> Tokens are: 
[proceedings, .] 

>> PoS Tags are: 
[('proceedings', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('proceedings', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[proceedings, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[proceedings]

>> Named Entities are: 
[] 

------------------- Sentence 2 -------------------

AMIA Symposium. 


>> Tokens are: 
[AMIA, Symposium, .] 

>> PoS Tags are: 
[('AMIA', 'PROPN'), ('Symposium', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('AMIA', 'compound'), ('Symposium', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[AMIA, Symposium], [Symposium, .]]

>> Trigrams: 
[[AMIA, Symposium, .]]

>> Noun Phrases are: 
[AMIA Symposium]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

U.S. National Library of Medicine, n.d. 


>> Tokens are: 
[U.S., National, Library, Medicine, ,, n.d, .] 

>> PoS Tags are: 
[('U.S.', 'PROPN'), ('National', 'PROPN'), ('Library', 'PROPN'), ('Medicine', 'PROPN'), (',', 'PUNCT'), ('n.d', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('U.S.', 'compound'), ('National', 'compound'), ('Library', 'ROOT'), ('Medicine', 'pobj'), (',', 'punct'), ('n.d', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[U.S., National], [National, Library], [Library, Medicine], [Medicine, ,], [,, n.d], [n.d, .]]

>> Trigrams: 
[[U.S., National, Library], [National, Library, Medicine], [Library, Medicine, ,], [Medicine, ,, n.d], [,, n.d, .]]

>> Noun Phrases are: 
[U.S. National Library, Medicine, n.d]

>> Named Entities are: 
[('U.S. National Library of Medicine', 'ORG')] 

------------------- Sentence 4 -------------------

Web. 


>> Tokens are: 
[Web, .] 

>> PoS Tags are: 
[('Web', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Web', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Web, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Web]

>> Named Entities are: 
[] 

------------------- Sentence 5 -------------------

19 Mar. 2017   


>> Tokens are: 
[19, Mar., 2017,  ] 

>> PoS Tags are: 
[('19', 'NUM'), ('Mar.', 'PROPN'), ('2017', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('19', 'nummod'), ('Mar.', 'ROOT'), ('2017', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[19, Mar.], [Mar., 2017], [2017,  ]]

>> Trigrams: 
[[19, Mar., 2017], [Mar., 2017,  ]]

>> Noun Phrases are: 
[19 Mar.]

>> Named Entities are: 
[('19', 'CARDINAL'), ('2017', 'DATE')] 


================================ Paragraph 875 =================================

[107] Ogallo, W., & Kanter, A. S. (2017, February 10). Using Natural Language Processing  

------------------- Sentence 1 -------------------

[107] Ogallo, W., & Kanter, A. S. (2017, February 10). 


>> Tokens are: 
[[, 107, ], Ogallo, ,, W., ,, &, Kanter, ,, A., S., (, 2017, ,, February, 10, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('107', 'NUM'), (']', 'PUNCT'), ('Ogallo', 'PROPN'), (',', 'PUNCT'), ('W.', 'PROPN'), (',', 'PUNCT'), ('&', 'CCONJ'), ('Kanter', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('S.', 'PROPN'), ('(', 'PUNCT'), ('2017', 'NUM'), (',', 'PUNCT'), ('February', 'PROPN'), ('10', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('107', 'dep'), (']', 'dep'), ('Ogallo', 'ROOT'), (',', 'punct'), ('W.', 'conj'), (',', 'punct'), ('&', 'cc'), ('Kanter', 'conj'), (',', 'punct'), ('A.', 'compound'), ('S.', 'conj'), ('(', 'punct'), ('2017', 'appos'), (',', 'punct'), ('February', 'appos'), ('10', 'nummod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 107], [107, ]], [], Ogallo], [Ogallo, ,], [,, W.], [W., ,], [,, &], [&, Kanter], [Kanter, ,], [,, A.], [A., S.], [S., (], [(, 2017], [2017, ,], [,, February], [February, 10], [10, )], [), .]]

>> Trigrams: 
[[[, 107, ]], [107, ], Ogallo], [], Ogallo, ,], [Ogallo, ,, W.], [,, W., ,], [W., ,, &], [,, &, Kanter], [&, Kanter, ,], [Kanter, ,, A.], [,, A., S.], [A., S., (], [S., (, 2017], [(, 2017, ,], [2017, ,, February], [,, February, 10], [February, 10, )], [10, ), .]]

>> Noun Phrases are: 
[[107] Ogallo, W., Kanter, A. S., February]

>> Named Entities are: 
[('107', 'CARDINAL'), ('A. S.', 'PERSON'), ('2017, February 10', 'DATE')] 

------------------- Sentence 2 -------------------

Using Natural Language Processing   


>> Tokens are: 
[Natural, Language, Processing,  ] 

>> PoS Tags are: 
[('Natural', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Natural', 'compound'), ('Language', 'compound'), ('Processing', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[Natural, Language], [Language, Processing], [Processing,  ]]

>> Trigrams: 
[[Natural, Language, Processing], [Language, Processing,  ]]

>> Noun Phrases are: 
[Natural Language Processing]

>> Named Entities are: 
[] 


================================ Paragraph 876 =================================

and Network Analysis to Develop a Conceptual Framework for Medication Therapy  

------------------- Sentence 1 -------------------

and Network Analysis to Develop a Conceptual Framework for Medication Therapy   


>> Tokens are: 
[Network, Analysis, Develop, Conceptual, Framework, Medication, Therapy,  ] 

>> PoS Tags are: 
[('Network', 'PROPN'), ('Analysis', 'PROPN'), ('Develop', 'VERB'), ('Conceptual', 'PROPN'), ('Framework', 'PROPN'), ('Medication', 'PROPN'), ('Therapy', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Network', 'compound'), ('Analysis', 'ROOT'), ('Develop', 'relcl'), ('Conceptual', 'compound'), ('Framework', 'dobj'), ('Medication', 'compound'), ('Therapy', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Network, Analysis], [Analysis, Develop], [Develop, Conceptual], [Conceptual, Framework], [Framework, Medication], [Medication, Therapy], [Therapy,  ]]

>> Trigrams: 
[[Network, Analysis, Develop], [Analysis, Develop, Conceptual], [Develop, Conceptual, Framework], [Conceptual, Framework, Medication], [Framework, Medication, Therapy], [Medication, Therapy,  ]]

>> Noun Phrases are: 
[and Network Analysis, a Conceptual Framework, Medication Therapy]

>> Named Entities are: 
[('Network Analysis to Develop a Conceptual Framework for Medication Therapy', 'ORG')] 


================================ Paragraph 877 =================================

Management Research. Retrieved April 10, 2017, from  

------------------- Sentence 1 -------------------

Management Research. 


>> Tokens are: 
[Management, Research, .] 

>> PoS Tags are: 
[('Management', 'PROPN'), ('Research', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Management', 'compound'), ('Research', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Management, Research], [Research, .]]

>> Trigrams: 
[[Management, Research, .]]

>> Noun Phrases are: 
[Management Research]

>> Named Entities are: 
[('Management Research', 'ORG')] 

------------------- Sentence 2 -------------------

Retrieved April 10, 2017, from   


>> Tokens are: 
[Retrieved, April, 10, ,, 2017, ,,  ] 

>> PoS Tags are: 
[('Retrieved', 'VERB'), ('April', 'PROPN'), ('10', 'NUM'), (',', 'PUNCT'), ('2017', 'NUM'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Retrieved', 'ROOT'), ('April', 'npadvmod'), ('10', 'nummod'), (',', 'punct'), ('2017', 'nummod'), (',', 'punct'), (' ', 'pobj')]

>> Bigrams: 
[[Retrieved, April], [April, 10], [10, ,], [,, 2017], [2017, ,], [,,  ]]

>> Trigrams: 
[[Retrieved, April, 10], [April, 10, ,], [10, ,, 2017], [,, 2017, ,], [2017, ,,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('April 10, 2017', 'DATE')] 


================================ Paragraph 878 =================================

https://www.ncbi.nlm.nih.gov/pubmed/28269895?dopt=Abstract  

------------------- Sentence 1 -------------------

https://www.ncbi.nlm.nih.gov/pubmed/28269895?dopt=Abstract   


>> Tokens are: 
[https://www.ncbi.nlm.nih.gov/pubmed/28269895?dopt=Abstract,  ] 

>> PoS Tags are: 
[('https://www.ncbi.nlm.nih.gov/pubmed/28269895?dopt=Abstract', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('https://www.ncbi.nlm.nih.gov/pubmed/28269895?dopt=Abstract', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[https://www.ncbi.nlm.nih.gov/pubmed/28269895?dopt=Abstract,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[https://www.ncbi.nlm.nih.gov/pubmed/28269895?dopt=Abstract]

>> Named Entities are: 
[] 


================================ Paragraph 879 =================================

[108] Ochoa, A. (2016, May 25). Meet the Pilot: Smart Earpiece Language Translator.  

------------------- Sentence 1 -------------------

[108] Ochoa, A. (2016, May 25). 


>> Tokens are: 
[[, 108, ], Ochoa, ,, A., (, 2016, ,, 25, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('108', 'NUM'), (']', 'PUNCT'), ('Ochoa', 'PROPN'), (',', 'PUNCT'), ('A.', 'NOUN'), ('(', 'PUNCT'), ('2016', 'NUM'), (',', 'PUNCT'), ('25', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('108', 'dep'), (']', 'punct'), ('Ochoa', 'ROOT'), (',', 'punct'), ('A.', 'conj'), ('(', 'punct'), ('2016', 'appos'), (',', 'punct'), ('25', 'nummod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 108], [108, ]], [], Ochoa], [Ochoa, ,], [,, A.], [A., (], [(, 2016], [2016, ,], [,, 25], [25, )], [), .]]

>> Trigrams: 
[[[, 108, ]], [108, ], Ochoa], [], Ochoa, ,], [Ochoa, ,, A.], [,, A., (], [A., (, 2016], [(, 2016, ,], [2016, ,, 25], [,, 25, )], [25, ), .]]

>> Noun Phrases are: 
[[108] Ochoa, A.]

>> Named Entities are: 
[('108', 'CARDINAL'), ('2016', 'DATE'), ('May 25', 'DATE')] 

------------------- Sentence 2 -------------------

Meet the Pilot: Smart Earpiece Language Translator. 


>> Tokens are: 
[Meet, Pilot, :, Smart, Earpiece, Language, Translator, .] 

>> PoS Tags are: 
[('Meet', 'VERB'), ('Pilot', 'PROPN'), (':', 'PUNCT'), ('Smart', 'PROPN'), ('Earpiece', 'PROPN'), ('Language', 'PROPN'), ('Translator', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Meet', 'ROOT'), ('Pilot', 'dobj'), (':', 'punct'), ('Smart', 'compound'), ('Earpiece', 'compound'), ('Language', 'compound'), ('Translator', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[Meet, Pilot], [Pilot, :], [:, Smart], [Smart, Earpiece], [Earpiece, Language], [Language, Translator], [Translator, .]]

>> Trigrams: 
[[Meet, Pilot, :], [Pilot, :, Smart], [:, Smart, Earpiece], [Smart, Earpiece, Language], [Earpiece, Language, Translator], [Language, Translator, .]]

>> Noun Phrases are: 
[the Pilot]

>> Named Entities are: 
[] 

------------------- Sentence 3 -------------------

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[] 


================================ Paragraph 880 =================================

Retrieved April 10, 2017, from https://www.indiegogo.com/projects/meet-the-pilot-smart- 

------------------- Sentence 1 -------------------

Retrieved April 10, 2017, from https://www.indiegogo.com/projects/meet-the-pilot-smart- 


>> Tokens are: 
[Retrieved, April, 10, ,, 2017, ,, https://www.indiegogo.com/projects/meet-the-pilot-smart-] 

>> PoS Tags are: 
[('Retrieved', 'VERB'), ('April', 'PROPN'), ('10', 'NUM'), (',', 'PUNCT'), ('2017', 'NUM'), (',', 'PUNCT'), ('https://www.indiegogo.com/projects/meet-the-pilot-smart-', 'NOUN')] 

>> Dependency Tags are: 
[('Retrieved', 'ROOT'), ('April', 'npadvmod'), ('10', 'nummod'), (',', 'punct'), ('2017', 'nummod'), (',', 'punct'), ('https://www.indiegogo.com/projects/meet-the-pilot-smart-', 'pobj')]

>> Bigrams: 
[[Retrieved, April], [April, 10], [10, ,], [,, 2017], [2017, ,], [,, https://www.indiegogo.com/projects/meet-the-pilot-smart-]]

>> Trigrams: 
[[Retrieved, April, 10], [April, 10, ,], [10, ,, 2017], [,, 2017, ,], [2017, ,, https://www.indiegogo.com/projects/meet-the-pilot-smart-]]

>> Noun Phrases are: 
[https://www.indiegogo.com/projects/meet-the-pilot-smart-]

>> Named Entities are: 
[('April 10, 2017', 'DATE')] 


================================ Paragraph 881 =================================

earpiece-language-translator-headphones-travel 

------------------- Sentence 1 -------------------

earpiece-language-translator-headphones-travel 


>> Tokens are: 
[earpiece, -, language, -, translator, -, headphones, -, travel] 

>> PoS Tags are: 
[('earpiece', 'NOUN'), ('-', 'PUNCT'), ('language', 'NOUN'), ('-', 'PUNCT'), ('translator', 'NOUN'), ('-', 'PUNCT'), ('headphones', 'NOUN'), ('-', 'PUNCT'), ('travel', 'NOUN')] 

>> Dependency Tags are: 
[('earpiece', 'amod'), ('-', 'punct'), ('language', 'compound'), ('-', 'punct'), ('translator', 'compound'), ('-', 'punct'), ('headphones', 'compound'), ('-', 'punct'), ('travel', 'ROOT')]

>> Bigrams: 
[[earpiece, -], [-, language], [language, -], [-, translator], [translator, -], [-, headphones], [headphones, -], [-, travel]]

>> Trigrams: 
[[earpiece, -, language], [-, language, -], [language, -, translator], [-, translator, -], [translator, -, headphones], [-, headphones, -], [headphones, -, travel]]

>> Noun Phrases are: 
[earpiece-language-translator-headphones-travel]

>> Named Entities are: 
[] 
