				 *** Text Processing using Stanza *** 


================================ Paragraph 1 =================================

IBM Services  White Paper  


------------------- Sentence 1 -------------------

 IBM Services  White Paper 

Tokens are: 
>> ['IBM', 'Services', 'White', 'Paper'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('Services', 'PROPN'), ('White', 'ADJ'), ('Paper', 'PROPN')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('Services', 'NNPS'), ('White', 'NNP'), ('Paper', 'NNP')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('Services', 'Service'), ('White', 'White'), ('Paper', 'Paper')] 

 Dependency tags are: 
>> [(('IBM', 'Services'), 'compound'), (('Services', 'Paper'), 'compound'), (('White', 'Paper'), 'amod'), (('Paper', 'root'), 'root')]

 Named Entites are: 
>> [('IBM Services', 'ORG')]

================================ Paragraph 2 =================================

Beyond the hype:   A guide to understanding and  successfully implementing artificial  intelligence within your business


------------------- Sentence 1 -------------------

 Beyond the hype:   A guide to understanding and  successfully implementing artificial  intelligence within your business 

Tokens are: 
>> ['Beyond', 'the', 'hype', ':', 'A', 'guide', 'to', 'understanding', 'and', 'successfully', 'implementing', 'artificial', 'intelligence', 'within', 'your', 'business'] 

 UPOS tags are: 
>> [('Beyond', 'ADP'), ('the', 'DET'), ('hype', 'NOUN'), (':', 'PUNCT'), ('A', 'DET'), ('guide', 'NOUN'), ('to', 'ADP'), ('understanding', 'VERB'), ('and', 'CCONJ'), ('successfully', 'ADV'), ('implementing', 'VERB'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('within', 'ADP'), ('your', 'PRON'), ('business', 'NOUN')] 

 XPOS tags are: 
>> [('Beyond', 'IN'), ('the', 'DT'), ('hype', 'NN'), (':', ':'), ('A', 'DT'), ('guide', 'NN'), ('to', 'IN'), ('understanding', 'VBG'), ('and', 'CC'), ('successfully', 'RB'), ('implementing', 'VBG'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('within', 'IN'), ('your', 'PRP$'), ('business', 'NN')] 

 Lemmas are: 
>> [('Beyond', 'beyond'), ('the', 'the'), ('hype', 'hype'), (':', ':'), ('A', 'a'), ('guide', 'guide'), ('to', 'to'), ('understanding', 'understand'), ('and', 'and'), ('successfully', 'successfully'), ('implementing', 'implement'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('within', 'within'), ('your', 'you'), ('business', 'business')] 

 Dependency tags are: 
>> [(('Beyond', 'hype'), 'case'), (('the', 'hype'), 'det'), (('hype', 'root'), 'root'), ((':', 'guide'), 'punct'), (('A', 'guide'), 'det'), (('guide', 'hype'), 'appos'), (('to', 'understanding'), 'mark'), (('understanding', 'guide'), 'acl'), (('and', 'implementing'), 'cc'), (('successfully', 'implementing'), 'advmod'), (('implementing', 'understanding'), 'conj'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'implementing'), 'obj'), (('within', 'business'), 'case'), (('your', 'business'), 'nmod:poss'), (('business', 'implementing'), 'obl')]

 Named Entites are: 
>> []

================================ Paragraph 3 =================================

2     Beyond the hype: A guide to understanding and successfully implementing artificial intelligence within your business 


------------------- Sentence 1 -------------------

 2     Beyond the hype: A guide to understanding and successfully implementing artificial intelligence within your business 

Tokens are: 
>> ['2', 'Beyond', 'the', 'hype', ':', 'A', 'guide', 'to', 'understanding', 'and', 'successfully', 'implementing', 'artificial', 'intelligence', 'within', 'your', 'business'] 

 UPOS tags are: 
>> [('2', 'NUM'), ('Beyond', 'ADP'), ('the', 'DET'), ('hype', 'NOUN'), (':', 'PUNCT'), ('A', 'DET'), ('guide', 'NOUN'), ('to', 'ADP'), ('understanding', 'VERB'), ('and', 'CCONJ'), ('successfully', 'ADV'), ('implementing', 'VERB'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('within', 'ADP'), ('your', 'PRON'), ('business', 'NOUN')] 

 XPOS tags are: 
>> [('2', 'LS'), ('Beyond', 'IN'), ('the', 'DT'), ('hype', 'NN'), (':', ':'), ('A', 'DT'), ('guide', 'NN'), ('to', 'IN'), ('understanding', 'VBG'), ('and', 'CC'), ('successfully', 'RB'), ('implementing', 'VBG'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('within', 'IN'), ('your', 'PRP$'), ('business', 'NN')] 

 Lemmas are: 
>> [('2', '2'), ('Beyond', 'beyond'), ('the', 'the'), ('hype', 'hype'), (':', ':'), ('A', 'a'), ('guide', 'guide'), ('to', 'to'), ('understanding', 'understand'), ('and', 'and'), ('successfully', 'successfully'), ('implementing', 'implement'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('within', 'within'), ('your', 'you'), ('business', 'business')] 

 Dependency tags are: 
>> [(('2', 'hype'), 'nummod'), (('Beyond', 'hype'), 'case'), (('the', 'hype'), 'det'), (('hype', 'root'), 'root'), ((':', 'guide'), 'punct'), (('A', 'guide'), 'det'), (('guide', 'hype'), 'appos'), (('to', 'understanding'), 'mark'), (('understanding', 'guide'), 'acl'), (('and', 'implementing'), 'cc'), (('successfully', 'implementing'), 'advmod'), (('implementing', 'understanding'), 'conj'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'implementing'), 'obj'), (('within', 'business'), 'case'), (('your', 'business'), 'nmod:poss'), (('business', 'implementing'), 'obl')]

 Named Entites are: 
>> [('2', 'CARDINAL')]

================================ Paragraph 4 =================================

Contents  2 Introduction 


------------------- Sentence 1 -------------------

 Contents  2 Introduction 

Tokens are: 
>> ['Contents', '2', 'Introduction'] 

 UPOS tags are: 
>> [('Contents', 'NOUN'), ('2', 'NUM'), ('Introduction', 'NOUN')] 

 XPOS tags are: 
>> [('Contents', 'NNS'), ('2', 'CD'), ('Introduction', 'NN')] 

 Lemmas are: 
>> [('Contents', 'content'), ('2', '2'), ('Introduction', 'introduction')] 

 Dependency tags are: 
>> [(('Contents', 'root'), 'root'), (('2', 'Contents'), 'dep'), (('Introduction', 'Contents'), 'appos')]

 Named Entites are: 
>> [('2', 'CARDINAL')]

================================ Paragraph 5 =================================

 3 What is AI? 


------------------- Sentence 1 -------------------

 3 What is AI? 

Tokens are: 
>> ['3', 'What', 'is', 'AI', '?'] 

 UPOS tags are: 
>> [('3', 'NUM'), ('What', 'PRON'), ('is', 'AUX'), ('AI', 'PRON'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('3', 'LS'), ('What', 'WP'), ('is', 'VBZ'), ('AI', 'PRP'), ('?', '.')] 

 Lemmas are: 
>> [('3', '3'), ('What', 'what'), ('is', 'be'), ('AI', 'ai'), ('?', '?')] 

 Dependency tags are: 
>> [(('3', 'What'), 'nummod'), (('What', 'root'), 'root'), (('is', 'What'), 'cop'), (('AI', 'What'), 'nsubj'), (('?', 'What'), 'punct')]

 Named Entites are: 
>> [('3', 'CARDINAL')]

================================ Paragraph 6 =================================

 5 How does an AI system learn? 


------------------- Sentence 1 -------------------

 5 How does an AI system learn? 

Tokens are: 
>> ['5', 'How', 'does', 'an', 'AI', 'system', 'learn', '?'] 

 UPOS tags are: 
>> [('5', 'NUM'), ('How', 'ADV'), ('does', 'AUX'), ('an', 'DET'), ('AI', 'NOUN'), ('system', 'NOUN'), ('learn', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('5', 'LS'), ('How', 'WRB'), ('does', 'VBZ'), ('an', 'DT'), ('AI', 'NN'), ('system', 'NN'), ('learn', 'VB'), ('?', '.')] 

 Lemmas are: 
>> [('5', '5'), ('How', 'how'), ('does', 'do'), ('an', 'a'), ('AI', 'ai'), ('system', 'system'), ('learn', 'learn'), ('?', '?')] 

 Dependency tags are: 
>> [(('5', 'learn'), 'nummod'), (('How', 'learn'), 'advmod'), (('does', 'learn'), 'aux'), (('an', 'system'), 'det'), (('AI', 'system'), 'compound'), (('system', 'learn'), 'nsubj'), (('learn', 'root'), 'root'), (('?', 'learn'), 'punct')]

 Named Entites are: 
>> [('5', 'CARDINAL')]

================================ Paragraph 7 =================================

 5 What has driven the development of AI? 


------------------- Sentence 1 -------------------

 5 What has driven the development of AI? 

Tokens are: 
>> ['5', 'What', 'has', 'driven', 'the', 'development', 'of', 'AI', '?'] 

 UPOS tags are: 
>> [('5', 'NUM'), ('What', 'PRON'), ('has', 'AUX'), ('driven', 'VERB'), ('the', 'DET'), ('development', 'NOUN'), ('of', 'ADP'), ('AI', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('5', 'LS'), ('What', 'WP'), ('has', 'VBZ'), ('driven', 'VBN'), ('the', 'DT'), ('development', 'NN'), ('of', 'IN'), ('AI', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('5', '5'), ('What', 'what'), ('has', 'have'), ('driven', 'drive'), ('the', 'the'), ('development', 'development'), ('of', 'of'), ('AI', 'ai'), ('?', '?')] 

 Dependency tags are: 
>> [(('5', 'driven'), 'dep'), (('What', 'driven'), 'nsubj'), (('has', 'driven'), 'aux'), (('driven', 'root'), 'root'), (('the', 'development'), 'det'), (('development', 'driven'), 'obj'), (('of', 'AI'), 'case'), (('AI', 'development'), 'nmod'), (('?', 'driven'), 'punct')]

 Named Entites are: 
>> [('5', 'CARDINAL')]

================================ Paragraph 8 =================================

 7 Where are we today with AI?  


------------------- Sentence 1 -------------------

 7 Where are we today with AI? 

Tokens are: 
>> ['7', 'Where', 'are', 'we', 'today', 'with', 'AI', '?'] 

 UPOS tags are: 
>> [('7', 'NUM'), ('Where', 'ADV'), ('are', 'AUX'), ('we', 'PRON'), ('today', 'NOUN'), ('with', 'ADP'), ('AI', 'PROPN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('7', 'LS'), ('Where', 'WRB'), ('are', 'VBP'), ('we', 'PRP'), ('today', 'NN'), ('with', 'IN'), ('AI', 'NNP'), ('?', '.')] 

 Lemmas are: 
>> [('7', '7'), ('Where', 'where'), ('are', 'be'), ('we', 'we'), ('today', 'today'), ('with', 'with'), ('AI', 'AI'), ('?', '?')] 

 Dependency tags are: 
>> [(('7', 'Where'), 'nummod'), (('Where', 'root'), 'root'), (('are', 'Where'), 'cop'), (('we', 'Where'), 'nsubj'), (('today', 'Where'), 'obl:tmod'), (('with', 'AI'), 'case'), (('AI', 'today'), 'nmod'), (('?', 'Where'), 'punct')]

 Named Entites are: 
>> [('7', 'CARDINAL')]

================================ Paragraph 9 =================================

 8 What are the areas in which AI provides the most   value today?  


------------------- Sentence 1 -------------------

 8 What are the areas in which AI provides the most   value today? 

Tokens are: 
>> ['8', 'What', 'are', 'the', 'areas', 'in', 'which', 'AI', 'provides', 'the', 'most', 'value', 'today', '?'] 

 UPOS tags are: 
>> [('8', 'NUM'), ('What', 'PRON'), ('are', 'AUX'), ('the', 'DET'), ('areas', 'NOUN'), ('in', 'ADP'), ('which', 'PRON'), ('AI', 'NOUN'), ('provides', 'VERB'), ('the', 'DET'), ('most', 'ADJ'), ('value', 'NOUN'), ('today', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('8', 'LS'), ('What', 'WP'), ('are', 'VBP'), ('the', 'DT'), ('areas', 'NNS'), ('in', 'IN'), ('which', 'WDT'), ('AI', 'NN'), ('provides', 'VBZ'), ('the', 'DT'), ('most', 'JJS'), ('value', 'NN'), ('today', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('8', '8'), ('What', 'what'), ('are', 'be'), ('the', 'the'), ('areas', 'area'), ('in', 'in'), ('which', 'which'), ('AI', 'ai'), ('provides', 'provide'), ('the', 'the'), ('most', 'most'), ('value', 'value'), ('today', 'today'), ('?', '?')] 

 Dependency tags are: 
>> [(('8', 'What'), 'nummod'), (('What', 'root'), 'root'), (('are', 'What'), 'cop'), (('the', 'areas'), 'det'), (('areas', 'What'), 'nsubj'), (('in', 'which'), 'case'), (('which', 'provides'), 'obl'), (('AI', 'provides'), 'nsubj'), (('provides', 'areas'), 'acl:relcl'), (('the', 'value'), 'det'), (('most', 'value'), 'amod'), (('value', 'provides'), 'obj'), (('today', 'provides'), 'obl:tmod'), (('?', 'What'), 'punct')]

 Named Entites are: 
>> [('8', 'CARDINAL'), ('AI', 'ORG'), ('today', 'DATE')]

================================ Paragraph 10 =================================

 8 What are some examples of successful implementations?  


------------------- Sentence 1 -------------------

 8 What are some examples of successful implementations? 

Tokens are: 
>> ['8', 'What', 'are', 'some', 'examples', 'of', 'successful', 'implementations', '?'] 

 UPOS tags are: 
>> [('8', 'NUM'), ('What', 'PRON'), ('are', 'AUX'), ('some', 'DET'), ('examples', 'NOUN'), ('of', 'ADP'), ('successful', 'ADJ'), ('implementations', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('8', 'LS'), ('What', 'WP'), ('are', 'VBP'), ('some', 'DT'), ('examples', 'NNS'), ('of', 'IN'), ('successful', 'JJ'), ('implementations', 'NNS'), ('?', '.')] 

 Lemmas are: 
>> [('8', '8'), ('What', 'what'), ('are', 'be'), ('some', 'some'), ('examples', 'example'), ('of', 'of'), ('successful', 'successful'), ('implementations', 'implementation'), ('?', '?')] 

 Dependency tags are: 
>> [(('8', 'What'), 'nummod'), (('What', 'root'), 'root'), (('are', 'What'), 'cop'), (('some', 'examples'), 'det'), (('examples', 'What'), 'nsubj'), (('of', 'implementations'), 'case'), (('successful', 'implementations'), 'amod'), (('implementations', 'examples'), 'nmod'), (('?', 'What'), 'punct')]

 Named Entites are: 
>> [('8', 'CARDINAL')]

================================ Paragraph 11 =================================

 9 Best practices to successfully implement   AI within an organization  


------------------- Sentence 1 -------------------

 9 Best practices to successfully implement   AI within an organization 

Tokens are: 
>> ['9', 'Best', 'practices', 'to', 'successfully', 'implement', 'AI', 'within', 'an', 'organization'] 

 UPOS tags are: 
>> [('9', 'NUM'), ('Best', 'ADJ'), ('practices', 'NOUN'), ('to', 'PART'), ('successfully', 'ADV'), ('implement', 'VERB'), ('AI', 'PRON'), ('within', 'ADP'), ('an', 'DET'), ('organization', 'NOUN')] 

 XPOS tags are: 
>> [('9', 'CD'), ('Best', 'JJS'), ('practices', 'NNS'), ('to', 'TO'), ('successfully', 'RB'), ('implement', 'VB'), ('AI', 'PRP'), ('within', 'IN'), ('an', 'DT'), ('organization', 'NN')] 

 Lemmas are: 
>> [('9', '9'), ('Best', 'good'), ('practices', 'practice'), ('to', 'to'), ('successfully', 'successfully'), ('implement', 'implement'), ('AI', 'ai'), ('within', 'within'), ('an', 'a'), ('organization', 'organization')] 

 Dependency tags are: 
>> [(('9', 'practices'), 'nummod'), (('Best', 'practices'), 'amod'), (('practices', 'root'), 'root'), (('to', 'implement'), 'mark'), (('successfully', 'implement'), 'advmod'), (('implement', 'practices'), 'acl'), (('AI', 'implement'), 'obj'), (('within', 'organization'), 'case'), (('an', 'organization'), 'det'), (('organization', 'implement'), 'obl')]

 Named Entites are: 
>> [('9', 'CARDINAL'), ('AI', 'ORG')]

================================ Paragraph 12 =================================

 11  Pitfalls of AI implementation  


------------------- Sentence 1 -------------------

 11  Pitfalls of AI implementation 

Tokens are: 
>> ['11', 'Pitfalls', 'of', 'AI', 'implementation'] 

 UPOS tags are: 
>> [('11', 'NUM'), ('Pitfalls', 'NOUN'), ('of', 'ADP'), ('AI', 'NOUN'), ('implementation', 'NOUN')] 

 XPOS tags are: 
>> [('11', 'CD'), ('Pitfalls', 'NNS'), ('of', 'IN'), ('AI', 'NN'), ('implementation', 'NN')] 

 Lemmas are: 
>> [('11', '11'), ('Pitfalls', 'pitfall'), ('of', 'of'), ('AI', 'ai'), ('implementation', 'implementation')] 

 Dependency tags are: 
>> [(('11', 'Pitfalls'), 'nummod'), (('Pitfalls', 'root'), 'root'), (('of', 'implementation'), 'case'), (('AI', 'implementation'), 'compound'), (('implementation', 'Pitfalls'), 'nmod')]

 Named Entites are: 
>> [('11', 'CARDINAL')]

================================ Paragraph 13 =================================

14 Summary 


------------------- Sentence 1 -------------------

 14 Summary 

Tokens are: 
>> ['14', 'Summary'] 

 UPOS tags are: 
>> [('14', 'NUM'), ('Summary', 'NOUN')] 

 XPOS tags are: 
>> [('14', 'CD'), ('Summary', 'NN')] 

 Lemmas are: 
>> [('14', '14'), ('Summary', 'summary')] 

 Dependency tags are: 
>> [(('14', 'Summary'), 'nummod'), (('Summary', 'root'), 'root')]

 Named Entites are: 
>> [('14', 'CARDINAL')]

================================ Paragraph 14 =================================

15 IBM Services 


------------------- Sentence 1 -------------------

 15 IBM Services 

Tokens are: 
>> ['15', 'IBM', 'Services'] 

 UPOS tags are: 
>> [('15', 'NUM'), ('IBM', 'PROPN'), ('Services', 'NOUN')] 

 XPOS tags are: 
>> [('15', 'CD'), ('IBM', 'NNP'), ('Services', 'NNS')] 

 Lemmas are: 
>> [('15', '15'), ('IBM', 'IBM'), ('Services', 'service')] 

 Dependency tags are: 
>> [(('15', 'Services'), 'nummod'), (('IBM', 'Services'), 'compound'), (('Services', 'root'), 'root')]

 Named Entites are: 
>> [('15', 'CARDINAL'), ('IBM Services', 'ORG')]

================================ Paragraph 15 =================================

18 About the authors 


------------------- Sentence 1 -------------------

 18 About the authors 

Tokens are: 
>> ['18', 'About', 'the', 'authors'] 

 UPOS tags are: 
>> [('18', 'NUM'), ('About', 'ADP'), ('the', 'DET'), ('authors', 'NOUN')] 

 XPOS tags are: 
>> [('18', 'CD'), ('About', 'IN'), ('the', 'DT'), ('authors', 'NNS')] 

 Lemmas are: 
>> [('18', '18'), ('About', 'about'), ('the', 'the'), ('authors', 'author')] 

 Dependency tags are: 
>> [(('18', 'root'), 'root'), (('About', 'authors'), 'case'), (('the', 'authors'), 'det'), (('authors', '18'), 'nmod')]

 Named Entites are: 
>> []

================================ Paragraph 16 =================================

18 Acknowledgements 


------------------- Sentence 1 -------------------

 18 Acknowledgements 

Tokens are: 
>> ['18', 'Acknowledgements'] 

 UPOS tags are: 
>> [('18', 'NUM'), ('Acknowledgements', 'NOUN')] 

 XPOS tags are: 
>> [('18', 'CD'), ('Acknowledgements', 'NNS')] 

 Lemmas are: 
>> [('18', '18'), ('Acknowledgements', 'acknowledgement')] 

 Dependency tags are: 
>> [(('18', 'Acknowledgements'), 'nummod'), (('Acknowledgements', 'root'), 'root')]

 Named Entites are: 
>> [('18', 'CARDINAL')]

================================ Paragraph 17 =================================

 18 Appendix 


------------------- Sentence 1 -------------------

 18 Appendix 

Tokens are: 
>> ['18', 'Appendix'] 

 UPOS tags are: 
>> [('18', 'NUM'), ('Appendix', 'NOUN')] 

 XPOS tags are: 
>> [('18', 'CD'), ('Appendix', 'NN')] 

 Lemmas are: 
>> [('18', '18'), ('Appendix', 'Appendix')] 

 Dependency tags are: 
>> [(('18', 'Appendix'), 'nummod'), (('Appendix', 'root'), 'root')]

 Named Entites are: 
>> [('18', 'CARDINAL')]

================================ Paragraph 18 =================================

Introduction To implement AI within your organization successfully you  need to understand what AI is, where it currently stands,  what value can provide to businesses and how it can be  successfully adopted. This white paper is written for  business leaders looking for practical advice on how to  leverage artificial intelligence (AI) for their organizations.  


------------------- Sentence 1 -------------------

 Introduction 

Tokens are: 
>> ['Introduction'] 

 UPOS tags are: 
>> [('Introduction', 'NOUN')] 

 XPOS tags are: 
>> [('Introduction', 'NN')] 

 Lemmas are: 
>> [('Introduction', 'introduction')] 

 Dependency tags are: 
>> [(('Introduction', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 To implement AI within your organization successfully you  need to understand what AI is, where it currently stands,  what value can provide to businesses and how it can be  successfully adopted. 

Tokens are: 
>> ['To', 'implement', 'AI', 'within', 'your', 'organization', 'successfully', 'you', 'need', 'to', 'understand', 'what', 'AI', 'is', ',', 'where', 'it', 'currently', 'stands', ',', 'what', 'value', 'can', 'provide', 'to', 'businesses', 'and', 'how', 'it', 'can', 'be', 'successfully', 'adopted', '.'] 

 UPOS tags are: 
>> [('To', 'PART'), ('implement', 'VERB'), ('AI', 'PRON'), ('within', 'ADP'), ('your', 'PRON'), ('organization', 'NOUN'), ('successfully', 'ADV'), ('you', 'PRON'), ('need', 'VERB'), ('to', 'PART'), ('understand', 'VERB'), ('what', 'PRON'), ('AI', 'VERB'), ('is', 'VERB'), (',', 'PUNCT'), ('where', 'SCONJ'), ('it', 'PRON'), ('currently', 'ADV'), ('stands', 'VERB'), (',', 'PUNCT'), ('what', 'DET'), ('value', 'NOUN'), ('can', 'AUX'), ('provide', 'VERB'), ('to', 'ADP'), ('businesses', 'NOUN'), ('and', 'CCONJ'), ('how', 'SCONJ'), ('it', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('successfully', 'ADV'), ('adopted', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('To', 'TO'), ('implement', 'VB'), ('AI', 'PRP'), ('within', 'IN'), ('your', 'PRP$'), ('organization', 'NN'), ('successfully', 'RB'), ('you', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('understand', 'VB'), ('what', 'WP'), ('AI', 'VBZ'), ('is', 'VBZ'), (',', ','), ('where', 'WRB'), ('it', 'PRP'), ('currently', 'RB'), ('stands', 'VBZ'), (',', ','), ('what', 'WDT'), ('value', 'NN'), ('can', 'MD'), ('provide', 'VB'), ('to', 'IN'), ('businesses', 'NNS'), ('and', 'CC'), ('how', 'WRB'), ('it', 'PRP'), ('can', 'MD'), ('be', 'VB'), ('successfully', 'RB'), ('adopted', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('To', 'to'), ('implement', 'implement'), ('AI', 'ai'), ('within', 'within'), ('your', 'you'), ('organization', 'organization'), ('successfully', 'successfully'), ('you', 'you'), ('need', 'need'), ('to', 'to'), ('understand', 'understand'), ('what', 'what'), ('AI', 'be'), ('is', 'be'), (',', ','), ('where', 'where'), ('it', 'it'), ('currently', 'currently'), ('stands', 'stand'), (',', ','), ('what', 'what'), ('value', 'value'), ('can', 'can'), ('provide', 'provide'), ('to', 'to'), ('businesses', 'business'), ('and', 'and'), ('how', 'how'), ('it', 'it'), ('can', 'can'), ('be', 'be'), ('successfully', 'successfully'), ('adopted', 'adopt'), ('.', '.')] 

 Dependency tags are: 
>> [(('To', 'implement'), 'mark'), (('implement', 'need'), 'advcl'), (('AI', 'implement'), 'obj'), (('within', 'organization'), 'case'), (('your', 'organization'), 'nmod:poss'), (('organization', 'implement'), 'obl'), (('successfully', 'implement'), 'advmod'), (('you', 'need'), 'nsubj'), (('need', 'root'), 'root'), (('to', 'understand'), 'mark'), (('understand', 'need'), 'xcomp'), (('what', 'understand'), 'obj'), (('AI', 'is'), 'cop'), (('is', 'understand'), 'ccomp'), ((',', 'is'), 'punct'), (('where', 'stands'), 'mark'), (('it', 'stands'), 'nsubj'), (('currently', 'stands'), 'advmod'), (('stands', 'is'), 'advcl'), ((',', 'provide'), 'punct'), (('what', 'value'), 'det'), (('value', 'provide'), 'nsubj'), (('can', 'provide'), 'aux'), (('provide', 'stands'), 'conj'), (('to', 'businesses'), 'case'), (('businesses', 'provide'), 'obl'), (('and', 'adopted'), 'cc'), (('how', 'adopted'), 'mark'), (('it', 'adopted'), 'nsubj:pass'), (('can', 'adopted'), 'aux'), (('be', 'adopted'), 'aux:pass'), (('successfully', 'adopted'), 'advmod'), (('adopted', 'provide'), 'conj'), (('.', 'need'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 3 -------------------

 This white paper is written for  business leaders looking for practical advice on how to  leverage artificial intelligence (AI) for their organizations. 

Tokens are: 
>> ['This', 'white', 'paper', 'is', 'written', 'for', 'business', 'leaders', 'looking', 'for', 'practical', 'advice', 'on', 'how', 'to', 'leverage', 'artificial', 'intelligence', '(', 'AI', ')', 'for', 'their', 'organizations', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('white', 'ADJ'), ('paper', 'NOUN'), ('is', 'AUX'), ('written', 'VERB'), ('for', 'ADP'), ('business', 'NOUN'), ('leaders', 'NOUN'), ('looking', 'VERB'), ('for', 'ADP'), ('practical', 'ADJ'), ('advice', 'NOUN'), ('on', 'SCONJ'), ('how', 'SCONJ'), ('to', 'PART'), ('leverage', 'VERB'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('(', 'PUNCT'), ('AI', 'NOUN'), (')', 'PUNCT'), ('for', 'ADP'), ('their', 'PRON'), ('organizations', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('white', 'JJ'), ('paper', 'NN'), ('is', 'VBZ'), ('written', 'VBN'), ('for', 'IN'), ('business', 'NN'), ('leaders', 'NNS'), ('looking', 'VBG'), ('for', 'IN'), ('practical', 'JJ'), ('advice', 'NN'), ('on', 'IN'), ('how', 'WRB'), ('to', 'TO'), ('leverage', 'VB'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('(', '-LRB-'), ('AI', 'NN'), (')', '-RRB-'), ('for', 'IN'), ('their', 'PRP$'), ('organizations', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('white', 'white'), ('paper', 'paper'), ('is', 'be'), ('written', 'write'), ('for', 'for'), ('business', 'business'), ('leaders', 'leader'), ('looking', 'look'), ('for', 'for'), ('practical', 'practical'), ('advice', 'advice'), ('on', 'on'), ('how', 'how'), ('to', 'to'), ('leverage', 'leverage'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('(', '('), ('AI', 'ai'), (')', ')'), ('for', 'for'), ('their', 'they'), ('organizations', 'organization'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'paper'), 'det'), (('white', 'paper'), 'amod'), (('paper', 'written'), 'nsubj:pass'), (('is', 'written'), 'aux:pass'), (('written', 'root'), 'root'), (('for', 'leaders'), 'case'), (('business', 'leaders'), 'compound'), (('leaders', 'written'), 'obl'), (('looking', 'leaders'), 'acl'), (('for', 'advice'), 'case'), (('practical', 'advice'), 'amod'), (('advice', 'looking'), 'obl'), (('on', 'leverage'), 'mark'), (('how', 'leverage'), 'mark'), (('to', 'leverage'), 'mark'), (('leverage', 'advice'), 'acl'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'leverage'), 'obj'), (('(', 'AI'), 'punct'), (('AI', 'intelligence'), 'appos'), ((')', 'AI'), 'punct'), (('for', 'organizations'), 'case'), (('their', 'organizations'), 'nmod:poss'), (('organizations', 'leverage'), 'obl'), (('.', 'written'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 19 =================================

The fact that AI has been hyped doesn’t take away from its  capabilities as a real value driver. Heavy investments have  been made in AI across multiple industries; the Chinese  government even made it one of their core sectors. And  companies like IBM, Microsoft, Google and Amazon are  leading the pack when it comes to utilizing data and AI.  


------------------- Sentence 1 -------------------

 The fact that AI has been hyped doesn’t take away from its  capabilities as a real value driver. 

Tokens are: 
>> ['The', 'fact', 'that', 'AI', 'has', 'been', 'hyped', 'does', 'n’t', 'take', 'away', 'from', 'its', 'capabilities', 'as', 'a', 'real', 'value', 'driver', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('fact', 'NOUN'), ('that', 'SCONJ'), ('AI', 'PRON'), ('has', 'AUX'), ('been', 'AUX'), ('hyped', 'VERB'), ('does', 'AUX'), ('n’t', 'PART'), ('take', 'VERB'), ('away', 'ADV'), ('from', 'ADP'), ('its', 'PRON'), ('capabilities', 'NOUN'), ('as', 'ADP'), ('a', 'DET'), ('real', 'ADJ'), ('value', 'NOUN'), ('driver', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('fact', 'NN'), ('that', 'IN'), ('AI', 'PRP'), ('has', 'VBZ'), ('been', 'VBN'), ('hyped', 'VBN'), ('does', 'VBZ'), ('n’t', 'RB'), ('take', 'VB'), ('away', 'RB'), ('from', 'IN'), ('its', 'PRP$'), ('capabilities', 'NNS'), ('as', 'IN'), ('a', 'DT'), ('real', 'JJ'), ('value', 'NN'), ('driver', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('fact', 'fact'), ('that', 'that'), ('AI', 'ai'), ('has', 'have'), ('been', 'be'), ('hyped', 'hype'), ('does', 'do'), ('n’t', 'not'), ('take', 'take'), ('away', 'away'), ('from', 'from'), ('its', 'its'), ('capabilities', 'capability'), ('as', 'as'), ('a', 'a'), ('real', 'real'), ('value', 'value'), ('driver', 'driver'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'fact'), 'det'), (('fact', 'take'), 'nsubj'), (('that', 'hyped'), 'mark'), (('AI', 'hyped'), 'nsubj:pass'), (('has', 'hyped'), 'aux'), (('been', 'hyped'), 'aux:pass'), (('hyped', 'fact'), 'acl'), (('does', 'take'), 'aux'), (('n’t', 'take'), 'advmod'), (('take', 'root'), 'root'), (('away', 'take'), 'advmod'), (('from', 'capabilities'), 'case'), (('its', 'capabilities'), 'nmod:poss'), (('capabilities', 'take'), 'obl'), (('as', 'driver'), 'case'), (('a', 'driver'), 'det'), (('real', 'driver'), 'amod'), (('value', 'driver'), 'compound'), (('driver', 'take'), 'obl'), (('.', 'take'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 2 -------------------

 Heavy investments have  been made in AI across multiple industries; the Chinese  government even made it one of their core sectors. 

Tokens are: 
>> ['Heavy', 'investments', 'have', 'been', 'made', 'in', 'AI', 'across', 'multiple', 'industries', ';', 'the', 'Chinese', 'government', 'even', 'made', 'it', 'one', 'of', 'their', 'core', 'sectors', '.'] 

 UPOS tags are: 
>> [('Heavy', 'ADJ'), ('investments', 'NOUN'), ('have', 'AUX'), ('been', 'AUX'), ('made', 'VERB'), ('in', 'ADP'), ('AI', 'NOUN'), ('across', 'ADP'), ('multiple', 'ADJ'), ('industries', 'NOUN'), (';', 'PUNCT'), ('the', 'DET'), ('Chinese', 'ADJ'), ('government', 'NOUN'), ('even', 'ADV'), ('made', 'VERB'), ('it', 'PRON'), ('one', 'NUM'), ('of', 'ADP'), ('their', 'PRON'), ('core', 'NOUN'), ('sectors', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Heavy', 'JJ'), ('investments', 'NNS'), ('have', 'VBP'), ('been', 'VBN'), ('made', 'VBN'), ('in', 'IN'), ('AI', 'NN'), ('across', 'IN'), ('multiple', 'JJ'), ('industries', 'NNS'), (';', ','), ('the', 'DT'), ('Chinese', 'JJ'), ('government', 'NN'), ('even', 'RB'), ('made', 'VBD'), ('it', 'PRP'), ('one', 'CD'), ('of', 'IN'), ('their', 'PRP$'), ('core', 'NN'), ('sectors', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Heavy', 'heavy'), ('investments', 'investment'), ('have', 'have'), ('been', 'be'), ('made', 'make'), ('in', 'in'), ('AI', 'ai'), ('across', 'across'), ('multiple', 'multiple'), ('industries', 'industry'), (';', ';'), ('the', 'the'), ('Chinese', 'Chinese'), ('government', 'government'), ('even', 'even'), ('made', 'make'), ('it', 'it'), ('one', 'one'), ('of', 'of'), ('their', 'they'), ('core', 'core'), ('sectors', 'sector'), ('.', '.')] 

 Dependency tags are: 
>> [(('Heavy', 'investments'), 'amod'), (('investments', 'made'), 'nsubj:pass'), (('have', 'made'), 'aux'), (('been', 'made'), 'aux:pass'), (('made', 'root'), 'root'), (('in', 'AI'), 'case'), (('AI', 'made'), 'obl'), (('across', 'industries'), 'case'), (('multiple', 'industries'), 'amod'), (('industries', 'made'), 'obl'), ((';', 'made'), 'punct'), (('the', 'government'), 'det'), (('Chinese', 'government'), 'amod'), (('government', 'made'), 'nsubj'), (('even', 'made'), 'advmod'), (('made', 'made'), 'parataxis'), (('it', 'made'), 'obj'), (('one', 'made'), 'xcomp'), (('of', 'sectors'), 'case'), (('their', 'sectors'), 'nmod:poss'), (('core', 'sectors'), 'compound'), (('sectors', 'one'), 'nmod'), (('.', 'made'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG'), ('Chinese', 'NORP')]

------------------- Sentence 3 -------------------

 And  companies like IBM, Microsoft, Google and Amazon are  leading the pack when it comes to utilizing data and AI. 

Tokens are: 
>> ['And', 'companies', 'like', 'IBM', ',', 'Microsoft', ',', 'Google', 'and', 'Amazon', 'are', 'leading', 'the', 'pack', 'when', 'it', 'comes', 'to', 'utilizing', 'data', 'and', 'AI', '.'] 

 UPOS tags are: 
>> [('And', 'CCONJ'), ('companies', 'NOUN'), ('like', 'ADP'), ('IBM', 'PROPN'), (',', 'PUNCT'), ('Microsoft', 'PROPN'), (',', 'PUNCT'), ('Google', 'PROPN'), ('and', 'CCONJ'), ('Amazon', 'PROPN'), ('are', 'AUX'), ('leading', 'VERB'), ('the', 'DET'), ('pack', 'NOUN'), ('when', 'SCONJ'), ('it', 'PRON'), ('comes', 'VERB'), ('to', 'SCONJ'), ('utilizing', 'VERB'), ('data', 'NOUN'), ('and', 'CCONJ'), ('AI', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('And', 'CC'), ('companies', 'NNS'), ('like', 'IN'), ('IBM', 'NNP'), (',', ','), ('Microsoft', 'NNP'), (',', ','), ('Google', 'NNP'), ('and', 'CC'), ('Amazon', 'NNP'), ('are', 'VBP'), ('leading', 'VBG'), ('the', 'DT'), ('pack', 'NN'), ('when', 'WRB'), ('it', 'PRP'), ('comes', 'VBZ'), ('to', 'IN'), ('utilizing', 'VBG'), ('data', 'NNS'), ('and', 'CC'), ('AI', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('And', 'and'), ('companies', 'company'), ('like', 'like'), ('IBM', 'IBM'), (',', ','), ('Microsoft', 'Microsoft'), (',', ','), ('Google', 'Google'), ('and', 'and'), ('Amazon', 'Amazon'), ('are', 'be'), ('leading', 'lead'), ('the', 'the'), ('pack', 'pack'), ('when', 'when'), ('it', 'it'), ('comes', 'come'), ('to', 'to'), ('utilizing', 'utilize'), ('data', 'datum'), ('and', 'and'), ('AI', 'ai'), ('.', '.')] 

 Dependency tags are: 
>> [(('And', 'leading'), 'cc'), (('companies', 'leading'), 'nsubj'), (('like', 'IBM'), 'case'), (('IBM', 'companies'), 'nmod'), ((',', 'Microsoft'), 'punct'), (('Microsoft', 'IBM'), 'conj'), ((',', 'Google'), 'punct'), (('Google', 'IBM'), 'conj'), (('and', 'Amazon'), 'cc'), (('Amazon', 'IBM'), 'conj'), (('are', 'leading'), 'aux'), (('leading', 'root'), 'root'), (('the', 'pack'), 'det'), (('pack', 'leading'), 'obj'), (('when', 'comes'), 'mark'), (('it', 'comes'), 'nsubj'), (('comes', 'leading'), 'advcl'), (('to', 'utilizing'), 'mark'), (('utilizing', 'comes'), 'advcl'), (('data', 'utilizing'), 'obj'), (('and', 'AI'), 'cc'), (('AI', 'data'), 'conj'), (('.', 'leading'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG'), ('Microsoft', 'ORG'), ('Google', 'ORG'), ('Amazon', 'ORG'), ('AI', 'ORG')]

================================ Paragraph 20 =================================

AI provides enormous amounts of value in multiple  industries. Because of its high value potential, many  companies have been scrambling to implement AI within  their organizations. And the projects, when implemented  properly, have shown significant returns and improved  competitive edge. If your company hasn’t started  implementing AI, it may lag behind its competitors, so it’s  critical to evaluate what AI can do for your organization.  But this doesn’t mean you should hire data scientists or  acquiring data science solutions without a clear strategy.  Implementing AI should be a carefully thought out process.  Otherwise it may turn out to be a costly failure.  


------------------- Sentence 1 -------------------

 AI provides enormous amounts of value in multiple  industries. 

Tokens are: 
>> ['AI', 'provides', 'enormous', 'amounts', 'of', 'value', 'in', 'multiple', 'industries', '.'] 

 UPOS tags are: 
>> [('AI', 'ADV'), ('provides', 'VERB'), ('enormous', 'ADJ'), ('amounts', 'NOUN'), ('of', 'ADP'), ('value', 'NOUN'), ('in', 'ADP'), ('multiple', 'ADJ'), ('industries', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('AI', 'RB'), ('provides', 'VBZ'), ('enormous', 'JJ'), ('amounts', 'NNS'), ('of', 'IN'), ('value', 'NN'), ('in', 'IN'), ('multiple', 'JJ'), ('industries', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('AI', 'ai'), ('provides', 'provide'), ('enormous', 'enormous'), ('amounts', 'amount'), ('of', 'of'), ('value', 'value'), ('in', 'in'), ('multiple', 'multiple'), ('industries', 'industry'), ('.', '.')] 

 Dependency tags are: 
>> [(('AI', 'provides'), 'advmod'), (('provides', 'root'), 'root'), (('enormous', 'amounts'), 'amod'), (('amounts', 'provides'), 'obj'), (('of', 'value'), 'case'), (('value', 'amounts'), 'nmod'), (('in', 'industries'), 'case'), (('multiple', 'industries'), 'amod'), (('industries', 'value'), 'nmod'), (('.', 'provides'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 2 -------------------

 Because of its high value potential, many  companies have been scrambling to implement AI within  their organizations. 

Tokens are: 
>> ['Because', 'of', 'its', 'high', 'value', 'potential', ',', 'many', 'companies', 'have', 'been', 'scrambling', 'to', 'implement', 'AI', 'within', 'their', 'organizations', '.'] 

 UPOS tags are: 
>> [('Because', 'ADP'), ('of', 'ADP'), ('its', 'PRON'), ('high', 'ADJ'), ('value', 'NOUN'), ('potential', 'NOUN'), (',', 'PUNCT'), ('many', 'ADJ'), ('companies', 'NOUN'), ('have', 'AUX'), ('been', 'AUX'), ('scrambling', 'VERB'), ('to', 'PART'), ('implement', 'VERB'), ('AI', 'NOUN'), ('within', 'ADP'), ('their', 'PRON'), ('organizations', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Because', 'IN'), ('of', 'IN'), ('its', 'PRP$'), ('high', 'JJ'), ('value', 'NN'), ('potential', 'NN'), (',', ','), ('many', 'JJ'), ('companies', 'NNS'), ('have', 'VBP'), ('been', 'VBN'), ('scrambling', 'VBG'), ('to', 'TO'), ('implement', 'VB'), ('AI', 'NNS'), ('within', 'IN'), ('their', 'PRP$'), ('organizations', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Because', 'because'), ('of', 'of'), ('its', 'its'), ('high', 'high'), ('value', 'value'), ('potential', 'potential'), (',', ','), ('many', 'many'), ('companies', 'company'), ('have', 'have'), ('been', 'be'), ('scrambling', 'scramble'), ('to', 'to'), ('implement', 'implement'), ('AI', 'ai'), ('within', 'within'), ('their', 'they'), ('organizations', 'organization'), ('.', '.')] 

 Dependency tags are: 
>> [(('Because', 'potential'), 'case'), (('of', 'Because'), 'fixed'), (('its', 'potential'), 'nmod:poss'), (('high', 'value'), 'amod'), (('value', 'potential'), 'compound'), (('potential', 'scrambling'), 'obl'), ((',', 'scrambling'), 'punct'), (('many', 'companies'), 'amod'), (('companies', 'scrambling'), 'nsubj'), (('have', 'scrambling'), 'aux'), (('been', 'scrambling'), 'aux'), (('scrambling', 'root'), 'root'), (('to', 'implement'), 'mark'), (('implement', 'scrambling'), 'xcomp'), (('AI', 'implement'), 'obj'), (('within', 'organizations'), 'case'), (('their', 'organizations'), 'nmod:poss'), (('organizations', 'implement'), 'obl'), (('.', 'scrambling'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 3 -------------------

 And the projects, when implemented  properly, have shown significant returns and improved  competitive edge. 

Tokens are: 
>> ['And', 'the', 'projects', ',', 'when', 'implemented', 'properly', ',', 'have', 'shown', 'significant', 'returns', 'and', 'improved', 'competitive', 'edge', '.'] 

 UPOS tags are: 
>> [('And', 'CCONJ'), ('the', 'DET'), ('projects', 'NOUN'), (',', 'PUNCT'), ('when', 'SCONJ'), ('implemented', 'VERB'), ('properly', 'ADV'), (',', 'PUNCT'), ('have', 'AUX'), ('shown', 'VERB'), ('significant', 'ADJ'), ('returns', 'NOUN'), ('and', 'CCONJ'), ('improved', 'VERB'), ('competitive', 'ADJ'), ('edge', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('And', 'CC'), ('the', 'DT'), ('projects', 'NNS'), (',', ','), ('when', 'WRB'), ('implemented', 'VBN'), ('properly', 'RB'), (',', ','), ('have', 'VBP'), ('shown', 'VBN'), ('significant', 'JJ'), ('returns', 'NNS'), ('and', 'CC'), ('improved', 'VBN'), ('competitive', 'JJ'), ('edge', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('And', 'and'), ('the', 'the'), ('projects', 'project'), (',', ','), ('when', 'when'), ('implemented', 'implement'), ('properly', 'properly'), (',', ','), ('have', 'have'), ('shown', 'show'), ('significant', 'significant'), ('returns', 'return'), ('and', 'and'), ('improved', 'improve'), ('competitive', 'competitive'), ('edge', 'edge'), ('.', '.')] 

 Dependency tags are: 
>> [(('And', 'shown'), 'cc'), (('the', 'projects'), 'det'), (('projects', 'shown'), 'nsubj'), ((',', 'projects'), 'punct'), (('when', 'implemented'), 'mark'), (('implemented', 'shown'), 'advcl'), (('properly', 'implemented'), 'advmod'), ((',', 'shown'), 'punct'), (('have', 'shown'), 'aux'), (('shown', 'root'), 'root'), (('significant', 'returns'), 'amod'), (('returns', 'shown'), 'obj'), (('and', 'edge'), 'cc'), (('improved', 'edge'), 'amod'), (('competitive', 'edge'), 'amod'), (('edge', 'returns'), 'conj'), (('.', 'shown'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 If your company hasn’t started  implementing AI, it may lag behind its competitors, so it’s  critical to evaluate what AI can do for your organization. 

Tokens are: 
>> ['If', 'your', 'company', 'has', 'n’t', 'started', 'implementing', 'AI', ',', 'it', 'may', 'lag', 'behind', 'its', 'competitors', ',', 'so', 'it', '’s', 'critical', 'to', 'evaluate', 'what', 'AI', 'can', 'do', 'for', 'your', 'organization', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('your', 'PRON'), ('company', 'NOUN'), ('has', 'AUX'), ('n’t', 'PART'), ('started', 'VERB'), ('implementing', 'VERB'), ('AI', 'PRON'), (',', 'PUNCT'), ('it', 'PRON'), ('may', 'AUX'), ('lag', 'VERB'), ('behind', 'ADP'), ('its', 'PRON'), ('competitors', 'NOUN'), (',', 'PUNCT'), ('so', 'ADV'), ('it', 'PRON'), ('’s', 'AUX'), ('critical', 'ADJ'), ('to', 'PART'), ('evaluate', 'VERB'), ('what', 'PRON'), ('AI', 'PRON'), ('can', 'AUX'), ('do', 'VERB'), ('for', 'ADP'), ('your', 'PRON'), ('organization', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('your', 'PRP$'), ('company', 'NN'), ('has', 'VBZ'), ('n’t', 'RB'), ('started', 'VBN'), ('implementing', 'VBG'), ('AI', 'PRP'), (',', ','), ('it', 'PRP'), ('may', 'MD'), ('lag', 'VB'), ('behind', 'IN'), ('its', 'PRP$'), ('competitors', 'NNS'), (',', ','), ('so', 'RB'), ('it', 'PRP'), ('’s', 'VBZ'), ('critical', 'JJ'), ('to', 'TO'), ('evaluate', 'VB'), ('what', 'WP'), ('AI', 'PRP'), ('can', 'MD'), ('do', 'VB'), ('for', 'IN'), ('your', 'PRP$'), ('organization', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('your', 'you'), ('company', 'company'), ('has', 'have'), ('n’t', 'not'), ('started', 'start'), ('implementing', 'implement'), ('AI', 'ai'), (',', ','), ('it', 'it'), ('may', 'may'), ('lag', 'lag'), ('behind', 'behind'), ('its', 'its'), ('competitors', 'competitor'), (',', ','), ('so', 'so'), ('it', 'it'), ('’s', 'be'), ('critical', 'critical'), ('to', 'to'), ('evaluate', 'evaluate'), ('what', 'what'), ('AI', 'ai'), ('can', 'can'), ('do', 'do'), ('for', 'for'), ('your', 'you'), ('organization', 'organization'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'started'), 'mark'), (('your', 'company'), 'nmod:poss'), (('company', 'started'), 'nsubj'), (('has', 'started'), 'aux'), (('n’t', 'started'), 'advmod'), (('started', 'lag'), 'advcl'), (('implementing', 'started'), 'xcomp'), (('AI', 'implementing'), 'obj'), ((',', 'lag'), 'punct'), (('it', 'lag'), 'nsubj'), (('may', 'lag'), 'aux'), (('lag', 'root'), 'root'), (('behind', 'competitors'), 'case'), (('its', 'competitors'), 'nmod:poss'), (('competitors', 'lag'), 'obl'), ((',', 'critical'), 'punct'), (('so', 'critical'), 'advmod'), (('it', 'critical'), 'expl'), (('’s', 'critical'), 'cop'), (('critical', 'lag'), 'parataxis'), (('to', 'evaluate'), 'mark'), (('evaluate', 'critical'), 'csubj'), (('what', 'evaluate'), 'obj'), (('AI', 'do'), 'nsubj'), (('can', 'do'), 'aux'), (('do', 'what'), 'acl:relcl'), (('for', 'organization'), 'case'), (('your', 'organization'), 'nmod:poss'), (('organization', 'do'), 'obl'), (('.', 'lag'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG'), ('AI', 'ORG')]

------------------- Sentence 5 -------------------

 But this doesn’t mean you should hire data scientists or  acquiring data science solutions without a clear strategy. 

Tokens are: 
>> ['But', 'this', 'does', 'n’t', 'mean', 'you', 'should', 'hire', 'data', 'scientists', 'or', 'acquiring', 'data', 'science', 'solutions', 'without', 'a', 'clear', 'strategy', '.'] 

 UPOS tags are: 
>> [('But', 'CCONJ'), ('this', 'PRON'), ('does', 'AUX'), ('n’t', 'PART'), ('mean', 'VERB'), ('you', 'PRON'), ('should', 'AUX'), ('hire', 'VERB'), ('data', 'NOUN'), ('scientists', 'NOUN'), ('or', 'CCONJ'), ('acquiring', 'VERB'), ('data', 'NOUN'), ('science', 'NOUN'), ('solutions', 'NOUN'), ('without', 'ADP'), ('a', 'DET'), ('clear', 'ADJ'), ('strategy', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('But', 'CC'), ('this', 'DT'), ('does', 'VBZ'), ('n’t', 'RB'), ('mean', 'VB'), ('you', 'PRP'), ('should', 'MD'), ('hire', 'VB'), ('data', 'NN'), ('scientists', 'NNS'), ('or', 'CC'), ('acquiring', 'VBG'), ('data', 'NNS'), ('science', 'NN'), ('solutions', 'NNS'), ('without', 'IN'), ('a', 'DT'), ('clear', 'JJ'), ('strategy', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('But', 'but'), ('this', 'this'), ('does', 'do'), ('n’t', 'not'), ('mean', 'mean'), ('you', 'you'), ('should', 'should'), ('hire', 'hire'), ('data', 'datum'), ('scientists', 'scientist'), ('or', 'or'), ('acquiring', 'acquire'), ('data', 'datum'), ('science', 'science'), ('solutions', 'solution'), ('without', 'without'), ('a', 'a'), ('clear', 'clear'), ('strategy', 'strategy'), ('.', '.')] 

 Dependency tags are: 
>> [(('But', 'mean'), 'cc'), (('this', 'mean'), 'nsubj'), (('does', 'mean'), 'aux'), (('n’t', 'mean'), 'advmod'), (('mean', 'root'), 'root'), (('you', 'hire'), 'nsubj'), (('should', 'hire'), 'aux'), (('hire', 'mean'), 'ccomp'), (('data', 'scientists'), 'compound'), (('scientists', 'hire'), 'obj'), (('or', 'acquiring'), 'cc'), (('acquiring', 'hire'), 'conj'), (('data', 'solutions'), 'compound'), (('science', 'solutions'), 'compound'), (('solutions', 'acquiring'), 'obj'), (('without', 'strategy'), 'case'), (('a', 'strategy'), 'det'), (('clear', 'strategy'), 'amod'), (('strategy', 'acquiring'), 'obl'), (('.', 'mean'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 Implementing AI should be a carefully thought out process. 

Tokens are: 
>> ['Implementing', 'AI', 'should', 'be', 'a', 'carefully', 'thought', 'out', 'process', '.'] 

 UPOS tags are: 
>> [('Implementing', 'VERB'), ('AI', 'PRON'), ('should', 'AUX'), ('be', 'AUX'), ('a', 'DET'), ('carefully', 'ADV'), ('thought', 'VERB'), ('out', 'ADP'), ('process', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Implementing', 'VBG'), ('AI', 'PRP'), ('should', 'MD'), ('be', 'VB'), ('a', 'DT'), ('carefully', 'RB'), ('thought', 'VBN'), ('out', 'RP'), ('process', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Implementing', 'implement'), ('AI', 'ai'), ('should', 'should'), ('be', 'be'), ('a', 'a'), ('carefully', 'carefully'), ('thought', 'think'), ('out', 'out'), ('process', 'process'), ('.', '.')] 

 Dependency tags are: 
>> [(('Implementing', 'process'), 'csubj'), (('AI', 'Implementing'), 'obj'), (('should', 'process'), 'aux'), (('be', 'process'), 'cop'), (('a', 'process'), 'det'), (('carefully', 'thought'), 'advmod'), (('thought', 'process'), 'amod'), (('out', 'process'), 'compound'), (('process', 'root'), 'root'), (('.', 'process'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 7 -------------------

 Otherwise it may turn out to be a costly failure. 

Tokens are: 
>> ['Otherwise', 'it', 'may', 'turn', 'out', 'to', 'be', 'a', 'costly', 'failure', '.'] 

 UPOS tags are: 
>> [('Otherwise', 'ADV'), ('it', 'PRON'), ('may', 'AUX'), ('turn', 'VERB'), ('out', 'ADP'), ('to', 'PART'), ('be', 'AUX'), ('a', 'DET'), ('costly', 'ADJ'), ('failure', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Otherwise', 'RB'), ('it', 'PRP'), ('may', 'MD'), ('turn', 'VB'), ('out', 'RP'), ('to', 'TO'), ('be', 'VB'), ('a', 'DT'), ('costly', 'JJ'), ('failure', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Otherwise', 'otherwise'), ('it', 'it'), ('may', 'may'), ('turn', 'turn'), ('out', 'out'), ('to', 'to'), ('be', 'be'), ('a', 'a'), ('costly', 'costly'), ('failure', 'failure'), ('.', '.')] 

 Dependency tags are: 
>> [(('Otherwise', 'turn'), 'advmod'), (('it', 'turn'), 'nsubj'), (('may', 'turn'), 'aux'), (('turn', 'root'), 'root'), (('out', 'turn'), 'compound:prt'), (('to', 'failure'), 'mark'), (('be', 'failure'), 'cop'), (('a', 'failure'), 'det'), (('costly', 'failure'), 'amod'), (('failure', 'turn'), 'xcomp'), (('.', 'turn'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 21 =================================

The authors of this paper want to provide you with the  knowledge you need to evaluate what type of AI solutions you  can implement to give your company a competitive advantage.


------------------- Sentence 1 -------------------

 The authors of this paper want to provide you with the  knowledge you need to evaluate what type of AI solutions you  can implement to give your company a competitive advantage. 

Tokens are: 
>> ['The', 'authors', 'of', 'this', 'paper', 'want', 'to', 'provide', 'you', 'with', 'the', 'knowledge', 'you', 'need', 'to', 'evaluate', 'what', 'type', 'of', 'AI', 'solutions', 'you', 'can', 'implement', 'to', 'give', 'your', 'company', 'a', 'competitive', 'advantage', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('authors', 'NOUN'), ('of', 'ADP'), ('this', 'DET'), ('paper', 'NOUN'), ('want', 'VERB'), ('to', 'PART'), ('provide', 'VERB'), ('you', 'PRON'), ('with', 'ADP'), ('the', 'DET'), ('knowledge', 'NOUN'), ('you', 'PRON'), ('need', 'VERB'), ('to', 'PART'), ('evaluate', 'VERB'), ('what', 'DET'), ('type', 'NOUN'), ('of', 'ADP'), ('AI', 'PRON'), ('solutions', 'NOUN'), ('you', 'PRON'), ('can', 'AUX'), ('implement', 'VERB'), ('to', 'PART'), ('give', 'VERB'), ('your', 'PRON'), ('company', 'NOUN'), ('a', 'DET'), ('competitive', 'ADJ'), ('advantage', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('authors', 'NNS'), ('of', 'IN'), ('this', 'DT'), ('paper', 'NN'), ('want', 'VBP'), ('to', 'TO'), ('provide', 'VB'), ('you', 'PRP'), ('with', 'IN'), ('the', 'DT'), ('knowledge', 'NN'), ('you', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('evaluate', 'VB'), ('what', 'WDT'), ('type', 'NN'), ('of', 'IN'), ('AI', 'PRP$'), ('solutions', 'NNS'), ('you', 'PRP'), ('can', 'MD'), ('implement', 'VB'), ('to', 'TO'), ('give', 'VB'), ('your', 'PRP$'), ('company', 'NN'), ('a', 'DT'), ('competitive', 'JJ'), ('advantage', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('authors', 'author'), ('of', 'of'), ('this', 'this'), ('paper', 'paper'), ('want', 'want'), ('to', 'to'), ('provide', 'provide'), ('you', 'you'), ('with', 'with'), ('the', 'the'), ('knowledge', 'knowledge'), ('you', 'you'), ('need', 'need'), ('to', 'to'), ('evaluate', 'evaluate'), ('what', 'what'), ('type', 'type'), ('of', 'of'), ('AI', 'ai'), ('solutions', 'solution'), ('you', 'you'), ('can', 'can'), ('implement', 'implement'), ('to', 'to'), ('give', 'give'), ('your', 'you'), ('company', 'company'), ('a', 'a'), ('competitive', 'competitive'), ('advantage', 'advantage'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'authors'), 'det'), (('authors', 'want'), 'nsubj'), (('of', 'paper'), 'case'), (('this', 'paper'), 'det'), (('paper', 'authors'), 'nmod'), (('want', 'root'), 'root'), (('to', 'provide'), 'mark'), (('provide', 'want'), 'xcomp'), (('you', 'provide'), 'obj'), (('with', 'knowledge'), 'case'), (('the', 'knowledge'), 'det'), (('knowledge', 'provide'), 'obl'), (('you', 'need'), 'nsubj'), (('need', 'knowledge'), 'acl:relcl'), (('to', 'evaluate'), 'mark'), (('evaluate', 'need'), 'xcomp'), (('what', 'type'), 'det'), (('type', 'evaluate'), 'obj'), (('of', 'solutions'), 'case'), (('AI', 'solutions'), 'nmod:poss'), (('solutions', 'type'), 'nmod'), (('you', 'implement'), 'nsubj'), (('can', 'implement'), 'aux'), (('implement', 'solutions'), 'acl:relcl'), (('to', 'give'), 'mark'), (('give', 'implement'), 'advcl'), (('your', 'company'), 'nmod:poss'), (('company', 'give'), 'iobj'), (('a', 'advantage'), 'det'), (('competitive', 'advantage'), 'amod'), (('advantage', 'give'), 'obj'), (('.', 'want'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 22 =================================

IBM Services     3 


------------------- Sentence 1 -------------------

 IBM Services     3 

Tokens are: 
>> ['IBM', 'Services', '3'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('Services', 'PROPN'), ('3', 'NUM')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('Services', 'NNPS'), ('3', 'CD')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('Services', 'Service'), ('3', '3')] 

 Dependency tags are: 
>> [(('IBM', 'Services'), 'compound'), (('Services', 'root'), 'root'), (('3', 'Services'), 'nummod')]

 Named Entites are: 
>> [('IBM Services', 'ORG')]

================================ Paragraph 23 =================================

What is AI? When people hear AI they often think about sentient  robots and magic boxes. AI today is much more mundane  and simple—but that doesn’t mean it’s not powerful.  Another misconception is that high-profile research  projects can be applied directly to any business situation.   AI done right can create extreme return on investments  (ROIs)—for instance through automation or precise  prediction. But it does take thought, time and proper  implementation. We have seen that success and value  generated by AI projects is increased when there is a  grounded understanding and expectation of what the  technology can deliver from the C-suite down. 


------------------- Sentence 1 -------------------

 What is AI? 

Tokens are: 
>> ['What', 'is', 'AI', '?'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('is', 'AUX'), ('AI', 'PRON'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('is', 'VBZ'), ('AI', 'PRP'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('is', 'be'), ('AI', 'ai'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'root'), 'root'), (('is', 'What'), 'cop'), (('AI', 'What'), 'nsubj'), (('?', 'What'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 When people hear AI they often think about sentient  robots and magic boxes. 

Tokens are: 
>> ['When', 'people', 'hear', 'AI', 'they', 'often', 'think', 'about', 'sentient', 'robots', 'and', 'magic', 'boxes', '.'] 

 UPOS tags are: 
>> [('When', 'SCONJ'), ('people', 'NOUN'), ('hear', 'VERB'), ('AI', 'VERB'), ('they', 'PRON'), ('often', 'ADV'), ('think', 'VERB'), ('about', 'ADP'), ('sentient', 'ADJ'), ('robots', 'NOUN'), ('and', 'CCONJ'), ('magic', 'NOUN'), ('boxes', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('When', 'WRB'), ('people', 'NNS'), ('hear', 'VBP'), ('AI', 'VBZ'), ('they', 'PRP'), ('often', 'RB'), ('think', 'VBP'), ('about', 'IN'), ('sentient', 'JJ'), ('robots', 'NNS'), ('and', 'CC'), ('magic', 'NN'), ('boxes', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('When', 'when'), ('people', 'people'), ('hear', 'hear'), ('AI', 'be'), ('they', 'they'), ('often', 'often'), ('think', 'think'), ('about', 'about'), ('sentient', 'sentient'), ('robots', 'robot'), ('and', 'and'), ('magic', 'magic'), ('boxes', 'box'), ('.', '.')] 

 Dependency tags are: 
>> [(('When', 'hear'), 'mark'), (('people', 'hear'), 'nsubj'), (('hear', 'AI'), 'advcl'), (('AI', 'think'), 'advcl'), (('they', 'think'), 'nsubj'), (('often', 'think'), 'advmod'), (('think', 'root'), 'root'), (('about', 'robots'), 'case'), (('sentient', 'robots'), 'amod'), (('robots', 'think'), 'obl'), (('and', 'boxes'), 'cc'), (('magic', 'boxes'), 'compound'), (('boxes', 'robots'), 'conj'), (('.', 'think'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 3 -------------------

 AI today is much more mundane  and simple—but that doesn’t mean it’s not powerful. 

Tokens are: 
>> ['AI', 'today', 'is', 'much', 'more', 'mundane', 'and', 'simple', '—', 'but', 'that', 'does', 'n’t', 'mean', 'it', '’s', 'not', 'powerful', '.'] 

 UPOS tags are: 
>> [('AI', 'VERB'), ('today', 'NOUN'), ('is', 'AUX'), ('much', 'ADV'), ('more', 'ADV'), ('mundane', 'ADJ'), ('and', 'CCONJ'), ('simple', 'ADJ'), ('—', 'PUNCT'), ('but', 'CCONJ'), ('that', 'PRON'), ('does', 'AUX'), ('n’t', 'PART'), ('mean', 'VERB'), ('it', 'PRON'), ('’s', 'AUX'), ('not', 'PART'), ('powerful', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('AI', 'VBZ'), ('today', 'NN'), ('is', 'VBZ'), ('much', 'RB'), ('more', 'RBR'), ('mundane', 'JJ'), ('and', 'CC'), ('simple', 'JJ'), ('—', ':'), ('but', 'CC'), ('that', 'DT'), ('does', 'VBZ'), ('n’t', 'RB'), ('mean', 'VB'), ('it', 'PRP'), ('’s', 'VBZ'), ('not', 'RB'), ('powerful', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('AI', 'be'), ('today', 'today'), ('is', 'be'), ('much', 'much'), ('more', 'more'), ('mundane', 'mundane'), ('and', 'and'), ('simple', 'simple'), ('—', '—'), ('but', 'but'), ('that', 'that'), ('does', 'do'), ('n’t', 'not'), ('mean', 'mean'), ('it', 'it'), ('’s', 'be'), ('not', 'not'), ('powerful', 'powerful'), ('.', '.')] 

 Dependency tags are: 
>> [(('AI', 'root'), 'root'), (('today', 'mundane'), 'nsubj'), (('is', 'mundane'), 'cop'), (('much', 'more'), 'advmod'), (('more', 'mundane'), 'advmod'), (('mundane', 'AI'), 'ccomp'), (('and', 'simple'), 'cc'), (('simple', 'mundane'), 'conj'), (('—', 'mean'), 'punct'), (('but', 'mean'), 'cc'), (('that', 'mean'), 'nsubj'), (('does', 'mean'), 'aux'), (('n’t', 'mean'), 'advmod'), (('mean', 'AI'), 'conj'), (('it', 'powerful'), 'nsubj'), (('’s', 'powerful'), 'cop'), (('not', 'powerful'), 'advmod'), (('powerful', 'mean'), 'ccomp'), (('.', 'AI'), 'punct')]

 Named Entites are: 
>> [('today', 'DATE')]

------------------- Sentence 4 -------------------

 Another misconception is that high-profile research  projects can be applied directly to any business situation. 

Tokens are: 
>> ['Another', 'misconception', 'is', 'that', 'high', '-', 'profile', 'research', 'projects', 'can', 'be', 'applied', 'directly', 'to', 'any', 'business', 'situation', '.'] 

 UPOS tags are: 
>> [('Another', 'DET'), ('misconception', 'NOUN'), ('is', 'VERB'), ('that', 'SCONJ'), ('high', 'ADJ'), ('-', 'PUNCT'), ('profile', 'NOUN'), ('research', 'NOUN'), ('projects', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('applied', 'VERB'), ('directly', 'ADV'), ('to', 'ADP'), ('any', 'DET'), ('business', 'NOUN'), ('situation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Another', 'DT'), ('misconception', 'NN'), ('is', 'VBZ'), ('that', 'IN'), ('high', 'JJ'), ('-', 'HYPH'), ('profile', 'NN'), ('research', 'NN'), ('projects', 'NNS'), ('can', 'MD'), ('be', 'VB'), ('applied', 'VBN'), ('directly', 'RB'), ('to', 'IN'), ('any', 'DT'), ('business', 'NN'), ('situation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Another', 'another'), ('misconception', 'misconception'), ('is', 'be'), ('that', 'that'), ('high', 'high'), ('-', '-'), ('profile', 'profile'), ('research', 'research'), ('projects', 'project'), ('can', 'can'), ('be', 'be'), ('applied', 'apply'), ('directly', 'directly'), ('to', 'to'), ('any', 'any'), ('business', 'business'), ('situation', 'situation'), ('.', '.')] 

 Dependency tags are: 
>> [(('Another', 'misconception'), 'det'), (('misconception', 'is'), 'nsubj'), (('is', 'root'), 'root'), (('that', 'applied'), 'mark'), (('high', 'profile'), 'amod'), (('-', 'profile'), 'punct'), (('profile', 'projects'), 'compound'), (('research', 'projects'), 'compound'), (('projects', 'applied'), 'nsubj:pass'), (('can', 'applied'), 'aux'), (('be', 'applied'), 'aux:pass'), (('applied', 'is'), 'ccomp'), (('directly', 'applied'), 'advmod'), (('to', 'situation'), 'case'), (('any', 'situation'), 'det'), (('business', 'situation'), 'compound'), (('situation', 'applied'), 'obl'), (('.', 'is'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 AI done right can create extreme return on investments  (ROIs)— 

Tokens are: 
>> ['AI', 'done', 'right', 'can', 'create', 'extreme', 'return', 'on', 'investments', '(', 'ROIs', ')', '—'] 

 UPOS tags are: 
>> [('AI', 'AUX'), ('done', 'VERB'), ('right', 'ADV'), ('can', 'AUX'), ('create', 'VERB'), ('extreme', 'ADJ'), ('return', 'NOUN'), ('on', 'ADP'), ('investments', 'NOUN'), ('(', 'PUNCT'), ('ROIs', 'NOUN'), (')', 'PUNCT'), ('—', 'PUNCT')] 

 XPOS tags are: 
>> [('AI', 'VBZ'), ('done', 'VBN'), ('right', 'RB'), ('can', 'MD'), ('create', 'VB'), ('extreme', 'JJ'), ('return', 'NN'), ('on', 'IN'), ('investments', 'NNS'), ('(', '-LRB-'), ('ROIs', 'NNS'), (')', '-RRB-'), ('—', ':')] 

 Lemmas are: 
>> [('AI', 'be'), ('done', 'do'), ('right', 'right'), ('can', 'can'), ('create', 'create'), ('extreme', 'extreme'), ('return', 'return'), ('on', 'on'), ('investments', 'investment'), ('(', '('), ('ROIs', 'ROI'), (')', ')'), ('—', '—')] 

 Dependency tags are: 
>> [(('AI', 'create'), 'aux'), (('done', 'create'), 'csubj'), (('right', 'create'), 'advmod'), (('can', 'create'), 'aux'), (('create', 'root'), 'root'), (('extreme', 'return'), 'amod'), (('return', 'create'), 'obj'), (('on', 'investments'), 'case'), (('investments', 'return'), 'nmod'), (('(', 'ROIs'), 'punct'), (('ROIs', 'investments'), 'appos'), ((')', 'ROIs'), 'punct'), (('—', 'create'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 for instance through automation or precise  prediction. 

Tokens are: 
>> ['for', 'instance', 'through', 'automation', 'or', 'precise', 'prediction', '.'] 

 UPOS tags are: 
>> [('for', 'ADP'), ('instance', 'NOUN'), ('through', 'ADP'), ('automation', 'NOUN'), ('or', 'CCONJ'), ('precise', 'ADJ'), ('prediction', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('for', 'IN'), ('instance', 'NN'), ('through', 'IN'), ('automation', 'NN'), ('or', 'CC'), ('precise', 'JJ'), ('prediction', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('for', 'for'), ('instance', 'instance'), ('through', 'through'), ('automation', 'automation'), ('or', 'or'), ('precise', 'precise'), ('prediction', 'prediction'), ('.', '.')] 

 Dependency tags are: 
>> [(('for', 'instance'), 'case'), (('instance', 'root'), 'root'), (('through', 'automation'), 'case'), (('automation', 'instance'), 'nmod'), (('or', 'prediction'), 'cc'), (('precise', 'prediction'), 'amod'), (('prediction', 'automation'), 'conj'), (('.', 'instance'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 7 -------------------

 But it does take thought, time and proper  implementation. 

Tokens are: 
>> ['But', 'it', 'does', 'take', 'thought', ',', 'time', 'and', 'proper', 'implementation', '.'] 

 UPOS tags are: 
>> [('But', 'CCONJ'), ('it', 'PRON'), ('does', 'AUX'), ('take', 'VERB'), ('thought', 'NOUN'), (',', 'PUNCT'), ('time', 'NOUN'), ('and', 'CCONJ'), ('proper', 'ADJ'), ('implementation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('But', 'CC'), ('it', 'PRP'), ('does', 'VBZ'), ('take', 'VB'), ('thought', 'NN'), (',', ','), ('time', 'NN'), ('and', 'CC'), ('proper', 'JJ'), ('implementation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('But', 'but'), ('it', 'it'), ('does', 'do'), ('take', 'take'), ('thought', 'thought'), (',', ','), ('time', 'time'), ('and', 'and'), ('proper', 'proper'), ('implementation', 'implementation'), ('.', '.')] 

 Dependency tags are: 
>> [(('But', 'take'), 'cc'), (('it', 'take'), 'nsubj'), (('does', 'take'), 'aux'), (('take', 'root'), 'root'), (('thought', 'take'), 'obj'), ((',', 'time'), 'punct'), (('time', 'thought'), 'conj'), (('and', 'implementation'), 'cc'), (('proper', 'implementation'), 'amod'), (('implementation', 'thought'), 'conj'), (('.', 'take'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 8 -------------------

 We have seen that success and value  generated by AI projects is increased when there is a  grounded understanding and expectation of what the  technology can deliver from the C-suite down. 

Tokens are: 
>> ['We', 'have', 'seen', 'that', 'success', 'and', 'value', 'generated', 'by', 'AI', 'projects', 'is', 'increased', 'when', 'there', 'is', 'a', 'grounded', 'understanding', 'and', 'expectation', 'of', 'what', 'the', 'technology', 'can', 'deliver', 'from', 'the', 'C-suite', 'down', '.'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('have', 'AUX'), ('seen', 'VERB'), ('that', 'SCONJ'), ('success', 'NOUN'), ('and', 'CCONJ'), ('value', 'NOUN'), ('generated', 'VERB'), ('by', 'ADP'), ('AI', 'NOUN'), ('projects', 'NOUN'), ('is', 'AUX'), ('increased', 'VERB'), ('when', 'SCONJ'), ('there', 'PRON'), ('is', 'VERB'), ('a', 'DET'), ('grounded', 'VERB'), ('understanding', 'NOUN'), ('and', 'CCONJ'), ('expectation', 'NOUN'), ('of', 'ADP'), ('what', 'PRON'), ('the', 'DET'), ('technology', 'NOUN'), ('can', 'AUX'), ('deliver', 'VERB'), ('from', 'ADP'), ('the', 'DET'), ('C-suite', 'PROPN'), ('down', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('have', 'VBP'), ('seen', 'VBN'), ('that', 'IN'), ('success', 'NN'), ('and', 'CC'), ('value', 'NN'), ('generated', 'VBN'), ('by', 'IN'), ('AI', 'NN'), ('projects', 'NNS'), ('is', 'VBZ'), ('increased', 'VBN'), ('when', 'WRB'), ('there', 'EX'), ('is', 'VBZ'), ('a', 'DT'), ('grounded', 'VBN'), ('understanding', 'NN'), ('and', 'CC'), ('expectation', 'NN'), ('of', 'IN'), ('what', 'WP'), ('the', 'DT'), ('technology', 'NN'), ('can', 'MD'), ('deliver', 'VB'), ('from', 'IN'), ('the', 'DT'), ('C-suite', 'NNP'), ('down', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('have', 'have'), ('seen', 'see'), ('that', 'that'), ('success', 'success'), ('and', 'and'), ('value', 'value'), ('generated', 'generate'), ('by', 'by'), ('AI', 'ai'), ('projects', 'project'), ('is', 'be'), ('increased', 'increase'), ('when', 'when'), ('there', 'there'), ('is', 'be'), ('a', 'a'), ('grounded', 'ground'), ('understanding', 'understanding'), ('and', 'and'), ('expectation', 'expectation'), ('of', 'of'), ('what', 'what'), ('the', 'the'), ('technology', 'technology'), ('can', 'can'), ('deliver', 'deliver'), ('from', 'from'), ('the', 'the'), ('C-suite', 'C-suite'), ('down', 'down'), ('.', '.')] 

 Dependency tags are: 
>> [(('We', 'seen'), 'nsubj'), (('have', 'seen'), 'aux'), (('seen', 'root'), 'root'), (('that', 'increased'), 'mark'), (('success', 'increased'), 'nsubj:pass'), (('and', 'value'), 'cc'), (('value', 'success'), 'conj'), (('generated', 'success'), 'acl'), (('by', 'projects'), 'case'), (('AI', 'projects'), 'compound'), (('projects', 'generated'), 'obl'), (('is', 'increased'), 'aux:pass'), (('increased', 'seen'), 'ccomp'), (('when', 'is'), 'mark'), (('there', 'is'), 'expl'), (('is', 'increased'), 'advcl'), (('a', 'understanding'), 'det'), (('grounded', 'understanding'), 'amod'), (('understanding', 'is'), 'nsubj'), (('and', 'expectation'), 'cc'), (('expectation', 'understanding'), 'conj'), (('of', 'what'), 'case'), (('what', 'expectation'), 'nmod'), (('the', 'technology'), 'det'), (('technology', 'deliver'), 'nsubj'), (('can', 'deliver'), 'aux'), (('deliver', 'what'), 'acl:relcl'), (('from', 'C-suite'), 'case'), (('the', 'C-suite'), 'det'), (('C-suite', 'deliver'), 'obl'), (('down', 'deliver'), 'advmod'), (('.', 'seen'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 24 =================================

We are now at the brink of the fourth Industrial Revolution.  AI is one of the biggest facets of this revolution, and it  will affect almost all sectors, as did previous Industrial  Revolutions.1 AI’s abilities have increased significantly  since its inception in 1955; it can now detect patterns  more accurately, continuously and based on more data.  Currently, AI has surpassed human intelligence in some  specific domains. These domains can be split in three  categories: general tasks, formal tasks and expert tasks.  General tasks could include visual recognition, speech  recognition, natural language processing and translation.  Formal tasks are related to games where some theorem  and learning is involved. And expert tasks are those that  would otherwise be executed by a domain expert. (Think  of tasks such as diagnosing disease and engineering.2)  


------------------- Sentence 1 -------------------

 We are now at the brink of the fourth Industrial Revolution. 

Tokens are: 
>> ['We', 'are', 'now', 'at', 'the', 'brink', 'of', 'the', 'fourth', 'Industrial', 'Revolution', '.'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('are', 'AUX'), ('now', 'ADV'), ('at', 'ADP'), ('the', 'DET'), ('brink', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('fourth', 'ADJ'), ('Industrial', 'ADJ'), ('Revolution', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('are', 'VBP'), ('now', 'RB'), ('at', 'IN'), ('the', 'DT'), ('brink', 'NN'), ('of', 'IN'), ('the', 'DT'), ('fourth', 'JJ'), ('Industrial', 'NNP'), ('Revolution', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('are', 'be'), ('now', 'now'), ('at', 'at'), ('the', 'the'), ('brink', 'brink'), ('of', 'of'), ('the', 'the'), ('fourth', 'fourth'), ('Industrial', 'Industrial'), ('Revolution', 'Revolution'), ('.', '.')] 

 Dependency tags are: 
>> [(('We', 'brink'), 'nsubj'), (('are', 'brink'), 'cop'), (('now', 'brink'), 'advmod'), (('at', 'brink'), 'case'), (('the', 'brink'), 'det'), (('brink', 'root'), 'root'), (('of', 'Revolution'), 'case'), (('the', 'Revolution'), 'det'), (('fourth', 'Revolution'), 'amod'), (('Industrial', 'Revolution'), 'amod'), (('Revolution', 'brink'), 'nmod'), (('.', 'brink'), 'punct')]

 Named Entites are: 
>> [('fourth', 'ORDINAL'), ('Industrial Revolution', 'EVENT')]

------------------- Sentence 2 -------------------

 AI is one of the biggest facets of this revolution, and it  will affect almost all sectors, as did previous Industrial  Revolutions. 

Tokens are: 
>> ['AI', 'is', 'one', 'of', 'the', 'biggest', 'facets', 'of', 'this', 'revolution', ',', 'and', 'it', 'will', 'affect', 'almost', 'all', 'sectors', ',', 'as', 'did', 'previous', 'Industrial', 'Revolutions', '.'] 

 UPOS tags are: 
>> [('AI', 'PRON'), ('is', 'AUX'), ('one', 'NUM'), ('of', 'ADP'), ('the', 'DET'), ('biggest', 'ADJ'), ('facets', 'NOUN'), ('of', 'ADP'), ('this', 'DET'), ('revolution', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('it', 'PRON'), ('will', 'AUX'), ('affect', 'VERB'), ('almost', 'ADV'), ('all', 'DET'), ('sectors', 'NOUN'), (',', 'PUNCT'), ('as', 'SCONJ'), ('did', 'VERB'), ('previous', 'ADJ'), ('Industrial', 'ADJ'), ('Revolutions', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('AI', 'PRP'), ('is', 'VBZ'), ('one', 'CD'), ('of', 'IN'), ('the', 'DT'), ('biggest', 'JJS'), ('facets', 'NNS'), ('of', 'IN'), ('this', 'DT'), ('revolution', 'NN'), (',', ','), ('and', 'CC'), ('it', 'PRP'), ('will', 'MD'), ('affect', 'VB'), ('almost', 'RB'), ('all', 'DT'), ('sectors', 'NNS'), (',', ','), ('as', 'IN'), ('did', 'VBD'), ('previous', 'JJ'), ('Industrial', 'NNP'), ('Revolutions', 'NNPS'), ('.', '.')] 

 Lemmas are: 
>> [('AI', 'ai'), ('is', 'be'), ('one', 'one'), ('of', 'of'), ('the', 'the'), ('biggest', 'big'), ('facets', 'facet'), ('of', 'of'), ('this', 'this'), ('revolution', 'revolution'), (',', ','), ('and', 'and'), ('it', 'it'), ('will', 'will'), ('affect', 'affect'), ('almost', 'almost'), ('all', 'all'), ('sectors', 'sector'), (',', ','), ('as', 'as'), ('did', 'do'), ('previous', 'previous'), ('Industrial', 'Industrial'), ('Revolutions', 'Revolution'), ('.', '.')] 

 Dependency tags are: 
>> [(('AI', 'one'), 'nsubj'), (('is', 'one'), 'cop'), (('one', 'root'), 'root'), (('of', 'facets'), 'case'), (('the', 'facets'), 'det'), (('biggest', 'facets'), 'amod'), (('facets', 'one'), 'nmod'), (('of', 'revolution'), 'case'), (('this', 'revolution'), 'det'), (('revolution', 'facets'), 'nmod'), ((',', 'affect'), 'punct'), (('and', 'affect'), 'cc'), (('it', 'affect'), 'nsubj'), (('will', 'affect'), 'aux'), (('affect', 'one'), 'conj'), (('almost', 'all'), 'advmod'), (('all', 'sectors'), 'det'), (('sectors', 'affect'), 'obj'), ((',', 'affect'), 'punct'), (('as', 'did'), 'mark'), (('did', 'affect'), 'advcl'), (('previous', 'Revolutions'), 'amod'), (('Industrial', 'Revolutions'), 'amod'), (('Revolutions', 'did'), 'obj'), (('.', 'one'), 'punct')]

 Named Entites are: 
>> [('Industrial  Revolutions', 'EVENT')]

------------------- Sentence 3 -------------------

 1 AI’s abilities have increased significantly  since its inception in 1955; it can now detect patterns  more accurately, continuously and based on more data. 

Tokens are: 
>> ['1', 'AI', '’s', 'abilities', 'have', 'increased', 'significantly', 'since', 'its', 'inception', 'in', '1955', ';', 'it', 'can', 'now', 'detect', 'patterns', 'more', 'accurately', ',', 'continuously', 'and', 'based', 'on', 'more', 'data', '.'] 

 UPOS tags are: 
>> [('1', 'NUM'), ('AI', 'NOUN'), ('’s', 'PART'), ('abilities', 'NOUN'), ('have', 'AUX'), ('increased', 'VERB'), ('significantly', 'ADV'), ('since', 'ADP'), ('its', 'PRON'), ('inception', 'NOUN'), ('in', 'ADP'), ('1955', 'NUM'), (';', 'PUNCT'), ('it', 'PRON'), ('can', 'AUX'), ('now', 'ADV'), ('detect', 'VERB'), ('patterns', 'NOUN'), ('more', 'ADV'), ('accurately', 'ADV'), (',', 'PUNCT'), ('continuously', 'ADV'), ('and', 'CCONJ'), ('based', 'VERB'), ('on', 'ADP'), ('more', 'ADJ'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('1', 'CD'), ('AI', 'NNS'), ('’s', 'POS'), ('abilities', 'NNS'), ('have', 'VBP'), ('increased', 'VBN'), ('significantly', 'RB'), ('since', 'IN'), ('its', 'PRP$'), ('inception', 'NN'), ('in', 'IN'), ('1955', 'CD'), (';', ':'), ('it', 'PRP'), ('can', 'MD'), ('now', 'RB'), ('detect', 'VB'), ('patterns', 'NNS'), ('more', 'RBR'), ('accurately', 'RB'), (',', ','), ('continuously', 'RB'), ('and', 'CC'), ('based', 'VBN'), ('on', 'IN'), ('more', 'JJR'), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('1', '1'), ('AI', 'ai'), ('’s', "'s"), ('abilities', 'ability'), ('have', 'have'), ('increased', 'increase'), ('significantly', 'significantly'), ('since', 'since'), ('its', 'its'), ('inception', 'inception'), ('in', 'in'), ('1955', '1955'), (';', ';'), ('it', 'it'), ('can', 'can'), ('now', 'now'), ('detect', 'detect'), ('patterns', 'pattern'), ('more', 'more'), ('accurately', 'accurately'), (',', ','), ('continuously', 'continuously'), ('and', 'and'), ('based', 'base'), ('on', 'on'), ('more', 'more'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('1', 'AI'), 'nummod'), (('AI', 'abilities'), 'nmod:poss'), (('’s', 'AI'), 'case'), (('abilities', 'increased'), 'nsubj'), (('have', 'increased'), 'aux'), (('increased', 'root'), 'root'), (('significantly', 'increased'), 'advmod'), (('since', 'inception'), 'case'), (('its', 'inception'), 'nmod:poss'), (('inception', 'increased'), 'obl'), (('in', '1955'), 'case'), (('1955', 'increased'), 'obl'), ((';', 'detect'), 'punct'), (('it', 'detect'), 'nsubj'), (('can', 'detect'), 'aux'), (('now', 'detect'), 'advmod'), (('detect', 'increased'), 'parataxis'), (('patterns', 'detect'), 'obj'), (('more', 'accurately'), 'advmod'), (('accurately', 'detect'), 'advmod'), ((',', 'continuously'), 'punct'), (('continuously', 'detect'), 'advmod'), (('and', 'based'), 'cc'), (('based', 'continuously'), 'conj'), (('on', 'data'), 'case'), (('more', 'data'), 'amod'), (('data', 'based'), 'obl'), (('.', 'increased'), 'punct')]

 Named Entites are: 
>> [('1', 'CARDINAL'), ('1955', 'DATE')]

------------------- Sentence 4 -------------------

 Currently, AI has surpassed human intelligence in some  specific domains. 

Tokens are: 
>> ['Currently', ',', 'AI', 'has', 'surpassed', 'human', 'intelligence', 'in', 'some', 'specific', 'domains', '.'] 

 UPOS tags are: 
>> [('Currently', 'ADV'), (',', 'PUNCT'), ('AI', 'PRON'), ('has', 'AUX'), ('surpassed', 'VERB'), ('human', 'ADJ'), ('intelligence', 'NOUN'), ('in', 'ADP'), ('some', 'DET'), ('specific', 'ADJ'), ('domains', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Currently', 'RB'), (',', ','), ('AI', 'PRP'), ('has', 'VBZ'), ('surpassed', 'VBN'), ('human', 'JJ'), ('intelligence', 'NN'), ('in', 'IN'), ('some', 'DT'), ('specific', 'JJ'), ('domains', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Currently', 'currently'), (',', ','), ('AI', 'ai'), ('has', 'have'), ('surpassed', 'surpass'), ('human', 'human'), ('intelligence', 'intelligence'), ('in', 'in'), ('some', 'some'), ('specific', 'specific'), ('domains', 'domain'), ('.', '.')] 

 Dependency tags are: 
>> [(('Currently', 'surpassed'), 'advmod'), ((',', 'surpassed'), 'punct'), (('AI', 'surpassed'), 'nsubj'), (('has', 'surpassed'), 'aux'), (('surpassed', 'root'), 'root'), (('human', 'intelligence'), 'amod'), (('intelligence', 'surpassed'), 'obj'), (('in', 'domains'), 'case'), (('some', 'domains'), 'det'), (('specific', 'domains'), 'amod'), (('domains', 'surpassed'), 'obl'), (('.', 'surpassed'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 5 -------------------

 These domains can be split in three  categories: general tasks, formal tasks and expert tasks. 

Tokens are: 
>> ['These', 'domains', 'can', 'be', 'split', 'in', 'three', 'categories', ':', 'general', 'tasks', ',', 'formal', 'tasks', 'and', 'expert', 'tasks', '.'] 

 UPOS tags are: 
>> [('These', 'DET'), ('domains', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('split', 'VERB'), ('in', 'ADP'), ('three', 'NUM'), ('categories', 'NOUN'), (':', 'PUNCT'), ('general', 'ADJ'), ('tasks', 'NOUN'), (',', 'PUNCT'), ('formal', 'ADJ'), ('tasks', 'NOUN'), ('and', 'CCONJ'), ('expert', 'NOUN'), ('tasks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('These', 'DT'), ('domains', 'NNS'), ('can', 'MD'), ('be', 'VB'), ('split', 'VBN'), ('in', 'IN'), ('three', 'CD'), ('categories', 'NNS'), (':', ':'), ('general', 'JJ'), ('tasks', 'NNS'), (',', ','), ('formal', 'JJ'), ('tasks', 'NNS'), ('and', 'CC'), ('expert', 'NN'), ('tasks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('These', 'this'), ('domains', 'domain'), ('can', 'can'), ('be', 'be'), ('split', 'split'), ('in', 'in'), ('three', 'three'), ('categories', 'category'), (':', ':'), ('general', 'general'), ('tasks', 'task'), (',', ','), ('formal', 'formal'), ('tasks', 'task'), ('and', 'and'), ('expert', 'expert'), ('tasks', 'task'), ('.', '.')] 

 Dependency tags are: 
>> [(('These', 'domains'), 'det'), (('domains', 'split'), 'nsubj:pass'), (('can', 'split'), 'aux'), (('be', 'split'), 'aux:pass'), (('split', 'root'), 'root'), (('in', 'categories'), 'case'), (('three', 'categories'), 'nummod'), (('categories', 'split'), 'obl'), ((':', 'tasks'), 'punct'), (('general', 'tasks'), 'amod'), (('tasks', 'categories'), 'appos'), ((',', 'tasks'), 'punct'), (('formal', 'tasks'), 'amod'), (('tasks', 'tasks'), 'conj'), (('and', 'tasks'), 'cc'), (('expert', 'tasks'), 'compound'), (('tasks', 'tasks'), 'conj'), (('.', 'split'), 'punct')]

 Named Entites are: 
>> [('three', 'CARDINAL')]

------------------- Sentence 6 -------------------

 General tasks could include visual recognition, speech  recognition, natural language processing and translation. 

Tokens are: 
>> ['General', 'tasks', 'could', 'include', 'visual', 'recognition', ',', 'speech', 'recognition', ',', 'natural', 'language', 'processing', 'and', 'translation', '.'] 

 UPOS tags are: 
>> [('General', 'ADJ'), ('tasks', 'NOUN'), ('could', 'AUX'), ('include', 'VERB'), ('visual', 'ADJ'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('speech', 'NOUN'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), ('and', 'CCONJ'), ('translation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('General', 'JJ'), ('tasks', 'NNS'), ('could', 'MD'), ('include', 'VB'), ('visual', 'JJ'), ('recognition', 'NN'), (',', ','), ('speech', 'NN'), ('recognition', 'NN'), (',', ','), ('natural', 'JJ'), ('language', 'NN'), ('processing', 'NN'), ('and', 'CC'), ('translation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('General', 'General'), ('tasks', 'task'), ('could', 'could'), ('include', 'include'), ('visual', 'visual'), ('recognition', 'recognition'), (',', ','), ('speech', 'speech'), ('recognition', 'recognition'), (',', ','), ('natural', 'natural'), ('language', 'language'), ('processing', 'processing'), ('and', 'and'), ('translation', 'translation'), ('.', '.')] 

 Dependency tags are: 
>> [(('General', 'tasks'), 'amod'), (('tasks', 'include'), 'nsubj'), (('could', 'include'), 'aux'), (('include', 'root'), 'root'), (('visual', 'recognition'), 'amod'), (('recognition', 'include'), 'obj'), ((',', 'recognition'), 'punct'), (('speech', 'recognition'), 'compound'), (('recognition', 'recognition'), 'conj'), ((',', 'processing'), 'punct'), (('natural', 'processing'), 'amod'), (('language', 'processing'), 'compound'), (('processing', 'recognition'), 'conj'), (('and', 'translation'), 'cc'), (('translation', 'recognition'), 'conj'), (('.', 'include'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 7 -------------------

 Formal tasks are related to games where some theorem  and learning is involved. 

Tokens are: 
>> ['Formal', 'tasks', 'are', 'related', 'to', 'games', 'where', 'some', 'theorem', 'and', 'learning', 'is', 'involved', '.'] 

 UPOS tags are: 
>> [('Formal', 'ADJ'), ('tasks', 'NOUN'), ('are', 'AUX'), ('related', 'ADJ'), ('to', 'ADP'), ('games', 'NOUN'), ('where', 'SCONJ'), ('some', 'DET'), ('theorem', 'NOUN'), ('and', 'CCONJ'), ('learning', 'NOUN'), ('is', 'AUX'), ('involved', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Formal', 'JJ'), ('tasks', 'NNS'), ('are', 'VBP'), ('related', 'JJ'), ('to', 'IN'), ('games', 'NNS'), ('where', 'WRB'), ('some', 'DT'), ('theorem', 'NN'), ('and', 'CC'), ('learning', 'NN'), ('is', 'VBZ'), ('involved', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('Formal', 'Formal'), ('tasks', 'task'), ('are', 'be'), ('related', 'related'), ('to', 'to'), ('games', 'game'), ('where', 'where'), ('some', 'some'), ('theorem', 'theorem'), ('and', 'and'), ('learning', 'learning'), ('is', 'be'), ('involved', 'involve'), ('.', '.')] 

 Dependency tags are: 
>> [(('Formal', 'tasks'), 'amod'), (('tasks', 'related'), 'nsubj'), (('are', 'related'), 'cop'), (('related', 'root'), 'root'), (('to', 'games'), 'case'), (('games', 'related'), 'obl'), (('where', 'involved'), 'mark'), (('some', 'theorem'), 'det'), (('theorem', 'involved'), 'nsubj:pass'), (('and', 'learning'), 'cc'), (('learning', 'theorem'), 'conj'), (('is', 'involved'), 'aux:pass'), (('involved', 'games'), 'acl:relcl'), (('.', 'related'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 8 -------------------

 And expert tasks are those that  would otherwise be executed by a domain expert. 

Tokens are: 
>> ['And', 'expert', 'tasks', 'are', 'those', 'that', 'would', 'otherwise', 'be', 'executed', 'by', 'a', 'domain', 'expert', '.'] 

 UPOS tags are: 
>> [('And', 'CCONJ'), ('expert', 'NOUN'), ('tasks', 'NOUN'), ('are', 'AUX'), ('those', 'PRON'), ('that', 'PRON'), ('would', 'AUX'), ('otherwise', 'ADV'), ('be', 'AUX'), ('executed', 'VERB'), ('by', 'ADP'), ('a', 'DET'), ('domain', 'NOUN'), ('expert', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('And', 'CC'), ('expert', 'NN'), ('tasks', 'NNS'), ('are', 'VBP'), ('those', 'DT'), ('that', 'WDT'), ('would', 'MD'), ('otherwise', 'RB'), ('be', 'VB'), ('executed', 'VBN'), ('by', 'IN'), ('a', 'DT'), ('domain', 'NN'), ('expert', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('And', 'and'), ('expert', 'expert'), ('tasks', 'task'), ('are', 'be'), ('those', 'that'), ('that', 'that'), ('would', 'would'), ('otherwise', 'otherwise'), ('be', 'be'), ('executed', 'execute'), ('by', 'by'), ('a', 'a'), ('domain', 'domain'), ('expert', 'expert'), ('.', '.')] 

 Dependency tags are: 
>> [(('And', 'those'), 'cc'), (('expert', 'tasks'), 'compound'), (('tasks', 'those'), 'nsubj'), (('are', 'those'), 'cop'), (('those', 'root'), 'root'), (('that', 'executed'), 'nsubj:pass'), (('would', 'executed'), 'aux'), (('otherwise', 'executed'), 'advmod'), (('be', 'executed'), 'aux:pass'), (('executed', 'those'), 'acl:relcl'), (('by', 'expert'), 'case'), (('a', 'expert'), 'det'), (('domain', 'expert'), 'compound'), (('expert', 'executed'), 'obl'), (('.', 'those'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 9 -------------------

 (Think  of tasks such as diagnosing disease and engineering. 

Tokens are: 
>> ['(', 'Think', 'of', 'tasks', 'such', 'as', 'diagnosing', 'disease', 'and', 'engineering', '.'] 

 UPOS tags are: 
>> [('(', 'PUNCT'), ('Think', 'VERB'), ('of', 'ADP'), ('tasks', 'NOUN'), ('such', 'ADJ'), ('as', 'SCONJ'), ('diagnosing', 'VERB'), ('disease', 'NOUN'), ('and', 'CCONJ'), ('engineering', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('(', '-LRB-'), ('Think', 'VB'), ('of', 'IN'), ('tasks', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('diagnosing', 'VBG'), ('disease', 'NN'), ('and', 'CC'), ('engineering', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('(', '('), ('Think', 'think'), ('of', 'of'), ('tasks', 'task'), ('such', 'such'), ('as', 'as'), ('diagnosing', 'diagnose'), ('disease', 'disease'), ('and', 'and'), ('engineering', 'engineering'), ('.', '.')] 

 Dependency tags are: 
>> [(('(', 'Think'), 'punct'), (('Think', 'root'), 'root'), (('of', 'tasks'), 'case'), (('tasks', 'Think'), 'obl'), (('such', 'diagnosing'), 'mark'), (('as', 'such'), 'fixed'), (('diagnosing', 'tasks'), 'acl'), (('disease', 'diagnosing'), 'obj'), (('and', 'engineering'), 'cc'), (('engineering', 'disease'), 'conj'), (('.', 'Think'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 10 -------------------

 2) 

Tokens are: 
>> ['2', ')'] 

 UPOS tags are: 
>> [('2', 'NUM'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('2', 'CD'), (')', '-RRB-')] 

 Lemmas are: 
>> [('2', '2'), (')', ')')] 

 Dependency tags are: 
>> [(('2', 'root'), 'root'), ((')', '2'), 'punct')]

 Named Entites are: 
>> [('2', 'CARDINAL')]

================================ Paragraph 25 =================================

As already stated, AI was first named in 1955 and was  defined as the ability of machines to perform human-like  tasks. The term has gained popularity ever since its first  mention. However, there is still quite a bit of confusion about  the difference between AI, machine learning and deep  learning—but simply stated, AI encompasses the latter two.  


------------------- Sentence 1 -------------------

 As already stated, AI was first named in 1955 and was  defined as the ability of machines to perform human-like  tasks. 

Tokens are: 
>> ['As', 'already', 'stated', ',', 'AI', 'was', 'first', 'named', 'in', '1955', 'and', 'was', 'defined', 'as', 'the', 'ability', 'of', 'machines', 'to', 'perform', 'human-like', 'tasks', '.'] 

 UPOS tags are: 
>> [('As', 'SCONJ'), ('already', 'ADV'), ('stated', 'VERB'), (',', 'PUNCT'), ('AI', 'PROPN'), ('was', 'AUX'), ('first', 'ADV'), ('named', 'VERB'), ('in', 'ADP'), ('1955', 'NUM'), ('and', 'CCONJ'), ('was', 'AUX'), ('defined', 'VERB'), ('as', 'ADP'), ('the', 'DET'), ('ability', 'NOUN'), ('of', 'ADP'), ('machines', 'NOUN'), ('to', 'PART'), ('perform', 'VERB'), ('human-like', 'ADJ'), ('tasks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('As', 'IN'), ('already', 'RB'), ('stated', 'VBN'), (',', ','), ('AI', 'NNP'), ('was', 'VBD'), ('first', 'RB'), ('named', 'VBN'), ('in', 'IN'), ('1955', 'CD'), ('and', 'CC'), ('was', 'VBD'), ('defined', 'VBN'), ('as', 'IN'), ('the', 'DT'), ('ability', 'NN'), ('of', 'IN'), ('machines', 'NNS'), ('to', 'TO'), ('perform', 'VB'), ('human-like', 'JJ'), ('tasks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('As', 'as'), ('already', 'already'), ('stated', 'state'), (',', ','), ('AI', 'AI'), ('was', 'be'), ('first', 'first'), ('named', 'name'), ('in', 'in'), ('1955', '1955'), ('and', 'and'), ('was', 'be'), ('defined', 'define'), ('as', 'as'), ('the', 'the'), ('ability', 'ability'), ('of', 'of'), ('machines', 'machine'), ('to', 'to'), ('perform', 'perform'), ('human-like', 'human-like'), ('tasks', 'task'), ('.', '.')] 

 Dependency tags are: 
>> [(('As', 'stated'), 'mark'), (('already', 'stated'), 'advmod'), (('stated', 'named'), 'advcl'), ((',', 'named'), 'punct'), (('AI', 'named'), 'nsubj:pass'), (('was', 'named'), 'aux:pass'), (('first', 'named'), 'advmod'), (('named', 'root'), 'root'), (('in', '1955'), 'case'), (('1955', 'named'), 'obl'), (('and', 'defined'), 'cc'), (('was', 'defined'), 'aux:pass'), (('defined', 'named'), 'conj'), (('as', 'ability'), 'case'), (('the', 'ability'), 'det'), (('ability', 'defined'), 'obl'), (('of', 'machines'), 'case'), (('machines', 'ability'), 'nmod'), (('to', 'perform'), 'mark'), (('perform', 'ability'), 'acl'), (('human-like', 'tasks'), 'amod'), (('tasks', 'perform'), 'obj'), (('.', 'named'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG'), ('first', 'ORDINAL'), ('1955', 'DATE')]

------------------- Sentence 2 -------------------

 The term has gained popularity ever since its first  mention. 

Tokens are: 
>> ['The', 'term', 'has', 'gained', 'popularity', 'ever', 'since', 'its', 'first', 'mention', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('term', 'NOUN'), ('has', 'AUX'), ('gained', 'VERB'), ('popularity', 'NOUN'), ('ever', 'ADV'), ('since', 'ADP'), ('its', 'PRON'), ('first', 'ADJ'), ('mention', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('term', 'NN'), ('has', 'VBZ'), ('gained', 'VBN'), ('popularity', 'NN'), ('ever', 'RB'), ('since', 'IN'), ('its', 'PRP$'), ('first', 'JJ'), ('mention', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('term', 'term'), ('has', 'have'), ('gained', 'gain'), ('popularity', 'popularity'), ('ever', 'ever'), ('since', 'since'), ('its', 'its'), ('first', 'first'), ('mention', 'mention'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'term'), 'det'), (('term', 'gained'), 'nsubj'), (('has', 'gained'), 'aux'), (('gained', 'root'), 'root'), (('popularity', 'gained'), 'obj'), (('ever', 'gained'), 'advmod'), (('since', 'mention'), 'case'), (('its', 'mention'), 'nmod:poss'), (('first', 'mention'), 'amod'), (('mention', 'gained'), 'obl'), (('.', 'gained'), 'punct')]

 Named Entites are: 
>> [('first', 'ORDINAL')]

------------------- Sentence 3 -------------------

 However, there is still quite a bit of confusion about  the difference between AI, machine learning and deep  learning—but simply stated, AI encompasses the latter two. 

Tokens are: 
>> ['However', ',', 'there', 'is', 'still', 'quite', 'a', 'bit', 'of', 'confusion', 'about', 'the', 'difference', 'between', 'AI', ',', 'machine', 'learning', 'and', 'deep', 'learning', '—', 'but', 'simply', 'stated', ',', 'AI', 'encompasses', 'the', 'latter', 'two', '.'] 

 UPOS tags are: 
>> [('However', 'ADV'), (',', 'PUNCT'), ('there', 'PRON'), ('is', 'VERB'), ('still', 'ADV'), ('quite', 'DET'), ('a', 'DET'), ('bit', 'NOUN'), ('of', 'ADP'), ('confusion', 'NOUN'), ('about', 'ADP'), ('the', 'DET'), ('difference', 'NOUN'), ('between', 'ADP'), ('AI', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('and', 'CCONJ'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('—', 'PUNCT'), ('but', 'CCONJ'), ('simply', 'ADV'), ('stated', 'VERB'), (',', 'PUNCT'), ('AI', 'ADV'), ('encompasses', 'VERB'), ('the', 'DET'), ('latter', 'ADJ'), ('two', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('However', 'RB'), (',', ','), ('there', 'EX'), ('is', 'VBZ'), ('still', 'RB'), ('quite', 'PDT'), ('a', 'DT'), ('bit', 'NN'), ('of', 'IN'), ('confusion', 'NN'), ('about', 'IN'), ('the', 'DT'), ('difference', 'NN'), ('between', 'IN'), ('AI', 'NN'), (',', ','), ('machine', 'NN'), ('learning', 'NN'), ('and', 'CC'), ('deep', 'JJ'), ('learning', 'NN'), ('—', ':'), ('but', 'CC'), ('simply', 'RB'), ('stated', 'VBN'), (',', ','), ('AI', 'RB'), ('encompasses', 'VBZ'), ('the', 'DT'), ('latter', 'JJ'), ('two', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('However', 'however'), (',', ','), ('there', 'there'), ('is', 'be'), ('still', 'still'), ('quite', 'quite'), ('a', 'a'), ('bit', 'bit'), ('of', 'of'), ('confusion', 'confusion'), ('about', 'about'), ('the', 'the'), ('difference', 'difference'), ('between', 'between'), ('AI', 'ai'), (',', ','), ('machine', 'machine'), ('learning', 'learning'), ('and', 'and'), ('deep', 'deep'), ('learning', 'learning'), ('—', '—'), ('but', 'but'), ('simply', 'simply'), ('stated', 'state'), (',', ','), ('AI', 'ai'), ('encompasses', 'encompass'), ('the', 'the'), ('latter', 'latter'), ('two', 'two'), ('.', '.')] 

 Dependency tags are: 
>> [(('However', 'is'), 'advmod'), ((',', 'is'), 'punct'), (('there', 'is'), 'expl'), (('is', 'root'), 'root'), (('still', 'is'), 'advmod'), (('quite', 'bit'), 'det:predet'), (('a', 'bit'), 'det'), (('bit', 'is'), 'nsubj'), (('of', 'confusion'), 'case'), (('confusion', 'bit'), 'nmod'), (('about', 'difference'), 'case'), (('the', 'difference'), 'det'), (('difference', 'bit'), 'nmod'), (('between', 'AI'), 'case'), (('AI', 'difference'), 'nmod'), ((',', 'learning'), 'punct'), (('machine', 'learning'), 'compound'), (('learning', 'AI'), 'conj'), (('and', 'learning'), 'cc'), (('deep', 'learning'), 'amod'), (('learning', 'AI'), 'conj'), (('—', 'stated'), 'punct'), (('but', 'stated'), 'cc'), (('simply', 'stated'), 'advmod'), (('stated', 'is'), 'conj'), ((',', 'encompasses'), 'punct'), (('AI', 'encompasses'), 'advmod'), (('encompasses', 'stated'), 'ccomp'), (('the', 'two'), 'det'), (('latter', 'two'), 'amod'), (('two', 'encompasses'), 'obj'), (('.', 'is'), 'punct')]

 Named Entites are: 
>> [('two', 'CARDINAL')]

================================ Paragraph 26 =================================

AI 


------------------- Sentence 1 -------------------

 AI 

Tokens are: 
>> ['AI'] 

 UPOS tags are: 
>> [('AI', 'PROPN')] 

 XPOS tags are: 
>> [('AI', 'NNP')] 

 Lemmas are: 
>> [('AI', 'AI')] 

 Dependency tags are: 
>> [(('AI', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 27 =================================

Artificial intelligence A program that can sense, reason,  


------------------- Sentence 1 -------------------

 Artificial intelligence A program that can sense, reason, 

Tokens are: 
>> ['Artificial', 'intelligence', 'A', 'program', 'that', 'can', 'sense', ',', 'reason', ','] 

 UPOS tags are: 
>> [('Artificial', 'ADJ'), ('intelligence', 'NOUN'), ('A', 'DET'), ('program', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('sense', 'VERB'), (',', 'PUNCT'), ('reason', 'NOUN'), (',', 'PUNCT')] 

 XPOS tags are: 
>> [('Artificial', 'JJ'), ('intelligence', 'NN'), ('A', 'DT'), ('program', 'NN'), ('that', 'WDT'), ('can', 'MD'), ('sense', 'VB'), (',', ','), ('reason', 'NN'), (',', ',')] 

 Lemmas are: 
>> [('Artificial', 'Artificial'), ('intelligence', 'intelligence'), ('A', 'a'), ('program', 'program'), ('that', 'that'), ('can', 'can'), ('sense', 'sense'), (',', ','), ('reason', 'reason'), (',', ',')] 

 Dependency tags are: 
>> [(('Artificial', 'intelligence'), 'amod'), (('intelligence', 'program'), 'nsubj'), (('A', 'program'), 'det'), (('program', 'root'), 'root'), (('that', 'sense'), 'nsubj'), (('can', 'sense'), 'aux'), (('sense', 'program'), 'acl:relcl'), ((',', 'reason'), 'punct'), (('reason', 'sense'), 'obj'), ((',', 'program'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 28 =================================

act and adapt. 


------------------- Sentence 1 -------------------

 act and adapt. 

Tokens are: 
>> ['act', 'and', 'adapt', '.'] 

 UPOS tags are: 
>> [('act', 'VERB'), ('and', 'CCONJ'), ('adapt', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('act', 'VB'), ('and', 'CC'), ('adapt', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('act', 'act'), ('and', 'and'), ('adapt', 'adapt'), ('.', '.')] 

 Dependency tags are: 
>> [(('act', 'root'), 'root'), (('and', 'adapt'), 'cc'), (('adapt', 'act'), 'conj'), (('.', 'act'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 29 =================================

Machine learning Algorithms whose performance improve  


------------------- Sentence 1 -------------------

 Machine learning Algorithms whose performance improve 

Tokens are: 
>> ['Machine', 'learning', 'Algorithms', 'whose', 'performance', 'improve'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('learning', 'NOUN'), ('Algorithms', 'NOUN'), ('whose', 'PRON'), ('performance', 'NOUN'), ('improve', 'VERB')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('learning', 'NN'), ('Algorithms', 'NNS'), ('whose', 'WP$'), ('performance', 'NN'), ('improve', 'VBP')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('learning', 'learning'), ('Algorithms', 'algorithm'), ('whose', 'whose'), ('performance', 'performance'), ('improve', 'improve')] 

 Dependency tags are: 
>> [(('Machine', 'Algorithms'), 'compound'), (('learning', 'Algorithms'), 'compound'), (('Algorithms', 'root'), 'root'), (('whose', 'performance'), 'nmod:poss'), (('performance', 'improve'), 'nsubj'), (('improve', 'Algorithms'), 'acl:relcl')]

 Named Entites are: 
>> []

================================ Paragraph 30 =================================

as they are exposed to more data over time. 


------------------- Sentence 1 -------------------

 as they are exposed to more data over time. 

Tokens are: 
>> ['as', 'they', 'are', 'exposed', 'to', 'more', 'data', 'over', 'time', '.'] 

 UPOS tags are: 
>> [('as', 'SCONJ'), ('they', 'PRON'), ('are', 'AUX'), ('exposed', 'VERB'), ('to', 'ADP'), ('more', 'ADJ'), ('data', 'NOUN'), ('over', 'ADP'), ('time', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('as', 'IN'), ('they', 'PRP'), ('are', 'VBP'), ('exposed', 'VBN'), ('to', 'IN'), ('more', 'JJR'), ('data', 'NNS'), ('over', 'IN'), ('time', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('as', 'as'), ('they', 'they'), ('are', 'be'), ('exposed', 'expose'), ('to', 'to'), ('more', 'more'), ('data', 'datum'), ('over', 'over'), ('time', 'time'), ('.', '.')] 

 Dependency tags are: 
>> [(('as', 'exposed'), 'mark'), (('they', 'exposed'), 'nsubj:pass'), (('are', 'exposed'), 'aux:pass'), (('exposed', 'root'), 'root'), (('to', 'data'), 'case'), (('more', 'data'), 'amod'), (('data', 'exposed'), 'obl'), (('over', 'time'), 'case'), (('time', 'data'), 'nmod'), (('.', 'exposed'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 31 =================================

Deep learning Subset of machine learning in  


------------------- Sentence 1 -------------------

 Deep learning Subset of machine learning in 

Tokens are: 
>> ['Deep', 'learning', 'Subset', 'of', 'machine', 'learning', 'in'] 

 UPOS tags are: 
>> [('Deep', 'ADJ'), ('learning', 'NOUN'), ('Subset', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('learning', 'VERB'), ('in', 'ADV')] 

 XPOS tags are: 
>> [('Deep', 'JJ'), ('learning', 'NN'), ('Subset', 'NN'), ('of', 'IN'), ('machine', 'NN'), ('learning', 'VBG'), ('in', 'RB')] 

 Lemmas are: 
>> [('Deep', 'deep'), ('learning', 'learning'), ('Subset', 'subset'), ('of', 'of'), ('machine', 'machine'), ('learning', 'learn'), ('in', 'in')] 

 Dependency tags are: 
>> [(('Deep', 'Subset'), 'amod'), (('learning', 'Subset'), 'compound'), (('Subset', 'root'), 'root'), (('of', 'machine'), 'case'), (('machine', 'Subset'), 'nmod'), (('learning', 'Subset'), 'acl'), (('in', 'learning'), 'advmod')]

 Named Entites are: 
>> []

================================ Paragraph 32 =================================

which multipayered neutral  networks learn from  vast amount of data. 


------------------- Sentence 1 -------------------

 which multipayered neutral  networks learn from  vast amount of data. 

Tokens are: 
>> ['which', 'multipayered', 'neutral', 'networks', 'learn', 'from', 'vast', 'amount', 'of', 'data', '.'] 

 UPOS tags are: 
>> [('which', 'PRON'), ('multipayered', 'VERB'), ('neutral', 'ADJ'), ('networks', 'NOUN'), ('learn', 'VERB'), ('from', 'ADP'), ('vast', 'ADJ'), ('amount', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('which', 'WDT'), ('multipayered', 'VBD'), ('neutral', 'JJ'), ('networks', 'NNS'), ('learn', 'VBP'), ('from', 'IN'), ('vast', 'JJ'), ('amount', 'NN'), ('of', 'IN'), ('data', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('which', 'which'), ('multipayered', 'multipayer'), ('neutral', 'neutral'), ('networks', 'network'), ('learn', 'learn'), ('from', 'from'), ('vast', 'vast'), ('amount', 'amount'), ('of', 'of'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('which', 'multipayered'), 'nsubj'), (('multipayered', 'learn'), 'csubj'), (('neutral', 'networks'), 'amod'), (('networks', 'multipayered'), 'obj'), (('learn', 'root'), 'root'), (('from', 'amount'), 'case'), (('vast', 'amount'), 'amod'), (('amount', 'learn'), 'obl'), (('of', 'data'), 'case'), (('data', 'amount'), 'nmod'), (('.', 'learn'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 33 =================================

Figure 1: The distinction between AI, Machine Learning and Deep Learning. 


------------------- Sentence 1 -------------------

 Figure 1: The distinction between AI, Machine Learning and Deep Learning. 

Tokens are: 
>> ['Figure', '1', ':', 'The', 'distinction', 'between', 'AI', ',', 'Machine', 'Learning', 'and', 'Deep', 'Learning', '.'] 

 UPOS tags are: 
>> [('Figure', 'PROPN'), ('1', 'NUM'), (':', 'PUNCT'), ('The', 'DET'), ('distinction', 'NOUN'), ('between', 'ADP'), ('AI', 'NOUN'), (',', 'PUNCT'), ('Machine', 'NOUN'), ('Learning', 'NOUN'), ('and', 'CCONJ'), ('Deep', 'ADJ'), ('Learning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Figure', 'NNP'), ('1', 'CD'), (':', ':'), ('The', 'DT'), ('distinction', 'NN'), ('between', 'IN'), ('AI', 'NN'), (',', ','), ('Machine', 'NN'), ('Learning', 'NN'), ('and', 'CC'), ('Deep', 'JJ'), ('Learning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Figure', 'Figure'), ('1', '1'), (':', ':'), ('The', 'the'), ('distinction', 'distinction'), ('between', 'between'), ('AI', 'ai'), (',', ','), ('Machine', 'Machine'), ('Learning', 'learning'), ('and', 'and'), ('Deep', 'deep'), ('Learning', 'learning'), ('.', '.')] 

 Dependency tags are: 
>> [(('Figure', 'root'), 'root'), (('1', 'Figure'), 'dep'), ((':', 'distinction'), 'punct'), (('The', 'distinction'), 'det'), (('distinction', 'Figure'), 'appos'), (('between', 'AI'), 'case'), (('AI', 'distinction'), 'nmod'), ((',', 'Learning'), 'punct'), (('Machine', 'Learning'), 'compound'), (('Learning', 'AI'), 'conj'), (('and', 'Learning'), 'cc'), (('Deep', 'Learning'), 'amod'), (('Learning', 'AI'), 'conj'), (('.', 'Figure'), 'punct')]

 Named Entites are: 
>> [('1', 'CARDINAL'), ('AI', 'ORG')]

================================ Paragraph 34 =================================

“Artificial Intelligence (AI) is a science and a set of  computational technologies that are inspired by—but  typically operate quite differently from—the ways people  use their nervous systems and bodies to sense, learn,  reason and take action.”3 Lately there has been a big rise in  the day-to-day use of machines powered by AI. These  machines are wired using cross-disciplinary approaches  based on mathematics, computer science, statistics,  psychology and more.4 Virtual assistants are becoming  more common, most of the web shops predict your  purchases, many companies make use of chatbots in their  customer service and many companies use algorithms to  detect fraud. These are just a few of the examples of how  AI is used every day. 


------------------- Sentence 1 -------------------

 “Artificial Intelligence (AI) is a science and a set of  computational technologies that are inspired by—but  typically operate quite differently from—the ways people  use their nervous systems and bodies to sense, learn,  reason and take action.” 

Tokens are: 
>> ['“', 'Artificial', 'Intelligence', '(', 'AI', ')', 'is', 'a', 'science', 'and', 'a', 'set', 'of', 'computational', 'technologies', 'that', 'are', 'inspired', 'by', '—', 'but', 'typically', 'operate', 'quite', 'differently', 'from', '—', 'the', 'ways', 'people', 'use', 'their', 'nervous', 'systems', 'and', 'bodies', 'to', 'sense', ',', 'learn', ',', 'reason', 'and', 'take', 'action', '.', '”'] 

 UPOS tags are: 
>> [('“', 'PUNCT'), ('Artificial', 'ADJ'), ('Intelligence', 'PROPN'), ('(', 'PUNCT'), ('AI', 'NOUN'), (')', 'PUNCT'), ('is', 'AUX'), ('a', 'DET'), ('science', 'NOUN'), ('and', 'CCONJ'), ('a', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('computational', 'ADJ'), ('technologies', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('inspired', 'VERB'), ('by', 'ADP'), ('—', 'PUNCT'), ('but', 'CCONJ'), ('typically', 'ADV'), ('operate', 'VERB'), ('quite', 'ADV'), ('differently', 'ADV'), ('from', 'ADP'), ('—', 'PUNCT'), ('the', 'DET'), ('ways', 'NOUN'), ('people', 'NOUN'), ('use', 'VERB'), ('their', 'PRON'), ('nervous', 'ADJ'), ('systems', 'NOUN'), ('and', 'CCONJ'), ('bodies', 'NOUN'), ('to', 'PART'), ('sense', 'VERB'), (',', 'PUNCT'), ('learn', 'VERB'), (',', 'PUNCT'), ('reason', 'VERB'), ('and', 'CCONJ'), ('take', 'VERB'), ('action', 'NOUN'), ('.', 'PUNCT'), ('”', 'PUNCT')] 

 XPOS tags are: 
>> [('“', '``'), ('Artificial', 'NNP'), ('Intelligence', 'NNP'), ('(', '-LRB-'), ('AI', 'NN'), (')', '-RRB-'), ('is', 'VBZ'), ('a', 'DT'), ('science', 'NN'), ('and', 'CC'), ('a', 'DT'), ('set', 'NN'), ('of', 'IN'), ('computational', 'JJ'), ('technologies', 'NNS'), ('that', 'WDT'), ('are', 'VBP'), ('inspired', 'VBN'), ('by', 'IN'), ('—', ':'), ('but', 'CC'), ('typically', 'RB'), ('operate', 'VBP'), ('quite', 'RB'), ('differently', 'RB'), ('from', 'IN'), ('—', ':'), ('the', 'DT'), ('ways', 'NNS'), ('people', 'NNS'), ('use', 'VBP'), ('their', 'PRP$'), ('nervous', 'JJ'), ('systems', 'NNS'), ('and', 'CC'), ('bodies', 'NNS'), ('to', 'TO'), ('sense', 'VB'), (',', ','), ('learn', 'VB'), (',', ','), ('reason', 'VB'), ('and', 'CC'), ('take', 'VB'), ('action', 'NN'), ('.', '.'), ('”', "''")] 

 Lemmas are: 
>> [('“', "''"), ('Artificial', 'Artificial'), ('Intelligence', 'Intelligence'), ('(', '('), ('AI', 'ai'), (')', ')'), ('is', 'be'), ('a', 'a'), ('science', 'science'), ('and', 'and'), ('a', 'a'), ('set', 'set'), ('of', 'of'), ('computational', 'computational'), ('technologies', 'technology'), ('that', 'that'), ('are', 'be'), ('inspired', 'inspire'), ('by', 'by'), ('—', '—'), ('but', 'but'), ('typically', 'typically'), ('operate', 'operate'), ('quite', 'quite'), ('differently', 'differently'), ('from', 'from'), ('—', '—'), ('the', 'the'), ('ways', 'way'), ('people', 'people'), ('use', 'use'), ('their', 'they'), ('nervous', 'nervous'), ('systems', 'system'), ('and', 'and'), ('bodies', 'body'), ('to', 'to'), ('sense', 'sense'), (',', ','), ('learn', 'learn'), (',', ','), ('reason', 'reason'), ('and', 'and'), ('take', 'take'), ('action', 'action'), ('.', '.'), ('”', "''")] 

 Dependency tags are: 
>> [(('“', 'science'), 'punct'), (('Artificial', 'Intelligence'), 'amod'), (('Intelligence', 'science'), 'nsubj'), (('(', 'AI'), 'punct'), (('AI', 'Intelligence'), 'appos'), ((')', 'AI'), 'punct'), (('is', 'science'), 'cop'), (('a', 'science'), 'det'), (('science', 'root'), 'root'), (('and', 'set'), 'cc'), (('a', 'set'), 'det'), (('set', 'science'), 'conj'), (('of', 'technologies'), 'case'), (('computational', 'technologies'), 'amod'), (('technologies', 'set'), 'nmod'), (('that', 'inspired'), 'nsubj:pass'), (('are', 'inspired'), 'aux:pass'), (('inspired', 'technologies'), 'acl:relcl'), (('by', 'inspired'), 'obl'), (('—', 'operate'), 'punct'), (('but', 'operate'), 'cc'), (('typically', 'operate'), 'advmod'), (('operate', 'science'), 'conj'), (('quite', 'differently'), 'advmod'), (('differently', 'operate'), 'advmod'), (('from', 'ways'), 'case'), (('—', 'ways'), 'punct'), (('the', 'ways'), 'det'), (('ways', 'operate'), 'obl'), (('people', 'use'), 'nsubj'), (('use', 'ways'), 'acl:relcl'), (('their', 'systems'), 'nmod:poss'), (('nervous', 'systems'), 'amod'), (('systems', 'use'), 'obj'), (('and', 'bodies'), 'cc'), (('bodies', 'systems'), 'conj'), (('to', 'sense'), 'mark'), (('sense', 'use'), 'advcl'), ((',', 'learn'), 'punct'), (('learn', 'sense'), 'conj'), ((',', 'reason'), 'punct'), (('reason', 'sense'), 'conj'), (('and', 'take'), 'cc'), (('take', 'sense'), 'conj'), (('action', 'take'), 'obj'), (('.', 'science'), 'punct'), (('”', 'science'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 3 

Tokens are: 
>> ['3'] 

 UPOS tags are: 
>> [('3', 'X')] 

 XPOS tags are: 
>> [('3', 'LS')] 

 Lemmas are: 
>> [('3', '3')] 

 Dependency tags are: 
>> [(('3', 'root'), 'root')]

 Named Entites are: 
>> [('3', 'CARDINAL')]

------------------- Sentence 3 -------------------

 Lately there has been a big rise in  the day-to-day use of machines powered by AI. 

Tokens are: 
>> ['Lately', 'there', 'has', 'been', 'a', 'big', 'rise', 'in', 'the', 'day-', 'to', '-', 'day', 'use', 'of', 'machines', 'powered', 'by', 'AI', '.'] 

 UPOS tags are: 
>> [('Lately', 'ADV'), ('there', 'PRON'), ('has', 'AUX'), ('been', 'AUX'), ('a', 'DET'), ('big', 'ADJ'), ('rise', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('day-', 'NOUN'), ('to', 'ADP'), ('-', 'PUNCT'), ('day', 'NOUN'), ('use', 'NOUN'), ('of', 'ADP'), ('machines', 'NOUN'), ('powered', 'VERB'), ('by', 'ADP'), ('AI', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Lately', 'RB'), ('there', 'EX'), ('has', 'VBZ'), ('been', 'VBN'), ('a', 'DT'), ('big', 'JJ'), ('rise', 'NN'), ('in', 'IN'), ('the', 'DT'), ('day-', 'NN'), ('to', 'IN'), ('-', 'HYPH'), ('day', 'NN'), ('use', 'NN'), ('of', 'IN'), ('machines', 'NNS'), ('powered', 'VBN'), ('by', 'IN'), ('AI', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('Lately', 'lately'), ('there', 'there'), ('has', 'have'), ('been', 'be'), ('a', 'a'), ('big', 'big'), ('rise', 'rise'), ('in', 'in'), ('the', 'the'), ('day-', 'day-'), ('to', 'to'), ('-', '-'), ('day', 'day'), ('use', 'use'), ('of', 'of'), ('machines', 'machine'), ('powered', 'power'), ('by', 'by'), ('AI', 'AI'), ('.', '.')] 

 Dependency tags are: 
>> [(('Lately', 'been'), 'advmod'), (('there', 'been'), 'expl'), (('has', 'been'), 'aux'), (('been', 'root'), 'root'), (('a', 'rise'), 'det'), (('big', 'rise'), 'amod'), (('rise', 'been'), 'nsubj'), (('in', 'use'), 'case'), (('the', 'use'), 'det'), (('day-', 'use'), 'compound'), (('to', 'day'), 'case'), (('-', 'day'), 'punct'), (('day', 'day-'), 'nmod'), (('use', 'rise'), 'nmod'), (('of', 'machines'), 'case'), (('machines', 'use'), 'nmod'), (('powered', 'machines'), 'acl'), (('by', 'AI'), 'case'), (('AI', 'powered'), 'obl'), (('.', 'been'), 'punct')]

 Named Entites are: 
>> [('the day-to-day', 'DATE'), ('AI', 'ORG')]

------------------- Sentence 4 -------------------

 These  machines are wired using cross-disciplinary approaches  based on mathematics, computer science, statistics,  psychology and more. 

Tokens are: 
>> ['These', 'machines', 'are', 'wired', 'using', 'cross-disciplinary', 'approaches', 'based', 'on', 'mathematics', ',', 'computer', 'science', ',', 'statistics', ',', 'psychology', 'and', 'more', '.'] 

 UPOS tags are: 
>> [('These', 'DET'), ('machines', 'NOUN'), ('are', 'AUX'), ('wired', 'VERB'), ('using', 'VERB'), ('cross-disciplinary', 'ADJ'), ('approaches', 'NOUN'), ('based', 'VERB'), ('on', 'ADP'), ('mathematics', 'NOUN'), (',', 'PUNCT'), ('computer', 'NOUN'), ('science', 'NOUN'), (',', 'PUNCT'), ('statistics', 'NOUN'), (',', 'PUNCT'), ('psychology', 'NOUN'), ('and', 'CCONJ'), ('more', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('These', 'DT'), ('machines', 'NNS'), ('are', 'VBP'), ('wired', 'VBN'), ('using', 'VBG'), ('cross-disciplinary', 'JJ'), ('approaches', 'NNS'), ('based', 'VBN'), ('on', 'IN'), ('mathematics', 'NN'), (',', ','), ('computer', 'NN'), ('science', 'NN'), (',', ','), ('statistics', 'NNS'), (',', ','), ('psychology', 'NN'), ('and', 'CC'), ('more', 'RBR'), ('.', '.')] 

 Lemmas are: 
>> [('These', 'this'), ('machines', 'machine'), ('are', 'be'), ('wired', 'wire'), ('using', 'use'), ('cross-disciplinary', 'cross-disciplinary'), ('approaches', 'approach'), ('based', 'base'), ('on', 'on'), ('mathematics', 'mathematics'), (',', ','), ('computer', 'computer'), ('science', 'science'), (',', ','), ('statistics', 'statistic'), (',', ','), ('psychology', 'psychology'), ('and', 'and'), ('more', 'more'), ('.', '.')] 

 Dependency tags are: 
>> [(('These', 'machines'), 'det'), (('machines', 'wired'), 'nsubj:pass'), (('are', 'wired'), 'aux:pass'), (('wired', 'root'), 'root'), (('using', 'wired'), 'advcl'), (('cross-disciplinary', 'approaches'), 'amod'), (('approaches', 'using'), 'obj'), (('based', 'approaches'), 'acl'), (('on', 'mathematics'), 'case'), (('mathematics', 'based'), 'obl'), ((',', 'science'), 'punct'), (('computer', 'science'), 'compound'), (('science', 'mathematics'), 'conj'), ((',', 'statistics'), 'punct'), (('statistics', 'mathematics'), 'conj'), ((',', 'psychology'), 'punct'), (('psychology', 'mathematics'), 'conj'), (('and', 'more'), 'cc'), (('more', 'mathematics'), 'conj'), (('.', 'wired'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 4 Virtual assistants are becoming  more common, most of the web shops predict your  purchases, many companies make use of chatbots in their  customer service and many companies use algorithms to  detect fraud. 

Tokens are: 
>> ['4', 'Virtual', 'assistants', 'are', 'becoming', 'more', 'common', ',', 'most', 'of', 'the', 'web', 'shops', 'predict', 'your', 'purchases', ',', 'many', 'companies', 'make', 'use', 'of', 'chatbots', 'in', 'their', 'customer', 'service', 'and', 'many', 'companies', 'use', 'algorithms', 'to', 'detect', 'fraud', '.'] 

 UPOS tags are: 
>> [('4', 'NUM'), ('Virtual', 'ADJ'), ('assistants', 'NOUN'), ('are', 'AUX'), ('becoming', 'VERB'), ('more', 'ADV'), ('common', 'ADJ'), (',', 'PUNCT'), ('most', 'ADJ'), ('of', 'ADP'), ('the', 'DET'), ('web', 'NOUN'), ('shops', 'NOUN'), ('predict', 'VERB'), ('your', 'PRON'), ('purchases', 'NOUN'), (',', 'PUNCT'), ('many', 'ADJ'), ('companies', 'NOUN'), ('make', 'VERB'), ('use', 'NOUN'), ('of', 'ADP'), ('chatbots', 'NOUN'), ('in', 'ADP'), ('their', 'PRON'), ('customer', 'NOUN'), ('service', 'NOUN'), ('and', 'CCONJ'), ('many', 'ADJ'), ('companies', 'NOUN'), ('use', 'VERB'), ('algorithms', 'NOUN'), ('to', 'PART'), ('detect', 'VERB'), ('fraud', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('4', 'CD'), ('Virtual', 'JJ'), ('assistants', 'NNS'), ('are', 'VBP'), ('becoming', 'VBG'), ('more', 'RBR'), ('common', 'JJ'), (',', ','), ('most', 'JJS'), ('of', 'IN'), ('the', 'DT'), ('web', 'NN'), ('shops', 'NNS'), ('predict', 'VBP'), ('your', 'PRP$'), ('purchases', 'NNS'), (',', ','), ('many', 'JJ'), ('companies', 'NNS'), ('make', 'VBP'), ('use', 'NN'), ('of', 'IN'), ('chatbots', 'NNS'), ('in', 'IN'), ('their', 'PRP$'), ('customer', 'NN'), ('service', 'NN'), ('and', 'CC'), ('many', 'JJ'), ('companies', 'NNS'), ('use', 'VBP'), ('algorithms', 'NNS'), ('to', 'TO'), ('detect', 'VB'), ('fraud', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('4', '4'), ('Virtual', 'virtual'), ('assistants', 'assistant'), ('are', 'be'), ('becoming', 'become'), ('more', 'more'), ('common', 'common'), (',', ','), ('most', 'most'), ('of', 'of'), ('the', 'the'), ('web', 'web'), ('shops', 'shop'), ('predict', 'predict'), ('your', 'you'), ('purchases', 'purchase'), (',', ','), ('many', 'many'), ('companies', 'company'), ('make', 'make'), ('use', 'use'), ('of', 'of'), ('chatbots', 'chatbot'), ('in', 'in'), ('their', 'they'), ('customer', 'customer'), ('service', 'service'), ('and', 'and'), ('many', 'many'), ('companies', 'company'), ('use', 'use'), ('algorithms', 'algorithm'), ('to', 'to'), ('detect', 'detect'), ('fraud', 'fraud'), ('.', '.')] 

 Dependency tags are: 
>> [(('4', 'assistants'), 'nummod'), (('Virtual', 'assistants'), 'amod'), (('assistants', 'becoming'), 'nsubj'), (('are', 'becoming'), 'aux'), (('becoming', 'root'), 'root'), (('more', 'common'), 'advmod'), (('common', 'becoming'), 'xcomp'), ((',', 'predict'), 'punct'), (('most', 'predict'), 'nsubj'), (('of', 'shops'), 'case'), (('the', 'shops'), 'det'), (('web', 'shops'), 'compound'), (('shops', 'most'), 'nmod'), (('predict', 'becoming'), 'parataxis'), (('your', 'purchases'), 'nmod:poss'), (('purchases', 'predict'), 'obj'), ((',', 'make'), 'punct'), (('many', 'companies'), 'amod'), (('companies', 'make'), 'nsubj'), (('make', 'becoming'), 'parataxis'), (('use', 'make'), 'obj'), (('of', 'chatbots'), 'case'), (('chatbots', 'use'), 'nmod'), (('in', 'service'), 'case'), (('their', 'service'), 'nmod:poss'), (('customer', 'service'), 'compound'), (('service', 'chatbots'), 'nmod'), (('and', 'use'), 'cc'), (('many', 'companies'), 'amod'), (('companies', 'use'), 'nsubj'), (('use', 'becoming'), 'conj'), (('algorithms', 'use'), 'obj'), (('to', 'detect'), 'mark'), (('detect', 'use'), 'advcl'), (('fraud', 'detect'), 'obj'), (('.', 'becoming'), 'punct')]

 Named Entites are: 
>> [('4', 'CARDINAL')]

------------------- Sentence 6 -------------------

 These are just a few of the examples of how  AI is used every day. 

Tokens are: 
>> ['These', 'are', 'just', 'a', 'few', 'of', 'the', 'examples', 'of', 'how', 'AI', 'is', 'used', 'every', 'day', '.'] 

 UPOS tags are: 
>> [('These', 'PRON'), ('are', 'AUX'), ('just', 'ADV'), ('a', 'DET'), ('few', 'ADJ'), ('of', 'ADP'), ('the', 'DET'), ('examples', 'NOUN'), ('of', 'ADP'), ('how', 'SCONJ'), ('AI', 'NOUN'), ('is', 'AUX'), ('used', 'VERB'), ('every', 'DET'), ('day', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('These', 'DT'), ('are', 'VBP'), ('just', 'RB'), ('a', 'DT'), ('few', 'JJ'), ('of', 'IN'), ('the', 'DT'), ('examples', 'NNS'), ('of', 'IN'), ('how', 'WRB'), ('AI', 'NN'), ('is', 'VBZ'), ('used', 'VBN'), ('every', 'DT'), ('day', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('These', 'this'), ('are', 'be'), ('just', 'just'), ('a', 'a'), ('few', 'few'), ('of', 'of'), ('the', 'the'), ('examples', 'example'), ('of', 'of'), ('how', 'how'), ('AI', 'ai'), ('is', 'be'), ('used', 'use'), ('every', 'every'), ('day', 'day'), ('.', '.')] 

 Dependency tags are: 
>> [(('These', 'few'), 'nsubj'), (('are', 'few'), 'cop'), (('just', 'few'), 'advmod'), (('a', 'few'), 'det'), (('few', 'root'), 'root'), (('of', 'examples'), 'case'), (('the', 'examples'), 'det'), (('examples', 'few'), 'nmod'), (('of', 'how'), 'case'), (('how', 'used'), 'mark'), (('AI', 'used'), 'nsubj:pass'), (('is', 'used'), 'aux:pass'), (('used', 'examples'), 'acl:relcl'), (('every', 'day'), 'det'), (('day', 'used'), 'obl:tmod'), (('.', 'few'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 35 =================================

4     Beyond the hype: A guide to understanding and successfully implementing artificial intelligence within your business 


------------------- Sentence 1 -------------------

 4     Beyond the hype: A guide to understanding and successfully implementing artificial intelligence within your business 

Tokens are: 
>> ['4', 'Beyond', 'the', 'hype', ':', 'A', 'guide', 'to', 'understanding', 'and', 'successfully', 'implementing', 'artificial', 'intelligence', 'within', 'your', 'business'] 

 UPOS tags are: 
>> [('4', 'NUM'), ('Beyond', 'ADP'), ('the', 'DET'), ('hype', 'NOUN'), (':', 'PUNCT'), ('A', 'DET'), ('guide', 'NOUN'), ('to', 'ADP'), ('understanding', 'VERB'), ('and', 'CCONJ'), ('successfully', 'ADV'), ('implementing', 'VERB'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('within', 'ADP'), ('your', 'PRON'), ('business', 'NOUN')] 

 XPOS tags are: 
>> [('4', 'LS'), ('Beyond', 'IN'), ('the', 'DT'), ('hype', 'NN'), (':', ':'), ('A', 'DT'), ('guide', 'NN'), ('to', 'IN'), ('understanding', 'VBG'), ('and', 'CC'), ('successfully', 'RB'), ('implementing', 'VBG'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('within', 'IN'), ('your', 'PRP$'), ('business', 'NN')] 

 Lemmas are: 
>> [('4', '4'), ('Beyond', 'beyond'), ('the', 'the'), ('hype', 'hype'), (':', ':'), ('A', 'a'), ('guide', 'guide'), ('to', 'to'), ('understanding', 'understand'), ('and', 'and'), ('successfully', 'successfully'), ('implementing', 'implement'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('within', 'within'), ('your', 'you'), ('business', 'business')] 

 Dependency tags are: 
>> [(('4', 'hype'), 'dep'), (('Beyond', 'hype'), 'case'), (('the', 'hype'), 'det'), (('hype', 'root'), 'root'), ((':', 'guide'), 'punct'), (('A', 'guide'), 'det'), (('guide', 'hype'), 'appos'), (('to', 'understanding'), 'mark'), (('understanding', 'guide'), 'acl'), (('and', 'implementing'), 'cc'), (('successfully', 'implementing'), 'advmod'), (('implementing', 'understanding'), 'conj'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'implementing'), 'obj'), (('within', 'business'), 'case'), (('your', 'business'), 'nmod:poss'), (('business', 'implementing'), 'obl')]

 Named Entites are: 
>> []

================================ Paragraph 36 =================================

Machine learning  Machine learning is enabling a machine to learn from data  without explicitly programming it with rules, because it can  learn from the data it’s given. In essence, you could build  an AI consisting of many different rules and it would also be  able to be AI. But instead of programming all the rules, you  feed the algorithm data and let the algorithm adjust itself to  improve the accuracy of the algorithm. Traditional science  algorithms mainly process, whereas machine learning is  about applying an algorithm to fit a model to the data.  Examples of machine-learning algorithms that are used a  lot and that you might be familiar with are decision trees,  random forest, Bayesian networks, K-mean clustering,  neural networks, regression, artificial neural networks,  deep learning and reinforcement learning. Artificial neural  networks and deep learning have recently become more  common machine learning algorithms. 


------------------- Sentence 1 -------------------

 Machine learning  Machine learning is enabling a machine to learn from data  without explicitly programming it with rules, because it can  learn from the data it’s given. 

Tokens are: 
>> ['Machine', 'learning', 'Machine', 'learning', 'is', 'enabling', 'a', 'machine', 'to', 'learn', 'from', 'data', 'without', 'explicitly', 'programming', 'it', 'with', 'rules', ',', 'because', 'it', 'can', 'learn', 'from', 'the', 'data', 'it', '’s', 'given', '.'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('learning', 'NOUN'), ('Machine', 'NOUN'), ('learning', 'NOUN'), ('is', 'AUX'), ('enabling', 'VERB'), ('a', 'DET'), ('machine', 'NOUN'), ('to', 'PART'), ('learn', 'VERB'), ('from', 'ADP'), ('data', 'NOUN'), ('without', 'SCONJ'), ('explicitly', 'ADV'), ('programming', 'VERB'), ('it', 'PRON'), ('with', 'ADP'), ('rules', 'NOUN'), (',', 'PUNCT'), ('because', 'SCONJ'), ('it', 'PRON'), ('can', 'AUX'), ('learn', 'VERB'), ('from', 'ADP'), ('the', 'DET'), ('data', 'NOUN'), ('it', 'PRON'), ('’s', 'AUX'), ('given', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('learning', 'NN'), ('Machine', 'NN'), ('learning', 'NN'), ('is', 'VBZ'), ('enabling', 'VBG'), ('a', 'DT'), ('machine', 'NN'), ('to', 'TO'), ('learn', 'VB'), ('from', 'IN'), ('data', 'NNS'), ('without', 'IN'), ('explicitly', 'RB'), ('programming', 'VBG'), ('it', 'PRP'), ('with', 'IN'), ('rules', 'NNS'), (',', ','), ('because', 'IN'), ('it', 'PRP'), ('can', 'MD'), ('learn', 'VB'), ('from', 'IN'), ('the', 'DT'), ('data', 'NNS'), ('it', 'PRP'), ('’s', 'VBZ'), ('given', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('learning', 'learning'), ('Machine', 'Machine'), ('learning', 'learning'), ('is', 'be'), ('enabling', 'enable'), ('a', 'a'), ('machine', 'machine'), ('to', 'to'), ('learn', 'learn'), ('from', 'from'), ('data', 'datum'), ('without', 'without'), ('explicitly', 'explicitly'), ('programming', 'programming'), ('it', 'it'), ('with', 'with'), ('rules', 'rule'), (',', ','), ('because', 'because'), ('it', 'it'), ('can', 'can'), ('learn', 'learn'), ('from', 'from'), ('the', 'the'), ('data', 'datum'), ('it', 'it'), ('’s', 'be'), ('given', 'give'), ('.', '.')] 

 Dependency tags are: 
>> [(('Machine', 'learning'), 'compound'), (('learning', 'Machine'), 'compound'), (('Machine', 'learning'), 'compound'), (('learning', 'enabling'), 'nsubj'), (('is', 'enabling'), 'aux'), (('enabling', 'root'), 'root'), (('a', 'machine'), 'det'), (('machine', 'enabling'), 'obj'), (('to', 'learn'), 'mark'), (('learn', 'machine'), 'acl'), (('from', 'data'), 'case'), (('data', 'learn'), 'obl'), (('without', 'programming'), 'mark'), (('explicitly', 'programming'), 'advmod'), (('programming', 'learn'), 'advcl'), (('it', 'programming'), 'obj'), (('with', 'rules'), 'case'), (('rules', 'programming'), 'obl'), ((',', 'learn'), 'punct'), (('because', 'learn'), 'mark'), (('it', 'learn'), 'nsubj'), (('can', 'learn'), 'aux'), (('learn', 'learn'), 'advcl'), (('from', 'data'), 'case'), (('the', 'data'), 'det'), (('data', 'learn'), 'obl'), (('it', 'given'), 'nsubj:pass'), (('’s', 'given'), 'aux:pass'), (('given', 'data'), 'acl:relcl'), (('.', 'enabling'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 In essence, you could build  an AI consisting of many different rules and it would also be  able to be AI. 

Tokens are: 
>> ['In', 'essence', ',', 'you', 'could', 'build', 'an', 'AI', 'consisting', 'of', 'many', 'different', 'rules', 'and', 'it', 'would', 'also', 'be', 'able', 'to', 'be', 'AI', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('essence', 'NOUN'), (',', 'PUNCT'), ('you', 'PRON'), ('could', 'AUX'), ('build', 'VERB'), ('an', 'DET'), ('AI', 'NOUN'), ('consisting', 'VERB'), ('of', 'ADP'), ('many', 'ADJ'), ('different', 'ADJ'), ('rules', 'NOUN'), ('and', 'CCONJ'), ('it', 'PRON'), ('would', 'AUX'), ('also', 'ADV'), ('be', 'AUX'), ('able', 'ADJ'), ('to', 'PART'), ('be', 'AUX'), ('AI', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('essence', 'NN'), (',', ','), ('you', 'PRP'), ('could', 'MD'), ('build', 'VB'), ('an', 'DT'), ('AI', 'NN'), ('consisting', 'VBG'), ('of', 'IN'), ('many', 'JJ'), ('different', 'JJ'), ('rules', 'NNS'), ('and', 'CC'), ('it', 'PRP'), ('would', 'MD'), ('also', 'RB'), ('be', 'VB'), ('able', 'JJ'), ('to', 'TO'), ('be', 'VB'), ('AI', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('essence', 'essence'), (',', ','), ('you', 'you'), ('could', 'could'), ('build', 'build'), ('an', 'a'), ('AI', 'ai'), ('consisting', 'consist'), ('of', 'of'), ('many', 'many'), ('different', 'different'), ('rules', 'rule'), ('and', 'and'), ('it', 'it'), ('would', 'would'), ('also', 'also'), ('be', 'be'), ('able', 'able'), ('to', 'to'), ('be', 'be'), ('AI', 'be'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'essence'), 'case'), (('essence', 'build'), 'obl'), ((',', 'build'), 'punct'), (('you', 'build'), 'nsubj'), (('could', 'build'), 'aux'), (('build', 'root'), 'root'), (('an', 'AI'), 'det'), (('AI', 'build'), 'obj'), (('consisting', 'AI'), 'acl'), (('of', 'rules'), 'case'), (('many', 'rules'), 'amod'), (('different', 'rules'), 'amod'), (('rules', 'consisting'), 'obl'), (('and', 'able'), 'cc'), (('it', 'able'), 'nsubj'), (('would', 'able'), 'aux'), (('also', 'able'), 'advmod'), (('be', 'able'), 'cop'), (('able', 'build'), 'conj'), (('to', 'AI'), 'mark'), (('be', 'AI'), 'cop'), (('AI', 'able'), 'xcomp'), (('.', 'build'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 But instead of programming all the rules, you  feed the algorithm data and let the algorithm adjust itself to  improve the accuracy of the algorithm. 

Tokens are: 
>> ['But', 'instead', 'of', 'programming', 'all', 'the', 'rules', ',', 'you', 'feed', 'the', 'algorithm', 'data', 'and', 'let', 'the', 'algorithm', 'adjust', 'itself', 'to', 'improve', 'the', 'accuracy', 'of', 'the', 'algorithm', '.'] 

 UPOS tags are: 
>> [('But', 'CCONJ'), ('instead', 'ADV'), ('of', 'SCONJ'), ('programming', 'VERB'), ('all', 'PRON'), ('the', 'DET'), ('rules', 'NOUN'), (',', 'PUNCT'), ('you', 'PRON'), ('feed', 'VERB'), ('the', 'DET'), ('algorithm', 'NOUN'), ('data', 'NOUN'), ('and', 'CCONJ'), ('let', 'VERB'), ('the', 'DET'), ('algorithm', 'NOUN'), ('adjust', 'VERB'), ('itself', 'PRON'), ('to', 'PART'), ('improve', 'VERB'), ('the', 'DET'), ('accuracy', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('algorithm', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('But', 'CC'), ('instead', 'RB'), ('of', 'IN'), ('programming', 'VBG'), ('all', 'PDT'), ('the', 'DT'), ('rules', 'NNS'), (',', ','), ('you', 'PRP'), ('feed', 'VBP'), ('the', 'DT'), ('algorithm', 'NN'), ('data', 'NNS'), ('and', 'CC'), ('let', 'VB'), ('the', 'DT'), ('algorithm', 'NN'), ('adjust', 'VB'), ('itself', 'PRP'), ('to', 'TO'), ('improve', 'VB'), ('the', 'DT'), ('accuracy', 'NN'), ('of', 'IN'), ('the', 'DT'), ('algorithm', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('But', 'but'), ('instead', 'instead'), ('of', 'of'), ('programming', 'programming'), ('all', 'all'), ('the', 'the'), ('rules', 'rule'), (',', ','), ('you', 'you'), ('feed', 'feed'), ('the', 'the'), ('algorithm', 'algorithm'), ('data', 'datum'), ('and', 'and'), ('let', 'let'), ('the', 'the'), ('algorithm', 'algorithm'), ('adjust', 'adjust'), ('itself', 'itself'), ('to', 'to'), ('improve', 'improve'), ('the', 'the'), ('accuracy', 'accuracy'), ('of', 'of'), ('the', 'the'), ('algorithm', 'algorithm'), ('.', '.')] 

 Dependency tags are: 
>> [(('But', 'feed'), 'cc'), (('instead', 'programming'), 'mark'), (('of', 'instead'), 'fixed'), (('programming', 'feed'), 'advcl'), (('all', 'rules'), 'det:predet'), (('the', 'rules'), 'det'), (('rules', 'programming'), 'obj'), ((',', 'feed'), 'punct'), (('you', 'feed'), 'nsubj'), (('feed', 'root'), 'root'), (('the', 'data'), 'det'), (('algorithm', 'data'), 'compound'), (('data', 'feed'), 'obj'), (('and', 'let'), 'cc'), (('let', 'feed'), 'conj'), (('the', 'algorithm'), 'det'), (('algorithm', 'let'), 'obj'), (('adjust', 'let'), 'xcomp'), (('itself', 'adjust'), 'obj'), (('to', 'improve'), 'mark'), (('improve', 'adjust'), 'advcl'), (('the', 'accuracy'), 'det'), (('accuracy', 'improve'), 'obj'), (('of', 'algorithm'), 'case'), (('the', 'algorithm'), 'det'), (('algorithm', 'accuracy'), 'nmod'), (('.', 'feed'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Traditional science  algorithms mainly process, whereas machine learning is  about applying an algorithm to fit a model to the data. 

Tokens are: 
>> ['Traditional', 'science', 'algorithms', 'mainly', 'process', ',', 'whereas', 'machine', 'learning', 'is', 'about', 'applying', 'an', 'algorithm', 'to', 'fit', 'a', 'model', 'to', 'the', 'data', '.'] 

 UPOS tags are: 
>> [('Traditional', 'ADJ'), ('science', 'NOUN'), ('algorithms', 'NOUN'), ('mainly', 'ADV'), ('process', 'VERB'), (',', 'PUNCT'), ('whereas', 'SCONJ'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('is', 'AUX'), ('about', 'SCONJ'), ('applying', 'VERB'), ('an', 'DET'), ('algorithm', 'NOUN'), ('to', 'PART'), ('fit', 'VERB'), ('a', 'DET'), ('model', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Traditional', 'JJ'), ('science', 'NN'), ('algorithms', 'NNS'), ('mainly', 'RB'), ('process', 'VBP'), (',', ','), ('whereas', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('is', 'VBZ'), ('about', 'IN'), ('applying', 'VBG'), ('an', 'DT'), ('algorithm', 'NN'), ('to', 'TO'), ('fit', 'VB'), ('a', 'DT'), ('model', 'NN'), ('to', 'IN'), ('the', 'DT'), ('data', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Traditional', 'traditional'), ('science', 'science'), ('algorithms', 'algorithm'), ('mainly', 'mainly'), ('process', 'process'), (',', ','), ('whereas', 'whereas'), ('machine', 'machine'), ('learning', 'learning'), ('is', 'be'), ('about', 'about'), ('applying', 'apply'), ('an', 'a'), ('algorithm', 'algorithm'), ('to', 'to'), ('fit', 'fit'), ('a', 'a'), ('model', 'model'), ('to', 'to'), ('the', 'the'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('Traditional', 'algorithms'), 'amod'), (('science', 'algorithms'), 'compound'), (('algorithms', 'process'), 'nsubj'), (('mainly', 'process'), 'advmod'), (('process', 'root'), 'root'), ((',', 'process'), 'punct'), (('whereas', 'applying'), 'mark'), (('machine', 'learning'), 'compound'), (('learning', 'applying'), 'nsubj'), (('is', 'applying'), 'cop'), (('about', 'applying'), 'mark'), (('applying', 'process'), 'advcl'), (('an', 'algorithm'), 'det'), (('algorithm', 'applying'), 'obj'), (('to', 'fit'), 'mark'), (('fit', 'algorithm'), 'acl'), (('a', 'model'), 'det'), (('model', 'fit'), 'obj'), (('to', 'data'), 'case'), (('the', 'data'), 'det'), (('data', 'fit'), 'obl'), (('.', 'process'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 Examples of machine-learning algorithms that are used a  lot and that you might be familiar with are decision trees,  random forest, Bayesian networks, K-mean clustering,  neural networks, regression, artificial neural networks,  deep learning and reinforcement learning. 

Tokens are: 
>> ['Examples', 'of', 'machine', '-', 'learning', 'algorithms', 'that', 'are', 'used', 'a', 'lot', 'and', 'that', 'you', 'might', 'be', 'familiar', 'with', 'are', 'decision', 'trees', ',', 'random', 'forest', ',', 'Bayesian', 'networks', ',', 'K-mean', 'clustering', ',', 'neural', 'networks', ',', 'regression', ',', 'artificial', 'neural', 'networks', ',', 'deep', 'learning', 'and', 'reinforcement', 'learning', '.'] 

 UPOS tags are: 
>> [('Examples', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('-', 'PUNCT'), ('learning', 'NOUN'), ('algorithms', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('used', 'VERB'), ('a', 'DET'), ('lot', 'NOUN'), ('and', 'CCONJ'), ('that', 'SCONJ'), ('you', 'PRON'), ('might', 'AUX'), ('be', 'AUX'), ('familiar', 'ADJ'), ('with', 'ADP'), ('are', 'VERB'), ('decision', 'NOUN'), ('trees', 'NOUN'), (',', 'PUNCT'), ('random', 'ADJ'), ('forest', 'NOUN'), (',', 'PUNCT'), ('Bayesian', 'ADJ'), ('networks', 'NOUN'), (',', 'PUNCT'), ('K-mean', 'ADJ'), ('clustering', 'NOUN'), (',', 'PUNCT'), ('neural', 'ADJ'), ('networks', 'NOUN'), (',', 'PUNCT'), ('regression', 'NOUN'), (',', 'PUNCT'), ('artificial', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), (',', 'PUNCT'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('and', 'CCONJ'), ('reinforcement', 'NOUN'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Examples', 'NNS'), ('of', 'IN'), ('machine', 'NN'), ('-', 'HYPH'), ('learning', 'NN'), ('algorithms', 'NNS'), ('that', 'WDT'), ('are', 'VBP'), ('used', 'VBN'), ('a', 'DT'), ('lot', 'NN'), ('and', 'CC'), ('that', 'IN'), ('you', 'PRP'), ('might', 'MD'), ('be', 'VB'), ('familiar', 'JJ'), ('with', 'IN'), ('are', 'VBP'), ('decision', 'NN'), ('trees', 'NNS'), (',', ','), ('random', 'JJ'), ('forest', 'NN'), (',', ','), ('Bayesian', 'JJ'), ('networks', 'NNS'), (',', ','), ('K-mean', 'JJ'), ('clustering', 'NN'), (',', ','), ('neural', 'JJ'), ('networks', 'NNS'), (',', ','), ('regression', 'NN'), (',', ','), ('artificial', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), (',', ','), ('deep', 'JJ'), ('learning', 'NN'), ('and', 'CC'), ('reinforcement', 'NN'), ('learning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Examples', 'example'), ('of', 'of'), ('machine', 'machine'), ('-', '-'), ('learning', 'learning'), ('algorithms', 'algorithm'), ('that', 'that'), ('are', 'be'), ('used', 'use'), ('a', 'a'), ('lot', 'lot'), ('and', 'and'), ('that', 'that'), ('you', 'you'), ('might', 'might'), ('be', 'be'), ('familiar', 'familiar'), ('with', 'with'), ('are', 'be'), ('decision', 'decision'), ('trees', 'tree'), (',', ','), ('random', 'random'), ('forest', 'forest'), (',', ','), ('Bayesian', 'Bayesian'), ('networks', 'network'), (',', ','), ('K-mean', 'K-mean'), ('clustering', 'clustering'), (',', ','), ('neural', 'neural'), ('networks', 'network'), (',', ','), ('regression', 'regression'), (',', ','), ('artificial', 'artificial'), ('neural', 'neural'), ('networks', 'network'), (',', ','), ('deep', 'deep'), ('learning', 'learning'), ('and', 'and'), ('reinforcement', 'reinforcement'), ('learning', 'learning'), ('.', '.')] 

 Dependency tags are: 
>> [(('Examples', 'are'), 'nsubj'), (('of', 'algorithms'), 'case'), (('machine', 'learning'), 'compound'), (('-', 'learning'), 'punct'), (('learning', 'algorithms'), 'compound'), (('algorithms', 'Examples'), 'nmod'), (('that', 'used'), 'nsubj:pass'), (('are', 'used'), 'aux:pass'), (('used', 'algorithms'), 'acl:relcl'), (('a', 'lot'), 'det'), (('lot', 'used'), 'obj'), (('and', 'familiar'), 'cc'), (('that', 'familiar'), 'mark'), (('you', 'familiar'), 'nsubj'), (('might', 'familiar'), 'aux'), (('be', 'familiar'), 'cop'), (('familiar', 'used'), 'conj'), (('with', 'familiar'), 'obl'), (('are', 'root'), 'root'), (('decision', 'trees'), 'compound'), (('trees', 'are'), 'nsubj'), ((',', 'forest'), 'punct'), (('random', 'forest'), 'amod'), (('forest', 'trees'), 'conj'), ((',', 'networks'), 'punct'), (('Bayesian', 'networks'), 'amod'), (('networks', 'trees'), 'conj'), ((',', 'clustering'), 'punct'), (('K-mean', 'clustering'), 'amod'), (('clustering', 'trees'), 'conj'), ((',', 'networks'), 'punct'), (('neural', 'networks'), 'amod'), (('networks', 'trees'), 'conj'), ((',', 'regression'), 'punct'), (('regression', 'trees'), 'conj'), ((',', 'networks'), 'punct'), (('artificial', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'trees'), 'conj'), ((',', 'learning'), 'punct'), (('deep', 'learning'), 'amod'), (('learning', 'trees'), 'conj'), (('and', 'learning'), 'cc'), (('reinforcement', 'learning'), 'compound'), (('learning', 'trees'), 'conj'), (('.', 'are'), 'punct')]

 Named Entites are: 
>> [('Bayesian', 'NORP')]

------------------- Sentence 6 -------------------

 Artificial neural  networks and deep learning have recently become more  common machine learning algorithms. 

Tokens are: 
>> ['Artificial', 'neural', 'networks', 'and', 'deep', 'learning', 'have', 'recently', 'become', 'more', 'common', 'machine', 'learning', 'algorithms', '.'] 

 UPOS tags are: 
>> [('Artificial', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('and', 'CCONJ'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('have', 'AUX'), ('recently', 'ADV'), ('become', 'VERB'), ('more', 'ADV'), ('common', 'ADJ'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('algorithms', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Artificial', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), ('and', 'CC'), ('deep', 'JJ'), ('learning', 'NN'), ('have', 'VBP'), ('recently', 'RB'), ('become', 'VBN'), ('more', 'RBR'), ('common', 'JJ'), ('machine', 'NN'), ('learning', 'NN'), ('algorithms', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Artificial', 'Artificial'), ('neural', 'neural'), ('networks', 'network'), ('and', 'and'), ('deep', 'deep'), ('learning', 'learning'), ('have', 'have'), ('recently', 'recently'), ('become', 'become'), ('more', 'more'), ('common', 'common'), ('machine', 'machine'), ('learning', 'learning'), ('algorithms', 'algorithm'), ('.', '.')] 

 Dependency tags are: 
>> [(('Artificial', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'become'), 'nsubj'), (('and', 'learning'), 'cc'), (('deep', 'learning'), 'amod'), (('learning', 'networks'), 'conj'), (('have', 'become'), 'aux'), (('recently', 'become'), 'advmod'), (('become', 'root'), 'root'), (('more', 'common'), 'advmod'), (('common', 'algorithms'), 'amod'), (('machine', 'algorithms'), 'compound'), (('learning', 'algorithms'), 'compound'), (('algorithms', 'become'), 'xcomp'), (('.', 'become'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 37 =================================

Implementation examples would be predicting stock market  prices or predicting whether a customer will churn from  your company.  


------------------- Sentence 1 -------------------

 Implementation examples would be predicting stock market  prices or predicting whether a customer will churn from  your company. 

Tokens are: 
>> ['Implementation', 'examples', 'would', 'be', 'predicting', 'stock', 'market', 'prices', 'or', 'predicting', 'whether', 'a', 'customer', 'will', 'churn', 'from', 'your', 'company', '.'] 

 UPOS tags are: 
>> [('Implementation', 'NOUN'), ('examples', 'NOUN'), ('would', 'AUX'), ('be', 'AUX'), ('predicting', 'VERB'), ('stock', 'NOUN'), ('market', 'NOUN'), ('prices', 'NOUN'), ('or', 'CCONJ'), ('predicting', 'VERB'), ('whether', 'SCONJ'), ('a', 'DET'), ('customer', 'NOUN'), ('will', 'AUX'), ('churn', 'VERB'), ('from', 'ADP'), ('your', 'PRON'), ('company', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Implementation', 'NN'), ('examples', 'NNS'), ('would', 'MD'), ('be', 'VB'), ('predicting', 'VBG'), ('stock', 'NN'), ('market', 'NN'), ('prices', 'NNS'), ('or', 'CC'), ('predicting', 'VBG'), ('whether', 'IN'), ('a', 'DT'), ('customer', 'NN'), ('will', 'MD'), ('churn', 'VB'), ('from', 'IN'), ('your', 'PRP$'), ('company', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Implementation', 'implementation'), ('examples', 'example'), ('would', 'would'), ('be', 'be'), ('predicting', 'predict'), ('stock', 'stock'), ('market', 'market'), ('prices', 'price'), ('or', 'or'), ('predicting', 'predict'), ('whether', 'whether'), ('a', 'a'), ('customer', 'customer'), ('will', 'will'), ('churn', 'churn'), ('from', 'from'), ('your', 'you'), ('company', 'company'), ('.', '.')] 

 Dependency tags are: 
>> [(('Implementation', 'examples'), 'compound'), (('examples', 'predicting'), 'nsubj'), (('would', 'predicting'), 'aux'), (('be', 'predicting'), 'aux'), (('predicting', 'root'), 'root'), (('stock', 'market'), 'compound'), (('market', 'prices'), 'compound'), (('prices', 'predicting'), 'obj'), (('or', 'predicting'), 'cc'), (('predicting', 'predicting'), 'conj'), (('whether', 'churn'), 'mark'), (('a', 'customer'), 'det'), (('customer', 'churn'), 'nsubj'), (('will', 'churn'), 'aux'), (('churn', 'predicting'), 'ccomp'), (('from', 'company'), 'case'), (('your', 'company'), 'nmod:poss'), (('company', 'churn'), 'obl'), (('.', 'predicting'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 38 =================================

Deep learning  Deep learning (DL) is a relatively new set of methods that  is changing machine learning in fundamental ways. DL isn’t  an algorithm per se, but rather a family of algorithms that  implements deep networks (many layers). These networks  are so deep that new methods of computation, such as  graphics processing units (GPUs), are required to train  them, in addition to clusters of compute nodes.  


------------------- Sentence 1 -------------------

 Deep learning  Deep learning (DL) is a relatively new set of methods that  is changing machine learning in fundamental ways. 

Tokens are: 
>> ['Deep', 'learning', 'Deep', 'learning', '(', 'DL', ')', 'is', 'a', 'relatively', 'new', 'set', 'of', 'methods', 'that', 'is', 'changing', 'machine', 'learning', 'in', 'fundamental', 'ways', '.'] 

 UPOS tags are: 
>> [('Deep', 'ADJ'), ('learning', 'NOUN'), ('Deep', 'ADJ'), ('learning', 'NOUN'), ('(', 'PUNCT'), ('DL', 'PROPN'), (')', 'PUNCT'), ('is', 'AUX'), ('a', 'DET'), ('relatively', 'ADV'), ('new', 'ADJ'), ('set', 'NOUN'), ('of', 'ADP'), ('methods', 'NOUN'), ('that', 'PRON'), ('is', 'AUX'), ('changing', 'VERB'), ('machine', 'NOUN'), ('learning', 'VERB'), ('in', 'ADP'), ('fundamental', 'ADJ'), ('ways', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Deep', 'JJ'), ('learning', 'NN'), ('Deep', 'JJ'), ('learning', 'NN'), ('(', '-LRB-'), ('DL', 'NNP'), (')', '-RRB-'), ('is', 'VBZ'), ('a', 'DT'), ('relatively', 'RB'), ('new', 'JJ'), ('set', 'NN'), ('of', 'IN'), ('methods', 'NNS'), ('that', 'WDT'), ('is', 'VBZ'), ('changing', 'VBG'), ('machine', 'NN'), ('learning', 'VBG'), ('in', 'IN'), ('fundamental', 'JJ'), ('ways', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Deep', 'deep'), ('learning', 'learning'), ('Deep', 'deep'), ('learning', 'learning'), ('(', '('), ('DL', 'DL'), (')', ')'), ('is', 'be'), ('a', 'a'), ('relatively', 'relatively'), ('new', 'new'), ('set', 'set'), ('of', 'of'), ('methods', 'method'), ('that', 'that'), ('is', 'be'), ('changing', 'change'), ('machine', 'machine'), ('learning', 'learn'), ('in', 'in'), ('fundamental', 'fundamental'), ('ways', 'way'), ('.', '.')] 

 Dependency tags are: 
>> [(('Deep', 'learning'), 'amod'), (('learning', 'learning'), 'compound'), (('Deep', 'learning'), 'amod'), (('learning', 'set'), 'nsubj'), (('(', 'DL'), 'punct'), (('DL', 'learning'), 'appos'), ((')', 'DL'), 'punct'), (('is', 'set'), 'cop'), (('a', 'set'), 'det'), (('relatively', 'new'), 'advmod'), (('new', 'set'), 'amod'), (('set', 'root'), 'root'), (('of', 'methods'), 'case'), (('methods', 'set'), 'nmod'), (('that', 'changing'), 'nsubj'), (('is', 'changing'), 'aux'), (('changing', 'methods'), 'acl:relcl'), (('machine', 'changing'), 'obj'), (('learning', 'changing'), 'xcomp'), (('in', 'ways'), 'case'), (('fundamental', 'ways'), 'amod'), (('ways', 'learning'), 'obl'), (('.', 'set'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 DL isn’t  an algorithm per se, but rather a family of algorithms that  implements deep networks (many layers). 

Tokens are: 
>> ['DL', 'is', 'n’t', 'an', 'algorithm', 'per', 'se', ',', 'but', 'rather', 'a', 'family', 'of', 'algorithms', 'that', 'implements', 'deep', 'networks', '(', 'many', 'layers', ')', '.'] 

 UPOS tags are: 
>> [('DL', 'PROPN'), ('is', 'AUX'), ('n’t', 'PART'), ('an', 'DET'), ('algorithm', 'NOUN'), ('per', 'ADP'), ('se', 'NOUN'), (',', 'PUNCT'), ('but', 'CCONJ'), ('rather', 'ADV'), ('a', 'DET'), ('family', 'NOUN'), ('of', 'ADP'), ('algorithms', 'NOUN'), ('that', 'PRON'), ('implements', 'VERB'), ('deep', 'ADJ'), ('networks', 'NOUN'), ('(', 'PUNCT'), ('many', 'ADJ'), ('layers', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('DL', 'NNP'), ('is', 'VBZ'), ('n’t', 'RB'), ('an', 'DT'), ('algorithm', 'NN'), ('per', 'IN'), ('se', 'NN'), (',', ','), ('but', 'CC'), ('rather', 'RB'), ('a', 'DT'), ('family', 'NN'), ('of', 'IN'), ('algorithms', 'NNS'), ('that', 'WDT'), ('implements', 'VBZ'), ('deep', 'JJ'), ('networks', 'NNS'), ('(', '-LRB-'), ('many', 'JJ'), ('layers', 'NNS'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('DL', 'DL'), ('is', 'be'), ('n’t', 'not'), ('an', 'a'), ('algorithm', 'algorithm'), ('per', 'per'), ('se', 'se'), (',', ','), ('but', 'but'), ('rather', 'rather'), ('a', 'a'), ('family', 'family'), ('of', 'of'), ('algorithms', 'algorithm'), ('that', 'that'), ('implements', 'implement'), ('deep', 'deep'), ('networks', 'network'), ('(', '('), ('many', 'many'), ('layers', 'layer'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('DL', 'algorithm'), 'nsubj'), (('is', 'algorithm'), 'cop'), (('n’t', 'algorithm'), 'advmod'), (('an', 'algorithm'), 'det'), (('algorithm', 'root'), 'root'), (('per', 'se'), 'case'), (('se', 'algorithm'), 'nmod'), ((',', 'family'), 'punct'), (('but', 'family'), 'cc'), (('rather', 'family'), 'case'), (('a', 'family'), 'det'), (('family', 'algorithm'), 'conj'), (('of', 'algorithms'), 'case'), (('algorithms', 'family'), 'nmod'), (('that', 'implements'), 'nsubj'), (('implements', 'algorithms'), 'acl:relcl'), (('deep', 'networks'), 'amod'), (('networks', 'implements'), 'obj'), (('(', 'layers'), 'punct'), (('many', 'layers'), 'amod'), (('layers', 'networks'), 'appos'), ((')', 'layers'), 'punct'), (('.', 'algorithm'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 These networks  are so deep that new methods of computation, such as  graphics processing units (GPUs), are required to train  them, in addition to clusters of compute nodes. 

Tokens are: 
>> ['These', 'networks', 'are', 'so', 'deep', 'that', 'new', 'methods', 'of', 'computation', ',', 'such', 'as', 'graphics', 'processing', 'units', '(', 'GPUs', ')', ',', 'are', 'required', 'to', 'train', 'them', ',', 'in', 'addition', 'to', 'clusters', 'of', 'compute', 'nodes', '.'] 

 UPOS tags are: 
>> [('These', 'DET'), ('networks', 'NOUN'), ('are', 'AUX'), ('so', 'ADV'), ('deep', 'ADJ'), ('that', 'SCONJ'), ('new', 'ADJ'), ('methods', 'NOUN'), ('of', 'ADP'), ('computation', 'NOUN'), (',', 'PUNCT'), ('such', 'ADJ'), ('as', 'ADP'), ('graphics', 'NOUN'), ('processing', 'NOUN'), ('units', 'NOUN'), ('(', 'PUNCT'), ('GPUs', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('are', 'AUX'), ('required', 'VERB'), ('to', 'PART'), ('train', 'VERB'), ('them', 'PRON'), (',', 'PUNCT'), ('in', 'ADP'), ('addition', 'NOUN'), ('to', 'ADP'), ('clusters', 'NOUN'), ('of', 'ADP'), ('compute', 'NOUN'), ('nodes', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('These', 'DT'), ('networks', 'NNS'), ('are', 'VBP'), ('so', 'RB'), ('deep', 'JJ'), ('that', 'IN'), ('new', 'JJ'), ('methods', 'NNS'), ('of', 'IN'), ('computation', 'NN'), (',', ','), ('such', 'JJ'), ('as', 'IN'), ('graphics', 'NNS'), ('processing', 'NN'), ('units', 'NNS'), ('(', '-LRB-'), ('GPUs', 'NNS'), (')', '-RRB-'), (',', ','), ('are', 'VBP'), ('required', 'VBN'), ('to', 'TO'), ('train', 'VB'), ('them', 'PRP'), (',', ','), ('in', 'IN'), ('addition', 'NN'), ('to', 'IN'), ('clusters', 'NNS'), ('of', 'IN'), ('compute', 'NN'), ('nodes', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('These', 'this'), ('networks', 'network'), ('are', 'be'), ('so', 'so'), ('deep', 'deep'), ('that', 'that'), ('new', 'new'), ('methods', 'method'), ('of', 'of'), ('computation', 'computation'), (',', ','), ('such', 'such'), ('as', 'as'), ('graphics', 'graphic'), ('processing', 'processing'), ('units', 'unit'), ('(', '('), ('GPUs', 'gpu'), (')', ')'), (',', ','), ('are', 'be'), ('required', 'require'), ('to', 'to'), ('train', 'train'), ('them', 'they'), (',', ','), ('in', 'in'), ('addition', 'addition'), ('to', 'to'), ('clusters', 'cluster'), ('of', 'of'), ('compute', 'compute'), ('nodes', 'node'), ('.', '.')] 

 Dependency tags are: 
>> [(('These', 'networks'), 'det'), (('networks', 'deep'), 'nsubj'), (('are', 'deep'), 'cop'), (('so', 'deep'), 'advmod'), (('deep', 'root'), 'root'), (('that', 'required'), 'mark'), (('new', 'methods'), 'amod'), (('methods', 'required'), 'nsubj:pass'), (('of', 'computation'), 'case'), (('computation', 'methods'), 'nmod'), ((',', 'methods'), 'punct'), (('such', 'units'), 'case'), (('as', 'such'), 'fixed'), (('graphics', 'units'), 'compound'), (('processing', 'units'), 'compound'), (('units', 'methods'), 'nmod'), (('(', 'GPUs'), 'punct'), (('GPUs', 'units'), 'appos'), ((')', 'GPUs'), 'punct'), ((',', 'methods'), 'punct'), (('are', 'required'), 'aux:pass'), (('required', 'deep'), 'ccomp'), (('to', 'train'), 'mark'), (('train', 'required'), 'xcomp'), (('them', 'train'), 'obj'), ((',', 'addition'), 'punct'), (('in', 'addition'), 'case'), (('addition', 'train'), 'obl'), (('to', 'clusters'), 'case'), (('clusters', 'addition'), 'nmod'), (('of', 'nodes'), 'case'), (('compute', 'nodes'), 'compound'), (('nodes', 'clusters'), 'nmod'), (('.', 'deep'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 39 =================================

DL works very well with large amounts data, and whenever   a problem is too complex to understand and engineer  features (due to unstructured data, for instance). DL almost  always outperforms the other types of algorithms when it  comes to image classification, natural language processing  and speech recognition. An example would be recognizing  melanoma or conducting machine translation, which was  not possible using previous techniques.  


------------------- Sentence 1 -------------------

 DL works very well with large amounts data, and whenever   a problem is too complex to understand and engineer  features (due to unstructured data, for instance). 

Tokens are: 
>> ['DL', 'works', 'very', 'well', 'with', 'large', 'amounts', 'data', ',', 'and', 'whenever', 'a', 'problem', 'is', 'too', 'complex', 'to', 'understand', 'and', 'engineer', 'features', '(', 'due', 'to', 'unstructured', 'data', ',', 'for', 'instance', ')', '.'] 

 UPOS tags are: 
>> [('DL', 'PROPN'), ('works', 'VERB'), ('very', 'ADV'), ('well', 'ADV'), ('with', 'ADP'), ('large', 'ADJ'), ('amounts', 'NOUN'), ('data', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('whenever', 'SCONJ'), ('a', 'DET'), ('problem', 'NOUN'), ('is', 'AUX'), ('too', 'ADV'), ('complex', 'ADJ'), ('to', 'PART'), ('understand', 'VERB'), ('and', 'CCONJ'), ('engineer', 'NOUN'), ('features', 'NOUN'), ('(', 'PUNCT'), ('due', 'ADP'), ('to', 'ADP'), ('unstructured', 'ADJ'), ('data', 'NOUN'), (',', 'PUNCT'), ('for', 'ADP'), ('instance', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('DL', 'NNP'), ('works', 'VBZ'), ('very', 'RB'), ('well', 'RB'), ('with', 'IN'), ('large', 'JJ'), ('amounts', 'NNS'), ('data', 'NNS'), (',', ','), ('and', 'CC'), ('whenever', 'WRB'), ('a', 'DT'), ('problem', 'NN'), ('is', 'VBZ'), ('too', 'RB'), ('complex', 'JJ'), ('to', 'TO'), ('understand', 'VB'), ('and', 'CC'), ('engineer', 'NN'), ('features', 'NNS'), ('(', '-LRB-'), ('due', 'IN'), ('to', 'IN'), ('unstructured', 'JJ'), ('data', 'NNS'), (',', ','), ('for', 'IN'), ('instance', 'NN'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('DL', 'DL'), ('works', 'work'), ('very', 'very'), ('well', 'well'), ('with', 'with'), ('large', 'large'), ('amounts', 'amount'), ('data', 'datum'), (',', ','), ('and', 'and'), ('whenever', 'whenever'), ('a', 'a'), ('problem', 'problem'), ('is', 'be'), ('too', 'too'), ('complex', 'complex'), ('to', 'to'), ('understand', 'understand'), ('and', 'and'), ('engineer', 'engineer'), ('features', 'feature'), ('(', '('), ('due', 'due'), ('to', 'to'), ('unstructured', 'unstructured'), ('data', 'datum'), (',', ','), ('for', 'for'), ('instance', 'instance'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('DL', 'works'), 'nsubj'), (('works', 'root'), 'root'), (('very', 'well'), 'advmod'), (('well', 'works'), 'advmod'), (('with', 'data'), 'case'), (('large', 'data'), 'amod'), (('amounts', 'data'), 'compound'), (('data', 'works'), 'obl'), ((',', 'complex'), 'punct'), (('and', 'complex'), 'cc'), (('whenever', 'complex'), 'mark'), (('a', 'problem'), 'det'), (('problem', 'complex'), 'nsubj'), (('is', 'complex'), 'cop'), (('too', 'complex'), 'advmod'), (('complex', 'works'), 'conj'), (('to', 'understand'), 'mark'), (('understand', 'complex'), 'xcomp'), (('and', 'features'), 'cc'), (('engineer', 'features'), 'compound'), (('features', 'understand'), 'obj'), (('(', 'data'), 'punct'), (('due', 'data'), 'case'), (('to', 'due'), 'fixed'), (('unstructured', 'data'), 'amod'), (('data', 'understand'), 'obl'), ((',', 'instance'), 'punct'), (('for', 'instance'), 'case'), (('instance', 'data'), 'nmod'), ((')', 'data'), 'punct'), (('.', 'works'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 DL almost  always outperforms the other types of algorithms when it  comes to image classification, natural language processing  and speech recognition. 

Tokens are: 
>> ['DL', 'almost', 'always', 'outperforms', 'the', 'other', 'types', 'of', 'algorithms', 'when', 'it', 'comes', 'to', 'image', 'classification', ',', 'natural', 'language', 'processing', 'and', 'speech', 'recognition', '.'] 

 UPOS tags are: 
>> [('DL', 'PROPN'), ('almost', 'ADV'), ('always', 'ADV'), ('outperforms', 'VERB'), ('the', 'DET'), ('other', 'ADJ'), ('types', 'NOUN'), ('of', 'ADP'), ('algorithms', 'NOUN'), ('when', 'SCONJ'), ('it', 'PRON'), ('comes', 'VERB'), ('to', 'ADP'), ('image', 'NOUN'), ('classification', 'NOUN'), (',', 'PUNCT'), ('natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), ('and', 'CCONJ'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('DL', 'NNP'), ('almost', 'RB'), ('always', 'RB'), ('outperforms', 'VBZ'), ('the', 'DT'), ('other', 'JJ'), ('types', 'NNS'), ('of', 'IN'), ('algorithms', 'NNS'), ('when', 'WRB'), ('it', 'PRP'), ('comes', 'VBZ'), ('to', 'IN'), ('image', 'NN'), ('classification', 'NN'), (',', ','), ('natural', 'JJ'), ('language', 'NN'), ('processing', 'NN'), ('and', 'CC'), ('speech', 'NN'), ('recognition', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('DL', 'DL'), ('almost', 'almost'), ('always', 'always'), ('outperforms', 'outperform'), ('the', 'the'), ('other', 'other'), ('types', 'type'), ('of', 'of'), ('algorithms', 'algorithm'), ('when', 'when'), ('it', 'it'), ('comes', 'come'), ('to', 'to'), ('image', 'image'), ('classification', 'classification'), (',', ','), ('natural', 'natural'), ('language', 'language'), ('processing', 'processing'), ('and', 'and'), ('speech', 'speech'), ('recognition', 'recognition'), ('.', '.')] 

 Dependency tags are: 
>> [(('DL', 'outperforms'), 'nsubj'), (('almost', 'always'), 'advmod'), (('always', 'outperforms'), 'advmod'), (('outperforms', 'root'), 'root'), (('the', 'types'), 'det'), (('other', 'types'), 'amod'), (('types', 'outperforms'), 'obj'), (('of', 'algorithms'), 'case'), (('algorithms', 'types'), 'nmod'), (('when', 'comes'), 'mark'), (('it', 'comes'), 'nsubj'), (('comes', 'outperforms'), 'advcl'), (('to', 'classification'), 'case'), (('image', 'classification'), 'compound'), (('classification', 'comes'), 'obl'), ((',', 'processing'), 'punct'), (('natural', 'language'), 'amod'), (('language', 'processing'), 'compound'), (('processing', 'classification'), 'conj'), (('and', 'recognition'), 'cc'), (('speech', 'recognition'), 'compound'), (('recognition', 'classification'), 'conj'), (('.', 'outperforms'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 An example would be recognizing  melanoma or conducting machine translation, which was  not possible using previous techniques. 

Tokens are: 
>> ['An', 'example', 'would', 'be', 'recognizing', 'melanoma', 'or', 'conducting', 'machine', 'translation', ',', 'which', 'was', 'not', 'possible', 'using', 'previous', 'techniques', '.'] 

 UPOS tags are: 
>> [('An', 'DET'), ('example', 'NOUN'), ('would', 'AUX'), ('be', 'AUX'), ('recognizing', 'VERB'), ('melanoma', 'NOUN'), ('or', 'CCONJ'), ('conducting', 'VERB'), ('machine', 'NOUN'), ('translation', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('was', 'AUX'), ('not', 'PART'), ('possible', 'ADJ'), ('using', 'VERB'), ('previous', 'ADJ'), ('techniques', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('An', 'DT'), ('example', 'NN'), ('would', 'MD'), ('be', 'VB'), ('recognizing', 'VBG'), ('melanoma', 'NN'), ('or', 'CC'), ('conducting', 'VBG'), ('machine', 'NN'), ('translation', 'NN'), (',', ','), ('which', 'WDT'), ('was', 'VBD'), ('not', 'RB'), ('possible', 'JJ'), ('using', 'VBG'), ('previous', 'JJ'), ('techniques', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('An', 'a'), ('example', 'example'), ('would', 'would'), ('be', 'be'), ('recognizing', 'recognize'), ('melanoma', 'melanoma'), ('or', 'or'), ('conducting', 'conduct'), ('machine', 'machine'), ('translation', 'translation'), (',', ','), ('which', 'which'), ('was', 'be'), ('not', 'not'), ('possible', 'possible'), ('using', 'use'), ('previous', 'previous'), ('techniques', 'technique'), ('.', '.')] 

 Dependency tags are: 
>> [(('An', 'example'), 'det'), (('example', 'recognizing'), 'nsubj'), (('would', 'recognizing'), 'aux'), (('be', 'recognizing'), 'aux'), (('recognizing', 'root'), 'root'), (('melanoma', 'recognizing'), 'obj'), (('or', 'conducting'), 'cc'), (('conducting', 'recognizing'), 'conj'), (('machine', 'translation'), 'compound'), (('translation', 'conducting'), 'obj'), ((',', 'possible'), 'punct'), (('which', 'possible'), 'nsubj'), (('was', 'possible'), 'cop'), (('not', 'possible'), 'advmod'), (('possible', 'translation'), 'acl:relcl'), (('using', 'possible'), 'advcl'), (('previous', 'techniques'), 'amod'), (('techniques', 'using'), 'obj'), (('.', 'recognizing'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 40 =================================

Figure 2: Deep neural network with five layers.5 


------------------- Sentence 1 -------------------

 Figure 2: Deep neural network with five layers. 

Tokens are: 
>> ['Figure', '2', ':', 'Deep', 'neural', 'network', 'with', 'five', 'layers', '.'] 

 UPOS tags are: 
>> [('Figure', 'PROPN'), ('2', 'NUM'), (':', 'PUNCT'), ('Deep', 'ADJ'), ('neural', 'ADJ'), ('network', 'NOUN'), ('with', 'ADP'), ('five', 'NUM'), ('layers', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Figure', 'NNP'), ('2', 'CD'), (':', ':'), ('Deep', 'JJ'), ('neural', 'JJ'), ('network', 'NN'), ('with', 'IN'), ('five', 'CD'), ('layers', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Figure', 'Figure'), ('2', '2'), (':', ':'), ('Deep', 'deep'), ('neural', 'neural'), ('network', 'network'), ('with', 'with'), ('five', 'five'), ('layers', 'layer'), ('.', '.')] 

 Dependency tags are: 
>> [(('Figure', 'root'), 'root'), (('2', 'Figure'), 'dep'), ((':', 'network'), 'punct'), (('Deep', 'network'), 'amod'), (('neural', 'network'), 'amod'), (('network', 'Figure'), 'appos'), (('with', 'layers'), 'case'), (('five', 'layers'), 'nummod'), (('layers', 'network'), 'nmod'), (('.', 'Figure'), 'punct')]

 Named Entites are: 
>> [('2', 'CARDINAL'), ('five', 'CARDINAL')]

------------------- Sentence 2 -------------------

 5 

Tokens are: 
>> ['5'] 

 UPOS tags are: 
>> [('5', 'X')] 

 XPOS tags are: 
>> [('5', 'LS')] 

 Lemmas are: 
>> [('5', '5')] 

 Dependency tags are: 
>> [(('5', 'root'), 'root')]

 Named Entites are: 
>> [('5', 'CARDINAL')]

================================ Paragraph 41 =================================

Currently, the larger the neural network and the more data  that can be added to it, the better the performance a neural  network can provide. DL is very powerful, but it has a couple  of drawbacks. It’s almost impossible to determine why the  system came to a certain conclusion. This is called the  “black box” problem, though there are now many available  techniques that can increase insights in the inner workings   of the DL model. Also, deep learning often requires extensive  training times, a lot of data and specific hardware  requirements, and it’s not easy to acquire the specific  skills needed to develop a new DL solution to a problem. 


------------------- Sentence 1 -------------------

 Currently, the larger the neural network and the more data  that can be added to it, the better the performance a neural  network can provide. 

Tokens are: 
>> ['Currently', ',', 'the', 'larger', 'the', 'neural', 'network', 'and', 'the', 'more', 'data', 'that', 'can', 'be', 'added', 'to', 'it', ',', 'the', 'better', 'the', 'performance', 'a', 'neural', 'network', 'can', 'provide', '.'] 

 UPOS tags are: 
>> [('Currently', 'ADV'), (',', 'PUNCT'), ('the', 'DET'), ('larger', 'ADJ'), ('the', 'DET'), ('neural', 'ADJ'), ('network', 'NOUN'), ('and', 'CCONJ'), ('the', 'DET'), ('more', 'ADJ'), ('data', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('added', 'VERB'), ('to', 'ADP'), ('it', 'PRON'), (',', 'PUNCT'), ('the', 'DET'), ('better', 'ADJ'), ('the', 'DET'), ('performance', 'NOUN'), ('a', 'DET'), ('neural', 'ADJ'), ('network', 'NOUN'), ('can', 'AUX'), ('provide', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Currently', 'RB'), (',', ','), ('the', 'DT'), ('larger', 'JJR'), ('the', 'DT'), ('neural', 'JJ'), ('network', 'NN'), ('and', 'CC'), ('the', 'DT'), ('more', 'JJR'), ('data', 'NNS'), ('that', 'WDT'), ('can', 'MD'), ('be', 'VB'), ('added', 'VBN'), ('to', 'IN'), ('it', 'PRP'), (',', ','), ('the', 'DT'), ('better', 'JJR'), ('the', 'DT'), ('performance', 'NN'), ('a', 'DT'), ('neural', 'JJ'), ('network', 'NN'), ('can', 'MD'), ('provide', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('Currently', 'currently'), (',', ','), ('the', 'the'), ('larger', 'large'), ('the', 'the'), ('neural', 'neural'), ('network', 'network'), ('and', 'and'), ('the', 'the'), ('more', 'more'), ('data', 'datum'), ('that', 'that'), ('can', 'can'), ('be', 'be'), ('added', 'add'), ('to', 'to'), ('it', 'it'), (',', ','), ('the', 'the'), ('better', 'good'), ('the', 'the'), ('performance', 'performance'), ('a', 'a'), ('neural', 'neural'), ('network', 'network'), ('can', 'can'), ('provide', 'provide'), ('.', '.')] 

 Dependency tags are: 
>> [(('Currently', 'better'), 'advmod'), ((',', 'better'), 'punct'), (('the', 'larger'), 'det'), (('larger', 'better'), 'advcl'), (('the', 'network'), 'det'), (('neural', 'network'), 'amod'), (('network', 'better'), 'nsubj'), (('and', 'data'), 'cc'), (('the', 'data'), 'det'), (('more', 'data'), 'amod'), (('data', 'network'), 'conj'), (('that', 'added'), 'nsubj:pass'), (('can', 'added'), 'aux'), (('be', 'added'), 'aux:pass'), (('added', 'data'), 'acl:relcl'), (('to', 'it'), 'case'), (('it', 'added'), 'obl'), ((',', 'better'), 'punct'), (('the', 'performance'), 'det'), (('better', 'root'), 'root'), (('the', 'performance'), 'det'), (('performance', 'better'), 'nsubj'), (('a', 'network'), 'det'), (('neural', 'network'), 'amod'), (('network', 'provide'), 'nsubj'), (('can', 'provide'), 'aux'), (('provide', 'performance'), 'acl:relcl'), (('.', 'better'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 DL is very powerful, but it has a couple  of drawbacks. 

Tokens are: 
>> ['DL', 'is', 'very', 'powerful', ',', 'but', 'it', 'has', 'a', 'couple', 'of', 'drawbacks', '.'] 

 UPOS tags are: 
>> [('DL', 'PROPN'), ('is', 'AUX'), ('very', 'ADV'), ('powerful', 'ADJ'), (',', 'PUNCT'), ('but', 'CCONJ'), ('it', 'PRON'), ('has', 'VERB'), ('a', 'DET'), ('couple', 'NOUN'), ('of', 'ADP'), ('drawbacks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('DL', 'NNP'), ('is', 'VBZ'), ('very', 'RB'), ('powerful', 'JJ'), (',', ','), ('but', 'CC'), ('it', 'PRP'), ('has', 'VBZ'), ('a', 'DT'), ('couple', 'NN'), ('of', 'IN'), ('drawbacks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('DL', 'DL'), ('is', 'be'), ('very', 'very'), ('powerful', 'powerful'), (',', ','), ('but', 'but'), ('it', 'it'), ('has', 'have'), ('a', 'a'), ('couple', 'couple'), ('of', 'of'), ('drawbacks', 'drawback'), ('.', '.')] 

 Dependency tags are: 
>> [(('DL', 'powerful'), 'nsubj'), (('is', 'powerful'), 'cop'), (('very', 'powerful'), 'advmod'), (('powerful', 'root'), 'root'), ((',', 'has'), 'punct'), (('but', 'has'), 'cc'), (('it', 'has'), 'nsubj'), (('has', 'powerful'), 'conj'), (('a', 'couple'), 'det'), (('couple', 'has'), 'obj'), (('of', 'drawbacks'), 'case'), (('drawbacks', 'couple'), 'nmod'), (('.', 'powerful'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 It’s almost impossible to determine why the  system came to a certain conclusion. 

Tokens are: 
>> ['It', '’s', 'almost', 'impossible', 'to', 'determine', 'why', 'the', 'system', 'came', 'to', 'a', 'certain', 'conclusion', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('’s', 'AUX'), ('almost', 'ADV'), ('impossible', 'ADJ'), ('to', 'PART'), ('determine', 'VERB'), ('why', 'SCONJ'), ('the', 'DET'), ('system', 'NOUN'), ('came', 'VERB'), ('to', 'ADP'), ('a', 'DET'), ('certain', 'ADJ'), ('conclusion', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('’s', 'VBZ'), ('almost', 'RB'), ('impossible', 'JJ'), ('to', 'TO'), ('determine', 'VB'), ('why', 'WRB'), ('the', 'DT'), ('system', 'NN'), ('came', 'VBD'), ('to', 'IN'), ('a', 'DT'), ('certain', 'JJ'), ('conclusion', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('’s', 'be'), ('almost', 'almost'), ('impossible', 'impossible'), ('to', 'to'), ('determine', 'determine'), ('why', 'why'), ('the', 'the'), ('system', 'system'), ('came', 'come'), ('to', 'to'), ('a', 'a'), ('certain', 'certain'), ('conclusion', 'conclusion'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'impossible'), 'expl'), (('’s', 'impossible'), 'cop'), (('almost', 'impossible'), 'advmod'), (('impossible', 'root'), 'root'), (('to', 'determine'), 'mark'), (('determine', 'impossible'), 'csubj'), (('why', 'came'), 'mark'), (('the', 'system'), 'det'), (('system', 'came'), 'nsubj'), (('came', 'determine'), 'ccomp'), (('to', 'conclusion'), 'case'), (('a', 'conclusion'), 'det'), (('certain', 'conclusion'), 'amod'), (('conclusion', 'came'), 'obl'), (('.', 'impossible'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 This is called the  “black box” problem, though there are now many available  techniques that can increase insights in the inner workings   of the DL model. 

Tokens are: 
>> ['This', 'is', 'called', 'the', '“', 'black', 'box', '”', 'problem', ',', 'though', 'there', 'are', 'now', 'many', 'available', 'techniques', 'that', 'can', 'increase', 'insights', 'in', 'the', 'inner', 'workings', 'of', 'the', 'DL', 'model', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('is', 'AUX'), ('called', 'VERB'), ('the', 'DET'), ('“', 'PUNCT'), ('black', 'ADJ'), ('box', 'NOUN'), ('”', 'PUNCT'), ('problem', 'NOUN'), (',', 'PUNCT'), ('though', 'SCONJ'), ('there', 'PRON'), ('are', 'VERB'), ('now', 'ADV'), ('many', 'ADJ'), ('available', 'ADJ'), ('techniques', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('increase', 'VERB'), ('insights', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('inner', 'ADJ'), ('workings', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('DL', 'NOUN'), ('model', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('is', 'VBZ'), ('called', 'VBN'), ('the', 'DT'), ('“', '``'), ('black', 'JJ'), ('box', 'NN'), ('”', "''"), ('problem', 'NN'), (',', ','), ('though', 'IN'), ('there', 'EX'), ('are', 'VBP'), ('now', 'RB'), ('many', 'JJ'), ('available', 'JJ'), ('techniques', 'NNS'), ('that', 'WDT'), ('can', 'MD'), ('increase', 'VB'), ('insights', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('inner', 'JJ'), ('workings', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('DL', 'NN'), ('model', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('is', 'be'), ('called', 'call'), ('the', 'the'), ('“', "''"), ('black', 'black'), ('box', 'box'), ('”', "''"), ('problem', 'problem'), (',', ','), ('though', 'though'), ('there', 'there'), ('are', 'be'), ('now', 'now'), ('many', 'many'), ('available', 'available'), ('techniques', 'technique'), ('that', 'that'), ('can', 'can'), ('increase', 'increase'), ('insights', 'insight'), ('in', 'in'), ('the', 'the'), ('inner', 'inner'), ('workings', 'working'), ('of', 'of'), ('the', 'the'), ('DL', 'dl'), ('model', 'model'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'called'), 'nsubj:pass'), (('is', 'called'), 'aux:pass'), (('called', 'root'), 'root'), (('the', 'problem'), 'det'), (('“', 'box'), 'punct'), (('black', 'box'), 'amod'), (('box', 'problem'), 'compound'), (('”', 'box'), 'punct'), (('problem', 'called'), 'obj'), ((',', 'are'), 'punct'), (('though', 'are'), 'mark'), (('there', 'are'), 'expl'), (('are', 'called'), 'advcl'), (('now', 'are'), 'advmod'), (('many', 'techniques'), 'amod'), (('available', 'techniques'), 'amod'), (('techniques', 'are'), 'nsubj'), (('that', 'increase'), 'nsubj'), (('can', 'increase'), 'aux'), (('increase', 'techniques'), 'acl:relcl'), (('insights', 'increase'), 'obj'), (('in', 'workings'), 'case'), (('the', 'workings'), 'det'), (('inner', 'workings'), 'amod'), (('workings', 'insights'), 'nmod'), (('of', 'model'), 'case'), (('the', 'model'), 'det'), (('DL', 'model'), 'compound'), (('model', 'workings'), 'nmod'), (('.', 'called'), 'punct')]

 Named Entites are: 
>> [('DL', 'ORG')]

------------------- Sentence 5 -------------------

 Also, deep learning often requires extensive  training times, a lot of data and specific hardware  requirements, and it’s not easy to acquire the specific  skills needed to develop a new DL solution to a problem. 

Tokens are: 
>> ['Also', ',', 'deep', 'learning', 'often', 'requires', 'extensive', 'training', 'times', ',', 'a', 'lot', 'of', 'data', 'and', 'specific', 'hardware', 'requirements', ',', 'and', 'it', '’s', 'not', 'easy', 'to', 'acquire', 'the', 'specific', 'skills', 'needed', 'to', 'develop', 'a', 'new', 'DL', 'solution', 'to', 'a', 'problem', '.'] 

 UPOS tags are: 
>> [('Also', 'ADV'), (',', 'PUNCT'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('often', 'ADV'), ('requires', 'VERB'), ('extensive', 'ADJ'), ('training', 'NOUN'), ('times', 'NOUN'), (',', 'PUNCT'), ('a', 'DET'), ('lot', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), ('and', 'CCONJ'), ('specific', 'ADJ'), ('hardware', 'NOUN'), ('requirements', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('it', 'PRON'), ('’s', 'AUX'), ('not', 'PART'), ('easy', 'ADJ'), ('to', 'PART'), ('acquire', 'VERB'), ('the', 'DET'), ('specific', 'ADJ'), ('skills', 'NOUN'), ('needed', 'VERB'), ('to', 'PART'), ('develop', 'VERB'), ('a', 'DET'), ('new', 'ADJ'), ('DL', 'NOUN'), ('solution', 'NOUN'), ('to', 'ADP'), ('a', 'DET'), ('problem', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Also', 'RB'), (',', ','), ('deep', 'JJ'), ('learning', 'NN'), ('often', 'RB'), ('requires', 'VBZ'), ('extensive', 'JJ'), ('training', 'NN'), ('times', 'NNS'), (',', ','), ('a', 'DT'), ('lot', 'NN'), ('of', 'IN'), ('data', 'NNS'), ('and', 'CC'), ('specific', 'JJ'), ('hardware', 'NN'), ('requirements', 'NNS'), (',', ','), ('and', 'CC'), ('it', 'PRP'), ('’s', 'VBZ'), ('not', 'RB'), ('easy', 'JJ'), ('to', 'TO'), ('acquire', 'VB'), ('the', 'DT'), ('specific', 'JJ'), ('skills', 'NNS'), ('needed', 'VBN'), ('to', 'TO'), ('develop', 'VB'), ('a', 'DT'), ('new', 'JJ'), ('DL', 'NN'), ('solution', 'NN'), ('to', 'IN'), ('a', 'DT'), ('problem', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Also', 'also'), (',', ','), ('deep', 'deep'), ('learning', 'learning'), ('often', 'often'), ('requires', 'require'), ('extensive', 'extensive'), ('training', 'training'), ('times', 'time'), (',', ','), ('a', 'a'), ('lot', 'lot'), ('of', 'of'), ('data', 'datum'), ('and', 'and'), ('specific', 'specific'), ('hardware', 'hardware'), ('requirements', 'requirement'), (',', ','), ('and', 'and'), ('it', 'it'), ('’s', 'be'), ('not', 'not'), ('easy', 'easy'), ('to', 'to'), ('acquire', 'acquire'), ('the', 'the'), ('specific', 'specific'), ('skills', 'skill'), ('needed', 'need'), ('to', 'to'), ('develop', 'develop'), ('a', 'a'), ('new', 'new'), ('DL', 'dl'), ('solution', 'solution'), ('to', 'to'), ('a', 'a'), ('problem', 'problem'), ('.', '.')] 

 Dependency tags are: 
>> [(('Also', 'requires'), 'advmod'), ((',', 'requires'), 'punct'), (('deep', 'learning'), 'amod'), (('learning', 'requires'), 'nsubj'), (('often', 'requires'), 'advmod'), (('requires', 'root'), 'root'), (('extensive', 'times'), 'amod'), (('training', 'times'), 'compound'), (('times', 'requires'), 'obj'), ((',', 'lot'), 'punct'), (('a', 'lot'), 'det'), (('lot', 'times'), 'conj'), (('of', 'data'), 'case'), (('data', 'lot'), 'nmod'), (('and', 'requirements'), 'cc'), (('specific', 'requirements'), 'amod'), (('hardware', 'requirements'), 'compound'), (('requirements', 'data'), 'conj'), ((',', 'easy'), 'punct'), (('and', 'easy'), 'cc'), (('it', 'easy'), 'expl'), (('’s', 'easy'), 'cop'), (('not', 'easy'), 'advmod'), (('easy', 'requires'), 'conj'), (('to', 'acquire'), 'mark'), (('acquire', 'easy'), 'csubj'), (('the', 'skills'), 'det'), (('specific', 'skills'), 'amod'), (('skills', 'acquire'), 'obj'), (('needed', 'skills'), 'acl'), (('to', 'develop'), 'mark'), (('develop', 'needed'), 'xcomp'), (('a', 'solution'), 'det'), (('new', 'solution'), 'amod'), (('DL', 'solution'), 'compound'), (('solution', 'develop'), 'obj'), (('to', 'problem'), 'case'), (('a', 'problem'), 'det'), (('problem', 'develop'), 'obl'), (('.', 'requires'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 42 =================================

In conclusion, there is no one algorithm that can fit or solve  all problems. Success really depends on the problem you  need to solve and the data you have available. Sometimes   a problem will need a hybrid approach, where you use  multiple algorithms to solve the problem. Each problem  requires extensive investigation of what constitutes a  best-fit type of algorithm. You should take into account  transparency and how much data, capabilities and time  you have, because some algorithms take a long time to run. 


------------------- Sentence 1 -------------------

 In conclusion, there is no one algorithm that can fit or solve  all problems. 

Tokens are: 
>> ['In', 'conclusion', ',', 'there', 'is', 'no', 'one', 'algorithm', 'that', 'can', 'fit', 'or', 'solve', 'all', 'problems', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('conclusion', 'NOUN'), (',', 'PUNCT'), ('there', 'PRON'), ('is', 'VERB'), ('no', 'DET'), ('one', 'NUM'), ('algorithm', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('fit', 'VERB'), ('or', 'CCONJ'), ('solve', 'VERB'), ('all', 'DET'), ('problems', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('conclusion', 'NN'), (',', ','), ('there', 'EX'), ('is', 'VBZ'), ('no', 'DT'), ('one', 'CD'), ('algorithm', 'NN'), ('that', 'WDT'), ('can', 'MD'), ('fit', 'VB'), ('or', 'CC'), ('solve', 'VB'), ('all', 'DT'), ('problems', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('conclusion', 'conclusion'), (',', ','), ('there', 'there'), ('is', 'be'), ('no', 'no'), ('one', 'one'), ('algorithm', 'algorithm'), ('that', 'that'), ('can', 'can'), ('fit', 'fit'), ('or', 'or'), ('solve', 'solve'), ('all', 'all'), ('problems', 'problem'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'conclusion'), 'case'), (('conclusion', 'is'), 'obl'), ((',', 'conclusion'), 'punct'), (('there', 'is'), 'expl'), (('is', 'root'), 'root'), (('no', 'algorithm'), 'det'), (('one', 'algorithm'), 'nummod'), (('algorithm', 'is'), 'nsubj'), (('that', 'fit'), 'nsubj'), (('can', 'fit'), 'aux'), (('fit', 'algorithm'), 'acl:relcl'), (('or', 'solve'), 'cc'), (('solve', 'fit'), 'conj'), (('all', 'problems'), 'det'), (('problems', 'solve'), 'obj'), (('.', 'is'), 'punct')]

 Named Entites are: 
>> [('one', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Success really depends on the problem you  need to solve and the data you have available. 

Tokens are: 
>> ['Success', 'really', 'depends', 'on', 'the', 'problem', 'you', 'need', 'to', 'solve', 'and', 'the', 'data', 'you', 'have', 'available', '.'] 

 UPOS tags are: 
>> [('Success', 'NOUN'), ('really', 'ADV'), ('depends', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('problem', 'NOUN'), ('you', 'PRON'), ('need', 'VERB'), ('to', 'PART'), ('solve', 'VERB'), ('and', 'CCONJ'), ('the', 'DET'), ('data', 'NOUN'), ('you', 'PRON'), ('have', 'VERB'), ('available', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Success', 'NN'), ('really', 'RB'), ('depends', 'VBZ'), ('on', 'IN'), ('the', 'DT'), ('problem', 'NN'), ('you', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('solve', 'VB'), ('and', 'CC'), ('the', 'DT'), ('data', 'NNS'), ('you', 'PRP'), ('have', 'VBP'), ('available', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('Success', 'success'), ('really', 'really'), ('depends', 'depend'), ('on', 'on'), ('the', 'the'), ('problem', 'problem'), ('you', 'you'), ('need', 'need'), ('to', 'to'), ('solve', 'solve'), ('and', 'and'), ('the', 'the'), ('data', 'datum'), ('you', 'you'), ('have', 'have'), ('available', 'available'), ('.', '.')] 

 Dependency tags are: 
>> [(('Success', 'depends'), 'nsubj'), (('really', 'depends'), 'advmod'), (('depends', 'root'), 'root'), (('on', 'problem'), 'case'), (('the', 'problem'), 'det'), (('problem', 'depends'), 'obl'), (('you', 'need'), 'nsubj'), (('need', 'problem'), 'acl:relcl'), (('to', 'solve'), 'mark'), (('solve', 'need'), 'xcomp'), (('and', 'data'), 'cc'), (('the', 'data'), 'det'), (('data', 'solve'), 'obj'), (('you', 'have'), 'nsubj'), (('have', 'data'), 'acl:relcl'), (('available', 'have'), 'xcomp'), (('.', 'depends'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Sometimes   a problem will need a hybrid approach, where you use  multiple algorithms to solve the problem. 

Tokens are: 
>> ['Sometimes', 'a', 'problem', 'will', 'need', 'a', 'hybrid', 'approach', ',', 'where', 'you', 'use', 'multiple', 'algorithms', 'to', 'solve', 'the', 'problem', '.'] 

 UPOS tags are: 
>> [('Sometimes', 'ADV'), ('a', 'DET'), ('problem', 'NOUN'), ('will', 'AUX'), ('need', 'VERB'), ('a', 'DET'), ('hybrid', 'ADJ'), ('approach', 'NOUN'), (',', 'PUNCT'), ('where', 'SCONJ'), ('you', 'PRON'), ('use', 'VERB'), ('multiple', 'ADJ'), ('algorithms', 'NOUN'), ('to', 'PART'), ('solve', 'VERB'), ('the', 'DET'), ('problem', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Sometimes', 'RB'), ('a', 'DT'), ('problem', 'NN'), ('will', 'MD'), ('need', 'VB'), ('a', 'DT'), ('hybrid', 'JJ'), ('approach', 'NN'), (',', ','), ('where', 'WRB'), ('you', 'PRP'), ('use', 'VBP'), ('multiple', 'JJ'), ('algorithms', 'NNS'), ('to', 'TO'), ('solve', 'VB'), ('the', 'DT'), ('problem', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Sometimes', 'sometimes'), ('a', 'a'), ('problem', 'problem'), ('will', 'will'), ('need', 'need'), ('a', 'a'), ('hybrid', 'hybrid'), ('approach', 'approach'), (',', ','), ('where', 'where'), ('you', 'you'), ('use', 'use'), ('multiple', 'multiple'), ('algorithms', 'algorithm'), ('to', 'to'), ('solve', 'solve'), ('the', 'the'), ('problem', 'problem'), ('.', '.')] 

 Dependency tags are: 
>> [(('Sometimes', 'need'), 'advmod'), (('a', 'problem'), 'det'), (('problem', 'need'), 'nsubj'), (('will', 'need'), 'aux'), (('need', 'root'), 'root'), (('a', 'approach'), 'det'), (('hybrid', 'approach'), 'amod'), (('approach', 'need'), 'obj'), ((',', 'approach'), 'punct'), (('where', 'use'), 'mark'), (('you', 'use'), 'nsubj'), (('use', 'approach'), 'acl:relcl'), (('multiple', 'algorithms'), 'amod'), (('algorithms', 'use'), 'obj'), (('to', 'solve'), 'mark'), (('solve', 'use'), 'advcl'), (('the', 'problem'), 'det'), (('problem', 'solve'), 'obj'), (('.', 'need'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Each problem  requires extensive investigation of what constitutes a  best-fit type of algorithm. 

Tokens are: 
>> ['Each', 'problem', 'requires', 'extensive', 'investigation', 'of', 'what', 'constitutes', 'a', 'best', '-', 'fit', 'type', 'of', 'algorithm', '.'] 

 UPOS tags are: 
>> [('Each', 'DET'), ('problem', 'NOUN'), ('requires', 'VERB'), ('extensive', 'ADJ'), ('investigation', 'NOUN'), ('of', 'SCONJ'), ('what', 'PRON'), ('constitutes', 'VERB'), ('a', 'DET'), ('best', 'ADJ'), ('-', 'PUNCT'), ('fit', 'NOUN'), ('type', 'NOUN'), ('of', 'ADP'), ('algorithm', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Each', 'DT'), ('problem', 'NN'), ('requires', 'VBZ'), ('extensive', 'JJ'), ('investigation', 'NN'), ('of', 'IN'), ('what', 'WP'), ('constitutes', 'VBZ'), ('a', 'DT'), ('best', 'JJS'), ('-', 'HYPH'), ('fit', 'NN'), ('type', 'NN'), ('of', 'IN'), ('algorithm', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Each', 'each'), ('problem', 'problem'), ('requires', 'require'), ('extensive', 'extensive'), ('investigation', 'investigation'), ('of', 'of'), ('what', 'what'), ('constitutes', 'constitute'), ('a', 'a'), ('best', 'good'), ('-', '-'), ('fit', 'fit'), ('type', 'type'), ('of', 'of'), ('algorithm', 'algorithm'), ('.', '.')] 

 Dependency tags are: 
>> [(('Each', 'problem'), 'det'), (('problem', 'requires'), 'nsubj'), (('requires', 'root'), 'root'), (('extensive', 'investigation'), 'amod'), (('investigation', 'requires'), 'obj'), (('of', 'what'), 'case'), (('what', 'investigation'), 'nmod'), (('constitutes', 'what'), 'acl:relcl'), (('a', 'type'), 'det'), (('best', 'fit'), 'amod'), (('-', 'fit'), 'punct'), (('fit', 'type'), 'compound'), (('type', 'constitutes'), 'obj'), (('of', 'algorithm'), 'case'), (('algorithm', 'type'), 'nmod'), (('.', 'requires'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 You should take into account  transparency and how much data, capabilities and time  you have, because some algorithms take a long time to run. 

Tokens are: 
>> ['You', 'should', 'take', 'into', 'account', 'transparency', 'and', 'how', 'much', 'data', ',', 'capabilities', 'and', 'time', 'you', 'have', ',', 'because', 'some', 'algorithms', 'take', 'a', 'long', 'time', 'to', 'run', '.'] 

 UPOS tags are: 
>> [('You', 'PRON'), ('should', 'AUX'), ('take', 'VERB'), ('into', 'ADP'), ('account', 'NOUN'), ('transparency', 'NOUN'), ('and', 'CCONJ'), ('how', 'SCONJ'), ('much', 'ADJ'), ('data', 'NOUN'), (',', 'PUNCT'), ('capabilities', 'NOUN'), ('and', 'CCONJ'), ('time', 'NOUN'), ('you', 'PRON'), ('have', 'VERB'), (',', 'PUNCT'), ('because', 'SCONJ'), ('some', 'DET'), ('algorithms', 'NOUN'), ('take', 'VERB'), ('a', 'DET'), ('long', 'ADJ'), ('time', 'NOUN'), ('to', 'PART'), ('run', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('You', 'PRP'), ('should', 'MD'), ('take', 'VB'), ('into', 'IN'), ('account', 'NN'), ('transparency', 'NN'), ('and', 'CC'), ('how', 'WRB'), ('much', 'JJ'), ('data', 'NNS'), (',', ','), ('capabilities', 'NNS'), ('and', 'CC'), ('time', 'NN'), ('you', 'PRP'), ('have', 'VBP'), (',', ','), ('because', 'IN'), ('some', 'DT'), ('algorithms', 'NNS'), ('take', 'VBP'), ('a', 'DT'), ('long', 'JJ'), ('time', 'NN'), ('to', 'TO'), ('run', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('You', 'you'), ('should', 'should'), ('take', 'take'), ('into', 'into'), ('account', 'account'), ('transparency', 'transparency'), ('and', 'and'), ('how', 'how'), ('much', 'much'), ('data', 'datum'), (',', ','), ('capabilities', 'capability'), ('and', 'and'), ('time', 'time'), ('you', 'you'), ('have', 'have'), (',', ','), ('because', 'because'), ('some', 'some'), ('algorithms', 'algorithm'), ('take', 'take'), ('a', 'a'), ('long', 'long'), ('time', 'time'), ('to', 'to'), ('run', 'run'), ('.', '.')] 

 Dependency tags are: 
>> [(('You', 'take'), 'nsubj'), (('should', 'take'), 'aux'), (('take', 'root'), 'root'), (('into', 'transparency'), 'case'), (('account', 'transparency'), 'compound'), (('transparency', 'take'), 'obl'), (('and', 'capabilities'), 'cc'), (('how', 'much'), 'mark'), (('much', 'data'), 'amod'), (('data', 'take'), 'nsubj'), ((',', 'capabilities'), 'punct'), (('capabilities', 'data'), 'conj'), (('and', 'time'), 'cc'), (('time', 'data'), 'conj'), (('you', 'have'), 'nsubj'), (('have', 'data'), 'acl:relcl'), ((',', 'take'), 'punct'), (('because', 'take'), 'mark'), (('some', 'algorithms'), 'det'), (('algorithms', 'take'), 'nsubj'), (('take', 'take'), 'advcl'), (('a', 'time'), 'det'), (('long', 'time'), 'amod'), (('time', 'take'), 'obj'), (('to', 'run'), 'mark'), (('run', 'time'), 'acl'), (('.', 'take'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 43 =================================

Input layer 


------------------- Sentence 1 -------------------

 Input layer 

Tokens are: 
>> ['Input', 'layer'] 

 UPOS tags are: 
>> [('Input', 'NOUN'), ('layer', 'NOUN')] 

 XPOS tags are: 
>> [('Input', 'NN'), ('layer', 'NN')] 

 Lemmas are: 
>> [('Input', 'input'), ('layer', 'layer')] 

 Dependency tags are: 
>> [(('Input', 'layer'), 'compound'), (('layer', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 44 =================================

Hidden  layer 1 


------------------- Sentence 1 -------------------

 Hidden  layer 1 

Tokens are: 
>> ['Hidden', 'layer', '1'] 

 UPOS tags are: 
>> [('Hidden', 'ADJ'), ('layer', 'NOUN'), ('1', 'NUM')] 

 XPOS tags are: 
>> [('Hidden', 'JJ'), ('layer', 'NN'), ('1', 'CD')] 

 Lemmas are: 
>> [('Hidden', 'Hidden'), ('layer', 'layer'), ('1', '1')] 

 Dependency tags are: 
>> [(('Hidden', 'layer'), 'amod'), (('layer', 'root'), 'root'), (('1', 'layer'), 'dep')]

 Named Entites are: 
>> [('1', 'CARDINAL')]

================================ Paragraph 45 =================================

Hidden layer 2 


------------------- Sentence 1 -------------------

 Hidden layer 2 

Tokens are: 
>> ['Hidden', 'layer', '2'] 

 UPOS tags are: 
>> [('Hidden', 'ADJ'), ('layer', 'NOUN'), ('2', 'NUM')] 

 XPOS tags are: 
>> [('Hidden', 'JJ'), ('layer', 'NN'), ('2', 'CD')] 

 Lemmas are: 
>> [('Hidden', 'Hidden'), ('layer', 'layer'), ('2', '2')] 

 Dependency tags are: 
>> [(('Hidden', 'layer'), 'amod'), (('layer', 'root'), 'root'), (('2', 'layer'), 'dep')]

 Named Entites are: 
>> [('2', 'CARDINAL')]

================================ Paragraph 46 =================================

Hidden layer 3 


------------------- Sentence 1 -------------------

 Hidden layer 3 

Tokens are: 
>> ['Hidden', 'layer', '3'] 

 UPOS tags are: 
>> [('Hidden', 'ADJ'), ('layer', 'NOUN'), ('3', 'NUM')] 

 XPOS tags are: 
>> [('Hidden', 'JJ'), ('layer', 'NN'), ('3', 'CD')] 

 Lemmas are: 
>> [('Hidden', 'Hidden'), ('layer', 'layer'), ('3', '3')] 

 Dependency tags are: 
>> [(('Hidden', 'layer'), 'amod'), (('layer', 'root'), 'root'), (('3', 'layer'), 'dep')]

 Named Entites are: 
>> [('3', 'CARDINAL')]

================================ Paragraph 47 =================================

Output layer


------------------- Sentence 1 -------------------

 Output layer 

Tokens are: 
>> ['Output', 'layer'] 

 UPOS tags are: 
>> [('Output', 'NOUN'), ('layer', 'NOUN')] 

 XPOS tags are: 
>> [('Output', 'NN'), ('layer', 'NN')] 

 Lemmas are: 
>> [('Output', 'output'), ('layer', 'layer')] 

 Dependency tags are: 
>> [(('Output', 'layer'), 'compound'), (('layer', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 48 =================================

IBM Services     5 


------------------- Sentence 1 -------------------

 IBM Services     5 

Tokens are: 
>> ['IBM', 'Services', '5'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('Services', 'PROPN'), ('5', 'NUM')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('Services', 'NNPS'), ('5', 'CD')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('Services', 'Service'), ('5', '5')] 

 Dependency tags are: 
>> [(('IBM', 'Services'), 'compound'), (('Services', 'root'), 'root'), (('5', 'Services'), 'nummod')]

 Named Entites are: 
>> [('IBM Services', 'ORG')]

================================ Paragraph 49 =================================

How does an AI system learn?   To illustrate how AI system learning works, we’ll next  describe what a data scientist does, and what a machine  does in the process of developing AI solutions. Later, when  we discuss the pitfalls of implementing AI, we’ll explain  what types of skills you’ll need to successfully build a data  science team.   


------------------- Sentence 1 -------------------

 How does an AI system learn? 

Tokens are: 
>> ['How', 'does', 'an', 'AI', 'system', 'learn', '?'] 

 UPOS tags are: 
>> [('How', 'ADV'), ('does', 'AUX'), ('an', 'DET'), ('AI', 'NOUN'), ('system', 'NOUN'), ('learn', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('How', 'WRB'), ('does', 'VBZ'), ('an', 'DT'), ('AI', 'NN'), ('system', 'NN'), ('learn', 'VB'), ('?', '.')] 

 Lemmas are: 
>> [('How', 'how'), ('does', 'do'), ('an', 'a'), ('AI', 'ai'), ('system', 'system'), ('learn', 'learn'), ('?', '?')] 

 Dependency tags are: 
>> [(('How', 'learn'), 'advmod'), (('does', 'learn'), 'aux'), (('an', 'system'), 'det'), (('AI', 'system'), 'compound'), (('system', 'learn'), 'nsubj'), (('learn', 'root'), 'root'), (('?', 'learn'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 To illustrate how AI system learning works, we’ll next  describe what a data scientist does, and what a machine  does in the process of developing AI solutions. 

Tokens are: 
>> ['To', 'illustrate', 'how', 'AI', 'system', 'learning', 'works', ',', 'we', '’ll', 'next', 'describe', 'what', 'a', 'data', 'scientist', 'does', ',', 'and', 'what', 'a', 'machine', 'does', 'in', 'the', 'process', 'of', 'developing', 'AI', 'solutions', '.'] 

 UPOS tags are: 
>> [('To', 'PART'), ('illustrate', 'VERB'), ('how', 'SCONJ'), ('AI', 'AUX'), ('system', 'NOUN'), ('learning', 'NOUN'), ('works', 'NOUN'), (',', 'PUNCT'), ('we', 'PRON'), ('’ll', 'AUX'), ('next', 'ADV'), ('describe', 'VERB'), ('what', 'PRON'), ('a', 'DET'), ('data', 'NOUN'), ('scientist', 'NOUN'), ('does', 'VERB'), (',', 'PUNCT'), ('and', 'CCONJ'), ('what', 'PRON'), ('a', 'DET'), ('machine', 'NOUN'), ('does', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('process', 'NOUN'), ('of', 'SCONJ'), ('developing', 'VERB'), ('AI', 'NOUN'), ('solutions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('To', 'TO'), ('illustrate', 'VB'), ('how', 'WRB'), ('AI', 'VBZ'), ('system', 'NN'), ('learning', 'NN'), ('works', 'NNS'), (',', ','), ('we', 'PRP'), ('’ll', 'MD'), ('next', 'RB'), ('describe', 'VB'), ('what', 'WP'), ('a', 'DT'), ('data', 'NN'), ('scientist', 'NN'), ('does', 'VBZ'), (',', ','), ('and', 'CC'), ('what', 'WP'), ('a', 'DT'), ('machine', 'NN'), ('does', 'VBZ'), ('in', 'IN'), ('the', 'DT'), ('process', 'NN'), ('of', 'IN'), ('developing', 'VBG'), ('AI', 'NN'), ('solutions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('To', 'to'), ('illustrate', 'illustrate'), ('how', 'how'), ('AI', 'be'), ('system', 'system'), ('learning', 'learning'), ('works', 'work'), (',', ','), ('we', 'we'), ('’ll', 'will'), ('next', 'next'), ('describe', 'describe'), ('what', 'what'), ('a', 'a'), ('data', 'datum'), ('scientist', 'scientist'), ('does', 'do'), (',', ','), ('and', 'and'), ('what', 'what'), ('a', 'a'), ('machine', 'machine'), ('does', 'do'), ('in', 'in'), ('the', 'the'), ('process', 'process'), ('of', 'of'), ('developing', 'develop'), ('AI', 'ai'), ('solutions', 'solution'), ('.', '.')] 

 Dependency tags are: 
>> [(('To', 'illustrate'), 'mark'), (('illustrate', 'describe'), 'advcl'), (('how', 'works'), 'mark'), (('AI', 'works'), 'cop'), (('system', 'works'), 'compound'), (('learning', 'works'), 'compound'), (('works', 'illustrate'), 'ccomp'), ((',', 'describe'), 'punct'), (('we', 'describe'), 'nsubj'), (('’ll', 'describe'), 'aux'), (('next', 'describe'), 'advmod'), (('describe', 'root'), 'root'), (('what', 'describe'), 'obj'), (('a', 'scientist'), 'det'), (('data', 'scientist'), 'compound'), (('scientist', 'does'), 'nsubj'), (('does', 'what'), 'acl:relcl'), ((',', 'does'), 'punct'), (('and', 'does'), 'cc'), (('what', 'does'), 'obj'), (('a', 'machine'), 'det'), (('machine', 'does'), 'nsubj'), (('does', 'describe'), 'conj'), (('in', 'process'), 'case'), (('the', 'process'), 'det'), (('process', 'does'), 'obl'), (('of', 'developing'), 'mark'), (('developing', 'process'), 'acl'), (('AI', 'solutions'), 'compound'), (('solutions', 'developing'), 'obj'), (('.', 'describe'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 3 -------------------

 Later, when  we discuss the pitfalls of implementing AI, we’ll explain  what types of skills you’ll need to successfully build a data  science team. 

Tokens are: 
>> ['Later', ',', 'when', 'we', 'discuss', 'the', 'pitfalls', 'of', 'implementing', 'AI', ',', 'we', '’ll', 'explain', 'what', 'types', 'of', 'skills', 'you', '’ll', 'need', 'to', 'successfully', 'build', 'a', 'data', 'science', 'team', '.'] 

 UPOS tags are: 
>> [('Later', 'ADV'), (',', 'PUNCT'), ('when', 'SCONJ'), ('we', 'PRON'), ('discuss', 'VERB'), ('the', 'DET'), ('pitfalls', 'NOUN'), ('of', 'SCONJ'), ('implementing', 'VERB'), ('AI', 'NOUN'), (',', 'PUNCT'), ('we', 'PRON'), ('’ll', 'AUX'), ('explain', 'VERB'), ('what', 'DET'), ('types', 'NOUN'), ('of', 'ADP'), ('skills', 'NOUN'), ('you', 'PRON'), ('’ll', 'AUX'), ('need', 'VERB'), ('to', 'PART'), ('successfully', 'ADV'), ('build', 'VERB'), ('a', 'DET'), ('data', 'NOUN'), ('science', 'NOUN'), ('team', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Later', 'RBR'), (',', ','), ('when', 'WRB'), ('we', 'PRP'), ('discuss', 'VBP'), ('the', 'DT'), ('pitfalls', 'NNS'), ('of', 'IN'), ('implementing', 'VBG'), ('AI', 'NNS'), (',', ','), ('we', 'PRP'), ('’ll', 'MD'), ('explain', 'VB'), ('what', 'WDT'), ('types', 'NNS'), ('of', 'IN'), ('skills', 'NNS'), ('you', 'PRP'), ('’ll', 'MD'), ('need', 'VB'), ('to', 'TO'), ('successfully', 'RB'), ('build', 'VB'), ('a', 'DT'), ('data', 'NN'), ('science', 'NN'), ('team', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Later', 'late'), (',', ','), ('when', 'when'), ('we', 'we'), ('discuss', 'discuss'), ('the', 'the'), ('pitfalls', 'pitfall'), ('of', 'of'), ('implementing', 'implement'), ('AI', 'ai'), (',', ','), ('we', 'we'), ('’ll', 'will'), ('explain', 'explain'), ('what', 'what'), ('types', 'type'), ('of', 'of'), ('skills', 'skill'), ('you', 'you'), ('’ll', 'will'), ('need', 'need'), ('to', 'to'), ('successfully', 'successfully'), ('build', 'build'), ('a', 'a'), ('data', 'datum'), ('science', 'science'), ('team', 'team'), ('.', '.')] 

 Dependency tags are: 
>> [(('Later', 'explain'), 'advmod'), ((',', 'explain'), 'punct'), (('when', 'discuss'), 'mark'), (('we', 'discuss'), 'nsubj'), (('discuss', 'explain'), 'advcl'), (('the', 'pitfalls'), 'det'), (('pitfalls', 'discuss'), 'obj'), (('of', 'implementing'), 'mark'), (('implementing', 'pitfalls'), 'acl'), (('AI', 'implementing'), 'obj'), ((',', 'explain'), 'punct'), (('we', 'explain'), 'nsubj'), (('’ll', 'explain'), 'aux'), (('explain', 'root'), 'root'), (('what', 'types'), 'det'), (('types', 'need'), 'obj'), (('of', 'skills'), 'case'), (('skills', 'types'), 'nmod'), (('you', 'need'), 'nsubj'), (('’ll', 'need'), 'aux'), (('need', 'explain'), 'ccomp'), (('to', 'build'), 'mark'), (('successfully', 'build'), 'advmod'), (('build', 'need'), 'xcomp'), (('a', 'team'), 'det'), (('data', 'team'), 'compound'), (('science', 'team'), 'compound'), (('team', 'build'), 'obj'), (('.', 'explain'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 50 =================================

Data scientist The data scientist extracts knowledge and interprets data  by using the right tools and statistical methods6. The data  scientist first helps identify data-analytics problems. Next,  he or she defines defines the right algorithm and tools.  He or she cleans the data and collects the correct data for  the problem. The next step is to define hyperparameters  and engineer the features in a way that it fits the model.  After the model provides output the data scientist analyzes  and identifies patterns and trends. Then the data scientist  communicates the results to the stakeholders. 


------------------- Sentence 1 -------------------

 Data scientist 

Tokens are: 
>> ['Data', 'scientist'] 

 UPOS tags are: 
>> [('Data', 'NOUN'), ('scientist', 'NOUN')] 

 XPOS tags are: 
>> [('Data', 'NN'), ('scientist', 'NN')] 

 Lemmas are: 
>> [('Data', 'data'), ('scientist', 'scientist')] 

 Dependency tags are: 
>> [(('Data', 'scientist'), 'compound'), (('scientist', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 The data scientist extracts knowledge and interprets data  by using the right tools and statistical methods6. 

Tokens are: 
>> ['The', 'data', 'scientist', 'extracts', 'knowledge', 'and', 'interprets', 'data', 'by', 'using', 'the', 'right', 'tools', 'and', 'statistical', 'methods', '6', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('data', 'NOUN'), ('scientist', 'NOUN'), ('extracts', 'VERB'), ('knowledge', 'NOUN'), ('and', 'CCONJ'), ('interprets', 'VERB'), ('data', 'NOUN'), ('by', 'SCONJ'), ('using', 'VERB'), ('the', 'DET'), ('right', 'ADJ'), ('tools', 'NOUN'), ('and', 'CCONJ'), ('statistical', 'ADJ'), ('methods', 'NOUN'), ('6', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('data', 'NN'), ('scientist', 'NN'), ('extracts', 'VBZ'), ('knowledge', 'NN'), ('and', 'CC'), ('interprets', 'VBZ'), ('data', 'NNS'), ('by', 'IN'), ('using', 'VBG'), ('the', 'DT'), ('right', 'JJ'), ('tools', 'NNS'), ('and', 'CC'), ('statistical', 'JJ'), ('methods', 'NNS'), ('6', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('data', 'datum'), ('scientist', 'scientist'), ('extracts', 'extract'), ('knowledge', 'knowledge'), ('and', 'and'), ('interprets', 'interpret'), ('data', 'datum'), ('by', 'by'), ('using', 'use'), ('the', 'the'), ('right', 'right'), ('tools', 'tool'), ('and', 'and'), ('statistical', 'statistical'), ('methods', 'method'), ('6', '6'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'scientist'), 'det'), (('data', 'scientist'), 'compound'), (('scientist', 'extracts'), 'nsubj'), (('extracts', 'root'), 'root'), (('knowledge', 'extracts'), 'obj'), (('and', 'interprets'), 'cc'), (('interprets', 'extracts'), 'conj'), (('data', 'interprets'), 'obj'), (('by', 'using'), 'mark'), (('using', 'interprets'), 'advcl'), (('the', 'tools'), 'det'), (('right', 'tools'), 'amod'), (('tools', 'using'), 'obj'), (('and', 'methods'), 'cc'), (('statistical', 'methods'), 'amod'), (('methods', 'tools'), 'conj'), (('6', 'methods'), 'nummod'), (('.', 'extracts'), 'punct')]

 Named Entites are: 
>> [('6', 'CARDINAL')]

------------------- Sentence 3 -------------------

 The data  scientist first helps identify data-analytics problems. 

Tokens are: 
>> ['The', 'data', 'scientist', 'first', 'helps', 'identify', 'data-analytics', 'problems', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('data', 'NOUN'), ('scientist', 'NOUN'), ('first', 'ADJ'), ('helps', 'VERB'), ('identify', 'VERB'), ('data-analytics', 'ADJ'), ('problems', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('data', 'NN'), ('scientist', 'NN'), ('first', 'JJ'), ('helps', 'VBZ'), ('identify', 'VB'), ('data-analytics', 'JJ'), ('problems', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('data', 'datum'), ('scientist', 'scientist'), ('first', 'first'), ('helps', 'help'), ('identify', 'identify'), ('data-analytics', 'data-analytics'), ('problems', 'problem'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'scientist'), 'det'), (('data', 'scientist'), 'compound'), (('scientist', 'helps'), 'nsubj'), (('first', 'scientist'), 'amod'), (('helps', 'root'), 'root'), (('identify', 'helps'), 'xcomp'), (('data-analytics', 'problems'), 'amod'), (('problems', 'identify'), 'obj'), (('.', 'helps'), 'punct')]

 Named Entites are: 
>> [('first', 'ORDINAL')]

------------------- Sentence 4 -------------------

 Next,  he or she defines defines the right algorithm and tools. 

Tokens are: 
>> ['Next', ',', 'he', 'or', 'she', 'defines', 'defines', 'the', 'right', 'algorithm', 'and', 'tools', '.'] 

 UPOS tags are: 
>> [('Next', 'ADV'), (',', 'PUNCT'), ('he', 'PRON'), ('or', 'CCONJ'), ('she', 'PRON'), ('defines', 'VERB'), ('defines', 'VERB'), ('the', 'DET'), ('right', 'ADJ'), ('algorithm', 'NOUN'), ('and', 'CCONJ'), ('tools', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Next', 'RB'), (',', ','), ('he', 'PRP'), ('or', 'CC'), ('she', 'PRP'), ('defines', 'VBZ'), ('defines', 'VBZ'), ('the', 'DT'), ('right', 'JJ'), ('algorithm', 'NN'), ('and', 'CC'), ('tools', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Next', 'next'), (',', ','), ('he', 'he'), ('or', 'or'), ('she', 'she'), ('defines', 'define'), ('defines', 'define'), ('the', 'the'), ('right', 'right'), ('algorithm', 'algorithm'), ('and', 'and'), ('tools', 'tool'), ('.', '.')] 

 Dependency tags are: 
>> [(('Next', 'defines'), 'advmod'), ((',', 'defines'), 'punct'), (('he', 'defines'), 'nsubj'), (('or', 'she'), 'cc'), (('she', 'he'), 'conj'), (('defines', 'defines'), 'discourse'), (('defines', 'root'), 'root'), (('the', 'algorithm'), 'det'), (('right', 'algorithm'), 'amod'), (('algorithm', 'defines'), 'obj'), (('and', 'tools'), 'cc'), (('tools', 'algorithm'), 'conj'), (('.', 'defines'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 He or she cleans the data and collects the correct data for  the problem. 

Tokens are: 
>> ['He', 'or', 'she', 'cleans', 'the', 'data', 'and', 'collects', 'the', 'correct', 'data', 'for', 'the', 'problem', '.'] 

 UPOS tags are: 
>> [('He', 'PRON'), ('or', 'CCONJ'), ('she', 'PRON'), ('cleans', 'VERB'), ('the', 'DET'), ('data', 'NOUN'), ('and', 'CCONJ'), ('collects', 'VERB'), ('the', 'DET'), ('correct', 'ADJ'), ('data', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('problem', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('He', 'PRP'), ('or', 'CC'), ('she', 'PRP'), ('cleans', 'VBZ'), ('the', 'DT'), ('data', 'NNS'), ('and', 'CC'), ('collects', 'VBZ'), ('the', 'DT'), ('correct', 'JJ'), ('data', 'NNS'), ('for', 'IN'), ('the', 'DT'), ('problem', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('He', 'he'), ('or', 'or'), ('she', 'she'), ('cleans', 'clean'), ('the', 'the'), ('data', 'datum'), ('and', 'and'), ('collects', 'collect'), ('the', 'the'), ('correct', 'correct'), ('data', 'datum'), ('for', 'for'), ('the', 'the'), ('problem', 'problem'), ('.', '.')] 

 Dependency tags are: 
>> [(('He', 'cleans'), 'nsubj'), (('or', 'she'), 'cc'), (('she', 'He'), 'conj'), (('cleans', 'root'), 'root'), (('the', 'data'), 'det'), (('data', 'cleans'), 'obj'), (('and', 'collects'), 'cc'), (('collects', 'cleans'), 'conj'), (('the', 'data'), 'det'), (('correct', 'data'), 'amod'), (('data', 'collects'), 'obj'), (('for', 'problem'), 'case'), (('the', 'problem'), 'det'), (('problem', 'data'), 'nmod'), (('.', 'cleans'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 The next step is to define hyperparameters  and engineer the features in a way that it fits the model. 

Tokens are: 
>> ['The', 'next', 'step', 'is', 'to', 'define', 'hyperparameters', 'and', 'engineer', 'the', 'features', 'in', 'a', 'way', 'that', 'it', 'fits', 'the', 'model', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('next', 'ADJ'), ('step', 'NOUN'), ('is', 'VERB'), ('to', 'PART'), ('define', 'VERB'), ('hyperparameters', 'NOUN'), ('and', 'CCONJ'), ('engineer', 'VERB'), ('the', 'DET'), ('features', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('way', 'NOUN'), ('that', 'SCONJ'), ('it', 'PRON'), ('fits', 'VERB'), ('the', 'DET'), ('model', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('next', 'JJ'), ('step', 'NN'), ('is', 'VBZ'), ('to', 'TO'), ('define', 'VB'), ('hyperparameters', 'NNS'), ('and', 'CC'), ('engineer', 'VB'), ('the', 'DT'), ('features', 'NNS'), ('in', 'IN'), ('a', 'DT'), ('way', 'NN'), ('that', 'IN'), ('it', 'PRP'), ('fits', 'VBZ'), ('the', 'DT'), ('model', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('next', 'next'), ('step', 'step'), ('is', 'be'), ('to', 'to'), ('define', 'define'), ('hyperparameters', 'hyperparameter'), ('and', 'and'), ('engineer', 'engineer'), ('the', 'the'), ('features', 'feature'), ('in', 'in'), ('a', 'a'), ('way', 'way'), ('that', 'that'), ('it', 'it'), ('fits', 'fit'), ('the', 'the'), ('model', 'model'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'step'), 'det'), (('next', 'step'), 'amod'), (('step', 'is'), 'nsubj'), (('is', 'root'), 'root'), (('to', 'define'), 'mark'), (('define', 'is'), 'ccomp'), (('hyperparameters', 'define'), 'obj'), (('and', 'engineer'), 'cc'), (('engineer', 'define'), 'conj'), (('the', 'features'), 'det'), (('features', 'engineer'), 'obj'), (('in', 'way'), 'case'), (('a', 'way'), 'det'), (('way', 'engineer'), 'obl'), (('that', 'fits'), 'mark'), (('it', 'fits'), 'nsubj'), (('fits', 'way'), 'acl'), (('the', 'model'), 'det'), (('model', 'fits'), 'obj'), (('.', 'is'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 7 -------------------

 After the model provides output the data scientist analyzes  and identifies patterns and trends. 

Tokens are: 
>> ['After', 'the', 'model', 'provides', 'output', 'the', 'data', 'scientist', 'analyzes', 'and', 'identifies', 'patterns', 'and', 'trends', '.'] 

 UPOS tags are: 
>> [('After', 'SCONJ'), ('the', 'DET'), ('model', 'NOUN'), ('provides', 'VERB'), ('output', 'NOUN'), ('the', 'DET'), ('data', 'NOUN'), ('scientist', 'NOUN'), ('analyzes', 'VERB'), ('and', 'CCONJ'), ('identifies', 'VERB'), ('patterns', 'NOUN'), ('and', 'CCONJ'), ('trends', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('After', 'IN'), ('the', 'DT'), ('model', 'NN'), ('provides', 'VBZ'), ('output', 'NN'), ('the', 'DT'), ('data', 'NN'), ('scientist', 'NN'), ('analyzes', 'VBZ'), ('and', 'CC'), ('identifies', 'VBZ'), ('patterns', 'NNS'), ('and', 'CC'), ('trends', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('After', 'after'), ('the', 'the'), ('model', 'model'), ('provides', 'provide'), ('output', 'output'), ('the', 'the'), ('data', 'datum'), ('scientist', 'scientist'), ('analyzes', 'analyze'), ('and', 'and'), ('identifies', 'identify'), ('patterns', 'pattern'), ('and', 'and'), ('trends', 'trend'), ('.', '.')] 

 Dependency tags are: 
>> [(('After', 'provides'), 'mark'), (('the', 'model'), 'det'), (('model', 'provides'), 'nsubj'), (('provides', 'analyzes'), 'advcl'), (('output', 'provides'), 'obj'), (('the', 'scientist'), 'det'), (('data', 'scientist'), 'compound'), (('scientist', 'analyzes'), 'nsubj'), (('analyzes', 'root'), 'root'), (('and', 'identifies'), 'cc'), (('identifies', 'analyzes'), 'conj'), (('patterns', 'identifies'), 'obj'), (('and', 'trends'), 'cc'), (('trends', 'patterns'), 'conj'), (('.', 'analyzes'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 8 -------------------

 Then the data scientist  communicates the results to the stakeholders. 

Tokens are: 
>> ['Then', 'the', 'data', 'scientist', 'communicates', 'the', 'results', 'to', 'the', 'stakeholders', '.'] 

 UPOS tags are: 
>> [('Then', 'ADV'), ('the', 'DET'), ('data', 'NOUN'), ('scientist', 'NOUN'), ('communicates', 'VERB'), ('the', 'DET'), ('results', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('stakeholders', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Then', 'RB'), ('the', 'DT'), ('data', 'NN'), ('scientist', 'NN'), ('communicates', 'VBZ'), ('the', 'DT'), ('results', 'NNS'), ('to', 'IN'), ('the', 'DT'), ('stakeholders', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Then', 'then'), ('the', 'the'), ('data', 'datum'), ('scientist', 'scientist'), ('communicates', 'communicate'), ('the', 'the'), ('results', 'result'), ('to', 'to'), ('the', 'the'), ('stakeholders', 'stakeholder'), ('.', '.')] 

 Dependency tags are: 
>> [(('Then', 'communicates'), 'advmod'), (('the', 'scientist'), 'det'), (('data', 'scientist'), 'compound'), (('scientist', 'communicates'), 'nsubj'), (('communicates', 'root'), 'root'), (('the', 'results'), 'det'), (('results', 'communicates'), 'obj'), (('to', 'stakeholders'), 'case'), (('the', 'stakeholders'), 'det'), (('stakeholders', 'results'), 'nmod'), (('.', 'communicates'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 51 =================================

Machine The machine learns to recognize patterns in the data   that it is fed to it, and then maps these patterns to future  outcomes. The machine learns through adjusting the  weights and biases in the network from feedback to get to  the correct outcome. This feedback must come from a  trainer—the data scientist. The data scientist tells the  model what should happen and what shouldn’t happen.  This correction is then sent back through the network and  an error rate is computed. With each iteration, the model  works to decrease the error rate.   


------------------- Sentence 1 -------------------

 Machine 

Tokens are: 
>> ['Machine'] 

 UPOS tags are: 
>> [('Machine', 'NOUN')] 

 XPOS tags are: 
>> [('Machine', 'NN')] 

 Lemmas are: 
>> [('Machine', 'Machine')] 

 Dependency tags are: 
>> [(('Machine', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 The machine learns to recognize patterns in the data   that it is fed to it, and then maps these patterns to future  outcomes. 

Tokens are: 
>> ['The', 'machine', 'learns', 'to', 'recognize', 'patterns', 'in', 'the', 'data', 'that', 'it', 'is', 'fed', 'to', 'it', ',', 'and', 'then', 'maps', 'these', 'patterns', 'to', 'future', 'outcomes', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('machine', 'NOUN'), ('learns', 'VERB'), ('to', 'PART'), ('recognize', 'VERB'), ('patterns', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('data', 'NOUN'), ('that', 'SCONJ'), ('it', 'PRON'), ('is', 'AUX'), ('fed', 'VERB'), ('to', 'ADP'), ('it', 'PRON'), (',', 'PUNCT'), ('and', 'CCONJ'), ('then', 'ADV'), ('maps', 'VERB'), ('these', 'DET'), ('patterns', 'NOUN'), ('to', 'ADP'), ('future', 'ADJ'), ('outcomes', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('machine', 'NN'), ('learns', 'VBZ'), ('to', 'TO'), ('recognize', 'VB'), ('patterns', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('data', 'NNS'), ('that', 'IN'), ('it', 'PRP'), ('is', 'VBZ'), ('fed', 'VBN'), ('to', 'IN'), ('it', 'PRP'), (',', ','), ('and', 'CC'), ('then', 'RB'), ('maps', 'VBZ'), ('these', 'DT'), ('patterns', 'NNS'), ('to', 'IN'), ('future', 'JJ'), ('outcomes', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('machine', 'machine'), ('learns', 'learn'), ('to', 'to'), ('recognize', 'recognize'), ('patterns', 'pattern'), ('in', 'in'), ('the', 'the'), ('data', 'datum'), ('that', 'that'), ('it', 'it'), ('is', 'be'), ('fed', 'feed'), ('to', 'to'), ('it', 'it'), (',', ','), ('and', 'and'), ('then', 'then'), ('maps', 'map'), ('these', 'this'), ('patterns', 'pattern'), ('to', 'to'), ('future', 'future'), ('outcomes', 'outcome'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'machine'), 'det'), (('machine', 'learns'), 'nsubj'), (('learns', 'root'), 'root'), (('to', 'recognize'), 'mark'), (('recognize', 'learns'), 'xcomp'), (('patterns', 'recognize'), 'obj'), (('in', 'data'), 'case'), (('the', 'data'), 'det'), (('data', 'patterns'), 'nmod'), (('that', 'fed'), 'mark'), (('it', 'fed'), 'nsubj:pass'), (('is', 'fed'), 'aux:pass'), (('fed', 'data'), 'acl'), (('to', 'it'), 'case'), (('it', 'fed'), 'obl'), ((',', 'maps'), 'punct'), (('and', 'maps'), 'cc'), (('then', 'maps'), 'advmod'), (('maps', 'fed'), 'conj'), (('these', 'patterns'), 'det'), (('patterns', 'maps'), 'obj'), (('to', 'outcomes'), 'case'), (('future', 'outcomes'), 'amod'), (('outcomes', 'maps'), 'obl'), (('.', 'learns'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 The machine learns through adjusting the  weights and biases in the network from feedback to get to  the correct outcome. 

Tokens are: 
>> ['The', 'machine', 'learns', 'through', 'adjusting', 'the', 'weights', 'and', 'biases', 'in', 'the', 'network', 'from', 'feedback', 'to', 'get', 'to', 'the', 'correct', 'outcome', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('machine', 'NOUN'), ('learns', 'VERB'), ('through', 'SCONJ'), ('adjusting', 'VERB'), ('the', 'DET'), ('weights', 'NOUN'), ('and', 'CCONJ'), ('biases', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('network', 'NOUN'), ('from', 'ADP'), ('feedback', 'NOUN'), ('to', 'PART'), ('get', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('correct', 'ADJ'), ('outcome', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('machine', 'NN'), ('learns', 'VBZ'), ('through', 'IN'), ('adjusting', 'VBG'), ('the', 'DT'), ('weights', 'NNS'), ('and', 'CC'), ('biases', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('network', 'NN'), ('from', 'IN'), ('feedback', 'NN'), ('to', 'TO'), ('get', 'VB'), ('to', 'IN'), ('the', 'DT'), ('correct', 'JJ'), ('outcome', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('machine', 'machine'), ('learns', 'learn'), ('through', 'through'), ('adjusting', 'adjust'), ('the', 'the'), ('weights', 'weight'), ('and', 'and'), ('biases', 'biase'), ('in', 'in'), ('the', 'the'), ('network', 'network'), ('from', 'from'), ('feedback', 'feedback'), ('to', 'to'), ('get', 'get'), ('to', 'to'), ('the', 'the'), ('correct', 'correct'), ('outcome', 'outcome'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'machine'), 'det'), (('machine', 'learns'), 'nsubj'), (('learns', 'root'), 'root'), (('through', 'adjusting'), 'mark'), (('adjusting', 'learns'), 'advcl'), (('the', 'weights'), 'det'), (('weights', 'adjusting'), 'obj'), (('and', 'biases'), 'cc'), (('biases', 'weights'), 'conj'), (('in', 'network'), 'case'), (('the', 'network'), 'det'), (('network', 'adjusting'), 'obl'), (('from', 'feedback'), 'case'), (('feedback', 'network'), 'nmod'), (('to', 'get'), 'mark'), (('get', 'feedback'), 'acl'), (('to', 'outcome'), 'case'), (('the', 'outcome'), 'det'), (('correct', 'outcome'), 'amod'), (('outcome', 'get'), 'obl'), (('.', 'learns'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 This feedback must come from a  trainer—the data scientist. 

Tokens are: 
>> ['This', 'feedback', 'must', 'come', 'from', 'a', 'trainer', '—', 'the', 'data', 'scientist', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('feedback', 'NOUN'), ('must', 'AUX'), ('come', 'VERB'), ('from', 'ADP'), ('a', 'DET'), ('trainer', 'NOUN'), ('—', 'PUNCT'), ('the', 'DET'), ('data', 'NOUN'), ('scientist', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('feedback', 'NN'), ('must', 'MD'), ('come', 'VB'), ('from', 'IN'), ('a', 'DT'), ('trainer', 'NN'), ('—', ':'), ('the', 'DT'), ('data', 'NN'), ('scientist', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('feedback', 'feedback'), ('must', 'must'), ('come', 'come'), ('from', 'from'), ('a', 'a'), ('trainer', 'trainer'), ('—', '—'), ('the', 'the'), ('data', 'datum'), ('scientist', 'scientist'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'feedback'), 'det'), (('feedback', 'come'), 'nsubj'), (('must', 'come'), 'aux'), (('come', 'root'), 'root'), (('from', 'trainer'), 'case'), (('a', 'trainer'), 'det'), (('trainer', 'come'), 'obl'), (('—', 'scientist'), 'punct'), (('the', 'scientist'), 'det'), (('data', 'scientist'), 'compound'), (('scientist', 'trainer'), 'appos'), (('.', 'come'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 The data scientist tells the  model what should happen and what shouldn’t happen. 

Tokens are: 
>> ['The', 'data', 'scientist', 'tells', 'the', 'model', 'what', 'should', 'happen', 'and', 'what', 'should', 'n’t', 'happen', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('data', 'NOUN'), ('scientist', 'NOUN'), ('tells', 'VERB'), ('the', 'DET'), ('model', 'NOUN'), ('what', 'PRON'), ('should', 'AUX'), ('happen', 'VERB'), ('and', 'CCONJ'), ('what', 'PRON'), ('should', 'AUX'), ('n’t', 'PART'), ('happen', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('data', 'NN'), ('scientist', 'NN'), ('tells', 'VBZ'), ('the', 'DT'), ('model', 'NN'), ('what', 'WP'), ('should', 'MD'), ('happen', 'VB'), ('and', 'CC'), ('what', 'WP'), ('should', 'MD'), ('n’t', 'RB'), ('happen', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('data', 'datum'), ('scientist', 'scientist'), ('tells', 'tell'), ('the', 'the'), ('model', 'model'), ('what', 'what'), ('should', 'should'), ('happen', 'happen'), ('and', 'and'), ('what', 'what'), ('should', 'should'), ('n’t', 'not'), ('happen', 'happen'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'scientist'), 'det'), (('data', 'scientist'), 'compound'), (('scientist', 'tells'), 'nsubj'), (('tells', 'root'), 'root'), (('the', 'model'), 'det'), (('model', 'tells'), 'obj'), (('what', 'happen'), 'nsubj'), (('should', 'happen'), 'aux'), (('happen', 'model'), 'acl:relcl'), (('and', 'happen'), 'cc'), (('what', 'happen'), 'nsubj'), (('should', 'happen'), 'aux'), (('n’t', 'happen'), 'advmod'), (('happen', 'tells'), 'conj'), (('.', 'tells'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 This correction is then sent back through the network and  an error rate is computed. 

Tokens are: 
>> ['This', 'correction', 'is', 'then', 'sent', 'back', 'through', 'the', 'network', 'and', 'an', 'error', 'rate', 'is', 'computed', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('correction', 'NOUN'), ('is', 'AUX'), ('then', 'ADV'), ('sent', 'VERB'), ('back', 'ADV'), ('through', 'ADP'), ('the', 'DET'), ('network', 'NOUN'), ('and', 'CCONJ'), ('an', 'DET'), ('error', 'NOUN'), ('rate', 'NOUN'), ('is', 'AUX'), ('computed', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('correction', 'NN'), ('is', 'VBZ'), ('then', 'RB'), ('sent', 'VBN'), ('back', 'RB'), ('through', 'IN'), ('the', 'DT'), ('network', 'NN'), ('and', 'CC'), ('an', 'DT'), ('error', 'NN'), ('rate', 'NN'), ('is', 'VBZ'), ('computed', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('correction', 'correction'), ('is', 'be'), ('then', 'then'), ('sent', 'send'), ('back', 'back'), ('through', 'through'), ('the', 'the'), ('network', 'network'), ('and', 'and'), ('an', 'a'), ('error', 'error'), ('rate', 'rate'), ('is', 'be'), ('computed', 'compute'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'correction'), 'det'), (('correction', 'sent'), 'nsubj:pass'), (('is', 'sent'), 'aux:pass'), (('then', 'sent'), 'advmod'), (('sent', 'root'), 'root'), (('back', 'sent'), 'advmod'), (('through', 'network'), 'case'), (('the', 'network'), 'det'), (('network', 'sent'), 'obl'), (('and', 'computed'), 'cc'), (('an', 'rate'), 'det'), (('error', 'rate'), 'compound'), (('rate', 'computed'), 'nsubj:pass'), (('is', 'computed'), 'aux:pass'), (('computed', 'sent'), 'conj'), (('.', 'sent'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 7 -------------------

 With each iteration, the model  works to decrease the error rate. 

Tokens are: 
>> ['With', 'each', 'iteration', ',', 'the', 'model', 'works', 'to', 'decrease', 'the', 'error', 'rate', '.'] 

 UPOS tags are: 
>> [('With', 'ADP'), ('each', 'DET'), ('iteration', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('model', 'NOUN'), ('works', 'VERB'), ('to', 'PART'), ('decrease', 'VERB'), ('the', 'DET'), ('error', 'NOUN'), ('rate', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('With', 'IN'), ('each', 'DT'), ('iteration', 'NN'), (',', ','), ('the', 'DT'), ('model', 'NN'), ('works', 'VBZ'), ('to', 'TO'), ('decrease', 'VB'), ('the', 'DT'), ('error', 'NN'), ('rate', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('With', 'with'), ('each', 'each'), ('iteration', 'iteration'), (',', ','), ('the', 'the'), ('model', 'model'), ('works', 'work'), ('to', 'to'), ('decrease', 'decrease'), ('the', 'the'), ('error', 'error'), ('rate', 'rate'), ('.', '.')] 

 Dependency tags are: 
>> [(('With', 'iteration'), 'case'), (('each', 'iteration'), 'det'), (('iteration', 'works'), 'obl'), ((',', 'works'), 'punct'), (('the', 'model'), 'det'), (('model', 'works'), 'nsubj'), (('works', 'root'), 'root'), (('to', 'decrease'), 'mark'), (('decrease', 'works'), 'xcomp'), (('the', 'rate'), 'det'), (('error', 'rate'), 'compound'), (('rate', 'decrease'), 'obj'), (('.', 'works'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 52 =================================

In the appendix section of this paper, we have a section  that addresses the different types of algorithms’ learning.  There are four main types of learning; supervised,  unsupervised, transferred and reinforcement learning.  While unsupervised, reinforcement and transfer learning  show great potential, supervised learning is currently the  type that can provide the highest economic value. 


------------------- Sentence 1 -------------------

 In the appendix section of this paper, we have a section  that addresses the different types of algorithms’ learning. 

Tokens are: 
>> ['In', 'the', 'appendix', 'section', 'of', 'this', 'paper', ',', 'we', 'have', 'a', 'section', 'that', 'addresses', 'the', 'different', 'types', 'of', 'algorithms', '’', 'learning', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('the', 'DET'), ('appendix', 'ADJ'), ('section', 'NOUN'), ('of', 'ADP'), ('this', 'DET'), ('paper', 'NOUN'), (',', 'PUNCT'), ('we', 'PRON'), ('have', 'VERB'), ('a', 'DET'), ('section', 'NOUN'), ('that', 'PRON'), ('addresses', 'VERB'), ('the', 'DET'), ('different', 'ADJ'), ('types', 'NOUN'), ('of', 'ADP'), ('algorithms', 'NOUN'), ('’', 'PART'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('the', 'DT'), ('appendix', 'JJ'), ('section', 'NN'), ('of', 'IN'), ('this', 'DT'), ('paper', 'NN'), (',', ','), ('we', 'PRP'), ('have', 'VBP'), ('a', 'DT'), ('section', 'NN'), ('that', 'WDT'), ('addresses', 'VBZ'), ('the', 'DT'), ('different', 'JJ'), ('types', 'NNS'), ('of', 'IN'), ('algorithms', 'NNS'), ('’', 'POS'), ('learning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('the', 'the'), ('appendix', 'appendix'), ('section', 'section'), ('of', 'of'), ('this', 'this'), ('paper', 'paper'), (',', ','), ('we', 'we'), ('have', 'have'), ('a', 'a'), ('section', 'section'), ('that', 'that'), ('addresses', 'address'), ('the', 'the'), ('different', 'different'), ('types', 'type'), ('of', 'of'), ('algorithms', 'algorithm'), ('’', "'s"), ('learning', 'learning'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'section'), 'case'), (('the', 'section'), 'det'), (('appendix', 'section'), 'amod'), (('section', 'have'), 'obl'), (('of', 'paper'), 'case'), (('this', 'paper'), 'det'), (('paper', 'section'), 'nmod'), ((',', 'have'), 'punct'), (('we', 'have'), 'nsubj'), (('have', 'root'), 'root'), (('a', 'section'), 'det'), (('section', 'have'), 'obj'), (('that', 'addresses'), 'nsubj'), (('addresses', 'section'), 'acl:relcl'), (('the', 'types'), 'det'), (('different', 'types'), 'amod'), (('types', 'addresses'), 'obj'), (('of', 'learning'), 'case'), (('algorithms', 'learning'), 'nmod:poss'), (('’', 'algorithms'), 'case'), (('learning', 'types'), 'nmod'), (('.', 'have'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 There are four main types of learning; supervised,  unsupervised, transferred and reinforcement learning. 

Tokens are: 
>> ['There', 'are', 'four', 'main', 'types', 'of', 'learning', ';', 'supervised', ',', 'unsupervised', ',', 'transferred', 'and', 'reinforcement', 'learning', '.'] 

 UPOS tags are: 
>> [('There', 'PRON'), ('are', 'VERB'), ('four', 'NUM'), ('main', 'ADJ'), ('types', 'NOUN'), ('of', 'ADP'), ('learning', 'NOUN'), (';', 'PUNCT'), ('supervised', 'VERB'), (',', 'PUNCT'), ('unsupervised', 'ADJ'), (',', 'PUNCT'), ('transferred', 'VERB'), ('and', 'CCONJ'), ('reinforcement', 'NOUN'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('There', 'EX'), ('are', 'VBP'), ('four', 'CD'), ('main', 'JJ'), ('types', 'NNS'), ('of', 'IN'), ('learning', 'NN'), (';', ':'), ('supervised', 'VBN'), (',', ','), ('unsupervised', 'JJ'), (',', ','), ('transferred', 'VBN'), ('and', 'CC'), ('reinforcement', 'NN'), ('learning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('There', 'there'), ('are', 'be'), ('four', 'four'), ('main', 'main'), ('types', 'type'), ('of', 'of'), ('learning', 'learning'), (';', ';'), ('supervised', 'supervise'), (',', ','), ('unsupervised', 'unsupervised'), (',', ','), ('transferred', 'transfer'), ('and', 'and'), ('reinforcement', 'reinforcement'), ('learning', 'learning'), ('.', '.')] 

 Dependency tags are: 
>> [(('There', 'are'), 'expl'), (('are', 'root'), 'root'), (('four', 'types'), 'nummod'), (('main', 'types'), 'amod'), (('types', 'are'), 'nsubj'), (('of', 'learning'), 'case'), (('learning', 'types'), 'nmod'), ((';', 'learning'), 'punct'), (('supervised', 'types'), 'acl'), ((',', 'unsupervised'), 'punct'), (('unsupervised', 'supervised'), 'conj'), ((',', 'transferred'), 'punct'), (('transferred', 'supervised'), 'conj'), (('and', 'reinforcement'), 'cc'), (('reinforcement', 'supervised'), 'conj'), (('learning', 'types'), 'conj'), (('.', 'are'), 'punct')]

 Named Entites are: 
>> [('four', 'CARDINAL')]

------------------- Sentence 3 -------------------

 While unsupervised, reinforcement and transfer learning  show great potential, supervised learning is currently the  type that can provide the highest economic value. 

Tokens are: 
>> ['While', 'unsupervised', ',', 'reinforcement', 'and', 'transfer', 'learning', 'show', 'great', 'potential', ',', 'supervised', 'learning', 'is', 'currently', 'the', 'type', 'that', 'can', 'provide', 'the', 'highest', 'economic', 'value', '.'] 

 UPOS tags are: 
>> [('While', 'SCONJ'), ('unsupervised', 'ADJ'), (',', 'PUNCT'), ('reinforcement', 'NOUN'), ('and', 'CCONJ'), ('transfer', 'NOUN'), ('learning', 'NOUN'), ('show', 'VERB'), ('great', 'ADJ'), ('potential', 'NOUN'), (',', 'PUNCT'), ('supervised', 'VERB'), ('learning', 'NOUN'), ('is', 'AUX'), ('currently', 'ADV'), ('the', 'DET'), ('type', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('provide', 'VERB'), ('the', 'DET'), ('highest', 'ADJ'), ('economic', 'ADJ'), ('value', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('While', 'IN'), ('unsupervised', 'JJ'), (',', ','), ('reinforcement', 'NN'), ('and', 'CC'), ('transfer', 'NN'), ('learning', 'NN'), ('show', 'VBP'), ('great', 'JJ'), ('potential', 'NN'), (',', ','), ('supervised', 'VBN'), ('learning', 'NN'), ('is', 'VBZ'), ('currently', 'RB'), ('the', 'DT'), ('type', 'NN'), ('that', 'WDT'), ('can', 'MD'), ('provide', 'VB'), ('the', 'DT'), ('highest', 'JJS'), ('economic', 'JJ'), ('value', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('While', 'while'), ('unsupervised', 'unsupervised'), (',', ','), ('reinforcement', 'reinforcement'), ('and', 'and'), ('transfer', 'transfer'), ('learning', 'learning'), ('show', 'show'), ('great', 'great'), ('potential', 'potential'), (',', ','), ('supervised', 'supervise'), ('learning', 'learning'), ('is', 'be'), ('currently', 'currently'), ('the', 'the'), ('type', 'type'), ('that', 'that'), ('can', 'can'), ('provide', 'provide'), ('the', 'the'), ('highest', 'high'), ('economic', 'economic'), ('value', 'value'), ('.', '.')] 

 Dependency tags are: 
>> [(('While', 'show'), 'mark'), (('unsupervised', 'show'), 'nsubj'), ((',', 'reinforcement'), 'punct'), (('reinforcement', 'unsupervised'), 'conj'), (('and', 'learning'), 'cc'), (('transfer', 'learning'), 'compound'), (('learning', 'unsupervised'), 'conj'), (('show', 'type'), 'advcl'), (('great', 'potential'), 'amod'), (('potential', 'show'), 'obj'), ((',', 'type'), 'punct'), (('supervised', 'learning'), 'amod'), (('learning', 'type'), 'nsubj'), (('is', 'type'), 'cop'), (('currently', 'type'), 'advmod'), (('the', 'type'), 'det'), (('type', 'root'), 'root'), (('that', 'provide'), 'nsubj'), (('can', 'provide'), 'aux'), (('provide', 'type'), 'acl:relcl'), (('the', 'value'), 'det'), (('highest', 'value'), 'amod'), (('economic', 'value'), 'amod'), (('value', 'provide'), 'obj'), (('.', 'type'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 53 =================================

What has driven the development of AI? With increasing computing power and more data, the  potential value of algorithms became higher. People and  companies saw possibilities to embed these smart systems  into their companies to drive strategy and innovation. As  the power of algorithms, computing and amounts of data  increased companies started to see an increasing amount  of use cases. AI started to become an essential value.  Companies saw that these systems could move them closer  to their customers, drive efficiency, enhance employee  experience and capability, automatize tasks, decrease  costs and improve revenue.  


------------------- Sentence 1 -------------------

 What has driven the development of AI? 

Tokens are: 
>> ['What', 'has', 'driven', 'the', 'development', 'of', 'AI', '?'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('has', 'AUX'), ('driven', 'VERB'), ('the', 'DET'), ('development', 'NOUN'), ('of', 'ADP'), ('AI', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('has', 'VBZ'), ('driven', 'VBN'), ('the', 'DT'), ('development', 'NN'), ('of', 'IN'), ('AI', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('has', 'have'), ('driven', 'drive'), ('the', 'the'), ('development', 'development'), ('of', 'of'), ('AI', 'ai'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'driven'), 'nsubj'), (('has', 'driven'), 'aux'), (('driven', 'root'), 'root'), (('the', 'development'), 'det'), (('development', 'driven'), 'obj'), (('of', 'AI'), 'case'), (('AI', 'development'), 'nmod'), (('?', 'driven'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 With increasing computing power and more data, the  potential value of algorithms became higher. 

Tokens are: 
>> ['With', 'increasing', 'computing', 'power', 'and', 'more', 'data', ',', 'the', 'potential', 'value', 'of', 'algorithms', 'became', 'higher', '.'] 

 UPOS tags are: 
>> [('With', 'SCONJ'), ('increasing', 'VERB'), ('computing', 'NOUN'), ('power', 'NOUN'), ('and', 'CCONJ'), ('more', 'ADJ'), ('data', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('potential', 'ADJ'), ('value', 'NOUN'), ('of', 'ADP'), ('algorithms', 'NOUN'), ('became', 'VERB'), ('higher', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('With', 'IN'), ('increasing', 'VBG'), ('computing', 'NN'), ('power', 'NN'), ('and', 'CC'), ('more', 'JJR'), ('data', 'NNS'), (',', ','), ('the', 'DT'), ('potential', 'JJ'), ('value', 'NN'), ('of', 'IN'), ('algorithms', 'NNS'), ('became', 'VBD'), ('higher', 'JJR'), ('.', '.')] 

 Lemmas are: 
>> [('With', 'with'), ('increasing', 'increase'), ('computing', 'computing'), ('power', 'power'), ('and', 'and'), ('more', 'more'), ('data', 'datum'), (',', ','), ('the', 'the'), ('potential', 'potential'), ('value', 'value'), ('of', 'of'), ('algorithms', 'algorithm'), ('became', 'become'), ('higher', 'high'), ('.', '.')] 

 Dependency tags are: 
>> [(('With', 'power'), 'case'), (('increasing', 'power'), 'amod'), (('computing', 'power'), 'compound'), (('power', 'became'), 'advcl'), (('and', 'data'), 'cc'), (('more', 'data'), 'amod'), (('data', 'power'), 'conj'), ((',', 'became'), 'punct'), (('the', 'value'), 'det'), (('potential', 'value'), 'amod'), (('value', 'became'), 'nsubj'), (('of', 'algorithms'), 'case'), (('algorithms', 'value'), 'nmod'), (('became', 'root'), 'root'), (('higher', 'became'), 'xcomp'), (('.', 'became'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 People and  companies saw possibilities to embed these smart systems  into their companies to drive strategy and innovation. 

Tokens are: 
>> ['People', 'and', 'companies', 'saw', 'possibilities', 'to', 'embed', 'these', 'smart', 'systems', 'into', 'their', 'companies', 'to', 'drive', 'strategy', 'and', 'innovation', '.'] 

 UPOS tags are: 
>> [('People', 'NOUN'), ('and', 'CCONJ'), ('companies', 'NOUN'), ('saw', 'VERB'), ('possibilities', 'NOUN'), ('to', 'PART'), ('embed', 'VERB'), ('these', 'DET'), ('smart', 'ADJ'), ('systems', 'NOUN'), ('into', 'ADP'), ('their', 'PRON'), ('companies', 'NOUN'), ('to', 'PART'), ('drive', 'VERB'), ('strategy', 'NOUN'), ('and', 'CCONJ'), ('innovation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('People', 'NNS'), ('and', 'CC'), ('companies', 'NNS'), ('saw', 'VBD'), ('possibilities', 'NNS'), ('to', 'TO'), ('embed', 'VB'), ('these', 'DT'), ('smart', 'JJ'), ('systems', 'NNS'), ('into', 'IN'), ('their', 'PRP$'), ('companies', 'NNS'), ('to', 'TO'), ('drive', 'VB'), ('strategy', 'NN'), ('and', 'CC'), ('innovation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('People', 'person'), ('and', 'and'), ('companies', 'company'), ('saw', 'see'), ('possibilities', 'possibility'), ('to', 'to'), ('embed', 'emb'), ('these', 'this'), ('smart', 'smart'), ('systems', 'system'), ('into', 'into'), ('their', 'they'), ('companies', 'company'), ('to', 'to'), ('drive', 'drive'), ('strategy', 'strategy'), ('and', 'and'), ('innovation', 'innovation'), ('.', '.')] 

 Dependency tags are: 
>> [(('People', 'saw'), 'nsubj'), (('and', 'companies'), 'cc'), (('companies', 'People'), 'conj'), (('saw', 'root'), 'root'), (('possibilities', 'saw'), 'obj'), (('to', 'embed'), 'mark'), (('embed', 'possibilities'), 'acl'), (('these', 'systems'), 'det'), (('smart', 'systems'), 'amod'), (('systems', 'embed'), 'obj'), (('into', 'companies'), 'case'), (('their', 'companies'), 'nmod:poss'), (('companies', 'embed'), 'obl'), (('to', 'drive'), 'mark'), (('drive', 'embed'), 'advcl'), (('strategy', 'drive'), 'obj'), (('and', 'innovation'), 'cc'), (('innovation', 'strategy'), 'conj'), (('.', 'saw'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 As  the power of algorithms, computing and amounts of data  increased companies started to see an increasing amount  of use cases. 

Tokens are: 
>> ['As', 'the', 'power', 'of', 'algorithms', ',', 'computing', 'and', 'amounts', 'of', 'data', 'increased', 'companies', 'started', 'to', 'see', 'an', 'increasing', 'amount', 'of', 'use', 'cases', '.'] 

 UPOS tags are: 
>> [('As', 'ADP'), ('the', 'DET'), ('power', 'NOUN'), ('of', 'ADP'), ('algorithms', 'NOUN'), (',', 'PUNCT'), ('computing', 'NOUN'), ('and', 'CCONJ'), ('amounts', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), ('increased', 'VERB'), ('companies', 'NOUN'), ('started', 'VERB'), ('to', 'PART'), ('see', 'VERB'), ('an', 'DET'), ('increasing', 'VERB'), ('amount', 'NOUN'), ('of', 'ADP'), ('use', 'NOUN'), ('cases', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('As', 'IN'), ('the', 'DT'), ('power', 'NN'), ('of', 'IN'), ('algorithms', 'NNS'), (',', ','), ('computing', 'NN'), ('and', 'CC'), ('amounts', 'NNS'), ('of', 'IN'), ('data', 'NNS'), ('increased', 'VBD'), ('companies', 'NNS'), ('started', 'VBD'), ('to', 'TO'), ('see', 'VB'), ('an', 'DT'), ('increasing', 'VBG'), ('amount', 'NN'), ('of', 'IN'), ('use', 'NN'), ('cases', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('As', 'as'), ('the', 'the'), ('power', 'power'), ('of', 'of'), ('algorithms', 'algorithm'), (',', ','), ('computing', 'computing'), ('and', 'and'), ('amounts', 'amount'), ('of', 'of'), ('data', 'datum'), ('increased', 'increase'), ('companies', 'company'), ('started', 'start'), ('to', 'to'), ('see', 'see'), ('an', 'a'), ('increasing', 'increase'), ('amount', 'amount'), ('of', 'of'), ('use', 'use'), ('cases', 'case'), ('.', '.')] 

 Dependency tags are: 
>> [(('As', 'power'), 'case'), (('the', 'power'), 'det'), (('power', 'increased'), 'obl'), (('of', 'algorithms'), 'case'), (('algorithms', 'power'), 'nmod'), ((',', 'increased'), 'punct'), (('computing', 'increased'), 'nsubj'), (('and', 'amounts'), 'cc'), (('amounts', 'computing'), 'conj'), (('of', 'data'), 'case'), (('data', 'amounts'), 'nmod'), (('increased', 'root'), 'root'), (('companies', 'started'), 'nsubj'), (('started', 'increased'), 'ccomp'), (('to', 'see'), 'mark'), (('see', 'started'), 'xcomp'), (('an', 'amount'), 'det'), (('increasing', 'amount'), 'amod'), (('amount', 'see'), 'obj'), (('of', 'cases'), 'case'), (('use', 'cases'), 'compound'), (('cases', 'amount'), 'nmod'), (('.', 'increased'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 AI started to become an essential value. 

Tokens are: 
>> ['AI', 'started', 'to', 'become', 'an', 'essential', 'value', '.'] 

 UPOS tags are: 
>> [('AI', 'AUX'), ('started', 'VERB'), ('to', 'PART'), ('become', 'VERB'), ('an', 'DET'), ('essential', 'ADJ'), ('value', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('AI', 'VBZ'), ('started', 'VBN'), ('to', 'TO'), ('become', 'VB'), ('an', 'DT'), ('essential', 'JJ'), ('value', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('AI', 'be'), ('started', 'start'), ('to', 'to'), ('become', 'become'), ('an', 'a'), ('essential', 'essential'), ('value', 'value'), ('.', '.')] 

 Dependency tags are: 
>> [(('AI', 'started'), 'cop'), (('started', 'root'), 'root'), (('to', 'become'), 'mark'), (('become', 'started'), 'xcomp'), (('an', 'value'), 'det'), (('essential', 'value'), 'amod'), (('value', 'become'), 'xcomp'), (('.', 'started'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 6 -------------------

 Companies saw that these systems could move them closer  to their customers, drive efficiency, enhance employee  experience and capability, automatize tasks, decrease  costs and improve revenue. 

Tokens are: 
>> ['Companies', 'saw', 'that', 'these', 'systems', 'could', 'move', 'them', 'closer', 'to', 'their', 'customers', ',', 'drive', 'efficiency', ',', 'enhance', 'employee', 'experience', 'and', 'capability', ',', 'automatize', 'tasks', ',', 'decrease', 'costs', 'and', 'improve', 'revenue', '.'] 

 UPOS tags are: 
>> [('Companies', 'NOUN'), ('saw', 'VERB'), ('that', 'SCONJ'), ('these', 'DET'), ('systems', 'NOUN'), ('could', 'AUX'), ('move', 'VERB'), ('them', 'PRON'), ('closer', 'ADJ'), ('to', 'ADP'), ('their', 'PRON'), ('customers', 'NOUN'), (',', 'PUNCT'), ('drive', 'VERB'), ('efficiency', 'NOUN'), (',', 'PUNCT'), ('enhance', 'VERB'), ('employee', 'NOUN'), ('experience', 'NOUN'), ('and', 'CCONJ'), ('capability', 'NOUN'), (',', 'PUNCT'), ('automatize', 'NOUN'), ('tasks', 'NOUN'), (',', 'PUNCT'), ('decrease', 'NOUN'), ('costs', 'NOUN'), ('and', 'CCONJ'), ('improve', 'VERB'), ('revenue', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Companies', 'NNS'), ('saw', 'VBD'), ('that', 'IN'), ('these', 'DT'), ('systems', 'NNS'), ('could', 'MD'), ('move', 'VB'), ('them', 'PRP'), ('closer', 'JJR'), ('to', 'IN'), ('their', 'PRP$'), ('customers', 'NNS'), (',', ','), ('drive', 'VB'), ('efficiency', 'NN'), (',', ','), ('enhance', 'VB'), ('employee', 'NN'), ('experience', 'NN'), ('and', 'CC'), ('capability', 'NN'), (',', ','), ('automatize', 'NN'), ('tasks', 'NNS'), (',', ','), ('decrease', 'NN'), ('costs', 'NNS'), ('and', 'CC'), ('improve', 'VB'), ('revenue', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Companies', 'company'), ('saw', 'see'), ('that', 'that'), ('these', 'this'), ('systems', 'system'), ('could', 'could'), ('move', 'move'), ('them', 'they'), ('closer', 'close'), ('to', 'to'), ('their', 'they'), ('customers', 'customer'), (',', ','), ('drive', 'drive'), ('efficiency', 'efficiency'), (',', ','), ('enhance', 'enhance'), ('employee', 'employee'), ('experience', 'experience'), ('and', 'and'), ('capability', 'capability'), (',', ','), ('automatize', 'automatize'), ('tasks', 'task'), (',', ','), ('decrease', 'decrease'), ('costs', 'cost'), ('and', 'and'), ('improve', 'improve'), ('revenue', 'revenue'), ('.', '.')] 

 Dependency tags are: 
>> [(('Companies', 'saw'), 'nsubj'), (('saw', 'root'), 'root'), (('that', 'move'), 'mark'), (('these', 'systems'), 'det'), (('systems', 'move'), 'nsubj'), (('could', 'move'), 'aux'), (('move', 'saw'), 'ccomp'), (('them', 'move'), 'obj'), (('closer', 'move'), 'xcomp'), (('to', 'customers'), 'case'), (('their', 'customers'), 'nmod:poss'), (('customers', 'closer'), 'obl'), ((',', 'drive'), 'punct'), (('drive', 'move'), 'conj'), (('efficiency', 'drive'), 'obj'), ((',', 'enhance'), 'punct'), (('enhance', 'move'), 'conj'), (('employee', 'experience'), 'compound'), (('experience', 'enhance'), 'obj'), (('and', 'capability'), 'cc'), (('capability', 'experience'), 'conj'), ((',', 'tasks'), 'punct'), (('automatize', 'tasks'), 'compound'), (('tasks', 'customers'), 'conj'), ((',', 'costs'), 'punct'), (('decrease', 'costs'), 'compound'), (('costs', 'customers'), 'conj'), (('and', 'improve'), 'cc'), (('improve', 'move'), 'conj'), (('revenue', 'improve'), 'obj'), (('.', 'saw'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 54 =================================

But AI went through some lulls and spikes before it became  capable of enabling so many benefits. At a certain point the  general public gave up on AI and machine learning as a whole,  which stalled developments and investments. For instance,  when Defense Advanced Research Projects Agency (DARPA)  worked together with Carnegie Mellon to implement speech  recognition for their pilots, they cut the project in 1974 after  having spent millions of dollars on it. From the 1960s to 1974,  the main funding for AI came from governments. But after  1974 there was barely any government funding because 


------------------- Sentence 1 -------------------

 But AI went through some lulls and spikes before it became  capable of enabling so many benefits. 

Tokens are: 
>> ['But', 'AI', 'went', 'through', 'some', 'lulls', 'and', 'spikes', 'before', 'it', 'became', 'capable', 'of', 'enabling', 'so', 'many', 'benefits', '.'] 

 UPOS tags are: 
>> [('But', 'CCONJ'), ('AI', 'PRON'), ('went', 'VERB'), ('through', 'ADP'), ('some', 'DET'), ('lulls', 'NOUN'), ('and', 'CCONJ'), ('spikes', 'NOUN'), ('before', 'SCONJ'), ('it', 'PRON'), ('became', 'VERB'), ('capable', 'ADJ'), ('of', 'SCONJ'), ('enabling', 'VERB'), ('so', 'ADV'), ('many', 'ADJ'), ('benefits', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('But', 'CC'), ('AI', 'PRP'), ('went', 'VBD'), ('through', 'IN'), ('some', 'DT'), ('lulls', 'NNS'), ('and', 'CC'), ('spikes', 'NNS'), ('before', 'IN'), ('it', 'PRP'), ('became', 'VBD'), ('capable', 'JJ'), ('of', 'IN'), ('enabling', 'VBG'), ('so', 'RB'), ('many', 'JJ'), ('benefits', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('But', 'but'), ('AI', 'ai'), ('went', 'go'), ('through', 'through'), ('some', 'some'), ('lulls', 'lull'), ('and', 'and'), ('spikes', 'spike'), ('before', 'before'), ('it', 'it'), ('became', 'become'), ('capable', 'capable'), ('of', 'of'), ('enabling', 'enable'), ('so', 'so'), ('many', 'many'), ('benefits', 'benefit'), ('.', '.')] 

 Dependency tags are: 
>> [(('But', 'went'), 'cc'), (('AI', 'went'), 'nsubj'), (('went', 'root'), 'root'), (('through', 'lulls'), 'case'), (('some', 'lulls'), 'det'), (('lulls', 'went'), 'obl'), (('and', 'spikes'), 'cc'), (('spikes', 'lulls'), 'conj'), (('before', 'became'), 'mark'), (('it', 'became'), 'nsubj'), (('became', 'went'), 'advcl'), (('capable', 'became'), 'xcomp'), (('of', 'enabling'), 'mark'), (('enabling', 'capable'), 'advcl'), (('so', 'many'), 'advmod'), (('many', 'benefits'), 'amod'), (('benefits', 'enabling'), 'obj'), (('.', 'went'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 2 -------------------

 At a certain point the  general public gave up on AI and machine learning as a whole,  which stalled developments and investments. 

Tokens are: 
>> ['At', 'a', 'certain', 'point', 'the', 'general', 'public', 'gave', 'up', 'on', 'AI', 'and', 'machine', 'learning', 'as', 'a', 'whole', ',', 'which', 'stalled', 'developments', 'and', 'investments', '.'] 

 UPOS tags are: 
>> [('At', 'ADP'), ('a', 'DET'), ('certain', 'ADJ'), ('point', 'NOUN'), ('the', 'DET'), ('general', 'ADJ'), ('public', 'NOUN'), ('gave', 'VERB'), ('up', 'ADP'), ('on', 'ADP'), ('AI', 'NOUN'), ('and', 'CCONJ'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('as', 'ADP'), ('a', 'DET'), ('whole', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('stalled', 'VERB'), ('developments', 'NOUN'), ('and', 'CCONJ'), ('investments', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('At', 'IN'), ('a', 'DT'), ('certain', 'JJ'), ('point', 'NN'), ('the', 'DT'), ('general', 'JJ'), ('public', 'NN'), ('gave', 'VBD'), ('up', 'RP'), ('on', 'IN'), ('AI', 'NN'), ('and', 'CC'), ('machine', 'NN'), ('learning', 'NN'), ('as', 'IN'), ('a', 'DT'), ('whole', 'NN'), (',', ','), ('which', 'WDT'), ('stalled', 'VBD'), ('developments', 'NNS'), ('and', 'CC'), ('investments', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('At', 'at'), ('a', 'a'), ('certain', 'certain'), ('point', 'point'), ('the', 'the'), ('general', 'general'), ('public', 'public'), ('gave', 'give'), ('up', 'up'), ('on', 'on'), ('AI', 'ai'), ('and', 'and'), ('machine', 'machine'), ('learning', 'learning'), ('as', 'as'), ('a', 'a'), ('whole', 'whole'), (',', ','), ('which', 'which'), ('stalled', 'stall'), ('developments', 'development'), ('and', 'and'), ('investments', 'investment'), ('.', '.')] 

 Dependency tags are: 
>> [(('At', 'point'), 'case'), (('a', 'point'), 'det'), (('certain', 'point'), 'amod'), (('point', 'gave'), 'obl'), (('the', 'public'), 'det'), (('general', 'public'), 'amod'), (('public', 'gave'), 'nsubj'), (('gave', 'root'), 'root'), (('up', 'gave'), 'compound:prt'), (('on', 'AI'), 'case'), (('AI', 'gave'), 'obl'), (('and', 'learning'), 'cc'), (('machine', 'learning'), 'compound'), (('learning', 'AI'), 'conj'), (('as', 'whole'), 'case'), (('a', 'whole'), 'det'), (('whole', 'gave'), 'obl'), ((',', 'stalled'), 'punct'), (('which', 'stalled'), 'nsubj'), (('stalled', 'whole'), 'acl:relcl'), (('developments', 'stalled'), 'obj'), (('and', 'investments'), 'cc'), (('investments', 'developments'), 'conj'), (('.', 'gave'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 3 -------------------

 For instance,  when Defense Advanced Research Projects Agency (DARPA)  worked together with Carnegie Mellon to implement speech  recognition for their pilots, they cut the project in 1974 after  having spent millions of dollars on it. 

Tokens are: 
>> ['For', 'instance', ',', 'when', 'Defense', 'Advanced', 'Research', 'Projects', 'Agency', '(', 'DARPA', ')', 'worked', 'together', 'with', 'Carnegie', 'Mellon', 'to', 'implement', 'speech', 'recognition', 'for', 'their', 'pilots', ',', 'they', 'cut', 'the', 'project', 'in', '1974', 'after', 'having', 'spent', 'millions', 'of', 'dollars', 'on', 'it', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('instance', 'NOUN'), (',', 'PUNCT'), ('when', 'SCONJ'), ('Defense', 'PROPN'), ('Advanced', 'ADJ'), ('Research', 'PROPN'), ('Projects', 'PROPN'), ('Agency', 'PROPN'), ('(', 'PUNCT'), ('DARPA', 'PROPN'), (')', 'PUNCT'), ('worked', 'VERB'), ('together', 'ADV'), ('with', 'ADP'), ('Carnegie', 'PROPN'), ('Mellon', 'PROPN'), ('to', 'PART'), ('implement', 'VERB'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('for', 'ADP'), ('their', 'PRON'), ('pilots', 'NOUN'), (',', 'PUNCT'), ('they', 'PRON'), ('cut', 'VERB'), ('the', 'DET'), ('project', 'NOUN'), ('in', 'ADP'), ('1974', 'NUM'), ('after', 'SCONJ'), ('having', 'AUX'), ('spent', 'VERB'), ('millions', 'NOUN'), ('of', 'ADP'), ('dollars', 'NOUN'), ('on', 'ADP'), ('it', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('instance', 'NN'), (',', ','), ('when', 'WRB'), ('Defense', 'NNP'), ('Advanced', 'NNP'), ('Research', 'NNP'), ('Projects', 'NNPS'), ('Agency', 'NNP'), ('(', '-LRB-'), ('DARPA', 'NNP'), (')', '-RRB-'), ('worked', 'VBD'), ('together', 'RB'), ('with', 'IN'), ('Carnegie', 'NNP'), ('Mellon', 'NNP'), ('to', 'TO'), ('implement', 'VB'), ('speech', 'NN'), ('recognition', 'NN'), ('for', 'IN'), ('their', 'PRP$'), ('pilots', 'NNS'), (',', ','), ('they', 'PRP'), ('cut', 'VBD'), ('the', 'DT'), ('project', 'NN'), ('in', 'IN'), ('1974', 'CD'), ('after', 'IN'), ('having', 'VBG'), ('spent', 'VBN'), ('millions', 'NNS'), ('of', 'IN'), ('dollars', 'NNS'), ('on', 'IN'), ('it', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('instance', 'instance'), (',', ','), ('when', 'when'), ('Defense', 'Defense'), ('Advanced', 'Advanced'), ('Research', 'Research'), ('Projects', 'Project'), ('Agency', 'Agency'), ('(', '('), ('DARPA', 'DARPA'), (')', ')'), ('worked', 'work'), ('together', 'together'), ('with', 'with'), ('Carnegie', 'Carnegie'), ('Mellon', 'Mellon'), ('to', 'to'), ('implement', 'implement'), ('speech', 'speech'), ('recognition', 'recognition'), ('for', 'for'), ('their', 'they'), ('pilots', 'pilot'), (',', ','), ('they', 'they'), ('cut', 'cut'), ('the', 'the'), ('project', 'project'), ('in', 'in'), ('1974', '1974'), ('after', 'after'), ('having', 'have'), ('spent', 'spend'), ('millions', 'million'), ('of', 'of'), ('dollars', 'dollar'), ('on', 'on'), ('it', 'it'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'instance'), 'case'), (('instance', 'cut'), 'obl'), ((',', 'cut'), 'punct'), (('when', 'worked'), 'mark'), (('Defense', 'Agency'), 'compound'), (('Advanced', 'Research'), 'amod'), (('Research', 'Projects'), 'compound'), (('Projects', 'Agency'), 'compound'), (('Agency', 'worked'), 'nsubj'), (('(', 'DARPA'), 'punct'), (('DARPA', 'Agency'), 'appos'), ((')', 'DARPA'), 'punct'), (('worked', 'cut'), 'advcl'), (('together', 'worked'), 'advmod'), (('with', 'Mellon'), 'case'), (('Carnegie', 'Mellon'), 'compound'), (('Mellon', 'worked'), 'obl'), (('to', 'implement'), 'mark'), (('implement', 'worked'), 'advcl'), (('speech', 'recognition'), 'compound'), (('recognition', 'implement'), 'obj'), (('for', 'pilots'), 'case'), (('their', 'pilots'), 'nmod:poss'), (('pilots', 'recognition'), 'nmod'), ((',', 'cut'), 'punct'), (('they', 'cut'), 'nsubj'), (('cut', 'root'), 'root'), (('the', 'project'), 'det'), (('project', 'cut'), 'obj'), (('in', '1974'), 'case'), (('1974', 'cut'), 'obl'), (('after', 'spent'), 'mark'), (('having', 'spent'), 'aux'), (('spent', 'cut'), 'advcl'), (('millions', 'spent'), 'obj'), (('of', 'dollars'), 'case'), (('dollars', 'millions'), 'nmod'), (('on', 'it'), 'case'), (('it', 'spent'), 'obl'), (('.', 'cut'), 'punct')]

 Named Entites are: 
>> [('Defense Advanced Research Projects Agency', 'ORG'), ('DARPA', 'ORG'), ('Carnegie Mellon', 'ORG'), ('1974', 'DATE'), ('millions of dollars', 'MONEY')]

------------------- Sentence 4 -------------------

 From the 1960s to 1974,  the main funding for AI came from governments. 

Tokens are: 
>> ['From', 'the', '1960s', 'to', '1974', ',', 'the', 'main', 'funding', 'for', 'AI', 'came', 'from', 'governments', '.'] 

 UPOS tags are: 
>> [('From', 'ADP'), ('the', 'DET'), ('1960s', 'NOUN'), ('to', 'ADP'), ('1974', 'NUM'), (',', 'PUNCT'), ('the', 'DET'), ('main', 'ADJ'), ('funding', 'NOUN'), ('for', 'ADP'), ('AI', 'PROPN'), ('came', 'VERB'), ('from', 'ADP'), ('governments', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('From', 'IN'), ('the', 'DT'), ('1960s', 'NNS'), ('to', 'IN'), ('1974', 'CD'), (',', ','), ('the', 'DT'), ('main', 'JJ'), ('funding', 'NN'), ('for', 'IN'), ('AI', 'NNP'), ('came', 'VBD'), ('from', 'IN'), ('governments', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('From', 'from'), ('the', 'the'), ('1960s', '1960'), ('to', 'to'), ('1974', '1974'), (',', ','), ('the', 'the'), ('main', 'main'), ('funding', 'funding'), ('for', 'for'), ('AI', 'AI'), ('came', 'come'), ('from', 'from'), ('governments', 'government'), ('.', '.')] 

 Dependency tags are: 
>> [(('From', '1960s'), 'case'), (('the', '1960s'), 'det'), (('1960s', 'came'), 'obl'), (('to', '1974'), 'case'), (('1974', '1960s'), 'nmod'), ((',', 'came'), 'punct'), (('the', 'funding'), 'det'), (('main', 'funding'), 'amod'), (('funding', 'came'), 'nsubj'), (('for', 'AI'), 'case'), (('AI', 'funding'), 'nmod'), (('came', 'root'), 'root'), (('from', 'governments'), 'case'), (('governments', 'came'), 'obl'), (('.', 'came'), 'punct')]

 Named Entites are: 
>> [('the 1960s to 1974', 'DATE'), ('AI', 'ORG')]

------------------- Sentence 5 -------------------

 But after  1974 there was barely any government funding because 

Tokens are: 
>> ['But', 'after', '1974', 'there', 'was', 'barely', 'any', 'government', 'funding', 'because'] 

 UPOS tags are: 
>> [('But', 'CCONJ'), ('after', 'ADP'), ('1974', 'NUM'), ('there', 'PRON'), ('was', 'VERB'), ('barely', 'ADV'), ('any', 'DET'), ('government', 'NOUN'), ('funding', 'NOUN'), ('because', 'ADP')] 

 XPOS tags are: 
>> [('But', 'CC'), ('after', 'IN'), ('1974', 'CD'), ('there', 'EX'), ('was', 'VBD'), ('barely', 'RB'), ('any', 'DT'), ('government', 'NN'), ('funding', 'NN'), ('because', 'IN')] 

 Lemmas are: 
>> [('But', 'but'), ('after', 'after'), ('1974', '1974'), ('there', 'there'), ('was', 'be'), ('barely', 'barely'), ('any', 'any'), ('government', 'government'), ('funding', 'funding'), ('because', 'because')] 

 Dependency tags are: 
>> [(('But', 'was'), 'cc'), (('after', '1974'), 'case'), (('1974', 'was'), 'obl'), (('there', 'was'), 'expl'), (('was', 'root'), 'root'), (('barely', 'was'), 'advmod'), (('any', 'funding'), 'det'), (('government', 'funding'), 'compound'), (('funding', 'was'), 'nsubj'), (('because', 'was'), 'advmod')]

 Named Entites are: 
>> [('1974', 'DATE')]

================================ Paragraph 55 =================================

6     Beyond the hype: A guide to understanding and successfully implementing artificial intelligence within your business 


------------------- Sentence 1 -------------------

 6     Beyond the hype: A guide to understanding and successfully implementing artificial intelligence within your business 

Tokens are: 
>> ['6', 'Beyond', 'the', 'hype', ':', 'A', 'guide', 'to', 'understanding', 'and', 'successfully', 'implementing', 'artificial', 'intelligence', 'within', 'your', 'business'] 

 UPOS tags are: 
>> [('6', 'NUM'), ('Beyond', 'ADP'), ('the', 'DET'), ('hype', 'NOUN'), (':', 'PUNCT'), ('A', 'DET'), ('guide', 'NOUN'), ('to', 'ADP'), ('understanding', 'VERB'), ('and', 'CCONJ'), ('successfully', 'ADV'), ('implementing', 'VERB'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('within', 'ADP'), ('your', 'PRON'), ('business', 'NOUN')] 

 XPOS tags are: 
>> [('6', 'LS'), ('Beyond', 'IN'), ('the', 'DT'), ('hype', 'NN'), (':', ':'), ('A', 'DT'), ('guide', 'NN'), ('to', 'IN'), ('understanding', 'VBG'), ('and', 'CC'), ('successfully', 'RB'), ('implementing', 'VBG'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('within', 'IN'), ('your', 'PRP$'), ('business', 'NN')] 

 Lemmas are: 
>> [('6', '6'), ('Beyond', 'beyond'), ('the', 'the'), ('hype', 'hype'), (':', ':'), ('A', 'a'), ('guide', 'guide'), ('to', 'to'), ('understanding', 'understand'), ('and', 'and'), ('successfully', 'successfully'), ('implementing', 'implement'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('within', 'within'), ('your', 'you'), ('business', 'business')] 

 Dependency tags are: 
>> [(('6', 'hype'), 'nummod'), (('Beyond', 'hype'), 'case'), (('the', 'hype'), 'det'), (('hype', 'root'), 'root'), ((':', 'guide'), 'punct'), (('A', 'guide'), 'det'), (('guide', 'hype'), 'appos'), (('to', 'understanding'), 'mark'), (('understanding', 'guide'), 'acl'), (('and', 'implementing'), 'cc'), (('successfully', 'implementing'), 'advmod'), (('implementing', 'understanding'), 'conj'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'implementing'), 'obj'), (('within', 'business'), 'case'), (('your', 'business'), 'nmod:poss'), (('business', 'implementing'), 'obl')]

 Named Entites are: 
>> []

================================ Paragraph 56 =================================

of multiple failed AI projects, so the belief in the feasibility of  AI declined. But after this period, improvements in efficiency  lead to successful business cases, once again proving  value. Today we now see AI as one of the big value drivers  for companies, and to compete most companies must adopt  AI strategies. Three topics have made AI available for many  companies right now:   


------------------- Sentence 1 -------------------

 of multiple failed AI projects, so the belief in the feasibility of  AI declined. 

Tokens are: 
>> ['of', 'multiple', 'failed', 'AI', 'projects', ',', 'so', 'the', 'belief', 'in', 'the', 'feasibility', 'of', 'AI', 'declined', '.'] 

 UPOS tags are: 
>> [('of', 'ADP'), ('multiple', 'ADJ'), ('failed', 'VERB'), ('AI', 'PART'), ('projects', 'NOUN'), (',', 'PUNCT'), ('so', 'ADV'), ('the', 'DET'), ('belief', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('feasibility', 'NOUN'), ('of', 'ADP'), ('AI', 'AUX'), ('declined', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('of', 'IN'), ('multiple', 'JJ'), ('failed', 'VBD'), ('AI', 'POS'), ('projects', 'NNS'), (',', ','), ('so', 'RB'), ('the', 'DT'), ('belief', 'NN'), ('in', 'IN'), ('the', 'DT'), ('feasibility', 'NN'), ('of', 'IN'), ('AI', 'VBG'), ('declined', 'VBD'), ('.', '.')] 

 Lemmas are: 
>> [('of', 'of'), ('multiple', 'multiple'), ('failed', 'fail'), ('AI', 'ai'), ('projects', 'project'), (',', ','), ('so', 'so'), ('the', 'the'), ('belief', 'belief'), ('in', 'in'), ('the', 'the'), ('feasibility', 'feasibility'), ('of', 'of'), ('AI', 'be'), ('declined', 'decline'), ('.', '.')] 

 Dependency tags are: 
>> [(('of', 'failed'), 'advmod'), (('multiple', 'failed'), 'obl'), (('failed', 'root'), 'root'), (('AI', 'projects'), 'amod'), (('projects', 'failed'), 'obj'), ((',', 'declined'), 'punct'), (('so', 'declined'), 'advmod'), (('the', 'belief'), 'det'), (('belief', 'declined'), 'nsubj'), (('in', 'feasibility'), 'case'), (('the', 'feasibility'), 'det'), (('feasibility', 'belief'), 'nmod'), (('of', 'feasibility'), 'nmod'), (('AI', 'declined'), 'aux'), (('declined', 'failed'), 'advcl'), (('.', 'failed'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG'), ('AI', 'ORG')]

------------------- Sentence 2 -------------------

 But after this period, improvements in efficiency  lead to successful business cases, once again proving  value. 

Tokens are: 
>> ['But', 'after', 'this', 'period', ',', 'improvements', 'in', 'efficiency', 'lead', 'to', 'successful', 'business', 'cases', ',', 'once', 'again', 'proving', 'value', '.'] 

 UPOS tags are: 
>> [('But', 'CCONJ'), ('after', 'ADP'), ('this', 'DET'), ('period', 'NOUN'), (',', 'PUNCT'), ('improvements', 'NOUN'), ('in', 'ADP'), ('efficiency', 'NOUN'), ('lead', 'VERB'), ('to', 'ADP'), ('successful', 'ADJ'), ('business', 'NOUN'), ('cases', 'NOUN'), (',', 'PUNCT'), ('once', 'ADV'), ('again', 'ADV'), ('proving', 'VERB'), ('value', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('But', 'CC'), ('after', 'IN'), ('this', 'DT'), ('period', 'NN'), (',', ','), ('improvements', 'NNS'), ('in', 'IN'), ('efficiency', 'NN'), ('lead', 'VBP'), ('to', 'IN'), ('successful', 'JJ'), ('business', 'NN'), ('cases', 'NNS'), (',', ','), ('once', 'RB'), ('again', 'RB'), ('proving', 'VBG'), ('value', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('But', 'but'), ('after', 'after'), ('this', 'this'), ('period', 'period'), (',', ','), ('improvements', 'improvement'), ('in', 'in'), ('efficiency', 'efficiency'), ('lead', 'lead'), ('to', 'to'), ('successful', 'successful'), ('business', 'business'), ('cases', 'case'), (',', ','), ('once', 'once'), ('again', 'again'), ('proving', 'prove'), ('value', 'value'), ('.', '.')] 

 Dependency tags are: 
>> [(('But', 'lead'), 'cc'), (('after', 'period'), 'case'), (('this', 'period'), 'det'), (('period', 'lead'), 'obl'), ((',', 'lead'), 'punct'), (('improvements', 'lead'), 'nsubj'), (('in', 'efficiency'), 'case'), (('efficiency', 'improvements'), 'nmod'), (('lead', 'root'), 'root'), (('to', 'cases'), 'case'), (('successful', 'cases'), 'amod'), (('business', 'cases'), 'compound'), (('cases', 'lead'), 'obl'), ((',', 'lead'), 'punct'), (('once', 'proving'), 'advmod'), (('again', 'proving'), 'advmod'), (('proving', 'lead'), 'advcl'), (('value', 'proving'), 'obj'), (('.', 'lead'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Today we now see AI as one of the big value drivers  for companies, and to compete most companies must adopt  AI strategies. 

Tokens are: 
>> ['Today', 'we', 'now', 'see', 'AI', 'as', 'one', 'of', 'the', 'big', 'value', 'drivers', 'for', 'companies', ',', 'and', 'to', 'compete', 'most', 'companies', 'must', 'adopt', 'AI', 'strategies', '.'] 

 UPOS tags are: 
>> [('Today', 'NOUN'), ('we', 'PRON'), ('now', 'ADV'), ('see', 'VERB'), ('AI', 'AUX'), ('as', 'ADP'), ('one', 'NUM'), ('of', 'ADP'), ('the', 'DET'), ('big', 'ADJ'), ('value', 'NOUN'), ('drivers', 'NOUN'), ('for', 'ADP'), ('companies', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('to', 'PART'), ('compete', 'VERB'), ('most', 'ADJ'), ('companies', 'NOUN'), ('must', 'AUX'), ('adopt', 'VERB'), ('AI', 'ADP'), ('strategies', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Today', 'NN'), ('we', 'PRP'), ('now', 'RB'), ('see', 'VBP'), ('AI', 'VBZ'), ('as', 'IN'), ('one', 'CD'), ('of', 'IN'), ('the', 'DT'), ('big', 'JJ'), ('value', 'NN'), ('drivers', 'NNS'), ('for', 'IN'), ('companies', 'NNS'), (',', ','), ('and', 'CC'), ('to', 'TO'), ('compete', 'VB'), ('most', 'JJS'), ('companies', 'NNS'), ('must', 'MD'), ('adopt', 'VB'), ('AI', 'IN'), ('strategies', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Today', 'today'), ('we', 'we'), ('now', 'now'), ('see', 'see'), ('AI', 'be'), ('as', 'as'), ('one', 'one'), ('of', 'of'), ('the', 'the'), ('big', 'big'), ('value', 'value'), ('drivers', 'driver'), ('for', 'for'), ('companies', 'company'), (',', ','), ('and', 'and'), ('to', 'to'), ('compete', 'compete'), ('most', 'most'), ('companies', 'company'), ('must', 'must'), ('adopt', 'adopt'), ('AI', 'ai'), ('strategies', 'strategy'), ('.', '.')] 

 Dependency tags are: 
>> [(('Today', 'see'), 'obl:tmod'), (('we', 'see'), 'nsubj'), (('now', 'see'), 'advmod'), (('see', 'root'), 'root'), (('AI', 'one'), 'cop'), (('as', 'one'), 'case'), (('one', 'see'), 'obl'), (('of', 'drivers'), 'case'), (('the', 'drivers'), 'det'), (('big', 'drivers'), 'amod'), (('value', 'drivers'), 'compound'), (('drivers', 'one'), 'nmod'), (('for', 'companies'), 'case'), (('companies', 'drivers'), 'nmod'), ((',', 'adopt'), 'punct'), (('and', 'adopt'), 'cc'), (('to', 'compete'), 'mark'), (('compete', 'adopt'), 'csubj'), (('most', 'companies'), 'amod'), (('companies', 'compete'), 'obj'), (('must', 'adopt'), 'aux'), (('adopt', 'see'), 'conj'), (('AI', 'strategies'), 'case'), (('strategies', 'adopt'), 'obj'), (('.', 'see'), 'punct')]

 Named Entites are: 
>> [('Today', 'DATE'), ('AI', 'ORG'), ('one', 'CARDINAL')]

------------------- Sentence 4 -------------------

 Three topics have made AI available for many  companies right now: 

Tokens are: 
>> ['Three', 'topics', 'have', 'made', 'AI', 'available', 'for', 'many', 'companies', 'right', 'now', ':'] 

 UPOS tags are: 
>> [('Three', 'NUM'), ('topics', 'NOUN'), ('have', 'AUX'), ('made', 'VERB'), ('AI', 'AUX'), ('available', 'ADJ'), ('for', 'ADP'), ('many', 'ADJ'), ('companies', 'NOUN'), ('right', 'ADV'), ('now', 'ADV'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Three', 'CD'), ('topics', 'NNS'), ('have', 'VBP'), ('made', 'VBN'), ('AI', 'VBZ'), ('available', 'JJ'), ('for', 'IN'), ('many', 'JJ'), ('companies', 'NNS'), ('right', 'RB'), ('now', 'RB'), (':', ':')] 

 Lemmas are: 
>> [('Three', 'three'), ('topics', 'topic'), ('have', 'have'), ('made', 'make'), ('AI', 'be'), ('available', 'available'), ('for', 'for'), ('many', 'many'), ('companies', 'company'), ('right', 'right'), ('now', 'now'), (':', ':')] 

 Dependency tags are: 
>> [(('Three', 'topics'), 'nummod'), (('topics', 'available'), 'nsubj'), (('have', 'made'), 'aux'), (('made', 'available'), 'csubj'), (('AI', 'available'), 'cop'), (('available', 'root'), 'root'), (('for', 'companies'), 'case'), (('many', 'companies'), 'amod'), (('companies', 'available'), 'obl'), (('right', 'now'), 'advmod'), (('now', 'available'), 'advmod'), ((':', 'available'), 'punct')]

 Named Entites are: 
>> [('Three', 'CARDINAL'), ('AI', 'ORG')]

================================ Paragraph 57 =================================

 — The evolution of data: A factor contributing to the  massive adoption of AI is the exponential growth of  available data. With the introduction of the Internet,  social media, proliferation of sensors and smart devices,  and the fact that data storage became cheaper, it became  more accessible than ever before.  


------------------- Sentence 1 -------------------

 — 

Tokens are: 
>> ['—'] 

 UPOS tags are: 
>> [('—', 'PUNCT')] 

 XPOS tags are: 
>> [('—', ':')] 

 Lemmas are: 
>> [('—', '—')] 

 Dependency tags are: 
>> [(('—', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 The evolution of data: A factor contributing to the  massive adoption of AI is the exponential growth of  available data. 

Tokens are: 
>> ['The', 'evolution', 'of', 'data', ':', 'A', 'factor', 'contributing', 'to', 'the', 'massive', 'adoption', 'of', 'AI', 'is', 'the', 'exponential', 'growth', 'of', 'available', 'data', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('evolution', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), (':', 'PUNCT'), ('A', 'DET'), ('factor', 'NOUN'), ('contributing', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('massive', 'ADJ'), ('adoption', 'NOUN'), ('of', 'ADP'), ('AI', 'NOUN'), ('is', 'AUX'), ('the', 'DET'), ('exponential', 'ADJ'), ('growth', 'NOUN'), ('of', 'ADP'), ('available', 'ADJ'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('evolution', 'NN'), ('of', 'IN'), ('data', 'NN'), (':', ':'), ('A', 'DT'), ('factor', 'NN'), ('contributing', 'VBG'), ('to', 'IN'), ('the', 'DT'), ('massive', 'JJ'), ('adoption', 'NN'), ('of', 'IN'), ('AI', 'NN'), ('is', 'VBZ'), ('the', 'DT'), ('exponential', 'JJ'), ('growth', 'NN'), ('of', 'IN'), ('available', 'JJ'), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('evolution', 'evolution'), ('of', 'of'), ('data', 'datum'), (':', ':'), ('A', 'a'), ('factor', 'factor'), ('contributing', 'contribute'), ('to', 'to'), ('the', 'the'), ('massive', 'massive'), ('adoption', 'adoption'), ('of', 'of'), ('AI', 'ai'), ('is', 'be'), ('the', 'the'), ('exponential', 'exponential'), ('growth', 'growth'), ('of', 'of'), ('available', 'available'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'evolution'), 'det'), (('evolution', 'growth'), 'nsubj'), (('of', 'data'), 'case'), (('data', 'evolution'), 'nmod'), ((':', 'evolution'), 'punct'), (('A', 'factor'), 'det'), (('factor', 'growth'), 'nsubj'), (('contributing', 'factor'), 'acl'), (('to', 'adoption'), 'case'), (('the', 'adoption'), 'det'), (('massive', 'adoption'), 'amod'), (('adoption', 'contributing'), 'obl'), (('of', 'AI'), 'case'), (('AI', 'adoption'), 'nmod'), (('is', 'growth'), 'cop'), (('the', 'growth'), 'det'), (('exponential', 'growth'), 'amod'), (('growth', 'root'), 'root'), (('of', 'data'), 'case'), (('available', 'data'), 'amod'), (('data', 'growth'), 'nmod'), (('.', 'growth'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 With the introduction of the Internet,  social media, proliferation of sensors and smart devices,  and the fact that data storage became cheaper, it became  more accessible than ever before. 

Tokens are: 
>> ['With', 'the', 'introduction', 'of', 'the', 'Internet', ',', 'social', 'media', ',', 'proliferation', 'of', 'sensors', 'and', 'smart', 'devices', ',', 'and', 'the', 'fact', 'that', 'data', 'storage', 'became', 'cheaper', ',', 'it', 'became', 'more', 'accessible', 'than', 'ever', 'before', '.'] 

 UPOS tags are: 
>> [('With', 'ADP'), ('the', 'DET'), ('introduction', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('Internet', 'PROPN'), (',', 'PUNCT'), ('social', 'ADJ'), ('media', 'NOUN'), (',', 'PUNCT'), ('proliferation', 'NOUN'), ('of', 'ADP'), ('sensors', 'NOUN'), ('and', 'CCONJ'), ('smart', 'ADJ'), ('devices', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('the', 'DET'), ('fact', 'NOUN'), ('that', 'SCONJ'), ('data', 'NOUN'), ('storage', 'NOUN'), ('became', 'VERB'), ('cheaper', 'ADJ'), (',', 'PUNCT'), ('it', 'PRON'), ('became', 'VERB'), ('more', 'ADV'), ('accessible', 'ADJ'), ('than', 'ADP'), ('ever', 'ADV'), ('before', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('With', 'IN'), ('the', 'DT'), ('introduction', 'NN'), ('of', 'IN'), ('the', 'DT'), ('Internet', 'NNP'), (',', ','), ('social', 'JJ'), ('media', 'NN'), (',', ','), ('proliferation', 'NN'), ('of', 'IN'), ('sensors', 'NNS'), ('and', 'CC'), ('smart', 'JJ'), ('devices', 'NNS'), (',', ','), ('and', 'CC'), ('the', 'DT'), ('fact', 'NN'), ('that', 'IN'), ('data', 'NNS'), ('storage', 'NN'), ('became', 'VBD'), ('cheaper', 'JJR'), (',', ','), ('it', 'PRP'), ('became', 'VBD'), ('more', 'RBR'), ('accessible', 'JJ'), ('than', 'IN'), ('ever', 'RB'), ('before', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('With', 'with'), ('the', 'the'), ('introduction', 'introduction'), ('of', 'of'), ('the', 'the'), ('Internet', 'Internet'), (',', ','), ('social', 'social'), ('media', 'media'), (',', ','), ('proliferation', 'proliferation'), ('of', 'of'), ('sensors', 'sensor'), ('and', 'and'), ('smart', 'smart'), ('devices', 'device'), (',', ','), ('and', 'and'), ('the', 'the'), ('fact', 'fact'), ('that', 'that'), ('data', 'datum'), ('storage', 'storage'), ('became', 'become'), ('cheaper', 'cheap'), (',', ','), ('it', 'it'), ('became', 'become'), ('more', 'more'), ('accessible', 'accessible'), ('than', 'than'), ('ever', 'ever'), ('before', 'before'), ('.', '.')] 

 Dependency tags are: 
>> [(('With', 'introduction'), 'case'), (('the', 'introduction'), 'det'), (('introduction', 'became'), 'obl'), (('of', 'Internet'), 'case'), (('the', 'Internet'), 'det'), (('Internet', 'introduction'), 'nmod'), ((',', 'media'), 'punct'), (('social', 'media'), 'amod'), (('media', 'Internet'), 'conj'), ((',', 'proliferation'), 'punct'), (('proliferation', 'Internet'), 'conj'), (('of', 'sensors'), 'case'), (('sensors', 'proliferation'), 'nmod'), (('and', 'devices'), 'cc'), (('smart', 'devices'), 'amod'), (('devices', 'sensors'), 'conj'), ((',', 'fact'), 'punct'), (('and', 'fact'), 'cc'), (('the', 'fact'), 'det'), (('fact', 'became'), 'nsubj'), (('that', 'became'), 'mark'), (('data', 'storage'), 'compound'), (('storage', 'became'), 'nsubj'), (('became', 'fact'), 'acl'), (('cheaper', 'became'), 'xcomp'), ((',', 'became'), 'punct'), (('it', 'became'), 'expl'), (('became', 'root'), 'root'), (('more', 'accessible'), 'advmod'), (('accessible', 'became'), 'xcomp'), (('than', 'before'), 'case'), (('ever', 'before'), 'advmod'), (('before', 'accessible'), 'obl'), (('.', 'became'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 58 =================================

 — The evolution of algorithms: Algorithms have been  around since we could write. Recently, the development  of more advanced algorithms has helped AI become  more powerful and efficient. 


------------------- Sentence 1 -------------------

 — 

Tokens are: 
>> ['—'] 

 UPOS tags are: 
>> [('—', 'PUNCT')] 

 XPOS tags are: 
>> [('—', ':')] 

 Lemmas are: 
>> [('—', '—')] 

 Dependency tags are: 
>> [(('—', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 The evolution of algorithms: Algorithms have been  around since we could write. 

Tokens are: 
>> ['The', 'evolution', 'of', 'algorithms', ':', 'Algorithms', 'have', 'been', 'around', 'since', 'we', 'could', 'write', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('evolution', 'NOUN'), ('of', 'ADP'), ('algorithms', 'NOUN'), (':', 'PUNCT'), ('Algorithms', 'NOUN'), ('have', 'AUX'), ('been', 'AUX'), ('around', 'ADV'), ('since', 'SCONJ'), ('we', 'PRON'), ('could', 'AUX'), ('write', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('evolution', 'NN'), ('of', 'IN'), ('algorithms', 'NNS'), (':', ':'), ('Algorithms', 'NNS'), ('have', 'VBP'), ('been', 'VBN'), ('around', 'RB'), ('since', 'IN'), ('we', 'PRP'), ('could', 'MD'), ('write', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('evolution', 'evolution'), ('of', 'of'), ('algorithms', 'algorithm'), (':', ':'), ('Algorithms', 'algorithm'), ('have', 'have'), ('been', 'be'), ('around', 'around'), ('since', 'since'), ('we', 'we'), ('could', 'could'), ('write', 'write'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'evolution'), 'det'), (('evolution', 'root'), 'root'), (('of', 'algorithms'), 'case'), (('algorithms', 'evolution'), 'nmod'), ((':', 'evolution'), 'punct'), (('Algorithms', 'around'), 'nsubj'), (('have', 'around'), 'aux'), (('been', 'around'), 'cop'), (('around', 'evolution'), 'parataxis'), (('since', 'write'), 'mark'), (('we', 'write'), 'nsubj'), (('could', 'write'), 'aux'), (('write', 'around'), 'advcl'), (('.', 'evolution'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Recently, the development  of more advanced algorithms has helped AI become  more powerful and efficient. 

Tokens are: 
>> ['Recently', ',', 'the', 'development', 'of', 'more', 'advanced', 'algorithms', 'has', 'helped', 'AI', 'become', 'more', 'powerful', 'and', 'efficient', '.'] 

 UPOS tags are: 
>> [('Recently', 'ADV'), (',', 'PUNCT'), ('the', 'DET'), ('development', 'NOUN'), ('of', 'ADP'), ('more', 'ADV'), ('advanced', 'ADJ'), ('algorithms', 'NOUN'), ('has', 'AUX'), ('helped', 'VERB'), ('AI', 'AUX'), ('become', 'VERB'), ('more', 'ADV'), ('powerful', 'ADJ'), ('and', 'CCONJ'), ('efficient', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Recently', 'RB'), (',', ','), ('the', 'DT'), ('development', 'NN'), ('of', 'IN'), ('more', 'RBR'), ('advanced', 'JJ'), ('algorithms', 'NNS'), ('has', 'VBZ'), ('helped', 'VBN'), ('AI', 'VBZ'), ('become', 'VB'), ('more', 'RBR'), ('powerful', 'JJ'), ('and', 'CC'), ('efficient', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('Recently', 'recently'), (',', ','), ('the', 'the'), ('development', 'development'), ('of', 'of'), ('more', 'more'), ('advanced', 'advanced'), ('algorithms', 'algorithm'), ('has', 'have'), ('helped', 'help'), ('AI', 'be'), ('become', 'become'), ('more', 'more'), ('powerful', 'powerful'), ('and', 'and'), ('efficient', 'efficient'), ('.', '.')] 

 Dependency tags are: 
>> [(('Recently', 'helped'), 'advmod'), ((',', 'helped'), 'punct'), (('the', 'development'), 'det'), (('development', 'helped'), 'nsubj'), (('of', 'algorithms'), 'case'), (('more', 'advanced'), 'advmod'), (('advanced', 'algorithms'), 'amod'), (('algorithms', 'development'), 'nmod'), (('has', 'helped'), 'aux'), (('helped', 'root'), 'root'), (('AI', 'become'), 'aux'), (('become', 'helped'), 'ccomp'), (('more', 'powerful'), 'advmod'), (('powerful', 'become'), 'xcomp'), (('and', 'efficient'), 'cc'), (('efficient', 'powerful'), 'conj'), (('.', 'helped'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 59 =================================

 — The evolution of computing: Another major factor in  AI’s current success is its computing power. Back when  AI was just beginning to be developed, the computing  power was minimal. Computers nowadays can take much  more data and heavier algorithms than in the 1950s.  


------------------- Sentence 1 -------------------

 — 

Tokens are: 
>> ['—'] 

 UPOS tags are: 
>> [('—', 'PUNCT')] 

 XPOS tags are: 
>> [('—', ':')] 

 Lemmas are: 
>> [('—', '—')] 

 Dependency tags are: 
>> [(('—', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 The evolution of computing: Another major factor in  AI’s current success is its computing power. 

Tokens are: 
>> ['The', 'evolution', 'of', 'computing', ':', 'Another', 'major', 'factor', 'in', 'AI', '’s', 'current', 'success', 'is', 'its', 'computing', 'power', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('evolution', 'NOUN'), ('of', 'ADP'), ('computing', 'NOUN'), (':', 'PUNCT'), ('Another', 'DET'), ('major', 'ADJ'), ('factor', 'NOUN'), ('in', 'ADP'), ('AI', 'PROPN'), ('’s', 'PART'), ('current', 'ADJ'), ('success', 'NOUN'), ('is', 'AUX'), ('its', 'PRON'), ('computing', 'NOUN'), ('power', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('evolution', 'NN'), ('of', 'IN'), ('computing', 'NN'), (':', ':'), ('Another', 'DT'), ('major', 'JJ'), ('factor', 'NN'), ('in', 'IN'), ('AI', 'NNP'), ('’s', 'POS'), ('current', 'JJ'), ('success', 'NN'), ('is', 'VBZ'), ('its', 'PRP$'), ('computing', 'NN'), ('power', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('evolution', 'evolution'), ('of', 'of'), ('computing', 'computing'), (':', ':'), ('Another', 'another'), ('major', 'major'), ('factor', 'factor'), ('in', 'in'), ('AI', 'AI'), ('’s', "'s"), ('current', 'current'), ('success', 'success'), ('is', 'be'), ('its', 'its'), ('computing', 'computing'), ('power', 'power'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'evolution'), 'det'), (('evolution', 'power'), 'nsubj'), (('of', 'computing'), 'case'), (('computing', 'evolution'), 'nmod'), ((':', 'evolution'), 'punct'), (('Another', 'factor'), 'det'), (('major', 'factor'), 'amod'), (('factor', 'power'), 'nsubj'), (('in', 'success'), 'case'), (('AI', 'success'), 'nmod:poss'), (('’s', 'AI'), 'case'), (('current', 'success'), 'amod'), (('success', 'factor'), 'nmod'), (('is', 'power'), 'cop'), (('its', 'power'), 'nmod:poss'), (('computing', 'power'), 'compound'), (('power', 'root'), 'root'), (('.', 'power'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 3 -------------------

 Back when  AI was just beginning to be developed, the computing  power was minimal. 

Tokens are: 
>> ['Back', 'when', 'AI', 'was', 'just', 'beginning', 'to', 'be', 'developed', ',', 'the', 'computing', 'power', 'was', 'minimal', '.'] 

 UPOS tags are: 
>> [('Back', 'ADV'), ('when', 'SCONJ'), ('AI', 'PRON'), ('was', 'AUX'), ('just', 'ADV'), ('beginning', 'VERB'), ('to', 'PART'), ('be', 'AUX'), ('developed', 'VERB'), (',', 'PUNCT'), ('the', 'DET'), ('computing', 'NOUN'), ('power', 'NOUN'), ('was', 'AUX'), ('minimal', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Back', 'RB'), ('when', 'WRB'), ('AI', 'PRP'), ('was', 'VBD'), ('just', 'RB'), ('beginning', 'VBG'), ('to', 'TO'), ('be', 'VB'), ('developed', 'VBN'), (',', ','), ('the', 'DT'), ('computing', 'NN'), ('power', 'NN'), ('was', 'VBD'), ('minimal', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('Back', 'back'), ('when', 'when'), ('AI', 'ai'), ('was', 'be'), ('just', 'just'), ('beginning', 'begin'), ('to', 'to'), ('be', 'be'), ('developed', 'develop'), (',', ','), ('the', 'the'), ('computing', 'computing'), ('power', 'power'), ('was', 'be'), ('minimal', 'minimal'), ('.', '.')] 

 Dependency tags are: 
>> [(('Back', 'minimal'), 'advmod'), (('when', 'beginning'), 'mark'), (('AI', 'beginning'), 'nsubj'), (('was', 'beginning'), 'aux'), (('just', 'beginning'), 'advmod'), (('beginning', 'minimal'), 'advcl'), (('to', 'developed'), 'mark'), (('be', 'developed'), 'aux:pass'), (('developed', 'beginning'), 'xcomp'), ((',', 'minimal'), 'punct'), (('the', 'power'), 'det'), (('computing', 'power'), 'compound'), (('power', 'minimal'), 'nsubj'), (('was', 'minimal'), 'cop'), (('minimal', 'root'), 'root'), (('.', 'minimal'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 4 -------------------

 Computers nowadays can take much  more data and heavier algorithms than in the 1950s. 

Tokens are: 
>> ['Computers', 'nowadays', 'can', 'take', 'much', 'more', 'data', 'and', 'heavier', 'algorithms', 'than', 'in', 'the', '1950s', '.'] 

 UPOS tags are: 
>> [('Computers', 'NOUN'), ('nowadays', 'ADV'), ('can', 'AUX'), ('take', 'VERB'), ('much', 'ADV'), ('more', 'ADJ'), ('data', 'NOUN'), ('and', 'CCONJ'), ('heavier', 'ADJ'), ('algorithms', 'NOUN'), ('than', 'ADP'), ('in', 'ADP'), ('the', 'DET'), ('1950s', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Computers', 'NNS'), ('nowadays', 'RB'), ('can', 'MD'), ('take', 'VB'), ('much', 'RB'), ('more', 'JJR'), ('data', 'NNS'), ('and', 'CC'), ('heavier', 'JJR'), ('algorithms', 'NNS'), ('than', 'IN'), ('in', 'IN'), ('the', 'DT'), ('1950s', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Computers', 'Computer'), ('nowadays', 'nowadays'), ('can', 'can'), ('take', 'take'), ('much', 'much'), ('more', 'more'), ('data', 'datum'), ('and', 'and'), ('heavier', 'heavy'), ('algorithms', 'algorithm'), ('than', 'than'), ('in', 'in'), ('the', 'the'), ('1950s', '1950s'), ('.', '.')] 

 Dependency tags are: 
>> [(('Computers', 'take'), 'nsubj'), (('nowadays', 'take'), 'advmod'), (('can', 'take'), 'aux'), (('take', 'root'), 'root'), (('much', 'more'), 'advmod'), (('more', 'data'), 'amod'), (('data', 'take'), 'obj'), (('and', 'algorithms'), 'cc'), (('heavier', 'algorithms'), 'amod'), (('algorithms', 'data'), 'conj'), (('than', '1950s'), 'mark'), (('in', '1950s'), 'case'), (('the', '1950s'), 'det'), (('1950s', 'take'), 'obl'), (('.', 'take'), 'punct')]

 Named Entites are: 
>> [('the 1950s', 'DATE')]

================================ Paragraph 60 =================================

These developments would not have taken place without  significant investments and proven business value. 


------------------- Sentence 1 -------------------

 These developments would not have taken place without  significant investments and proven business value. 

Tokens are: 
>> ['These', 'developments', 'would', 'not', 'have', 'taken', 'place', 'without', 'significant', 'investments', 'and', 'proven', 'business', 'value', '.'] 

 UPOS tags are: 
>> [('These', 'DET'), ('developments', 'NOUN'), ('would', 'AUX'), ('not', 'PART'), ('have', 'AUX'), ('taken', 'VERB'), ('place', 'NOUN'), ('without', 'ADP'), ('significant', 'ADJ'), ('investments', 'NOUN'), ('and', 'CCONJ'), ('proven', 'VERB'), ('business', 'NOUN'), ('value', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('These', 'DT'), ('developments', 'NNS'), ('would', 'MD'), ('not', 'RB'), ('have', 'VB'), ('taken', 'VBN'), ('place', 'NN'), ('without', 'IN'), ('significant', 'JJ'), ('investments', 'NNS'), ('and', 'CC'), ('proven', 'VBN'), ('business', 'NN'), ('value', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('These', 'this'), ('developments', 'development'), ('would', 'would'), ('not', 'not'), ('have', 'have'), ('taken', 'take'), ('place', 'place'), ('without', 'without'), ('significant', 'significant'), ('investments', 'investment'), ('and', 'and'), ('proven', 'prove'), ('business', 'business'), ('value', 'value'), ('.', '.')] 

 Dependency tags are: 
>> [(('These', 'developments'), 'det'), (('developments', 'taken'), 'nsubj'), (('would', 'taken'), 'aux'), (('not', 'taken'), 'advmod'), (('have', 'taken'), 'aux'), (('taken', 'root'), 'root'), (('place', 'taken'), 'obj'), (('without', 'investments'), 'case'), (('significant', 'investments'), 'amod'), (('investments', 'taken'), 'obl'), (('and', 'value'), 'cc'), (('proven', 'value'), 'amod'), (('business', 'value'), 'compound'), (('value', 'investments'), 'conj'), (('.', 'taken'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 61 =================================

Figure 3: AI timeline.7  


------------------- Sentence 1 -------------------

 Figure 3: AI timeline. 

Tokens are: 
>> ['Figure', '3', ':', 'AI', 'timeline', '.'] 

 UPOS tags are: 
>> [('Figure', 'PROPN'), ('3', 'NUM'), (':', 'PUNCT'), ('AI', 'VERB'), ('timeline', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Figure', 'NNP'), ('3', 'CD'), (':', ':'), ('AI', 'VB'), ('timeline', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Figure', 'Figure'), ('3', '3'), (':', ':'), ('AI', 'be'), ('timeline', 'timeline'), ('.', '.')] 

 Dependency tags are: 
>> [(('Figure', 'root'), 'root'), (('3', 'Figure'), 'dep'), ((':', 'Figure'), 'punct'), (('AI', 'Figure'), 'appos'), (('timeline', 'AI'), 'nsubj'), (('.', 'Figure'), 'punct')]

 Named Entites are: 
>> [('3', 'CARDINAL')]

------------------- Sentence 2 -------------------

 7 

Tokens are: 
>> ['7'] 

 UPOS tags are: 
>> [('7', 'X')] 

 XPOS tags are: 
>> [('7', 'LS')] 

 Lemmas are: 
>> [('7', '7')] 

 Dependency tags are: 
>> [(('7', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 62 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 63 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 64 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 65 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 66 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 67 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 68 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 69 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 70 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 71 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 72 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 73 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 74 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 75 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 76 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 77 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 78 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 79 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 80 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 81 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 82 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 83 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 84 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 85 =================================

● 


------------------- Sentence 1 -------------------

 ● 

Tokens are: 
>> ['●'] 

 UPOS tags are: 
>> [('●', 'PUNCT')] 

 XPOS tags are: 
>> [('●', 'NFP')] 

 Lemmas are: 
>> [('●', "''")] 

 Dependency tags are: 
>> [(('●', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 86 =================================

Turing publishes the Turing-test. “The point at which a machine  has answers like a human” 


------------------- Sentence 1 -------------------

 Turing publishes the Turing-test. 

Tokens are: 
>> ['Turing', 'publishes', 'the', 'Turing', '-test', '.'] 

 UPOS tags are: 
>> [('Turing', 'PROPN'), ('publishes', 'VERB'), ('the', 'DET'), ('Turing', 'PROPN'), ('-test', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Turing', 'NNP'), ('publishes', 'VBZ'), ('the', 'DT'), ('Turing', 'NNP'), ('-test', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Turing', 'Turing'), ('publishes', 'publish'), ('the', 'the'), ('Turing', 'Turing'), ('-test', '-test'), ('.', '.')] 

 Dependency tags are: 
>> [(('Turing', 'publishes'), 'nsubj'), (('publishes', 'root'), 'root'), (('the', '-test'), 'det'), (('Turing', '-test'), 'compound'), (('-test', 'publishes'), 'obj'), (('.', 'publishes'), 'punct')]

 Named Entites are: 
>> [('Turing', 'ORG'), ('Turing', 'PERSON')]

------------------- Sentence 2 -------------------

 “The point at which a machine  has answers like a human” 

Tokens are: 
>> ['“', 'The', 'point', 'at', 'which', 'a', 'machine', 'has', 'answers', 'like', 'a', 'human', '”'] 

 UPOS tags are: 
>> [('“', 'PUNCT'), ('The', 'DET'), ('point', 'NOUN'), ('at', 'ADP'), ('which', 'PRON'), ('a', 'DET'), ('machine', 'NOUN'), ('has', 'VERB'), ('answers', 'NOUN'), ('like', 'ADP'), ('a', 'DET'), ('human', 'ADJ'), ('”', 'PUNCT')] 

 XPOS tags are: 
>> [('“', '``'), ('The', 'DT'), ('point', 'NN'), ('at', 'IN'), ('which', 'WDT'), ('a', 'DT'), ('machine', 'NN'), ('has', 'VBZ'), ('answers', 'NNS'), ('like', 'IN'), ('a', 'DT'), ('human', 'JJ'), ('”', "''")] 

 Lemmas are: 
>> [('“', "''"), ('The', 'the'), ('point', 'point'), ('at', 'at'), ('which', 'which'), ('a', 'a'), ('machine', 'machine'), ('has', 'have'), ('answers', 'answer'), ('like', 'like'), ('a', 'a'), ('human', 'human'), ('”', "''")] 

 Dependency tags are: 
>> [(('“', 'point'), 'punct'), (('The', 'point'), 'det'), (('point', 'root'), 'root'), (('at', 'which'), 'case'), (('which', 'has'), 'obl'), (('a', 'machine'), 'det'), (('machine', 'has'), 'nsubj'), (('has', 'point'), 'acl:relcl'), (('answers', 'has'), 'obj'), (('like', 'human'), 'case'), (('a', 'human'), 'det'), (('human', 'answers'), 'nmod'), (('”', 'point'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 87 =================================

AI first named by John McCarthy 


------------------- Sentence 1 -------------------

 AI first named by John McCarthy 

Tokens are: 
>> ['AI', 'first', 'named', 'by', 'John', 'McCarthy'] 

 UPOS tags are: 
>> [('AI', 'AUX'), ('first', 'ADV'), ('named', 'VERB'), ('by', 'ADP'), ('John', 'PROPN'), ('McCarthy', 'PROPN')] 

 XPOS tags are: 
>> [('AI', 'VBZ'), ('first', 'RB'), ('named', 'VBN'), ('by', 'IN'), ('John', 'NNP'), ('McCarthy', 'NNP')] 

 Lemmas are: 
>> [('AI', 'be'), ('first', 'first'), ('named', 'name'), ('by', 'by'), ('John', 'John'), ('McCarthy', 'McCarthy')] 

 Dependency tags are: 
>> [(('AI', 'named'), 'aux:pass'), (('first', 'named'), 'advmod'), (('named', 'root'), 'root'), (('by', 'John'), 'case'), (('John', 'named'), 'obl'), (('McCarthy', 'John'), 'flat')]

 Named Entites are: 
>> [('AI', 'ORG'), ('first', 'ORDINAL'), ('John McCarthy', 'PERSON')]

================================ Paragraph 88 =================================

“First” AI algorithm Logic Theorist by Simon and Newell 


------------------- Sentence 1 -------------------

 “First” AI algorithm Logic Theorist by Simon and Newell 

Tokens are: 
>> ['“', 'First', '”', 'AI', 'algorithm', 'Logic', 'Theorist', 'by', 'Simon', 'and', 'Newell'] 

 UPOS tags are: 
>> [('“', 'PUNCT'), ('First', 'ADJ'), ('”', 'PUNCT'), ('AI', 'AUX'), ('algorithm', 'NOUN'), ('Logic', 'PROPN'), ('Theorist', 'PROPN'), ('by', 'ADP'), ('Simon', 'PROPN'), ('and', 'CCONJ'), ('Newell', 'PROPN')] 

 XPOS tags are: 
>> [('“', '``'), ('First', 'JJ'), ('”', "''"), ('AI', 'VBZ'), ('algorithm', 'NN'), ('Logic', 'NNP'), ('Theorist', 'NNP'), ('by', 'IN'), ('Simon', 'NNP'), ('and', 'CC'), ('Newell', 'NNP')] 

 Lemmas are: 
>> [('“', "''"), ('First', 'first'), ('”', "''"), ('AI', 'be'), ('algorithm', 'algorithm'), ('Logic', 'logic'), ('Theorist', 'Theorist'), ('by', 'by'), ('Simon', 'Simon'), ('and', 'and'), ('Newell', 'Newell')] 

 Dependency tags are: 
>> [(('“', 'First'), 'punct'), (('First', 'algorithm'), 'amod'), (('”', 'First'), 'punct'), (('AI', 'algorithm'), 'cop'), (('algorithm', 'root'), 'root'), (('Logic', 'algorithm'), 'flat'), (('Theorist', 'Logic'), 'flat'), (('by', 'Simon'), 'case'), (('Simon', 'algorithm'), 'nmod'), (('and', 'Newell'), 'cc'), (('Newell', 'Simon'), 'conj')]

 Named Entites are: 
>> [('First', 'ORDINAL'), ('Simon', 'PERSON'), ('Newell', 'PERSON')]

================================ Paragraph 89 =================================

Rosenblatt invents the first self learning algorithm with  the perceptron 


------------------- Sentence 1 -------------------

 Rosenblatt invents the first self learning algorithm with  the perceptron 

Tokens are: 
>> ['Rosenblatt', 'invents', 'the', 'first', 'self', 'learning', 'algorithm', 'with', 'the', 'perceptron'] 

 UPOS tags are: 
>> [('Rosenblatt', 'PROPN'), ('invents', 'VERB'), ('the', 'DET'), ('first', 'ADJ'), ('self', 'NOUN'), ('learning', 'NOUN'), ('algorithm', 'NOUN'), ('with', 'ADP'), ('the', 'DET'), ('perceptron', 'NOUN')] 

 XPOS tags are: 
>> [('Rosenblatt', 'NNP'), ('invents', 'VBZ'), ('the', 'DT'), ('first', 'JJ'), ('self', 'NN'), ('learning', 'NN'), ('algorithm', 'NN'), ('with', 'IN'), ('the', 'DT'), ('perceptron', 'NN')] 

 Lemmas are: 
>> [('Rosenblatt', 'Rosenblatt'), ('invents', 'invent'), ('the', 'the'), ('first', 'first'), ('self', 'self'), ('learning', 'learning'), ('algorithm', 'algorithm'), ('with', 'with'), ('the', 'the'), ('perceptron', 'perceptron')] 

 Dependency tags are: 
>> [(('Rosenblatt', 'invents'), 'nsubj'), (('invents', 'root'), 'root'), (('the', 'algorithm'), 'det'), (('first', 'algorithm'), 'amod'), (('self', 'algorithm'), 'compound'), (('learning', 'algorithm'), 'compound'), (('algorithm', 'invents'), 'obj'), (('with', 'perceptron'), 'case'), (('the', 'perceptron'), 'det'), (('perceptron', 'algorithm'), 'nmod')]

 Named Entites are: 
>> [('Rosenblatt', 'PERSON'), ('first', 'ORDINAL')]

================================ Paragraph 90 =================================

IBM 305, the first hard drive, 5 MB 


------------------- Sentence 1 -------------------

 IBM 305, the first hard drive, 5 MB 

Tokens are: 
>> ['IBM', '305', ',', 'the', 'first', 'hard', 'drive', ',', '5', 'MB'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('305', 'NUM'), (',', 'PUNCT'), ('the', 'DET'), ('first', 'ADJ'), ('hard', 'ADJ'), ('drive', 'NOUN'), (',', 'PUNCT'), ('5', 'NUM'), ('MB', 'NOUN')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('305', 'CD'), (',', ','), ('the', 'DT'), ('first', 'JJ'), ('hard', 'JJ'), ('drive', 'NN'), (',', ','), ('5', 'CD'), ('MB', 'NN')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('305', '305'), (',', ','), ('the', 'the'), ('first', 'first'), ('hard', 'hard'), ('drive', 'drive'), (',', ','), ('5', '5'), ('MB', 'mb')] 

 Dependency tags are: 
>> [(('IBM', 'root'), 'root'), (('305', 'IBM'), 'nummod'), ((',', 'IBM'), 'punct'), (('the', 'drive'), 'det'), (('first', 'drive'), 'amod'), (('hard', 'drive'), 'amod'), (('drive', 'IBM'), 'list'), ((',', 'IBM'), 'punct'), (('5', 'MB'), 'nummod'), (('MB', 'IBM'), 'list')]

 Named Entites are: 
>> [('IBM', 'ORG'), ('305', 'CARDINAL'), ('first', 'ORDINAL'), ('5', 'CARDINAL')]

================================ Paragraph 91 =================================

Backpropagation, one of the most important areas of a neural  network, is proposed  


------------------- Sentence 1 -------------------

 Backpropagation, one of the most important areas of a neural  network, is proposed 

Tokens are: 
>> ['Backpropagation', ',', 'one', 'of', 'the', 'most', 'important', 'areas', 'of', 'a', 'neural', 'network', ',', 'is', 'proposed'] 

 UPOS tags are: 
>> [('Backpropagation', 'NOUN'), (',', 'PUNCT'), ('one', 'NUM'), ('of', 'ADP'), ('the', 'DET'), ('most', 'ADV'), ('important', 'ADJ'), ('areas', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('neural', 'ADJ'), ('network', 'NOUN'), (',', 'PUNCT'), ('is', 'AUX'), ('proposed', 'VERB')] 

 XPOS tags are: 
>> [('Backpropagation', 'NN'), (',', ','), ('one', 'CD'), ('of', 'IN'), ('the', 'DT'), ('most', 'RBS'), ('important', 'JJ'), ('areas', 'NNS'), ('of', 'IN'), ('a', 'DT'), ('neural', 'JJ'), ('network', 'NN'), (',', ','), ('is', 'VBZ'), ('proposed', 'VBN')] 

 Lemmas are: 
>> [('Backpropagation', 'backpropagation'), (',', ','), ('one', 'one'), ('of', 'of'), ('the', 'the'), ('most', 'most'), ('important', 'important'), ('areas', 'area'), ('of', 'of'), ('a', 'a'), ('neural', 'neural'), ('network', 'network'), (',', ','), ('is', 'be'), ('proposed', 'propose')] 

 Dependency tags are: 
>> [(('Backpropagation', 'proposed'), 'nsubj:pass'), ((',', 'Backpropagation'), 'punct'), (('one', 'proposed'), 'nsubj:pass'), (('of', 'areas'), 'case'), (('the', 'areas'), 'det'), (('most', 'important'), 'advmod'), (('important', 'areas'), 'amod'), (('areas', 'one'), 'nmod'), (('of', 'network'), 'case'), (('a', 'network'), 'det'), (('neural', 'network'), 'amod'), (('network', 'areas'), 'nmod'), ((',', 'proposed'), 'punct'), (('is', 'proposed'), 'aux:pass'), (('proposed', 'root'), 'root')]

 Named Entites are: 
>> [('one', 'CARDINAL')]

================================ Paragraph 92 =================================

IBM 1330, 100MB 


------------------- Sentence 1 -------------------

 IBM 1330, 100MB 

Tokens are: 
>> ['IBM', '1330', ',', '100MB'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('1330', 'NUM'), (',', 'PUNCT'), ('100MB', 'NUM')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('1330', 'CD'), (',', ','), ('100MB', 'CD')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('1330', '1330'), (',', ','), ('100MB', '100mb')] 

 Dependency tags are: 
>> [(('IBM', 'root'), 'root'), (('1330', 'IBM'), 'nummod'), ((',', 'IBM'), 'punct'), (('100MB', 'IBM'), 'nmod:tmod')]

 Named Entites are: 
>> [('1330', 'CARDINAL')]

================================ Paragraph 93 =================================

Intel produces second generation general purpose chips First AI winter, the belief in machine learning and AI had dropped  after multiple unsuccessful experiments combined with insufficient  computing power, network capabilities and database capacity 


------------------- Sentence 1 -------------------

 Intel produces second generation general purpose chips First AI winter, the belief in machine learning and AI had dropped  after multiple unsuccessful experiments combined with insufficient  computing power, network capabilities and database capacity 

Tokens are: 
>> ['Intel', 'produces', 'second', 'generation', 'general', 'purpose', 'chips', 'First', 'AI', 'winter', ',', 'the', 'belief', 'in', 'machine', 'learning', 'and', 'AI', 'had', 'dropped', 'after', 'multiple', 'unsuccessful', 'experiments', 'combined', 'with', 'insufficient', 'computing', 'power', ',', 'network', 'capabilities', 'and', 'database', 'capacity'] 

 UPOS tags are: 
>> [('Intel', 'PROPN'), ('produces', 'VERB'), ('second', 'ADJ'), ('generation', 'NOUN'), ('general', 'ADJ'), ('purpose', 'NOUN'), ('chips', 'NOUN'), ('First', 'ADV'), ('AI', 'PART'), ('winter', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('belief', 'NOUN'), ('in', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('and', 'CCONJ'), ('AI', 'NOUN'), ('had', 'AUX'), ('dropped', 'VERB'), ('after', 'ADP'), ('multiple', 'ADJ'), ('unsuccessful', 'ADJ'), ('experiments', 'NOUN'), ('combined', 'VERB'), ('with', 'ADP'), ('insufficient', 'ADJ'), ('computing', 'NOUN'), ('power', 'NOUN'), (',', 'PUNCT'), ('network', 'NOUN'), ('capabilities', 'NOUN'), ('and', 'CCONJ'), ('database', 'NOUN'), ('capacity', 'NOUN')] 

 XPOS tags are: 
>> [('Intel', 'NNP'), ('produces', 'VBZ'), ('second', 'JJ'), ('generation', 'NN'), ('general', 'JJ'), ('purpose', 'NN'), ('chips', 'NNS'), ('First', 'RB'), ('AI', 'POS'), ('winter', 'NN'), (',', ','), ('the', 'DT'), ('belief', 'NN'), ('in', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('and', 'CC'), ('AI', 'NN'), ('had', 'VBD'), ('dropped', 'VBN'), ('after', 'IN'), ('multiple', 'JJ'), ('unsuccessful', 'JJ'), ('experiments', 'NNS'), ('combined', 'VBN'), ('with', 'IN'), ('insufficient', 'JJ'), ('computing', 'NN'), ('power', 'NN'), (',', ','), ('network', 'NN'), ('capabilities', 'NNS'), ('and', 'CC'), ('database', 'NN'), ('capacity', 'NN')] 

 Lemmas are: 
>> [('Intel', 'Intel'), ('produces', 'produce'), ('second', 'second'), ('generation', 'generation'), ('general', 'general'), ('purpose', 'purpose'), ('chips', 'chip'), ('First', 'first'), ('AI', 'ai'), ('winter', 'winter'), (',', ','), ('the', 'the'), ('belief', 'belief'), ('in', 'in'), ('machine', 'machine'), ('learning', 'learning'), ('and', 'and'), ('AI', 'ai'), ('had', 'have'), ('dropped', 'drop'), ('after', 'after'), ('multiple', 'multiple'), ('unsuccessful', 'unsuccessful'), ('experiments', 'experiment'), ('combined', 'combine'), ('with', 'with'), ('insufficient', 'insufficient'), ('computing', 'computing'), ('power', 'power'), (',', ','), ('network', 'network'), ('capabilities', 'capability'), ('and', 'and'), ('database', 'database'), ('capacity', 'capacity')] 

 Dependency tags are: 
>> [(('Intel', 'produces'), 'nsubj'), (('produces', 'root'), 'root'), (('second', 'chips'), 'amod'), (('generation', 'chips'), 'compound'), (('general', 'chips'), 'amod'), (('purpose', 'chips'), 'compound'), (('chips', 'produces'), 'obj'), (('First', 'winter'), 'advmod'), (('AI', 'winter'), 'case'), (('winter', 'produces'), 'obl:tmod'), ((',', 'dropped'), 'punct'), (('the', 'belief'), 'det'), (('belief', 'dropped'), 'nsubj'), (('in', 'learning'), 'case'), (('machine', 'learning'), 'compound'), (('learning', 'belief'), 'nmod'), (('and', 'AI'), 'cc'), (('AI', 'learning'), 'conj'), (('had', 'dropped'), 'aux'), (('dropped', 'produces'), 'conj'), (('after', 'experiments'), 'case'), (('multiple', 'experiments'), 'amod'), (('unsuccessful', 'experiments'), 'amod'), (('experiments', 'dropped'), 'obl'), (('combined', 'experiments'), 'acl'), (('with', 'power'), 'case'), (('insufficient', 'power'), 'amod'), (('computing', 'power'), 'compound'), (('power', 'combined'), 'obl'), ((',', 'capabilities'), 'punct'), (('network', 'capabilities'), 'compound'), (('capabilities', 'power'), 'conj'), (('and', 'capacity'), 'cc'), (('database', 'capacity'), 'compound'), (('capacity', 'power'), 'conj')]

 Named Entites are: 
>> [('Intel', 'ORG'), ('second', 'ORDINAL'), ('First AI', 'PRODUCT')]

================================ Paragraph 94 =================================

IBM 0665 hard drive, 40 MB. But much smaller than the 1330 


------------------- Sentence 1 -------------------

 IBM 0665 hard drive, 40 MB. 

Tokens are: 
>> ['IBM', '0665', 'hard', 'drive', ',', '40', 'MB', '.'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('0665', 'NUM'), ('hard', 'ADJ'), ('drive', 'NOUN'), (',', 'PUNCT'), ('40', 'NUM'), ('MB', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('0665', 'CD'), ('hard', 'JJ'), ('drive', 'NN'), (',', ','), ('40', 'CD'), ('MB', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('0665', '0665'), ('hard', 'hard'), ('drive', 'drive'), (',', ','), ('40', '40'), ('MB', 'mb'), ('.', '.')] 

 Dependency tags are: 
>> [(('IBM', 'drive'), 'compound'), (('0665', 'IBM'), 'nummod'), (('hard', 'drive'), 'amod'), (('drive', 'root'), 'root'), ((',', 'drive'), 'punct'), (('40', 'MB'), 'nummod'), (('MB', 'drive'), 'appos'), (('.', 'drive'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG'), ('0665', 'CARDINAL'), ('40 MB', 'QUANTITY')]

------------------- Sentence 2 -------------------

 But much smaller than the 1330 

Tokens are: 
>> ['But', 'much', 'smaller', 'than', 'the', '1330'] 

 UPOS tags are: 
>> [('But', 'CCONJ'), ('much', 'ADV'), ('smaller', 'ADJ'), ('than', 'ADP'), ('the', 'DET'), ('1330', 'NUM')] 

 XPOS tags are: 
>> [('But', 'CC'), ('much', 'RB'), ('smaller', 'JJR'), ('than', 'IN'), ('the', 'DT'), ('1330', 'CD')] 

 Lemmas are: 
>> [('But', 'but'), ('much', 'much'), ('smaller', 'small'), ('than', 'than'), ('the', 'the'), ('1330', '1330')] 

 Dependency tags are: 
>> [(('But', 'smaller'), 'cc'), (('much', 'smaller'), 'advmod'), (('smaller', 'root'), 'root'), (('than', '1330'), 'case'), (('the', '1330'), 'det'), (('1330', 'smaller'), 'obl')]

 Named Entites are: 
>> [('1330', 'CARDINAL')]

================================ Paragraph 95 =================================

First convolutional neural network developed  (used a lot in image recognition) 


------------------- Sentence 1 -------------------

 First convolutional neural network developed  (used a lot in image recognition) 

Tokens are: 
>> ['First', 'convolutional', 'neural', 'network', 'developed', '(', 'used', 'a', 'lot', 'in', 'image', 'recognition', ')'] 

 UPOS tags are: 
>> [('First', 'ADJ'), ('convolutional', 'ADJ'), ('neural', 'ADJ'), ('network', 'NOUN'), ('developed', 'VERB'), ('(', 'PUNCT'), ('used', 'VERB'), ('a', 'DET'), ('lot', 'NOUN'), ('in', 'ADP'), ('image', 'NOUN'), ('recognition', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('First', 'JJ'), ('convolutional', 'JJ'), ('neural', 'JJ'), ('network', 'NN'), ('developed', 'VBD'), ('(', '-LRB-'), ('used', 'VBN'), ('a', 'DT'), ('lot', 'NN'), ('in', 'IN'), ('image', 'NN'), ('recognition', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('First', 'first'), ('convolutional', 'convolutional'), ('neural', 'neural'), ('network', 'network'), ('developed', 'develop'), ('(', '('), ('used', 'use'), ('a', 'a'), ('lot', 'lot'), ('in', 'in'), ('image', 'image'), ('recognition', 'recognition'), (')', ')')] 

 Dependency tags are: 
>> [(('First', 'network'), 'amod'), (('convolutional', 'network'), 'amod'), (('neural', 'network'), 'amod'), (('network', 'developed'), 'nsubj'), (('developed', 'root'), 'root'), (('(', 'used'), 'punct'), (('used', 'developed'), 'parataxis'), (('a', 'lot'), 'det'), (('lot', 'used'), 'obj'), (('in', 'recognition'), 'case'), (('image', 'recognition'), 'compound'), (('recognition', 'used'), 'obl'), ((')', 'used'), 'punct')]

 Named Entites are: 
>> [('First', 'ORDINAL')]

================================ Paragraph 96 =================================

The internet is open for the public 


------------------- Sentence 1 -------------------

 The internet is open for the public 

Tokens are: 
>> ['The', 'internet', 'is', 'open', 'for', 'the', 'public'] 

 UPOS tags are: 
>> [('The', 'DET'), ('internet', 'NOUN'), ('is', 'AUX'), ('open', 'ADJ'), ('for', 'ADP'), ('the', 'DET'), ('public', 'NOUN')] 

 XPOS tags are: 
>> [('The', 'DT'), ('internet', 'NN'), ('is', 'VBZ'), ('open', 'JJ'), ('for', 'IN'), ('the', 'DT'), ('public', 'NN')] 

 Lemmas are: 
>> [('The', 'the'), ('internet', 'internet'), ('is', 'be'), ('open', 'open'), ('for', 'for'), ('the', 'the'), ('public', 'public')] 

 Dependency tags are: 
>> [(('The', 'internet'), 'det'), (('internet', 'open'), 'nsubj'), (('is', 'open'), 'cop'), (('open', 'root'), 'root'), (('for', 'public'), 'case'), (('the', 'public'), 'det'), (('public', 'open'), 'obl')]

 Named Entites are: 
>> []

================================ Paragraph 97 =================================

First versions of  natural language solutions set up.  


------------------- Sentence 1 -------------------

 First versions of  natural language solutions set up. 

Tokens are: 
>> ['First', 'versions', 'of', 'natural', 'language', 'solutions', 'set', 'up', '.'] 

 UPOS tags are: 
>> [('First', 'ADJ'), ('versions', 'NOUN'), ('of', 'ADP'), ('natural', 'ADJ'), ('language', 'NOUN'), ('solutions', 'NOUN'), ('set', 'VERB'), ('up', 'ADP'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('First', 'JJ'), ('versions', 'NNS'), ('of', 'IN'), ('natural', 'JJ'), ('language', 'NN'), ('solutions', 'NNS'), ('set', 'VBN'), ('up', 'RP'), ('.', '.')] 

 Lemmas are: 
>> [('First', 'first'), ('versions', 'version'), ('of', 'of'), ('natural', 'natural'), ('language', 'language'), ('solutions', 'solution'), ('set', 'set'), ('up', 'up'), ('.', '.')] 

 Dependency tags are: 
>> [(('First', 'versions'), 'amod'), (('versions', 'set'), 'nsubj'), (('of', 'solutions'), 'case'), (('natural', 'solutions'), 'amod'), (('language', 'solutions'), 'compound'), (('solutions', 'versions'), 'nmod'), (('set', 'root'), 'root'), (('up', 'set'), 'compound:prt'), (('.', 'set'), 'punct')]

 Named Entites are: 
>> [('First', 'ORDINAL')]

================================ Paragraph 98 =================================

IBM’s deep blue defeats Kasparov in Chess 


------------------- Sentence 1 -------------------

 IBM’s deep blue defeats Kasparov in Chess 

Tokens are: 
>> ['IBM', '’s', 'deep', 'blue', 'defeats', 'Kasparov', 'in', 'Chess'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('’s', 'PART'), ('deep', 'ADJ'), ('blue', 'ADJ'), ('defeats', 'NOUN'), ('Kasparov', 'PROPN'), ('in', 'ADP'), ('Chess', 'NOUN')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('’s', 'POS'), ('deep', 'JJ'), ('blue', 'JJ'), ('defeats', 'NNS'), ('Kasparov', 'NNP'), ('in', 'IN'), ('Chess', 'NN')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('’s', "'s"), ('deep', 'deep'), ('blue', 'blue'), ('defeats', 'defeat'), ('Kasparov', 'Kasparov'), ('in', 'in'), ('Chess', 'chess')] 

 Dependency tags are: 
>> [(('IBM', 'defeats'), 'nmod:poss'), (('’s', 'IBM'), 'case'), (('deep', 'defeats'), 'amod'), (('blue', 'defeats'), 'amod'), (('defeats', 'root'), 'root'), (('Kasparov', 'defeats'), 'appos'), (('in', 'Chess'), 'case'), (('Chess', 'Kasparov'), 'nmod')]

 Named Entites are: 
>> [('IBM', 'ORG'), ('Kasparov', 'PERSON')]

================================ Paragraph 99 =================================

Google’s Page rank is published 


------------------- Sentence 1 -------------------

 Google’s 

Tokens are: 
>> ['Google', '’s'] 

 UPOS tags are: 
>> [('Google', 'PROPN'), ('’s', 'PART')] 

 XPOS tags are: 
>> [('Google', 'NNP'), ('’s', 'POS')] 

 Lemmas are: 
>> [('Google', 'Google'), ('’s', "'s")] 

 Dependency tags are: 
>> [(('Google', 'root'), 'root'), (('’s', 'Google'), 'case')]

 Named Entites are: 
>> [('Google', 'ORG')]

------------------- Sentence 2 -------------------

 Page rank is published 

Tokens are: 
>> ['Page', 'rank', 'is', 'published'] 

 UPOS tags are: 
>> [('Page', 'NOUN'), ('rank', 'NOUN'), ('is', 'AUX'), ('published', 'VERB')] 

 XPOS tags are: 
>> [('Page', 'NN'), ('rank', 'NN'), ('is', 'VBZ'), ('published', 'VBN')] 

 Lemmas are: 
>> [('Page', 'page'), ('rank', 'rank'), ('is', 'be'), ('published', 'publish')] 

 Dependency tags are: 
>> [(('Page', 'rank'), 'compound'), (('rank', 'published'), 'nsubj:pass'), (('is', 'published'), 'aux:pass'), (('published', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 100 =================================

The adoption of Internet by the masses  


------------------- Sentence 1 -------------------

 The adoption of Internet by the masses 

Tokens are: 
>> ['The', 'adoption', 'of', 'Internet', 'by', 'the', 'masses'] 

 UPOS tags are: 
>> [('The', 'DET'), ('adoption', 'NOUN'), ('of', 'ADP'), ('Internet', 'PROPN'), ('by', 'ADP'), ('the', 'DET'), ('masses', 'NOUN')] 

 XPOS tags are: 
>> [('The', 'DT'), ('adoption', 'NN'), ('of', 'IN'), ('Internet', 'NNP'), ('by', 'IN'), ('the', 'DT'), ('masses', 'NNS')] 

 Lemmas are: 
>> [('The', 'the'), ('adoption', 'adoption'), ('of', 'of'), ('Internet', 'Internet'), ('by', 'by'), ('the', 'the'), ('masses', 'mass')] 

 Dependency tags are: 
>> [(('The', 'adoption'), 'det'), (('adoption', 'root'), 'root'), (('of', 'Internet'), 'case'), (('Internet', 'adoption'), 'nmod'), (('by', 'masses'), 'case'), (('the', 'masses'), 'det'), (('masses', 'adoption'), 'nmod')]

 Named Entites are: 
>> []

================================ Paragraph 101 =================================

Amazon brings cloud computing to the masses 


------------------- Sentence 1 -------------------

 Amazon brings cloud computing to the masses 

Tokens are: 
>> ['Amazon', 'brings', 'cloud', 'computing', 'to', 'the', 'masses'] 

 UPOS tags are: 
>> [('Amazon', 'PROPN'), ('brings', 'VERB'), ('cloud', 'NOUN'), ('computing', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('masses', 'NOUN')] 

 XPOS tags are: 
>> [('Amazon', 'NNP'), ('brings', 'VBZ'), ('cloud', 'NN'), ('computing', 'NN'), ('to', 'IN'), ('the', 'DT'), ('masses', 'NNS')] 

 Lemmas are: 
>> [('Amazon', 'Amazon'), ('brings', 'bring'), ('cloud', 'cloud'), ('computing', 'computing'), ('to', 'to'), ('the', 'the'), ('masses', 'mass')] 

 Dependency tags are: 
>> [(('Amazon', 'brings'), 'nsubj'), (('brings', 'root'), 'root'), (('cloud', 'computing'), 'compound'), (('computing', 'brings'), 'obj'), (('to', 'masses'), 'case'), (('the', 'masses'), 'det'), (('masses', 'brings'), 'obl')]

 Named Entites are: 
>> [('Amazon', 'ORG')]

================================ Paragraph 102 =================================

Google develops an algorithm that can handle large amounts  of data faster. 


------------------- Sentence 1 -------------------

 Google develops an algorithm that can handle large amounts  of data faster. 

Tokens are: 
>> ['Google', 'develops', 'an', 'algorithm', 'that', 'can', 'handle', 'large', 'amounts', 'of', 'data', 'faster', '.'] 

 UPOS tags are: 
>> [('Google', 'PROPN'), ('develops', 'VERB'), ('an', 'DET'), ('algorithm', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('handle', 'VERB'), ('large', 'ADJ'), ('amounts', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), ('faster', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Google', 'NNP'), ('develops', 'VBZ'), ('an', 'DT'), ('algorithm', 'NN'), ('that', 'WDT'), ('can', 'MD'), ('handle', 'VB'), ('large', 'JJ'), ('amounts', 'NNS'), ('of', 'IN'), ('data', 'NNS'), ('faster', 'RBR'), ('.', '.')] 

 Lemmas are: 
>> [('Google', 'Google'), ('develops', 'develop'), ('an', 'a'), ('algorithm', 'algorithm'), ('that', 'that'), ('can', 'can'), ('handle', 'handle'), ('large', 'large'), ('amounts', 'amount'), ('of', 'of'), ('data', 'datum'), ('faster', 'fast'), ('.', '.')] 

 Dependency tags are: 
>> [(('Google', 'develops'), 'nsubj'), (('develops', 'root'), 'root'), (('an', 'algorithm'), 'det'), (('algorithm', 'develops'), 'obj'), (('that', 'handle'), 'nsubj'), (('can', 'handle'), 'aux'), (('handle', 'algorithm'), 'acl:relcl'), (('large', 'amounts'), 'amod'), (('amounts', 'handle'), 'obj'), (('of', 'data'), 'case'), (('data', 'amounts'), 'nmod'), (('faster', 'handle'), 'advmod'), (('.', 'develops'), 'punct')]

 Named Entites are: 
>> [('Google', 'ORG')]

================================ Paragraph 103 =================================

Stanford Robot drives automatically 


------------------- Sentence 1 -------------------

 Stanford Robot drives automatically 

Tokens are: 
>> ['Stanford', 'Robot', 'drives', 'automatically'] 

 UPOS tags are: 
>> [('Stanford', 'PROPN'), ('Robot', 'PROPN'), ('drives', 'VERB'), ('automatically', 'ADV')] 

 XPOS tags are: 
>> [('Stanford', 'NNP'), ('Robot', 'NNP'), ('drives', 'VBZ'), ('automatically', 'RB')] 

 Lemmas are: 
>> [('Stanford', 'Stanford'), ('Robot', 'Robot'), ('drives', 'drive'), ('automatically', 'automatically')] 

 Dependency tags are: 
>> [(('Stanford', 'Robot'), 'compound'), (('Robot', 'drives'), 'nsubj'), (('drives', 'root'), 'root'), (('automatically', 'drives'), 'advmod')]

 Named Entites are: 
>> [('Stanford Robot', 'ORG')]

================================ Paragraph 104 =================================

IBM introduces Watson. A question answering machine that  later wins from a Jeopardy champion 


------------------- Sentence 1 -------------------

 IBM introduces Watson. 

Tokens are: 
>> ['IBM', 'introduces', 'Watson', '.'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('introduces', 'VERB'), ('Watson', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('introduces', 'VBZ'), ('Watson', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('introduces', 'introduce'), ('Watson', 'Watson'), ('.', '.')] 

 Dependency tags are: 
>> [(('IBM', 'introduces'), 'nsubj'), (('introduces', 'root'), 'root'), (('Watson', 'introduces'), 'obj'), (('.', 'introduces'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG'), ('Watson', 'ORG')]

------------------- Sentence 2 -------------------

 A question answering machine that  later wins from a Jeopardy champion 

Tokens are: 
>> ['A', 'question', 'answering', 'machine', 'that', 'later', 'wins', 'from', 'a', 'Jeopardy', 'champion'] 

 UPOS tags are: 
>> [('A', 'DET'), ('question', 'NOUN'), ('answering', 'NOUN'), ('machine', 'NOUN'), ('that', 'PRON'), ('later', 'ADV'), ('wins', 'VERB'), ('from', 'ADP'), ('a', 'DET'), ('Jeopardy', 'NOUN'), ('champion', 'NOUN')] 

 XPOS tags are: 
>> [('A', 'DT'), ('question', 'NN'), ('answering', 'NN'), ('machine', 'NN'), ('that', 'WDT'), ('later', 'RBR'), ('wins', 'VBZ'), ('from', 'IN'), ('a', 'DT'), ('Jeopardy', 'NN'), ('champion', 'NN')] 

 Lemmas are: 
>> [('A', 'a'), ('question', 'question'), ('answering', 'answer'), ('machine', 'machine'), ('that', 'that'), ('later', 'late'), ('wins', 'win'), ('from', 'from'), ('a', 'a'), ('Jeopardy', 'Jeopardy'), ('champion', 'champion')] 

 Dependency tags are: 
>> [(('A', 'machine'), 'det'), (('question', 'machine'), 'compound'), (('answering', 'machine'), 'amod'), (('machine', 'root'), 'root'), (('that', 'wins'), 'nsubj'), (('later', 'wins'), 'advmod'), (('wins', 'machine'), 'acl:relcl'), (('from', 'champion'), 'case'), (('a', 'champion'), 'det'), (('Jeopardy', 'champion'), 'compound'), (('champion', 'wins'), 'obl')]

 Named Entites are: 
>> [('Jeopardy', 'WORK_OF_ART')]

================================ Paragraph 105 =================================

Worldwide IP traffic exceeds 20 exabytes (20 billion gigabytes) per month 


------------------- Sentence 1 -------------------

 Worldwide IP traffic exceeds 20 exabytes (20 billion gigabytes) per month 

Tokens are: 
>> ['Worldwide', 'IP', 'traffic', 'exceeds', '20', 'exabytes', '(', '20', 'billion', 'gigabytes', ')', 'per', 'month'] 

 UPOS tags are: 
>> [('Worldwide', 'ADJ'), ('IP', 'NOUN'), ('traffic', 'NOUN'), ('exceeds', 'VERB'), ('20', 'NUM'), ('exabytes', 'NOUN'), ('(', 'PUNCT'), ('20', 'NUM'), ('billion', 'NUM'), ('gigabytes', 'NOUN'), (')', 'PUNCT'), ('per', 'ADP'), ('month', 'NOUN')] 

 XPOS tags are: 
>> [('Worldwide', 'JJ'), ('IP', 'NN'), ('traffic', 'NN'), ('exceeds', 'VBZ'), ('20', 'CD'), ('exabytes', 'NNS'), ('(', '-LRB-'), ('20', 'CD'), ('billion', 'CD'), ('gigabytes', 'NNS'), (')', '-RRB-'), ('per', 'IN'), ('month', 'NN')] 

 Lemmas are: 
>> [('Worldwide', 'worldwide'), ('IP', 'ip'), ('traffic', 'traffic'), ('exceeds', 'exceed'), ('20', '20'), ('exabytes', 'exabyte'), ('(', '('), ('20', '20'), ('billion', 'billion'), ('gigabytes', 'gigabyte'), (')', ')'), ('per', 'per'), ('month', 'month')] 

 Dependency tags are: 
>> [(('Worldwide', 'traffic'), 'amod'), (('IP', 'traffic'), 'compound'), (('traffic', 'exceeds'), 'nsubj'), (('exceeds', 'root'), 'root'), (('20', 'exabytes'), 'nummod'), (('exabytes', 'exceeds'), 'obj'), (('(', 'gigabytes'), 'punct'), (('20', 'billion'), 'nummod'), (('billion', 'gigabytes'), 'nummod'), (('gigabytes', 'exabytes'), 'appos'), ((')', 'gigabytes'), 'punct'), (('per', 'month'), 'case'), (('month', 'exceeds'), 'obl')]

 Named Entites are: 
>> [('20 exabytes', 'QUANTITY'), ('20 billion gigabytes)', 'QUANTITY')]

================================ Paragraph 106 =================================

Facebook gets a billion users 


------------------- Sentence 1 -------------------

 Facebook gets a billion users 

Tokens are: 
>> ['Facebook', 'gets', 'a', 'billion', 'users'] 

 UPOS tags are: 
>> [('Facebook', 'PROPN'), ('gets', 'VERB'), ('a', 'DET'), ('billion', 'NUM'), ('users', 'NOUN')] 

 XPOS tags are: 
>> [('Facebook', 'NNP'), ('gets', 'VBZ'), ('a', 'DT'), ('billion', 'CD'), ('users', 'NNS')] 

 Lemmas are: 
>> [('Facebook', 'Facebook'), ('gets', 'get'), ('a', 'a'), ('billion', 'billion'), ('users', 'user')] 

 Dependency tags are: 
>> [(('Facebook', 'gets'), 'nsubj'), (('gets', 'root'), 'root'), (('a', 'users'), 'det'), (('billion', 'users'), 'nummod'), (('users', 'gets'), 'obj')]

 Named Entites are: 
>> [('Facebook', 'ORG'), ('a billion', 'CARDINAL')]

================================ Paragraph 107 =================================

There are more mobile devices than humans in the world 


------------------- Sentence 1 -------------------

 There are more mobile devices than humans in the world 

Tokens are: 
>> ['There', 'are', 'more', 'mobile', 'devices', 'than', 'humans', 'in', 'the', 'world'] 

 UPOS tags are: 
>> [('There', 'PRON'), ('are', 'VERB'), ('more', 'ADV'), ('mobile', 'ADJ'), ('devices', 'NOUN'), ('than', 'ADP'), ('humans', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('world', 'NOUN')] 

 XPOS tags are: 
>> [('There', 'EX'), ('are', 'VBP'), ('more', 'RBR'), ('mobile', 'JJ'), ('devices', 'NNS'), ('than', 'IN'), ('humans', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('world', 'NN')] 

 Lemmas are: 
>> [('There', 'there'), ('are', 'be'), ('more', 'more'), ('mobile', 'mobile'), ('devices', 'device'), ('than', 'than'), ('humans', 'human'), ('in', 'in'), ('the', 'the'), ('world', 'world')] 

 Dependency tags are: 
>> [(('There', 'are'), 'expl'), (('are', 'root'), 'root'), (('more', 'mobile'), 'advmod'), (('mobile', 'devices'), 'amod'), (('devices', 'are'), 'nsubj'), (('than', 'humans'), 'case'), (('humans', 'devices'), 'nmod'), (('in', 'world'), 'case'), (('the', 'world'), 'det'), (('world', 'humans'), 'nmod')]

 Named Entites are: 
>> []

================================ Paragraph 108 =================================

Project debater of IBM shows ability to process very large data  sets, including millions of news articles across dozens of subjects,  and then turn snippets of arguments into full flowing prose—a  challenging task for a computer 


------------------- Sentence 1 -------------------

 Project debater of IBM shows ability to process very large data  sets, including millions of news articles across dozens of subjects,  and then turn snippets of arguments into full flowing prose—a  challenging task for a computer 

Tokens are: 
>> ['Project', 'debater', 'of', 'IBM', 'shows', 'ability', 'to', 'process', 'very', 'large', 'data', 'sets', ',', 'including', 'millions', 'of', 'news', 'articles', 'across', 'dozens', 'of', 'subjects', ',', 'and', 'then', 'turn', 'snippets', 'of', 'arguments', 'into', 'full', 'flowing', 'prose', '—', 'a', 'challenging', 'task', 'for', 'a', 'computer'] 

 UPOS tags are: 
>> [('Project', 'NOUN'), ('debater', 'NOUN'), ('of', 'ADP'), ('IBM', 'PROPN'), ('shows', 'VERB'), ('ability', 'NOUN'), ('to', 'PART'), ('process', 'VERB'), ('very', 'ADV'), ('large', 'ADJ'), ('data', 'NOUN'), ('sets', 'NOUN'), (',', 'PUNCT'), ('including', 'VERB'), ('millions', 'NOUN'), ('of', 'ADP'), ('news', 'NOUN'), ('articles', 'NOUN'), ('across', 'ADP'), ('dozens', 'NOUN'), ('of', 'ADP'), ('subjects', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('then', 'ADV'), ('turn', 'VERB'), ('snippets', 'NOUN'), ('of', 'ADP'), ('arguments', 'NOUN'), ('into', 'ADP'), ('full', 'ADJ'), ('flowing', 'NOUN'), ('prose', 'NOUN'), ('—', 'PUNCT'), ('a', 'DET'), ('challenging', 'ADJ'), ('task', 'NOUN'), ('for', 'ADP'), ('a', 'DET'), ('computer', 'NOUN')] 

 XPOS tags are: 
>> [('Project', 'NN'), ('debater', 'NN'), ('of', 'IN'), ('IBM', 'NNP'), ('shows', 'VBZ'), ('ability', 'NN'), ('to', 'TO'), ('process', 'VB'), ('very', 'RB'), ('large', 'JJ'), ('data', 'NN'), ('sets', 'NNS'), (',', ','), ('including', 'VBG'), ('millions', 'NNS'), ('of', 'IN'), ('news', 'NN'), ('articles', 'NNS'), ('across', 'IN'), ('dozens', 'NNS'), ('of', 'IN'), ('subjects', 'NNS'), (',', ','), ('and', 'CC'), ('then', 'RB'), ('turn', 'VB'), ('snippets', 'NNS'), ('of', 'IN'), ('arguments', 'NNS'), ('into', 'IN'), ('full', 'JJ'), ('flowing', 'NN'), ('prose', 'NN'), ('—', ':'), ('a', 'DT'), ('challenging', 'JJ'), ('task', 'NN'), ('for', 'IN'), ('a', 'DT'), ('computer', 'NN')] 

 Lemmas are: 
>> [('Project', 'project'), ('debater', 'debater'), ('of', 'of'), ('IBM', 'IBM'), ('shows', 'show'), ('ability', 'ability'), ('to', 'to'), ('process', 'process'), ('very', 'very'), ('large', 'large'), ('data', 'datum'), ('sets', 'set'), (',', ','), ('including', 'include'), ('millions', 'million'), ('of', 'of'), ('news', 'news'), ('articles', 'article'), ('across', 'across'), ('dozens', 'dozen'), ('of', 'of'), ('subjects', 'subject'), (',', ','), ('and', 'and'), ('then', 'then'), ('turn', 'turn'), ('snippets', 'snippet'), ('of', 'of'), ('arguments', 'argument'), ('into', 'into'), ('full', 'full'), ('flowing', 'flow'), ('prose', 'prose'), ('—', '—'), ('a', 'a'), ('challenging', 'challenging'), ('task', 'task'), ('for', 'for'), ('a', 'a'), ('computer', 'computer')] 

 Dependency tags are: 
>> [(('Project', 'debater'), 'compound'), (('debater', 'shows'), 'nsubj'), (('of', 'IBM'), 'case'), (('IBM', 'debater'), 'nmod'), (('shows', 'root'), 'root'), (('ability', 'shows'), 'obj'), (('to', 'process'), 'mark'), (('process', 'ability'), 'acl'), (('very', 'large'), 'advmod'), (('large', 'sets'), 'amod'), (('data', 'sets'), 'compound'), (('sets', 'process'), 'obj'), ((',', 'sets'), 'punct'), (('including', 'millions'), 'case'), (('millions', 'sets'), 'nmod'), (('of', 'articles'), 'case'), (('news', 'articles'), 'compound'), (('articles', 'millions'), 'nmod'), (('across', 'dozens'), 'case'), (('dozens', 'articles'), 'nmod'), (('of', 'subjects'), 'case'), (('subjects', 'dozens'), 'nmod'), ((',', 'turn'), 'punct'), (('and', 'turn'), 'cc'), (('then', 'turn'), 'advmod'), (('turn', 'shows'), 'conj'), (('snippets', 'turn'), 'obj'), (('of', 'arguments'), 'case'), (('arguments', 'snippets'), 'nmod'), (('into', 'prose'), 'case'), (('full', 'prose'), 'amod'), (('flowing', 'prose'), 'amod'), (('prose', 'arguments'), 'nmod'), (('—', 'task'), 'punct'), (('a', 'task'), 'det'), (('challenging', 'task'), 'amod'), (('task', 'prose'), 'appos'), (('for', 'computer'), 'case'), (('a', 'computer'), 'det'), (('computer', 'task'), 'nmod')]

 Named Entites are: 
>> [('IBM', 'ORG'), ('millions', 'CARDINAL'), ('dozens', 'CARDINAL')]

================================ Paragraph 109 =================================

1950 


------------------- Sentence 1 -------------------

 1950 

Tokens are: 
>> ['1950'] 

 UPOS tags are: 
>> [('1950', 'NUM')] 

 XPOS tags are: 
>> [('1950', 'CD')] 

 Lemmas are: 
>> [('1950', '1950')] 

 Dependency tags are: 
>> [(('1950', 'root'), 'root')]

 Named Entites are: 
>> [('1950', 'DATE')]

================================ Paragraph 110 =================================

1955 


------------------- Sentence 1 -------------------

 1955 

Tokens are: 
>> ['1955'] 

 UPOS tags are: 
>> [('1955', 'NUM')] 

 XPOS tags are: 
>> [('1955', 'CD')] 

 Lemmas are: 
>> [('1955', '1955')] 

 Dependency tags are: 
>> [(('1955', 'root'), 'root')]

 Named Entites are: 
>> [('1955', 'DATE')]

================================ Paragraph 111 =================================

1956 


------------------- Sentence 1 -------------------

 1956 

Tokens are: 
>> ['1956'] 

 UPOS tags are: 
>> [('1956', 'NUM')] 

 XPOS tags are: 
>> [('1956', 'CD')] 

 Lemmas are: 
>> [('1956', '1956')] 

 Dependency tags are: 
>> [(('1956', 'root'), 'root')]

 Named Entites are: 
>> [('1956', 'DATE')]

================================ Paragraph 112 =================================

1957 


------------------- Sentence 1 -------------------

 1957 

Tokens are: 
>> ['1957'] 

 UPOS tags are: 
>> [('1957', 'NUM')] 

 XPOS tags are: 
>> [('1957', 'CD')] 

 Lemmas are: 
>> [('1957', '1957')] 

 Dependency tags are: 
>> [(('1957', 'root'), 'root')]

 Named Entites are: 
>> [('1957', 'DATE')]

================================ Paragraph 113 =================================

1958 


------------------- Sentence 1 -------------------

 1958 

Tokens are: 
>> ['1958'] 

 UPOS tags are: 
>> [('1958', 'NUM')] 

 XPOS tags are: 
>> [('1958', 'CD')] 

 Lemmas are: 
>> [('1958', '1958')] 

 Dependency tags are: 
>> [(('1958', 'root'), 'root')]

 Named Entites are: 
>> [('1958', 'DATE')]

================================ Paragraph 114 =================================

1969 


------------------- Sentence 1 -------------------

 1969 

Tokens are: 
>> ['1969'] 

 UPOS tags are: 
>> [('1969', 'NUM')] 

 XPOS tags are: 
>> [('1969', 'CD')] 

 Lemmas are: 
>> [('1969', '1969')] 

 Dependency tags are: 
>> [(('1969', 'root'), 'root')]

 Named Entites are: 
>> [('1969', 'DATE')]

================================ Paragraph 115 =================================

1970 


------------------- Sentence 1 -------------------

 1970 

Tokens are: 
>> ['1970'] 

 UPOS tags are: 
>> [('1970', 'NUM')] 

 XPOS tags are: 
>> [('1970', 'CD')] 

 Lemmas are: 
>> [('1970', '1970')] 

 Dependency tags are: 
>> [(('1970', 'root'), 'root')]

 Named Entites are: 
>> [('1970', 'DATE')]

================================ Paragraph 116 =================================

1974 


------------------- Sentence 1 -------------------

 1974 

Tokens are: 
>> ['1974'] 

 UPOS tags are: 
>> [('1974', 'NUM')] 

 XPOS tags are: 
>> [('1974', 'CD')] 

 Lemmas are: 
>> [('1974', '1974')] 

 Dependency tags are: 
>> [(('1974', 'root'), 'root')]

 Named Entites are: 
>> [('1974', 'DATE')]

================================ Paragraph 117 =================================

1974-1980 


------------------- Sentence 1 -------------------

 1974-1980 

Tokens are: 
>> ['1974-1980'] 

 UPOS tags are: 
>> [('1974-1980', 'NUM')] 

 XPOS tags are: 
>> [('1974-1980', 'CD')] 

 Lemmas are: 
>> [('1974-1980', '1974-1980')] 

 Dependency tags are: 
>> [(('1974-1980', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 118 =================================

1985 


------------------- Sentence 1 -------------------

 1985 

Tokens are: 
>> ['1985'] 

 UPOS tags are: 
>> [('1985', 'NUM')] 

 XPOS tags are: 
>> [('1985', 'CD')] 

 Lemmas are: 
>> [('1985', '1985')] 

 Dependency tags are: 
>> [(('1985', 'root'), 'root')]

 Named Entites are: 
>> [('1985', 'DATE')]

================================ Paragraph 119 =================================

1989 


------------------- Sentence 1 -------------------

 1989 

Tokens are: 
>> ['1989'] 

 UPOS tags are: 
>> [('1989', 'NUM')] 

 XPOS tags are: 
>> [('1989', 'CD')] 

 Lemmas are: 
>> [('1989', '1989')] 

 Dependency tags are: 
>> [(('1989', 'root'), 'root')]

 Named Entites are: 
>> [('1989', 'DATE')]

================================ Paragraph 120 =================================

1991 


------------------- Sentence 1 -------------------

 1991 

Tokens are: 
>> ['1991'] 

 UPOS tags are: 
>> [('1991', 'NUM')] 

 XPOS tags are: 
>> [('1991', 'CD')] 

 Lemmas are: 
>> [('1991', '1991')] 

 Dependency tags are: 
>> [(('1991', 'root'), 'root')]

 Named Entites are: 
>> [('1991', 'DATE')]

================================ Paragraph 121 =================================

1992 


------------------- Sentence 1 -------------------

 1992 

Tokens are: 
>> ['1992'] 

 UPOS tags are: 
>> [('1992', 'NUM')] 

 XPOS tags are: 
>> [('1992', 'CD')] 

 Lemmas are: 
>> [('1992', '1992')] 

 Dependency tags are: 
>> [(('1992', 'root'), 'root')]

 Named Entites are: 
>> [('1992', 'DATE')]

================================ Paragraph 122 =================================

1997 


------------------- Sentence 1 -------------------

 1997 

Tokens are: 
>> ['1997'] 

 UPOS tags are: 
>> [('1997', 'NUM')] 

 XPOS tags are: 
>> [('1997', 'CD')] 

 Lemmas are: 
>> [('1997', '1997')] 

 Dependency tags are: 
>> [(('1997', 'root'), 'root')]

 Named Entites are: 
>> [('1997', 'DATE')]

================================ Paragraph 123 =================================

1998 


------------------- Sentence 1 -------------------

 1998 

Tokens are: 
>> ['1998'] 

 UPOS tags are: 
>> [('1998', 'NUM')] 

 XPOS tags are: 
>> [('1998', 'CD')] 

 Lemmas are: 
>> [('1998', '1998')] 

 Dependency tags are: 
>> [(('1998', 'root'), 'root')]

 Named Entites are: 
>> [('1998', 'DATE')]

================================ Paragraph 124 =================================

2000 


------------------- Sentence 1 -------------------

 2000 

Tokens are: 
>> ['2000'] 

 UPOS tags are: 
>> [('2000', 'NUM')] 

 XPOS tags are: 
>> [('2000', 'CD')] 

 Lemmas are: 
>> [('2000', '2000')] 

 Dependency tags are: 
>> [(('2000', 'root'), 'root')]

 Named Entites are: 
>> [('2000', 'DATE')]

================================ Paragraph 125 =================================

2002 


------------------- Sentence 1 -------------------

 2002 

Tokens are: 
>> ['2002'] 

 UPOS tags are: 
>> [('2002', 'NUM')] 

 XPOS tags are: 
>> [('2002', 'CD')] 

 Lemmas are: 
>> [('2002', '2002')] 

 Dependency tags are: 
>> [(('2002', 'root'), 'root')]

 Named Entites are: 
>> [('2002', 'DATE')]

================================ Paragraph 126 =================================

2004 


------------------- Sentence 1 -------------------

 2004 

Tokens are: 
>> ['2004'] 

 UPOS tags are: 
>> [('2004', 'NUM')] 

 XPOS tags are: 
>> [('2004', 'CD')] 

 Lemmas are: 
>> [('2004', '2004')] 

 Dependency tags are: 
>> [(('2004', 'root'), 'root')]

 Named Entites are: 
>> [('2004', 'DATE')]

================================ Paragraph 127 =================================

2005 


------------------- Sentence 1 -------------------

 2005 

Tokens are: 
>> ['2005'] 

 UPOS tags are: 
>> [('2005', 'NUM')] 

 XPOS tags are: 
>> [('2005', 'CD')] 

 Lemmas are: 
>> [('2005', '2005')] 

 Dependency tags are: 
>> [(('2005', 'root'), 'root')]

 Named Entites are: 
>> [('2005', 'DATE')]

================================ Paragraph 128 =================================

2006 


------------------- Sentence 1 -------------------

 2006 

Tokens are: 
>> ['2006'] 

 UPOS tags are: 
>> [('2006', 'NUM')] 

 XPOS tags are: 
>> [('2006', 'CD')] 

 Lemmas are: 
>> [('2006', '2006')] 

 Dependency tags are: 
>> [(('2006', 'root'), 'root')]

 Named Entites are: 
>> [('2006', 'DATE')]

================================ Paragraph 129 =================================

2010 


------------------- Sentence 1 -------------------

 2010 

Tokens are: 
>> ['2010'] 

 UPOS tags are: 
>> [('2010', 'NUM')] 

 XPOS tags are: 
>> [('2010', 'CD')] 

 Lemmas are: 
>> [('2010', '2010')] 

 Dependency tags are: 
>> [(('2010', 'root'), 'root')]

 Named Entites are: 
>> [('2010', 'DATE')]

================================ Paragraph 130 =================================

2012 


------------------- Sentence 1 -------------------

 2012 

Tokens are: 
>> ['2012'] 

 UPOS tags are: 
>> [('2012', 'NUM')] 

 XPOS tags are: 
>> [('2012', 'CD')] 

 Lemmas are: 
>> [('2012', '2012')] 

 Dependency tags are: 
>> [(('2012', 'root'), 'root')]

 Named Entites are: 
>> [('2012', 'DATE')]

================================ Paragraph 131 =================================

2014 


------------------- Sentence 1 -------------------

 2014 

Tokens are: 
>> ['2014'] 

 UPOS tags are: 
>> [('2014', 'NUM')] 

 XPOS tags are: 
>> [('2014', 'CD')] 

 Lemmas are: 
>> [('2014', '2014')] 

 Dependency tags are: 
>> [(('2014', 'root'), 'root')]

 Named Entites are: 
>> [('2014', 'DATE')]

================================ Paragraph 132 =================================

2018


------------------- Sentence 1 -------------------

 2018 

Tokens are: 
>> ['2018'] 

 UPOS tags are: 
>> [('2018', 'NUM')] 

 XPOS tags are: 
>> [('2018', 'CD')] 

 Lemmas are: 
>> [('2018', '2018')] 

 Dependency tags are: 
>> [(('2018', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 133 =================================

IBM Services     7 


------------------- Sentence 1 -------------------

 IBM Services     7 

Tokens are: 
>> ['IBM', 'Services', '7'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('Services', 'PROPN'), ('7', 'NUM')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('Services', 'NNPS'), ('7', 'CD')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('Services', 'Service'), ('7', '7')] 

 Dependency tags are: 
>> [(('IBM', 'Services'), 'compound'), (('Services', 'root'), 'root'), (('7', 'Services'), 'nummod')]

 Named Entites are: 
>> [('IBM Services', 'ORG')]

================================ Paragraph 134 =================================

Where are we today with AI?  We can split the term AI into three categories: general,  broad and narrow. General AI encompasses all the human- like capabilities, whereas narrow AI can only do a certain  task—and it can do it quite well—but narrow AI can’t  transfer its knowledge to different sorts of problems.  


------------------- Sentence 1 -------------------

 Where are we today with AI? 

Tokens are: 
>> ['Where', 'are', 'we', 'today', 'with', 'AI', '?'] 

 UPOS tags are: 
>> [('Where', 'ADV'), ('are', 'AUX'), ('we', 'PRON'), ('today', 'NOUN'), ('with', 'ADP'), ('AI', 'PROPN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Where', 'WRB'), ('are', 'VBP'), ('we', 'PRP'), ('today', 'NN'), ('with', 'IN'), ('AI', 'NNP'), ('?', '.')] 

 Lemmas are: 
>> [('Where', 'where'), ('are', 'be'), ('we', 'we'), ('today', 'today'), ('with', 'with'), ('AI', 'AI'), ('?', '?')] 

 Dependency tags are: 
>> [(('Where', 'root'), 'root'), (('are', 'Where'), 'cop'), (('we', 'Where'), 'nsubj'), (('today', 'Where'), 'obl:tmod'), (('with', 'AI'), 'case'), (('AI', 'Where'), 'obl'), (('?', 'Where'), 'punct')]

 Named Entites are: 
>> [('today', 'DATE'), ('AI', 'ORG')]

------------------- Sentence 2 -------------------

 We can split the term AI into three categories: general,  broad and narrow. 

Tokens are: 
>> ['We', 'can', 'split', 'the', 'term', 'AI', 'into', 'three', 'categories', ':', 'general', ',', 'broad', 'and', 'narrow', '.'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('can', 'AUX'), ('split', 'VERB'), ('the', 'DET'), ('term', 'NOUN'), ('AI', 'NOUN'), ('into', 'ADP'), ('three', 'NUM'), ('categories', 'NOUN'), (':', 'PUNCT'), ('general', 'ADJ'), (',', 'PUNCT'), ('broad', 'ADJ'), ('and', 'CCONJ'), ('narrow', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('can', 'MD'), ('split', 'VB'), ('the', 'DT'), ('term', 'NN'), ('AI', 'NN'), ('into', 'IN'), ('three', 'CD'), ('categories', 'NNS'), (':', ':'), ('general', 'JJ'), (',', ','), ('broad', 'JJ'), ('and', 'CC'), ('narrow', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('can', 'can'), ('split', 'split'), ('the', 'the'), ('term', 'term'), ('AI', 'ai'), ('into', 'into'), ('three', 'three'), ('categories', 'category'), (':', ':'), ('general', 'general'), (',', ','), ('broad', 'broad'), ('and', 'and'), ('narrow', 'narrow'), ('.', '.')] 

 Dependency tags are: 
>> [(('We', 'split'), 'nsubj'), (('can', 'split'), 'aux'), (('split', 'root'), 'root'), (('the', 'AI'), 'det'), (('term', 'AI'), 'compound'), (('AI', 'split'), 'obj'), (('into', 'categories'), 'case'), (('three', 'categories'), 'nummod'), (('categories', 'split'), 'obl'), ((':', 'general'), 'punct'), (('general', 'categories'), 'appos'), ((',', 'broad'), 'punct'), (('broad', 'general'), 'conj'), (('and', 'narrow'), 'cc'), (('narrow', 'general'), 'conj'), (('.', 'split'), 'punct')]

 Named Entites are: 
>> [('three', 'CARDINAL')]

------------------- Sentence 3 -------------------

 General AI encompasses all the human- like capabilities, whereas narrow AI can only do a certain  task—and it can do it quite well—but narrow AI can’t  transfer its knowledge to different sorts of problems. 

Tokens are: 
>> ['General', 'AI', 'encompasses', 'all', 'the', 'human', '-', 'like', 'capabilities', ',', 'whereas', 'narrow', 'AI', 'can', 'only', 'do', 'a', 'certain', 'task', '—', 'and', 'it', 'can', 'do', 'it', 'quite', 'well', '—', 'but', 'narrow', 'AI', 'ca', 'n’t', 'transfer', 'its', 'knowledge', 'to', 'different', 'sorts', 'of', 'problems', '.'] 

 UPOS tags are: 
>> [('General', 'PROPN'), ('AI', 'NOUN'), ('encompasses', 'VERB'), ('all', 'PRON'), ('the', 'DET'), ('human', 'ADJ'), ('-', 'PUNCT'), ('like', 'ADP'), ('capabilities', 'NOUN'), (',', 'PUNCT'), ('whereas', 'SCONJ'), ('narrow', 'ADJ'), ('AI', 'NOUN'), ('can', 'AUX'), ('only', 'ADV'), ('do', 'VERB'), ('a', 'DET'), ('certain', 'ADJ'), ('task', 'NOUN'), ('—', 'PUNCT'), ('and', 'CCONJ'), ('it', 'PRON'), ('can', 'AUX'), ('do', 'VERB'), ('it', 'PRON'), ('quite', 'ADV'), ('well', 'ADV'), ('—', 'PUNCT'), ('but', 'CCONJ'), ('narrow', 'ADJ'), ('AI', 'PRON'), ('ca', 'AUX'), ('n’t', 'PART'), ('transfer', 'VERB'), ('its', 'PRON'), ('knowledge', 'NOUN'), ('to', 'ADP'), ('different', 'ADJ'), ('sorts', 'NOUN'), ('of', 'ADP'), ('problems', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('General', 'NNP'), ('AI', 'NN'), ('encompasses', 'VBZ'), ('all', 'PDT'), ('the', 'DT'), ('human', 'JJ'), ('-', 'HYPH'), ('like', 'IN'), ('capabilities', 'NNS'), (',', ','), ('whereas', 'IN'), ('narrow', 'JJ'), ('AI', 'NNS'), ('can', 'MD'), ('only', 'RB'), ('do', 'VB'), ('a', 'DT'), ('certain', 'JJ'), ('task', 'NN'), ('—', ':'), ('and', 'CC'), ('it', 'PRP'), ('can', 'MD'), ('do', 'VB'), ('it', 'PRP'), ('quite', 'RB'), ('well', 'RB'), ('—', ':'), ('but', 'CC'), ('narrow', 'JJ'), ('AI', 'PRP'), ('ca', 'MD'), ('n’t', 'RB'), ('transfer', 'VB'), ('its', 'PRP$'), ('knowledge', 'NN'), ('to', 'IN'), ('different', 'JJ'), ('sorts', 'NNS'), ('of', 'IN'), ('problems', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('General', 'General'), ('AI', 'ai'), ('encompasses', 'encompass'), ('all', 'all'), ('the', 'the'), ('human', 'human'), ('-', '-'), ('like', 'like'), ('capabilities', 'capability'), (',', ','), ('whereas', 'whereas'), ('narrow', 'narrow'), ('AI', 'ai'), ('can', 'can'), ('only', 'only'), ('do', 'do'), ('a', 'a'), ('certain', 'certain'), ('task', 'task'), ('—', '—'), ('and', 'and'), ('it', 'it'), ('can', 'can'), ('do', 'do'), ('it', 'it'), ('quite', 'quite'), ('well', 'well'), ('—', '—'), ('but', 'but'), ('narrow', 'narrow'), ('AI', 'ai'), ('ca', 'can'), ('n’t', 'not'), ('transfer', 'transfer'), ('its', 'its'), ('knowledge', 'knowledge'), ('to', 'to'), ('different', 'different'), ('sorts', 'sort'), ('of', 'of'), ('problems', 'problem'), ('.', '.')] 

 Dependency tags are: 
>> [(('General', 'AI'), 'compound'), (('AI', 'encompasses'), 'nsubj'), (('encompasses', 'root'), 'root'), (('all', 'capabilities'), 'det:predet'), (('the', 'capabilities'), 'det'), (('human', 'like'), 'amod'), (('-', 'like'), 'punct'), (('like', 'capabilities'), 'compound'), (('capabilities', 'encompasses'), 'obj'), ((',', 'do'), 'punct'), (('whereas', 'do'), 'mark'), (('narrow', 'AI'), 'amod'), (('AI', 'do'), 'nsubj'), (('can', 'do'), 'aux'), (('only', 'do'), 'advmod'), (('do', 'encompasses'), 'advcl'), (('a', 'task'), 'det'), (('certain', 'task'), 'amod'), (('task', 'do'), 'obj'), (('—', 'do'), 'punct'), (('and', 'do'), 'cc'), (('it', 'do'), 'nsubj'), (('can', 'do'), 'aux'), (('do', 'encompasses'), 'conj'), (('it', 'do'), 'obj'), (('quite', 'well'), 'advmod'), (('well', 'do'), 'advmod'), (('—', 'transfer'), 'punct'), (('but', 'transfer'), 'cc'), (('narrow', 'transfer'), 'advmod'), (('AI', 'transfer'), 'nsubj'), (('ca', 'transfer'), 'aux'), (('n’t', 'transfer'), 'advmod'), (('transfer', 'encompasses'), 'conj'), (('its', 'knowledge'), 'nmod:poss'), (('knowledge', 'transfer'), 'obj'), (('to', 'sorts'), 'case'), (('different', 'sorts'), 'amod'), (('sorts', 'transfer'), 'obl'), (('of', 'problems'), 'case'), (('problems', 'sorts'), 'nmod'), (('.', 'encompasses'), 'punct')]

 Named Entites are: 
>> [('General AI', 'ORG'), ('AI', 'ORG')]

================================ Paragraph 135 =================================

Narrow AI Narrow AI is focused on addressing very focused tasks  (such as buying a book with a voice-based device) based  on “common knowledge.” That’s the reason narrow AI is  scaling very quickly in the consumer world where there are  a lot of common tasks and data to train these systems.  Narrow or weak AI is, contrary to the naming, very powerful   at routine jobs.  


------------------- Sentence 1 -------------------

 Narrow AI Narrow AI is focused on addressing very focused tasks  (such as buying a book with a voice-based device) based  on “common knowledge.” 

Tokens are: 
>> ['Narrow', 'AI', 'Narrow', 'AI', 'is', 'focused', 'on', 'addressing', 'very', 'focused', 'tasks', '(', 'such', 'as', 'buying', 'a', 'book', 'with', 'a', 'voice', '-', 'based', 'device', ')', 'based', 'on', '“', 'common', 'knowledge', '.', '”'] 

 UPOS tags are: 
>> [('Narrow', 'ADJ'), ('AI', 'PART'), ('Narrow', 'ADJ'), ('AI', 'NOUN'), ('is', 'AUX'), ('focused', 'VERB'), ('on', 'SCONJ'), ('addressing', 'VERB'), ('very', 'ADV'), ('focused', 'VERB'), ('tasks', 'NOUN'), ('(', 'PUNCT'), ('such', 'ADJ'), ('as', 'SCONJ'), ('buying', 'VERB'), ('a', 'DET'), ('book', 'NOUN'), ('with', 'ADP'), ('a', 'DET'), ('voice', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('device', 'NOUN'), (')', 'PUNCT'), ('based', 'VERB'), ('on', 'ADP'), ('“', 'PUNCT'), ('common', 'ADJ'), ('knowledge', 'NOUN'), ('.', 'PUNCT'), ('”', 'PUNCT')] 

 XPOS tags are: 
>> [('Narrow', 'JJ'), ('AI', 'POS'), ('Narrow', 'JJ'), ('AI', 'NN'), ('is', 'VBZ'), ('focused', 'VBN'), ('on', 'IN'), ('addressing', 'VBG'), ('very', 'RB'), ('focused', 'VBN'), ('tasks', 'NNS'), ('(', '-LRB-'), ('such', 'JJ'), ('as', 'IN'), ('buying', 'VBG'), ('a', 'DT'), ('book', 'NN'), ('with', 'IN'), ('a', 'DT'), ('voice', 'NN'), ('-', 'HYPH'), ('based', 'VBN'), ('device', 'NN'), (')', '-RRB-'), ('based', 'VBN'), ('on', 'IN'), ('“', '``'), ('common', 'JJ'), ('knowledge', 'NN'), ('.', '.'), ('”', "''")] 

 Lemmas are: 
>> [('Narrow', 'narrow'), ('AI', 'ai'), ('Narrow', 'narrow'), ('AI', 'ai'), ('is', 'be'), ('focused', 'focus'), ('on', 'on'), ('addressing', 'address'), ('very', 'very'), ('focused', 'focus'), ('tasks', 'task'), ('(', '('), ('such', 'such'), ('as', 'as'), ('buying', 'buy'), ('a', 'a'), ('book', 'book'), ('with', 'with'), ('a', 'a'), ('voice', 'voice'), ('-', '-'), ('based', 'base'), ('device', 'device'), (')', ')'), ('based', 'base'), ('on', 'on'), ('“', "''"), ('common', 'common'), ('knowledge', 'knowledge'), ('.', '.'), ('”', "''")] 

 Dependency tags are: 
>> [(('Narrow', 'AI'), 'amod'), (('AI', 'Narrow'), 'cc'), (('Narrow', 'AI'), 'amod'), (('AI', 'focused'), 'nsubj:pass'), (('is', 'focused'), 'aux:pass'), (('focused', 'root'), 'root'), (('on', 'addressing'), 'mark'), (('addressing', 'focused'), 'advcl'), (('very', 'focused'), 'advmod'), (('focused', 'tasks'), 'amod'), (('tasks', 'addressing'), 'obj'), (('(', 'buying'), 'punct'), (('such', 'buying'), 'mark'), (('as', 'such'), 'fixed'), (('buying', 'addressing'), 'advcl'), (('a', 'book'), 'det'), (('book', 'buying'), 'obj'), (('with', 'device'), 'case'), (('a', 'device'), 'det'), (('voice', 'based'), 'compound'), (('-', 'based'), 'punct'), (('based', 'device'), 'amod'), (('device', 'book'), 'nmod'), ((')', 'buying'), 'punct'), (('based', 'buying'), 'advcl'), (('on', 'knowledge'), 'case'), (('“', 'knowledge'), 'punct'), (('common', 'knowledge'), 'amod'), (('knowledge', 'based'), 'obl'), (('.', 'knowledge'), 'punct'), (('”', 'knowledge'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 2 -------------------

 That’s the reason narrow AI is  scaling very quickly in the consumer world where there are  a lot of common tasks and data to train these systems. 

Tokens are: 
>> ['That', '’s', 'the', 'reason', 'narrow', 'AI', 'is', 'scaling', 'very', 'quickly', 'in', 'the', 'consumer', 'world', 'where', 'there', 'are', 'a', 'lot', 'of', 'common', 'tasks', 'and', 'data', 'to', 'train', 'these', 'systems', '.'] 

 UPOS tags are: 
>> [('That', 'PRON'), ('’s', 'AUX'), ('the', 'DET'), ('reason', 'NOUN'), ('narrow', 'ADJ'), ('AI', 'NOUN'), ('is', 'AUX'), ('scaling', 'VERB'), ('very', 'ADV'), ('quickly', 'ADV'), ('in', 'ADP'), ('the', 'DET'), ('consumer', 'NOUN'), ('world', 'NOUN'), ('where', 'SCONJ'), ('there', 'PRON'), ('are', 'VERB'), ('a', 'DET'), ('lot', 'NOUN'), ('of', 'ADP'), ('common', 'ADJ'), ('tasks', 'NOUN'), ('and', 'CCONJ'), ('data', 'NOUN'), ('to', 'PART'), ('train', 'VERB'), ('these', 'DET'), ('systems', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('That', 'DT'), ('’s', 'VBZ'), ('the', 'DT'), ('reason', 'NN'), ('narrow', 'JJ'), ('AI', 'NN'), ('is', 'VBZ'), ('scaling', 'VBG'), ('very', 'RB'), ('quickly', 'RB'), ('in', 'IN'), ('the', 'DT'), ('consumer', 'NN'), ('world', 'NN'), ('where', 'WRB'), ('there', 'EX'), ('are', 'VBP'), ('a', 'DT'), ('lot', 'NN'), ('of', 'IN'), ('common', 'JJ'), ('tasks', 'NNS'), ('and', 'CC'), ('data', 'NNS'), ('to', 'TO'), ('train', 'VB'), ('these', 'DT'), ('systems', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('That', 'that'), ('’s', 'be'), ('the', 'the'), ('reason', 'reason'), ('narrow', 'narrow'), ('AI', 'ai'), ('is', 'be'), ('scaling', 'scaling'), ('very', 'very'), ('quickly', 'quickly'), ('in', 'in'), ('the', 'the'), ('consumer', 'consumer'), ('world', 'world'), ('where', 'where'), ('there', 'there'), ('are', 'be'), ('a', 'a'), ('lot', 'lot'), ('of', 'of'), ('common', 'common'), ('tasks', 'task'), ('and', 'and'), ('data', 'datum'), ('to', 'to'), ('train', 'train'), ('these', 'this'), ('systems', 'system'), ('.', '.')] 

 Dependency tags are: 
>> [(('That', 'reason'), 'nsubj'), (('’s', 'reason'), 'cop'), (('the', 'reason'), 'det'), (('reason', 'root'), 'root'), (('narrow', 'reason'), 'amod'), (('AI', 'scaling'), 'nsubj'), (('is', 'scaling'), 'aux'), (('scaling', 'reason'), 'acl:relcl'), (('very', 'quickly'), 'advmod'), (('quickly', 'scaling'), 'advmod'), (('in', 'world'), 'case'), (('the', 'world'), 'det'), (('consumer', 'world'), 'compound'), (('world', 'scaling'), 'obl'), (('where', 'are'), 'mark'), (('there', 'are'), 'expl'), (('are', 'world'), 'acl:relcl'), (('a', 'lot'), 'det'), (('lot', 'are'), 'nsubj'), (('of', 'tasks'), 'case'), (('common', 'tasks'), 'amod'), (('tasks', 'lot'), 'nmod'), (('and', 'data'), 'cc'), (('data', 'tasks'), 'conj'), (('to', 'train'), 'mark'), (('train', 'are'), 'advcl'), (('these', 'systems'), 'det'), (('systems', 'train'), 'obj'), (('.', 'reason'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Narrow or weak AI is, contrary to the naming, very powerful   at routine jobs. 

Tokens are: 
>> ['Narrow', 'or', 'weak', 'AI', 'is', ',', 'contrary', 'to', 'the', 'naming', ',', 'very', 'powerful', 'at', 'routine', 'jobs', '.'] 

 UPOS tags are: 
>> [('Narrow', 'ADJ'), ('or', 'CCONJ'), ('weak', 'ADJ'), ('AI', 'NOUN'), ('is', 'AUX'), (',', 'PUNCT'), ('contrary', 'ADJ'), ('to', 'ADP'), ('the', 'DET'), ('naming', 'NOUN'), (',', 'PUNCT'), ('very', 'ADV'), ('powerful', 'ADJ'), ('at', 'ADP'), ('routine', 'NOUN'), ('jobs', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Narrow', 'JJ'), ('or', 'CC'), ('weak', 'JJ'), ('AI', 'NN'), ('is', 'VBZ'), (',', ','), ('contrary', 'JJ'), ('to', 'IN'), ('the', 'DT'), ('naming', 'NN'), (',', ','), ('very', 'RB'), ('powerful', 'JJ'), ('at', 'IN'), ('routine', 'NN'), ('jobs', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Narrow', 'narrow'), ('or', 'or'), ('weak', 'weak'), ('AI', 'ai'), ('is', 'be'), (',', ','), ('contrary', 'contrary'), ('to', 'to'), ('the', 'the'), ('naming', 'naming'), (',', ','), ('very', 'very'), ('powerful', 'powerful'), ('at', 'at'), ('routine', 'routine'), ('jobs', 'job'), ('.', '.')] 

 Dependency tags are: 
>> [(('Narrow', 'AI'), 'amod'), (('or', 'weak'), 'cc'), (('weak', 'Narrow'), 'conj'), (('AI', 'contrary'), 'nsubj'), (('is', 'contrary'), 'cop'), ((',', 'contrary'), 'punct'), (('contrary', 'root'), 'root'), (('to', 'naming'), 'case'), (('the', 'naming'), 'det'), (('naming', 'contrary'), 'obl'), ((',', 'powerful'), 'punct'), (('very', 'powerful'), 'advmod'), (('powerful', 'contrary'), 'conj'), (('at', 'jobs'), 'case'), (('routine', 'jobs'), 'compound'), (('jobs', 'powerful'), 'obl'), (('.', 'contrary'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 136 =================================

Figure 4: The three categories of AI. 


------------------- Sentence 1 -------------------

 Figure 4: The three categories of AI. 

Tokens are: 
>> ['Figure', '4', ':', 'The', 'three', 'categories', 'of', 'AI', '.'] 

 UPOS tags are: 
>> [('Figure', 'PROPN'), ('4', 'NUM'), (':', 'PUNCT'), ('The', 'DET'), ('three', 'NUM'), ('categories', 'NOUN'), ('of', 'ADP'), ('AI', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Figure', 'NNP'), ('4', 'CD'), (':', ':'), ('The', 'DT'), ('three', 'CD'), ('categories', 'NNS'), ('of', 'IN'), ('AI', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Figure', 'Figure'), ('4', '4'), (':', ':'), ('The', 'the'), ('three', 'three'), ('categories', 'category'), ('of', 'of'), ('AI', 'ai'), ('.', '.')] 

 Dependency tags are: 
>> [(('Figure', 'root'), 'root'), (('4', 'Figure'), 'dep'), ((':', 'categories'), 'punct'), (('The', 'categories'), 'det'), (('three', 'categories'), 'nummod'), (('categories', 'Figure'), 'appos'), (('of', 'AI'), 'case'), (('AI', 'categories'), 'nmod'), (('.', 'Figure'), 'punct')]

 Named Entites are: 
>> [('4', 'CARDINAL'), ('three', 'CARDINAL'), ('AI', 'ORG')]

================================ Paragraph 137 =================================

Narrow 


------------------- Sentence 1 -------------------

 Narrow 

Tokens are: 
>> ['Narrow'] 

 UPOS tags are: 
>> [('Narrow', 'ADJ')] 

 XPOS tags are: 
>> [('Narrow', 'JJ')] 

 Lemmas are: 
>> [('Narrow', 'narrow')] 

 Dependency tags are: 
>> [(('Narrow', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 138 =================================

2010-2015 


------------------- Sentence 1 -------------------

 2010-2015 

Tokens are: 
>> ['2010-2015'] 

 UPOS tags are: 
>> [('2010-2015', 'NUM')] 

 XPOS tags are: 
>> [('2010-2015', 'CD')] 

 Lemmas are: 
>> [('2010-2015', '2010-2015')] 

 Dependency tags are: 
>> [(('2010-2015', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 139 =================================

Broad   (AI for Enterprise) 


------------------- Sentence 1 -------------------

 Broad   (AI for Enterprise) 

Tokens are: 
>> ['Broad', '(', 'AI', 'for', 'Enterprise', ')'] 

 UPOS tags are: 
>> [('Broad', 'PROPN'), ('(', 'PUNCT'), ('AI', 'PROPN'), ('for', 'ADP'), ('Enterprise', 'PROPN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Broad', 'NNP'), ('(', '-LRB-'), ('AI', 'NNP'), ('for', 'IN'), ('Enterprise', 'NNP'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Broad', 'Broad'), ('(', '('), ('AI', 'AI'), ('for', 'for'), ('Enterprise', 'Enterprise'), (')', ')')] 

 Dependency tags are: 
>> [(('Broad', 'root'), 'root'), (('(', 'AI'), 'punct'), (('AI', 'Broad'), 'appos'), (('for', 'Enterprise'), 'case'), (('Enterprise', 'AI'), 'nmod'), ((')', 'AI'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 140 =================================

We are here 


------------------- Sentence 1 -------------------

 We are here 

Tokens are: 
>> ['We', 'are', 'here'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('are', 'AUX'), ('here', 'ADV')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('are', 'VBP'), ('here', 'RB')] 

 Lemmas are: 
>> [('We', 'we'), ('are', 'be'), ('here', 'here')] 

 Dependency tags are: 
>> [(('We', 'here'), 'nsubj'), (('are', 'here'), 'cop'), (('here', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 141 =================================

General AI 


------------------- Sentence 1 -------------------

 General AI 

Tokens are: 
>> ['General', 'AI'] 

 UPOS tags are: 
>> [('General', 'PROPN'), ('AI', 'PROPN')] 

 XPOS tags are: 
>> [('General', 'NNP'), ('AI', 'NNP')] 

 Lemmas are: 
>> [('General', 'General'), ('AI', 'AI')] 

 Dependency tags are: 
>> [(('General', 'AI'), 'compound'), (('AI', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 142 =================================

2050 and beyond 


------------------- Sentence 1 -------------------

 2050 and beyond 

Tokens are: 
>> ['2050', 'and', 'beyond'] 

 UPOS tags are: 
>> [('2050', 'NUM'), ('and', 'CCONJ'), ('beyond', 'ADV')] 

 XPOS tags are: 
>> [('2050', 'CD'), ('and', 'CC'), ('beyond', 'RB')] 

 Lemmas are: 
>> [('2050', '2050'), ('and', 'and'), ('beyond', 'beyond')] 

 Dependency tags are: 
>> [(('2050', 'root'), 'root'), (('and', 'beyond'), 'cc'), (('beyond', '2050'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 143 =================================

Broad AI What we see today in self driving cars is still defined as narrow  AI. You can see it as a collection of narrow AI systems that  make decisions. This is what we call broad AI. Another  example of broad AI includes a system within a bank that  analyzes the balance sheet of corporate customers to  recommend the best currency hedging strategy. Another  example would be a system that supports engineers who  work on complex maintenance tasks on a platform in the  middle of the Atlantic Ocean. Broad AI is about integrating  AI within a specific business process of an enterprise where  you need business- and enterprise-specific knowledge and  data to train this type of system. These tasks are very different  from the narrow AI used in the consumer world because the  data and knowledge available in the enterprise are much more  limited in terms of volumes, very industry specific and in most  of the cases private (for example owned by an enterprise).  This is what we believe is currently the most valuable type of  AI currently for the enterprise.  


------------------- Sentence 1 -------------------

 Broad AI 

Tokens are: 
>> ['Broad', 'AI'] 

 UPOS tags are: 
>> [('Broad', 'PROPN'), ('AI', 'PROPN')] 

 XPOS tags are: 
>> [('Broad', 'NNP'), ('AI', 'NNP')] 

 Lemmas are: 
>> [('Broad', 'Broad'), ('AI', 'AI')] 

 Dependency tags are: 
>> [(('Broad', 'AI'), 'compound'), (('AI', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 What we see today in self driving cars is still defined as narrow  AI. 

Tokens are: 
>> ['What', 'we', 'see', 'today', 'in', 'self', 'driving', 'cars', 'is', 'still', 'defined', 'as', 'narrow', 'AI', '.'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('we', 'PRON'), ('see', 'VERB'), ('today', 'NOUN'), ('in', 'ADP'), ('self', 'NOUN'), ('driving', 'NOUN'), ('cars', 'NOUN'), ('is', 'AUX'), ('still', 'ADV'), ('defined', 'VERB'), ('as', 'ADP'), ('narrow', 'ADJ'), ('AI', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('we', 'PRP'), ('see', 'VBP'), ('today', 'NN'), ('in', 'IN'), ('self', 'NN'), ('driving', 'NN'), ('cars', 'NNS'), ('is', 'VBZ'), ('still', 'RB'), ('defined', 'VBN'), ('as', 'IN'), ('narrow', 'JJ'), ('AI', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('we', 'we'), ('see', 'see'), ('today', 'today'), ('in', 'in'), ('self', 'self'), ('driving', 'driving'), ('cars', 'car'), ('is', 'be'), ('still', 'still'), ('defined', 'define'), ('as', 'as'), ('narrow', 'narrow'), ('AI', 'ai'), ('.', '.')] 

 Dependency tags are: 
>> [(('What', 'defined'), 'nsubj:pass'), (('we', 'see'), 'nsubj'), (('see', 'What'), 'acl:relcl'), (('today', 'see'), 'obl:tmod'), (('in', 'cars'), 'case'), (('self', 'cars'), 'compound'), (('driving', 'cars'), 'compound'), (('cars', 'see'), 'obl'), (('is', 'defined'), 'aux:pass'), (('still', 'defined'), 'advmod'), (('defined', 'root'), 'root'), (('as', 'AI'), 'case'), (('narrow', 'AI'), 'amod'), (('AI', 'defined'), 'obl'), (('.', 'defined'), 'punct')]

 Named Entites are: 
>> [('today', 'DATE')]

------------------- Sentence 3 -------------------

 You can see it as a collection of narrow AI systems that  make decisions. 

Tokens are: 
>> ['You', 'can', 'see', 'it', 'as', 'a', 'collection', 'of', 'narrow', 'AI', 'systems', 'that', 'make', 'decisions', '.'] 

 UPOS tags are: 
>> [('You', 'PRON'), ('can', 'AUX'), ('see', 'VERB'), ('it', 'PRON'), ('as', 'ADP'), ('a', 'DET'), ('collection', 'NOUN'), ('of', 'ADP'), ('narrow', 'ADJ'), ('AI', 'CCONJ'), ('systems', 'NOUN'), ('that', 'PRON'), ('make', 'VERB'), ('decisions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('You', 'PRP'), ('can', 'MD'), ('see', 'VB'), ('it', 'PRP'), ('as', 'IN'), ('a', 'DT'), ('collection', 'NN'), ('of', 'IN'), ('narrow', 'JJ'), ('AI', 'CC'), ('systems', 'NNS'), ('that', 'WDT'), ('make', 'VBP'), ('decisions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('You', 'you'), ('can', 'can'), ('see', 'see'), ('it', 'it'), ('as', 'as'), ('a', 'a'), ('collection', 'collection'), ('of', 'of'), ('narrow', 'narrow'), ('AI', 'ai'), ('systems', 'system'), ('that', 'that'), ('make', 'make'), ('decisions', 'decision'), ('.', '.')] 

 Dependency tags are: 
>> [(('You', 'see'), 'nsubj'), (('can', 'see'), 'aux'), (('see', 'root'), 'root'), (('it', 'see'), 'obj'), (('as', 'collection'), 'case'), (('a', 'collection'), 'det'), (('collection', 'see'), 'obl'), (('of', 'systems'), 'case'), (('narrow', 'systems'), 'amod'), (('AI', 'systems'), 'compound'), (('systems', 'collection'), 'nmod'), (('that', 'make'), 'nsubj'), (('make', 'systems'), 'acl:relcl'), (('decisions', 'make'), 'obj'), (('.', 'see'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 This is what we call broad AI. 

Tokens are: 
>> ['This', 'is', 'what', 'we', 'call', 'broad', 'AI', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('is', 'AUX'), ('what', 'PRON'), ('we', 'PRON'), ('call', 'VERB'), ('broad', 'PROPN'), ('AI', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('is', 'VBZ'), ('what', 'WP'), ('we', 'PRP'), ('call', 'VBP'), ('broad', 'NNP'), ('AI', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('is', 'be'), ('what', 'what'), ('we', 'we'), ('call', 'call'), ('broad', 'broad'), ('AI', 'AI'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'what'), 'nsubj'), (('is', 'what'), 'cop'), (('what', 'root'), 'root'), (('we', 'call'), 'nsubj'), (('call', 'what'), 'acl:relcl'), (('broad', 'AI'), 'compound'), (('AI', 'call'), 'obj'), (('.', 'what'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 5 -------------------

 Another  example of broad AI includes a system within a bank that  analyzes the balance sheet of corporate customers to  recommend the best currency hedging strategy. 

Tokens are: 
>> ['Another', 'example', 'of', 'broad', 'AI', 'includes', 'a', 'system', 'within', 'a', 'bank', 'that', 'analyzes', 'the', 'balance', 'sheet', 'of', 'corporate', 'customers', 'to', 'recommend', 'the', 'best', 'currency', 'hedging', 'strategy', '.'] 

 UPOS tags are: 
>> [('Another', 'DET'), ('example', 'NOUN'), ('of', 'ADP'), ('broad', 'PROPN'), ('AI', 'NOUN'), ('includes', 'VERB'), ('a', 'DET'), ('system', 'NOUN'), ('within', 'ADP'), ('a', 'DET'), ('bank', 'NOUN'), ('that', 'PRON'), ('analyzes', 'VERB'), ('the', 'DET'), ('balance', 'NOUN'), ('sheet', 'NOUN'), ('of', 'ADP'), ('corporate', 'ADJ'), ('customers', 'NOUN'), ('to', 'PART'), ('recommend', 'VERB'), ('the', 'DET'), ('best', 'ADJ'), ('currency', 'NOUN'), ('hedging', 'NOUN'), ('strategy', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Another', 'DT'), ('example', 'NN'), ('of', 'IN'), ('broad', 'NNP'), ('AI', 'NN'), ('includes', 'VBZ'), ('a', 'DT'), ('system', 'NN'), ('within', 'IN'), ('a', 'DT'), ('bank', 'NN'), ('that', 'WDT'), ('analyzes', 'VBZ'), ('the', 'DT'), ('balance', 'NN'), ('sheet', 'NN'), ('of', 'IN'), ('corporate', 'JJ'), ('customers', 'NNS'), ('to', 'TO'), ('recommend', 'VB'), ('the', 'DT'), ('best', 'JJS'), ('currency', 'NN'), ('hedging', 'NN'), ('strategy', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Another', 'another'), ('example', 'example'), ('of', 'of'), ('broad', 'broad'), ('AI', 'ai'), ('includes', 'include'), ('a', 'a'), ('system', 'system'), ('within', 'within'), ('a', 'a'), ('bank', 'bank'), ('that', 'that'), ('analyzes', 'analyze'), ('the', 'the'), ('balance', 'balance'), ('sheet', 'sheet'), ('of', 'of'), ('corporate', 'corporate'), ('customers', 'customer'), ('to', 'to'), ('recommend', 'recommend'), ('the', 'the'), ('best', 'good'), ('currency', 'currency'), ('hedging', 'hedge'), ('strategy', 'strategy'), ('.', '.')] 

 Dependency tags are: 
>> [(('Another', 'example'), 'det'), (('example', 'includes'), 'nsubj'), (('of', 'AI'), 'case'), (('broad', 'AI'), 'compound'), (('AI', 'example'), 'nmod'), (('includes', 'root'), 'root'), (('a', 'system'), 'det'), (('system', 'includes'), 'obj'), (('within', 'bank'), 'case'), (('a', 'bank'), 'det'), (('bank', 'system'), 'nmod'), (('that', 'analyzes'), 'nsubj'), (('analyzes', 'bank'), 'acl:relcl'), (('the', 'sheet'), 'det'), (('balance', 'sheet'), 'compound'), (('sheet', 'analyzes'), 'obj'), (('of', 'customers'), 'case'), (('corporate', 'customers'), 'amod'), (('customers', 'sheet'), 'nmod'), (('to', 'recommend'), 'mark'), (('recommend', 'analyzes'), 'advcl'), (('the', 'strategy'), 'det'), (('best', 'strategy'), 'amod'), (('currency', 'hedging'), 'compound'), (('hedging', 'strategy'), 'compound'), (('strategy', 'recommend'), 'obj'), (('.', 'includes'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 6 -------------------

 Another  example would be a system that supports engineers who  work on complex maintenance tasks on a platform in the  middle of the Atlantic Ocean. 

Tokens are: 
>> ['Another', 'example', 'would', 'be', 'a', 'system', 'that', 'supports', 'engineers', 'who', 'work', 'on', 'complex', 'maintenance', 'tasks', 'on', 'a', 'platform', 'in', 'the', 'middle', 'of', 'the', 'Atlantic', 'Ocean', '.'] 

 UPOS tags are: 
>> [('Another', 'DET'), ('example', 'NOUN'), ('would', 'AUX'), ('be', 'AUX'), ('a', 'DET'), ('system', 'NOUN'), ('that', 'PRON'), ('supports', 'VERB'), ('engineers', 'NOUN'), ('who', 'PRON'), ('work', 'VERB'), ('on', 'ADP'), ('complex', 'ADJ'), ('maintenance', 'NOUN'), ('tasks', 'NOUN'), ('on', 'ADP'), ('a', 'DET'), ('platform', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('middle', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('Atlantic', 'ADJ'), ('Ocean', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Another', 'DT'), ('example', 'NN'), ('would', 'MD'), ('be', 'VB'), ('a', 'DT'), ('system', 'NN'), ('that', 'WDT'), ('supports', 'VBZ'), ('engineers', 'NNS'), ('who', 'WP'), ('work', 'VBP'), ('on', 'IN'), ('complex', 'JJ'), ('maintenance', 'NN'), ('tasks', 'NNS'), ('on', 'IN'), ('a', 'DT'), ('platform', 'NN'), ('in', 'IN'), ('the', 'DT'), ('middle', 'NN'), ('of', 'IN'), ('the', 'DT'), ('Atlantic', 'NNP'), ('Ocean', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('Another', 'another'), ('example', 'example'), ('would', 'would'), ('be', 'be'), ('a', 'a'), ('system', 'system'), ('that', 'that'), ('supports', 'support'), ('engineers', 'engineer'), ('who', 'who'), ('work', 'work'), ('on', 'on'), ('complex', 'complex'), ('maintenance', 'maintenance'), ('tasks', 'task'), ('on', 'on'), ('a', 'a'), ('platform', 'platform'), ('in', 'in'), ('the', 'the'), ('middle', 'middle'), ('of', 'of'), ('the', 'the'), ('Atlantic', 'Atlantic'), ('Ocean', 'Ocean'), ('.', '.')] 

 Dependency tags are: 
>> [(('Another', 'example'), 'det'), (('example', 'system'), 'nsubj'), (('would', 'system'), 'aux'), (('be', 'system'), 'cop'), (('a', 'system'), 'det'), (('system', 'root'), 'root'), (('that', 'supports'), 'nsubj'), (('supports', 'system'), 'acl:relcl'), (('engineers', 'supports'), 'obj'), (('who', 'work'), 'nsubj'), (('work', 'engineers'), 'acl:relcl'), (('on', 'tasks'), 'case'), (('complex', 'tasks'), 'amod'), (('maintenance', 'tasks'), 'compound'), (('tasks', 'work'), 'obl'), (('on', 'platform'), 'case'), (('a', 'platform'), 'det'), (('platform', 'work'), 'obl'), (('in', 'middle'), 'case'), (('the', 'middle'), 'det'), (('middle', 'platform'), 'nmod'), (('of', 'Ocean'), 'case'), (('the', 'Ocean'), 'det'), (('Atlantic', 'Ocean'), 'amod'), (('Ocean', 'middle'), 'nmod'), (('.', 'system'), 'punct')]

 Named Entites are: 
>> [('the Atlantic Ocean', 'LOC')]

------------------- Sentence 7 -------------------

 Broad AI is about integrating  AI within a specific business process of an enterprise where  you need business- and enterprise-specific knowledge and  data to train this type of system. 

Tokens are: 
>> ['Broad', 'AI', 'is', 'about', 'integrating', 'AI', 'within', 'a', 'specific', 'business', 'process', 'of', 'an', 'enterprise', 'where', 'you', 'need', 'business', '-', 'and', 'enterprise-', 'specific', 'knowledge', 'and', 'data', 'to', 'train', 'this', 'type', 'of', 'system', '.'] 

 UPOS tags are: 
>> [('Broad', 'ADJ'), ('AI', 'NOUN'), ('is', 'AUX'), ('about', 'SCONJ'), ('integrating', 'VERB'), ('AI', 'AUX'), ('within', 'ADP'), ('a', 'DET'), ('specific', 'ADJ'), ('business', 'NOUN'), ('process', 'NOUN'), ('of', 'ADP'), ('an', 'DET'), ('enterprise', 'NOUN'), ('where', 'SCONJ'), ('you', 'PRON'), ('need', 'VERB'), ('business', 'NOUN'), ('-', 'PUNCT'), ('and', 'CCONJ'), ('enterprise-', 'ADJ'), ('specific', 'ADJ'), ('knowledge', 'NOUN'), ('and', 'CCONJ'), ('data', 'NOUN'), ('to', 'PART'), ('train', 'VERB'), ('this', 'DET'), ('type', 'NOUN'), ('of', 'ADP'), ('system', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Broad', 'JJ'), ('AI', 'NN'), ('is', 'VBZ'), ('about', 'IN'), ('integrating', 'VBG'), ('AI', 'VBZ'), ('within', 'IN'), ('a', 'DT'), ('specific', 'JJ'), ('business', 'NN'), ('process', 'NN'), ('of', 'IN'), ('an', 'DT'), ('enterprise', 'NN'), ('where', 'WRB'), ('you', 'PRP'), ('need', 'VBP'), ('business', 'NN'), ('-', ','), ('and', 'CC'), ('enterprise-', 'JJ'), ('specific', 'JJ'), ('knowledge', 'NN'), ('and', 'CC'), ('data', 'NNS'), ('to', 'TO'), ('train', 'VB'), ('this', 'DT'), ('type', 'NN'), ('of', 'IN'), ('system', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Broad', 'Broad'), ('AI', 'ai'), ('is', 'be'), ('about', 'about'), ('integrating', 'integrate'), ('AI', 'be'), ('within', 'within'), ('a', 'a'), ('specific', 'specific'), ('business', 'business'), ('process', 'process'), ('of', 'of'), ('an', 'a'), ('enterprise', 'enterprise'), ('where', 'where'), ('you', 'you'), ('need', 'need'), ('business', 'business'), ('-', '-'), ('and', 'and'), ('enterprise-', 'enterprise-'), ('specific', 'specific'), ('knowledge', 'knowledge'), ('and', 'and'), ('data', 'datum'), ('to', 'to'), ('train', 'train'), ('this', 'this'), ('type', 'type'), ('of', 'of'), ('system', 'system'), ('.', '.')] 

 Dependency tags are: 
>> [(('Broad', 'AI'), 'amod'), (('AI', 'process'), 'nsubj'), (('is', 'process'), 'cop'), (('about', 'integrating'), 'mark'), (('integrating', 'process'), 'csubj'), (('AI', 'process'), 'cop'), (('within', 'process'), 'case'), (('a', 'process'), 'det'), (('specific', 'process'), 'amod'), (('business', 'process'), 'compound'), (('process', 'root'), 'root'), (('of', 'enterprise'), 'case'), (('an', 'enterprise'), 'det'), (('enterprise', 'process'), 'nmod'), (('where', 'need'), 'mark'), (('you', 'need'), 'nsubj'), (('need', 'enterprise'), 'acl:relcl'), (('business', 'need'), 'obj'), (('-', 'process'), 'punct'), (('and', 'knowledge'), 'cc'), (('enterprise-', 'knowledge'), 'amod'), (('specific', 'knowledge'), 'amod'), (('knowledge', 'process'), 'conj'), (('and', 'data'), 'cc'), (('data', 'knowledge'), 'conj'), (('to', 'train'), 'mark'), (('train', 'knowledge'), 'acl'), (('this', 'type'), 'det'), (('type', 'train'), 'obj'), (('of', 'system'), 'case'), (('system', 'type'), 'nmod'), (('.', 'process'), 'punct')]

 Named Entites are: 
>> [('Broad AI', 'ORG'), ('AI', 'ORG')]

------------------- Sentence 8 -------------------

 These tasks are very different  from the narrow AI used in the consumer world because the  data and knowledge available in the enterprise are much more  limited in terms of volumes, very industry specific and in most  of the cases private (for example owned by an enterprise). 

Tokens are: 
>> ['These', 'tasks', 'are', 'very', 'different', 'from', 'the', 'narrow', 'AI', 'used', 'in', 'the', 'consumer', 'world', 'because', 'the', 'data', 'and', 'knowledge', 'available', 'in', 'the', 'enterprise', 'are', 'much', 'more', 'limited', 'in', 'terms', 'of', 'volumes', ',', 'very', 'industry', 'specific', 'and', 'in', 'most', 'of', 'the', 'cases', 'private', '(', 'for', 'example', 'owned', 'by', 'an', 'enterprise', ')', '.'] 

 UPOS tags are: 
>> [('These', 'DET'), ('tasks', 'NOUN'), ('are', 'AUX'), ('very', 'ADV'), ('different', 'ADJ'), ('from', 'ADP'), ('the', 'DET'), ('narrow', 'ADJ'), ('AI', 'AUX'), ('used', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('consumer', 'NOUN'), ('world', 'NOUN'), ('because', 'SCONJ'), ('the', 'DET'), ('data', 'NOUN'), ('and', 'CCONJ'), ('knowledge', 'NOUN'), ('available', 'ADJ'), ('in', 'ADP'), ('the', 'DET'), ('enterprise', 'NOUN'), ('are', 'AUX'), ('much', 'ADV'), ('more', 'ADV'), ('limited', 'VERB'), ('in', 'ADP'), ('terms', 'NOUN'), ('of', 'ADP'), ('volumes', 'NOUN'), (',', 'PUNCT'), ('very', 'ADV'), ('industry', 'NOUN'), ('specific', 'ADJ'), ('and', 'CCONJ'), ('in', 'ADP'), ('most', 'ADJ'), ('of', 'ADP'), ('the', 'DET'), ('cases', 'NOUN'), ('private', 'ADJ'), ('(', 'PUNCT'), ('for', 'ADP'), ('example', 'NOUN'), ('owned', 'VERB'), ('by', 'ADP'), ('an', 'DET'), ('enterprise', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('These', 'DT'), ('tasks', 'NNS'), ('are', 'VBP'), ('very', 'RB'), ('different', 'JJ'), ('from', 'IN'), ('the', 'DT'), ('narrow', 'JJ'), ('AI', 'VBZ'), ('used', 'VBN'), ('in', 'IN'), ('the', 'DT'), ('consumer', 'NN'), ('world', 'NN'), ('because', 'IN'), ('the', 'DT'), ('data', 'NNS'), ('and', 'CC'), ('knowledge', 'NN'), ('available', 'JJ'), ('in', 'IN'), ('the', 'DT'), ('enterprise', 'NN'), ('are', 'VBP'), ('much', 'RB'), ('more', 'RBR'), ('limited', 'VBN'), ('in', 'IN'), ('terms', 'NNS'), ('of', 'IN'), ('volumes', 'NNS'), (',', ','), ('very', 'RB'), ('industry', 'NN'), ('specific', 'JJ'), ('and', 'CC'), ('in', 'IN'), ('most', 'JJS'), ('of', 'IN'), ('the', 'DT'), ('cases', 'NNS'), ('private', 'JJ'), ('(', '-LRB-'), ('for', 'IN'), ('example', 'NN'), ('owned', 'VBN'), ('by', 'IN'), ('an', 'DT'), ('enterprise', 'NN'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('These', 'this'), ('tasks', 'task'), ('are', 'be'), ('very', 'very'), ('different', 'different'), ('from', 'from'), ('the', 'the'), ('narrow', 'narrow'), ('AI', 'be'), ('used', 'use'), ('in', 'in'), ('the', 'the'), ('consumer', 'consumer'), ('world', 'world'), ('because', 'because'), ('the', 'the'), ('data', 'datum'), ('and', 'and'), ('knowledge', 'knowledge'), ('available', 'available'), ('in', 'in'), ('the', 'the'), ('enterprise', 'enterprise'), ('are', 'be'), ('much', 'much'), ('more', 'more'), ('limited', 'limit'), ('in', 'in'), ('terms', 'term'), ('of', 'of'), ('volumes', 'volume'), (',', ','), ('very', 'very'), ('industry', 'industry'), ('specific', 'specific'), ('and', 'and'), ('in', 'in'), ('most', 'most'), ('of', 'of'), ('the', 'the'), ('cases', 'case'), ('private', 'private'), ('(', '('), ('for', 'for'), ('example', 'example'), ('owned', 'own'), ('by', 'by'), ('an', 'a'), ('enterprise', 'enterprise'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('These', 'tasks'), 'det'), (('tasks', 'different'), 'nsubj'), (('are', 'different'), 'cop'), (('very', 'different'), 'advmod'), (('different', 'root'), 'root'), (('from', 'narrow'), 'case'), (('the', 'narrow'), 'det'), (('narrow', 'different'), 'obl'), (('AI', 'used'), 'aux:pass'), (('used', 'different'), 'advcl'), (('in', 'world'), 'case'), (('the', 'world'), 'det'), (('consumer', 'world'), 'compound'), (('world', 'used'), 'obl'), (('because', 'limited'), 'mark'), (('the', 'data'), 'det'), (('data', 'limited'), 'nsubj:pass'), (('and', 'knowledge'), 'cc'), (('knowledge', 'data'), 'conj'), (('available', 'data'), 'amod'), (('in', 'enterprise'), 'case'), (('the', 'enterprise'), 'det'), (('enterprise', 'available'), 'obl'), (('are', 'limited'), 'aux:pass'), (('much', 'more'), 'advmod'), (('more', 'limited'), 'advmod'), (('limited', 'different'), 'advcl'), (('in', 'terms'), 'case'), (('terms', 'limited'), 'obl'), (('of', 'volumes'), 'case'), (('volumes', 'terms'), 'nmod'), ((',', 'specific'), 'punct'), (('very', 'industry'), 'advmod'), (('industry', 'specific'), 'nsubj'), (('specific', 'volumes'), 'amod'), (('and', 'most'), 'cc'), (('in', 'most'), 'case'), (('most', 'specific'), 'obl'), (('of', 'cases'), 'case'), (('the', 'cases'), 'det'), (('cases', 'most'), 'nmod'), (('private', 'cases'), 'amod'), (('(', 'owned'), 'punct'), (('for', 'example'), 'case'), (('example', 'private'), 'obl'), (('owned', 'example'), 'acl'), (('by', 'enterprise'), 'case'), (('an', 'enterprise'), 'det'), (('enterprise', 'owned'), 'obl'), ((')', 'owned'), 'punct'), (('.', 'different'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 9 -------------------

 This is what we believe is currently the most valuable type of  AI currently for the enterprise. 

Tokens are: 
>> ['This', 'is', 'what', 'we', 'believe', 'is', 'currently', 'the', 'most', 'valuable', 'type', 'of', 'AI', 'currently', 'for', 'the', 'enterprise', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('is', 'AUX'), ('what', 'PRON'), ('we', 'PRON'), ('believe', 'VERB'), ('is', 'AUX'), ('currently', 'ADV'), ('the', 'DET'), ('most', 'ADV'), ('valuable', 'ADJ'), ('type', 'NOUN'), ('of', 'ADP'), ('AI', 'NOUN'), ('currently', 'ADV'), ('for', 'ADP'), ('the', 'DET'), ('enterprise', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('is', 'VBZ'), ('what', 'WP'), ('we', 'PRP'), ('believe', 'VBP'), ('is', 'VBZ'), ('currently', 'RB'), ('the', 'DT'), ('most', 'RBS'), ('valuable', 'JJ'), ('type', 'NN'), ('of', 'IN'), ('AI', 'NN'), ('currently', 'RB'), ('for', 'IN'), ('the', 'DT'), ('enterprise', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('is', 'be'), ('what', 'what'), ('we', 'we'), ('believe', 'believe'), ('is', 'be'), ('currently', 'currently'), ('the', 'the'), ('most', 'most'), ('valuable', 'valuable'), ('type', 'type'), ('of', 'of'), ('AI', 'ai'), ('currently', 'currently'), ('for', 'for'), ('the', 'the'), ('enterprise', 'enterprise'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'what'), 'nsubj'), (('is', 'what'), 'cop'), (('what', 'type'), 'nsubj'), (('we', 'believe'), 'nsubj'), (('believe', 'what'), 'acl:relcl'), (('is', 'type'), 'cop'), (('currently', 'type'), 'advmod'), (('the', 'type'), 'det'), (('most', 'valuable'), 'advmod'), (('valuable', 'type'), 'amod'), (('type', 'root'), 'root'), (('of', 'AI'), 'case'), (('AI', 'type'), 'nmod'), (('currently', 'enterprise'), 'advmod'), (('for', 'enterprise'), 'case'), (('the', 'enterprise'), 'det'), (('enterprise', 'type'), 'nmod'), (('.', 'type'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

================================ Paragraph 144 =================================

General AI General AI is far from reaching its potential. The expectations  are that it will take at least another couple of decades. General  AI refers to machines that can perform any intellectual task  a human can. Currently AI does not have the ability to think  abstractly, strategize and use previous experiences to come  up with new creative ideas as humans do. 


------------------- Sentence 1 -------------------

 General AI General AI is far from reaching its potential. 

Tokens are: 
>> ['General', 'AI', 'General', 'AI', 'is', 'far', 'from', 'reaching', 'its', 'potential', '.'] 

 UPOS tags are: 
>> [('General', 'PROPN'), ('AI', 'PROPN'), ('General', 'PROPN'), ('AI', 'PROPN'), ('is', 'AUX'), ('far', 'ADV'), ('from', 'SCONJ'), ('reaching', 'VERB'), ('its', 'PRON'), ('potential', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('General', 'NNP'), ('AI', 'NNP'), ('General', 'NNP'), ('AI', 'NNP'), ('is', 'VBZ'), ('far', 'RB'), ('from', 'IN'), ('reaching', 'VBG'), ('its', 'PRP$'), ('potential', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('General', 'General'), ('AI', 'AI'), ('General', 'General'), ('AI', 'AI'), ('is', 'be'), ('far', 'far'), ('from', 'from'), ('reaching', 'reach'), ('its', 'its'), ('potential', 'potential'), ('.', '.')] 

 Dependency tags are: 
>> [(('General', 'AI'), 'compound'), (('AI', 'AI'), 'compound'), (('General', 'AI'), 'compound'), (('AI', 'far'), 'nsubj'), (('is', 'far'), 'cop'), (('far', 'root'), 'root'), (('from', 'reaching'), 'mark'), (('reaching', 'far'), 'advcl'), (('its', 'potential'), 'nmod:poss'), (('potential', 'reaching'), 'obj'), (('.', 'far'), 'punct')]

 Named Entites are: 
>> [('General AI General AI', 'ORG')]

------------------- Sentence 2 -------------------

 The expectations  are that it will take at least another couple of decades. 

Tokens are: 
>> ['The', 'expectations', 'are', 'that', 'it', 'will', 'take', 'at', 'least', 'another', 'couple', 'of', 'decades', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('expectations', 'NOUN'), ('are', 'VERB'), ('that', 'SCONJ'), ('it', 'PRON'), ('will', 'AUX'), ('take', 'VERB'), ('at', 'ADP'), ('least', 'ADJ'), ('another', 'DET'), ('couple', 'NOUN'), ('of', 'ADP'), ('decades', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('expectations', 'NNS'), ('are', 'VBP'), ('that', 'IN'), ('it', 'PRP'), ('will', 'MD'), ('take', 'VB'), ('at', 'IN'), ('least', 'JJS'), ('another', 'DT'), ('couple', 'NN'), ('of', 'IN'), ('decades', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('expectations', 'expectation'), ('are', 'be'), ('that', 'that'), ('it', 'it'), ('will', 'will'), ('take', 'take'), ('at', 'at'), ('least', 'least'), ('another', 'another'), ('couple', 'couple'), ('of', 'of'), ('decades', 'decade'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'expectations'), 'det'), (('expectations', 'are'), 'nsubj'), (('are', 'root'), 'root'), (('that', 'take'), 'mark'), (('it', 'take'), 'nsubj'), (('will', 'take'), 'aux'), (('take', 'are'), 'ccomp'), (('at', 'least'), 'case'), (('least', 'couple'), 'nmod'), (('another', 'couple'), 'det'), (('couple', 'take'), 'obj'), (('of', 'decades'), 'case'), (('decades', 'couple'), 'nmod'), (('.', 'are'), 'punct')]

 Named Entites are: 
>> [('at least another couple of decades', 'DATE')]

------------------- Sentence 3 -------------------

 General  AI refers to machines that can perform any intellectual task  a human can. 

Tokens are: 
>> ['General', 'AI', 'refers', 'to', 'machines', 'that', 'can', 'perform', 'any', 'intellectual', 'task', 'a', 'human', 'can', '.'] 

 UPOS tags are: 
>> [('General', 'ADJ'), ('AI', 'NOUN'), ('refers', 'VERB'), ('to', 'ADP'), ('machines', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('perform', 'VERB'), ('any', 'DET'), ('intellectual', 'ADJ'), ('task', 'NOUN'), ('a', 'DET'), ('human', 'ADJ'), ('can', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('General', 'JJ'), ('AI', 'NN'), ('refers', 'VBZ'), ('to', 'IN'), ('machines', 'NNS'), ('that', 'WDT'), ('can', 'MD'), ('perform', 'VB'), ('any', 'DT'), ('intellectual', 'JJ'), ('task', 'NN'), ('a', 'DT'), ('human', 'JJ'), ('can', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('General', 'General'), ('AI', 'ai'), ('refers', 'refer'), ('to', 'to'), ('machines', 'machine'), ('that', 'that'), ('can', 'can'), ('perform', 'perform'), ('any', 'any'), ('intellectual', 'intellectual'), ('task', 'task'), ('a', 'a'), ('human', 'human'), ('can', 'can'), ('.', '.')] 

 Dependency tags are: 
>> [(('General', 'AI'), 'amod'), (('AI', 'refers'), 'nsubj'), (('refers', 'root'), 'root'), (('to', 'machines'), 'case'), (('machines', 'refers'), 'obl'), (('that', 'perform'), 'nsubj'), (('can', 'perform'), 'aux'), (('perform', 'machines'), 'acl:relcl'), (('any', 'task'), 'det'), (('intellectual', 'task'), 'amod'), (('task', 'perform'), 'obj'), (('a', 'can'), 'det'), (('human', 'can'), 'amod'), (('can', 'perform'), 'obj'), (('.', 'refers'), 'punct')]

 Named Entites are: 
>> [('General  AI', 'ORG')]

------------------- Sentence 4 -------------------

 Currently AI does not have the ability to think  abstractly, strategize and use previous experiences to come  up with new creative ideas as humans do. 

Tokens are: 
>> ['Currently', 'AI', 'does', 'not', 'have', 'the', 'ability', 'to', 'think', 'abstractly', ',', 'strategize', 'and', 'use', 'previous', 'experiences', 'to', 'come', 'up', 'with', 'new', 'creative', 'ideas', 'as', 'humans', 'do', '.'] 

 UPOS tags are: 
>> [('Currently', 'ADV'), ('AI', 'ADV'), ('does', 'AUX'), ('not', 'PART'), ('have', 'VERB'), ('the', 'DET'), ('ability', 'NOUN'), ('to', 'PART'), ('think', 'VERB'), ('abstractly', 'ADV'), (',', 'PUNCT'), ('strategize', 'VERB'), ('and', 'CCONJ'), ('use', 'VERB'), ('previous', 'ADJ'), ('experiences', 'NOUN'), ('to', 'PART'), ('come', 'VERB'), ('up', 'ADP'), ('with', 'ADP'), ('new', 'ADJ'), ('creative', 'ADJ'), ('ideas', 'NOUN'), ('as', 'SCONJ'), ('humans', 'NOUN'), ('do', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Currently', 'RB'), ('AI', 'RB'), ('does', 'VBZ'), ('not', 'RB'), ('have', 'VB'), ('the', 'DT'), ('ability', 'NN'), ('to', 'TO'), ('think', 'VB'), ('abstractly', 'RB'), (',', ','), ('strategize', 'VB'), ('and', 'CC'), ('use', 'VB'), ('previous', 'JJ'), ('experiences', 'NNS'), ('to', 'TO'), ('come', 'VB'), ('up', 'RP'), ('with', 'IN'), ('new', 'JJ'), ('creative', 'JJ'), ('ideas', 'NNS'), ('as', 'IN'), ('humans', 'NNS'), ('do', 'VBP'), ('.', '.')] 

 Lemmas are: 
>> [('Currently', 'currently'), ('AI', 'ai'), ('does', 'do'), ('not', 'not'), ('have', 'have'), ('the', 'the'), ('ability', 'ability'), ('to', 'to'), ('think', 'think'), ('abstractly', 'abstractly'), (',', ','), ('strategize', 'strategize'), ('and', 'and'), ('use', 'use'), ('previous', 'previous'), ('experiences', 'experience'), ('to', 'to'), ('come', 'come'), ('up', 'up'), ('with', 'with'), ('new', 'new'), ('creative', 'creative'), ('ideas', 'idea'), ('as', 'as'), ('humans', 'human'), ('do', 'do'), ('.', '.')] 

 Dependency tags are: 
>> [(('Currently', 'have'), 'advmod'), (('AI', 'have'), 'advmod'), (('does', 'have'), 'aux'), (('not', 'have'), 'advmod'), (('have', 'root'), 'root'), (('the', 'ability'), 'det'), (('ability', 'have'), 'obj'), (('to', 'think'), 'mark'), (('think', 'ability'), 'acl'), (('abstractly', 'think'), 'advmod'), ((',', 'strategize'), 'punct'), (('strategize', 'think'), 'conj'), (('and', 'use'), 'cc'), (('use', 'think'), 'conj'), (('previous', 'experiences'), 'amod'), (('experiences', 'use'), 'obj'), (('to', 'come'), 'mark'), (('come', 'use'), 'advcl'), (('up', 'come'), 'compound:prt'), (('with', 'ideas'), 'case'), (('new', 'ideas'), 'amod'), (('creative', 'ideas'), 'amod'), (('ideas', 'come'), 'obl'), (('as', 'do'), 'mark'), (('humans', 'do'), 'nsubj'), (('do', 'come'), 'advcl'), (('.', 'have'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

================================ Paragraph 145 =================================

Some people think we will have general AI in a couple of  decades others like IBM’s Rob High and Google’s Peter Norvig  believe we don’t need broad AI at all.8


------------------- Sentence 1 -------------------

 Some people think we will have general AI in a couple of  decades others like IBM’s Rob High and Google’s Peter Norvig  believe we don’t need broad AI at all. 

Tokens are: 
>> ['Some', 'people', 'think', 'we', 'will', 'have', 'general', 'AI', 'in', 'a', 'couple', 'of', 'decades', 'others', 'like', 'IBM', '’s', 'Rob', 'High', 'and', 'Google', '’s', 'Peter', 'Norvig', 'believe', 'we', 'do', 'n’t', 'need', 'broad', 'AI', 'at', 'all', '.'] 

 UPOS tags are: 
>> [('Some', 'DET'), ('people', 'NOUN'), ('think', 'VERB'), ('we', 'PRON'), ('will', 'AUX'), ('have', 'VERB'), ('general', 'ADJ'), ('AI', 'AUX'), ('in', 'ADP'), ('a', 'DET'), ('couple', 'NOUN'), ('of', 'ADP'), ('decades', 'NOUN'), ('others', 'NOUN'), ('like', 'ADP'), ('IBM', 'PROPN'), ('’s', 'PART'), ('Rob', 'PROPN'), ('High', 'PROPN'), ('and', 'CCONJ'), ('Google', 'PROPN'), ('’s', 'PART'), ('Peter', 'PROPN'), ('Norvig', 'PROPN'), ('believe', 'VERB'), ('we', 'PRON'), ('do', 'AUX'), ('n’t', 'PART'), ('need', 'VERB'), ('broad', 'PROPN'), ('AI', 'NOUN'), ('at', 'ADP'), ('all', 'DET'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Some', 'DT'), ('people', 'NNS'), ('think', 'VBP'), ('we', 'PRP'), ('will', 'MD'), ('have', 'VB'), ('general', 'JJ'), ('AI', 'VBZ'), ('in', 'IN'), ('a', 'DT'), ('couple', 'NN'), ('of', 'IN'), ('decades', 'NNS'), ('others', 'NNS'), ('like', 'IN'), ('IBM', 'NNP'), ('’s', 'POS'), ('Rob', 'NNP'), ('High', 'NNP'), ('and', 'CC'), ('Google', 'NNP'), ('’s', 'POS'), ('Peter', 'NNP'), ('Norvig', 'NNP'), ('believe', 'VBP'), ('we', 'PRP'), ('do', 'VBP'), ('n’t', 'RB'), ('need', 'VB'), ('broad', 'NNP'), ('AI', 'NNS'), ('at', 'IN'), ('all', 'DT'), ('.', '.')] 

 Lemmas are: 
>> [('Some', 'some'), ('people', 'people'), ('think', 'think'), ('we', 'we'), ('will', 'will'), ('have', 'have'), ('general', 'general'), ('AI', 'be'), ('in', 'in'), ('a', 'a'), ('couple', 'couple'), ('of', 'of'), ('decades', 'decade'), ('others', 'other'), ('like', 'like'), ('IBM', 'IBM'), ('’s', "'s"), ('Rob', 'Rob'), ('High', 'High'), ('and', 'and'), ('Google', 'Google'), ('’s', "'s"), ('Peter', 'Peter'), ('Norvig', 'Norvig'), ('believe', 'believe'), ('we', 'we'), ('do', 'do'), ('n’t', 'not'), ('need', 'need'), ('broad', 'broad'), ('AI', 'ai'), ('at', 'at'), ('all', 'all'), ('.', '.')] 

 Dependency tags are: 
>> [(('Some', 'people'), 'det'), (('people', 'think'), 'nsubj'), (('think', 'root'), 'root'), (('we', 'have'), 'nsubj'), (('will', 'have'), 'aux'), (('have', 'think'), 'ccomp'), (('general', 'have'), 'obj'), (('AI', 'others'), 'cop'), (('in', 'couple'), 'case'), (('a', 'couple'), 'det'), (('couple', 'others'), 'compound'), (('of', 'decades'), 'case'), (('decades', 'couple'), 'nmod'), (('others', 'believe'), 'nsubj'), (('like', 'Rob'), 'case'), (('IBM', 'Rob'), 'nmod:poss'), (('’s', 'IBM'), 'case'), (('Rob', 'others'), 'nmod'), (('High', 'Rob'), 'flat'), (('and', 'believe'), 'cc'), (('Google', 'Peter'), 'nmod:poss'), (('’s', 'Google'), 'case'), (('Peter', 'believe'), 'nsubj'), (('Norvig', 'Peter'), 'flat'), (('believe', 'think'), 'conj'), (('we', 'need'), 'nsubj'), (('do', 'need'), 'aux'), (('n’t', 'need'), 'advmod'), (('need', 'believe'), 'ccomp'), (('broad', 'AI'), 'compound'), (('AI', 'need'), 'obj'), (('at', 'all'), 'case'), (('all', 'need'), 'obl'), (('.', 'think'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG'), ('a couple of  decades', 'DATE'), ('IBM', 'ORG'), ('Rob High', 'PERSON'), ('Google', 'ORG'), ('Peter Norvig', 'PERSON')]

------------------- Sentence 2 -------------------

 8 

Tokens are: 
>> ['8'] 

 UPOS tags are: 
>> [('8', 'X')] 

 XPOS tags are: 
>> [('8', 'LS')] 

 Lemmas are: 
>> [('8', '8')] 

 Dependency tags are: 
>> [(('8', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 146 =================================

8     Beyond the hype: A guide to understanding and successfully implementing artificial intelligence within your business 


------------------- Sentence 1 -------------------

 8     Beyond the hype: A guide to understanding and successfully implementing artificial intelligence within your business 

Tokens are: 
>> ['8', 'Beyond', 'the', 'hype', ':', 'A', 'guide', 'to', 'understanding', 'and', 'successfully', 'implementing', 'artificial', 'intelligence', 'within', 'your', 'business'] 

 UPOS tags are: 
>> [('8', 'NUM'), ('Beyond', 'ADP'), ('the', 'DET'), ('hype', 'NOUN'), (':', 'PUNCT'), ('A', 'DET'), ('guide', 'NOUN'), ('to', 'ADP'), ('understanding', 'VERB'), ('and', 'CCONJ'), ('successfully', 'ADV'), ('implementing', 'VERB'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('within', 'ADP'), ('your', 'PRON'), ('business', 'NOUN')] 

 XPOS tags are: 
>> [('8', 'LS'), ('Beyond', 'IN'), ('the', 'DT'), ('hype', 'NN'), (':', ':'), ('A', 'DT'), ('guide', 'NN'), ('to', 'IN'), ('understanding', 'VBG'), ('and', 'CC'), ('successfully', 'RB'), ('implementing', 'VBG'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('within', 'IN'), ('your', 'PRP$'), ('business', 'NN')] 

 Lemmas are: 
>> [('8', '8'), ('Beyond', 'beyond'), ('the', 'the'), ('hype', 'hype'), (':', ':'), ('A', 'a'), ('guide', 'guide'), ('to', 'to'), ('understanding', 'understand'), ('and', 'and'), ('successfully', 'successfully'), ('implementing', 'implement'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('within', 'within'), ('your', 'you'), ('business', 'business')] 

 Dependency tags are: 
>> [(('8', 'hype'), 'nummod'), (('Beyond', 'hype'), 'case'), (('the', 'hype'), 'det'), (('hype', 'root'), 'root'), ((':', 'guide'), 'punct'), (('A', 'guide'), 'det'), (('guide', 'hype'), 'appos'), (('to', 'understanding'), 'mark'), (('understanding', 'guide'), 'acl'), (('and', 'implementing'), 'cc'), (('successfully', 'implementing'), 'advmod'), (('implementing', 'understanding'), 'conj'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'implementing'), 'obj'), (('within', 'business'), 'case'), (('your', 'business'), 'nmod:poss'), (('business', 'implementing'), 'obl')]

 Named Entites are: 
>> []

================================ Paragraph 147 =================================

What are the areas in which AI provides  the most value today? While relevant AI use cases span various areas across  virtually every industry, there are three main macro domains  that continue to drive the adoption as well as the most  economies across businesses. They are: 


------------------- Sentence 1 -------------------

 What are the areas in which AI provides  the most value today? 

Tokens are: 
>> ['What', 'are', 'the', 'areas', 'in', 'which', 'AI', 'provides', 'the', 'most', 'value', 'today', '?'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('are', 'AUX'), ('the', 'DET'), ('areas', 'NOUN'), ('in', 'ADP'), ('which', 'PRON'), ('AI', 'NOUN'), ('provides', 'VERB'), ('the', 'DET'), ('most', 'ADJ'), ('value', 'NOUN'), ('today', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('are', 'VBP'), ('the', 'DT'), ('areas', 'NNS'), ('in', 'IN'), ('which', 'WDT'), ('AI', 'NN'), ('provides', 'VBZ'), ('the', 'DT'), ('most', 'JJS'), ('value', 'NN'), ('today', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('are', 'be'), ('the', 'the'), ('areas', 'area'), ('in', 'in'), ('which', 'which'), ('AI', 'ai'), ('provides', 'provide'), ('the', 'the'), ('most', 'most'), ('value', 'value'), ('today', 'today'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'root'), 'root'), (('are', 'What'), 'cop'), (('the', 'areas'), 'det'), (('areas', 'What'), 'nsubj'), (('in', 'which'), 'case'), (('which', 'provides'), 'obl'), (('AI', 'provides'), 'nsubj'), (('provides', 'areas'), 'acl:relcl'), (('the', 'value'), 'det'), (('most', 'value'), 'amod'), (('value', 'provides'), 'obj'), (('today', 'provides'), 'obl:tmod'), (('?', 'What'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG'), ('today', 'DATE')]

------------------- Sentence 2 -------------------

 While relevant AI use cases span various areas across  virtually every industry, there are three main macro domains  that continue to drive the adoption as well as the most  economies across businesses. 

Tokens are: 
>> ['While', 'relevant', 'AI', 'use', 'cases', 'span', 'various', 'areas', 'across', 'virtually', 'every', 'industry', ',', 'there', 'are', 'three', 'main', 'macro', 'domains', 'that', 'continue', 'to', 'drive', 'the', 'adoption', 'as', 'well', 'as', 'the', 'most', 'economies', 'across', 'businesses', '.'] 

 UPOS tags are: 
>> [('While', 'SCONJ'), ('relevant', 'ADJ'), ('AI', 'AUX'), ('use', 'VERB'), ('cases', 'NOUN'), ('span', 'VERB'), ('various', 'ADJ'), ('areas', 'NOUN'), ('across', 'ADP'), ('virtually', 'ADV'), ('every', 'DET'), ('industry', 'NOUN'), (',', 'PUNCT'), ('there', 'PRON'), ('are', 'VERB'), ('three', 'NUM'), ('main', 'ADJ'), ('macro', 'NOUN'), ('domains', 'NOUN'), ('that', 'PRON'), ('continue', 'VERB'), ('to', 'PART'), ('drive', 'VERB'), ('the', 'DET'), ('adoption', 'NOUN'), ('as', 'ADV'), ('well', 'ADV'), ('as', 'ADP'), ('the', 'DET'), ('most', 'ADJ'), ('economies', 'NOUN'), ('across', 'ADP'), ('businesses', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('While', 'IN'), ('relevant', 'JJ'), ('AI', 'MD'), ('use', 'VB'), ('cases', 'NNS'), ('span', 'VBP'), ('various', 'JJ'), ('areas', 'NNS'), ('across', 'IN'), ('virtually', 'RB'), ('every', 'DT'), ('industry', 'NN'), (',', ','), ('there', 'EX'), ('are', 'VBP'), ('three', 'CD'), ('main', 'JJ'), ('macro', 'NN'), ('domains', 'NNS'), ('that', 'WDT'), ('continue', 'VBP'), ('to', 'TO'), ('drive', 'VB'), ('the', 'DT'), ('adoption', 'NN'), ('as', 'RB'), ('well', 'RB'), ('as', 'IN'), ('the', 'DT'), ('most', 'JJS'), ('economies', 'NNS'), ('across', 'IN'), ('businesses', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('While', 'while'), ('relevant', 'relevant'), ('AI', 'be'), ('use', 'use'), ('cases', 'case'), ('span', 'span'), ('various', 'various'), ('areas', 'area'), ('across', 'across'), ('virtually', 'virtually'), ('every', 'every'), ('industry', 'industry'), (',', ','), ('there', 'there'), ('are', 'be'), ('three', 'three'), ('main', 'main'), ('macro', 'macro'), ('domains', 'domain'), ('that', 'that'), ('continue', 'continue'), ('to', 'to'), ('drive', 'drive'), ('the', 'the'), ('adoption', 'adoption'), ('as', 'as'), ('well', 'well'), ('as', 'as'), ('the', 'the'), ('most', 'most'), ('economies', 'economy'), ('across', 'across'), ('businesses', 'business'), ('.', '.')] 

 Dependency tags are: 
>> [(('While', 'use'), 'mark'), (('relevant', 'use'), 'nsubj'), (('AI', 'use'), 'aux'), (('use', 'are'), 'advcl'), (('cases', 'use'), 'obj'), (('span', 'are'), 'advcl'), (('various', 'areas'), 'amod'), (('areas', 'span'), 'obj'), (('across', 'industry'), 'case'), (('virtually', 'industry'), 'advmod'), (('every', 'industry'), 'det'), (('industry', 'span'), 'obl'), ((',', 'are'), 'punct'), (('there', 'are'), 'expl'), (('are', 'root'), 'root'), (('three', 'domains'), 'nummod'), (('main', 'domains'), 'amod'), (('macro', 'domains'), 'compound'), (('domains', 'are'), 'nsubj'), (('that', 'continue'), 'nsubj'), (('continue', 'domains'), 'acl:relcl'), (('to', 'drive'), 'mark'), (('drive', 'continue'), 'xcomp'), (('the', 'adoption'), 'det'), (('adoption', 'drive'), 'obj'), (('as', 'economies'), 'cc'), (('well', 'as'), 'fixed'), (('as', 'as'), 'fixed'), (('the', 'economies'), 'det'), (('most', 'economies'), 'amod'), (('economies', 'domains'), 'conj'), (('across', 'businesses'), 'case'), (('businesses', 'economies'), 'nmod'), (('.', 'are'), 'punct')]

 Named Entites are: 
>> [('three', 'CARDINAL')]

------------------- Sentence 3 -------------------

 They are: 

Tokens are: 
>> ['They', 'are', ':'] 

 UPOS tags are: 
>> [('They', 'PRON'), ('are', 'AUX'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('They', 'PRP'), ('are', 'VBP'), (':', ':')] 

 Lemmas are: 
>> [('They', 'they'), ('are', 'be'), (':', ':')] 

 Dependency tags are: 
>> [(('They', 'are'), 'nsubj'), (('are', 'root'), 'root'), ((':', 'are'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 148 =================================

 — Cognitive engagement: Involves how to deliver new ways  for humans to engage with machines, moving from pure  digital experiences (such as the ability to run transactions  digitally) into human-like natural conversations. 


------------------- Sentence 1 -------------------

 — Cognitive engagement: Involves how to deliver new ways  for humans to engage with machines, moving from pure  digital experiences (such as the ability to run transactions  digitally) into human-like natural conversations. 

Tokens are: 
>> ['—', 'Cognitive', 'engagement', ':', 'Involves', 'how', 'to', 'deliver', 'new', 'ways', 'for', 'humans', 'to', 'engage', 'with', 'machines', ',', 'moving', 'from', 'pure', 'digital', 'experiences', '(', 'such', 'as', 'the', 'ability', 'to', 'run', 'transactions', 'digitally', ')', 'into', 'human', '-', 'like', 'natural', 'conversations', '.'] 

 UPOS tags are: 
>> [('—', 'PUNCT'), ('Cognitive', 'ADJ'), ('engagement', 'NOUN'), (':', 'PUNCT'), ('Involves', 'VERB'), ('how', 'SCONJ'), ('to', 'PART'), ('deliver', 'VERB'), ('new', 'ADJ'), ('ways', 'NOUN'), ('for', 'ADP'), ('humans', 'NOUN'), ('to', 'PART'), ('engage', 'VERB'), ('with', 'ADP'), ('machines', 'NOUN'), (',', 'PUNCT'), ('moving', 'VERB'), ('from', 'ADP'), ('pure', 'ADJ'), ('digital', 'ADJ'), ('experiences', 'NOUN'), ('(', 'PUNCT'), ('such', 'ADJ'), ('as', 'ADP'), ('the', 'DET'), ('ability', 'NOUN'), ('to', 'PART'), ('run', 'VERB'), ('transactions', 'NOUN'), ('digitally', 'ADV'), (')', 'PUNCT'), ('into', 'ADP'), ('human', 'ADJ'), ('-', 'PUNCT'), ('like', 'ADP'), ('natural', 'ADJ'), ('conversations', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('—', ':'), ('Cognitive', 'JJ'), ('engagement', 'NN'), (':', ':'), ('Involves', 'VBZ'), ('how', 'WRB'), ('to', 'TO'), ('deliver', 'VB'), ('new', 'JJ'), ('ways', 'NNS'), ('for', 'IN'), ('humans', 'NNS'), ('to', 'TO'), ('engage', 'VB'), ('with', 'IN'), ('machines', 'NNS'), (',', ','), ('moving', 'VBG'), ('from', 'IN'), ('pure', 'JJ'), ('digital', 'JJ'), ('experiences', 'NNS'), ('(', '-LRB-'), ('such', 'JJ'), ('as', 'IN'), ('the', 'DT'), ('ability', 'NN'), ('to', 'TO'), ('run', 'VB'), ('transactions', 'NNS'), ('digitally', 'RB'), (')', '-RRB-'), ('into', 'IN'), ('human', 'JJ'), ('-', 'HYPH'), ('like', 'IN'), ('natural', 'JJ'), ('conversations', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('—', '—'), ('Cognitive', 'cognitive'), ('engagement', 'engagement'), (':', ':'), ('Involves', 'involve'), ('how', 'how'), ('to', 'to'), ('deliver', 'deliver'), ('new', 'new'), ('ways', 'way'), ('for', 'for'), ('humans', 'human'), ('to', 'to'), ('engage', 'engage'), ('with', 'with'), ('machines', 'machine'), (',', ','), ('moving', 'move'), ('from', 'from'), ('pure', 'pure'), ('digital', 'digital'), ('experiences', 'experience'), ('(', '('), ('such', 'such'), ('as', 'as'), ('the', 'the'), ('ability', 'ability'), ('to', 'to'), ('run', 'run'), ('transactions', 'transaction'), ('digitally', 'digitally'), (')', ')'), ('into', 'into'), ('human', 'human'), ('-', '-'), ('like', 'like'), ('natural', 'natural'), ('conversations', 'conversation'), ('.', '.')] 

 Dependency tags are: 
>> [(('—', 'engagement'), 'punct'), (('Cognitive', 'engagement'), 'amod'), (('engagement', 'root'), 'root'), ((':', 'engagement'), 'punct'), (('Involves', 'engagement'), 'appos'), (('how', 'deliver'), 'mark'), (('to', 'deliver'), 'mark'), (('deliver', 'Involves'), 'ccomp'), (('new', 'ways'), 'amod'), (('ways', 'deliver'), 'obj'), (('for', 'engage'), 'mark'), (('humans', 'ways'), 'nmod'), (('to', 'engage'), 'mark'), (('engage', 'deliver'), 'advcl'), (('with', 'machines'), 'case'), (('machines', 'engage'), 'obl'), ((',', 'moving'), 'punct'), (('moving', 'engage'), 'advcl'), (('from', 'experiences'), 'case'), (('pure', 'experiences'), 'amod'), (('digital', 'experiences'), 'amod'), (('experiences', 'moving'), 'obl'), (('(', 'ability'), 'punct'), (('such', 'ability'), 'case'), (('as', 'such'), 'fixed'), (('the', 'ability'), 'det'), (('ability', 'experiences'), 'nmod'), (('to', 'run'), 'mark'), (('run', 'ability'), 'acl'), (('transactions', 'run'), 'obj'), (('digitally', 'run'), 'advmod'), ((')', 'ability'), 'punct'), (('into', 'conversations'), 'case'), (('human', 'conversations'), 'amod'), (('-', 'like'), 'punct'), (('like', 'conversations'), 'case'), (('natural', 'conversations'), 'amod'), (('conversations', 'run'), 'obl'), (('.', 'Involves'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 149 =================================

 — Cognitive insights and knowledge: Addresses how to  augment humans who are overwhelmed with information  and knowledge. 


------------------- Sentence 1 -------------------

 — Cognitive insights and knowledge: Addresses how to  augment humans who are overwhelmed with information  and knowledge. 

Tokens are: 
>> ['—', 'Cognitive', 'insights', 'and', 'knowledge', ':', 'Addresses', 'how', 'to', 'augment', 'humans', 'who', 'are', 'overwhelmed', 'with', 'information', 'and', 'knowledge', '.'] 

 UPOS tags are: 
>> [('—', 'PUNCT'), ('Cognitive', 'ADJ'), ('insights', 'NOUN'), ('and', 'CCONJ'), ('knowledge', 'NOUN'), (':', 'PUNCT'), ('Addresses', 'NOUN'), ('how', 'SCONJ'), ('to', 'PART'), ('augment', 'VERB'), ('humans', 'NOUN'), ('who', 'PRON'), ('are', 'AUX'), ('overwhelmed', 'VERB'), ('with', 'ADP'), ('information', 'NOUN'), ('and', 'CCONJ'), ('knowledge', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('—', ':'), ('Cognitive', 'JJ'), ('insights', 'NNS'), ('and', 'CC'), ('knowledge', 'NN'), (':', ':'), ('Addresses', 'NNS'), ('how', 'WRB'), ('to', 'TO'), ('augment', 'VB'), ('humans', 'NNS'), ('who', 'WP'), ('are', 'VBP'), ('overwhelmed', 'VBN'), ('with', 'IN'), ('information', 'NN'), ('and', 'CC'), ('knowledge', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('—', '—'), ('Cognitive', 'cognitive'), ('insights', 'insight'), ('and', 'and'), ('knowledge', 'knowledge'), (':', ':'), ('Addresses', 'address'), ('how', 'how'), ('to', 'to'), ('augment', 'augment'), ('humans', 'human'), ('who', 'who'), ('are', 'be'), ('overwhelmed', 'overwhelm'), ('with', 'with'), ('information', 'information'), ('and', 'and'), ('knowledge', 'knowledge'), ('.', '.')] 

 Dependency tags are: 
>> [(('—', 'insights'), 'punct'), (('Cognitive', 'insights'), 'amod'), (('insights', 'root'), 'root'), (('and', 'knowledge'), 'cc'), (('knowledge', 'insights'), 'conj'), ((':', 'insights'), 'punct'), (('Addresses', 'insights'), 'parataxis'), (('how', 'augment'), 'mark'), (('to', 'augment'), 'mark'), (('augment', 'Addresses'), 'acl'), (('humans', 'augment'), 'obj'), (('who', 'overwhelmed'), 'nsubj:pass'), (('are', 'overwhelmed'), 'aux:pass'), (('overwhelmed', 'humans'), 'acl:relcl'), (('with', 'information'), 'case'), (('information', 'overwhelmed'), 'obl'), (('and', 'knowledge'), 'cc'), (('knowledge', 'information'), 'conj'), (('.', 'insights'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 150 =================================

 — Cognitive automation: Relates to how to move from process  automation to mimicking human intelligence to facilitate  complex and knowledge-intense business decisions. 


------------------- Sentence 1 -------------------

 — Cognitive automation: Relates to how to move from process  automation to mimicking human intelligence to facilitate  complex and knowledge-intense business decisions. 

Tokens are: 
>> ['—', 'Cognitive', 'automation', ':', 'Relates', 'to', 'how', 'to', 'move', 'from', 'process', 'automation', 'to', 'mimicking', 'human', 'intelligence', 'to', 'facilitate', 'complex', 'and', 'knowledge', '-', 'intense', 'business', 'decisions', '.'] 

 UPOS tags are: 
>> [('—', 'PUNCT'), ('Cognitive', 'ADJ'), ('automation', 'NOUN'), (':', 'PUNCT'), ('Relates', 'VERB'), ('to', 'ADP'), ('how', 'SCONJ'), ('to', 'PART'), ('move', 'VERB'), ('from', 'ADP'), ('process', 'NOUN'), ('automation', 'NOUN'), ('to', 'SCONJ'), ('mimicking', 'VERB'), ('human', 'ADJ'), ('intelligence', 'NOUN'), ('to', 'PART'), ('facilitate', 'VERB'), ('complex', 'ADJ'), ('and', 'CCONJ'), ('knowledge', 'NOUN'), ('-', 'PUNCT'), ('intense', 'ADJ'), ('business', 'NOUN'), ('decisions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('—', ':'), ('Cognitive', 'JJ'), ('automation', 'NN'), (':', ':'), ('Relates', 'VBZ'), ('to', 'IN'), ('how', 'WRB'), ('to', 'TO'), ('move', 'VB'), ('from', 'IN'), ('process', 'NN'), ('automation', 'NN'), ('to', 'IN'), ('mimicking', 'VBG'), ('human', 'JJ'), ('intelligence', 'NN'), ('to', 'TO'), ('facilitate', 'VB'), ('complex', 'JJ'), ('and', 'CC'), ('knowledge', 'NN'), ('-', 'HYPH'), ('intense', 'JJ'), ('business', 'NN'), ('decisions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('—', '—'), ('Cognitive', 'cognitive'), ('automation', 'automation'), (':', ':'), ('Relates', 'relate'), ('to', 'to'), ('how', 'how'), ('to', 'to'), ('move', 'move'), ('from', 'from'), ('process', 'process'), ('automation', 'automation'), ('to', 'to'), ('mimicking', 'mimick'), ('human', 'human'), ('intelligence', 'intelligence'), ('to', 'to'), ('facilitate', 'facilitate'), ('complex', 'complex'), ('and', 'and'), ('knowledge', 'knowledge'), ('-', '-'), ('intense', 'intense'), ('business', 'business'), ('decisions', 'decision'), ('.', '.')] 

 Dependency tags are: 
>> [(('—', 'automation'), 'punct'), (('Cognitive', 'automation'), 'amod'), (('automation', 'Relates'), 'nsubj'), ((':', 'Relates'), 'punct'), (('Relates', 'root'), 'root'), (('to', 'how'), 'case'), (('how', 'move'), 'mark'), (('to', 'move'), 'mark'), (('move', 'Relates'), 'xcomp'), (('from', 'automation'), 'case'), (('process', 'automation'), 'compound'), (('automation', 'move'), 'obl'), (('to', 'mimicking'), 'mark'), (('mimicking', 'move'), 'advcl'), (('human', 'intelligence'), 'amod'), (('intelligence', 'mimicking'), 'obj'), (('to', 'facilitate'), 'mark'), (('facilitate', 'mimicking'), 'xcomp'), (('complex', 'decisions'), 'amod'), (('and', 'knowledge'), 'cc'), (('knowledge', 'complex'), 'conj'), (('-', 'intense'), 'punct'), (('intense', 'complex'), 'conj'), (('business', 'decisions'), 'compound'), (('decisions', 'facilitate'), 'obj'), (('.', 'Relates'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 151 =================================

What are some examples of successful  implementations? There’s a vast amount of problems AI is already addressing  to deliver business value across the three macro domains  described in the previous section. We want to explain   a couple of use cases our IBM team has successfully  completed to demonstrate where AI can bring value. 


------------------- Sentence 1 -------------------

 What are some examples of successful  implementations? 

Tokens are: 
>> ['What', 'are', 'some', 'examples', 'of', 'successful', 'implementations', '?'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('are', 'AUX'), ('some', 'DET'), ('examples', 'NOUN'), ('of', 'ADP'), ('successful', 'ADJ'), ('implementations', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('are', 'VBP'), ('some', 'DT'), ('examples', 'NNS'), ('of', 'IN'), ('successful', 'JJ'), ('implementations', 'NNS'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('are', 'be'), ('some', 'some'), ('examples', 'example'), ('of', 'of'), ('successful', 'successful'), ('implementations', 'implementation'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'root'), 'root'), (('are', 'What'), 'cop'), (('some', 'examples'), 'det'), (('examples', 'What'), 'nsubj'), (('of', 'implementations'), 'case'), (('successful', 'implementations'), 'amod'), (('implementations', 'examples'), 'nmod'), (('?', 'What'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 There’s a vast amount of problems AI is already addressing  to deliver business value across the three macro domains  described in the previous section. 

Tokens are: 
>> ['There', '’s', 'a', 'vast', 'amount', 'of', 'problems', 'AI', 'is', 'already', 'addressing', 'to', 'deliver', 'business', 'value', 'across', 'the', 'three', 'macro', 'domains', 'described', 'in', 'the', 'previous', 'section', '.'] 

 UPOS tags are: 
>> [('There', 'PRON'), ('’s', 'VERB'), ('a', 'DET'), ('vast', 'ADJ'), ('amount', 'NOUN'), ('of', 'ADP'), ('problems', 'NOUN'), ('AI', 'PRON'), ('is', 'AUX'), ('already', 'ADV'), ('addressing', 'VERB'), ('to', 'PART'), ('deliver', 'VERB'), ('business', 'NOUN'), ('value', 'NOUN'), ('across', 'ADP'), ('the', 'DET'), ('three', 'NUM'), ('macro', 'NOUN'), ('domains', 'NOUN'), ('described', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('previous', 'ADJ'), ('section', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('There', 'EX'), ('’s', 'VBZ'), ('a', 'DT'), ('vast', 'JJ'), ('amount', 'NN'), ('of', 'IN'), ('problems', 'NNS'), ('AI', 'WDT'), ('is', 'VBZ'), ('already', 'RB'), ('addressing', 'VBG'), ('to', 'TO'), ('deliver', 'VB'), ('business', 'NN'), ('value', 'NN'), ('across', 'IN'), ('the', 'DT'), ('three', 'CD'), ('macro', 'NN'), ('domains', 'NNS'), ('described', 'VBN'), ('in', 'IN'), ('the', 'DT'), ('previous', 'JJ'), ('section', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('There', 'there'), ('’s', 'be'), ('a', 'a'), ('vast', 'vast'), ('amount', 'amount'), ('of', 'of'), ('problems', 'problem'), ('AI', 'ai'), ('is', 'be'), ('already', 'already'), ('addressing', 'address'), ('to', 'to'), ('deliver', 'deliver'), ('business', 'business'), ('value', 'value'), ('across', 'across'), ('the', 'the'), ('three', 'three'), ('macro', 'macro'), ('domains', 'domain'), ('described', 'describe'), ('in', 'in'), ('the', 'the'), ('previous', 'previous'), ('section', 'section'), ('.', '.')] 

 Dependency tags are: 
>> [(('There', '’s'), 'expl'), (('’s', 'root'), 'root'), (('a', 'amount'), 'det'), (('vast', 'amount'), 'amod'), (('amount', '’s'), 'nsubj'), (('of', 'problems'), 'case'), (('problems', 'amount'), 'nmod'), (('AI', 'addressing'), 'nsubj'), (('is', 'addressing'), 'aux'), (('already', 'addressing'), 'advmod'), (('addressing', 'problems'), 'acl:relcl'), (('to', 'deliver'), 'mark'), (('deliver', 'addressing'), 'xcomp'), (('business', 'value'), 'compound'), (('value', 'deliver'), 'obj'), (('across', 'domains'), 'case'), (('the', 'domains'), 'det'), (('three', 'domains'), 'nummod'), (('macro', 'domains'), 'compound'), (('domains', 'deliver'), 'obl'), (('described', 'domains'), 'acl'), (('in', 'section'), 'case'), (('the', 'section'), 'det'), (('previous', 'section'), 'amod'), (('section', 'described'), 'obl'), (('.', '’s'), 'punct')]

 Named Entites are: 
>> [('three', 'CARDINAL')]

------------------- Sentence 3 -------------------

 We want to explain   a couple of use cases our IBM team has successfully  completed to demonstrate where AI can bring value. 

Tokens are: 
>> ['We', 'want', 'to', 'explain', 'a', 'couple', 'of', 'use', 'cases', 'our', 'IBM', 'team', 'has', 'successfully', 'completed', 'to', 'demonstrate', 'where', 'AI', 'can', 'bring', 'value', '.'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('want', 'VERB'), ('to', 'PART'), ('explain', 'VERB'), ('a', 'DET'), ('couple', 'NOUN'), ('of', 'ADP'), ('use', 'NOUN'), ('cases', 'NOUN'), ('our', 'PRON'), ('IBM', 'PROPN'), ('team', 'NOUN'), ('has', 'AUX'), ('successfully', 'ADV'), ('completed', 'VERB'), ('to', 'PART'), ('demonstrate', 'VERB'), ('where', 'SCONJ'), ('AI', 'PRON'), ('can', 'AUX'), ('bring', 'VERB'), ('value', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('want', 'VBP'), ('to', 'TO'), ('explain', 'VB'), ('a', 'DT'), ('couple', 'NN'), ('of', 'IN'), ('use', 'NN'), ('cases', 'NNS'), ('our', 'PRP$'), ('IBM', 'NNP'), ('team', 'NN'), ('has', 'VBZ'), ('successfully', 'RB'), ('completed', 'VBN'), ('to', 'TO'), ('demonstrate', 'VB'), ('where', 'WRB'), ('AI', 'PRP'), ('can', 'MD'), ('bring', 'VB'), ('value', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('want', 'want'), ('to', 'to'), ('explain', 'explain'), ('a', 'a'), ('couple', 'couple'), ('of', 'of'), ('use', 'use'), ('cases', 'case'), ('our', 'we'), ('IBM', 'IBM'), ('team', 'team'), ('has', 'have'), ('successfully', 'successfully'), ('completed', 'complete'), ('to', 'to'), ('demonstrate', 'demonstrate'), ('where', 'where'), ('AI', 'ai'), ('can', 'can'), ('bring', 'bring'), ('value', 'value'), ('.', '.')] 

 Dependency tags are: 
>> [(('We', 'want'), 'nsubj'), (('want', 'root'), 'root'), (('to', 'explain'), 'mark'), (('explain', 'want'), 'xcomp'), (('a', 'couple'), 'det'), (('couple', 'explain'), 'obj'), (('of', 'cases'), 'case'), (('use', 'cases'), 'compound'), (('cases', 'couple'), 'nmod'), (('our', 'team'), 'nmod:poss'), (('IBM', 'team'), 'compound'), (('team', 'completed'), 'nsubj'), (('has', 'completed'), 'aux'), (('successfully', 'completed'), 'advmod'), (('completed', 'cases'), 'acl:relcl'), (('to', 'demonstrate'), 'mark'), (('demonstrate', 'completed'), 'xcomp'), (('where', 'bring'), 'mark'), (('AI', 'bring'), 'nsubj'), (('can', 'bring'), 'aux'), (('bring', 'demonstrate'), 'advcl'), (('value', 'bring'), 'obj'), (('.', 'want'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG'), ('AI', 'ORG')]

================================ Paragraph 152 =================================

Manufacturer: engine anomaly detection using   a neural network  Using the many different available sensor measurements  from large truck engines, a neural network was trained to  recognize normal and abnormal engine behavior. In the  huge, high dimensional (many variables) dataset the  neural network learned the natural correlations and  relationships between all different readings. The resulting  


------------------- Sentence 1 -------------------

 Manufacturer: engine anomaly detection using   a neural network  Using the many different available sensor measurements  from large truck engines, a neural network was trained to  recognize normal and abnormal engine behavior. 

Tokens are: 
>> ['Manufacturer', ':', 'engine', 'anomaly', 'detection', 'using', 'a', 'neural', 'network', 'Using', 'the', 'many', 'different', 'available', 'sensor', 'measurements', 'from', 'large', 'truck', 'engines', ',', 'a', 'neural', 'network', 'was', 'trained', 'to', 'recognize', 'normal', 'and', 'abnormal', 'engine', 'behavior', '.'] 

 UPOS tags are: 
>> [('Manufacturer', 'NOUN'), (':', 'PUNCT'), ('engine', 'NOUN'), ('anomaly', 'NOUN'), ('detection', 'NOUN'), ('using', 'VERB'), ('a', 'DET'), ('neural', 'ADJ'), ('network', 'NOUN'), ('Using', 'VERB'), ('the', 'DET'), ('many', 'ADJ'), ('different', 'ADJ'), ('available', 'ADJ'), ('sensor', 'NOUN'), ('measurements', 'NOUN'), ('from', 'ADP'), ('large', 'ADJ'), ('truck', 'NOUN'), ('engines', 'NOUN'), (',', 'PUNCT'), ('a', 'DET'), ('neural', 'ADJ'), ('network', 'NOUN'), ('was', 'AUX'), ('trained', 'VERB'), ('to', 'PART'), ('recognize', 'VERB'), ('normal', 'ADJ'), ('and', 'CCONJ'), ('abnormal', 'ADJ'), ('engine', 'NOUN'), ('behavior', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Manufacturer', 'NN'), (':', ':'), ('engine', 'NN'), ('anomaly', 'NN'), ('detection', 'NN'), ('using', 'VBG'), ('a', 'DT'), ('neural', 'JJ'), ('network', 'NN'), ('Using', 'VBG'), ('the', 'DT'), ('many', 'JJ'), ('different', 'JJ'), ('available', 'JJ'), ('sensor', 'NN'), ('measurements', 'NNS'), ('from', 'IN'), ('large', 'JJ'), ('truck', 'NN'), ('engines', 'NNS'), (',', ','), ('a', 'DT'), ('neural', 'JJ'), ('network', 'NN'), ('was', 'VBD'), ('trained', 'VBN'), ('to', 'TO'), ('recognize', 'VB'), ('normal', 'JJ'), ('and', 'CC'), ('abnormal', 'JJ'), ('engine', 'NN'), ('behavior', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Manufacturer', 'manufacturer'), (':', ':'), ('engine', 'engine'), ('anomaly', 'anomaly'), ('detection', 'detection'), ('using', 'use'), ('a', 'a'), ('neural', 'neural'), ('network', 'network'), ('Using', 'use'), ('the', 'the'), ('many', 'many'), ('different', 'different'), ('available', 'available'), ('sensor', 'sensor'), ('measurements', 'measurement'), ('from', 'from'), ('large', 'large'), ('truck', 'truck'), ('engines', 'engine'), (',', ','), ('a', 'a'), ('neural', 'neural'), ('network', 'network'), ('was', 'be'), ('trained', 'train'), ('to', 'to'), ('recognize', 'recognize'), ('normal', 'normal'), ('and', 'and'), ('abnormal', 'abnormal'), ('engine', 'engine'), ('behavior', 'behavior'), ('.', '.')] 

 Dependency tags are: 
>> [(('Manufacturer', 'root'), 'root'), ((':', 'Manufacturer'), 'punct'), (('engine', 'anomaly'), 'compound'), (('anomaly', 'detection'), 'compound'), (('detection', 'Manufacturer'), 'appos'), (('using', 'detection'), 'acl'), (('a', 'network'), 'det'), (('neural', 'network'), 'amod'), (('network', 'using'), 'obj'), (('Using', 'using'), 'advcl'), (('the', 'measurements'), 'det'), (('many', 'measurements'), 'amod'), (('different', 'measurements'), 'amod'), (('available', 'measurements'), 'amod'), (('sensor', 'measurements'), 'compound'), (('measurements', 'Using'), 'obj'), (('from', 'engines'), 'case'), (('large', 'engines'), 'amod'), (('truck', 'engines'), 'compound'), (('engines', 'measurements'), 'nmod'), ((',', 'trained'), 'punct'), (('a', 'network'), 'det'), (('neural', 'network'), 'amod'), (('network', 'trained'), 'nsubj:pass'), (('was', 'trained'), 'aux:pass'), (('trained', 'Manufacturer'), 'appos'), (('to', 'recognize'), 'mark'), (('recognize', 'trained'), 'xcomp'), (('normal', 'behavior'), 'amod'), (('and', 'abnormal'), 'cc'), (('abnormal', 'normal'), 'conj'), (('engine', 'behavior'), 'compound'), (('behavior', 'recognize'), 'obj'), (('.', 'Manufacturer'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 In the  huge, high dimensional (many variables) dataset the  neural network learned the natural correlations and  relationships between all different readings. 

Tokens are: 
>> ['In', 'the', 'huge', ',', 'high', 'dimensional', '(', 'many', 'variables', ')', 'dataset', 'the', 'neural', 'network', 'learned', 'the', 'natural', 'correlations', 'and', 'relationships', 'between', 'all', 'different', 'readings', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('the', 'DET'), ('huge', 'ADJ'), (',', 'PUNCT'), ('high', 'ADJ'), ('dimensional', 'ADJ'), ('(', 'PUNCT'), ('many', 'ADJ'), ('variables', 'NOUN'), (')', 'PUNCT'), ('dataset', 'VERB'), ('the', 'DET'), ('neural', 'ADJ'), ('network', 'NOUN'), ('learned', 'VERB'), ('the', 'DET'), ('natural', 'ADJ'), ('correlations', 'NOUN'), ('and', 'CCONJ'), ('relationships', 'NOUN'), ('between', 'ADP'), ('all', 'DET'), ('different', 'ADJ'), ('readings', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('the', 'DT'), ('huge', 'JJ'), (',', ','), ('high', 'JJ'), ('dimensional', 'JJ'), ('(', '-LRB-'), ('many', 'JJ'), ('variables', 'NNS'), (')', '-RRB-'), ('dataset', 'VBP'), ('the', 'DT'), ('neural', 'JJ'), ('network', 'NN'), ('learned', 'VBD'), ('the', 'DT'), ('natural', 'JJ'), ('correlations', 'NNS'), ('and', 'CC'), ('relationships', 'NNS'), ('between', 'IN'), ('all', 'DT'), ('different', 'JJ'), ('readings', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('the', 'the'), ('huge', 'huge'), (',', ','), ('high', 'high'), ('dimensional', 'dimensional'), ('(', '('), ('many', 'many'), ('variables', 'variable'), (')', ')'), ('dataset', 'dataset'), ('the', 'the'), ('neural', 'neural'), ('network', 'network'), ('learned', 'learn'), ('the', 'the'), ('natural', 'natural'), ('correlations', 'correlation'), ('and', 'and'), ('relationships', 'relationship'), ('between', 'between'), ('all', 'all'), ('different', 'different'), ('readings', 'reading'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'dimensional'), 'case'), (('the', 'dimensional'), 'det'), (('huge', 'dimensional'), 'amod'), ((',', 'dimensional'), 'punct'), (('high', 'dimensional'), 'amod'), (('dimensional', 'dataset'), 'obl'), (('(', 'variables'), 'punct'), (('many', 'variables'), 'amod'), (('variables', 'dimensional'), 'appos'), ((')', 'variables'), 'punct'), (('dataset', 'learned'), 'advcl'), (('the', 'network'), 'det'), (('neural', 'network'), 'amod'), (('network', 'dataset'), 'obj'), (('learned', 'root'), 'root'), (('the', 'correlations'), 'det'), (('natural', 'correlations'), 'amod'), (('correlations', 'learned'), 'obj'), (('and', 'relationships'), 'cc'), (('relationships', 'correlations'), 'conj'), (('between', 'readings'), 'case'), (('all', 'readings'), 'det'), (('different', 'readings'), 'amod'), (('readings', 'correlations'), 'nmod'), (('.', 'learned'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 The resulting 

Tokens are: 
>> ['The', 'resulting'] 

 UPOS tags are: 
>> [('The', 'DET'), ('resulting', 'NOUN')] 

 XPOS tags are: 
>> [('The', 'DT'), ('resulting', 'NN')] 

 Lemmas are: 
>> [('The', 'the'), ('resulting', 'result')] 

 Dependency tags are: 
>> [(('The', 'resulting'), 'det'), (('resulting', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 153 =================================

model was able to predict “normal” values given certain  operating conditions and could thus also be used to detect  when specific measurements were out of the ordinary.  Anomalous sensor readings are highly predictive of  pending engine failures. 


------------------- Sentence 1 -------------------

 model was able to predict “normal” values given certain  operating conditions and could thus also be used to detect  when specific measurements were out of the ordinary. 

Tokens are: 
>> ['model', 'was', 'able', 'to', 'predict', '“', 'normal', '”', 'values', 'given', 'certain', 'operating', 'conditions', 'and', 'could', 'thus', 'also', 'be', 'used', 'to', 'detect', 'when', 'specific', 'measurements', 'were', 'out', 'of', 'the', 'ordinary', '.'] 

 UPOS tags are: 
>> [('model', 'NOUN'), ('was', 'AUX'), ('able', 'ADJ'), ('to', 'PART'), ('predict', 'VERB'), ('“', 'PUNCT'), ('normal', 'ADJ'), ('”', 'PUNCT'), ('values', 'NOUN'), ('given', 'VERB'), ('certain', 'ADJ'), ('operating', 'NOUN'), ('conditions', 'NOUN'), ('and', 'CCONJ'), ('could', 'AUX'), ('thus', 'ADV'), ('also', 'ADV'), ('be', 'AUX'), ('used', 'VERB'), ('to', 'PART'), ('detect', 'VERB'), ('when', 'SCONJ'), ('specific', 'ADJ'), ('measurements', 'NOUN'), ('were', 'AUX'), ('out', 'ADP'), ('of', 'ADP'), ('the', 'DET'), ('ordinary', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('model', 'NN'), ('was', 'VBD'), ('able', 'JJ'), ('to', 'TO'), ('predict', 'VB'), ('“', '``'), ('normal', 'JJ'), ('”', "''"), ('values', 'NNS'), ('given', 'VBN'), ('certain', 'JJ'), ('operating', 'NN'), ('conditions', 'NNS'), ('and', 'CC'), ('could', 'MD'), ('thus', 'RB'), ('also', 'RB'), ('be', 'VB'), ('used', 'VBN'), ('to', 'TO'), ('detect', 'VB'), ('when', 'WRB'), ('specific', 'JJ'), ('measurements', 'NNS'), ('were', 'VBD'), ('out', 'IN'), ('of', 'IN'), ('the', 'DT'), ('ordinary', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('model', 'model'), ('was', 'be'), ('able', 'able'), ('to', 'to'), ('predict', 'predict'), ('“', "''"), ('normal', 'normal'), ('”', "''"), ('values', 'value'), ('given', 'give'), ('certain', 'certain'), ('operating', 'operating'), ('conditions', 'condition'), ('and', 'and'), ('could', 'could'), ('thus', 'thus'), ('also', 'also'), ('be', 'be'), ('used', 'use'), ('to', 'to'), ('detect', 'detect'), ('when', 'when'), ('specific', 'specific'), ('measurements', 'measurement'), ('were', 'be'), ('out', 'out'), ('of', 'of'), ('the', 'the'), ('ordinary', 'ordinary'), ('.', '.')] 

 Dependency tags are: 
>> [(('model', 'able'), 'nsubj'), (('was', 'able'), 'cop'), (('able', 'root'), 'root'), (('to', 'predict'), 'mark'), (('predict', 'able'), 'xcomp'), (('“', 'normal'), 'punct'), (('normal', 'values'), 'amod'), (('”', 'normal'), 'punct'), (('values', 'predict'), 'obj'), (('given', 'values'), 'acl'), (('certain', 'conditions'), 'amod'), (('operating', 'conditions'), 'compound'), (('conditions', 'given'), 'obj'), (('and', 'used'), 'cc'), (('could', 'used'), 'aux'), (('thus', 'used'), 'advmod'), (('also', 'used'), 'advmod'), (('be', 'used'), 'aux:pass'), (('used', 'able'), 'conj'), (('to', 'detect'), 'mark'), (('detect', 'used'), 'xcomp'), (('when', 'ordinary'), 'mark'), (('specific', 'measurements'), 'amod'), (('measurements', 'ordinary'), 'nsubj'), (('were', 'ordinary'), 'cop'), (('out', 'ordinary'), 'case'), (('of', 'ordinary'), 'case'), (('the', 'ordinary'), 'det'), (('ordinary', 'detect'), 'advcl'), (('.', 'able'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Anomalous sensor readings are highly predictive of  pending engine failures. 

Tokens are: 
>> ['Anomalous', 'sensor', 'readings', 'are', 'highly', 'predictive', 'of', 'pending', 'engine', 'failures', '.'] 

 UPOS tags are: 
>> [('Anomalous', 'ADJ'), ('sensor', 'NOUN'), ('readings', 'NOUN'), ('are', 'AUX'), ('highly', 'ADV'), ('predictive', 'ADJ'), ('of', 'SCONJ'), ('pending', 'VERB'), ('engine', 'NOUN'), ('failures', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Anomalous', 'JJ'), ('sensor', 'NN'), ('readings', 'NNS'), ('are', 'VBP'), ('highly', 'RB'), ('predictive', 'JJ'), ('of', 'IN'), ('pending', 'VBG'), ('engine', 'NN'), ('failures', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Anomalous', 'anomalous'), ('sensor', 'sensor'), ('readings', 'reading'), ('are', 'be'), ('highly', 'highly'), ('predictive', 'predictive'), ('of', 'of'), ('pending', 'pend'), ('engine', 'engine'), ('failures', 'failure'), ('.', '.')] 

 Dependency tags are: 
>> [(('Anomalous', 'readings'), 'amod'), (('sensor', 'readings'), 'compound'), (('readings', 'predictive'), 'nsubj'), (('are', 'predictive'), 'cop'), (('highly', 'predictive'), 'advmod'), (('predictive', 'root'), 'root'), (('of', 'pending'), 'mark'), (('pending', 'predictive'), 'advcl'), (('engine', 'failures'), 'compound'), (('failures', 'pending'), 'obj'), (('.', 'predictive'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 154 =================================

Car manufacturer: predictive failure detection for welding  robots and predictive maintenance assessment Through supervised learning techniques, predictive models  were developed that could provide an early warning of  failure based on the different system messages and sensor  readings that continuously stream from the production line.  This early warning could be used to prioritize maintenance  and reduce both downtime as well as false positives and  needless efforts. Working through this first proof of value,  the data scientists uncovered many data quality challenges  that could be worked around to realize more value. 


------------------- Sentence 1 -------------------

 Car manufacturer: predictive failure detection for welding  robots and predictive maintenance assessment Through supervised learning techniques, predictive models  were developed that could provide an early warning of  failure based on the different system messages and sensor  readings that continuously stream from the production line. 

Tokens are: 
>> ['Car', 'manufacturer', ':', 'predictive', 'failure', 'detection', 'for', 'welding', 'robots', 'and', 'predictive', 'maintenance', 'assessment', 'Through', 'supervised', 'learning', 'techniques', ',', 'predictive', 'models', 'were', 'developed', 'that', 'could', 'provide', 'an', 'early', 'warning', 'of', 'failure', 'based', 'on', 'the', 'different', 'system', 'messages', 'and', 'sensor', 'readings', 'that', 'continuously', 'stream', 'from', 'the', 'production', 'line', '.'] 

 UPOS tags are: 
>> [('Car', 'NOUN'), ('manufacturer', 'NOUN'), (':', 'PUNCT'), ('predictive', 'ADJ'), ('failure', 'NOUN'), ('detection', 'NOUN'), ('for', 'ADP'), ('welding', 'NOUN'), ('robots', 'NOUN'), ('and', 'CCONJ'), ('predictive', 'ADJ'), ('maintenance', 'NOUN'), ('assessment', 'NOUN'), ('Through', 'ADP'), ('supervised', 'VERB'), ('learning', 'NOUN'), ('techniques', 'NOUN'), (',', 'PUNCT'), ('predictive', 'ADJ'), ('models', 'NOUN'), ('were', 'AUX'), ('developed', 'VERB'), ('that', 'PRON'), ('could', 'AUX'), ('provide', 'VERB'), ('an', 'DET'), ('early', 'ADJ'), ('warning', 'NOUN'), ('of', 'ADP'), ('failure', 'NOUN'), ('based', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('different', 'ADJ'), ('system', 'NOUN'), ('messages', 'NOUN'), ('and', 'CCONJ'), ('sensor', 'NOUN'), ('readings', 'NOUN'), ('that', 'PRON'), ('continuously', 'ADV'), ('stream', 'VERB'), ('from', 'ADP'), ('the', 'DET'), ('production', 'NOUN'), ('line', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Car', 'NN'), ('manufacturer', 'NN'), (':', ':'), ('predictive', 'JJ'), ('failure', 'NN'), ('detection', 'NN'), ('for', 'IN'), ('welding', 'NN'), ('robots', 'NNS'), ('and', 'CC'), ('predictive', 'JJ'), ('maintenance', 'NN'), ('assessment', 'NN'), ('Through', 'IN'), ('supervised', 'VBN'), ('learning', 'NN'), ('techniques', 'NNS'), (',', ','), ('predictive', 'JJ'), ('models', 'NNS'), ('were', 'VBD'), ('developed', 'VBN'), ('that', 'WDT'), ('could', 'MD'), ('provide', 'VB'), ('an', 'DT'), ('early', 'JJ'), ('warning', 'NN'), ('of', 'IN'), ('failure', 'NN'), ('based', 'VBN'), ('on', 'IN'), ('the', 'DT'), ('different', 'JJ'), ('system', 'NN'), ('messages', 'NNS'), ('and', 'CC'), ('sensor', 'NN'), ('readings', 'NNS'), ('that', 'WDT'), ('continuously', 'RB'), ('stream', 'VBP'), ('from', 'IN'), ('the', 'DT'), ('production', 'NN'), ('line', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Car', 'car'), ('manufacturer', 'manufacturer'), (':', ':'), ('predictive', 'predictive'), ('failure', 'failure'), ('detection', 'detection'), ('for', 'for'), ('welding', 'welding'), ('robots', 'robot'), ('and', 'and'), ('predictive', 'predictive'), ('maintenance', 'maintenance'), ('assessment', 'assessment'), ('Through', 'through'), ('supervised', 'supervise'), ('learning', 'learning'), ('techniques', 'technique'), (',', ','), ('predictive', 'predictive'), ('models', 'model'), ('were', 'be'), ('developed', 'develop'), ('that', 'that'), ('could', 'could'), ('provide', 'provide'), ('an', 'a'), ('early', 'early'), ('warning', 'warning'), ('of', 'of'), ('failure', 'failure'), ('based', 'base'), ('on', 'on'), ('the', 'the'), ('different', 'different'), ('system', 'system'), ('messages', 'message'), ('and', 'and'), ('sensor', 'sensor'), ('readings', 'reading'), ('that', 'that'), ('continuously', 'continuously'), ('stream', 'stream'), ('from', 'from'), ('the', 'the'), ('production', 'production'), ('line', 'line'), ('.', '.')] 

 Dependency tags are: 
>> [(('Car', 'manufacturer'), 'compound'), (('manufacturer', 'root'), 'root'), ((':', 'manufacturer'), 'punct'), (('predictive', 'detection'), 'amod'), (('failure', 'detection'), 'compound'), (('detection', 'manufacturer'), 'appos'), (('for', 'robots'), 'case'), (('welding', 'robots'), 'compound'), (('robots', 'detection'), 'nmod'), (('and', 'assessment'), 'cc'), (('predictive', 'assessment'), 'amod'), (('maintenance', 'assessment'), 'compound'), (('assessment', 'robots'), 'conj'), (('Through', 'techniques'), 'case'), (('supervised', 'techniques'), 'amod'), (('learning', 'techniques'), 'compound'), (('techniques', 'assessment'), 'nmod'), ((',', 'developed'), 'punct'), (('predictive', 'models'), 'amod'), (('models', 'developed'), 'nsubj:pass'), (('were', 'developed'), 'aux:pass'), (('developed', 'manufacturer'), 'appos'), (('that', 'provide'), 'nsubj'), (('could', 'provide'), 'aux'), (('provide', 'developed'), 'ccomp'), (('an', 'warning'), 'det'), (('early', 'warning'), 'amod'), (('warning', 'provide'), 'obj'), (('of', 'failure'), 'case'), (('failure', 'warning'), 'nmod'), (('based', 'failure'), 'acl'), (('on', 'messages'), 'case'), (('the', 'messages'), 'det'), (('different', 'messages'), 'amod'), (('system', 'messages'), 'compound'), (('messages', 'based'), 'obl'), (('and', 'readings'), 'cc'), (('sensor', 'readings'), 'compound'), (('readings', 'messages'), 'conj'), (('that', 'stream'), 'nsubj'), (('continuously', 'stream'), 'advmod'), (('stream', 'readings'), 'acl:relcl'), (('from', 'line'), 'case'), (('the', 'line'), 'det'), (('production', 'line'), 'compound'), (('line', 'stream'), 'obl'), (('.', 'developed'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 This early warning could be used to prioritize maintenance  and reduce both downtime as well as false positives and  needless efforts. 

Tokens are: 
>> ['This', 'early', 'warning', 'could', 'be', 'used', 'to', 'prioritize', 'maintenance', 'and', 'reduce', 'both', 'downtime', 'as', 'well', 'as', 'false', 'positives', 'and', 'needless', 'efforts', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('early', 'ADJ'), ('warning', 'NOUN'), ('could', 'AUX'), ('be', 'AUX'), ('used', 'VERB'), ('to', 'PART'), ('prioritize', 'VERB'), ('maintenance', 'NOUN'), ('and', 'CCONJ'), ('reduce', 'VERB'), ('both', 'DET'), ('downtime', 'NOUN'), ('as', 'ADV'), ('well', 'ADV'), ('as', 'ADP'), ('false', 'ADJ'), ('positives', 'NOUN'), ('and', 'CCONJ'), ('needless', 'ADJ'), ('efforts', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('early', 'JJ'), ('warning', 'NN'), ('could', 'MD'), ('be', 'VB'), ('used', 'VBN'), ('to', 'TO'), ('prioritize', 'VB'), ('maintenance', 'NN'), ('and', 'CC'), ('reduce', 'VB'), ('both', 'DT'), ('downtime', 'NN'), ('as', 'RB'), ('well', 'RB'), ('as', 'IN'), ('false', 'JJ'), ('positives', 'NNS'), ('and', 'CC'), ('needless', 'JJ'), ('efforts', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('early', 'early'), ('warning', 'warning'), ('could', 'could'), ('be', 'be'), ('used', 'use'), ('to', 'to'), ('prioritize', 'prioritize'), ('maintenance', 'maintenance'), ('and', 'and'), ('reduce', 'reduce'), ('both', 'both'), ('downtime', 'downtime'), ('as', 'as'), ('well', 'well'), ('as', 'as'), ('false', 'false'), ('positives', 'positive'), ('and', 'and'), ('needless', 'needless'), ('efforts', 'effort'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'warning'), 'det'), (('early', 'warning'), 'amod'), (('warning', 'used'), 'nsubj:pass'), (('could', 'used'), 'aux'), (('be', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('to', 'prioritize'), 'mark'), (('prioritize', 'used'), 'xcomp'), (('maintenance', 'prioritize'), 'obj'), (('and', 'reduce'), 'cc'), (('reduce', 'prioritize'), 'conj'), (('both', 'downtime'), 'det'), (('downtime', 'reduce'), 'obj'), (('as', 'positives'), 'cc'), (('well', 'as'), 'fixed'), (('as', 'as'), 'fixed'), (('false', 'positives'), 'amod'), (('positives', 'downtime'), 'conj'), (('and', 'efforts'), 'cc'), (('needless', 'efforts'), 'amod'), (('efforts', 'positives'), 'conj'), (('.', 'used'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Working through this first proof of value,  the data scientists uncovered many data quality challenges  that could be worked around to realize more value. 

Tokens are: 
>> ['Working', 'through', 'this', 'first', 'proof', 'of', 'value', ',', 'the', 'data', 'scientists', 'uncovered', 'many', 'data', 'quality', 'challenges', 'that', 'could', 'be', 'worked', 'around', 'to', 'realize', 'more', 'value', '.'] 

 UPOS tags are: 
>> [('Working', 'VERB'), ('through', 'ADP'), ('this', 'DET'), ('first', 'ADJ'), ('proof', 'NOUN'), ('of', 'ADP'), ('value', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('data', 'NOUN'), ('scientists', 'NOUN'), ('uncovered', 'VERB'), ('many', 'ADJ'), ('data', 'NOUN'), ('quality', 'NOUN'), ('challenges', 'NOUN'), ('that', 'PRON'), ('could', 'AUX'), ('be', 'AUX'), ('worked', 'VERB'), ('around', 'ADV'), ('to', 'PART'), ('realize', 'VERB'), ('more', 'ADJ'), ('value', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Working', 'VBG'), ('through', 'IN'), ('this', 'DT'), ('first', 'JJ'), ('proof', 'NN'), ('of', 'IN'), ('value', 'NN'), (',', ','), ('the', 'DT'), ('data', 'NN'), ('scientists', 'NNS'), ('uncovered', 'VBD'), ('many', 'JJ'), ('data', 'NNS'), ('quality', 'NN'), ('challenges', 'NNS'), ('that', 'WDT'), ('could', 'MD'), ('be', 'VB'), ('worked', 'VBN'), ('around', 'RB'), ('to', 'TO'), ('realize', 'VB'), ('more', 'JJR'), ('value', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Working', 'work'), ('through', 'through'), ('this', 'this'), ('first', 'first'), ('proof', 'proof'), ('of', 'of'), ('value', 'value'), (',', ','), ('the', 'the'), ('data', 'datum'), ('scientists', 'scientist'), ('uncovered', 'uncover'), ('many', 'many'), ('data', 'datum'), ('quality', 'quality'), ('challenges', 'challenge'), ('that', 'that'), ('could', 'could'), ('be', 'be'), ('worked', 'work'), ('around', 'around'), ('to', 'to'), ('realize', 'realize'), ('more', 'more'), ('value', 'value'), ('.', '.')] 

 Dependency tags are: 
>> [(('Working', 'uncovered'), 'advcl'), (('through', 'proof'), 'case'), (('this', 'proof'), 'det'), (('first', 'proof'), 'amod'), (('proof', 'Working'), 'obl'), (('of', 'value'), 'case'), (('value', 'proof'), 'nmod'), ((',', 'uncovered'), 'punct'), (('the', 'scientists'), 'det'), (('data', 'scientists'), 'compound'), (('scientists', 'uncovered'), 'nsubj'), (('uncovered', 'root'), 'root'), (('many', 'challenges'), 'amod'), (('data', 'quality'), 'compound'), (('quality', 'challenges'), 'compound'), (('challenges', 'uncovered'), 'obj'), (('that', 'worked'), 'nsubj:pass'), (('could', 'worked'), 'aux'), (('be', 'worked'), 'aux:pass'), (('worked', 'challenges'), 'acl:relcl'), (('around', 'worked'), 'advmod'), (('to', 'realize'), 'mark'), (('realize', 'worked'), 'advcl'), (('more', 'value'), 'amod'), (('value', 'realize'), 'obj'), (('.', 'uncovered'), 'punct')]

 Named Entites are: 
>> [('first', 'ORDINAL')]

================================ Paragraph 155 =================================

Figure 5: The most valuable AI implementations. 


------------------- Sentence 1 -------------------

 Figure 5: The most valuable AI implementations. 

Tokens are: 
>> ['Figure', '5', ':', 'The', 'most', 'valuable', 'AI', 'implementations', '.'] 

 UPOS tags are: 
>> [('Figure', 'PROPN'), ('5', 'NUM'), (':', 'PUNCT'), ('The', 'DET'), ('most', 'ADV'), ('valuable', 'ADJ'), ('AI', 'NOUN'), ('implementations', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Figure', 'NNP'), ('5', 'CD'), (':', ':'), ('The', 'DT'), ('most', 'RBS'), ('valuable', 'JJ'), ('AI', 'NN'), ('implementations', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Figure', 'Figure'), ('5', '5'), (':', ':'), ('The', 'the'), ('most', 'most'), ('valuable', 'valuable'), ('AI', 'ai'), ('implementations', 'implementation'), ('.', '.')] 

 Dependency tags are: 
>> [(('Figure', 'root'), 'root'), (('5', 'Figure'), 'dep'), ((':', 'implementations'), 'punct'), (('The', 'implementations'), 'det'), (('most', 'valuable'), 'advmod'), (('valuable', 'implementations'), 'amod'), (('AI', 'implementations'), 'compound'), (('implementations', 'Figure'), 'appos'), (('.', 'Figure'), 'punct')]

 Named Entites are: 
>> [('5', 'CARDINAL'), ('AI', 'ORG')]

================================ Paragraph 156 =================================

Designing and  delivering new  


------------------- Sentence 1 -------------------

 Designing and  delivering new 

Tokens are: 
>> ['Designing', 'and', 'delivering', 'new'] 

 UPOS tags are: 
>> [('Designing', 'VERB'), ('and', 'CCONJ'), ('delivering', 'VERB'), ('new', 'ADJ')] 

 XPOS tags are: 
>> [('Designing', 'VBG'), ('and', 'CC'), ('delivering', 'VBG'), ('new', 'JJ')] 

 Lemmas are: 
>> [('Designing', 'design'), ('and', 'and'), ('delivering', 'deliver'), ('new', 'new')] 

 Dependency tags are: 
>> [(('Designing', 'root'), 'root'), (('and', 'delivering'), 'cc'), (('delivering', 'Designing'), 'conj'), (('new', 'delivering'), 'xcomp')]

 Named Entites are: 
>> []

================================ Paragraph 157 =================================

customer engagement 


------------------- Sentence 1 -------------------

 customer engagement 

Tokens are: 
>> ['customer', 'engagement'] 

 UPOS tags are: 
>> [('customer', 'NOUN'), ('engagement', 'NOUN')] 

 XPOS tags are: 
>> [('customer', 'NN'), ('engagement', 'NN')] 

 Lemmas are: 
>> [('customer', 'customer'), ('engagement', 'engagement')] 

 Dependency tags are: 
>> [(('customer', 'engagement'), 'compound'), (('engagement', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 158 =================================

Cognitive   engagement 


------------------- Sentence 1 -------------------

 Cognitive   engagement 

Tokens are: 
>> ['Cognitive', 'engagement'] 

 UPOS tags are: 
>> [('Cognitive', 'ADJ'), ('engagement', 'NOUN')] 

 XPOS tags are: 
>> [('Cognitive', 'JJ'), ('engagement', 'NN')] 

 Lemmas are: 
>> [('Cognitive', 'cognitive'), ('engagement', 'engagement')] 

 Dependency tags are: 
>> [(('Cognitive', 'engagement'), 'amod'), (('engagement', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 159 =================================

Elevating and   scaling knowledge   


------------------- Sentence 1 -------------------

 Elevating and   scaling knowledge 

Tokens are: 
>> ['Elevating', 'and', 'scaling', 'knowledge'] 

 UPOS tags are: 
>> [('Elevating', 'VERB'), ('and', 'CCONJ'), ('scaling', 'NOUN'), ('knowledge', 'NOUN')] 

 XPOS tags are: 
>> [('Elevating', 'VBG'), ('and', 'CC'), ('scaling', 'NN'), ('knowledge', 'NN')] 

 Lemmas are: 
>> [('Elevating', 'elevate'), ('and', 'and'), ('scaling', 'scaling'), ('knowledge', 'knowledge')] 

 Dependency tags are: 
>> [(('Elevating', 'knowledge'), 'amod'), (('and', 'scaling'), 'cc'), (('scaling', 'Elevating'), 'conj'), (('knowledge', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 160 =================================

and expertise 


------------------- Sentence 1 -------------------

 and expertise 

Tokens are: 
>> ['and', 'expertise'] 

 UPOS tags are: 
>> [('and', 'CCONJ'), ('expertise', 'NOUN')] 

 XPOS tags are: 
>> [('and', 'CC'), ('expertise', 'NN')] 

 Lemmas are: 
>> [('and', 'and'), ('expertise', 'expertise')] 

 Dependency tags are: 
>> [(('and', 'expertise'), 'cc'), (('expertise', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 161 =================================

Cognitive   insights &   


------------------- Sentence 1 -------------------

 Cognitive   insights & 

Tokens are: 
>> ['Cognitive', 'insights', '&'] 

 UPOS tags are: 
>> [('Cognitive', 'ADJ'), ('insights', 'NOUN'), ('&', 'CCONJ')] 

 XPOS tags are: 
>> [('Cognitive', 'JJ'), ('insights', 'NNS'), ('&', 'CC')] 

 Lemmas are: 
>> [('Cognitive', 'cognitive'), ('insights', 'insight'), ('&', '&')] 

 Dependency tags are: 
>> [(('Cognitive', 'insights'), 'amod'), (('insights', 'root'), 'root'), (('&', 'insights'), 'cc')]

 Named Entites are: 
>> []

================================ Paragraph 162 =================================

knowledge 


------------------- Sentence 1 -------------------

 knowledge 

Tokens are: 
>> ['knowledge'] 

 UPOS tags are: 
>> [('knowledge', 'NOUN')] 

 XPOS tags are: 
>> [('knowledge', 'NN')] 

 Lemmas are: 
>> [('knowledge', 'knowledge')] 

 Dependency tags are: 
>> [(('knowledge', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 163 =================================

Designing and  delivering agility and  operational efficiency 


------------------- Sentence 1 -------------------

 Designing and  delivering agility and  operational efficiency 

Tokens are: 
>> ['Designing', 'and', 'delivering', 'agility', 'and', 'operational', 'efficiency'] 

 UPOS tags are: 
>> [('Designing', 'VERB'), ('and', 'CCONJ'), ('delivering', 'VERB'), ('agility', 'NOUN'), ('and', 'CCONJ'), ('operational', 'ADJ'), ('efficiency', 'NOUN')] 

 XPOS tags are: 
>> [('Designing', 'VBG'), ('and', 'CC'), ('delivering', 'VBG'), ('agility', 'NN'), ('and', 'CC'), ('operational', 'JJ'), ('efficiency', 'NN')] 

 Lemmas are: 
>> [('Designing', 'design'), ('and', 'and'), ('delivering', 'deliver'), ('agility', 'agility'), ('and', 'and'), ('operational', 'operational'), ('efficiency', 'efficiency')] 

 Dependency tags are: 
>> [(('Designing', 'root'), 'root'), (('and', 'delivering'), 'cc'), (('delivering', 'Designing'), 'conj'), (('agility', 'Designing'), 'obj'), (('and', 'efficiency'), 'cc'), (('operational', 'efficiency'), 'amod'), (('efficiency', 'agility'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 164 =================================

Cognitive   automation


------------------- Sentence 1 -------------------

 Cognitive   automation 

Tokens are: 
>> ['Cognitive', 'automation'] 

 UPOS tags are: 
>> [('Cognitive', 'ADJ'), ('automation', 'NOUN')] 

 XPOS tags are: 
>> [('Cognitive', 'JJ'), ('automation', 'NN')] 

 Lemmas are: 
>> [('Cognitive', 'cognitive'), ('automation', 'automation')] 

 Dependency tags are: 
>> [(('Cognitive', 'automation'), 'amod'), (('automation', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 165 =================================

IBM Services     9 


------------------- Sentence 1 -------------------

 IBM Services     9 

Tokens are: 
>> ['IBM', 'Services', '9'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('Services', 'PROPN'), ('9', 'NUM')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('Services', 'NNPS'), ('9', 'CD')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('Services', 'Service'), ('9', '9')] 

 Dependency tags are: 
>> [(('IBM', 'Services'), 'compound'), (('Services', 'root'), 'root'), (('9', 'Services'), 'nummod')]

 Named Entites are: 
>> [('IBM Services', 'ORG')]

================================ Paragraph 166 =================================

Utility company: micro-grid energy forecasting and  production mix optimization The output of machine learning-based predictive models  with prescriptive, mathematical optimization models to  prescribe the optimal mix of power production sources to  meet predicted demand and to minimize costs. This required  both the prediction of demand as well as prediction of  available solar and wind energy capacity. 


------------------- Sentence 1 -------------------

 Utility company: micro-grid energy forecasting and  production mix optimization 

Tokens are: 
>> ['Utility', 'company', ':', 'micro-grid', 'energy', 'forecasting', 'and', 'production', 'mix', 'optimization'] 

 UPOS tags are: 
>> [('Utility', 'NOUN'), ('company', 'NOUN'), (':', 'PUNCT'), ('micro-grid', 'ADJ'), ('energy', 'NOUN'), ('forecasting', 'NOUN'), ('and', 'CCONJ'), ('production', 'NOUN'), ('mix', 'NOUN'), ('optimization', 'NOUN')] 

 XPOS tags are: 
>> [('Utility', 'NN'), ('company', 'NN'), (':', ':'), ('micro-grid', 'JJ'), ('energy', 'NN'), ('forecasting', 'NN'), ('and', 'CC'), ('production', 'NN'), ('mix', 'NN'), ('optimization', 'NN')] 

 Lemmas are: 
>> [('Utility', 'Utility'), ('company', 'company'), (':', ':'), ('micro-grid', 'micro-grid'), ('energy', 'energy'), ('forecasting', 'forecasting'), ('and', 'and'), ('production', 'production'), ('mix', 'mix'), ('optimization', 'optimization')] 

 Dependency tags are: 
>> [(('Utility', 'company'), 'compound'), (('company', 'root'), 'root'), ((':', 'company'), 'punct'), (('micro-grid', 'forecasting'), 'amod'), (('energy', 'forecasting'), 'compound'), (('forecasting', 'optimization'), 'compound'), (('and', 'production'), 'cc'), (('production', 'forecasting'), 'conj'), (('mix', 'optimization'), 'compound'), (('optimization', 'company'), 'appos')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 The output of machine learning-based predictive models  with prescriptive, mathematical optimization models to  prescribe the optimal mix of power production sources to  meet predicted demand and to minimize costs. 

Tokens are: 
>> ['The', 'output', 'of', 'machine', 'learning', '-', 'based', 'predictive', 'models', 'with', 'prescriptive', ',', 'mathematical', 'optimization', 'models', 'to', 'prescribe', 'the', 'optimal', 'mix', 'of', 'power', 'production', 'sources', 'to', 'meet', 'predicted', 'demand', 'and', 'to', 'minimize', 'costs', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('output', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('predictive', 'ADJ'), ('models', 'NOUN'), ('with', 'ADP'), ('prescriptive', 'ADJ'), (',', 'PUNCT'), ('mathematical', 'ADJ'), ('optimization', 'NOUN'), ('models', 'NOUN'), ('to', 'PART'), ('prescribe', 'VERB'), ('the', 'DET'), ('optimal', 'ADJ'), ('mix', 'NOUN'), ('of', 'ADP'), ('power', 'NOUN'), ('production', 'NOUN'), ('sources', 'NOUN'), ('to', 'PART'), ('meet', 'VERB'), ('predicted', 'VERB'), ('demand', 'NOUN'), ('and', 'CCONJ'), ('to', 'PART'), ('minimize', 'VERB'), ('costs', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('output', 'NN'), ('of', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('-', 'HYPH'), ('based', 'VBN'), ('predictive', 'JJ'), ('models', 'NNS'), ('with', 'IN'), ('prescriptive', 'JJ'), (',', ','), ('mathematical', 'JJ'), ('optimization', 'NN'), ('models', 'NNS'), ('to', 'TO'), ('prescribe', 'VB'), ('the', 'DT'), ('optimal', 'JJ'), ('mix', 'NN'), ('of', 'IN'), ('power', 'NN'), ('production', 'NN'), ('sources', 'NNS'), ('to', 'TO'), ('meet', 'VB'), ('predicted', 'VBN'), ('demand', 'NN'), ('and', 'CC'), ('to', 'TO'), ('minimize', 'VB'), ('costs', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('output', 'output'), ('of', 'of'), ('machine', 'machine'), ('learning', 'learning'), ('-', '-'), ('based', 'base'), ('predictive', 'predictive'), ('models', 'model'), ('with', 'with'), ('prescriptive', 'prescriptive'), (',', ','), ('mathematical', 'mathematical'), ('optimization', 'optimization'), ('models', 'model'), ('to', 'to'), ('prescribe', 'prescribe'), ('the', 'the'), ('optimal', 'optimal'), ('mix', 'mix'), ('of', 'of'), ('power', 'power'), ('production', 'production'), ('sources', 'source'), ('to', 'to'), ('meet', 'meet'), ('predicted', 'predict'), ('demand', 'demand'), ('and', 'and'), ('to', 'to'), ('minimize', 'minimize'), ('costs', 'cost'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'output'), 'det'), (('output', 'root'), 'root'), (('of', 'models'), 'case'), (('machine', 'models'), 'compound'), (('learning', 'based'), 'compound'), (('-', 'based'), 'punct'), (('based', 'models'), 'amod'), (('predictive', 'models'), 'amod'), (('models', 'output'), 'nmod'), (('with', 'models'), 'case'), (('prescriptive', 'models'), 'amod'), ((',', 'models'), 'punct'), (('mathematical', 'optimization'), 'amod'), (('optimization', 'models'), 'compound'), (('models', 'models'), 'nmod'), (('to', 'prescribe'), 'mark'), (('prescribe', 'output'), 'acl'), (('the', 'mix'), 'det'), (('optimal', 'mix'), 'amod'), (('mix', 'prescribe'), 'obj'), (('of', 'sources'), 'case'), (('power', 'production'), 'compound'), (('production', 'sources'), 'compound'), (('sources', 'mix'), 'nmod'), (('to', 'meet'), 'mark'), (('meet', 'prescribe'), 'advcl'), (('predicted', 'demand'), 'amod'), (('demand', 'meet'), 'obj'), (('and', 'minimize'), 'cc'), (('to', 'minimize'), 'mark'), (('minimize', 'meet'), 'conj'), (('costs', 'minimize'), 'obj'), (('.', 'output'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 This required  both the prediction of demand as well as prediction of  available solar and wind energy capacity. 

Tokens are: 
>> ['This', 'required', 'both', 'the', 'prediction', 'of', 'demand', 'as', 'well', 'as', 'prediction', 'of', 'available', 'solar', 'and', 'wind', 'energy', 'capacity', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('required', 'VERB'), ('both', 'CCONJ'), ('the', 'DET'), ('prediction', 'NOUN'), ('of', 'ADP'), ('demand', 'NOUN'), ('as', 'ADV'), ('well', 'ADV'), ('as', 'ADP'), ('prediction', 'NOUN'), ('of', 'ADP'), ('available', 'ADJ'), ('solar', 'NOUN'), ('and', 'CCONJ'), ('wind', 'NOUN'), ('energy', 'NOUN'), ('capacity', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('required', 'VBD'), ('both', 'CC'), ('the', 'DT'), ('prediction', 'NN'), ('of', 'IN'), ('demand', 'NN'), ('as', 'RB'), ('well', 'RB'), ('as', 'IN'), ('prediction', 'NN'), ('of', 'IN'), ('available', 'JJ'), ('solar', 'NN'), ('and', 'CC'), ('wind', 'NN'), ('energy', 'NN'), ('capacity', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('required', 'require'), ('both', 'both'), ('the', 'the'), ('prediction', 'prediction'), ('of', 'of'), ('demand', 'demand'), ('as', 'as'), ('well', 'well'), ('as', 'as'), ('prediction', 'prediction'), ('of', 'of'), ('available', 'available'), ('solar', 'solar'), ('and', 'and'), ('wind', 'wind'), ('energy', 'energy'), ('capacity', 'capacity'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'required'), 'nsubj'), (('required', 'root'), 'root'), (('both', 'prediction'), 'cc:preconj'), (('the', 'prediction'), 'det'), (('prediction', 'required'), 'obj'), (('of', 'demand'), 'case'), (('demand', 'prediction'), 'nmod'), (('as', 'prediction'), 'cc'), (('well', 'as'), 'fixed'), (('as', 'as'), 'fixed'), (('prediction', 'prediction'), 'conj'), (('of', 'solar'), 'case'), (('available', 'solar'), 'amod'), (('solar', 'prediction'), 'nmod'), (('and', 'capacity'), 'cc'), (('wind', 'energy'), 'compound'), (('energy', 'capacity'), 'compound'), (('capacity', 'solar'), 'conj'), (('.', 'required'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 167 =================================

Material producer: insights dashboard IBM worked with the client’s sourcing experts to understand  the business dynamics and create inventory of possibly  relevant data sources. Several machine learning models  were then trained to learn the price behavior and forecast  future price development. The models also enabled  buyers to evaluate their own “what if” scenarios. This was  further supplemented with IBM® Watson Discovery News  service, which identified the most relevant news articles  related to the material of interest. This all came together  for the user in an interactive dashboard to consume the  insights and interact with the data and models to make  buying decisions. 


------------------- Sentence 1 -------------------

 Material producer: insights dashboard IBM worked with the client’s sourcing experts to understand  the business dynamics and create inventory of possibly  relevant data sources. 

Tokens are: 
>> ['Material', 'producer', ':', 'insights', 'dashboard', 'IBM', 'worked', 'with', 'the', 'client', '’s', 'sourcing', 'experts', 'to', 'understand', 'the', 'business', 'dynamics', 'and', 'create', 'inventory', 'of', 'possibly', 'relevant', 'data', 'sources', '.'] 

 UPOS tags are: 
>> [('Material', 'NOUN'), ('producer', 'NOUN'), (':', 'PUNCT'), ('insights', 'NOUN'), ('dashboard', 'NOUN'), ('IBM', 'PROPN'), ('worked', 'VERB'), ('with', 'ADP'), ('the', 'DET'), ('client', 'NOUN'), ('’s', 'PART'), ('sourcing', 'NOUN'), ('experts', 'NOUN'), ('to', 'PART'), ('understand', 'VERB'), ('the', 'DET'), ('business', 'NOUN'), ('dynamics', 'NOUN'), ('and', 'CCONJ'), ('create', 'VERB'), ('inventory', 'NOUN'), ('of', 'ADP'), ('possibly', 'ADV'), ('relevant', 'ADJ'), ('data', 'NOUN'), ('sources', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Material', 'NN'), ('producer', 'NN'), (':', ':'), ('insights', 'NNS'), ('dashboard', 'NN'), ('IBM', 'NNP'), ('worked', 'VBD'), ('with', 'IN'), ('the', 'DT'), ('client', 'NN'), ('’s', 'POS'), ('sourcing', 'NN'), ('experts', 'NNS'), ('to', 'TO'), ('understand', 'VB'), ('the', 'DT'), ('business', 'NN'), ('dynamics', 'NNS'), ('and', 'CC'), ('create', 'VB'), ('inventory', 'NN'), ('of', 'IN'), ('possibly', 'RB'), ('relevant', 'JJ'), ('data', 'NN'), ('sources', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Material', 'material'), ('producer', 'producer'), (':', ':'), ('insights', 'insight'), ('dashboard', 'dashboard'), ('IBM', 'IBM'), ('worked', 'work'), ('with', 'with'), ('the', 'the'), ('client', 'client'), ('’s', "'s"), ('sourcing', 'sourcing'), ('experts', 'expert'), ('to', 'to'), ('understand', 'understand'), ('the', 'the'), ('business', 'business'), ('dynamics', 'dynamics'), ('and', 'and'), ('create', 'create'), ('inventory', 'inventory'), ('of', 'of'), ('possibly', 'possibly'), ('relevant', 'relevant'), ('data', 'datum'), ('sources', 'source'), ('.', '.')] 

 Dependency tags are: 
>> [(('Material', 'producer'), 'compound'), (('producer', 'root'), 'root'), ((':', 'producer'), 'punct'), (('insights', 'dashboard'), 'compound'), (('dashboard', 'worked'), 'nsubj'), (('IBM', 'worked'), 'nsubj'), (('worked', 'producer'), 'parataxis'), (('with', 'experts'), 'case'), (('the', 'client'), 'det'), (('client', 'experts'), 'nmod:poss'), (('’s', 'client'), 'case'), (('sourcing', 'experts'), 'compound'), (('experts', 'worked'), 'obl'), (('to', 'understand'), 'mark'), (('understand', 'worked'), 'advcl'), (('the', 'dynamics'), 'det'), (('business', 'dynamics'), 'compound'), (('dynamics', 'understand'), 'obj'), (('and', 'create'), 'cc'), (('create', 'understand'), 'conj'), (('inventory', 'create'), 'obj'), (('of', 'sources'), 'case'), (('possibly', 'sources'), 'advmod'), (('relevant', 'sources'), 'amod'), (('data', 'sources'), 'compound'), (('sources', 'inventory'), 'nmod'), (('.', 'producer'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG')]

------------------- Sentence 2 -------------------

 Several machine learning models  were then trained to learn the price behavior and forecast  future price development. 

Tokens are: 
>> ['Several', 'machine', 'learning', 'models', 'were', 'then', 'trained', 'to', 'learn', 'the', 'price', 'behavior', 'and', 'forecast', 'future', 'price', 'development', '.'] 

 UPOS tags are: 
>> [('Several', 'ADJ'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('models', 'NOUN'), ('were', 'AUX'), ('then', 'ADV'), ('trained', 'VERB'), ('to', 'PART'), ('learn', 'VERB'), ('the', 'DET'), ('price', 'NOUN'), ('behavior', 'NOUN'), ('and', 'CCONJ'), ('forecast', 'ADJ'), ('future', 'ADJ'), ('price', 'NOUN'), ('development', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Several', 'JJ'), ('machine', 'NN'), ('learning', 'NN'), ('models', 'NNS'), ('were', 'VBD'), ('then', 'RB'), ('trained', 'VBN'), ('to', 'TO'), ('learn', 'VB'), ('the', 'DT'), ('price', 'NN'), ('behavior', 'NN'), ('and', 'CC'), ('forecast', 'JJ'), ('future', 'JJ'), ('price', 'NN'), ('development', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Several', 'several'), ('machine', 'machine'), ('learning', 'learning'), ('models', 'model'), ('were', 'be'), ('then', 'then'), ('trained', 'train'), ('to', 'to'), ('learn', 'learn'), ('the', 'the'), ('price', 'price'), ('behavior', 'behavior'), ('and', 'and'), ('forecast', 'forecast'), ('future', 'future'), ('price', 'price'), ('development', 'development'), ('.', '.')] 

 Dependency tags are: 
>> [(('Several', 'models'), 'amod'), (('machine', 'models'), 'compound'), (('learning', 'models'), 'compound'), (('models', 'trained'), 'nsubj:pass'), (('were', 'trained'), 'aux:pass'), (('then', 'trained'), 'advmod'), (('trained', 'root'), 'root'), (('to', 'learn'), 'mark'), (('learn', 'trained'), 'xcomp'), (('the', 'behavior'), 'det'), (('price', 'behavior'), 'compound'), (('behavior', 'learn'), 'obj'), (('and', 'development'), 'cc'), (('forecast', 'development'), 'amod'), (('future', 'development'), 'amod'), (('price', 'development'), 'compound'), (('development', 'behavior'), 'conj'), (('.', 'trained'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 The models also enabled  buyers to evaluate their own “what if” scenarios. 

Tokens are: 
>> ['The', 'models', 'also', 'enabled', 'buyers', 'to', 'evaluate', 'their', 'own', '“', 'what', 'if', '”', 'scenarios', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('models', 'NOUN'), ('also', 'ADV'), ('enabled', 'VERB'), ('buyers', 'NOUN'), ('to', 'PART'), ('evaluate', 'VERB'), ('their', 'PRON'), ('own', 'ADJ'), ('“', 'PUNCT'), ('what', 'PRON'), ('if', 'SCONJ'), ('”', 'PUNCT'), ('scenarios', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('models', 'NNS'), ('also', 'RB'), ('enabled', 'VBD'), ('buyers', 'NNS'), ('to', 'TO'), ('evaluate', 'VB'), ('their', 'PRP$'), ('own', 'JJ'), ('“', '``'), ('what', 'WP'), ('if', 'IN'), ('”', "''"), ('scenarios', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('models', 'model'), ('also', 'also'), ('enabled', 'enable'), ('buyers', 'buyer'), ('to', 'to'), ('evaluate', 'evaluate'), ('their', 'they'), ('own', 'own'), ('“', "''"), ('what', 'what'), ('if', 'if'), ('”', "''"), ('scenarios', 'scenario'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'models'), 'det'), (('models', 'enabled'), 'nsubj'), (('also', 'enabled'), 'advmod'), (('enabled', 'root'), 'root'), (('buyers', 'enabled'), 'obj'), (('to', 'evaluate'), 'mark'), (('evaluate', 'enabled'), 'xcomp'), (('their', 'own'), 'nmod:poss'), (('own', 'evaluate'), 'obj'), (('“', 'what'), 'punct'), (('what', 'evaluate'), 'obj'), (('if', 'scenarios'), 'mark'), (('”', 'what'), 'punct'), (('scenarios', 'evaluate'), 'obj'), (('.', 'enabled'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 This was  further supplemented with IBM® 

Tokens are: 
>> ['This', 'was', 'further', 'supplemented', 'with', 'IBM', '®'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('was', 'AUX'), ('further', 'ADV'), ('supplemented', 'VERB'), ('with', 'ADP'), ('IBM', 'PROPN'), ('®', 'PROPN')] 

 XPOS tags are: 
>> [('This', 'DT'), ('was', 'VBD'), ('further', 'RB'), ('supplemented', 'VBN'), ('with', 'IN'), ('IBM', 'NNP'), ('®', 'NNP')] 

 Lemmas are: 
>> [('This', 'this'), ('was', 'be'), ('further', 'further'), ('supplemented', 'supplement'), ('with', 'with'), ('IBM', 'IBM'), ('®', '®')] 

 Dependency tags are: 
>> [(('This', 'supplemented'), 'nsubj:pass'), (('was', 'supplemented'), 'aux:pass'), (('further', 'supplemented'), 'advmod'), (('supplemented', 'root'), 'root'), (('with', '®'), 'case'), (('IBM', '®'), 'compound'), (('®', 'supplemented'), 'obl')]

 Named Entites are: 
>> [('IBM', 'ORG')]

------------------- Sentence 5 -------------------

 Watson Discovery News  service, which identified the most relevant news articles  related to the material of interest. 

Tokens are: 
>> ['Watson', 'Discovery', 'News', 'service', ',', 'which', 'identified', 'the', 'most', 'relevant', 'news', 'articles', 'related', 'to', 'the', 'material', 'of', 'interest', '.'] 

 UPOS tags are: 
>> [('Watson', 'PROPN'), ('Discovery', 'PROPN'), ('News', 'PROPN'), ('service', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('identified', 'VERB'), ('the', 'DET'), ('most', 'ADV'), ('relevant', 'ADJ'), ('news', 'NOUN'), ('articles', 'NOUN'), ('related', 'ADJ'), ('to', 'ADP'), ('the', 'DET'), ('material', 'NOUN'), ('of', 'ADP'), ('interest', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Watson', 'NNP'), ('Discovery', 'NNP'), ('News', 'NNP'), ('service', 'NN'), (',', ','), ('which', 'WDT'), ('identified', 'VBD'), ('the', 'DT'), ('most', 'RBS'), ('relevant', 'JJ'), ('news', 'NN'), ('articles', 'NNS'), ('related', 'JJ'), ('to', 'IN'), ('the', 'DT'), ('material', 'NN'), ('of', 'IN'), ('interest', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Watson', 'Watson'), ('Discovery', 'Discovery'), ('News', 'News'), ('service', 'service'), (',', ','), ('which', 'which'), ('identified', 'identify'), ('the', 'the'), ('most', 'most'), ('relevant', 'relevant'), ('news', 'news'), ('articles', 'article'), ('related', 'related'), ('to', 'to'), ('the', 'the'), ('material', 'material'), ('of', 'of'), ('interest', 'interest'), ('.', '.')] 

 Dependency tags are: 
>> [(('Watson', 'service'), 'compound'), (('Discovery', 'News'), 'compound'), (('News', 'service'), 'compound'), (('service', 'root'), 'root'), ((',', 'service'), 'punct'), (('which', 'identified'), 'nsubj'), (('identified', 'service'), 'acl:relcl'), (('the', 'articles'), 'det'), (('most', 'relevant'), 'advmod'), (('relevant', 'articles'), 'amod'), (('news', 'articles'), 'compound'), (('articles', 'identified'), 'obj'), (('related', 'articles'), 'amod'), (('to', 'material'), 'case'), (('the', 'material'), 'det'), (('material', 'related'), 'obl'), (('of', 'interest'), 'case'), (('interest', 'material'), 'nmod'), (('.', 'service'), 'punct')]

 Named Entites are: 
>> [('Watson Discovery News', 'ORG')]

------------------- Sentence 6 -------------------

 This all came together  for the user in an interactive dashboard to consume the  insights and interact with the data and models to make  buying decisions. 

Tokens are: 
>> ['This', 'all', 'came', 'together', 'for', 'the', 'user', 'in', 'an', 'interactive', 'dashboard', 'to', 'consume', 'the', 'insights', 'and', 'interact', 'with', 'the', 'data', 'and', 'models', 'to', 'make', 'buying', 'decisions', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('all', 'DET'), ('came', 'VERB'), ('together', 'ADV'), ('for', 'ADP'), ('the', 'DET'), ('user', 'NOUN'), ('in', 'ADP'), ('an', 'DET'), ('interactive', 'ADJ'), ('dashboard', 'NOUN'), ('to', 'PART'), ('consume', 'VERB'), ('the', 'DET'), ('insights', 'NOUN'), ('and', 'CCONJ'), ('interact', 'VERB'), ('with', 'ADP'), ('the', 'DET'), ('data', 'NOUN'), ('and', 'CCONJ'), ('models', 'NOUN'), ('to', 'PART'), ('make', 'VERB'), ('buying', 'VERB'), ('decisions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('all', 'DT'), ('came', 'VBD'), ('together', 'RB'), ('for', 'IN'), ('the', 'DT'), ('user', 'NN'), ('in', 'IN'), ('an', 'DT'), ('interactive', 'JJ'), ('dashboard', 'NN'), ('to', 'TO'), ('consume', 'VB'), ('the', 'DT'), ('insights', 'NNS'), ('and', 'CC'), ('interact', 'VB'), ('with', 'IN'), ('the', 'DT'), ('data', 'NNS'), ('and', 'CC'), ('models', 'NNS'), ('to', 'TO'), ('make', 'VB'), ('buying', 'VBG'), ('decisions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('all', 'all'), ('came', 'come'), ('together', 'together'), ('for', 'for'), ('the', 'the'), ('user', 'user'), ('in', 'in'), ('an', 'a'), ('interactive', 'interactive'), ('dashboard', 'dashboard'), ('to', 'to'), ('consume', 'consume'), ('the', 'the'), ('insights', 'insight'), ('and', 'and'), ('interact', 'interact'), ('with', 'with'), ('the', 'the'), ('data', 'datum'), ('and', 'and'), ('models', 'model'), ('to', 'to'), ('make', 'make'), ('buying', 'buy'), ('decisions', 'decision'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'came'), 'nsubj'), (('all', 'This'), 'det'), (('came', 'root'), 'root'), (('together', 'came'), 'advmod'), (('for', 'user'), 'case'), (('the', 'user'), 'det'), (('user', 'came'), 'obl'), (('in', 'dashboard'), 'case'), (('an', 'dashboard'), 'det'), (('interactive', 'dashboard'), 'amod'), (('dashboard', 'came'), 'obl'), (('to', 'consume'), 'mark'), (('consume', 'came'), 'advcl'), (('the', 'insights'), 'det'), (('insights', 'consume'), 'obj'), (('and', 'interact'), 'cc'), (('interact', 'consume'), 'conj'), (('with', 'data'), 'case'), (('the', 'data'), 'det'), (('data', 'interact'), 'obl'), (('and', 'models'), 'cc'), (('models', 'data'), 'conj'), (('to', 'make'), 'mark'), (('make', 'interact'), 'advcl'), (('buying', 'make'), 'xcomp'), (('decisions', 'buying'), 'obj'), (('.', 'came'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 168 =================================

Best practices to successfully   implement AI within an organization  Let’s discuss what you need to do before implementing AI.  Currently, many companies are scrambling to implement AI  within their environments because they believe it will keep  them ahead of the game—which, if thought through, is the  case. But here are a few steps you need to take. 


------------------- Sentence 1 -------------------

 Best practices to successfully   implement AI within an organization  Let’s discuss what you need to do before implementing AI. 

Tokens are: 
>> ['Best', 'practices', 'to', 'successfully', 'implement', 'AI', 'within', 'an', 'organization', 'Let', '’s', 'discuss', 'what', 'you', 'need', 'to', 'do', 'before', 'implementing', 'AI', '.'] 

 UPOS tags are: 
>> [('Best', 'ADJ'), ('practices', 'NOUN'), ('to', 'PART'), ('successfully', 'ADV'), ('implement', 'VERB'), ('AI', 'PRON'), ('within', 'ADP'), ('an', 'DET'), ('organization', 'NOUN'), ('Let', 'VERB'), ('’s', 'PRON'), ('discuss', 'VERB'), ('what', 'PRON'), ('you', 'PRON'), ('need', 'VERB'), ('to', 'PART'), ('do', 'VERB'), ('before', 'SCONJ'), ('implementing', 'VERB'), ('AI', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Best', 'JJS'), ('practices', 'NNS'), ('to', 'TO'), ('successfully', 'RB'), ('implement', 'VB'), ('AI', 'PRP'), ('within', 'IN'), ('an', 'DT'), ('organization', 'NN'), ('Let', 'VB'), ('’s', 'PRP'), ('discuss', 'VB'), ('what', 'WP'), ('you', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('do', 'VB'), ('before', 'IN'), ('implementing', 'VBG'), ('AI', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('Best', 'good'), ('practices', 'practice'), ('to', 'to'), ('successfully', 'successfully'), ('implement', 'implement'), ('AI', 'ai'), ('within', 'within'), ('an', 'a'), ('organization', 'organization'), ('Let', 'let'), ('’s', 'us'), ('discuss', 'discuss'), ('what', 'what'), ('you', 'you'), ('need', 'need'), ('to', 'to'), ('do', 'do'), ('before', 'before'), ('implementing', 'implement'), ('AI', 'ai'), ('.', '.')] 

 Dependency tags are: 
>> [(('Best', 'practices'), 'amod'), (('practices', 'Let'), 'nsubj'), (('to', 'implement'), 'mark'), (('successfully', 'implement'), 'advmod'), (('implement', 'practices'), 'acl'), (('AI', 'implement'), 'obj'), (('within', 'organization'), 'case'), (('an', 'organization'), 'det'), (('organization', 'implement'), 'obl'), (('Let', 'root'), 'root'), (('’s', 'Let'), 'obj'), (('discuss', 'Let'), 'xcomp'), (('what', 'discuss'), 'obj'), (('you', 'need'), 'nsubj'), (('need', 'what'), 'acl:relcl'), (('to', 'do'), 'mark'), (('do', 'need'), 'xcomp'), (('before', 'implementing'), 'mark'), (('implementing', 'do'), 'advcl'), (('AI', 'implementing'), 'obj'), (('.', 'Let'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG'), ('AI', 'ORG')]

------------------- Sentence 2 -------------------

 Currently, many companies are scrambling to implement AI  within their environments because they believe it will keep  them ahead of the game—which, if thought through, is the  case. 

Tokens are: 
>> ['Currently', ',', 'many', 'companies', 'are', 'scrambling', 'to', 'implement', 'AI', 'within', 'their', 'environments', 'because', 'they', 'believe', 'it', 'will', 'keep', 'them', 'ahead', 'of', 'the', 'game', '—', 'which', ',', 'if', 'thought', 'through', ',', 'is', 'the', 'case', '.'] 

 UPOS tags are: 
>> [('Currently', 'ADV'), (',', 'PUNCT'), ('many', 'ADJ'), ('companies', 'NOUN'), ('are', 'AUX'), ('scrambling', 'VERB'), ('to', 'PART'), ('implement', 'VERB'), ('AI', 'NOUN'), ('within', 'ADP'), ('their', 'PRON'), ('environments', 'NOUN'), ('because', 'SCONJ'), ('they', 'PRON'), ('believe', 'VERB'), ('it', 'PRON'), ('will', 'AUX'), ('keep', 'VERB'), ('them', 'PRON'), ('ahead', 'ADV'), ('of', 'ADP'), ('the', 'DET'), ('game', 'NOUN'), ('—', 'PUNCT'), ('which', 'PRON'), (',', 'PUNCT'), ('if', 'SCONJ'), ('thought', 'VERB'), ('through', 'ADP'), (',', 'PUNCT'), ('is', 'AUX'), ('the', 'DET'), ('case', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Currently', 'RB'), (',', ','), ('many', 'JJ'), ('companies', 'NNS'), ('are', 'VBP'), ('scrambling', 'VBG'), ('to', 'TO'), ('implement', 'VB'), ('AI', 'NNS'), ('within', 'IN'), ('their', 'PRP$'), ('environments', 'NNS'), ('because', 'IN'), ('they', 'PRP'), ('believe', 'VBP'), ('it', 'PRP'), ('will', 'MD'), ('keep', 'VB'), ('them', 'PRP'), ('ahead', 'RB'), ('of', 'IN'), ('the', 'DT'), ('game', 'NN'), ('—', ':'), ('which', 'WDT'), (',', ','), ('if', 'IN'), ('thought', 'VBN'), ('through', 'IN'), (',', ','), ('is', 'VBZ'), ('the', 'DT'), ('case', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Currently', 'currently'), (',', ','), ('many', 'many'), ('companies', 'company'), ('are', 'be'), ('scrambling', 'scramble'), ('to', 'to'), ('implement', 'implement'), ('AI', 'ai'), ('within', 'within'), ('their', 'they'), ('environments', 'environment'), ('because', 'because'), ('they', 'they'), ('believe', 'believe'), ('it', 'it'), ('will', 'will'), ('keep', 'keep'), ('them', 'they'), ('ahead', 'ahead'), ('of', 'of'), ('the', 'the'), ('game', 'game'), ('—', '—'), ('which', 'which'), (',', ','), ('if', 'if'), ('thought', 'think'), ('through', 'through'), (',', ','), ('is', 'be'), ('the', 'the'), ('case', 'case'), ('.', '.')] 

 Dependency tags are: 
>> [(('Currently', 'scrambling'), 'advmod'), ((',', 'scrambling'), 'punct'), (('many', 'companies'), 'amod'), (('companies', 'scrambling'), 'nsubj'), (('are', 'scrambling'), 'aux'), (('scrambling', 'root'), 'root'), (('to', 'implement'), 'mark'), (('implement', 'scrambling'), 'xcomp'), (('AI', 'implement'), 'obj'), (('within', 'environments'), 'case'), (('their', 'environments'), 'nmod:poss'), (('environments', 'implement'), 'obl'), (('because', 'believe'), 'mark'), (('they', 'believe'), 'nsubj'), (('believe', 'scrambling'), 'advcl'), (('it', 'keep'), 'nsubj'), (('will', 'keep'), 'aux'), (('keep', 'believe'), 'ccomp'), (('them', 'keep'), 'obj'), (('ahead', 'keep'), 'advmod'), (('of', 'game'), 'case'), (('the', 'game'), 'det'), (('game', 'ahead'), 'obl'), (('—', 'case'), 'punct'), (('which', 'case'), 'nsubj'), ((',', 'which'), 'punct'), (('if', 'thought'), 'mark'), (('thought', 'case'), 'advcl'), (('through', 'thought'), 'obl'), ((',', 'thought'), 'punct'), (('is', 'case'), 'cop'), (('the', 'case'), 'det'), (('case', 'keep'), 'advcl'), (('.', 'scrambling'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 3 -------------------

 But here are a few steps you need to take. 

Tokens are: 
>> ['But', 'here', 'are', 'a', 'few', 'steps', 'you', 'need', 'to', 'take', '.'] 

 UPOS tags are: 
>> [('But', 'CCONJ'), ('here', 'ADV'), ('are', 'AUX'), ('a', 'DET'), ('few', 'ADJ'), ('steps', 'NOUN'), ('you', 'PRON'), ('need', 'VERB'), ('to', 'PART'), ('take', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('But', 'CC'), ('here', 'RB'), ('are', 'VBP'), ('a', 'DT'), ('few', 'JJ'), ('steps', 'NNS'), ('you', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('take', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('But', 'but'), ('here', 'here'), ('are', 'be'), ('a', 'a'), ('few', 'few'), ('steps', 'step'), ('you', 'you'), ('need', 'need'), ('to', 'to'), ('take', 'take'), ('.', '.')] 

 Dependency tags are: 
>> [(('But', 'here'), 'cc'), (('here', 'root'), 'root'), (('are', 'here'), 'cop'), (('a', 'steps'), 'det'), (('few', 'steps'), 'amod'), (('steps', 'here'), 'nsubj'), (('you', 'need'), 'nsubj'), (('need', 'steps'), 'acl:relcl'), (('to', 'take'), 'mark'), (('take', 'need'), 'xcomp'), (('.', 'here'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 169 =================================

We’ve defined three main steps to implement AI in your  company. These steps are: 


------------------- Sentence 1 -------------------

 We’ve defined three main steps to implement AI in your  company. 

Tokens are: 
>> ['We', '’ve', 'defined', 'three', 'main', 'steps', 'to', 'implement', 'AI', 'in', 'your', 'company', '.'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('’ve', 'AUX'), ('defined', 'VERB'), ('three', 'NUM'), ('main', 'ADJ'), ('steps', 'NOUN'), ('to', 'PART'), ('implement', 'VERB'), ('AI', 'PRON'), ('in', 'ADP'), ('your', 'PRON'), ('company', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('’ve', 'VBP'), ('defined', 'VBN'), ('three', 'CD'), ('main', 'JJ'), ('steps', 'NNS'), ('to', 'TO'), ('implement', 'VB'), ('AI', 'PRP'), ('in', 'IN'), ('your', 'PRP$'), ('company', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('’ve', 'have'), ('defined', 'define'), ('three', 'three'), ('main', 'main'), ('steps', 'step'), ('to', 'to'), ('implement', 'implement'), ('AI', 'ai'), ('in', 'in'), ('your', 'you'), ('company', 'company'), ('.', '.')] 

 Dependency tags are: 
>> [(('We', 'defined'), 'nsubj'), (('’ve', 'defined'), 'aux'), (('defined', 'root'), 'root'), (('three', 'steps'), 'nummod'), (('main', 'steps'), 'amod'), (('steps', 'defined'), 'obj'), (('to', 'implement'), 'mark'), (('implement', 'steps'), 'acl'), (('AI', 'implement'), 'obj'), (('in', 'company'), 'case'), (('your', 'company'), 'nmod:poss'), (('company', 'implement'), 'obl'), (('.', 'defined'), 'punct')]

 Named Entites are: 
>> [('three', 'CARDINAL')]

------------------- Sentence 2 -------------------

 These steps are: 

Tokens are: 
>> ['These', 'steps', 'are', ':'] 

 UPOS tags are: 
>> [('These', 'DET'), ('steps', 'NOUN'), ('are', 'AUX'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('These', 'DT'), ('steps', 'NNS'), ('are', 'VBP'), (':', ':')] 

 Lemmas are: 
>> [('These', 'this'), ('steps', 'step'), ('are', 'be'), (':', ':')] 

 Dependency tags are: 
>> [(('These', 'steps'), 'det'), (('steps', 'are'), 'nsubj'), (('are', 'root'), 'root'), ((':', 'are'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 170 =================================

 — Develop an AI strategy and roadmap  — Establish AI capabilities and skills  — Start small and scale quickly 


------------------- Sentence 1 -------------------

 — Develop an AI strategy and roadmap  — Establish AI capabilities and skills  — 

Tokens are: 
>> ['—', 'Develop', 'an', 'AI', 'strategy', 'and', 'roadmap', '—', 'Establish', 'AI', 'capabilities', 'and', 'skills', '—'] 

 UPOS tags are: 
>> [('—', 'PUNCT'), ('Develop', 'VERB'), ('an', 'DET'), ('AI', 'NOUN'), ('strategy', 'NOUN'), ('and', 'CCONJ'), ('roadmap', 'NOUN'), ('—', 'PUNCT'), ('Establish', 'VERB'), ('AI', 'ADP'), ('capabilities', 'NOUN'), ('and', 'CCONJ'), ('skills', 'NOUN'), ('—', 'PUNCT')] 

 XPOS tags are: 
>> [('—', ':'), ('Develop', 'VB'), ('an', 'DT'), ('AI', 'NN'), ('strategy', 'NN'), ('and', 'CC'), ('roadmap', 'NN'), ('—', ':'), ('Establish', 'VB'), ('AI', 'IN'), ('capabilities', 'NNS'), ('and', 'CC'), ('skills', 'NNS'), ('—', ':')] 

 Lemmas are: 
>> [('—', '—'), ('Develop', 'develop'), ('an', 'a'), ('AI', 'ai'), ('strategy', 'strategy'), ('and', 'and'), ('roadmap', 'roadmap'), ('—', '—'), ('Establish', 'establish'), ('AI', 'ai'), ('capabilities', 'capability'), ('and', 'and'), ('skills', 'skill'), ('—', '—')] 

 Dependency tags are: 
>> [(('—', 'Develop'), 'punct'), (('Develop', 'root'), 'root'), (('an', 'strategy'), 'det'), (('AI', 'strategy'), 'compound'), (('strategy', 'Develop'), 'obj'), (('and', 'roadmap'), 'cc'), (('roadmap', 'strategy'), 'conj'), (('—', 'Establish'), 'punct'), (('Establish', 'Develop'), 'parataxis'), (('AI', 'capabilities'), 'case'), (('capabilities', 'Establish'), 'obl'), (('and', 'skills'), 'cc'), (('skills', 'capabilities'), 'conj'), (('—', 'Develop'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Start small and scale quickly 

Tokens are: 
>> ['Start', 'small', 'and', 'scale', 'quickly'] 

 UPOS tags are: 
>> [('Start', 'VERB'), ('small', 'ADJ'), ('and', 'CCONJ'), ('scale', 'VERB'), ('quickly', 'ADV')] 

 XPOS tags are: 
>> [('Start', 'VB'), ('small', 'JJ'), ('and', 'CC'), ('scale', 'VB'), ('quickly', 'RB')] 

 Lemmas are: 
>> [('Start', 'start'), ('small', 'small'), ('and', 'and'), ('scale', 'scale'), ('quickly', 'quickly')] 

 Dependency tags are: 
>> [(('Start', 'root'), 'root'), (('small', 'Start'), 'xcomp'), (('and', 'scale'), 'cc'), (('scale', 'Start'), 'conj'), (('quickly', 'scale'), 'advmod')]

 Named Entites are: 
>> []

================================ Paragraph 171 =================================

Develop an AI strategy and roadmap First, it’s important to understand AI and to research what  it can and can’t do for your organization. You can get more  familiar with AI by collaborating with a data scientist, because  it’s important that the C-level has a good understanding of   AI and its implementation difficulties before they define  where and how to implement. What often happens if AI  is not holistically understood the overall project won’t  provide value. 


------------------- Sentence 1 -------------------

 Develop an AI strategy and roadmap First, it’s important to understand AI and to research what  it can and can’t do for your organization. 

Tokens are: 
>> ['Develop', 'an', 'AI', 'strategy', 'and', 'roadmap', 'First', ',', 'it', '’s', 'important', 'to', 'understand', 'AI', 'and', 'to', 'research', 'what', 'it', 'can', 'and', 'ca', 'n’t', 'do', 'for', 'your', 'organization', '.'] 

 UPOS tags are: 
>> [('Develop', 'VERB'), ('an', 'DET'), ('AI', 'NOUN'), ('strategy', 'NOUN'), ('and', 'CCONJ'), ('roadmap', 'NOUN'), ('First', 'ADV'), (',', 'PUNCT'), ('it', 'PRON'), ('’s', 'AUX'), ('important', 'ADJ'), ('to', 'PART'), ('understand', 'VERB'), ('AI', 'ADP'), ('and', 'CCONJ'), ('to', 'PART'), ('research', 'VERB'), ('what', 'PRON'), ('it', 'PRON'), ('can', 'AUX'), ('and', 'CCONJ'), ('ca', 'AUX'), ('n’t', 'PART'), ('do', 'VERB'), ('for', 'ADP'), ('your', 'PRON'), ('organization', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Develop', 'VB'), ('an', 'DT'), ('AI', 'NN'), ('strategy', 'NN'), ('and', 'CC'), ('roadmap', 'NN'), ('First', 'RB'), (',', ','), ('it', 'PRP'), ('’s', 'VBZ'), ('important', 'JJ'), ('to', 'TO'), ('understand', 'VB'), ('AI', 'IN'), ('and', 'CC'), ('to', 'TO'), ('research', 'VB'), ('what', 'WP'), ('it', 'PRP'), ('can', 'MD'), ('and', 'CC'), ('ca', 'MD'), ('n’t', 'RB'), ('do', 'VB'), ('for', 'IN'), ('your', 'PRP$'), ('organization', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Develop', 'develop'), ('an', 'a'), ('AI', 'ai'), ('strategy', 'strategy'), ('and', 'and'), ('roadmap', 'roadmap'), ('First', 'first'), (',', ','), ('it', 'it'), ('’s', 'be'), ('important', 'important'), ('to', 'to'), ('understand', 'understand'), ('AI', 'ai'), ('and', 'and'), ('to', 'to'), ('research', 'research'), ('what', 'what'), ('it', 'it'), ('can', 'can'), ('and', 'and'), ('ca', 'can'), ('n’t', 'not'), ('do', 'do'), ('for', 'for'), ('your', 'you'), ('organization', 'organization'), ('.', '.')] 

 Dependency tags are: 
>> [(('Develop', 'root'), 'root'), (('an', 'strategy'), 'det'), (('AI', 'strategy'), 'compound'), (('strategy', 'Develop'), 'obj'), (('and', 'roadmap'), 'cc'), (('roadmap', 'strategy'), 'conj'), (('First', 'Develop'), 'advmod'), ((',', 'Develop'), 'punct'), (('it', 'important'), 'expl'), (('’s', 'important'), 'cop'), (('important', 'Develop'), 'parataxis'), (('to', 'understand'), 'mark'), (('understand', 'important'), 'csubj'), (('AI', 'understand'), 'obl'), (('and', 'research'), 'cc'), (('to', 'research'), 'mark'), (('research', 'understand'), 'conj'), (('what', 'research'), 'obj'), (('it', 'can'), 'nsubj'), (('can', 'what'), 'acl:relcl'), (('and', 'do'), 'cc'), (('ca', 'do'), 'aux'), (('n’t', 'do'), 'advmod'), (('do', 'research'), 'conj'), (('for', 'organization'), 'case'), (('your', 'organization'), 'nmod:poss'), (('organization', 'do'), 'obl'), (('.', 'Develop'), 'punct')]

 Named Entites are: 
>> [('First', 'ORDINAL'), ('AI', 'ORG')]

------------------- Sentence 2 -------------------

 You can get more  familiar with AI by collaborating with a data scientist, because  it’s important that the C-level has a good understanding of   AI and its implementation difficulties before they define  where and how to implement. 

Tokens are: 
>> ['You', 'can', 'get', 'more', 'familiar', 'with', 'AI', 'by', 'collaborating', 'with', 'a', 'data', 'scientist', ',', 'because', 'it', '’s', 'important', 'that', 'the', 'C-level', 'has', 'a', 'good', 'understanding', 'of', 'AI', 'and', 'its', 'implementation', 'difficulties', 'before', 'they', 'define', 'where', 'and', 'how', 'to', 'implement', '.'] 

 UPOS tags are: 
>> [('You', 'PRON'), ('can', 'AUX'), ('get', 'VERB'), ('more', 'ADV'), ('familiar', 'ADJ'), ('with', 'ADP'), ('AI', 'NOUN'), ('by', 'SCONJ'), ('collaborating', 'VERB'), ('with', 'ADP'), ('a', 'DET'), ('data', 'NOUN'), ('scientist', 'NOUN'), (',', 'PUNCT'), ('because', 'SCONJ'), ('it', 'PRON'), ('’s', 'AUX'), ('important', 'ADJ'), ('that', 'SCONJ'), ('the', 'DET'), ('C-level', 'PROPN'), ('has', 'VERB'), ('a', 'DET'), ('good', 'ADJ'), ('understanding', 'NOUN'), ('of', 'ADP'), ('AI', 'NOUN'), ('and', 'CCONJ'), ('its', 'PRON'), ('implementation', 'NOUN'), ('difficulties', 'NOUN'), ('before', 'SCONJ'), ('they', 'PRON'), ('define', 'VERB'), ('where', 'SCONJ'), ('and', 'CCONJ'), ('how', 'SCONJ'), ('to', 'PART'), ('implement', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('You', 'PRP'), ('can', 'MD'), ('get', 'VB'), ('more', 'RBR'), ('familiar', 'JJ'), ('with', 'IN'), ('AI', 'NN'), ('by', 'IN'), ('collaborating', 'VBG'), ('with', 'IN'), ('a', 'DT'), ('data', 'NN'), ('scientist', 'NN'), (',', ','), ('because', 'IN'), ('it', 'PRP'), ('’s', 'VBZ'), ('important', 'JJ'), ('that', 'IN'), ('the', 'DT'), ('C-level', 'NNP'), ('has', 'VBZ'), ('a', 'DT'), ('good', 'JJ'), ('understanding', 'NN'), ('of', 'IN'), ('AI', 'NN'), ('and', 'CC'), ('its', 'PRP$'), ('implementation', 'NN'), ('difficulties', 'NNS'), ('before', 'IN'), ('they', 'PRP'), ('define', 'VBP'), ('where', 'WRB'), ('and', 'CC'), ('how', 'WRB'), ('to', 'TO'), ('implement', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('You', 'you'), ('can', 'can'), ('get', 'get'), ('more', 'more'), ('familiar', 'familiar'), ('with', 'with'), ('AI', 'ai'), ('by', 'by'), ('collaborating', 'collaborate'), ('with', 'with'), ('a', 'a'), ('data', 'datum'), ('scientist', 'scientist'), (',', ','), ('because', 'because'), ('it', 'it'), ('’s', 'be'), ('important', 'important'), ('that', 'that'), ('the', 'the'), ('C-level', 'C-level'), ('has', 'have'), ('a', 'a'), ('good', 'good'), ('understanding', 'understanding'), ('of', 'of'), ('AI', 'ai'), ('and', 'and'), ('its', 'its'), ('implementation', 'implementation'), ('difficulties', 'difficulty'), ('before', 'before'), ('they', 'they'), ('define', 'define'), ('where', 'where'), ('and', 'and'), ('how', 'how'), ('to', 'to'), ('implement', 'implement'), ('.', '.')] 

 Dependency tags are: 
>> [(('You', 'get'), 'nsubj'), (('can', 'get'), 'aux'), (('get', 'root'), 'root'), (('more', 'familiar'), 'advmod'), (('familiar', 'get'), 'xcomp'), (('with', 'AI'), 'case'), (('AI', 'familiar'), 'obl'), (('by', 'collaborating'), 'mark'), (('collaborating', 'get'), 'advcl'), (('with', 'scientist'), 'case'), (('a', 'scientist'), 'det'), (('data', 'scientist'), 'compound'), (('scientist', 'collaborating'), 'obl'), ((',', 'important'), 'punct'), (('because', 'important'), 'mark'), (('it', 'important'), 'expl'), (('’s', 'important'), 'cop'), (('important', 'get'), 'advcl'), (('that', 'has'), 'mark'), (('the', 'C-level'), 'det'), (('C-level', 'has'), 'nsubj'), (('has', 'important'), 'csubj'), (('a', 'understanding'), 'det'), (('good', 'understanding'), 'amod'), (('understanding', 'has'), 'obj'), (('of', 'AI'), 'case'), (('AI', 'understanding'), 'nmod'), (('and', 'difficulties'), 'cc'), (('its', 'difficulties'), 'nmod:poss'), (('implementation', 'difficulties'), 'compound'), (('difficulties', 'AI'), 'conj'), (('before', 'define'), 'mark'), (('they', 'define'), 'nsubj'), (('define', 'has'), 'advcl'), (('where', 'implement'), 'mark'), (('and', 'how'), 'cc'), (('how', 'where'), 'conj'), (('to', 'implement'), 'mark'), (('implement', 'define'), 'xcomp'), (('.', 'get'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 What often happens if AI  is not holistically understood the overall project won’t  provide value. 

Tokens are: 
>> ['What', 'often', 'happens', 'if', 'AI', 'is', 'not', 'holistically', 'understood', 'the', 'overall', 'project', 'wo', 'n’t', 'provide', 'value', '.'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('often', 'ADV'), ('happens', 'VERB'), ('if', 'SCONJ'), ('AI', 'PRON'), ('is', 'AUX'), ('not', 'PART'), ('holistically', 'ADV'), ('understood', 'VERB'), ('the', 'DET'), ('overall', 'ADJ'), ('project', 'NOUN'), ('wo', 'AUX'), ('n’t', 'PART'), ('provide', 'VERB'), ('value', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('often', 'RB'), ('happens', 'VBZ'), ('if', 'IN'), ('AI', 'PRP'), ('is', 'VBZ'), ('not', 'RB'), ('holistically', 'RB'), ('understood', 'VBN'), ('the', 'DT'), ('overall', 'JJ'), ('project', 'NN'), ('wo', 'MD'), ('n’t', 'RB'), ('provide', 'VB'), ('value', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('often', 'often'), ('happens', 'happen'), ('if', 'if'), ('AI', 'ai'), ('is', 'be'), ('not', 'not'), ('holistically', 'holistically'), ('understood', 'understand'), ('the', 'the'), ('overall', 'overall'), ('project', 'project'), ('wo', 'will'), ('n’t', 'not'), ('provide', 'provide'), ('value', 'value'), ('.', '.')] 

 Dependency tags are: 
>> [(('What', 'happens'), 'nsubj'), (('often', 'happens'), 'advmod'), (('happens', 'root'), 'root'), (('if', 'understood'), 'mark'), (('AI', 'understood'), 'nsubj:pass'), (('is', 'understood'), 'aux:pass'), (('not', 'understood'), 'advmod'), (('holistically', 'understood'), 'advmod'), (('understood', 'provide'), 'advcl'), (('the', 'project'), 'det'), (('overall', 'project'), 'amod'), (('project', 'provide'), 'nsubj'), (('wo', 'provide'), 'aux'), (('n’t', 'provide'), 'advmod'), (('provide', 'happens'), 'advcl'), (('value', 'provide'), 'obj'), (('.', 'happens'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

================================ Paragraph 172 =================================

Once AI is understood, the next question you should ask  yourself is: “What specific problem do I want to solve, or what  opportunity do I want to take?” Is your company looking to  drive efficiency in the back office, differentiate its digital  proposition, generate new revenue streams by leveraging  customers’ insights or even reinvent its entire business? 


------------------- Sentence 1 -------------------

 Once AI is understood, the next question you should ask  yourself is: “What specific problem do I want to solve, or what  opportunity do I want to take?” 

Tokens are: 
>> ['Once', 'AI', 'is', 'understood', ',', 'the', 'next', 'question', 'you', 'should', 'ask', 'yourself', 'is', ':', '“', 'What', 'specific', 'problem', 'do', 'I', 'want', 'to', 'solve', ',', 'or', 'what', 'opportunity', 'do', 'I', 'want', 'to', 'take', '?', '”'] 

 UPOS tags are: 
>> [('Once', 'SCONJ'), ('AI', 'PRON'), ('is', 'AUX'), ('understood', 'VERB'), (',', 'PUNCT'), ('the', 'DET'), ('next', 'ADJ'), ('question', 'NOUN'), ('you', 'PRON'), ('should', 'AUX'), ('ask', 'VERB'), ('yourself', 'PRON'), ('is', 'VERB'), (':', 'PUNCT'), ('“', 'PUNCT'), ('What', 'DET'), ('specific', 'ADJ'), ('problem', 'NOUN'), ('do', 'AUX'), ('I', 'PRON'), ('want', 'VERB'), ('to', 'PART'), ('solve', 'VERB'), (',', 'PUNCT'), ('or', 'CCONJ'), ('what', 'DET'), ('opportunity', 'NOUN'), ('do', 'AUX'), ('I', 'PRON'), ('want', 'VERB'), ('to', 'PART'), ('take', 'VERB'), ('?', 'PUNCT'), ('”', 'PUNCT')] 

 XPOS tags are: 
>> [('Once', 'IN'), ('AI', 'PRP'), ('is', 'VBZ'), ('understood', 'VBN'), (',', ','), ('the', 'DT'), ('next', 'JJ'), ('question', 'NN'), ('you', 'PRP'), ('should', 'MD'), ('ask', 'VB'), ('yourself', 'PRP'), ('is', 'VBZ'), (':', ':'), ('“', '``'), ('What', 'WDT'), ('specific', 'JJ'), ('problem', 'NN'), ('do', 'VBP'), ('I', 'PRP'), ('want', 'VB'), ('to', 'TO'), ('solve', 'VB'), (',', ','), ('or', 'CC'), ('what', 'WDT'), ('opportunity', 'NN'), ('do', 'VBP'), ('I', 'PRP'), ('want', 'VB'), ('to', 'TO'), ('take', 'VB'), ('?', '.'), ('”', "''")] 

 Lemmas are: 
>> [('Once', 'once'), ('AI', 'ai'), ('is', 'be'), ('understood', 'understand'), (',', ','), ('the', 'the'), ('next', 'next'), ('question', 'question'), ('you', 'you'), ('should', 'should'), ('ask', 'ask'), ('yourself', 'yourself'), ('is', 'be'), (':', ':'), ('“', "''"), ('What', 'what'), ('specific', 'specific'), ('problem', 'problem'), ('do', 'do'), ('I', 'I'), ('want', 'want'), ('to', 'to'), ('solve', 'solve'), (',', ','), ('or', 'or'), ('what', 'what'), ('opportunity', 'opportunity'), ('do', 'do'), ('I', 'I'), ('want', 'want'), ('to', 'to'), ('take', 'take'), ('?', '?'), ('”', "''")] 

 Dependency tags are: 
>> [(('Once', 'understood'), 'mark'), (('AI', 'understood'), 'nsubj:pass'), (('is', 'understood'), 'aux:pass'), (('understood', 'is'), 'advcl'), ((',', 'is'), 'punct'), (('the', 'question'), 'det'), (('next', 'question'), 'amod'), (('question', 'is'), 'nsubj'), (('you', 'ask'), 'nsubj'), (('should', 'ask'), 'aux'), (('ask', 'question'), 'acl:relcl'), (('yourself', 'ask'), 'obj'), (('is', 'root'), 'root'), ((':', 'is'), 'punct'), (('“', 'want'), 'punct'), (('What', 'problem'), 'det'), (('specific', 'problem'), 'amod'), (('problem', 'want'), 'obj'), (('do', 'want'), 'aux'), (('I', 'want'), 'nsubj'), (('want', 'is'), 'ccomp'), (('to', 'solve'), 'mark'), (('solve', 'want'), 'xcomp'), ((',', 'want'), 'punct'), (('or', 'want'), 'cc'), (('what', 'opportunity'), 'det'), (('opportunity', 'want'), 'obj'), (('do', 'want'), 'aux'), (('I', 'want'), 'nsubj'), (('want', 'want'), 'conj'), (('to', 'take'), 'mark'), (('take', 'want'), 'xcomp'), (('?', 'want'), 'punct'), (('”', 'want'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 2 -------------------

 Is your company looking to  drive efficiency in the back office, differentiate its digital  proposition, generate new revenue streams by leveraging  customers’ insights or even reinvent its entire business? 

Tokens are: 
>> ['Is', 'your', 'company', 'looking', 'to', 'drive', 'efficiency', 'in', 'the', 'back', 'office', ',', 'differentiate', 'its', 'digital', 'proposition', ',', 'generate', 'new', 'revenue', 'streams', 'by', 'leveraging', 'customers', '’', 'insights', 'or', 'even', 'reinvent', 'its', 'entire', 'business', '?'] 

 UPOS tags are: 
>> [('Is', 'AUX'), ('your', 'PRON'), ('company', 'NOUN'), ('looking', 'VERB'), ('to', 'PART'), ('drive', 'VERB'), ('efficiency', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('back', 'NOUN'), ('office', 'NOUN'), (',', 'PUNCT'), ('differentiate', 'VERB'), ('its', 'PRON'), ('digital', 'ADJ'), ('proposition', 'NOUN'), (',', 'PUNCT'), ('generate', 'VERB'), ('new', 'ADJ'), ('revenue', 'NOUN'), ('streams', 'NOUN'), ('by', 'SCONJ'), ('leveraging', 'VERB'), ('customers', 'NOUN'), ('’', 'PART'), ('insights', 'NOUN'), ('or', 'CCONJ'), ('even', 'ADV'), ('reinvent', 'VERB'), ('its', 'PRON'), ('entire', 'ADJ'), ('business', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Is', 'VBZ'), ('your', 'PRP$'), ('company', 'NN'), ('looking', 'VBG'), ('to', 'TO'), ('drive', 'VB'), ('efficiency', 'NN'), ('in', 'IN'), ('the', 'DT'), ('back', 'NN'), ('office', 'NN'), (',', ','), ('differentiate', 'VB'), ('its', 'PRP$'), ('digital', 'JJ'), ('proposition', 'NN'), (',', ','), ('generate', 'VB'), ('new', 'JJ'), ('revenue', 'NN'), ('streams', 'NNS'), ('by', 'IN'), ('leveraging', 'VBG'), ('customers', 'NNS'), ('’', 'POS'), ('insights', 'NNS'), ('or', 'CC'), ('even', 'RB'), ('reinvent', 'VB'), ('its', 'PRP$'), ('entire', 'JJ'), ('business', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Is', 'be'), ('your', 'you'), ('company', 'company'), ('looking', 'look'), ('to', 'to'), ('drive', 'drive'), ('efficiency', 'efficiency'), ('in', 'in'), ('the', 'the'), ('back', 'back'), ('office', 'office'), (',', ','), ('differentiate', 'differentiate'), ('its', 'its'), ('digital', 'digital'), ('proposition', 'proposition'), (',', ','), ('generate', 'generate'), ('new', 'new'), ('revenue', 'revenue'), ('streams', 'stream'), ('by', 'by'), ('leveraging', 'leverage'), ('customers', 'customer'), ('’', "'s"), ('insights', 'insight'), ('or', 'or'), ('even', 'even'), ('reinvent', 'reinvent'), ('its', 'its'), ('entire', 'entire'), ('business', 'business'), ('?', '?')] 

 Dependency tags are: 
>> [(('Is', 'generate'), 'aux'), (('your', 'company'), 'nmod:poss'), (('company', 'looking'), 'nsubj'), (('looking', 'generate'), 'advcl'), (('to', 'drive'), 'mark'), (('drive', 'looking'), 'xcomp'), (('efficiency', 'drive'), 'obj'), (('in', 'office'), 'case'), (('the', 'office'), 'det'), (('back', 'office'), 'compound'), (('office', 'drive'), 'obl'), ((',', 'differentiate'), 'punct'), (('differentiate', 'drive'), 'conj'), (('its', 'proposition'), 'nmod:poss'), (('digital', 'proposition'), 'amod'), (('proposition', 'differentiate'), 'obj'), ((',', 'generate'), 'punct'), (('generate', 'root'), 'root'), (('new', 'streams'), 'amod'), (('revenue', 'streams'), 'compound'), (('streams', 'generate'), 'obj'), (('by', 'leveraging'), 'mark'), (('leveraging', 'generate'), 'advcl'), (('customers', 'insights'), 'nmod:poss'), (('’', 'customers'), 'case'), (('insights', 'leveraging'), 'obj'), (('or', 'reinvent'), 'cc'), (('even', 'reinvent'), 'advmod'), (('reinvent', 'leveraging'), 'conj'), (('its', 'business'), 'nmod:poss'), (('entire', 'business'), 'amod'), (('business', 'reinvent'), 'obj'), (('?', 'generate'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 173 =================================

10     Beyond the hype: A guide to understanding and successfully implementing artificial intelligence within your business 


------------------- Sentence 1 -------------------

 10     Beyond the hype: A guide to understanding and successfully implementing artificial intelligence within your business 

Tokens are: 
>> ['10', 'Beyond', 'the', 'hype', ':', 'A', 'guide', 'to', 'understanding', 'and', 'successfully', 'implementing', 'artificial', 'intelligence', 'within', 'your', 'business'] 

 UPOS tags are: 
>> [('10', 'NUM'), ('Beyond', 'ADP'), ('the', 'DET'), ('hype', 'NOUN'), (':', 'PUNCT'), ('A', 'DET'), ('guide', 'NOUN'), ('to', 'ADP'), ('understanding', 'VERB'), ('and', 'CCONJ'), ('successfully', 'ADV'), ('implementing', 'VERB'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('within', 'ADP'), ('your', 'PRON'), ('business', 'NOUN')] 

 XPOS tags are: 
>> [('10', 'LS'), ('Beyond', 'IN'), ('the', 'DT'), ('hype', 'NN'), (':', ':'), ('A', 'DT'), ('guide', 'NN'), ('to', 'IN'), ('understanding', 'VBG'), ('and', 'CC'), ('successfully', 'RB'), ('implementing', 'VBG'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('within', 'IN'), ('your', 'PRP$'), ('business', 'NN')] 

 Lemmas are: 
>> [('10', '10'), ('Beyond', 'beyond'), ('the', 'the'), ('hype', 'hype'), (':', ':'), ('A', 'a'), ('guide', 'guide'), ('to', 'to'), ('understanding', 'understand'), ('and', 'and'), ('successfully', 'successfully'), ('implementing', 'implement'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('within', 'within'), ('your', 'you'), ('business', 'business')] 

 Dependency tags are: 
>> [(('10', 'hype'), 'nummod'), (('Beyond', 'hype'), 'case'), (('the', 'hype'), 'det'), (('hype', 'root'), 'root'), ((':', 'guide'), 'punct'), (('A', 'guide'), 'det'), (('guide', 'hype'), 'appos'), (('to', 'understanding'), 'mark'), (('understanding', 'guide'), 'acl'), (('and', 'implementing'), 'cc'), (('successfully', 'implementing'), 'advmod'), (('implementing', 'understanding'), 'conj'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'implementing'), 'obj'), (('within', 'business'), 'case'), (('your', 'business'), 'nmod:poss'), (('business', 'implementing'), 'obl')]

 Named Entites are: 
>> []

================================ Paragraph 174 =================================

After having thought this through, you’ll probably have  many different use cases. At this point, it’s critical to  prioritize these cases into a transformation roadmap that  covers both a long-term vision as well as concrete feasible  quick wins. Next, you should think about what data you  have available. To solve most of the problems with AI you  need to have relevant data. Without data, AI will not provide  any value. For many companies it’s a task in and of itself  to keep track of the type of data—as well as where it’s  stored and in what way. Often the first step will be to  understand the data you currently have and the type you  need to implement your AI case. 


------------------- Sentence 1 -------------------

 After having thought this through, you’ll probably have  many different use cases. 

Tokens are: 
>> ['After', 'having', 'thought', 'this', 'through', ',', 'you', '’ll', 'probably', 'have', 'many', 'different', 'use', 'cases', '.'] 

 UPOS tags are: 
>> [('After', 'SCONJ'), ('having', 'AUX'), ('thought', 'VERB'), ('this', 'PRON'), ('through', 'ADP'), (',', 'PUNCT'), ('you', 'PRON'), ('’ll', 'AUX'), ('probably', 'ADV'), ('have', 'VERB'), ('many', 'ADJ'), ('different', 'ADJ'), ('use', 'NOUN'), ('cases', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('After', 'IN'), ('having', 'VBG'), ('thought', 'VBN'), ('this', 'DT'), ('through', 'RP'), (',', ','), ('you', 'PRP'), ('’ll', 'MD'), ('probably', 'RB'), ('have', 'VB'), ('many', 'JJ'), ('different', 'JJ'), ('use', 'NN'), ('cases', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('After', 'after'), ('having', 'have'), ('thought', 'think'), ('this', 'this'), ('through', 'through'), (',', ','), ('you', 'you'), ('’ll', 'will'), ('probably', 'probably'), ('have', 'have'), ('many', 'many'), ('different', 'different'), ('use', 'use'), ('cases', 'case'), ('.', '.')] 

 Dependency tags are: 
>> [(('After', 'thought'), 'mark'), (('having', 'thought'), 'aux'), (('thought', 'have'), 'advcl'), (('this', 'thought'), 'obj'), (('through', 'thought'), 'compound:prt'), ((',', 'have'), 'punct'), (('you', 'have'), 'nsubj'), (('’ll', 'have'), 'aux'), (('probably', 'have'), 'advmod'), (('have', 'root'), 'root'), (('many', 'cases'), 'amod'), (('different', 'cases'), 'amod'), (('use', 'cases'), 'compound'), (('cases', 'have'), 'obj'), (('.', 'have'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 At this point, it’s critical to  prioritize these cases into a transformation roadmap that  covers both a long-term vision as well as concrete feasible  quick wins. 

Tokens are: 
>> ['At', 'this', 'point', ',', 'it', '’s', 'critical', 'to', 'prioritize', 'these', 'cases', 'into', 'a', 'transformation', 'roadmap', 'that', 'covers', 'both', 'a', 'long', '-', 'term', 'vision', 'as', 'well', 'as', 'concrete', 'feasible', 'quick', 'wins', '.'] 

 UPOS tags are: 
>> [('At', 'ADP'), ('this', 'DET'), ('point', 'NOUN'), (',', 'PUNCT'), ('it', 'PRON'), ('’s', 'AUX'), ('critical', 'ADJ'), ('to', 'PART'), ('prioritize', 'VERB'), ('these', 'DET'), ('cases', 'NOUN'), ('into', 'ADP'), ('a', 'DET'), ('transformation', 'NOUN'), ('roadmap', 'NOUN'), ('that', 'PRON'), ('covers', 'VERB'), ('both', 'CCONJ'), ('a', 'DET'), ('long', 'ADJ'), ('-', 'PUNCT'), ('term', 'NOUN'), ('vision', 'NOUN'), ('as', 'ADV'), ('well', 'ADV'), ('as', 'ADP'), ('concrete', 'NOUN'), ('feasible', 'ADJ'), ('quick', 'ADJ'), ('wins', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('At', 'IN'), ('this', 'DT'), ('point', 'NN'), (',', ','), ('it', 'PRP'), ('’s', 'VBZ'), ('critical', 'JJ'), ('to', 'TO'), ('prioritize', 'VB'), ('these', 'DT'), ('cases', 'NNS'), ('into', 'IN'), ('a', 'DT'), ('transformation', 'NN'), ('roadmap', 'NN'), ('that', 'WDT'), ('covers', 'VBZ'), ('both', 'CC'), ('a', 'DT'), ('long', 'JJ'), ('-', 'HYPH'), ('term', 'NN'), ('vision', 'NN'), ('as', 'RB'), ('well', 'RB'), ('as', 'IN'), ('concrete', 'NN'), ('feasible', 'JJ'), ('quick', 'JJ'), ('wins', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('At', 'at'), ('this', 'this'), ('point', 'point'), (',', ','), ('it', 'it'), ('’s', 'be'), ('critical', 'critical'), ('to', 'to'), ('prioritize', 'prioritize'), ('these', 'this'), ('cases', 'case'), ('into', 'into'), ('a', 'a'), ('transformation', 'transformation'), ('roadmap', 'roadmap'), ('that', 'that'), ('covers', 'cover'), ('both', 'both'), ('a', 'a'), ('long', 'long'), ('-', '-'), ('term', 'term'), ('vision', 'vision'), ('as', 'as'), ('well', 'well'), ('as', 'as'), ('concrete', 'concrete'), ('feasible', 'feasible'), ('quick', 'quick'), ('wins', 'win'), ('.', '.')] 

 Dependency tags are: 
>> [(('At', 'point'), 'case'), (('this', 'point'), 'det'), (('point', 'critical'), 'obl'), ((',', 'critical'), 'punct'), (('it', 'critical'), 'expl'), (('’s', 'critical'), 'cop'), (('critical', 'root'), 'root'), (('to', 'prioritize'), 'mark'), (('prioritize', 'critical'), 'csubj'), (('these', 'cases'), 'det'), (('cases', 'prioritize'), 'obj'), (('into', 'roadmap'), 'case'), (('a', 'roadmap'), 'det'), (('transformation', 'roadmap'), 'compound'), (('roadmap', 'prioritize'), 'obl'), (('that', 'covers'), 'nsubj'), (('covers', 'roadmap'), 'acl:relcl'), (('both', 'vision'), 'cc:preconj'), (('a', 'vision'), 'det'), (('long', 'term'), 'amod'), (('-', 'term'), 'punct'), (('term', 'vision'), 'compound'), (('vision', 'covers'), 'obj'), (('as', 'wins'), 'cc'), (('well', 'as'), 'fixed'), (('as', 'as'), 'fixed'), (('concrete', 'wins'), 'compound'), (('feasible', 'wins'), 'amod'), (('quick', 'wins'), 'amod'), (('wins', 'vision'), 'conj'), (('.', 'critical'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Next, you should think about what data you  have available. 

Tokens are: 
>> ['Next', ',', 'you', 'should', 'think', 'about', 'what', 'data', 'you', 'have', 'available', '.'] 

 UPOS tags are: 
>> [('Next', 'ADV'), (',', 'PUNCT'), ('you', 'PRON'), ('should', 'AUX'), ('think', 'VERB'), ('about', 'SCONJ'), ('what', 'DET'), ('data', 'NOUN'), ('you', 'PRON'), ('have', 'VERB'), ('available', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Next', 'RB'), (',', ','), ('you', 'PRP'), ('should', 'MD'), ('think', 'VB'), ('about', 'IN'), ('what', 'WDT'), ('data', 'NNS'), ('you', 'PRP'), ('have', 'VBP'), ('available', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('Next', 'next'), (',', ','), ('you', 'you'), ('should', 'should'), ('think', 'think'), ('about', 'about'), ('what', 'what'), ('data', 'datum'), ('you', 'you'), ('have', 'have'), ('available', 'available'), ('.', '.')] 

 Dependency tags are: 
>> [(('Next', 'think'), 'advmod'), ((',', 'think'), 'punct'), (('you', 'think'), 'nsubj'), (('should', 'think'), 'aux'), (('think', 'root'), 'root'), (('about', 'have'), 'mark'), (('what', 'data'), 'det'), (('data', 'have'), 'obj'), (('you', 'have'), 'nsubj'), (('have', 'think'), 'advcl'), (('available', 'have'), 'xcomp'), (('.', 'think'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 To solve most of the problems with AI you  need to have relevant data. 

Tokens are: 
>> ['To', 'solve', 'most', 'of', 'the', 'problems', 'with', 'AI', 'you', 'need', 'to', 'have', 'relevant', 'data', '.'] 

 UPOS tags are: 
>> [('To', 'PART'), ('solve', 'VERB'), ('most', 'ADJ'), ('of', 'ADP'), ('the', 'DET'), ('problems', 'NOUN'), ('with', 'ADP'), ('AI', 'NOUN'), ('you', 'PRON'), ('need', 'VERB'), ('to', 'PART'), ('have', 'VERB'), ('relevant', 'ADJ'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('To', 'TO'), ('solve', 'VB'), ('most', 'JJS'), ('of', 'IN'), ('the', 'DT'), ('problems', 'NNS'), ('with', 'IN'), ('AI', 'NN'), ('you', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('have', 'VB'), ('relevant', 'JJ'), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('To', 'to'), ('solve', 'solve'), ('most', 'most'), ('of', 'of'), ('the', 'the'), ('problems', 'problem'), ('with', 'with'), ('AI', 'ai'), ('you', 'you'), ('need', 'need'), ('to', 'to'), ('have', 'have'), ('relevant', 'relevant'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('To', 'solve'), 'mark'), (('solve', 'need'), 'advcl'), (('most', 'solve'), 'obj'), (('of', 'problems'), 'case'), (('the', 'problems'), 'det'), (('problems', 'most'), 'nmod'), (('with', 'AI'), 'case'), (('AI', 'problems'), 'nmod'), (('you', 'need'), 'nsubj'), (('need', 'root'), 'root'), (('to', 'have'), 'mark'), (('have', 'need'), 'xcomp'), (('relevant', 'data'), 'amod'), (('data', 'have'), 'obj'), (('.', 'need'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 Without data, AI will not provide  any value. 

Tokens are: 
>> ['Without', 'data', ',', 'AI', 'will', 'not', 'provide', 'any', 'value', '.'] 

 UPOS tags are: 
>> [('Without', 'ADP'), ('data', 'NOUN'), (',', 'PUNCT'), ('AI', 'PRON'), ('will', 'AUX'), ('not', 'PART'), ('provide', 'VERB'), ('any', 'DET'), ('value', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Without', 'IN'), ('data', 'NN'), (',', ','), ('AI', 'PRP'), ('will', 'MD'), ('not', 'RB'), ('provide', 'VB'), ('any', 'DT'), ('value', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Without', 'without'), ('data', 'datum'), (',', ','), ('AI', 'ai'), ('will', 'will'), ('not', 'not'), ('provide', 'provide'), ('any', 'any'), ('value', 'value'), ('.', '.')] 

 Dependency tags are: 
>> [(('Without', 'data'), 'case'), (('data', 'provide'), 'obl'), ((',', 'provide'), 'punct'), (('AI', 'provide'), 'nsubj'), (('will', 'provide'), 'aux'), (('not', 'provide'), 'advmod'), (('provide', 'root'), 'root'), (('any', 'value'), 'det'), (('value', 'provide'), 'obj'), (('.', 'provide'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 6 -------------------

 For many companies it’s a task in and of itself  to keep track of the type of data—as well as where it’s  stored and in what way. 

Tokens are: 
>> ['For', 'many', 'companies', 'it', '’s', 'a', 'task', 'in', 'and', 'of', 'itself', 'to', 'keep', 'track', 'of', 'the', 'type', 'of', 'data', '—', 'as', 'well', 'as', 'where', 'it', '’s', 'stored', 'and', 'in', 'what', 'way', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('many', 'ADJ'), ('companies', 'NOUN'), ('it', 'PRON'), ('’s', 'AUX'), ('a', 'DET'), ('task', 'NOUN'), ('in', 'ADP'), ('and', 'CCONJ'), ('of', 'ADP'), ('itself', 'PRON'), ('to', 'PART'), ('keep', 'VERB'), ('track', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('type', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), ('—', 'PUNCT'), ('as', 'ADV'), ('well', 'ADV'), ('as', 'ADP'), ('where', 'SCONJ'), ('it', 'PRON'), ('’s', 'AUX'), ('stored', 'VERB'), ('and', 'CCONJ'), ('in', 'ADP'), ('what', 'DET'), ('way', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('many', 'JJ'), ('companies', 'NNS'), ('it', 'PRP'), ('’s', 'VBZ'), ('a', 'DT'), ('task', 'NN'), ('in', 'IN'), ('and', 'CC'), ('of', 'IN'), ('itself', 'PRP'), ('to', 'TO'), ('keep', 'VB'), ('track', 'NN'), ('of', 'IN'), ('the', 'DT'), ('type', 'NN'), ('of', 'IN'), ('data', 'NNS'), ('—', ':'), ('as', 'RB'), ('well', 'RB'), ('as', 'IN'), ('where', 'WRB'), ('it', 'PRP'), ('’s', 'VBZ'), ('stored', 'VBN'), ('and', 'CC'), ('in', 'IN'), ('what', 'WDT'), ('way', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('many', 'many'), ('companies', 'company'), ('it', 'it'), ('’s', 'be'), ('a', 'a'), ('task', 'task'), ('in', 'in'), ('and', 'and'), ('of', 'of'), ('itself', 'itself'), ('to', 'to'), ('keep', 'keep'), ('track', 'track'), ('of', 'of'), ('the', 'the'), ('type', 'type'), ('of', 'of'), ('data', 'datum'), ('—', '—'), ('as', 'as'), ('well', 'well'), ('as', 'as'), ('where', 'where'), ('it', 'it'), ('’s', 'be'), ('stored', 'store'), ('and', 'and'), ('in', 'in'), ('what', 'what'), ('way', 'way'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'companies'), 'case'), (('many', 'companies'), 'amod'), (('companies', 'task'), 'nmod'), (('it', 'task'), 'nsubj'), (('’s', 'task'), 'cop'), (('a', 'task'), 'det'), (('task', 'root'), 'root'), (('in', 'itself'), 'case'), (('and', 'of'), 'cc'), (('of', 'in'), 'conj'), (('itself', 'task'), 'obl'), (('to', 'keep'), 'mark'), (('keep', 'task'), 'csubj'), (('track', 'keep'), 'obj'), (('of', 'type'), 'case'), (('the', 'type'), 'det'), (('type', 'track'), 'nmod'), (('of', 'data'), 'case'), (('data', 'type'), 'nmod'), (('—', 'where'), 'punct'), (('as', 'where'), 'cc'), (('well', 'as'), 'fixed'), (('as', 'as'), 'fixed'), (('where', 'stored'), 'mark'), (('it', 'stored'), 'nsubj:pass'), (('’s', 'stored'), 'aux:pass'), (('stored', 'keep'), 'conj'), (('and', 'way'), 'cc'), (('in', 'way'), 'case'), (('what', 'way'), 'det'), (('way', 'stored'), 'conj'), (('.', 'task'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 7 -------------------

 Often the first step will be to  understand the data you currently have and the type you  need to implement your AI case. 

Tokens are: 
>> ['Often', 'the', 'first', 'step', 'will', 'be', 'to', 'understand', 'the', 'data', 'you', 'currently', 'have', 'and', 'the', 'type', 'you', 'need', 'to', 'implement', 'your', 'AI', 'case', '.'] 

 UPOS tags are: 
>> [('Often', 'ADV'), ('the', 'DET'), ('first', 'ADJ'), ('step', 'NOUN'), ('will', 'AUX'), ('be', 'VERB'), ('to', 'PART'), ('understand', 'VERB'), ('the', 'DET'), ('data', 'NOUN'), ('you', 'PRON'), ('currently', 'ADV'), ('have', 'VERB'), ('and', 'CCONJ'), ('the', 'DET'), ('type', 'NOUN'), ('you', 'PRON'), ('need', 'VERB'), ('to', 'PART'), ('implement', 'VERB'), ('your', 'PRON'), ('AI', 'NOUN'), ('case', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Often', 'RB'), ('the', 'DT'), ('first', 'JJ'), ('step', 'NN'), ('will', 'MD'), ('be', 'VB'), ('to', 'TO'), ('understand', 'VB'), ('the', 'DT'), ('data', 'NNS'), ('you', 'PRP'), ('currently', 'RB'), ('have', 'VBP'), ('and', 'CC'), ('the', 'DT'), ('type', 'NN'), ('you', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('implement', 'VB'), ('your', 'PRP$'), ('AI', 'NN'), ('case', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Often', 'often'), ('the', 'the'), ('first', 'first'), ('step', 'step'), ('will', 'will'), ('be', 'be'), ('to', 'to'), ('understand', 'understand'), ('the', 'the'), ('data', 'datum'), ('you', 'you'), ('currently', 'currently'), ('have', 'have'), ('and', 'and'), ('the', 'the'), ('type', 'type'), ('you', 'you'), ('need', 'need'), ('to', 'to'), ('implement', 'implement'), ('your', 'you'), ('AI', 'ai'), ('case', 'case'), ('.', '.')] 

 Dependency tags are: 
>> [(('Often', 'be'), 'advmod'), (('the', 'step'), 'det'), (('first', 'step'), 'amod'), (('step', 'be'), 'nsubj'), (('will', 'be'), 'aux'), (('be', 'root'), 'root'), (('to', 'understand'), 'mark'), (('understand', 'be'), 'ccomp'), (('the', 'data'), 'det'), (('data', 'understand'), 'obj'), (('you', 'have'), 'nsubj'), (('currently', 'have'), 'advmod'), (('have', 'data'), 'acl:relcl'), (('and', 'type'), 'cc'), (('the', 'type'), 'det'), (('type', 'data'), 'conj'), (('you', 'need'), 'nsubj'), (('need', 'type'), 'acl:relcl'), (('to', 'implement'), 'mark'), (('implement', 'need'), 'xcomp'), (('your', 'case'), 'nmod:poss'), (('AI', 'case'), 'compound'), (('case', 'implement'), 'obj'), (('.', 'be'), 'punct')]

 Named Entites are: 
>> [('first', 'ORDINAL')]

================================ Paragraph 175 =================================

Establish AI capabilities and skills AI requires a completely new set of capabilities and skills  which may be in short supply in your organization. To build  the required in-house AI skills, it’s important to plan,  establish and grow a dedicated Center of Competence or  leverage the IBM Garage concept to perform in partnership.  Not only this dedicated team is important, but you also  need to assure the right mindset and way of working in the  rest of the organization. It’s critical that these functions  occur in conjunction with developing and integrating an AI  platform within your current IT architecture to implement  and scale AI. 


------------------- Sentence 1 -------------------

 Establish AI capabilities and skills AI requires a completely new set of capabilities and skills  which may be in short supply in your organization. 

Tokens are: 
>> ['Establish', 'AI', 'capabilities', 'and', 'skills', 'AI', 'requires', 'a', 'completely', 'new', 'set', 'of', 'capabilities', 'and', 'skills', 'which', 'may', 'be', 'in', 'short', 'supply', 'in', 'your', 'organization', '.'] 

 UPOS tags are: 
>> [('Establish', 'VERB'), ('AI', 'PRON'), ('capabilities', 'NOUN'), ('and', 'CCONJ'), ('skills', 'NOUN'), ('AI', 'PUNCT'), ('requires', 'VERB'), ('a', 'DET'), ('completely', 'ADV'), ('new', 'ADJ'), ('set', 'NOUN'), ('of', 'ADP'), ('capabilities', 'NOUN'), ('and', 'CCONJ'), ('skills', 'NOUN'), ('which', 'PRON'), ('may', 'AUX'), ('be', 'AUX'), ('in', 'ADP'), ('short', 'ADJ'), ('supply', 'NOUN'), ('in', 'ADP'), ('your', 'PRON'), ('organization', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Establish', 'VB'), ('AI', 'PRP'), ('capabilities', 'NNS'), ('and', 'CC'), ('skills', 'NNS'), ('AI', ','), ('requires', 'VBZ'), ('a', 'DT'), ('completely', 'RB'), ('new', 'JJ'), ('set', 'NN'), ('of', 'IN'), ('capabilities', 'NNS'), ('and', 'CC'), ('skills', 'NNS'), ('which', 'WDT'), ('may', 'MD'), ('be', 'VB'), ('in', 'IN'), ('short', 'JJ'), ('supply', 'NN'), ('in', 'IN'), ('your', 'PRP$'), ('organization', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Establish', 'establish'), ('AI', 'ai'), ('capabilities', 'capability'), ('and', 'and'), ('skills', 'skill'), ('AI', 'AI'), ('requires', 'require'), ('a', 'a'), ('completely', 'completely'), ('new', 'new'), ('set', 'set'), ('of', 'of'), ('capabilities', 'capability'), ('and', 'and'), ('skills', 'skill'), ('which', 'which'), ('may', 'may'), ('be', 'be'), ('in', 'in'), ('short', 'short'), ('supply', 'supply'), ('in', 'in'), ('your', 'you'), ('organization', 'organization'), ('.', '.')] 

 Dependency tags are: 
>> [(('Establish', 'root'), 'root'), (('AI', 'capabilities'), 'nmod:poss'), (('capabilities', 'Establish'), 'obj'), (('and', 'skills'), 'cc'), (('skills', 'capabilities'), 'conj'), (('AI', 'requires'), 'punct'), (('requires', 'Establish'), 'conj'), (('a', 'set'), 'det'), (('completely', 'new'), 'advmod'), (('new', 'set'), 'amod'), (('set', 'requires'), 'obj'), (('of', 'capabilities'), 'case'), (('capabilities', 'set'), 'nmod'), (('and', 'skills'), 'cc'), (('skills', 'capabilities'), 'conj'), (('which', 'supply'), 'nsubj'), (('may', 'supply'), 'aux'), (('be', 'supply'), 'cop'), (('in', 'supply'), 'case'), (('short', 'supply'), 'amod'), (('supply', 'set'), 'acl:relcl'), (('in', 'organization'), 'case'), (('your', 'organization'), 'nmod:poss'), (('organization', 'supply'), 'nmod'), (('.', 'Establish'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 To build  the required in-house AI skills, it’s important to plan,  establish and grow a dedicated Center of Competence or  leverage the IBM Garage concept to perform in partnership. 

Tokens are: 
>> ['To', 'build', 'the', 'required', 'in', '-', 'house', 'AI', 'skills', ',', 'it', '’s', 'important', 'to', 'plan', ',', 'establish', 'and', 'grow', 'a', 'dedicated', 'Center', 'of', 'Competence', 'or', 'leverage', 'the', 'IBM', 'Garage', 'concept', 'to', 'perform', 'in', 'partnership', '.'] 

 UPOS tags are: 
>> [('To', 'PART'), ('build', 'VERB'), ('the', 'DET'), ('required', 'VERB'), ('in', 'ADP'), ('-', 'PUNCT'), ('house', 'NOUN'), ('AI', 'NOUN'), ('skills', 'NOUN'), (',', 'PUNCT'), ('it', 'PRON'), ('’s', 'AUX'), ('important', 'ADJ'), ('to', 'PART'), ('plan', 'VERB'), (',', 'PUNCT'), ('establish', 'VERB'), ('and', 'CCONJ'), ('grow', 'VERB'), ('a', 'DET'), ('dedicated', 'VERB'), ('Center', 'PROPN'), ('of', 'ADP'), ('Competence', 'PROPN'), ('or', 'CCONJ'), ('leverage', 'VERB'), ('the', 'DET'), ('IBM', 'PROPN'), ('Garage', 'PROPN'), ('concept', 'NOUN'), ('to', 'PART'), ('perform', 'VERB'), ('in', 'ADP'), ('partnership', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('To', 'TO'), ('build', 'VB'), ('the', 'DT'), ('required', 'VBN'), ('in', 'IN'), ('-', 'HYPH'), ('house', 'NN'), ('AI', 'NN'), ('skills', 'NNS'), (',', ','), ('it', 'PRP'), ('’s', 'VBZ'), ('important', 'JJ'), ('to', 'TO'), ('plan', 'VB'), (',', ','), ('establish', 'VB'), ('and', 'CC'), ('grow', 'VB'), ('a', 'DT'), ('dedicated', 'VBN'), ('Center', 'NNP'), ('of', 'IN'), ('Competence', 'NNP'), ('or', 'CC'), ('leverage', 'VB'), ('the', 'DT'), ('IBM', 'NNP'), ('Garage', 'NNP'), ('concept', 'NN'), ('to', 'TO'), ('perform', 'VB'), ('in', 'IN'), ('partnership', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('To', 'to'), ('build', 'build'), ('the', 'the'), ('required', 'require'), ('in', 'in'), ('-', '-'), ('house', 'house'), ('AI', 'ai'), ('skills', 'skill'), (',', ','), ('it', 'it'), ('’s', 'be'), ('important', 'important'), ('to', 'to'), ('plan', 'plan'), (',', ','), ('establish', 'establish'), ('and', 'and'), ('grow', 'grow'), ('a', 'a'), ('dedicated', 'dedicate'), ('Center', 'Center'), ('of', 'of'), ('Competence', 'Competence'), ('or', 'or'), ('leverage', 'leverage'), ('the', 'the'), ('IBM', 'IBM'), ('Garage', 'Garage'), ('concept', 'concept'), ('to', 'to'), ('perform', 'perform'), ('in', 'in'), ('partnership', 'partnership'), ('.', '.')] 

 Dependency tags are: 
>> [(('To', 'build'), 'mark'), (('build', 'important'), 'advcl'), (('the', 'skills'), 'det'), (('required', 'skills'), 'amod'), (('in', 'house'), 'case'), (('-', 'house'), 'punct'), (('house', 'skills'), 'compound'), (('AI', 'skills'), 'compound'), (('skills', 'build'), 'obj'), ((',', 'build'), 'punct'), (('it', 'important'), 'expl'), (('’s', 'important'), 'cop'), (('important', 'root'), 'root'), (('to', 'plan'), 'mark'), (('plan', 'important'), 'csubj'), ((',', 'establish'), 'punct'), (('establish', 'plan'), 'conj'), (('and', 'grow'), 'cc'), (('grow', 'plan'), 'conj'), (('a', 'Center'), 'det'), (('dedicated', 'Center'), 'amod'), (('Center', 'grow'), 'obj'), (('of', 'Competence'), 'case'), (('Competence', 'Center'), 'nmod'), (('or', 'leverage'), 'cc'), (('leverage', 'plan'), 'conj'), (('the', 'concept'), 'det'), (('IBM', 'concept'), 'compound'), (('Garage', 'concept'), 'compound'), (('concept', 'leverage'), 'obj'), (('to', 'perform'), 'mark'), (('perform', 'leverage'), 'advcl'), (('in', 'partnership'), 'case'), (('partnership', 'perform'), 'obl'), (('.', 'important'), 'punct')]

 Named Entites are: 
>> [('Center of Competence', 'ORG'), ('IBM Garage', 'ORG')]

------------------- Sentence 3 -------------------

 Not only this dedicated team is important, but you also  need to assure the right mindset and way of working in the  rest of the organization. 

Tokens are: 
>> ['Not', 'only', 'this', 'dedicated', 'team', 'is', 'important', ',', 'but', 'you', 'also', 'need', 'to', 'assure', 'the', 'right', 'mindset', 'and', 'way', 'of', 'working', 'in', 'the', 'rest', 'of', 'the', 'organization', '.'] 

 UPOS tags are: 
>> [('Not', 'PART'), ('only', 'ADV'), ('this', 'DET'), ('dedicated', 'ADJ'), ('team', 'NOUN'), ('is', 'AUX'), ('important', 'ADJ'), (',', 'PUNCT'), ('but', 'CCONJ'), ('you', 'PRON'), ('also', 'ADV'), ('need', 'VERB'), ('to', 'PART'), ('assure', 'VERB'), ('the', 'DET'), ('right', 'ADJ'), ('mindset', 'NOUN'), ('and', 'CCONJ'), ('way', 'NOUN'), ('of', 'SCONJ'), ('working', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('rest', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('organization', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Not', 'RB'), ('only', 'RB'), ('this', 'DT'), ('dedicated', 'JJ'), ('team', 'NN'), ('is', 'VBZ'), ('important', 'JJ'), (',', ','), ('but', 'CC'), ('you', 'PRP'), ('also', 'RB'), ('need', 'VBP'), ('to', 'TO'), ('assure', 'VB'), ('the', 'DT'), ('right', 'JJ'), ('mindset', 'NN'), ('and', 'CC'), ('way', 'NN'), ('of', 'IN'), ('working', 'VBG'), ('in', 'IN'), ('the', 'DT'), ('rest', 'NN'), ('of', 'IN'), ('the', 'DT'), ('organization', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Not', 'not'), ('only', 'only'), ('this', 'this'), ('dedicated', 'dedicated'), ('team', 'team'), ('is', 'be'), ('important', 'important'), (',', ','), ('but', 'but'), ('you', 'you'), ('also', 'also'), ('need', 'need'), ('to', 'to'), ('assure', 'assure'), ('the', 'the'), ('right', 'right'), ('mindset', 'mindset'), ('and', 'and'), ('way', 'way'), ('of', 'of'), ('working', 'work'), ('in', 'in'), ('the', 'the'), ('rest', 'rest'), ('of', 'of'), ('the', 'the'), ('organization', 'organization'), ('.', '.')] 

 Dependency tags are: 
>> [(('Not', 'important'), 'advmod'), (('only', 'team'), 'advmod'), (('this', 'team'), 'det'), (('dedicated', 'team'), 'amod'), (('team', 'important'), 'nsubj'), (('is', 'important'), 'cop'), (('important', 'root'), 'root'), ((',', 'need'), 'punct'), (('but', 'need'), 'cc'), (('you', 'need'), 'nsubj'), (('also', 'need'), 'advmod'), (('need', 'important'), 'conj'), (('to', 'assure'), 'mark'), (('assure', 'need'), 'xcomp'), (('the', 'mindset'), 'det'), (('right', 'mindset'), 'amod'), (('mindset', 'assure'), 'obj'), (('and', 'way'), 'cc'), (('way', 'mindset'), 'conj'), (('of', 'working'), 'mark'), (('working', 'way'), 'acl'), (('in', 'rest'), 'case'), (('the', 'rest'), 'det'), (('rest', 'working'), 'obl'), (('of', 'organization'), 'case'), (('the', 'organization'), 'det'), (('organization', 'rest'), 'nmod'), (('.', 'important'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 It’s critical that these functions  occur in conjunction with developing and integrating an AI  platform within your current IT architecture to implement  and scale AI. 

Tokens are: 
>> ['It', '’s', 'critical', 'that', 'these', 'functions', 'occur', 'in', 'conjunction', 'with', 'developing', 'and', 'integrating', 'an', 'AI', 'platform', 'within', 'your', 'current', 'IT', 'architecture', 'to', 'implement', 'and', 'scale', 'AI', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('’s', 'AUX'), ('critical', 'ADJ'), ('that', 'SCONJ'), ('these', 'DET'), ('functions', 'NOUN'), ('occur', 'VERB'), ('in', 'ADP'), ('conjunction', 'NOUN'), ('with', 'SCONJ'), ('developing', 'VERB'), ('and', 'CCONJ'), ('integrating', 'VERB'), ('an', 'DET'), ('AI', 'NOUN'), ('platform', 'NOUN'), ('within', 'ADP'), ('your', 'PRON'), ('current', 'ADJ'), ('IT', 'NOUN'), ('architecture', 'NOUN'), ('to', 'PART'), ('implement', 'VERB'), ('and', 'CCONJ'), ('scale', 'NOUN'), ('AI', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('’s', 'VBZ'), ('critical', 'JJ'), ('that', 'IN'), ('these', 'DT'), ('functions', 'NNS'), ('occur', 'VBP'), ('in', 'IN'), ('conjunction', 'NN'), ('with', 'IN'), ('developing', 'VBG'), ('and', 'CC'), ('integrating', 'VBG'), ('an', 'DT'), ('AI', 'NN'), ('platform', 'NN'), ('within', 'IN'), ('your', 'PRP$'), ('current', 'JJ'), ('IT', 'NN'), ('architecture', 'NN'), ('to', 'TO'), ('implement', 'VB'), ('and', 'CC'), ('scale', 'NN'), ('AI', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('’s', 'be'), ('critical', 'critical'), ('that', 'that'), ('these', 'this'), ('functions', 'function'), ('occur', 'occur'), ('in', 'in'), ('conjunction', 'conjunction'), ('with', 'with'), ('developing', 'develop'), ('and', 'and'), ('integrating', 'integrate'), ('an', 'a'), ('AI', 'ai'), ('platform', 'platform'), ('within', 'within'), ('your', 'you'), ('current', 'current'), ('IT', 'it'), ('architecture', 'architecture'), ('to', 'to'), ('implement', 'implement'), ('and', 'and'), ('scale', 'scale'), ('AI', 'ai'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'critical'), 'expl'), (('’s', 'critical'), 'cop'), (('critical', 'root'), 'root'), (('that', 'occur'), 'mark'), (('these', 'functions'), 'det'), (('functions', 'occur'), 'nsubj'), (('occur', 'critical'), 'csubj'), (('in', 'conjunction'), 'case'), (('conjunction', 'occur'), 'obl'), (('with', 'developing'), 'mark'), (('developing', 'occur'), 'advcl'), (('and', 'integrating'), 'cc'), (('integrating', 'developing'), 'conj'), (('an', 'platform'), 'det'), (('AI', 'platform'), 'compound'), (('platform', 'integrating'), 'obj'), (('within', 'architecture'), 'case'), (('your', 'architecture'), 'nmod:poss'), (('current', 'architecture'), 'amod'), (('IT', 'architecture'), 'compound'), (('architecture', 'integrating'), 'obl'), (('to', 'implement'), 'mark'), (('implement', 'integrating'), 'advcl'), (('and', 'scale'), 'cc'), (('scale', 'AI'), 'compound'), (('AI', 'implement'), 'obj'), (('.', 'critical'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 176 =================================

Start small and scale quickly  — Start with minimal valuable products (MVPs)   In this phase you want to bring in experts to help quickly  develop solutions to your business problems. This can  only be done once the before-mentioned steps are  completed and the business is ready organizationally  and technologically. This also means that the experts  you bring in should be both business and technologically  savvy. A good duration for a MVP is normally between two  and three months. Our experience shows that starting  with large-scale, complex and very long AI implementation  projects normally lead to failure.  


------------------- Sentence 1 -------------------

 Start small and scale quickly  — 

Tokens are: 
>> ['Start', 'small', 'and', 'scale', 'quickly', '—'] 

 UPOS tags are: 
>> [('Start', 'VERB'), ('small', 'ADJ'), ('and', 'CCONJ'), ('scale', 'VERB'), ('quickly', 'ADV'), ('—', 'PUNCT')] 

 XPOS tags are: 
>> [('Start', 'VB'), ('small', 'JJ'), ('and', 'CC'), ('scale', 'VB'), ('quickly', 'RB'), ('—', ':')] 

 Lemmas are: 
>> [('Start', 'start'), ('small', 'small'), ('and', 'and'), ('scale', 'scale'), ('quickly', 'quickly'), ('—', '—')] 

 Dependency tags are: 
>> [(('Start', 'root'), 'root'), (('small', 'Start'), 'xcomp'), (('and', 'scale'), 'cc'), (('scale', 'Start'), 'conj'), (('quickly', 'scale'), 'advmod'), (('—', 'Start'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Start with minimal valuable products (MVPs) 

Tokens are: 
>> ['Start', 'with', 'minimal', 'valuable', 'products', '(', 'MVPs', ')'] 

 UPOS tags are: 
>> [('Start', 'VERB'), ('with', 'ADP'), ('minimal', 'ADJ'), ('valuable', 'ADJ'), ('products', 'NOUN'), ('(', 'PUNCT'), ('MVPs', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Start', 'VB'), ('with', 'IN'), ('minimal', 'JJ'), ('valuable', 'JJ'), ('products', 'NNS'), ('(', '-LRB-'), ('MVPs', 'NNS'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Start', 'start'), ('with', 'with'), ('minimal', 'minimal'), ('valuable', 'valuable'), ('products', 'product'), ('(', '('), ('MVPs', 'mvp'), (')', ')')] 

 Dependency tags are: 
>> [(('Start', 'root'), 'root'), (('with', 'products'), 'case'), (('minimal', 'products'), 'amod'), (('valuable', 'products'), 'amod'), (('products', 'Start'), 'obl'), (('(', 'MVPs'), 'punct'), (('MVPs', 'products'), 'appos'), ((')', 'MVPs'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 In this phase you want to bring in experts to help quickly  develop solutions to your business problems. 

Tokens are: 
>> ['In', 'this', 'phase', 'you', 'want', 'to', 'bring', 'in', 'experts', 'to', 'help', 'quickly', 'develop', 'solutions', 'to', 'your', 'business', 'problems', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('this', 'DET'), ('phase', 'NOUN'), ('you', 'PRON'), ('want', 'VERB'), ('to', 'PART'), ('bring', 'VERB'), ('in', 'ADP'), ('experts', 'NOUN'), ('to', 'PART'), ('help', 'VERB'), ('quickly', 'ADV'), ('develop', 'VERB'), ('solutions', 'NOUN'), ('to', 'ADP'), ('your', 'PRON'), ('business', 'NOUN'), ('problems', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('this', 'DT'), ('phase', 'NN'), ('you', 'PRP'), ('want', 'VBP'), ('to', 'TO'), ('bring', 'VB'), ('in', 'RP'), ('experts', 'NNS'), ('to', 'TO'), ('help', 'VB'), ('quickly', 'RB'), ('develop', 'VB'), ('solutions', 'NNS'), ('to', 'IN'), ('your', 'PRP$'), ('business', 'NN'), ('problems', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('this', 'this'), ('phase', 'phase'), ('you', 'you'), ('want', 'want'), ('to', 'to'), ('bring', 'bring'), ('in', 'in'), ('experts', 'expert'), ('to', 'to'), ('help', 'help'), ('quickly', 'quickly'), ('develop', 'develop'), ('solutions', 'solution'), ('to', 'to'), ('your', 'you'), ('business', 'business'), ('problems', 'problem'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'phase'), 'case'), (('this', 'phase'), 'det'), (('phase', 'want'), 'obl'), (('you', 'want'), 'nsubj'), (('want', 'root'), 'root'), (('to', 'bring'), 'mark'), (('bring', 'want'), 'xcomp'), (('in', 'bring'), 'compound:prt'), (('experts', 'bring'), 'obj'), (('to', 'help'), 'mark'), (('help', 'bring'), 'advcl'), (('quickly', 'help'), 'advmod'), (('develop', 'help'), 'xcomp'), (('solutions', 'develop'), 'obj'), (('to', 'problems'), 'case'), (('your', 'problems'), 'nmod:poss'), (('business', 'problems'), 'compound'), (('problems', 'develop'), 'obl'), (('.', 'want'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 This can  only be done once the before-mentioned steps are  completed and the business is ready organizationally  and technologically. 

Tokens are: 
>> ['This', 'can', 'only', 'be', 'done', 'once', 'the', 'before-', 'mentioned', 'steps', 'are', 'completed', 'and', 'the', 'business', 'is', 'ready', 'organizationally', 'and', 'technologically', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('can', 'AUX'), ('only', 'ADV'), ('be', 'AUX'), ('done', 'VERB'), ('once', 'SCONJ'), ('the', 'DET'), ('before-', 'NOUN'), ('mentioned', 'VERB'), ('steps', 'NOUN'), ('are', 'AUX'), ('completed', 'VERB'), ('and', 'CCONJ'), ('the', 'DET'), ('business', 'NOUN'), ('is', 'AUX'), ('ready', 'ADJ'), ('organizationally', 'ADV'), ('and', 'CCONJ'), ('technologically', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('can', 'MD'), ('only', 'RB'), ('be', 'VB'), ('done', 'VBN'), ('once', 'IN'), ('the', 'DT'), ('before-', 'NN'), ('mentioned', 'VBD'), ('steps', 'NNS'), ('are', 'VBP'), ('completed', 'VBN'), ('and', 'CC'), ('the', 'DT'), ('business', 'NN'), ('is', 'VBZ'), ('ready', 'JJ'), ('organizationally', 'RB'), ('and', 'CC'), ('technologically', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('can', 'can'), ('only', 'only'), ('be', 'be'), ('done', 'do'), ('once', 'once'), ('the', 'the'), ('before-', 'before-'), ('mentioned', 'mention'), ('steps', 'step'), ('are', 'be'), ('completed', 'complete'), ('and', 'and'), ('the', 'the'), ('business', 'business'), ('is', 'be'), ('ready', 'ready'), ('organizationally', 'organizationally'), ('and', 'and'), ('technologically', 'technologically'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'done'), 'nsubj:pass'), (('can', 'done'), 'aux'), (('only', 'done'), 'advmod'), (('be', 'done'), 'aux:pass'), (('done', 'root'), 'root'), (('once', 'mentioned'), 'mark'), (('the', 'before-'), 'det'), (('before-', 'mentioned'), 'nsubj'), (('mentioned', 'done'), 'advcl'), (('steps', 'completed'), 'nsubj:pass'), (('are', 'completed'), 'aux:pass'), (('completed', 'done'), 'advcl'), (('and', 'ready'), 'cc'), (('the', 'business'), 'det'), (('business', 'ready'), 'nsubj'), (('is', 'ready'), 'cop'), (('ready', 'done'), 'conj'), (('organizationally', 'ready'), 'advmod'), (('and', 'technologically'), 'cc'), (('technologically', 'organizationally'), 'conj'), (('.', 'done'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 This also means that the experts  you bring in should be both business and technologically  savvy. 

Tokens are: 
>> ['This', 'also', 'means', 'that', 'the', 'experts', 'you', 'bring', 'in', 'should', 'be', 'both', 'business', 'and', 'technologically', 'savvy', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('also', 'ADV'), ('means', 'VERB'), ('that', 'SCONJ'), ('the', 'DET'), ('experts', 'NOUN'), ('you', 'PRON'), ('bring', 'VERB'), ('in', 'ADP'), ('should', 'AUX'), ('be', 'AUX'), ('both', 'CCONJ'), ('business', 'NOUN'), ('and', 'CCONJ'), ('technologically', 'ADV'), ('savvy', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('also', 'RB'), ('means', 'VBZ'), ('that', 'IN'), ('the', 'DT'), ('experts', 'NNS'), ('you', 'PRP'), ('bring', 'VBP'), ('in', 'IN'), ('should', 'MD'), ('be', 'VB'), ('both', 'CC'), ('business', 'NN'), ('and', 'CC'), ('technologically', 'RB'), ('savvy', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('also', 'also'), ('means', 'mean'), ('that', 'that'), ('the', 'the'), ('experts', 'expert'), ('you', 'you'), ('bring', 'bring'), ('in', 'in'), ('should', 'should'), ('be', 'be'), ('both', 'both'), ('business', 'business'), ('and', 'and'), ('technologically', 'technologically'), ('savvy', 'savvy'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'means'), 'nsubj'), (('also', 'means'), 'advmod'), (('means', 'root'), 'root'), (('that', 'business'), 'mark'), (('the', 'experts'), 'det'), (('experts', 'business'), 'nsubj'), (('you', 'bring'), 'nsubj'), (('bring', 'experts'), 'acl:relcl'), (('in', 'bring'), 'obl'), (('should', 'business'), 'aux'), (('be', 'business'), 'cop'), (('both', 'business'), 'cc:preconj'), (('business', 'means'), 'ccomp'), (('and', 'savvy'), 'cc'), (('technologically', 'savvy'), 'advmod'), (('savvy', 'business'), 'conj'), (('.', 'means'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 A good duration for a MVP is normally between two  and three months. 

Tokens are: 
>> ['A', 'good', 'duration', 'for', 'a', 'MVP', 'is', 'normally', 'between', 'two', 'and', 'three', 'months', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('good', 'ADJ'), ('duration', 'NOUN'), ('for', 'ADP'), ('a', 'DET'), ('MVP', 'NOUN'), ('is', 'AUX'), ('normally', 'ADV'), ('between', 'ADP'), ('two', 'NUM'), ('and', 'CCONJ'), ('three', 'NUM'), ('months', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('good', 'JJ'), ('duration', 'NN'), ('for', 'IN'), ('a', 'DT'), ('MVP', 'NN'), ('is', 'VBZ'), ('normally', 'RB'), ('between', 'IN'), ('two', 'CD'), ('and', 'CC'), ('three', 'CD'), ('months', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('good', 'good'), ('duration', 'duration'), ('for', 'for'), ('a', 'a'), ('MVP', 'MVP'), ('is', 'be'), ('normally', 'normally'), ('between', 'between'), ('two', 'two'), ('and', 'and'), ('three', 'three'), ('months', 'month'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'duration'), 'det'), (('good', 'duration'), 'amod'), (('duration', 'months'), 'nsubj'), (('for', 'MVP'), 'case'), (('a', 'MVP'), 'det'), (('MVP', 'duration'), 'nmod'), (('is', 'months'), 'cop'), (('normally', 'months'), 'advmod'), (('between', 'months'), 'case'), (('two', 'months'), 'nummod'), (('and', 'three'), 'cc'), (('three', 'two'), 'conj'), (('months', 'root'), 'root'), (('.', 'months'), 'punct')]

 Named Entites are: 
>> [('between two  and three months', 'DATE')]

------------------- Sentence 7 -------------------

 Our experience shows that starting  with large-scale, complex and very long AI implementation  projects normally lead to failure. 

Tokens are: 
>> ['Our', 'experience', 'shows', 'that', 'starting', 'with', 'large', '-', 'scale', ',', 'complex', 'and', 'very', 'long', 'AI', 'implementation', 'projects', 'normally', 'lead', 'to', 'failure', '.'] 

 UPOS tags are: 
>> [('Our', 'PRON'), ('experience', 'NOUN'), ('shows', 'VERB'), ('that', 'SCONJ'), ('starting', 'VERB'), ('with', 'ADP'), ('large', 'ADJ'), ('-', 'PUNCT'), ('scale', 'NOUN'), (',', 'PUNCT'), ('complex', 'ADJ'), ('and', 'CCONJ'), ('very', 'ADV'), ('long', 'ADV'), ('AI', 'NOUN'), ('implementation', 'NOUN'), ('projects', 'NOUN'), ('normally', 'ADV'), ('lead', 'VERB'), ('to', 'ADP'), ('failure', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Our', 'PRP$'), ('experience', 'NN'), ('shows', 'VBZ'), ('that', 'IN'), ('starting', 'VBG'), ('with', 'IN'), ('large', 'JJ'), ('-', 'HYPH'), ('scale', 'NN'), (',', ','), ('complex', 'JJ'), ('and', 'CC'), ('very', 'RB'), ('long', 'RB'), ('AI', 'NN'), ('implementation', 'NN'), ('projects', 'NNS'), ('normally', 'RB'), ('lead', 'VBP'), ('to', 'IN'), ('failure', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Our', 'we'), ('experience', 'experience'), ('shows', 'show'), ('that', 'that'), ('starting', 'start'), ('with', 'with'), ('large', 'large'), ('-', '-'), ('scale', 'scale'), (',', ','), ('complex', 'complex'), ('and', 'and'), ('very', 'very'), ('long', 'long'), ('AI', 'ai'), ('implementation', 'implementation'), ('projects', 'project'), ('normally', 'normally'), ('lead', 'lead'), ('to', 'to'), ('failure', 'failure'), ('.', '.')] 

 Dependency tags are: 
>> [(('Our', 'experience'), 'nmod:poss'), (('experience', 'shows'), 'nsubj'), (('shows', 'root'), 'root'), (('that', 'lead'), 'mark'), (('starting', 'lead'), 'csubj'), (('with', 'projects'), 'case'), (('large', 'scale'), 'amod'), (('-', 'scale'), 'punct'), (('scale', 'projects'), 'compound'), ((',', 'complex'), 'punct'), (('complex', 'projects'), 'amod'), (('and', 'long'), 'cc'), (('very', 'long'), 'advmod'), (('long', 'complex'), 'conj'), (('AI', 'implementation'), 'compound'), (('implementation', 'projects'), 'compound'), (('projects', 'starting'), 'obl'), (('normally', 'lead'), 'advmod'), (('lead', 'shows'), 'ccomp'), (('to', 'failure'), 'case'), (('failure', 'lead'), 'obl'), (('.', 'shows'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 177 =================================

 — Set understandable key performance indicators (KPIs)  To make sure that a project will succeed, you need to  define KPIs that are understandable for your business— including employees and other stakeholders. These KPIs  will help you evaluate whether a project is successful. In  general, we suggest taking a second look at these KPIs  after an appropriate duration to decide whether the  project is successful or if you should discontinue it. If  your business can’t pinpoint the right KPIs to measure  success, the project is too complex. 


------------------- Sentence 1 -------------------

 — 

Tokens are: 
>> ['—'] 

 UPOS tags are: 
>> [('—', 'PUNCT')] 

 XPOS tags are: 
>> [('—', ':')] 

 Lemmas are: 
>> [('—', '—')] 

 Dependency tags are: 
>> [(('—', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Set understandable key performance indicators (KPIs) 

Tokens are: 
>> ['Set', 'understandable', 'key', 'performance', 'indicators', '(', 'KPIs', ')'] 

 UPOS tags are: 
>> [('Set', 'VERB'), ('understandable', 'ADJ'), ('key', 'ADJ'), ('performance', 'NOUN'), ('indicators', 'NOUN'), ('(', 'PUNCT'), ('KPIs', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Set', 'VB'), ('understandable', 'JJ'), ('key', 'JJ'), ('performance', 'NN'), ('indicators', 'NNS'), ('(', '-LRB-'), ('KPIs', 'NNS'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Set', 'set'), ('understandable', 'understandable'), ('key', 'key'), ('performance', 'performance'), ('indicators', 'indicator'), ('(', '('), ('KPIs', 'kpis'), (')', ')')] 

 Dependency tags are: 
>> [(('Set', 'root'), 'root'), (('understandable', 'indicators'), 'amod'), (('key', 'indicators'), 'amod'), (('performance', 'indicators'), 'compound'), (('indicators', 'Set'), 'obj'), (('(', 'KPIs'), 'punct'), (('KPIs', 'indicators'), 'appos'), ((')', 'KPIs'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 To make sure that a project will succeed, you need to  define KPIs that are understandable for your business— including employees and other stakeholders. 

Tokens are: 
>> ['To', 'make', 'sure', 'that', 'a', 'project', 'will', 'succeed', ',', 'you', 'need', 'to', 'define', 'KPIs', 'that', 'are', 'understandable', 'for', 'your', 'business', '—', 'including', 'employees', 'and', 'other', 'stakeholders', '.'] 

 UPOS tags are: 
>> [('To', 'PART'), ('make', 'VERB'), ('sure', 'ADJ'), ('that', 'SCONJ'), ('a', 'DET'), ('project', 'NOUN'), ('will', 'AUX'), ('succeed', 'VERB'), (',', 'PUNCT'), ('you', 'PRON'), ('need', 'VERB'), ('to', 'PART'), ('define', 'VERB'), ('KPIs', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('understandable', 'ADJ'), ('for', 'ADP'), ('your', 'PRON'), ('business', 'NOUN'), ('—', 'PUNCT'), ('including', 'VERB'), ('employees', 'NOUN'), ('and', 'CCONJ'), ('other', 'ADJ'), ('stakeholders', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('To', 'TO'), ('make', 'VB'), ('sure', 'JJ'), ('that', 'IN'), ('a', 'DT'), ('project', 'NN'), ('will', 'MD'), ('succeed', 'VB'), (',', ','), ('you', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('define', 'VB'), ('KPIs', 'NNS'), ('that', 'WDT'), ('are', 'VBP'), ('understandable', 'JJ'), ('for', 'IN'), ('your', 'PRP$'), ('business', 'NN'), ('—', ':'), ('including', 'VBG'), ('employees', 'NNS'), ('and', 'CC'), ('other', 'JJ'), ('stakeholders', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('To', 'to'), ('make', 'make'), ('sure', 'sure'), ('that', 'that'), ('a', 'a'), ('project', 'project'), ('will', 'will'), ('succeed', 'succeed'), (',', ','), ('you', 'you'), ('need', 'need'), ('to', 'to'), ('define', 'define'), ('KPIs', 'kpis'), ('that', 'that'), ('are', 'be'), ('understandable', 'understandable'), ('for', 'for'), ('your', 'you'), ('business', 'business'), ('—', '—'), ('including', 'include'), ('employees', 'employee'), ('and', 'and'), ('other', 'other'), ('stakeholders', 'stakeholder'), ('.', '.')] 

 Dependency tags are: 
>> [(('To', 'make'), 'mark'), (('make', 'need'), 'advcl'), (('sure', 'make'), 'xcomp'), (('that', 'succeed'), 'mark'), (('a', 'project'), 'det'), (('project', 'succeed'), 'nsubj'), (('will', 'succeed'), 'aux'), (('succeed', 'sure'), 'ccomp'), ((',', 'need'), 'punct'), (('you', 'need'), 'nsubj'), (('need', 'root'), 'root'), (('to', 'define'), 'mark'), (('define', 'need'), 'xcomp'), (('KPIs', 'define'), 'obj'), (('that', 'understandable'), 'nsubj'), (('are', 'understandable'), 'cop'), (('understandable', 'KPIs'), 'acl:relcl'), (('for', 'business'), 'case'), (('your', 'business'), 'nmod:poss'), (('business', 'understandable'), 'obl'), (('—', 'employees'), 'punct'), (('including', 'employees'), 'case'), (('employees', 'understandable'), 'obl'), (('and', 'stakeholders'), 'cc'), (('other', 'stakeholders'), 'amod'), (('stakeholders', 'employees'), 'conj'), (('.', 'need'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 These KPIs  will help you evaluate whether a project is successful. 

Tokens are: 
>> ['These', 'KPIs', 'will', 'help', 'you', 'evaluate', 'whether', 'a', 'project', 'is', 'successful', '.'] 

 UPOS tags are: 
>> [('These', 'DET'), ('KPIs', 'NOUN'), ('will', 'AUX'), ('help', 'VERB'), ('you', 'PRON'), ('evaluate', 'VERB'), ('whether', 'SCONJ'), ('a', 'DET'), ('project', 'NOUN'), ('is', 'AUX'), ('successful', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('These', 'DT'), ('KPIs', 'NNS'), ('will', 'MD'), ('help', 'VB'), ('you', 'PRP'), ('evaluate', 'VB'), ('whether', 'IN'), ('a', 'DT'), ('project', 'NN'), ('is', 'VBZ'), ('successful', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('These', 'this'), ('KPIs', 'kpis'), ('will', 'will'), ('help', 'help'), ('you', 'you'), ('evaluate', 'evaluate'), ('whether', 'whether'), ('a', 'a'), ('project', 'project'), ('is', 'be'), ('successful', 'successful'), ('.', '.')] 

 Dependency tags are: 
>> [(('These', 'KPIs'), 'det'), (('KPIs', 'help'), 'nsubj'), (('will', 'help'), 'aux'), (('help', 'root'), 'root'), (('you', 'help'), 'obj'), (('evaluate', 'help'), 'xcomp'), (('whether', 'successful'), 'mark'), (('a', 'project'), 'det'), (('project', 'successful'), 'nsubj'), (('is', 'successful'), 'cop'), (('successful', 'evaluate'), 'ccomp'), (('.', 'help'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 In  general, we suggest taking a second look at these KPIs  after an appropriate duration to decide whether the  project is successful or if you should discontinue it. 

Tokens are: 
>> ['In', 'general', ',', 'we', 'suggest', 'taking', 'a', 'second', 'look', 'at', 'these', 'KPIs', 'after', 'an', 'appropriate', 'duration', 'to', 'decide', 'whether', 'the', 'project', 'is', 'successful', 'or', 'if', 'you', 'should', 'discontinue', 'it', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('general', 'ADJ'), (',', 'PUNCT'), ('we', 'PRON'), ('suggest', 'VERB'), ('taking', 'VERB'), ('a', 'DET'), ('second', 'ADJ'), ('look', 'NOUN'), ('at', 'ADP'), ('these', 'DET'), ('KPIs', 'NOUN'), ('after', 'ADP'), ('an', 'DET'), ('appropriate', 'ADJ'), ('duration', 'NOUN'), ('to', 'PART'), ('decide', 'VERB'), ('whether', 'SCONJ'), ('the', 'DET'), ('project', 'NOUN'), ('is', 'AUX'), ('successful', 'ADJ'), ('or', 'CCONJ'), ('if', 'SCONJ'), ('you', 'PRON'), ('should', 'AUX'), ('discontinue', 'VERB'), ('it', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('general', 'JJ'), (',', ','), ('we', 'PRP'), ('suggest', 'VBP'), ('taking', 'VBG'), ('a', 'DT'), ('second', 'JJ'), ('look', 'NN'), ('at', 'IN'), ('these', 'DT'), ('KPIs', 'NNS'), ('after', 'IN'), ('an', 'DT'), ('appropriate', 'JJ'), ('duration', 'NN'), ('to', 'TO'), ('decide', 'VB'), ('whether', 'IN'), ('the', 'DT'), ('project', 'NN'), ('is', 'VBZ'), ('successful', 'JJ'), ('or', 'CC'), ('if', 'IN'), ('you', 'PRP'), ('should', 'MD'), ('discontinue', 'VB'), ('it', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('general', 'general'), (',', ','), ('we', 'we'), ('suggest', 'suggest'), ('taking', 'take'), ('a', 'a'), ('second', 'second'), ('look', 'look'), ('at', 'at'), ('these', 'this'), ('KPIs', 'kpis'), ('after', 'after'), ('an', 'a'), ('appropriate', 'appropriate'), ('duration', 'duration'), ('to', 'to'), ('decide', 'decide'), ('whether', 'whether'), ('the', 'the'), ('project', 'project'), ('is', 'be'), ('successful', 'successful'), ('or', 'or'), ('if', 'if'), ('you', 'you'), ('should', 'should'), ('discontinue', 'discontinue'), ('it', 'it'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'general'), 'case'), (('general', 'suggest'), 'obl'), ((',', 'suggest'), 'punct'), (('we', 'suggest'), 'nsubj'), (('suggest', 'root'), 'root'), (('taking', 'suggest'), 'xcomp'), (('a', 'look'), 'det'), (('second', 'look'), 'amod'), (('look', 'taking'), 'obj'), (('at', 'KPIs'), 'case'), (('these', 'KPIs'), 'det'), (('KPIs', 'taking'), 'obl'), (('after', 'duration'), 'case'), (('an', 'duration'), 'det'), (('appropriate', 'duration'), 'amod'), (('duration', 'taking'), 'obl'), (('to', 'decide'), 'mark'), (('decide', 'duration'), 'acl'), (('whether', 'successful'), 'mark'), (('the', 'project'), 'det'), (('project', 'successful'), 'nsubj'), (('is', 'successful'), 'cop'), (('successful', 'decide'), 'ccomp'), (('or', 'discontinue'), 'cc'), (('if', 'discontinue'), 'mark'), (('you', 'discontinue'), 'nsubj'), (('should', 'discontinue'), 'aux'), (('discontinue', 'successful'), 'conj'), (('it', 'discontinue'), 'obj'), (('.', 'suggest'), 'punct')]

 Named Entites are: 
>> [('second', 'ORDINAL')]

------------------- Sentence 6 -------------------

 If  your business can’t pinpoint the right KPIs to measure  success, the project is too complex. 

Tokens are: 
>> ['If', 'your', 'business', 'ca', 'n’t', 'pinpoint', 'the', 'right', 'KPIs', 'to', 'measure', 'success', ',', 'the', 'project', 'is', 'too', 'complex', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('your', 'PRON'), ('business', 'NOUN'), ('ca', 'AUX'), ('n’t', 'PART'), ('pinpoint', 'VERB'), ('the', 'DET'), ('right', 'ADJ'), ('KPIs', 'NOUN'), ('to', 'PART'), ('measure', 'VERB'), ('success', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('project', 'NOUN'), ('is', 'AUX'), ('too', 'ADV'), ('complex', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('your', 'PRP$'), ('business', 'NN'), ('ca', 'MD'), ('n’t', 'RB'), ('pinpoint', 'VB'), ('the', 'DT'), ('right', 'JJ'), ('KPIs', 'NNS'), ('to', 'TO'), ('measure', 'VB'), ('success', 'NN'), (',', ','), ('the', 'DT'), ('project', 'NN'), ('is', 'VBZ'), ('too', 'RB'), ('complex', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('your', 'you'), ('business', 'business'), ('ca', 'can'), ('n’t', 'not'), ('pinpoint', 'pinpoint'), ('the', 'the'), ('right', 'right'), ('KPIs', 'kpis'), ('to', 'to'), ('measure', 'measure'), ('success', 'success'), (',', ','), ('the', 'the'), ('project', 'project'), ('is', 'be'), ('too', 'too'), ('complex', 'complex'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'pinpoint'), 'mark'), (('your', 'business'), 'nmod:poss'), (('business', 'pinpoint'), 'nsubj'), (('ca', 'pinpoint'), 'aux'), (('n’t', 'pinpoint'), 'advmod'), (('pinpoint', 'complex'), 'advcl'), (('the', 'KPIs'), 'det'), (('right', 'KPIs'), 'amod'), (('KPIs', 'pinpoint'), 'obj'), (('to', 'measure'), 'mark'), (('measure', 'KPIs'), 'acl'), (('success', 'measure'), 'obj'), ((',', 'complex'), 'punct'), (('the', 'project'), 'det'), (('project', 'complex'), 'nsubj'), (('is', 'complex'), 'cop'), (('too', 'complex'), 'advmod'), (('complex', 'root'), 'root'), (('.', 'complex'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 178 =================================

 — Roll-out through company (culture)  Once agreement is reached about which projects would  be worth working on, it’s time to implement the MVP  within your company. It’s important that the way you  implement it is looked at from both the business and  the technical side. 


------------------- Sentence 1 -------------------

 — Roll-out through company (culture) 

Tokens are: 
>> ['—', 'Roll', '-', 'out', 'through', 'company', '(', 'culture', ')'] 

 UPOS tags are: 
>> [('—', 'PUNCT'), ('Roll', 'PROPN'), ('-', 'PUNCT'), ('out', 'ADP'), ('through', 'ADP'), ('company', 'NOUN'), ('(', 'PUNCT'), ('culture', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('—', ':'), ('Roll', 'NNP'), ('-', 'HYPH'), ('out', 'RP'), ('through', 'IN'), ('company', 'NN'), ('(', '-LRB-'), ('culture', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('—', '—'), ('Roll', 'Roll'), ('-', '-'), ('out', 'out'), ('through', 'through'), ('company', 'company'), ('(', '('), ('culture', 'culture'), (')', ')')] 

 Dependency tags are: 
>> [(('—', 'company'), 'punct'), (('Roll', 'company'), 'compound'), (('-', 'Roll'), 'punct'), (('out', 'company'), 'case'), (('through', 'company'), 'case'), (('company', 'root'), 'root'), (('(', 'culture'), 'punct'), (('culture', 'company'), 'appos'), ((')', 'culture'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Once agreement is reached about which projects would  be worth working on, it’s time to implement the MVP  within your company. 

Tokens are: 
>> ['Once', 'agreement', 'is', 'reached', 'about', 'which', 'projects', 'would', 'be', 'worth', 'working', 'on', ',', 'it', '’s', 'time', 'to', 'implement', 'the', 'MVP', 'within', 'your', 'company', '.'] 

 UPOS tags are: 
>> [('Once', 'SCONJ'), ('agreement', 'NOUN'), ('is', 'AUX'), ('reached', 'VERB'), ('about', 'ADP'), ('which', 'DET'), ('projects', 'NOUN'), ('would', 'AUX'), ('be', 'AUX'), ('worth', 'ADJ'), ('working', 'VERB'), ('on', 'ADP'), (',', 'PUNCT'), ('it', 'PRON'), ('’s', 'AUX'), ('time', 'NOUN'), ('to', 'PART'), ('implement', 'VERB'), ('the', 'DET'), ('MVP', 'NOUN'), ('within', 'ADP'), ('your', 'PRON'), ('company', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Once', 'IN'), ('agreement', 'NN'), ('is', 'VBZ'), ('reached', 'VBN'), ('about', 'IN'), ('which', 'WDT'), ('projects', 'NNS'), ('would', 'MD'), ('be', 'VB'), ('worth', 'JJ'), ('working', 'VBG'), ('on', 'RP'), (',', ','), ('it', 'PRP'), ('’s', 'VBZ'), ('time', 'NN'), ('to', 'TO'), ('implement', 'VB'), ('the', 'DT'), ('MVP', 'NN'), ('within', 'IN'), ('your', 'PRP$'), ('company', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Once', 'once'), ('agreement', 'agreement'), ('is', 'be'), ('reached', 'reach'), ('about', 'about'), ('which', 'which'), ('projects', 'project'), ('would', 'would'), ('be', 'be'), ('worth', 'worth'), ('working', 'work'), ('on', 'on'), (',', ','), ('it', 'it'), ('’s', 'be'), ('time', 'time'), ('to', 'to'), ('implement', 'implement'), ('the', 'the'), ('MVP', 'MVP'), ('within', 'within'), ('your', 'you'), ('company', 'company'), ('.', '.')] 

 Dependency tags are: 
>> [(('Once', 'reached'), 'mark'), (('agreement', 'reached'), 'nsubj:pass'), (('is', 'reached'), 'aux:pass'), (('reached', 'time'), 'advcl'), (('about', 'worth'), 'mark'), (('which', 'projects'), 'det'), (('projects', 'worth'), 'nsubj'), (('would', 'worth'), 'aux'), (('be', 'worth'), 'cop'), (('worth', 'reached'), 'ccomp'), (('working', 'worth'), 'xcomp'), (('on', 'working'), 'compound:prt'), ((',', 'time'), 'punct'), (('it', 'time'), 'nsubj'), (('’s', 'time'), 'cop'), (('time', 'root'), 'root'), (('to', 'implement'), 'mark'), (('implement', 'time'), 'acl'), (('the', 'MVP'), 'det'), (('MVP', 'implement'), 'obj'), (('within', 'company'), 'case'), (('your', 'company'), 'nmod:poss'), (('company', 'implement'), 'obl'), (('.', 'time'), 'punct')]

 Named Entites are: 
>> [('MVP', 'ORG')]

------------------- Sentence 3 -------------------

 It’s important that the way you  implement it is looked at from both the business and  the technical side. 

Tokens are: 
>> ['It', '’s', 'important', 'that', 'the', 'way', 'you', 'implement', 'it', 'is', 'looked', 'at', 'from', 'both', 'the', 'business', 'and', 'the', 'technical', 'side', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('’s', 'AUX'), ('important', 'ADJ'), ('that', 'SCONJ'), ('the', 'DET'), ('way', 'NOUN'), ('you', 'PRON'), ('implement', 'VERB'), ('it', 'PRON'), ('is', 'AUX'), ('looked', 'VERB'), ('at', 'ADP'), ('from', 'ADP'), ('both', 'CCONJ'), ('the', 'DET'), ('business', 'NOUN'), ('and', 'CCONJ'), ('the', 'DET'), ('technical', 'ADJ'), ('side', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('’s', 'VBZ'), ('important', 'JJ'), ('that', 'IN'), ('the', 'DT'), ('way', 'NN'), ('you', 'PRP'), ('implement', 'VBP'), ('it', 'PRP'), ('is', 'VBZ'), ('looked', 'VBN'), ('at', 'IN'), ('from', 'IN'), ('both', 'CC'), ('the', 'DT'), ('business', 'NN'), ('and', 'CC'), ('the', 'DT'), ('technical', 'JJ'), ('side', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('’s', 'be'), ('important', 'important'), ('that', 'that'), ('the', 'the'), ('way', 'way'), ('you', 'you'), ('implement', 'implement'), ('it', 'it'), ('is', 'be'), ('looked', 'look'), ('at', 'at'), ('from', 'from'), ('both', 'both'), ('the', 'the'), ('business', 'business'), ('and', 'and'), ('the', 'the'), ('technical', 'technical'), ('side', 'side'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'important'), 'expl'), (('’s', 'important'), 'cop'), (('important', 'root'), 'root'), (('that', 'looked'), 'mark'), (('the', 'way'), 'det'), (('way', 'looked'), 'nsubj:pass'), (('you', 'implement'), 'nsubj'), (('implement', 'way'), 'acl:relcl'), (('it', 'looked'), 'nsubj:pass'), (('is', 'looked'), 'aux:pass'), (('looked', 'important'), 'csubj'), (('at', 'looked'), 'obl'), (('from', 'business'), 'case'), (('both', 'business'), 'cc:preconj'), (('the', 'business'), 'det'), (('business', 'looked'), 'obl'), (('and', 'side'), 'cc'), (('the', 'side'), 'det'), (('technical', 'side'), 'amod'), (('side', 'business'), 'conj'), (('.', 'important'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 179 =================================

IBM Services     11 


------------------- Sentence 1 -------------------

 IBM Services     11 

Tokens are: 
>> ['IBM', 'Services', '11'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('Services', 'PROPN'), ('11', 'NUM')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('Services', 'NNPS'), ('11', 'CD')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('Services', 'Service'), ('11', '11')] 

 Dependency tags are: 
>> [(('IBM', 'Services'), 'compound'), (('Services', 'root'), 'root'), (('11', 'Services'), 'nummod')]

 Named Entites are: 
>> [('IBM Services     11', 'ORG')]

================================ Paragraph 180 =================================

Pitfalls of AI implementation With the experience of implementing many of these   cases we normally see a couple of problems organizations  have when implementing AI. We’ve listed them because  we feel it’s important to know what you should consider  when implementing AI.  


------------------- Sentence 1 -------------------

 Pitfalls of AI implementation 

Tokens are: 
>> ['Pitfalls', 'of', 'AI', 'implementation'] 

 UPOS tags are: 
>> [('Pitfalls', 'NOUN'), ('of', 'ADP'), ('AI', 'NOUN'), ('implementation', 'NOUN')] 

 XPOS tags are: 
>> [('Pitfalls', 'NNS'), ('of', 'IN'), ('AI', 'NN'), ('implementation', 'NN')] 

 Lemmas are: 
>> [('Pitfalls', 'pitfall'), ('of', 'of'), ('AI', 'ai'), ('implementation', 'implementation')] 

 Dependency tags are: 
>> [(('Pitfalls', 'root'), 'root'), (('of', 'implementation'), 'case'), (('AI', 'implementation'), 'compound'), (('implementation', 'Pitfalls'), 'nmod')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 With the experience of implementing many of these   cases we normally see a couple of problems organizations  have when implementing AI. 

Tokens are: 
>> ['With', 'the', 'experience', 'of', 'implementing', 'many', 'of', 'these', 'cases', 'we', 'normally', 'see', 'a', 'couple', 'of', 'problems', 'organizations', 'have', 'when', 'implementing', 'AI', '.'] 

 UPOS tags are: 
>> [('With', 'ADP'), ('the', 'DET'), ('experience', 'NOUN'), ('of', 'SCONJ'), ('implementing', 'VERB'), ('many', 'ADJ'), ('of', 'ADP'), ('these', 'DET'), ('cases', 'NOUN'), ('we', 'PRON'), ('normally', 'ADV'), ('see', 'VERB'), ('a', 'DET'), ('couple', 'NOUN'), ('of', 'ADP'), ('problems', 'NOUN'), ('organizations', 'NOUN'), ('have', 'VERB'), ('when', 'SCONJ'), ('implementing', 'VERB'), ('AI', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('With', 'IN'), ('the', 'DT'), ('experience', 'NN'), ('of', 'IN'), ('implementing', 'VBG'), ('many', 'JJ'), ('of', 'IN'), ('these', 'DT'), ('cases', 'NNS'), ('we', 'PRP'), ('normally', 'RB'), ('see', 'VBP'), ('a', 'DT'), ('couple', 'NN'), ('of', 'IN'), ('problems', 'NNS'), ('organizations', 'NNS'), ('have', 'VBP'), ('when', 'WRB'), ('implementing', 'VBG'), ('AI', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('With', 'with'), ('the', 'the'), ('experience', 'experience'), ('of', 'of'), ('implementing', 'implement'), ('many', 'many'), ('of', 'of'), ('these', 'this'), ('cases', 'case'), ('we', 'we'), ('normally', 'normally'), ('see', 'see'), ('a', 'a'), ('couple', 'couple'), ('of', 'of'), ('problems', 'problem'), ('organizations', 'organization'), ('have', 'have'), ('when', 'when'), ('implementing', 'implement'), ('AI', 'ai'), ('.', '.')] 

 Dependency tags are: 
>> [(('With', 'experience'), 'case'), (('the', 'experience'), 'det'), (('experience', 'see'), 'obl'), (('of', 'implementing'), 'mark'), (('implementing', 'experience'), 'acl'), (('many', 'implementing'), 'obj'), (('of', 'cases'), 'case'), (('these', 'cases'), 'det'), (('cases', 'many'), 'obl'), (('we', 'see'), 'nsubj'), (('normally', 'see'), 'advmod'), (('see', 'root'), 'root'), (('a', 'couple'), 'det'), (('couple', 'see'), 'obj'), (('of', 'problems'), 'case'), (('problems', 'organizations'), 'compound'), (('organizations', 'have'), 'nsubj'), (('have', 'couple'), 'acl:relcl'), (('when', 'implementing'), 'mark'), (('implementing', 'have'), 'advcl'), (('AI', 'implementing'), 'obj'), (('.', 'see'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 3 -------------------

 We’ve listed them because  we feel it’s important to know what you should consider  when implementing AI. 

Tokens are: 
>> ['We', '’ve', 'listed', 'them', 'because', 'we', 'feel', 'it', '’s', 'important', 'to', 'know', 'what', 'you', 'should', 'consider', 'when', 'implementing', 'AI', '.'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('’ve', 'AUX'), ('listed', 'VERB'), ('them', 'PRON'), ('because', 'SCONJ'), ('we', 'PRON'), ('feel', 'VERB'), ('it', 'PRON'), ('’s', 'AUX'), ('important', 'ADJ'), ('to', 'PART'), ('know', 'VERB'), ('what', 'PRON'), ('you', 'PRON'), ('should', 'AUX'), ('consider', 'VERB'), ('when', 'SCONJ'), ('implementing', 'VERB'), ('AI', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('’ve', 'VBP'), ('listed', 'VBN'), ('them', 'PRP'), ('because', 'IN'), ('we', 'PRP'), ('feel', 'VBP'), ('it', 'PRP'), ('’s', 'VBZ'), ('important', 'JJ'), ('to', 'TO'), ('know', 'VB'), ('what', 'WP'), ('you', 'PRP'), ('should', 'MD'), ('consider', 'VB'), ('when', 'WRB'), ('implementing', 'VBG'), ('AI', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('’ve', 'have'), ('listed', 'list'), ('them', 'they'), ('because', 'because'), ('we', 'we'), ('feel', 'feel'), ('it', 'it'), ('’s', 'be'), ('important', 'important'), ('to', 'to'), ('know', 'know'), ('what', 'what'), ('you', 'you'), ('should', 'should'), ('consider', 'consider'), ('when', 'when'), ('implementing', 'implement'), ('AI', 'ai'), ('.', '.')] 

 Dependency tags are: 
>> [(('We', 'listed'), 'nsubj'), (('’ve', 'listed'), 'aux'), (('listed', 'root'), 'root'), (('them', 'listed'), 'obj'), (('because', 'feel'), 'mark'), (('we', 'feel'), 'nsubj'), (('feel', 'listed'), 'advcl'), (('it', 'important'), 'expl'), (('’s', 'important'), 'cop'), (('important', 'feel'), 'ccomp'), (('to', 'know'), 'mark'), (('know', 'important'), 'csubj'), (('what', 'consider'), 'obj'), (('you', 'consider'), 'nsubj'), (('should', 'consider'), 'aux'), (('consider', 'know'), 'ccomp'), (('when', 'implementing'), 'mark'), (('implementing', 'consider'), 'advcl'), (('AI', 'implementing'), 'obj'), (('.', 'listed'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 181 =================================

Culture Pitfalls: Looking at the advances we’ve made over the last  decade, gathering data is easy. But it’s what’s done with  the data that provides the most value. The biggest pitfall  we often encounter is a culture that’s not committed to  making data-driven decisions. Examples are cultures that  can’t innovate in an agile fashion or can’t leave room for  trial and error, as are cultures that have traditionally been  unwilling to transform a process. This reluctance usually  has to do with fear of job loss, skepticism or a knowledge  gap. It’s a challenge to get your organization ready to  embrace a data-driven culture, and for many of your  employees it can feel like a counter intuitive process.  


------------------- Sentence 1 -------------------

 Culture Pitfalls: 

Tokens are: 
>> ['Culture', 'Pitfalls', ':'] 

 UPOS tags are: 
>> [('Culture', 'NOUN'), ('Pitfalls', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Culture', 'NN'), ('Pitfalls', 'NNS'), (':', ':')] 

 Lemmas are: 
>> [('Culture', 'Culture'), ('Pitfalls', 'pitfall'), (':', ':')] 

 Dependency tags are: 
>> [(('Culture', 'Pitfalls'), 'compound'), (('Pitfalls', 'root'), 'root'), ((':', 'Pitfalls'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Looking at the advances we’ve made over the last  decade, gathering data is easy. 

Tokens are: 
>> ['Looking', 'at', 'the', 'advances', 'we', '’ve', 'made', 'over', 'the', 'last', 'decade', ',', 'gathering', 'data', 'is', 'easy', '.'] 

 UPOS tags are: 
>> [('Looking', 'VERB'), ('at', 'ADP'), ('the', 'DET'), ('advances', 'NOUN'), ('we', 'PRON'), ('’ve', 'AUX'), ('made', 'VERB'), ('over', 'ADP'), ('the', 'DET'), ('last', 'ADJ'), ('decade', 'NOUN'), (',', 'PUNCT'), ('gathering', 'VERB'), ('data', 'NOUN'), ('is', 'AUX'), ('easy', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Looking', 'VBG'), ('at', 'IN'), ('the', 'DT'), ('advances', 'NNS'), ('we', 'PRP'), ('’ve', 'VBP'), ('made', 'VBN'), ('over', 'IN'), ('the', 'DT'), ('last', 'JJ'), ('decade', 'NN'), (',', ','), ('gathering', 'VBG'), ('data', 'NNS'), ('is', 'VBZ'), ('easy', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('Looking', 'look'), ('at', 'at'), ('the', 'the'), ('advances', 'advance'), ('we', 'we'), ('’ve', 'have'), ('made', 'make'), ('over', 'over'), ('the', 'the'), ('last', 'last'), ('decade', 'decade'), (',', ','), ('gathering', 'gather'), ('data', 'datum'), ('is', 'be'), ('easy', 'easy'), ('.', '.')] 

 Dependency tags are: 
>> [(('Looking', 'easy'), 'csubj'), (('at', 'advances'), 'case'), (('the', 'advances'), 'det'), (('advances', 'Looking'), 'obl'), (('we', 'made'), 'nsubj'), (('’ve', 'made'), 'aux'), (('made', 'advances'), 'acl:relcl'), (('over', 'decade'), 'case'), (('the', 'decade'), 'det'), (('last', 'decade'), 'amod'), (('decade', 'made'), 'obl'), ((',', 'easy'), 'punct'), (('gathering', 'easy'), 'csubj'), (('data', 'gathering'), 'obj'), (('is', 'easy'), 'cop'), (('easy', 'root'), 'root'), (('.', 'easy'), 'punct')]

 Named Entites are: 
>> [('the last  decade', 'DATE')]

------------------- Sentence 3 -------------------

 But it’s what’s done with  the data that provides the most value. 

Tokens are: 
>> ['But', 'it', '’s', 'what', '’s', 'done', 'with', 'the', 'data', 'that', 'provides', 'the', 'most', 'value', '.'] 

 UPOS tags are: 
>> [('But', 'CCONJ'), ('it', 'PRON'), ('’s', 'AUX'), ('what', 'PRON'), ('’s', 'AUX'), ('done', 'VERB'), ('with', 'ADP'), ('the', 'DET'), ('data', 'NOUN'), ('that', 'PRON'), ('provides', 'VERB'), ('the', 'DET'), ('most', 'ADJ'), ('value', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('But', 'CC'), ('it', 'PRP'), ('’s', 'VBZ'), ('what', 'WP'), ('’s', 'VBZ'), ('done', 'VBN'), ('with', 'IN'), ('the', 'DT'), ('data', 'NN'), ('that', 'WDT'), ('provides', 'VBZ'), ('the', 'DT'), ('most', 'JJS'), ('value', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('But', 'but'), ('it', 'it'), ('’s', 'be'), ('what', 'what'), ('’s', 'be'), ('done', 'do'), ('with', 'with'), ('the', 'the'), ('data', 'datum'), ('that', 'that'), ('provides', 'provide'), ('the', 'the'), ('most', 'most'), ('value', 'value'), ('.', '.')] 

 Dependency tags are: 
>> [(('But', 'what'), 'cc'), (('it', 'what'), 'nsubj'), (('’s', 'what'), 'cop'), (('what', 'root'), 'root'), (('’s', 'done'), 'aux:pass'), (('done', 'what'), 'acl:relcl'), (('with', 'data'), 'case'), (('the', 'data'), 'det'), (('data', 'done'), 'obl'), (('that', 'provides'), 'nsubj'), (('provides', 'data'), 'acl:relcl'), (('the', 'value'), 'det'), (('most', 'value'), 'amod'), (('value', 'provides'), 'obj'), (('.', 'what'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 The biggest pitfall  we often encounter is a culture that’s not committed to  making data-driven decisions. 

Tokens are: 
>> ['The', 'biggest', 'pitfall', 'we', 'often', 'encounter', 'is', 'a', 'culture', 'that', '’s', 'not', 'committed', 'to', 'making', 'data-driven', 'decisions', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('biggest', 'ADJ'), ('pitfall', 'NOUN'), ('we', 'PRON'), ('often', 'ADV'), ('encounter', 'VERB'), ('is', 'AUX'), ('a', 'DET'), ('culture', 'NOUN'), ('that', 'PRON'), ('’s', 'AUX'), ('not', 'PART'), ('committed', 'VERB'), ('to', 'SCONJ'), ('making', 'VERB'), ('data-driven', 'ADJ'), ('decisions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('biggest', 'JJS'), ('pitfall', 'NN'), ('we', 'PRP'), ('often', 'RB'), ('encounter', 'VBP'), ('is', 'VBZ'), ('a', 'DT'), ('culture', 'NN'), ('that', 'WDT'), ('’s', 'VBZ'), ('not', 'RB'), ('committed', 'VBN'), ('to', 'IN'), ('making', 'VBG'), ('data-driven', 'JJ'), ('decisions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('biggest', 'big'), ('pitfall', 'pitfall'), ('we', 'we'), ('often', 'often'), ('encounter', 'encounter'), ('is', 'be'), ('a', 'a'), ('culture', 'culture'), ('that', 'that'), ('’s', 'be'), ('not', 'not'), ('committed', 'commit'), ('to', 'to'), ('making', 'make'), ('data-driven', 'data-driven'), ('decisions', 'decision'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'pitfall'), 'det'), (('biggest', 'pitfall'), 'amod'), (('pitfall', 'culture'), 'nsubj'), (('we', 'encounter'), 'nsubj'), (('often', 'encounter'), 'advmod'), (('encounter', 'pitfall'), 'acl:relcl'), (('is', 'culture'), 'cop'), (('a', 'culture'), 'det'), (('culture', 'root'), 'root'), (('that', 'committed'), 'nsubj:pass'), (('’s', 'committed'), 'aux:pass'), (('not', 'committed'), 'advmod'), (('committed', 'culture'), 'acl:relcl'), (('to', 'making'), 'mark'), (('making', 'committed'), 'advcl'), (('data-driven', 'decisions'), 'amod'), (('decisions', 'making'), 'obj'), (('.', 'culture'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 Examples are cultures that  can’t innovate in an agile fashion or can’t leave room for  trial and error, as are cultures that have traditionally been  unwilling to transform a process. 

Tokens are: 
>> ['Examples', 'are', 'cultures', 'that', 'ca', 'n’t', 'innovate', 'in', 'an', 'agile', 'fashion', 'or', 'ca', 'n’t', 'leave', 'room', 'for', 'trial', 'and', 'error', ',', 'as', 'are', 'cultures', 'that', 'have', 'traditionally', 'been', 'unwilling', 'to', 'transform', 'a', 'process', '.'] 

 UPOS tags are: 
>> [('Examples', 'NOUN'), ('are', 'AUX'), ('cultures', 'NOUN'), ('that', 'PRON'), ('ca', 'AUX'), ('n’t', 'PART'), ('innovate', 'VERB'), ('in', 'ADP'), ('an', 'DET'), ('agile', 'ADJ'), ('fashion', 'NOUN'), ('or', 'CCONJ'), ('ca', 'AUX'), ('n’t', 'PART'), ('leave', 'VERB'), ('room', 'NOUN'), ('for', 'ADP'), ('trial', 'NOUN'), ('and', 'CCONJ'), ('error', 'NOUN'), (',', 'PUNCT'), ('as', 'SCONJ'), ('are', 'VERB'), ('cultures', 'NOUN'), ('that', 'PRON'), ('have', 'AUX'), ('traditionally', 'ADV'), ('been', 'AUX'), ('unwilling', 'ADJ'), ('to', 'PART'), ('transform', 'VERB'), ('a', 'DET'), ('process', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Examples', 'NNS'), ('are', 'VBP'), ('cultures', 'NNS'), ('that', 'WDT'), ('ca', 'MD'), ('n’t', 'RB'), ('innovate', 'VB'), ('in', 'IN'), ('an', 'DT'), ('agile', 'JJ'), ('fashion', 'NN'), ('or', 'CC'), ('ca', 'MD'), ('n’t', 'RB'), ('leave', 'VB'), ('room', 'NN'), ('for', 'IN'), ('trial', 'NN'), ('and', 'CC'), ('error', 'NN'), (',', ','), ('as', 'IN'), ('are', 'VBP'), ('cultures', 'NNS'), ('that', 'WDT'), ('have', 'VBP'), ('traditionally', 'RB'), ('been', 'VBN'), ('unwilling', 'JJ'), ('to', 'TO'), ('transform', 'VB'), ('a', 'DT'), ('process', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Examples', 'example'), ('are', 'be'), ('cultures', 'culture'), ('that', 'that'), ('ca', 'can'), ('n’t', 'not'), ('innovate', 'innovate'), ('in', 'in'), ('an', 'a'), ('agile', 'agile'), ('fashion', 'fashion'), ('or', 'or'), ('ca', 'can'), ('n’t', 'not'), ('leave', 'leave'), ('room', 'room'), ('for', 'for'), ('trial', 'trial'), ('and', 'and'), ('error', 'error'), (',', ','), ('as', 'as'), ('are', 'be'), ('cultures', 'culture'), ('that', 'that'), ('have', 'have'), ('traditionally', 'traditionally'), ('been', 'be'), ('unwilling', 'unwilling'), ('to', 'to'), ('transform', 'transform'), ('a', 'a'), ('process', 'process'), ('.', '.')] 

 Dependency tags are: 
>> [(('Examples', 'cultures'), 'nsubj'), (('are', 'cultures'), 'cop'), (('cultures', 'root'), 'root'), (('that', 'innovate'), 'nsubj'), (('ca', 'innovate'), 'aux'), (('n’t', 'innovate'), 'advmod'), (('innovate', 'cultures'), 'acl:relcl'), (('in', 'fashion'), 'case'), (('an', 'fashion'), 'det'), (('agile', 'fashion'), 'amod'), (('fashion', 'innovate'), 'obl'), (('or', 'leave'), 'cc'), (('ca', 'leave'), 'aux'), (('n’t', 'leave'), 'advmod'), (('leave', 'innovate'), 'conj'), (('room', 'leave'), 'obj'), (('for', 'trial'), 'case'), (('trial', 'leave'), 'obl'), (('and', 'error'), 'cc'), (('error', 'trial'), 'conj'), ((',', 'are'), 'punct'), (('as', 'are'), 'mark'), (('are', 'leave'), 'advcl'), (('cultures', 'are'), 'nsubj'), (('that', 'unwilling'), 'nsubj'), (('have', 'unwilling'), 'aux'), (('traditionally', 'unwilling'), 'advmod'), (('been', 'unwilling'), 'cop'), (('unwilling', 'cultures'), 'acl:relcl'), (('to', 'transform'), 'mark'), (('transform', 'unwilling'), 'xcomp'), (('a', 'process'), 'det'), (('process', 'transform'), 'obj'), (('.', 'cultures'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 This reluctance usually  has to do with fear of job loss, skepticism or a knowledge  gap. 

Tokens are: 
>> ['This', 'reluctance', 'usually', 'has', 'to', 'do', 'with', 'fear', 'of', 'job', 'loss', ',', 'skepticism', 'or', 'a', 'knowledge', 'gap', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('reluctance', 'NOUN'), ('usually', 'ADV'), ('has', 'VERB'), ('to', 'PART'), ('do', 'VERB'), ('with', 'ADP'), ('fear', 'NOUN'), ('of', 'ADP'), ('job', 'NOUN'), ('loss', 'NOUN'), (',', 'PUNCT'), ('skepticism', 'NOUN'), ('or', 'CCONJ'), ('a', 'DET'), ('knowledge', 'NOUN'), ('gap', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('reluctance', 'NN'), ('usually', 'RB'), ('has', 'VBZ'), ('to', 'TO'), ('do', 'VB'), ('with', 'IN'), ('fear', 'NN'), ('of', 'IN'), ('job', 'NN'), ('loss', 'NN'), (',', ','), ('skepticism', 'NN'), ('or', 'CC'), ('a', 'DT'), ('knowledge', 'NN'), ('gap', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('reluctance', 'reluctance'), ('usually', 'usually'), ('has', 'have'), ('to', 'to'), ('do', 'do'), ('with', 'with'), ('fear', 'fear'), ('of', 'of'), ('job', 'job'), ('loss', 'loss'), (',', ','), ('skepticism', 'skepticism'), ('or', 'or'), ('a', 'a'), ('knowledge', 'knowledge'), ('gap', 'gap'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'reluctance'), 'det'), (('reluctance', 'has'), 'nsubj'), (('usually', 'has'), 'advmod'), (('has', 'root'), 'root'), (('to', 'do'), 'mark'), (('do', 'has'), 'xcomp'), (('with', 'fear'), 'case'), (('fear', 'do'), 'obl'), (('of', 'loss'), 'case'), (('job', 'loss'), 'compound'), (('loss', 'fear'), 'nmod'), ((',', 'skepticism'), 'punct'), (('skepticism', 'loss'), 'conj'), (('or', 'gap'), 'cc'), (('a', 'gap'), 'det'), (('knowledge', 'gap'), 'compound'), (('gap', 'loss'), 'conj'), (('.', 'has'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 7 -------------------

 It’s a challenge to get your organization ready to  embrace a data-driven culture, and for many of your  employees it can feel like a counter intuitive process. 

Tokens are: 
>> ['It', '’s', 'a', 'challenge', 'to', 'get', 'your', 'organization', 'ready', 'to', 'embrace', 'a', 'data-driven', 'culture', ',', 'and', 'for', 'many', 'of', 'your', 'employees', 'it', 'can', 'feel', 'like', 'a', 'counter', 'intuitive', 'process', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('’s', 'AUX'), ('a', 'DET'), ('challenge', 'NOUN'), ('to', 'PART'), ('get', 'VERB'), ('your', 'PRON'), ('organization', 'NOUN'), ('ready', 'ADJ'), ('to', 'PART'), ('embrace', 'VERB'), ('a', 'DET'), ('data-driven', 'ADJ'), ('culture', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('for', 'ADP'), ('many', 'ADJ'), ('of', 'ADP'), ('your', 'PRON'), ('employees', 'NOUN'), ('it', 'PRON'), ('can', 'AUX'), ('feel', 'VERB'), ('like', 'ADP'), ('a', 'DET'), ('counter', 'ADJ'), ('intuitive', 'ADJ'), ('process', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('’s', 'VBZ'), ('a', 'DT'), ('challenge', 'NN'), ('to', 'TO'), ('get', 'VB'), ('your', 'PRP$'), ('organization', 'NN'), ('ready', 'JJ'), ('to', 'TO'), ('embrace', 'VB'), ('a', 'DT'), ('data-driven', 'JJ'), ('culture', 'NN'), (',', ','), ('and', 'CC'), ('for', 'IN'), ('many', 'JJ'), ('of', 'IN'), ('your', 'PRP$'), ('employees', 'NNS'), ('it', 'PRP'), ('can', 'MD'), ('feel', 'VB'), ('like', 'IN'), ('a', 'DT'), ('counter', 'JJ'), ('intuitive', 'JJ'), ('process', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('’s', 'be'), ('a', 'a'), ('challenge', 'challenge'), ('to', 'to'), ('get', 'get'), ('your', 'you'), ('organization', 'organization'), ('ready', 'ready'), ('to', 'to'), ('embrace', 'embrace'), ('a', 'a'), ('data-driven', 'data-driven'), ('culture', 'culture'), (',', ','), ('and', 'and'), ('for', 'for'), ('many', 'many'), ('of', 'of'), ('your', 'you'), ('employees', 'employee'), ('it', 'it'), ('can', 'can'), ('feel', 'feel'), ('like', 'like'), ('a', 'a'), ('counter', 'counter'), ('intuitive', 'intuitive'), ('process', 'process'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'challenge'), 'expl'), (('’s', 'challenge'), 'cop'), (('a', 'challenge'), 'det'), (('challenge', 'root'), 'root'), (('to', 'get'), 'mark'), (('get', 'challenge'), 'csubj'), (('your', 'organization'), 'nmod:poss'), (('organization', 'get'), 'obj'), (('ready', 'get'), 'xcomp'), (('to', 'embrace'), 'mark'), (('embrace', 'ready'), 'xcomp'), (('a', 'culture'), 'det'), (('data-driven', 'culture'), 'amod'), (('culture', 'embrace'), 'obj'), ((',', 'feel'), 'punct'), (('and', 'feel'), 'cc'), (('for', 'many'), 'case'), (('many', 'feel'), 'obl'), (('of', 'employees'), 'case'), (('your', 'employees'), 'nmod:poss'), (('employees', 'many'), 'nmod'), (('it', 'feel'), 'nsubj'), (('can', 'feel'), 'aux'), (('feel', 'challenge'), 'conj'), (('like', 'process'), 'case'), (('a', 'process'), 'det'), (('counter', 'process'), 'amod'), (('intuitive', 'process'), 'amod'), (('process', 'feel'), 'obl'), (('.', 'challenge'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 182 =================================

Recommendation: Digital change management, training  and preparation for the shift in thinking is required. You  should start with small wins that are visible for relevant  departments. The business users should be your starting  point for agile development and in your design thinking  process. All the results that come out of the project should  be measurable; this way you can easily show your wins.  Then, for a data-driven culture to take hold, the whole  organization must embrace it. The message must be clear  for all employees: “Decision are made based on data.” 


------------------- Sentence 1 -------------------

 Recommendation: Digital change management, training  and preparation for the shift in thinking is required. 

Tokens are: 
>> ['Recommendation', ':', 'Digital', 'change', 'management', ',', 'training', 'and', 'preparation', 'for', 'the', 'shift', 'in', 'thinking', 'is', 'required', '.'] 

 UPOS tags are: 
>> [('Recommendation', 'NOUN'), (':', 'PUNCT'), ('Digital', 'ADJ'), ('change', 'NOUN'), ('management', 'NOUN'), (',', 'PUNCT'), ('training', 'NOUN'), ('and', 'CCONJ'), ('preparation', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('shift', 'NOUN'), ('in', 'SCONJ'), ('thinking', 'NOUN'), ('is', 'AUX'), ('required', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Recommendation', 'NN'), (':', ':'), ('Digital', 'JJ'), ('change', 'NN'), ('management', 'NN'), (',', ','), ('training', 'NN'), ('and', 'CC'), ('preparation', 'NN'), ('for', 'IN'), ('the', 'DT'), ('shift', 'NN'), ('in', 'IN'), ('thinking', 'NN'), ('is', 'VBZ'), ('required', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('Recommendation', 'recommendation'), (':', ':'), ('Digital', 'digital'), ('change', 'change'), ('management', 'management'), (',', ','), ('training', 'training'), ('and', 'and'), ('preparation', 'preparation'), ('for', 'for'), ('the', 'the'), ('shift', 'shift'), ('in', 'in'), ('thinking', 'thinking'), ('is', 'be'), ('required', 'require'), ('.', '.')] 

 Dependency tags are: 
>> [(('Recommendation', 'root'), 'root'), ((':', 'Recommendation'), 'punct'), (('Digital', 'management'), 'amod'), (('change', 'management'), 'compound'), (('management', 'required'), 'nsubj:pass'), ((',', 'training'), 'punct'), (('training', 'management'), 'conj'), (('and', 'preparation'), 'cc'), (('preparation', 'management'), 'conj'), (('for', 'shift'), 'case'), (('the', 'shift'), 'det'), (('shift', 'management'), 'nmod'), (('in', 'thinking'), 'case'), (('thinking', 'shift'), 'nmod'), (('is', 'required'), 'aux:pass'), (('required', 'Recommendation'), 'appos'), (('.', 'Recommendation'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 You  should start with small wins that are visible for relevant  departments. 

Tokens are: 
>> ['You', 'should', 'start', 'with', 'small', 'wins', 'that', 'are', 'visible', 'for', 'relevant', 'departments', '.'] 

 UPOS tags are: 
>> [('You', 'PRON'), ('should', 'AUX'), ('start', 'VERB'), ('with', 'ADP'), ('small', 'ADJ'), ('wins', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('visible', 'ADJ'), ('for', 'ADP'), ('relevant', 'ADJ'), ('departments', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('You', 'PRP'), ('should', 'MD'), ('start', 'VB'), ('with', 'IN'), ('small', 'JJ'), ('wins', 'NNS'), ('that', 'WDT'), ('are', 'VBP'), ('visible', 'JJ'), ('for', 'IN'), ('relevant', 'JJ'), ('departments', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('You', 'you'), ('should', 'should'), ('start', 'start'), ('with', 'with'), ('small', 'small'), ('wins', 'win'), ('that', 'that'), ('are', 'be'), ('visible', 'visible'), ('for', 'for'), ('relevant', 'relevant'), ('departments', 'department'), ('.', '.')] 

 Dependency tags are: 
>> [(('You', 'start'), 'nsubj'), (('should', 'start'), 'aux'), (('start', 'root'), 'root'), (('with', 'wins'), 'case'), (('small', 'wins'), 'amod'), (('wins', 'start'), 'obl'), (('that', 'visible'), 'nsubj'), (('are', 'visible'), 'cop'), (('visible', 'wins'), 'acl:relcl'), (('for', 'departments'), 'case'), (('relevant', 'departments'), 'amod'), (('departments', 'visible'), 'obl'), (('.', 'start'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 The business users should be your starting  point for agile development and in your design thinking  process. 

Tokens are: 
>> ['The', 'business', 'users', 'should', 'be', 'your', 'starting', 'point', 'for', 'agile', 'development', 'and', 'in', 'your', 'design', 'thinking', 'process', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('business', 'NOUN'), ('users', 'NOUN'), ('should', 'AUX'), ('be', 'AUX'), ('your', 'PRON'), ('starting', 'NOUN'), ('point', 'NOUN'), ('for', 'ADP'), ('agile', 'ADJ'), ('development', 'NOUN'), ('and', 'CCONJ'), ('in', 'ADP'), ('your', 'PRON'), ('design', 'NOUN'), ('thinking', 'NOUN'), ('process', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('business', 'NN'), ('users', 'NNS'), ('should', 'MD'), ('be', 'VB'), ('your', 'PRP$'), ('starting', 'NN'), ('point', 'NN'), ('for', 'IN'), ('agile', 'JJ'), ('development', 'NN'), ('and', 'CC'), ('in', 'IN'), ('your', 'PRP$'), ('design', 'NN'), ('thinking', 'NN'), ('process', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('business', 'business'), ('users', 'user'), ('should', 'should'), ('be', 'be'), ('your', 'you'), ('starting', 'starting'), ('point', 'point'), ('for', 'for'), ('agile', 'agile'), ('development', 'development'), ('and', 'and'), ('in', 'in'), ('your', 'you'), ('design', 'design'), ('thinking', 'thinking'), ('process', 'process'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'users'), 'det'), (('business', 'users'), 'compound'), (('users', 'point'), 'nsubj'), (('should', 'point'), 'aux'), (('be', 'point'), 'cop'), (('your', 'point'), 'nmod:poss'), (('starting', 'point'), 'compound'), (('point', 'root'), 'root'), (('for', 'development'), 'case'), (('agile', 'development'), 'amod'), (('development', 'point'), 'nmod'), (('and', 'process'), 'cc'), (('in', 'process'), 'case'), (('your', 'process'), 'nmod:poss'), (('design', 'thinking'), 'compound'), (('thinking', 'process'), 'compound'), (('process', 'development'), 'conj'), (('.', 'point'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 All the results that come out of the project should  be measurable; this way you can easily show your wins. 

Tokens are: 
>> ['All', 'the', 'results', 'that', 'come', 'out', 'of', 'the', 'project', 'should', 'be', 'measurable', ';', 'this', 'way', 'you', 'can', 'easily', 'show', 'your', 'wins', '.'] 

 UPOS tags are: 
>> [('All', 'DET'), ('the', 'DET'), ('results', 'NOUN'), ('that', 'PRON'), ('come', 'VERB'), ('out', 'ADP'), ('of', 'ADP'), ('the', 'DET'), ('project', 'NOUN'), ('should', 'AUX'), ('be', 'AUX'), ('measurable', 'ADJ'), (';', 'PUNCT'), ('this', 'DET'), ('way', 'NOUN'), ('you', 'PRON'), ('can', 'AUX'), ('easily', 'ADV'), ('show', 'VERB'), ('your', 'PRON'), ('wins', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('All', 'PDT'), ('the', 'DT'), ('results', 'NNS'), ('that', 'WDT'), ('come', 'VBP'), ('out', 'IN'), ('of', 'IN'), ('the', 'DT'), ('project', 'NN'), ('should', 'MD'), ('be', 'VB'), ('measurable', 'JJ'), (';', ':'), ('this', 'DT'), ('way', 'NN'), ('you', 'PRP'), ('can', 'MD'), ('easily', 'RB'), ('show', 'VB'), ('your', 'PRP$'), ('wins', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('All', 'all'), ('the', 'the'), ('results', 'result'), ('that', 'that'), ('come', 'come'), ('out', 'out'), ('of', 'of'), ('the', 'the'), ('project', 'project'), ('should', 'should'), ('be', 'be'), ('measurable', 'measurable'), (';', ';'), ('this', 'this'), ('way', 'way'), ('you', 'you'), ('can', 'can'), ('easily', 'easily'), ('show', 'show'), ('your', 'you'), ('wins', 'win'), ('.', '.')] 

 Dependency tags are: 
>> [(('All', 'results'), 'det:predet'), (('the', 'results'), 'det'), (('results', 'measurable'), 'nsubj'), (('that', 'come'), 'nsubj'), (('come', 'results'), 'acl:relcl'), (('out', 'project'), 'case'), (('of', 'project'), 'case'), (('the', 'project'), 'det'), (('project', 'come'), 'obl'), (('should', 'measurable'), 'aux'), (('be', 'measurable'), 'cop'), (('measurable', 'root'), 'root'), ((';', 'show'), 'punct'), (('this', 'way'), 'det'), (('way', 'show'), 'obl:npmod'), (('you', 'show'), 'nsubj'), (('can', 'show'), 'aux'), (('easily', 'show'), 'advmod'), (('show', 'measurable'), 'parataxis'), (('your', 'wins'), 'nmod:poss'), (('wins', 'show'), 'obj'), (('.', 'measurable'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 Then, for a data-driven culture to take hold, the whole  organization must embrace it. 

Tokens are: 
>> ['Then', ',', 'for', 'a', 'data-driven', 'culture', 'to', 'take', 'hold', ',', 'the', 'whole', 'organization', 'must', 'embrace', 'it', '.'] 

 UPOS tags are: 
>> [('Then', 'ADV'), (',', 'PUNCT'), ('for', 'ADP'), ('a', 'DET'), ('data-driven', 'ADJ'), ('culture', 'NOUN'), ('to', 'PART'), ('take', 'VERB'), ('hold', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('whole', 'ADJ'), ('organization', 'NOUN'), ('must', 'AUX'), ('embrace', 'VERB'), ('it', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Then', 'RB'), (',', ','), ('for', 'IN'), ('a', 'DT'), ('data-driven', 'JJ'), ('culture', 'NN'), ('to', 'TO'), ('take', 'VB'), ('hold', 'NN'), (',', ','), ('the', 'DT'), ('whole', 'JJ'), ('organization', 'NN'), ('must', 'MD'), ('embrace', 'VB'), ('it', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('Then', 'then'), (',', ','), ('for', 'for'), ('a', 'a'), ('data-driven', 'data-driven'), ('culture', 'culture'), ('to', 'to'), ('take', 'take'), ('hold', 'hold'), (',', ','), ('the', 'the'), ('whole', 'whole'), ('organization', 'organization'), ('must', 'must'), ('embrace', 'embrace'), ('it', 'it'), ('.', '.')] 

 Dependency tags are: 
>> [(('Then', 'embrace'), 'advmod'), ((',', 'embrace'), 'punct'), (('for', 'culture'), 'case'), (('a', 'culture'), 'det'), (('data-driven', 'culture'), 'amod'), (('culture', 'embrace'), 'obl'), (('to', 'take'), 'mark'), (('take', 'culture'), 'acl'), (('hold', 'take'), 'obj'), ((',', 'embrace'), 'punct'), (('the', 'organization'), 'det'), (('whole', 'organization'), 'amod'), (('organization', 'embrace'), 'nsubj'), (('must', 'embrace'), 'aux'), (('embrace', 'root'), 'root'), (('it', 'embrace'), 'obj'), (('.', 'embrace'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 The message must be clear  for all employees: “Decision are made based on data.” 

Tokens are: 
>> ['The', 'message', 'must', 'be', 'clear', 'for', 'all', 'employees', ':', '“', 'Decision', 'are', 'made', 'based', 'on', 'data', '.', '”'] 

 UPOS tags are: 
>> [('The', 'DET'), ('message', 'NOUN'), ('must', 'AUX'), ('be', 'AUX'), ('clear', 'ADJ'), ('for', 'ADP'), ('all', 'DET'), ('employees', 'NOUN'), (':', 'PUNCT'), ('“', 'PUNCT'), ('Decision', 'NOUN'), ('are', 'AUX'), ('made', 'VERB'), ('based', 'VERB'), ('on', 'ADP'), ('data', 'NOUN'), ('.', 'PUNCT'), ('”', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('message', 'NN'), ('must', 'MD'), ('be', 'VB'), ('clear', 'JJ'), ('for', 'IN'), ('all', 'DT'), ('employees', 'NNS'), (':', ':'), ('“', '``'), ('Decision', 'NN'), ('are', 'VBP'), ('made', 'VBN'), ('based', 'VBN'), ('on', 'IN'), ('data', 'NNS'), ('.', '.'), ('”', "''")] 

 Lemmas are: 
>> [('The', 'the'), ('message', 'message'), ('must', 'must'), ('be', 'be'), ('clear', 'clear'), ('for', 'for'), ('all', 'all'), ('employees', 'employee'), (':', ':'), ('“', "''"), ('Decision', 'decision'), ('are', 'be'), ('made', 'make'), ('based', 'base'), ('on', 'on'), ('data', 'datum'), ('.', '.'), ('”', "''")] 

 Dependency tags are: 
>> [(('The', 'message'), 'det'), (('message', 'clear'), 'nsubj'), (('must', 'clear'), 'aux'), (('be', 'clear'), 'cop'), (('clear', 'root'), 'root'), (('for', 'employees'), 'case'), (('all', 'employees'), 'det'), (('employees', 'clear'), 'obl'), ((':', 'clear'), 'punct'), (('“', 'made'), 'punct'), (('Decision', 'made'), 'nsubj:pass'), (('are', 'made'), 'aux:pass'), (('made', 'clear'), 'parataxis'), (('based', 'made'), 'xcomp'), (('on', 'data'), 'case'), (('data', 'based'), 'obl'), (('.', 'made'), 'punct'), (('”', 'made'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 183 =================================

Building trust within the company Pitfalls: This step is often overlooked, but when you want  to implement AI you need get project stakeholders involved  and on board. In Design Thinking, IBM starts with the  business and its users. A data scientist will require domain  knowledge and access to data, and the stakeholders should  accommodate this need to help to speed up the process.  Also, consider the need for AI education and devote time  to considering the right user interface.  


------------------- Sentence 1 -------------------

 Building trust within the company Pitfalls: 

Tokens are: 
>> ['Building', 'trust', 'within', 'the', 'company', 'Pitfalls', ':'] 

 UPOS tags are: 
>> [('Building', 'NOUN'), ('trust', 'NOUN'), ('within', 'ADP'), ('the', 'DET'), ('company', 'NOUN'), ('Pitfalls', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Building', 'NN'), ('trust', 'NN'), ('within', 'IN'), ('the', 'DT'), ('company', 'NN'), ('Pitfalls', 'NNS'), (':', ':')] 

 Lemmas are: 
>> [('Building', 'Building'), ('trust', 'trust'), ('within', 'within'), ('the', 'the'), ('company', 'company'), ('Pitfalls', 'pitfall'), (':', ':')] 

 Dependency tags are: 
>> [(('Building', 'trust'), 'compound'), (('trust', 'root'), 'root'), (('within', 'Pitfalls'), 'case'), (('the', 'Pitfalls'), 'det'), (('company', 'Pitfalls'), 'compound'), (('Pitfalls', 'trust'), 'nmod'), ((':', 'trust'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 This step is often overlooked, but when you want  to implement AI you need get project stakeholders involved  and on board. 

Tokens are: 
>> ['This', 'step', 'is', 'often', 'overlooked', ',', 'but', 'when', 'you', 'want', 'to', 'implement', 'AI', 'you', 'need', 'get', 'project', 'stakeholders', 'involved', 'and', 'on', 'board', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('step', 'NOUN'), ('is', 'AUX'), ('often', 'ADV'), ('overlooked', 'VERB'), (',', 'PUNCT'), ('but', 'CCONJ'), ('when', 'SCONJ'), ('you', 'PRON'), ('want', 'VERB'), ('to', 'PART'), ('implement', 'VERB'), ('AI', 'AUX'), ('you', 'PRON'), ('need', 'VERB'), ('get', 'VERB'), ('project', 'NOUN'), ('stakeholders', 'NOUN'), ('involved', 'VERB'), ('and', 'CCONJ'), ('on', 'ADP'), ('board', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('step', 'NN'), ('is', 'VBZ'), ('often', 'RB'), ('overlooked', 'VBN'), (',', ','), ('but', 'CC'), ('when', 'WRB'), ('you', 'PRP'), ('want', 'VBP'), ('to', 'TO'), ('implement', 'VB'), ('AI', 'VBZ'), ('you', 'PRP'), ('need', 'VBP'), ('get', 'VB'), ('project', 'NN'), ('stakeholders', 'NNS'), ('involved', 'VBN'), ('and', 'CC'), ('on', 'IN'), ('board', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('step', 'step'), ('is', 'be'), ('often', 'often'), ('overlooked', 'overlook'), (',', ','), ('but', 'but'), ('when', 'when'), ('you', 'you'), ('want', 'want'), ('to', 'to'), ('implement', 'implement'), ('AI', 'be'), ('you', 'you'), ('need', 'need'), ('get', 'get'), ('project', 'project'), ('stakeholders', 'stakeholder'), ('involved', 'involve'), ('and', 'and'), ('on', 'on'), ('board', 'board'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'step'), 'det'), (('step', 'overlooked'), 'nsubj:pass'), (('is', 'overlooked'), 'aux:pass'), (('often', 'overlooked'), 'advmod'), (('overlooked', 'root'), 'root'), ((',', 'need'), 'punct'), (('but', 'need'), 'cc'), (('when', 'want'), 'mark'), (('you', 'want'), 'nsubj'), (('want', 'need'), 'advcl'), (('to', 'implement'), 'mark'), (('implement', 'want'), 'xcomp'), (('AI', 'overlooked'), 'conj'), (('you', 'need'), 'nsubj'), (('need', 'overlooked'), 'conj'), (('get', 'need'), 'xcomp'), (('project', 'stakeholders'), 'compound'), (('stakeholders', 'get'), 'obj'), (('involved', 'stakeholders'), 'acl'), (('and', 'board'), 'cc'), (('on', 'board'), 'case'), (('board', 'involved'), 'conj'), (('.', 'overlooked'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 In Design Thinking, IBM starts with the  business and its users. 

Tokens are: 
>> ['In', 'Design', 'Thinking', ',', 'IBM', 'starts', 'with', 'the', 'business', 'and', 'its', 'users', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Design', 'NOUN'), ('Thinking', 'VERB'), (',', 'PUNCT'), ('IBM', 'PROPN'), ('starts', 'VERB'), ('with', 'ADP'), ('the', 'DET'), ('business', 'NOUN'), ('and', 'CCONJ'), ('its', 'PRON'), ('users', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Design', 'NN'), ('Thinking', 'VBG'), (',', ','), ('IBM', 'NNP'), ('starts', 'VBZ'), ('with', 'IN'), ('the', 'DT'), ('business', 'NN'), ('and', 'CC'), ('its', 'PRP$'), ('users', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Design', 'design'), ('Thinking', 'think'), (',', ','), ('IBM', 'IBM'), ('starts', 'start'), ('with', 'with'), ('the', 'the'), ('business', 'business'), ('and', 'and'), ('its', 'its'), ('users', 'user'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Design'), 'case'), (('Design', 'starts'), 'obl'), (('Thinking', 'starts'), 'advcl'), ((',', 'starts'), 'punct'), (('IBM', 'starts'), 'nsubj'), (('starts', 'root'), 'root'), (('with', 'business'), 'case'), (('the', 'business'), 'det'), (('business', 'starts'), 'obl'), (('and', 'users'), 'cc'), (('its', 'users'), 'nmod:poss'), (('users', 'business'), 'conj'), (('.', 'starts'), 'punct')]

 Named Entites are: 
>> [('Design Thinking', 'ORG'), ('IBM', 'ORG')]

------------------- Sentence 4 -------------------

 A data scientist will require domain  knowledge and access to data, and the stakeholders should  accommodate this need to help to speed up the process. 

Tokens are: 
>> ['A', 'data', 'scientist', 'will', 'require', 'domain', 'knowledge', 'and', 'access', 'to', 'data', ',', 'and', 'the', 'stakeholders', 'should', 'accommodate', 'this', 'need', 'to', 'help', 'to', 'speed', 'up', 'the', 'process', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('data', 'NOUN'), ('scientist', 'NOUN'), ('will', 'AUX'), ('require', 'VERB'), ('domain', 'NOUN'), ('knowledge', 'NOUN'), ('and', 'CCONJ'), ('access', 'NOUN'), ('to', 'ADP'), ('data', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('the', 'DET'), ('stakeholders', 'NOUN'), ('should', 'AUX'), ('accommodate', 'VERB'), ('this', 'DET'), ('need', 'NOUN'), ('to', 'PART'), ('help', 'VERB'), ('to', 'PART'), ('speed', 'VERB'), ('up', 'ADP'), ('the', 'DET'), ('process', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('data', 'NN'), ('scientist', 'NN'), ('will', 'MD'), ('require', 'VB'), ('domain', 'NN'), ('knowledge', 'NN'), ('and', 'CC'), ('access', 'NN'), ('to', 'IN'), ('data', 'NNS'), (',', ','), ('and', 'CC'), ('the', 'DT'), ('stakeholders', 'NNS'), ('should', 'MD'), ('accommodate', 'VB'), ('this', 'DT'), ('need', 'NN'), ('to', 'TO'), ('help', 'VB'), ('to', 'TO'), ('speed', 'VB'), ('up', 'RP'), ('the', 'DT'), ('process', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('data', 'datum'), ('scientist', 'scientist'), ('will', 'will'), ('require', 'require'), ('domain', 'domain'), ('knowledge', 'knowledge'), ('and', 'and'), ('access', 'access'), ('to', 'to'), ('data', 'datum'), (',', ','), ('and', 'and'), ('the', 'the'), ('stakeholders', 'stakeholder'), ('should', 'should'), ('accommodate', 'accommodate'), ('this', 'this'), ('need', 'need'), ('to', 'to'), ('help', 'help'), ('to', 'to'), ('speed', 'speed'), ('up', 'up'), ('the', 'the'), ('process', 'process'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'scientist'), 'det'), (('data', 'scientist'), 'compound'), (('scientist', 'require'), 'nsubj'), (('will', 'require'), 'aux'), (('require', 'root'), 'root'), (('domain', 'knowledge'), 'compound'), (('knowledge', 'require'), 'obj'), (('and', 'access'), 'cc'), (('access', 'knowledge'), 'conj'), (('to', 'data'), 'case'), (('data', 'knowledge'), 'nmod'), ((',', 'accommodate'), 'punct'), (('and', 'accommodate'), 'cc'), (('the', 'stakeholders'), 'det'), (('stakeholders', 'accommodate'), 'nsubj'), (('should', 'accommodate'), 'aux'), (('accommodate', 'require'), 'conj'), (('this', 'need'), 'det'), (('need', 'accommodate'), 'obj'), (('to', 'help'), 'mark'), (('help', 'accommodate'), 'advcl'), (('to', 'speed'), 'mark'), (('speed', 'help'), 'xcomp'), (('up', 'speed'), 'compound:prt'), (('the', 'process'), 'det'), (('process', 'speed'), 'obj'), (('.', 'require'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 Also, consider the need for AI education and devote time  to considering the right user interface. 

Tokens are: 
>> ['Also', ',', 'consider', 'the', 'need', 'for', 'AI', 'education', 'and', 'devote', 'time', 'to', 'considering', 'the', 'right', 'user', 'interface', '.'] 

 UPOS tags are: 
>> [('Also', 'ADV'), (',', 'PUNCT'), ('consider', 'VERB'), ('the', 'DET'), ('need', 'NOUN'), ('for', 'ADP'), ('AI', 'NOUN'), ('education', 'NOUN'), ('and', 'CCONJ'), ('devote', 'VERB'), ('time', 'NOUN'), ('to', 'SCONJ'), ('considering', 'VERB'), ('the', 'DET'), ('right', 'ADJ'), ('user', 'NOUN'), ('interface', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Also', 'RB'), (',', ','), ('consider', 'VB'), ('the', 'DT'), ('need', 'NN'), ('for', 'IN'), ('AI', 'NN'), ('education', 'NN'), ('and', 'CC'), ('devote', 'VB'), ('time', 'NN'), ('to', 'IN'), ('considering', 'VBG'), ('the', 'DT'), ('right', 'JJ'), ('user', 'NN'), ('interface', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Also', 'also'), (',', ','), ('consider', 'consider'), ('the', 'the'), ('need', 'need'), ('for', 'for'), ('AI', 'ai'), ('education', 'education'), ('and', 'and'), ('devote', 'devote'), ('time', 'time'), ('to', 'to'), ('considering', 'consider'), ('the', 'the'), ('right', 'right'), ('user', 'user'), ('interface', 'interface'), ('.', '.')] 

 Dependency tags are: 
>> [(('Also', 'consider'), 'advmod'), ((',', 'consider'), 'punct'), (('consider', 'root'), 'root'), (('the', 'need'), 'det'), (('need', 'consider'), 'obj'), (('for', 'education'), 'case'), (('AI', 'education'), 'compound'), (('education', 'need'), 'nmod'), (('and', 'devote'), 'cc'), (('devote', 'consider'), 'conj'), (('time', 'devote'), 'obj'), (('to', 'considering'), 'mark'), (('considering', 'devote'), 'advcl'), (('the', 'interface'), 'det'), (('right', 'interface'), 'amod'), (('user', 'interface'), 'compound'), (('interface', 'considering'), 'obj'), (('.', 'consider'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 184 =================================

Recommendation: Use a form of change management to  establish user adoption. IBM’s best practice is to leverage  its digital change approach to involve the users in the  development of the project through studio’s in which we  envision and co-create together. AI is not something  everyone will be able to grasp immediately. Working with  AI should therefore be carefully implemented in the  business environment.  


------------------- Sentence 1 -------------------

 Recommendation: Use a form of change management to  establish user adoption. 

Tokens are: 
>> ['Recommendation', ':', 'Use', 'a', 'form', 'of', 'change', 'management', 'to', 'establish', 'user', 'adoption', '.'] 

 UPOS tags are: 
>> [('Recommendation', 'NOUN'), (':', 'PUNCT'), ('Use', 'VERB'), ('a', 'DET'), ('form', 'NOUN'), ('of', 'ADP'), ('change', 'NOUN'), ('management', 'NOUN'), ('to', 'PART'), ('establish', 'VERB'), ('user', 'NOUN'), ('adoption', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Recommendation', 'NN'), (':', ':'), ('Use', 'VB'), ('a', 'DT'), ('form', 'NN'), ('of', 'IN'), ('change', 'NN'), ('management', 'NN'), ('to', 'TO'), ('establish', 'VB'), ('user', 'NN'), ('adoption', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Recommendation', 'recommendation'), (':', ':'), ('Use', 'use'), ('a', 'a'), ('form', 'form'), ('of', 'of'), ('change', 'change'), ('management', 'management'), ('to', 'to'), ('establish', 'establish'), ('user', 'user'), ('adoption', 'adoption'), ('.', '.')] 

 Dependency tags are: 
>> [(('Recommendation', 'root'), 'root'), ((':', 'Recommendation'), 'punct'), (('Use', 'Recommendation'), 'appos'), (('a', 'form'), 'det'), (('form', 'Use'), 'obj'), (('of', 'management'), 'case'), (('change', 'management'), 'compound'), (('management', 'form'), 'nmod'), (('to', 'establish'), 'mark'), (('establish', 'Use'), 'advcl'), (('user', 'adoption'), 'compound'), (('adoption', 'establish'), 'obj'), (('.', 'Recommendation'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 IBM’s best practice is to leverage  its digital change approach to involve the users in the  development of the project through studio’s in which we  envision and co-create together. 

Tokens are: 
>> ['IBM', '’s', 'best', 'practice', 'is', 'to', 'leverage', 'its', 'digital', 'change', 'approach', 'to', 'involve', 'the', 'users', 'in', 'the', 'development', 'of', 'the', 'project', 'through', 'studio', '’s', 'in', 'which', 'we', 'envision', 'and', 'co-create', 'together', '.'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('’s', 'PART'), ('best', 'ADJ'), ('practice', 'NOUN'), ('is', 'VERB'), ('to', 'PART'), ('leverage', 'VERB'), ('its', 'PRON'), ('digital', 'ADJ'), ('change', 'NOUN'), ('approach', 'NOUN'), ('to', 'PART'), ('involve', 'VERB'), ('the', 'DET'), ('users', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('development', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('project', 'NOUN'), ('through', 'ADP'), ('studio', 'NOUN'), ('’s', 'PART'), ('in', 'ADP'), ('which', 'PRON'), ('we', 'PRON'), ('envision', 'VERB'), ('and', 'CCONJ'), ('co-create', 'VERB'), ('together', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('’s', 'POS'), ('best', 'JJS'), ('practice', 'NN'), ('is', 'VBZ'), ('to', 'TO'), ('leverage', 'VB'), ('its', 'PRP$'), ('digital', 'JJ'), ('change', 'NN'), ('approach', 'NN'), ('to', 'TO'), ('involve', 'VB'), ('the', 'DT'), ('users', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('development', 'NN'), ('of', 'IN'), ('the', 'DT'), ('project', 'NN'), ('through', 'IN'), ('studio', 'NN'), ('’s', 'POS'), ('in', 'IN'), ('which', 'WDT'), ('we', 'PRP'), ('envision', 'VBP'), ('and', 'CC'), ('co-create', 'VBP'), ('together', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('’s', "'s"), ('best', 'good'), ('practice', 'practice'), ('is', 'be'), ('to', 'to'), ('leverage', 'leverage'), ('its', 'its'), ('digital', 'digital'), ('change', 'change'), ('approach', 'approach'), ('to', 'to'), ('involve', 'involve'), ('the', 'the'), ('users', 'user'), ('in', 'in'), ('the', 'the'), ('development', 'development'), ('of', 'of'), ('the', 'the'), ('project', 'project'), ('through', 'through'), ('studio', 'studio'), ('’s', "'s"), ('in', 'in'), ('which', 'which'), ('we', 'we'), ('envision', 'envision'), ('and', 'and'), ('co-create', 'co-create'), ('together', 'together'), ('.', '.')] 

 Dependency tags are: 
>> [(('IBM', 'practice'), 'nmod:poss'), (('’s', 'IBM'), 'case'), (('best', 'practice'), 'amod'), (('practice', 'is'), 'nsubj'), (('is', 'leverage'), 'cop'), (('to', 'leverage'), 'mark'), (('leverage', 'root'), 'root'), (('its', 'approach'), 'nmod:poss'), (('digital', 'change'), 'amod'), (('change', 'approach'), 'compound'), (('approach', 'leverage'), 'obj'), (('to', 'involve'), 'mark'), (('involve', 'leverage'), 'advcl'), (('the', 'users'), 'det'), (('users', 'involve'), 'obj'), (('in', 'development'), 'case'), (('the', 'development'), 'det'), (('development', 'involve'), 'obl'), (('of', 'project'), 'case'), (('the', 'project'), 'det'), (('project', 'development'), 'nmod'), (('through', 'studio'), 'case'), (('studio', 'project'), 'nmod'), (('’s', 'studio'), 'case'), (('in', 'which'), 'case'), (('which', 'envision'), 'obl'), (('we', 'envision'), 'nsubj'), (('envision', 'studio'), 'acl:relcl'), (('and', 'co-create'), 'cc'), (('co-create', 'envision'), 'conj'), (('together', 'co-create'), 'advmod'), (('.', 'leverage'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG')]

------------------- Sentence 3 -------------------

 AI is not something  everyone will be able to grasp immediately. 

Tokens are: 
>> ['AI', 'is', 'not', 'something', 'everyone', 'will', 'be', 'able', 'to', 'grasp', 'immediately', '.'] 

 UPOS tags are: 
>> [('AI', 'PRON'), ('is', 'AUX'), ('not', 'PART'), ('something', 'PRON'), ('everyone', 'PRON'), ('will', 'AUX'), ('be', 'AUX'), ('able', 'ADJ'), ('to', 'PART'), ('grasp', 'VERB'), ('immediately', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('AI', 'PRP'), ('is', 'VBZ'), ('not', 'RB'), ('something', 'NN'), ('everyone', 'NN'), ('will', 'MD'), ('be', 'VB'), ('able', 'JJ'), ('to', 'TO'), ('grasp', 'VB'), ('immediately', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('AI', 'ai'), ('is', 'be'), ('not', 'not'), ('something', 'something'), ('everyone', 'everyone'), ('will', 'will'), ('be', 'be'), ('able', 'able'), ('to', 'to'), ('grasp', 'grasp'), ('immediately', 'immediately'), ('.', '.')] 

 Dependency tags are: 
>> [(('AI', 'something'), 'nsubj'), (('is', 'something'), 'cop'), (('not', 'something'), 'advmod'), (('something', 'root'), 'root'), (('everyone', 'able'), 'nsubj'), (('will', 'able'), 'aux'), (('be', 'able'), 'cop'), (('able', 'something'), 'acl:relcl'), (('to', 'grasp'), 'mark'), (('grasp', 'able'), 'xcomp'), (('immediately', 'grasp'), 'advmod'), (('.', 'something'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Working with  AI should therefore be carefully implemented in the  business environment. 

Tokens are: 
>> ['Working', 'with', 'AI', 'should', 'therefore', 'be', 'carefully', 'implemented', 'in', 'the', 'business', 'environment', '.'] 

 UPOS tags are: 
>> [('Working', 'VERB'), ('with', 'ADP'), ('AI', 'NOUN'), ('should', 'AUX'), ('therefore', 'ADV'), ('be', 'AUX'), ('carefully', 'ADV'), ('implemented', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('business', 'NOUN'), ('environment', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Working', 'VBG'), ('with', 'IN'), ('AI', 'NN'), ('should', 'MD'), ('therefore', 'RB'), ('be', 'VB'), ('carefully', 'RB'), ('implemented', 'VBN'), ('in', 'IN'), ('the', 'DT'), ('business', 'NN'), ('environment', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Working', 'work'), ('with', 'with'), ('AI', 'ai'), ('should', 'should'), ('therefore', 'therefore'), ('be', 'be'), ('carefully', 'carefully'), ('implemented', 'implement'), ('in', 'in'), ('the', 'the'), ('business', 'business'), ('environment', 'environment'), ('.', '.')] 

 Dependency tags are: 
>> [(('Working', 'implemented'), 'csubj:pass'), (('with', 'AI'), 'case'), (('AI', 'Working'), 'obl'), (('should', 'implemented'), 'aux'), (('therefore', 'implemented'), 'advmod'), (('be', 'implemented'), 'aux:pass'), (('carefully', 'implemented'), 'advmod'), (('implemented', 'root'), 'root'), (('in', 'environment'), 'case'), (('the', 'environment'), 'det'), (('business', 'environment'), 'compound'), (('environment', 'implemented'), 'obl'), (('.', 'implemented'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

================================ Paragraph 185 =================================

Expectation management Pitfalls: In many cases we work on, we see that employees  or other stakeholders don’t believe in AI or think it’s a magical  box we take from our office that will quickly solve all the  problems a company. This leads to disappointment when  an AI project is not delivered in a short timeframe or if it  doesn’t deliver the expected results. And this disappointment  can lead to a lack of belief that will eventually diminish  the will to implement AI and experience the benefits of its  long-term possibilities.  


------------------- Sentence 1 -------------------

 Expectation management Pitfalls: 

Tokens are: 
>> ['Expectation', 'management', 'Pitfalls', ':'] 

 UPOS tags are: 
>> [('Expectation', 'NOUN'), ('management', 'NOUN'), ('Pitfalls', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Expectation', 'NN'), ('management', 'NN'), ('Pitfalls', 'NNS'), (':', ':')] 

 Lemmas are: 
>> [('Expectation', 'expectation'), ('management', 'management'), ('Pitfalls', 'pitfall'), (':', ':')] 

 Dependency tags are: 
>> [(('Expectation', 'management'), 'compound'), (('management', 'Pitfalls'), 'compound'), (('Pitfalls', 'root'), 'root'), ((':', 'Pitfalls'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 In many cases we work on, we see that employees  or other stakeholders don’t believe in AI or think it’s a magical  box we take from our office that will quickly solve all the  problems a company. 

Tokens are: 
>> ['In', 'many', 'cases', 'we', 'work', 'on', ',', 'we', 'see', 'that', 'employees', 'or', 'other', 'stakeholders', 'do', 'n’t', 'believe', 'in', 'AI', 'or', 'think', 'it', '’s', 'a', 'magical', 'box', 'we', 'take', 'from', 'our', 'office', 'that', 'will', 'quickly', 'solve', 'all', 'the', 'problems', 'a', 'company', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('many', 'ADJ'), ('cases', 'NOUN'), ('we', 'PRON'), ('work', 'VERB'), ('on', 'ADP'), (',', 'PUNCT'), ('we', 'PRON'), ('see', 'VERB'), ('that', 'SCONJ'), ('employees', 'NOUN'), ('or', 'CCONJ'), ('other', 'ADJ'), ('stakeholders', 'NOUN'), ('do', 'AUX'), ('n’t', 'PART'), ('believe', 'VERB'), ('in', 'ADP'), ('AI', 'NOUN'), ('or', 'CCONJ'), ('think', 'VERB'), ('it', 'PRON'), ('’s', 'AUX'), ('a', 'DET'), ('magical', 'ADJ'), ('box', 'NOUN'), ('we', 'PRON'), ('take', 'VERB'), ('from', 'ADP'), ('our', 'PRON'), ('office', 'NOUN'), ('that', 'PRON'), ('will', 'AUX'), ('quickly', 'ADV'), ('solve', 'VERB'), ('all', 'DET'), ('the', 'DET'), ('problems', 'NOUN'), ('a', 'DET'), ('company', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('many', 'JJ'), ('cases', 'NNS'), ('we', 'PRP'), ('work', 'VBP'), ('on', 'IN'), (',', ','), ('we', 'PRP'), ('see', 'VBP'), ('that', 'IN'), ('employees', 'NNS'), ('or', 'CC'), ('other', 'JJ'), ('stakeholders', 'NNS'), ('do', 'VBP'), ('n’t', 'RB'), ('believe', 'VB'), ('in', 'IN'), ('AI', 'NN'), ('or', 'CC'), ('think', 'VBP'), ('it', 'PRP'), ('’s', 'VBZ'), ('a', 'DT'), ('magical', 'JJ'), ('box', 'NN'), ('we', 'PRP'), ('take', 'VBP'), ('from', 'IN'), ('our', 'PRP$'), ('office', 'NN'), ('that', 'WDT'), ('will', 'MD'), ('quickly', 'RB'), ('solve', 'VB'), ('all', 'PDT'), ('the', 'DT'), ('problems', 'NNS'), ('a', 'DT'), ('company', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('many', 'many'), ('cases', 'case'), ('we', 'we'), ('work', 'work'), ('on', 'on'), (',', ','), ('we', 'we'), ('see', 'see'), ('that', 'that'), ('employees', 'employee'), ('or', 'or'), ('other', 'other'), ('stakeholders', 'stakeholder'), ('do', 'do'), ('n’t', 'not'), ('believe', 'believe'), ('in', 'in'), ('AI', 'ai'), ('or', 'or'), ('think', 'think'), ('it', 'it'), ('’s', 'be'), ('a', 'a'), ('magical', 'magical'), ('box', 'box'), ('we', 'we'), ('take', 'take'), ('from', 'from'), ('our', 'we'), ('office', 'office'), ('that', 'that'), ('will', 'will'), ('quickly', 'quickly'), ('solve', 'solve'), ('all', 'all'), ('the', 'the'), ('problems', 'problem'), ('a', 'a'), ('company', 'company'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'cases'), 'case'), (('many', 'cases'), 'amod'), (('cases', 'see'), 'obl'), (('we', 'work'), 'nsubj'), (('work', 'cases'), 'acl:relcl'), (('on', 'work'), 'obl'), ((',', 'see'), 'punct'), (('we', 'see'), 'nsubj'), (('see', 'root'), 'root'), (('that', 'believe'), 'mark'), (('employees', 'believe'), 'nsubj'), (('or', 'stakeholders'), 'cc'), (('other', 'stakeholders'), 'amod'), (('stakeholders', 'employees'), 'conj'), (('do', 'believe'), 'aux'), (('n’t', 'believe'), 'advmod'), (('believe', 'see'), 'ccomp'), (('in', 'AI'), 'case'), (('AI', 'believe'), 'obl'), (('or', 'think'), 'cc'), (('think', 'see'), 'conj'), (('it', 'box'), 'nsubj'), (('’s', 'box'), 'cop'), (('a', 'box'), 'det'), (('magical', 'box'), 'amod'), (('box', 'think'), 'ccomp'), (('we', 'take'), 'nsubj'), (('take', 'box'), 'acl:relcl'), (('from', 'office'), 'case'), (('our', 'office'), 'nmod:poss'), (('office', 'take'), 'obl'), (('that', 'solve'), 'nsubj'), (('will', 'solve'), 'aux'), (('quickly', 'solve'), 'advmod'), (('solve', 'box'), 'acl:relcl'), (('all', 'problems'), 'det:predet'), (('the', 'problems'), 'det'), (('problems', 'solve'), 'obj'), (('a', 'company'), 'det'), (('company', 'solve'), 'obj'), (('.', 'see'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 3 -------------------

 This leads to disappointment when  an AI project is not delivered in a short timeframe or if it  doesn’t deliver the expected results. 

Tokens are: 
>> ['This', 'leads', 'to', 'disappointment', 'when', 'an', 'AI', 'project', 'is', 'not', 'delivered', 'in', 'a', 'short', 'timeframe', 'or', 'if', 'it', 'does', 'n’t', 'deliver', 'the', 'expected', 'results', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('leads', 'VERB'), ('to', 'ADP'), ('disappointment', 'NOUN'), ('when', 'SCONJ'), ('an', 'DET'), ('AI', 'NOUN'), ('project', 'NOUN'), ('is', 'AUX'), ('not', 'PART'), ('delivered', 'VERB'), ('in', 'ADP'), ('a', 'DET'), ('short', 'ADJ'), ('timeframe', 'NOUN'), ('or', 'CCONJ'), ('if', 'SCONJ'), ('it', 'PRON'), ('does', 'AUX'), ('n’t', 'PART'), ('deliver', 'VERB'), ('the', 'DET'), ('expected', 'VERB'), ('results', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('leads', 'VBZ'), ('to', 'IN'), ('disappointment', 'NN'), ('when', 'WRB'), ('an', 'DT'), ('AI', 'NN'), ('project', 'NN'), ('is', 'VBZ'), ('not', 'RB'), ('delivered', 'VBN'), ('in', 'IN'), ('a', 'DT'), ('short', 'JJ'), ('timeframe', 'NN'), ('or', 'CC'), ('if', 'IN'), ('it', 'PRP'), ('does', 'VBZ'), ('n’t', 'RB'), ('deliver', 'VB'), ('the', 'DT'), ('expected', 'VBN'), ('results', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('leads', 'lead'), ('to', 'to'), ('disappointment', 'disappointment'), ('when', 'when'), ('an', 'a'), ('AI', 'ai'), ('project', 'project'), ('is', 'be'), ('not', 'not'), ('delivered', 'deliver'), ('in', 'in'), ('a', 'a'), ('short', 'short'), ('timeframe', 'timeframe'), ('or', 'or'), ('if', 'if'), ('it', 'it'), ('does', 'do'), ('n’t', 'not'), ('deliver', 'deliver'), ('the', 'the'), ('expected', 'expect'), ('results', 'result'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'leads'), 'nsubj'), (('leads', 'root'), 'root'), (('to', 'disappointment'), 'case'), (('disappointment', 'leads'), 'obl'), (('when', 'delivered'), 'mark'), (('an', 'project'), 'det'), (('AI', 'project'), 'compound'), (('project', 'delivered'), 'nsubj:pass'), (('is', 'delivered'), 'aux:pass'), (('not', 'delivered'), 'advmod'), (('delivered', 'leads'), 'advcl'), (('in', 'timeframe'), 'case'), (('a', 'timeframe'), 'det'), (('short', 'timeframe'), 'amod'), (('timeframe', 'delivered'), 'obl'), (('or', 'deliver'), 'cc'), (('if', 'deliver'), 'mark'), (('it', 'deliver'), 'nsubj'), (('does', 'deliver'), 'aux'), (('n’t', 'deliver'), 'advmod'), (('deliver', 'delivered'), 'conj'), (('the', 'results'), 'det'), (('expected', 'results'), 'amod'), (('results', 'deliver'), 'obj'), (('.', 'leads'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 And this disappointment  can lead to a lack of belief that will eventually diminish  the will to implement AI and experience the benefits of its  long-term possibilities. 

Tokens are: 
>> ['And', 'this', 'disappointment', 'can', 'lead', 'to', 'a', 'lack', 'of', 'belief', 'that', 'will', 'eventually', 'diminish', 'the', 'will', 'to', 'implement', 'AI', 'and', 'experience', 'the', 'benefits', 'of', 'its', 'long', '-', 'term', 'possibilities', '.'] 

 UPOS tags are: 
>> [('And', 'CCONJ'), ('this', 'DET'), ('disappointment', 'NOUN'), ('can', 'AUX'), ('lead', 'VERB'), ('to', 'ADP'), ('a', 'DET'), ('lack', 'NOUN'), ('of', 'ADP'), ('belief', 'NOUN'), ('that', 'PRON'), ('will', 'AUX'), ('eventually', 'ADV'), ('diminish', 'VERB'), ('the', 'DET'), ('will', 'NOUN'), ('to', 'PART'), ('implement', 'VERB'), ('AI', 'ADP'), ('and', 'CCONJ'), ('experience', 'VERB'), ('the', 'DET'), ('benefits', 'NOUN'), ('of', 'ADP'), ('its', 'PRON'), ('long', 'ADJ'), ('-', 'PUNCT'), ('term', 'NOUN'), ('possibilities', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('And', 'CC'), ('this', 'DT'), ('disappointment', 'NN'), ('can', 'MD'), ('lead', 'VB'), ('to', 'IN'), ('a', 'DT'), ('lack', 'NN'), ('of', 'IN'), ('belief', 'NN'), ('that', 'WDT'), ('will', 'MD'), ('eventually', 'RB'), ('diminish', 'VB'), ('the', 'DT'), ('will', 'NN'), ('to', 'TO'), ('implement', 'VB'), ('AI', 'RP'), ('and', 'CC'), ('experience', 'VB'), ('the', 'DT'), ('benefits', 'NNS'), ('of', 'IN'), ('its', 'PRP$'), ('long', 'JJ'), ('-', 'HYPH'), ('term', 'NN'), ('possibilities', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('And', 'and'), ('this', 'this'), ('disappointment', 'disappointment'), ('can', 'can'), ('lead', 'lead'), ('to', 'to'), ('a', 'a'), ('lack', 'lack'), ('of', 'of'), ('belief', 'belief'), ('that', 'that'), ('will', 'will'), ('eventually', 'eventually'), ('diminish', 'diminish'), ('the', 'the'), ('will', 'will'), ('to', 'to'), ('implement', 'implement'), ('AI', 'ai'), ('and', 'and'), ('experience', 'experience'), ('the', 'the'), ('benefits', 'benefit'), ('of', 'of'), ('its', 'its'), ('long', 'long'), ('-', '-'), ('term', 'term'), ('possibilities', 'possibility'), ('.', '.')] 

 Dependency tags are: 
>> [(('And', 'lead'), 'cc'), (('this', 'disappointment'), 'det'), (('disappointment', 'lead'), 'nsubj'), (('can', 'lead'), 'aux'), (('lead', 'root'), 'root'), (('to', 'lack'), 'case'), (('a', 'lack'), 'det'), (('lack', 'lead'), 'obl'), (('of', 'belief'), 'case'), (('belief', 'lack'), 'nmod'), (('that', 'diminish'), 'nsubj'), (('will', 'diminish'), 'aux'), (('eventually', 'diminish'), 'advmod'), (('diminish', 'belief'), 'acl:relcl'), (('the', 'will'), 'det'), (('will', 'diminish'), 'obj'), (('to', 'implement'), 'mark'), (('implement', 'will'), 'acl'), (('AI', 'implement'), 'compound:prt'), (('and', 'experience'), 'cc'), (('experience', 'implement'), 'conj'), (('the', 'benefits'), 'det'), (('benefits', 'experience'), 'obj'), (('of', 'possibilities'), 'case'), (('its', 'possibilities'), 'nmod:poss'), (('long', 'term'), 'amod'), (('-', 'term'), 'punct'), (('term', 'possibilities'), 'compound'), (('possibilities', 'benefits'), 'nmod'), (('.', 'lead'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

================================ Paragraph 186 =================================

Recommendation: Start with developing a solid strategy  and roadmap. Define where you need to go and what you  need to add to the organization to get there. First steps  often include mundane items such as data governance and  warehousing, but you need to take these steps to properly  implement AI. It’s therefore important to implement proper  change management to guide the company.  


------------------- Sentence 1 -------------------

 Recommendation: Start with developing a solid strategy  and roadmap. 

Tokens are: 
>> ['Recommendation', ':', 'Start', 'with', 'developing', 'a', 'solid', 'strategy', 'and', 'roadmap', '.'] 

 UPOS tags are: 
>> [('Recommendation', 'NOUN'), (':', 'PUNCT'), ('Start', 'VERB'), ('with', 'SCONJ'), ('developing', 'VERB'), ('a', 'DET'), ('solid', 'ADJ'), ('strategy', 'NOUN'), ('and', 'CCONJ'), ('roadmap', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Recommendation', 'NN'), (':', ':'), ('Start', 'VB'), ('with', 'IN'), ('developing', 'VBG'), ('a', 'DT'), ('solid', 'JJ'), ('strategy', 'NN'), ('and', 'CC'), ('roadmap', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Recommendation', 'recommendation'), (':', ':'), ('Start', 'start'), ('with', 'with'), ('developing', 'develop'), ('a', 'a'), ('solid', 'solid'), ('strategy', 'strategy'), ('and', 'and'), ('roadmap', 'roadmap'), ('.', '.')] 

 Dependency tags are: 
>> [(('Recommendation', 'root'), 'root'), ((':', 'Recommendation'), 'punct'), (('Start', 'Recommendation'), 'appos'), (('with', 'developing'), 'mark'), (('developing', 'Start'), 'advcl'), (('a', 'strategy'), 'det'), (('solid', 'strategy'), 'amod'), (('strategy', 'developing'), 'obj'), (('and', 'roadmap'), 'cc'), (('roadmap', 'strategy'), 'conj'), (('.', 'Recommendation'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Define where you need to go and what you  need to add to the organization to get there. 

Tokens are: 
>> ['Define', 'where', 'you', 'need', 'to', 'go', 'and', 'what', 'you', 'need', 'to', 'add', 'to', 'the', 'organization', 'to', 'get', 'there', '.'] 

 UPOS tags are: 
>> [('Define', 'VERB'), ('where', 'SCONJ'), ('you', 'PRON'), ('need', 'VERB'), ('to', 'PART'), ('go', 'VERB'), ('and', 'CCONJ'), ('what', 'PRON'), ('you', 'PRON'), ('need', 'VERB'), ('to', 'PART'), ('add', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('organization', 'NOUN'), ('to', 'PART'), ('get', 'VERB'), ('there', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Define', 'VB'), ('where', 'WRB'), ('you', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('go', 'VB'), ('and', 'CC'), ('what', 'WP'), ('you', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('add', 'VB'), ('to', 'IN'), ('the', 'DT'), ('organization', 'NN'), ('to', 'TO'), ('get', 'VB'), ('there', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('Define', 'define'), ('where', 'where'), ('you', 'you'), ('need', 'need'), ('to', 'to'), ('go', 'go'), ('and', 'and'), ('what', 'what'), ('you', 'you'), ('need', 'need'), ('to', 'to'), ('add', 'add'), ('to', 'to'), ('the', 'the'), ('organization', 'organization'), ('to', 'to'), ('get', 'get'), ('there', 'there'), ('.', '.')] 

 Dependency tags are: 
>> [(('Define', 'root'), 'root'), (('where', 'need'), 'mark'), (('you', 'need'), 'nsubj'), (('need', 'Define'), 'ccomp'), (('to', 'go'), 'mark'), (('go', 'need'), 'xcomp'), (('and', 'need'), 'cc'), (('what', 'go'), 'obj'), (('you', 'need'), 'nsubj'), (('need', 'what'), 'acl:relcl'), (('to', 'add'), 'mark'), (('add', 'need'), 'xcomp'), (('to', 'organization'), 'case'), (('the', 'organization'), 'det'), (('organization', 'add'), 'obl'), (('to', 'get'), 'mark'), (('get', 'add'), 'advcl'), (('there', 'get'), 'advmod'), (('.', 'Define'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 First steps  often include mundane items such as data governance and  warehousing, but you need to take these steps to properly  implement AI. 

Tokens are: 
>> ['First', 'steps', 'often', 'include', 'mundane', 'items', 'such', 'as', 'data', 'governance', 'and', 'warehousing', ',', 'but', 'you', 'need', 'to', 'take', 'these', 'steps', 'to', 'properly', 'implement', 'AI', '.'] 

 UPOS tags are: 
>> [('First', 'ADJ'), ('steps', 'NOUN'), ('often', 'ADV'), ('include', 'VERB'), ('mundane', 'ADJ'), ('items', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('data', 'NOUN'), ('governance', 'NOUN'), ('and', 'CCONJ'), ('warehousing', 'NOUN'), (',', 'PUNCT'), ('but', 'CCONJ'), ('you', 'PRON'), ('need', 'VERB'), ('to', 'PART'), ('take', 'VERB'), ('these', 'DET'), ('steps', 'NOUN'), ('to', 'PART'), ('properly', 'ADV'), ('implement', 'VERB'), ('AI', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('First', 'JJ'), ('steps', 'NNS'), ('often', 'RB'), ('include', 'VBP'), ('mundane', 'JJ'), ('items', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('data', 'NN'), ('governance', 'NN'), ('and', 'CC'), ('warehousing', 'NN'), (',', ','), ('but', 'CC'), ('you', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('take', 'VB'), ('these', 'DT'), ('steps', 'NNS'), ('to', 'TO'), ('properly', 'RB'), ('implement', 'VB'), ('AI', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('First', 'first'), ('steps', 'step'), ('often', 'often'), ('include', 'include'), ('mundane', 'mundane'), ('items', 'item'), ('such', 'such'), ('as', 'as'), ('data', 'datum'), ('governance', 'governance'), ('and', 'and'), ('warehousing', 'warehousing'), (',', ','), ('but', 'but'), ('you', 'you'), ('need', 'need'), ('to', 'to'), ('take', 'take'), ('these', 'this'), ('steps', 'step'), ('to', 'to'), ('properly', 'properly'), ('implement', 'implement'), ('AI', 'ai'), ('.', '.')] 

 Dependency tags are: 
>> [(('First', 'steps'), 'amod'), (('steps', 'include'), 'nsubj'), (('often', 'include'), 'advmod'), (('include', 'root'), 'root'), (('mundane', 'items'), 'amod'), (('items', 'include'), 'obj'), (('such', 'governance'), 'case'), (('as', 'such'), 'fixed'), (('data', 'governance'), 'compound'), (('governance', 'items'), 'nmod'), (('and', 'warehousing'), 'cc'), (('warehousing', 'governance'), 'conj'), ((',', 'need'), 'punct'), (('but', 'need'), 'cc'), (('you', 'need'), 'nsubj'), (('need', 'include'), 'conj'), (('to', 'take'), 'mark'), (('take', 'need'), 'xcomp'), (('these', 'steps'), 'det'), (('steps', 'take'), 'obj'), (('to', 'implement'), 'mark'), (('properly', 'implement'), 'advmod'), (('implement', 'take'), 'advcl'), (('AI', 'implement'), 'obj'), (('.', 'include'), 'punct')]

 Named Entites are: 
>> [('First', 'ORDINAL')]

------------------- Sentence 4 -------------------

 It’s therefore important to implement proper  change management to guide the company. 

Tokens are: 
>> ['It', '’s', 'therefore', 'important', 'to', 'implement', 'proper', 'change', 'management', 'to', 'guide', 'the', 'company', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('’s', 'AUX'), ('therefore', 'ADV'), ('important', 'ADJ'), ('to', 'PART'), ('implement', 'VERB'), ('proper', 'ADJ'), ('change', 'NOUN'), ('management', 'NOUN'), ('to', 'PART'), ('guide', 'VERB'), ('the', 'DET'), ('company', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('’s', 'VBZ'), ('therefore', 'RB'), ('important', 'JJ'), ('to', 'TO'), ('implement', 'VB'), ('proper', 'JJ'), ('change', 'NN'), ('management', 'NN'), ('to', 'TO'), ('guide', 'VB'), ('the', 'DT'), ('company', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('’s', 'be'), ('therefore', 'therefore'), ('important', 'important'), ('to', 'to'), ('implement', 'implement'), ('proper', 'proper'), ('change', 'change'), ('management', 'management'), ('to', 'to'), ('guide', 'guide'), ('the', 'the'), ('company', 'company'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'important'), 'expl'), (('’s', 'important'), 'cop'), (('therefore', 'important'), 'advmod'), (('important', 'root'), 'root'), (('to', 'implement'), 'mark'), (('implement', 'important'), 'csubj'), (('proper', 'management'), 'amod'), (('change', 'management'), 'compound'), (('management', 'implement'), 'obj'), (('to', 'guide'), 'mark'), (('guide', 'implement'), 'advcl'), (('the', 'company'), 'det'), (('company', 'guide'), 'obj'), (('.', 'important'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 187 =================================

12     Beyond the hype: A guide to understanding and successfully implementing artificial intelligence within your business 


------------------- Sentence 1 -------------------

 12     Beyond the hype: A guide to understanding and successfully implementing artificial intelligence within your business 

Tokens are: 
>> ['12', 'Beyond', 'the', 'hype', ':', 'A', 'guide', 'to', 'understanding', 'and', 'successfully', 'implementing', 'artificial', 'intelligence', 'within', 'your', 'business'] 

 UPOS tags are: 
>> [('12', 'NUM'), ('Beyond', 'ADP'), ('the', 'DET'), ('hype', 'NOUN'), (':', 'PUNCT'), ('A', 'DET'), ('guide', 'NOUN'), ('to', 'ADP'), ('understanding', 'VERB'), ('and', 'CCONJ'), ('successfully', 'ADV'), ('implementing', 'VERB'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('within', 'ADP'), ('your', 'PRON'), ('business', 'NOUN')] 

 XPOS tags are: 
>> [('12', 'LS'), ('Beyond', 'IN'), ('the', 'DT'), ('hype', 'NN'), (':', ':'), ('A', 'DT'), ('guide', 'NN'), ('to', 'IN'), ('understanding', 'VBG'), ('and', 'CC'), ('successfully', 'RB'), ('implementing', 'VBG'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('within', 'IN'), ('your', 'PRP$'), ('business', 'NN')] 

 Lemmas are: 
>> [('12', '12'), ('Beyond', 'beyond'), ('the', 'the'), ('hype', 'hype'), (':', ':'), ('A', 'a'), ('guide', 'guide'), ('to', 'to'), ('understanding', 'understand'), ('and', 'and'), ('successfully', 'successfully'), ('implementing', 'implement'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('within', 'within'), ('your', 'you'), ('business', 'business')] 

 Dependency tags are: 
>> [(('12', 'hype'), 'nummod'), (('Beyond', 'hype'), 'case'), (('the', 'hype'), 'det'), (('hype', 'root'), 'root'), ((':', 'guide'), 'punct'), (('A', 'guide'), 'det'), (('guide', 'hype'), 'appos'), (('to', 'understanding'), 'mark'), (('understanding', 'guide'), 'acl'), (('and', 'implementing'), 'cc'), (('successfully', 'implementing'), 'advmod'), (('implementing', 'understanding'), 'conj'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'implementing'), 'obj'), (('within', 'business'), 'case'), (('your', 'business'), 'nmod:poss'), (('business', 'implementing'), 'obl')]

 Named Entites are: 
>> []

================================ Paragraph 188 =================================

Bad data Pitfalls: One problem we often come across is bad-quality  data. This problem derails, limits and complicates many  machine learning and AI projects. Bad or “dirty”data can  mean fields are missing, that there are duplicates in the  data, or that it’s outdated data, contains spelling or  punctuation errors and is generally incorrect. As we are  moving toward more data-driven decision making in  enterprises, it’s absolutely essential to have clean data.  Outcomes derived from bad data will lead to incorrect  decision making.   


------------------- Sentence 1 -------------------

 Bad data Pitfalls: 

Tokens are: 
>> ['Bad', 'data', 'Pitfalls', ':'] 

 UPOS tags are: 
>> [('Bad', 'ADJ'), ('data', 'NOUN'), ('Pitfalls', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Bad', 'JJ'), ('data', 'NN'), ('Pitfalls', 'NNS'), (':', ':')] 

 Lemmas are: 
>> [('Bad', 'bad'), ('data', 'datum'), ('Pitfalls', 'pitfall'), (':', ':')] 

 Dependency tags are: 
>> [(('Bad', 'Pitfalls'), 'amod'), (('data', 'Pitfalls'), 'compound'), (('Pitfalls', 'root'), 'root'), ((':', 'Pitfalls'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 One problem we often come across is bad-quality  data. 

Tokens are: 
>> ['One', 'problem', 'we', 'often', 'come', 'across', 'is', 'bad', '-', 'quality', 'data', '.'] 

 UPOS tags are: 
>> [('One', 'NUM'), ('problem', 'NOUN'), ('we', 'PRON'), ('often', 'ADV'), ('come', 'VERB'), ('across', 'ADP'), ('is', 'AUX'), ('bad', 'ADJ'), ('-', 'PUNCT'), ('quality', 'ADJ'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('One', 'CD'), ('problem', 'NN'), ('we', 'PRP'), ('often', 'RB'), ('come', 'VBP'), ('across', 'IN'), ('is', 'VBZ'), ('bad', 'JJ'), ('-', 'HYPH'), ('quality', 'JJ'), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('One', 'one'), ('problem', 'problem'), ('we', 'we'), ('often', 'often'), ('come', 'come'), ('across', 'across'), ('is', 'be'), ('bad', 'bad'), ('-', '-'), ('quality', 'quality'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('One', 'problem'), 'nummod'), (('problem', 'data'), 'nsubj'), (('we', 'come'), 'nsubj'), (('often', 'come'), 'advmod'), (('come', 'problem'), 'acl:relcl'), (('across', 'come'), 'obl'), (('is', 'data'), 'cop'), (('bad', 'quality'), 'amod'), (('-', 'quality'), 'punct'), (('quality', 'data'), 'amod'), (('data', 'root'), 'root'), (('.', 'data'), 'punct')]

 Named Entites are: 
>> [('One', 'CARDINAL')]

------------------- Sentence 3 -------------------

 This problem derails, limits and complicates many  machine learning and AI projects. 

Tokens are: 
>> ['This', 'problem', 'derails', ',', 'limits', 'and', 'complicates', 'many', 'machine', 'learning', 'and', 'AI', 'projects', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('problem', 'NOUN'), ('derails', 'VERB'), (',', 'PUNCT'), ('limits', 'NOUN'), ('and', 'CCONJ'), ('complicates', 'VERB'), ('many', 'ADJ'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('and', 'CCONJ'), ('AI', 'NOUN'), ('projects', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('problem', 'NN'), ('derails', 'VBZ'), (',', ','), ('limits', 'NNS'), ('and', 'CC'), ('complicates', 'VBZ'), ('many', 'JJ'), ('machine', 'NN'), ('learning', 'NN'), ('and', 'CC'), ('AI', 'NN'), ('projects', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('problem', 'problem'), ('derails', 'derail'), (',', ','), ('limits', 'limit'), ('and', 'and'), ('complicates', 'complicate'), ('many', 'many'), ('machine', 'machine'), ('learning', 'learning'), ('and', 'and'), ('AI', 'ai'), ('projects', 'project'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'problem'), 'det'), (('problem', 'derails'), 'nsubj'), (('derails', 'root'), 'root'), ((',', 'limits'), 'punct'), (('limits', 'derails'), 'obj'), (('and', 'complicates'), 'cc'), (('complicates', 'derails'), 'conj'), (('many', 'projects'), 'amod'), (('machine', 'projects'), 'compound'), (('learning', 'projects'), 'compound'), (('and', 'AI'), 'cc'), (('AI', 'learning'), 'conj'), (('projects', 'complicates'), 'obj'), (('.', 'derails'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Bad or “dirty”data can  mean fields are missing, that there are duplicates in the  data, or that it’s outdated data, contains spelling or  punctuation errors and is generally incorrect. 

Tokens are: 
>> ['Bad', 'or', '“', 'dirty', '”', 'data', 'can', 'mean', 'fields', 'are', 'missing', ',', 'that', 'there', 'are', 'duplicates', 'in', 'the', 'data', ',', 'or', 'that', 'it', '’s', 'outdated', 'data', ',', 'contains', 'spelling', 'or', 'punctuation', 'errors', 'and', 'is', 'generally', 'incorrect', '.'] 

 UPOS tags are: 
>> [('Bad', 'ADJ'), ('or', 'CCONJ'), ('“', 'PUNCT'), ('dirty', 'ADJ'), ('”', 'PUNCT'), ('data', 'NOUN'), ('can', 'AUX'), ('mean', 'VERB'), ('fields', 'NOUN'), ('are', 'AUX'), ('missing', 'VERB'), (',', 'PUNCT'), ('that', 'SCONJ'), ('there', 'PRON'), ('are', 'VERB'), ('duplicates', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('data', 'NOUN'), (',', 'PUNCT'), ('or', 'CCONJ'), ('that', 'SCONJ'), ('it', 'PRON'), ('’s', 'AUX'), ('outdated', 'ADJ'), ('data', 'NOUN'), (',', 'PUNCT'), ('contains', 'VERB'), ('spelling', 'NOUN'), ('or', 'CCONJ'), ('punctuation', 'NOUN'), ('errors', 'NOUN'), ('and', 'CCONJ'), ('is', 'AUX'), ('generally', 'ADV'), ('incorrect', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Bad', 'JJ'), ('or', 'CC'), ('“', '``'), ('dirty', 'JJ'), ('”', "''"), ('data', 'NNS'), ('can', 'MD'), ('mean', 'VB'), ('fields', 'NNS'), ('are', 'VBP'), ('missing', 'VBG'), (',', ','), ('that', 'IN'), ('there', 'EX'), ('are', 'VBP'), ('duplicates', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('data', 'NNS'), (',', ','), ('or', 'CC'), ('that', 'IN'), ('it', 'PRP'), ('’s', 'VBZ'), ('outdated', 'JJ'), ('data', 'NN'), (',', ','), ('contains', 'VBZ'), ('spelling', 'NN'), ('or', 'CC'), ('punctuation', 'NN'), ('errors', 'NNS'), ('and', 'CC'), ('is', 'VBZ'), ('generally', 'RB'), ('incorrect', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('Bad', 'bad'), ('or', 'or'), ('“', "''"), ('dirty', 'dirty'), ('”', "''"), ('data', 'datum'), ('can', 'can'), ('mean', 'mean'), ('fields', 'field'), ('are', 'be'), ('missing', 'miss'), (',', ','), ('that', 'that'), ('there', 'there'), ('are', 'be'), ('duplicates', 'duplicate'), ('in', 'in'), ('the', 'the'), ('data', 'datum'), (',', ','), ('or', 'or'), ('that', 'that'), ('it', 'it'), ('’s', 'be'), ('outdated', 'outdated'), ('data', 'datum'), (',', ','), ('contains', 'contain'), ('spelling', 'spelling'), ('or', 'or'), ('punctuation', 'punctuation'), ('errors', 'error'), ('and', 'and'), ('is', 'be'), ('generally', 'generally'), ('incorrect', 'incorrect'), ('.', '.')] 

 Dependency tags are: 
>> [(('Bad', 'data'), 'amod'), (('or', 'dirty'), 'cc'), (('“', 'dirty'), 'punct'), (('dirty', 'data'), 'amod'), (('”', 'dirty'), 'punct'), (('data', 'mean'), 'nsubj'), (('can', 'mean'), 'aux'), (('mean', 'root'), 'root'), (('fields', 'missing'), 'nsubj'), (('are', 'missing'), 'aux'), (('missing', 'mean'), 'ccomp'), ((',', 'are'), 'punct'), (('that', 'are'), 'mark'), (('there', 'are'), 'expl'), (('are', 'mean'), 'ccomp'), (('duplicates', 'are'), 'nsubj'), (('in', 'data'), 'case'), (('the', 'data'), 'det'), (('data', 'duplicates'), 'nmod'), ((',', 'data'), 'punct'), (('or', 'data'), 'cc'), (('that', 'data'), 'mark'), (('it', 'data'), 'nsubj'), (('’s', 'data'), 'cop'), (('outdated', 'data'), 'amod'), (('data', 'are'), 'conj'), ((',', 'contains'), 'punct'), (('contains', 'are'), 'parataxis'), (('spelling', 'contains'), 'obj'), (('or', 'errors'), 'cc'), (('punctuation', 'errors'), 'compound'), (('errors', 'spelling'), 'conj'), (('and', 'incorrect'), 'cc'), (('is', 'incorrect'), 'cop'), (('generally', 'incorrect'), 'advmod'), (('incorrect', 'contains'), 'conj'), (('.', 'mean'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 As we are  moving toward more data-driven decision making in  enterprises, it’s absolutely essential to have clean data. 

Tokens are: 
>> ['As', 'we', 'are', 'moving', 'toward', 'more', 'data-driven', 'decision', 'making', 'in', 'enterprises', ',', 'it', '’s', 'absolutely', 'essential', 'to', 'have', 'clean', 'data', '.'] 

 UPOS tags are: 
>> [('As', 'SCONJ'), ('we', 'PRON'), ('are', 'AUX'), ('moving', 'VERB'), ('toward', 'ADP'), ('more', 'ADV'), ('data-driven', 'ADJ'), ('decision', 'NOUN'), ('making', 'VERB'), ('in', 'ADP'), ('enterprises', 'NOUN'), (',', 'PUNCT'), ('it', 'PRON'), ('’s', 'AUX'), ('absolutely', 'ADV'), ('essential', 'ADJ'), ('to', 'PART'), ('have', 'VERB'), ('clean', 'ADJ'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('As', 'IN'), ('we', 'PRP'), ('are', 'VBP'), ('moving', 'VBG'), ('toward', 'IN'), ('more', 'RBR'), ('data-driven', 'JJ'), ('decision', 'NN'), ('making', 'VBG'), ('in', 'IN'), ('enterprises', 'NNS'), (',', ','), ('it', 'PRP'), ('’s', 'VBZ'), ('absolutely', 'RB'), ('essential', 'JJ'), ('to', 'TO'), ('have', 'VB'), ('clean', 'JJ'), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('As', 'as'), ('we', 'we'), ('are', 'be'), ('moving', 'move'), ('toward', 'toward'), ('more', 'more'), ('data-driven', 'data-driven'), ('decision', 'decision'), ('making', 'make'), ('in', 'in'), ('enterprises', 'enterprise'), (',', ','), ('it', 'it'), ('’s', 'be'), ('absolutely', 'absolutely'), ('essential', 'essential'), ('to', 'to'), ('have', 'have'), ('clean', 'clean'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('As', 'moving'), 'mark'), (('we', 'moving'), 'nsubj'), (('are', 'moving'), 'aux'), (('moving', 'essential'), 'advcl'), (('toward', 'decision'), 'case'), (('more', 'data-driven'), 'advmod'), (('data-driven', 'decision'), 'amod'), (('decision', 'moving'), 'obl'), (('making', 'decision'), 'acl'), (('in', 'enterprises'), 'case'), (('enterprises', 'making'), 'obl'), ((',', 'essential'), 'punct'), (('it', 'essential'), 'expl'), (('’s', 'essential'), 'cop'), (('absolutely', 'essential'), 'advmod'), (('essential', 'root'), 'root'), (('to', 'have'), 'mark'), (('have', 'essential'), 'csubj'), (('clean', 'data'), 'amod'), (('data', 'have'), 'obj'), (('.', 'essential'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 Outcomes derived from bad data will lead to incorrect  decision making. 

Tokens are: 
>> ['Outcomes', 'derived', 'from', 'bad', 'data', 'will', 'lead', 'to', 'incorrect', 'decision', 'making', '.'] 

 UPOS tags are: 
>> [('Outcomes', 'NOUN'), ('derived', 'VERB'), ('from', 'ADP'), ('bad', 'ADJ'), ('data', 'NOUN'), ('will', 'AUX'), ('lead', 'VERB'), ('to', 'ADP'), ('incorrect', 'ADJ'), ('decision', 'NOUN'), ('making', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Outcomes', 'NNS'), ('derived', 'VBN'), ('from', 'IN'), ('bad', 'JJ'), ('data', 'NNS'), ('will', 'MD'), ('lead', 'VB'), ('to', 'IN'), ('incorrect', 'JJ'), ('decision', 'NN'), ('making', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Outcomes', 'outcome'), ('derived', 'derive'), ('from', 'from'), ('bad', 'bad'), ('data', 'datum'), ('will', 'will'), ('lead', 'lead'), ('to', 'to'), ('incorrect', 'incorrect'), ('decision', 'decision'), ('making', 'making'), ('.', '.')] 

 Dependency tags are: 
>> [(('Outcomes', 'lead'), 'nsubj'), (('derived', 'Outcomes'), 'acl'), (('from', 'data'), 'case'), (('bad', 'data'), 'amod'), (('data', 'derived'), 'obl'), (('will', 'lead'), 'aux'), (('lead', 'root'), 'root'), (('to', 'making'), 'case'), (('incorrect', 'making'), 'amod'), (('decision', 'making'), 'compound'), (('making', 'lead'), 'obl'), (('.', 'lead'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 189 =================================

Recommendation: To overcome incorrect decision making  based on bad data we suggest the enterprise incorporate  standardization of data, monitoring of data, cleaning of  incoming data and a centralized control of data.  


------------------- Sentence 1 -------------------

 Recommendation: 

Tokens are: 
>> ['Recommendation', ':'] 

 UPOS tags are: 
>> [('Recommendation', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Recommendation', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('Recommendation', 'recommendation'), (':', ':')] 

 Dependency tags are: 
>> [(('Recommendation', 'root'), 'root'), ((':', 'Recommendation'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 To overcome incorrect decision making  based on bad data we suggest the enterprise incorporate  standardization of data, monitoring of data, cleaning of  incoming data and a centralized control of data. 

Tokens are: 
>> ['To', 'overcome', 'incorrect', 'decision', 'making', 'based', 'on', 'bad', 'data', 'we', 'suggest', 'the', 'enterprise', 'incorporate', 'standardization', 'of', 'data', ',', 'monitoring', 'of', 'data', ',', 'cleaning', 'of', 'incoming', 'data', 'and', 'a', 'centralized', 'control', 'of', 'data', '.'] 

 UPOS tags are: 
>> [('To', 'PART'), ('overcome', 'VERB'), ('incorrect', 'ADJ'), ('decision', 'NOUN'), ('making', 'VERB'), ('based', 'VERB'), ('on', 'ADP'), ('bad', 'ADJ'), ('data', 'NOUN'), ('we', 'PRON'), ('suggest', 'VERB'), ('the', 'DET'), ('enterprise', 'NOUN'), ('incorporate', 'VERB'), ('standardization', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), (',', 'PUNCT'), ('monitoring', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), (',', 'PUNCT'), ('cleaning', 'NOUN'), ('of', 'ADP'), ('incoming', 'ADJ'), ('data', 'NOUN'), ('and', 'CCONJ'), ('a', 'DET'), ('centralized', 'VERB'), ('control', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('To', 'TO'), ('overcome', 'VB'), ('incorrect', 'JJ'), ('decision', 'NN'), ('making', 'VBG'), ('based', 'VBN'), ('on', 'IN'), ('bad', 'JJ'), ('data', 'NNS'), ('we', 'PRP'), ('suggest', 'VBP'), ('the', 'DT'), ('enterprise', 'NN'), ('incorporate', 'VB'), ('standardization', 'NN'), ('of', 'IN'), ('data', 'NNS'), (',', ','), ('monitoring', 'NN'), ('of', 'IN'), ('data', 'NNS'), (',', ','), ('cleaning', 'NN'), ('of', 'IN'), ('incoming', 'JJ'), ('data', 'NNS'), ('and', 'CC'), ('a', 'DT'), ('centralized', 'VBN'), ('control', 'NN'), ('of', 'IN'), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('To', 'to'), ('overcome', 'overcome'), ('incorrect', 'incorrect'), ('decision', 'decision'), ('making', 'make'), ('based', 'base'), ('on', 'on'), ('bad', 'bad'), ('data', 'datum'), ('we', 'we'), ('suggest', 'suggest'), ('the', 'the'), ('enterprise', 'enterprise'), ('incorporate', 'incorporate'), ('standardization', 'standardization'), ('of', 'of'), ('data', 'datum'), (',', ','), ('monitoring', 'monitoring'), ('of', 'of'), ('data', 'datum'), (',', ','), ('cleaning', 'cleaning'), ('of', 'of'), ('incoming', 'incoming'), ('data', 'datum'), ('and', 'and'), ('a', 'a'), ('centralized', 'centralize'), ('control', 'control'), ('of', 'of'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('To', 'overcome'), 'mark'), (('overcome', 'suggest'), 'advcl'), (('incorrect', 'decision'), 'amod'), (('decision', 'overcome'), 'obj'), (('making', 'decision'), 'acl'), (('based', 'making'), 'xcomp'), (('on', 'data'), 'case'), (('bad', 'data'), 'amod'), (('data', 'based'), 'obl'), (('we', 'suggest'), 'nsubj'), (('suggest', 'root'), 'root'), (('the', 'enterprise'), 'det'), (('enterprise', 'incorporate'), 'nsubj'), (('incorporate', 'suggest'), 'xcomp'), (('standardization', 'incorporate'), 'obj'), (('of', 'data'), 'case'), (('data', 'standardization'), 'nmod'), ((',', 'monitoring'), 'punct'), (('monitoring', 'data'), 'conj'), (('of', 'data'), 'case'), (('data', 'monitoring'), 'nmod'), ((',', 'cleaning'), 'punct'), (('cleaning', 'data'), 'conj'), (('of', 'data'), 'case'), (('incoming', 'data'), 'amod'), (('data', 'cleaning'), 'nmod'), (('and', 'control'), 'cc'), (('a', 'control'), 'det'), (('centralized', 'control'), 'amod'), (('control', 'data'), 'conj'), (('of', 'data'), 'case'), (('data', 'control'), 'nmod'), (('.', 'suggest'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 190 =================================

Sponsorship Pitfalls: When implementing an AI strategy, it’s important  that the right people, such as department heads, CxOs or  managers support the project. Implementing AI through the  organization can be a long process, and without support of  the right people there’s a higher probability that the project  will fail. What you might see when this problem occurs is  that your employees might not put enough time into problem  definition and subject knowledge sharing.  


------------------- Sentence 1 -------------------

 Sponsorship Pitfalls: 

Tokens are: 
>> ['Sponsorship', 'Pitfalls', ':'] 

 UPOS tags are: 
>> [('Sponsorship', 'NOUN'), ('Pitfalls', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Sponsorship', 'NN'), ('Pitfalls', 'NNS'), (':', ':')] 

 Lemmas are: 
>> [('Sponsorship', 'sponsorship'), ('Pitfalls', 'pitfall'), (':', ':')] 

 Dependency tags are: 
>> [(('Sponsorship', 'Pitfalls'), 'compound'), (('Pitfalls', 'root'), 'root'), ((':', 'Pitfalls'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 When implementing an AI strategy, it’s important  that the right people, such as department heads, CxOs or  managers support the project. 

Tokens are: 
>> ['When', 'implementing', 'an', 'AI', 'strategy', ',', 'it', '’s', 'important', 'that', 'the', 'right', 'people', ',', 'such', 'as', 'department', 'heads', ',', 'CxOs', 'or', 'managers', 'support', 'the', 'project', '.'] 

 UPOS tags are: 
>> [('When', 'SCONJ'), ('implementing', 'VERB'), ('an', 'DET'), ('AI', 'NOUN'), ('strategy', 'NOUN'), (',', 'PUNCT'), ('it', 'PRON'), ('’s', 'AUX'), ('important', 'ADJ'), ('that', 'SCONJ'), ('the', 'DET'), ('right', 'ADJ'), ('people', 'NOUN'), (',', 'PUNCT'), ('such', 'ADJ'), ('as', 'ADP'), ('department', 'NOUN'), ('heads', 'NOUN'), (',', 'PUNCT'), ('CxOs', 'NOUN'), ('or', 'CCONJ'), ('managers', 'NOUN'), ('support', 'VERB'), ('the', 'DET'), ('project', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('When', 'WRB'), ('implementing', 'VBG'), ('an', 'DT'), ('AI', 'NN'), ('strategy', 'NN'), (',', ','), ('it', 'PRP'), ('’s', 'VBZ'), ('important', 'JJ'), ('that', 'IN'), ('the', 'DT'), ('right', 'JJ'), ('people', 'NNS'), (',', ','), ('such', 'JJ'), ('as', 'IN'), ('department', 'NN'), ('heads', 'NNS'), (',', ','), ('CxOs', 'NNS'), ('or', 'CC'), ('managers', 'NNS'), ('support', 'VBP'), ('the', 'DT'), ('project', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('When', 'when'), ('implementing', 'implement'), ('an', 'a'), ('AI', 'ai'), ('strategy', 'strategy'), (',', ','), ('it', 'it'), ('’s', 'be'), ('important', 'important'), ('that', 'that'), ('the', 'the'), ('right', 'right'), ('people', 'people'), (',', ','), ('such', 'such'), ('as', 'as'), ('department', 'department'), ('heads', 'head'), (',', ','), ('CxOs', 'cxo'), ('or', 'or'), ('managers', 'manager'), ('support', 'support'), ('the', 'the'), ('project', 'project'), ('.', '.')] 

 Dependency tags are: 
>> [(('When', 'implementing'), 'mark'), (('implementing', 'important'), 'advcl'), (('an', 'strategy'), 'det'), (('AI', 'strategy'), 'compound'), (('strategy', 'implementing'), 'obj'), ((',', 'implementing'), 'punct'), (('it', 'important'), 'expl'), (('’s', 'important'), 'cop'), (('important', 'root'), 'root'), (('that', 'support'), 'mark'), (('the', 'people'), 'det'), (('right', 'people'), 'amod'), (('people', 'support'), 'nsubj'), ((',', 'people'), 'punct'), (('such', 'heads'), 'case'), (('as', 'such'), 'fixed'), (('department', 'heads'), 'compound'), (('heads', 'people'), 'nmod'), ((',', 'CxOs'), 'punct'), (('CxOs', 'heads'), 'conj'), (('or', 'managers'), 'cc'), (('managers', 'heads'), 'conj'), (('support', 'important'), 'csubj'), (('the', 'project'), 'det'), (('project', 'support'), 'obj'), (('.', 'important'), 'punct')]

 Named Entites are: 
>> [('CxOs', 'ORG')]

------------------- Sentence 3 -------------------

 Implementing AI through the  organization can be a long process, and without support of  the right people there’s a higher probability that the project  will fail. 

Tokens are: 
>> ['Implementing', 'AI', 'through', 'the', 'organization', 'can', 'be', 'a', 'long', 'process', ',', 'and', 'without', 'support', 'of', 'the', 'right', 'people', 'there', '’s', 'a', 'higher', 'probability', 'that', 'the', 'project', 'will', 'fail', '.'] 

 UPOS tags are: 
>> [('Implementing', 'VERB'), ('AI', 'NOUN'), ('through', 'ADP'), ('the', 'DET'), ('organization', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('a', 'DET'), ('long', 'ADJ'), ('process', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('without', 'ADP'), ('support', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('right', 'ADJ'), ('people', 'NOUN'), ('there', 'PRON'), ('’s', 'VERB'), ('a', 'DET'), ('higher', 'ADJ'), ('probability', 'NOUN'), ('that', 'PRON'), ('the', 'DET'), ('project', 'NOUN'), ('will', 'AUX'), ('fail', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Implementing', 'VBG'), ('AI', 'NNS'), ('through', 'IN'), ('the', 'DT'), ('organization', 'NN'), ('can', 'MD'), ('be', 'VB'), ('a', 'DT'), ('long', 'JJ'), ('process', 'NN'), (',', ','), ('and', 'CC'), ('without', 'IN'), ('support', 'NN'), ('of', 'IN'), ('the', 'DT'), ('right', 'JJ'), ('people', 'NNS'), ('there', 'EX'), ('’s', 'VBZ'), ('a', 'DT'), ('higher', 'JJR'), ('probability', 'NN'), ('that', 'WDT'), ('the', 'DT'), ('project', 'NN'), ('will', 'MD'), ('fail', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('Implementing', 'implement'), ('AI', 'ai'), ('through', 'through'), ('the', 'the'), ('organization', 'organization'), ('can', 'can'), ('be', 'be'), ('a', 'a'), ('long', 'long'), ('process', 'process'), (',', ','), ('and', 'and'), ('without', 'without'), ('support', 'support'), ('of', 'of'), ('the', 'the'), ('right', 'right'), ('people', 'people'), ('there', 'there'), ('’s', 'be'), ('a', 'a'), ('higher', 'high'), ('probability', 'probability'), ('that', 'that'), ('the', 'the'), ('project', 'project'), ('will', 'will'), ('fail', 'fail'), ('.', '.')] 

 Dependency tags are: 
>> [(('Implementing', 'process'), 'csubj'), (('AI', 'Implementing'), 'obj'), (('through', 'organization'), 'case'), (('the', 'organization'), 'det'), (('organization', 'Implementing'), 'obl'), (('can', 'process'), 'aux'), (('be', 'process'), 'cop'), (('a', 'process'), 'det'), (('long', 'process'), 'amod'), (('process', 'root'), 'root'), ((',', '’s'), 'punct'), (('and', '’s'), 'cc'), (('without', 'support'), 'case'), (('support', '’s'), 'obl'), (('of', 'people'), 'case'), (('the', 'people'), 'det'), (('right', 'people'), 'amod'), (('people', 'support'), 'nmod'), (('there', '’s'), 'expl'), (('’s', 'process'), 'conj'), (('a', 'probability'), 'det'), (('higher', 'probability'), 'amod'), (('probability', '’s'), 'nsubj'), (('that', 'fail'), 'obj'), (('the', 'project'), 'det'), (('project', 'fail'), 'nsubj'), (('will', 'fail'), 'aux'), (('fail', 'probability'), 'acl:relcl'), (('.', 'process'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 4 -------------------

 What you might see when this problem occurs is  that your employees might not put enough time into problem  definition and subject knowledge sharing. 

Tokens are: 
>> ['What', 'you', 'might', 'see', 'when', 'this', 'problem', 'occurs', 'is', 'that', 'your', 'employees', 'might', 'not', 'put', 'enough', 'time', 'into', 'problem', 'definition', 'and', 'subject', 'knowledge', 'sharing', '.'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('you', 'PRON'), ('might', 'AUX'), ('see', 'VERB'), ('when', 'SCONJ'), ('this', 'DET'), ('problem', 'NOUN'), ('occurs', 'VERB'), ('is', 'VERB'), ('that', 'SCONJ'), ('your', 'PRON'), ('employees', 'NOUN'), ('might', 'AUX'), ('not', 'PART'), ('put', 'VERB'), ('enough', 'ADJ'), ('time', 'NOUN'), ('into', 'ADP'), ('problem', 'NOUN'), ('definition', 'NOUN'), ('and', 'CCONJ'), ('subject', 'ADJ'), ('knowledge', 'NOUN'), ('sharing', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('you', 'PRP'), ('might', 'MD'), ('see', 'VB'), ('when', 'WRB'), ('this', 'DT'), ('problem', 'NN'), ('occurs', 'VBZ'), ('is', 'VBZ'), ('that', 'IN'), ('your', 'PRP$'), ('employees', 'NNS'), ('might', 'MD'), ('not', 'RB'), ('put', 'VB'), ('enough', 'JJ'), ('time', 'NN'), ('into', 'IN'), ('problem', 'NN'), ('definition', 'NN'), ('and', 'CC'), ('subject', 'JJ'), ('knowledge', 'NN'), ('sharing', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('you', 'you'), ('might', 'might'), ('see', 'see'), ('when', 'when'), ('this', 'this'), ('problem', 'problem'), ('occurs', 'occur'), ('is', 'be'), ('that', 'that'), ('your', 'you'), ('employees', 'employee'), ('might', 'might'), ('not', 'not'), ('put', 'put'), ('enough', 'enough'), ('time', 'time'), ('into', 'into'), ('problem', 'problem'), ('definition', 'definition'), ('and', 'and'), ('subject', 'subject'), ('knowledge', 'knowledge'), ('sharing', 'share'), ('.', '.')] 

 Dependency tags are: 
>> [(('What', 'is'), 'nsubj'), (('you', 'see'), 'nsubj'), (('might', 'see'), 'aux'), (('see', 'What'), 'acl:relcl'), (('when', 'occurs'), 'mark'), (('this', 'problem'), 'det'), (('problem', 'occurs'), 'nsubj'), (('occurs', 'see'), 'advcl'), (('is', 'root'), 'root'), (('that', 'put'), 'mark'), (('your', 'employees'), 'nmod:poss'), (('employees', 'put'), 'nsubj'), (('might', 'put'), 'aux'), (('not', 'put'), 'advmod'), (('put', 'is'), 'ccomp'), (('enough', 'time'), 'amod'), (('time', 'put'), 'obj'), (('into', 'definition'), 'case'), (('problem', 'definition'), 'compound'), (('definition', 'put'), 'obl'), (('and', 'sharing'), 'cc'), (('subject', 'sharing'), 'amod'), (('knowledge', 'sharing'), 'compound'), (('sharing', 'definition'), 'conj'), (('.', 'is'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 191 =================================

Recommendation: Align the right people before you start  in a “garage” concept. The key stakeholders should be  identified and should bring input and willingness to the  table. Create buy-in and support with employees, other  stakeholders, management and C-suite. 


------------------- Sentence 1 -------------------

 Recommendation: Align the right people before you start  in a “garage” concept. 

Tokens are: 
>> ['Recommendation', ':', 'Align', 'the', 'right', 'people', 'before', 'you', 'start', 'in', 'a', '“', 'garage', '”', 'concept', '.'] 

 UPOS tags are: 
>> [('Recommendation', 'NOUN'), (':', 'PUNCT'), ('Align', 'VERB'), ('the', 'DET'), ('right', 'ADJ'), ('people', 'NOUN'), ('before', 'SCONJ'), ('you', 'PRON'), ('start', 'VERB'), ('in', 'ADP'), ('a', 'DET'), ('“', 'PUNCT'), ('garage', 'NOUN'), ('”', 'PUNCT'), ('concept', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Recommendation', 'NN'), (':', ':'), ('Align', 'VB'), ('the', 'DT'), ('right', 'JJ'), ('people', 'NNS'), ('before', 'IN'), ('you', 'PRP'), ('start', 'VBP'), ('in', 'IN'), ('a', 'DT'), ('“', '``'), ('garage', 'NN'), ('”', "''"), ('concept', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Recommendation', 'recommendation'), (':', ':'), ('Align', 'align'), ('the', 'the'), ('right', 'right'), ('people', 'people'), ('before', 'before'), ('you', 'you'), ('start', 'start'), ('in', 'in'), ('a', 'a'), ('“', "''"), ('garage', 'garage'), ('”', "''"), ('concept', 'concept'), ('.', '.')] 

 Dependency tags are: 
>> [(('Recommendation', 'root'), 'root'), ((':', 'Recommendation'), 'punct'), (('Align', 'Recommendation'), 'appos'), (('the', 'people'), 'det'), (('right', 'people'), 'amod'), (('people', 'Align'), 'obj'), (('before', 'start'), 'mark'), (('you', 'start'), 'nsubj'), (('start', 'Align'), 'advcl'), (('in', 'concept'), 'case'), (('a', 'concept'), 'det'), (('“', 'garage'), 'punct'), (('garage', 'concept'), 'compound'), (('”', 'garage'), 'punct'), (('concept', 'start'), 'obl'), (('.', 'Recommendation'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 The key stakeholders should be  identified and should bring input and willingness to the  table. 

Tokens are: 
>> ['The', 'key', 'stakeholders', 'should', 'be', 'identified', 'and', 'should', 'bring', 'input', 'and', 'willingness', 'to', 'the', 'table', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('key', 'ADJ'), ('stakeholders', 'NOUN'), ('should', 'AUX'), ('be', 'AUX'), ('identified', 'VERB'), ('and', 'CCONJ'), ('should', 'AUX'), ('bring', 'VERB'), ('input', 'NOUN'), ('and', 'CCONJ'), ('willingness', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('table', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('key', 'JJ'), ('stakeholders', 'NNS'), ('should', 'MD'), ('be', 'VB'), ('identified', 'VBN'), ('and', 'CC'), ('should', 'MD'), ('bring', 'VB'), ('input', 'NN'), ('and', 'CC'), ('willingness', 'NN'), ('to', 'IN'), ('the', 'DT'), ('table', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('key', 'key'), ('stakeholders', 'stakeholder'), ('should', 'should'), ('be', 'be'), ('identified', 'identify'), ('and', 'and'), ('should', 'should'), ('bring', 'bring'), ('input', 'input'), ('and', 'and'), ('willingness', 'willingness'), ('to', 'to'), ('the', 'the'), ('table', 'table'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'stakeholders'), 'det'), (('key', 'stakeholders'), 'amod'), (('stakeholders', 'identified'), 'nsubj:pass'), (('should', 'identified'), 'aux'), (('be', 'identified'), 'aux:pass'), (('identified', 'root'), 'root'), (('and', 'bring'), 'cc'), (('should', 'bring'), 'aux'), (('bring', 'identified'), 'conj'), (('input', 'bring'), 'obj'), (('and', 'willingness'), 'cc'), (('willingness', 'input'), 'conj'), (('to', 'table'), 'case'), (('the', 'table'), 'det'), (('table', 'bring'), 'obl'), (('.', 'identified'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Create buy-in and support with employees, other  stakeholders, management and C-suite. 

Tokens are: 
>> ['Create', 'buy', '-', 'in', 'and', 'support', 'with', 'employees', ',', 'other', 'stakeholders', ',', 'management', 'and', 'C-suite', '.'] 

 UPOS tags are: 
>> [('Create', 'VERB'), ('buy', 'NOUN'), ('-', 'PUNCT'), ('in', 'NOUN'), ('and', 'CCONJ'), ('support', 'NOUN'), ('with', 'ADP'), ('employees', 'NOUN'), (',', 'PUNCT'), ('other', 'ADJ'), ('stakeholders', 'NOUN'), (',', 'PUNCT'), ('management', 'NOUN'), ('and', 'CCONJ'), ('C-suite', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Create', 'VB'), ('buy', 'NN'), ('-', 'HYPH'), ('in', 'NN'), ('and', 'CC'), ('support', 'NN'), ('with', 'IN'), ('employees', 'NNS'), (',', ','), ('other', 'JJ'), ('stakeholders', 'NNS'), (',', ','), ('management', 'NN'), ('and', 'CC'), ('C-suite', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('Create', 'create'), ('buy', 'buy'), ('-', '-'), ('in', 'in'), ('and', 'and'), ('support', 'support'), ('with', 'with'), ('employees', 'employee'), (',', ','), ('other', 'other'), ('stakeholders', 'stakeholder'), (',', ','), ('management', 'management'), ('and', 'and'), ('C-suite', 'C-suite'), ('.', '.')] 

 Dependency tags are: 
>> [(('Create', 'root'), 'root'), (('buy', 'in'), 'compound'), (('-', 'in'), 'punct'), (('in', 'Create'), 'obj'), (('and', 'support'), 'cc'), (('support', 'in'), 'conj'), (('with', 'employees'), 'case'), (('employees', 'support'), 'nmod'), ((',', 'stakeholders'), 'punct'), (('other', 'stakeholders'), 'amod'), (('stakeholders', 'employees'), 'conj'), ((',', 'management'), 'punct'), (('management', 'employees'), 'conj'), (('and', 'C-suite'), 'cc'), (('C-suite', 'employees'), 'conj'), (('.', 'Create'), 'punct')]

 Named Entites are: 
>> [('C-suite', 'ORG')]

================================ Paragraph 192 =================================

Lack of capabilities  Pitfalls: Many companies want to implement machine  learning right off the bat. But to implement AI, you need to  look at two things: the first is acquiring or outsourcing your  own data science talent, and the second is looking at your  current IT infrastructure.  


------------------- Sentence 1 -------------------

 Lack of capabilities  Pitfalls: Many companies want to implement machine  learning right off the bat. 

Tokens are: 
>> ['Lack', 'of', 'capabilities', 'Pitfalls', ':', 'Many', 'companies', 'want', 'to', 'implement', 'machine', 'learning', 'right', 'off', 'the', 'bat', '.'] 

 UPOS tags are: 
>> [('Lack', 'NOUN'), ('of', 'ADP'), ('capabilities', 'NOUN'), ('Pitfalls', 'NOUN'), (':', 'PUNCT'), ('Many', 'ADJ'), ('companies', 'NOUN'), ('want', 'VERB'), ('to', 'PART'), ('implement', 'VERB'), ('machine', 'NOUN'), ('learning', 'VERB'), ('right', 'ADV'), ('off', 'ADP'), ('the', 'DET'), ('bat', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Lack', 'NN'), ('of', 'IN'), ('capabilities', 'NNS'), ('Pitfalls', 'NNS'), (':', ':'), ('Many', 'JJ'), ('companies', 'NNS'), ('want', 'VBP'), ('to', 'TO'), ('implement', 'VB'), ('machine', 'NN'), ('learning', 'VBG'), ('right', 'RB'), ('off', 'IN'), ('the', 'DT'), ('bat', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Lack', 'lack'), ('of', 'of'), ('capabilities', 'capability'), ('Pitfalls', 'pitfall'), (':', ':'), ('Many', 'many'), ('companies', 'company'), ('want', 'want'), ('to', 'to'), ('implement', 'implement'), ('machine', 'machine'), ('learning', 'learn'), ('right', 'right'), ('off', 'off'), ('the', 'the'), ('bat', 'bat'), ('.', '.')] 

 Dependency tags are: 
>> [(('Lack', 'root'), 'root'), (('of', 'Pitfalls'), 'case'), (('capabilities', 'Pitfalls'), 'compound'), (('Pitfalls', 'Lack'), 'nmod'), ((':', 'Lack'), 'punct'), (('Many', 'companies'), 'amod'), (('companies', 'want'), 'nsubj'), (('want', 'Lack'), 'parataxis'), (('to', 'implement'), 'mark'), (('implement', 'want'), 'xcomp'), (('machine', 'implement'), 'obj'), (('learning', 'implement'), 'xcomp'), (('right', 'bat'), 'advmod'), (('off', 'bat'), 'case'), (('the', 'bat'), 'det'), (('bat', 'learning'), 'obl'), (('.', 'Lack'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 But to implement AI, you need to  look at two things: the first is acquiring or outsourcing your  own data science talent, and the second is looking at your  current IT infrastructure. 

Tokens are: 
>> ['But', 'to', 'implement', 'AI', ',', 'you', 'need', 'to', 'look', 'at', 'two', 'things', ':', 'the', 'first', 'is', 'acquiring', 'or', 'outsourcing', 'your', 'own', 'data', 'science', 'talent', ',', 'and', 'the', 'second', 'is', 'looking', 'at', 'your', 'current', 'IT', 'infrastructure', '.'] 

 UPOS tags are: 
>> [('But', 'CCONJ'), ('to', 'PART'), ('implement', 'VERB'), ('AI', 'PRON'), (',', 'PUNCT'), ('you', 'PRON'), ('need', 'VERB'), ('to', 'PART'), ('look', 'VERB'), ('at', 'ADP'), ('two', 'NUM'), ('things', 'NOUN'), (':', 'PUNCT'), ('the', 'DET'), ('first', 'ADJ'), ('is', 'AUX'), ('acquiring', 'VERB'), ('or', 'CCONJ'), ('outsourcing', 'VERB'), ('your', 'PRON'), ('own', 'ADJ'), ('data', 'NOUN'), ('science', 'NOUN'), ('talent', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('the', 'DET'), ('second', 'ADJ'), ('is', 'AUX'), ('looking', 'VERB'), ('at', 'ADP'), ('your', 'PRON'), ('current', 'ADJ'), ('IT', 'NOUN'), ('infrastructure', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('But', 'CC'), ('to', 'TO'), ('implement', 'VB'), ('AI', 'PRP'), (',', ','), ('you', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('look', 'VB'), ('at', 'IN'), ('two', 'CD'), ('things', 'NNS'), (':', ':'), ('the', 'DT'), ('first', 'JJ'), ('is', 'VBZ'), ('acquiring', 'VBG'), ('or', 'CC'), ('outsourcing', 'VBG'), ('your', 'PRP$'), ('own', 'JJ'), ('data', 'NN'), ('science', 'NN'), ('talent', 'NN'), (',', ','), ('and', 'CC'), ('the', 'DT'), ('second', 'JJ'), ('is', 'VBZ'), ('looking', 'VBG'), ('at', 'IN'), ('your', 'PRP$'), ('current', 'JJ'), ('IT', 'NN'), ('infrastructure', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('But', 'but'), ('to', 'to'), ('implement', 'implement'), ('AI', 'ai'), (',', ','), ('you', 'you'), ('need', 'need'), ('to', 'to'), ('look', 'look'), ('at', 'at'), ('two', 'two'), ('things', 'thing'), (':', ':'), ('the', 'the'), ('first', 'first'), ('is', 'be'), ('acquiring', 'acquire'), ('or', 'or'), ('outsourcing', 'outsource'), ('your', 'you'), ('own', 'own'), ('data', 'datum'), ('science', 'science'), ('talent', 'talent'), (',', ','), ('and', 'and'), ('the', 'the'), ('second', 'second'), ('is', 'be'), ('looking', 'look'), ('at', 'at'), ('your', 'you'), ('current', 'current'), ('IT', 'it'), ('infrastructure', 'infrastructure'), ('.', '.')] 

 Dependency tags are: 
>> [(('But', 'need'), 'cc'), (('to', 'implement'), 'mark'), (('implement', 'need'), 'advcl'), (('AI', 'implement'), 'obj'), ((',', 'need'), 'punct'), (('you', 'need'), 'nsubj'), (('need', 'root'), 'root'), (('to', 'look'), 'mark'), (('look', 'need'), 'xcomp'), (('at', 'things'), 'case'), (('two', 'things'), 'nummod'), (('things', 'look'), 'obl'), ((':', 'need'), 'punct'), (('the', 'first'), 'det'), (('first', 'acquiring'), 'nsubj'), (('is', 'acquiring'), 'aux'), (('acquiring', 'need'), 'parataxis'), (('or', 'outsourcing'), 'cc'), (('outsourcing', 'acquiring'), 'conj'), (('your', 'talent'), 'nmod:poss'), (('own', 'talent'), 'amod'), (('data', 'talent'), 'compound'), (('science', 'talent'), 'compound'), (('talent', 'outsourcing'), 'obj'), ((',', 'looking'), 'punct'), (('and', 'looking'), 'cc'), (('the', 'second'), 'det'), (('second', 'looking'), 'nsubj'), (('is', 'looking'), 'aux'), (('looking', 'need'), 'conj'), (('at', 'infrastructure'), 'case'), (('your', 'infrastructure'), 'nmod:poss'), (('current', 'infrastructure'), 'amod'), (('IT', 'infrastructure'), 'compound'), (('infrastructure', 'looking'), 'obl'), (('.', 'need'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG'), ('two', 'CARDINAL'), ('first', 'ORDINAL'), ('second', 'ORDINAL')]

================================ Paragraph 193 =================================

If you choose the in-house route, you’re taking a more  challenging route. This option can be very rewarding but  it’s important to take in account that it will require more  time to set up infrastructures, pipelines and research. If  you decide to take this route, you’ll need to acquire the  following skills in house:   


------------------- Sentence 1 -------------------

 If you choose the in-house route, you’re taking a more  challenging route. 

Tokens are: 
>> ['If', 'you', 'choose', 'the', 'in', '-', 'house', 'route', ',', 'you', '’re', 'taking', 'a', 'more', 'challenging', 'route', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('you', 'PRON'), ('choose', 'VERB'), ('the', 'DET'), ('in', 'ADP'), ('-', 'PUNCT'), ('house', 'NOUN'), ('route', 'NOUN'), (',', 'PUNCT'), ('you', 'PRON'), ('’re', 'AUX'), ('taking', 'VERB'), ('a', 'DET'), ('more', 'ADV'), ('challenging', 'ADJ'), ('route', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('you', 'PRP'), ('choose', 'VBP'), ('the', 'DT'), ('in', 'IN'), ('-', 'HYPH'), ('house', 'NN'), ('route', 'NN'), (',', ','), ('you', 'PRP'), ('’re', 'VBP'), ('taking', 'VBG'), ('a', 'DT'), ('more', 'RBR'), ('challenging', 'JJ'), ('route', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('you', 'you'), ('choose', 'choose'), ('the', 'the'), ('in', 'in'), ('-', '-'), ('house', 'house'), ('route', 'route'), (',', ','), ('you', 'you'), ('’re', 'be'), ('taking', 'take'), ('a', 'a'), ('more', 'more'), ('challenging', 'challenging'), ('route', 'route'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'choose'), 'mark'), (('you', 'choose'), 'nsubj'), (('choose', 'taking'), 'advcl'), (('the', 'route'), 'det'), (('in', 'house'), 'case'), (('-', 'house'), 'punct'), (('house', 'route'), 'compound'), (('route', 'choose'), 'obj'), ((',', 'taking'), 'punct'), (('you', 'taking'), 'nsubj'), (('’re', 'taking'), 'aux'), (('taking', 'root'), 'root'), (('a', 'route'), 'det'), (('more', 'challenging'), 'advmod'), (('challenging', 'route'), 'amod'), (('route', 'taking'), 'obj'), (('.', 'taking'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 This option can be very rewarding but  it’s important to take in account that it will require more  time to set up infrastructures, pipelines and research. 

Tokens are: 
>> ['This', 'option', 'can', 'be', 'very', 'rewarding', 'but', 'it', '’s', 'important', 'to', 'take', 'in', 'account', 'that', 'it', 'will', 'require', 'more', 'time', 'to', 'set', 'up', 'infrastructures', ',', 'pipelines', 'and', 'research', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('option', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('very', 'ADV'), ('rewarding', 'ADJ'), ('but', 'CCONJ'), ('it', 'PRON'), ('’s', 'AUX'), ('important', 'ADJ'), ('to', 'PART'), ('take', 'VERB'), ('in', 'ADP'), ('account', 'NOUN'), ('that', 'SCONJ'), ('it', 'PRON'), ('will', 'AUX'), ('require', 'VERB'), ('more', 'ADJ'), ('time', 'NOUN'), ('to', 'PART'), ('set', 'VERB'), ('up', 'ADP'), ('infrastructures', 'NOUN'), (',', 'PUNCT'), ('pipelines', 'NOUN'), ('and', 'CCONJ'), ('research', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('option', 'NN'), ('can', 'MD'), ('be', 'VB'), ('very', 'RB'), ('rewarding', 'JJ'), ('but', 'CC'), ('it', 'PRP'), ('’s', 'VBZ'), ('important', 'JJ'), ('to', 'TO'), ('take', 'VB'), ('in', 'IN'), ('account', 'NN'), ('that', 'IN'), ('it', 'PRP'), ('will', 'MD'), ('require', 'VB'), ('more', 'JJR'), ('time', 'NN'), ('to', 'TO'), ('set', 'VB'), ('up', 'RP'), ('infrastructures', 'NNS'), (',', ','), ('pipelines', 'NNS'), ('and', 'CC'), ('research', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('option', 'option'), ('can', 'can'), ('be', 'be'), ('very', 'very'), ('rewarding', 'rewarding'), ('but', 'but'), ('it', 'it'), ('’s', 'be'), ('important', 'important'), ('to', 'to'), ('take', 'take'), ('in', 'in'), ('account', 'account'), ('that', 'that'), ('it', 'it'), ('will', 'will'), ('require', 'require'), ('more', 'more'), ('time', 'time'), ('to', 'to'), ('set', 'set'), ('up', 'up'), ('infrastructures', 'infrastructure'), (',', ','), ('pipelines', 'pipeline'), ('and', 'and'), ('research', 'research'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'option'), 'det'), (('option', 'rewarding'), 'nsubj'), (('can', 'rewarding'), 'aux'), (('be', 'rewarding'), 'cop'), (('very', 'rewarding'), 'advmod'), (('rewarding', 'root'), 'root'), (('but', 'important'), 'cc'), (('it', 'important'), 'expl'), (('’s', 'important'), 'cop'), (('important', 'rewarding'), 'conj'), (('to', 'take'), 'mark'), (('take', 'important'), 'csubj'), (('in', 'account'), 'case'), (('account', 'take'), 'obj'), (('that', 'require'), 'mark'), (('it', 'require'), 'nsubj'), (('will', 'require'), 'aux'), (('require', 'take'), 'ccomp'), (('more', 'time'), 'amod'), (('time', 'require'), 'obj'), (('to', 'set'), 'mark'), (('set', 'time'), 'acl'), (('up', 'set'), 'compound:prt'), (('infrastructures', 'set'), 'obj'), ((',', 'pipelines'), 'punct'), (('pipelines', 'infrastructures'), 'conj'), (('and', 'research'), 'cc'), (('research', 'infrastructures'), 'conj'), (('.', 'rewarding'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 If  you decide to take this route, you’ll need to acquire the  following skills in house: 

Tokens are: 
>> ['If', 'you', 'decide', 'to', 'take', 'this', 'route', ',', 'you', '’ll', 'need', 'to', 'acquire', 'the', 'following', 'skills', 'in', 'house', ':'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('you', 'PRON'), ('decide', 'VERB'), ('to', 'PART'), ('take', 'VERB'), ('this', 'DET'), ('route', 'NOUN'), (',', 'PUNCT'), ('you', 'PRON'), ('’ll', 'AUX'), ('need', 'VERB'), ('to', 'PART'), ('acquire', 'VERB'), ('the', 'DET'), ('following', 'VERB'), ('skills', 'NOUN'), ('in', 'ADP'), ('house', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('you', 'PRP'), ('decide', 'VBP'), ('to', 'TO'), ('take', 'VB'), ('this', 'DT'), ('route', 'NN'), (',', ','), ('you', 'PRP'), ('’ll', 'MD'), ('need', 'VB'), ('to', 'TO'), ('acquire', 'VB'), ('the', 'DT'), ('following', 'VBG'), ('skills', 'NNS'), ('in', 'IN'), ('house', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('If', 'if'), ('you', 'you'), ('decide', 'decide'), ('to', 'to'), ('take', 'take'), ('this', 'this'), ('route', 'route'), (',', ','), ('you', 'you'), ('’ll', 'will'), ('need', 'need'), ('to', 'to'), ('acquire', 'acquire'), ('the', 'the'), ('following', 'follow'), ('skills', 'skill'), ('in', 'in'), ('house', 'house'), (':', ':')] 

 Dependency tags are: 
>> [(('If', 'decide'), 'mark'), (('you', 'decide'), 'nsubj'), (('decide', 'need'), 'advcl'), (('to', 'take'), 'mark'), (('take', 'decide'), 'xcomp'), (('this', 'route'), 'det'), (('route', 'take'), 'obj'), ((',', 'need'), 'punct'), (('you', 'need'), 'nsubj'), (('’ll', 'need'), 'aux'), (('need', 'root'), 'root'), (('to', 'acquire'), 'mark'), (('acquire', 'need'), 'xcomp'), (('the', 'skills'), 'det'), (('following', 'skills'), 'amod'), (('skills', 'acquire'), 'obj'), (('in', 'house'), 'case'), (('house', 'acquire'), 'obl'), ((':', 'need'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 194 =================================

 — Researchers to create new solutions to your products  — Project managers to keep the team on track  — Domain experts who have knowledge about your  products, customers and the business environment  surrounding the product 


------------------- Sentence 1 -------------------

 — 

Tokens are: 
>> ['—'] 

 UPOS tags are: 
>> [('—', 'PUNCT')] 

 XPOS tags are: 
>> [('—', ':')] 

 Lemmas are: 
>> [('—', '—')] 

 Dependency tags are: 
>> [(('—', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Researchers to create new solutions to your products  — 

Tokens are: 
>> ['Researchers', 'to', 'create', 'new', 'solutions', 'to', 'your', 'products', '—'] 

 UPOS tags are: 
>> [('Researchers', 'NOUN'), ('to', 'PART'), ('create', 'VERB'), ('new', 'ADJ'), ('solutions', 'NOUN'), ('to', 'ADP'), ('your', 'PRON'), ('products', 'NOUN'), ('—', 'PUNCT')] 

 XPOS tags are: 
>> [('Researchers', 'NNS'), ('to', 'TO'), ('create', 'VB'), ('new', 'JJ'), ('solutions', 'NNS'), ('to', 'IN'), ('your', 'PRP$'), ('products', 'NNS'), ('—', ':')] 

 Lemmas are: 
>> [('Researchers', 'researcher'), ('to', 'to'), ('create', 'create'), ('new', 'new'), ('solutions', 'solution'), ('to', 'to'), ('your', 'you'), ('products', 'product'), ('—', '—')] 

 Dependency tags are: 
>> [(('Researchers', 'create'), 'nsubj'), (('to', 'create'), 'mark'), (('create', 'root'), 'root'), (('new', 'solutions'), 'amod'), (('solutions', 'create'), 'obj'), (('to', 'products'), 'case'), (('your', 'products'), 'nmod:poss'), (('products', 'create'), 'obl'), (('—', 'create'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Project managers to keep the team on track  — 

Tokens are: 
>> ['Project', 'managers', 'to', 'keep', 'the', 'team', 'on', 'track', '—'] 

 UPOS tags are: 
>> [('Project', 'NOUN'), ('managers', 'NOUN'), ('to', 'PART'), ('keep', 'VERB'), ('the', 'DET'), ('team', 'NOUN'), ('on', 'ADP'), ('track', 'NOUN'), ('—', 'PUNCT')] 

 XPOS tags are: 
>> [('Project', 'NN'), ('managers', 'NNS'), ('to', 'TO'), ('keep', 'VB'), ('the', 'DT'), ('team', 'NN'), ('on', 'IN'), ('track', 'NN'), ('—', ':')] 

 Lemmas are: 
>> [('Project', 'project'), ('managers', 'manager'), ('to', 'to'), ('keep', 'keep'), ('the', 'the'), ('team', 'team'), ('on', 'on'), ('track', 'track'), ('—', '—')] 

 Dependency tags are: 
>> [(('Project', 'managers'), 'compound'), (('managers', 'root'), 'root'), (('to', 'keep'), 'mark'), (('keep', 'managers'), 'acl'), (('the', 'team'), 'det'), (('team', 'keep'), 'obj'), (('on', 'track'), 'case'), (('track', 'keep'), 'obl'), (('—', 'managers'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Domain experts who have knowledge about your  products, customers and the business environment  surrounding the product 

Tokens are: 
>> ['Domain', 'experts', 'who', 'have', 'knowledge', 'about', 'your', 'products', ',', 'customers', 'and', 'the', 'business', 'environment', 'surrounding', 'the', 'product'] 

 UPOS tags are: 
>> [('Domain', 'NOUN'), ('experts', 'NOUN'), ('who', 'PRON'), ('have', 'VERB'), ('knowledge', 'NOUN'), ('about', 'ADP'), ('your', 'PRON'), ('products', 'NOUN'), (',', 'PUNCT'), ('customers', 'NOUN'), ('and', 'CCONJ'), ('the', 'DET'), ('business', 'NOUN'), ('environment', 'NOUN'), ('surrounding', 'VERB'), ('the', 'DET'), ('product', 'NOUN')] 

 XPOS tags are: 
>> [('Domain', 'NN'), ('experts', 'NNS'), ('who', 'WP'), ('have', 'VBP'), ('knowledge', 'NN'), ('about', 'IN'), ('your', 'PRP$'), ('products', 'NNS'), (',', ','), ('customers', 'NNS'), ('and', 'CC'), ('the', 'DT'), ('business', 'NN'), ('environment', 'NN'), ('surrounding', 'VBG'), ('the', 'DT'), ('product', 'NN')] 

 Lemmas are: 
>> [('Domain', 'domain'), ('experts', 'expert'), ('who', 'who'), ('have', 'have'), ('knowledge', 'knowledge'), ('about', 'about'), ('your', 'you'), ('products', 'product'), (',', ','), ('customers', 'customer'), ('and', 'and'), ('the', 'the'), ('business', 'business'), ('environment', 'environment'), ('surrounding', 'surround'), ('the', 'the'), ('product', 'product')] 

 Dependency tags are: 
>> [(('Domain', 'experts'), 'compound'), (('experts', 'root'), 'root'), (('who', 'have'), 'nsubj'), (('have', 'experts'), 'acl:relcl'), (('knowledge', 'have'), 'obj'), (('about', 'products'), 'case'), (('your', 'products'), 'nmod:poss'), (('products', 'knowledge'), 'nmod'), ((',', 'customers'), 'punct'), (('customers', 'products'), 'conj'), (('and', 'environment'), 'cc'), (('the', 'environment'), 'det'), (('business', 'environment'), 'compound'), (('environment', 'products'), 'conj'), (('surrounding', 'environment'), 'acl'), (('the', 'product'), 'det'), (('product', 'surrounding'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 195 =================================

 — Data engineers and machine learning engineers who  can scale the algorithms  


------------------- Sentence 1 -------------------

 — Data engineers and machine learning engineers who  can scale the algorithms 

Tokens are: 
>> ['—', 'Data', 'engineers', 'and', 'machine', 'learning', 'engineers', 'who', 'can', 'scale', 'the', 'algorithms'] 

 UPOS tags are: 
>> [('—', 'PUNCT'), ('Data', 'NOUN'), ('engineers', 'NOUN'), ('and', 'CCONJ'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('engineers', 'NOUN'), ('who', 'PRON'), ('can', 'AUX'), ('scale', 'VERB'), ('the', 'DET'), ('algorithms', 'NOUN')] 

 XPOS tags are: 
>> [('—', ':'), ('Data', 'NN'), ('engineers', 'NNS'), ('and', 'CC'), ('machine', 'NN'), ('learning', 'NN'), ('engineers', 'NNS'), ('who', 'WP'), ('can', 'MD'), ('scale', 'VB'), ('the', 'DT'), ('algorithms', 'NNS')] 

 Lemmas are: 
>> [('—', '—'), ('Data', 'data'), ('engineers', 'engineer'), ('and', 'and'), ('machine', 'machine'), ('learning', 'learning'), ('engineers', 'engineer'), ('who', 'who'), ('can', 'can'), ('scale', 'scale'), ('the', 'the'), ('algorithms', 'algorithm')] 

 Dependency tags are: 
>> [(('—', 'engineers'), 'punct'), (('Data', 'engineers'), 'compound'), (('engineers', 'root'), 'root'), (('and', 'engineers'), 'cc'), (('machine', 'engineers'), 'compound'), (('learning', 'engineers'), 'compound'), (('engineers', 'engineers'), 'conj'), (('who', 'scale'), 'nsubj'), (('can', 'scale'), 'aux'), (('scale', 'engineers'), 'acl:relcl'), (('the', 'algorithms'), 'det'), (('algorithms', 'scale'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 196 =================================

 — Data analysts who can process the outcome  — Statisticians to help ensure quality results  — Software engineers to turn all you’ve created into  something that can be used by the masses—be it your  customers or your employees  


------------------- Sentence 1 -------------------

 — Data analysts who can process the outcome  — Statisticians to help ensure quality results  — 

Tokens are: 
>> ['—', 'Data', 'analysts', 'who', 'can', 'process', 'the', 'outcome', '—', 'Statisticians', 'to', 'help', 'ensure', 'quality', 'results', '—'] 

 UPOS tags are: 
>> [('—', 'PUNCT'), ('Data', 'NOUN'), ('analysts', 'NOUN'), ('who', 'PRON'), ('can', 'AUX'), ('process', 'VERB'), ('the', 'DET'), ('outcome', 'NOUN'), ('—', 'PUNCT'), ('Statisticians', 'PROPN'), ('to', 'PART'), ('help', 'VERB'), ('ensure', 'VERB'), ('quality', 'ADJ'), ('results', 'NOUN'), ('—', 'PUNCT')] 

 XPOS tags are: 
>> [('—', ':'), ('Data', 'NN'), ('analysts', 'NNS'), ('who', 'WP'), ('can', 'MD'), ('process', 'VB'), ('the', 'DT'), ('outcome', 'NN'), ('—', ':'), ('Statisticians', 'NNPS'), ('to', 'TO'), ('help', 'VB'), ('ensure', 'VB'), ('quality', 'JJ'), ('results', 'NNS'), ('—', ':')] 

 Lemmas are: 
>> [('—', '—'), ('Data', 'data'), ('analysts', 'analyst'), ('who', 'who'), ('can', 'can'), ('process', 'process'), ('the', 'the'), ('outcome', 'outcome'), ('—', '—'), ('Statisticians', 'Statistician'), ('to', 'to'), ('help', 'help'), ('ensure', 'ensure'), ('quality', 'quality'), ('results', 'result'), ('—', '—')] 

 Dependency tags are: 
>> [(('—', 'analysts'), 'punct'), (('Data', 'analysts'), 'compound'), (('analysts', 'root'), 'root'), (('who', 'process'), 'nsubj'), (('can', 'process'), 'aux'), (('process', 'analysts'), 'acl:relcl'), (('the', 'outcome'), 'det'), (('outcome', 'process'), 'obj'), (('—', 'analysts'), 'punct'), (('Statisticians', 'help'), 'nsubj'), (('to', 'help'), 'mark'), (('help', 'process'), 'advcl'), (('ensure', 'help'), 'xcomp'), (('quality', 'results'), 'amod'), (('results', 'ensure'), 'obj'), (('—', 'analysts'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Software engineers to turn all you’ve created into  something that can be used by the masses—be it your  customers or your employees 

Tokens are: 
>> ['Software', 'engineers', 'to', 'turn', 'all', 'you', '’ve', 'created', 'into', 'something', 'that', 'can', 'be', 'used', 'by', 'the', 'masses', '—', 'be', 'it', 'your', 'customers', 'or', 'your', 'employees'] 

 UPOS tags are: 
>> [('Software', 'NOUN'), ('engineers', 'NOUN'), ('to', 'PART'), ('turn', 'VERB'), ('all', 'DET'), ('you', 'PRON'), ('’ve', 'AUX'), ('created', 'VERB'), ('into', 'ADP'), ('something', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('used', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('masses', 'NOUN'), ('—', 'PUNCT'), ('be', 'AUX'), ('it', 'PRON'), ('your', 'PRON'), ('customers', 'NOUN'), ('or', 'CCONJ'), ('your', 'PRON'), ('employees', 'NOUN')] 

 XPOS tags are: 
>> [('Software', 'NN'), ('engineers', 'NNS'), ('to', 'TO'), ('turn', 'VB'), ('all', 'DT'), ('you', 'PRP'), ('’ve', 'VBP'), ('created', 'VBN'), ('into', 'IN'), ('something', 'NN'), ('that', 'WDT'), ('can', 'MD'), ('be', 'VB'), ('used', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('masses', 'NNS'), ('—', ':'), ('be', 'VB'), ('it', 'PRP'), ('your', 'PRP$'), ('customers', 'NNS'), ('or', 'CC'), ('your', 'PRP$'), ('employees', 'NNS')] 

 Lemmas are: 
>> [('Software', 'Software'), ('engineers', 'engineer'), ('to', 'to'), ('turn', 'turn'), ('all', 'all'), ('you', 'you'), ('’ve', 'have'), ('created', 'create'), ('into', 'into'), ('something', 'something'), ('that', 'that'), ('can', 'can'), ('be', 'be'), ('used', 'use'), ('by', 'by'), ('the', 'the'), ('masses', 'mass'), ('—', '—'), ('be', 'be'), ('it', 'it'), ('your', 'you'), ('customers', 'customer'), ('or', 'or'), ('your', 'you'), ('employees', 'employee')] 

 Dependency tags are: 
>> [(('Software', 'engineers'), 'compound'), (('engineers', 'it'), 'nsubj'), (('to', 'turn'), 'mark'), (('turn', 'engineers'), 'acl'), (('all', 'turn'), 'obj'), (('you', 'created'), 'nsubj'), (('’ve', 'created'), 'aux'), (('created', 'all'), 'acl:relcl'), (('into', 'something'), 'case'), (('something', 'created'), 'obl'), (('that', 'used'), 'nsubj:pass'), (('can', 'used'), 'aux'), (('be', 'used'), 'aux:pass'), (('used', 'something'), 'acl:relcl'), (('by', 'masses'), 'case'), (('the', 'masses'), 'det'), (('masses', 'used'), 'obl'), (('—', 'customers'), 'punct'), (('be', 'customers'), 'cop'), (('it', 'customers'), 'nsubj'), (('your', 'customers'), 'nmod:poss'), (('customers', 'root'), 'root'), (('or', 'employees'), 'cc'), (('your', 'employees'), 'nmod:poss'), (('employees', 'customers'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 197 =================================

While these roles don’t all need to be filled by individual  employees, it’s essential to have all these skills in house.  


------------------- Sentence 1 -------------------

 While these roles don’t all need to be filled by individual  employees, it’s essential to have all these skills in house. 

Tokens are: 
>> ['While', 'these', 'roles', 'do', 'n’t', 'all', 'need', 'to', 'be', 'filled', 'by', 'individual', 'employees', ',', 'it', '’s', 'essential', 'to', 'have', 'all', 'these', 'skills', 'in', 'house', '.'] 

 UPOS tags are: 
>> [('While', 'SCONJ'), ('these', 'DET'), ('roles', 'NOUN'), ('do', 'AUX'), ('n’t', 'PART'), ('all', 'ADV'), ('need', 'VERB'), ('to', 'PART'), ('be', 'AUX'), ('filled', 'VERB'), ('by', 'ADP'), ('individual', 'ADJ'), ('employees', 'NOUN'), (',', 'PUNCT'), ('it', 'PRON'), ('’s', 'AUX'), ('essential', 'ADJ'), ('to', 'PART'), ('have', 'VERB'), ('all', 'PRON'), ('these', 'DET'), ('skills', 'NOUN'), ('in', 'ADP'), ('house', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('While', 'IN'), ('these', 'DT'), ('roles', 'NNS'), ('do', 'VBP'), ('n’t', 'RB'), ('all', 'RB'), ('need', 'VB'), ('to', 'TO'), ('be', 'VB'), ('filled', 'VBN'), ('by', 'IN'), ('individual', 'JJ'), ('employees', 'NNS'), (',', ','), ('it', 'PRP'), ('’s', 'VBZ'), ('essential', 'JJ'), ('to', 'TO'), ('have', 'VB'), ('all', 'PDT'), ('these', 'DT'), ('skills', 'NNS'), ('in', 'IN'), ('house', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('While', 'while'), ('these', 'this'), ('roles', 'role'), ('do', 'do'), ('n’t', 'not'), ('all', 'all'), ('need', 'need'), ('to', 'to'), ('be', 'be'), ('filled', 'fill'), ('by', 'by'), ('individual', 'individual'), ('employees', 'employee'), (',', ','), ('it', 'it'), ('’s', 'be'), ('essential', 'essential'), ('to', 'to'), ('have', 'have'), ('all', 'all'), ('these', 'this'), ('skills', 'skill'), ('in', 'in'), ('house', 'house'), ('.', '.')] 

 Dependency tags are: 
>> [(('While', 'need'), 'mark'), (('these', 'roles'), 'det'), (('roles', 'need'), 'nsubj'), (('do', 'need'), 'aux'), (('n’t', 'need'), 'advmod'), (('all', 'need'), 'advmod'), (('need', 'essential'), 'advcl'), (('to', 'filled'), 'mark'), (('be', 'filled'), 'aux:pass'), (('filled', 'need'), 'xcomp'), (('by', 'employees'), 'case'), (('individual', 'employees'), 'amod'), (('employees', 'filled'), 'obl'), ((',', 'essential'), 'punct'), (('it', 'essential'), 'expl'), (('’s', 'essential'), 'cop'), (('essential', 'root'), 'root'), (('to', 'have'), 'mark'), (('have', 'essential'), 'csubj'), (('all', 'skills'), 'det:predet'), (('these', 'skills'), 'det'), (('skills', 'have'), 'obj'), (('in', 'house'), 'case'), (('house', 'have'), 'obl'), (('.', 'essential'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 198 =================================

The second option is easier and quicker to implement. In  this case you’d make use of the capabilities of an external  party such as through the IBM Garage offering, which can  give you the ability to use these capabilities without having  to set up a complete internal department. 


------------------- Sentence 1 -------------------

 The second option is easier and quicker to implement. 

Tokens are: 
>> ['The', 'second', 'option', 'is', 'easier', 'and', 'quicker', 'to', 'implement', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('second', 'ADJ'), ('option', 'NOUN'), ('is', 'AUX'), ('easier', 'ADJ'), ('and', 'CCONJ'), ('quicker', 'ADJ'), ('to', 'PART'), ('implement', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('second', 'JJ'), ('option', 'NN'), ('is', 'VBZ'), ('easier', 'JJR'), ('and', 'CC'), ('quicker', 'JJR'), ('to', 'TO'), ('implement', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('second', 'second'), ('option', 'option'), ('is', 'be'), ('easier', 'easy'), ('and', 'and'), ('quicker', 'quick'), ('to', 'to'), ('implement', 'implement'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'option'), 'det'), (('second', 'option'), 'amod'), (('option', 'easier'), 'nsubj'), (('is', 'easier'), 'cop'), (('easier', 'root'), 'root'), (('and', 'quicker'), 'cc'), (('quicker', 'easier'), 'conj'), (('to', 'implement'), 'mark'), (('implement', 'easier'), 'advcl'), (('.', 'easier'), 'punct')]

 Named Entites are: 
>> [('second', 'ORDINAL')]

------------------- Sentence 2 -------------------

 In  this case you’d make use of the capabilities of an external  party such as through the IBM Garage offering, which can  give you the ability to use these capabilities without having  to set up a complete internal department. 

Tokens are: 
>> ['In', 'this', 'case', 'you', '’d', 'make', 'use', 'of', 'the', 'capabilities', 'of', 'an', 'external', 'party', 'such', 'as', 'through', 'the', 'IBM', 'Garage', 'offering', ',', 'which', 'can', 'give', 'you', 'the', 'ability', 'to', 'use', 'these', 'capabilities', 'without', 'having', 'to', 'set', 'up', 'a', 'complete', 'internal', 'department', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('this', 'DET'), ('case', 'NOUN'), ('you', 'PRON'), ('’d', 'AUX'), ('make', 'VERB'), ('use', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('capabilities', 'NOUN'), ('of', 'ADP'), ('an', 'DET'), ('external', 'ADJ'), ('party', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('through', 'ADP'), ('the', 'DET'), ('IBM', 'PROPN'), ('Garage', 'PROPN'), ('offering', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('can', 'AUX'), ('give', 'VERB'), ('you', 'PRON'), ('the', 'DET'), ('ability', 'NOUN'), ('to', 'PART'), ('use', 'VERB'), ('these', 'DET'), ('capabilities', 'NOUN'), ('without', 'SCONJ'), ('having', 'VERB'), ('to', 'PART'), ('set', 'VERB'), ('up', 'ADP'), ('a', 'DET'), ('complete', 'ADJ'), ('internal', 'ADJ'), ('department', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('this', 'DT'), ('case', 'NN'), ('you', 'PRP'), ('’d', 'MD'), ('make', 'VB'), ('use', 'NN'), ('of', 'IN'), ('the', 'DT'), ('capabilities', 'NNS'), ('of', 'IN'), ('an', 'DT'), ('external', 'JJ'), ('party', 'NN'), ('such', 'JJ'), ('as', 'IN'), ('through', 'IN'), ('the', 'DT'), ('IBM', 'NNP'), ('Garage', 'NNP'), ('offering', 'NN'), (',', ','), ('which', 'WDT'), ('can', 'MD'), ('give', 'VB'), ('you', 'PRP'), ('the', 'DT'), ('ability', 'NN'), ('to', 'TO'), ('use', 'VB'), ('these', 'DT'), ('capabilities', 'NNS'), ('without', 'IN'), ('having', 'VBG'), ('to', 'TO'), ('set', 'VB'), ('up', 'RP'), ('a', 'DT'), ('complete', 'JJ'), ('internal', 'JJ'), ('department', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('this', 'this'), ('case', 'case'), ('you', 'you'), ('’d', 'have'), ('make', 'make'), ('use', 'use'), ('of', 'of'), ('the', 'the'), ('capabilities', 'capability'), ('of', 'of'), ('an', 'a'), ('external', 'external'), ('party', 'party'), ('such', 'such'), ('as', 'as'), ('through', 'through'), ('the', 'the'), ('IBM', 'IBM'), ('Garage', 'Garage'), ('offering', 'offering'), (',', ','), ('which', 'which'), ('can', 'can'), ('give', 'give'), ('you', 'you'), ('the', 'the'), ('ability', 'ability'), ('to', 'to'), ('use', 'use'), ('these', 'this'), ('capabilities', 'capability'), ('without', 'without'), ('having', 'have'), ('to', 'to'), ('set', 'set'), ('up', 'up'), ('a', 'a'), ('complete', 'complete'), ('internal', 'internal'), ('department', 'department'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'case'), 'case'), (('this', 'case'), 'det'), (('case', 'make'), 'obl'), (('you', 'make'), 'nsubj'), (('’d', 'make'), 'aux'), (('make', 'root'), 'root'), (('use', 'make'), 'obj'), (('of', 'capabilities'), 'case'), (('the', 'capabilities'), 'det'), (('capabilities', 'use'), 'nmod'), (('of', 'party'), 'case'), (('an', 'party'), 'det'), (('external', 'party'), 'amod'), (('party', 'capabilities'), 'nmod'), (('such', 'offering'), 'case'), (('as', 'such'), 'fixed'), (('through', 'offering'), 'case'), (('the', 'offering'), 'det'), (('IBM', 'offering'), 'compound'), (('Garage', 'offering'), 'compound'), (('offering', 'party'), 'nmod'), ((',', 'offering'), 'punct'), (('which', 'give'), 'nsubj'), (('can', 'give'), 'aux'), (('give', 'offering'), 'acl:relcl'), (('you', 'give'), 'iobj'), (('the', 'ability'), 'det'), (('ability', 'give'), 'obj'), (('to', 'use'), 'mark'), (('use', 'ability'), 'acl'), (('these', 'capabilities'), 'det'), (('capabilities', 'use'), 'obj'), (('without', 'having'), 'mark'), (('having', 'use'), 'advcl'), (('to', 'set'), 'mark'), (('set', 'having'), 'xcomp'), (('up', 'set'), 'compound:prt'), (('a', 'department'), 'det'), (('complete', 'department'), 'amod'), (('internal', 'department'), 'amod'), (('department', 'set'), 'obj'), (('.', 'make'), 'punct')]

 Named Entites are: 
>> [('IBM Garage', 'ORG')]

================================ Paragraph 199 =================================

IBM Services     13 


------------------- Sentence 1 -------------------

 IBM Services     13 

Tokens are: 
>> ['IBM', 'Services', '13'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('Services', 'PROPN'), ('13', 'NUM')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('Services', 'NNPS'), ('13', 'CD')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('Services', 'Service'), ('13', '13')] 

 Dependency tags are: 
>> [(('IBM', 'Services'), 'compound'), (('Services', 'root'), 'root'), (('13', 'Services'), 'nummod')]

 Named Entites are: 
>> [('IBM Services     13', 'ORG')]

================================ Paragraph 200 =================================

Recommendation: Before starting an AI project, you should  evaluate the capabilities you currently have inhouse, and  then define the cost you’ll occur acquiring the capabilities  needed to close any gaps. Then you can define whether you  want to hire these capabilities internally or use an external  experienced resource to access the required capabilities. 


------------------- Sentence 1 -------------------

 Recommendation: Before starting an AI project, you should  evaluate the capabilities you currently have inhouse, and  then define the cost you’ll occur acquiring the capabilities  needed to close any gaps. 

Tokens are: 
>> ['Recommendation', ':', 'Before', 'starting', 'an', 'AI', 'project', ',', 'you', 'should', 'evaluate', 'the', 'capabilities', 'you', 'currently', 'have', 'inhouse', ',', 'and', 'then', 'define', 'the', 'cost', 'you', '’ll', 'occur', 'acquiring', 'the', 'capabilities', 'needed', 'to', 'close', 'any', 'gaps', '.'] 

 UPOS tags are: 
>> [('Recommendation', 'NOUN'), (':', 'PUNCT'), ('Before', 'SCONJ'), ('starting', 'VERB'), ('an', 'DET'), ('AI', 'NOUN'), ('project', 'NOUN'), (',', 'PUNCT'), ('you', 'PRON'), ('should', 'AUX'), ('evaluate', 'VERB'), ('the', 'DET'), ('capabilities', 'NOUN'), ('you', 'PRON'), ('currently', 'ADV'), ('have', 'VERB'), ('inhouse', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('then', 'ADV'), ('define', 'VERB'), ('the', 'DET'), ('cost', 'NOUN'), ('you', 'PRON'), ('’ll', 'AUX'), ('occur', 'VERB'), ('acquiring', 'VERB'), ('the', 'DET'), ('capabilities', 'NOUN'), ('needed', 'VERB'), ('to', 'PART'), ('close', 'VERB'), ('any', 'DET'), ('gaps', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Recommendation', 'NN'), (':', ':'), ('Before', 'IN'), ('starting', 'VBG'), ('an', 'DT'), ('AI', 'NN'), ('project', 'NN'), (',', ','), ('you', 'PRP'), ('should', 'MD'), ('evaluate', 'VB'), ('the', 'DT'), ('capabilities', 'NNS'), ('you', 'PRP'), ('currently', 'RB'), ('have', 'VBP'), ('inhouse', 'NN'), (',', ','), ('and', 'CC'), ('then', 'RB'), ('define', 'VB'), ('the', 'DT'), ('cost', 'NN'), ('you', 'PRP'), ('’ll', 'MD'), ('occur', 'VB'), ('acquiring', 'VBG'), ('the', 'DT'), ('capabilities', 'NNS'), ('needed', 'VBN'), ('to', 'TO'), ('close', 'VB'), ('any', 'DT'), ('gaps', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Recommendation', 'recommendation'), (':', ':'), ('Before', 'before'), ('starting', 'start'), ('an', 'a'), ('AI', 'ai'), ('project', 'project'), (',', ','), ('you', 'you'), ('should', 'should'), ('evaluate', 'evaluate'), ('the', 'the'), ('capabilities', 'capability'), ('you', 'you'), ('currently', 'currently'), ('have', 'have'), ('inhouse', 'inhouse'), (',', ','), ('and', 'and'), ('then', 'then'), ('define', 'define'), ('the', 'the'), ('cost', 'cost'), ('you', 'you'), ('’ll', 'will'), ('occur', 'occur'), ('acquiring', 'acquire'), ('the', 'the'), ('capabilities', 'capability'), ('needed', 'need'), ('to', 'to'), ('close', 'close'), ('any', 'any'), ('gaps', 'gap'), ('.', '.')] 

 Dependency tags are: 
>> [(('Recommendation', 'root'), 'root'), ((':', 'Recommendation'), 'punct'), (('Before', 'starting'), 'mark'), (('starting', 'evaluate'), 'advcl'), (('an', 'project'), 'det'), (('AI', 'project'), 'compound'), (('project', 'starting'), 'obj'), ((',', 'evaluate'), 'punct'), (('you', 'evaluate'), 'nsubj'), (('should', 'evaluate'), 'aux'), (('evaluate', 'Recommendation'), 'appos'), (('the', 'capabilities'), 'det'), (('capabilities', 'evaluate'), 'obj'), (('you', 'have'), 'nsubj'), (('currently', 'have'), 'advmod'), (('have', 'capabilities'), 'acl:relcl'), (('inhouse', 'have'), 'obj'), ((',', 'define'), 'punct'), (('and', 'define'), 'cc'), (('then', 'define'), 'advmod'), (('define', 'evaluate'), 'conj'), (('the', 'cost'), 'det'), (('cost', 'define'), 'obj'), (('you', 'occur'), 'nsubj'), (('’ll', 'occur'), 'aux'), (('occur', 'cost'), 'acl:relcl'), (('acquiring', 'occur'), 'xcomp'), (('the', 'capabilities'), 'det'), (('capabilities', 'acquiring'), 'obj'), (('needed', 'capabilities'), 'acl'), (('to', 'close'), 'mark'), (('close', 'needed'), 'xcomp'), (('any', 'gaps'), 'det'), (('gaps', 'close'), 'obj'), (('.', 'Recommendation'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Then you can define whether you  want to hire these capabilities internally or use an external  experienced resource to access the required capabilities. 

Tokens are: 
>> ['Then', 'you', 'can', 'define', 'whether', 'you', 'want', 'to', 'hire', 'these', 'capabilities', 'internally', 'or', 'use', 'an', 'external', 'experienced', 'resource', 'to', 'access', 'the', 'required', 'capabilities', '.'] 

 UPOS tags are: 
>> [('Then', 'ADV'), ('you', 'PRON'), ('can', 'AUX'), ('define', 'VERB'), ('whether', 'SCONJ'), ('you', 'PRON'), ('want', 'VERB'), ('to', 'PART'), ('hire', 'VERB'), ('these', 'DET'), ('capabilities', 'NOUN'), ('internally', 'ADV'), ('or', 'CCONJ'), ('use', 'VERB'), ('an', 'DET'), ('external', 'ADJ'), ('experienced', 'VERB'), ('resource', 'NOUN'), ('to', 'PART'), ('access', 'VERB'), ('the', 'DET'), ('required', 'VERB'), ('capabilities', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Then', 'RB'), ('you', 'PRP'), ('can', 'MD'), ('define', 'VB'), ('whether', 'IN'), ('you', 'PRP'), ('want', 'VBP'), ('to', 'TO'), ('hire', 'VB'), ('these', 'DT'), ('capabilities', 'NNS'), ('internally', 'RB'), ('or', 'CC'), ('use', 'VB'), ('an', 'DT'), ('external', 'JJ'), ('experienced', 'VBN'), ('resource', 'NN'), ('to', 'TO'), ('access', 'VB'), ('the', 'DT'), ('required', 'VBN'), ('capabilities', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Then', 'then'), ('you', 'you'), ('can', 'can'), ('define', 'define'), ('whether', 'whether'), ('you', 'you'), ('want', 'want'), ('to', 'to'), ('hire', 'hire'), ('these', 'this'), ('capabilities', 'capability'), ('internally', 'internally'), ('or', 'or'), ('use', 'use'), ('an', 'a'), ('external', 'external'), ('experienced', 'experience'), ('resource', 'resource'), ('to', 'to'), ('access', 'access'), ('the', 'the'), ('required', 'require'), ('capabilities', 'capability'), ('.', '.')] 

 Dependency tags are: 
>> [(('Then', 'define'), 'advmod'), (('you', 'define'), 'nsubj'), (('can', 'define'), 'aux'), (('define', 'root'), 'root'), (('whether', 'want'), 'mark'), (('you', 'want'), 'nsubj'), (('want', 'define'), 'ccomp'), (('to', 'hire'), 'mark'), (('hire', 'want'), 'xcomp'), (('these', 'capabilities'), 'det'), (('capabilities', 'hire'), 'obj'), (('internally', 'hire'), 'advmod'), (('or', 'use'), 'cc'), (('use', 'hire'), 'conj'), (('an', 'resource'), 'det'), (('external', 'resource'), 'amod'), (('experienced', 'resource'), 'amod'), (('resource', 'use'), 'obj'), (('to', 'access'), 'mark'), (('access', 'use'), 'advcl'), (('the', 'capabilities'), 'det'), (('required', 'capabilities'), 'amod'), (('capabilities', 'access'), 'obj'), (('.', 'define'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 201 =================================

Scalability  Pitfalls: To properly scale the correct architecture,  integration and employees that know how to use them  need be in place. Many data scientists believe that the  research and development (R&D) of a data science project  is similar to a scaled IT implementation, yet the two are  very different. Also, because there is increasing enterprise  demand for AI, organizations want to analyze large amounts  of data. This can require quite a bit of time to train an  algorithm—days or even weeks depending on the amount  of data involved. We still encounter data scientists trying  to perform this function on their laptops.9  


------------------- Sentence 1 -------------------

 Scalability  Pitfalls: 

Tokens are: 
>> ['Scalability', 'Pitfalls', ':'] 

 UPOS tags are: 
>> [('Scalability', 'NOUN'), ('Pitfalls', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Scalability', 'NN'), ('Pitfalls', 'NNS'), (':', ':')] 

 Lemmas are: 
>> [('Scalability', 'scalability'), ('Pitfalls', 'pitfall'), (':', ':')] 

 Dependency tags are: 
>> [(('Scalability', 'Pitfalls'), 'compound'), (('Pitfalls', 'root'), 'root'), ((':', 'Pitfalls'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 To properly scale the correct architecture,  integration and employees that know how to use them  need be in place. 

Tokens are: 
>> ['To', 'properly', 'scale', 'the', 'correct', 'architecture', ',', 'integration', 'and', 'employees', 'that', 'know', 'how', 'to', 'use', 'them', 'need', 'be', 'in', 'place', '.'] 

 UPOS tags are: 
>> [('To', 'PART'), ('properly', 'ADV'), ('scale', 'VERB'), ('the', 'DET'), ('correct', 'ADJ'), ('architecture', 'NOUN'), (',', 'PUNCT'), ('integration', 'NOUN'), ('and', 'CCONJ'), ('employees', 'NOUN'), ('that', 'PRON'), ('know', 'VERB'), ('how', 'SCONJ'), ('to', 'PART'), ('use', 'VERB'), ('them', 'PRON'), ('need', 'VERB'), ('be', 'AUX'), ('in', 'ADP'), ('place', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('To', 'TO'), ('properly', 'RB'), ('scale', 'VB'), ('the', 'DT'), ('correct', 'JJ'), ('architecture', 'NN'), (',', ','), ('integration', 'NN'), ('and', 'CC'), ('employees', 'NNS'), ('that', 'WDT'), ('know', 'VBP'), ('how', 'WRB'), ('to', 'TO'), ('use', 'VB'), ('them', 'PRP'), ('need', 'VB'), ('be', 'VB'), ('in', 'IN'), ('place', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('To', 'to'), ('properly', 'properly'), ('scale', 'scale'), ('the', 'the'), ('correct', 'correct'), ('architecture', 'architecture'), (',', ','), ('integration', 'integration'), ('and', 'and'), ('employees', 'employee'), ('that', 'that'), ('know', 'know'), ('how', 'how'), ('to', 'to'), ('use', 'use'), ('them', 'they'), ('need', 'need'), ('be', 'be'), ('in', 'in'), ('place', 'place'), ('.', '.')] 

 Dependency tags are: 
>> [(('To', 'scale'), 'mark'), (('properly', 'scale'), 'advmod'), (('scale', 'place'), 'advcl'), (('the', 'architecture'), 'det'), (('correct', 'architecture'), 'amod'), (('architecture', 'scale'), 'obj'), ((',', 'integration'), 'punct'), (('integration', 'architecture'), 'conj'), (('and', 'employees'), 'cc'), (('employees', 'architecture'), 'conj'), (('that', 'know'), 'nsubj'), (('know', 'architecture'), 'acl:relcl'), (('how', 'use'), 'mark'), (('to', 'use'), 'mark'), (('use', 'know'), 'xcomp'), (('them', 'use'), 'obj'), (('need', 'place'), 'nsubj'), (('be', 'place'), 'cop'), (('in', 'place'), 'case'), (('place', 'root'), 'root'), (('.', 'place'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Many data scientists believe that the  research and development (R&D) of a data science project  is similar to a scaled IT implementation, yet the two are  very different. 

Tokens are: 
>> ['Many', 'data', 'scientists', 'believe', 'that', 'the', 'research', 'and', 'development', '(', 'R&D', ')', 'of', 'a', 'data', 'science', 'project', 'is', 'similar', 'to', 'a', 'scaled', 'IT', 'implementation', ',', 'yet', 'the', 'two', 'are', 'very', 'different', '.'] 

 UPOS tags are: 
>> [('Many', 'ADJ'), ('data', 'NOUN'), ('scientists', 'NOUN'), ('believe', 'VERB'), ('that', 'SCONJ'), ('the', 'DET'), ('research', 'NOUN'), ('and', 'CCONJ'), ('development', 'NOUN'), ('(', 'PUNCT'), ('R&D', 'NOUN'), (')', 'PUNCT'), ('of', 'ADP'), ('a', 'DET'), ('data', 'NOUN'), ('science', 'NOUN'), ('project', 'NOUN'), ('is', 'AUX'), ('similar', 'ADJ'), ('to', 'ADP'), ('a', 'DET'), ('scaled', 'VERB'), ('IT', 'NOUN'), ('implementation', 'NOUN'), (',', 'PUNCT'), ('yet', 'CCONJ'), ('the', 'DET'), ('two', 'NUM'), ('are', 'AUX'), ('very', 'ADV'), ('different', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Many', 'JJ'), ('data', 'NNS'), ('scientists', 'NNS'), ('believe', 'VBP'), ('that', 'IN'), ('the', 'DT'), ('research', 'NN'), ('and', 'CC'), ('development', 'NN'), ('(', '-LRB-'), ('R&D', 'NN'), (')', '-RRB-'), ('of', 'IN'), ('a', 'DT'), ('data', 'NN'), ('science', 'NN'), ('project', 'NN'), ('is', 'VBZ'), ('similar', 'JJ'), ('to', 'IN'), ('a', 'DT'), ('scaled', 'VBN'), ('IT', 'NN'), ('implementation', 'NN'), (',', ','), ('yet', 'CC'), ('the', 'DT'), ('two', 'CD'), ('are', 'VBP'), ('very', 'RB'), ('different', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('Many', 'many'), ('data', 'datum'), ('scientists', 'scientist'), ('believe', 'believe'), ('that', 'that'), ('the', 'the'), ('research', 'research'), ('and', 'and'), ('development', 'development'), ('(', '('), ('R&D', 'R&D'), (')', ')'), ('of', 'of'), ('a', 'a'), ('data', 'datum'), ('science', 'science'), ('project', 'project'), ('is', 'be'), ('similar', 'similar'), ('to', 'to'), ('a', 'a'), ('scaled', 'scale'), ('IT', 'it'), ('implementation', 'implementation'), (',', ','), ('yet', 'yet'), ('the', 'the'), ('two', 'two'), ('are', 'be'), ('very', 'very'), ('different', 'different'), ('.', '.')] 

 Dependency tags are: 
>> [(('Many', 'scientists'), 'amod'), (('data', 'scientists'), 'compound'), (('scientists', 'believe'), 'nsubj'), (('believe', 'root'), 'root'), (('that', 'similar'), 'mark'), (('the', 'research'), 'det'), (('research', 'similar'), 'nsubj'), (('and', 'development'), 'cc'), (('development', 'research'), 'conj'), (('(', 'R&D'), 'punct'), (('R&D', 'research'), 'appos'), ((')', 'R&D'), 'punct'), (('of', 'project'), 'case'), (('a', 'project'), 'det'), (('data', 'project'), 'compound'), (('science', 'project'), 'compound'), (('project', 'research'), 'nmod'), (('is', 'similar'), 'cop'), (('similar', 'believe'), 'ccomp'), (('to', 'implementation'), 'case'), (('a', 'implementation'), 'det'), (('scaled', 'implementation'), 'amod'), (('IT', 'implementation'), 'compound'), (('implementation', 'similar'), 'obl'), ((',', 'different'), 'punct'), (('yet', 'different'), 'cc'), (('the', 'two'), 'det'), (('two', 'different'), 'nsubj'), (('are', 'different'), 'cop'), (('very', 'different'), 'advmod'), (('different', 'similar'), 'conj'), (('.', 'believe'), 'punct')]

 Named Entites are: 
>> [('two', 'CARDINAL')]

------------------- Sentence 4 -------------------

 Also, because there is increasing enterprise  demand for AI, organizations want to analyze large amounts  of data. 

Tokens are: 
>> ['Also', ',', 'because', 'there', 'is', 'increasing', 'enterprise', 'demand', 'for', 'AI', ',', 'organizations', 'want', 'to', 'analyze', 'large', 'amounts', 'of', 'data', '.'] 

 UPOS tags are: 
>> [('Also', 'ADV'), (',', 'PUNCT'), ('because', 'SCONJ'), ('there', 'PRON'), ('is', 'VERB'), ('increasing', 'VERB'), ('enterprise', 'ADJ'), ('demand', 'NOUN'), ('for', 'ADP'), ('AI', 'NOUN'), (',', 'PUNCT'), ('organizations', 'NOUN'), ('want', 'VERB'), ('to', 'PART'), ('analyze', 'VERB'), ('large', 'ADJ'), ('amounts', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Also', 'RB'), (',', ','), ('because', 'IN'), ('there', 'EX'), ('is', 'VBZ'), ('increasing', 'VBG'), ('enterprise', 'JJ'), ('demand', 'NN'), ('for', 'IN'), ('AI', 'NN'), (',', ','), ('organizations', 'NNS'), ('want', 'VBP'), ('to', 'TO'), ('analyze', 'VB'), ('large', 'JJ'), ('amounts', 'NNS'), ('of', 'IN'), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Also', 'also'), (',', ','), ('because', 'because'), ('there', 'there'), ('is', 'be'), ('increasing', 'increase'), ('enterprise', 'enterprise'), ('demand', 'demand'), ('for', 'for'), ('AI', 'ai'), (',', ','), ('organizations', 'organization'), ('want', 'want'), ('to', 'to'), ('analyze', 'analyze'), ('large', 'large'), ('amounts', 'amount'), ('of', 'of'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('Also', 'want'), 'advmod'), ((',', 'want'), 'punct'), (('because', 'is'), 'mark'), (('there', 'is'), 'expl'), (('is', 'want'), 'advcl'), (('increasing', 'demand'), 'amod'), (('enterprise', 'demand'), 'amod'), (('demand', 'is'), 'nsubj'), (('for', 'AI'), 'case'), (('AI', 'demand'), 'nmod'), ((',', 'want'), 'punct'), (('organizations', 'want'), 'nsubj'), (('want', 'root'), 'root'), (('to', 'analyze'), 'mark'), (('analyze', 'want'), 'xcomp'), (('large', 'amounts'), 'amod'), (('amounts', 'analyze'), 'obj'), (('of', 'data'), 'case'), (('data', 'amounts'), 'nmod'), (('.', 'want'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 This can require quite a bit of time to train an  algorithm—days or even weeks depending on the amount  of data involved. 

Tokens are: 
>> ['This', 'can', 'require', 'quite', 'a', 'bit', 'of', 'time', 'to', 'train', 'an', 'algorithm', '—', 'days', 'or', 'even', 'weeks', 'depending', 'on', 'the', 'amount', 'of', 'data', 'involved', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('can', 'AUX'), ('require', 'VERB'), ('quite', 'DET'), ('a', 'DET'), ('bit', 'NOUN'), ('of', 'ADP'), ('time', 'NOUN'), ('to', 'PART'), ('train', 'VERB'), ('an', 'DET'), ('algorithm', 'NOUN'), ('—', 'PUNCT'), ('days', 'NOUN'), ('or', 'CCONJ'), ('even', 'ADV'), ('weeks', 'NOUN'), ('depending', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('amount', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), ('involved', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('can', 'MD'), ('require', 'VB'), ('quite', 'PDT'), ('a', 'DT'), ('bit', 'NN'), ('of', 'IN'), ('time', 'NN'), ('to', 'TO'), ('train', 'VB'), ('an', 'DT'), ('algorithm', 'NN'), ('—', ':'), ('days', 'NNS'), ('or', 'CC'), ('even', 'RB'), ('weeks', 'NNS'), ('depending', 'VBG'), ('on', 'IN'), ('the', 'DT'), ('amount', 'NN'), ('of', 'IN'), ('data', 'NNS'), ('involved', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('can', 'can'), ('require', 'require'), ('quite', 'quite'), ('a', 'a'), ('bit', 'bit'), ('of', 'of'), ('time', 'time'), ('to', 'to'), ('train', 'train'), ('an', 'a'), ('algorithm', 'algorithm'), ('—', '—'), ('days', 'day'), ('or', 'or'), ('even', 'even'), ('weeks', 'week'), ('depending', 'depend'), ('on', 'on'), ('the', 'the'), ('amount', 'amount'), ('of', 'of'), ('data', 'datum'), ('involved', 'involve'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'require'), 'nsubj'), (('can', 'require'), 'aux'), (('require', 'root'), 'root'), (('quite', 'bit'), 'det:predet'), (('a', 'bit'), 'det'), (('bit', 'require'), 'obj'), (('of', 'time'), 'case'), (('time', 'bit'), 'nmod'), (('to', 'train'), 'mark'), (('train', 'require'), 'advcl'), (('an', 'algorithm'), 'det'), (('algorithm', 'train'), 'obj'), (('—', 'days'), 'punct'), (('days', 'algorithm'), 'appos'), (('or', 'weeks'), 'cc'), (('even', 'weeks'), 'advmod'), (('weeks', 'days'), 'conj'), (('depending', 'amount'), 'case'), (('on', 'depending'), 'fixed'), (('the', 'amount'), 'det'), (('amount', 'train'), 'obl'), (('of', 'data'), 'case'), (('data', 'amount'), 'nmod'), (('involved', 'data'), 'acl'), (('.', 'require'), 'punct')]

 Named Entites are: 
>> [('even weeks', 'DATE')]

------------------- Sentence 6 -------------------

 We still encounter data scientists trying  to perform this function on their laptops. 

Tokens are: 
>> ['We', 'still', 'encounter', 'data', 'scientists', 'trying', 'to', 'perform', 'this', 'function', 'on', 'their', 'laptops', '.'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('still', 'ADV'), ('encounter', 'VERB'), ('data', 'NOUN'), ('scientists', 'NOUN'), ('trying', 'VERB'), ('to', 'PART'), ('perform', 'VERB'), ('this', 'DET'), ('function', 'NOUN'), ('on', 'ADP'), ('their', 'PRON'), ('laptops', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('still', 'RB'), ('encounter', 'VBP'), ('data', 'NN'), ('scientists', 'NNS'), ('trying', 'VBG'), ('to', 'TO'), ('perform', 'VB'), ('this', 'DT'), ('function', 'NN'), ('on', 'IN'), ('their', 'PRP$'), ('laptops', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('still', 'still'), ('encounter', 'encounter'), ('data', 'datum'), ('scientists', 'scientist'), ('trying', 'try'), ('to', 'to'), ('perform', 'perform'), ('this', 'this'), ('function', 'function'), ('on', 'on'), ('their', 'they'), ('laptops', 'laptop'), ('.', '.')] 

 Dependency tags are: 
>> [(('We', 'encounter'), 'nsubj'), (('still', 'encounter'), 'advmod'), (('encounter', 'root'), 'root'), (('data', 'scientists'), 'compound'), (('scientists', 'encounter'), 'obj'), (('trying', 'scientists'), 'acl'), (('to', 'perform'), 'mark'), (('perform', 'trying'), 'xcomp'), (('this', 'function'), 'det'), (('function', 'perform'), 'obj'), (('on', 'laptops'), 'case'), (('their', 'laptops'), 'nmod:poss'), (('laptops', 'perform'), 'obl'), (('.', 'encounter'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 7 -------------------

 9 

Tokens are: 
>> ['9'] 

 UPOS tags are: 
>> [('9', 'X')] 

 XPOS tags are: 
>> [('9', 'LS')] 

 Lemmas are: 
>> [('9', '9')] 

 Dependency tags are: 
>> [(('9', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 202 =================================

Recommendation: Develop a plan to set up the correct   AI architecture, a platform to deploy to, a data integration  strategy and properly trained data scientists. 


------------------- Sentence 1 -------------------

 Recommendation: Develop a plan to set up the correct   AI architecture, a platform to deploy to, a data integration  strategy and properly trained data scientists. 

Tokens are: 
>> ['Recommendation', ':', 'Develop', 'a', 'plan', 'to', 'set', 'up', 'the', 'correct', 'AI', 'architecture', ',', 'a', 'platform', 'to', 'deploy', 'to', ',', 'a', 'data', 'integration', 'strategy', 'and', 'properly', 'trained', 'data', 'scientists', '.'] 

 UPOS tags are: 
>> [('Recommendation', 'NOUN'), (':', 'PUNCT'), ('Develop', 'VERB'), ('a', 'DET'), ('plan', 'NOUN'), ('to', 'PART'), ('set', 'VERB'), ('up', 'ADP'), ('the', 'DET'), ('correct', 'ADJ'), ('AI', 'NOUN'), ('architecture', 'NOUN'), (',', 'PUNCT'), ('a', 'DET'), ('platform', 'NOUN'), ('to', 'PART'), ('deploy', 'VERB'), ('to', 'ADP'), (',', 'PUNCT'), ('a', 'DET'), ('data', 'NOUN'), ('integration', 'NOUN'), ('strategy', 'NOUN'), ('and', 'CCONJ'), ('properly', 'ADV'), ('trained', 'VERB'), ('data', 'NOUN'), ('scientists', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Recommendation', 'NN'), (':', ':'), ('Develop', 'VB'), ('a', 'DT'), ('plan', 'NN'), ('to', 'TO'), ('set', 'VB'), ('up', 'RP'), ('the', 'DT'), ('correct', 'JJ'), ('AI', 'NN'), ('architecture', 'NN'), (',', ','), ('a', 'DT'), ('platform', 'NN'), ('to', 'TO'), ('deploy', 'VB'), ('to', 'IN'), (',', ','), ('a', 'DT'), ('data', 'NN'), ('integration', 'NN'), ('strategy', 'NN'), ('and', 'CC'), ('properly', 'RB'), ('trained', 'VBN'), ('data', 'NN'), ('scientists', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Recommendation', 'recommendation'), (':', ':'), ('Develop', 'develop'), ('a', 'a'), ('plan', 'plan'), ('to', 'to'), ('set', 'set'), ('up', 'up'), ('the', 'the'), ('correct', 'correct'), ('AI', 'ai'), ('architecture', 'architecture'), (',', ','), ('a', 'a'), ('platform', 'platform'), ('to', 'to'), ('deploy', 'deploy'), ('to', 'to'), (',', ','), ('a', 'a'), ('data', 'datum'), ('integration', 'integration'), ('strategy', 'strategy'), ('and', 'and'), ('properly', 'properly'), ('trained', 'train'), ('data', 'datum'), ('scientists', 'scientist'), ('.', '.')] 

 Dependency tags are: 
>> [(('Recommendation', 'root'), 'root'), ((':', 'Recommendation'), 'punct'), (('Develop', 'Recommendation'), 'appos'), (('a', 'plan'), 'det'), (('plan', 'Develop'), 'obj'), (('to', 'set'), 'mark'), (('set', 'plan'), 'acl'), (('up', 'set'), 'compound:prt'), (('the', 'architecture'), 'det'), (('correct', 'architecture'), 'amod'), (('AI', 'architecture'), 'compound'), (('architecture', 'set'), 'obj'), ((',', 'platform'), 'punct'), (('a', 'platform'), 'det'), (('platform', 'architecture'), 'appos'), (('to', 'deploy'), 'mark'), (('deploy', 'platform'), 'acl'), (('to', 'strategy'), 'case'), ((',', 'strategy'), 'punct'), (('a', 'strategy'), 'det'), (('data', 'integration'), 'compound'), (('integration', 'strategy'), 'compound'), (('strategy', 'deploy'), 'obl'), (('and', 'scientists'), 'cc'), (('properly', 'trained'), 'advmod'), (('trained', 'scientists'), 'amod'), (('data', 'scientists'), 'compound'), (('scientists', 'strategy'), 'conj'), (('.', 'Recommendation'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 203 =================================

Not enough (available) data  Pitfalls: Data availability depends on the company and on  how it stores data. Some organizations have the data but  don’t have it readily available. Large corporations are  challenged to locate and keep track of the right data.  Smaller companies may be challenged by the amount of  data they produce.  


------------------- Sentence 1 -------------------

 Not enough (available) data  Pitfalls: Data availability depends on the company and on  how it stores data. 

Tokens are: 
>> ['Not', 'enough', '(', 'available', ')', 'data', 'Pitfalls', ':', 'Data', 'availability', 'depends', 'on', 'the', 'company', 'and', 'on', 'how', 'it', 'stores', 'data', '.'] 

 UPOS tags are: 
>> [('Not', 'PART'), ('enough', 'ADJ'), ('(', 'PUNCT'), ('available', 'ADJ'), (')', 'PUNCT'), ('data', 'NOUN'), ('Pitfalls', 'NOUN'), (':', 'PUNCT'), ('Data', 'NOUN'), ('availability', 'NOUN'), ('depends', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('company', 'NOUN'), ('and', 'CCONJ'), ('on', 'ADP'), ('how', 'SCONJ'), ('it', 'PRON'), ('stores', 'VERB'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Not', 'RB'), ('enough', 'JJ'), ('(', '-LRB-'), ('available', 'JJ'), (')', '-RRB-'), ('data', 'NN'), ('Pitfalls', 'NNS'), (':', ':'), ('Data', 'NN'), ('availability', 'NN'), ('depends', 'VBZ'), ('on', 'IN'), ('the', 'DT'), ('company', 'NN'), ('and', 'CC'), ('on', 'IN'), ('how', 'WRB'), ('it', 'PRP'), ('stores', 'VBZ'), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Not', 'not'), ('enough', 'enough'), ('(', '('), ('available', 'available'), (')', ')'), ('data', 'datum'), ('Pitfalls', 'pitfall'), (':', ':'), ('Data', 'data'), ('availability', 'availability'), ('depends', 'depend'), ('on', 'on'), ('the', 'the'), ('company', 'company'), ('and', 'and'), ('on', 'on'), ('how', 'how'), ('it', 'it'), ('stores', 'store'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('Not', 'enough'), 'advmod'), (('enough', 'Pitfalls'), 'amod'), (('(', 'available'), 'punct'), (('available', 'Pitfalls'), 'amod'), ((')', 'available'), 'punct'), (('data', 'Pitfalls'), 'compound'), (('Pitfalls', 'root'), 'root'), ((':', 'depends'), 'punct'), (('Data', 'availability'), 'compound'), (('availability', 'depends'), 'nsubj'), (('depends', 'Pitfalls'), 'parataxis'), (('on', 'company'), 'case'), (('the', 'company'), 'det'), (('company', 'depends'), 'obl'), (('and', 'stores'), 'cc'), (('on', 'how'), 'case'), (('how', 'stores'), 'obl'), (('it', 'stores'), 'nsubj'), (('stores', 'depends'), 'conj'), (('data', 'stores'), 'obj'), (('.', 'Pitfalls'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Some organizations have the data but  don’t have it readily available. 

Tokens are: 
>> ['Some', 'organizations', 'have', 'the', 'data', 'but', 'do', 'n’t', 'have', 'it', 'readily', 'available', '.'] 

 UPOS tags are: 
>> [('Some', 'DET'), ('organizations', 'NOUN'), ('have', 'VERB'), ('the', 'DET'), ('data', 'NOUN'), ('but', 'CCONJ'), ('do', 'AUX'), ('n’t', 'PART'), ('have', 'VERB'), ('it', 'PRON'), ('readily', 'ADV'), ('available', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Some', 'DT'), ('organizations', 'NNS'), ('have', 'VBP'), ('the', 'DT'), ('data', 'NNS'), ('but', 'CC'), ('do', 'VBP'), ('n’t', 'RB'), ('have', 'VB'), ('it', 'PRP'), ('readily', 'RB'), ('available', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('Some', 'some'), ('organizations', 'organization'), ('have', 'have'), ('the', 'the'), ('data', 'datum'), ('but', 'but'), ('do', 'do'), ('n’t', 'not'), ('have', 'have'), ('it', 'it'), ('readily', 'readily'), ('available', 'available'), ('.', '.')] 

 Dependency tags are: 
>> [(('Some', 'organizations'), 'det'), (('organizations', 'have'), 'nsubj'), (('have', 'root'), 'root'), (('the', 'data'), 'det'), (('data', 'have'), 'obj'), (('but', 'have'), 'cc'), (('do', 'have'), 'aux'), (('n’t', 'have'), 'advmod'), (('have', 'have'), 'conj'), (('it', 'have'), 'obj'), (('readily', 'available'), 'advmod'), (('available', 'have'), 'xcomp'), (('.', 'have'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Large corporations are  challenged to locate and keep track of the right data. 

Tokens are: 
>> ['Large', 'corporations', 'are', 'challenged', 'to', 'locate', 'and', 'keep', 'track', 'of', 'the', 'right', 'data', '.'] 

 UPOS tags are: 
>> [('Large', 'ADJ'), ('corporations', 'NOUN'), ('are', 'AUX'), ('challenged', 'VERB'), ('to', 'PART'), ('locate', 'VERB'), ('and', 'CCONJ'), ('keep', 'VERB'), ('track', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('right', 'ADJ'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Large', 'JJ'), ('corporations', 'NNS'), ('are', 'VBP'), ('challenged', 'VBN'), ('to', 'TO'), ('locate', 'VB'), ('and', 'CC'), ('keep', 'VB'), ('track', 'NN'), ('of', 'IN'), ('the', 'DT'), ('right', 'JJ'), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Large', 'large'), ('corporations', 'corporation'), ('are', 'be'), ('challenged', 'challenge'), ('to', 'to'), ('locate', 'locate'), ('and', 'and'), ('keep', 'keep'), ('track', 'track'), ('of', 'of'), ('the', 'the'), ('right', 'right'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('Large', 'corporations'), 'amod'), (('corporations', 'challenged'), 'nsubj:pass'), (('are', 'challenged'), 'aux:pass'), (('challenged', 'root'), 'root'), (('to', 'locate'), 'mark'), (('locate', 'challenged'), 'xcomp'), (('and', 'keep'), 'cc'), (('keep', 'locate'), 'conj'), (('track', 'keep'), 'obj'), (('of', 'data'), 'case'), (('the', 'data'), 'det'), (('right', 'data'), 'amod'), (('data', 'track'), 'nmod'), (('.', 'challenged'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Smaller companies may be challenged by the amount of  data they produce. 

Tokens are: 
>> ['Smaller', 'companies', 'may', 'be', 'challenged', 'by', 'the', 'amount', 'of', 'data', 'they', 'produce', '.'] 

 UPOS tags are: 
>> [('Smaller', 'ADJ'), ('companies', 'NOUN'), ('may', 'AUX'), ('be', 'AUX'), ('challenged', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('amount', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), ('they', 'PRON'), ('produce', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Smaller', 'JJR'), ('companies', 'NNS'), ('may', 'MD'), ('be', 'VB'), ('challenged', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('amount', 'NN'), ('of', 'IN'), ('data', 'NNS'), ('they', 'PRP'), ('produce', 'VBP'), ('.', '.')] 

 Lemmas are: 
>> [('Smaller', 'small'), ('companies', 'company'), ('may', 'may'), ('be', 'be'), ('challenged', 'challenge'), ('by', 'by'), ('the', 'the'), ('amount', 'amount'), ('of', 'of'), ('data', 'datum'), ('they', 'they'), ('produce', 'produce'), ('.', '.')] 

 Dependency tags are: 
>> [(('Smaller', 'companies'), 'amod'), (('companies', 'challenged'), 'nsubj:pass'), (('may', 'challenged'), 'aux'), (('be', 'challenged'), 'aux:pass'), (('challenged', 'root'), 'root'), (('by', 'amount'), 'case'), (('the', 'amount'), 'det'), (('amount', 'challenged'), 'obl'), (('of', 'data'), 'case'), (('data', 'amount'), 'nmod'), (('they', 'produce'), 'nsubj'), (('produce', 'data'), 'acl:relcl'), (('.', 'challenged'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 204 =================================

Recommendation: Not all problems need machine learning  and AI. If you find yourself in a situation where you don’t  have enough data, you should carefully consider if you  should launch your product using machine learning. If you  choose that option but don’t have enough data, you can  overcome the problem by acquiring external data or by  using simpler models. 


------------------- Sentence 1 -------------------

 Recommendation: Not all problems need machine learning  and AI. 

Tokens are: 
>> ['Recommendation', ':', 'Not', 'all', 'problems', 'need', 'machine', 'learning', 'and', 'AI', '.'] 

 UPOS tags are: 
>> [('Recommendation', 'NOUN'), (':', 'PUNCT'), ('Not', 'ADV'), ('all', 'DET'), ('problems', 'NOUN'), ('need', 'VERB'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('and', 'CCONJ'), ('AI', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Recommendation', 'NN'), (':', ':'), ('Not', 'RB'), ('all', 'DT'), ('problems', 'NNS'), ('need', 'VBP'), ('machine', 'NN'), ('learning', 'NN'), ('and', 'CC'), ('AI', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Recommendation', 'recommendation'), (':', ':'), ('Not', 'not'), ('all', 'all'), ('problems', 'problem'), ('need', 'need'), ('machine', 'machine'), ('learning', 'learning'), ('and', 'and'), ('AI', 'ai'), ('.', '.')] 

 Dependency tags are: 
>> [(('Recommendation', 'root'), 'root'), ((':', 'Recommendation'), 'punct'), (('Not', 'problems'), 'advmod'), (('all', 'problems'), 'det'), (('problems', 'need'), 'nsubj'), (('need', 'Recommendation'), 'appos'), (('machine', 'learning'), 'compound'), (('learning', 'need'), 'obj'), (('and', 'AI'), 'cc'), (('AI', 'learning'), 'conj'), (('.', 'Recommendation'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 If you find yourself in a situation where you don’t  have enough data, you should carefully consider if you  should launch your product using machine learning. 

Tokens are: 
>> ['If', 'you', 'find', 'yourself', 'in', 'a', 'situation', 'where', 'you', 'do', 'n’t', 'have', 'enough', 'data', ',', 'you', 'should', 'carefully', 'consider', 'if', 'you', 'should', 'launch', 'your', 'product', 'using', 'machine', 'learning', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('you', 'PRON'), ('find', 'VERB'), ('yourself', 'PRON'), ('in', 'ADP'), ('a', 'DET'), ('situation', 'NOUN'), ('where', 'SCONJ'), ('you', 'PRON'), ('do', 'AUX'), ('n’t', 'PART'), ('have', 'VERB'), ('enough', 'ADJ'), ('data', 'NOUN'), (',', 'PUNCT'), ('you', 'PRON'), ('should', 'AUX'), ('carefully', 'ADV'), ('consider', 'VERB'), ('if', 'SCONJ'), ('you', 'PRON'), ('should', 'AUX'), ('launch', 'VERB'), ('your', 'PRON'), ('product', 'NOUN'), ('using', 'VERB'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('you', 'PRP'), ('find', 'VBP'), ('yourself', 'PRP'), ('in', 'IN'), ('a', 'DT'), ('situation', 'NN'), ('where', 'WRB'), ('you', 'PRP'), ('do', 'VBP'), ('n’t', 'RB'), ('have', 'VB'), ('enough', 'JJ'), ('data', 'NN'), (',', ','), ('you', 'PRP'), ('should', 'MD'), ('carefully', 'RB'), ('consider', 'VB'), ('if', 'IN'), ('you', 'PRP'), ('should', 'MD'), ('launch', 'VB'), ('your', 'PRP$'), ('product', 'NN'), ('using', 'VBG'), ('machine', 'NN'), ('learning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('you', 'you'), ('find', 'find'), ('yourself', 'yourself'), ('in', 'in'), ('a', 'a'), ('situation', 'situation'), ('where', 'where'), ('you', 'you'), ('do', 'do'), ('n’t', 'not'), ('have', 'have'), ('enough', 'enough'), ('data', 'datum'), (',', ','), ('you', 'you'), ('should', 'should'), ('carefully', 'carefully'), ('consider', 'consider'), ('if', 'if'), ('you', 'you'), ('should', 'should'), ('launch', 'launch'), ('your', 'you'), ('product', 'product'), ('using', 'use'), ('machine', 'machine'), ('learning', 'learning'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'find'), 'mark'), (('you', 'find'), 'nsubj'), (('find', 'consider'), 'advcl'), (('yourself', 'find'), 'obj'), (('in', 'situation'), 'case'), (('a', 'situation'), 'det'), (('situation', 'find'), 'obl'), (('where', 'have'), 'mark'), (('you', 'have'), 'nsubj'), (('do', 'have'), 'aux'), (('n’t', 'have'), 'advmod'), (('have', 'situation'), 'acl:relcl'), (('enough', 'data'), 'amod'), (('data', 'have'), 'obj'), ((',', 'consider'), 'punct'), (('you', 'consider'), 'nsubj'), (('should', 'consider'), 'aux'), (('carefully', 'consider'), 'advmod'), (('consider', 'root'), 'root'), (('if', 'launch'), 'mark'), (('you', 'launch'), 'nsubj'), (('should', 'launch'), 'aux'), (('launch', 'consider'), 'advcl'), (('your', 'product'), 'nmod:poss'), (('product', 'launch'), 'obj'), (('using', 'launch'), 'advcl'), (('machine', 'learning'), 'compound'), (('learning', 'using'), 'obj'), (('.', 'consider'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 If you  choose that option but don’t have enough data, you can  overcome the problem by acquiring external data or by  using simpler models. 

Tokens are: 
>> ['If', 'you', 'choose', 'that', 'option', 'but', 'do', 'n’t', 'have', 'enough', 'data', ',', 'you', 'can', 'overcome', 'the', 'problem', 'by', 'acquiring', 'external', 'data', 'or', 'by', 'using', 'simpler', 'models', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('you', 'PRON'), ('choose', 'VERB'), ('that', 'DET'), ('option', 'NOUN'), ('but', 'CCONJ'), ('do', 'AUX'), ('n’t', 'PART'), ('have', 'VERB'), ('enough', 'ADJ'), ('data', 'NOUN'), (',', 'PUNCT'), ('you', 'PRON'), ('can', 'AUX'), ('overcome', 'VERB'), ('the', 'DET'), ('problem', 'NOUN'), ('by', 'SCONJ'), ('acquiring', 'VERB'), ('external', 'ADJ'), ('data', 'NOUN'), ('or', 'CCONJ'), ('by', 'SCONJ'), ('using', 'VERB'), ('simpler', 'ADJ'), ('models', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('you', 'PRP'), ('choose', 'VBP'), ('that', 'DT'), ('option', 'NN'), ('but', 'CC'), ('do', 'VBP'), ('n’t', 'RB'), ('have', 'VB'), ('enough', 'JJ'), ('data', 'NNS'), (',', ','), ('you', 'PRP'), ('can', 'MD'), ('overcome', 'VB'), ('the', 'DT'), ('problem', 'NN'), ('by', 'IN'), ('acquiring', 'VBG'), ('external', 'JJ'), ('data', 'NNS'), ('or', 'CC'), ('by', 'IN'), ('using', 'VBG'), ('simpler', 'JJR'), ('models', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('you', 'you'), ('choose', 'choose'), ('that', 'that'), ('option', 'option'), ('but', 'but'), ('do', 'do'), ('n’t', 'not'), ('have', 'have'), ('enough', 'enough'), ('data', 'datum'), (',', ','), ('you', 'you'), ('can', 'can'), ('overcome', 'overcome'), ('the', 'the'), ('problem', 'problem'), ('by', 'by'), ('acquiring', 'acquire'), ('external', 'external'), ('data', 'datum'), ('or', 'or'), ('by', 'by'), ('using', 'use'), ('simpler', 'simple'), ('models', 'model'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'choose'), 'mark'), (('you', 'choose'), 'nsubj'), (('choose', 'overcome'), 'advcl'), (('that', 'option'), 'det'), (('option', 'choose'), 'obj'), (('but', 'have'), 'cc'), (('do', 'have'), 'aux'), (('n’t', 'have'), 'advmod'), (('have', 'choose'), 'conj'), (('enough', 'data'), 'amod'), (('data', 'have'), 'obj'), ((',', 'overcome'), 'punct'), (('you', 'overcome'), 'nsubj'), (('can', 'overcome'), 'aux'), (('overcome', 'root'), 'root'), (('the', 'problem'), 'det'), (('problem', 'overcome'), 'obj'), (('by', 'acquiring'), 'mark'), (('acquiring', 'overcome'), 'advcl'), (('external', 'data'), 'amod'), (('data', 'acquiring'), 'obj'), (('or', 'using'), 'cc'), (('by', 'using'), 'mark'), (('using', 'acquiring'), 'conj'), (('simpler', 'models'), 'amod'), (('models', 'using'), 'obj'), (('.', 'overcome'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 205 =================================

Unlabeled data  Pitfalls: A common problem when implementing AI is data  that’s not classified by humans or machines, which leaves  you unable to train the system (in the case of a supervised  algorithm). For instance, if you wanted to predict fraud, but  the historical fraudulent cases weren’t labelled, it would be  impossible for the algorithm to map input to outputs.  


------------------- Sentence 1 -------------------

 Unlabeled data  Pitfalls: A common problem when implementing AI is data  that’s not classified by humans or machines, which leaves  you unable to train the system (in the case of a supervised  algorithm). 

Tokens are: 
>> ['Unlabeled', 'data', 'Pitfalls', ':', 'A', 'common', 'problem', 'when', 'implementing', 'AI', 'is', 'data', 'that', '’s', 'not', 'classified', 'by', 'humans', 'or', 'machines', ',', 'which', 'leaves', 'you', 'unable', 'to', 'train', 'the', 'system', '(', 'in', 'the', 'case', 'of', 'a', 'supervised', 'algorithm', ')', '.'] 

 UPOS tags are: 
>> [('Unlabeled', 'VERB'), ('data', 'NOUN'), ('Pitfalls', 'NOUN'), (':', 'PUNCT'), ('A', 'DET'), ('common', 'ADJ'), ('problem', 'NOUN'), ('when', 'SCONJ'), ('implementing', 'VERB'), ('AI', 'NOUN'), ('is', 'AUX'), ('data', 'NOUN'), ('that', 'PRON'), ('’s', 'AUX'), ('not', 'PART'), ('classified', 'VERB'), ('by', 'ADP'), ('humans', 'NOUN'), ('or', 'CCONJ'), ('machines', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('leaves', 'VERB'), ('you', 'PRON'), ('unable', 'ADJ'), ('to', 'PART'), ('train', 'VERB'), ('the', 'DET'), ('system', 'NOUN'), ('(', 'PUNCT'), ('in', 'ADP'), ('the', 'DET'), ('case', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('supervised', 'VERB'), ('algorithm', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Unlabeled', 'VBN'), ('data', 'NN'), ('Pitfalls', 'NNS'), (':', ':'), ('A', 'DT'), ('common', 'JJ'), ('problem', 'NN'), ('when', 'WRB'), ('implementing', 'VBG'), ('AI', 'NN'), ('is', 'VBZ'), ('data', 'NNS'), ('that', 'WDT'), ('’s', 'VBZ'), ('not', 'RB'), ('classified', 'VBN'), ('by', 'IN'), ('humans', 'NNS'), ('or', 'CC'), ('machines', 'NNS'), (',', ','), ('which', 'WDT'), ('leaves', 'VBZ'), ('you', 'PRP'), ('unable', 'JJ'), ('to', 'TO'), ('train', 'VB'), ('the', 'DT'), ('system', 'NN'), ('(', '-LRB-'), ('in', 'IN'), ('the', 'DT'), ('case', 'NN'), ('of', 'IN'), ('a', 'DT'), ('supervised', 'VBN'), ('algorithm', 'NN'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Unlabeled', 'unlabel'), ('data', 'datum'), ('Pitfalls', 'pitfall'), (':', ':'), ('A', 'a'), ('common', 'common'), ('problem', 'problem'), ('when', 'when'), ('implementing', 'implement'), ('AI', 'ai'), ('is', 'be'), ('data', 'datum'), ('that', 'that'), ('’s', 'be'), ('not', 'not'), ('classified', 'classify'), ('by', 'by'), ('humans', 'human'), ('or', 'or'), ('machines', 'machine'), (',', ','), ('which', 'which'), ('leaves', 'leave'), ('you', 'you'), ('unable', 'unable'), ('to', 'to'), ('train', 'train'), ('the', 'the'), ('system', 'system'), ('(', '('), ('in', 'in'), ('the', 'the'), ('case', 'case'), ('of', 'of'), ('a', 'a'), ('supervised', 'supervise'), ('algorithm', 'algorithm'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Unlabeled', 'Pitfalls'), 'amod'), (('data', 'Pitfalls'), 'compound'), (('Pitfalls', 'root'), 'root'), ((':', 'Pitfalls'), 'punct'), (('A', 'problem'), 'det'), (('common', 'problem'), 'amod'), (('problem', 'Pitfalls'), 'appos'), (('when', 'implementing'), 'mark'), (('implementing', 'problem'), 'acl'), (('AI', 'implementing'), 'obj'), (('is', 'data'), 'cop'), (('data', 'Pitfalls'), 'appos'), (('that', 'classified'), 'nsubj:pass'), (('’s', 'classified'), 'aux:pass'), (('not', 'classified'), 'advmod'), (('classified', 'data'), 'acl:relcl'), (('by', 'humans'), 'case'), (('humans', 'classified'), 'obl'), (('or', 'machines'), 'cc'), (('machines', 'humans'), 'conj'), ((',', 'leaves'), 'punct'), (('which', 'leaves'), 'nsubj'), (('leaves', 'data'), 'acl:relcl'), (('you', 'leaves'), 'obj'), (('unable', 'leaves'), 'xcomp'), (('to', 'train'), 'mark'), (('train', 'unable'), 'xcomp'), (('the', 'system'), 'det'), (('system', 'train'), 'obj'), (('(', 'case'), 'punct'), (('in', 'case'), 'case'), (('the', 'case'), 'det'), (('case', 'train'), 'obl'), (('of', 'algorithm'), 'case'), (('a', 'algorithm'), 'det'), (('supervised', 'algorithm'), 'amod'), (('algorithm', 'case'), 'nmod'), ((')', 'case'), 'punct'), (('.', 'Pitfalls'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 For instance, if you wanted to predict fraud, but  the historical fraudulent cases weren’t labelled, it would be  impossible for the algorithm to map input to outputs. 

Tokens are: 
>> ['For', 'instance', ',', 'if', 'you', 'wanted', 'to', 'predict', 'fraud', ',', 'but', 'the', 'historical', 'fraudulent', 'cases', 'were', 'n’t', 'labelled', ',', 'it', 'would', 'be', 'impossible', 'for', 'the', 'algorithm', 'to', 'map', 'input', 'to', 'outputs', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('instance', 'NOUN'), (',', 'PUNCT'), ('if', 'SCONJ'), ('you', 'PRON'), ('wanted', 'VERB'), ('to', 'PART'), ('predict', 'VERB'), ('fraud', 'NOUN'), (',', 'PUNCT'), ('but', 'CCONJ'), ('the', 'DET'), ('historical', 'ADJ'), ('fraudulent', 'ADJ'), ('cases', 'NOUN'), ('were', 'AUX'), ('n’t', 'PART'), ('labelled', 'VERB'), (',', 'PUNCT'), ('it', 'PRON'), ('would', 'AUX'), ('be', 'AUX'), ('impossible', 'ADJ'), ('for', 'ADP'), ('the', 'DET'), ('algorithm', 'NOUN'), ('to', 'PART'), ('map', 'VERB'), ('input', 'NOUN'), ('to', 'ADP'), ('outputs', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('instance', 'NN'), (',', ','), ('if', 'IN'), ('you', 'PRP'), ('wanted', 'VBD'), ('to', 'TO'), ('predict', 'VB'), ('fraud', 'NN'), (',', ','), ('but', 'CC'), ('the', 'DT'), ('historical', 'JJ'), ('fraudulent', 'JJ'), ('cases', 'NNS'), ('were', 'VBD'), ('n’t', 'RB'), ('labelled', 'VBN'), (',', ','), ('it', 'PRP'), ('would', 'MD'), ('be', 'VB'), ('impossible', 'JJ'), ('for', 'IN'), ('the', 'DT'), ('algorithm', 'NN'), ('to', 'TO'), ('map', 'VB'), ('input', 'NN'), ('to', 'IN'), ('outputs', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('instance', 'instance'), (',', ','), ('if', 'if'), ('you', 'you'), ('wanted', 'want'), ('to', 'to'), ('predict', 'predict'), ('fraud', 'fraud'), (',', ','), ('but', 'but'), ('the', 'the'), ('historical', 'historical'), ('fraudulent', 'fraudulent'), ('cases', 'case'), ('were', 'be'), ('n’t', 'not'), ('labelled', 'label'), (',', ','), ('it', 'it'), ('would', 'would'), ('be', 'be'), ('impossible', 'impossible'), ('for', 'for'), ('the', 'the'), ('algorithm', 'algorithm'), ('to', 'to'), ('map', 'map'), ('input', 'input'), ('to', 'to'), ('outputs', 'output'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'instance'), 'case'), (('instance', 'impossible'), 'obl'), ((',', 'impossible'), 'punct'), (('if', 'wanted'), 'mark'), (('you', 'wanted'), 'nsubj'), (('wanted', 'impossible'), 'advcl'), (('to', 'predict'), 'mark'), (('predict', 'wanted'), 'xcomp'), (('fraud', 'predict'), 'obj'), ((',', 'labelled'), 'punct'), (('but', 'labelled'), 'cc'), (('the', 'cases'), 'det'), (('historical', 'cases'), 'amod'), (('fraudulent', 'cases'), 'amod'), (('cases', 'labelled'), 'nsubj:pass'), (('were', 'labelled'), 'aux:pass'), (('n’t', 'labelled'), 'advmod'), (('labelled', 'wanted'), 'conj'), ((',', 'impossible'), 'punct'), (('it', 'impossible'), 'expl'), (('would', 'impossible'), 'aux'), (('be', 'impossible'), 'cop'), (('impossible', 'root'), 'root'), (('for', 'algorithm'), 'case'), (('the', 'algorithm'), 'det'), (('algorithm', 'impossible'), 'obl'), (('to', 'map'), 'mark'), (('map', 'algorithm'), 'acl'), (('input', 'map'), 'obj'), (('to', 'outputs'), 'case'), (('outputs', 'map'), 'obl'), (('.', 'impossible'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 206 =================================

Recommendation: In this case, define what data you’ll  need to run a sound model. This data will then need to  be labeled—which can be expensive—or you can use  algorithms to accomplish this task. It’s a more advanced  technique, but you can use reinforcement learning or  semi-supervised models. Your data scientist might know  which approach is best. 


------------------- Sentence 1 -------------------

 Recommendation: 

Tokens are: 
>> ['Recommendation', ':'] 

 UPOS tags are: 
>> [('Recommendation', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Recommendation', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('Recommendation', 'recommendation'), (':', ':')] 

 Dependency tags are: 
>> [(('Recommendation', 'root'), 'root'), ((':', 'Recommendation'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 In this case, define what data you’ll  need to run a sound model. 

Tokens are: 
>> ['In', 'this', 'case', ',', 'define', 'what', 'data', 'you', '’ll', 'need', 'to', 'run', 'a', 'sound', 'model', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('this', 'DET'), ('case', 'NOUN'), (',', 'PUNCT'), ('define', 'VERB'), ('what', 'DET'), ('data', 'NOUN'), ('you', 'PRON'), ('’ll', 'AUX'), ('need', 'VERB'), ('to', 'PART'), ('run', 'VERB'), ('a', 'DET'), ('sound', 'NOUN'), ('model', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('this', 'DT'), ('case', 'NN'), (',', ','), ('define', 'VB'), ('what', 'WDT'), ('data', 'NNS'), ('you', 'PRP'), ('’ll', 'MD'), ('need', 'VB'), ('to', 'TO'), ('run', 'VB'), ('a', 'DT'), ('sound', 'NN'), ('model', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('this', 'this'), ('case', 'case'), (',', ','), ('define', 'define'), ('what', 'what'), ('data', 'datum'), ('you', 'you'), ('’ll', 'will'), ('need', 'need'), ('to', 'to'), ('run', 'run'), ('a', 'a'), ('sound', 'sound'), ('model', 'model'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'case'), 'case'), (('this', 'case'), 'det'), (('case', 'define'), 'obl'), ((',', 'define'), 'punct'), (('define', 'root'), 'root'), (('what', 'data'), 'det'), (('data', 'need'), 'obj'), (('you', 'need'), 'nsubj'), (('’ll', 'need'), 'aux'), (('need', 'define'), 'ccomp'), (('to', 'run'), 'mark'), (('run', 'need'), 'xcomp'), (('a', 'model'), 'det'), (('sound', 'model'), 'compound'), (('model', 'run'), 'obj'), (('.', 'define'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 This data will then need to  be labeled—which can be expensive—or you can use  algorithms to accomplish this task. 

Tokens are: 
>> ['This', 'data', 'will', 'then', 'need', 'to', 'be', 'labeled', '—', 'which', 'can', 'be', 'expensive', '—', 'or', 'you', 'can', 'use', 'algorithms', 'to', 'accomplish', 'this', 'task', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('data', 'NOUN'), ('will', 'AUX'), ('then', 'ADV'), ('need', 'VERB'), ('to', 'PART'), ('be', 'AUX'), ('labeled', 'VERB'), ('—', 'PUNCT'), ('which', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('expensive', 'ADJ'), ('—', 'PUNCT'), ('or', 'CCONJ'), ('you', 'PRON'), ('can', 'AUX'), ('use', 'VERB'), ('algorithms', 'NOUN'), ('to', 'PART'), ('accomplish', 'VERB'), ('this', 'DET'), ('task', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('data', 'NNS'), ('will', 'MD'), ('then', 'RB'), ('need', 'VB'), ('to', 'TO'), ('be', 'VB'), ('labeled', 'VBN'), ('—', ':'), ('which', 'WDT'), ('can', 'MD'), ('be', 'VB'), ('expensive', 'JJ'), ('—', ':'), ('or', 'CC'), ('you', 'PRP'), ('can', 'MD'), ('use', 'VB'), ('algorithms', 'NNS'), ('to', 'TO'), ('accomplish', 'VB'), ('this', 'DT'), ('task', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('data', 'datum'), ('will', 'will'), ('then', 'then'), ('need', 'need'), ('to', 'to'), ('be', 'be'), ('labeled', 'label'), ('—', '—'), ('which', 'which'), ('can', 'can'), ('be', 'be'), ('expensive', 'expensive'), ('—', '—'), ('or', 'or'), ('you', 'you'), ('can', 'can'), ('use', 'use'), ('algorithms', 'algorithm'), ('to', 'to'), ('accomplish', 'accomplish'), ('this', 'this'), ('task', 'task'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'data'), 'det'), (('data', 'need'), 'nsubj'), (('will', 'need'), 'aux'), (('then', 'need'), 'advmod'), (('need', 'root'), 'root'), (('to', 'labeled'), 'mark'), (('be', 'labeled'), 'aux:pass'), (('labeled', 'need'), 'xcomp'), (('—', 'labeled'), 'punct'), (('which', 'expensive'), 'nsubj'), (('can', 'expensive'), 'aux'), (('be', 'expensive'), 'cop'), (('expensive', 'labeled'), 'ccomp'), (('—', 'use'), 'punct'), (('or', 'use'), 'cc'), (('you', 'use'), 'nsubj'), (('can', 'use'), 'aux'), (('use', 'need'), 'conj'), (('algorithms', 'use'), 'obj'), (('to', 'accomplish'), 'mark'), (('accomplish', 'algorithms'), 'acl'), (('this', 'task'), 'det'), (('task', 'accomplish'), 'obj'), (('.', 'need'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 It’s a more advanced  technique, but you can use reinforcement learning or  semi-supervised models. 

Tokens are: 
>> ['It', '’s', 'a', 'more', 'advanced', 'technique', ',', 'but', 'you', 'can', 'use', 'reinforcement', 'learning', 'or', 'semi-supervised', 'models', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('’s', 'AUX'), ('a', 'DET'), ('more', 'ADV'), ('advanced', 'ADJ'), ('technique', 'NOUN'), (',', 'PUNCT'), ('but', 'CCONJ'), ('you', 'PRON'), ('can', 'AUX'), ('use', 'VERB'), ('reinforcement', 'NOUN'), ('learning', 'NOUN'), ('or', 'CCONJ'), ('semi-supervised', 'VERB'), ('models', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('’s', 'VBZ'), ('a', 'DT'), ('more', 'RBR'), ('advanced', 'JJ'), ('technique', 'NN'), (',', ','), ('but', 'CC'), ('you', 'PRP'), ('can', 'MD'), ('use', 'VB'), ('reinforcement', 'NN'), ('learning', 'NN'), ('or', 'CC'), ('semi-supervised', 'VBN'), ('models', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('’s', 'be'), ('a', 'a'), ('more', 'more'), ('advanced', 'advanced'), ('technique', 'technique'), (',', ','), ('but', 'but'), ('you', 'you'), ('can', 'can'), ('use', 'use'), ('reinforcement', 'reinforcement'), ('learning', 'learning'), ('or', 'or'), ('semi-supervised', 'semi-supervise'), ('models', 'model'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'technique'), 'nsubj'), (('’s', 'technique'), 'cop'), (('a', 'technique'), 'det'), (('more', 'advanced'), 'advmod'), (('advanced', 'technique'), 'amod'), (('technique', 'root'), 'root'), ((',', 'use'), 'punct'), (('but', 'use'), 'cc'), (('you', 'use'), 'nsubj'), (('can', 'use'), 'aux'), (('use', 'technique'), 'conj'), (('reinforcement', 'learning'), 'compound'), (('learning', 'models'), 'compound'), (('or', 'semi-supervised'), 'cc'), (('semi-supervised', 'learning'), 'conj'), (('models', 'use'), 'obj'), (('.', 'technique'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 Your data scientist might know  which approach is best. 

Tokens are: 
>> ['Your', 'data', 'scientist', 'might', 'know', 'which', 'approach', 'is', 'best', '.'] 

 UPOS tags are: 
>> [('Your', 'PRON'), ('data', 'NOUN'), ('scientist', 'NOUN'), ('might', 'AUX'), ('know', 'VERB'), ('which', 'DET'), ('approach', 'NOUN'), ('is', 'AUX'), ('best', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Your', 'PRP$'), ('data', 'NN'), ('scientist', 'NN'), ('might', 'MD'), ('know', 'VB'), ('which', 'WDT'), ('approach', 'NN'), ('is', 'VBZ'), ('best', 'JJS'), ('.', '.')] 

 Lemmas are: 
>> [('Your', 'you'), ('data', 'datum'), ('scientist', 'scientist'), ('might', 'might'), ('know', 'know'), ('which', 'which'), ('approach', 'approach'), ('is', 'be'), ('best', 'good'), ('.', '.')] 

 Dependency tags are: 
>> [(('Your', 'scientist'), 'nmod:poss'), (('data', 'scientist'), 'compound'), (('scientist', 'know'), 'nsubj'), (('might', 'know'), 'aux'), (('know', 'root'), 'root'), (('which', 'approach'), 'det'), (('approach', 'best'), 'nsubj'), (('is', 'best'), 'cop'), (('best', 'know'), 'ccomp'), (('.', 'know'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 207 =================================

Explainable results  Pitfalls: In many cases, the business wants and needs to  know why specific outcomes occur. This is in line with one  of IBMs principles for ethical use of AI is: AI systems must  be transparent and explainable. Depending on what kind  of algorithm is used, an AI can’t show exactly which  variables brought it to a given conclusion. We call these  black-box algorithms. While they sometimes may perform  better, they don’t give a lot of explanation. For example,  you might have an algorithm that defines whether an  applicant gets a loan. According to European law in some  countries, if you deny the applicant, you need to explain  why you did so.  


------------------- Sentence 1 -------------------

 Explainable results  Pitfalls: 

Tokens are: 
>> ['Explainable', 'results', 'Pitfalls', ':'] 

 UPOS tags are: 
>> [('Explainable', 'ADJ'), ('results', 'NOUN'), ('Pitfalls', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Explainable', 'JJ'), ('results', 'NNS'), ('Pitfalls', 'NNS'), (':', ':')] 

 Lemmas are: 
>> [('Explainable', 'explainable'), ('results', 'result'), ('Pitfalls', 'pitfall'), (':', ':')] 

 Dependency tags are: 
>> [(('Explainable', 'results'), 'amod'), (('results', 'Pitfalls'), 'compound'), (('Pitfalls', 'root'), 'root'), ((':', 'Pitfalls'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 In many cases, the business wants and needs to  know why specific outcomes occur. 

Tokens are: 
>> ['In', 'many', 'cases', ',', 'the', 'business', 'wants', 'and', 'needs', 'to', 'know', 'why', 'specific', 'outcomes', 'occur', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('many', 'ADJ'), ('cases', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('business', 'NOUN'), ('wants', 'VERB'), ('and', 'CCONJ'), ('needs', 'VERB'), ('to', 'PART'), ('know', 'VERB'), ('why', 'SCONJ'), ('specific', 'ADJ'), ('outcomes', 'NOUN'), ('occur', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('many', 'JJ'), ('cases', 'NNS'), (',', ','), ('the', 'DT'), ('business', 'NN'), ('wants', 'VBZ'), ('and', 'CC'), ('needs', 'VBZ'), ('to', 'TO'), ('know', 'VB'), ('why', 'WRB'), ('specific', 'JJ'), ('outcomes', 'NNS'), ('occur', 'VBP'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('many', 'many'), ('cases', 'case'), (',', ','), ('the', 'the'), ('business', 'business'), ('wants', 'want'), ('and', 'and'), ('needs', 'need'), ('to', 'to'), ('know', 'know'), ('why', 'why'), ('specific', 'specific'), ('outcomes', 'outcome'), ('occur', 'occur'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'cases'), 'case'), (('many', 'cases'), 'amod'), (('cases', 'wants'), 'obl'), ((',', 'wants'), 'punct'), (('the', 'business'), 'det'), (('business', 'wants'), 'nsubj'), (('wants', 'root'), 'root'), (('and', 'needs'), 'cc'), (('needs', 'wants'), 'conj'), (('to', 'know'), 'mark'), (('know', 'needs'), 'xcomp'), (('why', 'occur'), 'mark'), (('specific', 'outcomes'), 'amod'), (('outcomes', 'occur'), 'nsubj'), (('occur', 'know'), 'ccomp'), (('.', 'wants'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 This is in line with one  of IBMs principles for ethical use of AI is: AI systems must  be transparent and explainable. 

Tokens are: 
>> ['This', 'is', 'in', 'line', 'with', 'one', 'of', 'IBMs', 'principles', 'for', 'ethical', 'use', 'of', 'AI', 'is', ':', 'AI', 'systems', 'must', 'be', 'transparent', 'and', 'explainable', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('is', 'AUX'), ('in', 'ADP'), ('line', 'NOUN'), ('with', 'ADP'), ('one', 'NUM'), ('of', 'ADP'), ('IBMs', 'NOUN'), ('principles', 'NOUN'), ('for', 'ADP'), ('ethical', 'ADJ'), ('use', 'NOUN'), ('of', 'ADP'), ('AI', 'NOUN'), ('is', 'VERB'), (':', 'PUNCT'), ('AI', 'ADP'), ('systems', 'NOUN'), ('must', 'AUX'), ('be', 'AUX'), ('transparent', 'ADJ'), ('and', 'CCONJ'), ('explainable', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('is', 'VBZ'), ('in', 'IN'), ('line', 'NN'), ('with', 'IN'), ('one', 'CD'), ('of', 'IN'), ('IBMs', 'NNS'), ('principles', 'NNS'), ('for', 'IN'), ('ethical', 'JJ'), ('use', 'NN'), ('of', 'IN'), ('AI', 'NN'), ('is', 'VBZ'), (':', ':'), ('AI', 'IN'), ('systems', 'NNS'), ('must', 'MD'), ('be', 'VB'), ('transparent', 'JJ'), ('and', 'CC'), ('explainable', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('is', 'be'), ('in', 'in'), ('line', 'line'), ('with', 'with'), ('one', 'one'), ('of', 'of'), ('IBMs', 'ibm'), ('principles', 'principle'), ('for', 'for'), ('ethical', 'ethical'), ('use', 'use'), ('of', 'of'), ('AI', 'ai'), ('is', 'be'), (':', ':'), ('AI', 'ai'), ('systems', 'system'), ('must', 'must'), ('be', 'be'), ('transparent', 'transparent'), ('and', 'and'), ('explainable', 'explainable'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'line'), 'nsubj'), (('is', 'line'), 'cop'), (('in', 'line'), 'case'), (('line', 'root'), 'root'), (('with', 'one'), 'case'), (('one', 'line'), 'nmod'), (('of', 'principles'), 'case'), (('IBMs', 'principles'), 'compound'), (('principles', 'one'), 'nmod'), (('for', 'use'), 'case'), (('ethical', 'use'), 'amod'), (('use', 'principles'), 'nmod'), (('of', 'AI'), 'case'), (('AI', 'use'), 'nmod'), (('is', 'line'), 'conj'), ((':', 'is'), 'punct'), (('AI', 'systems'), 'det'), (('systems', 'transparent'), 'nsubj'), (('must', 'transparent'), 'aux'), (('be', 'transparent'), 'cop'), (('transparent', 'is'), 'ccomp'), (('and', 'explainable'), 'cc'), (('explainable', 'transparent'), 'conj'), (('.', 'line'), 'punct')]

 Named Entites are: 
>> [('one', 'CARDINAL')]

------------------- Sentence 4 -------------------

 Depending on what kind  of algorithm is used, an AI can’t show exactly which  variables brought it to a given conclusion. 

Tokens are: 
>> ['Depending', 'on', 'what', 'kind', 'of', 'algorithm', 'is', 'used', ',', 'an', 'AI', 'ca', 'n’t', 'show', 'exactly', 'which', 'variables', 'brought', 'it', 'to', 'a', 'given', 'conclusion', '.'] 

 UPOS tags are: 
>> [('Depending', 'VERB'), ('on', 'ADP'), ('what', 'DET'), ('kind', 'NOUN'), ('of', 'ADP'), ('algorithm', 'NOUN'), ('is', 'AUX'), ('used', 'VERB'), (',', 'PUNCT'), ('an', 'DET'), ('AI', 'NOUN'), ('ca', 'AUX'), ('n’t', 'PART'), ('show', 'VERB'), ('exactly', 'ADV'), ('which', 'DET'), ('variables', 'NOUN'), ('brought', 'VERB'), ('it', 'PRON'), ('to', 'ADP'), ('a', 'DET'), ('given', 'VERB'), ('conclusion', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Depending', 'VBG'), ('on', 'IN'), ('what', 'WDT'), ('kind', 'NN'), ('of', 'IN'), ('algorithm', 'NN'), ('is', 'VBZ'), ('used', 'VBN'), (',', ','), ('an', 'DT'), ('AI', 'NN'), ('ca', 'MD'), ('n’t', 'RB'), ('show', 'VB'), ('exactly', 'RB'), ('which', 'WDT'), ('variables', 'NNS'), ('brought', 'VBD'), ('it', 'PRP'), ('to', 'IN'), ('a', 'DT'), ('given', 'VBN'), ('conclusion', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Depending', 'depend'), ('on', 'on'), ('what', 'what'), ('kind', 'kind'), ('of', 'of'), ('algorithm', 'algorithm'), ('is', 'be'), ('used', 'use'), (',', ','), ('an', 'a'), ('AI', 'ai'), ('ca', 'can'), ('n’t', 'not'), ('show', 'show'), ('exactly', 'exactly'), ('which', 'which'), ('variables', 'variable'), ('brought', 'bring'), ('it', 'it'), ('to', 'to'), ('a', 'a'), ('given', 'give'), ('conclusion', 'conclusion'), ('.', '.')] 

 Dependency tags are: 
>> [(('Depending', 'used'), 'mark'), (('on', 'Depending'), 'fixed'), (('what', 'kind'), 'det'), (('kind', 'used'), 'nsubj:pass'), (('of', 'algorithm'), 'case'), (('algorithm', 'kind'), 'nmod'), (('is', 'used'), 'aux:pass'), (('used', 'show'), 'advcl'), ((',', 'show'), 'punct'), (('an', 'AI'), 'det'), (('AI', 'show'), 'nsubj'), (('ca', 'show'), 'aux'), (('n’t', 'show'), 'advmod'), (('show', 'root'), 'root'), (('exactly', 'brought'), 'advmod'), (('which', 'variables'), 'det'), (('variables', 'brought'), 'nsubj'), (('brought', 'show'), 'ccomp'), (('it', 'brought'), 'obj'), (('to', 'conclusion'), 'case'), (('a', 'conclusion'), 'det'), (('given', 'conclusion'), 'amod'), (('conclusion', 'brought'), 'obl'), (('.', 'show'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 We call these  black-box algorithms. 

Tokens are: 
>> ['We', 'call', 'these', 'black', '-', 'box', 'algorithms', '.'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('call', 'VERB'), ('these', 'DET'), ('black', 'ADJ'), ('-', 'PUNCT'), ('box', 'NOUN'), ('algorithms', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('call', 'VBP'), ('these', 'DT'), ('black', 'JJ'), ('-', 'HYPH'), ('box', 'NN'), ('algorithms', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('call', 'call'), ('these', 'this'), ('black', 'black'), ('-', '-'), ('box', 'box'), ('algorithms', 'algorithm'), ('.', '.')] 

 Dependency tags are: 
>> [(('We', 'call'), 'nsubj'), (('call', 'root'), 'root'), (('these', 'algorithms'), 'det'), (('black', 'box'), 'amod'), (('-', 'box'), 'punct'), (('box', 'algorithms'), 'compound'), (('algorithms', 'call'), 'obj'), (('.', 'call'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 While they sometimes may perform  better, they don’t give a lot of explanation. 

Tokens are: 
>> ['While', 'they', 'sometimes', 'may', 'perform', 'better', ',', 'they', 'do', 'n’t', 'give', 'a', 'lot', 'of', 'explanation', '.'] 

 UPOS tags are: 
>> [('While', 'SCONJ'), ('they', 'PRON'), ('sometimes', 'ADV'), ('may', 'AUX'), ('perform', 'VERB'), ('better', 'ADJ'), (',', 'PUNCT'), ('they', 'PRON'), ('do', 'AUX'), ('n’t', 'PART'), ('give', 'VERB'), ('a', 'DET'), ('lot', 'NOUN'), ('of', 'ADP'), ('explanation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('While', 'IN'), ('they', 'PRP'), ('sometimes', 'RB'), ('may', 'MD'), ('perform', 'VB'), ('better', 'JJR'), (',', ','), ('they', 'PRP'), ('do', 'VBP'), ('n’t', 'RB'), ('give', 'VB'), ('a', 'DT'), ('lot', 'NN'), ('of', 'IN'), ('explanation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('While', 'while'), ('they', 'they'), ('sometimes', 'sometimes'), ('may', 'may'), ('perform', 'perform'), ('better', 'good'), (',', ','), ('they', 'they'), ('do', 'do'), ('n’t', 'not'), ('give', 'give'), ('a', 'a'), ('lot', 'lot'), ('of', 'of'), ('explanation', 'explanation'), ('.', '.')] 

 Dependency tags are: 
>> [(('While', 'perform'), 'mark'), (('they', 'perform'), 'nsubj'), (('sometimes', 'perform'), 'advmod'), (('may', 'perform'), 'aux'), (('perform', 'give'), 'advcl'), (('better', 'perform'), 'xcomp'), ((',', 'give'), 'punct'), (('they', 'give'), 'nsubj'), (('do', 'give'), 'aux'), (('n’t', 'give'), 'advmod'), (('give', 'root'), 'root'), (('a', 'lot'), 'det'), (('lot', 'give'), 'obj'), (('of', 'explanation'), 'case'), (('explanation', 'lot'), 'nmod'), (('.', 'give'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 7 -------------------

 For example,  you might have an algorithm that defines whether an  applicant gets a loan. 

Tokens are: 
>> ['For', 'example', ',', 'you', 'might', 'have', 'an', 'algorithm', 'that', 'defines', 'whether', 'an', 'applicant', 'gets', 'a', 'loan', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('you', 'PRON'), ('might', 'AUX'), ('have', 'VERB'), ('an', 'DET'), ('algorithm', 'NOUN'), ('that', 'PRON'), ('defines', 'VERB'), ('whether', 'SCONJ'), ('an', 'DET'), ('applicant', 'NOUN'), ('gets', 'VERB'), ('a', 'DET'), ('loan', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('example', 'NN'), (',', ','), ('you', 'PRP'), ('might', 'MD'), ('have', 'VB'), ('an', 'DT'), ('algorithm', 'NN'), ('that', 'WDT'), ('defines', 'VBZ'), ('whether', 'IN'), ('an', 'DT'), ('applicant', 'NN'), ('gets', 'VBZ'), ('a', 'DT'), ('loan', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('example', 'example'), (',', ','), ('you', 'you'), ('might', 'might'), ('have', 'have'), ('an', 'a'), ('algorithm', 'algorithm'), ('that', 'that'), ('defines', 'define'), ('whether', 'whether'), ('an', 'a'), ('applicant', 'applicant'), ('gets', 'get'), ('a', 'a'), ('loan', 'loan'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'example'), 'case'), (('example', 'have'), 'obl'), ((',', 'have'), 'punct'), (('you', 'have'), 'nsubj'), (('might', 'have'), 'aux'), (('have', 'root'), 'root'), (('an', 'algorithm'), 'det'), (('algorithm', 'have'), 'obj'), (('that', 'defines'), 'nsubj'), (('defines', 'algorithm'), 'acl:relcl'), (('whether', 'gets'), 'mark'), (('an', 'applicant'), 'det'), (('applicant', 'gets'), 'nsubj'), (('gets', 'defines'), 'ccomp'), (('a', 'loan'), 'det'), (('loan', 'gets'), 'obj'), (('.', 'have'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 8 -------------------

 According to European law in some  countries, if you deny the applicant, you need to explain  why you did so. 

Tokens are: 
>> ['According', 'to', 'European', 'law', 'in', 'some', 'countries', ',', 'if', 'you', 'deny', 'the', 'applicant', ',', 'you', 'need', 'to', 'explain', 'why', 'you', 'did', 'so', '.'] 

 UPOS tags are: 
>> [('According', 'VERB'), ('to', 'ADP'), ('European', 'ADJ'), ('law', 'NOUN'), ('in', 'ADP'), ('some', 'DET'), ('countries', 'NOUN'), (',', 'PUNCT'), ('if', 'SCONJ'), ('you', 'PRON'), ('deny', 'VERB'), ('the', 'DET'), ('applicant', 'NOUN'), (',', 'PUNCT'), ('you', 'PRON'), ('need', 'VERB'), ('to', 'PART'), ('explain', 'VERB'), ('why', 'SCONJ'), ('you', 'PRON'), ('did', 'VERB'), ('so', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('According', 'VBG'), ('to', 'IN'), ('European', 'JJ'), ('law', 'NN'), ('in', 'IN'), ('some', 'DT'), ('countries', 'NNS'), (',', ','), ('if', 'IN'), ('you', 'PRP'), ('deny', 'VBP'), ('the', 'DT'), ('applicant', 'NN'), (',', ','), ('you', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('explain', 'VB'), ('why', 'WRB'), ('you', 'PRP'), ('did', 'VBD'), ('so', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('According', 'accord'), ('to', 'to'), ('European', 'European'), ('law', 'law'), ('in', 'in'), ('some', 'some'), ('countries', 'country'), (',', ','), ('if', 'if'), ('you', 'you'), ('deny', 'deny'), ('the', 'the'), ('applicant', 'applicant'), (',', ','), ('you', 'you'), ('need', 'need'), ('to', 'to'), ('explain', 'explain'), ('why', 'why'), ('you', 'you'), ('did', 'do'), ('so', 'so'), ('.', '.')] 

 Dependency tags are: 
>> [(('According', 'law'), 'case'), (('to', 'According'), 'fixed'), (('European', 'law'), 'amod'), (('law', 'need'), 'obl'), (('in', 'countries'), 'case'), (('some', 'countries'), 'det'), (('countries', 'law'), 'nmod'), ((',', 'need'), 'punct'), (('if', 'deny'), 'mark'), (('you', 'deny'), 'nsubj'), (('deny', 'need'), 'advcl'), (('the', 'applicant'), 'det'), (('applicant', 'deny'), 'obj'), ((',', 'need'), 'punct'), (('you', 'need'), 'nsubj'), (('need', 'root'), 'root'), (('to', 'explain'), 'mark'), (('explain', 'need'), 'xcomp'), (('why', 'did'), 'mark'), (('you', 'did'), 'nsubj'), (('did', 'explain'), 'advcl'), (('so', 'did'), 'advmod'), (('.', 'need'), 'punct')]

 Named Entites are: 
>> [('European', 'NORP')]

================================ Paragraph 208 =================================

Recommendation: There are several new algorithms that  help explain what happens in the black-box models such   as Local Interpretable Model-Agnostic (LIME).10 But this  doesn’t solve the problem in all cases. You should therefore  define what you’re going to use the model for. If the model  needs to explain precisely why it came to a certain conclusion,  your data scientists should consider other models that provide  the specific information required. Ethics and AI should go  hand-in-hand.


------------------- Sentence 1 -------------------

 Recommendation: 

Tokens are: 
>> ['Recommendation', ':'] 

 UPOS tags are: 
>> [('Recommendation', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Recommendation', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('Recommendation', 'recommendation'), (':', ':')] 

 Dependency tags are: 
>> [(('Recommendation', 'root'), 'root'), ((':', 'Recommendation'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 There are several new algorithms that  help explain what happens in the black-box models such   as Local Interpretable Model-Agnostic (LIME). 

Tokens are: 
>> ['There', 'are', 'several', 'new', 'algorithms', 'that', 'help', 'explain', 'what', 'happens', 'in', 'the', 'black', '-', 'box', 'models', 'such', 'as', 'Local', 'Interpretable', 'Model', '-Agnostic', '(', 'LIME', ')', '.'] 

 UPOS tags are: 
>> [('There', 'PRON'), ('are', 'VERB'), ('several', 'ADJ'), ('new', 'ADJ'), ('algorithms', 'NOUN'), ('that', 'PRON'), ('help', 'VERB'), ('explain', 'VERB'), ('what', 'PRON'), ('happens', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('black', 'ADJ'), ('-', 'PUNCT'), ('box', 'NOUN'), ('models', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('Local', 'ADJ'), ('Interpretable', 'ADJ'), ('Model', 'PROPN'), ('-Agnostic', 'PROPN'), ('(', 'PUNCT'), ('LIME', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('There', 'EX'), ('are', 'VBP'), ('several', 'JJ'), ('new', 'JJ'), ('algorithms', 'NNS'), ('that', 'WDT'), ('help', 'VBP'), ('explain', 'VB'), ('what', 'WP'), ('happens', 'VBZ'), ('in', 'IN'), ('the', 'DT'), ('black', 'JJ'), ('-', 'HYPH'), ('box', 'NN'), ('models', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('Local', 'NNP'), ('Interpretable', 'NNP'), ('Model', 'NNP'), ('-Agnostic', 'NNP'), ('(', '-LRB-'), ('LIME', 'NNP'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('There', 'there'), ('are', 'be'), ('several', 'several'), ('new', 'new'), ('algorithms', 'algorithm'), ('that', 'that'), ('help', 'help'), ('explain', 'explain'), ('what', 'what'), ('happens', 'happen'), ('in', 'in'), ('the', 'the'), ('black', 'black'), ('-', '-'), ('box', 'box'), ('models', 'model'), ('such', 'such'), ('as', 'as'), ('Local', 'local'), ('Interpretable', 'interpretable'), ('Model', 'Model'), ('-Agnostic', '-Agnostic'), ('(', '('), ('LIME', 'LIME'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('There', 'are'), 'expl'), (('are', 'root'), 'root'), (('several', 'algorithms'), 'amod'), (('new', 'algorithms'), 'amod'), (('algorithms', 'are'), 'nsubj'), (('that', 'help'), 'nsubj'), (('help', 'algorithms'), 'acl:relcl'), (('explain', 'help'), 'xcomp'), (('what', 'happens'), 'nsubj'), (('happens', 'explain'), 'ccomp'), (('in', 'models'), 'case'), (('the', 'models'), 'det'), (('black', 'box'), 'amod'), (('-', 'box'), 'punct'), (('box', 'models'), 'compound'), (('models', 'happens'), 'obl'), (('such', '-Agnostic'), 'case'), (('as', 'such'), 'fixed'), (('Local', '-Agnostic'), 'amod'), (('Interpretable', 'Model'), 'amod'), (('Model', '-Agnostic'), 'compound'), (('-Agnostic', 'models'), 'nmod'), (('(', 'LIME'), 'punct'), (('LIME', '-Agnostic'), 'appos'), ((')', 'LIME'), 'punct'), (('.', 'are'), 'punct')]

 Named Entites are: 
>> [('Local Interpretable Model-Agnostic', 'PRODUCT'), ('LIME', 'ORG')]

------------------- Sentence 3 -------------------

 10 

Tokens are: 
>> ['10'] 

 UPOS tags are: 
>> [('10', 'X')] 

 XPOS tags are: 
>> [('10', 'LS')] 

 Lemmas are: 
>> [('10', '10')] 

 Dependency tags are: 
>> [(('10', 'root'), 'root')]

 Named Entites are: 
>> [('10', 'CARDINAL')]

------------------- Sentence 4 -------------------

 But this  doesn’t solve the problem in all cases. 

Tokens are: 
>> ['But', 'this', 'does', 'n’t', 'solve', 'the', 'problem', 'in', 'all', 'cases', '.'] 

 UPOS tags are: 
>> [('But', 'CCONJ'), ('this', 'PRON'), ('does', 'AUX'), ('n’t', 'PART'), ('solve', 'VERB'), ('the', 'DET'), ('problem', 'NOUN'), ('in', 'ADP'), ('all', 'DET'), ('cases', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('But', 'CC'), ('this', 'DT'), ('does', 'VBZ'), ('n’t', 'RB'), ('solve', 'VB'), ('the', 'DT'), ('problem', 'NN'), ('in', 'IN'), ('all', 'DT'), ('cases', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('But', 'but'), ('this', 'this'), ('does', 'do'), ('n’t', 'not'), ('solve', 'solve'), ('the', 'the'), ('problem', 'problem'), ('in', 'in'), ('all', 'all'), ('cases', 'case'), ('.', '.')] 

 Dependency tags are: 
>> [(('But', 'solve'), 'cc'), (('this', 'solve'), 'nsubj'), (('does', 'solve'), 'aux'), (('n’t', 'solve'), 'advmod'), (('solve', 'root'), 'root'), (('the', 'problem'), 'det'), (('problem', 'solve'), 'obj'), (('in', 'cases'), 'case'), (('all', 'cases'), 'det'), (('cases', 'solve'), 'obl'), (('.', 'solve'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 You should therefore  define what you’re going to use the model for. 

Tokens are: 
>> ['You', 'should', 'therefore', 'define', 'what', 'you', '’re', 'going', 'to', 'use', 'the', 'model', 'for', '.'] 

 UPOS tags are: 
>> [('You', 'PRON'), ('should', 'AUX'), ('therefore', 'ADV'), ('define', 'VERB'), ('what', 'PRON'), ('you', 'PRON'), ('’re', 'AUX'), ('going', 'VERB'), ('to', 'PART'), ('use', 'VERB'), ('the', 'DET'), ('model', 'NOUN'), ('for', 'ADP'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('You', 'PRP'), ('should', 'MD'), ('therefore', 'RB'), ('define', 'VB'), ('what', 'WP'), ('you', 'PRP'), ('’re', 'VBP'), ('going', 'VBG'), ('to', 'TO'), ('use', 'VB'), ('the', 'DT'), ('model', 'NN'), ('for', 'IN'), ('.', '.')] 

 Lemmas are: 
>> [('You', 'you'), ('should', 'should'), ('therefore', 'therefore'), ('define', 'define'), ('what', 'what'), ('you', 'you'), ('’re', 'be'), ('going', 'go'), ('to', 'to'), ('use', 'use'), ('the', 'the'), ('model', 'model'), ('for', 'for'), ('.', '.')] 

 Dependency tags are: 
>> [(('You', 'define'), 'nsubj'), (('should', 'define'), 'aux'), (('therefore', 'define'), 'advmod'), (('define', 'root'), 'root'), (('what', 'define'), 'obj'), (('you', 'going'), 'nsubj'), (('’re', 'going'), 'aux'), (('going', 'what'), 'acl:relcl'), (('to', 'use'), 'mark'), (('use', 'going'), 'xcomp'), (('the', 'model'), 'det'), (('model', 'use'), 'obj'), (('for', 'use'), 'obl'), (('.', 'define'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 If the model  needs to explain precisely why it came to a certain conclusion,  your data scientists should consider other models that provide  the specific information required. 

Tokens are: 
>> ['If', 'the', 'model', 'needs', 'to', 'explain', 'precisely', 'why', 'it', 'came', 'to', 'a', 'certain', 'conclusion', ',', 'your', 'data', 'scientists', 'should', 'consider', 'other', 'models', 'that', 'provide', 'the', 'specific', 'information', 'required', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('the', 'DET'), ('model', 'NOUN'), ('needs', 'VERB'), ('to', 'PART'), ('explain', 'VERB'), ('precisely', 'ADV'), ('why', 'SCONJ'), ('it', 'PRON'), ('came', 'VERB'), ('to', 'ADP'), ('a', 'DET'), ('certain', 'ADJ'), ('conclusion', 'NOUN'), (',', 'PUNCT'), ('your', 'PRON'), ('data', 'NOUN'), ('scientists', 'NOUN'), ('should', 'AUX'), ('consider', 'VERB'), ('other', 'ADJ'), ('models', 'NOUN'), ('that', 'PRON'), ('provide', 'VERB'), ('the', 'DET'), ('specific', 'ADJ'), ('information', 'NOUN'), ('required', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('the', 'DT'), ('model', 'NN'), ('needs', 'VBZ'), ('to', 'TO'), ('explain', 'VB'), ('precisely', 'RB'), ('why', 'WRB'), ('it', 'PRP'), ('came', 'VBD'), ('to', 'IN'), ('a', 'DT'), ('certain', 'JJ'), ('conclusion', 'NN'), (',', ','), ('your', 'PRP$'), ('data', 'NN'), ('scientists', 'NNS'), ('should', 'MD'), ('consider', 'VB'), ('other', 'JJ'), ('models', 'NNS'), ('that', 'WDT'), ('provide', 'VBP'), ('the', 'DT'), ('specific', 'JJ'), ('information', 'NN'), ('required', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('the', 'the'), ('model', 'model'), ('needs', 'need'), ('to', 'to'), ('explain', 'explain'), ('precisely', 'precisely'), ('why', 'why'), ('it', 'it'), ('came', 'come'), ('to', 'to'), ('a', 'a'), ('certain', 'certain'), ('conclusion', 'conclusion'), (',', ','), ('your', 'you'), ('data', 'datum'), ('scientists', 'scientist'), ('should', 'should'), ('consider', 'consider'), ('other', 'other'), ('models', 'model'), ('that', 'that'), ('provide', 'provide'), ('the', 'the'), ('specific', 'specific'), ('information', 'information'), ('required', 'require'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'needs'), 'mark'), (('the', 'model'), 'det'), (('model', 'needs'), 'nsubj'), (('needs', 'consider'), 'advcl'), (('to', 'explain'), 'mark'), (('explain', 'needs'), 'xcomp'), (('precisely', 'explain'), 'advmod'), (('why', 'came'), 'mark'), (('it', 'came'), 'nsubj'), (('came', 'explain'), 'advcl'), (('to', 'conclusion'), 'case'), (('a', 'conclusion'), 'det'), (('certain', 'conclusion'), 'amod'), (('conclusion', 'came'), 'obl'), ((',', 'consider'), 'punct'), (('your', 'scientists'), 'nmod:poss'), (('data', 'scientists'), 'compound'), (('scientists', 'consider'), 'nsubj'), (('should', 'consider'), 'aux'), (('consider', 'root'), 'root'), (('other', 'models'), 'amod'), (('models', 'consider'), 'obj'), (('that', 'provide'), 'nsubj'), (('provide', 'models'), 'acl:relcl'), (('the', 'information'), 'det'), (('specific', 'information'), 'amod'), (('information', 'provide'), 'obj'), (('required', 'information'), 'acl'), (('.', 'consider'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 7 -------------------

 Ethics and AI should go  hand-in-hand. 

Tokens are: 
>> ['Ethics', 'and', 'AI', 'should', 'go', 'hand', '-', 'in', '-', 'hand', '.'] 

 UPOS tags are: 
>> [('Ethics', 'NOUN'), ('and', 'CCONJ'), ('AI', 'PRON'), ('should', 'AUX'), ('go', 'VERB'), ('hand', 'NOUN'), ('-', 'PUNCT'), ('in', 'ADP'), ('-', 'PUNCT'), ('hand', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Ethics', 'NN'), ('and', 'CC'), ('AI', 'PRP'), ('should', 'MD'), ('go', 'VB'), ('hand', 'NN'), ('-', 'HYPH'), ('in', 'IN'), ('-', 'HYPH'), ('hand', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Ethics', 'ethics'), ('and', 'and'), ('AI', 'ai'), ('should', 'should'), ('go', 'go'), ('hand', 'hand'), ('-', '-'), ('in', 'in'), ('-', '-'), ('hand', 'hand'), ('.', '.')] 

 Dependency tags are: 
>> [(('Ethics', 'go'), 'nsubj'), (('and', 'AI'), 'cc'), (('AI', 'Ethics'), 'conj'), (('should', 'go'), 'aux'), (('go', 'root'), 'root'), (('hand', 'hand'), 'compound'), (('-', 'hand'), 'punct'), (('in', 'hand'), 'case'), (('-', 'hand'), 'punct'), (('hand', 'go'), 'obl'), (('.', 'go'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

================================ Paragraph 209 =================================

14     Beyond the hype: A guide to understanding and successfully implementing artificial intelligence within your business 


------------------- Sentence 1 -------------------

 14     Beyond the hype: A guide to understanding and successfully implementing artificial intelligence within your business 

Tokens are: 
>> ['14', 'Beyond', 'the', 'hype', ':', 'A', 'guide', 'to', 'understanding', 'and', 'successfully', 'implementing', 'artificial', 'intelligence', 'within', 'your', 'business'] 

 UPOS tags are: 
>> [('14', 'NUM'), ('Beyond', 'ADP'), ('the', 'DET'), ('hype', 'NOUN'), (':', 'PUNCT'), ('A', 'DET'), ('guide', 'NOUN'), ('to', 'ADP'), ('understanding', 'VERB'), ('and', 'CCONJ'), ('successfully', 'ADV'), ('implementing', 'VERB'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('within', 'ADP'), ('your', 'PRON'), ('business', 'NOUN')] 

 XPOS tags are: 
>> [('14', 'LS'), ('Beyond', 'IN'), ('the', 'DT'), ('hype', 'NN'), (':', ':'), ('A', 'DT'), ('guide', 'NN'), ('to', 'IN'), ('understanding', 'VBG'), ('and', 'CC'), ('successfully', 'RB'), ('implementing', 'VBG'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('within', 'IN'), ('your', 'PRP$'), ('business', 'NN')] 

 Lemmas are: 
>> [('14', '14'), ('Beyond', 'beyond'), ('the', 'the'), ('hype', 'hype'), (':', ':'), ('A', 'a'), ('guide', 'guide'), ('to', 'to'), ('understanding', 'understand'), ('and', 'and'), ('successfully', 'successfully'), ('implementing', 'implement'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('within', 'within'), ('your', 'you'), ('business', 'business')] 

 Dependency tags are: 
>> [(('14', 'hype'), 'nummod'), (('Beyond', 'hype'), 'case'), (('the', 'hype'), 'det'), (('hype', 'root'), 'root'), ((':', 'guide'), 'punct'), (('A', 'guide'), 'det'), (('guide', 'hype'), 'appos'), (('to', 'understanding'), 'mark'), (('understanding', 'guide'), 'acl'), (('and', 'implementing'), 'cc'), (('successfully', 'implementing'), 'advmod'), (('implementing', 'understanding'), 'conj'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'implementing'), 'obj'), (('within', 'business'), 'case'), (('your', 'business'), 'nmod:poss'), (('business', 'implementing'), 'obl')]

 Named Entites are: 
>> []

================================ Paragraph 210 =================================

Summary AI has the potential to bring a lot of value to your company  if thought through and implemented properly. The authors  of this paper hope we’ve made it clear how you can achieve  this goal. We’ve discussed what AI is what it can do for your  organization, how it should be implemented and what pitfalls  you should avoid once you’ve decided to implement AI.  


------------------- Sentence 1 -------------------

 Summary AI has the potential to bring a lot of value to your company  if thought through and implemented properly. 

Tokens are: 
>> ['Summary', 'AI', 'has', 'the', 'potential', 'to', 'bring', 'a', 'lot', 'of', 'value', 'to', 'your', 'company', 'if', 'thought', 'through', 'and', 'implemented', 'properly', '.'] 

 UPOS tags are: 
>> [('Summary', 'NOUN'), ('AI', 'AUX'), ('has', 'VERB'), ('the', 'DET'), ('potential', 'NOUN'), ('to', 'PART'), ('bring', 'VERB'), ('a', 'DET'), ('lot', 'NOUN'), ('of', 'ADP'), ('value', 'NOUN'), ('to', 'ADP'), ('your', 'PRON'), ('company', 'NOUN'), ('if', 'SCONJ'), ('thought', 'VERB'), ('through', 'ADV'), ('and', 'CCONJ'), ('implemented', 'VERB'), ('properly', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Summary', 'NN'), ('AI', 'VBZ'), ('has', 'VBZ'), ('the', 'DT'), ('potential', 'NN'), ('to', 'TO'), ('bring', 'VB'), ('a', 'DT'), ('lot', 'NN'), ('of', 'IN'), ('value', 'NN'), ('to', 'IN'), ('your', 'PRP$'), ('company', 'NN'), ('if', 'IN'), ('thought', 'VBN'), ('through', 'RB'), ('and', 'CC'), ('implemented', 'VBN'), ('properly', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('Summary', 'summary'), ('AI', 'be'), ('has', 'have'), ('the', 'the'), ('potential', 'potential'), ('to', 'to'), ('bring', 'bring'), ('a', 'a'), ('lot', 'lot'), ('of', 'of'), ('value', 'value'), ('to', 'to'), ('your', 'you'), ('company', 'company'), ('if', 'if'), ('thought', 'think'), ('through', 'through'), ('and', 'and'), ('implemented', 'implement'), ('properly', 'properly'), ('.', '.')] 

 Dependency tags are: 
>> [(('Summary', 'has'), 'nsubj'), (('AI', 'has'), 'aux'), (('has', 'root'), 'root'), (('the', 'potential'), 'det'), (('potential', 'has'), 'obj'), (('to', 'bring'), 'mark'), (('bring', 'potential'), 'acl'), (('a', 'lot'), 'det'), (('lot', 'bring'), 'obj'), (('of', 'value'), 'case'), (('value', 'lot'), 'nmod'), (('to', 'company'), 'case'), (('your', 'company'), 'nmod:poss'), (('company', 'bring'), 'obl'), (('if', 'thought'), 'mark'), (('thought', 'bring'), 'advcl'), (('through', 'thought'), 'advmod'), (('and', 'implemented'), 'cc'), (('implemented', 'thought'), 'conj'), (('properly', 'implemented'), 'advmod'), (('.', 'has'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 The authors  of this paper hope we’ve made it clear how you can achieve  this goal. 

Tokens are: 
>> ['The', 'authors', 'of', 'this', 'paper', 'hope', 'we', '’ve', 'made', 'it', 'clear', 'how', 'you', 'can', 'achieve', 'this', 'goal', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('authors', 'NOUN'), ('of', 'ADP'), ('this', 'DET'), ('paper', 'NOUN'), ('hope', 'VERB'), ('we', 'PRON'), ('’ve', 'AUX'), ('made', 'VERB'), ('it', 'PRON'), ('clear', 'ADJ'), ('how', 'SCONJ'), ('you', 'PRON'), ('can', 'AUX'), ('achieve', 'VERB'), ('this', 'DET'), ('goal', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('authors', 'NNS'), ('of', 'IN'), ('this', 'DT'), ('paper', 'NN'), ('hope', 'VBP'), ('we', 'PRP'), ('’ve', 'VBP'), ('made', 'VBN'), ('it', 'PRP'), ('clear', 'JJ'), ('how', 'WRB'), ('you', 'PRP'), ('can', 'MD'), ('achieve', 'VB'), ('this', 'DT'), ('goal', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('authors', 'author'), ('of', 'of'), ('this', 'this'), ('paper', 'paper'), ('hope', 'hope'), ('we', 'we'), ('’ve', 'have'), ('made', 'make'), ('it', 'it'), ('clear', 'clear'), ('how', 'how'), ('you', 'you'), ('can', 'can'), ('achieve', 'achieve'), ('this', 'this'), ('goal', 'goal'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'authors'), 'det'), (('authors', 'hope'), 'nsubj'), (('of', 'paper'), 'case'), (('this', 'paper'), 'det'), (('paper', 'authors'), 'nmod'), (('hope', 'root'), 'root'), (('we', 'made'), 'nsubj'), (('’ve', 'made'), 'aux'), (('made', 'hope'), 'ccomp'), (('it', 'made'), 'obj'), (('clear', 'made'), 'xcomp'), (('how', 'achieve'), 'mark'), (('you', 'achieve'), 'nsubj'), (('can', 'achieve'), 'aux'), (('achieve', 'clear'), 'ccomp'), (('this', 'goal'), 'det'), (('goal', 'achieve'), 'obj'), (('.', 'hope'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 We’ve discussed what AI is what it can do for your  organization, how it should be implemented and what pitfalls  you should avoid once you’ve decided to implement AI. 

Tokens are: 
>> ['We', '’ve', 'discussed', 'what', 'AI', 'is', 'what', 'it', 'can', 'do', 'for', 'your', 'organization', ',', 'how', 'it', 'should', 'be', 'implemented', 'and', 'what', 'pitfalls', 'you', 'should', 'avoid', 'once', 'you', '’ve', 'decided', 'to', 'implement', 'AI', '.'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('’ve', 'AUX'), ('discussed', 'VERB'), ('what', 'PRON'), ('AI', 'VERB'), ('is', 'AUX'), ('what', 'PRON'), ('it', 'PRON'), ('can', 'AUX'), ('do', 'VERB'), ('for', 'ADP'), ('your', 'PRON'), ('organization', 'NOUN'), (',', 'PUNCT'), ('how', 'SCONJ'), ('it', 'PRON'), ('should', 'AUX'), ('be', 'AUX'), ('implemented', 'VERB'), ('and', 'CCONJ'), ('what', 'DET'), ('pitfalls', 'NOUN'), ('you', 'PRON'), ('should', 'AUX'), ('avoid', 'VERB'), ('once', 'SCONJ'), ('you', 'PRON'), ('’ve', 'AUX'), ('decided', 'VERB'), ('to', 'PART'), ('implement', 'VERB'), ('AI', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('’ve', 'VBP'), ('discussed', 'VBN'), ('what', 'WP'), ('AI', 'VBZ'), ('is', 'VBZ'), ('what', 'WP'), ('it', 'PRP'), ('can', 'MD'), ('do', 'VB'), ('for', 'IN'), ('your', 'PRP$'), ('organization', 'NN'), (',', ','), ('how', 'WRB'), ('it', 'PRP'), ('should', 'MD'), ('be', 'VB'), ('implemented', 'VBN'), ('and', 'CC'), ('what', 'WDT'), ('pitfalls', 'NNS'), ('you', 'PRP'), ('should', 'MD'), ('avoid', 'VB'), ('once', 'IN'), ('you', 'PRP'), ('’ve', 'VBP'), ('decided', 'VBN'), ('to', 'TO'), ('implement', 'VB'), ('AI', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('’ve', 'have'), ('discussed', 'discuss'), ('what', 'what'), ('AI', 'be'), ('is', 'be'), ('what', 'what'), ('it', 'it'), ('can', 'can'), ('do', 'do'), ('for', 'for'), ('your', 'you'), ('organization', 'organization'), (',', ','), ('how', 'how'), ('it', 'it'), ('should', 'should'), ('be', 'be'), ('implemented', 'implement'), ('and', 'and'), ('what', 'what'), ('pitfalls', 'pitfall'), ('you', 'you'), ('should', 'should'), ('avoid', 'avoid'), ('once', 'once'), ('you', 'you'), ('’ve', 'have'), ('decided', 'decide'), ('to', 'to'), ('implement', 'implement'), ('AI', 'ai'), ('.', '.')] 

 Dependency tags are: 
>> [(('We', 'discussed'), 'nsubj'), (('’ve', 'discussed'), 'aux'), (('discussed', 'root'), 'root'), (('what', 'discussed'), 'obj'), (('AI', 'discussed'), 'ccomp'), (('is', 'what'), 'cop'), (('what', 'AI'), 'nsubj'), (('it', 'do'), 'nsubj'), (('can', 'do'), 'aux'), (('do', 'what'), 'acl:relcl'), (('for', 'organization'), 'case'), (('your', 'organization'), 'nmod:poss'), (('organization', 'do'), 'obl'), ((',', 'implemented'), 'punct'), (('how', 'implemented'), 'mark'), (('it', 'implemented'), 'nsubj:pass'), (('should', 'implemented'), 'aux'), (('be', 'implemented'), 'aux:pass'), (('implemented', 'do'), 'advcl'), (('and', 'avoid'), 'cc'), (('what', 'pitfalls'), 'det'), (('pitfalls', 'avoid'), 'obj'), (('you', 'avoid'), 'nsubj'), (('should', 'avoid'), 'aux'), (('avoid', 'implemented'), 'conj'), (('once', 'decided'), 'mark'), (('you', 'decided'), 'nsubj'), (('’ve', 'decided'), 'aux'), (('decided', 'avoid'), 'advcl'), (('to', 'implement'), 'mark'), (('implement', 'decided'), 'xcomp'), (('AI', 'implement'), 'obj'), (('.', 'discussed'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

================================ Paragraph 211 =================================

To sum up this paper’s key points: 


------------------- Sentence 1 -------------------

 To sum up this paper’s key points: 

Tokens are: 
>> ['To', 'sum', 'up', 'this', 'paper', '’s', 'key', 'points', ':'] 

 UPOS tags are: 
>> [('To', 'PART'), ('sum', 'VERB'), ('up', 'ADP'), ('this', 'DET'), ('paper', 'NOUN'), ('’s', 'PART'), ('key', 'ADJ'), ('points', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('To', 'TO'), ('sum', 'VB'), ('up', 'RP'), ('this', 'DT'), ('paper', 'NN'), ('’s', 'POS'), ('key', 'JJ'), ('points', 'NNS'), (':', ':')] 

 Lemmas are: 
>> [('To', 'to'), ('sum', 'sum'), ('up', 'up'), ('this', 'this'), ('paper', 'paper'), ('’s', "'s"), ('key', 'key'), ('points', 'point'), (':', ':')] 

 Dependency tags are: 
>> [(('To', 'sum'), 'mark'), (('sum', 'root'), 'root'), (('up', 'sum'), 'compound:prt'), (('this', 'paper'), 'det'), (('paper', 'points'), 'nmod:poss'), (('’s', 'paper'), 'case'), (('key', 'points'), 'amod'), (('points', 'sum'), 'obj'), ((':', 'sum'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 212 =================================

AI not something of the future, it is real today, and it fuels  the fourth Industrial Revolution: As you will see later in this  paper, there are many cases where AI is being successfully  implemented and driving competitive advantage. Companies  such as IBM, Nvidia, Twitter, Delta Airlines, Walmart, Netflix,  Spotify and Kreditech show that their data-driven approach  produces extremely valuable business models. But for many  companies, failing to implement a data-driven strategy can  lead to lost market share.  


------------------- Sentence 1 -------------------

 AI not something of the future, it is real today, and it fuels  the fourth Industrial Revolution: 

Tokens are: 
>> ['AI', 'not', 'something', 'of', 'the', 'future', ',', 'it', 'is', 'real', 'today', ',', 'and', 'it', 'fuels', 'the', 'fourth', 'Industrial', 'Revolution', ':'] 

 UPOS tags are: 
>> [('AI', 'AUX'), ('not', 'PART'), ('something', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('future', 'NOUN'), (',', 'PUNCT'), ('it', 'PRON'), ('is', 'AUX'), ('real', 'ADJ'), ('today', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('it', 'PRON'), ('fuels', 'VERB'), ('the', 'DET'), ('fourth', 'ADJ'), ('Industrial', 'ADJ'), ('Revolution', 'PROPN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('AI', 'VBZ'), ('not', 'RB'), ('something', 'NN'), ('of', 'IN'), ('the', 'DT'), ('future', 'NN'), (',', ','), ('it', 'PRP'), ('is', 'VBZ'), ('real', 'JJ'), ('today', 'NN'), (',', ','), ('and', 'CC'), ('it', 'PRP'), ('fuels', 'VBZ'), ('the', 'DT'), ('fourth', 'JJ'), ('Industrial', 'NNP'), ('Revolution', 'NNP'), (':', ':')] 

 Lemmas are: 
>> [('AI', 'be'), ('not', 'not'), ('something', 'something'), ('of', 'of'), ('the', 'the'), ('future', 'future'), (',', ','), ('it', 'it'), ('is', 'be'), ('real', 'real'), ('today', 'today'), (',', ','), ('and', 'and'), ('it', 'it'), ('fuels', 'fuel'), ('the', 'the'), ('fourth', 'fourth'), ('Industrial', 'Industrial'), ('Revolution', 'Revolution'), (':', ':')] 

 Dependency tags are: 
>> [(('AI', 'something'), 'cop'), (('not', 'something'), 'advmod'), (('something', 'root'), 'root'), (('of', 'future'), 'case'), (('the', 'future'), 'det'), (('future', 'something'), 'nmod'), ((',', 'something'), 'punct'), (('it', 'real'), 'nsubj'), (('is', 'real'), 'cop'), (('real', 'something'), 'parataxis'), (('today', 'real'), 'obl:tmod'), ((',', 'fuels'), 'punct'), (('and', 'fuels'), 'cc'), (('it', 'fuels'), 'nsubj'), (('fuels', 'real'), 'conj'), (('the', 'Revolution'), 'det'), (('fourth', 'Revolution'), 'amod'), (('Industrial', 'Revolution'), 'amod'), (('Revolution', 'fuels'), 'obj'), ((':', 'something'), 'punct')]

 Named Entites are: 
>> [('today', 'DATE'), ('fourth', 'ORDINAL'), ('Industrial Revolution', 'EVENT')]

------------------- Sentence 2 -------------------

 As you will see later in this  paper, there are many cases where AI is being successfully  implemented and driving competitive advantage. 

Tokens are: 
>> ['As', 'you', 'will', 'see', 'later', 'in', 'this', 'paper', ',', 'there', 'are', 'many', 'cases', 'where', 'AI', 'is', 'being', 'successfully', 'implemented', 'and', 'driving', 'competitive', 'advantage', '.'] 

 UPOS tags are: 
>> [('As', 'SCONJ'), ('you', 'PRON'), ('will', 'AUX'), ('see', 'VERB'), ('later', 'ADV'), ('in', 'ADP'), ('this', 'DET'), ('paper', 'NOUN'), (',', 'PUNCT'), ('there', 'PRON'), ('are', 'VERB'), ('many', 'ADJ'), ('cases', 'NOUN'), ('where', 'SCONJ'), ('AI', 'PRON'), ('is', 'AUX'), ('being', 'AUX'), ('successfully', 'ADV'), ('implemented', 'VERB'), ('and', 'CCONJ'), ('driving', 'VERB'), ('competitive', 'ADJ'), ('advantage', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('As', 'IN'), ('you', 'PRP'), ('will', 'MD'), ('see', 'VB'), ('later', 'RB'), ('in', 'IN'), ('this', 'DT'), ('paper', 'NN'), (',', ','), ('there', 'EX'), ('are', 'VBP'), ('many', 'JJ'), ('cases', 'NNS'), ('where', 'WRB'), ('AI', 'PRP'), ('is', 'VBZ'), ('being', 'VBG'), ('successfully', 'RB'), ('implemented', 'VBN'), ('and', 'CC'), ('driving', 'VBG'), ('competitive', 'JJ'), ('advantage', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('As', 'as'), ('you', 'you'), ('will', 'will'), ('see', 'see'), ('later', 'late'), ('in', 'in'), ('this', 'this'), ('paper', 'paper'), (',', ','), ('there', 'there'), ('are', 'be'), ('many', 'many'), ('cases', 'case'), ('where', 'where'), ('AI', 'ai'), ('is', 'be'), ('being', 'be'), ('successfully', 'successfully'), ('implemented', 'implement'), ('and', 'and'), ('driving', 'drive'), ('competitive', 'competitive'), ('advantage', 'advantage'), ('.', '.')] 

 Dependency tags are: 
>> [(('As', 'see'), 'mark'), (('you', 'see'), 'nsubj'), (('will', 'see'), 'aux'), (('see', 'are'), 'advcl'), (('later', 'see'), 'advmod'), (('in', 'paper'), 'case'), (('this', 'paper'), 'det'), (('paper', 'see'), 'obl'), ((',', 'are'), 'punct'), (('there', 'are'), 'expl'), (('are', 'root'), 'root'), (('many', 'cases'), 'amod'), (('cases', 'are'), 'nsubj'), (('where', 'implemented'), 'mark'), (('AI', 'implemented'), 'nsubj:pass'), (('is', 'implemented'), 'aux'), (('being', 'implemented'), 'aux:pass'), (('successfully', 'implemented'), 'advmod'), (('implemented', 'cases'), 'acl:relcl'), (('and', 'driving'), 'cc'), (('driving', 'implemented'), 'conj'), (('competitive', 'advantage'), 'amod'), (('advantage', 'driving'), 'obj'), (('.', 'are'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Companies  such as IBM, Nvidia, Twitter, Delta Airlines, Walmart, Netflix,  Spotify and Kreditech show that their data-driven approach  produces extremely valuable business models. 

Tokens are: 
>> ['Companies', 'such', 'as', 'IBM', ',', 'Nvidia', ',', 'Twitter', ',', 'Delta', 'Airlines', ',', 'Walmart', ',', 'Netflix', ',', 'Spotify', 'and', 'Kreditech', 'show', 'that', 'their', 'data-driven', 'approach', 'produces', 'extremely', 'valuable', 'business', 'models', '.'] 

 UPOS tags are: 
>> [('Companies', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('IBM', 'PROPN'), (',', 'PUNCT'), ('Nvidia', 'PROPN'), (',', 'PUNCT'), ('Twitter', 'PROPN'), (',', 'PUNCT'), ('Delta', 'PROPN'), ('Airlines', 'PROPN'), (',', 'PUNCT'), ('Walmart', 'PROPN'), (',', 'PUNCT'), ('Netflix', 'PROPN'), (',', 'PUNCT'), ('Spotify', 'PROPN'), ('and', 'CCONJ'), ('Kreditech', 'PROPN'), ('show', 'VERB'), ('that', 'SCONJ'), ('their', 'PRON'), ('data-driven', 'ADJ'), ('approach', 'NOUN'), ('produces', 'VERB'), ('extremely', 'ADV'), ('valuable', 'ADJ'), ('business', 'NOUN'), ('models', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Companies', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('IBM', 'NNP'), (',', ','), ('Nvidia', 'NNP'), (',', ','), ('Twitter', 'NNP'), (',', ','), ('Delta', 'NNP'), ('Airlines', 'NNPS'), (',', ','), ('Walmart', 'NNP'), (',', ','), ('Netflix', 'NNP'), (',', ','), ('Spotify', 'NNP'), ('and', 'CC'), ('Kreditech', 'NNP'), ('show', 'VBP'), ('that', 'IN'), ('their', 'PRP$'), ('data-driven', 'JJ'), ('approach', 'NN'), ('produces', 'VBZ'), ('extremely', 'RB'), ('valuable', 'JJ'), ('business', 'NN'), ('models', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Companies', 'company'), ('such', 'such'), ('as', 'as'), ('IBM', 'IBM'), (',', ','), ('Nvidia', 'Nvidia'), (',', ','), ('Twitter', 'Twitter'), (',', ','), ('Delta', 'Delta'), ('Airlines', 'Airline'), (',', ','), ('Walmart', 'Walmart'), (',', ','), ('Netflix', 'Netflix'), (',', ','), ('Spotify', 'Spotify'), ('and', 'and'), ('Kreditech', 'Kreditech'), ('show', 'show'), ('that', 'that'), ('their', 'they'), ('data-driven', 'data-driven'), ('approach', 'approach'), ('produces', 'produce'), ('extremely', 'extremely'), ('valuable', 'valuable'), ('business', 'business'), ('models', 'model'), ('.', '.')] 

 Dependency tags are: 
>> [(('Companies', 'show'), 'nsubj'), (('such', 'IBM'), 'case'), (('as', 'such'), 'fixed'), (('IBM', 'Companies'), 'nmod'), ((',', 'Nvidia'), 'punct'), (('Nvidia', 'IBM'), 'conj'), ((',', 'Twitter'), 'punct'), (('Twitter', 'IBM'), 'conj'), ((',', 'Airlines'), 'punct'), (('Delta', 'Airlines'), 'compound'), (('Airlines', 'IBM'), 'conj'), ((',', 'Walmart'), 'punct'), (('Walmart', 'IBM'), 'conj'), ((',', 'Netflix'), 'punct'), (('Netflix', 'IBM'), 'conj'), ((',', 'Spotify'), 'punct'), (('Spotify', 'IBM'), 'conj'), (('and', 'Kreditech'), 'cc'), (('Kreditech', 'IBM'), 'conj'), (('show', 'root'), 'root'), (('that', 'produces'), 'mark'), (('their', 'approach'), 'nmod:poss'), (('data-driven', 'approach'), 'amod'), (('approach', 'produces'), 'nsubj'), (('produces', 'show'), 'ccomp'), (('extremely', 'valuable'), 'advmod'), (('valuable', 'models'), 'amod'), (('business', 'models'), 'compound'), (('models', 'produces'), 'obj'), (('.', 'show'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG'), ('Nvidia', 'ORG'), ('Twitter', 'ORG'), ('Delta Airlines', 'ORG'), ('Walmart', 'ORG'), ('Netflix', 'ORG'), ('Spotify', 'ORG'), ('Kreditech', 'ORG')]

------------------- Sentence 4 -------------------

 But for many  companies, failing to implement a data-driven strategy can  lead to lost market share. 

Tokens are: 
>> ['But', 'for', 'many', 'companies', ',', 'failing', 'to', 'implement', 'a', 'data-driven', 'strategy', 'can', 'lead', 'to', 'lost', 'market', 'share', '.'] 

 UPOS tags are: 
>> [('But', 'CCONJ'), ('for', 'ADP'), ('many', 'ADJ'), ('companies', 'NOUN'), (',', 'PUNCT'), ('failing', 'VERB'), ('to', 'PART'), ('implement', 'VERB'), ('a', 'DET'), ('data-driven', 'ADJ'), ('strategy', 'NOUN'), ('can', 'AUX'), ('lead', 'VERB'), ('to', 'ADP'), ('lost', 'VERB'), ('market', 'NOUN'), ('share', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('But', 'CC'), ('for', 'IN'), ('many', 'JJ'), ('companies', 'NNS'), (',', ','), ('failing', 'VBG'), ('to', 'TO'), ('implement', 'VB'), ('a', 'DT'), ('data-driven', 'JJ'), ('strategy', 'NN'), ('can', 'MD'), ('lead', 'VB'), ('to', 'IN'), ('lost', 'VBN'), ('market', 'NN'), ('share', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('But', 'but'), ('for', 'for'), ('many', 'many'), ('companies', 'company'), (',', ','), ('failing', 'fail'), ('to', 'to'), ('implement', 'implement'), ('a', 'a'), ('data-driven', 'data-driven'), ('strategy', 'strategy'), ('can', 'can'), ('lead', 'lead'), ('to', 'to'), ('lost', 'lose'), ('market', 'market'), ('share', 'share'), ('.', '.')] 

 Dependency tags are: 
>> [(('But', 'lead'), 'cc'), (('for', 'companies'), 'case'), (('many', 'companies'), 'amod'), (('companies', 'lead'), 'obl'), ((',', 'lead'), 'punct'), (('failing', 'lead'), 'csubj'), (('to', 'implement'), 'mark'), (('implement', 'failing'), 'xcomp'), (('a', 'strategy'), 'det'), (('data-driven', 'strategy'), 'amod'), (('strategy', 'implement'), 'obj'), (('can', 'lead'), 'aux'), (('lead', 'root'), 'root'), (('to', 'share'), 'case'), (('lost', 'share'), 'amod'), (('market', 'share'), 'compound'), (('share', 'lead'), 'obl'), (('.', 'lead'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 213 =================================

Properly implementing AI requires careful evaluation and  planning: You need to evaluate how AI can help solve your  problems, where your company is right now in terms of  capabilities and what needs to be done before you can  properly implement AI to address the problems you want  to solve or the opportunities you want to take.  


------------------- Sentence 1 -------------------

 Properly implementing AI requires careful evaluation and  planning: 

Tokens are: 
>> ['Properly', 'implementing', 'AI', 'requires', 'careful', 'evaluation', 'and', 'planning', ':'] 

 UPOS tags are: 
>> [('Properly', 'ADV'), ('implementing', 'VERB'), ('AI', 'NOUN'), ('requires', 'VERB'), ('careful', 'ADJ'), ('evaluation', 'NOUN'), ('and', 'CCONJ'), ('planning', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Properly', 'RB'), ('implementing', 'VBG'), ('AI', 'NN'), ('requires', 'VBZ'), ('careful', 'JJ'), ('evaluation', 'NN'), ('and', 'CC'), ('planning', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('Properly', 'properly'), ('implementing', 'implement'), ('AI', 'ai'), ('requires', 'require'), ('careful', 'careful'), ('evaluation', 'evaluation'), ('and', 'and'), ('planning', 'planning'), (':', ':')] 

 Dependency tags are: 
>> [(('Properly', 'implementing'), 'advmod'), (('implementing', 'requires'), 'csubj'), (('AI', 'implementing'), 'obj'), (('requires', 'root'), 'root'), (('careful', 'evaluation'), 'amod'), (('evaluation', 'requires'), 'obj'), (('and', 'planning'), 'cc'), (('planning', 'evaluation'), 'conj'), ((':', 'requires'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 2 -------------------

 You need to evaluate how AI can help solve your  problems, where your company is right now in terms of  capabilities and what needs to be done before you can  properly implement AI to address the problems you want  to solve or the opportunities you want to take. 

Tokens are: 
>> ['You', 'need', 'to', 'evaluate', 'how', 'AI', 'can', 'help', 'solve', 'your', 'problems', ',', 'where', 'your', 'company', 'is', 'right', 'now', 'in', 'terms', 'of', 'capabilities', 'and', 'what', 'needs', 'to', 'be', 'done', 'before', 'you', 'can', 'properly', 'implement', 'AI', 'to', 'address', 'the', 'problems', 'you', 'want', 'to', 'solve', 'or', 'the', 'opportunities', 'you', 'want', 'to', 'take', '.'] 

 UPOS tags are: 
>> [('You', 'PRON'), ('need', 'VERB'), ('to', 'PART'), ('evaluate', 'VERB'), ('how', 'SCONJ'), ('AI', 'PRON'), ('can', 'AUX'), ('help', 'VERB'), ('solve', 'VERB'), ('your', 'PRON'), ('problems', 'NOUN'), (',', 'PUNCT'), ('where', 'SCONJ'), ('your', 'PRON'), ('company', 'NOUN'), ('is', 'AUX'), ('right', 'ADV'), ('now', 'ADV'), ('in', 'ADP'), ('terms', 'NOUN'), ('of', 'ADP'), ('capabilities', 'NOUN'), ('and', 'CCONJ'), ('what', 'PRON'), ('needs', 'VERB'), ('to', 'PART'), ('be', 'AUX'), ('done', 'VERB'), ('before', 'SCONJ'), ('you', 'PRON'), ('can', 'AUX'), ('properly', 'ADV'), ('implement', 'VERB'), ('AI', 'PRON'), ('to', 'PART'), ('address', 'VERB'), ('the', 'DET'), ('problems', 'NOUN'), ('you', 'PRON'), ('want', 'VERB'), ('to', 'PART'), ('solve', 'VERB'), ('or', 'CCONJ'), ('the', 'DET'), ('opportunities', 'NOUN'), ('you', 'PRON'), ('want', 'VERB'), ('to', 'PART'), ('take', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('You', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('evaluate', 'VB'), ('how', 'WRB'), ('AI', 'PRP'), ('can', 'MD'), ('help', 'VB'), ('solve', 'VB'), ('your', 'PRP$'), ('problems', 'NNS'), (',', ','), ('where', 'WRB'), ('your', 'PRP$'), ('company', 'NN'), ('is', 'VBZ'), ('right', 'RB'), ('now', 'RB'), ('in', 'IN'), ('terms', 'NNS'), ('of', 'IN'), ('capabilities', 'NNS'), ('and', 'CC'), ('what', 'WP'), ('needs', 'VBZ'), ('to', 'TO'), ('be', 'VB'), ('done', 'VBN'), ('before', 'IN'), ('you', 'PRP'), ('can', 'MD'), ('properly', 'RB'), ('implement', 'VB'), ('AI', 'PRP'), ('to', 'TO'), ('address', 'VB'), ('the', 'DT'), ('problems', 'NNS'), ('you', 'PRP'), ('want', 'VBP'), ('to', 'TO'), ('solve', 'VB'), ('or', 'CC'), ('the', 'DT'), ('opportunities', 'NNS'), ('you', 'PRP'), ('want', 'VBP'), ('to', 'TO'), ('take', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('You', 'you'), ('need', 'need'), ('to', 'to'), ('evaluate', 'evaluate'), ('how', 'how'), ('AI', 'ai'), ('can', 'can'), ('help', 'help'), ('solve', 'solve'), ('your', 'you'), ('problems', 'problem'), (',', ','), ('where', 'where'), ('your', 'you'), ('company', 'company'), ('is', 'be'), ('right', 'right'), ('now', 'now'), ('in', 'in'), ('terms', 'term'), ('of', 'of'), ('capabilities', 'capability'), ('and', 'and'), ('what', 'what'), ('needs', 'need'), ('to', 'to'), ('be', 'be'), ('done', 'do'), ('before', 'before'), ('you', 'you'), ('can', 'can'), ('properly', 'properly'), ('implement', 'implement'), ('AI', 'ai'), ('to', 'to'), ('address', 'address'), ('the', 'the'), ('problems', 'problem'), ('you', 'you'), ('want', 'want'), ('to', 'to'), ('solve', 'solve'), ('or', 'or'), ('the', 'the'), ('opportunities', 'opportunity'), ('you', 'you'), ('want', 'want'), ('to', 'to'), ('take', 'take'), ('.', '.')] 

 Dependency tags are: 
>> [(('You', 'need'), 'nsubj'), (('need', 'root'), 'root'), (('to', 'evaluate'), 'mark'), (('evaluate', 'need'), 'xcomp'), (('how', 'help'), 'mark'), (('AI', 'help'), 'nsubj'), (('can', 'help'), 'aux'), (('help', 'evaluate'), 'ccomp'), (('solve', 'help'), 'xcomp'), (('your', 'problems'), 'nmod:poss'), (('problems', 'solve'), 'obj'), ((',', 'problems'), 'punct'), (('where', 'terms'), 'mark'), (('your', 'company'), 'nmod:poss'), (('company', 'now'), 'nsubj'), (('is', 'now'), 'cop'), (('right', 'now'), 'advmod'), (('now', 'terms'), 'advmod'), (('in', 'terms'), 'case'), (('terms', 'solve'), 'advcl'), (('of', 'capabilities'), 'case'), (('capabilities', 'terms'), 'nmod'), (('and', 'what'), 'cc'), (('what', 'terms'), 'conj'), (('needs', 'what'), 'acl:relcl'), (('to', 'done'), 'mark'), (('be', 'done'), 'aux:pass'), (('done', 'needs'), 'xcomp'), (('before', 'implement'), 'mark'), (('you', 'implement'), 'nsubj'), (('can', 'implement'), 'aux'), (('properly', 'implement'), 'advmod'), (('implement', 'needs'), 'advcl'), (('AI', 'implement'), 'obj'), (('to', 'address'), 'mark'), (('address', 'implement'), 'xcomp'), (('the', 'problems'), 'det'), (('problems', 'address'), 'obj'), (('you', 'want'), 'nsubj'), (('want', 'problems'), 'acl:relcl'), (('to', 'solve'), 'mark'), (('solve', 'want'), 'xcomp'), (('or', 'opportunities'), 'cc'), (('the', 'opportunities'), 'det'), (('opportunities', 'problems'), 'conj'), (('you', 'want'), 'nsubj'), (('want', 'opportunities'), 'acl:relcl'), (('to', 'take'), 'mark'), (('take', 'want'), 'xcomp'), (('.', 'need'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 214 =================================

There is no one magic algorithm that can solve all your  problems: Before implementing AI, you should focus on  the problems you have and how AI can help you solve  them. Next, you need to check whether the data you need  to solve your problems is available. Often a hybrid between  algorithms can be the right fit, depending on the problems  you want to solve.  


------------------- Sentence 1 -------------------

 There is no one magic algorithm that can solve all your  problems: 

Tokens are: 
>> ['There', 'is', 'no', 'one', 'magic', 'algorithm', 'that', 'can', 'solve', 'all', 'your', 'problems', ':'] 

 UPOS tags are: 
>> [('There', 'PRON'), ('is', 'VERB'), ('no', 'DET'), ('one', 'NUM'), ('magic', 'NOUN'), ('algorithm', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('solve', 'VERB'), ('all', 'DET'), ('your', 'PRON'), ('problems', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('There', 'EX'), ('is', 'VBZ'), ('no', 'DT'), ('one', 'CD'), ('magic', 'NN'), ('algorithm', 'NN'), ('that', 'WDT'), ('can', 'MD'), ('solve', 'VB'), ('all', 'PDT'), ('your', 'PRP$'), ('problems', 'NNS'), (':', ':')] 

 Lemmas are: 
>> [('There', 'there'), ('is', 'be'), ('no', 'no'), ('one', 'one'), ('magic', 'magic'), ('algorithm', 'algorithm'), ('that', 'that'), ('can', 'can'), ('solve', 'solve'), ('all', 'all'), ('your', 'you'), ('problems', 'problem'), (':', ':')] 

 Dependency tags are: 
>> [(('There', 'is'), 'expl'), (('is', 'root'), 'root'), (('no', 'algorithm'), 'det'), (('one', 'algorithm'), 'nummod'), (('magic', 'algorithm'), 'compound'), (('algorithm', 'is'), 'nsubj'), (('that', 'solve'), 'nsubj'), (('can', 'solve'), 'aux'), (('solve', 'algorithm'), 'acl:relcl'), (('all', 'problems'), 'det:predet'), (('your', 'problems'), 'nmod:poss'), (('problems', 'solve'), 'obj'), ((':', 'is'), 'punct')]

 Named Entites are: 
>> [('one', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Before implementing AI, you should focus on  the problems you have and how AI can help you solve  them. 

Tokens are: 
>> ['Before', 'implementing', 'AI', ',', 'you', 'should', 'focus', 'on', 'the', 'problems', 'you', 'have', 'and', 'how', 'AI', 'can', 'help', 'you', 'solve', 'them', '.'] 

 UPOS tags are: 
>> [('Before', 'SCONJ'), ('implementing', 'VERB'), ('AI', 'NOUN'), (',', 'PUNCT'), ('you', 'PRON'), ('should', 'AUX'), ('focus', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('problems', 'NOUN'), ('you', 'PRON'), ('have', 'VERB'), ('and', 'CCONJ'), ('how', 'SCONJ'), ('AI', 'PRON'), ('can', 'AUX'), ('help', 'VERB'), ('you', 'PRON'), ('solve', 'VERB'), ('them', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Before', 'IN'), ('implementing', 'VBG'), ('AI', 'NN'), (',', ','), ('you', 'PRP'), ('should', 'MD'), ('focus', 'VB'), ('on', 'IN'), ('the', 'DT'), ('problems', 'NNS'), ('you', 'PRP'), ('have', 'VBP'), ('and', 'CC'), ('how', 'WRB'), ('AI', 'PRP'), ('can', 'MD'), ('help', 'VB'), ('you', 'PRP'), ('solve', 'VB'), ('them', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('Before', 'before'), ('implementing', 'implement'), ('AI', 'ai'), (',', ','), ('you', 'you'), ('should', 'should'), ('focus', 'focus'), ('on', 'on'), ('the', 'the'), ('problems', 'problem'), ('you', 'you'), ('have', 'have'), ('and', 'and'), ('how', 'how'), ('AI', 'ai'), ('can', 'can'), ('help', 'help'), ('you', 'you'), ('solve', 'solve'), ('them', 'they'), ('.', '.')] 

 Dependency tags are: 
>> [(('Before', 'implementing'), 'mark'), (('implementing', 'focus'), 'advcl'), (('AI', 'implementing'), 'obj'), ((',', 'focus'), 'punct'), (('you', 'focus'), 'nsubj'), (('should', 'focus'), 'aux'), (('focus', 'root'), 'root'), (('on', 'problems'), 'case'), (('the', 'problems'), 'det'), (('problems', 'focus'), 'obl'), (('you', 'have'), 'nsubj'), (('have', 'problems'), 'acl:relcl'), (('and', 'help'), 'cc'), (('how', 'help'), 'mark'), (('AI', 'help'), 'nsubj'), (('can', 'help'), 'aux'), (('help', 'focus'), 'conj'), (('you', 'help'), 'obj'), (('solve', 'help'), 'xcomp'), (('them', 'solve'), 'obj'), (('.', 'focus'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 3 -------------------

 Next, you need to check whether the data you need  to solve your problems is available. 

Tokens are: 
>> ['Next', ',', 'you', 'need', 'to', 'check', 'whether', 'the', 'data', 'you', 'need', 'to', 'solve', 'your', 'problems', 'is', 'available', '.'] 

 UPOS tags are: 
>> [('Next', 'ADV'), (',', 'PUNCT'), ('you', 'PRON'), ('need', 'VERB'), ('to', 'PART'), ('check', 'VERB'), ('whether', 'SCONJ'), ('the', 'DET'), ('data', 'NOUN'), ('you', 'PRON'), ('need', 'VERB'), ('to', 'PART'), ('solve', 'VERB'), ('your', 'PRON'), ('problems', 'NOUN'), ('is', 'AUX'), ('available', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Next', 'RB'), (',', ','), ('you', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('check', 'VB'), ('whether', 'IN'), ('the', 'DT'), ('data', 'NNS'), ('you', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('solve', 'VB'), ('your', 'PRP$'), ('problems', 'NNS'), ('is', 'VBZ'), ('available', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('Next', 'next'), (',', ','), ('you', 'you'), ('need', 'need'), ('to', 'to'), ('check', 'check'), ('whether', 'whether'), ('the', 'the'), ('data', 'datum'), ('you', 'you'), ('need', 'need'), ('to', 'to'), ('solve', 'solve'), ('your', 'you'), ('problems', 'problem'), ('is', 'be'), ('available', 'available'), ('.', '.')] 

 Dependency tags are: 
>> [(('Next', 'need'), 'advmod'), ((',', 'need'), 'punct'), (('you', 'need'), 'nsubj'), (('need', 'root'), 'root'), (('to', 'check'), 'mark'), (('check', 'need'), 'xcomp'), (('whether', 'available'), 'mark'), (('the', 'data'), 'det'), (('data', 'available'), 'nsubj'), (('you', 'need'), 'nsubj'), (('need', 'data'), 'acl:relcl'), (('to', 'solve'), 'mark'), (('solve', 'need'), 'xcomp'), (('your', 'problems'), 'nmod:poss'), (('problems', 'solve'), 'obj'), (('is', 'available'), 'cop'), (('available', 'check'), 'ccomp'), (('.', 'need'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Often a hybrid between  algorithms can be the right fit, depending on the problems  you want to solve. 

Tokens are: 
>> ['Often', 'a', 'hybrid', 'between', 'algorithms', 'can', 'be', 'the', 'right', 'fit', ',', 'depending', 'on', 'the', 'problems', 'you', 'want', 'to', 'solve', '.'] 

 UPOS tags are: 
>> [('Often', 'ADV'), ('a', 'DET'), ('hybrid', 'NOUN'), ('between', 'ADP'), ('algorithms', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('the', 'DET'), ('right', 'ADJ'), ('fit', 'NOUN'), (',', 'PUNCT'), ('depending', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('problems', 'NOUN'), ('you', 'PRON'), ('want', 'VERB'), ('to', 'PART'), ('solve', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Often', 'RB'), ('a', 'DT'), ('hybrid', 'NN'), ('between', 'IN'), ('algorithms', 'NNS'), ('can', 'MD'), ('be', 'VB'), ('the', 'DT'), ('right', 'JJ'), ('fit', 'NN'), (',', ','), ('depending', 'VBG'), ('on', 'IN'), ('the', 'DT'), ('problems', 'NNS'), ('you', 'PRP'), ('want', 'VBP'), ('to', 'TO'), ('solve', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('Often', 'often'), ('a', 'a'), ('hybrid', 'hybrid'), ('between', 'between'), ('algorithms', 'algorithm'), ('can', 'can'), ('be', 'be'), ('the', 'the'), ('right', 'right'), ('fit', 'fit'), (',', ','), ('depending', 'depend'), ('on', 'on'), ('the', 'the'), ('problems', 'problem'), ('you', 'you'), ('want', 'want'), ('to', 'to'), ('solve', 'solve'), ('.', '.')] 

 Dependency tags are: 
>> [(('Often', 'fit'), 'advmod'), (('a', 'hybrid'), 'det'), (('hybrid', 'fit'), 'nsubj'), (('between', 'algorithms'), 'case'), (('algorithms', 'hybrid'), 'nmod'), (('can', 'fit'), 'aux'), (('be', 'fit'), 'cop'), (('the', 'fit'), 'det'), (('right', 'fit'), 'amod'), (('fit', 'root'), 'root'), ((',', 'fit'), 'punct'), (('depending', 'problems'), 'case'), (('on', 'depending'), 'fixed'), (('the', 'problems'), 'det'), (('problems', 'fit'), 'nmod'), (('you', 'want'), 'nsubj'), (('want', 'problems'), 'acl:relcl'), (('to', 'solve'), 'mark'), (('solve', 'want'), 'xcomp'), (('.', 'fit'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 215 =================================

Supervised learning provides the most economic value:  Supervised learning is currently the most applied form of  learning and provides the most value for a wide variety of  applications. When beginning to implement AI in your  enterprise, you’ll likely be working with supervised learning. 


------------------- Sentence 1 -------------------

 Supervised learning provides the most economic value:  Supervised learning is currently the most applied form of  learning and provides the most value for a wide variety of  applications. 

Tokens are: 
>> ['Supervised', 'learning', 'provides', 'the', 'most', 'economic', 'value', ':', 'Supervised', 'learning', 'is', 'currently', 'the', 'most', 'applied', 'form', 'of', 'learning', 'and', 'provides', 'the', 'most', 'value', 'for', 'a', 'wide', 'variety', 'of', 'applications', '.'] 

 UPOS tags are: 
>> [('Supervised', 'VERB'), ('learning', 'NOUN'), ('provides', 'VERB'), ('the', 'DET'), ('most', 'ADV'), ('economic', 'ADJ'), ('value', 'NOUN'), (':', 'PUNCT'), ('Supervised', 'VERB'), ('learning', 'NOUN'), ('is', 'AUX'), ('currently', 'ADV'), ('the', 'DET'), ('most', 'ADV'), ('applied', 'VERB'), ('form', 'NOUN'), ('of', 'ADP'), ('learning', 'NOUN'), ('and', 'CCONJ'), ('provides', 'VERB'), ('the', 'DET'), ('most', 'ADJ'), ('value', 'NOUN'), ('for', 'ADP'), ('a', 'DET'), ('wide', 'ADJ'), ('variety', 'NOUN'), ('of', 'ADP'), ('applications', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Supervised', 'VBN'), ('learning', 'NN'), ('provides', 'VBZ'), ('the', 'DT'), ('most', 'RBS'), ('economic', 'JJ'), ('value', 'NN'), (':', ':'), ('Supervised', 'VBN'), ('learning', 'NN'), ('is', 'VBZ'), ('currently', 'RB'), ('the', 'DT'), ('most', 'RBS'), ('applied', 'VBN'), ('form', 'NN'), ('of', 'IN'), ('learning', 'NN'), ('and', 'CC'), ('provides', 'VBZ'), ('the', 'DT'), ('most', 'JJS'), ('value', 'NN'), ('for', 'IN'), ('a', 'DT'), ('wide', 'JJ'), ('variety', 'NN'), ('of', 'IN'), ('applications', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Supervised', 'supervise'), ('learning', 'learning'), ('provides', 'provide'), ('the', 'the'), ('most', 'most'), ('economic', 'economic'), ('value', 'value'), (':', ':'), ('Supervised', 'supervise'), ('learning', 'learning'), ('is', 'be'), ('currently', 'currently'), ('the', 'the'), ('most', 'most'), ('applied', 'apply'), ('form', 'form'), ('of', 'of'), ('learning', 'learning'), ('and', 'and'), ('provides', 'provide'), ('the', 'the'), ('most', 'most'), ('value', 'value'), ('for', 'for'), ('a', 'a'), ('wide', 'wide'), ('variety', 'variety'), ('of', 'of'), ('applications', 'application'), ('.', '.')] 

 Dependency tags are: 
>> [(('Supervised', 'learning'), 'amod'), (('learning', 'provides'), 'nsubj'), (('provides', 'root'), 'root'), (('the', 'value'), 'det'), (('most', 'economic'), 'advmod'), (('economic', 'value'), 'amod'), (('value', 'provides'), 'obj'), ((':', 'provides'), 'punct'), (('Supervised', 'learning'), 'amod'), (('learning', 'form'), 'nsubj'), (('is', 'form'), 'cop'), (('currently', 'form'), 'advmod'), (('the', 'form'), 'det'), (('most', 'applied'), 'advmod'), (('applied', 'form'), 'amod'), (('form', 'provides'), 'parataxis'), (('of', 'learning'), 'case'), (('learning', 'form'), 'nmod'), (('and', 'provides'), 'cc'), (('provides', 'form'), 'conj'), (('the', 'value'), 'det'), (('most', 'value'), 'amod'), (('value', 'provides'), 'obj'), (('for', 'variety'), 'case'), (('a', 'variety'), 'det'), (('wide', 'variety'), 'amod'), (('variety', 'value'), 'nmod'), (('of', 'applications'), 'case'), (('applications', 'variety'), 'nmod'), (('.', 'provides'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 When beginning to implement AI in your  enterprise, you’ll likely be working with supervised learning. 

Tokens are: 
>> ['When', 'beginning', 'to', 'implement', 'AI', 'in', 'your', 'enterprise', ',', 'you', '’ll', 'likely', 'be', 'working', 'with', 'supervised', 'learning', '.'] 

 UPOS tags are: 
>> [('When', 'SCONJ'), ('beginning', 'VERB'), ('to', 'PART'), ('implement', 'VERB'), ('AI', 'PRON'), ('in', 'ADP'), ('your', 'PRON'), ('enterprise', 'NOUN'), (',', 'PUNCT'), ('you', 'PRON'), ('’ll', 'AUX'), ('likely', 'ADV'), ('be', 'AUX'), ('working', 'VERB'), ('with', 'ADP'), ('supervised', 'VERB'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('When', 'WRB'), ('beginning', 'VBG'), ('to', 'TO'), ('implement', 'VB'), ('AI', 'PRP'), ('in', 'IN'), ('your', 'PRP$'), ('enterprise', 'NN'), (',', ','), ('you', 'PRP'), ('’ll', 'MD'), ('likely', 'RB'), ('be', 'VB'), ('working', 'VBG'), ('with', 'IN'), ('supervised', 'VBN'), ('learning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('When', 'when'), ('beginning', 'begin'), ('to', 'to'), ('implement', 'implement'), ('AI', 'ai'), ('in', 'in'), ('your', 'you'), ('enterprise', 'enterprise'), (',', ','), ('you', 'you'), ('’ll', 'will'), ('likely', 'likely'), ('be', 'be'), ('working', 'work'), ('with', 'with'), ('supervised', 'supervise'), ('learning', 'learning'), ('.', '.')] 

 Dependency tags are: 
>> [(('When', 'beginning'), 'mark'), (('beginning', 'working'), 'advcl'), (('to', 'implement'), 'mark'), (('implement', 'beginning'), 'xcomp'), (('AI', 'implement'), 'obj'), (('in', 'enterprise'), 'case'), (('your', 'enterprise'), 'nmod:poss'), (('enterprise', 'implement'), 'obl'), ((',', 'beginning'), 'punct'), (('you', 'working'), 'nsubj'), (('’ll', 'working'), 'aux'), (('likely', 'working'), 'advmod'), (('be', 'working'), 'aux'), (('working', 'root'), 'root'), (('with', 'learning'), 'case'), (('supervised', 'learning'), 'amod'), (('learning', 'working'), 'obl'), (('.', 'working'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 216 =================================

In the next section of this paper, we’ll talk about how IBM  can play a role in implementing AI within your organization.  IBM not only has many years of experience with these types  of projects but has also been a pioneer in the AI arena. Based  on its experience and knowledge, IBM can help companies of  all sizes implement AI solutions.  


------------------- Sentence 1 -------------------

 In the next section of this paper, we’ll talk about how IBM  can play a role in implementing AI within your organization. 

Tokens are: 
>> ['In', 'the', 'next', 'section', 'of', 'this', 'paper', ',', 'we', '’ll', 'talk', 'about', 'how', 'IBM', 'can', 'play', 'a', 'role', 'in', 'implementing', 'AI', 'within', 'your', 'organization', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('the', 'DET'), ('next', 'ADJ'), ('section', 'NOUN'), ('of', 'ADP'), ('this', 'DET'), ('paper', 'NOUN'), (',', 'PUNCT'), ('we', 'PRON'), ('’ll', 'AUX'), ('talk', 'VERB'), ('about', 'SCONJ'), ('how', 'SCONJ'), ('IBM', 'PROPN'), ('can', 'AUX'), ('play', 'VERB'), ('a', 'DET'), ('role', 'NOUN'), ('in', 'SCONJ'), ('implementing', 'VERB'), ('AI', 'NOUN'), ('within', 'ADP'), ('your', 'PRON'), ('organization', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('the', 'DT'), ('next', 'JJ'), ('section', 'NN'), ('of', 'IN'), ('this', 'DT'), ('paper', 'NN'), (',', ','), ('we', 'PRP'), ('’ll', 'MD'), ('talk', 'VB'), ('about', 'IN'), ('how', 'WRB'), ('IBM', 'NNP'), ('can', 'MD'), ('play', 'VB'), ('a', 'DT'), ('role', 'NN'), ('in', 'IN'), ('implementing', 'VBG'), ('AI', 'NNS'), ('within', 'IN'), ('your', 'PRP$'), ('organization', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('the', 'the'), ('next', 'next'), ('section', 'section'), ('of', 'of'), ('this', 'this'), ('paper', 'paper'), (',', ','), ('we', 'we'), ('’ll', 'will'), ('talk', 'talk'), ('about', 'about'), ('how', 'how'), ('IBM', 'IBM'), ('can', 'can'), ('play', 'play'), ('a', 'a'), ('role', 'role'), ('in', 'in'), ('implementing', 'implement'), ('AI', 'ai'), ('within', 'within'), ('your', 'you'), ('organization', 'organization'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'section'), 'case'), (('the', 'section'), 'det'), (('next', 'section'), 'amod'), (('section', 'talk'), 'obl'), (('of', 'paper'), 'case'), (('this', 'paper'), 'det'), (('paper', 'section'), 'nmod'), ((',', 'talk'), 'punct'), (('we', 'talk'), 'nsubj'), (('’ll', 'talk'), 'aux'), (('talk', 'root'), 'root'), (('about', 'play'), 'mark'), (('how', 'play'), 'mark'), (('IBM', 'play'), 'nsubj'), (('can', 'play'), 'aux'), (('play', 'talk'), 'advcl'), (('a', 'role'), 'det'), (('role', 'play'), 'obj'), (('in', 'implementing'), 'mark'), (('implementing', 'role'), 'acl'), (('AI', 'implementing'), 'obj'), (('within', 'organization'), 'case'), (('your', 'organization'), 'nmod:poss'), (('organization', 'implementing'), 'obl'), (('.', 'talk'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG'), ('AI', 'ORG')]

------------------- Sentence 2 -------------------

 IBM not only has many years of experience with these types  of projects but has also been a pioneer in the AI arena. 

Tokens are: 
>> ['IBM', 'not', 'only', 'has', 'many', 'years', 'of', 'experience', 'with', 'these', 'types', 'of', 'projects', 'but', 'has', 'also', 'been', 'a', 'pioneer', 'in', 'the', 'AI', 'arena', '.'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('not', 'PART'), ('only', 'ADV'), ('has', 'VERB'), ('many', 'ADJ'), ('years', 'NOUN'), ('of', 'ADP'), ('experience', 'NOUN'), ('with', 'ADP'), ('these', 'DET'), ('types', 'NOUN'), ('of', 'ADP'), ('projects', 'NOUN'), ('but', 'CCONJ'), ('has', 'AUX'), ('also', 'ADV'), ('been', 'AUX'), ('a', 'DET'), ('pioneer', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('AI', 'PROPN'), ('arena', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('not', 'RB'), ('only', 'RB'), ('has', 'VBZ'), ('many', 'JJ'), ('years', 'NNS'), ('of', 'IN'), ('experience', 'NN'), ('with', 'IN'), ('these', 'DT'), ('types', 'NNS'), ('of', 'IN'), ('projects', 'NNS'), ('but', 'CC'), ('has', 'VBZ'), ('also', 'RB'), ('been', 'VBN'), ('a', 'DT'), ('pioneer', 'NN'), ('in', 'IN'), ('the', 'DT'), ('AI', 'NNP'), ('arena', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('not', 'not'), ('only', 'only'), ('has', 'have'), ('many', 'many'), ('years', 'year'), ('of', 'of'), ('experience', 'experience'), ('with', 'with'), ('these', 'this'), ('types', 'type'), ('of', 'of'), ('projects', 'project'), ('but', 'but'), ('has', 'have'), ('also', 'also'), ('been', 'be'), ('a', 'a'), ('pioneer', 'pioneer'), ('in', 'in'), ('the', 'the'), ('AI', 'AI'), ('arena', 'arena'), ('.', '.')] 

 Dependency tags are: 
>> [(('IBM', 'has'), 'nsubj'), (('not', 'has'), 'advmod'), (('only', 'has'), 'advmod'), (('has', 'root'), 'root'), (('many', 'years'), 'amod'), (('years', 'has'), 'obj'), (('of', 'experience'), 'case'), (('experience', 'years'), 'nmod'), (('with', 'types'), 'case'), (('these', 'types'), 'det'), (('types', 'experience'), 'nmod'), (('of', 'projects'), 'case'), (('projects', 'types'), 'nmod'), (('but', 'pioneer'), 'cc'), (('has', 'pioneer'), 'aux'), (('also', 'pioneer'), 'advmod'), (('been', 'pioneer'), 'cop'), (('a', 'pioneer'), 'det'), (('pioneer', 'has'), 'conj'), (('in', 'arena'), 'case'), (('the', 'arena'), 'det'), (('AI', 'arena'), 'compound'), (('arena', 'pioneer'), 'nmod'), (('.', 'has'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG')]

------------------- Sentence 3 -------------------

 Based  on its experience and knowledge, IBM can help companies of  all sizes implement AI solutions. 

Tokens are: 
>> ['Based', 'on', 'its', 'experience', 'and', 'knowledge', ',', 'IBM', 'can', 'help', 'companies', 'of', 'all', 'sizes', 'implement', 'AI', 'solutions', '.'] 

 UPOS tags are: 
>> [('Based', 'VERB'), ('on', 'ADP'), ('its', 'PRON'), ('experience', 'NOUN'), ('and', 'CCONJ'), ('knowledge', 'NOUN'), (',', 'PUNCT'), ('IBM', 'PROPN'), ('can', 'AUX'), ('help', 'VERB'), ('companies', 'NOUN'), ('of', 'ADP'), ('all', 'DET'), ('sizes', 'NOUN'), ('implement', 'VERB'), ('AI', 'NOUN'), ('solutions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Based', 'VBN'), ('on', 'IN'), ('its', 'PRP$'), ('experience', 'NN'), ('and', 'CC'), ('knowledge', 'NN'), (',', ','), ('IBM', 'NNP'), ('can', 'MD'), ('help', 'VB'), ('companies', 'NNS'), ('of', 'IN'), ('all', 'DT'), ('sizes', 'NNS'), ('implement', 'VB'), ('AI', 'NN'), ('solutions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Based', 'base'), ('on', 'on'), ('its', 'its'), ('experience', 'experience'), ('and', 'and'), ('knowledge', 'knowledge'), (',', ','), ('IBM', 'IBM'), ('can', 'can'), ('help', 'help'), ('companies', 'company'), ('of', 'of'), ('all', 'all'), ('sizes', 'size'), ('implement', 'implement'), ('AI', 'ai'), ('solutions', 'solution'), ('.', '.')] 

 Dependency tags are: 
>> [(('Based', 'experience'), 'case'), (('on', 'experience'), 'case'), (('its', 'experience'), 'nmod:poss'), (('experience', 'help'), 'obl'), (('and', 'knowledge'), 'cc'), (('knowledge', 'experience'), 'conj'), ((',', 'help'), 'punct'), (('IBM', 'help'), 'nsubj'), (('can', 'help'), 'aux'), (('help', 'root'), 'root'), (('companies', 'help'), 'obj'), (('of', 'sizes'), 'case'), (('all', 'sizes'), 'det'), (('sizes', 'companies'), 'nmod'), (('implement', 'sizes'), 'acl'), (('AI', 'solutions'), 'compound'), (('solutions', 'implement'), 'obj'), (('.', 'help'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG')]

================================ Paragraph 217 =================================

IBM Services     15 


------------------- Sentence 1 -------------------

 IBM Services     15 

Tokens are: 
>> ['IBM', 'Services', '15'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('Services', 'PROPN'), ('15', 'NUM')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('Services', 'NNPS'), ('15', 'CD')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('Services', 'Service'), ('15', '15')] 

 Dependency tags are: 
>> [(('IBM', 'Services'), 'compound'), (('Services', 'root'), 'root'), (('15', 'Services'), 'nummod')]

 Named Entites are: 
>> [('IBM Services     15', 'ORG')]

================================ Paragraph 218 =================================

IBM Services IBM has the experience and knowledge to help guide your  company through a business and technology transformation.  IBM puts this into practice through the “garage” concept.  The IBM Garage lets you experiment with big ideas, acquire  new expertise and build new enterprise-grade solutions  with modern and emerging technologies for immediate  market impact.  


------------------- Sentence 1 -------------------

 IBM Services IBM has the experience and knowledge to help guide your  company through a business and technology transformation. 

Tokens are: 
>> ['IBM', 'Services', 'IBM', 'has', 'the', 'experience', 'and', 'knowledge', 'to', 'help', 'guide', 'your', 'company', 'through', 'a', 'business', 'and', 'technology', 'transformation', '.'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('Services', 'PROPN'), ('IBM', 'PROPN'), ('has', 'VERB'), ('the', 'DET'), ('experience', 'NOUN'), ('and', 'CCONJ'), ('knowledge', 'NOUN'), ('to', 'PART'), ('help', 'VERB'), ('guide', 'VERB'), ('your', 'PRON'), ('company', 'NOUN'), ('through', 'ADP'), ('a', 'DET'), ('business', 'NOUN'), ('and', 'CCONJ'), ('technology', 'NOUN'), ('transformation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('Services', 'NNPS'), ('IBM', 'NNP'), ('has', 'VBZ'), ('the', 'DT'), ('experience', 'NN'), ('and', 'CC'), ('knowledge', 'NN'), ('to', 'TO'), ('help', 'VB'), ('guide', 'VB'), ('your', 'PRP$'), ('company', 'NN'), ('through', 'IN'), ('a', 'DT'), ('business', 'NN'), ('and', 'CC'), ('technology', 'NN'), ('transformation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('Services', 'Service'), ('IBM', 'IBM'), ('has', 'have'), ('the', 'the'), ('experience', 'experience'), ('and', 'and'), ('knowledge', 'knowledge'), ('to', 'to'), ('help', 'help'), ('guide', 'guide'), ('your', 'you'), ('company', 'company'), ('through', 'through'), ('a', 'a'), ('business', 'business'), ('and', 'and'), ('technology', 'technology'), ('transformation', 'transformation'), ('.', '.')] 

 Dependency tags are: 
>> [(('IBM', 'Services'), 'compound'), (('Services', 'IBM'), 'compound'), (('IBM', 'has'), 'nsubj'), (('has', 'root'), 'root'), (('the', 'experience'), 'det'), (('experience', 'has'), 'obj'), (('and', 'knowledge'), 'cc'), (('knowledge', 'experience'), 'conj'), (('to', 'help'), 'mark'), (('help', 'experience'), 'acl'), (('guide', 'help'), 'xcomp'), (('your', 'company'), 'nmod:poss'), (('company', 'guide'), 'obj'), (('through', 'transformation'), 'case'), (('a', 'transformation'), 'det'), (('business', 'transformation'), 'compound'), (('and', 'technology'), 'cc'), (('technology', 'business'), 'conj'), (('transformation', 'guide'), 'obl'), (('.', 'has'), 'punct')]

 Named Entites are: 
>> [('IBM Services IBM', 'ORG')]

------------------- Sentence 2 -------------------

 IBM puts this into practice through the “garage” concept. 

Tokens are: 
>> ['IBM', 'puts', 'this', 'into', 'practice', 'through', 'the', '“', 'garage', '”', 'concept', '.'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('puts', 'VERB'), ('this', 'PRON'), ('into', 'ADP'), ('practice', 'NOUN'), ('through', 'ADP'), ('the', 'DET'), ('“', 'PUNCT'), ('garage', 'NOUN'), ('”', 'PUNCT'), ('concept', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('puts', 'VBZ'), ('this', 'DT'), ('into', 'IN'), ('practice', 'NN'), ('through', 'IN'), ('the', 'DT'), ('“', '``'), ('garage', 'NN'), ('”', "''"), ('concept', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('puts', 'put'), ('this', 'this'), ('into', 'into'), ('practice', 'practice'), ('through', 'through'), ('the', 'the'), ('“', "''"), ('garage', 'garage'), ('”', "''"), ('concept', 'concept'), ('.', '.')] 

 Dependency tags are: 
>> [(('IBM', 'puts'), 'nsubj'), (('puts', 'root'), 'root'), (('this', 'puts'), 'obj'), (('into', 'practice'), 'case'), (('practice', 'puts'), 'obl'), (('through', 'concept'), 'case'), (('the', 'concept'), 'det'), (('“', 'garage'), 'punct'), (('garage', 'concept'), 'compound'), (('”', 'garage'), 'punct'), (('concept', 'puts'), 'obl'), (('.', 'puts'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG')]

------------------- Sentence 3 -------------------

 The IBM Garage lets you experiment with big ideas, acquire  new expertise and build new enterprise-grade solutions  with modern and emerging technologies for immediate  market impact. 

Tokens are: 
>> ['The', 'IBM', 'Garage', 'lets', 'you', 'experiment', 'with', 'big', 'ideas', ',', 'acquire', 'new', 'expertise', 'and', 'build', 'new', 'enterprise', '-', 'grade', 'solutions', 'with', 'modern', 'and', 'emerging', 'technologies', 'for', 'immediate', 'market', 'impact', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('IBM', 'PROPN'), ('Garage', 'PROPN'), ('lets', 'VERB'), ('you', 'PRON'), ('experiment', 'VERB'), ('with', 'ADP'), ('big', 'ADJ'), ('ideas', 'NOUN'), (',', 'PUNCT'), ('acquire', 'VERB'), ('new', 'ADJ'), ('expertise', 'NOUN'), ('and', 'CCONJ'), ('build', 'VERB'), ('new', 'ADJ'), ('enterprise', 'NOUN'), ('-', 'PUNCT'), ('grade', 'NOUN'), ('solutions', 'NOUN'), ('with', 'ADP'), ('modern', 'ADJ'), ('and', 'CCONJ'), ('emerging', 'ADJ'), ('technologies', 'NOUN'), ('for', 'ADP'), ('immediate', 'ADJ'), ('market', 'NOUN'), ('impact', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('IBM', 'NNP'), ('Garage', 'NNP'), ('lets', 'VBZ'), ('you', 'PRP'), ('experiment', 'VB'), ('with', 'IN'), ('big', 'JJ'), ('ideas', 'NNS'), (',', ','), ('acquire', 'VB'), ('new', 'JJ'), ('expertise', 'NN'), ('and', 'CC'), ('build', 'VB'), ('new', 'JJ'), ('enterprise', 'NN'), ('-', 'HYPH'), ('grade', 'NN'), ('solutions', 'NNS'), ('with', 'IN'), ('modern', 'JJ'), ('and', 'CC'), ('emerging', 'JJ'), ('technologies', 'NNS'), ('for', 'IN'), ('immediate', 'JJ'), ('market', 'NN'), ('impact', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('IBM', 'IBM'), ('Garage', 'Garage'), ('lets', 'let'), ('you', 'you'), ('experiment', 'experiment'), ('with', 'with'), ('big', 'big'), ('ideas', 'idea'), (',', ','), ('acquire', 'acquire'), ('new', 'new'), ('expertise', 'expertise'), ('and', 'and'), ('build', 'build'), ('new', 'new'), ('enterprise', 'enterprise'), ('-', '-'), ('grade', 'grade'), ('solutions', 'solution'), ('with', 'with'), ('modern', 'modern'), ('and', 'and'), ('emerging', 'emerge'), ('technologies', 'technology'), ('for', 'for'), ('immediate', 'immediate'), ('market', 'market'), ('impact', 'impact'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'Garage'), 'det'), (('IBM', 'Garage'), 'compound'), (('Garage', 'lets'), 'nsubj'), (('lets', 'root'), 'root'), (('you', 'experiment'), 'nsubj'), (('experiment', 'lets'), 'ccomp'), (('with', 'ideas'), 'case'), (('big', 'ideas'), 'amod'), (('ideas', 'experiment'), 'obl'), ((',', 'acquire'), 'punct'), (('acquire', 'experiment'), 'conj'), (('new', 'expertise'), 'amod'), (('expertise', 'acquire'), 'obj'), (('and', 'build'), 'cc'), (('build', 'acquire'), 'conj'), (('new', 'solutions'), 'amod'), (('enterprise', 'grade'), 'compound'), (('-', 'grade'), 'punct'), (('grade', 'solutions'), 'compound'), (('solutions', 'build'), 'obj'), (('with', 'technologies'), 'case'), (('modern', 'technologies'), 'amod'), (('and', 'emerging'), 'cc'), (('emerging', 'modern'), 'conj'), (('technologies', 'solutions'), 'nmod'), (('for', 'impact'), 'case'), (('immediate', 'impact'), 'amod'), (('market', 'impact'), 'compound'), (('impact', 'technologies'), 'nmod'), (('.', 'lets'), 'punct')]

 Named Entites are: 
>> [('The IBM Garage', 'ORG')]

================================ Paragraph 219 =================================

IBM looks at implementing AI in a holistic way. You as   a client and IBM can enter into a strategic alliance to  transform your business by creating a platform for  continuous innovation. The IBM Garage lets you innovate  and develop with the speed of a start-up, at the scale and  rigor of an enterprise. It offers an innovation space where  clients and IBM work side-by-side to create first-of-a-kind  strategies and solutions. You can then develop the  expertise to transform the way you work. 


------------------- Sentence 1 -------------------

 IBM looks at implementing AI in a holistic way. 

Tokens are: 
>> ['IBM', 'looks', 'at', 'implementing', 'AI', 'in', 'a', 'holistic', 'way', '.'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('looks', 'VERB'), ('at', 'SCONJ'), ('implementing', 'VERB'), ('AI', 'AUX'), ('in', 'ADP'), ('a', 'DET'), ('holistic', 'ADJ'), ('way', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('looks', 'VBZ'), ('at', 'IN'), ('implementing', 'VBG'), ('AI', 'VBZ'), ('in', 'IN'), ('a', 'DT'), ('holistic', 'JJ'), ('way', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('looks', 'look'), ('at', 'at'), ('implementing', 'implement'), ('AI', 'be'), ('in', 'in'), ('a', 'a'), ('holistic', 'holistic'), ('way', 'way'), ('.', '.')] 

 Dependency tags are: 
>> [(('IBM', 'looks'), 'nsubj'), (('looks', 'root'), 'root'), (('at', 'implementing'), 'mark'), (('implementing', 'looks'), 'advcl'), (('AI', 'way'), 'cop'), (('in', 'way'), 'case'), (('a', 'way'), 'det'), (('holistic', 'way'), 'amod'), (('way', 'looks'), 'advcl'), (('.', 'looks'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG'), ('AI', 'ORG')]

------------------- Sentence 2 -------------------

 You as   a client and IBM can enter into a strategic alliance to  transform your business by creating a platform for  continuous innovation. 

Tokens are: 
>> ['You', 'as', 'a', 'client', 'and', 'IBM', 'can', 'enter', 'into', 'a', 'strategic', 'alliance', 'to', 'transform', 'your', 'business', 'by', 'creating', 'a', 'platform', 'for', 'continuous', 'innovation', '.'] 

 UPOS tags are: 
>> [('You', 'PRON'), ('as', 'ADP'), ('a', 'DET'), ('client', 'NOUN'), ('and', 'CCONJ'), ('IBM', 'PROPN'), ('can', 'AUX'), ('enter', 'VERB'), ('into', 'ADP'), ('a', 'DET'), ('strategic', 'ADJ'), ('alliance', 'NOUN'), ('to', 'PART'), ('transform', 'VERB'), ('your', 'PRON'), ('business', 'NOUN'), ('by', 'SCONJ'), ('creating', 'VERB'), ('a', 'DET'), ('platform', 'NOUN'), ('for', 'ADP'), ('continuous', 'ADJ'), ('innovation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('You', 'PRP'), ('as', 'IN'), ('a', 'DT'), ('client', 'NN'), ('and', 'CC'), ('IBM', 'NNP'), ('can', 'MD'), ('enter', 'VB'), ('into', 'IN'), ('a', 'DT'), ('strategic', 'JJ'), ('alliance', 'NN'), ('to', 'TO'), ('transform', 'VB'), ('your', 'PRP$'), ('business', 'NN'), ('by', 'IN'), ('creating', 'VBG'), ('a', 'DT'), ('platform', 'NN'), ('for', 'IN'), ('continuous', 'JJ'), ('innovation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('You', 'you'), ('as', 'as'), ('a', 'a'), ('client', 'client'), ('and', 'and'), ('IBM', 'IBM'), ('can', 'can'), ('enter', 'enter'), ('into', 'into'), ('a', 'a'), ('strategic', 'strategic'), ('alliance', 'alliance'), ('to', 'to'), ('transform', 'transform'), ('your', 'you'), ('business', 'business'), ('by', 'by'), ('creating', 'create'), ('a', 'a'), ('platform', 'platform'), ('for', 'for'), ('continuous', 'continuous'), ('innovation', 'innovation'), ('.', '.')] 

 Dependency tags are: 
>> [(('You', 'enter'), 'nsubj'), (('as', 'client'), 'case'), (('a', 'client'), 'det'), (('client', 'You'), 'nmod'), (('and', 'IBM'), 'cc'), (('IBM', 'client'), 'conj'), (('can', 'enter'), 'aux'), (('enter', 'root'), 'root'), (('into', 'alliance'), 'case'), (('a', 'alliance'), 'det'), (('strategic', 'alliance'), 'amod'), (('alliance', 'enter'), 'obl'), (('to', 'transform'), 'mark'), (('transform', 'enter'), 'advcl'), (('your', 'business'), 'nmod:poss'), (('business', 'transform'), 'obj'), (('by', 'creating'), 'mark'), (('creating', 'transform'), 'advcl'), (('a', 'platform'), 'det'), (('platform', 'creating'), 'obj'), (('for', 'innovation'), 'case'), (('continuous', 'innovation'), 'amod'), (('innovation', 'platform'), 'nmod'), (('.', 'enter'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG')]

------------------- Sentence 3 -------------------

 The IBM Garage lets you innovate  and develop with the speed of a start-up, at the scale and  rigor of an enterprise. 

Tokens are: 
>> ['The', 'IBM', 'Garage', 'lets', 'you', 'innovate', 'and', 'develop', 'with', 'the', 'speed', 'of', 'a', 'start', '-', 'up', ',', 'at', 'the', 'scale', 'and', 'rigor', 'of', 'an', 'enterprise', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('IBM', 'PROPN'), ('Garage', 'PROPN'), ('lets', 'VERB'), ('you', 'PRON'), ('innovate', 'VERB'), ('and', 'CCONJ'), ('develop', 'VERB'), ('with', 'ADP'), ('the', 'DET'), ('speed', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('start', 'NOUN'), ('-', 'PUNCT'), ('up', 'NOUN'), (',', 'PUNCT'), ('at', 'ADP'), ('the', 'DET'), ('scale', 'NOUN'), ('and', 'CCONJ'), ('rigor', 'NOUN'), ('of', 'ADP'), ('an', 'DET'), ('enterprise', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('IBM', 'NNP'), ('Garage', 'NNP'), ('lets', 'VBZ'), ('you', 'PRP'), ('innovate', 'VB'), ('and', 'CC'), ('develop', 'VB'), ('with', 'IN'), ('the', 'DT'), ('speed', 'NN'), ('of', 'IN'), ('a', 'DT'), ('start', 'NN'), ('-', 'HYPH'), ('up', 'NN'), (',', ','), ('at', 'IN'), ('the', 'DT'), ('scale', 'NN'), ('and', 'CC'), ('rigor', 'NN'), ('of', 'IN'), ('an', 'DT'), ('enterprise', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('IBM', 'IBM'), ('Garage', 'Garage'), ('lets', 'let'), ('you', 'you'), ('innovate', 'innovate'), ('and', 'and'), ('develop', 'develop'), ('with', 'with'), ('the', 'the'), ('speed', 'speed'), ('of', 'of'), ('a', 'a'), ('start', 'start'), ('-', '-'), ('up', 'up'), (',', ','), ('at', 'at'), ('the', 'the'), ('scale', 'scale'), ('and', 'and'), ('rigor', 'rigor'), ('of', 'of'), ('an', 'a'), ('enterprise', 'enterprise'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'Garage'), 'det'), (('IBM', 'Garage'), 'compound'), (('Garage', 'lets'), 'nsubj'), (('lets', 'root'), 'root'), (('you', 'innovate'), 'nsubj'), (('innovate', 'lets'), 'ccomp'), (('and', 'develop'), 'cc'), (('develop', 'innovate'), 'conj'), (('with', 'speed'), 'case'), (('the', 'speed'), 'det'), (('speed', 'develop'), 'obl'), (('of', 'up'), 'case'), (('a', 'up'), 'det'), (('start', 'up'), 'compound'), (('-', 'up'), 'punct'), (('up', 'speed'), 'nmod'), ((',', 'scale'), 'punct'), (('at', 'scale'), 'case'), (('the', 'scale'), 'det'), (('scale', 'speed'), 'nmod'), (('and', 'rigor'), 'cc'), (('rigor', 'scale'), 'conj'), (('of', 'enterprise'), 'case'), (('an', 'enterprise'), 'det'), (('enterprise', 'scale'), 'nmod'), (('.', 'lets'), 'punct')]

 Named Entites are: 
>> [('The IBM Garage', 'ORG')]

------------------- Sentence 4 -------------------

 It offers an innovation space where  clients and IBM work side-by-side to create first-of-a-kind  strategies and solutions. 

Tokens are: 
>> ['It', 'offers', 'an', 'innovation', 'space', 'where', 'clients', 'and', 'IBM', 'work', 'side', '-', 'by-', 'side', 'to', 'create', 'first', '-', 'of', '-', 'a-', 'kind', 'strategies', 'and', 'solutions', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('offers', 'VERB'), ('an', 'DET'), ('innovation', 'NOUN'), ('space', 'NOUN'), ('where', 'SCONJ'), ('clients', 'NOUN'), ('and', 'CCONJ'), ('IBM', 'PROPN'), ('work', 'VERB'), ('side', 'NOUN'), ('-', 'PUNCT'), ('by-', 'NOUN'), ('side', 'NOUN'), ('to', 'PART'), ('create', 'VERB'), ('first', 'ADJ'), ('-', 'PUNCT'), ('of', 'ADP'), ('-', 'PUNCT'), ('a-', 'NOUN'), ('kind', 'NOUN'), ('strategies', 'NOUN'), ('and', 'CCONJ'), ('solutions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('offers', 'VBZ'), ('an', 'DT'), ('innovation', 'NN'), ('space', 'NN'), ('where', 'WRB'), ('clients', 'NNS'), ('and', 'CC'), ('IBM', 'NNP'), ('work', 'VBP'), ('side', 'NN'), ('-', 'HYPH'), ('by-', 'NN'), ('side', 'NN'), ('to', 'TO'), ('create', 'VB'), ('first', 'JJ'), ('-', 'HYPH'), ('of', 'IN'), ('-', 'HYPH'), ('a-', 'NN'), ('kind', 'NN'), ('strategies', 'NNS'), ('and', 'CC'), ('solutions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('offers', 'offer'), ('an', 'a'), ('innovation', 'innovation'), ('space', 'space'), ('where', 'where'), ('clients', 'client'), ('and', 'and'), ('IBM', 'IBM'), ('work', 'work'), ('side', 'side'), ('-', '-'), ('by-', 'by-'), ('side', 'side'), ('to', 'to'), ('create', 'create'), ('first', 'first'), ('-', '-'), ('of', 'of'), ('-', '-'), ('a-', 'a'), ('kind', 'kind'), ('strategies', 'strategy'), ('and', 'and'), ('solutions', 'solution'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'offers'), 'nsubj'), (('offers', 'root'), 'root'), (('an', 'space'), 'det'), (('innovation', 'space'), 'compound'), (('space', 'offers'), 'obj'), (('where', 'work'), 'mark'), (('clients', 'work'), 'nsubj'), (('and', 'IBM'), 'cc'), (('IBM', 'clients'), 'conj'), (('work', 'space'), 'acl:relcl'), (('side', 'by-'), 'compound'), (('-', 'by-'), 'punct'), (('by-', 'side'), 'compound'), (('side', 'work'), 'obj'), (('to', 'create'), 'mark'), (('create', 'work'), 'advcl'), (('first', 'strategies'), 'amod'), (('-', 'first'), 'punct'), (('of', 'a-'), 'case'), (('-', 'a-'), 'punct'), (('a-', 'first'), 'conj'), (('kind', 'strategies'), 'compound'), (('strategies', 'create'), 'obj'), (('and', 'solutions'), 'cc'), (('solutions', 'strategies'), 'conj'), (('.', 'offers'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG'), ('first', 'ORDINAL')]

------------------- Sentence 5 -------------------

 You can then develop the  expertise to transform the way you work. 

Tokens are: 
>> ['You', 'can', 'then', 'develop', 'the', 'expertise', 'to', 'transform', 'the', 'way', 'you', 'work', '.'] 

 UPOS tags are: 
>> [('You', 'PRON'), ('can', 'AUX'), ('then', 'ADV'), ('develop', 'VERB'), ('the', 'DET'), ('expertise', 'NOUN'), ('to', 'PART'), ('transform', 'VERB'), ('the', 'DET'), ('way', 'NOUN'), ('you', 'PRON'), ('work', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('You', 'PRP'), ('can', 'MD'), ('then', 'RB'), ('develop', 'VB'), ('the', 'DT'), ('expertise', 'NN'), ('to', 'TO'), ('transform', 'VB'), ('the', 'DT'), ('way', 'NN'), ('you', 'PRP'), ('work', 'VBP'), ('.', '.')] 

 Lemmas are: 
>> [('You', 'you'), ('can', 'can'), ('then', 'then'), ('develop', 'develop'), ('the', 'the'), ('expertise', 'expertise'), ('to', 'to'), ('transform', 'transform'), ('the', 'the'), ('way', 'way'), ('you', 'you'), ('work', 'work'), ('.', '.')] 

 Dependency tags are: 
>> [(('You', 'develop'), 'nsubj'), (('can', 'develop'), 'aux'), (('then', 'develop'), 'advmod'), (('develop', 'root'), 'root'), (('the', 'expertise'), 'det'), (('expertise', 'develop'), 'obj'), (('to', 'transform'), 'mark'), (('transform', 'expertise'), 'acl'), (('the', 'way'), 'det'), (('way', 'transform'), 'obj'), (('you', 'work'), 'nsubj'), (('work', 'way'), 'acl:relcl'), (('.', 'develop'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 220 =================================

Figure 6: The IBM Garage for AI. 


------------------- Sentence 1 -------------------

 Figure 6: The IBM Garage for AI. 

Tokens are: 
>> ['Figure', '6', ':', 'The', 'IBM', 'Garage', 'for', 'AI', '.'] 

 UPOS tags are: 
>> [('Figure', 'PROPN'), ('6', 'NUM'), (':', 'PUNCT'), ('The', 'DET'), ('IBM', 'PROPN'), ('Garage', 'PROPN'), ('for', 'ADP'), ('AI', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Figure', 'NNP'), ('6', 'CD'), (':', ':'), ('The', 'DT'), ('IBM', 'NNP'), ('Garage', 'NNP'), ('for', 'IN'), ('AI', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('Figure', 'Figure'), ('6', '6'), (':', ':'), ('The', 'the'), ('IBM', 'IBM'), ('Garage', 'Garage'), ('for', 'for'), ('AI', 'AI'), ('.', '.')] 

 Dependency tags are: 
>> [(('Figure', 'root'), 'root'), (('6', 'Figure'), 'dep'), ((':', 'Garage'), 'punct'), (('The', 'Garage'), 'det'), (('IBM', 'Garage'), 'compound'), (('Garage', 'Figure'), 'appos'), (('for', 'AI'), 'case'), (('AI', 'Garage'), 'nmod'), (('.', 'Figure'), 'punct')]

 Named Entites are: 
>> [('6', 'CARDINAL'), ('The IBM Garage', 'ORG'), ('AI', 'ORG')]

================================ Paragraph 221 =================================

The IBM Garage as the engine for a Cognitive Enterprise transformation 


------------------- Sentence 1 -------------------

 The IBM Garage as the engine for a Cognitive Enterprise transformation 

Tokens are: 
>> ['The', 'IBM', 'Garage', 'as', 'the', 'engine', 'for', 'a', 'Cognitive', 'Enterprise', 'transformation'] 

 UPOS tags are: 
>> [('The', 'DET'), ('IBM', 'PROPN'), ('Garage', 'PROPN'), ('as', 'ADP'), ('the', 'DET'), ('engine', 'NOUN'), ('for', 'ADP'), ('a', 'DET'), ('Cognitive', 'ADJ'), ('Enterprise', 'NOUN'), ('transformation', 'NOUN')] 

 XPOS tags are: 
>> [('The', 'DT'), ('IBM', 'NNP'), ('Garage', 'NNP'), ('as', 'IN'), ('the', 'DT'), ('engine', 'NN'), ('for', 'IN'), ('a', 'DT'), ('Cognitive', 'JJ'), ('Enterprise', 'NN'), ('transformation', 'NN')] 

 Lemmas are: 
>> [('The', 'the'), ('IBM', 'IBM'), ('Garage', 'Garage'), ('as', 'as'), ('the', 'the'), ('engine', 'engine'), ('for', 'for'), ('a', 'a'), ('Cognitive', 'cognitive'), ('Enterprise', 'Enterprise'), ('transformation', 'transformation')] 

 Dependency tags are: 
>> [(('The', 'Garage'), 'det'), (('IBM', 'Garage'), 'compound'), (('Garage', 'root'), 'root'), (('as', 'engine'), 'case'), (('the', 'engine'), 'det'), (('engine', 'Garage'), 'nmod'), (('for', 'transformation'), 'case'), (('a', 'transformation'), 'det'), (('Cognitive', 'transformation'), 'amod'), (('Enterprise', 'transformation'), 'compound'), (('transformation', 'engine'), 'nmod')]

 Named Entites are: 
>> [('The IBM Garage', 'ORG')]

================================ Paragraph 222 =================================

Build and recruit capability: key  profiles, roles, competences &  responsibilities with the use of  an AI Academy 


------------------- Sentence 1 -------------------

 Build and recruit capability: key  profiles, roles, competences &  responsibilities with the use of  an AI Academy 

Tokens are: 
>> ['Build', 'and', 'recruit', 'capability', ':', 'key', 'profiles', ',', 'roles', ',', 'competences', '&', 'responsibilities', 'with', 'the', 'use', 'of', 'an', 'AI', 'Academy'] 

 UPOS tags are: 
>> [('Build', 'VERB'), ('and', 'CCONJ'), ('recruit', 'VERB'), ('capability', 'NOUN'), (':', 'PUNCT'), ('key', 'ADJ'), ('profiles', 'NOUN'), (',', 'PUNCT'), ('roles', 'NOUN'), (',', 'PUNCT'), ('competences', 'NOUN'), ('&', 'CCONJ'), ('responsibilities', 'NOUN'), ('with', 'ADP'), ('the', 'DET'), ('use', 'NOUN'), ('of', 'ADP'), ('an', 'DET'), ('AI', 'PROPN'), ('Academy', 'PROPN')] 

 XPOS tags are: 
>> [('Build', 'VB'), ('and', 'CC'), ('recruit', 'VB'), ('capability', 'NN'), (':', ':'), ('key', 'JJ'), ('profiles', 'NNS'), (',', ','), ('roles', 'NNS'), (',', ','), ('competences', 'NNS'), ('&', 'CC'), ('responsibilities', 'NNS'), ('with', 'IN'), ('the', 'DT'), ('use', 'NN'), ('of', 'IN'), ('an', 'DT'), ('AI', 'NNP'), ('Academy', 'NNP')] 

 Lemmas are: 
>> [('Build', 'build'), ('and', 'and'), ('recruit', 'recruit'), ('capability', 'capability'), (':', ':'), ('key', 'key'), ('profiles', 'profile'), (',', ','), ('roles', 'role'), (',', ','), ('competences', 'competence'), ('&', '&'), ('responsibilities', 'responsibility'), ('with', 'with'), ('the', 'the'), ('use', 'use'), ('of', 'of'), ('an', 'a'), ('AI', 'AI'), ('Academy', 'Academy')] 

 Dependency tags are: 
>> [(('Build', 'root'), 'root'), (('and', 'recruit'), 'cc'), (('recruit', 'Build'), 'conj'), (('capability', 'Build'), 'obj'), ((':', 'profiles'), 'punct'), (('key', 'profiles'), 'amod'), (('profiles', 'capability'), 'appos'), ((',', 'roles'), 'punct'), (('roles', 'profiles'), 'conj'), ((',', 'competences'), 'punct'), (('competences', 'profiles'), 'conj'), (('&', 'responsibilities'), 'cc'), (('responsibilities', 'profiles'), 'conj'), (('with', 'use'), 'case'), (('the', 'use'), 'det'), (('use', 'profiles'), 'nmod'), (('of', 'Academy'), 'case'), (('an', 'Academy'), 'det'), (('AI', 'Academy'), 'compound'), (('Academy', 'use'), 'nmod')]

 Named Entites are: 
>> []

================================ Paragraph 223 =================================

AI capability  development 


------------------- Sentence 1 -------------------

 AI capability  development 

Tokens are: 
>> ['AI', 'capability', 'development'] 

 UPOS tags are: 
>> [('AI', 'VERB'), ('capability', 'NOUN'), ('development', 'NOUN')] 

 XPOS tags are: 
>> [('AI', 'VBZ'), ('capability', 'NN'), ('development', 'NN')] 

 Lemmas are: 
>> [('AI', 'be'), ('capability', 'capability'), ('development', 'development')] 

 Dependency tags are: 
>> [(('AI', 'root'), 'root'), (('capability', 'development'), 'compound'), (('development', 'AI'), 'nsubj')]

 Named Entites are: 
>> []

================================ Paragraph 224 =================================

Information technology  supporting the AI  infrastructure, data and tools 


------------------- Sentence 1 -------------------

 Information technology  supporting the AI  infrastructure, data and tools 

Tokens are: 
>> ['Information', 'technology', 'supporting', 'the', 'AI', 'infrastructure', ',', 'data', 'and', 'tools'] 

 UPOS tags are: 
>> [('Information', 'NOUN'), ('technology', 'NOUN'), ('supporting', 'VERB'), ('the', 'DET'), ('AI', 'NOUN'), ('infrastructure', 'NOUN'), (',', 'PUNCT'), ('data', 'NOUN'), ('and', 'CCONJ'), ('tools', 'NOUN')] 

 XPOS tags are: 
>> [('Information', 'NN'), ('technology', 'NN'), ('supporting', 'VBG'), ('the', 'DT'), ('AI', 'NN'), ('infrastructure', 'NN'), (',', ','), ('data', 'NNS'), ('and', 'CC'), ('tools', 'NNS')] 

 Lemmas are: 
>> [('Information', 'information'), ('technology', 'technology'), ('supporting', 'support'), ('the', 'the'), ('AI', 'ai'), ('infrastructure', 'infrastructure'), (',', ','), ('data', 'datum'), ('and', 'and'), ('tools', 'tool')] 

 Dependency tags are: 
>> [(('Information', 'technology'), 'compound'), (('technology', 'root'), 'root'), (('supporting', 'technology'), 'acl'), (('the', 'infrastructure'), 'det'), (('AI', 'infrastructure'), 'compound'), (('infrastructure', 'supporting'), 'obj'), ((',', 'data'), 'punct'), (('data', 'infrastructure'), 'conj'), (('and', 'tools'), 'cc'), (('tools', 'infrastructure'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 225 =================================

Technology 


------------------- Sentence 1 -------------------

 Technology 

Tokens are: 
>> ['Technology'] 

 UPOS tags are: 
>> [('Technology', 'NOUN')] 

 XPOS tags are: 
>> [('Technology', 'NN')] 

 Lemmas are: 
>> [('Technology', 'technology')] 

 Dependency tags are: 
>> [(('Technology', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 226 =================================

Design and implement  model to measure and  develop performance 


------------------- Sentence 1 -------------------

 Design and implement  model to measure and  develop performance 

Tokens are: 
>> ['Design', 'and', 'implement', 'model', 'to', 'measure', 'and', 'develop', 'performance'] 

 UPOS tags are: 
>> [('Design', 'VERB'), ('and', 'CCONJ'), ('implement', 'VERB'), ('model', 'NOUN'), ('to', 'PART'), ('measure', 'VERB'), ('and', 'CCONJ'), ('develop', 'VERB'), ('performance', 'NOUN')] 

 XPOS tags are: 
>> [('Design', 'VB'), ('and', 'CC'), ('implement', 'VB'), ('model', 'NN'), ('to', 'TO'), ('measure', 'VB'), ('and', 'CC'), ('develop', 'VB'), ('performance', 'NN')] 

 Lemmas are: 
>> [('Design', 'Design'), ('and', 'and'), ('implement', 'implement'), ('model', 'model'), ('to', 'to'), ('measure', 'measure'), ('and', 'and'), ('develop', 'develop'), ('performance', 'performance')] 

 Dependency tags are: 
>> [(('Design', 'root'), 'root'), (('and', 'implement'), 'cc'), (('implement', 'Design'), 'conj'), (('model', 'implement'), 'obj'), (('to', 'measure'), 'mark'), (('measure', 'implement'), 'advcl'), (('and', 'develop'), 'cc'), (('develop', 'measure'), 'conj'), (('performance', 'measure'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 227 =================================

Performance  management 


------------------- Sentence 1 -------------------

 Performance  management 

Tokens are: 
>> ['Performance', 'management'] 

 UPOS tags are: 
>> [('Performance', 'NOUN'), ('management', 'NOUN')] 

 XPOS tags are: 
>> [('Performance', 'NN'), ('management', 'NN')] 

 Lemmas are: 
>> [('Performance', 'performance'), ('management', 'management')] 

 Dependency tags are: 
>> [(('Performance', 'management'), 'compound'), (('management', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 228 =================================

Operating model + integration  for think, transform and thrive Operating model  


------------------- Sentence 1 -------------------

 Operating model + integration  for think, transform and thrive Operating model 

Tokens are: 
>> ['Operating', 'model', '+', 'integration', 'for', 'think', ',', 'transform', 'and', 'thrive', 'Operating', 'model'] 

 UPOS tags are: 
>> [('Operating', 'NOUN'), ('model', 'NOUN'), ('+', 'SYM'), ('integration', 'NOUN'), ('for', 'ADP'), ('think', 'NOUN'), (',', 'PUNCT'), ('transform', 'VERB'), ('and', 'CCONJ'), ('thrive', 'VERB'), ('Operating', 'NOUN'), ('model', 'NOUN')] 

 XPOS tags are: 
>> [('Operating', 'NN'), ('model', 'NN'), ('+', 'SYM'), ('integration', 'NN'), ('for', 'IN'), ('think', 'NN'), (',', ','), ('transform', 'VB'), ('and', 'CC'), ('thrive', 'VB'), ('Operating', 'NN'), ('model', 'NN')] 

 Lemmas are: 
>> [('Operating', 'operate'), ('model', 'model'), ('+', '+'), ('integration', 'integration'), ('for', 'for'), ('think', 'think'), (',', ','), ('transform', 'transform'), ('and', 'and'), ('thrive', 'thrive'), ('Operating', 'operate'), ('model', 'model')] 

 Dependency tags are: 
>> [(('Operating', 'model'), 'compound'), (('model', 'root'), 'root'), (('+', 'integration'), 'cc'), (('integration', 'model'), 'conj'), (('for', 'think'), 'case'), (('think', 'integration'), 'nmod'), ((',', 'transform'), 'punct'), (('transform', 'model'), 'parataxis'), (('and', 'thrive'), 'cc'), (('thrive', 'transform'), 'conj'), (('Operating', 'model'), 'compound'), (('model', 'transform'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 229 =================================

Current state assessment  moving to strategic direction  and guiding principles.  Implementation roadmap 


------------------- Sentence 1 -------------------

 Current state assessment  moving to strategic direction  and guiding principles. 

Tokens are: 
>> ['Current', 'state', 'assessment', 'moving', 'to', 'strategic', 'direction', 'and', 'guiding', 'principles', '.'] 

 UPOS tags are: 
>> [('Current', 'ADJ'), ('state', 'NOUN'), ('assessment', 'NOUN'), ('moving', 'VERB'), ('to', 'ADP'), ('strategic', 'ADJ'), ('direction', 'NOUN'), ('and', 'CCONJ'), ('guiding', 'VERB'), ('principles', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Current', 'JJ'), ('state', 'NN'), ('assessment', 'NN'), ('moving', 'VBG'), ('to', 'IN'), ('strategic', 'JJ'), ('direction', 'NN'), ('and', 'CC'), ('guiding', 'VBG'), ('principles', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Current', 'current'), ('state', 'state'), ('assessment', 'assessment'), ('moving', 'move'), ('to', 'to'), ('strategic', 'strategic'), ('direction', 'direction'), ('and', 'and'), ('guiding', 'guide'), ('principles', 'principle'), ('.', '.')] 

 Dependency tags are: 
>> [(('Current', 'assessment'), 'amod'), (('state', 'assessment'), 'compound'), (('assessment', 'root'), 'root'), (('moving', 'assessment'), 'acl'), (('to', 'direction'), 'case'), (('strategic', 'direction'), 'amod'), (('direction', 'moving'), 'obl'), (('and', 'principles'), 'cc'), (('guiding', 'principles'), 'amod'), (('principles', 'direction'), 'conj'), (('.', 'assessment'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Implementation roadmap 

Tokens are: 
>> ['Implementation', 'roadmap'] 

 UPOS tags are: 
>> [('Implementation', 'NOUN'), ('roadmap', 'NOUN')] 

 XPOS tags are: 
>> [('Implementation', 'NN'), ('roadmap', 'NN')] 

 Lemmas are: 
>> [('Implementation', 'implementation'), ('roadmap', 'roadmap')] 

 Dependency tags are: 
>> [(('Implementation', 'roadmap'), 'compound'), (('roadmap', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 230 =================================

Ambition & roadmap 


------------------- Sentence 1 -------------------

 Ambition & roadmap 

Tokens are: 
>> ['Ambition', '&', 'roadmap'] 

 UPOS tags are: 
>> [('Ambition', 'NOUN'), ('&', 'CCONJ'), ('roadmap', 'NOUN')] 

 XPOS tags are: 
>> [('Ambition', 'NN'), ('&', 'CC'), ('roadmap', 'NN')] 

 Lemmas are: 
>> [('Ambition', 'ambition'), ('&', '&'), ('roadmap', 'roadmap')] 

 Dependency tags are: 
>> [(('Ambition', 'root'), 'root'), (('&', 'roadmap'), 'cc'), (('roadmap', 'Ambition'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 231 =================================

Change and integration  management, culture  strategy alignment  


------------------- Sentence 1 -------------------

 Change and integration  management, culture  strategy alignment 

Tokens are: 
>> ['Change', 'and', 'integration', 'management', ',', 'culture', 'strategy', 'alignment'] 

 UPOS tags are: 
>> [('Change', 'NOUN'), ('and', 'CCONJ'), ('integration', 'NOUN'), ('management', 'NOUN'), (',', 'PUNCT'), ('culture', 'NOUN'), ('strategy', 'NOUN'), ('alignment', 'NOUN')] 

 XPOS tags are: 
>> [('Change', 'NN'), ('and', 'CC'), ('integration', 'NN'), ('management', 'NN'), (',', ','), ('culture', 'NN'), ('strategy', 'NN'), ('alignment', 'NN')] 

 Lemmas are: 
>> [('Change', 'change'), ('and', 'and'), ('integration', 'integration'), ('management', 'management'), (',', ','), ('culture', 'culture'), ('strategy', 'strategy'), ('alignment', 'alignment')] 

 Dependency tags are: 
>> [(('Change', 'management'), 'compound'), (('and', 'integration'), 'cc'), (('integration', 'Change'), 'conj'), (('management', 'root'), 'root'), ((',', 'alignment'), 'punct'), (('culture', 'strategy'), 'compound'), (('strategy', 'alignment'), 'compound'), (('alignment', 'management'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 232 =================================

Change  management &  communication 


------------------- Sentence 1 -------------------

 Change  management &  communication 

Tokens are: 
>> ['Change', 'management', '&', 'communication'] 

 UPOS tags are: 
>> [('Change', 'NOUN'), ('management', 'NOUN'), ('&', 'CCONJ'), ('communication', 'NOUN')] 

 XPOS tags are: 
>> [('Change', 'NN'), ('management', 'NN'), ('&', 'CC'), ('communication', 'NN')] 

 Lemmas are: 
>> [('Change', 'change'), ('management', 'management'), ('&', '&'), ('communication', 'communication')] 

 Dependency tags are: 
>> [(('Change', 'management'), 'compound'), (('management', 'root'), 'root'), (('&', 'communication'), 'cc'), (('communication', 'management'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 233 =================================

Service line functional scope,  Geo, BU, process, growth  model, country support  


------------------- Sentence 1 -------------------

 Service line functional scope,  Geo, BU, process, growth  model, country support 

Tokens are: 
>> ['Service', 'line', 'functional', 'scope', ',', 'Geo', ',', 'BU', ',', 'process', ',', 'growth', 'model', ',', 'country', 'support'] 

 UPOS tags are: 
>> [('Service', 'NOUN'), ('line', 'NOUN'), ('functional', 'ADJ'), ('scope', 'NOUN'), (',', 'PUNCT'), ('Geo', 'NOUN'), (',', 'PUNCT'), ('BU', 'NOUN'), (',', 'PUNCT'), ('process', 'NOUN'), (',', 'PUNCT'), ('growth', 'NOUN'), ('model', 'NOUN'), (',', 'PUNCT'), ('country', 'NOUN'), ('support', 'NOUN')] 

 XPOS tags are: 
>> [('Service', 'NN'), ('line', 'NN'), ('functional', 'JJ'), ('scope', 'NN'), (',', ','), ('Geo', 'NN'), (',', ','), ('BU', 'NN'), (',', ','), ('process', 'NN'), (',', ','), ('growth', 'NN'), ('model', 'NN'), (',', ','), ('country', 'NN'), ('support', 'NN')] 

 Lemmas are: 
>> [('Service', 'service'), ('line', 'line'), ('functional', 'functional'), ('scope', 'scope'), (',', ','), ('Geo', 'geo'), (',', ','), ('BU', 'BU'), (',', ','), ('process', 'process'), (',', ','), ('growth', 'growth'), ('model', 'model'), (',', ','), ('country', 'country'), ('support', 'support')] 

 Dependency tags are: 
>> [(('Service', 'line'), 'compound'), (('line', 'scope'), 'compound'), (('functional', 'scope'), 'amod'), (('scope', 'root'), 'root'), ((',', 'scope'), 'punct'), (('Geo', 'scope'), 'list'), ((',', 'BU'), 'punct'), (('BU', 'scope'), 'list'), ((',', 'process'), 'punct'), (('process', 'scope'), 'list'), ((',', 'model'), 'punct'), (('growth', 'model'), 'compound'), (('model', 'scope'), 'list'), ((',', 'support'), 'punct'), (('country', 'support'), 'compound'), (('support', 'scope'), 'list')]

 Named Entites are: 
>> []

================================ Paragraph 234 =================================

Organization  structure  governance 


------------------- Sentence 1 -------------------

 Organization  structure  governance 

Tokens are: 
>> ['Organization', 'structure', 'governance'] 

 UPOS tags are: 
>> [('Organization', 'NOUN'), ('structure', 'NOUN'), ('governance', 'NOUN')] 

 XPOS tags are: 
>> [('Organization', 'NN'), ('structure', 'NN'), ('governance', 'NN')] 

 Lemmas are: 
>> [('Organization', 'Organization'), ('structure', 'structure'), ('governance', 'governance')] 

 Dependency tags are: 
>> [(('Organization', 'structure'), 'compound'), (('structure', 'governance'), 'compound'), (('governance', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 235 =================================

Design, validate, transform.  Includes demand  management, prioritisation,  delivery methodology,  assurance and value  management, KPI definition 


------------------- Sentence 1 -------------------

 Design, validate, transform. 

Tokens are: 
>> ['Design', ',', 'validate', ',', 'transform', '.'] 

 UPOS tags are: 
>> [('Design', 'NOUN'), (',', 'PUNCT'), ('validate', 'VERB'), (',', 'PUNCT'), ('transform', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Design', 'NN'), (',', ','), ('validate', 'VB'), (',', ','), ('transform', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('Design', 'design'), (',', ','), ('validate', 'validate'), (',', ','), ('transform', 'transform'), ('.', '.')] 

 Dependency tags are: 
>> [(('Design', 'root'), 'root'), ((',', 'validate'), 'punct'), (('validate', 'Design'), 'parataxis'), ((',', 'transform'), 'punct'), (('transform', 'validate'), 'parataxis'), (('.', 'Design'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Includes demand  management, prioritisation,  delivery methodology,  assurance and value  management, KPI definition 

Tokens are: 
>> ['Includes', 'demand', 'management', ',', 'prioritisation', ',', 'delivery', 'methodology', ',', 'assurance', 'and', 'value', 'management', ',', 'KPI', 'definition'] 

 UPOS tags are: 
>> [('Includes', 'VERB'), ('demand', 'NOUN'), ('management', 'NOUN'), (',', 'PUNCT'), ('prioritisation', 'NOUN'), (',', 'PUNCT'), ('delivery', 'NOUN'), ('methodology', 'NOUN'), (',', 'PUNCT'), ('assurance', 'NOUN'), ('and', 'CCONJ'), ('value', 'NOUN'), ('management', 'NOUN'), (',', 'PUNCT'), ('KPI', 'NOUN'), ('definition', 'NOUN')] 

 XPOS tags are: 
>> [('Includes', 'VBZ'), ('demand', 'NN'), ('management', 'NN'), (',', ','), ('prioritisation', 'NN'), (',', ','), ('delivery', 'NN'), ('methodology', 'NN'), (',', ','), ('assurance', 'NN'), ('and', 'CC'), ('value', 'NN'), ('management', 'NN'), (',', ','), ('KPI', 'NN'), ('definition', 'NN')] 

 Lemmas are: 
>> [('Includes', 'include'), ('demand', 'demand'), ('management', 'management'), (',', ','), ('prioritisation', 'prioritisation'), (',', ','), ('delivery', 'delivery'), ('methodology', 'methodology'), (',', ','), ('assurance', 'assurance'), ('and', 'and'), ('value', 'value'), ('management', 'management'), (',', ','), ('KPI', 'kpi'), ('definition', 'definition')] 

 Dependency tags are: 
>> [(('Includes', 'root'), 'root'), (('demand', 'management'), 'compound'), (('management', 'Includes'), 'obj'), ((',', 'prioritisation'), 'punct'), (('prioritisation', 'management'), 'conj'), ((',', 'methodology'), 'punct'), (('delivery', 'methodology'), 'compound'), (('methodology', 'management'), 'conj'), ((',', 'assurance'), 'punct'), (('assurance', 'management'), 'conj'), (('and', 'management'), 'cc'), (('value', 'management'), 'compound'), (('management', 'management'), 'conj'), ((',', 'definition'), 'punct'), (('KPI', 'definition'), 'compound'), (('definition', 'management'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 236 =================================

Demand  generation 


------------------- Sentence 1 -------------------

 Demand  generation 

Tokens are: 
>> ['Demand', 'generation'] 

 UPOS tags are: 
>> [('Demand', 'NOUN'), ('generation', 'NOUN')] 

 XPOS tags are: 
>> [('Demand', 'NN'), ('generation', 'NN')] 

 Lemmas are: 
>> [('Demand', 'demand'), ('generation', 'generation')] 

 Dependency tags are: 
>> [(('Demand', 'generation'), 'compound'), (('generation', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 237 =================================

IBM Garage  for AI


------------------- Sentence 1 -------------------

 IBM Garage  for AI 

Tokens are: 
>> ['IBM', 'Garage', 'for', 'AI'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('Garage', 'PROPN'), ('for', 'ADP'), ('AI', 'PROPN')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('Garage', 'NNP'), ('for', 'IN'), ('AI', 'NNP')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('Garage', 'Garage'), ('for', 'for'), ('AI', 'AI')] 

 Dependency tags are: 
>> [(('IBM', 'Garage'), 'compound'), (('Garage', 'root'), 'root'), (('for', 'AI'), 'case'), (('AI', 'Garage'), 'nmod')]

 Named Entites are: 
>> [('IBM Garage', 'ORG')]

================================ Paragraph 238 =================================

16     Beyond the hype: A guide to understanding and successfully implementing artificial intelligence within your business 


------------------- Sentence 1 -------------------

 16     Beyond the hype: A guide to understanding and successfully implementing artificial intelligence within your business 

Tokens are: 
>> ['16', 'Beyond', 'the', 'hype', ':', 'A', 'guide', 'to', 'understanding', 'and', 'successfully', 'implementing', 'artificial', 'intelligence', 'within', 'your', 'business'] 

 UPOS tags are: 
>> [('16', 'NUM'), ('Beyond', 'ADP'), ('the', 'DET'), ('hype', 'NOUN'), (':', 'PUNCT'), ('A', 'DET'), ('guide', 'NOUN'), ('to', 'ADP'), ('understanding', 'VERB'), ('and', 'CCONJ'), ('successfully', 'ADV'), ('implementing', 'VERB'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('within', 'ADP'), ('your', 'PRON'), ('business', 'NOUN')] 

 XPOS tags are: 
>> [('16', 'LS'), ('Beyond', 'IN'), ('the', 'DT'), ('hype', 'NN'), (':', ':'), ('A', 'DT'), ('guide', 'NN'), ('to', 'IN'), ('understanding', 'VBG'), ('and', 'CC'), ('successfully', 'RB'), ('implementing', 'VBG'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('within', 'IN'), ('your', 'PRP$'), ('business', 'NN')] 

 Lemmas are: 
>> [('16', '16'), ('Beyond', 'beyond'), ('the', 'the'), ('hype', 'hype'), (':', ':'), ('A', 'a'), ('guide', 'guide'), ('to', 'to'), ('understanding', 'understand'), ('and', 'and'), ('successfully', 'successfully'), ('implementing', 'implement'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('within', 'within'), ('your', 'you'), ('business', 'business')] 

 Dependency tags are: 
>> [(('16', 'hype'), 'nummod'), (('Beyond', 'hype'), 'case'), (('the', 'hype'), 'det'), (('hype', 'root'), 'root'), ((':', 'guide'), 'punct'), (('A', 'guide'), 'det'), (('guide', 'hype'), 'appos'), (('to', 'understanding'), 'mark'), (('understanding', 'guide'), 'acl'), (('and', 'implementing'), 'cc'), (('successfully', 'implementing'), 'advmod'), (('implementing', 'understanding'), 'conj'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'implementing'), 'obj'), (('within', 'business'), 'case'), (('your', 'business'), 'nmod:poss'), (('business', 'implementing'), 'obl')]

 Named Entites are: 
>> []

================================ Paragraph 239 =================================

Figure 7: The IBM stages of implementing AI. 


------------------- Sentence 1 -------------------

 Figure 7: The IBM stages of implementing AI. 

Tokens are: 
>> ['Figure', '7', ':', 'The', 'IBM', 'stages', 'of', 'implementing', 'AI', '.'] 

 UPOS tags are: 
>> [('Figure', 'PROPN'), ('7', 'NUM'), (':', 'PUNCT'), ('The', 'DET'), ('IBM', 'PROPN'), ('stages', 'NOUN'), ('of', 'SCONJ'), ('implementing', 'VERB'), ('AI', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Figure', 'NNP'), ('7', 'CD'), (':', ':'), ('The', 'DT'), ('IBM', 'NNP'), ('stages', 'NNS'), ('of', 'IN'), ('implementing', 'VBG'), ('AI', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Figure', 'Figure'), ('7', '7'), (':', ':'), ('The', 'the'), ('IBM', 'IBM'), ('stages', 'stage'), ('of', 'of'), ('implementing', 'implement'), ('AI', 'ai'), ('.', '.')] 

 Dependency tags are: 
>> [(('Figure', 'root'), 'root'), (('7', 'Figure'), 'dep'), ((':', 'stages'), 'punct'), (('The', 'stages'), 'det'), (('IBM', 'stages'), 'compound'), (('stages', 'Figure'), 'appos'), (('of', 'implementing'), 'mark'), (('implementing', 'stages'), 'acl'), (('AI', 'implementing'), 'obj'), (('.', 'Figure'), 'punct')]

 Named Entites are: 
>> [('7', 'CARDINAL'), ('IBM', 'ORG'), ('AI', 'ORG')]

================================ Paragraph 240 =================================

Plan on a page to start the journey with the IBM Garage for AI 


------------------- Sentence 1 -------------------

 Plan on a page to start the journey with the IBM Garage for AI 

Tokens are: 
>> ['Plan', 'on', 'a', 'page', 'to', 'start', 'the', 'journey', 'with', 'the', 'IBM', 'Garage', 'for', 'AI'] 

 UPOS tags are: 
>> [('Plan', 'VERB'), ('on', 'ADP'), ('a', 'DET'), ('page', 'NOUN'), ('to', 'PART'), ('start', 'VERB'), ('the', 'DET'), ('journey', 'NOUN'), ('with', 'ADP'), ('the', 'DET'), ('IBM', 'PROPN'), ('Garage', 'NOUN'), ('for', 'ADP'), ('AI', 'PROPN')] 

 XPOS tags are: 
>> [('Plan', 'VB'), ('on', 'IN'), ('a', 'DT'), ('page', 'NN'), ('to', 'TO'), ('start', 'VB'), ('the', 'DT'), ('journey', 'NN'), ('with', 'IN'), ('the', 'DT'), ('IBM', 'NNP'), ('Garage', 'NN'), ('for', 'IN'), ('AI', 'NNP')] 

 Lemmas are: 
>> [('Plan', 'plan'), ('on', 'on'), ('a', 'a'), ('page', 'page'), ('to', 'to'), ('start', 'start'), ('the', 'the'), ('journey', 'journey'), ('with', 'with'), ('the', 'the'), ('IBM', 'IBM'), ('Garage', 'garage'), ('for', 'for'), ('AI', 'AI')] 

 Dependency tags are: 
>> [(('Plan', 'root'), 'root'), (('on', 'page'), 'case'), (('a', 'page'), 'det'), (('page', 'Plan'), 'obl'), (('to', 'start'), 'mark'), (('start', 'page'), 'acl'), (('the', 'journey'), 'det'), (('journey', 'start'), 'obj'), (('with', 'Garage'), 'case'), (('the', 'Garage'), 'det'), (('IBM', 'Garage'), 'compound'), (('Garage', 'journey'), 'nmod'), (('for', 'AI'), 'case'), (('AI', 'Garage'), 'nmod')]

 Named Entites are: 
>> [('the IBM Garage', 'ORG')]

================================ Paragraph 241 =================================

THINK 


------------------- Sentence 1 -------------------

 THINK 

Tokens are: 
>> ['THINK'] 

 UPOS tags are: 
>> [('THINK', 'VERB')] 

 XPOS tags are: 
>> [('THINK', 'VB')] 

 Lemmas are: 
>> [('THINK', 'think')] 

 Dependency tags are: 
>> [(('THINK', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 242 =================================

Set ambition  and organization 


------------------- Sentence 1 -------------------

 Set ambition  and organization 

Tokens are: 
>> ['Set', 'ambition', 'and', 'organization'] 

 UPOS tags are: 
>> [('Set', 'VERB'), ('ambition', 'NOUN'), ('and', 'CCONJ'), ('organization', 'NOUN')] 

 XPOS tags are: 
>> [('Set', 'VBN'), ('ambition', 'NN'), ('and', 'CC'), ('organization', 'NN')] 

 Lemmas are: 
>> [('Set', 'set'), ('ambition', 'ambition'), ('and', 'and'), ('organization', 'organization')] 

 Dependency tags are: 
>> [(('Set', 'ambition'), 'amod'), (('ambition', 'root'), 'root'), (('and', 'organization'), 'cc'), (('organization', 'ambition'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 243 =================================

Drive demand  and innovate 


------------------- Sentence 1 -------------------

 Drive demand  and innovate 

Tokens are: 
>> ['Drive', 'demand', 'and', 'innovate'] 

 UPOS tags are: 
>> [('Drive', 'VERB'), ('demand', 'NOUN'), ('and', 'CCONJ'), ('innovate', 'VERB')] 

 XPOS tags are: 
>> [('Drive', 'VB'), ('demand', 'NN'), ('and', 'CC'), ('innovate', 'VB')] 

 Lemmas are: 
>> [('Drive', 'drive'), ('demand', 'demand'), ('and', 'and'), ('innovate', 'innovate')] 

 Dependency tags are: 
>> [(('Drive', 'root'), 'root'), (('demand', 'Drive'), 'obj'), (('and', 'innovate'), 'cc'), (('innovate', 'Drive'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 244 =================================

TRANSFORM 


------------------- Sentence 1 -------------------

 TRANSFORM 

Tokens are: 
>> ['TRANSFORM'] 

 UPOS tags are: 
>> [('TRANSFORM', 'VERB')] 

 XPOS tags are: 
>> [('TRANSFORM', 'VB')] 

 Lemmas are: 
>> [('TRANSFORM', 'transor')] 

 Dependency tags are: 
>> [(('TRANSFORM', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 245 =================================

Drive to  production 


------------------- Sentence 1 -------------------

 Drive to  production 

Tokens are: 
>> ['Drive', 'to', 'production'] 

 UPOS tags are: 
>> [('Drive', 'VERB'), ('to', 'ADP'), ('production', 'NOUN')] 

 XPOS tags are: 
>> [('Drive', 'VB'), ('to', 'IN'), ('production', 'NN')] 

 Lemmas are: 
>> [('Drive', 'drive'), ('to', 'to'), ('production', 'production')] 

 Dependency tags are: 
>> [(('Drive', 'root'), 'root'), (('to', 'production'), 'case'), (('production', 'Drive'), 'obl')]

 Named Entites are: 
>> []

================================ Paragraph 246 =================================

THRIVE 


------------------- Sentence 1 -------------------

 THRIVE 

Tokens are: 
>> ['THRIVE'] 

 UPOS tags are: 
>> [('THRIVE', 'VERB')] 

 XPOS tags are: 
>> [('THRIVE', 'VB')] 

 Lemmas are: 
>> [('THRIVE', 'thrive')] 

 Dependency tags are: 
>> [(('THRIVE', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 247 =================================

Scale up 


------------------- Sentence 1 -------------------

 Scale up 

Tokens are: 
>> ['Scale', 'up'] 

 UPOS tags are: 
>> [('Scale', 'VERB'), ('up', 'ADP')] 

 XPOS tags are: 
>> [('Scale', 'VB'), ('up', 'RP')] 

 Lemmas are: 
>> [('Scale', 'scale'), ('up', 'up')] 

 Dependency tags are: 
>> [(('Scale', 'root'), 'root'), (('up', 'Scale'), 'compound:prt')]

 Named Entites are: 
>> []

================================ Paragraph 248 =================================

The “Think” phase is a process dedicated to thinking,  experimenting, and proving, with the end user at the heart  of your innovation. We start with ideas and get to working  concepts fast, incorporating feedback in real time. 


------------------- Sentence 1 -------------------

 The “Think” phase is a process dedicated to thinking,  experimenting, and proving, with the end user at the heart  of your innovation. 

Tokens are: 
>> ['The', '“', 'Think', '”', 'phase', 'is', 'a', 'process', 'dedicated', 'to', 'thinking', ',', 'experimenting', ',', 'and', 'proving', ',', 'with', 'the', 'end', 'user', 'at', 'the', 'heart', 'of', 'your', 'innovation', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('“', 'PUNCT'), ('Think', 'NOUN'), ('”', 'PUNCT'), ('phase', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('process', 'NOUN'), ('dedicated', 'VERB'), ('to', 'SCONJ'), ('thinking', 'VERB'), (',', 'PUNCT'), ('experimenting', 'VERB'), (',', 'PUNCT'), ('and', 'CCONJ'), ('proving', 'VERB'), (',', 'PUNCT'), ('with', 'ADP'), ('the', 'DET'), ('end', 'NOUN'), ('user', 'NOUN'), ('at', 'ADP'), ('the', 'DET'), ('heart', 'NOUN'), ('of', 'ADP'), ('your', 'PRON'), ('innovation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('“', '``'), ('Think', 'NN'), ('”', "''"), ('phase', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('process', 'NN'), ('dedicated', 'VBN'), ('to', 'IN'), ('thinking', 'VBG'), (',', ','), ('experimenting', 'VBG'), (',', ','), ('and', 'CC'), ('proving', 'VBG'), (',', ','), ('with', 'IN'), ('the', 'DT'), ('end', 'NN'), ('user', 'NN'), ('at', 'IN'), ('the', 'DT'), ('heart', 'NN'), ('of', 'IN'), ('your', 'PRP$'), ('innovation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('“', "''"), ('Think', 'think'), ('”', "''"), ('phase', 'phase'), ('is', 'be'), ('a', 'a'), ('process', 'process'), ('dedicated', 'dedicate'), ('to', 'to'), ('thinking', 'think'), (',', ','), ('experimenting', 'experiment'), (',', ','), ('and', 'and'), ('proving', 'prove'), (',', ','), ('with', 'with'), ('the', 'the'), ('end', 'end'), ('user', 'user'), ('at', 'at'), ('the', 'the'), ('heart', 'heart'), ('of', 'of'), ('your', 'you'), ('innovation', 'innovation'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'phase'), 'det'), (('“', 'Think'), 'punct'), (('Think', 'phase'), 'compound'), (('”', 'Think'), 'punct'), (('phase', 'process'), 'nsubj'), (('is', 'process'), 'cop'), (('a', 'process'), 'det'), (('process', 'root'), 'root'), (('dedicated', 'process'), 'acl'), (('to', 'thinking'), 'mark'), (('thinking', 'dedicated'), 'advcl'), ((',', 'experimenting'), 'punct'), (('experimenting', 'thinking'), 'conj'), ((',', 'proving'), 'punct'), (('and', 'proving'), 'cc'), (('proving', 'thinking'), 'conj'), ((',', 'proving'), 'punct'), (('with', 'user'), 'case'), (('the', 'user'), 'det'), (('end', 'user'), 'compound'), (('user', 'proving'), 'obl'), (('at', 'heart'), 'case'), (('the', 'heart'), 'det'), (('heart', 'user'), 'nmod'), (('of', 'innovation'), 'case'), (('your', 'innovation'), 'nmod:poss'), (('innovation', 'heart'), 'nmod'), (('.', 'process'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 We start with ideas and get to working  concepts fast, incorporating feedback in real time. 

Tokens are: 
>> ['We', 'start', 'with', 'ideas', 'and', 'get', 'to', 'working', 'concepts', 'fast', ',', 'incorporating', 'feedback', 'in', 'real', 'time', '.'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('start', 'VERB'), ('with', 'ADP'), ('ideas', 'NOUN'), ('and', 'CCONJ'), ('get', 'VERB'), ('to', 'ADP'), ('working', 'VERB'), ('concepts', 'NOUN'), ('fast', 'ADV'), (',', 'PUNCT'), ('incorporating', 'VERB'), ('feedback', 'NOUN'), ('in', 'ADP'), ('real', 'ADJ'), ('time', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('start', 'VBP'), ('with', 'IN'), ('ideas', 'NNS'), ('and', 'CC'), ('get', 'VBP'), ('to', 'IN'), ('working', 'VBG'), ('concepts', 'NNS'), ('fast', 'RB'), (',', ','), ('incorporating', 'VBG'), ('feedback', 'NN'), ('in', 'IN'), ('real', 'JJ'), ('time', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('start', 'start'), ('with', 'with'), ('ideas', 'idea'), ('and', 'and'), ('get', 'get'), ('to', 'to'), ('working', 'work'), ('concepts', 'concept'), ('fast', 'fast'), (',', ','), ('incorporating', 'incorporate'), ('feedback', 'feedback'), ('in', 'in'), ('real', 'real'), ('time', 'time'), ('.', '.')] 

 Dependency tags are: 
>> [(('We', 'start'), 'nsubj'), (('start', 'root'), 'root'), (('with', 'ideas'), 'case'), (('ideas', 'start'), 'obl'), (('and', 'get'), 'cc'), (('get', 'start'), 'conj'), (('to', 'concepts'), 'case'), (('working', 'concepts'), 'amod'), (('concepts', 'get'), 'obl'), (('fast', 'get'), 'advmod'), ((',', 'incorporating'), 'punct'), (('incorporating', 'get'), 'advcl'), (('feedback', 'incorporating'), 'obj'), (('in', 'time'), 'case'), (('real', 'time'), 'amod'), (('time', 'incorporating'), 'obl'), (('.', 'start'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 249 =================================

IBM helps you get prepared first, in a fast, pressure-cooker  environment. This helps you to kickstart your AI journey.  IBM works with you to deliver an assessment of your  current AI capabilities.  


------------------- Sentence 1 -------------------

 IBM helps you get prepared first, in a fast, pressure-cooker  environment. 

Tokens are: 
>> ['IBM', 'helps', 'you', 'get', 'prepared', 'first', ',', 'in', 'a', 'fast', ',', 'pressure', '-', 'cooker', 'environment', '.'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('helps', 'VERB'), ('you', 'PRON'), ('get', 'AUX'), ('prepared', 'VERB'), ('first', 'ADV'), (',', 'PUNCT'), ('in', 'ADP'), ('a', 'DET'), ('fast', 'ADJ'), (',', 'PUNCT'), ('pressure', 'NOUN'), ('-', 'PUNCT'), ('cooker', 'NOUN'), ('environment', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('helps', 'VBZ'), ('you', 'PRP'), ('get', 'VB'), ('prepared', 'VBN'), ('first', 'RB'), (',', ','), ('in', 'IN'), ('a', 'DT'), ('fast', 'JJ'), (',', ','), ('pressure', 'NN'), ('-', 'HYPH'), ('cooker', 'NN'), ('environment', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('helps', 'help'), ('you', 'you'), ('get', 'get'), ('prepared', 'prepare'), ('first', 'first'), (',', ','), ('in', 'in'), ('a', 'a'), ('fast', 'fast'), (',', ','), ('pressure', 'pressure'), ('-', '-'), ('cooker', 'cooker'), ('environment', 'environment'), ('.', '.')] 

 Dependency tags are: 
>> [(('IBM', 'helps'), 'nsubj'), (('helps', 'root'), 'root'), (('you', 'helps'), 'obj'), (('get', 'prepared'), 'aux:pass'), (('prepared', 'helps'), 'xcomp'), (('first', 'prepared'), 'advmod'), ((',', 'environment'), 'punct'), (('in', 'environment'), 'case'), (('a', 'environment'), 'det'), (('fast', 'environment'), 'amod'), ((',', 'environment'), 'punct'), (('pressure', 'cooker'), 'compound'), (('-', 'cooker'), 'punct'), (('cooker', 'environment'), 'compound'), (('environment', 'prepared'), 'obl'), (('.', 'helps'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG'), ('first', 'ORDINAL')]

------------------- Sentence 2 -------------------

 This helps you to kickstart your AI journey. 

Tokens are: 
>> ['This', 'helps', 'you', 'to', 'kickstart', 'your', 'AI', 'journey', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('helps', 'VERB'), ('you', 'PRON'), ('to', 'PART'), ('kickstart', 'VERB'), ('your', 'PRON'), ('AI', 'NOUN'), ('journey', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('helps', 'VBZ'), ('you', 'PRP'), ('to', 'TO'), ('kickstart', 'VB'), ('your', 'PRP$'), ('AI', 'NN'), ('journey', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('helps', 'help'), ('you', 'you'), ('to', 'to'), ('kickstart', 'kickstart'), ('your', 'you'), ('AI', 'ai'), ('journey', 'journey'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'helps'), 'nsubj'), (('helps', 'root'), 'root'), (('you', 'helps'), 'obj'), (('to', 'kickstart'), 'mark'), (('kickstart', 'helps'), 'xcomp'), (('your', 'journey'), 'nmod:poss'), (('AI', 'journey'), 'compound'), (('journey', 'kickstart'), 'obj'), (('.', 'helps'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 IBM works with you to deliver an assessment of your  current AI capabilities. 

Tokens are: 
>> ['IBM', 'works', 'with', 'you', 'to', 'deliver', 'an', 'assessment', 'of', 'your', 'current', 'AI', 'capabilities', '.'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('works', 'VERB'), ('with', 'ADP'), ('you', 'PRON'), ('to', 'PART'), ('deliver', 'VERB'), ('an', 'DET'), ('assessment', 'NOUN'), ('of', 'ADP'), ('your', 'PRON'), ('current', 'ADJ'), ('AI', 'NOUN'), ('capabilities', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('works', 'VBZ'), ('with', 'IN'), ('you', 'PRP'), ('to', 'TO'), ('deliver', 'VB'), ('an', 'DT'), ('assessment', 'NN'), ('of', 'IN'), ('your', 'PRP$'), ('current', 'JJ'), ('AI', 'NN'), ('capabilities', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('works', 'work'), ('with', 'with'), ('you', 'you'), ('to', 'to'), ('deliver', 'deliver'), ('an', 'a'), ('assessment', 'assessment'), ('of', 'of'), ('your', 'you'), ('current', 'current'), ('AI', 'ai'), ('capabilities', 'capability'), ('.', '.')] 

 Dependency tags are: 
>> [(('IBM', 'works'), 'nsubj'), (('works', 'root'), 'root'), (('with', 'you'), 'case'), (('you', 'works'), 'obl'), (('to', 'deliver'), 'mark'), (('deliver', 'works'), 'advcl'), (('an', 'assessment'), 'det'), (('assessment', 'deliver'), 'obj'), (('of', 'capabilities'), 'case'), (('your', 'capabilities'), 'nmod:poss'), (('current', 'capabilities'), 'amod'), (('AI', 'capabilities'), 'compound'), (('capabilities', 'assessment'), 'nmod'), (('.', 'works'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG')]

================================ Paragraph 250 =================================

In assessing your current AI capabilities, IBM looks at  many different aspects, some of which are: 


------------------- Sentence 1 -------------------

 In assessing your current AI capabilities, IBM looks at  many different aspects, some of which are: 

Tokens are: 
>> ['In', 'assessing', 'your', 'current', 'AI', 'capabilities', ',', 'IBM', 'looks', 'at', 'many', 'different', 'aspects', ',', 'some', 'of', 'which', 'are', ':'] 

 UPOS tags are: 
>> [('In', 'SCONJ'), ('assessing', 'VERB'), ('your', 'PRON'), ('current', 'ADJ'), ('AI', 'NOUN'), ('capabilities', 'NOUN'), (',', 'PUNCT'), ('IBM', 'PROPN'), ('looks', 'VERB'), ('at', 'ADP'), ('many', 'ADJ'), ('different', 'ADJ'), ('aspects', 'NOUN'), (',', 'PUNCT'), ('some', 'DET'), ('of', 'ADP'), ('which', 'PRON'), ('are', 'AUX'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('assessing', 'VBG'), ('your', 'PRP$'), ('current', 'JJ'), ('AI', 'NN'), ('capabilities', 'NNS'), (',', ','), ('IBM', 'NNP'), ('looks', 'VBZ'), ('at', 'IN'), ('many', 'JJ'), ('different', 'JJ'), ('aspects', 'NNS'), (',', ','), ('some', 'DT'), ('of', 'IN'), ('which', 'WDT'), ('are', 'VBP'), (':', ':')] 

 Lemmas are: 
>> [('In', 'in'), ('assessing', 'assess'), ('your', 'you'), ('current', 'current'), ('AI', 'ai'), ('capabilities', 'capability'), (',', ','), ('IBM', 'IBM'), ('looks', 'look'), ('at', 'at'), ('many', 'many'), ('different', 'different'), ('aspects', 'aspect'), (',', ','), ('some', 'some'), ('of', 'of'), ('which', 'which'), ('are', 'be'), (':', ':')] 

 Dependency tags are: 
>> [(('In', 'assessing'), 'mark'), (('assessing', 'looks'), 'advcl'), (('your', 'capabilities'), 'nmod:poss'), (('current', 'capabilities'), 'amod'), (('AI', 'capabilities'), 'compound'), (('capabilities', 'assessing'), 'obj'), ((',', 'assessing'), 'punct'), (('IBM', 'looks'), 'nsubj'), (('looks', 'root'), 'root'), (('at', 'aspects'), 'case'), (('many', 'aspects'), 'amod'), (('different', 'aspects'), 'amod'), (('aspects', 'looks'), 'obl'), ((',', 'looks'), 'punct'), (('some', 'are'), 'nsubj'), (('of', 'which'), 'case'), (('which', 'some'), 'nmod'), (('are', 'aspects'), 'acl:relcl'), ((':', 'looks'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG')]

================================ Paragraph 251 =================================

 — Systems: What does your innovation system look like?  — People: How skilled is your staff in AI?  — Organization: How do you position AI expertise in   your organization? 


------------------- Sentence 1 -------------------

 — Systems: 

Tokens are: 
>> ['—', 'Systems', ':'] 

 UPOS tags are: 
>> [('—', 'PUNCT'), ('Systems', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('—', ':'), ('Systems', 'NNS'), (':', ':')] 

 Lemmas are: 
>> [('—', '—'), ('Systems', 'system'), (':', ':')] 

 Dependency tags are: 
>> [(('—', 'Systems'), 'punct'), (('Systems', 'root'), 'root'), ((':', 'Systems'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 What does your innovation system look like?  — 

Tokens are: 
>> ['What', 'does', 'your', 'innovation', 'system', 'look', 'like', '?', '—'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('does', 'AUX'), ('your', 'PRON'), ('innovation', 'NOUN'), ('system', 'NOUN'), ('look', 'VERB'), ('like', 'ADP'), ('?', 'PUNCT'), ('—', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('does', 'VBZ'), ('your', 'PRP$'), ('innovation', 'NN'), ('system', 'NN'), ('look', 'VB'), ('like', 'IN'), ('?', '.'), ('—', ':')] 

 Lemmas are: 
>> [('What', 'what'), ('does', 'do'), ('your', 'you'), ('innovation', 'innovation'), ('system', 'system'), ('look', 'look'), ('like', 'like'), ('?', '?'), ('—', '—')] 

 Dependency tags are: 
>> [(('What', 'look'), 'obl'), (('does', 'look'), 'aux'), (('your', 'system'), 'nmod:poss'), (('innovation', 'system'), 'compound'), (('system', 'look'), 'nsubj'), (('look', 'root'), 'root'), (('like', 'What'), 'case'), (('?', 'look'), 'punct'), (('—', 'look'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 People: How skilled is your staff in AI?  — Organization: 

Tokens are: 
>> ['People', ':', 'How', 'skilled', 'is', 'your', 'staff', 'in', 'AI', '?', '—', 'Organization', ':'] 

 UPOS tags are: 
>> [('People', 'NOUN'), (':', 'PUNCT'), ('How', 'ADV'), ('skilled', 'ADJ'), ('is', 'AUX'), ('your', 'PRON'), ('staff', 'NOUN'), ('in', 'ADP'), ('AI', 'PROPN'), ('?', 'PUNCT'), ('—', 'PUNCT'), ('Organization', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('People', 'NNS'), (':', ':'), ('How', 'WRB'), ('skilled', 'JJ'), ('is', 'VBZ'), ('your', 'PRP$'), ('staff', 'NN'), ('in', 'IN'), ('AI', 'NNP'), ('?', '.'), ('—', ':'), ('Organization', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('People', 'person'), (':', ':'), ('How', 'how'), ('skilled', 'skilled'), ('is', 'be'), ('your', 'you'), ('staff', 'staff'), ('in', 'in'), ('AI', 'AI'), ('?', '?'), ('—', '—'), ('Organization', 'Organization'), (':', ':')] 

 Dependency tags are: 
>> [(('People', 'root'), 'root'), ((':', 'People'), 'punct'), (('How', 'skilled'), 'advmod'), (('skilled', 'People'), 'appos'), (('is', 'skilled'), 'cop'), (('your', 'staff'), 'nmod:poss'), (('staff', 'skilled'), 'nsubj'), (('in', 'AI'), 'case'), (('AI', 'staff'), 'nmod'), (('?', 'skilled'), 'punct'), (('—', 'Organization'), 'punct'), (('Organization', 'skilled'), 'parataxis'), ((':', 'People'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

------------------- Sentence 4 -------------------

 How do you position AI expertise in   your organization? 

Tokens are: 
>> ['How', 'do', 'you', 'position', 'AI', 'expertise', 'in', 'your', 'organization', '?'] 

 UPOS tags are: 
>> [('How', 'ADV'), ('do', 'AUX'), ('you', 'PRON'), ('position', 'VERB'), ('AI', 'PRON'), ('expertise', 'NOUN'), ('in', 'ADP'), ('your', 'PRON'), ('organization', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('How', 'WRB'), ('do', 'VBP'), ('you', 'PRP'), ('position', 'VB'), ('AI', 'PRP$'), ('expertise', 'NN'), ('in', 'IN'), ('your', 'PRP$'), ('organization', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('How', 'how'), ('do', 'do'), ('you', 'you'), ('position', 'position'), ('AI', 'ai'), ('expertise', 'expertise'), ('in', 'in'), ('your', 'you'), ('organization', 'organization'), ('?', '?')] 

 Dependency tags are: 
>> [(('How', 'position'), 'advmod'), (('do', 'position'), 'aux'), (('you', 'position'), 'nsubj'), (('position', 'root'), 'root'), (('AI', 'expertise'), 'nmod:poss'), (('expertise', 'position'), 'obj'), (('in', 'organization'), 'case'), (('your', 'organization'), 'nmod:poss'), (('organization', 'position'), 'obl'), (('?', 'position'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 252 =================================

 — Culture: Do you operate in an agile fashion?  — Data: How readily available is your data?  — Technology: Does your current architecture enable AI? 


------------------- Sentence 1 -------------------

 — Culture: Do you operate in an agile fashion?  — 

Tokens are: 
>> ['—', 'Culture', ':', 'Do', 'you', 'operate', 'in', 'an', 'agile', 'fashion', '?', '—'] 

 UPOS tags are: 
>> [('—', 'PUNCT'), ('Culture', 'NOUN'), (':', 'PUNCT'), ('Do', 'AUX'), ('you', 'PRON'), ('operate', 'VERB'), ('in', 'ADP'), ('an', 'DET'), ('agile', 'ADJ'), ('fashion', 'NOUN'), ('?', 'PUNCT'), ('—', 'PUNCT')] 

 XPOS tags are: 
>> [('—', ':'), ('Culture', 'NN'), (':', ':'), ('Do', 'VBP'), ('you', 'PRP'), ('operate', 'VB'), ('in', 'IN'), ('an', 'DT'), ('agile', 'JJ'), ('fashion', 'NN'), ('?', '.'), ('—', ':')] 

 Lemmas are: 
>> [('—', '—'), ('Culture', 'Culture'), (':', ':'), ('Do', 'do'), ('you', 'you'), ('operate', 'operate'), ('in', 'in'), ('an', 'a'), ('agile', 'agile'), ('fashion', 'fashion'), ('?', '?'), ('—', '—')] 

 Dependency tags are: 
>> [(('—', 'Culture'), 'punct'), (('Culture', 'root'), 'root'), ((':', 'Culture'), 'punct'), (('Do', 'operate'), 'aux'), (('you', 'operate'), 'nsubj'), (('operate', 'Culture'), 'appos'), (('in', 'fashion'), 'case'), (('an', 'fashion'), 'det'), (('agile', 'fashion'), 'amod'), (('fashion', 'operate'), 'obl'), (('?', 'Culture'), 'punct'), (('—', 'Culture'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Data: 

Tokens are: 
>> ['Data', ':'] 

 UPOS tags are: 
>> [('Data', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Data', 'NNS'), (':', ':')] 

 Lemmas are: 
>> [('Data', 'data'), (':', ':')] 

 Dependency tags are: 
>> [(('Data', 'root'), 'root'), ((':', 'Data'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 How readily available is your data?  — 

Tokens are: 
>> ['How', 'readily', 'available', 'is', 'your', 'data', '?', '—'] 

 UPOS tags are: 
>> [('How', 'ADV'), ('readily', 'ADV'), ('available', 'ADJ'), ('is', 'AUX'), ('your', 'PRON'), ('data', 'NOUN'), ('?', 'PUNCT'), ('—', 'PUNCT')] 

 XPOS tags are: 
>> [('How', 'WRB'), ('readily', 'RB'), ('available', 'JJ'), ('is', 'VBZ'), ('your', 'PRP$'), ('data', 'NN'), ('?', '.'), ('—', ':')] 

 Lemmas are: 
>> [('How', 'how'), ('readily', 'readily'), ('available', 'available'), ('is', 'be'), ('your', 'you'), ('data', 'datum'), ('?', '?'), ('—', '—')] 

 Dependency tags are: 
>> [(('How', 'readily'), 'advmod'), (('readily', 'available'), 'advmod'), (('available', 'root'), 'root'), (('is', 'available'), 'cop'), (('your', 'data'), 'nmod:poss'), (('data', 'available'), 'nsubj'), (('?', 'available'), 'punct'), (('—', 'available'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Technology: Does your current architecture enable AI? 

Tokens are: 
>> ['Technology', ':', 'Does', 'your', 'current', 'architecture', 'enable', 'AI', '?'] 

 UPOS tags are: 
>> [('Technology', 'NOUN'), (':', 'PUNCT'), ('Does', 'AUX'), ('your', 'PRON'), ('current', 'ADJ'), ('architecture', 'NOUN'), ('enable', 'VERB'), ('AI', 'PRON'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Technology', 'NN'), (':', ':'), ('Does', 'VBZ'), ('your', 'PRP$'), ('current', 'JJ'), ('architecture', 'NN'), ('enable', 'VB'), ('AI', 'PRP'), ('?', '.')] 

 Lemmas are: 
>> [('Technology', 'technology'), (':', ':'), ('Does', 'do'), ('your', 'you'), ('current', 'current'), ('architecture', 'architecture'), ('enable', 'enable'), ('AI', 'ai'), ('?', '?')] 

 Dependency tags are: 
>> [(('Technology', 'root'), 'root'), ((':', 'Technology'), 'punct'), (('Does', 'enable'), 'aux'), (('your', 'architecture'), 'nmod:poss'), (('current', 'architecture'), 'amod'), (('architecture', 'enable'), 'nsubj'), (('enable', 'Technology'), 'appos'), (('AI', 'enable'), 'obj'), (('?', 'Technology'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 253 =================================

IBM works with you to define your AI Ambition as a high- level AI strategic direction by looking at “big ideas” and  by reflecting on persona’s and their user stories. A persona  can be a marketing manager or a product developer. This  ambition is translated into a roadmap and a high-level  business case. IBM also supports you to select the most  favorable operating model to move forward. 


------------------- Sentence 1 -------------------

 IBM works with you to define your AI Ambition as a high- level AI strategic direction by looking at “big ideas” and  by reflecting on persona’s and their user stories. 

Tokens are: 
>> ['IBM', 'works', 'with', 'you', 'to', 'define', 'your', 'AI', 'Ambition', 'as', 'a', 'high', '-', 'level', 'AI', 'strategic', 'direction', 'by', 'looking', 'at', '“', 'big', 'ideas', '”', 'and', 'by', 'reflecting', 'on', 'persona', '’s', 'and', 'their', 'user', 'stories', '.'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('works', 'VERB'), ('with', 'ADP'), ('you', 'PRON'), ('to', 'PART'), ('define', 'VERB'), ('your', 'PRON'), ('AI', 'NOUN'), ('Ambition', 'NOUN'), ('as', 'ADP'), ('a', 'DET'), ('high', 'ADJ'), ('-', 'PUNCT'), ('level', 'NOUN'), ('AI', 'ADP'), ('strategic', 'ADJ'), ('direction', 'NOUN'), ('by', 'SCONJ'), ('looking', 'VERB'), ('at', 'ADP'), ('“', 'PUNCT'), ('big', 'ADJ'), ('ideas', 'NOUN'), ('”', 'PUNCT'), ('and', 'CCONJ'), ('by', 'SCONJ'), ('reflecting', 'VERB'), ('on', 'ADP'), ('persona', 'NOUN'), ('’s', 'PART'), ('and', 'CCONJ'), ('their', 'PRON'), ('user', 'NOUN'), ('stories', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('works', 'VBZ'), ('with', 'IN'), ('you', 'PRP'), ('to', 'TO'), ('define', 'VB'), ('your', 'PRP$'), ('AI', 'NN'), ('Ambition', 'NN'), ('as', 'IN'), ('a', 'DT'), ('high', 'JJ'), ('-', 'HYPH'), ('level', 'NN'), ('AI', 'IN'), ('strategic', 'JJ'), ('direction', 'NN'), ('by', 'IN'), ('looking', 'VBG'), ('at', 'IN'), ('“', '``'), ('big', 'JJ'), ('ideas', 'NNS'), ('”', "''"), ('and', 'CC'), ('by', 'IN'), ('reflecting', 'VBG'), ('on', 'IN'), ('persona', 'NN'), ('’s', 'POS'), ('and', 'CC'), ('their', 'PRP$'), ('user', 'NN'), ('stories', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('works', 'work'), ('with', 'with'), ('you', 'you'), ('to', 'to'), ('define', 'define'), ('your', 'you'), ('AI', 'ai'), ('Ambition', 'ambition'), ('as', 'as'), ('a', 'a'), ('high', 'high'), ('-', '-'), ('level', 'level'), ('AI', 'ai'), ('strategic', 'strategic'), ('direction', 'direction'), ('by', 'by'), ('looking', 'look'), ('at', 'at'), ('“', "''"), ('big', 'big'), ('ideas', 'idea'), ('”', "''"), ('and', 'and'), ('by', 'by'), ('reflecting', 'reflect'), ('on', 'on'), ('persona', 'persona'), ('’s', "'s"), ('and', 'and'), ('their', 'they'), ('user', 'user'), ('stories', 'story'), ('.', '.')] 

 Dependency tags are: 
>> [(('IBM', 'works'), 'nsubj'), (('works', 'root'), 'root'), (('with', 'you'), 'case'), (('you', 'works'), 'obl'), (('to', 'define'), 'mark'), (('define', 'works'), 'advcl'), (('your', 'Ambition'), 'nmod:poss'), (('AI', 'Ambition'), 'compound'), (('Ambition', 'define'), 'obj'), (('as', 'level'), 'case'), (('a', 'level'), 'det'), (('high', 'level'), 'amod'), (('-', 'level'), 'punct'), (('level', 'define'), 'obl'), (('AI', 'direction'), 'case'), (('strategic', 'direction'), 'amod'), (('direction', 'define'), 'obl'), (('by', 'looking'), 'mark'), (('looking', 'define'), 'advcl'), (('at', 'ideas'), 'case'), (('“', 'ideas'), 'punct'), (('big', 'ideas'), 'amod'), (('ideas', 'looking'), 'obl'), (('”', 'ideas'), 'punct'), (('and', 'reflecting'), 'cc'), (('by', 'reflecting'), 'mark'), (('reflecting', 'looking'), 'conj'), (('on', 'persona'), 'case'), (('persona', 'reflecting'), 'obl'), (('’s', 'persona'), 'case'), (('and', 'stories'), 'cc'), (('their', 'stories'), 'nmod:poss'), (('user', 'stories'), 'compound'), (('stories', 'reflecting'), 'obl'), (('.', 'works'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG')]

------------------- Sentence 2 -------------------

 A persona  can be a marketing manager or a product developer. 

Tokens are: 
>> ['A', 'persona', 'can', 'be', 'a', 'marketing', 'manager', 'or', 'a', 'product', 'developer', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('persona', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('a', 'DET'), ('marketing', 'NOUN'), ('manager', 'NOUN'), ('or', 'CCONJ'), ('a', 'DET'), ('product', 'NOUN'), ('developer', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('persona', 'NN'), ('can', 'MD'), ('be', 'VB'), ('a', 'DT'), ('marketing', 'NN'), ('manager', 'NN'), ('or', 'CC'), ('a', 'DT'), ('product', 'NN'), ('developer', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('persona', 'persona'), ('can', 'can'), ('be', 'be'), ('a', 'a'), ('marketing', 'marketing'), ('manager', 'manager'), ('or', 'or'), ('a', 'a'), ('product', 'product'), ('developer', 'developer'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'persona'), 'det'), (('persona', 'manager'), 'nsubj'), (('can', 'manager'), 'aux'), (('be', 'manager'), 'cop'), (('a', 'manager'), 'det'), (('marketing', 'manager'), 'compound'), (('manager', 'root'), 'root'), (('or', 'developer'), 'cc'), (('a', 'developer'), 'det'), (('product', 'developer'), 'compound'), (('developer', 'manager'), 'conj'), (('.', 'manager'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 This  ambition is translated into a roadmap and a high-level  business case. 

Tokens are: 
>> ['This', 'ambition', 'is', 'translated', 'into', 'a', 'roadmap', 'and', 'a', 'high', '-', 'level', 'business', 'case', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('ambition', 'NOUN'), ('is', 'AUX'), ('translated', 'VERB'), ('into', 'ADP'), ('a', 'DET'), ('roadmap', 'NOUN'), ('and', 'CCONJ'), ('a', 'DET'), ('high', 'ADJ'), ('-', 'PUNCT'), ('level', 'NOUN'), ('business', 'NOUN'), ('case', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('ambition', 'NN'), ('is', 'VBZ'), ('translated', 'VBN'), ('into', 'IN'), ('a', 'DT'), ('roadmap', 'NN'), ('and', 'CC'), ('a', 'DT'), ('high', 'JJ'), ('-', 'HYPH'), ('level', 'NN'), ('business', 'NN'), ('case', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('ambition', 'ambition'), ('is', 'be'), ('translated', 'translate'), ('into', 'into'), ('a', 'a'), ('roadmap', 'roadmap'), ('and', 'and'), ('a', 'a'), ('high', 'high'), ('-', '-'), ('level', 'level'), ('business', 'business'), ('case', 'case'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'ambition'), 'det'), (('ambition', 'translated'), 'nsubj:pass'), (('is', 'translated'), 'aux:pass'), (('translated', 'root'), 'root'), (('into', 'roadmap'), 'case'), (('a', 'roadmap'), 'det'), (('roadmap', 'translated'), 'obl'), (('and', 'case'), 'cc'), (('a', 'case'), 'det'), (('high', 'level'), 'amod'), (('-', 'level'), 'punct'), (('level', 'case'), 'compound'), (('business', 'case'), 'compound'), (('case', 'roadmap'), 'conj'), (('.', 'translated'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 IBM also supports you to select the most  favorable operating model to move forward. 

Tokens are: 
>> ['IBM', 'also', 'supports', 'you', 'to', 'select', 'the', 'most', 'favorable', 'operating', 'model', 'to', 'move', 'forward', '.'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('also', 'ADV'), ('supports', 'VERB'), ('you', 'PRON'), ('to', 'PART'), ('select', 'VERB'), ('the', 'DET'), ('most', 'ADV'), ('favorable', 'ADJ'), ('operating', 'NOUN'), ('model', 'NOUN'), ('to', 'PART'), ('move', 'VERB'), ('forward', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('also', 'RB'), ('supports', 'VBZ'), ('you', 'PRP'), ('to', 'TO'), ('select', 'VB'), ('the', 'DT'), ('most', 'RBS'), ('favorable', 'JJ'), ('operating', 'NN'), ('model', 'NN'), ('to', 'TO'), ('move', 'VB'), ('forward', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('also', 'also'), ('supports', 'support'), ('you', 'you'), ('to', 'to'), ('select', 'select'), ('the', 'the'), ('most', 'most'), ('favorable', 'favorable'), ('operating', 'operating'), ('model', 'model'), ('to', 'to'), ('move', 'move'), ('forward', 'forward'), ('.', '.')] 

 Dependency tags are: 
>> [(('IBM', 'supports'), 'nsubj'), (('also', 'supports'), 'advmod'), (('supports', 'root'), 'root'), (('you', 'supports'), 'obj'), (('to', 'select'), 'mark'), (('select', 'supports'), 'xcomp'), (('the', 'model'), 'det'), (('most', 'favorable'), 'advmod'), (('favorable', 'model'), 'amod'), (('operating', 'model'), 'compound'), (('model', 'select'), 'obj'), (('to', 'move'), 'mark'), (('move', 'select'), 'advcl'), (('forward', 'move'), 'advmod'), (('.', 'supports'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG')]

================================ Paragraph 254 =================================

Once you are prepared for your garage, IBM uses design  thinking to identify and define use cases. All use cases are  conceived based on the notion of creating business value.  In IBM’s experience, design thinking is the most effective  way. This so-called “demand generation” for the garage  should be on-going, creating the backlog and setting the  capacity planning for the garage. 


------------------- Sentence 1 -------------------

 Once you are prepared for your garage, IBM uses design  thinking to identify and define use cases. 

Tokens are: 
>> ['Once', 'you', 'are', 'prepared', 'for', 'your', 'garage', ',', 'IBM', 'uses', 'design', 'thinking', 'to', 'identify', 'and', 'define', 'use', 'cases', '.'] 

 UPOS tags are: 
>> [('Once', 'SCONJ'), ('you', 'PRON'), ('are', 'AUX'), ('prepared', 'VERB'), ('for', 'ADP'), ('your', 'PRON'), ('garage', 'NOUN'), (',', 'PUNCT'), ('IBM', 'PROPN'), ('uses', 'VERB'), ('design', 'NOUN'), ('thinking', 'VERB'), ('to', 'PART'), ('identify', 'VERB'), ('and', 'CCONJ'), ('define', 'VERB'), ('use', 'NOUN'), ('cases', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Once', 'IN'), ('you', 'PRP'), ('are', 'VBP'), ('prepared', 'VBN'), ('for', 'IN'), ('your', 'PRP$'), ('garage', 'NN'), (',', ','), ('IBM', 'NNP'), ('uses', 'VBZ'), ('design', 'NN'), ('thinking', 'VBG'), ('to', 'TO'), ('identify', 'VB'), ('and', 'CC'), ('define', 'VB'), ('use', 'NN'), ('cases', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Once', 'once'), ('you', 'you'), ('are', 'be'), ('prepared', 'prepare'), ('for', 'for'), ('your', 'you'), ('garage', 'garage'), (',', ','), ('IBM', 'IBM'), ('uses', 'use'), ('design', 'design'), ('thinking', 'think'), ('to', 'to'), ('identify', 'identify'), ('and', 'and'), ('define', 'define'), ('use', 'use'), ('cases', 'case'), ('.', '.')] 

 Dependency tags are: 
>> [(('Once', 'prepared'), 'mark'), (('you', 'prepared'), 'nsubj:pass'), (('are', 'prepared'), 'aux:pass'), (('prepared', 'uses'), 'advcl'), (('for', 'garage'), 'case'), (('your', 'garage'), 'nmod:poss'), (('garage', 'prepared'), 'obl'), ((',', 'uses'), 'punct'), (('IBM', 'uses'), 'nsubj'), (('uses', 'root'), 'root'), (('design', 'uses'), 'obj'), (('thinking', 'design'), 'acl'), (('to', 'identify'), 'mark'), (('identify', 'thinking'), 'xcomp'), (('and', 'define'), 'cc'), (('define', 'identify'), 'conj'), (('use', 'cases'), 'compound'), (('cases', 'identify'), 'obj'), (('.', 'uses'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG')]

------------------- Sentence 2 -------------------

 All use cases are  conceived based on the notion of creating business value. 

Tokens are: 
>> ['All', 'use', 'cases', 'are', 'conceived', 'based', 'on', 'the', 'notion', 'of', 'creating', 'business', 'value', '.'] 

 UPOS tags are: 
>> [('All', 'DET'), ('use', 'NOUN'), ('cases', 'NOUN'), ('are', 'AUX'), ('conceived', 'VERB'), ('based', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('notion', 'NOUN'), ('of', 'SCONJ'), ('creating', 'VERB'), ('business', 'NOUN'), ('value', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('All', 'DT'), ('use', 'NN'), ('cases', 'NNS'), ('are', 'VBP'), ('conceived', 'VBN'), ('based', 'VBN'), ('on', 'IN'), ('the', 'DT'), ('notion', 'NN'), ('of', 'IN'), ('creating', 'VBG'), ('business', 'NN'), ('value', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('All', 'all'), ('use', 'use'), ('cases', 'case'), ('are', 'be'), ('conceived', 'conceive'), ('based', 'base'), ('on', 'on'), ('the', 'the'), ('notion', 'notion'), ('of', 'of'), ('creating', 'create'), ('business', 'business'), ('value', 'value'), ('.', '.')] 

 Dependency tags are: 
>> [(('All', 'cases'), 'det'), (('use', 'cases'), 'compound'), (('cases', 'conceived'), 'nsubj:pass'), (('are', 'conceived'), 'aux:pass'), (('conceived', 'root'), 'root'), (('based', 'conceived'), 'advcl'), (('on', 'notion'), 'case'), (('the', 'notion'), 'det'), (('notion', 'based'), 'obl'), (('of', 'creating'), 'mark'), (('creating', 'notion'), 'acl'), (('business', 'value'), 'compound'), (('value', 'creating'), 'obj'), (('.', 'conceived'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 In IBM’s experience, design thinking is the most effective  way. 

Tokens are: 
>> ['In', 'IBM', '’s', 'experience', ',', 'design', 'thinking', 'is', 'the', 'most', 'effective', 'way', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('IBM', 'PROPN'), ('’s', 'PART'), ('experience', 'NOUN'), (',', 'PUNCT'), ('design', 'NOUN'), ('thinking', 'VERB'), ('is', 'AUX'), ('the', 'DET'), ('most', 'ADV'), ('effective', 'ADJ'), ('way', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('IBM', 'NNP'), ('’s', 'POS'), ('experience', 'NN'), (',', ','), ('design', 'NN'), ('thinking', 'VBG'), ('is', 'VBZ'), ('the', 'DT'), ('most', 'RBS'), ('effective', 'JJ'), ('way', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('IBM', 'IBM'), ('’s', "'s"), ('experience', 'experience'), (',', ','), ('design', 'design'), ('thinking', 'think'), ('is', 'be'), ('the', 'the'), ('most', 'most'), ('effective', 'effective'), ('way', 'way'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'experience'), 'case'), (('IBM', 'experience'), 'nmod:poss'), (('’s', 'IBM'), 'case'), (('experience', 'way'), 'nmod'), ((',', 'way'), 'punct'), (('design', 'way'), 'nsubj'), (('thinking', 'design'), 'acl'), (('is', 'way'), 'cop'), (('the', 'way'), 'det'), (('most', 'effective'), 'advmod'), (('effective', 'way'), 'amod'), (('way', 'root'), 'root'), (('.', 'way'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG')]

------------------- Sentence 4 -------------------

 This so-called “demand generation” for the garage  should be on-going, creating the backlog and setting the  capacity planning for the garage. 

Tokens are: 
>> ['This', 'so', '-', 'called', '“', 'demand', 'generation', '”', 'for', 'the', 'garage', 'should', 'be', 'on-going', ',', 'creating', 'the', 'backlog', 'and', 'setting', 'the', 'capacity', 'planning', 'for', 'the', 'garage', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('so', 'ADV'), ('-', 'PUNCT'), ('called', 'VERB'), ('“', 'PUNCT'), ('demand', 'NOUN'), ('generation', 'NOUN'), ('”', 'PUNCT'), ('for', 'ADP'), ('the', 'DET'), ('garage', 'NOUN'), ('should', 'AUX'), ('be', 'AUX'), ('on-going', 'ADJ'), (',', 'PUNCT'), ('creating', 'VERB'), ('the', 'DET'), ('backlog', 'NOUN'), ('and', 'CCONJ'), ('setting', 'VERB'), ('the', 'DET'), ('capacity', 'NOUN'), ('planning', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('garage', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('so', 'RB'), ('-', 'HYPH'), ('called', 'VBN'), ('“', '``'), ('demand', 'NN'), ('generation', 'NN'), ('”', "''"), ('for', 'IN'), ('the', 'DT'), ('garage', 'NN'), ('should', 'MD'), ('be', 'VB'), ('on-going', 'JJ'), (',', ','), ('creating', 'VBG'), ('the', 'DT'), ('backlog', 'NN'), ('and', 'CC'), ('setting', 'VBG'), ('the', 'DT'), ('capacity', 'NN'), ('planning', 'NN'), ('for', 'IN'), ('the', 'DT'), ('garage', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('so', 'so'), ('-', '-'), ('called', 'call'), ('“', "''"), ('demand', 'demand'), ('generation', 'generation'), ('”', "''"), ('for', 'for'), ('the', 'the'), ('garage', 'garage'), ('should', 'should'), ('be', 'be'), ('on-going', 'on-going'), (',', ','), ('creating', 'create'), ('the', 'the'), ('backlog', 'backlog'), ('and', 'and'), ('setting', 'set'), ('the', 'the'), ('capacity', 'capacity'), ('planning', 'planning'), ('for', 'for'), ('the', 'the'), ('garage', 'garage'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'generation'), 'det'), (('so', 'called'), 'advmod'), (('-', 'called'), 'punct'), (('called', 'generation'), 'amod'), (('“', 'generation'), 'punct'), (('demand', 'generation'), 'compound'), (('generation', 'on-going'), 'nsubj'), (('”', 'generation'), 'punct'), (('for', 'garage'), 'case'), (('the', 'garage'), 'det'), (('garage', 'generation'), 'nmod'), (('should', 'on-going'), 'aux'), (('be', 'on-going'), 'cop'), (('on-going', 'root'), 'root'), ((',', 'on-going'), 'punct'), (('creating', 'on-going'), 'advcl'), (('the', 'backlog'), 'det'), (('backlog', 'creating'), 'obj'), (('and', 'setting'), 'cc'), (('setting', 'creating'), 'conj'), (('the', 'planning'), 'det'), (('capacity', 'planning'), 'compound'), (('planning', 'setting'), 'obj'), (('for', 'garage'), 'case'), (('the', 'garage'), 'det'), (('garage', 'planning'), 'nmod'), (('.', 'on-going'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 255 =================================

IBM Services     17 


------------------- Sentence 1 -------------------

 IBM Services     17 

Tokens are: 
>> ['IBM', 'Services', '17'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('Services', 'PROPN'), ('17', 'NUM')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('Services', 'NNPS'), ('17', 'CD')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('Services', 'Service'), ('17', '17')] 

 Dependency tags are: 
>> [(('IBM', 'Services'), 'compound'), (('Services', 'root'), 'root'), (('17', 'Services'), 'nummod')]

 Named Entites are: 
>> [('IBM Services     17', 'ORG')]

================================ Paragraph 256 =================================

Once the first use cases have been agreed, the garage  provides the playground for deep technology, accommodating  enterprise-scale ways of working—such as design thinking,  agile, DevOps and lean IT. Innovation starts with a Proof  of Value (POV): evaluating the business and technical  feasibility of the use case in a time-boxed agile manner.  Agile development is at the core of what IBM does in the  garage. The goal is to succeed or fail quickly, with speed   to scale. Flexibility and speed are key! A successful POV will  move into a pilot implementation. The IBM Garage leverages  IBM’s extensive asset library to more efficiently validate use  cases and accelerate transformative change.  


------------------- Sentence 1 -------------------

 Once the first use cases have been agreed, the garage  provides the playground for deep technology, accommodating  enterprise-scale ways of working—such as design thinking,  agile, DevOps and lean IT. 

Tokens are: 
>> ['Once', 'the', 'first', 'use', 'cases', 'have', 'been', 'agreed', ',', 'the', 'garage', 'provides', 'the', 'playground', 'for', 'deep', 'technology', ',', 'accommodating', 'enterprise', '-', 'scale', 'ways', 'of', 'working', '—', 'such', 'as', 'design', 'thinking', ',', 'agile', ',', 'DevOps', 'and', 'lean', 'IT', '.'] 

 UPOS tags are: 
>> [('Once', 'SCONJ'), ('the', 'DET'), ('first', 'ADJ'), ('use', 'NOUN'), ('cases', 'NOUN'), ('have', 'AUX'), ('been', 'AUX'), ('agreed', 'VERB'), (',', 'PUNCT'), ('the', 'DET'), ('garage', 'NOUN'), ('provides', 'VERB'), ('the', 'DET'), ('playground', 'NOUN'), ('for', 'ADP'), ('deep', 'ADJ'), ('technology', 'NOUN'), (',', 'PUNCT'), ('accommodating', 'VERB'), ('enterprise', 'ADJ'), ('-', 'PUNCT'), ('scale', 'NOUN'), ('ways', 'NOUN'), ('of', 'SCONJ'), ('working', 'VERB'), ('—', 'PUNCT'), ('such', 'ADJ'), ('as', 'ADP'), ('design', 'NOUN'), ('thinking', 'NOUN'), (',', 'PUNCT'), ('agile', 'ADJ'), (',', 'PUNCT'), ('DevOps', 'NOUN'), ('and', 'CCONJ'), ('lean', 'VERB'), ('IT', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Once', 'IN'), ('the', 'DT'), ('first', 'JJ'), ('use', 'NN'), ('cases', 'NNS'), ('have', 'VBP'), ('been', 'VBN'), ('agreed', 'VBN'), (',', ','), ('the', 'DT'), ('garage', 'NN'), ('provides', 'VBZ'), ('the', 'DT'), ('playground', 'NN'), ('for', 'IN'), ('deep', 'JJ'), ('technology', 'NN'), (',', ','), ('accommodating', 'VBG'), ('enterprise', 'JJ'), ('-', 'HYPH'), ('scale', 'NN'), ('ways', 'NNS'), ('of', 'IN'), ('working', 'VBG'), ('—', ':'), ('such', 'JJ'), ('as', 'IN'), ('design', 'NN'), ('thinking', 'NN'), (',', ','), ('agile', 'JJ'), (',', ','), ('DevOps', 'NNS'), ('and', 'CC'), ('lean', 'VB'), ('IT', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('Once', 'once'), ('the', 'the'), ('first', 'first'), ('use', 'use'), ('cases', 'case'), ('have', 'have'), ('been', 'be'), ('agreed', 'agree'), (',', ','), ('the', 'the'), ('garage', 'garage'), ('provides', 'provide'), ('the', 'the'), ('playground', 'playground'), ('for', 'for'), ('deep', 'deep'), ('technology', 'technology'), (',', ','), ('accommodating', 'accommodate'), ('enterprise', 'enterprise'), ('-', '-'), ('scale', 'scale'), ('ways', 'way'), ('of', 'of'), ('working', 'work'), ('—', '—'), ('such', 'such'), ('as', 'as'), ('design', 'design'), ('thinking', 'thinking'), (',', ','), ('agile', 'agile'), (',', ','), ('DevOps', 'devop'), ('and', 'and'), ('lean', 'lean'), ('IT', 'it'), ('.', '.')] 

 Dependency tags are: 
>> [(('Once', 'agreed'), 'mark'), (('the', 'cases'), 'det'), (('first', 'cases'), 'amod'), (('use', 'cases'), 'compound'), (('cases', 'agreed'), 'nsubj:pass'), (('have', 'agreed'), 'aux'), (('been', 'agreed'), 'aux:pass'), (('agreed', 'provides'), 'advcl'), ((',', 'agreed'), 'punct'), (('the', 'garage'), 'det'), (('garage', 'provides'), 'nsubj'), (('provides', 'root'), 'root'), (('the', 'playground'), 'det'), (('playground', 'provides'), 'obj'), (('for', 'technology'), 'case'), (('deep', 'technology'), 'amod'), (('technology', 'playground'), 'nmod'), ((',', 'accommodating'), 'punct'), (('accommodating', 'provides'), 'advcl'), (('enterprise', 'scale'), 'amod'), (('-', 'scale'), 'punct'), (('scale', 'ways'), 'compound'), (('ways', 'accommodating'), 'obj'), (('of', 'working'), 'mark'), (('working', 'ways'), 'acl'), (('—', 'thinking'), 'punct'), (('such', 'thinking'), 'case'), (('as', 'such'), 'fixed'), (('design', 'thinking'), 'compound'), (('thinking', 'ways'), 'nmod'), ((',', 'agile'), 'punct'), (('agile', 'thinking'), 'conj'), ((',', 'DevOps'), 'punct'), (('DevOps', 'thinking'), 'conj'), (('and', 'lean'), 'cc'), (('lean', 'thinking'), 'conj'), (('IT', 'lean'), 'obj'), (('.', 'provides'), 'punct')]

 Named Entites are: 
>> [('first', 'ORDINAL')]

------------------- Sentence 2 -------------------

 Innovation starts with a Proof  of Value (POV): evaluating the business and technical  feasibility of the use case in a time-boxed agile manner. 

Tokens are: 
>> ['Innovation', 'starts', 'with', 'a', 'Proof', 'of', 'Value', '(', 'POV', ')', ':', 'evaluating', 'the', 'business', 'and', 'technical', 'feasibility', 'of', 'the', 'use', 'case', 'in', 'a', 'time', '-', 'boxed', 'agile', 'manner', '.'] 

 UPOS tags are: 
>> [('Innovation', 'NOUN'), ('starts', 'VERB'), ('with', 'ADP'), ('a', 'DET'), ('Proof', 'NOUN'), ('of', 'ADP'), ('Value', 'NOUN'), ('(', 'PUNCT'), ('POV', 'NOUN'), (')', 'PUNCT'), (':', 'PUNCT'), ('evaluating', 'VERB'), ('the', 'DET'), ('business', 'NOUN'), ('and', 'CCONJ'), ('technical', 'ADJ'), ('feasibility', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('use', 'NOUN'), ('case', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('time', 'NOUN'), ('-', 'PUNCT'), ('boxed', 'VERB'), ('agile', 'ADJ'), ('manner', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Innovation', 'NN'), ('starts', 'VBZ'), ('with', 'IN'), ('a', 'DT'), ('Proof', 'NN'), ('of', 'IN'), ('Value', 'NN'), ('(', '-LRB-'), ('POV', 'NN'), (')', '-RRB-'), (':', ':'), ('evaluating', 'VBG'), ('the', 'DT'), ('business', 'NN'), ('and', 'CC'), ('technical', 'JJ'), ('feasibility', 'NN'), ('of', 'IN'), ('the', 'DT'), ('use', 'NN'), ('case', 'NN'), ('in', 'IN'), ('a', 'DT'), ('time', 'NN'), ('-', 'HYPH'), ('boxed', 'VBN'), ('agile', 'JJ'), ('manner', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Innovation', 'innovation'), ('starts', 'start'), ('with', 'with'), ('a', 'a'), ('Proof', 'proof'), ('of', 'of'), ('Value', 'value'), ('(', '('), ('POV', 'Pov'), (')', ')'), (':', ':'), ('evaluating', 'evaluate'), ('the', 'the'), ('business', 'business'), ('and', 'and'), ('technical', 'technical'), ('feasibility', 'feasibility'), ('of', 'of'), ('the', 'the'), ('use', 'use'), ('case', 'case'), ('in', 'in'), ('a', 'a'), ('time', 'time'), ('-', '-'), ('boxed', 'box'), ('agile', 'agile'), ('manner', 'manner'), ('.', '.')] 

 Dependency tags are: 
>> [(('Innovation', 'starts'), 'nsubj'), (('starts', 'root'), 'root'), (('with', 'Proof'), 'case'), (('a', 'Proof'), 'det'), (('Proof', 'starts'), 'obl'), (('of', 'Value'), 'case'), (('Value', 'Proof'), 'nmod'), (('(', 'POV'), 'punct'), (('POV', 'Value'), 'appos'), ((')', 'POV'), 'punct'), ((':', 'evaluating'), 'punct'), (('evaluating', 'starts'), 'advcl'), (('the', 'feasibility'), 'det'), (('business', 'evaluating'), 'obj'), (('and', 'technical'), 'cc'), (('technical', 'business'), 'conj'), (('feasibility', 'evaluating'), 'obj'), (('of', 'case'), 'case'), (('the', 'case'), 'det'), (('use', 'case'), 'compound'), (('case', 'feasibility'), 'nmod'), (('in', 'manner'), 'case'), (('a', 'manner'), 'det'), (('time', 'boxed'), 'compound'), (('-', 'boxed'), 'punct'), (('boxed', 'manner'), 'amod'), (('agile', 'manner'), 'amod'), (('manner', 'case'), 'nmod'), (('.', 'starts'), 'punct')]

 Named Entites are: 
>> [('a Proof  of Value', 'WORK_OF_ART')]

------------------- Sentence 3 -------------------

 Agile development is at the core of what IBM does in the  garage. 

Tokens are: 
>> ['Agile', 'development', 'is', 'at', 'the', 'core', 'of', 'what', 'IBM', 'does', 'in', 'the', 'garage', '.'] 

 UPOS tags are: 
>> [('Agile', 'ADJ'), ('development', 'NOUN'), ('is', 'AUX'), ('at', 'ADP'), ('the', 'DET'), ('core', 'NOUN'), ('of', 'ADP'), ('what', 'PRON'), ('IBM', 'PROPN'), ('does', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('garage', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Agile', 'JJ'), ('development', 'NN'), ('is', 'VBZ'), ('at', 'IN'), ('the', 'DT'), ('core', 'NN'), ('of', 'IN'), ('what', 'WP'), ('IBM', 'NNP'), ('does', 'VBZ'), ('in', 'IN'), ('the', 'DT'), ('garage', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Agile', 'Agile'), ('development', 'development'), ('is', 'be'), ('at', 'at'), ('the', 'the'), ('core', 'core'), ('of', 'of'), ('what', 'what'), ('IBM', 'IBM'), ('does', 'do'), ('in', 'in'), ('the', 'the'), ('garage', 'garage'), ('.', '.')] 

 Dependency tags are: 
>> [(('Agile', 'development'), 'amod'), (('development', 'core'), 'nsubj'), (('is', 'core'), 'cop'), (('at', 'core'), 'case'), (('the', 'core'), 'det'), (('core', 'root'), 'root'), (('of', 'what'), 'case'), (('what', 'core'), 'nmod'), (('IBM', 'does'), 'nsubj'), (('does', 'what'), 'acl:relcl'), (('in', 'garage'), 'case'), (('the', 'garage'), 'det'), (('garage', 'does'), 'obl'), (('.', 'core'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG')]

------------------- Sentence 4 -------------------

 The goal is to succeed or fail quickly, with speed   to scale. 

Tokens are: 
>> ['The', 'goal', 'is', 'to', 'succeed', 'or', 'fail', 'quickly', ',', 'with', 'speed', 'to', 'scale', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('goal', 'NOUN'), ('is', 'VERB'), ('to', 'PART'), ('succeed', 'VERB'), ('or', 'CCONJ'), ('fail', 'VERB'), ('quickly', 'ADV'), (',', 'PUNCT'), ('with', 'ADP'), ('speed', 'NOUN'), ('to', 'ADP'), ('scale', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('goal', 'NN'), ('is', 'VBZ'), ('to', 'TO'), ('succeed', 'VB'), ('or', 'CC'), ('fail', 'VB'), ('quickly', 'RB'), (',', ','), ('with', 'IN'), ('speed', 'NN'), ('to', 'IN'), ('scale', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('goal', 'goal'), ('is', 'be'), ('to', 'to'), ('succeed', 'succeed'), ('or', 'or'), ('fail', 'fail'), ('quickly', 'quickly'), (',', ','), ('with', 'with'), ('speed', 'speed'), ('to', 'to'), ('scale', 'scale'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'goal'), 'det'), (('goal', 'is'), 'nsubj'), (('is', 'root'), 'root'), (('to', 'succeed'), 'mark'), (('succeed', 'is'), 'ccomp'), (('or', 'fail'), 'cc'), (('fail', 'succeed'), 'conj'), (('quickly', 'succeed'), 'advmod'), ((',', 'speed'), 'punct'), (('with', 'speed'), 'case'), (('speed', 'succeed'), 'obl'), (('to', 'scale'), 'case'), (('scale', 'speed'), 'nmod'), (('.', 'is'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 Flexibility and speed are key! 

Tokens are: 
>> ['Flexibility', 'and', 'speed', 'are', 'key', '!'] 

 UPOS tags are: 
>> [('Flexibility', 'NOUN'), ('and', 'CCONJ'), ('speed', 'NOUN'), ('are', 'AUX'), ('key', 'ADJ'), ('!', 'PUNCT')] 

 XPOS tags are: 
>> [('Flexibility', 'NN'), ('and', 'CC'), ('speed', 'NN'), ('are', 'VBP'), ('key', 'JJ'), ('!', '.')] 

 Lemmas are: 
>> [('Flexibility', 'flexibility'), ('and', 'and'), ('speed', 'speed'), ('are', 'be'), ('key', 'key'), ('!', '!')] 

 Dependency tags are: 
>> [(('Flexibility', 'key'), 'nsubj'), (('and', 'speed'), 'cc'), (('speed', 'Flexibility'), 'conj'), (('are', 'key'), 'cop'), (('key', 'root'), 'root'), (('!', 'key'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 A successful POV will  move into a pilot implementation. 

Tokens are: 
>> ['A', 'successful', 'POV', 'will', 'move', 'into', 'a', 'pilot', 'implementation', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('successful', 'ADJ'), ('POV', 'NOUN'), ('will', 'AUX'), ('move', 'VERB'), ('into', 'ADP'), ('a', 'DET'), ('pilot', 'NOUN'), ('implementation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('successful', 'JJ'), ('POV', 'NN'), ('will', 'MD'), ('move', 'VB'), ('into', 'IN'), ('a', 'DT'), ('pilot', 'NN'), ('implementation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('successful', 'successful'), ('POV', 'Pov'), ('will', 'will'), ('move', 'move'), ('into', 'into'), ('a', 'a'), ('pilot', 'pilot'), ('implementation', 'implementation'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'POV'), 'det'), (('successful', 'POV'), 'amod'), (('POV', 'move'), 'nsubj'), (('will', 'move'), 'aux'), (('move', 'root'), 'root'), (('into', 'implementation'), 'case'), (('a', 'implementation'), 'det'), (('pilot', 'implementation'), 'compound'), (('implementation', 'move'), 'obl'), (('.', 'move'), 'punct')]

 Named Entites are: 
>> [('POV', 'ORG')]

------------------- Sentence 7 -------------------

 The IBM Garage leverages  IBM’s extensive asset library to more efficiently validate use  cases and accelerate transformative change. 

Tokens are: 
>> ['The', 'IBM', 'Garage', 'leverages', 'IBM', '’s', 'extensive', 'asset', 'library', 'to', 'more', 'efficiently', 'validate', 'use', 'cases', 'and', 'accelerate', 'transformative', 'change', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('IBM', 'PROPN'), ('Garage', 'PROPN'), ('leverages', 'VERB'), ('IBM', 'PROPN'), ('’s', 'PART'), ('extensive', 'ADJ'), ('asset', 'NOUN'), ('library', 'NOUN'), ('to', 'PART'), ('more', 'ADV'), ('efficiently', 'ADV'), ('validate', 'VERB'), ('use', 'NOUN'), ('cases', 'NOUN'), ('and', 'CCONJ'), ('accelerate', 'VERB'), ('transformative', 'ADJ'), ('change', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('IBM', 'NNP'), ('Garage', 'NNP'), ('leverages', 'VBZ'), ('IBM', 'NNP'), ('’s', 'POS'), ('extensive', 'JJ'), ('asset', 'NN'), ('library', 'NN'), ('to', 'TO'), ('more', 'RBR'), ('efficiently', 'RB'), ('validate', 'VB'), ('use', 'NN'), ('cases', 'NNS'), ('and', 'CC'), ('accelerate', 'VB'), ('transformative', 'JJ'), ('change', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('IBM', 'IBM'), ('Garage', 'Garage'), ('leverages', 'leverage'), ('IBM', 'IBM'), ('’s', "'s"), ('extensive', 'extensive'), ('asset', 'asset'), ('library', 'library'), ('to', 'to'), ('more', 'more'), ('efficiently', 'efficiently'), ('validate', 'validate'), ('use', 'use'), ('cases', 'case'), ('and', 'and'), ('accelerate', 'accelerate'), ('transformative', 'transformative'), ('change', 'change'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'Garage'), 'det'), (('IBM', 'Garage'), 'compound'), (('Garage', 'leverages'), 'nsubj'), (('leverages', 'root'), 'root'), (('IBM', 'library'), 'nmod:poss'), (('’s', 'IBM'), 'case'), (('extensive', 'library'), 'amod'), (('asset', 'library'), 'compound'), (('library', 'leverages'), 'obj'), (('to', 'validate'), 'mark'), (('more', 'efficiently'), 'advmod'), (('efficiently', 'validate'), 'advmod'), (('validate', 'leverages'), 'xcomp'), (('use', 'cases'), 'compound'), (('cases', 'validate'), 'obj'), (('and', 'accelerate'), 'cc'), (('accelerate', 'validate'), 'conj'), (('transformative', 'change'), 'amod'), (('change', 'accelerate'), 'obj'), (('.', 'leverages'), 'punct')]

 Named Entites are: 
>> [('The IBM Garage', 'ORG'), ('IBM', 'ORG')]

================================ Paragraph 257 =================================

Organizations should be prepared to step out of their comfort  zones and think differently. Thinking in a data-driven and AI  approach requires a shift in the way we see. It takes some  effort to change our ways of thinking. This is where digital  change management plays a role. You also need to consider  the buildup of AI capabilities in your organization. IBM  offers various forms of training and enablement ranging  from Hackathons, planned learning universities for  upskilling and an AI learning academy. 


------------------- Sentence 1 -------------------

 Organizations should be prepared to step out of their comfort  zones and think differently. 

Tokens are: 
>> ['Organizations', 'should', 'be', 'prepared', 'to', 'step', 'out', 'of', 'their', 'comfort', 'zones', 'and', 'think', 'differently', '.'] 

 UPOS tags are: 
>> [('Organizations', 'NOUN'), ('should', 'AUX'), ('be', 'AUX'), ('prepared', 'VERB'), ('to', 'PART'), ('step', 'VERB'), ('out', 'ADP'), ('of', 'ADP'), ('their', 'PRON'), ('comfort', 'NOUN'), ('zones', 'NOUN'), ('and', 'CCONJ'), ('think', 'VERB'), ('differently', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Organizations', 'NNS'), ('should', 'MD'), ('be', 'VB'), ('prepared', 'VBN'), ('to', 'TO'), ('step', 'VB'), ('out', 'IN'), ('of', 'IN'), ('their', 'PRP$'), ('comfort', 'NN'), ('zones', 'NNS'), ('and', 'CC'), ('think', 'VB'), ('differently', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('Organizations', 'organization'), ('should', 'should'), ('be', 'be'), ('prepared', 'prepare'), ('to', 'to'), ('step', 'step'), ('out', 'out'), ('of', 'of'), ('their', 'they'), ('comfort', 'comfort'), ('zones', 'zone'), ('and', 'and'), ('think', 'think'), ('differently', 'differently'), ('.', '.')] 

 Dependency tags are: 
>> [(('Organizations', 'prepared'), 'nsubj:pass'), (('should', 'prepared'), 'aux'), (('be', 'prepared'), 'aux:pass'), (('prepared', 'root'), 'root'), (('to', 'step'), 'mark'), (('step', 'prepared'), 'xcomp'), (('out', 'zones'), 'case'), (('of', 'zones'), 'case'), (('their', 'zones'), 'nmod:poss'), (('comfort', 'zones'), 'compound'), (('zones', 'step'), 'obl'), (('and', 'think'), 'cc'), (('think', 'step'), 'conj'), (('differently', 'think'), 'advmod'), (('.', 'prepared'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Thinking in a data-driven and AI  approach requires a shift in the way we see. 

Tokens are: 
>> ['Thinking', 'in', 'a', 'data-driven', 'and', 'AI', 'approach', 'requires', 'a', 'shift', 'in', 'the', 'way', 'we', 'see', '.'] 

 UPOS tags are: 
>> [('Thinking', 'VERB'), ('in', 'ADP'), ('a', 'DET'), ('data-driven', 'NOUN'), ('and', 'CCONJ'), ('AI', 'PRON'), ('approach', 'NOUN'), ('requires', 'VERB'), ('a', 'DET'), ('shift', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('way', 'NOUN'), ('we', 'PRON'), ('see', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Thinking', 'VBG'), ('in', 'IN'), ('a', 'DT'), ('data-driven', 'NN'), ('and', 'CC'), ('AI', 'PRP$'), ('approach', 'NN'), ('requires', 'VBZ'), ('a', 'DT'), ('shift', 'NN'), ('in', 'IN'), ('the', 'DT'), ('way', 'NN'), ('we', 'PRP'), ('see', 'VBP'), ('.', '.')] 

 Lemmas are: 
>> [('Thinking', 'think'), ('in', 'in'), ('a', 'a'), ('data-driven', 'data-driven'), ('and', 'and'), ('AI', 'ai'), ('approach', 'approach'), ('requires', 'require'), ('a', 'a'), ('shift', 'shift'), ('in', 'in'), ('the', 'the'), ('way', 'way'), ('we', 'we'), ('see', 'see'), ('.', '.')] 

 Dependency tags are: 
>> [(('Thinking', 'requires'), 'csubj'), (('in', 'data-driven'), 'case'), (('a', 'data-driven'), 'det'), (('data-driven', 'Thinking'), 'obl'), (('and', 'approach'), 'cc'), (('AI', 'approach'), 'nmod:poss'), (('approach', 'data-driven'), 'conj'), (('requires', 'root'), 'root'), (('a', 'shift'), 'det'), (('shift', 'requires'), 'obj'), (('in', 'way'), 'case'), (('the', 'way'), 'det'), (('way', 'requires'), 'obl'), (('we', 'see'), 'nsubj'), (('see', 'way'), 'acl:relcl'), (('.', 'requires'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 It takes some  effort to change our ways of thinking. 

Tokens are: 
>> ['It', 'takes', 'some', 'effort', 'to', 'change', 'our', 'ways', 'of', 'thinking', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('takes', 'VERB'), ('some', 'DET'), ('effort', 'NOUN'), ('to', 'PART'), ('change', 'VERB'), ('our', 'PRON'), ('ways', 'NOUN'), ('of', 'SCONJ'), ('thinking', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('takes', 'VBZ'), ('some', 'DT'), ('effort', 'NN'), ('to', 'TO'), ('change', 'VB'), ('our', 'PRP$'), ('ways', 'NNS'), ('of', 'IN'), ('thinking', 'VBG'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('takes', 'take'), ('some', 'some'), ('effort', 'effort'), ('to', 'to'), ('change', 'change'), ('our', 'we'), ('ways', 'way'), ('of', 'of'), ('thinking', 'think'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'takes'), 'nsubj'), (('takes', 'root'), 'root'), (('some', 'effort'), 'det'), (('effort', 'takes'), 'obj'), (('to', 'change'), 'mark'), (('change', 'effort'), 'acl'), (('our', 'ways'), 'nmod:poss'), (('ways', 'change'), 'obj'), (('of', 'thinking'), 'mark'), (('thinking', 'ways'), 'acl'), (('.', 'takes'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 This is where digital  change management plays a role. 

Tokens are: 
>> ['This', 'is', 'where', 'digital', 'change', 'management', 'plays', 'a', 'role', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('is', 'AUX'), ('where', 'SCONJ'), ('digital', 'ADJ'), ('change', 'NOUN'), ('management', 'NOUN'), ('plays', 'VERB'), ('a', 'DET'), ('role', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('is', 'VBZ'), ('where', 'WRB'), ('digital', 'JJ'), ('change', 'NN'), ('management', 'NN'), ('plays', 'VBZ'), ('a', 'DT'), ('role', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('is', 'be'), ('where', 'where'), ('digital', 'digital'), ('change', 'change'), ('management', 'management'), ('plays', 'play'), ('a', 'a'), ('role', 'role'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'where'), 'nsubj'), (('is', 'root'), 'root'), (('where', 'plays'), 'mark'), (('digital', 'management'), 'amod'), (('change', 'management'), 'compound'), (('management', 'plays'), 'nsubj'), (('plays', 'is'), 'ccomp'), (('a', 'role'), 'det'), (('role', 'plays'), 'obj'), (('.', 'where'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 You also need to consider  the buildup of AI capabilities in your organization. 

Tokens are: 
>> ['You', 'also', 'need', 'to', 'consider', 'the', 'buildup', 'of', 'AI', 'capabilities', 'in', 'your', 'organization', '.'] 

 UPOS tags are: 
>> [('You', 'PRON'), ('also', 'ADV'), ('need', 'VERB'), ('to', 'PART'), ('consider', 'VERB'), ('the', 'DET'), ('buildup', 'NOUN'), ('of', 'ADP'), ('AI', 'PRON'), ('capabilities', 'NOUN'), ('in', 'ADP'), ('your', 'PRON'), ('organization', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('You', 'PRP'), ('also', 'RB'), ('need', 'VBP'), ('to', 'TO'), ('consider', 'VB'), ('the', 'DT'), ('buildup', 'NN'), ('of', 'IN'), ('AI', 'PRP$'), ('capabilities', 'NNS'), ('in', 'IN'), ('your', 'PRP$'), ('organization', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('You', 'you'), ('also', 'also'), ('need', 'need'), ('to', 'to'), ('consider', 'consider'), ('the', 'the'), ('buildup', 'buildup'), ('of', 'of'), ('AI', 'ai'), ('capabilities', 'capability'), ('in', 'in'), ('your', 'you'), ('organization', 'organization'), ('.', '.')] 

 Dependency tags are: 
>> [(('You', 'need'), 'nsubj'), (('also', 'need'), 'advmod'), (('need', 'root'), 'root'), (('to', 'consider'), 'mark'), (('consider', 'need'), 'xcomp'), (('the', 'buildup'), 'det'), (('buildup', 'consider'), 'obj'), (('of', 'capabilities'), 'case'), (('AI', 'capabilities'), 'nmod:poss'), (('capabilities', 'buildup'), 'nmod'), (('in', 'organization'), 'case'), (('your', 'organization'), 'nmod:poss'), (('organization', 'capabilities'), 'nmod'), (('.', 'need'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 IBM  offers various forms of training and enablement ranging  from Hackathons, planned learning universities for  upskilling and an AI learning academy. 

Tokens are: 
>> ['IBM', 'offers', 'various', 'forms', 'of', 'training', 'and', 'enablement', 'ranging', 'from', 'Hackathons', ',', 'planned', 'learning', 'universities', 'for', 'upskilling', 'and', 'an', 'AI', 'learning', 'academy', '.'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('offers', 'VERB'), ('various', 'ADJ'), ('forms', 'NOUN'), ('of', 'ADP'), ('training', 'NOUN'), ('and', 'CCONJ'), ('enablement', 'NOUN'), ('ranging', 'VERB'), ('from', 'ADP'), ('Hackathons', 'PROPN'), (',', 'PUNCT'), ('planned', 'VERB'), ('learning', 'VERB'), ('universities', 'NOUN'), ('for', 'ADP'), ('upskilling', 'NOUN'), ('and', 'CCONJ'), ('an', 'DET'), ('AI', 'NOUN'), ('learning', 'NOUN'), ('academy', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('offers', 'VBZ'), ('various', 'JJ'), ('forms', 'NNS'), ('of', 'IN'), ('training', 'NN'), ('and', 'CC'), ('enablement', 'NN'), ('ranging', 'VBG'), ('from', 'IN'), ('Hackathons', 'NNPS'), (',', ','), ('planned', 'VBN'), ('learning', 'VBG'), ('universities', 'NNS'), ('for', 'IN'), ('upskilling', 'NN'), ('and', 'CC'), ('an', 'DT'), ('AI', 'NN'), ('learning', 'NN'), ('academy', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('offers', 'offer'), ('various', 'various'), ('forms', 'form'), ('of', 'of'), ('training', 'training'), ('and', 'and'), ('enablement', 'enablement'), ('ranging', 'range'), ('from', 'from'), ('Hackathons', 'Hackathon'), (',', ','), ('planned', 'plan'), ('learning', 'learn'), ('universities', 'university'), ('for', 'for'), ('upskilling', 'upskilling'), ('and', 'and'), ('an', 'a'), ('AI', 'ai'), ('learning', 'learning'), ('academy', 'academy'), ('.', '.')] 

 Dependency tags are: 
>> [(('IBM', 'offers'), 'nsubj'), (('offers', 'root'), 'root'), (('various', 'forms'), 'amod'), (('forms', 'offers'), 'obj'), (('of', 'training'), 'case'), (('training', 'forms'), 'nmod'), (('and', 'enablement'), 'cc'), (('enablement', 'training'), 'conj'), (('ranging', 'training'), 'acl'), (('from', 'Hackathons'), 'case'), (('Hackathons', 'ranging'), 'obl'), ((',', 'planned'), 'punct'), (('planned', 'Hackathons'), 'acl'), (('learning', 'universities'), 'amod'), (('universities', 'planned'), 'obj'), (('for', 'upskilling'), 'case'), (('upskilling', 'universities'), 'nmod'), (('and', 'academy'), 'cc'), (('an', 'academy'), 'det'), (('AI', 'academy'), 'compound'), (('learning', 'academy'), 'compound'), (('academy', 'upskilling'), 'conj'), (('.', 'offers'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG'), ('Hackathons', 'ORG')]

================================ Paragraph 258 =================================

In the “Transform” phase, IBM collaborates with experts,  data and emerging technologies, using accelerators to  build minimum, viable products into production and realize  business outcomes and customer adoption within weeks. 


------------------- Sentence 1 -------------------

 In the “Transform” phase, IBM collaborates with experts,  data and emerging technologies, using accelerators to  build minimum, viable products into production and realize  business outcomes and customer adoption within weeks. 

Tokens are: 
>> ['In', 'the', '“', 'Transform', '”', 'phase', ',', 'IBM', 'collaborates', 'with', 'experts', ',', 'data', 'and', 'emerging', 'technologies', ',', 'using', 'accelerators', 'to', 'build', 'minimum', ',', 'viable', 'products', 'into', 'production', 'and', 'realize', 'business', 'outcomes', 'and', 'customer', 'adoption', 'within', 'weeks', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('the', 'DET'), ('“', 'PUNCT'), ('Transform', 'NOUN'), ('”', 'PUNCT'), ('phase', 'NOUN'), (',', 'PUNCT'), ('IBM', 'PROPN'), ('collaborates', 'VERB'), ('with', 'ADP'), ('experts', 'NOUN'), (',', 'PUNCT'), ('data', 'NOUN'), ('and', 'CCONJ'), ('emerging', 'VERB'), ('technologies', 'NOUN'), (',', 'PUNCT'), ('using', 'VERB'), ('accelerators', 'NOUN'), ('to', 'PART'), ('build', 'VERB'), ('minimum', 'ADJ'), (',', 'PUNCT'), ('viable', 'ADJ'), ('products', 'NOUN'), ('into', 'ADP'), ('production', 'NOUN'), ('and', 'CCONJ'), ('realize', 'VERB'), ('business', 'NOUN'), ('outcomes', 'NOUN'), ('and', 'CCONJ'), ('customer', 'NOUN'), ('adoption', 'NOUN'), ('within', 'ADP'), ('weeks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('the', 'DT'), ('“', '``'), ('Transform', 'NN'), ('”', "''"), ('phase', 'NN'), (',', ','), ('IBM', 'NNP'), ('collaborates', 'VBZ'), ('with', 'IN'), ('experts', 'NNS'), (',', ','), ('data', 'NNS'), ('and', 'CC'), ('emerging', 'VBG'), ('technologies', 'NNS'), (',', ','), ('using', 'VBG'), ('accelerators', 'NNS'), ('to', 'TO'), ('build', 'VB'), ('minimum', 'JJ'), (',', ','), ('viable', 'JJ'), ('products', 'NNS'), ('into', 'IN'), ('production', 'NN'), ('and', 'CC'), ('realize', 'VB'), ('business', 'NN'), ('outcomes', 'NNS'), ('and', 'CC'), ('customer', 'NN'), ('adoption', 'NN'), ('within', 'IN'), ('weeks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('the', 'the'), ('“', "''"), ('Transform', 'transform'), ('”', "''"), ('phase', 'phase'), (',', ','), ('IBM', 'IBM'), ('collaborates', 'collaborate'), ('with', 'with'), ('experts', 'expert'), (',', ','), ('data', 'datum'), ('and', 'and'), ('emerging', 'emerge'), ('technologies', 'technology'), (',', ','), ('using', 'use'), ('accelerators', 'accelerator'), ('to', 'to'), ('build', 'build'), ('minimum', 'minimum'), (',', ','), ('viable', 'viable'), ('products', 'product'), ('into', 'into'), ('production', 'production'), ('and', 'and'), ('realize', 'realize'), ('business', 'business'), ('outcomes', 'outcome'), ('and', 'and'), ('customer', 'customer'), ('adoption', 'adoption'), ('within', 'within'), ('weeks', 'week'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'phase'), 'case'), (('the', 'phase'), 'det'), (('“', 'Transform'), 'punct'), (('Transform', 'phase'), 'compound'), (('”', 'Transform'), 'punct'), (('phase', 'collaborates'), 'obl'), ((',', 'collaborates'), 'punct'), (('IBM', 'collaborates'), 'nsubj'), (('collaborates', 'root'), 'root'), (('with', 'experts'), 'case'), (('experts', 'collaborates'), 'obl'), ((',', 'data'), 'punct'), (('data', 'experts'), 'conj'), (('and', 'emerging'), 'cc'), (('emerging', 'data'), 'conj'), (('technologies', 'experts'), 'conj'), ((',', 'using'), 'punct'), (('using', 'collaborates'), 'advcl'), (('accelerators', 'using'), 'obj'), (('to', 'build'), 'mark'), (('build', 'using'), 'xcomp'), (('minimum', 'products'), 'amod'), ((',', 'products'), 'punct'), (('viable', 'products'), 'amod'), (('products', 'build'), 'obj'), (('into', 'production'), 'case'), (('production', 'products'), 'nmod'), (('and', 'realize'), 'cc'), (('realize', 'build'), 'conj'), (('business', 'outcomes'), 'compound'), (('outcomes', 'realize'), 'obj'), (('and', 'adoption'), 'cc'), (('customer', 'adoption'), 'compound'), (('adoption', 'outcomes'), 'conj'), (('within', 'weeks'), 'case'), (('weeks', 'realize'), 'obl'), (('.', 'collaborates'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG'), ('weeks', 'DATE')]

================================ Paragraph 259 =================================

The third and last phase is the factory “Thrive” phase, which is  designed to rapidly scale solutions while establishing methods  and new ways of working across your enterprise that can last  a lifetime. The thrive phase works as a managed service to  embed and maintain data and AI solutions at scale. Using a  factory-like approach, you put into production something you  want to be consistent in design and quality, and that doesn’t  require innovation in execution. IBM focuses on successful  delivery of projects aligned to the roadmap and AI platform  technology and helps ensure a clearly defined governance.  


------------------- Sentence 1 -------------------

 The third and last phase is the factory “Thrive” phase, which is  designed to rapidly scale solutions while establishing methods  and new ways of working across your enterprise that can last  a lifetime. 

Tokens are: 
>> ['The', 'third', 'and', 'last', 'phase', 'is', 'the', 'factory', '“', 'Thrive', '”', 'phase', ',', 'which', 'is', 'designed', 'to', 'rapidly', 'scale', 'solutions', 'while', 'establishing', 'methods', 'and', 'new', 'ways', 'of', 'working', 'across', 'your', 'enterprise', 'that', 'can', 'last', 'a', 'lifetime', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('third', 'ADJ'), ('and', 'CCONJ'), ('last', 'ADJ'), ('phase', 'NOUN'), ('is', 'AUX'), ('the', 'DET'), ('factory', 'NOUN'), ('“', 'PUNCT'), ('Thrive', 'VERB'), ('”', 'PUNCT'), ('phase', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('is', 'AUX'), ('designed', 'VERB'), ('to', 'PART'), ('rapidly', 'ADV'), ('scale', 'VERB'), ('solutions', 'NOUN'), ('while', 'SCONJ'), ('establishing', 'VERB'), ('methods', 'NOUN'), ('and', 'CCONJ'), ('new', 'ADJ'), ('ways', 'NOUN'), ('of', 'SCONJ'), ('working', 'VERB'), ('across', 'ADP'), ('your', 'PRON'), ('enterprise', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('last', 'VERB'), ('a', 'DET'), ('lifetime', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('third', 'JJ'), ('and', 'CC'), ('last', 'JJ'), ('phase', 'NN'), ('is', 'VBZ'), ('the', 'DT'), ('factory', 'NN'), ('“', '``'), ('Thrive', 'VB'), ('”', "''"), ('phase', 'NN'), (',', ','), ('which', 'WDT'), ('is', 'VBZ'), ('designed', 'VBN'), ('to', 'TO'), ('rapidly', 'RB'), ('scale', 'VB'), ('solutions', 'NNS'), ('while', 'IN'), ('establishing', 'VBG'), ('methods', 'NNS'), ('and', 'CC'), ('new', 'JJ'), ('ways', 'NNS'), ('of', 'IN'), ('working', 'VBG'), ('across', 'IN'), ('your', 'PRP$'), ('enterprise', 'NN'), ('that', 'WDT'), ('can', 'MD'), ('last', 'VB'), ('a', 'DT'), ('lifetime', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('third', 'third'), ('and', 'and'), ('last', 'last'), ('phase', 'phase'), ('is', 'be'), ('the', 'the'), ('factory', 'factory'), ('“', "''"), ('Thrive', 'thrive'), ('”', "''"), ('phase', 'phase'), (',', ','), ('which', 'which'), ('is', 'be'), ('designed', 'design'), ('to', 'to'), ('rapidly', 'rapidly'), ('scale', 'scale'), ('solutions', 'solution'), ('while', 'while'), ('establishing', 'establish'), ('methods', 'method'), ('and', 'and'), ('new', 'new'), ('ways', 'way'), ('of', 'of'), ('working', 'work'), ('across', 'across'), ('your', 'you'), ('enterprise', 'enterprise'), ('that', 'that'), ('can', 'can'), ('last', 'last'), ('a', 'a'), ('lifetime', 'lifetime'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'phase'), 'det'), (('third', 'phase'), 'amod'), (('and', 'last'), 'cc'), (('last', 'third'), 'conj'), (('phase', 'factory'), 'nsubj'), (('is', 'factory'), 'cop'), (('the', 'phase'), 'det'), (('factory', 'root'), 'root'), (('“', 'Thrive'), 'punct'), (('Thrive', 'phase'), 'amod'), (('”', 'Thrive'), 'punct'), (('phase', 'factory'), 'nmod'), ((',', 'phase'), 'punct'), (('which', 'designed'), 'nsubj:pass'), (('is', 'designed'), 'aux:pass'), (('designed', 'phase'), 'acl:relcl'), (('to', 'scale'), 'mark'), (('rapidly', 'scale'), 'advmod'), (('scale', 'designed'), 'xcomp'), (('solutions', 'scale'), 'obj'), (('while', 'establishing'), 'mark'), (('establishing', 'scale'), 'advcl'), (('methods', 'establishing'), 'obj'), (('and', 'ways'), 'cc'), (('new', 'ways'), 'amod'), (('ways', 'methods'), 'conj'), (('of', 'working'), 'mark'), (('working', 'ways'), 'acl'), (('across', 'enterprise'), 'case'), (('your', 'enterprise'), 'nmod:poss'), (('enterprise', 'working'), 'obl'), (('that', 'last'), 'nsubj'), (('can', 'last'), 'aux'), (('last', 'enterprise'), 'acl:relcl'), (('a', 'lifetime'), 'det'), (('lifetime', 'last'), 'obj'), (('.', 'factory'), 'punct')]

 Named Entites are: 
>> [('third', 'ORDINAL'), ('last', 'ORDINAL')]

------------------- Sentence 2 -------------------

 The thrive phase works as a managed service to  embed and maintain data and AI solutions at scale. 

Tokens are: 
>> ['The', 'thrive', 'phase', 'works', 'as', 'a', 'managed', 'service', 'to', 'embed', 'and', 'maintain', 'data', 'and', 'AI', 'solutions', 'at', 'scale', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('thrive', 'NOUN'), ('phase', 'NOUN'), ('works', 'VERB'), ('as', 'ADP'), ('a', 'DET'), ('managed', 'VERB'), ('service', 'NOUN'), ('to', 'PART'), ('embed', 'VERB'), ('and', 'CCONJ'), ('maintain', 'VERB'), ('data', 'NOUN'), ('and', 'CCONJ'), ('AI', 'VERB'), ('solutions', 'NOUN'), ('at', 'ADP'), ('scale', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('thrive', 'NN'), ('phase', 'NN'), ('works', 'VBZ'), ('as', 'IN'), ('a', 'DT'), ('managed', 'VBN'), ('service', 'NN'), ('to', 'TO'), ('embed', 'VB'), ('and', 'CC'), ('maintain', 'VB'), ('data', 'NNS'), ('and', 'CC'), ('AI', 'VB'), ('solutions', 'NNS'), ('at', 'IN'), ('scale', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('thrive', 'thrive'), ('phase', 'phase'), ('works', 'work'), ('as', 'as'), ('a', 'a'), ('managed', 'manage'), ('service', 'service'), ('to', 'to'), ('embed', 'emb'), ('and', 'and'), ('maintain', 'maintain'), ('data', 'datum'), ('and', 'and'), ('AI', 'be'), ('solutions', 'solution'), ('at', 'at'), ('scale', 'scale'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'phase'), 'det'), (('thrive', 'phase'), 'compound'), (('phase', 'works'), 'nsubj'), (('works', 'root'), 'root'), (('as', 'service'), 'case'), (('a', 'service'), 'det'), (('managed', 'service'), 'amod'), (('service', 'works'), 'obl'), (('to', 'embed'), 'mark'), (('embed', 'service'), 'acl'), (('and', 'maintain'), 'cc'), (('maintain', 'embed'), 'conj'), (('data', 'embed'), 'obj'), (('and', 'AI'), 'cc'), (('AI', 'embed'), 'conj'), (('solutions', 'AI'), 'nsubj'), (('at', 'scale'), 'case'), (('scale', 'solutions'), 'nmod'), (('.', 'works'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Using a  factory-like approach, you put into production something you  want to be consistent in design and quality, and that doesn’t  require innovation in execution. 

Tokens are: 
>> ['Using', 'a', 'factory', '-', 'like', 'approach', ',', 'you', 'put', 'into', 'production', 'something', 'you', 'want', 'to', 'be', 'consistent', 'in', 'design', 'and', 'quality', ',', 'and', 'that', 'does', 'n’t', 'require', 'innovation', 'in', 'execution', '.'] 

 UPOS tags are: 
>> [('Using', 'VERB'), ('a', 'DET'), ('factory', 'NOUN'), ('-', 'PUNCT'), ('like', 'ADP'), ('approach', 'NOUN'), (',', 'PUNCT'), ('you', 'PRON'), ('put', 'VERB'), ('into', 'ADP'), ('production', 'NOUN'), ('something', 'NOUN'), ('you', 'PRON'), ('want', 'VERB'), ('to', 'PART'), ('be', 'AUX'), ('consistent', 'ADJ'), ('in', 'ADP'), ('design', 'NOUN'), ('and', 'CCONJ'), ('quality', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('that', 'PRON'), ('does', 'AUX'), ('n’t', 'PART'), ('require', 'VERB'), ('innovation', 'NOUN'), ('in', 'ADP'), ('execution', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Using', 'VBG'), ('a', 'DT'), ('factory', 'NN'), ('-', 'HYPH'), ('like', 'IN'), ('approach', 'NN'), (',', ','), ('you', 'PRP'), ('put', 'VBP'), ('into', 'IN'), ('production', 'NN'), ('something', 'NN'), ('you', 'PRP'), ('want', 'VBP'), ('to', 'TO'), ('be', 'VB'), ('consistent', 'JJ'), ('in', 'IN'), ('design', 'NN'), ('and', 'CC'), ('quality', 'NN'), (',', ','), ('and', 'CC'), ('that', 'DT'), ('does', 'VBZ'), ('n’t', 'RB'), ('require', 'VB'), ('innovation', 'NN'), ('in', 'IN'), ('execution', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Using', 'use'), ('a', 'a'), ('factory', 'factory'), ('-', '-'), ('like', 'like'), ('approach', 'approach'), (',', ','), ('you', 'you'), ('put', 'put'), ('into', 'into'), ('production', 'production'), ('something', 'something'), ('you', 'you'), ('want', 'want'), ('to', 'to'), ('be', 'be'), ('consistent', 'consistent'), ('in', 'in'), ('design', 'design'), ('and', 'and'), ('quality', 'quality'), (',', ','), ('and', 'and'), ('that', 'that'), ('does', 'do'), ('n’t', 'not'), ('require', 'require'), ('innovation', 'innovation'), ('in', 'in'), ('execution', 'execution'), ('.', '.')] 

 Dependency tags are: 
>> [(('Using', 'put'), 'advcl'), (('a', 'approach'), 'det'), (('factory', 'like'), 'compound'), (('-', 'like'), 'punct'), (('like', 'approach'), 'compound'), (('approach', 'Using'), 'obj'), ((',', 'Using'), 'punct'), (('you', 'put'), 'nsubj'), (('put', 'root'), 'root'), (('into', 'production'), 'case'), (('production', 'put'), 'obl'), (('something', 'put'), 'obj'), (('you', 'want'), 'nsubj'), (('want', 'something'), 'acl:relcl'), (('to', 'consistent'), 'mark'), (('be', 'consistent'), 'cop'), (('consistent', 'want'), 'xcomp'), (('in', 'design'), 'case'), (('design', 'consistent'), 'obl'), (('and', 'quality'), 'cc'), (('quality', 'design'), 'conj'), ((',', 'require'), 'punct'), (('and', 'require'), 'cc'), (('that', 'require'), 'nsubj'), (('does', 'require'), 'aux'), (('n’t', 'require'), 'advmod'), (('require', 'put'), 'conj'), (('innovation', 'require'), 'obj'), (('in', 'execution'), 'case'), (('execution', 'require'), 'obl'), (('.', 'put'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 IBM focuses on successful  delivery of projects aligned to the roadmap and AI platform  technology and helps ensure a clearly defined governance. 

Tokens are: 
>> ['IBM', 'focuses', 'on', 'successful', 'delivery', 'of', 'projects', 'aligned', 'to', 'the', 'roadmap', 'and', 'AI', 'platform', 'technology', 'and', 'helps', 'ensure', 'a', 'clearly', 'defined', 'governance', '.'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('focuses', 'VERB'), ('on', 'ADP'), ('successful', 'ADJ'), ('delivery', 'NOUN'), ('of', 'ADP'), ('projects', 'NOUN'), ('aligned', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('roadmap', 'NOUN'), ('and', 'CCONJ'), ('AI', 'AUX'), ('platform', 'NOUN'), ('technology', 'NOUN'), ('and', 'CCONJ'), ('helps', 'VERB'), ('ensure', 'VERB'), ('a', 'DET'), ('clearly', 'ADV'), ('defined', 'VERB'), ('governance', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('focuses', 'VBZ'), ('on', 'IN'), ('successful', 'JJ'), ('delivery', 'NN'), ('of', 'IN'), ('projects', 'NNS'), ('aligned', 'VBN'), ('to', 'IN'), ('the', 'DT'), ('roadmap', 'NN'), ('and', 'CC'), ('AI', 'VBZ'), ('platform', 'NN'), ('technology', 'NN'), ('and', 'CC'), ('helps', 'VBZ'), ('ensure', 'VB'), ('a', 'DT'), ('clearly', 'RB'), ('defined', 'VBN'), ('governance', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('focuses', 'focus'), ('on', 'on'), ('successful', 'successful'), ('delivery', 'delivery'), ('of', 'of'), ('projects', 'project'), ('aligned', 'align'), ('to', 'to'), ('the', 'the'), ('roadmap', 'roadmap'), ('and', 'and'), ('AI', 'be'), ('platform', 'platform'), ('technology', 'technology'), ('and', 'and'), ('helps', 'help'), ('ensure', 'ensure'), ('a', 'a'), ('clearly', 'clearly'), ('defined', 'define'), ('governance', 'governance'), ('.', '.')] 

 Dependency tags are: 
>> [(('IBM', 'focuses'), 'nsubj'), (('focuses', 'root'), 'root'), (('on', 'delivery'), 'case'), (('successful', 'delivery'), 'amod'), (('delivery', 'focuses'), 'obl'), (('of', 'projects'), 'case'), (('projects', 'delivery'), 'nmod'), (('aligned', 'projects'), 'acl'), (('to', 'roadmap'), 'case'), (('the', 'roadmap'), 'det'), (('roadmap', 'aligned'), 'obl'), (('and', 'technology'), 'cc'), (('AI', 'technology'), 'cop'), (('platform', 'technology'), 'compound'), (('technology', 'focuses'), 'conj'), (('and', 'helps'), 'cc'), (('helps', 'focuses'), 'conj'), (('ensure', 'helps'), 'xcomp'), (('a', 'governance'), 'det'), (('clearly', 'defined'), 'advmod'), (('defined', 'governance'), 'amod'), (('governance', 'ensure'), 'obj'), (('.', 'focuses'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG')]

================================ Paragraph 260 =================================

Using this method, IBM has been successful many times  and wants to keep improving the method with each project  delivered. IBM is one of the frontrunners of AI and AI  implementation, and thrives on applying its knowledge and  experience to help improve the world.


------------------- Sentence 1 -------------------

 Using this method, IBM has been successful many times  and wants to keep improving the method with each project  delivered. 

Tokens are: 
>> ['Using', 'this', 'method', ',', 'IBM', 'has', 'been', 'successful', 'many', 'times', 'and', 'wants', 'to', 'keep', 'improving', 'the', 'method', 'with', 'each', 'project', 'delivered', '.'] 

 UPOS tags are: 
>> [('Using', 'VERB'), ('this', 'DET'), ('method', 'NOUN'), (',', 'PUNCT'), ('IBM', 'PROPN'), ('has', 'AUX'), ('been', 'AUX'), ('successful', 'ADJ'), ('many', 'ADJ'), ('times', 'NOUN'), ('and', 'CCONJ'), ('wants', 'VERB'), ('to', 'PART'), ('keep', 'VERB'), ('improving', 'VERB'), ('the', 'DET'), ('method', 'NOUN'), ('with', 'ADP'), ('each', 'DET'), ('project', 'NOUN'), ('delivered', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Using', 'VBG'), ('this', 'DT'), ('method', 'NN'), (',', ','), ('IBM', 'NNP'), ('has', 'VBZ'), ('been', 'VBN'), ('successful', 'JJ'), ('many', 'JJ'), ('times', 'NNS'), ('and', 'CC'), ('wants', 'VBZ'), ('to', 'TO'), ('keep', 'VB'), ('improving', 'VBG'), ('the', 'DT'), ('method', 'NN'), ('with', 'IN'), ('each', 'DT'), ('project', 'NN'), ('delivered', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('Using', 'use'), ('this', 'this'), ('method', 'method'), (',', ','), ('IBM', 'IBM'), ('has', 'have'), ('been', 'be'), ('successful', 'successful'), ('many', 'many'), ('times', 'time'), ('and', 'and'), ('wants', 'want'), ('to', 'to'), ('keep', 'keep'), ('improving', 'improve'), ('the', 'the'), ('method', 'method'), ('with', 'with'), ('each', 'each'), ('project', 'project'), ('delivered', 'deliver'), ('.', '.')] 

 Dependency tags are: 
>> [(('Using', 'successful'), 'advcl'), (('this', 'method'), 'det'), (('method', 'Using'), 'obj'), ((',', 'successful'), 'punct'), (('IBM', 'successful'), 'nsubj'), (('has', 'successful'), 'aux'), (('been', 'successful'), 'cop'), (('successful', 'root'), 'root'), (('many', 'times'), 'amod'), (('times', 'successful'), 'obl:tmod'), (('and', 'wants'), 'cc'), (('wants', 'successful'), 'conj'), (('to', 'keep'), 'mark'), (('keep', 'wants'), 'xcomp'), (('improving', 'keep'), 'xcomp'), (('the', 'method'), 'det'), (('method', 'improving'), 'obj'), (('with', 'project'), 'case'), (('each', 'project'), 'det'), (('project', 'method'), 'nmod'), (('delivered', 'project'), 'acl'), (('.', 'successful'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG')]

------------------- Sentence 2 -------------------

 IBM is one of the frontrunners of AI and AI  implementation, and thrives on applying its knowledge and  experience to help improve the world. 

Tokens are: 
>> ['IBM', 'is', 'one', 'of', 'the', 'frontrunners', 'of', 'AI', 'and', 'AI', 'implementation', ',', 'and', 'thrives', 'on', 'applying', 'its', 'knowledge', 'and', 'experience', 'to', 'help', 'improve', 'the', 'world', '.'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('is', 'AUX'), ('one', 'NUM'), ('of', 'ADP'), ('the', 'DET'), ('frontrunners', 'NOUN'), ('of', 'ADP'), ('AI', 'NOUN'), ('and', 'CCONJ'), ('AI', 'AUX'), ('implementation', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('thrives', 'VERB'), ('on', 'SCONJ'), ('applying', 'VERB'), ('its', 'PRON'), ('knowledge', 'NOUN'), ('and', 'CCONJ'), ('experience', 'NOUN'), ('to', 'PART'), ('help', 'VERB'), ('improve', 'VERB'), ('the', 'DET'), ('world', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('is', 'VBZ'), ('one', 'CD'), ('of', 'IN'), ('the', 'DT'), ('frontrunners', 'NNS'), ('of', 'IN'), ('AI', 'NN'), ('and', 'CC'), ('AI', 'VBZ'), ('implementation', 'NN'), (',', ','), ('and', 'CC'), ('thrives', 'VBZ'), ('on', 'IN'), ('applying', 'VBG'), ('its', 'PRP$'), ('knowledge', 'NN'), ('and', 'CC'), ('experience', 'NN'), ('to', 'TO'), ('help', 'VB'), ('improve', 'VB'), ('the', 'DT'), ('world', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('is', 'be'), ('one', 'one'), ('of', 'of'), ('the', 'the'), ('frontrunners', 'frontrunner'), ('of', 'of'), ('AI', 'ai'), ('and', 'and'), ('AI', 'be'), ('implementation', 'implementation'), (',', ','), ('and', 'and'), ('thrives', 'thrive'), ('on', 'on'), ('applying', 'apply'), ('its', 'its'), ('knowledge', 'knowledge'), ('and', 'and'), ('experience', 'experience'), ('to', 'to'), ('help', 'help'), ('improve', 'improve'), ('the', 'the'), ('world', 'world'), ('.', '.')] 

 Dependency tags are: 
>> [(('IBM', 'one'), 'nsubj'), (('is', 'one'), 'cop'), (('one', 'root'), 'root'), (('of', 'frontrunners'), 'case'), (('the', 'frontrunners'), 'det'), (('frontrunners', 'one'), 'nmod'), (('of', 'AI'), 'case'), (('AI', 'frontrunners'), 'nmod'), (('and', 'implementation'), 'cc'), (('AI', 'implementation'), 'cop'), (('implementation', 'one'), 'conj'), ((',', 'thrives'), 'punct'), (('and', 'thrives'), 'cc'), (('thrives', 'one'), 'conj'), (('on', 'applying'), 'mark'), (('applying', 'thrives'), 'advcl'), (('its', 'knowledge'), 'nmod:poss'), (('knowledge', 'applying'), 'obj'), (('and', 'experience'), 'cc'), (('experience', 'knowledge'), 'conj'), (('to', 'help'), 'mark'), (('help', 'applying'), 'advcl'), (('improve', 'help'), 'xcomp'), (('the', 'world'), 'det'), (('world', 'improve'), 'obj'), (('.', 'one'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG'), ('AI', 'ORG'), ('AI', 'LAW')]

================================ Paragraph 261 =================================

18     Beyond the hype: A guide to understanding and successfully implementing artificial intelligence within your business 


------------------- Sentence 1 -------------------

 18     Beyond the hype: A guide to understanding and successfully implementing artificial intelligence within your business 

Tokens are: 
>> ['18', 'Beyond', 'the', 'hype', ':', 'A', 'guide', 'to', 'understanding', 'and', 'successfully', 'implementing', 'artificial', 'intelligence', 'within', 'your', 'business'] 

 UPOS tags are: 
>> [('18', 'NUM'), ('Beyond', 'ADP'), ('the', 'DET'), ('hype', 'NOUN'), (':', 'PUNCT'), ('A', 'DET'), ('guide', 'NOUN'), ('to', 'ADP'), ('understanding', 'VERB'), ('and', 'CCONJ'), ('successfully', 'ADV'), ('implementing', 'VERB'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('within', 'ADP'), ('your', 'PRON'), ('business', 'NOUN')] 

 XPOS tags are: 
>> [('18', 'LS'), ('Beyond', 'IN'), ('the', 'DT'), ('hype', 'NN'), (':', ':'), ('A', 'DT'), ('guide', 'NN'), ('to', 'IN'), ('understanding', 'VBG'), ('and', 'CC'), ('successfully', 'RB'), ('implementing', 'VBG'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('within', 'IN'), ('your', 'PRP$'), ('business', 'NN')] 

 Lemmas are: 
>> [('18', '18'), ('Beyond', 'beyond'), ('the', 'the'), ('hype', 'hype'), (':', ':'), ('A', 'a'), ('guide', 'guide'), ('to', 'to'), ('understanding', 'understand'), ('and', 'and'), ('successfully', 'successfully'), ('implementing', 'implement'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('within', 'within'), ('your', 'you'), ('business', 'business')] 

 Dependency tags are: 
>> [(('18', 'hype'), 'nummod'), (('Beyond', 'hype'), 'case'), (('the', 'hype'), 'det'), (('hype', 'root'), 'root'), ((':', 'guide'), 'punct'), (('A', 'guide'), 'det'), (('guide', 'hype'), 'appos'), (('to', 'understanding'), 'mark'), (('understanding', 'guide'), 'acl'), (('and', 'implementing'), 'cc'), (('successfully', 'implementing'), 'advmod'), (('implementing', 'understanding'), 'conj'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'implementing'), 'obj'), (('within', 'business'), 'case'), (('your', 'business'), 'nmod:poss'), (('business', 'implementing'), 'obl')]

 Named Entites are: 
>> []

================================ Paragraph 262 =================================

About the authors Jorn Jansen Schoonhoven, a data scientist at IBM with two  years of data science experience is part of the Advanced  Analytics branch of the IBM Amsterdam office, and part of  the IBM Global Institute of Business Value team. He holds  a master’s degree in business analytics and big data, and a  master’s degree in management from IE Business School.  He is the main author of this paper and can be reached at  Jorn.Jansen.Schoonhoven@ibm.com or +316 22403033. 


------------------- Sentence 1 -------------------

 About the authors Jorn Jansen Schoonhoven, a data scientist at IBM with two  years of data science experience is part of the Advanced  Analytics branch of the IBM Amsterdam office, and part of  the IBM Global Institute of Business Value team. 

Tokens are: 
>> ['About', 'the', 'authors', 'Jorn', 'Jansen', 'Schoonhoven', ',', 'a', 'data', 'scientist', 'at', 'IBM', 'with', 'two', 'years', 'of', 'data', 'science', 'experience', 'is', 'part', 'of', 'the', 'Advanced', 'Analytics', 'branch', 'of', 'the', 'IBM', 'Amsterdam', 'office', ',', 'and', 'part', 'of', 'the', 'IBM', 'Global', 'Institute', 'of', 'Business', 'Value', 'team', '.'] 

 UPOS tags are: 
>> [('About', 'ADP'), ('the', 'DET'), ('authors', 'NOUN'), ('Jorn', 'PROPN'), ('Jansen', 'PROPN'), ('Schoonhoven', 'PROPN'), (',', 'PUNCT'), ('a', 'DET'), ('data', 'NOUN'), ('scientist', 'NOUN'), ('at', 'ADP'), ('IBM', 'PROPN'), ('with', 'ADP'), ('two', 'NUM'), ('years', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), ('science', 'NOUN'), ('experience', 'NOUN'), ('is', 'AUX'), ('part', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('Advanced', 'ADJ'), ('Analytics', 'PROPN'), ('branch', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('IBM', 'PROPN'), ('Amsterdam', 'PROPN'), ('office', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('part', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('IBM', 'PROPN'), ('Global', 'ADJ'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Business', 'PROPN'), ('Value', 'PROPN'), ('team', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('About', 'IN'), ('the', 'DT'), ('authors', 'NNS'), ('Jorn', 'NNP'), ('Jansen', 'NNP'), ('Schoonhoven', 'NNP'), (',', ','), ('a', 'DT'), ('data', 'NN'), ('scientist', 'NN'), ('at', 'IN'), ('IBM', 'NNP'), ('with', 'IN'), ('two', 'CD'), ('years', 'NNS'), ('of', 'IN'), ('data', 'NN'), ('science', 'NN'), ('experience', 'NN'), ('is', 'VBZ'), ('part', 'NN'), ('of', 'IN'), ('the', 'DT'), ('Advanced', 'NNP'), ('Analytics', 'NNPS'), ('branch', 'NN'), ('of', 'IN'), ('the', 'DT'), ('IBM', 'NNP'), ('Amsterdam', 'NNP'), ('office', 'NN'), (',', ','), ('and', 'CC'), ('part', 'NN'), ('of', 'IN'), ('the', 'DT'), ('IBM', 'NNP'), ('Global', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Business', 'NNP'), ('Value', 'NNP'), ('team', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('About', 'about'), ('the', 'the'), ('authors', 'author'), ('Jorn', 'Jorn'), ('Jansen', 'Jansen'), ('Schoonhoven', 'Schoonhoven'), (',', ','), ('a', 'a'), ('data', 'datum'), ('scientist', 'scientist'), ('at', 'at'), ('IBM', 'IBM'), ('with', 'with'), ('two', 'two'), ('years', 'year'), ('of', 'of'), ('data', 'datum'), ('science', 'science'), ('experience', 'experience'), ('is', 'be'), ('part', 'part'), ('of', 'of'), ('the', 'the'), ('Advanced', 'Advanced'), ('Analytics', 'Analytics'), ('branch', 'branch'), ('of', 'of'), ('the', 'the'), ('IBM', 'IBM'), ('Amsterdam', 'Amsterdam'), ('office', 'office'), (',', ','), ('and', 'and'), ('part', 'part'), ('of', 'of'), ('the', 'the'), ('IBM', 'IBM'), ('Global', 'global'), ('Institute', 'Institute'), ('of', 'of'), ('Business', 'Business'), ('Value', 'value'), ('team', 'team'), ('.', '.')] 

 Dependency tags are: 
>> [(('About', 'authors'), 'case'), (('the', 'authors'), 'det'), (('authors', 'part'), 'obl'), (('Jorn', 'part'), 'nsubj'), (('Jansen', 'Jorn'), 'flat'), (('Schoonhoven', 'Jorn'), 'flat'), ((',', 'scientist'), 'punct'), (('a', 'scientist'), 'det'), (('data', 'scientist'), 'compound'), (('scientist', 'Jorn'), 'appos'), (('at', 'IBM'), 'case'), (('IBM', 'scientist'), 'nmod'), (('with', 'years'), 'case'), (('two', 'years'), 'nummod'), (('years', 'scientist'), 'nmod'), (('of', 'experience'), 'case'), (('data', 'science'), 'compound'), (('science', 'experience'), 'compound'), (('experience', 'years'), 'nmod'), (('is', 'part'), 'cop'), (('part', 'root'), 'root'), (('of', 'branch'), 'case'), (('the', 'branch'), 'det'), (('Advanced', 'Analytics'), 'amod'), (('Analytics', 'branch'), 'compound'), (('branch', 'part'), 'nmod'), (('of', 'office'), 'case'), (('the', 'office'), 'det'), (('IBM', 'office'), 'compound'), (('Amsterdam', 'office'), 'compound'), (('office', 'branch'), 'nmod'), ((',', 'part'), 'punct'), (('and', 'part'), 'cc'), (('part', 'part'), 'conj'), (('of', 'Institute'), 'case'), (('the', 'Institute'), 'det'), (('IBM', 'Institute'), 'compound'), (('Global', 'Institute'), 'amod'), (('Institute', 'part'), 'nmod'), (('of', 'team'), 'case'), (('Business', 'team'), 'compound'), (('Value', 'team'), 'compound'), (('team', 'Institute'), 'nmod'), (('.', 'part'), 'punct')]

 Named Entites are: 
>> [('Jorn Jansen Schoonhoven', 'PERSON'), ('IBM', 'ORG'), ('two  years', 'DATE'), ('Advanced  Analytics', 'ORG'), ('IBM', 'ORG'), ('Amsterdam', 'GPE'), ('the IBM Global Institute of Business Value', 'ORG')]

------------------- Sentence 2 -------------------

 He holds  a master’s degree in business analytics and big data, and a  master’s degree in management from IE Business School. 

Tokens are: 
>> ['He', 'holds', 'a', 'master', '’s', 'degree', 'in', 'business', 'analytics', 'and', 'big', 'data', ',', 'and', 'a', 'master', '’s', 'degree', 'in', 'management', 'from', 'IE', 'Business', 'School', '.'] 

 UPOS tags are: 
>> [('He', 'PRON'), ('holds', 'VERB'), ('a', 'DET'), ('master', 'NOUN'), ('’s', 'PART'), ('degree', 'NOUN'), ('in', 'ADP'), ('business', 'NOUN'), ('analytics', 'NOUN'), ('and', 'CCONJ'), ('big', 'ADJ'), ('data', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('a', 'DET'), ('master', 'NOUN'), ('’s', 'PART'), ('degree', 'NOUN'), ('in', 'ADP'), ('management', 'NOUN'), ('from', 'ADP'), ('IE', 'PROPN'), ('Business', 'PROPN'), ('School', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('He', 'PRP'), ('holds', 'VBZ'), ('a', 'DT'), ('master', 'NN'), ('’s', 'POS'), ('degree', 'NN'), ('in', 'IN'), ('business', 'NN'), ('analytics', 'NNS'), ('and', 'CC'), ('big', 'JJ'), ('data', 'NNS'), (',', ','), ('and', 'CC'), ('a', 'DT'), ('master', 'NN'), ('’s', 'POS'), ('degree', 'NN'), ('in', 'IN'), ('management', 'NN'), ('from', 'IN'), ('IE', 'NNP'), ('Business', 'NNP'), ('School', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('He', 'he'), ('holds', 'hold'), ('a', 'a'), ('master', 'master'), ('’s', "'s"), ('degree', 'degree'), ('in', 'in'), ('business', 'business'), ('analytics', 'analytic'), ('and', 'and'), ('big', 'big'), ('data', 'datum'), (',', ','), ('and', 'and'), ('a', 'a'), ('master', 'master'), ('’s', "'s"), ('degree', 'degree'), ('in', 'in'), ('management', 'management'), ('from', 'from'), ('IE', 'Ie'), ('Business', 'Business'), ('School', 'School'), ('.', '.')] 

 Dependency tags are: 
>> [(('He', 'holds'), 'nsubj'), (('holds', 'root'), 'root'), (('a', 'master'), 'det'), (('master', 'degree'), 'nmod:poss'), (('’s', 'master'), 'case'), (('degree', 'holds'), 'obj'), (('in', 'analytics'), 'case'), (('business', 'analytics'), 'compound'), (('analytics', 'degree'), 'nmod'), (('and', 'data'), 'cc'), (('big', 'data'), 'amod'), (('data', 'analytics'), 'conj'), ((',', 'degree'), 'punct'), (('and', 'degree'), 'cc'), (('a', 'master'), 'det'), (('master', 'degree'), 'nmod:poss'), (('’s', 'master'), 'case'), (('degree', 'analytics'), 'conj'), (('in', 'management'), 'case'), (('management', 'degree'), 'nmod'), (('from', 'School'), 'case'), (('IE', 'School'), 'compound'), (('Business', 'School'), 'compound'), (('School', 'management'), 'nmod'), (('.', 'holds'), 'punct')]

 Named Entites are: 
>> [('IE Business School', 'ORG')]

------------------- Sentence 3 -------------------

 He is the main author of this paper and can be reached at  Jorn.Jansen.Schoonhoven@ibm.com or +316 22403033. 

Tokens are: 
>> ['He', 'is', 'the', 'main', 'author', 'of', 'this', 'paper', 'and', 'can', 'be', 'reached', 'at', 'Jorn.Jansen.Schoonhoven@ibm.com', 'or', '+316', '22403033', '.'] 

 UPOS tags are: 
>> [('He', 'PRON'), ('is', 'AUX'), ('the', 'DET'), ('main', 'ADJ'), ('author', 'NOUN'), ('of', 'ADP'), ('this', 'DET'), ('paper', 'NOUN'), ('and', 'CCONJ'), ('can', 'AUX'), ('be', 'AUX'), ('reached', 'VERB'), ('at', 'ADP'), ('Jorn.Jansen.Schoonhoven@ibm.com', 'X'), ('or', 'CCONJ'), ('+316', 'NUM'), ('22403033', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('He', 'PRP'), ('is', 'VBZ'), ('the', 'DT'), ('main', 'JJ'), ('author', 'NN'), ('of', 'IN'), ('this', 'DT'), ('paper', 'NN'), ('and', 'CC'), ('can', 'MD'), ('be', 'VB'), ('reached', 'VBN'), ('at', 'IN'), ('Jorn.Jansen.Schoonhoven@ibm.com', 'ADD'), ('or', 'CC'), ('+316', 'CD'), ('22403033', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('He', 'he'), ('is', 'be'), ('the', 'the'), ('main', 'main'), ('author', 'author'), ('of', 'of'), ('this', 'this'), ('paper', 'paper'), ('and', 'and'), ('can', 'can'), ('be', 'be'), ('reached', 'reach'), ('at', 'at'), ('Jorn.Jansen.Schoonhoven@ibm.com', 'jorn.jansen.schoonhoven@ibm.com'), ('or', 'or'), ('+316', '+316'), ('22403033', '22403033'), ('.', '.')] 

 Dependency tags are: 
>> [(('He', 'author'), 'nsubj'), (('is', 'author'), 'cop'), (('the', 'author'), 'det'), (('main', 'author'), 'amod'), (('author', 'root'), 'root'), (('of', 'paper'), 'case'), (('this', 'paper'), 'det'), (('paper', 'author'), 'nmod'), (('and', 'reached'), 'cc'), (('can', 'reached'), 'aux'), (('be', 'reached'), 'aux:pass'), (('reached', 'author'), 'conj'), (('at', 'Jorn.Jansen.Schoonhoven@ibm.com'), 'case'), (('Jorn.Jansen.Schoonhoven@ibm.com', 'reached'), 'obl'), (('or', '+316'), 'cc'), (('+316', 'Jorn.Jansen.Schoonhoven@ibm.com'), 'conj'), (('22403033', 'Jorn.Jansen.Schoonhoven@ibm.com'), 'conj'), (('.', 'author'), 'punct')]

 Named Entites are: 
>> [('Jorn.Jansen.Schoonhoven@ibm.com', 'ORG'), ('+316 22403033', 'CARDINAL')]

================================ Paragraph 263 =================================

Marloes Roelands is an Associate Partner with over 20 years’  experience in consulting. She is the European leader for the  “IBM Garage for AI.” She loves making innovation happen  with her clients and followed the Executive programme  “Strategy and Innovation” at Saïd Business School at Oxford  University to support her thinking. She also holds a Master of  Economics from Erasmus University Rotterdam. She can be  reached at marloes.roelands@nl.ibm.com. 


------------------- Sentence 1 -------------------

 Marloes Roelands is an Associate Partner with over 20 years’  experience in consulting. 

Tokens are: 
>> ['Marloes', 'Roelands', 'is', 'an', 'Associate', 'Partner', 'with', 'over', '20', 'years', '’', 'experience', 'in', 'consulting', '.'] 

 UPOS tags are: 
>> [('Marloes', 'PROPN'), ('Roelands', 'PROPN'), ('is', 'AUX'), ('an', 'DET'), ('Associate', 'NOUN'), ('Partner', 'NOUN'), ('with', 'ADP'), ('over', 'ADV'), ('20', 'NUM'), ('years', 'NOUN'), ('’', 'PART'), ('experience', 'NOUN'), ('in', 'ADP'), ('consulting', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Marloes', 'NNP'), ('Roelands', 'NNPS'), ('is', 'VBZ'), ('an', 'DT'), ('Associate', 'NN'), ('Partner', 'NN'), ('with', 'IN'), ('over', 'RB'), ('20', 'CD'), ('years', 'NNS'), ('’', 'POS'), ('experience', 'NN'), ('in', 'IN'), ('consulting', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Marloes', 'Marloes'), ('Roelands', 'Roelands'), ('is', 'be'), ('an', 'a'), ('Associate', 'associate'), ('Partner', 'partner'), ('with', 'with'), ('over', 'over'), ('20', '20'), ('years', 'year'), ('’', "'s"), ('experience', 'experience'), ('in', 'in'), ('consulting', 'consulting'), ('.', '.')] 

 Dependency tags are: 
>> [(('Marloes', 'Partner'), 'nsubj'), (('Roelands', 'Marloes'), 'flat'), (('is', 'Partner'), 'cop'), (('an', 'Partner'), 'det'), (('Associate', 'Partner'), 'compound'), (('Partner', 'root'), 'root'), (('with', 'experience'), 'case'), (('over', '20'), 'advmod'), (('20', 'years'), 'nummod'), (('years', 'experience'), 'nmod:poss'), (('’', 'years'), 'case'), (('experience', 'Partner'), 'nmod'), (('in', 'consulting'), 'case'), (('consulting', 'experience'), 'nmod'), (('.', 'Partner'), 'punct')]

 Named Entites are: 
>> [('Marloes Roelands', 'PERSON'), ('20 years', 'DATE')]

------------------- Sentence 2 -------------------

 She is the European leader for the  “IBM Garage for AI.” 

Tokens are: 
>> ['She', 'is', 'the', 'European', 'leader', 'for', 'the', '“', 'IBM', 'Garage', 'for', 'AI', '.', '”'] 

 UPOS tags are: 
>> [('She', 'PRON'), ('is', 'AUX'), ('the', 'DET'), ('European', 'ADJ'), ('leader', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('“', 'PUNCT'), ('IBM', 'PROPN'), ('Garage', 'PROPN'), ('for', 'ADP'), ('AI', 'PROPN'), ('.', 'PUNCT'), ('”', 'PUNCT')] 

 XPOS tags are: 
>> [('She', 'PRP'), ('is', 'VBZ'), ('the', 'DT'), ('European', 'JJ'), ('leader', 'NN'), ('for', 'IN'), ('the', 'DT'), ('“', '``'), ('IBM', 'NNP'), ('Garage', 'NNP'), ('for', 'IN'), ('AI', 'NNP'), ('.', '.'), ('”', "''")] 

 Lemmas are: 
>> [('She', 'she'), ('is', 'be'), ('the', 'the'), ('European', 'European'), ('leader', 'leader'), ('for', 'for'), ('the', 'the'), ('“', "''"), ('IBM', 'IBM'), ('Garage', 'Garage'), ('for', 'for'), ('AI', 'AI'), ('.', '.'), ('”', "''")] 

 Dependency tags are: 
>> [(('She', 'leader'), 'nsubj'), (('is', 'leader'), 'cop'), (('the', 'leader'), 'det'), (('European', 'leader'), 'amod'), (('leader', 'root'), 'root'), (('for', 'Garage'), 'case'), (('the', 'Garage'), 'det'), (('“', 'Garage'), 'punct'), (('IBM', 'Garage'), 'compound'), (('Garage', 'leader'), 'nmod'), (('for', 'AI'), 'case'), (('AI', 'Garage'), 'nmod'), (('.', 'Garage'), 'punct'), (('”', 'Garage'), 'punct')]

 Named Entites are: 
>> [('European', 'NORP'), ('the  “IBM Garage', 'ORG'), ('AI', 'ORG')]

------------------- Sentence 3 -------------------

 She loves making innovation happen  with her clients and followed the Executive programme  “Strategy and Innovation” at Saïd Business School at Oxford  University to support her thinking. 

Tokens are: 
>> ['She', 'loves', 'making', 'innovation', 'happen', 'with', 'her', 'clients', 'and', 'followed', 'the', 'Executive', 'programme', '“', 'Strategy', 'and', 'Innovation', '”', 'at', 'Saïd', 'Business', 'School', 'at', 'Oxford', 'University', 'to', 'support', 'her', 'thinking', '.'] 

 UPOS tags are: 
>> [('She', 'PRON'), ('loves', 'VERB'), ('making', 'VERB'), ('innovation', 'NOUN'), ('happen', 'VERB'), ('with', 'ADP'), ('her', 'PRON'), ('clients', 'NOUN'), ('and', 'CCONJ'), ('followed', 'VERB'), ('the', 'DET'), ('Executive', 'ADJ'), ('programme', 'NOUN'), ('“', 'PUNCT'), ('Strategy', 'PROPN'), ('and', 'CCONJ'), ('Innovation', 'PROPN'), ('”', 'PUNCT'), ('at', 'ADP'), ('Saïd', 'PROPN'), ('Business', 'PROPN'), ('School', 'PROPN'), ('at', 'ADP'), ('Oxford', 'PROPN'), ('University', 'PROPN'), ('to', 'PART'), ('support', 'VERB'), ('her', 'PRON'), ('thinking', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('She', 'PRP'), ('loves', 'VBZ'), ('making', 'VBG'), ('innovation', 'NN'), ('happen', 'VB'), ('with', 'IN'), ('her', 'PRP$'), ('clients', 'NNS'), ('and', 'CC'), ('followed', 'VBD'), ('the', 'DT'), ('Executive', 'JJ'), ('programme', 'NN'), ('“', '``'), ('Strategy', 'NNP'), ('and', 'CC'), ('Innovation', 'NNP'), ('”', "''"), ('at', 'IN'), ('Saïd', 'NNP'), ('Business', 'NNP'), ('School', 'NNP'), ('at', 'IN'), ('Oxford', 'NNP'), ('University', 'NNP'), ('to', 'TO'), ('support', 'VB'), ('her', 'PRP$'), ('thinking', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('She', 'she'), ('loves', 'love'), ('making', 'make'), ('innovation', 'innovation'), ('happen', 'happen'), ('with', 'with'), ('her', 'she'), ('clients', 'client'), ('and', 'and'), ('followed', 'follow'), ('the', 'the'), ('Executive', 'executive'), ('programme', 'programme'), ('“', "''"), ('Strategy', 'Strategy'), ('and', 'and'), ('Innovation', 'Innovation'), ('”', "''"), ('at', 'at'), ('Saïd', 'Saïd'), ('Business', 'Business'), ('School', 'School'), ('at', 'at'), ('Oxford', 'Oxford'), ('University', 'University'), ('to', 'to'), ('support', 'support'), ('her', 'she'), ('thinking', 'thinking'), ('.', '.')] 

 Dependency tags are: 
>> [(('She', 'loves'), 'nsubj'), (('loves', 'root'), 'root'), (('making', 'loves'), 'xcomp'), (('innovation', 'making'), 'obj'), (('happen', 'making'), 'xcomp'), (('with', 'clients'), 'case'), (('her', 'clients'), 'nmod:poss'), (('clients', 'happen'), 'obl'), (('and', 'followed'), 'cc'), (('followed', 'loves'), 'conj'), (('the', 'programme'), 'det'), (('Executive', 'programme'), 'amod'), (('programme', 'followed'), 'obj'), (('“', 'Strategy'), 'punct'), (('Strategy', 'programme'), 'appos'), (('and', 'Innovation'), 'cc'), (('Innovation', 'Strategy'), 'conj'), (('”', 'Strategy'), 'punct'), (('at', 'School'), 'case'), (('Saïd', 'School'), 'compound'), (('Business', 'School'), 'compound'), (('School', 'followed'), 'obl'), (('at', 'University'), 'case'), (('Oxford', 'University'), 'compound'), (('University', 'School'), 'nmod'), (('to', 'support'), 'mark'), (('support', 'followed'), 'advcl'), (('her', 'thinking'), 'nmod:poss'), (('thinking', 'support'), 'obj'), (('.', 'loves'), 'punct')]

 Named Entites are: 
>> [('Executive', 'ORG'), ('Strategy and Innovation', 'EVENT'), ('Saïd Business School', 'ORG'), ('Oxford  University', 'ORG')]

------------------- Sentence 4 -------------------

 She also holds a Master of  Economics from Erasmus University Rotterdam. 

Tokens are: 
>> ['She', 'also', 'holds', 'a', 'Master', 'of', 'Economics', 'from', 'Erasmus', 'University', 'Rotterdam', '.'] 

 UPOS tags are: 
>> [('She', 'PRON'), ('also', 'ADV'), ('holds', 'VERB'), ('a', 'DET'), ('Master', 'NOUN'), ('of', 'ADP'), ('Economics', 'PROPN'), ('from', 'ADP'), ('Erasmus', 'PROPN'), ('University', 'PROPN'), ('Rotterdam', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('She', 'PRP'), ('also', 'RB'), ('holds', 'VBZ'), ('a', 'DT'), ('Master', 'NN'), ('of', 'IN'), ('Economics', 'NNPS'), ('from', 'IN'), ('Erasmus', 'NNP'), ('University', 'NNP'), ('Rotterdam', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('She', 'she'), ('also', 'also'), ('holds', 'hold'), ('a', 'a'), ('Master', 'master'), ('of', 'of'), ('Economics', 'economics'), ('from', 'from'), ('Erasmus', 'Erasmus'), ('University', 'University'), ('Rotterdam', 'Rotterdam'), ('.', '.')] 

 Dependency tags are: 
>> [(('She', 'holds'), 'nsubj'), (('also', 'holds'), 'advmod'), (('holds', 'root'), 'root'), (('a', 'Master'), 'det'), (('Master', 'holds'), 'obj'), (('of', 'Economics'), 'case'), (('Economics', 'Master'), 'nmod'), (('from', 'University'), 'case'), (('Erasmus', 'University'), 'compound'), (('University', 'holds'), 'obl'), (('Rotterdam', 'University'), 'flat'), (('.', 'holds'), 'punct')]

 Named Entites are: 
>> [('a Master of  Economics', 'ORG'), ('Erasmus University Rotterdam', 'ORG')]

------------------- Sentence 5 -------------------

 She can be  reached at marloes.roelands@nl.ibm.com. 

Tokens are: 
>> ['She', 'can', 'be', 'reached', 'at', 'marloes.roelands@nl.ibm.com', '.'] 

 UPOS tags are: 
>> [('She', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('reached', 'VERB'), ('at', 'ADP'), ('marloes.roelands@nl.ibm.com', 'X'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('She', 'PRP'), ('can', 'MD'), ('be', 'VB'), ('reached', 'VBN'), ('at', 'IN'), ('marloes.roelands@nl.ibm.com', 'ADD'), ('.', '.')] 

 Lemmas are: 
>> [('She', 'she'), ('can', 'can'), ('be', 'be'), ('reached', 'reach'), ('at', 'at'), ('marloes.roelands@nl.ibm.com', 'marloes.roelands@nl.ibm.com'), ('.', '.')] 

 Dependency tags are: 
>> [(('She', 'reached'), 'nsubj:pass'), (('can', 'reached'), 'aux'), (('be', 'reached'), 'aux:pass'), (('reached', 'root'), 'root'), (('at', 'marloes.roelands@nl.ibm.com'), 'case'), (('marloes.roelands@nl.ibm.com', 'reached'), 'obl'), (('.', 'reached'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 264 =================================

Francesco Brenna, an Executive Partner with over 17 years of  consulting experience, currently leads the AI practice for IBM  Global Business Services in Europe. He holds a Bachelor of  Science in Computer Science from Zurich University of Applied  Sciences in Zurich and a Master of Business Administration  (with distinction) from Warwick Business School. He can be  reached at francesco.brenna@ch.ibm.com.  


------------------- Sentence 1 -------------------

 Francesco Brenna, an Executive Partner with over 17 years of  consulting experience, currently leads the AI practice for IBM  Global Business Services in Europe. 

Tokens are: 
>> ['Francesco', 'Brenna', ',', 'an', 'Executive', 'Partner', 'with', 'over', '17', 'years', 'of', 'consulting', 'experience', ',', 'currently', 'leads', 'the', 'AI', 'practice', 'for', 'IBM', 'Global', 'Business', 'Services', 'in', 'Europe', '.'] 

 UPOS tags are: 
>> [('Francesco', 'PROPN'), ('Brenna', 'PROPN'), (',', 'PUNCT'), ('an', 'DET'), ('Executive', 'ADJ'), ('Partner', 'NOUN'), ('with', 'ADP'), ('over', 'ADV'), ('17', 'NUM'), ('years', 'NOUN'), ('of', 'ADP'), ('consulting', 'NOUN'), ('experience', 'NOUN'), (',', 'PUNCT'), ('currently', 'ADV'), ('leads', 'VERB'), ('the', 'DET'), ('AI', 'NOUN'), ('practice', 'NOUN'), ('for', 'ADP'), ('IBM', 'PROPN'), ('Global', 'ADJ'), ('Business', 'PROPN'), ('Services', 'PROPN'), ('in', 'ADP'), ('Europe', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Francesco', 'NNP'), ('Brenna', 'NNP'), (',', ','), ('an', 'DT'), ('Executive', 'JJ'), ('Partner', 'NN'), ('with', 'IN'), ('over', 'RB'), ('17', 'CD'), ('years', 'NNS'), ('of', 'IN'), ('consulting', 'NN'), ('experience', 'NN'), (',', ','), ('currently', 'RB'), ('leads', 'VBZ'), ('the', 'DT'), ('AI', 'NN'), ('practice', 'NN'), ('for', 'IN'), ('IBM', 'NNP'), ('Global', 'NNP'), ('Business', 'NNP'), ('Services', 'NNPS'), ('in', 'IN'), ('Europe', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('Francesco', 'Francesco'), ('Brenna', 'Brenna'), (',', ','), ('an', 'a'), ('Executive', 'executive'), ('Partner', 'partner'), ('with', 'with'), ('over', 'over'), ('17', '17'), ('years', 'year'), ('of', 'of'), ('consulting', 'consulting'), ('experience', 'experience'), (',', ','), ('currently', 'currently'), ('leads', 'lead'), ('the', 'the'), ('AI', 'ai'), ('practice', 'practice'), ('for', 'for'), ('IBM', 'IBM'), ('Global', 'global'), ('Business', 'Business'), ('Services', 'Service'), ('in', 'in'), ('Europe', 'Europe'), ('.', '.')] 

 Dependency tags are: 
>> [(('Francesco', 'leads'), 'nsubj'), (('Brenna', 'Francesco'), 'flat'), ((',', 'Partner'), 'punct'), (('an', 'Partner'), 'det'), (('Executive', 'Partner'), 'amod'), (('Partner', 'Francesco'), 'appos'), (('with', 'years'), 'case'), (('over', '17'), 'advmod'), (('17', 'years'), 'nummod'), (('years', 'Partner'), 'nmod'), (('of', 'experience'), 'case'), (('consulting', 'experience'), 'compound'), (('experience', 'years'), 'nmod'), ((',', 'leads'), 'punct'), (('currently', 'leads'), 'advmod'), (('leads', 'root'), 'root'), (('the', 'practice'), 'det'), (('AI', 'practice'), 'compound'), (('practice', 'leads'), 'obj'), (('for', 'Services'), 'case'), (('IBM', 'Services'), 'compound'), (('Global', 'Services'), 'amod'), (('Business', 'Services'), 'compound'), (('Services', 'practice'), 'nmod'), (('in', 'Europe'), 'case'), (('Europe', 'Services'), 'nmod'), (('.', 'leads'), 'punct')]

 Named Entites are: 
>> [('Francesco Brenna', 'PERSON'), ('17 years', 'DATE'), ('AI', 'ORG'), ('IBM  Global Business Services', 'ORG'), ('Europe', 'LOC')]

------------------- Sentence 2 -------------------

 He holds a Bachelor of  Science in Computer Science from Zurich University of Applied  Sciences in Zurich and a Master of Business Administration  (with distinction) from Warwick Business School. 

Tokens are: 
>> ['He', 'holds', 'a', 'Bachelor', 'of', 'Science', 'in', 'Computer', 'Science', 'from', 'Zurich', 'University', 'of', 'Applied', 'Sciences', 'in', 'Zurich', 'and', 'a', 'Master', 'of', 'Business', 'Administration', '(', 'with', 'distinction', ')', 'from', 'Warwick', 'Business', 'School', '.'] 

 UPOS tags are: 
>> [('He', 'PRON'), ('holds', 'VERB'), ('a', 'DET'), ('Bachelor', 'PROPN'), ('of', 'ADP'), ('Science', 'PROPN'), ('in', 'ADP'), ('Computer', 'PROPN'), ('Science', 'PROPN'), ('from', 'ADP'), ('Zurich', 'PROPN'), ('University', 'PROPN'), ('of', 'ADP'), ('Applied', 'VERB'), ('Sciences', 'PROPN'), ('in', 'ADP'), ('Zurich', 'PROPN'), ('and', 'CCONJ'), ('a', 'DET'), ('Master', 'NOUN'), ('of', 'ADP'), ('Business', 'PROPN'), ('Administration', 'PROPN'), ('(', 'PUNCT'), ('with', 'ADP'), ('distinction', 'NOUN'), (')', 'PUNCT'), ('from', 'ADP'), ('Warwick', 'PROPN'), ('Business', 'PROPN'), ('School', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('He', 'PRP'), ('holds', 'VBZ'), ('a', 'DT'), ('Bachelor', 'NNP'), ('of', 'IN'), ('Science', 'NNP'), ('in', 'IN'), ('Computer', 'NNP'), ('Science', 'NNP'), ('from', 'IN'), ('Zurich', 'NNP'), ('University', 'NNP'), ('of', 'IN'), ('Applied', 'NNP'), ('Sciences', 'NNPS'), ('in', 'IN'), ('Zurich', 'NNP'), ('and', 'CC'), ('a', 'DT'), ('Master', 'NN'), ('of', 'IN'), ('Business', 'NNP'), ('Administration', 'NNP'), ('(', '-LRB-'), ('with', 'IN'), ('distinction', 'NN'), (')', '-RRB-'), ('from', 'IN'), ('Warwick', 'NNP'), ('Business', 'NNP'), ('School', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('He', 'he'), ('holds', 'hold'), ('a', 'a'), ('Bachelor', 'bachelor'), ('of', 'of'), ('Science', 'Science'), ('in', 'in'), ('Computer', 'Computer'), ('Science', 'Science'), ('from', 'from'), ('Zurich', 'Zurich'), ('University', 'University'), ('of', 'of'), ('Applied', 'apply'), ('Sciences', 'Science'), ('in', 'in'), ('Zurich', 'Zurich'), ('and', 'and'), ('a', 'a'), ('Master', 'master'), ('of', 'of'), ('Business', 'Business'), ('Administration', 'Administration'), ('(', '('), ('with', 'with'), ('distinction', 'distinction'), (')', ')'), ('from', 'from'), ('Warwick', 'Warwick'), ('Business', 'Business'), ('School', 'School'), ('.', '.')] 

 Dependency tags are: 
>> [(('He', 'holds'), 'nsubj'), (('holds', 'root'), 'root'), (('a', 'Bachelor'), 'det'), (('Bachelor', 'holds'), 'obj'), (('of', 'Science'), 'case'), (('Science', 'Bachelor'), 'nmod'), (('in', 'Science'), 'case'), (('Computer', 'Science'), 'compound'), (('Science', 'holds'), 'obl'), (('from', 'University'), 'case'), (('Zurich', 'University'), 'compound'), (('University', 'holds'), 'obl'), (('of', 'Sciences'), 'case'), (('Applied', 'Sciences'), 'amod'), (('Sciences', 'University'), 'nmod'), (('in', 'Zurich'), 'case'), (('Zurich', 'University'), 'nmod'), (('and', 'Master'), 'cc'), (('a', 'Master'), 'det'), (('Master', 'Bachelor'), 'conj'), (('of', 'Administration'), 'case'), (('Business', 'Administration'), 'compound'), (('Administration', 'Master'), 'nmod'), (('(', 'distinction'), 'punct'), (('with', 'distinction'), 'case'), (('distinction', 'Master'), 'nmod'), ((')', 'distinction'), 'punct'), (('from', 'School'), 'case'), (('Warwick', 'School'), 'compound'), (('Business', 'School'), 'compound'), (('School', 'Master'), 'nmod'), (('.', 'holds'), 'punct')]

 Named Entites are: 
>> [('a Bachelor of  Science', 'ORG'), ('Zurich University of Applied  Sciences', 'ORG'), ('Zurich', 'GPE'), ('a Master of Business Administration', 'ORG'), ('Warwick Business School', 'ORG')]

------------------- Sentence 3 -------------------

 He can be  reached at francesco.brenna@ch.ibm.com. 

Tokens are: 
>> ['He', 'can', 'be', 'reached', 'at', 'francesco.brenna@ch.ibm.com', '.'] 

 UPOS tags are: 
>> [('He', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('reached', 'VERB'), ('at', 'ADP'), ('francesco.brenna@ch.ibm.com', 'X'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('He', 'PRP'), ('can', 'MD'), ('be', 'VB'), ('reached', 'VBN'), ('at', 'IN'), ('francesco.brenna@ch.ibm.com', 'ADD'), ('.', '.')] 

 Lemmas are: 
>> [('He', 'he'), ('can', 'can'), ('be', 'be'), ('reached', 'reach'), ('at', 'at'), ('francesco.brenna@ch.ibm.com', 'francesco.brenna@ch.ibm.com'), ('.', '.')] 

 Dependency tags are: 
>> [(('He', 'reached'), 'nsubj:pass'), (('can', 'reached'), 'aux'), (('be', 'reached'), 'aux:pass'), (('reached', 'root'), 'root'), (('at', 'francesco.brenna@ch.ibm.com'), 'case'), (('francesco.brenna@ch.ibm.com', 'reached'), 'obl'), (('.', 'reached'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 265 =================================

Acknowledgements The authors thank the advanced analytics practice for  sharing their experience about the implementation of AI,  the IBM Institute for Business value for their advice and  insights, and other IBM branches whose insights are  reflected in this document.  


------------------- Sentence 1 -------------------

 Acknowledgements 

Tokens are: 
>> ['Acknowledgements'] 

 UPOS tags are: 
>> [('Acknowledgements', 'NOUN')] 

 XPOS tags are: 
>> [('Acknowledgements', 'NNS')] 

 Lemmas are: 
>> [('Acknowledgements', 'acknowledgement')] 

 Dependency tags are: 
>> [(('Acknowledgements', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 The authors thank the advanced analytics practice for  sharing their experience about the implementation of AI,  the IBM Institute for Business value for their advice and  insights, and other IBM branches whose insights are  reflected in this document. 

Tokens are: 
>> ['The', 'authors', 'thank', 'the', 'advanced', 'analytics', 'practice', 'for', 'sharing', 'their', 'experience', 'about', 'the', 'implementation', 'of', 'AI', ',', 'the', 'IBM', 'Institute', 'for', 'Business', 'value', 'for', 'their', 'advice', 'and', 'insights', ',', 'and', 'other', 'IBM', 'branches', 'whose', 'insights', 'are', 'reflected', 'in', 'this', 'document', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('authors', 'NOUN'), ('thank', 'VERB'), ('the', 'DET'), ('advanced', 'ADJ'), ('analytics', 'NOUN'), ('practice', 'NOUN'), ('for', 'SCONJ'), ('sharing', 'VERB'), ('their', 'PRON'), ('experience', 'NOUN'), ('about', 'ADP'), ('the', 'DET'), ('implementation', 'NOUN'), ('of', 'ADP'), ('AI', 'PROPN'), (',', 'PUNCT'), ('the', 'DET'), ('IBM', 'PROPN'), ('Institute', 'PROPN'), ('for', 'ADP'), ('Business', 'PROPN'), ('value', 'NOUN'), ('for', 'ADP'), ('their', 'PRON'), ('advice', 'NOUN'), ('and', 'CCONJ'), ('insights', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('other', 'ADJ'), ('IBM', 'PROPN'), ('branches', 'NOUN'), ('whose', 'PRON'), ('insights', 'NOUN'), ('are', 'AUX'), ('reflected', 'VERB'), ('in', 'ADP'), ('this', 'DET'), ('document', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('authors', 'NNS'), ('thank', 'VBP'), ('the', 'DT'), ('advanced', 'JJ'), ('analytics', 'NN'), ('practice', 'NN'), ('for', 'IN'), ('sharing', 'VBG'), ('their', 'PRP$'), ('experience', 'NN'), ('about', 'IN'), ('the', 'DT'), ('implementation', 'NN'), ('of', 'IN'), ('AI', 'NNP'), (',', ','), ('the', 'DT'), ('IBM', 'NNP'), ('Institute', 'NNP'), ('for', 'IN'), ('Business', 'NNP'), ('value', 'NN'), ('for', 'IN'), ('their', 'PRP$'), ('advice', 'NN'), ('and', 'CC'), ('insights', 'NNS'), (',', ','), ('and', 'CC'), ('other', 'JJ'), ('IBM', 'NNP'), ('branches', 'NNS'), ('whose', 'WP$'), ('insights', 'NNS'), ('are', 'VBP'), ('reflected', 'VBN'), ('in', 'IN'), ('this', 'DT'), ('document', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('authors', 'author'), ('thank', 'thank'), ('the', 'the'), ('advanced', 'advanced'), ('analytics', 'analytic'), ('practice', 'practice'), ('for', 'for'), ('sharing', 'share'), ('their', 'they'), ('experience', 'experience'), ('about', 'about'), ('the', 'the'), ('implementation', 'implementation'), ('of', 'of'), ('AI', 'AI'), (',', ','), ('the', 'the'), ('IBM', 'IBM'), ('Institute', 'Institute'), ('for', 'for'), ('Business', 'Business'), ('value', 'value'), ('for', 'for'), ('their', 'they'), ('advice', 'advice'), ('and', 'and'), ('insights', 'insight'), (',', ','), ('and', 'and'), ('other', 'other'), ('IBM', 'IBM'), ('branches', 'branch'), ('whose', 'whose'), ('insights', 'insight'), ('are', 'be'), ('reflected', 'reflect'), ('in', 'in'), ('this', 'this'), ('document', 'document'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'authors'), 'det'), (('authors', 'thank'), 'nsubj'), (('thank', 'root'), 'root'), (('the', 'practice'), 'det'), (('advanced', 'practice'), 'amod'), (('analytics', 'practice'), 'compound'), (('practice', 'thank'), 'obj'), (('for', 'sharing'), 'mark'), (('sharing', 'thank'), 'advcl'), (('their', 'experience'), 'nmod:poss'), (('experience', 'sharing'), 'obj'), (('about', 'implementation'), 'case'), (('the', 'implementation'), 'det'), (('implementation', 'experience'), 'nmod'), (('of', 'AI'), 'case'), (('AI', 'implementation'), 'nmod'), ((',', 'Institute'), 'punct'), (('the', 'Institute'), 'det'), (('IBM', 'Institute'), 'compound'), (('Institute', 'AI'), 'appos'), (('for', 'value'), 'case'), (('Business', 'value'), 'compound'), (('value', 'implementation'), 'nmod'), (('for', 'advice'), 'case'), (('their', 'advice'), 'nmod:poss'), (('advice', 'value'), 'nmod'), (('and', 'insights'), 'cc'), (('insights', 'advice'), 'conj'), ((',', 'branches'), 'punct'), (('and', 'branches'), 'cc'), (('other', 'branches'), 'amod'), (('IBM', 'branches'), 'compound'), (('branches', 'AI'), 'conj'), (('whose', 'insights'), 'nmod:poss'), (('insights', 'reflected'), 'nsubj:pass'), (('are', 'reflected'), 'aux:pass'), (('reflected', 'branches'), 'acl:relcl'), (('in', 'document'), 'case'), (('this', 'document'), 'det'), (('document', 'reflected'), 'obl'), (('.', 'thank'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG'), ('the IBM Institute for Business', 'ORG'), ('IBM', 'ORG')]

================================ Paragraph 266 =================================

The authors are also grateful for the contributions of many  IBM colleagues. In particular, they thank Mando Rotman,  Wouter Oosterbosch, Damian Brennan and Vanessa van de  Vliet. This report would not have been possible without the  help of many other colleagues within the IBM Watson and  advanced analytics department.  


------------------- Sentence 1 -------------------

 The authors are also grateful for the contributions of many  IBM colleagues. 

Tokens are: 
>> ['The', 'authors', 'are', 'also', 'grateful', 'for', 'the', 'contributions', 'of', 'many', 'IBM', 'colleagues', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('authors', 'NOUN'), ('are', 'AUX'), ('also', 'ADV'), ('grateful', 'ADJ'), ('for', 'ADP'), ('the', 'DET'), ('contributions', 'NOUN'), ('of', 'ADP'), ('many', 'ADJ'), ('IBM', 'PROPN'), ('colleagues', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('authors', 'NNS'), ('are', 'VBP'), ('also', 'RB'), ('grateful', 'JJ'), ('for', 'IN'), ('the', 'DT'), ('contributions', 'NNS'), ('of', 'IN'), ('many', 'JJ'), ('IBM', 'NNP'), ('colleagues', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('authors', 'author'), ('are', 'be'), ('also', 'also'), ('grateful', 'grateful'), ('for', 'for'), ('the', 'the'), ('contributions', 'contribution'), ('of', 'of'), ('many', 'many'), ('IBM', 'IBM'), ('colleagues', 'colleague'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'authors'), 'det'), (('authors', 'grateful'), 'nsubj'), (('are', 'grateful'), 'cop'), (('also', 'grateful'), 'advmod'), (('grateful', 'root'), 'root'), (('for', 'contributions'), 'case'), (('the', 'contributions'), 'det'), (('contributions', 'grateful'), 'obl'), (('of', 'colleagues'), 'case'), (('many', 'colleagues'), 'amod'), (('IBM', 'colleagues'), 'compound'), (('colleagues', 'contributions'), 'nmod'), (('.', 'grateful'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG')]

------------------- Sentence 2 -------------------

 In particular, they thank Mando Rotman,  Wouter Oosterbosch, Damian Brennan and Vanessa van de  Vliet. 

Tokens are: 
>> ['In', 'particular', ',', 'they', 'thank', 'Mando', 'Rotman', ',', 'Wouter', 'Oosterbosch', ',', 'Damian', 'Brennan', 'and', 'Vanessa', 'van', 'de', 'Vliet', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('particular', 'ADJ'), (',', 'PUNCT'), ('they', 'PRON'), ('thank', 'VERB'), ('Mando', 'PROPN'), ('Rotman', 'PROPN'), (',', 'PUNCT'), ('Wouter', 'PROPN'), ('Oosterbosch', 'PROPN'), (',', 'PUNCT'), ('Damian', 'PROPN'), ('Brennan', 'PROPN'), ('and', 'CCONJ'), ('Vanessa', 'PROPN'), ('van', 'PROPN'), ('de', 'PROPN'), ('Vliet', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('particular', 'JJ'), (',', ','), ('they', 'PRP'), ('thank', 'VBP'), ('Mando', 'NNP'), ('Rotman', 'NNP'), (',', ','), ('Wouter', 'NNP'), ('Oosterbosch', 'NNP'), (',', ','), ('Damian', 'NNP'), ('Brennan', 'NNP'), ('and', 'CC'), ('Vanessa', 'NNP'), ('van', 'NNP'), ('de', 'NNP'), ('Vliet', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('particular', 'particular'), (',', ','), ('they', 'they'), ('thank', 'thank'), ('Mando', 'Mando'), ('Rotman', 'Rotman'), (',', ','), ('Wouter', 'Wouter'), ('Oosterbosch', 'Oosterbosch'), (',', ','), ('Damian', 'Damian'), ('Brennan', 'Brennan'), ('and', 'and'), ('Vanessa', 'Vanessa'), ('van', 'van'), ('de', 'de'), ('Vliet', 'Vliet'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'particular'), 'case'), (('particular', 'thank'), 'obl'), ((',', 'thank'), 'punct'), (('they', 'thank'), 'nsubj'), (('thank', 'root'), 'root'), (('Mando', 'thank'), 'obj'), (('Rotman', 'Mando'), 'flat'), ((',', 'Wouter'), 'punct'), (('Wouter', 'Mando'), 'conj'), (('Oosterbosch', 'Wouter'), 'flat'), ((',', 'Damian'), 'punct'), (('Damian', 'Mando'), 'conj'), (('Brennan', 'Damian'), 'flat'), (('and', 'Vanessa'), 'cc'), (('Vanessa', 'Mando'), 'conj'), (('van', 'Vanessa'), 'flat'), (('de', 'Vanessa'), 'flat'), (('Vliet', 'Vanessa'), 'flat'), (('.', 'thank'), 'punct')]

 Named Entites are: 
>> [('Mando Rotman', 'PERSON'), ('Wouter Oosterbosch', 'PERSON'), ('Damian Brennan', 'PERSON'), ('Vanessa van de  Vliet', 'PERSON')]

------------------- Sentence 3 -------------------

 This report would not have been possible without the  help of many other colleagues within the IBM Watson and  advanced analytics department. 

Tokens are: 
>> ['This', 'report', 'would', 'not', 'have', 'been', 'possible', 'without', 'the', 'help', 'of', 'many', 'other', 'colleagues', 'within', 'the', 'IBM', 'Watson', 'and', 'advanced', 'analytics', 'department', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('report', 'NOUN'), ('would', 'AUX'), ('not', 'PART'), ('have', 'AUX'), ('been', 'AUX'), ('possible', 'ADJ'), ('without', 'ADP'), ('the', 'DET'), ('help', 'NOUN'), ('of', 'ADP'), ('many', 'ADJ'), ('other', 'ADJ'), ('colleagues', 'NOUN'), ('within', 'ADP'), ('the', 'DET'), ('IBM', 'PROPN'), ('Watson', 'PROPN'), ('and', 'CCONJ'), ('advanced', 'ADJ'), ('analytics', 'NOUN'), ('department', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('report', 'NN'), ('would', 'MD'), ('not', 'RB'), ('have', 'VB'), ('been', 'VBN'), ('possible', 'JJ'), ('without', 'IN'), ('the', 'DT'), ('help', 'NN'), ('of', 'IN'), ('many', 'JJ'), ('other', 'JJ'), ('colleagues', 'NNS'), ('within', 'IN'), ('the', 'DT'), ('IBM', 'NNP'), ('Watson', 'NNP'), ('and', 'CC'), ('advanced', 'JJ'), ('analytics', 'NN'), ('department', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('report', 'report'), ('would', 'would'), ('not', 'not'), ('have', 'have'), ('been', 'be'), ('possible', 'possible'), ('without', 'without'), ('the', 'the'), ('help', 'help'), ('of', 'of'), ('many', 'many'), ('other', 'other'), ('colleagues', 'colleague'), ('within', 'within'), ('the', 'the'), ('IBM', 'IBM'), ('Watson', 'Watson'), ('and', 'and'), ('advanced', 'advanced'), ('analytics', 'analytic'), ('department', 'department'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'report'), 'det'), (('report', 'possible'), 'nsubj'), (('would', 'possible'), 'aux'), (('not', 'possible'), 'advmod'), (('have', 'possible'), 'aux'), (('been', 'possible'), 'cop'), (('possible', 'root'), 'root'), (('without', 'help'), 'case'), (('the', 'help'), 'det'), (('help', 'possible'), 'obl'), (('of', 'colleagues'), 'case'), (('many', 'colleagues'), 'amod'), (('other', 'colleagues'), 'amod'), (('colleagues', 'help'), 'nmod'), (('within', 'department'), 'case'), (('the', 'department'), 'det'), (('IBM', 'department'), 'compound'), (('Watson', 'IBM'), 'flat'), (('and', 'advanced'), 'cc'), (('advanced', 'analytics'), 'amod'), (('analytics', 'department'), 'compound'), (('department', 'colleagues'), 'nmod'), (('.', 'possible'), 'punct')]

 Named Entites are: 
>> [('IBM Watson', 'ORG')]

================================ Paragraph 267 =================================

Finally, special thanks go to Apostolos Mourouzis and  Patricio Fernandez Weisson.  


------------------- Sentence 1 -------------------

 Finally, special thanks go to Apostolos Mourouzis and  Patricio Fernandez Weisson. 

Tokens are: 
>> ['Finally', ',', 'special', 'thanks', 'go', 'to', 'Apostolos', 'Mourouzis', 'and', 'Patricio', 'Fernandez', 'Weisson', '.'] 

 UPOS tags are: 
>> [('Finally', 'ADV'), (',', 'PUNCT'), ('special', 'ADJ'), ('thanks', 'NOUN'), ('go', 'VERB'), ('to', 'ADP'), ('Apostolos', 'PROPN'), ('Mourouzis', 'PROPN'), ('and', 'CCONJ'), ('Patricio', 'PROPN'), ('Fernandez', 'PROPN'), ('Weisson', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Finally', 'RB'), (',', ','), ('special', 'JJ'), ('thanks', 'NNS'), ('go', 'VBP'), ('to', 'IN'), ('Apostolos', 'NNP'), ('Mourouzis', 'NNP'), ('and', 'CC'), ('Patricio', 'NNP'), ('Fernandez', 'NNP'), ('Weisson', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('Finally', 'finally'), (',', ','), ('special', 'special'), ('thanks', 'thanks'), ('go', 'go'), ('to', 'to'), ('Apostolos', 'Apostolos'), ('Mourouzis', 'Mourouzis'), ('and', 'and'), ('Patricio', 'Patricio'), ('Fernandez', 'Fernandez'), ('Weisson', 'Weisson'), ('.', '.')] 

 Dependency tags are: 
>> [(('Finally', 'go'), 'advmod'), ((',', 'go'), 'punct'), (('special', 'thanks'), 'amod'), (('thanks', 'go'), 'nsubj'), (('go', 'root'), 'root'), (('to', 'Apostolos'), 'case'), (('Apostolos', 'go'), 'obl'), (('Mourouzis', 'Apostolos'), 'flat'), (('and', 'Patricio'), 'cc'), (('Patricio', 'Apostolos'), 'conj'), (('Fernandez', 'Patricio'), 'flat'), (('Weisson', 'Patricio'), 'flat'), (('.', 'go'), 'punct')]

 Named Entites are: 
>> [('Apostolos Mourouzis', 'PERSON'), ('Patricio Fernandez Weisson', 'PERSON')]

================================ Paragraph 268 =================================

Appendix Different types of learning Learning. which is one of the fundamentals of artificial  intelligence and machine learning, is when the algorithm  improves itself by looking at the data provided. There are two  elements involved: knowledge and feedback. Knowledge  provides information that’s already in the data, and the  algorithm can learn from feedback through interactions with  the user. This happens when a user gives the model feedback  about correct or falsely predicted outcomes. There are four  types of machine learning: supervised, unsupervised,  reinforcement and transfer. Currently the most often used  type is supervised learning, and thus we can say that the  most economical value is created within this category.


------------------- Sentence 1 -------------------

 Appendix Different types of learning Learning. 

Tokens are: 
>> ['Appendix', 'Different', 'types', 'of', 'learning', 'Learning', '.'] 

 UPOS tags are: 
>> [('Appendix', 'ADJ'), ('Different', 'ADJ'), ('types', 'NOUN'), ('of', 'SCONJ'), ('learning', 'NOUN'), ('Learning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Appendix', 'JJ'), ('Different', 'JJ'), ('types', 'NNS'), ('of', 'IN'), ('learning', 'NN'), ('Learning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Appendix', 'Appendix'), ('Different', 'different'), ('types', 'type'), ('of', 'of'), ('learning', 'learning'), ('Learning', 'learning'), ('.', '.')] 

 Dependency tags are: 
>> [(('Appendix', 'types'), 'amod'), (('Different', 'types'), 'amod'), (('types', 'root'), 'root'), (('of', 'Learning'), 'case'), (('learning', 'Learning'), 'compound'), (('Learning', 'types'), 'nmod'), (('.', 'types'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 which is one of the fundamentals of artificial  intelligence and machine learning, is when the algorithm  improves itself by looking at the data provided. 

Tokens are: 
>> ['which', 'is', 'one', 'of', 'the', 'fundamentals', 'of', 'artificial', 'intelligence', 'and', 'machine', 'learning', ',', 'is', 'when', 'the', 'algorithm', 'improves', 'itself', 'by', 'looking', 'at', 'the', 'data', 'provided', '.'] 

 UPOS tags are: 
>> [('which', 'PRON'), ('is', 'AUX'), ('one', 'NUM'), ('of', 'ADP'), ('the', 'DET'), ('fundamentals', 'NOUN'), ('of', 'ADP'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('and', 'CCONJ'), ('machine', 'NOUN'), ('learning', 'NOUN'), (',', 'PUNCT'), ('is', 'VERB'), ('when', 'SCONJ'), ('the', 'DET'), ('algorithm', 'NOUN'), ('improves', 'VERB'), ('itself', 'PRON'), ('by', 'SCONJ'), ('looking', 'VERB'), ('at', 'ADP'), ('the', 'DET'), ('data', 'NOUN'), ('provided', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('which', 'WDT'), ('is', 'VBZ'), ('one', 'CD'), ('of', 'IN'), ('the', 'DT'), ('fundamentals', 'NNS'), ('of', 'IN'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('and', 'CC'), ('machine', 'NN'), ('learning', 'NN'), (',', ','), ('is', 'VBZ'), ('when', 'WRB'), ('the', 'DT'), ('algorithm', 'NN'), ('improves', 'VBZ'), ('itself', 'PRP'), ('by', 'IN'), ('looking', 'VBG'), ('at', 'IN'), ('the', 'DT'), ('data', 'NNS'), ('provided', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('which', 'which'), ('is', 'be'), ('one', 'one'), ('of', 'of'), ('the', 'the'), ('fundamentals', 'fundamental'), ('of', 'of'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('and', 'and'), ('machine', 'machine'), ('learning', 'learning'), (',', ','), ('is', 'be'), ('when', 'when'), ('the', 'the'), ('algorithm', 'algorithm'), ('improves', 'improve'), ('itself', 'itself'), ('by', 'by'), ('looking', 'look'), ('at', 'at'), ('the', 'the'), ('data', 'datum'), ('provided', 'provide'), ('.', '.')] 

 Dependency tags are: 
>> [(('which', 'one'), 'nsubj'), (('is', 'one'), 'cop'), (('one', 'is'), 'nsubj'), (('of', 'fundamentals'), 'case'), (('the', 'fundamentals'), 'det'), (('fundamentals', 'one'), 'nmod'), (('of', 'intelligence'), 'case'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'fundamentals'), 'nmod'), (('and', 'learning'), 'cc'), (('machine', 'learning'), 'compound'), (('learning', 'intelligence'), 'conj'), ((',', 'is'), 'punct'), (('is', 'root'), 'root'), (('when', 'improves'), 'mark'), (('the', 'algorithm'), 'det'), (('algorithm', 'improves'), 'nsubj'), (('improves', 'is'), 'advcl'), (('itself', 'improves'), 'obj'), (('by', 'looking'), 'mark'), (('looking', 'improves'), 'advcl'), (('at', 'data'), 'case'), (('the', 'data'), 'det'), (('data', 'looking'), 'obl'), (('provided', 'data'), 'acl'), (('.', 'is'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 There are two  elements involved: knowledge and feedback. 

Tokens are: 
>> ['There', 'are', 'two', 'elements', 'involved', ':', 'knowledge', 'and', 'feedback', '.'] 

 UPOS tags are: 
>> [('There', 'PRON'), ('are', 'VERB'), ('two', 'NUM'), ('elements', 'NOUN'), ('involved', 'VERB'), (':', 'PUNCT'), ('knowledge', 'NOUN'), ('and', 'CCONJ'), ('feedback', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('There', 'EX'), ('are', 'VBP'), ('two', 'CD'), ('elements', 'NNS'), ('involved', 'VBN'), (':', ':'), ('knowledge', 'NN'), ('and', 'CC'), ('feedback', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('There', 'there'), ('are', 'be'), ('two', 'two'), ('elements', 'element'), ('involved', 'involve'), (':', ':'), ('knowledge', 'knowledge'), ('and', 'and'), ('feedback', 'feedback'), ('.', '.')] 

 Dependency tags are: 
>> [(('There', 'are'), 'expl'), (('are', 'root'), 'root'), (('two', 'elements'), 'nummod'), (('elements', 'are'), 'nsubj'), (('involved', 'elements'), 'acl'), ((':', 'knowledge'), 'punct'), (('knowledge', 'involved'), 'obj'), (('and', 'feedback'), 'cc'), (('feedback', 'knowledge'), 'conj'), (('.', 'are'), 'punct')]

 Named Entites are: 
>> [('two', 'CARDINAL')]

------------------- Sentence 4 -------------------

 Knowledge  provides information that’s already in the data, and the  algorithm can learn from feedback through interactions with  the user. 

Tokens are: 
>> ['Knowledge', 'provides', 'information', 'that', '’s', 'already', 'in', 'the', 'data', ',', 'and', 'the', 'algorithm', 'can', 'learn', 'from', 'feedback', 'through', 'interactions', 'with', 'the', 'user', '.'] 

 UPOS tags are: 
>> [('Knowledge', 'NOUN'), ('provides', 'VERB'), ('information', 'NOUN'), ('that', 'PRON'), ('’s', 'AUX'), ('already', 'ADV'), ('in', 'ADP'), ('the', 'DET'), ('data', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('the', 'DET'), ('algorithm', 'NOUN'), ('can', 'AUX'), ('learn', 'VERB'), ('from', 'ADP'), ('feedback', 'NOUN'), ('through', 'ADP'), ('interactions', 'NOUN'), ('with', 'ADP'), ('the', 'DET'), ('user', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Knowledge', 'NN'), ('provides', 'VBZ'), ('information', 'NN'), ('that', 'WDT'), ('’s', 'VBZ'), ('already', 'RB'), ('in', 'IN'), ('the', 'DT'), ('data', 'NN'), (',', ','), ('and', 'CC'), ('the', 'DT'), ('algorithm', 'NN'), ('can', 'MD'), ('learn', 'VB'), ('from', 'IN'), ('feedback', 'NN'), ('through', 'IN'), ('interactions', 'NNS'), ('with', 'IN'), ('the', 'DT'), ('user', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Knowledge', 'knowledge'), ('provides', 'provide'), ('information', 'information'), ('that', 'that'), ('’s', 'be'), ('already', 'already'), ('in', 'in'), ('the', 'the'), ('data', 'datum'), (',', ','), ('and', 'and'), ('the', 'the'), ('algorithm', 'algorithm'), ('can', 'can'), ('learn', 'learn'), ('from', 'from'), ('feedback', 'feedback'), ('through', 'through'), ('interactions', 'interaction'), ('with', 'with'), ('the', 'the'), ('user', 'user'), ('.', '.')] 

 Dependency tags are: 
>> [(('Knowledge', 'provides'), 'nsubj'), (('provides', 'root'), 'root'), (('information', 'provides'), 'obj'), (('that', 'data'), 'nsubj'), (('’s', 'data'), 'cop'), (('already', 'data'), 'advmod'), (('in', 'data'), 'case'), (('the', 'data'), 'det'), (('data', 'information'), 'acl:relcl'), ((',', 'learn'), 'punct'), (('and', 'learn'), 'cc'), (('the', 'algorithm'), 'det'), (('algorithm', 'learn'), 'nsubj'), (('can', 'learn'), 'aux'), (('learn', 'provides'), 'conj'), (('from', 'feedback'), 'case'), (('feedback', 'learn'), 'obl'), (('through', 'interactions'), 'case'), (('interactions', 'learn'), 'obl'), (('with', 'user'), 'case'), (('the', 'user'), 'det'), (('user', 'interactions'), 'nmod'), (('.', 'provides'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 This happens when a user gives the model feedback  about correct or falsely predicted outcomes. 

Tokens are: 
>> ['This', 'happens', 'when', 'a', 'user', 'gives', 'the', 'model', 'feedback', 'about', 'correct', 'or', 'falsely', 'predicted', 'outcomes', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('happens', 'VERB'), ('when', 'SCONJ'), ('a', 'DET'), ('user', 'NOUN'), ('gives', 'VERB'), ('the', 'DET'), ('model', 'NOUN'), ('feedback', 'NOUN'), ('about', 'ADP'), ('correct', 'ADJ'), ('or', 'CCONJ'), ('falsely', 'ADV'), ('predicted', 'VERB'), ('outcomes', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('happens', 'VBZ'), ('when', 'WRB'), ('a', 'DT'), ('user', 'NN'), ('gives', 'VBZ'), ('the', 'DT'), ('model', 'NN'), ('feedback', 'NN'), ('about', 'IN'), ('correct', 'JJ'), ('or', 'CC'), ('falsely', 'RB'), ('predicted', 'VBN'), ('outcomes', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('happens', 'happen'), ('when', 'when'), ('a', 'a'), ('user', 'user'), ('gives', 'give'), ('the', 'the'), ('model', 'model'), ('feedback', 'feedback'), ('about', 'about'), ('correct', 'correct'), ('or', 'or'), ('falsely', 'falsely'), ('predicted', 'predict'), ('outcomes', 'outcome'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'happens'), 'nsubj'), (('happens', 'root'), 'root'), (('when', 'gives'), 'mark'), (('a', 'user'), 'det'), (('user', 'gives'), 'nsubj'), (('gives', 'happens'), 'advcl'), (('the', 'feedback'), 'det'), (('model', 'feedback'), 'compound'), (('feedback', 'gives'), 'obj'), (('about', 'outcomes'), 'case'), (('correct', 'outcomes'), 'amod'), (('or', 'predicted'), 'cc'), (('falsely', 'predicted'), 'advmod'), (('predicted', 'correct'), 'conj'), (('outcomes', 'feedback'), 'nmod'), (('.', 'happens'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 There are four  types of machine learning: supervised, unsupervised,  reinforcement and transfer. 

Tokens are: 
>> ['There', 'are', 'four', 'types', 'of', 'machine', 'learning', ':', 'supervised', ',', 'unsupervised', ',', 'reinforcement', 'and', 'transfer', '.'] 

 UPOS tags are: 
>> [('There', 'PRON'), ('are', 'VERB'), ('four', 'NUM'), ('types', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), (':', 'PUNCT'), ('supervised', 'VERB'), (',', 'PUNCT'), ('unsupervised', 'ADJ'), (',', 'PUNCT'), ('reinforcement', 'NOUN'), ('and', 'CCONJ'), ('transfer', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('There', 'EX'), ('are', 'VBP'), ('four', 'CD'), ('types', 'NNS'), ('of', 'IN'), ('machine', 'NN'), ('learning', 'NN'), (':', ':'), ('supervised', 'VBN'), (',', ','), ('unsupervised', 'JJ'), (',', ','), ('reinforcement', 'NN'), ('and', 'CC'), ('transfer', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('There', 'there'), ('are', 'be'), ('four', 'four'), ('types', 'type'), ('of', 'of'), ('machine', 'machine'), ('learning', 'learning'), (':', ':'), ('supervised', 'supervise'), (',', ','), ('unsupervised', 'unsupervised'), (',', ','), ('reinforcement', 'reinforcement'), ('and', 'and'), ('transfer', 'transfer'), ('.', '.')] 

 Dependency tags are: 
>> [(('There', 'are'), 'expl'), (('are', 'root'), 'root'), (('four', 'types'), 'nummod'), (('types', 'are'), 'nsubj'), (('of', 'learning'), 'case'), (('machine', 'learning'), 'compound'), (('learning', 'types'), 'nmod'), ((':', 'types'), 'punct'), (('supervised', 'types'), 'appos'), ((',', 'unsupervised'), 'punct'), (('unsupervised', 'supervised'), 'conj'), ((',', 'reinforcement'), 'punct'), (('reinforcement', 'supervised'), 'conj'), (('and', 'transfer'), 'cc'), (('transfer', 'supervised'), 'conj'), (('.', 'are'), 'punct')]

 Named Entites are: 
>> [('four', 'CARDINAL')]

------------------- Sentence 7 -------------------

 Currently the most often used  type is supervised learning, and thus we can say that the  most economical value is created within this category. 

Tokens are: 
>> ['Currently', 'the', 'most', 'often', 'used', 'type', 'is', 'supervised', 'learning', ',', 'and', 'thus', 'we', 'can', 'say', 'that', 'the', 'most', 'economical', 'value', 'is', 'created', 'within', 'this', 'category', '.'] 

 UPOS tags are: 
>> [('Currently', 'ADV'), ('the', 'DET'), ('most', 'ADV'), ('often', 'ADV'), ('used', 'VERB'), ('type', 'NOUN'), ('is', 'AUX'), ('supervised', 'VERB'), ('learning', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('thus', 'ADV'), ('we', 'PRON'), ('can', 'AUX'), ('say', 'VERB'), ('that', 'SCONJ'), ('the', 'DET'), ('most', 'ADV'), ('economical', 'ADJ'), ('value', 'NOUN'), ('is', 'AUX'), ('created', 'VERB'), ('within', 'ADP'), ('this', 'DET'), ('category', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Currently', 'RB'), ('the', 'DT'), ('most', 'RBS'), ('often', 'RB'), ('used', 'VBN'), ('type', 'NN'), ('is', 'VBZ'), ('supervised', 'VBN'), ('learning', 'NN'), (',', ','), ('and', 'CC'), ('thus', 'RB'), ('we', 'PRP'), ('can', 'MD'), ('say', 'VB'), ('that', 'IN'), ('the', 'DT'), ('most', 'RBS'), ('economical', 'JJ'), ('value', 'NN'), ('is', 'VBZ'), ('created', 'VBN'), ('within', 'IN'), ('this', 'DT'), ('category', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Currently', 'currently'), ('the', 'the'), ('most', 'most'), ('often', 'often'), ('used', 'use'), ('type', 'type'), ('is', 'be'), ('supervised', 'supervise'), ('learning', 'learning'), (',', ','), ('and', 'and'), ('thus', 'thus'), ('we', 'we'), ('can', 'can'), ('say', 'say'), ('that', 'that'), ('the', 'the'), ('most', 'most'), ('economical', 'economical'), ('value', 'value'), ('is', 'be'), ('created', 'create'), ('within', 'within'), ('this', 'this'), ('category', 'category'), ('.', '.')] 

 Dependency tags are: 
>> [(('Currently', 'supervised'), 'advmod'), (('the', 'type'), 'det'), (('most', 'often'), 'advmod'), (('often', 'used'), 'advmod'), (('used', 'type'), 'amod'), (('type', 'supervised'), 'nsubj:pass'), (('is', 'learning'), 'cop'), (('supervised', 'root'), 'root'), (('learning', 'supervised'), 'obj'), ((',', 'say'), 'punct'), (('and', 'say'), 'cc'), (('thus', 'say'), 'advmod'), (('we', 'say'), 'nsubj'), (('can', 'say'), 'aux'), (('say', 'supervised'), 'conj'), (('that', 'created'), 'mark'), (('the', 'value'), 'det'), (('most', 'economical'), 'advmod'), (('economical', 'value'), 'amod'), (('value', 'created'), 'nsubj:pass'), (('is', 'created'), 'aux:pass'), (('created', 'say'), 'ccomp'), (('within', 'category'), 'case'), (('this', 'category'), 'det'), (('category', 'created'), 'obl'), (('.', 'learning'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 269 =================================

IBM Services     19 


------------------- Sentence 1 -------------------

 IBM Services     19 

Tokens are: 
>> ['IBM', 'Services', '19'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('Services', 'PROPN'), ('19', 'NUM')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('Services', 'NNPS'), ('19', 'CD')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('Services', 'Service'), ('19', '19')] 

 Dependency tags are: 
>> [(('IBM', 'Services'), 'compound'), (('Services', 'root'), 'root'), (('19', 'Services'), 'nummod')]

 Named Entites are: 
>> [('IBM Services     19', 'ORG')]

================================ Paragraph 270 =================================

Supervised learning is a learning method that maps an input  to an output using human data and feedback to improve. A  data set is provided with associated correct labels to the  data. An example would be pictures of animals in which all  pictures were correctly labelled as the animal in the pictures.  Supervised learning trains based on historical data and  builds rules that can be applied to predict future problems.  The better the data set, the better the output.  


------------------- Sentence 1 -------------------

 Supervised learning is a learning method that maps an input  to an output using human data and feedback to improve. 

Tokens are: 
>> ['Supervised', 'learning', 'is', 'a', 'learning', 'method', 'that', 'maps', 'an', 'input', 'to', 'an', 'output', 'using', 'human', 'data', 'and', 'feedback', 'to', 'improve', '.'] 

 UPOS tags are: 
>> [('Supervised', 'VERB'), ('learning', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('learning', 'NOUN'), ('method', 'NOUN'), ('that', 'PRON'), ('maps', 'VERB'), ('an', 'DET'), ('input', 'NOUN'), ('to', 'ADP'), ('an', 'DET'), ('output', 'NOUN'), ('using', 'VERB'), ('human', 'ADJ'), ('data', 'NOUN'), ('and', 'CCONJ'), ('feedback', 'NOUN'), ('to', 'PART'), ('improve', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Supervised', 'VBN'), ('learning', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('learning', 'NN'), ('method', 'NN'), ('that', 'WDT'), ('maps', 'VBZ'), ('an', 'DT'), ('input', 'NN'), ('to', 'IN'), ('an', 'DT'), ('output', 'NN'), ('using', 'VBG'), ('human', 'JJ'), ('data', 'NNS'), ('and', 'CC'), ('feedback', 'NN'), ('to', 'TO'), ('improve', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('Supervised', 'supervise'), ('learning', 'learning'), ('is', 'be'), ('a', 'a'), ('learning', 'learning'), ('method', 'method'), ('that', 'that'), ('maps', 'map'), ('an', 'a'), ('input', 'input'), ('to', 'to'), ('an', 'a'), ('output', 'output'), ('using', 'use'), ('human', 'human'), ('data', 'datum'), ('and', 'and'), ('feedback', 'feedback'), ('to', 'to'), ('improve', 'improve'), ('.', '.')] 

 Dependency tags are: 
>> [(('Supervised', 'learning'), 'amod'), (('learning', 'method'), 'nsubj'), (('is', 'method'), 'cop'), (('a', 'method'), 'det'), (('learning', 'method'), 'compound'), (('method', 'root'), 'root'), (('that', 'maps'), 'nsubj'), (('maps', 'method'), 'acl:relcl'), (('an', 'input'), 'det'), (('input', 'maps'), 'obj'), (('to', 'output'), 'case'), (('an', 'output'), 'det'), (('output', 'input'), 'nmod'), (('using', 'output'), 'acl'), (('human', 'data'), 'amod'), (('data', 'using'), 'obj'), (('and', 'feedback'), 'cc'), (('feedback', 'data'), 'conj'), (('to', 'improve'), 'mark'), (('improve', 'using'), 'advcl'), (('.', 'method'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 A  data set is provided with associated correct labels to the  data. 

Tokens are: 
>> ['A', 'data', 'set', 'is', 'provided', 'with', 'associated', 'correct', 'labels', 'to', 'the', 'data', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('data', 'NOUN'), ('set', 'NOUN'), ('is', 'AUX'), ('provided', 'VERB'), ('with', 'ADP'), ('associated', 'VERB'), ('correct', 'ADJ'), ('labels', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('data', 'NN'), ('set', 'NN'), ('is', 'VBZ'), ('provided', 'VBN'), ('with', 'IN'), ('associated', 'VBN'), ('correct', 'JJ'), ('labels', 'NNS'), ('to', 'IN'), ('the', 'DT'), ('data', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('data', 'datum'), ('set', 'set'), ('is', 'be'), ('provided', 'provide'), ('with', 'with'), ('associated', 'associate'), ('correct', 'correct'), ('labels', 'label'), ('to', 'to'), ('the', 'the'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'set'), 'det'), (('data', 'set'), 'compound'), (('set', 'provided'), 'nsubj:pass'), (('is', 'provided'), 'aux:pass'), (('provided', 'root'), 'root'), (('with', 'labels'), 'case'), (('associated', 'labels'), 'amod'), (('correct', 'labels'), 'amod'), (('labels', 'provided'), 'obl'), (('to', 'data'), 'case'), (('the', 'data'), 'det'), (('data', 'labels'), 'nmod'), (('.', 'provided'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 An example would be pictures of animals in which all  pictures were correctly labelled as the animal in the pictures. 

Tokens are: 
>> ['An', 'example', 'would', 'be', 'pictures', 'of', 'animals', 'in', 'which', 'all', 'pictures', 'were', 'correctly', 'labelled', 'as', 'the', 'animal', 'in', 'the', 'pictures', '.'] 

 UPOS tags are: 
>> [('An', 'DET'), ('example', 'NOUN'), ('would', 'AUX'), ('be', 'AUX'), ('pictures', 'NOUN'), ('of', 'ADP'), ('animals', 'NOUN'), ('in', 'ADP'), ('which', 'PRON'), ('all', 'DET'), ('pictures', 'NOUN'), ('were', 'AUX'), ('correctly', 'ADV'), ('labelled', 'VERB'), ('as', 'ADP'), ('the', 'DET'), ('animal', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('pictures', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('An', 'DT'), ('example', 'NN'), ('would', 'MD'), ('be', 'VB'), ('pictures', 'NNS'), ('of', 'IN'), ('animals', 'NNS'), ('in', 'IN'), ('which', 'WDT'), ('all', 'DT'), ('pictures', 'NNS'), ('were', 'VBD'), ('correctly', 'RB'), ('labelled', 'VBN'), ('as', 'IN'), ('the', 'DT'), ('animal', 'NN'), ('in', 'IN'), ('the', 'DT'), ('pictures', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('An', 'a'), ('example', 'example'), ('would', 'would'), ('be', 'be'), ('pictures', 'picture'), ('of', 'of'), ('animals', 'animal'), ('in', 'in'), ('which', 'which'), ('all', 'all'), ('pictures', 'picture'), ('were', 'be'), ('correctly', 'correctly'), ('labelled', 'label'), ('as', 'as'), ('the', 'the'), ('animal', 'animal'), ('in', 'in'), ('the', 'the'), ('pictures', 'picture'), ('.', '.')] 

 Dependency tags are: 
>> [(('An', 'example'), 'det'), (('example', 'pictures'), 'nsubj'), (('would', 'pictures'), 'aux'), (('be', 'pictures'), 'cop'), (('pictures', 'root'), 'root'), (('of', 'animals'), 'case'), (('animals', 'pictures'), 'nmod'), (('in', 'which'), 'case'), (('which', 'labelled'), 'obl'), (('all', 'pictures'), 'det'), (('pictures', 'labelled'), 'nsubj:pass'), (('were', 'labelled'), 'aux:pass'), (('correctly', 'labelled'), 'advmod'), (('labelled', 'animals'), 'acl:relcl'), (('as', 'animal'), 'case'), (('the', 'animal'), 'det'), (('animal', 'labelled'), 'obl'), (('in', 'pictures'), 'case'), (('the', 'pictures'), 'det'), (('pictures', 'labelled'), 'obl'), (('.', 'pictures'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Supervised learning trains based on historical data and  builds rules that can be applied to predict future problems. 

Tokens are: 
>> ['Supervised', 'learning', 'trains', 'based', 'on', 'historical', 'data', 'and', 'builds', 'rules', 'that', 'can', 'be', 'applied', 'to', 'predict', 'future', 'problems', '.'] 

 UPOS tags are: 
>> [('Supervised', 'VERB'), ('learning', 'VERB'), ('trains', 'NOUN'), ('based', 'VERB'), ('on', 'ADP'), ('historical', 'ADJ'), ('data', 'NOUN'), ('and', 'CCONJ'), ('builds', 'NOUN'), ('rules', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('applied', 'VERB'), ('to', 'PART'), ('predict', 'VERB'), ('future', 'ADJ'), ('problems', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Supervised', 'VBN'), ('learning', 'VBG'), ('trains', 'NNS'), ('based', 'VBN'), ('on', 'IN'), ('historical', 'JJ'), ('data', 'NNS'), ('and', 'CC'), ('builds', 'NNS'), ('rules', 'NNS'), ('that', 'WDT'), ('can', 'MD'), ('be', 'VB'), ('applied', 'VBN'), ('to', 'TO'), ('predict', 'VB'), ('future', 'JJ'), ('problems', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Supervised', 'supervise'), ('learning', 'learn'), ('trains', 'train'), ('based', 'base'), ('on', 'on'), ('historical', 'historical'), ('data', 'datum'), ('and', 'and'), ('builds', 'build'), ('rules', 'rule'), ('that', 'that'), ('can', 'can'), ('be', 'be'), ('applied', 'apply'), ('to', 'to'), ('predict', 'predict'), ('future', 'future'), ('problems', 'problem'), ('.', '.')] 

 Dependency tags are: 
>> [(('Supervised', 'trains'), 'amod'), (('learning', 'trains'), 'amod'), (('trains', 'root'), 'root'), (('based', 'trains'), 'acl'), (('on', 'data'), 'case'), (('historical', 'data'), 'amod'), (('data', 'based'), 'obl'), (('and', 'rules'), 'cc'), (('builds', 'data'), 'conj'), (('rules', 'data'), 'conj'), (('that', 'applied'), 'nsubj:pass'), (('can', 'applied'), 'aux'), (('be', 'applied'), 'aux:pass'), (('applied', 'rules'), 'acl:relcl'), (('to', 'predict'), 'mark'), (('predict', 'applied'), 'xcomp'), (('future', 'problems'), 'amod'), (('problems', 'predict'), 'obj'), (('.', 'Supervised'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 The better the data set, the better the output. 

Tokens are: 
>> ['The', 'better', 'the', 'data', 'set', ',', 'the', 'better', 'the', 'output', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('better', 'ADJ'), ('the', 'DET'), ('data', 'NOUN'), ('set', 'VERB'), (',', 'PUNCT'), ('the', 'DET'), ('better', 'ADJ'), ('the', 'DET'), ('output', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('better', 'JJR'), ('the', 'DT'), ('data', 'NNS'), ('set', 'VBN'), (',', ','), ('the', 'DT'), ('better', 'JJR'), ('the', 'DT'), ('output', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('better', 'good'), ('the', 'the'), ('data', 'datum'), ('set', 'set'), (',', ','), ('the', 'the'), ('better', 'good'), ('the', 'the'), ('output', 'output'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'better'), 'det'), (('better', 'better'), 'advcl'), (('the', 'data'), 'det'), (('data', 'set'), 'nsubj'), (('set', 'better'), 'acl:relcl'), ((',', 'better'), 'punct'), (('the', 'better'), 'det'), (('better', 'root'), 'root'), (('the', 'output'), 'det'), (('output', 'better'), 'nsubj'), (('.', 'better'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 271 =================================

You may use this type of learning when you want to classify  or predict outcomes. With regression, you are predicting a  continuous value (“How much will the stock price be?”).  With classifying, you are assigning a label to an input (“Is  this picture a man or a woman?”). Other examples would  be using speech recognition to examine the sentiments of  people calling your customer service center, or image  recognition to define products in a warehouse so they  could be properly sorted. 


------------------- Sentence 1 -------------------

 You may use this type of learning when you want to classify  or predict outcomes. 

Tokens are: 
>> ['You', 'may', 'use', 'this', 'type', 'of', 'learning', 'when', 'you', 'want', 'to', 'classify', 'or', 'predict', 'outcomes', '.'] 

 UPOS tags are: 
>> [('You', 'PRON'), ('may', 'AUX'), ('use', 'VERB'), ('this', 'DET'), ('type', 'NOUN'), ('of', 'ADP'), ('learning', 'NOUN'), ('when', 'SCONJ'), ('you', 'PRON'), ('want', 'VERB'), ('to', 'PART'), ('classify', 'VERB'), ('or', 'CCONJ'), ('predict', 'VERB'), ('outcomes', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('You', 'PRP'), ('may', 'MD'), ('use', 'VB'), ('this', 'DT'), ('type', 'NN'), ('of', 'IN'), ('learning', 'NN'), ('when', 'WRB'), ('you', 'PRP'), ('want', 'VBP'), ('to', 'TO'), ('classify', 'VB'), ('or', 'CC'), ('predict', 'VB'), ('outcomes', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('You', 'you'), ('may', 'may'), ('use', 'use'), ('this', 'this'), ('type', 'type'), ('of', 'of'), ('learning', 'learning'), ('when', 'when'), ('you', 'you'), ('want', 'want'), ('to', 'to'), ('classify', 'classify'), ('or', 'or'), ('predict', 'predict'), ('outcomes', 'outcome'), ('.', '.')] 

 Dependency tags are: 
>> [(('You', 'use'), 'nsubj'), (('may', 'use'), 'aux'), (('use', 'root'), 'root'), (('this', 'type'), 'det'), (('type', 'use'), 'obj'), (('of', 'learning'), 'case'), (('learning', 'type'), 'nmod'), (('when', 'want'), 'mark'), (('you', 'want'), 'nsubj'), (('want', 'use'), 'advcl'), (('to', 'classify'), 'mark'), (('classify', 'want'), 'xcomp'), (('or', 'predict'), 'cc'), (('predict', 'classify'), 'conj'), (('outcomes', 'classify'), 'obj'), (('.', 'use'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 With regression, you are predicting a  continuous value (“How much will the stock price be?”). 

Tokens are: 
>> ['With', 'regression', ',', 'you', 'are', 'predicting', 'a', 'continuous', 'value', '(', '“', 'How', 'much', 'will', 'the', 'stock', 'price', 'be', '?', '”', ')', '.'] 

 UPOS tags are: 
>> [('With', 'ADP'), ('regression', 'NOUN'), (',', 'PUNCT'), ('you', 'PRON'), ('are', 'AUX'), ('predicting', 'VERB'), ('a', 'DET'), ('continuous', 'ADJ'), ('value', 'NOUN'), ('(', 'PUNCT'), ('“', 'PUNCT'), ('How', 'ADV'), ('much', 'ADJ'), ('will', 'AUX'), ('the', 'DET'), ('stock', 'NOUN'), ('price', 'NOUN'), ('be', 'VERB'), ('?', 'PUNCT'), ('”', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('With', 'IN'), ('regression', 'NN'), (',', ','), ('you', 'PRP'), ('are', 'VBP'), ('predicting', 'VBG'), ('a', 'DT'), ('continuous', 'JJ'), ('value', 'NN'), ('(', '-LRB-'), ('“', '``'), ('How', 'WRB'), ('much', 'JJ'), ('will', 'MD'), ('the', 'DT'), ('stock', 'NN'), ('price', 'NN'), ('be', 'VB'), ('?', '.'), ('”', "''"), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('With', 'with'), ('regression', 'regression'), (',', ','), ('you', 'you'), ('are', 'be'), ('predicting', 'predict'), ('a', 'a'), ('continuous', 'continuous'), ('value', 'value'), ('(', '('), ('“', "''"), ('How', 'how'), ('much', 'much'), ('will', 'will'), ('the', 'the'), ('stock', 'stock'), ('price', 'price'), ('be', 'be'), ('?', '?'), ('”', "''"), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('With', 'regression'), 'case'), (('regression', 'predicting'), 'obl'), ((',', 'predicting'), 'punct'), (('you', 'predicting'), 'nsubj'), (('are', 'predicting'), 'aux'), (('predicting', 'root'), 'root'), (('a', 'value'), 'det'), (('continuous', 'value'), 'amod'), (('value', 'predicting'), 'obj'), (('(', 'be'), 'punct'), (('“', 'be'), 'punct'), (('How', 'much'), 'advmod'), (('much', 'be'), 'advmod'), (('will', 'be'), 'aux'), (('the', 'price'), 'det'), (('stock', 'price'), 'compound'), (('price', 'be'), 'nsubj'), (('be', 'predicting'), 'parataxis'), (('?', 'be'), 'punct'), (('”', 'be'), 'punct'), ((')', 'be'), 'punct'), (('.', 'predicting'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 With classifying, you are assigning a label to an input (“Is  this picture a man or a woman?”). 

Tokens are: 
>> ['With', 'classifying', ',', 'you', 'are', 'assigning', 'a', 'label', 'to', 'an', 'input', '(', '“', 'Is', 'this', 'picture', 'a', 'man', 'or', 'a', 'woman', '?', '”', ')', '.'] 

 UPOS tags are: 
>> [('With', 'SCONJ'), ('classifying', 'VERB'), (',', 'PUNCT'), ('you', 'PRON'), ('are', 'AUX'), ('assigning', 'VERB'), ('a', 'DET'), ('label', 'NOUN'), ('to', 'ADP'), ('an', 'DET'), ('input', 'NOUN'), ('(', 'PUNCT'), ('“', 'PUNCT'), ('Is', 'AUX'), ('this', 'DET'), ('picture', 'NOUN'), ('a', 'DET'), ('man', 'NOUN'), ('or', 'CCONJ'), ('a', 'DET'), ('woman', 'NOUN'), ('?', 'PUNCT'), ('”', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('With', 'IN'), ('classifying', 'VBG'), (',', ','), ('you', 'PRP'), ('are', 'VBP'), ('assigning', 'VBG'), ('a', 'DT'), ('label', 'NN'), ('to', 'IN'), ('an', 'DT'), ('input', 'NN'), ('(', '-LRB-'), ('“', '``'), ('Is', 'VBZ'), ('this', 'DT'), ('picture', 'NN'), ('a', 'DT'), ('man', 'NN'), ('or', 'CC'), ('a', 'DT'), ('woman', 'NN'), ('?', '.'), ('”', "''"), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('With', 'with'), ('classifying', 'classify'), (',', ','), ('you', 'you'), ('are', 'be'), ('assigning', 'assign'), ('a', 'a'), ('label', 'label'), ('to', 'to'), ('an', 'a'), ('input', 'input'), ('(', '('), ('“', "''"), ('Is', 'be'), ('this', 'this'), ('picture', 'picture'), ('a', 'a'), ('man', 'man'), ('or', 'or'), ('a', 'a'), ('woman', 'woman'), ('?', '?'), ('”', "''"), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('With', 'classifying'), 'mark'), (('classifying', 'assigning'), 'advcl'), ((',', 'assigning'), 'punct'), (('you', 'assigning'), 'nsubj'), (('are', 'assigning'), 'aux'), (('assigning', 'root'), 'root'), (('a', 'label'), 'det'), (('label', 'assigning'), 'obj'), (('to', 'input'), 'case'), (('an', 'input'), 'det'), (('input', 'label'), 'nmod'), (('(', 'man'), 'punct'), (('“', 'man'), 'punct'), (('Is', 'man'), 'cop'), (('this', 'picture'), 'det'), (('picture', 'man'), 'nsubj'), (('a', 'man'), 'det'), (('man', 'assigning'), 'parataxis'), (('or', 'woman'), 'cc'), (('a', 'woman'), 'det'), (('woman', 'man'), 'conj'), (('?', 'man'), 'punct'), (('”', 'man'), 'punct'), ((')', 'man'), 'punct'), (('.', 'assigning'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Other examples would  be using speech recognition to examine the sentiments of  people calling your customer service center, or image  recognition to define products in a warehouse so they  could be properly sorted. 

Tokens are: 
>> ['Other', 'examples', 'would', 'be', 'using', 'speech', 'recognition', 'to', 'examine', 'the', 'sentiments', 'of', 'people', 'calling', 'your', 'customer', 'service', 'center', ',', 'or', 'image', 'recognition', 'to', 'define', 'products', 'in', 'a', 'warehouse', 'so', 'they', 'could', 'be', 'properly', 'sorted', '.'] 

 UPOS tags are: 
>> [('Other', 'ADJ'), ('examples', 'NOUN'), ('would', 'AUX'), ('be', 'AUX'), ('using', 'VERB'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('to', 'PART'), ('examine', 'VERB'), ('the', 'DET'), ('sentiments', 'NOUN'), ('of', 'ADP'), ('people', 'NOUN'), ('calling', 'VERB'), ('your', 'PRON'), ('customer', 'NOUN'), ('service', 'NOUN'), ('center', 'NOUN'), (',', 'PUNCT'), ('or', 'CCONJ'), ('image', 'NOUN'), ('recognition', 'NOUN'), ('to', 'PART'), ('define', 'VERB'), ('products', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('warehouse', 'NOUN'), ('so', 'ADV'), ('they', 'PRON'), ('could', 'AUX'), ('be', 'AUX'), ('properly', 'ADV'), ('sorted', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Other', 'JJ'), ('examples', 'NNS'), ('would', 'MD'), ('be', 'VB'), ('using', 'VBG'), ('speech', 'NN'), ('recognition', 'NN'), ('to', 'TO'), ('examine', 'VB'), ('the', 'DT'), ('sentiments', 'NNS'), ('of', 'IN'), ('people', 'NNS'), ('calling', 'VBG'), ('your', 'PRP$'), ('customer', 'NN'), ('service', 'NN'), ('center', 'NN'), (',', ','), ('or', 'CC'), ('image', 'NN'), ('recognition', 'NN'), ('to', 'TO'), ('define', 'VB'), ('products', 'NNS'), ('in', 'IN'), ('a', 'DT'), ('warehouse', 'NN'), ('so', 'RB'), ('they', 'PRP'), ('could', 'MD'), ('be', 'VB'), ('properly', 'RB'), ('sorted', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('Other', 'other'), ('examples', 'example'), ('would', 'would'), ('be', 'be'), ('using', 'use'), ('speech', 'speech'), ('recognition', 'recognition'), ('to', 'to'), ('examine', 'examine'), ('the', 'the'), ('sentiments', 'sentiment'), ('of', 'of'), ('people', 'people'), ('calling', 'call'), ('your', 'you'), ('customer', 'customer'), ('service', 'service'), ('center', 'center'), (',', ','), ('or', 'or'), ('image', 'image'), ('recognition', 'recognition'), ('to', 'to'), ('define', 'define'), ('products', 'product'), ('in', 'in'), ('a', 'a'), ('warehouse', 'warehouse'), ('so', 'so'), ('they', 'they'), ('could', 'could'), ('be', 'be'), ('properly', 'properly'), ('sorted', 'sort'), ('.', '.')] 

 Dependency tags are: 
>> [(('Other', 'examples'), 'amod'), (('examples', 'using'), 'nsubj'), (('would', 'using'), 'aux'), (('be', 'using'), 'aux'), (('using', 'root'), 'root'), (('speech', 'recognition'), 'compound'), (('recognition', 'using'), 'obj'), (('to', 'examine'), 'mark'), (('examine', 'using'), 'advcl'), (('the', 'sentiments'), 'det'), (('sentiments', 'examine'), 'obj'), (('of', 'people'), 'case'), (('people', 'sentiments'), 'nmod'), (('calling', 'people'), 'acl'), (('your', 'center'), 'nmod:poss'), (('customer', 'service'), 'compound'), (('service', 'center'), 'compound'), (('center', 'calling'), 'obj'), ((',', 'recognition'), 'punct'), (('or', 'recognition'), 'cc'), (('image', 'recognition'), 'compound'), (('recognition', 'sentiments'), 'conj'), (('to', 'define'), 'mark'), (('define', 'recognition'), 'acl'), (('products', 'define'), 'obj'), (('in', 'warehouse'), 'case'), (('a', 'warehouse'), 'det'), (('warehouse', 'define'), 'obl'), (('so', 'sorted'), 'mark'), (('they', 'sorted'), 'nsubj:pass'), (('could', 'sorted'), 'aux'), (('be', 'sorted'), 'aux:pass'), (('properly', 'sorted'), 'advmod'), (('sorted', 'using'), 'parataxis'), (('.', 'using'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 272 =================================

Unsupervised learning occurs when the algorithm is not  given a specific “wrong” or “right” outcome. Instead, the  algorithm is given unlabeled data. Unsupervised learning  is often used when you want to classify data but don’t know  how to do so. For example, you’d likely use unsupervised  learning if you had a set of customer data and you didn’t  know what kind of classes they would fit in. An unsupervised  learning algorithm can find natural groupings of similar  customers in a database and the user can then describe   and label them. 


------------------- Sentence 1 -------------------

 Unsupervised learning occurs when the algorithm is not  given a specific “wrong” or “right” outcome. 

Tokens are: 
>> ['Unsupervised', 'learning', 'occurs', 'when', 'the', 'algorithm', 'is', 'not', 'given', 'a', 'specific', '“', 'wrong', '”', 'or', '“', 'right', '”', 'outcome', '.'] 

 UPOS tags are: 
>> [('Unsupervised', 'VERB'), ('learning', 'NOUN'), ('occurs', 'VERB'), ('when', 'SCONJ'), ('the', 'DET'), ('algorithm', 'NOUN'), ('is', 'AUX'), ('not', 'PART'), ('given', 'VERB'), ('a', 'DET'), ('specific', 'ADJ'), ('“', 'PUNCT'), ('wrong', 'ADJ'), ('”', 'PUNCT'), ('or', 'CCONJ'), ('“', 'PUNCT'), ('right', 'ADJ'), ('”', 'PUNCT'), ('outcome', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Unsupervised', 'VBN'), ('learning', 'NN'), ('occurs', 'VBZ'), ('when', 'WRB'), ('the', 'DT'), ('algorithm', 'NN'), ('is', 'VBZ'), ('not', 'RB'), ('given', 'VBN'), ('a', 'DT'), ('specific', 'JJ'), ('“', '``'), ('wrong', 'JJ'), ('”', "''"), ('or', 'CC'), ('“', '``'), ('right', 'JJ'), ('”', "''"), ('outcome', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Unsupervised', 'unsupervise'), ('learning', 'learning'), ('occurs', 'occur'), ('when', 'when'), ('the', 'the'), ('algorithm', 'algorithm'), ('is', 'be'), ('not', 'not'), ('given', 'give'), ('a', 'a'), ('specific', 'specific'), ('“', "''"), ('wrong', 'wrong'), ('”', "''"), ('or', 'or'), ('“', "''"), ('right', 'right'), ('”', "''"), ('outcome', 'outcome'), ('.', '.')] 

 Dependency tags are: 
>> [(('Unsupervised', 'learning'), 'amod'), (('learning', 'occurs'), 'nsubj'), (('occurs', 'root'), 'root'), (('when', 'given'), 'mark'), (('the', 'algorithm'), 'det'), (('algorithm', 'given'), 'nsubj:pass'), (('is', 'given'), 'aux:pass'), (('not', 'given'), 'advmod'), (('given', 'occurs'), 'advcl'), (('a', 'outcome'), 'det'), (('specific', 'outcome'), 'amod'), (('“', 'wrong'), 'punct'), (('wrong', 'given'), 'xcomp'), (('”', 'wrong'), 'punct'), (('or', 'right'), 'cc'), (('“', 'right'), 'punct'), (('right', 'outcome'), 'amod'), (('”', 'right'), 'punct'), (('outcome', 'wrong'), 'conj'), (('.', 'occurs'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Instead, the  algorithm is given unlabeled data. 

Tokens are: 
>> ['Instead', ',', 'the', 'algorithm', 'is', 'given', 'unlabeled', 'data', '.'] 

 UPOS tags are: 
>> [('Instead', 'ADV'), (',', 'PUNCT'), ('the', 'DET'), ('algorithm', 'NOUN'), ('is', 'AUX'), ('given', 'VERB'), ('unlabeled', 'ADJ'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Instead', 'RB'), (',', ','), ('the', 'DT'), ('algorithm', 'NN'), ('is', 'VBZ'), ('given', 'VBN'), ('unlabeled', 'JJ'), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Instead', 'instead'), (',', ','), ('the', 'the'), ('algorithm', 'algorithm'), ('is', 'be'), ('given', 'give'), ('unlabeled', 'unlabeled'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('Instead', 'given'), 'advmod'), ((',', 'given'), 'punct'), (('the', 'algorithm'), 'det'), (('algorithm', 'given'), 'nsubj:pass'), (('is', 'given'), 'aux:pass'), (('given', 'root'), 'root'), (('unlabeled', 'data'), 'amod'), (('data', 'given'), 'obj'), (('.', 'given'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Unsupervised learning  is often used when you want to classify data but don’t know  how to do so. 

Tokens are: 
>> ['Unsupervised', 'learning', 'is', 'often', 'used', 'when', 'you', 'want', 'to', 'classify', 'data', 'but', 'do', 'n’t', 'know', 'how', 'to', 'do', 'so', '.'] 

 UPOS tags are: 
>> [('Unsupervised', 'VERB'), ('learning', 'NOUN'), ('is', 'AUX'), ('often', 'ADV'), ('used', 'VERB'), ('when', 'SCONJ'), ('you', 'PRON'), ('want', 'VERB'), ('to', 'PART'), ('classify', 'VERB'), ('data', 'NOUN'), ('but', 'CCONJ'), ('do', 'AUX'), ('n’t', 'PART'), ('know', 'VERB'), ('how', 'SCONJ'), ('to', 'PART'), ('do', 'VERB'), ('so', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Unsupervised', 'VBN'), ('learning', 'NN'), ('is', 'VBZ'), ('often', 'RB'), ('used', 'VBN'), ('when', 'WRB'), ('you', 'PRP'), ('want', 'VBP'), ('to', 'TO'), ('classify', 'VB'), ('data', 'NNS'), ('but', 'CC'), ('do', 'VBP'), ('n’t', 'RB'), ('know', 'VB'), ('how', 'WRB'), ('to', 'TO'), ('do', 'VB'), ('so', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('Unsupervised', 'unsupervise'), ('learning', 'learning'), ('is', 'be'), ('often', 'often'), ('used', 'use'), ('when', 'when'), ('you', 'you'), ('want', 'want'), ('to', 'to'), ('classify', 'classify'), ('data', 'datum'), ('but', 'but'), ('do', 'do'), ('n’t', 'not'), ('know', 'know'), ('how', 'how'), ('to', 'to'), ('do', 'do'), ('so', 'so'), ('.', '.')] 

 Dependency tags are: 
>> [(('Unsupervised', 'learning'), 'amod'), (('learning', 'used'), 'nsubj:pass'), (('is', 'used'), 'aux:pass'), (('often', 'used'), 'advmod'), (('used', 'root'), 'root'), (('when', 'want'), 'mark'), (('you', 'want'), 'nsubj'), (('want', 'used'), 'advcl'), (('to', 'classify'), 'mark'), (('classify', 'want'), 'xcomp'), (('data', 'classify'), 'obj'), (('but', 'know'), 'cc'), (('do', 'know'), 'aux'), (('n’t', 'know'), 'advmod'), (('know', 'used'), 'conj'), (('how', 'do'), 'mark'), (('to', 'do'), 'mark'), (('do', 'know'), 'ccomp'), (('so', 'do'), 'advmod'), (('.', 'used'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 For example, you’d likely use unsupervised  learning if you had a set of customer data and you didn’t  know what kind of classes they would fit in. 

Tokens are: 
>> ['For', 'example', ',', 'you', '’d', 'likely', 'use', 'unsupervised', 'learning', 'if', 'you', 'had', 'a', 'set', 'of', 'customer', 'data', 'and', 'you', 'did', 'n’t', 'know', 'what', 'kind', 'of', 'classes', 'they', 'would', 'fit', 'in', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('you', 'PRON'), ('’d', 'AUX'), ('likely', 'ADV'), ('use', 'VERB'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('if', 'SCONJ'), ('you', 'PRON'), ('had', 'VERB'), ('a', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('customer', 'NOUN'), ('data', 'NOUN'), ('and', 'CCONJ'), ('you', 'PRON'), ('did', 'AUX'), ('n’t', 'PART'), ('know', 'VERB'), ('what', 'DET'), ('kind', 'NOUN'), ('of', 'ADP'), ('classes', 'NOUN'), ('they', 'PRON'), ('would', 'AUX'), ('fit', 'VERB'), ('in', 'ADP'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('example', 'NN'), (',', ','), ('you', 'PRP'), ('’d', 'MD'), ('likely', 'RB'), ('use', 'VB'), ('unsupervised', 'JJ'), ('learning', 'NN'), ('if', 'IN'), ('you', 'PRP'), ('had', 'VBD'), ('a', 'DT'), ('set', 'NN'), ('of', 'IN'), ('customer', 'NN'), ('data', 'NNS'), ('and', 'CC'), ('you', 'PRP'), ('did', 'VBD'), ('n’t', 'RB'), ('know', 'VB'), ('what', 'WDT'), ('kind', 'NN'), ('of', 'IN'), ('classes', 'NNS'), ('they', 'PRP'), ('would', 'MD'), ('fit', 'VB'), ('in', 'IN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('example', 'example'), (',', ','), ('you', 'you'), ('’d', 'have'), ('likely', 'likely'), ('use', 'use'), ('unsupervised', 'unsupervised'), ('learning', 'learning'), ('if', 'if'), ('you', 'you'), ('had', 'have'), ('a', 'a'), ('set', 'set'), ('of', 'of'), ('customer', 'customer'), ('data', 'datum'), ('and', 'and'), ('you', 'you'), ('did', 'do'), ('n’t', 'not'), ('know', 'know'), ('what', 'what'), ('kind', 'kind'), ('of', 'of'), ('classes', 'class'), ('they', 'they'), ('would', 'would'), ('fit', 'fit'), ('in', 'in'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'example'), 'case'), (('example', 'use'), 'obl'), ((',', 'use'), 'punct'), (('you', 'use'), 'nsubj'), (('’d', 'use'), 'aux'), (('likely', 'use'), 'advmod'), (('use', 'root'), 'root'), (('unsupervised', 'learning'), 'amod'), (('learning', 'use'), 'obj'), (('if', 'had'), 'mark'), (('you', 'had'), 'nsubj'), (('had', 'use'), 'advcl'), (('a', 'set'), 'det'), (('set', 'had'), 'obj'), (('of', 'data'), 'case'), (('customer', 'data'), 'compound'), (('data', 'set'), 'nmod'), (('and', 'know'), 'cc'), (('you', 'know'), 'nsubj'), (('did', 'know'), 'aux'), (('n’t', 'know'), 'advmod'), (('know', 'use'), 'conj'), (('what', 'kind'), 'det'), (('kind', 'know'), 'obj'), (('of', 'classes'), 'case'), (('classes', 'kind'), 'nmod'), (('they', 'fit'), 'nsubj'), (('would', 'fit'), 'aux'), (('fit', 'classes'), 'acl:relcl'), (('in', 'fit'), 'obl'), (('.', 'use'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 An unsupervised  learning algorithm can find natural groupings of similar  customers in a database and the user can then describe   and label them. 

Tokens are: 
>> ['An', 'unsupervised', 'learning', 'algorithm', 'can', 'find', 'natural', 'groupings', 'of', 'similar', 'customers', 'in', 'a', 'database', 'and', 'the', 'user', 'can', 'then', 'describe', 'and', 'label', 'them', '.'] 

 UPOS tags are: 
>> [('An', 'DET'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('algorithm', 'NOUN'), ('can', 'AUX'), ('find', 'VERB'), ('natural', 'ADJ'), ('groupings', 'NOUN'), ('of', 'ADP'), ('similar', 'ADJ'), ('customers', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('database', 'NOUN'), ('and', 'CCONJ'), ('the', 'DET'), ('user', 'NOUN'), ('can', 'AUX'), ('then', 'ADV'), ('describe', 'VERB'), ('and', 'CCONJ'), ('label', 'VERB'), ('them', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('An', 'DT'), ('unsupervised', 'JJ'), ('learning', 'NN'), ('algorithm', 'NN'), ('can', 'MD'), ('find', 'VB'), ('natural', 'JJ'), ('groupings', 'NNS'), ('of', 'IN'), ('similar', 'JJ'), ('customers', 'NNS'), ('in', 'IN'), ('a', 'DT'), ('database', 'NN'), ('and', 'CC'), ('the', 'DT'), ('user', 'NN'), ('can', 'MD'), ('then', 'RB'), ('describe', 'VB'), ('and', 'CC'), ('label', 'VB'), ('them', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('An', 'a'), ('unsupervised', 'unsupervised'), ('learning', 'learning'), ('algorithm', 'algorithm'), ('can', 'can'), ('find', 'find'), ('natural', 'natural'), ('groupings', 'grouping'), ('of', 'of'), ('similar', 'similar'), ('customers', 'customer'), ('in', 'in'), ('a', 'a'), ('database', 'database'), ('and', 'and'), ('the', 'the'), ('user', 'user'), ('can', 'can'), ('then', 'then'), ('describe', 'describe'), ('and', 'and'), ('label', 'label'), ('them', 'they'), ('.', '.')] 

 Dependency tags are: 
>> [(('An', 'algorithm'), 'det'), (('unsupervised', 'algorithm'), 'amod'), (('learning', 'algorithm'), 'compound'), (('algorithm', 'find'), 'nsubj'), (('can', 'find'), 'aux'), (('find', 'root'), 'root'), (('natural', 'groupings'), 'amod'), (('groupings', 'find'), 'obj'), (('of', 'customers'), 'case'), (('similar', 'customers'), 'amod'), (('customers', 'groupings'), 'nmod'), (('in', 'database'), 'case'), (('a', 'database'), 'det'), (('database', 'find'), 'obl'), (('and', 'describe'), 'cc'), (('the', 'user'), 'det'), (('user', 'describe'), 'nsubj'), (('can', 'describe'), 'aux'), (('then', 'describe'), 'advmod'), (('describe', 'find'), 'conj'), (('and', 'label'), 'cc'), (('label', 'describe'), 'conj'), (('them', 'label'), 'obj'), (('.', 'find'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 273 =================================

Reinforcement learning is a class in and of itself; it is not  given a specific goal, but rather learns from trial and error.  The main concept is that instead of a specific action being  labelled, there is a sequence of actions that is associated  with a reward. If we take a maze as an example, the  algorithm will be rewarded when it comes closer to its goal  and be penalized every time it gets stuck or moves away  from the completion. A recent example of reinforcement  learning is AlphaGo, where Google trained a deep  reinforcement learning network with many examples of  the game Go, eventually making its performance superior  to that of even the best human. This trick is not new, since  it was used in TD-Gammon in 1992, created by Gerald  Tesauro at IBM. TD-Gammon was a backgammon-playing  program that reached the performance of the best human  players at the time. 


------------------- Sentence 1 -------------------

 Reinforcement learning is a class in and of itself; it is not  given a specific goal, but rather learns from trial and error. 

Tokens are: 
>> ['Reinforcement', 'learning', 'is', 'a', 'class', 'in', 'and', 'of', 'itself', ';', 'it', 'is', 'not', 'given', 'a', 'specific', 'goal', ',', 'but', 'rather', 'learns', 'from', 'trial', 'and', 'error', '.'] 

 UPOS tags are: 
>> [('Reinforcement', 'NOUN'), ('learning', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('class', 'NOUN'), ('in', 'ADP'), ('and', 'CCONJ'), ('of', 'ADP'), ('itself', 'PRON'), (';', 'PUNCT'), ('it', 'PRON'), ('is', 'AUX'), ('not', 'PART'), ('given', 'VERB'), ('a', 'DET'), ('specific', 'ADJ'), ('goal', 'NOUN'), (',', 'PUNCT'), ('but', 'CCONJ'), ('rather', 'ADV'), ('learns', 'VERB'), ('from', 'ADP'), ('trial', 'NOUN'), ('and', 'CCONJ'), ('error', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Reinforcement', 'NN'), ('learning', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('class', 'NN'), ('in', 'IN'), ('and', 'CC'), ('of', 'IN'), ('itself', 'PRP'), (';', ':'), ('it', 'PRP'), ('is', 'VBZ'), ('not', 'RB'), ('given', 'VBN'), ('a', 'DT'), ('specific', 'JJ'), ('goal', 'NN'), (',', ','), ('but', 'CC'), ('rather', 'RB'), ('learns', 'VBZ'), ('from', 'IN'), ('trial', 'NN'), ('and', 'CC'), ('error', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Reinforcement', 'reinforcement'), ('learning', 'learning'), ('is', 'be'), ('a', 'a'), ('class', 'class'), ('in', 'in'), ('and', 'and'), ('of', 'of'), ('itself', 'itself'), (';', ';'), ('it', 'it'), ('is', 'be'), ('not', 'not'), ('given', 'give'), ('a', 'a'), ('specific', 'specific'), ('goal', 'goal'), (',', ','), ('but', 'but'), ('rather', 'rather'), ('learns', 'learn'), ('from', 'from'), ('trial', 'trial'), ('and', 'and'), ('error', 'error'), ('.', '.')] 

 Dependency tags are: 
>> [(('Reinforcement', 'learning'), 'compound'), (('learning', 'class'), 'nsubj'), (('is', 'class'), 'cop'), (('a', 'class'), 'det'), (('class', 'root'), 'root'), (('in', 'class'), 'advmod'), (('and', 'of'), 'cc'), (('of', 'in'), 'conj'), (('itself', 'class'), 'obl'), ((';', 'given'), 'punct'), (('it', 'given'), 'nsubj:pass'), (('is', 'given'), 'aux:pass'), (('not', 'given'), 'advmod'), (('given', 'class'), 'parataxis'), (('a', 'goal'), 'det'), (('specific', 'goal'), 'amod'), (('goal', 'given'), 'obj'), ((',', 'learns'), 'punct'), (('but', 'learns'), 'cc'), (('rather', 'learns'), 'advmod'), (('learns', 'given'), 'conj'), (('from', 'trial'), 'case'), (('trial', 'learns'), 'obl'), (('and', 'error'), 'cc'), (('error', 'trial'), 'conj'), (('.', 'class'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 The main concept is that instead of a specific action being  labelled, there is a sequence of actions that is associated  with a reward. 

Tokens are: 
>> ['The', 'main', 'concept', 'is', 'that', 'instead', 'of', 'a', 'specific', 'action', 'being', 'labelled', ',', 'there', 'is', 'a', 'sequence', 'of', 'actions', 'that', 'is', 'associated', 'with', 'a', 'reward', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('main', 'ADJ'), ('concept', 'NOUN'), ('is', 'AUX'), ('that', 'SCONJ'), ('instead', 'ADV'), ('of', 'ADP'), ('a', 'DET'), ('specific', 'ADJ'), ('action', 'NOUN'), ('being', 'AUX'), ('labelled', 'VERB'), (',', 'PUNCT'), ('there', 'PRON'), ('is', 'VERB'), ('a', 'DET'), ('sequence', 'NOUN'), ('of', 'ADP'), ('actions', 'NOUN'), ('that', 'PRON'), ('is', 'AUX'), ('associated', 'VERB'), ('with', 'ADP'), ('a', 'DET'), ('reward', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('main', 'JJ'), ('concept', 'NN'), ('is', 'VBZ'), ('that', 'IN'), ('instead', 'RB'), ('of', 'IN'), ('a', 'DT'), ('specific', 'JJ'), ('action', 'NN'), ('being', 'VBG'), ('labelled', 'VBN'), (',', ','), ('there', 'EX'), ('is', 'VBZ'), ('a', 'DT'), ('sequence', 'NN'), ('of', 'IN'), ('actions', 'NNS'), ('that', 'WDT'), ('is', 'VBZ'), ('associated', 'VBN'), ('with', 'IN'), ('a', 'DT'), ('reward', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('main', 'main'), ('concept', 'concept'), ('is', 'be'), ('that', 'that'), ('instead', 'instead'), ('of', 'of'), ('a', 'a'), ('specific', 'specific'), ('action', 'action'), ('being', 'be'), ('labelled', 'label'), (',', ','), ('there', 'there'), ('is', 'be'), ('a', 'a'), ('sequence', 'sequence'), ('of', 'of'), ('actions', 'action'), ('that', 'that'), ('is', 'be'), ('associated', 'associate'), ('with', 'with'), ('a', 'a'), ('reward', 'reward'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'concept'), 'det'), (('main', 'concept'), 'amod'), (('concept', 'is'), 'nsubj'), (('is', 'root'), 'root'), (('that', 'is'), 'mark'), (('instead', 'action'), 'case'), (('of', 'instead'), 'fixed'), (('a', 'action'), 'det'), (('specific', 'action'), 'amod'), (('action', 'is'), 'obl'), (('being', 'labelled'), 'aux:pass'), (('labelled', 'action'), 'acl'), ((',', 'is'), 'punct'), (('there', 'is'), 'expl'), (('is', 'is'), 'ccomp'), (('a', 'sequence'), 'det'), (('sequence', 'is'), 'nsubj'), (('of', 'actions'), 'case'), (('actions', 'sequence'), 'nmod'), (('that', 'associated'), 'nsubj:pass'), (('is', 'associated'), 'aux:pass'), (('associated', 'actions'), 'acl:relcl'), (('with', 'reward'), 'case'), (('a', 'reward'), 'det'), (('reward', 'associated'), 'obl'), (('.', 'is'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 If we take a maze as an example, the  algorithm will be rewarded when it comes closer to its goal  and be penalized every time it gets stuck or moves away  from the completion. 

Tokens are: 
>> ['If', 'we', 'take', 'a', 'maze', 'as', 'an', 'example', ',', 'the', 'algorithm', 'will', 'be', 'rewarded', 'when', 'it', 'comes', 'closer', 'to', 'its', 'goal', 'and', 'be', 'penalized', 'every', 'time', 'it', 'gets', 'stuck', 'or', 'moves', 'away', 'from', 'the', 'completion', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('we', 'PRON'), ('take', 'VERB'), ('a', 'DET'), ('maze', 'NOUN'), ('as', 'ADP'), ('an', 'DET'), ('example', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('algorithm', 'NOUN'), ('will', 'AUX'), ('be', 'AUX'), ('rewarded', 'VERB'), ('when', 'SCONJ'), ('it', 'PRON'), ('comes', 'VERB'), ('closer', 'ADJ'), ('to', 'ADP'), ('its', 'PRON'), ('goal', 'NOUN'), ('and', 'CCONJ'), ('be', 'AUX'), ('penalized', 'VERB'), ('every', 'DET'), ('time', 'NOUN'), ('it', 'PRON'), ('gets', 'AUX'), ('stuck', 'VERB'), ('or', 'CCONJ'), ('moves', 'NOUN'), ('away', 'ADV'), ('from', 'ADP'), ('the', 'DET'), ('completion', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('we', 'PRP'), ('take', 'VBP'), ('a', 'DT'), ('maze', 'NN'), ('as', 'IN'), ('an', 'DT'), ('example', 'NN'), (',', ','), ('the', 'DT'), ('algorithm', 'NN'), ('will', 'MD'), ('be', 'VB'), ('rewarded', 'VBN'), ('when', 'WRB'), ('it', 'PRP'), ('comes', 'VBZ'), ('closer', 'JJR'), ('to', 'IN'), ('its', 'PRP$'), ('goal', 'NN'), ('and', 'CC'), ('be', 'VB'), ('penalized', 'VBN'), ('every', 'DT'), ('time', 'NN'), ('it', 'PRP'), ('gets', 'VBZ'), ('stuck', 'VBN'), ('or', 'CC'), ('moves', 'NNS'), ('away', 'RB'), ('from', 'IN'), ('the', 'DT'), ('completion', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('we', 'we'), ('take', 'take'), ('a', 'a'), ('maze', 'maze'), ('as', 'as'), ('an', 'a'), ('example', 'example'), (',', ','), ('the', 'the'), ('algorithm', 'algorithm'), ('will', 'will'), ('be', 'be'), ('rewarded', 'reward'), ('when', 'when'), ('it', 'it'), ('comes', 'come'), ('closer', 'close'), ('to', 'to'), ('its', 'its'), ('goal', 'goal'), ('and', 'and'), ('be', 'be'), ('penalized', 'penalize'), ('every', 'every'), ('time', 'time'), ('it', 'it'), ('gets', 'get'), ('stuck', 'stick'), ('or', 'or'), ('moves', 'move'), ('away', 'away'), ('from', 'from'), ('the', 'the'), ('completion', 'completion'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'take'), 'mark'), (('we', 'take'), 'nsubj'), (('take', 'rewarded'), 'advcl'), (('a', 'maze'), 'det'), (('maze', 'take'), 'obj'), (('as', 'example'), 'case'), (('an', 'example'), 'det'), (('example', 'take'), 'obl'), ((',', 'rewarded'), 'punct'), (('the', 'algorithm'), 'det'), (('algorithm', 'rewarded'), 'nsubj:pass'), (('will', 'rewarded'), 'aux'), (('be', 'rewarded'), 'aux:pass'), (('rewarded', 'root'), 'root'), (('when', 'comes'), 'mark'), (('it', 'comes'), 'nsubj'), (('comes', 'rewarded'), 'advcl'), (('closer', 'comes'), 'xcomp'), (('to', 'goal'), 'case'), (('its', 'goal'), 'nmod:poss'), (('goal', 'closer'), 'obl'), (('and', 'penalized'), 'cc'), (('be', 'penalized'), 'aux:pass'), (('penalized', 'comes'), 'conj'), (('every', 'time'), 'det'), (('time', 'penalized'), 'obl:tmod'), (('it', 'stuck'), 'nsubj'), (('gets', 'stuck'), 'cop'), (('stuck', 'time'), 'acl:relcl'), (('or', 'moves'), 'cc'), (('moves', 'stuck'), 'conj'), (('away', 'stuck'), 'conj'), (('from', 'completion'), 'case'), (('the', 'completion'), 'det'), (('completion', 'away'), 'obl'), (('.', 'rewarded'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 A recent example of reinforcement  learning is AlphaGo, where Google trained a deep  reinforcement learning network with many examples of  the game Go, eventually making its performance superior  to that of even the best human. 

Tokens are: 
>> ['A', 'recent', 'example', 'of', 'reinforcement', 'learning', 'is', 'AlphaGo', ',', 'where', 'Google', 'trained', 'a', 'deep', 'reinforcement', 'learning', 'network', 'with', 'many', 'examples', 'of', 'the', 'game', 'Go', ',', 'eventually', 'making', 'its', 'performance', 'superior', 'to', 'that', 'of', 'even', 'the', 'best', 'human', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('recent', 'ADJ'), ('example', 'NOUN'), ('of', 'ADP'), ('reinforcement', 'NOUN'), ('learning', 'NOUN'), ('is', 'AUX'), ('AlphaGo', 'PROPN'), (',', 'PUNCT'), ('where', 'SCONJ'), ('Google', 'PROPN'), ('trained', 'VERB'), ('a', 'DET'), ('deep', 'ADJ'), ('reinforcement', 'NOUN'), ('learning', 'NOUN'), ('network', 'NOUN'), ('with', 'ADP'), ('many', 'ADJ'), ('examples', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('game', 'NOUN'), ('Go', 'VERB'), (',', 'PUNCT'), ('eventually', 'ADV'), ('making', 'VERB'), ('its', 'PRON'), ('performance', 'NOUN'), ('superior', 'ADJ'), ('to', 'ADP'), ('that', 'PRON'), ('of', 'ADP'), ('even', 'ADV'), ('the', 'DET'), ('best', 'ADJ'), ('human', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('recent', 'JJ'), ('example', 'NN'), ('of', 'IN'), ('reinforcement', 'NN'), ('learning', 'NN'), ('is', 'VBZ'), ('AlphaGo', 'NNP'), (',', ','), ('where', 'WRB'), ('Google', 'NNP'), ('trained', 'VBD'), ('a', 'DT'), ('deep', 'JJ'), ('reinforcement', 'NN'), ('learning', 'NN'), ('network', 'NN'), ('with', 'IN'), ('many', 'JJ'), ('examples', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('game', 'NN'), ('Go', 'VB'), (',', ','), ('eventually', 'RB'), ('making', 'VBG'), ('its', 'PRP$'), ('performance', 'NN'), ('superior', 'JJ'), ('to', 'IN'), ('that', 'DT'), ('of', 'IN'), ('even', 'RB'), ('the', 'DT'), ('best', 'JJS'), ('human', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('recent', 'recent'), ('example', 'example'), ('of', 'of'), ('reinforcement', 'reinforcement'), ('learning', 'learning'), ('is', 'be'), ('AlphaGo', 'AlphaGo'), (',', ','), ('where', 'where'), ('Google', 'Google'), ('trained', 'train'), ('a', 'a'), ('deep', 'deep'), ('reinforcement', 'reinforcement'), ('learning', 'learning'), ('network', 'network'), ('with', 'with'), ('many', 'many'), ('examples', 'example'), ('of', 'of'), ('the', 'the'), ('game', 'game'), ('Go', 'go'), (',', ','), ('eventually', 'eventually'), ('making', 'make'), ('its', 'its'), ('performance', 'performance'), ('superior', 'superior'), ('to', 'to'), ('that', 'that'), ('of', 'of'), ('even', 'even'), ('the', 'the'), ('best', 'good'), ('human', 'human'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'example'), 'det'), (('recent', 'example'), 'amod'), (('example', 'AlphaGo'), 'nsubj'), (('of', 'learning'), 'case'), (('reinforcement', 'learning'), 'compound'), (('learning', 'example'), 'nmod'), (('is', 'AlphaGo'), 'cop'), (('AlphaGo', 'root'), 'root'), ((',', 'AlphaGo'), 'punct'), (('where', 'trained'), 'mark'), (('Google', 'trained'), 'nsubj'), (('trained', 'AlphaGo'), 'acl:relcl'), (('a', 'network'), 'det'), (('deep', 'network'), 'amod'), (('reinforcement', 'network'), 'compound'), (('learning', 'network'), 'compound'), (('network', 'trained'), 'obj'), (('with', 'examples'), 'case'), (('many', 'examples'), 'amod'), (('examples', 'trained'), 'obl'), (('of', 'game'), 'case'), (('the', 'game'), 'det'), (('game', 'examples'), 'nmod'), (('Go', 'examples'), 'acl'), ((',', 'making'), 'punct'), (('eventually', 'making'), 'advmod'), (('making', 'trained'), 'advcl'), (('its', 'performance'), 'nmod:poss'), (('performance', 'making'), 'obj'), (('superior', 'making'), 'xcomp'), (('to', 'that'), 'case'), (('that', 'superior'), 'obl'), (('of', 'human'), 'case'), (('even', 'human'), 'advmod'), (('the', 'human'), 'det'), (('best', 'human'), 'amod'), (('human', 'that'), 'nmod'), (('.', 'AlphaGo'), 'punct')]

 Named Entites are: 
>> [('AlphaGo', 'ORG'), ('Google', 'ORG')]

------------------- Sentence 5 -------------------

 This trick is not new, since  it was used in TD-Gammon in 1992, created by Gerald  Tesauro at IBM. 

Tokens are: 
>> ['This', 'trick', 'is', 'not', 'new', ',', 'since', 'it', 'was', 'used', 'in', 'TD', '-', 'Gammon', 'in', '1992', ',', 'created', 'by', 'Gerald', 'Tesauro', 'at', 'IBM', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('trick', 'NOUN'), ('is', 'AUX'), ('not', 'PART'), ('new', 'ADJ'), (',', 'PUNCT'), ('since', 'SCONJ'), ('it', 'PRON'), ('was', 'AUX'), ('used', 'VERB'), ('in', 'ADP'), ('TD', 'PROPN'), ('-', 'PUNCT'), ('Gammon', 'PROPN'), ('in', 'ADP'), ('1992', 'NUM'), (',', 'PUNCT'), ('created', 'VERB'), ('by', 'ADP'), ('Gerald', 'PROPN'), ('Tesauro', 'PROPN'), ('at', 'ADP'), ('IBM', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('trick', 'NN'), ('is', 'VBZ'), ('not', 'RB'), ('new', 'JJ'), (',', ','), ('since', 'IN'), ('it', 'PRP'), ('was', 'VBD'), ('used', 'VBN'), ('in', 'IN'), ('TD', 'NNP'), ('-', 'HYPH'), ('Gammon', 'NNP'), ('in', 'IN'), ('1992', 'CD'), (',', ','), ('created', 'VBN'), ('by', 'IN'), ('Gerald', 'NNP'), ('Tesauro', 'NNP'), ('at', 'IN'), ('IBM', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('trick', 'trick'), ('is', 'be'), ('not', 'not'), ('new', 'new'), (',', ','), ('since', 'since'), ('it', 'it'), ('was', 'be'), ('used', 'use'), ('in', 'in'), ('TD', 'TD'), ('-', '-'), ('Gammon', 'Gammon'), ('in', 'in'), ('1992', '1992'), (',', ','), ('created', 'create'), ('by', 'by'), ('Gerald', 'Gerald'), ('Tesauro', 'Tesauro'), ('at', 'at'), ('IBM', 'IBM'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'trick'), 'det'), (('trick', 'new'), 'nsubj'), (('is', 'new'), 'cop'), (('not', 'new'), 'advmod'), (('new', 'root'), 'root'), ((',', 'new'), 'punct'), (('since', 'used'), 'mark'), (('it', 'used'), 'nsubj:pass'), (('was', 'used'), 'aux:pass'), (('used', 'new'), 'advcl'), (('in', 'Gammon'), 'case'), (('TD', 'used'), 'obl'), (('-', 'Gammon'), 'punct'), (('Gammon', 'TD'), 'flat'), (('in', '1992'), 'case'), (('1992', 'used'), 'obl'), ((',', 'created'), 'punct'), (('created', 'used'), 'advcl'), (('by', 'Gerald'), 'case'), (('Gerald', 'created'), 'obl'), (('Tesauro', 'Gerald'), 'flat'), (('at', 'IBM'), 'case'), (('IBM', 'created'), 'obl'), (('.', 'new'), 'punct')]

 Named Entites are: 
>> [('TD-Gammon', 'ORG'), ('1992', 'DATE'), ('Gerald  Tesauro', 'PERSON'), ('IBM', 'ORG')]

------------------- Sentence 6 -------------------

 TD-Gammon was a backgammon-playing  program that reached the performance of the best human  players at the time. 

Tokens are: 
>> ['TD', '-', 'Gammon', 'was', 'a', 'backgammon', '-', 'playing', 'program', 'that', 'reached', 'the', 'performance', 'of', 'the', 'best', 'human', 'players', 'at', 'the', 'time', '.'] 

 UPOS tags are: 
>> [('TD', 'PROPN'), ('-', 'PUNCT'), ('Gammon', 'PROPN'), ('was', 'AUX'), ('a', 'DET'), ('backgammon', 'NOUN'), ('-', 'PUNCT'), ('playing', 'NOUN'), ('program', 'NOUN'), ('that', 'PRON'), ('reached', 'VERB'), ('the', 'DET'), ('performance', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('best', 'ADJ'), ('human', 'ADJ'), ('players', 'NOUN'), ('at', 'ADP'), ('the', 'DET'), ('time', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('TD', 'NNP'), ('-', ','), ('Gammon', 'NNP'), ('was', 'VBD'), ('a', 'DT'), ('backgammon', 'NN'), ('-', 'HYPH'), ('playing', 'NN'), ('program', 'NN'), ('that', 'WDT'), ('reached', 'VBD'), ('the', 'DT'), ('performance', 'NN'), ('of', 'IN'), ('the', 'DT'), ('best', 'JJS'), ('human', 'JJ'), ('players', 'NNS'), ('at', 'IN'), ('the', 'DT'), ('time', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('TD', 'TD'), ('-', '-'), ('Gammon', 'Gammon'), ('was', 'be'), ('a', 'a'), ('backgammon', 'backgammon'), ('-', '-'), ('playing', 'playing'), ('program', 'program'), ('that', 'that'), ('reached', 'reach'), ('the', 'the'), ('performance', 'performance'), ('of', 'of'), ('the', 'the'), ('best', 'good'), ('human', 'human'), ('players', 'player'), ('at', 'at'), ('the', 'the'), ('time', 'time'), ('.', '.')] 

 Dependency tags are: 
>> [(('TD', 'root'), 'root'), (('-', 'TD'), 'punct'), (('Gammon', 'program'), 'nsubj'), (('was', 'program'), 'cop'), (('a', 'program'), 'det'), (('backgammon', 'playing'), 'compound'), (('-', 'playing'), 'punct'), (('playing', 'program'), 'compound'), (('program', 'TD'), 'appos'), (('that', 'reached'), 'nsubj'), (('reached', 'program'), 'acl:relcl'), (('the', 'performance'), 'det'), (('performance', 'reached'), 'obj'), (('of', 'players'), 'case'), (('the', 'players'), 'det'), (('best', 'players'), 'amod'), (('human', 'players'), 'amod'), (('players', 'performance'), 'nmod'), (('at', 'time'), 'case'), (('the', 'time'), 'det'), (('time', 'reached'), 'obl'), (('.', 'TD'), 'punct')]

 Named Entites are: 
>> [('TD-Gammon', 'ORG')]

================================ Paragraph 274 =================================

Reinforcement learning is not currently widely used, but it  does have high potential when developed more extensively.  You would need a lot of data (which is not always the case  and takes time to process) to be able to make reinforcement  learning work. 


------------------- Sentence 1 -------------------

 Reinforcement learning is not currently widely used, but it  does have high potential when developed more extensively. 

Tokens are: 
>> ['Reinforcement', 'learning', 'is', 'not', 'currently', 'widely', 'used', ',', 'but', 'it', 'does', 'have', 'high', 'potential', 'when', 'developed', 'more', 'extensively', '.'] 

 UPOS tags are: 
>> [('Reinforcement', 'NOUN'), ('learning', 'NOUN'), ('is', 'AUX'), ('not', 'PART'), ('currently', 'ADV'), ('widely', 'ADV'), ('used', 'VERB'), (',', 'PUNCT'), ('but', 'CCONJ'), ('it', 'PRON'), ('does', 'AUX'), ('have', 'VERB'), ('high', 'ADJ'), ('potential', 'NOUN'), ('when', 'SCONJ'), ('developed', 'VERB'), ('more', 'ADV'), ('extensively', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Reinforcement', 'NN'), ('learning', 'NN'), ('is', 'VBZ'), ('not', 'RB'), ('currently', 'RB'), ('widely', 'RB'), ('used', 'VBN'), (',', ','), ('but', 'CC'), ('it', 'PRP'), ('does', 'VBZ'), ('have', 'VB'), ('high', 'JJ'), ('potential', 'NN'), ('when', 'WRB'), ('developed', 'VBN'), ('more', 'RBR'), ('extensively', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('Reinforcement', 'reinforcement'), ('learning', 'learning'), ('is', 'be'), ('not', 'not'), ('currently', 'currently'), ('widely', 'widely'), ('used', 'use'), (',', ','), ('but', 'but'), ('it', 'it'), ('does', 'do'), ('have', 'have'), ('high', 'high'), ('potential', 'potential'), ('when', 'when'), ('developed', 'develop'), ('more', 'more'), ('extensively', 'extensively'), ('.', '.')] 

 Dependency tags are: 
>> [(('Reinforcement', 'learning'), 'compound'), (('learning', 'used'), 'nsubj:pass'), (('is', 'used'), 'aux:pass'), (('not', 'used'), 'advmod'), (('currently', 'used'), 'advmod'), (('widely', 'used'), 'advmod'), (('used', 'root'), 'root'), ((',', 'have'), 'punct'), (('but', 'have'), 'cc'), (('it', 'have'), 'nsubj'), (('does', 'have'), 'aux'), (('have', 'used'), 'conj'), (('high', 'potential'), 'amod'), (('potential', 'have'), 'obj'), (('when', 'developed'), 'mark'), (('developed', 'have'), 'advcl'), (('more', 'extensively'), 'advmod'), (('extensively', 'developed'), 'advmod'), (('.', 'used'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 You would need a lot of data (which is not always the case  and takes time to process) to be able to make reinforcement  learning work. 

Tokens are: 
>> ['You', 'would', 'need', 'a', 'lot', 'of', 'data', '(', 'which', 'is', 'not', 'always', 'the', 'case', 'and', 'takes', 'time', 'to', 'process', ')', 'to', 'be', 'able', 'to', 'make', 'reinforcement', 'learning', 'work', '.'] 

 UPOS tags are: 
>> [('You', 'PRON'), ('would', 'AUX'), ('need', 'VERB'), ('a', 'DET'), ('lot', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), ('(', 'PUNCT'), ('which', 'PRON'), ('is', 'AUX'), ('not', 'PART'), ('always', 'ADV'), ('the', 'DET'), ('case', 'NOUN'), ('and', 'CCONJ'), ('takes', 'VERB'), ('time', 'NOUN'), ('to', 'PART'), ('process', 'VERB'), (')', 'PUNCT'), ('to', 'PART'), ('be', 'AUX'), ('able', 'ADJ'), ('to', 'PART'), ('make', 'VERB'), ('reinforcement', 'NOUN'), ('learning', 'NOUN'), ('work', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('You', 'PRP'), ('would', 'MD'), ('need', 'VB'), ('a', 'DT'), ('lot', 'NN'), ('of', 'IN'), ('data', 'NN'), ('(', '-LRB-'), ('which', 'WDT'), ('is', 'VBZ'), ('not', 'RB'), ('always', 'RB'), ('the', 'DT'), ('case', 'NN'), ('and', 'CC'), ('takes', 'VBZ'), ('time', 'NN'), ('to', 'TO'), ('process', 'VB'), (')', '-RRB-'), ('to', 'TO'), ('be', 'VB'), ('able', 'JJ'), ('to', 'TO'), ('make', 'VB'), ('reinforcement', 'NN'), ('learning', 'NN'), ('work', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('You', 'you'), ('would', 'would'), ('need', 'need'), ('a', 'a'), ('lot', 'lot'), ('of', 'of'), ('data', 'datum'), ('(', '('), ('which', 'which'), ('is', 'be'), ('not', 'not'), ('always', 'always'), ('the', 'the'), ('case', 'case'), ('and', 'and'), ('takes', 'take'), ('time', 'time'), ('to', 'to'), ('process', 'process'), (')', ')'), ('to', 'to'), ('be', 'be'), ('able', 'able'), ('to', 'to'), ('make', 'make'), ('reinforcement', 'reinforcement'), ('learning', 'learning'), ('work', 'work'), ('.', '.')] 

 Dependency tags are: 
>> [(('You', 'need'), 'nsubj'), (('would', 'need'), 'aux'), (('need', 'root'), 'root'), (('a', 'lot'), 'det'), (('lot', 'need'), 'obj'), (('of', 'data'), 'case'), (('data', 'lot'), 'nmod'), (('(', 'case'), 'punct'), (('which', 'case'), 'nsubj'), (('is', 'case'), 'cop'), (('not', 'case'), 'advmod'), (('always', 'case'), 'advmod'), (('the', 'case'), 'det'), (('case', 'lot'), 'acl:relcl'), (('and', 'takes'), 'cc'), (('takes', 'case'), 'conj'), (('time', 'takes'), 'obj'), (('to', 'process'), 'mark'), (('process', 'time'), 'acl'), ((')', 'case'), 'punct'), (('to', 'able'), 'mark'), (('be', 'able'), 'cop'), (('able', 'takes'), 'advcl'), (('to', 'make'), 'mark'), (('make', 'able'), 'xcomp'), (('reinforcement', 'work'), 'compound'), (('learning', 'work'), 'compound'), (('work', 'make'), 'obj'), (('.', 'need'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 275 =================================

Transfer learning is when your algorithm learns to solve  one problem, takes information from this problem and then  solves a new problem with that information. This currently  happens a lot with image recognition. Pre-trained neural  networks are used to solve new problems.


------------------- Sentence 1 -------------------

 Transfer learning is when your algorithm learns to solve  one problem, takes information from this problem and then  solves a new problem with that information. 

Tokens are: 
>> ['Transfer', 'learning', 'is', 'when', 'your', 'algorithm', 'learns', 'to', 'solve', 'one', 'problem', ',', 'takes', 'information', 'from', 'this', 'problem', 'and', 'then', 'solves', 'a', 'new', 'problem', 'with', 'that', 'information', '.'] 

 UPOS tags are: 
>> [('Transfer', 'NOUN'), ('learning', 'NOUN'), ('is', 'VERB'), ('when', 'SCONJ'), ('your', 'PRON'), ('algorithm', 'NOUN'), ('learns', 'VERB'), ('to', 'PART'), ('solve', 'VERB'), ('one', 'NUM'), ('problem', 'NOUN'), (',', 'PUNCT'), ('takes', 'VERB'), ('information', 'NOUN'), ('from', 'ADP'), ('this', 'DET'), ('problem', 'NOUN'), ('and', 'CCONJ'), ('then', 'ADV'), ('solves', 'VERB'), ('a', 'DET'), ('new', 'ADJ'), ('problem', 'NOUN'), ('with', 'ADP'), ('that', 'DET'), ('information', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Transfer', 'NN'), ('learning', 'NN'), ('is', 'VBZ'), ('when', 'WRB'), ('your', 'PRP$'), ('algorithm', 'NN'), ('learns', 'VBZ'), ('to', 'TO'), ('solve', 'VB'), ('one', 'CD'), ('problem', 'NN'), (',', ','), ('takes', 'VBZ'), ('information', 'NN'), ('from', 'IN'), ('this', 'DT'), ('problem', 'NN'), ('and', 'CC'), ('then', 'RB'), ('solves', 'VBZ'), ('a', 'DT'), ('new', 'JJ'), ('problem', 'NN'), ('with', 'IN'), ('that', 'DT'), ('information', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Transfer', 'transfer'), ('learning', 'learning'), ('is', 'be'), ('when', 'when'), ('your', 'you'), ('algorithm', 'algorithm'), ('learns', 'learn'), ('to', 'to'), ('solve', 'solve'), ('one', 'one'), ('problem', 'problem'), (',', ','), ('takes', 'take'), ('information', 'information'), ('from', 'from'), ('this', 'this'), ('problem', 'problem'), ('and', 'and'), ('then', 'then'), ('solves', 'solve'), ('a', 'a'), ('new', 'new'), ('problem', 'problem'), ('with', 'with'), ('that', 'that'), ('information', 'information'), ('.', '.')] 

 Dependency tags are: 
>> [(('Transfer', 'learning'), 'compound'), (('learning', 'is'), 'nsubj'), (('is', 'root'), 'root'), (('when', 'learns'), 'mark'), (('your', 'algorithm'), 'nmod:poss'), (('algorithm', 'learns'), 'nsubj'), (('learns', 'is'), 'advcl'), (('to', 'solve'), 'mark'), (('solve', 'learns'), 'xcomp'), (('one', 'problem'), 'nummod'), (('problem', 'solve'), 'obj'), ((',', 'takes'), 'punct'), (('takes', 'is'), 'ccomp'), (('information', 'takes'), 'obj'), (('from', 'problem'), 'case'), (('this', 'problem'), 'det'), (('problem', 'takes'), 'obl'), (('and', 'solves'), 'cc'), (('then', 'solves'), 'advmod'), (('solves', 'takes'), 'conj'), (('a', 'problem'), 'det'), (('new', 'problem'), 'amod'), (('problem', 'solves'), 'obj'), (('with', 'information'), 'case'), (('that', 'information'), 'det'), (('information', 'problem'), 'nmod'), (('.', 'is'), 'punct')]

 Named Entites are: 
>> [('one', 'CARDINAL')]

------------------- Sentence 2 -------------------

 This currently  happens a lot with image recognition. 

Tokens are: 
>> ['This', 'currently', 'happens', 'a', 'lot', 'with', 'image', 'recognition', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('currently', 'ADV'), ('happens', 'VERB'), ('a', 'DET'), ('lot', 'NOUN'), ('with', 'ADP'), ('image', 'NOUN'), ('recognition', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('currently', 'RB'), ('happens', 'VBZ'), ('a', 'DT'), ('lot', 'NN'), ('with', 'IN'), ('image', 'NN'), ('recognition', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('currently', 'currently'), ('happens', 'happen'), ('a', 'a'), ('lot', 'lot'), ('with', 'with'), ('image', 'image'), ('recognition', 'recognition'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'happens'), 'nsubj'), (('currently', 'happens'), 'advmod'), (('happens', 'root'), 'root'), (('a', 'lot'), 'det'), (('lot', 'happens'), 'obj'), (('with', 'recognition'), 'case'), (('image', 'recognition'), 'compound'), (('recognition', 'happens'), 'obl'), (('.', 'happens'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Pre-trained neural  networks are used to solve new problems. 

Tokens are: 
>> ['Pre-trained', 'neural', 'networks', 'are', 'used', 'to', 'solve', 'new', 'problems', '.'] 

 UPOS tags are: 
>> [('Pre-trained', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('are', 'AUX'), ('used', 'VERB'), ('to', 'PART'), ('solve', 'VERB'), ('new', 'ADJ'), ('problems', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Pre-trained', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), ('are', 'VBP'), ('used', 'VBN'), ('to', 'TO'), ('solve', 'VB'), ('new', 'JJ'), ('problems', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Pre-trained', 'pre-trained'), ('neural', 'neural'), ('networks', 'network'), ('are', 'be'), ('used', 'use'), ('to', 'to'), ('solve', 'solve'), ('new', 'new'), ('problems', 'problem'), ('.', '.')] 

 Dependency tags are: 
>> [(('Pre-trained', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'used'), 'nsubj:pass'), (('are', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('to', 'solve'), 'mark'), (('solve', 'used'), 'xcomp'), (('new', 'problems'), 'amod'), (('problems', 'solve'), 'obj'), (('.', 'used'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 276 =================================

© Copyright IBM Corporation 2018 


------------------- Sentence 1 -------------------

 © Copyright IBM Corporation 2018 

Tokens are: 
>> ['©', 'Copyright', 'IBM', 'Corporation', '2018'] 

 UPOS tags are: 
>> [('©', 'PUNCT'), ('Copyright', 'PROPN'), ('IBM', 'PROPN'), ('Corporation', 'PROPN'), ('2018', 'NUM')] 

 XPOS tags are: 
>> [('©', 'NFP'), ('Copyright', 'NNP'), ('IBM', 'NNP'), ('Corporation', 'NNP'), ('2018', 'CD')] 

 Lemmas are: 
>> [('©', "''"), ('Copyright', 'copyright'), ('IBM', 'IBM'), ('Corporation', 'Corporation'), ('2018', '2018')] 

 Dependency tags are: 
>> [(('©', 'Corporation'), 'punct'), (('Copyright', 'Corporation'), 'compound'), (('IBM', 'Corporation'), 'compound'), (('Corporation', 'root'), 'root'), (('2018', 'Corporation'), 'nmod:tmod')]

 Named Entites are: 
>> [('IBM Corporation', 'ORG'), ('2018', 'DATE')]

================================ Paragraph 277 =================================

IBM Corporation  New Orchard Road  Armonk, NY 10504  


------------------- Sentence 1 -------------------

 IBM Corporation  New Orchard Road  Armonk, NY 10504 

Tokens are: 
>> ['IBM', 'Corporation', 'New', 'Orchard', 'Road', 'Armonk', ',', 'NY', '10504'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('Corporation', 'PROPN'), ('New', 'ADJ'), ('Orchard', 'PROPN'), ('Road', 'PROPN'), ('Armonk', 'PROPN'), (',', 'PUNCT'), ('NY', 'PROPN'), ('10504', 'NUM')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('Corporation', 'NNP'), ('New', 'NNP'), ('Orchard', 'NNP'), ('Road', 'NNP'), ('Armonk', 'NNP'), (',', ','), ('NY', 'NNP'), ('10504', 'CD')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('Corporation', 'Corporation'), ('New', 'New'), ('Orchard', 'Orchard'), ('Road', 'Road'), ('Armonk', 'Armonk'), (',', ','), ('NY', 'NY'), ('10504', '10504')] 

 Dependency tags are: 
>> [(('IBM', 'Corporation'), 'compound'), (('Corporation', 'root'), 'root'), (('New', 'Road'), 'amod'), (('Orchard', 'Road'), 'compound'), (('Road', 'Corporation'), 'list'), (('Armonk', 'Road'), 'appos'), ((',', 'Road'), 'punct'), (('NY', 'Armonk'), 'appos'), (('10504', 'Road'), 'appos')]

 Named Entites are: 
>> [('IBM Corporation', 'ORG'), ('Armonk', 'GPE'), ('NY', 'GPE'), ('10504', 'CARDINAL')]

================================ Paragraph 278 =================================

Produced in the United States of America  October 2018 


------------------- Sentence 1 -------------------

 Produced in the United States of America  October 2018 

Tokens are: 
>> ['Produced', 'in', 'the', 'United', 'States', 'of', 'America', 'October', '2018'] 

 UPOS tags are: 
>> [('Produced', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('United', 'ADJ'), ('States', 'PROPN'), ('of', 'ADP'), ('America', 'PROPN'), ('October', 'PROPN'), ('2018', 'NUM')] 

 XPOS tags are: 
>> [('Produced', 'VBN'), ('in', 'IN'), ('the', 'DT'), ('United', 'NNP'), ('States', 'NNPS'), ('of', 'IN'), ('America', 'NNP'), ('October', 'NNP'), ('2018', 'CD')] 

 Lemmas are: 
>> [('Produced', 'produce'), ('in', 'in'), ('the', 'the'), ('United', 'United'), ('States', 'State'), ('of', 'of'), ('America', 'America'), ('October', 'October'), ('2018', '2018')] 

 Dependency tags are: 
>> [(('Produced', 'root'), 'root'), (('in', 'States'), 'case'), (('the', 'States'), 'det'), (('United', 'States'), 'amod'), (('States', 'Produced'), 'obl'), (('of', 'America'), 'case'), (('America', 'States'), 'nmod'), (('October', 'Produced'), 'obl:tmod'), (('2018', 'October'), 'nummod')]

 Named Entites are: 
>> [('the United States of America', 'GPE'), ('October 2018', 'DATE')]

================================ Paragraph 279 =================================

IBM, the IBM logo, ibm.com, and IBM Watson are trademarks or  registered trademarks of International Business Machines Corp.,  registered in many jurisdictions worldwide. Other product and   service names might be trademarks of IBM or other companies.   A current list of IBM trademarks is available on the web at   www.ibm.com/legal/copytrade.shtml.  


------------------- Sentence 1 -------------------

 IBM, the IBM logo, ibm.com, and IBM Watson are trademarks or  registered trademarks of International Business Machines Corp.,  registered in many jurisdictions worldwide. 

Tokens are: 
>> ['IBM', ',', 'the', 'IBM', 'logo', ',', 'ibm.com', ',', 'and', 'IBM', 'Watson', 'are', 'trademarks', 'or', 'registered', 'trademarks', 'of', 'International', 'Business', 'Machines', 'Corp.', ',', 'registered', 'in', 'many', 'jurisdictions', 'worldwide', '.'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), (',', 'PUNCT'), ('the', 'DET'), ('IBM', 'PROPN'), ('logo', 'NOUN'), (',', 'PUNCT'), ('ibm.com', 'X'), (',', 'PUNCT'), ('and', 'CCONJ'), ('IBM', 'PROPN'), ('Watson', 'PROPN'), ('are', 'AUX'), ('trademarks', 'NOUN'), ('or', 'CCONJ'), ('registered', 'VERB'), ('trademarks', 'NOUN'), ('of', 'ADP'), ('International', 'ADJ'), ('Business', 'PROPN'), ('Machines', 'PROPN'), ('Corp.', 'PROPN'), (',', 'PUNCT'), ('registered', 'VERB'), ('in', 'ADP'), ('many', 'ADJ'), ('jurisdictions', 'NOUN'), ('worldwide', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), (',', ','), ('the', 'DT'), ('IBM', 'NNP'), ('logo', 'NN'), (',', ','), ('ibm.com', 'ADD'), (',', ','), ('and', 'CC'), ('IBM', 'NNP'), ('Watson', 'NNP'), ('are', 'VBP'), ('trademarks', 'NNS'), ('or', 'CC'), ('registered', 'VBN'), ('trademarks', 'NNS'), ('of', 'IN'), ('International', 'NNP'), ('Business', 'NNP'), ('Machines', 'NNPS'), ('Corp.', 'NNP'), (',', ','), ('registered', 'VBN'), ('in', 'IN'), ('many', 'JJ'), ('jurisdictions', 'NNS'), ('worldwide', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('IBM', 'IBM'), (',', ','), ('the', 'the'), ('IBM', 'IBM'), ('logo', 'logo'), (',', ','), ('ibm.com', 'ibm.com'), (',', ','), ('and', 'and'), ('IBM', 'IBM'), ('Watson', 'Watson'), ('are', 'be'), ('trademarks', 'trademark'), ('or', 'or'), ('registered', 'register'), ('trademarks', 'trademark'), ('of', 'of'), ('International', 'International'), ('Business', 'Business'), ('Machines', 'Machine'), ('Corp.', 'Corp.'), (',', ','), ('registered', 'register'), ('in', 'in'), ('many', 'many'), ('jurisdictions', 'jurisdiction'), ('worldwide', 'worldwide'), ('.', '.')] 

 Dependency tags are: 
>> [(('IBM', 'trademarks'), 'nsubj'), ((',', 'logo'), 'punct'), (('the', 'logo'), 'det'), (('IBM', 'logo'), 'compound'), (('logo', 'IBM'), 'conj'), ((',', 'ibm.com'), 'punct'), (('ibm.com', 'IBM'), 'conj'), ((',', 'IBM'), 'punct'), (('and', 'IBM'), 'cc'), (('IBM', 'IBM'), 'conj'), (('Watson', 'IBM'), 'flat'), (('are', 'trademarks'), 'cop'), (('trademarks', 'root'), 'root'), (('or', 'trademarks'), 'cc'), (('registered', 'trademarks'), 'amod'), (('trademarks', 'trademarks'), 'conj'), (('of', 'Corp.'), 'case'), (('International', 'Machines'), 'amod'), (('Business', 'Machines'), 'compound'), (('Machines', 'Corp.'), 'compound'), (('Corp.', 'trademarks'), 'nmod'), ((',', 'registered'), 'punct'), (('registered', 'trademarks'), 'acl'), (('in', 'jurisdictions'), 'case'), (('many', 'jurisdictions'), 'amod'), (('jurisdictions', 'registered'), 'obl'), (('worldwide', 'registered'), 'advmod'), (('.', 'trademarks'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG'), ('IBM', 'ORG'), ('ibm.com', 'ORG'), ('IBM Watson', 'ORG'), ('International Business Machines Corp.', 'ORG')]

------------------- Sentence 2 -------------------

 Other product and   service names might be trademarks of IBM or other companies. 

Tokens are: 
>> ['Other', 'product', 'and', 'service', 'names', 'might', 'be', 'trademarks', 'of', 'IBM', 'or', 'other', 'companies', '.'] 

 UPOS tags are: 
>> [('Other', 'ADJ'), ('product', 'NOUN'), ('and', 'CCONJ'), ('service', 'NOUN'), ('names', 'NOUN'), ('might', 'AUX'), ('be', 'AUX'), ('trademarks', 'NOUN'), ('of', 'ADP'), ('IBM', 'PROPN'), ('or', 'CCONJ'), ('other', 'ADJ'), ('companies', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Other', 'JJ'), ('product', 'NN'), ('and', 'CC'), ('service', 'NN'), ('names', 'NNS'), ('might', 'MD'), ('be', 'VB'), ('trademarks', 'NNS'), ('of', 'IN'), ('IBM', 'NNP'), ('or', 'CC'), ('other', 'JJ'), ('companies', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Other', 'other'), ('product', 'product'), ('and', 'and'), ('service', 'service'), ('names', 'name'), ('might', 'might'), ('be', 'be'), ('trademarks', 'trademark'), ('of', 'of'), ('IBM', 'IBM'), ('or', 'or'), ('other', 'other'), ('companies', 'company'), ('.', '.')] 

 Dependency tags are: 
>> [(('Other', 'product'), 'amod'), (('product', 'trademarks'), 'nsubj'), (('and', 'names'), 'cc'), (('service', 'names'), 'compound'), (('names', 'product'), 'conj'), (('might', 'trademarks'), 'aux'), (('be', 'trademarks'), 'cop'), (('trademarks', 'root'), 'root'), (('of', 'IBM'), 'case'), (('IBM', 'trademarks'), 'nmod'), (('or', 'companies'), 'cc'), (('other', 'companies'), 'amod'), (('companies', 'IBM'), 'conj'), (('.', 'trademarks'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG')]

------------------- Sentence 3 -------------------

 A current list of IBM trademarks is available on the web at   www.ibm.com/legal/copytrade.shtml. 

Tokens are: 
>> ['A', 'current', 'list', 'of', 'IBM', 'trademarks', 'is', 'available', 'on', 'the', 'web', 'at', 'www.ibm.com/legal/copytrade.shtml.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('current', 'ADJ'), ('list', 'NOUN'), ('of', 'ADP'), ('IBM', 'PROPN'), ('trademarks', 'NOUN'), ('is', 'AUX'), ('available', 'ADJ'), ('on', 'ADP'), ('the', 'DET'), ('web', 'NOUN'), ('at', 'ADP'), ('www.ibm.com/legal/copytrade.shtml.', 'X')] 

 XPOS tags are: 
>> [('A', 'DT'), ('current', 'JJ'), ('list', 'NN'), ('of', 'IN'), ('IBM', 'NNP'), ('trademarks', 'NNS'), ('is', 'VBZ'), ('available', 'JJ'), ('on', 'IN'), ('the', 'DT'), ('web', 'NN'), ('at', 'IN'), ('www.ibm.com/legal/copytrade.shtml.', 'ADD')] 

 Lemmas are: 
>> [('A', 'a'), ('current', 'current'), ('list', 'list'), ('of', 'of'), ('IBM', 'IBM'), ('trademarks', 'trademark'), ('is', 'be'), ('available', 'available'), ('on', 'on'), ('the', 'the'), ('web', 'web'), ('at', 'at'), ('www.ibm.com/legal/copytrade.shtml.', 'www.ibm.com/legal/copytrade.shtml.')] 

 Dependency tags are: 
>> [(('A', 'list'), 'det'), (('current', 'list'), 'amod'), (('list', 'available'), 'nsubj'), (('of', 'trademarks'), 'case'), (('IBM', 'trademarks'), 'compound'), (('trademarks', 'list'), 'nmod'), (('is', 'available'), 'cop'), (('available', 'root'), 'root'), (('on', 'web'), 'case'), (('the', 'web'), 'det'), (('web', 'available'), 'obl'), (('at', 'www.ibm.com/legal/copytrade.shtml.'), 'case'), (('www.ibm.com/legal/copytrade.shtml.', 'available'), 'obl')]

 Named Entites are: 
>> [('IBM', 'ORG')]

================================ Paragraph 280 =================================

Microsoft, Windows, Windows NT and the Windows logo are  trademarks of Microsoft Corporation in the United States, other  countries, or both. 


------------------- Sentence 1 -------------------

 Microsoft, Windows, Windows NT and the Windows logo are  trademarks of Microsoft Corporation in the United States, other  countries, or both. 

Tokens are: 
>> ['Microsoft', ',', 'Windows', ',', 'Windows', 'NT', 'and', 'the', 'Windows', 'logo', 'are', 'trademarks', 'of', 'Microsoft', 'Corporation', 'in', 'the', 'United', 'States', ',', 'other', 'countries', ',', 'or', 'both', '.'] 

 UPOS tags are: 
>> [('Microsoft', 'PROPN'), (',', 'PUNCT'), ('Windows', 'PROPN'), (',', 'PUNCT'), ('Windows', 'PROPN'), ('NT', 'PART'), ('and', 'CCONJ'), ('the', 'DET'), ('Windows', 'PROPN'), ('logo', 'NOUN'), ('are', 'AUX'), ('trademarks', 'NOUN'), ('of', 'ADP'), ('Microsoft', 'PROPN'), ('Corporation', 'PROPN'), ('in', 'ADP'), ('the', 'DET'), ('United', 'ADJ'), ('States', 'PROPN'), (',', 'PUNCT'), ('other', 'ADJ'), ('countries', 'NOUN'), (',', 'PUNCT'), ('or', 'CCONJ'), ('both', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Microsoft', 'NNP'), (',', ','), ('Windows', 'NNPS'), (',', ','), ('Windows', 'NNPS'), ('NT', 'RB'), ('and', 'CC'), ('the', 'DT'), ('Windows', 'NNPS'), ('logo', 'NN'), ('are', 'VBP'), ('trademarks', 'NNS'), ('of', 'IN'), ('Microsoft', 'NNP'), ('Corporation', 'NNP'), ('in', 'IN'), ('the', 'DT'), ('United', 'NNP'), ('States', 'NNPS'), (',', ','), ('other', 'JJ'), ('countries', 'NNS'), (',', ','), ('or', 'CC'), ('both', 'DT'), ('.', '.')] 

 Lemmas are: 
>> [('Microsoft', 'Microsoft'), (',', ','), ('Windows', 'window'), (',', ','), ('Windows', 'window'), ('NT', 'not'), ('and', 'and'), ('the', 'the'), ('Windows', 'window'), ('logo', 'logo'), ('are', 'be'), ('trademarks', 'trademark'), ('of', 'of'), ('Microsoft', 'Microsoft'), ('Corporation', 'Corporation'), ('in', 'in'), ('the', 'the'), ('United', 'United'), ('States', 'State'), (',', ','), ('other', 'other'), ('countries', 'country'), (',', ','), ('or', 'or'), ('both', 'both'), ('.', '.')] 

 Dependency tags are: 
>> [(('Microsoft', 'trademarks'), 'nsubj'), ((',', 'Windows'), 'punct'), (('Windows', 'Microsoft'), 'conj'), ((',', 'Windows'), 'punct'), (('Windows', 'Microsoft'), 'conj'), (('NT', 'logo'), 'advmod'), (('and', 'logo'), 'cc'), (('the', 'logo'), 'det'), (('Windows', 'logo'), 'compound'), (('logo', 'Microsoft'), 'conj'), (('are', 'trademarks'), 'cop'), (('trademarks', 'root'), 'root'), (('of', 'Corporation'), 'case'), (('Microsoft', 'Corporation'), 'compound'), (('Corporation', 'trademarks'), 'nmod'), (('in', 'States'), 'case'), (('the', 'States'), 'det'), (('United', 'States'), 'amod'), (('States', 'Corporation'), 'nmod'), ((',', 'countries'), 'punct'), (('other', 'countries'), 'amod'), (('countries', 'States'), 'conj'), ((',', 'both'), 'punct'), (('or', 'both'), 'cc'), (('both', 'States'), 'conj'), (('.', 'trademarks'), 'punct')]

 Named Entites are: 
>> [('Microsoft', 'ORG'), ('Windows', 'ORG'), ('Windows NT', 'PRODUCT'), ('Windows', 'ORG'), ('Microsoft Corporation', 'ORG'), ('the United States', 'GPE')]

================================ Paragraph 281 =================================

This document is current as of the initial date of publication and may  be changed by IBM at any time. Not all offerings are available in every  country in which IBM operates.  


------------------- Sentence 1 -------------------

 This document is current as of the initial date of publication and may  be changed by IBM at any time. 

Tokens are: 
>> ['This', 'document', 'is', 'current', 'as', 'of', 'the', 'initial', 'date', 'of', 'publication', 'and', 'may', 'be', 'changed', 'by', 'IBM', 'at', 'any', 'time', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('document', 'NOUN'), ('is', 'AUX'), ('current', 'ADJ'), ('as', 'ADP'), ('of', 'ADP'), ('the', 'DET'), ('initial', 'ADJ'), ('date', 'NOUN'), ('of', 'ADP'), ('publication', 'NOUN'), ('and', 'CCONJ'), ('may', 'AUX'), ('be', 'AUX'), ('changed', 'VERB'), ('by', 'ADP'), ('IBM', 'PROPN'), ('at', 'ADP'), ('any', 'DET'), ('time', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('document', 'NN'), ('is', 'VBZ'), ('current', 'JJ'), ('as', 'IN'), ('of', 'IN'), ('the', 'DT'), ('initial', 'JJ'), ('date', 'NN'), ('of', 'IN'), ('publication', 'NN'), ('and', 'CC'), ('may', 'MD'), ('be', 'VB'), ('changed', 'VBN'), ('by', 'IN'), ('IBM', 'NNP'), ('at', 'IN'), ('any', 'DT'), ('time', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('document', 'document'), ('is', 'be'), ('current', 'current'), ('as', 'as'), ('of', 'of'), ('the', 'the'), ('initial', 'initial'), ('date', 'date'), ('of', 'of'), ('publication', 'publication'), ('and', 'and'), ('may', 'may'), ('be', 'be'), ('changed', 'change'), ('by', 'by'), ('IBM', 'IBM'), ('at', 'at'), ('any', 'any'), ('time', 'time'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'document'), 'det'), (('document', 'current'), 'nsubj'), (('is', 'current'), 'cop'), (('current', 'root'), 'root'), (('as', 'date'), 'case'), (('of', 'as'), 'fixed'), (('the', 'date'), 'det'), (('initial', 'date'), 'amod'), (('date', 'current'), 'obl'), (('of', 'publication'), 'case'), (('publication', 'date'), 'nmod'), (('and', 'changed'), 'cc'), (('may', 'changed'), 'aux'), (('be', 'changed'), 'aux:pass'), (('changed', 'current'), 'conj'), (('by', 'IBM'), 'case'), (('IBM', 'changed'), 'obl'), (('at', 'time'), 'case'), (('any', 'time'), 'det'), (('time', 'changed'), 'obl'), (('.', 'current'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG')]

------------------- Sentence 2 -------------------

 Not all offerings are available in every  country in which IBM operates. 

Tokens are: 
>> ['Not', 'all', 'offerings', 'are', 'available', 'in', 'every', 'country', 'in', 'which', 'IBM', 'operates', '.'] 

 UPOS tags are: 
>> [('Not', 'ADV'), ('all', 'DET'), ('offerings', 'NOUN'), ('are', 'AUX'), ('available', 'ADJ'), ('in', 'ADP'), ('every', 'DET'), ('country', 'NOUN'), ('in', 'ADP'), ('which', 'PRON'), ('IBM', 'PROPN'), ('operates', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Not', 'RB'), ('all', 'DT'), ('offerings', 'NNS'), ('are', 'VBP'), ('available', 'JJ'), ('in', 'IN'), ('every', 'DT'), ('country', 'NN'), ('in', 'IN'), ('which', 'WDT'), ('IBM', 'NNP'), ('operates', 'VBZ'), ('.', '.')] 

 Lemmas are: 
>> [('Not', 'not'), ('all', 'all'), ('offerings', 'offering'), ('are', 'be'), ('available', 'available'), ('in', 'in'), ('every', 'every'), ('country', 'country'), ('in', 'in'), ('which', 'which'), ('IBM', 'IBM'), ('operates', 'operate'), ('.', '.')] 

 Dependency tags are: 
>> [(('Not', 'offerings'), 'advmod'), (('all', 'offerings'), 'det'), (('offerings', 'available'), 'nsubj'), (('are', 'available'), 'cop'), (('available', 'root'), 'root'), (('in', 'country'), 'case'), (('every', 'country'), 'det'), (('country', 'available'), 'obl'), (('in', 'which'), 'case'), (('which', 'operates'), 'obl'), (('IBM', 'operates'), 'nsubj'), (('operates', 'country'), 'acl:relcl'), (('.', 'available'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG')]

================================ Paragraph 282 =================================

The performance data and client examples cited are presented for  illustrative purposes only. Actual performance results may vary depending  on specific configurations and operating conditions. THE INFORMATION  IN THIS DOCUMENT IS PROVIDED “AS IS” WITHOUT ANY WARRANTY,  EXPRESS OR IMPLIED, INCLUDING WITHOUT ANY WARRANTIES OF  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND ANY  WARRANTY OR CONDITION OF NON-INFRINGEMENT. IBM products are  warranted according to the terms and conditions of the agreements under  which they are provided. 


------------------- Sentence 1 -------------------

 The performance data and client examples cited are presented for  illustrative purposes only. 

Tokens are: 
>> ['The', 'performance', 'data', 'and', 'client', 'examples', 'cited', 'are', 'presented', 'for', 'illustrative', 'purposes', 'only', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('performance', 'NOUN'), ('data', 'NOUN'), ('and', 'CCONJ'), ('client', 'NOUN'), ('examples', 'NOUN'), ('cited', 'VERB'), ('are', 'AUX'), ('presented', 'VERB'), ('for', 'ADP'), ('illustrative', 'ADJ'), ('purposes', 'NOUN'), ('only', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('performance', 'NN'), ('data', 'NNS'), ('and', 'CC'), ('client', 'NN'), ('examples', 'NNS'), ('cited', 'VBN'), ('are', 'VBP'), ('presented', 'VBN'), ('for', 'IN'), ('illustrative', 'JJ'), ('purposes', 'NNS'), ('only', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('performance', 'performance'), ('data', 'datum'), ('and', 'and'), ('client', 'client'), ('examples', 'example'), ('cited', 'cite'), ('are', 'be'), ('presented', 'present'), ('for', 'for'), ('illustrative', 'illustrative'), ('purposes', 'purpose'), ('only', 'only'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'data'), 'det'), (('performance', 'data'), 'compound'), (('data', 'presented'), 'nsubj:pass'), (('and', 'examples'), 'cc'), (('client', 'examples'), 'compound'), (('examples', 'data'), 'conj'), (('cited', 'examples'), 'acl'), (('are', 'presented'), 'aux:pass'), (('presented', 'root'), 'root'), (('for', 'purposes'), 'case'), (('illustrative', 'purposes'), 'amod'), (('purposes', 'presented'), 'obl'), (('only', 'presented'), 'advmod'), (('.', 'presented'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Actual performance results may vary depending  on specific configurations and operating conditions. 

Tokens are: 
>> ['Actual', 'performance', 'results', 'may', 'vary', 'depending', 'on', 'specific', 'configurations', 'and', 'operating', 'conditions', '.'] 

 UPOS tags are: 
>> [('Actual', 'ADJ'), ('performance', 'NOUN'), ('results', 'NOUN'), ('may', 'AUX'), ('vary', 'VERB'), ('depending', 'VERB'), ('on', 'ADP'), ('specific', 'ADJ'), ('configurations', 'NOUN'), ('and', 'CCONJ'), ('operating', 'NOUN'), ('conditions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Actual', 'JJ'), ('performance', 'NN'), ('results', 'NNS'), ('may', 'MD'), ('vary', 'VB'), ('depending', 'VBG'), ('on', 'IN'), ('specific', 'JJ'), ('configurations', 'NNS'), ('and', 'CC'), ('operating', 'NN'), ('conditions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Actual', 'actual'), ('performance', 'performance'), ('results', 'result'), ('may', 'may'), ('vary', 'vary'), ('depending', 'depend'), ('on', 'on'), ('specific', 'specific'), ('configurations', 'configuration'), ('and', 'and'), ('operating', 'operating'), ('conditions', 'condition'), ('.', '.')] 

 Dependency tags are: 
>> [(('Actual', 'results'), 'amod'), (('performance', 'results'), 'compound'), (('results', 'vary'), 'nsubj'), (('may', 'vary'), 'aux'), (('vary', 'root'), 'root'), (('depending', 'configurations'), 'case'), (('on', 'depending'), 'fixed'), (('specific', 'configurations'), 'amod'), (('configurations', 'vary'), 'obl'), (('and', 'conditions'), 'cc'), (('operating', 'conditions'), 'compound'), (('conditions', 'configurations'), 'conj'), (('.', 'vary'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 THE INFORMATION  IN THIS DOCUMENT IS PROVIDED “AS IS” WITHOUT ANY WARRANTY,  EXPRESS OR IMPLIED, INCLUDING WITHOUT ANY WARRANTIES OF  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND ANY  WARRANTY OR CONDITION OF NON-INFRINGEMENT. 

Tokens are: 
>> ['THE', 'INFORMATION', 'IN', 'THIS', 'DOCUMENT', 'IS', 'PROVIDED', '“', 'AS', 'IS', '”', 'WITHOUT', 'ANY', 'WARRANTY', ',', 'EXPRESS', 'OR', 'IMPLIED', ',', 'INCLUDING', 'WITHOUT', 'ANY', 'WARRANTIES', 'OF', 'MERCHANTABILITY', ',', 'FITNESS', 'FOR', 'A', 'PARTICULAR', 'PURPOSE', 'AND', 'ANY', 'WARRANTY', 'OR', 'CONDITION', 'OF', 'NON-INFRINGEMENT', '.'] 

 UPOS tags are: 
>> [('THE', 'DET'), ('INFORMATION', 'NOUN'), ('IN', 'ADP'), ('THIS', 'DET'), ('DOCUMENT', 'NOUN'), ('IS', 'AUX'), ('PROVIDED', 'VERB'), ('“', 'PUNCT'), ('AS', 'SCONJ'), ('IS', 'VERB'), ('”', 'PUNCT'), ('WITHOUT', 'ADP'), ('ANY', 'DET'), ('WARRANTY', 'NOUN'), (',', 'PUNCT'), ('EXPRESS', 'ADJ'), ('OR', 'CCONJ'), ('IMPLIED', 'ADJ'), (',', 'PUNCT'), ('INCLUDING', 'VERB'), ('WITHOUT', 'ADP'), ('ANY', 'DET'), ('WARRANTIES', 'NOUN'), ('OF', 'ADP'), ('MERCHANTABILITY', 'NOUN'), (',', 'PUNCT'), ('FITNESS', 'NOUN'), ('FOR', 'ADP'), ('A', 'DET'), ('PARTICULAR', 'ADJ'), ('PURPOSE', 'NOUN'), ('AND', 'CCONJ'), ('ANY', 'DET'), ('WARRANTY', 'NOUN'), ('OR', 'CCONJ'), ('CONDITION', 'NOUN'), ('OF', 'ADP'), ('NON-INFRINGEMENT', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('THE', 'DT'), ('INFORMATION', 'NN'), ('IN', 'IN'), ('THIS', 'DT'), ('DOCUMENT', 'NN'), ('IS', 'VBZ'), ('PROVIDED', 'VBN'), ('“', '``'), ('AS', 'IN'), ('IS', 'VBZ'), ('”', '``'), ('WITHOUT', 'IN'), ('ANY', 'DT'), ('WARRANTY', 'NN'), (',', ','), ('EXPRESS', 'JJ'), ('OR', 'CC'), ('IMPLIED', 'JJ'), (',', ','), ('INCLUDING', 'VBG'), ('WITHOUT', 'IN'), ('ANY', 'DT'), ('WARRANTIES', 'NNS'), ('OF', 'IN'), ('MERCHANTABILITY', 'NN'), (',', ','), ('FITNESS', 'NN'), ('FOR', 'IN'), ('A', 'DT'), ('PARTICULAR', 'JJ'), ('PURPOSE', 'NN'), ('AND', 'CC'), ('ANY', 'DT'), ('WARRANTY', 'NN'), ('OR', 'CC'), ('CONDITION', 'NN'), ('OF', 'IN'), ('NON-INFRINGEMENT', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('THE', 'the'), ('INFORMATION', 'information'), ('IN', 'in'), ('THIS', 'this'), ('DOCUMENT', 'document'), ('IS', 'be'), ('PROVIDED', 'provide'), ('“', "''"), ('AS', 'as'), ('IS', 'be'), ('”', "''"), ('WITHOUT', 'without'), ('ANY', 'any'), ('WARRANTY', 'warranty'), (',', ','), ('EXPRESS', 'express'), ('OR', 'or'), ('IMPLIED', 'implied'), (',', ','), ('INCLUDING', 'include'), ('WITHOUT', 'without'), ('ANY', 'any'), ('WARRANTIES', 'warrantie'), ('OF', 'of'), ('MERCHANTABILITY', 'merchantability'), (',', ','), ('FITNESS', 'FITNESS'), ('FOR', 'for'), ('A', 'a'), ('PARTICULAR', 'particala'), ('PURPOSE', 'purpose'), ('AND', 'and'), ('ANY', 'any'), ('WARRANTY', 'warranty'), ('OR', 'or'), ('CONDITION', 'condition'), ('OF', 'of'), ('NON-INFRINGEMENT', 'non-infringement'), ('.', '.')] 

 Dependency tags are: 
>> [(('THE', 'INFORMATION'), 'det'), (('INFORMATION', 'PROVIDED'), 'nsubj:pass'), (('IN', 'DOCUMENT'), 'case'), (('THIS', 'DOCUMENT'), 'det'), (('DOCUMENT', 'INFORMATION'), 'nmod'), (('IS', 'PROVIDED'), 'aux:pass'), (('PROVIDED', 'root'), 'root'), (('“', 'IS'), 'punct'), (('AS', 'IS'), 'mark'), (('IS', 'PROVIDED'), 'advcl'), (('”', 'WARRANTY'), 'punct'), (('WITHOUT', 'WARRANTY'), 'case'), (('ANY', 'WARRANTY'), 'det'), (('WARRANTY', 'IS'), 'obl'), ((',', 'EXPRESS'), 'punct'), (('EXPRESS', 'WARRANTY'), 'conj'), (('OR', 'IMPLIED'), 'cc'), (('IMPLIED', 'WARRANTY'), 'conj'), ((',', 'WARRANTIES'), 'punct'), (('INCLUDING', 'WARRANTIES'), 'case'), (('WITHOUT', 'WARRANTIES'), 'case'), (('ANY', 'WARRANTIES'), 'det'), (('WARRANTIES', 'IS'), 'obl'), (('OF', 'MERCHANTABILITY'), 'case'), (('MERCHANTABILITY', 'WARRANTIES'), 'nmod'), ((',', 'FITNESS'), 'punct'), (('FITNESS', 'MERCHANTABILITY'), 'conj'), (('FOR', 'PURPOSE'), 'case'), (('A', 'PURPOSE'), 'det'), (('PARTICULAR', 'PURPOSE'), 'amod'), (('PURPOSE', 'WARRANTIES'), 'nmod'), (('AND', 'WARRANTY'), 'cc'), (('ANY', 'WARRANTY'), 'det'), (('WARRANTY', 'WARRANTY'), 'conj'), (('OR', 'CONDITION'), 'cc'), (('CONDITION', 'WARRANTY'), 'conj'), (('OF', 'NON-INFRINGEMENT'), 'case'), (('NON-INFRINGEMENT', 'CONDITION'), 'nmod'), (('.', 'PROVIDED'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 IBM products are  warranted according to the terms and conditions of the agreements under  which they are provided. 

Tokens are: 
>> ['IBM', 'products', 'are', 'warranted', 'according', 'to', 'the', 'terms', 'and', 'conditions', 'of', 'the', 'agreements', 'under', 'which', 'they', 'are', 'provided', '.'] 

 UPOS tags are: 
>> [('IBM', 'PROPN'), ('products', 'NOUN'), ('are', 'AUX'), ('warranted', 'VERB'), ('according', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('terms', 'NOUN'), ('and', 'CCONJ'), ('conditions', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('agreements', 'NOUN'), ('under', 'ADP'), ('which', 'PRON'), ('they', 'PRON'), ('are', 'AUX'), ('provided', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IBM', 'NNP'), ('products', 'NNS'), ('are', 'VBP'), ('warranted', 'VBN'), ('according', 'VBG'), ('to', 'IN'), ('the', 'DT'), ('terms', 'NNS'), ('and', 'CC'), ('conditions', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('agreements', 'NNS'), ('under', 'IN'), ('which', 'WDT'), ('they', 'PRP'), ('are', 'VBP'), ('provided', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('IBM', 'IBM'), ('products', 'product'), ('are', 'be'), ('warranted', 'warrant'), ('according', 'accord'), ('to', 'to'), ('the', 'the'), ('terms', 'term'), ('and', 'and'), ('conditions', 'condition'), ('of', 'of'), ('the', 'the'), ('agreements', 'agreement'), ('under', 'under'), ('which', 'which'), ('they', 'they'), ('are', 'be'), ('provided', 'provide'), ('.', '.')] 

 Dependency tags are: 
>> [(('IBM', 'products'), 'compound'), (('products', 'warranted'), 'nsubj:pass'), (('are', 'warranted'), 'aux:pass'), (('warranted', 'root'), 'root'), (('according', 'terms'), 'case'), (('to', 'according'), 'fixed'), (('the', 'terms'), 'det'), (('terms', 'warranted'), 'obl'), (('and', 'conditions'), 'cc'), (('conditions', 'terms'), 'conj'), (('of', 'agreements'), 'case'), (('the', 'agreements'), 'det'), (('agreements', 'terms'), 'nmod'), (('under', 'which'), 'case'), (('which', 'provided'), 'obl'), (('they', 'provided'), 'nsubj:pass'), (('are', 'provided'), 'aux:pass'), (('provided', 'agreements'), 'acl:relcl'), (('.', 'warranted'), 'punct')]

 Named Entites are: 
>> [('IBM', 'ORG')]

================================ Paragraph 283 =================================

 1 www.weforum.org/agenda/2016/01/the-fourth-industrial-revolution- what-it-means-and-how-to-respond  


------------------- Sentence 1 -------------------

 1 www.weforum.org/agenda/2016/01/the-fourth-industrial-revolution- what-it-means-and-how-to-respond 

Tokens are: 
>> ['1', 'www.weforum.org/agenda/2016/01/the-fourth-industrial-revolution-', 'what-it-means-and-how-to-respond'] 

 UPOS tags are: 
>> [('1', 'X'), ('www.weforum.org/agenda/2016/01/the-fourth-industrial-revolution-', 'X'), ('what-it-means-and-how-to-respond', 'NOUN')] 

 XPOS tags are: 
>> [('1', 'LS'), ('www.weforum.org/agenda/2016/01/the-fourth-industrial-revolution-', 'ADD'), ('what-it-means-and-how-to-respond', 'NN')] 

 Lemmas are: 
>> [('1', '1'), ('www.weforum.org/agenda/2016/01/the-fourth-industrial-revolution-', 'www.weforum.org/agenda/2016/01/the-fourth-industrial-revolution-'), ('what-it-means-and-how-to-respond', 'what-it-means-and-how-to-respond')] 

 Dependency tags are: 
>> [(('1', 'www.weforum.org/agenda/2016/01/the-fourth-industrial-revolution-'), 'dep'), (('www.weforum.org/agenda/2016/01/the-fourth-industrial-revolution-', 'root'), 'root'), (('what-it-means-and-how-to-respond', 'www.weforum.org/agenda/2016/01/the-fourth-industrial-revolution-'), 'list')]

 Named Entites are: 
>> []

================================ Paragraph 284 =================================

 2 www.quora.com/What-is-artificial-intelligence-What-are-task- domains-in-AI  


------------------- Sentence 1 -------------------

 2 www.quora.com/What-is-artificial-intelligence-What-are-task- domains-in-AI 

Tokens are: 
>> ['2', 'www.quora.com/What-is-artificial-intelligence-What-are-task-', 'domains-in-AI'] 

 UPOS tags are: 
>> [('2', 'X'), ('www.quora.com/What-is-artificial-intelligence-What-are-task-', 'X'), ('domains-in-AI', 'X')] 

 XPOS tags are: 
>> [('2', 'LS'), ('www.quora.com/What-is-artificial-intelligence-What-are-task-', 'ADD'), ('domains-in-AI', 'ADD')] 

 Lemmas are: 
>> [('2', '2'), ('www.quora.com/What-is-artificial-intelligence-What-are-task-', 'www.quora.com/what-is-artificial-intelligence-what-are-task-'), ('domains-in-AI', 'domains-in-ai')] 

 Dependency tags are: 
>> [(('2', 'www.quora.com/What-is-artificial-intelligence-What-are-task-'), 'dep'), (('www.quora.com/What-is-artificial-intelligence-What-are-task-', 'root'), 'root'), (('domains-in-AI', 'www.quora.com/What-is-artificial-intelligence-What-are-task-'), 'list')]

 Named Entites are: 
>> [('2', 'CARDINAL')]

================================ Paragraph 285 =================================

 3 ai100.stanford.edu/sites/default/files/ai_100_report_0906fnlc_ single.pdf  


------------------- Sentence 1 -------------------

 3 ai100.stanford.edu/sites/default/files/ai_100_report_0906fnlc_ single.pdf 

Tokens are: 
>> ['3', 'ai100.stanford.edu/sites/default/files/ai_100_report_0906fnlc_', 'single.pdf'] 

 UPOS tags are: 
>> [('3', 'X'), ('ai100.stanford.edu/sites/default/files/ai_100_report_0906fnlc_', 'X'), ('single.pdf', 'NOUN')] 

 XPOS tags are: 
>> [('3', 'LS'), ('ai100.stanford.edu/sites/default/files/ai_100_report_0906fnlc_', 'ADD'), ('single.pdf', 'NN')] 

 Lemmas are: 
>> [('3', '3'), ('ai100.stanford.edu/sites/default/files/ai_100_report_0906fnlc_', 'ai100.stanford.edu/sites/default/files/ai_100_report_0906fnlc_'), ('single.pdf', 'single.pdf')] 

 Dependency tags are: 
>> [(('3', 'single.pdf'), 'dep'), (('ai100.stanford.edu/sites/default/files/ai_100_report_0906fnlc_', 'root'), 'root'), (('single.pdf', 'ai100.stanford.edu/sites/default/files/ai_100_report_0906fnlc_'), 'list')]

 Named Entites are: 
>> []

================================ Paragraph 286 =================================

 4 www.investopedia.com/terms/a/artificial-intelligence-ai.asp   


------------------- Sentence 1 -------------------

 4 www.investopedia.com/terms/a/artificial-intelligence-ai.asp 

Tokens are: 
>> ['4', 'www.investopedia.com/terms/a/artificial-intelligence-ai.asp'] 

 UPOS tags are: 
>> [('4', 'X'), ('www.investopedia.com/terms/a/artificial-intelligence-ai.asp', 'X')] 

 XPOS tags are: 
>> [('4', 'LS'), ('www.investopedia.com/terms/a/artificial-intelligence-ai.asp', 'ADD')] 

 Lemmas are: 
>> [('4', '4'), ('www.investopedia.com/terms/a/artificial-intelligence-ai.asp', 'www.investopedia.com/terms/a/artificial-intelligence-ai.asp')] 

 Dependency tags are: 
>> [(('4', 'www.investopedia.com/terms/a/artificial-intelligence-ai.asp'), 'dep'), (('www.investopedia.com/terms/a/artificial-intelligence-ai.asp', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 287 =================================

 5 neuralnetworksanddeeplearning.com/chap5.html 


------------------- Sentence 1 -------------------

 5 neuralnetworksanddeeplearning.com/chap5.html 

Tokens are: 
>> ['5', 'neuralnetworksanddeeplearning.com/chap5.html'] 

 UPOS tags are: 
>> [('5', 'X'), ('neuralnetworksanddeeplearning.com/chap5.html', 'X')] 

 XPOS tags are: 
>> [('5', 'LS'), ('neuralnetworksanddeeplearning.com/chap5.html', 'ADD')] 

 Lemmas are: 
>> [('5', '5'), ('neuralnetworksanddeeplearning.com/chap5.html', 'neuralnetworksanddeeplearning.com/chap5.html')] 

 Dependency tags are: 
>> [(('5', 'neuralnetworksanddeeplearning.com/chap5.html'), 'dep'), (('neuralnetworksanddeeplearning.com/chap5.html', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 288 =================================

 6 datasciencedegree.wisconsin.edu/data-science/what-do-data- scientists-do 


------------------- Sentence 1 -------------------

 6 datasciencedegree.wisconsin.edu/data-science/what-do-data- scientists-do 

Tokens are: 
>> ['6', 'datasciencedegree.wisconsin.edu/data-science/what-do-data-', 'scientists-do'] 

 UPOS tags are: 
>> [('6', 'X'), ('datasciencedegree.wisconsin.edu/data-science/what-do-data-', 'X'), ('scientists-do', 'NOUN')] 

 XPOS tags are: 
>> [('6', 'LS'), ('datasciencedegree.wisconsin.edu/data-science/what-do-data-', 'ADD'), ('scientists-do', 'NN')] 

 Lemmas are: 
>> [('6', '6'), ('datasciencedegree.wisconsin.edu/data-science/what-do-data-', 'datasciencedegree.wisconsin.edu/data-science/what-do-data-'), ('scientists-do', 'scientists-do')] 

 Dependency tags are: 
>> [(('6', 'scientists-do'), 'dep'), (('datasciencedegree.wisconsin.edu/data-science/what-do-data-', 'scientists-do'), 'compound'), (('scientists-do', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 289 =================================

 7 www.interaction-design.org/literature/book/the-social-design-of- technical-systems-building-technologies-for-communities/the- evolution-of-computing  


------------------- Sentence 1 -------------------

 7 www.interaction-design.org/literature/book/the-social-design-of- technical-systems-building-technologies-for-communities/the- evolution-of-computing 

Tokens are: 
>> ['7', 'www.interaction-design.org/literature/book/the-social-design-of-', 'technical-systems-building-technologies-for-communities', '/the-', 'evolution', '-', 'of-', 'computing'] 

 UPOS tags are: 
>> [('7', 'NUM'), ('www.interaction-design.org/literature/book/the-social-design-of-', 'X'), ('technical-systems-building-technologies-for-communities', 'NOUN'), ('/the-', 'NOUN'), ('evolution', 'NOUN'), ('-', 'PUNCT'), ('of-', 'NOUN'), ('computing', 'NOUN')] 

 XPOS tags are: 
>> [('7', 'CD'), ('www.interaction-design.org/literature/book/the-social-design-of-', 'ADD'), ('technical-systems-building-technologies-for-communities', 'NN'), ('/the-', 'NN'), ('evolution', 'NN'), ('-', ','), ('of-', 'NN'), ('computing', 'NN')] 

 Lemmas are: 
>> [('7', '7'), ('www.interaction-design.org/literature/book/the-social-design-of-', 'www.interaction-design.org/literature/book/the-social-design-of-'), ('technical-systems-building-technologies-for-communities', 'technical-systems-building-technologies-for-communities'), ('/the-', '/the-'), ('evolution', 'evolution'), ('-', '-'), ('of-', 'of-'), ('computing', 'computing')] 

 Dependency tags are: 
>> [(('7', 'root'), 'root'), (('www.interaction-design.org/literature/book/the-social-design-of-', '7'), 'appos'), (('technical-systems-building-technologies-for-communities', '7'), 'appos'), (('/the-', 'evolution'), 'compound'), (('evolution', 'technical-systems-building-technologies-for-communities'), 'conj'), (('-', 'computing'), 'punct'), (('of-', 'computing'), 'compound'), (('computing', 'technical-systems-building-technologies-for-communities'), 'appos')]

 Named Entites are: 
>> []

================================ Paragraph 290 =================================

 8 www.forbes.com/sites/blakemorgan/2017/06/13/ethics-and-artificial- intelligence-with-ibm-watsons-rob-high/#72b4a0e3260e  www.forbes.com/sites/gilpress/2016/12/21/artificial-intelligence- pioneers-peter-norvig-google/#6ecd8a2d38c6  


------------------- Sentence 1 -------------------

 8 www.forbes.com/sites/blakemorgan/2017/06/13/ethics-and-artificial- intelligence-with-ibm-watsons-rob-high/#72b4a0e3260e  www.forbes.com/sites/gilpress/2016/12/21/artificial-intelligence- pioneers-peter-norvig-google/#6ecd8a2d38c6 

Tokens are: 
>> ['8', 'www.forbes.com/sites/blakemorgan/2017/06/13/ethics-and-artificial-', 'intelligence-with-ibm-watsons-rob-high/#72b4a0e3260e', 'www.forbes.com/sites/gilpress/2016/12/21/artificial-intelligence-', 'pioneers-peter-norvig-google/#6ecd8a2d38c6'] 

 UPOS tags are: 
>> [('8', 'X'), ('www.forbes.com/sites/blakemorgan/2017/06/13/ethics-and-artificial-', 'X'), ('intelligence-with-ibm-watsons-rob-high/#72b4a0e3260e', 'X'), ('www.forbes.com/sites/gilpress/2016/12/21/artificial-intelligence-', 'X'), ('pioneers-peter-norvig-google/#6ecd8a2d38c6', 'X')] 

 XPOS tags are: 
>> [('8', 'LS'), ('www.forbes.com/sites/blakemorgan/2017/06/13/ethics-and-artificial-', 'ADD'), ('intelligence-with-ibm-watsons-rob-high/#72b4a0e3260e', 'ADD'), ('www.forbes.com/sites/gilpress/2016/12/21/artificial-intelligence-', 'ADD'), ('pioneers-peter-norvig-google/#6ecd8a2d38c6', 'ADD')] 

 Lemmas are: 
>> [('8', '8'), ('www.forbes.com/sites/blakemorgan/2017/06/13/ethics-and-artificial-', 'www.forbes.com/sites/blakemorgan/2017/06/13/ethics-and-artificial-'), ('intelligence-with-ibm-watsons-rob-high/#72b4a0e3260e', 'intelligence-with-ibm-watsons-rob-high/#72b4a0e3260e'), ('www.forbes.com/sites/gilpress/2016/12/21/artificial-intelligence-', 'www.forbes.com/sites/gilpress/2016/12/21/artificial-intelligence-'), ('pioneers-peter-norvig-google/#6ecd8a2d38c6', 'pioneers-peter-norvig-google/#6ecd8a2d38c6')] 

 Dependency tags are: 
>> [(('8', 'www.forbes.com/sites/blakemorgan/2017/06/13/ethics-and-artificial-'), 'dep'), (('www.forbes.com/sites/blakemorgan/2017/06/13/ethics-and-artificial-', 'root'), 'root'), (('intelligence-with-ibm-watsons-rob-high/#72b4a0e3260e', 'www.forbes.com/sites/blakemorgan/2017/06/13/ethics-and-artificial-'), 'list'), (('www.forbes.com/sites/gilpress/2016/12/21/artificial-intelligence-', 'www.forbes.com/sites/blakemorgan/2017/06/13/ethics-and-artificial-'), 'list'), (('pioneers-peter-norvig-google/#6ecd8a2d38c6', 'www.forbes.com/sites/blakemorgan/2017/06/13/ethics-and-artificial-'), 'list')]

 Named Entites are: 
>> []

================================ Paragraph 291 =================================

 9 www-01.ibm.com/common/ssi/cgi-bin/ ssialias?htmlfid=KUM12390USEN&, page 67 


------------------- Sentence 1 -------------------

 9 www-01.ibm.com/common/ssi/cgi-bin/ ssialias?htmlfid=KUM12390USEN&, page 67 

Tokens are: 
>> ['9', 'www-01.ibm.com/common/ssi/cgi-bin/', 'ssialias?htmlfid=KUM12390USEN&', ',', 'page', '67'] 

 UPOS tags are: 
>> [('9', 'X'), ('www-01.ibm.com/common/ssi/cgi-bin/', 'X'), ('ssialias?htmlfid=KUM12390USEN&', 'X'), (',', 'PUNCT'), ('page', 'NOUN'), ('67', 'NUM')] 

 XPOS tags are: 
>> [('9', 'LS'), ('www-01.ibm.com/common/ssi/cgi-bin/', 'ADD'), ('ssialias?htmlfid=KUM12390USEN&', 'ADD'), (',', ','), ('page', 'NN'), ('67', 'CD')] 

 Lemmas are: 
>> [('9', '9'), ('www-01.ibm.com/common/ssi/cgi-bin/', 'www-01.ibm.com/common/ssi/cgi-bin/'), ('ssialias?htmlfid=KUM12390USEN&', 'ssialias?htmlfid=kum12390usen&'), (',', ','), ('page', 'page'), ('67', '67')] 

 Dependency tags are: 
>> [(('9', 'www-01.ibm.com/common/ssi/cgi-bin/'), 'dep'), (('www-01.ibm.com/common/ssi/cgi-bin/', 'root'), 'root'), (('ssialias?htmlfid=KUM12390USEN&', 'www-01.ibm.com/common/ssi/cgi-bin/'), 'list'), ((',', 'www-01.ibm.com/common/ssi/cgi-bin/'), 'punct'), (('page', 'ssialias?htmlfid=KUM12390USEN&'), 'appos'), (('67', 'page'), 'nummod')]

 Named Entites are: 
>> [('67', 'CARDINAL')]

================================ Paragraph 292 =================================

 10 homes.cs.washington.edu/~marcotcr/blog/lime 


------------------- Sentence 1 -------------------

 10 homes.cs.washington.edu/~marcotcr/blog/lime 

Tokens are: 
>> ['10', 'homes.cs.washington.edu/~marcotcr/blog/lime'] 

 UPOS tags are: 
>> [('10', 'X'), ('homes.cs.washington.edu/~marcotcr/blog/lime', 'X')] 

 XPOS tags are: 
>> [('10', 'LS'), ('homes.cs.washington.edu/~marcotcr/blog/lime', 'ADD')] 

 Lemmas are: 
>> [('10', '10'), ('homes.cs.washington.edu/~marcotcr/blog/lime', 'homes.cs.washington.edu/~marcotcr/blog/lime')] 

 Dependency tags are: 
>> [(('10', 'homes.cs.washington.edu/~marcotcr/blog/lime'), 'dep'), (('homes.cs.washington.edu/~marcotcr/blog/lime', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 293 =================================

39019539-USEN-00 


------------------- Sentence 1 -------------------

 39019539-USEN-00 

Tokens are: 
>> ['39019539-USEN', '-00'] 

 UPOS tags are: 
>> [('39019539-USEN', 'NUM'), ('-00', 'NUM')] 

 XPOS tags are: 
>> [('39019539-USEN', 'CD'), ('-00', 'CD')] 

 Lemmas are: 
>> [('39019539-USEN', '39019539-usen'), ('-00', '-00')] 

 Dependency tags are: 
>> [(('39019539-USEN', 'root'), 'root'), (('-00', '39019539-USEN'), 'nmod:tmod')]

 Named Entites are: 
>> []

================================ Paragraph 294 =================================

Please Recycle


------------------- Sentence 1 -------------------

 Please Recycle 

Tokens are: 
>> ['Please', 'Recycle'] 

 UPOS tags are: 
>> [('Please', 'INTJ'), ('Recycle', 'VERB')] 

 XPOS tags are: 
>> [('Please', 'UH'), ('Recycle', 'VB')] 

 Lemmas are: 
>> [('Please', 'please'), ('Recycle', 'recycle')] 

 Dependency tags are: 
>> [(('Please', 'Recycle'), 'discourse'), (('Recycle', 'root'), 'root')]

 Named Entites are: 
>> []