				 *** Text Processing using Stanza *** 


================================ Paragraph 1 =================================

WHITE PAPERWHITE PAPER 


------------------- Sentence 1 -------------------

 WHITE PAPERWHITE PAPER 

Tokens are: 
>> ['WHITE', 'PAPERWHITE', 'PAPER'] 

 UPOS tags are: 
>> [('WHITE', 'ADJ'), ('PAPERWHITE', 'PROPN'), ('PAPER', 'PROPN')] 

 XPOS tags are: 
>> [('WHITE', 'NNP'), ('PAPERWHITE', 'NNP'), ('PAPER', 'NNP')] 

 Lemmas are: 
>> [('WHITE', 'white'), ('PAPERWHITE', 'PAPERWHITE'), ('PAPER', 'PAPER')] 

 Dependency tags are: 
>> [(('WHITE', 'PAPERWHITE'), 'amod'), (('PAPERWHITE', 'PAPER'), 'compound'), (('PAPER', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 2 =================================

Demystifying data science How organizations can benefit from artificial intelligence and  advanced analytics


------------------- Sentence 1 -------------------

 Demystifying data science 

Tokens are: 
>> ['Demystifying', 'data', 'science'] 

 UPOS tags are: 
>> [('Demystifying', 'VERB'), ('data', 'NOUN'), ('science', 'NOUN')] 

 XPOS tags are: 
>> [('Demystifying', 'VBG'), ('data', 'NN'), ('science', 'NN')] 

 Lemmas are: 
>> [('Demystifying', 'demystify'), ('data', 'datum'), ('science', 'science')] 

 Dependency tags are: 
>> [(('Demystifying', 'root'), 'root'), (('data', 'science'), 'compound'), (('science', 'Demystifying'), 'obj')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 How organizations can benefit from artificial intelligence and  advanced analytics 

Tokens are: 
>> ['How', 'organizations', 'can', 'benefit', 'from', 'artificial', 'intelligence', 'and', 'advanced', 'analytics'] 

 UPOS tags are: 
>> [('How', 'SCONJ'), ('organizations', 'NOUN'), ('can', 'AUX'), ('benefit', 'VERB'), ('from', 'ADP'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('and', 'CCONJ'), ('advanced', 'ADJ'), ('analytics', 'NOUN')] 

 XPOS tags are: 
>> [('How', 'WRB'), ('organizations', 'NNS'), ('can', 'MD'), ('benefit', 'VB'), ('from', 'IN'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('and', 'CC'), ('advanced', 'JJ'), ('analytics', 'NNS')] 

 Lemmas are: 
>> [('How', 'how'), ('organizations', 'organization'), ('can', 'can'), ('benefit', 'benefit'), ('from', 'from'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('and', 'and'), ('advanced', 'advanced'), ('analytics', 'analytic')] 

 Dependency tags are: 
>> [(('How', 'benefit'), 'mark'), (('organizations', 'benefit'), 'nsubj'), (('can', 'benefit'), 'aux'), (('benefit', 'root'), 'root'), (('from', 'intelligence'), 'case'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'benefit'), 'obl'), (('and', 'analytics'), 'cc'), (('advanced', 'analytics'), 'amod'), (('analytics', 'intelligence'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 3 =================================

2/14Demystifying data science  


------------------- Sentence 1 -------------------

 2/14 

Tokens are: 
>> ['2/14'] 

 UPOS tags are: 
>> [('2/14', 'NUM')] 

 XPOS tags are: 
>> [('2/14', 'CD')] 

 Lemmas are: 
>> [('2/14', '2/14')] 

 Dependency tags are: 
>> [(('2/14', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Demystifying data science 

Tokens are: 
>> ['Demystifying', 'data', 'science'] 

 UPOS tags are: 
>> [('Demystifying', 'VERB'), ('data', 'NOUN'), ('science', 'NOUN')] 

 XPOS tags are: 
>> [('Demystifying', 'VBG'), ('data', 'NN'), ('science', 'NN')] 

 Lemmas are: 
>> [('Demystifying', 'demystify'), ('data', 'datum'), ('science', 'science')] 

 Dependency tags are: 
>> [(('Demystifying', 'root'), 'root'), (('data', 'science'), 'compound'), (('science', 'Demystifying'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 4 =================================

Contents What is artificial intelligence and machine learning? 4  


------------------- Sentence 1 -------------------

 Contents 

Tokens are: 
>> ['Contents'] 

 UPOS tags are: 
>> [('Contents', 'NOUN')] 

 XPOS tags are: 
>> [('Contents', 'NNS')] 

 Lemmas are: 
>> [('Contents', 'content')] 

 Dependency tags are: 
>> [(('Contents', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 What is artificial intelligence and machine learning? 

Tokens are: 
>> ['What', 'is', 'artificial', 'intelligence', 'and', 'machine', 'learning', '?'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('is', 'AUX'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('and', 'CCONJ'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('is', 'VBZ'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('and', 'CC'), ('machine', 'NN'), ('learning', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('is', 'be'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('and', 'and'), ('machine', 'machine'), ('learning', 'learning'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'root'), 'root'), (('is', 'What'), 'cop'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'What'), 'nsubj'), (('and', 'learning'), 'cc'), (('machine', 'learning'), 'compound'), (('learning', 'intelligence'), 'conj'), (('?', 'What'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 4 

Tokens are: 
>> ['4'] 

 UPOS tags are: 
>> [('4', 'X')] 

 XPOS tags are: 
>> [('4', 'LS')] 

 Lemmas are: 
>> [('4', '4')] 

 Dependency tags are: 
>> [(('4', 'root'), 'root')]

 Named Entites are: 
>> [('4', 'CARDINAL')]

================================ Paragraph 5 =================================

How can an organization derive business value from AI and analytics?  6 


------------------- Sentence 1 -------------------

 How can an organization derive business value from AI and analytics? 

Tokens are: 
>> ['How', 'can', 'an', 'organization', 'derive', 'business', 'value', 'from', 'AI', 'and', 'analytics', '?'] 

 UPOS tags are: 
>> [('How', 'ADV'), ('can', 'AUX'), ('an', 'DET'), ('organization', 'NOUN'), ('derive', 'VERB'), ('business', 'NOUN'), ('value', 'NOUN'), ('from', 'ADP'), ('AI', 'NOUN'), ('and', 'CCONJ'), ('analytics', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('How', 'WRB'), ('can', 'MD'), ('an', 'DT'), ('organization', 'NN'), ('derive', 'VB'), ('business', 'NN'), ('value', 'NN'), ('from', 'IN'), ('AI', 'NN'), ('and', 'CC'), ('analytics', 'NNS'), ('?', '.')] 

 Lemmas are: 
>> [('How', 'how'), ('can', 'can'), ('an', 'a'), ('organization', 'organization'), ('derive', 'derive'), ('business', 'business'), ('value', 'value'), ('from', 'from'), ('AI', 'ai'), ('and', 'and'), ('analytics', 'analytic'), ('?', '?')] 

 Dependency tags are: 
>> [(('How', 'derive'), 'advmod'), (('can', 'derive'), 'aux'), (('an', 'organization'), 'det'), (('organization', 'derive'), 'nsubj'), (('derive', 'root'), 'root'), (('business', 'value'), 'compound'), (('value', 'derive'), 'obj'), (('from', 'AI'), 'case'), (('AI', 'derive'), 'obl'), (('and', 'analytics'), 'cc'), (('analytics', 'AI'), 'conj'), (('?', 'derive'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 6 

Tokens are: 
>> ['6'] 

 UPOS tags are: 
>> [('6', 'X')] 

 XPOS tags are: 
>> [('6', 'LS')] 

 Lemmas are: 
>> [('6', '6')] 

 Dependency tags are: 
>> [(('6', 'root'), 'root')]

 Named Entites are: 
>> [('6', 'CARDINAL')]

================================ Paragraph 6 =================================

What are the requirements for adopting AI? 7 


------------------- Sentence 1 -------------------

 What are the requirements for adopting AI? 

Tokens are: 
>> ['What', 'are', 'the', 'requirements', 'for', 'adopting', 'AI', '?'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('are', 'AUX'), ('the', 'DET'), ('requirements', 'NOUN'), ('for', 'SCONJ'), ('adopting', 'VERB'), ('AI', 'PRON'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('are', 'VBP'), ('the', 'DT'), ('requirements', 'NNS'), ('for', 'IN'), ('adopting', 'VBG'), ('AI', 'PRP'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('are', 'be'), ('the', 'the'), ('requirements', 'requirement'), ('for', 'for'), ('adopting', 'adopt'), ('AI', 'ai'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'root'), 'root'), (('are', 'What'), 'cop'), (('the', 'requirements'), 'det'), (('requirements', 'What'), 'nsubj'), (('for', 'adopting'), 'mark'), (('adopting', 'requirements'), 'acl'), (('AI', 'adopting'), 'obj'), (('?', 'What'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 7 

Tokens are: 
>> ['7'] 

 UPOS tags are: 
>> [('7', 'X')] 

 XPOS tags are: 
>> [('7', 'LS')] 

 Lemmas are: 
>> [('7', '7')] 

 Dependency tags are: 
>> [(('7', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 7 =================================

How can data science, artificial intelligence  and analytics transform business processes? 9 


------------------- Sentence 1 -------------------

 How can data science, artificial intelligence  and analytics transform business processes? 

Tokens are: 
>> ['How', 'can', 'data', 'science', ',', 'artificial', 'intelligence', 'and', 'analytics', 'transform', 'business', 'processes', '?'] 

 UPOS tags are: 
>> [('How', 'ADV'), ('can', 'AUX'), ('data', 'NOUN'), ('science', 'NOUN'), (',', 'PUNCT'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('and', 'CCONJ'), ('analytics', 'NOUN'), ('transform', 'VERB'), ('business', 'NOUN'), ('processes', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('How', 'WRB'), ('can', 'MD'), ('data', 'NNS'), ('science', 'NN'), (',', ','), ('artificial', 'JJ'), ('intelligence', 'NN'), ('and', 'CC'), ('analytics', 'NNS'), ('transform', 'VB'), ('business', 'NN'), ('processes', 'NNS'), ('?', '.')] 

 Lemmas are: 
>> [('How', 'how'), ('can', 'can'), ('data', 'datum'), ('science', 'science'), (',', ','), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('and', 'and'), ('analytics', 'analytic'), ('transform', 'transform'), ('business', 'business'), ('processes', 'process'), ('?', '?')] 

 Dependency tags are: 
>> [(('How', 'transform'), 'advmod'), (('can', 'transform'), 'aux'), (('data', 'science'), 'compound'), (('science', 'transform'), 'nsubj'), ((',', 'intelligence'), 'punct'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'science'), 'conj'), (('and', 'analytics'), 'cc'), (('analytics', 'science'), 'conj'), (('transform', 'root'), 'root'), (('business', 'processes'), 'compound'), (('processes', 'transform'), 'obj'), (('?', 'transform'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 9 

Tokens are: 
>> ['9'] 

 UPOS tags are: 
>> [('9', 'X')] 

 XPOS tags are: 
>> [('9', 'LS')] 

 Lemmas are: 
>> [('9', '9')] 

 Dependency tags are: 
>> [(('9', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 8 =================================

Common techniques and methodologies 10 


------------------- Sentence 1 -------------------

 Common techniques and methodologies 10 

Tokens are: 
>> ['Common', 'techniques', 'and', 'methodologies', '10'] 

 UPOS tags are: 
>> [('Common', 'ADJ'), ('techniques', 'NOUN'), ('and', 'CCONJ'), ('methodologies', 'NOUN'), ('10', 'NUM')] 

 XPOS tags are: 
>> [('Common', 'JJ'), ('techniques', 'NNS'), ('and', 'CC'), ('methodologies', 'NNS'), ('10', 'CD')] 

 Lemmas are: 
>> [('Common', 'common'), ('techniques', 'technique'), ('and', 'and'), ('methodologies', 'methodology'), ('10', '10')] 

 Dependency tags are: 
>> [(('Common', 'techniques'), 'amod'), (('techniques', 'root'), 'root'), (('and', 'methodologies'), 'cc'), (('methodologies', 'techniques'), 'conj'), (('10', 'techniques'), 'dep')]

 Named Entites are: 
>> [('10', 'CARDINAL')]

================================ Paragraph 9 =================================

Machine learning 10 


------------------- Sentence 1 -------------------

 Machine learning 10 

Tokens are: 
>> ['Machine', 'learning', '10'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('learning', 'NOUN'), ('10', 'NUM')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('learning', 'NN'), ('10', 'CD')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('learning', 'learning'), ('10', '10')] 

 Dependency tags are: 
>> [(('Machine', 'learning'), 'compound'), (('learning', 'root'), 'root'), (('10', 'learning'), 'dep')]

 Named Entites are: 
>> [('10', 'CARDINAL')]

================================ Paragraph 10 =================================

Supervised learning 11 


------------------- Sentence 1 -------------------

 Supervised learning 11 

Tokens are: 
>> ['Supervised', 'learning', '11'] 

 UPOS tags are: 
>> [('Supervised', 'VERB'), ('learning', 'NOUN'), ('11', 'NUM')] 

 XPOS tags are: 
>> [('Supervised', 'VBN'), ('learning', 'NN'), ('11', 'CD')] 

 Lemmas are: 
>> [('Supervised', 'supervise'), ('learning', 'learning'), ('11', '11')] 

 Dependency tags are: 
>> [(('Supervised', '11'), 'amod'), (('learning', '11'), 'compound'), (('11', 'root'), 'root')]

 Named Entites are: 
>> [('11', 'CARDINAL')]

================================ Paragraph 11 =================================

Unsupervised learning 12 


------------------- Sentence 1 -------------------

 Unsupervised learning 12 

Tokens are: 
>> ['Unsupervised', 'learning', '12'] 

 UPOS tags are: 
>> [('Unsupervised', 'VERB'), ('learning', 'NOUN'), ('12', 'NUM')] 

 XPOS tags are: 
>> [('Unsupervised', 'VBN'), ('learning', 'NN'), ('12', 'CD')] 

 Lemmas are: 
>> [('Unsupervised', 'unsupervise'), ('learning', 'learning'), ('12', '12')] 

 Dependency tags are: 
>> [(('Unsupervised', 'learning'), 'amod'), (('learning', '12'), 'compound'), (('12', 'root'), 'root')]

 Named Entites are: 
>> [('12', 'CARDINAL')]

================================ Paragraph 12 =================================

Natural language processing 13 


------------------- Sentence 1 -------------------

 Natural language processing 13 

Tokens are: 
>> ['Natural', 'language', 'processing', '13'] 

 UPOS tags are: 
>> [('Natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), ('13', 'NUM')] 

 XPOS tags are: 
>> [('Natural', 'JJ'), ('language', 'NN'), ('processing', 'NN'), ('13', 'CD')] 

 Lemmas are: 
>> [('Natural', 'Natural'), ('language', 'language'), ('processing', 'processing'), ('13', '13')] 

 Dependency tags are: 
>> [(('Natural', 'language'), 'amod'), (('language', 'processing'), 'compound'), (('processing', 'root'), 'root'), (('13', 'processing'), 'dep')]

 Named Entites are: 
>> [('13', 'CARDINAL')]

================================ Paragraph 13 =================================

Key questions to ask and how to define high value use-cases 13 


------------------- Sentence 1 -------------------

 Key questions to ask and how to define high value use-cases 13 

Tokens are: 
>> ['Key', 'questions', 'to', 'ask', 'and', 'how', 'to', 'define', 'high', 'value', 'use-cases', '13'] 

 UPOS tags are: 
>> [('Key', 'ADJ'), ('questions', 'NOUN'), ('to', 'PART'), ('ask', 'VERB'), ('and', 'CCONJ'), ('how', 'SCONJ'), ('to', 'PART'), ('define', 'VERB'), ('high', 'ADJ'), ('value', 'NOUN'), ('use-cases', 'NOUN'), ('13', 'NUM')] 

 XPOS tags are: 
>> [('Key', 'JJ'), ('questions', 'NNS'), ('to', 'TO'), ('ask', 'VB'), ('and', 'CC'), ('how', 'WRB'), ('to', 'TO'), ('define', 'VB'), ('high', 'JJ'), ('value', 'NN'), ('use-cases', 'NNS'), ('13', 'CD')] 

 Lemmas are: 
>> [('Key', 'key'), ('questions', 'question'), ('to', 'to'), ('ask', 'ask'), ('and', 'and'), ('how', 'how'), ('to', 'to'), ('define', 'define'), ('high', 'high'), ('value', 'value'), ('use-cases', 'use-case'), ('13', '13')] 

 Dependency tags are: 
>> [(('Key', 'questions'), 'amod'), (('questions', 'root'), 'root'), (('to', 'ask'), 'mark'), (('ask', 'questions'), 'acl'), (('and', 'define'), 'cc'), (('how', 'define'), 'mark'), (('to', 'define'), 'mark'), (('define', 'ask'), 'conj'), (('high', 'value'), 'amod'), (('value', 'use-cases'), 'compound'), (('use-cases', 'define'), 'obj'), (('13', 'use-cases'), 'nummod')]

 Named Entites are: 
>> [('13', 'CARDINAL')]

================================ Paragraph 14 =================================

Resources 14


------------------- Sentence 1 -------------------

 Resources 14 

Tokens are: 
>> ['Resources', '14'] 

 UPOS tags are: 
>> [('Resources', 'NOUN'), ('14', 'NUM')] 

 XPOS tags are: 
>> [('Resources', 'NNS'), ('14', 'CD')] 

 Lemmas are: 
>> [('Resources', 'resource'), ('14', '14')] 

 Dependency tags are: 
>> [(('Resources', 'root'), 'root'), (('14', 'Resources'), 'dep')]

 Named Entites are: 
>> [('14', 'CARDINAL')]

================================ Paragraph 15 =================================

3/14Demystifying data science  


------------------- Sentence 1 -------------------

 3/14 

Tokens are: 
>> ['3/14'] 

 UPOS tags are: 
>> [('3/14', 'NUM')] 

 XPOS tags are: 
>> [('3/14', 'CD')] 

 Lemmas are: 
>> [('3/14', '3/14')] 

 Dependency tags are: 
>> [(('3/14', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Demystifying data science 

Tokens are: 
>> ['Demystifying', 'data', 'science'] 

 UPOS tags are: 
>> [('Demystifying', 'VERB'), ('data', 'NOUN'), ('science', 'NOUN')] 

 XPOS tags are: 
>> [('Demystifying', 'VBG'), ('data', 'NN'), ('science', 'NN')] 

 Lemmas are: 
>> [('Demystifying', 'demystify'), ('data', 'datum'), ('science', 'science')] 

 Dependency tags are: 
>> [(('Demystifying', 'root'), 'root'), (('data', 'science'), 'compound'), (('science', 'Demystifying'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 16 =================================

Summary By 2020, Forbes estimates that 85 percent of customer interactions will be  managed without a human.1 While many of us use AI technology, such as Alexa and  Siri, as part of our daily lives, we may not be aware of its greater uses. In fact, with  machine learning applied, AI can help teach computers, target ads and personalize  content for consumers to ensure better and more informed business decisions. 


------------------- Sentence 1 -------------------

 Summary 

Tokens are: 
>> ['Summary'] 

 UPOS tags are: 
>> [('Summary', 'NOUN')] 

 XPOS tags are: 
>> [('Summary', 'NN')] 

 Lemmas are: 
>> [('Summary', 'summary')] 

 Dependency tags are: 
>> [(('Summary', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 By 2020, Forbes estimates that 85 percent of customer interactions will be  managed without a human. 

Tokens are: 
>> ['By', '2020', ',', 'Forbes', 'estimates', 'that', '85', 'percent', 'of', 'customer', 'interactions', 'will', 'be', 'managed', 'without', 'a', 'human', '.'] 

 UPOS tags are: 
>> [('By', 'ADP'), ('2020', 'NUM'), (',', 'PUNCT'), ('Forbes', 'PROPN'), ('estimates', 'VERB'), ('that', 'SCONJ'), ('85', 'NUM'), ('percent', 'NOUN'), ('of', 'ADP'), ('customer', 'NOUN'), ('interactions', 'NOUN'), ('will', 'AUX'), ('be', 'AUX'), ('managed', 'VERB'), ('without', 'ADP'), ('a', 'DET'), ('human', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('By', 'IN'), ('2020', 'CD'), (',', ','), ('Forbes', 'NNP'), ('estimates', 'VBZ'), ('that', 'IN'), ('85', 'CD'), ('percent', 'NN'), ('of', 'IN'), ('customer', 'NN'), ('interactions', 'NNS'), ('will', 'MD'), ('be', 'VB'), ('managed', 'VBN'), ('without', 'IN'), ('a', 'DT'), ('human', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('By', 'by'), ('2020', '2020'), (',', ','), ('Forbes', 'Forbes'), ('estimates', 'estimate'), ('that', 'that'), ('85', '85'), ('percent', 'percent'), ('of', 'of'), ('customer', 'customer'), ('interactions', 'interaction'), ('will', 'will'), ('be', 'be'), ('managed', 'manage'), ('without', 'without'), ('a', 'a'), ('human', 'human'), ('.', '.')] 

 Dependency tags are: 
>> [(('By', '2020'), 'case'), (('2020', 'estimates'), 'obl'), ((',', 'estimates'), 'punct'), (('Forbes', 'estimates'), 'nsubj'), (('estimates', 'root'), 'root'), (('that', 'managed'), 'mark'), (('85', 'percent'), 'nummod'), (('percent', 'managed'), 'nsubj:pass'), (('of', 'interactions'), 'case'), (('customer', 'interactions'), 'compound'), (('interactions', 'percent'), 'nmod'), (('will', 'managed'), 'aux'), (('be', 'managed'), 'aux:pass'), (('managed', 'estimates'), 'ccomp'), (('without', 'human'), 'case'), (('a', 'human'), 'det'), (('human', 'managed'), 'obl'), (('.', 'estimates'), 'punct')]

 Named Entites are: 
>> [('2020', 'DATE'), ('Forbes', 'ORG'), ('85 percent', 'PERCENT')]

------------------- Sentence 3 -------------------

 1 

Tokens are: 
>> ['1'] 

 UPOS tags are: 
>> [('1', 'X')] 

 XPOS tags are: 
>> [('1', 'LS')] 

 Lemmas are: 
>> [('1', '1')] 

 Dependency tags are: 
>> [(('1', 'root'), 'root')]

 Named Entites are: 
>> [('1', 'CARDINAL')]

------------------- Sentence 4 -------------------

 While many of us use AI technology, such as Alexa and  Siri, as part of our daily lives, we may not be aware of its greater uses. 

Tokens are: 
>> ['While', 'many', 'of', 'us', 'use', 'AI', 'technology', ',', 'such', 'as', 'Alexa', 'and', 'Siri', ',', 'as', 'part', 'of', 'our', 'daily', 'lives', ',', 'we', 'may', 'not', 'be', 'aware', 'of', 'its', 'greater', 'uses', '.'] 

 UPOS tags are: 
>> [('While', 'SCONJ'), ('many', 'ADJ'), ('of', 'ADP'), ('us', 'PRON'), ('use', 'VERB'), ('AI', 'VERB'), ('technology', 'NOUN'), (',', 'PUNCT'), ('such', 'ADJ'), ('as', 'ADP'), ('Alexa', 'PROPN'), ('and', 'CCONJ'), ('Siri', 'PROPN'), (',', 'PUNCT'), ('as', 'ADP'), ('part', 'NOUN'), ('of', 'ADP'), ('our', 'PRON'), ('daily', 'ADJ'), ('lives', 'NOUN'), (',', 'PUNCT'), ('we', 'PRON'), ('may', 'AUX'), ('not', 'PART'), ('be', 'AUX'), ('aware', 'ADJ'), ('of', 'ADP'), ('its', 'PRON'), ('greater', 'ADJ'), ('uses', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('While', 'IN'), ('many', 'JJ'), ('of', 'IN'), ('us', 'PRP'), ('use', 'VBP'), ('AI', 'VBZ'), ('technology', 'NN'), (',', ','), ('such', 'JJ'), ('as', 'IN'), ('Alexa', 'NNP'), ('and', 'CC'), ('Siri', 'NNP'), (',', ','), ('as', 'IN'), ('part', 'NN'), ('of', 'IN'), ('our', 'PRP$'), ('daily', 'JJ'), ('lives', 'NNS'), (',', ','), ('we', 'PRP'), ('may', 'MD'), ('not', 'RB'), ('be', 'VB'), ('aware', 'JJ'), ('of', 'IN'), ('its', 'PRP$'), ('greater', 'JJR'), ('uses', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('While', 'while'), ('many', 'many'), ('of', 'of'), ('us', 'we'), ('use', 'use'), ('AI', 'be'), ('technology', 'technology'), (',', ','), ('such', 'such'), ('as', 'as'), ('Alexa', 'Alexa'), ('and', 'and'), ('Siri', 'Siri'), (',', ','), ('as', 'as'), ('part', 'part'), ('of', 'of'), ('our', 'we'), ('daily', 'daily'), ('lives', 'life'), (',', ','), ('we', 'we'), ('may', 'may'), ('not', 'not'), ('be', 'be'), ('aware', 'aware'), ('of', 'of'), ('its', 'its'), ('greater', 'great'), ('uses', 'use'), ('.', '.')] 

 Dependency tags are: 
>> [(('While', 'AI'), 'mark'), (('many', 'AI'), 'nsubj'), (('of', 'us'), 'case'), (('us', 'many'), 'nmod'), (('use', 'many'), 'advcl'), (('AI', 'aware'), 'advcl'), (('technology', 'AI'), 'nsubj'), ((',', 'Alexa'), 'punct'), (('such', 'Alexa'), 'case'), (('as', 'such'), 'fixed'), (('Alexa', 'technology'), 'nmod'), (('and', 'Siri'), 'cc'), (('Siri', 'Alexa'), 'conj'), ((',', 'part'), 'punct'), (('as', 'part'), 'case'), (('part', 'AI'), 'obl'), (('of', 'lives'), 'case'), (('our', 'lives'), 'nmod:poss'), (('daily', 'lives'), 'amod'), (('lives', 'part'), 'nmod'), ((',', 'aware'), 'punct'), (('we', 'aware'), 'nsubj'), (('may', 'aware'), 'aux'), (('not', 'aware'), 'advmod'), (('be', 'aware'), 'cop'), (('aware', 'root'), 'root'), (('of', 'uses'), 'case'), (('its', 'uses'), 'nmod:poss'), (('greater', 'uses'), 'amod'), (('uses', 'aware'), 'obl'), (('.', 'aware'), 'punct')]

 Named Entites are: 
>> [('Alexa', 'PERSON'), ('Siri', 'PERSON')]

------------------- Sentence 5 -------------------

 In fact, with  machine learning applied, AI can help teach computers, target ads and personalize  content for consumers to ensure better and more informed business decisions. 

Tokens are: 
>> ['In', 'fact', ',', 'with', 'machine', 'learning', 'applied', ',', 'AI', 'can', 'help', 'teach', 'computers', ',', 'target', 'ads', 'and', 'personalize', 'content', 'for', 'consumers', 'to', 'ensure', 'better', 'and', 'more', 'informed', 'business', 'decisions', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('fact', 'NOUN'), (',', 'PUNCT'), ('with', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('applied', 'VERB'), (',', 'PUNCT'), ('AI', 'NOUN'), ('can', 'AUX'), ('help', 'VERB'), ('teach', 'VERB'), ('computers', 'NOUN'), (',', 'PUNCT'), ('target', 'VERB'), ('ads', 'NOUN'), ('and', 'CCONJ'), ('personalize', 'VERB'), ('content', 'NOUN'), ('for', 'ADP'), ('consumers', 'NOUN'), ('to', 'PART'), ('ensure', 'VERB'), ('better', 'ADJ'), ('and', 'CCONJ'), ('more', 'ADV'), ('informed', 'VERB'), ('business', 'NOUN'), ('decisions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('fact', 'NN'), (',', ','), ('with', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('applied', 'VBN'), (',', ','), ('AI', 'NNS'), ('can', 'MD'), ('help', 'VB'), ('teach', 'VB'), ('computers', 'NNS'), (',', ','), ('target', 'VB'), ('ads', 'NNS'), ('and', 'CC'), ('personalize', 'VB'), ('content', 'NN'), ('for', 'IN'), ('consumers', 'NNS'), ('to', 'TO'), ('ensure', 'VB'), ('better', 'JJR'), ('and', 'CC'), ('more', 'RBR'), ('informed', 'VBN'), ('business', 'NN'), ('decisions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('fact', 'fact'), (',', ','), ('with', 'with'), ('machine', 'machine'), ('learning', 'learning'), ('applied', 'apply'), (',', ','), ('AI', 'ai'), ('can', 'can'), ('help', 'help'), ('teach', 'teach'), ('computers', 'computer'), (',', ','), ('target', 'target'), ('ads', 'ad'), ('and', 'and'), ('personalize', 'personalize'), ('content', 'content'), ('for', 'for'), ('consumers', 'consumer'), ('to', 'to'), ('ensure', 'ensure'), ('better', 'good'), ('and', 'and'), ('more', 'more'), ('informed', 'inform'), ('business', 'business'), ('decisions', 'decision'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'fact'), 'case'), (('fact', 'help'), 'obl'), ((',', 'help'), 'punct'), (('with', 'applied'), 'mark'), (('machine', 'learning'), 'compound'), (('learning', 'applied'), 'nsubj'), (('applied', 'help'), 'advcl'), ((',', 'help'), 'punct'), (('AI', 'help'), 'nsubj'), (('can', 'help'), 'aux'), (('help', 'root'), 'root'), (('teach', 'help'), 'xcomp'), (('computers', 'teach'), 'obj'), ((',', 'target'), 'punct'), (('target', 'teach'), 'conj'), (('ads', 'target'), 'obj'), (('and', 'personalize'), 'cc'), (('personalize', 'teach'), 'conj'), (('content', 'personalize'), 'obj'), (('for', 'ensure'), 'mark'), (('consumers', 'personalize'), 'obl'), (('to', 'ensure'), 'mark'), (('ensure', 'personalize'), 'advcl'), (('better', 'decisions'), 'amod'), (('and', 'informed'), 'cc'), (('more', 'informed'), 'advmod'), (('informed', 'better'), 'conj'), (('business', 'decisions'), 'compound'), (('decisions', 'ensure'), 'obj'), (('.', 'help'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 17 =================================

This paper will clarify some key definitions around artificial intelligence and  machine learning. It will also simplify some common techniques in machine learning,  such as supervised learning, natural language processing and classification, and  identify the types of business questions these techniques can answer. 


------------------- Sentence 1 -------------------

 This paper will clarify some key definitions around artificial intelligence and  machine learning. 

Tokens are: 
>> ['This', 'paper', 'will', 'clarify', 'some', 'key', 'definitions', 'around', 'artificial', 'intelligence', 'and', 'machine', 'learning', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('paper', 'NOUN'), ('will', 'AUX'), ('clarify', 'VERB'), ('some', 'DET'), ('key', 'ADJ'), ('definitions', 'NOUN'), ('around', 'ADP'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('and', 'CCONJ'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('paper', 'NN'), ('will', 'MD'), ('clarify', 'VB'), ('some', 'DT'), ('key', 'JJ'), ('definitions', 'NNS'), ('around', 'IN'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('and', 'CC'), ('machine', 'NN'), ('learning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('paper', 'paper'), ('will', 'will'), ('clarify', 'clarify'), ('some', 'some'), ('key', 'key'), ('definitions', 'definition'), ('around', 'around'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('and', 'and'), ('machine', 'machine'), ('learning', 'learning'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'paper'), 'det'), (('paper', 'clarify'), 'nsubj'), (('will', 'clarify'), 'aux'), (('clarify', 'root'), 'root'), (('some', 'definitions'), 'det'), (('key', 'definitions'), 'amod'), (('definitions', 'clarify'), 'obj'), (('around', 'intelligence'), 'case'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'definitions'), 'nmod'), (('and', 'learning'), 'cc'), (('machine', 'learning'), 'compound'), (('learning', 'intelligence'), 'conj'), (('.', 'clarify'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 It will also simplify some common techniques in machine learning,  such as supervised learning, natural language processing and classification, and  identify the types of business questions these techniques can answer. 

Tokens are: 
>> ['It', 'will', 'also', 'simplify', 'some', 'common', 'techniques', 'in', 'machine', 'learning', ',', 'such', 'as', 'supervised', 'learning', ',', 'natural', 'language', 'processing', 'and', 'classification', ',', 'and', 'identify', 'the', 'types', 'of', 'business', 'questions', 'these', 'techniques', 'can', 'answer', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('will', 'AUX'), ('also', 'ADV'), ('simplify', 'VERB'), ('some', 'DET'), ('common', 'ADJ'), ('techniques', 'NOUN'), ('in', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), (',', 'PUNCT'), ('such', 'ADJ'), ('as', 'ADP'), ('supervised', 'VERB'), ('learning', 'NOUN'), (',', 'PUNCT'), ('natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), ('and', 'CCONJ'), ('classification', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('identify', 'VERB'), ('the', 'DET'), ('types', 'NOUN'), ('of', 'ADP'), ('business', 'NOUN'), ('questions', 'NOUN'), ('these', 'DET'), ('techniques', 'NOUN'), ('can', 'AUX'), ('answer', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('will', 'MD'), ('also', 'RB'), ('simplify', 'VB'), ('some', 'DT'), ('common', 'JJ'), ('techniques', 'NNS'), ('in', 'IN'), ('machine', 'NN'), ('learning', 'NN'), (',', ','), ('such', 'JJ'), ('as', 'IN'), ('supervised', 'VBN'), ('learning', 'NN'), (',', ','), ('natural', 'JJ'), ('language', 'NN'), ('processing', 'NN'), ('and', 'CC'), ('classification', 'NN'), (',', ','), ('and', 'CC'), ('identify', 'VB'), ('the', 'DT'), ('types', 'NNS'), ('of', 'IN'), ('business', 'NN'), ('questions', 'NNS'), ('these', 'DT'), ('techniques', 'NNS'), ('can', 'MD'), ('answer', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('will', 'will'), ('also', 'also'), ('simplify', 'simplify'), ('some', 'some'), ('common', 'common'), ('techniques', 'technique'), ('in', 'in'), ('machine', 'machine'), ('learning', 'learning'), (',', ','), ('such', 'such'), ('as', 'as'), ('supervised', 'supervise'), ('learning', 'learning'), (',', ','), ('natural', 'natural'), ('language', 'language'), ('processing', 'processing'), ('and', 'and'), ('classification', 'classification'), (',', ','), ('and', 'and'), ('identify', 'identify'), ('the', 'the'), ('types', 'type'), ('of', 'of'), ('business', 'business'), ('questions', 'question'), ('these', 'this'), ('techniques', 'technique'), ('can', 'can'), ('answer', 'answer'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'simplify'), 'nsubj'), (('will', 'simplify'), 'aux'), (('also', 'simplify'), 'advmod'), (('simplify', 'root'), 'root'), (('some', 'techniques'), 'det'), (('common', 'techniques'), 'amod'), (('techniques', 'simplify'), 'obj'), (('in', 'learning'), 'case'), (('machine', 'learning'), 'compound'), (('learning', 'techniques'), 'nmod'), ((',', 'learning'), 'punct'), (('such', 'learning'), 'case'), (('as', 'such'), 'fixed'), (('supervised', 'learning'), 'amod'), (('learning', 'learning'), 'nmod'), ((',', 'processing'), 'punct'), (('natural', 'language'), 'amod'), (('language', 'processing'), 'compound'), (('processing', 'learning'), 'conj'), (('and', 'classification'), 'cc'), (('classification', 'learning'), 'conj'), ((',', 'identify'), 'punct'), (('and', 'identify'), 'cc'), (('identify', 'simplify'), 'conj'), (('the', 'types'), 'det'), (('types', 'identify'), 'obj'), (('of', 'questions'), 'case'), (('business', 'questions'), 'compound'), (('questions', 'types'), 'nmod'), (('these', 'techniques'), 'det'), (('techniques', 'answer'), 'nsubj'), (('can', 'answer'), 'aux'), (('answer', 'questions'), 'acl:relcl'), (('.', 'simplify'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 18 =================================

While understanding a small number of customers may not pose a challenge,  keeping pace as organizations grow and expand their customer base can be  difficult. Data analytics can help reveal trends and metrics that would otherwise  be lost among the masses of information. Organizations are now starting to  leverage descriptive, diagnostic, predictive and prescriptive analytics to address  the growing needs and demands of their customer base. 


------------------- Sentence 1 -------------------

 While understanding a small number of customers may not pose a challenge,  keeping pace as organizations grow and expand their customer base can be  difficult. 

Tokens are: 
>> ['While', 'understanding', 'a', 'small', 'number', 'of', 'customers', 'may', 'not', 'pose', 'a', 'challenge', ',', 'keeping', 'pace', 'as', 'organizations', 'grow', 'and', 'expand', 'their', 'customer', 'base', 'can', 'be', 'difficult', '.'] 

 UPOS tags are: 
>> [('While', 'SCONJ'), ('understanding', 'VERB'), ('a', 'DET'), ('small', 'ADJ'), ('number', 'NOUN'), ('of', 'ADP'), ('customers', 'NOUN'), ('may', 'AUX'), ('not', 'PART'), ('pose', 'VERB'), ('a', 'DET'), ('challenge', 'NOUN'), (',', 'PUNCT'), ('keeping', 'VERB'), ('pace', 'NOUN'), ('as', 'SCONJ'), ('organizations', 'NOUN'), ('grow', 'VERB'), ('and', 'CCONJ'), ('expand', 'VERB'), ('their', 'PRON'), ('customer', 'NOUN'), ('base', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('difficult', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('While', 'IN'), ('understanding', 'VBG'), ('a', 'DT'), ('small', 'JJ'), ('number', 'NN'), ('of', 'IN'), ('customers', 'NNS'), ('may', 'MD'), ('not', 'RB'), ('pose', 'VB'), ('a', 'DT'), ('challenge', 'NN'), (',', ','), ('keeping', 'VBG'), ('pace', 'NN'), ('as', 'IN'), ('organizations', 'NNS'), ('grow', 'VBP'), ('and', 'CC'), ('expand', 'VB'), ('their', 'PRP$'), ('customer', 'NN'), ('base', 'NN'), ('can', 'MD'), ('be', 'VB'), ('difficult', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('While', 'while'), ('understanding', 'understand'), ('a', 'a'), ('small', 'small'), ('number', 'number'), ('of', 'of'), ('customers', 'customer'), ('may', 'may'), ('not', 'not'), ('pose', 'pose'), ('a', 'a'), ('challenge', 'challenge'), (',', ','), ('keeping', 'keep'), ('pace', 'pace'), ('as', 'as'), ('organizations', 'organization'), ('grow', 'grow'), ('and', 'and'), ('expand', 'expand'), ('their', 'they'), ('customer', 'customer'), ('base', 'base'), ('can', 'can'), ('be', 'be'), ('difficult', 'difficult'), ('.', '.')] 

 Dependency tags are: 
>> [(('While', 'understanding'), 'mark'), (('understanding', 'pose'), 'csubj'), (('a', 'number'), 'det'), (('small', 'number'), 'amod'), (('number', 'understanding'), 'obj'), (('of', 'customers'), 'case'), (('customers', 'number'), 'nmod'), (('may', 'pose'), 'aux'), (('not', 'pose'), 'advmod'), (('pose', 'difficult'), 'advcl'), (('a', 'challenge'), 'det'), (('challenge', 'pose'), 'obj'), ((',', 'pose'), 'punct'), (('keeping', 'pose'), 'advcl'), (('pace', 'keeping'), 'obj'), (('as', 'grow'), 'mark'), (('organizations', 'grow'), 'nsubj'), (('grow', 'keeping'), 'advcl'), (('and', 'expand'), 'cc'), (('expand', 'grow'), 'conj'), (('their', 'base'), 'nmod:poss'), (('customer', 'base'), 'compound'), (('base', 'expand'), 'obj'), (('can', 'difficult'), 'aux'), (('be', 'difficult'), 'cop'), (('difficult', 'root'), 'root'), (('.', 'difficult'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Data analytics can help reveal trends and metrics that would otherwise  be lost among the masses of information. 

Tokens are: 
>> ['Data', 'analytics', 'can', 'help', 'reveal', 'trends', 'and', 'metrics', 'that', 'would', 'otherwise', 'be', 'lost', 'among', 'the', 'masses', 'of', 'information', '.'] 

 UPOS tags are: 
>> [('Data', 'NOUN'), ('analytics', 'NOUN'), ('can', 'AUX'), ('help', 'VERB'), ('reveal', 'VERB'), ('trends', 'NOUN'), ('and', 'CCONJ'), ('metrics', 'NOUN'), ('that', 'PRON'), ('would', 'AUX'), ('otherwise', 'ADV'), ('be', 'AUX'), ('lost', 'VERB'), ('among', 'ADP'), ('the', 'DET'), ('masses', 'NOUN'), ('of', 'ADP'), ('information', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Data', 'NN'), ('analytics', 'NNS'), ('can', 'MD'), ('help', 'VB'), ('reveal', 'VB'), ('trends', 'NNS'), ('and', 'CC'), ('metrics', 'NNS'), ('that', 'WDT'), ('would', 'MD'), ('otherwise', 'RB'), ('be', 'VB'), ('lost', 'VBN'), ('among', 'IN'), ('the', 'DT'), ('masses', 'NNS'), ('of', 'IN'), ('information', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Data', 'data'), ('analytics', 'analytic'), ('can', 'can'), ('help', 'help'), ('reveal', 'reveal'), ('trends', 'trend'), ('and', 'and'), ('metrics', 'metric'), ('that', 'that'), ('would', 'would'), ('otherwise', 'otherwise'), ('be', 'be'), ('lost', 'lose'), ('among', 'among'), ('the', 'the'), ('masses', 'mass'), ('of', 'of'), ('information', 'information'), ('.', '.')] 

 Dependency tags are: 
>> [(('Data', 'analytics'), 'compound'), (('analytics', 'help'), 'nsubj'), (('can', 'help'), 'aux'), (('help', 'root'), 'root'), (('reveal', 'help'), 'xcomp'), (('trends', 'reveal'), 'obj'), (('and', 'metrics'), 'cc'), (('metrics', 'trends'), 'conj'), (('that', 'lost'), 'nsubj:pass'), (('would', 'lost'), 'aux'), (('otherwise', 'lost'), 'advmod'), (('be', 'lost'), 'aux:pass'), (('lost', 'trends'), 'acl:relcl'), (('among', 'masses'), 'case'), (('the', 'masses'), 'det'), (('masses', 'lost'), 'obl'), (('of', 'information'), 'case'), (('information', 'masses'), 'nmod'), (('.', 'help'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Organizations are now starting to  leverage descriptive, diagnostic, predictive and prescriptive analytics to address  the growing needs and demands of their customer base. 

Tokens are: 
>> ['Organizations', 'are', 'now', 'starting', 'to', 'leverage', 'descriptive', ',', 'diagnostic', ',', 'predictive', 'and', 'prescriptive', 'analytics', 'to', 'address', 'the', 'growing', 'needs', 'and', 'demands', 'of', 'their', 'customer', 'base', '.'] 

 UPOS tags are: 
>> [('Organizations', 'NOUN'), ('are', 'AUX'), ('now', 'ADV'), ('starting', 'VERB'), ('to', 'PART'), ('leverage', 'VERB'), ('descriptive', 'ADJ'), (',', 'PUNCT'), ('diagnostic', 'ADJ'), (',', 'PUNCT'), ('predictive', 'ADJ'), ('and', 'CCONJ'), ('prescriptive', 'ADJ'), ('analytics', 'NOUN'), ('to', 'PART'), ('address', 'VERB'), ('the', 'DET'), ('growing', 'VERB'), ('needs', 'NOUN'), ('and', 'CCONJ'), ('demands', 'NOUN'), ('of', 'ADP'), ('their', 'PRON'), ('customer', 'NOUN'), ('base', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Organizations', 'NNS'), ('are', 'VBP'), ('now', 'RB'), ('starting', 'VBG'), ('to', 'TO'), ('leverage', 'VB'), ('descriptive', 'JJ'), (',', ','), ('diagnostic', 'JJ'), (',', ','), ('predictive', 'JJ'), ('and', 'CC'), ('prescriptive', 'JJ'), ('analytics', 'NNS'), ('to', 'TO'), ('address', 'VB'), ('the', 'DT'), ('growing', 'VBG'), ('needs', 'NNS'), ('and', 'CC'), ('demands', 'NNS'), ('of', 'IN'), ('their', 'PRP$'), ('customer', 'NN'), ('base', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Organizations', 'organization'), ('are', 'be'), ('now', 'now'), ('starting', 'start'), ('to', 'to'), ('leverage', 'leverage'), ('descriptive', 'descriptive'), (',', ','), ('diagnostic', 'diagnostic'), (',', ','), ('predictive', 'predictive'), ('and', 'and'), ('prescriptive', 'prescriptive'), ('analytics', 'analytic'), ('to', 'to'), ('address', 'address'), ('the', 'the'), ('growing', 'grow'), ('needs', 'need'), ('and', 'and'), ('demands', 'demand'), ('of', 'of'), ('their', 'they'), ('customer', 'customer'), ('base', 'base'), ('.', '.')] 

 Dependency tags are: 
>> [(('Organizations', 'starting'), 'nsubj'), (('are', 'starting'), 'aux'), (('now', 'starting'), 'advmod'), (('starting', 'root'), 'root'), (('to', 'leverage'), 'mark'), (('leverage', 'starting'), 'xcomp'), (('descriptive', 'analytics'), 'amod'), ((',', 'diagnostic'), 'punct'), (('diagnostic', 'descriptive'), 'conj'), ((',', 'predictive'), 'punct'), (('predictive', 'descriptive'), 'conj'), (('and', 'prescriptive'), 'cc'), (('prescriptive', 'descriptive'), 'conj'), (('analytics', 'leverage'), 'obj'), (('to', 'address'), 'mark'), (('address', 'leverage'), 'advcl'), (('the', 'needs'), 'det'), (('growing', 'needs'), 'amod'), (('needs', 'address'), 'obj'), (('and', 'demands'), 'cc'), (('demands', 'needs'), 'conj'), (('of', 'base'), 'case'), (('their', 'base'), 'nmod:poss'), (('customer', 'base'), 'compound'), (('base', 'demands'), 'nmod'), (('.', 'starting'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 19 =================================

The promise of artificial intelligence is exciting but before jumping in organizations  need the right data literacy, infrastructure and expertise. This paper will also cover  key competencies organizations need to get started with AI and how to progress  from data collection, exploration and analytics to artificial intelligence. 


------------------- Sentence 1 -------------------

 The promise of artificial intelligence is exciting but before jumping in organizations  need the right data literacy, infrastructure and expertise. 

Tokens are: 
>> ['The', 'promise', 'of', 'artificial', 'intelligence', 'is', 'exciting', 'but', 'before', 'jumping', 'in', 'organizations', 'need', 'the', 'right', 'data', 'literacy', ',', 'infrastructure', 'and', 'expertise', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('promise', 'NOUN'), ('of', 'ADP'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('is', 'AUX'), ('exciting', 'ADJ'), ('but', 'CCONJ'), ('before', 'SCONJ'), ('jumping', 'VERB'), ('in', 'ADP'), ('organizations', 'NOUN'), ('need', 'VERB'), ('the', 'DET'), ('right', 'ADJ'), ('data', 'NOUN'), ('literacy', 'NOUN'), (',', 'PUNCT'), ('infrastructure', 'NOUN'), ('and', 'CCONJ'), ('expertise', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('promise', 'NN'), ('of', 'IN'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('is', 'VBZ'), ('exciting', 'JJ'), ('but', 'CC'), ('before', 'IN'), ('jumping', 'VBG'), ('in', 'IN'), ('organizations', 'NNS'), ('need', 'VBP'), ('the', 'DT'), ('right', 'JJ'), ('data', 'NN'), ('literacy', 'NN'), (',', ','), ('infrastructure', 'NN'), ('and', 'CC'), ('expertise', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('promise', 'promise'), ('of', 'of'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('is', 'be'), ('exciting', 'exciting'), ('but', 'but'), ('before', 'before'), ('jumping', 'jump'), ('in', 'in'), ('organizations', 'organization'), ('need', 'need'), ('the', 'the'), ('right', 'right'), ('data', 'datum'), ('literacy', 'literacy'), (',', ','), ('infrastructure', 'infrastructure'), ('and', 'and'), ('expertise', 'expertise'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'promise'), 'det'), (('promise', 'exciting'), 'nsubj'), (('of', 'intelligence'), 'case'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'promise'), 'nmod'), (('is', 'exciting'), 'cop'), (('exciting', 'root'), 'root'), (('but', 'need'), 'cc'), (('before', 'jumping'), 'mark'), (('jumping', 'need'), 'csubj'), (('in', 'organizations'), 'case'), (('organizations', 'jumping'), 'obl'), (('need', 'exciting'), 'conj'), (('the', 'literacy'), 'det'), (('right', 'literacy'), 'amod'), (('data', 'literacy'), 'compound'), (('literacy', 'need'), 'obj'), ((',', 'infrastructure'), 'punct'), (('infrastructure', 'literacy'), 'conj'), (('and', 'expertise'), 'cc'), (('expertise', 'literacy'), 'conj'), (('.', 'exciting'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 This paper will also cover  key competencies organizations need to get started with AI and how to progress  from data collection, exploration and analytics to artificial intelligence. 

Tokens are: 
>> ['This', 'paper', 'will', 'also', 'cover', 'key', 'competencies', 'organizations', 'need', 'to', 'get', 'started', 'with', 'AI', 'and', 'how', 'to', 'progress', 'from', 'data', 'collection', ',', 'exploration', 'and', 'analytics', 'to', 'artificial', 'intelligence', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('paper', 'NOUN'), ('will', 'AUX'), ('also', 'ADV'), ('cover', 'VERB'), ('key', 'ADJ'), ('competencies', 'NOUN'), ('organizations', 'NOUN'), ('need', 'VERB'), ('to', 'PART'), ('get', 'AUX'), ('started', 'VERB'), ('with', 'ADP'), ('AI', 'NOUN'), ('and', 'CCONJ'), ('how', 'SCONJ'), ('to', 'PART'), ('progress', 'VERB'), ('from', 'ADP'), ('data', 'NOUN'), ('collection', 'NOUN'), (',', 'PUNCT'), ('exploration', 'NOUN'), ('and', 'CCONJ'), ('analytics', 'NOUN'), ('to', 'ADP'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('paper', 'NN'), ('will', 'MD'), ('also', 'RB'), ('cover', 'VB'), ('key', 'JJ'), ('competencies', 'NNS'), ('organizations', 'NNS'), ('need', 'VBP'), ('to', 'TO'), ('get', 'VB'), ('started', 'VBN'), ('with', 'IN'), ('AI', 'NN'), ('and', 'CC'), ('how', 'WRB'), ('to', 'TO'), ('progress', 'VB'), ('from', 'IN'), ('data', 'NN'), ('collection', 'NN'), (',', ','), ('exploration', 'NN'), ('and', 'CC'), ('analytics', 'NNS'), ('to', 'IN'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('paper', 'paper'), ('will', 'will'), ('also', 'also'), ('cover', 'cover'), ('key', 'key'), ('competencies', 'competency'), ('organizations', 'organization'), ('need', 'need'), ('to', 'to'), ('get', 'get'), ('started', 'start'), ('with', 'with'), ('AI', 'ai'), ('and', 'and'), ('how', 'how'), ('to', 'to'), ('progress', 'progress'), ('from', 'from'), ('data', 'datum'), ('collection', 'collection'), (',', ','), ('exploration', 'exploration'), ('and', 'and'), ('analytics', 'analytic'), ('to', 'to'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'paper'), 'det'), (('paper', 'cover'), 'nsubj'), (('will', 'cover'), 'aux'), (('also', 'cover'), 'advmod'), (('cover', 'root'), 'root'), (('key', 'organizations'), 'amod'), (('competencies', 'organizations'), 'compound'), (('organizations', 'cover'), 'obj'), (('need', 'cover'), 'ccomp'), (('to', 'started'), 'mark'), (('get', 'started'), 'aux:pass'), (('started', 'need'), 'xcomp'), (('with', 'AI'), 'case'), (('AI', 'started'), 'obl'), (('and', 'progress'), 'cc'), (('how', 'progress'), 'mark'), (('to', 'progress'), 'mark'), (('progress', 'started'), 'conj'), (('from', 'collection'), 'case'), (('data', 'collection'), 'compound'), (('collection', 'progress'), 'obl'), ((',', 'exploration'), 'punct'), (('exploration', 'collection'), 'conj'), (('and', 'analytics'), 'cc'), (('analytics', 'collection'), 'conj'), (('to', 'intelligence'), 'case'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'collection'), 'nmod'), (('.', 'cover'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

================================ Paragraph 20 =================================

Finally, this paper will help define meaningful and high value use-cases with  a structured framework to gather and align business, technology and data  requirements for a successful artificial intelligence implementation.


------------------- Sentence 1 -------------------

 Finally, this paper will help define meaningful and high value use-cases with  a structured framework to gather and align business, technology and data  requirements for a successful artificial intelligence implementation. 

Tokens are: 
>> ['Finally', ',', 'this', 'paper', 'will', 'help', 'define', 'meaningful', 'and', 'high', 'value', 'use-cases', 'with', 'a', 'structured', 'framework', 'to', 'gather', 'and', 'align', 'business', ',', 'technology', 'and', 'data', 'requirements', 'for', 'a', 'successful', 'artificial', 'intelligence', 'implementation', '.'] 

 UPOS tags are: 
>> [('Finally', 'ADV'), (',', 'PUNCT'), ('this', 'DET'), ('paper', 'NOUN'), ('will', 'AUX'), ('help', 'VERB'), ('define', 'VERB'), ('meaningful', 'ADJ'), ('and', 'CCONJ'), ('high', 'ADJ'), ('value', 'NOUN'), ('use-cases', 'NOUN'), ('with', 'ADP'), ('a', 'DET'), ('structured', 'VERB'), ('framework', 'NOUN'), ('to', 'PART'), ('gather', 'VERB'), ('and', 'CCONJ'), ('align', 'VERB'), ('business', 'NOUN'), (',', 'PUNCT'), ('technology', 'NOUN'), ('and', 'CCONJ'), ('data', 'NOUN'), ('requirements', 'NOUN'), ('for', 'ADP'), ('a', 'DET'), ('successful', 'ADJ'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('implementation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Finally', 'RB'), (',', ','), ('this', 'DT'), ('paper', 'NN'), ('will', 'MD'), ('help', 'VB'), ('define', 'VB'), ('meaningful', 'JJ'), ('and', 'CC'), ('high', 'JJ'), ('value', 'NN'), ('use-cases', 'NNS'), ('with', 'IN'), ('a', 'DT'), ('structured', 'VBN'), ('framework', 'NN'), ('to', 'TO'), ('gather', 'VB'), ('and', 'CC'), ('align', 'VB'), ('business', 'NN'), (',', ','), ('technology', 'NN'), ('and', 'CC'), ('data', 'NN'), ('requirements', 'NNS'), ('for', 'IN'), ('a', 'DT'), ('successful', 'JJ'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('implementation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Finally', 'finally'), (',', ','), ('this', 'this'), ('paper', 'paper'), ('will', 'will'), ('help', 'help'), ('define', 'define'), ('meaningful', 'meaningful'), ('and', 'and'), ('high', 'high'), ('value', 'value'), ('use-cases', 'use-case'), ('with', 'with'), ('a', 'a'), ('structured', 'structure'), ('framework', 'framework'), ('to', 'to'), ('gather', 'gather'), ('and', 'and'), ('align', 'align'), ('business', 'business'), (',', ','), ('technology', 'technology'), ('and', 'and'), ('data', 'datum'), ('requirements', 'requirement'), ('for', 'for'), ('a', 'a'), ('successful', 'successful'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('implementation', 'implementation'), ('.', '.')] 

 Dependency tags are: 
>> [(('Finally', 'help'), 'advmod'), ((',', 'help'), 'punct'), (('this', 'paper'), 'det'), (('paper', 'help'), 'nsubj'), (('will', 'help'), 'aux'), (('help', 'root'), 'root'), (('define', 'help'), 'xcomp'), (('meaningful', 'use-cases'), 'amod'), (('and', 'high'), 'cc'), (('high', 'meaningful'), 'conj'), (('value', 'use-cases'), 'compound'), (('use-cases', 'define'), 'obj'), (('with', 'framework'), 'case'), (('a', 'framework'), 'det'), (('structured', 'framework'), 'amod'), (('framework', 'define'), 'obl'), (('to', 'gather'), 'mark'), (('gather', 'framework'), 'acl'), (('and', 'align'), 'cc'), (('align', 'gather'), 'conj'), (('business', 'requirements'), 'compound'), ((',', 'technology'), 'punct'), (('technology', 'business'), 'conj'), (('and', 'data'), 'cc'), (('data', 'business'), 'conj'), (('requirements', 'gather'), 'obj'), (('for', 'implementation'), 'case'), (('a', 'implementation'), 'det'), (('successful', 'implementation'), 'amod'), (('artificial', 'implementation'), 'amod'), (('intelligence', 'implementation'), 'compound'), (('implementation', 'requirements'), 'nmod'), (('.', 'help'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 21 =================================

4/14Demystifying data science  


------------------- Sentence 1 -------------------

 4/14 

Tokens are: 
>> ['4/14'] 

 UPOS tags are: 
>> [('4/14', 'NUM')] 

 XPOS tags are: 
>> [('4/14', 'CD')] 

 Lemmas are: 
>> [('4/14', '4/14')] 

 Dependency tags are: 
>> [(('4/14', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Demystifying data science 

Tokens are: 
>> ['Demystifying', 'data', 'science'] 

 UPOS tags are: 
>> [('Demystifying', 'VERB'), ('data', 'NOUN'), ('science', 'NOUN')] 

 XPOS tags are: 
>> [('Demystifying', 'VBG'), ('data', 'NN'), ('science', 'NN')] 

 Lemmas are: 
>> [('Demystifying', 'demystify'), ('data', 'datum'), ('science', 'science')] 

 Dependency tags are: 
>> [(('Demystifying', 'root'), 'root'), (('data', 'science'), 'compound'), (('science', 'Demystifying'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 22 =================================

What is artificial intelligence and machine learning? According to Gartner, artificial intelligence will generate $2.9 trillion USD in  business value and recover 6.2 billion hours of worker productivity by 2021.2  To realize the high growth potential and costs savings from analytics and AI  technology, we must demystify some key artificial intelligence, machine learning  and analytics concepts.  


------------------- Sentence 1 -------------------

 What is artificial intelligence and machine learning? 

Tokens are: 
>> ['What', 'is', 'artificial', 'intelligence', 'and', 'machine', 'learning', '?'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('is', 'AUX'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('and', 'CCONJ'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('is', 'VBZ'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('and', 'CC'), ('machine', 'NN'), ('learning', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('is', 'be'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('and', 'and'), ('machine', 'machine'), ('learning', 'learning'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'root'), 'root'), (('is', 'What'), 'cop'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'What'), 'nsubj'), (('and', 'learning'), 'cc'), (('machine', 'learning'), 'compound'), (('learning', 'intelligence'), 'conj'), (('?', 'What'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 According to Gartner, artificial intelligence will generate $2.9 trillion USD in  business value and recover 6.2 billion hours of worker productivity by 2021.2 

Tokens are: 
>> ['According', 'to', 'Gartner', ',', 'artificial', 'intelligence', 'will', 'generate', '$', '2.9', 'trillion', 'USD', 'in', 'business', 'value', 'and', 'recover', '6.2', 'billion', 'hours', 'of', 'worker', 'productivity', 'by', '2021.2'] 

 UPOS tags are: 
>> [('According', 'VERB'), ('to', 'ADP'), ('Gartner', 'PROPN'), (',', 'PUNCT'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('will', 'AUX'), ('generate', 'VERB'), ('$', 'SYM'), ('2.9', 'NUM'), ('trillion', 'NUM'), ('USD', 'NOUN'), ('in', 'ADP'), ('business', 'NOUN'), ('value', 'NOUN'), ('and', 'CCONJ'), ('recover', 'VERB'), ('6.2', 'NUM'), ('billion', 'NUM'), ('hours', 'NOUN'), ('of', 'ADP'), ('worker', 'NOUN'), ('productivity', 'NOUN'), ('by', 'ADP'), ('2021.2', 'NUM')] 

 XPOS tags are: 
>> [('According', 'VBG'), ('to', 'IN'), ('Gartner', 'NNP'), (',', ','), ('artificial', 'JJ'), ('intelligence', 'NN'), ('will', 'MD'), ('generate', 'VB'), ('$', '$'), ('2.9', 'CD'), ('trillion', 'CD'), ('USD', 'NN'), ('in', 'IN'), ('business', 'NN'), ('value', 'NN'), ('and', 'CC'), ('recover', 'VB'), ('6.2', 'CD'), ('billion', 'CD'), ('hours', 'NNS'), ('of', 'IN'), ('worker', 'NN'), ('productivity', 'NN'), ('by', 'IN'), ('2021.2', 'CD')] 

 Lemmas are: 
>> [('According', 'accord'), ('to', 'to'), ('Gartner', 'Gartner'), (',', ','), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('will', 'will'), ('generate', 'generate'), ('$', '$'), ('2.9', '2.9'), ('trillion', 'trillion'), ('USD', 'usd'), ('in', 'in'), ('business', 'business'), ('value', 'value'), ('and', 'and'), ('recover', 'recover'), ('6.2', '6.2'), ('billion', 'billion'), ('hours', 'hour'), ('of', 'of'), ('worker', 'worker'), ('productivity', 'productivity'), ('by', 'by'), ('2021.2', '2021.2')] 

 Dependency tags are: 
>> [(('According', 'Gartner'), 'case'), (('to', 'According'), 'fixed'), (('Gartner', 'generate'), 'obl'), ((',', 'generate'), 'punct'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'generate'), 'nsubj'), (('will', 'generate'), 'aux'), (('generate', 'root'), 'root'), (('$', 'USD'), 'compound'), (('2.9', 'trillion'), 'compound'), (('trillion', '$'), 'nummod'), (('USD', 'generate'), 'obj'), (('in', 'value'), 'case'), (('business', 'value'), 'compound'), (('value', 'USD'), 'nmod'), (('and', 'recover'), 'cc'), (('recover', 'generate'), 'conj'), (('6.2', 'billion'), 'compound'), (('billion', 'hours'), 'nummod'), (('hours', 'recover'), 'obj'), (('of', 'productivity'), 'case'), (('worker', 'productivity'), 'compound'), (('productivity', 'hours'), 'nmod'), (('by', '2021.2'), 'case'), (('2021.2', 'recover'), 'obl')]

 Named Entites are: 
>> [('Gartner', 'ORG'), ('$2.9 trillion USD', 'MONEY'), ('6.2 billion hours', 'QUANTITY'), ('2021.2', 'CARDINAL')]

------------------- Sentence 3 -------------------

 To realize the high growth potential and costs savings from analytics and AI  technology, we must demystify some key artificial intelligence, machine learning  and analytics concepts. 

Tokens are: 
>> ['To', 'realize', 'the', 'high', 'growth', 'potential', 'and', 'costs', 'savings', 'from', 'analytics', 'and', 'AI', 'technology', ',', 'we', 'must', 'demystify', 'some', 'key', 'artificial', 'intelligence', ',', 'machine', 'learning', 'and', 'analytics', 'concepts', '.'] 

 UPOS tags are: 
>> [('To', 'PART'), ('realize', 'VERB'), ('the', 'DET'), ('high', 'ADJ'), ('growth', 'NOUN'), ('potential', 'NOUN'), ('and', 'CCONJ'), ('costs', 'VERB'), ('savings', 'NOUN'), ('from', 'ADP'), ('analytics', 'NOUN'), ('and', 'CCONJ'), ('AI', 'NOUN'), ('technology', 'NOUN'), (',', 'PUNCT'), ('we', 'PRON'), ('must', 'AUX'), ('demystify', 'VERB'), ('some', 'DET'), ('key', 'ADJ'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('and', 'CCONJ'), ('analytics', 'NOUN'), ('concepts', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('To', 'TO'), ('realize', 'VB'), ('the', 'DT'), ('high', 'JJ'), ('growth', 'NN'), ('potential', 'NN'), ('and', 'CC'), ('costs', 'VBZ'), ('savings', 'NNS'), ('from', 'IN'), ('analytics', 'NNS'), ('and', 'CC'), ('AI', 'NN'), ('technology', 'NN'), (',', ','), ('we', 'PRP'), ('must', 'MD'), ('demystify', 'VB'), ('some', 'DT'), ('key', 'JJ'), ('artificial', 'JJ'), ('intelligence', 'NN'), (',', ','), ('machine', 'NN'), ('learning', 'NN'), ('and', 'CC'), ('analytics', 'NN'), ('concepts', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('To', 'to'), ('realize', 'realize'), ('the', 'the'), ('high', 'high'), ('growth', 'growth'), ('potential', 'potential'), ('and', 'and'), ('costs', 'cost'), ('savings', 'savings'), ('from', 'from'), ('analytics', 'analytic'), ('and', 'and'), ('AI', 'ai'), ('technology', 'technology'), (',', ','), ('we', 'we'), ('must', 'must'), ('demystify', 'demystify'), ('some', 'some'), ('key', 'key'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), (',', ','), ('machine', 'machine'), ('learning', 'learning'), ('and', 'and'), ('analytics', 'analytic'), ('concepts', 'concept'), ('.', '.')] 

 Dependency tags are: 
>> [(('To', 'realize'), 'mark'), (('realize', 'demystify'), 'advcl'), (('the', 'potential'), 'det'), (('high', 'growth'), 'amod'), (('growth', 'potential'), 'compound'), (('potential', 'realize'), 'obj'), (('and', 'costs'), 'cc'), (('costs', 'realize'), 'conj'), (('savings', 'costs'), 'obj'), (('from', 'analytics'), 'case'), (('analytics', 'savings'), 'nmod'), (('and', 'technology'), 'cc'), (('AI', 'technology'), 'compound'), (('technology', 'analytics'), 'conj'), ((',', 'demystify'), 'punct'), (('we', 'demystify'), 'nsubj'), (('must', 'demystify'), 'aux'), (('demystify', 'root'), 'root'), (('some', 'intelligence'), 'det'), (('key', 'intelligence'), 'amod'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'demystify'), 'obj'), ((',', 'concepts'), 'punct'), (('machine', 'learning'), 'compound'), (('learning', 'concepts'), 'compound'), (('and', 'analytics'), 'cc'), (('analytics', 'learning'), 'conj'), (('concepts', 'intelligence'), 'conj'), (('.', 'demystify'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 23 =================================

Simply put, artificial intelligence systems automate and simplify tasks, such as  recognizing objects, making sense of speech, etc. But, how does that lead to  learning how to drive a car? A key concept of AI technology is the difference  between learning and training. Just as a human goes through the process of  driver training to become proficient, a computer learns from experience or,  more specifically, data. Once the system has data on good driving practices and  the “rules of the road”, it becomes intelligent enough to make decisions in the  real world. While there are more complexities in the learning, management and  monitoring of such technology and solutions, this is the core of AI.  


------------------- Sentence 1 -------------------

 Simply put, artificial intelligence systems automate and simplify tasks, such as  recognizing objects, making sense of speech, etc. 

Tokens are: 
>> ['Simply', 'put', ',', 'artificial', 'intelligence', 'systems', 'automate', 'and', 'simplify', 'tasks', ',', 'such', 'as', 'recognizing', 'objects', ',', 'making', 'sense', 'of', 'speech', ',', 'etc', '.'] 

 UPOS tags are: 
>> [('Simply', 'ADV'), ('put', 'VERB'), (',', 'PUNCT'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('systems', 'NOUN'), ('automate', 'VERB'), ('and', 'CCONJ'), ('simplify', 'VERB'), ('tasks', 'NOUN'), (',', 'PUNCT'), ('such', 'ADJ'), ('as', 'SCONJ'), ('recognizing', 'VERB'), ('objects', 'NOUN'), (',', 'PUNCT'), ('making', 'VERB'), ('sense', 'NOUN'), ('of', 'ADP'), ('speech', 'NOUN'), (',', 'PUNCT'), ('etc', 'X'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Simply', 'RB'), ('put', 'VBN'), (',', ','), ('artificial', 'JJ'), ('intelligence', 'NN'), ('systems', 'NNS'), ('automate', 'VBP'), ('and', 'CC'), ('simplify', 'VBP'), ('tasks', 'NNS'), (',', ','), ('such', 'JJ'), ('as', 'IN'), ('recognizing', 'VBG'), ('objects', 'NNS'), (',', ','), ('making', 'VBG'), ('sense', 'NN'), ('of', 'IN'), ('speech', 'NN'), (',', ','), ('etc', 'FW'), ('.', '.')] 

 Lemmas are: 
>> [('Simply', 'simply'), ('put', 'put'), (',', ','), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('systems', 'system'), ('automate', 'automate'), ('and', 'and'), ('simplify', 'simplify'), ('tasks', 'task'), (',', ','), ('such', 'such'), ('as', 'as'), ('recognizing', 'recognize'), ('objects', 'object'), (',', ','), ('making', 'make'), ('sense', 'sense'), ('of', 'of'), ('speech', 'speech'), (',', ','), ('etc', 'etc'), ('.', '.')] 

 Dependency tags are: 
>> [(('Simply', 'put'), 'advmod'), (('put', 'automate'), 'advcl'), ((',', 'automate'), 'punct'), (('artificial', 'systems'), 'amod'), (('intelligence', 'systems'), 'compound'), (('systems', 'automate'), 'nsubj'), (('automate', 'root'), 'root'), (('and', 'simplify'), 'cc'), (('simplify', 'automate'), 'conj'), (('tasks', 'automate'), 'obj'), ((',', 'recognizing'), 'punct'), (('such', 'recognizing'), 'mark'), (('as', 'such'), 'fixed'), (('recognizing', 'tasks'), 'acl'), (('objects', 'recognizing'), 'obj'), ((',', 'making'), 'punct'), (('making', 'recognizing'), 'conj'), (('sense', 'making'), 'obj'), (('of', 'speech'), 'case'), (('speech', 'sense'), 'nmod'), ((',', 'etc'), 'punct'), (('etc', 'speech'), 'conj'), (('.', 'automate'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 But, how does that lead to  learning how to drive a car? 

Tokens are: 
>> ['But', ',', 'how', 'does', 'that', 'lead', 'to', 'learning', 'how', 'to', 'drive', 'a', 'car', '?'] 

 UPOS tags are: 
>> [('But', 'CCONJ'), (',', 'PUNCT'), ('how', 'ADV'), ('does', 'AUX'), ('that', 'PRON'), ('lead', 'VERB'), ('to', 'SCONJ'), ('learning', 'VERB'), ('how', 'SCONJ'), ('to', 'PART'), ('drive', 'VERB'), ('a', 'DET'), ('car', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('But', 'CC'), (',', ','), ('how', 'WRB'), ('does', 'VBZ'), ('that', 'DT'), ('lead', 'VB'), ('to', 'IN'), ('learning', 'VBG'), ('how', 'WRB'), ('to', 'TO'), ('drive', 'VB'), ('a', 'DT'), ('car', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('But', 'but'), (',', ','), ('how', 'how'), ('does', 'do'), ('that', 'that'), ('lead', 'lead'), ('to', 'to'), ('learning', 'learn'), ('how', 'how'), ('to', 'to'), ('drive', 'drive'), ('a', 'a'), ('car', 'car'), ('?', '?')] 

 Dependency tags are: 
>> [(('But', 'lead'), 'cc'), ((',', 'lead'), 'punct'), (('how', 'lead'), 'advmod'), (('does', 'lead'), 'aux'), (('that', 'lead'), 'nsubj'), (('lead', 'root'), 'root'), (('to', 'learning'), 'mark'), (('learning', 'lead'), 'advcl'), (('how', 'drive'), 'mark'), (('to', 'drive'), 'mark'), (('drive', 'learning'), 'ccomp'), (('a', 'car'), 'det'), (('car', 'drive'), 'obj'), (('?', 'lead'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 A key concept of AI technology is the difference  between learning and training. 

Tokens are: 
>> ['A', 'key', 'concept', 'of', 'AI', 'technology', 'is', 'the', 'difference', 'between', 'learning', 'and', 'training', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('key', 'ADJ'), ('concept', 'NOUN'), ('of', 'ADP'), ('AI', 'NOUN'), ('technology', 'NOUN'), ('is', 'AUX'), ('the', 'DET'), ('difference', 'NOUN'), ('between', 'ADP'), ('learning', 'NOUN'), ('and', 'CCONJ'), ('training', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('key', 'JJ'), ('concept', 'NN'), ('of', 'IN'), ('AI', 'NN'), ('technology', 'NN'), ('is', 'VBZ'), ('the', 'DT'), ('difference', 'NN'), ('between', 'IN'), ('learning', 'NN'), ('and', 'CC'), ('training', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('key', 'key'), ('concept', 'concept'), ('of', 'of'), ('AI', 'ai'), ('technology', 'technology'), ('is', 'be'), ('the', 'the'), ('difference', 'difference'), ('between', 'between'), ('learning', 'learning'), ('and', 'and'), ('training', 'training'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'concept'), 'det'), (('key', 'concept'), 'amod'), (('concept', 'difference'), 'nsubj'), (('of', 'technology'), 'case'), (('AI', 'technology'), 'compound'), (('technology', 'concept'), 'nmod'), (('is', 'difference'), 'cop'), (('the', 'difference'), 'det'), (('difference', 'root'), 'root'), (('between', 'learning'), 'case'), (('learning', 'difference'), 'nmod'), (('and', 'training'), 'cc'), (('training', 'learning'), 'conj'), (('.', 'difference'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Just as a human goes through the process of  driver training to become proficient, a computer learns from experience or,  more specifically, data. 

Tokens are: 
>> ['Just', 'as', 'a', 'human', 'goes', 'through', 'the', 'process', 'of', 'driver', 'training', 'to', 'become', 'proficient', ',', 'a', 'computer', 'learns', 'from', 'experience', 'or', ',', 'more', 'specifically', ',', 'data', '.'] 

 UPOS tags are: 
>> [('Just', 'ADV'), ('as', 'SCONJ'), ('a', 'DET'), ('human', 'NOUN'), ('goes', 'VERB'), ('through', 'ADP'), ('the', 'DET'), ('process', 'NOUN'), ('of', 'ADP'), ('driver', 'NOUN'), ('training', 'NOUN'), ('to', 'PART'), ('become', 'VERB'), ('proficient', 'ADJ'), (',', 'PUNCT'), ('a', 'DET'), ('computer', 'NOUN'), ('learns', 'VERB'), ('from', 'ADP'), ('experience', 'NOUN'), ('or', 'CCONJ'), (',', 'PUNCT'), ('more', 'ADV'), ('specifically', 'ADV'), (',', 'PUNCT'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Just', 'RB'), ('as', 'IN'), ('a', 'DT'), ('human', 'NN'), ('goes', 'VBZ'), ('through', 'IN'), ('the', 'DT'), ('process', 'NN'), ('of', 'IN'), ('driver', 'NN'), ('training', 'NN'), ('to', 'TO'), ('become', 'VB'), ('proficient', 'JJ'), (',', ','), ('a', 'DT'), ('computer', 'NN'), ('learns', 'VBZ'), ('from', 'IN'), ('experience', 'NN'), ('or', 'CC'), (',', ','), ('more', 'RBR'), ('specifically', 'RB'), (',', ','), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Just', 'just'), ('as', 'as'), ('a', 'a'), ('human', 'human'), ('goes', 'go'), ('through', 'through'), ('the', 'the'), ('process', 'process'), ('of', 'of'), ('driver', 'driver'), ('training', 'training'), ('to', 'to'), ('become', 'become'), ('proficient', 'proficient'), (',', ','), ('a', 'a'), ('computer', 'computer'), ('learns', 'learn'), ('from', 'from'), ('experience', 'experience'), ('or', 'or'), (',', ','), ('more', 'more'), ('specifically', 'specifically'), (',', ','), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('Just', 'goes'), 'advmod'), (('as', 'goes'), 'mark'), (('a', 'human'), 'det'), (('human', 'goes'), 'nsubj'), (('goes', 'learns'), 'advcl'), (('through', 'process'), 'case'), (('the', 'process'), 'det'), (('process', 'goes'), 'obl'), (('of', 'training'), 'case'), (('driver', 'training'), 'compound'), (('training', 'process'), 'nmod'), (('to', 'become'), 'mark'), (('become', 'goes'), 'advcl'), (('proficient', 'become'), 'xcomp'), ((',', 'learns'), 'punct'), (('a', 'computer'), 'det'), (('computer', 'learns'), 'nsubj'), (('learns', 'root'), 'root'), (('from', 'experience'), 'case'), (('experience', 'learns'), 'obl'), (('or', 'data'), 'cc'), ((',', 'specifically'), 'punct'), (('more', 'specifically'), 'advmod'), (('specifically', 'data'), 'advmod'), ((',', 'data'), 'punct'), (('data', 'experience'), 'conj'), (('.', 'learns'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 Once the system has data on good driving practices and  the “rules of the road”, it becomes intelligent enough to make decisions in the  real world. 

Tokens are: 
>> ['Once', 'the', 'system', 'has', 'data', 'on', 'good', 'driving', 'practices', 'and', 'the', '“', 'rules', 'of', 'the', 'road', '”', ',', 'it', 'becomes', 'intelligent', 'enough', 'to', 'make', 'decisions', 'in', 'the', 'real', 'world', '.'] 

 UPOS tags are: 
>> [('Once', 'SCONJ'), ('the', 'DET'), ('system', 'NOUN'), ('has', 'VERB'), ('data', 'NOUN'), ('on', 'ADP'), ('good', 'ADJ'), ('driving', 'NOUN'), ('practices', 'NOUN'), ('and', 'CCONJ'), ('the', 'DET'), ('“', 'PUNCT'), ('rules', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('road', 'NOUN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('it', 'PRON'), ('becomes', 'VERB'), ('intelligent', 'ADJ'), ('enough', 'ADJ'), ('to', 'PART'), ('make', 'VERB'), ('decisions', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('real', 'ADJ'), ('world', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Once', 'IN'), ('the', 'DT'), ('system', 'NN'), ('has', 'VBZ'), ('data', 'NNS'), ('on', 'IN'), ('good', 'JJ'), ('driving', 'NN'), ('practices', 'NNS'), ('and', 'CC'), ('the', 'DT'), ('“', '``'), ('rules', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('road', 'NN'), ('”', "''"), (',', ','), ('it', 'PRP'), ('becomes', 'VBZ'), ('intelligent', 'JJ'), ('enough', 'JJ'), ('to', 'TO'), ('make', 'VB'), ('decisions', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('real', 'JJ'), ('world', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Once', 'once'), ('the', 'the'), ('system', 'system'), ('has', 'have'), ('data', 'datum'), ('on', 'on'), ('good', 'good'), ('driving', 'driving'), ('practices', 'practice'), ('and', 'and'), ('the', 'the'), ('“', "''"), ('rules', 'rule'), ('of', 'of'), ('the', 'the'), ('road', 'road'), ('”', "''"), (',', ','), ('it', 'it'), ('becomes', 'become'), ('intelligent', 'intelligent'), ('enough', 'enough'), ('to', 'to'), ('make', 'make'), ('decisions', 'decision'), ('in', 'in'), ('the', 'the'), ('real', 'real'), ('world', 'world'), ('.', '.')] 

 Dependency tags are: 
>> [(('Once', 'has'), 'mark'), (('the', 'system'), 'det'), (('system', 'has'), 'nsubj'), (('has', 'becomes'), 'advcl'), (('data', 'has'), 'obj'), (('on', 'practices'), 'case'), (('good', 'practices'), 'amod'), (('driving', 'practices'), 'compound'), (('practices', 'data'), 'nmod'), (('and', 'rules'), 'cc'), (('the', 'rules'), 'det'), (('“', 'rules'), 'punct'), (('rules', 'practices'), 'conj'), (('of', 'road'), 'case'), (('the', 'road'), 'det'), (('road', 'rules'), 'nmod'), (('”', 'rules'), 'punct'), ((',', 'becomes'), 'punct'), (('it', 'becomes'), 'expl'), (('becomes', 'root'), 'root'), (('intelligent', 'becomes'), 'xcomp'), (('enough', 'becomes'), 'xcomp'), (('to', 'make'), 'mark'), (('make', 'enough'), 'acl'), (('decisions', 'make'), 'obj'), (('in', 'world'), 'case'), (('the', 'world'), 'det'), (('real', 'world'), 'amod'), (('world', 'make'), 'obl'), (('.', 'becomes'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 While there are more complexities in the learning, management and  monitoring of such technology and solutions, this is the core of AI. 

Tokens are: 
>> ['While', 'there', 'are', 'more', 'complexities', 'in', 'the', 'learning', ',', 'management', 'and', 'monitoring', 'of', 'such', 'technology', 'and', 'solutions', ',', 'this', 'is', 'the', 'core', 'of', 'AI', '.'] 

 UPOS tags are: 
>> [('While', 'SCONJ'), ('there', 'PRON'), ('are', 'VERB'), ('more', 'ADJ'), ('complexities', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('learning', 'NOUN'), (',', 'PUNCT'), ('management', 'NOUN'), ('and', 'CCONJ'), ('monitoring', 'NOUN'), ('of', 'ADP'), ('such', 'ADJ'), ('technology', 'NOUN'), ('and', 'CCONJ'), ('solutions', 'NOUN'), (',', 'PUNCT'), ('this', 'PRON'), ('is', 'AUX'), ('the', 'DET'), ('core', 'NOUN'), ('of', 'ADP'), ('AI', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('While', 'IN'), ('there', 'EX'), ('are', 'VBP'), ('more', 'JJR'), ('complexities', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('learning', 'NN'), (',', ','), ('management', 'NN'), ('and', 'CC'), ('monitoring', 'NN'), ('of', 'IN'), ('such', 'JJ'), ('technology', 'NN'), ('and', 'CC'), ('solutions', 'NNS'), (',', ','), ('this', 'DT'), ('is', 'VBZ'), ('the', 'DT'), ('core', 'NN'), ('of', 'IN'), ('AI', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('While', 'while'), ('there', 'there'), ('are', 'be'), ('more', 'more'), ('complexities', 'complexity'), ('in', 'in'), ('the', 'the'), ('learning', 'learning'), (',', ','), ('management', 'management'), ('and', 'and'), ('monitoring', 'monitoring'), ('of', 'of'), ('such', 'such'), ('technology', 'technology'), ('and', 'and'), ('solutions', 'solution'), (',', ','), ('this', 'this'), ('is', 'be'), ('the', 'the'), ('core', 'core'), ('of', 'of'), ('AI', 'ai'), ('.', '.')] 

 Dependency tags are: 
>> [(('While', 'are'), 'mark'), (('there', 'are'), 'expl'), (('are', 'core'), 'advcl'), (('more', 'complexities'), 'amod'), (('complexities', 'are'), 'nsubj'), (('in', 'learning'), 'case'), (('the', 'learning'), 'det'), (('learning', 'complexities'), 'nmod'), ((',', 'management'), 'punct'), (('management', 'learning'), 'conj'), (('and', 'monitoring'), 'cc'), (('monitoring', 'learning'), 'conj'), (('of', 'technology'), 'case'), (('such', 'technology'), 'amod'), (('technology', 'learning'), 'nmod'), (('and', 'solutions'), 'cc'), (('solutions', 'technology'), 'conj'), ((',', 'core'), 'punct'), (('this', 'core'), 'nsubj'), (('is', 'core'), 'cop'), (('the', 'core'), 'det'), (('core', 'root'), 'root'), (('of', 'AI'), 'case'), (('AI', 'core'), 'nmod'), (('.', 'core'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

================================ Paragraph 24 =================================

Deep learning 


------------------- Sentence 1 -------------------

 Deep learning 

Tokens are: 
>> ['Deep', 'learning'] 

 UPOS tags are: 
>> [('Deep', 'ADJ'), ('learning', 'NOUN')] 

 XPOS tags are: 
>> [('Deep', 'JJ'), ('learning', 'NN')] 

 Lemmas are: 
>> [('Deep', 'deep'), ('learning', 'learning')] 

 Dependency tags are: 
>> [(('Deep', 'learning'), 'amod'), (('learning', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 25 =================================

Popular and powerful set of machine learning techniques, which mimic the brain’s  neuron activities, called  neural networks. 


------------------- Sentence 1 -------------------

 Popular and powerful set of machine learning techniques, which mimic the brain’s  neuron activities, called  neural networks. 

Tokens are: 
>> ['Popular', 'and', 'powerful', 'set', 'of', 'machine', 'learning', 'techniques', ',', 'which', 'mimic', 'the', 'brain', '’s', 'neuron', 'activities', ',', 'called', 'neural', 'networks', '.'] 

 UPOS tags are: 
>> [('Popular', 'ADJ'), ('and', 'CCONJ'), ('powerful', 'ADJ'), ('set', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('techniques', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('mimic', 'VERB'), ('the', 'DET'), ('brain', 'NOUN'), ('’s', 'PART'), ('neuron', 'NOUN'), ('activities', 'NOUN'), (',', 'PUNCT'), ('called', 'VERB'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Popular', 'JJ'), ('and', 'CC'), ('powerful', 'JJ'), ('set', 'NN'), ('of', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('techniques', 'NNS'), (',', ','), ('which', 'WDT'), ('mimic', 'VBP'), ('the', 'DT'), ('brain', 'NN'), ('’s', 'POS'), ('neuron', 'NN'), ('activities', 'NNS'), (',', ','), ('called', 'VBN'), ('neural', 'JJ'), ('networks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Popular', 'popular'), ('and', 'and'), ('powerful', 'powerful'), ('set', 'set'), ('of', 'of'), ('machine', 'machine'), ('learning', 'learning'), ('techniques', 'technique'), (',', ','), ('which', 'which'), ('mimic', 'mimic'), ('the', 'the'), ('brain', 'brain'), ('’s', "'s"), ('neuron', 'neuron'), ('activities', 'activity'), (',', ','), ('called', 'call'), ('neural', 'neural'), ('networks', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('Popular', 'set'), 'amod'), (('and', 'powerful'), 'cc'), (('powerful', 'Popular'), 'conj'), (('set', 'root'), 'root'), (('of', 'techniques'), 'case'), (('machine', 'techniques'), 'compound'), (('learning', 'techniques'), 'compound'), (('techniques', 'set'), 'nmod'), ((',', 'mimic'), 'punct'), (('which', 'mimic'), 'nsubj'), (('mimic', 'techniques'), 'acl:relcl'), (('the', 'brain'), 'det'), (('brain', 'activities'), 'nmod:poss'), (('’s', 'brain'), 'case'), (('neuron', 'activities'), 'compound'), (('activities', 'mimic'), 'obj'), ((',', 'activities'), 'punct'), (('called', 'activities'), 'acl'), (('neural', 'networks'), 'amod'), (('networks', 'called'), 'obj'), (('.', 'set'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 26 =================================

Machine learning 


------------------- Sentence 1 -------------------

 Machine learning 

Tokens are: 
>> ['Machine', 'learning'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('learning', 'NOUN')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('learning', 'NN')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('learning', 'learning')] 

 Dependency tags are: 
>> [(('Machine', 'learning'), 'compound'), (('learning', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 27 =================================

Field of AI that learns from historical data towards an end goal/outcome. For  example, the customers likely to default on their home loan. 


------------------- Sentence 1 -------------------

 Field of AI that learns from historical data towards an end goal/outcome. 

Tokens are: 
>> ['Field', 'of', 'AI', 'that', 'learns', 'from', 'historical', 'data', 'towards', 'an', 'end', 'goal', '/', 'outcome', '.'] 

 UPOS tags are: 
>> [('Field', 'NOUN'), ('of', 'ADP'), ('AI', 'NOUN'), ('that', 'PRON'), ('learns', 'VERB'), ('from', 'ADP'), ('historical', 'ADJ'), ('data', 'NOUN'), ('towards', 'ADP'), ('an', 'DET'), ('end', 'NOUN'), ('goal', 'NOUN'), ('/', 'SYM'), ('outcome', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Field', 'NN'), ('of', 'IN'), ('AI', 'NN'), ('that', 'WDT'), ('learns', 'VBZ'), ('from', 'IN'), ('historical', 'JJ'), ('data', 'NNS'), ('towards', 'IN'), ('an', 'DT'), ('end', 'NN'), ('goal', 'NN'), ('/', ','), ('outcome', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Field', 'field'), ('of', 'of'), ('AI', 'ai'), ('that', 'that'), ('learns', 'learn'), ('from', 'from'), ('historical', 'historical'), ('data', 'datum'), ('towards', 'towards'), ('an', 'a'), ('end', 'end'), ('goal', 'goal'), ('/', '/'), ('outcome', 'outcome'), ('.', '.')] 

 Dependency tags are: 
>> [(('Field', 'root'), 'root'), (('of', 'AI'), 'case'), (('AI', 'Field'), 'nmod'), (('that', 'learns'), 'nsubj'), (('learns', 'AI'), 'acl:relcl'), (('from', 'data'), 'case'), (('historical', 'data'), 'amod'), (('data', 'learns'), 'obl'), (('towards', 'goal'), 'case'), (('an', 'goal'), 'det'), (('end', 'goal'), 'compound'), (('goal', 'learns'), 'obl'), (('/', 'outcome'), 'cc'), (('outcome', 'goal'), 'conj'), (('.', 'Field'), 'punct')]

 Named Entites are: 
>> [('Field of AI', 'ORG')]

------------------- Sentence 2 -------------------

 For  example, the customers likely to default on their home loan. 

Tokens are: 
>> ['For', 'example', ',', 'the', 'customers', 'likely', 'to', 'default', 'on', 'their', 'home', 'loan', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('customers', 'NOUN'), ('likely', 'ADJ'), ('to', 'PART'), ('default', 'VERB'), ('on', 'ADP'), ('their', 'PRON'), ('home', 'NOUN'), ('loan', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('example', 'NN'), (',', ','), ('the', 'DT'), ('customers', 'NNS'), ('likely', 'JJ'), ('to', 'TO'), ('default', 'VB'), ('on', 'IN'), ('their', 'PRP$'), ('home', 'NN'), ('loan', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('example', 'example'), (',', ','), ('the', 'the'), ('customers', 'customer'), ('likely', 'likely'), ('to', 'to'), ('default', 'default'), ('on', 'on'), ('their', 'they'), ('home', 'home'), ('loan', 'loan'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'example'), 'case'), (('example', 'likely'), 'obl'), ((',', 'likely'), 'punct'), (('the', 'customers'), 'det'), (('customers', 'likely'), 'nsubj'), (('likely', 'root'), 'root'), (('to', 'default'), 'mark'), (('default', 'likely'), 'xcomp'), (('on', 'loan'), 'case'), (('their', 'loan'), 'nmod:poss'), (('home', 'loan'), 'compound'), (('loan', 'default'), 'obl'), (('.', 'likely'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 28 =================================

Artificial intelligence 


------------------- Sentence 1 -------------------

 Artificial intelligence 

Tokens are: 
>> ['Artificial', 'intelligence'] 

 UPOS tags are: 
>> [('Artificial', 'ADJ'), ('intelligence', 'NOUN')] 

 XPOS tags are: 
>> [('Artificial', 'JJ'), ('intelligence', 'NN')] 

 Lemmas are: 
>> [('Artificial', 'Artificial'), ('intelligence', 'intelligence')] 

 Dependency tags are: 
>> [(('Artificial', 'intelligence'), 'amod'), (('intelligence', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 29 =================================

Computing systems capable of performing tasks that humans are very good at,  such as recognizing objects, recognizing and making sense of speech, self-driving  cars. 


------------------- Sentence 1 -------------------

 Computing systems capable of performing tasks that humans are very good at,  such as recognizing objects, recognizing and making sense of speech, self-driving  cars. 

Tokens are: 
>> ['Computing', 'systems', 'capable', 'of', 'performing', 'tasks', 'that', 'humans', 'are', 'very', 'good', 'at', ',', 'such', 'as', 'recognizing', 'objects', ',', 'recognizing', 'and', 'making', 'sense', 'of', 'speech', ',', 'self', '-driving', 'cars', '.'] 

 UPOS tags are: 
>> [('Computing', 'NOUN'), ('systems', 'NOUN'), ('capable', 'ADJ'), ('of', 'SCONJ'), ('performing', 'VERB'), ('tasks', 'NOUN'), ('that', 'PRON'), ('humans', 'NOUN'), ('are', 'AUX'), ('very', 'ADV'), ('good', 'ADJ'), ('at', 'ADP'), (',', 'PUNCT'), ('such', 'ADJ'), ('as', 'SCONJ'), ('recognizing', 'VERB'), ('objects', 'NOUN'), (',', 'PUNCT'), ('recognizing', 'VERB'), ('and', 'CCONJ'), ('making', 'VERB'), ('sense', 'NOUN'), ('of', 'ADP'), ('speech', 'NOUN'), (',', 'PUNCT'), ('self', 'NOUN'), ('-driving', 'NOUN'), ('cars', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Computing', 'NN'), ('systems', 'NNS'), ('capable', 'JJ'), ('of', 'IN'), ('performing', 'VBG'), ('tasks', 'NNS'), ('that', 'WDT'), ('humans', 'NNS'), ('are', 'VBP'), ('very', 'RB'), ('good', 'JJ'), ('at', 'IN'), (',', ','), ('such', 'JJ'), ('as', 'IN'), ('recognizing', 'VBG'), ('objects', 'NNS'), (',', ','), ('recognizing', 'VBG'), ('and', 'CC'), ('making', 'VBG'), ('sense', 'NN'), ('of', 'IN'), ('speech', 'NN'), (',', ','), ('self', 'NN'), ('-driving', 'NN'), ('cars', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Computing', 'Computing'), ('systems', 'system'), ('capable', 'capable'), ('of', 'of'), ('performing', 'perform'), ('tasks', 'task'), ('that', 'that'), ('humans', 'human'), ('are', 'be'), ('very', 'very'), ('good', 'good'), ('at', 'at'), (',', ','), ('such', 'such'), ('as', 'as'), ('recognizing', 'recognize'), ('objects', 'object'), (',', ','), ('recognizing', 'recognize'), ('and', 'and'), ('making', 'make'), ('sense', 'sense'), ('of', 'of'), ('speech', 'speech'), (',', ','), ('self', 'self'), ('-driving', '-driving'), ('cars', 'car'), ('.', '.')] 

 Dependency tags are: 
>> [(('Computing', 'systems'), 'compound'), (('systems', 'root'), 'root'), (('capable', 'systems'), 'amod'), (('of', 'performing'), 'mark'), (('performing', 'capable'), 'advcl'), (('tasks', 'performing'), 'obj'), (('that', 'good'), 'mark'), (('humans', 'good'), 'nsubj'), (('are', 'good'), 'cop'), (('very', 'good'), 'advmod'), (('good', 'tasks'), 'acl:relcl'), (('at', 'good'), 'obl'), ((',', 'recognizing'), 'punct'), (('such', 'recognizing'), 'mark'), (('as', 'such'), 'fixed'), (('recognizing', 'good'), 'advcl'), (('objects', 'recognizing'), 'obj'), ((',', 'recognizing'), 'punct'), (('recognizing', 'recognizing'), 'conj'), (('and', 'making'), 'cc'), (('making', 'recognizing'), 'conj'), (('sense', 'making'), 'obj'), (('of', 'speech'), 'case'), (('speech', 'sense'), 'nmod'), ((',', 'cars'), 'punct'), (('self', 'cars'), 'compound'), (('-driving', 'cars'), 'compound'), (('cars', 'speech'), 'conj'), (('.', 'systems'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 30 =================================

Source: https://www.kdnuggets.com/2018/11/an-introduction-ai.html 


------------------- Sentence 1 -------------------

 Source: https://www.kdnuggets.com/2018/11/an-introduction-ai.html 

Tokens are: 
>> ['Source', ':', 'https://www.kdnuggets.com/2018/11/an-introduction-ai.html'] 

 UPOS tags are: 
>> [('Source', 'NOUN'), (':', 'PUNCT'), ('https://www.kdnuggets.com/2018/11/an-introduction-ai.html', 'X')] 

 XPOS tags are: 
>> [('Source', 'NN'), (':', ':'), ('https://www.kdnuggets.com/2018/11/an-introduction-ai.html', 'ADD')] 

 Lemmas are: 
>> [('Source', 'source'), (':', ':'), ('https://www.kdnuggets.com/2018/11/an-introduction-ai.html', 'https://www.kdnuggets.com/2018/11/an-introduction-ai.html')] 

 Dependency tags are: 
>> [(('Source', 'root'), 'root'), ((':', 'Source'), 'punct'), (('https://www.kdnuggets.com/2018/11/an-introduction-ai.html', 'Source'), 'appos')]

 Named Entites are: 
>> []

================================ Paragraph 31 =================================

Machine learning, a subset of artificial intelligence, enables users to learn from  historical data to achieve a desired outcome. It powers targeted ads, personalized  content, song recommendations, predictive maintenance activities, virtual  assistants and more.  


------------------- Sentence 1 -------------------

 Machine learning, a subset of artificial intelligence, enables users to learn from  historical data to achieve a desired outcome. 

Tokens are: 
>> ['Machine', 'learning', ',', 'a', 'subset', 'of', 'artificial', 'intelligence', ',', 'enables', 'users', 'to', 'learn', 'from', 'historical', 'data', 'to', 'achieve', 'a', 'desired', 'outcome', '.'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('learning', 'NOUN'), (',', 'PUNCT'), ('a', 'DET'), ('subset', 'NOUN'), ('of', 'ADP'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), (',', 'PUNCT'), ('enables', 'VERB'), ('users', 'NOUN'), ('to', 'PART'), ('learn', 'VERB'), ('from', 'ADP'), ('historical', 'ADJ'), ('data', 'NOUN'), ('to', 'PART'), ('achieve', 'VERB'), ('a', 'DET'), ('desired', 'VERB'), ('outcome', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('learning', 'NN'), (',', ','), ('a', 'DT'), ('subset', 'NN'), ('of', 'IN'), ('artificial', 'JJ'), ('intelligence', 'NN'), (',', ','), ('enables', 'VBZ'), ('users', 'NNS'), ('to', 'TO'), ('learn', 'VB'), ('from', 'IN'), ('historical', 'JJ'), ('data', 'NNS'), ('to', 'TO'), ('achieve', 'VB'), ('a', 'DT'), ('desired', 'VBN'), ('outcome', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('learning', 'learning'), (',', ','), ('a', 'a'), ('subset', 'subset'), ('of', 'of'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), (',', ','), ('enables', 'enable'), ('users', 'user'), ('to', 'to'), ('learn', 'learn'), ('from', 'from'), ('historical', 'historical'), ('data', 'datum'), ('to', 'to'), ('achieve', 'achieve'), ('a', 'a'), ('desired', 'desire'), ('outcome', 'outcome'), ('.', '.')] 

 Dependency tags are: 
>> [(('Machine', 'learning'), 'compound'), (('learning', 'enables'), 'nsubj'), ((',', 'subset'), 'punct'), (('a', 'subset'), 'det'), (('subset', 'learning'), 'appos'), (('of', 'intelligence'), 'case'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'subset'), 'nmod'), ((',', 'learning'), 'punct'), (('enables', 'root'), 'root'), (('users', 'enables'), 'obj'), (('to', 'learn'), 'mark'), (('learn', 'enables'), 'xcomp'), (('from', 'data'), 'case'), (('historical', 'data'), 'amod'), (('data', 'learn'), 'obl'), (('to', 'achieve'), 'mark'), (('achieve', 'learn'), 'advcl'), (('a', 'outcome'), 'det'), (('desired', 'outcome'), 'amod'), (('outcome', 'achieve'), 'obj'), (('.', 'enables'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 It powers targeted ads, personalized  content, song recommendations, predictive maintenance activities, virtual  assistants and more. 

Tokens are: 
>> ['It', 'powers', 'targeted', 'ads', ',', 'personalized', 'content', ',', 'song', 'recommendations', ',', 'predictive', 'maintenance', 'activities', ',', 'virtual', 'assistants', 'and', 'more', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('powers', 'VERB'), ('targeted', 'VERB'), ('ads', 'NOUN'), (',', 'PUNCT'), ('personalized', 'VERB'), ('content', 'NOUN'), (',', 'PUNCT'), ('song', 'NOUN'), ('recommendations', 'NOUN'), (',', 'PUNCT'), ('predictive', 'ADJ'), ('maintenance', 'NOUN'), ('activities', 'NOUN'), (',', 'PUNCT'), ('virtual', 'ADJ'), ('assistants', 'NOUN'), ('and', 'CCONJ'), ('more', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('powers', 'VBZ'), ('targeted', 'VBN'), ('ads', 'NNS'), (',', ','), ('personalized', 'VBN'), ('content', 'NN'), (',', ','), ('song', 'NN'), ('recommendations', 'NNS'), (',', ','), ('predictive', 'JJ'), ('maintenance', 'NN'), ('activities', 'NNS'), (',', ','), ('virtual', 'JJ'), ('assistants', 'NNS'), ('and', 'CC'), ('more', 'RBR'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('powers', 'power'), ('targeted', 'target'), ('ads', 'ad'), (',', ','), ('personalized', 'personalize'), ('content', 'content'), (',', ','), ('song', 'song'), ('recommendations', 'recommendation'), (',', ','), ('predictive', 'predictive'), ('maintenance', 'maintenance'), ('activities', 'activity'), (',', ','), ('virtual', 'virtual'), ('assistants', 'assistant'), ('and', 'and'), ('more', 'more'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'powers'), 'nsubj'), (('powers', 'root'), 'root'), (('targeted', 'ads'), 'amod'), (('ads', 'powers'), 'obj'), ((',', 'content'), 'punct'), (('personalized', 'content'), 'amod'), (('content', 'ads'), 'conj'), ((',', 'recommendations'), 'punct'), (('song', 'recommendations'), 'compound'), (('recommendations', 'ads'), 'conj'), ((',', 'activities'), 'punct'), (('predictive', 'activities'), 'amod'), (('maintenance', 'activities'), 'compound'), (('activities', 'ads'), 'conj'), ((',', 'assistants'), 'punct'), (('virtual', 'assistants'), 'amod'), (('assistants', 'ads'), 'conj'), (('and', 'more'), 'cc'), (('more', 'ads'), 'conj'), (('.', 'powers'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 32 =================================

Machine learning can be broken down into two key phases, learning and predicting.  In the learning phase, certain statistical techniques or algorithms are applied to  historical data and/or previous business outcomes to generate a machine learning  model. A model can be thought of as a set of rules or instructions, such as steps in  a recipe, that one must follow to make a business decision.  


------------------- Sentence 1 -------------------

 Machine learning can be broken down into two key phases, learning and predicting. 

Tokens are: 
>> ['Machine', 'learning', 'can', 'be', 'broken', 'down', 'into', 'two', 'key', 'phases', ',', 'learning', 'and', 'predicting', '.'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('learning', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('broken', 'VERB'), ('down', 'ADP'), ('into', 'ADP'), ('two', 'NUM'), ('key', 'ADJ'), ('phases', 'NOUN'), (',', 'PUNCT'), ('learning', 'VERB'), ('and', 'CCONJ'), ('predicting', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('learning', 'NN'), ('can', 'MD'), ('be', 'VB'), ('broken', 'VBN'), ('down', 'RP'), ('into', 'IN'), ('two', 'CD'), ('key', 'JJ'), ('phases', 'NNS'), (',', ','), ('learning', 'VBG'), ('and', 'CC'), ('predicting', 'VBG'), ('.', '.')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('learning', 'learning'), ('can', 'can'), ('be', 'be'), ('broken', 'break'), ('down', 'down'), ('into', 'into'), ('two', 'two'), ('key', 'key'), ('phases', 'phase'), (',', ','), ('learning', 'learn'), ('and', 'and'), ('predicting', 'predict'), ('.', '.')] 

 Dependency tags are: 
>> [(('Machine', 'learning'), 'compound'), (('learning', 'broken'), 'nsubj:pass'), (('can', 'broken'), 'aux'), (('be', 'broken'), 'aux:pass'), (('broken', 'root'), 'root'), (('down', 'broken'), 'compound:prt'), (('into', 'phases'), 'case'), (('two', 'phases'), 'nummod'), (('key', 'phases'), 'amod'), (('phases', 'broken'), 'obl'), ((',', 'learning'), 'punct'), (('learning', 'broken'), 'advcl'), (('and', 'predicting'), 'cc'), (('predicting', 'learning'), 'conj'), (('.', 'broken'), 'punct')]

 Named Entites are: 
>> [('two', 'CARDINAL')]

------------------- Sentence 2 -------------------

 In the learning phase, certain statistical techniques or algorithms are applied to  historical data and/or previous business outcomes to generate a machine learning  model. 

Tokens are: 
>> ['In', 'the', 'learning', 'phase', ',', 'certain', 'statistical', 'techniques', 'or', 'algorithms', 'are', 'applied', 'to', 'historical', 'data', 'and', '/', 'or', 'previous', 'business', 'outcomes', 'to', 'generate', 'a', 'machine', 'learning', 'model', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('the', 'DET'), ('learning', 'NOUN'), ('phase', 'NOUN'), (',', 'PUNCT'), ('certain', 'ADJ'), ('statistical', 'ADJ'), ('techniques', 'NOUN'), ('or', 'CCONJ'), ('algorithms', 'NOUN'), ('are', 'AUX'), ('applied', 'VERB'), ('to', 'ADP'), ('historical', 'ADJ'), ('data', 'NOUN'), ('and', 'CCONJ'), ('/', 'PUNCT'), ('or', 'CCONJ'), ('previous', 'ADJ'), ('business', 'NOUN'), ('outcomes', 'NOUN'), ('to', 'PART'), ('generate', 'VERB'), ('a', 'DET'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('model', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('the', 'DT'), ('learning', 'NN'), ('phase', 'NN'), (',', ','), ('certain', 'JJ'), ('statistical', 'JJ'), ('techniques', 'NNS'), ('or', 'CC'), ('algorithms', 'NNS'), ('are', 'VBP'), ('applied', 'VBN'), ('to', 'IN'), ('historical', 'JJ'), ('data', 'NNS'), ('and', 'CC'), ('/', ','), ('or', 'CC'), ('previous', 'JJ'), ('business', 'NN'), ('outcomes', 'NNS'), ('to', 'TO'), ('generate', 'VB'), ('a', 'DT'), ('machine', 'NN'), ('learning', 'NN'), ('model', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('the', 'the'), ('learning', 'learning'), ('phase', 'phase'), (',', ','), ('certain', 'certain'), ('statistical', 'statistical'), ('techniques', 'technique'), ('or', 'or'), ('algorithms', 'algorithm'), ('are', 'be'), ('applied', 'apply'), ('to', 'to'), ('historical', 'historical'), ('data', 'datum'), ('and', 'and'), ('/', '/'), ('or', 'or'), ('previous', 'previous'), ('business', 'business'), ('outcomes', 'outcome'), ('to', 'to'), ('generate', 'generate'), ('a', 'a'), ('machine', 'machine'), ('learning', 'learning'), ('model', 'model'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'phase'), 'case'), (('the', 'phase'), 'det'), (('learning', 'phase'), 'compound'), (('phase', 'applied'), 'obl'), ((',', 'applied'), 'punct'), (('certain', 'techniques'), 'amod'), (('statistical', 'techniques'), 'amod'), (('techniques', 'applied'), 'nsubj:pass'), (('or', 'algorithms'), 'cc'), (('algorithms', 'techniques'), 'conj'), (('are', 'applied'), 'aux:pass'), (('applied', 'root'), 'root'), (('to', 'data'), 'case'), (('historical', 'data'), 'amod'), (('data', 'applied'), 'obl'), (('and', 'outcomes'), 'cc'), (('/', 'or'), 'punct'), (('or', 'previous'), 'cc'), (('previous', 'outcomes'), 'amod'), (('business', 'outcomes'), 'compound'), (('outcomes', 'data'), 'conj'), (('to', 'generate'), 'mark'), (('generate', 'applied'), 'advcl'), (('a', 'model'), 'det'), (('machine', 'model'), 'compound'), (('learning', 'model'), 'compound'), (('model', 'generate'), 'obj'), (('.', 'applied'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 A model can be thought of as a set of rules or instructions, such as steps in  a recipe, that one must follow to make a business decision. 

Tokens are: 
>> ['A', 'model', 'can', 'be', 'thought', 'of', 'as', 'a', 'set', 'of', 'rules', 'or', 'instructions', ',', 'such', 'as', 'steps', 'in', 'a', 'recipe', ',', 'that', 'one', 'must', 'follow', 'to', 'make', 'a', 'business', 'decision', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('model', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('thought', 'VERB'), ('of', 'ADP'), ('as', 'ADP'), ('a', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('rules', 'NOUN'), ('or', 'CCONJ'), ('instructions', 'NOUN'), (',', 'PUNCT'), ('such', 'ADJ'), ('as', 'ADP'), ('steps', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('recipe', 'NOUN'), (',', 'PUNCT'), ('that', 'SCONJ'), ('one', 'PRON'), ('must', 'AUX'), ('follow', 'VERB'), ('to', 'PART'), ('make', 'VERB'), ('a', 'DET'), ('business', 'NOUN'), ('decision', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('model', 'NN'), ('can', 'MD'), ('be', 'VB'), ('thought', 'VBN'), ('of', 'IN'), ('as', 'IN'), ('a', 'DT'), ('set', 'NN'), ('of', 'IN'), ('rules', 'NNS'), ('or', 'CC'), ('instructions', 'NNS'), (',', ','), ('such', 'JJ'), ('as', 'IN'), ('steps', 'NNS'), ('in', 'IN'), ('a', 'DT'), ('recipe', 'NN'), (',', ','), ('that', 'IN'), ('one', 'PRP'), ('must', 'MD'), ('follow', 'VB'), ('to', 'TO'), ('make', 'VB'), ('a', 'DT'), ('business', 'NN'), ('decision', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('model', 'model'), ('can', 'can'), ('be', 'be'), ('thought', 'think'), ('of', 'of'), ('as', 'as'), ('a', 'a'), ('set', 'set'), ('of', 'of'), ('rules', 'rule'), ('or', 'or'), ('instructions', 'instruction'), (',', ','), ('such', 'such'), ('as', 'as'), ('steps', 'step'), ('in', 'in'), ('a', 'a'), ('recipe', 'recipe'), (',', ','), ('that', 'that'), ('one', 'one'), ('must', 'must'), ('follow', 'follow'), ('to', 'to'), ('make', 'make'), ('a', 'a'), ('business', 'business'), ('decision', 'decision'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'model'), 'det'), (('model', 'thought'), 'nsubj:pass'), (('can', 'thought'), 'aux'), (('be', 'thought'), 'aux:pass'), (('thought', 'root'), 'root'), (('of', 'thought'), 'obl'), (('as', 'set'), 'case'), (('a', 'set'), 'det'), (('set', 'thought'), 'obl'), (('of', 'rules'), 'case'), (('rules', 'set'), 'nmod'), (('or', 'instructions'), 'cc'), (('instructions', 'rules'), 'conj'), ((',', 'steps'), 'punct'), (('such', 'steps'), 'case'), (('as', 'such'), 'fixed'), (('steps', 'set'), 'nmod'), (('in', 'recipe'), 'case'), (('a', 'recipe'), 'det'), (('recipe', 'steps'), 'nmod'), ((',', 'follow'), 'punct'), (('that', 'follow'), 'mark'), (('one', 'follow'), 'nsubj'), (('must', 'follow'), 'aux'), (('follow', 'thought'), 'advcl'), (('to', 'make'), 'mark'), (('make', 'follow'), 'xcomp'), (('a', 'decision'), 'det'), (('business', 'decision'), 'compound'), (('decision', 'make'), 'obj'), (('.', 'thought'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 33 =================================

For example, in order to approve a loan application, a loan officer will consider  income, age, net worth and many other factors before making a final decision.  Each attribute of the application is a rule or factor that the officer must evaluate  to approve or reject the loan. Machine learning techniques follow a similar  methodology, comparing various attributes, historical decisions and the outcome  of similar applicants to estimate the credit worthiness of the new applicant.  


------------------- Sentence 1 -------------------

 For example, in order to approve a loan application, a loan officer will consider  income, age, net worth and many other factors before making a final decision. 

Tokens are: 
>> ['For', 'example', ',', 'in', 'order', 'to', 'approve', 'a', 'loan', 'application', ',', 'a', 'loan', 'officer', 'will', 'consider', 'income', ',', 'age', ',', 'net', 'worth', 'and', 'many', 'other', 'factors', 'before', 'making', 'a', 'final', 'decision', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('in', 'ADP'), ('order', 'NOUN'), ('to', 'PART'), ('approve', 'VERB'), ('a', 'DET'), ('loan', 'NOUN'), ('application', 'NOUN'), (',', 'PUNCT'), ('a', 'DET'), ('loan', 'NOUN'), ('officer', 'NOUN'), ('will', 'AUX'), ('consider', 'VERB'), ('income', 'NOUN'), (',', 'PUNCT'), ('age', 'NOUN'), (',', 'PUNCT'), ('net', 'NOUN'), ('worth', 'ADJ'), ('and', 'CCONJ'), ('many', 'ADJ'), ('other', 'ADJ'), ('factors', 'NOUN'), ('before', 'SCONJ'), ('making', 'VERB'), ('a', 'DET'), ('final', 'ADJ'), ('decision', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('example', 'NN'), (',', ','), ('in', 'IN'), ('order', 'NN'), ('to', 'TO'), ('approve', 'VB'), ('a', 'DT'), ('loan', 'NN'), ('application', 'NN'), (',', ','), ('a', 'DT'), ('loan', 'NN'), ('officer', 'NN'), ('will', 'MD'), ('consider', 'VB'), ('income', 'NN'), (',', ','), ('age', 'NN'), (',', ','), ('net', 'NN'), ('worth', 'JJ'), ('and', 'CC'), ('many', 'JJ'), ('other', 'JJ'), ('factors', 'NNS'), ('before', 'IN'), ('making', 'VBG'), ('a', 'DT'), ('final', 'JJ'), ('decision', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('example', 'example'), (',', ','), ('in', 'in'), ('order', 'order'), ('to', 'to'), ('approve', 'approve'), ('a', 'a'), ('loan', 'loan'), ('application', 'application'), (',', ','), ('a', 'a'), ('loan', 'loan'), ('officer', 'officer'), ('will', 'will'), ('consider', 'consider'), ('income', 'income'), (',', ','), ('age', 'age'), (',', ','), ('net', 'net'), ('worth', 'worth'), ('and', 'and'), ('many', 'many'), ('other', 'other'), ('factors', 'factor'), ('before', 'before'), ('making', 'make'), ('a', 'a'), ('final', 'final'), ('decision', 'decision'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'example'), 'case'), (('example', 'consider'), 'obl'), ((',', 'consider'), 'punct'), (('in', 'approve'), 'mark'), (('order', 'in'), 'fixed'), (('to', 'approve'), 'mark'), (('approve', 'consider'), 'advcl'), (('a', 'application'), 'det'), (('loan', 'application'), 'compound'), (('application', 'approve'), 'obj'), ((',', 'consider'), 'punct'), (('a', 'officer'), 'det'), (('loan', 'officer'), 'compound'), (('officer', 'consider'), 'nsubj'), (('will', 'consider'), 'aux'), (('consider', 'root'), 'root'), (('income', 'consider'), 'obj'), ((',', 'age'), 'punct'), (('age', 'income'), 'conj'), ((',', 'net'), 'punct'), (('net', 'income'), 'conj'), (('worth', 'income'), 'amod'), (('and', 'factors'), 'cc'), (('many', 'factors'), 'amod'), (('other', 'factors'), 'amod'), (('factors', 'income'), 'conj'), (('before', 'making'), 'mark'), (('making', 'factors'), 'acl'), (('a', 'decision'), 'det'), (('final', 'decision'), 'amod'), (('decision', 'making'), 'obj'), (('.', 'consider'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Each attribute of the application is a rule or factor that the officer must evaluate  to approve or reject the loan. 

Tokens are: 
>> ['Each', 'attribute', 'of', 'the', 'application', 'is', 'a', 'rule', 'or', 'factor', 'that', 'the', 'officer', 'must', 'evaluate', 'to', 'approve', 'or', 'reject', 'the', 'loan', '.'] 

 UPOS tags are: 
>> [('Each', 'DET'), ('attribute', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('application', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('rule', 'NOUN'), ('or', 'CCONJ'), ('factor', 'NOUN'), ('that', 'SCONJ'), ('the', 'DET'), ('officer', 'NOUN'), ('must', 'AUX'), ('evaluate', 'VERB'), ('to', 'PART'), ('approve', 'VERB'), ('or', 'CCONJ'), ('reject', 'VERB'), ('the', 'DET'), ('loan', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Each', 'DT'), ('attribute', 'NN'), ('of', 'IN'), ('the', 'DT'), ('application', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('rule', 'NN'), ('or', 'CC'), ('factor', 'NN'), ('that', 'IN'), ('the', 'DT'), ('officer', 'NN'), ('must', 'MD'), ('evaluate', 'VB'), ('to', 'TO'), ('approve', 'VB'), ('or', 'CC'), ('reject', 'VB'), ('the', 'DT'), ('loan', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Each', 'each'), ('attribute', 'attribute'), ('of', 'of'), ('the', 'the'), ('application', 'application'), ('is', 'be'), ('a', 'a'), ('rule', 'rule'), ('or', 'or'), ('factor', 'factor'), ('that', 'that'), ('the', 'the'), ('officer', 'officer'), ('must', 'must'), ('evaluate', 'evaluate'), ('to', 'to'), ('approve', 'approve'), ('or', 'or'), ('reject', 'reject'), ('the', 'the'), ('loan', 'loan'), ('.', '.')] 

 Dependency tags are: 
>> [(('Each', 'attribute'), 'det'), (('attribute', 'rule'), 'nsubj'), (('of', 'application'), 'case'), (('the', 'application'), 'det'), (('application', 'attribute'), 'nmod'), (('is', 'rule'), 'cop'), (('a', 'rule'), 'det'), (('rule', 'root'), 'root'), (('or', 'factor'), 'cc'), (('factor', 'rule'), 'conj'), (('that', 'evaluate'), 'mark'), (('the', 'officer'), 'det'), (('officer', 'evaluate'), 'nsubj'), (('must', 'evaluate'), 'aux'), (('evaluate', 'factor'), 'acl'), (('to', 'approve'), 'mark'), (('approve', 'evaluate'), 'xcomp'), (('or', 'reject'), 'cc'), (('reject', 'approve'), 'conj'), (('the', 'loan'), 'det'), (('loan', 'approve'), 'obj'), (('.', 'rule'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Machine learning techniques follow a similar  methodology, comparing various attributes, historical decisions and the outcome  of similar applicants to estimate the credit worthiness of the new applicant. 

Tokens are: 
>> ['Machine', 'learning', 'techniques', 'follow', 'a', 'similar', 'methodology', ',', 'comparing', 'various', 'attributes', ',', 'historical', 'decisions', 'and', 'the', 'outcome', 'of', 'similar', 'applicants', 'to', 'estimate', 'the', 'credit', 'worthiness', 'of', 'the', 'new', 'applicant', '.'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('learning', 'NOUN'), ('techniques', 'NOUN'), ('follow', 'VERB'), ('a', 'DET'), ('similar', 'ADJ'), ('methodology', 'NOUN'), (',', 'PUNCT'), ('comparing', 'VERB'), ('various', 'ADJ'), ('attributes', 'NOUN'), (',', 'PUNCT'), ('historical', 'ADJ'), ('decisions', 'NOUN'), ('and', 'CCONJ'), ('the', 'DET'), ('outcome', 'NOUN'), ('of', 'ADP'), ('similar', 'ADJ'), ('applicants', 'NOUN'), ('to', 'PART'), ('estimate', 'VERB'), ('the', 'DET'), ('credit', 'NOUN'), ('worthiness', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('new', 'ADJ'), ('applicant', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('learning', 'NN'), ('techniques', 'NNS'), ('follow', 'VBP'), ('a', 'DT'), ('similar', 'JJ'), ('methodology', 'NN'), (',', ','), ('comparing', 'VBG'), ('various', 'JJ'), ('attributes', 'NNS'), (',', ','), ('historical', 'JJ'), ('decisions', 'NNS'), ('and', 'CC'), ('the', 'DT'), ('outcome', 'NN'), ('of', 'IN'), ('similar', 'JJ'), ('applicants', 'NNS'), ('to', 'TO'), ('estimate', 'VB'), ('the', 'DT'), ('credit', 'NN'), ('worthiness', 'NN'), ('of', 'IN'), ('the', 'DT'), ('new', 'JJ'), ('applicant', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('learning', 'learning'), ('techniques', 'technique'), ('follow', 'follow'), ('a', 'a'), ('similar', 'similar'), ('methodology', 'methodology'), (',', ','), ('comparing', 'compare'), ('various', 'various'), ('attributes', 'attribute'), (',', ','), ('historical', 'historical'), ('decisions', 'decision'), ('and', 'and'), ('the', 'the'), ('outcome', 'outcome'), ('of', 'of'), ('similar', 'similar'), ('applicants', 'applicant'), ('to', 'to'), ('estimate', 'estimate'), ('the', 'the'), ('credit', 'credit'), ('worthiness', 'worthiness'), ('of', 'of'), ('the', 'the'), ('new', 'new'), ('applicant', 'applicant'), ('.', '.')] 

 Dependency tags are: 
>> [(('Machine', 'techniques'), 'compound'), (('learning', 'techniques'), 'compound'), (('techniques', 'follow'), 'nsubj'), (('follow', 'root'), 'root'), (('a', 'methodology'), 'det'), (('similar', 'methodology'), 'amod'), (('methodology', 'follow'), 'obj'), ((',', 'comparing'), 'punct'), (('comparing', 'follow'), 'advcl'), (('various', 'attributes'), 'amod'), (('attributes', 'comparing'), 'obj'), ((',', 'decisions'), 'punct'), (('historical', 'decisions'), 'amod'), (('decisions', 'attributes'), 'conj'), (('and', 'outcome'), 'cc'), (('the', 'outcome'), 'det'), (('outcome', 'attributes'), 'conj'), (('of', 'applicants'), 'case'), (('similar', 'applicants'), 'amod'), (('applicants', 'outcome'), 'nmod'), (('to', 'estimate'), 'mark'), (('estimate', 'outcome'), 'acl'), (('the', 'worthiness'), 'det'), (('credit', 'worthiness'), 'compound'), (('worthiness', 'estimate'), 'obj'), (('of', 'applicant'), 'case'), (('the', 'applicant'), 'det'), (('new', 'applicant'), 'amod'), (('applicant', 'worthiness'), 'nmod'), (('.', 'follow'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 34 =================================

Just as a human goes  through the process of  driver training to become  proficient, a computer  learns from experience or,  more specifically, data.  


------------------- Sentence 1 -------------------

 Just as a human goes  through the process of  driver training to become  proficient, a computer  learns from experience or,  more specifically, data. 

Tokens are: 
>> ['Just', 'as', 'a', 'human', 'goes', 'through', 'the', 'process', 'of', 'driver', 'training', 'to', 'become', 'proficient', ',', 'a', 'computer', 'learns', 'from', 'experience', 'or', ',', 'more', 'specifically', ',', 'data', '.'] 

 UPOS tags are: 
>> [('Just', 'ADV'), ('as', 'SCONJ'), ('a', 'DET'), ('human', 'NOUN'), ('goes', 'VERB'), ('through', 'ADP'), ('the', 'DET'), ('process', 'NOUN'), ('of', 'ADP'), ('driver', 'NOUN'), ('training', 'NOUN'), ('to', 'PART'), ('become', 'VERB'), ('proficient', 'ADJ'), (',', 'PUNCT'), ('a', 'DET'), ('computer', 'NOUN'), ('learns', 'VERB'), ('from', 'ADP'), ('experience', 'NOUN'), ('or', 'CCONJ'), (',', 'PUNCT'), ('more', 'ADV'), ('specifically', 'ADV'), (',', 'PUNCT'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Just', 'RB'), ('as', 'IN'), ('a', 'DT'), ('human', 'NN'), ('goes', 'VBZ'), ('through', 'IN'), ('the', 'DT'), ('process', 'NN'), ('of', 'IN'), ('driver', 'NN'), ('training', 'NN'), ('to', 'TO'), ('become', 'VB'), ('proficient', 'JJ'), (',', ','), ('a', 'DT'), ('computer', 'NN'), ('learns', 'VBZ'), ('from', 'IN'), ('experience', 'NN'), ('or', 'CC'), (',', ','), ('more', 'RBR'), ('specifically', 'RB'), (',', ','), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Just', 'just'), ('as', 'as'), ('a', 'a'), ('human', 'human'), ('goes', 'go'), ('through', 'through'), ('the', 'the'), ('process', 'process'), ('of', 'of'), ('driver', 'driver'), ('training', 'training'), ('to', 'to'), ('become', 'become'), ('proficient', 'proficient'), (',', ','), ('a', 'a'), ('computer', 'computer'), ('learns', 'learn'), ('from', 'from'), ('experience', 'experience'), ('or', 'or'), (',', ','), ('more', 'more'), ('specifically', 'specifically'), (',', ','), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('Just', 'goes'), 'advmod'), (('as', 'goes'), 'mark'), (('a', 'human'), 'det'), (('human', 'goes'), 'nsubj'), (('goes', 'learns'), 'advcl'), (('through', 'process'), 'case'), (('the', 'process'), 'det'), (('process', 'goes'), 'obl'), (('of', 'training'), 'case'), (('driver', 'training'), 'compound'), (('training', 'process'), 'nmod'), (('to', 'become'), 'mark'), (('become', 'goes'), 'advcl'), (('proficient', 'become'), 'xcomp'), ((',', 'learns'), 'punct'), (('a', 'computer'), 'det'), (('computer', 'learns'), 'nsubj'), (('learns', 'root'), 'root'), (('from', 'experience'), 'case'), (('experience', 'learns'), 'obl'), (('or', 'data'), 'cc'), ((',', 'specifically'), 'punct'), (('more', 'specifically'), 'advmod'), (('specifically', 'data'), 'advmod'), ((',', 'data'), 'punct'), (('data', 'experience'), 'conj'), (('.', 'learns'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 35 =================================

Machine learning, a subset  of artificial intelligence,  enables users to learn  from historical data to  achieve a desired outcome.  It powers targeted ads,  personalized content,  song recommendations,  predictive maintenance  activities, virtual assistants  and more.  


------------------- Sentence 1 -------------------

 Machine learning, a subset  of artificial intelligence,  enables users to learn  from historical data to  achieve a desired outcome. 

Tokens are: 
>> ['Machine', 'learning', ',', 'a', 'subset', 'of', 'artificial', 'intelligence', ',', 'enables', 'users', 'to', 'learn', 'from', 'historical', 'data', 'to', 'achieve', 'a', 'desired', 'outcome', '.'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('learning', 'NOUN'), (',', 'PUNCT'), ('a', 'DET'), ('subset', 'NOUN'), ('of', 'ADP'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), (',', 'PUNCT'), ('enables', 'VERB'), ('users', 'NOUN'), ('to', 'PART'), ('learn', 'VERB'), ('from', 'ADP'), ('historical', 'ADJ'), ('data', 'NOUN'), ('to', 'PART'), ('achieve', 'VERB'), ('a', 'DET'), ('desired', 'VERB'), ('outcome', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('learning', 'NN'), (',', ','), ('a', 'DT'), ('subset', 'NN'), ('of', 'IN'), ('artificial', 'JJ'), ('intelligence', 'NN'), (',', ','), ('enables', 'VBZ'), ('users', 'NNS'), ('to', 'TO'), ('learn', 'VB'), ('from', 'IN'), ('historical', 'JJ'), ('data', 'NNS'), ('to', 'TO'), ('achieve', 'VB'), ('a', 'DT'), ('desired', 'VBN'), ('outcome', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('learning', 'learning'), (',', ','), ('a', 'a'), ('subset', 'subset'), ('of', 'of'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), (',', ','), ('enables', 'enable'), ('users', 'user'), ('to', 'to'), ('learn', 'learn'), ('from', 'from'), ('historical', 'historical'), ('data', 'datum'), ('to', 'to'), ('achieve', 'achieve'), ('a', 'a'), ('desired', 'desire'), ('outcome', 'outcome'), ('.', '.')] 

 Dependency tags are: 
>> [(('Machine', 'learning'), 'compound'), (('learning', 'enables'), 'nsubj'), ((',', 'subset'), 'punct'), (('a', 'subset'), 'det'), (('subset', 'learning'), 'appos'), (('of', 'intelligence'), 'case'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'subset'), 'nmod'), ((',', 'learning'), 'punct'), (('enables', 'root'), 'root'), (('users', 'enables'), 'obj'), (('to', 'learn'), 'mark'), (('learn', 'enables'), 'xcomp'), (('from', 'data'), 'case'), (('historical', 'data'), 'amod'), (('data', 'learn'), 'obl'), (('to', 'achieve'), 'mark'), (('achieve', 'learn'), 'advcl'), (('a', 'outcome'), 'det'), (('desired', 'outcome'), 'amod'), (('outcome', 'achieve'), 'obj'), (('.', 'enables'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 It powers targeted ads,  personalized content,  song recommendations,  predictive maintenance  activities, virtual assistants  and more. 

Tokens are: 
>> ['It', 'powers', 'targeted', 'ads', ',', 'personalized', 'content', ',', 'song', 'recommendations', ',', 'predictive', 'maintenance', 'activities', ',', 'virtual', 'assistants', 'and', 'more', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('powers', 'VERB'), ('targeted', 'VERB'), ('ads', 'NOUN'), (',', 'PUNCT'), ('personalized', 'VERB'), ('content', 'NOUN'), (',', 'PUNCT'), ('song', 'NOUN'), ('recommendations', 'NOUN'), (',', 'PUNCT'), ('predictive', 'ADJ'), ('maintenance', 'NOUN'), ('activities', 'NOUN'), (',', 'PUNCT'), ('virtual', 'ADJ'), ('assistants', 'NOUN'), ('and', 'CCONJ'), ('more', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('powers', 'VBZ'), ('targeted', 'VBN'), ('ads', 'NNS'), (',', ','), ('personalized', 'VBN'), ('content', 'NN'), (',', ','), ('song', 'NN'), ('recommendations', 'NNS'), (',', ','), ('predictive', 'JJ'), ('maintenance', 'NN'), ('activities', 'NNS'), (',', ','), ('virtual', 'JJ'), ('assistants', 'NNS'), ('and', 'CC'), ('more', 'RBR'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('powers', 'power'), ('targeted', 'target'), ('ads', 'ad'), (',', ','), ('personalized', 'personalize'), ('content', 'content'), (',', ','), ('song', 'song'), ('recommendations', 'recommendation'), (',', ','), ('predictive', 'predictive'), ('maintenance', 'maintenance'), ('activities', 'activity'), (',', ','), ('virtual', 'virtual'), ('assistants', 'assistant'), ('and', 'and'), ('more', 'more'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'powers'), 'nsubj'), (('powers', 'root'), 'root'), (('targeted', 'ads'), 'amod'), (('ads', 'powers'), 'obj'), ((',', 'content'), 'punct'), (('personalized', 'content'), 'amod'), (('content', 'ads'), 'conj'), ((',', 'recommendations'), 'punct'), (('song', 'recommendations'), 'compound'), (('recommendations', 'ads'), 'conj'), ((',', 'activities'), 'punct'), (('predictive', 'activities'), 'amod'), (('maintenance', 'activities'), 'compound'), (('activities', 'ads'), 'conj'), ((',', 'assistants'), 'punct'), (('virtual', 'assistants'), 'amod'), (('assistants', 'ads'), 'conj'), (('and', 'more'), 'cc'), (('more', 'ads'), 'conj'), (('.', 'powers'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 36 =================================

Deep learning Machine learning Artificial intelligence 


------------------- Sentence 1 -------------------

 Deep learning Machine learning Artificial intelligence 

Tokens are: 
>> ['Deep', 'learning', 'Machine', 'learning', 'Artificial', 'intelligence'] 

 UPOS tags are: 
>> [('Deep', 'ADJ'), ('learning', 'NOUN'), ('Machine', 'NOUN'), ('learning', 'VERB'), ('Artificial', 'ADJ'), ('intelligence', 'NOUN')] 

 XPOS tags are: 
>> [('Deep', 'JJ'), ('learning', 'NN'), ('Machine', 'NN'), ('learning', 'VBG'), ('Artificial', 'JJ'), ('intelligence', 'NN')] 

 Lemmas are: 
>> [('Deep', 'deep'), ('learning', 'learning'), ('Machine', 'Machine'), ('learning', 'learn'), ('Artificial', 'Artificial'), ('intelligence', 'intelligence')] 

 Dependency tags are: 
>> [(('Deep', 'Machine'), 'amod'), (('learning', 'Machine'), 'compound'), (('Machine', 'root'), 'root'), (('learning', 'Machine'), 'acl'), (('Artificial', 'intelligence'), 'amod'), (('intelligence', 'learning'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 37 =================================

Popular and powerful  set of machine learning  


------------------- Sentence 1 -------------------

 Popular and powerful  set of machine learning 

Tokens are: 
>> ['Popular', 'and', 'powerful', 'set', 'of', 'machine', 'learning'] 

 UPOS tags are: 
>> [('Popular', 'ADJ'), ('and', 'CCONJ'), ('powerful', 'ADJ'), ('set', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN')] 

 XPOS tags are: 
>> [('Popular', 'JJ'), ('and', 'CC'), ('powerful', 'JJ'), ('set', 'NN'), ('of', 'IN'), ('machine', 'NN'), ('learning', 'NN')] 

 Lemmas are: 
>> [('Popular', 'popular'), ('and', 'and'), ('powerful', 'powerful'), ('set', 'set'), ('of', 'of'), ('machine', 'machine'), ('learning', 'learning')] 

 Dependency tags are: 
>> [(('Popular', 'set'), 'amod'), (('and', 'powerful'), 'cc'), (('powerful', 'Popular'), 'conj'), (('set', 'root'), 'root'), (('of', 'learning'), 'case'), (('machine', 'learning'), 'compound'), (('learning', 'set'), 'nmod')]

 Named Entites are: 
>> []

================================ Paragraph 38 =================================

techniques, which mimic  the brain’s neuron  


------------------- Sentence 1 -------------------

 techniques, which mimic  the brain’s neuron 

Tokens are: 
>> ['techniques', ',', 'which', 'mimic', 'the', 'brain', '’s', 'neuron'] 

 UPOS tags are: 
>> [('techniques', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('mimic', 'VERB'), ('the', 'DET'), ('brain', 'NOUN'), ('’s', 'PART'), ('neuron', 'NOUN')] 

 XPOS tags are: 
>> [('techniques', 'NNS'), (',', ','), ('which', 'WDT'), ('mimic', 'VBP'), ('the', 'DT'), ('brain', 'NN'), ('’s', 'POS'), ('neuron', 'NN')] 

 Lemmas are: 
>> [('techniques', 'technique'), (',', ','), ('which', 'which'), ('mimic', 'mimic'), ('the', 'the'), ('brain', 'brain'), ('’s', "'s"), ('neuron', 'neuron')] 

 Dependency tags are: 
>> [(('techniques', 'root'), 'root'), ((',', 'techniques'), 'punct'), (('which', 'mimic'), 'nsubj'), (('mimic', 'techniques'), 'acl:relcl'), (('the', 'brain'), 'det'), (('brain', 'neuron'), 'nmod:poss'), (('’s', 'brain'), 'case'), (('neuron', 'mimic'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 39 =================================

activities, called  neural networks. 


------------------- Sentence 1 -------------------

 activities, called  neural networks. 

Tokens are: 
>> ['activities', ',', 'called', 'neural', 'networks', '.'] 

 UPOS tags are: 
>> [('activities', 'NOUN'), (',', 'PUNCT'), ('called', 'VERB'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('activities', 'NNS'), (',', ','), ('called', 'VBN'), ('neural', 'JJ'), ('networks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('activities', 'activity'), (',', ','), ('called', 'call'), ('neural', 'neural'), ('networks', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('activities', 'root'), 'root'), ((',', 'activities'), 'punct'), (('called', 'activities'), 'acl'), (('neural', 'networks'), 'amod'), (('networks', 'called'), 'obj'), (('.', 'activities'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 40 =================================

Field of AI that learns from  historical data towards an  


------------------- Sentence 1 -------------------

 Field of AI that learns from  historical data towards an 

Tokens are: 
>> ['Field', 'of', 'AI', 'that', 'learns', 'from', 'historical', 'data', 'towards', 'an'] 

 UPOS tags are: 
>> [('Field', 'NOUN'), ('of', 'ADP'), ('AI', 'NOUN'), ('that', 'PRON'), ('learns', 'VERB'), ('from', 'ADP'), ('historical', 'ADJ'), ('data', 'NOUN'), ('towards', 'ADP'), ('an', 'DET')] 

 XPOS tags are: 
>> [('Field', 'NN'), ('of', 'IN'), ('AI', 'NN'), ('that', 'WDT'), ('learns', 'VBZ'), ('from', 'IN'), ('historical', 'JJ'), ('data', 'NNS'), ('towards', 'IN'), ('an', 'DT')] 

 Lemmas are: 
>> [('Field', 'field'), ('of', 'of'), ('AI', 'ai'), ('that', 'that'), ('learns', 'learn'), ('from', 'from'), ('historical', 'historical'), ('data', 'datum'), ('towards', 'towards'), ('an', 'a')] 

 Dependency tags are: 
>> [(('Field', 'root'), 'root'), (('of', 'AI'), 'case'), (('AI', 'Field'), 'nmod'), (('that', 'learns'), 'nsubj'), (('learns', 'AI'), 'acl:relcl'), (('from', 'data'), 'case'), (('historical', 'data'), 'amod'), (('data', 'learns'), 'obl'), (('towards', 'an'), 'case'), (('an', 'data'), 'nmod')]

 Named Entites are: 
>> []

================================ Paragraph 41 =================================

end goal/outcome. For  example, the customers  likely to default on their  


------------------- Sentence 1 -------------------

 end goal/outcome. 

Tokens are: 
>> ['end', 'goal', '/', 'outcome', '.'] 

 UPOS tags are: 
>> [('end', 'NOUN'), ('goal', 'NOUN'), ('/', 'SYM'), ('outcome', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('end', 'NN'), ('goal', 'NN'), ('/', ','), ('outcome', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('end', 'end'), ('goal', 'goal'), ('/', '/'), ('outcome', 'outcome'), ('.', '.')] 

 Dependency tags are: 
>> [(('end', 'goal'), 'compound'), (('goal', 'root'), 'root'), (('/', 'outcome'), 'cc'), (('outcome', 'goal'), 'conj'), (('.', 'outcome'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 For  example, the customers  likely to default on their 

Tokens are: 
>> ['For', 'example', ',', 'the', 'customers', 'likely', 'to', 'default', 'on', 'their'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('customers', 'NOUN'), ('likely', 'ADJ'), ('to', 'PART'), ('default', 'VERB'), ('on', 'ADP'), ('their', 'PRON')] 

 XPOS tags are: 
>> [('For', 'IN'), ('example', 'NN'), (',', ','), ('the', 'DT'), ('customers', 'NNS'), ('likely', 'JJ'), ('to', 'TO'), ('default', 'VB'), ('on', 'IN'), ('their', 'PRP$')] 

 Lemmas are: 
>> [('For', 'for'), ('example', 'example'), (',', ','), ('the', 'the'), ('customers', 'customer'), ('likely', 'likely'), ('to', 'to'), ('default', 'default'), ('on', 'on'), ('their', 'they')] 

 Dependency tags are: 
>> [(('For', 'example'), 'case'), (('example', 'likely'), 'obl'), ((',', 'likely'), 'punct'), (('the', 'customers'), 'det'), (('customers', 'likely'), 'nsubj'), (('likely', 'root'), 'root'), (('to', 'default'), 'mark'), (('default', 'likely'), 'xcomp'), (('on', 'their'), 'case'), (('their', 'default'), 'obl')]

 Named Entites are: 
>> []

================================ Paragraph 42 =================================

home loan. 


------------------- Sentence 1 -------------------

 home loan. 

Tokens are: 
>> ['home', 'loan', '.'] 

 UPOS tags are: 
>> [('home', 'NOUN'), ('loan', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('home', 'NN'), ('loan', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('home', 'home'), ('loan', 'loan'), ('.', '.')] 

 Dependency tags are: 
>> [(('home', 'loan'), 'compound'), (('loan', 'root'), 'root'), (('.', 'loan'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 43 =================================

Computing systems  capable of performing  


------------------- Sentence 1 -------------------

 Computing systems  capable of performing 

Tokens are: 
>> ['Computing', 'systems', 'capable', 'of', 'performing'] 

 UPOS tags are: 
>> [('Computing', 'NOUN'), ('systems', 'NOUN'), ('capable', 'ADJ'), ('of', 'SCONJ'), ('performing', 'VERB')] 

 XPOS tags are: 
>> [('Computing', 'NN'), ('systems', 'NNS'), ('capable', 'JJ'), ('of', 'IN'), ('performing', 'VBG')] 

 Lemmas are: 
>> [('Computing', 'Computing'), ('systems', 'system'), ('capable', 'capable'), ('of', 'of'), ('performing', 'perform')] 

 Dependency tags are: 
>> [(('Computing', 'systems'), 'compound'), (('systems', 'root'), 'root'), (('capable', 'systems'), 'amod'), (('of', 'performing'), 'mark'), (('performing', 'capable'), 'advcl')]

 Named Entites are: 
>> []

================================ Paragraph 44 =================================

tasks that humans are very  good at, such as  


------------------- Sentence 1 -------------------

 tasks that humans are very  good at, such as 

Tokens are: 
>> ['tasks', 'that', 'humans', 'are', 'very', 'good', 'at', ',', 'such', 'as'] 

 UPOS tags are: 
>> [('tasks', 'NOUN'), ('that', 'SCONJ'), ('humans', 'NOUN'), ('are', 'AUX'), ('very', 'ADV'), ('good', 'ADJ'), ('at', 'ADP'), (',', 'PUNCT'), ('such', 'ADJ'), ('as', 'ADV')] 

 XPOS tags are: 
>> [('tasks', 'NNS'), ('that', 'IN'), ('humans', 'NNS'), ('are', 'VBP'), ('very', 'RB'), ('good', 'JJ'), ('at', 'IN'), (',', ','), ('such', 'JJ'), ('as', 'RB')] 

 Lemmas are: 
>> [('tasks', 'task'), ('that', 'that'), ('humans', 'human'), ('are', 'be'), ('very', 'very'), ('good', 'good'), ('at', 'at'), (',', ','), ('such', 'such'), ('as', 'as')] 

 Dependency tags are: 
>> [(('tasks', 'root'), 'root'), (('that', 'good'), 'mark'), (('humans', 'good'), 'nsubj'), (('are', 'good'), 'cop'), (('very', 'good'), 'advmod'), (('good', 'tasks'), 'appos'), (('at', 'good'), 'obl'), ((',', 'good'), 'punct'), (('such', 'as'), 'case'), (('as', 'good'), 'obl')]

 Named Entites are: 
>> []

================================ Paragraph 45 =================================

recognizing objects,  recognizing and making  


------------------- Sentence 1 -------------------

 recognizing objects,  recognizing and making 

Tokens are: 
>> ['recognizing', 'objects', ',', 'recognizing', 'and', 'making'] 

 UPOS tags are: 
>> [('recognizing', 'VERB'), ('objects', 'NOUN'), (',', 'PUNCT'), ('recognizing', 'VERB'), ('and', 'CCONJ'), ('making', 'VERB')] 

 XPOS tags are: 
>> [('recognizing', 'VBG'), ('objects', 'NNS'), (',', ','), ('recognizing', 'VBG'), ('and', 'CC'), ('making', 'VBG')] 

 Lemmas are: 
>> [('recognizing', 'recognize'), ('objects', 'object'), (',', ','), ('recognizing', 'recognize'), ('and', 'and'), ('making', 'make')] 

 Dependency tags are: 
>> [(('recognizing', 'root'), 'root'), (('objects', 'recognizing'), 'obj'), ((',', 'recognizing'), 'punct'), (('recognizing', 'recognizing'), 'advcl'), (('and', 'making'), 'cc'), (('making', 'recognizing'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 46 =================================

sense of speech,  self-driving cars.


------------------- Sentence 1 -------------------

 sense of speech,  self-driving cars. 

Tokens are: 
>> ['sense', 'of', 'speech', ',', 'self', '-driving', 'cars', '.'] 

 UPOS tags are: 
>> [('sense', 'NOUN'), ('of', 'ADP'), ('speech', 'NOUN'), (',', 'PUNCT'), ('self', 'NOUN'), ('-driving', 'NOUN'), ('cars', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('sense', 'NN'), ('of', 'IN'), ('speech', 'NN'), (',', ','), ('self', 'NN'), ('-driving', 'NN'), ('cars', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('sense', 'sense'), ('of', 'of'), ('speech', 'speech'), (',', ','), ('self', 'self'), ('-driving', '-driving'), ('cars', 'car'), ('.', '.')] 

 Dependency tags are: 
>> [(('sense', 'root'), 'root'), (('of', 'speech'), 'case'), (('speech', 'sense'), 'nmod'), ((',', 'cars'), 'punct'), (('self', 'cars'), 'compound'), (('-driving', 'cars'), 'compound'), (('cars', 'sense'), 'conj'), (('.', 'sense'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 47 =================================

5/14Demystifying data science  


------------------- Sentence 1 -------------------

 5/14 

Tokens are: 
>> ['5/14'] 

 UPOS tags are: 
>> [('5/14', 'NUM')] 

 XPOS tags are: 
>> [('5/14', 'CD')] 

 Lemmas are: 
>> [('5/14', '5/14')] 

 Dependency tags are: 
>> [(('5/14', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Demystifying data science 

Tokens are: 
>> ['Demystifying', 'data', 'science'] 

 UPOS tags are: 
>> [('Demystifying', 'VERB'), ('data', 'NOUN'), ('science', 'NOUN')] 

 XPOS tags are: 
>> [('Demystifying', 'VBG'), ('data', 'NN'), ('science', 'NN')] 

 Lemmas are: 
>> [('Demystifying', 'demystify'), ('data', 'datum'), ('science', 'science')] 

 Dependency tags are: 
>> [(('Demystifying', 'root'), 'root'), (('data', 'science'), 'compound'), (('science', 'Demystifying'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 48 =================================

In the predicting phase, patterns identified during the learning phase are applied  to new data or business processes to score or predict the likelihood of outcomes.  Scoring outcomes enables organizations to optimize resource allocation and  decision-making activities, make more intelligent decisions and automate key  business processes at scale. Some key business questions that machine learning  techniques can help answer include: 


------------------- Sentence 1 -------------------

 In the predicting phase, patterns identified during the learning phase are applied  to new data or business processes to score or predict the likelihood of outcomes. 

Tokens are: 
>> ['In', 'the', 'predicting', 'phase', ',', 'patterns', 'identified', 'during', 'the', 'learning', 'phase', 'are', 'applied', 'to', 'new', 'data', 'or', 'business', 'processes', 'to', 'score', 'or', 'predict', 'the', 'likelihood', 'of', 'outcomes', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('the', 'DET'), ('predicting', 'VERB'), ('phase', 'NOUN'), (',', 'PUNCT'), ('patterns', 'NOUN'), ('identified', 'VERB'), ('during', 'ADP'), ('the', 'DET'), ('learning', 'NOUN'), ('phase', 'NOUN'), ('are', 'AUX'), ('applied', 'VERB'), ('to', 'ADP'), ('new', 'ADJ'), ('data', 'NOUN'), ('or', 'CCONJ'), ('business', 'NOUN'), ('processes', 'NOUN'), ('to', 'PART'), ('score', 'VERB'), ('or', 'CCONJ'), ('predict', 'VERB'), ('the', 'DET'), ('likelihood', 'NOUN'), ('of', 'ADP'), ('outcomes', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('the', 'DT'), ('predicting', 'VBG'), ('phase', 'NN'), (',', ','), ('patterns', 'NNS'), ('identified', 'VBN'), ('during', 'IN'), ('the', 'DT'), ('learning', 'NN'), ('phase', 'NN'), ('are', 'VBP'), ('applied', 'VBN'), ('to', 'IN'), ('new', 'JJ'), ('data', 'NNS'), ('or', 'CC'), ('business', 'NN'), ('processes', 'NNS'), ('to', 'TO'), ('score', 'VB'), ('or', 'CC'), ('predict', 'VB'), ('the', 'DT'), ('likelihood', 'NN'), ('of', 'IN'), ('outcomes', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('the', 'the'), ('predicting', 'predict'), ('phase', 'phase'), (',', ','), ('patterns', 'pattern'), ('identified', 'identify'), ('during', 'during'), ('the', 'the'), ('learning', 'learning'), ('phase', 'phase'), ('are', 'be'), ('applied', 'apply'), ('to', 'to'), ('new', 'new'), ('data', 'datum'), ('or', 'or'), ('business', 'business'), ('processes', 'process'), ('to', 'to'), ('score', 'score'), ('or', 'or'), ('predict', 'predict'), ('the', 'the'), ('likelihood', 'likelihood'), ('of', 'of'), ('outcomes', 'outcome'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'phase'), 'case'), (('the', 'phase'), 'det'), (('predicting', 'phase'), 'amod'), (('phase', 'applied'), 'obl'), ((',', 'applied'), 'punct'), (('patterns', 'applied'), 'nsubj:pass'), (('identified', 'patterns'), 'acl'), (('during', 'phase'), 'case'), (('the', 'phase'), 'det'), (('learning', 'phase'), 'compound'), (('phase', 'identified'), 'obl'), (('are', 'applied'), 'aux:pass'), (('applied', 'root'), 'root'), (('to', 'data'), 'case'), (('new', 'data'), 'amod'), (('data', 'applied'), 'obl'), (('or', 'processes'), 'cc'), (('business', 'processes'), 'compound'), (('processes', 'data'), 'conj'), (('to', 'score'), 'mark'), (('score', 'applied'), 'xcomp'), (('or', 'predict'), 'cc'), (('predict', 'score'), 'conj'), (('the', 'likelihood'), 'det'), (('likelihood', 'score'), 'obj'), (('of', 'outcomes'), 'case'), (('outcomes', 'likelihood'), 'nmod'), (('.', 'applied'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Scoring outcomes enables organizations to optimize resource allocation and  decision-making activities, make more intelligent decisions and automate key  business processes at scale. 

Tokens are: 
>> ['Scoring', 'outcomes', 'enables', 'organizations', 'to', 'optimize', 'resource', 'allocation', 'and', 'decision', '-', 'making', 'activities', ',', 'make', 'more', 'intelligent', 'decisions', 'and', 'automate', 'key', 'business', 'processes', 'at', 'scale', '.'] 

 UPOS tags are: 
>> [('Scoring', 'VERB'), ('outcomes', 'NOUN'), ('enables', 'VERB'), ('organizations', 'NOUN'), ('to', 'PART'), ('optimize', 'VERB'), ('resource', 'NOUN'), ('allocation', 'NOUN'), ('and', 'CCONJ'), ('decision', 'NOUN'), ('-', 'PUNCT'), ('making', 'VERB'), ('activities', 'NOUN'), (',', 'PUNCT'), ('make', 'VERB'), ('more', 'ADV'), ('intelligent', 'ADJ'), ('decisions', 'NOUN'), ('and', 'CCONJ'), ('automate', 'VERB'), ('key', 'ADJ'), ('business', 'NOUN'), ('processes', 'NOUN'), ('at', 'ADP'), ('scale', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Scoring', 'VBG'), ('outcomes', 'NNS'), ('enables', 'VBZ'), ('organizations', 'NNS'), ('to', 'TO'), ('optimize', 'VB'), ('resource', 'NN'), ('allocation', 'NN'), ('and', 'CC'), ('decision', 'NN'), ('-', 'HYPH'), ('making', 'VBG'), ('activities', 'NNS'), (',', ','), ('make', 'VB'), ('more', 'RBR'), ('intelligent', 'JJ'), ('decisions', 'NNS'), ('and', 'CC'), ('automate', 'VB'), ('key', 'JJ'), ('business', 'NN'), ('processes', 'NNS'), ('at', 'IN'), ('scale', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Scoring', 'score'), ('outcomes', 'outcome'), ('enables', 'enable'), ('organizations', 'organization'), ('to', 'to'), ('optimize', 'optimize'), ('resource', 'resource'), ('allocation', 'allocation'), ('and', 'and'), ('decision', 'decision'), ('-', '-'), ('making', 'make'), ('activities', 'activity'), (',', ','), ('make', 'make'), ('more', 'more'), ('intelligent', 'intelligent'), ('decisions', 'decision'), ('and', 'and'), ('automate', 'automate'), ('key', 'key'), ('business', 'business'), ('processes', 'process'), ('at', 'at'), ('scale', 'scale'), ('.', '.')] 

 Dependency tags are: 
>> [(('Scoring', 'enables'), 'csubj'), (('outcomes', 'Scoring'), 'obj'), (('enables', 'root'), 'root'), (('organizations', 'enables'), 'obj'), (('to', 'optimize'), 'mark'), (('optimize', 'enables'), 'xcomp'), (('resource', 'allocation'), 'compound'), (('allocation', 'optimize'), 'obj'), (('and', 'activities'), 'cc'), (('decision', 'making'), 'compound'), (('-', 'making'), 'punct'), (('making', 'allocation'), 'conj'), (('activities', 'allocation'), 'conj'), ((',', 'make'), 'punct'), (('make', 'enables'), 'conj'), (('more', 'intelligent'), 'advmod'), (('intelligent', 'decisions'), 'amod'), (('decisions', 'make'), 'obj'), (('and', 'automate'), 'cc'), (('automate', 'make'), 'conj'), (('key', 'processes'), 'amod'), (('business', 'processes'), 'compound'), (('processes', 'automate'), 'obj'), (('at', 'scale'), 'case'), (('scale', 'automate'), 'obl'), (('.', 'enables'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Some key business questions that machine learning  techniques can help answer include: 

Tokens are: 
>> ['Some', 'key', 'business', 'questions', 'that', 'machine', 'learning', 'techniques', 'can', 'help', 'answer', 'include', ':'] 

 UPOS tags are: 
>> [('Some', 'DET'), ('key', 'ADJ'), ('business', 'NOUN'), ('questions', 'NOUN'), ('that', 'SCONJ'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('techniques', 'NOUN'), ('can', 'AUX'), ('help', 'VERB'), ('answer', 'VERB'), ('include', 'VERB'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Some', 'DT'), ('key', 'JJ'), ('business', 'NN'), ('questions', 'NNS'), ('that', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('techniques', 'NNS'), ('can', 'MD'), ('help', 'VB'), ('answer', 'VB'), ('include', 'VB'), (':', ':')] 

 Lemmas are: 
>> [('Some', 'some'), ('key', 'key'), ('business', 'business'), ('questions', 'question'), ('that', 'that'), ('machine', 'machine'), ('learning', 'learning'), ('techniques', 'technique'), ('can', 'can'), ('help', 'help'), ('answer', 'answer'), ('include', 'include'), (':', ':')] 

 Dependency tags are: 
>> [(('Some', 'questions'), 'det'), (('key', 'questions'), 'amod'), (('business', 'questions'), 'compound'), (('questions', 'root'), 'root'), (('that', 'help'), 'mark'), (('machine', 'techniques'), 'compound'), (('learning', 'techniques'), 'compound'), (('techniques', 'help'), 'nsubj'), (('can', 'help'), 'aux'), (('help', 'questions'), 'acl'), (('answer', 'help'), 'xcomp'), (('include', 'help'), 'xcomp'), ((':', 'questions'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 49 =================================

1. Will my customer purchase product X? 


------------------- Sentence 1 -------------------

 1. 

Tokens are: 
>> ['1', '.'] 

 UPOS tags are: 
>> [('1', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('1', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('1', '1'), ('.', '.')] 

 Dependency tags are: 
>> [(('1', 'root'), 'root'), (('.', '1'), 'punct')]

 Named Entites are: 
>> [('1', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Will my customer purchase product X? 

Tokens are: 
>> ['Will', 'my', 'customer', 'purchase', 'product', 'X?'] 

 UPOS tags are: 
>> [('Will', 'AUX'), ('my', 'PRON'), ('customer', 'NOUN'), ('purchase', 'VERB'), ('product', 'NOUN'), ('X?', 'PROPN')] 

 XPOS tags are: 
>> [('Will', 'MD'), ('my', 'PRP$'), ('customer', 'NN'), ('purchase', 'VB'), ('product', 'NN'), ('X?', 'NNP')] 

 Lemmas are: 
>> [('Will', 'will'), ('my', 'my'), ('customer', 'customer'), ('purchase', 'purchase'), ('product', 'product'), ('X?', 'X?')] 

 Dependency tags are: 
>> [(('Will', 'purchase'), 'aux'), (('my', 'customer'), 'nmod:poss'), (('customer', 'purchase'), 'nsubj'), (('purchase', 'root'), 'root'), (('product', 'purchase'), 'obj'), (('X?', 'purchase'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 50 =================================

2. Will my customer like a recommended song? 


------------------- Sentence 1 -------------------

 2. Will my customer like a recommended song? 

Tokens are: 
>> ['2', '.', 'Will', 'my', 'customer', 'like', 'a', 'recommended', 'song', '?'] 

 UPOS tags are: 
>> [('2', 'NUM'), ('.', 'PUNCT'), ('Will', 'AUX'), ('my', 'PRON'), ('customer', 'NOUN'), ('like', 'ADP'), ('a', 'DET'), ('recommended', 'VERB'), ('song', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('2', 'LS'), ('.', '.'), ('Will', 'MD'), ('my', 'PRP$'), ('customer', 'NN'), ('like', 'IN'), ('a', 'DT'), ('recommended', 'VBN'), ('song', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('2', '2'), ('.', '.'), ('Will', 'will'), ('my', 'my'), ('customer', 'customer'), ('like', 'like'), ('a', 'a'), ('recommended', 'recommend'), ('song', 'song'), ('?', '?')] 

 Dependency tags are: 
>> [(('2', 'song'), 'nummod'), (('.', '2'), 'punct'), (('Will', 'song'), 'aux'), (('my', 'customer'), 'nmod:poss'), (('customer', 'root'), 'root'), (('like', 'song'), 'case'), (('a', 'song'), 'det'), (('recommended', 'song'), 'amod'), (('song', 'customer'), 'nmod'), (('?', 'song'), 'punct')]

 Named Entites are: 
>> [('2', 'CARDINAL')]

================================ Paragraph 51 =================================

3. Which of my customers are likely to switch to a competitor or cancel their contract? 


------------------- Sentence 1 -------------------

 3. 

Tokens are: 
>> ['3', '.'] 

 UPOS tags are: 
>> [('3', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('3', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('3', '3'), ('.', '.')] 

 Dependency tags are: 
>> [(('3', 'root'), 'root'), (('.', '3'), 'punct')]

 Named Entites are: 
>> [('3', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Which of my customers are likely to switch to a competitor or cancel their contract? 

Tokens are: 
>> ['Which', 'of', 'my', 'customers', 'are', 'likely', 'to', 'switch', 'to', 'a', 'competitor', 'or', 'cancel', 'their', 'contract', '?'] 

 UPOS tags are: 
>> [('Which', 'DET'), ('of', 'ADP'), ('my', 'PRON'), ('customers', 'NOUN'), ('are', 'AUX'), ('likely', 'ADJ'), ('to', 'PART'), ('switch', 'VERB'), ('to', 'ADP'), ('a', 'DET'), ('competitor', 'NOUN'), ('or', 'CCONJ'), ('cancel', 'VERB'), ('their', 'PRON'), ('contract', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Which', 'WDT'), ('of', 'IN'), ('my', 'PRP$'), ('customers', 'NNS'), ('are', 'VBP'), ('likely', 'JJ'), ('to', 'TO'), ('switch', 'VB'), ('to', 'IN'), ('a', 'DT'), ('competitor', 'NN'), ('or', 'CC'), ('cancel', 'VB'), ('their', 'PRP$'), ('contract', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Which', 'which'), ('of', 'of'), ('my', 'my'), ('customers', 'customer'), ('are', 'be'), ('likely', 'likely'), ('to', 'to'), ('switch', 'switch'), ('to', 'to'), ('a', 'a'), ('competitor', 'competitor'), ('or', 'or'), ('cancel', 'cancel'), ('their', 'they'), ('contract', 'contract'), ('?', '?')] 

 Dependency tags are: 
>> [(('Which', 'likely'), 'nsubj'), (('of', 'customers'), 'case'), (('my', 'customers'), 'nmod:poss'), (('customers', 'Which'), 'nmod'), (('are', 'likely'), 'cop'), (('likely', 'root'), 'root'), (('to', 'switch'), 'mark'), (('switch', 'likely'), 'xcomp'), (('to', 'competitor'), 'case'), (('a', 'competitor'), 'det'), (('competitor', 'switch'), 'obl'), (('or', 'cancel'), 'cc'), (('cancel', 'switch'), 'conj'), (('their', 'contract'), 'nmod:poss'), (('contract', 'cancel'), 'obj'), (('?', 'likely'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 52 =================================

4. Of all recently submitted claims, which ones are likely to require an additional  fraud investigation unit review? 


------------------- Sentence 1 -------------------

 4. 

Tokens are: 
>> ['4', '.'] 

 UPOS tags are: 
>> [('4', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('4', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('4', '4'), ('.', '.')] 

 Dependency tags are: 
>> [(('4', 'root'), 'root'), (('.', '4'), 'punct')]

 Named Entites are: 
>> [('4', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Of all recently submitted claims, which ones are likely to require an additional  fraud investigation unit review? 

Tokens are: 
>> ['Of', 'all', 'recently', 'submitted', 'claims', ',', 'which', 'ones', 'are', 'likely', 'to', 'require', 'an', 'additional', 'fraud', 'investigation', 'unit', 'review', '?'] 

 UPOS tags are: 
>> [('Of', 'ADP'), ('all', 'DET'), ('recently', 'ADV'), ('submitted', 'VERB'), ('claims', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('ones', 'NOUN'), ('are', 'AUX'), ('likely', 'ADJ'), ('to', 'PART'), ('require', 'VERB'), ('an', 'DET'), ('additional', 'ADJ'), ('fraud', 'NOUN'), ('investigation', 'NOUN'), ('unit', 'NOUN'), ('review', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Of', 'IN'), ('all', 'DT'), ('recently', 'RB'), ('submitted', 'VBN'), ('claims', 'NNS'), (',', ','), ('which', 'WDT'), ('ones', 'NNS'), ('are', 'VBP'), ('likely', 'JJ'), ('to', 'TO'), ('require', 'VB'), ('an', 'DT'), ('additional', 'JJ'), ('fraud', 'NN'), ('investigation', 'NN'), ('unit', 'NN'), ('review', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Of', 'of'), ('all', 'all'), ('recently', 'recently'), ('submitted', 'submit'), ('claims', 'claim'), (',', ','), ('which', 'which'), ('ones', 'one'), ('are', 'be'), ('likely', 'likely'), ('to', 'to'), ('require', 'require'), ('an', 'a'), ('additional', 'additional'), ('fraud', 'fraud'), ('investigation', 'investigation'), ('unit', 'unit'), ('review', 'review'), ('?', '?')] 

 Dependency tags are: 
>> [(('Of', 'claims'), 'case'), (('all', 'claims'), 'det'), (('recently', 'submitted'), 'advmod'), (('submitted', 'claims'), 'amod'), (('claims', 'root'), 'root'), ((',', 'claims'), 'punct'), (('which', 'likely'), 'obj'), (('ones', 'likely'), 'nsubj'), (('are', 'likely'), 'cop'), (('likely', 'claims'), 'acl:relcl'), (('to', 'require'), 'mark'), (('require', 'likely'), 'xcomp'), (('an', 'review'), 'det'), (('additional', 'review'), 'amod'), (('fraud', 'investigation'), 'compound'), (('investigation', 'unit'), 'compound'), (('unit', 'review'), 'compound'), (('review', 'require'), 'obj'), (('?', 'claims'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 53 =================================

5. Is this applicant likely to default on their car loan in the future? 


------------------- Sentence 1 -------------------

 5. 

Tokens are: 
>> ['5', '.'] 

 UPOS tags are: 
>> [('5', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('5', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('5', '5'), ('.', '.')] 

 Dependency tags are: 
>> [(('5', 'root'), 'root'), (('.', '5'), 'punct')]

 Named Entites are: 
>> [('5', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Is this applicant likely to default on their car loan in the future? 

Tokens are: 
>> ['Is', 'this', 'applicant', 'likely', 'to', 'default', 'on', 'their', 'car', 'loan', 'in', 'the', 'future', '?'] 

 UPOS tags are: 
>> [('Is', 'AUX'), ('this', 'DET'), ('applicant', 'NOUN'), ('likely', 'ADJ'), ('to', 'PART'), ('default', 'VERB'), ('on', 'ADP'), ('their', 'PRON'), ('car', 'NOUN'), ('loan', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('future', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Is', 'VBZ'), ('this', 'DT'), ('applicant', 'NN'), ('likely', 'JJ'), ('to', 'TO'), ('default', 'VB'), ('on', 'IN'), ('their', 'PRP$'), ('car', 'NN'), ('loan', 'NN'), ('in', 'IN'), ('the', 'DT'), ('future', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Is', 'be'), ('this', 'this'), ('applicant', 'applicant'), ('likely', 'likely'), ('to', 'to'), ('default', 'default'), ('on', 'on'), ('their', 'they'), ('car', 'car'), ('loan', 'loan'), ('in', 'in'), ('the', 'the'), ('future', 'future'), ('?', '?')] 

 Dependency tags are: 
>> [(('Is', 'likely'), 'cop'), (('this', 'applicant'), 'det'), (('applicant', 'likely'), 'nsubj'), (('likely', 'root'), 'root'), (('to', 'default'), 'mark'), (('default', 'likely'), 'xcomp'), (('on', 'loan'), 'case'), (('their', 'loan'), 'nmod:poss'), (('car', 'loan'), 'compound'), (('loan', 'default'), 'obl'), (('in', 'future'), 'case'), (('the', 'future'), 'det'), (('future', 'default'), 'obl'), (('?', 'likely'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 54 =================================

What do algorithms do? 


------------------- Sentence 1 -------------------

 What do algorithms do? 

Tokens are: 
>> ['What', 'do', 'algorithms', 'do', '?'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('do', 'AUX'), ('algorithms', 'NOUN'), ('do', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('do', 'VBP'), ('algorithms', 'NNS'), ('do', 'VB'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('do', 'do'), ('algorithms', 'algorithm'), ('do', 'do'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'do'), 'obj'), (('do', 'do'), 'aux'), (('algorithms', 'do'), 'nsubj'), (('do', 'root'), 'root'), (('?', 'do'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 55 =================================

Task Main objective Insight/ result 


------------------- Sentence 1 -------------------

 Task Main objective Insight/ result 

Tokens are: 
>> ['Task', 'Main', 'objective', 'Insight', '/', 'result'] 

 UPOS tags are: 
>> [('Task', 'NOUN'), ('Main', 'ADJ'), ('objective', 'ADJ'), ('Insight', 'NOUN'), ('/', 'SYM'), ('result', 'NOUN')] 

 XPOS tags are: 
>> [('Task', 'NN'), ('Main', 'JJ'), ('objective', 'JJ'), ('Insight', 'NN'), ('/', 'SYM'), ('result', 'NN')] 

 Lemmas are: 
>> [('Task', 'Task'), ('Main', 'Main'), ('objective', 'objective'), ('Insight', 'insight'), ('/', '/'), ('result', 'result')] 

 Dependency tags are: 
>> [(('Task', 'Insight'), 'compound'), (('Main', 'Insight'), 'amod'), (('objective', 'Insight'), 'amod'), (('Insight', 'root'), 'root'), (('/', 'result'), 'cc'), (('result', 'Insight'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 56 =================================

An algorithm is a step- by-step instruction set  or formula for solving a  problem or completing a  task 


------------------- Sentence 1 -------------------

 An algorithm is a step- by-step instruction set  or formula for solving a  problem or completing a  task 

Tokens are: 
>> ['An', 'algorithm', 'is', 'a', 'step', '-', 'by-step', 'instruction', 'set', 'or', 'formula', 'for', 'solving', 'a', 'problem', 'or', 'completing', 'a', 'task'] 

 UPOS tags are: 
>> [('An', 'DET'), ('algorithm', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('step', 'NOUN'), ('-', 'PUNCT'), ('by-step', 'ADJ'), ('instruction', 'NOUN'), ('set', 'NOUN'), ('or', 'CCONJ'), ('formula', 'NOUN'), ('for', 'SCONJ'), ('solving', 'VERB'), ('a', 'DET'), ('problem', 'NOUN'), ('or', 'CCONJ'), ('completing', 'VERB'), ('a', 'DET'), ('task', 'NOUN')] 

 XPOS tags are: 
>> [('An', 'DT'), ('algorithm', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('step', 'NN'), ('-', 'HYPH'), ('by-step', 'JJ'), ('instruction', 'NN'), ('set', 'NN'), ('or', 'CC'), ('formula', 'NN'), ('for', 'IN'), ('solving', 'VBG'), ('a', 'DT'), ('problem', 'NN'), ('or', 'CC'), ('completing', 'VBG'), ('a', 'DT'), ('task', 'NN')] 

 Lemmas are: 
>> [('An', 'a'), ('algorithm', 'algorithm'), ('is', 'be'), ('a', 'a'), ('step', 'step'), ('-', '-'), ('by-step', 'by-step'), ('instruction', 'instruction'), ('set', 'set'), ('or', 'or'), ('formula', 'formula'), ('for', 'for'), ('solving', 'solve'), ('a', 'a'), ('problem', 'problem'), ('or', 'or'), ('completing', 'complete'), ('a', 'a'), ('task', 'task')] 

 Dependency tags are: 
>> [(('An', 'algorithm'), 'det'), (('algorithm', 'set'), 'nsubj'), (('is', 'set'), 'cop'), (('a', 'set'), 'det'), (('step', 'by-step'), 'compound'), (('-', 'by-step'), 'punct'), (('by-step', 'set'), 'amod'), (('instruction', 'set'), 'compound'), (('set', 'root'), 'root'), (('or', 'formula'), 'cc'), (('formula', 'set'), 'conj'), (('for', 'solving'), 'mark'), (('solving', 'set'), 'acl'), (('a', 'problem'), 'det'), (('problem', 'solving'), 'obj'), (('or', 'completing'), 'cc'), (('completing', 'solving'), 'conj'), (('a', 'task'), 'det'), (('task', 'completing'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 57 =================================

Minimize errors or  some sort of “loss  function” to attain the  best approach to solve  a task 


------------------- Sentence 1 -------------------

 Minimize errors or  some sort of “loss  function” to attain the  best approach to solve  a task 

Tokens are: 
>> ['Minimize', 'errors', 'or', 'some', 'sort', 'of', '“', 'loss', 'function', '”', 'to', 'attain', 'the', 'best', 'approach', 'to', 'solve', 'a', 'task'] 

 UPOS tags are: 
>> [('Minimize', 'VERB'), ('errors', 'NOUN'), ('or', 'CCONJ'), ('some', 'DET'), ('sort', 'NOUN'), ('of', 'ADP'), ('“', 'PUNCT'), ('loss', 'NOUN'), ('function', 'NOUN'), ('”', 'PUNCT'), ('to', 'PART'), ('attain', 'VERB'), ('the', 'DET'), ('best', 'ADJ'), ('approach', 'NOUN'), ('to', 'PART'), ('solve', 'VERB'), ('a', 'DET'), ('task', 'NOUN')] 

 XPOS tags are: 
>> [('Minimize', 'VB'), ('errors', 'NNS'), ('or', 'CC'), ('some', 'DT'), ('sort', 'NN'), ('of', 'IN'), ('“', '``'), ('loss', 'NN'), ('function', 'NN'), ('”', "''"), ('to', 'TO'), ('attain', 'VB'), ('the', 'DT'), ('best', 'JJS'), ('approach', 'NN'), ('to', 'TO'), ('solve', 'VB'), ('a', 'DT'), ('task', 'NN')] 

 Lemmas are: 
>> [('Minimize', 'minimize'), ('errors', 'error'), ('or', 'or'), ('some', 'some'), ('sort', 'sort'), ('of', 'of'), ('“', "''"), ('loss', 'loss'), ('function', 'function'), ('”', "''"), ('to', 'to'), ('attain', 'attain'), ('the', 'the'), ('best', 'good'), ('approach', 'approach'), ('to', 'to'), ('solve', 'solve'), ('a', 'a'), ('task', 'task')] 

 Dependency tags are: 
>> [(('Minimize', 'root'), 'root'), (('errors', 'Minimize'), 'obj'), (('or', 'sort'), 'cc'), (('some', 'sort'), 'det'), (('sort', 'errors'), 'conj'), (('of', 'function'), 'case'), (('“', 'function'), 'punct'), (('loss', 'function'), 'compound'), (('function', 'sort'), 'nmod'), (('”', 'function'), 'punct'), (('to', 'attain'), 'mark'), (('attain', 'Minimize'), 'advcl'), (('the', 'approach'), 'det'), (('best', 'approach'), 'amod'), (('approach', 'attain'), 'obj'), (('to', 'solve'), 'mark'), (('solve', 'approach'), 'acl'), (('a', 'task'), 'det'), (('task', 'solve'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 58 =================================

The algorithm learns from  its mistakes/errors, finds  the best approach and  generates insights and  rules that can be used to  make predictions 


------------------- Sentence 1 -------------------

 The algorithm learns from  its mistakes/errors, finds  the best approach and  generates insights and  rules that can be used to  make predictions 

Tokens are: 
>> ['The', 'algorithm', 'learns', 'from', 'its', 'mistakes', '/', 'errors', ',', 'finds', 'the', 'best', 'approach', 'and', 'generates', 'insights', 'and', 'rules', 'that', 'can', 'be', 'used', 'to', 'make', 'predictions'] 

 UPOS tags are: 
>> [('The', 'DET'), ('algorithm', 'NOUN'), ('learns', 'VERB'), ('from', 'ADP'), ('its', 'PRON'), ('mistakes', 'NOUN'), ('/', 'SYM'), ('errors', 'NOUN'), (',', 'PUNCT'), ('finds', 'VERB'), ('the', 'DET'), ('best', 'ADJ'), ('approach', 'NOUN'), ('and', 'CCONJ'), ('generates', 'VERB'), ('insights', 'NOUN'), ('and', 'CCONJ'), ('rules', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('used', 'VERB'), ('to', 'PART'), ('make', 'VERB'), ('predictions', 'NOUN')] 

 XPOS tags are: 
>> [('The', 'DT'), ('algorithm', 'NN'), ('learns', 'VBZ'), ('from', 'IN'), ('its', 'PRP$'), ('mistakes', 'NNS'), ('/', ','), ('errors', 'NNS'), (',', ','), ('finds', 'VBZ'), ('the', 'DT'), ('best', 'JJS'), ('approach', 'NN'), ('and', 'CC'), ('generates', 'VBZ'), ('insights', 'NNS'), ('and', 'CC'), ('rules', 'NNS'), ('that', 'WDT'), ('can', 'MD'), ('be', 'VB'), ('used', 'VBN'), ('to', 'TO'), ('make', 'VB'), ('predictions', 'NNS')] 

 Lemmas are: 
>> [('The', 'the'), ('algorithm', 'algorithm'), ('learns', 'learn'), ('from', 'from'), ('its', 'its'), ('mistakes', 'mistake'), ('/', '/'), ('errors', 'error'), (',', ','), ('finds', 'find'), ('the', 'the'), ('best', 'good'), ('approach', 'approach'), ('and', 'and'), ('generates', 'generate'), ('insights', 'insight'), ('and', 'and'), ('rules', 'rule'), ('that', 'that'), ('can', 'can'), ('be', 'be'), ('used', 'use'), ('to', 'to'), ('make', 'make'), ('predictions', 'prediction')] 

 Dependency tags are: 
>> [(('The', 'algorithm'), 'det'), (('algorithm', 'learns'), 'nsubj'), (('learns', 'root'), 'root'), (('from', 'mistakes'), 'case'), (('its', 'mistakes'), 'nmod:poss'), (('mistakes', 'learns'), 'obl'), (('/', 'errors'), 'cc'), (('errors', 'mistakes'), 'conj'), ((',', 'finds'), 'punct'), (('finds', 'learns'), 'conj'), (('the', 'approach'), 'det'), (('best', 'approach'), 'amod'), (('approach', 'finds'), 'obj'), (('and', 'generates'), 'cc'), (('generates', 'finds'), 'conj'), (('insights', 'generates'), 'obj'), (('and', 'rules'), 'cc'), (('rules', 'insights'), 'conj'), (('that', 'used'), 'nsubj:pass'), (('can', 'used'), 'aux'), (('be', 'used'), 'aux:pass'), (('used', 'insights'), 'acl:relcl'), (('to', 'make'), 'mark'), (('make', 'used'), 'xcomp'), (('predictions', 'make'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 59 =================================

1.	Take	the	chicken	out 


------------------- Sentence 1 -------------------

 1. 

Tokens are: 
>> ['1', '.'] 

 UPOS tags are: 
>> [('1', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('1', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('1', '1'), ('.', '.')] 

 Dependency tags are: 
>> [(('1', 'root'), 'root'), (('.', '1'), 'punct')]

 Named Entites are: 
>> [('1', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Take	the	chicken	out 

Tokens are: 
>> ['Take', 'the', 'chicken', 'out'] 

 UPOS tags are: 
>> [('Take', 'VERB'), ('the', 'DET'), ('chicken', 'NOUN'), ('out', 'ADP')] 

 XPOS tags are: 
>> [('Take', 'VB'), ('the', 'DT'), ('chicken', 'NN'), ('out', 'RP')] 

 Lemmas are: 
>> [('Take', 'take'), ('the', 'the'), ('chicken', 'chicken'), ('out', 'out')] 

 Dependency tags are: 
>> [(('Take', 'root'), 'root'), (('the', 'chicken'), 'det'), (('chicken', 'Take'), 'obj'), (('out', 'Take'), 'compound:prt')]

 Named Entites are: 
>> []

================================ Paragraph 60 =================================

2.	 Salt	and	season 


------------------- Sentence 1 -------------------

 2.	 Salt	and	season 

Tokens are: 
>> ['2', '.', 'Salt', 'and', 'season'] 

 UPOS tags are: 
>> [('2', 'NUM'), ('.', 'PUNCT'), ('Salt', 'NOUN'), ('and', 'CCONJ'), ('season', 'NOUN')] 

 XPOS tags are: 
>> [('2', 'LS'), ('.', '.'), ('Salt', 'NN'), ('and', 'CC'), ('season', 'NN')] 

 Lemmas are: 
>> [('2', '2'), ('.', '.'), ('Salt', 'salt'), ('and', 'and'), ('season', 'season')] 

 Dependency tags are: 
>> [(('2', 'Salt'), 'nummod'), (('.', '2'), 'punct'), (('Salt', 'root'), 'root'), (('and', 'season'), 'cc'), (('season', 'Salt'), 'conj')]

 Named Entites are: 
>> [('2', 'CARDINAL')]

================================ Paragraph 61 =================================

3.	 Bake	it 


------------------- Sentence 1 -------------------

 3.	 Bake	it 

Tokens are: 
>> ['3', '.', 'Bake', 'it'] 

 UPOS tags are: 
>> [('3', 'NUM'), ('.', 'PUNCT'), ('Bake', 'VERB'), ('it', 'PRON')] 

 XPOS tags are: 
>> [('3', 'LS'), ('.', '.'), ('Bake', 'VB'), ('it', 'PRP')] 

 Lemmas are: 
>> [('3', '3'), ('.', '.'), ('Bake', 'bake'), ('it', 'it')] 

 Dependency tags are: 
>> [(('3', 'Bake'), 'nummod'), (('.', '3'), 'punct'), (('Bake', 'root'), 'root'), (('it', 'Bake'), 'obj')]

 Named Entites are: 
>> [('3', 'CARDINAL')]

================================ Paragraph 62 =================================

Minimize	the	number	 of	things/steps	needed	 to	take	in	order	to	 serve	the	dish 


------------------- Sentence 1 -------------------

 Minimize	the	number	 of	things/steps	needed	 to	take	in	order	to	 serve	the	dish 

Tokens are: 
>> ['Minimize', 'the', 'number', 'of', 'things', '/', 'steps', 'needed', 'to', 'take', 'in', 'order', 'to', 'serve', 'the', 'dish'] 

 UPOS tags are: 
>> [('Minimize', 'VERB'), ('the', 'DET'), ('number', 'NOUN'), ('of', 'ADP'), ('things', 'NOUN'), ('/', 'SYM'), ('steps', 'NOUN'), ('needed', 'VERB'), ('to', 'PART'), ('take', 'VERB'), ('in', 'ADP'), ('order', 'NOUN'), ('to', 'PART'), ('serve', 'VERB'), ('the', 'DET'), ('dish', 'NOUN')] 

 XPOS tags are: 
>> [('Minimize', 'VB'), ('the', 'DT'), ('number', 'NN'), ('of', 'IN'), ('things', 'NNS'), ('/', ','), ('steps', 'NNS'), ('needed', 'VBN'), ('to', 'TO'), ('take', 'VB'), ('in', 'IN'), ('order', 'NN'), ('to', 'TO'), ('serve', 'VB'), ('the', 'DT'), ('dish', 'NN')] 

 Lemmas are: 
>> [('Minimize', 'minimize'), ('the', 'the'), ('number', 'number'), ('of', 'of'), ('things', 'thing'), ('/', '/'), ('steps', 'step'), ('needed', 'need'), ('to', 'to'), ('take', 'take'), ('in', 'in'), ('order', 'order'), ('to', 'to'), ('serve', 'serve'), ('the', 'the'), ('dish', 'dish')] 

 Dependency tags are: 
>> [(('Minimize', 'root'), 'root'), (('the', 'number'), 'det'), (('number', 'Minimize'), 'obj'), (('of', 'things'), 'case'), (('things', 'number'), 'nmod'), (('/', 'steps'), 'cc'), (('steps', 'things'), 'conj'), (('needed', 'steps'), 'acl'), (('to', 'take'), 'mark'), (('take', 'needed'), 'xcomp'), (('in', 'serve'), 'mark'), (('order', 'in'), 'fixed'), (('to', 'serve'), 'mark'), (('serve', 'take'), 'advcl'), (('the', 'dish'), 'det'), (('dish', 'serve'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 63 =================================

Learn	from	your	mistakes	 	the	next	time	you	attempt	 	the	recipe 


------------------- Sentence 1 -------------------

 Learn	from	your	mistakes	 	the	next	time	you	attempt	 	the	recipe 

Tokens are: 
>> ['Learn', 'from', 'your', 'mistakes', 'the', 'next', 'time', 'you', 'attempt', 'the', 'recipe'] 

 UPOS tags are: 
>> [('Learn', 'VERB'), ('from', 'ADP'), ('your', 'PRON'), ('mistakes', 'NOUN'), ('the', 'DET'), ('next', 'ADJ'), ('time', 'NOUN'), ('you', 'PRON'), ('attempt', 'VERB'), ('the', 'DET'), ('recipe', 'NOUN')] 

 XPOS tags are: 
>> [('Learn', 'VB'), ('from', 'IN'), ('your', 'PRP$'), ('mistakes', 'NNS'), ('the', 'DT'), ('next', 'JJ'), ('time', 'NN'), ('you', 'PRP'), ('attempt', 'VBP'), ('the', 'DT'), ('recipe', 'NN')] 

 Lemmas are: 
>> [('Learn', 'learn'), ('from', 'from'), ('your', 'you'), ('mistakes', 'mistake'), ('the', 'the'), ('next', 'next'), ('time', 'time'), ('you', 'you'), ('attempt', 'attempt'), ('the', 'the'), ('recipe', 'recipe')] 

 Dependency tags are: 
>> [(('Learn', 'root'), 'root'), (('from', 'mistakes'), 'case'), (('your', 'mistakes'), 'nmod:poss'), (('mistakes', 'Learn'), 'obl'), (('the', 'time'), 'det'), (('next', 'time'), 'amod'), (('time', 'Learn'), 'obl:tmod'), (('you', 'attempt'), 'nsubj'), (('attempt', 'time'), 'acl:relcl'), (('the', 'recipe'), 'det'), (('recipe', 'attempt'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 64 =================================

With the growth of data, the invention of advanced algorithms and cheaper  commodity hardware to process big data at scale, deep learning, a powerful set  of machine learning techniques, has become prominent in the industry. Deep  learning techniques mimic the brain’s neuron activities, which is why they are also  referred to as neural networks. Some common applications include natural language  processing, image recognition, realistic photo and video generation.  


------------------- Sentence 1 -------------------

 With the growth of data, the invention of advanced algorithms and cheaper  commodity hardware to process big data at scale, deep learning, a powerful set  of machine learning techniques, has become prominent in the industry. 

Tokens are: 
>> ['With', 'the', 'growth', 'of', 'data', ',', 'the', 'invention', 'of', 'advanced', 'algorithms', 'and', 'cheaper', 'commodity', 'hardware', 'to', 'process', 'big', 'data', 'at', 'scale', ',', 'deep', 'learning', ',', 'a', 'powerful', 'set', 'of', 'machine', 'learning', 'techniques', ',', 'has', 'become', 'prominent', 'in', 'the', 'industry', '.'] 

 UPOS tags are: 
>> [('With', 'ADP'), ('the', 'DET'), ('growth', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('invention', 'NOUN'), ('of', 'ADP'), ('advanced', 'ADJ'), ('algorithms', 'NOUN'), ('and', 'CCONJ'), ('cheaper', 'ADJ'), ('commodity', 'NOUN'), ('hardware', 'NOUN'), ('to', 'PART'), ('process', 'VERB'), ('big', 'ADJ'), ('data', 'NOUN'), ('at', 'ADP'), ('scale', 'NOUN'), (',', 'PUNCT'), ('deep', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('a', 'DET'), ('powerful', 'ADJ'), ('set', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('techniques', 'NOUN'), (',', 'PUNCT'), ('has', 'AUX'), ('become', 'VERB'), ('prominent', 'ADJ'), ('in', 'ADP'), ('the', 'DET'), ('industry', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('With', 'IN'), ('the', 'DT'), ('growth', 'NN'), ('of', 'IN'), ('data', 'NN'), (',', ','), ('the', 'DT'), ('invention', 'NN'), ('of', 'IN'), ('advanced', 'JJ'), ('algorithms', 'NNS'), ('and', 'CC'), ('cheaper', 'JJR'), ('commodity', 'NN'), ('hardware', 'NN'), ('to', 'TO'), ('process', 'VB'), ('big', 'JJ'), ('data', 'NNS'), ('at', 'IN'), ('scale', 'NN'), (',', ','), ('deep', 'JJ'), ('learning', 'NN'), (',', ','), ('a', 'DT'), ('powerful', 'JJ'), ('set', 'NN'), ('of', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('techniques', 'NNS'), (',', ','), ('has', 'VBZ'), ('become', 'VBN'), ('prominent', 'JJ'), ('in', 'IN'), ('the', 'DT'), ('industry', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('With', 'with'), ('the', 'the'), ('growth', 'growth'), ('of', 'of'), ('data', 'datum'), (',', ','), ('the', 'the'), ('invention', 'invention'), ('of', 'of'), ('advanced', 'advanced'), ('algorithms', 'algorithm'), ('and', 'and'), ('cheaper', 'cheap'), ('commodity', 'commodity'), ('hardware', 'hardware'), ('to', 'to'), ('process', 'process'), ('big', 'big'), ('data', 'datum'), ('at', 'at'), ('scale', 'scale'), (',', ','), ('deep', 'deep'), ('learning', 'learning'), (',', ','), ('a', 'a'), ('powerful', 'powerful'), ('set', 'set'), ('of', 'of'), ('machine', 'machine'), ('learning', 'learning'), ('techniques', 'technique'), (',', ','), ('has', 'have'), ('become', 'become'), ('prominent', 'prominent'), ('in', 'in'), ('the', 'the'), ('industry', 'industry'), ('.', '.')] 

 Dependency tags are: 
>> [(('With', 'growth'), 'case'), (('the', 'growth'), 'det'), (('growth', 'become'), 'obl'), (('of', 'data'), 'case'), (('data', 'growth'), 'nmod'), ((',', 'become'), 'punct'), (('the', 'invention'), 'det'), (('invention', 'become'), 'nsubj'), (('of', 'algorithms'), 'case'), (('advanced', 'algorithms'), 'amod'), (('algorithms', 'invention'), 'nmod'), (('and', 'hardware'), 'cc'), (('cheaper', 'hardware'), 'amod'), (('commodity', 'hardware'), 'compound'), (('hardware', 'algorithms'), 'conj'), (('to', 'process'), 'mark'), (('process', 'hardware'), 'acl'), (('big', 'data'), 'amod'), (('data', 'process'), 'obj'), (('at', 'scale'), 'case'), (('scale', 'process'), 'obl'), ((',', 'learning'), 'punct'), (('deep', 'learning'), 'amod'), (('learning', 'become'), 'nsubj'), ((',', 'set'), 'punct'), (('a', 'set'), 'det'), (('powerful', 'set'), 'amod'), (('set', 'learning'), 'appos'), (('of', 'techniques'), 'case'), (('machine', 'techniques'), 'compound'), (('learning', 'techniques'), 'compound'), (('techniques', 'set'), 'nmod'), ((',', 'become'), 'punct'), (('has', 'become'), 'aux'), (('become', 'root'), 'root'), (('prominent', 'become'), 'xcomp'), (('in', 'industry'), 'case'), (('the', 'industry'), 'det'), (('industry', 'prominent'), 'obl'), (('.', 'become'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Deep  learning techniques mimic the brain’s neuron activities, which is why they are also  referred to as neural networks. 

Tokens are: 
>> ['Deep', 'learning', 'techniques', 'mimic', 'the', 'brain', '’s', 'neuron', 'activities', ',', 'which', 'is', 'why', 'they', 'are', 'also', 'referred', 'to', 'as', 'neural', 'networks', '.'] 

 UPOS tags are: 
>> [('Deep', 'ADJ'), ('learning', 'NOUN'), ('techniques', 'NOUN'), ('mimic', 'VERB'), ('the', 'DET'), ('brain', 'NOUN'), ('’s', 'PART'), ('neuron', 'NOUN'), ('activities', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('is', 'AUX'), ('why', 'SCONJ'), ('they', 'PRON'), ('are', 'AUX'), ('also', 'ADV'), ('referred', 'VERB'), ('to', 'ADP'), ('as', 'ADP'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Deep', 'JJ'), ('learning', 'NN'), ('techniques', 'NNS'), ('mimic', 'VBP'), ('the', 'DT'), ('brain', 'NN'), ('’s', 'POS'), ('neuron', 'NN'), ('activities', 'NNS'), (',', ','), ('which', 'WDT'), ('is', 'VBZ'), ('why', 'WRB'), ('they', 'PRP'), ('are', 'VBP'), ('also', 'RB'), ('referred', 'VBN'), ('to', 'IN'), ('as', 'IN'), ('neural', 'JJ'), ('networks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Deep', 'deep'), ('learning', 'learning'), ('techniques', 'technique'), ('mimic', 'mimic'), ('the', 'the'), ('brain', 'brain'), ('’s', "'s"), ('neuron', 'neuron'), ('activities', 'activity'), (',', ','), ('which', 'which'), ('is', 'be'), ('why', 'why'), ('they', 'they'), ('are', 'be'), ('also', 'also'), ('referred', 'refer'), ('to', 'to'), ('as', 'as'), ('neural', 'neural'), ('networks', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('Deep', 'techniques'), 'amod'), (('learning', 'techniques'), 'compound'), (('techniques', 'mimic'), 'nsubj'), (('mimic', 'root'), 'root'), (('the', 'brain'), 'det'), (('brain', 'activities'), 'nmod:poss'), (('’s', 'brain'), 'case'), (('neuron', 'activities'), 'compound'), (('activities', 'mimic'), 'obj'), ((',', 'activities'), 'punct'), (('which', 'why'), 'nsubj'), (('is', 'why'), 'cop'), (('why', 'activities'), 'acl:relcl'), (('they', 'referred'), 'nsubj:pass'), (('are', 'referred'), 'aux:pass'), (('also', 'referred'), 'advmod'), (('referred', 'why'), 'acl:relcl'), (('to', 'referred'), 'obl'), (('as', 'networks'), 'case'), (('neural', 'networks'), 'amod'), (('networks', 'referred'), 'obl'), (('.', 'mimic'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Some common applications include natural language  processing, image recognition, realistic photo and video generation. 

Tokens are: 
>> ['Some', 'common', 'applications', 'include', 'natural', 'language', 'processing', ',', 'image', 'recognition', ',', 'realistic', 'photo', 'and', 'video', 'generation', '.'] 

 UPOS tags are: 
>> [('Some', 'DET'), ('common', 'ADJ'), ('applications', 'NOUN'), ('include', 'VERB'), ('natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), (',', 'PUNCT'), ('image', 'NOUN'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('realistic', 'ADJ'), ('photo', 'NOUN'), ('and', 'CCONJ'), ('video', 'NOUN'), ('generation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Some', 'DT'), ('common', 'JJ'), ('applications', 'NNS'), ('include', 'VBP'), ('natural', 'JJ'), ('language', 'NN'), ('processing', 'NN'), (',', ','), ('image', 'NN'), ('recognition', 'NN'), (',', ','), ('realistic', 'JJ'), ('photo', 'NN'), ('and', 'CC'), ('video', 'NN'), ('generation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Some', 'some'), ('common', 'common'), ('applications', 'application'), ('include', 'include'), ('natural', 'natural'), ('language', 'language'), ('processing', 'processing'), (',', ','), ('image', 'image'), ('recognition', 'recognition'), (',', ','), ('realistic', 'realistic'), ('photo', 'photo'), ('and', 'and'), ('video', 'video'), ('generation', 'generation'), ('.', '.')] 

 Dependency tags are: 
>> [(('Some', 'applications'), 'det'), (('common', 'applications'), 'amod'), (('applications', 'include'), 'nsubj'), (('include', 'root'), 'root'), (('natural', 'processing'), 'amod'), (('language', 'processing'), 'compound'), (('processing', 'include'), 'obj'), ((',', 'recognition'), 'punct'), (('image', 'recognition'), 'compound'), (('recognition', 'processing'), 'conj'), ((',', 'photo'), 'punct'), (('realistic', 'photo'), 'amod'), (('photo', 'processing'), 'conj'), (('and', 'generation'), 'cc'), (('video', 'generation'), 'compound'), (('generation', 'processing'), 'conj'), (('.', 'include'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 65 =================================

With the growth of data,  the invention of advanced  algorithms and cheaper  commodity hardware to  process big data at scale,  deep learning, a powerful  set of machine learning  techniques, has become  prominent in the industry.  


------------------- Sentence 1 -------------------

 With the growth of data,  the invention of advanced  algorithms and cheaper  commodity hardware to  process big data at scale,  deep learning, a powerful  set of machine learning  techniques, has become  prominent in the industry. 

Tokens are: 
>> ['With', 'the', 'growth', 'of', 'data', ',', 'the', 'invention', 'of', 'advanced', 'algorithms', 'and', 'cheaper', 'commodity', 'hardware', 'to', 'process', 'big', 'data', 'at', 'scale', ',', 'deep', 'learning', ',', 'a', 'powerful', 'set', 'of', 'machine', 'learning', 'techniques', ',', 'has', 'become', 'prominent', 'in', 'the', 'industry', '.'] 

 UPOS tags are: 
>> [('With', 'ADP'), ('the', 'DET'), ('growth', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('invention', 'NOUN'), ('of', 'ADP'), ('advanced', 'ADJ'), ('algorithms', 'NOUN'), ('and', 'CCONJ'), ('cheaper', 'ADJ'), ('commodity', 'NOUN'), ('hardware', 'NOUN'), ('to', 'PART'), ('process', 'VERB'), ('big', 'ADJ'), ('data', 'NOUN'), ('at', 'ADP'), ('scale', 'NOUN'), (',', 'PUNCT'), ('deep', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('a', 'DET'), ('powerful', 'ADJ'), ('set', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('techniques', 'NOUN'), (',', 'PUNCT'), ('has', 'AUX'), ('become', 'VERB'), ('prominent', 'ADJ'), ('in', 'ADP'), ('the', 'DET'), ('industry', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('With', 'IN'), ('the', 'DT'), ('growth', 'NN'), ('of', 'IN'), ('data', 'NN'), (',', ','), ('the', 'DT'), ('invention', 'NN'), ('of', 'IN'), ('advanced', 'JJ'), ('algorithms', 'NNS'), ('and', 'CC'), ('cheaper', 'JJR'), ('commodity', 'NN'), ('hardware', 'NN'), ('to', 'TO'), ('process', 'VB'), ('big', 'JJ'), ('data', 'NNS'), ('at', 'IN'), ('scale', 'NN'), (',', ','), ('deep', 'JJ'), ('learning', 'NN'), (',', ','), ('a', 'DT'), ('powerful', 'JJ'), ('set', 'NN'), ('of', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('techniques', 'NNS'), (',', ','), ('has', 'VBZ'), ('become', 'VBN'), ('prominent', 'JJ'), ('in', 'IN'), ('the', 'DT'), ('industry', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('With', 'with'), ('the', 'the'), ('growth', 'growth'), ('of', 'of'), ('data', 'datum'), (',', ','), ('the', 'the'), ('invention', 'invention'), ('of', 'of'), ('advanced', 'advanced'), ('algorithms', 'algorithm'), ('and', 'and'), ('cheaper', 'cheap'), ('commodity', 'commodity'), ('hardware', 'hardware'), ('to', 'to'), ('process', 'process'), ('big', 'big'), ('data', 'datum'), ('at', 'at'), ('scale', 'scale'), (',', ','), ('deep', 'deep'), ('learning', 'learning'), (',', ','), ('a', 'a'), ('powerful', 'powerful'), ('set', 'set'), ('of', 'of'), ('machine', 'machine'), ('learning', 'learning'), ('techniques', 'technique'), (',', ','), ('has', 'have'), ('become', 'become'), ('prominent', 'prominent'), ('in', 'in'), ('the', 'the'), ('industry', 'industry'), ('.', '.')] 

 Dependency tags are: 
>> [(('With', 'growth'), 'case'), (('the', 'growth'), 'det'), (('growth', 'become'), 'obl'), (('of', 'data'), 'case'), (('data', 'growth'), 'nmod'), ((',', 'become'), 'punct'), (('the', 'invention'), 'det'), (('invention', 'become'), 'nsubj'), (('of', 'algorithms'), 'case'), (('advanced', 'algorithms'), 'amod'), (('algorithms', 'invention'), 'nmod'), (('and', 'hardware'), 'cc'), (('cheaper', 'hardware'), 'amod'), (('commodity', 'hardware'), 'compound'), (('hardware', 'algorithms'), 'conj'), (('to', 'process'), 'mark'), (('process', 'hardware'), 'acl'), (('big', 'data'), 'amod'), (('data', 'process'), 'obj'), (('at', 'scale'), 'case'), (('scale', 'process'), 'obl'), ((',', 'learning'), 'punct'), (('deep', 'learning'), 'amod'), (('learning', 'become'), 'nsubj'), ((',', 'set'), 'punct'), (('a', 'set'), 'det'), (('powerful', 'set'), 'amod'), (('set', 'learning'), 'appos'), (('of', 'techniques'), 'case'), (('machine', 'techniques'), 'compound'), (('learning', 'techniques'), 'compound'), (('techniques', 'set'), 'nmod'), ((',', 'become'), 'punct'), (('has', 'become'), 'aux'), (('become', 'root'), 'root'), (('prominent', 'become'), 'xcomp'), (('in', 'industry'), 'case'), (('the', 'industry'), 'det'), (('industry', 'prominent'), 'obl'), (('.', 'become'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 66 =================================

Task An algorithm is a  


------------------- Sentence 1 -------------------

 Task 

Tokens are: 
>> ['Task'] 

 UPOS tags are: 
>> [('Task', 'NOUN')] 

 XPOS tags are: 
>> [('Task', 'NN')] 

 Lemmas are: 
>> [('Task', 'Task')] 

 Dependency tags are: 
>> [(('Task', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 An algorithm is a 

Tokens are: 
>> ['An', 'algorithm', 'is', 'a'] 

 UPOS tags are: 
>> [('An', 'DET'), ('algorithm', 'NOUN'), ('is', 'AUX'), ('a', 'DET')] 

 XPOS tags are: 
>> [('An', 'DT'), ('algorithm', 'NN'), ('is', 'VBZ'), ('a', 'DT')] 

 Lemmas are: 
>> [('An', 'a'), ('algorithm', 'algorithm'), ('is', 'be'), ('a', 'a')] 

 Dependency tags are: 
>> [(('An', 'algorithm'), 'det'), (('algorithm', 'a'), 'nsubj'), (('is', 'a'), 'cop'), (('a', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 67 =================================

step-by-step instruction set  or formula for solving a  


------------------- Sentence 1 -------------------

 step-by-step instruction set  or formula for solving a 

Tokens are: 
>> ['step-by-step', 'instruction', 'set', 'or', 'formula', 'for', 'solving', 'a'] 

 UPOS tags are: 
>> [('step-by-step', 'ADJ'), ('instruction', 'NOUN'), ('set', 'NOUN'), ('or', 'CCONJ'), ('formula', 'NOUN'), ('for', 'SCONJ'), ('solving', 'NOUN'), ('a', 'DET')] 

 XPOS tags are: 
>> [('step-by-step', 'JJ'), ('instruction', 'NN'), ('set', 'NN'), ('or', 'CC'), ('formula', 'NN'), ('for', 'IN'), ('solving', 'NN'), ('a', 'DT')] 

 Lemmas are: 
>> [('step-by-step', 'step-by-step'), ('instruction', 'instruction'), ('set', 'set'), ('or', 'or'), ('formula', 'formula'), ('for', 'for'), ('solving', 'solving'), ('a', 'a')] 

 Dependency tags are: 
>> [(('step-by-step', 'set'), 'amod'), (('instruction', 'set'), 'compound'), (('set', 'root'), 'root'), (('or', 'formula'), 'cc'), (('formula', 'set'), 'conj'), (('for', 'solving'), 'case'), (('solving', 'set'), 'nmod'), (('a', 'solving'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 68 =================================

problem or completing a task 


------------------- Sentence 1 -------------------

 problem or completing a task 

Tokens are: 
>> ['problem', 'or', 'completing', 'a', 'task'] 

 UPOS tags are: 
>> [('problem', 'NOUN'), ('or', 'CCONJ'), ('completing', 'VERB'), ('a', 'DET'), ('task', 'NOUN')] 

 XPOS tags are: 
>> [('problem', 'NN'), ('or', 'CC'), ('completing', 'VBG'), ('a', 'DT'), ('task', 'NN')] 

 Lemmas are: 
>> [('problem', 'problem'), ('or', 'or'), ('completing', 'complete'), ('a', 'a'), ('task', 'task')] 

 Dependency tags are: 
>> [(('problem', 'root'), 'root'), (('or', 'completing'), 'cc'), (('completing', 'problem'), 'conj'), (('a', 'task'), 'det'), (('task', 'completing'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 69 =================================

1. Take the chicken out 2. Salt and season 3. Bake it 


------------------- Sentence 1 -------------------

 1. 

Tokens are: 
>> ['1', '.'] 

 UPOS tags are: 
>> [('1', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('1', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('1', '1'), ('.', '.')] 

 Dependency tags are: 
>> [(('1', 'root'), 'root'), (('.', '1'), 'punct')]

 Named Entites are: 
>> [('1', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Take the chicken out 2. 

Tokens are: 
>> ['Take', 'the', 'chicken', 'out', '2', '.'] 

 UPOS tags are: 
>> [('Take', 'VERB'), ('the', 'DET'), ('chicken', 'NOUN'), ('out', 'ADP'), ('2', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Take', 'VB'), ('the', 'DT'), ('chicken', 'NN'), ('out', 'RP'), ('2', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('Take', 'take'), ('the', 'the'), ('chicken', 'chicken'), ('out', 'out'), ('2', '2'), ('.', '.')] 

 Dependency tags are: 
>> [(('Take', 'root'), 'root'), (('the', 'chicken'), 'det'), (('chicken', 'Take'), 'obj'), (('out', 'Take'), 'compound:prt'), (('2', 'Take'), 'obl'), (('.', 'Take'), 'punct')]

 Named Entites are: 
>> [('2', 'CARDINAL')]

------------------- Sentence 3 -------------------

 Salt and season 3. 

Tokens are: 
>> ['Salt', 'and', 'season', '3', '.'] 

 UPOS tags are: 
>> [('Salt', 'NOUN'), ('and', 'CCONJ'), ('season', 'NOUN'), ('3', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Salt', 'NN'), ('and', 'CC'), ('season', 'NN'), ('3', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('Salt', 'salt'), ('and', 'and'), ('season', 'season'), ('3', '3'), ('.', '.')] 

 Dependency tags are: 
>> [(('Salt', 'root'), 'root'), (('and', 'season'), 'cc'), (('season', 'Salt'), 'conj'), (('3', 'season'), 'nummod'), (('.', 'Salt'), 'punct')]

 Named Entites are: 
>> [('3', 'CARDINAL')]

------------------- Sentence 4 -------------------

 Bake it 

Tokens are: 
>> ['Bake', 'it'] 

 UPOS tags are: 
>> [('Bake', 'VERB'), ('it', 'PRON')] 

 XPOS tags are: 
>> [('Bake', 'VB'), ('it', 'PRP')] 

 Lemmas are: 
>> [('Bake', 'bake'), ('it', 'it')] 

 Dependency tags are: 
>> [(('Bake', 'root'), 'root'), (('it', 'Bake'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 70 =================================

Minimize errors or some sort  of “loss function” to attain the  best approach to solve a task 


------------------- Sentence 1 -------------------

 Minimize errors or some sort  of “loss function” to attain the  best approach to solve a task 

Tokens are: 
>> ['Minimize', 'errors', 'or', 'some', 'sort', 'of', '“', 'loss', 'function', '”', 'to', 'attain', 'the', 'best', 'approach', 'to', 'solve', 'a', 'task'] 

 UPOS tags are: 
>> [('Minimize', 'VERB'), ('errors', 'NOUN'), ('or', 'CCONJ'), ('some', 'DET'), ('sort', 'NOUN'), ('of', 'ADP'), ('“', 'PUNCT'), ('loss', 'NOUN'), ('function', 'NOUN'), ('”', 'PUNCT'), ('to', 'PART'), ('attain', 'VERB'), ('the', 'DET'), ('best', 'ADJ'), ('approach', 'NOUN'), ('to', 'PART'), ('solve', 'VERB'), ('a', 'DET'), ('task', 'NOUN')] 

 XPOS tags are: 
>> [('Minimize', 'VB'), ('errors', 'NNS'), ('or', 'CC'), ('some', 'DT'), ('sort', 'NN'), ('of', 'IN'), ('“', '``'), ('loss', 'NN'), ('function', 'NN'), ('”', "''"), ('to', 'TO'), ('attain', 'VB'), ('the', 'DT'), ('best', 'JJS'), ('approach', 'NN'), ('to', 'TO'), ('solve', 'VB'), ('a', 'DT'), ('task', 'NN')] 

 Lemmas are: 
>> [('Minimize', 'minimize'), ('errors', 'error'), ('or', 'or'), ('some', 'some'), ('sort', 'sort'), ('of', 'of'), ('“', "''"), ('loss', 'loss'), ('function', 'function'), ('”', "''"), ('to', 'to'), ('attain', 'attain'), ('the', 'the'), ('best', 'good'), ('approach', 'approach'), ('to', 'to'), ('solve', 'solve'), ('a', 'a'), ('task', 'task')] 

 Dependency tags are: 
>> [(('Minimize', 'root'), 'root'), (('errors', 'Minimize'), 'obj'), (('or', 'sort'), 'cc'), (('some', 'sort'), 'det'), (('sort', 'errors'), 'conj'), (('of', 'function'), 'case'), (('“', 'function'), 'punct'), (('loss', 'function'), 'compound'), (('function', 'sort'), 'nmod'), (('”', 'function'), 'punct'), (('to', 'attain'), 'mark'), (('attain', 'Minimize'), 'advcl'), (('the', 'approach'), 'det'), (('best', 'approach'), 'amod'), (('approach', 'attain'), 'obj'), (('to', 'solve'), 'mark'), (('solve', 'approach'), 'acl'), (('a', 'task'), 'det'), (('task', 'solve'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 71 =================================

Minimize the number of  things/steps needed to take  


------------------- Sentence 1 -------------------

 Minimize the number of  things/steps needed to take 

Tokens are: 
>> ['Minimize', 'the', 'number', 'of', 'things', '/', 'steps', 'needed', 'to', 'take'] 

 UPOS tags are: 
>> [('Minimize', 'VERB'), ('the', 'DET'), ('number', 'NOUN'), ('of', 'ADP'), ('things', 'NOUN'), ('/', 'SYM'), ('steps', 'NOUN'), ('needed', 'VERB'), ('to', 'PART'), ('take', 'VERB')] 

 XPOS tags are: 
>> [('Minimize', 'VB'), ('the', 'DT'), ('number', 'NN'), ('of', 'IN'), ('things', 'NNS'), ('/', ','), ('steps', 'NNS'), ('needed', 'VBN'), ('to', 'TO'), ('take', 'VB')] 

 Lemmas are: 
>> [('Minimize', 'minimize'), ('the', 'the'), ('number', 'number'), ('of', 'of'), ('things', 'thing'), ('/', '/'), ('steps', 'step'), ('needed', 'need'), ('to', 'to'), ('take', 'take')] 

 Dependency tags are: 
>> [(('Minimize', 'root'), 'root'), (('the', 'number'), 'det'), (('number', 'Minimize'), 'obj'), (('of', 'things'), 'case'), (('things', 'number'), 'nmod'), (('/', 'steps'), 'cc'), (('steps', 'things'), 'conj'), (('needed', 'things'), 'acl'), (('to', 'take'), 'mark'), (('take', 'needed'), 'xcomp')]

 Named Entites are: 
>> []

================================ Paragraph 72 =================================

in order to serve the dish 


------------------- Sentence 1 -------------------

 in order to serve the dish 

Tokens are: 
>> ['in', 'order', 'to', 'serve', 'the', 'dish'] 

 UPOS tags are: 
>> [('in', 'ADP'), ('order', 'NOUN'), ('to', 'PART'), ('serve', 'VERB'), ('the', 'DET'), ('dish', 'NOUN')] 

 XPOS tags are: 
>> [('in', 'IN'), ('order', 'NN'), ('to', 'TO'), ('serve', 'VB'), ('the', 'DT'), ('dish', 'NN')] 

 Lemmas are: 
>> [('in', 'in'), ('order', 'order'), ('to', 'to'), ('serve', 'serve'), ('the', 'the'), ('dish', 'dish')] 

 Dependency tags are: 
>> [(('in', 'serve'), 'mark'), (('order', 'in'), 'fixed'), (('to', 'serve'), 'mark'), (('serve', 'root'), 'root'), (('the', 'dish'), 'det'), (('dish', 'serve'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 73 =================================

The algorithm learns from its  mistakes/errors, finds the  


------------------- Sentence 1 -------------------

 The algorithm learns from its  mistakes/errors, finds the 

Tokens are: 
>> ['The', 'algorithm', 'learns', 'from', 'its', 'mistakes', '/', 'errors', ',', 'finds', 'the'] 

 UPOS tags are: 
>> [('The', 'DET'), ('algorithm', 'NOUN'), ('learns', 'VERB'), ('from', 'ADP'), ('its', 'PRON'), ('mistakes', 'NOUN'), ('/', 'SYM'), ('errors', 'NOUN'), (',', 'PUNCT'), ('finds', 'VERB'), ('the', 'DET')] 

 XPOS tags are: 
>> [('The', 'DT'), ('algorithm', 'NN'), ('learns', 'VBZ'), ('from', 'IN'), ('its', 'PRP$'), ('mistakes', 'NNS'), ('/', ','), ('errors', 'NNS'), (',', ','), ('finds', 'VBZ'), ('the', 'DT')] 

 Lemmas are: 
>> [('The', 'the'), ('algorithm', 'algorithm'), ('learns', 'learn'), ('from', 'from'), ('its', 'its'), ('mistakes', 'mistake'), ('/', '/'), ('errors', 'error'), (',', ','), ('finds', 'find'), ('the', 'the')] 

 Dependency tags are: 
>> [(('The', 'algorithm'), 'det'), (('algorithm', 'learns'), 'nsubj'), (('learns', 'root'), 'root'), (('from', 'mistakes'), 'case'), (('its', 'mistakes'), 'nmod:poss'), (('mistakes', 'learns'), 'obl'), (('/', 'errors'), 'cc'), (('errors', 'mistakes'), 'conj'), ((',', 'finds'), 'punct'), (('finds', 'learns'), 'parataxis'), (('the', 'finds'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 74 =================================

best approach and generates  insights and rules that can be  


------------------- Sentence 1 -------------------

 best approach and generates  insights and rules that can be 

Tokens are: 
>> ['best', 'approach', 'and', 'generates', 'insights', 'and', 'rules', 'that', 'can', 'be'] 

 UPOS tags are: 
>> [('best', 'ADJ'), ('approach', 'NOUN'), ('and', 'CCONJ'), ('generates', 'VERB'), ('insights', 'NOUN'), ('and', 'CCONJ'), ('rules', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('be', 'AUX')] 

 XPOS tags are: 
>> [('best', 'JJS'), ('approach', 'NN'), ('and', 'CC'), ('generates', 'VBZ'), ('insights', 'NNS'), ('and', 'CC'), ('rules', 'NNS'), ('that', 'WDT'), ('can', 'MD'), ('be', 'VB')] 

 Lemmas are: 
>> [('best', 'good'), ('approach', 'approach'), ('and', 'and'), ('generates', 'generate'), ('insights', 'insight'), ('and', 'and'), ('rules', 'rule'), ('that', 'that'), ('can', 'can'), ('be', 'be')] 

 Dependency tags are: 
>> [(('best', 'approach'), 'amod'), (('approach', 'root'), 'root'), (('and', 'generates'), 'cc'), (('generates', 'approach'), 'conj'), (('insights', 'generates'), 'obj'), (('and', 'rules'), 'cc'), (('rules', 'insights'), 'conj'), (('that', 'be'), 'nsubj'), (('can', 'be'), 'aux'), (('be', 'insights'), 'acl:relcl')]

 Named Entites are: 
>> []

================================ Paragraph 75 =================================

used to make predictions 


------------------- Sentence 1 -------------------

 used to make predictions 

Tokens are: 
>> ['used', 'to', 'make', 'predictions'] 

 UPOS tags are: 
>> [('used', 'VERB'), ('to', 'PART'), ('make', 'VERB'), ('predictions', 'NOUN')] 

 XPOS tags are: 
>> [('used', 'VBN'), ('to', 'TO'), ('make', 'VB'), ('predictions', 'NNS')] 

 Lemmas are: 
>> [('used', 'use'), ('to', 'to'), ('make', 'make'), ('predictions', 'prediction')] 

 Dependency tags are: 
>> [(('used', 'root'), 'root'), (('to', 'make'), 'mark'), (('make', 'used'), 'xcomp'), (('predictions', 'make'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 76 =================================

Learn from your mistakes  the next time you attempt  


------------------- Sentence 1 -------------------

 Learn from your mistakes  the next time you attempt 

Tokens are: 
>> ['Learn', 'from', 'your', 'mistakes', 'the', 'next', 'time', 'you', 'attempt'] 

 UPOS tags are: 
>> [('Learn', 'VERB'), ('from', 'ADP'), ('your', 'PRON'), ('mistakes', 'NOUN'), ('the', 'DET'), ('next', 'ADJ'), ('time', 'NOUN'), ('you', 'PRON'), ('attempt', 'VERB')] 

 XPOS tags are: 
>> [('Learn', 'VB'), ('from', 'IN'), ('your', 'PRP$'), ('mistakes', 'NNS'), ('the', 'DT'), ('next', 'JJ'), ('time', 'NN'), ('you', 'PRP'), ('attempt', 'VBP')] 

 Lemmas are: 
>> [('Learn', 'learn'), ('from', 'from'), ('your', 'you'), ('mistakes', 'mistake'), ('the', 'the'), ('next', 'next'), ('time', 'time'), ('you', 'you'), ('attempt', 'attempt')] 

 Dependency tags are: 
>> [(('Learn', 'root'), 'root'), (('from', 'mistakes'), 'case'), (('your', 'mistakes'), 'nmod:poss'), (('mistakes', 'Learn'), 'obl'), (('the', 'time'), 'det'), (('next', 'time'), 'amod'), (('time', 'Learn'), 'obl:tmod'), (('you', 'attempt'), 'nsubj'), (('attempt', 'time'), 'acl:relcl')]

 Named Entites are: 
>> []

================================ Paragraph 77 =================================

the recipe 


------------------- Sentence 1 -------------------

 the recipe 

Tokens are: 
>> ['the', 'recipe'] 

 UPOS tags are: 
>> [('the', 'DET'), ('recipe', 'NOUN')] 

 XPOS tags are: 
>> [('the', 'DT'), ('recipe', 'NN')] 

 Lemmas are: 
>> [('the', 'the'), ('recipe', 'recipe')] 

 Dependency tags are: 
>> [(('the', 'recipe'), 'det'), (('recipe', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 78 =================================

Main objective 


------------------- Sentence 1 -------------------

 Main objective 

Tokens are: 
>> ['Main', 'objective'] 

 UPOS tags are: 
>> [('Main', 'ADJ'), ('objective', 'NOUN')] 

 XPOS tags are: 
>> [('Main', 'JJ'), ('objective', 'NN')] 

 Lemmas are: 
>> [('Main', 'Main'), ('objective', 'objective')] 

 Dependency tags are: 
>> [(('Main', 'objective'), 'amod'), (('objective', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 79 =================================

Insight/ result 


------------------- Sentence 1 -------------------

 Insight/ result 

Tokens are: 
>> ['Insight', '/', 'result'] 

 UPOS tags are: 
>> [('Insight', 'NOUN'), ('/', 'SYM'), ('result', 'NOUN')] 

 XPOS tags are: 
>> [('Insight', 'NN'), ('/', ','), ('result', 'NN')] 

 Lemmas are: 
>> [('Insight', 'insight'), ('/', '/'), ('result', 'result')] 

 Dependency tags are: 
>> [(('Insight', 'root'), 'root'), (('/', 'result'), 'cc'), (('result', 'Insight'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 80 =================================

Machine learning Recipe Analogy


------------------- Sentence 1 -------------------

 Machine learning Recipe Analogy 

Tokens are: 
>> ['Machine', 'learning', 'Recipe', 'Analogy'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('learning', 'NOUN'), ('Recipe', 'NOUN'), ('Analogy', 'NOUN')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('learning', 'NN'), ('Recipe', 'NN'), ('Analogy', 'NN')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('learning', 'learning'), ('Recipe', 'recipe'), ('Analogy', 'analogy')] 

 Dependency tags are: 
>> [(('Machine', 'Analogy'), 'compound'), (('learning', 'Recipe'), 'compound'), (('Recipe', 'Analogy'), 'compound'), (('Analogy', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 81 =================================

6/14Demystifying data science  


------------------- Sentence 1 -------------------

 6/14 

Tokens are: 
>> ['6/14'] 

 UPOS tags are: 
>> [('6/14', 'NUM')] 

 XPOS tags are: 
>> [('6/14', 'CD')] 

 Lemmas are: 
>> [('6/14', '6/14')] 

 Dependency tags are: 
>> [(('6/14', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Demystifying data science 

Tokens are: 
>> ['Demystifying', 'data', 'science'] 

 UPOS tags are: 
>> [('Demystifying', 'VERB'), ('data', 'NOUN'), ('science', 'NOUN')] 

 XPOS tags are: 
>> [('Demystifying', 'VBG'), ('data', 'NN'), ('science', 'NN')] 

 Lemmas are: 
>> [('Demystifying', 'demystify'), ('data', 'datum'), ('science', 'science')] 

 Dependency tags are: 
>> [(('Demystifying', 'root'), 'root'), (('data', 'science'), 'compound'), (('science', 'Demystifying'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 82 =================================

How can an organization derive business value from AI   and analytics?  There are some common questions organizations consider when appealing  to their customer base: Who are the customers? What do they want? How can  the organization provide the best customer experience to gain a competitive  advantage? Data analytics help answer these business questions.  


------------------- Sentence 1 -------------------

 How can an organization derive business value from AI   and analytics? 

Tokens are: 
>> ['How', 'can', 'an', 'organization', 'derive', 'business', 'value', 'from', 'AI', 'and', 'analytics', '?'] 

 UPOS tags are: 
>> [('How', 'ADV'), ('can', 'AUX'), ('an', 'DET'), ('organization', 'NOUN'), ('derive', 'VERB'), ('business', 'NOUN'), ('value', 'NOUN'), ('from', 'ADP'), ('AI', 'NOUN'), ('and', 'CCONJ'), ('analytics', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('How', 'WRB'), ('can', 'MD'), ('an', 'DT'), ('organization', 'NN'), ('derive', 'VB'), ('business', 'NN'), ('value', 'NN'), ('from', 'IN'), ('AI', 'NN'), ('and', 'CC'), ('analytics', 'NNS'), ('?', '.')] 

 Lemmas are: 
>> [('How', 'how'), ('can', 'can'), ('an', 'a'), ('organization', 'organization'), ('derive', 'derive'), ('business', 'business'), ('value', 'value'), ('from', 'from'), ('AI', 'ai'), ('and', 'and'), ('analytics', 'analytic'), ('?', '?')] 

 Dependency tags are: 
>> [(('How', 'derive'), 'advmod'), (('can', 'derive'), 'aux'), (('an', 'organization'), 'det'), (('organization', 'derive'), 'nsubj'), (('derive', 'root'), 'root'), (('business', 'value'), 'compound'), (('value', 'derive'), 'obj'), (('from', 'AI'), 'case'), (('AI', 'derive'), 'obl'), (('and', 'analytics'), 'cc'), (('analytics', 'AI'), 'conj'), (('?', 'derive'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 There are some common questions organizations consider when appealing  to their customer base: 

Tokens are: 
>> ['There', 'are', 'some', 'common', 'questions', 'organizations', 'consider', 'when', 'appealing', 'to', 'their', 'customer', 'base', ':'] 

 UPOS tags are: 
>> [('There', 'PRON'), ('are', 'VERB'), ('some', 'DET'), ('common', 'ADJ'), ('questions', 'NOUN'), ('organizations', 'NOUN'), ('consider', 'VERB'), ('when', 'SCONJ'), ('appealing', 'ADJ'), ('to', 'ADP'), ('their', 'PRON'), ('customer', 'NOUN'), ('base', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('There', 'EX'), ('are', 'VBP'), ('some', 'DT'), ('common', 'JJ'), ('questions', 'NNS'), ('organizations', 'NNS'), ('consider', 'VB'), ('when', 'WRB'), ('appealing', 'JJ'), ('to', 'IN'), ('their', 'PRP$'), ('customer', 'NN'), ('base', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('There', 'there'), ('are', 'be'), ('some', 'some'), ('common', 'common'), ('questions', 'question'), ('organizations', 'organization'), ('consider', 'consider'), ('when', 'when'), ('appealing', 'appealing'), ('to', 'to'), ('their', 'they'), ('customer', 'customer'), ('base', 'base'), (':', ':')] 

 Dependency tags are: 
>> [(('There', 'are'), 'expl'), (('are', 'root'), 'root'), (('some', 'organizations'), 'det'), (('common', 'organizations'), 'amod'), (('questions', 'organizations'), 'compound'), (('organizations', 'are'), 'nsubj'), (('consider', 'organizations'), 'acl'), (('when', 'appealing'), 'mark'), (('appealing', 'consider'), 'advcl'), (('to', 'base'), 'case'), (('their', 'base'), 'nmod:poss'), (('customer', 'base'), 'compound'), (('base', 'appealing'), 'obl'), ((':', 'are'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Who are the customers? 

Tokens are: 
>> ['Who', 'are', 'the', 'customers', '?'] 

 UPOS tags are: 
>> [('Who', 'PRON'), ('are', 'AUX'), ('the', 'DET'), ('customers', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Who', 'WP'), ('are', 'VBP'), ('the', 'DT'), ('customers', 'NNS'), ('?', '.')] 

 Lemmas are: 
>> [('Who', 'who'), ('are', 'be'), ('the', 'the'), ('customers', 'customer'), ('?', '?')] 

 Dependency tags are: 
>> [(('Who', 'root'), 'root'), (('are', 'Who'), 'cop'), (('the', 'customers'), 'det'), (('customers', 'Who'), 'nsubj'), (('?', 'Who'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 What do they want? 

Tokens are: 
>> ['What', 'do', 'they', 'want', '?'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('do', 'AUX'), ('they', 'PRON'), ('want', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('do', 'VBP'), ('they', 'PRP'), ('want', 'VB'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('do', 'do'), ('they', 'they'), ('want', 'want'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'want'), 'obj'), (('do', 'want'), 'aux'), (('they', 'want'), 'nsubj'), (('want', 'root'), 'root'), (('?', 'want'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 How can  the organization provide the best customer experience to gain a competitive  advantage? 

Tokens are: 
>> ['How', 'can', 'the', 'organization', 'provide', 'the', 'best', 'customer', 'experience', 'to', 'gain', 'a', 'competitive', 'advantage', '?'] 

 UPOS tags are: 
>> [('How', 'ADV'), ('can', 'AUX'), ('the', 'DET'), ('organization', 'NOUN'), ('provide', 'VERB'), ('the', 'DET'), ('best', 'ADJ'), ('customer', 'NOUN'), ('experience', 'NOUN'), ('to', 'PART'), ('gain', 'VERB'), ('a', 'DET'), ('competitive', 'ADJ'), ('advantage', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('How', 'WRB'), ('can', 'MD'), ('the', 'DT'), ('organization', 'NN'), ('provide', 'VB'), ('the', 'DT'), ('best', 'JJS'), ('customer', 'NN'), ('experience', 'NN'), ('to', 'TO'), ('gain', 'VB'), ('a', 'DT'), ('competitive', 'JJ'), ('advantage', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('How', 'how'), ('can', 'can'), ('the', 'the'), ('organization', 'organization'), ('provide', 'provide'), ('the', 'the'), ('best', 'good'), ('customer', 'customer'), ('experience', 'experience'), ('to', 'to'), ('gain', 'gain'), ('a', 'a'), ('competitive', 'competitive'), ('advantage', 'advantage'), ('?', '?')] 

 Dependency tags are: 
>> [(('How', 'provide'), 'advmod'), (('can', 'provide'), 'aux'), (('the', 'organization'), 'det'), (('organization', 'provide'), 'nsubj'), (('provide', 'root'), 'root'), (('the', 'experience'), 'det'), (('best', 'experience'), 'amod'), (('customer', 'experience'), 'compound'), (('experience', 'provide'), 'obj'), (('to', 'gain'), 'mark'), (('gain', 'experience'), 'acl'), (('a', 'advantage'), 'det'), (('competitive', 'advantage'), 'amod'), (('advantage', 'gain'), 'obj'), (('?', 'provide'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 Data analytics help answer these business questions. 

Tokens are: 
>> ['Data', 'analytics', 'help', 'answer', 'these', 'business', 'questions', '.'] 

 UPOS tags are: 
>> [('Data', 'NOUN'), ('analytics', 'NOUN'), ('help', 'NOUN'), ('answer', 'VERB'), ('these', 'DET'), ('business', 'NOUN'), ('questions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Data', 'NN'), ('analytics', 'NNS'), ('help', 'NN'), ('answer', 'VB'), ('these', 'DT'), ('business', 'NN'), ('questions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Data', 'data'), ('analytics', 'analytic'), ('help', 'help'), ('answer', 'answer'), ('these', 'this'), ('business', 'business'), ('questions', 'question'), ('.', '.')] 

 Dependency tags are: 
>> [(('Data', 'analytics'), 'compound'), (('analytics', 'help'), 'compound'), (('help', 'answer'), 'nsubj'), (('answer', 'root'), 'root'), (('these', 'questions'), 'det'), (('business', 'questions'), 'compound'), (('questions', 'answer'), 'obj'), (('.', 'answer'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 83 =================================

Data analytics is the science of analyzing raw data to draw conclusions from that  information. Data analytics techniques can reveal trends and metrics that would  otherwise be lost in a mass of information. This information can then be utilized  to optimize processes to increase the overall efficiency of a business or system.  Data analytics techniques can be broken down into four main types based on the  difficulty of analysis and business value. 


------------------- Sentence 1 -------------------

 Data analytics is the science of analyzing raw data to draw conclusions from that  information. 

Tokens are: 
>> ['Data', 'analytics', 'is', 'the', 'science', 'of', 'analyzing', 'raw', 'data', 'to', 'draw', 'conclusions', 'from', 'that', 'information', '.'] 

 UPOS tags are: 
>> [('Data', 'NOUN'), ('analytics', 'NOUN'), ('is', 'AUX'), ('the', 'DET'), ('science', 'NOUN'), ('of', 'SCONJ'), ('analyzing', 'VERB'), ('raw', 'ADJ'), ('data', 'NOUN'), ('to', 'PART'), ('draw', 'VERB'), ('conclusions', 'NOUN'), ('from', 'ADP'), ('that', 'DET'), ('information', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Data', 'NN'), ('analytics', 'NNS'), ('is', 'VBZ'), ('the', 'DT'), ('science', 'NN'), ('of', 'IN'), ('analyzing', 'VBG'), ('raw', 'JJ'), ('data', 'NNS'), ('to', 'TO'), ('draw', 'VB'), ('conclusions', 'NNS'), ('from', 'IN'), ('that', 'DT'), ('information', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Data', 'data'), ('analytics', 'analytic'), ('is', 'be'), ('the', 'the'), ('science', 'science'), ('of', 'of'), ('analyzing', 'analyze'), ('raw', 'raw'), ('data', 'datum'), ('to', 'to'), ('draw', 'draw'), ('conclusions', 'conclusion'), ('from', 'from'), ('that', 'that'), ('information', 'information'), ('.', '.')] 

 Dependency tags are: 
>> [(('Data', 'analytics'), 'compound'), (('analytics', 'science'), 'nsubj'), (('is', 'science'), 'cop'), (('the', 'science'), 'det'), (('science', 'root'), 'root'), (('of', 'analyzing'), 'mark'), (('analyzing', 'science'), 'acl'), (('raw', 'data'), 'amod'), (('data', 'analyzing'), 'obj'), (('to', 'draw'), 'mark'), (('draw', 'analyzing'), 'advcl'), (('conclusions', 'draw'), 'obj'), (('from', 'information'), 'case'), (('that', 'information'), 'det'), (('information', 'draw'), 'obl'), (('.', 'science'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Data analytics techniques can reveal trends and metrics that would  otherwise be lost in a mass of information. 

Tokens are: 
>> ['Data', 'analytics', 'techniques', 'can', 'reveal', 'trends', 'and', 'metrics', 'that', 'would', 'otherwise', 'be', 'lost', 'in', 'a', 'mass', 'of', 'information', '.'] 

 UPOS tags are: 
>> [('Data', 'NOUN'), ('analytics', 'NOUN'), ('techniques', 'NOUN'), ('can', 'AUX'), ('reveal', 'VERB'), ('trends', 'NOUN'), ('and', 'CCONJ'), ('metrics', 'NOUN'), ('that', 'PRON'), ('would', 'AUX'), ('otherwise', 'ADV'), ('be', 'AUX'), ('lost', 'VERB'), ('in', 'ADP'), ('a', 'DET'), ('mass', 'NOUN'), ('of', 'ADP'), ('information', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Data', 'NN'), ('analytics', 'NNS'), ('techniques', 'NNS'), ('can', 'MD'), ('reveal', 'VB'), ('trends', 'NNS'), ('and', 'CC'), ('metrics', 'NNS'), ('that', 'WDT'), ('would', 'MD'), ('otherwise', 'RB'), ('be', 'VB'), ('lost', 'VBN'), ('in', 'IN'), ('a', 'DT'), ('mass', 'NN'), ('of', 'IN'), ('information', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Data', 'data'), ('analytics', 'analytic'), ('techniques', 'technique'), ('can', 'can'), ('reveal', 'reveal'), ('trends', 'trend'), ('and', 'and'), ('metrics', 'metric'), ('that', 'that'), ('would', 'would'), ('otherwise', 'otherwise'), ('be', 'be'), ('lost', 'lose'), ('in', 'in'), ('a', 'a'), ('mass', 'mass'), ('of', 'of'), ('information', 'information'), ('.', '.')] 

 Dependency tags are: 
>> [(('Data', 'analytics'), 'compound'), (('analytics', 'techniques'), 'compound'), (('techniques', 'reveal'), 'nsubj'), (('can', 'reveal'), 'aux'), (('reveal', 'root'), 'root'), (('trends', 'reveal'), 'obj'), (('and', 'metrics'), 'cc'), (('metrics', 'trends'), 'conj'), (('that', 'lost'), 'nsubj:pass'), (('would', 'lost'), 'aux'), (('otherwise', 'lost'), 'advmod'), (('be', 'lost'), 'aux:pass'), (('lost', 'trends'), 'acl:relcl'), (('in', 'mass'), 'case'), (('a', 'mass'), 'det'), (('mass', 'lost'), 'obl'), (('of', 'information'), 'case'), (('information', 'mass'), 'nmod'), (('.', 'reveal'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 This information can then be utilized  to optimize processes to increase the overall efficiency of a business or system. 

Tokens are: 
>> ['This', 'information', 'can', 'then', 'be', 'utilized', 'to', 'optimize', 'processes', 'to', 'increase', 'the', 'overall', 'efficiency', 'of', 'a', 'business', 'or', 'system', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('information', 'NOUN'), ('can', 'AUX'), ('then', 'ADV'), ('be', 'AUX'), ('utilized', 'VERB'), ('to', 'PART'), ('optimize', 'VERB'), ('processes', 'NOUN'), ('to', 'PART'), ('increase', 'VERB'), ('the', 'DET'), ('overall', 'ADJ'), ('efficiency', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('business', 'NOUN'), ('or', 'CCONJ'), ('system', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('information', 'NN'), ('can', 'MD'), ('then', 'RB'), ('be', 'VB'), ('utilized', 'VBN'), ('to', 'TO'), ('optimize', 'VB'), ('processes', 'NNS'), ('to', 'TO'), ('increase', 'VB'), ('the', 'DT'), ('overall', 'JJ'), ('efficiency', 'NN'), ('of', 'IN'), ('a', 'DT'), ('business', 'NN'), ('or', 'CC'), ('system', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('information', 'information'), ('can', 'can'), ('then', 'then'), ('be', 'be'), ('utilized', 'utilize'), ('to', 'to'), ('optimize', 'optimize'), ('processes', 'process'), ('to', 'to'), ('increase', 'increase'), ('the', 'the'), ('overall', 'overall'), ('efficiency', 'efficiency'), ('of', 'of'), ('a', 'a'), ('business', 'business'), ('or', 'or'), ('system', 'system'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'information'), 'det'), (('information', 'utilized'), 'nsubj:pass'), (('can', 'utilized'), 'aux'), (('then', 'utilized'), 'advmod'), (('be', 'utilized'), 'aux:pass'), (('utilized', 'root'), 'root'), (('to', 'optimize'), 'mark'), (('optimize', 'utilized'), 'xcomp'), (('processes', 'optimize'), 'obj'), (('to', 'increase'), 'mark'), (('increase', 'processes'), 'acl'), (('the', 'efficiency'), 'det'), (('overall', 'efficiency'), 'amod'), (('efficiency', 'increase'), 'obj'), (('of', 'business'), 'case'), (('a', 'business'), 'det'), (('business', 'efficiency'), 'nmod'), (('or', 'system'), 'cc'), (('system', 'business'), 'conj'), (('.', 'utilized'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Data analytics techniques can be broken down into four main types based on the  difficulty of analysis and business value. 

Tokens are: 
>> ['Data', 'analytics', 'techniques', 'can', 'be', 'broken', 'down', 'into', 'four', 'main', 'types', 'based', 'on', 'the', 'difficulty', 'of', 'analysis', 'and', 'business', 'value', '.'] 

 UPOS tags are: 
>> [('Data', 'NOUN'), ('analytics', 'NOUN'), ('techniques', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('broken', 'VERB'), ('down', 'ADP'), ('into', 'ADP'), ('four', 'NUM'), ('main', 'ADJ'), ('types', 'NOUN'), ('based', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('difficulty', 'NOUN'), ('of', 'ADP'), ('analysis', 'NOUN'), ('and', 'CCONJ'), ('business', 'NOUN'), ('value', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Data', 'NN'), ('analytics', 'NNS'), ('techniques', 'NNS'), ('can', 'MD'), ('be', 'VB'), ('broken', 'VBN'), ('down', 'RP'), ('into', 'IN'), ('four', 'CD'), ('main', 'JJ'), ('types', 'NNS'), ('based', 'VBN'), ('on', 'IN'), ('the', 'DT'), ('difficulty', 'NN'), ('of', 'IN'), ('analysis', 'NN'), ('and', 'CC'), ('business', 'NN'), ('value', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Data', 'data'), ('analytics', 'analytic'), ('techniques', 'technique'), ('can', 'can'), ('be', 'be'), ('broken', 'break'), ('down', 'down'), ('into', 'into'), ('four', 'four'), ('main', 'main'), ('types', 'type'), ('based', 'base'), ('on', 'on'), ('the', 'the'), ('difficulty', 'difficulty'), ('of', 'of'), ('analysis', 'analysis'), ('and', 'and'), ('business', 'business'), ('value', 'value'), ('.', '.')] 

 Dependency tags are: 
>> [(('Data', 'analytics'), 'compound'), (('analytics', 'techniques'), 'compound'), (('techniques', 'broken'), 'nsubj:pass'), (('can', 'broken'), 'aux'), (('be', 'broken'), 'aux:pass'), (('broken', 'root'), 'root'), (('down', 'broken'), 'compound:prt'), (('into', 'types'), 'case'), (('four', 'types'), 'nummod'), (('main', 'types'), 'amod'), (('types', 'broken'), 'obl'), (('based', 'types'), 'acl'), (('on', 'difficulty'), 'case'), (('the', 'difficulty'), 'det'), (('difficulty', 'based'), 'obl'), (('of', 'analysis'), 'case'), (('analysis', 'difficulty'), 'nmod'), (('and', 'value'), 'cc'), (('business', 'value'), 'compound'), (('value', 'analysis'), 'conj'), (('.', 'broken'), 'punct')]

 Named Entites are: 
>> [('four', 'CARDINAL')]

================================ Paragraph 84 =================================

a.  Descriptive analytics parses raw historical data and draws conclusion that help  managers, investors and others determine why business changes occurred.   


------------------- Sentence 1 -------------------

 a. 

Tokens are: 
>> ['a', '.'] 

 UPOS tags are: 
>> [('a', 'DET'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('a', 'DT'), ('.', '.')] 

 Lemmas are: 
>> [('a', 'a'), ('.', '.')] 

 Dependency tags are: 
>> [(('a', 'root'), 'root'), (('.', 'a'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Descriptive analytics parses raw historical data and draws conclusion that help  managers, investors and others determine why business changes occurred. 

Tokens are: 
>> ['Descriptive', 'analytics', 'parses', 'raw', 'historical', 'data', 'and', 'draws', 'conclusion', 'that', 'help', 'managers', ',', 'investors', 'and', 'others', 'determine', 'why', 'business', 'changes', 'occurred', '.'] 

 UPOS tags are: 
>> [('Descriptive', 'ADJ'), ('analytics', 'NOUN'), ('parses', 'VERB'), ('raw', 'ADJ'), ('historical', 'ADJ'), ('data', 'NOUN'), ('and', 'CCONJ'), ('draws', 'VERB'), ('conclusion', 'NOUN'), ('that', 'PRON'), ('help', 'VERB'), ('managers', 'NOUN'), (',', 'PUNCT'), ('investors', 'NOUN'), ('and', 'CCONJ'), ('others', 'NOUN'), ('determine', 'VERB'), ('why', 'SCONJ'), ('business', 'NOUN'), ('changes', 'NOUN'), ('occurred', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Descriptive', 'JJ'), ('analytics', 'NN'), ('parses', 'VBZ'), ('raw', 'JJ'), ('historical', 'JJ'), ('data', 'NNS'), ('and', 'CC'), ('draws', 'VBZ'), ('conclusion', 'NN'), ('that', 'WDT'), ('help', 'VBP'), ('managers', 'NNS'), (',', ','), ('investors', 'NNS'), ('and', 'CC'), ('others', 'NNS'), ('determine', 'VBP'), ('why', 'WRB'), ('business', 'NN'), ('changes', 'NNS'), ('occurred', 'VBD'), ('.', '.')] 

 Lemmas are: 
>> [('Descriptive', 'Descriptive'), ('analytics', 'analytic'), ('parses', 'parse'), ('raw', 'raw'), ('historical', 'historical'), ('data', 'datum'), ('and', 'and'), ('draws', 'draw'), ('conclusion', 'conclusion'), ('that', 'that'), ('help', 'help'), ('managers', 'manager'), (',', ','), ('investors', 'investor'), ('and', 'and'), ('others', 'other'), ('determine', 'determine'), ('why', 'why'), ('business', 'business'), ('changes', 'change'), ('occurred', 'occur'), ('.', '.')] 

 Dependency tags are: 
>> [(('Descriptive', 'analytics'), 'amod'), (('analytics', 'parses'), 'nsubj'), (('parses', 'root'), 'root'), (('raw', 'data'), 'amod'), (('historical', 'data'), 'amod'), (('data', 'parses'), 'obj'), (('and', 'draws'), 'cc'), (('draws', 'parses'), 'conj'), (('conclusion', 'draws'), 'obj'), (('that', 'help'), 'nsubj'), (('help', 'conclusion'), 'acl:relcl'), (('managers', 'help'), 'obj'), ((',', 'investors'), 'punct'), (('investors', 'managers'), 'conj'), (('and', 'others'), 'cc'), (('others', 'managers'), 'conj'), (('determine', 'help'), 'conj'), (('why', 'occurred'), 'mark'), (('business', 'changes'), 'compound'), (('changes', 'occurred'), 'nsubj'), (('occurred', 'determine'), 'ccomp'), (('.', 'parses'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 85 =================================

b.  Diagnostic analytics provides an understanding of why events took place  by examining data. A type of advanced analytics, techniques include data  discovery and mining, correlation analysis and drill-down.  


------------------- Sentence 1 -------------------

 b. 

Tokens are: 
>> ['b.'] 

 UPOS tags are: 
>> [('b.', 'X')] 

 XPOS tags are: 
>> [('b.', 'LS')] 

 Lemmas are: 
>> [('b.', 'b.')] 

 Dependency tags are: 
>> [(('b.', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Diagnostic analytics provides an understanding of why events took place  by examining data. 

Tokens are: 
>> ['Diagnostic', 'analytics', 'provides', 'an', 'understanding', 'of', 'why', 'events', 'took', 'place', 'by', 'examining', 'data', '.'] 

 UPOS tags are: 
>> [('Diagnostic', 'ADJ'), ('analytics', 'NOUN'), ('provides', 'VERB'), ('an', 'DET'), ('understanding', 'NOUN'), ('of', 'ADP'), ('why', 'SCONJ'), ('events', 'NOUN'), ('took', 'VERB'), ('place', 'NOUN'), ('by', 'SCONJ'), ('examining', 'VERB'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Diagnostic', 'JJ'), ('analytics', 'NN'), ('provides', 'VBZ'), ('an', 'DT'), ('understanding', 'NN'), ('of', 'IN'), ('why', 'WRB'), ('events', 'NNS'), ('took', 'VBD'), ('place', 'NN'), ('by', 'IN'), ('examining', 'VBG'), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Diagnostic', 'Diagnostic'), ('analytics', 'analytic'), ('provides', 'provide'), ('an', 'a'), ('understanding', 'understanding'), ('of', 'of'), ('why', 'why'), ('events', 'event'), ('took', 'take'), ('place', 'place'), ('by', 'by'), ('examining', 'examine'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('Diagnostic', 'analytics'), 'amod'), (('analytics', 'provides'), 'nsubj'), (('provides', 'root'), 'root'), (('an', 'understanding'), 'det'), (('understanding', 'provides'), 'obj'), (('of', 'why'), 'case'), (('why', 'understanding'), 'nmod'), (('events', 'took'), 'nsubj'), (('took', 'why'), 'acl:relcl'), (('place', 'took'), 'obj'), (('by', 'examining'), 'mark'), (('examining', 'took'), 'advcl'), (('data', 'examining'), 'obj'), (('.', 'provides'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 A type of advanced analytics, techniques include data  discovery and mining, correlation analysis and drill-down. 

Tokens are: 
>> ['A', 'type', 'of', 'advanced', 'analytics', ',', 'techniques', 'include', 'data', 'discovery', 'and', 'mining', ',', 'correlation', 'analysis', 'and', 'drill', '-', 'down', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('type', 'NOUN'), ('of', 'ADP'), ('advanced', 'ADJ'), ('analytics', 'NOUN'), (',', 'PUNCT'), ('techniques', 'NOUN'), ('include', 'VERB'), ('data', 'NOUN'), ('discovery', 'NOUN'), ('and', 'CCONJ'), ('mining', 'NOUN'), (',', 'PUNCT'), ('correlation', 'NOUN'), ('analysis', 'NOUN'), ('and', 'CCONJ'), ('drill', 'NOUN'), ('-', 'PUNCT'), ('down', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('type', 'NN'), ('of', 'IN'), ('advanced', 'JJ'), ('analytics', 'NNS'), (',', ','), ('techniques', 'NNS'), ('include', 'VBP'), ('data', 'NN'), ('discovery', 'NN'), ('and', 'CC'), ('mining', 'NN'), (',', ','), ('correlation', 'NN'), ('analysis', 'NN'), ('and', 'CC'), ('drill', 'NN'), ('-', 'HYPH'), ('down', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('type', 'type'), ('of', 'of'), ('advanced', 'advanced'), ('analytics', 'analytic'), (',', ','), ('techniques', 'technique'), ('include', 'include'), ('data', 'datum'), ('discovery', 'discovery'), ('and', 'and'), ('mining', 'mining'), (',', ','), ('correlation', 'correlation'), ('analysis', 'analysis'), ('and', 'and'), ('drill', 'drill'), ('-', '-'), ('down', 'down'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'type'), 'det'), (('type', 'include'), 'nsubj'), (('of', 'analytics'), 'case'), (('advanced', 'analytics'), 'amod'), (('analytics', 'type'), 'nmod'), ((',', 'techniques'), 'punct'), (('techniques', 'analytics'), 'conj'), (('include', 'root'), 'root'), (('data', 'discovery'), 'compound'), (('discovery', 'include'), 'obj'), (('and', 'mining'), 'cc'), (('mining', 'discovery'), 'conj'), ((',', 'analysis'), 'punct'), (('correlation', 'analysis'), 'compound'), (('analysis', 'discovery'), 'conj'), (('and', 'down'), 'cc'), (('drill', 'down'), 'compound'), (('-', 'down'), 'punct'), (('down', 'discovery'), 'conj'), (('.', 'include'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 86 =================================

c.  Predictive analytics uses statistics and modeling to predict future behavior. Using  data patterns, predictive analytics identifies when patterns are likely to reoccur  to identify and prevent potential risks, take advantage of future opportunities or  advantageously reallocate resources.  


------------------- Sentence 1 -------------------

 c. 

Tokens are: 
>> ['c', '.'] 

 UPOS tags are: 
>> [('c', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('c', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('c', 'c'), ('.', '.')] 

 Dependency tags are: 
>> [(('c', 'root'), 'root'), (('.', 'c'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Predictive analytics uses statistics and modeling to predict future behavior. 

Tokens are: 
>> ['Predictive', 'analytics', 'uses', 'statistics', 'and', 'modeling', 'to', 'predict', 'future', 'behavior', '.'] 

 UPOS tags are: 
>> [('Predictive', 'ADJ'), ('analytics', 'NOUN'), ('uses', 'VERB'), ('statistics', 'NOUN'), ('and', 'CCONJ'), ('modeling', 'NOUN'), ('to', 'PART'), ('predict', 'VERB'), ('future', 'ADJ'), ('behavior', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Predictive', 'JJ'), ('analytics', 'NNS'), ('uses', 'VBZ'), ('statistics', 'NNS'), ('and', 'CC'), ('modeling', 'NN'), ('to', 'TO'), ('predict', 'VB'), ('future', 'JJ'), ('behavior', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Predictive', 'predictive'), ('analytics', 'analytic'), ('uses', 'use'), ('statistics', 'statistic'), ('and', 'and'), ('modeling', 'modeling'), ('to', 'to'), ('predict', 'predict'), ('future', 'future'), ('behavior', 'behavior'), ('.', '.')] 

 Dependency tags are: 
>> [(('Predictive', 'analytics'), 'amod'), (('analytics', 'uses'), 'nsubj'), (('uses', 'root'), 'root'), (('statistics', 'uses'), 'obj'), (('and', 'modeling'), 'cc'), (('modeling', 'statistics'), 'conj'), (('to', 'predict'), 'mark'), (('predict', 'uses'), 'advcl'), (('future', 'behavior'), 'amod'), (('behavior', 'predict'), 'obj'), (('.', 'uses'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Using  data patterns, predictive analytics identifies when patterns are likely to reoccur  to identify and prevent potential risks, take advantage of future opportunities or  advantageously reallocate resources. 

Tokens are: 
>> ['Using', 'data', 'patterns', ',', 'predictive', 'analytics', 'identifies', 'when', 'patterns', 'are', 'likely', 'to', 'reoccur', 'to', 'identify', 'and', 'prevent', 'potential', 'risks', ',', 'take', 'advantage', 'of', 'future', 'opportunities', 'or', 'advantageously', 'reallocate', 'resources', '.'] 

 UPOS tags are: 
>> [('Using', 'VERB'), ('data', 'NOUN'), ('patterns', 'NOUN'), (',', 'PUNCT'), ('predictive', 'ADJ'), ('analytics', 'NOUN'), ('identifies', 'VERB'), ('when', 'SCONJ'), ('patterns', 'NOUN'), ('are', 'AUX'), ('likely', 'ADJ'), ('to', 'PART'), ('reoccur', 'VERB'), ('to', 'PART'), ('identify', 'VERB'), ('and', 'CCONJ'), ('prevent', 'VERB'), ('potential', 'ADJ'), ('risks', 'NOUN'), (',', 'PUNCT'), ('take', 'VERB'), ('advantage', 'NOUN'), ('of', 'ADP'), ('future', 'ADJ'), ('opportunities', 'NOUN'), ('or', 'CCONJ'), ('advantageously', 'ADV'), ('reallocate', 'VERB'), ('resources', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Using', 'VBG'), ('data', 'NN'), ('patterns', 'NNS'), (',', ','), ('predictive', 'JJ'), ('analytics', 'NNS'), ('identifies', 'VBZ'), ('when', 'WRB'), ('patterns', 'NNS'), ('are', 'VBP'), ('likely', 'JJ'), ('to', 'TO'), ('reoccur', 'VB'), ('to', 'TO'), ('identify', 'VB'), ('and', 'CC'), ('prevent', 'VB'), ('potential', 'JJ'), ('risks', 'NNS'), (',', ','), ('take', 'VB'), ('advantage', 'NN'), ('of', 'IN'), ('future', 'JJ'), ('opportunities', 'NNS'), ('or', 'CC'), ('advantageously', 'RB'), ('reallocate', 'VB'), ('resources', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Using', 'use'), ('data', 'datum'), ('patterns', 'pattern'), (',', ','), ('predictive', 'predictive'), ('analytics', 'analytic'), ('identifies', 'identify'), ('when', 'when'), ('patterns', 'pattern'), ('are', 'be'), ('likely', 'likely'), ('to', 'to'), ('reoccur', 'reoccur'), ('to', 'to'), ('identify', 'identify'), ('and', 'and'), ('prevent', 'prevent'), ('potential', 'potential'), ('risks', 'risk'), (',', ','), ('take', 'take'), ('advantage', 'advantage'), ('of', 'of'), ('future', 'future'), ('opportunities', 'opportunity'), ('or', 'or'), ('advantageously', 'advantageously'), ('reallocate', 'reallocate'), ('resources', 'resource'), ('.', '.')] 

 Dependency tags are: 
>> [(('Using', 'identifies'), 'advcl'), (('data', 'patterns'), 'compound'), (('patterns', 'Using'), 'obj'), ((',', 'Using'), 'punct'), (('predictive', 'analytics'), 'amod'), (('analytics', 'identifies'), 'nsubj'), (('identifies', 'root'), 'root'), (('when', 'likely'), 'mark'), (('patterns', 'likely'), 'nsubj'), (('are', 'likely'), 'cop'), (('likely', 'identifies'), 'advcl'), (('to', 'reoccur'), 'mark'), (('reoccur', 'likely'), 'xcomp'), (('to', 'identify'), 'mark'), (('identify', 'reoccur'), 'xcomp'), (('and', 'prevent'), 'cc'), (('prevent', 'identify'), 'conj'), (('potential', 'risks'), 'amod'), (('risks', 'identify'), 'obj'), ((',', 'take'), 'punct'), (('take', 'identifies'), 'conj'), (('advantage', 'take'), 'obj'), (('of', 'opportunities'), 'case'), (('future', 'opportunities'), 'amod'), (('opportunities', 'advantage'), 'nmod'), (('or', 'reallocate'), 'cc'), (('advantageously', 'reallocate'), 'advmod'), (('reallocate', 'take'), 'conj'), (('resources', 'reallocate'), 'obj'), (('.', 'identifies'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 87 =================================

d.  Prescriptive analytics uses machine learning to analyze raw data to help  organizations make better decision and take a proper course of action. Factoring  in possible scenarios, available resources, past performance and current  performance, prescriptive analytics help determine the best course of action in  a situation. 


------------------- Sentence 1 -------------------

 d. 

Tokens are: 
>> ['d', '.'] 

 UPOS tags are: 
>> [('d', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('d', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('d', 'd'), ('.', '.')] 

 Dependency tags are: 
>> [(('d', 'root'), 'root'), (('.', 'd'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Prescriptive analytics uses machine learning to analyze raw data to help  organizations make better decision and take a proper course of action. 

Tokens are: 
>> ['Prescriptive', 'analytics', 'uses', 'machine', 'learning', 'to', 'analyze', 'raw', 'data', 'to', 'help', 'organizations', 'make', 'better', 'decision', 'and', 'take', 'a', 'proper', 'course', 'of', 'action', '.'] 

 UPOS tags are: 
>> [('Prescriptive', 'ADJ'), ('analytics', 'NOUN'), ('uses', 'VERB'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('to', 'PART'), ('analyze', 'VERB'), ('raw', 'ADJ'), ('data', 'NOUN'), ('to', 'PART'), ('help', 'VERB'), ('organizations', 'NOUN'), ('make', 'VERB'), ('better', 'ADJ'), ('decision', 'NOUN'), ('and', 'CCONJ'), ('take', 'VERB'), ('a', 'DET'), ('proper', 'ADJ'), ('course', 'NOUN'), ('of', 'ADP'), ('action', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Prescriptive', 'JJ'), ('analytics', 'NN'), ('uses', 'VBZ'), ('machine', 'NN'), ('learning', 'NN'), ('to', 'TO'), ('analyze', 'VB'), ('raw', 'JJ'), ('data', 'NNS'), ('to', 'TO'), ('help', 'VB'), ('organizations', 'NNS'), ('make', 'VB'), ('better', 'JJR'), ('decision', 'NN'), ('and', 'CC'), ('take', 'VB'), ('a', 'DT'), ('proper', 'JJ'), ('course', 'NN'), ('of', 'IN'), ('action', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Prescriptive', 'prescriptive'), ('analytics', 'analytic'), ('uses', 'use'), ('machine', 'machine'), ('learning', 'learning'), ('to', 'to'), ('analyze', 'analyze'), ('raw', 'raw'), ('data', 'datum'), ('to', 'to'), ('help', 'help'), ('organizations', 'organization'), ('make', 'make'), ('better', 'good'), ('decision', 'decision'), ('and', 'and'), ('take', 'take'), ('a', 'a'), ('proper', 'proper'), ('course', 'course'), ('of', 'of'), ('action', 'action'), ('.', '.')] 

 Dependency tags are: 
>> [(('Prescriptive', 'analytics'), 'amod'), (('analytics', 'uses'), 'nsubj'), (('uses', 'root'), 'root'), (('machine', 'learning'), 'compound'), (('learning', 'uses'), 'obj'), (('to', 'analyze'), 'mark'), (('analyze', 'uses'), 'advcl'), (('raw', 'data'), 'amod'), (('data', 'analyze'), 'obj'), (('to', 'help'), 'mark'), (('help', 'analyze'), 'advcl'), (('organizations', 'help'), 'obj'), (('make', 'help'), 'ccomp'), (('better', 'decision'), 'amod'), (('decision', 'make'), 'obj'), (('and', 'take'), 'cc'), (('take', 'make'), 'conj'), (('a', 'course'), 'det'), (('proper', 'course'), 'amod'), (('course', 'take'), 'obj'), (('of', 'action'), 'case'), (('action', 'course'), 'nmod'), (('.', 'uses'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Factoring  in possible scenarios, available resources, past performance and current  performance, prescriptive analytics help determine the best course of action in  a situation. 

Tokens are: 
>> ['Factoring', 'in', 'possible', 'scenarios', ',', 'available', 'resources', ',', 'past', 'performance', 'and', 'current', 'performance', ',', 'prescriptive', 'analytics', 'help', 'determine', 'the', 'best', 'course', 'of', 'action', 'in', 'a', 'situation', '.'] 

 UPOS tags are: 
>> [('Factoring', 'VERB'), ('in', 'ADP'), ('possible', 'ADJ'), ('scenarios', 'NOUN'), (',', 'PUNCT'), ('available', 'ADJ'), ('resources', 'NOUN'), (',', 'PUNCT'), ('past', 'ADJ'), ('performance', 'NOUN'), ('and', 'CCONJ'), ('current', 'ADJ'), ('performance', 'NOUN'), (',', 'PUNCT'), ('prescriptive', 'ADJ'), ('analytics', 'NOUN'), ('help', 'NOUN'), ('determine', 'VERB'), ('the', 'DET'), ('best', 'ADJ'), ('course', 'NOUN'), ('of', 'ADP'), ('action', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('situation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Factoring', 'VBG'), ('in', 'IN'), ('possible', 'JJ'), ('scenarios', 'NNS'), (',', ','), ('available', 'JJ'), ('resources', 'NNS'), (',', ','), ('past', 'JJ'), ('performance', 'NN'), ('and', 'CC'), ('current', 'JJ'), ('performance', 'NN'), (',', ','), ('prescriptive', 'JJ'), ('analytics', 'NNS'), ('help', 'NN'), ('determine', 'VB'), ('the', 'DT'), ('best', 'JJS'), ('course', 'NN'), ('of', 'IN'), ('action', 'NN'), ('in', 'IN'), ('a', 'DT'), ('situation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Factoring', 'factor'), ('in', 'in'), ('possible', 'possible'), ('scenarios', 'scenario'), (',', ','), ('available', 'available'), ('resources', 'resource'), (',', ','), ('past', 'past'), ('performance', 'performance'), ('and', 'and'), ('current', 'current'), ('performance', 'performance'), (',', ','), ('prescriptive', 'prescriptive'), ('analytics', 'analytic'), ('help', 'help'), ('determine', 'determine'), ('the', 'the'), ('best', 'good'), ('course', 'course'), ('of', 'of'), ('action', 'action'), ('in', 'in'), ('a', 'a'), ('situation', 'situation'), ('.', '.')] 

 Dependency tags are: 
>> [(('Factoring', 'determine'), 'advcl'), (('in', 'scenarios'), 'case'), (('possible', 'scenarios'), 'amod'), (('scenarios', 'Factoring'), 'obl'), ((',', 'resources'), 'punct'), (('available', 'resources'), 'amod'), (('resources', 'scenarios'), 'conj'), ((',', 'performance'), 'punct'), (('past', 'performance'), 'amod'), (('performance', 'resources'), 'conj'), (('and', 'performance'), 'cc'), (('current', 'performance'), 'amod'), (('performance', 'resources'), 'conj'), ((',', 'help'), 'punct'), (('prescriptive', 'help'), 'amod'), (('analytics', 'help'), 'compound'), (('help', 'determine'), 'nsubj'), (('determine', 'root'), 'root'), (('the', 'course'), 'det'), (('best', 'course'), 'amod'), (('course', 'determine'), 'obj'), (('of', 'action'), 'case'), (('action', 'course'), 'nmod'), (('in', 'situation'), 'case'), (('a', 'situation'), 'det'), (('situation', 'action'), 'nmod'), (('.', 'determine'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 88 =================================

Data analytics techniques can be broken down  into four main types based on the difficulty of  analysis and business value: 


------------------- Sentence 1 -------------------

 Data analytics techniques can be broken down  into four main types based on the difficulty of  analysis and business value: 

Tokens are: 
>> ['Data', 'analytics', 'techniques', 'can', 'be', 'broken', 'down', 'into', 'four', 'main', 'types', 'based', 'on', 'the', 'difficulty', 'of', 'analysis', 'and', 'business', 'value', ':'] 

 UPOS tags are: 
>> [('Data', 'NOUN'), ('analytics', 'NOUN'), ('techniques', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('broken', 'VERB'), ('down', 'ADP'), ('into', 'ADP'), ('four', 'NUM'), ('main', 'ADJ'), ('types', 'NOUN'), ('based', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('difficulty', 'NOUN'), ('of', 'ADP'), ('analysis', 'NOUN'), ('and', 'CCONJ'), ('business', 'NOUN'), ('value', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Data', 'NN'), ('analytics', 'NNS'), ('techniques', 'NNS'), ('can', 'MD'), ('be', 'VB'), ('broken', 'VBN'), ('down', 'RP'), ('into', 'IN'), ('four', 'CD'), ('main', 'JJ'), ('types', 'NNS'), ('based', 'VBN'), ('on', 'IN'), ('the', 'DT'), ('difficulty', 'NN'), ('of', 'IN'), ('analysis', 'NN'), ('and', 'CC'), ('business', 'NN'), ('value', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('Data', 'data'), ('analytics', 'analytic'), ('techniques', 'technique'), ('can', 'can'), ('be', 'be'), ('broken', 'break'), ('down', 'down'), ('into', 'into'), ('four', 'four'), ('main', 'main'), ('types', 'type'), ('based', 'base'), ('on', 'on'), ('the', 'the'), ('difficulty', 'difficulty'), ('of', 'of'), ('analysis', 'analysis'), ('and', 'and'), ('business', 'business'), ('value', 'value'), (':', ':')] 

 Dependency tags are: 
>> [(('Data', 'analytics'), 'compound'), (('analytics', 'techniques'), 'compound'), (('techniques', 'broken'), 'nsubj:pass'), (('can', 'broken'), 'aux'), (('be', 'broken'), 'aux:pass'), (('broken', 'root'), 'root'), (('down', 'broken'), 'compound:prt'), (('into', 'types'), 'case'), (('four', 'types'), 'nummod'), (('main', 'types'), 'amod'), (('types', 'broken'), 'obl'), (('based', 'types'), 'acl'), (('on', 'difficulty'), 'case'), (('the', 'difficulty'), 'det'), (('difficulty', 'based'), 'obl'), (('of', 'analysis'), 'case'), (('analysis', 'difficulty'), 'nmod'), (('and', 'value'), 'cc'), (('business', 'value'), 'compound'), (('value', 'analysis'), 'conj'), ((':', 'broken'), 'punct')]

 Named Entites are: 
>> [('four', 'CARDINAL')]

================================ Paragraph 89 =================================

a.  Descriptive analytics. What happened? 


------------------- Sentence 1 -------------------

 a. 

Tokens are: 
>> ['a.'] 

 UPOS tags are: 
>> [('a.', 'X')] 

 XPOS tags are: 
>> [('a.', 'LS')] 

 Lemmas are: 
>> [('a.', 'a.')] 

 Dependency tags are: 
>> [(('a.', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Descriptive analytics. 

Tokens are: 
>> ['Descriptive', 'analytics', '.'] 

 UPOS tags are: 
>> [('Descriptive', 'ADJ'), ('analytics', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Descriptive', 'JJ'), ('analytics', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Descriptive', 'Descriptive'), ('analytics', 'analytic'), ('.', '.')] 

 Dependency tags are: 
>> [(('Descriptive', 'analytics'), 'amod'), (('analytics', 'root'), 'root'), (('.', 'analytics'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 What happened? 

Tokens are: 
>> ['What', 'happened', '?'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('happened', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('happened', 'VBD'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('happened', 'happen'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'happened'), 'nsubj'), (('happened', 'root'), 'root'), (('?', 'happened'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 90 =================================

b.  Diagnostic analytics. Why did it happen? 


------------------- Sentence 1 -------------------

 b.  Diagnostic analytics. 

Tokens are: 
>> ['b.', 'Diagnostic', 'analytics', '.'] 

 UPOS tags are: 
>> [('b.', 'X'), ('Diagnostic', 'ADJ'), ('analytics', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('b.', 'LS'), ('Diagnostic', 'JJ'), ('analytics', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('b.', 'b.'), ('Diagnostic', 'Diagnostic'), ('analytics', 'analytic'), ('.', '.')] 

 Dependency tags are: 
>> [(('b.', 'analytics'), 'dep'), (('Diagnostic', 'analytics'), 'amod'), (('analytics', 'root'), 'root'), (('.', 'analytics'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Why did it happen? 

Tokens are: 
>> ['Why', 'did', 'it', 'happen', '?'] 

 UPOS tags are: 
>> [('Why', 'ADV'), ('did', 'AUX'), ('it', 'PRON'), ('happen', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Why', 'WRB'), ('did', 'VBD'), ('it', 'PRP'), ('happen', 'VB'), ('?', '.')] 

 Lemmas are: 
>> [('Why', 'why'), ('did', 'do'), ('it', 'it'), ('happen', 'happen'), ('?', '?')] 

 Dependency tags are: 
>> [(('Why', 'happen'), 'advmod'), (('did', 'happen'), 'aux'), (('it', 'happen'), 'nsubj'), (('happen', 'root'), 'root'), (('?', 'happen'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 91 =================================

c.  Predictive analytics. What will happen? 


------------------- Sentence 1 -------------------

 c. 

Tokens are: 
>> ['c', '.'] 

 UPOS tags are: 
>> [('c', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('c', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('c', 'c'), ('.', '.')] 

 Dependency tags are: 
>> [(('c', 'root'), 'root'), (('.', 'c'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Predictive analytics. 

Tokens are: 
>> ['Predictive', 'analytics', '.'] 

 UPOS tags are: 
>> [('Predictive', 'ADJ'), ('analytics', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Predictive', 'JJ'), ('analytics', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Predictive', 'predictive'), ('analytics', 'analytic'), ('.', '.')] 

 Dependency tags are: 
>> [(('Predictive', 'analytics'), 'amod'), (('analytics', 'root'), 'root'), (('.', 'analytics'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 What will happen? 

Tokens are: 
>> ['What', 'will', 'happen', '?'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('will', 'AUX'), ('happen', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('will', 'MD'), ('happen', 'VB'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('will', 'will'), ('happen', 'happen'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'happen'), 'nsubj'), (('will', 'happen'), 'aux'), (('happen', 'root'), 'root'), (('?', 'happen'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 92 =================================

d.  Prescriptive analytics. How can we make it  happen? 


------------------- Sentence 1 -------------------

 d. 

Tokens are: 
>> ['d', '.'] 

 UPOS tags are: 
>> [('d', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('d', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('d', 'd'), ('.', '.')] 

 Dependency tags are: 
>> [(('d', 'root'), 'root'), (('.', 'd'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Prescriptive analytics. 

Tokens are: 
>> ['Prescriptive', 'analytics', '.'] 

 UPOS tags are: 
>> [('Prescriptive', 'ADJ'), ('analytics', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Prescriptive', 'JJ'), ('analytics', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Prescriptive', 'prescriptive'), ('analytics', 'analytic'), ('.', '.')] 

 Dependency tags are: 
>> [(('Prescriptive', 'analytics'), 'amod'), (('analytics', 'root'), 'root'), (('.', 'analytics'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 How can we make it  happen? 

Tokens are: 
>> ['How', 'can', 'we', 'make', 'it', 'happen', '?'] 

 UPOS tags are: 
>> [('How', 'ADV'), ('can', 'AUX'), ('we', 'PRON'), ('make', 'VERB'), ('it', 'PRON'), ('happen', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('How', 'WRB'), ('can', 'MD'), ('we', 'PRP'), ('make', 'VB'), ('it', 'PRP'), ('happen', 'VB'), ('?', '.')] 

 Lemmas are: 
>> [('How', 'how'), ('can', 'can'), ('we', 'we'), ('make', 'make'), ('it', 'it'), ('happen', 'happen'), ('?', '?')] 

 Dependency tags are: 
>> [(('How', 'make'), 'advmod'), (('can', 'make'), 'aux'), (('we', 'make'), 'nsubj'), (('make', 'root'), 'root'), (('it', 'make'), 'obj'), (('happen', 'make'), 'xcomp'), (('?', 'make'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 93 =================================

Business value 


------------------- Sentence 1 -------------------

 Business value 

Tokens are: 
>> ['Business', 'value'] 

 UPOS tags are: 
>> [('Business', 'NOUN'), ('value', 'NOUN')] 

 XPOS tags are: 
>> [('Business', 'NN'), ('value', 'NN')] 

 Lemmas are: 
>> [('Business', 'business'), ('value', 'value')] 

 Dependency tags are: 
>> [(('Business', 'value'), 'compound'), (('value', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 94 =================================

Difficulty 


------------------- Sentence 1 -------------------

 Difficulty 

Tokens are: 
>> ['Difficulty'] 

 UPOS tags are: 
>> [('Difficulty', 'NOUN')] 

 XPOS tags are: 
>> [('Difficulty', 'NN')] 

 Lemmas are: 
>> [('Difficulty', 'difficulty')] 

 Dependency tags are: 
>> [(('Difficulty', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 95 =================================

Predictive analytics What will happen?  


------------------- Sentence 1 -------------------

 Predictive analytics 

Tokens are: 
>> ['Predictive', 'analytics'] 

 UPOS tags are: 
>> [('Predictive', 'ADJ'), ('analytics', 'NOUN')] 

 XPOS tags are: 
>> [('Predictive', 'JJ'), ('analytics', 'NNS')] 

 Lemmas are: 
>> [('Predictive', 'predictive'), ('analytics', 'analytic')] 

 Dependency tags are: 
>> [(('Predictive', 'analytics'), 'amod'), (('analytics', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 What will happen? 

Tokens are: 
>> ['What', 'will', 'happen', '?'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('will', 'AUX'), ('happen', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('will', 'MD'), ('happen', 'VB'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('will', 'will'), ('happen', 'happen'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'happen'), 'nsubj'), (('will', 'happen'), 'aux'), (('happen', 'root'), 'root'), (('?', 'happen'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 96 =================================

Prescriptive  analytics 


------------------- Sentence 1 -------------------

 Prescriptive  analytics 

Tokens are: 
>> ['Prescriptive', 'analytics'] 

 UPOS tags are: 
>> [('Prescriptive', 'ADJ'), ('analytics', 'NOUN')] 

 XPOS tags are: 
>> [('Prescriptive', 'JJ'), ('analytics', 'NNS')] 

 Lemmas are: 
>> [('Prescriptive', 'prescriptive'), ('analytics', 'analytic')] 

 Dependency tags are: 
>> [(('Prescriptive', 'analytics'), 'amod'), (('analytics', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 97 =================================

How can we  make it happen? Diagnostic analytics  


------------------- Sentence 1 -------------------

 How can we  make it happen? 

Tokens are: 
>> ['How', 'can', 'we', 'make', 'it', 'happen', '?'] 

 UPOS tags are: 
>> [('How', 'ADV'), ('can', 'AUX'), ('we', 'PRON'), ('make', 'VERB'), ('it', 'PRON'), ('happen', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('How', 'WRB'), ('can', 'MD'), ('we', 'PRP'), ('make', 'VB'), ('it', 'PRP'), ('happen', 'VB'), ('?', '.')] 

 Lemmas are: 
>> [('How', 'how'), ('can', 'can'), ('we', 'we'), ('make', 'make'), ('it', 'it'), ('happen', 'happen'), ('?', '?')] 

 Dependency tags are: 
>> [(('How', 'make'), 'advmod'), (('can', 'make'), 'aux'), (('we', 'make'), 'nsubj'), (('make', 'root'), 'root'), (('it', 'make'), 'obj'), (('happen', 'make'), 'xcomp'), (('?', 'make'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Diagnostic analytics 

Tokens are: 
>> ['Diagnostic', 'analytics'] 

 UPOS tags are: 
>> [('Diagnostic', 'ADJ'), ('analytics', 'NOUN')] 

 XPOS tags are: 
>> [('Diagnostic', 'JJ'), ('analytics', 'NNS')] 

 Lemmas are: 
>> [('Diagnostic', 'Diagnostic'), ('analytics', 'analytic')] 

 Dependency tags are: 
>> [(('Diagnostic', 'analytics'), 'amod'), (('analytics', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 98 =================================

Why did it happen? 


------------------- Sentence 1 -------------------

 Why did it happen? 

Tokens are: 
>> ['Why', 'did', 'it', 'happen', '?'] 

 UPOS tags are: 
>> [('Why', 'ADV'), ('did', 'AUX'), ('it', 'PRON'), ('happen', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Why', 'WRB'), ('did', 'VBD'), ('it', 'PRP'), ('happen', 'VB'), ('?', '.')] 

 Lemmas are: 
>> [('Why', 'why'), ('did', 'do'), ('it', 'it'), ('happen', 'happen'), ('?', '?')] 

 Dependency tags are: 
>> [(('Why', 'happen'), 'advmod'), (('did', 'happen'), 'aux'), (('it', 'happen'), 'nsubj'), (('happen', 'root'), 'root'), (('?', 'happen'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 99 =================================

Descriptive analytics  What happened?


------------------- Sentence 1 -------------------

 Descriptive analytics 

Tokens are: 
>> ['Descriptive', 'analytics'] 

 UPOS tags are: 
>> [('Descriptive', 'ADJ'), ('analytics', 'NOUN')] 

 XPOS tags are: 
>> [('Descriptive', 'JJ'), ('analytics', 'NNS')] 

 Lemmas are: 
>> [('Descriptive', 'Descriptive'), ('analytics', 'analytic')] 

 Dependency tags are: 
>> [(('Descriptive', 'analytics'), 'amod'), (('analytics', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 What happened? 

Tokens are: 
>> ['What', 'happened', '?'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('happened', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('happened', 'VBD'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('happened', 'happen'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'happened'), 'nsubj'), (('happened', 'root'), 'root'), (('?', 'happened'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 100 =================================

7/14Demystifying data science  


------------------- Sentence 1 -------------------

 7/14 

Tokens are: 
>> ['7/14'] 

 UPOS tags are: 
>> [('7/14', 'NUM')] 

 XPOS tags are: 
>> [('7/14', 'CD')] 

 Lemmas are: 
>> [('7/14', '7/14')] 

 Dependency tags are: 
>> [(('7/14', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Demystifying data science 

Tokens are: 
>> ['Demystifying', 'data', 'science'] 

 UPOS tags are: 
>> [('Demystifying', 'VERB'), ('data', 'NOUN'), ('science', 'NOUN')] 

 XPOS tags are: 
>> [('Demystifying', 'VBG'), ('data', 'NN'), ('science', 'NN')] 

 Lemmas are: 
>> [('Demystifying', 'demystify'), ('data', 'datum'), ('science', 'science')] 

 Dependency tags are: 
>> [(('Demystifying', 'root'), 'root'), (('data', 'science'), 'compound'), (('science', 'Demystifying'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 101 =================================

What are the requirements for adopting AI? This hierarchical pyramid explains the competencies every organization requires   to ensure a successful AI implementation.  


------------------- Sentence 1 -------------------

 What are the requirements for adopting AI? 

Tokens are: 
>> ['What', 'are', 'the', 'requirements', 'for', 'adopting', 'AI', '?'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('are', 'AUX'), ('the', 'DET'), ('requirements', 'NOUN'), ('for', 'SCONJ'), ('adopting', 'VERB'), ('AI', 'PRON'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('are', 'VBP'), ('the', 'DT'), ('requirements', 'NNS'), ('for', 'IN'), ('adopting', 'VBG'), ('AI', 'PRP'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('are', 'be'), ('the', 'the'), ('requirements', 'requirement'), ('for', 'for'), ('adopting', 'adopt'), ('AI', 'ai'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'root'), 'root'), (('are', 'What'), 'cop'), (('the', 'requirements'), 'det'), (('requirements', 'What'), 'nsubj'), (('for', 'adopting'), 'mark'), (('adopting', 'requirements'), 'acl'), (('AI', 'adopting'), 'obj'), (('?', 'What'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 This hierarchical pyramid explains the competencies every organization requires   to ensure a successful AI implementation. 

Tokens are: 
>> ['This', 'hierarchical', 'pyramid', 'explains', 'the', 'competencies', 'every', 'organization', 'requires', 'to', 'ensure', 'a', 'successful', 'AI', 'implementation', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('hierarchical', 'ADJ'), ('pyramid', 'NOUN'), ('explains', 'VERB'), ('the', 'DET'), ('competencies', 'NOUN'), ('every', 'DET'), ('organization', 'NOUN'), ('requires', 'VERB'), ('to', 'PART'), ('ensure', 'VERB'), ('a', 'DET'), ('successful', 'ADJ'), ('AI', 'NOUN'), ('implementation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('hierarchical', 'JJ'), ('pyramid', 'NN'), ('explains', 'VBZ'), ('the', 'DT'), ('competencies', 'NNS'), ('every', 'DT'), ('organization', 'NN'), ('requires', 'VBZ'), ('to', 'TO'), ('ensure', 'VB'), ('a', 'DT'), ('successful', 'JJ'), ('AI', 'NN'), ('implementation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('hierarchical', 'hierarchical'), ('pyramid', 'pyramid'), ('explains', 'explain'), ('the', 'the'), ('competencies', 'competency'), ('every', 'every'), ('organization', 'organization'), ('requires', 'require'), ('to', 'to'), ('ensure', 'ensure'), ('a', 'a'), ('successful', 'successful'), ('AI', 'ai'), ('implementation', 'implementation'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'pyramid'), 'det'), (('hierarchical', 'pyramid'), 'amod'), (('pyramid', 'explains'), 'nsubj'), (('explains', 'root'), 'root'), (('the', 'competencies'), 'det'), (('competencies', 'explains'), 'obj'), (('every', 'organization'), 'det'), (('organization', 'requires'), 'nsubj'), (('requires', 'competencies'), 'acl:relcl'), (('to', 'ensure'), 'mark'), (('ensure', 'requires'), 'xcomp'), (('a', 'implementation'), 'det'), (('successful', 'implementation'), 'amod'), (('AI', 'implementation'), 'compound'), (('implementation', 'ensure'), 'obj'), (('.', 'explains'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 102 =================================

AI,  deep learning 


------------------- Sentence 1 -------------------

 AI,  deep learning 

Tokens are: 
>> ['AI', ',', 'deep', 'learning'] 

 UPOS tags are: 
>> [('AI', 'NOUN'), (',', 'PUNCT'), ('deep', 'ADJ'), ('learning', 'NOUN')] 

 XPOS tags are: 
>> [('AI', 'NN'), (',', ','), ('deep', 'JJ'), ('learning', 'NN')] 

 Lemmas are: 
>> [('AI', 'ai'), (',', ','), ('deep', 'deep'), ('learning', 'learning')] 

 Dependency tags are: 
>> [(('AI', 'root'), 'root'), ((',', 'AI'), 'punct'), (('deep', 'learning'), 'amod'), (('learning', 'AI'), 'parataxis')]

 Named Entites are: 
>> []

================================ Paragraph 103 =================================

Machine learning  and benchmarking:  A/B testing,  experimentation 


------------------- Sentence 1 -------------------

 Machine learning  and benchmarking:  A/B testing,  experimentation 

Tokens are: 
>> ['Machine', 'learning', 'and', 'benchmarking', ':', 'A/B', 'testing', ',', 'experimentation'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('learning', 'NOUN'), ('and', 'CCONJ'), ('benchmarking', 'NOUN'), (':', 'PUNCT'), ('A/B', 'NOUN'), ('testing', 'NOUN'), (',', 'PUNCT'), ('experimentation', 'NOUN')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('learning', 'NN'), ('and', 'CC'), ('benchmarking', 'NN'), (':', ':'), ('A/B', 'NN'), ('testing', 'NN'), (',', ','), ('experimentation', 'NN')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('learning', 'learning'), ('and', 'and'), ('benchmarking', 'benchmarking'), (':', ':'), ('A/B', 'a/b'), ('testing', 'testing'), (',', ','), ('experimentation', 'experimentation')] 

 Dependency tags are: 
>> [(('Machine', 'learning'), 'compound'), (('learning', 'root'), 'root'), (('and', 'benchmarking'), 'cc'), (('benchmarking', 'learning'), 'conj'), ((':', 'testing'), 'punct'), (('A/B', 'testing'), 'compound'), (('testing', 'learning'), 'parataxis'), ((',', 'experimentation'), 'punct'), (('experimentation', 'testing'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 104 =================================

BI or analytics:  Metrics, segmentation,  aggregation, data labelling 


------------------- Sentence 1 -------------------

 BI or analytics:  Metrics, segmentation,  aggregation, data labelling 

Tokens are: 
>> ['BI', 'or', 'analytics', ':', 'Metrics', ',', 'segmentation', ',', 'aggregation', ',', 'data', 'labelling'] 

 UPOS tags are: 
>> [('BI', 'NOUN'), ('or', 'CCONJ'), ('analytics', 'NOUN'), (':', 'PUNCT'), ('Metrics', 'NOUN'), (',', 'PUNCT'), ('segmentation', 'NOUN'), (',', 'PUNCT'), ('aggregation', 'NOUN'), (',', 'PUNCT'), ('data', 'NOUN'), ('labelling', 'NOUN')] 

 XPOS tags are: 
>> [('BI', 'NN'), ('or', 'CC'), ('analytics', 'NNS'), (':', ':'), ('Metrics', 'NNS'), (',', ','), ('segmentation', 'NN'), (',', ','), ('aggregation', 'NN'), (',', ','), ('data', 'NN'), ('labelling', 'NN')] 

 Lemmas are: 
>> [('BI', 'bi'), ('or', 'or'), ('analytics', 'analytic'), (':', ':'), ('Metrics', 'metric'), (',', ','), ('segmentation', 'segmentation'), (',', ','), ('aggregation', 'aggregation'), (',', ','), ('data', 'datum'), ('labelling', 'labelling')] 

 Dependency tags are: 
>> [(('BI', 'root'), 'root'), (('or', 'analytics'), 'cc'), (('analytics', 'BI'), 'conj'), ((':', 'BI'), 'punct'), (('Metrics', 'BI'), 'parataxis'), ((',', 'segmentation'), 'punct'), (('segmentation', 'Metrics'), 'conj'), ((',', 'aggregation'), 'punct'), (('aggregation', 'Metrics'), 'conj'), ((',', 'labelling'), 'punct'), (('data', 'labelling'), 'compound'), (('labelling', 'Metrics'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 105 =================================

Explore and transform:  Data preparation, cleaning  and exploratory data analysis 


------------------- Sentence 1 -------------------

 Explore and transform:  Data preparation, cleaning  and exploratory data analysis 

Tokens are: 
>> ['Explore', 'and', 'transform', ':', 'Data', 'preparation', ',', 'cleaning', 'and', 'exploratory', 'data', 'analysis'] 

 UPOS tags are: 
>> [('Explore', 'VERB'), ('and', 'CCONJ'), ('transform', 'VERB'), (':', 'PUNCT'), ('Data', 'NOUN'), ('preparation', 'NOUN'), (',', 'PUNCT'), ('cleaning', 'NOUN'), ('and', 'CCONJ'), ('exploratory', 'ADJ'), ('data', 'NOUN'), ('analysis', 'NOUN')] 

 XPOS tags are: 
>> [('Explore', 'VB'), ('and', 'CC'), ('transform', 'VB'), (':', ':'), ('Data', 'NN'), ('preparation', 'NN'), (',', ','), ('cleaning', 'NN'), ('and', 'CC'), ('exploratory', 'JJ'), ('data', 'NN'), ('analysis', 'NN')] 

 Lemmas are: 
>> [('Explore', 'explore'), ('and', 'and'), ('transform', 'transform'), (':', ':'), ('Data', 'data'), ('preparation', 'preparation'), (',', ','), ('cleaning', 'cleaning'), ('and', 'and'), ('exploratory', 'exploratory'), ('data', 'datum'), ('analysis', 'analysis')] 

 Dependency tags are: 
>> [(('Explore', 'root'), 'root'), (('and', 'transform'), 'cc'), (('transform', 'Explore'), 'conj'), ((':', 'Explore'), 'punct'), (('Data', 'preparation'), 'compound'), (('preparation', 'analysis'), 'compound'), ((',', 'cleaning'), 'punct'), (('cleaning', 'preparation'), 'conj'), (('and', 'exploratory'), 'cc'), (('exploratory', 'preparation'), 'conj'), (('data', 'analysis'), 'compound'), (('analysis', 'Explore'), 'parataxis')]

 Named Entites are: 
>> []

================================ Paragraph 106 =================================

Data flow:  Infrastructure, pipelines, ETL,  structured and unstructured data storage 


------------------- Sentence 1 -------------------

 Data flow:  Infrastructure, pipelines, ETL,  structured and unstructured data storage 

Tokens are: 
>> ['Data', 'flow', ':', 'Infrastructure', ',', 'pipelines', ',', 'ETL', ',', 'structured', 'and', 'unstructured', 'data', 'storage'] 

 UPOS tags are: 
>> [('Data', 'NOUN'), ('flow', 'NOUN'), (':', 'PUNCT'), ('Infrastructure', 'NOUN'), (',', 'PUNCT'), ('pipelines', 'NOUN'), (',', 'PUNCT'), ('ETL', 'NOUN'), (',', 'PUNCT'), ('structured', 'VERB'), ('and', 'CCONJ'), ('unstructured', 'ADJ'), ('data', 'NOUN'), ('storage', 'NOUN')] 

 XPOS tags are: 
>> [('Data', 'NN'), ('flow', 'NN'), (':', ':'), ('Infrastructure', 'NN'), (',', ','), ('pipelines', 'NNS'), (',', ','), ('ETL', 'NN'), (',', ','), ('structured', 'VBN'), ('and', 'CC'), ('unstructured', 'JJ'), ('data', 'NN'), ('storage', 'NN')] 

 Lemmas are: 
>> [('Data', 'data'), ('flow', 'flow'), (':', ':'), ('Infrastructure', 'infrastructure'), (',', ','), ('pipelines', 'pipeline'), (',', ','), ('ETL', 'etl'), (',', ','), ('structured', 'structure'), ('and', 'and'), ('unstructured', 'unstructured'), ('data', 'datum'), ('storage', 'storage')] 

 Dependency tags are: 
>> [(('Data', 'flow'), 'compound'), (('flow', 'root'), 'root'), ((':', 'flow'), 'punct'), (('Infrastructure', 'flow'), 'appos'), ((',', 'pipelines'), 'punct'), (('pipelines', 'Infrastructure'), 'conj'), ((',', 'ETL'), 'punct'), (('ETL', 'Infrastructure'), 'conj'), ((',', 'structured'), 'punct'), (('structured', 'Infrastructure'), 'conj'), (('and', 'unstructured'), 'cc'), (('unstructured', 'data'), 'amod'), (('data', 'storage'), 'compound'), (('storage', 'Infrastructure'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 107 =================================

Data collection:  External data, logging, sensors,  user generated content 


------------------- Sentence 1 -------------------

 Data collection:  External data, logging, sensors,  user generated content 

Tokens are: 
>> ['Data', 'collection', ':', 'External', 'data', ',', 'logging', ',', 'sensors', ',', 'user', 'generated', 'content'] 

 UPOS tags are: 
>> [('Data', 'NOUN'), ('collection', 'NOUN'), (':', 'PUNCT'), ('External', 'ADJ'), ('data', 'NOUN'), (',', 'PUNCT'), ('logging', 'NOUN'), (',', 'PUNCT'), ('sensors', 'NOUN'), (',', 'PUNCT'), ('user', 'NOUN'), ('generated', 'VERB'), ('content', 'NOUN')] 

 XPOS tags are: 
>> [('Data', 'NN'), ('collection', 'NN'), (':', ':'), ('External', 'JJ'), ('data', 'NNS'), (',', ','), ('logging', 'NN'), (',', ','), ('sensors', 'NNS'), (',', ','), ('user', 'NN'), ('generated', 'VBN'), ('content', 'NN')] 

 Lemmas are: 
>> [('Data', 'data'), ('collection', 'collection'), (':', ':'), ('External', 'external'), ('data', 'datum'), (',', ','), ('logging', 'logging'), (',', ','), ('sensors', 'sensor'), (',', ','), ('user', 'user'), ('generated', 'generate'), ('content', 'content')] 

 Dependency tags are: 
>> [(('Data', 'collection'), 'compound'), (('collection', 'root'), 'root'), ((':', 'collection'), 'punct'), (('External', 'data'), 'amod'), (('data', 'collection'), 'appos'), ((',', 'logging'), 'punct'), (('logging', 'data'), 'conj'), ((',', 'sensors'), 'punct'), (('sensors', 'data'), 'conj'), ((',', 'content'), 'punct'), (('user', 'content'), 'compound'), (('generated', 'content'), 'amod'), (('content', 'data'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 108 =================================

AI,  deep  


------------------- Sentence 1 -------------------

 AI,  deep 

Tokens are: 
>> ['AI', ',', 'deep'] 

 UPOS tags are: 
>> [('AI', 'NOUN'), (',', 'PUNCT'), ('deep', 'ADJ')] 

 XPOS tags are: 
>> [('AI', 'NN'), (',', ','), ('deep', 'JJ')] 

 Lemmas are: 
>> [('AI', 'ai'), (',', ','), ('deep', 'deep')] 

 Dependency tags are: 
>> [(('AI', 'root'), 'root'), ((',', 'AI'), 'punct'), (('deep', 'AI'), 'parataxis')]

 Named Entites are: 
>> []

================================ Paragraph 109 =================================

learning 


------------------- Sentence 1 -------------------

 learning 

Tokens are: 
>> ['learning'] 

 UPOS tags are: 
>> [('learning', 'NOUN')] 

 XPOS tags are: 
>> [('learning', 'NN')] 

 Lemmas are: 
>> [('learning', 'learning')] 

 Dependency tags are: 
>> [(('learning', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 110 =================================

Machine learning  and benchmarking:  


------------------- Sentence 1 -------------------

 Machine learning  and benchmarking: 

Tokens are: 
>> ['Machine', 'learning', 'and', 'benchmarking', ':'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('learning', 'NOUN'), ('and', 'CCONJ'), ('benchmarking', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('learning', 'NN'), ('and', 'CC'), ('benchmarking', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('learning', 'learning'), ('and', 'and'), ('benchmarking', 'benchmarking'), (':', ':')] 

 Dependency tags are: 
>> [(('Machine', 'learning'), 'compound'), (('learning', 'root'), 'root'), (('and', 'benchmarking'), 'cc'), (('benchmarking', 'learning'), 'conj'), ((':', 'learning'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 111 =================================

A/B testing,  experimentation 


------------------- Sentence 1 -------------------

 A/B testing,  experimentation 

Tokens are: 
>> ['A/B', 'testing', ',', 'experimentation'] 

 UPOS tags are: 
>> [('A/B', 'NOUN'), ('testing', 'NOUN'), (',', 'PUNCT'), ('experimentation', 'NOUN')] 

 XPOS tags are: 
>> [('A/B', 'NN'), ('testing', 'NN'), (',', ','), ('experimentation', 'NN')] 

 Lemmas are: 
>> [('A/B', 'a/b'), ('testing', 'testing'), (',', ','), ('experimentation', 'experimentation')] 

 Dependency tags are: 
>> [(('A/B', 'testing'), 'compound'), (('testing', 'root'), 'root'), ((',', 'testing'), 'punct'), (('experimentation', 'testing'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 112 =================================

BI or analytics:  Metrics, segmentation,  


------------------- Sentence 1 -------------------

 BI or analytics:  Metrics, segmentation, 

Tokens are: 
>> ['BI', 'or', 'analytics', ':', 'Metrics', ',', 'segmentation', ','] 

 UPOS tags are: 
>> [('BI', 'NOUN'), ('or', 'CCONJ'), ('analytics', 'NOUN'), (':', 'PUNCT'), ('Metrics', 'NOUN'), (',', 'PUNCT'), ('segmentation', 'NOUN'), (',', 'PUNCT')] 

 XPOS tags are: 
>> [('BI', 'NN'), ('or', 'CC'), ('analytics', 'NNS'), (':', ':'), ('Metrics', 'NNS'), (',', ','), ('segmentation', 'NN'), (',', ',')] 

 Lemmas are: 
>> [('BI', 'bi'), ('or', 'or'), ('analytics', 'analytic'), (':', ':'), ('Metrics', 'metric'), (',', ','), ('segmentation', 'segmentation'), (',', ',')] 

 Dependency tags are: 
>> [(('BI', 'root'), 'root'), (('or', 'analytics'), 'cc'), (('analytics', 'BI'), 'conj'), ((':', 'Metrics'), 'punct'), (('Metrics', 'BI'), 'parataxis'), ((',', 'segmentation'), 'punct'), (('segmentation', 'Metrics'), 'conj'), ((',', 'BI'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 113 =================================

aggregation, data labelling 


------------------- Sentence 1 -------------------

 aggregation, data labelling 

Tokens are: 
>> ['aggregation', ',', 'data', 'labelling'] 

 UPOS tags are: 
>> [('aggregation', 'NOUN'), (',', 'PUNCT'), ('data', 'NOUN'), ('labelling', 'NOUN')] 

 XPOS tags are: 
>> [('aggregation', 'NN'), (',', ','), ('data', 'NN'), ('labelling', 'NN')] 

 Lemmas are: 
>> [('aggregation', 'aggregation'), (',', ','), ('data', 'datum'), ('labelling', 'labelling')] 

 Dependency tags are: 
>> [(('aggregation', 'root'), 'root'), ((',', 'aggregation'), 'punct'), (('data', 'labelling'), 'compound'), (('labelling', 'aggregation'), 'parataxis')]

 Named Entites are: 
>> []

================================ Paragraph 114 =================================

Explore and transform:  Data preparation, cleaning  


------------------- Sentence 1 -------------------

 Explore and transform:  Data preparation, cleaning 

Tokens are: 
>> ['Explore', 'and', 'transform', ':', 'Data', 'preparation', ',', 'cleaning'] 

 UPOS tags are: 
>> [('Explore', 'VERB'), ('and', 'CCONJ'), ('transform', 'VERB'), (':', 'PUNCT'), ('Data', 'NOUN'), ('preparation', 'NOUN'), (',', 'PUNCT'), ('cleaning', 'NOUN')] 

 XPOS tags are: 
>> [('Explore', 'VB'), ('and', 'CC'), ('transform', 'VB'), (':', ':'), ('Data', 'NN'), ('preparation', 'NN'), (',', ','), ('cleaning', 'NN')] 

 Lemmas are: 
>> [('Explore', 'explore'), ('and', 'and'), ('transform', 'transform'), (':', ':'), ('Data', 'data'), ('preparation', 'preparation'), (',', ','), ('cleaning', 'cleaning')] 

 Dependency tags are: 
>> [(('Explore', 'root'), 'root'), (('and', 'transform'), 'cc'), (('transform', 'Explore'), 'conj'), ((':', 'preparation'), 'punct'), (('Data', 'preparation'), 'compound'), (('preparation', 'Explore'), 'parataxis'), ((',', 'cleaning'), 'punct'), (('cleaning', 'preparation'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 115 =================================

and exploratory data analysis 


------------------- Sentence 1 -------------------

 and exploratory data analysis 

Tokens are: 
>> ['and', 'exploratory', 'data', 'analysis'] 

 UPOS tags are: 
>> [('and', 'CCONJ'), ('exploratory', 'ADJ'), ('data', 'NOUN'), ('analysis', 'NOUN')] 

 XPOS tags are: 
>> [('and', 'CC'), ('exploratory', 'JJ'), ('data', 'NN'), ('analysis', 'NN')] 

 Lemmas are: 
>> [('and', 'and'), ('exploratory', 'exploratory'), ('data', 'datum'), ('analysis', 'analysis')] 

 Dependency tags are: 
>> [(('and', 'analysis'), 'cc'), (('exploratory', 'analysis'), 'amod'), (('data', 'analysis'), 'compound'), (('analysis', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 116 =================================

Data flow:  Infrastructure, pipelines, ETL,  


------------------- Sentence 1 -------------------

 Data flow:  Infrastructure, pipelines, ETL, 

Tokens are: 
>> ['Data', 'flow', ':', 'Infrastructure', ',', 'pipelines', ',', 'ETL', ','] 

 UPOS tags are: 
>> [('Data', 'NOUN'), ('flow', 'NOUN'), (':', 'PUNCT'), ('Infrastructure', 'NOUN'), (',', 'PUNCT'), ('pipelines', 'NOUN'), (',', 'PUNCT'), ('ETL', 'NOUN'), (',', 'PUNCT')] 

 XPOS tags are: 
>> [('Data', 'NN'), ('flow', 'NN'), (':', ':'), ('Infrastructure', 'NN'), (',', ','), ('pipelines', 'NNS'), (',', ','), ('ETL', 'NN'), (',', ',')] 

 Lemmas are: 
>> [('Data', 'data'), ('flow', 'flow'), (':', ':'), ('Infrastructure', 'infrastructure'), (',', ','), ('pipelines', 'pipeline'), (',', ','), ('ETL', 'etl'), (',', ',')] 

 Dependency tags are: 
>> [(('Data', 'flow'), 'compound'), (('flow', 'root'), 'root'), ((':', 'Infrastructure'), 'punct'), (('Infrastructure', 'flow'), 'appos'), ((',', 'pipelines'), 'punct'), (('pipelines', 'Infrastructure'), 'conj'), ((',', 'ETL'), 'punct'), (('ETL', 'Infrastructure'), 'conj'), ((',', 'flow'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 117 =================================

structured and unstructured data storage 


------------------- Sentence 1 -------------------

 structured and unstructured data storage 

Tokens are: 
>> ['structured', 'and', 'unstructured', 'data', 'storage'] 

 UPOS tags are: 
>> [('structured', 'ADJ'), ('and', 'CCONJ'), ('unstructured', 'ADJ'), ('data', 'NOUN'), ('storage', 'NOUN')] 

 XPOS tags are: 
>> [('structured', 'JJ'), ('and', 'CC'), ('unstructured', 'JJ'), ('data', 'NN'), ('storage', 'NN')] 

 Lemmas are: 
>> [('structured', 'structure'), ('and', 'and'), ('unstructured', 'unstructured'), ('data', 'datum'), ('storage', 'storage')] 

 Dependency tags are: 
>> [(('structured', 'storage'), 'amod'), (('and', 'unstructured'), 'cc'), (('unstructured', 'structured'), 'conj'), (('data', 'storage'), 'compound'), (('storage', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 118 =================================

Data collection:  External data, logging, sensors,  


------------------- Sentence 1 -------------------

 Data collection:  External data, logging, sensors, 

Tokens are: 
>> ['Data', 'collection', ':', 'External', 'data', ',', 'logging', ',', 'sensors', ','] 

 UPOS tags are: 
>> [('Data', 'NOUN'), ('collection', 'NOUN'), (':', 'PUNCT'), ('External', 'ADJ'), ('data', 'NOUN'), (',', 'PUNCT'), ('logging', 'NOUN'), (',', 'PUNCT'), ('sensors', 'NOUN'), (',', 'PUNCT')] 

 XPOS tags are: 
>> [('Data', 'NN'), ('collection', 'NN'), (':', ':'), ('External', 'JJ'), ('data', 'NNS'), (',', ','), ('logging', 'NN'), (',', ','), ('sensors', 'NNS'), (',', ',')] 

 Lemmas are: 
>> [('Data', 'data'), ('collection', 'collection'), (':', ':'), ('External', 'external'), ('data', 'datum'), (',', ','), ('logging', 'logging'), (',', ','), ('sensors', 'sensor'), (',', ',')] 

 Dependency tags are: 
>> [(('Data', 'collection'), 'compound'), (('collection', 'root'), 'root'), ((':', 'collection'), 'punct'), (('External', 'data'), 'amod'), (('data', 'collection'), 'appos'), ((',', 'logging'), 'punct'), (('logging', 'data'), 'conj'), ((',', 'sensors'), 'punct'), (('sensors', 'data'), 'conj'), ((',', 'collection'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 119 =================================

user generated content 


------------------- Sentence 1 -------------------

 user generated content 

Tokens are: 
>> ['user', 'generated', 'content'] 

 UPOS tags are: 
>> [('user', 'NOUN'), ('generated', 'VERB'), ('content', 'NOUN')] 

 XPOS tags are: 
>> [('user', 'NN'), ('generated', 'VBN'), ('content', 'NN')] 

 Lemmas are: 
>> [('user', 'user'), ('generated', 'generate'), ('content', 'content')] 

 Dependency tags are: 
>> [(('user', 'generated'), 'obl:npmod'), (('generated', 'content'), 'amod'), (('content', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 120 =================================

Data collection. At the bottom of the pyramid is data collection. At this stage, the  goal is to identify what data is needed and what is available. If it is a user-facing  product, are all relevant interactions logged? If it is a sensor, what data is coming  through and how? Without data, no machine learning or AI solution can learn or  predict outcomes. 


------------------- Sentence 1 -------------------

 Data collection. 

Tokens are: 
>> ['Data', 'collection', '.'] 

 UPOS tags are: 
>> [('Data', 'NOUN'), ('collection', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Data', 'NN'), ('collection', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Data', 'data'), ('collection', 'collection'), ('.', '.')] 

 Dependency tags are: 
>> [(('Data', 'collection'), 'compound'), (('collection', 'root'), 'root'), (('.', 'collection'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 At the bottom of the pyramid is data collection. 

Tokens are: 
>> ['At', 'the', 'bottom', 'of', 'the', 'pyramid', 'is', 'data', 'collection', '.'] 

 UPOS tags are: 
>> [('At', 'ADP'), ('the', 'DET'), ('bottom', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('pyramid', 'NOUN'), ('is', 'AUX'), ('data', 'NOUN'), ('collection', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('At', 'IN'), ('the', 'DT'), ('bottom', 'NN'), ('of', 'IN'), ('the', 'DT'), ('pyramid', 'NN'), ('is', 'VBZ'), ('data', 'NN'), ('collection', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('At', 'at'), ('the', 'the'), ('bottom', 'bottom'), ('of', 'of'), ('the', 'the'), ('pyramid', 'pyramid'), ('is', 'be'), ('data', 'datum'), ('collection', 'collection'), ('.', '.')] 

 Dependency tags are: 
>> [(('At', 'bottom'), 'case'), (('the', 'bottom'), 'det'), (('bottom', 'collection'), 'nmod'), (('of', 'pyramid'), 'case'), (('the', 'pyramid'), 'det'), (('pyramid', 'bottom'), 'nmod'), (('is', 'collection'), 'cop'), (('data', 'collection'), 'compound'), (('collection', 'root'), 'root'), (('.', 'collection'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 At this stage, the  goal is to identify what data is needed and what is available. 

Tokens are: 
>> ['At', 'this', 'stage', ',', 'the', 'goal', 'is', 'to', 'identify', 'what', 'data', 'is', 'needed', 'and', 'what', 'is', 'available', '.'] 

 UPOS tags are: 
>> [('At', 'ADP'), ('this', 'DET'), ('stage', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('goal', 'NOUN'), ('is', 'VERB'), ('to', 'PART'), ('identify', 'VERB'), ('what', 'DET'), ('data', 'NOUN'), ('is', 'AUX'), ('needed', 'VERB'), ('and', 'CCONJ'), ('what', 'PRON'), ('is', 'AUX'), ('available', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('At', 'IN'), ('this', 'DT'), ('stage', 'NN'), (',', ','), ('the', 'DT'), ('goal', 'NN'), ('is', 'VBZ'), ('to', 'TO'), ('identify', 'VB'), ('what', 'WDT'), ('data', 'NNS'), ('is', 'VBZ'), ('needed', 'VBN'), ('and', 'CC'), ('what', 'WP'), ('is', 'VBZ'), ('available', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('At', 'at'), ('this', 'this'), ('stage', 'stage'), (',', ','), ('the', 'the'), ('goal', 'goal'), ('is', 'be'), ('to', 'to'), ('identify', 'identify'), ('what', 'what'), ('data', 'datum'), ('is', 'be'), ('needed', 'need'), ('and', 'and'), ('what', 'what'), ('is', 'be'), ('available', 'available'), ('.', '.')] 

 Dependency tags are: 
>> [(('At', 'stage'), 'case'), (('this', 'stage'), 'det'), (('stage', 'identify'), 'obl'), ((',', 'is'), 'punct'), (('the', 'goal'), 'det'), (('goal', 'is'), 'nsubj'), (('is', 'root'), 'root'), (('to', 'identify'), 'mark'), (('identify', 'is'), 'ccomp'), (('what', 'data'), 'det'), (('data', 'needed'), 'nsubj:pass'), (('is', 'needed'), 'aux:pass'), (('needed', 'identify'), 'ccomp'), (('and', 'available'), 'cc'), (('what', 'available'), 'nsubj'), (('is', 'available'), 'cop'), (('available', 'needed'), 'conj'), (('.', 'is'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 If it is a user-facing  product, are all relevant interactions logged? 

Tokens are: 
>> ['If', 'it', 'is', 'a', 'user-facing', 'product', ',', 'are', 'all', 'relevant', 'interactions', 'logged', '?'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('it', 'PRON'), ('is', 'AUX'), ('a', 'DET'), ('user-facing', 'ADJ'), ('product', 'NOUN'), (',', 'PUNCT'), ('are', 'AUX'), ('all', 'DET'), ('relevant', 'ADJ'), ('interactions', 'NOUN'), ('logged', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('it', 'PRP'), ('is', 'VBZ'), ('a', 'DT'), ('user-facing', 'JJ'), ('product', 'NN'), (',', ','), ('are', 'VBP'), ('all', 'DT'), ('relevant', 'JJ'), ('interactions', 'NNS'), ('logged', 'VBN'), ('?', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('it', 'it'), ('is', 'be'), ('a', 'a'), ('user-facing', 'user-facing'), ('product', 'product'), (',', ','), ('are', 'be'), ('all', 'all'), ('relevant', 'relevant'), ('interactions', 'interaction'), ('logged', 'logg'), ('?', '?')] 

 Dependency tags are: 
>> [(('If', 'product'), 'mark'), (('it', 'product'), 'nsubj'), (('is', 'product'), 'cop'), (('a', 'product'), 'det'), (('user-facing', 'product'), 'amod'), (('product', 'interactions'), 'advcl'), ((',', 'product'), 'punct'), (('are', 'interactions'), 'cop'), (('all', 'interactions'), 'det'), (('relevant', 'interactions'), 'amod'), (('interactions', 'root'), 'root'), (('logged', 'interactions'), 'acl'), (('?', 'interactions'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 If it is a sensor, what data is coming  through and how? 

Tokens are: 
>> ['If', 'it', 'is', 'a', 'sensor', ',', 'what', 'data', 'is', 'coming', 'through', 'and', 'how', '?'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('it', 'PRON'), ('is', 'AUX'), ('a', 'DET'), ('sensor', 'NOUN'), (',', 'PUNCT'), ('what', 'DET'), ('data', 'NOUN'), ('is', 'AUX'), ('coming', 'VERB'), ('through', 'ADP'), ('and', 'CCONJ'), ('how', 'SCONJ'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('it', 'PRP'), ('is', 'VBZ'), ('a', 'DT'), ('sensor', 'NN'), (',', ','), ('what', 'WDT'), ('data', 'NN'), ('is', 'VBZ'), ('coming', 'VBG'), ('through', 'IN'), ('and', 'CC'), ('how', 'WRB'), ('?', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('it', 'it'), ('is', 'be'), ('a', 'a'), ('sensor', 'sensor'), (',', ','), ('what', 'what'), ('data', 'datum'), ('is', 'be'), ('coming', 'come'), ('through', 'through'), ('and', 'and'), ('how', 'how'), ('?', '?')] 

 Dependency tags are: 
>> [(('If', 'sensor'), 'mark'), (('it', 'sensor'), 'nsubj'), (('is', 'sensor'), 'cop'), (('a', 'sensor'), 'det'), (('sensor', 'coming'), 'advcl'), ((',', 'coming'), 'punct'), (('what', 'data'), 'det'), (('data', 'coming'), 'nsubj'), (('is', 'coming'), 'aux'), (('coming', 'root'), 'root'), (('through', 'coming'), 'obl'), (('and', 'how'), 'cc'), (('how', 'coming'), 'conj'), (('?', 'coming'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 Without data, no machine learning or AI solution can learn or  predict outcomes. 

Tokens are: 
>> ['Without', 'data', ',', 'no', 'machine', 'learning', 'or', 'AI', 'solution', 'can', 'learn', 'or', 'predict', 'outcomes', '.'] 

 UPOS tags are: 
>> [('Without', 'ADP'), ('data', 'NOUN'), (',', 'PUNCT'), ('no', 'DET'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('or', 'CCONJ'), ('AI', 'NOUN'), ('solution', 'NOUN'), ('can', 'AUX'), ('learn', 'VERB'), ('or', 'CCONJ'), ('predict', 'VERB'), ('outcomes', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Without', 'IN'), ('data', 'NN'), (',', ','), ('no', 'DT'), ('machine', 'NN'), ('learning', 'NN'), ('or', 'CC'), ('AI', 'NN'), ('solution', 'NN'), ('can', 'MD'), ('learn', 'VB'), ('or', 'CC'), ('predict', 'VB'), ('outcomes', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Without', 'without'), ('data', 'datum'), (',', ','), ('no', 'no'), ('machine', 'machine'), ('learning', 'learning'), ('or', 'or'), ('AI', 'ai'), ('solution', 'solution'), ('can', 'can'), ('learn', 'learn'), ('or', 'or'), ('predict', 'predict'), ('outcomes', 'outcome'), ('.', '.')] 

 Dependency tags are: 
>> [(('Without', 'data'), 'case'), (('data', 'learn'), 'obl'), ((',', 'learn'), 'punct'), (('no', 'learning'), 'det'), (('machine', 'learning'), 'compound'), (('learning', 'learn'), 'nsubj'), (('or', 'solution'), 'cc'), (('AI', 'solution'), 'compound'), (('solution', 'learning'), 'conj'), (('can', 'learn'), 'aux'), (('learn', 'root'), 'root'), (('or', 'predict'), 'cc'), (('predict', 'learn'), 'conj'), (('outcomes', 'learn'), 'obj'), (('.', 'learn'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 121 =================================

Data flow. Identify how the data flows through the system. Is there a reliable  stream/ETL process established? Where is the data stored, and how easy is it to  access and analyze? 


------------------- Sentence 1 -------------------

 Data flow. 

Tokens are: 
>> ['Data', 'flow', '.'] 

 UPOS tags are: 
>> [('Data', 'NOUN'), ('flow', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Data', 'NNS'), ('flow', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Data', 'data'), ('flow', 'flow'), ('.', '.')] 

 Dependency tags are: 
>> [(('Data', 'flow'), 'compound'), (('flow', 'root'), 'root'), (('.', 'flow'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Identify how the data flows through the system. 

Tokens are: 
>> ['Identify', 'how', 'the', 'data', 'flows', 'through', 'the', 'system', '.'] 

 UPOS tags are: 
>> [('Identify', 'VERB'), ('how', 'SCONJ'), ('the', 'DET'), ('data', 'NOUN'), ('flows', 'VERB'), ('through', 'ADP'), ('the', 'DET'), ('system', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Identify', 'VB'), ('how', 'WRB'), ('the', 'DT'), ('data', 'NN'), ('flows', 'VBZ'), ('through', 'IN'), ('the', 'DT'), ('system', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Identify', 'identify'), ('how', 'how'), ('the', 'the'), ('data', 'datum'), ('flows', 'flow'), ('through', 'through'), ('the', 'the'), ('system', 'system'), ('.', '.')] 

 Dependency tags are: 
>> [(('Identify', 'root'), 'root'), (('how', 'flows'), 'mark'), (('the', 'data'), 'det'), (('data', 'flows'), 'nsubj'), (('flows', 'Identify'), 'ccomp'), (('through', 'system'), 'case'), (('the', 'system'), 'det'), (('system', 'flows'), 'obl'), (('.', 'Identify'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Is there a reliable  stream/ETL process established? 

Tokens are: 
>> ['Is', 'there', 'a', 'reliable', 'stream', '/', 'ETL', 'process', 'established', '?'] 

 UPOS tags are: 
>> [('Is', 'VERB'), ('there', 'PRON'), ('a', 'DET'), ('reliable', 'ADJ'), ('stream', 'NOUN'), ('/', 'SYM'), ('ETL', 'NOUN'), ('process', 'NOUN'), ('established', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Is', 'VBZ'), ('there', 'EX'), ('a', 'DT'), ('reliable', 'JJ'), ('stream', 'NN'), ('/', ','), ('ETL', 'NN'), ('process', 'NN'), ('established', 'VBN'), ('?', '.')] 

 Lemmas are: 
>> [('Is', 'be'), ('there', 'there'), ('a', 'a'), ('reliable', 'reliable'), ('stream', 'stream'), ('/', '/'), ('ETL', 'etl'), ('process', 'process'), ('established', 'establish'), ('?', '?')] 

 Dependency tags are: 
>> [(('Is', 'root'), 'root'), (('there', 'Is'), 'expl'), (('a', 'process'), 'det'), (('reliable', 'process'), 'amod'), (('stream', 'ETL'), 'compound'), (('/', 'ETL'), 'cc'), (('ETL', 'process'), 'compound'), (('process', 'Is'), 'nsubj'), (('established', 'process'), 'acl'), (('?', 'Is'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Where is the data stored, and how easy is it to  access and analyze? 

Tokens are: 
>> ['Where', 'is', 'the', 'data', 'stored', ',', 'and', 'how', 'easy', 'is', 'it', 'to', 'access', 'and', 'analyze', '?'] 

 UPOS tags are: 
>> [('Where', 'ADV'), ('is', 'AUX'), ('the', 'DET'), ('data', 'NOUN'), ('stored', 'VERB'), (',', 'PUNCT'), ('and', 'CCONJ'), ('how', 'SCONJ'), ('easy', 'ADJ'), ('is', 'AUX'), ('it', 'PRON'), ('to', 'PART'), ('access', 'VERB'), ('and', 'CCONJ'), ('analyze', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Where', 'WRB'), ('is', 'VBZ'), ('the', 'DT'), ('data', 'NNS'), ('stored', 'VBN'), (',', ','), ('and', 'CC'), ('how', 'WRB'), ('easy', 'JJ'), ('is', 'VBZ'), ('it', 'PRP'), ('to', 'TO'), ('access', 'VB'), ('and', 'CC'), ('analyze', 'VB'), ('?', '.')] 

 Lemmas are: 
>> [('Where', 'where'), ('is', 'be'), ('the', 'the'), ('data', 'datum'), ('stored', 'store'), (',', ','), ('and', 'and'), ('how', 'how'), ('easy', 'easy'), ('is', 'be'), ('it', 'it'), ('to', 'to'), ('access', 'access'), ('and', 'and'), ('analyze', 'analyze'), ('?', '?')] 

 Dependency tags are: 
>> [(('Where', 'root'), 'root'), (('is', 'Where'), 'cop'), (('the', 'data'), 'det'), (('data', 'stored'), 'nsubj:pass'), (('stored', 'Where'), 'advcl'), ((',', 'easy'), 'punct'), (('and', 'easy'), 'cc'), (('how', 'easy'), 'mark'), (('easy', 'stored'), 'conj'), (('is', 'easy'), 'cop'), (('it', 'easy'), 'expl'), (('to', 'access'), 'mark'), (('access', 'easy'), 'csubj'), (('and', 'analyze'), 'cc'), (('analyze', 'access'), 'conj'), (('?', 'Where'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 122 =================================

Explore and transform. Only when data is accessible can it be explored and  transformed for modelling. This stage is one of the most time-consuming and  underestimated of the data science project lifecycle. It is at this stage that teams  and organizations realize that they are missing data, their machine sensors are  unreliable, they are not tracking relevant information about customers and other  key issues. It forces them to return to data collection and ensure the foundation is  solid before moving forward. 


------------------- Sentence 1 -------------------

 Explore and transform. 

Tokens are: 
>> ['Explore', 'and', 'transform', '.'] 

 UPOS tags are: 
>> [('Explore', 'VERB'), ('and', 'CCONJ'), ('transform', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Explore', 'VB'), ('and', 'CC'), ('transform', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('Explore', 'explore'), ('and', 'and'), ('transform', 'transform'), ('.', '.')] 

 Dependency tags are: 
>> [(('Explore', 'root'), 'root'), (('and', 'transform'), 'cc'), (('transform', 'Explore'), 'conj'), (('.', 'Explore'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Only when data is accessible can it be explored and  transformed for modelling. 

Tokens are: 
>> ['Only', 'when', 'data', 'is', 'accessible', 'can', 'it', 'be', 'explored', 'and', 'transformed', 'for', 'modelling', '.'] 

 UPOS tags are: 
>> [('Only', 'ADV'), ('when', 'SCONJ'), ('data', 'NOUN'), ('is', 'AUX'), ('accessible', 'ADJ'), ('can', 'AUX'), ('it', 'PRON'), ('be', 'AUX'), ('explored', 'VERB'), ('and', 'CCONJ'), ('transformed', 'VERB'), ('for', 'ADP'), ('modelling', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Only', 'RB'), ('when', 'WRB'), ('data', 'NNS'), ('is', 'VBZ'), ('accessible', 'JJ'), ('can', 'MD'), ('it', 'PRP'), ('be', 'VB'), ('explored', 'VBN'), ('and', 'CC'), ('transformed', 'VBN'), ('for', 'IN'), ('modelling', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Only', 'only'), ('when', 'when'), ('data', 'datum'), ('is', 'be'), ('accessible', 'accessible'), ('can', 'can'), ('it', 'it'), ('be', 'be'), ('explored', 'explore'), ('and', 'and'), ('transformed', 'transform'), ('for', 'for'), ('modelling', 'modelling'), ('.', '.')] 

 Dependency tags are: 
>> [(('Only', 'accessible'), 'advmod'), (('when', 'accessible'), 'mark'), (('data', 'accessible'), 'nsubj'), (('is', 'accessible'), 'cop'), (('accessible', 'explored'), 'advcl'), (('can', 'explored'), 'aux'), (('it', 'explored'), 'nsubj:pass'), (('be', 'explored'), 'aux:pass'), (('explored', 'root'), 'root'), (('and', 'transformed'), 'cc'), (('transformed', 'explored'), 'conj'), (('for', 'modelling'), 'case'), (('modelling', 'explored'), 'obl'), (('.', 'explored'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 This stage is one of the most time-consuming and  underestimated of the data science project lifecycle. 

Tokens are: 
>> ['This', 'stage', 'is', 'one', 'of', 'the', 'most', 'time', '-', 'consuming', 'and', 'underestimated', 'of', 'the', 'data', 'science', 'project', 'lifecycle', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('stage', 'NOUN'), ('is', 'AUX'), ('one', 'NUM'), ('of', 'ADP'), ('the', 'DET'), ('most', 'ADJ'), ('time', 'NOUN'), ('-', 'PUNCT'), ('consuming', 'VERB'), ('and', 'CCONJ'), ('underestimated', 'VERB'), ('of', 'ADP'), ('the', 'DET'), ('data', 'NOUN'), ('science', 'NOUN'), ('project', 'NOUN'), ('lifecycle', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('stage', 'NN'), ('is', 'VBZ'), ('one', 'CD'), ('of', 'IN'), ('the', 'DT'), ('most', 'JJS'), ('time', 'NN'), ('-', 'HYPH'), ('consuming', 'VBG'), ('and', 'CC'), ('underestimated', 'VBN'), ('of', 'IN'), ('the', 'DT'), ('data', 'NN'), ('science', 'NN'), ('project', 'NN'), ('lifecycle', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('stage', 'stage'), ('is', 'be'), ('one', 'one'), ('of', 'of'), ('the', 'the'), ('most', 'most'), ('time', 'time'), ('-', '-'), ('consuming', 'consume'), ('and', 'and'), ('underestimated', 'underestimate'), ('of', 'of'), ('the', 'the'), ('data', 'datum'), ('science', 'science'), ('project', 'project'), ('lifecycle', 'lifecycle'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'stage'), 'det'), (('stage', 'one'), 'nsubj'), (('is', 'one'), 'cop'), (('one', 'root'), 'root'), (('of', 'consuming'), 'case'), (('the', 'consuming'), 'det'), (('most', 'consuming'), 'amod'), (('time', 'consuming'), 'compound'), (('-', 'consuming'), 'punct'), (('consuming', 'one'), 'acl'), (('and', 'underestimated'), 'cc'), (('underestimated', 'consuming'), 'conj'), (('of', 'lifecycle'), 'case'), (('the', 'lifecycle'), 'det'), (('data', 'project'), 'compound'), (('science', 'project'), 'compound'), (('project', 'lifecycle'), 'compound'), (('lifecycle', 'underestimated'), 'obl'), (('.', 'one'), 'punct')]

 Named Entites are: 
>> [('one', 'CARDINAL')]

------------------- Sentence 4 -------------------

 It is at this stage that teams  and organizations realize that they are missing data, their machine sensors are  unreliable, they are not tracking relevant information about customers and other  key issues. 

Tokens are: 
>> ['It', 'is', 'at', 'this', 'stage', 'that', 'teams', 'and', 'organizations', 'realize', 'that', 'they', 'are', 'missing', 'data', ',', 'their', 'machine', 'sensors', 'are', 'unreliable', ',', 'they', 'are', 'not', 'tracking', 'relevant', 'information', 'about', 'customers', 'and', 'other', 'key', 'issues', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('at', 'ADP'), ('this', 'DET'), ('stage', 'NOUN'), ('that', 'SCONJ'), ('teams', 'NOUN'), ('and', 'CCONJ'), ('organizations', 'NOUN'), ('realize', 'VERB'), ('that', 'SCONJ'), ('they', 'PRON'), ('are', 'AUX'), ('missing', 'VERB'), ('data', 'NOUN'), (',', 'PUNCT'), ('their', 'PRON'), ('machine', 'NOUN'), ('sensors', 'NOUN'), ('are', 'AUX'), ('unreliable', 'ADJ'), (',', 'PUNCT'), ('they', 'PRON'), ('are', 'AUX'), ('not', 'PART'), ('tracking', 'VERB'), ('relevant', 'ADJ'), ('information', 'NOUN'), ('about', 'ADP'), ('customers', 'NOUN'), ('and', 'CCONJ'), ('other', 'ADJ'), ('key', 'ADJ'), ('issues', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('at', 'IN'), ('this', 'DT'), ('stage', 'NN'), ('that', 'IN'), ('teams', 'NNS'), ('and', 'CC'), ('organizations', 'NNS'), ('realize', 'VBP'), ('that', 'IN'), ('they', 'PRP'), ('are', 'VBP'), ('missing', 'VBG'), ('data', 'NNS'), (',', ','), ('their', 'PRP$'), ('machine', 'NN'), ('sensors', 'NNS'), ('are', 'VBP'), ('unreliable', 'JJ'), (',', ','), ('they', 'PRP'), ('are', 'VBP'), ('not', 'RB'), ('tracking', 'VBG'), ('relevant', 'JJ'), ('information', 'NN'), ('about', 'IN'), ('customers', 'NNS'), ('and', 'CC'), ('other', 'JJ'), ('key', 'JJ'), ('issues', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('at', 'at'), ('this', 'this'), ('stage', 'stage'), ('that', 'that'), ('teams', 'team'), ('and', 'and'), ('organizations', 'organization'), ('realize', 'realize'), ('that', 'that'), ('they', 'they'), ('are', 'be'), ('missing', 'miss'), ('data', 'datum'), (',', ','), ('their', 'they'), ('machine', 'machine'), ('sensors', 'sensor'), ('are', 'be'), ('unreliable', 'unreliable'), (',', ','), ('they', 'they'), ('are', 'be'), ('not', 'not'), ('tracking', 'track'), ('relevant', 'relevant'), ('information', 'information'), ('about', 'about'), ('customers', 'customer'), ('and', 'and'), ('other', 'other'), ('key', 'key'), ('issues', 'issue'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'stage'), 'nsubj'), (('is', 'stage'), 'cop'), (('at', 'stage'), 'case'), (('this', 'stage'), 'det'), (('stage', 'root'), 'root'), (('that', 'realize'), 'mark'), (('teams', 'realize'), 'nsubj'), (('and', 'organizations'), 'cc'), (('organizations', 'teams'), 'conj'), (('realize', 'stage'), 'acl'), (('that', 'missing'), 'mark'), (('they', 'missing'), 'nsubj'), (('are', 'missing'), 'aux'), (('missing', 'realize'), 'ccomp'), (('data', 'missing'), 'obj'), ((',', 'unreliable'), 'punct'), (('their', 'sensors'), 'nmod:poss'), (('machine', 'sensors'), 'compound'), (('sensors', 'unreliable'), 'nsubj'), (('are', 'unreliable'), 'cop'), (('unreliable', 'realize'), 'ccomp'), ((',', 'tracking'), 'punct'), (('they', 'tracking'), 'nsubj'), (('are', 'tracking'), 'aux'), (('not', 'tracking'), 'advmod'), (('tracking', 'unreliable'), 'parataxis'), (('relevant', 'information'), 'amod'), (('information', 'tracking'), 'obj'), (('about', 'customers'), 'case'), (('customers', 'information'), 'nmod'), (('and', 'issues'), 'cc'), (('other', 'issues'), 'amod'), (('key', 'issues'), 'amod'), (('issues', 'customers'), 'conj'), (('.', 'stage'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 It forces them to return to data collection and ensure the foundation is  solid before moving forward. 

Tokens are: 
>> ['It', 'forces', 'them', 'to', 'return', 'to', 'data', 'collection', 'and', 'ensure', 'the', 'foundation', 'is', 'solid', 'before', 'moving', 'forward', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('forces', 'VERB'), ('them', 'PRON'), ('to', 'PART'), ('return', 'VERB'), ('to', 'ADP'), ('data', 'NOUN'), ('collection', 'NOUN'), ('and', 'CCONJ'), ('ensure', 'VERB'), ('the', 'DET'), ('foundation', 'NOUN'), ('is', 'AUX'), ('solid', 'ADJ'), ('before', 'SCONJ'), ('moving', 'VERB'), ('forward', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('forces', 'VBZ'), ('them', 'PRP'), ('to', 'TO'), ('return', 'VB'), ('to', 'IN'), ('data', 'NN'), ('collection', 'NN'), ('and', 'CC'), ('ensure', 'VB'), ('the', 'DT'), ('foundation', 'NN'), ('is', 'VBZ'), ('solid', 'JJ'), ('before', 'IN'), ('moving', 'VBG'), ('forward', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('forces', 'force'), ('them', 'they'), ('to', 'to'), ('return', 'return'), ('to', 'to'), ('data', 'datum'), ('collection', 'collection'), ('and', 'and'), ('ensure', 'ensure'), ('the', 'the'), ('foundation', 'foundation'), ('is', 'be'), ('solid', 'solid'), ('before', 'before'), ('moving', 'move'), ('forward', 'forward'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'forces'), 'nsubj'), (('forces', 'root'), 'root'), (('them', 'forces'), 'obj'), (('to', 'return'), 'mark'), (('return', 'forces'), 'xcomp'), (('to', 'collection'), 'case'), (('data', 'collection'), 'compound'), (('collection', 'return'), 'obl'), (('and', 'ensure'), 'cc'), (('ensure', 'forces'), 'conj'), (('the', 'foundation'), 'det'), (('foundation', 'solid'), 'nsubj'), (('is', 'solid'), 'cop'), (('solid', 'ensure'), 'ccomp'), (('before', 'moving'), 'mark'), (('moving', 'solid'), 'advcl'), (('forward', 'moving'), 'advmod'), (('.', 'forces'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 123 =================================

“Not going to the top is like  an insight engine working  at half capacity, not using  all its potential.”


------------------- Sentence 1 -------------------

 “Not going to the top is like  an insight engine working  at half capacity, not using  all its potential.” 

Tokens are: 
>> ['“', 'Not', 'going', 'to', 'the', 'top', 'is', 'like', 'an', 'insight', 'engine', 'working', 'at', 'half', 'capacity', ',', 'not', 'using', 'all', 'its', 'potential', '.', '”'] 

 UPOS tags are: 
>> [('“', 'PUNCT'), ('Not', 'PART'), ('going', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('top', 'NOUN'), ('is', 'AUX'), ('like', 'ADP'), ('an', 'DET'), ('insight', 'NOUN'), ('engine', 'NOUN'), ('working', 'VERB'), ('at', 'ADP'), ('half', 'DET'), ('capacity', 'NOUN'), (',', 'PUNCT'), ('not', 'PART'), ('using', 'VERB'), ('all', 'PRON'), ('its', 'PRON'), ('potential', 'NOUN'), ('.', 'PUNCT'), ('”', 'PUNCT')] 

 XPOS tags are: 
>> [('“', '``'), ('Not', 'RB'), ('going', 'VBG'), ('to', 'IN'), ('the', 'DT'), ('top', 'NN'), ('is', 'VBZ'), ('like', 'IN'), ('an', 'DT'), ('insight', 'NN'), ('engine', 'NN'), ('working', 'VBG'), ('at', 'IN'), ('half', 'DT'), ('capacity', 'NN'), (',', ','), ('not', 'RB'), ('using', 'VBG'), ('all', 'PDT'), ('its', 'PRP$'), ('potential', 'NN'), ('.', '.'), ('”', "''")] 

 Lemmas are: 
>> [('“', "''"), ('Not', 'not'), ('going', 'go'), ('to', 'to'), ('the', 'the'), ('top', 'top'), ('is', 'be'), ('like', 'like'), ('an', 'a'), ('insight', 'insight'), ('engine', 'engine'), ('working', 'work'), ('at', 'at'), ('half', 'half'), ('capacity', 'capacity'), (',', ','), ('not', 'not'), ('using', 'use'), ('all', 'all'), ('its', 'its'), ('potential', 'potential'), ('.', '.'), ('”', "''")] 

 Dependency tags are: 
>> [(('“', 'going'), 'punct'), (('Not', 'going'), 'advmod'), (('going', 'engine'), 'csubj'), (('to', 'top'), 'case'), (('the', 'top'), 'det'), (('top', 'going'), 'obl'), (('is', 'engine'), 'cop'), (('like', 'engine'), 'case'), (('an', 'engine'), 'det'), (('insight', 'engine'), 'compound'), (('engine', 'root'), 'root'), (('working', 'engine'), 'acl'), (('at', 'capacity'), 'case'), (('half', 'capacity'), 'det'), (('capacity', 'working'), 'obl'), ((',', 'using'), 'punct'), (('not', 'using'), 'advmod'), (('using', 'working'), 'advcl'), (('all', 'potential'), 'det:predet'), (('its', 'potential'), 'nmod:poss'), (('potential', 'using'), 'obj'), (('.', 'engine'), 'punct'), (('”', 'engine'), 'punct')]

 Named Entites are: 
>> [('half', 'CARDINAL')]

================================ Paragraph 124 =================================

8/14Demystifying data science  


------------------- Sentence 1 -------------------

 8/14 

Tokens are: 
>> ['8/14'] 

 UPOS tags are: 
>> [('8/14', 'NUM')] 

 XPOS tags are: 
>> [('8/14', 'CD')] 

 Lemmas are: 
>> [('8/14', '8/14')] 

 Dependency tags are: 
>> [(('8/14', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Demystifying data science 

Tokens are: 
>> ['Demystifying', 'data', 'science'] 

 UPOS tags are: 
>> [('Demystifying', 'VERB'), ('data', 'NOUN'), ('science', 'NOUN')] 

 XPOS tags are: 
>> [('Demystifying', 'VBG'), ('data', 'NN'), ('science', 'NN')] 

 Lemmas are: 
>> [('Demystifying', 'demystify'), ('data', 'datum'), ('science', 'science')] 

 Dependency tags are: 
>> [(('Demystifying', 'root'), 'root'), (('data', 'science'), 'compound'), (('science', 'Demystifying'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 125 =================================

Business intelligence and analytics. When teams can reliably explore and clean  data, organizations can start building what is traditionally thought of as business  intelligence or analytics, which includes defining key metrics to track, identifying  how seasonality impacts product sales and operations, segmenting users based on  demographic factors, etc. However, as the goal is to build an artificial intelligence  solution, it is important to start thinking about the features or attributes to include  in machine learning models, what training data the machine will need to learn, what  to predict and automate and how to create the labels from which the machine will  learn. Label creation can be done automatically, such as when the machine breaks  down and it automatically registers an event in the back-end system. Or, it can  be done by introducing humans. For example, an engineer reports an issue when  a machine part seems to be faulty during a routine inspection and the result is  manually added to the data.  


------------------- Sentence 1 -------------------

 Business intelligence and analytics. 

Tokens are: 
>> ['Business', 'intelligence', 'and', 'analytics', '.'] 

 UPOS tags are: 
>> [('Business', 'NOUN'), ('intelligence', 'NOUN'), ('and', 'CCONJ'), ('analytics', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Business', 'NN'), ('intelligence', 'NN'), ('and', 'CC'), ('analytics', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Business', 'business'), ('intelligence', 'intelligence'), ('and', 'and'), ('analytics', 'analytic'), ('.', '.')] 

 Dependency tags are: 
>> [(('Business', 'intelligence'), 'compound'), (('intelligence', 'root'), 'root'), (('and', 'analytics'), 'cc'), (('analytics', 'intelligence'), 'conj'), (('.', 'intelligence'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 When teams can reliably explore and clean  data, organizations can start building what is traditionally thought of as business  intelligence or analytics, which includes defining key metrics to track, identifying  how seasonality impacts product sales and operations, segmenting users based on  demographic factors, etc. 

Tokens are: 
>> ['When', 'teams', 'can', 'reliably', 'explore', 'and', 'clean', 'data', ',', 'organizations', 'can', 'start', 'building', 'what', 'is', 'traditionally', 'thought', 'of', 'as', 'business', 'intelligence', 'or', 'analytics', ',', 'which', 'includes', 'defining', 'key', 'metrics', 'to', 'track', ',', 'identifying', 'how', 'seasonality', 'impacts', 'product', 'sales', 'and', 'operations', ',', 'segmenting', 'users', 'based', 'on', 'demographic', 'factors', ',', 'etc', '.'] 

 UPOS tags are: 
>> [('When', 'SCONJ'), ('teams', 'NOUN'), ('can', 'AUX'), ('reliably', 'ADV'), ('explore', 'VERB'), ('and', 'CCONJ'), ('clean', 'ADJ'), ('data', 'NOUN'), (',', 'PUNCT'), ('organizations', 'NOUN'), ('can', 'AUX'), ('start', 'VERB'), ('building', 'VERB'), ('what', 'PRON'), ('is', 'AUX'), ('traditionally', 'ADV'), ('thought', 'VERB'), ('of', 'ADP'), ('as', 'ADP'), ('business', 'NOUN'), ('intelligence', 'NOUN'), ('or', 'CCONJ'), ('analytics', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('includes', 'VERB'), ('defining', 'VERB'), ('key', 'ADJ'), ('metrics', 'NOUN'), ('to', 'PART'), ('track', 'VERB'), (',', 'PUNCT'), ('identifying', 'VERB'), ('how', 'SCONJ'), ('seasonality', 'NOUN'), ('impacts', 'VERB'), ('product', 'NOUN'), ('sales', 'NOUN'), ('and', 'CCONJ'), ('operations', 'NOUN'), (',', 'PUNCT'), ('segmenting', 'VERB'), ('users', 'NOUN'), ('based', 'VERB'), ('on', 'ADP'), ('demographic', 'ADJ'), ('factors', 'NOUN'), (',', 'PUNCT'), ('etc', 'X'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('When', 'WRB'), ('teams', 'NNS'), ('can', 'MD'), ('reliably', 'RB'), ('explore', 'VB'), ('and', 'CC'), ('clean', 'JJ'), ('data', 'NNS'), (',', ','), ('organizations', 'NNS'), ('can', 'MD'), ('start', 'VB'), ('building', 'VBG'), ('what', 'WP'), ('is', 'VBZ'), ('traditionally', 'RB'), ('thought', 'VBN'), ('of', 'IN'), ('as', 'IN'), ('business', 'NN'), ('intelligence', 'NN'), ('or', 'CC'), ('analytics', 'NN'), (',', ','), ('which', 'WDT'), ('includes', 'VBZ'), ('defining', 'VBG'), ('key', 'JJ'), ('metrics', 'NNS'), ('to', 'TO'), ('track', 'VB'), (',', ','), ('identifying', 'VBG'), ('how', 'WRB'), ('seasonality', 'NN'), ('impacts', 'VBZ'), ('product', 'NN'), ('sales', 'NNS'), ('and', 'CC'), ('operations', 'NNS'), (',', ','), ('segmenting', 'VBG'), ('users', 'NNS'), ('based', 'VBN'), ('on', 'IN'), ('demographic', 'JJ'), ('factors', 'NNS'), (',', ','), ('etc', 'FW'), ('.', '.')] 

 Lemmas are: 
>> [('When', 'when'), ('teams', 'team'), ('can', 'can'), ('reliably', 'reliably'), ('explore', 'explore'), ('and', 'and'), ('clean', 'clean'), ('data', 'datum'), (',', ','), ('organizations', 'organization'), ('can', 'can'), ('start', 'start'), ('building', 'build'), ('what', 'what'), ('is', 'be'), ('traditionally', 'traditionally'), ('thought', 'think'), ('of', 'of'), ('as', 'as'), ('business', 'business'), ('intelligence', 'intelligence'), ('or', 'or'), ('analytics', 'analytic'), (',', ','), ('which', 'which'), ('includes', 'include'), ('defining', 'define'), ('key', 'key'), ('metrics', 'metric'), ('to', 'to'), ('track', 'track'), (',', ','), ('identifying', 'identify'), ('how', 'how'), ('seasonality', 'seasonality'), ('impacts', 'impact'), ('product', 'product'), ('sales', 'sale'), ('and', 'and'), ('operations', 'operation'), (',', ','), ('segmenting', 'segment'), ('users', 'user'), ('based', 'base'), ('on', 'on'), ('demographic', 'demographic'), ('factors', 'factor'), (',', ','), ('etc', 'etc'), ('.', '.')] 

 Dependency tags are: 
>> [(('When', 'explore'), 'mark'), (('teams', 'explore'), 'nsubj'), (('can', 'explore'), 'aux'), (('reliably', 'explore'), 'advmod'), (('explore', 'start'), 'advcl'), (('and', 'data'), 'cc'), (('clean', 'data'), 'amod'), (('data', 'explore'), 'obj'), ((',', 'start'), 'punct'), (('organizations', 'start'), 'nsubj'), (('can', 'start'), 'aux'), (('start', 'root'), 'root'), (('building', 'start'), 'xcomp'), (('what', 'building'), 'obj'), (('is', 'thought'), 'aux:pass'), (('traditionally', 'thought'), 'advmod'), (('thought', 'what'), 'acl:relcl'), (('of', 'thought'), 'obl'), (('as', 'intelligence'), 'case'), (('business', 'intelligence'), 'compound'), (('intelligence', 'thought'), 'obl'), (('or', 'analytics'), 'cc'), (('analytics', 'intelligence'), 'conj'), ((',', 'includes'), 'punct'), (('which', 'includes'), 'nsubj'), (('includes', 'intelligence'), 'acl:relcl'), (('defining', 'includes'), 'xcomp'), (('key', 'metrics'), 'amod'), (('metrics', 'defining'), 'obj'), (('to', 'track'), 'mark'), (('track', 'defining'), 'advcl'), ((',', 'identifying'), 'punct'), (('identifying', 'defining'), 'advcl'), (('how', 'impacts'), 'mark'), (('seasonality', 'impacts'), 'nsubj'), (('impacts', 'identifying'), 'ccomp'), (('product', 'sales'), 'compound'), (('sales', 'impacts'), 'obj'), (('and', 'operations'), 'cc'), (('operations', 'sales'), 'conj'), ((',', 'segmenting'), 'punct'), (('segmenting', 'impacts'), 'advcl'), (('users', 'segmenting'), 'obj'), (('based', 'users'), 'acl'), (('on', 'factors'), 'case'), (('demographic', 'factors'), 'amod'), (('factors', 'based'), 'obl'), ((',', 'etc'), 'punct'), (('etc', 'factors'), 'conj'), (('.', 'start'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 However, as the goal is to build an artificial intelligence  solution, it is important to start thinking about the features or attributes to include  in machine learning models, what training data the machine will need to learn, what  to predict and automate and how to create the labels from which the machine will  learn. 

Tokens are: 
>> ['However', ',', 'as', 'the', 'goal', 'is', 'to', 'build', 'an', 'artificial', 'intelligence', 'solution', ',', 'it', 'is', 'important', 'to', 'start', 'thinking', 'about', 'the', 'features', 'or', 'attributes', 'to', 'include', 'in', 'machine', 'learning', 'models', ',', 'what', 'training', 'data', 'the', 'machine', 'will', 'need', 'to', 'learn', ',', 'what', 'to', 'predict', 'and', 'automate', 'and', 'how', 'to', 'create', 'the', 'labels', 'from', 'which', 'the', 'machine', 'will', 'learn', '.'] 

 UPOS tags are: 
>> [('However', 'ADV'), (',', 'PUNCT'), ('as', 'SCONJ'), ('the', 'DET'), ('goal', 'NOUN'), ('is', 'VERB'), ('to', 'PART'), ('build', 'VERB'), ('an', 'DET'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('solution', 'NOUN'), (',', 'PUNCT'), ('it', 'PRON'), ('is', 'AUX'), ('important', 'ADJ'), ('to', 'PART'), ('start', 'VERB'), ('thinking', 'VERB'), ('about', 'ADP'), ('the', 'DET'), ('features', 'NOUN'), ('or', 'CCONJ'), ('attributes', 'NOUN'), ('to', 'PART'), ('include', 'VERB'), ('in', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('models', 'NOUN'), (',', 'PUNCT'), ('what', 'DET'), ('training', 'NOUN'), ('data', 'NOUN'), ('the', 'DET'), ('machine', 'NOUN'), ('will', 'AUX'), ('need', 'VERB'), ('to', 'PART'), ('learn', 'VERB'), (',', 'PUNCT'), ('what', 'PRON'), ('to', 'PART'), ('predict', 'VERB'), ('and', 'CCONJ'), ('automate', 'VERB'), ('and', 'CCONJ'), ('how', 'SCONJ'), ('to', 'PART'), ('create', 'VERB'), ('the', 'DET'), ('labels', 'NOUN'), ('from', 'ADP'), ('which', 'PRON'), ('the', 'DET'), ('machine', 'NOUN'), ('will', 'AUX'), ('learn', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('However', 'RB'), (',', ','), ('as', 'IN'), ('the', 'DT'), ('goal', 'NN'), ('is', 'VBZ'), ('to', 'TO'), ('build', 'VB'), ('an', 'DT'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('solution', 'NN'), (',', ','), ('it', 'PRP'), ('is', 'VBZ'), ('important', 'JJ'), ('to', 'TO'), ('start', 'VB'), ('thinking', 'VBG'), ('about', 'IN'), ('the', 'DT'), ('features', 'NNS'), ('or', 'CC'), ('attributes', 'NNS'), ('to', 'TO'), ('include', 'VB'), ('in', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('models', 'NNS'), (',', ','), ('what', 'WDT'), ('training', 'NN'), ('data', 'NNS'), ('the', 'DT'), ('machine', 'NN'), ('will', 'MD'), ('need', 'VB'), ('to', 'TO'), ('learn', 'VB'), (',', ','), ('what', 'WP'), ('to', 'TO'), ('predict', 'VB'), ('and', 'CC'), ('automate', 'VB'), ('and', 'CC'), ('how', 'WRB'), ('to', 'TO'), ('create', 'VB'), ('the', 'DT'), ('labels', 'NNS'), ('from', 'IN'), ('which', 'WDT'), ('the', 'DT'), ('machine', 'NN'), ('will', 'MD'), ('learn', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('However', 'however'), (',', ','), ('as', 'as'), ('the', 'the'), ('goal', 'goal'), ('is', 'be'), ('to', 'to'), ('build', 'build'), ('an', 'a'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('solution', 'solution'), (',', ','), ('it', 'it'), ('is', 'be'), ('important', 'important'), ('to', 'to'), ('start', 'start'), ('thinking', 'think'), ('about', 'about'), ('the', 'the'), ('features', 'feature'), ('or', 'or'), ('attributes', 'attribute'), ('to', 'to'), ('include', 'include'), ('in', 'in'), ('machine', 'machine'), ('learning', 'learning'), ('models', 'model'), (',', ','), ('what', 'what'), ('training', 'training'), ('data', 'datum'), ('the', 'the'), ('machine', 'machine'), ('will', 'will'), ('need', 'need'), ('to', 'to'), ('learn', 'learn'), (',', ','), ('what', 'what'), ('to', 'to'), ('predict', 'predict'), ('and', 'and'), ('automate', 'automate'), ('and', 'and'), ('how', 'how'), ('to', 'to'), ('create', 'create'), ('the', 'the'), ('labels', 'label'), ('from', 'from'), ('which', 'which'), ('the', 'the'), ('machine', 'machine'), ('will', 'will'), ('learn', 'learn'), ('.', '.')] 

 Dependency tags are: 
>> [(('However', 'important'), 'advmod'), ((',', 'important'), 'punct'), (('as', 'is'), 'mark'), (('the', 'goal'), 'det'), (('goal', 'is'), 'nsubj'), (('is', 'important'), 'advcl'), (('to', 'build'), 'mark'), (('build', 'is'), 'xcomp'), (('an', 'solution'), 'det'), (('artificial', 'solution'), 'amod'), (('intelligence', 'solution'), 'compound'), (('solution', 'build'), 'obj'), ((',', 'important'), 'punct'), (('it', 'important'), 'expl'), (('is', 'important'), 'cop'), (('important', 'root'), 'root'), (('to', 'start'), 'mark'), (('start', 'important'), 'csubj'), (('thinking', 'start'), 'xcomp'), (('about', 'features'), 'case'), (('the', 'features'), 'det'), (('features', 'thinking'), 'obl'), (('or', 'attributes'), 'cc'), (('attributes', 'features'), 'conj'), (('to', 'include'), 'mark'), (('include', 'thinking'), 'advcl'), (('in', 'models'), 'case'), (('machine', 'models'), 'compound'), (('learning', 'models'), 'compound'), (('models', 'include'), 'obl'), ((',', 'need'), 'punct'), (('what', 'data'), 'det'), (('training', 'data'), 'compound'), (('data', 'need'), 'obj'), (('the', 'machine'), 'det'), (('machine', 'need'), 'nsubj'), (('will', 'need'), 'aux'), (('need', 'models'), 'acl:relcl'), (('to', 'learn'), 'mark'), (('learn', 'need'), 'xcomp'), ((',', 'what'), 'punct'), (('what', 'need'), 'obj'), (('to', 'predict'), 'mark'), (('predict', 'what'), 'acl'), (('and', 'automate'), 'cc'), (('automate', 'predict'), 'conj'), (('and', 'create'), 'cc'), (('how', 'create'), 'mark'), (('to', 'create'), 'mark'), (('create', 'predict'), 'conj'), (('the', 'labels'), 'det'), (('labels', 'create'), 'obj'), (('from', 'which'), 'case'), (('which', 'learn'), 'obl'), (('the', 'machine'), 'det'), (('machine', 'learn'), 'nsubj'), (('will', 'learn'), 'aux'), (('learn', 'labels'), 'acl:relcl'), (('.', 'important'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Label creation can be done automatically, such as when the machine breaks  down and it automatically registers an event in the back-end system. 

Tokens are: 
>> ['Label', 'creation', 'can', 'be', 'done', 'automatically', ',', 'such', 'as', 'when', 'the', 'machine', 'breaks', 'down', 'and', 'it', 'automatically', 'registers', 'an', 'event', 'in', 'the', 'back', '-', 'end', 'system', '.'] 

 UPOS tags are: 
>> [('Label', 'NOUN'), ('creation', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('done', 'VERB'), ('automatically', 'ADV'), (',', 'PUNCT'), ('such', 'ADJ'), ('as', 'ADP'), ('when', 'SCONJ'), ('the', 'DET'), ('machine', 'NOUN'), ('breaks', 'VERB'), ('down', 'ADP'), ('and', 'CCONJ'), ('it', 'PRON'), ('automatically', 'ADV'), ('registers', 'VERB'), ('an', 'DET'), ('event', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('back', 'NOUN'), ('-', 'PUNCT'), ('end', 'NOUN'), ('system', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Label', 'NN'), ('creation', 'NN'), ('can', 'MD'), ('be', 'VB'), ('done', 'VBN'), ('automatically', 'RB'), (',', ','), ('such', 'JJ'), ('as', 'IN'), ('when', 'WRB'), ('the', 'DT'), ('machine', 'NN'), ('breaks', 'VBZ'), ('down', 'RP'), ('and', 'CC'), ('it', 'PRP'), ('automatically', 'RB'), ('registers', 'VBZ'), ('an', 'DT'), ('event', 'NN'), ('in', 'IN'), ('the', 'DT'), ('back', 'NN'), ('-', 'HYPH'), ('end', 'NN'), ('system', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Label', 'label'), ('creation', 'creation'), ('can', 'can'), ('be', 'be'), ('done', 'do'), ('automatically', 'automatically'), (',', ','), ('such', 'such'), ('as', 'as'), ('when', 'when'), ('the', 'the'), ('machine', 'machine'), ('breaks', 'break'), ('down', 'down'), ('and', 'and'), ('it', 'it'), ('automatically', 'automatically'), ('registers', 'register'), ('an', 'a'), ('event', 'event'), ('in', 'in'), ('the', 'the'), ('back', 'back'), ('-', '-'), ('end', 'end'), ('system', 'system'), ('.', '.')] 

 Dependency tags are: 
>> [(('Label', 'creation'), 'compound'), (('creation', 'done'), 'nsubj:pass'), (('can', 'done'), 'aux'), (('be', 'done'), 'aux:pass'), (('done', 'root'), 'root'), (('automatically', 'done'), 'advmod'), ((',', 'done'), 'punct'), (('such', 'breaks'), 'mark'), (('as', 'such'), 'fixed'), (('when', 'breaks'), 'mark'), (('the', 'machine'), 'det'), (('machine', 'breaks'), 'nsubj'), (('breaks', 'done'), 'advcl'), (('down', 'breaks'), 'compound:prt'), (('and', 'registers'), 'cc'), (('it', 'registers'), 'nsubj'), (('automatically', 'registers'), 'advmod'), (('registers', 'done'), 'conj'), (('an', 'event'), 'det'), (('event', 'registers'), 'obj'), (('in', 'system'), 'case'), (('the', 'system'), 'det'), (('back', 'end'), 'compound'), (('-', 'end'), 'punct'), (('end', 'system'), 'compound'), (('system', 'event'), 'nmod'), (('.', 'done'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 Or, it can  be done by introducing humans. 

Tokens are: 
>> ['Or', ',', 'it', 'can', 'be', 'done', 'by', 'introducing', 'humans', '.'] 

 UPOS tags are: 
>> [('Or', 'CCONJ'), (',', 'PUNCT'), ('it', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('done', 'VERB'), ('by', 'SCONJ'), ('introducing', 'VERB'), ('humans', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Or', 'CC'), (',', ','), ('it', 'PRP'), ('can', 'MD'), ('be', 'VB'), ('done', 'VBN'), ('by', 'IN'), ('introducing', 'VBG'), ('humans', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Or', 'or'), (',', ','), ('it', 'it'), ('can', 'can'), ('be', 'be'), ('done', 'do'), ('by', 'by'), ('introducing', 'introduce'), ('humans', 'human'), ('.', '.')] 

 Dependency tags are: 
>> [(('Or', 'done'), 'cc'), ((',', 'done'), 'punct'), (('it', 'done'), 'nsubj:pass'), (('can', 'done'), 'aux'), (('be', 'done'), 'aux:pass'), (('done', 'root'), 'root'), (('by', 'introducing'), 'mark'), (('introducing', 'done'), 'advcl'), (('humans', 'introducing'), 'obj'), (('.', 'done'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 For example, an engineer reports an issue when  a machine part seems to be faulty during a routine inspection and the result is  manually added to the data. 

Tokens are: 
>> ['For', 'example', ',', 'an', 'engineer', 'reports', 'an', 'issue', 'when', 'a', 'machine', 'part', 'seems', 'to', 'be', 'faulty', 'during', 'a', 'routine', 'inspection', 'and', 'the', 'result', 'is', 'manually', 'added', 'to', 'the', 'data', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('an', 'DET'), ('engineer', 'NOUN'), ('reports', 'VERB'), ('an', 'DET'), ('issue', 'NOUN'), ('when', 'SCONJ'), ('a', 'DET'), ('machine', 'NOUN'), ('part', 'NOUN'), ('seems', 'VERB'), ('to', 'PART'), ('be', 'AUX'), ('faulty', 'ADJ'), ('during', 'ADP'), ('a', 'DET'), ('routine', 'NOUN'), ('inspection', 'NOUN'), ('and', 'CCONJ'), ('the', 'DET'), ('result', 'NOUN'), ('is', 'AUX'), ('manually', 'ADV'), ('added', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('example', 'NN'), (',', ','), ('an', 'DT'), ('engineer', 'NN'), ('reports', 'VBZ'), ('an', 'DT'), ('issue', 'NN'), ('when', 'WRB'), ('a', 'DT'), ('machine', 'NN'), ('part', 'NN'), ('seems', 'VBZ'), ('to', 'TO'), ('be', 'VB'), ('faulty', 'JJ'), ('during', 'IN'), ('a', 'DT'), ('routine', 'NN'), ('inspection', 'NN'), ('and', 'CC'), ('the', 'DT'), ('result', 'NN'), ('is', 'VBZ'), ('manually', 'RB'), ('added', 'VBN'), ('to', 'IN'), ('the', 'DT'), ('data', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('example', 'example'), (',', ','), ('an', 'a'), ('engineer', 'engineer'), ('reports', 'report'), ('an', 'a'), ('issue', 'issue'), ('when', 'when'), ('a', 'a'), ('machine', 'machine'), ('part', 'part'), ('seems', 'seem'), ('to', 'to'), ('be', 'be'), ('faulty', 'faulty'), ('during', 'during'), ('a', 'a'), ('routine', 'routine'), ('inspection', 'inspection'), ('and', 'and'), ('the', 'the'), ('result', 'result'), ('is', 'be'), ('manually', 'manually'), ('added', 'add'), ('to', 'to'), ('the', 'the'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'example'), 'case'), (('example', 'reports'), 'obl'), ((',', 'example'), 'punct'), (('an', 'engineer'), 'det'), (('engineer', 'reports'), 'nsubj'), (('reports', 'root'), 'root'), (('an', 'issue'), 'det'), (('issue', 'reports'), 'obj'), (('when', 'seems'), 'mark'), (('a', 'part'), 'det'), (('machine', 'part'), 'compound'), (('part', 'seems'), 'nsubj'), (('seems', 'reports'), 'advcl'), (('to', 'faulty'), 'mark'), (('be', 'faulty'), 'cop'), (('faulty', 'seems'), 'xcomp'), (('during', 'inspection'), 'case'), (('a', 'inspection'), 'det'), (('routine', 'inspection'), 'compound'), (('inspection', 'faulty'), 'obl'), (('and', 'added'), 'cc'), (('the', 'result'), 'det'), (('result', 'added'), 'nsubj:pass'), (('is', 'added'), 'aux:pass'), (('manually', 'added'), 'advmod'), (('added', 'reports'), 'conj'), (('to', 'data'), 'case'), (('the', 'data'), 'det'), (('data', 'added'), 'obl'), (('.', 'reports'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 126 =================================

Machine learning and benchmarking. Although there is sample data that can be  used to make predictions, work is not complete. A/B testing or experimentation  framework needs to be in place to deploy models incrementally and avoid real  world disasters. Model validation and experimentation approaches provide a  rough estimate of the effects of changes before practical implementation. At  this stage, a very simple baseline or benchmark for performance tracking should  be established. An example fraud detection system includes monitoring high  risk credit card transactions that were proved to be fraudulent and comparing  them with the current operational performance of machine learning models to  accurately detect fraud.  


------------------- Sentence 1 -------------------

 Machine learning and benchmarking. 

Tokens are: 
>> ['Machine', 'learning', 'and', 'benchmarking', '.'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('learning', 'NOUN'), ('and', 'CCONJ'), ('benchmarking', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('learning', 'NN'), ('and', 'CC'), ('benchmarking', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('learning', 'learning'), ('and', 'and'), ('benchmarking', 'benchmarking'), ('.', '.')] 

 Dependency tags are: 
>> [(('Machine', 'learning'), 'compound'), (('learning', 'root'), 'root'), (('and', 'benchmarking'), 'cc'), (('benchmarking', 'learning'), 'conj'), (('.', 'learning'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Although there is sample data that can be  used to make predictions, work is not complete. 

Tokens are: 
>> ['Although', 'there', 'is', 'sample', 'data', 'that', 'can', 'be', 'used', 'to', 'make', 'predictions', ',', 'work', 'is', 'not', 'complete', '.'] 

 UPOS tags are: 
>> [('Although', 'SCONJ'), ('there', 'PRON'), ('is', 'VERB'), ('sample', 'NOUN'), ('data', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('used', 'VERB'), ('to', 'PART'), ('make', 'VERB'), ('predictions', 'NOUN'), (',', 'PUNCT'), ('work', 'NOUN'), ('is', 'AUX'), ('not', 'PART'), ('complete', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Although', 'IN'), ('there', 'EX'), ('is', 'VBZ'), ('sample', 'NN'), ('data', 'NNS'), ('that', 'WDT'), ('can', 'MD'), ('be', 'VB'), ('used', 'VBN'), ('to', 'TO'), ('make', 'VB'), ('predictions', 'NNS'), (',', ','), ('work', 'NN'), ('is', 'VBZ'), ('not', 'RB'), ('complete', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('Although', 'although'), ('there', 'there'), ('is', 'be'), ('sample', 'sample'), ('data', 'datum'), ('that', 'that'), ('can', 'can'), ('be', 'be'), ('used', 'use'), ('to', 'to'), ('make', 'make'), ('predictions', 'prediction'), (',', ','), ('work', 'work'), ('is', 'be'), ('not', 'not'), ('complete', 'complete'), ('.', '.')] 

 Dependency tags are: 
>> [(('Although', 'is'), 'mark'), (('there', 'is'), 'expl'), (('is', 'complete'), 'advcl'), (('sample', 'data'), 'compound'), (('data', 'is'), 'nsubj'), (('that', 'used'), 'nsubj:pass'), (('can', 'used'), 'aux'), (('be', 'used'), 'aux:pass'), (('used', 'data'), 'acl:relcl'), (('to', 'make'), 'mark'), (('make', 'used'), 'xcomp'), (('predictions', 'make'), 'obj'), ((',', 'complete'), 'punct'), (('work', 'complete'), 'nsubj'), (('is', 'complete'), 'cop'), (('not', 'complete'), 'advmod'), (('complete', 'root'), 'root'), (('.', 'complete'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 A/B testing or experimentation  framework needs to be in place to deploy models incrementally and avoid real  world disasters. 

Tokens are: 
>> ['A/B', 'testing', 'or', 'experimentation', 'framework', 'needs', 'to', 'be', 'in', 'place', 'to', 'deploy', 'models', 'incrementally', 'and', 'avoid', 'real', 'world', 'disasters', '.'] 

 UPOS tags are: 
>> [('A/B', 'NOUN'), ('testing', 'NOUN'), ('or', 'CCONJ'), ('experimentation', 'NOUN'), ('framework', 'NOUN'), ('needs', 'VERB'), ('to', 'PART'), ('be', 'AUX'), ('in', 'ADP'), ('place', 'NOUN'), ('to', 'PART'), ('deploy', 'VERB'), ('models', 'NOUN'), ('incrementally', 'ADV'), ('and', 'CCONJ'), ('avoid', 'VERB'), ('real', 'ADJ'), ('world', 'NOUN'), ('disasters', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A/B', 'NN'), ('testing', 'NN'), ('or', 'CC'), ('experimentation', 'NN'), ('framework', 'NN'), ('needs', 'VBZ'), ('to', 'TO'), ('be', 'VB'), ('in', 'IN'), ('place', 'NN'), ('to', 'TO'), ('deploy', 'VB'), ('models', 'NNS'), ('incrementally', 'RB'), ('and', 'CC'), ('avoid', 'VB'), ('real', 'JJ'), ('world', 'NN'), ('disasters', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('A/B', 'a/b'), ('testing', 'testing'), ('or', 'or'), ('experimentation', 'experimentation'), ('framework', 'framework'), ('needs', 'need'), ('to', 'to'), ('be', 'be'), ('in', 'in'), ('place', 'place'), ('to', 'to'), ('deploy', 'deploy'), ('models', 'model'), ('incrementally', 'incrementally'), ('and', 'and'), ('avoid', 'avoid'), ('real', 'real'), ('world', 'world'), ('disasters', 'disaster'), ('.', '.')] 

 Dependency tags are: 
>> [(('A/B', 'testing'), 'compound'), (('testing', 'framework'), 'compound'), (('or', 'framework'), 'cc'), (('experimentation', 'testing'), 'conj'), (('framework', 'needs'), 'nsubj'), (('needs', 'root'), 'root'), (('to', 'place'), 'mark'), (('be', 'place'), 'cop'), (('in', 'place'), 'case'), (('place', 'needs'), 'xcomp'), (('to', 'deploy'), 'mark'), (('deploy', 'place'), 'acl'), (('models', 'deploy'), 'obj'), (('incrementally', 'deploy'), 'advmod'), (('and', 'avoid'), 'cc'), (('avoid', 'deploy'), 'conj'), (('real', 'disasters'), 'amod'), (('world', 'disasters'), 'compound'), (('disasters', 'avoid'), 'obj'), (('.', 'needs'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Model validation and experimentation approaches provide a  rough estimate of the effects of changes before practical implementation. 

Tokens are: 
>> ['Model', 'validation', 'and', 'experimentation', 'approaches', 'provide', 'a', 'rough', 'estimate', 'of', 'the', 'effects', 'of', 'changes', 'before', 'practical', 'implementation', '.'] 

 UPOS tags are: 
>> [('Model', 'NOUN'), ('validation', 'NOUN'), ('and', 'CCONJ'), ('experimentation', 'NOUN'), ('approaches', 'NOUN'), ('provide', 'VERB'), ('a', 'DET'), ('rough', 'ADJ'), ('estimate', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('effects', 'NOUN'), ('of', 'ADP'), ('changes', 'NOUN'), ('before', 'ADP'), ('practical', 'ADJ'), ('implementation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Model', 'NN'), ('validation', 'NN'), ('and', 'CC'), ('experimentation', 'NN'), ('approaches', 'NNS'), ('provide', 'VBP'), ('a', 'DT'), ('rough', 'JJ'), ('estimate', 'NN'), ('of', 'IN'), ('the', 'DT'), ('effects', 'NNS'), ('of', 'IN'), ('changes', 'NNS'), ('before', 'IN'), ('practical', 'JJ'), ('implementation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Model', 'model'), ('validation', 'validation'), ('and', 'and'), ('experimentation', 'experimentation'), ('approaches', 'approach'), ('provide', 'provide'), ('a', 'a'), ('rough', 'rough'), ('estimate', 'estimate'), ('of', 'of'), ('the', 'the'), ('effects', 'effect'), ('of', 'of'), ('changes', 'change'), ('before', 'before'), ('practical', 'practical'), ('implementation', 'implementation'), ('.', '.')] 

 Dependency tags are: 
>> [(('Model', 'validation'), 'compound'), (('validation', 'approaches'), 'compound'), (('and', 'experimentation'), 'cc'), (('experimentation', 'validation'), 'conj'), (('approaches', 'provide'), 'nsubj'), (('provide', 'root'), 'root'), (('a', 'estimate'), 'det'), (('rough', 'estimate'), 'amod'), (('estimate', 'provide'), 'obj'), (('of', 'effects'), 'case'), (('the', 'effects'), 'det'), (('effects', 'estimate'), 'nmod'), (('of', 'changes'), 'case'), (('changes', 'effects'), 'nmod'), (('before', 'implementation'), 'case'), (('practical', 'implementation'), 'amod'), (('implementation', 'effects'), 'nmod'), (('.', 'provide'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 At  this stage, a very simple baseline or benchmark for performance tracking should  be established. 

Tokens are: 
>> ['At', 'this', 'stage', ',', 'a', 'very', 'simple', 'baseline', 'or', 'benchmark', 'for', 'performance', 'tracking', 'should', 'be', 'established', '.'] 

 UPOS tags are: 
>> [('At', 'ADP'), ('this', 'DET'), ('stage', 'NOUN'), (',', 'PUNCT'), ('a', 'DET'), ('very', 'ADV'), ('simple', 'ADJ'), ('baseline', 'NOUN'), ('or', 'CCONJ'), ('benchmark', 'NOUN'), ('for', 'ADP'), ('performance', 'NOUN'), ('tracking', 'NOUN'), ('should', 'AUX'), ('be', 'AUX'), ('established', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('At', 'IN'), ('this', 'DT'), ('stage', 'NN'), (',', ','), ('a', 'DT'), ('very', 'RB'), ('simple', 'JJ'), ('baseline', 'NN'), ('or', 'CC'), ('benchmark', 'NN'), ('for', 'IN'), ('performance', 'NN'), ('tracking', 'NN'), ('should', 'MD'), ('be', 'VB'), ('established', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('At', 'at'), ('this', 'this'), ('stage', 'stage'), (',', ','), ('a', 'a'), ('very', 'very'), ('simple', 'simple'), ('baseline', 'baseline'), ('or', 'or'), ('benchmark', 'benchmark'), ('for', 'for'), ('performance', 'performance'), ('tracking', 'tracking'), ('should', 'should'), ('be', 'be'), ('established', 'establish'), ('.', '.')] 

 Dependency tags are: 
>> [(('At', 'stage'), 'case'), (('this', 'stage'), 'det'), (('stage', 'established'), 'obl'), ((',', 'established'), 'punct'), (('a', 'baseline'), 'det'), (('very', 'simple'), 'advmod'), (('simple', 'baseline'), 'amod'), (('baseline', 'established'), 'nsubj:pass'), (('or', 'benchmark'), 'cc'), (('benchmark', 'baseline'), 'conj'), (('for', 'tracking'), 'case'), (('performance', 'tracking'), 'compound'), (('tracking', 'baseline'), 'nmod'), (('should', 'established'), 'aux'), (('be', 'established'), 'aux:pass'), (('established', 'root'), 'root'), (('.', 'established'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 An example fraud detection system includes monitoring high  risk credit card transactions that were proved to be fraudulent and comparing  them with the current operational performance of machine learning models to  accurately detect fraud. 

Tokens are: 
>> ['An', 'example', 'fraud', 'detection', 'system', 'includes', 'monitoring', 'high', 'risk', 'credit', 'card', 'transactions', 'that', 'were', 'proved', 'to', 'be', 'fraudulent', 'and', 'comparing', 'them', 'with', 'the', 'current', 'operational', 'performance', 'of', 'machine', 'learning', 'models', 'to', 'accurately', 'detect', 'fraud', '.'] 

 UPOS tags are: 
>> [('An', 'DET'), ('example', 'NOUN'), ('fraud', 'NOUN'), ('detection', 'NOUN'), ('system', 'NOUN'), ('includes', 'VERB'), ('monitoring', 'VERB'), ('high', 'ADJ'), ('risk', 'NOUN'), ('credit', 'NOUN'), ('card', 'NOUN'), ('transactions', 'NOUN'), ('that', 'PRON'), ('were', 'AUX'), ('proved', 'VERB'), ('to', 'PART'), ('be', 'AUX'), ('fraudulent', 'ADJ'), ('and', 'CCONJ'), ('comparing', 'VERB'), ('them', 'PRON'), ('with', 'ADP'), ('the', 'DET'), ('current', 'ADJ'), ('operational', 'ADJ'), ('performance', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('models', 'NOUN'), ('to', 'PART'), ('accurately', 'ADV'), ('detect', 'VERB'), ('fraud', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('An', 'DT'), ('example', 'NN'), ('fraud', 'NN'), ('detection', 'NN'), ('system', 'NN'), ('includes', 'VBZ'), ('monitoring', 'VBG'), ('high', 'JJ'), ('risk', 'NN'), ('credit', 'NN'), ('card', 'NN'), ('transactions', 'NNS'), ('that', 'WDT'), ('were', 'VBD'), ('proved', 'VBN'), ('to', 'TO'), ('be', 'VB'), ('fraudulent', 'JJ'), ('and', 'CC'), ('comparing', 'VBG'), ('them', 'PRP'), ('with', 'IN'), ('the', 'DT'), ('current', 'JJ'), ('operational', 'JJ'), ('performance', 'NN'), ('of', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('models', 'NNS'), ('to', 'TO'), ('accurately', 'RB'), ('detect', 'VB'), ('fraud', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('An', 'a'), ('example', 'example'), ('fraud', 'fraud'), ('detection', 'detection'), ('system', 'system'), ('includes', 'include'), ('monitoring', 'monitor'), ('high', 'high'), ('risk', 'risk'), ('credit', 'credit'), ('card', 'card'), ('transactions', 'transaction'), ('that', 'that'), ('were', 'be'), ('proved', 'prove'), ('to', 'to'), ('be', 'be'), ('fraudulent', 'fraudulent'), ('and', 'and'), ('comparing', 'compare'), ('them', 'they'), ('with', 'with'), ('the', 'the'), ('current', 'current'), ('operational', 'operational'), ('performance', 'performance'), ('of', 'of'), ('machine', 'machine'), ('learning', 'learning'), ('models', 'model'), ('to', 'to'), ('accurately', 'accurately'), ('detect', 'detect'), ('fraud', 'fraud'), ('.', '.')] 

 Dependency tags are: 
>> [(('An', 'system'), 'det'), (('example', 'system'), 'compound'), (('fraud', 'detection'), 'compound'), (('detection', 'system'), 'compound'), (('system', 'includes'), 'nsubj'), (('includes', 'root'), 'root'), (('monitoring', 'includes'), 'xcomp'), (('high', 'transactions'), 'amod'), (('risk', 'card'), 'compound'), (('credit', 'card'), 'compound'), (('card', 'transactions'), 'compound'), (('transactions', 'monitoring'), 'obj'), (('that', 'proved'), 'nsubj:pass'), (('were', 'proved'), 'aux:pass'), (('proved', 'transactions'), 'acl:relcl'), (('to', 'fraudulent'), 'mark'), (('be', 'fraudulent'), 'cop'), (('fraudulent', 'proved'), 'xcomp'), (('and', 'comparing'), 'cc'), (('comparing', 'proved'), 'conj'), (('them', 'comparing'), 'obj'), (('with', 'performance'), 'case'), (('the', 'performance'), 'det'), (('current', 'performance'), 'amod'), (('operational', 'performance'), 'amod'), (('performance', 'comparing'), 'obl'), (('of', 'models'), 'case'), (('machine', 'models'), 'compound'), (('learning', 'models'), 'compound'), (('models', 'performance'), 'nmod'), (('to', 'detect'), 'mark'), (('accurately', 'detect'), 'advmod'), (('detect', 'comparing'), 'advcl'), (('fraud', 'detect'), 'obj'), (('.', 'includes'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 127 =================================

Artificial intelligence. At this stage a team might be looking to make  improvements in production. This can be achieved by learning new methods  and techniques in machine learning and deep learning to improve processes,  predictions, outcomes and insights. By leveraging advanced and new techniques,  teams can gain an Information Advantage from massive amounts of data, explore  and model it faster and build solutions, such as voice assistants.


------------------- Sentence 1 -------------------

 Artificial intelligence. 

Tokens are: 
>> ['Artificial', 'intelligence', '.'] 

 UPOS tags are: 
>> [('Artificial', 'ADJ'), ('intelligence', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Artificial', 'JJ'), ('intelligence', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Artificial', 'Artificial'), ('intelligence', 'intelligence'), ('.', '.')] 

 Dependency tags are: 
>> [(('Artificial', 'intelligence'), 'amod'), (('intelligence', 'root'), 'root'), (('.', 'intelligence'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 At this stage a team might be looking to make  improvements in production. 

Tokens are: 
>> ['At', 'this', 'stage', 'a', 'team', 'might', 'be', 'looking', 'to', 'make', 'improvements', 'in', 'production', '.'] 

 UPOS tags are: 
>> [('At', 'ADP'), ('this', 'DET'), ('stage', 'NOUN'), ('a', 'DET'), ('team', 'NOUN'), ('might', 'AUX'), ('be', 'AUX'), ('looking', 'VERB'), ('to', 'PART'), ('make', 'VERB'), ('improvements', 'NOUN'), ('in', 'ADP'), ('production', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('At', 'IN'), ('this', 'DT'), ('stage', 'NN'), ('a', 'DT'), ('team', 'NN'), ('might', 'MD'), ('be', 'VB'), ('looking', 'VBG'), ('to', 'TO'), ('make', 'VB'), ('improvements', 'NNS'), ('in', 'IN'), ('production', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('At', 'at'), ('this', 'this'), ('stage', 'stage'), ('a', 'a'), ('team', 'team'), ('might', 'might'), ('be', 'be'), ('looking', 'look'), ('to', 'to'), ('make', 'make'), ('improvements', 'improvement'), ('in', 'in'), ('production', 'production'), ('.', '.')] 

 Dependency tags are: 
>> [(('At', 'stage'), 'case'), (('this', 'stage'), 'det'), (('stage', 'looking'), 'obl'), (('a', 'team'), 'det'), (('team', 'looking'), 'nsubj'), (('might', 'looking'), 'aux'), (('be', 'looking'), 'aux'), (('looking', 'root'), 'root'), (('to', 'make'), 'mark'), (('make', 'looking'), 'xcomp'), (('improvements', 'make'), 'obj'), (('in', 'production'), 'case'), (('production', 'improvements'), 'nmod'), (('.', 'looking'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 This can be achieved by learning new methods  and techniques in machine learning and deep learning to improve processes,  predictions, outcomes and insights. 

Tokens are: 
>> ['This', 'can', 'be', 'achieved', 'by', 'learning', 'new', 'methods', 'and', 'techniques', 'in', 'machine', 'learning', 'and', 'deep', 'learning', 'to', 'improve', 'processes', ',', 'predictions', ',', 'outcomes', 'and', 'insights', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('achieved', 'VERB'), ('by', 'SCONJ'), ('learning', 'VERB'), ('new', 'ADJ'), ('methods', 'NOUN'), ('and', 'CCONJ'), ('techniques', 'NOUN'), ('in', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('and', 'CCONJ'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('to', 'PART'), ('improve', 'VERB'), ('processes', 'NOUN'), (',', 'PUNCT'), ('predictions', 'NOUN'), (',', 'PUNCT'), ('outcomes', 'NOUN'), ('and', 'CCONJ'), ('insights', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('can', 'MD'), ('be', 'VB'), ('achieved', 'VBN'), ('by', 'IN'), ('learning', 'VBG'), ('new', 'JJ'), ('methods', 'NNS'), ('and', 'CC'), ('techniques', 'NNS'), ('in', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('and', 'CC'), ('deep', 'JJ'), ('learning', 'NN'), ('to', 'TO'), ('improve', 'VB'), ('processes', 'NNS'), (',', ','), ('predictions', 'NNS'), (',', ','), ('outcomes', 'NNS'), ('and', 'CC'), ('insights', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('can', 'can'), ('be', 'be'), ('achieved', 'achieve'), ('by', 'by'), ('learning', 'learn'), ('new', 'new'), ('methods', 'method'), ('and', 'and'), ('techniques', 'technique'), ('in', 'in'), ('machine', 'machine'), ('learning', 'learning'), ('and', 'and'), ('deep', 'deep'), ('learning', 'learning'), ('to', 'to'), ('improve', 'improve'), ('processes', 'process'), (',', ','), ('predictions', 'prediction'), (',', ','), ('outcomes', 'outcome'), ('and', 'and'), ('insights', 'insight'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'achieved'), 'nsubj:pass'), (('can', 'achieved'), 'aux'), (('be', 'achieved'), 'aux:pass'), (('achieved', 'root'), 'root'), (('by', 'learning'), 'mark'), (('learning', 'achieved'), 'advcl'), (('new', 'methods'), 'amod'), (('methods', 'learning'), 'obj'), (('and', 'techniques'), 'cc'), (('techniques', 'methods'), 'conj'), (('in', 'learning'), 'case'), (('machine', 'learning'), 'compound'), (('learning', 'methods'), 'nmod'), (('and', 'learning'), 'cc'), (('deep', 'learning'), 'amod'), (('learning', 'learning'), 'conj'), (('to', 'improve'), 'mark'), (('improve', 'learning'), 'advcl'), (('processes', 'improve'), 'obj'), ((',', 'predictions'), 'punct'), (('predictions', 'processes'), 'conj'), ((',', 'outcomes'), 'punct'), (('outcomes', 'processes'), 'conj'), (('and', 'insights'), 'cc'), (('insights', 'processes'), 'conj'), (('.', 'achieved'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 By leveraging advanced and new techniques,  teams can gain an Information Advantage from massive amounts of data, explore  and model it faster and build solutions, such as voice assistants. 

Tokens are: 
>> ['By', 'leveraging', 'advanced', 'and', 'new', 'techniques', ',', 'teams', 'can', 'gain', 'an', 'Information', 'Advantage', 'from', 'massive', 'amounts', 'of', 'data', ',', 'explore', 'and', 'model', 'it', 'faster', 'and', 'build', 'solutions', ',', 'such', 'as', 'voice', 'assistants', '.'] 

 UPOS tags are: 
>> [('By', 'SCONJ'), ('leveraging', 'VERB'), ('advanced', 'ADJ'), ('and', 'CCONJ'), ('new', 'ADJ'), ('techniques', 'NOUN'), (',', 'PUNCT'), ('teams', 'NOUN'), ('can', 'AUX'), ('gain', 'VERB'), ('an', 'DET'), ('Information', 'NOUN'), ('Advantage', 'NOUN'), ('from', 'ADP'), ('massive', 'ADJ'), ('amounts', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), (',', 'PUNCT'), ('explore', 'VERB'), ('and', 'CCONJ'), ('model', 'VERB'), ('it', 'PRON'), ('faster', 'ADV'), ('and', 'CCONJ'), ('build', 'VERB'), ('solutions', 'NOUN'), (',', 'PUNCT'), ('such', 'ADJ'), ('as', 'ADP'), ('voice', 'NOUN'), ('assistants', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('By', 'IN'), ('leveraging', 'VBG'), ('advanced', 'JJ'), ('and', 'CC'), ('new', 'JJ'), ('techniques', 'NNS'), (',', ','), ('teams', 'NNS'), ('can', 'MD'), ('gain', 'VB'), ('an', 'DT'), ('Information', 'NN'), ('Advantage', 'NN'), ('from', 'IN'), ('massive', 'JJ'), ('amounts', 'NNS'), ('of', 'IN'), ('data', 'NNS'), (',', ','), ('explore', 'VB'), ('and', 'CC'), ('model', 'VB'), ('it', 'PRP'), ('faster', 'RBR'), ('and', 'CC'), ('build', 'VB'), ('solutions', 'NNS'), (',', ','), ('such', 'JJ'), ('as', 'IN'), ('voice', 'NN'), ('assistants', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('By', 'by'), ('leveraging', 'leverage'), ('advanced', 'advanced'), ('and', 'and'), ('new', 'new'), ('techniques', 'technique'), (',', ','), ('teams', 'team'), ('can', 'can'), ('gain', 'gain'), ('an', 'a'), ('Information', 'information'), ('Advantage', 'advantage'), ('from', 'from'), ('massive', 'massive'), ('amounts', 'amount'), ('of', 'of'), ('data', 'datum'), (',', ','), ('explore', 'explore'), ('and', 'and'), ('model', 'model'), ('it', 'it'), ('faster', 'fast'), ('and', 'and'), ('build', 'build'), ('solutions', 'solution'), (',', ','), ('such', 'such'), ('as', 'as'), ('voice', 'voice'), ('assistants', 'assistant'), ('.', '.')] 

 Dependency tags are: 
>> [(('By', 'leveraging'), 'mark'), (('leveraging', 'gain'), 'advcl'), (('advanced', 'techniques'), 'amod'), (('and', 'new'), 'cc'), (('new', 'advanced'), 'conj'), (('techniques', 'leveraging'), 'obj'), ((',', 'leveraging'), 'punct'), (('teams', 'gain'), 'nsubj'), (('can', 'gain'), 'aux'), (('gain', 'root'), 'root'), (('an', 'Advantage'), 'det'), (('Information', 'Advantage'), 'compound'), (('Advantage', 'gain'), 'obj'), (('from', 'amounts'), 'case'), (('massive', 'amounts'), 'amod'), (('amounts', 'gain'), 'obl'), (('of', 'data'), 'case'), (('data', 'amounts'), 'nmod'), ((',', 'explore'), 'punct'), (('explore', 'gain'), 'conj'), (('and', 'model'), 'cc'), (('model', 'explore'), 'conj'), (('it', 'model'), 'obj'), (('faster', 'model'), 'advmod'), (('and', 'build'), 'cc'), (('build', 'model'), 'conj'), (('solutions', 'build'), 'obj'), ((',', 'assistants'), 'punct'), (('such', 'assistants'), 'case'), (('as', 'such'), 'fixed'), (('voice', 'assistants'), 'compound'), (('assistants', 'solutions'), 'nmod'), (('.', 'gain'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 128 =================================

9/14Demystifying data science  


------------------- Sentence 1 -------------------

 9/14 

Tokens are: 
>> ['9/14'] 

 UPOS tags are: 
>> [('9/14', 'NUM')] 

 XPOS tags are: 
>> [('9/14', 'CD')] 

 Lemmas are: 
>> [('9/14', '9/14')] 

 Dependency tags are: 
>> [(('9/14', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Demystifying data science 

Tokens are: 
>> ['Demystifying', 'data', 'science'] 

 UPOS tags are: 
>> [('Demystifying', 'VERB'), ('data', 'NOUN'), ('science', 'NOUN')] 

 XPOS tags are: 
>> [('Demystifying', 'VBG'), ('data', 'NN'), ('science', 'NN')] 

 Lemmas are: 
>> [('Demystifying', 'demystify'), ('data', 'datum'), ('science', 'science')] 

 Dependency tags are: 
>> [(('Demystifying', 'root'), 'root'), (('data', 'science'), 'compound'), (('science', 'Demystifying'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 129 =================================

How can data science, artificial intelligence and analytics  help transform business processes? Data science is a multi-disciplinary field that uses scientific methods, processes,  algorithms and systems to extract knowledge and insights from structured and  unstructured data. Because there are a number of different techniques and  methodologies, it is often difficult to narrow down the scope of how data science  can impact business performance, operations, customer experience and costs. Here  are just a few ways data science can be leveraged. 


------------------- Sentence 1 -------------------

 How can data science, artificial intelligence and analytics  help transform business processes? 

Tokens are: 
>> ['How', 'can', 'data', 'science', ',', 'artificial', 'intelligence', 'and', 'analytics', 'help', 'transform', 'business', 'processes', '?'] 

 UPOS tags are: 
>> [('How', 'ADV'), ('can', 'AUX'), ('data', 'NOUN'), ('science', 'NOUN'), (',', 'PUNCT'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('and', 'CCONJ'), ('analytics', 'NOUN'), ('help', 'VERB'), ('transform', 'VERB'), ('business', 'NOUN'), ('processes', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('How', 'WRB'), ('can', 'MD'), ('data', 'NNS'), ('science', 'NN'), (',', ','), ('artificial', 'JJ'), ('intelligence', 'NN'), ('and', 'CC'), ('analytics', 'NNS'), ('help', 'VB'), ('transform', 'VB'), ('business', 'NN'), ('processes', 'NNS'), ('?', '.')] 

 Lemmas are: 
>> [('How', 'how'), ('can', 'can'), ('data', 'datum'), ('science', 'science'), (',', ','), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('and', 'and'), ('analytics', 'analytic'), ('help', 'help'), ('transform', 'transform'), ('business', 'business'), ('processes', 'process'), ('?', '?')] 

 Dependency tags are: 
>> [(('How', 'help'), 'advmod'), (('can', 'help'), 'aux'), (('data', 'science'), 'compound'), (('science', 'help'), 'nsubj'), ((',', 'intelligence'), 'punct'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'science'), 'conj'), (('and', 'analytics'), 'cc'), (('analytics', 'science'), 'conj'), (('help', 'root'), 'root'), (('transform', 'help'), 'xcomp'), (('business', 'processes'), 'compound'), (('processes', 'transform'), 'obj'), (('?', 'help'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Data science is a multi-disciplinary field that uses scientific methods, processes,  algorithms and systems to extract knowledge and insights from structured and  unstructured data. 

Tokens are: 
>> ['Data', 'science', 'is', 'a', 'multi-disciplinary', 'field', 'that', 'uses', 'scientific', 'methods', ',', 'processes', ',', 'algorithms', 'and', 'systems', 'to', 'extract', 'knowledge', 'and', 'insights', 'from', 'structured', 'and', 'unstructured', 'data', '.'] 

 UPOS tags are: 
>> [('Data', 'NOUN'), ('science', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('multi-disciplinary', 'ADJ'), ('field', 'NOUN'), ('that', 'PRON'), ('uses', 'VERB'), ('scientific', 'ADJ'), ('methods', 'NOUN'), (',', 'PUNCT'), ('processes', 'NOUN'), (',', 'PUNCT'), ('algorithms', 'NOUN'), ('and', 'CCONJ'), ('systems', 'NOUN'), ('to', 'PART'), ('extract', 'VERB'), ('knowledge', 'NOUN'), ('and', 'CCONJ'), ('insights', 'NOUN'), ('from', 'ADP'), ('structured', 'VERB'), ('and', 'CCONJ'), ('unstructured', 'ADJ'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Data', 'NN'), ('science', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('multi-disciplinary', 'JJ'), ('field', 'NN'), ('that', 'WDT'), ('uses', 'VBZ'), ('scientific', 'JJ'), ('methods', 'NNS'), (',', ','), ('processes', 'NNS'), (',', ','), ('algorithms', 'NNS'), ('and', 'CC'), ('systems', 'NNS'), ('to', 'TO'), ('extract', 'VB'), ('knowledge', 'NN'), ('and', 'CC'), ('insights', 'NNS'), ('from', 'IN'), ('structured', 'VBN'), ('and', 'CC'), ('unstructured', 'JJ'), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Data', 'data'), ('science', 'science'), ('is', 'be'), ('a', 'a'), ('multi-disciplinary', 'multi-disciplinary'), ('field', 'field'), ('that', 'that'), ('uses', 'use'), ('scientific', 'scientific'), ('methods', 'method'), (',', ','), ('processes', 'process'), (',', ','), ('algorithms', 'algorithm'), ('and', 'and'), ('systems', 'system'), ('to', 'to'), ('extract', 'extract'), ('knowledge', 'knowledge'), ('and', 'and'), ('insights', 'insight'), ('from', 'from'), ('structured', 'structure'), ('and', 'and'), ('unstructured', 'unstructured'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('Data', 'science'), 'compound'), (('science', 'field'), 'nsubj'), (('is', 'field'), 'cop'), (('a', 'field'), 'det'), (('multi-disciplinary', 'field'), 'amod'), (('field', 'root'), 'root'), (('that', 'uses'), 'nsubj'), (('uses', 'field'), 'acl:relcl'), (('scientific', 'methods'), 'amod'), (('methods', 'uses'), 'obj'), ((',', 'processes'), 'punct'), (('processes', 'methods'), 'conj'), ((',', 'algorithms'), 'punct'), (('algorithms', 'methods'), 'conj'), (('and', 'systems'), 'cc'), (('systems', 'methods'), 'conj'), (('to', 'extract'), 'mark'), (('extract', 'uses'), 'advcl'), (('knowledge', 'extract'), 'obj'), (('and', 'insights'), 'cc'), (('insights', 'knowledge'), 'conj'), (('from', 'data'), 'case'), (('structured', 'data'), 'amod'), (('and', 'unstructured'), 'cc'), (('unstructured', 'structured'), 'conj'), (('data', 'extract'), 'obl'), (('.', 'field'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Because there are a number of different techniques and  methodologies, it is often difficult to narrow down the scope of how data science  can impact business performance, operations, customer experience and costs. 

Tokens are: 
>> ['Because', 'there', 'are', 'a', 'number', 'of', 'different', 'techniques', 'and', 'methodologies', ',', 'it', 'is', 'often', 'difficult', 'to', 'narrow', 'down', 'the', 'scope', 'of', 'how', 'data', 'science', 'can', 'impact', 'business', 'performance', ',', 'operations', ',', 'customer', 'experience', 'and', 'costs', '.'] 

 UPOS tags are: 
>> [('Because', 'SCONJ'), ('there', 'PRON'), ('are', 'VERB'), ('a', 'DET'), ('number', 'NOUN'), ('of', 'ADP'), ('different', 'ADJ'), ('techniques', 'NOUN'), ('and', 'CCONJ'), ('methodologies', 'NOUN'), (',', 'PUNCT'), ('it', 'PRON'), ('is', 'AUX'), ('often', 'ADV'), ('difficult', 'ADJ'), ('to', 'PART'), ('narrow', 'VERB'), ('down', 'ADP'), ('the', 'DET'), ('scope', 'NOUN'), ('of', 'ADP'), ('how', 'SCONJ'), ('data', 'NOUN'), ('science', 'NOUN'), ('can', 'AUX'), ('impact', 'VERB'), ('business', 'NOUN'), ('performance', 'NOUN'), (',', 'PUNCT'), ('operations', 'NOUN'), (',', 'PUNCT'), ('customer', 'NOUN'), ('experience', 'NOUN'), ('and', 'CCONJ'), ('costs', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Because', 'IN'), ('there', 'EX'), ('are', 'VBP'), ('a', 'DT'), ('number', 'NN'), ('of', 'IN'), ('different', 'JJ'), ('techniques', 'NNS'), ('and', 'CC'), ('methodologies', 'NNS'), (',', ','), ('it', 'PRP'), ('is', 'VBZ'), ('often', 'RB'), ('difficult', 'JJ'), ('to', 'TO'), ('narrow', 'VB'), ('down', 'RP'), ('the', 'DT'), ('scope', 'NN'), ('of', 'IN'), ('how', 'WRB'), ('data', 'NNS'), ('science', 'NN'), ('can', 'MD'), ('impact', 'VB'), ('business', 'NN'), ('performance', 'NN'), (',', ','), ('operations', 'NNS'), (',', ','), ('customer', 'NN'), ('experience', 'NN'), ('and', 'CC'), ('costs', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Because', 'because'), ('there', 'there'), ('are', 'be'), ('a', 'a'), ('number', 'number'), ('of', 'of'), ('different', 'different'), ('techniques', 'technique'), ('and', 'and'), ('methodologies', 'methodology'), (',', ','), ('it', 'it'), ('is', 'be'), ('often', 'often'), ('difficult', 'difficult'), ('to', 'to'), ('narrow', 'narrow'), ('down', 'down'), ('the', 'the'), ('scope', 'scope'), ('of', 'of'), ('how', 'how'), ('data', 'datum'), ('science', 'science'), ('can', 'can'), ('impact', 'impact'), ('business', 'business'), ('performance', 'performance'), (',', ','), ('operations', 'operation'), (',', ','), ('customer', 'customer'), ('experience', 'experience'), ('and', 'and'), ('costs', 'cost'), ('.', '.')] 

 Dependency tags are: 
>> [(('Because', 'are'), 'mark'), (('there', 'are'), 'expl'), (('are', 'difficult'), 'advcl'), (('a', 'number'), 'det'), (('number', 'are'), 'nsubj'), (('of', 'techniques'), 'case'), (('different', 'techniques'), 'amod'), (('techniques', 'number'), 'nmod'), (('and', 'methodologies'), 'cc'), (('methodologies', 'techniques'), 'conj'), ((',', 'difficult'), 'punct'), (('it', 'difficult'), 'expl'), (('is', 'difficult'), 'cop'), (('often', 'difficult'), 'advmod'), (('difficult', 'root'), 'root'), (('to', 'narrow'), 'mark'), (('narrow', 'difficult'), 'csubj'), (('down', 'narrow'), 'compound:prt'), (('the', 'scope'), 'det'), (('scope', 'narrow'), 'obj'), (('of', 'how'), 'case'), (('how', 'impact'), 'mark'), (('data', 'science'), 'compound'), (('science', 'impact'), 'nsubj'), (('can', 'impact'), 'aux'), (('impact', 'scope'), 'acl'), (('business', 'performance'), 'compound'), (('performance', 'impact'), 'obj'), ((',', 'operations'), 'punct'), (('operations', 'performance'), 'conj'), ((',', 'experience'), 'punct'), (('customer', 'experience'), 'compound'), (('experience', 'performance'), 'conj'), (('and', 'costs'), 'cc'), (('costs', 'performance'), 'conj'), (('.', 'difficult'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Here  are just a few ways data science can be leveraged. 

Tokens are: 
>> ['Here', 'are', 'just', 'a', 'few', 'ways', 'data', 'science', 'can', 'be', 'leveraged', '.'] 

 UPOS tags are: 
>> [('Here', 'ADV'), ('are', 'AUX'), ('just', 'ADV'), ('a', 'DET'), ('few', 'ADJ'), ('ways', 'NOUN'), ('data', 'NOUN'), ('science', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('leveraged', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Here', 'RB'), ('are', 'VBP'), ('just', 'RB'), ('a', 'DT'), ('few', 'JJ'), ('ways', 'NNS'), ('data', 'NNS'), ('science', 'NN'), ('can', 'MD'), ('be', 'VB'), ('leveraged', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('Here', 'here'), ('are', 'be'), ('just', 'just'), ('a', 'a'), ('few', 'few'), ('ways', 'way'), ('data', 'datum'), ('science', 'science'), ('can', 'can'), ('be', 'be'), ('leveraged', 'leverage'), ('.', '.')] 

 Dependency tags are: 
>> [(('Here', 'root'), 'root'), (('are', 'Here'), 'cop'), (('just', 'Here'), 'advmod'), (('a', 'ways'), 'det'), (('few', 'ways'), 'amod'), (('ways', 'Here'), 'nsubj'), (('data', 'science'), 'compound'), (('science', 'leveraged'), 'nsubj:pass'), (('can', 'leveraged'), 'aux'), (('be', 'leveraged'), 'aux:pass'), (('leveraged', 'ways'), 'acl:relcl'), (('.', 'Here'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 130 =================================

Augment employee decisions with data-driven insights and intelligence  


------------------- Sentence 1 -------------------

 Augment employee decisions with data-driven insights and intelligence 

Tokens are: 
>> ['Augment', 'employee', 'decisions', 'with', 'data-driven', 'insights', 'and', 'intelligence'] 

 UPOS tags are: 
>> [('Augment', 'VERB'), ('employee', 'NOUN'), ('decisions', 'NOUN'), ('with', 'ADP'), ('data-driven', 'ADJ'), ('insights', 'NOUN'), ('and', 'CCONJ'), ('intelligence', 'NOUN')] 

 XPOS tags are: 
>> [('Augment', 'VB'), ('employee', 'NN'), ('decisions', 'NNS'), ('with', 'IN'), ('data-driven', 'JJ'), ('insights', 'NNS'), ('and', 'CC'), ('intelligence', 'NN')] 

 Lemmas are: 
>> [('Augment', 'augment'), ('employee', 'employee'), ('decisions', 'decision'), ('with', 'with'), ('data-driven', 'data-driven'), ('insights', 'insight'), ('and', 'and'), ('intelligence', 'intelligence')] 

 Dependency tags are: 
>> [(('Augment', 'root'), 'root'), (('employee', 'decisions'), 'compound'), (('decisions', 'Augment'), 'obj'), (('with', 'insights'), 'case'), (('data-driven', 'insights'), 'amod'), (('insights', 'Augment'), 'obl'), (('and', 'intelligence'), 'cc'), (('intelligence', 'insights'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 131 =================================

Utilize subject matter experts’ knowledge of how employees make business  decisions and transform the steps into data point, applying machine learning  techniques to identify the decision making pattern from this historical data to  predict future business outcomes. Organizations can design an intelligent system  that can handle complex requests or tasks, provide intelligent/best fit decisions  for individual scenarios and empower employees to make decisions quickly and  more effectively. Some example uses include credit risk scoring, automated  underwriting, wealth management fund assistants and customer service chatbots.  


------------------- Sentence 1 -------------------

 Utilize subject matter experts’ knowledge of how employees make business  decisions and transform the steps into data point, applying machine learning  techniques to identify the decision making pattern from this historical data to  predict future business outcomes. 

Tokens are: 
>> ['Utilize', 'subject', 'matter', 'experts', '’', 'knowledge', 'of', 'how', 'employees', 'make', 'business', 'decisions', 'and', 'transform', 'the', 'steps', 'into', 'data', 'point', ',', 'applying', 'machine', 'learning', 'techniques', 'to', 'identify', 'the', 'decision', 'making', 'pattern', 'from', 'this', 'historical', 'data', 'to', 'predict', 'future', 'business', 'outcomes', '.'] 

 UPOS tags are: 
>> [('Utilize', 'VERB'), ('subject', 'NOUN'), ('matter', 'NOUN'), ('experts', 'NOUN'), ('’', 'PART'), ('knowledge', 'NOUN'), ('of', 'ADP'), ('how', 'SCONJ'), ('employees', 'NOUN'), ('make', 'VERB'), ('business', 'NOUN'), ('decisions', 'NOUN'), ('and', 'CCONJ'), ('transform', 'VERB'), ('the', 'DET'), ('steps', 'NOUN'), ('into', 'ADP'), ('data', 'NOUN'), ('point', 'NOUN'), (',', 'PUNCT'), ('applying', 'VERB'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('techniques', 'NOUN'), ('to', 'PART'), ('identify', 'VERB'), ('the', 'DET'), ('decision', 'NOUN'), ('making', 'VERB'), ('pattern', 'NOUN'), ('from', 'ADP'), ('this', 'DET'), ('historical', 'ADJ'), ('data', 'NOUN'), ('to', 'PART'), ('predict', 'VERB'), ('future', 'ADJ'), ('business', 'NOUN'), ('outcomes', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Utilize', 'VB'), ('subject', 'NN'), ('matter', 'NN'), ('experts', 'NNS'), ('’', 'POS'), ('knowledge', 'NN'), ('of', 'IN'), ('how', 'WRB'), ('employees', 'NNS'), ('make', 'VBP'), ('business', 'NN'), ('decisions', 'NNS'), ('and', 'CC'), ('transform', 'VBP'), ('the', 'DT'), ('steps', 'NNS'), ('into', 'IN'), ('data', 'NN'), ('point', 'NN'), (',', ','), ('applying', 'VBG'), ('machine', 'NN'), ('learning', 'NN'), ('techniques', 'NNS'), ('to', 'TO'), ('identify', 'VB'), ('the', 'DT'), ('decision', 'NN'), ('making', 'VBG'), ('pattern', 'NN'), ('from', 'IN'), ('this', 'DT'), ('historical', 'JJ'), ('data', 'NN'), ('to', 'TO'), ('predict', 'VB'), ('future', 'JJ'), ('business', 'NN'), ('outcomes', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Utilize', 'utilize'), ('subject', 'subject'), ('matter', 'matter'), ('experts', 'expert'), ('’', "'s"), ('knowledge', 'knowledge'), ('of', 'of'), ('how', 'how'), ('employees', 'employee'), ('make', 'make'), ('business', 'business'), ('decisions', 'decision'), ('and', 'and'), ('transform', 'transform'), ('the', 'the'), ('steps', 'step'), ('into', 'into'), ('data', 'datum'), ('point', 'point'), (',', ','), ('applying', 'apply'), ('machine', 'machine'), ('learning', 'learning'), ('techniques', 'technique'), ('to', 'to'), ('identify', 'identify'), ('the', 'the'), ('decision', 'decision'), ('making', 'make'), ('pattern', 'pattern'), ('from', 'from'), ('this', 'this'), ('historical', 'historical'), ('data', 'datum'), ('to', 'to'), ('predict', 'predict'), ('future', 'future'), ('business', 'business'), ('outcomes', 'outcome'), ('.', '.')] 

 Dependency tags are: 
>> [(('Utilize', 'root'), 'root'), (('subject', 'experts'), 'compound'), (('matter', 'experts'), 'compound'), (('experts', 'knowledge'), 'nmod:poss'), (('’', 'experts'), 'case'), (('knowledge', 'Utilize'), 'obj'), (('of', 'how'), 'case'), (('how', 'knowledge'), 'nmod'), (('employees', 'make'), 'nsubj'), (('make', 'how'), 'acl:relcl'), (('business', 'decisions'), 'compound'), (('decisions', 'make'), 'obj'), (('and', 'transform'), 'cc'), (('transform', 'make'), 'conj'), (('the', 'steps'), 'det'), (('steps', 'transform'), 'obj'), (('into', 'point'), 'case'), (('data', 'point'), 'compound'), (('point', 'transform'), 'obl'), ((',', 'applying'), 'punct'), (('applying', 'transform'), 'advcl'), (('machine', 'techniques'), 'compound'), (('learning', 'techniques'), 'compound'), (('techniques', 'applying'), 'obj'), (('to', 'identify'), 'mark'), (('identify', 'applying'), 'advcl'), (('the', 'decision'), 'det'), (('decision', 'identify'), 'obj'), (('making', 'decision'), 'acl'), (('pattern', 'making'), 'obj'), (('from', 'data'), 'case'), (('this', 'data'), 'det'), (('historical', 'data'), 'amod'), (('data', 'making'), 'obl'), (('to', 'predict'), 'mark'), (('predict', 'making'), 'advcl'), (('future', 'outcomes'), 'amod'), (('business', 'outcomes'), 'compound'), (('outcomes', 'predict'), 'obj'), (('.', 'Utilize'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Organizations can design an intelligent system  that can handle complex requests or tasks, provide intelligent/best fit decisions  for individual scenarios and empower employees to make decisions quickly and  more effectively. 

Tokens are: 
>> ['Organizations', 'can', 'design', 'an', 'intelligent', 'system', 'that', 'can', 'handle', 'complex', 'requests', 'or', 'tasks', ',', 'provide', 'intelligent', '/', 'best', 'fit', 'decisions', 'for', 'individual', 'scenarios', 'and', 'empower', 'employees', 'to', 'make', 'decisions', 'quickly', 'and', 'more', 'effectively', '.'] 

 UPOS tags are: 
>> [('Organizations', 'NOUN'), ('can', 'AUX'), ('design', 'VERB'), ('an', 'DET'), ('intelligent', 'ADJ'), ('system', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('handle', 'VERB'), ('complex', 'ADJ'), ('requests', 'NOUN'), ('or', 'CCONJ'), ('tasks', 'NOUN'), (',', 'PUNCT'), ('provide', 'VERB'), ('intelligent', 'ADJ'), ('/', 'SYM'), ('best', 'ADJ'), ('fit', 'NOUN'), ('decisions', 'NOUN'), ('for', 'ADP'), ('individual', 'ADJ'), ('scenarios', 'NOUN'), ('and', 'CCONJ'), ('empower', 'VERB'), ('employees', 'NOUN'), ('to', 'PART'), ('make', 'VERB'), ('decisions', 'NOUN'), ('quickly', 'ADV'), ('and', 'CCONJ'), ('more', 'ADV'), ('effectively', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Organizations', 'NNS'), ('can', 'MD'), ('design', 'VB'), ('an', 'DT'), ('intelligent', 'JJ'), ('system', 'NN'), ('that', 'WDT'), ('can', 'MD'), ('handle', 'VB'), ('complex', 'JJ'), ('requests', 'NNS'), ('or', 'CC'), ('tasks', 'NNS'), (',', ','), ('provide', 'VB'), ('intelligent', 'JJ'), ('/', ','), ('best', 'JJS'), ('fit', 'NN'), ('decisions', 'NNS'), ('for', 'IN'), ('individual', 'JJ'), ('scenarios', 'NNS'), ('and', 'CC'), ('empower', 'VB'), ('employees', 'NNS'), ('to', 'TO'), ('make', 'VB'), ('decisions', 'NNS'), ('quickly', 'RB'), ('and', 'CC'), ('more', 'RBR'), ('effectively', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('Organizations', 'organization'), ('can', 'can'), ('design', 'design'), ('an', 'a'), ('intelligent', 'intelligent'), ('system', 'system'), ('that', 'that'), ('can', 'can'), ('handle', 'handle'), ('complex', 'complex'), ('requests', 'request'), ('or', 'or'), ('tasks', 'task'), (',', ','), ('provide', 'provide'), ('intelligent', 'intelligent'), ('/', '/'), ('best', 'good'), ('fit', 'fit'), ('decisions', 'decision'), ('for', 'for'), ('individual', 'individual'), ('scenarios', 'scenario'), ('and', 'and'), ('empower', 'empower'), ('employees', 'employee'), ('to', 'to'), ('make', 'make'), ('decisions', 'decision'), ('quickly', 'quickly'), ('and', 'and'), ('more', 'more'), ('effectively', 'effectively'), ('.', '.')] 

 Dependency tags are: 
>> [(('Organizations', 'design'), 'nsubj'), (('can', 'design'), 'aux'), (('design', 'root'), 'root'), (('an', 'system'), 'det'), (('intelligent', 'system'), 'amod'), (('system', 'design'), 'obj'), (('that', 'handle'), 'nsubj'), (('can', 'handle'), 'aux'), (('handle', 'system'), 'acl:relcl'), (('complex', 'requests'), 'amod'), (('requests', 'handle'), 'obj'), (('or', 'tasks'), 'cc'), (('tasks', 'requests'), 'conj'), ((',', 'provide'), 'punct'), (('provide', 'design'), 'conj'), (('intelligent', 'decisions'), 'amod'), (('/', 'best'), 'cc'), (('best', 'intelligent'), 'conj'), (('fit', 'decisions'), 'compound'), (('decisions', 'provide'), 'obj'), (('for', 'scenarios'), 'case'), (('individual', 'scenarios'), 'amod'), (('scenarios', 'decisions'), 'nmod'), (('and', 'empower'), 'cc'), (('empower', 'provide'), 'conj'), (('employees', 'empower'), 'obj'), (('to', 'make'), 'mark'), (('make', 'empower'), 'xcomp'), (('decisions', 'make'), 'obj'), (('quickly', 'make'), 'advmod'), (('and', 'more'), 'cc'), (('more', 'quickly'), 'conj'), (('effectively', 'quickly'), 'conj'), (('.', 'design'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Some example uses include credit risk scoring, automated  underwriting, wealth management fund assistants and customer service chatbots. 

Tokens are: 
>> ['Some', 'example', 'uses', 'include', 'credit', 'risk', 'scoring', ',', 'automated', 'underwriting', ',', 'wealth', 'management', 'fund', 'assistants', 'and', 'customer', 'service', 'chatbots', '.'] 

 UPOS tags are: 
>> [('Some', 'DET'), ('example', 'NOUN'), ('uses', 'NOUN'), ('include', 'VERB'), ('credit', 'NOUN'), ('risk', 'NOUN'), ('scoring', 'NOUN'), (',', 'PUNCT'), ('automated', 'VERB'), ('underwriting', 'NOUN'), (',', 'PUNCT'), ('wealth', 'NOUN'), ('management', 'NOUN'), ('fund', 'NOUN'), ('assistants', 'NOUN'), ('and', 'CCONJ'), ('customer', 'NOUN'), ('service', 'NOUN'), ('chatbots', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Some', 'DT'), ('example', 'NN'), ('uses', 'NNS'), ('include', 'VBP'), ('credit', 'NN'), ('risk', 'NN'), ('scoring', 'NN'), (',', ','), ('automated', 'VBN'), ('underwriting', 'NN'), (',', ','), ('wealth', 'NN'), ('management', 'NN'), ('fund', 'NN'), ('assistants', 'NNS'), ('and', 'CC'), ('customer', 'NN'), ('service', 'NN'), ('chatbots', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Some', 'some'), ('example', 'example'), ('uses', 'use'), ('include', 'include'), ('credit', 'credit'), ('risk', 'risk'), ('scoring', 'scoring'), (',', ','), ('automated', 'automated'), ('underwriting', 'underwriting'), (',', ','), ('wealth', 'wealth'), ('management', 'management'), ('fund', 'fund'), ('assistants', 'assistant'), ('and', 'and'), ('customer', 'customer'), ('service', 'service'), ('chatbots', 'chatbot'), ('.', '.')] 

 Dependency tags are: 
>> [(('Some', 'uses'), 'det'), (('example', 'uses'), 'compound'), (('uses', 'include'), 'nsubj'), (('include', 'root'), 'root'), (('credit', 'scoring'), 'compound'), (('risk', 'scoring'), 'compound'), (('scoring', 'include'), 'obj'), ((',', 'underwriting'), 'punct'), (('automated', 'underwriting'), 'amod'), (('underwriting', 'scoring'), 'conj'), ((',', 'assistants'), 'punct'), (('wealth', 'management'), 'compound'), (('management', 'assistants'), 'compound'), (('fund', 'assistants'), 'compound'), (('assistants', 'scoring'), 'conj'), (('and', 'chatbots'), 'cc'), (('customer', 'service'), 'compound'), (('service', 'chatbots'), 'compound'), (('chatbots', 'scoring'), 'conj'), (('.', 'include'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 132 =================================

Automate and improve the efficiency of operations with intelligent,   data-driven decisions 


------------------- Sentence 1 -------------------

 Automate and improve the efficiency of operations with intelligent,   data-driven decisions 

Tokens are: 
>> ['Automate', 'and', 'improve', 'the', 'efficiency', 'of', 'operations', 'with', 'intelligent', ',', 'data-driven', 'decisions'] 

 UPOS tags are: 
>> [('Automate', 'VERB'), ('and', 'CCONJ'), ('improve', 'VERB'), ('the', 'DET'), ('efficiency', 'NOUN'), ('of', 'ADP'), ('operations', 'NOUN'), ('with', 'ADP'), ('intelligent', 'ADJ'), (',', 'PUNCT'), ('data-driven', 'ADJ'), ('decisions', 'NOUN')] 

 XPOS tags are: 
>> [('Automate', 'VB'), ('and', 'CC'), ('improve', 'VB'), ('the', 'DT'), ('efficiency', 'NN'), ('of', 'IN'), ('operations', 'NNS'), ('with', 'IN'), ('intelligent', 'JJ'), (',', ','), ('data-driven', 'JJ'), ('decisions', 'NNS')] 

 Lemmas are: 
>> [('Automate', 'automate'), ('and', 'and'), ('improve', 'improve'), ('the', 'the'), ('efficiency', 'efficiency'), ('of', 'of'), ('operations', 'operation'), ('with', 'with'), ('intelligent', 'intelligent'), (',', ','), ('data-driven', 'data-driven'), ('decisions', 'decision')] 

 Dependency tags are: 
>> [(('Automate', 'root'), 'root'), (('and', 'improve'), 'cc'), (('improve', 'Automate'), 'conj'), (('the', 'efficiency'), 'det'), (('efficiency', 'improve'), 'obj'), (('of', 'operations'), 'case'), (('operations', 'efficiency'), 'nmod'), (('with', 'decisions'), 'case'), (('intelligent', 'decisions'), 'amod'), ((',', 'decisions'), 'punct'), (('data-driven', 'decisions'), 'amod'), (('decisions', 'operations'), 'nmod')]

 Named Entites are: 
>> []

================================ Paragraph 133 =================================

Leverage AI and analytics techniques to drive operational efficiency. By utilizing  sensor information from machines, machine learning can help predict when a  specific machine is likely to require maintenance, allowing technicians to be  proactive rather than reactive in maintenance efforts. Some AI applications in this  context include predictive maintenance, recommender systems, robotic process  automation and airline scheduling.  


------------------- Sentence 1 -------------------

 Leverage AI and analytics techniques to drive operational efficiency. 

Tokens are: 
>> ['Leverage', 'AI', 'and', 'analytics', 'techniques', 'to', 'drive', 'operational', 'efficiency', '.'] 

 UPOS tags are: 
>> [('Leverage', 'VERB'), ('AI', 'NOUN'), ('and', 'CCONJ'), ('analytics', 'NOUN'), ('techniques', 'NOUN'), ('to', 'PART'), ('drive', 'VERB'), ('operational', 'ADJ'), ('efficiency', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Leverage', 'VB'), ('AI', 'NNS'), ('and', 'CC'), ('analytics', 'NN'), ('techniques', 'NNS'), ('to', 'TO'), ('drive', 'VB'), ('operational', 'JJ'), ('efficiency', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Leverage', 'leverage'), ('AI', 'ai'), ('and', 'and'), ('analytics', 'analytic'), ('techniques', 'technique'), ('to', 'to'), ('drive', 'drive'), ('operational', 'operational'), ('efficiency', 'efficiency'), ('.', '.')] 

 Dependency tags are: 
>> [(('Leverage', 'root'), 'root'), (('AI', 'techniques'), 'compound'), (('and', 'techniques'), 'cc'), (('analytics', 'AI'), 'conj'), (('techniques', 'Leverage'), 'obj'), (('to', 'drive'), 'mark'), (('drive', 'Leverage'), 'advcl'), (('operational', 'efficiency'), 'amod'), (('efficiency', 'drive'), 'obj'), (('.', 'Leverage'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 By utilizing  sensor information from machines, machine learning can help predict when a  specific machine is likely to require maintenance, allowing technicians to be  proactive rather than reactive in maintenance efforts. 

Tokens are: 
>> ['By', 'utilizing', 'sensor', 'information', 'from', 'machines', ',', 'machine', 'learning', 'can', 'help', 'predict', 'when', 'a', 'specific', 'machine', 'is', 'likely', 'to', 'require', 'maintenance', ',', 'allowing', 'technicians', 'to', 'be', 'proactive', 'rather', 'than', 'reactive', 'in', 'maintenance', 'efforts', '.'] 

 UPOS tags are: 
>> [('By', 'SCONJ'), ('utilizing', 'VERB'), ('sensor', 'NOUN'), ('information', 'NOUN'), ('from', 'ADP'), ('machines', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('can', 'AUX'), ('help', 'VERB'), ('predict', 'VERB'), ('when', 'SCONJ'), ('a', 'DET'), ('specific', 'ADJ'), ('machine', 'NOUN'), ('is', 'AUX'), ('likely', 'ADJ'), ('to', 'PART'), ('require', 'VERB'), ('maintenance', 'NOUN'), (',', 'PUNCT'), ('allowing', 'VERB'), ('technicians', 'NOUN'), ('to', 'PART'), ('be', 'AUX'), ('proactive', 'ADJ'), ('rather', 'ADV'), ('than', 'ADP'), ('reactive', 'ADJ'), ('in', 'ADP'), ('maintenance', 'NOUN'), ('efforts', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('By', 'IN'), ('utilizing', 'VBG'), ('sensor', 'NN'), ('information', 'NN'), ('from', 'IN'), ('machines', 'NNS'), (',', ','), ('machine', 'NN'), ('learning', 'NN'), ('can', 'MD'), ('help', 'VB'), ('predict', 'VB'), ('when', 'WRB'), ('a', 'DT'), ('specific', 'JJ'), ('machine', 'NN'), ('is', 'VBZ'), ('likely', 'JJ'), ('to', 'TO'), ('require', 'VB'), ('maintenance', 'NN'), (',', ','), ('allowing', 'VBG'), ('technicians', 'NNS'), ('to', 'TO'), ('be', 'VB'), ('proactive', 'JJ'), ('rather', 'RB'), ('than', 'IN'), ('reactive', 'JJ'), ('in', 'IN'), ('maintenance', 'NN'), ('efforts', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('By', 'by'), ('utilizing', 'utilize'), ('sensor', 'sensor'), ('information', 'information'), ('from', 'from'), ('machines', 'machine'), (',', ','), ('machine', 'machine'), ('learning', 'learning'), ('can', 'can'), ('help', 'help'), ('predict', 'predict'), ('when', 'when'), ('a', 'a'), ('specific', 'specific'), ('machine', 'machine'), ('is', 'be'), ('likely', 'likely'), ('to', 'to'), ('require', 'require'), ('maintenance', 'maintenance'), (',', ','), ('allowing', 'allow'), ('technicians', 'technician'), ('to', 'to'), ('be', 'be'), ('proactive', 'proactive'), ('rather', 'rather'), ('than', 'than'), ('reactive', 'reactive'), ('in', 'in'), ('maintenance', 'maintenance'), ('efforts', 'effort'), ('.', '.')] 

 Dependency tags are: 
>> [(('By', 'utilizing'), 'mark'), (('utilizing', 'help'), 'advcl'), (('sensor', 'information'), 'compound'), (('information', 'utilizing'), 'obj'), (('from', 'machines'), 'case'), (('machines', 'information'), 'nmod'), ((',', 'help'), 'punct'), (('machine', 'learning'), 'compound'), (('learning', 'help'), 'nsubj'), (('can', 'help'), 'aux'), (('help', 'root'), 'root'), (('predict', 'help'), 'xcomp'), (('when', 'likely'), 'mark'), (('a', 'machine'), 'det'), (('specific', 'machine'), 'amod'), (('machine', 'likely'), 'nsubj'), (('is', 'likely'), 'cop'), (('likely', 'predict'), 'advcl'), (('to', 'require'), 'mark'), (('require', 'likely'), 'xcomp'), (('maintenance', 'require'), 'obj'), ((',', 'allowing'), 'punct'), (('allowing', 'require'), 'advcl'), (('technicians', 'allowing'), 'obj'), (('to', 'proactive'), 'mark'), (('be', 'proactive'), 'cop'), (('proactive', 'allowing'), 'xcomp'), (('rather', 'reactive'), 'cc'), (('than', 'rather'), 'fixed'), (('reactive', 'proactive'), 'conj'), (('in', 'efforts'), 'case'), (('maintenance', 'efforts'), 'compound'), (('efforts', 'reactive'), 'obl'), (('.', 'help'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Some AI applications in this  context include predictive maintenance, recommender systems, robotic process  automation and airline scheduling. 

Tokens are: 
>> ['Some', 'AI', 'applications', 'in', 'this', 'context', 'include', 'predictive', 'maintenance', ',', 'recommender', 'systems', ',', 'robotic', 'process', 'automation', 'and', 'airline', 'scheduling', '.'] 

 UPOS tags are: 
>> [('Some', 'DET'), ('AI', 'NOUN'), ('applications', 'NOUN'), ('in', 'ADP'), ('this', 'DET'), ('context', 'NOUN'), ('include', 'VERB'), ('predictive', 'ADJ'), ('maintenance', 'NOUN'), (',', 'PUNCT'), ('recommender', 'NOUN'), ('systems', 'NOUN'), (',', 'PUNCT'), ('robotic', 'ADJ'), ('process', 'NOUN'), ('automation', 'NOUN'), ('and', 'CCONJ'), ('airline', 'NOUN'), ('scheduling', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Some', 'DT'), ('AI', 'NN'), ('applications', 'NNS'), ('in', 'IN'), ('this', 'DT'), ('context', 'NN'), ('include', 'VBP'), ('predictive', 'JJ'), ('maintenance', 'NN'), (',', ','), ('recommender', 'NN'), ('systems', 'NNS'), (',', ','), ('robotic', 'JJ'), ('process', 'NN'), ('automation', 'NN'), ('and', 'CC'), ('airline', 'NN'), ('scheduling', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Some', 'some'), ('AI', 'ai'), ('applications', 'application'), ('in', 'in'), ('this', 'this'), ('context', 'context'), ('include', 'include'), ('predictive', 'predictive'), ('maintenance', 'maintenance'), (',', ','), ('recommender', 'recommender'), ('systems', 'system'), (',', ','), ('robotic', 'robotic'), ('process', 'process'), ('automation', 'automation'), ('and', 'and'), ('airline', 'airline'), ('scheduling', 'scheduling'), ('.', '.')] 

 Dependency tags are: 
>> [(('Some', 'applications'), 'det'), (('AI', 'applications'), 'compound'), (('applications', 'include'), 'nsubj'), (('in', 'context'), 'case'), (('this', 'context'), 'det'), (('context', 'applications'), 'nmod'), (('include', 'root'), 'root'), (('predictive', 'maintenance'), 'amod'), (('maintenance', 'include'), 'obj'), ((',', 'systems'), 'punct'), (('recommender', 'systems'), 'compound'), (('systems', 'maintenance'), 'conj'), ((',', 'automation'), 'punct'), (('robotic', 'automation'), 'amod'), (('process', 'automation'), 'compound'), (('automation', 'maintenance'), 'conj'), (('and', 'scheduling'), 'cc'), (('airline', 'scheduling'), 'compound'), (('scheduling', 'maintenance'), 'conj'), (('.', 'include'), 'punct')]

 Named Entites are: 
>> [('AI', 'ORG')]

================================ Paragraph 134 =================================

Apply data driven insights to make timely and consequential tactical   and strategic decisions 


------------------- Sentence 1 -------------------

 Apply data driven insights to make timely and consequential tactical   and strategic decisions 

Tokens are: 
>> ['Apply', 'data', 'driven', 'insights', 'to', 'make', 'timely', 'and', 'consequential', 'tactical', 'and', 'strategic', 'decisions'] 

 UPOS tags are: 
>> [('Apply', 'VERB'), ('data', 'NOUN'), ('driven', 'VERB'), ('insights', 'NOUN'), ('to', 'PART'), ('make', 'VERB'), ('timely', 'ADJ'), ('and', 'CCONJ'), ('consequential', 'ADJ'), ('tactical', 'ADJ'), ('and', 'CCONJ'), ('strategic', 'ADJ'), ('decisions', 'NOUN')] 

 XPOS tags are: 
>> [('Apply', 'VB'), ('data', 'NNS'), ('driven', 'VBN'), ('insights', 'NNS'), ('to', 'TO'), ('make', 'VB'), ('timely', 'JJ'), ('and', 'CC'), ('consequential', 'JJ'), ('tactical', 'JJ'), ('and', 'CC'), ('strategic', 'JJ'), ('decisions', 'NNS')] 

 Lemmas are: 
>> [('Apply', 'apply'), ('data', 'datum'), ('driven', 'drive'), ('insights', 'insight'), ('to', 'to'), ('make', 'make'), ('timely', 'timely'), ('and', 'and'), ('consequential', 'consequential'), ('tactical', 'tactical'), ('and', 'and'), ('strategic', 'strategic'), ('decisions', 'decision')] 

 Dependency tags are: 
>> [(('Apply', 'root'), 'root'), (('data', 'Apply'), 'obj'), (('driven', 'insights'), 'amod'), (('insights', 'Apply'), 'obj'), (('to', 'make'), 'mark'), (('make', 'insights'), 'acl'), (('timely', 'decisions'), 'amod'), (('and', 'consequential'), 'cc'), (('consequential', 'timely'), 'conj'), (('tactical', 'decisions'), 'amod'), (('and', 'strategic'), 'cc'), (('strategic', 'timely'), 'conj'), (('decisions', 'make'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 135 =================================

Better inform management and strategic decisions by leveraging machine learning  and advanced analytics. These tend to be ad hoc projects or solutions, where  the goal is to apply statistical techniques to gain key insights around business  processes. For example, by measuring analytics related to cleanliness, customer  service, overall satisfaction, etc., an amusement park operations manager can  determine the likelihood of repeat customers, identify key gaps in operations and  better market the value of the park to the right demographics. 


------------------- Sentence 1 -------------------

 Better inform management and strategic decisions by leveraging machine learning  and advanced analytics. 

Tokens are: 
>> ['Better', 'inform', 'management', 'and', 'strategic', 'decisions', 'by', 'leveraging', 'machine', 'learning', 'and', 'advanced', 'analytics', '.'] 

 UPOS tags are: 
>> [('Better', 'ADV'), ('inform', 'VERB'), ('management', 'NOUN'), ('and', 'CCONJ'), ('strategic', 'ADJ'), ('decisions', 'NOUN'), ('by', 'SCONJ'), ('leveraging', 'VERB'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('and', 'CCONJ'), ('advanced', 'ADJ'), ('analytics', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Better', 'RBR'), ('inform', 'VB'), ('management', 'NN'), ('and', 'CC'), ('strategic', 'JJ'), ('decisions', 'NNS'), ('by', 'IN'), ('leveraging', 'VBG'), ('machine', 'NN'), ('learning', 'NN'), ('and', 'CC'), ('advanced', 'JJ'), ('analytics', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Better', 'better'), ('inform', 'inform'), ('management', 'management'), ('and', 'and'), ('strategic', 'strategic'), ('decisions', 'decision'), ('by', 'by'), ('leveraging', 'leverage'), ('machine', 'machine'), ('learning', 'learning'), ('and', 'and'), ('advanced', 'advanced'), ('analytics', 'analytic'), ('.', '.')] 

 Dependency tags are: 
>> [(('Better', 'inform'), 'advmod'), (('inform', 'root'), 'root'), (('management', 'inform'), 'obj'), (('and', 'decisions'), 'cc'), (('strategic', 'decisions'), 'amod'), (('decisions', 'management'), 'conj'), (('by', 'leveraging'), 'mark'), (('leveraging', 'inform'), 'advcl'), (('machine', 'learning'), 'compound'), (('learning', 'analytics'), 'compound'), (('and', 'advanced'), 'cc'), (('advanced', 'learning'), 'conj'), (('analytics', 'leveraging'), 'obj'), (('.', 'inform'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 These tend to be ad hoc projects or solutions, where  the goal is to apply statistical techniques to gain key insights around business  processes. 

Tokens are: 
>> ['These', 'tend', 'to', 'be', 'ad', 'hoc', 'projects', 'or', 'solutions', ',', 'where', 'the', 'goal', 'is', 'to', 'apply', 'statistical', 'techniques', 'to', 'gain', 'key', 'insights', 'around', 'business', 'processes', '.'] 

 UPOS tags are: 
>> [('These', 'PRON'), ('tend', 'VERB'), ('to', 'PART'), ('be', 'AUX'), ('ad', 'NOUN'), ('hoc', 'NOUN'), ('projects', 'NOUN'), ('or', 'CCONJ'), ('solutions', 'NOUN'), (',', 'PUNCT'), ('where', 'SCONJ'), ('the', 'DET'), ('goal', 'NOUN'), ('is', 'VERB'), ('to', 'PART'), ('apply', 'VERB'), ('statistical', 'ADJ'), ('techniques', 'NOUN'), ('to', 'PART'), ('gain', 'VERB'), ('key', 'ADJ'), ('insights', 'NOUN'), ('around', 'ADP'), ('business', 'NOUN'), ('processes', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('These', 'DT'), ('tend', 'VBP'), ('to', 'TO'), ('be', 'VB'), ('ad', 'NN'), ('hoc', 'NN'), ('projects', 'NNS'), ('or', 'CC'), ('solutions', 'NNS'), (',', ','), ('where', 'WRB'), ('the', 'DT'), ('goal', 'NN'), ('is', 'VBZ'), ('to', 'TO'), ('apply', 'VB'), ('statistical', 'JJ'), ('techniques', 'NNS'), ('to', 'TO'), ('gain', 'VB'), ('key', 'JJ'), ('insights', 'NNS'), ('around', 'IN'), ('business', 'NN'), ('processes', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('These', 'this'), ('tend', 'tend'), ('to', 'to'), ('be', 'be'), ('ad', 'ad'), ('hoc', 'hoc'), ('projects', 'project'), ('or', 'or'), ('solutions', 'solution'), (',', ','), ('where', 'where'), ('the', 'the'), ('goal', 'goal'), ('is', 'be'), ('to', 'to'), ('apply', 'apply'), ('statistical', 'statistical'), ('techniques', 'technique'), ('to', 'to'), ('gain', 'gain'), ('key', 'key'), ('insights', 'insight'), ('around', 'around'), ('business', 'business'), ('processes', 'process'), ('.', '.')] 

 Dependency tags are: 
>> [(('These', 'tend'), 'nsubj'), (('tend', 'root'), 'root'), (('to', 'projects'), 'mark'), (('be', 'projects'), 'cop'), (('ad', 'projects'), 'compound'), (('hoc', 'projects'), 'compound'), (('projects', 'tend'), 'xcomp'), (('or', 'solutions'), 'cc'), (('solutions', 'projects'), 'conj'), ((',', 'projects'), 'punct'), (('where', 'is'), 'mark'), (('the', 'goal'), 'det'), (('goal', 'is'), 'nsubj'), (('is', 'projects'), 'acl:relcl'), (('to', 'apply'), 'mark'), (('apply', 'is'), 'ccomp'), (('statistical', 'techniques'), 'amod'), (('techniques', 'apply'), 'obj'), (('to', 'gain'), 'mark'), (('gain', 'apply'), 'advcl'), (('key', 'insights'), 'amod'), (('insights', 'gain'), 'obj'), (('around', 'processes'), 'case'), (('business', 'processes'), 'compound'), (('processes', 'insights'), 'nmod'), (('.', 'tend'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 For example, by measuring analytics related to cleanliness, customer  service, overall satisfaction, etc., an amusement park operations manager can  determine the likelihood of repeat customers, identify key gaps in operations and  better market the value of the park to the right demographics. 

Tokens are: 
>> ['For', 'example', ',', 'by', 'measuring', 'analytics', 'related', 'to', 'cleanliness', ',', 'customer', 'service', ',', 'overall', 'satisfaction', ',', 'etc.', ',', 'an', 'amusement', 'park', 'operations', 'manager', 'can', 'determine', 'the', 'likelihood', 'of', 'repeat', 'customers', ',', 'identify', 'key', 'gaps', 'in', 'operations', 'and', 'better', 'market', 'the', 'value', 'of', 'the', 'park', 'to', 'the', 'right', 'demographics', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('by', 'SCONJ'), ('measuring', 'VERB'), ('analytics', 'NOUN'), ('related', 'ADJ'), ('to', 'ADP'), ('cleanliness', 'NOUN'), (',', 'PUNCT'), ('customer', 'NOUN'), ('service', 'NOUN'), (',', 'PUNCT'), ('overall', 'ADJ'), ('satisfaction', 'NOUN'), (',', 'PUNCT'), ('etc.', 'X'), (',', 'PUNCT'), ('an', 'DET'), ('amusement', 'NOUN'), ('park', 'NOUN'), ('operations', 'NOUN'), ('manager', 'NOUN'), ('can', 'AUX'), ('determine', 'VERB'), ('the', 'DET'), ('likelihood', 'NOUN'), ('of', 'ADP'), ('repeat', 'ADJ'), ('customers', 'NOUN'), (',', 'PUNCT'), ('identify', 'VERB'), ('key', 'ADJ'), ('gaps', 'NOUN'), ('in', 'ADP'), ('operations', 'NOUN'), ('and', 'CCONJ'), ('better', 'ADJ'), ('market', 'NOUN'), ('the', 'DET'), ('value', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('park', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('right', 'ADJ'), ('demographics', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('example', 'NN'), (',', ','), ('by', 'IN'), ('measuring', 'VBG'), ('analytics', 'NNS'), ('related', 'JJ'), ('to', 'IN'), ('cleanliness', 'NN'), (',', ','), ('customer', 'NN'), ('service', 'NN'), (',', ','), ('overall', 'JJ'), ('satisfaction', 'NN'), (',', ','), ('etc.', 'FW'), (',', ','), ('an', 'DT'), ('amusement', 'NN'), ('park', 'NN'), ('operations', 'NNS'), ('manager', 'NN'), ('can', 'MD'), ('determine', 'VB'), ('the', 'DT'), ('likelihood', 'NN'), ('of', 'IN'), ('repeat', 'JJ'), ('customers', 'NNS'), (',', ','), ('identify', 'VB'), ('key', 'JJ'), ('gaps', 'NNS'), ('in', 'IN'), ('operations', 'NNS'), ('and', 'CC'), ('better', 'JJR'), ('market', 'NN'), ('the', 'DT'), ('value', 'NN'), ('of', 'IN'), ('the', 'DT'), ('park', 'NN'), ('to', 'IN'), ('the', 'DT'), ('right', 'JJ'), ('demographics', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('example', 'example'), (',', ','), ('by', 'by'), ('measuring', 'measure'), ('analytics', 'analytic'), ('related', 'related'), ('to', 'to'), ('cleanliness', 'cleanliness'), (',', ','), ('customer', 'customer'), ('service', 'service'), (',', ','), ('overall', 'overall'), ('satisfaction', 'satisfaction'), (',', ','), ('etc.', 'etc.'), (',', ','), ('an', 'a'), ('amusement', 'amusement'), ('park', 'park'), ('operations', 'operation'), ('manager', 'manager'), ('can', 'can'), ('determine', 'determine'), ('the', 'the'), ('likelihood', 'likelihood'), ('of', 'of'), ('repeat', 'repeat'), ('customers', 'customer'), (',', ','), ('identify', 'identify'), ('key', 'key'), ('gaps', 'gap'), ('in', 'in'), ('operations', 'operation'), ('and', 'and'), ('better', 'good'), ('market', 'market'), ('the', 'the'), ('value', 'value'), ('of', 'of'), ('the', 'the'), ('park', 'park'), ('to', 'to'), ('the', 'the'), ('right', 'right'), ('demographics', 'demographics'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'example'), 'case'), (('example', 'determine'), 'obl'), ((',', 'determine'), 'punct'), (('by', 'measuring'), 'mark'), (('measuring', 'determine'), 'advcl'), (('analytics', 'measuring'), 'obj'), (('related', 'analytics'), 'amod'), (('to', 'cleanliness'), 'case'), (('cleanliness', 'related'), 'obl'), ((',', 'service'), 'punct'), (('customer', 'service'), 'compound'), (('service', 'cleanliness'), 'conj'), ((',', 'satisfaction'), 'punct'), (('overall', 'satisfaction'), 'amod'), (('satisfaction', 'cleanliness'), 'conj'), ((',', 'etc.'), 'punct'), (('etc.', 'cleanliness'), 'conj'), ((',', 'determine'), 'punct'), (('an', 'manager'), 'det'), (('amusement', 'park'), 'compound'), (('park', 'manager'), 'compound'), (('operations', 'manager'), 'compound'), (('manager', 'determine'), 'nsubj'), (('can', 'determine'), 'aux'), (('determine', 'root'), 'root'), (('the', 'likelihood'), 'det'), (('likelihood', 'determine'), 'obj'), (('of', 'customers'), 'case'), (('repeat', 'customers'), 'amod'), (('customers', 'likelihood'), 'nmod'), ((',', 'identify'), 'punct'), (('identify', 'determine'), 'conj'), (('key', 'gaps'), 'amod'), (('gaps', 'identify'), 'obj'), (('in', 'operations'), 'case'), (('operations', 'gaps'), 'nmod'), (('and', 'market'), 'cc'), (('better', 'market'), 'amod'), (('market', 'operations'), 'conj'), (('the', 'value'), 'det'), (('value', 'identify'), 'obj'), (('of', 'park'), 'case'), (('the', 'park'), 'det'), (('park', 'value'), 'nmod'), (('to', 'demographics'), 'case'), (('the', 'demographics'), 'det'), (('right', 'demographics'), 'amod'), (('demographics', 'park'), 'nmod'), (('.', 'determine'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 136 =================================

Personalize customer experiences 


------------------- Sentence 1 -------------------

 Personalize customer experiences 

Tokens are: 
>> ['Personalize', 'customer', 'experiences'] 

 UPOS tags are: 
>> [('Personalize', 'VERB'), ('customer', 'NOUN'), ('experiences', 'NOUN')] 

 XPOS tags are: 
>> [('Personalize', 'VB'), ('customer', 'NN'), ('experiences', 'NNS')] 

 Lemmas are: 
>> [('Personalize', 'personalize'), ('customer', 'customer'), ('experiences', 'experience')] 

 Dependency tags are: 
>> [(('Personalize', 'root'), 'root'), (('customer', 'experiences'), 'compound'), (('experiences', 'Personalize'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 137 =================================

Identify and recommend personalized products at scale with recommender  systems. The likes of Google, Amazon, Facebook and Apple have made  personalization an expectation. Recommender systems are one of the more  popular examples of how machine learning can be leveraged to analyze data  across millions of users to accomplish this. By analyzing and tracking various  customer touchpoints, some retailers are now able to predict the likelihood  of users buying future products. It is important to note that machine learning  solutions need not be 100 percent accurate to realize business value and ROI.  The goal should be to conduct data-driven decision making at scale to reduce  operational costs and optimize resources and targeting efforts.


------------------- Sentence 1 -------------------

 Identify and recommend personalized products at scale with recommender  systems. 

Tokens are: 
>> ['Identify', 'and', 'recommend', 'personalized', 'products', 'at', 'scale', 'with', 'recommender', 'systems', '.'] 

 UPOS tags are: 
>> [('Identify', 'VERB'), ('and', 'CCONJ'), ('recommend', 'VERB'), ('personalized', 'VERB'), ('products', 'NOUN'), ('at', 'ADP'), ('scale', 'NOUN'), ('with', 'ADP'), ('recommender', 'NOUN'), ('systems', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Identify', 'VB'), ('and', 'CC'), ('recommend', 'VB'), ('personalized', 'VBN'), ('products', 'NNS'), ('at', 'IN'), ('scale', 'NN'), ('with', 'IN'), ('recommender', 'NN'), ('systems', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Identify', 'identify'), ('and', 'and'), ('recommend', 'recommend'), ('personalized', 'personalize'), ('products', 'product'), ('at', 'at'), ('scale', 'scale'), ('with', 'with'), ('recommender', 'recommender'), ('systems', 'system'), ('.', '.')] 

 Dependency tags are: 
>> [(('Identify', 'root'), 'root'), (('and', 'recommend'), 'cc'), (('recommend', 'Identify'), 'conj'), (('personalized', 'products'), 'amod'), (('products', 'recommend'), 'obj'), (('at', 'scale'), 'case'), (('scale', 'recommend'), 'obl'), (('with', 'systems'), 'case'), (('recommender', 'systems'), 'compound'), (('systems', 'scale'), 'nmod'), (('.', 'Identify'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 The likes of Google, Amazon, Facebook and Apple have made  personalization an expectation. 

Tokens are: 
>> ['The', 'likes', 'of', 'Google', ',', 'Amazon', ',', 'Facebook', 'and', 'Apple', 'have', 'made', 'personalization', 'an', 'expectation', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('likes', 'NOUN'), ('of', 'ADP'), ('Google', 'PROPN'), (',', 'PUNCT'), ('Amazon', 'PROPN'), (',', 'PUNCT'), ('Facebook', 'PROPN'), ('and', 'CCONJ'), ('Apple', 'PROPN'), ('have', 'AUX'), ('made', 'VERB'), ('personalization', 'NOUN'), ('an', 'DET'), ('expectation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('likes', 'NNS'), ('of', 'IN'), ('Google', 'NNP'), (',', ','), ('Amazon', 'NNP'), (',', ','), ('Facebook', 'NNP'), ('and', 'CC'), ('Apple', 'NNP'), ('have', 'VBP'), ('made', 'VBN'), ('personalization', 'NN'), ('an', 'DT'), ('expectation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('likes', 'likes'), ('of', 'of'), ('Google', 'Google'), (',', ','), ('Amazon', 'Amazon'), (',', ','), ('Facebook', 'Facebook'), ('and', 'and'), ('Apple', 'Apple'), ('have', 'have'), ('made', 'make'), ('personalization', 'personalization'), ('an', 'a'), ('expectation', 'expectation'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'likes'), 'det'), (('likes', 'made'), 'nsubj'), (('of', 'Google'), 'case'), (('Google', 'likes'), 'nmod'), ((',', 'Amazon'), 'punct'), (('Amazon', 'Google'), 'conj'), ((',', 'Facebook'), 'punct'), (('Facebook', 'Google'), 'conj'), (('and', 'Apple'), 'cc'), (('Apple', 'Google'), 'conj'), (('have', 'made'), 'aux'), (('made', 'root'), 'root'), (('personalization', 'made'), 'obj'), (('an', 'expectation'), 'det'), (('expectation', 'made'), 'obj'), (('.', 'made'), 'punct')]

 Named Entites are: 
>> [('Google', 'ORG'), ('Amazon', 'ORG'), ('Facebook', 'ORG'), ('Apple', 'ORG')]

------------------- Sentence 3 -------------------

 Recommender systems are one of the more  popular examples of how machine learning can be leveraged to analyze data  across millions of users to accomplish this. 

Tokens are: 
>> ['Recommender', 'systems', 'are', 'one', 'of', 'the', 'more', 'popular', 'examples', 'of', 'how', 'machine', 'learning', 'can', 'be', 'leveraged', 'to', 'analyze', 'data', 'across', 'millions', 'of', 'users', 'to', 'accomplish', 'this', '.'] 

 UPOS tags are: 
>> [('Recommender', 'NOUN'), ('systems', 'NOUN'), ('are', 'AUX'), ('one', 'NUM'), ('of', 'ADP'), ('the', 'DET'), ('more', 'ADV'), ('popular', 'ADJ'), ('examples', 'NOUN'), ('of', 'ADP'), ('how', 'SCONJ'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('leveraged', 'VERB'), ('to', 'PART'), ('analyze', 'VERB'), ('data', 'NOUN'), ('across', 'ADP'), ('millions', 'NOUN'), ('of', 'ADP'), ('users', 'NOUN'), ('to', 'PART'), ('accomplish', 'VERB'), ('this', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Recommender', 'NN'), ('systems', 'NNS'), ('are', 'VBP'), ('one', 'CD'), ('of', 'IN'), ('the', 'DT'), ('more', 'RBR'), ('popular', 'JJ'), ('examples', 'NNS'), ('of', 'IN'), ('how', 'WRB'), ('machine', 'NN'), ('learning', 'NN'), ('can', 'MD'), ('be', 'VB'), ('leveraged', 'VBN'), ('to', 'TO'), ('analyze', 'VB'), ('data', 'NNS'), ('across', 'IN'), ('millions', 'NNS'), ('of', 'IN'), ('users', 'NNS'), ('to', 'TO'), ('accomplish', 'VB'), ('this', 'DT'), ('.', '.')] 

 Lemmas are: 
>> [('Recommender', 'recommender'), ('systems', 'system'), ('are', 'be'), ('one', 'one'), ('of', 'of'), ('the', 'the'), ('more', 'more'), ('popular', 'popular'), ('examples', 'example'), ('of', 'of'), ('how', 'how'), ('machine', 'machine'), ('learning', 'learning'), ('can', 'can'), ('be', 'be'), ('leveraged', 'leverage'), ('to', 'to'), ('analyze', 'analyze'), ('data', 'datum'), ('across', 'across'), ('millions', 'million'), ('of', 'of'), ('users', 'user'), ('to', 'to'), ('accomplish', 'accomplish'), ('this', 'this'), ('.', '.')] 

 Dependency tags are: 
>> [(('Recommender', 'systems'), 'compound'), (('systems', 'one'), 'nsubj'), (('are', 'one'), 'cop'), (('one', 'root'), 'root'), (('of', 'examples'), 'case'), (('the', 'examples'), 'det'), (('more', 'popular'), 'advmod'), (('popular', 'examples'), 'amod'), (('examples', 'one'), 'nmod'), (('of', 'how'), 'case'), (('how', 'leveraged'), 'mark'), (('machine', 'learning'), 'compound'), (('learning', 'leveraged'), 'nsubj:pass'), (('can', 'leveraged'), 'aux'), (('be', 'leveraged'), 'aux:pass'), (('leveraged', 'examples'), 'acl:relcl'), (('to', 'analyze'), 'mark'), (('analyze', 'leveraged'), 'xcomp'), (('data', 'analyze'), 'obj'), (('across', 'millions'), 'case'), (('millions', 'analyze'), 'obl'), (('of', 'users'), 'case'), (('users', 'millions'), 'nmod'), (('to', 'accomplish'), 'mark'), (('accomplish', 'analyze'), 'advcl'), (('this', 'accomplish'), 'obj'), (('.', 'one'), 'punct')]

 Named Entites are: 
>> [('millions', 'CARDINAL')]

------------------- Sentence 4 -------------------

 By analyzing and tracking various  customer touchpoints, some retailers are now able to predict the likelihood  of users buying future products. 

Tokens are: 
>> ['By', 'analyzing', 'and', 'tracking', 'various', 'customer', 'touchpoints', ',', 'some', 'retailers', 'are', 'now', 'able', 'to', 'predict', 'the', 'likelihood', 'of', 'users', 'buying', 'future', 'products', '.'] 

 UPOS tags are: 
>> [('By', 'SCONJ'), ('analyzing', 'VERB'), ('and', 'CCONJ'), ('tracking', 'VERB'), ('various', 'ADJ'), ('customer', 'NOUN'), ('touchpoints', 'NOUN'), (',', 'PUNCT'), ('some', 'DET'), ('retailers', 'NOUN'), ('are', 'AUX'), ('now', 'ADV'), ('able', 'ADJ'), ('to', 'PART'), ('predict', 'VERB'), ('the', 'DET'), ('likelihood', 'NOUN'), ('of', 'ADP'), ('users', 'NOUN'), ('buying', 'VERB'), ('future', 'ADJ'), ('products', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('By', 'IN'), ('analyzing', 'VBG'), ('and', 'CC'), ('tracking', 'VBG'), ('various', 'JJ'), ('customer', 'NN'), ('touchpoints', 'NNS'), (',', ','), ('some', 'DT'), ('retailers', 'NNS'), ('are', 'VBP'), ('now', 'RB'), ('able', 'JJ'), ('to', 'TO'), ('predict', 'VB'), ('the', 'DT'), ('likelihood', 'NN'), ('of', 'IN'), ('users', 'NNS'), ('buying', 'VBG'), ('future', 'JJ'), ('products', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('By', 'by'), ('analyzing', 'analyze'), ('and', 'and'), ('tracking', 'track'), ('various', 'various'), ('customer', 'customer'), ('touchpoints', 'touchpoint'), (',', ','), ('some', 'some'), ('retailers', 'retailer'), ('are', 'be'), ('now', 'now'), ('able', 'able'), ('to', 'to'), ('predict', 'predict'), ('the', 'the'), ('likelihood', 'likelihood'), ('of', 'of'), ('users', 'user'), ('buying', 'buy'), ('future', 'future'), ('products', 'product'), ('.', '.')] 

 Dependency tags are: 
>> [(('By', 'analyzing'), 'mark'), (('analyzing', 'able'), 'advcl'), (('and', 'tracking'), 'cc'), (('tracking', 'analyzing'), 'conj'), (('various', 'touchpoints'), 'amod'), (('customer', 'touchpoints'), 'compound'), (('touchpoints', 'analyzing'), 'obj'), ((',', 'able'), 'punct'), (('some', 'retailers'), 'det'), (('retailers', 'able'), 'nsubj'), (('are', 'able'), 'cop'), (('now', 'able'), 'advmod'), (('able', 'root'), 'root'), (('to', 'predict'), 'mark'), (('predict', 'able'), 'xcomp'), (('the', 'likelihood'), 'det'), (('likelihood', 'predict'), 'obj'), (('of', 'users'), 'case'), (('users', 'likelihood'), 'nmod'), (('buying', 'likelihood'), 'acl'), (('future', 'products'), 'amod'), (('products', 'buying'), 'obj'), (('.', 'able'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 It is important to note that machine learning  solutions need not be 100 percent accurate to realize business value and ROI. 

Tokens are: 
>> ['It', 'is', 'important', 'to', 'note', 'that', 'machine', 'learning', 'solutions', 'need', 'not', 'be', '100', 'percent', 'accurate', 'to', 'realize', 'business', 'value', 'and', 'ROI', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('important', 'ADJ'), ('to', 'PART'), ('note', 'VERB'), ('that', 'SCONJ'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('solutions', 'NOUN'), ('need', 'AUX'), ('not', 'PART'), ('be', 'AUX'), ('100', 'NUM'), ('percent', 'NOUN'), ('accurate', 'ADJ'), ('to', 'PART'), ('realize', 'VERB'), ('business', 'NOUN'), ('value', 'NOUN'), ('and', 'CCONJ'), ('ROI', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('important', 'JJ'), ('to', 'TO'), ('note', 'VB'), ('that', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('solutions', 'NNS'), ('need', 'VBP'), ('not', 'RB'), ('be', 'VB'), ('100', 'CD'), ('percent', 'NN'), ('accurate', 'JJ'), ('to', 'TO'), ('realize', 'VB'), ('business', 'NN'), ('value', 'NN'), ('and', 'CC'), ('ROI', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('important', 'important'), ('to', 'to'), ('note', 'note'), ('that', 'that'), ('machine', 'machine'), ('learning', 'learning'), ('solutions', 'solution'), ('need', 'need'), ('not', 'not'), ('be', 'be'), ('100', '100'), ('percent', 'percent'), ('accurate', 'accurate'), ('to', 'to'), ('realize', 'realize'), ('business', 'business'), ('value', 'value'), ('and', 'and'), ('ROI', 'roi'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'important'), 'expl'), (('is', 'important'), 'cop'), (('important', 'root'), 'root'), (('to', 'note'), 'mark'), (('note', 'important'), 'csubj'), (('that', 'accurate'), 'mark'), (('machine', 'solutions'), 'compound'), (('learning', 'solutions'), 'compound'), (('solutions', 'accurate'), 'nsubj'), (('need', 'accurate'), 'aux'), (('not', 'accurate'), 'advmod'), (('be', 'accurate'), 'cop'), (('100', 'percent'), 'nummod'), (('percent', 'accurate'), 'obl:npmod'), (('accurate', 'note'), 'ccomp'), (('to', 'realize'), 'mark'), (('realize', 'accurate'), 'advcl'), (('business', 'value'), 'compound'), (('value', 'realize'), 'obj'), (('and', 'ROI'), 'cc'), (('ROI', 'value'), 'conj'), (('.', 'important'), 'punct')]

 Named Entites are: 
>> [('100 percent', 'PERCENT')]

------------------- Sentence 6 -------------------

 The goal should be to conduct data-driven decision making at scale to reduce  operational costs and optimize resources and targeting efforts. 

Tokens are: 
>> ['The', 'goal', 'should', 'be', 'to', 'conduct', 'data-driven', 'decision', 'making', 'at', 'scale', 'to', 'reduce', 'operational', 'costs', 'and', 'optimize', 'resources', 'and', 'targeting', 'efforts', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('goal', 'NOUN'), ('should', 'AUX'), ('be', 'VERB'), ('to', 'PART'), ('conduct', 'VERB'), ('data-driven', 'ADJ'), ('decision', 'NOUN'), ('making', 'VERB'), ('at', 'ADP'), ('scale', 'NOUN'), ('to', 'PART'), ('reduce', 'VERB'), ('operational', 'ADJ'), ('costs', 'NOUN'), ('and', 'CCONJ'), ('optimize', 'VERB'), ('resources', 'NOUN'), ('and', 'CCONJ'), ('targeting', 'VERB'), ('efforts', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('goal', 'NN'), ('should', 'MD'), ('be', 'VB'), ('to', 'TO'), ('conduct', 'VB'), ('data-driven', 'JJ'), ('decision', 'NN'), ('making', 'VBG'), ('at', 'IN'), ('scale', 'NN'), ('to', 'TO'), ('reduce', 'VB'), ('operational', 'JJ'), ('costs', 'NNS'), ('and', 'CC'), ('optimize', 'VB'), ('resources', 'NNS'), ('and', 'CC'), ('targeting', 'VBG'), ('efforts', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('goal', 'goal'), ('should', 'should'), ('be', 'be'), ('to', 'to'), ('conduct', 'conduct'), ('data-driven', 'data-driven'), ('decision', 'decision'), ('making', 'make'), ('at', 'at'), ('scale', 'scale'), ('to', 'to'), ('reduce', 'reduce'), ('operational', 'operational'), ('costs', 'cost'), ('and', 'and'), ('optimize', 'optimize'), ('resources', 'resource'), ('and', 'and'), ('targeting', 'target'), ('efforts', 'effort'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'goal'), 'det'), (('goal', 'be'), 'nsubj'), (('should', 'be'), 'aux'), (('be', 'root'), 'root'), (('to', 'conduct'), 'mark'), (('conduct', 'be'), 'ccomp'), (('data-driven', 'decision'), 'amod'), (('decision', 'conduct'), 'obj'), (('making', 'decision'), 'acl'), (('at', 'scale'), 'case'), (('scale', 'making'), 'obl'), (('to', 'reduce'), 'mark'), (('reduce', 'making'), 'advcl'), (('operational', 'costs'), 'amod'), (('costs', 'reduce'), 'obj'), (('and', 'optimize'), 'cc'), (('optimize', 'reduce'), 'conj'), (('resources', 'optimize'), 'obj'), (('and', 'targeting'), 'cc'), (('targeting', 'optimize'), 'conj'), (('efforts', 'targeting'), 'obj'), (('.', 'be'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 138 =================================

10/14Demystifying data science  


------------------- Sentence 1 -------------------

 10/14 

Tokens are: 
>> ['10/14'] 

 UPOS tags are: 
>> [('10/14', 'NUM')] 

 XPOS tags are: 
>> [('10/14', 'CD')] 

 Lemmas are: 
>> [('10/14', '10/14')] 

 Dependency tags are: 
>> [(('10/14', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Demystifying data science 

Tokens are: 
>> ['Demystifying', 'data', 'science'] 

 UPOS tags are: 
>> [('Demystifying', 'VERB'), ('data', 'NOUN'), ('science', 'NOUN')] 

 XPOS tags are: 
>> [('Demystifying', 'VBG'), ('data', 'NN'), ('science', 'NN')] 

 Lemmas are: 
>> [('Demystifying', 'demystify'), ('data', 'datum'), ('science', 'science')] 

 Dependency tags are: 
>> [(('Demystifying', 'root'), 'root'), (('data', 'science'), 'compound'), (('science', 'Demystifying'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 139 =================================

Utilize data driven insights and intelligence to accelerate new product  development 


------------------- Sentence 1 -------------------

 Utilize data driven insights and intelligence to accelerate new product  development 

Tokens are: 
>> ['Utilize', 'data', 'driven', 'insights', 'and', 'intelligence', 'to', 'accelerate', 'new', 'product', 'development'] 

 UPOS tags are: 
>> [('Utilize', 'VERB'), ('data', 'NOUN'), ('driven', 'VERB'), ('insights', 'NOUN'), ('and', 'CCONJ'), ('intelligence', 'NOUN'), ('to', 'PART'), ('accelerate', 'VERB'), ('new', 'ADJ'), ('product', 'NOUN'), ('development', 'NOUN')] 

 XPOS tags are: 
>> [('Utilize', 'VB'), ('data', 'NNS'), ('driven', 'VBN'), ('insights', 'NNS'), ('and', 'CC'), ('intelligence', 'NN'), ('to', 'TO'), ('accelerate', 'VB'), ('new', 'JJ'), ('product', 'NN'), ('development', 'NN')] 

 Lemmas are: 
>> [('Utilize', 'utilize'), ('data', 'datum'), ('driven', 'drive'), ('insights', 'insight'), ('and', 'and'), ('intelligence', 'intelligence'), ('to', 'to'), ('accelerate', 'accelerate'), ('new', 'new'), ('product', 'product'), ('development', 'development')] 

 Dependency tags are: 
>> [(('Utilize', 'root'), 'root'), (('data', 'Utilize'), 'obj'), (('driven', 'insights'), 'amod'), (('insights', 'Utilize'), 'obj'), (('and', 'intelligence'), 'cc'), (('intelligence', 'insights'), 'conj'), (('to', 'accelerate'), 'mark'), (('accelerate', 'Utilize'), 'advcl'), (('new', 'development'), 'amod'), (('product', 'development'), 'compound'), (('development', 'accelerate'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 140 =================================

Convert massive amounts of big data into meaningful and actionable insights. Voice  assistants, autopilot features and smart home devices have become part of day- to-day life. This new class of AI-driven products are powered by machine learning  and advanced analytics techniques, allowing organizations and teams to better  understand consumer needs and wants, feature requests and usage patterns. 


------------------- Sentence 1 -------------------

 Convert massive amounts of big data into meaningful and actionable insights. 

Tokens are: 
>> ['Convert', 'massive', 'amounts', 'of', 'big', 'data', 'into', 'meaningful', 'and', 'actionable', 'insights', '.'] 

 UPOS tags are: 
>> [('Convert', 'VERB'), ('massive', 'ADJ'), ('amounts', 'NOUN'), ('of', 'ADP'), ('big', 'ADJ'), ('data', 'NOUN'), ('into', 'ADP'), ('meaningful', 'ADJ'), ('and', 'CCONJ'), ('actionable', 'ADJ'), ('insights', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Convert', 'VB'), ('massive', 'JJ'), ('amounts', 'NNS'), ('of', 'IN'), ('big', 'JJ'), ('data', 'NNS'), ('into', 'IN'), ('meaningful', 'JJ'), ('and', 'CC'), ('actionable', 'JJ'), ('insights', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Convert', 'convert'), ('massive', 'massive'), ('amounts', 'amount'), ('of', 'of'), ('big', 'big'), ('data', 'datum'), ('into', 'into'), ('meaningful', 'meaningful'), ('and', 'and'), ('actionable', 'actionable'), ('insights', 'insight'), ('.', '.')] 

 Dependency tags are: 
>> [(('Convert', 'root'), 'root'), (('massive', 'amounts'), 'amod'), (('amounts', 'Convert'), 'obj'), (('of', 'data'), 'case'), (('big', 'data'), 'amod'), (('data', 'amounts'), 'nmod'), (('into', 'insights'), 'case'), (('meaningful', 'insights'), 'amod'), (('and', 'actionable'), 'cc'), (('actionable', 'meaningful'), 'conj'), (('insights', 'Convert'), 'obl'), (('.', 'Convert'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Voice  assistants, autopilot features and smart home devices have become part of day- to-day life. 

Tokens are: 
>> ['Voice', 'assistants', ',', 'autopilot', 'features', 'and', 'smart', 'home', 'devices', 'have', 'become', 'part', 'of', 'day', '-', 'to', '-day', 'life', '.'] 

 UPOS tags are: 
>> [('Voice', 'NOUN'), ('assistants', 'NOUN'), (',', 'PUNCT'), ('autopilot', 'NOUN'), ('features', 'NOUN'), ('and', 'CCONJ'), ('smart', 'ADJ'), ('home', 'NOUN'), ('devices', 'NOUN'), ('have', 'AUX'), ('become', 'VERB'), ('part', 'NOUN'), ('of', 'ADP'), ('day', 'NOUN'), ('-', 'PUNCT'), ('to', 'ADP'), ('-day', 'NOUN'), ('life', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Voice', 'NN'), ('assistants', 'NNS'), (',', ','), ('autopilot', 'NN'), ('features', 'NNS'), ('and', 'CC'), ('smart', 'JJ'), ('home', 'NN'), ('devices', 'NNS'), ('have', 'VBP'), ('become', 'VBN'), ('part', 'NN'), ('of', 'IN'), ('day', 'NN'), ('-', 'HYPH'), ('to', 'IN'), ('-day', 'NN'), ('life', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Voice', 'Voice'), ('assistants', 'assistant'), (',', ','), ('autopilot', 'autopilot'), ('features', 'feature'), ('and', 'and'), ('smart', 'smart'), ('home', 'home'), ('devices', 'device'), ('have', 'have'), ('become', 'become'), ('part', 'part'), ('of', 'of'), ('day', 'day'), ('-', '-'), ('to', 'to'), ('-day', '-day'), ('life', 'life'), ('.', '.')] 

 Dependency tags are: 
>> [(('Voice', 'assistants'), 'compound'), (('assistants', 'become'), 'nsubj'), ((',', 'features'), 'punct'), (('autopilot', 'features'), 'compound'), (('features', 'assistants'), 'conj'), (('and', 'devices'), 'cc'), (('smart', 'devices'), 'amod'), (('home', 'devices'), 'compound'), (('devices', 'assistants'), 'conj'), (('have', 'become'), 'aux'), (('become', 'root'), 'root'), (('part', 'become'), 'xcomp'), (('of', 'life'), 'case'), (('day', 'life'), 'compound'), (('-', 'day'), 'punct'), (('to', '-day'), 'case'), (('-day', 'day'), 'nmod'), (('life', 'part'), 'nmod'), (('.', 'become'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 This new class of AI-driven products are powered by machine learning  and advanced analytics techniques, allowing organizations and teams to better  understand consumer needs and wants, feature requests and usage patterns. 

Tokens are: 
>> ['This', 'new', 'class', 'of', 'AI', '-', 'driven', 'products', 'are', 'powered', 'by', 'machine', 'learning', 'and', 'advanced', 'analytics', 'techniques', ',', 'allowing', 'organizations', 'and', 'teams', 'to', 'better', 'understand', 'consumer', 'needs', 'and', 'wants', ',', 'feature', 'requests', 'and', 'usage', 'patterns', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('new', 'ADJ'), ('class', 'NOUN'), ('of', 'ADP'), ('AI', 'NOUN'), ('-', 'PUNCT'), ('driven', 'VERB'), ('products', 'NOUN'), ('are', 'AUX'), ('powered', 'VERB'), ('by', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('and', 'CCONJ'), ('advanced', 'ADJ'), ('analytics', 'NOUN'), ('techniques', 'NOUN'), (',', 'PUNCT'), ('allowing', 'VERB'), ('organizations', 'NOUN'), ('and', 'CCONJ'), ('teams', 'NOUN'), ('to', 'PART'), ('better', 'ADV'), ('understand', 'VERB'), ('consumer', 'NOUN'), ('needs', 'NOUN'), ('and', 'CCONJ'), ('wants', 'VERB'), (',', 'PUNCT'), ('feature', 'VERB'), ('requests', 'NOUN'), ('and', 'CCONJ'), ('usage', 'NOUN'), ('patterns', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('new', 'JJ'), ('class', 'NN'), ('of', 'IN'), ('AI', 'NN'), ('-', 'HYPH'), ('driven', 'VBN'), ('products', 'NNS'), ('are', 'VBP'), ('powered', 'VBN'), ('by', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('and', 'CC'), ('advanced', 'JJ'), ('analytics', 'NN'), ('techniques', 'NNS'), (',', ','), ('allowing', 'VBG'), ('organizations', 'NNS'), ('and', 'CC'), ('teams', 'NNS'), ('to', 'TO'), ('better', 'RBR'), ('understand', 'VB'), ('consumer', 'NN'), ('needs', 'NNS'), ('and', 'CC'), ('wants', 'VBZ'), (',', ','), ('feature', 'VB'), ('requests', 'NNS'), ('and', 'CC'), ('usage', 'NN'), ('patterns', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('new', 'new'), ('class', 'class'), ('of', 'of'), ('AI', 'ai'), ('-', '-'), ('driven', 'drive'), ('products', 'product'), ('are', 'be'), ('powered', 'power'), ('by', 'by'), ('machine', 'machine'), ('learning', 'learning'), ('and', 'and'), ('advanced', 'advanced'), ('analytics', 'analytic'), ('techniques', 'technique'), (',', ','), ('allowing', 'allow'), ('organizations', 'organization'), ('and', 'and'), ('teams', 'team'), ('to', 'to'), ('better', 'well'), ('understand', 'understand'), ('consumer', 'consumer'), ('needs', 'need'), ('and', 'and'), ('wants', 'want'), (',', ','), ('feature', 'feature'), ('requests', 'request'), ('and', 'and'), ('usage', 'usage'), ('patterns', 'pattern'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'class'), 'det'), (('new', 'class'), 'amod'), (('class', 'powered'), 'nsubj:pass'), (('of', 'products'), 'case'), (('AI', 'driven'), 'compound'), (('-', 'driven'), 'punct'), (('driven', 'products'), 'amod'), (('products', 'class'), 'nmod'), (('are', 'powered'), 'aux:pass'), (('powered', 'root'), 'root'), (('by', 'techniques'), 'case'), (('machine', 'techniques'), 'compound'), (('learning', 'techniques'), 'compound'), (('and', 'advanced'), 'cc'), (('advanced', 'learning'), 'conj'), (('analytics', 'techniques'), 'compound'), (('techniques', 'powered'), 'obl'), ((',', 'allowing'), 'punct'), (('allowing', 'powered'), 'advcl'), (('organizations', 'allowing'), 'obj'), (('and', 'teams'), 'cc'), (('teams', 'organizations'), 'conj'), (('to', 'understand'), 'mark'), (('better', 'understand'), 'advmod'), (('understand', 'allowing'), 'xcomp'), (('consumer', 'needs'), 'compound'), (('needs', 'understand'), 'obj'), (('and', 'wants'), 'cc'), (('wants', 'understand'), 'conj'), ((',', 'feature'), 'punct'), (('feature', 'wants'), 'conj'), (('requests', 'feature'), 'obj'), (('and', 'patterns'), 'cc'), (('usage', 'patterns'), 'compound'), (('patterns', 'requests'), 'conj'), (('.', 'powered'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 141 =================================

Common techniques and methodologies in machine learning Machine learning takes what comes naturally to humans and applies it at scale.   For example, when machine learning reviews a loan application, it can review  5,000 credit transactions, three credit reports, 10 incidents, the five-year income  history of Joe Adams in seconds. This would not be possible by a domain expert.  They simply do not have the capacity to reviews with the speed of a machine and  provide a decision on his loan as soon as it is submitted. Even if the expert is highly  experienced and efficient, it takes considerable time to review application details  and there is still room for human error. Machine learning uses past experience and  trends in historical data related to customers in both good standing and those that  defaulted on loans to make a decision. With the combination of machine learning  and good quality data, organizations can quickly make unbiased, data-driven  decisions at scale in seconds. 


------------------- Sentence 1 -------------------

 Common techniques and methodologies in machine learning Machine learning takes what comes naturally to humans and applies it at scale. 

Tokens are: 
>> ['Common', 'techniques', 'and', 'methodologies', 'in', 'machine', 'learning', 'Machine', 'learning', 'takes', 'what', 'comes', 'naturally', 'to', 'humans', 'and', 'applies', 'it', 'at', 'scale', '.'] 

 UPOS tags are: 
>> [('Common', 'ADJ'), ('techniques', 'NOUN'), ('and', 'CCONJ'), ('methodologies', 'NOUN'), ('in', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('Machine', 'NOUN'), ('learning', 'NOUN'), ('takes', 'VERB'), ('what', 'PRON'), ('comes', 'VERB'), ('naturally', 'ADV'), ('to', 'ADP'), ('humans', 'NOUN'), ('and', 'CCONJ'), ('applies', 'VERB'), ('it', 'PRON'), ('at', 'ADP'), ('scale', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Common', 'JJ'), ('techniques', 'NNS'), ('and', 'CC'), ('methodologies', 'NNS'), ('in', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('Machine', 'NN'), ('learning', 'NN'), ('takes', 'VBZ'), ('what', 'WP'), ('comes', 'VBZ'), ('naturally', 'RB'), ('to', 'IN'), ('humans', 'NNS'), ('and', 'CC'), ('applies', 'VBZ'), ('it', 'PRP'), ('at', 'IN'), ('scale', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Common', 'common'), ('techniques', 'technique'), ('and', 'and'), ('methodologies', 'methodology'), ('in', 'in'), ('machine', 'machine'), ('learning', 'learning'), ('Machine', 'Machine'), ('learning', 'learning'), ('takes', 'take'), ('what', 'what'), ('comes', 'come'), ('naturally', 'naturally'), ('to', 'to'), ('humans', 'human'), ('and', 'and'), ('applies', 'apply'), ('it', 'it'), ('at', 'at'), ('scale', 'scale'), ('.', '.')] 

 Dependency tags are: 
>> [(('Common', 'techniques'), 'amod'), (('techniques', 'takes'), 'nsubj'), (('and', 'methodologies'), 'cc'), (('methodologies', 'techniques'), 'conj'), (('in', 'learning'), 'case'), (('machine', 'learning'), 'compound'), (('learning', 'Machine'), 'compound'), (('Machine', 'learning'), 'compound'), (('learning', 'techniques'), 'nmod'), (('takes', 'root'), 'root'), (('what', 'takes'), 'obj'), (('comes', 'what'), 'acl:relcl'), (('naturally', 'comes'), 'advmod'), (('to', 'humans'), 'case'), (('humans', 'comes'), 'obl'), (('and', 'applies'), 'cc'), (('applies', 'comes'), 'conj'), (('it', 'applies'), 'obj'), (('at', 'scale'), 'case'), (('scale', 'applies'), 'obl'), (('.', 'takes'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 For example, when machine learning reviews a loan application, it can review  5,000 credit transactions, three credit reports, 10 incidents, the five-year income  history of Joe Adams in seconds. 

Tokens are: 
>> ['For', 'example', ',', 'when', 'machine', 'learning', 'reviews', 'a', 'loan', 'application', ',', 'it', 'can', 'review', '5,000', 'credit', 'transactions', ',', 'three', 'credit', 'reports', ',', '10', 'incidents', ',', 'the', 'five', '-', 'year', 'income', 'history', 'of', 'Joe', 'Adams', 'in', 'seconds', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('when', 'SCONJ'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('reviews', 'VERB'), ('a', 'DET'), ('loan', 'NOUN'), ('application', 'NOUN'), (',', 'PUNCT'), ('it', 'PRON'), ('can', 'AUX'), ('review', 'VERB'), ('5,000', 'NUM'), ('credit', 'NOUN'), ('transactions', 'NOUN'), (',', 'PUNCT'), ('three', 'NUM'), ('credit', 'NOUN'), ('reports', 'NOUN'), (',', 'PUNCT'), ('10', 'NUM'), ('incidents', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('five', 'NUM'), ('-', 'PUNCT'), ('year', 'NOUN'), ('income', 'NOUN'), ('history', 'NOUN'), ('of', 'ADP'), ('Joe', 'PROPN'), ('Adams', 'PROPN'), ('in', 'ADP'), ('seconds', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('example', 'NN'), (',', ','), ('when', 'WRB'), ('machine', 'NN'), ('learning', 'NN'), ('reviews', 'VBZ'), ('a', 'DT'), ('loan', 'NN'), ('application', 'NN'), (',', ','), ('it', 'PRP'), ('can', 'MD'), ('review', 'VB'), ('5,000', 'CD'), ('credit', 'NN'), ('transactions', 'NNS'), (',', ','), ('three', 'CD'), ('credit', 'NN'), ('reports', 'NNS'), (',', ','), ('10', 'CD'), ('incidents', 'NNS'), (',', ','), ('the', 'DT'), ('five', 'CD'), ('-', 'HYPH'), ('year', 'NN'), ('income', 'NN'), ('history', 'NN'), ('of', 'IN'), ('Joe', 'NNP'), ('Adams', 'NNP'), ('in', 'IN'), ('seconds', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('example', 'example'), (',', ','), ('when', 'when'), ('machine', 'machine'), ('learning', 'learning'), ('reviews', 'review'), ('a', 'a'), ('loan', 'loan'), ('application', 'application'), (',', ','), ('it', 'it'), ('can', 'can'), ('review', 'review'), ('5,000', '5000'), ('credit', 'credit'), ('transactions', 'transaction'), (',', ','), ('three', 'three'), ('credit', 'credit'), ('reports', 'report'), (',', ','), ('10', '10'), ('incidents', 'incident'), (',', ','), ('the', 'the'), ('five', 'five'), ('-', '-'), ('year', 'year'), ('income', 'income'), ('history', 'history'), ('of', 'of'), ('Joe', 'Joe'), ('Adams', 'Adams'), ('in', 'in'), ('seconds', 'second'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'example'), 'case'), (('example', 'review'), 'obl'), ((',', 'review'), 'punct'), (('when', 'reviews'), 'mark'), (('machine', 'learning'), 'compound'), (('learning', 'reviews'), 'nsubj'), (('reviews', 'review'), 'advcl'), (('a', 'application'), 'det'), (('loan', 'application'), 'compound'), (('application', 'reviews'), 'obj'), ((',', 'review'), 'punct'), (('it', 'review'), 'nsubj'), (('can', 'review'), 'aux'), (('review', 'root'), 'root'), (('5,000', 'transactions'), 'nummod'), (('credit', 'transactions'), 'compound'), (('transactions', 'review'), 'obj'), ((',', 'reports'), 'punct'), (('three', 'reports'), 'nummod'), (('credit', 'reports'), 'compound'), (('reports', 'transactions'), 'conj'), ((',', 'incidents'), 'punct'), (('10', 'incidents'), 'nummod'), (('incidents', 'transactions'), 'conj'), ((',', 'history'), 'punct'), (('the', 'history'), 'det'), (('five', 'year'), 'nummod'), (('-', 'year'), 'punct'), (('year', 'history'), 'compound'), (('income', 'history'), 'compound'), (('history', 'transactions'), 'conj'), (('of', 'Joe'), 'case'), (('Joe', 'history'), 'nmod'), (('Adams', 'Joe'), 'flat'), (('in', 'seconds'), 'case'), (('seconds', 'history'), 'nmod'), (('.', 'review'), 'punct')]

 Named Entites are: 
>> [('5,000', 'CARDINAL'), ('three', 'CARDINAL'), ('10', 'CARDINAL'), ('five-year', 'DATE'), ('Joe Adams', 'PERSON'), ('seconds', 'TIME')]

------------------- Sentence 3 -------------------

 This would not be possible by a domain expert. 

Tokens are: 
>> ['This', 'would', 'not', 'be', 'possible', 'by', 'a', 'domain', 'expert', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('would', 'AUX'), ('not', 'PART'), ('be', 'AUX'), ('possible', 'ADJ'), ('by', 'ADP'), ('a', 'DET'), ('domain', 'NOUN'), ('expert', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('would', 'MD'), ('not', 'RB'), ('be', 'VB'), ('possible', 'JJ'), ('by', 'IN'), ('a', 'DT'), ('domain', 'NN'), ('expert', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('would', 'would'), ('not', 'not'), ('be', 'be'), ('possible', 'possible'), ('by', 'by'), ('a', 'a'), ('domain', 'domain'), ('expert', 'expert'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'possible'), 'nsubj'), (('would', 'possible'), 'aux'), (('not', 'possible'), 'advmod'), (('be', 'possible'), 'cop'), (('possible', 'root'), 'root'), (('by', 'expert'), 'case'), (('a', 'expert'), 'det'), (('domain', 'expert'), 'compound'), (('expert', 'possible'), 'obl'), (('.', 'possible'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 They simply do not have the capacity to reviews with the speed of a machine and  provide a decision on his loan as soon as it is submitted. 

Tokens are: 
>> ['They', 'simply', 'do', 'not', 'have', 'the', 'capacity', 'to', 'reviews', 'with', 'the', 'speed', 'of', 'a', 'machine', 'and', 'provide', 'a', 'decision', 'on', 'his', 'loan', 'as', 'soon', 'as', 'it', 'is', 'submitted', '.'] 

 UPOS tags are: 
>> [('They', 'PRON'), ('simply', 'ADV'), ('do', 'AUX'), ('not', 'PART'), ('have', 'VERB'), ('the', 'DET'), ('capacity', 'NOUN'), ('to', 'ADP'), ('reviews', 'NOUN'), ('with', 'ADP'), ('the', 'DET'), ('speed', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('machine', 'NOUN'), ('and', 'CCONJ'), ('provide', 'VERB'), ('a', 'DET'), ('decision', 'NOUN'), ('on', 'ADP'), ('his', 'PRON'), ('loan', 'NOUN'), ('as', 'ADV'), ('soon', 'ADV'), ('as', 'SCONJ'), ('it', 'PRON'), ('is', 'AUX'), ('submitted', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('They', 'PRP'), ('simply', 'RB'), ('do', 'VBP'), ('not', 'RB'), ('have', 'VB'), ('the', 'DT'), ('capacity', 'NN'), ('to', 'IN'), ('reviews', 'NNS'), ('with', 'IN'), ('the', 'DT'), ('speed', 'NN'), ('of', 'IN'), ('a', 'DT'), ('machine', 'NN'), ('and', 'CC'), ('provide', 'VB'), ('a', 'DT'), ('decision', 'NN'), ('on', 'IN'), ('his', 'PRP$'), ('loan', 'NN'), ('as', 'RB'), ('soon', 'RB'), ('as', 'IN'), ('it', 'PRP'), ('is', 'VBZ'), ('submitted', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('They', 'they'), ('simply', 'simply'), ('do', 'do'), ('not', 'not'), ('have', 'have'), ('the', 'the'), ('capacity', 'capacity'), ('to', 'to'), ('reviews', 'review'), ('with', 'with'), ('the', 'the'), ('speed', 'speed'), ('of', 'of'), ('a', 'a'), ('machine', 'machine'), ('and', 'and'), ('provide', 'provide'), ('a', 'a'), ('decision', 'decision'), ('on', 'on'), ('his', 'he'), ('loan', 'loan'), ('as', 'as'), ('soon', 'soon'), ('as', 'as'), ('it', 'it'), ('is', 'be'), ('submitted', 'submit'), ('.', '.')] 

 Dependency tags are: 
>> [(('They', 'have'), 'nsubj'), (('simply', 'have'), 'advmod'), (('do', 'have'), 'aux'), (('not', 'have'), 'advmod'), (('have', 'root'), 'root'), (('the', 'capacity'), 'det'), (('capacity', 'have'), 'obj'), (('to', 'reviews'), 'case'), (('reviews', 'capacity'), 'nmod'), (('with', 'speed'), 'case'), (('the', 'speed'), 'det'), (('speed', 'reviews'), 'nmod'), (('of', 'machine'), 'case'), (('a', 'machine'), 'det'), (('machine', 'speed'), 'nmod'), (('and', 'provide'), 'cc'), (('provide', 'have'), 'conj'), (('a', 'decision'), 'det'), (('decision', 'provide'), 'obj'), (('on', 'loan'), 'case'), (('his', 'loan'), 'nmod:poss'), (('loan', 'decision'), 'nmod'), (('as', 'soon'), 'advmod'), (('soon', 'provide'), 'advmod'), (('as', 'submitted'), 'mark'), (('it', 'submitted'), 'nsubj:pass'), (('is', 'submitted'), 'aux:pass'), (('submitted', 'soon'), 'advcl'), (('.', 'have'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 Even if the expert is highly  experienced and efficient, it takes considerable time to review application details  and there is still room for human error. 

Tokens are: 
>> ['Even', 'if', 'the', 'expert', 'is', 'highly', 'experienced', 'and', 'efficient', ',', 'it', 'takes', 'considerable', 'time', 'to', 'review', 'application', 'details', 'and', 'there', 'is', 'still', 'room', 'for', 'human', 'error', '.'] 

 UPOS tags are: 
>> [('Even', 'ADV'), ('if', 'SCONJ'), ('the', 'DET'), ('expert', 'NOUN'), ('is', 'AUX'), ('highly', 'ADV'), ('experienced', 'VERB'), ('and', 'CCONJ'), ('efficient', 'ADJ'), (',', 'PUNCT'), ('it', 'PRON'), ('takes', 'VERB'), ('considerable', 'ADJ'), ('time', 'NOUN'), ('to', 'PART'), ('review', 'VERB'), ('application', 'NOUN'), ('details', 'NOUN'), ('and', 'CCONJ'), ('there', 'PRON'), ('is', 'VERB'), ('still', 'ADV'), ('room', 'NOUN'), ('for', 'ADP'), ('human', 'ADJ'), ('error', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Even', 'RB'), ('if', 'IN'), ('the', 'DT'), ('expert', 'NN'), ('is', 'VBZ'), ('highly', 'RB'), ('experienced', 'VBN'), ('and', 'CC'), ('efficient', 'JJ'), (',', ','), ('it', 'PRP'), ('takes', 'VBZ'), ('considerable', 'JJ'), ('time', 'NN'), ('to', 'TO'), ('review', 'VB'), ('application', 'NN'), ('details', 'NNS'), ('and', 'CC'), ('there', 'EX'), ('is', 'VBZ'), ('still', 'RB'), ('room', 'NN'), ('for', 'IN'), ('human', 'JJ'), ('error', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Even', 'even'), ('if', 'if'), ('the', 'the'), ('expert', 'expert'), ('is', 'be'), ('highly', 'highly'), ('experienced', 'experience'), ('and', 'and'), ('efficient', 'efficient'), (',', ','), ('it', 'it'), ('takes', 'take'), ('considerable', 'considerable'), ('time', 'time'), ('to', 'to'), ('review', 'review'), ('application', 'application'), ('details', 'detail'), ('and', 'and'), ('there', 'there'), ('is', 'be'), ('still', 'still'), ('room', 'room'), ('for', 'for'), ('human', 'human'), ('error', 'error'), ('.', '.')] 

 Dependency tags are: 
>> [(('Even', 'experienced'), 'advmod'), (('if', 'experienced'), 'mark'), (('the', 'expert'), 'det'), (('expert', 'experienced'), 'nsubj:pass'), (('is', 'experienced'), 'aux:pass'), (('highly', 'experienced'), 'advmod'), (('experienced', 'takes'), 'advcl'), (('and', 'efficient'), 'cc'), (('efficient', 'experienced'), 'conj'), ((',', 'takes'), 'punct'), (('it', 'takes'), 'nsubj'), (('takes', 'root'), 'root'), (('considerable', 'time'), 'amod'), (('time', 'takes'), 'obj'), (('to', 'review'), 'mark'), (('review', 'time'), 'acl'), (('application', 'details'), 'compound'), (('details', 'review'), 'obj'), (('and', 'is'), 'cc'), (('there', 'is'), 'expl'), (('is', 'takes'), 'conj'), (('still', 'is'), 'advmod'), (('room', 'is'), 'nsubj'), (('for', 'error'), 'case'), (('human', 'error'), 'amod'), (('error', 'room'), 'nmod'), (('.', 'takes'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 Machine learning uses past experience and  trends in historical data related to customers in both good standing and those that  defaulted on loans to make a decision. 

Tokens are: 
>> ['Machine', 'learning', 'uses', 'past', 'experience', 'and', 'trends', 'in', 'historical', 'data', 'related', 'to', 'customers', 'in', 'both', 'good', 'standing', 'and', 'those', 'that', 'defaulted', 'on', 'loans', 'to', 'make', 'a', 'decision', '.'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('learning', 'NOUN'), ('uses', 'VERB'), ('past', 'ADJ'), ('experience', 'NOUN'), ('and', 'CCONJ'), ('trends', 'NOUN'), ('in', 'ADP'), ('historical', 'ADJ'), ('data', 'NOUN'), ('related', 'ADJ'), ('to', 'ADP'), ('customers', 'NOUN'), ('in', 'ADP'), ('both', 'CCONJ'), ('good', 'ADJ'), ('standing', 'NOUN'), ('and', 'CCONJ'), ('those', 'PRON'), ('that', 'PRON'), ('defaulted', 'VERB'), ('on', 'ADP'), ('loans', 'NOUN'), ('to', 'PART'), ('make', 'VERB'), ('a', 'DET'), ('decision', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('learning', 'NN'), ('uses', 'VBZ'), ('past', 'JJ'), ('experience', 'NN'), ('and', 'CC'), ('trends', 'NNS'), ('in', 'IN'), ('historical', 'JJ'), ('data', 'NNS'), ('related', 'JJ'), ('to', 'IN'), ('customers', 'NNS'), ('in', 'IN'), ('both', 'CC'), ('good', 'JJ'), ('standing', 'NN'), ('and', 'CC'), ('those', 'DT'), ('that', 'WDT'), ('defaulted', 'VBD'), ('on', 'IN'), ('loans', 'NNS'), ('to', 'TO'), ('make', 'VB'), ('a', 'DT'), ('decision', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('learning', 'learning'), ('uses', 'use'), ('past', 'past'), ('experience', 'experience'), ('and', 'and'), ('trends', 'trend'), ('in', 'in'), ('historical', 'historical'), ('data', 'datum'), ('related', 'related'), ('to', 'to'), ('customers', 'customer'), ('in', 'in'), ('both', 'both'), ('good', 'good'), ('standing', 'standing'), ('and', 'and'), ('those', 'that'), ('that', 'that'), ('defaulted', 'default'), ('on', 'on'), ('loans', 'loan'), ('to', 'to'), ('make', 'make'), ('a', 'a'), ('decision', 'decision'), ('.', '.')] 

 Dependency tags are: 
>> [(('Machine', 'learning'), 'compound'), (('learning', 'uses'), 'nsubj'), (('uses', 'root'), 'root'), (('past', 'experience'), 'amod'), (('experience', 'uses'), 'obj'), (('and', 'trends'), 'cc'), (('trends', 'experience'), 'conj'), (('in', 'data'), 'case'), (('historical', 'data'), 'amod'), (('data', 'experience'), 'nmod'), (('related', 'data'), 'amod'), (('to', 'customers'), 'case'), (('customers', 'related'), 'obl'), (('in', 'standing'), 'case'), (('both', 'standing'), 'cc:preconj'), (('good', 'standing'), 'amod'), (('standing', 'related'), 'obl'), (('and', 'those'), 'cc'), (('those', 'standing'), 'conj'), (('that', 'defaulted'), 'nsubj'), (('defaulted', 'those'), 'acl:relcl'), (('on', 'loans'), 'case'), (('loans', 'defaulted'), 'obl'), (('to', 'make'), 'mark'), (('make', 'defaulted'), 'advcl'), (('a', 'decision'), 'det'), (('decision', 'make'), 'obj'), (('.', 'uses'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 7 -------------------

 With the combination of machine learning  and good quality data, organizations can quickly make unbiased, data-driven  decisions at scale in seconds. 

Tokens are: 
>> ['With', 'the', 'combination', 'of', 'machine', 'learning', 'and', 'good', 'quality', 'data', ',', 'organizations', 'can', 'quickly', 'make', 'unbiased', ',', 'data-driven', 'decisions', 'at', 'scale', 'in', 'seconds', '.'] 

 UPOS tags are: 
>> [('With', 'ADP'), ('the', 'DET'), ('combination', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('and', 'CCONJ'), ('good', 'ADJ'), ('quality', 'ADJ'), ('data', 'NOUN'), (',', 'PUNCT'), ('organizations', 'NOUN'), ('can', 'AUX'), ('quickly', 'ADV'), ('make', 'VERB'), ('unbiased', 'ADJ'), (',', 'PUNCT'), ('data-driven', 'ADJ'), ('decisions', 'NOUN'), ('at', 'ADP'), ('scale', 'NOUN'), ('in', 'ADP'), ('seconds', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('With', 'IN'), ('the', 'DT'), ('combination', 'NN'), ('of', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('and', 'CC'), ('good', 'JJ'), ('quality', 'JJ'), ('data', 'NNS'), (',', ','), ('organizations', 'NNS'), ('can', 'MD'), ('quickly', 'RB'), ('make', 'VB'), ('unbiased', 'JJ'), (',', ','), ('data-driven', 'JJ'), ('decisions', 'NNS'), ('at', 'IN'), ('scale', 'NN'), ('in', 'IN'), ('seconds', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('With', 'with'), ('the', 'the'), ('combination', 'combination'), ('of', 'of'), ('machine', 'machine'), ('learning', 'learning'), ('and', 'and'), ('good', 'good'), ('quality', 'quality'), ('data', 'datum'), (',', ','), ('organizations', 'organization'), ('can', 'can'), ('quickly', 'quickly'), ('make', 'make'), ('unbiased', 'unbiased'), (',', ','), ('data-driven', 'data-driven'), ('decisions', 'decision'), ('at', 'at'), ('scale', 'scale'), ('in', 'in'), ('seconds', 'second'), ('.', '.')] 

 Dependency tags are: 
>> [(('With', 'combination'), 'case'), (('the', 'combination'), 'det'), (('combination', 'make'), 'obl'), (('of', 'learning'), 'case'), (('machine', 'learning'), 'compound'), (('learning', 'combination'), 'nmod'), (('and', 'data'), 'cc'), (('good', 'data'), 'amod'), (('quality', 'data'), 'amod'), (('data', 'learning'), 'conj'), ((',', 'make'), 'punct'), (('organizations', 'make'), 'nsubj'), (('can', 'make'), 'aux'), (('quickly', 'make'), 'advmod'), (('make', 'root'), 'root'), (('unbiased', 'decisions'), 'amod'), ((',', 'decisions'), 'punct'), (('data-driven', 'decisions'), 'amod'), (('decisions', 'make'), 'obj'), (('at', 'scale'), 'case'), (('scale', 'decisions'), 'nmod'), (('in', 'seconds'), 'case'), (('seconds', 'make'), 'obl'), (('.', 'make'), 'punct')]

 Named Entites are: 
>> [('seconds', 'TIME')]

================================ Paragraph 142 =================================

Machine learning offers various approaches to solve business problems. The first  approach is based on whether there is data related to the outcome of a process.  Did the machine stop working? Did the customer leave? Did the employee quit?  It is important to understand and model how behavior and fluctuations in data  lead to a certain business outcome. This type of machine learning is known as  supervised learning.  


------------------- Sentence 1 -------------------

 Machine learning offers various approaches to solve business problems. 

Tokens are: 
>> ['Machine', 'learning', 'offers', 'various', 'approaches', 'to', 'solve', 'business', 'problems', '.'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('learning', 'NOUN'), ('offers', 'VERB'), ('various', 'ADJ'), ('approaches', 'NOUN'), ('to', 'PART'), ('solve', 'VERB'), ('business', 'NOUN'), ('problems', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('learning', 'NN'), ('offers', 'VBZ'), ('various', 'JJ'), ('approaches', 'NNS'), ('to', 'TO'), ('solve', 'VB'), ('business', 'NN'), ('problems', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('learning', 'learning'), ('offers', 'offer'), ('various', 'various'), ('approaches', 'approach'), ('to', 'to'), ('solve', 'solve'), ('business', 'business'), ('problems', 'problem'), ('.', '.')] 

 Dependency tags are: 
>> [(('Machine', 'learning'), 'compound'), (('learning', 'offers'), 'nsubj'), (('offers', 'root'), 'root'), (('various', 'approaches'), 'amod'), (('approaches', 'offers'), 'obj'), (('to', 'solve'), 'mark'), (('solve', 'approaches'), 'acl'), (('business', 'problems'), 'compound'), (('problems', 'solve'), 'obj'), (('.', 'offers'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 The first  approach is based on whether there is data related to the outcome of a process. 

Tokens are: 
>> ['The', 'first', 'approach', 'is', 'based', 'on', 'whether', 'there', 'is', 'data', 'related', 'to', 'the', 'outcome', 'of', 'a', 'process', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('first', 'ADJ'), ('approach', 'NOUN'), ('is', 'AUX'), ('based', 'VERB'), ('on', 'SCONJ'), ('whether', 'SCONJ'), ('there', 'PRON'), ('is', 'VERB'), ('data', 'NOUN'), ('related', 'ADJ'), ('to', 'ADP'), ('the', 'DET'), ('outcome', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('process', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('first', 'JJ'), ('approach', 'NN'), ('is', 'VBZ'), ('based', 'VBN'), ('on', 'IN'), ('whether', 'IN'), ('there', 'EX'), ('is', 'VBZ'), ('data', 'NNS'), ('related', 'JJ'), ('to', 'IN'), ('the', 'DT'), ('outcome', 'NN'), ('of', 'IN'), ('a', 'DT'), ('process', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('first', 'first'), ('approach', 'approach'), ('is', 'be'), ('based', 'base'), ('on', 'on'), ('whether', 'whether'), ('there', 'there'), ('is', 'be'), ('data', 'datum'), ('related', 'related'), ('to', 'to'), ('the', 'the'), ('outcome', 'outcome'), ('of', 'of'), ('a', 'a'), ('process', 'process'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'approach'), 'det'), (('first', 'approach'), 'amod'), (('approach', 'based'), 'nsubj:pass'), (('is', 'based'), 'aux:pass'), (('based', 'root'), 'root'), (('on', 'is'), 'mark'), (('whether', 'is'), 'mark'), (('there', 'is'), 'expl'), (('is', 'based'), 'advcl'), (('data', 'is'), 'nsubj'), (('related', 'data'), 'amod'), (('to', 'outcome'), 'case'), (('the', 'outcome'), 'det'), (('outcome', 'related'), 'obl'), (('of', 'process'), 'case'), (('a', 'process'), 'det'), (('process', 'outcome'), 'nmod'), (('.', 'based'), 'punct')]

 Named Entites are: 
>> [('first', 'ORDINAL')]

------------------- Sentence 3 -------------------

 Did the machine stop working? 

Tokens are: 
>> ['Did', 'the', 'machine', 'stop', 'working', '?'] 

 UPOS tags are: 
>> [('Did', 'AUX'), ('the', 'DET'), ('machine', 'NOUN'), ('stop', 'VERB'), ('working', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Did', 'VBD'), ('the', 'DT'), ('machine', 'NN'), ('stop', 'VB'), ('working', 'VBG'), ('?', '.')] 

 Lemmas are: 
>> [('Did', 'do'), ('the', 'the'), ('machine', 'machine'), ('stop', 'stop'), ('working', 'work'), ('?', '?')] 

 Dependency tags are: 
>> [(('Did', 'stop'), 'aux'), (('the', 'machine'), 'det'), (('machine', 'stop'), 'nsubj'), (('stop', 'root'), 'root'), (('working', 'stop'), 'xcomp'), (('?', 'stop'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Did the customer leave? 

Tokens are: 
>> ['Did', 'the', 'customer', 'leave', '?'] 

 UPOS tags are: 
>> [('Did', 'AUX'), ('the', 'DET'), ('customer', 'NOUN'), ('leave', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Did', 'VBD'), ('the', 'DT'), ('customer', 'NN'), ('leave', 'VB'), ('?', '.')] 

 Lemmas are: 
>> [('Did', 'do'), ('the', 'the'), ('customer', 'customer'), ('leave', 'leave'), ('?', '?')] 

 Dependency tags are: 
>> [(('Did', 'leave'), 'aux'), (('the', 'customer'), 'det'), (('customer', 'leave'), 'nsubj'), (('leave', 'root'), 'root'), (('?', 'leave'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 Did the employee quit? 

Tokens are: 
>> ['Did', 'the', 'employee', 'quit', '?'] 

 UPOS tags are: 
>> [('Did', 'AUX'), ('the', 'DET'), ('employee', 'NOUN'), ('quit', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Did', 'VBD'), ('the', 'DT'), ('employee', 'NN'), ('quit', 'VB'), ('?', '.')] 

 Lemmas are: 
>> [('Did', 'do'), ('the', 'the'), ('employee', 'employee'), ('quit', 'quit'), ('?', '?')] 

 Dependency tags are: 
>> [(('Did', 'quit'), 'aux'), (('the', 'employee'), 'det'), (('employee', 'quit'), 'nsubj'), (('quit', 'root'), 'root'), (('?', 'quit'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 It is important to understand and model how behavior and fluctuations in data  lead to a certain business outcome. 

Tokens are: 
>> ['It', 'is', 'important', 'to', 'understand', 'and', 'model', 'how', 'behavior', 'and', 'fluctuations', 'in', 'data', 'lead', 'to', 'a', 'certain', 'business', 'outcome', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('important', 'ADJ'), ('to', 'PART'), ('understand', 'VERB'), ('and', 'CCONJ'), ('model', 'VERB'), ('how', 'SCONJ'), ('behavior', 'NOUN'), ('and', 'CCONJ'), ('fluctuations', 'NOUN'), ('in', 'ADP'), ('data', 'NOUN'), ('lead', 'VERB'), ('to', 'ADP'), ('a', 'DET'), ('certain', 'ADJ'), ('business', 'NOUN'), ('outcome', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('important', 'JJ'), ('to', 'TO'), ('understand', 'VB'), ('and', 'CC'), ('model', 'VB'), ('how', 'WRB'), ('behavior', 'NN'), ('and', 'CC'), ('fluctuations', 'NNS'), ('in', 'IN'), ('data', 'NNS'), ('lead', 'VBP'), ('to', 'IN'), ('a', 'DT'), ('certain', 'JJ'), ('business', 'NN'), ('outcome', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('important', 'important'), ('to', 'to'), ('understand', 'understand'), ('and', 'and'), ('model', 'model'), ('how', 'how'), ('behavior', 'behavior'), ('and', 'and'), ('fluctuations', 'fluctuation'), ('in', 'in'), ('data', 'datum'), ('lead', 'lead'), ('to', 'to'), ('a', 'a'), ('certain', 'certain'), ('business', 'business'), ('outcome', 'outcome'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'important'), 'expl'), (('is', 'important'), 'cop'), (('important', 'root'), 'root'), (('to', 'understand'), 'mark'), (('understand', 'important'), 'csubj'), (('and', 'model'), 'cc'), (('model', 'understand'), 'conj'), (('how', 'lead'), 'mark'), (('behavior', 'lead'), 'nsubj'), (('and', 'fluctuations'), 'cc'), (('fluctuations', 'behavior'), 'conj'), (('in', 'data'), 'case'), (('data', 'behavior'), 'nmod'), (('lead', 'model'), 'ccomp'), (('to', 'outcome'), 'case'), (('a', 'outcome'), 'det'), (('certain', 'outcome'), 'amod'), (('business', 'outcome'), 'compound'), (('outcome', 'lead'), 'obl'), (('.', 'important'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 7 -------------------

 This type of machine learning is known as  supervised learning. 

Tokens are: 
>> ['This', 'type', 'of', 'machine', 'learning', 'is', 'known', 'as', 'supervised', 'learning', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('type', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('is', 'AUX'), ('known', 'VERB'), ('as', 'ADP'), ('supervised', 'VERB'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('type', 'NN'), ('of', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('is', 'VBZ'), ('known', 'VBN'), ('as', 'IN'), ('supervised', 'VBN'), ('learning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('type', 'type'), ('of', 'of'), ('machine', 'machine'), ('learning', 'learning'), ('is', 'be'), ('known', 'know'), ('as', 'as'), ('supervised', 'supervise'), ('learning', 'learning'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'type'), 'det'), (('type', 'known'), 'nsubj:pass'), (('of', 'learning'), 'case'), (('machine', 'learning'), 'compound'), (('learning', 'type'), 'nmod'), (('is', 'known'), 'aux:pass'), (('known', 'root'), 'root'), (('as', 'learning'), 'case'), (('supervised', 'learning'), 'amod'), (('learning', 'known'), 'obl'), (('.', 'known'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 143 =================================

Machine learning 


------------------- Sentence 1 -------------------

 Machine learning 

Tokens are: 
>> ['Machine', 'learning'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('learning', 'NOUN')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('learning', 'NN')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('learning', 'learning')] 

 Dependency tags are: 
>> [(('Machine', 'learning'), 'compound'), (('learning', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 144 =================================

Unsupervised learning Supervised learning 


------------------- Sentence 1 -------------------

 Unsupervised learning Supervised learning 

Tokens are: 
>> ['Unsupervised', 'learning', 'Supervised', 'learning'] 

 UPOS tags are: 
>> [('Unsupervised', 'VERB'), ('learning', 'NOUN'), ('Supervised', 'VERB'), ('learning', 'NOUN')] 

 XPOS tags are: 
>> [('Unsupervised', 'VBN'), ('learning', 'NN'), ('Supervised', 'VBN'), ('learning', 'NN')] 

 Lemmas are: 
>> [('Unsupervised', 'unsupervise'), ('learning', 'learning'), ('Supervised', 'supervise'), ('learning', 'learning')] 

 Dependency tags are: 
>> [(('Unsupervised', 'learning'), 'amod'), (('learning', 'learning'), 'compound'), (('Supervised', 'learning'), 'amod'), (('learning', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 145 =================================

•	Data	does	not	contain	 a	category/response	to	 predict 


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Data	does	not	contain	 a	category/response	to	 predict 

Tokens are: 
>> ['Data', 'does', 'not', 'contain', 'a', 'category', '/', 'response', 'to', 'predict'] 

 UPOS tags are: 
>> [('Data', 'NOUN'), ('does', 'AUX'), ('not', 'PART'), ('contain', 'VERB'), ('a', 'DET'), ('category', 'NOUN'), ('/', 'SYM'), ('response', 'NOUN'), ('to', 'PART'), ('predict', 'VERB')] 

 XPOS tags are: 
>> [('Data', 'NN'), ('does', 'VBZ'), ('not', 'RB'), ('contain', 'VB'), ('a', 'DT'), ('category', 'NN'), ('/', ','), ('response', 'NN'), ('to', 'TO'), ('predict', 'VB')] 

 Lemmas are: 
>> [('Data', 'data'), ('does', 'do'), ('not', 'not'), ('contain', 'contain'), ('a', 'a'), ('category', 'category'), ('/', '/'), ('response', 'response'), ('to', 'to'), ('predict', 'predict')] 

 Dependency tags are: 
>> [(('Data', 'contain'), 'nsubj'), (('does', 'contain'), 'aux'), (('not', 'contain'), 'advmod'), (('contain', 'root'), 'root'), (('a', 'category'), 'det'), (('category', 'contain'), 'obj'), (('/', 'response'), 'cc'), (('response', 'category'), 'conj'), (('to', 'predict'), 'mark'), (('predict', 'contain'), 'advcl')]

 Named Entites are: 
>> []

================================ Paragraph 146 =================================

•	The	goal	here	is	to	learn	 about	the	underlying	 structure	or	distribution	 of	the	data,	and	discover	 inherent	patterns	from	 within	it	in	order	to	draw	 inferences 


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 The	goal	here	is	to	learn	 about	the	underlying	 structure	or	distribution	 of	the	data,	and	discover	 inherent	patterns	from	 within	it	in	order	to	draw	 inferences 

Tokens are: 
>> ['The', 'goal', 'here', 'is', 'to', 'learn', 'about', 'the', 'underlying', 'structure', 'or', 'distribution', 'of', 'the', 'data', ',', 'and', 'discover', 'inherent', 'patterns', 'from', 'within', 'it', 'in', 'order', 'to', 'draw', 'inferences'] 

 UPOS tags are: 
>> [('The', 'DET'), ('goal', 'NOUN'), ('here', 'ADV'), ('is', 'VERB'), ('to', 'PART'), ('learn', 'VERB'), ('about', 'ADP'), ('the', 'DET'), ('underlying', 'ADJ'), ('structure', 'NOUN'), ('or', 'CCONJ'), ('distribution', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('data', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('discover', 'VERB'), ('inherent', 'ADJ'), ('patterns', 'NOUN'), ('from', 'ADP'), ('within', 'ADP'), ('it', 'PRON'), ('in', 'ADP'), ('order', 'NOUN'), ('to', 'PART'), ('draw', 'VERB'), ('inferences', 'NOUN')] 

 XPOS tags are: 
>> [('The', 'DT'), ('goal', 'NN'), ('here', 'RB'), ('is', 'VBZ'), ('to', 'TO'), ('learn', 'VB'), ('about', 'IN'), ('the', 'DT'), ('underlying', 'JJ'), ('structure', 'NN'), ('or', 'CC'), ('distribution', 'NN'), ('of', 'IN'), ('the', 'DT'), ('data', 'NNS'), (',', ','), ('and', 'CC'), ('discover', 'VB'), ('inherent', 'JJ'), ('patterns', 'NNS'), ('from', 'IN'), ('within', 'IN'), ('it', 'PRP'), ('in', 'IN'), ('order', 'NN'), ('to', 'TO'), ('draw', 'VB'), ('inferences', 'NNS')] 

 Lemmas are: 
>> [('The', 'the'), ('goal', 'goal'), ('here', 'here'), ('is', 'be'), ('to', 'to'), ('learn', 'learn'), ('about', 'about'), ('the', 'the'), ('underlying', 'underlying'), ('structure', 'structure'), ('or', 'or'), ('distribution', 'distribution'), ('of', 'of'), ('the', 'the'), ('data', 'datum'), (',', ','), ('and', 'and'), ('discover', 'discover'), ('inherent', 'inherent'), ('patterns', 'pattern'), ('from', 'from'), ('within', 'within'), ('it', 'it'), ('in', 'in'), ('order', 'order'), ('to', 'to'), ('draw', 'draw'), ('inferences', 'inference')] 

 Dependency tags are: 
>> [(('The', 'goal'), 'det'), (('goal', 'is'), 'nsubj'), (('here', 'goal'), 'advmod'), (('is', 'root'), 'root'), (('to', 'learn'), 'mark'), (('learn', 'is'), 'ccomp'), (('about', 'structure'), 'case'), (('the', 'structure'), 'det'), (('underlying', 'structure'), 'amod'), (('structure', 'learn'), 'obl'), (('or', 'distribution'), 'cc'), (('distribution', 'structure'), 'conj'), (('of', 'data'), 'case'), (('the', 'data'), 'det'), (('data', 'structure'), 'nmod'), ((',', 'discover'), 'punct'), (('and', 'discover'), 'cc'), (('discover', 'learn'), 'conj'), (('inherent', 'patterns'), 'amod'), (('patterns', 'discover'), 'obj'), (('from', 'it'), 'case'), (('within', 'it'), 'case'), (('it', 'patterns'), 'nmod'), (('in', 'draw'), 'mark'), (('order', 'in'), 'fixed'), (('to', 'draw'), 'mark'), (('draw', 'discover'), 'advcl'), (('inferences', 'draw'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 147 =================================

•		We	know	the	outcome/ response 


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 We	know	the	outcome/ response 

Tokens are: 
>> ['We', 'know', 'the', 'outcome', '/', 'response'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('know', 'VERB'), ('the', 'DET'), ('outcome', 'NOUN'), ('/', 'SYM'), ('response', 'NOUN')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('know', 'VBP'), ('the', 'DT'), ('outcome', 'NN'), ('/', ','), ('response', 'NN')] 

 Lemmas are: 
>> [('We', 'we'), ('know', 'know'), ('the', 'the'), ('outcome', 'outcome'), ('/', '/'), ('response', 'response')] 

 Dependency tags are: 
>> [(('We', 'know'), 'nsubj'), (('know', 'root'), 'root'), (('the', 'outcome'), 'det'), (('outcome', 'know'), 'obj'), (('/', 'response'), 'cc'), (('response', 'outcome'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 148 =================================

•	Takes	known	set	of	input	 data	and	responses	to	it,	and						 trains	a	model	to	generate	 reasonable	predictions	for						 the	response	to	new	dataMachine 


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Takes	known	set	of	input	 data	and	responses	to	it,	and						 trains	a	model	to	generate	 reasonable	predictions	for						 the	response	to	new	data 

Tokens are: 
>> ['Takes', 'known', 'set', 'of', 'input', 'data', 'and', 'responses', 'to', 'it', ',', 'and', 'trains', 'a', 'model', 'to', 'generate', 'reasonable', 'predictions', 'for', 'the', 'response', 'to', 'new', 'data'] 

 UPOS tags are: 
>> [('Takes', 'VERB'), ('known', 'VERB'), ('set', 'NOUN'), ('of', 'ADP'), ('input', 'NOUN'), ('data', 'NOUN'), ('and', 'CCONJ'), ('responses', 'NOUN'), ('to', 'ADP'), ('it', 'PRON'), (',', 'PUNCT'), ('and', 'CCONJ'), ('trains', 'VERB'), ('a', 'DET'), ('model', 'NOUN'), ('to', 'PART'), ('generate', 'VERB'), ('reasonable', 'ADJ'), ('predictions', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('response', 'NOUN'), ('to', 'ADP'), ('new', 'ADJ'), ('data', 'NOUN')] 

 XPOS tags are: 
>> [('Takes', 'VBZ'), ('known', 'VBN'), ('set', 'NN'), ('of', 'IN'), ('input', 'NN'), ('data', 'NNS'), ('and', 'CC'), ('responses', 'NNS'), ('to', 'IN'), ('it', 'PRP'), (',', ','), ('and', 'CC'), ('trains', 'VBZ'), ('a', 'DT'), ('model', 'NN'), ('to', 'TO'), ('generate', 'VB'), ('reasonable', 'JJ'), ('predictions', 'NNS'), ('for', 'IN'), ('the', 'DT'), ('response', 'NN'), ('to', 'IN'), ('new', 'JJ'), ('data', 'NNS')] 

 Lemmas are: 
>> [('Takes', 'take'), ('known', 'know'), ('set', 'set'), ('of', 'of'), ('input', 'input'), ('data', 'datum'), ('and', 'and'), ('responses', 'response'), ('to', 'to'), ('it', 'it'), (',', ','), ('and', 'and'), ('trains', 'train'), ('a', 'a'), ('model', 'model'), ('to', 'to'), ('generate', 'generate'), ('reasonable', 'reasonable'), ('predictions', 'prediction'), ('for', 'for'), ('the', 'the'), ('response', 'response'), ('to', 'to'), ('new', 'new'), ('data', 'datum')] 

 Dependency tags are: 
>> [(('Takes', 'root'), 'root'), (('known', 'set'), 'amod'), (('set', 'Takes'), 'obj'), (('of', 'data'), 'case'), (('input', 'data'), 'compound'), (('data', 'set'), 'nmod'), (('and', 'responses'), 'cc'), (('responses', 'data'), 'conj'), (('to', 'it'), 'case'), (('it', 'Takes'), 'obl'), ((',', 'trains'), 'punct'), (('and', 'trains'), 'cc'), (('trains', 'Takes'), 'conj'), (('a', 'model'), 'det'), (('model', 'trains'), 'obj'), (('to', 'generate'), 'mark'), (('generate', 'model'), 'acl'), (('reasonable', 'predictions'), 'amod'), (('predictions', 'generate'), 'obj'), (('for', 'response'), 'case'), (('the', 'response'), 'det'), (('response', 'predictions'), 'nmod'), (('to', 'data'), 'case'), (('new', 'data'), 'amod'), (('data', 'response'), 'nmod')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Machine 

Tokens are: 
>> ['Machine'] 

 UPOS tags are: 
>> [('Machine', 'NOUN')] 

 XPOS tags are: 
>> [('Machine', 'NN')] 

 Lemmas are: 
>> [('Machine', 'Machine')] 

 Dependency tags are: 
>> [(('Machine', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 149 =================================

learning 


------------------- Sentence 1 -------------------

 learning 

Tokens are: 
>> ['learning'] 

 UPOS tags are: 
>> [('learning', 'NOUN')] 

 XPOS tags are: 
>> [('learning', 'NN')] 

 Lemmas are: 
>> [('learning', 'learning')] 

 Dependency tags are: 
>> [(('learning', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 150 =================================

Unsupervised learning 


------------------- Sentence 1 -------------------

 Unsupervised learning 

Tokens are: 
>> ['Unsupervised', 'learning'] 

 UPOS tags are: 
>> [('Unsupervised', 'VERB'), ('learning', 'NOUN')] 

 XPOS tags are: 
>> [('Unsupervised', 'VBN'), ('learning', 'NN')] 

 Lemmas are: 
>> [('Unsupervised', 'unsupervise'), ('learning', 'learning')] 

 Dependency tags are: 
>> [(('Unsupervised', 'learning'), 'amod'), (('learning', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 151 =================================

•  Data does not contain a category/response to predict 


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Data does not contain a category/response to predict 

Tokens are: 
>> ['Data', 'does', 'not', 'contain', 'a', 'category', '/', 'response', 'to', 'predict'] 

 UPOS tags are: 
>> [('Data', 'NOUN'), ('does', 'AUX'), ('not', 'PART'), ('contain', 'VERB'), ('a', 'DET'), ('category', 'NOUN'), ('/', 'SYM'), ('response', 'NOUN'), ('to', 'PART'), ('predict', 'VERB')] 

 XPOS tags are: 
>> [('Data', 'NN'), ('does', 'VBZ'), ('not', 'RB'), ('contain', 'VB'), ('a', 'DT'), ('category', 'NN'), ('/', ','), ('response', 'NN'), ('to', 'TO'), ('predict', 'VB')] 

 Lemmas are: 
>> [('Data', 'data'), ('does', 'do'), ('not', 'not'), ('contain', 'contain'), ('a', 'a'), ('category', 'category'), ('/', '/'), ('response', 'response'), ('to', 'to'), ('predict', 'predict')] 

 Dependency tags are: 
>> [(('Data', 'contain'), 'nsubj'), (('does', 'contain'), 'aux'), (('not', 'contain'), 'advmod'), (('contain', 'root'), 'root'), (('a', 'category'), 'det'), (('category', 'contain'), 'obj'), (('/', 'response'), 'cc'), (('response', 'category'), 'conj'), (('to', 'predict'), 'mark'), (('predict', 'contain'), 'advcl')]

 Named Entites are: 
>> []

================================ Paragraph 152 =================================

•  The goal here is to learn about the underlying structure        or distribution of the data, and discover inherent      patterns from within it in order to draw inferences 


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 The goal here is to learn about the underlying structure        or distribution of the data, and discover inherent      patterns from within it in order to draw inferences 

Tokens are: 
>> ['The', 'goal', 'here', 'is', 'to', 'learn', 'about', 'the', 'underlying', 'structure', 'or', 'distribution', 'of', 'the', 'data', ',', 'and', 'discover', 'inherent', 'patterns', 'from', 'within', 'it', 'in', 'order', 'to', 'draw', 'inferences'] 

 UPOS tags are: 
>> [('The', 'DET'), ('goal', 'NOUN'), ('here', 'ADV'), ('is', 'VERB'), ('to', 'PART'), ('learn', 'VERB'), ('about', 'ADP'), ('the', 'DET'), ('underlying', 'ADJ'), ('structure', 'NOUN'), ('or', 'CCONJ'), ('distribution', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('data', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('discover', 'VERB'), ('inherent', 'ADJ'), ('patterns', 'NOUN'), ('from', 'ADP'), ('within', 'ADP'), ('it', 'PRON'), ('in', 'ADP'), ('order', 'NOUN'), ('to', 'PART'), ('draw', 'VERB'), ('inferences', 'NOUN')] 

 XPOS tags are: 
>> [('The', 'DT'), ('goal', 'NN'), ('here', 'RB'), ('is', 'VBZ'), ('to', 'TO'), ('learn', 'VB'), ('about', 'IN'), ('the', 'DT'), ('underlying', 'JJ'), ('structure', 'NN'), ('or', 'CC'), ('distribution', 'NN'), ('of', 'IN'), ('the', 'DT'), ('data', 'NNS'), (',', ','), ('and', 'CC'), ('discover', 'VB'), ('inherent', 'JJ'), ('patterns', 'NNS'), ('from', 'IN'), ('within', 'IN'), ('it', 'PRP'), ('in', 'IN'), ('order', 'NN'), ('to', 'TO'), ('draw', 'VB'), ('inferences', 'NNS')] 

 Lemmas are: 
>> [('The', 'the'), ('goal', 'goal'), ('here', 'here'), ('is', 'be'), ('to', 'to'), ('learn', 'learn'), ('about', 'about'), ('the', 'the'), ('underlying', 'underlying'), ('structure', 'structure'), ('or', 'or'), ('distribution', 'distribution'), ('of', 'of'), ('the', 'the'), ('data', 'datum'), (',', ','), ('and', 'and'), ('discover', 'discover'), ('inherent', 'inherent'), ('patterns', 'pattern'), ('from', 'from'), ('within', 'within'), ('it', 'it'), ('in', 'in'), ('order', 'order'), ('to', 'to'), ('draw', 'draw'), ('inferences', 'inference')] 

 Dependency tags are: 
>> [(('The', 'goal'), 'det'), (('goal', 'is'), 'nsubj'), (('here', 'goal'), 'advmod'), (('is', 'root'), 'root'), (('to', 'learn'), 'mark'), (('learn', 'is'), 'ccomp'), (('about', 'structure'), 'case'), (('the', 'structure'), 'det'), (('underlying', 'structure'), 'amod'), (('structure', 'learn'), 'obl'), (('or', 'distribution'), 'cc'), (('distribution', 'structure'), 'conj'), (('of', 'data'), 'case'), (('the', 'data'), 'det'), (('data', 'structure'), 'nmod'), ((',', 'discover'), 'punct'), (('and', 'discover'), 'cc'), (('discover', 'learn'), 'conj'), (('inherent', 'patterns'), 'amod'), (('patterns', 'discover'), 'obj'), (('from', 'it'), 'case'), (('within', 'it'), 'case'), (('it', 'patterns'), 'nmod'), (('in', 'draw'), 'mark'), (('order', 'in'), 'fixed'), (('to', 'draw'), 'mark'), (('draw', 'discover'), 'advcl'), (('inferences', 'draw'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 153 =================================

Supervised learning 


------------------- Sentence 1 -------------------

 Supervised learning 

Tokens are: 
>> ['Supervised', 'learning'] 

 UPOS tags are: 
>> [('Supervised', 'VERB'), ('learning', 'NOUN')] 

 XPOS tags are: 
>> [('Supervised', 'VBN'), ('learning', 'NN')] 

 Lemmas are: 
>> [('Supervised', 'supervise'), ('learning', 'learning')] 

 Dependency tags are: 
>> [(('Supervised', 'learning'), 'amod'), (('learning', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 154 =================================

•  We know the outcome/response 


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 We know the outcome/response 

Tokens are: 
>> ['We', 'know', 'the', 'outcome', '/', 'response'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('know', 'VERB'), ('the', 'DET'), ('outcome', 'NOUN'), ('/', 'SYM'), ('response', 'NOUN')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('know', 'VBP'), ('the', 'DT'), ('outcome', 'NN'), ('/', ','), ('response', 'NN')] 

 Lemmas are: 
>> [('We', 'we'), ('know', 'know'), ('the', 'the'), ('outcome', 'outcome'), ('/', '/'), ('response', 'response')] 

 Dependency tags are: 
>> [(('We', 'know'), 'nsubj'), (('know', 'root'), 'root'), (('the', 'outcome'), 'det'), (('outcome', 'know'), 'obj'), (('/', 'response'), 'cc'), (('response', 'outcome'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 155 =================================

•  Takes known set of input data and responses to it, and      trains a model to generate reasonable predictions for      the response to new data


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Takes known set of input data and responses to it, and      trains a model to generate reasonable predictions for      the response to new data 

Tokens are: 
>> ['Takes', 'known', 'set', 'of', 'input', 'data', 'and', 'responses', 'to', 'it', ',', 'and', 'trains', 'a', 'model', 'to', 'generate', 'reasonable', 'predictions', 'for', 'the', 'response', 'to', 'new', 'data'] 

 UPOS tags are: 
>> [('Takes', 'VERB'), ('known', 'VERB'), ('set', 'NOUN'), ('of', 'ADP'), ('input', 'NOUN'), ('data', 'NOUN'), ('and', 'CCONJ'), ('responses', 'NOUN'), ('to', 'ADP'), ('it', 'PRON'), (',', 'PUNCT'), ('and', 'CCONJ'), ('trains', 'VERB'), ('a', 'DET'), ('model', 'NOUN'), ('to', 'PART'), ('generate', 'VERB'), ('reasonable', 'ADJ'), ('predictions', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('response', 'NOUN'), ('to', 'ADP'), ('new', 'ADJ'), ('data', 'NOUN')] 

 XPOS tags are: 
>> [('Takes', 'VBZ'), ('known', 'VBN'), ('set', 'NN'), ('of', 'IN'), ('input', 'NN'), ('data', 'NNS'), ('and', 'CC'), ('responses', 'NNS'), ('to', 'IN'), ('it', 'PRP'), (',', ','), ('and', 'CC'), ('trains', 'VBZ'), ('a', 'DT'), ('model', 'NN'), ('to', 'TO'), ('generate', 'VB'), ('reasonable', 'JJ'), ('predictions', 'NNS'), ('for', 'IN'), ('the', 'DT'), ('response', 'NN'), ('to', 'IN'), ('new', 'JJ'), ('data', 'NNS')] 

 Lemmas are: 
>> [('Takes', 'take'), ('known', 'know'), ('set', 'set'), ('of', 'of'), ('input', 'input'), ('data', 'datum'), ('and', 'and'), ('responses', 'response'), ('to', 'to'), ('it', 'it'), (',', ','), ('and', 'and'), ('trains', 'train'), ('a', 'a'), ('model', 'model'), ('to', 'to'), ('generate', 'generate'), ('reasonable', 'reasonable'), ('predictions', 'prediction'), ('for', 'for'), ('the', 'the'), ('response', 'response'), ('to', 'to'), ('new', 'new'), ('data', 'datum')] 

 Dependency tags are: 
>> [(('Takes', 'root'), 'root'), (('known', 'set'), 'amod'), (('set', 'Takes'), 'obj'), (('of', 'data'), 'case'), (('input', 'data'), 'compound'), (('data', 'set'), 'nmod'), (('and', 'responses'), 'cc'), (('responses', 'data'), 'conj'), (('to', 'it'), 'case'), (('it', 'Takes'), 'obl'), ((',', 'trains'), 'punct'), (('and', 'trains'), 'cc'), (('trains', 'Takes'), 'conj'), (('a', 'model'), 'det'), (('model', 'trains'), 'obj'), (('to', 'generate'), 'mark'), (('generate', 'model'), 'acl'), (('reasonable', 'predictions'), 'amod'), (('predictions', 'generate'), 'obj'), (('for', 'response'), 'case'), (('the', 'response'), 'det'), (('response', 'predictions'), 'nmod'), (('to', 'data'), 'case'), (('new', 'data'), 'amod'), (('data', 'response'), 'nmod')]

 Named Entites are: 
>> []

================================ Paragraph 156 =================================

11/14Demystifying data science  


------------------- Sentence 1 -------------------

 11/14 

Tokens are: 
>> ['11/14'] 

 UPOS tags are: 
>> [('11/14', 'NUM')] 

 XPOS tags are: 
>> [('11/14', 'CD')] 

 Lemmas are: 
>> [('11/14', '11/14')] 

 Dependency tags are: 
>> [(('11/14', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Demystifying data science 

Tokens are: 
>> ['Demystifying', 'data', 'science'] 

 UPOS tags are: 
>> [('Demystifying', 'VERB'), ('data', 'NOUN'), ('science', 'NOUN')] 

 XPOS tags are: 
>> [('Demystifying', 'VBG'), ('data', 'NN'), ('science', 'NN')] 

 Lemmas are: 
>> [('Demystifying', 'demystify'), ('data', 'datum'), ('science', 'science')] 

 Dependency tags are: 
>> [(('Demystifying', 'root'), 'root'), (('data', 'science'), 'compound'), (('science', 'Demystifying'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 157 =================================

If there is no response or category to predict, the goal is to learn the underlying  structure of the data and discover patterns to draw real world inferences. For  example, unsupervised learning approaches are commonly used to segment  customers based on demographic, behavior and past product purchase history.  This allows an organization to learn more about their customers, which products  are frequently bought together and how different groups prefer certain services  and products over others. It may not immediately understand that Emily from  Philadelphia falls within customer segment X, but the organization can learn how  many of its customers are similar to Emily based on behavior and consumption  characteristics. Are they active on mobile? Do they use social media? Do they  visit retail stores for purchases? Are they affluent? These insights can allow  organizations to make data-driven decisions for future marketing campaigns,  product development, etc.  


------------------- Sentence 1 -------------------

 If there is no response or category to predict, the goal is to learn the underlying  structure of the data and discover patterns to draw real world inferences. 

Tokens are: 
>> ['If', 'there', 'is', 'no', 'response', 'or', 'category', 'to', 'predict', ',', 'the', 'goal', 'is', 'to', 'learn', 'the', 'underlying', 'structure', 'of', 'the', 'data', 'and', 'discover', 'patterns', 'to', 'draw', 'real', 'world', 'inferences', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('there', 'PRON'), ('is', 'VERB'), ('no', 'DET'), ('response', 'NOUN'), ('or', 'CCONJ'), ('category', 'NOUN'), ('to', 'PART'), ('predict', 'VERB'), (',', 'PUNCT'), ('the', 'DET'), ('goal', 'NOUN'), ('is', 'VERB'), ('to', 'PART'), ('learn', 'VERB'), ('the', 'DET'), ('underlying', 'ADJ'), ('structure', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('data', 'NOUN'), ('and', 'CCONJ'), ('discover', 'VERB'), ('patterns', 'NOUN'), ('to', 'PART'), ('draw', 'VERB'), ('real', 'ADJ'), ('world', 'NOUN'), ('inferences', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('there', 'EX'), ('is', 'VBZ'), ('no', 'DT'), ('response', 'NN'), ('or', 'CC'), ('category', 'NN'), ('to', 'TO'), ('predict', 'VB'), (',', ','), ('the', 'DT'), ('goal', 'NN'), ('is', 'VBZ'), ('to', 'TO'), ('learn', 'VB'), ('the', 'DT'), ('underlying', 'JJ'), ('structure', 'NN'), ('of', 'IN'), ('the', 'DT'), ('data', 'NNS'), ('and', 'CC'), ('discover', 'VB'), ('patterns', 'NNS'), ('to', 'TO'), ('draw', 'VB'), ('real', 'JJ'), ('world', 'NN'), ('inferences', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('there', 'there'), ('is', 'be'), ('no', 'no'), ('response', 'response'), ('or', 'or'), ('category', 'category'), ('to', 'to'), ('predict', 'predict'), (',', ','), ('the', 'the'), ('goal', 'goal'), ('is', 'be'), ('to', 'to'), ('learn', 'learn'), ('the', 'the'), ('underlying', 'underlying'), ('structure', 'structure'), ('of', 'of'), ('the', 'the'), ('data', 'datum'), ('and', 'and'), ('discover', 'discover'), ('patterns', 'pattern'), ('to', 'to'), ('draw', 'draw'), ('real', 'real'), ('world', 'world'), ('inferences', 'inference'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'is'), 'mark'), (('there', 'is'), 'expl'), (('is', 'is'), 'advcl'), (('no', 'response'), 'det'), (('response', 'is'), 'nsubj'), (('or', 'category'), 'cc'), (('category', 'response'), 'conj'), (('to', 'predict'), 'mark'), (('predict', 'response'), 'acl'), ((',', 'is'), 'punct'), (('the', 'goal'), 'det'), (('goal', 'is'), 'nsubj'), (('is', 'root'), 'root'), (('to', 'learn'), 'mark'), (('learn', 'is'), 'ccomp'), (('the', 'structure'), 'det'), (('underlying', 'structure'), 'amod'), (('structure', 'learn'), 'obj'), (('of', 'data'), 'case'), (('the', 'data'), 'det'), (('data', 'structure'), 'nmod'), (('and', 'discover'), 'cc'), (('discover', 'learn'), 'conj'), (('patterns', 'discover'), 'obj'), (('to', 'draw'), 'mark'), (('draw', 'patterns'), 'acl'), (('real', 'inferences'), 'amod'), (('world', 'inferences'), 'compound'), (('inferences', 'draw'), 'obj'), (('.', 'is'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 For  example, unsupervised learning approaches are commonly used to segment  customers based on demographic, behavior and past product purchase history. 

Tokens are: 
>> ['For', 'example', ',', 'unsupervised', 'learning', 'approaches', 'are', 'commonly', 'used', 'to', 'segment', 'customers', 'based', 'on', 'demographic', ',', 'behavior', 'and', 'past', 'product', 'purchase', 'history', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('approaches', 'NOUN'), ('are', 'AUX'), ('commonly', 'ADV'), ('used', 'VERB'), ('to', 'PART'), ('segment', 'VERB'), ('customers', 'NOUN'), ('based', 'VERB'), ('on', 'ADP'), ('demographic', 'ADJ'), (',', 'PUNCT'), ('behavior', 'NOUN'), ('and', 'CCONJ'), ('past', 'ADJ'), ('product', 'NOUN'), ('purchase', 'NOUN'), ('history', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('example', 'NN'), (',', ','), ('unsupervised', 'JJ'), ('learning', 'NN'), ('approaches', 'NNS'), ('are', 'VBP'), ('commonly', 'RB'), ('used', 'VBN'), ('to', 'TO'), ('segment', 'VB'), ('customers', 'NNS'), ('based', 'VBN'), ('on', 'IN'), ('demographic', 'JJ'), (',', ','), ('behavior', 'NN'), ('and', 'CC'), ('past', 'JJ'), ('product', 'NN'), ('purchase', 'NN'), ('history', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('example', 'example'), (',', ','), ('unsupervised', 'unsupervised'), ('learning', 'learning'), ('approaches', 'approach'), ('are', 'be'), ('commonly', 'commonly'), ('used', 'use'), ('to', 'to'), ('segment', 'segment'), ('customers', 'customer'), ('based', 'base'), ('on', 'on'), ('demographic', 'demographic'), (',', ','), ('behavior', 'behavior'), ('and', 'and'), ('past', 'past'), ('product', 'product'), ('purchase', 'purchase'), ('history', 'history'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'example'), 'case'), (('example', 'used'), 'obl'), ((',', 'used'), 'punct'), (('unsupervised', 'approaches'), 'amod'), (('learning', 'approaches'), 'compound'), (('approaches', 'used'), 'nsubj:pass'), (('are', 'used'), 'aux:pass'), (('commonly', 'used'), 'advmod'), (('used', 'root'), 'root'), (('to', 'segment'), 'mark'), (('segment', 'used'), 'xcomp'), (('customers', 'segment'), 'obj'), (('based', 'customers'), 'acl'), (('on', 'demographic'), 'case'), (('demographic', 'based'), 'obl'), ((',', 'behavior'), 'punct'), (('behavior', 'demographic'), 'conj'), (('and', 'history'), 'cc'), (('past', 'history'), 'amod'), (('product', 'history'), 'compound'), (('purchase', 'history'), 'compound'), (('history', 'demographic'), 'conj'), (('.', 'used'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 This allows an organization to learn more about their customers, which products  are frequently bought together and how different groups prefer certain services  and products over others. 

Tokens are: 
>> ['This', 'allows', 'an', 'organization', 'to', 'learn', 'more', 'about', 'their', 'customers', ',', 'which', 'products', 'are', 'frequently', 'bought', 'together', 'and', 'how', 'different', 'groups', 'prefer', 'certain', 'services', 'and', 'products', 'over', 'others', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('allows', 'VERB'), ('an', 'DET'), ('organization', 'NOUN'), ('to', 'PART'), ('learn', 'VERB'), ('more', 'ADJ'), ('about', 'ADP'), ('their', 'PRON'), ('customers', 'NOUN'), (',', 'PUNCT'), ('which', 'DET'), ('products', 'NOUN'), ('are', 'AUX'), ('frequently', 'ADV'), ('bought', 'VERB'), ('together', 'ADV'), ('and', 'CCONJ'), ('how', 'SCONJ'), ('different', 'ADJ'), ('groups', 'NOUN'), ('prefer', 'VERB'), ('certain', 'ADJ'), ('services', 'NOUN'), ('and', 'CCONJ'), ('products', 'NOUN'), ('over', 'ADP'), ('others', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('allows', 'VBZ'), ('an', 'DT'), ('organization', 'NN'), ('to', 'TO'), ('learn', 'VB'), ('more', 'JJR'), ('about', 'IN'), ('their', 'PRP$'), ('customers', 'NNS'), (',', ','), ('which', 'WDT'), ('products', 'NNS'), ('are', 'VBP'), ('frequently', 'RB'), ('bought', 'VBN'), ('together', 'RB'), ('and', 'CC'), ('how', 'WRB'), ('different', 'JJ'), ('groups', 'NNS'), ('prefer', 'VBP'), ('certain', 'JJ'), ('services', 'NNS'), ('and', 'CC'), ('products', 'NNS'), ('over', 'IN'), ('others', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('allows', 'allow'), ('an', 'a'), ('organization', 'organization'), ('to', 'to'), ('learn', 'learn'), ('more', 'more'), ('about', 'about'), ('their', 'they'), ('customers', 'customer'), (',', ','), ('which', 'which'), ('products', 'product'), ('are', 'be'), ('frequently', 'frequently'), ('bought', 'buy'), ('together', 'together'), ('and', 'and'), ('how', 'how'), ('different', 'different'), ('groups', 'group'), ('prefer', 'prefer'), ('certain', 'certain'), ('services', 'service'), ('and', 'and'), ('products', 'product'), ('over', 'over'), ('others', 'other'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'allows'), 'nsubj'), (('allows', 'root'), 'root'), (('an', 'organization'), 'det'), (('organization', 'allows'), 'obj'), (('to', 'learn'), 'mark'), (('learn', 'organization'), 'acl'), (('more', 'learn'), 'obj'), (('about', 'customers'), 'case'), (('their', 'customers'), 'nmod:poss'), (('customers', 'more'), 'obl'), ((',', 'bought'), 'punct'), (('which', 'products'), 'det'), (('products', 'bought'), 'nsubj:pass'), (('are', 'bought'), 'aux:pass'), (('frequently', 'bought'), 'advmod'), (('bought', 'customers'), 'acl:relcl'), (('together', 'bought'), 'advmod'), (('and', 'prefer'), 'cc'), (('how', 'different'), 'mark'), (('different', 'groups'), 'amod'), (('groups', 'prefer'), 'nsubj'), (('prefer', 'bought'), 'conj'), (('certain', 'services'), 'amod'), (('services', 'prefer'), 'obj'), (('and', 'products'), 'cc'), (('products', 'services'), 'conj'), (('over', 'others'), 'case'), (('others', 'prefer'), 'obl'), (('.', 'allows'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 It may not immediately understand that Emily from  Philadelphia falls within customer segment X, but the organization can learn how  many of its customers are similar to Emily based on behavior and consumption  characteristics. 

Tokens are: 
>> ['It', 'may', 'not', 'immediately', 'understand', 'that', 'Emily', 'from', 'Philadelphia', 'falls', 'within', 'customer', 'segment', 'X', ',', 'but', 'the', 'organization', 'can', 'learn', 'how', 'many', 'of', 'its', 'customers', 'are', 'similar', 'to', 'Emily', 'based', 'on', 'behavior', 'and', 'consumption', 'characteristics', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('may', 'AUX'), ('not', 'PART'), ('immediately', 'ADV'), ('understand', 'VERB'), ('that', 'SCONJ'), ('Emily', 'PROPN'), ('from', 'ADP'), ('Philadelphia', 'PROPN'), ('falls', 'VERB'), ('within', 'ADP'), ('customer', 'NOUN'), ('segment', 'NOUN'), ('X', 'NOUN'), (',', 'PUNCT'), ('but', 'CCONJ'), ('the', 'DET'), ('organization', 'NOUN'), ('can', 'AUX'), ('learn', 'VERB'), ('how', 'SCONJ'), ('many', 'ADJ'), ('of', 'ADP'), ('its', 'PRON'), ('customers', 'NOUN'), ('are', 'AUX'), ('similar', 'ADJ'), ('to', 'ADP'), ('Emily', 'PROPN'), ('based', 'VERB'), ('on', 'ADP'), ('behavior', 'NOUN'), ('and', 'CCONJ'), ('consumption', 'NOUN'), ('characteristics', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('may', 'MD'), ('not', 'RB'), ('immediately', 'RB'), ('understand', 'VB'), ('that', 'IN'), ('Emily', 'NNP'), ('from', 'IN'), ('Philadelphia', 'NNP'), ('falls', 'VBZ'), ('within', 'IN'), ('customer', 'NN'), ('segment', 'NN'), ('X', 'NN'), (',', ','), ('but', 'CC'), ('the', 'DT'), ('organization', 'NN'), ('can', 'MD'), ('learn', 'VB'), ('how', 'WRB'), ('many', 'JJ'), ('of', 'IN'), ('its', 'PRP$'), ('customers', 'NNS'), ('are', 'VBP'), ('similar', 'JJ'), ('to', 'IN'), ('Emily', 'NNP'), ('based', 'VBN'), ('on', 'IN'), ('behavior', 'NN'), ('and', 'CC'), ('consumption', 'NN'), ('characteristics', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('may', 'may'), ('not', 'not'), ('immediately', 'immediately'), ('understand', 'understand'), ('that', 'that'), ('Emily', 'Emily'), ('from', 'from'), ('Philadelphia', 'Philadelphia'), ('falls', 'fall'), ('within', 'within'), ('customer', 'customer'), ('segment', 'segment'), ('X', 'x'), (',', ','), ('but', 'but'), ('the', 'the'), ('organization', 'organization'), ('can', 'can'), ('learn', 'learn'), ('how', 'how'), ('many', 'many'), ('of', 'of'), ('its', 'its'), ('customers', 'customer'), ('are', 'be'), ('similar', 'similar'), ('to', 'to'), ('Emily', 'Emily'), ('based', 'base'), ('on', 'on'), ('behavior', 'behavior'), ('and', 'and'), ('consumption', 'consumption'), ('characteristics', 'characteristic'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'understand'), 'nsubj'), (('may', 'understand'), 'aux'), (('not', 'understand'), 'advmod'), (('immediately', 'understand'), 'advmod'), (('understand', 'root'), 'root'), (('that', 'falls'), 'mark'), (('Emily', 'falls'), 'nsubj'), (('from', 'Philadelphia'), 'case'), (('Philadelphia', 'Emily'), 'nmod'), (('falls', 'understand'), 'ccomp'), (('within', 'X'), 'case'), (('customer', 'segment'), 'compound'), (('segment', 'X'), 'compound'), (('X', 'falls'), 'obl'), ((',', 'learn'), 'punct'), (('but', 'learn'), 'cc'), (('the', 'organization'), 'det'), (('organization', 'learn'), 'nsubj'), (('can', 'learn'), 'aux'), (('learn', 'understand'), 'conj'), (('how', 'similar'), 'mark'), (('many', 'similar'), 'nsubj'), (('of', 'customers'), 'case'), (('its', 'customers'), 'nmod:poss'), (('customers', 'many'), 'nmod'), (('are', 'similar'), 'cop'), (('similar', 'learn'), 'ccomp'), (('to', 'Emily'), 'case'), (('Emily', 'similar'), 'obl'), (('based', 'characteristics'), 'case'), (('on', 'characteristics'), 'case'), (('behavior', 'characteristics'), 'compound'), (('and', 'consumption'), 'cc'), (('consumption', 'behavior'), 'conj'), (('characteristics', 'similar'), 'obl'), (('.', 'understand'), 'punct')]

 Named Entites are: 
>> [('Emily', 'PERSON'), ('Philadelphia', 'GPE'), ('Emily', 'PERSON')]

------------------- Sentence 5 -------------------

 Are they active on mobile? 

Tokens are: 
>> ['Are', 'they', 'active', 'on', 'mobile', '?'] 

 UPOS tags are: 
>> [('Are', 'AUX'), ('they', 'PRON'), ('active', 'ADJ'), ('on', 'ADP'), ('mobile', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Are', 'VBP'), ('they', 'PRP'), ('active', 'JJ'), ('on', 'IN'), ('mobile', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Are', 'be'), ('they', 'they'), ('active', 'active'), ('on', 'on'), ('mobile', 'mobile'), ('?', '?')] 

 Dependency tags are: 
>> [(('Are', 'active'), 'cop'), (('they', 'active'), 'nsubj'), (('active', 'root'), 'root'), (('on', 'mobile'), 'case'), (('mobile', 'active'), 'obl'), (('?', 'active'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 Do they use social media? 

Tokens are: 
>> ['Do', 'they', 'use', 'social', 'media', '?'] 

 UPOS tags are: 
>> [('Do', 'AUX'), ('they', 'PRON'), ('use', 'VERB'), ('social', 'ADJ'), ('media', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Do', 'VBP'), ('they', 'PRP'), ('use', 'VB'), ('social', 'JJ'), ('media', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Do', 'do'), ('they', 'they'), ('use', 'use'), ('social', 'social'), ('media', 'media'), ('?', '?')] 

 Dependency tags are: 
>> [(('Do', 'use'), 'aux'), (('they', 'use'), 'nsubj'), (('use', 'root'), 'root'), (('social', 'media'), 'amod'), (('media', 'use'), 'obj'), (('?', 'use'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 7 -------------------

 Do they  visit retail stores for purchases? 

Tokens are: 
>> ['Do', 'they', 'visit', 'retail', 'stores', 'for', 'purchases', '?'] 

 UPOS tags are: 
>> [('Do', 'AUX'), ('they', 'PRON'), ('visit', 'VERB'), ('retail', 'NOUN'), ('stores', 'NOUN'), ('for', 'ADP'), ('purchases', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Do', 'VBP'), ('they', 'PRP'), ('visit', 'VB'), ('retail', 'NN'), ('stores', 'NNS'), ('for', 'IN'), ('purchases', 'NNS'), ('?', '.')] 

 Lemmas are: 
>> [('Do', 'do'), ('they', 'they'), ('visit', 'visit'), ('retail', 'retail'), ('stores', 'store'), ('for', 'for'), ('purchases', 'purchase'), ('?', '?')] 

 Dependency tags are: 
>> [(('Do', 'visit'), 'aux'), (('they', 'visit'), 'nsubj'), (('visit', 'root'), 'root'), (('retail', 'stores'), 'compound'), (('stores', 'visit'), 'obj'), (('for', 'purchases'), 'case'), (('purchases', 'visit'), 'obl'), (('?', 'visit'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 8 -------------------

 Are they affluent? 

Tokens are: 
>> ['Are', 'they', 'affluent', '?'] 

 UPOS tags are: 
>> [('Are', 'AUX'), ('they', 'PRON'), ('affluent', 'ADJ'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Are', 'VBP'), ('they', 'PRP'), ('affluent', 'JJ'), ('?', '.')] 

 Lemmas are: 
>> [('Are', 'be'), ('they', 'they'), ('affluent', 'affluent'), ('?', '?')] 

 Dependency tags are: 
>> [(('Are', 'affluent'), 'cop'), (('they', 'affluent'), 'nsubj'), (('affluent', 'root'), 'root'), (('?', 'affluent'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 9 -------------------

 These insights can allow  organizations to make data-driven decisions for future marketing campaigns,  product development, etc. 

Tokens are: 
>> ['These', 'insights', 'can', 'allow', 'organizations', 'to', 'make', 'data-driven', 'decisions', 'for', 'future', 'marketing', 'campaigns', ',', 'product', 'development', ',', 'etc.'] 

 UPOS tags are: 
>> [('These', 'DET'), ('insights', 'NOUN'), ('can', 'AUX'), ('allow', 'VERB'), ('organizations', 'NOUN'), ('to', 'PART'), ('make', 'VERB'), ('data-driven', 'ADJ'), ('decisions', 'NOUN'), ('for', 'ADP'), ('future', 'ADJ'), ('marketing', 'NOUN'), ('campaigns', 'NOUN'), (',', 'PUNCT'), ('product', 'NOUN'), ('development', 'NOUN'), (',', 'PUNCT'), ('etc.', 'X')] 

 XPOS tags are: 
>> [('These', 'DT'), ('insights', 'NNS'), ('can', 'MD'), ('allow', 'VB'), ('organizations', 'NNS'), ('to', 'TO'), ('make', 'VB'), ('data-driven', 'JJ'), ('decisions', 'NNS'), ('for', 'IN'), ('future', 'JJ'), ('marketing', 'NN'), ('campaigns', 'NNS'), (',', ','), ('product', 'NN'), ('development', 'NN'), (',', ','), ('etc.', 'FW')] 

 Lemmas are: 
>> [('These', 'this'), ('insights', 'insight'), ('can', 'can'), ('allow', 'allow'), ('organizations', 'organization'), ('to', 'to'), ('make', 'make'), ('data-driven', 'data-driven'), ('decisions', 'decision'), ('for', 'for'), ('future', 'future'), ('marketing', 'marketing'), ('campaigns', 'campaign'), (',', ','), ('product', 'product'), ('development', 'development'), (',', ','), ('etc.', 'etc.')] 

 Dependency tags are: 
>> [(('These', 'insights'), 'det'), (('insights', 'allow'), 'nsubj'), (('can', 'allow'), 'aux'), (('allow', 'root'), 'root'), (('organizations', 'allow'), 'obj'), (('to', 'make'), 'mark'), (('make', 'allow'), 'xcomp'), (('data-driven', 'decisions'), 'amod'), (('decisions', 'make'), 'obj'), (('for', 'campaigns'), 'case'), (('future', 'campaigns'), 'amod'), (('marketing', 'campaigns'), 'compound'), (('campaigns', 'decisions'), 'nmod'), ((',', 'development'), 'punct'), (('product', 'development'), 'compound'), (('development', 'campaigns'), 'conj'), ((',', 'etc.'), 'punct'), (('etc.', 'campaigns'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 158 =================================

Supervised learning 


------------------- Sentence 1 -------------------

 Supervised learning 

Tokens are: 
>> ['Supervised', 'learning'] 

 UPOS tags are: 
>> [('Supervised', 'VERB'), ('learning', 'NOUN')] 

 XPOS tags are: 
>> [('Supervised', 'VBN'), ('learning', 'NN')] 

 Lemmas are: 
>> [('Supervised', 'supervise'), ('learning', 'learning')] 

 Dependency tags are: 
>> [(('Supervised', 'learning'), 'amod'), (('learning', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 159 =================================

Supervised learning can be broken down into two categories based on what it is  trying to predict. 


------------------- Sentence 1 -------------------

 Supervised learning can be broken down into two categories based on what it is  trying to predict. 

Tokens are: 
>> ['Supervised', 'learning', 'can', 'be', 'broken', 'down', 'into', 'two', 'categories', 'based', 'on', 'what', 'it', 'is', 'trying', 'to', 'predict', '.'] 

 UPOS tags are: 
>> [('Supervised', 'VERB'), ('learning', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('broken', 'VERB'), ('down', 'ADP'), ('into', 'ADP'), ('two', 'NUM'), ('categories', 'NOUN'), ('based', 'VERB'), ('on', 'ADP'), ('what', 'PRON'), ('it', 'PRON'), ('is', 'AUX'), ('trying', 'VERB'), ('to', 'PART'), ('predict', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Supervised', 'VBN'), ('learning', 'NN'), ('can', 'MD'), ('be', 'VB'), ('broken', 'VBN'), ('down', 'RP'), ('into', 'IN'), ('two', 'CD'), ('categories', 'NNS'), ('based', 'VBN'), ('on', 'IN'), ('what', 'WP'), ('it', 'PRP'), ('is', 'VBZ'), ('trying', 'VBG'), ('to', 'TO'), ('predict', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('Supervised', 'supervise'), ('learning', 'learning'), ('can', 'can'), ('be', 'be'), ('broken', 'break'), ('down', 'down'), ('into', 'into'), ('two', 'two'), ('categories', 'category'), ('based', 'base'), ('on', 'on'), ('what', 'what'), ('it', 'it'), ('is', 'be'), ('trying', 'try'), ('to', 'to'), ('predict', 'predict'), ('.', '.')] 

 Dependency tags are: 
>> [(('Supervised', 'learning'), 'amod'), (('learning', 'broken'), 'nsubj:pass'), (('can', 'broken'), 'aux'), (('be', 'broken'), 'aux:pass'), (('broken', 'root'), 'root'), (('down', 'broken'), 'compound:prt'), (('into', 'categories'), 'case'), (('two', 'categories'), 'nummod'), (('categories', 'broken'), 'obl'), (('based', 'categories'), 'acl'), (('on', 'what'), 'case'), (('what', 'based'), 'obl'), (('it', 'trying'), 'nsubj'), (('is', 'trying'), 'aux'), (('trying', 'what'), 'acl:relcl'), (('to', 'predict'), 'mark'), (('predict', 'trying'), 'xcomp'), (('.', 'broken'), 'punct')]

 Named Entites are: 
>> [('two', 'CARDINAL')]

================================ Paragraph 160 =================================

Supervised learning 


------------------- Sentence 1 -------------------

 Supervised learning 

Tokens are: 
>> ['Supervised', 'learning'] 

 UPOS tags are: 
>> [('Supervised', 'VERB'), ('learning', 'NOUN')] 

 XPOS tags are: 
>> [('Supervised', 'VBN'), ('learning', 'NN')] 

 Lemmas are: 
>> [('Supervised', 'supervise'), ('learning', 'learning')] 

 Dependency tags are: 
>> [(('Supervised', 'learning'), 'amod'), (('learning', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 161 =================================

Classification  (categories) Regression (numbers) 


------------------- Sentence 1 -------------------

 Classification  (categories) Regression (numbers) 

Tokens are: 
>> ['Classification', '(', 'categories', ')', 'Regression', '(', 'numbers', ')'] 

 UPOS tags are: 
>> [('Classification', 'NOUN'), ('(', 'PUNCT'), ('categories', 'NOUN'), (')', 'PUNCT'), ('Regression', 'NOUN'), ('(', 'PUNCT'), ('numbers', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Classification', 'NN'), ('(', '-LRB-'), ('categories', 'NNS'), (')', '-RRB-'), ('Regression', 'NN'), ('(', '-LRB-'), ('numbers', 'NNS'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Classification', 'classification'), ('(', '('), ('categories', 'category'), (')', ')'), ('Regression', 'regression'), ('(', '('), ('numbers', 'number'), (')', ')')] 

 Dependency tags are: 
>> [(('Classification', 'root'), 'root'), (('(', 'categories'), 'punct'), (('categories', 'Classification'), 'appos'), ((')', 'categories'), 'punct'), (('Regression', 'Classification'), 'appos'), (('(', 'numbers'), 'punct'), (('numbers', 'Regression'), 'appos'), ((')', 'numbers'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 162 =================================

Use	if	data	can	be	tagged,	 categorized	or	separated	 into	specific	groups		or	 classes 


------------------- Sentence 1 -------------------

 Use	if	data	can	be	tagged,	 categorized	or	separated	 into	specific	groups		or	 classes 

Tokens are: 
>> ['Use', 'if', 'data', 'can', 'be', 'tagged', ',', 'categorized', 'or', 'separated', 'into', 'specific', 'groups', 'or', 'classes'] 

 UPOS tags are: 
>> [('Use', 'VERB'), ('if', 'SCONJ'), ('data', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('tagged', 'VERB'), (',', 'PUNCT'), ('categorized', 'VERB'), ('or', 'CCONJ'), ('separated', 'VERB'), ('into', 'ADP'), ('specific', 'ADJ'), ('groups', 'NOUN'), ('or', 'CCONJ'), ('classes', 'NOUN')] 

 XPOS tags are: 
>> [('Use', 'VB'), ('if', 'IN'), ('data', 'NNS'), ('can', 'MD'), ('be', 'VB'), ('tagged', 'VBN'), (',', ','), ('categorized', 'VBN'), ('or', 'CC'), ('separated', 'VBN'), ('into', 'IN'), ('specific', 'JJ'), ('groups', 'NNS'), ('or', 'CC'), ('classes', 'NNS')] 

 Lemmas are: 
>> [('Use', 'use'), ('if', 'if'), ('data', 'datum'), ('can', 'can'), ('be', 'be'), ('tagged', 'tag'), (',', ','), ('categorized', 'categorize'), ('or', 'or'), ('separated', 'separate'), ('into', 'into'), ('specific', 'specific'), ('groups', 'group'), ('or', 'or'), ('classes', 'class')] 

 Dependency tags are: 
>> [(('Use', 'root'), 'root'), (('if', 'tagged'), 'mark'), (('data', 'tagged'), 'nsubj:pass'), (('can', 'tagged'), 'aux'), (('be', 'tagged'), 'aux:pass'), (('tagged', 'Use'), 'advcl'), ((',', 'categorized'), 'punct'), (('categorized', 'tagged'), 'conj'), (('or', 'separated'), 'cc'), (('separated', 'tagged'), 'conj'), (('into', 'groups'), 'case'), (('specific', 'groups'), 'amod'), (('groups', 'separated'), 'obl'), (('or', 'classes'), 'cc'), (('classes', 'groups'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 163 =================================

Use	if	the	response	being	 predicted	is	a	real	number 


------------------- Sentence 1 -------------------

 Use	if	the	response	being	 predicted	is	a	real	number 

Tokens are: 
>> ['Use', 'if', 'the', 'response', 'being', 'predicted', 'is', 'a', 'real', 'number'] 

 UPOS tags are: 
>> [('Use', 'VERB'), ('if', 'SCONJ'), ('the', 'DET'), ('response', 'NOUN'), ('being', 'AUX'), ('predicted', 'VERB'), ('is', 'AUX'), ('a', 'DET'), ('real', 'ADJ'), ('number', 'NOUN')] 

 XPOS tags are: 
>> [('Use', 'VB'), ('if', 'IN'), ('the', 'DT'), ('response', 'NN'), ('being', 'VBG'), ('predicted', 'VBN'), ('is', 'VBZ'), ('a', 'DT'), ('real', 'JJ'), ('number', 'NN')] 

 Lemmas are: 
>> [('Use', 'use'), ('if', 'if'), ('the', 'the'), ('response', 'response'), ('being', 'be'), ('predicted', 'predict'), ('is', 'be'), ('a', 'a'), ('real', 'real'), ('number', 'number')] 

 Dependency tags are: 
>> [(('Use', 'root'), 'root'), (('if', 'predicted'), 'mark'), (('the', 'response'), 'det'), (('response', 'number'), 'nsubj'), (('being', 'predicted'), 'aux:pass'), (('predicted', 'response'), 'acl'), (('is', 'number'), 'cop'), (('a', 'number'), 'det'), (('real', 'number'), 'amod'), (('number', 'Use'), 'advcl')]

 Named Entites are: 
>> []

================================ Paragraph 164 =================================

Supervised learning 


------------------- Sentence 1 -------------------

 Supervised learning 

Tokens are: 
>> ['Supervised', 'learning'] 

 UPOS tags are: 
>> [('Supervised', 'VERB'), ('learning', 'NOUN')] 

 XPOS tags are: 
>> [('Supervised', 'VBN'), ('learning', 'NN')] 

 Lemmas are: 
>> [('Supervised', 'supervise'), ('learning', 'learning')] 

 Dependency tags are: 
>> [(('Supervised', 'learning'), 'amod'), (('learning', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 165 =================================

Classification  (categories) 


------------------- Sentence 1 -------------------

 Classification  (categories) 

Tokens are: 
>> ['Classification', '(', 'categories', ')'] 

 UPOS tags are: 
>> [('Classification', 'NOUN'), ('(', 'PUNCT'), ('categories', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Classification', 'NN'), ('(', '-LRB-'), ('categories', 'NNS'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Classification', 'classification'), ('(', '('), ('categories', 'category'), (')', ')')] 

 Dependency tags are: 
>> [(('Classification', 'root'), 'root'), (('(', 'categories'), 'punct'), (('categories', 'Classification'), 'appos'), ((')', 'categories'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 166 =================================

Regression (numbers) 


------------------- Sentence 1 -------------------

 Regression (numbers) 

Tokens are: 
>> ['Regression', '(', 'numbers', ')'] 

 UPOS tags are: 
>> [('Regression', 'NOUN'), ('(', 'PUNCT'), ('numbers', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Regression', 'NN'), ('(', '-LRB-'), ('numbers', 'NNS'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Regression', 'regression'), ('(', '('), ('numbers', 'number'), (')', ')')] 

 Dependency tags are: 
>> [(('Regression', 'root'), 'root'), (('(', 'numbers'), 'punct'), (('numbers', 'Regression'), 'parataxis'), ((')', 'numbers'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 167 =================================

Use if data can be tagged,  categorized or separated  


------------------- Sentence 1 -------------------

 Use if data can be tagged,  categorized or separated 

Tokens are: 
>> ['Use', 'if', 'data', 'can', 'be', 'tagged', ',', 'categorized', 'or', 'separated'] 

 UPOS tags are: 
>> [('Use', 'VERB'), ('if', 'SCONJ'), ('data', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('tagged', 'VERB'), (',', 'PUNCT'), ('categorized', 'VERB'), ('or', 'CCONJ'), ('separated', 'VERB')] 

 XPOS tags are: 
>> [('Use', 'VB'), ('if', 'IN'), ('data', 'NNS'), ('can', 'MD'), ('be', 'VB'), ('tagged', 'VBN'), (',', ','), ('categorized', 'VBN'), ('or', 'CC'), ('separated', 'VBN')] 

 Lemmas are: 
>> [('Use', 'use'), ('if', 'if'), ('data', 'datum'), ('can', 'can'), ('be', 'be'), ('tagged', 'tag'), (',', ','), ('categorized', 'categorize'), ('or', 'or'), ('separated', 'separate')] 

 Dependency tags are: 
>> [(('Use', 'root'), 'root'), (('if', 'tagged'), 'mark'), (('data', 'tagged'), 'nsubj:pass'), (('can', 'tagged'), 'aux'), (('be', 'tagged'), 'aux:pass'), (('tagged', 'Use'), 'advcl'), ((',', 'categorized'), 'punct'), (('categorized', 'tagged'), 'conj'), (('or', 'separated'), 'cc'), (('separated', 'categorized'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 168 =================================

into specific groups  or classes 


------------------- Sentence 1 -------------------

 into specific groups  or classes 

Tokens are: 
>> ['into', 'specific', 'groups', 'or', 'classes'] 

 UPOS tags are: 
>> [('into', 'ADP'), ('specific', 'ADJ'), ('groups', 'NOUN'), ('or', 'CCONJ'), ('classes', 'NOUN')] 

 XPOS tags are: 
>> [('into', 'IN'), ('specific', 'JJ'), ('groups', 'NNS'), ('or', 'CC'), ('classes', 'NNS')] 

 Lemmas are: 
>> [('into', 'into'), ('specific', 'specific'), ('groups', 'group'), ('or', 'or'), ('classes', 'class')] 

 Dependency tags are: 
>> [(('into', 'groups'), 'case'), (('specific', 'groups'), 'amod'), (('groups', 'root'), 'root'), (('or', 'classes'), 'cc'), (('classes', 'groups'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 169 =================================

Use if the response being  predicted is a real number 


------------------- Sentence 1 -------------------

 Use if the response being  predicted is a real number 

Tokens are: 
>> ['Use', 'if', 'the', 'response', 'being', 'predicted', 'is', 'a', 'real', 'number'] 

 UPOS tags are: 
>> [('Use', 'VERB'), ('if', 'SCONJ'), ('the', 'DET'), ('response', 'NOUN'), ('being', 'AUX'), ('predicted', 'VERB'), ('is', 'AUX'), ('a', 'DET'), ('real', 'ADJ'), ('number', 'NOUN')] 

 XPOS tags are: 
>> [('Use', 'VB'), ('if', 'IN'), ('the', 'DT'), ('response', 'NN'), ('being', 'VBG'), ('predicted', 'VBN'), ('is', 'VBZ'), ('a', 'DT'), ('real', 'JJ'), ('number', 'NN')] 

 Lemmas are: 
>> [('Use', 'use'), ('if', 'if'), ('the', 'the'), ('response', 'response'), ('being', 'be'), ('predicted', 'predict'), ('is', 'be'), ('a', 'a'), ('real', 'real'), ('number', 'number')] 

 Dependency tags are: 
>> [(('Use', 'root'), 'root'), (('if', 'predicted'), 'mark'), (('the', 'response'), 'det'), (('response', 'number'), 'nsubj'), (('being', 'predicted'), 'aux:pass'), (('predicted', 'response'), 'acl'), (('is', 'number'), 'cop'), (('a', 'number'), 'det'), (('real', 'number'), 'amod'), (('number', 'Use'), 'advcl')]

 Named Entites are: 
>> []

================================ Paragraph 170 =================================

Classification algorithms or approaches are used when asking questions regarding  categories. Examples include:  


------------------- Sentence 1 -------------------

 Classification algorithms or approaches are used when asking questions regarding  categories. 

Tokens are: 
>> ['Classification', 'algorithms', 'or', 'approaches', 'are', 'used', 'when', 'asking', 'questions', 'regarding', 'categories', '.'] 

 UPOS tags are: 
>> [('Classification', 'NOUN'), ('algorithms', 'NOUN'), ('or', 'CCONJ'), ('approaches', 'NOUN'), ('are', 'AUX'), ('used', 'VERB'), ('when', 'SCONJ'), ('asking', 'VERB'), ('questions', 'NOUN'), ('regarding', 'VERB'), ('categories', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Classification', 'NN'), ('algorithms', 'NNS'), ('or', 'CC'), ('approaches', 'NNS'), ('are', 'VBP'), ('used', 'VBN'), ('when', 'WRB'), ('asking', 'VBG'), ('questions', 'NNS'), ('regarding', 'VBG'), ('categories', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Classification', 'classification'), ('algorithms', 'algorithm'), ('or', 'or'), ('approaches', 'approach'), ('are', 'be'), ('used', 'use'), ('when', 'when'), ('asking', 'ask'), ('questions', 'question'), ('regarding', 'regard'), ('categories', 'category'), ('.', '.')] 

 Dependency tags are: 
>> [(('Classification', 'algorithms'), 'compound'), (('algorithms', 'used'), 'nsubj:pass'), (('or', 'approaches'), 'cc'), (('approaches', 'algorithms'), 'conj'), (('are', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('when', 'asking'), 'mark'), (('asking', 'used'), 'advcl'), (('questions', 'asking'), 'obj'), (('regarding', 'categories'), 'case'), (('categories', 'questions'), 'nmod'), (('.', 'used'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Examples include: 

Tokens are: 
>> ['Examples', 'include', ':'] 

 UPOS tags are: 
>> [('Examples', 'NOUN'), ('include', 'VERB'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Examples', 'NNS'), ('include', 'VBP'), (':', ':')] 

 Lemmas are: 
>> [('Examples', 'example'), ('include', 'include'), (':', ':')] 

 Dependency tags are: 
>> [(('Examples', 'include'), 'nsubj'), (('include', 'root'), 'root'), ((':', 'include'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 171 =================================

• Will this customer switch to another competitor in the next month? 


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Will this customer switch to another competitor in the next month? 

Tokens are: 
>> ['Will', 'this', 'customer', 'switch', 'to', 'another', 'competitor', 'in', 'the', 'next', 'month', '?'] 

 UPOS tags are: 
>> [('Will', 'AUX'), ('this', 'DET'), ('customer', 'NOUN'), ('switch', 'VERB'), ('to', 'ADP'), ('another', 'DET'), ('competitor', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('next', 'ADJ'), ('month', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Will', 'MD'), ('this', 'DT'), ('customer', 'NN'), ('switch', 'VB'), ('to', 'IN'), ('another', 'DT'), ('competitor', 'NN'), ('in', 'IN'), ('the', 'DT'), ('next', 'JJ'), ('month', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Will', 'will'), ('this', 'this'), ('customer', 'customer'), ('switch', 'switch'), ('to', 'to'), ('another', 'another'), ('competitor', 'competitor'), ('in', 'in'), ('the', 'the'), ('next', 'next'), ('month', 'month'), ('?', '?')] 

 Dependency tags are: 
>> [(('Will', 'switch'), 'aux'), (('this', 'customer'), 'det'), (('customer', 'switch'), 'nsubj'), (('switch', 'root'), 'root'), (('to', 'competitor'), 'case'), (('another', 'competitor'), 'det'), (('competitor', 'switch'), 'obl'), (('in', 'month'), 'case'), (('the', 'month'), 'det'), (('next', 'month'), 'amod'), (('month', 'switch'), 'obl'), (('?', 'switch'), 'punct')]

 Named Entites are: 
>> [('the next month', 'DATE')]

================================ Paragraph 172 =================================

• Will this customer default in the next month, six months or year? 


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Will this customer default in the next month, six months or year? 

Tokens are: 
>> ['Will', 'this', 'customer', 'default', 'in', 'the', 'next', 'month', ',', 'six', 'months', 'or', 'year', '?'] 

 UPOS tags are: 
>> [('Will', 'AUX'), ('this', 'DET'), ('customer', 'NOUN'), ('default', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('next', 'ADJ'), ('month', 'NOUN'), (',', 'PUNCT'), ('six', 'NUM'), ('months', 'NOUN'), ('or', 'CCONJ'), ('year', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Will', 'MD'), ('this', 'DT'), ('customer', 'NN'), ('default', 'NN'), ('in', 'IN'), ('the', 'DT'), ('next', 'JJ'), ('month', 'NN'), (',', ','), ('six', 'CD'), ('months', 'NNS'), ('or', 'CC'), ('year', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Will', 'will'), ('this', 'this'), ('customer', 'customer'), ('default', 'default'), ('in', 'in'), ('the', 'the'), ('next', 'next'), ('month', 'month'), (',', ','), ('six', 'six'), ('months', 'month'), ('or', 'or'), ('year', 'year'), ('?', '?')] 

 Dependency tags are: 
>> [(('Will', 'default'), 'aux'), (('this', 'default'), 'det'), (('customer', 'default'), 'compound'), (('default', 'root'), 'root'), (('in', 'month'), 'case'), (('the', 'month'), 'det'), (('next', 'month'), 'amod'), (('month', 'default'), 'nmod'), ((',', 'months'), 'punct'), (('six', 'months'), 'nummod'), (('months', 'default'), 'appos'), (('or', 'year'), 'cc'), (('year', 'months'), 'conj'), (('?', 'default'), 'punct')]

 Named Entites are: 
>> [('the next month', 'DATE'), ('six months or year', 'DATE')]

================================ Paragraph 173 =================================

• Is an email spam or genuine? 


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Is an email spam or genuine? 

Tokens are: 
>> ['Is', 'an', 'email', 'spam', 'or', 'genuine', '?'] 

 UPOS tags are: 
>> [('Is', 'AUX'), ('an', 'DET'), ('email', 'NOUN'), ('spam', 'NOUN'), ('or', 'CCONJ'), ('genuine', 'ADJ'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Is', 'VBZ'), ('an', 'DT'), ('email', 'NN'), ('spam', 'NN'), ('or', 'CC'), ('genuine', 'JJ'), ('?', '.')] 

 Lemmas are: 
>> [('Is', 'be'), ('an', 'a'), ('email', 'email'), ('spam', 'spam'), ('or', 'or'), ('genuine', 'genuine'), ('?', '?')] 

 Dependency tags are: 
>> [(('Is', 'spam'), 'cop'), (('an', 'spam'), 'det'), (('email', 'spam'), 'compound'), (('spam', 'root'), 'root'), (('or', 'genuine'), 'cc'), (('genuine', 'spam'), 'conj'), (('?', 'spam'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 174 =================================

• Is this document for compliance, legal or customer support? 


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Is this document for compliance, legal or customer support? 

Tokens are: 
>> ['Is', 'this', 'document', 'for', 'compliance', ',', 'legal', 'or', 'customer', 'support', '?'] 

 UPOS tags are: 
>> [('Is', 'AUX'), ('this', 'DET'), ('document', 'NOUN'), ('for', 'ADP'), ('compliance', 'NOUN'), (',', 'PUNCT'), ('legal', 'ADJ'), ('or', 'CCONJ'), ('customer', 'NOUN'), ('support', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Is', 'VBZ'), ('this', 'DT'), ('document', 'NN'), ('for', 'IN'), ('compliance', 'NN'), (',', ','), ('legal', 'JJ'), ('or', 'CC'), ('customer', 'NN'), ('support', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Is', 'be'), ('this', 'this'), ('document', 'document'), ('for', 'for'), ('compliance', 'compliance'), (',', ','), ('legal', 'legal'), ('or', 'or'), ('customer', 'customer'), ('support', 'support'), ('?', '?')] 

 Dependency tags are: 
>> [(('Is', 'document'), 'cop'), (('this', 'document'), 'det'), (('document', 'root'), 'root'), (('for', 'compliance'), 'case'), (('compliance', 'document'), 'nmod'), ((',', 'legal'), 'punct'), (('legal', 'compliance'), 'conj'), (('or', 'support'), 'cc'), (('customer', 'support'), 'compound'), (('support', 'compliance'), 'conj'), (('?', 'document'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 175 =================================

Regression algorithms or approaches are used when asking questions with   numerical outcomes: 


------------------- Sentence 1 -------------------

 Regression algorithms or approaches are used when asking questions with   numerical outcomes: 

Tokens are: 
>> ['Regression', 'algorithms', 'or', 'approaches', 'are', 'used', 'when', 'asking', 'questions', 'with', 'numerical', 'outcomes', ':'] 

 UPOS tags are: 
>> [('Regression', 'NOUN'), ('algorithms', 'NOUN'), ('or', 'CCONJ'), ('approaches', 'NOUN'), ('are', 'AUX'), ('used', 'VERB'), ('when', 'SCONJ'), ('asking', 'VERB'), ('questions', 'NOUN'), ('with', 'ADP'), ('numerical', 'ADJ'), ('outcomes', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Regression', 'NN'), ('algorithms', 'NNS'), ('or', 'CC'), ('approaches', 'NNS'), ('are', 'VBP'), ('used', 'VBN'), ('when', 'WRB'), ('asking', 'VBG'), ('questions', 'NNS'), ('with', 'IN'), ('numerical', 'JJ'), ('outcomes', 'NNS'), (':', ':')] 

 Lemmas are: 
>> [('Regression', 'regression'), ('algorithms', 'algorithm'), ('or', 'or'), ('approaches', 'approach'), ('are', 'be'), ('used', 'use'), ('when', 'when'), ('asking', 'ask'), ('questions', 'question'), ('with', 'with'), ('numerical', 'numerical'), ('outcomes', 'outcome'), (':', ':')] 

 Dependency tags are: 
>> [(('Regression', 'algorithms'), 'compound'), (('algorithms', 'used'), 'nsubj:pass'), (('or', 'approaches'), 'cc'), (('approaches', 'algorithms'), 'conj'), (('are', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('when', 'asking'), 'mark'), (('asking', 'used'), 'advcl'), (('questions', 'asking'), 'obj'), (('with', 'outcomes'), 'case'), (('numerical', 'outcomes'), 'amod'), (('outcomes', 'questions'), 'nmod'), ((':', 'used'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 176 =================================

• What will the temperature be at 6:00 pm today? 


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 What will the temperature be at 6:00 pm today? 

Tokens are: 
>> ['What', 'will', 'the', 'temperature', 'be', 'at', '6:00', 'pm', 'today', '?'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('will', 'AUX'), ('the', 'DET'), ('temperature', 'NOUN'), ('be', 'AUX'), ('at', 'ADP'), ('6:00', 'NUM'), ('pm', 'NOUN'), ('today', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('will', 'MD'), ('the', 'DT'), ('temperature', 'NN'), ('be', 'VB'), ('at', 'IN'), ('6:00', 'CD'), ('pm', 'NN'), ('today', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('will', 'will'), ('the', 'the'), ('temperature', 'temperature'), ('be', 'be'), ('at', 'at'), ('6:00', '6:00'), ('pm', 'pm'), ('today', 'today'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'pm'), 'nmod'), (('will', 'pm'), 'aux'), (('the', 'temperature'), 'det'), (('temperature', 'pm'), 'nsubj'), (('be', 'pm'), 'cop'), (('at', 'pm'), 'case'), (('6:00', 'pm'), 'nummod'), (('pm', 'root'), 'root'), (('today', 'pm'), 'nmod:npmod'), (('?', 'pm'), 'punct')]

 Named Entites are: 
>> [('6:00 pm', 'TIME'), ('today', 'DATE')]

================================ Paragraph 177 =================================

• In how many days will this machine stop working?  


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 In how many days will this machine stop working? 

Tokens are: 
>> ['In', 'how', 'many', 'days', 'will', 'this', 'machine', 'stop', 'working', '?'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('how', 'ADV'), ('many', 'ADJ'), ('days', 'NOUN'), ('will', 'AUX'), ('this', 'DET'), ('machine', 'NOUN'), ('stop', 'VERB'), ('working', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('how', 'WRB'), ('many', 'JJ'), ('days', 'NNS'), ('will', 'MD'), ('this', 'DT'), ('machine', 'NN'), ('stop', 'VB'), ('working', 'VBG'), ('?', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('how', 'how'), ('many', 'many'), ('days', 'day'), ('will', 'will'), ('this', 'this'), ('machine', 'machine'), ('stop', 'stop'), ('working', 'work'), ('?', '?')] 

 Dependency tags are: 
>> [(('In', 'days'), 'case'), (('how', 'many'), 'advmod'), (('many', 'days'), 'amod'), (('days', 'stop'), 'obl'), (('will', 'stop'), 'aux'), (('this', 'machine'), 'det'), (('machine', 'stop'), 'nsubj'), (('stop', 'root'), 'root'), (('working', 'stop'), 'xcomp'), (('?', 'stop'), 'punct')]

 Named Entites are: 
>> [('how many days', 'DATE')]

================================ Paragraph 178 =================================

• What should be the price of a property based on size, number of rooms and location? 


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 What should be the price of a property based on size, number of rooms and location? 

Tokens are: 
>> ['What', 'should', 'be', 'the', 'price', 'of', 'a', 'property', 'based', 'on', 'size', ',', 'number', 'of', 'rooms', 'and', 'location', '?'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('should', 'AUX'), ('be', 'AUX'), ('the', 'DET'), ('price', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('property', 'NOUN'), ('based', 'VERB'), ('on', 'ADP'), ('size', 'NOUN'), (',', 'PUNCT'), ('number', 'NOUN'), ('of', 'ADP'), ('rooms', 'NOUN'), ('and', 'CCONJ'), ('location', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('should', 'MD'), ('be', 'VB'), ('the', 'DT'), ('price', 'NN'), ('of', 'IN'), ('a', 'DT'), ('property', 'NN'), ('based', 'VBN'), ('on', 'IN'), ('size', 'NN'), (',', ','), ('number', 'NN'), ('of', 'IN'), ('rooms', 'NNS'), ('and', 'CC'), ('location', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('should', 'should'), ('be', 'be'), ('the', 'the'), ('price', 'price'), ('of', 'of'), ('a', 'a'), ('property', 'property'), ('based', 'base'), ('on', 'on'), ('size', 'size'), (',', ','), ('number', 'number'), ('of', 'of'), ('rooms', 'room'), ('and', 'and'), ('location', 'location'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'price'), 'nsubj'), (('should', 'price'), 'aux'), (('be', 'price'), 'cop'), (('the', 'price'), 'det'), (('price', 'root'), 'root'), (('of', 'property'), 'case'), (('a', 'property'), 'det'), (('property', 'price'), 'nmod'), (('based', 'property'), 'acl'), (('on', 'size'), 'case'), (('size', 'based'), 'obl'), ((',', 'number'), 'punct'), (('number', 'size'), 'conj'), (('of', 'rooms'), 'case'), (('rooms', 'number'), 'nmod'), (('and', 'location'), 'cc'), (('location', 'rooms'), 'conj'), (('?', 'price'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 179 =================================

• How many orders am I likely to receive in the next three months for my product?


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 How many orders am I likely to receive in the next three months for my product? 

Tokens are: 
>> ['How', 'many', 'orders', 'am', 'I', 'likely', 'to', 'receive', 'in', 'the', 'next', 'three', 'months', 'for', 'my', 'product', '?'] 

 UPOS tags are: 
>> [('How', 'ADV'), ('many', 'ADJ'), ('orders', 'NOUN'), ('am', 'AUX'), ('I', 'PRON'), ('likely', 'ADJ'), ('to', 'PART'), ('receive', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('next', 'ADJ'), ('three', 'NUM'), ('months', 'NOUN'), ('for', 'ADP'), ('my', 'PRON'), ('product', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('How', 'WRB'), ('many', 'JJ'), ('orders', 'NNS'), ('am', 'VBP'), ('I', 'PRP'), ('likely', 'JJ'), ('to', 'TO'), ('receive', 'VB'), ('in', 'IN'), ('the', 'DT'), ('next', 'JJ'), ('three', 'CD'), ('months', 'NNS'), ('for', 'IN'), ('my', 'PRP$'), ('product', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('How', 'how'), ('many', 'many'), ('orders', 'order'), ('am', 'be'), ('I', 'I'), ('likely', 'likely'), ('to', 'to'), ('receive', 'receive'), ('in', 'in'), ('the', 'the'), ('next', 'next'), ('three', 'three'), ('months', 'month'), ('for', 'for'), ('my', 'my'), ('product', 'product'), ('?', '?')] 

 Dependency tags are: 
>> [(('How', 'many'), 'advmod'), (('many', 'orders'), 'amod'), (('orders', 'likely'), 'obj'), (('am', 'likely'), 'cop'), (('I', 'likely'), 'nsubj'), (('likely', 'root'), 'root'), (('to', 'receive'), 'mark'), (('receive', 'likely'), 'xcomp'), (('in', 'months'), 'case'), (('the', 'months'), 'det'), (('next', 'months'), 'amod'), (('three', 'months'), 'nummod'), (('months', 'receive'), 'obl'), (('for', 'product'), 'case'), (('my', 'product'), 'nmod:poss'), (('product', 'receive'), 'obl'), (('?', 'likely'), 'punct')]

 Named Entites are: 
>> [('the next three months', 'DATE')]

================================ Paragraph 180 =================================

12/14Demystifying data science  


------------------- Sentence 1 -------------------

 12/14 

Tokens are: 
>> ['12/14'] 

 UPOS tags are: 
>> [('12/14', 'NUM')] 

 XPOS tags are: 
>> [('12/14', 'CD')] 

 Lemmas are: 
>> [('12/14', '12/14')] 

 Dependency tags are: 
>> [(('12/14', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Demystifying data science 

Tokens are: 
>> ['Demystifying', 'data', 'science'] 

 UPOS tags are: 
>> [('Demystifying', 'VERB'), ('data', 'NOUN'), ('science', 'NOUN')] 

 XPOS tags are: 
>> [('Demystifying', 'VBG'), ('data', 'NN'), ('science', 'NN')] 

 Lemmas are: 
>> [('Demystifying', 'demystify'), ('data', 'datum'), ('science', 'science')] 

 Dependency tags are: 
>> [(('Demystifying', 'root'), 'root'), (('data', 'science'), 'compound'), (('science', 'Demystifying'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 181 =================================

Unsupervised learning 


------------------- Sentence 1 -------------------

 Unsupervised learning 

Tokens are: 
>> ['Unsupervised', 'learning'] 

 UPOS tags are: 
>> [('Unsupervised', 'VERB'), ('learning', 'NOUN')] 

 XPOS tags are: 
>> [('Unsupervised', 'VBN'), ('learning', 'NN')] 

 Lemmas are: 
>> [('Unsupervised', 'unsupervise'), ('learning', 'learning')] 

 Dependency tags are: 
>> [(('Unsupervised', 'learning'), 'amod'), (('learning', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 182 =================================

There are multiple unsupervised learning approaches and techniques that can  be utilized to gain meaningful insights. One of the more popular techniques is  clustering, which groups things that are similar or have features in common.  Organizations use clustering techniques to answer business questions, such as: 


------------------- Sentence 1 -------------------

 There are multiple unsupervised learning approaches and techniques that can  be utilized to gain meaningful insights. 

Tokens are: 
>> ['There', 'are', 'multiple', 'unsupervised', 'learning', 'approaches', 'and', 'techniques', 'that', 'can', 'be', 'utilized', 'to', 'gain', 'meaningful', 'insights', '.'] 

 UPOS tags are: 
>> [('There', 'PRON'), ('are', 'VERB'), ('multiple', 'ADJ'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('approaches', 'NOUN'), ('and', 'CCONJ'), ('techniques', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('utilized', 'VERB'), ('to', 'PART'), ('gain', 'VERB'), ('meaningful', 'ADJ'), ('insights', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('There', 'EX'), ('are', 'VBP'), ('multiple', 'JJ'), ('unsupervised', 'JJ'), ('learning', 'NN'), ('approaches', 'NNS'), ('and', 'CC'), ('techniques', 'NNS'), ('that', 'WDT'), ('can', 'MD'), ('be', 'VB'), ('utilized', 'VBN'), ('to', 'TO'), ('gain', 'VB'), ('meaningful', 'JJ'), ('insights', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('There', 'there'), ('are', 'be'), ('multiple', 'multiple'), ('unsupervised', 'unsupervised'), ('learning', 'learning'), ('approaches', 'approach'), ('and', 'and'), ('techniques', 'technique'), ('that', 'that'), ('can', 'can'), ('be', 'be'), ('utilized', 'utilize'), ('to', 'to'), ('gain', 'gain'), ('meaningful', 'meaningful'), ('insights', 'insight'), ('.', '.')] 

 Dependency tags are: 
>> [(('There', 'are'), 'expl'), (('are', 'root'), 'root'), (('multiple', 'approaches'), 'amod'), (('unsupervised', 'approaches'), 'amod'), (('learning', 'approaches'), 'compound'), (('approaches', 'are'), 'nsubj'), (('and', 'techniques'), 'cc'), (('techniques', 'approaches'), 'conj'), (('that', 'utilized'), 'nsubj:pass'), (('can', 'utilized'), 'aux'), (('be', 'utilized'), 'aux:pass'), (('utilized', 'approaches'), 'acl:relcl'), (('to', 'gain'), 'mark'), (('gain', 'utilized'), 'xcomp'), (('meaningful', 'insights'), 'amod'), (('insights', 'gain'), 'obj'), (('.', 'are'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 One of the more popular techniques is  clustering, which groups things that are similar or have features in common. 

Tokens are: 
>> ['One', 'of', 'the', 'more', 'popular', 'techniques', 'is', 'clustering', ',', 'which', 'groups', 'things', 'that', 'are', 'similar', 'or', 'have', 'features', 'in', 'common', '.'] 

 UPOS tags are: 
>> [('One', 'NUM'), ('of', 'ADP'), ('the', 'DET'), ('more', 'ADV'), ('popular', 'ADJ'), ('techniques', 'NOUN'), ('is', 'AUX'), ('clustering', 'VERB'), (',', 'PUNCT'), ('which', 'DET'), ('groups', 'NOUN'), ('things', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('similar', 'ADJ'), ('or', 'CCONJ'), ('have', 'VERB'), ('features', 'NOUN'), ('in', 'ADP'), ('common', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('One', 'CD'), ('of', 'IN'), ('the', 'DT'), ('more', 'RBR'), ('popular', 'JJ'), ('techniques', 'NNS'), ('is', 'VBZ'), ('clustering', 'VBG'), (',', ','), ('which', 'WDT'), ('groups', 'NNS'), ('things', 'NNS'), ('that', 'WDT'), ('are', 'VBP'), ('similar', 'JJ'), ('or', 'CC'), ('have', 'VBP'), ('features', 'NNS'), ('in', 'IN'), ('common', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('One', 'one'), ('of', 'of'), ('the', 'the'), ('more', 'more'), ('popular', 'popular'), ('techniques', 'technique'), ('is', 'be'), ('clustering', 'cluster'), (',', ','), ('which', 'which'), ('groups', 'group'), ('things', 'thing'), ('that', 'that'), ('are', 'be'), ('similar', 'similar'), ('or', 'or'), ('have', 'have'), ('features', 'feature'), ('in', 'in'), ('common', 'common'), ('.', '.')] 

 Dependency tags are: 
>> [(('One', 'clustering'), 'nsubj'), (('of', 'techniques'), 'case'), (('the', 'techniques'), 'det'), (('more', 'popular'), 'advmod'), (('popular', 'techniques'), 'amod'), (('techniques', 'One'), 'nmod'), (('is', 'clustering'), 'aux'), (('clustering', 'root'), 'root'), ((',', 'clustering'), 'punct'), (('which', 'things'), 'det'), (('groups', 'things'), 'compound'), (('things', 'clustering'), 'obj'), (('that', 'similar'), 'nsubj'), (('are', 'similar'), 'cop'), (('similar', 'things'), 'acl:relcl'), (('or', 'have'), 'cc'), (('have', 'similar'), 'conj'), (('features', 'have'), 'obj'), (('in', 'common'), 'case'), (('common', 'have'), 'obl'), (('.', 'clustering'), 'punct')]

 Named Entites are: 
>> [('One', 'CARDINAL')]

------------------- Sentence 3 -------------------

 Organizations use clustering techniques to answer business questions, such as: 

Tokens are: 
>> ['Organizations', 'use', 'clustering', 'techniques', 'to', 'answer', 'business', 'questions', ',', 'such', 'as', ':'] 

 UPOS tags are: 
>> [('Organizations', 'NOUN'), ('use', 'VERB'), ('clustering', 'NOUN'), ('techniques', 'NOUN'), ('to', 'PART'), ('answer', 'VERB'), ('business', 'NOUN'), ('questions', 'NOUN'), (',', 'PUNCT'), ('such', 'ADJ'), ('as', 'ADP'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Organizations', 'NNS'), ('use', 'VBP'), ('clustering', 'NN'), ('techniques', 'NNS'), ('to', 'TO'), ('answer', 'VB'), ('business', 'NN'), ('questions', 'NNS'), (',', ','), ('such', 'JJ'), ('as', 'IN'), (':', ':')] 

 Lemmas are: 
>> [('Organizations', 'organization'), ('use', 'use'), ('clustering', 'clustering'), ('techniques', 'technique'), ('to', 'to'), ('answer', 'answer'), ('business', 'business'), ('questions', 'question'), (',', ','), ('such', 'such'), ('as', 'as'), (':', ':')] 

 Dependency tags are: 
>> [(('Organizations', 'use'), 'nsubj'), (('use', 'root'), 'root'), (('clustering', 'techniques'), 'compound'), (('techniques', 'use'), 'obj'), (('to', 'answer'), 'mark'), (('answer', 'techniques'), 'acl'), (('business', 'questions'), 'compound'), (('questions', 'answer'), 'obj'), ((',', 'use'), 'punct'), (('such', 'answer'), 'advmod'), (('as', 'such'), 'fixed'), ((':', 'use'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 183 =================================

• How many distinct customer groups exist for my products? Who belongs to   which group?  


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 How many distinct customer groups exist for my products? 

Tokens are: 
>> ['How', 'many', 'distinct', 'customer', 'groups', 'exist', 'for', 'my', 'products', '?'] 

 UPOS tags are: 
>> [('How', 'ADV'), ('many', 'ADJ'), ('distinct', 'ADJ'), ('customer', 'NOUN'), ('groups', 'NOUN'), ('exist', 'VERB'), ('for', 'ADP'), ('my', 'PRON'), ('products', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('How', 'WRB'), ('many', 'JJ'), ('distinct', 'JJ'), ('customer', 'NN'), ('groups', 'NNS'), ('exist', 'VBP'), ('for', 'IN'), ('my', 'PRP$'), ('products', 'NNS'), ('?', '.')] 

 Lemmas are: 
>> [('How', 'how'), ('many', 'many'), ('distinct', 'distinct'), ('customer', 'customer'), ('groups', 'group'), ('exist', 'exist'), ('for', 'for'), ('my', 'my'), ('products', 'product'), ('?', '?')] 

 Dependency tags are: 
>> [(('How', 'many'), 'advmod'), (('many', 'groups'), 'amod'), (('distinct', 'groups'), 'amod'), (('customer', 'groups'), 'compound'), (('groups', 'exist'), 'nsubj'), (('exist', 'root'), 'root'), (('for', 'products'), 'case'), (('my', 'products'), 'nmod:poss'), (('products', 'exist'), 'obl'), (('?', 'exist'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Who belongs to   which group? 

Tokens are: 
>> ['Who', 'belongs', 'to', 'which', 'group', '?'] 

 UPOS tags are: 
>> [('Who', 'PRON'), ('belongs', 'VERB'), ('to', 'ADP'), ('which', 'DET'), ('group', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Who', 'WP'), ('belongs', 'VBZ'), ('to', 'IN'), ('which', 'WDT'), ('group', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Who', 'who'), ('belongs', 'belong'), ('to', 'to'), ('which', 'which'), ('group', 'group'), ('?', '?')] 

 Dependency tags are: 
>> [(('Who', 'belongs'), 'nsubj'), (('belongs', 'root'), 'root'), (('to', 'group'), 'case'), (('which', 'group'), 'det'), (('group', 'belongs'), 'obl'), (('?', 'belongs'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 184 =================================

• To which customer subgroups should I market my product and how should I target  them? What are the key characteristics of each group? 


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 To which customer subgroups should I market my product and how should I target  them? 

Tokens are: 
>> ['To', 'which', 'customer', 'subgroups', 'should', 'I', 'market', 'my', 'product', 'and', 'how', 'should', 'I', 'target', 'them', '?'] 

 UPOS tags are: 
>> [('To', 'ADP'), ('which', 'DET'), ('customer', 'NOUN'), ('subgroups', 'NOUN'), ('should', 'AUX'), ('I', 'PRON'), ('market', 'VERB'), ('my', 'PRON'), ('product', 'NOUN'), ('and', 'CCONJ'), ('how', 'ADV'), ('should', 'AUX'), ('I', 'PRON'), ('target', 'VERB'), ('them', 'PRON'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('To', 'IN'), ('which', 'WDT'), ('customer', 'NN'), ('subgroups', 'NNS'), ('should', 'MD'), ('I', 'PRP'), ('market', 'VB'), ('my', 'PRP$'), ('product', 'NN'), ('and', 'CC'), ('how', 'WRB'), ('should', 'MD'), ('I', 'PRP'), ('target', 'VB'), ('them', 'PRP'), ('?', '.')] 

 Lemmas are: 
>> [('To', 'to'), ('which', 'which'), ('customer', 'customer'), ('subgroups', 'subgroup'), ('should', 'should'), ('I', 'I'), ('market', 'market'), ('my', 'my'), ('product', 'product'), ('and', 'and'), ('how', 'how'), ('should', 'should'), ('I', 'I'), ('target', 'target'), ('them', 'they'), ('?', '?')] 

 Dependency tags are: 
>> [(('To', 'subgroups'), 'case'), (('which', 'subgroups'), 'det'), (('customer', 'subgroups'), 'compound'), (('subgroups', 'market'), 'obl'), (('should', 'market'), 'aux'), (('I', 'market'), 'nsubj'), (('market', 'root'), 'root'), (('my', 'product'), 'nmod:poss'), (('product', 'market'), 'obj'), (('and', 'target'), 'cc'), (('how', 'target'), 'advmod'), (('should', 'target'), 'aux'), (('I', 'target'), 'nsubj'), (('target', 'market'), 'conj'), (('them', 'target'), 'obj'), (('?', 'market'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 What are the key characteristics of each group? 

Tokens are: 
>> ['What', 'are', 'the', 'key', 'characteristics', 'of', 'each', 'group', '?'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('are', 'AUX'), ('the', 'DET'), ('key', 'ADJ'), ('characteristics', 'NOUN'), ('of', 'ADP'), ('each', 'DET'), ('group', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('are', 'VBP'), ('the', 'DT'), ('key', 'JJ'), ('characteristics', 'NNS'), ('of', 'IN'), ('each', 'DT'), ('group', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('are', 'be'), ('the', 'the'), ('key', 'key'), ('characteristics', 'characteristic'), ('of', 'of'), ('each', 'each'), ('group', 'group'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'root'), 'root'), (('are', 'What'), 'cop'), (('the', 'characteristics'), 'det'), (('key', 'characteristics'), 'amod'), (('characteristics', 'What'), 'nsubj'), (('of', 'group'), 'case'), (('each', 'group'), 'det'), (('group', 'characteristics'), 'nmod'), (('?', 'What'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 185 =================================

• How can I group my documents into distinct categories? 


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 How can I group my documents into distinct categories? 

Tokens are: 
>> ['How', 'can', 'I', 'group', 'my', 'documents', 'into', 'distinct', 'categories', '?'] 

 UPOS tags are: 
>> [('How', 'ADV'), ('can', 'AUX'), ('I', 'PRON'), ('group', 'VERB'), ('my', 'PRON'), ('documents', 'NOUN'), ('into', 'ADP'), ('distinct', 'ADJ'), ('categories', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('How', 'WRB'), ('can', 'MD'), ('I', 'PRP'), ('group', 'VB'), ('my', 'PRP$'), ('documents', 'NNS'), ('into', 'IN'), ('distinct', 'JJ'), ('categories', 'NNS'), ('?', '.')] 

 Lemmas are: 
>> [('How', 'how'), ('can', 'can'), ('I', 'I'), ('group', 'group'), ('my', 'my'), ('documents', 'document'), ('into', 'into'), ('distinct', 'distinct'), ('categories', 'category'), ('?', '?')] 

 Dependency tags are: 
>> [(('How', 'group'), 'advmod'), (('can', 'group'), 'aux'), (('I', 'group'), 'nsubj'), (('group', 'root'), 'root'), (('my', 'documents'), 'nmod:poss'), (('documents', 'group'), 'obj'), (('into', 'categories'), 'case'), (('distinct', 'categories'), 'amod'), (('categories', 'group'), 'obl'), (('?', 'group'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 186 =================================

If a business is looking to answer questions around the identification of anomalies  or rare behavior and occurrences, anomaly detection techniques are utilized to  identify unusual patterns that do not conform to expected behavior, called outliers.  It has many applications in business, from intrusion detection, such as identifying  strange patterns in network traffic, to system health monitoring, including spotting  a malignant tumor in an MRI scan. Some additional questions that can be answered  using these techniques include: 


------------------- Sentence 1 -------------------

 If a business is looking to answer questions around the identification of anomalies  or rare behavior and occurrences, anomaly detection techniques are utilized to  identify unusual patterns that do not conform to expected behavior, called outliers. 

Tokens are: 
>> ['If', 'a', 'business', 'is', 'looking', 'to', 'answer', 'questions', 'around', 'the', 'identification', 'of', 'anomalies', 'or', 'rare', 'behavior', 'and', 'occurrences', ',', 'anomaly', 'detection', 'techniques', 'are', 'utilized', 'to', 'identify', 'unusual', 'patterns', 'that', 'do', 'not', 'conform', 'to', 'expected', 'behavior', ',', 'called', 'outliers', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('a', 'DET'), ('business', 'NOUN'), ('is', 'AUX'), ('looking', 'VERB'), ('to', 'PART'), ('answer', 'VERB'), ('questions', 'NOUN'), ('around', 'ADP'), ('the', 'DET'), ('identification', 'NOUN'), ('of', 'ADP'), ('anomalies', 'NOUN'), ('or', 'CCONJ'), ('rare', 'ADJ'), ('behavior', 'NOUN'), ('and', 'CCONJ'), ('occurrences', 'NOUN'), (',', 'PUNCT'), ('anomaly', 'ADJ'), ('detection', 'NOUN'), ('techniques', 'NOUN'), ('are', 'AUX'), ('utilized', 'VERB'), ('to', 'PART'), ('identify', 'VERB'), ('unusual', 'ADJ'), ('patterns', 'NOUN'), ('that', 'PRON'), ('do', 'AUX'), ('not', 'PART'), ('conform', 'VERB'), ('to', 'ADP'), ('expected', 'VERB'), ('behavior', 'NOUN'), (',', 'PUNCT'), ('called', 'VERB'), ('outliers', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('a', 'DT'), ('business', 'NN'), ('is', 'VBZ'), ('looking', 'VBG'), ('to', 'TO'), ('answer', 'VB'), ('questions', 'NNS'), ('around', 'IN'), ('the', 'DT'), ('identification', 'NN'), ('of', 'IN'), ('anomalies', 'NNS'), ('or', 'CC'), ('rare', 'JJ'), ('behavior', 'NN'), ('and', 'CC'), ('occurrences', 'NNS'), (',', ','), ('anomaly', 'JJ'), ('detection', 'NN'), ('techniques', 'NNS'), ('are', 'VBP'), ('utilized', 'VBN'), ('to', 'TO'), ('identify', 'VB'), ('unusual', 'JJ'), ('patterns', 'NNS'), ('that', 'WDT'), ('do', 'VBP'), ('not', 'RB'), ('conform', 'VB'), ('to', 'IN'), ('expected', 'VBN'), ('behavior', 'NN'), (',', ','), ('called', 'VBN'), ('outliers', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('a', 'a'), ('business', 'business'), ('is', 'be'), ('looking', 'look'), ('to', 'to'), ('answer', 'answer'), ('questions', 'question'), ('around', 'around'), ('the', 'the'), ('identification', 'identification'), ('of', 'of'), ('anomalies', 'anomaly'), ('or', 'or'), ('rare', 'rare'), ('behavior', 'behavior'), ('and', 'and'), ('occurrences', 'occurrence'), (',', ','), ('anomaly', 'anomaly'), ('detection', 'detection'), ('techniques', 'technique'), ('are', 'be'), ('utilized', 'utilize'), ('to', 'to'), ('identify', 'identify'), ('unusual', 'unusual'), ('patterns', 'pattern'), ('that', 'that'), ('do', 'do'), ('not', 'not'), ('conform', 'conform'), ('to', 'to'), ('expected', 'expect'), ('behavior', 'behavior'), (',', ','), ('called', 'call'), ('outliers', 'outlier'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'looking'), 'mark'), (('a', 'business'), 'det'), (('business', 'looking'), 'nsubj'), (('is', 'looking'), 'aux'), (('looking', 'utilized'), 'advcl'), (('to', 'answer'), 'mark'), (('answer', 'looking'), 'xcomp'), (('questions', 'answer'), 'obj'), (('around', 'identification'), 'case'), (('the', 'identification'), 'det'), (('identification', 'answer'), 'obl'), (('of', 'anomalies'), 'case'), (('anomalies', 'identification'), 'nmod'), (('or', 'behavior'), 'cc'), (('rare', 'behavior'), 'amod'), (('behavior', 'anomalies'), 'conj'), (('and', 'occurrences'), 'cc'), (('occurrences', 'anomalies'), 'conj'), ((',', 'looking'), 'punct'), (('anomaly', 'techniques'), 'amod'), (('detection', 'techniques'), 'compound'), (('techniques', 'utilized'), 'nsubj:pass'), (('are', 'utilized'), 'aux:pass'), (('utilized', 'root'), 'root'), (('to', 'identify'), 'mark'), (('identify', 'utilized'), 'xcomp'), (('unusual', 'patterns'), 'amod'), (('patterns', 'identify'), 'obj'), (('that', 'conform'), 'nsubj'), (('do', 'conform'), 'aux'), (('not', 'conform'), 'advmod'), (('conform', 'patterns'), 'acl:relcl'), (('to', 'behavior'), 'case'), (('expected', 'behavior'), 'amod'), (('behavior', 'conform'), 'obl'), ((',', 'called'), 'punct'), (('called', 'behavior'), 'acl'), (('outliers', 'called'), 'xcomp'), (('.', 'utilized'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 It has many applications in business, from intrusion detection, such as identifying  strange patterns in network traffic, to system health monitoring, including spotting  a malignant tumor in an MRI scan. 

Tokens are: 
>> ['It', 'has', 'many', 'applications', 'in', 'business', ',', 'from', 'intrusion', 'detection', ',', 'such', 'as', 'identifying', 'strange', 'patterns', 'in', 'network', 'traffic', ',', 'to', 'system', 'health', 'monitoring', ',', 'including', 'spotting', 'a', 'malignant', 'tumor', 'in', 'an', 'MRI', 'scan', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('has', 'VERB'), ('many', 'ADJ'), ('applications', 'NOUN'), ('in', 'ADP'), ('business', 'NOUN'), (',', 'PUNCT'), ('from', 'ADP'), ('intrusion', 'NOUN'), ('detection', 'NOUN'), (',', 'PUNCT'), ('such', 'ADJ'), ('as', 'SCONJ'), ('identifying', 'VERB'), ('strange', 'ADJ'), ('patterns', 'NOUN'), ('in', 'ADP'), ('network', 'NOUN'), ('traffic', 'NOUN'), (',', 'PUNCT'), ('to', 'PART'), ('system', 'VERB'), ('health', 'NOUN'), ('monitoring', 'NOUN'), (',', 'PUNCT'), ('including', 'VERB'), ('spotting', 'VERB'), ('a', 'DET'), ('malignant', 'ADJ'), ('tumor', 'NOUN'), ('in', 'ADP'), ('an', 'DET'), ('MRI', 'NOUN'), ('scan', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('has', 'VBZ'), ('many', 'JJ'), ('applications', 'NNS'), ('in', 'IN'), ('business', 'NN'), (',', ','), ('from', 'IN'), ('intrusion', 'NN'), ('detection', 'NN'), (',', ','), ('such', 'JJ'), ('as', 'IN'), ('identifying', 'VBG'), ('strange', 'JJ'), ('patterns', 'NNS'), ('in', 'IN'), ('network', 'NN'), ('traffic', 'NN'), (',', ','), ('to', 'TO'), ('system', 'VB'), ('health', 'NN'), ('monitoring', 'NN'), (',', ','), ('including', 'VBG'), ('spotting', 'VBG'), ('a', 'DT'), ('malignant', 'JJ'), ('tumor', 'NN'), ('in', 'IN'), ('an', 'DT'), ('MRI', 'NN'), ('scan', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('has', 'have'), ('many', 'many'), ('applications', 'application'), ('in', 'in'), ('business', 'business'), (',', ','), ('from', 'from'), ('intrusion', 'intrusion'), ('detection', 'detection'), (',', ','), ('such', 'such'), ('as', 'as'), ('identifying', 'identify'), ('strange', 'strange'), ('patterns', 'pattern'), ('in', 'in'), ('network', 'network'), ('traffic', 'traffic'), (',', ','), ('to', 'to'), ('system', 'system'), ('health', 'health'), ('monitoring', 'monitoring'), (',', ','), ('including', 'include'), ('spotting', 'spot'), ('a', 'a'), ('malignant', 'malignant'), ('tumor', 'tumor'), ('in', 'in'), ('an', 'a'), ('MRI', 'MRI'), ('scan', 'scan'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'has'), 'nsubj'), (('has', 'root'), 'root'), (('many', 'applications'), 'amod'), (('applications', 'has'), 'obj'), (('in', 'business'), 'case'), (('business', 'applications'), 'nmod'), ((',', 'detection'), 'punct'), (('from', 'detection'), 'case'), (('intrusion', 'detection'), 'compound'), (('detection', 'applications'), 'nmod'), ((',', 'identifying'), 'punct'), (('such', 'identifying'), 'mark'), (('as', 'such'), 'fixed'), (('identifying', 'detection'), 'acl'), (('strange', 'patterns'), 'amod'), (('patterns', 'identifying'), 'obj'), (('in', 'traffic'), 'case'), (('network', 'traffic'), 'compound'), (('traffic', 'patterns'), 'nmod'), ((',', 'system'), 'punct'), (('to', 'system'), 'mark'), (('system', 'identifying'), 'advcl'), (('health', 'monitoring'), 'compound'), (('monitoring', 'system'), 'obj'), ((',', 'spotting'), 'punct'), (('including', 'spotting'), 'mark'), (('spotting', 'system'), 'advcl'), (('a', 'tumor'), 'det'), (('malignant', 'tumor'), 'amod'), (('tumor', 'spotting'), 'obj'), (('in', 'scan'), 'case'), (('an', 'scan'), 'det'), (('MRI', 'scan'), 'compound'), (('scan', 'spotting'), 'obl'), (('.', 'has'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Some additional questions that can be answered  using these techniques include: 

Tokens are: 
>> ['Some', 'additional', 'questions', 'that', 'can', 'be', 'answered', 'using', 'these', 'techniques', 'include', ':'] 

 UPOS tags are: 
>> [('Some', 'DET'), ('additional', 'ADJ'), ('questions', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('answered', 'VERB'), ('using', 'VERB'), ('these', 'DET'), ('techniques', 'NOUN'), ('include', 'VERB'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Some', 'DT'), ('additional', 'JJ'), ('questions', 'NNS'), ('that', 'WDT'), ('can', 'MD'), ('be', 'VB'), ('answered', 'VBN'), ('using', 'VBG'), ('these', 'DT'), ('techniques', 'NNS'), ('include', 'VBP'), (':', ':')] 

 Lemmas are: 
>> [('Some', 'some'), ('additional', 'additional'), ('questions', 'question'), ('that', 'that'), ('can', 'can'), ('be', 'be'), ('answered', 'answer'), ('using', 'use'), ('these', 'this'), ('techniques', 'technique'), ('include', 'include'), (':', ':')] 

 Dependency tags are: 
>> [(('Some', 'questions'), 'det'), (('additional', 'questions'), 'amod'), (('questions', 'include'), 'nsubj'), (('that', 'answered'), 'nsubj:pass'), (('can', 'answered'), 'aux'), (('be', 'answered'), 'aux:pass'), (('answered', 'questions'), 'acl:relcl'), (('using', 'answered'), 'advcl'), (('these', 'techniques'), 'det'), (('techniques', 'using'), 'obj'), (('include', 'root'), 'root'), ((':', 'include'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 187 =================================

•  Given a massive database of financial data, which transactions are suspicious  and likely to be fraudulent?  


------------------- Sentence 1 -------------------

 •  Given a massive database of financial data, which transactions are suspicious  and likely to be fraudulent? 

Tokens are: 
>> ['•', 'Given', 'a', 'massive', 'database', 'of', 'financial', 'data', ',', 'which', 'transactions', 'are', 'suspicious', 'and', 'likely', 'to', 'be', 'fraudulent', '?'] 

 UPOS tags are: 
>> [('•', 'PUNCT'), ('Given', 'VERB'), ('a', 'DET'), ('massive', 'ADJ'), ('database', 'NOUN'), ('of', 'ADP'), ('financial', 'ADJ'), ('data', 'NOUN'), (',', 'PUNCT'), ('which', 'DET'), ('transactions', 'NOUN'), ('are', 'AUX'), ('suspicious', 'ADJ'), ('and', 'CCONJ'), ('likely', 'ADJ'), ('to', 'PART'), ('be', 'AUX'), ('fraudulent', 'ADJ'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP'), ('Given', 'VBN'), ('a', 'DT'), ('massive', 'JJ'), ('database', 'NN'), ('of', 'IN'), ('financial', 'JJ'), ('data', 'NNS'), (',', ','), ('which', 'WDT'), ('transactions', 'NNS'), ('are', 'VBP'), ('suspicious', 'JJ'), ('and', 'CC'), ('likely', 'JJ'), ('to', 'TO'), ('be', 'VB'), ('fraudulent', 'JJ'), ('?', '.')] 

 Lemmas are: 
>> [('•', "''"), ('Given', 'give'), ('a', 'a'), ('massive', 'massive'), ('database', 'database'), ('of', 'of'), ('financial', 'financial'), ('data', 'datum'), (',', ','), ('which', 'which'), ('transactions', 'transaction'), ('are', 'be'), ('suspicious', 'suspicious'), ('and', 'and'), ('likely', 'likely'), ('to', 'to'), ('be', 'be'), ('fraudulent', 'fraudulent'), ('?', '?')] 

 Dependency tags are: 
>> [(('•', 'suspicious'), 'punct'), (('Given', 'database'), 'case'), (('a', 'database'), 'det'), (('massive', 'database'), 'amod'), (('database', 'suspicious'), 'obl'), (('of', 'data'), 'case'), (('financial', 'data'), 'amod'), (('data', 'database'), 'nmod'), ((',', 'suspicious'), 'punct'), (('which', 'transactions'), 'det'), (('transactions', 'suspicious'), 'nsubj'), (('are', 'suspicious'), 'cop'), (('suspicious', 'root'), 'root'), (('and', 'likely'), 'cc'), (('likely', 'suspicious'), 'conj'), (('to', 'fraudulent'), 'mark'), (('be', 'fraudulent'), 'cop'), (('fraudulent', 'likely'), 'xcomp'), (('?', 'suspicious'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 188 =================================

• Given the huge number of container shipments arriving at a country’s ports every  day, which should be opened by customs to prevent smuggling, terrorism, etc.? 


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Given the huge number of container shipments arriving at a country’s ports every  day, which should be opened by customs to prevent smuggling, terrorism, etc.? 

Tokens are: 
>> ['Given', 'the', 'huge', 'number', 'of', 'container', 'shipments', 'arriving', 'at', 'a', 'country', '’s', 'ports', 'every', 'day', ',', 'which', 'should', 'be', 'opened', 'by', 'customs', 'to', 'prevent', 'smuggling', ',', 'terrorism', ',', 'etc.?'] 

 UPOS tags are: 
>> [('Given', 'VERB'), ('the', 'DET'), ('huge', 'ADJ'), ('number', 'NOUN'), ('of', 'ADP'), ('container', 'NOUN'), ('shipments', 'NOUN'), ('arriving', 'VERB'), ('at', 'ADP'), ('a', 'DET'), ('country', 'NOUN'), ('’s', 'PART'), ('ports', 'NOUN'), ('every', 'DET'), ('day', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('should', 'AUX'), ('be', 'AUX'), ('opened', 'VERB'), ('by', 'ADP'), ('customs', 'NOUN'), ('to', 'PART'), ('prevent', 'VERB'), ('smuggling', 'NOUN'), (',', 'PUNCT'), ('terrorism', 'NOUN'), (',', 'PUNCT'), ('etc.?', 'NOUN')] 

 XPOS tags are: 
>> [('Given', 'VBN'), ('the', 'DT'), ('huge', 'JJ'), ('number', 'NN'), ('of', 'IN'), ('container', 'NN'), ('shipments', 'NNS'), ('arriving', 'VBG'), ('at', 'IN'), ('a', 'DT'), ('country', 'NN'), ('’s', 'POS'), ('ports', 'NNS'), ('every', 'DT'), ('day', 'NN'), (',', ','), ('which', 'WDT'), ('should', 'MD'), ('be', 'VB'), ('opened', 'VBN'), ('by', 'IN'), ('customs', 'NNS'), ('to', 'TO'), ('prevent', 'VB'), ('smuggling', 'NN'), (',', ','), ('terrorism', 'NN'), (',', ','), ('etc.?', 'NN')] 

 Lemmas are: 
>> [('Given', 'give'), ('the', 'the'), ('huge', 'huge'), ('number', 'number'), ('of', 'of'), ('container', 'container'), ('shipments', 'shipment'), ('arriving', 'arrive'), ('at', 'at'), ('a', 'a'), ('country', 'country'), ('’s', "'s"), ('ports', 'port'), ('every', 'every'), ('day', 'day'), (',', ','), ('which', 'which'), ('should', 'should'), ('be', 'be'), ('opened', 'open'), ('by', 'by'), ('customs', 'custom'), ('to', 'to'), ('prevent', 'prevent'), ('smuggling', 'smuggling'), (',', ','), ('terrorism', 'terrorism'), (',', ','), ('etc.?', 'etc.?')] 

 Dependency tags are: 
>> [(('Given', 'root'), 'root'), (('the', 'number'), 'det'), (('huge', 'number'), 'amod'), (('number', 'Given'), 'obj'), (('of', 'shipments'), 'case'), (('container', 'shipments'), 'compound'), (('shipments', 'number'), 'nmod'), (('arriving', 'shipments'), 'acl'), (('at', 'ports'), 'case'), (('a', 'country'), 'det'), (('country', 'ports'), 'nmod:poss'), (('’s', 'country'), 'case'), (('ports', 'arriving'), 'obl'), (('every', 'day'), 'det'), (('day', 'arriving'), 'obl:tmod'), ((',', 'opened'), 'punct'), (('which', 'opened'), 'nsubj:pass'), (('should', 'opened'), 'aux'), (('be', 'opened'), 'aux:pass'), (('opened', 'shipments'), 'acl:relcl'), (('by', 'customs'), 'case'), (('customs', 'opened'), 'obl'), (('to', 'prevent'), 'mark'), (('prevent', 'opened'), 'advcl'), (('smuggling', 'prevent'), 'obj'), ((',', 'terrorism'), 'punct'), (('terrorism', 'smuggling'), 'conj'), ((',', 'etc.?'), 'punct'), (('etc.?', 'smuggling'), 'conj')]

 Named Entites are: 
>> [('every  day', 'DATE')]

================================ Paragraph 189 =================================

•  Given a log of all the traffic on a computer network, which sessions represent  attempted intrusions? 


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Given a log of all the traffic on a computer network, which sessions represent  attempted intrusions? 

Tokens are: 
>> ['Given', 'a', 'log', 'of', 'all', 'the', 'traffic', 'on', 'a', 'computer', 'network', ',', 'which', 'sessions', 'represent', 'attempted', 'intrusions', '?'] 

 UPOS tags are: 
>> [('Given', 'VERB'), ('a', 'DET'), ('log', 'NOUN'), ('of', 'ADP'), ('all', 'DET'), ('the', 'DET'), ('traffic', 'NOUN'), ('on', 'ADP'), ('a', 'DET'), ('computer', 'NOUN'), ('network', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('sessions', 'NOUN'), ('represent', 'VERB'), ('attempted', 'VERB'), ('intrusions', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Given', 'VBN'), ('a', 'DT'), ('log', 'NN'), ('of', 'IN'), ('all', 'PDT'), ('the', 'DT'), ('traffic', 'NN'), ('on', 'IN'), ('a', 'DT'), ('computer', 'NN'), ('network', 'NN'), (',', ','), ('which', 'WDT'), ('sessions', 'NNS'), ('represent', 'VBP'), ('attempted', 'VBN'), ('intrusions', 'NNS'), ('?', '.')] 

 Lemmas are: 
>> [('Given', 'give'), ('a', 'a'), ('log', 'log'), ('of', 'of'), ('all', 'all'), ('the', 'the'), ('traffic', 'traffic'), ('on', 'on'), ('a', 'a'), ('computer', 'computer'), ('network', 'network'), (',', ','), ('which', 'which'), ('sessions', 'session'), ('represent', 'represent'), ('attempted', 'attempt'), ('intrusions', 'intrusion'), ('?', '?')] 

 Dependency tags are: 
>> [(('Given', 'log'), 'case'), (('a', 'log'), 'det'), (('log', 'root'), 'root'), (('of', 'traffic'), 'case'), (('all', 'traffic'), 'det:predet'), (('the', 'traffic'), 'det'), (('traffic', 'log'), 'nmod'), (('on', 'network'), 'case'), (('a', 'network'), 'det'), (('computer', 'network'), 'compound'), (('network', 'traffic'), 'nmod'), ((',', 'represent'), 'punct'), (('which', 'represent'), 'obj'), (('sessions', 'represent'), 'nsubj'), (('represent', 'network'), 'acl:relcl'), (('attempted', 'intrusions'), 'amod'), (('intrusions', 'represent'), 'obj'), (('?', 'Given'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 190 =================================

Association mining, another set of techniques, can help find correlations  between different products or factors in an organization’s data. For example, if a  customer purchases baby diapers, he or she has a 60 percent chance of purchasing  baby lotion within the next month. By identifying such insights using association  mining, retailers can predict the need for new products and target customers with  coupons and offers before the customer even realizes they are running out of baby  lotion. The most common application of association mining algorithms is in market  basket analysis. 


------------------- Sentence 1 -------------------

 Association mining, another set of techniques, can help find correlations  between different products or factors in an organization’s data. 

Tokens are: 
>> ['Association', 'mining', ',', 'another', 'set', 'of', 'techniques', ',', 'can', 'help', 'find', 'correlations', 'between', 'different', 'products', 'or', 'factors', 'in', 'an', 'organization', '’s', 'data', '.'] 

 UPOS tags are: 
>> [('Association', 'NOUN'), ('mining', 'NOUN'), (',', 'PUNCT'), ('another', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('techniques', 'NOUN'), (',', 'PUNCT'), ('can', 'AUX'), ('help', 'VERB'), ('find', 'VERB'), ('correlations', 'NOUN'), ('between', 'ADP'), ('different', 'ADJ'), ('products', 'NOUN'), ('or', 'CCONJ'), ('factors', 'NOUN'), ('in', 'ADP'), ('an', 'DET'), ('organization', 'NOUN'), ('’s', 'PART'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Association', 'NN'), ('mining', 'NN'), (',', ','), ('another', 'DT'), ('set', 'NN'), ('of', 'IN'), ('techniques', 'NNS'), (',', ','), ('can', 'MD'), ('help', 'VB'), ('find', 'VB'), ('correlations', 'NNS'), ('between', 'IN'), ('different', 'JJ'), ('products', 'NNS'), ('or', 'CC'), ('factors', 'NNS'), ('in', 'IN'), ('an', 'DT'), ('organization', 'NN'), ('’s', 'POS'), ('data', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Association', 'association'), ('mining', 'mining'), (',', ','), ('another', 'another'), ('set', 'set'), ('of', 'of'), ('techniques', 'technique'), (',', ','), ('can', 'can'), ('help', 'help'), ('find', 'find'), ('correlations', 'correlation'), ('between', 'between'), ('different', 'different'), ('products', 'product'), ('or', 'or'), ('factors', 'factor'), ('in', 'in'), ('an', 'a'), ('organization', 'organization'), ('’s', "'s"), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('Association', 'mining'), 'compound'), (('mining', 'help'), 'nsubj'), ((',', 'set'), 'punct'), (('another', 'set'), 'det'), (('set', 'mining'), 'appos'), (('of', 'techniques'), 'case'), (('techniques', 'set'), 'nmod'), ((',', 'help'), 'punct'), (('can', 'help'), 'aux'), (('help', 'root'), 'root'), (('find', 'help'), 'xcomp'), (('correlations', 'find'), 'obj'), (('between', 'products'), 'case'), (('different', 'products'), 'amod'), (('products', 'correlations'), 'nmod'), (('or', 'factors'), 'cc'), (('factors', 'products'), 'conj'), (('in', 'data'), 'case'), (('an', 'organization'), 'det'), (('organization', 'data'), 'nmod:poss'), (('’s', 'organization'), 'case'), (('data', 'products'), 'nmod'), (('.', 'help'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 For example, if a  customer purchases baby diapers, he or she has a 60 percent chance of purchasing  baby lotion within the next month. 

Tokens are: 
>> ['For', 'example', ',', 'if', 'a', 'customer', 'purchases', 'baby', 'diapers', ',', 'he', 'or', 'she', 'has', 'a', '60', 'percent', 'chance', 'of', 'purchasing', 'baby', 'lotion', 'within', 'the', 'next', 'month', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('if', 'SCONJ'), ('a', 'DET'), ('customer', 'NOUN'), ('purchases', 'VERB'), ('baby', 'NOUN'), ('diapers', 'NOUN'), (',', 'PUNCT'), ('he', 'PRON'), ('or', 'CCONJ'), ('she', 'PRON'), ('has', 'VERB'), ('a', 'DET'), ('60', 'NUM'), ('percent', 'NOUN'), ('chance', 'NOUN'), ('of', 'SCONJ'), ('purchasing', 'VERB'), ('baby', 'NOUN'), ('lotion', 'NOUN'), ('within', 'ADP'), ('the', 'DET'), ('next', 'ADJ'), ('month', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('example', 'NN'), (',', ','), ('if', 'IN'), ('a', 'DT'), ('customer', 'NN'), ('purchases', 'VBZ'), ('baby', 'NN'), ('diapers', 'NNS'), (',', ','), ('he', 'PRP'), ('or', 'CC'), ('she', 'PRP'), ('has', 'VBZ'), ('a', 'DT'), ('60', 'CD'), ('percent', 'NN'), ('chance', 'NN'), ('of', 'IN'), ('purchasing', 'VBG'), ('baby', 'NN'), ('lotion', 'NN'), ('within', 'IN'), ('the', 'DT'), ('next', 'JJ'), ('month', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('example', 'example'), (',', ','), ('if', 'if'), ('a', 'a'), ('customer', 'customer'), ('purchases', 'purchase'), ('baby', 'baby'), ('diapers', 'diaper'), (',', ','), ('he', 'he'), ('or', 'or'), ('she', 'she'), ('has', 'have'), ('a', 'a'), ('60', '60'), ('percent', 'percent'), ('chance', 'chance'), ('of', 'of'), ('purchasing', 'purchase'), ('baby', 'baby'), ('lotion', 'lotion'), ('within', 'within'), ('the', 'the'), ('next', 'next'), ('month', 'month'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'example'), 'case'), (('example', 'has'), 'obl'), ((',', 'has'), 'punct'), (('if', 'purchases'), 'mark'), (('a', 'customer'), 'det'), (('customer', 'purchases'), 'nsubj'), (('purchases', 'has'), 'advcl'), (('baby', 'diapers'), 'compound'), (('diapers', 'purchases'), 'obj'), ((',', 'has'), 'punct'), (('he', 'has'), 'nsubj'), (('or', 'she'), 'cc'), (('she', 'he'), 'conj'), (('has', 'root'), 'root'), (('a', 'chance'), 'det'), (('60', 'percent'), 'nummod'), (('percent', 'chance'), 'compound'), (('chance', 'has'), 'obj'), (('of', 'purchasing'), 'mark'), (('purchasing', 'chance'), 'acl'), (('baby', 'lotion'), 'compound'), (('lotion', 'purchasing'), 'obj'), (('within', 'month'), 'case'), (('the', 'month'), 'det'), (('next', 'month'), 'amod'), (('month', 'purchasing'), 'obl'), (('.', 'has'), 'punct')]

 Named Entites are: 
>> [('60 percent', 'PERCENT'), ('the next month', 'DATE')]

------------------- Sentence 3 -------------------

 By identifying such insights using association  mining, retailers can predict the need for new products and target customers with  coupons and offers before the customer even realizes they are running out of baby  lotion. 

Tokens are: 
>> ['By', 'identifying', 'such', 'insights', 'using', 'association', 'mining', ',', 'retailers', 'can', 'predict', 'the', 'need', 'for', 'new', 'products', 'and', 'target', 'customers', 'with', 'coupons', 'and', 'offers', 'before', 'the', 'customer', 'even', 'realizes', 'they', 'are', 'running', 'out', 'of', 'baby', 'lotion', '.'] 

 UPOS tags are: 
>> [('By', 'SCONJ'), ('identifying', 'VERB'), ('such', 'ADJ'), ('insights', 'NOUN'), ('using', 'VERB'), ('association', 'NOUN'), ('mining', 'NOUN'), (',', 'PUNCT'), ('retailers', 'NOUN'), ('can', 'AUX'), ('predict', 'VERB'), ('the', 'DET'), ('need', 'NOUN'), ('for', 'ADP'), ('new', 'ADJ'), ('products', 'NOUN'), ('and', 'CCONJ'), ('target', 'NOUN'), ('customers', 'NOUN'), ('with', 'ADP'), ('coupons', 'NOUN'), ('and', 'CCONJ'), ('offers', 'VERB'), ('before', 'SCONJ'), ('the', 'DET'), ('customer', 'NOUN'), ('even', 'ADV'), ('realizes', 'VERB'), ('they', 'PRON'), ('are', 'AUX'), ('running', 'VERB'), ('out', 'ADP'), ('of', 'ADP'), ('baby', 'NOUN'), ('lotion', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('By', 'IN'), ('identifying', 'VBG'), ('such', 'JJ'), ('insights', 'NNS'), ('using', 'VBG'), ('association', 'NN'), ('mining', 'NN'), (',', ','), ('retailers', 'NNS'), ('can', 'MD'), ('predict', 'VB'), ('the', 'DT'), ('need', 'NN'), ('for', 'IN'), ('new', 'JJ'), ('products', 'NNS'), ('and', 'CC'), ('target', 'NN'), ('customers', 'NNS'), ('with', 'IN'), ('coupons', 'NNS'), ('and', 'CC'), ('offers', 'VBZ'), ('before', 'IN'), ('the', 'DT'), ('customer', 'NN'), ('even', 'RB'), ('realizes', 'VBZ'), ('they', 'PRP'), ('are', 'VBP'), ('running', 'VBG'), ('out', 'IN'), ('of', 'IN'), ('baby', 'NN'), ('lotion', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('By', 'by'), ('identifying', 'identify'), ('such', 'such'), ('insights', 'insight'), ('using', 'use'), ('association', 'association'), ('mining', 'mining'), (',', ','), ('retailers', 'retailer'), ('can', 'can'), ('predict', 'predict'), ('the', 'the'), ('need', 'need'), ('for', 'for'), ('new', 'new'), ('products', 'product'), ('and', 'and'), ('target', 'target'), ('customers', 'customer'), ('with', 'with'), ('coupons', 'coupon'), ('and', 'and'), ('offers', 'offer'), ('before', 'before'), ('the', 'the'), ('customer', 'customer'), ('even', 'even'), ('realizes', 'realize'), ('they', 'they'), ('are', 'be'), ('running', 'run'), ('out', 'out'), ('of', 'of'), ('baby', 'baby'), ('lotion', 'lotion'), ('.', '.')] 

 Dependency tags are: 
>> [(('By', 'identifying'), 'mark'), (('identifying', 'predict'), 'advcl'), (('such', 'insights'), 'amod'), (('insights', 'identifying'), 'obj'), (('using', 'insights'), 'acl'), (('association', 'mining'), 'compound'), (('mining', 'using'), 'obj'), ((',', 'identifying'), 'punct'), (('retailers', 'predict'), 'nsubj'), (('can', 'predict'), 'aux'), (('predict', 'root'), 'root'), (('the', 'need'), 'det'), (('need', 'predict'), 'obj'), (('for', 'products'), 'case'), (('new', 'products'), 'amod'), (('products', 'need'), 'nmod'), (('and', 'customers'), 'cc'), (('target', 'customers'), 'compound'), (('customers', 'products'), 'conj'), (('with', 'coupons'), 'case'), (('coupons', 'products'), 'nmod'), (('and', 'offers'), 'cc'), (('offers', 'predict'), 'conj'), (('before', 'realizes'), 'mark'), (('the', 'customer'), 'det'), (('customer', 'realizes'), 'nsubj'), (('even', 'realizes'), 'advmod'), (('realizes', 'offers'), 'advcl'), (('they', 'running'), 'nsubj'), (('are', 'running'), 'aux'), (('running', 'realizes'), 'ccomp'), (('out', 'lotion'), 'case'), (('of', 'lotion'), 'case'), (('baby', 'lotion'), 'compound'), (('lotion', 'running'), 'obl'), (('.', 'predict'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 The most common application of association mining algorithms is in market  basket analysis. 

Tokens are: 
>> ['The', 'most', 'common', 'application', 'of', 'association', 'mining', 'algorithms', 'is', 'in', 'market', 'basket', 'analysis', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('most', 'ADV'), ('common', 'ADJ'), ('application', 'NOUN'), ('of', 'ADP'), ('association', 'NOUN'), ('mining', 'NOUN'), ('algorithms', 'NOUN'), ('is', 'AUX'), ('in', 'ADP'), ('market', 'NOUN'), ('basket', 'NOUN'), ('analysis', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('most', 'RBS'), ('common', 'JJ'), ('application', 'NN'), ('of', 'IN'), ('association', 'NN'), ('mining', 'NN'), ('algorithms', 'NNS'), ('is', 'VBZ'), ('in', 'IN'), ('market', 'NN'), ('basket', 'NN'), ('analysis', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('most', 'most'), ('common', 'common'), ('application', 'application'), ('of', 'of'), ('association', 'association'), ('mining', 'mining'), ('algorithms', 'algorithm'), ('is', 'be'), ('in', 'in'), ('market', 'market'), ('basket', 'basket'), ('analysis', 'analysis'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'application'), 'det'), (('most', 'common'), 'advmod'), (('common', 'application'), 'amod'), (('application', 'analysis'), 'nsubj'), (('of', 'algorithms'), 'case'), (('association', 'mining'), 'compound'), (('mining', 'algorithms'), 'compound'), (('algorithms', 'application'), 'nmod'), (('is', 'analysis'), 'cop'), (('in', 'analysis'), 'case'), (('market', 'basket'), 'compound'), (('basket', 'analysis'), 'compound'), (('analysis', 'root'), 'root'), (('.', 'analysis'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 191 =================================

Unsupervised learning 


------------------- Sentence 1 -------------------

 Unsupervised learning 

Tokens are: 
>> ['Unsupervised', 'learning'] 

 UPOS tags are: 
>> [('Unsupervised', 'VERB'), ('learning', 'NOUN')] 

 XPOS tags are: 
>> [('Unsupervised', 'VBN'), ('learning', 'NN')] 

 Lemmas are: 
>> [('Unsupervised', 'unsupervise'), ('learning', 'learning')] 

 Dependency tags are: 
>> [(('Unsupervised', 'learning'), 'amod'), (('learning', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 192 =================================

Clustering Anomaly detection Association mining 


------------------- Sentence 1 -------------------

 Clustering Anomaly detection Association mining 

Tokens are: 
>> ['Clustering', 'Anomaly', 'detection', 'Association', 'mining'] 

 UPOS tags are: 
>> [('Clustering', 'NOUN'), ('Anomaly', 'ADJ'), ('detection', 'NOUN'), ('Association', 'NOUN'), ('mining', 'NOUN')] 

 XPOS tags are: 
>> [('Clustering', 'NN'), ('Anomaly', 'JJ'), ('detection', 'NN'), ('Association', 'NN'), ('mining', 'NN')] 

 Lemmas are: 
>> [('Clustering', 'clustering'), ('Anomaly', 'anomaly'), ('detection', 'detection'), ('Association', 'association'), ('mining', 'mining')] 

 Dependency tags are: 
>> [(('Clustering', 'mining'), 'compound'), (('Anomaly', 'mining'), 'amod'), (('detection', 'Association'), 'compound'), (('Association', 'mining'), 'compound'), (('mining', 'root'), 'root')]

 Named Entites are: 
>> [('Anomaly detection Association', 'ORG')]

================================ Paragraph 193 =================================

Partition	the	data	 set	into	X	groups	 so	that	records		in	 the	same	group	 are	similar	to	each	 other,	and		records	 in	different	groups	 are	dissimilar 


------------------- Sentence 1 -------------------

 Partition	the	data	 set	into	X	groups	 so	that	records		in	 the	same	group	 are	similar	to	each	 other,	and		records	 in	different	groups	 are	dissimilar 

Tokens are: 
>> ['Partition', 'the', 'data', 'set', 'into', 'X', 'groups', 'so', 'that', 'records', 'in', 'the', 'same', 'group', 'are', 'similar', 'to', 'each', 'other', ',', 'and', 'records', 'in', 'different', 'groups', 'are', 'dissimilar'] 

 UPOS tags are: 
>> [('Partition', 'VERB'), ('the', 'DET'), ('data', 'NOUN'), ('set', 'VERB'), ('into', 'ADP'), ('X', 'NOUN'), ('groups', 'NOUN'), ('so', 'SCONJ'), ('that', 'SCONJ'), ('records', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('same', 'ADJ'), ('group', 'NOUN'), ('are', 'AUX'), ('similar', 'ADJ'), ('to', 'ADP'), ('each', 'DET'), ('other', 'ADJ'), (',', 'PUNCT'), ('and', 'CCONJ'), ('records', 'NOUN'), ('in', 'ADP'), ('different', 'ADJ'), ('groups', 'NOUN'), ('are', 'AUX'), ('dissimilar', 'ADJ')] 

 XPOS tags are: 
>> [('Partition', 'VB'), ('the', 'DT'), ('data', 'NNS'), ('set', 'VBN'), ('into', 'IN'), ('X', 'NN'), ('groups', 'NNS'), ('so', 'IN'), ('that', 'IN'), ('records', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('same', 'JJ'), ('group', 'NN'), ('are', 'VBP'), ('similar', 'JJ'), ('to', 'IN'), ('each', 'DT'), ('other', 'JJ'), (',', ','), ('and', 'CC'), ('records', 'NNS'), ('in', 'IN'), ('different', 'JJ'), ('groups', 'NNS'), ('are', 'VBP'), ('dissimilar', 'JJ')] 

 Lemmas are: 
>> [('Partition', 'partition'), ('the', 'the'), ('data', 'datum'), ('set', 'set'), ('into', 'into'), ('X', 'x'), ('groups', 'group'), ('so', 'so'), ('that', 'that'), ('records', 'record'), ('in', 'in'), ('the', 'the'), ('same', 'same'), ('group', 'group'), ('are', 'be'), ('similar', 'similar'), ('to', 'to'), ('each', 'each'), ('other', 'other'), (',', ','), ('and', 'and'), ('records', 'record'), ('in', 'in'), ('different', 'different'), ('groups', 'group'), ('are', 'be'), ('dissimilar', 'dissimilar')] 

 Dependency tags are: 
>> [(('Partition', 'root'), 'root'), (('the', 'data'), 'det'), (('data', 'Partition'), 'obj'), (('set', 'data'), 'acl'), (('into', 'groups'), 'case'), (('X', 'groups'), 'compound'), (('groups', 'set'), 'obl'), (('so', 'similar'), 'mark'), (('that', 'so'), 'fixed'), (('records', 'similar'), 'nsubj'), (('in', 'group'), 'case'), (('the', 'group'), 'det'), (('same', 'group'), 'amod'), (('group', 'records'), 'nmod'), (('are', 'similar'), 'cop'), (('similar', 'Partition'), 'advcl'), (('to', 'other'), 'case'), (('each', 'other'), 'det'), (('other', 'similar'), 'obl'), ((',', 'dissimilar'), 'punct'), (('and', 'dissimilar'), 'cc'), (('records', 'dissimilar'), 'nsubj'), (('in', 'groups'), 'case'), (('different', 'groups'), 'amod'), (('groups', 'records'), 'nmod'), (('are', 'dissimilar'), 'cop'), (('dissimilar', 'Partition'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 194 =================================

Identification	 of	rare	items,	 events	or	 observations	which	 raise	suspicion	 by	differing	 significantly	from	 	the	majority	of	the	 data 


------------------- Sentence 1 -------------------

 Identification	 of	rare	items,	 events	or	 observations	which	 raise	suspicion	 by	differing	 significantly	from	 	the	majority	of	the	 data 

Tokens are: 
>> ['Identification', 'of', 'rare', 'items', ',', 'events', 'or', 'observations', 'which', 'raise', 'suspicion', 'by', 'differing', 'significantly', 'from', 'the', 'majority', 'of', 'the', 'data'] 

 UPOS tags are: 
>> [('Identification', 'NOUN'), ('of', 'ADP'), ('rare', 'ADJ'), ('items', 'NOUN'), (',', 'PUNCT'), ('events', 'NOUN'), ('or', 'CCONJ'), ('observations', 'NOUN'), ('which', 'PRON'), ('raise', 'VERB'), ('suspicion', 'NOUN'), ('by', 'SCONJ'), ('differing', 'VERB'), ('significantly', 'ADV'), ('from', 'ADP'), ('the', 'DET'), ('majority', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('data', 'NOUN')] 

 XPOS tags are: 
>> [('Identification', 'NN'), ('of', 'IN'), ('rare', 'JJ'), ('items', 'NNS'), (',', ','), ('events', 'NNS'), ('or', 'CC'), ('observations', 'NNS'), ('which', 'WDT'), ('raise', 'VBP'), ('suspicion', 'NN'), ('by', 'IN'), ('differing', 'VBG'), ('significantly', 'RB'), ('from', 'IN'), ('the', 'DT'), ('majority', 'NN'), ('of', 'IN'), ('the', 'DT'), ('data', 'NNS')] 

 Lemmas are: 
>> [('Identification', 'identification'), ('of', 'of'), ('rare', 'rare'), ('items', 'item'), (',', ','), ('events', 'event'), ('or', 'or'), ('observations', 'observation'), ('which', 'which'), ('raise', 'raise'), ('suspicion', 'suspicion'), ('by', 'by'), ('differing', 'differ'), ('significantly', 'significantly'), ('from', 'from'), ('the', 'the'), ('majority', 'majority'), ('of', 'of'), ('the', 'the'), ('data', 'datum')] 

 Dependency tags are: 
>> [(('Identification', 'root'), 'root'), (('of', 'items'), 'case'), (('rare', 'items'), 'amod'), (('items', 'Identification'), 'nmod'), ((',', 'events'), 'punct'), (('events', 'items'), 'conj'), (('or', 'observations'), 'cc'), (('observations', 'items'), 'conj'), (('which', 'raise'), 'nsubj'), (('raise', 'items'), 'acl:relcl'), (('suspicion', 'raise'), 'obj'), (('by', 'differing'), 'mark'), (('differing', 'raise'), 'advcl'), (('significantly', 'differing'), 'advmod'), (('from', 'majority'), 'case'), (('the', 'majority'), 'det'), (('majority', 'differing'), 'obl'), (('of', 'data'), 'case'), (('the', 'data'), 'det'), (('data', 'majority'), 'nmod')]

 Named Entites are: 
>> []

================================ Paragraph 195 =================================

Find	frequent	 patterns,	 correlations	and	 	associations	 among	a	set	of	 items	in	relational	 	and	transaction	 databases 


------------------- Sentence 1 -------------------

 Find	frequent	 patterns,	 correlations	and	 	associations	 among	a	set	of	 items	in	relational	 	and	transaction	 databases 

Tokens are: 
>> ['Find', 'frequent', 'patterns', ',', 'correlations', 'and', 'associations', 'among', 'a', 'set', 'of', 'items', 'in', 'relational', 'and', 'transaction', 'databases'] 

 UPOS tags are: 
>> [('Find', 'VERB'), ('frequent', 'ADJ'), ('patterns', 'NOUN'), (',', 'PUNCT'), ('correlations', 'NOUN'), ('and', 'CCONJ'), ('associations', 'NOUN'), ('among', 'ADP'), ('a', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('items', 'NOUN'), ('in', 'ADP'), ('relational', 'ADJ'), ('and', 'CCONJ'), ('transaction', 'NOUN'), ('databases', 'NOUN')] 

 XPOS tags are: 
>> [('Find', 'VB'), ('frequent', 'JJ'), ('patterns', 'NNS'), (',', ','), ('correlations', 'NNS'), ('and', 'CC'), ('associations', 'NNS'), ('among', 'IN'), ('a', 'DT'), ('set', 'NN'), ('of', 'IN'), ('items', 'NNS'), ('in', 'IN'), ('relational', 'JJ'), ('and', 'CC'), ('transaction', 'NN'), ('databases', 'NNS')] 

 Lemmas are: 
>> [('Find', 'find'), ('frequent', 'frequent'), ('patterns', 'pattern'), (',', ','), ('correlations', 'correlation'), ('and', 'and'), ('associations', 'association'), ('among', 'among'), ('a', 'a'), ('set', 'set'), ('of', 'of'), ('items', 'item'), ('in', 'in'), ('relational', 'relational'), ('and', 'and'), ('transaction', 'transaction'), ('databases', 'database')] 

 Dependency tags are: 
>> [(('Find', 'root'), 'root'), (('frequent', 'patterns'), 'amod'), (('patterns', 'Find'), 'obj'), ((',', 'correlations'), 'punct'), (('correlations', 'patterns'), 'conj'), (('and', 'associations'), 'cc'), (('associations', 'patterns'), 'conj'), (('among', 'set'), 'case'), (('a', 'set'), 'det'), (('set', 'Find'), 'obl'), (('of', 'items'), 'case'), (('items', 'set'), 'nmod'), (('in', 'databases'), 'case'), (('relational', 'databases'), 'amod'), (('and', 'transaction'), 'cc'), (('transaction', 'relational'), 'conj'), (('databases', 'items'), 'nmod')]

 Named Entites are: 
>> []

================================ Paragraph 196 =================================

U ns 


------------------- Sentence 1 -------------------

 U ns 

Tokens are: 
>> ['U', 'ns'] 

 UPOS tags are: 
>> [('U', 'PROPN'), ('ns', 'PROPN')] 

 XPOS tags are: 
>> [('U', 'NNP'), ('ns', 'NNP')] 

 Lemmas are: 
>> [('U', 'U'), ('ns', 'ns')] 

 Dependency tags are: 
>> [(('U', 'root'), 'root'), (('ns', 'U'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 197 =================================

up er 


------------------- Sentence 1 -------------------

 up er 

Tokens are: 
>> ['up', 'er'] 

 UPOS tags are: 
>> [('up', 'ADP'), ('er', 'NOUN')] 

 XPOS tags are: 
>> [('up', 'IN'), ('er', 'NN')] 

 Lemmas are: 
>> [('up', 'up'), ('er', 'er')] 

 Dependency tags are: 
>> [(('up', 'er'), 'case'), (('er', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 198 =================================

vi se 


------------------- Sentence 1 -------------------

 vi se 

Tokens are: 
>> ['vi', 'se'] 

 UPOS tags are: 
>> [('vi', 'X'), ('se', 'PROPN')] 

 XPOS tags are: 
>> [('vi', 'LS'), ('se', 'NNP')] 

 Lemmas are: 
>> [('vi', 'vi'), ('se', 'se')] 

 Dependency tags are: 
>> [(('vi', 'se'), 'dep'), (('se', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 199 =================================

d  le 


------------------- Sentence 1 -------------------

 d  le 

Tokens are: 
>> ['d', 'le'] 

 UPOS tags are: 
>> [('d', 'PROPN'), ('le', 'PROPN')] 

 XPOS tags are: 
>> [('d', 'NNP'), ('le', 'NNP')] 

 Lemmas are: 
>> [('d', 'd'), ('le', 'le')] 

 Dependency tags are: 
>> [(('d', 'root'), 'root'), (('le', 'd'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 200 =================================

ar ni 


------------------- Sentence 1 -------------------

 ar ni 

Tokens are: 
>> ['ar', 'ni'] 

 UPOS tags are: 
>> [('ar', 'INTJ'), ('ni', 'PUNCT')] 

 XPOS tags are: 
>> [('ar', 'UH'), ('ni', '.')] 

 Lemmas are: 
>> [('ar', 'be'), ('ni', 'ni')] 

 Dependency tags are: 
>> [(('ar', 'root'), 'root'), (('ni', 'ar'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 201 =================================

ng 


------------------- Sentence 1 -------------------

 ng 

Tokens are: 
>> ['ng'] 

 UPOS tags are: 
>> [('ng', 'PROPN')] 

 XPOS tags are: 
>> [('ng', 'NNP')] 

 Lemmas are: 
>> [('ng', 'be')] 

 Dependency tags are: 
>> [(('ng', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 202 =================================

Clustering 


------------------- Sentence 1 -------------------

 Clustering 

Tokens are: 
>> ['Clustering'] 

 UPOS tags are: 
>> [('Clustering', 'NOUN')] 

 XPOS tags are: 
>> [('Clustering', 'NN')] 

 Lemmas are: 
>> [('Clustering', 'clustering')] 

 Dependency tags are: 
>> [(('Clustering', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 203 =================================

Anomaly detection 


------------------- Sentence 1 -------------------

 Anomaly detection 

Tokens are: 
>> ['Anomaly', 'detection'] 

 UPOS tags are: 
>> [('Anomaly', 'ADJ'), ('detection', 'NOUN')] 

 XPOS tags are: 
>> [('Anomaly', 'JJ'), ('detection', 'NN')] 

 Lemmas are: 
>> [('Anomaly', 'anomaly'), ('detection', 'detection')] 

 Dependency tags are: 
>> [(('Anomaly', 'detection'), 'amod'), (('detection', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 204 =================================

Association mining 


------------------- Sentence 1 -------------------

 Association mining 

Tokens are: 
>> ['Association', 'mining'] 

 UPOS tags are: 
>> [('Association', 'NOUN'), ('mining', 'NOUN')] 

 XPOS tags are: 
>> [('Association', 'NN'), ('mining', 'NN')] 

 Lemmas are: 
>> [('Association', 'association'), ('mining', 'mining')] 

 Dependency tags are: 
>> [(('Association', 'mining'), 'compound'), (('mining', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 205 =================================

Partition the data set into X groups so that records  in the same group are similar to each other, and  records in different groups are dissimilar 


------------------- Sentence 1 -------------------

 Partition the data set into X groups so that records  in the same group are similar to each other, and  records in different groups are dissimilar 

Tokens are: 
>> ['Partition', 'the', 'data', 'set', 'into', 'X', 'groups', 'so', 'that', 'records', 'in', 'the', 'same', 'group', 'are', 'similar', 'to', 'each', 'other', ',', 'and', 'records', 'in', 'different', 'groups', 'are', 'dissimilar'] 

 UPOS tags are: 
>> [('Partition', 'VERB'), ('the', 'DET'), ('data', 'NOUN'), ('set', 'VERB'), ('into', 'ADP'), ('X', 'NOUN'), ('groups', 'NOUN'), ('so', 'SCONJ'), ('that', 'SCONJ'), ('records', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('same', 'ADJ'), ('group', 'NOUN'), ('are', 'AUX'), ('similar', 'ADJ'), ('to', 'ADP'), ('each', 'DET'), ('other', 'ADJ'), (',', 'PUNCT'), ('and', 'CCONJ'), ('records', 'NOUN'), ('in', 'ADP'), ('different', 'ADJ'), ('groups', 'NOUN'), ('are', 'AUX'), ('dissimilar', 'ADJ')] 

 XPOS tags are: 
>> [('Partition', 'VB'), ('the', 'DT'), ('data', 'NNS'), ('set', 'VBN'), ('into', 'IN'), ('X', 'NN'), ('groups', 'NNS'), ('so', 'IN'), ('that', 'IN'), ('records', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('same', 'JJ'), ('group', 'NN'), ('are', 'VBP'), ('similar', 'JJ'), ('to', 'IN'), ('each', 'DT'), ('other', 'JJ'), (',', ','), ('and', 'CC'), ('records', 'NNS'), ('in', 'IN'), ('different', 'JJ'), ('groups', 'NNS'), ('are', 'VBP'), ('dissimilar', 'JJ')] 

 Lemmas are: 
>> [('Partition', 'partition'), ('the', 'the'), ('data', 'datum'), ('set', 'set'), ('into', 'into'), ('X', 'x'), ('groups', 'group'), ('so', 'so'), ('that', 'that'), ('records', 'record'), ('in', 'in'), ('the', 'the'), ('same', 'same'), ('group', 'group'), ('are', 'be'), ('similar', 'similar'), ('to', 'to'), ('each', 'each'), ('other', 'other'), (',', ','), ('and', 'and'), ('records', 'record'), ('in', 'in'), ('different', 'different'), ('groups', 'group'), ('are', 'be'), ('dissimilar', 'dissimilar')] 

 Dependency tags are: 
>> [(('Partition', 'root'), 'root'), (('the', 'data'), 'det'), (('data', 'Partition'), 'obj'), (('set', 'data'), 'acl'), (('into', 'groups'), 'case'), (('X', 'groups'), 'compound'), (('groups', 'set'), 'obl'), (('so', 'similar'), 'mark'), (('that', 'so'), 'fixed'), (('records', 'similar'), 'nsubj'), (('in', 'group'), 'case'), (('the', 'group'), 'det'), (('same', 'group'), 'amod'), (('group', 'records'), 'nmod'), (('are', 'similar'), 'cop'), (('similar', 'Partition'), 'advcl'), (('to', 'other'), 'case'), (('each', 'other'), 'det'), (('other', 'similar'), 'obl'), ((',', 'dissimilar'), 'punct'), (('and', 'dissimilar'), 'cc'), (('records', 'dissimilar'), 'nsubj'), (('in', 'groups'), 'case'), (('different', 'groups'), 'amod'), (('groups', 'records'), 'nmod'), (('are', 'dissimilar'), 'cop'), (('dissimilar', 'Partition'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 206 =================================

Identification of rare items, events or observations which raise suspicion by differing significantly from  the majority of the data 


------------------- Sentence 1 -------------------

 Identification of rare items, events or observations which raise suspicion by differing significantly from  the majority of the data 

Tokens are: 
>> ['Identification', 'of', 'rare', 'items', ',', 'events', 'or', 'observations', 'which', 'raise', 'suspicion', 'by', 'differing', 'significantly', 'from', 'the', 'majority', 'of', 'the', 'data'] 

 UPOS tags are: 
>> [('Identification', 'NOUN'), ('of', 'ADP'), ('rare', 'ADJ'), ('items', 'NOUN'), (',', 'PUNCT'), ('events', 'NOUN'), ('or', 'CCONJ'), ('observations', 'NOUN'), ('which', 'PRON'), ('raise', 'VERB'), ('suspicion', 'NOUN'), ('by', 'SCONJ'), ('differing', 'VERB'), ('significantly', 'ADV'), ('from', 'ADP'), ('the', 'DET'), ('majority', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('data', 'NOUN')] 

 XPOS tags are: 
>> [('Identification', 'NN'), ('of', 'IN'), ('rare', 'JJ'), ('items', 'NNS'), (',', ','), ('events', 'NNS'), ('or', 'CC'), ('observations', 'NNS'), ('which', 'WDT'), ('raise', 'VBP'), ('suspicion', 'NN'), ('by', 'IN'), ('differing', 'VBG'), ('significantly', 'RB'), ('from', 'IN'), ('the', 'DT'), ('majority', 'NN'), ('of', 'IN'), ('the', 'DT'), ('data', 'NNS')] 

 Lemmas are: 
>> [('Identification', 'identification'), ('of', 'of'), ('rare', 'rare'), ('items', 'item'), (',', ','), ('events', 'event'), ('or', 'or'), ('observations', 'observation'), ('which', 'which'), ('raise', 'raise'), ('suspicion', 'suspicion'), ('by', 'by'), ('differing', 'differ'), ('significantly', 'significantly'), ('from', 'from'), ('the', 'the'), ('majority', 'majority'), ('of', 'of'), ('the', 'the'), ('data', 'datum')] 

 Dependency tags are: 
>> [(('Identification', 'root'), 'root'), (('of', 'items'), 'case'), (('rare', 'items'), 'amod'), (('items', 'Identification'), 'nmod'), ((',', 'events'), 'punct'), (('events', 'items'), 'conj'), (('or', 'observations'), 'cc'), (('observations', 'items'), 'conj'), (('which', 'raise'), 'nsubj'), (('raise', 'items'), 'acl:relcl'), (('suspicion', 'raise'), 'obj'), (('by', 'differing'), 'mark'), (('differing', 'raise'), 'advcl'), (('significantly', 'differing'), 'advmod'), (('from', 'majority'), 'case'), (('the', 'majority'), 'det'), (('majority', 'differing'), 'obl'), (('of', 'data'), 'case'), (('the', 'data'), 'det'), (('data', 'majority'), 'nmod')]

 Named Entites are: 
>> []

================================ Paragraph 207 =================================

Find frequent patterns, correlations and  associations among a set of items in relational  and transaction databases


------------------- Sentence 1 -------------------

 Find frequent patterns, correlations and  associations among a set of items in relational  and transaction databases 

Tokens are: 
>> ['Find', 'frequent', 'patterns', ',', 'correlations', 'and', 'associations', 'among', 'a', 'set', 'of', 'items', 'in', 'relational', 'and', 'transaction', 'databases'] 

 UPOS tags are: 
>> [('Find', 'VERB'), ('frequent', 'ADJ'), ('patterns', 'NOUN'), (',', 'PUNCT'), ('correlations', 'NOUN'), ('and', 'CCONJ'), ('associations', 'NOUN'), ('among', 'ADP'), ('a', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('items', 'NOUN'), ('in', 'ADP'), ('relational', 'ADJ'), ('and', 'CCONJ'), ('transaction', 'NOUN'), ('databases', 'NOUN')] 

 XPOS tags are: 
>> [('Find', 'VB'), ('frequent', 'JJ'), ('patterns', 'NNS'), (',', ','), ('correlations', 'NNS'), ('and', 'CC'), ('associations', 'NNS'), ('among', 'IN'), ('a', 'DT'), ('set', 'NN'), ('of', 'IN'), ('items', 'NNS'), ('in', 'IN'), ('relational', 'JJ'), ('and', 'CC'), ('transaction', 'NN'), ('databases', 'NNS')] 

 Lemmas are: 
>> [('Find', 'find'), ('frequent', 'frequent'), ('patterns', 'pattern'), (',', ','), ('correlations', 'correlation'), ('and', 'and'), ('associations', 'association'), ('among', 'among'), ('a', 'a'), ('set', 'set'), ('of', 'of'), ('items', 'item'), ('in', 'in'), ('relational', 'relational'), ('and', 'and'), ('transaction', 'transaction'), ('databases', 'database')] 

 Dependency tags are: 
>> [(('Find', 'root'), 'root'), (('frequent', 'patterns'), 'amod'), (('patterns', 'Find'), 'obj'), ((',', 'correlations'), 'punct'), (('correlations', 'patterns'), 'conj'), (('and', 'associations'), 'cc'), (('associations', 'patterns'), 'conj'), (('among', 'set'), 'case'), (('a', 'set'), 'det'), (('set', 'Find'), 'obl'), (('of', 'items'), 'case'), (('items', 'set'), 'nmod'), (('in', 'databases'), 'case'), (('relational', 'databases'), 'amod'), (('and', 'transaction'), 'cc'), (('transaction', 'relational'), 'conj'), (('databases', 'items'), 'nmod')]

 Named Entites are: 
>> []

================================ Paragraph 208 =================================

13/14Demystifying data science  


------------------- Sentence 1 -------------------

 13/14 

Tokens are: 
>> ['13/14'] 

 UPOS tags are: 
>> [('13/14', 'NUM')] 

 XPOS tags are: 
>> [('13/14', 'CD')] 

 Lemmas are: 
>> [('13/14', '13/14')] 

 Dependency tags are: 
>> [(('13/14', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Demystifying data science 

Tokens are: 
>> ['Demystifying', 'data', 'science'] 

 UPOS tags are: 
>> [('Demystifying', 'VERB'), ('data', 'NOUN'), ('science', 'NOUN')] 

 XPOS tags are: 
>> [('Demystifying', 'VBG'), ('data', 'NN'), ('science', 'NN')] 

 Lemmas are: 
>> [('Demystifying', 'demystify'), ('data', 'datum'), ('science', 'science')] 

 Dependency tags are: 
>> [(('Demystifying', 'root'), 'root'), (('data', 'science'), 'compound'), (('science', 'Demystifying'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 209 =================================

Natural language processing (NLP) 


------------------- Sentence 1 -------------------

 Natural language processing (NLP) 

Tokens are: 
>> ['Natural', 'language', 'processing', '(', 'NLP', ')'] 

 UPOS tags are: 
>> [('Natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), ('(', 'PUNCT'), ('NLP', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Natural', 'JJ'), ('language', 'NN'), ('processing', 'NN'), ('(', '-LRB-'), ('NLP', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Natural', 'Natural'), ('language', 'language'), ('processing', 'processing'), ('(', '('), ('NLP', 'nlp'), (')', ')')] 

 Dependency tags are: 
>> [(('Natural', 'language'), 'amod'), (('language', 'processing'), 'compound'), (('processing', 'root'), 'root'), (('(', 'NLP'), 'punct'), (('NLP', 'processing'), 'appos'), ((')', 'NLP'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 210 =================================

Natural language processing is a set of systematic processes for intelligently  and efficiently analyzing, understanding and deriving information from text data.  It can organize massive amounts of text data and perform numerous automated  tasks, such as automatic summarization, machine translation, named entity  recognition, relationship extraction, sentiment analysis, speech recognition and  topic segmentation. 


------------------- Sentence 1 -------------------

 Natural language processing is a set of systematic processes for intelligently  and efficiently analyzing, understanding and deriving information from text data. 

Tokens are: 
>> ['Natural', 'language', 'processing', 'is', 'a', 'set', 'of', 'systematic', 'processes', 'for', 'intelligently', 'and', 'efficiently', 'analyzing', ',', 'understanding', 'and', 'deriving', 'information', 'from', 'text', 'data', '.'] 

 UPOS tags are: 
>> [('Natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('systematic', 'ADJ'), ('processes', 'NOUN'), ('for', 'ADP'), ('intelligently', 'ADV'), ('and', 'CCONJ'), ('efficiently', 'ADV'), ('analyzing', 'VERB'), (',', 'PUNCT'), ('understanding', 'NOUN'), ('and', 'CCONJ'), ('deriving', 'VERB'), ('information', 'NOUN'), ('from', 'ADP'), ('text', 'NOUN'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Natural', 'JJ'), ('language', 'NN'), ('processing', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('set', 'NN'), ('of', 'IN'), ('systematic', 'JJ'), ('processes', 'NNS'), ('for', 'IN'), ('intelligently', 'RB'), ('and', 'CC'), ('efficiently', 'RB'), ('analyzing', 'VBG'), (',', ','), ('understanding', 'NN'), ('and', 'CC'), ('deriving', 'VBG'), ('information', 'NN'), ('from', 'IN'), ('text', 'NN'), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Natural', 'Natural'), ('language', 'language'), ('processing', 'processing'), ('is', 'be'), ('a', 'a'), ('set', 'set'), ('of', 'of'), ('systematic', 'systematic'), ('processes', 'process'), ('for', 'for'), ('intelligently', 'intelligently'), ('and', 'and'), ('efficiently', 'efficiently'), ('analyzing', 'analyze'), (',', ','), ('understanding', 'understanding'), ('and', 'and'), ('deriving', 'derive'), ('information', 'information'), ('from', 'from'), ('text', 'text'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('Natural', 'processing'), 'amod'), (('language', 'processing'), 'compound'), (('processing', 'set'), 'nsubj'), (('is', 'set'), 'cop'), (('a', 'set'), 'det'), (('set', 'root'), 'root'), (('of', 'processes'), 'case'), (('systematic', 'processes'), 'amod'), (('processes', 'set'), 'nmod'), (('for', 'information'), 'case'), (('intelligently', 'analyzing'), 'advmod'), (('and', 'efficiently'), 'cc'), (('efficiently', 'intelligently'), 'conj'), (('analyzing', 'information'), 'amod'), ((',', 'understanding'), 'punct'), (('understanding', 'analyzing'), 'conj'), (('and', 'deriving'), 'cc'), (('deriving', 'analyzing'), 'conj'), (('information', 'processes'), 'nmod'), (('from', 'data'), 'case'), (('text', 'data'), 'compound'), (('data', 'information'), 'nmod'), (('.', 'set'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 It can organize massive amounts of text data and perform numerous automated  tasks, such as automatic summarization, machine translation, named entity  recognition, relationship extraction, sentiment analysis, speech recognition and  topic segmentation. 

Tokens are: 
>> ['It', 'can', 'organize', 'massive', 'amounts', 'of', 'text', 'data', 'and', 'perform', 'numerous', 'automated', 'tasks', ',', 'such', 'as', 'automatic', 'summarization', ',', 'machine', 'translation', ',', 'named', 'entity', 'recognition', ',', 'relationship', 'extraction', ',', 'sentiment', 'analysis', ',', 'speech', 'recognition', 'and', 'topic', 'segmentation', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('can', 'AUX'), ('organize', 'VERB'), ('massive', 'ADJ'), ('amounts', 'NOUN'), ('of', 'ADP'), ('text', 'NOUN'), ('data', 'NOUN'), ('and', 'CCONJ'), ('perform', 'VERB'), ('numerous', 'ADJ'), ('automated', 'VERB'), ('tasks', 'NOUN'), (',', 'PUNCT'), ('such', 'ADJ'), ('as', 'ADP'), ('automatic', 'ADJ'), ('summarization', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('translation', 'NOUN'), (',', 'PUNCT'), ('named', 'VERB'), ('entity', 'NOUN'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('relationship', 'NOUN'), ('extraction', 'NOUN'), (',', 'PUNCT'), ('sentiment', 'NOUN'), ('analysis', 'NOUN'), (',', 'PUNCT'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('and', 'CCONJ'), ('topic', 'NOUN'), ('segmentation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('can', 'MD'), ('organize', 'VB'), ('massive', 'JJ'), ('amounts', 'NNS'), ('of', 'IN'), ('text', 'NN'), ('data', 'NNS'), ('and', 'CC'), ('perform', 'VB'), ('numerous', 'JJ'), ('automated', 'VBN'), ('tasks', 'NNS'), (',', ','), ('such', 'JJ'), ('as', 'IN'), ('automatic', 'JJ'), ('summarization', 'NN'), (',', ','), ('machine', 'NN'), ('translation', 'NN'), (',', ','), ('named', 'VBN'), ('entity', 'NN'), ('recognition', 'NN'), (',', ','), ('relationship', 'NN'), ('extraction', 'NN'), (',', ','), ('sentiment', 'NN'), ('analysis', 'NN'), (',', ','), ('speech', 'NN'), ('recognition', 'NN'), ('and', 'CC'), ('topic', 'NN'), ('segmentation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('can', 'can'), ('organize', 'organize'), ('massive', 'massive'), ('amounts', 'amount'), ('of', 'of'), ('text', 'text'), ('data', 'datum'), ('and', 'and'), ('perform', 'perform'), ('numerous', 'numerous'), ('automated', 'automated'), ('tasks', 'task'), (',', ','), ('such', 'such'), ('as', 'as'), ('automatic', 'automatic'), ('summarization', 'summarization'), (',', ','), ('machine', 'machine'), ('translation', 'translation'), (',', ','), ('named', 'name'), ('entity', 'entity'), ('recognition', 'recognition'), (',', ','), ('relationship', 'relationship'), ('extraction', 'extraction'), (',', ','), ('sentiment', 'sentiment'), ('analysis', 'analysis'), (',', ','), ('speech', 'speech'), ('recognition', 'recognition'), ('and', 'and'), ('topic', 'topic'), ('segmentation', 'segmentation'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'organize'), 'nsubj'), (('can', 'organize'), 'aux'), (('organize', 'root'), 'root'), (('massive', 'amounts'), 'amod'), (('amounts', 'organize'), 'obj'), (('of', 'data'), 'case'), (('text', 'data'), 'compound'), (('data', 'amounts'), 'nmod'), (('and', 'perform'), 'cc'), (('perform', 'organize'), 'conj'), (('numerous', 'tasks'), 'amod'), (('automated', 'tasks'), 'amod'), (('tasks', 'perform'), 'obj'), ((',', 'summarization'), 'punct'), (('such', 'summarization'), 'case'), (('as', 'such'), 'fixed'), (('automatic', 'summarization'), 'amod'), (('summarization', 'tasks'), 'nmod'), ((',', 'translation'), 'punct'), (('machine', 'translation'), 'compound'), (('translation', 'summarization'), 'conj'), ((',', 'named'), 'punct'), (('named', 'summarization'), 'acl'), (('entity', 'recognition'), 'compound'), (('recognition', 'summarization'), 'conj'), ((',', 'extraction'), 'punct'), (('relationship', 'extraction'), 'compound'), (('extraction', 'summarization'), 'conj'), ((',', 'analysis'), 'punct'), (('sentiment', 'analysis'), 'compound'), (('analysis', 'summarization'), 'conj'), ((',', 'recognition'), 'punct'), (('speech', 'recognition'), 'compound'), (('recognition', 'summarization'), 'conj'), (('and', 'segmentation'), 'cc'), (('topic', 'segmentation'), 'compound'), (('segmentation', 'summarization'), 'conj'), (('.', 'organize'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 211 =================================

Key questions to ask and how to define high value use-cases To identify meaningful and high value use-cases for teams and organizations, it is  important to gather relevant information and requirements on three key pillars.  


------------------- Sentence 1 -------------------

 Key questions to ask and how to define high value use-cases 

Tokens are: 
>> ['Key', 'questions', 'to', 'ask', 'and', 'how', 'to', 'define', 'high', 'value', 'use-cases'] 

 UPOS tags are: 
>> [('Key', 'ADJ'), ('questions', 'NOUN'), ('to', 'PART'), ('ask', 'VERB'), ('and', 'CCONJ'), ('how', 'SCONJ'), ('to', 'PART'), ('define', 'VERB'), ('high', 'ADJ'), ('value', 'NOUN'), ('use-cases', 'NOUN')] 

 XPOS tags are: 
>> [('Key', 'JJ'), ('questions', 'NNS'), ('to', 'TO'), ('ask', 'VB'), ('and', 'CC'), ('how', 'WRB'), ('to', 'TO'), ('define', 'VB'), ('high', 'JJ'), ('value', 'NN'), ('use-cases', 'NNS')] 

 Lemmas are: 
>> [('Key', 'key'), ('questions', 'question'), ('to', 'to'), ('ask', 'ask'), ('and', 'and'), ('how', 'how'), ('to', 'to'), ('define', 'define'), ('high', 'high'), ('value', 'value'), ('use-cases', 'use-case')] 

 Dependency tags are: 
>> [(('Key', 'questions'), 'amod'), (('questions', 'root'), 'root'), (('to', 'ask'), 'mark'), (('ask', 'questions'), 'acl'), (('and', 'define'), 'cc'), (('how', 'define'), 'mark'), (('to', 'define'), 'mark'), (('define', 'ask'), 'conj'), (('high', 'use-cases'), 'amod'), (('value', 'use-cases'), 'compound'), (('use-cases', 'define'), 'obj')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 To identify meaningful and high value use-cases for teams and organizations, it is  important to gather relevant information and requirements on three key pillars. 

Tokens are: 
>> ['To', 'identify', 'meaningful', 'and', 'high', 'value', 'use-cases', 'for', 'teams', 'and', 'organizations', ',', 'it', 'is', 'important', 'to', 'gather', 'relevant', 'information', 'and', 'requirements', 'on', 'three', 'key', 'pillars', '.'] 

 UPOS tags are: 
>> [('To', 'PART'), ('identify', 'VERB'), ('meaningful', 'ADJ'), ('and', 'CCONJ'), ('high', 'ADJ'), ('value', 'NOUN'), ('use-cases', 'NOUN'), ('for', 'ADP'), ('teams', 'NOUN'), ('and', 'CCONJ'), ('organizations', 'NOUN'), (',', 'PUNCT'), ('it', 'PRON'), ('is', 'AUX'), ('important', 'ADJ'), ('to', 'PART'), ('gather', 'VERB'), ('relevant', 'ADJ'), ('information', 'NOUN'), ('and', 'CCONJ'), ('requirements', 'NOUN'), ('on', 'ADP'), ('three', 'NUM'), ('key', 'ADJ'), ('pillars', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('To', 'TO'), ('identify', 'VB'), ('meaningful', 'JJ'), ('and', 'CC'), ('high', 'JJ'), ('value', 'NN'), ('use-cases', 'NNS'), ('for', 'IN'), ('teams', 'NNS'), ('and', 'CC'), ('organizations', 'NNS'), (',', ','), ('it', 'PRP'), ('is', 'VBZ'), ('important', 'JJ'), ('to', 'TO'), ('gather', 'VB'), ('relevant', 'JJ'), ('information', 'NN'), ('and', 'CC'), ('requirements', 'NNS'), ('on', 'IN'), ('three', 'CD'), ('key', 'JJ'), ('pillars', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('To', 'to'), ('identify', 'identify'), ('meaningful', 'meaningful'), ('and', 'and'), ('high', 'high'), ('value', 'value'), ('use-cases', 'use-case'), ('for', 'for'), ('teams', 'team'), ('and', 'and'), ('organizations', 'organization'), (',', ','), ('it', 'it'), ('is', 'be'), ('important', 'important'), ('to', 'to'), ('gather', 'gather'), ('relevant', 'relevant'), ('information', 'information'), ('and', 'and'), ('requirements', 'requirement'), ('on', 'on'), ('three', 'three'), ('key', 'key'), ('pillars', 'pillar'), ('.', '.')] 

 Dependency tags are: 
>> [(('To', 'identify'), 'mark'), (('identify', 'important'), 'advcl'), (('meaningful', 'use-cases'), 'amod'), (('and', 'high'), 'cc'), (('high', 'meaningful'), 'conj'), (('value', 'use-cases'), 'compound'), (('use-cases', 'identify'), 'obj'), (('for', 'teams'), 'case'), (('teams', 'use-cases'), 'nmod'), (('and', 'organizations'), 'cc'), (('organizations', 'teams'), 'conj'), ((',', 'important'), 'punct'), (('it', 'important'), 'expl'), (('is', 'important'), 'cop'), (('important', 'root'), 'root'), (('to', 'gather'), 'mark'), (('gather', 'important'), 'csubj'), (('relevant', 'information'), 'amod'), (('information', 'gather'), 'obj'), (('and', 'requirements'), 'cc'), (('requirements', 'information'), 'conj'), (('on', 'pillars'), 'case'), (('three', 'pillars'), 'nummod'), (('key', 'pillars'), 'amod'), (('pillars', 'gather'), 'obl'), (('.', 'important'), 'punct')]

 Named Entites are: 
>> [('three', 'CARDINAL')]

================================ Paragraph 212 =================================

1. Business knowledge • What is the current business process? How are things done currently? Does  someone manually identify which products to recommend to each customer?  Does someone manually review each loan application for fraud or risk? Does an  engineer manually inspect all machinery each week for failure? Be as specific and  detailed as possible in defining the current process.  


------------------- Sentence 1 -------------------

 1. Business knowledge • 

Tokens are: 
>> ['1', '.', 'Business', 'knowledge', '•'] 

 UPOS tags are: 
>> [('1', 'NUM'), ('.', 'PUNCT'), ('Business', 'NOUN'), ('knowledge', 'NOUN'), ('•', 'PUNCT')] 

 XPOS tags are: 
>> [('1', 'LS'), ('.', '.'), ('Business', 'NN'), ('knowledge', 'NN'), ('•', 'NFP')] 

 Lemmas are: 
>> [('1', '1'), ('.', '.'), ('Business', 'business'), ('knowledge', 'knowledge'), ('•', "''")] 

 Dependency tags are: 
>> [(('1', 'knowledge'), 'nummod'), (('.', '1'), 'punct'), (('Business', 'knowledge'), 'compound'), (('knowledge', 'root'), 'root'), (('•', 'knowledge'), 'punct')]

 Named Entites are: 
>> [('1', 'CARDINAL')]

------------------- Sentence 2 -------------------

 What is the current business process? 

Tokens are: 
>> ['What', 'is', 'the', 'current', 'business', 'process', '?'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('is', 'AUX'), ('the', 'DET'), ('current', 'ADJ'), ('business', 'NOUN'), ('process', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('is', 'VBZ'), ('the', 'DT'), ('current', 'JJ'), ('business', 'NN'), ('process', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('is', 'be'), ('the', 'the'), ('current', 'current'), ('business', 'business'), ('process', 'process'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'root'), 'root'), (('is', 'What'), 'cop'), (('the', 'process'), 'det'), (('current', 'process'), 'amod'), (('business', 'process'), 'compound'), (('process', 'What'), 'nsubj'), (('?', 'What'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 How are things done currently? 

Tokens are: 
>> ['How', 'are', 'things', 'done', 'currently', '?'] 

 UPOS tags are: 
>> [('How', 'ADV'), ('are', 'AUX'), ('things', 'NOUN'), ('done', 'VERB'), ('currently', 'ADV'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('How', 'WRB'), ('are', 'VBP'), ('things', 'NNS'), ('done', 'VBN'), ('currently', 'RB'), ('?', '.')] 

 Lemmas are: 
>> [('How', 'how'), ('are', 'be'), ('things', 'thing'), ('done', 'do'), ('currently', 'currently'), ('?', '?')] 

 Dependency tags are: 
>> [(('How', 'done'), 'advmod'), (('are', 'done'), 'aux:pass'), (('things', 'done'), 'nsubj:pass'), (('done', 'root'), 'root'), (('currently', 'done'), 'advmod'), (('?', 'done'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Does  someone manually identify which products to recommend to each customer? 

Tokens are: 
>> ['Does', 'someone', 'manually', 'identify', 'which', 'products', 'to', 'recommend', 'to', 'each', 'customer', '?'] 

 UPOS tags are: 
>> [('Does', 'AUX'), ('someone', 'PRON'), ('manually', 'ADV'), ('identify', 'VERB'), ('which', 'DET'), ('products', 'NOUN'), ('to', 'PART'), ('recommend', 'VERB'), ('to', 'ADP'), ('each', 'DET'), ('customer', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Does', 'VBZ'), ('someone', 'NN'), ('manually', 'RB'), ('identify', 'VB'), ('which', 'WDT'), ('products', 'NNS'), ('to', 'TO'), ('recommend', 'VB'), ('to', 'IN'), ('each', 'DT'), ('customer', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Does', 'do'), ('someone', 'someone'), ('manually', 'manually'), ('identify', 'identify'), ('which', 'which'), ('products', 'product'), ('to', 'to'), ('recommend', 'recommend'), ('to', 'to'), ('each', 'each'), ('customer', 'customer'), ('?', '?')] 

 Dependency tags are: 
>> [(('Does', 'identify'), 'aux'), (('someone', 'identify'), 'nsubj'), (('manually', 'identify'), 'advmod'), (('identify', 'root'), 'root'), (('which', 'products'), 'det'), (('products', 'identify'), 'obj'), (('to', 'recommend'), 'mark'), (('recommend', 'products'), 'acl'), (('to', 'customer'), 'case'), (('each', 'customer'), 'det'), (('customer', 'recommend'), 'obl'), (('?', 'identify'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 Does someone manually review each loan application for fraud or risk? 

Tokens are: 
>> ['Does', 'someone', 'manually', 'review', 'each', 'loan', 'application', 'for', 'fraud', 'or', 'risk', '?'] 

 UPOS tags are: 
>> [('Does', 'AUX'), ('someone', 'PRON'), ('manually', 'ADV'), ('review', 'VERB'), ('each', 'DET'), ('loan', 'NOUN'), ('application', 'NOUN'), ('for', 'ADP'), ('fraud', 'NOUN'), ('or', 'CCONJ'), ('risk', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Does', 'VBZ'), ('someone', 'NN'), ('manually', 'RB'), ('review', 'VB'), ('each', 'DT'), ('loan', 'NN'), ('application', 'NN'), ('for', 'IN'), ('fraud', 'NN'), ('or', 'CC'), ('risk', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Does', 'do'), ('someone', 'someone'), ('manually', 'manually'), ('review', 'review'), ('each', 'each'), ('loan', 'loan'), ('application', 'application'), ('for', 'for'), ('fraud', 'fraud'), ('or', 'or'), ('risk', 'risk'), ('?', '?')] 

 Dependency tags are: 
>> [(('Does', 'review'), 'aux'), (('someone', 'review'), 'nsubj'), (('manually', 'review'), 'advmod'), (('review', 'root'), 'root'), (('each', 'application'), 'det'), (('loan', 'application'), 'compound'), (('application', 'review'), 'obj'), (('for', 'fraud'), 'case'), (('fraud', 'review'), 'obl'), (('or', 'risk'), 'cc'), (('risk', 'fraud'), 'conj'), (('?', 'review'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 Does an  engineer manually inspect all machinery each week for failure? 

Tokens are: 
>> ['Does', 'an', 'engineer', 'manually', 'inspect', 'all', 'machinery', 'each', 'week', 'for', 'failure', '?'] 

 UPOS tags are: 
>> [('Does', 'AUX'), ('an', 'DET'), ('engineer', 'NOUN'), ('manually', 'ADV'), ('inspect', 'VERB'), ('all', 'DET'), ('machinery', 'NOUN'), ('each', 'DET'), ('week', 'NOUN'), ('for', 'ADP'), ('failure', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Does', 'VBZ'), ('an', 'DT'), ('engineer', 'NN'), ('manually', 'RB'), ('inspect', 'VB'), ('all', 'DT'), ('machinery', 'NN'), ('each', 'DT'), ('week', 'NN'), ('for', 'IN'), ('failure', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Does', 'do'), ('an', 'a'), ('engineer', 'engineer'), ('manually', 'manually'), ('inspect', 'inspect'), ('all', 'all'), ('machinery', 'machinery'), ('each', 'each'), ('week', 'week'), ('for', 'for'), ('failure', 'failure'), ('?', '?')] 

 Dependency tags are: 
>> [(('Does', 'inspect'), 'aux'), (('an', 'engineer'), 'det'), (('engineer', 'inspect'), 'nsubj'), (('manually', 'inspect'), 'advmod'), (('inspect', 'root'), 'root'), (('all', 'machinery'), 'det'), (('machinery', 'inspect'), 'obj'), (('each', 'week'), 'det'), (('week', 'inspect'), 'obl:tmod'), (('for', 'failure'), 'case'), (('failure', 'inspect'), 'obl'), (('?', 'inspect'), 'punct')]

 Named Entites are: 
>> [('each week', 'DATE')]

------------------- Sentence 7 -------------------

 Be as specific and  detailed as possible in defining the current process. 

Tokens are: 
>> ['Be', 'as', 'specific', 'and', 'detailed', 'as', 'possible', 'in', 'defining', 'the', 'current', 'process', '.'] 

 UPOS tags are: 
>> [('Be', 'AUX'), ('as', 'ADV'), ('specific', 'ADJ'), ('and', 'CCONJ'), ('detailed', 'ADJ'), ('as', 'SCONJ'), ('possible', 'ADJ'), ('in', 'SCONJ'), ('defining', 'VERB'), ('the', 'DET'), ('current', 'ADJ'), ('process', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Be', 'VB'), ('as', 'RB'), ('specific', 'JJ'), ('and', 'CC'), ('detailed', 'JJ'), ('as', 'IN'), ('possible', 'JJ'), ('in', 'IN'), ('defining', 'VBG'), ('the', 'DT'), ('current', 'JJ'), ('process', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Be', 'be'), ('as', 'as'), ('specific', 'specific'), ('and', 'and'), ('detailed', 'detailed'), ('as', 'as'), ('possible', 'possible'), ('in', 'in'), ('defining', 'define'), ('the', 'the'), ('current', 'current'), ('process', 'process'), ('.', '.')] 

 Dependency tags are: 
>> [(('Be', 'specific'), 'cop'), (('as', 'specific'), 'advmod'), (('specific', 'root'), 'root'), (('and', 'detailed'), 'cc'), (('detailed', 'specific'), 'conj'), (('as', 'possible'), 'mark'), (('possible', 'specific'), 'advcl'), (('in', 'defining'), 'mark'), (('defining', 'possible'), 'advcl'), (('the', 'process'), 'det'), (('current', 'process'), 'amod'), (('process', 'defining'), 'obj'), (('.', 'specific'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 213 =================================

• Define measurable goals and objectives. Is it to replace or enhance an existing  process? Is it to increase revenue and conversions from product upsell and cross sell  opportunities or to increase software subscriptions by three percent this quarter? 


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Define measurable goals and objectives. 

Tokens are: 
>> ['Define', 'measurable', 'goals', 'and', 'objectives', '.'] 

 UPOS tags are: 
>> [('Define', 'VERB'), ('measurable', 'ADJ'), ('goals', 'NOUN'), ('and', 'CCONJ'), ('objectives', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Define', 'VB'), ('measurable', 'JJ'), ('goals', 'NNS'), ('and', 'CC'), ('objectives', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Define', 'define'), ('measurable', 'measurable'), ('goals', 'goal'), ('and', 'and'), ('objectives', 'objective'), ('.', '.')] 

 Dependency tags are: 
>> [(('Define', 'root'), 'root'), (('measurable', 'goals'), 'amod'), (('goals', 'Define'), 'obj'), (('and', 'objectives'), 'cc'), (('objectives', 'goals'), 'conj'), (('.', 'Define'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Is it to replace or enhance an existing  process? 

Tokens are: 
>> ['Is', 'it', 'to', 'replace', 'or', 'enhance', 'an', 'existing', 'process', '?'] 

 UPOS tags are: 
>> [('Is', 'VERB'), ('it', 'PRON'), ('to', 'PART'), ('replace', 'VERB'), ('or', 'CCONJ'), ('enhance', 'VERB'), ('an', 'DET'), ('existing', 'VERB'), ('process', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Is', 'VBZ'), ('it', 'PRP'), ('to', 'TO'), ('replace', 'VB'), ('or', 'CC'), ('enhance', 'VB'), ('an', 'DT'), ('existing', 'VBG'), ('process', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Is', 'be'), ('it', 'it'), ('to', 'to'), ('replace', 'replace'), ('or', 'or'), ('enhance', 'enhance'), ('an', 'a'), ('existing', 'exist'), ('process', 'process'), ('?', '?')] 

 Dependency tags are: 
>> [(('Is', 'root'), 'root'), (('it', 'Is'), 'expl'), (('to', 'replace'), 'mark'), (('replace', 'Is'), 'ccomp'), (('or', 'enhance'), 'cc'), (('enhance', 'replace'), 'conj'), (('an', 'process'), 'det'), (('existing', 'process'), 'amod'), (('process', 'replace'), 'obj'), (('?', 'Is'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Is it to increase revenue and conversions from product upsell and cross sell  opportunities or to increase software subscriptions by three percent this quarter? 

Tokens are: 
>> ['Is', 'it', 'to', 'increase', 'revenue', 'and', 'conversions', 'from', 'product', 'upsell', 'and', 'cross', 'sell', 'opportunities', 'or', 'to', 'increase', 'software', 'subscriptions', 'by', 'three', 'percent', 'this', 'quarter', '?'] 

 UPOS tags are: 
>> [('Is', 'VERB'), ('it', 'PRON'), ('to', 'PART'), ('increase', 'VERB'), ('revenue', 'NOUN'), ('and', 'CCONJ'), ('conversions', 'NOUN'), ('from', 'ADP'), ('product', 'NOUN'), ('upsell', 'NOUN'), ('and', 'CCONJ'), ('cross', 'VERB'), ('sell', 'VERB'), ('opportunities', 'NOUN'), ('or', 'CCONJ'), ('to', 'PART'), ('increase', 'VERB'), ('software', 'NOUN'), ('subscriptions', 'NOUN'), ('by', 'ADP'), ('three', 'NUM'), ('percent', 'NOUN'), ('this', 'DET'), ('quarter', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Is', 'VBZ'), ('it', 'PRP'), ('to', 'TO'), ('increase', 'VB'), ('revenue', 'NN'), ('and', 'CC'), ('conversions', 'NNS'), ('from', 'IN'), ('product', 'NN'), ('upsell', 'NN'), ('and', 'CC'), ('cross', 'VB'), ('sell', 'VB'), ('opportunities', 'NNS'), ('or', 'CC'), ('to', 'TO'), ('increase', 'VB'), ('software', 'NN'), ('subscriptions', 'NNS'), ('by', 'IN'), ('three', 'CD'), ('percent', 'NN'), ('this', 'DT'), ('quarter', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Is', 'be'), ('it', 'it'), ('to', 'to'), ('increase', 'increase'), ('revenue', 'revenue'), ('and', 'and'), ('conversions', 'conversion'), ('from', 'from'), ('product', 'product'), ('upsell', 'upsell'), ('and', 'and'), ('cross', 'cross'), ('sell', 'sell'), ('opportunities', 'opportunity'), ('or', 'or'), ('to', 'to'), ('increase', 'increase'), ('software', 'software'), ('subscriptions', 'subscription'), ('by', 'by'), ('three', 'three'), ('percent', 'percent'), ('this', 'this'), ('quarter', 'quarter'), ('?', '?')] 

 Dependency tags are: 
>> [(('Is', 'root'), 'root'), (('it', 'Is'), 'expl'), (('to', 'increase'), 'mark'), (('increase', 'Is'), 'ccomp'), (('revenue', 'increase'), 'obj'), (('and', 'conversions'), 'cc'), (('conversions', 'revenue'), 'conj'), (('from', 'upsell'), 'case'), (('product', 'upsell'), 'compound'), (('upsell', 'increase'), 'obl'), (('and', 'cross'), 'cc'), (('cross', 'increase'), 'conj'), (('sell', 'cross'), 'xcomp'), (('opportunities', 'sell'), 'obj'), (('or', 'increase'), 'cc'), (('to', 'increase'), 'mark'), (('increase', 'sell'), 'conj'), (('software', 'subscriptions'), 'compound'), (('subscriptions', 'increase'), 'obj'), (('by', 'percent'), 'case'), (('three', 'percent'), 'nummod'), (('percent', 'increase'), 'obl'), (('this', 'quarter'), 'det'), (('quarter', 'percent'), 'nmod:tmod'), (('?', 'Is'), 'punct')]

 Named Entites are: 
>> [('three percent', 'PERCENT'), ('this quarter', 'DATE')]

================================ Paragraph 214 =================================

• What areas can be improved? What is the business question to be answered  with analytics? Leverage subject matter experts to identify key pain points and  gaps in the current business process. Determine what part of the process can  be enhanced. Where can data-driven insights be used? Is the objective to speed  up loan application processing? Identify high risk transactions on credit cards?  Understand customers better? Specify key challenges and areas for improvement.  


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 What areas can be improved? 

Tokens are: 
>> ['What', 'areas', 'can', 'be', 'improved', '?'] 

 UPOS tags are: 
>> [('What', 'DET'), ('areas', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('improved', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WDT'), ('areas', 'NNS'), ('can', 'MD'), ('be', 'VB'), ('improved', 'VBN'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('areas', 'area'), ('can', 'can'), ('be', 'be'), ('improved', 'improve'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'areas'), 'det'), (('areas', 'improved'), 'nsubj:pass'), (('can', 'improved'), 'aux'), (('be', 'improved'), 'aux:pass'), (('improved', 'root'), 'root'), (('?', 'improved'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 What is the business question to be answered  with analytics? 

Tokens are: 
>> ['What', 'is', 'the', 'business', 'question', 'to', 'be', 'answered', 'with', 'analytics', '?'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('is', 'AUX'), ('the', 'DET'), ('business', 'NOUN'), ('question', 'NOUN'), ('to', 'PART'), ('be', 'AUX'), ('answered', 'VERB'), ('with', 'ADP'), ('analytics', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('is', 'VBZ'), ('the', 'DT'), ('business', 'NN'), ('question', 'NN'), ('to', 'TO'), ('be', 'VB'), ('answered', 'VBN'), ('with', 'IN'), ('analytics', 'NNS'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('is', 'be'), ('the', 'the'), ('business', 'business'), ('question', 'question'), ('to', 'to'), ('be', 'be'), ('answered', 'answer'), ('with', 'with'), ('analytics', 'analytic'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'root'), 'root'), (('is', 'What'), 'cop'), (('the', 'question'), 'det'), (('business', 'question'), 'compound'), (('question', 'What'), 'nsubj'), (('to', 'answered'), 'mark'), (('be', 'answered'), 'aux:pass'), (('answered', 'question'), 'acl'), (('with', 'analytics'), 'case'), (('analytics', 'answered'), 'obl'), (('?', 'What'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Leverage subject matter experts to identify key pain points and  gaps in the current business process. 

Tokens are: 
>> ['Leverage', 'subject', 'matter', 'experts', 'to', 'identify', 'key', 'pain', 'points', 'and', 'gaps', 'in', 'the', 'current', 'business', 'process', '.'] 

 UPOS tags are: 
>> [('Leverage', 'VERB'), ('subject', 'NOUN'), ('matter', 'NOUN'), ('experts', 'NOUN'), ('to', 'PART'), ('identify', 'VERB'), ('key', 'ADJ'), ('pain', 'NOUN'), ('points', 'NOUN'), ('and', 'CCONJ'), ('gaps', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('current', 'ADJ'), ('business', 'NOUN'), ('process', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Leverage', 'VB'), ('subject', 'NN'), ('matter', 'NN'), ('experts', 'NNS'), ('to', 'TO'), ('identify', 'VB'), ('key', 'JJ'), ('pain', 'NN'), ('points', 'NNS'), ('and', 'CC'), ('gaps', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('current', 'JJ'), ('business', 'NN'), ('process', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Leverage', 'leverage'), ('subject', 'subject'), ('matter', 'matter'), ('experts', 'expert'), ('to', 'to'), ('identify', 'identify'), ('key', 'key'), ('pain', 'pain'), ('points', 'point'), ('and', 'and'), ('gaps', 'gap'), ('in', 'in'), ('the', 'the'), ('current', 'current'), ('business', 'business'), ('process', 'process'), ('.', '.')] 

 Dependency tags are: 
>> [(('Leverage', 'root'), 'root'), (('subject', 'experts'), 'compound'), (('matter', 'experts'), 'compound'), (('experts', 'Leverage'), 'obj'), (('to', 'identify'), 'mark'), (('identify', 'Leverage'), 'advcl'), (('key', 'points'), 'amod'), (('pain', 'points'), 'compound'), (('points', 'identify'), 'obj'), (('and', 'gaps'), 'cc'), (('gaps', 'points'), 'conj'), (('in', 'process'), 'case'), (('the', 'process'), 'det'), (('current', 'process'), 'amod'), (('business', 'process'), 'compound'), (('process', 'identify'), 'obl'), (('.', 'Leverage'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 Determine what part of the process can  be enhanced. 

Tokens are: 
>> ['Determine', 'what', 'part', 'of', 'the', 'process', 'can', 'be', 'enhanced', '.'] 

 UPOS tags are: 
>> [('Determine', 'VERB'), ('what', 'DET'), ('part', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('process', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('enhanced', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Determine', 'VB'), ('what', 'WDT'), ('part', 'NN'), ('of', 'IN'), ('the', 'DT'), ('process', 'NN'), ('can', 'MD'), ('be', 'VB'), ('enhanced', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('Determine', 'determine'), ('what', 'what'), ('part', 'part'), ('of', 'of'), ('the', 'the'), ('process', 'process'), ('can', 'can'), ('be', 'be'), ('enhanced', 'enhance'), ('.', '.')] 

 Dependency tags are: 
>> [(('Determine', 'root'), 'root'), (('what', 'part'), 'det'), (('part', 'enhanced'), 'nsubj:pass'), (('of', 'process'), 'case'), (('the', 'process'), 'det'), (('process', 'part'), 'nmod'), (('can', 'enhanced'), 'aux'), (('be', 'enhanced'), 'aux:pass'), (('enhanced', 'Determine'), 'ccomp'), (('.', 'Determine'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 Where can data-driven insights be used? 

Tokens are: 
>> ['Where', 'can', 'data-driven', 'insights', 'be', 'used', '?'] 

 UPOS tags are: 
>> [('Where', 'ADV'), ('can', 'AUX'), ('data-driven', 'ADJ'), ('insights', 'NOUN'), ('be', 'AUX'), ('used', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Where', 'WRB'), ('can', 'MD'), ('data-driven', 'JJ'), ('insights', 'NNS'), ('be', 'VB'), ('used', 'VBN'), ('?', '.')] 

 Lemmas are: 
>> [('Where', 'where'), ('can', 'can'), ('data-driven', 'data-driven'), ('insights', 'insight'), ('be', 'be'), ('used', 'use'), ('?', '?')] 

 Dependency tags are: 
>> [(('Where', 'used'), 'advmod'), (('can', 'used'), 'aux'), (('data-driven', 'insights'), 'amod'), (('insights', 'used'), 'nsubj:pass'), (('be', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('?', 'used'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 7 -------------------

 Is the objective to speed  up loan application processing? 

Tokens are: 
>> ['Is', 'the', 'objective', 'to', 'speed', 'up', 'loan', 'application', 'processing', '?'] 

 UPOS tags are: 
>> [('Is', 'AUX'), ('the', 'DET'), ('objective', 'NOUN'), ('to', 'PART'), ('speed', 'VERB'), ('up', 'ADP'), ('loan', 'NOUN'), ('application', 'NOUN'), ('processing', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Is', 'VBZ'), ('the', 'DT'), ('objective', 'NN'), ('to', 'TO'), ('speed', 'VB'), ('up', 'RP'), ('loan', 'NN'), ('application', 'NN'), ('processing', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Is', 'be'), ('the', 'the'), ('objective', 'objective'), ('to', 'to'), ('speed', 'speed'), ('up', 'up'), ('loan', 'loan'), ('application', 'application'), ('processing', 'processing'), ('?', '?')] 

 Dependency tags are: 
>> [(('Is', 'objective'), 'cop'), (('the', 'objective'), 'det'), (('objective', 'root'), 'root'), (('to', 'speed'), 'mark'), (('speed', 'objective'), 'acl'), (('up', 'speed'), 'compound:prt'), (('loan', 'application'), 'compound'), (('application', 'processing'), 'compound'), (('processing', 'speed'), 'obj'), (('?', 'objective'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 8 -------------------

 Identify high risk transactions on credit cards? 

Tokens are: 
>> ['Identify', 'high', 'risk', 'transactions', 'on', 'credit', 'cards', '?'] 

 UPOS tags are: 
>> [('Identify', 'VERB'), ('high', 'ADJ'), ('risk', 'NOUN'), ('transactions', 'NOUN'), ('on', 'ADP'), ('credit', 'NOUN'), ('cards', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Identify', 'VB'), ('high', 'JJ'), ('risk', 'NN'), ('transactions', 'NNS'), ('on', 'IN'), ('credit', 'NN'), ('cards', 'NNS'), ('?', '.')] 

 Lemmas are: 
>> [('Identify', 'identify'), ('high', 'high'), ('risk', 'risk'), ('transactions', 'transaction'), ('on', 'on'), ('credit', 'credit'), ('cards', 'card'), ('?', '?')] 

 Dependency tags are: 
>> [(('Identify', 'root'), 'root'), (('high', 'transactions'), 'amod'), (('risk', 'transactions'), 'compound'), (('transactions', 'Identify'), 'obj'), (('on', 'cards'), 'case'), (('credit', 'cards'), 'compound'), (('cards', 'Identify'), 'obl'), (('?', 'Identify'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 9 -------------------

 Understand customers better? 

Tokens are: 
>> ['Understand', 'customers', 'better', '?'] 

 UPOS tags are: 
>> [('Understand', 'VERB'), ('customers', 'NOUN'), ('better', 'ADJ'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Understand', 'VB'), ('customers', 'NNS'), ('better', 'JJR'), ('?', '.')] 

 Lemmas are: 
>> [('Understand', 'understand'), ('customers', 'customer'), ('better', 'good'), ('?', '?')] 

 Dependency tags are: 
>> [(('Understand', 'root'), 'root'), (('customers', 'Understand'), 'obj'), (('better', 'Understand'), 'xcomp'), (('?', 'Understand'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 10 -------------------

 Specify key challenges and areas for improvement. 

Tokens are: 
>> ['Specify', 'key', 'challenges', 'and', 'areas', 'for', 'improvement', '.'] 

 UPOS tags are: 
>> [('Specify', 'VERB'), ('key', 'ADJ'), ('challenges', 'NOUN'), ('and', 'CCONJ'), ('areas', 'NOUN'), ('for', 'ADP'), ('improvement', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Specify', 'VB'), ('key', 'JJ'), ('challenges', 'NNS'), ('and', 'CC'), ('areas', 'NNS'), ('for', 'IN'), ('improvement', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Specify', 'specify'), ('key', 'key'), ('challenges', 'challenge'), ('and', 'and'), ('areas', 'area'), ('for', 'for'), ('improvement', 'improvement'), ('.', '.')] 

 Dependency tags are: 
>> [(('Specify', 'root'), 'root'), (('key', 'challenges'), 'amod'), (('challenges', 'Specify'), 'obj'), (('and', 'areas'), 'cc'), (('areas', 'challenges'), 'conj'), (('for', 'improvement'), 'case'), (('improvement', 'Specify'), 'obl'), (('.', 'Specify'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 215 =================================

2. Solution vision • Why is it important to solve the current business problem/use-case? Define  what success would look like. Specifically, in order to execute a successful  project, what are the minimum requirements and success criteria? 


------------------- Sentence 1 -------------------

 2. Solution vision • 

Tokens are: 
>> ['2', '.', 'Solution', 'vision', '•'] 

 UPOS tags are: 
>> [('2', 'NUM'), ('.', 'PUNCT'), ('Solution', 'NOUN'), ('vision', 'NOUN'), ('•', 'PUNCT')] 

 XPOS tags are: 
>> [('2', 'LS'), ('.', '.'), ('Solution', 'NN'), ('vision', 'NN'), ('•', 'NFP')] 

 Lemmas are: 
>> [('2', '2'), ('.', '.'), ('Solution', 'solution'), ('vision', 'vision'), ('•', "''")] 

 Dependency tags are: 
>> [(('2', 'vision'), 'nummod'), (('.', '2'), 'punct'), (('Solution', 'vision'), 'compound'), (('vision', 'root'), 'root'), (('•', 'vision'), 'punct')]

 Named Entites are: 
>> [('2', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Why is it important to solve the current business problem/use-case? 

Tokens are: 
>> ['Why', 'is', 'it', 'important', 'to', 'solve', 'the', 'current', 'business', 'problem', '/', 'use', '-', 'case', '?'] 

 UPOS tags are: 
>> [('Why', 'ADV'), ('is', 'AUX'), ('it', 'PRON'), ('important', 'ADJ'), ('to', 'PART'), ('solve', 'VERB'), ('the', 'DET'), ('current', 'ADJ'), ('business', 'NOUN'), ('problem', 'NOUN'), ('/', 'SYM'), ('use', 'NOUN'), ('-', 'PUNCT'), ('case', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Why', 'WRB'), ('is', 'VBZ'), ('it', 'PRP'), ('important', 'JJ'), ('to', 'TO'), ('solve', 'VB'), ('the', 'DT'), ('current', 'JJ'), ('business', 'NN'), ('problem', 'NN'), ('/', ','), ('use', 'NN'), ('-', 'HYPH'), ('case', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Why', 'why'), ('is', 'be'), ('it', 'it'), ('important', 'important'), ('to', 'to'), ('solve', 'solve'), ('the', 'the'), ('current', 'current'), ('business', 'business'), ('problem', 'problem'), ('/', '/'), ('use', 'use'), ('-', '-'), ('case', 'case'), ('?', '?')] 

 Dependency tags are: 
>> [(('Why', 'important'), 'advmod'), (('is', 'important'), 'cop'), (('it', 'important'), 'expl'), (('important', 'root'), 'root'), (('to', 'solve'), 'mark'), (('solve', 'important'), 'csubj'), (('the', 'problem'), 'det'), (('current', 'problem'), 'amod'), (('business', 'problem'), 'compound'), (('problem', 'solve'), 'obj'), (('/', 'case'), 'cc'), (('use', 'case'), 'compound'), (('-', 'case'), 'punct'), (('case', 'problem'), 'conj'), (('?', 'important'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Define  what success would look like. 

Tokens are: 
>> ['Define', 'what', 'success', 'would', 'look', 'like', '.'] 

 UPOS tags are: 
>> [('Define', 'VERB'), ('what', 'DET'), ('success', 'NOUN'), ('would', 'AUX'), ('look', 'VERB'), ('like', 'ADP'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Define', 'VB'), ('what', 'WDT'), ('success', 'NN'), ('would', 'MD'), ('look', 'VB'), ('like', 'IN'), ('.', '.')] 

 Lemmas are: 
>> [('Define', 'define'), ('what', 'what'), ('success', 'success'), ('would', 'would'), ('look', 'look'), ('like', 'like'), ('.', '.')] 

 Dependency tags are: 
>> [(('Define', 'root'), 'root'), (('what', 'success'), 'det'), (('success', 'look'), 'nsubj'), (('would', 'look'), 'aux'), (('look', 'Define'), 'ccomp'), (('like', 'look'), 'obl'), (('.', 'Define'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Specifically, in order to execute a successful  project, what are the minimum requirements and success criteria? 

Tokens are: 
>> ['Specifically', ',', 'in', 'order', 'to', 'execute', 'a', 'successful', 'project', ',', 'what', 'are', 'the', 'minimum', 'requirements', 'and', 'success', 'criteria', '?'] 

 UPOS tags are: 
>> [('Specifically', 'ADV'), (',', 'PUNCT'), ('in', 'ADP'), ('order', 'NOUN'), ('to', 'PART'), ('execute', 'VERB'), ('a', 'DET'), ('successful', 'ADJ'), ('project', 'NOUN'), (',', 'PUNCT'), ('what', 'PRON'), ('are', 'AUX'), ('the', 'DET'), ('minimum', 'ADJ'), ('requirements', 'NOUN'), ('and', 'CCONJ'), ('success', 'NOUN'), ('criteria', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Specifically', 'RB'), (',', ','), ('in', 'IN'), ('order', 'NN'), ('to', 'TO'), ('execute', 'VB'), ('a', 'DT'), ('successful', 'JJ'), ('project', 'NN'), (',', ','), ('what', 'WP'), ('are', 'VBP'), ('the', 'DT'), ('minimum', 'JJ'), ('requirements', 'NNS'), ('and', 'CC'), ('success', 'NN'), ('criteria', 'NNS'), ('?', '.')] 

 Lemmas are: 
>> [('Specifically', 'specifically'), (',', ','), ('in', 'in'), ('order', 'order'), ('to', 'to'), ('execute', 'execute'), ('a', 'a'), ('successful', 'successful'), ('project', 'project'), (',', ','), ('what', 'what'), ('are', 'be'), ('the', 'the'), ('minimum', 'minimum'), ('requirements', 'requirement'), ('and', 'and'), ('success', 'success'), ('criteria', 'criterion'), ('?', '?')] 

 Dependency tags are: 
>> [(('Specifically', 'what'), 'advmod'), ((',', 'what'), 'punct'), (('in', 'execute'), 'mark'), (('order', 'in'), 'fixed'), (('to', 'execute'), 'mark'), (('execute', 'what'), 'advcl'), (('a', 'project'), 'det'), (('successful', 'project'), 'amod'), (('project', 'execute'), 'obj'), ((',', 'what'), 'punct'), (('what', 'root'), 'root'), (('are', 'what'), 'cop'), (('the', 'requirements'), 'det'), (('minimum', 'requirements'), 'amod'), (('requirements', 'what'), 'nsubj'), (('and', 'criteria'), 'cc'), (('success', 'criteria'), 'compound'), (('criteria', 'requirements'), 'conj'), (('?', 'what'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 216 =================================

• Define what decision or business process will be affected by the analytical  solution. Who will be affected by this tool? Who are the users of this tool? Will  this impact the marketing department and analysts? Will it impact planning and  maintenance personnel? Will it impact the claims processing unit of an insurance  company that is responsible for mitigating fraud? 


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Define what decision or business process will be affected by the analytical  solution. 

Tokens are: 
>> ['Define', 'what', 'decision', 'or', 'business', 'process', 'will', 'be', 'affected', 'by', 'the', 'analytical', 'solution', '.'] 

 UPOS tags are: 
>> [('Define', 'VERB'), ('what', 'DET'), ('decision', 'NOUN'), ('or', 'CCONJ'), ('business', 'NOUN'), ('process', 'NOUN'), ('will', 'AUX'), ('be', 'AUX'), ('affected', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('analytical', 'ADJ'), ('solution', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Define', 'VB'), ('what', 'WDT'), ('decision', 'NN'), ('or', 'CC'), ('business', 'NN'), ('process', 'NN'), ('will', 'MD'), ('be', 'VB'), ('affected', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('analytical', 'JJ'), ('solution', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Define', 'define'), ('what', 'what'), ('decision', 'decision'), ('or', 'or'), ('business', 'business'), ('process', 'process'), ('will', 'will'), ('be', 'be'), ('affected', 'affect'), ('by', 'by'), ('the', 'the'), ('analytical', 'analytical'), ('solution', 'solution'), ('.', '.')] 

 Dependency tags are: 
>> [(('Define', 'root'), 'root'), (('what', 'decision'), 'det'), (('decision', 'affected'), 'nsubj:pass'), (('or', 'process'), 'cc'), (('business', 'process'), 'compound'), (('process', 'decision'), 'conj'), (('will', 'affected'), 'aux'), (('be', 'affected'), 'aux:pass'), (('affected', 'Define'), 'ccomp'), (('by', 'solution'), 'case'), (('the', 'solution'), 'det'), (('analytical', 'solution'), 'amod'), (('solution', 'affected'), 'obl'), (('.', 'Define'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Who will be affected by this tool? 

Tokens are: 
>> ['Who', 'will', 'be', 'affected', 'by', 'this', 'tool', '?'] 

 UPOS tags are: 
>> [('Who', 'PRON'), ('will', 'AUX'), ('be', 'AUX'), ('affected', 'VERB'), ('by', 'ADP'), ('this', 'DET'), ('tool', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Who', 'WP'), ('will', 'MD'), ('be', 'VB'), ('affected', 'VBN'), ('by', 'IN'), ('this', 'DT'), ('tool', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Who', 'who'), ('will', 'will'), ('be', 'be'), ('affected', 'affect'), ('by', 'by'), ('this', 'this'), ('tool', 'tool'), ('?', '?')] 

 Dependency tags are: 
>> [(('Who', 'affected'), 'nsubj:pass'), (('will', 'affected'), 'aux'), (('be', 'affected'), 'aux:pass'), (('affected', 'root'), 'root'), (('by', 'tool'), 'case'), (('this', 'tool'), 'det'), (('tool', 'affected'), 'obl'), (('?', 'affected'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Who are the users of this tool? 

Tokens are: 
>> ['Who', 'are', 'the', 'users', 'of', 'this', 'tool', '?'] 

 UPOS tags are: 
>> [('Who', 'PRON'), ('are', 'AUX'), ('the', 'DET'), ('users', 'NOUN'), ('of', 'ADP'), ('this', 'DET'), ('tool', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Who', 'WP'), ('are', 'VBP'), ('the', 'DT'), ('users', 'NNS'), ('of', 'IN'), ('this', 'DT'), ('tool', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Who', 'who'), ('are', 'be'), ('the', 'the'), ('users', 'user'), ('of', 'of'), ('this', 'this'), ('tool', 'tool'), ('?', '?')] 

 Dependency tags are: 
>> [(('Who', 'root'), 'root'), (('are', 'Who'), 'cop'), (('the', 'users'), 'det'), (('users', 'Who'), 'nsubj'), (('of', 'tool'), 'case'), (('this', 'tool'), 'det'), (('tool', 'users'), 'nmod'), (('?', 'Who'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 Will  this impact the marketing department and analysts? 

Tokens are: 
>> ['Will', 'this', 'impact', 'the', 'marketing', 'department', 'and', 'analysts', '?'] 

 UPOS tags are: 
>> [('Will', 'AUX'), ('this', 'PRON'), ('impact', 'VERB'), ('the', 'DET'), ('marketing', 'NOUN'), ('department', 'NOUN'), ('and', 'CCONJ'), ('analysts', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Will', 'MD'), ('this', 'DT'), ('impact', 'VB'), ('the', 'DT'), ('marketing', 'NN'), ('department', 'NN'), ('and', 'CC'), ('analysts', 'NNS'), ('?', '.')] 

 Lemmas are: 
>> [('Will', 'will'), ('this', 'this'), ('impact', 'impact'), ('the', 'the'), ('marketing', 'marketing'), ('department', 'department'), ('and', 'and'), ('analysts', 'analyst'), ('?', '?')] 

 Dependency tags are: 
>> [(('Will', 'impact'), 'aux'), (('this', 'impact'), 'nsubj'), (('impact', 'root'), 'root'), (('the', 'department'), 'det'), (('marketing', 'department'), 'compound'), (('department', 'impact'), 'obj'), (('and', 'analysts'), 'cc'), (('analysts', 'department'), 'conj'), (('?', 'impact'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 Will it impact planning and  maintenance personnel? 

Tokens are: 
>> ['Will', 'it', 'impact', 'planning', 'and', 'maintenance', 'personnel', '?'] 

 UPOS tags are: 
>> [('Will', 'AUX'), ('it', 'PRON'), ('impact', 'VERB'), ('planning', 'NOUN'), ('and', 'CCONJ'), ('maintenance', 'NOUN'), ('personnel', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Will', 'MD'), ('it', 'PRP'), ('impact', 'VB'), ('planning', 'NN'), ('and', 'CC'), ('maintenance', 'NN'), ('personnel', 'NNS'), ('?', '.')] 

 Lemmas are: 
>> [('Will', 'will'), ('it', 'it'), ('impact', 'impact'), ('planning', 'planning'), ('and', 'and'), ('maintenance', 'maintenance'), ('personnel', 'personnel'), ('?', '?')] 

 Dependency tags are: 
>> [(('Will', 'impact'), 'aux'), (('it', 'impact'), 'nsubj'), (('impact', 'root'), 'root'), (('planning', 'personnel'), 'compound'), (('and', 'maintenance'), 'cc'), (('maintenance', 'planning'), 'conj'), (('personnel', 'impact'), 'obj'), (('?', 'impact'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 7 -------------------

 Will it impact the claims processing unit of an insurance  company that is responsible for mitigating fraud? 

Tokens are: 
>> ['Will', 'it', 'impact', 'the', 'claims', 'processing', 'unit', 'of', 'an', 'insurance', 'company', 'that', 'is', 'responsible', 'for', 'mitigating', 'fraud', '?'] 

 UPOS tags are: 
>> [('Will', 'AUX'), ('it', 'PRON'), ('impact', 'VERB'), ('the', 'DET'), ('claims', 'NOUN'), ('processing', 'NOUN'), ('unit', 'NOUN'), ('of', 'ADP'), ('an', 'DET'), ('insurance', 'NOUN'), ('company', 'NOUN'), ('that', 'PRON'), ('is', 'AUX'), ('responsible', 'ADJ'), ('for', 'SCONJ'), ('mitigating', 'VERB'), ('fraud', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Will', 'MD'), ('it', 'PRP'), ('impact', 'VB'), ('the', 'DT'), ('claims', 'NNS'), ('processing', 'NN'), ('unit', 'NN'), ('of', 'IN'), ('an', 'DT'), ('insurance', 'NN'), ('company', 'NN'), ('that', 'WDT'), ('is', 'VBZ'), ('responsible', 'JJ'), ('for', 'IN'), ('mitigating', 'VBG'), ('fraud', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Will', 'will'), ('it', 'it'), ('impact', 'impact'), ('the', 'the'), ('claims', 'claim'), ('processing', 'processing'), ('unit', 'unit'), ('of', 'of'), ('an', 'a'), ('insurance', 'insurance'), ('company', 'company'), ('that', 'that'), ('is', 'be'), ('responsible', 'responsible'), ('for', 'for'), ('mitigating', 'mitigating'), ('fraud', 'fraud'), ('?', '?')] 

 Dependency tags are: 
>> [(('Will', 'impact'), 'aux'), (('it', 'impact'), 'nsubj'), (('impact', 'root'), 'root'), (('the', 'unit'), 'det'), (('claims', 'impact'), 'obj'), (('processing', 'unit'), 'compound'), (('unit', 'impact'), 'obj'), (('of', 'company'), 'case'), (('an', 'company'), 'det'), (('insurance', 'company'), 'compound'), (('company', 'unit'), 'nmod'), (('that', 'responsible'), 'nsubj'), (('is', 'responsible'), 'cop'), (('responsible', 'company'), 'acl:relcl'), (('for', 'mitigating'), 'mark'), (('mitigating', 'responsible'), 'advcl'), (('fraud', 'mitigating'), 'obj'), (('?', 'impact'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 217 =================================

• How is the ROI of AI and analytics measured? Is there any current method to  track/benchmark the performance of current business processes and outcomes? 


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 How is the ROI of AI and analytics measured? 

Tokens are: 
>> ['How', 'is', 'the', 'ROI', 'of', 'AI', 'and', 'analytics', 'measured', '?'] 

 UPOS tags are: 
>> [('How', 'ADV'), ('is', 'AUX'), ('the', 'DET'), ('ROI', 'NOUN'), ('of', 'ADP'), ('AI', 'NOUN'), ('and', 'CCONJ'), ('analytics', 'NOUN'), ('measured', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('How', 'WRB'), ('is', 'VBZ'), ('the', 'DT'), ('ROI', 'NN'), ('of', 'IN'), ('AI', 'NN'), ('and', 'CC'), ('analytics', 'NNS'), ('measured', 'VBN'), ('?', '.')] 

 Lemmas are: 
>> [('How', 'how'), ('is', 'be'), ('the', 'the'), ('ROI', 'roi'), ('of', 'of'), ('AI', 'ai'), ('and', 'and'), ('analytics', 'analytic'), ('measured', 'measure'), ('?', '?')] 

 Dependency tags are: 
>> [(('How', 'measured'), 'advmod'), (('is', 'measured'), 'aux:pass'), (('the', 'ROI'), 'det'), (('ROI', 'measured'), 'nsubj'), (('of', 'AI'), 'case'), (('AI', 'ROI'), 'nmod'), (('and', 'analytics'), 'cc'), (('analytics', 'AI'), 'conj'), (('measured', 'root'), 'root'), (('?', 'How'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Is there any current method to  track/benchmark the performance of current business processes and outcomes? 

Tokens are: 
>> ['Is', 'there', 'any', 'current', 'method', 'to', 'track', '/', 'benchmark', 'the', 'performance', 'of', 'current', 'business', 'processes', 'and', 'outcomes', '?'] 

 UPOS tags are: 
>> [('Is', 'VERB'), ('there', 'PRON'), ('any', 'DET'), ('current', 'ADJ'), ('method', 'NOUN'), ('to', 'PART'), ('track', 'VERB'), ('/', 'SYM'), ('benchmark', 'VERB'), ('the', 'DET'), ('performance', 'NOUN'), ('of', 'ADP'), ('current', 'ADJ'), ('business', 'NOUN'), ('processes', 'NOUN'), ('and', 'CCONJ'), ('outcomes', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Is', 'VBZ'), ('there', 'EX'), ('any', 'DT'), ('current', 'JJ'), ('method', 'NN'), ('to', 'TO'), ('track', 'VB'), ('/', ','), ('benchmark', 'VB'), ('the', 'DT'), ('performance', 'NN'), ('of', 'IN'), ('current', 'JJ'), ('business', 'NN'), ('processes', 'NNS'), ('and', 'CC'), ('outcomes', 'NNS'), ('?', '.')] 

 Lemmas are: 
>> [('Is', 'be'), ('there', 'there'), ('any', 'any'), ('current', 'current'), ('method', 'method'), ('to', 'to'), ('track', 'track'), ('/', '/'), ('benchmark', 'benchmark'), ('the', 'the'), ('performance', 'performance'), ('of', 'of'), ('current', 'current'), ('business', 'business'), ('processes', 'process'), ('and', 'and'), ('outcomes', 'outcome'), ('?', '?')] 

 Dependency tags are: 
>> [(('Is', 'root'), 'root'), (('there', 'Is'), 'expl'), (('any', 'method'), 'det'), (('current', 'method'), 'amod'), (('method', 'Is'), 'nsubj'), (('to', 'track'), 'mark'), (('track', 'method'), 'acl'), (('/', 'benchmark'), 'cc'), (('benchmark', 'track'), 'conj'), (('the', 'performance'), 'det'), (('performance', 'track'), 'obj'), (('of', 'processes'), 'case'), (('current', 'processes'), 'amod'), (('business', 'processes'), 'compound'), (('processes', 'performance'), 'nmod'), (('and', 'outcomes'), 'cc'), (('outcomes', 'processes'), 'conj'), (('?', 'Is'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 218 =================================

3. Data adequacy • What data is available? Is it structured or unstructured? Is there data relevant to  answering the business problem? Example: Operational data is required to predict  when a machine will fail. 


------------------- Sentence 1 -------------------

 3. Data adequacy • 

Tokens are: 
>> ['3', '.', 'Data', 'adequacy', '•'] 

 UPOS tags are: 
>> [('3', 'NUM'), ('.', 'PUNCT'), ('Data', 'NOUN'), ('adequacy', 'NOUN'), ('•', 'PUNCT')] 

 XPOS tags are: 
>> [('3', 'LS'), ('.', '.'), ('Data', 'NN'), ('adequacy', 'NN'), ('•', 'NFP')] 

 Lemmas are: 
>> [('3', '3'), ('.', '.'), ('Data', 'data'), ('adequacy', 'adequacy'), ('•', "''")] 

 Dependency tags are: 
>> [(('3', 'adequacy'), 'nummod'), (('.', '3'), 'punct'), (('Data', 'adequacy'), 'compound'), (('adequacy', 'root'), 'root'), (('•', 'adequacy'), 'punct')]

 Named Entites are: 
>> [('3', 'CARDINAL')]

------------------- Sentence 2 -------------------

 What data is available? 

Tokens are: 
>> ['What', 'data', 'is', 'available', '?'] 

 UPOS tags are: 
>> [('What', 'DET'), ('data', 'NOUN'), ('is', 'AUX'), ('available', 'ADJ'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WDT'), ('data', 'NN'), ('is', 'VBZ'), ('available', 'JJ'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('data', 'datum'), ('is', 'be'), ('available', 'available'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'data'), 'det'), (('data', 'available'), 'nsubj'), (('is', 'available'), 'cop'), (('available', 'root'), 'root'), (('?', 'available'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Is it structured or unstructured? 

Tokens are: 
>> ['Is', 'it', 'structured', 'or', 'unstructured', '?'] 

 UPOS tags are: 
>> [('Is', 'AUX'), ('it', 'PRON'), ('structured', 'ADJ'), ('or', 'CCONJ'), ('unstructured', 'ADJ'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Is', 'VBZ'), ('it', 'PRP'), ('structured', 'JJ'), ('or', 'CC'), ('unstructured', 'JJ'), ('?', '.')] 

 Lemmas are: 
>> [('Is', 'be'), ('it', 'it'), ('structured', 'structure'), ('or', 'or'), ('unstructured', 'unstructured'), ('?', '?')] 

 Dependency tags are: 
>> [(('Is', 'structured'), 'cop'), (('it', 'structured'), 'nsubj'), (('structured', 'root'), 'root'), (('or', 'unstructured'), 'cc'), (('unstructured', 'structured'), 'conj'), (('?', 'structured'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Is there data relevant to  answering the business problem? 

Tokens are: 
>> ['Is', 'there', 'data', 'relevant', 'to', 'answering', 'the', 'business', 'problem', '?'] 

 UPOS tags are: 
>> [('Is', 'VERB'), ('there', 'PRON'), ('data', 'NOUN'), ('relevant', 'ADJ'), ('to', 'SCONJ'), ('answering', 'VERB'), ('the', 'DET'), ('business', 'NOUN'), ('problem', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Is', 'VBZ'), ('there', 'EX'), ('data', 'NNS'), ('relevant', 'JJ'), ('to', 'IN'), ('answering', 'VBG'), ('the', 'DT'), ('business', 'NN'), ('problem', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Is', 'be'), ('there', 'there'), ('data', 'datum'), ('relevant', 'relevant'), ('to', 'to'), ('answering', 'answer'), ('the', 'the'), ('business', 'business'), ('problem', 'problem'), ('?', '?')] 

 Dependency tags are: 
>> [(('Is', 'root'), 'root'), (('there', 'Is'), 'expl'), (('data', 'Is'), 'nsubj'), (('relevant', 'data'), 'amod'), (('to', 'answering'), 'mark'), (('answering', 'relevant'), 'advcl'), (('the', 'problem'), 'det'), (('business', 'problem'), 'compound'), (('problem', 'answering'), 'obj'), (('?', 'Is'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 Example: Operational data is required to predict  when a machine will fail. 

Tokens are: 
>> ['Example', ':', 'Operational', 'data', 'is', 'required', 'to', 'predict', 'when', 'a', 'machine', 'will', 'fail', '.'] 

 UPOS tags are: 
>> [('Example', 'NOUN'), (':', 'PUNCT'), ('Operational', 'ADJ'), ('data', 'NOUN'), ('is', 'AUX'), ('required', 'VERB'), ('to', 'PART'), ('predict', 'VERB'), ('when', 'SCONJ'), ('a', 'DET'), ('machine', 'NOUN'), ('will', 'AUX'), ('fail', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Example', 'NN'), (':', ':'), ('Operational', 'JJ'), ('data', 'NN'), ('is', 'VBZ'), ('required', 'VBN'), ('to', 'TO'), ('predict', 'VB'), ('when', 'WRB'), ('a', 'DT'), ('machine', 'NN'), ('will', 'MD'), ('fail', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('Example', 'example'), (':', ':'), ('Operational', 'operational'), ('data', 'datum'), ('is', 'be'), ('required', 'require'), ('to', 'to'), ('predict', 'predict'), ('when', 'when'), ('a', 'a'), ('machine', 'machine'), ('will', 'will'), ('fail', 'fail'), ('.', '.')] 

 Dependency tags are: 
>> [(('Example', 'root'), 'root'), ((':', 'Example'), 'punct'), (('Operational', 'data'), 'amod'), (('data', 'required'), 'nsubj:pass'), (('is', 'required'), 'aux:pass'), (('required', 'Example'), 'appos'), (('to', 'predict'), 'mark'), (('predict', 'required'), 'xcomp'), (('when', 'fail'), 'mark'), (('a', 'machine'), 'det'), (('machine', 'fail'), 'nsubj'), (('will', 'fail'), 'aux'), (('fail', 'predict'), 'advcl'), (('.', 'Example'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 219 =================================

• How much data does the organization have? Where is the data stored?  


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 How much data does the organization have? 

Tokens are: 
>> ['How', 'much', 'data', 'does', 'the', 'organization', 'have', '?'] 

 UPOS tags are: 
>> [('How', 'ADV'), ('much', 'ADJ'), ('data', 'NOUN'), ('does', 'AUX'), ('the', 'DET'), ('organization', 'NOUN'), ('have', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('How', 'WRB'), ('much', 'JJ'), ('data', 'NN'), ('does', 'VBZ'), ('the', 'DT'), ('organization', 'NN'), ('have', 'VB'), ('?', '.')] 

 Lemmas are: 
>> [('How', 'how'), ('much', 'much'), ('data', 'datum'), ('does', 'do'), ('the', 'the'), ('organization', 'organization'), ('have', 'have'), ('?', '?')] 

 Dependency tags are: 
>> [(('How', 'much'), 'advmod'), (('much', 'data'), 'amod'), (('data', 'have'), 'obj'), (('does', 'have'), 'aux'), (('the', 'organization'), 'det'), (('organization', 'have'), 'nsubj'), (('have', 'root'), 'root'), (('?', 'have'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Where is the data stored? 

Tokens are: 
>> ['Where', 'is', 'the', 'data', 'stored', '?'] 

 UPOS tags are: 
>> [('Where', 'ADV'), ('is', 'AUX'), ('the', 'DET'), ('data', 'NOUN'), ('stored', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Where', 'WRB'), ('is', 'VBZ'), ('the', 'DT'), ('data', 'NNS'), ('stored', 'VBN'), ('?', '.')] 

 Lemmas are: 
>> [('Where', 'where'), ('is', 'be'), ('the', 'the'), ('data', 'datum'), ('stored', 'store'), ('?', '?')] 

 Dependency tags are: 
>> [(('Where', 'stored'), 'advmod'), (('is', 'stored'), 'aux:pass'), (('the', 'data'), 'det'), (('data', 'stored'), 'nsubj:pass'), (('stored', 'root'), 'root'), (('?', 'stored'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 220 =================================

• Is data readily accessible for analysis and modelling?


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Is data readily accessible for analysis and modelling? 

Tokens are: 
>> ['Is', 'data', 'readily', 'accessible', 'for', 'analysis', 'and', 'modelling', '?'] 

 UPOS tags are: 
>> [('Is', 'AUX'), ('data', 'NOUN'), ('readily', 'ADV'), ('accessible', 'ADJ'), ('for', 'ADP'), ('analysis', 'NOUN'), ('and', 'CCONJ'), ('modelling', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Is', 'VBZ'), ('data', 'NNS'), ('readily', 'RB'), ('accessible', 'JJ'), ('for', 'IN'), ('analysis', 'NN'), ('and', 'CC'), ('modelling', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Is', 'be'), ('data', 'datum'), ('readily', 'readily'), ('accessible', 'accessible'), ('for', 'for'), ('analysis', 'analysis'), ('and', 'and'), ('modelling', 'modelling'), ('?', '?')] 

 Dependency tags are: 
>> [(('Is', 'accessible'), 'cop'), (('data', 'accessible'), 'nsubj'), (('readily', 'accessible'), 'advmod'), (('accessible', 'root'), 'root'), (('for', 'analysis'), 'case'), (('analysis', 'accessible'), 'obl'), (('and', 'modelling'), 'cc'), (('modelling', 'analysis'), 'conj'), (('?', 'accessible'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 221 =================================

14/14 


------------------- Sentence 1 -------------------

 14/14 

Tokens are: 
>> ['14/14'] 

 UPOS tags are: 
>> [('14/14', 'NUM')] 

 XPOS tags are: 
>> [('14/14', 'CD')] 

 Lemmas are: 
>> [('14/14', '14/14')] 

 Dependency tags are: 
>> [(('14/14', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 222 =================================

Copyright © 2021 Open Text. All Rights Reserved. Trademarks owned by Open Text.   For more information, visit: https://www.opentext.com/about/copyright-information • (23.04.21)17629.EN# 


------------------- Sentence 1 -------------------

 Copyright © 2021 Open Text. 

Tokens are: 
>> ['Copyright', '©', '2021', 'Open', 'Text', '.'] 

 UPOS tags are: 
>> [('Copyright', 'NOUN'), ('©', 'ADP'), ('2021', 'NUM'), ('Open', 'ADJ'), ('Text', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Copyright', 'NN'), ('©', 'IN'), ('2021', 'CD'), ('Open', 'JJ'), ('Text', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Copyright', 'copyright'), ('©', 'at'), ('2021', '2021'), ('Open', 'Open'), ('Text', 'text'), ('.', '.')] 

 Dependency tags are: 
>> [(('Copyright', 'root'), 'root'), (('©', 'Text'), 'case'), (('2021', 'Text'), 'nummod'), (('Open', 'Text'), 'amod'), (('Text', 'Copyright'), 'nmod'), (('.', 'Copyright'), 'punct')]

 Named Entites are: 
>> [('2021', 'DATE')]

------------------- Sentence 2 -------------------

 All Rights Reserved. 

Tokens are: 
>> ['All', 'Rights', 'Reserved', '.'] 

 UPOS tags are: 
>> [('All', 'DET'), ('Rights', 'NOUN'), ('Reserved', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('All', 'DT'), ('Rights', 'NNS'), ('Reserved', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('All', 'all'), ('Rights', 'rights'), ('Reserved', 'reserve'), ('.', '.')] 

 Dependency tags are: 
>> [(('All', 'Rights'), 'det'), (('Rights', 'Reserved'), 'nsubj:pass'), (('Reserved', 'root'), 'root'), (('.', 'Reserved'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Trademarks owned by Open Text. 

Tokens are: 
>> ['Trademarks', 'owned', 'by', 'Open', 'Text', '.'] 

 UPOS tags are: 
>> [('Trademarks', 'NOUN'), ('owned', 'VERB'), ('by', 'ADP'), ('Open', 'ADJ'), ('Text', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Trademarks', 'NNS'), ('owned', 'VBN'), ('by', 'IN'), ('Open', 'NNP'), ('Text', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('Trademarks', 'trademark'), ('owned', 'own'), ('by', 'by'), ('Open', 'Open'), ('Text', 'text'), ('.', '.')] 

 Dependency tags are: 
>> [(('Trademarks', 'root'), 'root'), (('owned', 'Trademarks'), 'acl'), (('by', 'Text'), 'case'), (('Open', 'Text'), 'amod'), (('Text', 'owned'), 'obl'), (('.', 'Trademarks'), 'punct')]

 Named Entites are: 
>> [('Open Text', 'ORG')]

------------------- Sentence 4 -------------------

 For more information, visit: https://www.opentext.com/about/copyright-information • (23.04.21)17629.EN# 

Tokens are: 
>> ['For', 'more', 'information', ',', 'visit', ':', 'https://www.opentext.com/about/copyright-information', '•', '(', '23.04.21)17629.EN', '#'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('more', 'ADJ'), ('information', 'NOUN'), (',', 'PUNCT'), ('visit', 'VERB'), (':', 'PUNCT'), ('https://www.opentext.com/about/copyright-information', 'X'), ('•', 'PUNCT'), ('(', 'PUNCT'), ('23.04.21)17629.EN', 'NUM'), ('#', 'SYM')] 

 XPOS tags are: 
>> [('For', 'IN'), ('more', 'JJR'), ('information', 'NN'), (',', ','), ('visit', 'VB'), (':', ':'), ('https://www.opentext.com/about/copyright-information', 'ADD'), ('•', 'NFP'), ('(', '-LRB-'), ('23.04.21)17629.EN', 'CD'), ('#', 'NN')] 

 Lemmas are: 
>> [('For', 'for'), ('more', 'more'), ('information', 'information'), (',', ','), ('visit', 'visit'), (':', ':'), ('https://www.opentext.com/about/copyright-information', 'https://www.opentext.com/about/copyright-information'), ('•', "''"), ('(', '('), ('23.04.21)17629.EN', '23.04.21)17629.en'), ('#', '#')] 

 Dependency tags are: 
>> [(('For', 'information'), 'case'), (('more', 'information'), 'amod'), (('information', 'visit'), 'obl'), ((',', 'visit'), 'punct'), (('visit', 'root'), 'root'), ((':', 'https://www.opentext.com/about/copyright-information'), 'punct'), (('https://www.opentext.com/about/copyright-information', 'visit'), 'appos'), (('•', 'https://www.opentext.com/about/copyright-information'), 'punct'), (('(', '#'), 'punct'), (('23.04.21)17629.EN', '#'), 'nummod'), (('#', 'https://www.opentext.com/about/copyright-information'), 'appos')]

 Named Entites are: 
>> []

================================ Paragraph 223 =================================

opentext.com/contact 


------------------- Sentence 1 -------------------

 opentext.com/contact 

Tokens are: 
>> ['opentext.com/contact'] 

 UPOS tags are: 
>> [('opentext.com/contact', 'X')] 

 XPOS tags are: 
>> [('opentext.com/contact', 'ADD')] 

 Lemmas are: 
>> [('opentext.com/contact', 'opentext.com/contact')] 

 Dependency tags are: 
>> [(('opentext.com/contact', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 224 =================================

Use-case evaluation worksheet Section 1: Business knowledge                   


------------------- Sentence 1 -------------------

 Use-case evaluation worksheet Section 1: Business knowledge 

Tokens are: 
>> ['Use-', 'case', 'evaluation', 'worksheet', 'Section', '1', ':', 'Business', 'knowledge'] 

 UPOS tags are: 
>> [('Use-', 'ADJ'), ('case', 'NOUN'), ('evaluation', 'NOUN'), ('worksheet', 'NOUN'), ('Section', 'NOUN'), ('1', 'NUM'), (':', 'PUNCT'), ('Business', 'NOUN'), ('knowledge', 'NOUN')] 

 XPOS tags are: 
>> [('Use-', 'JJ'), ('case', 'NN'), ('evaluation', 'NN'), ('worksheet', 'NN'), ('Section', 'NN'), ('1', 'CD'), (':', ':'), ('Business', 'NN'), ('knowledge', 'NN')] 

 Lemmas are: 
>> [('Use-', 'Use-'), ('case', 'case'), ('evaluation', 'evaluation'), ('worksheet', 'worksheet'), ('Section', 'section'), ('1', '1'), (':', ':'), ('Business', 'business'), ('knowledge', 'knowledge')] 

 Dependency tags are: 
>> [(('Use-', 'case'), 'amod'), (('case', 'evaluation'), 'compound'), (('evaluation', 'worksheet'), 'compound'), (('worksheet', 'root'), 'root'), (('Section', 'worksheet'), 'appos'), (('1', 'Section'), 'nummod'), ((':', 'knowledge'), 'punct'), (('Business', 'knowledge'), 'compound'), (('knowledge', 'worksheet'), 'appos')]

 Named Entites are: 
>> [('1', 'CARDINAL')]

================================ Paragraph 225 =================================

                


================================ Paragraph 226 =================================

                


================================ Paragraph 227 =================================

                


================================ Paragraph 228 =================================

Section 2: Solution vision                  


------------------- Sentence 1 -------------------

 Section 2: Solution vision 

Tokens are: 
>> ['Section', '2', ':', 'Solution', 'vision'] 

 UPOS tags are: 
>> [('Section', 'NOUN'), ('2', 'NUM'), (':', 'PUNCT'), ('Solution', 'NOUN'), ('vision', 'NOUN')] 

 XPOS tags are: 
>> [('Section', 'NN'), ('2', 'CD'), (':', ':'), ('Solution', 'NN'), ('vision', 'NN')] 

 Lemmas are: 
>> [('Section', 'section'), ('2', '2'), (':', ':'), ('Solution', 'solution'), ('vision', 'vision')] 

 Dependency tags are: 
>> [(('Section', 'root'), 'root'), (('2', 'Section'), 'nummod'), ((':', 'Section'), 'punct'), (('Solution', 'vision'), 'compound'), (('vision', 'Section'), 'appos')]

 Named Entites are: 
>> [('2', 'CARDINAL')]

================================ Paragraph 229 =================================

                


================================ Paragraph 230 =================================

                


================================ Paragraph 231 =================================

               


================================ Paragraph 232 =================================

Section 3: Data adequacy                  


------------------- Sentence 1 -------------------

 Section 3: Data adequacy 

Tokens are: 
>> ['Section', '3', ':', 'Data', 'adequacy'] 

 UPOS tags are: 
>> [('Section', 'NOUN'), ('3', 'NUM'), (':', 'PUNCT'), ('Data', 'NOUN'), ('adequacy', 'NOUN')] 

 XPOS tags are: 
>> [('Section', 'NN'), ('3', 'CD'), (':', ':'), ('Data', 'NN'), ('adequacy', 'NN')] 

 Lemmas are: 
>> [('Section', 'section'), ('3', '3'), (':', ':'), ('Data', 'data'), ('adequacy', 'adequacy')] 

 Dependency tags are: 
>> [(('Section', 'root'), 'root'), (('3', 'Section'), 'nummod'), ((':', 'Section'), 'punct'), (('Data', 'adequacy'), 'compound'), (('adequacy', 'Section'), 'appos')]

 Named Entites are: 
>> [('3', 'CARDINAL')]

================================ Paragraph 233 =================================

                


================================ Paragraph 234 =================================

                


================================ Paragraph 235 =================================

               


================================ Paragraph 236 =================================

Tips and tricks • Framing the right business question is key to success. 


------------------- Sentence 1 -------------------

 Tips and tricks • Framing the right business question is key to success. 

Tokens are: 
>> ['Tips', 'and', 'tricks', '•', 'Framing', 'the', 'right', 'business', 'question', 'is', 'key', 'to', 'success', '.'] 

 UPOS tags are: 
>> [('Tips', 'NOUN'), ('and', 'CCONJ'), ('tricks', 'NOUN'), ('•', 'PUNCT'), ('Framing', 'VERB'), ('the', 'DET'), ('right', 'ADJ'), ('business', 'NOUN'), ('question', 'NOUN'), ('is', 'AUX'), ('key', 'ADJ'), ('to', 'ADP'), ('success', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Tips', 'NNS'), ('and', 'CC'), ('tricks', 'NNS'), ('•', 'NFP'), ('Framing', 'VBG'), ('the', 'DT'), ('right', 'JJ'), ('business', 'NN'), ('question', 'NN'), ('is', 'VBZ'), ('key', 'JJ'), ('to', 'IN'), ('success', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Tips', 'tip'), ('and', 'and'), ('tricks', 'trick'), ('•', "''"), ('Framing', 'frame'), ('the', 'the'), ('right', 'right'), ('business', 'business'), ('question', 'question'), ('is', 'be'), ('key', 'key'), ('to', 'to'), ('success', 'success'), ('.', '.')] 

 Dependency tags are: 
>> [(('Tips', 'key'), 'nsubj'), (('and', 'tricks'), 'cc'), (('tricks', 'Tips'), 'conj'), (('•', 'Tips'), 'punct'), (('Framing', 'key'), 'csubj'), (('the', 'question'), 'det'), (('right', 'question'), 'amod'), (('business', 'question'), 'compound'), (('question', 'Framing'), 'obj'), (('is', 'key'), 'cop'), (('key', 'root'), 'root'), (('to', 'success'), 'case'), (('success', 'key'), 'obl'), (('.', 'key'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 237 =================================

• Identify what success means and what the end solution will look like at the start.  


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Identify what success means and what the end solution will look like at the start. 

Tokens are: 
>> ['Identify', 'what', 'success', 'means', 'and', 'what', 'the', 'end', 'solution', 'will', 'look', 'like', 'at', 'the', 'start', '.'] 

 UPOS tags are: 
>> [('Identify', 'VERB'), ('what', 'DET'), ('success', 'NOUN'), ('means', 'VERB'), ('and', 'CCONJ'), ('what', 'PRON'), ('the', 'DET'), ('end', 'NOUN'), ('solution', 'NOUN'), ('will', 'AUX'), ('look', 'VERB'), ('like', 'ADP'), ('at', 'ADP'), ('the', 'DET'), ('start', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Identify', 'VB'), ('what', 'WDT'), ('success', 'NN'), ('means', 'VBZ'), ('and', 'CC'), ('what', 'WP'), ('the', 'DT'), ('end', 'NN'), ('solution', 'NN'), ('will', 'MD'), ('look', 'VB'), ('like', 'IN'), ('at', 'IN'), ('the', 'DT'), ('start', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Identify', 'identify'), ('what', 'what'), ('success', 'success'), ('means', 'mean'), ('and', 'and'), ('what', 'what'), ('the', 'the'), ('end', 'end'), ('solution', 'solution'), ('will', 'will'), ('look', 'look'), ('like', 'like'), ('at', 'at'), ('the', 'the'), ('start', 'start'), ('.', '.')] 

 Dependency tags are: 
>> [(('Identify', 'root'), 'root'), (('what', 'success'), 'det'), (('success', 'means'), 'nsubj'), (('means', 'Identify'), 'ccomp'), (('and', 'look'), 'cc'), (('what', 'look'), 'obl'), (('the', 'solution'), 'det'), (('end', 'solution'), 'compound'), (('solution', 'look'), 'nsubj'), (('will', 'look'), 'aux'), (('look', 'means'), 'conj'), (('like', 'look'), 'obl'), (('at', 'start'), 'case'), (('the', 'start'), 'det'), (('start', 'look'), 'obl'), (('.', 'Identify'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 238 =================================

• Remember that AI applications have a very different lifecycle—training, testing,  modelling, experimenting and creating. 


------------------- Sentence 1 -------------------

 • Remember that AI applications have a very different lifecycle—training, testing,  modelling, experimenting and creating. 

Tokens are: 
>> ['•', 'Remember', 'that', 'AI', 'applications', 'have', 'a', 'very', 'different', 'lifecycle', '—', 'training', ',', 'testing', ',', 'modelling', ',', 'experimenting', 'and', 'creating', '.'] 

 UPOS tags are: 
>> [('•', 'PUNCT'), ('Remember', 'VERB'), ('that', 'SCONJ'), ('AI', 'PART'), ('applications', 'NOUN'), ('have', 'VERB'), ('a', 'DET'), ('very', 'ADV'), ('different', 'ADJ'), ('lifecycle', 'NOUN'), ('—', 'PUNCT'), ('training', 'NOUN'), (',', 'PUNCT'), ('testing', 'NOUN'), (',', 'PUNCT'), ('modelling', 'NOUN'), (',', 'PUNCT'), ('experimenting', 'VERB'), ('and', 'CCONJ'), ('creating', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP'), ('Remember', 'VB'), ('that', 'IN'), ('AI', 'POS'), ('applications', 'NNS'), ('have', 'VBP'), ('a', 'DT'), ('very', 'RB'), ('different', 'JJ'), ('lifecycle', 'NN'), ('—', ':'), ('training', 'NN'), (',', ','), ('testing', 'NN'), (',', ','), ('modelling', 'NN'), (',', ','), ('experimenting', 'VBG'), ('and', 'CC'), ('creating', 'VBG'), ('.', '.')] 

 Lemmas are: 
>> [('•', "''"), ('Remember', 'remember'), ('that', 'that'), ('AI', 'ai'), ('applications', 'application'), ('have', 'have'), ('a', 'a'), ('very', 'very'), ('different', 'different'), ('lifecycle', 'lifecycle'), ('—', '—'), ('training', 'training'), (',', ','), ('testing', 'testing'), (',', ','), ('modelling', 'modelling'), (',', ','), ('experimenting', 'experiment'), ('and', 'and'), ('creating', 'create'), ('.', '.')] 

 Dependency tags are: 
>> [(('•', 'Remember'), 'punct'), (('Remember', 'root'), 'root'), (('that', 'have'), 'mark'), (('AI', 'applications'), 'det'), (('applications', 'have'), 'nsubj'), (('have', 'Remember'), 'ccomp'), (('a', 'lifecycle'), 'det'), (('very', 'different'), 'advmod'), (('different', 'lifecycle'), 'amod'), (('lifecycle', 'have'), 'obj'), (('—', 'training'), 'punct'), (('training', 'lifecycle'), 'appos'), ((',', 'testing'), 'punct'), (('testing', 'training'), 'conj'), ((',', 'modelling'), 'punct'), (('modelling', 'training'), 'conj'), ((',', 'experimenting'), 'punct'), (('experimenting', 'training'), 'conj'), (('and', 'creating'), 'cc'), (('creating', 'experimenting'), 'conj'), (('.', 'Remember'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 239 =================================

• Start small, start early! 


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Start small, start early! 

Tokens are: 
>> ['Start', 'small', ',', 'start', 'early', '!'] 

 UPOS tags are: 
>> [('Start', 'VERB'), ('small', 'ADJ'), (',', 'PUNCT'), ('start', 'VERB'), ('early', 'ADV'), ('!', 'PUNCT')] 

 XPOS tags are: 
>> [('Start', 'VB'), ('small', 'JJ'), (',', ','), ('start', 'VB'), ('early', 'RB'), ('!', '.')] 

 Lemmas are: 
>> [('Start', 'start'), ('small', 'small'), (',', ','), ('start', 'start'), ('early', 'early'), ('!', '!')] 

 Dependency tags are: 
>> [(('Start', 'root'), 'root'), (('small', 'Start'), 'xcomp'), ((',', 'Start'), 'punct'), (('start', 'Start'), 'parataxis'), (('early', 'start'), 'advmod'), (('!', 'Start'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 240 =================================

• Iterate, iterate, iterate!  


------------------- Sentence 1 -------------------

 • 

Tokens are: 
>> ['•'] 

 UPOS tags are: 
>> [('•', 'PUNCT')] 

 XPOS tags are: 
>> [('•', 'NFP')] 

 Lemmas are: 
>> [('•', "''")] 

 Dependency tags are: 
>> [(('•', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Iterate, iterate, iterate! 

Tokens are: 
>> ['Iterate', ',', 'iterate', ',', 'iterate', '!'] 

 UPOS tags are: 
>> [('Iterate', 'VERB'), (',', 'PUNCT'), ('iterate', 'VERB'), (',', 'PUNCT'), ('iterate', 'VERB'), ('!', 'PUNCT')] 

 XPOS tags are: 
>> [('Iterate', 'VB'), (',', ','), ('iterate', 'VB'), (',', ','), ('iterate', 'VB'), ('!', '.')] 

 Lemmas are: 
>> [('Iterate', 'iterate'), (',', ','), ('iterate', 'iterate'), (',', ','), ('iterate', 'iterate'), ('!', '!')] 

 Dependency tags are: 
>> [(('Iterate', 'root'), 'root'), ((',', 'Iterate'), 'punct'), (('iterate', 'Iterate'), 'parataxis'), ((',', 'iterate'), 'punct'), (('iterate', 'Iterate'), 'conj'), (('!', 'Iterate'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 241 =================================

About OpenText OpenText, The Information Company, enables organizations to gain insight through  market leading information management solutions, on-premises or in the cloud. For  more information about OpenText (NASDAQ: OTEX, TSX: OTEX) visit: opentext.com. 


------------------- Sentence 1 -------------------

 About Open 

Tokens are: 
>> ['About', 'Open'] 

 UPOS tags are: 
>> [('About', 'ADP'), ('Open', 'PROPN')] 

 XPOS tags are: 
>> [('About', 'IN'), ('Open', 'NNP')] 

 Lemmas are: 
>> [('About', 'about'), ('Open', 'open')] 

 Dependency tags are: 
>> [(('About', 'Open'), 'case'), (('Open', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Text Open 

Tokens are: 
>> ['Text', 'Open'] 

 UPOS tags are: 
>> [('Text', 'NOUN'), ('Open', 'ADJ')] 

 XPOS tags are: 
>> [('Text', 'NN'), ('Open', 'JJ')] 

 Lemmas are: 
>> [('Text', 'text'), ('Open', 'Open')] 

 Dependency tags are: 
>> [(('Text', 'root'), 'root'), (('Open', 'Text'), 'amod')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Text, 

Tokens are: 
>> ['Text', ','] 

 UPOS tags are: 
>> [('Text', 'NOUN'), (',', 'PUNCT')] 

 XPOS tags are: 
>> [('Text', 'NN'), (',', ',')] 

 Lemmas are: 
>> [('Text', 'text'), (',', ',')] 

 Dependency tags are: 
>> [(('Text', 'root'), 'root'), ((',', 'Text'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 The Information Company, enables organizations to gain insight through  market leading information management solutions, on-premises or in the cloud. 

Tokens are: 
>> ['The', 'Information', 'Company', ',', 'enables', 'organizations', 'to', 'gain', 'insight', 'through', 'market', 'leading', 'information', 'management', 'solutions', ',', 'on-', 'premises', 'or', 'in', 'the', 'cloud', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('Information', 'NOUN'), ('Company', 'NOUN'), (',', 'PUNCT'), ('enables', 'VERB'), ('organizations', 'NOUN'), ('to', 'PART'), ('gain', 'VERB'), ('insight', 'NOUN'), ('through', 'ADP'), ('market', 'NOUN'), ('leading', 'VERB'), ('information', 'NOUN'), ('management', 'NOUN'), ('solutions', 'NOUN'), (',', 'PUNCT'), ('on-', 'NOUN'), ('premises', 'NOUN'), ('or', 'CCONJ'), ('in', 'ADP'), ('the', 'DET'), ('cloud', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('Information', 'NN'), ('Company', 'NN'), (',', ','), ('enables', 'VBZ'), ('organizations', 'NNS'), ('to', 'TO'), ('gain', 'VB'), ('insight', 'NN'), ('through', 'IN'), ('market', 'NN'), ('leading', 'VBG'), ('information', 'NN'), ('management', 'NN'), ('solutions', 'NNS'), (',', ','), ('on-', 'NN'), ('premises', 'NNS'), ('or', 'CC'), ('in', 'IN'), ('the', 'DT'), ('cloud', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('Information', 'information'), ('Company', 'company'), (',', ','), ('enables', 'enable'), ('organizations', 'organization'), ('to', 'to'), ('gain', 'gain'), ('insight', 'insight'), ('through', 'through'), ('market', 'market'), ('leading', 'lead'), ('information', 'information'), ('management', 'management'), ('solutions', 'solution'), (',', ','), ('on-', 'on-'), ('premises', 'premise'), ('or', 'or'), ('in', 'in'), ('the', 'the'), ('cloud', 'cloud'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'Company'), 'det'), (('Information', 'Company'), 'compound'), (('Company', 'enables'), 'nsubj'), ((',', 'enables'), 'punct'), (('enables', 'root'), 'root'), (('organizations', 'enables'), 'obj'), (('to', 'gain'), 'mark'), (('gain', 'enables'), 'xcomp'), (('insight', 'gain'), 'obj'), (('through', 'solutions'), 'case'), (('market', 'solutions'), 'compound'), (('leading', 'solutions'), 'amod'), (('information', 'management'), 'compound'), (('management', 'solutions'), 'compound'), (('solutions', 'insight'), 'nmod'), ((',', 'premises'), 'punct'), (('on-', 'premises'), 'compound'), (('premises', 'solutions'), 'conj'), (('or', 'cloud'), 'cc'), (('in', 'cloud'), 'case'), (('the', 'cloud'), 'det'), (('cloud', 'solutions'), 'conj'), (('.', 'enables'), 'punct')]

 Named Entites are: 
>> [('The Information Company', 'ORG')]

------------------- Sentence 5 -------------------

 For  more information about OpenText (NASDAQ: OTEX, TSX: OTEX) visit: opentext.com. 

Tokens are: 
>> ['For', 'more', 'information', 'about', 'OpenText', '(', 'NASDAQ', ':', 'OTEX', ',', 'TSX', ':', 'OTEX', ')', 'visit', ':', 'opentext.com', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('more', 'ADJ'), ('information', 'NOUN'), ('about', 'ADP'), ('OpenText', 'PROPN'), ('(', 'PUNCT'), ('NASDAQ', 'PROPN'), (':', 'PUNCT'), ('OTEX', 'PROPN'), (',', 'PUNCT'), ('TSX', 'PROPN'), (':', 'PUNCT'), ('OTEX', 'PROPN'), (')', 'PUNCT'), ('visit', 'NOUN'), (':', 'PUNCT'), ('opentext.com', 'X'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('more', 'JJR'), ('information', 'NN'), ('about', 'IN'), ('OpenText', 'NNP'), ('(', '-LRB-'), ('NASDAQ', 'NNP'), (':', ':'), ('OTEX', 'NNP'), (',', ','), ('TSX', 'NNP'), (':', ':'), ('OTEX', 'NNP'), (')', '-RRB-'), ('visit', 'NN'), (':', ':'), ('opentext.com', 'ADD'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('more', 'more'), ('information', 'information'), ('about', 'about'), ('OpenText', 'OpenText'), ('(', '('), ('NASDAQ', 'NASDAQ'), (':', ':'), ('OTEX', 'OTEX'), (',', ','), ('TSX', 'TSX'), (':', ':'), ('OTEX', 'OTEX'), (')', ')'), ('visit', 'visit'), (':', ':'), ('opentext.com', 'opentext.com'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'information'), 'case'), (('more', 'information'), 'amod'), (('information', 'visit'), 'nmod'), (('about', 'OpenText'), 'case'), (('OpenText', 'information'), 'nmod'), (('(', 'NASDAQ'), 'punct'), (('NASDAQ', 'OpenText'), 'appos'), ((':', 'OTEX'), 'punct'), (('OTEX', 'OpenText'), 'appos'), ((',', 'TSX'), 'punct'), (('TSX', 'OTEX'), 'appos'), ((':', 'OTEX'), 'punct'), (('OTEX', 'OTEX'), 'appos'), ((')', 'OTEX'), 'punct'), (('visit', 'root'), 'root'), ((':', 'visit'), 'punct'), (('opentext.com', 'visit'), 'appos'), (('.', 'visit'), 'punct')]

 Named Entites are: 
>> [('OpenText', 'ORG'), ('OTEX', 'ORG'), ('OTEX', 'ORG')]

================================ Paragraph 242 =================================

Connect with us: • OpenText CEO Mark Barrenechea’s blog • Twitter | LinkedIn 


------------------- Sentence 1 -------------------

 Connect with us: • OpenText CEO Mark Barrenechea’s blog • Twitter | Linked 

Tokens are: 
>> ['Connect', 'with', 'us', ':', '•', 'OpenText', 'CEO', 'Mark', 'Barrenechea', '’s', 'blog', '•', 'Twitter', '|', 'Linked'] 

 UPOS tags are: 
>> [('Connect', 'VERB'), ('with', 'ADP'), ('us', 'PRON'), (':', 'PUNCT'), ('•', 'PUNCT'), ('OpenText', 'PROPN'), ('CEO', 'NOUN'), ('Mark', 'PROPN'), ('Barrenechea', 'PROPN'), ('’s', 'PART'), ('blog', 'NOUN'), ('•', 'PUNCT'), ('Twitter', 'PROPN'), ('|', 'PUNCT'), ('Linked', 'VERB')] 

 XPOS tags are: 
>> [('Connect', 'VB'), ('with', 'IN'), ('us', 'PRP'), (':', ':'), ('•', 'NFP'), ('OpenText', 'NNP'), ('CEO', 'NN'), ('Mark', 'NNP'), ('Barrenechea', 'NNP'), ('’s', 'POS'), ('blog', 'NN'), ('•', 'NFP'), ('Twitter', 'NNP'), ('|', 'NFP'), ('Linked', 'VBN')] 

 Lemmas are: 
>> [('Connect', 'connect'), ('with', 'with'), ('us', 'we'), (':', ':'), ('•', "''"), ('OpenText', 'OpenText'), ('CEO', 'ceo'), ('Mark', 'Mark'), ('Barrenechea', 'Barrenechea'), ('’s', "'s"), ('blog', 'blog'), ('•', "''"), ('Twitter', 'Twitter'), ('|', '|'), ('Linked', 'link')] 

 Dependency tags are: 
>> [(('Connect', 'root'), 'root'), (('with', 'us'), 'case'), (('us', 'Connect'), 'obl'), ((':', 'Connect'), 'punct'), (('•', 'blog'), 'punct'), (('OpenText', 'CEO'), 'compound'), (('CEO', 'blog'), 'nmod:poss'), (('Mark', 'blog'), 'nmod:poss'), (('Barrenechea', 'Mark'), 'flat'), (('’s', 'Mark'), 'case'), (('blog', 'Connect'), 'parataxis'), (('•', 'blog'), 'punct'), (('Twitter', 'blog'), 'appos'), (('|', 'Twitter'), 'punct'), (('Linked', 'blog'), 'acl')]

 Named Entites are: 
>> [('OpenText', 'ORG'), ('Mark Barrenechea', 'PERSON')]

------------------- Sentence 2 -------------------

 In 

Tokens are: 
>> ['In'] 

 UPOS tags are: 
>> [('In', 'ADV')] 

 XPOS tags are: 
>> [('In', 'RB')] 

 Lemmas are: 
>> [('In', 'in')] 

 Dependency tags are: 
>> [(('In', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 243 =================================

 Learn more   OpenText™ Magellan™  


------------------- Sentence 1 -------------------

 Learn more   OpenText™ Magellan™ 

Tokens are: 
>> ['Learn', 'more', 'OpenText™', 'Magellan™'] 

 UPOS tags are: 
>> [('Learn', 'VERB'), ('more', 'ADJ'), ('OpenText™', 'PROPN'), ('Magellan™', 'PROPN')] 

 XPOS tags are: 
>> [('Learn', 'VB'), ('more', 'JJR'), ('OpenText™', 'NNP'), ('Magellan™', 'NNP')] 

 Lemmas are: 
>> [('Learn', 'learn'), ('more', 'more'), ('OpenText™', 'OpenText™'), ('Magellan™', 'Magellan™')] 

 Dependency tags are: 
>> [(('Learn', 'root'), 'root'), (('more', 'OpenText™'), 'amod'), (('OpenText™', 'Learn'), 'obj'), (('Magellan™', 'OpenText™'), 'flat')]

 Named Entites are: 
>> [('OpenText™ Magellan™', 'PERSON')]

================================ Paragraph 244 =================================

 OpenText™ Magellan™    product overview  


------------------- Sentence 1 -------------------

 OpenText™ Magellan™    product overview 

Tokens are: 
>> ['OpenText™', 'Magellan™', 'product', 'overview'] 

 UPOS tags are: 
>> [('OpenText™', 'PROPN'), ('Magellan™', 'PROPN'), ('product', 'NOUN'), ('overview', 'NOUN')] 

 XPOS tags are: 
>> [('OpenText™', 'NNP'), ('Magellan™', 'NNP'), ('product', 'NN'), ('overview', 'NN')] 

 Lemmas are: 
>> [('OpenText™', 'OpenText™'), ('Magellan™', 'Magellan™'), ('product', 'product'), ('overview', 'overview')] 

 Dependency tags are: 
>> [(('OpenText™', 'overview'), 'compound'), (('Magellan™', 'OpenText™'), 'flat'), (('product', 'overview'), 'compound'), (('overview', 'root'), 'root')]

 Named Entites are: 
>> [('OpenText™ Magellan™', 'ORG')]

================================ Paragraph 245 =================================

 OpenText AI white paper   


------------------- Sentence 1 -------------------

 Open 

Tokens are: 
>> ['Open'] 

 UPOS tags are: 
>> [('Open', 'ADJ')] 

 XPOS tags are: 
>> [('Open', 'JJ')] 

 Lemmas are: 
>> [('Open', 'Open')] 

 Dependency tags are: 
>> [(('Open', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Text AI white paper 

Tokens are: 
>> ['Text', 'AI', 'white', 'paper'] 

 UPOS tags are: 
>> [('Text', 'NOUN'), ('AI', 'AUX'), ('white', 'ADJ'), ('paper', 'NOUN')] 

 XPOS tags are: 
>> [('Text', 'NN'), ('AI', 'VBZ'), ('white', 'JJ'), ('paper', 'NN')] 

 Lemmas are: 
>> [('Text', 'text'), ('AI', 'be'), ('white', 'white'), ('paper', 'paper')] 

 Dependency tags are: 
>> [(('Text', 'paper'), 'nsubj'), (('AI', 'paper'), 'cop'), (('white', 'paper'), 'amod'), (('paper', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 246 =================================

 OpenText™ Magellan™ infographic 


------------------- Sentence 1 -------------------

 OpenText™ Magellan™ infographic 

Tokens are: 
>> ['OpenText™', 'Magellan™', 'infographic'] 

 UPOS tags are: 
>> [('OpenText™', 'PROPN'), ('Magellan™', 'PROPN'), ('infographic', 'NOUN')] 

 XPOS tags are: 
>> [('OpenText™', 'NNP'), ('Magellan™', 'NNP'), ('infographic', 'NN')] 

 Lemmas are: 
>> [('OpenText™', 'OpenText™'), ('Magellan™', 'Magellan™'), ('infographic', 'infographic')] 

 Dependency tags are: 
>> [(('OpenText™', 'infographic'), 'compound'), (('Magellan™', 'infographic'), 'compound'), (('infographic', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 247 =================================

 Join the conversation 


------------------- Sentence 1 -------------------

 Join the conversation 

Tokens are: 
>> ['Join', 'the', 'conversation'] 

 UPOS tags are: 
>> [('Join', 'VERB'), ('the', 'DET'), ('conversation', 'NOUN')] 

 XPOS tags are: 
>> [('Join', 'VB'), ('the', 'DT'), ('conversation', 'NN')] 

 Lemmas are: 
>> [('Join', 'join'), ('the', 'the'), ('conversation', 'conversation')] 

 Dependency tags are: 
>> [(('Join', 'root'), 'root'), (('the', 'conversation'), 'det'), (('conversation', 'Join'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 248 =================================

 Keep up to date 


------------------- Sentence 1 -------------------

 Keep up to date 

Tokens are: 
>> ['Keep', 'up', 'to', 'date'] 

 UPOS tags are: 
>> [('Keep', 'VERB'), ('up', 'ADP'), ('to', 'ADP'), ('date', 'NOUN')] 

 XPOS tags are: 
>> [('Keep', 'VB'), ('up', 'RP'), ('to', 'IN'), ('date', 'NN')] 

 Lemmas are: 
>> [('Keep', 'keep'), ('up', 'up'), ('to', 'to'), ('date', 'date')] 

 Dependency tags are: 
>> [(('Keep', 'root'), 'root'), (('up', 'Keep'), 'compound:prt'), (('to', 'date'), 'case'), (('date', 'Keep'), 'obl')]

 Named Entites are: 
>> []

================================ Paragraph 249 =================================

 Watch the videos 


------------------- Sentence 1 -------------------

 Watch the videos 

Tokens are: 
>> ['Watch', 'the', 'videos'] 

 UPOS tags are: 
>> [('Watch', 'VERB'), ('the', 'DET'), ('videos', 'NOUN')] 

 XPOS tags are: 
>> [('Watch', 'VB'), ('the', 'DT'), ('videos', 'NNS')] 

 Lemmas are: 
>> [('Watch', 'watch'), ('the', 'the'), ('videos', 'video')] 

 Dependency tags are: 
>> [(('Watch', 'root'), 'root'), (('the', 'videos'), 'det'), (('videos', 'Watch'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 250 =================================

1	Forbes,	5 Ways AI Is Transforming The Customer Experience,	April	16,	2019.		 2	Gartner,	Gartner Says AI Augmentation Will Create $2.9 Trillion of Business Value in 2021,	August	5,	2019.


------------------- Sentence 1 -------------------

 1	Forbes,	5 Ways AI Is Transforming The Customer Experience,	April	16,	2019. 

Tokens are: 
>> ['1', 'Forbes', ',', '5', 'Ways', 'AI', 'Is', 'Transforming', 'The', 'Customer', 'Experience', ',', 'April', '16', ',', '2019', '.'] 

 UPOS tags are: 
>> [('1', 'NUM'), ('Forbes', 'PROPN'), (',', 'PUNCT'), ('5', 'NUM'), ('Ways', 'NOUN'), ('AI', 'NOUN'), ('Is', 'AUX'), ('Transforming', 'VERB'), ('The', 'DET'), ('Customer', 'NOUN'), ('Experience', 'NOUN'), (',', 'PUNCT'), ('April', 'PROPN'), ('16', 'NUM'), (',', 'PUNCT'), ('2019', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('1', 'LS'), ('Forbes', 'NNP'), (',', ','), ('5', 'CD'), ('Ways', 'NNS'), ('AI', 'NN'), ('Is', 'VBZ'), ('Transforming', 'VBG'), ('The', 'DT'), ('Customer', 'NN'), ('Experience', 'NN'), (',', ','), ('April', 'NNP'), ('16', 'CD'), (',', ','), ('2019', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('1', '1'), ('Forbes', 'Forbes'), (',', ','), ('5', '5'), ('Ways', 'Way'), ('AI', 'ai'), ('Is', 'be'), ('Transforming', 'transform'), ('The', 'the'), ('Customer', 'customer'), ('Experience', 'experience'), (',', ','), ('April', 'April'), ('16', '16'), (',', ','), ('2019', '2019'), ('.', '.')] 

 Dependency tags are: 
>> [(('1', 'Transforming'), 'nummod'), (('Forbes', '1'), 'flat'), ((',', 'Transforming'), 'punct'), (('5', 'Ways'), 'nummod'), (('Ways', 'Transforming'), 'nsubj'), (('AI', 'Transforming'), 'nsubj'), (('Is', 'Transforming'), 'aux'), (('Transforming', 'root'), 'root'), (('The', 'Experience'), 'det'), (('Customer', 'Experience'), 'compound'), (('Experience', 'Transforming'), 'obj'), ((',', 'April'), 'punct'), (('April', 'Experience'), 'appos'), (('16', 'April'), 'nummod'), ((',', 'April'), 'punct'), (('2019', 'April'), 'nummod'), (('.', 'Transforming'), 'punct')]

 Named Entites are: 
>> [('1', 'CARDINAL'), ('Forbes', 'ORG'), ('5', 'CARDINAL'), ('April\t16,\t2019', 'DATE')]

------------------- Sentence 2 -------------------

 2	Gartner,	Gartner Says AI Augmentation Will Create $2.9 Trillion of Business Value in 2021,	August	5,	2019. 

Tokens are: 
>> ['2', 'Gartner', ',', 'Gartner', 'Says', 'AI', 'Augmentation', 'Will', 'Create', '$', '2.9', 'Trillion', 'of', 'Business', 'Value', 'in', '2021', ',', 'August', '5', ',', '2019', '.'] 

 UPOS tags are: 
>> [('2', 'NUM'), ('Gartner', 'PROPN'), (',', 'PUNCT'), ('Gartner', 'PROPN'), ('Says', 'VERB'), ('AI', 'PROPN'), ('Augmentation', 'PROPN'), ('Will', 'AUX'), ('Create', 'VERB'), ('$', 'SYM'), ('2.9', 'NUM'), ('Trillion', 'NUM'), ('of', 'ADP'), ('Business', 'NOUN'), ('Value', 'NOUN'), ('in', 'ADP'), ('2021', 'NUM'), (',', 'PUNCT'), ('August', 'PROPN'), ('5', 'NUM'), (',', 'PUNCT'), ('2019', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('2', 'LS'), ('Gartner', 'NNP'), (',', ','), ('Gartner', 'NNP'), ('Says', 'VBZ'), ('AI', 'NNP'), ('Augmentation', 'NNP'), ('Will', 'MD'), ('Create', 'VB'), ('$', '$'), ('2.9', 'CD'), ('Trillion', 'CD'), ('of', 'IN'), ('Business', 'NN'), ('Value', 'NN'), ('in', 'IN'), ('2021', 'CD'), (',', ','), ('August', 'NNP'), ('5', 'CD'), (',', ','), ('2019', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('2', '2'), ('Gartner', 'Gartner'), (',', ','), ('Gartner', 'Gartner'), ('Says', 'say'), ('AI', 'AI'), ('Augmentation', 'Augmentation'), ('Will', 'will'), ('Create', 'create'), ('$', '$'), ('2.9', '2.9'), ('Trillion', 'trillion'), ('of', 'of'), ('Business', 'business'), ('Value', 'value'), ('in', 'in'), ('2021', '2021'), (',', ','), ('August', 'August'), ('5', '5'), (',', ','), ('2019', '2019'), ('.', '.')] 

 Dependency tags are: 
>> [(('2', 'Says'), 'nummod'), (('Gartner', '2'), 'compound'), ((',', 'Says'), 'punct'), (('Gartner', 'Says'), 'nsubj'), (('Says', 'root'), 'root'), (('AI', 'Augmentation'), 'compound'), (('Augmentation', 'Create'), 'nsubj'), (('Will', 'Create'), 'aux'), (('Create', 'Says'), 'ccomp'), (('$', 'Create'), 'obj'), (('2.9', 'Trillion'), 'compound'), (('Trillion', '$'), 'nummod'), (('of', 'Value'), 'case'), (('Business', 'Value'), 'compound'), (('Value', '$'), 'nmod'), (('in', '2021'), 'case'), (('2021', 'Create'), 'obl'), ((',', 'August'), 'punct'), (('August', '2021'), 'appos'), (('5', 'August'), 'nummod'), ((',', 'August'), 'punct'), (('2019', 'August'), 'nummod'), (('.', 'Says'), 'punct')]

 Named Entites are: 
>> [('2', 'CARDINAL'), ('$2.9 Trillion', 'MONEY'), ('2021', 'DATE'), ('August\t5,\t2019', 'DATE')]