				 *** Text Processing using Stanza *** 


================================ Paragraph 1 =================================

1Facebook AI Research, 770 Broadway, New York, New York 10003 USA. 2New York University, 715 Broadway, New York, New York 10003, USA. 3Department of Computer Science and Operations  Research Université de Montréal, Pavillon André-Aisenstadt, PO Box 6128  Centre-Ville STN Montréal, Quebec H3C 3J7, Canada. 4Google, 1600 Amphitheatre Parkway, Mountain View, California  94043, USA. 5Department of Computer Science, University of Toronto, 6 King’s College Road, Toronto, Ontario M5S 3G4, Canada. 


------------------- Sentence 1 -------------------

 1Facebook AI Research, 770 Broadway, New York, New York 10003 USA. 

Tokens are: 
>> ['1', 'Facebook', 'AI', 'Research', ',', '770', 'Broadway', ',', 'New', 'York', ',', 'New', 'York', '10003', 'USA', '.'] 

 UPOS tags are: 
>> [('1', 'NUM'), ('Facebook', 'PROPN'), ('AI', 'PROPN'), ('Research', 'PROPN'), (',', 'PUNCT'), ('770', 'NUM'), ('Broadway', 'PROPN'), (',', 'PUNCT'), ('New', 'ADJ'), ('York', 'PROPN'), (',', 'PUNCT'), ('New', 'ADJ'), ('York', 'PROPN'), ('10003', 'NUM'), ('USA', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('1', 'CD'), ('Facebook', 'NNP'), ('AI', 'NNP'), ('Research', 'NNP'), (',', ','), ('770', 'CD'), ('Broadway', 'NNP'), (',', ','), ('New', 'NNP'), ('York', 'NNP'), (',', ','), ('New', 'NNP'), ('York', 'NNP'), ('10003', 'CD'), ('USA', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('1', '1'), ('Facebook', 'Facebook'), ('AI', 'AI'), ('Research', 'Research'), (',', ','), ('770', '770'), ('Broadway', 'Broadway'), (',', ','), ('New', 'New'), ('York', 'York'), (',', ','), ('New', 'New'), ('York', 'York'), ('10003', '10003'), ('USA', 'USA'), ('.', '.')] 

 Dependency tags are: 
>> [(('1', 'Research'), 'nummod'), (('Facebook', 'AI'), 'compound'), (('AI', 'Research'), 'compound'), (('Research', 'root'), 'root'), ((',', 'Research'), 'punct'), (('770', 'Broadway'), 'nummod'), (('Broadway', 'Research'), 'list'), ((',', 'York'), 'punct'), (('New', 'York'), 'amod'), (('York', 'Broadway'), 'list'), ((',', 'York'), 'punct'), (('New', 'York'), 'amod'), (('York', 'Research'), 'list'), (('10003', 'York'), 'flat'), (('USA', 'Research'), 'list'), (('.', 'Research'), 'punct')]

 Named Entites are: 
>> [('1', 'CARDINAL'), ('Facebook AI Research', 'ORG'), ('Broadway', 'GPE'), ('New York', 'GPE'), ('New York', 'GPE'), ('USA', 'GPE')]

------------------- Sentence 2 -------------------

 2New York University, 715 Broadway, New York, New York 10003, USA. 

Tokens are: 
>> ['2New', 'York', 'University', ',', '715', 'Broadway', ',', 'New', 'York', ',', 'New', 'York', '10003', ',', 'USA', '.'] 

 UPOS tags are: 
>> [('2New', 'PROPN'), ('York', 'PROPN'), ('University', 'PROPN'), (',', 'PUNCT'), ('715', 'NUM'), ('Broadway', 'PROPN'), (',', 'PUNCT'), ('New', 'ADJ'), ('York', 'PROPN'), (',', 'PUNCT'), ('New', 'ADJ'), ('York', 'PROPN'), ('10003', 'NUM'), (',', 'PUNCT'), ('USA', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('2New', 'NNP'), ('York', 'NNP'), ('University', 'NNP'), (',', ','), ('715', 'CD'), ('Broadway', 'NNP'), (',', ','), ('New', 'NNP'), ('York', 'NNP'), (',', ','), ('New', 'NNP'), ('York', 'NNP'), ('10003', 'CD'), (',', ','), ('USA', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('2New', '2New'), ('York', 'York'), ('University', 'University'), (',', ','), ('715', '715'), ('Broadway', 'Broadway'), (',', ','), ('New', 'New'), ('York', 'York'), (',', ','), ('New', 'New'), ('York', 'York'), ('10003', '10003'), (',', ','), ('USA', 'USA'), ('.', '.')] 

 Dependency tags are: 
>> [(('2New', 'University'), 'compound'), (('York', 'University'), 'compound'), (('University', 'root'), 'root'), ((',', 'University'), 'punct'), (('715', 'Broadway'), 'nummod'), (('Broadway', 'University'), 'list'), ((',', 'York'), 'punct'), (('New', 'York'), 'amod'), (('York', 'Broadway'), 'list'), ((',', 'York'), 'punct'), (('New', 'York'), 'amod'), (('York', 'University'), 'list'), (('10003', 'York'), 'flat'), ((',', 'USA'), 'punct'), (('USA', 'University'), 'list'), (('.', 'University'), 'punct')]

 Named Entites are: 
>> [('2New York University', 'ORG'), ('Broadway', 'GPE'), ('New York', 'GPE'), ('New York', 'GPE'), ('10003', 'CARDINAL'), ('USA', 'GPE')]

------------------- Sentence 3 -------------------

 3Department of Computer Science and Operations  Research Université de Montréal, Pavillon André-Aisenstadt, PO Box 6128  Centre-Ville STN Montréal, Quebec H3C 3J7, Canada. 

Tokens are: 
>> ['3', 'Department', 'of', 'Computer', 'Science', 'and', 'Operations', 'Research', 'Université', 'de', 'Montréal', ',', 'Pavillon', 'André-Aisenstadt', ',', 'PO', 'Box', '6128', 'Centre', '-', 'Ville', 'STN', 'Montréal', ',', 'Quebec', 'H3C', '3J7', ',', 'Canada', '.'] 

 UPOS tags are: 
>> [('3', 'X'), ('Department', 'PROPN'), ('of', 'ADP'), ('Computer', 'PROPN'), ('Science', 'PROPN'), ('and', 'CCONJ'), ('Operations', 'PROPN'), ('Research', 'PROPN'), ('Université', 'PROPN'), ('de', 'PROPN'), ('Montréal', 'PROPN'), (',', 'PUNCT'), ('Pavillon', 'PROPN'), ('André-Aisenstadt', 'PROPN'), (',', 'PUNCT'), ('PO', 'PROPN'), ('Box', 'PROPN'), ('6128', 'NUM'), ('Centre', 'PROPN'), ('-', 'PUNCT'), ('Ville', 'PROPN'), ('STN', 'PROPN'), ('Montréal', 'PROPN'), (',', 'PUNCT'), ('Quebec', 'PROPN'), ('H3C', 'PROPN'), ('3J7', 'PROPN'), (',', 'PUNCT'), ('Canada', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('3', 'LS'), ('Department', 'NNP'), ('of', 'IN'), ('Computer', 'NNP'), ('Science', 'NNP'), ('and', 'CC'), ('Operations', 'NNPS'), ('Research', 'NNP'), ('Université', 'NNP'), ('de', 'NNP'), ('Montréal', 'NNP'), (',', ','), ('Pavillon', 'NNP'), ('André-Aisenstadt', 'NNP'), (',', ','), ('PO', 'NNP'), ('Box', 'NNP'), ('6128', 'CD'), ('Centre', 'NNP'), ('-', ','), ('Ville', 'NNP'), ('STN', 'NNP'), ('Montréal', 'NNP'), (',', ','), ('Quebec', 'NNP'), ('H3C', 'NNP'), ('3J7', 'NNP'), (',', ','), ('Canada', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('3', '3'), ('Department', 'Department'), ('of', 'of'), ('Computer', 'Computer'), ('Science', 'Science'), ('and', 'and'), ('Operations', 'Operation'), ('Research', 'Research'), ('Université', 'Université'), ('de', 'de'), ('Montréal', 'Montréal'), (',', ','), ('Pavillon', 'Pavillon'), ('André-Aisenstadt', 'André-Aisenstadt'), (',', ','), ('PO', 'po'), ('Box', 'box'), ('6128', '6128'), ('Centre', 'Centre'), ('-', '-'), ('Ville', 'Ville'), ('STN', 'STN'), ('Montréal', 'Montréal'), (',', ','), ('Quebec', 'Quebec'), ('H3C', 'H3C'), ('3J7', '3J7'), (',', ','), ('Canada', 'Canada'), ('.', '.')] 

 Dependency tags are: 
>> [(('3', 'Department'), 'dep'), (('Department', 'root'), 'root'), (('of', 'Science'), 'case'), (('Computer', 'Science'), 'compound'), (('Science', 'Department'), 'nmod'), (('and', 'Operations'), 'cc'), (('Operations', 'Research'), 'compound'), (('Research', 'Université'), 'compound'), (('Université', 'Department'), 'appos'), (('de', 'Université'), 'flat'), (('Montréal', 'Université'), 'flat'), ((',', 'André-Aisenstadt'), 'punct'), (('Pavillon', 'André-Aisenstadt'), 'compound'), (('André-Aisenstadt', 'Université'), 'appos'), ((',', 'Box'), 'punct'), (('PO', 'Box'), 'compound'), (('Box', 'Department'), 'appos'), (('6128', 'Box'), 'nummod'), (('Centre', 'Department'), 'list'), (('-', 'Department'), 'punct'), (('Ville', 'Department'), 'appos'), (('STN', 'Department'), 'appos'), (('Montréal', 'Department'), 'appos'), ((',', 'Quebec'), 'punct'), (('Quebec', 'Montréal'), 'appos'), (('H3C', 'Montréal'), 'appos'), (('3J7', 'Montréal'), 'appos'), ((',', 'Canada'), 'punct'), (('Canada', 'Montréal'), 'appos'), (('.', 'Department'), 'punct')]

 Named Entites are: 
>> [('3Department of Computer Science and Operations  Research Université de Montréal', 'ORG'), ('Pavillon André-Aisenstadt', 'GPE'), ('PO Box 6128  Centre-Ville', 'ORG'), ('Montréal', 'GPE'), ('Quebec', 'GPE'), ('H3C 3J7', 'GPE'), ('Canada', 'GPE')]

------------------- Sentence 4 -------------------

 4Google, 1600 Amphitheatre Parkway, Mountain View, California  94043, USA. 

Tokens are: 
>> ['4', 'Google', ',', '1600', 'Amphitheatre', 'Parkway', ',', 'Mountain', 'View', ',', 'California', '94043', ',', 'USA', '.'] 

 UPOS tags are: 
>> [('4', 'X'), ('Google', 'PROPN'), (',', 'PUNCT'), ('1600', 'NUM'), ('Amphitheatre', 'PROPN'), ('Parkway', 'PROPN'), (',', 'PUNCT'), ('Mountain', 'PROPN'), ('View', 'PROPN'), (',', 'PUNCT'), ('California', 'PROPN'), ('94043', 'NUM'), (',', 'PUNCT'), ('USA', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('4', 'LS'), ('Google', 'NNP'), (',', ','), ('1600', 'CD'), ('Amphitheatre', 'NNP'), ('Parkway', 'NNP'), (',', ','), ('Mountain', 'NNP'), ('View', 'NNP'), (',', ','), ('California', 'NNP'), ('94043', 'CD'), (',', ','), ('USA', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('4', '4'), ('Google', 'Google'), (',', ','), ('1600', '1600'), ('Amphitheatre', 'Amphitheatre'), ('Parkway', 'Parkway'), (',', ','), ('Mountain', 'Mountain'), ('View', 'View'), (',', ','), ('California', 'California'), ('94043', '94043'), (',', ','), ('USA', 'USA'), ('.', '.')] 

 Dependency tags are: 
>> [(('4', 'Google'), 'dep'), (('Google', 'root'), 'root'), ((',', 'Google'), 'punct'), (('1600', 'Parkway'), 'nummod'), (('Amphitheatre', 'Parkway'), 'compound'), (('Parkway', 'Google'), 'list'), ((',', 'View'), 'punct'), (('Mountain', 'View'), 'compound'), (('View', 'Google'), 'list'), ((',', 'California'), 'punct'), (('California', 'Google'), 'list'), (('94043', 'Google'), 'nmod:tmod'), ((',', 'USA'), 'punct'), (('USA', 'Google'), 'list'), (('.', 'Google'), 'punct')]

 Named Entites are: 
>> [('Google', 'ORG'), ('1600 Amphitheatre Parkway', 'FAC'), ('Mountain View', 'GPE'), ('California', 'GPE'), ('94043', 'CARDINAL'), ('USA', 'GPE')]

------------------- Sentence 5 -------------------

 5Department of Computer Science, University of Toronto, 6 King’s College Road, Toronto, Ontario M5S 3G4, Canada. 

Tokens are: 
>> ['5', 'Department', 'of', 'Computer', 'Science', ',', 'University', 'of', 'Toronto', ',', '6', 'King', '’s', 'College', 'Road', ',', 'Toronto', ',', 'Ontario', 'M5S', '3', 'G4', ',', 'Canada', '.'] 

 UPOS tags are: 
>> [('5', 'NUM'), ('Department', 'PROPN'), ('of', 'ADP'), ('Computer', 'PROPN'), ('Science', 'PROPN'), (',', 'PUNCT'), ('University', 'PROPN'), ('of', 'ADP'), ('Toronto', 'PROPN'), (',', 'PUNCT'), ('6', 'NUM'), ('King', 'PROPN'), ('’s', 'PART'), ('College', 'PROPN'), ('Road', 'PROPN'), (',', 'PUNCT'), ('Toronto', 'PROPN'), (',', 'PUNCT'), ('Ontario', 'PROPN'), ('M5S', 'PROPN'), ('3', 'NUM'), ('G4', 'PROPN'), (',', 'PUNCT'), ('Canada', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('5', 'CD'), ('Department', 'NNP'), ('of', 'IN'), ('Computer', 'NNP'), ('Science', 'NNP'), (',', ','), ('University', 'NNP'), ('of', 'IN'), ('Toronto', 'NNP'), (',', ','), ('6', 'CD'), ('King', 'NNP'), ('’s', 'POS'), ('College', 'NNP'), ('Road', 'NNP'), (',', ','), ('Toronto', 'NNP'), (',', ','), ('Ontario', 'NNP'), ('M5S', 'NNP'), ('3', 'CD'), ('G4', 'NNP'), (',', ','), ('Canada', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('5', '5'), ('Department', 'Department'), ('of', 'of'), ('Computer', 'Computer'), ('Science', 'Science'), (',', ','), ('University', 'University'), ('of', 'of'), ('Toronto', 'Toronto'), (',', ','), ('6', '6'), ('King', 'King'), ('’s', "'s"), ('College', 'College'), ('Road', 'Road'), (',', ','), ('Toronto', 'Toronto'), (',', ','), ('Ontario', 'Ontario'), ('M5S', 'M5S'), ('3', '3'), ('G4', 'G4'), (',', ','), ('Canada', 'Canada'), ('.', '.')] 

 Dependency tags are: 
>> [(('5', 'Department'), 'nummod'), (('Department', 'root'), 'root'), (('of', 'Science'), 'case'), (('Computer', 'Science'), 'compound'), (('Science', 'Department'), 'nmod'), ((',', 'University'), 'punct'), (('University', 'Department'), 'appos'), (('of', 'Toronto'), 'case'), (('Toronto', 'University'), 'nmod'), ((',', 'Road'), 'punct'), (('6', 'King'), 'nummod'), (('King', 'Road'), 'nmod:poss'), (('’s', 'King'), 'case'), (('College', 'Road'), 'compound'), (('Road', 'Department'), 'list'), ((',', 'Toronto'), 'punct'), (('Toronto', 'Road'), 'appos'), ((',', 'M5S'), 'punct'), (('Ontario', 'M5S'), 'compound'), (('M5S', 'Road'), 'appos'), (('3', 'G4'), 'nummod'), (('G4', 'M5S'), 'appos'), ((',', 'Canada'), 'punct'), (('Canada', 'G4'), 'appos'), (('.', 'Department'), 'punct')]

 Named Entites are: 
>> [('5Department of Computer Science', 'ORG'), ('University of Toronto', 'ORG'), ('6 King', 'ORG'), ('College Road', 'GPE'), ('Toronto', 'GPE'), ('Ontario', 'GPE'), ('3', 'CARDINAL'), ('G4', 'CARDINAL'), ('Canada', 'GPE')]

================================ Paragraph 2 =================================

Machine-learning technology powers many aspects of modern society: from web searches to content filtering on social net-works to recommendations on e-commerce websites, and  it is increasingly present in consumer products such as cameras and  smartphones. Machine-learning systems are used to identify objects  in images, transcribe speech into text, match news items, posts or  products with users’ interests, and select relevant results of search.  Increasingly, these applications make use of a class of techniques called  deep learning.  


------------------- Sentence 1 -------------------

 Machine-learning technology powers many aspects of modern society: from web searches to content filtering on social net-works to recommendations on e-commerce websites, and  it is increasingly present in consumer products such as cameras and  smartphones. 

Tokens are: 
>> ['Machine-', 'learning', 'technology', 'powers', 'many', 'aspects', 'of', 'modern', 'society', ':', 'from', 'web', 'searches', 'to', 'content', 'filtering', 'on', 'social', 'net-works', 'to', 'recommendations', 'on', 'e-commerce', 'websites', ',', 'and', 'it', 'is', 'increasingly', 'present', 'in', 'consumer', 'products', 'such', 'as', 'cameras', 'and', 'smartphones', '.'] 

 UPOS tags are: 
>> [('Machine-', 'ADJ'), ('learning', 'NOUN'), ('technology', 'NOUN'), ('powers', 'VERB'), ('many', 'ADJ'), ('aspects', 'NOUN'), ('of', 'ADP'), ('modern', 'ADJ'), ('society', 'NOUN'), (':', 'PUNCT'), ('from', 'ADP'), ('web', 'NOUN'), ('searches', 'NOUN'), ('to', 'ADP'), ('content', 'NOUN'), ('filtering', 'VERB'), ('on', 'ADP'), ('social', 'ADJ'), ('net-works', 'NOUN'), ('to', 'ADP'), ('recommendations', 'NOUN'), ('on', 'ADP'), ('e-commerce', 'NOUN'), ('websites', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('it', 'PRON'), ('is', 'AUX'), ('increasingly', 'ADV'), ('present', 'ADJ'), ('in', 'ADP'), ('consumer', 'NOUN'), ('products', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('cameras', 'NOUN'), ('and', 'CCONJ'), ('smartphones', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Machine-', 'JJ'), ('learning', 'NN'), ('technology', 'NN'), ('powers', 'VBZ'), ('many', 'JJ'), ('aspects', 'NNS'), ('of', 'IN'), ('modern', 'JJ'), ('society', 'NN'), (':', ':'), ('from', 'IN'), ('web', 'NN'), ('searches', 'NNS'), ('to', 'IN'), ('content', 'NN'), ('filtering', 'VBG'), ('on', 'IN'), ('social', 'JJ'), ('net-works', 'NNS'), ('to', 'IN'), ('recommendations', 'NNS'), ('on', 'IN'), ('e-commerce', 'NN'), ('websites', 'NNS'), (',', ','), ('and', 'CC'), ('it', 'PRP'), ('is', 'VBZ'), ('increasingly', 'RB'), ('present', 'JJ'), ('in', 'IN'), ('consumer', 'NN'), ('products', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('cameras', 'NNS'), ('and', 'CC'), ('smartphones', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Machine-', 'machine-'), ('learning', 'learning'), ('technology', 'technology'), ('powers', 'power'), ('many', 'many'), ('aspects', 'aspect'), ('of', 'of'), ('modern', 'modern'), ('society', 'society'), (':', ':'), ('from', 'from'), ('web', 'web'), ('searches', 'search'), ('to', 'to'), ('content', 'content'), ('filtering', 'filter'), ('on', 'on'), ('social', 'social'), ('net-works', 'net-work'), ('to', 'to'), ('recommendations', 'recommendation'), ('on', 'on'), ('e-commerce', 'e-commerce'), ('websites', 'website'), (',', ','), ('and', 'and'), ('it', 'it'), ('is', 'be'), ('increasingly', 'increasingly'), ('present', 'present'), ('in', 'in'), ('consumer', 'consumer'), ('products', 'product'), ('such', 'such'), ('as', 'as'), ('cameras', 'camera'), ('and', 'and'), ('smartphones', 'smartphone'), ('.', '.')] 

 Dependency tags are: 
>> [(('Machine-', 'technology'), 'amod'), (('learning', 'technology'), 'compound'), (('technology', 'powers'), 'nsubj'), (('powers', 'root'), 'root'), (('many', 'aspects'), 'amod'), (('aspects', 'powers'), 'obj'), (('of', 'society'), 'case'), (('modern', 'society'), 'amod'), (('society', 'aspects'), 'nmod'), ((':', 'searches'), 'punct'), (('from', 'searches'), 'case'), (('web', 'searches'), 'compound'), (('searches', 'powers'), 'obl'), (('to', 'content'), 'case'), (('content', 'searches'), 'nmod'), (('filtering', 'searches'), 'acl'), (('on', 'net-works'), 'case'), (('social', 'net-works'), 'amod'), (('net-works', 'filtering'), 'obl'), (('to', 'recommendations'), 'case'), (('recommendations', 'filtering'), 'obl'), (('on', 'websites'), 'case'), (('e-commerce', 'websites'), 'compound'), (('websites', 'recommendations'), 'nmod'), ((',', 'present'), 'punct'), (('and', 'present'), 'cc'), (('it', 'present'), 'nsubj'), (('is', 'present'), 'cop'), (('increasingly', 'present'), 'advmod'), (('present', 'powers'), 'conj'), (('in', 'products'), 'case'), (('consumer', 'products'), 'compound'), (('products', 'present'), 'obl'), (('such', 'cameras'), 'case'), (('as', 'such'), 'fixed'), (('cameras', 'products'), 'nmod'), (('and', 'smartphones'), 'cc'), (('smartphones', 'cameras'), 'conj'), (('.', 'powers'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Machine-learning systems are used to identify objects  in images, transcribe speech into text, match news items, posts or  products with users’ interests, and select relevant results of search. 

Tokens are: 
>> ['Machine', '-', 'learning', 'systems', 'are', 'used', 'to', 'identify', 'objects', 'in', 'images', ',', 'transcribe', 'speech', 'into', 'text', ',', 'match', 'news', 'items', ',', 'posts', 'or', 'products', 'with', 'users', '’', 'interests', ',', 'and', 'select', 'relevant', 'results', 'of', 'search', '.'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('-', 'PUNCT'), ('learning', 'NOUN'), ('systems', 'NOUN'), ('are', 'AUX'), ('used', 'VERB'), ('to', 'PART'), ('identify', 'VERB'), ('objects', 'NOUN'), ('in', 'ADP'), ('images', 'NOUN'), (',', 'PUNCT'), ('transcribe', 'VERB'), ('speech', 'NOUN'), ('into', 'ADP'), ('text', 'NOUN'), (',', 'PUNCT'), ('match', 'VERB'), ('news', 'NOUN'), ('items', 'NOUN'), (',', 'PUNCT'), ('posts', 'NOUN'), ('or', 'CCONJ'), ('products', 'NOUN'), ('with', 'ADP'), ('users', 'NOUN'), ('’', 'PART'), ('interests', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('select', 'VERB'), ('relevant', 'ADJ'), ('results', 'NOUN'), ('of', 'ADP'), ('search', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('-', 'HYPH'), ('learning', 'NN'), ('systems', 'NNS'), ('are', 'VBP'), ('used', 'VBN'), ('to', 'TO'), ('identify', 'VB'), ('objects', 'NNS'), ('in', 'IN'), ('images', 'NNS'), (',', ','), ('transcribe', 'VB'), ('speech', 'NN'), ('into', 'IN'), ('text', 'NN'), (',', ','), ('match', 'VB'), ('news', 'NN'), ('items', 'NNS'), (',', ','), ('posts', 'NNS'), ('or', 'CC'), ('products', 'NNS'), ('with', 'IN'), ('users', 'NNS'), ('’', 'POS'), ('interests', 'NNS'), (',', ','), ('and', 'CC'), ('select', 'VB'), ('relevant', 'JJ'), ('results', 'NNS'), ('of', 'IN'), ('search', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('-', '-'), ('learning', 'learning'), ('systems', 'system'), ('are', 'be'), ('used', 'use'), ('to', 'to'), ('identify', 'identify'), ('objects', 'object'), ('in', 'in'), ('images', 'image'), (',', ','), ('transcribe', 'transcribe'), ('speech', 'speech'), ('into', 'into'), ('text', 'text'), (',', ','), ('match', 'match'), ('news', 'news'), ('items', 'item'), (',', ','), ('posts', 'post'), ('or', 'or'), ('products', 'product'), ('with', 'with'), ('users', 'user'), ('’', "'s"), ('interests', 'interest'), (',', ','), ('and', 'and'), ('select', 'select'), ('relevant', 'relevant'), ('results', 'result'), ('of', 'of'), ('search', 'search'), ('.', '.')] 

 Dependency tags are: 
>> [(('Machine', 'learning'), 'compound'), (('-', 'learning'), 'punct'), (('learning', 'systems'), 'compound'), (('systems', 'used'), 'nsubj:pass'), (('are', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('to', 'identify'), 'mark'), (('identify', 'used'), 'xcomp'), (('objects', 'identify'), 'obj'), (('in', 'images'), 'case'), (('images', 'identify'), 'obl'), ((',', 'transcribe'), 'punct'), (('transcribe', 'identify'), 'conj'), (('speech', 'transcribe'), 'obj'), (('into', 'text'), 'case'), (('text', 'transcribe'), 'obl'), ((',', 'match'), 'punct'), (('match', 'identify'), 'conj'), (('news', 'items'), 'compound'), (('items', 'match'), 'obj'), ((',', 'posts'), 'punct'), (('posts', 'items'), 'conj'), (('or', 'products'), 'cc'), (('products', 'items'), 'conj'), (('with', 'interests'), 'case'), (('users', 'interests'), 'nmod:poss'), (('’', 'users'), 'case'), (('interests', 'match'), 'obl'), ((',', 'select'), 'punct'), (('and', 'select'), 'cc'), (('select', 'identify'), 'conj'), (('relevant', 'results'), 'amod'), (('results', 'select'), 'obj'), (('of', 'search'), 'case'), (('search', 'results'), 'nmod'), (('.', 'used'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Increasingly, these applications make use of a class of techniques called  deep learning. 

Tokens are: 
>> ['Increasingly', ',', 'these', 'applications', 'make', 'use', 'of', 'a', 'class', 'of', 'techniques', 'called', 'deep', 'learning', '.'] 

 UPOS tags are: 
>> [('Increasingly', 'ADV'), (',', 'PUNCT'), ('these', 'DET'), ('applications', 'NOUN'), ('make', 'VERB'), ('use', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('class', 'NOUN'), ('of', 'ADP'), ('techniques', 'NOUN'), ('called', 'VERB'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Increasingly', 'RB'), (',', ','), ('these', 'DT'), ('applications', 'NNS'), ('make', 'VBP'), ('use', 'NN'), ('of', 'IN'), ('a', 'DT'), ('class', 'NN'), ('of', 'IN'), ('techniques', 'NNS'), ('called', 'VBN'), ('deep', 'JJ'), ('learning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Increasingly', 'increasingly'), (',', ','), ('these', 'this'), ('applications', 'application'), ('make', 'make'), ('use', 'use'), ('of', 'of'), ('a', 'a'), ('class', 'class'), ('of', 'of'), ('techniques', 'technique'), ('called', 'call'), ('deep', 'deep'), ('learning', 'learning'), ('.', '.')] 

 Dependency tags are: 
>> [(('Increasingly', 'make'), 'advmod'), ((',', 'make'), 'punct'), (('these', 'applications'), 'det'), (('applications', 'make'), 'nsubj'), (('make', 'root'), 'root'), (('use', 'make'), 'obj'), (('of', 'class'), 'case'), (('a', 'class'), 'det'), (('class', 'use'), 'nmod'), (('of', 'techniques'), 'case'), (('techniques', 'class'), 'nmod'), (('called', 'techniques'), 'acl'), (('deep', 'learning'), 'amod'), (('learning', 'called'), 'obj'), (('.', 'make'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 3 =================================

Conventional machine-learning techniques were limited in their  ability to process natural data in their raw form. For decades, con- structing a pattern-recognition or machine-learning system required  careful engineering and considerable domain expertise to design a fea- ture extractor that transformed the raw data (such as the pixel values  of an image) into a suitable internal representation or feature vector  from which the learning subsystem, often a classifier, could detect or  classify patterns in the input.  


------------------- Sentence 1 -------------------

 Conventional machine-learning techniques were limited in their  ability to process natural data in their raw form. 

Tokens are: 
>> ['Conventional', 'machine', '-', 'learning', 'techniques', 'were', 'limited', 'in', 'their', 'ability', 'to', 'process', 'natural', 'data', 'in', 'their', 'raw', 'form', '.'] 

 UPOS tags are: 
>> [('Conventional', 'ADJ'), ('machine', 'NOUN'), ('-', 'PUNCT'), ('learning', 'NOUN'), ('techniques', 'NOUN'), ('were', 'AUX'), ('limited', 'VERB'), ('in', 'ADP'), ('their', 'PRON'), ('ability', 'NOUN'), ('to', 'PART'), ('process', 'VERB'), ('natural', 'ADJ'), ('data', 'NOUN'), ('in', 'ADP'), ('their', 'PRON'), ('raw', 'ADJ'), ('form', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Conventional', 'JJ'), ('machine', 'NN'), ('-', 'HYPH'), ('learning', 'NN'), ('techniques', 'NNS'), ('were', 'VBD'), ('limited', 'VBN'), ('in', 'IN'), ('their', 'PRP$'), ('ability', 'NN'), ('to', 'TO'), ('process', 'VB'), ('natural', 'JJ'), ('data', 'NNS'), ('in', 'IN'), ('their', 'PRP$'), ('raw', 'JJ'), ('form', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Conventional', 'Conventional'), ('machine', 'machine'), ('-', '-'), ('learning', 'learning'), ('techniques', 'technique'), ('were', 'be'), ('limited', 'limit'), ('in', 'in'), ('their', 'they'), ('ability', 'ability'), ('to', 'to'), ('process', 'process'), ('natural', 'natural'), ('data', 'datum'), ('in', 'in'), ('their', 'they'), ('raw', 'raw'), ('form', 'form'), ('.', '.')] 

 Dependency tags are: 
>> [(('Conventional', 'techniques'), 'amod'), (('machine', 'learning'), 'compound'), (('-', 'learning'), 'punct'), (('learning', 'techniques'), 'compound'), (('techniques', 'limited'), 'nsubj:pass'), (('were', 'limited'), 'aux:pass'), (('limited', 'root'), 'root'), (('in', 'ability'), 'case'), (('their', 'ability'), 'nmod:poss'), (('ability', 'limited'), 'obl'), (('to', 'process'), 'mark'), (('process', 'ability'), 'acl'), (('natural', 'data'), 'amod'), (('data', 'process'), 'obj'), (('in', 'form'), 'case'), (('their', 'form'), 'nmod:poss'), (('raw', 'form'), 'amod'), (('form', 'process'), 'obl'), (('.', 'limited'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 For decades, con- structing a pattern-recognition or machine-learning system required  careful engineering and considerable domain expertise to design a fea- ture extractor that transformed the raw data (such as the pixel values  of an image) into a suitable internal representation or feature vector  from which the learning subsystem, often a classifier, could detect or  classify patterns in the input. 

Tokens are: 
>> ['For', 'decades', ',', 'con', '-', 'structing', 'a', 'pattern-', 'recognition', 'or', 'machine', '-', 'learning', 'system', 'required', 'careful', 'engineering', 'and', 'considerable', 'domain', 'expertise', 'to', 'design', 'a', 'fea', '-', 'ture', 'extractor', 'that', 'transformed', 'the', 'raw', 'data', '(', 'such', 'as', 'the', 'pixel', 'values', 'of', 'an', 'image', ')', 'into', 'a', 'suitable', 'internal', 'representation', 'or', 'feature', 'vector', 'from', 'which', 'the', 'learning', 'subsystem', ',', 'often', 'a', 'classifier', ',', 'could', 'detect', 'or', 'classify', 'patterns', 'in', 'the', 'input', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('decades', 'NOUN'), (',', 'PUNCT'), ('con', 'NOUN'), ('-', 'PUNCT'), ('structing', 'VERB'), ('a', 'DET'), ('pattern-', 'ADJ'), ('recognition', 'NOUN'), ('or', 'CCONJ'), ('machine', 'NOUN'), ('-', 'PUNCT'), ('learning', 'NOUN'), ('system', 'NOUN'), ('required', 'VERB'), ('careful', 'ADJ'), ('engineering', 'NOUN'), ('and', 'CCONJ'), ('considerable', 'ADJ'), ('domain', 'NOUN'), ('expertise', 'NOUN'), ('to', 'PART'), ('design', 'VERB'), ('a', 'DET'), ('fea', 'NOUN'), ('-', 'PUNCT'), ('ture', 'NOUN'), ('extractor', 'NOUN'), ('that', 'PRON'), ('transformed', 'VERB'), ('the', 'DET'), ('raw', 'ADJ'), ('data', 'NOUN'), ('(', 'PUNCT'), ('such', 'ADJ'), ('as', 'ADP'), ('the', 'DET'), ('pixel', 'NOUN'), ('values', 'NOUN'), ('of', 'ADP'), ('an', 'DET'), ('image', 'NOUN'), (')', 'PUNCT'), ('into', 'ADP'), ('a', 'DET'), ('suitable', 'ADJ'), ('internal', 'ADJ'), ('representation', 'NOUN'), ('or', 'CCONJ'), ('feature', 'NOUN'), ('vector', 'NOUN'), ('from', 'ADP'), ('which', 'PRON'), ('the', 'DET'), ('learning', 'NOUN'), ('subsystem', 'NOUN'), (',', 'PUNCT'), ('often', 'ADV'), ('a', 'DET'), ('classifier', 'NOUN'), (',', 'PUNCT'), ('could', 'AUX'), ('detect', 'VERB'), ('or', 'CCONJ'), ('classify', 'VERB'), ('patterns', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('input', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('decades', 'NNS'), (',', ','), ('con', 'NN'), ('-', ','), ('structing', 'VBG'), ('a', 'DT'), ('pattern-', 'JJ'), ('recognition', 'NN'), ('or', 'CC'), ('machine', 'NN'), ('-', 'HYPH'), ('learning', 'NN'), ('system', 'NN'), ('required', 'VBN'), ('careful', 'JJ'), ('engineering', 'NN'), ('and', 'CC'), ('considerable', 'JJ'), ('domain', 'NN'), ('expertise', 'NN'), ('to', 'TO'), ('design', 'VB'), ('a', 'DT'), ('fea', 'NN'), ('-', 'HYPH'), ('ture', 'NN'), ('extractor', 'NN'), ('that', 'WDT'), ('transformed', 'VBD'), ('the', 'DT'), ('raw', 'JJ'), ('data', 'NNS'), ('(', '-LRB-'), ('such', 'JJ'), ('as', 'IN'), ('the', 'DT'), ('pixel', 'NN'), ('values', 'NNS'), ('of', 'IN'), ('an', 'DT'), ('image', 'NN'), (')', '-RRB-'), ('into', 'IN'), ('a', 'DT'), ('suitable', 'JJ'), ('internal', 'JJ'), ('representation', 'NN'), ('or', 'CC'), ('feature', 'NN'), ('vector', 'NN'), ('from', 'IN'), ('which', 'WDT'), ('the', 'DT'), ('learning', 'NN'), ('subsystem', 'NN'), (',', ','), ('often', 'RB'), ('a', 'DT'), ('classifier', 'NN'), (',', ','), ('could', 'MD'), ('detect', 'VB'), ('or', 'CC'), ('classify', 'VB'), ('patterns', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('input', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('decades', 'decade'), (',', ','), ('con', 'con'), ('-', '-'), ('structing', 'struct'), ('a', 'a'), ('pattern-', 'pattern-'), ('recognition', 'recognition'), ('or', 'or'), ('machine', 'machine'), ('-', '-'), ('learning', 'learning'), ('system', 'system'), ('required', 'require'), ('careful', 'careful'), ('engineering', 'engineering'), ('and', 'and'), ('considerable', 'considerable'), ('domain', 'domain'), ('expertise', 'expertise'), ('to', 'to'), ('design', 'design'), ('a', 'a'), ('fea', 'fea'), ('-', '-'), ('ture', 'ture'), ('extractor', 'extractor'), ('that', 'that'), ('transformed', 'transform'), ('the', 'the'), ('raw', 'raw'), ('data', 'datum'), ('(', '('), ('such', 'such'), ('as', 'as'), ('the', 'the'), ('pixel', 'pixel'), ('values', 'value'), ('of', 'of'), ('an', 'a'), ('image', 'image'), (')', ')'), ('into', 'into'), ('a', 'a'), ('suitable', 'suitable'), ('internal', 'internal'), ('representation', 'representation'), ('or', 'or'), ('feature', 'feature'), ('vector', 'vector'), ('from', 'from'), ('which', 'which'), ('the', 'the'), ('learning', 'learning'), ('subsystem', 'subsystem'), (',', ','), ('often', 'often'), ('a', 'a'), ('classifier', 'classifier'), (',', ','), ('could', 'could'), ('detect', 'detect'), ('or', 'or'), ('classify', 'classify'), ('patterns', 'pattern'), ('in', 'in'), ('the', 'the'), ('input', 'input'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'decades'), 'case'), (('decades', 'con'), 'nmod'), ((',', 'decades'), 'punct'), (('con', 'root'), 'root'), (('-', 'con'), 'punct'), (('structing', 'con'), 'acl'), (('a', 'recognition'), 'det'), (('pattern-', 'recognition'), 'amod'), (('recognition', 'structing'), 'obj'), (('or', 'system'), 'cc'), (('machine', 'learning'), 'compound'), (('-', 'learning'), 'punct'), (('learning', 'system'), 'compound'), (('system', 'recognition'), 'conj'), (('required', 'system'), 'acl'), (('careful', 'engineering'), 'amod'), (('engineering', 'required'), 'obj'), (('and', 'expertise'), 'cc'), (('considerable', 'expertise'), 'amod'), (('domain', 'expertise'), 'compound'), (('expertise', 'recognition'), 'conj'), (('to', 'design'), 'mark'), (('design', 'structing'), 'advcl'), (('a', 'extractor'), 'det'), (('fea', 'ture'), 'compound'), (('-', 'ture'), 'punct'), (('ture', 'extractor'), 'compound'), (('extractor', 'design'), 'obj'), (('that', 'transformed'), 'nsubj'), (('transformed', 'extractor'), 'acl:relcl'), (('the', 'data'), 'det'), (('raw', 'data'), 'amod'), (('data', 'transformed'), 'obj'), (('(', 'values'), 'punct'), (('such', 'values'), 'case'), (('as', 'such'), 'fixed'), (('the', 'values'), 'det'), (('pixel', 'values'), 'compound'), (('values', 'data'), 'nmod'), (('of', 'image'), 'case'), (('an', 'image'), 'det'), (('image', 'values'), 'nmod'), ((')', 'values'), 'punct'), (('into', 'representation'), 'case'), (('a', 'representation'), 'det'), (('suitable', 'representation'), 'amod'), (('internal', 'representation'), 'amod'), (('representation', 'transformed'), 'obl'), (('or', 'vector'), 'cc'), (('feature', 'vector'), 'compound'), (('vector', 'representation'), 'conj'), (('from', 'which'), 'case'), (('which', 'detect'), 'obl'), (('the', 'subsystem'), 'det'), (('learning', 'subsystem'), 'compound'), (('subsystem', 'detect'), 'nsubj'), ((',', 'classifier'), 'punct'), (('often', 'classifier'), 'advmod'), (('a', 'classifier'), 'det'), (('classifier', 'subsystem'), 'appos'), ((',', 'detect'), 'punct'), (('could', 'detect'), 'aux'), (('detect', 'representation'), 'acl:relcl'), (('or', 'classify'), 'cc'), (('classify', 'detect'), 'conj'), (('patterns', 'detect'), 'obj'), (('in', 'input'), 'case'), (('the', 'input'), 'det'), (('input', 'detect'), 'obl'), (('.', 'con'), 'punct')]

 Named Entites are: 
>> [('decades', 'DATE')]

================================ Paragraph 4 =================================

Representation learning is a set of methods that allows a machine to  be fed with raw data and to automatically discover the representations  needed for detection or classification. Deep-learning methods are  representation-learning methods with multiple levels of representa- tion, obtained by composing simple but non-linear modules that each  transform the representation at one level (starting with the raw input)  into a representation at a higher, slightly more abstract level. With the  composition of enough such transformations, very complex functions  can be learned. For classification tasks, higher layers of representation  amplify aspects of the input that are important for discrimination and  suppress irrelevant variations. An image, for example, comes in the  form of an array of pixel values, and the learned features in the first  layer of representation typically represent the presence or absence of  edges at particular orientations and locations in the image. The second  layer typically detects motifs by spotting particular arrangements of  edges, regardless of small variations in the edge positions. The third  layer may assemble motifs into larger combinations that correspond  to parts of familiar objects, and subsequent layers would detect objects  as combinations of these parts. The key aspect of deep learning is that  these layers of features are not designed by human engineers: they  are learned from data using a general-purpose learning procedure.  


------------------- Sentence 1 -------------------

 Representation learning is a set of methods that allows a machine to  be fed with raw data and to automatically discover the representations  needed for detection or classification. 

Tokens are: 
>> ['Representation', 'learning', 'is', 'a', 'set', 'of', 'methods', 'that', 'allows', 'a', 'machine', 'to', 'be', 'fed', 'with', 'raw', 'data', 'and', 'to', 'automatically', 'discover', 'the', 'representations', 'needed', 'for', 'detection', 'or', 'classification', '.'] 

 UPOS tags are: 
>> [('Representation', 'NOUN'), ('learning', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('methods', 'NOUN'), ('that', 'PRON'), ('allows', 'VERB'), ('a', 'DET'), ('machine', 'NOUN'), ('to', 'PART'), ('be', 'AUX'), ('fed', 'VERB'), ('with', 'ADP'), ('raw', 'ADJ'), ('data', 'NOUN'), ('and', 'CCONJ'), ('to', 'PART'), ('automatically', 'ADV'), ('discover', 'VERB'), ('the', 'DET'), ('representations', 'NOUN'), ('needed', 'VERB'), ('for', 'ADP'), ('detection', 'NOUN'), ('or', 'CCONJ'), ('classification', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Representation', 'NN'), ('learning', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('set', 'NN'), ('of', 'IN'), ('methods', 'NNS'), ('that', 'WDT'), ('allows', 'VBZ'), ('a', 'DT'), ('machine', 'NN'), ('to', 'TO'), ('be', 'VB'), ('fed', 'VBN'), ('with', 'IN'), ('raw', 'JJ'), ('data', 'NNS'), ('and', 'CC'), ('to', 'TO'), ('automatically', 'RB'), ('discover', 'VB'), ('the', 'DT'), ('representations', 'NNS'), ('needed', 'VBN'), ('for', 'IN'), ('detection', 'NN'), ('or', 'CC'), ('classification', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Representation', 'representation'), ('learning', 'learning'), ('is', 'be'), ('a', 'a'), ('set', 'set'), ('of', 'of'), ('methods', 'method'), ('that', 'that'), ('allows', 'allow'), ('a', 'a'), ('machine', 'machine'), ('to', 'to'), ('be', 'be'), ('fed', 'feed'), ('with', 'with'), ('raw', 'raw'), ('data', 'datum'), ('and', 'and'), ('to', 'to'), ('automatically', 'automatically'), ('discover', 'discover'), ('the', 'the'), ('representations', 'representation'), ('needed', 'need'), ('for', 'for'), ('detection', 'detection'), ('or', 'or'), ('classification', 'classification'), ('.', '.')] 

 Dependency tags are: 
>> [(('Representation', 'learning'), 'compound'), (('learning', 'set'), 'nsubj'), (('is', 'set'), 'cop'), (('a', 'set'), 'det'), (('set', 'root'), 'root'), (('of', 'methods'), 'case'), (('methods', 'set'), 'nmod'), (('that', 'allows'), 'nsubj'), (('allows', 'methods'), 'acl:relcl'), (('a', 'machine'), 'det'), (('machine', 'allows'), 'obj'), (('to', 'fed'), 'mark'), (('be', 'fed'), 'aux:pass'), (('fed', 'machine'), 'acl'), (('with', 'data'), 'case'), (('raw', 'data'), 'amod'), (('data', 'fed'), 'obl'), (('and', 'discover'), 'cc'), (('to', 'discover'), 'mark'), (('automatically', 'discover'), 'advmod'), (('discover', 'fed'), 'conj'), (('the', 'representations'), 'det'), (('representations', 'discover'), 'obj'), (('needed', 'representations'), 'acl'), (('for', 'detection'), 'case'), (('detection', 'needed'), 'obl'), (('or', 'classification'), 'cc'), (('classification', 'detection'), 'conj'), (('.', 'set'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Deep-learning methods are  representation-learning methods with multiple levels of representa- tion, obtained by composing simple but non-linear modules that each  transform the representation at one level (starting with the raw input)  into a representation at a higher, slightly more abstract level. 

Tokens are: 
>> ['Deep-learning', 'methods', 'are', 'representation', '-', 'learning', 'methods', 'with', 'multiple', 'levels', 'of', 'representa', '-', 'tion', ',', 'obtained', 'by', 'composing', 'simple', 'but', 'non-linear', 'modules', 'that', 'each', 'transform', 'the', 'representation', 'at', 'one', 'level', '(', 'starting', 'with', 'the', 'raw', 'input', ')', 'into', 'a', 'representation', 'at', 'a', 'higher', ',', 'slightly', 'more', 'abstract', 'level', '.'] 

 UPOS tags are: 
>> [('Deep-learning', 'ADJ'), ('methods', 'NOUN'), ('are', 'AUX'), ('representation', 'NOUN'), ('-', 'PUNCT'), ('learning', 'NOUN'), ('methods', 'NOUN'), ('with', 'ADP'), ('multiple', 'ADJ'), ('levels', 'NOUN'), ('of', 'ADP'), ('representa', 'NOUN'), ('-', 'PUNCT'), ('tion', 'NOUN'), (',', 'PUNCT'), ('obtained', 'VERB'), ('by', 'SCONJ'), ('composing', 'VERB'), ('simple', 'ADJ'), ('but', 'CCONJ'), ('non-linear', 'ADJ'), ('modules', 'NOUN'), ('that', 'PRON'), ('each', 'DET'), ('transform', 'VERB'), ('the', 'DET'), ('representation', 'NOUN'), ('at', 'ADP'), ('one', 'NUM'), ('level', 'NOUN'), ('(', 'PUNCT'), ('starting', 'VERB'), ('with', 'ADP'), ('the', 'DET'), ('raw', 'ADJ'), ('input', 'NOUN'), (')', 'PUNCT'), ('into', 'ADP'), ('a', 'DET'), ('representation', 'NOUN'), ('at', 'ADP'), ('a', 'DET'), ('higher', 'ADJ'), (',', 'PUNCT'), ('slightly', 'ADV'), ('more', 'ADV'), ('abstract', 'ADJ'), ('level', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Deep-learning', 'JJ'), ('methods', 'NNS'), ('are', 'VBP'), ('representation', 'NN'), ('-', 'HYPH'), ('learning', 'NN'), ('methods', 'NNS'), ('with', 'IN'), ('multiple', 'JJ'), ('levels', 'NNS'), ('of', 'IN'), ('representa', 'NN'), ('-', 'HYPH'), ('tion', 'NN'), (',', ','), ('obtained', 'VBN'), ('by', 'IN'), ('composing', 'VBG'), ('simple', 'JJ'), ('but', 'CC'), ('non-linear', 'JJ'), ('modules', 'NNS'), ('that', 'WDT'), ('each', 'DT'), ('transform', 'VBP'), ('the', 'DT'), ('representation', 'NN'), ('at', 'IN'), ('one', 'CD'), ('level', 'NN'), ('(', '-LRB-'), ('starting', 'VBG'), ('with', 'IN'), ('the', 'DT'), ('raw', 'JJ'), ('input', 'NN'), (')', '-RRB-'), ('into', 'IN'), ('a', 'DT'), ('representation', 'NN'), ('at', 'IN'), ('a', 'DT'), ('higher', 'JJR'), (',', ','), ('slightly', 'RB'), ('more', 'RBR'), ('abstract', 'JJ'), ('level', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Deep-learning', 'Deep-learning'), ('methods', 'method'), ('are', 'be'), ('representation', 'representation'), ('-', '-'), ('learning', 'learning'), ('methods', 'method'), ('with', 'with'), ('multiple', 'multiple'), ('levels', 'level'), ('of', 'of'), ('representa', 'representa'), ('-', '-'), ('tion', 'tion'), (',', ','), ('obtained', 'obtain'), ('by', 'by'), ('composing', 'compose'), ('simple', 'simple'), ('but', 'but'), ('non-linear', 'non-linear'), ('modules', 'module'), ('that', 'that'), ('each', 'each'), ('transform', 'transform'), ('the', 'the'), ('representation', 'representation'), ('at', 'at'), ('one', 'one'), ('level', 'level'), ('(', '('), ('starting', 'start'), ('with', 'with'), ('the', 'the'), ('raw', 'raw'), ('input', 'input'), (')', ')'), ('into', 'into'), ('a', 'a'), ('representation', 'representation'), ('at', 'at'), ('a', 'a'), ('higher', 'high'), (',', ','), ('slightly', 'slightly'), ('more', 'more'), ('abstract', 'abstract'), ('level', 'level'), ('.', '.')] 

 Dependency tags are: 
>> [(('Deep-learning', 'methods'), 'amod'), (('methods', 'methods'), 'nsubj'), (('are', 'methods'), 'cop'), (('representation', 'learning'), 'compound'), (('-', 'learning'), 'punct'), (('learning', 'methods'), 'compound'), (('methods', 'root'), 'root'), (('with', 'levels'), 'case'), (('multiple', 'levels'), 'amod'), (('levels', 'methods'), 'nmod'), (('of', 'tion'), 'case'), (('representa', 'tion'), 'compound'), (('-', 'tion'), 'punct'), (('tion', 'levels'), 'nmod'), ((',', 'obtained'), 'punct'), (('obtained', 'levels'), 'acl'), (('by', 'composing'), 'mark'), (('composing', 'obtained'), 'advcl'), (('simple', 'modules'), 'amod'), (('but', 'non-linear'), 'cc'), (('non-linear', 'simple'), 'conj'), (('modules', 'composing'), 'obj'), (('that', 'transform'), 'obj'), (('each', 'transform'), 'nsubj'), (('transform', 'modules'), 'acl:relcl'), (('the', 'representation'), 'det'), (('representation', 'transform'), 'obj'), (('at', 'level'), 'case'), (('one', 'level'), 'nummod'), (('level', 'transform'), 'obl'), (('(', 'starting'), 'punct'), (('starting', 'transform'), 'advcl'), (('with', 'input'), 'case'), (('the', 'input'), 'det'), (('raw', 'input'), 'amod'), (('input', 'starting'), 'obl'), ((')', 'starting'), 'punct'), (('into', 'representation'), 'case'), (('a', 'representation'), 'det'), (('representation', 'starting'), 'obl'), (('at', 'level'), 'case'), (('a', 'level'), 'det'), (('higher', 'level'), 'amod'), ((',', 'level'), 'punct'), (('slightly', 'abstract'), 'advmod'), (('more', 'abstract'), 'advmod'), (('abstract', 'level'), 'amod'), (('level', 'representation'), 'nmod'), (('.', 'methods'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 With the  composition of enough such transformations, very complex functions  can be learned. 

Tokens are: 
>> ['With', 'the', 'composition', 'of', 'enough', 'such', 'transformations', ',', 'very', 'complex', 'functions', 'can', 'be', 'learned', '.'] 

 UPOS tags are: 
>> [('With', 'ADP'), ('the', 'DET'), ('composition', 'NOUN'), ('of', 'ADP'), ('enough', 'ADJ'), ('such', 'ADJ'), ('transformations', 'NOUN'), (',', 'PUNCT'), ('very', 'ADV'), ('complex', 'ADJ'), ('functions', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('learned', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('With', 'IN'), ('the', 'DT'), ('composition', 'NN'), ('of', 'IN'), ('enough', 'JJ'), ('such', 'JJ'), ('transformations', 'NNS'), (',', ','), ('very', 'RB'), ('complex', 'JJ'), ('functions', 'NNS'), ('can', 'MD'), ('be', 'VB'), ('learned', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('With', 'with'), ('the', 'the'), ('composition', 'composition'), ('of', 'of'), ('enough', 'enough'), ('such', 'such'), ('transformations', 'transformation'), (',', ','), ('very', 'very'), ('complex', 'complex'), ('functions', 'function'), ('can', 'can'), ('be', 'be'), ('learned', 'learn'), ('.', '.')] 

 Dependency tags are: 
>> [(('With', 'composition'), 'case'), (('the', 'composition'), 'det'), (('composition', 'learned'), 'obl'), (('of', 'transformations'), 'case'), (('enough', 'transformations'), 'amod'), (('such', 'transformations'), 'amod'), (('transformations', 'composition'), 'nmod'), ((',', 'learned'), 'punct'), (('very', 'complex'), 'advmod'), (('complex', 'functions'), 'amod'), (('functions', 'learned'), 'nsubj:pass'), (('can', 'learned'), 'aux'), (('be', 'learned'), 'aux:pass'), (('learned', 'root'), 'root'), (('.', 'learned'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 For classification tasks, higher layers of representation  amplify aspects of the input that are important for discrimination and  suppress irrelevant variations. 

Tokens are: 
>> ['For', 'classification', 'tasks', ',', 'higher', 'layers', 'of', 'representation', 'amplify', 'aspects', 'of', 'the', 'input', 'that', 'are', 'important', 'for', 'discrimination', 'and', 'suppress', 'irrelevant', 'variations', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('classification', 'NOUN'), ('tasks', 'NOUN'), (',', 'PUNCT'), ('higher', 'ADJ'), ('layers', 'NOUN'), ('of', 'ADP'), ('representation', 'NOUN'), ('amplify', 'VERB'), ('aspects', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('input', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('important', 'ADJ'), ('for', 'ADP'), ('discrimination', 'NOUN'), ('and', 'CCONJ'), ('suppress', 'VERB'), ('irrelevant', 'ADJ'), ('variations', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('classification', 'NN'), ('tasks', 'NNS'), (',', ','), ('higher', 'JJR'), ('layers', 'NNS'), ('of', 'IN'), ('representation', 'NN'), ('amplify', 'VBP'), ('aspects', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('input', 'NN'), ('that', 'WDT'), ('are', 'VBP'), ('important', 'JJ'), ('for', 'IN'), ('discrimination', 'NN'), ('and', 'CC'), ('suppress', 'VBP'), ('irrelevant', 'JJ'), ('variations', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('classification', 'classification'), ('tasks', 'task'), (',', ','), ('higher', 'high'), ('layers', 'layer'), ('of', 'of'), ('representation', 'representation'), ('amplify', 'amplify'), ('aspects', 'aspect'), ('of', 'of'), ('the', 'the'), ('input', 'input'), ('that', 'that'), ('are', 'be'), ('important', 'important'), ('for', 'for'), ('discrimination', 'discrimination'), ('and', 'and'), ('suppress', 'suppress'), ('irrelevant', 'irrelevant'), ('variations', 'variation'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'tasks'), 'case'), (('classification', 'tasks'), 'compound'), (('tasks', 'amplify'), 'obl'), ((',', 'amplify'), 'punct'), (('higher', 'layers'), 'amod'), (('layers', 'amplify'), 'nsubj'), (('of', 'representation'), 'case'), (('representation', 'layers'), 'nmod'), (('amplify', 'root'), 'root'), (('aspects', 'amplify'), 'obj'), (('of', 'input'), 'case'), (('the', 'input'), 'det'), (('input', 'aspects'), 'nmod'), (('that', 'important'), 'nsubj'), (('are', 'important'), 'cop'), (('important', 'input'), 'acl:relcl'), (('for', 'discrimination'), 'case'), (('discrimination', 'important'), 'obl'), (('and', 'suppress'), 'cc'), (('suppress', 'important'), 'conj'), (('irrelevant', 'variations'), 'amod'), (('variations', 'suppress'), 'obj'), (('.', 'amplify'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 An image, for example, comes in the  form of an array of pixel values, and the learned features in the first  layer of representation typically represent the presence or absence of  edges at particular orientations and locations in the image. 

Tokens are: 
>> ['An', 'image', ',', 'for', 'example', ',', 'comes', 'in', 'the', 'form', 'of', 'an', 'array', 'of', 'pixel', 'values', ',', 'and', 'the', 'learned', 'features', 'in', 'the', 'first', 'layer', 'of', 'representation', 'typically', 'represent', 'the', 'presence', 'or', 'absence', 'of', 'edges', 'at', 'particular', 'orientations', 'and', 'locations', 'in', 'the', 'image', '.'] 

 UPOS tags are: 
>> [('An', 'DET'), ('image', 'NOUN'), (',', 'PUNCT'), ('for', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('comes', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('form', 'NOUN'), ('of', 'ADP'), ('an', 'DET'), ('array', 'NOUN'), ('of', 'ADP'), ('pixel', 'NOUN'), ('values', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('the', 'DET'), ('learned', 'VERB'), ('features', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('first', 'ADJ'), ('layer', 'NOUN'), ('of', 'ADP'), ('representation', 'NOUN'), ('typically', 'ADV'), ('represent', 'VERB'), ('the', 'DET'), ('presence', 'NOUN'), ('or', 'CCONJ'), ('absence', 'NOUN'), ('of', 'ADP'), ('edges', 'NOUN'), ('at', 'ADP'), ('particular', 'ADJ'), ('orientations', 'NOUN'), ('and', 'CCONJ'), ('locations', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('image', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('An', 'DT'), ('image', 'NN'), (',', ','), ('for', 'IN'), ('example', 'NN'), (',', ','), ('comes', 'VBZ'), ('in', 'IN'), ('the', 'DT'), ('form', 'NN'), ('of', 'IN'), ('an', 'DT'), ('array', 'NN'), ('of', 'IN'), ('pixel', 'NN'), ('values', 'NNS'), (',', ','), ('and', 'CC'), ('the', 'DT'), ('learned', 'VBN'), ('features', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('first', 'JJ'), ('layer', 'NN'), ('of', 'IN'), ('representation', 'NN'), ('typically', 'RB'), ('represent', 'VBP'), ('the', 'DT'), ('presence', 'NN'), ('or', 'CC'), ('absence', 'NN'), ('of', 'IN'), ('edges', 'NNS'), ('at', 'IN'), ('particular', 'JJ'), ('orientations', 'NNS'), ('and', 'CC'), ('locations', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('image', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('An', 'a'), ('image', 'image'), (',', ','), ('for', 'for'), ('example', 'example'), (',', ','), ('comes', 'come'), ('in', 'in'), ('the', 'the'), ('form', 'form'), ('of', 'of'), ('an', 'a'), ('array', 'array'), ('of', 'of'), ('pixel', 'pixel'), ('values', 'value'), (',', ','), ('and', 'and'), ('the', 'the'), ('learned', 'learn'), ('features', 'feature'), ('in', 'in'), ('the', 'the'), ('first', 'first'), ('layer', 'layer'), ('of', 'of'), ('representation', 'representation'), ('typically', 'typically'), ('represent', 'represent'), ('the', 'the'), ('presence', 'presence'), ('or', 'or'), ('absence', 'absence'), ('of', 'of'), ('edges', 'edge'), ('at', 'at'), ('particular', 'particular'), ('orientations', 'orientation'), ('and', 'and'), ('locations', 'location'), ('in', 'in'), ('the', 'the'), ('image', 'image'), ('.', '.')] 

 Dependency tags are: 
>> [(('An', 'image'), 'det'), (('image', 'comes'), 'nsubj'), ((',', 'comes'), 'punct'), (('for', 'example'), 'case'), (('example', 'comes'), 'obl'), ((',', 'comes'), 'punct'), (('comes', 'root'), 'root'), (('in', 'form'), 'case'), (('the', 'form'), 'det'), (('form', 'comes'), 'obl'), (('of', 'array'), 'case'), (('an', 'array'), 'det'), (('array', 'form'), 'nmod'), (('of', 'values'), 'case'), (('pixel', 'values'), 'compound'), (('values', 'array'), 'nmod'), ((',', 'represent'), 'punct'), (('and', 'represent'), 'cc'), (('the', 'features'), 'det'), (('learned', 'features'), 'amod'), (('features', 'represent'), 'nsubj'), (('in', 'layer'), 'case'), (('the', 'layer'), 'det'), (('first', 'layer'), 'amod'), (('layer', 'features'), 'nmod'), (('of', 'representation'), 'case'), (('representation', 'layer'), 'nmod'), (('typically', 'represent'), 'advmod'), (('represent', 'comes'), 'conj'), (('the', 'presence'), 'det'), (('presence', 'represent'), 'obj'), (('or', 'absence'), 'cc'), (('absence', 'presence'), 'conj'), (('of', 'edges'), 'case'), (('edges', 'presence'), 'nmod'), (('at', 'orientations'), 'case'), (('particular', 'orientations'), 'amod'), (('orientations', 'presence'), 'nmod'), (('and', 'locations'), 'cc'), (('locations', 'orientations'), 'conj'), (('in', 'image'), 'case'), (('the', 'image'), 'det'), (('image', 'orientations'), 'nmod'), (('.', 'comes'), 'punct')]

 Named Entites are: 
>> [('first', 'ORDINAL')]

------------------- Sentence 6 -------------------

 The second  layer typically detects motifs by spotting particular arrangements of  edges, regardless of small variations in the edge positions. 

Tokens are: 
>> ['The', 'second', 'layer', 'typically', 'detects', 'motifs', 'by', 'spotting', 'particular', 'arrangements', 'of', 'edges', ',', 'regardless', 'of', 'small', 'variations', 'in', 'the', 'edge', 'positions', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('second', 'ADJ'), ('layer', 'NOUN'), ('typically', 'ADV'), ('detects', 'VERB'), ('motifs', 'NOUN'), ('by', 'SCONJ'), ('spotting', 'VERB'), ('particular', 'ADJ'), ('arrangements', 'NOUN'), ('of', 'ADP'), ('edges', 'NOUN'), (',', 'PUNCT'), ('regardless', 'ADV'), ('of', 'ADP'), ('small', 'ADJ'), ('variations', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('edge', 'NOUN'), ('positions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('second', 'JJ'), ('layer', 'NN'), ('typically', 'RB'), ('detects', 'VBZ'), ('motifs', 'NNS'), ('by', 'IN'), ('spotting', 'VBG'), ('particular', 'JJ'), ('arrangements', 'NNS'), ('of', 'IN'), ('edges', 'NNS'), (',', ','), ('regardless', 'RB'), ('of', 'IN'), ('small', 'JJ'), ('variations', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('edge', 'NN'), ('positions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('second', 'second'), ('layer', 'layer'), ('typically', 'typically'), ('detects', 'detect'), ('motifs', 'motif'), ('by', 'by'), ('spotting', 'spot'), ('particular', 'particular'), ('arrangements', 'arrangement'), ('of', 'of'), ('edges', 'edge'), (',', ','), ('regardless', 'regardless'), ('of', 'of'), ('small', 'small'), ('variations', 'variation'), ('in', 'in'), ('the', 'the'), ('edge', 'edge'), ('positions', 'position'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'layer'), 'det'), (('second', 'layer'), 'amod'), (('layer', 'detects'), 'nsubj'), (('typically', 'detects'), 'advmod'), (('detects', 'root'), 'root'), (('motifs', 'detects'), 'obj'), (('by', 'spotting'), 'mark'), (('spotting', 'detects'), 'advcl'), (('particular', 'arrangements'), 'amod'), (('arrangements', 'spotting'), 'obj'), (('of', 'edges'), 'case'), (('edges', 'arrangements'), 'nmod'), ((',', 'regardless'), 'punct'), (('regardless', 'spotting'), 'advmod'), (('of', 'variations'), 'case'), (('small', 'variations'), 'amod'), (('variations', 'regardless'), 'obl'), (('in', 'positions'), 'case'), (('the', 'positions'), 'det'), (('edge', 'positions'), 'compound'), (('positions', 'variations'), 'nmod'), (('.', 'detects'), 'punct')]

 Named Entites are: 
>> [('second', 'ORDINAL')]

------------------- Sentence 7 -------------------

 The third  layer may assemble motifs into larger combinations that correspond  to parts of familiar objects, and subsequent layers would detect objects  as combinations of these parts. 

Tokens are: 
>> ['The', 'third', 'layer', 'may', 'assemble', 'motifs', 'into', 'larger', 'combinations', 'that', 'correspond', 'to', 'parts', 'of', 'familiar', 'objects', ',', 'and', 'subsequent', 'layers', 'would', 'detect', 'objects', 'as', 'combinations', 'of', 'these', 'parts', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('third', 'ADJ'), ('layer', 'NOUN'), ('may', 'AUX'), ('assemble', 'VERB'), ('motifs', 'NOUN'), ('into', 'ADP'), ('larger', 'ADJ'), ('combinations', 'NOUN'), ('that', 'PRON'), ('correspond', 'VERB'), ('to', 'ADP'), ('parts', 'NOUN'), ('of', 'ADP'), ('familiar', 'ADJ'), ('objects', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('subsequent', 'ADJ'), ('layers', 'NOUN'), ('would', 'AUX'), ('detect', 'VERB'), ('objects', 'NOUN'), ('as', 'ADP'), ('combinations', 'NOUN'), ('of', 'ADP'), ('these', 'DET'), ('parts', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('third', 'JJ'), ('layer', 'NN'), ('may', 'MD'), ('assemble', 'VB'), ('motifs', 'NNS'), ('into', 'IN'), ('larger', 'JJR'), ('combinations', 'NNS'), ('that', 'WDT'), ('correspond', 'VBP'), ('to', 'IN'), ('parts', 'NNS'), ('of', 'IN'), ('familiar', 'JJ'), ('objects', 'NNS'), (',', ','), ('and', 'CC'), ('subsequent', 'JJ'), ('layers', 'NNS'), ('would', 'MD'), ('detect', 'VB'), ('objects', 'NNS'), ('as', 'IN'), ('combinations', 'NNS'), ('of', 'IN'), ('these', 'DT'), ('parts', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('third', 'third'), ('layer', 'layer'), ('may', 'may'), ('assemble', 'assemble'), ('motifs', 'motif'), ('into', 'into'), ('larger', 'large'), ('combinations', 'combination'), ('that', 'that'), ('correspond', 'correspond'), ('to', 'to'), ('parts', 'part'), ('of', 'of'), ('familiar', 'familiar'), ('objects', 'object'), (',', ','), ('and', 'and'), ('subsequent', 'subsequent'), ('layers', 'layer'), ('would', 'would'), ('detect', 'detect'), ('objects', 'object'), ('as', 'as'), ('combinations', 'combination'), ('of', 'of'), ('these', 'this'), ('parts', 'part'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'layer'), 'det'), (('third', 'layer'), 'amod'), (('layer', 'assemble'), 'nsubj'), (('may', 'assemble'), 'aux'), (('assemble', 'root'), 'root'), (('motifs', 'assemble'), 'obj'), (('into', 'combinations'), 'case'), (('larger', 'combinations'), 'amod'), (('combinations', 'assemble'), 'obl'), (('that', 'correspond'), 'nsubj'), (('correspond', 'combinations'), 'acl:relcl'), (('to', 'parts'), 'case'), (('parts', 'correspond'), 'obl'), (('of', 'objects'), 'case'), (('familiar', 'objects'), 'amod'), (('objects', 'parts'), 'nmod'), ((',', 'detect'), 'punct'), (('and', 'detect'), 'cc'), (('subsequent', 'layers'), 'amod'), (('layers', 'detect'), 'nsubj'), (('would', 'detect'), 'aux'), (('detect', 'assemble'), 'conj'), (('objects', 'detect'), 'obj'), (('as', 'combinations'), 'case'), (('combinations', 'detect'), 'obl'), (('of', 'parts'), 'case'), (('these', 'parts'), 'det'), (('parts', 'combinations'), 'nmod'), (('.', 'assemble'), 'punct')]

 Named Entites are: 
>> [('third', 'ORDINAL')]

------------------- Sentence 8 -------------------

 The key aspect of deep learning is that  these layers of features are not designed by human engineers: they  are learned from data using a general-purpose learning procedure. 

Tokens are: 
>> ['The', 'key', 'aspect', 'of', 'deep', 'learning', 'is', 'that', 'these', 'layers', 'of', 'features', 'are', 'not', 'designed', 'by', 'human', 'engineers', ':', 'they', 'are', 'learned', 'from', 'data', 'using', 'a', 'general', '-', 'purpose', 'learning', 'procedure', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('key', 'ADJ'), ('aspect', 'NOUN'), ('of', 'ADP'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('is', 'VERB'), ('that', 'SCONJ'), ('these', 'DET'), ('layers', 'NOUN'), ('of', 'ADP'), ('features', 'NOUN'), ('are', 'AUX'), ('not', 'PART'), ('designed', 'VERB'), ('by', 'ADP'), ('human', 'ADJ'), ('engineers', 'NOUN'), (':', 'PUNCT'), ('they', 'PRON'), ('are', 'AUX'), ('learned', 'VERB'), ('from', 'ADP'), ('data', 'NOUN'), ('using', 'VERB'), ('a', 'DET'), ('general', 'ADJ'), ('-', 'PUNCT'), ('purpose', 'NOUN'), ('learning', 'NOUN'), ('procedure', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('key', 'JJ'), ('aspect', 'NN'), ('of', 'IN'), ('deep', 'JJ'), ('learning', 'NN'), ('is', 'VBZ'), ('that', 'IN'), ('these', 'DT'), ('layers', 'NNS'), ('of', 'IN'), ('features', 'NNS'), ('are', 'VBP'), ('not', 'RB'), ('designed', 'VBN'), ('by', 'IN'), ('human', 'JJ'), ('engineers', 'NNS'), (':', ':'), ('they', 'PRP'), ('are', 'VBP'), ('learned', 'VBN'), ('from', 'IN'), ('data', 'NNS'), ('using', 'VBG'), ('a', 'DT'), ('general', 'JJ'), ('-', 'HYPH'), ('purpose', 'NN'), ('learning', 'NN'), ('procedure', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('key', 'key'), ('aspect', 'aspect'), ('of', 'of'), ('deep', 'deep'), ('learning', 'learning'), ('is', 'be'), ('that', 'that'), ('these', 'this'), ('layers', 'layer'), ('of', 'of'), ('features', 'feature'), ('are', 'be'), ('not', 'not'), ('designed', 'design'), ('by', 'by'), ('human', 'human'), ('engineers', 'engineer'), (':', ':'), ('they', 'they'), ('are', 'be'), ('learned', 'learn'), ('from', 'from'), ('data', 'datum'), ('using', 'use'), ('a', 'a'), ('general', 'general'), ('-', '-'), ('purpose', 'purpose'), ('learning', 'learning'), ('procedure', 'procedure'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'aspect'), 'det'), (('key', 'aspect'), 'amod'), (('aspect', 'is'), 'nsubj'), (('of', 'learning'), 'case'), (('deep', 'learning'), 'amod'), (('learning', 'aspect'), 'nmod'), (('is', 'root'), 'root'), (('that', 'designed'), 'mark'), (('these', 'layers'), 'det'), (('layers', 'designed'), 'nsubj:pass'), (('of', 'features'), 'case'), (('features', 'layers'), 'nmod'), (('are', 'designed'), 'aux:pass'), (('not', 'designed'), 'advmod'), (('designed', 'is'), 'ccomp'), (('by', 'engineers'), 'case'), (('human', 'engineers'), 'amod'), (('engineers', 'designed'), 'obl'), ((':', 'is'), 'punct'), (('they', 'learned'), 'nsubj:pass'), (('are', 'learned'), 'aux:pass'), (('learned', 'is'), 'parataxis'), (('from', 'data'), 'case'), (('data', 'learned'), 'obl'), (('using', 'data'), 'acl'), (('a', 'procedure'), 'det'), (('general', 'purpose'), 'amod'), (('-', 'purpose'), 'punct'), (('purpose', 'procedure'), 'compound'), (('learning', 'procedure'), 'compound'), (('procedure', 'using'), 'obj'), (('.', 'is'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 5 =================================

Deep learning is making major advances in solving problems that  have resisted the best attempts of the artificial intelligence commu- nity for many years. It has turned out to be very good at discovering  


------------------- Sentence 1 -------------------

 Deep learning is making major advances in solving problems that  have resisted the best attempts of the artificial intelligence commu- nity for many years. 

Tokens are: 
>> ['Deep', 'learning', 'is', 'making', 'major', 'advances', 'in', 'solving', 'problems', 'that', 'have', 'resisted', 'the', 'best', 'attempts', 'of', 'the', 'artificial', 'intelligence', 'commu-', 'nity', 'for', 'many', 'years', '.'] 

 UPOS tags are: 
>> [('Deep', 'ADJ'), ('learning', 'NOUN'), ('is', 'AUX'), ('making', 'VERB'), ('major', 'ADJ'), ('advances', 'NOUN'), ('in', 'SCONJ'), ('solving', 'NOUN'), ('problems', 'NOUN'), ('that', 'PRON'), ('have', 'AUX'), ('resisted', 'VERB'), ('the', 'DET'), ('best', 'ADJ'), ('attempts', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('commu-', 'NOUN'), ('nity', 'NOUN'), ('for', 'ADP'), ('many', 'ADJ'), ('years', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Deep', 'JJ'), ('learning', 'NN'), ('is', 'VBZ'), ('making', 'VBG'), ('major', 'JJ'), ('advances', 'NNS'), ('in', 'IN'), ('solving', 'NN'), ('problems', 'NNS'), ('that', 'WDT'), ('have', 'VBP'), ('resisted', 'VBN'), ('the', 'DT'), ('best', 'JJS'), ('attempts', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('commu-', 'NN'), ('nity', 'NN'), ('for', 'IN'), ('many', 'JJ'), ('years', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Deep', 'deep'), ('learning', 'learning'), ('is', 'be'), ('making', 'make'), ('major', 'major'), ('advances', 'advance'), ('in', 'in'), ('solving', 'solving'), ('problems', 'problem'), ('that', 'that'), ('have', 'have'), ('resisted', 'resist'), ('the', 'the'), ('best', 'good'), ('attempts', 'attempt'), ('of', 'of'), ('the', 'the'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('commu-', 'commu-'), ('nity', 'nity'), ('for', 'for'), ('many', 'many'), ('years', 'year'), ('.', '.')] 

 Dependency tags are: 
>> [(('Deep', 'learning'), 'amod'), (('learning', 'making'), 'nsubj'), (('is', 'making'), 'aux'), (('making', 'root'), 'root'), (('major', 'advances'), 'amod'), (('advances', 'making'), 'obj'), (('in', 'problems'), 'case'), (('solving', 'problems'), 'compound'), (('problems', 'advances'), 'nmod'), (('that', 'resisted'), 'nsubj'), (('have', 'resisted'), 'aux'), (('resisted', 'problems'), 'acl:relcl'), (('the', 'attempts'), 'det'), (('best', 'attempts'), 'amod'), (('attempts', 'resisted'), 'obj'), (('of', 'nity'), 'case'), (('the', 'nity'), 'det'), (('artificial', 'nity'), 'amod'), (('intelligence', 'commu-'), 'compound'), (('commu-', 'nity'), 'compound'), (('nity', 'attempts'), 'nmod'), (('for', 'years'), 'case'), (('many', 'years'), 'amod'), (('years', 'nity'), 'nmod'), (('.', 'making'), 'punct')]

 Named Entites are: 
>> [('many years', 'DATE')]

------------------- Sentence 2 -------------------

 It has turned out to be very good at discovering 

Tokens are: 
>> ['It', 'has', 'turned', 'out', 'to', 'be', 'very', 'good', 'at', 'discovering'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('has', 'AUX'), ('turned', 'VERB'), ('out', 'ADP'), ('to', 'PART'), ('be', 'AUX'), ('very', 'ADV'), ('good', 'ADJ'), ('at', 'SCONJ'), ('discovering', 'VERB')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('has', 'VBZ'), ('turned', 'VBN'), ('out', 'RP'), ('to', 'TO'), ('be', 'VB'), ('very', 'RB'), ('good', 'JJ'), ('at', 'IN'), ('discovering', 'VBG')] 

 Lemmas are: 
>> [('It', 'it'), ('has', 'have'), ('turned', 'turn'), ('out', 'out'), ('to', 'to'), ('be', 'be'), ('very', 'very'), ('good', 'good'), ('at', 'at'), ('discovering', 'discover')] 

 Dependency tags are: 
>> [(('It', 'turned'), 'nsubj'), (('has', 'turned'), 'aux'), (('turned', 'root'), 'root'), (('out', 'turned'), 'compound:prt'), (('to', 'good'), 'mark'), (('be', 'good'), 'cop'), (('very', 'good'), 'advmod'), (('good', 'turned'), 'xcomp'), (('at', 'discovering'), 'mark'), (('discovering', 'good'), 'advcl')]

 Named Entites are: 
>> []

================================ Paragraph 6 =================================

intricate structures in high-dimensional data and is therefore applica- ble to many domains of science, business and government. In addition  to beating records in image recognition1–4 and speech recognition5–7, it  has beaten other machine-learning techniques at predicting the activ- ity of potential drug molecules8, analysing particle accelerator data9,10,  reconstructing brain circuits11, and predicting the effects of mutations  in non-coding DNA on gene expression and disease12,13. Perhaps more  surprisingly, deep learning has produced extremely promising results  for various tasks in natural language understanding14, particularly  topic classification, sentiment analysis, question answering15 and lan- guage translation16,17.  


------------------- Sentence 1 -------------------

 intricate structures in high-dimensional data and is therefore applica- ble to many domains of science, business and government. 

Tokens are: 
>> ['intricate', 'structures', 'in', 'high-dimensional', 'data', 'and', 'is', 'therefore', 'applica', '-', 'ble', 'to', 'many', 'domains', 'of', 'science', ',', 'business', 'and', 'government', '.'] 

 UPOS tags are: 
>> [('intricate', 'ADJ'), ('structures', 'NOUN'), ('in', 'ADP'), ('high-dimensional', 'ADJ'), ('data', 'NOUN'), ('and', 'CCONJ'), ('is', 'AUX'), ('therefore', 'ADV'), ('applica', 'NOUN'), ('-', 'PUNCT'), ('ble', 'NOUN'), ('to', 'ADP'), ('many', 'ADJ'), ('domains', 'NOUN'), ('of', 'ADP'), ('science', 'NOUN'), (',', 'PUNCT'), ('business', 'NOUN'), ('and', 'CCONJ'), ('government', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('intricate', 'JJ'), ('structures', 'NNS'), ('in', 'IN'), ('high-dimensional', 'JJ'), ('data', 'NNS'), ('and', 'CC'), ('is', 'VBZ'), ('therefore', 'RB'), ('applica', 'NN'), ('-', 'HYPH'), ('ble', 'NN'), ('to', 'IN'), ('many', 'JJ'), ('domains', 'NNS'), ('of', 'IN'), ('science', 'NN'), (',', ','), ('business', 'NN'), ('and', 'CC'), ('government', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('intricate', 'intricate'), ('structures', 'structure'), ('in', 'in'), ('high-dimensional', 'high-dimensional'), ('data', 'datum'), ('and', 'and'), ('is', 'be'), ('therefore', 'therefore'), ('applica', 'applica'), ('-', '-'), ('ble', 'ble'), ('to', 'to'), ('many', 'many'), ('domains', 'domain'), ('of', 'of'), ('science', 'science'), (',', ','), ('business', 'business'), ('and', 'and'), ('government', 'government'), ('.', '.')] 

 Dependency tags are: 
>> [(('intricate', 'structures'), 'amod'), (('structures', 'root'), 'root'), (('in', 'data'), 'case'), (('high-dimensional', 'data'), 'amod'), (('data', 'structures'), 'nmod'), (('and', 'ble'), 'cc'), (('is', 'ble'), 'cop'), (('therefore', 'ble'), 'advmod'), (('applica', 'ble'), 'compound'), (('-', 'ble'), 'punct'), (('ble', 'structures'), 'conj'), (('to', 'domains'), 'case'), (('many', 'domains'), 'amod'), (('domains', 'ble'), 'nmod'), (('of', 'science'), 'case'), (('science', 'domains'), 'nmod'), ((',', 'business'), 'punct'), (('business', 'science'), 'conj'), (('and', 'government'), 'cc'), (('government', 'science'), 'conj'), (('.', 'structures'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 In addition  to beating records in image recognition1–4 and speech recognition5–7, it  has beaten other machine-learning techniques at predicting the activ- ity of potential drug molecules8, analysing particle accelerator data9,10,  reconstructing brain circuits11, and predicting the effects of mutations  in non-coding DNA on gene expression and disease12,13. 

Tokens are: 
>> ['In', 'addition', 'to', 'beating', 'records', 'in', 'image', 'recognition', '1', '–', '4', 'and', 'speech', 'recognition', '5', '–', '7', ',', 'it', 'has', 'beaten', 'other', 'machine', '-', 'learning', 'techniques', 'at', 'predicting', 'the', 'activ-', 'ity', 'of', 'potential', 'drug', 'molecules', '8', ',', 'analysing', 'particle', 'accelerator', 'data9,10', ',', 'reconstructing', 'brain', 'circuits', '11', ',', 'and', 'predicting', 'the', 'effects', 'of', 'mutations', 'in', 'non-coding', 'DNA', 'on', 'gene', 'expression', 'and', 'disease', '12,13', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('addition', 'NOUN'), ('to', 'SCONJ'), ('beating', 'VERB'), ('records', 'NOUN'), ('in', 'ADP'), ('image', 'NOUN'), ('recognition', 'NOUN'), ('1', 'NUM'), ('–', 'SYM'), ('4', 'NUM'), ('and', 'CCONJ'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('5', 'NUM'), ('–', 'SYM'), ('7', 'NUM'), (',', 'PUNCT'), ('it', 'PRON'), ('has', 'AUX'), ('beaten', 'VERB'), ('other', 'ADJ'), ('machine', 'NOUN'), ('-', 'PUNCT'), ('learning', 'NOUN'), ('techniques', 'NOUN'), ('at', 'SCONJ'), ('predicting', 'VERB'), ('the', 'DET'), ('activ-', 'ADJ'), ('ity', 'NOUN'), ('of', 'ADP'), ('potential', 'ADJ'), ('drug', 'NOUN'), ('molecules', 'NOUN'), ('8', 'NUM'), (',', 'PUNCT'), ('analysing', 'VERB'), ('particle', 'NOUN'), ('accelerator', 'NOUN'), ('data9,10', 'NOUN'), (',', 'PUNCT'), ('reconstructing', 'VERB'), ('brain', 'NOUN'), ('circuits', 'NOUN'), ('11', 'NUM'), (',', 'PUNCT'), ('and', 'CCONJ'), ('predicting', 'VERB'), ('the', 'DET'), ('effects', 'NOUN'), ('of', 'ADP'), ('mutations', 'NOUN'), ('in', 'ADP'), ('non-coding', 'ADJ'), ('DNA', 'NOUN'), ('on', 'ADP'), ('gene', 'NOUN'), ('expression', 'NOUN'), ('and', 'CCONJ'), ('disease', 'NOUN'), ('12,13', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('addition', 'NN'), ('to', 'IN'), ('beating', 'VBG'), ('records', 'NNS'), ('in', 'IN'), ('image', 'NN'), ('recognition', 'NN'), ('1', 'CD'), ('–', 'SYM'), ('4', 'CD'), ('and', 'CC'), ('speech', 'NN'), ('recognition', 'NN'), ('5', 'CD'), ('–', 'SYM'), ('7', 'CD'), (',', ','), ('it', 'PRP'), ('has', 'VBZ'), ('beaten', 'VBN'), ('other', 'JJ'), ('machine', 'NN'), ('-', 'HYPH'), ('learning', 'NN'), ('techniques', 'NNS'), ('at', 'IN'), ('predicting', 'VBG'), ('the', 'DT'), ('activ-', 'JJ'), ('ity', 'NN'), ('of', 'IN'), ('potential', 'JJ'), ('drug', 'NN'), ('molecules', 'NNS'), ('8', 'CD'), (',', ','), ('analysing', 'VBG'), ('particle', 'NN'), ('accelerator', 'NN'), ('data9,10', 'NN'), (',', ','), ('reconstructing', 'VBG'), ('brain', 'NN'), ('circuits', 'NNS'), ('11', 'CD'), (',', ','), ('and', 'CC'), ('predicting', 'VBG'), ('the', 'DT'), ('effects', 'NNS'), ('of', 'IN'), ('mutations', 'NNS'), ('in', 'IN'), ('non-coding', 'JJ'), ('DNA', 'NN'), ('on', 'IN'), ('gene', 'NN'), ('expression', 'NN'), ('and', 'CC'), ('disease', 'NN'), ('12,13', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('addition', 'addition'), ('to', 'to'), ('beating', 'beat'), ('records', 'record'), ('in', 'in'), ('image', 'image'), ('recognition', 'recognition'), ('1', '1'), ('–', '-'), ('4', '4'), ('and', 'and'), ('speech', 'speech'), ('recognition', 'recognition'), ('5', '5'), ('–', '-'), ('7', '7'), (',', ','), ('it', 'it'), ('has', 'have'), ('beaten', 'beat'), ('other', 'other'), ('machine', 'machine'), ('-', '-'), ('learning', 'learning'), ('techniques', 'technique'), ('at', 'at'), ('predicting', 'predict'), ('the', 'the'), ('activ-', 'activ-'), ('ity', 'ity'), ('of', 'of'), ('potential', 'potential'), ('drug', 'drug'), ('molecules', 'molecule'), ('8', '8'), (',', ','), ('analysing', 'analyse'), ('particle', 'particle'), ('accelerator', 'accelerator'), ('data9,10', 'data9,10'), (',', ','), ('reconstructing', 'reconstruct'), ('brain', 'brain'), ('circuits', 'circuit'), ('11', '11'), (',', ','), ('and', 'and'), ('predicting', 'predict'), ('the', 'the'), ('effects', 'effect'), ('of', 'of'), ('mutations', 'mutation'), ('in', 'in'), ('non-coding', 'non-coding'), ('DNA', 'dna'), ('on', 'on'), ('gene', 'gene'), ('expression', 'expression'), ('and', 'and'), ('disease', 'disease'), ('12,13', '12,13'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'addition'), 'case'), (('addition', 'beaten'), 'obl'), (('to', 'beating'), 'mark'), (('beating', 'addition'), 'acl'), (('records', 'beating'), 'obj'), (('in', 'recognition'), 'case'), (('image', 'records'), 'nmod'), (('recognition', 'beating'), 'obl'), (('1', 'recognition'), 'nummod'), (('–', '4'), 'case'), (('4', '1'), 'nmod'), (('and', 'speech'), 'cc'), (('speech', '4'), 'conj'), (('recognition', 'recognition'), 'conj'), (('5', 'recognition'), 'dep'), (('–', '7'), 'case'), (('7', '5'), 'nmod'), ((',', 'addition'), 'punct'), (('it', 'beaten'), 'nsubj'), (('has', 'beaten'), 'aux'), (('beaten', 'root'), 'root'), (('other', 'techniques'), 'amod'), (('machine', 'learning'), 'compound'), (('-', 'learning'), 'punct'), (('learning', 'techniques'), 'compound'), (('techniques', 'beaten'), 'obj'), (('at', 'predicting'), 'mark'), (('predicting', 'techniques'), 'acl'), (('the', 'ity'), 'det'), (('activ-', 'ity'), 'amod'), (('ity', 'predicting'), 'obj'), (('of', 'molecules'), 'case'), (('potential', 'molecules'), 'amod'), (('drug', 'molecules'), 'compound'), (('molecules', 'ity'), 'nmod'), (('8', 'molecules'), 'nummod'), ((',', 'analysing'), 'punct'), (('analysing', 'predicting'), 'conj'), (('particle', 'data9,10'), 'compound'), (('accelerator', 'data9,10'), 'compound'), (('data9,10', 'analysing'), 'obj'), ((',', 'reconstructing'), 'punct'), (('reconstructing', 'analysing'), 'conj'), (('brain', 'circuits'), 'compound'), (('circuits', 'reconstructing'), 'obj'), (('11', 'circuits'), 'nummod'), ((',', 'predicting'), 'punct'), (('and', 'predicting'), 'cc'), (('predicting', 'reconstructing'), 'conj'), (('the', 'effects'), 'det'), (('effects', 'predicting'), 'obj'), (('of', 'mutations'), 'case'), (('mutations', 'effects'), 'nmod'), (('in', 'DNA'), 'case'), (('non-coding', 'DNA'), 'amod'), (('DNA', 'mutations'), 'nmod'), (('on', 'expression'), 'case'), (('gene', 'expression'), 'compound'), (('expression', 'DNA'), 'nmod'), (('and', 'disease'), 'cc'), (('disease', 'expression'), 'conj'), (('12,13', 'expression'), 'nmod:tmod'), (('.', 'beaten'), 'punct')]

 Named Entites are: 
>> [('1', 'CARDINAL'), ('4', 'CARDINAL'), ('5', 'CARDINAL'), ('7', 'CARDINAL'), ('11', 'CARDINAL'), ('12,13', 'CARDINAL')]

------------------- Sentence 3 -------------------

 Perhaps more  surprisingly, deep learning has produced extremely promising results  for various tasks in natural language understanding14, particularly  topic classification, sentiment analysis, question answering15 and lan- guage translation 

Tokens are: 
>> ['Perhaps', 'more', 'surprisingly', ',', 'deep', 'learning', 'has', 'produced', 'extremely', 'promising', 'results', 'for', 'various', 'tasks', 'in', 'natural', 'language', 'understanding', '14', ',', 'particularly', 'topic', 'classification', ',', 'sentiment', 'analysis', ',', 'question', 'answering', '15', 'and', 'lan', '-', 'guage', 'translation'] 

 UPOS tags are: 
>> [('Perhaps', 'ADV'), ('more', 'ADV'), ('surprisingly', 'ADV'), (',', 'PUNCT'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('has', 'AUX'), ('produced', 'VERB'), ('extremely', 'ADV'), ('promising', 'ADJ'), ('results', 'NOUN'), ('for', 'ADP'), ('various', 'ADJ'), ('tasks', 'NOUN'), ('in', 'ADP'), ('natural', 'ADJ'), ('language', 'NOUN'), ('understanding', 'NOUN'), ('14', 'NUM'), (',', 'PUNCT'), ('particularly', 'ADV'), ('topic', 'NOUN'), ('classification', 'NOUN'), (',', 'PUNCT'), ('sentiment', 'NOUN'), ('analysis', 'NOUN'), (',', 'PUNCT'), ('question', 'NOUN'), ('answering', 'VERB'), ('15', 'NUM'), ('and', 'CCONJ'), ('lan', 'NOUN'), ('-', 'PUNCT'), ('guage', 'NOUN'), ('translation', 'NOUN')] 

 XPOS tags are: 
>> [('Perhaps', 'RB'), ('more', 'RBR'), ('surprisingly', 'RB'), (',', ','), ('deep', 'JJ'), ('learning', 'NN'), ('has', 'VBZ'), ('produced', 'VBN'), ('extremely', 'RB'), ('promising', 'JJ'), ('results', 'NNS'), ('for', 'IN'), ('various', 'JJ'), ('tasks', 'NNS'), ('in', 'IN'), ('natural', 'JJ'), ('language', 'NN'), ('understanding', 'NN'), ('14', 'CD'), (',', ','), ('particularly', 'RB'), ('topic', 'NN'), ('classification', 'NN'), (',', ','), ('sentiment', 'NN'), ('analysis', 'NN'), (',', ','), ('question', 'NN'), ('answering', 'VBG'), ('15', 'CD'), ('and', 'CC'), ('lan', 'NN'), ('-', 'HYPH'), ('guage', 'NN'), ('translation', 'NN')] 

 Lemmas are: 
>> [('Perhaps', 'perhaps'), ('more', 'more'), ('surprisingly', 'surprisingly'), (',', ','), ('deep', 'deep'), ('learning', 'learning'), ('has', 'have'), ('produced', 'produce'), ('extremely', 'extremely'), ('promising', 'promising'), ('results', 'result'), ('for', 'for'), ('various', 'various'), ('tasks', 'task'), ('in', 'in'), ('natural', 'natural'), ('language', 'language'), ('understanding', 'understanding'), ('14', '14'), (',', ','), ('particularly', 'particularly'), ('topic', 'topic'), ('classification', 'classification'), (',', ','), ('sentiment', 'sentiment'), ('analysis', 'analysis'), (',', ','), ('question', 'question'), ('answering', 'answer'), ('15', '15'), ('and', 'and'), ('lan', 'lan'), ('-', '-'), ('guage', 'guage'), ('translation', 'translation')] 

 Dependency tags are: 
>> [(('Perhaps', 'surprisingly'), 'advmod'), (('more', 'surprisingly'), 'advmod'), (('surprisingly', 'produced'), 'advmod'), ((',', 'produced'), 'punct'), (('deep', 'learning'), 'amod'), (('learning', 'produced'), 'nsubj'), (('has', 'produced'), 'aux'), (('produced', 'root'), 'root'), (('extremely', 'promising'), 'advmod'), (('promising', 'results'), 'amod'), (('results', 'produced'), 'obj'), (('for', 'tasks'), 'case'), (('various', 'tasks'), 'amod'), (('tasks', 'results'), 'nmod'), (('in', 'understanding'), 'case'), (('natural', 'understanding'), 'amod'), (('language', 'understanding'), 'compound'), (('understanding', 'tasks'), 'nmod'), (('14', 'understanding'), 'nummod'), ((',', 'classification'), 'punct'), (('particularly', 'classification'), 'advmod'), (('topic', 'classification'), 'compound'), (('classification', 'understanding'), 'appos'), ((',', 'analysis'), 'punct'), (('sentiment', 'analysis'), 'compound'), (('analysis', 'understanding'), 'conj'), ((',', 'question'), 'punct'), (('question', 'understanding'), 'conj'), (('answering', 'produced'), 'advcl'), (('15', 'translation'), 'nummod'), (('and', 'guage'), 'cc'), (('lan', 'guage'), 'compound'), (('-', 'guage'), 'punct'), (('guage', '15'), 'conj'), (('translation', 'answering'), 'obj')]

 Named Entites are: 
>> [('14', 'CARDINAL'), ('15', 'CARDINAL')]

------------------- Sentence 4 -------------------

 16,17. 

Tokens are: 
>> ['16,17', '.'] 

 UPOS tags are: 
>> [('16,17', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('16,17', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('16,17', '1617'), ('.', '.')] 

 Dependency tags are: 
>> [(('16,17', 'root'), 'root'), (('.', '16,17'), 'punct')]

 Named Entites are: 
>> [('16,17', 'CARDINAL')]

================================ Paragraph 7 =================================

We think that deep learning will have many more successes in the  near future because it requires very little engineering by hand, so it  can easily take advantage of increases in the amount of available com- putation and data. New learning algorithms and architectures that are  currently being developed for deep neural networks will only acceler- ate this progress.  


------------------- Sentence 1 -------------------

 We think that deep learning will have many more successes in the  near future because it requires very little engineering by hand, so it  can easily take advantage of increases in the amount of available com- putation and data. 

Tokens are: 
>> ['We', 'think', 'that', 'deep', 'learning', 'will', 'have', 'many', 'more', 'successes', 'in', 'the', 'near', 'future', 'because', 'it', 'requires', 'very', 'little', 'engineering', 'by', 'hand', ',', 'so', 'it', 'can', 'easily', 'take', 'advantage', 'of', 'increases', 'in', 'the', 'amount', 'of', 'available', 'com-', 'putation', 'and', 'data', '.'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('think', 'VERB'), ('that', 'SCONJ'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('will', 'AUX'), ('have', 'VERB'), ('many', 'ADJ'), ('more', 'ADJ'), ('successes', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('near', 'ADJ'), ('future', 'NOUN'), ('because', 'SCONJ'), ('it', 'PRON'), ('requires', 'VERB'), ('very', 'ADV'), ('little', 'ADJ'), ('engineering', 'NOUN'), ('by', 'ADP'), ('hand', 'NOUN'), (',', 'PUNCT'), ('so', 'ADV'), ('it', 'PRON'), ('can', 'AUX'), ('easily', 'ADV'), ('take', 'VERB'), ('advantage', 'NOUN'), ('of', 'ADP'), ('increases', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('amount', 'NOUN'), ('of', 'ADP'), ('available', 'ADJ'), ('com-', 'NOUN'), ('putation', 'NOUN'), ('and', 'CCONJ'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('think', 'VBP'), ('that', 'IN'), ('deep', 'JJ'), ('learning', 'NN'), ('will', 'MD'), ('have', 'VB'), ('many', 'JJ'), ('more', 'JJR'), ('successes', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('near', 'JJ'), ('future', 'NN'), ('because', 'IN'), ('it', 'PRP'), ('requires', 'VBZ'), ('very', 'RB'), ('little', 'JJ'), ('engineering', 'NN'), ('by', 'IN'), ('hand', 'NN'), (',', ','), ('so', 'RB'), ('it', 'PRP'), ('can', 'MD'), ('easily', 'RB'), ('take', 'VB'), ('advantage', 'NN'), ('of', 'IN'), ('increases', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('amount', 'NN'), ('of', 'IN'), ('available', 'JJ'), ('com-', 'NN'), ('putation', 'NN'), ('and', 'CC'), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('think', 'think'), ('that', 'that'), ('deep', 'deep'), ('learning', 'learning'), ('will', 'will'), ('have', 'have'), ('many', 'many'), ('more', 'more'), ('successes', 'success'), ('in', 'in'), ('the', 'the'), ('near', 'near'), ('future', 'future'), ('because', 'because'), ('it', 'it'), ('requires', 'require'), ('very', 'very'), ('little', 'little'), ('engineering', 'engineering'), ('by', 'by'), ('hand', 'hand'), (',', ','), ('so', 'so'), ('it', 'it'), ('can', 'can'), ('easily', 'easily'), ('take', 'take'), ('advantage', 'advantage'), ('of', 'of'), ('increases', 'increase'), ('in', 'in'), ('the', 'the'), ('amount', 'amount'), ('of', 'of'), ('available', 'available'), ('com-', 'com-'), ('putation', 'putation'), ('and', 'and'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('We', 'think'), 'nsubj'), (('think', 'root'), 'root'), (('that', 'have'), 'mark'), (('deep', 'learning'), 'amod'), (('learning', 'have'), 'nsubj'), (('will', 'have'), 'aux'), (('have', 'think'), 'ccomp'), (('many', 'successes'), 'amod'), (('more', 'successes'), 'amod'), (('successes', 'have'), 'obj'), (('in', 'future'), 'case'), (('the', 'future'), 'det'), (('near', 'future'), 'amod'), (('future', 'successes'), 'nmod'), (('because', 'requires'), 'mark'), (('it', 'requires'), 'nsubj'), (('requires', 'have'), 'advcl'), (('very', 'little'), 'advmod'), (('little', 'engineering'), 'amod'), (('engineering', 'requires'), 'obj'), (('by', 'hand'), 'case'), (('hand', 'requires'), 'obl'), ((',', 'take'), 'punct'), (('so', 'take'), 'mark'), (('it', 'take'), 'nsubj'), (('can', 'take'), 'aux'), (('easily', 'take'), 'advmod'), (('take', 'think'), 'parataxis'), (('advantage', 'take'), 'obj'), (('of', 'increases'), 'case'), (('increases', 'advantage'), 'nmod'), (('in', 'amount'), 'case'), (('the', 'amount'), 'det'), (('amount', 'take'), 'obl'), (('of', 'putation'), 'case'), (('available', 'putation'), 'amod'), (('com-', 'putation'), 'compound'), (('putation', 'amount'), 'nmod'), (('and', 'data'), 'cc'), (('data', 'putation'), 'conj'), (('.', 'think'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 New learning algorithms and architectures that are  currently being developed for deep neural networks will only acceler- ate this progress. 

Tokens are: 
>> ['New', 'learning', 'algorithms', 'and', 'architectures', 'that', 'are', 'currently', 'being', 'developed', 'for', 'deep', 'neural', 'networks', 'will', 'only', 'acceler', '-', 'ate', 'this', 'progress', '.'] 

 UPOS tags are: 
>> [('New', 'ADJ'), ('learning', 'NOUN'), ('algorithms', 'NOUN'), ('and', 'CCONJ'), ('architectures', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('currently', 'ADV'), ('being', 'AUX'), ('developed', 'VERB'), ('for', 'ADP'), ('deep', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('will', 'AUX'), ('only', 'ADV'), ('acceler', 'VERB'), ('-', 'PUNCT'), ('ate', 'VERB'), ('this', 'DET'), ('progress', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('New', 'JJ'), ('learning', 'NN'), ('algorithms', 'NNS'), ('and', 'CC'), ('architectures', 'NNS'), ('that', 'WDT'), ('are', 'VBP'), ('currently', 'RB'), ('being', 'VBG'), ('developed', 'VBN'), ('for', 'IN'), ('deep', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), ('will', 'MD'), ('only', 'RB'), ('acceler', 'VB'), ('-', ','), ('ate', 'VBN'), ('this', 'DT'), ('progress', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('New', 'New'), ('learning', 'learning'), ('algorithms', 'algorithm'), ('and', 'and'), ('architectures', 'architecture'), ('that', 'that'), ('are', 'be'), ('currently', 'currently'), ('being', 'be'), ('developed', 'develop'), ('for', 'for'), ('deep', 'deep'), ('neural', 'neural'), ('networks', 'network'), ('will', 'will'), ('only', 'only'), ('acceler', 'acceler'), ('-', '-'), ('ate', 'eat'), ('this', 'this'), ('progress', 'progress'), ('.', '.')] 

 Dependency tags are: 
>> [(('New', 'algorithms'), 'amod'), (('learning', 'algorithms'), 'compound'), (('algorithms', 'acceler'), 'nsubj'), (('and', 'architectures'), 'cc'), (('architectures', 'algorithms'), 'conj'), (('that', 'developed'), 'nsubj:pass'), (('are', 'developed'), 'aux'), (('currently', 'developed'), 'advmod'), (('being', 'developed'), 'aux:pass'), (('developed', 'algorithms'), 'acl:relcl'), (('for', 'networks'), 'case'), (('deep', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'developed'), 'obl'), (('will', 'acceler'), 'aux'), (('only', 'acceler'), 'advmod'), (('acceler', 'root'), 'root'), (('-', 'acceler'), 'punct'), (('ate', 'acceler'), 'parataxis'), (('this', 'progress'), 'det'), (('progress', 'ate'), 'obj'), (('.', 'acceler'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 8 =================================

Supervised learning  The most common form of machine learning, deep or not, is super- vised learning. Imagine that we want to build a system that can classify  images as containing, say, a house, a car, a person or a pet. We first  collect a large data set of images of houses, cars, people and pets, each  labelled with its category. During training, the machine is shown an  image and produces an output in the form of a vector of scores, one  for each category. We want the desired category to have the highest  score of all categories, but this is unlikely to happen before training.  We compute an objective function that measures the error (or dis- tance) between the output scores and the desired pattern of scores. The  machine then modifies its internal adjustable parameters to reduce  this error. These adjustable parameters, often called weights, are real  numbers that can be seen as ‘knobs’ that define the input–output func- tion of the machine. In a typical deep-learning system, there may be  hundreds of millions of these adjustable weights, and hundreds of  millions of labelled examples with which to train the machine.  


------------------- Sentence 1 -------------------

 Supervised learning 

Tokens are: 
>> ['Supervised', 'learning'] 

 UPOS tags are: 
>> [('Supervised', 'VERB'), ('learning', 'NOUN')] 

 XPOS tags are: 
>> [('Supervised', 'VBN'), ('learning', 'NN')] 

 Lemmas are: 
>> [('Supervised', 'supervise'), ('learning', 'learning')] 

 Dependency tags are: 
>> [(('Supervised', 'learning'), 'amod'), (('learning', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 The most common form of machine learning, deep or not, is super- vised learning. 

Tokens are: 
>> ['The', 'most', 'common', 'form', 'of', 'machine', 'learning', ',', 'deep', 'or', 'not', ',', 'is', 'super', '-', 'vised', 'learning', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('most', 'ADV'), ('common', 'ADJ'), ('form', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), (',', 'PUNCT'), ('deep', 'ADJ'), ('or', 'CCONJ'), ('not', 'PART'), (',', 'PUNCT'), ('is', 'AUX'), ('super', 'ADV'), ('-', 'PUNCT'), ('vised', 'VERB'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('most', 'RBS'), ('common', 'JJ'), ('form', 'NN'), ('of', 'IN'), ('machine', 'NN'), ('learning', 'NN'), (',', ','), ('deep', 'JJ'), ('or', 'CC'), ('not', 'RB'), (',', ','), ('is', 'VBZ'), ('super', 'RB'), ('-', 'HYPH'), ('vised', 'VBN'), ('learning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('most', 'most'), ('common', 'common'), ('form', 'form'), ('of', 'of'), ('machine', 'machine'), ('learning', 'learning'), (',', ','), ('deep', 'deep'), ('or', 'or'), ('not', 'not'), (',', ','), ('is', 'be'), ('super', 'super'), ('-', '-'), ('vised', 'vise'), ('learning', 'learning'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'form'), 'det'), (('most', 'common'), 'advmod'), (('common', 'form'), 'amod'), (('form', 'learning'), 'nsubj'), (('of', 'learning'), 'case'), (('machine', 'learning'), 'compound'), (('learning', 'form'), 'nmod'), ((',', 'deep'), 'punct'), (('deep', 'learning'), 'amod'), (('or', 'not'), 'cc'), (('not', 'deep'), 'conj'), ((',', 'learning'), 'punct'), (('is', 'learning'), 'cop'), (('super', 'vised'), 'advmod'), (('-', 'vised'), 'punct'), (('vised', 'learning'), 'amod'), (('learning', 'root'), 'root'), (('.', 'learning'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Imagine that we want to build a system that can classify  images as containing, say, a house, a car, a person or a pet. 

Tokens are: 
>> ['Imagine', 'that', 'we', 'want', 'to', 'build', 'a', 'system', 'that', 'can', 'classify', 'images', 'as', 'containing', ',', 'say', ',', 'a', 'house', ',', 'a', 'car', ',', 'a', 'person', 'or', 'a', 'pet', '.'] 

 UPOS tags are: 
>> [('Imagine', 'VERB'), ('that', 'SCONJ'), ('we', 'PRON'), ('want', 'VERB'), ('to', 'PART'), ('build', 'VERB'), ('a', 'DET'), ('system', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('classify', 'VERB'), ('images', 'NOUN'), ('as', 'SCONJ'), ('containing', 'VERB'), (',', 'PUNCT'), ('say', 'VERB'), (',', 'PUNCT'), ('a', 'DET'), ('house', 'NOUN'), (',', 'PUNCT'), ('a', 'DET'), ('car', 'NOUN'), (',', 'PUNCT'), ('a', 'DET'), ('person', 'NOUN'), ('or', 'CCONJ'), ('a', 'DET'), ('pet', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Imagine', 'VB'), ('that', 'IN'), ('we', 'PRP'), ('want', 'VBP'), ('to', 'TO'), ('build', 'VB'), ('a', 'DT'), ('system', 'NN'), ('that', 'WDT'), ('can', 'MD'), ('classify', 'VB'), ('images', 'NNS'), ('as', 'IN'), ('containing', 'VBG'), (',', ','), ('say', 'VB'), (',', ','), ('a', 'DT'), ('house', 'NN'), (',', ','), ('a', 'DT'), ('car', 'NN'), (',', ','), ('a', 'DT'), ('person', 'NN'), ('or', 'CC'), ('a', 'DT'), ('pet', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Imagine', 'imagine'), ('that', 'that'), ('we', 'we'), ('want', 'want'), ('to', 'to'), ('build', 'build'), ('a', 'a'), ('system', 'system'), ('that', 'that'), ('can', 'can'), ('classify', 'classify'), ('images', 'image'), ('as', 'as'), ('containing', 'contain'), (',', ','), ('say', 'say'), (',', ','), ('a', 'a'), ('house', 'house'), (',', ','), ('a', 'a'), ('car', 'car'), (',', ','), ('a', 'a'), ('person', 'person'), ('or', 'or'), ('a', 'a'), ('pet', 'pet'), ('.', '.')] 

 Dependency tags are: 
>> [(('Imagine', 'root'), 'root'), (('that', 'want'), 'mark'), (('we', 'want'), 'nsubj'), (('want', 'Imagine'), 'ccomp'), (('to', 'build'), 'mark'), (('build', 'want'), 'xcomp'), (('a', 'system'), 'det'), (('system', 'build'), 'obj'), (('that', 'classify'), 'nsubj'), (('can', 'classify'), 'aux'), (('classify', 'system'), 'acl:relcl'), (('images', 'classify'), 'obj'), (('as', 'containing'), 'mark'), (('containing', 'classify'), 'advcl'), ((',', 'say'), 'punct'), (('say', 'Imagine'), 'parataxis'), ((',', 'house'), 'punct'), (('a', 'house'), 'det'), (('house', 'say'), 'obj'), ((',', 'car'), 'punct'), (('a', 'car'), 'det'), (('car', 'house'), 'conj'), ((',', 'person'), 'punct'), (('a', 'person'), 'det'), (('person', 'house'), 'conj'), (('or', 'pet'), 'cc'), (('a', 'pet'), 'det'), (('pet', 'house'), 'conj'), (('.', 'Imagine'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 We first  collect a large data set of images of houses, cars, people and pets, each  labelled with its category. 

Tokens are: 
>> ['We', 'first', 'collect', 'a', 'large', 'data', 'set', 'of', 'images', 'of', 'houses', ',', 'cars', ',', 'people', 'and', 'pets', ',', 'each', 'labelled', 'with', 'its', 'category', '.'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('first', 'ADV'), ('collect', 'VERB'), ('a', 'DET'), ('large', 'ADJ'), ('data', 'NOUN'), ('set', 'NOUN'), ('of', 'ADP'), ('images', 'NOUN'), ('of', 'ADP'), ('houses', 'NOUN'), (',', 'PUNCT'), ('cars', 'NOUN'), (',', 'PUNCT'), ('people', 'NOUN'), ('and', 'CCONJ'), ('pets', 'NOUN'), (',', 'PUNCT'), ('each', 'DET'), ('labelled', 'VERB'), ('with', 'ADP'), ('its', 'PRON'), ('category', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('first', 'RB'), ('collect', 'VBP'), ('a', 'DT'), ('large', 'JJ'), ('data', 'NN'), ('set', 'NN'), ('of', 'IN'), ('images', 'NNS'), ('of', 'IN'), ('houses', 'NNS'), (',', ','), ('cars', 'NNS'), (',', ','), ('people', 'NNS'), ('and', 'CC'), ('pets', 'NNS'), (',', ','), ('each', 'DT'), ('labelled', 'VBN'), ('with', 'IN'), ('its', 'PRP$'), ('category', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('first', 'first'), ('collect', 'collect'), ('a', 'a'), ('large', 'large'), ('data', 'datum'), ('set', 'set'), ('of', 'of'), ('images', 'image'), ('of', 'of'), ('houses', 'house'), (',', ','), ('cars', 'car'), (',', ','), ('people', 'people'), ('and', 'and'), ('pets', 'pet'), (',', ','), ('each', 'each'), ('labelled', 'label'), ('with', 'with'), ('its', 'its'), ('category', 'category'), ('.', '.')] 

 Dependency tags are: 
>> [(('We', 'collect'), 'nsubj'), (('first', 'collect'), 'advmod'), (('collect', 'root'), 'root'), (('a', 'set'), 'det'), (('large', 'set'), 'amod'), (('data', 'set'), 'compound'), (('set', 'collect'), 'obj'), (('of', 'images'), 'case'), (('images', 'set'), 'nmod'), (('of', 'houses'), 'case'), (('houses', 'images'), 'nmod'), ((',', 'cars'), 'punct'), (('cars', 'houses'), 'conj'), ((',', 'people'), 'punct'), (('people', 'houses'), 'conj'), (('and', 'pets'), 'cc'), (('pets', 'houses'), 'conj'), ((',', 'labelled'), 'punct'), (('each', 'labelled'), 'nsubj'), (('labelled', 'houses'), 'acl'), (('with', 'category'), 'case'), (('its', 'category'), 'nmod:poss'), (('category', 'labelled'), 'obl'), (('.', 'collect'), 'punct')]

 Named Entites are: 
>> [('first', 'ORDINAL')]

------------------- Sentence 5 -------------------

 During training, the machine is shown an  image and produces an output in the form of a vector of scores, one  for each category. 

Tokens are: 
>> ['During', 'training', ',', 'the', 'machine', 'is', 'shown', 'an', 'image', 'and', 'produces', 'an', 'output', 'in', 'the', 'form', 'of', 'a', 'vector', 'of', 'scores', ',', 'one', 'for', 'each', 'category', '.'] 

 UPOS tags are: 
>> [('During', 'ADP'), ('training', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('machine', 'NOUN'), ('is', 'AUX'), ('shown', 'VERB'), ('an', 'DET'), ('image', 'NOUN'), ('and', 'CCONJ'), ('produces', 'VERB'), ('an', 'DET'), ('output', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('form', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('vector', 'NOUN'), ('of', 'ADP'), ('scores', 'NOUN'), (',', 'PUNCT'), ('one', 'NUM'), ('for', 'ADP'), ('each', 'DET'), ('category', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('During', 'IN'), ('training', 'NN'), (',', ','), ('the', 'DT'), ('machine', 'NN'), ('is', 'VBZ'), ('shown', 'VBN'), ('an', 'DT'), ('image', 'NN'), ('and', 'CC'), ('produces', 'VBZ'), ('an', 'DT'), ('output', 'NN'), ('in', 'IN'), ('the', 'DT'), ('form', 'NN'), ('of', 'IN'), ('a', 'DT'), ('vector', 'NN'), ('of', 'IN'), ('scores', 'NNS'), (',', ','), ('one', 'CD'), ('for', 'IN'), ('each', 'DT'), ('category', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('During', 'during'), ('training', 'training'), (',', ','), ('the', 'the'), ('machine', 'machine'), ('is', 'be'), ('shown', 'show'), ('an', 'a'), ('image', 'image'), ('and', 'and'), ('produces', 'produce'), ('an', 'a'), ('output', 'output'), ('in', 'in'), ('the', 'the'), ('form', 'form'), ('of', 'of'), ('a', 'a'), ('vector', 'vector'), ('of', 'of'), ('scores', 'score'), (',', ','), ('one', 'one'), ('for', 'for'), ('each', 'each'), ('category', 'category'), ('.', '.')] 

 Dependency tags are: 
>> [(('During', 'training'), 'case'), (('training', 'shown'), 'obl'), ((',', 'shown'), 'punct'), (('the', 'machine'), 'det'), (('machine', 'shown'), 'nsubj:pass'), (('is', 'shown'), 'aux:pass'), (('shown', 'root'), 'root'), (('an', 'image'), 'det'), (('image', 'shown'), 'obj'), (('and', 'produces'), 'cc'), (('produces', 'shown'), 'conj'), (('an', 'output'), 'det'), (('output', 'produces'), 'obj'), (('in', 'form'), 'case'), (('the', 'form'), 'det'), (('form', 'output'), 'nmod'), (('of', 'vector'), 'case'), (('a', 'vector'), 'det'), (('vector', 'form'), 'nmod'), (('of', 'scores'), 'case'), (('scores', 'vector'), 'nmod'), ((',', 'one'), 'punct'), (('one', 'vector'), 'appos'), (('for', 'category'), 'case'), (('each', 'category'), 'det'), (('category', 'one'), 'nmod'), (('.', 'shown'), 'punct')]

 Named Entites are: 
>> [('one', 'CARDINAL')]

------------------- Sentence 6 -------------------

 We want the desired category to have the highest  score of all categories, but this is unlikely to happen before training. 

Tokens are: 
>> ['We', 'want', 'the', 'desired', 'category', 'to', 'have', 'the', 'highest', 'score', 'of', 'all', 'categories', ',', 'but', 'this', 'is', 'unlikely', 'to', 'happen', 'before', 'training', '.'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('want', 'VERB'), ('the', 'DET'), ('desired', 'VERB'), ('category', 'NOUN'), ('to', 'PART'), ('have', 'VERB'), ('the', 'DET'), ('highest', 'ADJ'), ('score', 'NOUN'), ('of', 'ADP'), ('all', 'DET'), ('categories', 'NOUN'), (',', 'PUNCT'), ('but', 'CCONJ'), ('this', 'PRON'), ('is', 'AUX'), ('unlikely', 'ADJ'), ('to', 'PART'), ('happen', 'VERB'), ('before', 'ADP'), ('training', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('want', 'VBP'), ('the', 'DT'), ('desired', 'VBN'), ('category', 'NN'), ('to', 'TO'), ('have', 'VB'), ('the', 'DT'), ('highest', 'JJS'), ('score', 'NN'), ('of', 'IN'), ('all', 'DT'), ('categories', 'NNS'), (',', ','), ('but', 'CC'), ('this', 'DT'), ('is', 'VBZ'), ('unlikely', 'JJ'), ('to', 'TO'), ('happen', 'VB'), ('before', 'IN'), ('training', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('want', 'want'), ('the', 'the'), ('desired', 'desire'), ('category', 'category'), ('to', 'to'), ('have', 'have'), ('the', 'the'), ('highest', 'high'), ('score', 'score'), ('of', 'of'), ('all', 'all'), ('categories', 'category'), (',', ','), ('but', 'but'), ('this', 'this'), ('is', 'be'), ('unlikely', 'unlikely'), ('to', 'to'), ('happen', 'happen'), ('before', 'before'), ('training', 'training'), ('.', '.')] 

 Dependency tags are: 
>> [(('We', 'want'), 'nsubj'), (('want', 'root'), 'root'), (('the', 'category'), 'det'), (('desired', 'category'), 'amod'), (('category', 'want'), 'obj'), (('to', 'have'), 'mark'), (('have', 'category'), 'acl'), (('the', 'score'), 'det'), (('highest', 'score'), 'amod'), (('score', 'have'), 'obj'), (('of', 'categories'), 'case'), (('all', 'categories'), 'det'), (('categories', 'score'), 'nmod'), ((',', 'unlikely'), 'punct'), (('but', 'unlikely'), 'cc'), (('this', 'unlikely'), 'nsubj'), (('is', 'unlikely'), 'cop'), (('unlikely', 'want'), 'conj'), (('to', 'happen'), 'mark'), (('happen', 'unlikely'), 'xcomp'), (('before', 'training'), 'case'), (('training', 'happen'), 'obl'), (('.', 'want'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 7 -------------------

 We compute an objective function that measures the error (or dis- tance) between the output scores and the desired pattern of scores. 

Tokens are: 
>> ['We', 'compute', 'an', 'objective', 'function', 'that', 'measures', 'the', 'error', '(', 'or', 'dis', '-', 'tance', ')', 'between', 'the', 'output', 'scores', 'and', 'the', 'desired', 'pattern', 'of', 'scores', '.'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('compute', 'VERB'), ('an', 'DET'), ('objective', 'ADJ'), ('function', 'NOUN'), ('that', 'PRON'), ('measures', 'VERB'), ('the', 'DET'), ('error', 'NOUN'), ('(', 'PUNCT'), ('or', 'CCONJ'), ('dis', 'NOUN'), ('-', 'PUNCT'), ('tance', 'NOUN'), (')', 'PUNCT'), ('between', 'ADP'), ('the', 'DET'), ('output', 'NOUN'), ('scores', 'NOUN'), ('and', 'CCONJ'), ('the', 'DET'), ('desired', 'VERB'), ('pattern', 'NOUN'), ('of', 'ADP'), ('scores', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('compute', 'VBP'), ('an', 'DT'), ('objective', 'JJ'), ('function', 'NN'), ('that', 'WDT'), ('measures', 'VBZ'), ('the', 'DT'), ('error', 'NN'), ('(', '-LRB-'), ('or', 'CC'), ('dis', 'NN'), ('-', 'HYPH'), ('tance', 'NN'), (')', '-RRB-'), ('between', 'IN'), ('the', 'DT'), ('output', 'NN'), ('scores', 'NNS'), ('and', 'CC'), ('the', 'DT'), ('desired', 'VBN'), ('pattern', 'NN'), ('of', 'IN'), ('scores', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('compute', 'compute'), ('an', 'a'), ('objective', 'objective'), ('function', 'function'), ('that', 'that'), ('measures', 'measure'), ('the', 'the'), ('error', 'error'), ('(', '('), ('or', 'or'), ('dis', 'dis'), ('-', '-'), ('tance', 'tance'), (')', ')'), ('between', 'between'), ('the', 'the'), ('output', 'output'), ('scores', 'score'), ('and', 'and'), ('the', 'the'), ('desired', 'desire'), ('pattern', 'pattern'), ('of', 'of'), ('scores', 'score'), ('.', '.')] 

 Dependency tags are: 
>> [(('We', 'compute'), 'nsubj'), (('compute', 'root'), 'root'), (('an', 'function'), 'det'), (('objective', 'function'), 'amod'), (('function', 'compute'), 'obj'), (('that', 'measures'), 'nsubj'), (('measures', 'function'), 'acl:relcl'), (('the', 'error'), 'det'), (('error', 'measures'), 'obj'), (('(', 'tance'), 'punct'), (('or', 'tance'), 'cc'), (('dis', 'tance'), 'compound'), (('-', 'tance'), 'punct'), (('tance', 'error'), 'conj'), ((')', 'tance'), 'punct'), (('between', 'scores'), 'case'), (('the', 'scores'), 'det'), (('output', 'scores'), 'compound'), (('scores', 'measures'), 'obl'), (('and', 'pattern'), 'cc'), (('the', 'pattern'), 'det'), (('desired', 'pattern'), 'amod'), (('pattern', 'error'), 'conj'), (('of', 'scores'), 'case'), (('scores', 'pattern'), 'nmod'), (('.', 'compute'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 8 -------------------

 The  machine then modifies its internal adjustable parameters to reduce  this error. 

Tokens are: 
>> ['The', 'machine', 'then', 'modifies', 'its', 'internal', 'adjustable', 'parameters', 'to', 'reduce', 'this', 'error', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('machine', 'NOUN'), ('then', 'ADV'), ('modifies', 'VERB'), ('its', 'PRON'), ('internal', 'ADJ'), ('adjustable', 'ADJ'), ('parameters', 'NOUN'), ('to', 'PART'), ('reduce', 'VERB'), ('this', 'DET'), ('error', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('machine', 'NN'), ('then', 'RB'), ('modifies', 'VBZ'), ('its', 'PRP$'), ('internal', 'JJ'), ('adjustable', 'JJ'), ('parameters', 'NNS'), ('to', 'TO'), ('reduce', 'VB'), ('this', 'DT'), ('error', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('machine', 'machine'), ('then', 'then'), ('modifies', 'modify'), ('its', 'its'), ('internal', 'internal'), ('adjustable', 'adjustable'), ('parameters', 'parameter'), ('to', 'to'), ('reduce', 'reduce'), ('this', 'this'), ('error', 'error'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'machine'), 'det'), (('machine', 'modifies'), 'nsubj'), (('then', 'modifies'), 'advmod'), (('modifies', 'root'), 'root'), (('its', 'parameters'), 'nmod:poss'), (('internal', 'parameters'), 'amod'), (('adjustable', 'parameters'), 'amod'), (('parameters', 'modifies'), 'obj'), (('to', 'reduce'), 'mark'), (('reduce', 'modifies'), 'advcl'), (('this', 'error'), 'det'), (('error', 'reduce'), 'obj'), (('.', 'modifies'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 9 -------------------

 These adjustable parameters, often called weights, are real  numbers that can be seen as ‘knobs’ that define the input–output func- tion of the machine. 

Tokens are: 
>> ['These', 'adjustable', 'parameters', ',', 'often', 'called', 'weights', ',', 'are', 'real', 'numbers', 'that', 'can', 'be', 'seen', 'as', '‘', 'knobs', '’', 'that', 'define', 'the', 'input–output', 'func-', 'tion', 'of', 'the', 'machine', '.'] 

 UPOS tags are: 
>> [('These', 'DET'), ('adjustable', 'ADJ'), ('parameters', 'NOUN'), (',', 'PUNCT'), ('often', 'ADV'), ('called', 'VERB'), ('weights', 'NOUN'), (',', 'PUNCT'), ('are', 'AUX'), ('real', 'ADJ'), ('numbers', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('seen', 'VERB'), ('as', 'ADP'), ('‘', 'PUNCT'), ('knobs', 'NOUN'), ('’', 'PUNCT'), ('that', 'PRON'), ('define', 'VERB'), ('the', 'DET'), ('input–output', 'NOUN'), ('func-', 'NOUN'), ('tion', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('machine', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('These', 'DT'), ('adjustable', 'JJ'), ('parameters', 'NNS'), (',', ','), ('often', 'RB'), ('called', 'VBN'), ('weights', 'NNS'), (',', ','), ('are', 'VBP'), ('real', 'JJ'), ('numbers', 'NNS'), ('that', 'WDT'), ('can', 'MD'), ('be', 'VB'), ('seen', 'VBN'), ('as', 'IN'), ('‘', '``'), ('knobs', 'NNS'), ('’', "''"), ('that', 'WDT'), ('define', 'VBP'), ('the', 'DT'), ('input–output', 'NN'), ('func-', 'NN'), ('tion', 'NN'), ('of', 'IN'), ('the', 'DT'), ('machine', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('These', 'this'), ('adjustable', 'adjustable'), ('parameters', 'parameter'), (',', ','), ('often', 'often'), ('called', 'call'), ('weights', 'weight'), (',', ','), ('are', 'be'), ('real', 'real'), ('numbers', 'number'), ('that', 'that'), ('can', 'can'), ('be', 'be'), ('seen', 'see'), ('as', 'as'), ('‘', "'"), ('knobs', 'knob'), ('’', "'"), ('that', 'that'), ('define', 'define'), ('the', 'the'), ('input–output', 'input–output'), ('func-', 'func-'), ('tion', 'tion'), ('of', 'of'), ('the', 'the'), ('machine', 'machine'), ('.', '.')] 

 Dependency tags are: 
>> [(('These', 'parameters'), 'det'), (('adjustable', 'parameters'), 'amod'), (('parameters', 'numbers'), 'nsubj'), ((',', 'parameters'), 'punct'), (('often', 'called'), 'advmod'), (('called', 'parameters'), 'acl'), (('weights', 'called'), 'xcomp'), ((',', 'numbers'), 'punct'), (('are', 'numbers'), 'cop'), (('real', 'numbers'), 'amod'), (('numbers', 'root'), 'root'), (('that', 'seen'), 'nsubj:pass'), (('can', 'seen'), 'aux'), (('be', 'seen'), 'aux:pass'), (('seen', 'numbers'), 'acl:relcl'), (('as', 'knobs'), 'case'), (('‘', 'knobs'), 'punct'), (('knobs', 'seen'), 'obl'), (('’', 'knobs'), 'punct'), (('that', 'define'), 'nsubj'), (('define', 'knobs'), 'acl:relcl'), (('the', 'tion'), 'det'), (('input–output', 'tion'), 'compound'), (('func-', 'tion'), 'compound'), (('tion', 'define'), 'obj'), (('of', 'machine'), 'case'), (('the', 'machine'), 'det'), (('machine', 'tion'), 'nmod'), (('.', 'numbers'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 10 -------------------

 In a typical deep-learning system, there may be  hundreds of millions of these adjustable weights, and hundreds of  millions of labelled examples with which to train the machine. 

Tokens are: 
>> ['In', 'a', 'typical', 'deep-learning', 'system', ',', 'there', 'may', 'be', 'hundreds', 'of', 'millions', 'of', 'these', 'adjustable', 'weights', ',', 'and', 'hundreds', 'of', 'millions', 'of', 'labelled', 'examples', 'with', 'which', 'to', 'train', 'the', 'machine', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('a', 'DET'), ('typical', 'ADJ'), ('deep-learning', 'ADJ'), ('system', 'NOUN'), (',', 'PUNCT'), ('there', 'PRON'), ('may', 'AUX'), ('be', 'VERB'), ('hundreds', 'NOUN'), ('of', 'ADP'), ('millions', 'NOUN'), ('of', 'ADP'), ('these', 'DET'), ('adjustable', 'ADJ'), ('weights', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('hundreds', 'NOUN'), ('of', 'ADP'), ('millions', 'NOUN'), ('of', 'ADP'), ('labelled', 'VERB'), ('examples', 'NOUN'), ('with', 'ADP'), ('which', 'PRON'), ('to', 'PART'), ('train', 'VERB'), ('the', 'DET'), ('machine', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('a', 'DT'), ('typical', 'JJ'), ('deep-learning', 'JJ'), ('system', 'NN'), (',', ','), ('there', 'EX'), ('may', 'MD'), ('be', 'VB'), ('hundreds', 'NNS'), ('of', 'IN'), ('millions', 'NNS'), ('of', 'IN'), ('these', 'DT'), ('adjustable', 'JJ'), ('weights', 'NNS'), (',', ','), ('and', 'CC'), ('hundreds', 'NNS'), ('of', 'IN'), ('millions', 'NNS'), ('of', 'IN'), ('labelled', 'VBN'), ('examples', 'NNS'), ('with', 'IN'), ('which', 'WDT'), ('to', 'TO'), ('train', 'VB'), ('the', 'DT'), ('machine', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('a', 'a'), ('typical', 'typical'), ('deep-learning', 'deep-learning'), ('system', 'system'), (',', ','), ('there', 'there'), ('may', 'may'), ('be', 'be'), ('hundreds', 'hundred'), ('of', 'of'), ('millions', 'million'), ('of', 'of'), ('these', 'this'), ('adjustable', 'adjustable'), ('weights', 'weight'), (',', ','), ('and', 'and'), ('hundreds', 'hundred'), ('of', 'of'), ('millions', 'million'), ('of', 'of'), ('labelled', 'label'), ('examples', 'example'), ('with', 'with'), ('which', 'which'), ('to', 'to'), ('train', 'train'), ('the', 'the'), ('machine', 'machine'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'system'), 'case'), (('a', 'system'), 'det'), (('typical', 'system'), 'amod'), (('deep-learning', 'system'), 'amod'), (('system', 'be'), 'obl'), ((',', 'be'), 'punct'), (('there', 'be'), 'expl'), (('may', 'be'), 'aux'), (('be', 'root'), 'root'), (('hundreds', 'be'), 'nsubj'), (('of', 'millions'), 'case'), (('millions', 'hundreds'), 'nmod'), (('of', 'weights'), 'case'), (('these', 'weights'), 'det'), (('adjustable', 'weights'), 'amod'), (('weights', 'millions'), 'nmod'), ((',', 'hundreds'), 'punct'), (('and', 'hundreds'), 'cc'), (('hundreds', 'hundreds'), 'conj'), (('of', 'millions'), 'case'), (('millions', 'hundreds'), 'nmod'), (('of', 'examples'), 'case'), (('labelled', 'examples'), 'amod'), (('examples', 'millions'), 'nmod'), (('with', 'which'), 'case'), (('which', 'train'), 'obl'), (('to', 'train'), 'mark'), (('train', 'examples'), 'acl'), (('the', 'machine'), 'det'), (('machine', 'train'), 'obj'), (('.', 'be'), 'punct')]

 Named Entites are: 
>> [('hundreds of millions', 'CARDINAL'), ('hundreds of  millions', 'CARDINAL')]

================================ Paragraph 9 =================================

To properly adjust the weight vector, the learning algorithm com- putes a gradient vector that, for each weight, indicates by what amount  the error would increase or decrease if the weight were increased by a  tiny amount. The weight vector is then adjusted in the opposite direc- tion to the gradient vector.  


------------------- Sentence 1 -------------------

 To properly adjust the weight vector, the learning algorithm com- putes a gradient vector that, for each weight, indicates by what amount  the error would increase or decrease if the weight were increased by a  tiny amount. 

Tokens are: 
>> ['To', 'properly', 'adjust', 'the', 'weight', 'vector', ',', 'the', 'learning', 'algorithm', 'com', '-', 'putes', 'a', 'gradient', 'vector', 'that', ',', 'for', 'each', 'weight', ',', 'indicates', 'by', 'what', 'amount', 'the', 'error', 'would', 'increase', 'or', 'decrease', 'if', 'the', 'weight', 'were', 'increased', 'by', 'a', 'tiny', 'amount', '.'] 

 UPOS tags are: 
>> [('To', 'PART'), ('properly', 'ADV'), ('adjust', 'VERB'), ('the', 'DET'), ('weight', 'NOUN'), ('vector', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('learning', 'NOUN'), ('algorithm', 'NOUN'), ('com', 'NOUN'), ('-', 'PUNCT'), ('putes', 'VERB'), ('a', 'DET'), ('gradient', 'NOUN'), ('vector', 'NOUN'), ('that', 'PRON'), (',', 'PUNCT'), ('for', 'ADP'), ('each', 'DET'), ('weight', 'NOUN'), (',', 'PUNCT'), ('indicates', 'VERB'), ('by', 'ADP'), ('what', 'DET'), ('amount', 'NOUN'), ('the', 'DET'), ('error', 'NOUN'), ('would', 'AUX'), ('increase', 'VERB'), ('or', 'CCONJ'), ('decrease', 'VERB'), ('if', 'SCONJ'), ('the', 'DET'), ('weight', 'NOUN'), ('were', 'AUX'), ('increased', 'VERB'), ('by', 'ADP'), ('a', 'DET'), ('tiny', 'ADJ'), ('amount', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('To', 'TO'), ('properly', 'RB'), ('adjust', 'VB'), ('the', 'DT'), ('weight', 'NN'), ('vector', 'NN'), (',', ','), ('the', 'DT'), ('learning', 'NN'), ('algorithm', 'NN'), ('com', 'NN'), ('-', ','), ('putes', 'VBZ'), ('a', 'DT'), ('gradient', 'NN'), ('vector', 'NN'), ('that', 'WDT'), (',', ','), ('for', 'IN'), ('each', 'DT'), ('weight', 'NN'), (',', ','), ('indicates', 'VBZ'), ('by', 'IN'), ('what', 'WDT'), ('amount', 'NN'), ('the', 'DT'), ('error', 'NN'), ('would', 'MD'), ('increase', 'VB'), ('or', 'CC'), ('decrease', 'VB'), ('if', 'IN'), ('the', 'DT'), ('weight', 'NN'), ('were', 'VBD'), ('increased', 'VBN'), ('by', 'IN'), ('a', 'DT'), ('tiny', 'JJ'), ('amount', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('To', 'to'), ('properly', 'properly'), ('adjust', 'adjust'), ('the', 'the'), ('weight', 'weight'), ('vector', 'vector'), (',', ','), ('the', 'the'), ('learning', 'learning'), ('algorithm', 'algorithm'), ('com', 'com'), ('-', '-'), ('putes', 'pute'), ('a', 'a'), ('gradient', 'gradient'), ('vector', 'vector'), ('that', 'that'), (',', ','), ('for', 'for'), ('each', 'each'), ('weight', 'weight'), (',', ','), ('indicates', 'indicate'), ('by', 'by'), ('what', 'what'), ('amount', 'amount'), ('the', 'the'), ('error', 'error'), ('would', 'would'), ('increase', 'increase'), ('or', 'or'), ('decrease', 'decrease'), ('if', 'if'), ('the', 'the'), ('weight', 'weight'), ('were', 'be'), ('increased', 'increase'), ('by', 'by'), ('a', 'a'), ('tiny', 'tiny'), ('amount', 'amount'), ('.', '.')] 

 Dependency tags are: 
>> [(('To', 'adjust'), 'mark'), (('properly', 'adjust'), 'advmod'), (('adjust', 'putes'), 'advcl'), (('the', 'vector'), 'det'), (('weight', 'vector'), 'compound'), (('vector', 'adjust'), 'obj'), ((',', 'putes'), 'punct'), (('the', 'com'), 'det'), (('learning', 'com'), 'compound'), (('algorithm', 'com'), 'compound'), (('com', 'putes'), 'nsubj'), (('-', 'putes'), 'punct'), (('putes', 'root'), 'root'), (('a', 'vector'), 'det'), (('gradient', 'vector'), 'compound'), (('vector', 'putes'), 'obj'), (('that', 'indicates'), 'nsubj'), ((',', 'that'), 'punct'), (('for', 'weight'), 'case'), (('each', 'weight'), 'det'), (('weight', 'indicates'), 'obl'), ((',', 'indicates'), 'punct'), (('indicates', 'vector'), 'acl:relcl'), (('by', 'amount'), 'case'), (('what', 'amount'), 'det'), (('amount', 'indicates'), 'obl'), (('the', 'error'), 'det'), (('error', 'increase'), 'nsubj'), (('would', 'increase'), 'aux'), (('increase', 'amount'), 'acl:relcl'), (('or', 'decrease'), 'cc'), (('decrease', 'increase'), 'conj'), (('if', 'increased'), 'mark'), (('the', 'weight'), 'det'), (('weight', 'increased'), 'nsubj:pass'), (('were', 'increased'), 'aux:pass'), (('increased', 'increase'), 'advcl'), (('by', 'amount'), 'case'), (('a', 'amount'), 'det'), (('tiny', 'amount'), 'amod'), (('amount', 'increased'), 'obl'), (('.', 'putes'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 The weight vector is then adjusted in the opposite direc- tion to the gradient vector. 

Tokens are: 
>> ['The', 'weight', 'vector', 'is', 'then', 'adjusted', 'in', 'the', 'opposite', 'direc-', 'tion', 'to', 'the', 'gradient', 'vector', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('weight', 'NOUN'), ('vector', 'NOUN'), ('is', 'AUX'), ('then', 'ADV'), ('adjusted', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('opposite', 'ADJ'), ('direc-', 'NOUN'), ('tion', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('gradient', 'NOUN'), ('vector', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('weight', 'NN'), ('vector', 'NN'), ('is', 'VBZ'), ('then', 'RB'), ('adjusted', 'VBN'), ('in', 'IN'), ('the', 'DT'), ('opposite', 'JJ'), ('direc-', 'NN'), ('tion', 'NN'), ('to', 'IN'), ('the', 'DT'), ('gradient', 'NN'), ('vector', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('weight', 'weight'), ('vector', 'vector'), ('is', 'be'), ('then', 'then'), ('adjusted', 'adjust'), ('in', 'in'), ('the', 'the'), ('opposite', 'opposite'), ('direc-', 'direc-'), ('tion', 'tion'), ('to', 'to'), ('the', 'the'), ('gradient', 'gradient'), ('vector', 'vector'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'vector'), 'det'), (('weight', 'vector'), 'compound'), (('vector', 'adjusted'), 'nsubj:pass'), (('is', 'adjusted'), 'aux:pass'), (('then', 'adjusted'), 'advmod'), (('adjusted', 'root'), 'root'), (('in', 'tion'), 'case'), (('the', 'tion'), 'det'), (('opposite', 'tion'), 'amod'), (('direc-', 'tion'), 'compound'), (('tion', 'adjusted'), 'obl'), (('to', 'vector'), 'case'), (('the', 'vector'), 'det'), (('gradient', 'vector'), 'compound'), (('vector', 'tion'), 'nmod'), (('.', 'adjusted'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 10 =================================

The objective function, averaged over all the training examples, can  


------------------- Sentence 1 -------------------

 The objective function, averaged over all the training examples, can 

Tokens are: 
>> ['The', 'objective', 'function', ',', 'averaged', 'over', 'all', 'the', 'training', 'examples', ',', 'can'] 

 UPOS tags are: 
>> [('The', 'DET'), ('objective', 'ADJ'), ('function', 'NOUN'), (',', 'PUNCT'), ('averaged', 'VERB'), ('over', 'ADP'), ('all', 'DET'), ('the', 'DET'), ('training', 'NOUN'), ('examples', 'NOUN'), (',', 'PUNCT'), ('can', 'AUX')] 

 XPOS tags are: 
>> [('The', 'DT'), ('objective', 'JJ'), ('function', 'NN'), (',', ','), ('averaged', 'VBN'), ('over', 'IN'), ('all', 'PDT'), ('the', 'DT'), ('training', 'NN'), ('examples', 'NNS'), (',', ','), ('can', 'MD')] 

 Lemmas are: 
>> [('The', 'the'), ('objective', 'objective'), ('function', 'function'), (',', ','), ('averaged', 'average'), ('over', 'over'), ('all', 'all'), ('the', 'the'), ('training', 'training'), ('examples', 'example'), (',', ','), ('can', 'can')] 

 Dependency tags are: 
>> [(('The', 'function'), 'det'), (('objective', 'function'), 'amod'), (('function', 'can'), 'nsubj'), ((',', 'function'), 'punct'), (('averaged', 'function'), 'acl'), (('over', 'examples'), 'case'), (('all', 'examples'), 'det:predet'), (('the', 'examples'), 'det'), (('training', 'examples'), 'compound'), (('examples', 'averaged'), 'obl'), ((',', 'function'), 'punct'), (('can', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 11 =================================

Deep learning allows computational models that are composed of multiple processing layers to learn representations of  data with multiple levels of abstraction. These methods have dramatically improved the state-of-the-art in speech rec- ognition, visual object recognition, object detection and many other domains such as drug discovery and genomics. Deep  learning discovers intricate structure in large data sets by using the backpropagation algorithm to indicate how a machine  should change its internal parameters that are used to compute the representation in each layer from the representation in  the previous layer. Deep convolutional nets have brought about breakthroughs in processing images, video, speech and  audio, whereas recurrent nets have shone light on sequential data such as text and speech.  


------------------- Sentence 1 -------------------

 Deep learning allows computational models that are composed of multiple processing layers to learn representations of  data with multiple levels of abstraction. 

Tokens are: 
>> ['Deep', 'learning', 'allows', 'computational', 'models', 'that', 'are', 'composed', 'of', 'multiple', 'processing', 'layers', 'to', 'learn', 'representations', 'of', 'data', 'with', 'multiple', 'levels', 'of', 'abstraction', '.'] 

 UPOS tags are: 
>> [('Deep', 'ADJ'), ('learning', 'NOUN'), ('allows', 'VERB'), ('computational', 'ADJ'), ('models', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('composed', 'VERB'), ('of', 'ADP'), ('multiple', 'ADJ'), ('processing', 'NOUN'), ('layers', 'NOUN'), ('to', 'PART'), ('learn', 'VERB'), ('representations', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), ('with', 'ADP'), ('multiple', 'ADJ'), ('levels', 'NOUN'), ('of', 'ADP'), ('abstraction', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Deep', 'JJ'), ('learning', 'NN'), ('allows', 'VBZ'), ('computational', 'JJ'), ('models', 'NNS'), ('that', 'WDT'), ('are', 'VBP'), ('composed', 'VBN'), ('of', 'IN'), ('multiple', 'JJ'), ('processing', 'NN'), ('layers', 'NNS'), ('to', 'TO'), ('learn', 'VB'), ('representations', 'NNS'), ('of', 'IN'), ('data', 'NNS'), ('with', 'IN'), ('multiple', 'JJ'), ('levels', 'NNS'), ('of', 'IN'), ('abstraction', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Deep', 'deep'), ('learning', 'learning'), ('allows', 'allow'), ('computational', 'computational'), ('models', 'model'), ('that', 'that'), ('are', 'be'), ('composed', 'compose'), ('of', 'of'), ('multiple', 'multiple'), ('processing', 'processing'), ('layers', 'layer'), ('to', 'to'), ('learn', 'learn'), ('representations', 'representation'), ('of', 'of'), ('data', 'datum'), ('with', 'with'), ('multiple', 'multiple'), ('levels', 'level'), ('of', 'of'), ('abstraction', 'abstraction'), ('.', '.')] 

 Dependency tags are: 
>> [(('Deep', 'learning'), 'amod'), (('learning', 'allows'), 'nsubj'), (('allows', 'root'), 'root'), (('computational', 'models'), 'amod'), (('models', 'allows'), 'obj'), (('that', 'composed'), 'nsubj:pass'), (('are', 'composed'), 'aux:pass'), (('composed', 'models'), 'acl:relcl'), (('of', 'layers'), 'case'), (('multiple', 'layers'), 'amod'), (('processing', 'layers'), 'compound'), (('layers', 'composed'), 'obl'), (('to', 'learn'), 'mark'), (('learn', 'composed'), 'advcl'), (('representations', 'learn'), 'obj'), (('of', 'data'), 'case'), (('data', 'representations'), 'nmod'), (('with', 'levels'), 'case'), (('multiple', 'levels'), 'amod'), (('levels', 'learn'), 'obl'), (('of', 'abstraction'), 'case'), (('abstraction', 'levels'), 'nmod'), (('.', 'allows'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 These methods have dramatically improved the state-of-the-art in speech rec- ognition, visual object recognition, object detection and many other domains such as drug discovery and genomics. 

Tokens are: 
>> ['These', 'methods', 'have', 'dramatically', 'improved', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', 'in', 'speech', 'rec-', 'ognition', ',', 'visual', 'object', 'recognition', ',', 'object', 'detection', 'and', 'many', 'other', 'domains', 'such', 'as', 'drug', 'discovery', 'and', 'genomics', '.'] 

 UPOS tags are: 
>> [('These', 'DET'), ('methods', 'NOUN'), ('have', 'AUX'), ('dramatically', 'ADV'), ('improved', 'VERB'), ('the', 'DET'), ('state', 'NOUN'), ('-', 'PUNCT'), ('of', 'ADP'), ('-', 'PUNCT'), ('the', 'DET'), ('-', 'PUNCT'), ('art', 'NOUN'), ('in', 'ADP'), ('speech', 'NOUN'), ('rec-', 'NOUN'), ('ognition', 'NOUN'), (',', 'PUNCT'), ('visual', 'ADJ'), ('object', 'NOUN'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('object', 'NOUN'), ('detection', 'NOUN'), ('and', 'CCONJ'), ('many', 'ADJ'), ('other', 'ADJ'), ('domains', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('drug', 'NOUN'), ('discovery', 'NOUN'), ('and', 'CCONJ'), ('genomics', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('These', 'DT'), ('methods', 'NNS'), ('have', 'VBP'), ('dramatically', 'RB'), ('improved', 'VBN'), ('the', 'DT'), ('state', 'NN'), ('-', 'HYPH'), ('of', 'IN'), ('-', 'HYPH'), ('the', 'DT'), ('-', 'HYPH'), ('art', 'NN'), ('in', 'IN'), ('speech', 'NN'), ('rec-', 'NN'), ('ognition', 'NN'), (',', ','), ('visual', 'JJ'), ('object', 'NN'), ('recognition', 'NN'), (',', ','), ('object', 'NN'), ('detection', 'NN'), ('and', 'CC'), ('many', 'JJ'), ('other', 'JJ'), ('domains', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('drug', 'NN'), ('discovery', 'NN'), ('and', 'CC'), ('genomics', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('These', 'this'), ('methods', 'method'), ('have', 'have'), ('dramatically', 'dramatically'), ('improved', 'improve'), ('the', 'the'), ('state', 'state'), ('-', '-'), ('of', 'of'), ('-', '-'), ('the', 'the'), ('-', '-'), ('art', 'art'), ('in', 'in'), ('speech', 'speech'), ('rec-', 'rec-'), ('ognition', 'ognition'), (',', ','), ('visual', 'visual'), ('object', 'object'), ('recognition', 'recognition'), (',', ','), ('object', 'object'), ('detection', 'detection'), ('and', 'and'), ('many', 'many'), ('other', 'other'), ('domains', 'domain'), ('such', 'such'), ('as', 'as'), ('drug', 'drug'), ('discovery', 'discovery'), ('and', 'and'), ('genomics', 'genomics'), ('.', '.')] 

 Dependency tags are: 
>> [(('These', 'methods'), 'det'), (('methods', 'improved'), 'nsubj'), (('have', 'improved'), 'aux'), (('dramatically', 'improved'), 'advmod'), (('improved', 'root'), 'root'), (('the', 'art'), 'det'), (('state', 'art'), 'compound'), (('-', 'state'), 'punct'), (('of', 'art'), 'case'), (('-', 'art'), 'punct'), (('the', 'art'), 'det'), (('-', 'art'), 'punct'), (('art', 'improved'), 'obj'), (('in', 'speech'), 'case'), (('speech', 'art'), 'nmod'), (('rec-', 'ognition'), 'compound'), (('ognition', 'art'), 'nmod'), ((',', 'recognition'), 'punct'), (('visual', 'recognition'), 'amod'), (('object', 'recognition'), 'compound'), (('recognition', 'ognition'), 'conj'), ((',', 'detection'), 'punct'), (('object', 'detection'), 'compound'), (('detection', 'ognition'), 'conj'), (('and', 'domains'), 'cc'), (('many', 'domains'), 'amod'), (('other', 'domains'), 'amod'), (('domains', 'ognition'), 'conj'), (('such', 'discovery'), 'case'), (('as', 'such'), 'fixed'), (('drug', 'discovery'), 'compound'), (('discovery', 'domains'), 'nmod'), (('and', 'genomics'), 'cc'), (('genomics', 'discovery'), 'conj'), (('.', 'improved'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Deep  learning discovers intricate structure in large data sets by using the backpropagation algorithm to indicate how a machine  should change its internal parameters that are used to compute the representation in each layer from the representation in  the previous layer. 

Tokens are: 
>> ['Deep', 'learning', 'discovers', 'intricate', 'structure', 'in', 'large', 'data', 'sets', 'by', 'using', 'the', 'backpropagation', 'algorithm', 'to', 'indicate', 'how', 'a', 'machine', 'should', 'change', 'its', 'internal', 'parameters', 'that', 'are', 'used', 'to', 'compute', 'the', 'representation', 'in', 'each', 'layer', 'from', 'the', 'representation', 'in', 'the', 'previous', 'layer', '.'] 

 UPOS tags are: 
>> [('Deep', 'ADJ'), ('learning', 'NOUN'), ('discovers', 'VERB'), ('intricate', 'ADJ'), ('structure', 'NOUN'), ('in', 'ADP'), ('large', 'ADJ'), ('data', 'NOUN'), ('sets', 'NOUN'), ('by', 'SCONJ'), ('using', 'VERB'), ('the', 'DET'), ('backpropagation', 'NOUN'), ('algorithm', 'NOUN'), ('to', 'PART'), ('indicate', 'VERB'), ('how', 'SCONJ'), ('a', 'DET'), ('machine', 'NOUN'), ('should', 'AUX'), ('change', 'VERB'), ('its', 'PRON'), ('internal', 'ADJ'), ('parameters', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('used', 'VERB'), ('to', 'PART'), ('compute', 'VERB'), ('the', 'DET'), ('representation', 'NOUN'), ('in', 'ADP'), ('each', 'DET'), ('layer', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('representation', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('previous', 'ADJ'), ('layer', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Deep', 'JJ'), ('learning', 'NN'), ('discovers', 'VBZ'), ('intricate', 'JJ'), ('structure', 'NN'), ('in', 'IN'), ('large', 'JJ'), ('data', 'NNS'), ('sets', 'NNS'), ('by', 'IN'), ('using', 'VBG'), ('the', 'DT'), ('backpropagation', 'NN'), ('algorithm', 'NN'), ('to', 'TO'), ('indicate', 'VB'), ('how', 'WRB'), ('a', 'DT'), ('machine', 'NN'), ('should', 'MD'), ('change', 'VB'), ('its', 'PRP$'), ('internal', 'JJ'), ('parameters', 'NNS'), ('that', 'WDT'), ('are', 'VBP'), ('used', 'VBN'), ('to', 'TO'), ('compute', 'VB'), ('the', 'DT'), ('representation', 'NN'), ('in', 'IN'), ('each', 'DT'), ('layer', 'NN'), ('from', 'IN'), ('the', 'DT'), ('representation', 'NN'), ('in', 'IN'), ('the', 'DT'), ('previous', 'JJ'), ('layer', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Deep', 'deep'), ('learning', 'learning'), ('discovers', 'discover'), ('intricate', 'intricate'), ('structure', 'structure'), ('in', 'in'), ('large', 'large'), ('data', 'datum'), ('sets', 'set'), ('by', 'by'), ('using', 'use'), ('the', 'the'), ('backpropagation', 'backpropagation'), ('algorithm', 'algorithm'), ('to', 'to'), ('indicate', 'indicate'), ('how', 'how'), ('a', 'a'), ('machine', 'machine'), ('should', 'should'), ('change', 'change'), ('its', 'its'), ('internal', 'internal'), ('parameters', 'parameter'), ('that', 'that'), ('are', 'be'), ('used', 'use'), ('to', 'to'), ('compute', 'compute'), ('the', 'the'), ('representation', 'representation'), ('in', 'in'), ('each', 'each'), ('layer', 'layer'), ('from', 'from'), ('the', 'the'), ('representation', 'representation'), ('in', 'in'), ('the', 'the'), ('previous', 'previous'), ('layer', 'layer'), ('.', '.')] 

 Dependency tags are: 
>> [(('Deep', 'learning'), 'amod'), (('learning', 'discovers'), 'nsubj'), (('discovers', 'root'), 'root'), (('intricate', 'structure'), 'amod'), (('structure', 'discovers'), 'obj'), (('in', 'sets'), 'case'), (('large', 'sets'), 'amod'), (('data', 'sets'), 'compound'), (('sets', 'discovers'), 'obl'), (('by', 'using'), 'mark'), (('using', 'discovers'), 'advcl'), (('the', 'algorithm'), 'det'), (('backpropagation', 'algorithm'), 'compound'), (('algorithm', 'using'), 'obj'), (('to', 'indicate'), 'mark'), (('indicate', 'using'), 'xcomp'), (('how', 'change'), 'mark'), (('a', 'machine'), 'det'), (('machine', 'change'), 'nsubj'), (('should', 'change'), 'aux'), (('change', 'indicate'), 'ccomp'), (('its', 'parameters'), 'nmod:poss'), (('internal', 'parameters'), 'amod'), (('parameters', 'change'), 'obj'), (('that', 'used'), 'nsubj:pass'), (('are', 'used'), 'aux:pass'), (('used', 'parameters'), 'acl:relcl'), (('to', 'compute'), 'mark'), (('compute', 'used'), 'xcomp'), (('the', 'representation'), 'det'), (('representation', 'compute'), 'obj'), (('in', 'layer'), 'case'), (('each', 'layer'), 'det'), (('layer', 'representation'), 'nmod'), (('from', 'representation'), 'case'), (('the', 'representation'), 'det'), (('representation', 'compute'), 'obl'), (('in', 'layer'), 'case'), (('the', 'layer'), 'det'), (('previous', 'layer'), 'amod'), (('layer', 'representation'), 'nmod'), (('.', 'discovers'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Deep convolutional nets have brought about breakthroughs in processing images, video, speech and  audio, whereas recurrent nets have shone light on sequential data such as text and speech. 

Tokens are: 
>> ['Deep', 'convolutional', 'nets', 'have', 'brought', 'about', 'breakthroughs', 'in', 'processing', 'images', ',', 'video', ',', 'speech', 'and', 'audio', ',', 'whereas', 'recurrent', 'nets', 'have', 'shone', 'light', 'on', 'sequential', 'data', 'such', 'as', 'text', 'and', 'speech', '.'] 

 UPOS tags are: 
>> [('Deep', 'ADJ'), ('convolutional', 'ADJ'), ('nets', 'NOUN'), ('have', 'AUX'), ('brought', 'VERB'), ('about', 'ADP'), ('breakthroughs', 'NOUN'), ('in', 'ADP'), ('processing', 'NOUN'), ('images', 'NOUN'), (',', 'PUNCT'), ('video', 'NOUN'), (',', 'PUNCT'), ('speech', 'NOUN'), ('and', 'CCONJ'), ('audio', 'NOUN'), (',', 'PUNCT'), ('whereas', 'SCONJ'), ('recurrent', 'ADJ'), ('nets', 'NOUN'), ('have', 'AUX'), ('shone', 'VERB'), ('light', 'ADJ'), ('on', 'ADP'), ('sequential', 'ADJ'), ('data', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('text', 'NOUN'), ('and', 'CCONJ'), ('speech', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Deep', 'JJ'), ('convolutional', 'JJ'), ('nets', 'NNS'), ('have', 'VBP'), ('brought', 'VBN'), ('about', 'IN'), ('breakthroughs', 'NNS'), ('in', 'IN'), ('processing', 'NN'), ('images', 'NNS'), (',', ','), ('video', 'NN'), (',', ','), ('speech', 'NN'), ('and', 'CC'), ('audio', 'NN'), (',', ','), ('whereas', 'IN'), ('recurrent', 'JJ'), ('nets', 'NNS'), ('have', 'VBP'), ('shone', 'VBN'), ('light', 'JJ'), ('on', 'IN'), ('sequential', 'JJ'), ('data', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('text', 'NN'), ('and', 'CC'), ('speech', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Deep', 'deep'), ('convolutional', 'convolutional'), ('nets', 'net'), ('have', 'have'), ('brought', 'bring'), ('about', 'about'), ('breakthroughs', 'breakthrough'), ('in', 'in'), ('processing', 'processing'), ('images', 'image'), (',', ','), ('video', 'video'), (',', ','), ('speech', 'speech'), ('and', 'and'), ('audio', 'audio'), (',', ','), ('whereas', 'whereas'), ('recurrent', 'recurrent'), ('nets', 'net'), ('have', 'have'), ('shone', 'shine'), ('light', 'light'), ('on', 'on'), ('sequential', 'sequential'), ('data', 'datum'), ('such', 'such'), ('as', 'as'), ('text', 'text'), ('and', 'and'), ('speech', 'speech'), ('.', '.')] 

 Dependency tags are: 
>> [(('Deep', 'nets'), 'amod'), (('convolutional', 'nets'), 'amod'), (('nets', 'brought'), 'nsubj'), (('have', 'brought'), 'aux'), (('brought', 'root'), 'root'), (('about', 'breakthroughs'), 'case'), (('breakthroughs', 'brought'), 'obl'), (('in', 'images'), 'case'), (('processing', 'images'), 'compound'), (('images', 'breakthroughs'), 'nmod'), ((',', 'video'), 'punct'), (('video', 'images'), 'conj'), ((',', 'speech'), 'punct'), (('speech', 'images'), 'conj'), (('and', 'audio'), 'cc'), (('audio', 'images'), 'conj'), ((',', 'shone'), 'punct'), (('whereas', 'shone'), 'mark'), (('recurrent', 'nets'), 'amod'), (('nets', 'shone'), 'nsubj'), (('have', 'shone'), 'aux'), (('shone', 'brought'), 'advcl'), (('light', 'shone'), 'xcomp'), (('on', 'data'), 'case'), (('sequential', 'data'), 'amod'), (('data', 'light'), 'obl'), (('such', 'text'), 'case'), (('as', 'such'), 'fixed'), (('text', 'data'), 'nmod'), (('and', 'speech'), 'cc'), (('speech', 'text'), 'conj'), (('.', 'brought'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 12 =================================

Deep learning Yann LeCun1,2, Yoshua Bengio3 & Geoffrey Hinton4,5 


------------------- Sentence 1 -------------------

 Deep learning Yann LeCun1,2, Yoshua Bengio3 & Geoffrey Hinton 

Tokens are: 
>> ['Deep', 'learning', 'Yann', 'LeCun1', ',', '2', ',', 'Yoshua', 'Bengio3', '&', 'Geoffrey', 'Hinton'] 

 UPOS tags are: 
>> [('Deep', 'ADJ'), ('learning', 'NOUN'), ('Yann', 'PROPN'), ('LeCun1', 'PROPN'), (',', 'PUNCT'), ('2', 'NUM'), (',', 'PUNCT'), ('Yoshua', 'PROPN'), ('Bengio3', 'PROPN'), ('&', 'CCONJ'), ('Geoffrey', 'PROPN'), ('Hinton', 'PROPN')] 

 XPOS tags are: 
>> [('Deep', 'JJ'), ('learning', 'NN'), ('Yann', 'NNP'), ('LeCun1', 'NNP'), (',', ','), ('2', 'CD'), (',', ','), ('Yoshua', 'NNP'), ('Bengio3', 'NNP'), ('&', 'CC'), ('Geoffrey', 'NNP'), ('Hinton', 'NNP')] 

 Lemmas are: 
>> [('Deep', 'deep'), ('learning', 'learning'), ('Yann', 'Yann'), ('LeCun1', 'LeCun1'), (',', ','), ('2', '2'), (',', ','), ('Yoshua', 'Yoshua'), ('Bengio3', 'Bengio3'), ('&', '&'), ('Geoffrey', 'Geoffrey'), ('Hinton', 'Hinton')] 

 Dependency tags are: 
>> [(('Deep', 'learning'), 'amod'), (('learning', 'root'), 'root'), (('Yann', 'learning'), 'flat'), (('LeCun1', 'Yann'), 'flat'), ((',', '2'), 'punct'), (('2', 'Yann'), 'list'), ((',', 'Yoshua'), 'punct'), (('Yoshua', 'Yann'), 'conj'), (('Bengio3', 'Yoshua'), 'flat'), (('&', 'Geoffrey'), 'cc'), (('Geoffrey', 'Yann'), 'conj'), (('Hinton', 'Geoffrey'), 'flat')]

 Named Entites are: 
>> [('Yann LeCun1', 'PERSON'), ('2', 'DATE'), ('Yoshua Bengio3', 'PERSON'), ('Geoffrey Hinton', 'PERSON')]

------------------- Sentence 2 -------------------

 4,5 

Tokens are: 
>> ['4,5'] 

 UPOS tags are: 
>> [('4,5', 'X')] 

 XPOS tags are: 
>> [('4,5', 'LS')] 

 Lemmas are: 
>> [('4,5', '4,5')] 

 Dependency tags are: 
>> [(('4,5', 'root'), 'root')]

 Named Entites are: 
>> [('4,5', 'CARDINAL')]

================================ Paragraph 13 =================================

4 3 6  |  N A T U R E  |  V O L  5 2 1  |  2 8  M A Y  2 0 1 5 


------------------- Sentence 1 -------------------

 4 3 6  |  N A T U R E  |  V O L  5 2 1  |  2 8  M A Y  2 0 1 5 

Tokens are: 
>> ['4', '3', '6', '|', 'N', 'A', 'T', 'U', 'R', 'E', '|', 'V', 'O', 'L', '5', '2', '1', '|', '2', '8', 'M', 'A', 'Y', '2', '0', '1', '5'] 

 UPOS tags are: 
>> [('4', 'NUM'), ('3', 'NUM'), ('6', 'NUM'), ('|', 'PUNCT'), ('N', 'NOUN'), ('A', 'NUM'), ('T', 'NOUN'), ('U', 'NOUN'), ('R', 'NOUN'), ('E', 'NOUN'), ('|', 'SYM'), ('V', 'NOUN'), ('O', 'SYM'), ('L', 'PUNCT'), ('5', 'NUM'), ('2', 'NUM'), ('1', 'NUM'), ('|', 'SYM'), ('2', 'NUM'), ('8', 'NUM'), ('M', 'NUM'), ('A', 'NUM'), ('Y', 'NOUN'), ('2', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('5', 'NUM')] 

 XPOS tags are: 
>> [('4', 'CD'), ('3', 'CD'), ('6', 'CD'), ('|', ':'), ('N', 'NN'), ('A', 'CD'), ('T', 'NN'), ('U', 'NNS'), ('R', 'NNS'), ('E', 'NN'), ('|', 'SYM'), ('V', 'NN'), ('O', 'SYM'), ('L', '-LRB-'), ('5', 'CD'), ('2', 'CD'), ('1', 'CD'), ('|', 'SYM'), ('2', 'CD'), ('8', 'CD'), ('M', 'CD'), ('A', 'CD'), ('Y', 'NN'), ('2', 'CD'), ('0', 'CD'), ('1', 'CD'), ('5', 'CD')] 

 Lemmas are: 
>> [('4', '4'), ('3', '3'), ('6', '6'), ('|', '|'), ('N', 'N'), ('A', 'a'), ('T', 'T'), ('U', 'U'), ('R', 'R'), ('E', 'e'), ('|', '|'), ('V', 'V'), ('O', 'o'), ('L', 'L'), ('5', '5'), ('2', '2'), ('1', '1'), ('|', '|'), ('2', '2'), ('8', '8'), ('M', 'm'), ('A', 'a'), ('Y', 'Y'), ('2', '2'), ('0', '0'), ('1', '1'), ('5', '5')] 

 Dependency tags are: 
>> [(('4', '3'), 'compound'), (('3', 'root'), 'root'), (('6', '3'), 'compound'), (('|', 'N'), 'punct'), (('N', '3'), 'appos'), (('A', 'N'), 'nummod'), (('T', 'N'), 'appos'), (('U', 'R'), 'compound'), (('R', 'E'), 'compound'), (('E', 'N'), 'list'), (('|', 'E'), 'compound'), (('V', 'E'), 'appos'), (('O', '5'), 'punct'), (('L', '5'), 'punct'), (('5', 'V'), 'appos'), (('2', '5'), 'flat'), (('1', '5'), 'flat'), (('|', '2'), 'compound'), (('2', '5'), 'conj'), (('8', '2'), 'flat'), (('M', '8'), 'flat'), (('A', '8'), 'flat'), (('Y', '2'), 'flat'), (('2', '8'), 'flat'), (('0', '2'), 'flat'), (('1', '2'), 'flat'), (('5', '2'), 'flat')]

 Named Entites are: 
>> [('3', 'CARDINAL'), ('1', 'CARDINAL'), ('5', 'CARDINAL')]

================================ Paragraph 14 =================================

REVIEW doi:10.1038/nature14539 


------------------- Sentence 1 -------------------

 REVIEW doi:10.1038/nature14539 

Tokens are: 
>> ['REVIEW', 'doi:10.1038/nature14539'] 

 UPOS tags are: 
>> [('REVIEW', 'NOUN'), ('doi:10.1038/nature14539', 'NUM')] 

 XPOS tags are: 
>> [('REVIEW', 'NN'), ('doi:10.1038/nature14539', 'CD')] 

 Lemmas are: 
>> [('REVIEW', 'review'), ('doi:10.1038/nature14539', 'doi:10.1038/nature14539')] 

 Dependency tags are: 
>> [(('REVIEW', 'root'), 'root'), (('doi:10.1038/nature14539', 'REVIEW'), 'list')]

 Named Entites are: 
>> []

================================ Paragraph 15 =================================

© 2015 Macmillan Publishers Limited. All rights reserved


------------------- Sentence 1 -------------------

 © 2015 Macmillan Publishers Limited. 

Tokens are: 
>> ['©', '2015', 'Macmillan', 'Publishers', 'Limited', '.'] 

 UPOS tags are: 
>> [('©', 'ADP'), ('2015', 'NUM'), ('Macmillan', 'PROPN'), ('Publishers', 'PROPN'), ('Limited', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('©', 'IN'), ('2015', 'CD'), ('Macmillan', 'NNP'), ('Publishers', 'NNPS'), ('Limited', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('©', 'at'), ('2015', '2015'), ('Macmillan', 'Macmillan'), ('Publishers', 'Publisher'), ('Limited', 'Limited'), ('.', '.')] 

 Dependency tags are: 
>> [(('©', 'Limited'), 'case'), (('2015', 'Limited'), 'nummod'), (('Macmillan', 'Limited'), 'compound'), (('Publishers', 'Limited'), 'compound'), (('Limited', 'root'), 'root'), (('.', 'Limited'), 'punct')]

 Named Entites are: 
>> [('2015', 'DATE'), ('Macmillan Publishers Limited', 'ORG')]

------------------- Sentence 2 -------------------

 All rights reserved 

Tokens are: 
>> ['All', 'rights', 'reserved'] 

 UPOS tags are: 
>> [('All', 'DET'), ('rights', 'NOUN'), ('reserved', 'VERB')] 

 XPOS tags are: 
>> [('All', 'DT'), ('rights', 'NNS'), ('reserved', 'VBN')] 

 Lemmas are: 
>> [('All', 'all'), ('rights', 'rights'), ('reserved', 'reserve')] 

 Dependency tags are: 
>> [(('All', 'rights'), 'det'), (('rights', 'root'), 'root'), (('reserved', 'rights'), 'acl')]

 Named Entites are: 
>> []

================================ Paragraph 16 =================================

be seen as a kind of hilly landscape in the high-dimensional space of  weight values. The negative gradient vector indicates the direction  of steepest descent in this landscape, taking it closer to a minimum,  where the output error is low on average.  


------------------- Sentence 1 -------------------

 be seen as a kind of hilly landscape in the high-dimensional space of  weight values. 

Tokens are: 
>> ['be', 'seen', 'as', 'a', 'kind', 'of', 'hilly', 'landscape', 'in', 'the', 'high-', 'dimensional', 'space', 'of', 'weight', 'values', '.'] 

 UPOS tags are: 
>> [('be', 'AUX'), ('seen', 'VERB'), ('as', 'ADP'), ('a', 'DET'), ('kind', 'NOUN'), ('of', 'ADP'), ('hilly', 'ADJ'), ('landscape', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('high-', 'ADJ'), ('dimensional', 'ADJ'), ('space', 'NOUN'), ('of', 'ADP'), ('weight', 'NOUN'), ('values', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('be', 'VB'), ('seen', 'VBN'), ('as', 'IN'), ('a', 'DT'), ('kind', 'NN'), ('of', 'IN'), ('hilly', 'JJ'), ('landscape', 'NN'), ('in', 'IN'), ('the', 'DT'), ('high-', 'JJ'), ('dimensional', 'JJ'), ('space', 'NN'), ('of', 'IN'), ('weight', 'NN'), ('values', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('be', 'be'), ('seen', 'see'), ('as', 'as'), ('a', 'a'), ('kind', 'kind'), ('of', 'of'), ('hilly', 'hilly'), ('landscape', 'landscape'), ('in', 'in'), ('the', 'the'), ('high-', 'high-'), ('dimensional', 'dimensional'), ('space', 'space'), ('of', 'of'), ('weight', 'weight'), ('values', 'value'), ('.', '.')] 

 Dependency tags are: 
>> [(('be', 'seen'), 'aux:pass'), (('seen', 'root'), 'root'), (('as', 'kind'), 'case'), (('a', 'kind'), 'det'), (('kind', 'seen'), 'obl'), (('of', 'landscape'), 'case'), (('hilly', 'landscape'), 'amod'), (('landscape', 'kind'), 'nmod'), (('in', 'space'), 'case'), (('the', 'space'), 'det'), (('high-', 'space'), 'amod'), (('dimensional', 'space'), 'amod'), (('space', 'seen'), 'obl'), (('of', 'values'), 'case'), (('weight', 'values'), 'compound'), (('values', 'space'), 'nmod'), (('.', 'seen'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 The negative gradient vector indicates the direction  of steepest descent in this landscape, taking it closer to a minimum,  where the output error is low on average. 

Tokens are: 
>> ['The', 'negative', 'gradient', 'vector', 'indicates', 'the', 'direction', 'of', 'steepest', 'descent', 'in', 'this', 'landscape', ',', 'taking', 'it', 'closer', 'to', 'a', 'minimum', ',', 'where', 'the', 'output', 'error', 'is', 'low', 'on', 'average', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('negative', 'ADJ'), ('gradient', 'NOUN'), ('vector', 'NOUN'), ('indicates', 'VERB'), ('the', 'DET'), ('direction', 'NOUN'), ('of', 'ADP'), ('steepest', 'ADJ'), ('descent', 'NOUN'), ('in', 'ADP'), ('this', 'DET'), ('landscape', 'NOUN'), (',', 'PUNCT'), ('taking', 'VERB'), ('it', 'PRON'), ('closer', 'ADJ'), ('to', 'ADP'), ('a', 'DET'), ('minimum', 'NOUN'), (',', 'PUNCT'), ('where', 'SCONJ'), ('the', 'DET'), ('output', 'NOUN'), ('error', 'NOUN'), ('is', 'AUX'), ('low', 'ADJ'), ('on', 'ADP'), ('average', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('negative', 'JJ'), ('gradient', 'NN'), ('vector', 'NN'), ('indicates', 'VBZ'), ('the', 'DT'), ('direction', 'NN'), ('of', 'IN'), ('steepest', 'JJS'), ('descent', 'NN'), ('in', 'IN'), ('this', 'DT'), ('landscape', 'NN'), (',', ','), ('taking', 'VBG'), ('it', 'PRP'), ('closer', 'JJR'), ('to', 'IN'), ('a', 'DT'), ('minimum', 'NN'), (',', ','), ('where', 'WRB'), ('the', 'DT'), ('output', 'NN'), ('error', 'NN'), ('is', 'VBZ'), ('low', 'JJ'), ('on', 'IN'), ('average', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('negative', 'negative'), ('gradient', 'gradient'), ('vector', 'vector'), ('indicates', 'indicate'), ('the', 'the'), ('direction', 'direction'), ('of', 'of'), ('steepest', 'steep'), ('descent', 'descent'), ('in', 'in'), ('this', 'this'), ('landscape', 'landscape'), (',', ','), ('taking', 'take'), ('it', 'it'), ('closer', 'close'), ('to', 'to'), ('a', 'a'), ('minimum', 'minimum'), (',', ','), ('where', 'where'), ('the', 'the'), ('output', 'output'), ('error', 'error'), ('is', 'be'), ('low', 'low'), ('on', 'on'), ('average', 'average'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'vector'), 'det'), (('negative', 'vector'), 'amod'), (('gradient', 'vector'), 'compound'), (('vector', 'indicates'), 'nsubj'), (('indicates', 'root'), 'root'), (('the', 'direction'), 'det'), (('direction', 'indicates'), 'obj'), (('of', 'descent'), 'case'), (('steepest', 'descent'), 'amod'), (('descent', 'direction'), 'nmod'), (('in', 'landscape'), 'case'), (('this', 'landscape'), 'det'), (('landscape', 'descent'), 'nmod'), ((',', 'taking'), 'punct'), (('taking', 'indicates'), 'advcl'), (('it', 'taking'), 'obj'), (('closer', 'taking'), 'xcomp'), (('to', 'minimum'), 'case'), (('a', 'minimum'), 'det'), (('minimum', 'closer'), 'obl'), ((',', 'minimum'), 'punct'), (('where', 'low'), 'mark'), (('the', 'error'), 'det'), (('output', 'error'), 'compound'), (('error', 'low'), 'nsubj'), (('is', 'low'), 'cop'), (('low', 'minimum'), 'acl:relcl'), (('on', 'average'), 'case'), (('average', 'low'), 'obl'), (('.', 'indicates'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 17 =================================

In practice, most practitioners use a procedure called stochastic  gradient descent (SGD). This consists of showing the input vector  for a few examples, computing the outputs and the errors, computing  the average gradient for those examples, and adjusting the weights  accordingly. The process is repeated for many small sets of examples  from the training set until the average of the objective function stops  decreasing. It is called stochastic because each small set of examples  gives a noisy estimate of the average gradient over all examples. This  simple procedure usually finds a good set of weights surprisingly  quickly when compared with far more elaborate optimization tech- niques18. After training, the performance of the system is measured  on a different set of examples called a test set. This serves to test the  generalization ability of the machine — its ability to produce sensible  answers on new inputs that it has never seen during training.  


------------------- Sentence 1 -------------------

 In practice, most practitioners use a procedure called stochastic  gradient descent (SGD). 

Tokens are: 
>> ['In', 'practice', ',', 'most', 'practitioners', 'use', 'a', 'procedure', 'called', 'stochastic', 'gradient', 'descent', '(', 'SGD', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('practice', 'NOUN'), (',', 'PUNCT'), ('most', 'ADJ'), ('practitioners', 'NOUN'), ('use', 'VERB'), ('a', 'DET'), ('procedure', 'NOUN'), ('called', 'VERB'), ('stochastic', 'ADJ'), ('gradient', 'NOUN'), ('descent', 'NOUN'), ('(', 'PUNCT'), ('SGD', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('practice', 'NN'), (',', ','), ('most', 'JJS'), ('practitioners', 'NNS'), ('use', 'VBP'), ('a', 'DT'), ('procedure', 'NN'), ('called', 'VBN'), ('stochastic', 'JJ'), ('gradient', 'NN'), ('descent', 'NN'), ('(', '-LRB-'), ('SGD', 'NNP'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('practice', 'practice'), (',', ','), ('most', 'most'), ('practitioners', 'practitioner'), ('use', 'use'), ('a', 'a'), ('procedure', 'procedure'), ('called', 'call'), ('stochastic', 'stochastic'), ('gradient', 'gradient'), ('descent', 'descent'), ('(', '('), ('SGD', 'SGD'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'practice'), 'case'), (('practice', 'use'), 'obl'), ((',', 'use'), 'punct'), (('most', 'practitioners'), 'amod'), (('practitioners', 'use'), 'nsubj'), (('use', 'root'), 'root'), (('a', 'procedure'), 'det'), (('procedure', 'use'), 'obj'), (('called', 'procedure'), 'acl'), (('stochastic', 'descent'), 'amod'), (('gradient', 'descent'), 'compound'), (('descent', 'called'), 'obj'), (('(', 'SGD'), 'punct'), (('SGD', 'descent'), 'appos'), ((')', 'SGD'), 'punct'), (('.', 'use'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 This consists of showing the input vector  for a few examples, computing the outputs and the errors, computing  the average gradient for those examples, and adjusting the weights  accordingly. 

Tokens are: 
>> ['This', 'consists', 'of', 'showing', 'the', 'input', 'vector', 'for', 'a', 'few', 'examples', ',', 'computing', 'the', 'outputs', 'and', 'the', 'errors', ',', 'computing', 'the', 'average', 'gradient', 'for', 'those', 'examples', ',', 'and', 'adjusting', 'the', 'weights', 'accordingly', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('consists', 'VERB'), ('of', 'SCONJ'), ('showing', 'VERB'), ('the', 'DET'), ('input', 'NOUN'), ('vector', 'NOUN'), ('for', 'ADP'), ('a', 'DET'), ('few', 'ADJ'), ('examples', 'NOUN'), (',', 'PUNCT'), ('computing', 'VERB'), ('the', 'DET'), ('outputs', 'NOUN'), ('and', 'CCONJ'), ('the', 'DET'), ('errors', 'NOUN'), (',', 'PUNCT'), ('computing', 'VERB'), ('the', 'DET'), ('average', 'ADJ'), ('gradient', 'NOUN'), ('for', 'ADP'), ('those', 'DET'), ('examples', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('adjusting', 'VERB'), ('the', 'DET'), ('weights', 'NOUN'), ('accordingly', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('consists', 'VBZ'), ('of', 'IN'), ('showing', 'VBG'), ('the', 'DT'), ('input', 'NN'), ('vector', 'NN'), ('for', 'IN'), ('a', 'DT'), ('few', 'JJ'), ('examples', 'NNS'), (',', ','), ('computing', 'VBG'), ('the', 'DT'), ('outputs', 'NNS'), ('and', 'CC'), ('the', 'DT'), ('errors', 'NNS'), (',', ','), ('computing', 'VBG'), ('the', 'DT'), ('average', 'JJ'), ('gradient', 'NN'), ('for', 'IN'), ('those', 'DT'), ('examples', 'NNS'), (',', ','), ('and', 'CC'), ('adjusting', 'VBG'), ('the', 'DT'), ('weights', 'NNS'), ('accordingly', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('consists', 'consist'), ('of', 'of'), ('showing', 'show'), ('the', 'the'), ('input', 'input'), ('vector', 'vector'), ('for', 'for'), ('a', 'a'), ('few', 'few'), ('examples', 'example'), (',', ','), ('computing', 'computing'), ('the', 'the'), ('outputs', 'output'), ('and', 'and'), ('the', 'the'), ('errors', 'error'), (',', ','), ('computing', 'computing'), ('the', 'the'), ('average', 'average'), ('gradient', 'gradient'), ('for', 'for'), ('those', 'that'), ('examples', 'example'), (',', ','), ('and', 'and'), ('adjusting', 'adjust'), ('the', 'the'), ('weights', 'weight'), ('accordingly', 'accordingly'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'consists'), 'nsubj'), (('consists', 'root'), 'root'), (('of', 'showing'), 'mark'), (('showing', 'consists'), 'advcl'), (('the', 'vector'), 'det'), (('input', 'vector'), 'compound'), (('vector', 'showing'), 'obj'), (('for', 'examples'), 'case'), (('a', 'examples'), 'det'), (('few', 'examples'), 'amod'), (('examples', 'showing'), 'obl'), ((',', 'computing'), 'punct'), (('computing', 'showing'), 'conj'), (('the', 'outputs'), 'det'), (('outputs', 'computing'), 'obj'), (('and', 'errors'), 'cc'), (('the', 'errors'), 'det'), (('errors', 'outputs'), 'conj'), ((',', 'computing'), 'punct'), (('computing', 'showing'), 'conj'), (('the', 'gradient'), 'det'), (('average', 'gradient'), 'amod'), (('gradient', 'computing'), 'obj'), (('for', 'examples'), 'case'), (('those', 'examples'), 'det'), (('examples', 'gradient'), 'nmod'), ((',', 'adjusting'), 'punct'), (('and', 'adjusting'), 'cc'), (('adjusting', 'computing'), 'conj'), (('the', 'weights'), 'det'), (('weights', 'adjusting'), 'obj'), (('accordingly', 'adjusting'), 'advmod'), (('.', 'consists'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 The process is repeated for many small sets of examples  from the training set until the average of the objective function stops  decreasing. 

Tokens are: 
>> ['The', 'process', 'is', 'repeated', 'for', 'many', 'small', 'sets', 'of', 'examples', 'from', 'the', 'training', 'set', 'until', 'the', 'average', 'of', 'the', 'objective', 'function', 'stops', 'decreasing', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('process', 'NOUN'), ('is', 'AUX'), ('repeated', 'VERB'), ('for', 'ADP'), ('many', 'ADJ'), ('small', 'ADJ'), ('sets', 'NOUN'), ('of', 'ADP'), ('examples', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('training', 'NOUN'), ('set', 'NOUN'), ('until', 'SCONJ'), ('the', 'DET'), ('average', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('objective', 'ADJ'), ('function', 'NOUN'), ('stops', 'VERB'), ('decreasing', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('process', 'NN'), ('is', 'VBZ'), ('repeated', 'VBN'), ('for', 'IN'), ('many', 'JJ'), ('small', 'JJ'), ('sets', 'NNS'), ('of', 'IN'), ('examples', 'NNS'), ('from', 'IN'), ('the', 'DT'), ('training', 'NN'), ('set', 'NN'), ('until', 'IN'), ('the', 'DT'), ('average', 'NN'), ('of', 'IN'), ('the', 'DT'), ('objective', 'JJ'), ('function', 'NN'), ('stops', 'VBZ'), ('decreasing', 'VBG'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('process', 'process'), ('is', 'be'), ('repeated', 'repeat'), ('for', 'for'), ('many', 'many'), ('small', 'small'), ('sets', 'set'), ('of', 'of'), ('examples', 'example'), ('from', 'from'), ('the', 'the'), ('training', 'training'), ('set', 'set'), ('until', 'until'), ('the', 'the'), ('average', 'average'), ('of', 'of'), ('the', 'the'), ('objective', 'objective'), ('function', 'function'), ('stops', 'stop'), ('decreasing', 'decrease'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'process'), 'det'), (('process', 'repeated'), 'nsubj:pass'), (('is', 'repeated'), 'aux:pass'), (('repeated', 'root'), 'root'), (('for', 'sets'), 'case'), (('many', 'sets'), 'amod'), (('small', 'sets'), 'amod'), (('sets', 'repeated'), 'obl'), (('of', 'examples'), 'case'), (('examples', 'sets'), 'nmod'), (('from', 'set'), 'case'), (('the', 'set'), 'det'), (('training', 'set'), 'compound'), (('set', 'repeated'), 'obl'), (('until', 'stops'), 'mark'), (('the', 'average'), 'det'), (('average', 'stops'), 'nsubj'), (('of', 'function'), 'case'), (('the', 'function'), 'det'), (('objective', 'function'), 'amod'), (('function', 'average'), 'nmod'), (('stops', 'repeated'), 'advcl'), (('decreasing', 'stops'), 'xcomp'), (('.', 'repeated'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 It is called stochastic because each small set of examples  gives a noisy estimate of the average gradient over all examples. 

Tokens are: 
>> ['It', 'is', 'called', 'stochastic', 'because', 'each', 'small', 'set', 'of', 'examples', 'gives', 'a', 'noisy', 'estimate', 'of', 'the', 'average', 'gradient', 'over', 'all', 'examples', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('called', 'VERB'), ('stochastic', 'ADJ'), ('because', 'SCONJ'), ('each', 'DET'), ('small', 'ADJ'), ('set', 'NOUN'), ('of', 'ADP'), ('examples', 'NOUN'), ('gives', 'VERB'), ('a', 'DET'), ('noisy', 'ADJ'), ('estimate', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('average', 'ADJ'), ('gradient', 'NOUN'), ('over', 'ADP'), ('all', 'DET'), ('examples', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('called', 'VBN'), ('stochastic', 'JJ'), ('because', 'IN'), ('each', 'DT'), ('small', 'JJ'), ('set', 'NN'), ('of', 'IN'), ('examples', 'NNS'), ('gives', 'VBZ'), ('a', 'DT'), ('noisy', 'JJ'), ('estimate', 'NN'), ('of', 'IN'), ('the', 'DT'), ('average', 'JJ'), ('gradient', 'NN'), ('over', 'IN'), ('all', 'DT'), ('examples', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('called', 'call'), ('stochastic', 'stochastic'), ('because', 'because'), ('each', 'each'), ('small', 'small'), ('set', 'set'), ('of', 'of'), ('examples', 'example'), ('gives', 'give'), ('a', 'a'), ('noisy', 'noisy'), ('estimate', 'estimate'), ('of', 'of'), ('the', 'the'), ('average', 'average'), ('gradient', 'gradient'), ('over', 'over'), ('all', 'all'), ('examples', 'example'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'called'), 'nsubj:pass'), (('is', 'called'), 'aux:pass'), (('called', 'root'), 'root'), (('stochastic', 'called'), 'xcomp'), (('because', 'gives'), 'mark'), (('each', 'set'), 'det'), (('small', 'set'), 'amod'), (('set', 'gives'), 'nsubj'), (('of', 'examples'), 'case'), (('examples', 'set'), 'nmod'), (('gives', 'called'), 'advcl'), (('a', 'estimate'), 'det'), (('noisy', 'estimate'), 'amod'), (('estimate', 'gives'), 'obj'), (('of', 'gradient'), 'case'), (('the', 'gradient'), 'det'), (('average', 'gradient'), 'amod'), (('gradient', 'estimate'), 'nmod'), (('over', 'examples'), 'case'), (('all', 'examples'), 'det'), (('examples', 'gives'), 'obl'), (('.', 'called'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 This  simple procedure usually finds a good set of weights surprisingly  quickly when compared with far more elaborate optimization tech- niques 

Tokens are: 
>> ['This', 'simple', 'procedure', 'usually', 'finds', 'a', 'good', 'set', 'of', 'weights', 'surprisingly', 'quickly', 'when', 'compared', 'with', 'far', 'more', 'elaborate', 'optimization', 'tech', '-', 'nique', 's'] 

 UPOS tags are: 
>> [('This', 'DET'), ('simple', 'ADJ'), ('procedure', 'NOUN'), ('usually', 'ADV'), ('finds', 'VERB'), ('a', 'DET'), ('good', 'ADJ'), ('set', 'NOUN'), ('of', 'ADP'), ('weights', 'NOUN'), ('surprisingly', 'ADV'), ('quickly', 'ADV'), ('when', 'SCONJ'), ('compared', 'VERB'), ('with', 'ADP'), ('far', 'ADV'), ('more', 'ADV'), ('elaborate', 'ADJ'), ('optimization', 'NOUN'), ('tech', 'NOUN'), ('-', 'PUNCT'), ('nique', 'NOUN'), ('s', 'PART')] 

 XPOS tags are: 
>> [('This', 'DT'), ('simple', 'JJ'), ('procedure', 'NN'), ('usually', 'RB'), ('finds', 'VBZ'), ('a', 'DT'), ('good', 'JJ'), ('set', 'NN'), ('of', 'IN'), ('weights', 'NNS'), ('surprisingly', 'RB'), ('quickly', 'RB'), ('when', 'WRB'), ('compared', 'VBN'), ('with', 'IN'), ('far', 'RB'), ('more', 'RBR'), ('elaborate', 'JJ'), ('optimization', 'NN'), ('tech', 'NN'), ('-', ','), ('nique', 'NN'), ('s', 'POS')] 

 Lemmas are: 
>> [('This', 'this'), ('simple', 'simple'), ('procedure', 'procedure'), ('usually', 'usually'), ('finds', 'find'), ('a', 'a'), ('good', 'good'), ('set', 'set'), ('of', 'of'), ('weights', 'weight'), ('surprisingly', 'surprisingly'), ('quickly', 'quickly'), ('when', 'when'), ('compared', 'compare'), ('with', 'with'), ('far', 'far'), ('more', 'more'), ('elaborate', 'elaborate'), ('optimization', 'optimization'), ('tech', 'tech'), ('-', '-'), ('nique', 'nique'), ('s', "'s")] 

 Dependency tags are: 
>> [(('This', 'procedure'), 'det'), (('simple', 'procedure'), 'amod'), (('procedure', 'finds'), 'nsubj'), (('usually', 'finds'), 'advmod'), (('finds', 'root'), 'root'), (('a', 'set'), 'det'), (('good', 'set'), 'amod'), (('set', 'finds'), 'obj'), (('of', 'weights'), 'case'), (('weights', 'set'), 'nmod'), (('surprisingly', 'quickly'), 'advmod'), (('quickly', 'finds'), 'advmod'), (('when', 'compared'), 'mark'), (('compared', 'finds'), 'advcl'), (('with', 'tech'), 'case'), (('far', 'more'), 'advmod'), (('more', 'elaborate'), 'advmod'), (('elaborate', 'tech'), 'amod'), (('optimization', 'tech'), 'compound'), (('tech', 'compared'), 'obl'), (('-', 'tech'), 'punct'), (('nique', 'tech'), 'appos'), (('s', 'nique'), 'case')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 18. 

Tokens are: 
>> ['18', '.'] 

 UPOS tags are: 
>> [('18', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('18', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('18', '18'), ('.', '.')] 

 Dependency tags are: 
>> [(('18', 'root'), 'root'), (('.', '18'), 'punct')]

 Named Entites are: 
>> [('18', 'CARDINAL')]

------------------- Sentence 7 -------------------

 After training, the performance of the system is measured  on a different set of examples called a test set. 

Tokens are: 
>> ['After', 'training', ',', 'the', 'performance', 'of', 'the', 'system', 'is', 'measured', 'on', 'a', 'different', 'set', 'of', 'examples', 'called', 'a', 'test', 'set', '.'] 

 UPOS tags are: 
>> [('After', 'SCONJ'), ('training', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('performance', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('system', 'NOUN'), ('is', 'AUX'), ('measured', 'VERB'), ('on', 'ADP'), ('a', 'DET'), ('different', 'ADJ'), ('set', 'NOUN'), ('of', 'ADP'), ('examples', 'NOUN'), ('called', 'VERB'), ('a', 'DET'), ('test', 'NOUN'), ('set', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('After', 'IN'), ('training', 'NN'), (',', ','), ('the', 'DT'), ('performance', 'NN'), ('of', 'IN'), ('the', 'DT'), ('system', 'NN'), ('is', 'VBZ'), ('measured', 'VBN'), ('on', 'IN'), ('a', 'DT'), ('different', 'JJ'), ('set', 'NN'), ('of', 'IN'), ('examples', 'NNS'), ('called', 'VBN'), ('a', 'DT'), ('test', 'NN'), ('set', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('After', 'after'), ('training', 'training'), (',', ','), ('the', 'the'), ('performance', 'performance'), ('of', 'of'), ('the', 'the'), ('system', 'system'), ('is', 'be'), ('measured', 'measure'), ('on', 'on'), ('a', 'a'), ('different', 'different'), ('set', 'set'), ('of', 'of'), ('examples', 'example'), ('called', 'call'), ('a', 'a'), ('test', 'test'), ('set', 'set'), ('.', '.')] 

 Dependency tags are: 
>> [(('After', 'training'), 'mark'), (('training', 'measured'), 'obl'), ((',', 'measured'), 'punct'), (('the', 'performance'), 'det'), (('performance', 'measured'), 'nsubj:pass'), (('of', 'system'), 'case'), (('the', 'system'), 'det'), (('system', 'performance'), 'nmod'), (('is', 'measured'), 'aux:pass'), (('measured', 'root'), 'root'), (('on', 'set'), 'case'), (('a', 'set'), 'det'), (('different', 'set'), 'amod'), (('set', 'measured'), 'obl'), (('of', 'examples'), 'case'), (('examples', 'set'), 'nmod'), (('called', 'examples'), 'acl'), (('a', 'set'), 'det'), (('test', 'set'), 'compound'), (('set', 'called'), 'obj'), (('.', 'measured'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 8 -------------------

 This serves to test the  generalization ability of the machine — its ability to produce sensible  answers on new inputs that it has never seen during training. 

Tokens are: 
>> ['This', 'serves', 'to', 'test', 'the', 'generalization', 'ability', 'of', 'the', 'machine', '—', 'its', 'ability', 'to', 'produce', 'sensible', 'answers', 'on', 'new', 'inputs', 'that', 'it', 'has', 'never', 'seen', 'during', 'training', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('serves', 'VERB'), ('to', 'PART'), ('test', 'VERB'), ('the', 'DET'), ('generalization', 'NOUN'), ('ability', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('machine', 'NOUN'), ('—', 'PUNCT'), ('its', 'PRON'), ('ability', 'NOUN'), ('to', 'PART'), ('produce', 'VERB'), ('sensible', 'ADJ'), ('answers', 'NOUN'), ('on', 'ADP'), ('new', 'ADJ'), ('inputs', 'NOUN'), ('that', 'PRON'), ('it', 'PRON'), ('has', 'AUX'), ('never', 'ADV'), ('seen', 'VERB'), ('during', 'ADP'), ('training', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('serves', 'VBZ'), ('to', 'TO'), ('test', 'VB'), ('the', 'DT'), ('generalization', 'NN'), ('ability', 'NN'), ('of', 'IN'), ('the', 'DT'), ('machine', 'NN'), ('—', ':'), ('its', 'PRP$'), ('ability', 'NN'), ('to', 'TO'), ('produce', 'VB'), ('sensible', 'JJ'), ('answers', 'NNS'), ('on', 'IN'), ('new', 'JJ'), ('inputs', 'NNS'), ('that', 'WDT'), ('it', 'PRP'), ('has', 'VBZ'), ('never', 'RB'), ('seen', 'VBN'), ('during', 'IN'), ('training', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('serves', 'serve'), ('to', 'to'), ('test', 'test'), ('the', 'the'), ('generalization', 'generalization'), ('ability', 'ability'), ('of', 'of'), ('the', 'the'), ('machine', 'machine'), ('—', '—'), ('its', 'its'), ('ability', 'ability'), ('to', 'to'), ('produce', 'produce'), ('sensible', 'sensible'), ('answers', 'answer'), ('on', 'on'), ('new', 'new'), ('inputs', 'input'), ('that', 'that'), ('it', 'it'), ('has', 'have'), ('never', 'never'), ('seen', 'see'), ('during', 'during'), ('training', 'training'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'serves'), 'nsubj'), (('serves', 'root'), 'root'), (('to', 'test'), 'mark'), (('test', 'serves'), 'xcomp'), (('the', 'ability'), 'det'), (('generalization', 'ability'), 'compound'), (('ability', 'test'), 'obj'), (('of', 'machine'), 'case'), (('the', 'machine'), 'det'), (('machine', 'ability'), 'nmod'), (('—', 'ability'), 'punct'), (('its', 'ability'), 'nmod:poss'), (('ability', 'serves'), 'parataxis'), (('to', 'produce'), 'mark'), (('produce', 'ability'), 'acl'), (('sensible', 'answers'), 'amod'), (('answers', 'produce'), 'obj'), (('on', 'inputs'), 'case'), (('new', 'inputs'), 'amod'), (('inputs', 'answers'), 'nmod'), (('that', 'seen'), 'obj'), (('it', 'seen'), 'nsubj'), (('has', 'seen'), 'aux'), (('never', 'seen'), 'advmod'), (('seen', 'inputs'), 'acl:relcl'), (('during', 'training'), 'case'), (('training', 'seen'), 'obl'), (('.', 'serves'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 18 =================================

Many of the current practical applications of machine learning use  linear classifiers on top of hand-engineered features. A two-class linear  classifier computes a weighted sum of the feature vector components.  If the weighted sum is above a threshold, the input is classified as  belonging to a particular category.  


------------------- Sentence 1 -------------------

 Many of the current practical applications of machine learning use  linear classifiers on top of hand-engineered features. 

Tokens are: 
>> ['Many', 'of', 'the', 'current', 'practical', 'applications', 'of', 'machine', 'learning', 'use', 'linear', 'classifiers', 'on', 'top', 'of', 'hand', '-', 'engineered', 'features', '.'] 

 UPOS tags are: 
>> [('Many', 'ADJ'), ('of', 'ADP'), ('the', 'DET'), ('current', 'ADJ'), ('practical', 'ADJ'), ('applications', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('use', 'VERB'), ('linear', 'ADJ'), ('classifiers', 'NOUN'), ('on', 'ADP'), ('top', 'NOUN'), ('of', 'ADP'), ('hand', 'NOUN'), ('-', 'PUNCT'), ('engineered', 'VERB'), ('features', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Many', 'JJ'), ('of', 'IN'), ('the', 'DT'), ('current', 'JJ'), ('practical', 'JJ'), ('applications', 'NNS'), ('of', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('use', 'VBP'), ('linear', 'JJ'), ('classifiers', 'NNS'), ('on', 'IN'), ('top', 'NN'), ('of', 'IN'), ('hand', 'NN'), ('-', 'HYPH'), ('engineered', 'VBN'), ('features', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Many', 'many'), ('of', 'of'), ('the', 'the'), ('current', 'current'), ('practical', 'practical'), ('applications', 'application'), ('of', 'of'), ('machine', 'machine'), ('learning', 'learning'), ('use', 'use'), ('linear', 'linear'), ('classifiers', 'classifier'), ('on', 'on'), ('top', 'top'), ('of', 'of'), ('hand', 'hand'), ('-', '-'), ('engineered', 'engineer'), ('features', 'feature'), ('.', '.')] 

 Dependency tags are: 
>> [(('Many', 'use'), 'nsubj'), (('of', 'applications'), 'case'), (('the', 'applications'), 'det'), (('current', 'applications'), 'amod'), (('practical', 'applications'), 'amod'), (('applications', 'Many'), 'nmod'), (('of', 'learning'), 'case'), (('machine', 'learning'), 'compound'), (('learning', 'applications'), 'nmod'), (('use', 'root'), 'root'), (('linear', 'classifiers'), 'amod'), (('classifiers', 'use'), 'obj'), (('on', 'top'), 'case'), (('top', 'use'), 'obl'), (('of', 'features'), 'case'), (('hand', 'engineered'), 'compound'), (('-', 'engineered'), 'punct'), (('engineered', 'features'), 'amod'), (('features', 'top'), 'nmod'), (('.', 'use'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 A two-class linear  classifier computes a weighted sum of the feature vector components. 

Tokens are: 
>> ['A', 'two', '-class', 'linear', 'classifier', 'computes', 'a', 'weighted', 'sum', 'of', 'the', 'feature', 'vector', 'components', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('two', 'NUM'), ('-class', 'ADJ'), ('linear', 'ADJ'), ('classifier', 'NOUN'), ('computes', 'VERB'), ('a', 'DET'), ('weighted', 'VERB'), ('sum', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('feature', 'NOUN'), ('vector', 'NOUN'), ('components', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('two', 'CD'), ('-class', 'JJ'), ('linear', 'JJ'), ('classifier', 'NN'), ('computes', 'VBZ'), ('a', 'DT'), ('weighted', 'VBN'), ('sum', 'NN'), ('of', 'IN'), ('the', 'DT'), ('feature', 'NN'), ('vector', 'NN'), ('components', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('two', 'two'), ('-class', '-class'), ('linear', 'linear'), ('classifier', 'classifier'), ('computes', 'compute'), ('a', 'a'), ('weighted', 'weight'), ('sum', 'sum'), ('of', 'of'), ('the', 'the'), ('feature', 'feature'), ('vector', 'vector'), ('components', 'component'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'classifier'), 'det'), (('two', 'classifier'), 'nummod'), (('-class', 'classifier'), 'amod'), (('linear', 'classifier'), 'amod'), (('classifier', 'computes'), 'nsubj'), (('computes', 'root'), 'root'), (('a', 'sum'), 'det'), (('weighted', 'sum'), 'amod'), (('sum', 'computes'), 'obj'), (('of', 'components'), 'case'), (('the', 'components'), 'det'), (('feature', 'vector'), 'compound'), (('vector', 'components'), 'compound'), (('components', 'sum'), 'nmod'), (('.', 'computes'), 'punct')]

 Named Entites are: 
>> [('two', 'CARDINAL')]

------------------- Sentence 3 -------------------

 If the weighted sum is above a threshold, the input is classified as  belonging to a particular category. 

Tokens are: 
>> ['If', 'the', 'weighted', 'sum', 'is', 'above', 'a', 'threshold', ',', 'the', 'input', 'is', 'classified', 'as', 'belonging', 'to', 'a', 'particular', 'category', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('the', 'DET'), ('weighted', 'VERB'), ('sum', 'NOUN'), ('is', 'AUX'), ('above', 'ADP'), ('a', 'DET'), ('threshold', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('input', 'NOUN'), ('is', 'AUX'), ('classified', 'VERB'), ('as', 'SCONJ'), ('belonging', 'VERB'), ('to', 'ADP'), ('a', 'DET'), ('particular', 'ADJ'), ('category', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('the', 'DT'), ('weighted', 'VBN'), ('sum', 'NN'), ('is', 'VBZ'), ('above', 'IN'), ('a', 'DT'), ('threshold', 'NN'), (',', ','), ('the', 'DT'), ('input', 'NN'), ('is', 'VBZ'), ('classified', 'VBN'), ('as', 'IN'), ('belonging', 'VBG'), ('to', 'IN'), ('a', 'DT'), ('particular', 'JJ'), ('category', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('the', 'the'), ('weighted', 'weight'), ('sum', 'sum'), ('is', 'be'), ('above', 'above'), ('a', 'a'), ('threshold', 'threshold'), (',', ','), ('the', 'the'), ('input', 'input'), ('is', 'be'), ('classified', 'classify'), ('as', 'as'), ('belonging', 'belong'), ('to', 'to'), ('a', 'a'), ('particular', 'particular'), ('category', 'category'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'threshold'), 'mark'), (('the', 'sum'), 'det'), (('weighted', 'sum'), 'amod'), (('sum', 'threshold'), 'nsubj'), (('is', 'threshold'), 'cop'), (('above', 'threshold'), 'case'), (('a', 'threshold'), 'det'), (('threshold', 'classified'), 'advcl'), ((',', 'classified'), 'punct'), (('the', 'input'), 'det'), (('input', 'classified'), 'nsubj:pass'), (('is', 'classified'), 'aux:pass'), (('classified', 'root'), 'root'), (('as', 'belonging'), 'mark'), (('belonging', 'classified'), 'advcl'), (('to', 'category'), 'case'), (('a', 'category'), 'det'), (('particular', 'category'), 'amod'), (('category', 'belonging'), 'obl'), (('.', 'classified'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 19 =================================

Since the 1960s we have known that linear classifiers can only carve  their input space into very simple regions, namely half-spaces sepa- rated by a hyperplane19. But problems such as image and speech recog- nition require the input–output function to be insensitive to irrelevant  variations of the input, such as variations in position, orientation or  illumination of an object, or variations in the pitch or accent of speech,  while being very sensitive to particular minute variations (for example,  the difference between a white wolf and a breed of wolf-like white  dog called a Samoyed). At the pixel level, images of two Samoyeds in  different poses and in different environments may be very different  from each other, whereas two images of a Samoyed and a wolf in the  same position and on similar backgrounds may be very similar to each  other. A linear classifier, or any other ‘shallow’ classifier operating on  


------------------- Sentence 1 -------------------

 Since the 1960s we have known that linear classifiers can only carve  their input space into very simple regions, namely half-spaces sepa- rated by a hyperplane 

Tokens are: 
>> ['Since', 'the', '1960s', 'we', 'have', 'known', 'that', 'linear', 'classifiers', 'can', 'only', 'carve', 'their', 'input', 'space', 'into', 'very', 'simple', 'regions', ',', 'namely', 'half', '-', 'spaces', 'sepa-', 'rated', 'by', 'a', 'hyperplane'] 

 UPOS tags are: 
>> [('Since', 'ADP'), ('the', 'DET'), ('1960s', 'NOUN'), ('we', 'PRON'), ('have', 'AUX'), ('known', 'VERB'), ('that', 'SCONJ'), ('linear', 'ADJ'), ('classifiers', 'NOUN'), ('can', 'AUX'), ('only', 'ADV'), ('carve', 'VERB'), ('their', 'PRON'), ('input', 'NOUN'), ('space', 'NOUN'), ('into', 'ADP'), ('very', 'ADV'), ('simple', 'ADJ'), ('regions', 'NOUN'), (',', 'PUNCT'), ('namely', 'ADV'), ('half', 'NOUN'), ('-', 'PUNCT'), ('spaces', 'NOUN'), ('sepa-', 'AUX'), ('rated', 'VERB'), ('by', 'ADP'), ('a', 'DET'), ('hyperplane', 'NOUN')] 

 XPOS tags are: 
>> [('Since', 'IN'), ('the', 'DT'), ('1960s', 'NNS'), ('we', 'PRP'), ('have', 'VBP'), ('known', 'VBN'), ('that', 'IN'), ('linear', 'JJ'), ('classifiers', 'NNS'), ('can', 'MD'), ('only', 'RB'), ('carve', 'VB'), ('their', 'PRP$'), ('input', 'NN'), ('space', 'NN'), ('into', 'IN'), ('very', 'RB'), ('simple', 'JJ'), ('regions', 'NNS'), (',', ','), ('namely', 'RB'), ('half', 'NN'), ('-', 'HYPH'), ('spaces', 'NNS'), ('sepa-', 'VBP'), ('rated', 'VBN'), ('by', 'IN'), ('a', 'DT'), ('hyperplane', 'NN')] 

 Lemmas are: 
>> [('Since', 'since'), ('the', 'the'), ('1960s', '1960'), ('we', 'we'), ('have', 'have'), ('known', 'know'), ('that', 'that'), ('linear', 'linear'), ('classifiers', 'classifier'), ('can', 'can'), ('only', 'only'), ('carve', 'carve'), ('their', 'they'), ('input', 'input'), ('space', 'space'), ('into', 'into'), ('very', 'very'), ('simple', 'simple'), ('regions', 'region'), (',', ','), ('namely', 'namely'), ('half', 'half'), ('-', '-'), ('spaces', 'space'), ('sepa-', 'sepa-'), ('rated', 'rate'), ('by', 'by'), ('a', 'a'), ('hyperplane', 'hyperplane')] 

 Dependency tags are: 
>> [(('Since', '1960s'), 'case'), (('the', '1960s'), 'det'), (('1960s', 'known'), 'obl'), (('we', 'known'), 'nsubj'), (('have', 'known'), 'aux'), (('known', 'root'), 'root'), (('that', 'carve'), 'mark'), (('linear', 'classifiers'), 'amod'), (('classifiers', 'carve'), 'nsubj'), (('can', 'carve'), 'aux'), (('only', 'carve'), 'advmod'), (('carve', 'known'), 'ccomp'), (('their', 'space'), 'nmod:poss'), (('input', 'space'), 'compound'), (('space', 'carve'), 'obj'), (('into', 'regions'), 'case'), (('very', 'simple'), 'advmod'), (('simple', 'regions'), 'amod'), (('regions', 'carve'), 'obl'), ((',', 'carve'), 'punct'), (('namely', 'spaces'), 'advmod'), (('half', 'spaces'), 'nummod'), (('-', 'spaces'), 'punct'), (('spaces', 'rated'), 'nsubj:pass'), (('sepa-', 'rated'), 'aux:pass'), (('rated', 'carve'), 'advcl'), (('by', 'hyperplane'), 'case'), (('a', 'hyperplane'), 'det'), (('hyperplane', 'rated'), 'obl')]

 Named Entites are: 
>> [('the 1960s', 'DATE'), ('half', 'CARDINAL')]

------------------- Sentence 2 -------------------

 19. 

Tokens are: 
>> ['19', '.'] 

 UPOS tags are: 
>> [('19', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('19', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('19', '19'), ('.', '.')] 

 Dependency tags are: 
>> [(('19', 'root'), 'root'), (('.', '19'), 'punct')]

 Named Entites are: 
>> [('19', 'CARDINAL')]

------------------- Sentence 3 -------------------

 But problems such as image and speech recog- nition require the input–output function to be insensitive to irrelevant  variations of the input, such as variations in position, orientation or  illumination of an object, or variations in the pitch or accent of speech,  while being very sensitive to particular minute variations (for example,  the difference between a white wolf and a breed of wolf-like white  dog called a Samoyed). 

Tokens are: 
>> ['But', 'problems', 'such', 'as', 'image', 'and', 'speech', 'recog-', 'nition', 'require', 'the', 'input–output', 'function', 'to', 'be', 'insensitive', 'to', 'irrelevant', 'variations', 'of', 'the', 'input', ',', 'such', 'as', 'variations', 'in', 'position', ',', 'orientation', 'or', 'illumination', 'of', 'an', 'object', ',', 'or', 'variations', 'in', 'the', 'pitch', 'or', 'accent', 'of', 'speech', ',', 'while', 'being', 'very', 'sensitive', 'to', 'particular', 'minute', 'variations', '(', 'for', 'example', ',', 'the', 'difference', 'between', 'a', 'white', 'wolf', 'and', 'a', 'breed', 'of', 'wolf', '-', 'like', 'white', 'dog', 'called', 'a', 'Samoyed', ')', '.'] 

 UPOS tags are: 
>> [('But', 'CCONJ'), ('problems', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('image', 'NOUN'), ('and', 'CCONJ'), ('speech', 'NOUN'), ('recog-', 'NOUN'), ('nition', 'NOUN'), ('require', 'VERB'), ('the', 'DET'), ('input–output', 'ADJ'), ('function', 'NOUN'), ('to', 'PART'), ('be', 'AUX'), ('insensitive', 'ADJ'), ('to', 'ADP'), ('irrelevant', 'ADJ'), ('variations', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('input', 'NOUN'), (',', 'PUNCT'), ('such', 'ADJ'), ('as', 'ADP'), ('variations', 'NOUN'), ('in', 'ADP'), ('position', 'NOUN'), (',', 'PUNCT'), ('orientation', 'NOUN'), ('or', 'CCONJ'), ('illumination', 'NOUN'), ('of', 'ADP'), ('an', 'DET'), ('object', 'NOUN'), (',', 'PUNCT'), ('or', 'CCONJ'), ('variations', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('pitch', 'NOUN'), ('or', 'CCONJ'), ('accent', 'NOUN'), ('of', 'ADP'), ('speech', 'NOUN'), (',', 'PUNCT'), ('while', 'SCONJ'), ('being', 'AUX'), ('very', 'ADV'), ('sensitive', 'ADJ'), ('to', 'ADP'), ('particular', 'ADJ'), ('minute', 'NOUN'), ('variations', 'NOUN'), ('(', 'PUNCT'), ('for', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('difference', 'NOUN'), ('between', 'ADP'), ('a', 'DET'), ('white', 'ADJ'), ('wolf', 'NOUN'), ('and', 'CCONJ'), ('a', 'DET'), ('breed', 'NOUN'), ('of', 'ADP'), ('wolf', 'NOUN'), ('-', 'PUNCT'), ('like', 'ADP'), ('white', 'ADJ'), ('dog', 'NOUN'), ('called', 'VERB'), ('a', 'DET'), ('Samoyed', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('But', 'CC'), ('problems', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('image', 'NN'), ('and', 'CC'), ('speech', 'NN'), ('recog-', 'NN'), ('nition', 'NN'), ('require', 'VBP'), ('the', 'DT'), ('input–output', 'JJ'), ('function', 'NN'), ('to', 'TO'), ('be', 'VB'), ('insensitive', 'JJ'), ('to', 'IN'), ('irrelevant', 'JJ'), ('variations', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('input', 'NN'), (',', ','), ('such', 'JJ'), ('as', 'IN'), ('variations', 'NNS'), ('in', 'IN'), ('position', 'NN'), (',', ','), ('orientation', 'NN'), ('or', 'CC'), ('illumination', 'NN'), ('of', 'IN'), ('an', 'DT'), ('object', 'NN'), (',', ','), ('or', 'CC'), ('variations', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('pitch', 'NN'), ('or', 'CC'), ('accent', 'NN'), ('of', 'IN'), ('speech', 'NN'), (',', ','), ('while', 'IN'), ('being', 'VBG'), ('very', 'RB'), ('sensitive', 'JJ'), ('to', 'IN'), ('particular', 'JJ'), ('minute', 'NN'), ('variations', 'NNS'), ('(', '-LRB-'), ('for', 'IN'), ('example', 'NN'), (',', ','), ('the', 'DT'), ('difference', 'NN'), ('between', 'IN'), ('a', 'DT'), ('white', 'JJ'), ('wolf', 'NN'), ('and', 'CC'), ('a', 'DT'), ('breed', 'NN'), ('of', 'IN'), ('wolf', 'NN'), ('-', ','), ('like', 'IN'), ('white', 'JJ'), ('dog', 'NN'), ('called', 'VBN'), ('a', 'DT'), ('Samoyed', 'NNP'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('But', 'but'), ('problems', 'problem'), ('such', 'such'), ('as', 'as'), ('image', 'image'), ('and', 'and'), ('speech', 'speech'), ('recog-', 'recog-'), ('nition', 'nition'), ('require', 'require'), ('the', 'the'), ('input–output', 'input–output'), ('function', 'function'), ('to', 'to'), ('be', 'be'), ('insensitive', 'insensitive'), ('to', 'to'), ('irrelevant', 'irrelevant'), ('variations', 'variation'), ('of', 'of'), ('the', 'the'), ('input', 'input'), (',', ','), ('such', 'such'), ('as', 'as'), ('variations', 'variation'), ('in', 'in'), ('position', 'position'), (',', ','), ('orientation', 'orientation'), ('or', 'or'), ('illumination', 'illumination'), ('of', 'of'), ('an', 'a'), ('object', 'object'), (',', ','), ('or', 'or'), ('variations', 'variation'), ('in', 'in'), ('the', 'the'), ('pitch', 'pitch'), ('or', 'or'), ('accent', 'accent'), ('of', 'of'), ('speech', 'speech'), (',', ','), ('while', 'while'), ('being', 'be'), ('very', 'very'), ('sensitive', 'sensitive'), ('to', 'to'), ('particular', 'particular'), ('minute', 'minute'), ('variations', 'variation'), ('(', '('), ('for', 'for'), ('example', 'example'), (',', ','), ('the', 'the'), ('difference', 'difference'), ('between', 'between'), ('a', 'a'), ('white', 'white'), ('wolf', 'wolf'), ('and', 'and'), ('a', 'a'), ('breed', 'breed'), ('of', 'of'), ('wolf', 'wolf'), ('-', '-'), ('like', 'like'), ('white', 'white'), ('dog', 'dog'), ('called', 'call'), ('a', 'a'), ('Samoyed', 'Samoyed'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('But', 'require'), 'cc'), (('problems', 'require'), 'nsubj'), (('such', 'image'), 'case'), (('as', 'such'), 'fixed'), (('image', 'problems'), 'nmod'), (('and', 'nition'), 'cc'), (('speech', 'recog-'), 'compound'), (('recog-', 'nition'), 'compound'), (('nition', 'problems'), 'nmod'), (('require', 'root'), 'root'), (('the', 'function'), 'det'), (('input–output', 'function'), 'amod'), (('function', 'require'), 'obj'), (('to', 'insensitive'), 'mark'), (('be', 'insensitive'), 'cop'), (('insensitive', 'function'), 'acl'), (('to', 'variations'), 'case'), (('irrelevant', 'variations'), 'amod'), (('variations', 'insensitive'), 'obl'), (('of', 'input'), 'case'), (('the', 'input'), 'det'), (('input', 'variations'), 'nmod'), ((',', 'variations'), 'punct'), (('such', 'variations'), 'case'), (('as', 'such'), 'fixed'), (('variations', 'variations'), 'nmod'), (('in', 'position'), 'case'), (('position', 'variations'), 'nmod'), ((',', 'orientation'), 'punct'), (('orientation', 'position'), 'conj'), (('or', 'illumination'), 'cc'), (('illumination', 'position'), 'conj'), (('of', 'object'), 'case'), (('an', 'object'), 'det'), (('object', 'variations'), 'nmod'), ((',', 'variations'), 'punct'), (('or', 'variations'), 'cc'), (('variations', 'variations'), 'conj'), (('in', 'pitch'), 'case'), (('the', 'pitch'), 'det'), (('pitch', 'variations'), 'nmod'), (('or', 'accent'), 'cc'), (('accent', 'pitch'), 'conj'), (('of', 'speech'), 'case'), (('speech', 'pitch'), 'nmod'), ((',', 'sensitive'), 'punct'), (('while', 'sensitive'), 'mark'), (('being', 'sensitive'), 'cop'), (('very', 'sensitive'), 'advmod'), (('sensitive', 'variations'), 'acl'), (('to', 'variations'), 'case'), (('particular', 'variations'), 'amod'), (('minute', 'variations'), 'compound'), (('variations', 'sensitive'), 'obl'), (('(', 'difference'), 'punct'), (('for', 'example'), 'case'), (('example', 'difference'), 'nmod'), ((',', 'difference'), 'punct'), (('the', 'difference'), 'det'), (('difference', 'variations'), 'appos'), (('between', 'wolf'), 'case'), (('a', 'wolf'), 'det'), (('white', 'wolf'), 'amod'), (('wolf', 'difference'), 'nmod'), (('and', 'breed'), 'cc'), (('a', 'breed'), 'det'), (('breed', 'wolf'), 'conj'), (('of', 'wolf'), 'case'), (('wolf', 'breed'), 'nmod'), (('-', 'dog'), 'punct'), (('like', 'dog'), 'case'), (('white', 'dog'), 'amod'), (('dog', 'breed'), 'nmod'), (('called', 'dog'), 'acl'), (('a', 'Samoyed'), 'det'), (('Samoyed', 'called'), 'xcomp'), ((')', 'difference'), 'punct'), (('.', 'require'), 'punct')]

 Named Entites are: 
>> [('Samoyed', 'NORP')]

------------------- Sentence 4 -------------------

 At the pixel level, images of two Samoyeds in  different poses and in different environments may be very different  from each other, whereas two images of a Samoyed and a wolf in the  same position and on similar backgrounds may be very similar to each  other. 

Tokens are: 
>> ['At', 'the', 'pixel', 'level', ',', 'images', 'of', 'two', 'Samoyeds', 'in', 'different', 'poses', 'and', 'in', 'different', 'environments', 'may', 'be', 'very', 'different', 'from', 'each', 'other', ',', 'whereas', 'two', 'images', 'of', 'a', 'Samoyed', 'and', 'a', 'wolf', 'in', 'the', 'same', 'position', 'and', 'on', 'similar', 'backgrounds', 'may', 'be', 'very', 'similar', 'to', 'each', 'other', '.'] 

 UPOS tags are: 
>> [('At', 'ADP'), ('the', 'DET'), ('pixel', 'NOUN'), ('level', 'NOUN'), (',', 'PUNCT'), ('images', 'NOUN'), ('of', 'ADP'), ('two', 'NUM'), ('Samoyeds', 'PROPN'), ('in', 'ADP'), ('different', 'ADJ'), ('poses', 'NOUN'), ('and', 'CCONJ'), ('in', 'ADP'), ('different', 'ADJ'), ('environments', 'NOUN'), ('may', 'AUX'), ('be', 'AUX'), ('very', 'ADV'), ('different', 'ADJ'), ('from', 'ADP'), ('each', 'DET'), ('other', 'ADJ'), (',', 'PUNCT'), ('whereas', 'SCONJ'), ('two', 'NUM'), ('images', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('Samoyed', 'PROPN'), ('and', 'CCONJ'), ('a', 'DET'), ('wolf', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('same', 'ADJ'), ('position', 'NOUN'), ('and', 'CCONJ'), ('on', 'ADP'), ('similar', 'ADJ'), ('backgrounds', 'NOUN'), ('may', 'AUX'), ('be', 'AUX'), ('very', 'ADV'), ('similar', 'ADJ'), ('to', 'ADP'), ('each', 'DET'), ('other', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('At', 'IN'), ('the', 'DT'), ('pixel', 'NN'), ('level', 'NN'), (',', ','), ('images', 'NNS'), ('of', 'IN'), ('two', 'CD'), ('Samoyeds', 'NNPS'), ('in', 'IN'), ('different', 'JJ'), ('poses', 'NNS'), ('and', 'CC'), ('in', 'IN'), ('different', 'JJ'), ('environments', 'NNS'), ('may', 'MD'), ('be', 'VB'), ('very', 'RB'), ('different', 'JJ'), ('from', 'IN'), ('each', 'DT'), ('other', 'JJ'), (',', ','), ('whereas', 'IN'), ('two', 'CD'), ('images', 'NNS'), ('of', 'IN'), ('a', 'DT'), ('Samoyed', 'NNP'), ('and', 'CC'), ('a', 'DT'), ('wolf', 'NN'), ('in', 'IN'), ('the', 'DT'), ('same', 'JJ'), ('position', 'NN'), ('and', 'CC'), ('on', 'IN'), ('similar', 'JJ'), ('backgrounds', 'NNS'), ('may', 'MD'), ('be', 'VB'), ('very', 'RB'), ('similar', 'JJ'), ('to', 'IN'), ('each', 'DT'), ('other', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('At', 'at'), ('the', 'the'), ('pixel', 'pixel'), ('level', 'level'), (',', ','), ('images', 'image'), ('of', 'of'), ('two', 'two'), ('Samoyeds', 'Samoyed'), ('in', 'in'), ('different', 'different'), ('poses', 'pose'), ('and', 'and'), ('in', 'in'), ('different', 'different'), ('environments', 'environment'), ('may', 'may'), ('be', 'be'), ('very', 'very'), ('different', 'different'), ('from', 'from'), ('each', 'each'), ('other', 'other'), (',', ','), ('whereas', 'whereas'), ('two', 'two'), ('images', 'image'), ('of', 'of'), ('a', 'a'), ('Samoyed', 'Samoyed'), ('and', 'and'), ('a', 'a'), ('wolf', 'wolf'), ('in', 'in'), ('the', 'the'), ('same', 'same'), ('position', 'position'), ('and', 'and'), ('on', 'on'), ('similar', 'similar'), ('backgrounds', 'background'), ('may', 'may'), ('be', 'be'), ('very', 'very'), ('similar', 'similar'), ('to', 'to'), ('each', 'each'), ('other', 'other'), ('.', '.')] 

 Dependency tags are: 
>> [(('At', 'level'), 'case'), (('the', 'level'), 'det'), (('pixel', 'level'), 'compound'), (('level', 'different'), 'obl'), ((',', 'different'), 'punct'), (('images', 'different'), 'nsubj'), (('of', 'Samoyeds'), 'case'), (('two', 'Samoyeds'), 'nummod'), (('Samoyeds', 'images'), 'nmod'), (('in', 'poses'), 'case'), (('different', 'poses'), 'amod'), (('poses', 'Samoyeds'), 'nmod'), (('and', 'environments'), 'cc'), (('in', 'environments'), 'case'), (('different', 'environments'), 'amod'), (('environments', 'poses'), 'conj'), (('may', 'different'), 'aux'), (('be', 'different'), 'cop'), (('very', 'different'), 'advmod'), (('different', 'root'), 'root'), (('from', 'other'), 'case'), (('each', 'other'), 'det'), (('other', 'different'), 'obl'), ((',', 'similar'), 'punct'), (('whereas', 'similar'), 'mark'), (('two', 'images'), 'nummod'), (('images', 'similar'), 'nsubj'), (('of', 'Samoyed'), 'case'), (('a', 'Samoyed'), 'det'), (('Samoyed', 'images'), 'nmod'), (('and', 'wolf'), 'cc'), (('a', 'wolf'), 'det'), (('wolf', 'images'), 'conj'), (('in', 'position'), 'case'), (('the', 'position'), 'det'), (('same', 'position'), 'amod'), (('position', 'wolf'), 'nmod'), (('and', 'backgrounds'), 'cc'), (('on', 'backgrounds'), 'case'), (('similar', 'backgrounds'), 'amod'), (('backgrounds', 'position'), 'conj'), (('may', 'similar'), 'aux'), (('be', 'similar'), 'cop'), (('very', 'similar'), 'advmod'), (('similar', 'different'), 'conj'), (('to', 'other'), 'case'), (('each', 'other'), 'det'), (('other', 'similar'), 'obl'), (('.', 'different'), 'punct')]

 Named Entites are: 
>> [('two', 'CARDINAL'), ('Samoyeds', 'NORP'), ('two', 'CARDINAL'), ('Samoyed', 'NORP')]

------------------- Sentence 5 -------------------

 A linear classifier, or any other ‘shallow’ classifier operating on 

Tokens are: 
>> ['A', 'linear', 'classifier', ',', 'or', 'any', 'other', '‘', 'shallow', '’', 'classifier', 'operating', 'on'] 

 UPOS tags are: 
>> [('A', 'DET'), ('linear', 'ADJ'), ('classifier', 'NOUN'), (',', 'PUNCT'), ('or', 'CCONJ'), ('any', 'DET'), ('other', 'ADJ'), ('‘', 'PUNCT'), ('shallow', 'ADJ'), ('’', 'PUNCT'), ('classifier', 'NOUN'), ('operating', 'NOUN'), ('on', 'ADV')] 

 XPOS tags are: 
>> [('A', 'DT'), ('linear', 'JJ'), ('classifier', 'NN'), (',', ','), ('or', 'CC'), ('any', 'DT'), ('other', 'JJ'), ('‘', '``'), ('shallow', 'JJ'), ('’', "''"), ('classifier', 'NN'), ('operating', 'NN'), ('on', 'RB')] 

 Lemmas are: 
>> [('A', 'a'), ('linear', 'linear'), ('classifier', 'classifier'), (',', ','), ('or', 'or'), ('any', 'any'), ('other', 'other'), ('‘', "'"), ('shallow', 'shallow'), ('’', "'"), ('classifier', 'classifier'), ('operating', 'operating'), ('on', 'on')] 

 Dependency tags are: 
>> [(('A', 'classifier'), 'det'), (('linear', 'classifier'), 'amod'), (('classifier', 'root'), 'root'), ((',', 'operating'), 'punct'), (('or', 'operating'), 'cc'), (('any', 'operating'), 'det'), (('other', 'operating'), 'amod'), (('‘', 'classifier'), 'punct'), (('shallow', 'classifier'), 'amod'), (('’', 'classifier'), 'punct'), (('classifier', 'operating'), 'compound'), (('operating', 'classifier'), 'conj'), (('on', 'operating'), 'advmod')]

 Named Entites are: 
>> []

================================ Paragraph 20 =================================

Figure 1 | Multilayer neural networks and backpropagation. a, A multi- layer neural network (shown by the connected dots) can distort the input  space to make the classes of data (examples of which are on the red and  blue lines) linearly separable. Note how a regular grid (shown on the left)  in input space is also transformed (shown in the middle panel) by hidden  units. This is an illustrative example with only two input units, two hidden  units and one output unit, but the networks used for object recognition  or natural language processing contain tens or hundreds of thousands of  units. Reproduced with permission from C. Olah (http://colah.github.io/).  b, The chain rule of derivatives tells us how two small effects (that of a small  change of x on y, and that of y on z) are composed. A small change Δx in  x gets transformed first into a small change Δy in y by getting multiplied  by ∂y/∂x (that is, the definition of partial derivative). Similarly, the change  Δy creates a change Δz in z. Substituting one equation into the other  gives the chain rule of derivatives — how Δx gets turned into Δz through  multiplication by the product of ∂y/∂x and ∂z/∂x. It also works when x,  y and z are vectors (and the derivatives are Jacobian matrices). c, The  equations used for computing the forward pass in a neural net with two  hidden layers and one output layer, each constituting a module through  


------------------- Sentence 1 -------------------

 Figure 

Tokens are: 
>> ['Figure'] 

 UPOS tags are: 
>> [('Figure', 'PROPN')] 

 XPOS tags are: 
>> [('Figure', 'NNP')] 

 Lemmas are: 
>> [('Figure', 'Figure')] 

 Dependency tags are: 
>> [(('Figure', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 1 | Multilayer neural networks and backpropagation. 

Tokens are: 
>> ['1', '|', 'Multilayer', 'neural', 'networks', 'and', 'backpropagation', '.'] 

 UPOS tags are: 
>> [('1', 'NUM'), ('|', 'PUNCT'), ('Multilayer', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('and', 'CCONJ'), ('backpropagation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('1', 'CD'), ('|', 'NFP'), ('Multilayer', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), ('and', 'CC'), ('backpropagation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('1', '1'), ('|', '|'), ('Multilayer', 'multilayer'), ('neural', 'neural'), ('networks', 'network'), ('and', 'and'), ('backpropagation', 'backpropagation'), ('.', '.')] 

 Dependency tags are: 
>> [(('1', 'networks'), 'nummod'), (('|', '1'), 'punct'), (('Multilayer', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'root'), 'root'), (('and', 'backpropagation'), 'cc'), (('backpropagation', 'networks'), 'conj'), (('.', 'networks'), 'punct')]

 Named Entites are: 
>> [('1', 'CARDINAL')]

------------------- Sentence 3 -------------------

 a, A multi- layer neural network (shown by the connected dots) can distort the input  space to make the classes of data (examples of which are on the red and  blue lines) linearly separable. 

Tokens are: 
>> ['a', ',', 'A', 'multi-', 'layer', 'neural', 'network', '(', 'shown', 'by', 'the', 'connected', 'dots', ')', 'can', 'distort', 'the', 'input', 'space', 'to', 'make', 'the', 'classes', 'of', 'data', '(', 'examples', 'of', 'which', 'are', 'on', 'the', 'red', 'and', 'blue', 'lines', ')', 'linearly', 'separable', '.'] 

 UPOS tags are: 
>> [('a', 'DET'), (',', 'PUNCT'), ('A', 'DET'), ('multi-', 'ADJ'), ('layer', 'NOUN'), ('neural', 'ADJ'), ('network', 'NOUN'), ('(', 'PUNCT'), ('shown', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('connected', 'VERB'), ('dots', 'NOUN'), (')', 'PUNCT'), ('can', 'AUX'), ('distort', 'VERB'), ('the', 'DET'), ('input', 'NOUN'), ('space', 'NOUN'), ('to', 'PART'), ('make', 'VERB'), ('the', 'DET'), ('classes', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), ('(', 'PUNCT'), ('examples', 'NOUN'), ('of', 'ADP'), ('which', 'PRON'), ('are', 'AUX'), ('on', 'ADP'), ('the', 'DET'), ('red', 'ADJ'), ('and', 'CCONJ'), ('blue', 'ADJ'), ('lines', 'NOUN'), (')', 'PUNCT'), ('linearly', 'ADV'), ('separable', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('a', 'DT'), (',', ','), ('A', 'DT'), ('multi-', 'JJ'), ('layer', 'NN'), ('neural', 'JJ'), ('network', 'NN'), ('(', '-LRB-'), ('shown', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('connected', 'VBN'), ('dots', 'NNS'), (')', '-RRB-'), ('can', 'MD'), ('distort', 'VB'), ('the', 'DT'), ('input', 'NN'), ('space', 'NN'), ('to', 'TO'), ('make', 'VB'), ('the', 'DT'), ('classes', 'NNS'), ('of', 'IN'), ('data', 'NNS'), ('(', '-LRB-'), ('examples', 'NNS'), ('of', 'IN'), ('which', 'WDT'), ('are', 'VBP'), ('on', 'IN'), ('the', 'DT'), ('red', 'JJ'), ('and', 'CC'), ('blue', 'JJ'), ('lines', 'NNS'), (')', '-RRB-'), ('linearly', 'RB'), ('separable', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('a', 'a'), (',', ','), ('A', 'a'), ('multi-', 'multi-'), ('layer', 'layer'), ('neural', 'neural'), ('network', 'network'), ('(', '('), ('shown', 'show'), ('by', 'by'), ('the', 'the'), ('connected', 'connect'), ('dots', 'dot'), (')', ')'), ('can', 'can'), ('distort', 'distort'), ('the', 'the'), ('input', 'input'), ('space', 'space'), ('to', 'to'), ('make', 'make'), ('the', 'the'), ('classes', 'class'), ('of', 'of'), ('data', 'datum'), ('(', '('), ('examples', 'example'), ('of', 'of'), ('which', 'which'), ('are', 'be'), ('on', 'on'), ('the', 'the'), ('red', 'red'), ('and', 'and'), ('blue', 'blue'), ('lines', 'line'), (')', ')'), ('linearly', 'linearly'), ('separable', 'separable'), ('.', '.')] 

 Dependency tags are: 
>> [(('a', 'network'), 'det'), ((',', 'distort'), 'punct'), (('A', 'network'), 'det'), (('multi-', 'layer'), 'amod'), (('layer', 'network'), 'compound'), (('neural', 'network'), 'amod'), (('network', 'distort'), 'nsubj'), (('(', 'shown'), 'punct'), (('shown', 'network'), 'acl'), (('by', 'dots'), 'case'), (('the', 'dots'), 'det'), (('connected', 'dots'), 'amod'), (('dots', 'shown'), 'obl'), ((')', 'shown'), 'punct'), (('can', 'distort'), 'aux'), (('distort', 'root'), 'root'), (('the', 'space'), 'det'), (('input', 'space'), 'compound'), (('space', 'distort'), 'obj'), (('to', 'make'), 'mark'), (('make', 'distort'), 'advcl'), (('the', 'classes'), 'det'), (('classes', 'make'), 'obj'), (('of', 'data'), 'case'), (('data', 'classes'), 'nmod'), (('(', 'separable'), 'punct'), (('examples', 'separable'), 'nsubj'), (('of', 'which'), 'case'), (('which', 'examples'), 'nmod'), (('are', 'lines'), 'cop'), (('on', 'lines'), 'case'), (('the', 'lines'), 'det'), (('red', 'lines'), 'amod'), (('and', 'blue'), 'cc'), (('blue', 'red'), 'conj'), (('lines', 'data'), 'acl:relcl'), ((')', 'lines'), 'punct'), (('linearly', 'separable'), 'advmod'), (('separable', 'lines'), 'amod'), (('.', 'distort'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Note how a regular grid (shown on the left)  in input space is also transformed (shown in the middle panel) by hidden  units. 

Tokens are: 
>> ['Note', 'how', 'a', 'regular', 'grid', '(', 'shown', 'on', 'the', 'left', ')', 'in', 'input', 'space', 'is', 'also', 'transformed', '(', 'shown', 'in', 'the', 'middle', 'panel', ')', 'by', 'hidden', 'units', '.'] 

 UPOS tags are: 
>> [('Note', 'VERB'), ('how', 'SCONJ'), ('a', 'DET'), ('regular', 'ADJ'), ('grid', 'NOUN'), ('(', 'PUNCT'), ('shown', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('left', 'NOUN'), (')', 'PUNCT'), ('in', 'ADP'), ('input', 'NOUN'), ('space', 'NOUN'), ('is', 'AUX'), ('also', 'ADV'), ('transformed', 'VERB'), ('(', 'PUNCT'), ('shown', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('middle', 'ADJ'), ('panel', 'NOUN'), (')', 'PUNCT'), ('by', 'ADP'), ('hidden', 'VERB'), ('units', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Note', 'VB'), ('how', 'WRB'), ('a', 'DT'), ('regular', 'JJ'), ('grid', 'NN'), ('(', '-LRB-'), ('shown', 'VBN'), ('on', 'IN'), ('the', 'DT'), ('left', 'NN'), (')', '-RRB-'), ('in', 'IN'), ('input', 'NN'), ('space', 'NN'), ('is', 'VBZ'), ('also', 'RB'), ('transformed', 'VBN'), ('(', '-LRB-'), ('shown', 'VBN'), ('in', 'IN'), ('the', 'DT'), ('middle', 'JJ'), ('panel', 'NN'), (')', '-RRB-'), ('by', 'IN'), ('hidden', 'VBN'), ('units', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Note', 'note'), ('how', 'how'), ('a', 'a'), ('regular', 'regular'), ('grid', 'grid'), ('(', '('), ('shown', 'show'), ('on', 'on'), ('the', 'the'), ('left', 'left'), (')', ')'), ('in', 'in'), ('input', 'input'), ('space', 'space'), ('is', 'be'), ('also', 'also'), ('transformed', 'transform'), ('(', '('), ('shown', 'show'), ('in', 'in'), ('the', 'the'), ('middle', 'middle'), ('panel', 'panel'), (')', ')'), ('by', 'by'), ('hidden', 'hide'), ('units', 'unit'), ('.', '.')] 

 Dependency tags are: 
>> [(('Note', 'root'), 'root'), (('how', 'transformed'), 'mark'), (('a', 'grid'), 'det'), (('regular', 'grid'), 'amod'), (('grid', 'transformed'), 'nsubj:pass'), (('(', 'shown'), 'punct'), (('shown', 'grid'), 'acl'), (('on', 'left'), 'case'), (('the', 'left'), 'det'), (('left', 'shown'), 'obl'), ((')', 'shown'), 'punct'), (('in', 'space'), 'case'), (('input', 'space'), 'compound'), (('space', 'shown'), 'obl'), (('is', 'transformed'), 'aux:pass'), (('also', 'transformed'), 'advmod'), (('transformed', 'Note'), 'ccomp'), (('(', 'shown'), 'punct'), (('shown', 'transformed'), 'advcl'), (('in', 'panel'), 'case'), (('the', 'panel'), 'det'), (('middle', 'panel'), 'amod'), (('panel', 'shown'), 'obl'), ((')', 'shown'), 'punct'), (('by', 'units'), 'case'), (('hidden', 'units'), 'amod'), (('units', 'transformed'), 'obl'), (('.', 'Note'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 This is an illustrative example with only two input units, two hidden  units and one output unit, but the networks used for object recognition  or natural language processing contain tens or hundreds of thousands of  units. 

Tokens are: 
>> ['This', 'is', 'an', 'illustrative', 'example', 'with', 'only', 'two', 'input', 'units', ',', 'two', 'hidden', 'units', 'and', 'one', 'output', 'unit', ',', 'but', 'the', 'networks', 'used', 'for', 'object', 'recognition', 'or', 'natural', 'language', 'processing', 'contain', 'tens', 'or', 'hundreds', 'of', 'thousands', 'of', 'units', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('is', 'AUX'), ('an', 'DET'), ('illustrative', 'ADJ'), ('example', 'NOUN'), ('with', 'ADP'), ('only', 'ADV'), ('two', 'NUM'), ('input', 'NOUN'), ('units', 'NOUN'), (',', 'PUNCT'), ('two', 'NUM'), ('hidden', 'VERB'), ('units', 'NOUN'), ('and', 'CCONJ'), ('one', 'NUM'), ('output', 'NOUN'), ('unit', 'NOUN'), (',', 'PUNCT'), ('but', 'CCONJ'), ('the', 'DET'), ('networks', 'NOUN'), ('used', 'VERB'), ('for', 'ADP'), ('object', 'NOUN'), ('recognition', 'NOUN'), ('or', 'CCONJ'), ('natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), ('contain', 'VERB'), ('tens', 'NOUN'), ('or', 'CCONJ'), ('hundreds', 'NOUN'), ('of', 'ADP'), ('thousands', 'NOUN'), ('of', 'ADP'), ('units', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('is', 'VBZ'), ('an', 'DT'), ('illustrative', 'JJ'), ('example', 'NN'), ('with', 'IN'), ('only', 'RB'), ('two', 'CD'), ('input', 'NN'), ('units', 'NNS'), (',', ','), ('two', 'CD'), ('hidden', 'VBN'), ('units', 'NNS'), ('and', 'CC'), ('one', 'CD'), ('output', 'NN'), ('unit', 'NN'), (',', ','), ('but', 'CC'), ('the', 'DT'), ('networks', 'NNS'), ('used', 'VBN'), ('for', 'IN'), ('object', 'NN'), ('recognition', 'NN'), ('or', 'CC'), ('natural', 'JJ'), ('language', 'NN'), ('processing', 'NN'), ('contain', 'VBP'), ('tens', 'NNS'), ('or', 'CC'), ('hundreds', 'NNS'), ('of', 'IN'), ('thousands', 'NNS'), ('of', 'IN'), ('units', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('is', 'be'), ('an', 'a'), ('illustrative', 'illustrative'), ('example', 'example'), ('with', 'with'), ('only', 'only'), ('two', 'two'), ('input', 'input'), ('units', 'unit'), (',', ','), ('two', 'two'), ('hidden', 'hide'), ('units', 'unit'), ('and', 'and'), ('one', 'one'), ('output', 'output'), ('unit', 'unit'), (',', ','), ('but', 'but'), ('the', 'the'), ('networks', 'network'), ('used', 'use'), ('for', 'for'), ('object', 'object'), ('recognition', 'recognition'), ('or', 'or'), ('natural', 'natural'), ('language', 'language'), ('processing', 'processing'), ('contain', 'contain'), ('tens', 'ten'), ('or', 'or'), ('hundreds', 'hundred'), ('of', 'of'), ('thousands', 'thousand'), ('of', 'of'), ('units', 'unit'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'example'), 'nsubj'), (('is', 'example'), 'cop'), (('an', 'example'), 'det'), (('illustrative', 'example'), 'amod'), (('example', 'root'), 'root'), (('with', 'units'), 'case'), (('only', 'units'), 'advmod'), (('two', 'units'), 'nummod'), (('input', 'units'), 'compound'), (('units', 'example'), 'nmod'), ((',', 'units'), 'punct'), (('two', 'units'), 'nummod'), (('hidden', 'units'), 'amod'), (('units', 'units'), 'conj'), (('and', 'unit'), 'cc'), (('one', 'unit'), 'nummod'), (('output', 'unit'), 'compound'), (('unit', 'units'), 'conj'), ((',', 'contain'), 'punct'), (('but', 'contain'), 'cc'), (('the', 'networks'), 'det'), (('networks', 'contain'), 'nsubj'), (('used', 'networks'), 'acl'), (('for', 'recognition'), 'case'), (('object', 'recognition'), 'compound'), (('recognition', 'used'), 'obl'), (('or', 'processing'), 'cc'), (('natural', 'processing'), 'amod'), (('language', 'processing'), 'compound'), (('processing', 'recognition'), 'conj'), (('contain', 'example'), 'conj'), (('tens', 'contain'), 'obj'), (('or', 'hundreds'), 'cc'), (('hundreds', 'tens'), 'conj'), (('of', 'thousands'), 'case'), (('thousands', 'hundreds'), 'nmod'), (('of', 'units'), 'case'), (('units', 'thousands'), 'nmod'), (('.', 'example'), 'punct')]

 Named Entites are: 
>> [('two', 'CARDINAL'), ('two', 'CARDINAL'), ('one', 'CARDINAL'), ('tens or hundreds of thousands', 'CARDINAL')]

------------------- Sentence 6 -------------------

 Reproduced with permission from C. Olah (http://colah.github.io/). 

Tokens are: 
>> ['Reproduced', 'with', 'permission', 'from', 'C.', 'Olah', '(', 'http://colah.github.io/).'] 

 UPOS tags are: 
>> [('Reproduced', 'VERB'), ('with', 'ADP'), ('permission', 'NOUN'), ('from', 'ADP'), ('C.', 'PROPN'), ('Olah', 'PROPN'), ('(', 'PUNCT'), ('http://colah.github.io/).', 'X')] 

 XPOS tags are: 
>> [('Reproduced', 'VBN'), ('with', 'IN'), ('permission', 'NN'), ('from', 'IN'), ('C.', 'NNP'), ('Olah', 'NNP'), ('(', '-LRB-'), ('http://colah.github.io/).', 'ADD')] 

 Lemmas are: 
>> [('Reproduced', 'reproduce'), ('with', 'with'), ('permission', 'permission'), ('from', 'from'), ('C.', 'C.'), ('Olah', 'Olah'), ('(', '('), ('http://colah.github.io/).', 'http://colah.github.io/).')] 

 Dependency tags are: 
>> [(('Reproduced', 'root'), 'root'), (('with', 'permission'), 'case'), (('permission', 'Reproduced'), 'obl'), (('from', 'C.'), 'case'), (('C.', 'permission'), 'nmod'), (('Olah', 'C.'), 'flat'), (('(', 'http://colah.github.io/).'), 'punct'), (('http://colah.github.io/).', 'C.'), 'appos')]

 Named Entites are: 
>> [('C. Olah', 'PERSON')]

------------------- Sentence 7 -------------------

 b, 

Tokens are: 
>> ['b', ','] 

 UPOS tags are: 
>> [('b', 'PROPN'), (',', 'PUNCT')] 

 XPOS tags are: 
>> [('b', 'NNP'), (',', ',')] 

 Lemmas are: 
>> [('b', 'b'), (',', ',')] 

 Dependency tags are: 
>> [(('b', 'root'), 'root'), ((',', 'b'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 8 -------------------

 The chain rule of derivatives tells us how two small effects (that of a small  change of x on y, and that of y on z) are composed. 

Tokens are: 
>> ['The', 'chain', 'rule', 'of', 'derivatives', 'tells', 'us', 'how', 'two', 'small', 'effects', '(', 'that', 'of', 'a', 'small', 'change', 'of', 'x', 'on', 'y', ',', 'and', 'that', 'of', 'y', 'on', 'z', ')', 'are', 'composed', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('chain', 'NOUN'), ('rule', 'NOUN'), ('of', 'ADP'), ('derivatives', 'NOUN'), ('tells', 'VERB'), ('us', 'PRON'), ('how', 'SCONJ'), ('two', 'NUM'), ('small', 'ADJ'), ('effects', 'NOUN'), ('(', 'PUNCT'), ('that', 'PRON'), ('of', 'ADP'), ('a', 'DET'), ('small', 'ADJ'), ('change', 'NOUN'), ('of', 'ADP'), ('x', 'NOUN'), ('on', 'ADP'), ('y', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('that', 'PRON'), ('of', 'ADP'), ('y', 'NOUN'), ('on', 'ADP'), ('z', 'NOUN'), (')', 'PUNCT'), ('are', 'AUX'), ('composed', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('chain', 'NN'), ('rule', 'NN'), ('of', 'IN'), ('derivatives', 'NNS'), ('tells', 'VBZ'), ('us', 'PRP'), ('how', 'WRB'), ('two', 'CD'), ('small', 'JJ'), ('effects', 'NNS'), ('(', '-LRB-'), ('that', 'DT'), ('of', 'IN'), ('a', 'DT'), ('small', 'JJ'), ('change', 'NN'), ('of', 'IN'), ('x', 'NN'), ('on', 'IN'), ('y', 'NN'), (',', ','), ('and', 'CC'), ('that', 'DT'), ('of', 'IN'), ('y', 'NN'), ('on', 'IN'), ('z', 'NN'), (')', '-RRB-'), ('are', 'VBP'), ('composed', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('chain', 'chain'), ('rule', 'rule'), ('of', 'of'), ('derivatives', 'derivative'), ('tells', 'tell'), ('us', 'we'), ('how', 'how'), ('two', 'two'), ('small', 'small'), ('effects', 'effect'), ('(', '('), ('that', 'that'), ('of', 'of'), ('a', 'a'), ('small', 'small'), ('change', 'change'), ('of', 'of'), ('x', 'x'), ('on', 'on'), ('y', 'y'), (',', ','), ('and', 'and'), ('that', 'that'), ('of', 'of'), ('y', 'y'), ('on', 'on'), ('z', 'z'), (')', ')'), ('are', 'be'), ('composed', 'compose'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'rule'), 'det'), (('chain', 'rule'), 'compound'), (('rule', 'tells'), 'nsubj'), (('of', 'derivatives'), 'case'), (('derivatives', 'rule'), 'nmod'), (('tells', 'root'), 'root'), (('us', 'tells'), 'obj'), (('how', 'two'), 'mark'), (('two', 'effects'), 'nummod'), (('small', 'effects'), 'amod'), (('effects', 'composed'), 'nsubj:pass'), (('(', 'that'), 'punct'), (('that', 'effects'), 'appos'), (('of', 'change'), 'case'), (('a', 'change'), 'det'), (('small', 'change'), 'amod'), (('change', 'that'), 'nmod'), (('of', 'x'), 'case'), (('x', 'change'), 'nmod'), (('on', 'y'), 'case'), (('y', 'x'), 'nmod'), ((',', 'that'), 'punct'), (('and', 'that'), 'cc'), (('that', 'composed'), 'nsubj:pass'), (('of', 'y'), 'case'), (('y', 'that'), 'nmod'), (('on', 'z'), 'case'), (('z', 'that'), 'nmod'), ((')', 'that'), 'punct'), (('are', 'composed'), 'aux:pass'), (('composed', 'tells'), 'ccomp'), (('.', 'tells'), 'punct')]

 Named Entites are: 
>> [('two', 'CARDINAL')]

------------------- Sentence 9 -------------------

 A small change 

Tokens are: 
>> ['A', 'small', 'change'] 

 UPOS tags are: 
>> [('A', 'DET'), ('small', 'ADJ'), ('change', 'NOUN')] 

 XPOS tags are: 
>> [('A', 'DT'), ('small', 'JJ'), ('change', 'NN')] 

 Lemmas are: 
>> [('A', 'a'), ('small', 'small'), ('change', 'change')] 

 Dependency tags are: 
>> [(('A', 'change'), 'det'), (('small', 'change'), 'amod'), (('change', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 10 -------------------

 Δx in  x gets transformed first into a small change 

Tokens are: 
>> ['Δx', 'in', 'x', 'gets', 'transformed', 'first', 'into', 'a', 'small', 'change'] 

 UPOS tags are: 
>> [('Δx', 'NOUN'), ('in', 'ADP'), ('x', 'PROPN'), ('gets', 'AUX'), ('transformed', 'VERB'), ('first', 'ADV'), ('into', 'ADP'), ('a', 'DET'), ('small', 'ADJ'), ('change', 'NOUN')] 

 XPOS tags are: 
>> [('Δx', 'NN'), ('in', 'IN'), ('x', 'NNP'), ('gets', 'VBZ'), ('transformed', 'VBN'), ('first', 'RB'), ('into', 'IN'), ('a', 'DT'), ('small', 'JJ'), ('change', 'NN')] 

 Lemmas are: 
>> [('Δx', 'δx'), ('in', 'in'), ('x', 'x'), ('gets', 'get'), ('transformed', 'transform'), ('first', 'first'), ('into', 'into'), ('a', 'a'), ('small', 'small'), ('change', 'change')] 

 Dependency tags are: 
>> [(('Δx', 'transformed'), 'nsubj:pass'), (('in', 'x'), 'case'), (('x', 'Δx'), 'nmod'), (('gets', 'transformed'), 'aux:pass'), (('transformed', 'root'), 'root'), (('first', 'transformed'), 'advmod'), (('into', 'change'), 'case'), (('a', 'change'), 'det'), (('small', 'change'), 'amod'), (('change', 'transformed'), 'obl')]

 Named Entites are: 
>> [('first', 'ORDINAL')]

------------------- Sentence 11 -------------------

 Δy in y by getting multiplied  by ∂y/∂x (that is, the definition of partial derivative). 

Tokens are: 
>> ['Δy', 'in', 'y', 'by', 'getting', 'multiplied', 'by', '∂y', '/', '∂x', '(', 'that', 'is', ',', 'the', 'definition', 'of', 'partial', 'derivative', ')', '.'] 

 UPOS tags are: 
>> [('Δy', 'VERB'), ('in', 'ADP'), ('y', 'NOUN'), ('by', 'SCONJ'), ('getting', 'AUX'), ('multiplied', 'VERB'), ('by', 'ADP'), ('∂y', 'NOUN'), ('/', 'SYM'), ('∂x', 'NOUN'), ('(', 'PUNCT'), ('that', 'PRON'), ('is', 'AUX'), (',', 'PUNCT'), ('the', 'DET'), ('definition', 'NOUN'), ('of', 'ADP'), ('partial', 'ADJ'), ('derivative', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Δy', 'VB'), ('in', 'IN'), ('y', 'NN'), ('by', 'IN'), ('getting', 'VBG'), ('multiplied', 'VBN'), ('by', 'IN'), ('∂y', 'NN'), ('/', ','), ('∂x', 'NN'), ('(', '-LRB-'), ('that', 'DT'), ('is', 'VBZ'), (',', ','), ('the', 'DT'), ('definition', 'NN'), ('of', 'IN'), ('partial', 'JJ'), ('derivative', 'NN'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Δy', 'ry'), ('in', 'in'), ('y', 'y'), ('by', 'by'), ('getting', 'get'), ('multiplied', 'multiply'), ('by', 'by'), ('∂y', '∂y'), ('/', '/'), ('∂x', '∂x'), ('(', '('), ('that', 'that'), ('is', 'be'), (',', ','), ('the', 'the'), ('definition', 'definition'), ('of', 'of'), ('partial', 'partial'), ('derivative', 'derivative'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Δy', 'root'), 'root'), (('in', 'y'), 'case'), (('y', 'Δy'), 'obl'), (('by', 'multiplied'), 'mark'), (('getting', 'multiplied'), 'aux:pass'), (('multiplied', 'Δy'), 'advcl'), (('by', '∂y'), 'case'), (('∂y', 'multiplied'), 'obl'), (('/', '∂x'), 'cc'), (('∂x', '∂y'), 'conj'), (('(', 'definition'), 'punct'), (('that', 'definition'), 'nsubj'), (('is', 'definition'), 'cop'), ((',', 'definition'), 'punct'), (('the', 'definition'), 'det'), (('definition', 'multiplied'), 'parataxis'), (('of', 'derivative'), 'case'), (('partial', 'derivative'), 'amod'), (('derivative', 'definition'), 'nmod'), ((')', 'definition'), 'punct'), (('.', 'Δy'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 12 -------------------

 Similarly, the change 

Tokens are: 
>> ['Similarly', ',', 'the', 'change'] 

 UPOS tags are: 
>> [('Similarly', 'ADV'), (',', 'PUNCT'), ('the', 'DET'), ('change', 'NOUN')] 

 XPOS tags are: 
>> [('Similarly', 'RB'), (',', ','), ('the', 'DT'), ('change', 'NN')] 

 Lemmas are: 
>> [('Similarly', 'similarly'), (',', ','), ('the', 'the'), ('change', 'change')] 

 Dependency tags are: 
>> [(('Similarly', 'change'), 'advmod'), ((',', 'Similarly'), 'punct'), (('the', 'change'), 'det'), (('change', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 13 -------------------

 Δy creates a change Δz in z. 

Tokens are: 
>> ['Δy', 'creates', 'a', 'change', 'Δz', 'in', 'z.'] 

 UPOS tags are: 
>> [('Δy', 'PROPN'), ('creates', 'VERB'), ('a', 'DET'), ('change', 'NOUN'), ('Δz', 'NOUN'), ('in', 'ADP'), ('z.', 'PROPN')] 

 XPOS tags are: 
>> [('Δy', 'NNP'), ('creates', 'VBZ'), ('a', 'DT'), ('change', 'NN'), ('Δz', 'NN'), ('in', 'IN'), ('z.', 'NNP')] 

 Lemmas are: 
>> [('Δy', 'Δy'), ('creates', 'create'), ('a', 'a'), ('change', 'change'), ('Δz', 'Δz'), ('in', 'in'), ('z.', 'z.')] 

 Dependency tags are: 
>> [(('Δy', 'creates'), 'nsubj'), (('creates', 'root'), 'root'), (('a', 'Δz'), 'det'), (('change', 'Δz'), 'compound'), (('Δz', 'creates'), 'obj'), (('in', 'z.'), 'case'), (('z.', 'Δz'), 'nmod')]

 Named Entites are: 
>> []

------------------- Sentence 14 -------------------

 Substituting one equation into the other  gives the chain rule of derivatives — how 

Tokens are: 
>> ['Substituting', 'one', 'equation', 'into', 'the', 'other', 'gives', 'the', 'chain', 'rule', 'of', 'derivatives', '—', 'how'] 

 UPOS tags are: 
>> [('Substituting', 'VERB'), ('one', 'NUM'), ('equation', 'NOUN'), ('into', 'ADP'), ('the', 'DET'), ('other', 'ADJ'), ('gives', 'VERB'), ('the', 'DET'), ('chain', 'NOUN'), ('rule', 'NOUN'), ('of', 'ADP'), ('derivatives', 'NOUN'), ('—', 'PUNCT'), ('how', 'SCONJ')] 

 XPOS tags are: 
>> [('Substituting', 'VBG'), ('one', 'CD'), ('equation', 'NN'), ('into', 'IN'), ('the', 'DT'), ('other', 'JJ'), ('gives', 'VBZ'), ('the', 'DT'), ('chain', 'NN'), ('rule', 'NN'), ('of', 'IN'), ('derivatives', 'NNS'), ('—', ':'), ('how', 'WRB')] 

 Lemmas are: 
>> [('Substituting', 'substitute'), ('one', 'one'), ('equation', 'equation'), ('into', 'into'), ('the', 'the'), ('other', 'other'), ('gives', 'give'), ('the', 'the'), ('chain', 'chain'), ('rule', 'rule'), ('of', 'of'), ('derivatives', 'derivative'), ('—', '—'), ('how', 'how')] 

 Dependency tags are: 
>> [(('Substituting', 'gives'), 'csubj'), (('one', 'equation'), 'nummod'), (('equation', 'Substituting'), 'obj'), (('into', 'other'), 'case'), (('the', 'other'), 'det'), (('other', 'equation'), 'nmod'), (('gives', 'root'), 'root'), (('the', 'rule'), 'det'), (('chain', 'rule'), 'compound'), (('rule', 'gives'), 'obj'), (('of', 'derivatives'), 'case'), (('derivatives', 'rule'), 'nmod'), (('—', 'gives'), 'punct'), (('how', 'gives'), 'advmod')]

 Named Entites are: 
>> [('one', 'CARDINAL')]

------------------- Sentence 15 -------------------

 Δx gets turned into 

Tokens are: 
>> ['Δx', 'gets', 'turned', 'into'] 

 UPOS tags are: 
>> [('Δx', 'PROPN'), ('gets', 'AUX'), ('turned', 'VERB'), ('into', 'ADP')] 

 XPOS tags are: 
>> [('Δx', 'NNP'), ('gets', 'VBZ'), ('turned', 'VBN'), ('into', 'IN')] 

 Lemmas are: 
>> [('Δx', 'Δx'), ('gets', 'get'), ('turned', 'turn'), ('into', 'into')] 

 Dependency tags are: 
>> [(('Δx', 'turned'), 'nsubj:pass'), (('gets', 'turned'), 'aux:pass'), (('turned', 'root'), 'root'), (('into', 'turned'), 'advmod')]

 Named Entites are: 
>> []

------------------- Sentence 16 -------------------

 Δz through  multiplication by the product of ∂y/∂x and ∂z/∂x. 

Tokens are: 
>> ['Δz', 'through', 'multiplication', 'by', 'the', 'product', 'of', '∂y', '/', '∂x', 'and', '∂z', '/', '∂x', '.'] 

 UPOS tags are: 
>> [('Δz', 'VERB'), ('through', 'ADP'), ('multiplication', 'NOUN'), ('by', 'ADP'), ('the', 'DET'), ('product', 'NOUN'), ('of', 'ADP'), ('∂y', 'NOUN'), ('/', 'SYM'), ('∂x', 'NOUN'), ('and', 'CCONJ'), ('∂z', 'NOUN'), ('/', 'SYM'), ('∂x', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Δz', 'VB'), ('through', 'IN'), ('multiplication', 'NN'), ('by', 'IN'), ('the', 'DT'), ('product', 'NN'), ('of', 'IN'), ('∂y', 'NN'), ('/', ','), ('∂x', 'NN'), ('and', 'CC'), ('∂z', 'NN'), ('/', ','), ('∂x', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Δz', 'man'), ('through', 'through'), ('multiplication', 'multiplication'), ('by', 'by'), ('the', 'the'), ('product', 'product'), ('of', 'of'), ('∂y', '∂y'), ('/', '/'), ('∂x', '∂x'), ('and', 'and'), ('∂z', '∂z'), ('/', '/'), ('∂x', '∂x'), ('.', '.')] 

 Dependency tags are: 
>> [(('Δz', 'root'), 'root'), (('through', 'multiplication'), 'case'), (('multiplication', 'Δz'), 'obl'), (('by', 'product'), 'case'), (('the', 'product'), 'det'), (('product', 'Δz'), 'obl'), (('of', '∂y'), 'case'), (('∂y', 'product'), 'nmod'), (('/', '∂x'), 'punct'), (('∂x', '∂y'), 'conj'), (('and', '∂x'), 'cc'), (('∂z', '∂y'), 'conj'), (('/', '∂x'), 'cc'), (('∂x', '∂y'), 'conj'), (('.', 'Δz'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 17 -------------------

 It also works when x,  y and z are vectors (and the derivatives are Jacobian matrices). 

Tokens are: 
>> ['It', 'also', 'works', 'when', 'x', ',', 'y', 'and', 'z', 'are', 'vectors', '(', 'and', 'the', 'derivatives', 'are', 'Jacobian', 'matrices', ')', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('also', 'ADV'), ('works', 'VERB'), ('when', 'SCONJ'), ('x', 'NOUN'), (',', 'PUNCT'), ('y', 'NOUN'), ('and', 'CCONJ'), ('z', 'NOUN'), ('are', 'AUX'), ('vectors', 'NOUN'), ('(', 'PUNCT'), ('and', 'CCONJ'), ('the', 'DET'), ('derivatives', 'NOUN'), ('are', 'AUX'), ('Jacobian', 'PROPN'), ('matrices', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('also', 'RB'), ('works', 'VBZ'), ('when', 'WRB'), ('x', 'NN'), (',', ','), ('y', 'NN'), ('and', 'CC'), ('z', 'NN'), ('are', 'VBP'), ('vectors', 'NNS'), ('(', '-LRB-'), ('and', 'CC'), ('the', 'DT'), ('derivatives', 'NNS'), ('are', 'VBP'), ('Jacobian', 'NNP'), ('matrices', 'NNS'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('also', 'also'), ('works', 'work'), ('when', 'when'), ('x', 'x'), (',', ','), ('y', 'y'), ('and', 'and'), ('z', 'z'), ('are', 'be'), ('vectors', 'vector'), ('(', '('), ('and', 'and'), ('the', 'the'), ('derivatives', 'derivative'), ('are', 'be'), ('Jacobian', 'Jacobian'), ('matrices', 'matrice'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'works'), 'nsubj'), (('also', 'works'), 'advmod'), (('works', 'root'), 'root'), (('when', 'vectors'), 'mark'), (('x', 'vectors'), 'nsubj'), ((',', 'y'), 'punct'), (('y', 'x'), 'conj'), (('and', 'z'), 'cc'), (('z', 'x'), 'conj'), (('are', 'vectors'), 'cop'), (('vectors', 'works'), 'advcl'), (('(', 'matrices'), 'punct'), (('and', 'matrices'), 'cc'), (('the', 'derivatives'), 'det'), (('derivatives', 'matrices'), 'nsubj'), (('are', 'matrices'), 'cop'), (('Jacobian', 'matrices'), 'compound'), (('matrices', 'vectors'), 'conj'), ((')', 'matrices'), 'punct'), (('.', 'works'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 18 -------------------

 c, 

Tokens are: 
>> ['c', ','] 

 UPOS tags are: 
>> [('c', 'PROPN'), (',', 'PUNCT')] 

 XPOS tags are: 
>> [('c', 'NNP'), (',', ',')] 

 Lemmas are: 
>> [('c', 'c'), (',', ',')] 

 Dependency tags are: 
>> [(('c', 'root'), 'root'), ((',', 'c'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 19 -------------------

 The  equations used for computing the forward pass in a neural net with two  hidden layers and one output layer, each constituting a module through 

Tokens are: 
>> ['The', 'equations', 'used', 'for', 'computing', 'the', 'forward', 'pass', 'in', 'a', 'neural', 'net', 'with', 'two', 'hidden', 'layers', 'and', 'one', 'output', 'layer', ',', 'each', 'constituting', 'a', 'module', 'through'] 

 UPOS tags are: 
>> [('The', 'DET'), ('equations', 'NOUN'), ('used', 'VERB'), ('for', 'SCONJ'), ('computing', 'VERB'), ('the', 'DET'), ('forward', 'ADJ'), ('pass', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('neural', 'ADJ'), ('net', 'NOUN'), ('with', 'ADP'), ('two', 'NUM'), ('hidden', 'VERB'), ('layers', 'NOUN'), ('and', 'CCONJ'), ('one', 'NUM'), ('output', 'NOUN'), ('layer', 'NOUN'), (',', 'PUNCT'), ('each', 'DET'), ('constituting', 'VERB'), ('a', 'DET'), ('module', 'NOUN'), ('through', 'ADV')] 

 XPOS tags are: 
>> [('The', 'DT'), ('equations', 'NNS'), ('used', 'VBN'), ('for', 'IN'), ('computing', 'VBG'), ('the', 'DT'), ('forward', 'JJ'), ('pass', 'NN'), ('in', 'IN'), ('a', 'DT'), ('neural', 'JJ'), ('net', 'NN'), ('with', 'IN'), ('two', 'CD'), ('hidden', 'VBN'), ('layers', 'NNS'), ('and', 'CC'), ('one', 'CD'), ('output', 'NN'), ('layer', 'NN'), (',', ','), ('each', 'DT'), ('constituting', 'VBG'), ('a', 'DT'), ('module', 'NN'), ('through', 'RB')] 

 Lemmas are: 
>> [('The', 'the'), ('equations', 'equation'), ('used', 'use'), ('for', 'for'), ('computing', 'computing'), ('the', 'the'), ('forward', 'forward'), ('pass', 'pass'), ('in', 'in'), ('a', 'a'), ('neural', 'neural'), ('net', 'net'), ('with', 'with'), ('two', 'two'), ('hidden', 'hide'), ('layers', 'layer'), ('and', 'and'), ('one', 'one'), ('output', 'output'), ('layer', 'layer'), (',', ','), ('each', 'each'), ('constituting', 'constitute'), ('a', 'a'), ('module', 'module'), ('through', 'through')] 

 Dependency tags are: 
>> [(('The', 'equations'), 'det'), (('equations', 'constituting'), 'nsubj'), (('used', 'equations'), 'acl'), (('for', 'computing'), 'mark'), (('computing', 'used'), 'advcl'), (('the', 'pass'), 'det'), (('forward', 'pass'), 'amod'), (('pass', 'computing'), 'obj'), (('in', 'net'), 'case'), (('a', 'net'), 'det'), (('neural', 'net'), 'amod'), (('net', 'computing'), 'obl'), (('with', 'layers'), 'case'), (('two', 'layers'), 'nummod'), (('hidden', 'layers'), 'amod'), (('layers', 'computing'), 'obl'), (('and', 'layer'), 'cc'), (('one', 'layer'), 'nummod'), (('output', 'layer'), 'compound'), (('layer', 'layers'), 'conj'), ((',', 'constituting'), 'punct'), (('each', 'constituting'), 'nsubj'), (('constituting', 'root'), 'root'), (('a', 'module'), 'det'), (('module', 'constituting'), 'obj'), (('through', 'constituting'), 'advmod')]

 Named Entites are: 
>> [('two', 'CARDINAL'), ('one', 'CARDINAL')]

================================ Paragraph 21 =================================

which one can backpropagate gradients. At each layer, we first compute  the total input z to each unit, which is a weighted sum of the outputs of  the units in the layer below. Then a non-linear function f(.) is applied to  z to get the output of the unit. For simplicity, we have omitted bias terms.  The non-linear functions used in neural networks include the rectified  linear unit (ReLU) f(z) = max(0,z), commonly used in recent years, as  well as the more conventional sigmoids, such as the hyberbolic tangent,  f(z) = (exp(z) − exp(−z))/(exp(z) + exp(−z)) and logistic function logistic,  f(z) = 1/(1 + exp(−z)). d, The equations used for computing the backward  pass. At each hidden layer we compute the error derivative with respect to  the output of each unit, which is a weighted sum of the error derivatives  with respect to the total inputs to the units in the layer above. We then  convert the error derivative with respect to the output into the error  derivative with respect to the input by multiplying it by the gradient of f(z).  At the output layer, the error derivative with respect to the output of a unit  is computed by differentiating the cost function. This gives yl − tl if the cost  function for unit l is 0.5(yl − tl) 


------------------- Sentence 1 -------------------

 which one can backpropagate gradients. 

Tokens are: 
>> ['which', 'one', 'can', 'backpropagate', 'gradients', '.'] 

 UPOS tags are: 
>> [('which', 'DET'), ('one', 'NOUN'), ('can', 'AUX'), ('backpropagate', 'VERB'), ('gradients', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('which', 'WDT'), ('one', 'NN'), ('can', 'MD'), ('backpropagate', 'VB'), ('gradients', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('which', 'which'), ('one', 'one'), ('can', 'can'), ('backpropagate', 'backpropagate'), ('gradients', 'gradient'), ('.', '.')] 

 Dependency tags are: 
>> [(('which', 'one'), 'det'), (('one', 'backpropagate'), 'nsubj'), (('can', 'backpropagate'), 'aux'), (('backpropagate', 'root'), 'root'), (('gradients', 'backpropagate'), 'obj'), (('.', 'backpropagate'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 At each layer, we first compute  the total input z to each unit, which is a weighted sum of the outputs of  the units in the layer below. 

Tokens are: 
>> ['At', 'each', 'layer', ',', 'we', 'first', 'compute', 'the', 'total', 'input', 'z', 'to', 'each', 'unit', ',', 'which', 'is', 'a', 'weighted', 'sum', 'of', 'the', 'outputs', 'of', 'the', 'units', 'in', 'the', 'layer', 'below', '.'] 

 UPOS tags are: 
>> [('At', 'ADP'), ('each', 'DET'), ('layer', 'NOUN'), (',', 'PUNCT'), ('we', 'PRON'), ('first', 'ADV'), ('compute', 'VERB'), ('the', 'DET'), ('total', 'ADJ'), ('input', 'NOUN'), ('z', 'NOUN'), ('to', 'ADP'), ('each', 'DET'), ('unit', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('is', 'AUX'), ('a', 'DET'), ('weighted', 'VERB'), ('sum', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('outputs', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('units', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('layer', 'NOUN'), ('below', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('At', 'IN'), ('each', 'DT'), ('layer', 'NN'), (',', ','), ('we', 'PRP'), ('first', 'RB'), ('compute', 'VBP'), ('the', 'DT'), ('total', 'JJ'), ('input', 'NN'), ('z', 'NN'), ('to', 'IN'), ('each', 'DT'), ('unit', 'NN'), (',', ','), ('which', 'WDT'), ('is', 'VBZ'), ('a', 'DT'), ('weighted', 'VBN'), ('sum', 'NN'), ('of', 'IN'), ('the', 'DT'), ('outputs', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('units', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('layer', 'NN'), ('below', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('At', 'at'), ('each', 'each'), ('layer', 'layer'), (',', ','), ('we', 'we'), ('first', 'first'), ('compute', 'compute'), ('the', 'the'), ('total', 'total'), ('input', 'input'), ('z', 'z'), ('to', 'to'), ('each', 'each'), ('unit', 'unit'), (',', ','), ('which', 'which'), ('is', 'be'), ('a', 'a'), ('weighted', 'weight'), ('sum', 'sum'), ('of', 'of'), ('the', 'the'), ('outputs', 'output'), ('of', 'of'), ('the', 'the'), ('units', 'unit'), ('in', 'in'), ('the', 'the'), ('layer', 'layer'), ('below', 'below'), ('.', '.')] 

 Dependency tags are: 
>> [(('At', 'layer'), 'case'), (('each', 'layer'), 'det'), (('layer', 'compute'), 'obl'), ((',', 'compute'), 'punct'), (('we', 'compute'), 'nsubj'), (('first', 'compute'), 'advmod'), (('compute', 'root'), 'root'), (('the', 'z'), 'det'), (('total', 'z'), 'amod'), (('input', 'z'), 'compound'), (('z', 'compute'), 'obj'), (('to', 'unit'), 'case'), (('each', 'unit'), 'det'), (('unit', 'compute'), 'obl'), ((',', 'sum'), 'punct'), (('which', 'sum'), 'nsubj'), (('is', 'sum'), 'cop'), (('a', 'sum'), 'det'), (('weighted', 'sum'), 'amod'), (('sum', 'z'), 'acl:relcl'), (('of', 'outputs'), 'case'), (('the', 'outputs'), 'det'), (('outputs', 'sum'), 'nmod'), (('of', 'units'), 'case'), (('the', 'units'), 'det'), (('units', 'outputs'), 'nmod'), (('in', 'layer'), 'case'), (('the', 'layer'), 'det'), (('layer', 'units'), 'nmod'), (('below', 'layer'), 'advmod'), (('.', 'compute'), 'punct')]

 Named Entites are: 
>> [('first', 'ORDINAL')]

------------------- Sentence 3 -------------------

 Then a non-linear function f(.) is applied to  z to get the output of the unit. 

Tokens are: 
>> ['Then', 'a', 'non-linear', 'function', 'f(', '.', ')', 'is', 'applied', 'to', 'z', 'to', 'get', 'the', 'output', 'of', 'the', 'unit', '.'] 

 UPOS tags are: 
>> [('Then', 'ADV'), ('a', 'DET'), ('non-linear', 'ADJ'), ('function', 'NOUN'), ('f(', 'NOUN'), ('.', 'PUNCT'), (')', 'PUNCT'), ('is', 'AUX'), ('applied', 'VERB'), ('to', 'ADP'), ('z', 'VERB'), ('to', 'PART'), ('get', 'VERB'), ('the', 'DET'), ('output', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('unit', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Then', 'RB'), ('a', 'DT'), ('non-linear', 'JJ'), ('function', 'NN'), ('f(', 'NN'), ('.', '.'), (')', '-RRB-'), ('is', 'VBZ'), ('applied', 'VBN'), ('to', 'IN'), ('z', 'VB'), ('to', 'TO'), ('get', 'VB'), ('the', 'DT'), ('output', 'NN'), ('of', 'IN'), ('the', 'DT'), ('unit', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Then', 'then'), ('a', 'a'), ('non-linear', 'non-linear'), ('function', 'function'), ('f(', 'f('), ('.', '.'), (')', ')'), ('is', 'be'), ('applied', 'apply'), ('to', 'to'), ('z', 'z'), ('to', 'to'), ('get', 'get'), ('the', 'the'), ('output', 'output'), ('of', 'of'), ('the', 'the'), ('unit', 'unit'), ('.', '.')] 

 Dependency tags are: 
>> [(('Then', 'applied'), 'advmod'), (('a', 'function'), 'det'), (('non-linear', 'function'), 'amod'), (('function', 'applied'), 'nsubj:pass'), (('f(', 'function'), 'appos'), (('.', 'f('), 'punct'), ((')', 'f('), 'punct'), (('is', 'applied'), 'aux:pass'), (('applied', 'root'), 'root'), (('to', 'z'), 'case'), (('z', 'applied'), 'obl'), (('to', 'get'), 'mark'), (('get', 'applied'), 'advcl'), (('the', 'output'), 'det'), (('output', 'get'), 'obj'), (('of', 'unit'), 'case'), (('the', 'unit'), 'det'), (('unit', 'output'), 'nmod'), (('.', 'applied'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 For simplicity, we have omitted bias terms. 

Tokens are: 
>> ['For', 'simplicity', ',', 'we', 'have', 'omitted', 'bias', 'terms', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('simplicity', 'NOUN'), (',', 'PUNCT'), ('we', 'PRON'), ('have', 'AUX'), ('omitted', 'VERB'), ('bias', 'NOUN'), ('terms', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('simplicity', 'NN'), (',', ','), ('we', 'PRP'), ('have', 'VBP'), ('omitted', 'VBN'), ('bias', 'NN'), ('terms', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('simplicity', 'simplicity'), (',', ','), ('we', 'we'), ('have', 'have'), ('omitted', 'omit'), ('bias', 'bias'), ('terms', 'term'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'simplicity'), 'case'), (('simplicity', 'omitted'), 'obl'), ((',', 'omitted'), 'punct'), (('we', 'omitted'), 'nsubj'), (('have', 'omitted'), 'aux'), (('omitted', 'root'), 'root'), (('bias', 'terms'), 'compound'), (('terms', 'omitted'), 'obj'), (('.', 'omitted'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 The non-linear functions used in neural networks include the rectified  linear unit (ReLU) f(z) = max(0,z), commonly used in recent years, as  well as the more conventional sigmoids, such as the hyberbolic tangent,  f(z) = (exp(z) − exp(−z))/(exp(z) + exp(−z)) and logistic function logistic,  f(z) = 1/(1 + exp(−z)). 

Tokens are: 
>> ['The', 'non-linear', 'functions', 'used', 'in', 'neural', 'networks', 'include', 'the', 'rectified', 'linear', 'unit', '(', 'ReLU', ')', 'f(', 'z', ')', '=', 'max', '(', '0', ',', 'z', ')', ',', 'commonly', 'used', 'in', 'recent', 'years', ',', 'as', 'well', 'as', 'the', 'more', 'conventional', 'sigmoids', ',', 'such', 'as', 'the', 'hyberbolic', 'tangent', ',', 'f(', 'z', ')', '=', '(', 'exp', '(', 'z', ')', '−', 'exp', '(', '−z', ')', ')', '/', '(', 'exp', '(', 'z', ')', '+', 'exp', '(', '−z', ')', ')', 'and', 'logistic', 'function', 'logistic', ',', 'f(', 'z', ')', '=', '1/', '(', '1', '+', 'exp', '(', '−z', ')', ')', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('non-linear', 'ADJ'), ('functions', 'NOUN'), ('used', 'VERB'), ('in', 'ADP'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('include', 'VERB'), ('the', 'DET'), ('rectified', 'VERB'), ('linear', 'ADJ'), ('unit', 'NOUN'), ('(', 'PUNCT'), ('ReLU', 'PROPN'), (')', 'PUNCT'), ('f(', 'NOUN'), ('z', 'NOUN'), (')', 'PUNCT'), ('=', 'SYM'), ('max', 'NOUN'), ('(', 'PUNCT'), ('0', 'NUM'), (',', 'PUNCT'), ('z', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('commonly', 'ADV'), ('used', 'VERB'), ('in', 'ADP'), ('recent', 'ADJ'), ('years', 'NOUN'), (',', 'PUNCT'), ('as', 'ADV'), ('well', 'ADV'), ('as', 'ADP'), ('the', 'DET'), ('more', 'ADV'), ('conventional', 'ADJ'), ('sigmoids', 'NOUN'), (',', 'PUNCT'), ('such', 'ADJ'), ('as', 'ADP'), ('the', 'DET'), ('hyberbolic', 'NOUN'), ('tangent', 'NOUN'), (',', 'PUNCT'), ('f(', 'NOUN'), ('z', 'NOUN'), (')', 'PUNCT'), ('=', 'SYM'), ('(', 'PUNCT'), ('exp', 'NOUN'), ('(', 'PUNCT'), ('z', 'NOUN'), (')', 'PUNCT'), ('−', 'PUNCT'), ('exp', 'NOUN'), ('(', 'PUNCT'), ('−z', 'NUM'), (')', 'PUNCT'), (')', 'PUNCT'), ('/', 'SYM'), ('(', 'PUNCT'), ('exp', 'NOUN'), ('(', 'PUNCT'), ('z', 'NOUN'), (')', 'PUNCT'), ('+', 'SYM'), ('exp', 'NOUN'), ('(', 'PUNCT'), ('−z', 'NUM'), (')', 'PUNCT'), (')', 'PUNCT'), ('and', 'CCONJ'), ('logistic', 'ADJ'), ('function', 'NOUN'), ('logistic', 'NOUN'), (',', 'PUNCT'), ('f(', 'NOUN'), ('z', 'NOUN'), (')', 'PUNCT'), ('=', 'SYM'), ('1/', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), ('+', 'SYM'), ('exp', 'NOUN'), ('(', 'PUNCT'), ('−z', 'NUM'), (')', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('non-linear', 'JJ'), ('functions', 'NNS'), ('used', 'VBN'), ('in', 'IN'), ('neural', 'JJ'), ('networks', 'NNS'), ('include', 'VBP'), ('the', 'DT'), ('rectified', 'VBN'), ('linear', 'JJ'), ('unit', 'NN'), ('(', '-LRB-'), ('ReLU', 'NNP'), (')', '-RRB-'), ('f(', 'NN'), ('z', 'NN'), (')', '-RRB-'), ('=', 'SYM'), ('max', 'NN'), ('(', '-LRB-'), ('0', 'CD'), (',', ','), ('z', 'NN'), (')', '-RRB-'), (',', ','), ('commonly', 'RB'), ('used', 'VBN'), ('in', 'IN'), ('recent', 'JJ'), ('years', 'NNS'), (',', ','), ('as', 'RB'), ('well', 'RB'), ('as', 'IN'), ('the', 'DT'), ('more', 'RBR'), ('conventional', 'JJ'), ('sigmoids', 'NNS'), (',', ','), ('such', 'JJ'), ('as', 'IN'), ('the', 'DT'), ('hyberbolic', 'NN'), ('tangent', 'NN'), (',', ','), ('f(', 'NN'), ('z', 'NN'), (')', '-RRB-'), ('=', 'SYM'), ('(', '-LRB-'), ('exp', 'NN'), ('(', '-LRB-'), ('z', 'NN'), (')', '-RRB-'), ('−', '-LRB-'), ('exp', 'NN'), ('(', '-LRB-'), ('−z', 'CD'), (')', '-RRB-'), (')', '-RRB-'), ('/', 'SYM'), ('(', '-LRB-'), ('exp', 'NN'), ('(', '-LRB-'), ('z', 'NN'), (')', '-RRB-'), ('+', 'SYM'), ('exp', 'NN'), ('(', '-LRB-'), ('−z', 'CD'), (')', '-RRB-'), (')', '-RRB-'), ('and', 'CC'), ('logistic', 'JJ'), ('function', 'NN'), ('logistic', 'NN'), (',', ','), ('f(', 'NN'), ('z', 'NN'), (')', '-RRB-'), ('=', 'SYM'), ('1/', 'NNS'), ('(', '-LRB-'), ('1', 'CD'), ('+', 'SYM'), ('exp', 'NN'), ('(', '-LRB-'), ('−z', 'CD'), (')', '-RRB-'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('non-linear', 'non-linear'), ('functions', 'function'), ('used', 'use'), ('in', 'in'), ('neural', 'neural'), ('networks', 'network'), ('include', 'include'), ('the', 'the'), ('rectified', 'rectify'), ('linear', 'linear'), ('unit', 'unit'), ('(', '('), ('ReLU', 'ReLU'), (')', ')'), ('f(', 'f('), ('z', 'z'), (')', ')'), ('=', '='), ('max', 'max'), ('(', '('), ('0', '0'), (',', ','), ('z', 'z'), (')', ')'), (',', ','), ('commonly', 'commonly'), ('used', 'use'), ('in', 'in'), ('recent', 'recent'), ('years', 'year'), (',', ','), ('as', 'as'), ('well', 'well'), ('as', 'as'), ('the', 'the'), ('more', 'more'), ('conventional', 'conventional'), ('sigmoids', 'sigmoid'), (',', ','), ('such', 'such'), ('as', 'as'), ('the', 'the'), ('hyberbolic', 'hyberbolic'), ('tangent', 'tangent'), (',', ','), ('f(', 'f('), ('z', 'z'), (')', ')'), ('=', '='), ('(', '('), ('exp', 'exp'), ('(', '('), ('z', 'z'), (')', ')'), ('−', "''"), ('exp', 'exp'), ('(', '('), ('−z', '−z'), (')', ')'), (')', ')'), ('/', '/'), ('(', '('), ('exp', 'exp'), ('(', '('), ('z', 'z'), (')', ')'), ('+', '+'), ('exp', 'exp'), ('(', '('), ('−z', '−z'), (')', ')'), (')', ')'), ('and', 'and'), ('logistic', 'logistic'), ('function', 'function'), ('logistic', 'logistic'), (',', ','), ('f(', 'f('), ('z', 'z'), (')', ')'), ('=', '='), ('1/', '1/'), ('(', '('), ('1', '1'), ('+', '+'), ('exp', 'exp'), ('(', '('), ('−z', '−z'), (')', ')'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'functions'), 'det'), (('non-linear', 'functions'), 'amod'), (('functions', 'include'), 'nsubj'), (('used', 'functions'), 'acl'), (('in', 'networks'), 'case'), (('neural', 'networks'), 'amod'), (('networks', 'used'), 'obl'), (('include', 'root'), 'root'), (('the', 'unit'), 'det'), (('rectified', 'unit'), 'amod'), (('linear', 'unit'), 'amod'), (('unit', 'include'), 'obj'), (('(', 'ReLU'), 'punct'), (('ReLU', 'unit'), 'appos'), ((')', 'ReLU'), 'punct'), (('f(', 'z'), 'compound'), (('z', 'unit'), 'appos'), ((')', 'z'), 'punct'), (('=', 'include'), 'conj'), (('max', '='), 'obj'), (('(', '0'), 'punct'), (('0', 'z'), 'dep'), ((',', 'z'), 'punct'), (('z', 'max'), 'appos'), ((')', 'z'), 'punct'), ((',', 'used'), 'punct'), (('commonly', 'used'), 'advmod'), (('used', 'max'), 'acl'), (('in', 'years'), 'case'), (('recent', 'years'), 'amod'), (('years', 'used'), 'obl'), ((',', 'sigmoids'), 'punct'), (('as', 'sigmoids'), 'cc'), (('well', 'as'), 'fixed'), (('as', 'as'), 'fixed'), (('the', 'sigmoids'), 'det'), (('more', 'conventional'), 'advmod'), (('conventional', 'sigmoids'), 'amod'), (('sigmoids', 'max'), 'conj'), ((',', 'tangent'), 'punct'), (('such', 'tangent'), 'case'), (('as', 'such'), 'fixed'), (('the', 'tangent'), 'det'), (('hyberbolic', 'tangent'), 'compound'), (('tangent', 'sigmoids'), 'nmod'), ((',', 'z'), 'punct'), (('f(', 'z'), 'compound'), (('z', 'tangent'), 'conj'), ((')', 'tangent'), 'punct'), (('=', 'sigmoids'), 'parataxis'), (('(', 'exp'), 'punct'), (('exp', '='), 'obj'), (('(', 'z'), 'punct'), (('z', 'exp'), 'dep'), ((')', 'z'), 'punct'), (('−', 'exp'), 'punct'), (('exp', 'exp'), 'conj'), (('(', '−z'), 'punct'), (('−z', 'exp'), 'dep'), ((')', '−z'), 'punct'), ((')', 'exp'), 'punct'), (('/', 'exp'), 'punct'), (('(', 'exp'), 'punct'), (('exp', 'exp'), 'conj'), (('(', 'z'), 'punct'), (('z', 'exp'), 'dep'), ((')', 'z'), 'punct'), (('+', 'exp'), 'cc'), (('exp', 'exp'), 'conj'), (('(', '−z'), 'punct'), (('−z', 'exp'), 'dep'), ((')', '−z'), 'punct'), ((')', '−z'), 'punct'), (('and', 'logistic'), 'cc'), (('logistic', 'logistic'), 'amod'), (('function', 'logistic'), 'compound'), (('logistic', 'exp'), 'conj'), ((',', 'z'), 'punct'), (('f(', 'z'), 'compound'), (('z', 'logistic'), 'appos'), ((')', 'z'), 'punct'), (('=', 'logistic'), 'acl'), (('1/', '='), 'obj'), (('(', '1'), 'punct'), (('1', 'exp'), 'nummod'), (('+', 'exp'), 'cc'), (('exp', '1/'), 'appos'), (('(', '−z'), 'punct'), (('−z', 'exp'), 'nummod'), ((')', '−z'), 'punct'), ((')', '1'), 'punct'), (('.', 'include'), 'punct')]

 Named Entites are: 
>> [('recent years', 'DATE')]

------------------- Sentence 6 -------------------

 d, 

Tokens are: 
>> ['d', ','] 

 UPOS tags are: 
>> [('d', 'PROPN'), (',', 'PUNCT')] 

 XPOS tags are: 
>> [('d', 'NNP'), (',', ',')] 

 Lemmas are: 
>> [('d', 'd'), (',', ',')] 

 Dependency tags are: 
>> [(('d', 'root'), 'root'), ((',', 'd'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 7 -------------------

 The equations used for computing the backward  pass. 

Tokens are: 
>> ['The', 'equations', 'used', 'for', 'computing', 'the', 'backward', 'pass', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('equations', 'NOUN'), ('used', 'VERB'), ('for', 'SCONJ'), ('computing', 'VERB'), ('the', 'DET'), ('backward', 'ADJ'), ('pass', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('equations', 'NNS'), ('used', 'VBN'), ('for', 'IN'), ('computing', 'VBG'), ('the', 'DT'), ('backward', 'JJ'), ('pass', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('equations', 'equation'), ('used', 'use'), ('for', 'for'), ('computing', 'computing'), ('the', 'the'), ('backward', 'backward'), ('pass', 'pass'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'equations'), 'det'), (('equations', 'root'), 'root'), (('used', 'equations'), 'acl'), (('for', 'computing'), 'mark'), (('computing', 'used'), 'advcl'), (('the', 'pass'), 'det'), (('backward', 'pass'), 'amod'), (('pass', 'computing'), 'obj'), (('.', 'equations'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 8 -------------------

 At each hidden layer we compute the error derivative with respect to  the output of each unit, which is a weighted sum of the error derivatives  with respect to the total inputs to the units in the layer above. 

Tokens are: 
>> ['At', 'each', 'hidden', 'layer', 'we', 'compute', 'the', 'error', 'derivative', 'with', 'respect', 'to', 'the', 'output', 'of', 'each', 'unit', ',', 'which', 'is', 'a', 'weighted', 'sum', 'of', 'the', 'error', 'derivatives', 'with', 'respect', 'to', 'the', 'total', 'inputs', 'to', 'the', 'units', 'in', 'the', 'layer', 'above', '.'] 

 UPOS tags are: 
>> [('At', 'ADP'), ('each', 'DET'), ('hidden', 'ADJ'), ('layer', 'NOUN'), ('we', 'PRON'), ('compute', 'VERB'), ('the', 'DET'), ('error', 'NOUN'), ('derivative', 'NOUN'), ('with', 'ADP'), ('respect', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('output', 'NOUN'), ('of', 'ADP'), ('each', 'DET'), ('unit', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('is', 'AUX'), ('a', 'DET'), ('weighted', 'VERB'), ('sum', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('error', 'NOUN'), ('derivatives', 'NOUN'), ('with', 'ADP'), ('respect', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('total', 'ADJ'), ('inputs', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('units', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('layer', 'NOUN'), ('above', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('At', 'IN'), ('each', 'DT'), ('hidden', 'JJ'), ('layer', 'NN'), ('we', 'PRP'), ('compute', 'VBP'), ('the', 'DT'), ('error', 'NN'), ('derivative', 'NN'), ('with', 'IN'), ('respect', 'NN'), ('to', 'IN'), ('the', 'DT'), ('output', 'NN'), ('of', 'IN'), ('each', 'DT'), ('unit', 'NN'), (',', ','), ('which', 'WDT'), ('is', 'VBZ'), ('a', 'DT'), ('weighted', 'VBN'), ('sum', 'NN'), ('of', 'IN'), ('the', 'DT'), ('error', 'NN'), ('derivatives', 'NNS'), ('with', 'IN'), ('respect', 'NN'), ('to', 'IN'), ('the', 'DT'), ('total', 'JJ'), ('inputs', 'NNS'), ('to', 'IN'), ('the', 'DT'), ('units', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('layer', 'NN'), ('above', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('At', 'at'), ('each', 'each'), ('hidden', 'hidden'), ('layer', 'layer'), ('we', 'we'), ('compute', 'compute'), ('the', 'the'), ('error', 'error'), ('derivative', 'derivative'), ('with', 'with'), ('respect', 'respect'), ('to', 'to'), ('the', 'the'), ('output', 'output'), ('of', 'of'), ('each', 'each'), ('unit', 'unit'), (',', ','), ('which', 'which'), ('is', 'be'), ('a', 'a'), ('weighted', 'weight'), ('sum', 'sum'), ('of', 'of'), ('the', 'the'), ('error', 'error'), ('derivatives', 'derivative'), ('with', 'with'), ('respect', 'respect'), ('to', 'to'), ('the', 'the'), ('total', 'total'), ('inputs', 'input'), ('to', 'to'), ('the', 'the'), ('units', 'unit'), ('in', 'in'), ('the', 'the'), ('layer', 'layer'), ('above', 'above'), ('.', '.')] 

 Dependency tags are: 
>> [(('At', 'layer'), 'case'), (('each', 'layer'), 'det'), (('hidden', 'layer'), 'amod'), (('layer', 'compute'), 'obl'), (('we', 'compute'), 'nsubj'), (('compute', 'root'), 'root'), (('the', 'derivative'), 'det'), (('error', 'derivative'), 'compound'), (('derivative', 'compute'), 'obj'), (('with', 'respect'), 'case'), (('respect', 'derivative'), 'nmod'), (('to', 'output'), 'case'), (('the', 'output'), 'det'), (('output', 'respect'), 'nmod'), (('of', 'unit'), 'case'), (('each', 'unit'), 'det'), (('unit', 'output'), 'nmod'), ((',', 'sum'), 'punct'), (('which', 'sum'), 'nsubj'), (('is', 'sum'), 'cop'), (('a', 'sum'), 'det'), (('weighted', 'sum'), 'amod'), (('sum', 'derivative'), 'acl:relcl'), (('of', 'derivatives'), 'case'), (('the', 'derivatives'), 'det'), (('error', 'derivatives'), 'compound'), (('derivatives', 'sum'), 'nmod'), (('with', 'respect'), 'case'), (('respect', 'derivatives'), 'nmod'), (('to', 'inputs'), 'case'), (('the', 'inputs'), 'det'), (('total', 'inputs'), 'amod'), (('inputs', 'respect'), 'nmod'), (('to', 'units'), 'case'), (('the', 'units'), 'det'), (('units', 'inputs'), 'nmod'), (('in', 'layer'), 'case'), (('the', 'layer'), 'det'), (('layer', 'units'), 'nmod'), (('above', 'layer'), 'advmod'), (('.', 'compute'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 9 -------------------

 We then  convert the error derivative with respect to the output into the error  derivative with respect to the input by multiplying it by the gradient of f(z). 

Tokens are: 
>> ['We', 'then', 'convert', 'the', 'error', 'derivative', 'with', 'respect', 'to', 'the', 'output', 'into', 'the', 'error', 'derivative', 'with', 'respect', 'to', 'the', 'input', 'by', 'multiplying', 'it', 'by', 'the', 'gradient', 'of', 'f(', 'z', ')', '.'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('then', 'ADV'), ('convert', 'VERB'), ('the', 'DET'), ('error', 'NOUN'), ('derivative', 'NOUN'), ('with', 'ADP'), ('respect', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('output', 'NOUN'), ('into', 'ADP'), ('the', 'DET'), ('error', 'NOUN'), ('derivative', 'NOUN'), ('with', 'ADP'), ('respect', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('input', 'NOUN'), ('by', 'SCONJ'), ('multiplying', 'VERB'), ('it', 'PRON'), ('by', 'ADP'), ('the', 'DET'), ('gradient', 'NOUN'), ('of', 'ADP'), ('f(', 'NOUN'), ('z', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('then', 'RB'), ('convert', 'VBP'), ('the', 'DT'), ('error', 'NN'), ('derivative', 'NN'), ('with', 'IN'), ('respect', 'NN'), ('to', 'IN'), ('the', 'DT'), ('output', 'NN'), ('into', 'IN'), ('the', 'DT'), ('error', 'NN'), ('derivative', 'NN'), ('with', 'IN'), ('respect', 'NN'), ('to', 'IN'), ('the', 'DT'), ('input', 'NN'), ('by', 'IN'), ('multiplying', 'VBG'), ('it', 'PRP'), ('by', 'IN'), ('the', 'DT'), ('gradient', 'NN'), ('of', 'IN'), ('f(', 'NN'), ('z', 'NN'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('then', 'then'), ('convert', 'convert'), ('the', 'the'), ('error', 'error'), ('derivative', 'derivative'), ('with', 'with'), ('respect', 'respect'), ('to', 'to'), ('the', 'the'), ('output', 'output'), ('into', 'into'), ('the', 'the'), ('error', 'error'), ('derivative', 'derivative'), ('with', 'with'), ('respect', 'respect'), ('to', 'to'), ('the', 'the'), ('input', 'input'), ('by', 'by'), ('multiplying', 'multiply'), ('it', 'it'), ('by', 'by'), ('the', 'the'), ('gradient', 'gradient'), ('of', 'of'), ('f(', 'f('), ('z', 'z'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('We', 'convert'), 'nsubj'), (('then', 'convert'), 'advmod'), (('convert', 'root'), 'root'), (('the', 'derivative'), 'det'), (('error', 'derivative'), 'compound'), (('derivative', 'convert'), 'obj'), (('with', 'respect'), 'case'), (('respect', 'derivative'), 'nmod'), (('to', 'output'), 'case'), (('the', 'output'), 'det'), (('output', 'respect'), 'nmod'), (('into', 'derivative'), 'case'), (('the', 'derivative'), 'det'), (('error', 'derivative'), 'compound'), (('derivative', 'convert'), 'obl'), (('with', 'respect'), 'case'), (('respect', 'derivative'), 'nmod'), (('to', 'input'), 'case'), (('the', 'input'), 'det'), (('input', 'respect'), 'nmod'), (('by', 'multiplying'), 'mark'), (('multiplying', 'convert'), 'advcl'), (('it', 'multiplying'), 'obj'), (('by', 'gradient'), 'case'), (('the', 'gradient'), 'det'), (('gradient', 'multiplying'), 'obl'), (('of', 'z'), 'case'), (('f(', 'z'), 'compound'), (('z', 'gradient'), 'nmod'), ((')', 'multiplying'), 'punct'), (('.', 'convert'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 10 -------------------

 At the output layer, the error derivative with respect to the output of a unit  is computed by differentiating the cost function. 

Tokens are: 
>> ['At', 'the', 'output', 'layer', ',', 'the', 'error', 'derivative', 'with', 'respect', 'to', 'the', 'output', 'of', 'a', 'unit', 'is', 'computed', 'by', 'differentiating', 'the', 'cost', 'function', '.'] 

 UPOS tags are: 
>> [('At', 'ADP'), ('the', 'DET'), ('output', 'NOUN'), ('layer', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('error', 'NOUN'), ('derivative', 'NOUN'), ('with', 'ADP'), ('respect', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('output', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('unit', 'NOUN'), ('is', 'AUX'), ('computed', 'VERB'), ('by', 'SCONJ'), ('differentiating', 'VERB'), ('the', 'DET'), ('cost', 'NOUN'), ('function', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('At', 'IN'), ('the', 'DT'), ('output', 'NN'), ('layer', 'NN'), (',', ','), ('the', 'DT'), ('error', 'NN'), ('derivative', 'NN'), ('with', 'IN'), ('respect', 'NN'), ('to', 'IN'), ('the', 'DT'), ('output', 'NN'), ('of', 'IN'), ('a', 'DT'), ('unit', 'NN'), ('is', 'VBZ'), ('computed', 'VBN'), ('by', 'IN'), ('differentiating', 'VBG'), ('the', 'DT'), ('cost', 'NN'), ('function', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('At', 'at'), ('the', 'the'), ('output', 'output'), ('layer', 'layer'), (',', ','), ('the', 'the'), ('error', 'error'), ('derivative', 'derivative'), ('with', 'with'), ('respect', 'respect'), ('to', 'to'), ('the', 'the'), ('output', 'output'), ('of', 'of'), ('a', 'a'), ('unit', 'unit'), ('is', 'be'), ('computed', 'compute'), ('by', 'by'), ('differentiating', 'differentiate'), ('the', 'the'), ('cost', 'cost'), ('function', 'function'), ('.', '.')] 

 Dependency tags are: 
>> [(('At', 'layer'), 'case'), (('the', 'layer'), 'det'), (('output', 'layer'), 'compound'), (('layer', 'computed'), 'obl'), ((',', 'computed'), 'punct'), (('the', 'derivative'), 'det'), (('error', 'derivative'), 'compound'), (('derivative', 'computed'), 'nsubj:pass'), (('with', 'respect'), 'case'), (('respect', 'derivative'), 'nmod'), (('to', 'output'), 'case'), (('the', 'output'), 'det'), (('output', 'respect'), 'nmod'), (('of', 'unit'), 'case'), (('a', 'unit'), 'det'), (('unit', 'output'), 'nmod'), (('is', 'computed'), 'aux:pass'), (('computed', 'root'), 'root'), (('by', 'differentiating'), 'mark'), (('differentiating', 'computed'), 'advcl'), (('the', 'function'), 'det'), (('cost', 'function'), 'compound'), (('function', 'differentiating'), 'obj'), (('.', 'computed'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 11 -------------------

 This gives yl − tl if the cost  function for unit l is 0.5(yl − tl) 

Tokens are: 
>> ['This', 'gives', 'yl', '−', 'tl', 'if', 'the', 'cost', 'function', 'for', 'unit', 'l', 'is', '0.5', '(', 'yl', '−', 'tl', ')'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('gives', 'VERB'), ('yl', 'NOUN'), ('−', 'PUNCT'), ('tl', 'NOUN'), ('if', 'SCONJ'), ('the', 'DET'), ('cost', 'NOUN'), ('function', 'NOUN'), ('for', 'ADP'), ('unit', 'NOUN'), ('l', 'NOUN'), ('is', 'AUX'), ('0.5', 'NUM'), ('(', 'PUNCT'), ('yl', 'NOUN'), ('−', 'SYM'), ('tl', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('gives', 'VBZ'), ('yl', 'NN'), ('−', ','), ('tl', 'NN'), ('if', 'IN'), ('the', 'DT'), ('cost', 'NN'), ('function', 'NN'), ('for', 'IN'), ('unit', 'NN'), ('l', 'NN'), ('is', 'VBZ'), ('0.5', 'CD'), ('(', '-LRB-'), ('yl', 'NN'), ('−', 'SYM'), ('tl', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('This', 'this'), ('gives', 'give'), ('yl', 'yl'), ('−', "''"), ('tl', 'tl'), ('if', 'if'), ('the', 'the'), ('cost', 'cost'), ('function', 'function'), ('for', 'for'), ('unit', 'unit'), ('l', 'l'), ('is', 'be'), ('0.5', '0.5'), ('(', '('), ('yl', 'yl'), ('−', '−'), ('tl', 'tl'), (')', ')')] 

 Dependency tags are: 
>> [(('This', 'gives'), 'nsubj'), (('gives', 'root'), 'root'), (('yl', 'gives'), 'obj'), (('−', 'gives'), 'punct'), (('tl', 'gives'), 'obj'), (('if', '0.5'), 'mark'), (('the', 'function'), 'det'), (('cost', 'function'), 'compound'), (('function', '0.5'), 'nsubj'), (('for', 'l'), 'case'), (('unit', 'l'), 'compound'), (('l', 'function'), 'nmod'), (('is', '0.5'), 'cop'), (('0.5', 'gives'), 'advcl'), (('(', 'yl'), 'punct'), (('yl', '0.5'), 'appos'), (('−', 'tl'), 'case'), (('tl', 'yl'), 'nmod'), ((')', 'yl'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 22 =================================

2, where tl is the target value. Once the ∂E/∂zk  is known, the error-derivative for the weight wjk on the connection from  unit j in the layer below is just yj ∂E/∂zk. 


------------------- Sentence 1 -------------------

 2, where tl is the target value. 

Tokens are: 
>> ['2', ',', 'where', 'tl', 'is', 'the', 'target', 'value', '.'] 

 UPOS tags are: 
>> [('2', 'NUM'), (',', 'PUNCT'), ('where', 'SCONJ'), ('tl', 'PROPN'), ('is', 'AUX'), ('the', 'DET'), ('target', 'NOUN'), ('value', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('2', 'LS'), (',', ','), ('where', 'WRB'), ('tl', 'NNP'), ('is', 'VBZ'), ('the', 'DT'), ('target', 'NN'), ('value', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('2', '2'), (',', ','), ('where', 'where'), ('tl', 'tl'), ('is', 'be'), ('the', 'the'), ('target', 'target'), ('value', 'value'), ('.', '.')] 

 Dependency tags are: 
>> [(('2', 'where'), 'nummod'), ((',', '2'), 'punct'), (('where', 'value'), 'mark'), (('tl', 'value'), 'nsubj'), (('is', 'value'), 'cop'), (('the', 'value'), 'det'), (('target', 'value'), 'compound'), (('value', 'root'), 'root'), (('.', 'where'), 'punct')]

 Named Entites are: 
>> [('2', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Once the ∂E/∂zk  is known, the error-derivative for the weight wjk on the connection from  unit j in the layer below is just yj ∂E/∂zk. 

Tokens are: 
>> ['Once', 'the', '∂', 'E/∂zk', 'is', 'known', ',', 'the', 'error-derivative', 'for', 'the', 'weight', 'wjk', 'on', 'the', 'connection', 'from', 'unit', 'j', 'in', 'the', 'layer', 'below', 'is', 'just', 'yj', '∂', 'E/∂zk', '.'] 

 UPOS tags are: 
>> [('Once', 'SCONJ'), ('the', 'DET'), ('∂', 'PROPN'), ('E/∂zk', 'PROPN'), ('is', 'AUX'), ('known', 'VERB'), (',', 'PUNCT'), ('the', 'DET'), ('error-derivative', 'ADJ'), ('for', 'ADP'), ('the', 'DET'), ('weight', 'NOUN'), ('wjk', 'NOUN'), ('on', 'ADP'), ('the', 'DET'), ('connection', 'NOUN'), ('from', 'ADP'), ('unit', 'NOUN'), ('j', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('layer', 'NOUN'), ('below', 'ADV'), ('is', 'AUX'), ('just', 'ADV'), ('yj', 'NOUN'), ('∂', 'PROPN'), ('E/∂zk', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Once', 'IN'), ('the', 'DT'), ('∂', 'NNP'), ('E/∂zk', 'NNP'), ('is', 'VBZ'), ('known', 'VBN'), (',', ','), ('the', 'DT'), ('error-derivative', 'JJ'), ('for', 'IN'), ('the', 'DT'), ('weight', 'NN'), ('wjk', 'NN'), ('on', 'IN'), ('the', 'DT'), ('connection', 'NN'), ('from', 'IN'), ('unit', 'NN'), ('j', 'NN'), ('in', 'IN'), ('the', 'DT'), ('layer', 'NN'), ('below', 'RB'), ('is', 'VBZ'), ('just', 'RB'), ('yj', 'NN'), ('∂', 'NNP'), ('E/∂zk', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('Once', 'once'), ('the', 'the'), ('∂', '∂'), ('E/∂zk', 'E/∂zk'), ('is', 'be'), ('known', 'know'), (',', ','), ('the', 'the'), ('error-derivative', 'error-derivative'), ('for', 'for'), ('the', 'the'), ('weight', 'weight'), ('wjk', 'wjk'), ('on', 'on'), ('the', 'the'), ('connection', 'connection'), ('from', 'from'), ('unit', 'unit'), ('j', 'j'), ('in', 'in'), ('the', 'the'), ('layer', 'layer'), ('below', 'below'), ('is', 'be'), ('just', 'just'), ('yj', 'yj'), ('∂', '∂'), ('E/∂zk', 'E/∂zk'), ('.', '.')] 

 Dependency tags are: 
>> [(('Once', 'known'), 'mark'), (('the', '∂'), 'det'), (('∂', 'known'), 'nsubj:pass'), (('E/∂zk', '∂'), 'flat'), (('is', 'known'), 'aux:pass'), (('known', 'yj'), 'advcl'), ((',', 'yj'), 'punct'), (('the', 'error-derivative'), 'det'), (('error-derivative', 'yj'), 'nsubj'), (('for', 'wjk'), 'case'), (('the', 'wjk'), 'det'), (('weight', 'wjk'), 'compound'), (('wjk', 'error-derivative'), 'nmod'), (('on', 'connection'), 'case'), (('the', 'connection'), 'det'), (('connection', 'wjk'), 'nmod'), (('from', 'j'), 'case'), (('unit', 'connection'), 'nmod'), (('j', 'connection'), 'nmod'), (('in', 'layer'), 'case'), (('the', 'layer'), 'det'), (('layer', 'j'), 'nmod'), (('below', 'layer'), 'advmod'), (('is', 'yj'), 'cop'), (('just', 'yj'), 'advmod'), (('yj', 'root'), 'root'), (('∂', 'yj'), 'flat'), (('E/∂zk', '∂'), 'flat'), (('.', 'yj'), 'punct')]

 Named Entites are: 
>> [('E/∂zk', 'PRODUCT')]

================================ Paragraph 23 =================================

Input (2) 


------------------- Sentence 1 -------------------

 Input (2) 

Tokens are: 
>> ['Input', '(', '2', ')'] 

 UPOS tags are: 
>> [('Input', 'NOUN'), ('(', 'PUNCT'), ('2', 'NUM'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Input', 'NN'), ('(', '-LRB-'), ('2', 'CD'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Input', 'input'), ('(', '('), ('2', '2'), (')', ')')] 

 Dependency tags are: 
>> [(('Input', 'root'), 'root'), (('(', '2'), 'punct'), (('2', 'Input'), 'dep'), ((')', '2'), 'punct')]

 Named Entites are: 
>> [('2', 'CARDINAL')]

================================ Paragraph 24 =================================

Output (1 sigmoid) 


------------------- Sentence 1 -------------------

 Output (1 sigmoid) 

Tokens are: 
>> ['Output', '(', '1', 'sigmoid', ')'] 

 UPOS tags are: 
>> [('Output', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), ('sigmoid', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Output', 'NN'), ('(', '-LRB-'), ('1', 'CD'), ('sigmoid', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Output', 'output'), ('(', '('), ('1', '1'), ('sigmoid', 'sigmoid'), (')', ')')] 

 Dependency tags are: 
>> [(('Output', 'root'), 'root'), (('(', 'sigmoid'), 'punct'), (('1', 'sigmoid'), 'nummod'), (('sigmoid', 'Output'), 'appos'), ((')', 'sigmoid'), 'punct')]

 Named Entites are: 
>> [('1', 'CARDINAL')]

================================ Paragraph 25 =================================

Hidden (2 sigmoid) 


------------------- Sentence 1 -------------------

 Hidden (2 sigmoid) 

Tokens are: 
>> ['Hidden', '(', '2', 'sigmoid', ')'] 

 UPOS tags are: 
>> [('Hidden', 'VERB'), ('(', 'PUNCT'), ('2', 'NUM'), ('sigmoid', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Hidden', 'VBN'), ('(', '-LRB-'), ('2', 'CD'), ('sigmoid', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Hidden', 'hide'), ('(', '('), ('2', '2'), ('sigmoid', 'sigmoid'), (')', ')')] 

 Dependency tags are: 
>> [(('Hidden', 'root'), 'root'), (('(', 'sigmoid'), 'punct'), (('2', 'sigmoid'), 'nummod'), (('sigmoid', 'Hidden'), 'parataxis'), ((')', 'sigmoid'), 'punct')]

 Named Entites are: 
>> [('2', 'CARDINAL')]

================================ Paragraph 26 =================================

a b 


------------------- Sentence 1 -------------------

 a b 

Tokens are: 
>> ['a', 'b'] 

 UPOS tags are: 
>> [('a', 'DET'), ('b', 'NOUN')] 

 XPOS tags are: 
>> [('a', 'DT'), ('b', 'NN')] 

 Lemmas are: 
>> [('a', 'a'), ('b', 'b')] 

 Dependency tags are: 
>> [(('a', 'b'), 'det'), (('b', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 27 =================================

dc 


------------------- Sentence 1 -------------------

 dc 

Tokens are: 
>> ['dc'] 

 UPOS tags are: 
>> [('dc', 'PROPN')] 

 XPOS tags are: 
>> [('dc', 'NNP')] 

 Lemmas are: 
>> [('dc', 'dc')] 

 Dependency tags are: 
>> [(('dc', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 28 =================================

y y 


------------------- Sentence 1 -------------------

 y y 

Tokens are: 
>> ['y', 'y'] 

 UPOS tags are: 
>> [('y', 'PROPN'), ('y', 'PUNCT')] 

 XPOS tags are: 
>> [('y', 'NNP'), ('y', '.')] 

 Lemmas are: 
>> [('y', 'y'), ('y', 'y')] 

 Dependency tags are: 
>> [(('y', 'root'), 'root'), (('y', 'y'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 29 =================================

x y x 


------------------- Sentence 1 -------------------

 x y x 

Tokens are: 
>> ['x', 'y', 'x\uf0b6'] 

 UPOS tags are: 
>> [('x', 'X'), ('y', 'PROPN'), ('x\uf0b6', 'PROPN')] 

 XPOS tags are: 
>> [('x', 'LS'), ('y', 'NNP'), ('x\uf0b6', 'NNP')] 

 Lemmas are: 
>> [('x', 'x'), ('y', 'y'), ('x\uf0b6', 'x\uf0b6')] 

 Dependency tags are: 
>> [(('x', 'y'), 'dep'), (('y', 'root'), 'root'), (('x\uf0b6', 'y'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 30 =================================

=y z 


------------------- Sentence 1 -------------------

 =y z 

Tokens are: 
>> ['\uf0b6=y', 'z'] 

 UPOS tags are: 
>> [('\uf0b6=y', 'PROPN'), ('z', 'PROPN')] 

 XPOS tags are: 
>> [('\uf0b6=y', 'NNP'), ('z', 'NNP')] 

 Lemmas are: 
>> [('\uf0b6=y', '\uf0b6=y'), ('z', 'z')] 

 Dependency tags are: 
>> [(('\uf0b6=y', 'root'), 'root'), (('z', '\uf0b6=y'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 31 =================================

  


------------------- Sentence 1 -------------------

   

Tokens are: 
>> ['\uf0b6', '\uf0b6'] 

 UPOS tags are: 
>> [('\uf0b6', 'PROPN'), ('\uf0b6', 'PROPN')] 

 XPOS tags are: 
>> [('\uf0b6', 'NNP'), ('\uf0b6', 'NNP')] 

 Lemmas are: 
>> [('\uf0b6', '\uf0b6'), ('\uf0b6', '\uf0b6')] 

 Dependency tags are: 
>> [(('\uf0b6', 'root'), 'root'), (('\uf0b6', '\uf0b6'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 32 =================================

x y 


------------------- Sentence 1 -------------------

 x y 

Tokens are: 
>> ['x', 'y'] 

 UPOS tags are: 
>> [('x', 'PROPN'), ('y', 'PROPN')] 

 XPOS tags are: 
>> [('x', 'NNP'), ('y', 'NNP')] 

 Lemmas are: 
>> [('x', 'x'), ('y', 'y')] 

 Dependency tags are: 
>> [(('x', 'root'), 'root'), (('y', 'x'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 33 =================================

  


------------------- Sentence 1 -------------------

   

Tokens are: 
>> ['\uf0b6', '\uf0b6'] 

 UPOS tags are: 
>> [('\uf0b6', 'PROPN'), ('\uf0b6', 'PROPN')] 

 XPOS tags are: 
>> [('\uf0b6', 'NNP'), ('\uf0b6', 'NNP')] 

 Lemmas are: 
>> [('\uf0b6', '\uf0b6'), ('\uf0b6', '\uf0b6')] 

 Dependency tags are: 
>> [(('\uf0b6', 'root'), 'root'), (('\uf0b6', '\uf0b6'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 34 =================================

z y zz y 


------------------- Sentence 1 -------------------

 z y zz y 

Tokens are: 
>> ['z', 'y', 'zz', 'y\uf0b6'] 

 UPOS tags are: 
>> [('z', 'PROPN'), ('y', 'X'), ('zz', 'PROPN'), ('y\uf0b6', 'PUNCT')] 

 XPOS tags are: 
>> [('z', 'NNP'), ('y', 'FW'), ('zz', 'NNP'), ('y\uf0b6', '.')] 

 Lemmas are: 
>> [('z', 'z'), ('y', 'y'), ('zz', 'zz'), ('y\uf0b6', 'y\uf0b6')] 

 Dependency tags are: 
>> [(('z', 'root'), 'root'), (('y', 'z'), 'flat'), (('zz', 'z'), 'flat'), (('y\uf0b6', 'z'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 35 =================================

=Δ Δ 


------------------- Sentence 1 -------------------

 =Δ Δ 

Tokens are: 
>> ['\uf0b6=Δ', 'Δ'] 

 UPOS tags are: 
>> [('\uf0b6=Δ', 'NOUN'), ('Δ', 'NOUN')] 

 XPOS tags are: 
>> [('\uf0b6=Δ', 'NN'), ('Δ', 'NN')] 

 Lemmas are: 
>> [('\uf0b6=Δ', '\uf0b6=δ'), ('Δ', 'δ')] 

 Dependency tags are: 
>> [(('\uf0b6=Δ', 'Δ'), 'compound'), (('Δ', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 36 =================================

Δ Δ 


------------------- Sentence 1 -------------------

 Δ Δ 

Tokens are: 
>> ['Δ', 'Δ'] 

 UPOS tags are: 
>> [('Δ', 'NOUN'), ('Δ', 'NOUN')] 

 XPOS tags are: 
>> [('Δ', 'NN'), ('Δ', 'NN')] 

 Lemmas are: 
>> [('Δ', 'δ'), ('Δ', 'δ')] 

 Dependency tags are: 
>> [(('Δ', 'Δ'), 'compound'), (('Δ', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 37 =================================

Δ Δz y z 


------------------- Sentence 1 -------------------

 Δ 

Tokens are: 
>> ['Δ'] 

 UPOS tags are: 
>> [('Δ', 'NOUN')] 

 XPOS tags are: 
>> [('Δ', 'NN')] 

 Lemmas are: 
>> [('Δ', 'δ')] 

 Dependency tags are: 
>> [(('Δ', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Δz y z 

Tokens are: 
>> ['Δz', 'y', 'z'] 

 UPOS tags are: 
>> [('Δz', 'PROPN'), ('y', 'PROPN'), ('z', 'PROPN')] 

 XPOS tags are: 
>> [('Δz', 'NNP'), ('y', 'NNP'), ('z', 'NNP')] 

 Lemmas are: 
>> [('Δz', 'Δz'), ('y', 'y'), ('z', 'z')] 

 Dependency tags are: 
>> [(('Δz', 'root'), 'root'), (('y', 'Δz'), 'flat'), (('z', 'Δz'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 38 =================================

x y x 


------------------- Sentence 1 -------------------

 x y x 

Tokens are: 
>> ['x', 'y', 'x\uf0b6'] 

 UPOS tags are: 
>> [('x', 'X'), ('y', 'PROPN'), ('x\uf0b6', 'PROPN')] 

 XPOS tags are: 
>> [('x', 'LS'), ('y', 'NNP'), ('x\uf0b6', 'NNP')] 

 Lemmas are: 
>> [('x', 'x'), ('y', 'y'), ('x\uf0b6', 'x\uf0b6')] 

 Dependency tags are: 
>> [(('x', 'y'), 'dep'), (('y', 'root'), 'root'), (('x\uf0b6', 'y'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 39 =================================

  = 


------------------- Sentence 1 -------------------

   = 

Tokens are: 
>> ['\uf0b6', '\uf0b6', '\uf0b6='] 

 UPOS tags are: 
>> [('\uf0b6', 'PROPN'), ('\uf0b6', 'PROPN'), ('\uf0b6=', 'PUNCT')] 

 XPOS tags are: 
>> [('\uf0b6', 'NNP'), ('\uf0b6', 'NNP'), ('\uf0b6=', '.')] 

 Lemmas are: 
>> [('\uf0b6', '\uf0b6'), ('\uf0b6', '\uf0b6'), ('\uf0b6=', '\uf0b6=')] 

 Dependency tags are: 
>> [(('\uf0b6', 'root'), 'root'), (('\uf0b6', '\uf0b6'), 'flat'), (('\uf0b6=', '\uf0b6'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 40 =================================

x z 


------------------- Sentence 1 -------------------

 x z 

Tokens are: 
>> ['x', 'z'] 

 UPOS tags are: 
>> [('x', 'PROPN'), ('z', 'PROPN')] 

 XPOS tags are: 
>> [('x', 'NNP'), ('z', 'NNP')] 

 Lemmas are: 
>> [('x', 'x'), ('z', 'z')] 

 Dependency tags are: 
>> [(('x', 'z'), 'compound'), (('z', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 41 =================================

y z 


------------------- Sentence 1 -------------------

 y z 

Tokens are: 
>> ['y', 'z'] 

 UPOS tags are: 
>> [('y', 'PROPN'), ('z', 'PROPN')] 

 XPOS tags are: 
>> [('y', 'NNP'), ('z', 'NNP')] 

 Lemmas are: 
>> [('y', 'y'), ('z', 'z')] 

 Dependency tags are: 
>> [(('y', 'root'), 'root'), (('z', 'y'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 42 =================================

xx y 


------------------- Sentence 1 -------------------

 xx y 

Tokens are: 
>> ['xx', 'y'] 

 UPOS tags are: 
>> [('xx', 'X'), ('y', 'PUNCT')] 

 XPOS tags are: 
>> [('xx', 'LS'), ('y', '.')] 

 Lemmas are: 
>> [('xx', 'xx'), ('y', 'y')] 

 Dependency tags are: 
>> [(('xx', 'root'), 'root'), (('y', 'xx'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 43 =================================

  


------------------- Sentence 1 -------------------

   

Tokens are: 
>> ['\uf0b6', '\uf0b6'] 

 UPOS tags are: 
>> [('\uf0b6', 'PROPN'), ('\uf0b6', 'PROPN')] 

 XPOS tags are: 
>> [('\uf0b6', 'NNP'), ('\uf0b6', 'NNP')] 

 Lemmas are: 
>> [('\uf0b6', '\uf0b6'), ('\uf0b6', '\uf0b6')] 

 Dependency tags are: 
>> [(('\uf0b6', 'root'), 'root'), (('\uf0b6', '\uf0b6'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 44 =================================

  


------------------- Sentence 1 -------------------

   

Tokens are: 
>> ['\uf0b6', '\uf0b6'] 

 UPOS tags are: 
>> [('\uf0b6', 'PROPN'), ('\uf0b6', 'PROPN')] 

 XPOS tags are: 
>> [('\uf0b6', 'NNP'), ('\uf0b6', 'NNP')] 

 Lemmas are: 
>> [('\uf0b6', '\uf0b6'), ('\uf0b6', '\uf0b6')] 

 Dependency tags are: 
>> [(('\uf0b6', 'root'), 'root'), (('\uf0b6', '\uf0b6'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 45 =================================

 = 


------------------- Sentence 1 -------------------

  = 

Tokens are: 
>> ['\uf0b6', '\uf0b6='] 

 UPOS tags are: 
>> [('\uf0b6', 'PROPN'), ('\uf0b6=', 'PUNCT')] 

 XPOS tags are: 
>> [('\uf0b6', 'NNP'), ('\uf0b6=', '.')] 

 Lemmas are: 
>> [('\uf0b6', '\uf0b6'), ('\uf0b6=', '\uf0b6=')] 

 Dependency tags are: 
>> [(('\uf0b6', 'root'), 'root'), (('\uf0b6=', '\uf0b6'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 46 =================================

Compare outputs with correct  answer to get error derivatives 


------------------- Sentence 1 -------------------

 Compare outputs with correct  answer to get error derivatives 

Tokens are: 
>> ['Compare', 'outputs', 'with', 'correct', 'answer', 'to', 'get', 'error', 'derivatives'] 

 UPOS tags are: 
>> [('Compare', 'VERB'), ('outputs', 'NOUN'), ('with', 'ADP'), ('correct', 'ADJ'), ('answer', 'NOUN'), ('to', 'PART'), ('get', 'VERB'), ('error', 'NOUN'), ('derivatives', 'NOUN')] 

 XPOS tags are: 
>> [('Compare', 'VB'), ('outputs', 'NNS'), ('with', 'IN'), ('correct', 'JJ'), ('answer', 'NN'), ('to', 'TO'), ('get', 'VB'), ('error', 'NN'), ('derivatives', 'NNS')] 

 Lemmas are: 
>> [('Compare', 'compare'), ('outputs', 'output'), ('with', 'with'), ('correct', 'correct'), ('answer', 'answer'), ('to', 'to'), ('get', 'get'), ('error', 'error'), ('derivatives', 'derivative')] 

 Dependency tags are: 
>> [(('Compare', 'root'), 'root'), (('outputs', 'Compare'), 'obj'), (('with', 'answer'), 'case'), (('correct', 'answer'), 'amod'), (('answer', 'Compare'), 'obl'), (('to', 'get'), 'mark'), (('get', 'Compare'), 'advcl'), (('error', 'derivatives'), 'compound'), (('derivatives', 'get'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 47 =================================

j 


------------------- Sentence 1 -------------------

 j 

Tokens are: 
>> ['j'] 

 UPOS tags are: 
>> [('j', 'PROPN')] 

 XPOS tags are: 
>> [('j', 'NNP')] 

 Lemmas are: 
>> [('j', 'j')] 

 Dependency tags are: 
>> [(('j', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 48 =================================

k 


------------------- Sentence 1 -------------------

 k 

Tokens are: 
>> ['k'] 

 UPOS tags are: 
>> [('k', 'PROPN')] 

 XPOS tags are: 
>> [('k', 'NNP')] 

 Lemmas are: 
>> [('k', 'k')] 

 Dependency tags are: 
>> [(('k', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 49 =================================

E yl 


------------------- Sentence 1 -------------------

 E yl 

Tokens are: 
>> ['E', 'yl'] 

 UPOS tags are: 
>> [('E', 'PROPN'), ('yl', 'PROPN')] 

 XPOS tags are: 
>> [('E', 'NNP'), ('yl', 'NNP')] 

 Lemmas are: 
>> [('E', 'E'), ('yl', 'yl')] 

 Dependency tags are: 
>> [(('E', 'root'), 'root'), (('yl', 'E'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 50 =================================

=yl tl 


------------------- Sentence 1 -------------------

 =yl tl 

Tokens are: 
>> ['=yl', 'tl'] 

 UPOS tags are: 
>> [('=yl', 'PROPN'), ('tl', 'PROPN')] 

 XPOS tags are: 
>> [('=yl', 'NNP'), ('tl', 'NNP')] 

 Lemmas are: 
>> [('=yl', '=yl'), ('tl', 'tl')] 

 Dependency tags are: 
>> [(('=yl', 'root'), 'root'), (('tl', '=yl'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 51 =================================

E zl 


------------------- Sentence 1 -------------------

 E zl 

Tokens are: 
>> ['E', 'zl'] 

 UPOS tags are: 
>> [('E', 'PROPN'), ('zl', 'PROPN')] 

 XPOS tags are: 
>> [('E', 'NNP'), ('zl', 'NNP')] 

 Lemmas are: 
>> [('E', 'E'), ('zl', 'zl')] 

 Dependency tags are: 
>> [(('E', 'root'), 'root'), (('zl', 'E'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 52 =================================

= E yl 


------------------- Sentence 1 -------------------

 = E yl 

Tokens are: 
>> ['=', 'E', 'yl'] 

 UPOS tags are: 
>> [('=', 'PUNCT'), ('E', 'PROPN'), ('yl', 'PROPN')] 

 XPOS tags are: 
>> [('=', 'NFP'), ('E', 'NNP'), ('yl', 'NNP')] 

 Lemmas are: 
>> [('=', '='), ('E', 'E'), ('yl', 'yl')] 

 Dependency tags are: 
>> [(('=', 'E'), 'punct'), (('E', 'root'), 'root'), (('yl', 'E'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 53 =================================

yl zl 


------------------- Sentence 1 -------------------

 yl zl 

Tokens are: 
>> ['yl', 'zl'] 

 UPOS tags are: 
>> [('yl', 'PROPN'), ('zl', 'PROPN')] 

 XPOS tags are: 
>> [('yl', 'NNP'), ('zl', 'NNP')] 

 Lemmas are: 
>> [('yl', 'yl'), ('zl', 'zl')] 

 Dependency tags are: 
>> [(('yl', 'zl'), 'compound'), (('zl', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 54 =================================

l 


------------------- Sentence 1 -------------------

 l 

Tokens are: 
>> ['l'] 

 UPOS tags are: 
>> [('l', 'PROPN')] 

 XPOS tags are: 
>> [('l', 'NNP')] 

 Lemmas are: 
>> [('l', 'l')] 

 Dependency tags are: 
>> [(('l', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 55 =================================

E yj 


------------------- Sentence 1 -------------------

 E yj 

Tokens are: 
>> ['E', 'yj'] 

 UPOS tags are: 
>> [('E', 'PROPN'), ('yj', 'PROPN')] 

 XPOS tags are: 
>> [('E', 'NNP'), ('yj', 'NNP')] 

 Lemmas are: 
>> [('E', 'E'), ('yj', 'yj')] 

 Dependency tags are: 
>> [(('E', 'root'), 'root'), (('yj', 'E'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 56 =================================

= wjk E zk 


------------------- Sentence 1 -------------------

 = wjk E zk 

Tokens are: 
>> ['=', 'wjk', 'E', 'zk'] 

 UPOS tags are: 
>> [('=', 'PUNCT'), ('wjk', 'PROPN'), ('E', 'PROPN'), ('zk', 'PROPN')] 

 XPOS tags are: 
>> [('=', 'NFP'), ('wjk', 'NNP'), ('E', 'NNP'), ('zk', 'NNP')] 

 Lemmas are: 
>> [('=', '='), ('wjk', 'wjk'), ('E', 'E'), ('zk', 'zk')] 

 Dependency tags are: 
>> [(('=', 'wjk'), 'punct'), (('wjk', 'root'), 'root'), (('E', 'wjk'), 'flat'), (('zk', 'wjk'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 57 =================================

E zj 


------------------- Sentence 1 -------------------

 E zj 

Tokens are: 
>> ['E', 'zj'] 

 UPOS tags are: 
>> [('E', 'PROPN'), ('zj', 'PROPN')] 

 XPOS tags are: 
>> [('E', 'NNP'), ('zj', 'NNP')] 

 Lemmas are: 
>> [('E', 'E'), ('zj', 'zj')] 

 Dependency tags are: 
>> [(('E', 'root'), 'root'), (('zj', 'E'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 58 =================================

= E yj 


------------------- Sentence 1 -------------------

 = E yj 

Tokens are: 
>> ['=', 'E', 'yj'] 

 UPOS tags are: 
>> [('=', 'PUNCT'), ('E', 'PROPN'), ('yj', 'PROPN')] 

 XPOS tags are: 
>> [('=', 'NFP'), ('E', 'NNP'), ('yj', 'NNP')] 

 Lemmas are: 
>> [('=', '='), ('E', 'E'), ('yj', 'yj')] 

 Dependency tags are: 
>> [(('=', 'E'), 'punct'), (('E', 'root'), 'root'), (('yj', 'E'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 59 =================================

yj zj 


------------------- Sentence 1 -------------------

 yj zj 

Tokens are: 
>> ['yj', 'zj'] 

 UPOS tags are: 
>> [('yj', 'PROPN'), ('zj', 'PROPN')] 

 XPOS tags are: 
>> [('yj', 'NNP'), ('zj', 'NNP')] 

 Lemmas are: 
>> [('yj', 'yj'), ('zj', 'zj')] 

 Dependency tags are: 
>> [(('yj', 'zj'), 'compound'), (('zj', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 60 =================================

E yk 


------------------- Sentence 1 -------------------

 E yk 

Tokens are: 
>> ['E', 'yk'] 

 UPOS tags are: 
>> [('E', 'PROPN'), ('yk', 'PROPN')] 

 XPOS tags are: 
>> [('E', 'NNP'), ('yk', 'NNP')] 

 Lemmas are: 
>> [('E', 'E'), ('yk', 'yk')] 

 Dependency tags are: 
>> [(('E', 'root'), 'root'), (('yk', 'E'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 61 =================================

= wkl E zl 


------------------- Sentence 1 -------------------

 = wkl E zl 

Tokens are: 
>> ['=', 'wkl', 'E', 'zl'] 

 UPOS tags are: 
>> [('=', 'PUNCT'), ('wkl', 'PROPN'), ('E', 'PROPN'), ('zl', 'PROPN')] 

 XPOS tags are: 
>> [('=', 'NFP'), ('wkl', 'NNP'), ('E', 'NNP'), ('zl', 'NNP')] 

 Lemmas are: 
>> [('=', '='), ('wkl', 'wkl'), ('E', 'E'), ('zl', 'zl')] 

 Dependency tags are: 
>> [(('=', 'wkl'), 'punct'), (('wkl', 'root'), 'root'), (('E', 'wkl'), 'flat'), (('zl', 'wkl'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 62 =================================

E zk 


------------------- Sentence 1 -------------------

 E zk 

Tokens are: 
>> ['E', 'zk'] 

 UPOS tags are: 
>> [('E', 'PROPN'), ('zk', 'PROPN')] 

 XPOS tags are: 
>> [('E', 'NNP'), ('zk', 'NNP')] 

 Lemmas are: 
>> [('E', 'E'), ('zk', 'zk')] 

 Dependency tags are: 
>> [(('E', 'root'), 'root'), (('zk', 'E'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 63 =================================

= E yk 


------------------- Sentence 1 -------------------

 = E yk 

Tokens are: 
>> ['=', 'E', 'yk'] 

 UPOS tags are: 
>> [('=', 'PUNCT'), ('E', 'PROPN'), ('yk', 'PUNCT')] 

 XPOS tags are: 
>> [('=', 'NFP'), ('E', 'NNP'), ('yk', '.')] 

 Lemmas are: 
>> [('=', '='), ('E', 'E'), ('yk', 'yk')] 

 Dependency tags are: 
>> [(('=', 'E'), 'punct'), (('E', 'root'), 'root'), (('yk', 'E'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 64 =================================

yk zk 


------------------- Sentence 1 -------------------

 yk zk 

Tokens are: 
>> ['yk', 'zk'] 

 UPOS tags are: 
>> [('yk', 'PROPN'), ('zk', 'PROPN')] 

 XPOS tags are: 
>> [('yk', 'NNP'), ('zk', 'NNP')] 

 Lemmas are: 
>> [('yk', 'yk'), ('zk', 'zk')] 

 Dependency tags are: 
>> [(('yk', 'root'), 'root'), (('zk', 'yk'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 65 =================================

wkl 


------------------- Sentence 1 -------------------

 wkl 

Tokens are: 
>> ['wkl'] 

 UPOS tags are: 
>> [('wkl', 'PROPN')] 

 XPOS tags are: 
>> [('wkl', 'NNP')] 

 Lemmas are: 
>> [('wkl', 'wkl')] 

 Dependency tags are: 
>> [(('wkl', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 66 =================================

wjk 


------------------- Sentence 1 -------------------

 wjk 

Tokens are: 
>> ['wjk'] 

 UPOS tags are: 
>> [('wjk', 'PROPN')] 

 XPOS tags are: 
>> [('wjk', 'NNP')] 

 Lemmas are: 
>> [('wjk', 'wjk')] 

 Dependency tags are: 
>> [(('wjk', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 67 =================================

wij 


------------------- Sentence 1 -------------------

 wij 

Tokens are: 
>> ['wij'] 

 UPOS tags are: 
>> [('wij', 'PROPN')] 

 XPOS tags are: 
>> [('wij', 'NNP')] 

 Lemmas are: 
>> [('wij', 'wij')] 

 Dependency tags are: 
>> [(('wij', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 68 =================================

i 


------------------- Sentence 1 -------------------

 i 

Tokens are: 
>> ['i'] 

 UPOS tags are: 
>> [('i', 'NUM')] 

 XPOS tags are: 
>> [('i', 'CD')] 

 Lemmas are: 
>> [('i', 'i')] 

 Dependency tags are: 
>> [(('i', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 69 =================================

j 


------------------- Sentence 1 -------------------

 j 

Tokens are: 
>> ['j'] 

 UPOS tags are: 
>> [('j', 'PROPN')] 

 XPOS tags are: 
>> [('j', 'NNP')] 

 Lemmas are: 
>> [('j', 'j')] 

 Dependency tags are: 
>> [(('j', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 70 =================================

k 


------------------- Sentence 1 -------------------

 k 

Tokens are: 
>> ['k'] 

 UPOS tags are: 
>> [('k', 'PROPN')] 

 XPOS tags are: 
>> [('k', 'NNP')] 

 Lemmas are: 
>> [('k', 'k')] 

 Dependency tags are: 
>> [(('k', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 71 =================================

yl = f (zl ) 


------------------- Sentence 1 -------------------

 yl = f (zl ) 

Tokens are: 
>> ['yl', '=', 'f', '(', 'zl', ')'] 

 UPOS tags are: 
>> [('yl', 'PROPN'), ('=', 'PUNCT'), ('f', 'PROPN'), ('(', 'PUNCT'), ('zl', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('yl', 'NNP'), ('=', ','), ('f', 'NNP'), ('(', '-LRB-'), ('zl', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('yl', 'yl'), ('=', '='), ('f', 'for'), ('(', '('), ('zl', 'zl'), (')', ')')] 

 Dependency tags are: 
>> [(('yl', 'root'), 'root'), (('=', 'yl'), 'punct'), (('f', 'yl'), 'appos'), (('(', 'zl'), 'punct'), (('zl', 'f'), 'appos'), ((')', 'zl'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 72 =================================

zl = wkl yk l 


------------------- Sentence 1 -------------------

 zl = wkl yk l 

Tokens are: 
>> ['zl', '=', 'wkl', 'yk', 'l'] 

 UPOS tags are: 
>> [('zl', 'NOUN'), ('=', 'PUNCT'), ('wkl', 'NOUN'), ('yk', 'NOUN'), ('l', 'PUNCT')] 

 XPOS tags are: 
>> [('zl', 'NN'), ('=', ','), ('wkl', 'NN'), ('yk', 'NN'), ('l', '.')] 

 Lemmas are: 
>> [('zl', 'zl'), ('=', '='), ('wkl', 'wkl'), ('yk', 'yk'), ('l', 'l')] 

 Dependency tags are: 
>> [(('zl', 'root'), 'root'), (('=', 'zl'), 'punct'), (('wkl', 'yk'), 'case'), (('yk', 'zl'), 'vocative'), (('l', 'zl'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 73 =================================

yj = f (zj ) 


------------------- Sentence 1 -------------------

 yj = f (zj ) 

Tokens are: 
>> ['yj', '=', 'f', '(', 'zj', ')'] 

 UPOS tags are: 
>> [('yj', 'PROPN'), ('=', 'PUNCT'), ('f', 'PROPN'), ('(', 'PUNCT'), ('zj', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('yj', 'NNP'), ('=', ','), ('f', 'NNP'), ('(', '-LRB-'), ('zj', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('yj', 'yj'), ('=', '='), ('f', 'for'), ('(', '('), ('zj', 'zj'), (')', ')')] 

 Dependency tags are: 
>> [(('yj', 'root'), 'root'), (('=', 'yj'), 'punct'), (('f', 'yj'), 'appos'), (('(', 'zj'), 'punct'), (('zj', 'f'), 'appos'), ((')', 'zj'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 74 =================================

zj = wij xi 


------------------- Sentence 1 -------------------

 zj = wij xi 

Tokens are: 
>> ['zj', '=', 'wij', 'xi'] 

 UPOS tags are: 
>> [('zj', 'PROPN'), ('=', 'PUNCT'), ('wij', 'PROPN'), ('xi', 'PROPN')] 

 XPOS tags are: 
>> [('zj', 'NNP'), ('=', ','), ('wij', 'NNP'), ('xi', 'NNP')] 

 Lemmas are: 
>> [('zj', 'zj'), ('=', '='), ('wij', 'wij'), ('xi', 'xi')] 

 Dependency tags are: 
>> [(('zj', 'root'), 'root'), (('=', 'zj'), 'punct'), (('wij', 'zj'), 'dep'), (('xi', 'zj'), 'appos')]

 Named Entites are: 
>> []

================================ Paragraph 75 =================================

yk = f (zk ) 


------------------- Sentence 1 -------------------

 yk = f (zk ) 

Tokens are: 
>> ['yk', '=', 'f', '(', 'zk', ')'] 

 UPOS tags are: 
>> [('yk', 'NOUN'), ('=', 'PUNCT'), ('f', 'PROPN'), ('(', 'PUNCT'), ('zk', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('yk', 'NN'), ('=', ','), ('f', 'NNP'), ('(', '-LRB-'), ('zk', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('yk', 'yk'), ('=', '='), ('f', 'for'), ('(', '('), ('zk', 'zk'), (')', ')')] 

 Dependency tags are: 
>> [(('yk', 'root'), 'root'), (('=', 'yk'), 'punct'), (('f', 'zk'), 'case'), (('(', 'zk'), 'punct'), (('zk', 'yk'), 'appos'), ((')', 'zk'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 76 =================================

zk = wjk yj 


------------------- Sentence 1 -------------------

 zk = wjk yj 

Tokens are: 
>> ['zk', '=', 'wjk', 'yj'] 

 UPOS tags are: 
>> [('zk', 'NOUN'), ('=', 'PUNCT'), ('wjk', 'PROPN'), ('yj', 'PROPN')] 

 XPOS tags are: 
>> [('zk', 'NN'), ('=', ','), ('wjk', 'NNP'), ('yj', 'NNP')] 

 Lemmas are: 
>> [('zk', 'zk'), ('=', '='), ('wjk', 'wjk'), ('yj', 'yj')] 

 Dependency tags are: 
>> [(('zk', 'root'), 'root'), (('=', 'zk'), 'punct'), (('wjk', 'yj'), 'compound'), (('yj', 'zk'), 'appos')]

 Named Entites are: 
>> []

================================ Paragraph 77 =================================

Output units  


------------------- Sentence 1 -------------------

 Output units 

Tokens are: 
>> ['Output', 'units'] 

 UPOS tags are: 
>> [('Output', 'NOUN'), ('units', 'NOUN')] 

 XPOS tags are: 
>> [('Output', 'NN'), ('units', 'NNS')] 

 Lemmas are: 
>> [('Output', 'output'), ('units', 'unit')] 

 Dependency tags are: 
>> [(('Output', 'units'), 'compound'), (('units', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 78 =================================

Input units  


------------------- Sentence 1 -------------------

 Input units 

Tokens are: 
>> ['Input', 'units'] 

 UPOS tags are: 
>> [('Input', 'NOUN'), ('units', 'NOUN')] 

 XPOS tags are: 
>> [('Input', 'NN'), ('units', 'NNS')] 

 Lemmas are: 
>> [('Input', 'input'), ('units', 'unit')] 

 Dependency tags are: 
>> [(('Input', 'units'), 'compound'), (('units', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 79 =================================

Hidden units H2  


------------------- Sentence 1 -------------------

 Hidden units H2 

Tokens are: 
>> ['Hidden', 'units', 'H2'] 

 UPOS tags are: 
>> [('Hidden', 'ADJ'), ('units', 'NOUN'), ('H2', 'PROPN')] 

 XPOS tags are: 
>> [('Hidden', 'JJ'), ('units', 'NNS'), ('H2', 'NNP')] 

 Lemmas are: 
>> [('Hidden', 'Hidden'), ('units', 'unit'), ('H2', 'H2')] 

 Dependency tags are: 
>> [(('Hidden', 'units'), 'amod'), (('units', 'root'), 'root'), (('H2', 'units'), 'appos')]

 Named Entites are: 
>> []

================================ Paragraph 80 =================================

Hidden units H1  


------------------- Sentence 1 -------------------

 Hidden units H1 

Tokens are: 
>> ['Hidden', 'units', 'H1'] 

 UPOS tags are: 
>> [('Hidden', 'ADJ'), ('units', 'NOUN'), ('H1', 'PROPN')] 

 XPOS tags are: 
>> [('Hidden', 'JJ'), ('units', 'NNS'), ('H1', 'NNP')] 

 Lemmas are: 
>> [('Hidden', 'Hidden'), ('units', 'unit'), ('H1', 'H1')] 

 Dependency tags are: 
>> [(('Hidden', 'units'), 'amod'), (('units', 'H1'), 'compound'), (('H1', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 81 =================================

wkl 


------------------- Sentence 1 -------------------

 wkl 

Tokens are: 
>> ['wkl'] 

 UPOS tags are: 
>> [('wkl', 'PROPN')] 

 XPOS tags are: 
>> [('wkl', 'NNP')] 

 Lemmas are: 
>> [('wkl', 'wkl')] 

 Dependency tags are: 
>> [(('wkl', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 82 =================================

wjk 


------------------- Sentence 1 -------------------

 wjk 

Tokens are: 
>> ['wjk'] 

 UPOS tags are: 
>> [('wjk', 'PROPN')] 

 XPOS tags are: 
>> [('wjk', 'NNP')] 

 Lemmas are: 
>> [('wjk', 'wjk')] 

 Dependency tags are: 
>> [(('wjk', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 83 =================================

wij 


------------------- Sentence 1 -------------------

 wij 

Tokens are: 
>> ['wij'] 

 UPOS tags are: 
>> [('wij', 'PROPN')] 

 XPOS tags are: 
>> [('wij', 'NNP')] 

 Lemmas are: 
>> [('wij', 'wij')] 

 Dependency tags are: 
>> [(('wij', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 84 =================================

k  H2 


------------------- Sentence 1 -------------------

 k  H2 

Tokens are: 
>> ['k', '\uf065', 'H2'] 

 UPOS tags are: 
>> [('k', 'NUM'), ('\uf065', 'PROPN'), ('H2', 'PROPN')] 

 XPOS tags are: 
>> [('k', 'CD'), ('\uf065', 'NNP'), ('H2', 'NNP')] 

 Lemmas are: 
>> [('k', 'k'), ('\uf065', '\uf065'), ('H2', 'H2')] 

 Dependency tags are: 
>> [(('k', 'root'), 'root'), (('\uf065', 'H2'), 'compound'), (('H2', 'k'), 'appos')]

 Named Entites are: 
>> []

================================ Paragraph 85 =================================

k  H2 


------------------- Sentence 1 -------------------

 k  H2 

Tokens are: 
>> ['k', '\uf065', 'H2'] 

 UPOS tags are: 
>> [('k', 'NUM'), ('\uf065', 'PROPN'), ('H2', 'PROPN')] 

 XPOS tags are: 
>> [('k', 'CD'), ('\uf065', 'NNP'), ('H2', 'NNP')] 

 Lemmas are: 
>> [('k', 'k'), ('\uf065', '\uf065'), ('H2', 'H2')] 

 Dependency tags are: 
>> [(('k', 'root'), 'root'), (('\uf065', 'H2'), 'compound'), (('H2', 'k'), 'appos')]

 Named Entites are: 
>> []

================================ Paragraph 86 =================================

I  out 


------------------- Sentence 1 -------------------

 I  out 

Tokens are: 
>> ['I', '\uf065', 'out'] 

 UPOS tags are: 
>> [('I', 'PRON'), ('\uf065', 'VERB'), ('out', 'ADP')] 

 XPOS tags are: 
>> [('I', 'PRP'), ('\uf065', 'VBP'), ('out', 'RP')] 

 Lemmas are: 
>> [('I', 'I'), ('\uf065', 'be'), ('out', 'out')] 

 Dependency tags are: 
>> [(('I', '\uf065'), 'nsubj'), (('\uf065', 'root'), 'root'), (('out', '\uf065'), 'advmod')]

 Named Entites are: 
>> []

================================ Paragraph 87 =================================

j  H1 


------------------- Sentence 1 -------------------

 j  H1 

Tokens are: 
>> ['j', '\uf065', 'H1'] 

 UPOS tags are: 
>> [('j', 'PROPN'), ('\uf065', 'PROPN'), ('H1', 'PROPN')] 

 XPOS tags are: 
>> [('j', 'NNP'), ('\uf065', 'NNP'), ('H1', 'NNP')] 

 Lemmas are: 
>> [('j', 'j'), ('\uf065', '\uf065'), ('H1', 'H1')] 

 Dependency tags are: 
>> [(('j', 'root'), 'root'), (('\uf065', 'j'), 'flat'), (('H1', 'j'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 88 =================================

i  Input 


------------------- Sentence 1 -------------------

 i  Input 

Tokens are: 
>> ['i', '\uf065', 'Input'] 

 UPOS tags are: 
>> [('i', 'PRON'), ('\uf065', 'VERB'), ('Input', 'NOUN')] 

 XPOS tags are: 
>> [('i', 'PRP'), ('\uf065', 'VBP'), ('Input', 'NN')] 

 Lemmas are: 
>> [('i', 'I'), ('\uf065', 'be'), ('Input', 'input')] 

 Dependency tags are: 
>> [(('i', '\uf065'), 'nsubj'), (('\uf065', 'root'), 'root'), (('Input', '\uf065'), 'nsubj')]

 Named Entites are: 
>> []

================================ Paragraph 89 =================================

i 


------------------- Sentence 1 -------------------

 i 

Tokens are: 
>> ['i'] 

 UPOS tags are: 
>> [('i', 'NUM')] 

 XPOS tags are: 
>> [('i', 'CD')] 

 Lemmas are: 
>> [('i', 'i')] 

 Dependency tags are: 
>> [(('i', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 90 =================================

2 8  M A Y  2 0 1 5  |  V O L  5 2 1  |  N A T U R E  |  4 3 7 


------------------- Sentence 1 -------------------

 2 8  M A Y  2 0 1 5  |  V O L  5 2 1  |  N A T U R E  |  4 3 7 

Tokens are: 
>> ['2', '8', 'M', 'A', 'Y', '2', '0', '1', '5', '|', 'V', 'O', 'L', '5', '2', '1', '|', 'N', 'A', 'T', 'U', 'R', 'E', '|', '4', '3', '7'] 

 UPOS tags are: 
>> [('2', 'NUM'), ('8', 'NUM'), ('M', 'NOUN'), ('A', 'NUM'), ('Y', 'NOUN'), ('2', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('5', 'NUM'), ('|', 'SYM'), ('V', 'NOUN'), ('O', 'NOUN'), ('L', 'NOUN'), ('5', 'NUM'), ('2', 'NUM'), ('1', 'NUM'), ('|', 'SYM'), ('N', 'NOUN'), ('A', 'NUM'), ('T', 'NOUN'), ('U', 'NOUN'), ('R', 'NOUN'), ('E', 'NOUN'), ('|', 'PUNCT'), ('4', 'NUM'), ('3', 'NUM'), ('7', 'NUM')] 

 XPOS tags are: 
>> [('2', 'CD'), ('8', 'CD'), ('M', 'NNS'), ('A', 'LS'), ('Y', 'NN'), ('2', 'CD'), ('0', 'CD'), ('1', 'CD'), ('5', 'CD'), ('|', 'SYM'), ('V', 'NN'), ('O', 'NNS'), ('L', 'NNS'), ('5', 'CD'), ('2', 'CD'), ('1', 'CD'), ('|', 'SYM'), ('N', 'NN'), ('A', 'CD'), ('T', 'NN'), ('U', 'NN'), ('R', 'NN'), ('E', 'NN'), ('|', ':'), ('4', 'CD'), ('3', 'CD'), ('7', 'CD')] 

 Lemmas are: 
>> [('2', '2'), ('8', '8'), ('M', 'm'), ('A', 'a'), ('Y', 'Y'), ('2', '2'), ('0', '0'), ('1', '1'), ('5', '5'), ('|', '|'), ('V', 'V'), ('O', 'o'), ('L', 'L'), ('5', '5'), ('2', '2'), ('1', '1'), ('|', '|'), ('N', 'N'), ('A', 'a'), ('T', 'T'), ('U', 'U'), ('R', 'R'), ('E', 'e'), ('|', '|'), ('4', '4'), ('3', '3'), ('7', '7')] 

 Dependency tags are: 
>> [(('2', 'M'), 'nummod'), (('8', 'M'), 'nummod'), (('M', 'root'), 'root'), (('A', 'M'), 'nummod'), (('Y', 'M'), 'appos'), (('2', 'Y'), 'nummod'), (('0', '1'), 'compound'), (('1', '2'), 'conj'), (('5', '1'), 'compound'), (('|', '1'), 'compound'), (('V', 'O'), 'compound'), (('O', '|'), 'appos'), (('L', 'O'), 'appos'), (('5', 'L'), 'nummod'), (('2', 'L'), 'nummod'), (('1', '2'), 'conj'), (('|', 'N'), 'compound'), (('N', 'L'), 'appos'), (('A', 'T'), 'nummod'), (('T', 'N'), 'appos'), (('U', 'R'), 'compound'), (('R', 'E'), 'compound'), (('E', 'N'), 'appos'), (('|', '4'), 'punct'), (('4', 'E'), 'appos'), (('3', '4'), 'flat'), (('7', '3'), 'flat')]

 Named Entites are: 
>> [('4', 'CARDINAL'), ('3', 'CARDINAL')]

================================ Paragraph 91 =================================

REVIEW INSIGHT 


------------------- Sentence 1 -------------------

 REVIEW INSIGHT 

Tokens are: 
>> ['REVIEW', 'INSIGHT'] 

 UPOS tags are: 
>> [('REVIEW', 'NOUN'), ('INSIGHT', 'NOUN')] 

 XPOS tags are: 
>> [('REVIEW', 'NN'), ('INSIGHT', 'NN')] 

 Lemmas are: 
>> [('REVIEW', 'review'), ('INSIGHT', 'insight')] 

 Dependency tags are: 
>> [(('REVIEW', 'INSIGHT'), 'compound'), (('INSIGHT', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 92 =================================

© 2015 Macmillan Publishers Limited. All rights reserved


------------------- Sentence 1 -------------------

 © 2015 Macmillan Publishers Limited. 

Tokens are: 
>> ['©', '2015', 'Macmillan', 'Publishers', 'Limited', '.'] 

 UPOS tags are: 
>> [('©', 'ADP'), ('2015', 'NUM'), ('Macmillan', 'PROPN'), ('Publishers', 'PROPN'), ('Limited', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('©', 'IN'), ('2015', 'CD'), ('Macmillan', 'NNP'), ('Publishers', 'NNPS'), ('Limited', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('©', 'at'), ('2015', '2015'), ('Macmillan', 'Macmillan'), ('Publishers', 'Publisher'), ('Limited', 'Limited'), ('.', '.')] 

 Dependency tags are: 
>> [(('©', 'Limited'), 'case'), (('2015', 'Limited'), 'nummod'), (('Macmillan', 'Limited'), 'compound'), (('Publishers', 'Limited'), 'compound'), (('Limited', 'root'), 'root'), (('.', 'Limited'), 'punct')]

 Named Entites are: 
>> [('2015', 'DATE'), ('Macmillan Publishers Limited', 'ORG')]

------------------- Sentence 2 -------------------

 All rights reserved 

Tokens are: 
>> ['All', 'rights', 'reserved'] 

 UPOS tags are: 
>> [('All', 'DET'), ('rights', 'NOUN'), ('reserved', 'VERB')] 

 XPOS tags are: 
>> [('All', 'DT'), ('rights', 'NNS'), ('reserved', 'VBN')] 

 Lemmas are: 
>> [('All', 'all'), ('rights', 'rights'), ('reserved', 'reserve')] 

 Dependency tags are: 
>> [(('All', 'rights'), 'det'), (('rights', 'root'), 'root'), (('reserved', 'rights'), 'acl')]

 Named Entites are: 
>> []

================================ Paragraph 93 =================================

raw pixels could not possibly distinguish the latter two, while putting  the former two in the same category. This is why shallow classifiers  require a good feature extractor that solves the selectivity–invariance  dilemma — one that produces representations that are selective to  the aspects of the image that are important for discrimination, but  that are invariant to irrelevant aspects such as the pose of the animal.  To make classifiers more powerful, one can use generic non-linear  features, as with kernel methods20, but generic features such as those  arising with the Gaussian kernel do not allow the learner to general- ize well far from the training examples21. The conventional option is  to hand design good feature extractors, which requires a consider- able amount of engineering skill and domain expertise. But this can  all be avoided if good features can be learned automatically using a  general-purpose learning procedure. This is the key advantage of  deep learning.  


------------------- Sentence 1 -------------------

 raw pixels could not possibly distinguish the latter two, while putting  the former two in the same category. 

Tokens are: 
>> ['raw', 'pixels', 'could', 'not', 'possibly', 'distinguish', 'the', 'latter', 'two', ',', 'while', 'putting', 'the', 'former', 'two', 'in', 'the', 'same', 'category', '.'] 

 UPOS tags are: 
>> [('raw', 'ADJ'), ('pixels', 'NOUN'), ('could', 'AUX'), ('not', 'PART'), ('possibly', 'ADV'), ('distinguish', 'VERB'), ('the', 'DET'), ('latter', 'ADJ'), ('two', 'NUM'), (',', 'PUNCT'), ('while', 'SCONJ'), ('putting', 'VERB'), ('the', 'DET'), ('former', 'ADJ'), ('two', 'NUM'), ('in', 'ADP'), ('the', 'DET'), ('same', 'ADJ'), ('category', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('raw', 'JJ'), ('pixels', 'NNS'), ('could', 'MD'), ('not', 'RB'), ('possibly', 'RB'), ('distinguish', 'VB'), ('the', 'DT'), ('latter', 'JJ'), ('two', 'CD'), (',', ','), ('while', 'IN'), ('putting', 'VBG'), ('the', 'DT'), ('former', 'JJ'), ('two', 'CD'), ('in', 'IN'), ('the', 'DT'), ('same', 'JJ'), ('category', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('raw', 'raw'), ('pixels', 'pixel'), ('could', 'could'), ('not', 'not'), ('possibly', 'possibly'), ('distinguish', 'distinguish'), ('the', 'the'), ('latter', 'latter'), ('two', 'two'), (',', ','), ('while', 'while'), ('putting', 'put'), ('the', 'the'), ('former', 'former'), ('two', 'two'), ('in', 'in'), ('the', 'the'), ('same', 'same'), ('category', 'category'), ('.', '.')] 

 Dependency tags are: 
>> [(('raw', 'pixels'), 'amod'), (('pixels', 'distinguish'), 'nsubj'), (('could', 'distinguish'), 'aux'), (('not', 'distinguish'), 'advmod'), (('possibly', 'distinguish'), 'advmod'), (('distinguish', 'root'), 'root'), (('the', 'two'), 'det'), (('latter', 'two'), 'amod'), (('two', 'distinguish'), 'obj'), ((',', 'distinguish'), 'punct'), (('while', 'putting'), 'mark'), (('putting', 'distinguish'), 'advcl'), (('the', 'two'), 'det'), (('former', 'two'), 'amod'), (('two', 'putting'), 'obj'), (('in', 'category'), 'case'), (('the', 'category'), 'det'), (('same', 'category'), 'amod'), (('category', 'putting'), 'obl'), (('.', 'distinguish'), 'punct')]

 Named Entites are: 
>> [('two', 'CARDINAL'), ('two', 'CARDINAL')]

------------------- Sentence 2 -------------------

 This is why shallow classifiers  require a good feature extractor that solves the selectivity–invariance  dilemma — one that produces representations that are selective to  the aspects of the image that are important for discrimination, but  that are invariant to irrelevant aspects such as the pose of the animal. 

Tokens are: 
>> ['This', 'is', 'why', 'shallow', 'classifiers', 'require', 'a', 'good', 'feature', 'extractor', 'that', 'solves', 'the', 'selectivity', '–', 'invariance', 'dilemma', '—', 'one', 'that', 'produces', 'representations', 'that', 'are', 'selective', 'to', 'the', 'aspects', 'of', 'the', 'image', 'that', 'are', 'important', 'for', 'discrimination', ',', 'but', 'that', 'are', 'invariant', 'to', 'irrelevant', 'aspects', 'such', 'as', 'the', 'pose', 'of', 'the', 'animal', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('is', 'AUX'), ('why', 'SCONJ'), ('shallow', 'ADJ'), ('classifiers', 'NOUN'), ('require', 'VERB'), ('a', 'DET'), ('good', 'ADJ'), ('feature', 'NOUN'), ('extractor', 'NOUN'), ('that', 'PRON'), ('solves', 'VERB'), ('the', 'DET'), ('selectivity', 'NOUN'), ('–', 'PUNCT'), ('invariance', 'NOUN'), ('dilemma', 'NOUN'), ('—', 'PUNCT'), ('one', 'NUM'), ('that', 'PRON'), ('produces', 'VERB'), ('representations', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('selective', 'ADJ'), ('to', 'ADP'), ('the', 'DET'), ('aspects', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('image', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('important', 'ADJ'), ('for', 'ADP'), ('discrimination', 'NOUN'), (',', 'PUNCT'), ('but', 'CCONJ'), ('that', 'PRON'), ('are', 'AUX'), ('invariant', 'ADJ'), ('to', 'ADP'), ('irrelevant', 'ADJ'), ('aspects', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('the', 'DET'), ('pose', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('animal', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('is', 'VBZ'), ('why', 'WRB'), ('shallow', 'JJ'), ('classifiers', 'NNS'), ('require', 'VBP'), ('a', 'DT'), ('good', 'JJ'), ('feature', 'NN'), ('extractor', 'NN'), ('that', 'WDT'), ('solves', 'VBZ'), ('the', 'DT'), ('selectivity', 'NN'), ('–', ':'), ('invariance', 'NN'), ('dilemma', 'NN'), ('—', ':'), ('one', 'CD'), ('that', 'WDT'), ('produces', 'VBZ'), ('representations', 'NNS'), ('that', 'WDT'), ('are', 'VBP'), ('selective', 'JJ'), ('to', 'IN'), ('the', 'DT'), ('aspects', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('image', 'NN'), ('that', 'WDT'), ('are', 'VBP'), ('important', 'JJ'), ('for', 'IN'), ('discrimination', 'NN'), (',', ','), ('but', 'CC'), ('that', 'DT'), ('are', 'VBP'), ('invariant', 'JJ'), ('to', 'IN'), ('irrelevant', 'JJ'), ('aspects', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('the', 'DT'), ('pose', 'NN'), ('of', 'IN'), ('the', 'DT'), ('animal', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('is', 'be'), ('why', 'why'), ('shallow', 'shallow'), ('classifiers', 'classifier'), ('require', 'require'), ('a', 'a'), ('good', 'good'), ('feature', 'feature'), ('extractor', 'extractor'), ('that', 'that'), ('solves', 'solve'), ('the', 'the'), ('selectivity', 'selectivity'), ('–', '-'), ('invariance', 'invariance'), ('dilemma', 'dilemma'), ('—', '—'), ('one', 'one'), ('that', 'that'), ('produces', 'produce'), ('representations', 'representation'), ('that', 'that'), ('are', 'be'), ('selective', 'selective'), ('to', 'to'), ('the', 'the'), ('aspects', 'aspect'), ('of', 'of'), ('the', 'the'), ('image', 'image'), ('that', 'that'), ('are', 'be'), ('important', 'important'), ('for', 'for'), ('discrimination', 'discrimination'), (',', ','), ('but', 'but'), ('that', 'that'), ('are', 'be'), ('invariant', 'invariant'), ('to', 'to'), ('irrelevant', 'irrelevant'), ('aspects', 'aspect'), ('such', 'such'), ('as', 'as'), ('the', 'the'), ('pose', 'pose'), ('of', 'of'), ('the', 'the'), ('animal', 'animal'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'why'), 'nsubj'), (('is', 'why'), 'cop'), (('why', 'root'), 'root'), (('shallow', 'classifiers'), 'amod'), (('classifiers', 'require'), 'nsubj'), (('require', 'why'), 'acl:relcl'), (('a', 'extractor'), 'det'), (('good', 'extractor'), 'amod'), (('feature', 'extractor'), 'compound'), (('extractor', 'require'), 'obj'), (('that', 'solves'), 'nsubj'), (('solves', 'extractor'), 'acl:relcl'), (('the', 'selectivity'), 'det'), (('selectivity', 'solves'), 'obj'), (('–', 'dilemma'), 'punct'), (('invariance', 'dilemma'), 'compound'), (('dilemma', 'selectivity'), 'appos'), (('—', 'one'), 'punct'), (('one', 'selectivity'), 'appos'), (('that', 'produces'), 'nsubj'), (('produces', 'one'), 'acl:relcl'), (('representations', 'produces'), 'obj'), (('that', 'selective'), 'nsubj'), (('are', 'selective'), 'cop'), (('selective', 'representations'), 'acl:relcl'), (('to', 'aspects'), 'case'), (('the', 'aspects'), 'det'), (('aspects', 'selective'), 'obl'), (('of', 'image'), 'case'), (('the', 'image'), 'det'), (('image', 'aspects'), 'nmod'), (('that', 'important'), 'nsubj'), (('are', 'important'), 'cop'), (('important', 'image'), 'acl:relcl'), (('for', 'discrimination'), 'case'), (('discrimination', 'important'), 'obl'), ((',', 'invariant'), 'punct'), (('but', 'invariant'), 'cc'), (('that', 'invariant'), 'nsubj'), (('are', 'invariant'), 'cop'), (('invariant', 'why'), 'conj'), (('to', 'aspects'), 'case'), (('irrelevant', 'aspects'), 'amod'), (('aspects', 'invariant'), 'obl'), (('such', 'pose'), 'case'), (('as', 'such'), 'fixed'), (('the', 'pose'), 'det'), (('pose', 'aspects'), 'nmod'), (('of', 'animal'), 'case'), (('the', 'animal'), 'det'), (('animal', 'pose'), 'nmod'), (('.', 'why'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 To make classifiers more powerful, one can use generic non-linear  features, as with kernel methods20, but generic features such as those  arising with the Gaussian kernel do not allow the learner to general- ize well far from the training examples 

Tokens are: 
>> ['To', 'make', 'classifiers', 'more', 'powerful', ',', 'one', 'can', 'use', 'generic', 'non-linear', 'features', ',', 'as', 'with', 'kernel', 'methods', '20', ',', 'but', 'generic', 'features', 'such', 'as', 'those', 'arising', 'with', 'the', 'Gaussian', 'kernel', 'do', 'not', 'allow', 'the', 'learner', 'to', 'general', '-', 'ize', 'well', 'far', 'from', 'the', 'training', 'example', 's'] 

 UPOS tags are: 
>> [('To', 'PART'), ('make', 'VERB'), ('classifiers', 'NOUN'), ('more', 'ADV'), ('powerful', 'ADJ'), (',', 'PUNCT'), ('one', 'PRON'), ('can', 'AUX'), ('use', 'VERB'), ('generic', 'ADJ'), ('non-linear', 'ADJ'), ('features', 'NOUN'), (',', 'PUNCT'), ('as', 'ADP'), ('with', 'ADP'), ('kernel', 'NOUN'), ('methods', 'NOUN'), ('20', 'NUM'), (',', 'PUNCT'), ('but', 'CCONJ'), ('generic', 'ADJ'), ('features', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('those', 'DET'), ('arising', 'VERB'), ('with', 'ADP'), ('the', 'DET'), ('Gaussian', 'ADJ'), ('kernel', 'NOUN'), ('do', 'AUX'), ('not', 'PART'), ('allow', 'VERB'), ('the', 'DET'), ('learner', 'NOUN'), ('to', 'PART'), ('general', 'VERB'), ('-', 'PUNCT'), ('ize', 'VERB'), ('well', 'ADV'), ('far', 'ADV'), ('from', 'ADP'), ('the', 'DET'), ('training', 'NOUN'), ('example', 'NOUN'), ('s', 'PART')] 

 XPOS tags are: 
>> [('To', 'TO'), ('make', 'VB'), ('classifiers', 'NNS'), ('more', 'RBR'), ('powerful', 'JJ'), (',', ','), ('one', 'PRP'), ('can', 'MD'), ('use', 'VB'), ('generic', 'JJ'), ('non-linear', 'JJ'), ('features', 'NNS'), (',', ','), ('as', 'IN'), ('with', 'IN'), ('kernel', 'NN'), ('methods', 'NNS'), ('20', 'CD'), (',', ','), ('but', 'CC'), ('generic', 'JJ'), ('features', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('those', 'DT'), ('arising', 'VBG'), ('with', 'IN'), ('the', 'DT'), ('Gaussian', 'JJ'), ('kernel', 'NN'), ('do', 'VBP'), ('not', 'RB'), ('allow', 'VB'), ('the', 'DT'), ('learner', 'NN'), ('to', 'TO'), ('general', 'VB'), ('-', 'HYPH'), ('ize', 'VB'), ('well', 'RB'), ('far', 'RB'), ('from', 'IN'), ('the', 'DT'), ('training', 'NN'), ('example', 'NN'), ('s', 'POS')] 

 Lemmas are: 
>> [('To', 'to'), ('make', 'make'), ('classifiers', 'classifier'), ('more', 'more'), ('powerful', 'powerful'), (',', ','), ('one', 'one'), ('can', 'can'), ('use', 'use'), ('generic', 'generic'), ('non-linear', 'non-linear'), ('features', 'feature'), (',', ','), ('as', 'as'), ('with', 'with'), ('kernel', 'kernel'), ('methods', 'method'), ('20', '20'), (',', ','), ('but', 'but'), ('generic', 'generic'), ('features', 'feature'), ('such', 'such'), ('as', 'as'), ('those', 'that'), ('arising', 'arise'), ('with', 'with'), ('the', 'the'), ('Gaussian', 'Gaussian'), ('kernel', 'kernel'), ('do', 'do'), ('not', 'not'), ('allow', 'allow'), ('the', 'the'), ('learner', 'learner'), ('to', 'to'), ('general', 'general'), ('-', '-'), ('ize', 'ize'), ('well', 'well'), ('far', 'far'), ('from', 'from'), ('the', 'the'), ('training', 'training'), ('example', 'example'), ('s', "'s")] 

 Dependency tags are: 
>> [(('To', 'make'), 'mark'), (('make', 'use'), 'advcl'), (('classifiers', 'make'), 'obj'), (('more', 'powerful'), 'advmod'), (('powerful', 'make'), 'xcomp'), ((',', 'make'), 'punct'), (('one', 'use'), 'nsubj'), (('can', 'use'), 'aux'), (('use', 'root'), 'root'), (('generic', 'features'), 'amod'), (('non-linear', 'features'), 'amod'), (('features', 'use'), 'obj'), ((',', 'use'), 'punct'), (('as', 'methods'), 'case'), (('with', 'methods'), 'case'), (('kernel', 'methods'), 'compound'), (('methods', 'use'), 'obl'), (('20', 'methods'), 'nummod'), ((',', 'allow'), 'punct'), (('but', 'allow'), 'cc'), (('generic', 'features'), 'amod'), (('features', 'allow'), 'nsubj'), (('such', 'those'), 'case'), (('as', 'such'), 'fixed'), (('those', 'features'), 'nmod'), (('arising', 'features'), 'acl'), (('with', 'kernel'), 'case'), (('the', 'kernel'), 'det'), (('Gaussian', 'kernel'), 'amod'), (('kernel', 'arising'), 'obl'), (('do', 'allow'), 'aux'), (('not', 'allow'), 'advmod'), (('allow', 'use'), 'conj'), (('the', 'learner'), 'det'), (('learner', 'allow'), 'obj'), (('to', 'ize'), 'mark'), (('general', 'ize'), 'obl:npmod'), (('-', 'ize'), 'punct'), (('ize', 'allow'), 'xcomp'), (('well', 'far'), 'advmod'), (('far', 'ize'), 'advmod'), (('from', 'example'), 'case'), (('the', 'example'), 'det'), (('training', 'example'), 'compound'), (('example', 'far'), 'obl'), (('s', 'example'), 'case')]

 Named Entites are: 
>> [('20', 'CARDINAL')]

------------------- Sentence 4 -------------------

 21. 

Tokens are: 
>> ['21', '.'] 

 UPOS tags are: 
>> [('21', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('21', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('21', '21'), ('.', '.')] 

 Dependency tags are: 
>> [(('21', 'root'), 'root'), (('.', '21'), 'punct')]

 Named Entites are: 
>> [('21', 'CARDINAL')]

------------------- Sentence 5 -------------------

 The conventional option is  to hand design good feature extractors, which requires a consider- able amount of engineering skill and domain expertise. 

Tokens are: 
>> ['The', 'conventional', 'option', 'is', 'to', 'hand', 'design', 'good', 'feature', 'extractors', ',', 'which', 'requires', 'a', 'consider', '-', 'able', 'amount', 'of', 'engineering', 'skill', 'and', 'domain', 'expertise', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('conventional', 'ADJ'), ('option', 'NOUN'), ('is', 'AUX'), ('to', 'PART'), ('hand', 'VERB'), ('design', 'VERB'), ('good', 'ADJ'), ('feature', 'NOUN'), ('extractors', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('requires', 'VERB'), ('a', 'DET'), ('consider', 'NOUN'), ('-', 'PUNCT'), ('able', 'ADJ'), ('amount', 'NOUN'), ('of', 'ADP'), ('engineering', 'NOUN'), ('skill', 'NOUN'), ('and', 'CCONJ'), ('domain', 'NOUN'), ('expertise', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('conventional', 'JJ'), ('option', 'NN'), ('is', 'VBZ'), ('to', 'TO'), ('hand', 'VB'), ('design', 'VB'), ('good', 'JJ'), ('feature', 'NN'), ('extractors', 'NNS'), (',', ','), ('which', 'WDT'), ('requires', 'VBZ'), ('a', 'DT'), ('consider', 'NN'), ('-', 'HYPH'), ('able', 'JJ'), ('amount', 'NN'), ('of', 'IN'), ('engineering', 'NN'), ('skill', 'NN'), ('and', 'CC'), ('domain', 'NN'), ('expertise', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('conventional', 'conventional'), ('option', 'option'), ('is', 'be'), ('to', 'to'), ('hand', 'hand'), ('design', 'design'), ('good', 'good'), ('feature', 'feature'), ('extractors', 'extractor'), (',', ','), ('which', 'which'), ('requires', 'require'), ('a', 'a'), ('consider', 'consider'), ('-', '-'), ('able', 'able'), ('amount', 'amount'), ('of', 'of'), ('engineering', 'engineering'), ('skill', 'skill'), ('and', 'and'), ('domain', 'domain'), ('expertise', 'expertise'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'option'), 'det'), (('conventional', 'option'), 'amod'), (('option', 'is'), 'nsubj'), (('is', 'root'), 'root'), (('to', 'hand'), 'mark'), (('hand', 'is'), 'ccomp'), (('design', 'hand'), 'xcomp'), (('good', 'extractors'), 'amod'), (('feature', 'extractors'), 'compound'), (('extractors', 'design'), 'obj'), ((',', 'extractors'), 'punct'), (('which', 'requires'), 'nsubj'), (('requires', 'extractors'), 'acl:relcl'), (('a', 'amount'), 'det'), (('consider', 'able'), 'obl:npmod'), (('-', 'able'), 'punct'), (('able', 'amount'), 'amod'), (('amount', 'requires'), 'obj'), (('of', 'skill'), 'case'), (('engineering', 'skill'), 'compound'), (('skill', 'amount'), 'nmod'), (('and', 'expertise'), 'cc'), (('domain', 'expertise'), 'compound'), (('expertise', 'skill'), 'conj'), (('.', 'is'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 But this can  all be avoided if good features can be learned automatically using a  general-purpose learning procedure. 

Tokens are: 
>> ['But', 'this', 'can', 'all', 'be', 'avoided', 'if', 'good', 'features', 'can', 'be', 'learned', 'automatically', 'using', 'a', 'general', '-', 'purpose', 'learning', 'procedure', '.'] 

 UPOS tags are: 
>> [('But', 'CCONJ'), ('this', 'PRON'), ('can', 'AUX'), ('all', 'ADV'), ('be', 'AUX'), ('avoided', 'VERB'), ('if', 'SCONJ'), ('good', 'ADJ'), ('features', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('learned', 'VERB'), ('automatically', 'ADV'), ('using', 'VERB'), ('a', 'DET'), ('general', 'ADJ'), ('-', 'PUNCT'), ('purpose', 'NOUN'), ('learning', 'NOUN'), ('procedure', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('But', 'CC'), ('this', 'DT'), ('can', 'MD'), ('all', 'RB'), ('be', 'VB'), ('avoided', 'VBN'), ('if', 'IN'), ('good', 'JJ'), ('features', 'NNS'), ('can', 'MD'), ('be', 'VB'), ('learned', 'VBN'), ('automatically', 'RB'), ('using', 'VBG'), ('a', 'DT'), ('general', 'JJ'), ('-', 'HYPH'), ('purpose', 'NN'), ('learning', 'NN'), ('procedure', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('But', 'but'), ('this', 'this'), ('can', 'can'), ('all', 'all'), ('be', 'be'), ('avoided', 'avoid'), ('if', 'if'), ('good', 'good'), ('features', 'feature'), ('can', 'can'), ('be', 'be'), ('learned', 'learn'), ('automatically', 'automatically'), ('using', 'use'), ('a', 'a'), ('general', 'general'), ('-', '-'), ('purpose', 'purpose'), ('learning', 'learning'), ('procedure', 'procedure'), ('.', '.')] 

 Dependency tags are: 
>> [(('But', 'avoided'), 'cc'), (('this', 'avoided'), 'nsubj:pass'), (('can', 'avoided'), 'aux'), (('all', 'avoided'), 'advmod'), (('be', 'avoided'), 'aux:pass'), (('avoided', 'root'), 'root'), (('if', 'learned'), 'mark'), (('good', 'features'), 'amod'), (('features', 'learned'), 'nsubj:pass'), (('can', 'learned'), 'aux'), (('be', 'learned'), 'aux:pass'), (('learned', 'avoided'), 'advcl'), (('automatically', 'using'), 'advmod'), (('using', 'learned'), 'advcl'), (('a', 'procedure'), 'det'), (('general', 'purpose'), 'amod'), (('-', 'purpose'), 'punct'), (('purpose', 'procedure'), 'compound'), (('learning', 'procedure'), 'compound'), (('procedure', 'using'), 'obj'), (('.', 'avoided'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 7 -------------------

 This is the key advantage of  deep learning. 

Tokens are: 
>> ['This', 'is', 'the', 'key', 'advantage', 'of', 'deep', 'learning', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('is', 'AUX'), ('the', 'DET'), ('key', 'ADJ'), ('advantage', 'NOUN'), ('of', 'ADP'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('is', 'VBZ'), ('the', 'DT'), ('key', 'JJ'), ('advantage', 'NN'), ('of', 'IN'), ('deep', 'JJ'), ('learning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('is', 'be'), ('the', 'the'), ('key', 'key'), ('advantage', 'advantage'), ('of', 'of'), ('deep', 'deep'), ('learning', 'learning'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'advantage'), 'nsubj'), (('is', 'advantage'), 'cop'), (('the', 'advantage'), 'det'), (('key', 'advantage'), 'amod'), (('advantage', 'root'), 'root'), (('of', 'learning'), 'case'), (('deep', 'learning'), 'amod'), (('learning', 'advantage'), 'nmod'), (('.', 'advantage'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 94 =================================

A deep-learning architecture is a multilayer stack of simple mod- ules, all (or most) of which are subject to learning, and many of which  compute non-linear input–output mappings. Each module in the  stack transforms its input to increase both the selectivity and the  invariance of the representation. With multiple non-linear layers, say  a depth of 5 to 20, a system can implement extremely intricate func- tions of its inputs that are simultaneously sensitive to minute details  — distinguishing Samoyeds from white wolves — and insensitive to  large irrelevant variations such as the background, pose, lighting and  surrounding objects.  


------------------- Sentence 1 -------------------

 A deep-learning architecture is a multilayer stack of simple mod- ules, all (or most) of which are subject to learning, and many of which  compute non-linear input–output mappings. 

Tokens are: 
>> ['A', 'deep-learning', 'architecture', 'is', 'a', 'multilayer', 'stack', 'of', 'simple', 'mod', '-', 'ules', ',', 'all', '(', 'or', 'most', ')', 'of', 'which', 'are', 'subject', 'to', 'learning', ',', 'and', 'many', 'of', 'which', 'compute', 'non-linear', 'input–output', 'mappings', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('deep-learning', 'ADJ'), ('architecture', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('multilayer', 'ADJ'), ('stack', 'NOUN'), ('of', 'ADP'), ('simple', 'ADJ'), ('mod', 'NOUN'), ('-', 'PUNCT'), ('ules', 'NOUN'), (',', 'PUNCT'), ('all', 'DET'), ('(', 'PUNCT'), ('or', 'CCONJ'), ('most', 'ADJ'), (')', 'PUNCT'), ('of', 'ADP'), ('which', 'PRON'), ('are', 'AUX'), ('subject', 'ADJ'), ('to', 'ADP'), ('learning', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('many', 'ADJ'), ('of', 'ADP'), ('which', 'PRON'), ('compute', 'VERB'), ('non-linear', 'ADJ'), ('input–output', 'NOUN'), ('mappings', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('deep-learning', 'JJ'), ('architecture', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('multilayer', 'JJ'), ('stack', 'NN'), ('of', 'IN'), ('simple', 'JJ'), ('mod', 'NN'), ('-', 'HYPH'), ('ules', 'NNS'), (',', ','), ('all', 'DT'), ('(', '-LRB-'), ('or', 'CC'), ('most', 'JJS'), (')', '-RRB-'), ('of', 'IN'), ('which', 'WDT'), ('are', 'VBP'), ('subject', 'JJ'), ('to', 'IN'), ('learning', 'NN'), (',', ','), ('and', 'CC'), ('many', 'JJ'), ('of', 'IN'), ('which', 'WDT'), ('compute', 'VBP'), ('non-linear', 'JJ'), ('input–output', 'NN'), ('mappings', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('deep-learning', 'deep-learning'), ('architecture', 'architecture'), ('is', 'be'), ('a', 'a'), ('multilayer', 'multilayer'), ('stack', 'stack'), ('of', 'of'), ('simple', 'simple'), ('mod', 'mod'), ('-', '-'), ('ules', 'ule'), (',', ','), ('all', 'all'), ('(', '('), ('or', 'or'), ('most', 'most'), (')', ')'), ('of', 'of'), ('which', 'which'), ('are', 'be'), ('subject', 'subject'), ('to', 'to'), ('learning', 'learning'), (',', ','), ('and', 'and'), ('many', 'many'), ('of', 'of'), ('which', 'which'), ('compute', 'compute'), ('non-linear', 'non-linear'), ('input–output', 'input–output'), ('mappings', 'mapping'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'architecture'), 'det'), (('deep-learning', 'architecture'), 'amod'), (('architecture', 'stack'), 'nsubj'), (('is', 'stack'), 'cop'), (('a', 'stack'), 'det'), (('multilayer', 'stack'), 'amod'), (('stack', 'root'), 'root'), (('of', 'ules'), 'case'), (('simple', 'ules'), 'amod'), (('mod', 'ules'), 'compound'), (('-', 'ules'), 'punct'), (('ules', 'stack'), 'nmod'), ((',', 'all'), 'punct'), (('all', 'subject'), 'nsubj'), (('(', 'most'), 'punct'), (('or', 'most'), 'cc'), (('most', 'all'), 'conj'), ((')', 'most'), 'punct'), (('of', 'which'), 'case'), (('which', 'subject'), 'obl'), (('are', 'subject'), 'cop'), (('subject', 'ules'), 'acl:relcl'), (('to', 'learning'), 'case'), (('learning', 'subject'), 'obl'), ((',', 'compute'), 'punct'), (('and', 'compute'), 'cc'), (('many', 'compute'), 'nsubj'), (('of', 'which'), 'case'), (('which', 'many'), 'obl'), (('compute', 'stack'), 'acl:relcl'), (('non-linear', 'mappings'), 'amod'), (('input–output', 'mappings'), 'compound'), (('mappings', 'compute'), 'obj'), (('.', 'stack'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Each module in the  stack transforms its input to increase both the selectivity and the  invariance of the representation. 

Tokens are: 
>> ['Each', 'module', 'in', 'the', 'stack', 'transforms', 'its', 'input', 'to', 'increase', 'both', 'the', 'selectivity', 'and', 'the', 'invariance', 'of', 'the', 'representation', '.'] 

 UPOS tags are: 
>> [('Each', 'DET'), ('module', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('stack', 'NOUN'), ('transforms', 'VERB'), ('its', 'PRON'), ('input', 'NOUN'), ('to', 'PART'), ('increase', 'VERB'), ('both', 'CCONJ'), ('the', 'DET'), ('selectivity', 'NOUN'), ('and', 'CCONJ'), ('the', 'DET'), ('invariance', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('representation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Each', 'DT'), ('module', 'NN'), ('in', 'IN'), ('the', 'DT'), ('stack', 'NN'), ('transforms', 'VBZ'), ('its', 'PRP$'), ('input', 'NN'), ('to', 'TO'), ('increase', 'VB'), ('both', 'CC'), ('the', 'DT'), ('selectivity', 'NN'), ('and', 'CC'), ('the', 'DT'), ('invariance', 'NN'), ('of', 'IN'), ('the', 'DT'), ('representation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Each', 'each'), ('module', 'module'), ('in', 'in'), ('the', 'the'), ('stack', 'stack'), ('transforms', 'transform'), ('its', 'its'), ('input', 'input'), ('to', 'to'), ('increase', 'increase'), ('both', 'both'), ('the', 'the'), ('selectivity', 'selectivity'), ('and', 'and'), ('the', 'the'), ('invariance', 'invariance'), ('of', 'of'), ('the', 'the'), ('representation', 'representation'), ('.', '.')] 

 Dependency tags are: 
>> [(('Each', 'module'), 'det'), (('module', 'transforms'), 'nsubj'), (('in', 'stack'), 'case'), (('the', 'stack'), 'det'), (('stack', 'module'), 'nmod'), (('transforms', 'root'), 'root'), (('its', 'input'), 'nmod:poss'), (('input', 'transforms'), 'obj'), (('to', 'increase'), 'mark'), (('increase', 'transforms'), 'xcomp'), (('both', 'selectivity'), 'cc:preconj'), (('the', 'selectivity'), 'det'), (('selectivity', 'increase'), 'obj'), (('and', 'invariance'), 'cc'), (('the', 'invariance'), 'det'), (('invariance', 'selectivity'), 'conj'), (('of', 'representation'), 'case'), (('the', 'representation'), 'det'), (('representation', 'invariance'), 'nmod'), (('.', 'transforms'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 With multiple non-linear layers, say  a depth of 5 to 20, a system can implement extremely intricate func- tions of its inputs that are simultaneously sensitive to minute details  — distinguishing Samoyeds from white wolves — and insensitive to  large irrelevant variations such as the background, pose, lighting and  surrounding objects. 

Tokens are: 
>> ['With', 'multiple', 'non-linear', 'layers', ',', 'say', 'a', 'depth', 'of', '5', 'to', '20', ',', 'a', 'system', 'can', 'implement', 'extremely', 'intricate', 'func-', 'tions', 'of', 'its', 'inputs', 'that', 'are', 'simultaneously', 'sensitive', 'to', 'minute', 'details', '—', 'distinguishing', 'Samoyeds', 'from', 'white', 'wolves', '—', 'and', 'insensitive', 'to', 'large', 'irrelevant', 'variations', 'such', 'as', 'the', 'background', ',', 'pose', ',', 'lighting', 'and', 'surrounding', 'objects', '.'] 

 UPOS tags are: 
>> [('With', 'ADP'), ('multiple', 'ADJ'), ('non-linear', 'ADJ'), ('layers', 'NOUN'), (',', 'PUNCT'), ('say', 'VERB'), ('a', 'DET'), ('depth', 'NOUN'), ('of', 'ADP'), ('5', 'NUM'), ('to', 'ADP'), ('20', 'NUM'), (',', 'PUNCT'), ('a', 'DET'), ('system', 'NOUN'), ('can', 'AUX'), ('implement', 'VERB'), ('extremely', 'ADV'), ('intricate', 'ADJ'), ('func-', 'ADJ'), ('tions', 'NOUN'), ('of', 'ADP'), ('its', 'PRON'), ('inputs', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('simultaneously', 'ADV'), ('sensitive', 'ADJ'), ('to', 'ADP'), ('minute', 'NOUN'), ('details', 'NOUN'), ('—', 'PUNCT'), ('distinguishing', 'VERB'), ('Samoyeds', 'PROPN'), ('from', 'ADP'), ('white', 'ADJ'), ('wolves', 'NOUN'), ('—', 'PUNCT'), ('and', 'CCONJ'), ('insensitive', 'ADJ'), ('to', 'ADP'), ('large', 'ADJ'), ('irrelevant', 'ADJ'), ('variations', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('the', 'DET'), ('background', 'NOUN'), (',', 'PUNCT'), ('pose', 'NOUN'), (',', 'PUNCT'), ('lighting', 'NOUN'), ('and', 'CCONJ'), ('surrounding', 'VERB'), ('objects', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('With', 'IN'), ('multiple', 'JJ'), ('non-linear', 'JJ'), ('layers', 'NNS'), (',', ','), ('say', 'VB'), ('a', 'DT'), ('depth', 'NN'), ('of', 'IN'), ('5', 'CD'), ('to', 'IN'), ('20', 'CD'), (',', ','), ('a', 'DT'), ('system', 'NN'), ('can', 'MD'), ('implement', 'VB'), ('extremely', 'RB'), ('intricate', 'JJ'), ('func-', 'JJ'), ('tions', 'NNS'), ('of', 'IN'), ('its', 'PRP$'), ('inputs', 'NNS'), ('that', 'WDT'), ('are', 'VBP'), ('simultaneously', 'RB'), ('sensitive', 'JJ'), ('to', 'IN'), ('minute', 'NN'), ('details', 'NNS'), ('—', ':'), ('distinguishing', 'VBG'), ('Samoyeds', 'NNPS'), ('from', 'IN'), ('white', 'JJ'), ('wolves', 'NNS'), ('—', ':'), ('and', 'CC'), ('insensitive', 'JJ'), ('to', 'IN'), ('large', 'JJ'), ('irrelevant', 'JJ'), ('variations', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('the', 'DT'), ('background', 'NN'), (',', ','), ('pose', 'NN'), (',', ','), ('lighting', 'NN'), ('and', 'CC'), ('surrounding', 'VBG'), ('objects', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('With', 'with'), ('multiple', 'multiple'), ('non-linear', 'non-linear'), ('layers', 'layer'), (',', ','), ('say', 'say'), ('a', 'a'), ('depth', 'depth'), ('of', 'of'), ('5', '5'), ('to', 'to'), ('20', '20'), (',', ','), ('a', 'a'), ('system', 'system'), ('can', 'can'), ('implement', 'implement'), ('extremely', 'extremely'), ('intricate', 'intricate'), ('func-', 'func-'), ('tions', 'tion'), ('of', 'of'), ('its', 'its'), ('inputs', 'input'), ('that', 'that'), ('are', 'be'), ('simultaneously', 'simultaneously'), ('sensitive', 'sensitive'), ('to', 'to'), ('minute', 'minute'), ('details', 'detail'), ('—', '—'), ('distinguishing', 'distinguish'), ('Samoyeds', 'Samoyed'), ('from', 'from'), ('white', 'white'), ('wolves', 'wolf'), ('—', '—'), ('and', 'and'), ('insensitive', 'insensitive'), ('to', 'to'), ('large', 'large'), ('irrelevant', 'irrelevant'), ('variations', 'variation'), ('such', 'such'), ('as', 'as'), ('the', 'the'), ('background', 'background'), (',', ','), ('pose', 'pose'), (',', ','), ('lighting', 'lighting'), ('and', 'and'), ('surrounding', 'surround'), ('objects', 'object'), ('.', '.')] 

 Dependency tags are: 
>> [(('With', 'layers'), 'case'), (('multiple', 'layers'), 'amod'), (('non-linear', 'layers'), 'amod'), (('layers', 'say'), 'obl'), ((',', 'layers'), 'punct'), (('say', 'root'), 'root'), (('a', 'depth'), 'det'), (('depth', 'say'), 'obj'), (('of', '5'), 'case'), (('5', 'depth'), 'nmod'), (('to', '20'), 'case'), (('20', '5'), 'nmod'), ((',', 'implement'), 'punct'), (('a', 'system'), 'det'), (('system', 'implement'), 'nsubj'), (('can', 'implement'), 'aux'), (('implement', 'say'), 'ccomp'), (('extremely', 'intricate'), 'advmod'), (('intricate', 'tions'), 'amod'), (('func-', 'tions'), 'amod'), (('tions', 'implement'), 'obj'), (('of', 'inputs'), 'case'), (('its', 'inputs'), 'nmod:poss'), (('inputs', 'tions'), 'nmod'), (('that', 'sensitive'), 'nsubj'), (('are', 'sensitive'), 'cop'), (('simultaneously', 'sensitive'), 'advmod'), (('sensitive', 'inputs'), 'acl:relcl'), (('to', 'details'), 'case'), (('minute', 'details'), 'compound'), (('details', 'sensitive'), 'obl'), (('—', 'distinguishing'), 'punct'), (('distinguishing', 'sensitive'), 'advcl'), (('Samoyeds', 'distinguishing'), 'obj'), (('from', 'wolves'), 'case'), (('white', 'wolves'), 'amod'), (('wolves', 'distinguishing'), 'obl'), (('—', 'insensitive'), 'punct'), (('and', 'insensitive'), 'cc'), (('insensitive', 'distinguishing'), 'conj'), (('to', 'variations'), 'case'), (('large', 'variations'), 'amod'), (('irrelevant', 'variations'), 'amod'), (('variations', 'insensitive'), 'obl'), (('such', 'background'), 'case'), (('as', 'such'), 'fixed'), (('the', 'background'), 'det'), (('background', 'variations'), 'nmod'), ((',', 'pose'), 'punct'), (('pose', 'background'), 'conj'), ((',', 'lighting'), 'punct'), (('lighting', 'background'), 'conj'), (('and', 'objects'), 'cc'), (('surrounding', 'objects'), 'amod'), (('objects', 'background'), 'conj'), (('.', 'say'), 'punct')]

 Named Entites are: 
>> [('5', 'CARDINAL'), ('20', 'CARDINAL')]

================================ Paragraph 95 =================================

Backpropagation to train multilayer architectures  From the earliest days of pattern recognition22,23, the aim of research- ers has been to replace hand-engineered features with trainable  multilayer networks, but despite its simplicity, the solution was not  widely understood until the mid 1980s. As it turns out, multilayer  architectures can be trained by simple stochastic gradient descent.  As long as the modules are relatively smooth functions of their inputs  and of their internal weights, one can compute gradients using the  backpropagation procedure. The idea that this could be done, and  that it worked, was discovered independently by several different  groups during the 1970s and 1980s24–27.   


------------------- Sentence 1 -------------------

 Backpropagation to train multilayer architectures 

Tokens are: 
>> ['Backpropagation', 'to', 'train', 'multilayer', 'architectures'] 

 UPOS tags are: 
>> [('Backpropagation', 'NOUN'), ('to', 'PART'), ('train', 'VERB'), ('multilayer', 'NOUN'), ('architectures', 'NOUN')] 

 XPOS tags are: 
>> [('Backpropagation', 'NN'), ('to', 'TO'), ('train', 'VB'), ('multilayer', 'NN'), ('architectures', 'NNS')] 

 Lemmas are: 
>> [('Backpropagation', 'backpropagation'), ('to', 'to'), ('train', 'train'), ('multilayer', 'multilayer'), ('architectures', 'architecture')] 

 Dependency tags are: 
>> [(('Backpropagation', 'root'), 'root'), (('to', 'train'), 'mark'), (('train', 'Backpropagation'), 'acl'), (('multilayer', 'architectures'), 'compound'), (('architectures', 'train'), 'obj')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 From the earliest days of pattern recognition22,23, the aim of research- ers has been to replace hand-engineered features with trainable  multilayer networks, but despite its simplicity, the solution was not  widely understood until the mid 1980s. 

Tokens are: 
>> ['From', 'the', 'earliest', 'days', 'of', 'pattern', 'recognition', '22', ',', '23', ',', 'the', 'aim', 'of', 'research', '-', 'ers', 'has', 'been', 'to', 'replace', 'hand', '-', 'engineered', 'features', 'with', 'trainable', 'multilayer', 'networks', ',', 'but', 'despite', 'its', 'simplicity', ',', 'the', 'solution', 'was', 'not', 'widely', 'understood', 'until', 'the', 'mid', '1980s', '.'] 

 UPOS tags are: 
>> [('From', 'ADP'), ('the', 'DET'), ('earliest', 'ADJ'), ('days', 'NOUN'), ('of', 'ADP'), ('pattern', 'NOUN'), ('recognition', 'NOUN'), ('22', 'NUM'), (',', 'PUNCT'), ('23', 'NUM'), (',', 'PUNCT'), ('the', 'DET'), ('aim', 'NOUN'), ('of', 'ADP'), ('research', 'NOUN'), ('-', 'PUNCT'), ('ers', 'NOUN'), ('has', 'AUX'), ('been', 'AUX'), ('to', 'PART'), ('replace', 'VERB'), ('hand', 'NOUN'), ('-', 'PUNCT'), ('engineered', 'VERB'), ('features', 'NOUN'), ('with', 'ADP'), ('trainable', 'ADJ'), ('multilayer', 'NOUN'), ('networks', 'NOUN'), (',', 'PUNCT'), ('but', 'CCONJ'), ('despite', 'ADP'), ('its', 'PRON'), ('simplicity', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('solution', 'NOUN'), ('was', 'AUX'), ('not', 'PART'), ('widely', 'ADV'), ('understood', 'VERB'), ('until', 'ADP'), ('the', 'DET'), ('mid', 'ADJ'), ('1980s', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('From', 'IN'), ('the', 'DT'), ('earliest', 'JJS'), ('days', 'NNS'), ('of', 'IN'), ('pattern', 'NN'), ('recognition', 'NN'), ('22', 'CD'), (',', ','), ('23', 'CD'), (',', ','), ('the', 'DT'), ('aim', 'NN'), ('of', 'IN'), ('research', 'NN'), ('-', 'HYPH'), ('ers', 'NNS'), ('has', 'VBZ'), ('been', 'VBN'), ('to', 'TO'), ('replace', 'VB'), ('hand', 'NN'), ('-', 'HYPH'), ('engineered', 'VBN'), ('features', 'NNS'), ('with', 'IN'), ('trainable', 'JJ'), ('multilayer', 'NN'), ('networks', 'NNS'), (',', ','), ('but', 'CC'), ('despite', 'IN'), ('its', 'PRP$'), ('simplicity', 'NN'), (',', ','), ('the', 'DT'), ('solution', 'NN'), ('was', 'VBD'), ('not', 'RB'), ('widely', 'RB'), ('understood', 'VBN'), ('until', 'IN'), ('the', 'DT'), ('mid', 'JJ'), ('1980s', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('From', 'from'), ('the', 'the'), ('earliest', 'early'), ('days', 'day'), ('of', 'of'), ('pattern', 'pattern'), ('recognition', 'recognition'), ('22', '22'), (',', ','), ('23', '23'), (',', ','), ('the', 'the'), ('aim', 'aim'), ('of', 'of'), ('research', 'research'), ('-', '-'), ('ers', 'ers'), ('has', 'have'), ('been', 'be'), ('to', 'to'), ('replace', 'replace'), ('hand', 'hand'), ('-', '-'), ('engineered', 'engineer'), ('features', 'feature'), ('with', 'with'), ('trainable', 'trainable'), ('multilayer', 'multilayer'), ('networks', 'network'), (',', ','), ('but', 'but'), ('despite', 'despite'), ('its', 'its'), ('simplicity', 'simplicity'), (',', ','), ('the', 'the'), ('solution', 'solution'), ('was', 'be'), ('not', 'not'), ('widely', 'widely'), ('understood', 'understand'), ('until', 'until'), ('the', 'the'), ('mid', 'mid'), ('1980s', '1980'), ('.', '.')] 

 Dependency tags are: 
>> [(('From', 'days'), 'case'), (('the', 'days'), 'det'), (('earliest', 'days'), 'amod'), (('days', 'been'), 'obl'), (('of', 'recognition'), 'case'), (('pattern', 'recognition'), 'compound'), (('recognition', 'days'), 'nmod'), (('22', 'recognition'), 'nummod'), ((',', 'been'), 'punct'), (('23', 'recognition'), 'nummod'), ((',', 'been'), 'punct'), (('the', 'aim'), 'det'), (('aim', 'been'), 'nsubj'), (('of', 'ers'), 'case'), (('research', 'ers'), 'compound'), (('-', 'ers'), 'punct'), (('ers', 'aim'), 'nmod'), (('has', 'been'), 'aux'), (('been', 'root'), 'root'), (('to', 'replace'), 'mark'), (('replace', 'been'), 'ccomp'), (('hand', 'engineered'), 'obl:npmod'), (('-', 'engineered'), 'punct'), (('engineered', 'features'), 'amod'), (('features', 'replace'), 'obj'), (('with', 'networks'), 'case'), (('trainable', 'networks'), 'amod'), (('multilayer', 'networks'), 'compound'), (('networks', 'features'), 'nmod'), ((',', 'understood'), 'punct'), (('but', 'understood'), 'cc'), (('despite', 'simplicity'), 'case'), (('its', 'simplicity'), 'nmod:poss'), (('simplicity', 'understood'), 'obl'), ((',', 'understood'), 'punct'), (('the', 'solution'), 'det'), (('solution', 'understood'), 'nsubj:pass'), (('was', 'understood'), 'aux:pass'), (('not', 'understood'), 'advmod'), (('widely', 'understood'), 'advmod'), (('understood', 'been'), 'conj'), (('until', '1980s'), 'case'), (('the', '1980s'), 'det'), (('mid', '1980s'), 'amod'), (('1980s', 'understood'), 'obl'), (('.', 'been'), 'punct')]

 Named Entites are: 
>> [('the earliest days', 'DATE'), ('22', 'CARDINAL'), ('23', 'CARDINAL'), ('the mid 1980s', 'DATE')]

------------------- Sentence 3 -------------------

 As it turns out, multilayer  architectures can be trained by simple stochastic gradient descent. 

Tokens are: 
>> ['As', 'it', 'turns', 'out', ',', 'multilayer', 'architectures', 'can', 'be', 'trained', 'by', 'simple', 'stochastic', 'gradient', 'descent', '.'] 

 UPOS tags are: 
>> [('As', 'SCONJ'), ('it', 'PRON'), ('turns', 'VERB'), ('out', 'ADP'), (',', 'PUNCT'), ('multilayer', 'NOUN'), ('architectures', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('trained', 'VERB'), ('by', 'ADP'), ('simple', 'ADJ'), ('stochastic', 'ADJ'), ('gradient', 'NOUN'), ('descent', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('As', 'IN'), ('it', 'PRP'), ('turns', 'VBZ'), ('out', 'RP'), (',', ','), ('multilayer', 'NN'), ('architectures', 'NNS'), ('can', 'MD'), ('be', 'VB'), ('trained', 'VBN'), ('by', 'IN'), ('simple', 'JJ'), ('stochastic', 'JJ'), ('gradient', 'NN'), ('descent', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('As', 'as'), ('it', 'it'), ('turns', 'turn'), ('out', 'out'), (',', ','), ('multilayer', 'multilayer'), ('architectures', 'architecture'), ('can', 'can'), ('be', 'be'), ('trained', 'train'), ('by', 'by'), ('simple', 'simple'), ('stochastic', 'stochastic'), ('gradient', 'gradient'), ('descent', 'descent'), ('.', '.')] 

 Dependency tags are: 
>> [(('As', 'turns'), 'mark'), (('it', 'turns'), 'nsubj'), (('turns', 'trained'), 'advcl'), (('out', 'turns'), 'compound:prt'), ((',', 'trained'), 'punct'), (('multilayer', 'architectures'), 'compound'), (('architectures', 'trained'), 'nsubj:pass'), (('can', 'trained'), 'aux'), (('be', 'trained'), 'aux:pass'), (('trained', 'root'), 'root'), (('by', 'descent'), 'case'), (('simple', 'descent'), 'amod'), (('stochastic', 'descent'), 'amod'), (('gradient', 'descent'), 'compound'), (('descent', 'trained'), 'obl'), (('.', 'trained'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 As long as the modules are relatively smooth functions of their inputs  and of their internal weights, one can compute gradients using the  backpropagation procedure. 

Tokens are: 
>> ['As', 'long', 'as', 'the', 'modules', 'are', 'relatively', 'smooth', 'functions', 'of', 'their', 'inputs', 'and', 'of', 'their', 'internal', 'weights', ',', 'one', 'can', 'compute', 'gradients', 'using', 'the', 'backpropagation', 'procedure', '.'] 

 UPOS tags are: 
>> [('As', 'ADV'), ('long', 'ADV'), ('as', 'SCONJ'), ('the', 'DET'), ('modules', 'NOUN'), ('are', 'AUX'), ('relatively', 'ADV'), ('smooth', 'ADJ'), ('functions', 'NOUN'), ('of', 'ADP'), ('their', 'PRON'), ('inputs', 'NOUN'), ('and', 'CCONJ'), ('of', 'ADP'), ('their', 'PRON'), ('internal', 'ADJ'), ('weights', 'NOUN'), (',', 'PUNCT'), ('one', 'PRON'), ('can', 'AUX'), ('compute', 'VERB'), ('gradients', 'NOUN'), ('using', 'VERB'), ('the', 'DET'), ('backpropagation', 'NOUN'), ('procedure', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('As', 'RB'), ('long', 'RB'), ('as', 'IN'), ('the', 'DT'), ('modules', 'NNS'), ('are', 'VBP'), ('relatively', 'RB'), ('smooth', 'JJ'), ('functions', 'NNS'), ('of', 'IN'), ('their', 'PRP$'), ('inputs', 'NNS'), ('and', 'CC'), ('of', 'IN'), ('their', 'PRP$'), ('internal', 'JJ'), ('weights', 'NNS'), (',', ','), ('one', 'PRP'), ('can', 'MD'), ('compute', 'VB'), ('gradients', 'NNS'), ('using', 'VBG'), ('the', 'DT'), ('backpropagation', 'NN'), ('procedure', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('As', 'as'), ('long', 'long'), ('as', 'as'), ('the', 'the'), ('modules', 'module'), ('are', 'be'), ('relatively', 'relatively'), ('smooth', 'smooth'), ('functions', 'function'), ('of', 'of'), ('their', 'they'), ('inputs', 'input'), ('and', 'and'), ('of', 'of'), ('their', 'they'), ('internal', 'internal'), ('weights', 'weight'), (',', ','), ('one', 'one'), ('can', 'can'), ('compute', 'compute'), ('gradients', 'gradient'), ('using', 'use'), ('the', 'the'), ('backpropagation', 'backpropagation'), ('procedure', 'procedure'), ('.', '.')] 

 Dependency tags are: 
>> [(('As', 'long'), 'advmod'), (('long', 'compute'), 'advmod'), (('as', 'functions'), 'mark'), (('the', 'modules'), 'det'), (('modules', 'functions'), 'nsubj'), (('are', 'functions'), 'cop'), (('relatively', 'smooth'), 'advmod'), (('smooth', 'functions'), 'amod'), (('functions', 'long'), 'advcl'), (('of', 'inputs'), 'case'), (('their', 'inputs'), 'nmod:poss'), (('inputs', 'functions'), 'nmod'), (('and', 'weights'), 'cc'), (('of', 'weights'), 'case'), (('their', 'weights'), 'nmod:poss'), (('internal', 'weights'), 'amod'), (('weights', 'inputs'), 'conj'), ((',', 'compute'), 'punct'), (('one', 'compute'), 'nsubj'), (('can', 'compute'), 'aux'), (('compute', 'root'), 'root'), (('gradients', 'compute'), 'obj'), (('using', 'gradients'), 'acl'), (('the', 'procedure'), 'det'), (('backpropagation', 'procedure'), 'compound'), (('procedure', 'using'), 'obj'), (('.', 'compute'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 The idea that this could be done, and  that it worked, was discovered independently by several different  groups during the 1970s and 1980s24–27. 

Tokens are: 
>> ['The', 'idea', 'that', 'this', 'could', 'be', 'done', ',', 'and', 'that', 'it', 'worked', ',', 'was', 'discovered', 'independently', 'by', 'several', 'different', 'groups', 'during', 'the', '1970s', 'and', '1980s24–27.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('idea', 'NOUN'), ('that', 'SCONJ'), ('this', 'PRON'), ('could', 'AUX'), ('be', 'AUX'), ('done', 'VERB'), (',', 'PUNCT'), ('and', 'CCONJ'), ('that', 'SCONJ'), ('it', 'PRON'), ('worked', 'VERB'), (',', 'PUNCT'), ('was', 'AUX'), ('discovered', 'VERB'), ('independently', 'ADV'), ('by', 'ADP'), ('several', 'ADJ'), ('different', 'ADJ'), ('groups', 'NOUN'), ('during', 'ADP'), ('the', 'DET'), ('1970s', 'NOUN'), ('and', 'CCONJ'), ('1980s24–27.', 'NUM')] 

 XPOS tags are: 
>> [('The', 'DT'), ('idea', 'NN'), ('that', 'IN'), ('this', 'DT'), ('could', 'MD'), ('be', 'VB'), ('done', 'VBN'), (',', ','), ('and', 'CC'), ('that', 'IN'), ('it', 'PRP'), ('worked', 'VBD'), (',', ','), ('was', 'VBD'), ('discovered', 'VBN'), ('independently', 'RB'), ('by', 'IN'), ('several', 'JJ'), ('different', 'JJ'), ('groups', 'NNS'), ('during', 'IN'), ('the', 'DT'), ('1970s', 'NNS'), ('and', 'CC'), ('1980s24–27.', 'CD')] 

 Lemmas are: 
>> [('The', 'the'), ('idea', 'idea'), ('that', 'that'), ('this', 'this'), ('could', 'could'), ('be', 'be'), ('done', 'do'), (',', ','), ('and', 'and'), ('that', 'that'), ('it', 'it'), ('worked', 'work'), (',', ','), ('was', 'be'), ('discovered', 'discover'), ('independently', 'independently'), ('by', 'by'), ('several', 'several'), ('different', 'different'), ('groups', 'group'), ('during', 'during'), ('the', 'the'), ('1970s', '1970'), ('and', 'and'), ('1980s24–27.', '1980s24–27.')] 

 Dependency tags are: 
>> [(('The', 'idea'), 'det'), (('idea', 'discovered'), 'nsubj:pass'), (('that', 'done'), 'mark'), (('this', 'done'), 'nsubj:pass'), (('could', 'done'), 'aux'), (('be', 'done'), 'aux:pass'), (('done', 'idea'), 'acl'), ((',', 'discovered'), 'punct'), (('and', 'discovered'), 'cc'), (('that', 'worked'), 'mark'), (('it', 'worked'), 'nsubj'), (('worked', 'done'), 'conj'), ((',', 'discovered'), 'punct'), (('was', 'discovered'), 'aux:pass'), (('discovered', 'root'), 'root'), (('independently', 'discovered'), 'advmod'), (('by', 'groups'), 'case'), (('several', 'groups'), 'amod'), (('different', 'groups'), 'amod'), (('groups', 'discovered'), 'obl'), (('during', '1970s'), 'case'), (('the', '1970s'), 'det'), (('1970s', 'groups'), 'nmod'), (('and', '1980s24–27.'), 'cc'), (('1980s24–27.', '1970s'), 'conj')]

 Named Entites are: 
>> [('1970s', 'DATE'), ('1980s24–27.', 'DATE')]

================================ Paragraph 96 =================================

The backpropagation procedure to compute the gradient of an  objective function with respect to the weights of a multilayer stack  of modules is nothing more than a practical application of the chain  


------------------- Sentence 1 -------------------

 The backpropagation procedure to compute the gradient of an  objective function with respect to the weights of a multilayer stack  of modules is nothing more than a practical application of the chain 

Tokens are: 
>> ['The', 'backpropagation', 'procedure', 'to', 'compute', 'the', 'gradient', 'of', 'an', 'objective', 'function', 'with', 'respect', 'to', 'the', 'weights', 'of', 'a', 'multilayer', 'stack', 'of', 'modules', 'is', 'nothing', 'more', 'than', 'a', 'practical', 'application', 'of', 'the', 'chain'] 

 UPOS tags are: 
>> [('The', 'DET'), ('backpropagation', 'NOUN'), ('procedure', 'NOUN'), ('to', 'PART'), ('compute', 'VERB'), ('the', 'DET'), ('gradient', 'NOUN'), ('of', 'ADP'), ('an', 'DET'), ('objective', 'ADJ'), ('function', 'NOUN'), ('with', 'ADP'), ('respect', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('weights', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('multilayer', 'ADJ'), ('stack', 'NOUN'), ('of', 'ADP'), ('modules', 'NOUN'), ('is', 'AUX'), ('nothing', 'PRON'), ('more', 'ADJ'), ('than', 'ADP'), ('a', 'DET'), ('practical', 'ADJ'), ('application', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('chain', 'NOUN')] 

 XPOS tags are: 
>> [('The', 'DT'), ('backpropagation', 'NN'), ('procedure', 'NN'), ('to', 'TO'), ('compute', 'VB'), ('the', 'DT'), ('gradient', 'NN'), ('of', 'IN'), ('an', 'DT'), ('objective', 'JJ'), ('function', 'NN'), ('with', 'IN'), ('respect', 'NN'), ('to', 'IN'), ('the', 'DT'), ('weights', 'NNS'), ('of', 'IN'), ('a', 'DT'), ('multilayer', 'JJ'), ('stack', 'NN'), ('of', 'IN'), ('modules', 'NNS'), ('is', 'VBZ'), ('nothing', 'NN'), ('more', 'JJR'), ('than', 'IN'), ('a', 'DT'), ('practical', 'JJ'), ('application', 'NN'), ('of', 'IN'), ('the', 'DT'), ('chain', 'NN')] 

 Lemmas are: 
>> [('The', 'the'), ('backpropagation', 'backpropagation'), ('procedure', 'procedure'), ('to', 'to'), ('compute', 'compute'), ('the', 'the'), ('gradient', 'gradient'), ('of', 'of'), ('an', 'a'), ('objective', 'objective'), ('function', 'function'), ('with', 'with'), ('respect', 'respect'), ('to', 'to'), ('the', 'the'), ('weights', 'weight'), ('of', 'of'), ('a', 'a'), ('multilayer', 'multilayer'), ('stack', 'stack'), ('of', 'of'), ('modules', 'module'), ('is', 'be'), ('nothing', 'nothing'), ('more', 'more'), ('than', 'than'), ('a', 'a'), ('practical', 'practical'), ('application', 'application'), ('of', 'of'), ('the', 'the'), ('chain', 'chain')] 

 Dependency tags are: 
>> [(('The', 'procedure'), 'det'), (('backpropagation', 'procedure'), 'compound'), (('procedure', 'nothing'), 'nsubj'), (('to', 'compute'), 'mark'), (('compute', 'procedure'), 'acl'), (('the', 'gradient'), 'det'), (('gradient', 'compute'), 'obj'), (('of', 'function'), 'case'), (('an', 'function'), 'det'), (('objective', 'function'), 'amod'), (('function', 'gradient'), 'nmod'), (('with', 'respect'), 'case'), (('respect', 'function'), 'nmod'), (('to', 'weights'), 'case'), (('the', 'weights'), 'det'), (('weights', 'respect'), 'nmod'), (('of', 'stack'), 'case'), (('a', 'stack'), 'det'), (('multilayer', 'stack'), 'amod'), (('stack', 'weights'), 'nmod'), (('of', 'modules'), 'case'), (('modules', 'stack'), 'nmod'), (('is', 'nothing'), 'cop'), (('nothing', 'root'), 'root'), (('more', 'nothing'), 'amod'), (('than', 'application'), 'case'), (('a', 'application'), 'det'), (('practical', 'application'), 'amod'), (('application', 'more'), 'obl'), (('of', 'chain'), 'case'), (('the', 'chain'), 'det'), (('chain', 'application'), 'nmod')]

 Named Entites are: 
>> []

================================ Paragraph 97 =================================

rule for derivatives. The key insight is that the derivative (or gradi- ent) of the objective with respect to the input of a module can be  computed by working backwards from the gradient with respect to  the output of that module (or the input of the subsequent module)  (Fig. 1). The backpropagation equation can be applied repeatedly to  propagate gradients through all modules, starting from the output  at the top (where the network produces its prediction) all the way to  the bottom (where the external input is fed). Once these gradients  have been computed, it is straightforward to compute the gradients  with respect to the weights of each module.  


------------------- Sentence 1 -------------------

 rule for derivatives. 

Tokens are: 
>> ['rule', 'for', 'derivatives', '.'] 

 UPOS tags are: 
>> [('rule', 'VERB'), ('for', 'ADP'), ('derivatives', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('rule', 'VB'), ('for', 'IN'), ('derivatives', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('rule', 'rule'), ('for', 'for'), ('derivatives', 'derivative'), ('.', '.')] 

 Dependency tags are: 
>> [(('rule', 'root'), 'root'), (('for', 'derivatives'), 'case'), (('derivatives', 'rule'), 'obl'), (('.', 'rule'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 The key insight is that the derivative (or gradi- ent) of the objective with respect to the input of a module can be  computed by working backwards from the gradient with respect to  the output of that module (or the input of the subsequent module)  (Fig. 1). 

Tokens are: 
>> ['The', 'key', 'insight', 'is', 'that', 'the', 'derivative', '(', 'or', 'gradi', '-', 'ent', ')', 'of', 'the', 'objective', 'with', 'respect', 'to', 'the', 'input', 'of', 'a', 'module', 'can', 'be', 'computed', 'by', 'working', 'backwards', 'from', 'the', 'gradient', 'with', 'respect', 'to', 'the', 'output', 'of', 'that', 'module', '(', 'or', 'the', 'input', 'of', 'the', 'subsequent', 'module', ')', '(', 'Fig.', '1', ')', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('key', 'ADJ'), ('insight', 'NOUN'), ('is', 'VERB'), ('that', 'SCONJ'), ('the', 'DET'), ('derivative', 'NOUN'), ('(', 'PUNCT'), ('or', 'CCONJ'), ('gradi', 'PROPN'), ('-', 'PUNCT'), ('ent', 'NOUN'), (')', 'PUNCT'), ('of', 'ADP'), ('the', 'DET'), ('objective', 'NOUN'), ('with', 'ADP'), ('respect', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('input', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('module', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('computed', 'VERB'), ('by', 'SCONJ'), ('working', 'VERB'), ('backwards', 'ADV'), ('from', 'ADP'), ('the', 'DET'), ('gradient', 'NOUN'), ('with', 'ADP'), ('respect', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('output', 'NOUN'), ('of', 'ADP'), ('that', 'DET'), ('module', 'NOUN'), ('(', 'PUNCT'), ('or', 'CCONJ'), ('the', 'DET'), ('input', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('subsequent', 'ADJ'), ('module', 'NOUN'), (')', 'PUNCT'), ('(', 'PUNCT'), ('Fig.', 'NOUN'), ('1', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('key', 'JJ'), ('insight', 'NN'), ('is', 'VBZ'), ('that', 'IN'), ('the', 'DT'), ('derivative', 'NN'), ('(', '-LRB-'), ('or', 'CC'), ('gradi', 'NNP'), ('-', ','), ('ent', 'NN'), (')', '-RRB-'), ('of', 'IN'), ('the', 'DT'), ('objective', 'NN'), ('with', 'IN'), ('respect', 'NN'), ('to', 'IN'), ('the', 'DT'), ('input', 'NN'), ('of', 'IN'), ('a', 'DT'), ('module', 'NN'), ('can', 'MD'), ('be', 'VB'), ('computed', 'VBN'), ('by', 'IN'), ('working', 'VBG'), ('backwards', 'RB'), ('from', 'IN'), ('the', 'DT'), ('gradient', 'NN'), ('with', 'IN'), ('respect', 'NN'), ('to', 'IN'), ('the', 'DT'), ('output', 'NN'), ('of', 'IN'), ('that', 'DT'), ('module', 'NN'), ('(', '-LRB-'), ('or', 'CC'), ('the', 'DT'), ('input', 'NN'), ('of', 'IN'), ('the', 'DT'), ('subsequent', 'JJ'), ('module', 'NN'), (')', '-RRB-'), ('(', '-LRB-'), ('Fig.', 'NN'), ('1', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('key', 'key'), ('insight', 'insight'), ('is', 'be'), ('that', 'that'), ('the', 'the'), ('derivative', 'derivative'), ('(', '('), ('or', 'or'), ('gradi', 'gradi'), ('-', '-'), ('ent', 'ent'), (')', ')'), ('of', 'of'), ('the', 'the'), ('objective', 'objective'), ('with', 'with'), ('respect', 'respect'), ('to', 'to'), ('the', 'the'), ('input', 'input'), ('of', 'of'), ('a', 'a'), ('module', 'module'), ('can', 'can'), ('be', 'be'), ('computed', 'compute'), ('by', 'by'), ('working', 'work'), ('backwards', 'backwards'), ('from', 'from'), ('the', 'the'), ('gradient', 'gradient'), ('with', 'with'), ('respect', 'respect'), ('to', 'to'), ('the', 'the'), ('output', 'output'), ('of', 'of'), ('that', 'that'), ('module', 'module'), ('(', '('), ('or', 'or'), ('the', 'the'), ('input', 'input'), ('of', 'of'), ('the', 'the'), ('subsequent', 'subsequent'), ('module', 'module'), (')', ')'), ('(', '('), ('Fig.', 'fig.'), ('1', '1'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'insight'), 'det'), (('key', 'insight'), 'amod'), (('insight', 'is'), 'nsubj'), (('is', 'root'), 'root'), (('that', 'computed'), 'mark'), (('the', 'derivative'), 'det'), (('derivative', 'computed'), 'nsubj:pass'), (('(', 'ent'), 'punct'), (('or', 'gradi'), 'cc'), (('gradi', 'derivative'), 'conj'), (('-', 'ent'), 'punct'), (('ent', 'derivative'), 'appos'), ((')', 'ent'), 'punct'), (('of', 'objective'), 'case'), (('the', 'objective'), 'det'), (('objective', 'derivative'), 'nmod'), (('with', 'respect'), 'case'), (('respect', 'objective'), 'nmod'), (('to', 'input'), 'case'), (('the', 'input'), 'det'), (('input', 'respect'), 'nmod'), (('of', 'module'), 'case'), (('a', 'module'), 'det'), (('module', 'input'), 'nmod'), (('can', 'computed'), 'aux'), (('be', 'computed'), 'aux:pass'), (('computed', 'is'), 'ccomp'), (('by', 'working'), 'mark'), (('working', 'computed'), 'advcl'), (('backwards', 'working'), 'advmod'), (('from', 'gradient'), 'case'), (('the', 'gradient'), 'det'), (('gradient', 'working'), 'obl'), (('with', 'respect'), 'case'), (('respect', 'gradient'), 'nmod'), (('to', 'output'), 'case'), (('the', 'output'), 'det'), (('output', 'respect'), 'nmod'), (('of', 'module'), 'case'), (('that', 'module'), 'det'), (('module', 'output'), 'nmod'), (('(', 'input'), 'punct'), (('or', 'input'), 'cc'), (('the', 'input'), 'det'), (('input', 'module'), 'conj'), (('of', 'module'), 'case'), (('the', 'module'), 'det'), (('subsequent', 'module'), 'amod'), (('module', 'input'), 'nmod'), ((')', 'input'), 'punct'), (('(', 'Fig.'), 'punct'), (('Fig.', 'input'), 'dep'), (('1', 'Fig.'), 'dep'), ((')', 'Fig.'), 'punct'), (('.', 'is'), 'punct')]

 Named Entites are: 
>> [('1', 'CARDINAL')]

------------------- Sentence 3 -------------------

 The backpropagation equation can be applied repeatedly to  propagate gradients through all modules, starting from the output  at the top (where the network produces its prediction) all the way to  the bottom (where the external input is fed). 

Tokens are: 
>> ['The', 'backpropagation', 'equation', 'can', 'be', 'applied', 'repeatedly', 'to', 'propagate', 'gradients', 'through', 'all', 'modules', ',', 'starting', 'from', 'the', 'output', 'at', 'the', 'top', '(', 'where', 'the', 'network', 'produces', 'its', 'prediction', ')', 'all', 'the', 'way', 'to', 'the', 'bottom', '(', 'where', 'the', 'external', 'input', 'is', 'fed', ')', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('backpropagation', 'NOUN'), ('equation', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('applied', 'VERB'), ('repeatedly', 'ADV'), ('to', 'PART'), ('propagate', 'VERB'), ('gradients', 'NOUN'), ('through', 'ADP'), ('all', 'DET'), ('modules', 'NOUN'), (',', 'PUNCT'), ('starting', 'VERB'), ('from', 'ADP'), ('the', 'DET'), ('output', 'NOUN'), ('at', 'ADP'), ('the', 'DET'), ('top', 'NOUN'), ('(', 'PUNCT'), ('where', 'SCONJ'), ('the', 'DET'), ('network', 'NOUN'), ('produces', 'VERB'), ('its', 'PRON'), ('prediction', 'NOUN'), (')', 'PUNCT'), ('all', 'PRON'), ('the', 'DET'), ('way', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('bottom', 'NOUN'), ('(', 'PUNCT'), ('where', 'SCONJ'), ('the', 'DET'), ('external', 'ADJ'), ('input', 'NOUN'), ('is', 'AUX'), ('fed', 'VERB'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('backpropagation', 'NN'), ('equation', 'NN'), ('can', 'MD'), ('be', 'VB'), ('applied', 'VBN'), ('repeatedly', 'RB'), ('to', 'TO'), ('propagate', 'VB'), ('gradients', 'NNS'), ('through', 'IN'), ('all', 'DT'), ('modules', 'NNS'), (',', ','), ('starting', 'VBG'), ('from', 'IN'), ('the', 'DT'), ('output', 'NN'), ('at', 'IN'), ('the', 'DT'), ('top', 'NN'), ('(', '-LRB-'), ('where', 'WRB'), ('the', 'DT'), ('network', 'NN'), ('produces', 'VBZ'), ('its', 'PRP$'), ('prediction', 'NN'), (')', '-RRB-'), ('all', 'PDT'), ('the', 'DT'), ('way', 'NN'), ('to', 'IN'), ('the', 'DT'), ('bottom', 'NN'), ('(', '-LRB-'), ('where', 'WRB'), ('the', 'DT'), ('external', 'JJ'), ('input', 'NN'), ('is', 'VBZ'), ('fed', 'VBN'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('backpropagation', 'backpropagation'), ('equation', 'equation'), ('can', 'can'), ('be', 'be'), ('applied', 'apply'), ('repeatedly', 'repeatedly'), ('to', 'to'), ('propagate', 'propagate'), ('gradients', 'gradient'), ('through', 'through'), ('all', 'all'), ('modules', 'module'), (',', ','), ('starting', 'start'), ('from', 'from'), ('the', 'the'), ('output', 'output'), ('at', 'at'), ('the', 'the'), ('top', 'top'), ('(', '('), ('where', 'where'), ('the', 'the'), ('network', 'network'), ('produces', 'produce'), ('its', 'its'), ('prediction', 'prediction'), (')', ')'), ('all', 'all'), ('the', 'the'), ('way', 'way'), ('to', 'to'), ('the', 'the'), ('bottom', 'bottom'), ('(', '('), ('where', 'where'), ('the', 'the'), ('external', 'external'), ('input', 'input'), ('is', 'be'), ('fed', 'feed'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'equation'), 'det'), (('backpropagation', 'equation'), 'compound'), (('equation', 'applied'), 'nsubj:pass'), (('can', 'applied'), 'aux'), (('be', 'applied'), 'aux:pass'), (('applied', 'root'), 'root'), (('repeatedly', 'applied'), 'advmod'), (('to', 'propagate'), 'mark'), (('propagate', 'applied'), 'xcomp'), (('gradients', 'propagate'), 'obj'), (('through', 'modules'), 'case'), (('all', 'modules'), 'det'), (('modules', 'propagate'), 'obl'), ((',', 'starting'), 'punct'), (('starting', 'propagate'), 'advcl'), (('from', 'output'), 'case'), (('the', 'output'), 'det'), (('output', 'starting'), 'obl'), (('at', 'top'), 'case'), (('the', 'top'), 'det'), (('top', 'output'), 'nmod'), (('(', 'produces'), 'punct'), (('where', 'produces'), 'mark'), (('the', 'network'), 'det'), (('network', 'produces'), 'nsubj'), (('produces', 'top'), 'acl:relcl'), (('its', 'prediction'), 'nmod:poss'), (('prediction', 'produces'), 'obj'), ((')', 'produces'), 'punct'), (('all', 'way'), 'det:predet'), (('the', 'way'), 'det'), (('way', 'produces'), 'obj'), (('to', 'bottom'), 'case'), (('the', 'bottom'), 'det'), (('bottom', 'way'), 'nmod'), (('(', 'fed'), 'punct'), (('where', 'fed'), 'mark'), (('the', 'input'), 'det'), (('external', 'input'), 'amod'), (('input', 'fed'), 'nsubj:pass'), (('is', 'fed'), 'aux:pass'), (('fed', 'bottom'), 'acl:relcl'), ((')', 'fed'), 'punct'), (('.', 'applied'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Once these gradients  have been computed, it is straightforward to compute the gradients  with respect to the weights of each module. 

Tokens are: 
>> ['Once', 'these', 'gradients', 'have', 'been', 'computed', ',', 'it', 'is', 'straightforward', 'to', 'compute', 'the', 'gradients', 'with', 'respect', 'to', 'the', 'weights', 'of', 'each', 'module', '.'] 

 UPOS tags are: 
>> [('Once', 'SCONJ'), ('these', 'DET'), ('gradients', 'NOUN'), ('have', 'AUX'), ('been', 'AUX'), ('computed', 'VERB'), (',', 'PUNCT'), ('it', 'PRON'), ('is', 'AUX'), ('straightforward', 'ADJ'), ('to', 'PART'), ('compute', 'VERB'), ('the', 'DET'), ('gradients', 'NOUN'), ('with', 'ADP'), ('respect', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('weights', 'NOUN'), ('of', 'ADP'), ('each', 'DET'), ('module', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Once', 'IN'), ('these', 'DT'), ('gradients', 'NNS'), ('have', 'VBP'), ('been', 'VBN'), ('computed', 'VBN'), (',', ','), ('it', 'PRP'), ('is', 'VBZ'), ('straightforward', 'JJ'), ('to', 'TO'), ('compute', 'VB'), ('the', 'DT'), ('gradients', 'NNS'), ('with', 'IN'), ('respect', 'NN'), ('to', 'IN'), ('the', 'DT'), ('weights', 'NNS'), ('of', 'IN'), ('each', 'DT'), ('module', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Once', 'once'), ('these', 'this'), ('gradients', 'gradient'), ('have', 'have'), ('been', 'be'), ('computed', 'compute'), (',', ','), ('it', 'it'), ('is', 'be'), ('straightforward', 'straightforward'), ('to', 'to'), ('compute', 'compute'), ('the', 'the'), ('gradients', 'gradient'), ('with', 'with'), ('respect', 'respect'), ('to', 'to'), ('the', 'the'), ('weights', 'weight'), ('of', 'of'), ('each', 'each'), ('module', 'module'), ('.', '.')] 

 Dependency tags are: 
>> [(('Once', 'computed'), 'mark'), (('these', 'gradients'), 'det'), (('gradients', 'computed'), 'nsubj:pass'), (('have', 'computed'), 'aux'), (('been', 'computed'), 'aux:pass'), (('computed', 'straightforward'), 'advcl'), ((',', 'straightforward'), 'punct'), (('it', 'straightforward'), 'expl'), (('is', 'straightforward'), 'cop'), (('straightforward', 'root'), 'root'), (('to', 'compute'), 'mark'), (('compute', 'straightforward'), 'csubj'), (('the', 'gradients'), 'det'), (('gradients', 'compute'), 'obj'), (('with', 'respect'), 'case'), (('respect', 'gradients'), 'nmod'), (('to', 'weights'), 'case'), (('the', 'weights'), 'det'), (('weights', 'respect'), 'nmod'), (('of', 'module'), 'case'), (('each', 'module'), 'det'), (('module', 'weights'), 'nmod'), (('.', 'straightforward'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 98 =================================

Many applications of deep learning use feedforward neural net- work architectures (Fig. 1), which learn to map a fixed-size input  (for example, an image) to a fixed-size output (for example, a prob- ability for each of several categories). To go from one layer to the  next, a set of units compute a weighted sum of their inputs from the  previous layer and pass the result through a non-linear function. At  present, the most popular non-linear function is the rectified linear  unit (ReLU), which is simply the half-wave rectifier f(z) = max(z, 0).  In past decades, neural nets used smoother non-linearities, such as  tanh(z) or 1/(1 + exp(−z)), but the ReLU typically learns much faster  in networks with many layers, allowing training of a deep supervised  network without unsupervised pre-training28. Units that are not in  the input or output layer are conventionally called hidden units. The  hidden layers can be seen as distorting the input in a non-linear way  so that categories become linearly separable by the last layer (Fig. 1).  


------------------- Sentence 1 -------------------

 Many applications of deep learning use feedforward neural net- work architectures (Fig. 1), which learn to map a fixed-size input  (for example, an image) to a fixed-size output (for example, a prob- ability for each of several categories). 

Tokens are: 
>> ['Many', 'applications', 'of', 'deep', 'learning', 'use', 'feedforward', 'neural', 'net', '-', 'work', 'architectures', '(', 'Fig.', '1', ')', ',', 'which', 'learn', 'to', 'map', 'a', 'fixed', '-', 'size', 'input', '(', 'for', 'example', ',', 'an', 'image', ')', 'to', 'a', 'fixed', '-', 'size', 'output', '(', 'for', 'example', ',', 'a', 'prob', '-', 'ability', 'for', 'each', 'of', 'several', 'categories', ')', '.'] 

 UPOS tags are: 
>> [('Many', 'ADJ'), ('applications', 'NOUN'), ('of', 'ADP'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('use', 'VERB'), ('feedforward', 'ADJ'), ('neural', 'ADJ'), ('net', 'NOUN'), ('-', 'PUNCT'), ('work', 'NOUN'), ('architectures', 'NOUN'), ('(', 'PUNCT'), ('Fig.', 'PROPN'), ('1', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('which', 'PRON'), ('learn', 'VERB'), ('to', 'PART'), ('map', 'VERB'), ('a', 'DET'), ('fixed', 'VERB'), ('-', 'PUNCT'), ('size', 'NOUN'), ('input', 'NOUN'), ('(', 'PUNCT'), ('for', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('an', 'DET'), ('image', 'NOUN'), (')', 'PUNCT'), ('to', 'ADP'), ('a', 'DET'), ('fixed', 'VERB'), ('-', 'PUNCT'), ('size', 'NOUN'), ('output', 'NOUN'), ('(', 'PUNCT'), ('for', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('a', 'DET'), ('prob', 'NOUN'), ('-', 'PUNCT'), ('ability', 'NOUN'), ('for', 'ADP'), ('each', 'DET'), ('of', 'ADP'), ('several', 'ADJ'), ('categories', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Many', 'JJ'), ('applications', 'NNS'), ('of', 'IN'), ('deep', 'JJ'), ('learning', 'NN'), ('use', 'VBP'), ('feedforward', 'JJ'), ('neural', 'JJ'), ('net', 'NN'), ('-', 'HYPH'), ('work', 'NN'), ('architectures', 'NNS'), ('(', '-LRB-'), ('Fig.', 'NNP'), ('1', 'CD'), (')', '-RRB-'), (',', ','), ('which', 'WDT'), ('learn', 'VBP'), ('to', 'TO'), ('map', 'VB'), ('a', 'DT'), ('fixed', 'VBN'), ('-', 'HYPH'), ('size', 'NN'), ('input', 'NN'), ('(', '-LRB-'), ('for', 'IN'), ('example', 'NN'), (',', ','), ('an', 'DT'), ('image', 'NN'), (')', '-RRB-'), ('to', 'IN'), ('a', 'DT'), ('fixed', 'VBN'), ('-', 'HYPH'), ('size', 'NN'), ('output', 'NN'), ('(', '-LRB-'), ('for', 'IN'), ('example', 'NN'), (',', ','), ('a', 'DT'), ('prob', 'NN'), ('-', 'HYPH'), ('ability', 'NN'), ('for', 'IN'), ('each', 'DT'), ('of', 'IN'), ('several', 'JJ'), ('categories', 'NNS'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Many', 'many'), ('applications', 'application'), ('of', 'of'), ('deep', 'deep'), ('learning', 'learning'), ('use', 'use'), ('feedforward', 'feedforward'), ('neural', 'neural'), ('net', 'net'), ('-', '-'), ('work', 'work'), ('architectures', 'architecture'), ('(', '('), ('Fig.', 'Fig.'), ('1', '1'), (')', ')'), (',', ','), ('which', 'which'), ('learn', 'learn'), ('to', 'to'), ('map', 'map'), ('a', 'a'), ('fixed', 'fix'), ('-', '-'), ('size', 'size'), ('input', 'input'), ('(', '('), ('for', 'for'), ('example', 'example'), (',', ','), ('an', 'a'), ('image', 'image'), (')', ')'), ('to', 'to'), ('a', 'a'), ('fixed', 'fix'), ('-', '-'), ('size', 'size'), ('output', 'output'), ('(', '('), ('for', 'for'), ('example', 'example'), (',', ','), ('a', 'a'), ('prob', 'prob'), ('-', '-'), ('ability', 'ability'), ('for', 'for'), ('each', 'each'), ('of', 'of'), ('several', 'several'), ('categories', 'category'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Many', 'applications'), 'amod'), (('applications', 'use'), 'nsubj'), (('of', 'learning'), 'case'), (('deep', 'learning'), 'amod'), (('learning', 'applications'), 'nmod'), (('use', 'root'), 'root'), (('feedforward', 'architectures'), 'amod'), (('neural', 'architectures'), 'amod'), (('net', 'work'), 'compound'), (('-', 'work'), 'punct'), (('work', 'architectures'), 'compound'), (('architectures', 'use'), 'obj'), (('(', 'Fig.'), 'punct'), (('Fig.', 'architectures'), 'appos'), (('1', 'Fig.'), 'dep'), ((')', 'Fig.'), 'punct'), ((',', 'learn'), 'punct'), (('which', 'learn'), 'nsubj'), (('learn', 'architectures'), 'acl:relcl'), (('to', 'map'), 'mark'), (('map', 'learn'), 'xcomp'), (('a', 'input'), 'det'), (('fixed', 'size'), 'amod'), (('-', 'size'), 'punct'), (('size', 'input'), 'compound'), (('input', 'map'), 'obj'), (('(', 'image'), 'punct'), (('for', 'example'), 'case'), (('example', 'image'), 'nmod'), ((',', 'image'), 'punct'), (('an', 'image'), 'det'), (('image', 'input'), 'appos'), ((')', 'image'), 'punct'), (('to', 'output'), 'case'), (('a', 'output'), 'det'), (('fixed', 'size'), 'amod'), (('-', 'size'), 'punct'), (('size', 'output'), 'compound'), (('output', 'map'), 'obl'), (('(', 'ability'), 'punct'), (('for', 'example'), 'case'), (('example', 'ability'), 'nmod'), ((',', 'ability'), 'punct'), (('a', 'ability'), 'det'), (('prob', 'ability'), 'compound'), (('-', 'ability'), 'punct'), (('ability', 'output'), 'appos'), (('for', 'each'), 'case'), (('each', 'ability'), 'nmod'), (('of', 'categories'), 'case'), (('several', 'categories'), 'amod'), (('categories', 'each'), 'nmod'), ((')', 'ability'), 'punct'), (('.', 'use'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 To go from one layer to the  next, a set of units compute a weighted sum of their inputs from the  previous layer and pass the result through a non-linear function. 

Tokens are: 
>> ['To', 'go', 'from', 'one', 'layer', 'to', 'the', 'next', ',', 'a', 'set', 'of', 'units', 'compute', 'a', 'weighted', 'sum', 'of', 'their', 'inputs', 'from', 'the', 'previous', 'layer', 'and', 'pass', 'the', 'result', 'through', 'a', 'non-linear', 'function', '.'] 

 UPOS tags are: 
>> [('To', 'PART'), ('go', 'VERB'), ('from', 'ADP'), ('one', 'NUM'), ('layer', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('next', 'ADJ'), (',', 'PUNCT'), ('a', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('units', 'NOUN'), ('compute', 'VERB'), ('a', 'DET'), ('weighted', 'VERB'), ('sum', 'NOUN'), ('of', 'ADP'), ('their', 'PRON'), ('inputs', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('previous', 'ADJ'), ('layer', 'NOUN'), ('and', 'CCONJ'), ('pass', 'VERB'), ('the', 'DET'), ('result', 'NOUN'), ('through', 'ADP'), ('a', 'DET'), ('non-linear', 'ADJ'), ('function', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('To', 'TO'), ('go', 'VB'), ('from', 'IN'), ('one', 'CD'), ('layer', 'NN'), ('to', 'IN'), ('the', 'DT'), ('next', 'JJ'), (',', ','), ('a', 'DT'), ('set', 'NN'), ('of', 'IN'), ('units', 'NNS'), ('compute', 'VBP'), ('a', 'DT'), ('weighted', 'VBN'), ('sum', 'NN'), ('of', 'IN'), ('their', 'PRP$'), ('inputs', 'NNS'), ('from', 'IN'), ('the', 'DT'), ('previous', 'JJ'), ('layer', 'NN'), ('and', 'CC'), ('pass', 'VB'), ('the', 'DT'), ('result', 'NN'), ('through', 'IN'), ('a', 'DT'), ('non-linear', 'JJ'), ('function', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('To', 'to'), ('go', 'go'), ('from', 'from'), ('one', 'one'), ('layer', 'layer'), ('to', 'to'), ('the', 'the'), ('next', 'next'), (',', ','), ('a', 'a'), ('set', 'set'), ('of', 'of'), ('units', 'unit'), ('compute', 'compute'), ('a', 'a'), ('weighted', 'weight'), ('sum', 'sum'), ('of', 'of'), ('their', 'they'), ('inputs', 'input'), ('from', 'from'), ('the', 'the'), ('previous', 'previous'), ('layer', 'layer'), ('and', 'and'), ('pass', 'pass'), ('the', 'the'), ('result', 'result'), ('through', 'through'), ('a', 'a'), ('non-linear', 'non-linear'), ('function', 'function'), ('.', '.')] 

 Dependency tags are: 
>> [(('To', 'go'), 'mark'), (('go', 'compute'), 'advcl'), (('from', 'layer'), 'case'), (('one', 'layer'), 'nummod'), (('layer', 'go'), 'obl'), (('to', 'next'), 'case'), (('the', 'next'), 'det'), (('next', 'go'), 'obl'), ((',', 'compute'), 'punct'), (('a', 'set'), 'det'), (('set', 'compute'), 'nsubj'), (('of', 'units'), 'case'), (('units', 'set'), 'nmod'), (('compute', 'root'), 'root'), (('a', 'sum'), 'det'), (('weighted', 'sum'), 'amod'), (('sum', 'compute'), 'obj'), (('of', 'inputs'), 'case'), (('their', 'inputs'), 'nmod:poss'), (('inputs', 'sum'), 'nmod'), (('from', 'layer'), 'case'), (('the', 'layer'), 'det'), (('previous', 'layer'), 'amod'), (('layer', 'inputs'), 'nmod'), (('and', 'pass'), 'cc'), (('pass', 'compute'), 'conj'), (('the', 'result'), 'det'), (('result', 'pass'), 'obj'), (('through', 'function'), 'case'), (('a', 'function'), 'det'), (('non-linear', 'function'), 'amod'), (('function', 'pass'), 'obl'), (('.', 'compute'), 'punct')]

 Named Entites are: 
>> [('one', 'CARDINAL')]

------------------- Sentence 3 -------------------

 At  present, the most popular non-linear function is the rectified linear  unit (ReLU), which is simply the half-wave rectifier f(z) = max(z, 0). 

Tokens are: 
>> ['At', 'present', ',', 'the', 'most', 'popular', 'non-linear', 'function', 'is', 'the', 'rectified', 'linear', 'unit', '(', 'ReLU', ')', ',', 'which', 'is', 'simply', 'the', 'half', '-', 'wave', 'rectifier', 'f(', 'z', ')', '=', 'max', '(', 'z', ',', '0', ')', '.'] 

 UPOS tags are: 
>> [('At', 'ADP'), ('present', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('most', 'ADV'), ('popular', 'ADJ'), ('non-linear', 'ADJ'), ('function', 'NOUN'), ('is', 'AUX'), ('the', 'DET'), ('rectified', 'VERB'), ('linear', 'ADJ'), ('unit', 'NOUN'), ('(', 'PUNCT'), ('ReLU', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('which', 'PRON'), ('is', 'AUX'), ('simply', 'ADV'), ('the', 'DET'), ('half', 'NOUN'), ('-', 'PUNCT'), ('wave', 'NOUN'), ('rectifier', 'NOUN'), ('f(', 'NOUN'), ('z', 'NOUN'), (')', 'PUNCT'), ('=', 'SYM'), ('max', 'NOUN'), ('(', 'PUNCT'), ('z', 'NOUN'), (',', 'PUNCT'), ('0', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('At', 'IN'), ('present', 'NN'), (',', ','), ('the', 'DT'), ('most', 'RBS'), ('popular', 'JJ'), ('non-linear', 'JJ'), ('function', 'NN'), ('is', 'VBZ'), ('the', 'DT'), ('rectified', 'VBN'), ('linear', 'JJ'), ('unit', 'NN'), ('(', '-LRB-'), ('ReLU', 'NNP'), (')', '-RRB-'), (',', ','), ('which', 'WDT'), ('is', 'VBZ'), ('simply', 'RB'), ('the', 'DT'), ('half', 'NN'), ('-', 'HYPH'), ('wave', 'NN'), ('rectifier', 'NN'), ('f(', 'NN'), ('z', 'NN'), (')', '-RRB-'), ('=', 'SYM'), ('max', 'NN'), ('(', '-LRB-'), ('z', 'NN'), (',', ','), ('0', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('At', 'at'), ('present', 'present'), (',', ','), ('the', 'the'), ('most', 'most'), ('popular', 'popular'), ('non-linear', 'non-linear'), ('function', 'function'), ('is', 'be'), ('the', 'the'), ('rectified', 'rectify'), ('linear', 'linear'), ('unit', 'unit'), ('(', '('), ('ReLU', 'ReLU'), (')', ')'), (',', ','), ('which', 'which'), ('is', 'be'), ('simply', 'simply'), ('the', 'the'), ('half', 'half'), ('-', '-'), ('wave', 'wave'), ('rectifier', 'rectifier'), ('f(', 'f('), ('z', 'z'), (')', ')'), ('=', '='), ('max', 'max'), ('(', '('), ('z', 'z'), (',', ','), ('0', '0'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('At', 'present'), 'case'), (('present', 'unit'), 'obl'), ((',', 'unit'), 'punct'), (('the', 'function'), 'det'), (('most', 'popular'), 'advmod'), (('popular', 'function'), 'amod'), (('non-linear', 'function'), 'amod'), (('function', 'unit'), 'nsubj'), (('is', 'unit'), 'cop'), (('the', 'unit'), 'det'), (('rectified', 'unit'), 'amod'), (('linear', 'unit'), 'amod'), (('unit', 'root'), 'root'), (('(', 'ReLU'), 'punct'), (('ReLU', 'unit'), 'appos'), ((')', 'ReLU'), 'punct'), ((',', 'rectifier'), 'punct'), (('which', 'rectifier'), 'nsubj'), (('is', 'rectifier'), 'cop'), (('simply', 'rectifier'), 'advmod'), (('the', 'rectifier'), 'det'), (('half', 'wave'), 'compound'), (('-', 'wave'), 'punct'), (('wave', 'rectifier'), 'compound'), (('rectifier', 'unit'), 'acl:relcl'), (('f(', 'z'), 'compound'), (('z', 'rectifier'), 'appos'), ((')', 'rectifier'), 'punct'), (('=', 'unit'), 'acl:relcl'), (('max', '='), 'obj'), (('(', 'z'), 'punct'), (('z', '='), 'dep'), ((',', '0'), 'punct'), (('0', 'z'), 'dep'), ((')', 'z'), 'punct'), (('.', 'unit'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 In past decades, neural nets used smoother non-linearities, such as  tanh(z) or 1/(1 + exp(−z)), but the ReLU typically learns much faster  in networks with many layers, allowing training of a deep supervised  network without unsupervised pre-training28. 

Tokens are: 
>> ['In', 'past', 'decades', ',', 'neural', 'nets', 'used', 'smoother', 'non-linearities', ',', 'such', 'as', 'tanh', '(', 'z', ')', 'or', '1/', '(', '1', '+', 'exp', '(', '−z', ')', ')', ',', 'but', 'the', 'ReLU', 'typically', 'learns', 'much', 'faster', 'in', 'networks', 'with', 'many', 'layers', ',', 'allowing', 'training', 'of', 'a', 'deep', 'supervised', 'network', 'without', 'unsupervised', 'pre-training', '28', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('past', 'ADJ'), ('decades', 'NOUN'), (',', 'PUNCT'), ('neural', 'ADJ'), ('nets', 'NOUN'), ('used', 'VERB'), ('smoother', 'ADJ'), ('non-linearities', 'NOUN'), (',', 'PUNCT'), ('such', 'ADJ'), ('as', 'ADP'), ('tanh', 'NOUN'), ('(', 'PUNCT'), ('z', 'NOUN'), (')', 'PUNCT'), ('or', 'CCONJ'), ('1/', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), ('+', 'SYM'), ('exp', 'NOUN'), ('(', 'PUNCT'), ('−z', 'NUM'), (')', 'PUNCT'), (')', 'PUNCT'), (',', 'PUNCT'), ('but', 'CCONJ'), ('the', 'DET'), ('ReLU', 'PROPN'), ('typically', 'ADV'), ('learns', 'VERB'), ('much', 'ADV'), ('faster', 'ADV'), ('in', 'ADP'), ('networks', 'NOUN'), ('with', 'ADP'), ('many', 'ADJ'), ('layers', 'NOUN'), (',', 'PUNCT'), ('allowing', 'VERB'), ('training', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('deep', 'ADJ'), ('supervised', 'VERB'), ('network', 'NOUN'), ('without', 'ADP'), ('unsupervised', 'ADJ'), ('pre-training', 'NOUN'), ('28', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('past', 'JJ'), ('decades', 'NNS'), (',', ','), ('neural', 'JJ'), ('nets', 'NNS'), ('used', 'VBD'), ('smoother', 'JJR'), ('non-linearities', 'NNS'), (',', ','), ('such', 'JJ'), ('as', 'IN'), ('tanh', 'NN'), ('(', '-LRB-'), ('z', 'NN'), (')', '-RRB-'), ('or', 'CC'), ('1/', 'NNS'), ('(', '-LRB-'), ('1', 'CD'), ('+', 'SYM'), ('exp', 'NN'), ('(', '-LRB-'), ('−z', 'CD'), (')', '-RRB-'), (')', '-RRB-'), (',', ','), ('but', 'CC'), ('the', 'DT'), ('ReLU', 'NNP'), ('typically', 'RB'), ('learns', 'VBZ'), ('much', 'RB'), ('faster', 'RBR'), ('in', 'IN'), ('networks', 'NNS'), ('with', 'IN'), ('many', 'JJ'), ('layers', 'NNS'), (',', ','), ('allowing', 'VBG'), ('training', 'NN'), ('of', 'IN'), ('a', 'DT'), ('deep', 'JJ'), ('supervised', 'VBN'), ('network', 'NN'), ('without', 'IN'), ('unsupervised', 'JJ'), ('pre-training', 'NN'), ('28', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('past', 'past'), ('decades', 'decade'), (',', ','), ('neural', 'neural'), ('nets', 'net'), ('used', 'use'), ('smoother', 'smooth'), ('non-linearities', 'non-linearity'), (',', ','), ('such', 'such'), ('as', 'as'), ('tanh', 'tanh'), ('(', '('), ('z', 'z'), (')', ')'), ('or', 'or'), ('1/', '1/'), ('(', '('), ('1', '1'), ('+', '+'), ('exp', 'exp'), ('(', '('), ('−z', '−z'), (')', ')'), (')', ')'), (',', ','), ('but', 'but'), ('the', 'the'), ('ReLU', 'ReLU'), ('typically', 'typically'), ('learns', 'learn'), ('much', 'much'), ('faster', 'fast'), ('in', 'in'), ('networks', 'network'), ('with', 'with'), ('many', 'many'), ('layers', 'layer'), (',', ','), ('allowing', 'allow'), ('training', 'training'), ('of', 'of'), ('a', 'a'), ('deep', 'deep'), ('supervised', 'supervise'), ('network', 'network'), ('without', 'without'), ('unsupervised', 'unsupervised'), ('pre-training', 'pre-training'), ('28', '28'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'decades'), 'case'), (('past', 'decades'), 'amod'), (('decades', 'used'), 'obl'), ((',', 'decades'), 'punct'), (('neural', 'nets'), 'amod'), (('nets', 'used'), 'nsubj'), (('used', 'root'), 'root'), (('smoother', 'non-linearities'), 'amod'), (('non-linearities', 'used'), 'obj'), ((',', 'tanh'), 'punct'), (('such', 'tanh'), 'case'), (('as', 'such'), 'fixed'), (('tanh', 'non-linearities'), 'nmod'), (('(', 'z'), 'punct'), (('z', 'tanh'), 'appos'), ((')', 'z'), 'punct'), (('or', '1/'), 'cc'), (('1/', 'tanh'), 'conj'), (('(', '1'), 'punct'), (('1', '1/'), 'appos'), (('+', 'exp'), 'cc'), (('exp', '1/'), 'appos'), (('(', '−z'), 'punct'), (('−z', 'exp'), 'appos'), ((')', '−z'), 'punct'), ((')', '−z'), 'punct'), ((',', 'learns'), 'punct'), (('but', 'learns'), 'cc'), (('the', 'ReLU'), 'det'), (('ReLU', 'learns'), 'nsubj'), (('typically', 'learns'), 'advmod'), (('learns', 'used'), 'conj'), (('much', 'faster'), 'advmod'), (('faster', 'learns'), 'advmod'), (('in', 'networks'), 'case'), (('networks', 'learns'), 'obl'), (('with', 'layers'), 'case'), (('many', 'layers'), 'amod'), (('layers', 'networks'), 'nmod'), ((',', 'allowing'), 'punct'), (('allowing', 'learns'), 'advcl'), (('training', 'allowing'), 'obj'), (('of', 'network'), 'case'), (('a', 'network'), 'det'), (('deep', 'network'), 'amod'), (('supervised', 'network'), 'amod'), (('network', 'training'), 'nmod'), (('without', 'pre-training'), 'case'), (('unsupervised', 'pre-training'), 'amod'), (('pre-training', 'network'), 'nmod'), (('28', 'pre-training'), 'nummod'), (('.', 'used'), 'punct')]

 Named Entites are: 
>> [('past decades', 'DATE'), ('28', 'CARDINAL')]

------------------- Sentence 5 -------------------

 Units that are not in  the input or output layer are conventionally called hidden units. 

Tokens are: 
>> ['Units', 'that', 'are', 'not', 'in', 'the', 'input', 'or', 'output', 'layer', 'are', 'conventionally', 'called', 'hidden', 'units', '.'] 

 UPOS tags are: 
>> [('Units', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('not', 'PART'), ('in', 'ADP'), ('the', 'DET'), ('input', 'NOUN'), ('or', 'CCONJ'), ('output', 'NOUN'), ('layer', 'NOUN'), ('are', 'AUX'), ('conventionally', 'ADV'), ('called', 'VERB'), ('hidden', 'VERB'), ('units', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Units', 'NNS'), ('that', 'WDT'), ('are', 'VBP'), ('not', 'RB'), ('in', 'IN'), ('the', 'DT'), ('input', 'NN'), ('or', 'CC'), ('output', 'NN'), ('layer', 'NN'), ('are', 'VBP'), ('conventionally', 'RB'), ('called', 'VBN'), ('hidden', 'VBN'), ('units', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Units', 'unit'), ('that', 'that'), ('are', 'be'), ('not', 'not'), ('in', 'in'), ('the', 'the'), ('input', 'input'), ('or', 'or'), ('output', 'output'), ('layer', 'layer'), ('are', 'be'), ('conventionally', 'conventionally'), ('called', 'call'), ('hidden', 'hide'), ('units', 'unit'), ('.', '.')] 

 Dependency tags are: 
>> [(('Units', 'called'), 'nsubj:pass'), (('that', 'input'), 'nsubj'), (('are', 'input'), 'cop'), (('not', 'input'), 'advmod'), (('in', 'input'), 'case'), (('the', 'input'), 'det'), (('input', 'Units'), 'acl:relcl'), (('or', 'layer'), 'cc'), (('output', 'layer'), 'compound'), (('layer', 'input'), 'conj'), (('are', 'called'), 'aux:pass'), (('conventionally', 'called'), 'advmod'), (('called', 'root'), 'root'), (('hidden', 'units'), 'amod'), (('units', 'called'), 'obj'), (('.', 'called'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 The  hidden layers can be seen as distorting the input in a non-linear way  so that categories become linearly separable by the last layer (Fig. 1). 

Tokens are: 
>> ['The', 'hidden', 'layers', 'can', 'be', 'seen', 'as', 'distorting', 'the', 'input', 'in', 'a', 'non-linear', 'way', 'so', 'that', 'categories', 'become', 'linearly', 'separable', 'by', 'the', 'last', 'layer', '(', 'Fig.', '1', ')', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('hidden', 'ADJ'), ('layers', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('seen', 'VERB'), ('as', 'SCONJ'), ('distorting', 'VERB'), ('the', 'DET'), ('input', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('non-linear', 'ADJ'), ('way', 'NOUN'), ('so', 'SCONJ'), ('that', 'SCONJ'), ('categories', 'NOUN'), ('become', 'VERB'), ('linearly', 'ADV'), ('separable', 'ADJ'), ('by', 'ADP'), ('the', 'DET'), ('last', 'ADJ'), ('layer', 'NOUN'), ('(', 'PUNCT'), ('Fig.', 'PROPN'), ('1', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('hidden', 'JJ'), ('layers', 'NNS'), ('can', 'MD'), ('be', 'VB'), ('seen', 'VBN'), ('as', 'IN'), ('distorting', 'VBG'), ('the', 'DT'), ('input', 'NN'), ('in', 'IN'), ('a', 'DT'), ('non-linear', 'JJ'), ('way', 'NN'), ('so', 'IN'), ('that', 'IN'), ('categories', 'NNS'), ('become', 'VBN'), ('linearly', 'RB'), ('separable', 'JJ'), ('by', 'IN'), ('the', 'DT'), ('last', 'JJ'), ('layer', 'NN'), ('(', '-LRB-'), ('Fig.', 'NNP'), ('1', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('hidden', 'hidden'), ('layers', 'layer'), ('can', 'can'), ('be', 'be'), ('seen', 'see'), ('as', 'as'), ('distorting', 'distort'), ('the', 'the'), ('input', 'input'), ('in', 'in'), ('a', 'a'), ('non-linear', 'non-linear'), ('way', 'way'), ('so', 'so'), ('that', 'that'), ('categories', 'category'), ('become', 'become'), ('linearly', 'linearly'), ('separable', 'separable'), ('by', 'by'), ('the', 'the'), ('last', 'last'), ('layer', 'layer'), ('(', '('), ('Fig.', 'Fig.'), ('1', '1'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'layers'), 'det'), (('hidden', 'layers'), 'amod'), (('layers', 'seen'), 'nsubj:pass'), (('can', 'seen'), 'aux'), (('be', 'seen'), 'aux:pass'), (('seen', 'root'), 'root'), (('as', 'distorting'), 'mark'), (('distorting', 'seen'), 'advcl'), (('the', 'input'), 'det'), (('input', 'distorting'), 'obj'), (('in', 'way'), 'case'), (('a', 'way'), 'det'), (('non-linear', 'way'), 'amod'), (('way', 'distorting'), 'obl'), (('so', 'become'), 'mark'), (('that', 'so'), 'fixed'), (('categories', 'become'), 'nsubj'), (('become', 'seen'), 'advcl'), (('linearly', 'separable'), 'advmod'), (('separable', 'become'), 'xcomp'), (('by', 'layer'), 'case'), (('the', 'layer'), 'det'), (('last', 'layer'), 'amod'), (('layer', 'separable'), 'obl'), (('(', 'Fig.'), 'punct'), (('Fig.', 'become'), 'dep'), (('1', 'Fig.'), 'dep'), ((')', 'Fig.'), 'punct'), (('.', 'seen'), 'punct')]

 Named Entites are: 
>> [('1', 'CARDINAL')]

================================ Paragraph 99 =================================

In the late 1990s, neural nets and backpropagation were largely  forsaken by the machine-learning community and ignored by the  computer-vision and speech-recognition communities. It was widely  thought that learning useful, multistage, feature extractors with lit- tle prior knowledge was infeasible. In particular, it was commonly  thought that simple gradient descent would get trapped in poor local  minima — weight configurations for which no small change would  reduce the average error.  


------------------- Sentence 1 -------------------

 In the late 1990s, neural nets and backpropagation were largely  forsaken by the machine-learning community and ignored by the  computer-vision and speech-recognition communities. 

Tokens are: 
>> ['In', 'the', 'late', '1990s', ',', 'neural', 'nets', 'and', 'backpropagation', 'were', 'largely', 'forsaken', 'by', 'the', 'machine', '-', 'learning', 'community', 'and', 'ignored', 'by', 'the', 'computer', '-', 'vision', 'and', 'speech', '-', 'recognition', 'communities', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('the', 'DET'), ('late', 'ADJ'), ('1990s', 'NOUN'), (',', 'PUNCT'), ('neural', 'ADJ'), ('nets', 'NOUN'), ('and', 'CCONJ'), ('backpropagation', 'NOUN'), ('were', 'AUX'), ('largely', 'ADV'), ('forsaken', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('machine', 'NOUN'), ('-', 'PUNCT'), ('learning', 'NOUN'), ('community', 'NOUN'), ('and', 'CCONJ'), ('ignored', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('computer', 'NOUN'), ('-', 'PUNCT'), ('vision', 'NOUN'), ('and', 'CCONJ'), ('speech', 'NOUN'), ('-', 'PUNCT'), ('recognition', 'NOUN'), ('communities', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('the', 'DT'), ('late', 'JJ'), ('1990s', 'NNS'), (',', ','), ('neural', 'JJ'), ('nets', 'NNS'), ('and', 'CC'), ('backpropagation', 'NN'), ('were', 'VBD'), ('largely', 'RB'), ('forsaken', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('machine', 'NN'), ('-', 'HYPH'), ('learning', 'NN'), ('community', 'NN'), ('and', 'CC'), ('ignored', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('computer', 'NN'), ('-', 'HYPH'), ('vision', 'NN'), ('and', 'CC'), ('speech', 'NN'), ('-', 'HYPH'), ('recognition', 'NN'), ('communities', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('the', 'the'), ('late', 'late'), ('1990s', '1990'), (',', ','), ('neural', 'neural'), ('nets', 'net'), ('and', 'and'), ('backpropagation', 'backpropagation'), ('were', 'be'), ('largely', 'largely'), ('forsaken', 'forsake'), ('by', 'by'), ('the', 'the'), ('machine', 'machine'), ('-', '-'), ('learning', 'learning'), ('community', 'community'), ('and', 'and'), ('ignored', 'ignore'), ('by', 'by'), ('the', 'the'), ('computer', 'computer'), ('-', '-'), ('vision', 'vision'), ('and', 'and'), ('speech', 'speech'), ('-', '-'), ('recognition', 'recognition'), ('communities', 'community'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', '1990s'), 'case'), (('the', '1990s'), 'det'), (('late', '1990s'), 'amod'), (('1990s', 'forsaken'), 'obl'), ((',', 'forsaken'), 'punct'), (('neural', 'nets'), 'amod'), (('nets', 'forsaken'), 'nsubj:pass'), (('and', 'backpropagation'), 'cc'), (('backpropagation', 'nets'), 'conj'), (('were', 'forsaken'), 'aux:pass'), (('largely', 'forsaken'), 'advmod'), (('forsaken', 'root'), 'root'), (('by', 'community'), 'case'), (('the', 'community'), 'det'), (('machine', 'learning'), 'compound'), (('-', 'learning'), 'punct'), (('learning', 'community'), 'compound'), (('community', 'forsaken'), 'obl'), (('and', 'ignored'), 'cc'), (('ignored', 'forsaken'), 'conj'), (('by', 'vision'), 'case'), (('the', 'vision'), 'det'), (('computer', 'vision'), 'compound'), (('-', 'vision'), 'punct'), (('vision', 'ignored'), 'obl'), (('and', 'communities'), 'cc'), (('speech', 'recognition'), 'compound'), (('-', 'recognition'), 'punct'), (('recognition', 'communities'), 'compound'), (('communities', 'vision'), 'conj'), (('.', 'forsaken'), 'punct')]

 Named Entites are: 
>> [('the late 1990s', 'DATE')]

------------------- Sentence 2 -------------------

 It was widely  thought that learning useful, multistage, feature extractors with lit- tle prior knowledge was infeasible. 

Tokens are: 
>> ['It', 'was', 'widely', 'thought', 'that', 'learning', 'useful', ',', 'multistage', ',', 'feature', 'extractors', 'with', 'lit-', 'tle', 'prior', 'knowledge', 'was', 'infeasible', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('was', 'AUX'), ('widely', 'ADV'), ('thought', 'VERB'), ('that', 'SCONJ'), ('learning', 'VERB'), ('useful', 'ADJ'), (',', 'PUNCT'), ('multistage', 'NOUN'), (',', 'PUNCT'), ('feature', 'NOUN'), ('extractors', 'NOUN'), ('with', 'ADP'), ('lit-', 'NOUN'), ('tle', 'NOUN'), ('prior', 'ADJ'), ('knowledge', 'NOUN'), ('was', 'AUX'), ('infeasible', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('was', 'VBD'), ('widely', 'RB'), ('thought', 'VBN'), ('that', 'IN'), ('learning', 'VBG'), ('useful', 'JJ'), (',', ','), ('multistage', 'NN'), (',', ','), ('feature', 'NN'), ('extractors', 'NNS'), ('with', 'IN'), ('lit-', 'NN'), ('tle', 'NN'), ('prior', 'JJ'), ('knowledge', 'NN'), ('was', 'VBD'), ('infeasible', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('was', 'be'), ('widely', 'widely'), ('thought', 'think'), ('that', 'that'), ('learning', 'learn'), ('useful', 'useful'), (',', ','), ('multistage', 'multistage'), (',', ','), ('feature', 'feature'), ('extractors', 'extractor'), ('with', 'with'), ('lit-', 'lit-'), ('tle', 'tle'), ('prior', 'prior'), ('knowledge', 'knowledge'), ('was', 'be'), ('infeasible', 'infeasible'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'thought'), 'expl'), (('was', 'thought'), 'aux:pass'), (('widely', 'thought'), 'advmod'), (('thought', 'root'), 'root'), (('that', 'infeasible'), 'mark'), (('learning', 'infeasible'), 'csubj'), (('useful', 'learning'), 'xcomp'), ((',', 'multistage'), 'punct'), (('multistage', 'useful'), 'conj'), ((',', 'extractors'), 'punct'), (('feature', 'extractors'), 'compound'), (('extractors', 'useful'), 'conj'), (('with', 'tle'), 'case'), (('lit-', 'tle'), 'compound'), (('tle', 'extractors'), 'nmod'), (('prior', 'knowledge'), 'case'), (('knowledge', 'tle'), 'nmod'), (('was', 'infeasible'), 'cop'), (('infeasible', 'thought'), 'ccomp'), (('.', 'thought'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 In particular, it was commonly  thought that simple gradient descent would get trapped in poor local  minima — weight configurations for which no small change would  reduce the average error. 

Tokens are: 
>> ['In', 'particular', ',', 'it', 'was', 'commonly', 'thought', 'that', 'simple', 'gradient', 'descent', 'would', 'get', 'trapped', 'in', 'poor', 'local', 'minima', '—', 'weight', 'configurations', 'for', 'which', 'no', 'small', 'change', 'would', 'reduce', 'the', 'average', 'error', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('particular', 'ADJ'), (',', 'PUNCT'), ('it', 'PRON'), ('was', 'AUX'), ('commonly', 'ADV'), ('thought', 'VERB'), ('that', 'SCONJ'), ('simple', 'ADJ'), ('gradient', 'NOUN'), ('descent', 'NOUN'), ('would', 'AUX'), ('get', 'AUX'), ('trapped', 'VERB'), ('in', 'ADP'), ('poor', 'ADJ'), ('local', 'ADJ'), ('minima', 'NOUN'), ('—', 'PUNCT'), ('weight', 'NOUN'), ('configurations', 'NOUN'), ('for', 'ADP'), ('which', 'PRON'), ('no', 'DET'), ('small', 'ADJ'), ('change', 'NOUN'), ('would', 'AUX'), ('reduce', 'VERB'), ('the', 'DET'), ('average', 'ADJ'), ('error', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('particular', 'JJ'), (',', ','), ('it', 'PRP'), ('was', 'VBD'), ('commonly', 'RB'), ('thought', 'VBN'), ('that', 'IN'), ('simple', 'JJ'), ('gradient', 'NN'), ('descent', 'NN'), ('would', 'MD'), ('get', 'VB'), ('trapped', 'VBN'), ('in', 'IN'), ('poor', 'JJ'), ('local', 'JJ'), ('minima', 'NNS'), ('—', ':'), ('weight', 'NN'), ('configurations', 'NNS'), ('for', 'IN'), ('which', 'WDT'), ('no', 'DT'), ('small', 'JJ'), ('change', 'NN'), ('would', 'MD'), ('reduce', 'VB'), ('the', 'DT'), ('average', 'JJ'), ('error', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('particular', 'particular'), (',', ','), ('it', 'it'), ('was', 'be'), ('commonly', 'commonly'), ('thought', 'think'), ('that', 'that'), ('simple', 'simple'), ('gradient', 'gradient'), ('descent', 'descent'), ('would', 'would'), ('get', 'get'), ('trapped', 'trap'), ('in', 'in'), ('poor', 'poor'), ('local', 'local'), ('minima', 'minima'), ('—', '—'), ('weight', 'weight'), ('configurations', 'configuration'), ('for', 'for'), ('which', 'which'), ('no', 'no'), ('small', 'small'), ('change', 'change'), ('would', 'would'), ('reduce', 'reduce'), ('the', 'the'), ('average', 'average'), ('error', 'error'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'particular'), 'case'), (('particular', 'thought'), 'obl'), ((',', 'thought'), 'punct'), (('it', 'thought'), 'expl'), (('was', 'thought'), 'aux:pass'), (('commonly', 'thought'), 'advmod'), (('thought', 'root'), 'root'), (('that', 'trapped'), 'mark'), (('simple', 'descent'), 'amod'), (('gradient', 'descent'), 'compound'), (('descent', 'trapped'), 'nsubj:pass'), (('would', 'trapped'), 'aux'), (('get', 'trapped'), 'aux:pass'), (('trapped', 'thought'), 'csubj:pass'), (('in', 'minima'), 'case'), (('poor', 'minima'), 'amod'), (('local', 'minima'), 'amod'), (('minima', 'trapped'), 'obl'), (('—', 'configurations'), 'punct'), (('weight', 'configurations'), 'compound'), (('configurations', 'minima'), 'appos'), (('for', 'which'), 'case'), (('which', 'reduce'), 'obl'), (('no', 'change'), 'det'), (('small', 'change'), 'amod'), (('change', 'reduce'), 'nsubj'), (('would', 'reduce'), 'aux'), (('reduce', 'configurations'), 'acl:relcl'), (('the', 'error'), 'det'), (('average', 'error'), 'amod'), (('error', 'reduce'), 'obj'), (('.', 'thought'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 100 =================================

In practice, poor local minima are rarely a problem with large net- works. Regardless of the initial conditions, the system nearly always  reaches solutions of very similar quality. Recent theoretical and  empirical results strongly suggest that local minima are not a serious  issue in general. Instead, the landscape is packed with a combinato- rially large number of saddle points where the gradient is zero, and  the surface curves up in most dimensions and curves down in the  


------------------- Sentence 1 -------------------

 In practice, poor local minima are rarely a problem with large net- works. 

Tokens are: 
>> ['In', 'practice', ',', 'poor', 'local', 'minima', 'are', 'rarely', 'a', 'problem', 'with', 'large', 'net', '-', 'works', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('practice', 'NOUN'), (',', 'PUNCT'), ('poor', 'ADJ'), ('local', 'ADJ'), ('minima', 'NOUN'), ('are', 'AUX'), ('rarely', 'ADV'), ('a', 'DET'), ('problem', 'NOUN'), ('with', 'ADP'), ('large', 'ADJ'), ('net', 'NOUN'), ('-', 'PUNCT'), ('works', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('practice', 'NN'), (',', ','), ('poor', 'JJ'), ('local', 'JJ'), ('minima', 'NNS'), ('are', 'VBP'), ('rarely', 'RB'), ('a', 'DT'), ('problem', 'NN'), ('with', 'IN'), ('large', 'JJ'), ('net', 'NN'), ('-', 'HYPH'), ('works', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('practice', 'practice'), (',', ','), ('poor', 'poor'), ('local', 'local'), ('minima', 'minima'), ('are', 'be'), ('rarely', 'rarely'), ('a', 'a'), ('problem', 'problem'), ('with', 'with'), ('large', 'large'), ('net', 'net'), ('-', '-'), ('works', 'work'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'practice'), 'case'), (('practice', 'problem'), 'obl'), ((',', 'problem'), 'punct'), (('poor', 'minima'), 'amod'), (('local', 'minima'), 'amod'), (('minima', 'problem'), 'nsubj'), (('are', 'problem'), 'cop'), (('rarely', 'problem'), 'advmod'), (('a', 'problem'), 'det'), (('problem', 'root'), 'root'), (('with', 'works'), 'case'), (('large', 'works'), 'amod'), (('net', 'works'), 'compound'), (('-', 'works'), 'punct'), (('works', 'problem'), 'nmod'), (('.', 'problem'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Regardless of the initial conditions, the system nearly always  reaches solutions of very similar quality. 

Tokens are: 
>> ['Regardless', 'of', 'the', 'initial', 'conditions', ',', 'the', 'system', 'nearly', 'always', 'reaches', 'solutions', 'of', 'very', 'similar', 'quality', '.'] 

 UPOS tags are: 
>> [('Regardless', 'ADV'), ('of', 'ADP'), ('the', 'DET'), ('initial', 'ADJ'), ('conditions', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('system', 'NOUN'), ('nearly', 'ADV'), ('always', 'ADV'), ('reaches', 'VERB'), ('solutions', 'NOUN'), ('of', 'ADP'), ('very', 'ADV'), ('similar', 'ADJ'), ('quality', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Regardless', 'RB'), ('of', 'IN'), ('the', 'DT'), ('initial', 'JJ'), ('conditions', 'NNS'), (',', ','), ('the', 'DT'), ('system', 'NN'), ('nearly', 'RB'), ('always', 'RB'), ('reaches', 'VBZ'), ('solutions', 'NNS'), ('of', 'IN'), ('very', 'RB'), ('similar', 'JJ'), ('quality', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Regardless', 'regardless'), ('of', 'of'), ('the', 'the'), ('initial', 'initial'), ('conditions', 'condition'), (',', ','), ('the', 'the'), ('system', 'system'), ('nearly', 'nearly'), ('always', 'always'), ('reaches', 'reach'), ('solutions', 'solution'), ('of', 'of'), ('very', 'very'), ('similar', 'similar'), ('quality', 'quality'), ('.', '.')] 

 Dependency tags are: 
>> [(('Regardless', 'reaches'), 'advmod'), (('of', 'conditions'), 'case'), (('the', 'conditions'), 'det'), (('initial', 'conditions'), 'amod'), (('conditions', 'Regardless'), 'obl'), ((',', 'reaches'), 'punct'), (('the', 'system'), 'det'), (('system', 'reaches'), 'nsubj'), (('nearly', 'always'), 'advmod'), (('always', 'reaches'), 'advmod'), (('reaches', 'root'), 'root'), (('solutions', 'reaches'), 'obj'), (('of', 'quality'), 'case'), (('very', 'similar'), 'advmod'), (('similar', 'quality'), 'amod'), (('quality', 'solutions'), 'nmod'), (('.', 'reaches'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Recent theoretical and  empirical results strongly suggest that local minima are not a serious  issue in general. 

Tokens are: 
>> ['Recent', 'theoretical', 'and', 'empirical', 'results', 'strongly', 'suggest', 'that', 'local', 'minima', 'are', 'not', 'a', 'serious', 'issue', 'in', 'general', '.'] 

 UPOS tags are: 
>> [('Recent', 'ADJ'), ('theoretical', 'ADJ'), ('and', 'CCONJ'), ('empirical', 'ADJ'), ('results', 'NOUN'), ('strongly', 'ADV'), ('suggest', 'VERB'), ('that', 'SCONJ'), ('local', 'ADJ'), ('minima', 'NOUN'), ('are', 'AUX'), ('not', 'PART'), ('a', 'DET'), ('serious', 'ADJ'), ('issue', 'NOUN'), ('in', 'ADP'), ('general', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Recent', 'JJ'), ('theoretical', 'JJ'), ('and', 'CC'), ('empirical', 'JJ'), ('results', 'NNS'), ('strongly', 'RB'), ('suggest', 'VBP'), ('that', 'IN'), ('local', 'JJ'), ('minima', 'NNS'), ('are', 'VBP'), ('not', 'RB'), ('a', 'DT'), ('serious', 'JJ'), ('issue', 'NN'), ('in', 'IN'), ('general', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('Recent', 'Recent'), ('theoretical', 'theoretical'), ('and', 'and'), ('empirical', 'empirical'), ('results', 'result'), ('strongly', 'strongly'), ('suggest', 'suggest'), ('that', 'that'), ('local', 'local'), ('minima', 'minima'), ('are', 'be'), ('not', 'not'), ('a', 'a'), ('serious', 'serious'), ('issue', 'issue'), ('in', 'in'), ('general', 'general'), ('.', '.')] 

 Dependency tags are: 
>> [(('Recent', 'results'), 'amod'), (('theoretical', 'results'), 'amod'), (('and', 'empirical'), 'cc'), (('empirical', 'theoretical'), 'conj'), (('results', 'suggest'), 'nsubj'), (('strongly', 'suggest'), 'advmod'), (('suggest', 'root'), 'root'), (('that', 'issue'), 'mark'), (('local', 'minima'), 'amod'), (('minima', 'issue'), 'nsubj'), (('are', 'issue'), 'cop'), (('not', 'issue'), 'advmod'), (('a', 'issue'), 'det'), (('serious', 'issue'), 'amod'), (('issue', 'suggest'), 'ccomp'), (('in', 'general'), 'case'), (('general', 'issue'), 'nmod'), (('.', 'suggest'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Instead, the landscape is packed with a combinato- rially large number of saddle points where the gradient is zero, and  the surface curves up in most dimensions and curves down in the 

Tokens are: 
>> ['Instead', ',', 'the', 'landscape', 'is', 'packed', 'with', 'a', 'combinato', '-', 'rially', 'large', 'number', 'of', 'saddle', 'points', 'where', 'the', 'gradient', 'is', 'zero', ',', 'and', 'the', 'surface', 'curves', 'up', 'in', 'most', 'dimensions', 'and', 'curves', 'down', 'in', 'the'] 

 UPOS tags are: 
>> [('Instead', 'ADV'), (',', 'PUNCT'), ('the', 'DET'), ('landscape', 'NOUN'), ('is', 'AUX'), ('packed', 'VERB'), ('with', 'ADP'), ('a', 'DET'), ('combinato', 'NOUN'), ('-', 'PUNCT'), ('rially', 'ADV'), ('large', 'ADJ'), ('number', 'NOUN'), ('of', 'ADP'), ('saddle', 'NOUN'), ('points', 'NOUN'), ('where', 'SCONJ'), ('the', 'DET'), ('gradient', 'NOUN'), ('is', 'AUX'), ('zero', 'ADJ'), (',', 'PUNCT'), ('and', 'CCONJ'), ('the', 'DET'), ('surface', 'NOUN'), ('curves', 'VERB'), ('up', 'ADP'), ('in', 'ADP'), ('most', 'ADJ'), ('dimensions', 'NOUN'), ('and', 'CCONJ'), ('curves', 'NOUN'), ('down', 'ADP'), ('in', 'ADP'), ('the', 'DET')] 

 XPOS tags are: 
>> [('Instead', 'RB'), (',', ','), ('the', 'DT'), ('landscape', 'NN'), ('is', 'VBZ'), ('packed', 'VBN'), ('with', 'IN'), ('a', 'DT'), ('combinato', 'NN'), ('-', 'HYPH'), ('rially', 'RB'), ('large', 'JJ'), ('number', 'NN'), ('of', 'IN'), ('saddle', 'NN'), ('points', 'NNS'), ('where', 'WRB'), ('the', 'DT'), ('gradient', 'NN'), ('is', 'VBZ'), ('zero', 'JJ'), (',', ','), ('and', 'CC'), ('the', 'DT'), ('surface', 'NN'), ('curves', 'VBZ'), ('up', 'RP'), ('in', 'IN'), ('most', 'JJS'), ('dimensions', 'NNS'), ('and', 'CC'), ('curves', 'NNS'), ('down', 'RP'), ('in', 'IN'), ('the', 'DT')] 

 Lemmas are: 
>> [('Instead', 'instead'), (',', ','), ('the', 'the'), ('landscape', 'landscape'), ('is', 'be'), ('packed', 'pack'), ('with', 'with'), ('a', 'a'), ('combinato', 'combinato'), ('-', '-'), ('rially', 'rially'), ('large', 'large'), ('number', 'number'), ('of', 'of'), ('saddle', 'saddle'), ('points', 'point'), ('where', 'where'), ('the', 'the'), ('gradient', 'gradient'), ('is', 'be'), ('zero', 'zero'), (',', ','), ('and', 'and'), ('the', 'the'), ('surface', 'surface'), ('curves', 'curve'), ('up', 'up'), ('in', 'in'), ('most', 'most'), ('dimensions', 'dimension'), ('and', 'and'), ('curves', 'curve'), ('down', 'down'), ('in', 'in'), ('the', 'the')] 

 Dependency tags are: 
>> [(('Instead', 'packed'), 'advmod'), ((',', 'packed'), 'punct'), (('the', 'landscape'), 'det'), (('landscape', 'packed'), 'nsubj:pass'), (('is', 'packed'), 'aux:pass'), (('packed', 'root'), 'root'), (('with', 'number'), 'case'), (('a', 'number'), 'det'), (('combinato', 'rially'), 'compound'), (('-', 'rially'), 'punct'), (('rially', 'large'), 'advmod'), (('large', 'number'), 'amod'), (('number', 'packed'), 'obl'), (('of', 'points'), 'case'), (('saddle', 'points'), 'compound'), (('points', 'number'), 'nmod'), (('where', 'zero'), 'mark'), (('the', 'gradient'), 'det'), (('gradient', 'zero'), 'nsubj'), (('is', 'zero'), 'cop'), (('zero', 'points'), 'acl:relcl'), ((',', 'curves'), 'punct'), (('and', 'curves'), 'cc'), (('the', 'surface'), 'det'), (('surface', 'curves'), 'nsubj'), (('curves', 'packed'), 'conj'), (('up', 'curves'), 'compound:prt'), (('in', 'dimensions'), 'case'), (('most', 'dimensions'), 'amod'), (('dimensions', 'curves'), 'obl'), (('and', 'curves'), 'cc'), (('curves', 'dimensions'), 'conj'), (('down', 'dimensions'), 'conj'), (('in', 'the'), 'case'), (('the', 'dimensions'), 'nmod')]

 Named Entites are: 
>> [('zero', 'CARDINAL')]

================================ Paragraph 101 =================================

Figure 2 | Inside a convolutional network. The outputs (not the filters)  of each layer (horizontally) of a typical convolutional network architecture  applied to the image of a Samoyed dog (bottom left; and RGB (red, green,  blue) inputs, bottom right). Each rectangular image is a feature map  


------------------- Sentence 1 -------------------

 Figure 2 | Inside a convolutional network. 

Tokens are: 
>> ['Figure', '2', '|', 'Inside', 'a', 'convolutional', 'network', '.'] 

 UPOS tags are: 
>> [('Figure', 'PROPN'), ('2', 'NUM'), ('|', 'PUNCT'), ('Inside', 'ADP'), ('a', 'DET'), ('convolutional', 'ADJ'), ('network', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Figure', 'NNP'), ('2', 'CD'), ('|', ':'), ('Inside', 'IN'), ('a', 'DT'), ('convolutional', 'JJ'), ('network', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Figure', 'Figure'), ('2', '2'), ('|', '|'), ('Inside', 'Inside'), ('a', 'a'), ('convolutional', 'convolutional'), ('network', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('Figure', 'root'), 'root'), (('2', 'Figure'), 'dep'), (('|', 'Figure'), 'punct'), (('Inside', 'network'), 'case'), (('a', 'network'), 'det'), (('convolutional', 'network'), 'amod'), (('network', 'Figure'), 'nmod'), (('.', 'Figure'), 'punct')]

 Named Entites are: 
>> [('2', 'CARDINAL')]

------------------- Sentence 2 -------------------

 The outputs (not the filters)  of each layer (horizontally) of a typical convolutional network architecture  applied to the image of a Samoyed dog (bottom left; and RGB (red, green,  blue) inputs, bottom right). 

Tokens are: 
>> ['The', 'outputs', '(', 'not', 'the', 'filters', ')', 'of', 'each', 'layer', '(', 'horizontally', ')', 'of', 'a', 'typical', 'convolutional', 'network', 'architecture', 'applied', 'to', 'the', 'image', 'of', 'a', 'Samoyed', 'dog', '(', 'bottom', 'left', ';', 'and', 'RGB', '(', 'red', ',', 'green', ',', 'blue', ')', 'inputs', ',', 'bottom', 'right', ')', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('outputs', 'NOUN'), ('(', 'PUNCT'), ('not', 'PART'), ('the', 'DET'), ('filters', 'NOUN'), (')', 'PUNCT'), ('of', 'ADP'), ('each', 'DET'), ('layer', 'NOUN'), ('(', 'PUNCT'), ('horizontally', 'ADV'), (')', 'PUNCT'), ('of', 'ADP'), ('a', 'DET'), ('typical', 'ADJ'), ('convolutional', 'ADJ'), ('network', 'NOUN'), ('architecture', 'NOUN'), ('applied', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('image', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('Samoyed', 'ADJ'), ('dog', 'NOUN'), ('(', 'PUNCT'), ('bottom', 'NOUN'), ('left', 'VERB'), (';', 'PUNCT'), ('and', 'CCONJ'), ('RGB', 'NOUN'), ('(', 'PUNCT'), ('red', 'ADJ'), (',', 'PUNCT'), ('green', 'ADJ'), (',', 'PUNCT'), ('blue', 'ADJ'), (')', 'PUNCT'), ('inputs', 'NOUN'), (',', 'PUNCT'), ('bottom', 'NOUN'), ('right', 'ADV'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('outputs', 'NNS'), ('(', '-LRB-'), ('not', 'RB'), ('the', 'DT'), ('filters', 'NNS'), (')', '-RRB-'), ('of', 'IN'), ('each', 'DT'), ('layer', 'NN'), ('(', '-LRB-'), ('horizontally', 'RB'), (')', '-RRB-'), ('of', 'IN'), ('a', 'DT'), ('typical', 'JJ'), ('convolutional', 'JJ'), ('network', 'NN'), ('architecture', 'NN'), ('applied', 'VBN'), ('to', 'IN'), ('the', 'DT'), ('image', 'NN'), ('of', 'IN'), ('a', 'DT'), ('Samoyed', 'JJ'), ('dog', 'NN'), ('(', '-LRB-'), ('bottom', 'NN'), ('left', 'VBN'), (';', ':'), ('and', 'CC'), ('RGB', 'NN'), ('(', '-LRB-'), ('red', 'JJ'), (',', ','), ('green', 'JJ'), (',', ','), ('blue', 'JJ'), (')', '-RRB-'), ('inputs', 'NNS'), (',', ','), ('bottom', 'NN'), ('right', 'RB'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('outputs', 'output'), ('(', '('), ('not', 'not'), ('the', 'the'), ('filters', 'filter'), (')', ')'), ('of', 'of'), ('each', 'each'), ('layer', 'layer'), ('(', '('), ('horizontally', 'horizontally'), (')', ')'), ('of', 'of'), ('a', 'a'), ('typical', 'typical'), ('convolutional', 'convolutional'), ('network', 'network'), ('architecture', 'architecture'), ('applied', 'apply'), ('to', 'to'), ('the', 'the'), ('image', 'image'), ('of', 'of'), ('a', 'a'), ('Samoyed', 'samoyed'), ('dog', 'dog'), ('(', '('), ('bottom', 'bottom'), ('left', 'leave'), (';', ';'), ('and', 'and'), ('RGB', 'rgb'), ('(', '('), ('red', 'red'), (',', ','), ('green', 'green'), (',', ','), ('blue', 'blue'), (')', ')'), ('inputs', 'input'), (',', ','), ('bottom', 'bottom'), ('right', 'right'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'outputs'), 'det'), (('outputs', 'root'), 'root'), (('(', 'filters'), 'punct'), (('not', 'filters'), 'advmod'), (('the', 'filters'), 'det'), (('filters', 'outputs'), 'appos'), ((')', 'filters'), 'punct'), (('of', 'layer'), 'case'), (('each', 'layer'), 'det'), (('layer', 'outputs'), 'nmod'), (('(', 'horizontally'), 'punct'), (('horizontally', 'layer'), 'advmod'), ((')', 'horizontally'), 'punct'), (('of', 'architecture'), 'case'), (('a', 'architecture'), 'det'), (('typical', 'architecture'), 'amod'), (('convolutional', 'architecture'), 'amod'), (('network', 'architecture'), 'compound'), (('architecture', 'outputs'), 'nmod'), (('applied', 'architecture'), 'acl'), (('to', 'image'), 'case'), (('the', 'image'), 'det'), (('image', 'applied'), 'obl'), (('of', 'dog'), 'case'), (('a', 'dog'), 'det'), (('Samoyed', 'dog'), 'amod'), (('dog', 'image'), 'nmod'), (('(', 'left'), 'punct'), (('bottom', 'left'), 'obl:npmod'), (('left', 'dog'), 'acl'), ((';', 'RGB'), 'punct'), (('and', 'RGB'), 'cc'), (('RGB', 'dog'), 'conj'), (('(', 'inputs'), 'punct'), (('red', 'inputs'), 'amod'), ((',', 'green'), 'punct'), (('green', 'inputs'), 'amod'), ((',', 'blue'), 'punct'), (('blue', 'red'), 'conj'), ((')', 'blue'), 'punct'), (('inputs', 'RGB'), 'appos'), ((',', 'bottom'), 'punct'), (('bottom', 'inputs'), 'appos'), (('right', 'bottom'), 'advmod'), ((')', 'inputs'), 'punct'), (('.', 'outputs'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Each rectangular image is a feature map 

Tokens are: 
>> ['Each', 'rectangular', 'image', 'is', 'a', 'feature', 'map'] 

 UPOS tags are: 
>> [('Each', 'DET'), ('rectangular', 'ADJ'), ('image', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('feature', 'NOUN'), ('map', 'NOUN')] 

 XPOS tags are: 
>> [('Each', 'DT'), ('rectangular', 'JJ'), ('image', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('feature', 'NN'), ('map', 'NN')] 

 Lemmas are: 
>> [('Each', 'each'), ('rectangular', 'rectangular'), ('image', 'image'), ('is', 'be'), ('a', 'a'), ('feature', 'feature'), ('map', 'map')] 

 Dependency tags are: 
>> [(('Each', 'image'), 'det'), (('rectangular', 'image'), 'amod'), (('image', 'map'), 'nsubj'), (('is', 'map'), 'cop'), (('a', 'map'), 'det'), (('feature', 'map'), 'compound'), (('map', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 102 =================================

corresponding to the output for one of the learned features, detected at each  of the image positions. Information flows bottom up, with lower-level features  acting as oriented edge detectors, and a score is computed for each image class  in output. ReLU, rectified linear unit. 


------------------- Sentence 1 -------------------

 corresponding to the output for one of the learned features, detected at each  of the image positions. 

Tokens are: 
>> ['corresponding', 'to', 'the', 'output', 'for', 'one', 'of', 'the', 'learned', 'features', ',', 'detected', 'at', 'each', 'of', 'the', 'image', 'positions', '.'] 

 UPOS tags are: 
>> [('corresponding', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('output', 'NOUN'), ('for', 'ADP'), ('one', 'NUM'), ('of', 'ADP'), ('the', 'DET'), ('learned', 'VERB'), ('features', 'NOUN'), (',', 'PUNCT'), ('detected', 'VERB'), ('at', 'ADP'), ('each', 'DET'), ('of', 'ADP'), ('the', 'DET'), ('image', 'NOUN'), ('positions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('corresponding', 'VBG'), ('to', 'IN'), ('the', 'DT'), ('output', 'NN'), ('for', 'IN'), ('one', 'CD'), ('of', 'IN'), ('the', 'DT'), ('learned', 'VBN'), ('features', 'NNS'), (',', ','), ('detected', 'VBN'), ('at', 'IN'), ('each', 'DT'), ('of', 'IN'), ('the', 'DT'), ('image', 'NN'), ('positions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('corresponding', 'corresponding'), ('to', 'to'), ('the', 'the'), ('output', 'output'), ('for', 'for'), ('one', 'one'), ('of', 'of'), ('the', 'the'), ('learned', 'learn'), ('features', 'feature'), (',', ','), ('detected', 'detect'), ('at', 'at'), ('each', 'each'), ('of', 'of'), ('the', 'the'), ('image', 'image'), ('positions', 'position'), ('.', '.')] 

 Dependency tags are: 
>> [(('corresponding', 'detected'), 'advcl'), (('to', 'output'), 'case'), (('the', 'output'), 'det'), (('output', 'corresponding'), 'obl'), (('for', 'one'), 'case'), (('one', 'output'), 'nmod'), (('of', 'features'), 'case'), (('the', 'features'), 'det'), (('learned', 'features'), 'amod'), (('features', 'one'), 'nmod'), ((',', 'detected'), 'punct'), (('detected', 'root'), 'root'), (('at', 'each'), 'case'), (('each', 'detected'), 'obl'), (('of', 'positions'), 'case'), (('the', 'positions'), 'det'), (('image', 'positions'), 'compound'), (('positions', 'each'), 'nmod'), (('.', 'corresponding'), 'punct')]

 Named Entites are: 
>> [('one', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Information flows bottom up, with lower-level features  acting as oriented edge detectors, and a score is computed for each image class  in output. 

Tokens are: 
>> ['Information', 'flows', 'bottom', 'up', ',', 'with', 'lower', '-', 'level', 'features', 'acting', 'as', 'oriented', 'edge', 'detectors', ',', 'and', 'a', 'score', 'is', 'computed', 'for', 'each', 'image', 'class', 'in', 'output', '.'] 

 UPOS tags are: 
>> [('Information', 'NOUN'), ('flows', 'VERB'), ('bottom', 'VERB'), ('up', 'ADP'), (',', 'PUNCT'), ('with', 'ADP'), ('lower', 'ADJ'), ('-', 'PUNCT'), ('level', 'NOUN'), ('features', 'NOUN'), ('acting', 'VERB'), ('as', 'ADP'), ('oriented', 'VERB'), ('edge', 'NOUN'), ('detectors', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('a', 'DET'), ('score', 'NOUN'), ('is', 'AUX'), ('computed', 'VERB'), ('for', 'ADP'), ('each', 'DET'), ('image', 'NOUN'), ('class', 'NOUN'), ('in', 'ADP'), ('output', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Information', 'NN'), ('flows', 'VBZ'), ('bottom', 'VBP'), ('up', 'RP'), (',', ','), ('with', 'IN'), ('lower', 'JJR'), ('-', 'HYPH'), ('level', 'NN'), ('features', 'NNS'), ('acting', 'VBG'), ('as', 'IN'), ('oriented', 'VBN'), ('edge', 'NN'), ('detectors', 'NNS'), (',', ','), ('and', 'CC'), ('a', 'DT'), ('score', 'NN'), ('is', 'VBZ'), ('computed', 'VBN'), ('for', 'IN'), ('each', 'DT'), ('image', 'NN'), ('class', 'NN'), ('in', 'IN'), ('output', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Information', 'information'), ('flows', 'flow'), ('bottom', 'bottom'), ('up', 'up'), (',', ','), ('with', 'with'), ('lower', 'low'), ('-', '-'), ('level', 'level'), ('features', 'feature'), ('acting', 'act'), ('as', 'as'), ('oriented', 'orient'), ('edge', 'edge'), ('detectors', 'detector'), (',', ','), ('and', 'and'), ('a', 'a'), ('score', 'score'), ('is', 'be'), ('computed', 'compute'), ('for', 'for'), ('each', 'each'), ('image', 'image'), ('class', 'class'), ('in', 'in'), ('output', 'output'), ('.', '.')] 

 Dependency tags are: 
>> [(('Information', 'flows'), 'nsubj'), (('flows', 'bottom'), 'nsubj'), (('bottom', 'root'), 'root'), (('up', 'bottom'), 'compound:prt'), ((',', 'bottom'), 'punct'), (('with', 'features'), 'case'), (('lower', 'level'), 'amod'), (('-', 'level'), 'punct'), (('level', 'features'), 'compound'), (('features', 'bottom'), 'obl'), (('acting', 'features'), 'acl'), (('as', 'detectors'), 'case'), (('oriented', 'detectors'), 'amod'), (('edge', 'detectors'), 'compound'), (('detectors', 'acting'), 'obl'), ((',', 'computed'), 'punct'), (('and', 'computed'), 'cc'), (('a', 'score'), 'det'), (('score', 'computed'), 'nsubj:pass'), (('is', 'computed'), 'aux:pass'), (('computed', 'bottom'), 'conj'), (('for', 'class'), 'case'), (('each', 'class'), 'det'), (('image', 'class'), 'compound'), (('class', 'computed'), 'obl'), (('in', 'output'), 'case'), (('output', 'class'), 'nmod'), (('.', 'flows'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 ReLU, rectified linear unit. 

Tokens are: 
>> ['ReLU', ',', 'rectified', 'linear', 'unit', '.'] 

 UPOS tags are: 
>> [('ReLU', 'PROPN'), (',', 'PUNCT'), ('rectified', 'VERB'), ('linear', 'ADJ'), ('unit', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('ReLU', 'NNP'), (',', ','), ('rectified', 'VBN'), ('linear', 'JJ'), ('unit', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('ReLU', 'ReLU'), (',', ','), ('rectified', 'rectify'), ('linear', 'linear'), ('unit', 'unit'), ('.', '.')] 

 Dependency tags are: 
>> [(('ReLU', 'root'), 'root'), ((',', 'ReLU'), 'punct'), (('rectified', 'unit'), 'amod'), (('linear', 'unit'), 'amod'), (('unit', 'ReLU'), 'appos'), (('.', 'ReLU'), 'punct')]

 Named Entites are: 
>> [('ReLU', 'ORG')]

================================ Paragraph 103 =================================

Red Green Blue 


------------------- Sentence 1 -------------------

 Red Green Blue 

Tokens are: 
>> ['Red', 'Green', 'Blue'] 

 UPOS tags are: 
>> [('Red', 'ADJ'), ('Green', 'ADJ'), ('Blue', 'PROPN')] 

 XPOS tags are: 
>> [('Red', 'NNP'), ('Green', 'NNP'), ('Blue', 'NNP')] 

 Lemmas are: 
>> [('Red', 'Red'), ('Green', 'Green'), ('Blue', 'Blue')] 

 Dependency tags are: 
>> [(('Red', 'Blue'), 'amod'), (('Green', 'Blue'), 'amod'), (('Blue', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 104 =================================

Samoyed (16); Papillon (5.7); Pomeranian (2.7); Arctic fox (1.0); Eskimo dog (0.6); white wolf (0.4); Siberian husky (0.4) 


------------------- Sentence 1 -------------------

 Samoyed (16); Papillon (5.7); Pomeranian (2.7); Arctic fox (1.0); Eskimo dog (0.6); white wolf (0.4); 

Tokens are: 
>> ['Samoyed', '(', '16', ')', ';', 'Papillon', '(', '5.7', ')', ';', 'Pomeranian', '(', '2.7', ')', ';', 'Arctic', 'fox', '(', '1.0', ')', ';', 'Eskimo', 'dog', '(', '0.6', ')', ';', 'white', 'wolf', '(', '0.4', ')', ';'] 

 UPOS tags are: 
>> [('Samoyed', 'PROPN'), ('(', 'PUNCT'), ('16', 'NUM'), (')', 'PUNCT'), (';', 'PUNCT'), ('Papillon', 'PROPN'), ('(', 'PUNCT'), ('5.7', 'NUM'), (')', 'PUNCT'), (';', 'PUNCT'), ('Pomeranian', 'PROPN'), ('(', 'PUNCT'), ('2.7', 'NUM'), (')', 'PUNCT'), (';', 'PUNCT'), ('Arctic', 'ADJ'), ('fox', 'NOUN'), ('(', 'PUNCT'), ('1.0', 'NUM'), (')', 'PUNCT'), (';', 'PUNCT'), ('Eskimo', 'ADJ'), ('dog', 'NOUN'), ('(', 'PUNCT'), ('0.6', 'NUM'), (')', 'PUNCT'), (';', 'PUNCT'), ('white', 'ADJ'), ('wolf', 'NOUN'), ('(', 'PUNCT'), ('0.4', 'NUM'), (')', 'PUNCT'), (';', 'PUNCT')] 

 XPOS tags are: 
>> [('Samoyed', 'NNP'), ('(', '-LRB-'), ('16', 'CD'), (')', '-RRB-'), (';', ':'), ('Papillon', 'NNP'), ('(', '-LRB-'), ('5.7', 'CD'), (')', '-RRB-'), (';', ':'), ('Pomeranian', 'NNP'), ('(', '-LRB-'), ('2.7', 'CD'), (')', '-RRB-'), (';', ':'), ('Arctic', 'JJ'), ('fox', 'NN'), ('(', '-LRB-'), ('1.0', 'CD'), (')', '-RRB-'), (';', ','), ('Eskimo', 'JJ'), ('dog', 'NN'), ('(', '-LRB-'), ('0.6', 'CD'), (')', '-RRB-'), (';', ','), ('white', 'JJ'), ('wolf', 'NN'), ('(', '-LRB-'), ('0.4', 'CD'), (')', '-RRB-'), (';', ',')] 

 Lemmas are: 
>> [('Samoyed', 'Samoyed'), ('(', '('), ('16', '16'), (')', ')'), (';', ';'), ('Papillon', 'Papillon'), ('(', '('), ('5.7', '5.7'), (')', ')'), (';', ';'), ('Pomeranian', 'Pomeranian'), ('(', '('), ('2.7', '2.7'), (')', ')'), (';', ';'), ('Arctic', 'Arctic'), ('fox', 'fox'), ('(', '('), ('1.0', '1.0'), (')', ')'), (';', ';'), ('Eskimo', 'Eskimo'), ('dog', 'dog'), ('(', '('), ('0.6', '0.6'), (')', ')'), (';', ';'), ('white', 'white'), ('wolf', 'wolf'), ('(', '('), ('0.4', '0.4'), (')', ')'), (';', ';')] 

 Dependency tags are: 
>> [(('Samoyed', 'root'), 'root'), (('(', '16'), 'punct'), (('16', 'Samoyed'), 'dep'), ((')', '16'), 'punct'), ((';', 'Papillon'), 'punct'), (('Papillon', 'Samoyed'), 'parataxis'), (('(', '5.7'), 'punct'), (('5.7', 'Papillon'), 'dep'), ((')', '5.7'), 'punct'), ((';', 'Pomeranian'), 'punct'), (('Pomeranian', 'Samoyed'), 'parataxis'), (('(', '2.7'), 'punct'), (('2.7', 'Pomeranian'), 'dep'), ((')', '2.7'), 'punct'), ((';', 'fox'), 'punct'), (('Arctic', 'fox'), 'amod'), (('fox', 'Samoyed'), 'conj'), (('(', '1.0'), 'punct'), (('1.0', 'fox'), 'appos'), ((')', '1.0'), 'punct'), ((';', 'dog'), 'punct'), (('Eskimo', 'dog'), 'amod'), (('dog', 'fox'), 'appos'), (('(', '0.6'), 'punct'), (('0.6', 'dog'), 'appos'), ((')', '0.6'), 'punct'), ((';', 'wolf'), 'punct'), (('white', 'wolf'), 'amod'), (('wolf', 'dog'), 'appos'), (('(', '0.4'), 'punct'), (('0.4', 'wolf'), 'nummod'), ((')', '0.4'), 'punct'), ((';', 'Samoyed'), 'punct')]

 Named Entites are: 
>> [('16', 'CARDINAL'), ('Papillon', 'GPE'), ('5.7', 'CARDINAL'), ('2.7', 'CARDINAL'), ('1.0', 'CARDINAL'), ('0.6', 'CARDINAL'), ('0.4', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Siberian husky (0.4) 

Tokens are: 
>> ['Siberian', 'husky', '(', '0.4', ')'] 

 UPOS tags are: 
>> [('Siberian', 'ADJ'), ('husky', 'ADJ'), ('(', 'PUNCT'), ('0.4', 'NUM'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Siberian', 'JJ'), ('husky', 'JJ'), ('(', '-LRB-'), ('0.4', 'CD'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Siberian', 'Siberian'), ('husky', 'husky'), ('(', '('), ('0.4', '0.4'), (')', ')')] 

 Dependency tags are: 
>> [(('Siberian', 'husky'), 'amod'), (('husky', 'root'), 'root'), (('(', '0.4'), 'punct'), (('0.4', 'husky'), 'appos'), ((')', '0.4'), 'punct')]

 Named Entites are: 
>> [('Siberian', 'NORP'), ('0.4', 'CARDINAL')]

================================ Paragraph 105 =================================

Convolutions and ReLU 


------------------- Sentence 1 -------------------

 Convolutions and ReLU 

Tokens are: 
>> ['Convolutions', 'and', 'ReLU'] 

 UPOS tags are: 
>> [('Convolutions', 'NOUN'), ('and', 'CCONJ'), ('ReLU', 'PROPN')] 

 XPOS tags are: 
>> [('Convolutions', 'NNS'), ('and', 'CC'), ('ReLU', 'NNP')] 

 Lemmas are: 
>> [('Convolutions', 'convolution'), ('and', 'and'), ('ReLU', 'ReLU')] 

 Dependency tags are: 
>> [(('Convolutions', 'root'), 'root'), (('and', 'ReLU'), 'cc'), (('ReLU', 'Convolutions'), 'conj')]

 Named Entites are: 
>> [('ReLU', 'ORG')]

================================ Paragraph 106 =================================

Max pooling 


------------------- Sentence 1 -------------------

 Max pooling 

Tokens are: 
>> ['Max', 'pooling'] 

 UPOS tags are: 
>> [('Max', 'PROPN'), ('pooling', 'NOUN')] 

 XPOS tags are: 
>> [('Max', 'NNP'), ('pooling', 'NN')] 

 Lemmas are: 
>> [('Max', 'Max'), ('pooling', 'pooling')] 

 Dependency tags are: 
>> [(('Max', 'root'), 'root'), (('pooling', 'Max'), 'flat')]

 Named Entites are: 
>> [('Max', 'PERSON')]

================================ Paragraph 107 =================================

Max pooling 


------------------- Sentence 1 -------------------

 Max pooling 

Tokens are: 
>> ['Max', 'pooling'] 

 UPOS tags are: 
>> [('Max', 'PROPN'), ('pooling', 'NOUN')] 

 XPOS tags are: 
>> [('Max', 'NNP'), ('pooling', 'NN')] 

 Lemmas are: 
>> [('Max', 'Max'), ('pooling', 'pooling')] 

 Dependency tags are: 
>> [(('Max', 'root'), 'root'), (('pooling', 'Max'), 'flat')]

 Named Entites are: 
>> [('Max', 'PERSON')]

================================ Paragraph 108 =================================

Convolutions and ReLU 


------------------- Sentence 1 -------------------

 Convolutions and ReLU 

Tokens are: 
>> ['Convolutions', 'and', 'ReLU'] 

 UPOS tags are: 
>> [('Convolutions', 'NOUN'), ('and', 'CCONJ'), ('ReLU', 'PROPN')] 

 XPOS tags are: 
>> [('Convolutions', 'NNS'), ('and', 'CC'), ('ReLU', 'NNP')] 

 Lemmas are: 
>> [('Convolutions', 'convolution'), ('and', 'and'), ('ReLU', 'ReLU')] 

 Dependency tags are: 
>> [(('Convolutions', 'root'), 'root'), (('and', 'ReLU'), 'cc'), (('ReLU', 'Convolutions'), 'conj')]

 Named Entites are: 
>> [('ReLU', 'ORG')]

================================ Paragraph 109 =================================

Convolutions and ReLU 


------------------- Sentence 1 -------------------

 Convolutions and ReLU 

Tokens are: 
>> ['Convolutions', 'and', 'ReLU'] 

 UPOS tags are: 
>> [('Convolutions', 'NOUN'), ('and', 'CCONJ'), ('ReLU', 'PROPN')] 

 XPOS tags are: 
>> [('Convolutions', 'NNS'), ('and', 'CC'), ('ReLU', 'NNP')] 

 Lemmas are: 
>> [('Convolutions', 'convolution'), ('and', 'and'), ('ReLU', 'ReLU')] 

 Dependency tags are: 
>> [(('Convolutions', 'root'), 'root'), (('and', 'ReLU'), 'cc'), (('ReLU', 'Convolutions'), 'conj')]

 Named Entites are: 
>> [('ReLU', 'ORG')]

================================ Paragraph 110 =================================

4 3 8  |  N A T U R E  |  V O L  5 2 1  |  2 8  M A Y  2 0 1 5 


------------------- Sentence 1 -------------------

 4 3 8  |  N A T U R E  |  V O L  5 2 1  |  2 8  M A Y  2 0 1 5 

Tokens are: 
>> ['4', '3', '8', '|', 'N', 'A', 'T', 'U', 'R', 'E', '|', 'V', 'O', 'L', '5', '2', '1', '|', '2', '8', 'M', 'A', 'Y', '2', '0', '1', '5'] 

 UPOS tags are: 
>> [('4', 'NUM'), ('3', 'NUM'), ('8', 'NUM'), ('|', 'PUNCT'), ('N', 'NOUN'), ('A', 'NUM'), ('T', 'NOUN'), ('U', 'NOUN'), ('R', 'NOUN'), ('E', 'NOUN'), ('|', 'SYM'), ('V', 'NOUN'), ('O', 'SYM'), ('L', 'SYM'), ('5', 'NUM'), ('2', 'NUM'), ('1', 'NUM'), ('|', 'SYM'), ('2', 'NUM'), ('8', 'NUM'), ('M', 'NUM'), ('A', 'NUM'), ('Y', 'NOUN'), ('2', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('5', 'NUM')] 

 XPOS tags are: 
>> [('4', 'CD'), ('3', 'CD'), ('8', 'CD'), ('|', ':'), ('N', 'NN'), ('A', 'CD'), ('T', 'NN'), ('U', 'NNS'), ('R', 'NNS'), ('E', 'NN'), ('|', 'SYM'), ('V', 'NN'), ('O', 'SYM'), ('L', 'SYM'), ('5', 'CD'), ('2', 'CD'), ('1', 'CD'), ('|', 'SYM'), ('2', 'CD'), ('8', 'CD'), ('M', 'CD'), ('A', 'CD'), ('Y', 'NN'), ('2', 'CD'), ('0', 'CD'), ('1', 'CD'), ('5', 'CD')] 

 Lemmas are: 
>> [('4', '4'), ('3', '3'), ('8', '8'), ('|', '|'), ('N', 'N'), ('A', 'a'), ('T', 'T'), ('U', 'U'), ('R', 'R'), ('E', 'e'), ('|', '|'), ('V', 'V'), ('O', 'o'), ('L', 'l'), ('5', '5'), ('2', '2'), ('1', '1'), ('|', '|'), ('2', '2'), ('8', '8'), ('M', 'm'), ('A', 'a'), ('Y', 'Y'), ('2', '2'), ('0', '0'), ('1', '1'), ('5', '5')] 

 Dependency tags are: 
>> [(('4', '3'), 'compound'), (('3', '8'), 'compound'), (('8', 'N'), 'nummod'), (('|', '8'), 'punct'), (('N', 'root'), 'root'), (('A', 'N'), 'nummod'), (('T', 'N'), 'appos'), (('U', 'R'), 'compound'), (('R', 'E'), 'compound'), (('E', 'N'), 'list'), (('|', 'E'), 'compound'), (('V', 'E'), 'appos'), (('O', '5'), 'case'), (('L', '5'), 'compound'), (('5', 'V'), 'appos'), (('2', '5'), 'conj'), (('1', '5'), 'conj'), (('|', '2'), 'case'), (('2', '5'), 'conj'), (('8', '2'), 'flat'), (('M', '8'), 'flat'), (('A', '8'), 'flat'), (('Y', '2'), 'nsubj'), (('2', '8'), 'conj'), (('0', '2'), 'flat'), (('1', '2'), 'flat'), (('5', '1'), 'flat')]

 Named Entites are: 
>> [('1', 'CARDINAL'), ('5', 'CARDINAL')]

================================ Paragraph 111 =================================

REVIEWINSIGHT 


------------------- Sentence 1 -------------------

 REVIEWINSIGHT 

Tokens are: 
>> ['REVIEWINSIGHT'] 

 UPOS tags are: 
>> [('REVIEWINSIGHT', 'NOUN')] 

 XPOS tags are: 
>> [('REVIEWINSIGHT', 'NNS')] 

 Lemmas are: 
>> [('REVIEWINSIGHT', 'reviewinsight')] 

 Dependency tags are: 
>> [(('REVIEWINSIGHT', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 112 =================================

© 2015 Macmillan Publishers Limited. All rights reserved


------------------- Sentence 1 -------------------

 © 2015 Macmillan Publishers Limited. 

Tokens are: 
>> ['©', '2015', 'Macmillan', 'Publishers', 'Limited', '.'] 

 UPOS tags are: 
>> [('©', 'ADP'), ('2015', 'NUM'), ('Macmillan', 'PROPN'), ('Publishers', 'PROPN'), ('Limited', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('©', 'IN'), ('2015', 'CD'), ('Macmillan', 'NNP'), ('Publishers', 'NNPS'), ('Limited', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('©', 'at'), ('2015', '2015'), ('Macmillan', 'Macmillan'), ('Publishers', 'Publisher'), ('Limited', 'Limited'), ('.', '.')] 

 Dependency tags are: 
>> [(('©', 'Limited'), 'case'), (('2015', 'Limited'), 'nummod'), (('Macmillan', 'Limited'), 'compound'), (('Publishers', 'Limited'), 'compound'), (('Limited', 'root'), 'root'), (('.', 'Limited'), 'punct')]

 Named Entites are: 
>> [('2015', 'DATE'), ('Macmillan Publishers Limited', 'ORG')]

------------------- Sentence 2 -------------------

 All rights reserved 

Tokens are: 
>> ['All', 'rights', 'reserved'] 

 UPOS tags are: 
>> [('All', 'DET'), ('rights', 'NOUN'), ('reserved', 'VERB')] 

 XPOS tags are: 
>> [('All', 'DT'), ('rights', 'NNS'), ('reserved', 'VBN')] 

 Lemmas are: 
>> [('All', 'all'), ('rights', 'rights'), ('reserved', 'reserve')] 

 Dependency tags are: 
>> [(('All', 'rights'), 'det'), (('rights', 'root'), 'root'), (('reserved', 'rights'), 'acl')]

 Named Entites are: 
>> []

================================ Paragraph 113 =================================

remainder29,30. The analysis seems to show that saddle points with  only a few downward curving directions are present in very large  numbers, but almost all of them have very similar values of the objec- tive function. Hence, it does not much matter which of these saddle  points the algorithm gets stuck at.  


------------------- Sentence 1 -------------------

 remainder29,30. 

Tokens are: 
>> ['remainder', '29,30', '.'] 

 UPOS tags are: 
>> [('remainder', 'ADJ'), ('29,30', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('remainder', 'JJ'), ('29,30', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('remainder', 'remainder'), ('29,30', '2930'), ('.', '.')] 

 Dependency tags are: 
>> [(('remainder', '29,30'), 'amod'), (('29,30', 'root'), 'root'), (('.', '29,30'), 'punct')]

 Named Entites are: 
>> [('29,30', 'CARDINAL')]

------------------- Sentence 2 -------------------

 The analysis seems to show that saddle points with  only a few downward curving directions are present in very large  numbers, but almost all of them have very similar values of the objec- tive function. 

Tokens are: 
>> ['The', 'analysis', 'seems', 'to', 'show', 'that', 'saddle', 'points', 'with', 'only', 'a', 'few', 'downward', 'curving', 'directions', 'are', 'present', 'in', 'very', 'large', 'numbers', ',', 'but', 'almost', 'all', 'of', 'them', 'have', 'very', 'similar', 'values', 'of', 'the', 'objec-', 'tive', 'function', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('analysis', 'NOUN'), ('seems', 'VERB'), ('to', 'PART'), ('show', 'VERB'), ('that', 'SCONJ'), ('saddle', 'NOUN'), ('points', 'NOUN'), ('with', 'ADP'), ('only', 'ADV'), ('a', 'DET'), ('few', 'ADJ'), ('downward', 'ADJ'), ('curving', 'VERB'), ('directions', 'NOUN'), ('are', 'AUX'), ('present', 'ADJ'), ('in', 'ADP'), ('very', 'ADV'), ('large', 'ADJ'), ('numbers', 'NOUN'), (',', 'PUNCT'), ('but', 'CCONJ'), ('almost', 'ADV'), ('all', 'DET'), ('of', 'ADP'), ('them', 'PRON'), ('have', 'VERB'), ('very', 'ADV'), ('similar', 'ADJ'), ('values', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('objec-', 'NOUN'), ('tive', 'NOUN'), ('function', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('analysis', 'NN'), ('seems', 'VBZ'), ('to', 'TO'), ('show', 'VB'), ('that', 'IN'), ('saddle', 'NN'), ('points', 'NNS'), ('with', 'IN'), ('only', 'RB'), ('a', 'DT'), ('few', 'JJ'), ('downward', 'JJ'), ('curving', 'VBG'), ('directions', 'NNS'), ('are', 'VBP'), ('present', 'JJ'), ('in', 'IN'), ('very', 'RB'), ('large', 'JJ'), ('numbers', 'NNS'), (',', ','), ('but', 'CC'), ('almost', 'RB'), ('all', 'DT'), ('of', 'IN'), ('them', 'PRP'), ('have', 'VBP'), ('very', 'RB'), ('similar', 'JJ'), ('values', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('objec-', 'NN'), ('tive', 'NN'), ('function', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('analysis', 'analysis'), ('seems', 'seem'), ('to', 'to'), ('show', 'show'), ('that', 'that'), ('saddle', 'saddle'), ('points', 'point'), ('with', 'with'), ('only', 'only'), ('a', 'a'), ('few', 'few'), ('downward', 'downward'), ('curving', 'curve'), ('directions', 'direction'), ('are', 'be'), ('present', 'present'), ('in', 'in'), ('very', 'very'), ('large', 'large'), ('numbers', 'number'), (',', ','), ('but', 'but'), ('almost', 'almost'), ('all', 'all'), ('of', 'of'), ('them', 'they'), ('have', 'have'), ('very', 'very'), ('similar', 'similar'), ('values', 'value'), ('of', 'of'), ('the', 'the'), ('objec-', 'objec-'), ('tive', 'tive'), ('function', 'function'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'analysis'), 'det'), (('analysis', 'seems'), 'nsubj'), (('seems', 'root'), 'root'), (('to', 'show'), 'mark'), (('show', 'seems'), 'xcomp'), (('that', 'present'), 'mark'), (('saddle', 'points'), 'compound'), (('points', 'present'), 'nsubj'), (('with', 'directions'), 'case'), (('only', 'directions'), 'advmod'), (('a', 'directions'), 'det'), (('few', 'directions'), 'amod'), (('downward', 'directions'), 'amod'), (('curving', 'directions'), 'amod'), (('directions', 'points'), 'nmod'), (('are', 'present'), 'cop'), (('present', 'show'), 'ccomp'), (('in', 'numbers'), 'case'), (('very', 'large'), 'advmod'), (('large', 'numbers'), 'amod'), (('numbers', 'present'), 'obl'), ((',', 'have'), 'punct'), (('but', 'have'), 'cc'), (('almost', 'all'), 'advmod'), (('all', 'have'), 'nsubj'), (('of', 'them'), 'case'), (('them', 'all'), 'nmod'), (('have', 'present'), 'conj'), (('very', 'similar'), 'advmod'), (('similar', 'values'), 'amod'), (('values', 'have'), 'obj'), (('of', 'function'), 'case'), (('the', 'function'), 'det'), (('objec-', 'function'), 'compound'), (('tive', 'function'), 'compound'), (('function', 'values'), 'nmod'), (('.', 'seems'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Hence, it does not much matter which of these saddle  points the algorithm gets stuck at. 

Tokens are: 
>> ['Hence', ',', 'it', 'does', 'not', 'much', 'matter', 'which', 'of', 'these', 'saddle', 'points', 'the', 'algorithm', 'gets', 'stuck', 'at', '.'] 

 UPOS tags are: 
>> [('Hence', 'ADV'), (',', 'PUNCT'), ('it', 'PRON'), ('does', 'AUX'), ('not', 'PART'), ('much', 'ADV'), ('matter', 'VERB'), ('which', 'PRON'), ('of', 'ADP'), ('these', 'DET'), ('saddle', 'NOUN'), ('points', 'NOUN'), ('the', 'DET'), ('algorithm', 'NOUN'), ('gets', 'AUX'), ('stuck', 'VERB'), ('at', 'ADP'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Hence', 'RB'), (',', ','), ('it', 'PRP'), ('does', 'VBZ'), ('not', 'RB'), ('much', 'RB'), ('matter', 'VB'), ('which', 'WDT'), ('of', 'IN'), ('these', 'DT'), ('saddle', 'NN'), ('points', 'NNS'), ('the', 'DT'), ('algorithm', 'NN'), ('gets', 'VBZ'), ('stuck', 'VBN'), ('at', 'IN'), ('.', '.')] 

 Lemmas are: 
>> [('Hence', 'hence'), (',', ','), ('it', 'it'), ('does', 'do'), ('not', 'not'), ('much', 'much'), ('matter', 'matter'), ('which', 'which'), ('of', 'of'), ('these', 'this'), ('saddle', 'saddle'), ('points', 'point'), ('the', 'the'), ('algorithm', 'algorithm'), ('gets', 'get'), ('stuck', 'stick'), ('at', 'at'), ('.', '.')] 

 Dependency tags are: 
>> [(('Hence', 'matter'), 'advmod'), ((',', 'matter'), 'punct'), (('it', 'matter'), 'nsubj'), (('does', 'matter'), 'aux'), (('not', 'matter'), 'advmod'), (('much', 'matter'), 'advmod'), (('matter', 'root'), 'root'), (('which', 'stuck'), 'nsubj:pass'), (('of', 'points'), 'case'), (('these', 'points'), 'det'), (('saddle', 'points'), 'compound'), (('points', 'which'), 'nmod'), (('the', 'algorithm'), 'det'), (('algorithm', 'stuck'), 'nsubj'), (('gets', 'stuck'), 'aux:pass'), (('stuck', 'matter'), 'ccomp'), (('at', 'stuck'), 'obl'), (('.', 'matter'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 114 =================================

Interest in deep feedforward networks was revived around 2006  (refs 31–34) by a group of researchers brought together by the Cana- dian Institute for Advanced Research (CIFAR). The researchers intro- duced unsupervised learning procedures that could create layers of  feature detectors without requiring labelled data. The objective in  learning each layer of feature detectors was to be able to reconstruct  or model the activities of feature detectors (or raw inputs) in the layer  below. By ‘pre-training’ several layers of progressively more complex  feature detectors using this reconstruction objective, the weights of a  deep network could be initialized to sensible values. A final layer of  output units could then be added to the top of the network and the  whole deep system could be fine-tuned using standard backpropaga- tion33–35. This worked remarkably well for recognizing handwritten  digits or for detecting pedestrians, especially when the amount of  labelled data was very limited36.  


------------------- Sentence 1 -------------------

 Interest in deep feedforward networks was revived around 2006  (refs 31–34) by a group of researchers brought together by the Cana- dian Institute for Advanced Research (CIFAR). 

Tokens are: 
>> ['Interest', 'in', 'deep', 'feedforward', 'networks', 'was', 'revived', 'around', '2006', '(', 'refs', '31–34', ')', 'by', 'a', 'group', 'of', 'researchers', 'brought', 'together', 'by', 'the', 'Cana', '-', 'dian', 'Institute', 'for', 'Advanced', 'Research', '(', 'CIFAR', ')', '.'] 

 UPOS tags are: 
>> [('Interest', 'NOUN'), ('in', 'ADP'), ('deep', 'ADJ'), ('feedforward', 'ADJ'), ('networks', 'NOUN'), ('was', 'AUX'), ('revived', 'VERB'), ('around', 'ADP'), ('2006', 'NUM'), ('(', 'PUNCT'), ('refs', 'NOUN'), ('31–34', 'NUM'), (')', 'PUNCT'), ('by', 'ADP'), ('a', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('researchers', 'NOUN'), ('brought', 'VERB'), ('together', 'ADV'), ('by', 'ADP'), ('the', 'DET'), ('Cana', 'PROPN'), ('-', 'PUNCT'), ('dian', 'PROPN'), ('Institute', 'PROPN'), ('for', 'ADP'), ('Advanced', 'ADJ'), ('Research', 'PROPN'), ('(', 'PUNCT'), ('CIFAR', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Interest', 'NN'), ('in', 'IN'), ('deep', 'JJ'), ('feedforward', 'JJ'), ('networks', 'NNS'), ('was', 'VBD'), ('revived', 'VBN'), ('around', 'IN'), ('2006', 'CD'), ('(', '-LRB-'), ('refs', 'NNS'), ('31–34', 'CD'), (')', '-RRB-'), ('by', 'IN'), ('a', 'DT'), ('group', 'NN'), ('of', 'IN'), ('researchers', 'NNS'), ('brought', 'VBN'), ('together', 'RB'), ('by', 'IN'), ('the', 'DT'), ('Cana', 'NNP'), ('-', 'HYPH'), ('dian', 'NNP'), ('Institute', 'NNP'), ('for', 'IN'), ('Advanced', 'NNP'), ('Research', 'NNP'), ('(', '-LRB-'), ('CIFAR', 'NNP'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Interest', 'interest'), ('in', 'in'), ('deep', 'deep'), ('feedforward', 'feedforward'), ('networks', 'network'), ('was', 'be'), ('revived', 'revive'), ('around', 'around'), ('2006', '2006'), ('(', '('), ('refs', 'ref'), ('31–34', '31–34'), (')', ')'), ('by', 'by'), ('a', 'a'), ('group', 'group'), ('of', 'of'), ('researchers', 'researcher'), ('brought', 'bring'), ('together', 'together'), ('by', 'by'), ('the', 'the'), ('Cana', 'Cana'), ('-', '-'), ('dian', 'dian'), ('Institute', 'Institute'), ('for', 'for'), ('Advanced', 'Advanced'), ('Research', 'Research'), ('(', '('), ('CIFAR', 'CIFAR'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Interest', 'revived'), 'nsubj:pass'), (('in', 'networks'), 'case'), (('deep', 'networks'), 'amod'), (('feedforward', 'networks'), 'amod'), (('networks', 'Interest'), 'nmod'), (('was', 'revived'), 'aux:pass'), (('revived', 'root'), 'root'), (('around', '2006'), 'case'), (('2006', 'revived'), 'obl'), (('(', 'refs'), 'punct'), (('refs', '2006'), 'appos'), (('31–34', 'refs'), 'dep'), ((')', 'refs'), 'punct'), (('by', 'group'), 'case'), (('a', 'group'), 'det'), (('group', 'revived'), 'obl'), (('of', 'researchers'), 'case'), (('researchers', 'group'), 'nmod'), (('brought', 'researchers'), 'acl'), (('together', 'brought'), 'advmod'), (('by', 'Institute'), 'case'), (('the', 'Institute'), 'det'), (('Cana', 'dian'), 'compound'), (('-', 'dian'), 'punct'), (('dian', 'Institute'), 'compound'), (('Institute', 'brought'), 'obl'), (('for', 'Research'), 'case'), (('Advanced', 'Research'), 'amod'), (('Research', 'Institute'), 'nmod'), (('(', 'CIFAR'), 'punct'), (('CIFAR', 'Research'), 'appos'), ((')', 'CIFAR'), 'punct'), (('.', 'revived'), 'punct')]

 Named Entites are: 
>> [('2006', 'DATE'), ('31–34', 'CARDINAL'), ('the Cana- dian Institute for Advanced Research', 'ORG'), ('CIFAR', 'ORG')]

------------------- Sentence 2 -------------------

 The researchers intro- duced unsupervised learning procedures that could create layers of  feature detectors without requiring labelled data. 

Tokens are: 
>> ['The', 'researchers', 'intro-', 'duced', 'unsupervised', 'learning', 'procedures', 'that', 'could', 'create', 'layers', 'of', 'feature', 'detectors', 'without', 'requiring', 'labelled', 'data', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('researchers', 'NOUN'), ('intro-', 'AUX'), ('duced', 'VERB'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('procedures', 'NOUN'), ('that', 'PRON'), ('could', 'AUX'), ('create', 'VERB'), ('layers', 'NOUN'), ('of', 'ADP'), ('feature', 'NOUN'), ('detectors', 'NOUN'), ('without', 'SCONJ'), ('requiring', 'VERB'), ('labelled', 'VERB'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('researchers', 'NNS'), ('intro-', 'VBP'), ('duced', 'VBD'), ('unsupervised', 'JJ'), ('learning', 'NN'), ('procedures', 'NNS'), ('that', 'WDT'), ('could', 'MD'), ('create', 'VB'), ('layers', 'NNS'), ('of', 'IN'), ('feature', 'NN'), ('detectors', 'NNS'), ('without', 'IN'), ('requiring', 'VBG'), ('labelled', 'VBN'), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('researchers', 'researcher'), ('intro-', 'intro-'), ('duced', 'duce'), ('unsupervised', 'unsupervised'), ('learning', 'learning'), ('procedures', 'procedure'), ('that', 'that'), ('could', 'could'), ('create', 'create'), ('layers', 'layer'), ('of', 'of'), ('feature', 'feature'), ('detectors', 'detector'), ('without', 'without'), ('requiring', 'require'), ('labelled', 'label'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'researchers'), 'det'), (('researchers', 'duced'), 'nsubj'), (('intro-', 'duced'), 'aux'), (('duced', 'root'), 'root'), (('unsupervised', 'procedures'), 'amod'), (('learning', 'procedures'), 'compound'), (('procedures', 'duced'), 'obj'), (('that', 'create'), 'nsubj'), (('could', 'create'), 'aux'), (('create', 'procedures'), 'acl:relcl'), (('layers', 'create'), 'obj'), (('of', 'detectors'), 'case'), (('feature', 'detectors'), 'compound'), (('detectors', 'layers'), 'nmod'), (('without', 'requiring'), 'mark'), (('requiring', 'create'), 'advcl'), (('labelled', 'data'), 'amod'), (('data', 'requiring'), 'obj'), (('.', 'duced'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 The objective in  learning each layer of feature detectors was to be able to reconstruct  or model the activities of feature detectors (or raw inputs) in the layer  below. 

Tokens are: 
>> ['The', 'objective', 'in', 'learning', 'each', 'layer', 'of', 'feature', 'detectors', 'was', 'to', 'be', 'able', 'to', 'reconstruct', 'or', 'model', 'the', 'activities', 'of', 'feature', 'detectors', '(', 'or', 'raw', 'inputs', ')', 'in', 'the', 'layer', 'below', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('objective', 'NOUN'), ('in', 'SCONJ'), ('learning', 'VERB'), ('each', 'DET'), ('layer', 'NOUN'), ('of', 'ADP'), ('feature', 'NOUN'), ('detectors', 'NOUN'), ('was', 'AUX'), ('to', 'PART'), ('be', 'AUX'), ('able', 'ADJ'), ('to', 'PART'), ('reconstruct', 'VERB'), ('or', 'CCONJ'), ('model', 'VERB'), ('the', 'DET'), ('activities', 'NOUN'), ('of', 'ADP'), ('feature', 'NOUN'), ('detectors', 'NOUN'), ('(', 'PUNCT'), ('or', 'CCONJ'), ('raw', 'ADJ'), ('inputs', 'NOUN'), (')', 'PUNCT'), ('in', 'ADP'), ('the', 'DET'), ('layer', 'NOUN'), ('below', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('objective', 'NN'), ('in', 'IN'), ('learning', 'VBG'), ('each', 'DT'), ('layer', 'NN'), ('of', 'IN'), ('feature', 'NN'), ('detectors', 'NNS'), ('was', 'VBD'), ('to', 'TO'), ('be', 'VB'), ('able', 'JJ'), ('to', 'TO'), ('reconstruct', 'VB'), ('or', 'CC'), ('model', 'VB'), ('the', 'DT'), ('activities', 'NNS'), ('of', 'IN'), ('feature', 'NN'), ('detectors', 'NNS'), ('(', '-LRB-'), ('or', 'CC'), ('raw', 'JJ'), ('inputs', 'NNS'), (')', '-RRB-'), ('in', 'IN'), ('the', 'DT'), ('layer', 'NN'), ('below', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('objective', 'objective'), ('in', 'in'), ('learning', 'learn'), ('each', 'each'), ('layer', 'layer'), ('of', 'of'), ('feature', 'feature'), ('detectors', 'detector'), ('was', 'be'), ('to', 'to'), ('be', 'be'), ('able', 'able'), ('to', 'to'), ('reconstruct', 'reconstruct'), ('or', 'or'), ('model', 'model'), ('the', 'the'), ('activities', 'activity'), ('of', 'of'), ('feature', 'feature'), ('detectors', 'detector'), ('(', '('), ('or', 'or'), ('raw', 'raw'), ('inputs', 'input'), (')', ')'), ('in', 'in'), ('the', 'the'), ('layer', 'layer'), ('below', 'below'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'objective'), 'det'), (('objective', 'was'), 'nsubj'), (('in', 'learning'), 'mark'), (('learning', 'objective'), 'acl'), (('each', 'layer'), 'det'), (('layer', 'learning'), 'obj'), (('of', 'detectors'), 'case'), (('feature', 'detectors'), 'compound'), (('detectors', 'layer'), 'nmod'), (('was', 'root'), 'root'), (('to', 'able'), 'mark'), (('be', 'able'), 'cop'), (('able', 'was'), 'xcomp'), (('to', 'reconstruct'), 'mark'), (('reconstruct', 'able'), 'xcomp'), (('or', 'model'), 'cc'), (('model', 'reconstruct'), 'conj'), (('the', 'activities'), 'det'), (('activities', 'reconstruct'), 'obj'), (('of', 'detectors'), 'case'), (('feature', 'detectors'), 'compound'), (('detectors', 'activities'), 'nmod'), (('(', 'inputs'), 'punct'), (('or', 'inputs'), 'cc'), (('raw', 'inputs'), 'amod'), (('inputs', 'detectors'), 'conj'), ((')', 'inputs'), 'punct'), (('in', 'layer'), 'case'), (('the', 'layer'), 'det'), (('layer', 'reconstruct'), 'obl'), (('below', 'layer'), 'advmod'), (('.', 'was'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 By ‘pre-training’ several layers of progressively more complex  feature detectors using this reconstruction objective, the weights of a  deep network could be initialized to sensible values. 

Tokens are: 
>> ['By', '‘', 'pre-training', '’', 'several', 'layers', 'of', 'progressively', 'more', 'complex', 'feature', 'detectors', 'using', 'this', 'reconstruction', 'objective', ',', 'the', 'weights', 'of', 'a', 'deep', 'network', 'could', 'be', 'initialized', 'to', 'sensible', 'values', '.'] 

 UPOS tags are: 
>> [('By', 'ADP'), ('‘', 'PUNCT'), ('pre-training', 'VERB'), ('’', 'PUNCT'), ('several', 'ADJ'), ('layers', 'NOUN'), ('of', 'ADP'), ('progressively', 'ADV'), ('more', 'ADV'), ('complex', 'ADJ'), ('feature', 'NOUN'), ('detectors', 'NOUN'), ('using', 'VERB'), ('this', 'DET'), ('reconstruction', 'NOUN'), ('objective', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('weights', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('deep', 'ADJ'), ('network', 'NOUN'), ('could', 'AUX'), ('be', 'AUX'), ('initialized', 'VERB'), ('to', 'ADP'), ('sensible', 'ADJ'), ('values', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('By', 'IN'), ('‘', '``'), ('pre-training', 'VBG'), ('’', "''"), ('several', 'JJ'), ('layers', 'NNS'), ('of', 'IN'), ('progressively', 'RB'), ('more', 'RBR'), ('complex', 'JJ'), ('feature', 'NN'), ('detectors', 'NNS'), ('using', 'VBG'), ('this', 'DT'), ('reconstruction', 'NN'), ('objective', 'NN'), (',', ','), ('the', 'DT'), ('weights', 'NNS'), ('of', 'IN'), ('a', 'DT'), ('deep', 'JJ'), ('network', 'NN'), ('could', 'MD'), ('be', 'VB'), ('initialized', 'VBN'), ('to', 'IN'), ('sensible', 'JJ'), ('values', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('By', 'by'), ('‘', "'"), ('pre-training', 'pre-train'), ('’', "'"), ('several', 'several'), ('layers', 'layer'), ('of', 'of'), ('progressively', 'progressively'), ('more', 'more'), ('complex', 'complex'), ('feature', 'feature'), ('detectors', 'detector'), ('using', 'use'), ('this', 'this'), ('reconstruction', 'reconstruction'), ('objective', 'objective'), (',', ','), ('the', 'the'), ('weights', 'weight'), ('of', 'of'), ('a', 'a'), ('deep', 'deep'), ('network', 'network'), ('could', 'could'), ('be', 'be'), ('initialized', 'initialize'), ('to', 'to'), ('sensible', 'sensible'), ('values', 'value'), ('.', '.')] 

 Dependency tags are: 
>> [(('By', 'pre-training'), 'mark'), (('‘', 'pre-training'), 'punct'), (('pre-training', 'initialized'), 'advcl'), (('’', 'pre-training'), 'punct'), (('several', 'layers'), 'amod'), (('layers', 'pre-training'), 'obj'), (('of', 'detectors'), 'case'), (('progressively', 'complex'), 'advmod'), (('more', 'complex'), 'advmod'), (('complex', 'detectors'), 'amod'), (('feature', 'detectors'), 'compound'), (('detectors', 'layers'), 'nmod'), (('using', 'detectors'), 'acl'), (('this', 'objective'), 'det'), (('reconstruction', 'objective'), 'compound'), (('objective', 'using'), 'obj'), ((',', 'initialized'), 'punct'), (('the', 'weights'), 'det'), (('weights', 'initialized'), 'nsubj:pass'), (('of', 'network'), 'case'), (('a', 'network'), 'det'), (('deep', 'network'), 'amod'), (('network', 'weights'), 'nmod'), (('could', 'initialized'), 'aux'), (('be', 'initialized'), 'aux:pass'), (('initialized', 'root'), 'root'), (('to', 'values'), 'case'), (('sensible', 'values'), 'amod'), (('values', 'initialized'), 'obl'), (('.', 'initialized'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 A final layer of  output units could then be added to the top of the network and the  whole deep system could be fine-tuned using standard backpropaga- tion33–35. 

Tokens are: 
>> ['A', 'final', 'layer', 'of', 'output', 'units', 'could', 'then', 'be', 'added', 'to', 'the', 'top', 'of', 'the', 'network', 'and', 'the', 'whole', 'deep', 'system', 'could', 'be', 'fine', '-', 'tuned', 'using', 'standard', 'backpropaga', '-', 'tion', '33–35', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('final', 'ADJ'), ('layer', 'NOUN'), ('of', 'ADP'), ('output', 'NOUN'), ('units', 'NOUN'), ('could', 'AUX'), ('then', 'ADV'), ('be', 'AUX'), ('added', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('top', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('network', 'NOUN'), ('and', 'CCONJ'), ('the', 'DET'), ('whole', 'ADJ'), ('deep', 'ADJ'), ('system', 'NOUN'), ('could', 'AUX'), ('be', 'AUX'), ('fine', 'ADJ'), ('-', 'PUNCT'), ('tuned', 'VERB'), ('using', 'VERB'), ('standard', 'ADJ'), ('backpropaga', 'NOUN'), ('-', 'PUNCT'), ('tion', 'NOUN'), ('33–35', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('final', 'JJ'), ('layer', 'NN'), ('of', 'IN'), ('output', 'NN'), ('units', 'NNS'), ('could', 'MD'), ('then', 'RB'), ('be', 'VB'), ('added', 'VBN'), ('to', 'IN'), ('the', 'DT'), ('top', 'NN'), ('of', 'IN'), ('the', 'DT'), ('network', 'NN'), ('and', 'CC'), ('the', 'DT'), ('whole', 'JJ'), ('deep', 'JJ'), ('system', 'NN'), ('could', 'MD'), ('be', 'VB'), ('fine', 'JJ'), ('-', 'HYPH'), ('tuned', 'VBN'), ('using', 'VBG'), ('standard', 'JJ'), ('backpropaga', 'NN'), ('-', 'HYPH'), ('tion', 'NN'), ('33–35', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('final', 'final'), ('layer', 'layer'), ('of', 'of'), ('output', 'output'), ('units', 'unit'), ('could', 'could'), ('then', 'then'), ('be', 'be'), ('added', 'add'), ('to', 'to'), ('the', 'the'), ('top', 'top'), ('of', 'of'), ('the', 'the'), ('network', 'network'), ('and', 'and'), ('the', 'the'), ('whole', 'whole'), ('deep', 'deep'), ('system', 'system'), ('could', 'could'), ('be', 'be'), ('fine', 'fine'), ('-', '-'), ('tuned', 'tune'), ('using', 'use'), ('standard', 'standard'), ('backpropaga', 'backpropaga'), ('-', '-'), ('tion', 'tion'), ('33–35', '33–35'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'layer'), 'det'), (('final', 'layer'), 'amod'), (('layer', 'added'), 'nsubj:pass'), (('of', 'units'), 'case'), (('output', 'units'), 'compound'), (('units', 'layer'), 'nmod'), (('could', 'added'), 'aux'), (('then', 'added'), 'advmod'), (('be', 'added'), 'aux:pass'), (('added', 'root'), 'root'), (('to', 'top'), 'case'), (('the', 'top'), 'det'), (('top', 'added'), 'obl'), (('of', 'network'), 'case'), (('the', 'network'), 'det'), (('network', 'top'), 'nmod'), (('and', 'tuned'), 'cc'), (('the', 'system'), 'det'), (('whole', 'system'), 'amod'), (('deep', 'system'), 'amod'), (('system', 'tuned'), 'nsubj:pass'), (('could', 'tuned'), 'aux'), (('be', 'tuned'), 'aux:pass'), (('fine', 'tuned'), 'advmod'), (('-', 'tuned'), 'punct'), (('tuned', 'added'), 'conj'), (('using', 'tuned'), 'advcl'), (('standard', 'tion'), 'amod'), (('backpropaga', 'tion'), 'compound'), (('-', 'tion'), 'punct'), (('tion', 'using'), 'obj'), (('33–35', 'using'), 'obj'), (('.', 'added'), 'punct')]

 Named Entites are: 
>> [('33–35', 'CARDINAL')]

------------------- Sentence 6 -------------------

 This worked remarkably well for recognizing handwritten  digits or for detecting pedestrians, especially when the amount of  labelled data was very limited36. 

Tokens are: 
>> ['This', 'worked', 'remarkably', 'well', 'for', 'recognizing', 'handwritten', 'digits', 'or', 'for', 'detecting', 'pedestrians', ',', 'especially', 'when', 'the', 'amount', 'of', 'labelled', 'data', 'was', 'very', 'limited', '36.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('worked', 'VERB'), ('remarkably', 'ADV'), ('well', 'ADV'), ('for', 'SCONJ'), ('recognizing', 'VERB'), ('handwritten', 'ADJ'), ('digits', 'NOUN'), ('or', 'CCONJ'), ('for', 'SCONJ'), ('detecting', 'VERB'), ('pedestrians', 'NOUN'), (',', 'PUNCT'), ('especially', 'ADV'), ('when', 'SCONJ'), ('the', 'DET'), ('amount', 'NOUN'), ('of', 'ADP'), ('labelled', 'VERB'), ('data', 'NOUN'), ('was', 'AUX'), ('very', 'ADV'), ('limited', 'ADJ'), ('36.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('worked', 'VBD'), ('remarkably', 'RB'), ('well', 'RB'), ('for', 'IN'), ('recognizing', 'VBG'), ('handwritten', 'JJ'), ('digits', 'NNS'), ('or', 'CC'), ('for', 'IN'), ('detecting', 'VBG'), ('pedestrians', 'NNS'), (',', ','), ('especially', 'RB'), ('when', 'WRB'), ('the', 'DT'), ('amount', 'NN'), ('of', 'IN'), ('labelled', 'VBN'), ('data', 'NN'), ('was', 'VBD'), ('very', 'RB'), ('limited', 'JJ'), ('36.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('worked', 'work'), ('remarkably', 'remarkably'), ('well', 'well'), ('for', 'for'), ('recognizing', 'recognize'), ('handwritten', 'handwritten'), ('digits', 'digit'), ('or', 'or'), ('for', 'for'), ('detecting', 'detect'), ('pedestrians', 'pedestrian'), (',', ','), ('especially', 'especially'), ('when', 'when'), ('the', 'the'), ('amount', 'amount'), ('of', 'of'), ('labelled', 'label'), ('data', 'datum'), ('was', 'be'), ('very', 'very'), ('limited', 'limited'), ('36.', '36.')] 

 Dependency tags are: 
>> [(('This', 'worked'), 'nsubj'), (('worked', 'root'), 'root'), (('remarkably', 'well'), 'advmod'), (('well', 'worked'), 'advmod'), (('for', 'recognizing'), 'mark'), (('recognizing', 'worked'), 'advcl'), (('handwritten', 'digits'), 'amod'), (('digits', 'recognizing'), 'obj'), (('or', 'detecting'), 'cc'), (('for', 'detecting'), 'mark'), (('detecting', 'recognizing'), 'conj'), (('pedestrians', 'detecting'), 'obj'), ((',', 'limited'), 'punct'), (('especially', 'limited'), 'advmod'), (('when', 'limited'), 'mark'), (('the', 'amount'), 'det'), (('amount', 'limited'), 'nsubj'), (('of', 'data'), 'case'), (('labelled', 'data'), 'amod'), (('data', 'amount'), 'nmod'), (('was', 'limited'), 'cop'), (('very', 'limited'), 'advmod'), (('limited', 'worked'), 'advcl'), (('36.', 'worked'), 'punct')]

 Named Entites are: 
>> [('36.', 'CARDINAL')]

================================ Paragraph 115 =================================

The first major application of this pre-training approach was in  speech recognition, and it was made possible by the advent of fast  graphics processing units (GPUs) that were convenient to program37  and allowed researchers to train networks 10 or 20 times faster. In  2009, the approach was used to map short temporal windows of coef- ficients extracted from a sound wave to a set of probabilities for the  various fragments of speech that might be represented by the frame  in the centre of the window. It achieved record-breaking results on a  standard speech recognition benchmark that used a small vocabu- lary38 and was quickly developed to give record-breaking results on  a large vocabulary task39. By 2012, versions of the deep net from 2009  were being developed by many of the major speech groups6 and were  already being deployed in Android phones. For smaller data sets,  unsupervised pre-training helps to prevent overfitting40, leading to  significantly better generalization when the number of labelled exam- ples is small, or in a transfer setting where we have lots of examples  for some ‘source’ tasks but very few for some ‘target’ tasks. Once deep  learning had been rehabilitated, it turned out that the pre-training  stage was only needed for small data sets.  


------------------- Sentence 1 -------------------

 The first major application of this pre-training approach was in  speech recognition, and it was made possible by the advent of fast  graphics processing units (GPUs) that were convenient to program37  and allowed researchers to train networks 10 or 20 times faster. 

Tokens are: 
>> ['The', 'first', 'major', 'application', 'of', 'this', 'pre-training', 'approach', 'was', 'in', 'speech', 'recognition', ',', 'and', 'it', 'was', 'made', 'possible', 'by', 'the', 'advent', 'of', 'fast', 'graphics', 'processing', 'units', '(', 'GPUs', ')', 'that', 'were', 'convenient', 'to', 'program37', 'and', 'allowed', 'researchers', 'to', 'train', 'networks', '10', 'or', '20', 'times', 'faster', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('first', 'ADJ'), ('major', 'ADJ'), ('application', 'NOUN'), ('of', 'ADP'), ('this', 'DET'), ('pre-training', 'ADJ'), ('approach', 'NOUN'), ('was', 'AUX'), ('in', 'ADP'), ('speech', 'NOUN'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('it', 'PRON'), ('was', 'AUX'), ('made', 'VERB'), ('possible', 'ADJ'), ('by', 'ADP'), ('the', 'DET'), ('advent', 'NOUN'), ('of', 'ADP'), ('fast', 'ADJ'), ('graphics', 'NOUN'), ('processing', 'NOUN'), ('units', 'NOUN'), ('(', 'PUNCT'), ('GPUs', 'NOUN'), (')', 'PUNCT'), ('that', 'PRON'), ('were', 'AUX'), ('convenient', 'ADJ'), ('to', 'ADP'), ('program37', 'NOUN'), ('and', 'CCONJ'), ('allowed', 'VERB'), ('researchers', 'NOUN'), ('to', 'PART'), ('train', 'VERB'), ('networks', 'NOUN'), ('10', 'NUM'), ('or', 'CCONJ'), ('20', 'NUM'), ('times', 'NOUN'), ('faster', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('first', 'JJ'), ('major', 'JJ'), ('application', 'NN'), ('of', 'IN'), ('this', 'DT'), ('pre-training', 'JJ'), ('approach', 'NN'), ('was', 'VBD'), ('in', 'IN'), ('speech', 'NN'), ('recognition', 'NN'), (',', ','), ('and', 'CC'), ('it', 'PRP'), ('was', 'VBD'), ('made', 'VBN'), ('possible', 'JJ'), ('by', 'IN'), ('the', 'DT'), ('advent', 'NN'), ('of', 'IN'), ('fast', 'JJ'), ('graphics', 'NNS'), ('processing', 'NN'), ('units', 'NNS'), ('(', '-LRB-'), ('GPUs', 'NNS'), (')', '-RRB-'), ('that', 'WDT'), ('were', 'VBD'), ('convenient', 'JJ'), ('to', 'IN'), ('program37', 'NN'), ('and', 'CC'), ('allowed', 'VBD'), ('researchers', 'NNS'), ('to', 'TO'), ('train', 'VB'), ('networks', 'NNS'), ('10', 'CD'), ('or', 'CC'), ('20', 'CD'), ('times', 'NNS'), ('faster', 'RBR'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('first', 'first'), ('major', 'major'), ('application', 'application'), ('of', 'of'), ('this', 'this'), ('pre-training', 'pre-training'), ('approach', 'approach'), ('was', 'be'), ('in', 'in'), ('speech', 'speech'), ('recognition', 'recognition'), (',', ','), ('and', 'and'), ('it', 'it'), ('was', 'be'), ('made', 'make'), ('possible', 'possible'), ('by', 'by'), ('the', 'the'), ('advent', 'advent'), ('of', 'of'), ('fast', 'fast'), ('graphics', 'graphic'), ('processing', 'processing'), ('units', 'unit'), ('(', '('), ('GPUs', 'gpu'), (')', ')'), ('that', 'that'), ('were', 'be'), ('convenient', 'convenient'), ('to', 'to'), ('program37', 'program37'), ('and', 'and'), ('allowed', 'allow'), ('researchers', 'researcher'), ('to', 'to'), ('train', 'train'), ('networks', 'network'), ('10', '10'), ('or', 'or'), ('20', '20'), ('times', 'time'), ('faster', 'fast'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'application'), 'det'), (('first', 'application'), 'amod'), (('major', 'application'), 'amod'), (('application', 'recognition'), 'nsubj'), (('of', 'approach'), 'case'), (('this', 'approach'), 'det'), (('pre-training', 'approach'), 'amod'), (('approach', 'application'), 'nmod'), (('was', 'recognition'), 'cop'), (('in', 'recognition'), 'case'), (('speech', 'recognition'), 'compound'), (('recognition', 'root'), 'root'), ((',', 'made'), 'punct'), (('and', 'made'), 'cc'), (('it', 'made'), 'nsubj:pass'), (('was', 'made'), 'aux:pass'), (('made', 'recognition'), 'conj'), (('possible', 'made'), 'xcomp'), (('by', 'advent'), 'case'), (('the', 'advent'), 'det'), (('advent', 'made'), 'obl'), (('of', 'units'), 'case'), (('fast', 'units'), 'amod'), (('graphics', 'units'), 'compound'), (('processing', 'units'), 'compound'), (('units', 'advent'), 'nmod'), (('(', 'GPUs'), 'punct'), (('GPUs', 'units'), 'appos'), ((')', 'GPUs'), 'punct'), (('that', 'convenient'), 'nsubj'), (('were', 'convenient'), 'cop'), (('convenient', 'units'), 'acl:relcl'), (('to', 'program37'), 'case'), (('program37', 'convenient'), 'obl'), (('and', 'allowed'), 'cc'), (('allowed', 'convenient'), 'conj'), (('researchers', 'allowed'), 'obj'), (('to', 'train'), 'mark'), (('train', 'allowed'), 'xcomp'), (('networks', 'train'), 'obj'), (('10', 'times'), 'nummod'), (('or', '20'), 'cc'), (('20', '10'), 'conj'), (('times', 'faster'), 'obl:npmod'), (('faster', 'train'), 'advmod'), (('.', 'recognition'), 'punct')]

 Named Entites are: 
>> [('first', 'ORDINAL'), ('10', 'CARDINAL'), ('20', 'CARDINAL')]

------------------- Sentence 2 -------------------

 In  2009, the approach was used to map short temporal windows of coef- ficients extracted from a sound wave to a set of probabilities for the  various fragments of speech that might be represented by the frame  in the centre of the window. 

Tokens are: 
>> ['In', '2009', ',', 'the', 'approach', 'was', 'used', 'to', 'map', 'short', 'temporal', 'windows', 'of', 'coef', '-', 'ficients', 'extracted', 'from', 'a', 'sound', 'wave', 'to', 'a', 'set', 'of', 'probabilities', 'for', 'the', 'various', 'fragments', 'of', 'speech', 'that', 'might', 'be', 'represented', 'by', 'the', 'frame', 'in', 'the', 'centre', 'of', 'the', 'window', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('2009', 'NUM'), (',', 'PUNCT'), ('the', 'DET'), ('approach', 'NOUN'), ('was', 'AUX'), ('used', 'VERB'), ('to', 'PART'), ('map', 'VERB'), ('short', 'ADJ'), ('temporal', 'ADJ'), ('windows', 'NOUN'), ('of', 'ADP'), ('coef', 'NOUN'), ('-', 'PUNCT'), ('ficients', 'NOUN'), ('extracted', 'VERB'), ('from', 'ADP'), ('a', 'DET'), ('sound', 'NOUN'), ('wave', 'NOUN'), ('to', 'ADP'), ('a', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('probabilities', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('various', 'ADJ'), ('fragments', 'NOUN'), ('of', 'ADP'), ('speech', 'NOUN'), ('that', 'PRON'), ('might', 'AUX'), ('be', 'AUX'), ('represented', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('frame', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('centre', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('window', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('2009', 'CD'), (',', ','), ('the', 'DT'), ('approach', 'NN'), ('was', 'VBD'), ('used', 'VBN'), ('to', 'TO'), ('map', 'VB'), ('short', 'JJ'), ('temporal', 'JJ'), ('windows', 'NNS'), ('of', 'IN'), ('coef', 'NN'), ('-', 'HYPH'), ('ficients', 'NNS'), ('extracted', 'VBN'), ('from', 'IN'), ('a', 'DT'), ('sound', 'NN'), ('wave', 'NN'), ('to', 'IN'), ('a', 'DT'), ('set', 'NN'), ('of', 'IN'), ('probabilities', 'NNS'), ('for', 'IN'), ('the', 'DT'), ('various', 'JJ'), ('fragments', 'NNS'), ('of', 'IN'), ('speech', 'NN'), ('that', 'WDT'), ('might', 'MD'), ('be', 'VB'), ('represented', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('frame', 'NN'), ('in', 'IN'), ('the', 'DT'), ('centre', 'NN'), ('of', 'IN'), ('the', 'DT'), ('window', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('2009', '2009'), (',', ','), ('the', 'the'), ('approach', 'approach'), ('was', 'be'), ('used', 'use'), ('to', 'to'), ('map', 'map'), ('short', 'short'), ('temporal', 'temporal'), ('windows', 'window'), ('of', 'of'), ('coef', 'coef'), ('-', '-'), ('ficients', 'ficient'), ('extracted', 'extract'), ('from', 'from'), ('a', 'a'), ('sound', 'sound'), ('wave', 'wave'), ('to', 'to'), ('a', 'a'), ('set', 'set'), ('of', 'of'), ('probabilities', 'probability'), ('for', 'for'), ('the', 'the'), ('various', 'various'), ('fragments', 'fragment'), ('of', 'of'), ('speech', 'speech'), ('that', 'that'), ('might', 'might'), ('be', 'be'), ('represented', 'represent'), ('by', 'by'), ('the', 'the'), ('frame', 'frame'), ('in', 'in'), ('the', 'the'), ('centre', 'centre'), ('of', 'of'), ('the', 'the'), ('window', 'window'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', '2009'), 'case'), (('2009', 'used'), 'obl'), ((',', 'used'), 'punct'), (('the', 'approach'), 'det'), (('approach', 'used'), 'nsubj:pass'), (('was', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('to', 'map'), 'mark'), (('map', 'used'), 'xcomp'), (('short', 'windows'), 'amod'), (('temporal', 'windows'), 'amod'), (('windows', 'map'), 'obj'), (('of', 'ficients'), 'case'), (('coef', 'ficients'), 'compound'), (('-', 'ficients'), 'punct'), (('ficients', 'windows'), 'nmod'), (('extracted', 'windows'), 'acl'), (('from', 'wave'), 'case'), (('a', 'wave'), 'det'), (('sound', 'wave'), 'compound'), (('wave', 'extracted'), 'obl'), (('to', 'set'), 'case'), (('a', 'set'), 'det'), (('set', 'extracted'), 'obl'), (('of', 'probabilities'), 'case'), (('probabilities', 'set'), 'nmod'), (('for', 'fragments'), 'case'), (('the', 'fragments'), 'det'), (('various', 'fragments'), 'amod'), (('fragments', 'set'), 'nmod'), (('of', 'speech'), 'case'), (('speech', 'fragments'), 'nmod'), (('that', 'represented'), 'nsubj:pass'), (('might', 'represented'), 'aux'), (('be', 'represented'), 'aux:pass'), (('represented', 'fragments'), 'acl:relcl'), (('by', 'frame'), 'case'), (('the', 'frame'), 'det'), (('frame', 'represented'), 'obl'), (('in', 'centre'), 'case'), (('the', 'centre'), 'det'), (('centre', 'frame'), 'nmod'), (('of', 'window'), 'case'), (('the', 'window'), 'det'), (('window', 'centre'), 'nmod'), (('.', 'used'), 'punct')]

 Named Entites are: 
>> [('2009', 'DATE')]

------------------- Sentence 3 -------------------

 It achieved record-breaking results on a  standard speech recognition benchmark that used a small vocabu- lary38 and was quickly developed to give record-breaking results on  a large vocabulary task39. 

Tokens are: 
>> ['It', 'achieved', 'record', '-', 'breaking', 'results', 'on', 'a', 'standard', 'speech', 'recognition', 'benchmark', 'that', 'used', 'a', 'small', 'vocabu-', 'lary38', 'and', 'was', 'quickly', 'developed', 'to', 'give', 'record', '-', 'breaking', 'results', 'on', 'a', 'large', 'vocabulary', 'task39', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('achieved', 'VERB'), ('record', 'NOUN'), ('-', 'PUNCT'), ('breaking', 'NOUN'), ('results', 'NOUN'), ('on', 'ADP'), ('a', 'DET'), ('standard', 'ADJ'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('benchmark', 'NOUN'), ('that', 'PRON'), ('used', 'VERB'), ('a', 'DET'), ('small', 'ADJ'), ('vocabu-', 'ADJ'), ('lary38', 'NOUN'), ('and', 'CCONJ'), ('was', 'AUX'), ('quickly', 'ADV'), ('developed', 'VERB'), ('to', 'PART'), ('give', 'VERB'), ('record', 'NOUN'), ('-', 'PUNCT'), ('breaking', 'VERB'), ('results', 'NOUN'), ('on', 'ADP'), ('a', 'DET'), ('large', 'ADJ'), ('vocabulary', 'NOUN'), ('task39', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('achieved', 'VBD'), ('record', 'NN'), ('-', 'HYPH'), ('breaking', 'NN'), ('results', 'NNS'), ('on', 'IN'), ('a', 'DT'), ('standard', 'JJ'), ('speech', 'NN'), ('recognition', 'NN'), ('benchmark', 'NN'), ('that', 'WDT'), ('used', 'VBD'), ('a', 'DT'), ('small', 'JJ'), ('vocabu-', 'JJ'), ('lary38', 'NN'), ('and', 'CC'), ('was', 'VBD'), ('quickly', 'RB'), ('developed', 'VBN'), ('to', 'TO'), ('give', 'VB'), ('record', 'NN'), ('-', 'HYPH'), ('breaking', 'VBG'), ('results', 'NNS'), ('on', 'IN'), ('a', 'DT'), ('large', 'JJ'), ('vocabulary', 'NN'), ('task39', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('achieved', 'achieve'), ('record', 'record'), ('-', '-'), ('breaking', 'breaking'), ('results', 'result'), ('on', 'on'), ('a', 'a'), ('standard', 'standard'), ('speech', 'speech'), ('recognition', 'recognition'), ('benchmark', 'benchmark'), ('that', 'that'), ('used', 'use'), ('a', 'a'), ('small', 'small'), ('vocabu-', 'vocabu-'), ('lary38', 'lary38'), ('and', 'and'), ('was', 'be'), ('quickly', 'quickly'), ('developed', 'develop'), ('to', 'to'), ('give', 'give'), ('record', 'record'), ('-', '-'), ('breaking', 'break'), ('results', 'result'), ('on', 'on'), ('a', 'a'), ('large', 'large'), ('vocabulary', 'vocabulary'), ('task39', 'task39'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'achieved'), 'nsubj'), (('achieved', 'root'), 'root'), (('record', 'breaking'), 'compound'), (('-', 'breaking'), 'punct'), (('breaking', 'results'), 'compound'), (('results', 'achieved'), 'obj'), (('on', 'benchmark'), 'case'), (('a', 'benchmark'), 'det'), (('standard', 'benchmark'), 'amod'), (('speech', 'recognition'), 'compound'), (('recognition', 'benchmark'), 'compound'), (('benchmark', 'results'), 'nmod'), (('that', 'used'), 'nsubj'), (('used', 'benchmark'), 'acl:relcl'), (('a', 'lary38'), 'det'), (('small', 'lary38'), 'amod'), (('vocabu-', 'lary38'), 'amod'), (('lary38', 'used'), 'obj'), (('and', 'developed'), 'cc'), (('was', 'developed'), 'aux:pass'), (('quickly', 'developed'), 'advmod'), (('developed', 'used'), 'conj'), (('to', 'give'), 'mark'), (('give', 'developed'), 'xcomp'), (('record', 'breaking'), 'compound'), (('-', 'breaking'), 'punct'), (('breaking', 'results'), 'amod'), (('results', 'give'), 'obj'), (('on', 'task39'), 'case'), (('a', 'task39'), 'det'), (('large', 'task39'), 'amod'), (('vocabulary', 'task39'), 'compound'), (('task39', 'results'), 'nmod'), (('.', 'achieved'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 By 2012, versions of the deep net from 2009  were being developed by many of the major speech groups6 and were  already being deployed in Android phones. 

Tokens are: 
>> ['By', '2012', ',', 'versions', 'of', 'the', 'deep', 'net', 'from', '2009', 'were', 'being', 'developed', 'by', 'many', 'of', 'the', 'major', 'speech', 'groups', '6', 'and', 'were', 'already', 'being', 'deployed', 'in', 'Android', 'phones', '.'] 

 UPOS tags are: 
>> [('By', 'ADP'), ('2012', 'NUM'), (',', 'PUNCT'), ('versions', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('deep', 'ADJ'), ('net', 'NOUN'), ('from', 'ADP'), ('2009', 'NUM'), ('were', 'AUX'), ('being', 'AUX'), ('developed', 'VERB'), ('by', 'ADP'), ('many', 'ADJ'), ('of', 'ADP'), ('the', 'DET'), ('major', 'ADJ'), ('speech', 'NOUN'), ('groups', 'NOUN'), ('6', 'NUM'), ('and', 'CCONJ'), ('were', 'AUX'), ('already', 'ADV'), ('being', 'AUX'), ('deployed', 'VERB'), ('in', 'ADP'), ('Android', 'PROPN'), ('phones', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('By', 'IN'), ('2012', 'CD'), (',', ','), ('versions', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('deep', 'JJ'), ('net', 'NN'), ('from', 'IN'), ('2009', 'CD'), ('were', 'VBD'), ('being', 'VBG'), ('developed', 'VBN'), ('by', 'IN'), ('many', 'JJ'), ('of', 'IN'), ('the', 'DT'), ('major', 'JJ'), ('speech', 'NN'), ('groups', 'NNS'), ('6', 'CD'), ('and', 'CC'), ('were', 'VBD'), ('already', 'RB'), ('being', 'VBG'), ('deployed', 'VBN'), ('in', 'IN'), ('Android', 'NNP'), ('phones', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('By', 'by'), ('2012', '2012'), (',', ','), ('versions', 'version'), ('of', 'of'), ('the', 'the'), ('deep', 'deep'), ('net', 'net'), ('from', 'from'), ('2009', '2009'), ('were', 'be'), ('being', 'be'), ('developed', 'develop'), ('by', 'by'), ('many', 'many'), ('of', 'of'), ('the', 'the'), ('major', 'major'), ('speech', 'speech'), ('groups', 'group'), ('6', '6'), ('and', 'and'), ('were', 'be'), ('already', 'already'), ('being', 'be'), ('deployed', 'deploy'), ('in', 'in'), ('Android', 'Android'), ('phones', 'phone'), ('.', '.')] 

 Dependency tags are: 
>> [(('By', '2012'), 'case'), (('2012', 'developed'), 'obl'), ((',', '2012'), 'punct'), (('versions', 'developed'), 'nsubj:pass'), (('of', 'net'), 'case'), (('the', 'net'), 'det'), (('deep', 'net'), 'amod'), (('net', 'versions'), 'nmod'), (('from', '2009'), 'case'), (('2009', 'net'), 'nmod'), (('were', 'developed'), 'aux'), (('being', 'developed'), 'aux:pass'), (('developed', 'root'), 'root'), (('by', 'many'), 'case'), (('many', 'developed'), 'obl'), (('of', 'groups'), 'case'), (('the', 'groups'), 'det'), (('major', 'groups'), 'amod'), (('speech', 'groups'), 'compound'), (('groups', 'many'), 'obl'), (('6', 'groups'), 'nummod'), (('and', 'deployed'), 'cc'), (('were', 'deployed'), 'aux'), (('already', 'deployed'), 'advmod'), (('being', 'deployed'), 'aux:pass'), (('deployed', 'developed'), 'conj'), (('in', 'phones'), 'case'), (('Android', 'phones'), 'compound'), (('phones', 'deployed'), 'obl'), (('.', 'developed'), 'punct')]

 Named Entites are: 
>> [('2012', 'DATE'), ('2009', 'DATE'), ('6', 'CARDINAL'), ('Android', 'ORG')]

------------------- Sentence 5 -------------------

 For smaller data sets,  unsupervised pre-training helps to prevent overfitting40, leading to  significantly better generalization when the number of labelled exam- ples is small, or in a transfer setting where we have lots of examples  for some ‘source’ tasks but very few for some ‘target’ tasks. 

Tokens are: 
>> ['For', 'smaller', 'data', 'sets', ',', 'unsupervised', 'pre-training', 'helps', 'to', 'prevent', 'overfitting', '40', ',', 'leading', 'to', 'significantly', 'better', 'generalization', 'when', 'the', 'number', 'of', 'labelled', 'exam', '-', 'ples', 'is', 'small', ',', 'or', 'in', 'a', 'transfer', 'setting', 'where', 'we', 'have', 'lots', 'of', 'examples', 'for', 'some', '‘', 'source', '’', 'tasks', 'but', 'very', 'few', 'for', 'some', '‘', 'target', '’', 'tasks', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('smaller', 'ADJ'), ('data', 'NOUN'), ('sets', 'NOUN'), (',', 'PUNCT'), ('unsupervised', 'ADJ'), ('pre-training', 'NOUN'), ('helps', 'VERB'), ('to', 'PART'), ('prevent', 'VERB'), ('overfitting', 'VERB'), ('40', 'NUM'), (',', 'PUNCT'), ('leading', 'VERB'), ('to', 'ADP'), ('significantly', 'ADV'), ('better', 'ADJ'), ('generalization', 'NOUN'), ('when', 'SCONJ'), ('the', 'DET'), ('number', 'NOUN'), ('of', 'ADP'), ('labelled', 'VERB'), ('exam', 'NOUN'), ('-', 'PUNCT'), ('ples', 'NOUN'), ('is', 'AUX'), ('small', 'ADJ'), (',', 'PUNCT'), ('or', 'CCONJ'), ('in', 'ADP'), ('a', 'DET'), ('transfer', 'NOUN'), ('setting', 'NOUN'), ('where', 'SCONJ'), ('we', 'PRON'), ('have', 'VERB'), ('lots', 'NOUN'), ('of', 'ADP'), ('examples', 'NOUN'), ('for', 'ADP'), ('some', 'DET'), ('‘', 'PUNCT'), ('source', 'NOUN'), ('’', 'PUNCT'), ('tasks', 'NOUN'), ('but', 'CCONJ'), ('very', 'ADV'), ('few', 'ADJ'), ('for', 'ADP'), ('some', 'DET'), ('‘', 'PUNCT'), ('target', 'NOUN'), ('’', 'PUNCT'), ('tasks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('smaller', 'JJR'), ('data', 'NN'), ('sets', 'NNS'), (',', ','), ('unsupervised', 'JJ'), ('pre-training', 'NN'), ('helps', 'VBZ'), ('to', 'TO'), ('prevent', 'VB'), ('overfitting', 'VBG'), ('40', 'CD'), (',', ','), ('leading', 'VBG'), ('to', 'IN'), ('significantly', 'RB'), ('better', 'JJR'), ('generalization', 'NN'), ('when', 'WRB'), ('the', 'DT'), ('number', 'NN'), ('of', 'IN'), ('labelled', 'VBN'), ('exam', 'NN'), ('-', 'HYPH'), ('ples', 'NN'), ('is', 'VBZ'), ('small', 'JJ'), (',', ','), ('or', 'CC'), ('in', 'IN'), ('a', 'DT'), ('transfer', 'NN'), ('setting', 'NN'), ('where', 'WRB'), ('we', 'PRP'), ('have', 'VBP'), ('lots', 'NNS'), ('of', 'IN'), ('examples', 'NNS'), ('for', 'IN'), ('some', 'DT'), ('‘', '``'), ('source', 'NN'), ('’', "''"), ('tasks', 'NNS'), ('but', 'CC'), ('very', 'RB'), ('few', 'JJ'), ('for', 'IN'), ('some', 'DT'), ('‘', '``'), ('target', 'NN'), ('’', "''"), ('tasks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('smaller', 'small'), ('data', 'datum'), ('sets', 'set'), (',', ','), ('unsupervised', 'unsupervised'), ('pre-training', 'pre-training'), ('helps', 'help'), ('to', 'to'), ('prevent', 'prevent'), ('overfitting', 'overfit'), ('40', '40'), (',', ','), ('leading', 'lead'), ('to', 'to'), ('significantly', 'significantly'), ('better', 'good'), ('generalization', 'generalization'), ('when', 'when'), ('the', 'the'), ('number', 'number'), ('of', 'of'), ('labelled', 'label'), ('exam', 'exam'), ('-', '-'), ('ples', 'ple'), ('is', 'be'), ('small', 'small'), (',', ','), ('or', 'or'), ('in', 'in'), ('a', 'a'), ('transfer', 'transfer'), ('setting', 'setting'), ('where', 'where'), ('we', 'we'), ('have', 'have'), ('lots', 'lot'), ('of', 'of'), ('examples', 'example'), ('for', 'for'), ('some', 'some'), ('‘', "'"), ('source', 'source'), ('’', "'"), ('tasks', 'task'), ('but', 'but'), ('very', 'very'), ('few', 'few'), ('for', 'for'), ('some', 'some'), ('‘', "'"), ('target', 'target'), ('’', "'"), ('tasks', 'task'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'sets'), 'case'), (('smaller', 'sets'), 'amod'), (('data', 'sets'), 'compound'), (('sets', 'helps'), 'obl'), ((',', 'helps'), 'punct'), (('unsupervised', 'pre-training'), 'amod'), (('pre-training', 'helps'), 'nsubj'), (('helps', 'root'), 'root'), (('to', 'prevent'), 'mark'), (('prevent', 'helps'), 'xcomp'), (('overfitting', 'prevent'), 'xcomp'), (('40', 'overfitting'), 'obj'), ((',', 'leading'), 'punct'), (('leading', 'prevent'), 'advcl'), (('to', 'generalization'), 'case'), (('significantly', 'better'), 'advmod'), (('better', 'generalization'), 'amod'), (('generalization', 'leading'), 'obl'), (('when', 'small'), 'mark'), (('the', 'number'), 'det'), (('number', 'small'), 'nsubj'), (('of', 'ples'), 'case'), (('labelled', 'ples'), 'amod'), (('exam', 'ples'), 'compound'), (('-', 'ples'), 'punct'), (('ples', 'number'), 'nmod'), (('is', 'small'), 'cop'), (('small', 'prevent'), 'advcl'), ((',', 'setting'), 'punct'), (('or', 'setting'), 'cc'), (('in', 'setting'), 'case'), (('a', 'setting'), 'det'), (('transfer', 'setting'), 'compound'), (('setting', 'small'), 'conj'), (('where', 'have'), 'mark'), (('we', 'have'), 'nsubj'), (('have', 'setting'), 'acl:relcl'), (('lots', 'have'), 'obj'), (('of', 'examples'), 'case'), (('examples', 'lots'), 'nmod'), (('for', 'tasks'), 'case'), (('some', 'tasks'), 'det'), (('‘', 'tasks'), 'punct'), (('source', 'tasks'), 'compound'), (('’', 'tasks'), 'punct'), (('tasks', 'examples'), 'nmod'), (('but', 'few'), 'cc'), (('very', 'few'), 'advmod'), (('few', 'tasks'), 'conj'), (('for', 'tasks'), 'case'), (('some', 'tasks'), 'det'), (('‘', 'tasks'), 'punct'), (('target', 'tasks'), 'compound'), (('’', 'tasks'), 'punct'), (('tasks', 'few'), 'obl'), (('.', 'helps'), 'punct')]

 Named Entites are: 
>> [('40', 'CARDINAL')]

------------------- Sentence 6 -------------------

 Once deep  learning had been rehabilitated, it turned out that the pre-training  stage was only needed for small data sets. 

Tokens are: 
>> ['Once', 'deep', 'learning', 'had', 'been', 'rehabilitated', ',', 'it', 'turned', 'out', 'that', 'the', 'pre-training', 'stage', 'was', 'only', 'needed', 'for', 'small', 'data', 'sets', '.'] 

 UPOS tags are: 
>> [('Once', 'SCONJ'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('had', 'AUX'), ('been', 'AUX'), ('rehabilitated', 'VERB'), (',', 'PUNCT'), ('it', 'PRON'), ('turned', 'VERB'), ('out', 'ADP'), ('that', 'SCONJ'), ('the', 'DET'), ('pre-training', 'ADJ'), ('stage', 'NOUN'), ('was', 'AUX'), ('only', 'ADV'), ('needed', 'VERB'), ('for', 'ADP'), ('small', 'ADJ'), ('data', 'NOUN'), ('sets', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Once', 'IN'), ('deep', 'JJ'), ('learning', 'NN'), ('had', 'VBD'), ('been', 'VBN'), ('rehabilitated', 'VBN'), (',', ','), ('it', 'PRP'), ('turned', 'VBD'), ('out', 'RP'), ('that', 'IN'), ('the', 'DT'), ('pre-training', 'JJ'), ('stage', 'NN'), ('was', 'VBD'), ('only', 'RB'), ('needed', 'VBN'), ('for', 'IN'), ('small', 'JJ'), ('data', 'NN'), ('sets', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Once', 'once'), ('deep', 'deep'), ('learning', 'learning'), ('had', 'have'), ('been', 'be'), ('rehabilitated', 'rehabilitate'), (',', ','), ('it', 'it'), ('turned', 'turn'), ('out', 'out'), ('that', 'that'), ('the', 'the'), ('pre-training', 'pre-training'), ('stage', 'stage'), ('was', 'be'), ('only', 'only'), ('needed', 'need'), ('for', 'for'), ('small', 'small'), ('data', 'datum'), ('sets', 'set'), ('.', '.')] 

 Dependency tags are: 
>> [(('Once', 'rehabilitated'), 'mark'), (('deep', 'learning'), 'amod'), (('learning', 'rehabilitated'), 'nsubj:pass'), (('had', 'rehabilitated'), 'aux'), (('been', 'rehabilitated'), 'aux:pass'), (('rehabilitated', 'turned'), 'advcl'), ((',', 'turned'), 'punct'), (('it', 'turned'), 'nsubj'), (('turned', 'root'), 'root'), (('out', 'turned'), 'compound:prt'), (('that', 'needed'), 'mark'), (('the', 'stage'), 'det'), (('pre-training', 'stage'), 'amod'), (('stage', 'needed'), 'nsubj:pass'), (('was', 'needed'), 'aux:pass'), (('only', 'needed'), 'advmod'), (('needed', 'turned'), 'ccomp'), (('for', 'sets'), 'case'), (('small', 'sets'), 'amod'), (('data', 'sets'), 'compound'), (('sets', 'needed'), 'obl'), (('.', 'turned'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 116 =================================

There was, however, one particular type of deep, feedforward net- work that was much easier to train and generalized much better than  networks with full connectivity between adjacent layers. This was  the convolutional neural network (ConvNet)41,42. It achieved many  practical successes during the period when neural networks were out  of favour and it has recently been widely adopted by the computer- vision community.  


------------------- Sentence 1 -------------------

 There was, however, one particular type of deep, feedforward net- work that was much easier to train and generalized much better than  networks with full connectivity between adjacent layers. 

Tokens are: 
>> ['There', 'was', ',', 'however', ',', 'one', 'particular', 'type', 'of', 'deep', ',', 'feedforward', 'net', '-', 'work', 'that', 'was', 'much', 'easier', 'to', 'train', 'and', 'generalized', 'much', 'better', 'than', 'networks', 'with', 'full', 'connectivity', 'between', 'adjacent', 'layers', '.'] 

 UPOS tags are: 
>> [('There', 'PRON'), ('was', 'VERB'), (',', 'PUNCT'), ('however', 'ADV'), (',', 'PUNCT'), ('one', 'NUM'), ('particular', 'ADJ'), ('type', 'NOUN'), ('of', 'ADP'), ('deep', 'ADJ'), (',', 'PUNCT'), ('feedforward', 'ADJ'), ('net', 'NOUN'), ('-', 'PUNCT'), ('work', 'NOUN'), ('that', 'PRON'), ('was', 'AUX'), ('much', 'ADV'), ('easier', 'ADJ'), ('to', 'PART'), ('train', 'VERB'), ('and', 'CCONJ'), ('generalized', 'VERB'), ('much', 'ADV'), ('better', 'ADJ'), ('than', 'ADP'), ('networks', 'NOUN'), ('with', 'ADP'), ('full', 'ADJ'), ('connectivity', 'NOUN'), ('between', 'ADP'), ('adjacent', 'ADJ'), ('layers', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('There', 'EX'), ('was', 'VBD'), (',', ','), ('however', 'RB'), (',', ','), ('one', 'CD'), ('particular', 'JJ'), ('type', 'NN'), ('of', 'IN'), ('deep', 'JJ'), (',', ','), ('feedforward', 'JJ'), ('net', 'NN'), ('-', 'HYPH'), ('work', 'NN'), ('that', 'WDT'), ('was', 'VBD'), ('much', 'RB'), ('easier', 'JJR'), ('to', 'TO'), ('train', 'VB'), ('and', 'CC'), ('generalized', 'VBN'), ('much', 'RB'), ('better', 'JJR'), ('than', 'IN'), ('networks', 'NNS'), ('with', 'IN'), ('full', 'JJ'), ('connectivity', 'NN'), ('between', 'IN'), ('adjacent', 'JJ'), ('layers', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('There', 'there'), ('was', 'be'), (',', ','), ('however', 'however'), (',', ','), ('one', 'one'), ('particular', 'particular'), ('type', 'type'), ('of', 'of'), ('deep', 'deep'), (',', ','), ('feedforward', 'feedforward'), ('net', 'net'), ('-', '-'), ('work', 'work'), ('that', 'that'), ('was', 'be'), ('much', 'much'), ('easier', 'easy'), ('to', 'to'), ('train', 'train'), ('and', 'and'), ('generalized', 'generalize'), ('much', 'much'), ('better', 'good'), ('than', 'than'), ('networks', 'network'), ('with', 'with'), ('full', 'full'), ('connectivity', 'connectivity'), ('between', 'between'), ('adjacent', 'adjacent'), ('layers', 'layer'), ('.', '.')] 

 Dependency tags are: 
>> [(('There', 'was'), 'expl'), (('was', 'root'), 'root'), ((',', 'was'), 'punct'), (('however', 'was'), 'advmod'), ((',', 'was'), 'punct'), (('one', 'type'), 'nummod'), (('particular', 'type'), 'amod'), (('type', 'was'), 'nsubj'), (('of', 'work'), 'case'), (('deep', 'work'), 'amod'), ((',', 'work'), 'punct'), (('feedforward', 'work'), 'amod'), (('net', 'work'), 'compound'), (('-', 'work'), 'punct'), (('work', 'type'), 'nmod'), (('that', 'easier'), 'nsubj'), (('was', 'easier'), 'cop'), (('much', 'easier'), 'advmod'), (('easier', 'work'), 'acl:relcl'), (('to', 'train'), 'mark'), (('train', 'easier'), 'xcomp'), (('and', 'generalized'), 'cc'), (('generalized', 'train'), 'conj'), (('much', 'better'), 'advmod'), (('better', 'train'), 'xcomp'), (('than', 'networks'), 'case'), (('networks', 'better'), 'obl'), (('with', 'connectivity'), 'case'), (('full', 'connectivity'), 'amod'), (('connectivity', 'networks'), 'nmod'), (('between', 'layers'), 'case'), (('adjacent', 'layers'), 'amod'), (('layers', 'connectivity'), 'nmod'), (('.', 'was'), 'punct')]

 Named Entites are: 
>> [('one', 'CARDINAL')]

------------------- Sentence 2 -------------------

 This was  the convolutional neural network (ConvNet)41,42. 

Tokens are: 
>> ['This', 'was', 'the', 'convolutional', 'neural', 'network', '(', 'ConvNet', ')', '41,', '42', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('was', 'AUX'), ('the', 'DET'), ('convolutional', 'ADJ'), ('neural', 'ADJ'), ('network', 'NOUN'), ('(', 'PUNCT'), ('ConvNet', 'PROPN'), (')', 'PUNCT'), ('41,', 'NUM'), ('42', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('was', 'VBD'), ('the', 'DT'), ('convolutional', 'JJ'), ('neural', 'JJ'), ('network', 'NN'), ('(', '-LRB-'), ('ConvNet', 'NNP'), (')', '-RRB-'), ('41,', 'CD'), ('42', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('was', 'be'), ('the', 'the'), ('convolutional', 'convolutional'), ('neural', 'neural'), ('network', 'network'), ('(', '('), ('ConvNet', 'ConvNet'), (')', ')'), ('41,', '41,'), ('42', '42'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'network'), 'nsubj'), (('was', 'network'), 'cop'), (('the', 'network'), 'det'), (('convolutional', 'network'), 'amod'), (('neural', 'network'), 'amod'), (('network', 'root'), 'root'), (('(', 'ConvNet'), 'punct'), (('ConvNet', 'network'), 'appos'), ((')', 'ConvNet'), 'punct'), (('41,', '42'), 'nummod'), (('42', 'network'), 'appos'), (('.', 'network'), 'punct')]

 Named Entites are: 
>> [('ConvNet', 'ORG'), ('41,', 'CARDINAL'), ('42', 'CARDINAL')]

------------------- Sentence 3 -------------------

 It achieved many  practical successes during the period when neural networks were out  of favour and it has recently been widely adopted by the computer- vision community. 

Tokens are: 
>> ['It', 'achieved', 'many', 'practical', 'successes', 'during', 'the', 'period', 'when', 'neural', 'networks', 'were', 'out', 'of', 'favour', 'and', 'it', 'has', 'recently', 'been', 'widely', 'adopted', 'by', 'the', 'computer', '-', 'vision', 'community', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('achieved', 'VERB'), ('many', 'ADJ'), ('practical', 'ADJ'), ('successes', 'NOUN'), ('during', 'ADP'), ('the', 'DET'), ('period', 'NOUN'), ('when', 'SCONJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('were', 'AUX'), ('out', 'ADP'), ('of', 'ADP'), ('favour', 'NOUN'), ('and', 'CCONJ'), ('it', 'PRON'), ('has', 'AUX'), ('recently', 'ADV'), ('been', 'AUX'), ('widely', 'ADV'), ('adopted', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('computer', 'NOUN'), ('-', 'PUNCT'), ('vision', 'NOUN'), ('community', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('achieved', 'VBD'), ('many', 'JJ'), ('practical', 'JJ'), ('successes', 'NNS'), ('during', 'IN'), ('the', 'DT'), ('period', 'NN'), ('when', 'WRB'), ('neural', 'JJ'), ('networks', 'NNS'), ('were', 'VBD'), ('out', 'IN'), ('of', 'IN'), ('favour', 'NN'), ('and', 'CC'), ('it', 'PRP'), ('has', 'VBZ'), ('recently', 'RB'), ('been', 'VBN'), ('widely', 'RB'), ('adopted', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('computer', 'NN'), ('-', 'HYPH'), ('vision', 'NN'), ('community', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('achieved', 'achieve'), ('many', 'many'), ('practical', 'practical'), ('successes', 'success'), ('during', 'during'), ('the', 'the'), ('period', 'period'), ('when', 'when'), ('neural', 'neural'), ('networks', 'network'), ('were', 'be'), ('out', 'out'), ('of', 'of'), ('favour', 'favour'), ('and', 'and'), ('it', 'it'), ('has', 'have'), ('recently', 'recently'), ('been', 'be'), ('widely', 'widely'), ('adopted', 'adopt'), ('by', 'by'), ('the', 'the'), ('computer', 'computer'), ('-', '-'), ('vision', 'vision'), ('community', 'community'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'achieved'), 'nsubj'), (('achieved', 'root'), 'root'), (('many', 'successes'), 'amod'), (('practical', 'successes'), 'amod'), (('successes', 'achieved'), 'obj'), (('during', 'period'), 'case'), (('the', 'period'), 'det'), (('period', 'achieved'), 'obl'), (('when', 'favour'), 'mark'), (('neural', 'networks'), 'amod'), (('networks', 'favour'), 'nsubj'), (('were', 'favour'), 'cop'), (('out', 'favour'), 'case'), (('of', 'favour'), 'case'), (('favour', 'achieved'), 'advcl'), (('and', 'adopted'), 'cc'), (('it', 'adopted'), 'nsubj:pass'), (('has', 'adopted'), 'aux'), (('recently', 'adopted'), 'advmod'), (('been', 'adopted'), 'aux:pass'), (('widely', 'adopted'), 'advmod'), (('adopted', 'achieved'), 'conj'), (('by', 'community'), 'case'), (('the', 'community'), 'det'), (('computer', 'vision'), 'compound'), (('-', 'vision'), 'punct'), (('vision', 'community'), 'compound'), (('community', 'adopted'), 'obl'), (('.', 'achieved'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 117 =================================

Convolutional neural networks  ConvNets are designed to process data that come in the form of  multiple arrays, for example a colour image composed of three 2D  arrays containing pixel intensities in the three colour channels. Many  data modalities are in the form of multiple arrays: 1D for signals and  sequences, including language; 2D for images or audio spectrograms;  and 3D for video or volumetric images. There are four key ideas  behind ConvNets that take advantage of the properties of natural  signals: local connections, shared weights, pooling and the use of  many layers.  


------------------- Sentence 1 -------------------

 Convolutional neural networks  ConvNets are designed to process data that come in the form of  multiple arrays, for example a colour image composed of three 2D  arrays containing pixel intensities in the three colour channels. 

Tokens are: 
>> ['Convolutional', 'neural', 'networks', 'ConvNets', 'are', 'designed', 'to', 'process', 'data', 'that', 'come', 'in', 'the', 'form', 'of', 'multiple', 'arrays', ',', 'for', 'example', 'a', 'colour', 'image', 'composed', 'of', 'three', '2D', 'arrays', 'containing', 'pixel', 'intensities', 'in', 'the', 'three', 'colour', 'channels', '.'] 

 UPOS tags are: 
>> [('Convolutional', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('ConvNets', 'PROPN'), ('are', 'AUX'), ('designed', 'VERB'), ('to', 'PART'), ('process', 'VERB'), ('data', 'NOUN'), ('that', 'PRON'), ('come', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('form', 'NOUN'), ('of', 'ADP'), ('multiple', 'ADJ'), ('arrays', 'NOUN'), (',', 'PUNCT'), ('for', 'ADP'), ('example', 'NOUN'), ('a', 'DET'), ('colour', 'NOUN'), ('image', 'NOUN'), ('composed', 'VERB'), ('of', 'ADP'), ('three', 'NUM'), ('2D', 'NOUN'), ('arrays', 'NOUN'), ('containing', 'VERB'), ('pixel', 'NOUN'), ('intensities', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('three', 'NUM'), ('colour', 'NOUN'), ('channels', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Convolutional', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), ('ConvNets', 'NNPS'), ('are', 'VBP'), ('designed', 'VBN'), ('to', 'TO'), ('process', 'VB'), ('data', 'NNS'), ('that', 'WDT'), ('come', 'VBP'), ('in', 'IN'), ('the', 'DT'), ('form', 'NN'), ('of', 'IN'), ('multiple', 'JJ'), ('arrays', 'NNS'), (',', ','), ('for', 'IN'), ('example', 'NN'), ('a', 'DT'), ('colour', 'NN'), ('image', 'NN'), ('composed', 'VBN'), ('of', 'IN'), ('three', 'CD'), ('2D', 'NN'), ('arrays', 'NNS'), ('containing', 'VBG'), ('pixel', 'NN'), ('intensities', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('three', 'CD'), ('colour', 'NN'), ('channels', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Convolutional', 'convolutional'), ('neural', 'neural'), ('networks', 'network'), ('ConvNets', 'Convnet'), ('are', 'be'), ('designed', 'design'), ('to', 'to'), ('process', 'process'), ('data', 'datum'), ('that', 'that'), ('come', 'come'), ('in', 'in'), ('the', 'the'), ('form', 'form'), ('of', 'of'), ('multiple', 'multiple'), ('arrays', 'array'), (',', ','), ('for', 'for'), ('example', 'example'), ('a', 'a'), ('colour', 'colour'), ('image', 'image'), ('composed', 'compose'), ('of', 'of'), ('three', 'three'), ('2D', '2d'), ('arrays', 'array'), ('containing', 'contain'), ('pixel', 'pixel'), ('intensities', 'intensity'), ('in', 'in'), ('the', 'the'), ('three', 'three'), ('colour', 'colour'), ('channels', 'channel'), ('.', '.')] 

 Dependency tags are: 
>> [(('Convolutional', 'ConvNets'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'ConvNets'), 'compound'), (('ConvNets', 'designed'), 'nsubj:pass'), (('are', 'designed'), 'aux:pass'), (('designed', 'root'), 'root'), (('to', 'process'), 'mark'), (('process', 'designed'), 'xcomp'), (('data', 'process'), 'obj'), (('that', 'come'), 'nsubj'), (('come', 'data'), 'acl:relcl'), (('in', 'form'), 'case'), (('the', 'form'), 'det'), (('form', 'come'), 'obl'), (('of', 'arrays'), 'case'), (('multiple', 'arrays'), 'amod'), (('arrays', 'form'), 'nmod'), ((',', 'image'), 'punct'), (('for', 'example'), 'case'), (('example', 'image'), 'nmod'), (('a', 'image'), 'det'), (('colour', 'image'), 'compound'), (('image', 'come'), 'obl'), (('composed', 'image'), 'acl'), (('of', 'arrays'), 'case'), (('three', 'arrays'), 'nummod'), (('2D', 'arrays'), 'compound'), (('arrays', 'composed'), 'obl'), (('containing', 'arrays'), 'acl'), (('pixel', 'intensities'), 'compound'), (('intensities', 'containing'), 'obj'), (('in', 'channels'), 'case'), (('the', 'channels'), 'det'), (('three', 'channels'), 'nummod'), (('colour', 'channels'), 'compound'), (('channels', 'containing'), 'obl'), (('.', 'designed'), 'punct')]

 Named Entites are: 
>> [('ConvNets', 'PRODUCT'), ('three', 'CARDINAL'), ('three', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Many  data modalities are in the form of multiple arrays: 1D for signals and  sequences, including language; 2D for images or audio spectrograms;  and 3D for video or volumetric images. 

Tokens are: 
>> ['Many', 'data', 'modalities', 'are', 'in', 'the', 'form', 'of', 'multiple', 'arrays', ':', '1', 'D', 'for', 'signals', 'and', 'sequences', ',', 'including', 'language', ';', '2', 'D', 'for', 'images', 'or', 'audio', 'spectrograms', ';', 'and', '3D', 'for', 'video', 'or', 'volumetric', 'images', '.'] 

 UPOS tags are: 
>> [('Many', 'ADJ'), ('data', 'NOUN'), ('modalities', 'NOUN'), ('are', 'AUX'), ('in', 'ADP'), ('the', 'DET'), ('form', 'NOUN'), ('of', 'ADP'), ('multiple', 'ADJ'), ('arrays', 'NOUN'), (':', 'PUNCT'), ('1', 'NUM'), ('D', 'NOUN'), ('for', 'ADP'), ('signals', 'NOUN'), ('and', 'CCONJ'), ('sequences', 'NOUN'), (',', 'PUNCT'), ('including', 'VERB'), ('language', 'NOUN'), (';', 'PUNCT'), ('2', 'NUM'), ('D', 'NOUN'), ('for', 'ADP'), ('images', 'NOUN'), ('or', 'CCONJ'), ('audio', 'NOUN'), ('spectrograms', 'NOUN'), (';', 'PUNCT'), ('and', 'CCONJ'), ('3D', 'NOUN'), ('for', 'ADP'), ('video', 'NOUN'), ('or', 'CCONJ'), ('volumetric', 'ADJ'), ('images', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Many', 'JJ'), ('data', 'NNS'), ('modalities', 'NNS'), ('are', 'VBP'), ('in', 'IN'), ('the', 'DT'), ('form', 'NN'), ('of', 'IN'), ('multiple', 'JJ'), ('arrays', 'NNS'), (':', ':'), ('1', 'CD'), ('D', 'NN'), ('for', 'IN'), ('signals', 'NNS'), ('and', 'CC'), ('sequences', 'NNS'), (',', ','), ('including', 'VBG'), ('language', 'NN'), (';', ':'), ('2', 'CD'), ('D', 'NNS'), ('for', 'IN'), ('images', 'NNS'), ('or', 'CC'), ('audio', 'NN'), ('spectrograms', 'NNS'), (';', ':'), ('and', 'CC'), ('3D', 'NN'), ('for', 'IN'), ('video', 'NN'), ('or', 'CC'), ('volumetric', 'JJ'), ('images', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Many', 'many'), ('data', 'datum'), ('modalities', 'modality'), ('are', 'be'), ('in', 'in'), ('the', 'the'), ('form', 'form'), ('of', 'of'), ('multiple', 'multiple'), ('arrays', 'array'), (':', ':'), ('1', '1'), ('D', 'd'), ('for', 'for'), ('signals', 'signal'), ('and', 'and'), ('sequences', 'sequence'), (',', ','), ('including', 'include'), ('language', 'language'), (';', ';'), ('2', '2'), ('D', 'd'), ('for', 'for'), ('images', 'image'), ('or', 'or'), ('audio', 'audio'), ('spectrograms', 'spectrogram'), (';', ';'), ('and', 'and'), ('3D', '3d'), ('for', 'for'), ('video', 'video'), ('or', 'or'), ('volumetric', 'volumetric'), ('images', 'image'), ('.', '.')] 

 Dependency tags are: 
>> [(('Many', 'modalities'), 'amod'), (('data', 'modalities'), 'compound'), (('modalities', 'form'), 'nsubj'), (('are', 'form'), 'cop'), (('in', 'form'), 'case'), (('the', 'form'), 'det'), (('form', 'root'), 'root'), (('of', 'arrays'), 'case'), (('multiple', 'arrays'), 'amod'), (('arrays', 'form'), 'nmod'), ((':', 'D'), 'punct'), (('1', 'D'), 'nummod'), (('D', 'arrays'), 'appos'), (('for', 'signals'), 'case'), (('signals', 'D'), 'nmod'), (('and', 'sequences'), 'cc'), (('sequences', 'signals'), 'conj'), ((',', 'language'), 'punct'), (('including', 'language'), 'case'), (('language', 'signals'), 'nmod'), ((';', 'D'), 'punct'), (('2', 'D'), 'nummod'), (('D', 'form'), 'parataxis'), (('for', 'images'), 'case'), (('images', 'D'), 'nmod'), (('or', 'spectrograms'), 'cc'), (('audio', 'spectrograms'), 'compound'), (('spectrograms', 'images'), 'conj'), ((';', '3D'), 'punct'), (('and', '3D'), 'cc'), (('3D', 'D'), 'conj'), (('for', 'video'), 'case'), (('video', '3D'), 'nmod'), (('or', 'images'), 'cc'), (('volumetric', 'images'), 'amod'), (('images', 'video'), 'conj'), (('.', 'form'), 'punct')]

 Named Entites are: 
>> [('1', 'CARDINAL')]

------------------- Sentence 3 -------------------

 There are four key ideas  behind ConvNets that take advantage of the properties of natural  signals: local connections, shared weights, pooling and the use of  many layers. 

Tokens are: 
>> ['There', 'are', 'four', 'key', 'ideas', 'behind', 'ConvNets', 'that', 'take', 'advantage', 'of', 'the', 'properties', 'of', 'natural', 'signals', ':', 'local', 'connections', ',', 'shared', 'weights', ',', 'pooling', 'and', 'the', 'use', 'of', 'many', 'layers', '.'] 

 UPOS tags are: 
>> [('There', 'PRON'), ('are', 'VERB'), ('four', 'NUM'), ('key', 'ADJ'), ('ideas', 'NOUN'), ('behind', 'ADP'), ('ConvNets', 'PROPN'), ('that', 'PRON'), ('take', 'VERB'), ('advantage', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('properties', 'NOUN'), ('of', 'ADP'), ('natural', 'ADJ'), ('signals', 'NOUN'), (':', 'PUNCT'), ('local', 'ADJ'), ('connections', 'NOUN'), (',', 'PUNCT'), ('shared', 'VERB'), ('weights', 'NOUN'), (',', 'PUNCT'), ('pooling', 'NOUN'), ('and', 'CCONJ'), ('the', 'DET'), ('use', 'NOUN'), ('of', 'ADP'), ('many', 'ADJ'), ('layers', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('There', 'EX'), ('are', 'VBP'), ('four', 'CD'), ('key', 'JJ'), ('ideas', 'NNS'), ('behind', 'IN'), ('ConvNets', 'NNPS'), ('that', 'WDT'), ('take', 'VBP'), ('advantage', 'NN'), ('of', 'IN'), ('the', 'DT'), ('properties', 'NNS'), ('of', 'IN'), ('natural', 'JJ'), ('signals', 'NNS'), (':', ':'), ('local', 'JJ'), ('connections', 'NNS'), (',', ','), ('shared', 'VBN'), ('weights', 'NNS'), (',', ','), ('pooling', 'NN'), ('and', 'CC'), ('the', 'DT'), ('use', 'NN'), ('of', 'IN'), ('many', 'JJ'), ('layers', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('There', 'there'), ('are', 'be'), ('four', 'four'), ('key', 'key'), ('ideas', 'idea'), ('behind', 'behind'), ('ConvNets', 'Convnet'), ('that', 'that'), ('take', 'take'), ('advantage', 'advantage'), ('of', 'of'), ('the', 'the'), ('properties', 'property'), ('of', 'of'), ('natural', 'natural'), ('signals', 'signal'), (':', ':'), ('local', 'local'), ('connections', 'connection'), (',', ','), ('shared', 'share'), ('weights', 'weight'), (',', ','), ('pooling', 'pooling'), ('and', 'and'), ('the', 'the'), ('use', 'use'), ('of', 'of'), ('many', 'many'), ('layers', 'layer'), ('.', '.')] 

 Dependency tags are: 
>> [(('There', 'are'), 'expl'), (('are', 'root'), 'root'), (('four', 'ideas'), 'nummod'), (('key', 'ideas'), 'amod'), (('ideas', 'are'), 'nsubj'), (('behind', 'ConvNets'), 'case'), (('ConvNets', 'ideas'), 'nmod'), (('that', 'take'), 'nsubj'), (('take', 'ideas'), 'acl:relcl'), (('advantage', 'take'), 'obj'), (('of', 'properties'), 'case'), (('the', 'properties'), 'det'), (('properties', 'advantage'), 'nmod'), (('of', 'signals'), 'case'), (('natural', 'signals'), 'amod'), (('signals', 'properties'), 'nmod'), ((':', 'connections'), 'punct'), (('local', 'connections'), 'amod'), (('connections', 'signals'), 'appos'), ((',', 'weights'), 'punct'), (('shared', 'weights'), 'amod'), (('weights', 'connections'), 'conj'), ((',', 'pooling'), 'punct'), (('pooling', 'connections'), 'conj'), (('and', 'use'), 'cc'), (('the', 'use'), 'det'), (('use', 'connections'), 'conj'), (('of', 'layers'), 'case'), (('many', 'layers'), 'amod'), (('layers', 'use'), 'nmod'), (('.', 'are'), 'punct')]

 Named Entites are: 
>> [('four', 'CARDINAL'), ('ConvNets', 'ORG')]

================================ Paragraph 118 =================================

The architecture of a typical ConvNet (Fig. 2) is structured as a  series of stages. The first few stages are composed of two types of  layers: convolutional layers and pooling layers. Units in a convolu- tional layer are organized in feature maps, within which each unit  is connected to local patches in the feature maps of the previous  layer through a set of weights called a filter bank. The result of this  local weighted sum is then passed through a non-linearity such as a  ReLU. All units in a feature map share the same filter bank. Differ- ent feature maps in a layer use different filter banks. The reason for  


------------------- Sentence 1 -------------------

 The architecture of a typical ConvNet (Fig. 2) is structured as a  series of stages. 

Tokens are: 
>> ['The', 'architecture', 'of', 'a', 'typical', 'ConvNet', '(', 'Fig.', '2', ')', 'is', 'structured', 'as', 'a', 'series', 'of', 'stages', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('architecture', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('typical', 'ADJ'), ('ConvNet', 'PROPN'), ('(', 'PUNCT'), ('Fig.', 'PROPN'), ('2', 'NUM'), (')', 'PUNCT'), ('is', 'AUX'), ('structured', 'VERB'), ('as', 'ADP'), ('a', 'DET'), ('series', 'NOUN'), ('of', 'ADP'), ('stages', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('architecture', 'NN'), ('of', 'IN'), ('a', 'DT'), ('typical', 'JJ'), ('ConvNet', 'NNP'), ('(', '-LRB-'), ('Fig.', 'NNP'), ('2', 'CD'), (')', '-RRB-'), ('is', 'VBZ'), ('structured', 'VBN'), ('as', 'IN'), ('a', 'DT'), ('series', 'NN'), ('of', 'IN'), ('stages', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('architecture', 'architecture'), ('of', 'of'), ('a', 'a'), ('typical', 'typical'), ('ConvNet', 'ConvNet'), ('(', '('), ('Fig.', 'Fig.'), ('2', '2'), (')', ')'), ('is', 'be'), ('structured', 'structure'), ('as', 'as'), ('a', 'a'), ('series', 'series'), ('of', 'of'), ('stages', 'stage'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'architecture'), 'det'), (('architecture', 'structured'), 'nsubj:pass'), (('of', 'ConvNet'), 'case'), (('a', 'ConvNet'), 'det'), (('typical', 'ConvNet'), 'amod'), (('ConvNet', 'architecture'), 'nmod'), (('(', 'Fig.'), 'punct'), (('Fig.', 'ConvNet'), 'appos'), (('2', 'Fig.'), 'dep'), ((')', 'Fig.'), 'punct'), (('is', 'structured'), 'aux:pass'), (('structured', 'root'), 'root'), (('as', 'series'), 'case'), (('a', 'series'), 'det'), (('series', 'structured'), 'obl'), (('of', 'stages'), 'case'), (('stages', 'series'), 'nmod'), (('.', 'structured'), 'punct')]

 Named Entites are: 
>> [('ConvNet', 'PRODUCT'), ('2', 'CARDINAL')]

------------------- Sentence 2 -------------------

 The first few stages are composed of two types of  layers: convolutional layers and pooling layers. 

Tokens are: 
>> ['The', 'first', 'few', 'stages', 'are', 'composed', 'of', 'two', 'types', 'of', 'layers', ':', 'convolutional', 'layers', 'and', 'pooling', 'layers', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('first', 'ADJ'), ('few', 'ADJ'), ('stages', 'NOUN'), ('are', 'AUX'), ('composed', 'VERB'), ('of', 'ADP'), ('two', 'NUM'), ('types', 'NOUN'), ('of', 'ADP'), ('layers', 'NOUN'), (':', 'PUNCT'), ('convolutional', 'ADJ'), ('layers', 'NOUN'), ('and', 'CCONJ'), ('pooling', 'NOUN'), ('layers', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('first', 'JJ'), ('few', 'JJ'), ('stages', 'NNS'), ('are', 'VBP'), ('composed', 'VBN'), ('of', 'IN'), ('two', 'CD'), ('types', 'NNS'), ('of', 'IN'), ('layers', 'NNS'), (':', ':'), ('convolutional', 'JJ'), ('layers', 'NNS'), ('and', 'CC'), ('pooling', 'NN'), ('layers', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('first', 'first'), ('few', 'few'), ('stages', 'stage'), ('are', 'be'), ('composed', 'compose'), ('of', 'of'), ('two', 'two'), ('types', 'type'), ('of', 'of'), ('layers', 'layer'), (':', ':'), ('convolutional', 'convolutional'), ('layers', 'layer'), ('and', 'and'), ('pooling', 'pooling'), ('layers', 'layer'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'stages'), 'det'), (('first', 'stages'), 'amod'), (('few', 'stages'), 'amod'), (('stages', 'composed'), 'nsubj:pass'), (('are', 'composed'), 'aux:pass'), (('composed', 'root'), 'root'), (('of', 'types'), 'case'), (('two', 'types'), 'nummod'), (('types', 'composed'), 'obl'), (('of', 'layers'), 'case'), (('layers', 'types'), 'nmod'), ((':', 'layers'), 'punct'), (('convolutional', 'layers'), 'amod'), (('layers', 'types'), 'appos'), (('and', 'layers'), 'cc'), (('pooling', 'layers'), 'compound'), (('layers', 'layers'), 'conj'), (('.', 'composed'), 'punct')]

 Named Entites are: 
>> [('first', 'ORDINAL'), ('two', 'CARDINAL')]

------------------- Sentence 3 -------------------

 Units in a convolu- tional layer are organized in feature maps, within which each unit  is connected to local patches in the feature maps of the previous  layer through a set of weights called a filter bank. 

Tokens are: 
>> ['Units', 'in', 'a', 'convolu-', 'tional', 'layer', 'are', 'organized', 'in', 'feature', 'maps', ',', 'within', 'which', 'each', 'unit', 'is', 'connected', 'to', 'local', 'patches', 'in', 'the', 'feature', 'maps', 'of', 'the', 'previous', 'layer', 'through', 'a', 'set', 'of', 'weights', 'called', 'a', 'filter', 'bank', '.'] 

 UPOS tags are: 
>> [('Units', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('convolu-', 'ADJ'), ('tional', 'ADJ'), ('layer', 'NOUN'), ('are', 'AUX'), ('organized', 'VERB'), ('in', 'ADP'), ('feature', 'NOUN'), ('maps', 'NOUN'), (',', 'PUNCT'), ('within', 'ADP'), ('which', 'PRON'), ('each', 'DET'), ('unit', 'NOUN'), ('is', 'AUX'), ('connected', 'VERB'), ('to', 'ADP'), ('local', 'ADJ'), ('patches', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('feature', 'NOUN'), ('maps', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('previous', 'ADJ'), ('layer', 'NOUN'), ('through', 'ADP'), ('a', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('weights', 'NOUN'), ('called', 'VERB'), ('a', 'DET'), ('filter', 'NOUN'), ('bank', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Units', 'NNS'), ('in', 'IN'), ('a', 'DT'), ('convolu-', 'JJ'), ('tional', 'JJ'), ('layer', 'NN'), ('are', 'VBP'), ('organized', 'VBN'), ('in', 'IN'), ('feature', 'NN'), ('maps', 'NNS'), (',', ','), ('within', 'IN'), ('which', 'WDT'), ('each', 'DT'), ('unit', 'NN'), ('is', 'VBZ'), ('connected', 'VBN'), ('to', 'IN'), ('local', 'JJ'), ('patches', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('feature', 'NN'), ('maps', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('previous', 'JJ'), ('layer', 'NN'), ('through', 'IN'), ('a', 'DT'), ('set', 'NN'), ('of', 'IN'), ('weights', 'NNS'), ('called', 'VBN'), ('a', 'DT'), ('filter', 'NN'), ('bank', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Units', 'unit'), ('in', 'in'), ('a', 'a'), ('convolu-', 'convolu-'), ('tional', 'tional'), ('layer', 'layer'), ('are', 'be'), ('organized', 'organize'), ('in', 'in'), ('feature', 'feature'), ('maps', 'map'), (',', ','), ('within', 'within'), ('which', 'which'), ('each', 'each'), ('unit', 'unit'), ('is', 'be'), ('connected', 'connect'), ('to', 'to'), ('local', 'local'), ('patches', 'patch'), ('in', 'in'), ('the', 'the'), ('feature', 'feature'), ('maps', 'map'), ('of', 'of'), ('the', 'the'), ('previous', 'previous'), ('layer', 'layer'), ('through', 'through'), ('a', 'a'), ('set', 'set'), ('of', 'of'), ('weights', 'weight'), ('called', 'call'), ('a', 'a'), ('filter', 'filter'), ('bank', 'bank'), ('.', '.')] 

 Dependency tags are: 
>> [(('Units', 'organized'), 'nsubj:pass'), (('in', 'layer'), 'case'), (('a', 'layer'), 'det'), (('convolu-', 'layer'), 'amod'), (('tional', 'layer'), 'amod'), (('layer', 'Units'), 'nmod'), (('are', 'organized'), 'aux:pass'), (('organized', 'root'), 'root'), (('in', 'maps'), 'case'), (('feature', 'maps'), 'compound'), (('maps', 'organized'), 'obl'), ((',', 'maps'), 'punct'), (('within', 'which'), 'case'), (('which', 'connected'), 'obl'), (('each', 'unit'), 'det'), (('unit', 'connected'), 'nsubj:pass'), (('is', 'connected'), 'aux:pass'), (('connected', 'maps'), 'acl:relcl'), (('to', 'patches'), 'case'), (('local', 'patches'), 'amod'), (('patches', 'connected'), 'obl'), (('in', 'maps'), 'case'), (('the', 'maps'), 'det'), (('feature', 'maps'), 'compound'), (('maps', 'patches'), 'nmod'), (('of', 'layer'), 'case'), (('the', 'layer'), 'det'), (('previous', 'layer'), 'amod'), (('layer', 'maps'), 'nmod'), (('through', 'set'), 'case'), (('a', 'set'), 'det'), (('set', 'maps'), 'nmod'), (('of', 'weights'), 'case'), (('weights', 'set'), 'nmod'), (('called', 'weights'), 'acl'), (('a', 'bank'), 'det'), (('filter', 'bank'), 'compound'), (('bank', 'called'), 'obj'), (('.', 'organized'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 The result of this  local weighted sum is then passed through a non-linearity such as a  ReLU. 

Tokens are: 
>> ['The', 'result', 'of', 'this', 'local', 'weighted', 'sum', 'is', 'then', 'passed', 'through', 'a', 'non-linearity', 'such', 'as', 'a', 'ReLU', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('result', 'NOUN'), ('of', 'ADP'), ('this', 'DET'), ('local', 'ADJ'), ('weighted', 'VERB'), ('sum', 'NOUN'), ('is', 'AUX'), ('then', 'ADV'), ('passed', 'VERB'), ('through', 'ADP'), ('a', 'DET'), ('non-linearity', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('a', 'DET'), ('ReLU', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('result', 'NN'), ('of', 'IN'), ('this', 'DT'), ('local', 'JJ'), ('weighted', 'VBN'), ('sum', 'NN'), ('is', 'VBZ'), ('then', 'RB'), ('passed', 'VBN'), ('through', 'IN'), ('a', 'DT'), ('non-linearity', 'NN'), ('such', 'JJ'), ('as', 'IN'), ('a', 'DT'), ('ReLU', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('result', 'result'), ('of', 'of'), ('this', 'this'), ('local', 'local'), ('weighted', 'weight'), ('sum', 'sum'), ('is', 'be'), ('then', 'then'), ('passed', 'pass'), ('through', 'through'), ('a', 'a'), ('non-linearity', 'non-linearity'), ('such', 'such'), ('as', 'as'), ('a', 'a'), ('ReLU', 'ReLU'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'result'), 'det'), (('result', 'passed'), 'nsubj:pass'), (('of', 'sum'), 'case'), (('this', 'sum'), 'det'), (('local', 'sum'), 'amod'), (('weighted', 'sum'), 'amod'), (('sum', 'result'), 'nmod'), (('is', 'passed'), 'aux:pass'), (('then', 'passed'), 'advmod'), (('passed', 'root'), 'root'), (('through', 'non-linearity'), 'case'), (('a', 'non-linearity'), 'det'), (('non-linearity', 'passed'), 'obl'), (('such', 'ReLU'), 'case'), (('as', 'such'), 'fixed'), (('a', 'ReLU'), 'det'), (('ReLU', 'non-linearity'), 'nmod'), (('.', 'passed'), 'punct')]

 Named Entites are: 
>> [('ReLU', 'ORG')]

------------------- Sentence 5 -------------------

 All units in a feature map share the same filter bank. 

Tokens are: 
>> ['All', 'units', 'in', 'a', 'feature', 'map', 'share', 'the', 'same', 'filter', 'bank', '.'] 

 UPOS tags are: 
>> [('All', 'DET'), ('units', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('feature', 'NOUN'), ('map', 'NOUN'), ('share', 'VERB'), ('the', 'DET'), ('same', 'ADJ'), ('filter', 'NOUN'), ('bank', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('All', 'DT'), ('units', 'NNS'), ('in', 'IN'), ('a', 'DT'), ('feature', 'NN'), ('map', 'NN'), ('share', 'VBP'), ('the', 'DT'), ('same', 'JJ'), ('filter', 'NN'), ('bank', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('All', 'all'), ('units', 'unit'), ('in', 'in'), ('a', 'a'), ('feature', 'feature'), ('map', 'map'), ('share', 'share'), ('the', 'the'), ('same', 'same'), ('filter', 'filter'), ('bank', 'bank'), ('.', '.')] 

 Dependency tags are: 
>> [(('All', 'units'), 'det'), (('units', 'share'), 'nsubj'), (('in', 'map'), 'case'), (('a', 'map'), 'det'), (('feature', 'map'), 'compound'), (('map', 'units'), 'nmod'), (('share', 'root'), 'root'), (('the', 'bank'), 'det'), (('same', 'bank'), 'amod'), (('filter', 'bank'), 'compound'), (('bank', 'share'), 'obj'), (('.', 'share'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 Differ- ent feature maps in a layer use different filter banks. 

Tokens are: 
>> ['Differ', '-', 'ent', 'feature', 'maps', 'in', 'a', 'layer', 'use', 'different', 'filter', 'banks', '.'] 

 UPOS tags are: 
>> [('Differ', 'VERB'), ('-', 'PUNCT'), ('ent', 'NOUN'), ('feature', 'NOUN'), ('maps', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('layer', 'NOUN'), ('use', 'VERB'), ('different', 'ADJ'), ('filter', 'NOUN'), ('banks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Differ', 'VB'), ('-', 'HYPH'), ('ent', 'NN'), ('feature', 'NN'), ('maps', 'NNS'), ('in', 'IN'), ('a', 'DT'), ('layer', 'NN'), ('use', 'VB'), ('different', 'JJ'), ('filter', 'NN'), ('banks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Differ', 'differ'), ('-', '-'), ('ent', 'ent'), ('feature', 'feature'), ('maps', 'map'), ('in', 'in'), ('a', 'a'), ('layer', 'layer'), ('use', 'use'), ('different', 'different'), ('filter', 'filter'), ('banks', 'bank'), ('.', '.')] 

 Dependency tags are: 
>> [(('Differ', 'root'), 'root'), (('-', 'ent'), 'punct'), (('ent', 'maps'), 'compound'), (('feature', 'maps'), 'compound'), (('maps', 'Differ'), 'obj'), (('in', 'layer'), 'case'), (('a', 'layer'), 'det'), (('layer', 'maps'), 'nmod'), (('use', 'Differ'), 'advcl'), (('different', 'banks'), 'amod'), (('filter', 'banks'), 'compound'), (('banks', 'use'), 'obj'), (('.', 'Differ'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 7 -------------------

 The reason for 

Tokens are: 
>> ['The', 'reason', 'for'] 

 UPOS tags are: 
>> [('The', 'DET'), ('reason', 'NOUN'), ('for', 'ADP')] 

 XPOS tags are: 
>> [('The', 'DT'), ('reason', 'NN'), ('for', 'IN')] 

 Lemmas are: 
>> [('The', 'the'), ('reason', 'reason'), ('for', 'for')] 

 Dependency tags are: 
>> [(('The', 'reason'), 'det'), (('reason', 'root'), 'root'), (('for', 'reason'), 'nmod')]

 Named Entites are: 
>> []

================================ Paragraph 119 =================================

this architecture is twofold. First, in array data such as images, local  groups of values are often highly correlated, forming distinctive local  motifs that are easily detected. Second, the local statistics of images  and other signals are invariant to location. In other words, if a motif  can appear in one part of the image, it could appear anywhere, hence  the idea of units at different locations sharing the same weights and  detecting the same pattern in different parts of the array. Mathemati- cally, the filtering operation performed by a feature map is a discrete  convolution, hence the name.  


------------------- Sentence 1 -------------------

 this architecture is twofold. 

Tokens are: 
>> ['this', 'architecture', 'is', 'twofold', '.'] 

 UPOS tags are: 
>> [('this', 'DET'), ('architecture', 'NOUN'), ('is', 'AUX'), ('twofold', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('this', 'DT'), ('architecture', 'NN'), ('is', 'VBZ'), ('twofold', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('this', 'this'), ('architecture', 'architecture'), ('is', 'be'), ('twofold', 'twofold'), ('.', '.')] 

 Dependency tags are: 
>> [(('this', 'architecture'), 'det'), (('architecture', 'twofold'), 'nsubj'), (('is', 'twofold'), 'cop'), (('twofold', 'root'), 'root'), (('.', 'twofold'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 First, in array data such as images, local  groups of values are often highly correlated, forming distinctive local  motifs that are easily detected. 

Tokens are: 
>> ['First', ',', 'in', 'array', 'data', 'such', 'as', 'images', ',', 'local', 'groups', 'of', 'values', 'are', 'often', 'highly', 'correlated', ',', 'forming', 'distinctive', 'local', 'motifs', 'that', 'are', 'easily', 'detected', '.'] 

 UPOS tags are: 
>> [('First', 'ADV'), (',', 'PUNCT'), ('in', 'ADP'), ('array', 'NOUN'), ('data', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('images', 'NOUN'), (',', 'PUNCT'), ('local', 'ADJ'), ('groups', 'NOUN'), ('of', 'ADP'), ('values', 'NOUN'), ('are', 'AUX'), ('often', 'ADV'), ('highly', 'ADV'), ('correlated', 'VERB'), (',', 'PUNCT'), ('forming', 'VERB'), ('distinctive', 'ADJ'), ('local', 'ADJ'), ('motifs', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('easily', 'ADV'), ('detected', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('First', 'RB'), (',', ','), ('in', 'IN'), ('array', 'NN'), ('data', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('images', 'NNS'), (',', ','), ('local', 'JJ'), ('groups', 'NNS'), ('of', 'IN'), ('values', 'NNS'), ('are', 'VBP'), ('often', 'RB'), ('highly', 'RB'), ('correlated', 'VBN'), (',', ','), ('forming', 'VBG'), ('distinctive', 'JJ'), ('local', 'JJ'), ('motifs', 'NNS'), ('that', 'WDT'), ('are', 'VBP'), ('easily', 'RB'), ('detected', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('First', 'first'), (',', ','), ('in', 'in'), ('array', 'array'), ('data', 'datum'), ('such', 'such'), ('as', 'as'), ('images', 'image'), (',', ','), ('local', 'local'), ('groups', 'group'), ('of', 'of'), ('values', 'value'), ('are', 'be'), ('often', 'often'), ('highly', 'highly'), ('correlated', 'correlate'), (',', ','), ('forming', 'form'), ('distinctive', 'distinctive'), ('local', 'local'), ('motifs', 'motif'), ('that', 'that'), ('are', 'be'), ('easily', 'easily'), ('detected', 'detect'), ('.', '.')] 

 Dependency tags are: 
>> [(('First', 'correlated'), 'advmod'), ((',', 'correlated'), 'punct'), (('in', 'data'), 'case'), (('array', 'data'), 'compound'), (('data', 'correlated'), 'obl'), (('such', 'images'), 'case'), (('as', 'such'), 'fixed'), (('images', 'data'), 'nmod'), ((',', 'correlated'), 'punct'), (('local', 'groups'), 'amod'), (('groups', 'correlated'), 'nsubj:pass'), (('of', 'values'), 'case'), (('values', 'groups'), 'nmod'), (('are', 'correlated'), 'aux:pass'), (('often', 'correlated'), 'advmod'), (('highly', 'correlated'), 'advmod'), (('correlated', 'root'), 'root'), ((',', 'forming'), 'punct'), (('forming', 'correlated'), 'advcl'), (('distinctive', 'motifs'), 'amod'), (('local', 'motifs'), 'amod'), (('motifs', 'forming'), 'obj'), (('that', 'detected'), 'nsubj:pass'), (('are', 'detected'), 'aux:pass'), (('easily', 'detected'), 'advmod'), (('detected', 'motifs'), 'acl:relcl'), (('.', 'correlated'), 'punct')]

 Named Entites are: 
>> [('First', 'ORDINAL')]

------------------- Sentence 3 -------------------

 Second, the local statistics of images  and other signals are invariant to location. 

Tokens are: 
>> ['Second', ',', 'the', 'local', 'statistics', 'of', 'images', 'and', 'other', 'signals', 'are', 'invariant', 'to', 'location', '.'] 

 UPOS tags are: 
>> [('Second', 'ADV'), (',', 'PUNCT'), ('the', 'DET'), ('local', 'ADJ'), ('statistics', 'NOUN'), ('of', 'ADP'), ('images', 'NOUN'), ('and', 'CCONJ'), ('other', 'ADJ'), ('signals', 'NOUN'), ('are', 'AUX'), ('invariant', 'ADJ'), ('to', 'ADP'), ('location', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Second', 'RB'), (',', ','), ('the', 'DT'), ('local', 'JJ'), ('statistics', 'NNS'), ('of', 'IN'), ('images', 'NNS'), ('and', 'CC'), ('other', 'JJ'), ('signals', 'NNS'), ('are', 'VBP'), ('invariant', 'JJ'), ('to', 'IN'), ('location', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Second', 'second'), (',', ','), ('the', 'the'), ('local', 'local'), ('statistics', 'statistic'), ('of', 'of'), ('images', 'image'), ('and', 'and'), ('other', 'other'), ('signals', 'signal'), ('are', 'be'), ('invariant', 'invariant'), ('to', 'to'), ('location', 'location'), ('.', '.')] 

 Dependency tags are: 
>> [(('Second', 'invariant'), 'advmod'), ((',', 'invariant'), 'punct'), (('the', 'statistics'), 'det'), (('local', 'statistics'), 'amod'), (('statistics', 'invariant'), 'nsubj'), (('of', 'images'), 'case'), (('images', 'statistics'), 'nmod'), (('and', 'signals'), 'cc'), (('other', 'signals'), 'amod'), (('signals', 'images'), 'conj'), (('are', 'invariant'), 'cop'), (('invariant', 'root'), 'root'), (('to', 'location'), 'case'), (('location', 'invariant'), 'obl'), (('.', 'invariant'), 'punct')]

 Named Entites are: 
>> [('Second', 'ORDINAL')]

------------------- Sentence 4 -------------------

 In other words, if a motif  can appear in one part of the image, it could appear anywhere, hence  the idea of units at different locations sharing the same weights and  detecting the same pattern in different parts of the array. 

Tokens are: 
>> ['In', 'other', 'words', ',', 'if', 'a', 'motif', 'can', 'appear', 'in', 'one', 'part', 'of', 'the', 'image', ',', 'it', 'could', 'appear', 'anywhere', ',', 'hence', 'the', 'idea', 'of', 'units', 'at', 'different', 'locations', 'sharing', 'the', 'same', 'weights', 'and', 'detecting', 'the', 'same', 'pattern', 'in', 'different', 'parts', 'of', 'the', 'array', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('other', 'ADJ'), ('words', 'NOUN'), (',', 'PUNCT'), ('if', 'SCONJ'), ('a', 'DET'), ('motif', 'NOUN'), ('can', 'AUX'), ('appear', 'VERB'), ('in', 'ADP'), ('one', 'NUM'), ('part', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('image', 'NOUN'), (',', 'PUNCT'), ('it', 'PRON'), ('could', 'AUX'), ('appear', 'VERB'), ('anywhere', 'ADV'), (',', 'PUNCT'), ('hence', 'ADV'), ('the', 'DET'), ('idea', 'NOUN'), ('of', 'ADP'), ('units', 'NOUN'), ('at', 'ADP'), ('different', 'ADJ'), ('locations', 'NOUN'), ('sharing', 'VERB'), ('the', 'DET'), ('same', 'ADJ'), ('weights', 'NOUN'), ('and', 'CCONJ'), ('detecting', 'VERB'), ('the', 'DET'), ('same', 'ADJ'), ('pattern', 'NOUN'), ('in', 'ADP'), ('different', 'ADJ'), ('parts', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('array', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('other', 'JJ'), ('words', 'NNS'), (',', ','), ('if', 'IN'), ('a', 'DT'), ('motif', 'NN'), ('can', 'MD'), ('appear', 'VB'), ('in', 'IN'), ('one', 'CD'), ('part', 'NN'), ('of', 'IN'), ('the', 'DT'), ('image', 'NN'), (',', ','), ('it', 'PRP'), ('could', 'MD'), ('appear', 'VB'), ('anywhere', 'RB'), (',', ','), ('hence', 'RB'), ('the', 'DT'), ('idea', 'NN'), ('of', 'IN'), ('units', 'NNS'), ('at', 'IN'), ('different', 'JJ'), ('locations', 'NNS'), ('sharing', 'VBG'), ('the', 'DT'), ('same', 'JJ'), ('weights', 'NNS'), ('and', 'CC'), ('detecting', 'VBG'), ('the', 'DT'), ('same', 'JJ'), ('pattern', 'NN'), ('in', 'IN'), ('different', 'JJ'), ('parts', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('array', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('other', 'other'), ('words', 'word'), (',', ','), ('if', 'if'), ('a', 'a'), ('motif', 'motif'), ('can', 'can'), ('appear', 'appear'), ('in', 'in'), ('one', 'one'), ('part', 'part'), ('of', 'of'), ('the', 'the'), ('image', 'image'), (',', ','), ('it', 'it'), ('could', 'could'), ('appear', 'appear'), ('anywhere', 'anywhere'), (',', ','), ('hence', 'hence'), ('the', 'the'), ('idea', 'idea'), ('of', 'of'), ('units', 'unit'), ('at', 'at'), ('different', 'different'), ('locations', 'location'), ('sharing', 'share'), ('the', 'the'), ('same', 'same'), ('weights', 'weight'), ('and', 'and'), ('detecting', 'detect'), ('the', 'the'), ('same', 'same'), ('pattern', 'pattern'), ('in', 'in'), ('different', 'different'), ('parts', 'part'), ('of', 'of'), ('the', 'the'), ('array', 'array'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'words'), 'case'), (('other', 'words'), 'amod'), (('words', 'appear'), 'obl'), ((',', 'appear'), 'punct'), (('if', 'appear'), 'mark'), (('a', 'motif'), 'det'), (('motif', 'appear'), 'nsubj'), (('can', 'appear'), 'aux'), (('appear', 'appear'), 'advcl'), (('in', 'part'), 'case'), (('one', 'part'), 'nummod'), (('part', 'appear'), 'obl'), (('of', 'image'), 'case'), (('the', 'image'), 'det'), (('image', 'part'), 'nmod'), ((',', 'appear'), 'punct'), (('it', 'appear'), 'nsubj'), (('could', 'appear'), 'aux'), (('appear', 'root'), 'root'), (('anywhere', 'appear'), 'advmod'), ((',', 'appear'), 'punct'), (('hence', 'idea'), 'advmod'), (('the', 'idea'), 'det'), (('idea', 'appear'), 'obj'), (('of', 'units'), 'case'), (('units', 'idea'), 'nmod'), (('at', 'locations'), 'case'), (('different', 'locations'), 'amod'), (('locations', 'units'), 'nmod'), (('sharing', 'appear'), 'advcl'), (('the', 'weights'), 'det'), (('same', 'weights'), 'amod'), (('weights', 'sharing'), 'obj'), (('and', 'detecting'), 'cc'), (('detecting', 'sharing'), 'conj'), (('the', 'pattern'), 'det'), (('same', 'pattern'), 'amod'), (('pattern', 'detecting'), 'obj'), (('in', 'parts'), 'case'), (('different', 'parts'), 'amod'), (('parts', 'detecting'), 'obl'), (('of', 'array'), 'case'), (('the', 'array'), 'det'), (('array', 'parts'), 'nmod'), (('.', 'appear'), 'punct')]

 Named Entites are: 
>> [('one', 'CARDINAL')]

------------------- Sentence 5 -------------------

 Mathemati- cally, the filtering operation performed by a feature map is a discrete  convolution, hence the name. 

Tokens are: 
>> ['Mathemati', '-', 'cally', ',', 'the', 'filtering', 'operation', 'performed', 'by', 'a', 'feature', 'map', 'is', 'a', 'discrete', 'convolution', ',', 'hence', 'the', 'name', '.'] 

 UPOS tags are: 
>> [('Mathemati', 'PROPN'), ('-', 'PUNCT'), ('cally', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('filtering', 'NOUN'), ('operation', 'NOUN'), ('performed', 'VERB'), ('by', 'ADP'), ('a', 'DET'), ('feature', 'NOUN'), ('map', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('discrete', 'ADJ'), ('convolution', 'NOUN'), (',', 'PUNCT'), ('hence', 'ADV'), ('the', 'DET'), ('name', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Mathemati', 'NNP'), ('-', 'HYPH'), ('cally', 'NN'), (',', ','), ('the', 'DT'), ('filtering', 'NN'), ('operation', 'NN'), ('performed', 'VBN'), ('by', 'IN'), ('a', 'DT'), ('feature', 'NN'), ('map', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('discrete', 'JJ'), ('convolution', 'NN'), (',', ','), ('hence', 'RB'), ('the', 'DT'), ('name', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Mathemati', 'Mathemati'), ('-', '-'), ('cally', 'cally'), (',', ','), ('the', 'the'), ('filtering', 'filter'), ('operation', 'operation'), ('performed', 'perform'), ('by', 'by'), ('a', 'a'), ('feature', 'feature'), ('map', 'map'), ('is', 'be'), ('a', 'a'), ('discrete', 'discrete'), ('convolution', 'convolution'), (',', ','), ('hence', 'hence'), ('the', 'the'), ('name', 'name'), ('.', '.')] 

 Dependency tags are: 
>> [(('Mathemati', 'convolution'), 'nsubj'), (('-', 'Mathemati'), 'punct'), (('cally', 'Mathemati'), 'flat'), ((',', 'convolution'), 'punct'), (('the', 'operation'), 'det'), (('filtering', 'operation'), 'amod'), (('operation', 'convolution'), 'nsubj'), (('performed', 'operation'), 'acl'), (('by', 'map'), 'case'), (('a', 'map'), 'det'), (('feature', 'map'), 'compound'), (('map', 'performed'), 'obl'), (('is', 'convolution'), 'cop'), (('a', 'convolution'), 'det'), (('discrete', 'convolution'), 'amod'), (('convolution', 'root'), 'root'), ((',', 'convolution'), 'punct'), (('hence', 'name'), 'advmod'), (('the', 'name'), 'det'), (('name', 'convolution'), 'appos'), (('.', 'convolution'), 'punct')]

 Named Entites are: 
>> [('Mathemati- cally', 'ORG')]

================================ Paragraph 120 =================================

Although the role of the convolutional layer is to detect local con- junctions of features from the previous layer, the role of the pooling  layer is to merge semantically similar features into one. Because the  relative positions of the features forming a motif can vary somewhat,  reliably detecting the motif can be done by coarse-graining the posi- tion of each feature. A typical pooling unit computes the maximum  of a local patch of units in one feature map (or in a few feature maps).  Neighbouring pooling units take input from patches that are shifted  by more than one row or column, thereby reducing the dimension of  the representation and creating an invariance to small shifts and dis- tortions. Two or three stages of convolution, non-linearity and pool- ing are stacked, followed by more convolutional and fully-connected  layers. Backpropagating gradients through a ConvNet is as simple as  through a regular deep network, allowing all the weights in all the  filter banks to be trained.  


------------------- Sentence 1 -------------------

 Although the role of the convolutional layer is to detect local con- junctions of features from the previous layer, the role of the pooling  layer is to merge semantically similar features into one. 

Tokens are: 
>> ['Although', 'the', 'role', 'of', 'the', 'convolutional', 'layer', 'is', 'to', 'detect', 'local', 'con', '-', 'junctions', 'of', 'features', 'from', 'the', 'previous', 'layer', ',', 'the', 'role', 'of', 'the', 'pooling', 'layer', 'is', 'to', 'merge', 'semantically', 'similar', 'features', 'into', 'one', '.'] 

 UPOS tags are: 
>> [('Although', 'SCONJ'), ('the', 'DET'), ('role', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('convolutional', 'ADJ'), ('layer', 'NOUN'), ('is', 'VERB'), ('to', 'PART'), ('detect', 'VERB'), ('local', 'ADJ'), ('con', 'NOUN'), ('-', 'PUNCT'), ('junctions', 'NOUN'), ('of', 'ADP'), ('features', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('previous', 'ADJ'), ('layer', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('role', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('pooling', 'NOUN'), ('layer', 'NOUN'), ('is', 'VERB'), ('to', 'PART'), ('merge', 'VERB'), ('semantically', 'ADV'), ('similar', 'ADJ'), ('features', 'NOUN'), ('into', 'ADP'), ('one', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Although', 'IN'), ('the', 'DT'), ('role', 'NN'), ('of', 'IN'), ('the', 'DT'), ('convolutional', 'JJ'), ('layer', 'NN'), ('is', 'VBZ'), ('to', 'TO'), ('detect', 'VB'), ('local', 'JJ'), ('con', 'NN'), ('-', 'HYPH'), ('junctions', 'NNS'), ('of', 'IN'), ('features', 'NNS'), ('from', 'IN'), ('the', 'DT'), ('previous', 'JJ'), ('layer', 'NN'), (',', ','), ('the', 'DT'), ('role', 'NN'), ('of', 'IN'), ('the', 'DT'), ('pooling', 'NN'), ('layer', 'NN'), ('is', 'VBZ'), ('to', 'TO'), ('merge', 'VB'), ('semantically', 'RB'), ('similar', 'JJ'), ('features', 'NNS'), ('into', 'IN'), ('one', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('Although', 'although'), ('the', 'the'), ('role', 'role'), ('of', 'of'), ('the', 'the'), ('convolutional', 'convolutional'), ('layer', 'layer'), ('is', 'be'), ('to', 'to'), ('detect', 'detect'), ('local', 'local'), ('con', 'con'), ('-', '-'), ('junctions', 'junction'), ('of', 'of'), ('features', 'feature'), ('from', 'from'), ('the', 'the'), ('previous', 'previous'), ('layer', 'layer'), (',', ','), ('the', 'the'), ('role', 'role'), ('of', 'of'), ('the', 'the'), ('pooling', 'pooling'), ('layer', 'layer'), ('is', 'be'), ('to', 'to'), ('merge', 'merge'), ('semantically', 'semantically'), ('similar', 'similar'), ('features', 'feature'), ('into', 'into'), ('one', 'one'), ('.', '.')] 

 Dependency tags are: 
>> [(('Although', 'detect'), 'mark'), (('the', 'role'), 'det'), (('role', 'detect'), 'nsubj'), (('of', 'layer'), 'case'), (('the', 'layer'), 'det'), (('convolutional', 'layer'), 'amod'), (('layer', 'role'), 'nmod'), (('is', 'merge'), 'advcl'), (('to', 'detect'), 'mark'), (('detect', 'merge'), 'advcl'), (('local', 'junctions'), 'amod'), (('con', 'junctions'), 'compound'), (('-', 'junctions'), 'punct'), (('junctions', 'detect'), 'obj'), (('of', 'features'), 'case'), (('features', 'junctions'), 'nmod'), (('from', 'layer'), 'case'), (('the', 'layer'), 'det'), (('previous', 'layer'), 'amod'), (('layer', 'detect'), 'obl'), ((',', 'is'), 'punct'), (('the', 'role'), 'det'), (('role', 'merge'), 'nsubj'), (('of', 'layer'), 'case'), (('the', 'layer'), 'det'), (('pooling', 'layer'), 'compound'), (('layer', 'role'), 'nmod'), (('is', 'merge'), 'cop'), (('to', 'merge'), 'mark'), (('merge', 'root'), 'root'), (('semantically', 'similar'), 'advmod'), (('similar', 'features'), 'amod'), (('features', 'merge'), 'obj'), (('into', 'one'), 'case'), (('one', 'merge'), 'obl'), (('.', 'merge'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Because the  relative positions of the features forming a motif can vary somewhat,  reliably detecting the motif can be done by coarse-graining the posi- tion of each feature. 

Tokens are: 
>> ['Because', 'the', 'relative', 'positions', 'of', 'the', 'features', 'forming', 'a', 'motif', 'can', 'vary', 'somewhat', ',', 'reliably', 'detecting', 'the', 'motif', 'can', 'be', 'done', 'by', 'coarse-', 'graining', 'the', 'posi-', 'tion', 'of', 'each', 'feature', '.'] 

 UPOS tags are: 
>> [('Because', 'SCONJ'), ('the', 'DET'), ('relative', 'ADJ'), ('positions', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('features', 'NOUN'), ('forming', 'VERB'), ('a', 'DET'), ('motif', 'NOUN'), ('can', 'AUX'), ('vary', 'VERB'), ('somewhat', 'ADV'), (',', 'PUNCT'), ('reliably', 'ADV'), ('detecting', 'VERB'), ('the', 'DET'), ('motif', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('done', 'VERB'), ('by', 'ADP'), ('coarse-', 'NOUN'), ('graining', 'VERB'), ('the', 'DET'), ('posi-', 'NOUN'), ('tion', 'NOUN'), ('of', 'ADP'), ('each', 'DET'), ('feature', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Because', 'IN'), ('the', 'DT'), ('relative', 'JJ'), ('positions', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('features', 'NNS'), ('forming', 'VBG'), ('a', 'DT'), ('motif', 'NN'), ('can', 'MD'), ('vary', 'VB'), ('somewhat', 'RB'), (',', ','), ('reliably', 'RB'), ('detecting', 'VBG'), ('the', 'DT'), ('motif', 'NN'), ('can', 'MD'), ('be', 'VB'), ('done', 'VBN'), ('by', 'IN'), ('coarse-', 'NN'), ('graining', 'VBG'), ('the', 'DT'), ('posi-', 'NN'), ('tion', 'NN'), ('of', 'IN'), ('each', 'DT'), ('feature', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Because', 'because'), ('the', 'the'), ('relative', 'relative'), ('positions', 'position'), ('of', 'of'), ('the', 'the'), ('features', 'feature'), ('forming', 'form'), ('a', 'a'), ('motif', 'motif'), ('can', 'can'), ('vary', 'vary'), ('somewhat', 'somewhat'), (',', ','), ('reliably', 'reliably'), ('detecting', 'detect'), ('the', 'the'), ('motif', 'motif'), ('can', 'can'), ('be', 'be'), ('done', 'do'), ('by', 'by'), ('coarse-', 'coarse-'), ('graining', 'grain'), ('the', 'the'), ('posi-', 'posi-'), ('tion', 'tion'), ('of', 'of'), ('each', 'each'), ('feature', 'feature'), ('.', '.')] 

 Dependency tags are: 
>> [(('Because', 'vary'), 'mark'), (('the', 'positions'), 'det'), (('relative', 'positions'), 'amod'), (('positions', 'vary'), 'nsubj'), (('of', 'features'), 'case'), (('the', 'features'), 'det'), (('features', 'positions'), 'nmod'), (('forming', 'features'), 'acl'), (('a', 'motif'), 'det'), (('motif', 'forming'), 'obj'), (('can', 'vary'), 'aux'), (('vary', 'done'), 'advcl'), (('somewhat', 'vary'), 'advmod'), ((',', 'vary'), 'punct'), (('reliably', 'detecting'), 'advmod'), (('detecting', 'vary'), 'advcl'), (('the', 'motif'), 'det'), (('motif', 'detecting'), 'obj'), (('can', 'done'), 'aux'), (('be', 'done'), 'aux:pass'), (('done', 'root'), 'root'), (('by', 'coarse-'), 'case'), (('coarse-', 'done'), 'obl'), (('graining', 'done'), 'advcl'), (('the', 'tion'), 'det'), (('posi-', 'tion'), 'compound'), (('tion', 'graining'), 'obj'), (('of', 'feature'), 'case'), (('each', 'feature'), 'det'), (('feature', 'tion'), 'nmod'), (('.', 'done'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 A typical pooling unit computes the maximum  of a local patch of units in one feature map (or in a few feature maps). 

Tokens are: 
>> ['A', 'typical', 'pooling', 'unit', 'computes', 'the', 'maximum', 'of', 'a', 'local', 'patch', 'of', 'units', 'in', 'one', 'feature', 'map', '(', 'or', 'in', 'a', 'few', 'feature', 'maps', ')', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('typical', 'ADJ'), ('pooling', 'NOUN'), ('unit', 'NOUN'), ('computes', 'VERB'), ('the', 'DET'), ('maximum', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('local', 'ADJ'), ('patch', 'NOUN'), ('of', 'ADP'), ('units', 'NOUN'), ('in', 'ADP'), ('one', 'NUM'), ('feature', 'NOUN'), ('map', 'NOUN'), ('(', 'PUNCT'), ('or', 'CCONJ'), ('in', 'ADP'), ('a', 'DET'), ('few', 'ADJ'), ('feature', 'NOUN'), ('maps', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('typical', 'JJ'), ('pooling', 'NN'), ('unit', 'NN'), ('computes', 'VBZ'), ('the', 'DT'), ('maximum', 'NN'), ('of', 'IN'), ('a', 'DT'), ('local', 'JJ'), ('patch', 'NN'), ('of', 'IN'), ('units', 'NNS'), ('in', 'IN'), ('one', 'CD'), ('feature', 'NN'), ('map', 'NN'), ('(', '-LRB-'), ('or', 'CC'), ('in', 'IN'), ('a', 'DT'), ('few', 'JJ'), ('feature', 'NN'), ('maps', 'NNS'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('typical', 'typical'), ('pooling', 'pooling'), ('unit', 'unit'), ('computes', 'compute'), ('the', 'the'), ('maximum', 'maximum'), ('of', 'of'), ('a', 'a'), ('local', 'local'), ('patch', 'patch'), ('of', 'of'), ('units', 'unit'), ('in', 'in'), ('one', 'one'), ('feature', 'feature'), ('map', 'map'), ('(', '('), ('or', 'or'), ('in', 'in'), ('a', 'a'), ('few', 'few'), ('feature', 'feature'), ('maps', 'map'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'unit'), 'det'), (('typical', 'unit'), 'amod'), (('pooling', 'unit'), 'compound'), (('unit', 'computes'), 'nsubj'), (('computes', 'root'), 'root'), (('the', 'maximum'), 'det'), (('maximum', 'computes'), 'obj'), (('of', 'patch'), 'case'), (('a', 'patch'), 'det'), (('local', 'patch'), 'amod'), (('patch', 'maximum'), 'nmod'), (('of', 'units'), 'case'), (('units', 'patch'), 'nmod'), (('in', 'map'), 'case'), (('one', 'map'), 'nummod'), (('feature', 'map'), 'compound'), (('map', 'patch'), 'nmod'), (('(', 'maps'), 'punct'), (('or', 'maps'), 'cc'), (('in', 'maps'), 'case'), (('a', 'maps'), 'det'), (('few', 'maps'), 'amod'), (('feature', 'maps'), 'compound'), (('maps', 'map'), 'conj'), ((')', 'maps'), 'punct'), (('.', 'computes'), 'punct')]

 Named Entites are: 
>> [('one', 'CARDINAL')]

------------------- Sentence 4 -------------------

 Neighbouring pooling units take input from patches that are shifted  by more than one row or column, thereby reducing the dimension of  the representation and creating an invariance to small shifts and dis- tortions. 

Tokens are: 
>> ['Neighbouring', 'pooling', 'units', 'take', 'input', 'from', 'patches', 'that', 'are', 'shifted', 'by', 'more', 'than', 'one', 'row', 'or', 'column', ',', 'thereby', 'reducing', 'the', 'dimension', 'of', 'the', 'representation', 'and', 'creating', 'an', 'invariance', 'to', 'small', 'shifts', 'and', 'dis', '-', 'tortions', '.'] 

 UPOS tags are: 
>> [('Neighbouring', 'VERB'), ('pooling', 'NOUN'), ('units', 'NOUN'), ('take', 'VERB'), ('input', 'NOUN'), ('from', 'ADP'), ('patches', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('shifted', 'VERB'), ('by', 'ADP'), ('more', 'ADJ'), ('than', 'ADP'), ('one', 'NUM'), ('row', 'NOUN'), ('or', 'CCONJ'), ('column', 'NOUN'), (',', 'PUNCT'), ('thereby', 'ADV'), ('reducing', 'VERB'), ('the', 'DET'), ('dimension', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('representation', 'NOUN'), ('and', 'CCONJ'), ('creating', 'VERB'), ('an', 'DET'), ('invariance', 'NOUN'), ('to', 'ADP'), ('small', 'ADJ'), ('shifts', 'NOUN'), ('and', 'CCONJ'), ('dis', 'NOUN'), ('-', 'PUNCT'), ('tortions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Neighbouring', 'VBG'), ('pooling', 'NN'), ('units', 'NNS'), ('take', 'VBP'), ('input', 'NN'), ('from', 'IN'), ('patches', 'NNS'), ('that', 'WDT'), ('are', 'VBP'), ('shifted', 'VBN'), ('by', 'IN'), ('more', 'JJR'), ('than', 'IN'), ('one', 'CD'), ('row', 'NN'), ('or', 'CC'), ('column', 'NN'), (',', ','), ('thereby', 'RB'), ('reducing', 'VBG'), ('the', 'DT'), ('dimension', 'NN'), ('of', 'IN'), ('the', 'DT'), ('representation', 'NN'), ('and', 'CC'), ('creating', 'VBG'), ('an', 'DT'), ('invariance', 'NN'), ('to', 'IN'), ('small', 'JJ'), ('shifts', 'NNS'), ('and', 'CC'), ('dis', 'NN'), ('-', 'HYPH'), ('tortions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Neighbouring', 'neighbour'), ('pooling', 'pooling'), ('units', 'unit'), ('take', 'take'), ('input', 'input'), ('from', 'from'), ('patches', 'patch'), ('that', 'that'), ('are', 'be'), ('shifted', 'shift'), ('by', 'by'), ('more', 'more'), ('than', 'than'), ('one', 'one'), ('row', 'row'), ('or', 'or'), ('column', 'column'), (',', ','), ('thereby', 'thereby'), ('reducing', 'reduce'), ('the', 'the'), ('dimension', 'dimension'), ('of', 'of'), ('the', 'the'), ('representation', 'representation'), ('and', 'and'), ('creating', 'create'), ('an', 'a'), ('invariance', 'invariance'), ('to', 'to'), ('small', 'small'), ('shifts', 'shift'), ('and', 'and'), ('dis', 'dis'), ('-', '-'), ('tortions', 'tortion'), ('.', '.')] 

 Dependency tags are: 
>> [(('Neighbouring', 'units'), 'amod'), (('pooling', 'units'), 'compound'), (('units', 'take'), 'nsubj'), (('take', 'root'), 'root'), (('input', 'take'), 'obj'), (('from', 'patches'), 'case'), (('patches', 'take'), 'obl'), (('that', 'shifted'), 'nsubj:pass'), (('are', 'shifted'), 'aux:pass'), (('shifted', 'patches'), 'acl:relcl'), (('by', 'row'), 'case'), (('more', 'one'), 'advmod'), (('than', 'more'), 'fixed'), (('one', 'row'), 'nummod'), (('row', 'shifted'), 'obl'), (('or', 'column'), 'cc'), (('column', 'row'), 'conj'), ((',', 'reducing'), 'punct'), (('thereby', 'reducing'), 'advmod'), (('reducing', 'shifted'), 'advcl'), (('the', 'dimension'), 'det'), (('dimension', 'reducing'), 'obj'), (('of', 'representation'), 'case'), (('the', 'representation'), 'det'), (('representation', 'dimension'), 'nmod'), (('and', 'creating'), 'cc'), (('creating', 'reducing'), 'conj'), (('an', 'invariance'), 'det'), (('invariance', 'creating'), 'obj'), (('to', 'shifts'), 'case'), (('small', 'shifts'), 'amod'), (('shifts', 'invariance'), 'nmod'), (('and', 'tortions'), 'cc'), (('dis', 'tortions'), 'compound'), (('-', 'tortions'), 'punct'), (('tortions', 'shifts'), 'conj'), (('.', 'take'), 'punct')]

 Named Entites are: 
>> [('more than one', 'CARDINAL')]

------------------- Sentence 5 -------------------

 Two or three stages of convolution, non-linearity and pool- ing are stacked, followed by more convolutional and fully-connected  layers. 

Tokens are: 
>> ['Two', 'or', 'three', 'stages', 'of', 'convolution', ',', 'non-linearity', 'and', 'pool', '-', 'ing', 'are', 'stacked', ',', 'followed', 'by', 'more', 'convolutional', 'and', 'fully', '-', 'connected', 'layers', '.'] 

 UPOS tags are: 
>> [('Two', 'NUM'), ('or', 'CCONJ'), ('three', 'NUM'), ('stages', 'NOUN'), ('of', 'ADP'), ('convolution', 'NOUN'), (',', 'PUNCT'), ('non-linearity', 'ADJ'), ('and', 'CCONJ'), ('pool', 'NOUN'), ('-', 'PUNCT'), ('ing', 'NOUN'), ('are', 'AUX'), ('stacked', 'VERB'), (',', 'PUNCT'), ('followed', 'VERB'), ('by', 'ADP'), ('more', 'ADV'), ('convolutional', 'ADJ'), ('and', 'CCONJ'), ('fully', 'ADV'), ('-', 'PUNCT'), ('connected', 'VERB'), ('layers', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Two', 'CD'), ('or', 'CC'), ('three', 'CD'), ('stages', 'NNS'), ('of', 'IN'), ('convolution', 'NN'), (',', ','), ('non-linearity', 'JJ'), ('and', 'CC'), ('pool', 'NN'), ('-', 'HYPH'), ('ing', 'NN'), ('are', 'VBP'), ('stacked', 'VBN'), (',', ','), ('followed', 'VBN'), ('by', 'IN'), ('more', 'RBR'), ('convolutional', 'JJ'), ('and', 'CC'), ('fully', 'RB'), ('-', 'HYPH'), ('connected', 'VBN'), ('layers', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Two', 'two'), ('or', 'or'), ('three', 'three'), ('stages', 'stage'), ('of', 'of'), ('convolution', 'convolution'), (',', ','), ('non-linearity', 'non-linearity'), ('and', 'and'), ('pool', 'pool'), ('-', '-'), ('ing', 'ing'), ('are', 'be'), ('stacked', 'stack'), (',', ','), ('followed', 'follow'), ('by', 'by'), ('more', 'more'), ('convolutional', 'convolutional'), ('and', 'and'), ('fully', 'fully'), ('-', '-'), ('connected', 'connect'), ('layers', 'layer'), ('.', '.')] 

 Dependency tags are: 
>> [(('Two', 'stages'), 'nummod'), (('or', 'three'), 'cc'), (('three', 'Two'), 'conj'), (('stages', 'stacked'), 'nsubj:pass'), (('of', 'convolution'), 'case'), (('convolution', 'stages'), 'nmod'), ((',', 'non-linearity'), 'punct'), (('non-linearity', 'convolution'), 'conj'), (('and', 'ing'), 'cc'), (('pool', 'ing'), 'compound'), (('-', 'ing'), 'punct'), (('ing', 'convolution'), 'conj'), (('are', 'stacked'), 'aux:pass'), (('stacked', 'root'), 'root'), ((',', 'followed'), 'punct'), (('followed', 'stacked'), 'advcl'), (('by', 'layers'), 'case'), (('more', 'convolutional'), 'advmod'), (('convolutional', 'layers'), 'amod'), (('and', 'connected'), 'cc'), (('fully', 'connected'), 'advmod'), (('-', 'connected'), 'punct'), (('connected', 'convolutional'), 'conj'), (('layers', 'followed'), 'obl'), (('.', 'stacked'), 'punct')]

 Named Entites are: 
>> [('Two', 'CARDINAL'), ('three', 'CARDINAL')]

------------------- Sentence 6 -------------------

 Backpropagating gradients through a ConvNet is as simple as  through a regular deep network, allowing all the weights in all the  filter banks to be trained. 

Tokens are: 
>> ['Backpropagating', 'gradients', 'through', 'a', 'ConvNet', 'is', 'as', 'simple', 'as', 'through', 'a', 'regular', 'deep', 'network', ',', 'allowing', 'all', 'the', 'weights', 'in', 'all', 'the', 'filter', 'banks', 'to', 'be', 'trained', '.'] 

 UPOS tags are: 
>> [('Backpropagating', 'VERB'), ('gradients', 'NOUN'), ('through', 'ADP'), ('a', 'DET'), ('ConvNet', 'PROPN'), ('is', 'AUX'), ('as', 'ADV'), ('simple', 'ADJ'), ('as', 'ADP'), ('through', 'ADP'), ('a', 'DET'), ('regular', 'ADJ'), ('deep', 'ADJ'), ('network', 'NOUN'), (',', 'PUNCT'), ('allowing', 'VERB'), ('all', 'DET'), ('the', 'DET'), ('weights', 'NOUN'), ('in', 'ADP'), ('all', 'DET'), ('the', 'DET'), ('filter', 'NOUN'), ('banks', 'NOUN'), ('to', 'PART'), ('be', 'AUX'), ('trained', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Backpropagating', 'VBG'), ('gradients', 'NNS'), ('through', 'IN'), ('a', 'DT'), ('ConvNet', 'NNP'), ('is', 'VBZ'), ('as', 'RB'), ('simple', 'JJ'), ('as', 'IN'), ('through', 'IN'), ('a', 'DT'), ('regular', 'JJ'), ('deep', 'JJ'), ('network', 'NN'), (',', ','), ('allowing', 'VBG'), ('all', 'PDT'), ('the', 'DT'), ('weights', 'NNS'), ('in', 'IN'), ('all', 'PDT'), ('the', 'DT'), ('filter', 'NN'), ('banks', 'NNS'), ('to', 'TO'), ('be', 'VB'), ('trained', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('Backpropagating', 'backpropagate'), ('gradients', 'gradient'), ('through', 'through'), ('a', 'a'), ('ConvNet', 'ConvNet'), ('is', 'be'), ('as', 'as'), ('simple', 'simple'), ('as', 'as'), ('through', 'through'), ('a', 'a'), ('regular', 'regular'), ('deep', 'deep'), ('network', 'network'), (',', ','), ('allowing', 'allow'), ('all', 'all'), ('the', 'the'), ('weights', 'weight'), ('in', 'in'), ('all', 'all'), ('the', 'the'), ('filter', 'filter'), ('banks', 'bank'), ('to', 'to'), ('be', 'be'), ('trained', 'train'), ('.', '.')] 

 Dependency tags are: 
>> [(('Backpropagating', 'gradients'), 'amod'), (('gradients', 'simple'), 'nsubj'), (('through', 'ConvNet'), 'case'), (('a', 'ConvNet'), 'det'), (('ConvNet', 'gradients'), 'nmod'), (('is', 'simple'), 'cop'), (('as', 'simple'), 'advmod'), (('simple', 'root'), 'root'), (('as', 'network'), 'case'), (('through', 'network'), 'case'), (('a', 'network'), 'det'), (('regular', 'network'), 'amod'), (('deep', 'network'), 'amod'), (('network', 'simple'), 'obl'), ((',', 'allowing'), 'punct'), (('allowing', 'simple'), 'advcl'), (('all', 'weights'), 'det:predet'), (('the', 'weights'), 'det'), (('weights', 'allowing'), 'obj'), (('in', 'banks'), 'case'), (('all', 'banks'), 'det:predet'), (('the', 'banks'), 'det'), (('filter', 'banks'), 'compound'), (('banks', 'allowing'), 'obl'), (('to', 'trained'), 'mark'), (('be', 'trained'), 'aux:pass'), (('trained', 'banks'), 'acl'), (('.', 'simple'), 'punct')]

 Named Entites are: 
>> [('ConvNet', 'PRODUCT')]

================================ Paragraph 121 =================================

Deep neural networks exploit the property that many natural sig- nals are compositional hierarchies, in which higher-level features  are obtained by composing lower-level ones. In images, local combi- nations of edges form motifs, motifs assemble into parts, and parts  form objects. Similar hierarchies exist in speech and text from sounds  to phones, phonemes, syllables, words and sentences. The pooling  allows representations to vary very little when elements in the previ- ous layer vary in position and appearance.  


------------------- Sentence 1 -------------------

 Deep neural networks exploit the property that many natural sig- nals are compositional hierarchies, in which higher-level features  are obtained by composing lower-level ones. 

Tokens are: 
>> ['Deep', 'neural', 'networks', 'exploit', 'the', 'property', 'that', 'many', 'natural', 'sig', '-', 'nals', 'are', 'compositional', 'hierarchies', ',', 'in', 'which', 'higher', '-', 'level', 'features', 'are', 'obtained', 'by', 'composing', 'lower', '-', 'level', 'ones', '.'] 

 UPOS tags are: 
>> [('Deep', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('exploit', 'VERB'), ('the', 'DET'), ('property', 'NOUN'), ('that', 'SCONJ'), ('many', 'ADJ'), ('natural', 'ADJ'), ('sig', 'NOUN'), ('-', 'PUNCT'), ('nals', 'NOUN'), ('are', 'AUX'), ('compositional', 'ADJ'), ('hierarchies', 'NOUN'), (',', 'PUNCT'), ('in', 'ADP'), ('which', 'PRON'), ('higher', 'ADJ'), ('-', 'PUNCT'), ('level', 'NOUN'), ('features', 'NOUN'), ('are', 'AUX'), ('obtained', 'VERB'), ('by', 'SCONJ'), ('composing', 'VERB'), ('lower', 'ADJ'), ('-', 'PUNCT'), ('level', 'NOUN'), ('ones', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Deep', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), ('exploit', 'VBP'), ('the', 'DT'), ('property', 'NN'), ('that', 'IN'), ('many', 'JJ'), ('natural', 'JJ'), ('sig', 'NN'), ('-', 'HYPH'), ('nals', 'NNS'), ('are', 'VBP'), ('compositional', 'JJ'), ('hierarchies', 'NNS'), (',', ','), ('in', 'IN'), ('which', 'WDT'), ('higher', 'JJR'), ('-', 'HYPH'), ('level', 'NN'), ('features', 'NNS'), ('are', 'VBP'), ('obtained', 'VBN'), ('by', 'IN'), ('composing', 'VBG'), ('lower', 'JJR'), ('-', 'HYPH'), ('level', 'NN'), ('ones', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Deep', 'deep'), ('neural', 'neural'), ('networks', 'network'), ('exploit', 'exploit'), ('the', 'the'), ('property', 'property'), ('that', 'that'), ('many', 'many'), ('natural', 'natural'), ('sig', 'sig'), ('-', '-'), ('nals', 'nal'), ('are', 'be'), ('compositional', 'compositional'), ('hierarchies', 'hierarchy'), (',', ','), ('in', 'in'), ('which', 'which'), ('higher', 'high'), ('-', '-'), ('level', 'level'), ('features', 'feature'), ('are', 'be'), ('obtained', 'obtain'), ('by', 'by'), ('composing', 'compose'), ('lower', 'low'), ('-', '-'), ('level', 'level'), ('ones', 'one'), ('.', '.')] 

 Dependency tags are: 
>> [(('Deep', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'exploit'), 'nsubj'), (('exploit', 'root'), 'root'), (('the', 'property'), 'det'), (('property', 'exploit'), 'obj'), (('that', 'hierarchies'), 'mark'), (('many', 'nals'), 'amod'), (('natural', 'nals'), 'amod'), (('sig', 'nals'), 'compound'), (('-', 'nals'), 'punct'), (('nals', 'hierarchies'), 'nsubj'), (('are', 'hierarchies'), 'cop'), (('compositional', 'hierarchies'), 'amod'), (('hierarchies', 'property'), 'acl'), ((',', 'hierarchies'), 'punct'), (('in', 'which'), 'case'), (('which', 'obtained'), 'obl'), (('higher', 'level'), 'amod'), (('-', 'level'), 'punct'), (('level', 'features'), 'compound'), (('features', 'obtained'), 'nsubj:pass'), (('are', 'obtained'), 'aux:pass'), (('obtained', 'property'), 'acl:relcl'), (('by', 'composing'), 'mark'), (('composing', 'obtained'), 'advcl'), (('lower', 'level'), 'amod'), (('-', 'level'), 'punct'), (('level', 'ones'), 'compound'), (('ones', 'composing'), 'obj'), (('.', 'exploit'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 In images, local combi- nations of edges form motifs, motifs assemble into parts, and parts  form objects. 

Tokens are: 
>> ['In', 'images', ',', 'local', 'combi-', 'nations', 'of', 'edges', 'form', 'motifs', ',', 'motifs', 'assemble', 'into', 'parts', ',', 'and', 'parts', 'form', 'objects', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('images', 'NOUN'), (',', 'PUNCT'), ('local', 'ADJ'), ('combi-', 'ADJ'), ('nations', 'NOUN'), ('of', 'ADP'), ('edges', 'NOUN'), ('form', 'VERB'), ('motifs', 'NOUN'), (',', 'PUNCT'), ('motifs', 'NOUN'), ('assemble', 'VERB'), ('into', 'ADP'), ('parts', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('parts', 'NOUN'), ('form', 'NOUN'), ('objects', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('images', 'NNS'), (',', ','), ('local', 'JJ'), ('combi-', 'JJ'), ('nations', 'NNS'), ('of', 'IN'), ('edges', 'NNS'), ('form', 'VBP'), ('motifs', 'NNS'), (',', ','), ('motifs', 'NNS'), ('assemble', 'VBP'), ('into', 'IN'), ('parts', 'NNS'), (',', ','), ('and', 'CC'), ('parts', 'NNS'), ('form', 'NN'), ('objects', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('images', 'image'), (',', ','), ('local', 'local'), ('combi-', 'combi-'), ('nations', 'nation'), ('of', 'of'), ('edges', 'edge'), ('form', 'form'), ('motifs', 'motif'), (',', ','), ('motifs', 'motif'), ('assemble', 'assemble'), ('into', 'into'), ('parts', 'part'), (',', ','), ('and', 'and'), ('parts', 'part'), ('form', 'form'), ('objects', 'object'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'images'), 'case'), (('images', 'form'), 'obl'), ((',', 'form'), 'punct'), (('local', 'nations'), 'amod'), (('combi-', 'nations'), 'amod'), (('nations', 'form'), 'nsubj'), (('of', 'edges'), 'case'), (('edges', 'nations'), 'nmod'), (('form', 'root'), 'root'), (('motifs', 'form'), 'obj'), ((',', 'assemble'), 'punct'), (('motifs', 'assemble'), 'nsubj'), (('assemble', 'form'), 'conj'), (('into', 'parts'), 'case'), (('parts', 'assemble'), 'obl'), ((',', 'objects'), 'punct'), (('and', 'objects'), 'cc'), (('parts', 'objects'), 'compound'), (('form', 'objects'), 'compound'), (('objects', 'parts'), 'conj'), (('.', 'form'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Similar hierarchies exist in speech and text from sounds  to phones, phonemes, syllables, words and sentences. 

Tokens are: 
>> ['Similar', 'hierarchies', 'exist', 'in', 'speech', 'and', 'text', 'from', 'sounds', 'to', 'phones', ',', 'phonemes', ',', 'syllables', ',', 'words', 'and', 'sentences', '.'] 

 UPOS tags are: 
>> [('Similar', 'ADJ'), ('hierarchies', 'NOUN'), ('exist', 'VERB'), ('in', 'ADP'), ('speech', 'NOUN'), ('and', 'CCONJ'), ('text', 'VERB'), ('from', 'ADP'), ('sounds', 'NOUN'), ('to', 'ADP'), ('phones', 'NOUN'), (',', 'PUNCT'), ('phonemes', 'NOUN'), (',', 'PUNCT'), ('syllables', 'NOUN'), (',', 'PUNCT'), ('words', 'NOUN'), ('and', 'CCONJ'), ('sentences', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Similar', 'JJ'), ('hierarchies', 'NNS'), ('exist', 'VBP'), ('in', 'IN'), ('speech', 'NN'), ('and', 'CC'), ('text', 'VBP'), ('from', 'IN'), ('sounds', 'NNS'), ('to', 'IN'), ('phones', 'NNS'), (',', ','), ('phonemes', 'NNS'), (',', ','), ('syllables', 'NNS'), (',', ','), ('words', 'NNS'), ('and', 'CC'), ('sentences', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Similar', 'similar'), ('hierarchies', 'hierarchy'), ('exist', 'exist'), ('in', 'in'), ('speech', 'speech'), ('and', 'and'), ('text', 'text'), ('from', 'from'), ('sounds', 'sound'), ('to', 'to'), ('phones', 'phone'), (',', ','), ('phonemes', 'phoneme'), (',', ','), ('syllables', 'syllable'), (',', ','), ('words', 'word'), ('and', 'and'), ('sentences', 'sentence'), ('.', '.')] 

 Dependency tags are: 
>> [(('Similar', 'hierarchies'), 'amod'), (('hierarchies', 'exist'), 'nsubj'), (('exist', 'root'), 'root'), (('in', 'speech'), 'case'), (('speech', 'exist'), 'obl'), (('and', 'text'), 'cc'), (('text', 'exist'), 'conj'), (('from', 'sounds'), 'case'), (('sounds', 'text'), 'obl'), (('to', 'phones'), 'case'), (('phones', 'text'), 'obl'), ((',', 'phonemes'), 'punct'), (('phonemes', 'phones'), 'conj'), ((',', 'syllables'), 'punct'), (('syllables', 'phones'), 'conj'), ((',', 'words'), 'punct'), (('words', 'phones'), 'conj'), (('and', 'sentences'), 'cc'), (('sentences', 'phones'), 'conj'), (('.', 'exist'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 The pooling  allows representations to vary very little when elements in the previ- ous layer vary in position and appearance. 

Tokens are: 
>> ['The', 'pooling', 'allows', 'representations', 'to', 'vary', 'very', 'little', 'when', 'elements', 'in', 'the', 'previ-', 'ous', 'layer', 'vary', 'in', 'position', 'and', 'appearance', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('pooling', 'NOUN'), ('allows', 'VERB'), ('representations', 'NOUN'), ('to', 'PART'), ('vary', 'VERB'), ('very', 'ADV'), ('little', 'ADJ'), ('when', 'SCONJ'), ('elements', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('previ-', 'ADJ'), ('ous', 'NOUN'), ('layer', 'NOUN'), ('vary', 'VERB'), ('in', 'ADP'), ('position', 'NOUN'), ('and', 'CCONJ'), ('appearance', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('pooling', 'NN'), ('allows', 'VBZ'), ('representations', 'NNS'), ('to', 'TO'), ('vary', 'VB'), ('very', 'RB'), ('little', 'JJ'), ('when', 'WRB'), ('elements', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('previ-', 'JJ'), ('ous', 'NN'), ('layer', 'NN'), ('vary', 'VBP'), ('in', 'IN'), ('position', 'NN'), ('and', 'CC'), ('appearance', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('pooling', 'pooling'), ('allows', 'allow'), ('representations', 'representation'), ('to', 'to'), ('vary', 'vary'), ('very', 'very'), ('little', 'little'), ('when', 'when'), ('elements', 'element'), ('in', 'in'), ('the', 'the'), ('previ-', 'previ-'), ('ous', 'ous'), ('layer', 'layer'), ('vary', 'vary'), ('in', 'in'), ('position', 'position'), ('and', 'and'), ('appearance', 'appearance'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'pooling'), 'det'), (('pooling', 'allows'), 'nsubj'), (('allows', 'root'), 'root'), (('representations', 'allows'), 'obj'), (('to', 'vary'), 'mark'), (('vary', 'representations'), 'acl'), (('very', 'little'), 'advmod'), (('little', 'vary'), 'obj'), (('when', 'vary'), 'mark'), (('elements', 'vary'), 'nsubj'), (('in', 'layer'), 'case'), (('the', 'layer'), 'det'), (('previ-', 'layer'), 'amod'), (('ous', 'layer'), 'compound'), (('layer', 'elements'), 'nmod'), (('vary', 'vary'), 'advcl'), (('in', 'position'), 'case'), (('position', 'vary'), 'obl'), (('and', 'appearance'), 'cc'), (('appearance', 'position'), 'conj'), (('.', 'allows'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 122 =================================

The convolutional and pooling layers in ConvNets are directly  inspired by the classic notions of simple cells and complex cells in  visual neuroscience43, and the overall architecture is reminiscent of  the LGN–V1–V2–V4–IT hierarchy in the visual cortex ventral path- way44. When ConvNet models and monkeys are shown the same pic- ture, the activations of high-level units in the ConvNet explains half  of the variance of random sets of 160 neurons in the monkey’s infer- otemporal cortex45. ConvNets have their roots in the neocognitron46,  the architecture of which was somewhat similar, but did not have an  end-to-end supervised-learning algorithm such as backpropagation.  A primitive 1D ConvNet called a time-delay neural net was used for  the recognition of phonemes and simple words47,48.  


------------------- Sentence 1 -------------------

 The convolutional and pooling layers in ConvNets are directly  inspired by the classic notions of simple cells and complex cells in  visual neuroscience43, and the overall architecture is reminiscent of  the LGN–V1–V2–V4– 

Tokens are: 
>> ['The', 'convolutional', 'and', 'pooling', 'layers', 'in', 'ConvNets', 'are', 'directly', 'inspired', 'by', 'the', 'classic', 'notions', 'of', 'simple', 'cells', 'and', 'complex', 'cells', 'in', 'visual', 'neuroscience', '43', ',', 'and', 'the', 'overall', 'architecture', 'is', 'reminiscent', 'of', 'the', 'LGN–V1–V2–V4', '–'] 

 UPOS tags are: 
>> [('The', 'DET'), ('convolutional', 'ADJ'), ('and', 'CCONJ'), ('pooling', 'NOUN'), ('layers', 'NOUN'), ('in', 'ADP'), ('ConvNets', 'PROPN'), ('are', 'AUX'), ('directly', 'ADV'), ('inspired', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('classic', 'ADJ'), ('notions', 'NOUN'), ('of', 'ADP'), ('simple', 'ADJ'), ('cells', 'NOUN'), ('and', 'CCONJ'), ('complex', 'ADJ'), ('cells', 'NOUN'), ('in', 'ADP'), ('visual', 'ADJ'), ('neuroscience', 'NOUN'), ('43', 'NUM'), (',', 'PUNCT'), ('and', 'CCONJ'), ('the', 'DET'), ('overall', 'ADJ'), ('architecture', 'NOUN'), ('is', 'AUX'), ('reminiscent', 'ADJ'), ('of', 'ADP'), ('the', 'DET'), ('LGN–V1–V2–V4', 'PROPN'), ('–', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('convolutional', 'JJ'), ('and', 'CC'), ('pooling', 'NN'), ('layers', 'NNS'), ('in', 'IN'), ('ConvNets', 'NNPS'), ('are', 'VBP'), ('directly', 'RB'), ('inspired', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('classic', 'JJ'), ('notions', 'NNS'), ('of', 'IN'), ('simple', 'JJ'), ('cells', 'NNS'), ('and', 'CC'), ('complex', 'JJ'), ('cells', 'NNS'), ('in', 'IN'), ('visual', 'JJ'), ('neuroscience', 'NN'), ('43', 'CD'), (',', ','), ('and', 'CC'), ('the', 'DT'), ('overall', 'JJ'), ('architecture', 'NN'), ('is', 'VBZ'), ('reminiscent', 'JJ'), ('of', 'IN'), ('the', 'DT'), ('LGN–V1–V2–V4', 'NNP'), ('–', ':')] 

 Lemmas are: 
>> [('The', 'the'), ('convolutional', 'convolutional'), ('and', 'and'), ('pooling', 'pooling'), ('layers', 'layer'), ('in', 'in'), ('ConvNets', 'Convnet'), ('are', 'be'), ('directly', 'directly'), ('inspired', 'inspire'), ('by', 'by'), ('the', 'the'), ('classic', 'classic'), ('notions', 'notion'), ('of', 'of'), ('simple', 'simple'), ('cells', 'cell'), ('and', 'and'), ('complex', 'complex'), ('cells', 'cell'), ('in', 'in'), ('visual', 'visual'), ('neuroscience', 'neuroscience'), ('43', '43'), (',', ','), ('and', 'and'), ('the', 'the'), ('overall', 'overall'), ('architecture', 'architecture'), ('is', 'be'), ('reminiscent', 'reminiscent'), ('of', 'of'), ('the', 'the'), ('LGN–V1–V2–V4', 'LGN–V1–V2–V4'), ('–', '-')] 

 Dependency tags are: 
>> [(('The', 'layers'), 'det'), (('convolutional', 'layers'), 'amod'), (('and', 'pooling'), 'cc'), (('pooling', 'convolutional'), 'conj'), (('layers', 'inspired'), 'nsubj:pass'), (('in', 'ConvNets'), 'case'), (('ConvNets', 'layers'), 'nmod'), (('are', 'inspired'), 'aux:pass'), (('directly', 'inspired'), 'advmod'), (('inspired', 'root'), 'root'), (('by', 'notions'), 'case'), (('the', 'notions'), 'det'), (('classic', 'notions'), 'amod'), (('notions', 'inspired'), 'obl'), (('of', 'cells'), 'case'), (('simple', 'cells'), 'amod'), (('cells', 'notions'), 'nmod'), (('and', 'cells'), 'cc'), (('complex', 'cells'), 'amod'), (('cells', 'cells'), 'conj'), (('in', 'neuroscience'), 'case'), (('visual', 'neuroscience'), 'amod'), (('neuroscience', 'cells'), 'nmod'), (('43', 'neuroscience'), 'nummod'), ((',', 'reminiscent'), 'punct'), (('and', 'reminiscent'), 'cc'), (('the', 'architecture'), 'det'), (('overall', 'architecture'), 'amod'), (('architecture', 'reminiscent'), 'nsubj'), (('is', 'reminiscent'), 'cop'), (('reminiscent', 'inspired'), 'conj'), (('of', 'LGN–V1–V2–V4'), 'case'), (('the', 'LGN–V1–V2–V4'), 'det'), (('LGN–V1–V2–V4', 'reminiscent'), 'obl'), (('–', 'inspired'), 'punct')]

 Named Entites are: 
>> [('43', 'CARDINAL')]

------------------- Sentence 2 -------------------

 IT hierarchy in the visual cortex ventral path- way44. 

Tokens are: 
>> ['IT', 'hierarchy', 'in', 'the', 'visual', 'cortex', 'ventral', 'path', '-', 'way', '44', '.'] 

 UPOS tags are: 
>> [('IT', 'PRON'), ('hierarchy', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('visual', 'ADJ'), ('cortex', 'NOUN'), ('ventral', 'ADJ'), ('path', 'NOUN'), ('-', 'PUNCT'), ('way', 'NOUN'), ('44', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IT', 'PRP'), ('hierarchy', 'NN'), ('in', 'IN'), ('the', 'DT'), ('visual', 'JJ'), ('cortex', 'NN'), ('ventral', 'JJ'), ('path', 'NN'), ('-', 'HYPH'), ('way', 'NN'), ('44', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('IT', 'it'), ('hierarchy', 'hierarchy'), ('in', 'in'), ('the', 'the'), ('visual', 'visual'), ('cortex', 'cortex'), ('ventral', 'ventral'), ('path', 'path'), ('-', '-'), ('way', 'way'), ('44', '44'), ('.', '.')] 

 Dependency tags are: 
>> [(('IT', 'hierarchy'), 'nsubj'), (('hierarchy', 'root'), 'root'), (('in', 'way'), 'case'), (('the', 'way'), 'det'), (('visual', 'way'), 'amod'), (('cortex', 'way'), 'compound'), (('ventral', 'way'), 'amod'), (('path', 'way'), 'compound'), (('-', 'way'), 'punct'), (('way', 'hierarchy'), 'nmod'), (('44', 'way'), 'nummod'), (('.', 'hierarchy'), 'punct')]

 Named Entites are: 
>> [('44', 'CARDINAL')]

------------------- Sentence 3 -------------------

 When ConvNet models and monkeys are shown the same pic- ture, the activations of high-level units in the ConvNet explains half  of the variance of random sets of 160 neurons in the monkey’s infer- otemporal cortex45. 

Tokens are: 
>> ['When', 'ConvNet', 'models', 'and', 'monkeys', 'are', 'shown', 'the', 'same', 'pic-', 'ture', ',', 'the', 'activations', 'of', 'high', '-', 'level', 'units', 'in', 'the', 'ConvNet', 'explains', 'half', 'of', 'the', 'variance', 'of', 'random', 'sets', 'of', '160', 'neurons', 'in', 'the', 'monkey', '’s', 'infer-', 'otemporal', 'cortex', '45', '.'] 

 UPOS tags are: 
>> [('When', 'SCONJ'), ('ConvNet', 'PROPN'), ('models', 'NOUN'), ('and', 'CCONJ'), ('monkeys', 'NOUN'), ('are', 'AUX'), ('shown', 'VERB'), ('the', 'DET'), ('same', 'ADJ'), ('pic-', 'NOUN'), ('ture', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('activations', 'NOUN'), ('of', 'ADP'), ('high', 'ADJ'), ('-', 'PUNCT'), ('level', 'NOUN'), ('units', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('ConvNet', 'PROPN'), ('explains', 'VERB'), ('half', 'DET'), ('of', 'ADP'), ('the', 'DET'), ('variance', 'NOUN'), ('of', 'ADP'), ('random', 'ADJ'), ('sets', 'NOUN'), ('of', 'ADP'), ('160', 'NUM'), ('neurons', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('monkey', 'NOUN'), ('’s', 'PART'), ('infer-', 'ADJ'), ('otemporal', 'ADJ'), ('cortex', 'NOUN'), ('45', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('When', 'WRB'), ('ConvNet', 'NNP'), ('models', 'NNS'), ('and', 'CC'), ('monkeys', 'NNS'), ('are', 'VBP'), ('shown', 'VBN'), ('the', 'DT'), ('same', 'JJ'), ('pic-', 'NN'), ('ture', 'NN'), (',', ','), ('the', 'DT'), ('activations', 'NNS'), ('of', 'IN'), ('high', 'JJ'), ('-', 'HYPH'), ('level', 'NN'), ('units', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('ConvNet', 'NNP'), ('explains', 'VBZ'), ('half', 'DT'), ('of', 'IN'), ('the', 'DT'), ('variance', 'NN'), ('of', 'IN'), ('random', 'JJ'), ('sets', 'NNS'), ('of', 'IN'), ('160', 'CD'), ('neurons', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('monkey', 'NN'), ('’s', 'POS'), ('infer-', 'JJ'), ('otemporal', 'JJ'), ('cortex', 'NN'), ('45', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('When', 'when'), ('ConvNet', 'ConvNet'), ('models', 'model'), ('and', 'and'), ('monkeys', 'monkey'), ('are', 'be'), ('shown', 'show'), ('the', 'the'), ('same', 'same'), ('pic-', 'pic-'), ('ture', 'ture'), (',', ','), ('the', 'the'), ('activations', 'activation'), ('of', 'of'), ('high', 'high'), ('-', '-'), ('level', 'level'), ('units', 'unit'), ('in', 'in'), ('the', 'the'), ('ConvNet', 'ConvNet'), ('explains', 'explain'), ('half', 'half'), ('of', 'of'), ('the', 'the'), ('variance', 'variance'), ('of', 'of'), ('random', 'random'), ('sets', 'set'), ('of', 'of'), ('160', '160'), ('neurons', 'neuron'), ('in', 'in'), ('the', 'the'), ('monkey', 'monkey'), ('’s', "'s"), ('infer-', 'infer-'), ('otemporal', 'otemporal'), ('cortex', 'cortex'), ('45', '45'), ('.', '.')] 

 Dependency tags are: 
>> [(('When', 'shown'), 'mark'), (('ConvNet', 'models'), 'compound'), (('models', 'shown'), 'nsubj:pass'), (('and', 'monkeys'), 'cc'), (('monkeys', 'models'), 'conj'), (('are', 'shown'), 'aux:pass'), (('shown', 'explains'), 'advcl'), (('the', 'ture'), 'det'), (('same', 'ture'), 'amod'), (('pic-', 'ture'), 'compound'), (('ture', 'shown'), 'obj'), ((',', 'explains'), 'punct'), (('the', 'activations'), 'det'), (('activations', 'explains'), 'nsubj'), (('of', 'units'), 'case'), (('high', 'level'), 'amod'), (('-', 'level'), 'punct'), (('level', 'units'), 'compound'), (('units', 'activations'), 'nmod'), (('in', 'ConvNet'), 'case'), (('the', 'ConvNet'), 'det'), (('ConvNet', 'units'), 'nmod'), (('explains', 'root'), 'root'), (('half', 'explains'), 'obj'), (('of', 'variance'), 'case'), (('the', 'variance'), 'det'), (('variance', 'half'), 'nmod'), (('of', 'sets'), 'case'), (('random', 'sets'), 'amod'), (('sets', 'variance'), 'nmod'), (('of', 'neurons'), 'case'), (('160', 'neurons'), 'nummod'), (('neurons', 'sets'), 'nmod'), (('in', 'cortex'), 'case'), (('the', 'monkey'), 'det'), (('monkey', 'cortex'), 'nmod:poss'), (('’s', 'monkey'), 'case'), (('infer-', 'cortex'), 'amod'), (('otemporal', 'cortex'), 'amod'), (('cortex', 'neurons'), 'nmod'), (('45', 'cortex'), 'nummod'), (('.', 'explains'), 'punct')]

 Named Entites are: 
>> [('ConvNet', 'FAC'), ('half', 'CARDINAL'), ('160', 'CARDINAL'), ('45', 'CARDINAL')]

------------------- Sentence 4 -------------------

 ConvNets have their roots in the neocognitron46,  the architecture of which was somewhat similar, but did not have an  end-to-end supervised-learning algorithm such as backpropagation. 

Tokens are: 
>> ['ConvNets', 'have', 'their', 'roots', 'in', 'the', 'neocognitron46', ',', 'the', 'architecture', 'of', 'which', 'was', 'somewhat', 'similar', ',', 'but', 'did', 'not', 'have', 'an', 'end', '-', 'to', '-', 'end', 'supervised', '-', 'learning', 'algorithm', 'such', 'as', 'backpropagation', '.'] 

 UPOS tags are: 
>> [('ConvNets', 'PROPN'), ('have', 'VERB'), ('their', 'PRON'), ('roots', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('neocognitron46', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('architecture', 'NOUN'), ('of', 'ADP'), ('which', 'PRON'), ('was', 'AUX'), ('somewhat', 'ADV'), ('similar', 'ADJ'), (',', 'PUNCT'), ('but', 'CCONJ'), ('did', 'AUX'), ('not', 'PART'), ('have', 'VERB'), ('an', 'DET'), ('end', 'NOUN'), ('-', 'PUNCT'), ('to', 'ADP'), ('-', 'PUNCT'), ('end', 'NOUN'), ('supervised', 'VERB'), ('-', 'PUNCT'), ('learning', 'NOUN'), ('algorithm', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('backpropagation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('ConvNets', 'NNPS'), ('have', 'VBP'), ('their', 'PRP$'), ('roots', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('neocognitron46', 'NN'), (',', ','), ('the', 'DT'), ('architecture', 'NN'), ('of', 'IN'), ('which', 'WDT'), ('was', 'VBD'), ('somewhat', 'RB'), ('similar', 'JJ'), (',', ','), ('but', 'CC'), ('did', 'VBD'), ('not', 'RB'), ('have', 'VB'), ('an', 'DT'), ('end', 'NN'), ('-', 'HYPH'), ('to', 'IN'), ('-', 'HYPH'), ('end', 'NN'), ('supervised', 'VBN'), ('-', 'HYPH'), ('learning', 'NN'), ('algorithm', 'NN'), ('such', 'JJ'), ('as', 'IN'), ('backpropagation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('ConvNets', 'Convnet'), ('have', 'have'), ('their', 'they'), ('roots', 'root'), ('in', 'in'), ('the', 'the'), ('neocognitron46', 'neocognitron46'), (',', ','), ('the', 'the'), ('architecture', 'architecture'), ('of', 'of'), ('which', 'which'), ('was', 'be'), ('somewhat', 'somewhat'), ('similar', 'similar'), (',', ','), ('but', 'but'), ('did', 'do'), ('not', 'not'), ('have', 'have'), ('an', 'a'), ('end', 'end'), ('-', '-'), ('to', 'to'), ('-', '-'), ('end', 'end'), ('supervised', 'supervise'), ('-', '-'), ('learning', 'learning'), ('algorithm', 'algorithm'), ('such', 'such'), ('as', 'as'), ('backpropagation', 'backpropagation'), ('.', '.')] 

 Dependency tags are: 
>> [(('ConvNets', 'have'), 'nsubj'), (('have', 'root'), 'root'), (('their', 'roots'), 'nmod:poss'), (('roots', 'have'), 'obj'), (('in', 'neocognitron46'), 'case'), (('the', 'neocognitron46'), 'det'), (('neocognitron46', 'have'), 'obl'), ((',', 'similar'), 'punct'), (('the', 'architecture'), 'det'), (('architecture', 'similar'), 'nsubj'), (('of', 'which'), 'case'), (('which', 'architecture'), 'nmod'), (('was', 'similar'), 'cop'), (('somewhat', 'similar'), 'advmod'), (('similar', 'neocognitron46'), 'acl:relcl'), ((',', 'have'), 'punct'), (('but', 'have'), 'cc'), (('did', 'have'), 'aux'), (('not', 'have'), 'advmod'), (('have', 'have'), 'conj'), (('an', 'algorithm'), 'det'), (('end', 'algorithm'), 'compound'), (('-', 'end'), 'punct'), (('to', 'end'), 'case'), (('-', 'end'), 'punct'), (('end', 'end'), 'nmod'), (('supervised', 'learning'), 'amod'), (('-', 'learning'), 'punct'), (('learning', 'algorithm'), 'compound'), (('algorithm', 'have'), 'obj'), (('such', 'backpropagation'), 'case'), (('as', 'such'), 'fixed'), (('backpropagation', 'algorithm'), 'nmod'), (('.', 'have'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 A primitive 1D ConvNet called a time-delay neural net was used for  the recognition of phonemes and simple words47,48. 

Tokens are: 
>> ['A', 'primitive', '1D', 'ConvNet', 'called', 'a', 'time', '-', 'delay', 'neural', 'net', 'was', 'used', 'for', 'the', 'recognition', 'of', 'phonemes', 'and', 'simple', 'word', 's', '47,48.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('primitive', 'ADJ'), ('1D', 'PROPN'), ('ConvNet', 'PROPN'), ('called', 'VERB'), ('a', 'DET'), ('time', 'NOUN'), ('-', 'PUNCT'), ('delay', 'NOUN'), ('neural', 'ADJ'), ('net', 'NOUN'), ('was', 'AUX'), ('used', 'VERB'), ('for', 'ADP'), ('the', 'DET'), ('recognition', 'NOUN'), ('of', 'ADP'), ('phonemes', 'NOUN'), ('and', 'CCONJ'), ('simple', 'ADJ'), ('word', 'NOUN'), ('s', 'PART'), ('47,48.', 'NUM')] 

 XPOS tags are: 
>> [('A', 'DT'), ('primitive', 'JJ'), ('1D', 'NNP'), ('ConvNet', 'NNP'), ('called', 'VBD'), ('a', 'DT'), ('time', 'NN'), ('-', 'HYPH'), ('delay', 'NN'), ('neural', 'JJ'), ('net', 'NN'), ('was', 'VBD'), ('used', 'VBN'), ('for', 'IN'), ('the', 'DT'), ('recognition', 'NN'), ('of', 'IN'), ('phonemes', 'NNS'), ('and', 'CC'), ('simple', 'JJ'), ('word', 'NN'), ('s', 'POS'), ('47,48.', 'CD')] 

 Lemmas are: 
>> [('A', 'a'), ('primitive', 'primitive'), ('1D', '1D'), ('ConvNet', 'ConvNet'), ('called', 'call'), ('a', 'a'), ('time', 'time'), ('-', '-'), ('delay', 'delay'), ('neural', 'neural'), ('net', 'net'), ('was', 'be'), ('used', 'use'), ('for', 'for'), ('the', 'the'), ('recognition', 'recognition'), ('of', 'of'), ('phonemes', 'phoneme'), ('and', 'and'), ('simple', 'simple'), ('word', 'word'), ('s', "'s"), ('47,48.', '4748.')] 

 Dependency tags are: 
>> [(('A', 'ConvNet'), 'det'), (('primitive', 'ConvNet'), 'amod'), (('1D', 'ConvNet'), 'compound'), (('ConvNet', 'called'), 'nsubj'), (('called', 'root'), 'root'), (('a', 'net'), 'det'), (('time', 'delay'), 'compound'), (('-', 'delay'), 'punct'), (('delay', 'net'), 'compound'), (('neural', 'net'), 'amod'), (('net', 'used'), 'nsubj:pass'), (('was', 'used'), 'aux:pass'), (('used', 'called'), 'ccomp'), (('for', 'recognition'), 'case'), (('the', 'recognition'), 'det'), (('recognition', 'used'), 'obl'), (('of', 'phonemes'), 'case'), (('phonemes', 'recognition'), 'nmod'), (('and', 'word'), 'cc'), (('simple', 'word'), 'amod'), (('word', '47,48.'), 'nmod:poss'), (('s', 'word'), 'case'), (('47,48.', 'phonemes'), 'conj')]

 Named Entites are: 
>> [('ConvNet', 'PRODUCT')]

================================ Paragraph 123 =================================

There have been numerous applications of convolutional net- works going back to the early 1990s, starting with time-delay neu- ral networks for speech recognition47 and document reading42. The  document reading system used a ConvNet trained jointly with a  probabilistic model that implemented language constraints. By the  late 1990s this system was reading over 10% of all the cheques in the  United States. A number of ConvNet-based optical character recog- nition and handwriting recognition systems were later deployed by  Microsoft49. ConvNets were also experimented with in the early 1990s  for object detection in natural images, including faces and hands50,51,  and for face recognition52.  


------------------- Sentence 1 -------------------

 There have been numerous applications of convolutional net- works going back to the early 1990s, starting with time-delay neu- ral networks for speech recognition47 and document reading42. 

Tokens are: 
>> ['There', 'have', 'been', 'numerous', 'applications', 'of', 'convolutional', 'net', '-', 'works', 'going', 'back', 'to', 'the', 'early', '1990s', ',', 'starting', 'with', 'time', '-', 'delay', 'neu-', 'ral', 'networks', 'for', 'speech', 'recognition', '47', 'and', 'document', 'reading', '42', '.'] 

 UPOS tags are: 
>> [('There', 'PRON'), ('have', 'AUX'), ('been', 'VERB'), ('numerous', 'ADJ'), ('applications', 'NOUN'), ('of', 'ADP'), ('convolutional', 'ADJ'), ('net', 'NOUN'), ('-', 'PUNCT'), ('works', 'NOUN'), ('going', 'VERB'), ('back', 'ADV'), ('to', 'ADP'), ('the', 'DET'), ('early', 'ADJ'), ('1990s', 'NOUN'), (',', 'PUNCT'), ('starting', 'VERB'), ('with', 'ADP'), ('time', 'NOUN'), ('-', 'PUNCT'), ('delay', 'VERB'), ('neu-', 'PROPN'), ('ral', 'NOUN'), ('networks', 'NOUN'), ('for', 'ADP'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('47', 'NUM'), ('and', 'CCONJ'), ('document', 'NOUN'), ('reading', 'VERB'), ('42', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('There', 'EX'), ('have', 'VBP'), ('been', 'VBN'), ('numerous', 'JJ'), ('applications', 'NNS'), ('of', 'IN'), ('convolutional', 'JJ'), ('net', 'NN'), ('-', 'HYPH'), ('works', 'NNS'), ('going', 'VBG'), ('back', 'RB'), ('to', 'IN'), ('the', 'DT'), ('early', 'JJ'), ('1990s', 'NNS'), (',', ','), ('starting', 'VBG'), ('with', 'IN'), ('time', 'NN'), ('-', 'HYPH'), ('delay', 'VB'), ('neu-', 'NNP'), ('ral', 'NN'), ('networks', 'NNS'), ('for', 'IN'), ('speech', 'NN'), ('recognition', 'NN'), ('47', 'CD'), ('and', 'CC'), ('document', 'NN'), ('reading', 'VBG'), ('42', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('There', 'there'), ('have', 'have'), ('been', 'be'), ('numerous', 'numerous'), ('applications', 'application'), ('of', 'of'), ('convolutional', 'convolutional'), ('net', 'net'), ('-', '-'), ('works', 'work'), ('going', 'go'), ('back', 'back'), ('to', 'to'), ('the', 'the'), ('early', 'early'), ('1990s', '1990'), (',', ','), ('starting', 'start'), ('with', 'with'), ('time', 'time'), ('-', '-'), ('delay', 'delay'), ('neu-', 'neu-'), ('ral', 'ral'), ('networks', 'network'), ('for', 'for'), ('speech', 'speech'), ('recognition', 'recognition'), ('47', '47'), ('and', 'and'), ('document', 'document'), ('reading', 'read'), ('42', '42'), ('.', '.')] 

 Dependency tags are: 
>> [(('There', 'been'), 'expl'), (('have', 'been'), 'aux'), (('been', 'root'), 'root'), (('numerous', 'applications'), 'amod'), (('applications', 'been'), 'nsubj'), (('of', 'works'), 'case'), (('convolutional', 'works'), 'amod'), (('net', 'works'), 'compound'), (('-', 'works'), 'punct'), (('works', 'applications'), 'nmod'), (('going', 'works'), 'acl'), (('back', 'going'), 'advmod'), (('to', '1990s'), 'case'), (('the', '1990s'), 'det'), (('early', '1990s'), 'amod'), (('1990s', 'going'), 'obl'), ((',', 'starting'), 'punct'), (('starting', 'going'), 'advcl'), (('with', 'delay'), 'mark'), (('time', 'delay'), 'compound'), (('-', 'delay'), 'punct'), (('delay', 'starting'), 'advcl'), (('neu-', 'networks'), 'compound'), (('ral', 'networks'), 'compound'), (('networks', 'delay'), 'obj'), (('for', 'recognition'), 'case'), (('speech', 'recognition'), 'compound'), (('recognition', 'networks'), 'nmod'), (('47', 'recognition'), 'nummod'), (('and', 'document'), 'cc'), (('document', 'recognition'), 'conj'), (('reading', 'recognition'), 'acl'), (('42', 'reading'), 'obj'), (('.', 'been'), 'punct')]

 Named Entites are: 
>> [('the early 1990s', 'DATE'), ('47', 'CARDINAL'), ('42', 'CARDINAL')]

------------------- Sentence 2 -------------------

 The  document reading system used a ConvNet trained jointly with a  probabilistic model that implemented language constraints. 

Tokens are: 
>> ['The', 'document', 'reading', 'system', 'used', 'a', 'ConvNet', 'trained', 'jointly', 'with', 'a', 'probabilistic', 'model', 'that', 'implemented', 'language', 'constraints', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('document', 'NOUN'), ('reading', 'NOUN'), ('system', 'NOUN'), ('used', 'VERB'), ('a', 'DET'), ('ConvNet', 'PROPN'), ('trained', 'VERB'), ('jointly', 'ADV'), ('with', 'ADP'), ('a', 'DET'), ('probabilistic', 'ADJ'), ('model', 'NOUN'), ('that', 'PRON'), ('implemented', 'VERB'), ('language', 'NOUN'), ('constraints', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('document', 'NN'), ('reading', 'NN'), ('system', 'NN'), ('used', 'VBD'), ('a', 'DT'), ('ConvNet', 'NNP'), ('trained', 'VBN'), ('jointly', 'RB'), ('with', 'IN'), ('a', 'DT'), ('probabilistic', 'JJ'), ('model', 'NN'), ('that', 'WDT'), ('implemented', 'VBD'), ('language', 'NN'), ('constraints', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('document', 'document'), ('reading', 'reading'), ('system', 'system'), ('used', 'use'), ('a', 'a'), ('ConvNet', 'ConvNet'), ('trained', 'train'), ('jointly', 'jointly'), ('with', 'with'), ('a', 'a'), ('probabilistic', 'probabilistic'), ('model', 'model'), ('that', 'that'), ('implemented', 'implement'), ('language', 'language'), ('constraints', 'constraint'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'system'), 'det'), (('document', 'reading'), 'compound'), (('reading', 'system'), 'compound'), (('system', 'used'), 'nsubj'), (('used', 'root'), 'root'), (('a', 'ConvNet'), 'det'), (('ConvNet', 'used'), 'obj'), (('trained', 'ConvNet'), 'acl'), (('jointly', 'trained'), 'advmod'), (('with', 'model'), 'case'), (('a', 'model'), 'det'), (('probabilistic', 'model'), 'amod'), (('model', 'trained'), 'obl'), (('that', 'implemented'), 'nsubj'), (('implemented', 'model'), 'acl:relcl'), (('language', 'constraints'), 'compound'), (('constraints', 'implemented'), 'obj'), (('.', 'used'), 'punct')]

 Named Entites are: 
>> [('ConvNet', 'ORG')]

------------------- Sentence 3 -------------------

 By the  late 1990s this system was reading over 10% of all the cheques in the  United States. 

Tokens are: 
>> ['By', 'the', 'late', '1990s', 'this', 'system', 'was', 'reading', 'over', '10', '%', 'of', 'all', 'the', 'cheques', 'in', 'the', 'United', 'States', '.'] 

 UPOS tags are: 
>> [('By', 'ADP'), ('the', 'DET'), ('late', 'ADJ'), ('1990s', 'NOUN'), ('this', 'DET'), ('system', 'NOUN'), ('was', 'AUX'), ('reading', 'VERB'), ('over', 'ADV'), ('10', 'NUM'), ('%', 'SYM'), ('of', 'ADP'), ('all', 'DET'), ('the', 'DET'), ('cheques', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('United', 'ADJ'), ('States', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('By', 'IN'), ('the', 'DT'), ('late', 'JJ'), ('1990s', 'NNS'), ('this', 'DT'), ('system', 'NN'), ('was', 'VBD'), ('reading', 'VBG'), ('over', 'RB'), ('10', 'CD'), ('%', 'NN'), ('of', 'IN'), ('all', 'PDT'), ('the', 'DT'), ('cheques', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('United', 'NNP'), ('States', 'NNPS'), ('.', '.')] 

 Lemmas are: 
>> [('By', 'by'), ('the', 'the'), ('late', 'late'), ('1990s', '1990'), ('this', 'this'), ('system', 'system'), ('was', 'be'), ('reading', 'read'), ('over', 'over'), ('10', '10'), ('%', '%'), ('of', 'of'), ('all', 'all'), ('the', 'the'), ('cheques', 'cheque'), ('in', 'in'), ('the', 'the'), ('United', 'United'), ('States', 'State'), ('.', '.')] 

 Dependency tags are: 
>> [(('By', '1990s'), 'case'), (('the', '1990s'), 'det'), (('late', '1990s'), 'amod'), (('1990s', 'reading'), 'obl'), (('this', 'system'), 'det'), (('system', 'reading'), 'nsubj'), (('was', 'reading'), 'aux'), (('reading', 'root'), 'root'), (('over', '10'), 'advmod'), (('10', '%'), 'nummod'), (('%', 'reading'), 'obj'), (('of', 'cheques'), 'case'), (('all', 'cheques'), 'det:predet'), (('the', 'cheques'), 'det'), (('cheques', '%'), 'nmod'), (('in', 'States'), 'case'), (('the', 'States'), 'det'), (('United', 'States'), 'amod'), (('States', 'cheques'), 'nmod'), (('.', 'reading'), 'punct')]

 Named Entites are: 
>> [('the  late 1990s', 'DATE'), ('over 10%', 'PERCENT'), ('the  United States', 'GPE')]

------------------- Sentence 4 -------------------

 A number of ConvNet-based optical character recog- nition and handwriting recognition systems were later deployed by  Microsoft49. 

Tokens are: 
>> ['A', 'number', 'of', 'ConvNet', '-based', 'optical', 'character', 'recog-', 'nition', 'and', 'handwriting', 'recognition', 'systems', 'were', 'later', 'deployed', 'by', 'Microsoft49', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('number', 'NOUN'), ('of', 'ADP'), ('ConvNet', 'PROPN'), ('-based', 'VERB'), ('optical', 'ADJ'), ('character', 'NOUN'), ('recog-', 'NOUN'), ('nition', 'NOUN'), ('and', 'CCONJ'), ('handwriting', 'NOUN'), ('recognition', 'NOUN'), ('systems', 'NOUN'), ('were', 'AUX'), ('later', 'ADV'), ('deployed', 'VERB'), ('by', 'ADP'), ('Microsoft49', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('number', 'NN'), ('of', 'IN'), ('ConvNet', 'NNP'), ('-based', 'VBN'), ('optical', 'JJ'), ('character', 'NN'), ('recog-', 'NN'), ('nition', 'NN'), ('and', 'CC'), ('handwriting', 'NN'), ('recognition', 'NN'), ('systems', 'NNS'), ('were', 'VBD'), ('later', 'RB'), ('deployed', 'VBN'), ('by', 'IN'), ('Microsoft49', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('number', 'number'), ('of', 'of'), ('ConvNet', 'ConvNet'), ('-based', '-base'), ('optical', 'optical'), ('character', 'character'), ('recog-', 'recog-'), ('nition', 'nition'), ('and', 'and'), ('handwriting', 'handwriting'), ('recognition', 'recognition'), ('systems', 'system'), ('were', 'be'), ('later', 'late'), ('deployed', 'deploy'), ('by', 'by'), ('Microsoft49', 'Microsoft49'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'number'), 'det'), (('number', 'deployed'), 'nsubj:pass'), (('of', 'systems'), 'case'), (('ConvNet', 'character'), 'compound'), (('-based', 'systems'), 'amod'), (('optical', 'character'), 'amod'), (('character', 'systems'), 'compound'), (('recog-', 'systems'), 'compound'), (('nition', 'systems'), 'compound'), (('and', 'handwriting'), 'cc'), (('handwriting', 'nition'), 'conj'), (('recognition', 'systems'), 'compound'), (('systems', 'number'), 'nmod'), (('were', 'deployed'), 'aux:pass'), (('later', 'deployed'), 'advmod'), (('deployed', 'root'), 'root'), (('by', 'Microsoft49'), 'case'), (('Microsoft49', 'deployed'), 'obl'), (('.', 'deployed'), 'punct')]

 Named Entites are: 
>> [('ConvNet', 'ORG'), ('Microsoft49', 'ORG')]

------------------- Sentence 5 -------------------

 ConvNets were also experimented with in the early 1990s  for object detection in natural images, including faces and hands 

Tokens are: 
>> ['ConvNets', 'were', 'also', 'experimented', 'with', 'in', 'the', 'early', '1990s', 'for', 'object', 'detection', 'in', 'natural', 'images', ',', 'including', 'faces', 'and', 'hands'] 

 UPOS tags are: 
>> [('ConvNets', 'PROPN'), ('were', 'AUX'), ('also', 'ADV'), ('experimented', 'VERB'), ('with', 'ADP'), ('in', 'ADP'), ('the', 'DET'), ('early', 'ADJ'), ('1990s', 'NOUN'), ('for', 'ADP'), ('object', 'NOUN'), ('detection', 'NOUN'), ('in', 'ADP'), ('natural', 'ADJ'), ('images', 'NOUN'), (',', 'PUNCT'), ('including', 'VERB'), ('faces', 'NOUN'), ('and', 'CCONJ'), ('hands', 'NOUN')] 

 XPOS tags are: 
>> [('ConvNets', 'NNPS'), ('were', 'VBD'), ('also', 'RB'), ('experimented', 'VBN'), ('with', 'IN'), ('in', 'IN'), ('the', 'DT'), ('early', 'JJ'), ('1990s', 'NNS'), ('for', 'IN'), ('object', 'NN'), ('detection', 'NN'), ('in', 'IN'), ('natural', 'JJ'), ('images', 'NNS'), (',', ','), ('including', 'VBG'), ('faces', 'NNS'), ('and', 'CC'), ('hands', 'NNS')] 

 Lemmas are: 
>> [('ConvNets', 'Convnet'), ('were', 'be'), ('also', 'also'), ('experimented', 'experiment'), ('with', 'with'), ('in', 'in'), ('the', 'the'), ('early', 'early'), ('1990s', '1990'), ('for', 'for'), ('object', 'object'), ('detection', 'detection'), ('in', 'in'), ('natural', 'natural'), ('images', 'image'), (',', ','), ('including', 'include'), ('faces', 'face'), ('and', 'and'), ('hands', 'hand')] 

 Dependency tags are: 
>> [(('ConvNets', 'experimented'), 'nsubj:pass'), (('were', 'experimented'), 'aux:pass'), (('also', 'experimented'), 'advmod'), (('experimented', 'root'), 'root'), (('with', 'experimented'), 'obl'), (('in', '1990s'), 'case'), (('the', '1990s'), 'det'), (('early', '1990s'), 'amod'), (('1990s', 'experimented'), 'obl'), (('for', 'detection'), 'case'), (('object', 'detection'), 'compound'), (('detection', 'experimented'), 'obl'), (('in', 'images'), 'case'), (('natural', 'images'), 'amod'), (('images', 'detection'), 'nmod'), ((',', 'faces'), 'punct'), (('including', 'faces'), 'case'), (('faces', 'detection'), 'nmod'), (('and', 'hands'), 'cc'), (('hands', 'faces'), 'conj')]

 Named Entites are: 
>> [('the early 1990s', 'DATE')]

------------------- Sentence 6 -------------------

 50,51,  and for face recognition 

Tokens are: 
>> ['50,51', ',', 'and', 'for', 'face', 'recognition'] 

 UPOS tags are: 
>> [('50,51', 'NUM'), (',', 'PUNCT'), ('and', 'CCONJ'), ('for', 'ADP'), ('face', 'NOUN'), ('recognition', 'NOUN')] 

 XPOS tags are: 
>> [('50,51', 'CD'), (',', ','), ('and', 'CC'), ('for', 'IN'), ('face', 'NN'), ('recognition', 'NN')] 

 Lemmas are: 
>> [('50,51', '5051'), (',', ','), ('and', 'and'), ('for', 'for'), ('face', 'face'), ('recognition', 'recognition')] 

 Dependency tags are: 
>> [(('50,51', 'root'), 'root'), ((',', 'recognition'), 'punct'), (('and', 'recognition'), 'cc'), (('for', 'recognition'), 'case'), (('face', 'recognition'), 'compound'), (('recognition', '50,51'), 'conj')]

 Named Entites are: 
>> [('50,51', 'CARDINAL')]

------------------- Sentence 7 -------------------

 52. 

Tokens are: 
>> ['52.'] 

 UPOS tags are: 
>> [('52.', 'X')] 

 XPOS tags are: 
>> [('52.', 'ADD')] 

 Lemmas are: 
>> [('52.', '52.')] 

 Dependency tags are: 
>> [(('52.', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 124 =================================

Image understanding with deep convolutional networks  Since the early 2000s, ConvNets have been applied with great success to  the detection, segmentation and recognition of objects and regions in  images. These were all tasks in which labelled data was relatively abun- dant, such as traffic sign recognition53, the segmentation of biological  images54 particularly for connectomics55, and the detection of faces,  text, pedestrians and human bodies in natural images36,50,51,56–58. A major  recent practical success of ConvNets is face recognition59.  


------------------- Sentence 1 -------------------

 Image understanding with deep convolutional networks 

Tokens are: 
>> ['Image', 'understanding', 'with', 'deep', 'convolutional', 'networks'] 

 UPOS tags are: 
>> [('Image', 'NOUN'), ('understanding', 'NOUN'), ('with', 'ADP'), ('deep', 'ADJ'), ('convolutional', 'ADJ'), ('networks', 'NOUN')] 

 XPOS tags are: 
>> [('Image', 'NN'), ('understanding', 'NN'), ('with', 'IN'), ('deep', 'JJ'), ('convolutional', 'JJ'), ('networks', 'NNS')] 

 Lemmas are: 
>> [('Image', 'image'), ('understanding', 'understanding'), ('with', 'with'), ('deep', 'deep'), ('convolutional', 'convolutional'), ('networks', 'network')] 

 Dependency tags are: 
>> [(('Image', 'understanding'), 'compound'), (('understanding', 'root'), 'root'), (('with', 'networks'), 'case'), (('deep', 'networks'), 'amod'), (('convolutional', 'networks'), 'amod'), (('networks', 'understanding'), 'nmod')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Since the early 2000s, ConvNets have been applied with great success to  the detection, segmentation and recognition of objects and regions in  images. 

Tokens are: 
>> ['Since', 'the', 'early', '2000s', ',', 'ConvNets', 'have', 'been', 'applied', 'with', 'great', 'success', 'to', 'the', 'detection', ',', 'segmentation', 'and', 'recognition', 'of', 'objects', 'and', 'regions', 'in', 'images', '.'] 

 UPOS tags are: 
>> [('Since', 'ADP'), ('the', 'DET'), ('early', 'ADJ'), ('2000s', 'NOUN'), (',', 'PUNCT'), ('ConvNets', 'PROPN'), ('have', 'AUX'), ('been', 'AUX'), ('applied', 'VERB'), ('with', 'ADP'), ('great', 'ADJ'), ('success', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('detection', 'NOUN'), (',', 'PUNCT'), ('segmentation', 'NOUN'), ('and', 'CCONJ'), ('recognition', 'NOUN'), ('of', 'ADP'), ('objects', 'NOUN'), ('and', 'CCONJ'), ('regions', 'NOUN'), ('in', 'ADP'), ('images', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Since', 'IN'), ('the', 'DT'), ('early', 'JJ'), ('2000s', 'NNS'), (',', ','), ('ConvNets', 'NNPS'), ('have', 'VBP'), ('been', 'VBN'), ('applied', 'VBN'), ('with', 'IN'), ('great', 'JJ'), ('success', 'NN'), ('to', 'IN'), ('the', 'DT'), ('detection', 'NN'), (',', ','), ('segmentation', 'NN'), ('and', 'CC'), ('recognition', 'NN'), ('of', 'IN'), ('objects', 'NNS'), ('and', 'CC'), ('regions', 'NNS'), ('in', 'IN'), ('images', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Since', 'since'), ('the', 'the'), ('early', 'early'), ('2000s', '2000s'), (',', ','), ('ConvNets', 'Convnet'), ('have', 'have'), ('been', 'be'), ('applied', 'apply'), ('with', 'with'), ('great', 'great'), ('success', 'success'), ('to', 'to'), ('the', 'the'), ('detection', 'detection'), (',', ','), ('segmentation', 'segmentation'), ('and', 'and'), ('recognition', 'recognition'), ('of', 'of'), ('objects', 'object'), ('and', 'and'), ('regions', 'region'), ('in', 'in'), ('images', 'image'), ('.', '.')] 

 Dependency tags are: 
>> [(('Since', '2000s'), 'case'), (('the', '2000s'), 'det'), (('early', '2000s'), 'amod'), (('2000s', 'applied'), 'obl'), ((',', 'applied'), 'punct'), (('ConvNets', 'applied'), 'nsubj:pass'), (('have', 'applied'), 'aux'), (('been', 'applied'), 'aux:pass'), (('applied', 'root'), 'root'), (('with', 'success'), 'case'), (('great', 'success'), 'amod'), (('success', 'applied'), 'obl'), (('to', 'detection'), 'case'), (('the', 'detection'), 'det'), (('detection', 'success'), 'nmod'), ((',', 'segmentation'), 'punct'), (('segmentation', 'detection'), 'conj'), (('and', 'recognition'), 'cc'), (('recognition', 'detection'), 'conj'), (('of', 'objects'), 'case'), (('objects', 'recognition'), 'nmod'), (('and', 'regions'), 'cc'), (('regions', 'objects'), 'conj'), (('in', 'images'), 'case'), (('images', 'objects'), 'nmod'), (('.', 'applied'), 'punct')]

 Named Entites are: 
>> [('the early 2000s', 'DATE'), ('ConvNets', 'ORG')]

------------------- Sentence 3 -------------------

 These were all tasks in which labelled data was relatively abun- dant, such as traffic sign recognition53, the segmentation of biological  images54 particularly for connectomics 

Tokens are: 
>> ['These', 'were', 'all', 'tasks', 'in', 'which', 'labelled', 'data', 'was', 'relatively', 'abun', '-', 'dant', ',', 'such', 'as', 'traffic', 'sign', 'recognition53', ',', 'the', 'segmentation', 'of', 'biological', 'images', '54', 'particularly', 'for', 'connectomics'] 

 UPOS tags are: 
>> [('These', 'PRON'), ('were', 'AUX'), ('all', 'DET'), ('tasks', 'NOUN'), ('in', 'ADP'), ('which', 'PRON'), ('labelled', 'VERB'), ('data', 'NOUN'), ('was', 'AUX'), ('relatively', 'ADV'), ('abun', 'ADJ'), ('-', 'PUNCT'), ('dant', 'NOUN'), (',', 'PUNCT'), ('such', 'ADJ'), ('as', 'ADP'), ('traffic', 'NOUN'), ('sign', 'NOUN'), ('recognition53', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('segmentation', 'NOUN'), ('of', 'ADP'), ('biological', 'ADJ'), ('images', 'NOUN'), ('54', 'NUM'), ('particularly', 'ADV'), ('for', 'ADP'), ('connectomics', 'NOUN')] 

 XPOS tags are: 
>> [('These', 'DT'), ('were', 'VBD'), ('all', 'DT'), ('tasks', 'NNS'), ('in', 'IN'), ('which', 'WDT'), ('labelled', 'VBD'), ('data', 'NNS'), ('was', 'VBD'), ('relatively', 'RB'), ('abun', 'JJ'), ('-', 'HYPH'), ('dant', 'NN'), (',', ','), ('such', 'JJ'), ('as', 'IN'), ('traffic', 'NN'), ('sign', 'NN'), ('recognition53', 'NN'), (',', ','), ('the', 'DT'), ('segmentation', 'NN'), ('of', 'IN'), ('biological', 'JJ'), ('images', 'NNS'), ('54', 'CD'), ('particularly', 'RB'), ('for', 'IN'), ('connectomics', 'NNS')] 

 Lemmas are: 
>> [('These', 'this'), ('were', 'be'), ('all', 'all'), ('tasks', 'task'), ('in', 'in'), ('which', 'which'), ('labelled', 'label'), ('data', 'datum'), ('was', 'be'), ('relatively', 'relatively'), ('abun', 'abun'), ('-', '-'), ('dant', 'dant'), (',', ','), ('such', 'such'), ('as', 'as'), ('traffic', 'traffic'), ('sign', 'sign'), ('recognition53', 'recognition53'), (',', ','), ('the', 'the'), ('segmentation', 'segmentation'), ('of', 'of'), ('biological', 'biological'), ('images', 'image'), ('54', '54'), ('particularly', 'particularly'), ('for', 'for'), ('connectomics', 'connectomics')] 

 Dependency tags are: 
>> [(('These', 'tasks'), 'nsubj'), (('were', 'tasks'), 'cop'), (('all', 'tasks'), 'det'), (('tasks', 'root'), 'root'), (('in', 'which'), 'case'), (('which', 'labelled'), 'obl'), (('labelled', 'tasks'), 'acl:relcl'), (('data', 'labelled'), 'obj'), (('was', 'dant'), 'cop'), (('relatively', 'dant'), 'advmod'), (('abun', 'dant'), 'amod'), (('-', 'dant'), 'punct'), (('dant', 'tasks'), 'parataxis'), ((',', 'recognition53'), 'punct'), (('such', 'recognition53'), 'case'), (('as', 'such'), 'fixed'), (('traffic', 'recognition53'), 'compound'), (('sign', 'recognition53'), 'compound'), (('recognition53', 'dant'), 'nmod'), ((',', 'segmentation'), 'punct'), (('the', 'segmentation'), 'det'), (('segmentation', 'dant'), 'appos'), (('of', 'images'), 'case'), (('biological', 'images'), 'amod'), (('images', 'segmentation'), 'nmod'), (('54', 'images'), 'nummod'), (('particularly', 'connectomics'), 'advmod'), (('for', 'connectomics'), 'case'), (('connectomics', 'images'), 'nmod')]

 Named Entites are: 
>> [('54', 'CARDINAL')]

------------------- Sentence 4 -------------------

 55, and the detection of faces,  text, pedestrians and human bodies in natural images 

Tokens are: 
>> ['55', ',', 'and', 'the', 'detection', 'of', 'faces', ',', 'text', ',', 'pedestrians', 'and', 'human', 'bodies', 'in', 'natural', 'image', 's'] 

 UPOS tags are: 
>> [('55', 'NUM'), (',', 'PUNCT'), ('and', 'CCONJ'), ('the', 'DET'), ('detection', 'NOUN'), ('of', 'ADP'), ('faces', 'NOUN'), (',', 'PUNCT'), ('text', 'NOUN'), (',', 'PUNCT'), ('pedestrians', 'NOUN'), ('and', 'CCONJ'), ('human', 'ADJ'), ('bodies', 'NOUN'), ('in', 'ADP'), ('natural', 'ADJ'), ('image', 'NOUN'), ('s', 'PART')] 

 XPOS tags are: 
>> [('55', 'CD'), (',', ','), ('and', 'CC'), ('the', 'DT'), ('detection', 'NN'), ('of', 'IN'), ('faces', 'NNS'), (',', ','), ('text', 'NN'), (',', ','), ('pedestrians', 'NNS'), ('and', 'CC'), ('human', 'JJ'), ('bodies', 'NNS'), ('in', 'IN'), ('natural', 'JJ'), ('image', 'NN'), ('s', 'POS')] 

 Lemmas are: 
>> [('55', '55'), (',', ','), ('and', 'and'), ('the', 'the'), ('detection', 'detection'), ('of', 'of'), ('faces', 'face'), (',', ','), ('text', 'text'), (',', ','), ('pedestrians', 'pedestrian'), ('and', 'and'), ('human', 'human'), ('bodies', 'body'), ('in', 'in'), ('natural', 'natural'), ('image', 'image'), ('s', "'s")] 

 Dependency tags are: 
>> [(('55', 'root'), 'root'), ((',', 'detection'), 'punct'), (('and', 'detection'), 'cc'), (('the', 'detection'), 'det'), (('detection', '55'), 'conj'), (('of', 'faces'), 'case'), (('faces', 'detection'), 'nmod'), ((',', 'text'), 'punct'), (('text', 'faces'), 'conj'), ((',', 'pedestrians'), 'punct'), (('pedestrians', 'faces'), 'conj'), (('and', 'bodies'), 'cc'), (('human', 'bodies'), 'amod'), (('bodies', 'faces'), 'conj'), (('in', 'image'), 'case'), (('natural', 'image'), 'amod'), (('image', 'detection'), 'nmod'), (('s', 'image'), 'case')]

 Named Entites are: 
>> [('55', 'CARDINAL')]

------------------- Sentence 5 -------------------

 36,50,51,56–58. 

Tokens are: 
>> ['36,50,51,56–58', '.'] 

 UPOS tags are: 
>> [('36,50,51,56–58', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('36,50,51,56–58', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('36,50,51,56–58', '365051565688'), ('.', '.')] 

 Dependency tags are: 
>> [(('36,50,51,56–58', 'root'), 'root'), (('.', '36,50,51,56–58'), 'punct')]

 Named Entites are: 
>> [('36,50,51,56–58', 'CARDINAL')]

------------------- Sentence 6 -------------------

 A major  recent practical success of ConvNets is face recognition59. 

Tokens are: 
>> ['A', 'major', 'recent', 'practical', 'success', 'of', 'ConvNets', 'is', 'face', 'recognition', '59.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('major', 'ADJ'), ('recent', 'ADJ'), ('practical', 'ADJ'), ('success', 'NOUN'), ('of', 'ADP'), ('ConvNets', 'PROPN'), ('is', 'AUX'), ('face', 'NOUN'), ('recognition', 'NOUN'), ('59.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('major', 'JJ'), ('recent', 'JJ'), ('practical', 'JJ'), ('success', 'NN'), ('of', 'IN'), ('ConvNets', 'NNPS'), ('is', 'VBZ'), ('face', 'NN'), ('recognition', 'NN'), ('59.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('major', 'major'), ('recent', 'recent'), ('practical', 'practical'), ('success', 'success'), ('of', 'of'), ('ConvNets', 'Convnet'), ('is', 'be'), ('face', 'face'), ('recognition', 'recognition'), ('59.', '59.')] 

 Dependency tags are: 
>> [(('A', 'success'), 'det'), (('major', 'success'), 'amod'), (('recent', 'success'), 'amod'), (('practical', 'success'), 'amod'), (('success', 'recognition'), 'nsubj'), (('of', 'ConvNets'), 'case'), (('ConvNets', 'success'), 'nmod'), (('is', 'recognition'), 'cop'), (('face', 'recognition'), 'compound'), (('recognition', 'root'), 'root'), (('59.', 'recognition'), 'punct')]

 Named Entites are: 
>> [('ConvNets', 'ORG'), ('59.', 'CARDINAL')]

================================ Paragraph 125 =================================

Importantly, images can be labelled at the pixel level, which will have  applications in technology, including autonomous mobile robots and  


------------------- Sentence 1 -------------------

 Importantly, images can be labelled at the pixel level, which will have  applications in technology, including autonomous mobile robots and 

Tokens are: 
>> ['Importantly', ',', 'images', 'can', 'be', 'labelled', 'at', 'the', 'pixel', 'level', ',', 'which', 'will', 'have', 'applications', 'in', 'technology', ',', 'including', 'autonomous', 'mobile', 'robots', 'and'] 

 UPOS tags are: 
>> [('Importantly', 'ADV'), (',', 'PUNCT'), ('images', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('labelled', 'VERB'), ('at', 'ADP'), ('the', 'DET'), ('pixel', 'NOUN'), ('level', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('will', 'AUX'), ('have', 'VERB'), ('applications', 'NOUN'), ('in', 'ADP'), ('technology', 'NOUN'), (',', 'PUNCT'), ('including', 'VERB'), ('autonomous', 'ADJ'), ('mobile', 'ADJ'), ('robots', 'NOUN'), ('and', 'CCONJ')] 

 XPOS tags are: 
>> [('Importantly', 'RB'), (',', ','), ('images', 'NNS'), ('can', 'MD'), ('be', 'VB'), ('labelled', 'VBN'), ('at', 'IN'), ('the', 'DT'), ('pixel', 'NN'), ('level', 'NN'), (',', ','), ('which', 'WDT'), ('will', 'MD'), ('have', 'VB'), ('applications', 'NNS'), ('in', 'IN'), ('technology', 'NN'), (',', ','), ('including', 'VBG'), ('autonomous', 'JJ'), ('mobile', 'JJ'), ('robots', 'NNS'), ('and', 'CC')] 

 Lemmas are: 
>> [('Importantly', 'importantly'), (',', ','), ('images', 'image'), ('can', 'can'), ('be', 'be'), ('labelled', 'label'), ('at', 'at'), ('the', 'the'), ('pixel', 'pixel'), ('level', 'level'), (',', ','), ('which', 'which'), ('will', 'will'), ('have', 'have'), ('applications', 'application'), ('in', 'in'), ('technology', 'technology'), (',', ','), ('including', 'include'), ('autonomous', 'autonomous'), ('mobile', 'mobile'), ('robots', 'robot'), ('and', 'and')] 

 Dependency tags are: 
>> [(('Importantly', 'labelled'), 'advmod'), ((',', 'labelled'), 'punct'), (('images', 'labelled'), 'nsubj:pass'), (('can', 'labelled'), 'aux'), (('be', 'labelled'), 'aux:pass'), (('labelled', 'root'), 'root'), (('at', 'level'), 'case'), (('the', 'level'), 'det'), (('pixel', 'level'), 'compound'), (('level', 'labelled'), 'obl'), ((',', 'level'), 'punct'), (('which', 'have'), 'nsubj'), (('will', 'have'), 'aux'), (('have', 'level'), 'acl:relcl'), (('applications', 'have'), 'obj'), (('in', 'technology'), 'case'), (('technology', 'applications'), 'nmod'), ((',', 'robots'), 'punct'), (('including', 'robots'), 'case'), (('autonomous', 'robots'), 'amod'), (('mobile', 'robots'), 'amod'), (('robots', 'technology'), 'nmod'), (('and', 'robots'), 'cc')]

 Named Entites are: 
>> []

================================ Paragraph 126 =================================

2 8  M A Y  2 0 1 5  |  V O L  5 2 1  |  N A T U R E  |  4 3 9 


------------------- Sentence 1 -------------------

 2 8  M A Y  2 0 1 5  |  V O L  5 2 1  |  N A T U R E  |  4 3 9 

Tokens are: 
>> ['2', '8', 'M', 'A', 'Y', '2', '0', '1', '5', '|', 'V', 'O', 'L', '5', '2', '1', '|', 'N', 'A', 'T', 'U', 'R', 'E', '|', '4', '3', '9'] 

 UPOS tags are: 
>> [('2', 'NUM'), ('8', 'NUM'), ('M', 'NOUN'), ('A', 'PROPN'), ('Y', 'NOUN'), ('2', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('5', 'NUM'), ('|', 'SYM'), ('V', 'NOUN'), ('O', 'NOUN'), ('L', 'NOUN'), ('5', 'NUM'), ('2', 'NUM'), ('1', 'NUM'), ('|', 'SYM'), ('N', 'NOUN'), ('A', 'NUM'), ('T', 'NOUN'), ('U', 'NOUN'), ('R', 'NOUN'), ('E', 'NOUN'), ('|', 'PUNCT'), ('4', 'NUM'), ('3', 'NUM'), ('9', 'NUM')] 

 XPOS tags are: 
>> [('2', 'CD'), ('8', 'CD'), ('M', 'NNS'), ('A', 'NNP'), ('Y', 'NN'), ('2', 'CD'), ('0', 'CD'), ('1', 'CD'), ('5', 'CD'), ('|', 'SYM'), ('V', 'NNS'), ('O', 'NNS'), ('L', 'NNS'), ('5', 'CD'), ('2', 'CD'), ('1', 'CD'), ('|', 'SYM'), ('N', 'NN'), ('A', 'CD'), ('T', 'NN'), ('U', 'NN'), ('R', 'NN'), ('E', 'NN'), ('|', ':'), ('4', 'CD'), ('3', 'CD'), ('9', 'CD')] 

 Lemmas are: 
>> [('2', '2'), ('8', '8'), ('M', 'm'), ('A', 'A'), ('Y', 'Y'), ('2', '2'), ('0', '0'), ('1', '1'), ('5', '5'), ('|', '|'), ('V', 'V'), ('O', 'o'), ('L', 'L'), ('5', '5'), ('2', '2'), ('1', '1'), ('|', '|'), ('N', 'N'), ('A', 'a'), ('T', 'T'), ('U', 'U'), ('R', 'R'), ('E', 'e'), ('|', '|'), ('4', '4'), ('3', '3'), ('9', '9')] 

 Dependency tags are: 
>> [(('2', 'M'), 'nummod'), (('8', 'M'), 'nummod'), (('M', 'root'), 'root'), (('A', 'M'), 'appos'), (('Y', 'M'), 'appos'), (('2', 'Y'), 'dep'), (('0', '1'), 'compound'), (('1', 'Y'), 'list'), (('5', '1'), 'flat'), (('|', 'O'), 'compound'), (('V', 'O'), 'nummod'), (('O', 'M'), 'appos'), (('L', 'O'), 'appos'), (('5', 'L'), 'nummod'), (('2', '5'), 'compound'), (('1', '2'), 'conj'), (('|', 'N'), 'compound'), (('N', 'L'), 'appos'), (('A', 'N'), 'nummod'), (('T', 'E'), 'compound'), (('U', 'E'), 'compound'), (('R', 'E'), 'compound'), (('E', 'Y'), 'list'), (('|', '4'), 'punct'), (('4', 'M'), 'appos'), (('3', '4'), 'flat'), (('9', '3'), 'flat')]

 Named Entites are: 
>> [('4', 'CARDINAL'), ('3', 'CARDINAL')]

================================ Paragraph 127 =================================

REVIEW INSIGHT 


------------------- Sentence 1 -------------------

 REVIEW INSIGHT 

Tokens are: 
>> ['REVIEW', 'INSIGHT'] 

 UPOS tags are: 
>> [('REVIEW', 'NOUN'), ('INSIGHT', 'NOUN')] 

 XPOS tags are: 
>> [('REVIEW', 'NN'), ('INSIGHT', 'NN')] 

 Lemmas are: 
>> [('REVIEW', 'review'), ('INSIGHT', 'insight')] 

 Dependency tags are: 
>> [(('REVIEW', 'INSIGHT'), 'compound'), (('INSIGHT', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 128 =================================

© 2015 Macmillan Publishers Limited. All rights reserved


------------------- Sentence 1 -------------------

 © 2015 Macmillan Publishers Limited. 

Tokens are: 
>> ['©', '2015', 'Macmillan', 'Publishers', 'Limited', '.'] 

 UPOS tags are: 
>> [('©', 'ADP'), ('2015', 'NUM'), ('Macmillan', 'PROPN'), ('Publishers', 'PROPN'), ('Limited', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('©', 'IN'), ('2015', 'CD'), ('Macmillan', 'NNP'), ('Publishers', 'NNPS'), ('Limited', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('©', 'at'), ('2015', '2015'), ('Macmillan', 'Macmillan'), ('Publishers', 'Publisher'), ('Limited', 'Limited'), ('.', '.')] 

 Dependency tags are: 
>> [(('©', 'Limited'), 'case'), (('2015', 'Limited'), 'nummod'), (('Macmillan', 'Limited'), 'compound'), (('Publishers', 'Limited'), 'compound'), (('Limited', 'root'), 'root'), (('.', 'Limited'), 'punct')]

 Named Entites are: 
>> [('2015', 'DATE'), ('Macmillan Publishers Limited', 'ORG')]

------------------- Sentence 2 -------------------

 All rights reserved 

Tokens are: 
>> ['All', 'rights', 'reserved'] 

 UPOS tags are: 
>> [('All', 'DET'), ('rights', 'NOUN'), ('reserved', 'VERB')] 

 XPOS tags are: 
>> [('All', 'DT'), ('rights', 'NNS'), ('reserved', 'VBN')] 

 Lemmas are: 
>> [('All', 'all'), ('rights', 'rights'), ('reserved', 'reserve')] 

 Dependency tags are: 
>> [(('All', 'rights'), 'det'), (('rights', 'root'), 'root'), (('reserved', 'rights'), 'acl')]

 Named Entites are: 
>> []

================================ Paragraph 129 =================================

self-driving cars60,61. Companies such as Mobileye and NVIDIA are  using such ConvNet-based methods in their upcoming vision sys- tems for cars. Other applications gaining importance involve natural  language understanding14 and speech recognition7.  


------------------- Sentence 1 -------------------

 self-driving cars 

Tokens are: 
>> ['self', '-driving', 'cars'] 

 UPOS tags are: 
>> [('self', 'NOUN'), ('-driving', 'NOUN'), ('cars', 'NOUN')] 

 XPOS tags are: 
>> [('self', 'NN'), ('-driving', 'NN'), ('cars', 'NNS')] 

 Lemmas are: 
>> [('self', 'self'), ('-driving', '-driving'), ('cars', 'car')] 

 Dependency tags are: 
>> [(('self', '-driving'), 'compound'), (('-driving', 'cars'), 'compound'), (('cars', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 60,61. 

Tokens are: 
>> ['60,61', '.'] 

 UPOS tags are: 
>> [('60,61', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('60,61', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('60,61', '6061'), ('.', '.')] 

 Dependency tags are: 
>> [(('60,61', 'root'), 'root'), (('.', '60,61'), 'punct')]

 Named Entites are: 
>> [('60,61', 'CARDINAL')]

------------------- Sentence 3 -------------------

 Companies such as Mobileye and NVIDIA are  using such ConvNet-based methods in their upcoming vision sys- tems for cars. 

Tokens are: 
>> ['Companies', 'such', 'as', 'Mobileye', 'and', 'NVIDIA', 'are', 'using', 'such', 'ConvNet', '-based', 'methods', 'in', 'their', 'upcoming', 'vision', 'sys', '-', 'tems', 'for', 'cars', '.'] 

 UPOS tags are: 
>> [('Companies', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('Mobileye', 'PROPN'), ('and', 'CCONJ'), ('NVIDIA', 'PROPN'), ('are', 'AUX'), ('using', 'VERB'), ('such', 'ADJ'), ('ConvNet', 'PROPN'), ('-based', 'VERB'), ('methods', 'NOUN'), ('in', 'ADP'), ('their', 'PRON'), ('upcoming', 'ADJ'), ('vision', 'NOUN'), ('sys', 'NOUN'), ('-', 'PUNCT'), ('tems', 'NOUN'), ('for', 'ADP'), ('cars', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Companies', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('Mobileye', 'NNP'), ('and', 'CC'), ('NVIDIA', 'NNP'), ('are', 'VBP'), ('using', 'VBG'), ('such', 'JJ'), ('ConvNet', 'NNP'), ('-based', 'VBN'), ('methods', 'NNS'), ('in', 'IN'), ('their', 'PRP$'), ('upcoming', 'JJ'), ('vision', 'NN'), ('sys', 'NN'), ('-', 'HYPH'), ('tems', 'NNS'), ('for', 'IN'), ('cars', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Companies', 'company'), ('such', 'such'), ('as', 'as'), ('Mobileye', 'Mobileye'), ('and', 'and'), ('NVIDIA', 'NVIDIA'), ('are', 'be'), ('using', 'use'), ('such', 'such'), ('ConvNet', 'ConvNet'), ('-based', '-base'), ('methods', 'method'), ('in', 'in'), ('their', 'they'), ('upcoming', 'upcoming'), ('vision', 'vision'), ('sys', 'sy'), ('-', '-'), ('tems', 'tem'), ('for', 'for'), ('cars', 'car'), ('.', '.')] 

 Dependency tags are: 
>> [(('Companies', 'using'), 'nsubj'), (('such', 'Mobileye'), 'case'), (('as', 'such'), 'fixed'), (('Mobileye', 'Companies'), 'nmod'), (('and', 'NVIDIA'), 'cc'), (('NVIDIA', 'Mobileye'), 'conj'), (('are', 'using'), 'aux'), (('using', 'root'), 'root'), (('such', 'methods'), 'amod'), (('ConvNet', '-based'), 'compound'), (('-based', 'methods'), 'amod'), (('methods', 'using'), 'obj'), (('in', 'vision'), 'case'), (('their', 'vision'), 'nmod:poss'), (('upcoming', 'vision'), 'amod'), (('vision', 'tems'), 'compound'), (('sys', 'tems'), 'compound'), (('-', 'tems'), 'punct'), (('tems', 'methods'), 'nmod'), (('for', 'cars'), 'case'), (('cars', 'tems'), 'nmod'), (('.', 'using'), 'punct')]

 Named Entites are: 
>> [('Mobileye', 'ORG'), ('NVIDIA', 'ORG'), ('ConvNet', 'ORG')]

------------------- Sentence 4 -------------------

 Other applications gaining importance involve natural  language understanding14 and speech recognition7. 

Tokens are: 
>> ['Other', 'applications', 'gaining', 'importance', 'involve', 'natural', 'language', 'understanding', '14', 'and', 'speech', 'recognition7.'] 

 UPOS tags are: 
>> [('Other', 'ADJ'), ('applications', 'NOUN'), ('gaining', 'VERB'), ('importance', 'NOUN'), ('involve', 'VERB'), ('natural', 'ADJ'), ('language', 'NOUN'), ('understanding', 'NOUN'), ('14', 'NUM'), ('and', 'CCONJ'), ('speech', 'NOUN'), ('recognition7.', 'NOUN')] 

 XPOS tags are: 
>> [('Other', 'JJ'), ('applications', 'NNS'), ('gaining', 'VBG'), ('importance', 'NN'), ('involve', 'VBP'), ('natural', 'JJ'), ('language', 'NN'), ('understanding', 'NN'), ('14', 'CD'), ('and', 'CC'), ('speech', 'NN'), ('recognition7.', 'NN')] 

 Lemmas are: 
>> [('Other', 'other'), ('applications', 'application'), ('gaining', 'gain'), ('importance', 'importance'), ('involve', 'involve'), ('natural', 'natural'), ('language', 'language'), ('understanding', 'understanding'), ('14', '14'), ('and', 'and'), ('speech', 'speech'), ('recognition7.', 'recognition7.')] 

 Dependency tags are: 
>> [(('Other', 'applications'), 'amod'), (('applications', 'involve'), 'nsubj'), (('gaining', 'applications'), 'acl'), (('importance', 'gaining'), 'obj'), (('involve', 'root'), 'root'), (('natural', 'understanding'), 'amod'), (('language', 'understanding'), 'compound'), (('understanding', 'involve'), 'obj'), (('14', 'recognition7.'), 'nummod'), (('and', 'speech'), 'cc'), (('speech', '14'), 'conj'), (('recognition7.', 'understanding'), 'conj')]

 Named Entites are: 
>> [('14', 'CARDINAL')]

================================ Paragraph 130 =================================

Despite these successes, ConvNets were largely forsaken by the  mainstream computer-vision and machine-learning communities  until the ImageNet competition in 2012. When deep convolutional  networks were applied to a data set of about a million images from  the web that contained 1,000 different classes, they achieved spec- tacular results, almost halving the error rates of the best compet- ing approaches1. This success came from the efficient use of GPUs,  ReLUs, a new regularization technique called dropout62, and tech- niques to generate more training examples by deforming the existing  ones. This success has brought about a revolution in computer vision;  ConvNets are now the dominant approach for almost all recognition  and detection tasks4,58,59,63–65 and approach human performance on  some tasks. A recent stunning demonstration combines ConvNets  and recurrent net modules for the generation of image captions  (Fig. 3).  


------------------- Sentence 1 -------------------

 Despite these successes, ConvNets were largely forsaken by the  mainstream computer-vision and machine-learning communities  until the ImageNet competition in 2012. 

Tokens are: 
>> ['Despite', 'these', 'successes', ',', 'ConvNets', 'were', 'largely', 'forsaken', 'by', 'the', 'mainstream', 'computer', '-', 'vision', 'and', 'machine', '-', 'learning', 'communities', 'until', 'the', 'ImageNet', 'competition', 'in', '2012', '.'] 

 UPOS tags are: 
>> [('Despite', 'ADP'), ('these', 'DET'), ('successes', 'NOUN'), (',', 'PUNCT'), ('ConvNets', 'PROPN'), ('were', 'AUX'), ('largely', 'ADV'), ('forsaken', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('mainstream', 'ADJ'), ('computer', 'NOUN'), ('-', 'PUNCT'), ('vision', 'NOUN'), ('and', 'CCONJ'), ('machine', 'NOUN'), ('-', 'PUNCT'), ('learning', 'NOUN'), ('communities', 'NOUN'), ('until', 'ADP'), ('the', 'DET'), ('ImageNet', 'PROPN'), ('competition', 'NOUN'), ('in', 'ADP'), ('2012', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Despite', 'IN'), ('these', 'DT'), ('successes', 'NNS'), (',', ','), ('ConvNets', 'NNPS'), ('were', 'VBD'), ('largely', 'RB'), ('forsaken', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('mainstream', 'JJ'), ('computer', 'NN'), ('-', 'HYPH'), ('vision', 'NN'), ('and', 'CC'), ('machine', 'NN'), ('-', 'HYPH'), ('learning', 'NN'), ('communities', 'NNS'), ('until', 'IN'), ('the', 'DT'), ('ImageNet', 'NNP'), ('competition', 'NN'), ('in', 'IN'), ('2012', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('Despite', 'despite'), ('these', 'this'), ('successes', 'success'), (',', ','), ('ConvNets', 'Convnet'), ('were', 'be'), ('largely', 'largely'), ('forsaken', 'forsake'), ('by', 'by'), ('the', 'the'), ('mainstream', 'mainstream'), ('computer', 'computer'), ('-', '-'), ('vision', 'vision'), ('and', 'and'), ('machine', 'machine'), ('-', '-'), ('learning', 'learning'), ('communities', 'community'), ('until', 'until'), ('the', 'the'), ('ImageNet', 'ImageNet'), ('competition', 'competition'), ('in', 'in'), ('2012', '2012'), ('.', '.')] 

 Dependency tags are: 
>> [(('Despite', 'successes'), 'case'), (('these', 'successes'), 'det'), (('successes', 'forsaken'), 'obl'), ((',', 'forsaken'), 'punct'), (('ConvNets', 'forsaken'), 'nsubj:pass'), (('were', 'forsaken'), 'aux:pass'), (('largely', 'forsaken'), 'advmod'), (('forsaken', 'root'), 'root'), (('by', 'vision'), 'case'), (('the', 'vision'), 'det'), (('mainstream', 'vision'), 'amod'), (('computer', 'vision'), 'compound'), (('-', 'vision'), 'punct'), (('vision', 'forsaken'), 'obl'), (('and', 'communities'), 'cc'), (('machine', 'learning'), 'compound'), (('-', 'learning'), 'punct'), (('learning', 'communities'), 'compound'), (('communities', 'vision'), 'conj'), (('until', 'competition'), 'case'), (('the', 'competition'), 'det'), (('ImageNet', 'competition'), 'compound'), (('competition', 'forsaken'), 'obl'), (('in', '2012'), 'case'), (('2012', 'competition'), 'nmod'), (('.', 'forsaken'), 'punct')]

 Named Entites are: 
>> [('ConvNets', 'ORG'), ('ImageNet', 'ORG'), ('2012', 'DATE')]

------------------- Sentence 2 -------------------

 When deep convolutional  networks were applied to a data set of about a million images from  the web that contained 1,000 different classes, they achieved spec- tacular results, almost halving the error rates of the best compet- ing approaches 

Tokens are: 
>> ['When', 'deep', 'convolutional', 'networks', 'were', 'applied', 'to', 'a', 'data', 'set', 'of', 'about', 'a', 'million', 'images', 'from', 'the', 'web', 'that', 'contained', '1,000', 'different', 'classes', ',', 'they', 'achieved', 'spec-', 'tacular', 'results', ',', 'almost', 'halving', 'the', 'error', 'rates', 'of', 'the', 'best', 'compet', '-', 'ing', 'approaches'] 

 UPOS tags are: 
>> [('When', 'SCONJ'), ('deep', 'ADJ'), ('convolutional', 'ADJ'), ('networks', 'NOUN'), ('were', 'AUX'), ('applied', 'VERB'), ('to', 'ADP'), ('a', 'DET'), ('data', 'NOUN'), ('set', 'NOUN'), ('of', 'ADP'), ('about', 'ADV'), ('a', 'DET'), ('million', 'NUM'), ('images', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('web', 'NOUN'), ('that', 'PRON'), ('contained', 'VERB'), ('1,000', 'NUM'), ('different', 'ADJ'), ('classes', 'NOUN'), (',', 'PUNCT'), ('they', 'PRON'), ('achieved', 'VERB'), ('spec-', 'ADJ'), ('tacular', 'ADJ'), ('results', 'NOUN'), (',', 'PUNCT'), ('almost', 'ADV'), ('halving', 'VERB'), ('the', 'DET'), ('error', 'NOUN'), ('rates', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('best', 'ADJ'), ('compet', 'NOUN'), ('-', 'PUNCT'), ('ing', 'NOUN'), ('approaches', 'NOUN')] 

 XPOS tags are: 
>> [('When', 'WRB'), ('deep', 'JJ'), ('convolutional', 'JJ'), ('networks', 'NNS'), ('were', 'VBD'), ('applied', 'VBN'), ('to', 'IN'), ('a', 'DT'), ('data', 'NN'), ('set', 'NN'), ('of', 'IN'), ('about', 'RB'), ('a', 'DT'), ('million', 'CD'), ('images', 'NNS'), ('from', 'IN'), ('the', 'DT'), ('web', 'NN'), ('that', 'WDT'), ('contained', 'VBD'), ('1,000', 'CD'), ('different', 'JJ'), ('classes', 'NNS'), (',', ','), ('they', 'PRP'), ('achieved', 'VBD'), ('spec-', 'JJ'), ('tacular', 'JJ'), ('results', 'NNS'), (',', ','), ('almost', 'RB'), ('halving', 'VBG'), ('the', 'DT'), ('error', 'NN'), ('rates', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('best', 'JJS'), ('compet', 'NN'), ('-', 'HYPH'), ('ing', 'NN'), ('approaches', 'NNS')] 

 Lemmas are: 
>> [('When', 'when'), ('deep', 'deep'), ('convolutional', 'convolutional'), ('networks', 'network'), ('were', 'be'), ('applied', 'apply'), ('to', 'to'), ('a', 'a'), ('data', 'datum'), ('set', 'set'), ('of', 'of'), ('about', 'about'), ('a', 'a'), ('million', 'million'), ('images', 'image'), ('from', 'from'), ('the', 'the'), ('web', 'web'), ('that', 'that'), ('contained', 'contain'), ('1,000', '1000'), ('different', 'different'), ('classes', 'class'), (',', ','), ('they', 'they'), ('achieved', 'achieve'), ('spec-', 'spec-'), ('tacular', 'tacular'), ('results', 'result'), (',', ','), ('almost', 'almost'), ('halving', 'halve'), ('the', 'the'), ('error', 'error'), ('rates', 'rate'), ('of', 'of'), ('the', 'the'), ('best', 'good'), ('compet', 'compet'), ('-', '-'), ('ing', 'ing'), ('approaches', 'approach')] 

 Dependency tags are: 
>> [(('When', 'applied'), 'mark'), (('deep', 'networks'), 'amod'), (('convolutional', 'networks'), 'amod'), (('networks', 'applied'), 'nsubj:pass'), (('were', 'applied'), 'aux:pass'), (('applied', 'achieved'), 'advcl'), (('to', 'set'), 'case'), (('a', 'set'), 'det'), (('data', 'set'), 'compound'), (('set', 'applied'), 'obl'), (('of', 'images'), 'case'), (('about', 'million'), 'advmod'), (('a', 'million'), 'det'), (('million', 'images'), 'nummod'), (('images', 'set'), 'nmod'), (('from', 'web'), 'case'), (('the', 'web'), 'det'), (('web', 'images'), 'nmod'), (('that', 'contained'), 'nsubj'), (('contained', 'images'), 'acl:relcl'), (('1,000', 'classes'), 'nummod'), (('different', 'classes'), 'amod'), (('classes', 'contained'), 'obj'), ((',', 'achieved'), 'punct'), (('they', 'achieved'), 'nsubj'), (('achieved', 'root'), 'root'), (('spec-', 'results'), 'amod'), (('tacular', 'results'), 'amod'), (('results', 'achieved'), 'obj'), ((',', 'halving'), 'punct'), (('almost', 'halving'), 'advmod'), (('halving', 'achieved'), 'advcl'), (('the', 'rates'), 'det'), (('error', 'rates'), 'compound'), (('rates', 'halving'), 'obj'), (('of', 'approaches'), 'case'), (('the', 'approaches'), 'det'), (('best', 'approaches'), 'amod'), (('compet', 'ing'), 'compound'), (('-', 'ing'), 'punct'), (('ing', 'approaches'), 'compound'), (('approaches', 'rates'), 'nmod')]

 Named Entites are: 
>> [('about a million', 'CARDINAL'), ('1,000', 'CARDINAL')]

------------------- Sentence 3 -------------------

 1. 

Tokens are: 
>> ['1', '.'] 

 UPOS tags are: 
>> [('1', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('1', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('1', '1'), ('.', '.')] 

 Dependency tags are: 
>> [(('1', 'root'), 'root'), (('.', '1'), 'punct')]

 Named Entites are: 
>> [('1', 'CARDINAL')]

------------------- Sentence 4 -------------------

 This success came from the efficient use of GPUs,  ReLUs, a new regularization technique called dropout62, and tech- niques to generate more training examples by deforming the existing  ones. 

Tokens are: 
>> ['This', 'success', 'came', 'from', 'the', 'efficient', 'use', 'of', 'GPUs', ',', 'ReLUs', ',', 'a', 'new', 'regularization', 'technique', 'called', 'dropout', '62', ',', 'and', 'tech', '-', 'niques', 'to', 'generate', 'more', 'training', 'examples', 'by', 'deforming', 'the', 'existing', 'ones', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('success', 'NOUN'), ('came', 'VERB'), ('from', 'ADP'), ('the', 'DET'), ('efficient', 'ADJ'), ('use', 'NOUN'), ('of', 'ADP'), ('GPUs', 'NOUN'), (',', 'PUNCT'), ('ReLUs', 'PROPN'), (',', 'PUNCT'), ('a', 'DET'), ('new', 'ADJ'), ('regularization', 'NOUN'), ('technique', 'NOUN'), ('called', 'VERB'), ('dropout', 'NOUN'), ('62', 'NUM'), (',', 'PUNCT'), ('and', 'CCONJ'), ('tech', 'NOUN'), ('-', 'PUNCT'), ('niques', 'NOUN'), ('to', 'PART'), ('generate', 'VERB'), ('more', 'ADJ'), ('training', 'NOUN'), ('examples', 'NOUN'), ('by', 'SCONJ'), ('deforming', 'VERB'), ('the', 'DET'), ('existing', 'VERB'), ('ones', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('success', 'NN'), ('came', 'VBD'), ('from', 'IN'), ('the', 'DT'), ('efficient', 'JJ'), ('use', 'NN'), ('of', 'IN'), ('GPUs', 'NNS'), (',', ','), ('ReLUs', 'NNP'), (',', ','), ('a', 'DT'), ('new', 'JJ'), ('regularization', 'NN'), ('technique', 'NN'), ('called', 'VBN'), ('dropout', 'NN'), ('62', 'CD'), (',', ','), ('and', 'CC'), ('tech', 'NN'), ('-', 'HYPH'), ('niques', 'NNS'), ('to', 'TO'), ('generate', 'VB'), ('more', 'JJR'), ('training', 'NN'), ('examples', 'NNS'), ('by', 'IN'), ('deforming', 'VBG'), ('the', 'DT'), ('existing', 'VBG'), ('ones', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('success', 'success'), ('came', 'come'), ('from', 'from'), ('the', 'the'), ('efficient', 'efficient'), ('use', 'use'), ('of', 'of'), ('GPUs', 'gpu'), (',', ','), ('ReLUs', 'ReLUs'), (',', ','), ('a', 'a'), ('new', 'new'), ('regularization', 'regularization'), ('technique', 'technique'), ('called', 'call'), ('dropout', 'dropout'), ('62', '62'), (',', ','), ('and', 'and'), ('tech', 'tech'), ('-', '-'), ('niques', 'nique'), ('to', 'to'), ('generate', 'generate'), ('more', 'more'), ('training', 'training'), ('examples', 'example'), ('by', 'by'), ('deforming', 'deform'), ('the', 'the'), ('existing', 'exist'), ('ones', 'one'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'success'), 'det'), (('success', 'came'), 'nsubj'), (('came', 'root'), 'root'), (('from', 'use'), 'case'), (('the', 'use'), 'det'), (('efficient', 'use'), 'amod'), (('use', 'came'), 'obl'), (('of', 'GPUs'), 'case'), (('GPUs', 'use'), 'nmod'), ((',', 'ReLUs'), 'punct'), (('ReLUs', 'GPUs'), 'conj'), ((',', 'technique'), 'punct'), (('a', 'technique'), 'det'), (('new', 'technique'), 'amod'), (('regularization', 'technique'), 'compound'), (('technique', 'GPUs'), 'appos'), (('called', 'technique'), 'acl'), (('dropout', 'called'), 'xcomp'), (('62', 'dropout'), 'nummod'), ((',', 'niques'), 'punct'), (('and', 'niques'), 'cc'), (('tech', 'niques'), 'compound'), (('-', 'niques'), 'punct'), (('niques', 'GPUs'), 'conj'), (('to', 'generate'), 'mark'), (('generate', 'niques'), 'acl'), (('more', 'examples'), 'amod'), (('training', 'examples'), 'compound'), (('examples', 'generate'), 'obj'), (('by', 'deforming'), 'mark'), (('deforming', 'generate'), 'advcl'), (('the', 'ones'), 'det'), (('existing', 'ones'), 'amod'), (('ones', 'deforming'), 'obj'), (('.', 'came'), 'punct')]

 Named Entites are: 
>> [('ReLUs', 'PRODUCT'), ('62', 'CARDINAL')]

------------------- Sentence 5 -------------------

 This success has brought about a revolution in computer vision; 

Tokens are: 
>> ['This', 'success', 'has', 'brought', 'about', 'a', 'revolution', 'in', 'computer', 'vision', ';'] 

 UPOS tags are: 
>> [('This', 'DET'), ('success', 'NOUN'), ('has', 'AUX'), ('brought', 'VERB'), ('about', 'ADP'), ('a', 'DET'), ('revolution', 'NOUN'), ('in', 'ADP'), ('computer', 'NOUN'), ('vision', 'NOUN'), (';', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('success', 'NN'), ('has', 'VBZ'), ('brought', 'VBN'), ('about', 'IN'), ('a', 'DT'), ('revolution', 'NN'), ('in', 'IN'), ('computer', 'NN'), ('vision', 'NN'), (';', ':')] 

 Lemmas are: 
>> [('This', 'this'), ('success', 'success'), ('has', 'have'), ('brought', 'bring'), ('about', 'about'), ('a', 'a'), ('revolution', 'revolution'), ('in', 'in'), ('computer', 'computer'), ('vision', 'vision'), (';', ';')] 

 Dependency tags are: 
>> [(('This', 'success'), 'det'), (('success', 'brought'), 'nsubj'), (('has', 'brought'), 'aux'), (('brought', 'root'), 'root'), (('about', 'revolution'), 'case'), (('a', 'revolution'), 'det'), (('revolution', 'brought'), 'obl'), (('in', 'vision'), 'case'), (('computer', 'vision'), 'compound'), (('vision', 'revolution'), 'nmod'), ((';', 'brought'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 ConvNets are now the dominant approach for almost all recognition  and detection tasks 

Tokens are: 
>> ['ConvNets', 'are', 'now', 'the', 'dominant', 'approach', 'for', 'almost', 'all', 'recognition', 'and', 'detection', 'tasks'] 

 UPOS tags are: 
>> [('ConvNets', 'NOUN'), ('are', 'AUX'), ('now', 'ADV'), ('the', 'DET'), ('dominant', 'ADJ'), ('approach', 'NOUN'), ('for', 'ADP'), ('almost', 'ADV'), ('all', 'DET'), ('recognition', 'NOUN'), ('and', 'CCONJ'), ('detection', 'NOUN'), ('tasks', 'NOUN')] 

 XPOS tags are: 
>> [('ConvNets', 'NNS'), ('are', 'VBP'), ('now', 'RB'), ('the', 'DT'), ('dominant', 'JJ'), ('approach', 'NN'), ('for', 'IN'), ('almost', 'RB'), ('all', 'DT'), ('recognition', 'NN'), ('and', 'CC'), ('detection', 'NN'), ('tasks', 'NNS')] 

 Lemmas are: 
>> [('ConvNets', 'convNet'), ('are', 'be'), ('now', 'now'), ('the', 'the'), ('dominant', 'dominant'), ('approach', 'approach'), ('for', 'for'), ('almost', 'almost'), ('all', 'all'), ('recognition', 'recognition'), ('and', 'and'), ('detection', 'detection'), ('tasks', 'task')] 

 Dependency tags are: 
>> [(('ConvNets', 'approach'), 'nsubj'), (('are', 'approach'), 'cop'), (('now', 'approach'), 'advmod'), (('the', 'approach'), 'det'), (('dominant', 'approach'), 'amod'), (('approach', 'root'), 'root'), (('for', 'recognition'), 'case'), (('almost', 'recognition'), 'advmod'), (('all', 'recognition'), 'det'), (('recognition', 'approach'), 'nmod'), (('and', 'tasks'), 'cc'), (('detection', 'tasks'), 'compound'), (('tasks', 'recognition'), 'conj')]

 Named Entites are: 
>> []

------------------- Sentence 7 -------------------

 4,58,59,63–65 and approach human performance on  some tasks. 

Tokens are: 
>> ['4,58,59,63–65', 'and', 'approach', 'human', 'performance', 'on', 'some', 'tasks', '.'] 

 UPOS tags are: 
>> [('4,58,59,63–65', 'NUM'), ('and', 'CCONJ'), ('approach', 'VERB'), ('human', 'ADJ'), ('performance', 'NOUN'), ('on', 'ADP'), ('some', 'DET'), ('tasks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('4,58,59,63–65', 'CD'), ('and', 'CC'), ('approach', 'VB'), ('human', 'JJ'), ('performance', 'NN'), ('on', 'IN'), ('some', 'DT'), ('tasks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('4,58,59,63–65', '4585996335'), ('and', 'and'), ('approach', 'approach'), ('human', 'human'), ('performance', 'performance'), ('on', 'on'), ('some', 'some'), ('tasks', 'task'), ('.', '.')] 

 Dependency tags are: 
>> [(('4,58,59,63–65', 'root'), 'root'), (('and', 'approach'), 'cc'), (('approach', '4,58,59,63–65'), 'conj'), (('human', 'performance'), 'amod'), (('performance', 'approach'), 'obj'), (('on', 'tasks'), 'case'), (('some', 'tasks'), 'det'), (('tasks', 'approach'), 'obl'), (('.', '4,58,59,63–65'), 'punct')]

 Named Entites are: 
>> [('4,58,59,63–65', 'CARDINAL')]

------------------- Sentence 8 -------------------

 A recent stunning demonstration combines ConvNets  and recurrent net modules for the generation of image captions  (Fig. 3). 

Tokens are: 
>> ['A', 'recent', 'stunning', 'demonstration', 'combines', 'ConvNets', 'and', 'recurrent', 'net', 'modules', 'for', 'the', 'generation', 'of', 'image', 'captions', '(', 'Fig.', '3', ')', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('recent', 'ADJ'), ('stunning', 'ADJ'), ('demonstration', 'NOUN'), ('combines', 'VERB'), ('ConvNets', 'PROPN'), ('and', 'CCONJ'), ('recurrent', 'ADJ'), ('net', 'NOUN'), ('modules', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('generation', 'NOUN'), ('of', 'ADP'), ('image', 'NOUN'), ('captions', 'NOUN'), ('(', 'PUNCT'), ('Fig.', 'PROPN'), ('3', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('recent', 'JJ'), ('stunning', 'JJ'), ('demonstration', 'NN'), ('combines', 'VBZ'), ('ConvNets', 'NNPS'), ('and', 'CC'), ('recurrent', 'JJ'), ('net', 'NN'), ('modules', 'NNS'), ('for', 'IN'), ('the', 'DT'), ('generation', 'NN'), ('of', 'IN'), ('image', 'NN'), ('captions', 'NNS'), ('(', '-LRB-'), ('Fig.', 'NNP'), ('3', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('recent', 'recent'), ('stunning', 'stunning'), ('demonstration', 'demonstration'), ('combines', 'combine'), ('ConvNets', 'Convnet'), ('and', 'and'), ('recurrent', 'recurrent'), ('net', 'net'), ('modules', 'module'), ('for', 'for'), ('the', 'the'), ('generation', 'generation'), ('of', 'of'), ('image', 'image'), ('captions', 'caption'), ('(', '('), ('Fig.', 'Fig.'), ('3', '3'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'demonstration'), 'det'), (('recent', 'demonstration'), 'amod'), (('stunning', 'demonstration'), 'amod'), (('demonstration', 'combines'), 'nsubj'), (('combines', 'root'), 'root'), (('ConvNets', 'combines'), 'obj'), (('and', 'modules'), 'cc'), (('recurrent', 'modules'), 'amod'), (('net', 'modules'), 'compound'), (('modules', 'ConvNets'), 'conj'), (('for', 'generation'), 'case'), (('the', 'generation'), 'det'), (('generation', 'combines'), 'obl'), (('of', 'captions'), 'case'), (('image', 'captions'), 'compound'), (('captions', 'generation'), 'nmod'), (('(', 'Fig.'), 'punct'), (('Fig.', 'combines'), 'dep'), (('3', 'Fig.'), 'dep'), ((')', 'Fig.'), 'punct'), (('.', 'combines'), 'punct')]

 Named Entites are: 
>> [('ConvNets', 'PRODUCT'), ('3', 'CARDINAL')]

================================ Paragraph 131 =================================

Recent ConvNet architectures have 10 to 20 layers of ReLUs, hun- dreds of millions of weights, and billions of connections between  units. Whereas training such large networks could have taken weeks  only two years ago, progress in hardware, software and algorithm  parallelization have reduced training times to a few hours.  


------------------- Sentence 1 -------------------

 Recent ConvNet architectures have 10 to 20 layers of ReLUs, hun- dreds of millions of weights, and billions of connections between  units. 

Tokens are: 
>> ['Recent', 'ConvNet', 'architectures', 'have', '10', 'to', '20', 'layers', 'of', 'ReLUs', ',', 'hun', '-', 'dreds', 'of', 'millions', 'of', 'weights', ',', 'and', 'billions', 'of', 'connections', 'between', 'units', '.'] 

 UPOS tags are: 
>> [('Recent', 'ADJ'), ('ConvNet', 'PROPN'), ('architectures', 'NOUN'), ('have', 'VERB'), ('10', 'NUM'), ('to', 'ADP'), ('20', 'NUM'), ('layers', 'NOUN'), ('of', 'ADP'), ('ReLUs', 'PROPN'), (',', 'PUNCT'), ('hun', 'NOUN'), ('-', 'PUNCT'), ('dreds', 'NOUN'), ('of', 'ADP'), ('millions', 'NOUN'), ('of', 'ADP'), ('weights', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('billions', 'NOUN'), ('of', 'ADP'), ('connections', 'NOUN'), ('between', 'ADP'), ('units', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Recent', 'JJ'), ('ConvNet', 'NNP'), ('architectures', 'NNS'), ('have', 'VBP'), ('10', 'CD'), ('to', 'IN'), ('20', 'CD'), ('layers', 'NNS'), ('of', 'IN'), ('ReLUs', 'NNP'), (',', ','), ('hun', 'NN'), ('-', 'HYPH'), ('dreds', 'NNS'), ('of', 'IN'), ('millions', 'NNS'), ('of', 'IN'), ('weights', 'NNS'), (',', ','), ('and', 'CC'), ('billions', 'NNS'), ('of', 'IN'), ('connections', 'NNS'), ('between', 'IN'), ('units', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Recent', 'Recent'), ('ConvNet', 'ConvNet'), ('architectures', 'architecture'), ('have', 'have'), ('10', '10'), ('to', 'to'), ('20', '20'), ('layers', 'layer'), ('of', 'of'), ('ReLUs', 'ReLUs'), (',', ','), ('hun', 'hun'), ('-', '-'), ('dreds', 'dreds'), ('of', 'of'), ('millions', 'million'), ('of', 'of'), ('weights', 'weight'), (',', ','), ('and', 'and'), ('billions', 'billion'), ('of', 'of'), ('connections', 'connection'), ('between', 'between'), ('units', 'unit'), ('.', '.')] 

 Dependency tags are: 
>> [(('Recent', 'architectures'), 'amod'), (('ConvNet', 'architectures'), 'compound'), (('architectures', 'have'), 'nsubj'), (('have', 'root'), 'root'), (('10', 'layers'), 'nummod'), (('to', '20'), 'case'), (('20', '10'), 'nmod'), (('layers', 'have'), 'obj'), (('of', 'ReLUs'), 'case'), (('ReLUs', 'layers'), 'nmod'), ((',', 'ReLUs'), 'punct'), (('hun', 'dreds'), 'compound'), (('-', 'dreds'), 'punct'), (('dreds', 'ReLUs'), 'appos'), (('of', 'millions'), 'case'), (('millions', 'dreds'), 'nmod'), (('of', 'weights'), 'case'), (('weights', 'millions'), 'nmod'), ((',', 'billions'), 'punct'), (('and', 'billions'), 'cc'), (('billions', 'ReLUs'), 'conj'), (('of', 'connections'), 'case'), (('connections', 'billions'), 'nmod'), (('between', 'units'), 'case'), (('units', 'connections'), 'nmod'), (('.', 'have'), 'punct')]

 Named Entites are: 
>> [('ConvNet', 'ORG'), ('10 to 20', 'CARDINAL'), ('millions', 'CARDINAL'), ('billions', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Whereas training such large networks could have taken weeks  only two years ago, progress in hardware, software and algorithm  parallelization have reduced training times to a few hours. 

Tokens are: 
>> ['Whereas', 'training', 'such', 'large', 'networks', 'could', 'have', 'taken', 'weeks', 'only', 'two', 'years', 'ago', ',', 'progress', 'in', 'hardware', ',', 'software', 'and', 'algorithm', 'parallelization', 'have', 'reduced', 'training', 'times', 'to', 'a', 'few', 'hours', '.'] 

 UPOS tags are: 
>> [('Whereas', 'SCONJ'), ('training', 'VERB'), ('such', 'ADJ'), ('large', 'ADJ'), ('networks', 'NOUN'), ('could', 'AUX'), ('have', 'AUX'), ('taken', 'VERB'), ('weeks', 'NOUN'), ('only', 'ADV'), ('two', 'NUM'), ('years', 'NOUN'), ('ago', 'ADV'), (',', 'PUNCT'), ('progress', 'NOUN'), ('in', 'ADP'), ('hardware', 'NOUN'), (',', 'PUNCT'), ('software', 'NOUN'), ('and', 'CCONJ'), ('algorithm', 'NOUN'), ('parallelization', 'NOUN'), ('have', 'AUX'), ('reduced', 'VERB'), ('training', 'NOUN'), ('times', 'NOUN'), ('to', 'ADP'), ('a', 'DET'), ('few', 'ADJ'), ('hours', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Whereas', 'IN'), ('training', 'VBG'), ('such', 'JJ'), ('large', 'JJ'), ('networks', 'NNS'), ('could', 'MD'), ('have', 'VB'), ('taken', 'VBN'), ('weeks', 'NNS'), ('only', 'RB'), ('two', 'CD'), ('years', 'NNS'), ('ago', 'RB'), (',', ','), ('progress', 'NN'), ('in', 'IN'), ('hardware', 'NN'), (',', ','), ('software', 'NN'), ('and', 'CC'), ('algorithm', 'NN'), ('parallelization', 'NN'), ('have', 'VBP'), ('reduced', 'VBN'), ('training', 'NN'), ('times', 'NNS'), ('to', 'IN'), ('a', 'DT'), ('few', 'JJ'), ('hours', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Whereas', 'whereas'), ('training', 'train'), ('such', 'such'), ('large', 'large'), ('networks', 'network'), ('could', 'could'), ('have', 'have'), ('taken', 'take'), ('weeks', 'week'), ('only', 'only'), ('two', 'two'), ('years', 'year'), ('ago', 'ago'), (',', ','), ('progress', 'progress'), ('in', 'in'), ('hardware', 'hardware'), (',', ','), ('software', 'software'), ('and', 'and'), ('algorithm', 'algorithm'), ('parallelization', 'parallelization'), ('have', 'have'), ('reduced', 'reduce'), ('training', 'training'), ('times', 'time'), ('to', 'to'), ('a', 'a'), ('few', 'few'), ('hours', 'hour'), ('.', '.')] 

 Dependency tags are: 
>> [(('Whereas', 'taken'), 'mark'), (('training', 'taken'), 'csubj'), (('such', 'networks'), 'amod'), (('large', 'networks'), 'amod'), (('networks', 'training'), 'obj'), (('could', 'taken'), 'aux'), (('have', 'taken'), 'aux'), (('taken', 'reduced'), 'advcl'), (('weeks', 'taken'), 'obj'), (('only', 'years'), 'advmod'), (('two', 'years'), 'nummod'), (('years', 'ago'), 'obl:tmod'), (('ago', 'taken'), 'advmod'), ((',', 'reduced'), 'punct'), (('progress', 'reduced'), 'nsubj'), (('in', 'hardware'), 'case'), (('hardware', 'progress'), 'nmod'), ((',', 'software'), 'punct'), (('software', 'hardware'), 'conj'), (('and', 'parallelization'), 'cc'), (('algorithm', 'parallelization'), 'compound'), (('parallelization', 'hardware'), 'conj'), (('have', 'reduced'), 'aux'), (('reduced', 'root'), 'root'), (('training', 'times'), 'compound'), (('times', 'reduced'), 'obj'), (('to', 'hours'), 'case'), (('a', 'hours'), 'det'), (('few', 'hours'), 'amod'), (('hours', 'reduced'), 'obl'), (('.', 'reduced'), 'punct')]

 Named Entites are: 
>> [('weeks', 'DATE'), ('two years ago', 'DATE'), ('a few hours', 'TIME')]

================================ Paragraph 132 =================================

The performance of ConvNet-based vision systems has caused  most major technology companies, including Google, Facebook,  


------------------- Sentence 1 -------------------

 The performance of ConvNet-based vision systems has caused  most major technology companies, including Google, Facebook, 

Tokens are: 
>> ['The', 'performance', 'of', 'ConvNet-based', 'vision', 'systems', 'has', 'caused', 'most', 'major', 'technology', 'companies', ',', 'including', 'Google', ',', 'Facebook', ','] 

 UPOS tags are: 
>> [('The', 'DET'), ('performance', 'NOUN'), ('of', 'ADP'), ('ConvNet-based', 'ADJ'), ('vision', 'NOUN'), ('systems', 'NOUN'), ('has', 'AUX'), ('caused', 'VERB'), ('most', 'ADV'), ('major', 'ADJ'), ('technology', 'NOUN'), ('companies', 'NOUN'), (',', 'PUNCT'), ('including', 'VERB'), ('Google', 'PROPN'), (',', 'PUNCT'), ('Facebook', 'PROPN'), (',', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('performance', 'NN'), ('of', 'IN'), ('ConvNet-based', 'JJ'), ('vision', 'NN'), ('systems', 'NNS'), ('has', 'VBZ'), ('caused', 'VBN'), ('most', 'RBS'), ('major', 'JJ'), ('technology', 'NN'), ('companies', 'NNS'), (',', ','), ('including', 'VBG'), ('Google', 'NNP'), (',', ','), ('Facebook', 'NNP'), (',', ',')] 

 Lemmas are: 
>> [('The', 'the'), ('performance', 'performance'), ('of', 'of'), ('ConvNet-based', 'convnet-based'), ('vision', 'vision'), ('systems', 'system'), ('has', 'have'), ('caused', 'cause'), ('most', 'most'), ('major', 'major'), ('technology', 'technology'), ('companies', 'company'), (',', ','), ('including', 'include'), ('Google', 'Google'), (',', ','), ('Facebook', 'Facebook'), (',', ',')] 

 Dependency tags are: 
>> [(('The', 'performance'), 'det'), (('performance', 'caused'), 'nsubj'), (('of', 'systems'), 'case'), (('ConvNet-based', 'systems'), 'amod'), (('vision', 'systems'), 'compound'), (('systems', 'performance'), 'nmod'), (('has', 'caused'), 'aux'), (('caused', 'root'), 'root'), (('most', 'major'), 'advmod'), (('major', 'companies'), 'amod'), (('technology', 'companies'), 'compound'), (('companies', 'caused'), 'obj'), ((',', 'companies'), 'punct'), (('including', 'Google'), 'case'), (('Google', 'companies'), 'nmod'), ((',', 'Facebook'), 'punct'), (('Facebook', 'Google'), 'appos'), ((',', 'caused'), 'punct')]

 Named Entites are: 
>> [('Google', 'ORG'), ('Facebook', 'ORG')]

================================ Paragraph 133 =================================

Microsoft, IBM, Yahoo!, Twitter and Adobe, as well as a quickly  growing number of start-ups to initiate research and development  projects and to deploy ConvNet-based image understanding products  and services.  


------------------- Sentence 1 -------------------

 Microsoft, IBM, Yahoo!, 

Tokens are: 
>> ['Microsoft', ',', 'IBM', ',', 'Yahoo', '!', ','] 

 UPOS tags are: 
>> [('Microsoft', 'PROPN'), (',', 'PUNCT'), ('IBM', 'PROPN'), (',', 'PUNCT'), ('Yahoo', 'PROPN'), ('!', 'PUNCT'), (',', 'PUNCT')] 

 XPOS tags are: 
>> [('Microsoft', 'NNP'), (',', ','), ('IBM', 'NNP'), (',', ','), ('Yahoo', 'NNP'), ('!', '.'), (',', ',')] 

 Lemmas are: 
>> [('Microsoft', 'Microsoft'), (',', ','), ('IBM', 'IBM'), (',', ','), ('Yahoo', 'Yahoo'), ('!', '!'), (',', ',')] 

 Dependency tags are: 
>> [(('Microsoft', 'root'), 'root'), ((',', 'IBM'), 'punct'), (('IBM', 'Microsoft'), 'conj'), ((',', 'Yahoo'), 'punct'), (('Yahoo', 'Microsoft'), 'appos'), (('!', 'Microsoft'), 'punct'), ((',', 'Microsoft'), 'punct')]

 Named Entites are: 
>> [('Microsoft', 'ORG'), ('IBM', 'ORG'), ('Yahoo', 'ORG')]

------------------- Sentence 2 -------------------

 Twitter and Adobe, as well as a quickly  growing number of start-ups to initiate research and development  projects and to deploy ConvNet-based image understanding products  and services. 

Tokens are: 
>> ['Twitter', 'and', 'Adobe', ',', 'as', 'well', 'as', 'a', 'quickly', 'growing', 'number', 'of', 'start', '-ups', 'to', 'initiate', 'research', 'and', 'development', 'projects', 'and', 'to', 'deploy', 'ConvNet', '-based', 'image', 'understanding', 'products', 'and', 'services', '.'] 

 UPOS tags are: 
>> [('Twitter', 'PROPN'), ('and', 'CCONJ'), ('Adobe', 'PROPN'), (',', 'PUNCT'), ('as', 'ADV'), ('well', 'ADV'), ('as', 'ADP'), ('a', 'DET'), ('quickly', 'ADV'), ('growing', 'VERB'), ('number', 'NOUN'), ('of', 'ADP'), ('start', 'NOUN'), ('-ups', 'NOUN'), ('to', 'PART'), ('initiate', 'VERB'), ('research', 'NOUN'), ('and', 'CCONJ'), ('development', 'NOUN'), ('projects', 'NOUN'), ('and', 'CCONJ'), ('to', 'PART'), ('deploy', 'VERB'), ('ConvNet', 'PROPN'), ('-based', 'VERB'), ('image', 'NOUN'), ('understanding', 'NOUN'), ('products', 'NOUN'), ('and', 'CCONJ'), ('services', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Twitter', 'NNP'), ('and', 'CC'), ('Adobe', 'NNP'), (',', ','), ('as', 'RB'), ('well', 'RB'), ('as', 'IN'), ('a', 'DT'), ('quickly', 'RB'), ('growing', 'VBG'), ('number', 'NN'), ('of', 'IN'), ('start', 'NN'), ('-ups', 'NNS'), ('to', 'TO'), ('initiate', 'VB'), ('research', 'NN'), ('and', 'CC'), ('development', 'NN'), ('projects', 'NNS'), ('and', 'CC'), ('to', 'TO'), ('deploy', 'VB'), ('ConvNet', 'NNP'), ('-based', 'VBN'), ('image', 'NN'), ('understanding', 'NN'), ('products', 'NNS'), ('and', 'CC'), ('services', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Twitter', 'Twitter'), ('and', 'and'), ('Adobe', 'Adobe'), (',', ','), ('as', 'as'), ('well', 'well'), ('as', 'as'), ('a', 'a'), ('quickly', 'quickly'), ('growing', 'grow'), ('number', 'number'), ('of', 'of'), ('start', 'start'), ('-ups', '-up'), ('to', 'to'), ('initiate', 'initiate'), ('research', 'research'), ('and', 'and'), ('development', 'development'), ('projects', 'project'), ('and', 'and'), ('to', 'to'), ('deploy', 'deploy'), ('ConvNet', 'ConvNet'), ('-based', '-base'), ('image', 'image'), ('understanding', 'understanding'), ('products', 'product'), ('and', 'and'), ('services', 'service'), ('.', '.')] 

 Dependency tags are: 
>> [(('Twitter', 'root'), 'root'), (('and', 'Adobe'), 'cc'), (('Adobe', 'Twitter'), 'conj'), ((',', 'number'), 'punct'), (('as', 'number'), 'cc'), (('well', 'as'), 'fixed'), (('as', 'as'), 'fixed'), (('a', 'number'), 'det'), (('quickly', 'growing'), 'advmod'), (('growing', 'number'), 'amod'), (('number', 'Twitter'), 'conj'), (('of', '-ups'), 'case'), (('start', '-ups'), 'compound'), (('-ups', 'number'), 'nmod'), (('to', 'initiate'), 'mark'), (('initiate', 'number'), 'acl'), (('research', 'projects'), 'compound'), (('and', 'development'), 'cc'), (('development', 'research'), 'conj'), (('projects', 'initiate'), 'obj'), (('and', 'deploy'), 'cc'), (('to', 'deploy'), 'mark'), (('deploy', 'initiate'), 'conj'), (('ConvNet', 'products'), 'compound'), (('-based', 'products'), 'amod'), (('image', 'products'), 'compound'), (('understanding', 'products'), 'compound'), (('products', 'deploy'), 'obj'), (('and', 'services'), 'cc'), (('services', 'products'), 'conj'), (('.', 'Twitter'), 'punct')]

 Named Entites are: 
>> [('Twitter', 'ORG'), ('Adobe', 'ORG'), ('ConvNet', 'ORG')]

================================ Paragraph 134 =================================

ConvNets are easily amenable to efficient hardware implemen- tations in chips or field-programmable gate arrays66,67. A number  of companies such as NVIDIA, Mobileye, Intel, Qualcomm and  Samsung are developing ConvNet chips to enable real-time vision  applications in smartphones, cameras, robots and self-driving cars.  


------------------- Sentence 1 -------------------

 ConvNets are easily amenable to efficient hardware implemen- tations in chips or field-programmable gate arrays 

Tokens are: 
>> ['ConvNets', 'are', 'easily', 'amenable', 'to', 'efficient', 'hardware', 'implemen', '-', 'tations', 'in', 'chips', 'or', 'field', '-', 'programmable', 'gate', 'array', 's'] 

 UPOS tags are: 
>> [('ConvNets', 'NOUN'), ('are', 'AUX'), ('easily', 'ADV'), ('amenable', 'ADJ'), ('to', 'ADP'), ('efficient', 'ADJ'), ('hardware', 'NOUN'), ('implemen', 'NOUN'), ('-', 'PUNCT'), ('tations', 'NOUN'), ('in', 'ADP'), ('chips', 'NOUN'), ('or', 'CCONJ'), ('field', 'NOUN'), ('-', 'PUNCT'), ('programmable', 'ADJ'), ('gate', 'NOUN'), ('array', 'NOUN'), ('s', 'PART')] 

 XPOS tags are: 
>> [('ConvNets', 'NNS'), ('are', 'VBP'), ('easily', 'RB'), ('amenable', 'JJ'), ('to', 'IN'), ('efficient', 'JJ'), ('hardware', 'NN'), ('implemen', 'NN'), ('-', 'HYPH'), ('tations', 'NNS'), ('in', 'IN'), ('chips', 'NNS'), ('or', 'CC'), ('field', 'NN'), ('-', 'HYPH'), ('programmable', 'JJ'), ('gate', 'NN'), ('array', 'NN'), ('s', 'POS')] 

 Lemmas are: 
>> [('ConvNets', 'convNet'), ('are', 'be'), ('easily', 'easily'), ('amenable', 'amenable'), ('to', 'to'), ('efficient', 'efficient'), ('hardware', 'hardware'), ('implemen', 'impleman'), ('-', '-'), ('tations', 'tation'), ('in', 'in'), ('chips', 'chip'), ('or', 'or'), ('field', 'field'), ('-', '-'), ('programmable', 'programmable'), ('gate', 'gate'), ('array', 'array'), ('s', "'s")] 

 Dependency tags are: 
>> [(('ConvNets', 'amenable'), 'nsubj'), (('are', 'amenable'), 'cop'), (('easily', 'amenable'), 'advmod'), (('amenable', 'root'), 'root'), (('to', 'tations'), 'case'), (('efficient', 'tations'), 'amod'), (('hardware', 'tations'), 'compound'), (('implemen', 'tations'), 'compound'), (('-', 'tations'), 'punct'), (('tations', 'amenable'), 'obl'), (('in', 'chips'), 'case'), (('chips', 'tations'), 'nmod'), (('or', 'array'), 'cc'), (('field', 'programmable'), 'compound'), (('-', 'programmable'), 'punct'), (('programmable', 'array'), 'amod'), (('gate', 'array'), 'compound'), (('array', 'chips'), 'conj'), (('s', 'array'), 'case')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 66,67. 

Tokens are: 
>> ['66,67', '.'] 

 UPOS tags are: 
>> [('66,67', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('66,67', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('66,67', '6667'), ('.', '.')] 

 Dependency tags are: 
>> [(('66,67', 'root'), 'root'), (('.', '66,67'), 'punct')]

 Named Entites are: 
>> [('66,67', 'CARDINAL')]

------------------- Sentence 3 -------------------

 A number  of companies such as NVIDIA, Mobileye, Intel, Qualcomm and  Samsung are developing ConvNet chips to enable real-time vision  applications in smartphones, cameras, robots and self-driving cars. 

Tokens are: 
>> ['A', 'number', 'of', 'companies', 'such', 'as', 'NVIDIA', ',', 'Mobileye', ',', 'Intel', ',', 'Qualcomm', 'and', 'Samsung', 'are', 'developing', 'ConvNet', 'chips', 'to', 'enable', 'real', '-', 'time', 'vision', 'applications', 'in', 'smartphones', ',', 'cameras', ',', 'robots', 'and', 'self-driving', 'cars', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('number', 'NOUN'), ('of', 'ADP'), ('companies', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('NVIDIA', 'PROPN'), (',', 'PUNCT'), ('Mobileye', 'PROPN'), (',', 'PUNCT'), ('Intel', 'PROPN'), (',', 'PUNCT'), ('Qualcomm', 'PROPN'), ('and', 'CCONJ'), ('Samsung', 'PROPN'), ('are', 'AUX'), ('developing', 'VERB'), ('ConvNet', 'PROPN'), ('chips', 'NOUN'), ('to', 'PART'), ('enable', 'VERB'), ('real', 'ADJ'), ('-', 'PUNCT'), ('time', 'NOUN'), ('vision', 'NOUN'), ('applications', 'NOUN'), ('in', 'ADP'), ('smartphones', 'NOUN'), (',', 'PUNCT'), ('cameras', 'NOUN'), (',', 'PUNCT'), ('robots', 'NOUN'), ('and', 'CCONJ'), ('self-driving', 'VERB'), ('cars', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('number', 'NN'), ('of', 'IN'), ('companies', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('NVIDIA', 'NNP'), (',', ','), ('Mobileye', 'NNP'), (',', ','), ('Intel', 'NNP'), (',', ','), ('Qualcomm', 'NNP'), ('and', 'CC'), ('Samsung', 'NNP'), ('are', 'VBP'), ('developing', 'VBG'), ('ConvNet', 'NNP'), ('chips', 'NNS'), ('to', 'TO'), ('enable', 'VB'), ('real', 'JJ'), ('-', 'HYPH'), ('time', 'NN'), ('vision', 'NN'), ('applications', 'NNS'), ('in', 'IN'), ('smartphones', 'NNS'), (',', ','), ('cameras', 'NNS'), (',', ','), ('robots', 'NNS'), ('and', 'CC'), ('self-driving', 'VBG'), ('cars', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('number', 'number'), ('of', 'of'), ('companies', 'company'), ('such', 'such'), ('as', 'as'), ('NVIDIA', 'NVIDIA'), (',', ','), ('Mobileye', 'Mobileye'), (',', ','), ('Intel', 'Intel'), (',', ','), ('Qualcomm', 'Qualcomm'), ('and', 'and'), ('Samsung', 'Samsung'), ('are', 'be'), ('developing', 'develop'), ('ConvNet', 'ConvNet'), ('chips', 'chip'), ('to', 'to'), ('enable', 'enable'), ('real', 'real'), ('-', '-'), ('time', 'time'), ('vision', 'vision'), ('applications', 'application'), ('in', 'in'), ('smartphones', 'smartphone'), (',', ','), ('cameras', 'camera'), (',', ','), ('robots', 'robot'), ('and', 'and'), ('self-driving', 'self-drive'), ('cars', 'car'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'number'), 'det'), (('number', 'developing'), 'nsubj'), (('of', 'companies'), 'case'), (('companies', 'number'), 'nmod'), (('such', 'NVIDIA'), 'case'), (('as', 'such'), 'fixed'), (('NVIDIA', 'companies'), 'nmod'), ((',', 'Mobileye'), 'punct'), (('Mobileye', 'NVIDIA'), 'conj'), ((',', 'Intel'), 'punct'), (('Intel', 'NVIDIA'), 'conj'), ((',', 'Qualcomm'), 'punct'), (('Qualcomm', 'NVIDIA'), 'conj'), (('and', 'Samsung'), 'cc'), (('Samsung', 'NVIDIA'), 'conj'), (('are', 'developing'), 'aux'), (('developing', 'root'), 'root'), (('ConvNet', 'chips'), 'compound'), (('chips', 'developing'), 'obj'), (('to', 'enable'), 'mark'), (('enable', 'developing'), 'xcomp'), (('real', 'time'), 'amod'), (('-', 'time'), 'punct'), (('time', 'applications'), 'compound'), (('vision', 'applications'), 'compound'), (('applications', 'enable'), 'obj'), (('in', 'smartphones'), 'case'), (('smartphones', 'applications'), 'nmod'), ((',', 'cameras'), 'punct'), (('cameras', 'smartphones'), 'conj'), ((',', 'robots'), 'punct'), (('robots', 'smartphones'), 'conj'), (('and', 'cars'), 'cc'), (('self-driving', 'cars'), 'amod'), (('cars', 'smartphones'), 'conj'), (('.', 'developing'), 'punct')]

 Named Entites are: 
>> [('NVIDIA', 'ORG'), ('Mobileye', 'ORG'), ('Intel', 'ORG'), ('Qualcomm', 'ORG'), ('Samsung', 'ORG'), ('ConvNet', 'PRODUCT')]

================================ Paragraph 135 =================================

Distributed representations and language processing  Deep-learning theory shows that deep nets have two different expo- nential advantages over classic learning algorithms that do not use  distributed representations21. Both of these advantages arise from the  power of composition and depend on the underlying data-generating  distribution having an appropriate componential structure40. First,  learning distributed representations enable generalization to new  combinations of the values of learned features beyond those seen  during training (for example, 2n combinations are possible with n  binary features)68,69. Second, composing layers of representation in  a deep net brings the potential for another exponential advantage70  (exponential in the depth).  


------------------- Sentence 1 -------------------

 Distributed representations and language processing  Deep-learning theory shows that deep nets have two different expo- nential advantages over classic learning algorithms that do not use  distributed representations 

Tokens are: 
>> ['Distributed', 'representations', 'and', 'language', 'processing', 'Deep-learning', 'theory', 'shows', 'that', 'deep', 'nets', 'have', 'two', 'different', 'expo-', 'nential', 'advantages', 'over', 'classic', 'learning', 'algorithms', 'that', 'do', 'not', 'use', 'distributed', 'representation', 's'] 

 UPOS tags are: 
>> [('Distributed', 'VERB'), ('representations', 'NOUN'), ('and', 'CCONJ'), ('language', 'NOUN'), ('processing', 'VERB'), ('Deep-learning', 'ADJ'), ('theory', 'NOUN'), ('shows', 'VERB'), ('that', 'SCONJ'), ('deep', 'ADJ'), ('nets', 'NOUN'), ('have', 'VERB'), ('two', 'NUM'), ('different', 'ADJ'), ('expo-', 'NOUN'), ('nential', 'ADJ'), ('advantages', 'NOUN'), ('over', 'ADP'), ('classic', 'ADJ'), ('learning', 'NOUN'), ('algorithms', 'NOUN'), ('that', 'PRON'), ('do', 'AUX'), ('not', 'PART'), ('use', 'VERB'), ('distributed', 'VERB'), ('representation', 'NOUN'), ('s', 'PART')] 

 XPOS tags are: 
>> [('Distributed', 'VBN'), ('representations', 'NNS'), ('and', 'CC'), ('language', 'NN'), ('processing', 'VBG'), ('Deep-learning', 'JJ'), ('theory', 'NN'), ('shows', 'VBZ'), ('that', 'IN'), ('deep', 'JJ'), ('nets', 'NNS'), ('have', 'VBP'), ('two', 'CD'), ('different', 'JJ'), ('expo-', 'NN'), ('nential', 'JJ'), ('advantages', 'NNS'), ('over', 'IN'), ('classic', 'JJ'), ('learning', 'NN'), ('algorithms', 'NNS'), ('that', 'WDT'), ('do', 'VBP'), ('not', 'RB'), ('use', 'VB'), ('distributed', 'VBN'), ('representation', 'NN'), ('s', 'POS')] 

 Lemmas are: 
>> [('Distributed', 'distribute'), ('representations', 'representation'), ('and', 'and'), ('language', 'language'), ('processing', 'process'), ('Deep-learning', 'Deep-learning'), ('theory', 'theory'), ('shows', 'show'), ('that', 'that'), ('deep', 'deep'), ('nets', 'net'), ('have', 'have'), ('two', 'two'), ('different', 'different'), ('expo-', 'expo-'), ('nential', 'nential'), ('advantages', 'advantage'), ('over', 'over'), ('classic', 'classic'), ('learning', 'learning'), ('algorithms', 'algorithm'), ('that', 'that'), ('do', 'do'), ('not', 'not'), ('use', 'use'), ('distributed', 'distribute'), ('representation', 'representation'), ('s', "'s")] 

 Dependency tags are: 
>> [(('Distributed', 'representations'), 'amod'), (('representations', 'shows'), 'nsubj'), (('and', 'language'), 'cc'), (('language', 'representations'), 'conj'), (('processing', 'representations'), 'acl'), (('Deep-learning', 'theory'), 'amod'), (('theory', 'processing'), 'obj'), (('shows', 'root'), 'root'), (('that', 'have'), 'mark'), (('deep', 'nets'), 'amod'), (('nets', 'have'), 'nsubj'), (('have', 'shows'), 'ccomp'), (('two', 'advantages'), 'nummod'), (('different', 'advantages'), 'amod'), (('expo-', 'advantages'), 'compound'), (('nential', 'advantages'), 'amod'), (('advantages', 'have'), 'obj'), (('over', 'algorithms'), 'case'), (('classic', 'algorithms'), 'amod'), (('learning', 'algorithms'), 'compound'), (('algorithms', 'advantages'), 'nmod'), (('that', 'use'), 'nsubj'), (('do', 'use'), 'aux'), (('not', 'use'), 'advmod'), (('use', 'algorithms'), 'acl:relcl'), (('distributed', 'representation'), 'amod'), (('representation', 'use'), 'obj'), (('s', 'representation'), 'case')]

 Named Entites are: 
>> [('two', 'CARDINAL')]

------------------- Sentence 2 -------------------

 21. Both of these advantages arise from the  power of composition and depend on the underlying data-generating  distribution having an appropriate componential structure40. 

Tokens are: 
>> ['21', '.', 'Both', 'of', 'these', 'advantages', 'arise', 'from', 'the', 'power', 'of', 'composition', 'and', 'depend', 'on', 'the', 'underlying', 'data-generating', 'distribution', 'having', 'an', 'appropriate', 'componential', 'structure', '40', '.'] 

 UPOS tags are: 
>> [('21', 'NUM'), ('.', 'PUNCT'), ('Both', 'DET'), ('of', 'ADP'), ('these', 'DET'), ('advantages', 'NOUN'), ('arise', 'VERB'), ('from', 'ADP'), ('the', 'DET'), ('power', 'NOUN'), ('of', 'ADP'), ('composition', 'NOUN'), ('and', 'CCONJ'), ('depend', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('underlying', 'VERB'), ('data-generating', 'VERB'), ('distribution', 'NOUN'), ('having', 'VERB'), ('an', 'DET'), ('appropriate', 'ADJ'), ('componential', 'ADJ'), ('structure', 'NOUN'), ('40', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('21', 'LS'), ('.', '.'), ('Both', 'DT'), ('of', 'IN'), ('these', 'DT'), ('advantages', 'NNS'), ('arise', 'VBP'), ('from', 'IN'), ('the', 'DT'), ('power', 'NN'), ('of', 'IN'), ('composition', 'NN'), ('and', 'CC'), ('depend', 'VBP'), ('on', 'IN'), ('the', 'DT'), ('underlying', 'VBG'), ('data-generating', 'VBG'), ('distribution', 'NN'), ('having', 'VBG'), ('an', 'DT'), ('appropriate', 'JJ'), ('componential', 'JJ'), ('structure', 'NN'), ('40', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('21', '21'), ('.', '.'), ('Both', 'both'), ('of', 'of'), ('these', 'this'), ('advantages', 'advantage'), ('arise', 'arise'), ('from', 'from'), ('the', 'the'), ('power', 'power'), ('of', 'of'), ('composition', 'composition'), ('and', 'and'), ('depend', 'depend'), ('on', 'on'), ('the', 'the'), ('underlying', 'underlie'), ('data-generating', 'data-generate'), ('distribution', 'distribution'), ('having', 'have'), ('an', 'a'), ('appropriate', 'appropriate'), ('componential', 'componential'), ('structure', 'structure'), ('40', '40'), ('.', '.')] 

 Dependency tags are: 
>> [(('21', 'arise'), 'nummod'), (('.', '21'), 'punct'), (('Both', 'arise'), 'nsubj'), (('of', 'advantages'), 'case'), (('these', 'advantages'), 'det'), (('advantages', 'Both'), 'nmod'), (('arise', 'root'), 'root'), (('from', 'power'), 'case'), (('the', 'power'), 'det'), (('power', 'arise'), 'obl'), (('of', 'composition'), 'case'), (('composition', 'power'), 'nmod'), (('and', 'depend'), 'cc'), (('depend', 'arise'), 'conj'), (('on', 'distribution'), 'case'), (('the', 'distribution'), 'det'), (('underlying', 'distribution'), 'amod'), (('data-generating', 'distribution'), 'amod'), (('distribution', 'depend'), 'obl'), (('having', 'distribution'), 'acl'), (('an', 'structure'), 'det'), (('appropriate', 'structure'), 'amod'), (('componential', 'structure'), 'amod'), (('structure', 'having'), 'obj'), (('40', 'structure'), 'nummod'), (('.', 'arise'), 'punct')]

 Named Entites are: 
>> [('21', 'CARDINAL'), ('40', 'CARDINAL')]

------------------- Sentence 3 -------------------

 First,  learning distributed representations enable generalization to new  combinations of the values of learned features beyond those seen  during training (for example, 2n combinations are possible with n  binary features) 

Tokens are: 
>> ['First', ',', 'learning', 'distributed', 'representations', 'enable', 'generalization', 'to', 'new', 'combinations', 'of', 'the', 'values', 'of', 'learned', 'features', 'beyond', 'those', 'seen', 'during', 'training', '(', 'for', 'example', ',', '2n', 'combinations', 'are', 'possible', 'with', 'n', 'binary', 'features', ')'] 

 UPOS tags are: 
>> [('First', 'ADV'), (',', 'PUNCT'), ('learning', 'VERB'), ('distributed', 'VERB'), ('representations', 'NOUN'), ('enable', 'VERB'), ('generalization', 'NOUN'), ('to', 'ADP'), ('new', 'ADJ'), ('combinations', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('values', 'NOUN'), ('of', 'ADP'), ('learned', 'VERB'), ('features', 'NOUN'), ('beyond', 'ADP'), ('those', 'PRON'), ('seen', 'VERB'), ('during', 'ADP'), ('training', 'NOUN'), ('(', 'PUNCT'), ('for', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('2n', 'NOUN'), ('combinations', 'NOUN'), ('are', 'AUX'), ('possible', 'ADJ'), ('with', 'ADP'), ('n', 'NOUN'), ('binary', 'ADJ'), ('features', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('First', 'RB'), (',', ','), ('learning', 'VBG'), ('distributed', 'VBN'), ('representations', 'NNS'), ('enable', 'VBP'), ('generalization', 'NN'), ('to', 'IN'), ('new', 'JJ'), ('combinations', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('values', 'NNS'), ('of', 'IN'), ('learned', 'VBN'), ('features', 'NNS'), ('beyond', 'IN'), ('those', 'DT'), ('seen', 'VBN'), ('during', 'IN'), ('training', 'NN'), ('(', '-LRB-'), ('for', 'IN'), ('example', 'NN'), (',', ','), ('2n', 'NN'), ('combinations', 'NNS'), ('are', 'VBP'), ('possible', 'JJ'), ('with', 'IN'), ('n', 'NN'), ('binary', 'JJ'), ('features', 'NNS'), (')', '-RRB-')] 

 Lemmas are: 
>> [('First', 'first'), (',', ','), ('learning', 'learn'), ('distributed', 'distribute'), ('representations', 'representation'), ('enable', 'enable'), ('generalization', 'generalization'), ('to', 'to'), ('new', 'new'), ('combinations', 'combination'), ('of', 'of'), ('the', 'the'), ('values', 'value'), ('of', 'of'), ('learned', 'learn'), ('features', 'feature'), ('beyond', 'beyond'), ('those', 'that'), ('seen', 'see'), ('during', 'during'), ('training', 'training'), ('(', '('), ('for', 'for'), ('example', 'example'), (',', ','), ('2n', '2n'), ('combinations', 'combination'), ('are', 'be'), ('possible', 'possible'), ('with', 'with'), ('n', 'n'), ('binary', 'binary'), ('features', 'feature'), (')', ')')] 

 Dependency tags are: 
>> [(('First', 'enable'), 'advmod'), ((',', 'enable'), 'punct'), (('learning', 'representations'), 'amod'), (('distributed', 'representations'), 'amod'), (('representations', 'enable'), 'nsubj'), (('enable', 'root'), 'root'), (('generalization', 'enable'), 'obj'), (('to', 'combinations'), 'case'), (('new', 'combinations'), 'amod'), (('combinations', 'generalization'), 'nmod'), (('of', 'values'), 'case'), (('the', 'values'), 'det'), (('values', 'combinations'), 'nmod'), (('of', 'features'), 'case'), (('learned', 'features'), 'amod'), (('features', 'values'), 'nmod'), (('beyond', 'those'), 'case'), (('those', 'features'), 'nmod'), (('seen', 'those'), 'acl'), (('during', 'training'), 'case'), (('training', 'seen'), 'obl'), (('(', 'possible'), 'punct'), (('for', 'example'), 'case'), (('example', 'possible'), 'obl'), ((',', 'example'), 'punct'), (('2n', 'combinations'), 'compound'), (('combinations', 'possible'), 'nsubj'), (('are', 'possible'), 'cop'), (('possible', 'enable'), 'parataxis'), (('with', 'features'), 'case'), (('n', 'features'), 'compound'), (('binary', 'features'), 'amod'), (('features', 'possible'), 'obl'), ((')', 'possible'), 'punct')]

 Named Entites are: 
>> [('First', 'ORDINAL'), ('2n', 'CARDINAL')]

------------------- Sentence 4 -------------------

 68,69. 

Tokens are: 
>> ['68,69', '.'] 

 UPOS tags are: 
>> [('68,69', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('68,69', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('68,69', '6869'), ('.', '.')] 

 Dependency tags are: 
>> [(('68,69', 'root'), 'root'), (('.', '68,69'), 'punct')]

 Named Entites are: 
>> [('68,69', 'CARDINAL')]

------------------- Sentence 5 -------------------

 Second, composing layers of representation in  a deep net brings the potential for another exponential advantage70  (exponential in the depth). 

Tokens are: 
>> ['Second', ',', 'composing', 'layers', 'of', 'representation', 'in', 'a', 'deep', 'net', 'brings', 'the', 'potential', 'for', 'another', 'exponential', 'advantage70', '(', 'exponential', 'in', 'the', 'depth', ')', '.'] 

 UPOS tags are: 
>> [('Second', 'ADV'), (',', 'PUNCT'), ('composing', 'VERB'), ('layers', 'NOUN'), ('of', 'ADP'), ('representation', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('deep', 'ADJ'), ('net', 'NOUN'), ('brings', 'VERB'), ('the', 'DET'), ('potential', 'NOUN'), ('for', 'ADP'), ('another', 'DET'), ('exponential', 'ADJ'), ('advantage70', 'NOUN'), ('(', 'PUNCT'), ('exponential', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('depth', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Second', 'RB'), (',', ','), ('composing', 'VBG'), ('layers', 'NNS'), ('of', 'IN'), ('representation', 'NN'), ('in', 'IN'), ('a', 'DT'), ('deep', 'JJ'), ('net', 'NN'), ('brings', 'VBZ'), ('the', 'DT'), ('potential', 'NN'), ('for', 'IN'), ('another', 'DT'), ('exponential', 'JJ'), ('advantage70', 'NN'), ('(', '-LRB-'), ('exponential', 'NN'), ('in', 'IN'), ('the', 'DT'), ('depth', 'NN'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Second', 'second'), (',', ','), ('composing', 'compose'), ('layers', 'layer'), ('of', 'of'), ('representation', 'representation'), ('in', 'in'), ('a', 'a'), ('deep', 'deep'), ('net', 'net'), ('brings', 'bring'), ('the', 'the'), ('potential', 'potential'), ('for', 'for'), ('another', 'another'), ('exponential', 'exponential'), ('advantage70', 'advantage70'), ('(', '('), ('exponential', 'exponential'), ('in', 'in'), ('the', 'the'), ('depth', 'depth'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Second', 'brings'), 'advmod'), ((',', 'brings'), 'punct'), (('composing', 'brings'), 'csubj'), (('layers', 'composing'), 'obj'), (('of', 'representation'), 'case'), (('representation', 'layers'), 'nmod'), (('in', 'net'), 'case'), (('a', 'net'), 'det'), (('deep', 'net'), 'amod'), (('net', 'representation'), 'nmod'), (('brings', 'root'), 'root'), (('the', 'potential'), 'det'), (('potential', 'brings'), 'obj'), (('for', 'advantage70'), 'case'), (('another', 'advantage70'), 'det'), (('exponential', 'advantage70'), 'amod'), (('advantage70', 'potential'), 'nmod'), (('(', 'exponential'), 'punct'), (('exponential', 'advantage70'), 'appos'), (('in', 'depth'), 'case'), (('the', 'depth'), 'det'), (('depth', 'exponential'), 'nmod'), ((')', 'exponential'), 'punct'), (('.', 'brings'), 'punct')]

 Named Entites are: 
>> [('Second', 'ORDINAL')]

================================ Paragraph 136 =================================

The hidden layers of a multilayer neural network learn to repre- sent the network’s inputs in a way that makes it easy to predict the  target outputs. This is nicely demonstrated by training a multilayer  neural network to predict the next word in a sequence from a local  


------------------- Sentence 1 -------------------

 The hidden layers of a multilayer neural network learn to repre- sent the network’s inputs in a way that makes it easy to predict the  target outputs. 

Tokens are: 
>> ['The', 'hidden', 'layers', 'of', 'a', 'multilayer', 'neural', 'network', 'learn', 'to', 'repre', '-', 'sent', 'the', 'network', '’s', 'inputs', 'in', 'a', 'way', 'that', 'makes', 'it', 'easy', 'to', 'predict', 'the', 'target', 'outputs', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('hidden', 'VERB'), ('layers', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('multilayer', 'ADJ'), ('neural', 'ADJ'), ('network', 'NOUN'), ('learn', 'VERB'), ('to', 'PART'), ('repre', 'VERB'), ('-', 'PUNCT'), ('sent', 'VERB'), ('the', 'DET'), ('network', 'NOUN'), ('’s', 'PART'), ('inputs', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('way', 'NOUN'), ('that', 'PRON'), ('makes', 'VERB'), ('it', 'PRON'), ('easy', 'ADJ'), ('to', 'PART'), ('predict', 'VERB'), ('the', 'DET'), ('target', 'NOUN'), ('outputs', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('hidden', 'VBN'), ('layers', 'NNS'), ('of', 'IN'), ('a', 'DT'), ('multilayer', 'JJ'), ('neural', 'JJ'), ('network', 'NN'), ('learn', 'VBP'), ('to', 'TO'), ('repre', 'VB'), ('-', ','), ('sent', 'VBN'), ('the', 'DT'), ('network', 'NN'), ('’s', 'POS'), ('inputs', 'NNS'), ('in', 'IN'), ('a', 'DT'), ('way', 'NN'), ('that', 'WDT'), ('makes', 'VBZ'), ('it', 'PRP'), ('easy', 'JJ'), ('to', 'TO'), ('predict', 'VB'), ('the', 'DT'), ('target', 'NN'), ('outputs', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('hidden', 'hide'), ('layers', 'layer'), ('of', 'of'), ('a', 'a'), ('multilayer', 'multilayer'), ('neural', 'neural'), ('network', 'network'), ('learn', 'learn'), ('to', 'to'), ('repre', 'repre'), ('-', '-'), ('sent', 'send'), ('the', 'the'), ('network', 'network'), ('’s', "'s"), ('inputs', 'input'), ('in', 'in'), ('a', 'a'), ('way', 'way'), ('that', 'that'), ('makes', 'make'), ('it', 'it'), ('easy', 'easy'), ('to', 'to'), ('predict', 'predict'), ('the', 'the'), ('target', 'target'), ('outputs', 'output'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'layers'), 'det'), (('hidden', 'layers'), 'amod'), (('layers', 'learn'), 'nsubj'), (('of', 'network'), 'case'), (('a', 'network'), 'det'), (('multilayer', 'network'), 'amod'), (('neural', 'network'), 'amod'), (('network', 'layers'), 'nmod'), (('learn', 'root'), 'root'), (('to', 'repre'), 'mark'), (('repre', 'learn'), 'xcomp'), (('-', 'repre'), 'punct'), (('sent', 'repre'), 'advcl'), (('the', 'network'), 'det'), (('network', 'inputs'), 'nmod:poss'), (('’s', 'network'), 'case'), (('inputs', 'sent'), 'obj'), (('in', 'way'), 'case'), (('a', 'way'), 'det'), (('way', 'sent'), 'obl'), (('that', 'makes'), 'nsubj'), (('makes', 'way'), 'acl:relcl'), (('it', 'makes'), 'obj'), (('easy', 'makes'), 'xcomp'), (('to', 'predict'), 'mark'), (('predict', 'easy'), 'xcomp'), (('the', 'outputs'), 'det'), (('target', 'outputs'), 'compound'), (('outputs', 'predict'), 'obj'), (('.', 'learn'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 This is nicely demonstrated by training a multilayer  neural network to predict the next word in a sequence from a local 

Tokens are: 
>> ['This', 'is', 'nicely', 'demonstrated', 'by', 'training', 'a', 'multilayer', 'neural', 'network', 'to', 'predict', 'the', 'next', 'word', 'in', 'a', 'sequence', 'from', 'a', 'local'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('is', 'AUX'), ('nicely', 'ADV'), ('demonstrated', 'VERB'), ('by', 'SCONJ'), ('training', 'VERB'), ('a', 'DET'), ('multilayer', 'ADJ'), ('neural', 'ADJ'), ('network', 'NOUN'), ('to', 'PART'), ('predict', 'VERB'), ('the', 'DET'), ('next', 'ADJ'), ('word', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('sequence', 'NOUN'), ('from', 'ADP'), ('a', 'DET'), ('local', 'ADJ')] 

 XPOS tags are: 
>> [('This', 'DT'), ('is', 'VBZ'), ('nicely', 'RB'), ('demonstrated', 'VBN'), ('by', 'IN'), ('training', 'VBG'), ('a', 'DT'), ('multilayer', 'JJ'), ('neural', 'JJ'), ('network', 'NN'), ('to', 'TO'), ('predict', 'VB'), ('the', 'DT'), ('next', 'JJ'), ('word', 'NN'), ('in', 'IN'), ('a', 'DT'), ('sequence', 'NN'), ('from', 'IN'), ('a', 'DT'), ('local', 'JJ')] 

 Lemmas are: 
>> [('This', 'this'), ('is', 'be'), ('nicely', 'nicely'), ('demonstrated', 'demonstrate'), ('by', 'by'), ('training', 'train'), ('a', 'a'), ('multilayer', 'multilayer'), ('neural', 'neural'), ('network', 'network'), ('to', 'to'), ('predict', 'predict'), ('the', 'the'), ('next', 'next'), ('word', 'word'), ('in', 'in'), ('a', 'a'), ('sequence', 'sequence'), ('from', 'from'), ('a', 'a'), ('local', 'local')] 

 Dependency tags are: 
>> [(('This', 'demonstrated'), 'nsubj:pass'), (('is', 'demonstrated'), 'aux:pass'), (('nicely', 'demonstrated'), 'advmod'), (('demonstrated', 'root'), 'root'), (('by', 'training'), 'mark'), (('training', 'demonstrated'), 'advcl'), (('a', 'network'), 'det'), (('multilayer', 'network'), 'amod'), (('neural', 'network'), 'amod'), (('network', 'training'), 'obj'), (('to', 'predict'), 'mark'), (('predict', 'training'), 'advcl'), (('the', 'word'), 'det'), (('next', 'word'), 'amod'), (('word', 'predict'), 'obj'), (('in', 'sequence'), 'case'), (('a', 'sequence'), 'det'), (('sequence', 'predict'), 'obl'), (('from', 'local'), 'case'), (('a', 'local'), 'det'), (('local', 'sequence'), 'nmod')]

 Named Entites are: 
>> []

================================ Paragraph 137 =================================

Figure 3 | From image to text. Captions generated by a recurrent neural  network (RNN) taking, as extra input, the representation extracted by a deep  convolution neural network (CNN) from a test image, with the RNN trained to  ‘translate’ high-level representations of images into captions (top). Reproduced  


------------------- Sentence 1 -------------------

 Figure 3 | From image to text. 

Tokens are: 
>> ['Figure', '3', '|', 'From', 'image', 'to', 'text', '.'] 

 UPOS tags are: 
>> [('Figure', 'PROPN'), ('3', 'NUM'), ('|', 'PUNCT'), ('From', 'ADP'), ('image', 'NOUN'), ('to', 'ADP'), ('text', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Figure', 'NNP'), ('3', 'CD'), ('|', ','), ('From', 'IN'), ('image', 'NN'), ('to', 'IN'), ('text', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Figure', 'Figure'), ('3', '3'), ('|', '|'), ('From', 'from'), ('image', 'image'), ('to', 'to'), ('text', 'text'), ('.', '.')] 

 Dependency tags are: 
>> [(('Figure', 'root'), 'root'), (('3', 'Figure'), 'dep'), (('|', 'Figure'), 'punct'), (('From', 'image'), 'case'), (('image', 'Figure'), 'nmod'), (('to', 'text'), 'case'), (('text', 'image'), 'nmod'), (('.', 'Figure'), 'punct')]

 Named Entites are: 
>> [('3', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Captions generated by a recurrent neural  network (RNN) taking, as extra input, the representation extracted by a deep  convolution neural network (CNN) from a test image, with the RNN trained to  ‘translate’ high-level representations of images into captions (top). 

Tokens are: 
>> ['Captions', 'generated', 'by', 'a', 'recurrent', 'neural', 'network', '(', 'RNN', ')', 'taking', ',', 'as', 'extra', 'input', ',', 'the', 'representation', 'extracted', 'by', 'a', 'deep', 'convolution', 'neural', 'network', '(', 'CNN', ')', 'from', 'a', 'test', 'image', ',', 'with', 'the', 'RNN', 'trained', 'to', '‘', 'translate', '’', 'high', '-', 'level', 'representations', 'of', 'images', 'into', 'captions', '(', 'top', ')', '.'] 

 UPOS tags are: 
>> [('Captions', 'NOUN'), ('generated', 'VERB'), ('by', 'ADP'), ('a', 'DET'), ('recurrent', 'ADJ'), ('neural', 'ADJ'), ('network', 'NOUN'), ('(', 'PUNCT'), ('RNN', 'PROPN'), (')', 'PUNCT'), ('taking', 'VERB'), (',', 'PUNCT'), ('as', 'ADP'), ('extra', 'ADJ'), ('input', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('representation', 'NOUN'), ('extracted', 'VERB'), ('by', 'ADP'), ('a', 'DET'), ('deep', 'ADJ'), ('convolution', 'NOUN'), ('neural', 'ADJ'), ('network', 'NOUN'), ('(', 'PUNCT'), ('CNN', 'PROPN'), (')', 'PUNCT'), ('from', 'ADP'), ('a', 'DET'), ('test', 'NOUN'), ('image', 'NOUN'), (',', 'PUNCT'), ('with', 'ADP'), ('the', 'DET'), ('RNN', 'PROPN'), ('trained', 'VERB'), ('to', 'PART'), ('‘', 'PUNCT'), ('translate', 'VERB'), ('’', 'PUNCT'), ('high', 'ADJ'), ('-', 'PUNCT'), ('level', 'NOUN'), ('representations', 'NOUN'), ('of', 'ADP'), ('images', 'NOUN'), ('into', 'ADP'), ('captions', 'NOUN'), ('(', 'PUNCT'), ('top', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Captions', 'NNS'), ('generated', 'VBN'), ('by', 'IN'), ('a', 'DT'), ('recurrent', 'JJ'), ('neural', 'JJ'), ('network', 'NN'), ('(', '-LRB-'), ('RNN', 'NNP'), (')', '-RRB-'), ('taking', 'VBG'), (',', ','), ('as', 'IN'), ('extra', 'JJ'), ('input', 'NN'), (',', ','), ('the', 'DT'), ('representation', 'NN'), ('extracted', 'VBN'), ('by', 'IN'), ('a', 'DT'), ('deep', 'JJ'), ('convolution', 'NN'), ('neural', 'JJ'), ('network', 'NN'), ('(', '-LRB-'), ('CNN', 'NNP'), (')', '-RRB-'), ('from', 'IN'), ('a', 'DT'), ('test', 'NN'), ('image', 'NN'), (',', ','), ('with', 'IN'), ('the', 'DT'), ('RNN', 'NNP'), ('trained', 'VBN'), ('to', 'TO'), ('‘', '``'), ('translate', 'VB'), ('’', "''"), ('high', 'JJ'), ('-', 'HYPH'), ('level', 'NN'), ('representations', 'NNS'), ('of', 'IN'), ('images', 'NNS'), ('into', 'IN'), ('captions', 'NNS'), ('(', '-LRB-'), ('top', 'NN'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Captions', 'caption'), ('generated', 'generate'), ('by', 'by'), ('a', 'a'), ('recurrent', 'recurrent'), ('neural', 'neural'), ('network', 'network'), ('(', '('), ('RNN', 'RNN'), (')', ')'), ('taking', 'take'), (',', ','), ('as', 'as'), ('extra', 'extra'), ('input', 'input'), (',', ','), ('the', 'the'), ('representation', 'representation'), ('extracted', 'extract'), ('by', 'by'), ('a', 'a'), ('deep', 'deep'), ('convolution', 'convolution'), ('neural', 'neural'), ('network', 'network'), ('(', '('), ('CNN', 'CNN'), (')', ')'), ('from', 'from'), ('a', 'a'), ('test', 'test'), ('image', 'image'), (',', ','), ('with', 'with'), ('the', 'the'), ('RNN', 'RNN'), ('trained', 'train'), ('to', 'to'), ('‘', "'"), ('translate', 'translate'), ('’', "'"), ('high', 'high'), ('-', '-'), ('level', 'level'), ('representations', 'representation'), ('of', 'of'), ('images', 'image'), ('into', 'into'), ('captions', 'caption'), ('(', '('), ('top', 'top'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Captions', 'taking'), 'nsubj'), (('generated', 'Captions'), 'acl'), (('by', 'network'), 'case'), (('a', 'network'), 'det'), (('recurrent', 'network'), 'amod'), (('neural', 'network'), 'amod'), (('network', 'generated'), 'obl'), (('(', 'RNN'), 'punct'), (('RNN', 'network'), 'appos'), ((')', 'RNN'), 'punct'), (('taking', 'root'), 'root'), ((',', 'input'), 'punct'), (('as', 'input'), 'case'), (('extra', 'input'), 'amod'), (('input', 'taking'), 'obl'), ((',', 'representation'), 'punct'), (('the', 'representation'), 'det'), (('representation', 'input'), 'appos'), (('extracted', 'representation'), 'acl'), (('by', 'network'), 'case'), (('a', 'network'), 'det'), (('deep', 'network'), 'amod'), (('convolution', 'network'), 'compound'), (('neural', 'network'), 'amod'), (('network', 'extracted'), 'obl'), (('(', 'CNN'), 'punct'), (('CNN', 'network'), 'appos'), ((')', 'CNN'), 'punct'), (('from', 'image'), 'case'), (('a', 'image'), 'det'), (('test', 'image'), 'compound'), (('image', 'network'), 'nmod'), ((',', 'trained'), 'punct'), (('with', 'RNN'), 'case'), (('the', 'RNN'), 'det'), (('RNN', 'image'), 'nmod'), (('trained', 'RNN'), 'acl'), (('to', 'translate'), 'mark'), (('‘', 'translate'), 'punct'), (('translate', 'trained'), 'xcomp'), (('’', 'translate'), 'punct'), (('high', 'level'), 'amod'), (('-', 'level'), 'punct'), (('level', 'representations'), 'compound'), (('representations', 'translate'), 'obj'), (('of', 'images'), 'case'), (('images', 'representations'), 'nmod'), (('into', 'captions'), 'case'), (('captions', 'representations'), 'nmod'), (('(', 'top'), 'punct'), (('top', 'captions'), 'appos'), ((')', 'top'), 'punct'), (('.', 'Captions'), 'punct')]

 Named Entites are: 
>> [('CNN', 'ORG')]

------------------- Sentence 3 -------------------

 Reproduced 

Tokens are: 
>> ['Reproduced'] 

 UPOS tags are: 
>> [('Reproduced', 'VERB')] 

 XPOS tags are: 
>> [('Reproduced', 'VBN')] 

 Lemmas are: 
>> [('Reproduced', 'reproduce')] 

 Dependency tags are: 
>> [(('Reproduced', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 138 =================================

with permission from ref. 102. When the RNN is given the ability to focus its  attention on a different location in the input image (middle and bottom; the  lighter patches were given more attention) as it generates each word (bold), we  found86 that it exploits this to achieve better ‘translation’ of images into captions. 


------------------- Sentence 1 -------------------

 with permission from ref. 

Tokens are: 
>> ['with', 'permission', 'from', 'ref', '.'] 

 UPOS tags are: 
>> [('with', 'ADP'), ('permission', 'NOUN'), ('from', 'ADP'), ('ref', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('with', 'IN'), ('permission', 'NN'), ('from', 'IN'), ('ref', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('with', 'with'), ('permission', 'permission'), ('from', 'from'), ('ref', 'ref'), ('.', '.')] 

 Dependency tags are: 
>> [(('with', 'permission'), 'case'), (('permission', 'root'), 'root'), (('from', 'ref'), 'case'), (('ref', 'permission'), 'nmod'), (('.', 'permission'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 102. 

Tokens are: 
>> ['102', '.'] 

 UPOS tags are: 
>> [('102', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('102', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('102', '102'), ('.', '.')] 

 Dependency tags are: 
>> [(('102', 'root'), 'root'), (('.', '102'), 'punct')]

 Named Entites are: 
>> [('102', 'CARDINAL')]

------------------- Sentence 3 -------------------

 When the RNN is given the ability to focus its  attention on a different location in the input image (middle and bottom; the  lighter patches were given more attention) as it generates each word (bold), we  found86 that it exploits this to achieve better ‘translation’ of images into captions. 

Tokens are: 
>> ['When', 'the', 'RNN', 'is', 'given', 'the', 'ability', 'to', 'focus', 'its', 'attention', 'on', 'a', 'different', 'location', 'in', 'the', 'input', 'image', '(', 'middle', 'and', 'bottom', ';', 'the', 'lighter', 'patches', 'were', 'given', 'more', 'attention', ')', 'as', 'it', 'generates', 'each', 'word', '(', 'bold', ')', ',', 'we', 'found', '86', 'that', 'it', 'exploits', 'this', 'to', 'achieve', 'better', '‘', 'translation', '’', 'of', 'images', 'into', 'captions', '.'] 

 UPOS tags are: 
>> [('When', 'SCONJ'), ('the', 'DET'), ('RNN', 'PROPN'), ('is', 'AUX'), ('given', 'VERB'), ('the', 'DET'), ('ability', 'NOUN'), ('to', 'PART'), ('focus', 'VERB'), ('its', 'PRON'), ('attention', 'NOUN'), ('on', 'ADP'), ('a', 'DET'), ('different', 'ADJ'), ('location', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('input', 'NOUN'), ('image', 'NOUN'), ('(', 'PUNCT'), ('middle', 'NOUN'), ('and', 'CCONJ'), ('bottom', 'NOUN'), (';', 'PUNCT'), ('the', 'DET'), ('lighter', 'ADJ'), ('patches', 'NOUN'), ('were', 'AUX'), ('given', 'VERB'), ('more', 'ADJ'), ('attention', 'NOUN'), (')', 'PUNCT'), ('as', 'SCONJ'), ('it', 'PRON'), ('generates', 'VERB'), ('each', 'DET'), ('word', 'NOUN'), ('(', 'PUNCT'), ('bold', 'ADJ'), (')', 'PUNCT'), (',', 'PUNCT'), ('we', 'PRON'), ('found', 'VERB'), ('86', 'NUM'), ('that', 'SCONJ'), ('it', 'PRON'), ('exploits', 'VERB'), ('this', 'PRON'), ('to', 'PART'), ('achieve', 'VERB'), ('better', 'ADJ'), ('‘', 'PUNCT'), ('translation', 'NOUN'), ('’', 'PUNCT'), ('of', 'ADP'), ('images', 'NOUN'), ('into', 'ADP'), ('captions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('When', 'WRB'), ('the', 'DT'), ('RNN', 'NNP'), ('is', 'VBZ'), ('given', 'VBN'), ('the', 'DT'), ('ability', 'NN'), ('to', 'TO'), ('focus', 'VB'), ('its', 'PRP$'), ('attention', 'NN'), ('on', 'IN'), ('a', 'DT'), ('different', 'JJ'), ('location', 'NN'), ('in', 'IN'), ('the', 'DT'), ('input', 'NN'), ('image', 'NN'), ('(', '-LRB-'), ('middle', 'NN'), ('and', 'CC'), ('bottom', 'NN'), (';', ':'), ('the', 'DT'), ('lighter', 'JJR'), ('patches', 'NNS'), ('were', 'VBD'), ('given', 'VBN'), ('more', 'JJR'), ('attention', 'NN'), (')', '-RRB-'), ('as', 'IN'), ('it', 'PRP'), ('generates', 'VBZ'), ('each', 'DT'), ('word', 'NN'), ('(', '-LRB-'), ('bold', 'JJ'), (')', '-RRB-'), (',', ','), ('we', 'PRP'), ('found', 'VBD'), ('86', 'CD'), ('that', 'IN'), ('it', 'PRP'), ('exploits', 'VBZ'), ('this', 'DT'), ('to', 'TO'), ('achieve', 'VB'), ('better', 'JJR'), ('‘', '``'), ('translation', 'NN'), ('’', "''"), ('of', 'IN'), ('images', 'NNS'), ('into', 'IN'), ('captions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('When', 'when'), ('the', 'the'), ('RNN', 'RNN'), ('is', 'be'), ('given', 'give'), ('the', 'the'), ('ability', 'ability'), ('to', 'to'), ('focus', 'focus'), ('its', 'its'), ('attention', 'attention'), ('on', 'on'), ('a', 'a'), ('different', 'different'), ('location', 'location'), ('in', 'in'), ('the', 'the'), ('input', 'input'), ('image', 'image'), ('(', '('), ('middle', 'middle'), ('and', 'and'), ('bottom', 'bottom'), (';', ';'), ('the', 'the'), ('lighter', 'light'), ('patches', 'patch'), ('were', 'be'), ('given', 'give'), ('more', 'more'), ('attention', 'attention'), (')', ')'), ('as', 'as'), ('it', 'it'), ('generates', 'generate'), ('each', 'each'), ('word', 'word'), ('(', '('), ('bold', 'bold'), (')', ')'), (',', ','), ('we', 'we'), ('found', 'find'), ('86', '86'), ('that', 'that'), ('it', 'it'), ('exploits', 'exploit'), ('this', 'this'), ('to', 'to'), ('achieve', 'achieve'), ('better', 'good'), ('‘', "'"), ('translation', 'translation'), ('’', "'"), ('of', 'of'), ('images', 'image'), ('into', 'into'), ('captions', 'caption'), ('.', '.')] 

 Dependency tags are: 
>> [(('When', 'given'), 'mark'), (('the', 'RNN'), 'det'), (('RNN', 'given'), 'nsubj:pass'), (('is', 'given'), 'aux:pass'), (('given', 'found'), 'advcl'), (('the', 'ability'), 'det'), (('ability', 'given'), 'obj'), (('to', 'focus'), 'mark'), (('focus', 'ability'), 'acl'), (('its', 'attention'), 'nmod:poss'), (('attention', 'focus'), 'obj'), (('on', 'location'), 'case'), (('a', 'location'), 'det'), (('different', 'location'), 'amod'), (('location', 'focus'), 'obl'), (('in', 'image'), 'case'), (('the', 'image'), 'det'), (('input', 'image'), 'compound'), (('image', 'location'), 'nmod'), (('(', 'middle'), 'punct'), (('middle', 'image'), 'appos'), (('and', 'bottom'), 'cc'), (('bottom', 'middle'), 'conj'), ((';', 'given'), 'punct'), (('the', 'patches'), 'det'), (('lighter', 'patches'), 'amod'), (('patches', 'given'), 'nsubj:pass'), (('were', 'given'), 'aux:pass'), (('given', 'middle'), 'parataxis'), (('more', 'attention'), 'amod'), (('attention', 'given'), 'obj'), ((')', 'given'), 'punct'), (('as', 'generates'), 'mark'), (('it', 'generates'), 'nsubj'), (('generates', 'found'), 'advcl'), (('each', 'word'), 'det'), (('word', 'generates'), 'obj'), (('(', 'bold'), 'punct'), (('bold', 'word'), 'amod'), ((')', 'bold'), 'punct'), ((',', 'found'), 'punct'), (('we', 'found'), 'nsubj'), (('found', 'root'), 'root'), (('86', 'found'), 'obj'), (('that', 'exploits'), 'mark'), (('it', 'exploits'), 'nsubj'), (('exploits', 'found'), 'ccomp'), (('this', 'exploits'), 'obj'), (('to', 'achieve'), 'mark'), (('achieve', 'exploits'), 'csubj'), (('better', 'translation'), 'amod'), (('‘', 'translation'), 'punct'), (('translation', 'achieve'), 'obj'), (('’', 'translation'), 'punct'), (('of', 'images'), 'case'), (('images', 'translation'), 'nmod'), (('into', 'captions'), 'case'), (('captions', 'achieve'), 'obl'), (('.', 'found'), 'punct')]

 Named Entites are: 
>> [('RNN', 'ORG'), ('86', 'CARDINAL')]

================================ Paragraph 139 =================================

Vision Deep CNN 


------------------- Sentence 1 -------------------

 Vision Deep CNN 

Tokens are: 
>> ['Vision', 'Deep', 'CNN'] 

 UPOS tags are: 
>> [('Vision', 'NOUN'), ('Deep', 'ADJ'), ('CNN', 'PROPN')] 

 XPOS tags are: 
>> [('Vision', 'NN'), ('Deep', 'NNP'), ('CNN', 'NNP')] 

 Lemmas are: 
>> [('Vision', 'vision'), ('Deep', 'deep'), ('CNN', 'CNN')] 

 Dependency tags are: 
>> [(('Vision', 'root'), 'root'), (('Deep', 'CNN'), 'amod'), (('CNN', 'Vision'), 'appos')]

 Named Entites are: 
>> [('CNN', 'ORG')]

================================ Paragraph 140 =================================

Language Generating RNN 


------------------- Sentence 1 -------------------

 Language Generating RNN 

Tokens are: 
>> ['Language', 'Generating', 'RNN'] 

 UPOS tags are: 
>> [('Language', 'NOUN'), ('Generating', 'VERB'), ('RNN', 'PROPN')] 

 XPOS tags are: 
>> [('Language', 'NN'), ('Generating', 'VBG'), ('RNN', 'NNP')] 

 Lemmas are: 
>> [('Language', 'language'), ('Generating', 'generate'), ('RNN', 'RNN')] 

 Dependency tags are: 
>> [(('Language', 'root'), 'root'), (('Generating', 'Language'), 'acl'), (('RNN', 'Generating'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 141 =================================

A group of people  shopping at an outdoor  


------------------- Sentence 1 -------------------

 A group of people  shopping at an outdoor 

Tokens are: 
>> ['A', 'group', 'of', 'people', 'shopping', 'at', 'an', 'outdoor'] 

 UPOS tags are: 
>> [('A', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('people', 'NOUN'), ('shopping', 'VERB'), ('at', 'ADP'), ('an', 'DET'), ('outdoor', 'NOUN')] 

 XPOS tags are: 
>> [('A', 'DT'), ('group', 'NN'), ('of', 'IN'), ('people', 'NNS'), ('shopping', 'VBG'), ('at', 'IN'), ('an', 'DT'), ('outdoor', 'NN')] 

 Lemmas are: 
>> [('A', 'a'), ('group', 'group'), ('of', 'of'), ('people', 'people'), ('shopping', 'shop'), ('at', 'at'), ('an', 'a'), ('outdoor', 'outdoor')] 

 Dependency tags are: 
>> [(('A', 'group'), 'det'), (('group', 'root'), 'root'), (('of', 'people'), 'case'), (('people', 'group'), 'nmod'), (('shopping', 'people'), 'acl'), (('at', 'outdoor'), 'case'), (('an', 'outdoor'), 'det'), (('outdoor', 'shopping'), 'obl')]

 Named Entites are: 
>> []

================================ Paragraph 142 =================================

market. 


------------------- Sentence 1 -------------------

 market. 

Tokens are: 
>> ['market', '.'] 

 UPOS tags are: 
>> [('market', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('market', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('market', 'market'), ('.', '.')] 

 Dependency tags are: 
>> [(('market', 'root'), 'root'), (('.', 'market'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 143 =================================

There are many  vegetables at the  


------------------- Sentence 1 -------------------

 There are many  vegetables at the 

Tokens are: 
>> ['There', 'are', 'many', 'vegetables', 'at', 'the'] 

 UPOS tags are: 
>> [('There', 'PRON'), ('are', 'VERB'), ('many', 'ADJ'), ('vegetables', 'NOUN'), ('at', 'ADP'), ('the', 'DET')] 

 XPOS tags are: 
>> [('There', 'EX'), ('are', 'VBP'), ('many', 'JJ'), ('vegetables', 'NNS'), ('at', 'IN'), ('the', 'DT')] 

 Lemmas are: 
>> [('There', 'there'), ('are', 'be'), ('many', 'many'), ('vegetables', 'vegetable'), ('at', 'at'), ('the', 'the')] 

 Dependency tags are: 
>> [(('There', 'are'), 'expl'), (('are', 'root'), 'root'), (('many', 'vegetables'), 'amod'), (('vegetables', 'are'), 'nsubj'), (('at', 'the'), 'case'), (('the', 'vegetables'), 'nmod')]

 Named Entites are: 
>> []

================================ Paragraph 144 =================================

fruit stand. 


------------------- Sentence 1 -------------------

 fruit stand. 

Tokens are: 
>> ['fruit', 'stand', '.'] 

 UPOS tags are: 
>> [('fruit', 'NOUN'), ('stand', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('fruit', 'NN'), ('stand', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('fruit', 'fruit'), ('stand', 'stand'), ('.', '.')] 

 Dependency tags are: 
>> [(('fruit', 'stand'), 'compound'), (('stand', 'root'), 'root'), (('.', 'stand'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 145 =================================

A woman is throwing a frisbee in a park. 


------------------- Sentence 1 -------------------

 A woman is throwing a frisbee in a park. 

Tokens are: 
>> ['A', 'woman', 'is', 'throwing', 'a', 'frisbee', 'in', 'a', 'park', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('woman', 'NOUN'), ('is', 'AUX'), ('throwing', 'VERB'), ('a', 'DET'), ('frisbee', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('park', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('woman', 'NN'), ('is', 'VBZ'), ('throwing', 'VBG'), ('a', 'DT'), ('frisbee', 'NN'), ('in', 'IN'), ('a', 'DT'), ('park', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('woman', 'woman'), ('is', 'be'), ('throwing', 'throw'), ('a', 'a'), ('frisbee', 'frisbee'), ('in', 'in'), ('a', 'a'), ('park', 'park'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'woman'), 'det'), (('woman', 'throwing'), 'nsubj'), (('is', 'throwing'), 'aux'), (('throwing', 'root'), 'root'), (('a', 'frisbee'), 'det'), (('frisbee', 'throwing'), 'obj'), (('in', 'park'), 'case'), (('a', 'park'), 'det'), (('park', 'throwing'), 'obl'), (('.', 'throwing'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 146 =================================

A little girl sitting on a bed with a teddy bear. A group of people sitting on a boat in the water. A gira�e standing in a forest with trees in the background. 


------------------- Sentence 1 -------------------

 A little girl sitting on a bed with a teddy bear. 

Tokens are: 
>> ['A', 'little', 'girl', 'sitting', 'on', 'a', 'bed', 'with', 'a', 'teddy', 'bear', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('little', 'ADJ'), ('girl', 'NOUN'), ('sitting', 'VERB'), ('on', 'ADP'), ('a', 'DET'), ('bed', 'NOUN'), ('with', 'ADP'), ('a', 'DET'), ('teddy', 'NOUN'), ('bear', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('little', 'JJ'), ('girl', 'NN'), ('sitting', 'VBG'), ('on', 'IN'), ('a', 'DT'), ('bed', 'NN'), ('with', 'IN'), ('a', 'DT'), ('teddy', 'NN'), ('bear', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('little', 'little'), ('girl', 'girl'), ('sitting', 'sit'), ('on', 'on'), ('a', 'a'), ('bed', 'bed'), ('with', 'with'), ('a', 'a'), ('teddy', 'teddy'), ('bear', 'bear'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'girl'), 'det'), (('little', 'girl'), 'amod'), (('girl', 'root'), 'root'), (('sitting', 'girl'), 'acl'), (('on', 'bed'), 'case'), (('a', 'bed'), 'det'), (('bed', 'sitting'), 'obl'), (('with', 'bear'), 'case'), (('a', 'bear'), 'det'), (('teddy', 'bear'), 'compound'), (('bear', 'sitting'), 'obl'), (('.', 'girl'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 A group of people sitting on a boat in the water. 

Tokens are: 
>> ['A', 'group', 'of', 'people', 'sitting', 'on', 'a', 'boat', 'in', 'the', 'water', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('people', 'NOUN'), ('sitting', 'VERB'), ('on', 'ADP'), ('a', 'DET'), ('boat', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('water', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('group', 'NN'), ('of', 'IN'), ('people', 'NNS'), ('sitting', 'VBG'), ('on', 'IN'), ('a', 'DT'), ('boat', 'NN'), ('in', 'IN'), ('the', 'DT'), ('water', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('group', 'group'), ('of', 'of'), ('people', 'people'), ('sitting', 'sit'), ('on', 'on'), ('a', 'a'), ('boat', 'boat'), ('in', 'in'), ('the', 'the'), ('water', 'water'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'group'), 'det'), (('group', 'root'), 'root'), (('of', 'people'), 'case'), (('people', 'group'), 'nmod'), (('sitting', 'people'), 'acl'), (('on', 'boat'), 'case'), (('a', 'boat'), 'det'), (('boat', 'sitting'), 'obl'), (('in', 'water'), 'case'), (('the', 'water'), 'det'), (('water', 'sitting'), 'obl'), (('.', 'group'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 A gira�e standing in a forest with trees in the background. 

Tokens are: 
>> ['A', 'gira�e', 'standing', 'in', 'a', 'forest', 'with', 'trees', 'in', 'the', 'background', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('gira�e', 'NOUN'), ('standing', 'VERB'), ('in', 'ADP'), ('a', 'DET'), ('forest', 'NOUN'), ('with', 'ADP'), ('trees', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('background', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('gira�e', 'NN'), ('standing', 'VBG'), ('in', 'IN'), ('a', 'DT'), ('forest', 'NN'), ('with', 'IN'), ('trees', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('background', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('gira�e', 'gira�e'), ('standing', 'stand'), ('in', 'in'), ('a', 'a'), ('forest', 'forest'), ('with', 'with'), ('trees', 'tree'), ('in', 'in'), ('the', 'the'), ('background', 'background'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'gira�e'), 'det'), (('gira�e', 'root'), 'root'), (('standing', 'gira�e'), 'acl'), (('in', 'forest'), 'case'), (('a', 'forest'), 'det'), (('forest', 'standing'), 'obl'), (('with', 'trees'), 'case'), (('trees', 'forest'), 'nmod'), (('in', 'background'), 'case'), (('the', 'background'), 'det'), (('background', 'trees'), 'nmod'), (('.', 'gira�e'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 147 =================================

A dog is standing on a hardwood �oor. A stop sign is on a road with a mountain in the background 


------------------- Sentence 1 -------------------

 A dog is standing on a hardwood �oor. 

Tokens are: 
>> ['A', 'dog', 'is', 'standing', 'on', 'a', 'hardwood', '�oor', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('dog', 'NOUN'), ('is', 'AUX'), ('standing', 'VERB'), ('on', 'ADP'), ('a', 'DET'), ('hardwood', 'NOUN'), ('�oor', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('dog', 'NN'), ('is', 'VBZ'), ('standing', 'VBG'), ('on', 'IN'), ('a', 'DT'), ('hardwood', 'NN'), ('�oor', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('dog', 'dog'), ('is', 'be'), ('standing', 'stand'), ('on', 'on'), ('a', 'a'), ('hardwood', 'hardwood'), ('�oor', '�oor'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'dog'), 'det'), (('dog', 'standing'), 'nsubj'), (('is', 'standing'), 'aux'), (('standing', 'root'), 'root'), (('on', '�oor'), 'case'), (('a', '�oor'), 'det'), (('hardwood', '�oor'), 'compound'), (('�oor', 'standing'), 'obl'), (('.', 'standing'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 A stop sign is on a road with a mountain in the background 

Tokens are: 
>> ['A', 'stop', 'sign', 'is', 'on', 'a', 'road', 'with', 'a', 'mountain', 'in', 'the', 'background'] 

 UPOS tags are: 
>> [('A', 'DET'), ('stop', 'NOUN'), ('sign', 'NOUN'), ('is', 'AUX'), ('on', 'ADP'), ('a', 'DET'), ('road', 'NOUN'), ('with', 'ADP'), ('a', 'DET'), ('mountain', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('background', 'NOUN')] 

 XPOS tags are: 
>> [('A', 'DT'), ('stop', 'NN'), ('sign', 'NN'), ('is', 'VBZ'), ('on', 'IN'), ('a', 'DT'), ('road', 'NN'), ('with', 'IN'), ('a', 'DT'), ('mountain', 'NN'), ('in', 'IN'), ('the', 'DT'), ('background', 'NN')] 

 Lemmas are: 
>> [('A', 'a'), ('stop', 'stop'), ('sign', 'sign'), ('is', 'be'), ('on', 'on'), ('a', 'a'), ('road', 'road'), ('with', 'with'), ('a', 'a'), ('mountain', 'mountain'), ('in', 'in'), ('the', 'the'), ('background', 'background')] 

 Dependency tags are: 
>> [(('A', 'sign'), 'det'), (('stop', 'sign'), 'compound'), (('sign', 'road'), 'nsubj'), (('is', 'road'), 'cop'), (('on', 'road'), 'case'), (('a', 'road'), 'det'), (('road', 'root'), 'root'), (('with', 'mountain'), 'case'), (('a', 'mountain'), 'det'), (('mountain', 'road'), 'nmod'), (('in', 'background'), 'case'), (('the', 'background'), 'det'), (('background', 'mountain'), 'nmod')]

 Named Entites are: 
>> []

================================ Paragraph 148 =================================

4 4 0  |  N A T U R E  |  V O L  5 2 1  |  2 8  M A Y  2 0 1 5 


------------------- Sentence 1 -------------------

 4 4 0  |  N A T U R E  |  V O L  5 2 1  |  2 8  M A Y  2 0 1 5 

Tokens are: 
>> ['4', '4', '0', '|', 'N', 'A', 'T', 'U', 'R', 'E', '|', 'V', 'O', 'L', '5', '2', '1', '|', '2', '8', 'M', 'A', 'Y', '2', '0', '1', '5'] 

 UPOS tags are: 
>> [('4', 'NUM'), ('4', 'NUM'), ('0', 'NUM'), ('|', 'PUNCT'), ('N', 'NOUN'), ('A', 'NOUN'), ('T', 'NOUN'), ('U', 'NOUN'), ('R', 'SYM'), ('E', 'NOUN'), ('|', 'SYM'), ('V', 'NOUN'), ('O', 'SYM'), ('L', 'PUNCT'), ('5', 'NUM'), ('2', 'NUM'), ('1', 'NUM'), ('|', 'SYM'), ('2', 'NUM'), ('8', 'NUM'), ('M', 'NUM'), ('A', 'NUM'), ('Y', 'NOUN'), ('2', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('5', 'NUM')] 

 XPOS tags are: 
>> [('4', 'CD'), ('4', 'CD'), ('0', 'CD'), ('|', ':'), ('N', 'NN'), ('A', 'NN'), ('T', 'NN'), ('U', 'NNS'), ('R', 'SYM'), ('E', 'NN'), ('|', 'SYM'), ('V', 'NN'), ('O', 'SYM'), ('L', '-LRB-'), ('5', 'CD'), ('2', 'CD'), ('1', 'CD'), ('|', 'SYM'), ('2', 'CD'), ('8', 'CD'), ('M', 'CD'), ('A', 'CD'), ('Y', 'NN'), ('2', 'CD'), ('0', 'CD'), ('1', 'CD'), ('5', 'CD')] 

 Lemmas are: 
>> [('4', '4'), ('4', '4'), ('0', '0'), ('|', '|'), ('N', 'N'), ('A', 'a'), ('T', 'T'), ('U', 'U'), ('R', 'R'), ('E', 'e'), ('|', '|'), ('V', 'V'), ('O', 'o'), ('L', 'L'), ('5', '5'), ('2', '2'), ('1', '1'), ('|', '|'), ('2', '2'), ('8', '8'), ('M', 'm'), ('A', 'a'), ('Y', 'Y'), ('2', '2'), ('0', '0'), ('1', '1'), ('5', '5')] 

 Dependency tags are: 
>> [(('4', '4'), 'compound'), (('4', '0'), 'compound'), (('0', 'N'), 'nummod'), (('|', '0'), 'punct'), (('N', 'root'), 'root'), (('A', 'N'), 'appos'), (('T', 'A'), 'appos'), (('U', 'A'), 'appos'), (('R', 'U'), 'punct'), (('E', 'U'), 'appos'), (('|', 'E'), 'compound'), (('V', 'E'), 'appos'), (('O', '5'), 'punct'), (('L', '5'), 'punct'), (('5', 'N'), 'list'), (('2', '5'), 'flat'), (('1', '5'), 'flat'), (('|', '2'), 'punct'), (('2', '5'), 'conj'), (('8', '2'), 'flat'), (('M', '8'), 'flat'), (('A', '8'), 'flat'), (('Y', '2'), 'flat'), (('2', '8'), 'flat'), (('0', '2'), 'flat'), (('1', '2'), 'flat'), (('5', '2'), 'flat')]

 Named Entites are: 
>> [('1', 'CARDINAL'), ('5', 'CARDINAL')]

================================ Paragraph 149 =================================

REVIEWINSIGHT 


------------------- Sentence 1 -------------------

 REVIEWINSIGHT 

Tokens are: 
>> ['REVIEWINSIGHT'] 

 UPOS tags are: 
>> [('REVIEWINSIGHT', 'NOUN')] 

 XPOS tags are: 
>> [('REVIEWINSIGHT', 'NNS')] 

 Lemmas are: 
>> [('REVIEWINSIGHT', 'reviewinsight')] 

 Dependency tags are: 
>> [(('REVIEWINSIGHT', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 150 =================================

© 2015 Macmillan Publishers Limited. All rights reserved


------------------- Sentence 1 -------------------

 © 2015 Macmillan Publishers Limited. 

Tokens are: 
>> ['©', '2015', 'Macmillan', 'Publishers', 'Limited', '.'] 

 UPOS tags are: 
>> [('©', 'ADP'), ('2015', 'NUM'), ('Macmillan', 'PROPN'), ('Publishers', 'PROPN'), ('Limited', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('©', 'IN'), ('2015', 'CD'), ('Macmillan', 'NNP'), ('Publishers', 'NNPS'), ('Limited', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('©', 'at'), ('2015', '2015'), ('Macmillan', 'Macmillan'), ('Publishers', 'Publisher'), ('Limited', 'Limited'), ('.', '.')] 

 Dependency tags are: 
>> [(('©', 'Limited'), 'case'), (('2015', 'Limited'), 'nummod'), (('Macmillan', 'Limited'), 'compound'), (('Publishers', 'Limited'), 'compound'), (('Limited', 'root'), 'root'), (('.', 'Limited'), 'punct')]

 Named Entites are: 
>> [('2015', 'DATE'), ('Macmillan Publishers Limited', 'ORG')]

------------------- Sentence 2 -------------------

 All rights reserved 

Tokens are: 
>> ['All', 'rights', 'reserved'] 

 UPOS tags are: 
>> [('All', 'DET'), ('rights', 'NOUN'), ('reserved', 'VERB')] 

 XPOS tags are: 
>> [('All', 'DT'), ('rights', 'NNS'), ('reserved', 'VBN')] 

 Lemmas are: 
>> [('All', 'all'), ('rights', 'rights'), ('reserved', 'reserve')] 

 Dependency tags are: 
>> [(('All', 'rights'), 'det'), (('rights', 'root'), 'root'), (('reserved', 'rights'), 'acl')]

 Named Entites are: 
>> []

================================ Paragraph 151 =================================

context of earlier words71. Each word in the context is presented to  the network as a one-of-N vector, that is, one component has a value  of 1 and the rest are 0. In the first layer, each word creates a different  pattern of activations, or word vectors (Fig. 4). In a language model,  the other layers of the network learn to convert the input word vec- tors into an output word vector for the predicted next word, which  can be used to predict the probability for any word in the vocabulary  to appear as the next word. The network learns word vectors that  contain many active components each of which can be interpreted  as a separate feature of the word, as was first demonstrated27 in the  context of learning distributed representations for symbols. These  semantic features were not explicitly present in the input. They were  discovered by the learning procedure as a good way of factorizing  the structured relationships between the input and output symbols  into multiple ‘micro-rules’. Learning word vectors turned out to also  work very well when the word sequences come from a large corpus  of real text and the individual micro-rules are unreliable71. When  trained to predict the next word in a news story, for example, the  learned word vectors for Tuesday and Wednesday are very similar, as  are the word vectors for Sweden and Norway. Such representations  are called distributed representations because their elements (the  features) are not mutually exclusive and their many configurations  correspond to the variations seen in the observed data. These word  vectors are composed of learned features that were not determined  ahead of time by experts, but automatically discovered by the neural  network. Vector representations of words learned from text are now  very widely used in natural language applications14,17,72–76.  


------------------- Sentence 1 -------------------

 context of earlier words 

Tokens are: 
>> ['context', 'of', 'earlier', 'word', 's'] 

 UPOS tags are: 
>> [('context', 'NOUN'), ('of', 'ADP'), ('earlier', 'ADJ'), ('word', 'NOUN'), ('s', 'PART')] 

 XPOS tags are: 
>> [('context', 'NN'), ('of', 'IN'), ('earlier', 'JJR'), ('word', 'NN'), ('s', 'POS')] 

 Lemmas are: 
>> [('context', 'context'), ('of', 'of'), ('earlier', 'early'), ('word', 'word'), ('s', "'s")] 

 Dependency tags are: 
>> [(('context', 'root'), 'root'), (('of', 'word'), 'case'), (('earlier', 'word'), 'amod'), (('word', 'context'), 'nmod'), (('s', 'word'), 'case')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 71. 

Tokens are: 
>> ['71', '.'] 

 UPOS tags are: 
>> [('71', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('71', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('71', '71'), ('.', '.')] 

 Dependency tags are: 
>> [(('71', 'root'), 'root'), (('.', '71'), 'punct')]

 Named Entites are: 
>> [('71', 'CARDINAL')]

------------------- Sentence 3 -------------------

 Each word in the context is presented to  the network as a one-of-N vector, that is, one component has a value  of 1 and the rest are 0. 

Tokens are: 
>> ['Each', 'word', 'in', 'the', 'context', 'is', 'presented', 'to', 'the', 'network', 'as', 'a', 'one', '-', 'of', '-', 'N', 'vector', ',', 'that', 'is', ',', 'one', 'component', 'has', 'a', 'value', 'of', '1', 'and', 'the', 'rest', 'are', '0', '.'] 

 UPOS tags are: 
>> [('Each', 'DET'), ('word', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('context', 'NOUN'), ('is', 'AUX'), ('presented', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('network', 'NOUN'), ('as', 'ADP'), ('a', 'DET'), ('one', 'NUM'), ('-', 'PUNCT'), ('of', 'ADP'), ('-', 'PUNCT'), ('N', 'NOUN'), ('vector', 'NOUN'), (',', 'PUNCT'), ('that', 'PRON'), ('is', 'AUX'), (',', 'PUNCT'), ('one', 'NUM'), ('component', 'NOUN'), ('has', 'VERB'), ('a', 'DET'), ('value', 'NOUN'), ('of', 'ADP'), ('1', 'NUM'), ('and', 'CCONJ'), ('the', 'DET'), ('rest', 'NOUN'), ('are', 'AUX'), ('0', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Each', 'DT'), ('word', 'NN'), ('in', 'IN'), ('the', 'DT'), ('context', 'NN'), ('is', 'VBZ'), ('presented', 'VBN'), ('to', 'IN'), ('the', 'DT'), ('network', 'NN'), ('as', 'IN'), ('a', 'DT'), ('one', 'CD'), ('-', 'HYPH'), ('of', 'IN'), ('-', 'HYPH'), ('N', 'NN'), ('vector', 'NN'), (',', ','), ('that', 'DT'), ('is', 'VBZ'), (',', ','), ('one', 'CD'), ('component', 'NN'), ('has', 'VBZ'), ('a', 'DT'), ('value', 'NN'), ('of', 'IN'), ('1', 'CD'), ('and', 'CC'), ('the', 'DT'), ('rest', 'NN'), ('are', 'VBP'), ('0', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('Each', 'each'), ('word', 'word'), ('in', 'in'), ('the', 'the'), ('context', 'context'), ('is', 'be'), ('presented', 'present'), ('to', 'to'), ('the', 'the'), ('network', 'network'), ('as', 'as'), ('a', 'a'), ('one', 'one'), ('-', '-'), ('of', 'of'), ('-', '-'), ('N', 'N'), ('vector', 'vector'), (',', ','), ('that', 'that'), ('is', 'be'), (',', ','), ('one', 'one'), ('component', 'component'), ('has', 'have'), ('a', 'a'), ('value', 'value'), ('of', 'of'), ('1', '1'), ('and', 'and'), ('the', 'the'), ('rest', 'rest'), ('are', 'be'), ('0', '0'), ('.', '.')] 

 Dependency tags are: 
>> [(('Each', 'word'), 'det'), (('word', 'presented'), 'nsubj:pass'), (('in', 'context'), 'case'), (('the', 'context'), 'det'), (('context', 'word'), 'nmod'), (('is', 'presented'), 'aux:pass'), (('presented', 'root'), 'root'), (('to', 'network'), 'case'), (('the', 'network'), 'det'), (('network', 'presented'), 'obl'), (('as', 'vector'), 'case'), (('a', 'vector'), 'det'), (('one', 'vector'), 'nummod'), (('-', 'N'), 'punct'), (('of', 'N'), 'case'), (('-', 'N'), 'punct'), (('N', 'one'), 'nmod'), (('vector', 'presented'), 'obl'), ((',', 'has'), 'punct'), (('that', 'is'), 'nsubj'), (('is', 'has'), 'cop'), ((',', 'is'), 'punct'), (('one', 'component'), 'nummod'), (('component', 'has'), 'nsubj'), (('has', 'presented'), 'parataxis'), (('a', 'value'), 'det'), (('value', 'has'), 'obj'), (('of', '1'), 'case'), (('1', 'value'), 'nmod'), (('and', '0'), 'cc'), (('the', 'rest'), 'det'), (('rest', '0'), 'nsubj'), (('are', '0'), 'cop'), (('0', 'has'), 'conj'), (('.', 'presented'), 'punct')]

 Named Entites are: 
>> [('one', 'CARDINAL'), ('one', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL')]

------------------- Sentence 4 -------------------

 In the first layer, each word creates a different  pattern of activations, or word vectors (Fig. 4). 

Tokens are: 
>> ['In', 'the', 'first', 'layer', ',', 'each', 'word', 'creates', 'a', 'different', 'pattern', 'of', 'activations', ',', 'or', 'word', 'vectors', '(', 'Fig.', '4', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('the', 'DET'), ('first', 'ADJ'), ('layer', 'NOUN'), (',', 'PUNCT'), ('each', 'DET'), ('word', 'NOUN'), ('creates', 'VERB'), ('a', 'DET'), ('different', 'ADJ'), ('pattern', 'NOUN'), ('of', 'ADP'), ('activations', 'NOUN'), (',', 'PUNCT'), ('or', 'CCONJ'), ('word', 'NOUN'), ('vectors', 'NOUN'), ('(', 'PUNCT'), ('Fig.', 'PROPN'), ('4', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('the', 'DT'), ('first', 'JJ'), ('layer', 'NN'), (',', ','), ('each', 'DT'), ('word', 'NN'), ('creates', 'VBZ'), ('a', 'DT'), ('different', 'JJ'), ('pattern', 'NN'), ('of', 'IN'), ('activations', 'NNS'), (',', ','), ('or', 'CC'), ('word', 'NN'), ('vectors', 'NNS'), ('(', '-LRB-'), ('Fig.', 'NNP'), ('4', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('the', 'the'), ('first', 'first'), ('layer', 'layer'), (',', ','), ('each', 'each'), ('word', 'word'), ('creates', 'create'), ('a', 'a'), ('different', 'different'), ('pattern', 'pattern'), ('of', 'of'), ('activations', 'activation'), (',', ','), ('or', 'or'), ('word', 'word'), ('vectors', 'vector'), ('(', '('), ('Fig.', 'Fig.'), ('4', '4'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'layer'), 'case'), (('the', 'layer'), 'det'), (('first', 'layer'), 'amod'), (('layer', 'creates'), 'obl'), ((',', 'creates'), 'punct'), (('each', 'word'), 'det'), (('word', 'creates'), 'nsubj'), (('creates', 'root'), 'root'), (('a', 'pattern'), 'det'), (('different', 'pattern'), 'amod'), (('pattern', 'creates'), 'obj'), (('of', 'activations'), 'case'), (('activations', 'pattern'), 'nmod'), ((',', 'vectors'), 'punct'), (('or', 'vectors'), 'cc'), (('word', 'vectors'), 'compound'), (('vectors', 'activations'), 'conj'), (('(', 'Fig.'), 'punct'), (('Fig.', 'creates'), 'dep'), (('4', 'Fig.'), 'dep'), ((')', 'Fig.'), 'punct'), (('.', 'creates'), 'punct')]

 Named Entites are: 
>> [('first', 'ORDINAL')]

------------------- Sentence 5 -------------------

 In a language model,  the other layers of the network learn to convert the input word vec- tors into an output word vector for the predicted next word, which  can be used to predict the probability for any word in the vocabulary  to appear as the next word. 

Tokens are: 
>> ['In', 'a', 'language', 'model', ',', 'the', 'other', 'layers', 'of', 'the', 'network', 'learn', 'to', 'convert', 'the', 'input', 'word', 'vec-', 'tors', 'into', 'an', 'output', 'word', 'vector', 'for', 'the', 'predicted', 'next', 'word', ',', 'which', 'can', 'be', 'used', 'to', 'predict', 'the', 'probability', 'for', 'any', 'word', 'in', 'the', 'vocabulary', 'to', 'appear', 'as', 'the', 'next', 'word', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('a', 'DET'), ('language', 'NOUN'), ('model', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('other', 'ADJ'), ('layers', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('network', 'NOUN'), ('learn', 'VERB'), ('to', 'PART'), ('convert', 'VERB'), ('the', 'DET'), ('input', 'NOUN'), ('word', 'NOUN'), ('vec-', 'NOUN'), ('tors', 'NOUN'), ('into', 'ADP'), ('an', 'DET'), ('output', 'NOUN'), ('word', 'NOUN'), ('vector', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('predicted', 'VERB'), ('next', 'ADJ'), ('word', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('used', 'VERB'), ('to', 'PART'), ('predict', 'VERB'), ('the', 'DET'), ('probability', 'NOUN'), ('for', 'ADP'), ('any', 'DET'), ('word', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('vocabulary', 'NOUN'), ('to', 'PART'), ('appear', 'VERB'), ('as', 'ADP'), ('the', 'DET'), ('next', 'ADJ'), ('word', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('a', 'DT'), ('language', 'NN'), ('model', 'NN'), (',', ','), ('the', 'DT'), ('other', 'JJ'), ('layers', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('network', 'NN'), ('learn', 'VBP'), ('to', 'TO'), ('convert', 'VB'), ('the', 'DT'), ('input', 'NN'), ('word', 'NN'), ('vec-', 'NN'), ('tors', 'NNS'), ('into', 'IN'), ('an', 'DT'), ('output', 'NN'), ('word', 'NN'), ('vector', 'NN'), ('for', 'IN'), ('the', 'DT'), ('predicted', 'VBN'), ('next', 'JJ'), ('word', 'NN'), (',', ','), ('which', 'WDT'), ('can', 'MD'), ('be', 'VB'), ('used', 'VBN'), ('to', 'TO'), ('predict', 'VB'), ('the', 'DT'), ('probability', 'NN'), ('for', 'IN'), ('any', 'DT'), ('word', 'NN'), ('in', 'IN'), ('the', 'DT'), ('vocabulary', 'NN'), ('to', 'TO'), ('appear', 'VB'), ('as', 'IN'), ('the', 'DT'), ('next', 'JJ'), ('word', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('a', 'a'), ('language', 'language'), ('model', 'model'), (',', ','), ('the', 'the'), ('other', 'other'), ('layers', 'layer'), ('of', 'of'), ('the', 'the'), ('network', 'network'), ('learn', 'learn'), ('to', 'to'), ('convert', 'convert'), ('the', 'the'), ('input', 'input'), ('word', 'word'), ('vec-', 'vec-'), ('tors', 'tor'), ('into', 'into'), ('an', 'a'), ('output', 'output'), ('word', 'word'), ('vector', 'vector'), ('for', 'for'), ('the', 'the'), ('predicted', 'predict'), ('next', 'next'), ('word', 'word'), (',', ','), ('which', 'which'), ('can', 'can'), ('be', 'be'), ('used', 'use'), ('to', 'to'), ('predict', 'predict'), ('the', 'the'), ('probability', 'probability'), ('for', 'for'), ('any', 'any'), ('word', 'word'), ('in', 'in'), ('the', 'the'), ('vocabulary', 'vocabulary'), ('to', 'to'), ('appear', 'appear'), ('as', 'as'), ('the', 'the'), ('next', 'next'), ('word', 'word'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'model'), 'case'), (('a', 'model'), 'det'), (('language', 'model'), 'compound'), (('model', 'learn'), 'obl'), ((',', 'learn'), 'punct'), (('the', 'layers'), 'det'), (('other', 'layers'), 'amod'), (('layers', 'learn'), 'nsubj'), (('of', 'network'), 'case'), (('the', 'network'), 'det'), (('network', 'layers'), 'nmod'), (('learn', 'root'), 'root'), (('to', 'convert'), 'mark'), (('convert', 'learn'), 'xcomp'), (('the', 'word'), 'det'), (('input', 'word'), 'compound'), (('word', 'convert'), 'obj'), (('vec-', 'tors'), 'compound'), (('tors', 'word'), 'appos'), (('into', 'vector'), 'case'), (('an', 'vector'), 'det'), (('output', 'word'), 'compound'), (('word', 'vector'), 'compound'), (('vector', 'convert'), 'obl'), (('for', 'word'), 'case'), (('the', 'word'), 'det'), (('predicted', 'word'), 'amod'), (('next', 'word'), 'amod'), (('word', 'vector'), 'nmod'), ((',', 'used'), 'punct'), (('which', 'used'), 'nsubj:pass'), (('can', 'used'), 'aux'), (('be', 'used'), 'aux:pass'), (('used', 'word'), 'acl:relcl'), (('to', 'predict'), 'mark'), (('predict', 'used'), 'xcomp'), (('the', 'probability'), 'det'), (('probability', 'predict'), 'obj'), (('for', 'word'), 'case'), (('any', 'word'), 'det'), (('word', 'probability'), 'nmod'), (('in', 'vocabulary'), 'case'), (('the', 'vocabulary'), 'det'), (('vocabulary', 'word'), 'nmod'), (('to', 'appear'), 'mark'), (('appear', 'predict'), 'advcl'), (('as', 'word'), 'case'), (('the', 'word'), 'det'), (('next', 'word'), 'amod'), (('word', 'appear'), 'obl'), (('.', 'learn'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 The network learns word vectors that  contain many active components each of which can be interpreted  as a separate feature of the word, as was first demonstrated27 in the  context of learning distributed representations for symbols. 

Tokens are: 
>> ['The', 'network', 'learns', 'word', 'vectors', 'that', 'contain', 'many', 'active', 'components', 'each', 'of', 'which', 'can', 'be', 'interpreted', 'as', 'a', 'separate', 'feature', 'of', 'the', 'word', ',', 'as', 'was', 'first', 'demonstrated', '27', 'in', 'the', 'context', 'of', 'learning', 'distributed', 'representations', 'for', 'symbols', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('network', 'NOUN'), ('learns', 'VERB'), ('word', 'NOUN'), ('vectors', 'NOUN'), ('that', 'PRON'), ('contain', 'VERB'), ('many', 'ADJ'), ('active', 'ADJ'), ('components', 'NOUN'), ('each', 'PRON'), ('of', 'ADP'), ('which', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('interpreted', 'VERB'), ('as', 'ADP'), ('a', 'DET'), ('separate', 'ADJ'), ('feature', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('word', 'NOUN'), (',', 'PUNCT'), ('as', 'SCONJ'), ('was', 'AUX'), ('first', 'ADV'), ('demonstrated', 'VERB'), ('27', 'NUM'), ('in', 'ADP'), ('the', 'DET'), ('context', 'NOUN'), ('of', 'SCONJ'), ('learning', 'VERB'), ('distributed', 'VERB'), ('representations', 'NOUN'), ('for', 'ADP'), ('symbols', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('network', 'NN'), ('learns', 'VBZ'), ('word', 'NN'), ('vectors', 'NNS'), ('that', 'WDT'), ('contain', 'VBP'), ('many', 'JJ'), ('active', 'JJ'), ('components', 'NNS'), ('each', 'DT'), ('of', 'IN'), ('which', 'WDT'), ('can', 'MD'), ('be', 'VB'), ('interpreted', 'VBN'), ('as', 'IN'), ('a', 'DT'), ('separate', 'JJ'), ('feature', 'NN'), ('of', 'IN'), ('the', 'DT'), ('word', 'NN'), (',', ','), ('as', 'IN'), ('was', 'VBD'), ('first', 'RB'), ('demonstrated', 'VBN'), ('27', 'CD'), ('in', 'IN'), ('the', 'DT'), ('context', 'NN'), ('of', 'IN'), ('learning', 'VBG'), ('distributed', 'VBN'), ('representations', 'NNS'), ('for', 'IN'), ('symbols', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('network', 'network'), ('learns', 'learn'), ('word', 'word'), ('vectors', 'vector'), ('that', 'that'), ('contain', 'contain'), ('many', 'many'), ('active', 'active'), ('components', 'component'), ('each', 'each'), ('of', 'of'), ('which', 'which'), ('can', 'can'), ('be', 'be'), ('interpreted', 'interpret'), ('as', 'as'), ('a', 'a'), ('separate', 'separate'), ('feature', 'feature'), ('of', 'of'), ('the', 'the'), ('word', 'word'), (',', ','), ('as', 'as'), ('was', 'be'), ('first', 'first'), ('demonstrated', 'demonstrate'), ('27', '27'), ('in', 'in'), ('the', 'the'), ('context', 'context'), ('of', 'of'), ('learning', 'learn'), ('distributed', 'distribute'), ('representations', 'representation'), ('for', 'for'), ('symbols', 'symbol'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'network'), 'det'), (('network', 'learns'), 'nsubj'), (('learns', 'root'), 'root'), (('word', 'vectors'), 'compound'), (('vectors', 'learns'), 'obj'), (('that', 'contain'), 'nsubj'), (('contain', 'vectors'), 'acl:relcl'), (('many', 'components'), 'amod'), (('active', 'components'), 'amod'), (('components', 'contain'), 'obj'), (('each', 'interpreted'), 'nsubj:pass'), (('of', 'which'), 'case'), (('which', 'each'), 'nmod'), (('can', 'interpreted'), 'aux'), (('be', 'interpreted'), 'aux:pass'), (('interpreted', 'components'), 'acl:relcl'), (('as', 'feature'), 'case'), (('a', 'feature'), 'det'), (('separate', 'feature'), 'amod'), (('feature', 'interpreted'), 'obl'), (('of', 'word'), 'case'), (('the', 'word'), 'det'), (('word', 'feature'), 'nmod'), ((',', 'demonstrated'), 'punct'), (('as', 'demonstrated'), 'mark'), (('was', 'demonstrated'), 'aux:pass'), (('first', 'demonstrated'), 'advmod'), (('demonstrated', 'interpreted'), 'advcl'), (('27', 'demonstrated'), 'obj'), (('in', 'context'), 'case'), (('the', 'context'), 'det'), (('context', 'demonstrated'), 'obl'), (('of', 'learning'), 'mark'), (('learning', 'context'), 'acl'), (('distributed', 'representations'), 'amod'), (('representations', 'learning'), 'obj'), (('for', 'symbols'), 'case'), (('symbols', 'representations'), 'nmod'), (('.', 'learns'), 'punct')]

 Named Entites are: 
>> [('27', 'CARDINAL')]

------------------- Sentence 7 -------------------

 These  semantic features were not explicitly present in the input. 

Tokens are: 
>> ['These', 'semantic', 'features', 'were', 'not', 'explicitly', 'present', 'in', 'the', 'input', '.'] 

 UPOS tags are: 
>> [('These', 'DET'), ('semantic', 'ADJ'), ('features', 'NOUN'), ('were', 'AUX'), ('not', 'PART'), ('explicitly', 'ADV'), ('present', 'ADJ'), ('in', 'ADP'), ('the', 'DET'), ('input', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('These', 'DT'), ('semantic', 'JJ'), ('features', 'NNS'), ('were', 'VBD'), ('not', 'RB'), ('explicitly', 'RB'), ('present', 'JJ'), ('in', 'IN'), ('the', 'DT'), ('input', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('These', 'this'), ('semantic', 'semantic'), ('features', 'feature'), ('were', 'be'), ('not', 'not'), ('explicitly', 'explicitly'), ('present', 'present'), ('in', 'in'), ('the', 'the'), ('input', 'input'), ('.', '.')] 

 Dependency tags are: 
>> [(('These', 'features'), 'det'), (('semantic', 'features'), 'amod'), (('features', 'present'), 'nsubj'), (('were', 'present'), 'cop'), (('not', 'present'), 'advmod'), (('explicitly', 'present'), 'advmod'), (('present', 'root'), 'root'), (('in', 'input'), 'case'), (('the', 'input'), 'det'), (('input', 'present'), 'obl'), (('.', 'present'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 8 -------------------

 They were  discovered by the learning procedure as a good way of factorizing  the structured relationships between the input and output symbols  into multiple ‘micro-rules’. 

Tokens are: 
>> ['They', 'were', 'discovered', 'by', 'the', 'learning', 'procedure', 'as', 'a', 'good', 'way', 'of', 'factorizing', 'the', 'structured', 'relationships', 'between', 'the', 'input', 'and', 'output', 'symbols', 'into', 'multiple', '‘', 'micro-rules', '’', '.'] 

 UPOS tags are: 
>> [('They', 'PRON'), ('were', 'AUX'), ('discovered', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('learning', 'NOUN'), ('procedure', 'NOUN'), ('as', 'ADP'), ('a', 'DET'), ('good', 'ADJ'), ('way', 'NOUN'), ('of', 'SCONJ'), ('factorizing', 'VERB'), ('the', 'DET'), ('structured', 'VERB'), ('relationships', 'NOUN'), ('between', 'ADP'), ('the', 'DET'), ('input', 'NOUN'), ('and', 'CCONJ'), ('output', 'NOUN'), ('symbols', 'NOUN'), ('into', 'ADP'), ('multiple', 'ADJ'), ('‘', 'PUNCT'), ('micro-rules', 'NOUN'), ('’', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('They', 'PRP'), ('were', 'VBD'), ('discovered', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('learning', 'NN'), ('procedure', 'NN'), ('as', 'IN'), ('a', 'DT'), ('good', 'JJ'), ('way', 'NN'), ('of', 'IN'), ('factorizing', 'VBG'), ('the', 'DT'), ('structured', 'VBN'), ('relationships', 'NNS'), ('between', 'IN'), ('the', 'DT'), ('input', 'NN'), ('and', 'CC'), ('output', 'NN'), ('symbols', 'NNS'), ('into', 'IN'), ('multiple', 'JJ'), ('‘', '``'), ('micro-rules', 'NNS'), ('’', "''"), ('.', '.')] 

 Lemmas are: 
>> [('They', 'they'), ('were', 'be'), ('discovered', 'discover'), ('by', 'by'), ('the', 'the'), ('learning', 'learning'), ('procedure', 'procedure'), ('as', 'as'), ('a', 'a'), ('good', 'good'), ('way', 'way'), ('of', 'of'), ('factorizing', 'factorize'), ('the', 'the'), ('structured', 'structure'), ('relationships', 'relationship'), ('between', 'between'), ('the', 'the'), ('input', 'input'), ('and', 'and'), ('output', 'output'), ('symbols', 'symbol'), ('into', 'into'), ('multiple', 'multiple'), ('‘', "'"), ('micro-rules', 'micro-rule'), ('’', "'"), ('.', '.')] 

 Dependency tags are: 
>> [(('They', 'discovered'), 'nsubj:pass'), (('were', 'discovered'), 'aux:pass'), (('discovered', 'root'), 'root'), (('by', 'procedure'), 'case'), (('the', 'procedure'), 'det'), (('learning', 'procedure'), 'compound'), (('procedure', 'discovered'), 'obl'), (('as', 'way'), 'case'), (('a', 'way'), 'det'), (('good', 'way'), 'amod'), (('way', 'discovered'), 'obl'), (('of', 'factorizing'), 'mark'), (('factorizing', 'way'), 'acl'), (('the', 'relationships'), 'det'), (('structured', 'relationships'), 'amod'), (('relationships', 'factorizing'), 'obj'), (('between', 'input'), 'case'), (('the', 'input'), 'det'), (('input', 'relationships'), 'nmod'), (('and', 'symbols'), 'cc'), (('output', 'symbols'), 'compound'), (('symbols', 'input'), 'conj'), (('into', 'micro-rules'), 'case'), (('multiple', 'micro-rules'), 'amod'), (('‘', 'micro-rules'), 'punct'), (('micro-rules', 'symbols'), 'nmod'), (('’', 'micro-rules'), 'punct'), (('.', 'discovered'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 9 -------------------

 Learning word vectors turned out to also  work very well when the word sequences come from a large corpus  of real text and the individual micro-rules are unreliable71. 

Tokens are: 
>> ['Learning', 'word', 'vectors', 'turned', 'out', 'to', 'also', 'work', 'very', 'well', 'when', 'the', 'word', 'sequences', 'come', 'from', 'a', 'large', 'corpus', 'of', 'real', 'text', 'and', 'the', 'individual', 'micro-rules', 'are', 'unreliable', '71', '.'] 

 UPOS tags are: 
>> [('Learning', 'VERB'), ('word', 'NOUN'), ('vectors', 'NOUN'), ('turned', 'VERB'), ('out', 'ADP'), ('to', 'PART'), ('also', 'ADV'), ('work', 'VERB'), ('very', 'ADV'), ('well', 'ADV'), ('when', 'SCONJ'), ('the', 'DET'), ('word', 'NOUN'), ('sequences', 'NOUN'), ('come', 'VERB'), ('from', 'ADP'), ('a', 'DET'), ('large', 'ADJ'), ('corpus', 'NOUN'), ('of', 'ADP'), ('real', 'ADJ'), ('text', 'NOUN'), ('and', 'CCONJ'), ('the', 'DET'), ('individual', 'ADJ'), ('micro-rules', 'NOUN'), ('are', 'AUX'), ('unreliable', 'ADJ'), ('71', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Learning', 'VBG'), ('word', 'NN'), ('vectors', 'NNS'), ('turned', 'VBD'), ('out', 'RP'), ('to', 'TO'), ('also', 'RB'), ('work', 'VB'), ('very', 'RB'), ('well', 'RB'), ('when', 'WRB'), ('the', 'DT'), ('word', 'NN'), ('sequences', 'NNS'), ('come', 'VBP'), ('from', 'IN'), ('a', 'DT'), ('large', 'JJ'), ('corpus', 'NN'), ('of', 'IN'), ('real', 'JJ'), ('text', 'NN'), ('and', 'CC'), ('the', 'DT'), ('individual', 'JJ'), ('micro-rules', 'NNS'), ('are', 'VBP'), ('unreliable', 'JJ'), ('71', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('Learning', 'learning'), ('word', 'word'), ('vectors', 'vector'), ('turned', 'turn'), ('out', 'out'), ('to', 'to'), ('also', 'also'), ('work', 'work'), ('very', 'very'), ('well', 'well'), ('when', 'when'), ('the', 'the'), ('word', 'word'), ('sequences', 'sequence'), ('come', 'come'), ('from', 'from'), ('a', 'a'), ('large', 'large'), ('corpus', 'corpus'), ('of', 'of'), ('real', 'real'), ('text', 'text'), ('and', 'and'), ('the', 'the'), ('individual', 'individual'), ('micro-rules', 'micro-rule'), ('are', 'be'), ('unreliable', 'unreliable'), ('71', '71'), ('.', '.')] 

 Dependency tags are: 
>> [(('Learning', 'vectors'), 'amod'), (('word', 'vectors'), 'compound'), (('vectors', 'turned'), 'nsubj'), (('turned', 'root'), 'root'), (('out', 'turned'), 'compound:prt'), (('to', 'work'), 'mark'), (('also', 'work'), 'advmod'), (('work', 'turned'), 'xcomp'), (('very', 'well'), 'advmod'), (('well', 'work'), 'advmod'), (('when', 'come'), 'mark'), (('the', 'sequences'), 'det'), (('word', 'come'), 'nsubj'), (('sequences', 'come'), 'nsubj'), (('come', 'work'), 'advcl'), (('from', 'corpus'), 'case'), (('a', 'corpus'), 'det'), (('large', 'corpus'), 'amod'), (('corpus', 'come'), 'obl'), (('of', 'text'), 'case'), (('real', 'text'), 'amod'), (('text', 'corpus'), 'nmod'), (('and', 'unreliable'), 'cc'), (('the', 'micro-rules'), 'det'), (('individual', 'micro-rules'), 'amod'), (('micro-rules', 'unreliable'), 'nsubj'), (('are', 'unreliable'), 'cop'), (('unreliable', 'turned'), 'conj'), (('71', 'unreliable'), 'nummod'), (('.', 'turned'), 'punct')]

 Named Entites are: 
>> [('71', 'CARDINAL')]

------------------- Sentence 10 -------------------

 When  trained to predict the next word in a news story, for example, the  learned word vectors for Tuesday and Wednesday are very similar, as  are the word vectors for Sweden and Norway. 

Tokens are: 
>> ['When', 'trained', 'to', 'predict', 'the', 'next', 'word', 'in', 'a', 'news', 'story', ',', 'for', 'example', ',', 'the', 'learned', 'word', 'vectors', 'for', 'Tuesday', 'and', 'Wednesday', 'are', 'very', 'similar', ',', 'as', 'are', 'the', 'word', 'vectors', 'for', 'Sweden', 'and', 'Norway', '.'] 

 UPOS tags are: 
>> [('When', 'SCONJ'), ('trained', 'VERB'), ('to', 'PART'), ('predict', 'VERB'), ('the', 'DET'), ('next', 'ADJ'), ('word', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('news', 'NOUN'), ('story', 'NOUN'), (',', 'PUNCT'), ('for', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('learned', 'VERB'), ('word', 'NOUN'), ('vectors', 'NOUN'), ('for', 'ADP'), ('Tuesday', 'PROPN'), ('and', 'CCONJ'), ('Wednesday', 'PROPN'), ('are', 'AUX'), ('very', 'ADV'), ('similar', 'ADJ'), (',', 'PUNCT'), ('as', 'SCONJ'), ('are', 'AUX'), ('the', 'DET'), ('word', 'NOUN'), ('vectors', 'NOUN'), ('for', 'ADP'), ('Sweden', 'PROPN'), ('and', 'CCONJ'), ('Norway', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('When', 'WRB'), ('trained', 'VBN'), ('to', 'TO'), ('predict', 'VB'), ('the', 'DT'), ('next', 'JJ'), ('word', 'NN'), ('in', 'IN'), ('a', 'DT'), ('news', 'NN'), ('story', 'NN'), (',', ','), ('for', 'IN'), ('example', 'NN'), (',', ','), ('the', 'DT'), ('learned', 'VBN'), ('word', 'NN'), ('vectors', 'NNS'), ('for', 'IN'), ('Tuesday', 'NNP'), ('and', 'CC'), ('Wednesday', 'NNP'), ('are', 'VBP'), ('very', 'RB'), ('similar', 'JJ'), (',', ','), ('as', 'IN'), ('are', 'VBP'), ('the', 'DT'), ('word', 'NN'), ('vectors', 'NNS'), ('for', 'IN'), ('Sweden', 'NNP'), ('and', 'CC'), ('Norway', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('When', 'when'), ('trained', 'train'), ('to', 'to'), ('predict', 'predict'), ('the', 'the'), ('next', 'next'), ('word', 'word'), ('in', 'in'), ('a', 'a'), ('news', 'news'), ('story', 'story'), (',', ','), ('for', 'for'), ('example', 'example'), (',', ','), ('the', 'the'), ('learned', 'learn'), ('word', 'word'), ('vectors', 'vector'), ('for', 'for'), ('Tuesday', 'Tuesday'), ('and', 'and'), ('Wednesday', 'Wednesday'), ('are', 'be'), ('very', 'very'), ('similar', 'similar'), (',', ','), ('as', 'as'), ('are', 'be'), ('the', 'the'), ('word', 'word'), ('vectors', 'vector'), ('for', 'for'), ('Sweden', 'Sweden'), ('and', 'and'), ('Norway', 'Norway'), ('.', '.')] 

 Dependency tags are: 
>> [(('When', 'trained'), 'mark'), (('trained', 'similar'), 'advcl'), (('to', 'predict'), 'mark'), (('predict', 'trained'), 'xcomp'), (('the', 'word'), 'det'), (('next', 'word'), 'amod'), (('word', 'predict'), 'obj'), (('in', 'story'), 'case'), (('a', 'story'), 'det'), (('news', 'story'), 'compound'), (('story', 'predict'), 'obl'), ((',', 'similar'), 'punct'), (('for', 'example'), 'case'), (('example', 'similar'), 'obl'), ((',', 'similar'), 'punct'), (('the', 'vectors'), 'det'), (('learned', 'vectors'), 'amod'), (('word', 'vectors'), 'compound'), (('vectors', 'similar'), 'nsubj'), (('for', 'Tuesday'), 'case'), (('Tuesday', 'vectors'), 'nmod'), (('and', 'Wednesday'), 'cc'), (('Wednesday', 'Tuesday'), 'conj'), (('are', 'similar'), 'cop'), (('very', 'similar'), 'advmod'), (('similar', 'root'), 'root'), ((',', 'similar'), 'punct'), (('as', 'vectors'), 'mark'), (('are', 'vectors'), 'cop'), (('the', 'vectors'), 'det'), (('word', 'vectors'), 'compound'), (('vectors', 'similar'), 'advcl'), (('for', 'Sweden'), 'case'), (('Sweden', 'vectors'), 'nmod'), (('and', 'Norway'), 'cc'), (('Norway', 'Sweden'), 'conj'), (('.', 'similar'), 'punct')]

 Named Entites are: 
>> [('Tuesday', 'DATE'), ('Wednesday', 'DATE'), ('Sweden', 'GPE'), ('Norway', 'GPE')]

------------------- Sentence 11 -------------------

 Such representations  are called distributed representations because their elements (the  features) are not mutually exclusive and their many configurations  correspond to the variations seen in the observed data. 

Tokens are: 
>> ['Such', 'representations', 'are', 'called', 'distributed', 'representations', 'because', 'their', 'elements', '(', 'the', 'features', ')', 'are', 'not', 'mutually', 'exclusive', 'and', 'their', 'many', 'configurations', 'correspond', 'to', 'the', 'variations', 'seen', 'in', 'the', 'observed', 'data', '.'] 

 UPOS tags are: 
>> [('Such', 'ADJ'), ('representations', 'NOUN'), ('are', 'AUX'), ('called', 'VERB'), ('distributed', 'VERB'), ('representations', 'NOUN'), ('because', 'SCONJ'), ('their', 'PRON'), ('elements', 'NOUN'), ('(', 'PUNCT'), ('the', 'DET'), ('features', 'NOUN'), (')', 'PUNCT'), ('are', 'AUX'), ('not', 'PART'), ('mutually', 'ADV'), ('exclusive', 'ADJ'), ('and', 'CCONJ'), ('their', 'PRON'), ('many', 'ADJ'), ('configurations', 'NOUN'), ('correspond', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('variations', 'NOUN'), ('seen', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('observed', 'VERB'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Such', 'JJ'), ('representations', 'NNS'), ('are', 'VBP'), ('called', 'VBN'), ('distributed', 'VBN'), ('representations', 'NNS'), ('because', 'IN'), ('their', 'PRP$'), ('elements', 'NNS'), ('(', '-LRB-'), ('the', 'DT'), ('features', 'NNS'), (')', '-RRB-'), ('are', 'VBP'), ('not', 'RB'), ('mutually', 'RB'), ('exclusive', 'JJ'), ('and', 'CC'), ('their', 'PRP$'), ('many', 'JJ'), ('configurations', 'NNS'), ('correspond', 'VBP'), ('to', 'IN'), ('the', 'DT'), ('variations', 'NNS'), ('seen', 'VBN'), ('in', 'IN'), ('the', 'DT'), ('observed', 'VBN'), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Such', 'such'), ('representations', 'representation'), ('are', 'be'), ('called', 'call'), ('distributed', 'distribute'), ('representations', 'representation'), ('because', 'because'), ('their', 'they'), ('elements', 'element'), ('(', '('), ('the', 'the'), ('features', 'feature'), (')', ')'), ('are', 'be'), ('not', 'not'), ('mutually', 'mutually'), ('exclusive', 'exclusive'), ('and', 'and'), ('their', 'they'), ('many', 'many'), ('configurations', 'configuration'), ('correspond', 'correspond'), ('to', 'to'), ('the', 'the'), ('variations', 'variation'), ('seen', 'see'), ('in', 'in'), ('the', 'the'), ('observed', 'observe'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('Such', 'representations'), 'amod'), (('representations', 'called'), 'nsubj:pass'), (('are', 'called'), 'aux:pass'), (('called', 'root'), 'root'), (('distributed', 'representations'), 'amod'), (('representations', 'called'), 'obj'), (('because', 'exclusive'), 'mark'), (('their', 'elements'), 'nmod:poss'), (('elements', 'exclusive'), 'nsubj'), (('(', 'features'), 'punct'), (('the', 'features'), 'det'), (('features', 'elements'), 'appos'), ((')', 'features'), 'punct'), (('are', 'exclusive'), 'cop'), (('not', 'exclusive'), 'advmod'), (('mutually', 'exclusive'), 'advmod'), (('exclusive', 'called'), 'advcl'), (('and', 'correspond'), 'cc'), (('their', 'configurations'), 'nmod:poss'), (('many', 'configurations'), 'amod'), (('configurations', 'correspond'), 'nsubj'), (('correspond', 'called'), 'conj'), (('to', 'variations'), 'case'), (('the', 'variations'), 'det'), (('variations', 'correspond'), 'obl'), (('seen', 'variations'), 'acl'), (('in', 'data'), 'case'), (('the', 'data'), 'det'), (('observed', 'data'), 'amod'), (('data', 'seen'), 'obl'), (('.', 'called'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 12 -------------------

 These word  vectors are composed of learned features that were not determined  ahead of time by experts, but automatically discovered by the neural  network. 

Tokens are: 
>> ['These', 'word', 'vectors', 'are', 'composed', 'of', 'learned', 'features', 'that', 'were', 'not', 'determined', 'ahead', 'of', 'time', 'by', 'experts', ',', 'but', 'automatically', 'discovered', 'by', 'the', 'neural', 'network', '.'] 

 UPOS tags are: 
>> [('These', 'DET'), ('word', 'NOUN'), ('vectors', 'NOUN'), ('are', 'AUX'), ('composed', 'VERB'), ('of', 'ADP'), ('learned', 'VERB'), ('features', 'NOUN'), ('that', 'PRON'), ('were', 'AUX'), ('not', 'PART'), ('determined', 'VERB'), ('ahead', 'ADV'), ('of', 'ADP'), ('time', 'NOUN'), ('by', 'ADP'), ('experts', 'NOUN'), (',', 'PUNCT'), ('but', 'CCONJ'), ('automatically', 'ADV'), ('discovered', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('neural', 'ADJ'), ('network', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('These', 'DT'), ('word', 'NN'), ('vectors', 'NNS'), ('are', 'VBP'), ('composed', 'VBN'), ('of', 'IN'), ('learned', 'VBN'), ('features', 'NNS'), ('that', 'WDT'), ('were', 'VBD'), ('not', 'RB'), ('determined', 'VBN'), ('ahead', 'RB'), ('of', 'IN'), ('time', 'NN'), ('by', 'IN'), ('experts', 'NNS'), (',', ','), ('but', 'CC'), ('automatically', 'RB'), ('discovered', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('neural', 'JJ'), ('network', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('These', 'this'), ('word', 'word'), ('vectors', 'vector'), ('are', 'be'), ('composed', 'compose'), ('of', 'of'), ('learned', 'learn'), ('features', 'feature'), ('that', 'that'), ('were', 'be'), ('not', 'not'), ('determined', 'determine'), ('ahead', 'ahead'), ('of', 'of'), ('time', 'time'), ('by', 'by'), ('experts', 'expert'), (',', ','), ('but', 'but'), ('automatically', 'automatically'), ('discovered', 'discover'), ('by', 'by'), ('the', 'the'), ('neural', 'neural'), ('network', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('These', 'vectors'), 'det'), (('word', 'vectors'), 'compound'), (('vectors', 'composed'), 'nsubj:pass'), (('are', 'composed'), 'aux:pass'), (('composed', 'root'), 'root'), (('of', 'features'), 'case'), (('learned', 'features'), 'amod'), (('features', 'composed'), 'obl'), (('that', 'determined'), 'nsubj:pass'), (('were', 'determined'), 'aux:pass'), (('not', 'determined'), 'advmod'), (('determined', 'features'), 'acl:relcl'), (('ahead', 'determined'), 'advmod'), (('of', 'time'), 'case'), (('time', 'ahead'), 'obl'), (('by', 'experts'), 'case'), (('experts', 'determined'), 'obl'), ((',', 'discovered'), 'punct'), (('but', 'discovered'), 'cc'), (('automatically', 'discovered'), 'advmod'), (('discovered', 'determined'), 'conj'), (('by', 'network'), 'case'), (('the', 'network'), 'det'), (('neural', 'network'), 'amod'), (('network', 'discovered'), 'obl'), (('.', 'composed'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 13 -------------------

 Vector representations of words learned from text are now  very widely used in natural language applications 

Tokens are: 
>> ['Vector', 'representations', 'of', 'words', 'learned', 'from', 'text', 'are', 'now', 'very', 'widely', 'used', 'in', 'natural', 'language', 'applications'] 

 UPOS tags are: 
>> [('Vector', 'NOUN'), ('representations', 'NOUN'), ('of', 'ADP'), ('words', 'NOUN'), ('learned', 'VERB'), ('from', 'ADP'), ('text', 'NOUN'), ('are', 'AUX'), ('now', 'ADV'), ('very', 'ADV'), ('widely', 'ADV'), ('used', 'VERB'), ('in', 'ADP'), ('natural', 'ADJ'), ('language', 'NOUN'), ('applications', 'NOUN')] 

 XPOS tags are: 
>> [('Vector', 'NN'), ('representations', 'NNS'), ('of', 'IN'), ('words', 'NNS'), ('learned', 'VBN'), ('from', 'IN'), ('text', 'NN'), ('are', 'VBP'), ('now', 'RB'), ('very', 'RB'), ('widely', 'RB'), ('used', 'VBN'), ('in', 'IN'), ('natural', 'JJ'), ('language', 'NN'), ('applications', 'NNS')] 

 Lemmas are: 
>> [('Vector', 'vector'), ('representations', 'representation'), ('of', 'of'), ('words', 'word'), ('learned', 'learn'), ('from', 'from'), ('text', 'text'), ('are', 'be'), ('now', 'now'), ('very', 'very'), ('widely', 'widely'), ('used', 'use'), ('in', 'in'), ('natural', 'natural'), ('language', 'language'), ('applications', 'application')] 

 Dependency tags are: 
>> [(('Vector', 'representations'), 'compound'), (('representations', 'used'), 'nsubj:pass'), (('of', 'words'), 'case'), (('words', 'representations'), 'nmod'), (('learned', 'words'), 'acl'), (('from', 'text'), 'case'), (('text', 'learned'), 'obl'), (('are', 'used'), 'aux:pass'), (('now', 'used'), 'advmod'), (('very', 'widely'), 'advmod'), (('widely', 'used'), 'advmod'), (('used', 'root'), 'root'), (('in', 'applications'), 'case'), (('natural', 'applications'), 'amod'), (('language', 'applications'), 'compound'), (('applications', 'used'), 'obl')]

 Named Entites are: 
>> []

------------------- Sentence 14 -------------------

 14,17,72–76. 

Tokens are: 
>> ['14,17,72–76.'] 

 UPOS tags are: 
>> [('14,17,72–76.', 'NUM')] 

 XPOS tags are: 
>> [('14,17,72–76.', 'CD')] 

 Lemmas are: 
>> [('14,17,72–76.', '141772–76.')] 

 Dependency tags are: 
>> [(('14,17,72–76.', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 152 =================================

The issue of representation lies at the heart of the debate between  the logic-inspired and the neural-network-inspired paradigms for  cognition. In the logic-inspired paradigm, an instance of a symbol is  something for which the only property is that it is either identical or  non-identical to other symbol instances. It has no internal structure  that is relevant to its use; and to reason with symbols, they must be  bound to the variables in judiciously chosen rules of inference. By  contrast, neural networks just use big activity vectors, big weight  matrices and scalar non-linearities to perform the type of fast ‘intui- tive’ inference that underpins effortless commonsense reasoning.  


------------------- Sentence 1 -------------------

 The issue of representation lies at the heart of the debate between  the logic-inspired and the neural-network-inspired paradigms for  cognition. 

Tokens are: 
>> ['The', 'issue', 'of', 'representation', 'lies', 'at', 'the', 'heart', 'of', 'the', 'debate', 'between', 'the', 'logic-inspired', 'and', 'the', 'neural-', 'network', '-', 'inspired', 'paradigms', 'for', 'cognition', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('issue', 'NOUN'), ('of', 'ADP'), ('representation', 'NOUN'), ('lies', 'VERB'), ('at', 'ADP'), ('the', 'DET'), ('heart', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('debate', 'NOUN'), ('between', 'ADP'), ('the', 'DET'), ('logic-inspired', 'ADJ'), ('and', 'CCONJ'), ('the', 'DET'), ('neural-', 'ADJ'), ('network', 'NOUN'), ('-', 'PUNCT'), ('inspired', 'VERB'), ('paradigms', 'NOUN'), ('for', 'ADP'), ('cognition', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('issue', 'NN'), ('of', 'IN'), ('representation', 'NN'), ('lies', 'VBZ'), ('at', 'IN'), ('the', 'DT'), ('heart', 'NN'), ('of', 'IN'), ('the', 'DT'), ('debate', 'NN'), ('between', 'IN'), ('the', 'DT'), ('logic-inspired', 'JJ'), ('and', 'CC'), ('the', 'DT'), ('neural-', 'JJ'), ('network', 'NN'), ('-', 'HYPH'), ('inspired', 'VBN'), ('paradigms', 'NNS'), ('for', 'IN'), ('cognition', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('issue', 'issue'), ('of', 'of'), ('representation', 'representation'), ('lies', 'lie'), ('at', 'at'), ('the', 'the'), ('heart', 'heart'), ('of', 'of'), ('the', 'the'), ('debate', 'debate'), ('between', 'between'), ('the', 'the'), ('logic-inspired', 'logic-inspired'), ('and', 'and'), ('the', 'the'), ('neural-', 'neural-'), ('network', 'network'), ('-', '-'), ('inspired', 'inspire'), ('paradigms', 'paradigm'), ('for', 'for'), ('cognition', 'cognition'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'issue'), 'det'), (('issue', 'lies'), 'nsubj'), (('of', 'representation'), 'case'), (('representation', 'issue'), 'nmod'), (('lies', 'root'), 'root'), (('at', 'heart'), 'case'), (('the', 'heart'), 'det'), (('heart', 'lies'), 'obl'), (('of', 'debate'), 'case'), (('the', 'debate'), 'det'), (('debate', 'heart'), 'nmod'), (('between', 'paradigms'), 'case'), (('the', 'paradigms'), 'det'), (('logic-inspired', 'paradigms'), 'amod'), (('and', 'paradigms'), 'cc'), (('the', 'paradigms'), 'det'), (('neural-', 'paradigms'), 'amod'), (('network', 'inspired'), 'compound'), (('-', 'inspired'), 'punct'), (('inspired', 'paradigms'), 'amod'), (('paradigms', 'debate'), 'nmod'), (('for', 'cognition'), 'case'), (('cognition', 'paradigms'), 'nmod'), (('.', 'lies'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 In the logic-inspired paradigm, an instance of a symbol is  something for which the only property is that it is either identical or  non-identical to other symbol instances. 

Tokens are: 
>> ['In', 'the', 'logic-inspired', 'paradigm', ',', 'an', 'instance', 'of', 'a', 'symbol', 'is', 'something', 'for', 'which', 'the', 'only', 'property', 'is', 'that', 'it', 'is', 'either', 'identical', 'or', 'non-identical', 'to', 'other', 'symbol', 'instances', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('the', 'DET'), ('logic-inspired', 'ADJ'), ('paradigm', 'NOUN'), (',', 'PUNCT'), ('an', 'DET'), ('instance', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('symbol', 'NOUN'), ('is', 'AUX'), ('something', 'NOUN'), ('for', 'ADP'), ('which', 'PRON'), ('the', 'DET'), ('only', 'ADJ'), ('property', 'NOUN'), ('is', 'VERB'), ('that', 'SCONJ'), ('it', 'PRON'), ('is', 'AUX'), ('either', 'CCONJ'), ('identical', 'ADJ'), ('or', 'CCONJ'), ('non-identical', 'ADJ'), ('to', 'ADP'), ('other', 'ADJ'), ('symbol', 'NOUN'), ('instances', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('the', 'DT'), ('logic-inspired', 'JJ'), ('paradigm', 'NN'), (',', ','), ('an', 'DT'), ('instance', 'NN'), ('of', 'IN'), ('a', 'DT'), ('symbol', 'NN'), ('is', 'VBZ'), ('something', 'NN'), ('for', 'IN'), ('which', 'WDT'), ('the', 'DT'), ('only', 'JJ'), ('property', 'NN'), ('is', 'VBZ'), ('that', 'IN'), ('it', 'PRP'), ('is', 'VBZ'), ('either', 'CC'), ('identical', 'JJ'), ('or', 'CC'), ('non-identical', 'JJ'), ('to', 'IN'), ('other', 'JJ'), ('symbol', 'NN'), ('instances', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('the', 'the'), ('logic-inspired', 'logic-inspired'), ('paradigm', 'paradigm'), (',', ','), ('an', 'a'), ('instance', 'instance'), ('of', 'of'), ('a', 'a'), ('symbol', 'symbol'), ('is', 'be'), ('something', 'something'), ('for', 'for'), ('which', 'which'), ('the', 'the'), ('only', 'only'), ('property', 'property'), ('is', 'be'), ('that', 'that'), ('it', 'it'), ('is', 'be'), ('either', 'either'), ('identical', 'identical'), ('or', 'or'), ('non-identical', 'non-identical'), ('to', 'to'), ('other', 'other'), ('symbol', 'symbol'), ('instances', 'instance'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'paradigm'), 'case'), (('the', 'paradigm'), 'det'), (('logic-inspired', 'paradigm'), 'amod'), (('paradigm', 'something'), 'obl'), ((',', 'something'), 'punct'), (('an', 'instance'), 'det'), (('instance', 'something'), 'nsubj'), (('of', 'symbol'), 'case'), (('a', 'symbol'), 'det'), (('symbol', 'instance'), 'nmod'), (('is', 'something'), 'cop'), (('something', 'root'), 'root'), (('for', 'which'), 'case'), (('which', 'is'), 'obl'), (('the', 'property'), 'det'), (('only', 'property'), 'amod'), (('property', 'is'), 'nsubj'), (('is', 'something'), 'acl:relcl'), (('that', 'identical'), 'mark'), (('it', 'identical'), 'nsubj'), (('is', 'identical'), 'cop'), (('either', 'identical'), 'cc:preconj'), (('identical', 'is'), 'ccomp'), (('or', 'non-identical'), 'cc'), (('non-identical', 'identical'), 'conj'), (('to', 'instances'), 'case'), (('other', 'instances'), 'amod'), (('symbol', 'instances'), 'compound'), (('instances', 'identical'), 'obl'), (('.', 'something'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 It has no internal structure  that is relevant to its use; and to reason with symbols, they must be  bound to the variables in judiciously chosen rules of inference. 

Tokens are: 
>> ['It', 'has', 'no', 'internal', 'structure', 'that', 'is', 'relevant', 'to', 'its', 'use', ';', 'and', 'to', 'reason', 'with', 'symbols', ',', 'they', 'must', 'be', 'bound', 'to', 'the', 'variables', 'in', 'judiciously', 'chosen', 'rules', 'of', 'inference', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('has', 'VERB'), ('no', 'DET'), ('internal', 'ADJ'), ('structure', 'NOUN'), ('that', 'PRON'), ('is', 'AUX'), ('relevant', 'ADJ'), ('to', 'ADP'), ('its', 'PRON'), ('use', 'NOUN'), (';', 'PUNCT'), ('and', 'CCONJ'), ('to', 'PART'), ('reason', 'VERB'), ('with', 'ADP'), ('symbols', 'NOUN'), (',', 'PUNCT'), ('they', 'PRON'), ('must', 'AUX'), ('be', 'AUX'), ('bound', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('variables', 'NOUN'), ('in', 'ADP'), ('judiciously', 'ADV'), ('chosen', 'VERB'), ('rules', 'NOUN'), ('of', 'ADP'), ('inference', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('has', 'VBZ'), ('no', 'DT'), ('internal', 'JJ'), ('structure', 'NN'), ('that', 'WDT'), ('is', 'VBZ'), ('relevant', 'JJ'), ('to', 'IN'), ('its', 'PRP$'), ('use', 'NN'), (';', ':'), ('and', 'CC'), ('to', 'TO'), ('reason', 'VB'), ('with', 'IN'), ('symbols', 'NNS'), (',', ','), ('they', 'PRP'), ('must', 'MD'), ('be', 'VB'), ('bound', 'VBN'), ('to', 'IN'), ('the', 'DT'), ('variables', 'NNS'), ('in', 'IN'), ('judiciously', 'RB'), ('chosen', 'VBN'), ('rules', 'NNS'), ('of', 'IN'), ('inference', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('has', 'have'), ('no', 'no'), ('internal', 'internal'), ('structure', 'structure'), ('that', 'that'), ('is', 'be'), ('relevant', 'relevant'), ('to', 'to'), ('its', 'its'), ('use', 'use'), (';', ';'), ('and', 'and'), ('to', 'to'), ('reason', 'reason'), ('with', 'with'), ('symbols', 'symbol'), (',', ','), ('they', 'they'), ('must', 'must'), ('be', 'be'), ('bound', 'bind'), ('to', 'to'), ('the', 'the'), ('variables', 'variable'), ('in', 'in'), ('judiciously', 'judiciously'), ('chosen', 'choose'), ('rules', 'rule'), ('of', 'of'), ('inference', 'inference'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'has'), 'nsubj'), (('has', 'root'), 'root'), (('no', 'structure'), 'det'), (('internal', 'structure'), 'amod'), (('structure', 'has'), 'obj'), (('that', 'relevant'), 'nsubj'), (('is', 'relevant'), 'cop'), (('relevant', 'structure'), 'acl:relcl'), (('to', 'use'), 'case'), (('its', 'use'), 'nmod:poss'), (('use', 'relevant'), 'obl'), ((';', 'bound'), 'punct'), (('and', 'bound'), 'cc'), (('to', 'reason'), 'mark'), (('reason', 'bound'), 'advcl'), (('with', 'symbols'), 'case'), (('symbols', 'reason'), 'obl'), ((',', 'bound'), 'punct'), (('they', 'bound'), 'nsubj:pass'), (('must', 'bound'), 'aux'), (('be', 'bound'), 'aux:pass'), (('bound', 'has'), 'conj'), (('to', 'variables'), 'case'), (('the', 'variables'), 'det'), (('variables', 'bound'), 'obl'), (('in', 'rules'), 'case'), (('judiciously', 'chosen'), 'advmod'), (('chosen', 'rules'), 'amod'), (('rules', 'variables'), 'nmod'), (('of', 'inference'), 'case'), (('inference', 'rules'), 'nmod'), (('.', 'has'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 By  contrast, neural networks just use big activity vectors, big weight  matrices and scalar non-linearities to perform the type of fast ‘intui- tive’ inference that underpins effortless commonsense reasoning. 

Tokens are: 
>> ['By', 'contrast', ',', 'neural', 'networks', 'just', 'use', 'big', 'activity', 'vectors', ',', 'big', 'weight', 'matrices', 'and', 'scalar', 'non-linearities', 'to', 'perform', 'the', 'type', 'of', 'fast', '‘', 'intui-', 'tive', '’', 'inference', 'that', 'underpins', 'effortless', 'commonsense', 'reasoning', '.'] 

 UPOS tags are: 
>> [('By', 'ADP'), ('contrast', 'NOUN'), (',', 'PUNCT'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('just', 'ADV'), ('use', 'VERB'), ('big', 'ADJ'), ('activity', 'NOUN'), ('vectors', 'NOUN'), (',', 'PUNCT'), ('big', 'ADJ'), ('weight', 'NOUN'), ('matrices', 'NOUN'), ('and', 'CCONJ'), ('scalar', 'ADJ'), ('non-linearities', 'NOUN'), ('to', 'PART'), ('perform', 'VERB'), ('the', 'DET'), ('type', 'NOUN'), ('of', 'ADP'), ('fast', 'ADJ'), ('‘', 'PUNCT'), ('intui-', 'X'), ('tive', 'X'), ('’', 'PUNCT'), ('inference', 'NOUN'), ('that', 'PRON'), ('underpins', 'VERB'), ('effortless', 'ADJ'), ('commonsense', 'ADJ'), ('reasoning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('By', 'IN'), ('contrast', 'NN'), (',', ','), ('neural', 'JJ'), ('networks', 'NNS'), ('just', 'RB'), ('use', 'VBP'), ('big', 'JJ'), ('activity', 'NN'), ('vectors', 'NNS'), (',', ','), ('big', 'JJ'), ('weight', 'NN'), ('matrices', 'NNS'), ('and', 'CC'), ('scalar', 'JJ'), ('non-linearities', 'NNS'), ('to', 'TO'), ('perform', 'VB'), ('the', 'DT'), ('type', 'NN'), ('of', 'IN'), ('fast', 'JJ'), ('‘', '``'), ('intui-', 'FW'), ('tive', 'FW'), ('’', "''"), ('inference', 'NN'), ('that', 'WDT'), ('underpins', 'VBZ'), ('effortless', 'JJ'), ('commonsense', 'JJ'), ('reasoning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('By', 'by'), ('contrast', 'contrast'), (',', ','), ('neural', 'neural'), ('networks', 'network'), ('just', 'just'), ('use', 'use'), ('big', 'big'), ('activity', 'activity'), ('vectors', 'vector'), (',', ','), ('big', 'big'), ('weight', 'weight'), ('matrices', 'matrice'), ('and', 'and'), ('scalar', 'scalar'), ('non-linearities', 'non-linearity'), ('to', 'to'), ('perform', 'perform'), ('the', 'the'), ('type', 'type'), ('of', 'of'), ('fast', 'fast'), ('‘', "'"), ('intui-', 'intui-'), ('tive', 'tive'), ('’', "'"), ('inference', 'inference'), ('that', 'that'), ('underpins', 'underpin'), ('effortless', 'effortless'), ('commonsense', 'commonsense'), ('reasoning', 'reasoning'), ('.', '.')] 

 Dependency tags are: 
>> [(('By', 'contrast'), 'case'), (('contrast', 'use'), 'obl'), ((',', 'use'), 'punct'), (('neural', 'networks'), 'amod'), (('networks', 'use'), 'nsubj'), (('just', 'use'), 'advmod'), (('use', 'root'), 'root'), (('big', 'vectors'), 'amod'), (('activity', 'vectors'), 'compound'), (('vectors', 'use'), 'obj'), ((',', 'matrices'), 'punct'), (('big', 'matrices'), 'amod'), (('weight', 'matrices'), 'compound'), (('matrices', 'vectors'), 'conj'), (('and', 'non-linearities'), 'cc'), (('scalar', 'non-linearities'), 'amod'), (('non-linearities', 'vectors'), 'conj'), (('to', 'perform'), 'mark'), (('perform', 'use'), 'advcl'), (('the', 'type'), 'det'), (('type', 'perform'), 'obj'), (('of', 'inference'), 'case'), (('fast', 'inference'), 'amod'), (('‘', 'intui-'), 'punct'), (('intui-', 'inference'), 'compound'), (('tive', 'intui-'), 'flat'), (('’', 'tive'), 'punct'), (('inference', 'type'), 'nmod'), (('that', 'underpins'), 'nsubj'), (('underpins', 'inference'), 'acl:relcl'), (('effortless', 'reasoning'), 'amod'), (('commonsense', 'reasoning'), 'amod'), (('reasoning', 'underpins'), 'obj'), (('.', 'use'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 153 =================================

Before the introduction of neural language models71, the standard  approach to statistical modelling of language did not exploit distrib- uted representations: it was based on counting frequencies of occur- rences of short symbol sequences of length up to N (called N-grams).  The number of possible N-grams is on the order of VN, where V is  the vocabulary size, so taking into account a context of more than a  


------------------- Sentence 1 -------------------

 Before the introduction of neural language models71, the standard  approach to statistical modelling of language did not exploit distrib- uted representations: it was based on counting frequencies of occur- rences of short symbol sequences of length up to N (called N-grams). 

Tokens are: 
>> ['Before', 'the', 'introduction', 'of', 'neural', 'language', 'models71', ',', 'the', 'standard', 'approach', 'to', 'statistical', 'modelling', 'of', 'language', 'did', 'not', 'exploit', 'distrib-', 'uted', 'representations', ':', 'it', 'was', 'based', 'on', 'counting', 'frequencies', 'of', 'occur-', 'rences', 'of', 'short', 'symbol', 'sequences', 'of', 'length', 'up', 'to', 'N', '(', 'called', 'N-grams', ')', '.'] 

 UPOS tags are: 
>> [('Before', 'ADP'), ('the', 'DET'), ('introduction', 'NOUN'), ('of', 'ADP'), ('neural', 'ADJ'), ('language', 'NOUN'), ('models71', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('standard', 'ADJ'), ('approach', 'NOUN'), ('to', 'ADP'), ('statistical', 'ADJ'), ('modelling', 'NOUN'), ('of', 'ADP'), ('language', 'NOUN'), ('did', 'AUX'), ('not', 'PART'), ('exploit', 'VERB'), ('distrib-', 'ADJ'), ('uted', 'ADJ'), ('representations', 'NOUN'), (':', 'PUNCT'), ('it', 'PRON'), ('was', 'AUX'), ('based', 'VERB'), ('on', 'SCONJ'), ('counting', 'VERB'), ('frequencies', 'NOUN'), ('of', 'ADP'), ('occur-', 'ADJ'), ('rences', 'NOUN'), ('of', 'ADP'), ('short', 'ADJ'), ('symbol', 'NOUN'), ('sequences', 'NOUN'), ('of', 'ADP'), ('length', 'NOUN'), ('up', 'ADP'), ('to', 'ADP'), ('N', 'PROPN'), ('(', 'PUNCT'), ('called', 'VERB'), ('N-grams', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Before', 'IN'), ('the', 'DT'), ('introduction', 'NN'), ('of', 'IN'), ('neural', 'JJ'), ('language', 'NN'), ('models71', 'NNS'), (',', ','), ('the', 'DT'), ('standard', 'JJ'), ('approach', 'NN'), ('to', 'IN'), ('statistical', 'JJ'), ('modelling', 'NN'), ('of', 'IN'), ('language', 'NN'), ('did', 'VBD'), ('not', 'RB'), ('exploit', 'VB'), ('distrib-', 'JJ'), ('uted', 'JJ'), ('representations', 'NNS'), (':', ':'), ('it', 'PRP'), ('was', 'VBD'), ('based', 'VBN'), ('on', 'IN'), ('counting', 'VBG'), ('frequencies', 'NNS'), ('of', 'IN'), ('occur-', 'JJ'), ('rences', 'NNS'), ('of', 'IN'), ('short', 'JJ'), ('symbol', 'NN'), ('sequences', 'NNS'), ('of', 'IN'), ('length', 'NN'), ('up', 'RP'), ('to', 'IN'), ('N', 'NNP'), ('(', '-LRB-'), ('called', 'VBN'), ('N-grams', 'NNPS'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Before', 'before'), ('the', 'the'), ('introduction', 'introduction'), ('of', 'of'), ('neural', 'neural'), ('language', 'language'), ('models71', 'models71'), (',', ','), ('the', 'the'), ('standard', 'standard'), ('approach', 'approach'), ('to', 'to'), ('statistical', 'statistical'), ('modelling', 'modelling'), ('of', 'of'), ('language', 'language'), ('did', 'do'), ('not', 'not'), ('exploit', 'exploit'), ('distrib-', 'distrib-'), ('uted', 'uted'), ('representations', 'representation'), (':', ':'), ('it', 'it'), ('was', 'be'), ('based', 'base'), ('on', 'on'), ('counting', 'count'), ('frequencies', 'frequency'), ('of', 'of'), ('occur-', 'occur-'), ('rences', 'rence'), ('of', 'of'), ('short', 'short'), ('symbol', 'symbol'), ('sequences', 'sequence'), ('of', 'of'), ('length', 'length'), ('up', 'up'), ('to', 'to'), ('N', 'N'), ('(', '('), ('called', 'call'), ('N-grams', 'N-grams'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Before', 'introduction'), 'case'), (('the', 'introduction'), 'det'), (('introduction', 'exploit'), 'obl'), (('of', 'models71'), 'case'), (('neural', 'language'), 'amod'), (('language', 'models71'), 'compound'), (('models71', 'introduction'), 'nmod'), ((',', 'exploit'), 'punct'), (('the', 'approach'), 'det'), (('standard', 'approach'), 'amod'), (('approach', 'exploit'), 'nsubj'), (('to', 'modelling'), 'case'), (('statistical', 'modelling'), 'amod'), (('modelling', 'approach'), 'nmod'), (('of', 'language'), 'case'), (('language', 'modelling'), 'nmod'), (('did', 'exploit'), 'aux'), (('not', 'exploit'), 'advmod'), (('exploit', 'root'), 'root'), (('distrib-', 'representations'), 'amod'), (('uted', 'representations'), 'amod'), (('representations', 'exploit'), 'obj'), ((':', 'exploit'), 'punct'), (('it', 'based'), 'nsubj:pass'), (('was', 'based'), 'aux:pass'), (('based', 'exploit'), 'parataxis'), (('on', 'counting'), 'mark'), (('counting', 'based'), 'advcl'), (('frequencies', 'counting'), 'obj'), (('of', 'rences'), 'case'), (('occur-', 'rences'), 'amod'), (('rences', 'frequencies'), 'nmod'), (('of', 'sequences'), 'case'), (('short', 'sequences'), 'amod'), (('symbol', 'sequences'), 'compound'), (('sequences', 'rences'), 'nmod'), (('of', 'length'), 'case'), (('length', 'sequences'), 'nmod'), (('up', 'sequences'), 'nmod'), (('to', 'N'), 'case'), (('N', 'sequences'), 'nmod'), (('(', 'called'), 'punct'), (('called', 'N'), 'acl'), (('N-grams', 'called'), 'xcomp'), ((')', 'called'), 'punct'), (('.', 'exploit'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 The number of possible N-grams is on the order of VN, where V is  the vocabulary size, so taking into account a context of more than a 

Tokens are: 
>> ['The', 'number', 'of', 'possible', 'N-grams', 'is', 'on', 'the', 'order', 'of', 'VN', ',', 'where', 'V', 'is', 'the', 'vocabulary', 'size', ',', 'so', 'taking', 'into', 'account', 'a', 'context', 'of', 'more', 'than', 'a'] 

 UPOS tags are: 
>> [('The', 'DET'), ('number', 'NOUN'), ('of', 'ADP'), ('possible', 'ADJ'), ('N-grams', 'PROPN'), ('is', 'AUX'), ('on', 'ADP'), ('the', 'DET'), ('order', 'NOUN'), ('of', 'ADP'), ('VN', 'PROPN'), (',', 'PUNCT'), ('where', 'SCONJ'), ('V', 'PROPN'), ('is', 'AUX'), ('the', 'DET'), ('vocabulary', 'NOUN'), ('size', 'NOUN'), (',', 'PUNCT'), ('so', 'ADV'), ('taking', 'VERB'), ('into', 'ADP'), ('account', 'NOUN'), ('a', 'DET'), ('context', 'NOUN'), ('of', 'ADP'), ('more', 'ADJ'), ('than', 'ADP'), ('a', 'DET')] 

 XPOS tags are: 
>> [('The', 'DT'), ('number', 'NN'), ('of', 'IN'), ('possible', 'JJ'), ('N-grams', 'NNPS'), ('is', 'VBZ'), ('on', 'IN'), ('the', 'DT'), ('order', 'NN'), ('of', 'IN'), ('VN', 'NNP'), (',', ','), ('where', 'WRB'), ('V', 'NNP'), ('is', 'VBZ'), ('the', 'DT'), ('vocabulary', 'NN'), ('size', 'NN'), (',', ','), ('so', 'RB'), ('taking', 'VBG'), ('into', 'IN'), ('account', 'NN'), ('a', 'DT'), ('context', 'NN'), ('of', 'IN'), ('more', 'JJR'), ('than', 'IN'), ('a', 'DT')] 

 Lemmas are: 
>> [('The', 'the'), ('number', 'number'), ('of', 'of'), ('possible', 'possible'), ('N-grams', 'N-grams'), ('is', 'be'), ('on', 'on'), ('the', 'the'), ('order', 'order'), ('of', 'of'), ('VN', 'VN'), (',', ','), ('where', 'where'), ('V', 'V'), ('is', 'be'), ('the', 'the'), ('vocabulary', 'vocabulary'), ('size', 'size'), (',', ','), ('so', 'so'), ('taking', 'take'), ('into', 'into'), ('account', 'account'), ('a', 'a'), ('context', 'context'), ('of', 'of'), ('more', 'more'), ('than', 'than'), ('a', 'a')] 

 Dependency tags are: 
>> [(('The', 'number'), 'det'), (('number', 'order'), 'nsubj'), (('of', 'N-grams'), 'case'), (('possible', 'N-grams'), 'amod'), (('N-grams', 'number'), 'nmod'), (('is', 'order'), 'cop'), (('on', 'order'), 'case'), (('the', 'order'), 'det'), (('order', 'root'), 'root'), (('of', 'VN'), 'case'), (('VN', 'order'), 'nmod'), ((',', 'VN'), 'punct'), (('where', 'size'), 'mark'), (('V', 'size'), 'nsubj'), (('is', 'size'), 'cop'), (('the', 'size'), 'det'), (('vocabulary', 'size'), 'compound'), (('size', 'order'), 'acl:relcl'), ((',', 'taking'), 'punct'), (('so', 'taking'), 'advmod'), (('taking', 'order'), 'advcl'), (('into', 'account'), 'case'), (('account', 'taking'), 'obl'), (('a', 'context'), 'det'), (('context', 'taking'), 'obj'), (('of', 'more'), 'case'), (('more', 'context'), 'nmod'), (('than', 'more'), 'fixed'), (('a', 'context'), 'nmod')]

 Named Entites are: 
>> []

================================ Paragraph 154 =================================

handful of words would require very large training corpora. N-grams  treat each word as an atomic unit, so they cannot generalize across  semantically related sequences of words, whereas neural language  models can because they associate each word with a vector of real  valued features, and semantically related words end up close to each  other in that vector space (Fig. 4).  


------------------- Sentence 1 -------------------

 handful of words would require very large training corpora. 

Tokens are: 
>> ['handful', 'of', 'words', 'would', 'require', 'very', 'large', 'training', 'corpora', '.'] 

 UPOS tags are: 
>> [('handful', 'NOUN'), ('of', 'ADP'), ('words', 'NOUN'), ('would', 'AUX'), ('require', 'VERB'), ('very', 'ADV'), ('large', 'ADJ'), ('training', 'NOUN'), ('corpora', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('handful', 'NN'), ('of', 'IN'), ('words', 'NNS'), ('would', 'MD'), ('require', 'VB'), ('very', 'RB'), ('large', 'JJ'), ('training', 'NN'), ('corpora', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('handful', 'handful'), ('of', 'of'), ('words', 'word'), ('would', 'would'), ('require', 'require'), ('very', 'very'), ('large', 'large'), ('training', 'training'), ('corpora', 'corpus'), ('.', '.')] 

 Dependency tags are: 
>> [(('handful', 'require'), 'nsubj'), (('of', 'words'), 'case'), (('words', 'handful'), 'nmod'), (('would', 'require'), 'aux'), (('require', 'root'), 'root'), (('very', 'large'), 'advmod'), (('large', 'corpora'), 'amod'), (('training', 'corpora'), 'compound'), (('corpora', 'require'), 'obj'), (('.', 'require'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 N-grams  treat each word as an atomic unit, so they cannot generalize across  semantically related sequences of words, whereas neural language  models can because they associate each word with a vector of real  valued features, and semantically related words end up close to each  other in that vector space (Fig. 4). 

Tokens are: 
>> ['N-grams', 'treat', 'each', 'word', 'as', 'an', 'atomic', 'unit', ',', 'so', 'they', 'cannot', 'generalize', 'across', 'semantically', 'related', 'sequences', 'of', 'words', ',', 'whereas', 'neural', 'language', 'models', 'can', 'because', 'they', 'associate', 'each', 'word', 'with', 'a', 'vector', 'of', 'real', 'valued', 'features', ',', 'and', 'semantically', 'related', 'words', 'end', 'up', 'close', 'to', 'each', 'other', 'in', 'that', 'vector', 'space', '(', 'Fig.', '4', ')', '.'] 

 UPOS tags are: 
>> [('N-grams', 'NOUN'), ('treat', 'VERB'), ('each', 'DET'), ('word', 'NOUN'), ('as', 'ADP'), ('an', 'DET'), ('atomic', 'ADJ'), ('unit', 'NOUN'), (',', 'PUNCT'), ('so', 'ADV'), ('they', 'PRON'), ('cannot', 'AUX'), ('generalize', 'VERB'), ('across', 'ADP'), ('semantically', 'ADV'), ('related', 'ADJ'), ('sequences', 'NOUN'), ('of', 'ADP'), ('words', 'NOUN'), (',', 'PUNCT'), ('whereas', 'SCONJ'), ('neural', 'ADJ'), ('language', 'NOUN'), ('models', 'NOUN'), ('can', 'AUX'), ('because', 'SCONJ'), ('they', 'PRON'), ('associate', 'VERB'), ('each', 'DET'), ('word', 'NOUN'), ('with', 'ADP'), ('a', 'DET'), ('vector', 'NOUN'), ('of', 'ADP'), ('real', 'ADJ'), ('valued', 'VERB'), ('features', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('semantically', 'ADV'), ('related', 'ADJ'), ('words', 'NOUN'), ('end', 'VERB'), ('up', 'ADP'), ('close', 'ADJ'), ('to', 'ADP'), ('each', 'DET'), ('other', 'ADJ'), ('in', 'ADP'), ('that', 'DET'), ('vector', 'NOUN'), ('space', 'NOUN'), ('(', 'PUNCT'), ('Fig.', 'NOUN'), ('4', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('N-grams', 'NNS'), ('treat', 'VBP'), ('each', 'DT'), ('word', 'NN'), ('as', 'IN'), ('an', 'DT'), ('atomic', 'JJ'), ('unit', 'NN'), (',', ','), ('so', 'RB'), ('they', 'PRP'), ('cannot', 'MD'), ('generalize', 'VB'), ('across', 'IN'), ('semantically', 'RB'), ('related', 'JJ'), ('sequences', 'NNS'), ('of', 'IN'), ('words', 'NNS'), (',', ','), ('whereas', 'IN'), ('neural', 'JJ'), ('language', 'NN'), ('models', 'NNS'), ('can', 'MD'), ('because', 'IN'), ('they', 'PRP'), ('associate', 'VBP'), ('each', 'DT'), ('word', 'NN'), ('with', 'IN'), ('a', 'DT'), ('vector', 'NN'), ('of', 'IN'), ('real', 'JJ'), ('valued', 'VBN'), ('features', 'NNS'), (',', ','), ('and', 'CC'), ('semantically', 'RB'), ('related', 'JJ'), ('words', 'NNS'), ('end', 'VBP'), ('up', 'RP'), ('close', 'JJ'), ('to', 'IN'), ('each', 'DT'), ('other', 'JJ'), ('in', 'IN'), ('that', 'DT'), ('vector', 'NN'), ('space', 'NN'), ('(', '-LRB-'), ('Fig.', 'NN'), ('4', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('N-grams', 'n-gram'), ('treat', 'treat'), ('each', 'each'), ('word', 'word'), ('as', 'as'), ('an', 'a'), ('atomic', 'atomic'), ('unit', 'unit'), (',', ','), ('so', 'so'), ('they', 'they'), ('cannot', 'cannot'), ('generalize', 'generalize'), ('across', 'across'), ('semantically', 'semantically'), ('related', 'related'), ('sequences', 'sequence'), ('of', 'of'), ('words', 'word'), (',', ','), ('whereas', 'whereas'), ('neural', 'neural'), ('language', 'language'), ('models', 'model'), ('can', 'can'), ('because', 'because'), ('they', 'they'), ('associate', 'associate'), ('each', 'each'), ('word', 'word'), ('with', 'with'), ('a', 'a'), ('vector', 'vector'), ('of', 'of'), ('real', 'real'), ('valued', 'value'), ('features', 'feature'), (',', ','), ('and', 'and'), ('semantically', 'semantically'), ('related', 'related'), ('words', 'word'), ('end', 'end'), ('up', 'up'), ('close', 'close'), ('to', 'to'), ('each', 'each'), ('other', 'other'), ('in', 'in'), ('that', 'that'), ('vector', 'vector'), ('space', 'space'), ('(', '('), ('Fig.', 'fig.'), ('4', '4'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('N-grams', 'treat'), 'nsubj'), (('treat', 'root'), 'root'), (('each', 'word'), 'det'), (('word', 'treat'), 'obj'), (('as', 'unit'), 'case'), (('an', 'unit'), 'det'), (('atomic', 'unit'), 'amod'), (('unit', 'treat'), 'obl'), ((',', 'generalize'), 'punct'), (('so', 'generalize'), 'advmod'), (('they', 'generalize'), 'nsubj'), (('cannot', 'generalize'), 'aux'), (('generalize', 'treat'), 'conj'), (('across', 'sequences'), 'case'), (('semantically', 'related'), 'advmod'), (('related', 'sequences'), 'amod'), (('sequences', 'generalize'), 'obl'), (('of', 'words'), 'case'), (('words', 'sequences'), 'nmod'), ((',', 'generalize'), 'punct'), (('whereas', 'can'), 'mark'), (('neural', 'models'), 'amod'), (('language', 'models'), 'compound'), (('models', 'can'), 'nsubj'), (('can', 'generalize'), 'advcl'), (('because', 'associate'), 'mark'), (('they', 'associate'), 'nsubj'), (('associate', 'generalize'), 'advcl'), (('each', 'word'), 'det'), (('word', 'associate'), 'obj'), (('with', 'vector'), 'case'), (('a', 'vector'), 'det'), (('vector', 'associate'), 'obl'), (('of', 'features'), 'case'), (('real', 'features'), 'amod'), (('valued', 'features'), 'amod'), (('features', 'vector'), 'nmod'), ((',', 'end'), 'punct'), (('and', 'end'), 'cc'), (('semantically', 'related'), 'advmod'), (('related', 'words'), 'amod'), (('words', 'end'), 'nsubj'), (('end', 'treat'), 'conj'), (('up', 'end'), 'compound:prt'), (('close', 'end'), 'xcomp'), (('to', 'other'), 'case'), (('each', 'other'), 'det'), (('other', 'close'), 'obl'), (('in', 'space'), 'case'), (('that', 'space'), 'det'), (('vector', 'space'), 'compound'), (('space', 'end'), 'obl'), (('(', 'Fig.'), 'punct'), (('Fig.', 'end'), 'dep'), (('4', 'Fig.'), 'dep'), ((')', 'Fig.'), 'punct'), (('.', 'treat'), 'punct')]

 Named Entites are: 
>> [('4', 'CARDINAL')]

================================ Paragraph 155 =================================

Recurrent neural networks  When backpropagation was first introduced, its most exciting use was  for training recurrent neural networks (RNNs). For tasks that involve  sequential inputs, such as speech and language, it is often better to  use RNNs (Fig. 5). RNNs process an input sequence one element at a  time, maintaining in their hidden units a ‘state vector’ that implicitly  contains information about the history of all the past elements of  the sequence. When we consider the outputs of the hidden units at  different discrete time steps as if they were the outputs of different  neurons in a deep multilayer network (Fig. 5, right), it becomes clear  how we can apply backpropagation to train RNNs.  


------------------- Sentence 1 -------------------

 Recurrent neural networks 

Tokens are: 
>> ['Recurrent', 'neural', 'networks'] 

 UPOS tags are: 
>> [('Recurrent', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN')] 

 XPOS tags are: 
>> [('Recurrent', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS')] 

 Lemmas are: 
>> [('Recurrent', 'recurrent'), ('neural', 'neural'), ('networks', 'network')] 

 Dependency tags are: 
>> [(('Recurrent', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 When backpropagation was first introduced, its most exciting use was  for training recurrent neural networks (RNNs). 

Tokens are: 
>> ['When', 'backpropagation', 'was', 'first', 'introduced', ',', 'its', 'most', 'exciting', 'use', 'was', 'for', 'training', 'recurrent', 'neural', 'networks', '(', 'RNNs', ')', '.'] 

 UPOS tags are: 
>> [('When', 'SCONJ'), ('backpropagation', 'NOUN'), ('was', 'AUX'), ('first', 'ADV'), ('introduced', 'VERB'), (',', 'PUNCT'), ('its', 'PRON'), ('most', 'ADV'), ('exciting', 'ADJ'), ('use', 'NOUN'), ('was', 'AUX'), ('for', 'SCONJ'), ('training', 'VERB'), ('recurrent', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('(', 'PUNCT'), ('RNNs', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('When', 'WRB'), ('backpropagation', 'NN'), ('was', 'VBD'), ('first', 'RB'), ('introduced', 'VBN'), (',', ','), ('its', 'PRP$'), ('most', 'RBS'), ('exciting', 'JJ'), ('use', 'NN'), ('was', 'VBD'), ('for', 'IN'), ('training', 'VBG'), ('recurrent', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), ('(', '-LRB-'), ('RNNs', 'NNP'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('When', 'when'), ('backpropagation', 'backpropagation'), ('was', 'be'), ('first', 'first'), ('introduced', 'introduce'), (',', ','), ('its', 'its'), ('most', 'most'), ('exciting', 'exciting'), ('use', 'use'), ('was', 'be'), ('for', 'for'), ('training', 'train'), ('recurrent', 'recurrent'), ('neural', 'neural'), ('networks', 'network'), ('(', '('), ('RNNs', 'RNNs'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('When', 'introduced'), 'mark'), (('backpropagation', 'introduced'), 'nsubj:pass'), (('was', 'introduced'), 'aux:pass'), (('first', 'introduced'), 'advmod'), (('introduced', 'training'), 'advcl'), ((',', 'was'), 'punct'), (('its', 'use'), 'nmod:poss'), (('most', 'exciting'), 'advmod'), (('exciting', 'use'), 'amod'), (('use', 'was'), 'nsubj'), (('was', 'root'), 'root'), (('for', 'training'), 'mark'), (('training', 'was'), 'advcl'), (('recurrent', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'training'), 'obj'), (('(', 'RNNs'), 'punct'), (('RNNs', 'networks'), 'appos'), ((')', 'RNNs'), 'punct'), (('.', 'was'), 'punct')]

 Named Entites are: 
>> [('first', 'ORDINAL'), ('RNNs', 'ORG')]

------------------- Sentence 3 -------------------

 For tasks that involve  sequential inputs, such as speech and language, it is often better to  use RNNs (Fig. 5). 

Tokens are: 
>> ['For', 'tasks', 'that', 'involve', 'sequential', 'inputs', ',', 'such', 'as', 'speech', 'and', 'language', ',', 'it', 'is', 'often', 'better', 'to', 'use', 'RNNs', '(', 'Fig.', '5', ')', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('tasks', 'NOUN'), ('that', 'PRON'), ('involve', 'VERB'), ('sequential', 'ADJ'), ('inputs', 'NOUN'), (',', 'PUNCT'), ('such', 'ADJ'), ('as', 'ADP'), ('speech', 'NOUN'), ('and', 'CCONJ'), ('language', 'NOUN'), (',', 'PUNCT'), ('it', 'PRON'), ('is', 'AUX'), ('often', 'ADV'), ('better', 'ADJ'), ('to', 'PART'), ('use', 'VERB'), ('RNNs', 'PROPN'), ('(', 'PUNCT'), ('Fig.', 'PROPN'), ('5', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('tasks', 'NNS'), ('that', 'WDT'), ('involve', 'VBP'), ('sequential', 'JJ'), ('inputs', 'NNS'), (',', ','), ('such', 'JJ'), ('as', 'IN'), ('speech', 'NN'), ('and', 'CC'), ('language', 'NN'), (',', ','), ('it', 'PRP'), ('is', 'VBZ'), ('often', 'RB'), ('better', 'JJR'), ('to', 'TO'), ('use', 'VB'), ('RNNs', 'NNP'), ('(', '-LRB-'), ('Fig.', 'NNP'), ('5', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('tasks', 'task'), ('that', 'that'), ('involve', 'involve'), ('sequential', 'sequential'), ('inputs', 'input'), (',', ','), ('such', 'such'), ('as', 'as'), ('speech', 'speech'), ('and', 'and'), ('language', 'language'), (',', ','), ('it', 'it'), ('is', 'be'), ('often', 'often'), ('better', 'good'), ('to', 'to'), ('use', 'use'), ('RNNs', 'RNNs'), ('(', '('), ('Fig.', 'Fig.'), ('5', '5'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'tasks'), 'case'), (('tasks', 'better'), 'obl'), (('that', 'involve'), 'nsubj'), (('involve', 'tasks'), 'acl:relcl'), (('sequential', 'inputs'), 'amod'), (('inputs', 'involve'), 'obj'), ((',', 'speech'), 'punct'), (('such', 'speech'), 'case'), (('as', 'such'), 'fixed'), (('speech', 'inputs'), 'nmod'), (('and', 'language'), 'cc'), (('language', 'speech'), 'conj'), ((',', 'better'), 'punct'), (('it', 'better'), 'expl'), (('is', 'better'), 'cop'), (('often', 'better'), 'advmod'), (('better', 'root'), 'root'), (('to', 'use'), 'mark'), (('use', 'better'), 'csubj'), (('RNNs', 'use'), 'obj'), (('(', 'Fig.'), 'punct'), (('Fig.', 'RNNs'), 'appos'), (('5', 'Fig.'), 'dep'), ((')', 'Fig.'), 'punct'), (('.', 'better'), 'punct')]

 Named Entites are: 
>> [('RNNs', 'ORG')]

------------------- Sentence 4 -------------------

 RNNs process an input sequence one element at a  time, maintaining in their hidden units a ‘state vector’ that implicitly  contains information about the history of all the past elements of  the sequence. 

Tokens are: 
>> ['RNNs', 'process', 'an', 'input', 'sequence', 'one', 'element', 'at', 'a', 'time', ',', 'maintaining', 'in', 'their', 'hidden', 'units', 'a', '‘', 'state', 'vector', '’', 'that', 'implicitly', 'contains', 'information', 'about', 'the', 'history', 'of', 'all', 'the', 'past', 'elements', 'of', 'the', 'sequence', '.'] 

 UPOS tags are: 
>> [('RNNs', 'PROPN'), ('process', 'VERB'), ('an', 'DET'), ('input', 'NOUN'), ('sequence', 'NOUN'), ('one', 'NUM'), ('element', 'NOUN'), ('at', 'ADP'), ('a', 'DET'), ('time', 'NOUN'), (',', 'PUNCT'), ('maintaining', 'VERB'), ('in', 'ADP'), ('their', 'PRON'), ('hidden', 'VERB'), ('units', 'NOUN'), ('a', 'DET'), ('‘', 'PUNCT'), ('state', 'NOUN'), ('vector', 'NOUN'), ('’', 'PUNCT'), ('that', 'PRON'), ('implicitly', 'ADV'), ('contains', 'VERB'), ('information', 'NOUN'), ('about', 'ADP'), ('the', 'DET'), ('history', 'NOUN'), ('of', 'ADP'), ('all', 'PRON'), ('the', 'DET'), ('past', 'ADJ'), ('elements', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('sequence', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('RNNs', 'NNP'), ('process', 'VBP'), ('an', 'DT'), ('input', 'NN'), ('sequence', 'NN'), ('one', 'CD'), ('element', 'NN'), ('at', 'IN'), ('a', 'DT'), ('time', 'NN'), (',', ','), ('maintaining', 'VBG'), ('in', 'IN'), ('their', 'PRP$'), ('hidden', 'VBN'), ('units', 'NNS'), ('a', 'DT'), ('‘', '``'), ('state', 'NN'), ('vector', 'NN'), ('’', "''"), ('that', 'WDT'), ('implicitly', 'RB'), ('contains', 'VBZ'), ('information', 'NN'), ('about', 'IN'), ('the', 'DT'), ('history', 'NN'), ('of', 'IN'), ('all', 'PDT'), ('the', 'DT'), ('past', 'JJ'), ('elements', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('sequence', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('RNNs', 'RNNs'), ('process', 'process'), ('an', 'a'), ('input', 'input'), ('sequence', 'sequence'), ('one', 'one'), ('element', 'element'), ('at', 'at'), ('a', 'a'), ('time', 'time'), (',', ','), ('maintaining', 'maintain'), ('in', 'in'), ('their', 'they'), ('hidden', 'hide'), ('units', 'unit'), ('a', 'a'), ('‘', "'"), ('state', 'state'), ('vector', 'vector'), ('’', "'"), ('that', 'that'), ('implicitly', 'implicitly'), ('contains', 'contain'), ('information', 'information'), ('about', 'about'), ('the', 'the'), ('history', 'history'), ('of', 'of'), ('all', 'all'), ('the', 'the'), ('past', 'past'), ('elements', 'element'), ('of', 'of'), ('the', 'the'), ('sequence', 'sequence'), ('.', '.')] 

 Dependency tags are: 
>> [(('RNNs', 'process'), 'nsubj'), (('process', 'root'), 'root'), (('an', 'sequence'), 'det'), (('input', 'sequence'), 'compound'), (('sequence', 'process'), 'obj'), (('one', 'element'), 'nummod'), (('element', 'process'), 'obj'), (('at', 'time'), 'case'), (('a', 'time'), 'det'), (('time', 'process'), 'obl'), ((',', 'maintaining'), 'punct'), (('maintaining', 'process'), 'advcl'), (('in', 'units'), 'case'), (('their', 'units'), 'nmod:poss'), (('hidden', 'units'), 'amod'), (('units', 'maintaining'), 'obl'), (('a', 'vector'), 'det'), (('‘', 'vector'), 'punct'), (('state', 'vector'), 'compound'), (('vector', 'units'), 'appos'), (('’', 'vector'), 'punct'), (('that', 'contains'), 'nsubj'), (('implicitly', 'contains'), 'advmod'), (('contains', 'vector'), 'acl:relcl'), (('information', 'contains'), 'obj'), (('about', 'history'), 'case'), (('the', 'history'), 'det'), (('history', 'information'), 'nmod'), (('of', 'elements'), 'case'), (('all', 'elements'), 'det:predet'), (('the', 'elements'), 'det'), (('past', 'elements'), 'amod'), (('elements', 'history'), 'nmod'), (('of', 'sequence'), 'case'), (('the', 'sequence'), 'det'), (('sequence', 'elements'), 'nmod'), (('.', 'process'), 'punct')]

 Named Entites are: 
>> [('one', 'CARDINAL')]

------------------- Sentence 5 -------------------

 When we consider the outputs of the hidden units at  different discrete time steps as if they were the outputs of different  neurons in a deep multilayer network (Fig. 5, right), it becomes clear  how we can apply backpropagation to train RNNs. 

Tokens are: 
>> ['When', 'we', 'consider', 'the', 'outputs', 'of', 'the', 'hidden', 'units', 'at', 'different', 'discrete', 'time', 'steps', 'as', 'if', 'they', 'were', 'the', 'outputs', 'of', 'different', 'neurons', 'in', 'a', 'deep', 'multilayer', 'network', '(', 'Fig.', '5', ',', 'right', ')', ',', 'it', 'becomes', 'clear', 'how', 'we', 'can', 'apply', 'backpropagation', 'to', 'train', 'RNNs', '.'] 

 UPOS tags are: 
>> [('When', 'SCONJ'), ('we', 'PRON'), ('consider', 'VERB'), ('the', 'DET'), ('outputs', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('hidden', 'VERB'), ('units', 'NOUN'), ('at', 'ADP'), ('different', 'ADJ'), ('discrete', 'ADJ'), ('time', 'NOUN'), ('steps', 'NOUN'), ('as', 'SCONJ'), ('if', 'SCONJ'), ('they', 'PRON'), ('were', 'AUX'), ('the', 'DET'), ('outputs', 'NOUN'), ('of', 'ADP'), ('different', 'ADJ'), ('neurons', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('deep', 'ADJ'), ('multilayer', 'NOUN'), ('network', 'NOUN'), ('(', 'PUNCT'), ('Fig.', 'PROPN'), ('5', 'NUM'), (',', 'PUNCT'), ('right', 'ADV'), (')', 'PUNCT'), (',', 'PUNCT'), ('it', 'PRON'), ('becomes', 'VERB'), ('clear', 'ADJ'), ('how', 'SCONJ'), ('we', 'PRON'), ('can', 'AUX'), ('apply', 'VERB'), ('backpropagation', 'NOUN'), ('to', 'PART'), ('train', 'VERB'), ('RNNs', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('When', 'WRB'), ('we', 'PRP'), ('consider', 'VBP'), ('the', 'DT'), ('outputs', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('hidden', 'VBN'), ('units', 'NNS'), ('at', 'IN'), ('different', 'JJ'), ('discrete', 'JJ'), ('time', 'NN'), ('steps', 'NNS'), ('as', 'IN'), ('if', 'IN'), ('they', 'PRP'), ('were', 'VBD'), ('the', 'DT'), ('outputs', 'NNS'), ('of', 'IN'), ('different', 'JJ'), ('neurons', 'NNS'), ('in', 'IN'), ('a', 'DT'), ('deep', 'JJ'), ('multilayer', 'NN'), ('network', 'NN'), ('(', '-LRB-'), ('Fig.', 'NNP'), ('5', 'CD'), (',', ','), ('right', 'RB'), (')', '-RRB-'), (',', ','), ('it', 'PRP'), ('becomes', 'VBZ'), ('clear', 'JJ'), ('how', 'WRB'), ('we', 'PRP'), ('can', 'MD'), ('apply', 'VB'), ('backpropagation', 'NN'), ('to', 'TO'), ('train', 'VB'), ('RNNs', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('When', 'when'), ('we', 'we'), ('consider', 'consider'), ('the', 'the'), ('outputs', 'output'), ('of', 'of'), ('the', 'the'), ('hidden', 'hide'), ('units', 'unit'), ('at', 'at'), ('different', 'different'), ('discrete', 'discrete'), ('time', 'time'), ('steps', 'step'), ('as', 'as'), ('if', 'if'), ('they', 'they'), ('were', 'be'), ('the', 'the'), ('outputs', 'output'), ('of', 'of'), ('different', 'different'), ('neurons', 'neuron'), ('in', 'in'), ('a', 'a'), ('deep', 'deep'), ('multilayer', 'multilayer'), ('network', 'network'), ('(', '('), ('Fig.', 'Fig.'), ('5', '5'), (',', ','), ('right', 'right'), (')', ')'), (',', ','), ('it', 'it'), ('becomes', 'become'), ('clear', 'clear'), ('how', 'how'), ('we', 'we'), ('can', 'can'), ('apply', 'apply'), ('backpropagation', 'backpropagation'), ('to', 'to'), ('train', 'train'), ('RNNs', 'RNNs'), ('.', '.')] 

 Dependency tags are: 
>> [(('When', 'consider'), 'mark'), (('we', 'consider'), 'nsubj'), (('consider', 'becomes'), 'advcl'), (('the', 'outputs'), 'det'), (('outputs', 'consider'), 'obj'), (('of', 'units'), 'case'), (('the', 'units'), 'det'), (('hidden', 'units'), 'amod'), (('units', 'outputs'), 'nmod'), (('at', 'steps'), 'case'), (('different', 'steps'), 'amod'), (('discrete', 'time'), 'amod'), (('time', 'steps'), 'compound'), (('steps', 'consider'), 'obl'), (('as', 'outputs'), 'mark'), (('if', 'outputs'), 'mark'), (('they', 'outputs'), 'nsubj'), (('were', 'outputs'), 'cop'), (('the', 'outputs'), 'det'), (('outputs', 'becomes'), 'advcl'), (('of', 'neurons'), 'case'), (('different', 'neurons'), 'amod'), (('neurons', 'outputs'), 'nmod'), (('in', 'network'), 'case'), (('a', 'network'), 'det'), (('deep', 'network'), 'amod'), (('multilayer', 'network'), 'compound'), (('network', 'outputs'), 'nmod'), (('(', 'Fig.'), 'punct'), (('Fig.', 'network'), 'appos'), (('5', 'Fig.'), 'nummod'), ((',', 'Fig.'), 'punct'), (('right', 'Fig.'), 'advmod'), ((')', 'Fig.'), 'punct'), ((',', 'becomes'), 'punct'), (('it', 'becomes'), 'expl'), (('becomes', 'root'), 'root'), (('clear', 'becomes'), 'xcomp'), (('how', 'apply'), 'mark'), (('we', 'apply'), 'nsubj'), (('can', 'apply'), 'aux'), (('apply', 'clear'), 'ccomp'), (('backpropagation', 'apply'), 'obj'), (('to', 'train'), 'mark'), (('train', 'apply'), 'advcl'), (('RNNs', 'train'), 'obj'), (('.', 'becomes'), 'punct')]

 Named Entites are: 
>> [('5', 'CARDINAL')]

================================ Paragraph 156 =================================

RNNs are very powerful dynamic systems, but training them has  proved to be problematic because the backpropagated gradients  either grow or shrink at each time step, so over many time steps they  typically explode or vanish77,78.  


------------------- Sentence 1 -------------------

 RNNs are very powerful dynamic systems, but training them has  proved to be problematic because the backpropagated gradients  either grow or shrink at each time step, so over many time steps they  typically explode or vanish77,78. 

Tokens are: 
>> ['RNNs', 'are', 'very', 'powerful', 'dynamic', 'systems', ',', 'but', 'training', 'them', 'has', 'proved', 'to', 'be', 'problematic', 'because', 'the', 'backpropagated', 'gradients', 'either', 'grow', 'or', 'shrink', 'at', 'each', 'time', 'step', ',', 'so', 'over', 'many', 'time', 'steps', 'they', 'typically', 'explode', 'or', 'vanish', '77,78', '.'] 

 UPOS tags are: 
>> [('RNNs', 'NOUN'), ('are', 'AUX'), ('very', 'ADV'), ('powerful', 'ADJ'), ('dynamic', 'ADJ'), ('systems', 'NOUN'), (',', 'PUNCT'), ('but', 'CCONJ'), ('training', 'VERB'), ('them', 'PRON'), ('has', 'AUX'), ('proved', 'VERB'), ('to', 'PART'), ('be', 'AUX'), ('problematic', 'ADJ'), ('because', 'SCONJ'), ('the', 'DET'), ('backpropagated', 'ADJ'), ('gradients', 'NOUN'), ('either', 'CCONJ'), ('grow', 'VERB'), ('or', 'CCONJ'), ('shrink', 'VERB'), ('at', 'ADP'), ('each', 'DET'), ('time', 'NOUN'), ('step', 'NOUN'), (',', 'PUNCT'), ('so', 'ADV'), ('over', 'ADV'), ('many', 'ADJ'), ('time', 'NOUN'), ('steps', 'NOUN'), ('they', 'PRON'), ('typically', 'ADV'), ('explode', 'VERB'), ('or', 'CCONJ'), ('vanish', 'VERB'), ('77,78', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('RNNs', 'NNS'), ('are', 'VBP'), ('very', 'RB'), ('powerful', 'JJ'), ('dynamic', 'JJ'), ('systems', 'NNS'), (',', ','), ('but', 'CC'), ('training', 'VBG'), ('them', 'PRP'), ('has', 'VBZ'), ('proved', 'VBN'), ('to', 'TO'), ('be', 'VB'), ('problematic', 'JJ'), ('because', 'IN'), ('the', 'DT'), ('backpropagated', 'JJ'), ('gradients', 'NNS'), ('either', 'CC'), ('grow', 'VBP'), ('or', 'CC'), ('shrink', 'VBP'), ('at', 'IN'), ('each', 'DT'), ('time', 'NN'), ('step', 'NN'), (',', ','), ('so', 'RB'), ('over', 'RB'), ('many', 'JJ'), ('time', 'NN'), ('steps', 'NNS'), ('they', 'PRP'), ('typically', 'RB'), ('explode', 'VBP'), ('or', 'CC'), ('vanish', 'VBP'), ('77,78', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('RNNs', 'rnn'), ('are', 'be'), ('very', 'very'), ('powerful', 'powerful'), ('dynamic', 'dynamic'), ('systems', 'system'), (',', ','), ('but', 'but'), ('training', 'train'), ('them', 'they'), ('has', 'have'), ('proved', 'prove'), ('to', 'to'), ('be', 'be'), ('problematic', 'problematic'), ('because', 'because'), ('the', 'the'), ('backpropagated', 'backpropagated'), ('gradients', 'gradient'), ('either', 'either'), ('grow', 'grow'), ('or', 'or'), ('shrink', 'shrink'), ('at', 'at'), ('each', 'each'), ('time', 'time'), ('step', 'step'), (',', ','), ('so', 'so'), ('over', 'over'), ('many', 'many'), ('time', 'time'), ('steps', 'step'), ('they', 'they'), ('typically', 'typically'), ('explode', 'explode'), ('or', 'or'), ('vanish', 'vanish'), ('77,78', '77,78'), ('.', '.')] 

 Dependency tags are: 
>> [(('RNNs', 'systems'), 'nsubj'), (('are', 'systems'), 'cop'), (('very', 'powerful'), 'advmod'), (('powerful', 'systems'), 'amod'), (('dynamic', 'systems'), 'amod'), (('systems', 'root'), 'root'), ((',', 'proved'), 'punct'), (('but', 'proved'), 'cc'), (('training', 'proved'), 'csubj'), (('them', 'training'), 'obj'), (('has', 'proved'), 'aux'), (('proved', 'systems'), 'conj'), (('to', 'problematic'), 'mark'), (('be', 'problematic'), 'cop'), (('problematic', 'proved'), 'xcomp'), (('because', 'grow'), 'mark'), (('the', 'gradients'), 'det'), (('backpropagated', 'gradients'), 'amod'), (('gradients', 'grow'), 'nsubj'), (('either', 'grow'), 'cc:preconj'), (('grow', 'problematic'), 'advcl'), (('or', 'shrink'), 'cc'), (('shrink', 'grow'), 'conj'), (('at', 'step'), 'case'), (('each', 'step'), 'det'), (('time', 'step'), 'compound'), (('step', 'grow'), 'obl'), ((',', 'explode'), 'punct'), (('so', 'explode'), 'advmod'), (('over', 'many'), 'advmod'), (('many', 'steps'), 'amod'), (('time', 'steps'), 'compound'), (('steps', 'explode'), 'obj'), (('they', 'explode'), 'nsubj'), (('typically', 'explode'), 'advmod'), (('explode', 'grow'), 'conj'), (('or', 'vanish'), 'cc'), (('vanish', 'explode'), 'conj'), (('77,78', 'vanish'), 'obj'), (('.', 'systems'), 'punct')]

 Named Entites are: 
>> [('77,78', 'CARDINAL')]

================================ Paragraph 157 =================================

Thanks to advances in their architecture79,80 and ways of training  them81,82, RNNs have been found to be very good at predicting the  next character in the text83 or the next word in a sequence75, but they  can also be used for more complex tasks. For example, after reading  an English sentence one word at a time, an English ‘encoder’ network  can be trained so that the final state vector of its hidden units is a good  representation of the thought expressed by the sentence. This thought  vector can then be used as the initial hidden state of (or as extra input  to) a jointly trained French ‘decoder’ network, which outputs a prob- ability distribution for the first word of the French translation. If a  particular first word is chosen from this distribution and provided  as input to the decoder network it will then output a probability dis- tribution for the second word of the translation and so on until a  full stop is chosen17,72,76. Overall, this process generates sequences of  French words according to a probability distribution that depends on  the English sentence. This rather naive way of performing machine  translation has quickly become competitive with the state-of-the-art,  and this raises serious doubts about whether understanding a sen- tence requires anything like the internal symbolic expressions that are  manipulated by using inference rules. It is more compatible with the  view that everyday reasoning involves many simultaneous analogies  


------------------- Sentence 1 -------------------

 Thanks to advances in their architecture79,80 and ways of training  them81,82, RNNs have been found to be very good at predicting the  next character in the text83 or the next word in a sequence75, but they  can also be used for more complex tasks. 

Tokens are: 
>> ['Thanks', 'to', 'advances', 'in', 'their', 'architecture', '79,80', 'and', 'ways', 'of', 'training', 'them', '81,82', ',', 'RNNs', 'have', 'been', 'found', 'to', 'be', 'very', 'good', 'at', 'predicting', 'the', 'next', 'character', 'in', 'the', 'text', '83', 'or', 'the', 'next', 'word', 'in', 'a', 'sequence75', ',', 'but', 'they', 'can', 'also', 'be', 'used', 'for', 'more', 'complex', 'tasks', '.'] 

 UPOS tags are: 
>> [('Thanks', 'NOUN'), ('to', 'ADP'), ('advances', 'NOUN'), ('in', 'ADP'), ('their', 'PRON'), ('architecture', 'NOUN'), ('79,80', 'NUM'), ('and', 'CCONJ'), ('ways', 'NOUN'), ('of', 'SCONJ'), ('training', 'VERB'), ('them', 'PRON'), ('81,82', 'NUM'), (',', 'PUNCT'), ('RNNs', 'PROPN'), ('have', 'AUX'), ('been', 'AUX'), ('found', 'VERB'), ('to', 'PART'), ('be', 'AUX'), ('very', 'ADV'), ('good', 'ADJ'), ('at', 'SCONJ'), ('predicting', 'VERB'), ('the', 'DET'), ('next', 'ADJ'), ('character', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('text', 'NOUN'), ('83', 'NUM'), ('or', 'CCONJ'), ('the', 'DET'), ('next', 'ADJ'), ('word', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('sequence75', 'NOUN'), (',', 'PUNCT'), ('but', 'CCONJ'), ('they', 'PRON'), ('can', 'AUX'), ('also', 'ADV'), ('be', 'AUX'), ('used', 'VERB'), ('for', 'ADP'), ('more', 'ADV'), ('complex', 'ADJ'), ('tasks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Thanks', 'NN'), ('to', 'IN'), ('advances', 'NNS'), ('in', 'IN'), ('their', 'PRP$'), ('architecture', 'NN'), ('79,80', 'CD'), ('and', 'CC'), ('ways', 'NNS'), ('of', 'IN'), ('training', 'VBG'), ('them', 'PRP'), ('81,82', 'CD'), (',', ','), ('RNNs', 'NNP'), ('have', 'VBP'), ('been', 'VBN'), ('found', 'VBN'), ('to', 'TO'), ('be', 'VB'), ('very', 'RB'), ('good', 'JJ'), ('at', 'IN'), ('predicting', 'VBG'), ('the', 'DT'), ('next', 'JJ'), ('character', 'NN'), ('in', 'IN'), ('the', 'DT'), ('text', 'NN'), ('83', 'CD'), ('or', 'CC'), ('the', 'DT'), ('next', 'JJ'), ('word', 'NN'), ('in', 'IN'), ('a', 'DT'), ('sequence75', 'NN'), (',', ','), ('but', 'CC'), ('they', 'PRP'), ('can', 'MD'), ('also', 'RB'), ('be', 'VB'), ('used', 'VBN'), ('for', 'IN'), ('more', 'RBR'), ('complex', 'JJ'), ('tasks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Thanks', 'thanks'), ('to', 'to'), ('advances', 'advance'), ('in', 'in'), ('their', 'they'), ('architecture', 'architecture'), ('79,80', '7980'), ('and', 'and'), ('ways', 'way'), ('of', 'of'), ('training', 'train'), ('them', 'they'), ('81,82', '8182'), (',', ','), ('RNNs', 'RNNs'), ('have', 'have'), ('been', 'be'), ('found', 'find'), ('to', 'to'), ('be', 'be'), ('very', 'very'), ('good', 'good'), ('at', 'at'), ('predicting', 'predict'), ('the', 'the'), ('next', 'next'), ('character', 'character'), ('in', 'in'), ('the', 'the'), ('text', 'text'), ('83', '83'), ('or', 'or'), ('the', 'the'), ('next', 'next'), ('word', 'word'), ('in', 'in'), ('a', 'a'), ('sequence75', 'sequence75'), (',', ','), ('but', 'but'), ('they', 'they'), ('can', 'can'), ('also', 'also'), ('be', 'be'), ('used', 'use'), ('for', 'for'), ('more', 'more'), ('complex', 'complex'), ('tasks', 'task'), ('.', '.')] 

 Dependency tags are: 
>> [(('Thanks', 'found'), 'obl:npmod'), (('to', 'advances'), 'case'), (('advances', 'Thanks'), 'nmod'), (('in', 'architecture'), 'case'), (('their', 'architecture'), 'nmod:poss'), (('architecture', 'advances'), 'nmod'), (('79,80', 'architecture'), 'nummod'), (('and', 'ways'), 'cc'), (('ways', 'architecture'), 'conj'), (('of', 'training'), 'mark'), (('training', 'ways'), 'acl'), (('them', 'training'), 'obj'), (('81,82', 'training'), 'obj'), ((',', 'found'), 'punct'), (('RNNs', 'found'), 'nsubj:pass'), (('have', 'found'), 'aux'), (('been', 'found'), 'aux:pass'), (('found', 'root'), 'root'), (('to', 'good'), 'mark'), (('be', 'good'), 'cop'), (('very', 'good'), 'advmod'), (('good', 'found'), 'xcomp'), (('at', 'predicting'), 'mark'), (('predicting', 'good'), 'advcl'), (('the', 'character'), 'det'), (('next', 'character'), 'amod'), (('character', 'predicting'), 'obj'), (('in', 'text'), 'case'), (('the', 'text'), 'det'), (('text', 'predicting'), 'obl'), (('83', 'text'), 'nummod'), (('or', 'word'), 'cc'), (('the', 'word'), 'det'), (('next', 'word'), 'amod'), (('word', 'text'), 'conj'), (('in', 'sequence75'), 'case'), (('a', 'sequence75'), 'det'), (('sequence75', 'word'), 'nmod'), ((',', 'used'), 'punct'), (('but', 'used'), 'cc'), (('they', 'used'), 'nsubj:pass'), (('can', 'used'), 'aux'), (('also', 'used'), 'advmod'), (('be', 'used'), 'aux:pass'), (('used', 'found'), 'conj'), (('for', 'tasks'), 'case'), (('more', 'complex'), 'advmod'), (('complex', 'tasks'), 'amod'), (('tasks', 'used'), 'obl'), (('.', 'found'), 'punct')]

 Named Entites are: 
>> [('79,80', 'CARDINAL'), ('81,82', 'CARDINAL'), ('83', 'CARDINAL')]

------------------- Sentence 2 -------------------

 For example, after reading  an English sentence one word at a time, an English ‘encoder’ network  can be trained so that the final state vector of its hidden units is a good  representation of the thought expressed by the sentence. 

Tokens are: 
>> ['For', 'example', ',', 'after', 'reading', 'an', 'English', 'sentence', 'one', 'word', 'at', 'a', 'time', ',', 'an', 'English', '‘', 'encoder', '’', 'network', 'can', 'be', 'trained', 'so', 'that', 'the', 'final', 'state', 'vector', 'of', 'its', 'hidden', 'units', 'is', 'a', 'good', 'representation', 'of', 'the', 'thought', 'expressed', 'by', 'the', 'sentence', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('after', 'SCONJ'), ('reading', 'VERB'), ('an', 'DET'), ('English', 'ADJ'), ('sentence', 'NOUN'), ('one', 'NUM'), ('word', 'NOUN'), ('at', 'ADP'), ('a', 'DET'), ('time', 'NOUN'), (',', 'PUNCT'), ('an', 'DET'), ('English', 'ADJ'), ('‘', 'PUNCT'), ('encoder', 'NOUN'), ('’', 'PART'), ('network', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('trained', 'VERB'), ('so', 'SCONJ'), ('that', 'SCONJ'), ('the', 'DET'), ('final', 'ADJ'), ('state', 'NOUN'), ('vector', 'NOUN'), ('of', 'ADP'), ('its', 'PRON'), ('hidden', 'ADJ'), ('units', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('good', 'ADJ'), ('representation', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('thought', 'NOUN'), ('expressed', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('sentence', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('example', 'NN'), (',', ','), ('after', 'IN'), ('reading', 'VBG'), ('an', 'DT'), ('English', 'JJ'), ('sentence', 'NN'), ('one', 'CD'), ('word', 'NN'), ('at', 'IN'), ('a', 'DT'), ('time', 'NN'), (',', ','), ('an', 'DT'), ('English', 'JJ'), ('‘', '``'), ('encoder', 'NN'), ('’', 'POS'), ('network', 'NN'), ('can', 'MD'), ('be', 'VB'), ('trained', 'VBN'), ('so', 'IN'), ('that', 'IN'), ('the', 'DT'), ('final', 'JJ'), ('state', 'NN'), ('vector', 'NN'), ('of', 'IN'), ('its', 'PRP$'), ('hidden', 'JJ'), ('units', 'NNS'), ('is', 'VBZ'), ('a', 'DT'), ('good', 'JJ'), ('representation', 'NN'), ('of', 'IN'), ('the', 'DT'), ('thought', 'NN'), ('expressed', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('sentence', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('example', 'example'), (',', ','), ('after', 'after'), ('reading', 'read'), ('an', 'a'), ('English', 'English'), ('sentence', 'sentence'), ('one', 'one'), ('word', 'word'), ('at', 'at'), ('a', 'a'), ('time', 'time'), (',', ','), ('an', 'a'), ('English', 'English'), ('‘', "'"), ('encoder', 'encoder'), ('’', "'s"), ('network', 'network'), ('can', 'can'), ('be', 'be'), ('trained', 'train'), ('so', 'so'), ('that', 'that'), ('the', 'the'), ('final', 'final'), ('state', 'state'), ('vector', 'vector'), ('of', 'of'), ('its', 'its'), ('hidden', 'hidden'), ('units', 'unit'), ('is', 'be'), ('a', 'a'), ('good', 'good'), ('representation', 'representation'), ('of', 'of'), ('the', 'the'), ('thought', 'thought'), ('expressed', 'express'), ('by', 'by'), ('the', 'the'), ('sentence', 'sentence'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'example'), 'case'), (('example', 'trained'), 'obl'), ((',', 'trained'), 'punct'), (('after', 'reading'), 'mark'), (('reading', 'trained'), 'advcl'), (('an', 'sentence'), 'det'), (('English', 'sentence'), 'amod'), (('sentence', 'reading'), 'obj'), (('one', 'word'), 'nummod'), (('word', 'reading'), 'obj'), (('at', 'time'), 'case'), (('a', 'time'), 'det'), (('time', 'reading'), 'obl'), ((',', 'trained'), 'punct'), (('an', 'network'), 'det'), (('English', 'network'), 'amod'), (('‘', 'network'), 'punct'), (('encoder', 'network'), 'nmod:poss'), (('’', 'encoder'), 'case'), (('network', 'trained'), 'nsubj:pass'), (('can', 'trained'), 'aux'), (('be', 'trained'), 'aux:pass'), (('trained', 'root'), 'root'), (('so', 'representation'), 'mark'), (('that', 'so'), 'fixed'), (('the', 'vector'), 'det'), (('final', 'vector'), 'amod'), (('state', 'vector'), 'compound'), (('vector', 'representation'), 'nsubj'), (('of', 'units'), 'case'), (('its', 'units'), 'nmod:poss'), (('hidden', 'units'), 'amod'), (('units', 'vector'), 'nmod'), (('is', 'representation'), 'cop'), (('a', 'representation'), 'det'), (('good', 'representation'), 'amod'), (('representation', 'trained'), 'advcl'), (('of', 'thought'), 'case'), (('the', 'thought'), 'det'), (('thought', 'representation'), 'nmod'), (('expressed', 'thought'), 'acl'), (('by', 'sentence'), 'case'), (('the', 'sentence'), 'det'), (('sentence', 'expressed'), 'obl'), (('.', 'trained'), 'punct')]

 Named Entites are: 
>> [('English', 'LANGUAGE'), ('one', 'CARDINAL'), ('English', 'LANGUAGE')]

------------------- Sentence 3 -------------------

 This thought  vector can then be used as the initial hidden state of (or as extra input  to) a jointly trained French ‘decoder’ network, which outputs a prob- ability distribution for the first word of the French translation. 

Tokens are: 
>> ['This', 'thought', 'vector', 'can', 'then', 'be', 'used', 'as', 'the', 'initial', 'hidden', 'state', 'of', '(', 'or', 'as', 'extra', 'input', 'to', ')', 'a', 'jointly', 'trained', 'French', '‘', 'decoder', '’', 'network', ',', 'which', 'outputs', 'a', 'prob-', 'ability', 'distribution', 'for', 'the', 'first', 'word', 'of', 'the', 'French', 'translation', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('thought', 'NOUN'), ('vector', 'NOUN'), ('can', 'AUX'), ('then', 'ADV'), ('be', 'AUX'), ('used', 'VERB'), ('as', 'ADP'), ('the', 'DET'), ('initial', 'ADJ'), ('hidden', 'VERB'), ('state', 'NOUN'), ('of', 'ADP'), ('(', 'PUNCT'), ('or', 'CCONJ'), ('as', 'ADP'), ('extra', 'ADJ'), ('input', 'NOUN'), ('to', 'ADP'), (')', 'PUNCT'), ('a', 'DET'), ('jointly', 'ADV'), ('trained', 'VERB'), ('French', 'ADJ'), ('‘', 'PUNCT'), ('decoder', 'NOUN'), ('’', 'PUNCT'), ('network', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('outputs', 'VERB'), ('a', 'DET'), ('prob-', 'ADJ'), ('ability', 'NOUN'), ('distribution', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('first', 'ADJ'), ('word', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('French', 'ADJ'), ('translation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('thought', 'NN'), ('vector', 'NN'), ('can', 'MD'), ('then', 'RB'), ('be', 'VB'), ('used', 'VBN'), ('as', 'IN'), ('the', 'DT'), ('initial', 'JJ'), ('hidden', 'VBN'), ('state', 'NN'), ('of', 'IN'), ('(', '-LRB-'), ('or', 'CC'), ('as', 'IN'), ('extra', 'JJ'), ('input', 'NN'), ('to', 'IN'), (')', '-RRB-'), ('a', 'DT'), ('jointly', 'RB'), ('trained', 'VBN'), ('French', 'JJ'), ('‘', '``'), ('decoder', 'NN'), ('’', "''"), ('network', 'NN'), (',', ','), ('which', 'WDT'), ('outputs', 'VBZ'), ('a', 'DT'), ('prob-', 'JJ'), ('ability', 'NN'), ('distribution', 'NN'), ('for', 'IN'), ('the', 'DT'), ('first', 'JJ'), ('word', 'NN'), ('of', 'IN'), ('the', 'DT'), ('French', 'JJ'), ('translation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('thought', 'thought'), ('vector', 'vector'), ('can', 'can'), ('then', 'then'), ('be', 'be'), ('used', 'use'), ('as', 'as'), ('the', 'the'), ('initial', 'initial'), ('hidden', 'hide'), ('state', 'state'), ('of', 'of'), ('(', '('), ('or', 'or'), ('as', 'as'), ('extra', 'extra'), ('input', 'input'), ('to', 'to'), (')', ')'), ('a', 'a'), ('jointly', 'jointly'), ('trained', 'train'), ('French', 'French'), ('‘', "'"), ('decoder', 'decoder'), ('’', "'"), ('network', 'network'), (',', ','), ('which', 'which'), ('outputs', 'output'), ('a', 'a'), ('prob-', 'prob-'), ('ability', 'ability'), ('distribution', 'distribution'), ('for', 'for'), ('the', 'the'), ('first', 'first'), ('word', 'word'), ('of', 'of'), ('the', 'the'), ('French', 'French'), ('translation', 'translation'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'vector'), 'det'), (('thought', 'vector'), 'compound'), (('vector', 'used'), 'nsubj:pass'), (('can', 'used'), 'aux'), (('then', 'used'), 'advmod'), (('be', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('as', 'state'), 'case'), (('the', 'state'), 'det'), (('initial', 'state'), 'amod'), (('hidden', 'state'), 'amod'), (('state', 'used'), 'obl'), (('of', 'input'), 'case'), (('(', 'input'), 'punct'), (('or', 'input'), 'cc'), (('as', 'input'), 'case'), (('extra', 'input'), 'amod'), (('input', 'state'), 'conj'), (('to', 'network'), 'case'), ((')', 'input'), 'punct'), (('a', 'network'), 'det'), (('jointly', 'trained'), 'advmod'), (('trained', 'network'), 'amod'), (('French', 'network'), 'amod'), (('‘', 'decoder'), 'punct'), (('decoder', 'network'), 'compound'), (('’', 'decoder'), 'punct'), (('network', 'state'), 'nmod'), ((',', 'outputs'), 'punct'), (('which', 'outputs'), 'nsubj'), (('outputs', 'network'), 'acl:relcl'), (('a', 'distribution'), 'det'), (('prob-', 'distribution'), 'amod'), (('ability', 'distribution'), 'compound'), (('distribution', 'outputs'), 'obj'), (('for', 'word'), 'case'), (('the', 'word'), 'det'), (('first', 'word'), 'amod'), (('word', 'distribution'), 'nmod'), (('of', 'translation'), 'case'), (('the', 'translation'), 'det'), (('French', 'translation'), 'amod'), (('translation', 'word'), 'nmod'), (('.', 'used'), 'punct')]

 Named Entites are: 
>> [('French', 'NORP'), ('first', 'ORDINAL'), ('French', 'NORP')]

------------------- Sentence 4 -------------------

 If a  particular first word is chosen from this distribution and provided  as input to the decoder network it will then output a probability dis- tribution for the second word of the translation and so on until a  full stop is chosen 

Tokens are: 
>> ['If', 'a', 'particular', 'first', 'word', 'is', 'chosen', 'from', 'this', 'distribution', 'and', 'provided', 'as', 'input', 'to', 'the', 'decoder', 'network', 'it', 'will', 'then', 'output', 'a', 'probability', 'dis', '-', 'tribution', 'for', 'the', 'second', 'word', 'of', 'the', 'translation', 'and', 'so', 'on', 'until', 'a', 'full', 'stop', 'is', 'chose', 'n'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('a', 'DET'), ('particular', 'ADJ'), ('first', 'ADJ'), ('word', 'NOUN'), ('is', 'AUX'), ('chosen', 'VERB'), ('from', 'ADP'), ('this', 'DET'), ('distribution', 'NOUN'), ('and', 'CCONJ'), ('provided', 'VERB'), ('as', 'ADP'), ('input', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('decoder', 'NOUN'), ('network', 'NOUN'), ('it', 'PRON'), ('will', 'AUX'), ('then', 'ADV'), ('output', 'VERB'), ('a', 'DET'), ('probability', 'NOUN'), ('dis', 'NOUN'), ('-', 'PUNCT'), ('tribution', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('second', 'ADJ'), ('word', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('translation', 'NOUN'), ('and', 'CCONJ'), ('so', 'ADV'), ('on', 'ADV'), ('until', 'SCONJ'), ('a', 'DET'), ('full', 'ADJ'), ('stop', 'NOUN'), ('is', 'AUX'), ('chose', 'VERB'), ('n', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('a', 'DT'), ('particular', 'JJ'), ('first', 'JJ'), ('word', 'NN'), ('is', 'VBZ'), ('chosen', 'VBN'), ('from', 'IN'), ('this', 'DT'), ('distribution', 'NN'), ('and', 'CC'), ('provided', 'VBN'), ('as', 'IN'), ('input', 'NN'), ('to', 'IN'), ('the', 'DT'), ('decoder', 'NN'), ('network', 'NN'), ('it', 'PRP'), ('will', 'MD'), ('then', 'RB'), ('output', 'VB'), ('a', 'DT'), ('probability', 'NN'), ('dis', 'NN'), ('-', 'HYPH'), ('tribution', 'NN'), ('for', 'IN'), ('the', 'DT'), ('second', 'JJ'), ('word', 'NN'), ('of', 'IN'), ('the', 'DT'), ('translation', 'NN'), ('and', 'CC'), ('so', 'RB'), ('on', 'RB'), ('until', 'IN'), ('a', 'DT'), ('full', 'JJ'), ('stop', 'NN'), ('is', 'VBZ'), ('chose', 'VBN'), ('n', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('a', 'a'), ('particular', 'particular'), ('first', 'first'), ('word', 'word'), ('is', 'be'), ('chosen', 'choose'), ('from', 'from'), ('this', 'this'), ('distribution', 'distribution'), ('and', 'and'), ('provided', 'provide'), ('as', 'as'), ('input', 'input'), ('to', 'to'), ('the', 'the'), ('decoder', 'decoder'), ('network', 'network'), ('it', 'it'), ('will', 'will'), ('then', 'then'), ('output', 'output'), ('a', 'a'), ('probability', 'probability'), ('dis', 'dis'), ('-', '-'), ('tribution', 'tribution'), ('for', 'for'), ('the', 'the'), ('second', 'second'), ('word', 'word'), ('of', 'of'), ('the', 'the'), ('translation', 'translation'), ('and', 'and'), ('so', 'so'), ('on', 'on'), ('until', 'until'), ('a', 'a'), ('full', 'full'), ('stop', 'stop'), ('is', 'be'), ('chose', 'choose'), ('n', 'n')] 

 Dependency tags are: 
>> [(('If', 'chosen'), 'mark'), (('a', 'word'), 'det'), (('particular', 'word'), 'amod'), (('first', 'word'), 'amod'), (('word', 'chosen'), 'nsubj:pass'), (('is', 'chosen'), 'aux:pass'), (('chosen', 'output'), 'advcl'), (('from', 'distribution'), 'case'), (('this', 'distribution'), 'det'), (('distribution', 'chosen'), 'obl'), (('and', 'provided'), 'cc'), (('provided', 'chosen'), 'conj'), (('as', 'input'), 'case'), (('input', 'provided'), 'obl'), (('to', 'network'), 'case'), (('the', 'network'), 'det'), (('decoder', 'network'), 'compound'), (('network', 'provided'), 'obl'), (('it', 'output'), 'nsubj'), (('will', 'output'), 'aux'), (('then', 'output'), 'advmod'), (('output', 'root'), 'root'), (('a', 'probability'), 'det'), (('probability', 'output'), 'obj'), (('dis', 'tribution'), 'compound'), (('-', 'tribution'), 'punct'), (('tribution', 'output'), 'obj'), (('for', 'word'), 'case'), (('the', 'word'), 'det'), (('second', 'word'), 'amod'), (('word', 'output'), 'obl'), (('of', 'translation'), 'case'), (('the', 'translation'), 'det'), (('translation', 'word'), 'nmod'), (('and', 'on'), 'cc'), (('so', 'on'), 'advmod'), (('on', 'output'), 'conj'), (('until', 'chose'), 'mark'), (('a', 'stop'), 'det'), (('full', 'stop'), 'amod'), (('stop', 'chose'), 'nsubj:pass'), (('is', 'chose'), 'aux:pass'), (('chose', 'on'), 'advcl'), (('n', 'output'), 'punct')]

 Named Entites are: 
>> [('first', 'ORDINAL'), ('second', 'ORDINAL')]

------------------- Sentence 5 -------------------

 17,72,76. 

Tokens are: 
>> ['17,72,76', '.'] 

 UPOS tags are: 
>> [('17,72,76', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('17,72,76', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('17,72,76', '177277'), ('.', '.')] 

 Dependency tags are: 
>> [(('17,72,76', 'root'), 'root'), (('.', '17,72,76'), 'punct')]

 Named Entites are: 
>> [('17,72,76', 'CARDINAL')]

------------------- Sentence 6 -------------------

 Overall, this process generates sequences of  French words according to a probability distribution that depends on  the English sentence. 

Tokens are: 
>> ['Overall', ',', 'this', 'process', 'generates', 'sequences', 'of', 'French', 'words', 'according', 'to', 'a', 'probability', 'distribution', 'that', 'depends', 'on', 'the', 'English', 'sentence', '.'] 

 UPOS tags are: 
>> [('Overall', 'ADV'), (',', 'PUNCT'), ('this', 'DET'), ('process', 'NOUN'), ('generates', 'VERB'), ('sequences', 'NOUN'), ('of', 'ADP'), ('French', 'ADJ'), ('words', 'NOUN'), ('according', 'VERB'), ('to', 'ADP'), ('a', 'DET'), ('probability', 'NOUN'), ('distribution', 'NOUN'), ('that', 'PRON'), ('depends', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('English', 'ADJ'), ('sentence', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Overall', 'RB'), (',', ','), ('this', 'DT'), ('process', 'NN'), ('generates', 'VBZ'), ('sequences', 'NNS'), ('of', 'IN'), ('French', 'JJ'), ('words', 'NNS'), ('according', 'VBG'), ('to', 'IN'), ('a', 'DT'), ('probability', 'NN'), ('distribution', 'NN'), ('that', 'WDT'), ('depends', 'VBZ'), ('on', 'IN'), ('the', 'DT'), ('English', 'JJ'), ('sentence', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Overall', 'overall'), (',', ','), ('this', 'this'), ('process', 'process'), ('generates', 'generate'), ('sequences', 'sequence'), ('of', 'of'), ('French', 'French'), ('words', 'word'), ('according', 'accord'), ('to', 'to'), ('a', 'a'), ('probability', 'probability'), ('distribution', 'distribution'), ('that', 'that'), ('depends', 'depend'), ('on', 'on'), ('the', 'the'), ('English', 'English'), ('sentence', 'sentence'), ('.', '.')] 

 Dependency tags are: 
>> [(('Overall', 'generates'), 'advmod'), ((',', 'generates'), 'punct'), (('this', 'process'), 'det'), (('process', 'generates'), 'nsubj'), (('generates', 'root'), 'root'), (('sequences', 'generates'), 'obj'), (('of', 'words'), 'case'), (('French', 'words'), 'amod'), (('words', 'sequences'), 'nmod'), (('according', 'distribution'), 'case'), (('to', 'according'), 'fixed'), (('a', 'distribution'), 'det'), (('probability', 'distribution'), 'compound'), (('distribution', 'generates'), 'obl'), (('that', 'depends'), 'nsubj'), (('depends', 'distribution'), 'acl:relcl'), (('on', 'sentence'), 'case'), (('the', 'sentence'), 'det'), (('English', 'sentence'), 'amod'), (('sentence', 'depends'), 'obl'), (('.', 'generates'), 'punct')]

 Named Entites are: 
>> [('French', 'LANGUAGE'), ('English', 'LANGUAGE')]

------------------- Sentence 7 -------------------

 This rather naive way of performing machine  translation has quickly become competitive with the state-of-the-art,  and this raises serious doubts about whether understanding a sen- tence requires anything like the internal symbolic expressions that are  manipulated by using inference rules. 

Tokens are: 
>> ['This', 'rather', 'naive', 'way', 'of', 'performing', 'machine', 'translation', 'has', 'quickly', 'become', 'competitive', 'with', 'the', 'state', '-', 'of', '-', 'the', '-', 'art', ',', 'and', 'this', 'raises', 'serious', 'doubts', 'about', 'whether', 'understanding', 'a', 'sen', '-', 'tence', 'requires', 'anything', 'like', 'the', 'internal', 'symbolic', 'expressions', 'that', 'are', 'manipulated', 'by', 'using', 'inference', 'rules', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('rather', 'ADV'), ('naive', 'ADJ'), ('way', 'NOUN'), ('of', 'SCONJ'), ('performing', 'VERB'), ('machine', 'NOUN'), ('translation', 'NOUN'), ('has', 'AUX'), ('quickly', 'ADV'), ('become', 'VERB'), ('competitive', 'ADJ'), ('with', 'ADP'), ('the', 'DET'), ('state', 'NOUN'), ('-', 'PUNCT'), ('of', 'ADP'), ('-', 'PUNCT'), ('the', 'DET'), ('-', 'PUNCT'), ('art', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('this', 'PRON'), ('raises', 'VERB'), ('serious', 'ADJ'), ('doubts', 'NOUN'), ('about', 'SCONJ'), ('whether', 'SCONJ'), ('understanding', 'VERB'), ('a', 'DET'), ('sen', 'NOUN'), ('-', 'PUNCT'), ('tence', 'NOUN'), ('requires', 'VERB'), ('anything', 'PRON'), ('like', 'ADP'), ('the', 'DET'), ('internal', 'ADJ'), ('symbolic', 'ADJ'), ('expressions', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('manipulated', 'VERB'), ('by', 'SCONJ'), ('using', 'VERB'), ('inference', 'NOUN'), ('rules', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('rather', 'RB'), ('naive', 'JJ'), ('way', 'NN'), ('of', 'IN'), ('performing', 'VBG'), ('machine', 'NN'), ('translation', 'NN'), ('has', 'VBZ'), ('quickly', 'RB'), ('become', 'VBN'), ('competitive', 'JJ'), ('with', 'IN'), ('the', 'DT'), ('state', 'NN'), ('-', 'HYPH'), ('of', 'IN'), ('-', 'HYPH'), ('the', 'DT'), ('-', 'HYPH'), ('art', 'NN'), (',', ','), ('and', 'CC'), ('this', 'DT'), ('raises', 'VBZ'), ('serious', 'JJ'), ('doubts', 'NNS'), ('about', 'IN'), ('whether', 'IN'), ('understanding', 'VBG'), ('a', 'DT'), ('sen', 'NN'), ('-', 'HYPH'), ('tence', 'NN'), ('requires', 'VBZ'), ('anything', 'NN'), ('like', 'IN'), ('the', 'DT'), ('internal', 'JJ'), ('symbolic', 'JJ'), ('expressions', 'NNS'), ('that', 'WDT'), ('are', 'VBP'), ('manipulated', 'VBN'), ('by', 'IN'), ('using', 'VBG'), ('inference', 'NN'), ('rules', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('rather', 'rather'), ('naive', 'naive'), ('way', 'way'), ('of', 'of'), ('performing', 'perform'), ('machine', 'machine'), ('translation', 'translation'), ('has', 'have'), ('quickly', 'quickly'), ('become', 'become'), ('competitive', 'competitive'), ('with', 'with'), ('the', 'the'), ('state', 'state'), ('-', '-'), ('of', 'of'), ('-', '-'), ('the', 'the'), ('-', '-'), ('art', 'art'), (',', ','), ('and', 'and'), ('this', 'this'), ('raises', 'raise'), ('serious', 'serious'), ('doubts', 'doubt'), ('about', 'about'), ('whether', 'whether'), ('understanding', 'understand'), ('a', 'a'), ('sen', 'sen'), ('-', '-'), ('tence', 'tence'), ('requires', 'require'), ('anything', 'anything'), ('like', 'like'), ('the', 'the'), ('internal', 'internal'), ('symbolic', 'symbolic'), ('expressions', 'expression'), ('that', 'that'), ('are', 'be'), ('manipulated', 'manipulate'), ('by', 'by'), ('using', 'use'), ('inference', 'inference'), ('rules', 'rule'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'way'), 'det'), (('rather', 'naive'), 'advmod'), (('naive', 'way'), 'amod'), (('way', 'become'), 'nsubj'), (('of', 'performing'), 'mark'), (('performing', 'way'), 'acl'), (('machine', 'translation'), 'compound'), (('translation', 'performing'), 'obj'), (('has', 'become'), 'aux'), (('quickly', 'become'), 'advmod'), (('become', 'root'), 'root'), (('competitive', 'become'), 'xcomp'), (('with', 'art'), 'case'), (('the', 'art'), 'det'), (('state', 'art'), 'compound'), (('-', 'state'), 'punct'), (('of', 'art'), 'case'), (('-', 'art'), 'punct'), (('the', 'art'), 'det'), (('-', 'art'), 'punct'), (('art', 'competitive'), 'obl'), ((',', 'raises'), 'punct'), (('and', 'raises'), 'cc'), (('this', 'raises'), 'nsubj'), (('raises', 'become'), 'conj'), (('serious', 'doubts'), 'amod'), (('doubts', 'raises'), 'obj'), (('about', 'requires'), 'mark'), (('whether', 'requires'), 'mark'), (('understanding', 'requires'), 'csubj'), (('a', 'tence'), 'det'), (('sen', 'tence'), 'compound'), (('-', 'tence'), 'punct'), (('tence', 'understanding'), 'obj'), (('requires', 'doubts'), 'acl'), (('anything', 'requires'), 'obj'), (('like', 'expressions'), 'case'), (('the', 'expressions'), 'det'), (('internal', 'expressions'), 'amod'), (('symbolic', 'expressions'), 'amod'), (('expressions', 'anything'), 'nmod'), (('that', 'manipulated'), 'nsubj:pass'), (('are', 'manipulated'), 'aux:pass'), (('manipulated', 'expressions'), 'acl:relcl'), (('by', 'using'), 'mark'), (('using', 'manipulated'), 'advcl'), (('inference', 'rules'), 'compound'), (('rules', 'using'), 'obj'), (('.', 'become'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 8 -------------------

 It is more compatible with the  view that everyday reasoning involves many simultaneous analogies 

Tokens are: 
>> ['It', 'is', 'more', 'compatible', 'with', 'the', 'view', 'that', 'everyday', 'reasoning', 'involves', 'many', 'simultaneous', 'analogies'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('more', 'ADV'), ('compatible', 'ADJ'), ('with', 'ADP'), ('the', 'DET'), ('view', 'NOUN'), ('that', 'SCONJ'), ('everyday', 'ADJ'), ('reasoning', 'NOUN'), ('involves', 'VERB'), ('many', 'ADJ'), ('simultaneous', 'ADJ'), ('analogies', 'NOUN')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('more', 'RBR'), ('compatible', 'JJ'), ('with', 'IN'), ('the', 'DT'), ('view', 'NN'), ('that', 'IN'), ('everyday', 'JJ'), ('reasoning', 'NN'), ('involves', 'VBZ'), ('many', 'JJ'), ('simultaneous', 'JJ'), ('analogies', 'NNS')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('more', 'more'), ('compatible', 'compatible'), ('with', 'with'), ('the', 'the'), ('view', 'view'), ('that', 'that'), ('everyday', 'everyday'), ('reasoning', 'reasoning'), ('involves', 'involve'), ('many', 'many'), ('simultaneous', 'simultaneous'), ('analogies', 'analogy')] 

 Dependency tags are: 
>> [(('It', 'compatible'), 'nsubj'), (('is', 'compatible'), 'cop'), (('more', 'compatible'), 'advmod'), (('compatible', 'root'), 'root'), (('with', 'view'), 'case'), (('the', 'view'), 'det'), (('view', 'compatible'), 'obl'), (('that', 'involves'), 'mark'), (('everyday', 'reasoning'), 'amod'), (('reasoning', 'involves'), 'nsubj'), (('involves', 'view'), 'acl'), (('many', 'analogies'), 'amod'), (('simultaneous', 'analogies'), 'amod'), (('analogies', 'involves'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 158 =================================

Figure 4 | Visualizing the learned word vectors. On the left is an illustration  of word representations learned for modelling language, non-linearly projected  to 2D for visualization using the t-SNE algorithm103. On the right is a 2D  representation of phrases learned by an English-to-French encoder–decoder  recurrent neural network75. One can observe that semantically similar words  


------------------- Sentence 1 -------------------

 Figure 4 | Visualizing the learned word vectors. 

Tokens are: 
>> ['Figure', '4', '|', 'Visualizing', 'the', 'learned', 'word', 'vectors', '.'] 

 UPOS tags are: 
>> [('Figure', 'PROPN'), ('4', 'NUM'), ('|', 'PUNCT'), ('Visualizing', 'VERB'), ('the', 'DET'), ('learned', 'VERB'), ('word', 'NOUN'), ('vectors', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Figure', 'NNP'), ('4', 'CD'), ('|', ','), ('Visualizing', 'VBG'), ('the', 'DT'), ('learned', 'VBN'), ('word', 'NN'), ('vectors', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Figure', 'Figure'), ('4', '4'), ('|', '|'), ('Visualizing', 'visualize'), ('the', 'the'), ('learned', 'learn'), ('word', 'word'), ('vectors', 'vector'), ('.', '.')] 

 Dependency tags are: 
>> [(('Figure', 'root'), 'root'), (('4', 'Figure'), 'dep'), (('|', 'Figure'), 'punct'), (('Visualizing', 'Figure'), 'appos'), (('the', 'vectors'), 'det'), (('learned', 'vectors'), 'amod'), (('word', 'vectors'), 'compound'), (('vectors', 'Visualizing'), 'obj'), (('.', 'Figure'), 'punct')]

 Named Entites are: 
>> [('4', 'CARDINAL')]

------------------- Sentence 2 -------------------

 On the left is an illustration  of word representations learned for modelling language, non-linearly projected  to 2D for visualization using the t-SNE algorithm103. 

Tokens are: 
>> ['On', 'the', 'left', 'is', 'an', 'illustration', 'of', 'word', 'representations', 'learned', 'for', 'modelling', 'language', ',', 'non-linearly', 'projected', 'to', '2D', 'for', 'visualization', 'using', 'the', 't-SNE', 'algorithm', '103', '.'] 

 UPOS tags are: 
>> [('On', 'ADP'), ('the', 'DET'), ('left', 'NOUN'), ('is', 'AUX'), ('an', 'DET'), ('illustration', 'NOUN'), ('of', 'ADP'), ('word', 'NOUN'), ('representations', 'NOUN'), ('learned', 'VERB'), ('for', 'ADP'), ('modelling', 'NOUN'), ('language', 'NOUN'), (',', 'PUNCT'), ('non-linearly', 'ADV'), ('projected', 'VERB'), ('to', 'ADP'), ('2D', 'NOUN'), ('for', 'ADP'), ('visualization', 'NOUN'), ('using', 'VERB'), ('the', 'DET'), ('t-SNE', 'PROPN'), ('algorithm', 'NOUN'), ('103', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('On', 'IN'), ('the', 'DT'), ('left', 'NN'), ('is', 'VBZ'), ('an', 'DT'), ('illustration', 'NN'), ('of', 'IN'), ('word', 'NN'), ('representations', 'NNS'), ('learned', 'VBN'), ('for', 'IN'), ('modelling', 'NN'), ('language', 'NN'), (',', ','), ('non-linearly', 'RB'), ('projected', 'VBN'), ('to', 'IN'), ('2D', 'NN'), ('for', 'IN'), ('visualization', 'NN'), ('using', 'VBG'), ('the', 'DT'), ('t-SNE', 'NNP'), ('algorithm', 'NN'), ('103', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('On', 'on'), ('the', 'the'), ('left', 'left'), ('is', 'be'), ('an', 'a'), ('illustration', 'illustration'), ('of', 'of'), ('word', 'word'), ('representations', 'representation'), ('learned', 'learn'), ('for', 'for'), ('modelling', 'modelling'), ('language', 'language'), (',', ','), ('non-linearly', 'non-linearly'), ('projected', 'project'), ('to', 'to'), ('2D', '2d'), ('for', 'for'), ('visualization', 'visualization'), ('using', 'use'), ('the', 'the'), ('t-SNE', 't-SNE'), ('algorithm', 'algorithm'), ('103', '103'), ('.', '.')] 

 Dependency tags are: 
>> [(('On', 'left'), 'case'), (('the', 'left'), 'det'), (('left', 'illustration'), 'nmod'), (('is', 'illustration'), 'cop'), (('an', 'illustration'), 'det'), (('illustration', 'root'), 'root'), (('of', 'representations'), 'case'), (('word', 'representations'), 'compound'), (('representations', 'illustration'), 'nmod'), (('learned', 'representations'), 'acl'), (('for', 'language'), 'case'), (('modelling', 'language'), 'compound'), (('language', 'learned'), 'obl'), ((',', 'projected'), 'punct'), (('non-linearly', 'projected'), 'advmod'), (('projected', 'illustration'), 'acl'), (('to', '2D'), 'case'), (('2D', 'projected'), 'obl'), (('for', 'visualization'), 'case'), (('visualization', '2D'), 'nmod'), (('using', 'visualization'), 'acl'), (('the', 'algorithm'), 'det'), (('t-SNE', 'algorithm'), 'compound'), (('algorithm', 'using'), 'obj'), (('103', 'algorithm'), 'dep'), (('.', 'illustration'), 'punct')]

 Named Entites are: 
>> [('103', 'CARDINAL')]

------------------- Sentence 3 -------------------

 On the right is a 2D  representation of phrases learned by an English-to-French encoder–decoder  recurrent neural network75. 

Tokens are: 
>> ['On', 'the', 'right', 'is', 'a', '2D', 'representation', 'of', 'phrases', 'learned', 'by', 'an', 'English', '-', 'to', '-', 'French', 'encoder–decoder', 'recurrent', 'neural', 'network', '75', '.'] 

 UPOS tags are: 
>> [('On', 'ADP'), ('the', 'DET'), ('right', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('2D', 'ADJ'), ('representation', 'NOUN'), ('of', 'ADP'), ('phrases', 'NOUN'), ('learned', 'VERB'), ('by', 'ADP'), ('an', 'DET'), ('English', 'ADJ'), ('-', 'PUNCT'), ('to', 'ADP'), ('-', 'PUNCT'), ('French', 'ADJ'), ('encoder–decoder', 'NOUN'), ('recurrent', 'ADJ'), ('neural', 'ADJ'), ('network', 'NOUN'), ('75', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('On', 'IN'), ('the', 'DT'), ('right', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('2D', 'JJ'), ('representation', 'NN'), ('of', 'IN'), ('phrases', 'NNS'), ('learned', 'VBN'), ('by', 'IN'), ('an', 'DT'), ('English', 'JJ'), ('-', 'HYPH'), ('to', 'IN'), ('-', 'HYPH'), ('French', 'JJ'), ('encoder–decoder', 'NN'), ('recurrent', 'JJ'), ('neural', 'JJ'), ('network', 'NN'), ('75', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('On', 'on'), ('the', 'the'), ('right', 'right'), ('is', 'be'), ('a', 'a'), ('2D', '2D'), ('representation', 'representation'), ('of', 'of'), ('phrases', 'phrase'), ('learned', 'learn'), ('by', 'by'), ('an', 'a'), ('English', 'English'), ('-', '-'), ('to', 'to'), ('-', '-'), ('French', 'French'), ('encoder–decoder', 'encoder–decoder'), ('recurrent', 'recurrent'), ('neural', 'neural'), ('network', 'network'), ('75', '75'), ('.', '.')] 

 Dependency tags are: 
>> [(('On', 'right'), 'case'), (('the', 'right'), 'det'), (('right', 'is'), 'obl'), (('is', 'root'), 'root'), (('a', 'representation'), 'det'), (('2D', 'representation'), 'amod'), (('representation', 'is'), 'nsubj'), (('of', 'phrases'), 'case'), (('phrases', 'representation'), 'nmod'), (('learned', 'phrases'), 'acl'), (('by', 'network'), 'case'), (('an', 'network'), 'det'), (('English', 'network'), 'amod'), (('-', 'English'), 'punct'), (('to', 'French'), 'case'), (('-', 'French'), 'punct'), (('French', 'English'), 'conj'), (('encoder–decoder', 'network'), 'compound'), (('recurrent', 'network'), 'amod'), (('neural', 'network'), 'amod'), (('network', 'learned'), 'obl'), (('75', 'network'), 'nummod'), (('.', 'is'), 'punct')]

 Named Entites are: 
>> [('English', 'LANGUAGE'), ('French', 'NORP'), ('75', 'CARDINAL')]

------------------- Sentence 4 -------------------

 One can observe that semantically similar words 

Tokens are: 
>> ['One', 'can', 'observe', 'that', 'semantically', 'similar', 'words'] 

 UPOS tags are: 
>> [('One', 'PRON'), ('can', 'AUX'), ('observe', 'VERB'), ('that', 'SCONJ'), ('semantically', 'ADV'), ('similar', 'ADJ'), ('words', 'NOUN')] 

 XPOS tags are: 
>> [('One', 'PRP'), ('can', 'MD'), ('observe', 'VB'), ('that', 'IN'), ('semantically', 'RB'), ('similar', 'JJ'), ('words', 'NNS')] 

 Lemmas are: 
>> [('One', 'one'), ('can', 'can'), ('observe', 'observe'), ('that', 'that'), ('semantically', 'semantically'), ('similar', 'similar'), ('words', 'word')] 

 Dependency tags are: 
>> [(('One', 'observe'), 'nsubj'), (('can', 'observe'), 'aux'), (('observe', 'root'), 'root'), (('that', 'words'), 'mark'), (('semantically', 'similar'), 'advmod'), (('similar', 'words'), 'amod'), (('words', 'observe'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 159 =================================

or sequences of words are mapped to nearby representations. The distributed  representations of words are obtained by using backpropagation to jointly learn  a representation for each word and a function that predicts a target quantity  such as the next word in a sequence (for language modelling) or a whole  sequence of translated words (for machine translation)18,75. 


------------------- Sentence 1 -------------------

 or sequences of words are mapped to nearby representations. 

Tokens are: 
>> ['or', 'sequences', 'of', 'words', 'are', 'mapped', 'to', 'nearby', 'representations', '.'] 

 UPOS tags are: 
>> [('or', 'CCONJ'), ('sequences', 'NOUN'), ('of', 'ADP'), ('words', 'NOUN'), ('are', 'AUX'), ('mapped', 'VERB'), ('to', 'ADP'), ('nearby', 'ADJ'), ('representations', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('or', 'CC'), ('sequences', 'NNS'), ('of', 'IN'), ('words', 'NNS'), ('are', 'VBP'), ('mapped', 'VBN'), ('to', 'IN'), ('nearby', 'JJ'), ('representations', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('or', 'or'), ('sequences', 'sequence'), ('of', 'of'), ('words', 'word'), ('are', 'be'), ('mapped', 'map'), ('to', 'to'), ('nearby', 'nearby'), ('representations', 'representation'), ('.', '.')] 

 Dependency tags are: 
>> [(('or', 'mapped'), 'cc'), (('sequences', 'mapped'), 'nsubj:pass'), (('of', 'words'), 'case'), (('words', 'sequences'), 'nmod'), (('are', 'mapped'), 'aux:pass'), (('mapped', 'root'), 'root'), (('to', 'representations'), 'case'), (('nearby', 'representations'), 'amod'), (('representations', 'mapped'), 'obl'), (('.', 'mapped'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 The distributed  representations of words are obtained by using backpropagation to jointly learn  a representation for each word and a function that predicts a target quantity  such as the next word in a sequence (for language modelling) or a whole  sequence of translated words (for machine translation) 

Tokens are: 
>> ['The', 'distributed', 'representations', 'of', 'words', 'are', 'obtained', 'by', 'using', 'backpropagation', 'to', 'jointly', 'learn', 'a', 'representation', 'for', 'each', 'word', 'and', 'a', 'function', 'that', 'predicts', 'a', 'target', 'quantity', 'such', 'as', 'the', 'next', 'word', 'in', 'a', 'sequence', '(', 'for', 'language', 'modelling', ')', 'or', 'a', 'whole', 'sequence', 'of', 'translated', 'words', '(', 'for', 'machine', 'translation', ')'] 

 UPOS tags are: 
>> [('The', 'DET'), ('distributed', 'VERB'), ('representations', 'NOUN'), ('of', 'ADP'), ('words', 'NOUN'), ('are', 'AUX'), ('obtained', 'VERB'), ('by', 'SCONJ'), ('using', 'VERB'), ('backpropagation', 'NOUN'), ('to', 'PART'), ('jointly', 'ADV'), ('learn', 'VERB'), ('a', 'DET'), ('representation', 'NOUN'), ('for', 'ADP'), ('each', 'DET'), ('word', 'NOUN'), ('and', 'CCONJ'), ('a', 'DET'), ('function', 'NOUN'), ('that', 'PRON'), ('predicts', 'VERB'), ('a', 'DET'), ('target', 'NOUN'), ('quantity', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('the', 'DET'), ('next', 'ADJ'), ('word', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('sequence', 'NOUN'), ('(', 'PUNCT'), ('for', 'ADP'), ('language', 'NOUN'), ('modelling', 'NOUN'), (')', 'PUNCT'), ('or', 'CCONJ'), ('a', 'DET'), ('whole', 'ADJ'), ('sequence', 'NOUN'), ('of', 'ADP'), ('translated', 'VERB'), ('words', 'NOUN'), ('(', 'PUNCT'), ('for', 'ADP'), ('machine', 'NOUN'), ('translation', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('distributed', 'VBN'), ('representations', 'NNS'), ('of', 'IN'), ('words', 'NNS'), ('are', 'VBP'), ('obtained', 'VBN'), ('by', 'IN'), ('using', 'VBG'), ('backpropagation', 'NN'), ('to', 'TO'), ('jointly', 'RB'), ('learn', 'VB'), ('a', 'DT'), ('representation', 'NN'), ('for', 'IN'), ('each', 'DT'), ('word', 'NN'), ('and', 'CC'), ('a', 'DT'), ('function', 'NN'), ('that', 'WDT'), ('predicts', 'VBZ'), ('a', 'DT'), ('target', 'NN'), ('quantity', 'NN'), ('such', 'JJ'), ('as', 'IN'), ('the', 'DT'), ('next', 'JJ'), ('word', 'NN'), ('in', 'IN'), ('a', 'DT'), ('sequence', 'NN'), ('(', '-LRB-'), ('for', 'IN'), ('language', 'NN'), ('modelling', 'NN'), (')', '-RRB-'), ('or', 'CC'), ('a', 'DT'), ('whole', 'JJ'), ('sequence', 'NN'), ('of', 'IN'), ('translated', 'VBN'), ('words', 'NNS'), ('(', '-LRB-'), ('for', 'IN'), ('machine', 'NN'), ('translation', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('The', 'the'), ('distributed', 'distribute'), ('representations', 'representation'), ('of', 'of'), ('words', 'word'), ('are', 'be'), ('obtained', 'obtain'), ('by', 'by'), ('using', 'use'), ('backpropagation', 'backpropagation'), ('to', 'to'), ('jointly', 'jointly'), ('learn', 'learn'), ('a', 'a'), ('representation', 'representation'), ('for', 'for'), ('each', 'each'), ('word', 'word'), ('and', 'and'), ('a', 'a'), ('function', 'function'), ('that', 'that'), ('predicts', 'predict'), ('a', 'a'), ('target', 'target'), ('quantity', 'quantity'), ('such', 'such'), ('as', 'as'), ('the', 'the'), ('next', 'next'), ('word', 'word'), ('in', 'in'), ('a', 'a'), ('sequence', 'sequence'), ('(', '('), ('for', 'for'), ('language', 'language'), ('modelling', 'modelling'), (')', ')'), ('or', 'or'), ('a', 'a'), ('whole', 'whole'), ('sequence', 'sequence'), ('of', 'of'), ('translated', 'translate'), ('words', 'word'), ('(', '('), ('for', 'for'), ('machine', 'machine'), ('translation', 'translation'), (')', ')')] 

 Dependency tags are: 
>> [(('The', 'representations'), 'det'), (('distributed', 'representations'), 'amod'), (('representations', 'obtained'), 'nsubj:pass'), (('of', 'words'), 'case'), (('words', 'representations'), 'nmod'), (('are', 'obtained'), 'aux:pass'), (('obtained', 'root'), 'root'), (('by', 'using'), 'mark'), (('using', 'obtained'), 'advcl'), (('backpropagation', 'using'), 'obj'), (('to', 'learn'), 'mark'), (('jointly', 'learn'), 'advmod'), (('learn', 'using'), 'xcomp'), (('a', 'representation'), 'det'), (('representation', 'learn'), 'obj'), (('for', 'word'), 'case'), (('each', 'word'), 'det'), (('word', 'representation'), 'nmod'), (('and', 'function'), 'cc'), (('a', 'function'), 'det'), (('function', 'word'), 'conj'), (('that', 'predicts'), 'nsubj'), (('predicts', 'function'), 'acl:relcl'), (('a', 'quantity'), 'det'), (('target', 'quantity'), 'compound'), (('quantity', 'predicts'), 'obj'), (('such', 'word'), 'case'), (('as', 'such'), 'fixed'), (('the', 'word'), 'det'), (('next', 'word'), 'amod'), (('word', 'quantity'), 'nmod'), (('in', 'sequence'), 'case'), (('a', 'sequence'), 'det'), (('sequence', 'word'), 'nmod'), (('(', 'modelling'), 'punct'), (('for', 'modelling'), 'case'), (('language', 'modelling'), 'compound'), (('modelling', 'sequence'), 'nmod'), ((')', 'modelling'), 'punct'), (('or', 'sequence'), 'cc'), (('a', 'sequence'), 'det'), (('whole', 'sequence'), 'amod'), (('sequence', 'word'), 'conj'), (('of', 'words'), 'case'), (('translated', 'words'), 'amod'), (('words', 'sequence'), 'nmod'), (('(', 'translation'), 'punct'), (('for', 'translation'), 'case'), (('machine', 'translation'), 'compound'), (('translation', 'sequence'), 'nmod'), ((')', 'translation'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 18,75. 

Tokens are: 
>> ['18,75', '.'] 

 UPOS tags are: 
>> [('18,75', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('18,75', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('18,75', '18,75'), ('.', '.')] 

 Dependency tags are: 
>> [(('18,75', 'root'), 'root'), (('.', '18,75'), 'punct')]

 Named Entites are: 
>> [('18,75', 'CARDINAL')]

================================ Paragraph 160 =================================

−37 −36 −35 −34 −33 −32 −31 −30 −29 


------------------- Sentence 1 -------------------

 −37 −36 −35 −34 −33 −32 −31 −30 −29 

Tokens are: 
>> ['−37', '−', '36', '−', '35', '−', '34', '−', '33', '−', '32', '−', '31', '−', '30', '−', '29'] 

 UPOS tags are: 
>> [('−37', 'NUM'), ('−', 'PUNCT'), ('36', 'NUM'), ('−', 'PUNCT'), ('35', 'NUM'), ('−', 'PUNCT'), ('34', 'NUM'), ('−', 'PUNCT'), ('33', 'NUM'), ('−', 'PUNCT'), ('32', 'NUM'), ('−', 'PUNCT'), ('31', 'NUM'), ('−', 'PUNCT'), ('30', 'NUM'), ('−', 'PUNCT'), ('29', 'NUM')] 

 XPOS tags are: 
>> [('−37', 'CD'), ('−', '-LRB-'), ('36', 'CD'), ('−', '-LRB-'), ('35', 'CD'), ('−', '-LRB-'), ('34', 'CD'), ('−', '-LRB-'), ('33', 'CD'), ('−', ':'), ('32', 'CD'), ('−', ':'), ('31', 'CD'), ('−', ':'), ('30', 'CD'), ('−', '-RRB-'), ('29', 'CD')] 

 Lemmas are: 
>> [('−37', '−37'), ('−', "''"), ('36', '36'), ('−', "''"), ('35', '35'), ('−', "''"), ('34', '34'), ('−', "''"), ('33', '33'), ('−', "''"), ('32', '32'), ('−', "''"), ('31', '31'), ('−', "''"), ('30', '30'), ('−', "''"), ('29', '29')] 

 Dependency tags are: 
>> [(('−37', 'root'), 'root'), (('−', '36'), 'punct'), (('36', '−37'), 'parataxis'), (('−', '35'), 'punct'), (('35', '36'), 'parataxis'), (('−', '34'), 'punct'), (('34', '35'), 'parataxis'), (('−', '33'), 'punct'), (('33', '34'), 'parataxis'), (('−', '32'), 'punct'), (('32', '33'), 'conj'), (('−', '31'), 'punct'), (('31', '32'), 'conj'), (('−', '30'), 'punct'), (('30', '31'), 'conj'), (('−', '30'), 'punct'), (('29', '30'), 'conj')]

 Named Entites are: 
>> []

================================ Paragraph 161 =================================

9 


------------------- Sentence 1 -------------------

 9 

Tokens are: 
>> ['9'] 

 UPOS tags are: 
>> [('9', 'X')] 

 XPOS tags are: 
>> [('9', 'LS')] 

 Lemmas are: 
>> [('9', '9')] 

 Dependency tags are: 
>> [(('9', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 162 =================================

10 


------------------- Sentence 1 -------------------

 10 

Tokens are: 
>> ['10'] 

 UPOS tags are: 
>> [('10', 'X')] 

 XPOS tags are: 
>> [('10', 'LS')] 

 Lemmas are: 
>> [('10', '10')] 

 Dependency tags are: 
>> [(('10', 'root'), 'root')]

 Named Entites are: 
>> [('10', 'CARDINAL')]

================================ Paragraph 163 =================================

10.5 


------------------- Sentence 1 -------------------

 10.5 

Tokens are: 
>> ['10.5'] 

 UPOS tags are: 
>> [('10.5', 'NUM')] 

 XPOS tags are: 
>> [('10.5', 'CD')] 

 Lemmas are: 
>> [('10.5', '10.5')] 

 Dependency tags are: 
>> [(('10.5', 'root'), 'root')]

 Named Entites are: 
>> [('10.5', 'CARDINAL')]

================================ Paragraph 164 =================================

11 


------------------- Sentence 1 -------------------

 11 

Tokens are: 
>> ['11'] 

 UPOS tags are: 
>> [('11', 'X')] 

 XPOS tags are: 
>> [('11', 'LS')] 

 Lemmas are: 
>> [('11', '11')] 

 Dependency tags are: 
>> [(('11', 'root'), 'root')]

 Named Entites are: 
>> [('11', 'CARDINAL')]

================================ Paragraph 165 =================================

11.5 


------------------- Sentence 1 -------------------

 11.5 

Tokens are: 
>> ['11.5'] 

 UPOS tags are: 
>> [('11.5', 'NUM')] 

 XPOS tags are: 
>> [('11.5', 'CD')] 

 Lemmas are: 
>> [('11.5', '11.5')] 

 Dependency tags are: 
>> [(('11.5', 'root'), 'root')]

 Named Entites are: 
>> [('11.5', 'CARDINAL')]

================================ Paragraph 166 =================================

12 


------------------- Sentence 1 -------------------

 12 

Tokens are: 
>> ['12'] 

 UPOS tags are: 
>> [('12', 'X')] 

 XPOS tags are: 
>> [('12', 'LS')] 

 Lemmas are: 
>> [('12', '12')] 

 Dependency tags are: 
>> [(('12', 'root'), 'root')]

 Named Entites are: 
>> [('12', 'CARDINAL')]

================================ Paragraph 167 =================================

12.5 


------------------- Sentence 1 -------------------

 12.5 

Tokens are: 
>> ['12.5'] 

 UPOS tags are: 
>> [('12.5', 'NUM')] 

 XPOS tags are: 
>> [('12.5', 'CD')] 

 Lemmas are: 
>> [('12.5', '12.5')] 

 Dependency tags are: 
>> [(('12.5', 'root'), 'root')]

 Named Entites are: 
>> [('12.5', 'CARDINAL')]

================================ Paragraph 168 =================================

13 


------------------- Sentence 1 -------------------

 13 

Tokens are: 
>> ['13'] 

 UPOS tags are: 
>> [('13', 'X')] 

 XPOS tags are: 
>> [('13', 'LS')] 

 Lemmas are: 
>> [('13', '13')] 

 Dependency tags are: 
>> [(('13', 'root'), 'root')]

 Named Entites are: 
>> [('13', 'CARDINAL')]

================================ Paragraph 169 =================================

13.5 


------------------- Sentence 1 -------------------

 13.5 

Tokens are: 
>> ['13.5'] 

 UPOS tags are: 
>> [('13.5', 'NUM')] 

 XPOS tags are: 
>> [('13.5', 'CD')] 

 Lemmas are: 
>> [('13.5', '13.5')] 

 Dependency tags are: 
>> [(('13.5', 'root'), 'root')]

 Named Entites are: 
>> [('13.5', 'CARDINAL')]

================================ Paragraph 170 =================================

14 


------------------- Sentence 1 -------------------

 14 

Tokens are: 
>> ['14'] 

 UPOS tags are: 
>> [('14', 'NUM')] 

 XPOS tags are: 
>> [('14', 'CD')] 

 Lemmas are: 
>> [('14', '14')] 

 Dependency tags are: 
>> [(('14', 'root'), 'root')]

 Named Entites are: 
>> [('14', 'CARDINAL')]

================================ Paragraph 171 =================================

 community 


------------------- Sentence 1 -------------------

 community 

Tokens are: 
>> ['community'] 

 UPOS tags are: 
>> [('community', 'NOUN')] 

 XPOS tags are: 
>> [('community', 'NN')] 

 Lemmas are: 
>> [('community', 'community')] 

 Dependency tags are: 
>> [(('community', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 172 =================================

 organizations  institutions 


------------------- Sentence 1 -------------------

 organizations  institutions 

Tokens are: 
>> ['organizations', 'institutions'] 

 UPOS tags are: 
>> [('organizations', 'NOUN'), ('institutions', 'NOUN')] 

 XPOS tags are: 
>> [('organizations', 'NNS'), ('institutions', 'NNS')] 

 Lemmas are: 
>> [('organizations', 'organization'), ('institutions', 'institution')] 

 Dependency tags are: 
>> [(('organizations', 'institutions'), 'compound'), (('institutions', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 173 =================================

 society  industry 


------------------- Sentence 1 -------------------

 society  industry 

Tokens are: 
>> ['society', 'industry'] 

 UPOS tags are: 
>> [('society', 'NOUN'), ('industry', 'NOUN')] 

 XPOS tags are: 
>> [('society', 'NN'), ('industry', 'NN')] 

 Lemmas are: 
>> [('society', 'society'), ('industry', 'industry')] 

 Dependency tags are: 
>> [(('society', 'industry'), 'compound'), (('industry', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 174 =================================

 company 


------------------- Sentence 1 -------------------

 company 

Tokens are: 
>> ['company'] 

 UPOS tags are: 
>> [('company', 'NOUN')] 

 XPOS tags are: 
>> [('company', 'NN')] 

 Lemmas are: 
>> [('company', 'company')] 

 Dependency tags are: 
>> [(('company', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 175 =================================

 organization 


------------------- Sentence 1 -------------------

 organization 

Tokens are: 
>> ['organization'] 

 UPOS tags are: 
>> [('organization', 'NOUN')] 

 XPOS tags are: 
>> [('organization', 'NN')] 

 Lemmas are: 
>> [('organization', 'organization')] 

 Dependency tags are: 
>> [(('organization', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 176 =================================

 school 


------------------- Sentence 1 -------------------

 school 

Tokens are: 
>> ['school'] 

 UPOS tags are: 
>> [('school', 'NOUN')] 

 XPOS tags are: 
>> [('school', 'NN')] 

 Lemmas are: 
>> [('school', 'school')] 

 Dependency tags are: 
>> [(('school', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 177 =================================

 companies 


------------------- Sentence 1 -------------------

 companies 

Tokens are: 
>> ['companies'] 

 UPOS tags are: 
>> [('companies', 'NOUN')] 

 XPOS tags are: 
>> [('companies', 'NNS')] 

 Lemmas are: 
>> [('companies', 'company')] 

 Dependency tags are: 
>> [(('companies', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 178 =================================

 Community 


------------------- Sentence 1 -------------------

 Community 

Tokens are: 
>> ['Community'] 

 UPOS tags are: 
>> [('Community', 'NOUN')] 

 XPOS tags are: 
>> [('Community', 'NN')] 

 Lemmas are: 
>> [('Community', 'community')] 

 Dependency tags are: 
>> [(('Community', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 179 =================================

 o�ce 


------------------- Sentence 1 -------------------

 o�ce 

Tokens are: 
>> ['o�ce'] 

 UPOS tags are: 
>> [('o�ce', 'PROPN')] 

 XPOS tags are: 
>> [('o�ce', 'NNP')] 

 Lemmas are: 
>> [('o�ce', 'o�ce')] 

 Dependency tags are: 
>> [(('o�ce', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 180 =================================

 Agency 


------------------- Sentence 1 -------------------

 Agency 

Tokens are: 
>> ['Agency'] 

 UPOS tags are: 
>> [('Agency', 'NOUN')] 

 XPOS tags are: 
>> [('Agency', 'NN')] 

 Lemmas are: 
>> [('Agency', 'agency')] 

 Dependency tags are: 
>> [(('Agency', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 181 =================================

 communities 


------------------- Sentence 1 -------------------

 communities 

Tokens are: 
>> ['communities'] 

 UPOS tags are: 
>> [('communities', 'NOUN')] 

 XPOS tags are: 
>> [('communities', 'NNS')] 

 Lemmas are: 
>> [('communities', 'community')] 

 Dependency tags are: 
>> [(('communities', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 182 =================================

 Association 


------------------- Sentence 1 -------------------

 Association 

Tokens are: 
>> ['Association'] 

 UPOS tags are: 
>> [('Association', 'NOUN')] 

 XPOS tags are: 
>> [('Association', 'NN')] 

 Lemmas are: 
>> [('Association', 'association')] 

 Dependency tags are: 
>> [(('Association', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 183 =================================

 body 


------------------- Sentence 1 -------------------

 body 

Tokens are: 
>> ['body'] 

 UPOS tags are: 
>> [('body', 'NOUN')] 

 XPOS tags are: 
>> [('body', 'NN')] 

 Lemmas are: 
>> [('body', 'body')] 

 Dependency tags are: 
>> [(('body', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 184 =================================

 schools 


------------------- Sentence 1 -------------------

 schools 

Tokens are: 
>> ['schools'] 

 UPOS tags are: 
>> [('schools', 'NOUN')] 

 XPOS tags are: 
>> [('schools', 'NNS')] 

 Lemmas are: 
>> [('schools', 'school')] 

 Dependency tags are: 
>> [(('schools', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 185 =================================

 agencies 


------------------- Sentence 1 -------------------

 agencies 

Tokens are: 
>> ['agencies'] 

 UPOS tags are: 
>> [('agencies', 'NOUN')] 

 XPOS tags are: 
>> [('agencies', 'NNS')] 

 Lemmas are: 
>> [('agencies', 'agency')] 

 Dependency tags are: 
>> [(('agencies', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 186 =================================

−5.5 −5 −4.5 −4 −3.5 −3 −2.5 −2 −4.2 


------------------- Sentence 1 -------------------

 −5.5 −5 −4.5 −4 −3.5 −3 −2.5 −2 −4.2 

Tokens are: 
>> ['−5.5', '−', '5', '−', '4.5', '−', '4', '−', '3.5', '−', '3', '−', '2.5', '−', '2', '−', '4.2'] 

 UPOS tags are: 
>> [('−5.5', 'NUM'), ('−', 'PUNCT'), ('5', 'NUM'), ('−', 'PUNCT'), ('4.5', 'NUM'), ('−', 'PUNCT'), ('4', 'NUM'), ('−', 'PUNCT'), ('3.5', 'NUM'), ('−', 'PUNCT'), ('3', 'NUM'), ('−', 'PUNCT'), ('2.5', 'NUM'), ('−', 'PUNCT'), ('2', 'NUM'), ('−', 'PUNCT'), ('4.2', 'NUM')] 

 XPOS tags are: 
>> [('−5.5', 'CD'), ('−', '-LRB-'), ('5', 'CD'), ('−', ':'), ('4.5', 'CD'), ('−', '-LRB-'), ('4', 'CD'), ('−', ':'), ('3.5', 'CD'), ('−', '-LRB-'), ('3', 'CD'), ('−', ':'), ('2.5', 'CD'), ('−', '-LRB-'), ('2', 'CD'), ('−', ':'), ('4.2', 'CD')] 

 Lemmas are: 
>> [('−5.5', '−5.5'), ('−', "''"), ('5', '5'), ('−', "''"), ('4.5', '4.5'), ('−', "''"), ('4', '4'), ('−', "''"), ('3.5', '3.5'), ('−', "''"), ('3', '3'), ('−', "''"), ('2.5', '2.5'), ('−', "''"), ('2', '2'), ('−', "''"), ('4.2', '4.2')] 

 Dependency tags are: 
>> [(('−5.5', 'root'), 'root'), (('−', '5'), 'punct'), (('5', '−5.5'), 'parataxis'), (('−', '5'), 'punct'), (('4.5', '5'), 'parataxis'), (('−', '4'), 'punct'), (('4', '4.5'), 'parataxis'), (('−', '4'), 'punct'), (('3.5', '4'), 'parataxis'), (('−', '3'), 'punct'), (('3', '3.5'), 'conj'), (('−', '3'), 'punct'), (('2.5', '3'), 'conj'), (('−', '2'), 'punct'), (('2', '2.5'), 'conj'), (('−', '2'), 'punct'), (('4.2', '2'), 'conj')]

 Named Entites are: 
>> [('5', 'CARDINAL')]

================================ Paragraph 187 =================================

−4 


------------------- Sentence 1 -------------------

 −4 

Tokens are: 
>> ['−', '4'] 

 UPOS tags are: 
>> [('−', 'PUNCT'), ('4', 'X')] 

 XPOS tags are: 
>> [('−', 'NFP'), ('4', 'LS')] 

 Lemmas are: 
>> [('−', "''"), ('4', '4')] 

 Dependency tags are: 
>> [(('−', '4'), 'punct'), (('4', 'root'), 'root')]

 Named Entites are: 
>> [('4', 'CARDINAL')]

================================ Paragraph 188 =================================

−3.8 


------------------- Sentence 1 -------------------

 −3.8 

Tokens are: 
>> ['−', '3.8'] 

 UPOS tags are: 
>> [('−', 'PUNCT'), ('3.8', 'NUM')] 

 XPOS tags are: 
>> [('−', 'NFP'), ('3.8', 'CD')] 

 Lemmas are: 
>> [('−', "''"), ('3.8', '3.8')] 

 Dependency tags are: 
>> [(('−', '3.8'), 'punct'), (('3.8', 'root'), 'root')]

 Named Entites are: 
>> [('3.8', 'CARDINAL')]

================================ Paragraph 189 =================================

−3.6 


------------------- Sentence 1 -------------------

 −3.6 

Tokens are: 
>> ['−', '3.6'] 

 UPOS tags are: 
>> [('−', 'PUNCT'), ('3.6', 'NUM')] 

 XPOS tags are: 
>> [('−', 'NFP'), ('3.6', 'CD')] 

 Lemmas are: 
>> [('−', "''"), ('3.6', '3.6')] 

 Dependency tags are: 
>> [(('−', '3.6'), 'punct'), (('3.6', 'root'), 'root')]

 Named Entites are: 
>> [('3.6', 'CARDINAL')]

================================ Paragraph 190 =================================

−3.4 


------------------- Sentence 1 -------------------

 −3.4 

Tokens are: 
>> ['−', '3.4'] 

 UPOS tags are: 
>> [('−', 'PUNCT'), ('3.4', 'NUM')] 

 XPOS tags are: 
>> [('−', 'NFP'), ('3.4', 'CD')] 

 Lemmas are: 
>> [('−', "''"), ('3.4', '3.4')] 

 Dependency tags are: 
>> [(('−', '3.4'), 'punct'), (('3.4', 'root'), 'root')]

 Named Entites are: 
>> [('3.4', 'CARDINAL')]

================================ Paragraph 191 =================================

−3.2 


------------------- Sentence 1 -------------------

 −3.2 

Tokens are: 
>> ['−', '3.2'] 

 UPOS tags are: 
>> [('−', 'PUNCT'), ('3.2', 'NUM')] 

 XPOS tags are: 
>> [('−', 'NFP'), ('3.2', 'CD')] 

 Lemmas are: 
>> [('−', "''"), ('3.2', '3.2')] 

 Dependency tags are: 
>> [(('−', '3.2'), 'punct'), (('3.2', 'root'), 'root')]

 Named Entites are: 
>> [('3.2', 'CARDINAL')]

================================ Paragraph 192 =================================

−3 


------------------- Sentence 1 -------------------

 −3 

Tokens are: 
>> ['−', '3'] 

 UPOS tags are: 
>> [('−', 'PUNCT'), ('3', 'X')] 

 XPOS tags are: 
>> [('−', 'NFP'), ('3', 'LS')] 

 Lemmas are: 
>> [('−', "''"), ('3', '3')] 

 Dependency tags are: 
>> [(('−', '3'), 'punct'), (('3', 'root'), 'root')]

 Named Entites are: 
>> [('3', 'CARDINAL')]

================================ Paragraph 193 =================================

−2.8 


------------------- Sentence 1 -------------------

 −2.8 

Tokens are: 
>> ['−', '2.8'] 

 UPOS tags are: 
>> [('−', 'PUNCT'), ('2.8', 'NUM')] 

 XPOS tags are: 
>> [('−', 'NFP'), ('2.8', 'CD')] 

 Lemmas are: 
>> [('−', "''"), ('2.8', '2.8')] 

 Dependency tags are: 
>> [(('−', '2.8'), 'punct'), (('2.8', 'root'), 'root')]

 Named Entites are: 
>> [('2.8', 'CARDINAL')]

================================ Paragraph 194 =================================

−2.6 


------------------- Sentence 1 -------------------

 −2.6 

Tokens are: 
>> ['−', '2.6'] 

 UPOS tags are: 
>> [('−', 'PUNCT'), ('2.6', 'NUM')] 

 XPOS tags are: 
>> [('−', 'NFP'), ('2.6', 'CD')] 

 Lemmas are: 
>> [('−', "''"), ('2.6', '2.6')] 

 Dependency tags are: 
>> [(('−', '2.6'), 'punct'), (('2.6', 'root'), 'root')]

 Named Entites are: 
>> [('2.6', 'CARDINAL')]

================================ Paragraph 195 =================================

−2.4 


------------------- Sentence 1 -------------------

 −2.4 

Tokens are: 
>> ['−', '2.4'] 

 UPOS tags are: 
>> [('−', 'PUNCT'), ('2.4', 'NUM')] 

 XPOS tags are: 
>> [('−', 'NFP'), ('2.4', 'CD')] 

 Lemmas are: 
>> [('−', "''"), ('2.4', '2.4')] 

 Dependency tags are: 
>> [(('−', '2.4'), 'punct'), (('2.4', 'root'), 'root')]

 Named Entites are: 
>> [('2.4', 'CARDINAL')]

================================ Paragraph 196 =================================

−2.2 


------------------- Sentence 1 -------------------

 −2.2 

Tokens are: 
>> ['−', '2.2'] 

 UPOS tags are: 
>> [('−', 'PUNCT'), ('2.2', 'NUM')] 

 XPOS tags are: 
>> [('−', 'NFP'), ('2.2', 'CD')] 

 Lemmas are: 
>> [('−', "''"), ('2.2', '2.2')] 

 Dependency tags are: 
>> [(('−', '2.2'), 'punct'), (('2.2', 'root'), 'root')]

 Named Entites are: 
>> [('2.2', 'CARDINAL')]

================================ Paragraph 197 =================================

over the past few months 


------------------- Sentence 1 -------------------

 over the past few months 

Tokens are: 
>> ['over', 'the', 'past', 'few', 'months'] 

 UPOS tags are: 
>> [('over', 'ADP'), ('the', 'DET'), ('past', 'ADJ'), ('few', 'ADJ'), ('months', 'NOUN')] 

 XPOS tags are: 
>> [('over', 'IN'), ('the', 'DT'), ('past', 'JJ'), ('few', 'JJ'), ('months', 'NNS')] 

 Lemmas are: 
>> [('over', 'over'), ('the', 'the'), ('past', 'past'), ('few', 'few'), ('months', 'month')] 

 Dependency tags are: 
>> [(('over', 'months'), 'case'), (('the', 'months'), 'det'), (('past', 'months'), 'amod'), (('few', 'months'), 'amod'), (('months', 'root'), 'root')]

 Named Entites are: 
>> [('the past few months', 'DATE')]

================================ Paragraph 198 =================================

that a few days 


------------------- Sentence 1 -------------------

 that a few days 

Tokens are: 
>> ['that', 'a', 'few', 'days'] 

 UPOS tags are: 
>> [('that', 'PRON'), ('a', 'DET'), ('few', 'ADJ'), ('days', 'NOUN')] 

 XPOS tags are: 
>> [('that', 'DT'), ('a', 'DT'), ('few', 'JJ'), ('days', 'NNS')] 

 Lemmas are: 
>> [('that', 'that'), ('a', 'a'), ('few', 'few'), ('days', 'day')] 

 Dependency tags are: 
>> [(('that', 'days'), 'nsubj'), (('a', 'days'), 'det'), (('few', 'days'), 'amod'), (('days', 'root'), 'root')]

 Named Entites are: 
>> [('a few days', 'DATE')]

================================ Paragraph 199 =================================

In the last few daysthe past few days 


------------------- Sentence 1 -------------------

 In the last few daysthe past few days 

Tokens are: 
>> ['In', 'the', 'last', 'few', 'days', 'the', 'past', 'few', 'days'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('the', 'DET'), ('last', 'ADJ'), ('few', 'ADJ'), ('days', 'NOUN'), ('the', 'DET'), ('past', 'ADJ'), ('few', 'ADJ'), ('days', 'NOUN')] 

 XPOS tags are: 
>> [('In', 'IN'), ('the', 'DT'), ('last', 'JJ'), ('few', 'JJ'), ('days', 'NNS'), ('the', 'DT'), ('past', 'JJ'), ('few', 'JJ'), ('days', 'NNS')] 

 Lemmas are: 
>> [('In', 'in'), ('the', 'the'), ('last', 'last'), ('few', 'few'), ('days', 'day'), ('the', 'the'), ('past', 'past'), ('few', 'few'), ('days', 'day')] 

 Dependency tags are: 
>> [(('In', 'days'), 'case'), (('the', 'days'), 'det'), (('last', 'days'), 'amod'), (('few', 'days'), 'amod'), (('days', 'days'), 'nmod'), (('the', 'days'), 'det'), (('past', 'days'), 'amod'), (('few', 'days'), 'amod'), (('days', 'root'), 'root')]

 Named Entites are: 
>> [('the last few days', 'DATE'), ('the past few days', 'DATE')]

================================ Paragraph 200 =================================

In a few months 


------------------- Sentence 1 -------------------

 In a few months 

Tokens are: 
>> ['In', 'a', 'few', 'months'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('a', 'DET'), ('few', 'ADJ'), ('months', 'NOUN')] 

 XPOS tags are: 
>> [('In', 'IN'), ('a', 'DT'), ('few', 'JJ'), ('months', 'NNS')] 

 Lemmas are: 
>> [('In', 'in'), ('a', 'a'), ('few', 'few'), ('months', 'month')] 

 Dependency tags are: 
>> [(('In', 'months'), 'case'), (('a', 'months'), 'det'), (('few', 'months'), 'amod'), (('months', 'root'), 'root')]

 Named Entites are: 
>> [('a few months', 'DATE')]

================================ Paragraph 201 =================================

in the coming months 


------------------- Sentence 1 -------------------

 in the coming months 

Tokens are: 
>> ['in', 'the', 'coming', 'months'] 

 UPOS tags are: 
>> [('in', 'ADP'), ('the', 'DET'), ('coming', 'NOUN'), ('months', 'NOUN')] 

 XPOS tags are: 
>> [('in', 'IN'), ('the', 'DT'), ('coming', 'NN'), ('months', 'NNS')] 

 Lemmas are: 
>> [('in', 'in'), ('the', 'the'), ('coming', 'come'), ('months', 'month')] 

 Dependency tags are: 
>> [(('in', 'months'), 'case'), (('the', 'months'), 'det'), (('coming', 'months'), 'amod'), (('months', 'root'), 'root')]

 Named Entites are: 
>> [('the coming months', 'DATE')]

================================ Paragraph 202 =================================

a few months ago 


------------------- Sentence 1 -------------------

 a few months ago 

Tokens are: 
>> ['a', 'few', 'months', 'ago'] 

 UPOS tags are: 
>> [('a', 'DET'), ('few', 'ADJ'), ('months', 'NOUN'), ('ago', 'ADV')] 

 XPOS tags are: 
>> [('a', 'DT'), ('few', 'JJ'), ('months', 'NNS'), ('ago', 'RB')] 

 Lemmas are: 
>> [('a', 'a'), ('few', 'few'), ('months', 'month'), ('ago', 'ago')] 

 Dependency tags are: 
>> [(('a', 'months'), 'det'), (('few', 'months'), 'amod'), (('months', 'ago'), 'obl:tmod'), (('ago', 'root'), 'root')]

 Named Entites are: 
>> [('a few months ago', 'DATE')]

================================ Paragraph 203 =================================

&quot; the two groups 


------------------- Sentence 1 -------------------

 &quot; the two groups 

Tokens are: 
>> ['&quot', ';', 'the', 'two', 'groups'] 

 UPOS tags are: 
>> [('&quot', 'PUNCT'), (';', 'PUNCT'), ('the', 'DET'), ('two', 'NUM'), ('groups', 'NOUN')] 

 XPOS tags are: 
>> [('&quot', 'NFP'), (';', ':'), ('the', 'DT'), ('two', 'CD'), ('groups', 'NNS')] 

 Lemmas are: 
>> [('&quot', '&quot'), (';', ';'), ('the', 'the'), ('two', 'two'), ('groups', 'group')] 

 Dependency tags are: 
>> [(('&quot', 'groups'), 'punct'), ((';', 'groups'), 'punct'), (('the', 'groups'), 'det'), (('two', 'groups'), 'nummod'), (('groups', 'root'), 'root')]

 Named Entites are: 
>> [('two', 'CARDINAL')]

================================ Paragraph 204 =================================

of the two groups 


------------------- Sentence 1 -------------------

 of the two groups 

Tokens are: 
>> ['of', 'the', 'two', 'groups'] 

 UPOS tags are: 
>> [('of', 'ADP'), ('the', 'DET'), ('two', 'NUM'), ('groups', 'NOUN')] 

 XPOS tags are: 
>> [('of', 'IN'), ('the', 'DT'), ('two', 'CD'), ('groups', 'NNS')] 

 Lemmas are: 
>> [('of', 'of'), ('the', 'the'), ('two', 'two'), ('groups', 'group')] 

 Dependency tags are: 
>> [(('of', 'groups'), 'case'), (('the', 'groups'), 'det'), (('two', 'groups'), 'nummod'), (('groups', 'root'), 'root')]

 Named Entites are: 
>> [('two', 'CARDINAL')]

================================ Paragraph 205 =================================

over the last few months 


------------------- Sentence 1 -------------------

 over the last few months 

Tokens are: 
>> ['over', 'the', 'last', 'few', 'months'] 

 UPOS tags are: 
>> [('over', 'ADP'), ('the', 'DET'), ('last', 'ADJ'), ('few', 'ADJ'), ('months', 'NOUN')] 

 XPOS tags are: 
>> [('over', 'IN'), ('the', 'DT'), ('last', 'JJ'), ('few', 'JJ'), ('months', 'NNS')] 

 Lemmas are: 
>> [('over', 'over'), ('the', 'the'), ('last', 'last'), ('few', 'few'), ('months', 'month')] 

 Dependency tags are: 
>> [(('over', 'months'), 'case'), (('the', 'months'), 'det'), (('last', 'months'), 'amod'), (('few', 'months'), 'amod'), (('months', 'root'), 'root')]

 Named Entites are: 
>> [('the last few months', 'DATE')]

================================ Paragraph 206 =================================

dispute between the two 


------------------- Sentence 1 -------------------

 dispute between the two 

Tokens are: 
>> ['dispute', 'between', 'the', 'two'] 

 UPOS tags are: 
>> [('dispute', 'NOUN'), ('between', 'ADP'), ('the', 'DET'), ('two', 'NUM')] 

 XPOS tags are: 
>> [('dispute', 'NN'), ('between', 'IN'), ('the', 'DT'), ('two', 'CD')] 

 Lemmas are: 
>> [('dispute', 'dispute'), ('between', 'between'), ('the', 'the'), ('two', 'two')] 

 Dependency tags are: 
>> [(('dispute', 'root'), 'root'), (('between', 'two'), 'case'), (('the', 'two'), 'det'), (('two', 'dispute'), 'nmod')]

 Named Entites are: 
>> [('two', 'CARDINAL')]

================================ Paragraph 207 =================================

the last two decades 


------------------- Sentence 1 -------------------

 the last two decades 

Tokens are: 
>> ['the', 'last', 'two', 'decades'] 

 UPOS tags are: 
>> [('the', 'DET'), ('last', 'ADJ'), ('two', 'NUM'), ('decades', 'NOUN')] 

 XPOS tags are: 
>> [('the', 'DT'), ('last', 'JJ'), ('two', 'CD'), ('decades', 'NNS')] 

 Lemmas are: 
>> [('the', 'the'), ('last', 'last'), ('two', 'two'), ('decades', 'decade')] 

 Dependency tags are: 
>> [(('the', 'decades'), 'det'), (('last', 'decades'), 'amod'), (('two', 'decades'), 'nummod'), (('decades', 'root'), 'root')]

 Named Entites are: 
>> [('the last two decades', 'DATE')]

================================ Paragraph 208 =================================

the next six months 


------------------- Sentence 1 -------------------

 the next six months 

Tokens are: 
>> ['the', 'next', 'six', 'months'] 

 UPOS tags are: 
>> [('the', 'DET'), ('next', 'ADJ'), ('six', 'NUM'), ('months', 'NOUN')] 

 XPOS tags are: 
>> [('the', 'DT'), ('next', 'JJ'), ('six', 'CD'), ('months', 'NNS')] 

 Lemmas are: 
>> [('the', 'the'), ('next', 'next'), ('six', 'six'), ('months', 'month')] 

 Dependency tags are: 
>> [(('the', 'months'), 'det'), (('next', 'months'), 'amod'), (('six', 'months'), 'nummod'), (('months', 'root'), 'root')]

 Named Entites are: 
>> [('the next six months', 'DATE')]

================================ Paragraph 209 =================================

two months before being for nearly two months 


------------------- Sentence 1 -------------------

 two months before being for nearly two months 

Tokens are: 
>> ['two', 'months', 'before', 'being', 'for', 'nearly', 'two', 'months'] 

 UPOS tags are: 
>> [('two', 'NUM'), ('months', 'NOUN'), ('before', 'SCONJ'), ('being', 'AUX'), ('for', 'ADP'), ('nearly', 'ADV'), ('two', 'NUM'), ('months', 'NOUN')] 

 XPOS tags are: 
>> [('two', 'CD'), ('months', 'NNS'), ('before', 'IN'), ('being', 'VBG'), ('for', 'IN'), ('nearly', 'RB'), ('two', 'CD'), ('months', 'NNS')] 

 Lemmas are: 
>> [('two', 'two'), ('months', 'month'), ('before', 'before'), ('being', 'be'), ('for', 'for'), ('nearly', 'nearly'), ('two', 'two'), ('months', 'month')] 

 Dependency tags are: 
>> [(('two', 'months'), 'nummod'), (('months', 'root'), 'root'), (('before', 'months'), 'mark'), (('being', 'months'), 'cop'), (('for', 'months'), 'case'), (('nearly', 'two'), 'advmod'), (('two', 'months'), 'nummod'), (('months', 'months'), 'nmod')]

 Named Entites are: 
>> [('two months', 'DATE'), ('nearly two months', 'DATE')]

================================ Paragraph 210 =================================

over the last two decades 


------------------- Sentence 1 -------------------

 over the last two decades 

Tokens are: 
>> ['over', 'the', 'last', 'two', 'decades'] 

 UPOS tags are: 
>> [('over', 'ADP'), ('the', 'DET'), ('last', 'ADJ'), ('two', 'NUM'), ('decades', 'NOUN')] 

 XPOS tags are: 
>> [('over', 'IN'), ('the', 'DT'), ('last', 'JJ'), ('two', 'CD'), ('decades', 'NNS')] 

 Lemmas are: 
>> [('over', 'over'), ('the', 'the'), ('last', 'last'), ('two', 'two'), ('decades', 'decade')] 

 Dependency tags are: 
>> [(('over', 'decades'), 'case'), (('the', 'decades'), 'det'), (('last', 'decades'), 'amod'), (('two', 'decades'), 'nummod'), (('decades', 'root'), 'root')]

 Named Entites are: 
>> [('the last two decades', 'DATE')]

================================ Paragraph 211 =================================

within a few months 


------------------- Sentence 1 -------------------

 within a few months 

Tokens are: 
>> ['within', 'a', 'few', 'months'] 

 UPOS tags are: 
>> [('within', 'ADP'), ('a', 'DET'), ('few', 'ADJ'), ('months', 'NOUN')] 

 XPOS tags are: 
>> [('within', 'IN'), ('a', 'DT'), ('few', 'JJ'), ('months', 'NNS')] 

 Lemmas are: 
>> [('within', 'within'), ('a', 'a'), ('few', 'few'), ('months', 'month')] 

 Dependency tags are: 
>> [(('within', 'months'), 'case'), (('a', 'months'), 'det'), (('few', 'months'), 'amod'), (('months', 'root'), 'root')]

 Named Entites are: 
>> [('a few months', 'DATE')]

================================ Paragraph 212 =================================

2 8  M A Y  2 0 1 5  |  V O L  5 2 1  |  N A T U R E  |  4 4 1 


------------------- Sentence 1 -------------------

 2 8  M A Y  2 0 1 5  |  V O L  5 2 1  |  N A T U R E  |  4 4 1 

Tokens are: 
>> ['2', '8', 'M', 'A', 'Y', '2', '0', '1', '5', '|', 'V', 'O', 'L', '5', '2', '1', '|', 'N', 'A', 'T', 'U', 'R', 'E', '|', '4', '4', '1'] 

 UPOS tags are: 
>> [('2', 'NUM'), ('8', 'NUM'), ('M', 'NOUN'), ('A', 'NUM'), ('Y', 'NOUN'), ('2', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('5', 'NUM'), ('|', 'SYM'), ('V', 'NOUN'), ('O', 'NOUN'), ('L', 'SYM'), ('5', 'NUM'), ('2', 'NUM'), ('1', 'NUM'), ('|', 'SYM'), ('N', 'NOUN'), ('A', 'NUM'), ('T', 'NOUN'), ('U', 'NOUN'), ('R', 'NOUN'), ('E', 'NOUN'), ('|', 'PUNCT'), ('4', 'NUM'), ('4', 'NUM'), ('1', 'NUM')] 

 XPOS tags are: 
>> [('2', 'CD'), ('8', 'CD'), ('M', 'NNS'), ('A', 'LS'), ('Y', 'NN'), ('2', 'CD'), ('0', 'CD'), ('1', 'CD'), ('5', 'CD'), ('|', 'SYM'), ('V', 'NN'), ('O', 'NNS'), ('L', 'SYM'), ('5', 'CD'), ('2', 'CD'), ('1', 'CD'), ('|', 'SYM'), ('N', 'NN'), ('A', 'CD'), ('T', 'NN'), ('U', 'NN'), ('R', 'NN'), ('E', 'NN'), ('|', ':'), ('4', 'CD'), ('4', 'CD'), ('1', 'CD')] 

 Lemmas are: 
>> [('2', '2'), ('8', '8'), ('M', 'm'), ('A', 'a'), ('Y', 'Y'), ('2', '2'), ('0', '0'), ('1', '1'), ('5', '5'), ('|', '|'), ('V', 'V'), ('O', 'o'), ('L', 'l'), ('5', '5'), ('2', '2'), ('1', '1'), ('|', '|'), ('N', 'N'), ('A', 'a'), ('T', 'T'), ('U', 'U'), ('R', 'R'), ('E', 'e'), ('|', '|'), ('4', '4'), ('4', '4'), ('1', '1')] 

 Dependency tags are: 
>> [(('2', 'M'), 'nummod'), (('8', 'M'), 'nummod'), (('M', 'root'), 'root'), (('A', 'M'), 'nummod'), (('Y', 'M'), 'appos'), (('2', 'Y'), 'nummod'), (('0', '2'), 'conj'), (('1', '2'), 'conj'), (('5', '1'), 'compound'), (('|', '1'), 'compound'), (('V', 'O'), 'nummod'), (('O', '|'), 'appos'), (('L', 'O'), 'appos'), (('5', 'O'), 'nummod'), (('2', '5'), 'conj'), (('1', '2'), 'conj'), (('|', 'N'), 'compound'), (('N', '2'), 'conj'), (('A', 'T'), 'nummod'), (('T', 'N'), 'appos'), (('U', 'E'), 'compound'), (('R', 'E'), 'compound'), (('E', 'N'), 'appos'), (('|', '4'), 'punct'), (('4', 'E'), 'appos'), (('4', '4'), 'flat'), (('1', '4'), 'flat')]

 Named Entites are: 
>> [('4', 'CARDINAL'), ('4', 'CARDINAL')]

================================ Paragraph 213 =================================

REVIEW INSIGHT 


------------------- Sentence 1 -------------------

 REVIEW INSIGHT 

Tokens are: 
>> ['REVIEW', 'INSIGHT'] 

 UPOS tags are: 
>> [('REVIEW', 'NOUN'), ('INSIGHT', 'NOUN')] 

 XPOS tags are: 
>> [('REVIEW', 'NN'), ('INSIGHT', 'NN')] 

 Lemmas are: 
>> [('REVIEW', 'review'), ('INSIGHT', 'insight')] 

 Dependency tags are: 
>> [(('REVIEW', 'INSIGHT'), 'compound'), (('INSIGHT', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 214 =================================

© 2015 Macmillan Publishers Limited. All rights reserved


------------------- Sentence 1 -------------------

 © 2015 Macmillan Publishers Limited. 

Tokens are: 
>> ['©', '2015', 'Macmillan', 'Publishers', 'Limited', '.'] 

 UPOS tags are: 
>> [('©', 'ADP'), ('2015', 'NUM'), ('Macmillan', 'PROPN'), ('Publishers', 'PROPN'), ('Limited', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('©', 'IN'), ('2015', 'CD'), ('Macmillan', 'NNP'), ('Publishers', 'NNPS'), ('Limited', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('©', 'at'), ('2015', '2015'), ('Macmillan', 'Macmillan'), ('Publishers', 'Publisher'), ('Limited', 'Limited'), ('.', '.')] 

 Dependency tags are: 
>> [(('©', 'Limited'), 'case'), (('2015', 'Limited'), 'nummod'), (('Macmillan', 'Limited'), 'compound'), (('Publishers', 'Limited'), 'compound'), (('Limited', 'root'), 'root'), (('.', 'Limited'), 'punct')]

 Named Entites are: 
>> [('2015', 'DATE'), ('Macmillan Publishers Limited', 'ORG')]

------------------- Sentence 2 -------------------

 All rights reserved 

Tokens are: 
>> ['All', 'rights', 'reserved'] 

 UPOS tags are: 
>> [('All', 'DET'), ('rights', 'NOUN'), ('reserved', 'VERB')] 

 XPOS tags are: 
>> [('All', 'DT'), ('rights', 'NNS'), ('reserved', 'VBN')] 

 Lemmas are: 
>> [('All', 'all'), ('rights', 'rights'), ('reserved', 'reserve')] 

 Dependency tags are: 
>> [(('All', 'rights'), 'det'), (('rights', 'root'), 'root'), (('reserved', 'rights'), 'acl')]

 Named Entites are: 
>> []

================================ Paragraph 215 =================================

that each contribute plausibility to a conclusion84,85.  Instead of translating the meaning of a French sentence into an  


------------------- Sentence 1 -------------------

 that each contribute plausibility to a conclusion84,85. 

Tokens are: 
>> ['that', 'each', 'contribute', 'plausibility', 'to', 'a', 'conclusion', '84,85', '.'] 

 UPOS tags are: 
>> [('that', 'SCONJ'), ('each', 'DET'), ('contribute', 'VERB'), ('plausibility', 'NOUN'), ('to', 'ADP'), ('a', 'DET'), ('conclusion', 'NOUN'), ('84,85', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('that', 'IN'), ('each', 'DT'), ('contribute', 'VBP'), ('plausibility', 'NN'), ('to', 'IN'), ('a', 'DT'), ('conclusion', 'NN'), ('84,85', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('that', 'that'), ('each', 'each'), ('contribute', 'contribute'), ('plausibility', 'plausibility'), ('to', 'to'), ('a', 'a'), ('conclusion', 'conclusion'), ('84,85', '8485'), ('.', '.')] 

 Dependency tags are: 
>> [(('that', 'contribute'), 'mark'), (('each', 'contribute'), 'nsubj'), (('contribute', 'root'), 'root'), (('plausibility', 'contribute'), 'obj'), (('to', 'conclusion'), 'case'), (('a', 'conclusion'), 'det'), (('conclusion', 'contribute'), 'obl'), (('84,85', 'conclusion'), 'nummod'), (('.', 'contribute'), 'punct')]

 Named Entites are: 
>> [('84,85', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Instead of translating the meaning of a French sentence into an 

Tokens are: 
>> ['Instead', 'of', 'translating', 'the', 'meaning', 'of', 'a', 'French', 'sentence', 'into', 'an'] 

 UPOS tags are: 
>> [('Instead', 'ADV'), ('of', 'SCONJ'), ('translating', 'VERB'), ('the', 'DET'), ('meaning', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('French', 'ADJ'), ('sentence', 'NOUN'), ('into', 'ADP'), ('an', 'DET')] 

 XPOS tags are: 
>> [('Instead', 'RB'), ('of', 'IN'), ('translating', 'VBG'), ('the', 'DT'), ('meaning', 'NN'), ('of', 'IN'), ('a', 'DT'), ('French', 'JJ'), ('sentence', 'NN'), ('into', 'IN'), ('an', 'DT')] 

 Lemmas are: 
>> [('Instead', 'instead'), ('of', 'of'), ('translating', 'translate'), ('the', 'the'), ('meaning', 'meaning'), ('of', 'of'), ('a', 'a'), ('French', 'French'), ('sentence', 'sentence'), ('into', 'into'), ('an', 'a')] 

 Dependency tags are: 
>> [(('Instead', 'translating'), 'mark'), (('of', 'Instead'), 'fixed'), (('translating', 'root'), 'root'), (('the', 'meaning'), 'det'), (('meaning', 'translating'), 'obj'), (('of', 'sentence'), 'case'), (('a', 'sentence'), 'det'), (('French', 'sentence'), 'amod'), (('sentence', 'meaning'), 'nmod'), (('into', 'an'), 'case'), (('an', 'sentence'), 'nmod')]

 Named Entites are: 
>> [('French', 'NORP')]

================================ Paragraph 216 =================================

English sentence, one can learn to ‘translate’ the meaning of an image  into an English sentence (Fig. 3). The encoder here is a deep Con- vNet that converts the pixels into an activity vector in its last hidden  layer. The decoder is an RNN similar to the ones used for machine  translation and neural language modelling. There has been a surge of  interest in such systems recently (see examples mentioned in ref. 86).  


------------------- Sentence 1 -------------------

 English sentence, one can learn to ‘translate’ the meaning of an image  into an English sentence (Fig. 3). 

Tokens are: 
>> ['English', 'sentence', ',', 'one', 'can', 'learn', 'to', '‘', 'translate', '’', 'the', 'meaning', 'of', 'an', 'image', 'into', 'an', 'English', 'sentence', '(', 'Fig.', '3', ')', '.'] 

 UPOS tags are: 
>> [('English', 'ADJ'), ('sentence', 'NOUN'), (',', 'PUNCT'), ('one', 'PRON'), ('can', 'AUX'), ('learn', 'VERB'), ('to', 'PART'), ('‘', 'PUNCT'), ('translate', 'VERB'), ('’', 'PUNCT'), ('the', 'DET'), ('meaning', 'NOUN'), ('of', 'ADP'), ('an', 'DET'), ('image', 'NOUN'), ('into', 'ADP'), ('an', 'DET'), ('English', 'ADJ'), ('sentence', 'NOUN'), ('(', 'PUNCT'), ('Fig.', 'PROPN'), ('3', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('English', 'JJ'), ('sentence', 'NN'), (',', ','), ('one', 'PRP'), ('can', 'MD'), ('learn', 'VB'), ('to', 'TO'), ('‘', '``'), ('translate', 'VB'), ('’', "''"), ('the', 'DT'), ('meaning', 'NN'), ('of', 'IN'), ('an', 'DT'), ('image', 'NN'), ('into', 'IN'), ('an', 'DT'), ('English', 'JJ'), ('sentence', 'NN'), ('(', '-LRB-'), ('Fig.', 'NNP'), ('3', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('English', 'English'), ('sentence', 'sentence'), (',', ','), ('one', 'one'), ('can', 'can'), ('learn', 'learn'), ('to', 'to'), ('‘', "'"), ('translate', 'translate'), ('’', "'"), ('the', 'the'), ('meaning', 'meaning'), ('of', 'of'), ('an', 'a'), ('image', 'image'), ('into', 'into'), ('an', 'a'), ('English', 'English'), ('sentence', 'sentence'), ('(', '('), ('Fig.', 'Fig.'), ('3', '3'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('English', 'sentence'), 'amod'), (('sentence', 'learn'), 'nsubj'), ((',', 'learn'), 'punct'), (('one', 'learn'), 'nsubj'), (('can', 'learn'), 'aux'), (('learn', 'root'), 'root'), (('to', 'translate'), 'mark'), (('‘', 'translate'), 'punct'), (('translate', 'learn'), 'xcomp'), (('’', 'translate'), 'punct'), (('the', 'meaning'), 'det'), (('meaning', 'translate'), 'obj'), (('of', 'image'), 'case'), (('an', 'image'), 'det'), (('image', 'meaning'), 'nmod'), (('into', 'sentence'), 'case'), (('an', 'sentence'), 'det'), (('English', 'sentence'), 'amod'), (('sentence', 'image'), 'nmod'), (('(', 'Fig.'), 'punct'), (('Fig.', 'sentence'), 'appos'), (('3', 'Fig.'), 'dep'), ((')', 'Fig.'), 'punct'), (('.', 'learn'), 'punct')]

 Named Entites are: 
>> [('English', 'LANGUAGE'), ('English', 'LANGUAGE'), ('3', 'CARDINAL')]

------------------- Sentence 2 -------------------

 The encoder here is a deep Con- vNet that converts the pixels into an activity vector in its last hidden  layer. 

Tokens are: 
>> ['The', 'encoder', 'here', 'is', 'a', 'deep', 'Con', '-', 'vNet', 'that', 'converts', 'the', 'pixels', 'into', 'an', 'activity', 'vector', 'in', 'its', 'last', 'hidden', 'layer', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('encoder', 'NOUN'), ('here', 'ADV'), ('is', 'AUX'), ('a', 'DET'), ('deep', 'ADJ'), ('Con', 'PROPN'), ('-', 'PUNCT'), ('vNet', 'NOUN'), ('that', 'PRON'), ('converts', 'VERB'), ('the', 'DET'), ('pixels', 'NOUN'), ('into', 'ADP'), ('an', 'DET'), ('activity', 'NOUN'), ('vector', 'NOUN'), ('in', 'ADP'), ('its', 'PRON'), ('last', 'ADJ'), ('hidden', 'VERB'), ('layer', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('encoder', 'NN'), ('here', 'RB'), ('is', 'VBZ'), ('a', 'DT'), ('deep', 'JJ'), ('Con', 'NNP'), ('-', 'HYPH'), ('vNet', 'NN'), ('that', 'WDT'), ('converts', 'VBZ'), ('the', 'DT'), ('pixels', 'NNS'), ('into', 'IN'), ('an', 'DT'), ('activity', 'NN'), ('vector', 'NN'), ('in', 'IN'), ('its', 'PRP$'), ('last', 'JJ'), ('hidden', 'VBN'), ('layer', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('encoder', 'encoder'), ('here', 'here'), ('is', 'be'), ('a', 'a'), ('deep', 'deep'), ('Con', 'con'), ('-', '-'), ('vNet', 'vNet'), ('that', 'that'), ('converts', 'convert'), ('the', 'the'), ('pixels', 'pixel'), ('into', 'into'), ('an', 'a'), ('activity', 'activity'), ('vector', 'vector'), ('in', 'in'), ('its', 'its'), ('last', 'last'), ('hidden', 'hide'), ('layer', 'layer'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'encoder'), 'det'), (('encoder', 'vNet'), 'nsubj'), (('here', 'encoder'), 'advmod'), (('is', 'vNet'), 'cop'), (('a', 'vNet'), 'det'), (('deep', 'vNet'), 'amod'), (('Con', 'vNet'), 'compound'), (('-', 'vNet'), 'punct'), (('vNet', 'root'), 'root'), (('that', 'converts'), 'nsubj'), (('converts', 'vNet'), 'acl:relcl'), (('the', 'pixels'), 'det'), (('pixels', 'converts'), 'obj'), (('into', 'vector'), 'case'), (('an', 'vector'), 'det'), (('activity', 'vector'), 'compound'), (('vector', 'converts'), 'obl'), (('in', 'layer'), 'case'), (('its', 'layer'), 'nmod:poss'), (('last', 'layer'), 'amod'), (('hidden', 'layer'), 'amod'), (('layer', 'vector'), 'nmod'), (('.', 'vNet'), 'punct')]

 Named Entites are: 
>> [('Con- vNet', 'PRODUCT')]

------------------- Sentence 3 -------------------

 The decoder is an RNN similar to the ones used for machine  translation and neural language modelling. 

Tokens are: 
>> ['The', 'decoder', 'is', 'an', 'RNN', 'similar', 'to', 'the', 'ones', 'used', 'for', 'machine', 'translation', 'and', 'neural', 'language', 'modelling', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('decoder', 'NOUN'), ('is', 'AUX'), ('an', 'DET'), ('RNN', 'PROPN'), ('similar', 'ADJ'), ('to', 'ADP'), ('the', 'DET'), ('ones', 'NOUN'), ('used', 'VERB'), ('for', 'ADP'), ('machine', 'NOUN'), ('translation', 'NOUN'), ('and', 'CCONJ'), ('neural', 'ADJ'), ('language', 'NOUN'), ('modelling', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('decoder', 'NN'), ('is', 'VBZ'), ('an', 'DT'), ('RNN', 'NNP'), ('similar', 'JJ'), ('to', 'IN'), ('the', 'DT'), ('ones', 'NNS'), ('used', 'VBN'), ('for', 'IN'), ('machine', 'NN'), ('translation', 'NN'), ('and', 'CC'), ('neural', 'JJ'), ('language', 'NN'), ('modelling', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('decoder', 'decoder'), ('is', 'be'), ('an', 'a'), ('RNN', 'RNN'), ('similar', 'similar'), ('to', 'to'), ('the', 'the'), ('ones', 'one'), ('used', 'use'), ('for', 'for'), ('machine', 'machine'), ('translation', 'translation'), ('and', 'and'), ('neural', 'neural'), ('language', 'language'), ('modelling', 'modelling'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'decoder'), 'det'), (('decoder', 'RNN'), 'nsubj'), (('is', 'RNN'), 'cop'), (('an', 'RNN'), 'det'), (('RNN', 'root'), 'root'), (('similar', 'RNN'), 'amod'), (('to', 'ones'), 'case'), (('the', 'ones'), 'det'), (('ones', 'similar'), 'obl'), (('used', 'ones'), 'acl'), (('for', 'translation'), 'case'), (('machine', 'translation'), 'compound'), (('translation', 'used'), 'obl'), (('and', 'modelling'), 'cc'), (('neural', 'language'), 'amod'), (('language', 'modelling'), 'compound'), (('modelling', 'translation'), 'conj'), (('.', 'RNN'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 There has been a surge of  interest in such systems recently (see examples mentioned in ref. 86). 

Tokens are: 
>> ['There', 'has', 'been', 'a', 'surge', 'of', 'interest', 'in', 'such', 'systems', 'recently', '(', 'see', 'examples', 'mentioned', 'in', 'ref.', '86', ')', '.'] 

 UPOS tags are: 
>> [('There', 'PRON'), ('has', 'AUX'), ('been', 'VERB'), ('a', 'DET'), ('surge', 'NOUN'), ('of', 'ADP'), ('interest', 'NOUN'), ('in', 'ADP'), ('such', 'ADJ'), ('systems', 'NOUN'), ('recently', 'ADV'), ('(', 'PUNCT'), ('see', 'VERB'), ('examples', 'NOUN'), ('mentioned', 'VERB'), ('in', 'ADP'), ('ref.', 'NOUN'), ('86', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('There', 'EX'), ('has', 'VBZ'), ('been', 'VBN'), ('a', 'DT'), ('surge', 'NN'), ('of', 'IN'), ('interest', 'NN'), ('in', 'IN'), ('such', 'JJ'), ('systems', 'NNS'), ('recently', 'RB'), ('(', '-LRB-'), ('see', 'VB'), ('examples', 'NNS'), ('mentioned', 'VBN'), ('in', 'IN'), ('ref.', 'NN'), ('86', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('There', 'there'), ('has', 'have'), ('been', 'be'), ('a', 'a'), ('surge', 'surge'), ('of', 'of'), ('interest', 'interest'), ('in', 'in'), ('such', 'such'), ('systems', 'system'), ('recently', 'recently'), ('(', '('), ('see', 'see'), ('examples', 'example'), ('mentioned', 'mention'), ('in', 'in'), ('ref.', 'ref.'), ('86', '86'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('There', 'been'), 'expl'), (('has', 'been'), 'aux'), (('been', 'root'), 'root'), (('a', 'surge'), 'det'), (('surge', 'been'), 'nsubj'), (('of', 'interest'), 'case'), (('interest', 'surge'), 'nmod'), (('in', 'systems'), 'case'), (('such', 'systems'), 'amod'), (('systems', 'interest'), 'nmod'), (('recently', 'systems'), 'advmod'), (('(', 'see'), 'punct'), (('see', 'been'), 'parataxis'), (('examples', 'see'), 'obj'), (('mentioned', 'examples'), 'acl'), (('in', 'ref.'), 'case'), (('ref.', 'mentioned'), 'obl'), (('86', 'ref.'), 'nummod'), ((')', 'see'), 'punct'), (('.', 'been'), 'punct')]

 Named Entites are: 
>> [('86', 'CARDINAL')]

================================ Paragraph 217 =================================

RNNs, once unfolded in time (Fig. 5), can be seen as very deep  feedforward networks in which all the layers share the same weights.  Although their main purpose is to learn long-term dependencies,  theoretical and empirical evidence shows that it is difficult to learn  to store information for very long78.   


------------------- Sentence 1 -------------------

 RNNs, once unfolded in time (Fig. 5), can be seen as very deep  feedforward networks in which all the layers share the same weights. 

Tokens are: 
>> ['RNNs', ',', 'once', 'unfolded', 'in', 'time', '(', 'Fig.', '5', ')', ',', 'can', 'be', 'seen', 'as', 'very', 'deep', 'feedforward', 'networks', 'in', 'which', 'all', 'the', 'layers', 'share', 'the', 'same', 'weights', '.'] 

 UPOS tags are: 
>> [('RNNs', 'PROPN'), (',', 'PUNCT'), ('once', 'ADV'), ('unfolded', 'VERB'), ('in', 'ADP'), ('time', 'NOUN'), ('(', 'PUNCT'), ('Fig.', 'PROPN'), ('5', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('can', 'AUX'), ('be', 'AUX'), ('seen', 'VERB'), ('as', 'ADP'), ('very', 'ADV'), ('deep', 'ADJ'), ('feedforward', 'ADJ'), ('networks', 'NOUN'), ('in', 'ADP'), ('which', 'PRON'), ('all', 'PRON'), ('the', 'DET'), ('layers', 'NOUN'), ('share', 'VERB'), ('the', 'DET'), ('same', 'ADJ'), ('weights', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('RNNs', 'NNP'), (',', ','), ('once', 'RB'), ('unfolded', 'VBN'), ('in', 'IN'), ('time', 'NN'), ('(', '-LRB-'), ('Fig.', 'NNP'), ('5', 'CD'), (')', '-RRB-'), (',', ','), ('can', 'MD'), ('be', 'VB'), ('seen', 'VBN'), ('as', 'IN'), ('very', 'RB'), ('deep', 'JJ'), ('feedforward', 'JJ'), ('networks', 'NNS'), ('in', 'IN'), ('which', 'WDT'), ('all', 'PDT'), ('the', 'DT'), ('layers', 'NNS'), ('share', 'VBP'), ('the', 'DT'), ('same', 'JJ'), ('weights', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('RNNs', 'RNNs'), (',', ','), ('once', 'once'), ('unfolded', 'unfold'), ('in', 'in'), ('time', 'time'), ('(', '('), ('Fig.', 'Fig.'), ('5', '5'), (')', ')'), (',', ','), ('can', 'can'), ('be', 'be'), ('seen', 'see'), ('as', 'as'), ('very', 'very'), ('deep', 'deep'), ('feedforward', 'feedforward'), ('networks', 'network'), ('in', 'in'), ('which', 'which'), ('all', 'all'), ('the', 'the'), ('layers', 'layer'), ('share', 'share'), ('the', 'the'), ('same', 'same'), ('weights', 'weight'), ('.', '.')] 

 Dependency tags are: 
>> [(('RNNs', 'seen'), 'nsubj:pass'), ((',', 'seen'), 'punct'), (('once', 'unfolded'), 'advmod'), (('unfolded', 'RNNs'), 'acl'), (('in', 'time'), 'case'), (('time', 'unfolded'), 'obl'), (('(', 'Fig.'), 'punct'), (('Fig.', 'time'), 'appos'), (('5', 'Fig.'), 'dep'), ((')', 'Fig.'), 'punct'), ((',', 'seen'), 'punct'), (('can', 'seen'), 'aux'), (('be', 'seen'), 'aux:pass'), (('seen', 'root'), 'root'), (('as', 'networks'), 'case'), (('very', 'deep'), 'advmod'), (('deep', 'networks'), 'amod'), (('feedforward', 'networks'), 'amod'), (('networks', 'seen'), 'obl'), (('in', 'which'), 'case'), (('which', 'share'), 'obl'), (('all', 'layers'), 'det:predet'), (('the', 'layers'), 'det'), (('layers', 'share'), 'nsubj'), (('share', 'networks'), 'acl:relcl'), (('the', 'weights'), 'det'), (('same', 'weights'), 'amod'), (('weights', 'share'), 'obj'), (('.', 'seen'), 'punct')]

 Named Entites are: 
>> [('RNNs', 'ORG'), ('Fig. 5)', 'DATE')]

------------------- Sentence 2 -------------------

 Although their main purpose is to learn long-term dependencies,  theoretical and empirical evidence shows that it is difficult to learn  to store information for very long78. 

Tokens are: 
>> ['Although', 'their', 'main', 'purpose', 'is', 'to', 'learn', 'long', '-', 'term', 'dependencies', ',', 'theoretical', 'and', 'empirical', 'evidence', 'shows', 'that', 'it', 'is', 'difficult', 'to', 'learn', 'to', 'store', 'information', 'for', 'very', 'long', '78.'] 

 UPOS tags are: 
>> [('Although', 'SCONJ'), ('their', 'PRON'), ('main', 'ADJ'), ('purpose', 'NOUN'), ('is', 'VERB'), ('to', 'PART'), ('learn', 'VERB'), ('long', 'ADJ'), ('-', 'PUNCT'), ('term', 'NOUN'), ('dependencies', 'NOUN'), (',', 'PUNCT'), ('theoretical', 'ADJ'), ('and', 'CCONJ'), ('empirical', 'ADJ'), ('evidence', 'NOUN'), ('shows', 'VERB'), ('that', 'SCONJ'), ('it', 'PRON'), ('is', 'AUX'), ('difficult', 'ADJ'), ('to', 'PART'), ('learn', 'VERB'), ('to', 'PART'), ('store', 'VERB'), ('information', 'NOUN'), ('for', 'ADP'), ('very', 'ADV'), ('long', 'ADV'), ('78.', 'PUNCT')] 

 XPOS tags are: 
>> [('Although', 'IN'), ('their', 'PRP$'), ('main', 'JJ'), ('purpose', 'NN'), ('is', 'VBZ'), ('to', 'TO'), ('learn', 'VB'), ('long', 'JJ'), ('-', 'HYPH'), ('term', 'NN'), ('dependencies', 'NNS'), (',', ','), ('theoretical', 'JJ'), ('and', 'CC'), ('empirical', 'JJ'), ('evidence', 'NN'), ('shows', 'VBZ'), ('that', 'IN'), ('it', 'PRP'), ('is', 'VBZ'), ('difficult', 'JJ'), ('to', 'TO'), ('learn', 'VB'), ('to', 'TO'), ('store', 'VB'), ('information', 'NN'), ('for', 'IN'), ('very', 'RB'), ('long', 'RB'), ('78.', '.')] 

 Lemmas are: 
>> [('Although', 'although'), ('their', 'they'), ('main', 'main'), ('purpose', 'purpose'), ('is', 'be'), ('to', 'to'), ('learn', 'learn'), ('long', 'long'), ('-', '-'), ('term', 'term'), ('dependencies', 'dependency'), (',', ','), ('theoretical', 'theoretical'), ('and', 'and'), ('empirical', 'empirical'), ('evidence', 'evidence'), ('shows', 'show'), ('that', 'that'), ('it', 'it'), ('is', 'be'), ('difficult', 'difficult'), ('to', 'to'), ('learn', 'learn'), ('to', 'to'), ('store', 'store'), ('information', 'information'), ('for', 'for'), ('very', 'very'), ('long', 'long'), ('78.', '78.')] 

 Dependency tags are: 
>> [(('Although', 'is'), 'mark'), (('their', 'purpose'), 'nmod:poss'), (('main', 'purpose'), 'amod'), (('purpose', 'is'), 'nsubj'), (('is', 'shows'), 'advcl'), (('to', 'learn'), 'mark'), (('learn', 'is'), 'ccomp'), (('long', 'term'), 'amod'), (('-', 'term'), 'punct'), (('term', 'dependencies'), 'compound'), (('dependencies', 'learn'), 'obj'), ((',', 'shows'), 'punct'), (('theoretical', 'evidence'), 'amod'), (('and', 'empirical'), 'cc'), (('empirical', 'theoretical'), 'conj'), (('evidence', 'shows'), 'nsubj'), (('shows', 'root'), 'root'), (('that', 'difficult'), 'mark'), (('it', 'difficult'), 'expl'), (('is', 'difficult'), 'cop'), (('difficult', 'shows'), 'ccomp'), (('to', 'learn'), 'mark'), (('learn', 'difficult'), 'csubj'), (('to', 'store'), 'mark'), (('store', 'learn'), 'xcomp'), (('information', 'store'), 'obj'), (('for', 'long'), 'case'), (('very', 'long'), 'advmod'), (('long', 'store'), 'obl'), (('78.', 'shows'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 218 =================================

To correct for that, one idea is to augment the network with an  explicit memory. The first proposal of this kind is the long short-term  memory (LSTM) networks that use special hidden units, the natural  behaviour of which is to remember inputs for a long time79. A special  unit called the memory cell acts like an accumulator or a gated leaky  neuron: it has a connection to itself at the next time step that has a  weight of one, so it copies its own real-valued state and accumulates  the external signal, but this self-connection is multiplicatively gated  by another unit that learns to decide when to clear the content of the  memory.  


------------------- Sentence 1 -------------------

 To correct for that, one idea is to augment the network with an  explicit memory. 

Tokens are: 
>> ['To', 'correct', 'for', 'that', ',', 'one', 'idea', 'is', 'to', 'augment', 'the', 'network', 'with', 'an', 'explicit', 'memory', '.'] 

 UPOS tags are: 
>> [('To', 'PART'), ('correct', 'ADJ'), ('for', 'ADP'), ('that', 'PRON'), (',', 'PUNCT'), ('one', 'NUM'), ('idea', 'NOUN'), ('is', 'VERB'), ('to', 'PART'), ('augment', 'VERB'), ('the', 'DET'), ('network', 'NOUN'), ('with', 'ADP'), ('an', 'DET'), ('explicit', 'ADJ'), ('memory', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('To', 'TO'), ('correct', 'JJ'), ('for', 'IN'), ('that', 'DT'), (',', ','), ('one', 'CD'), ('idea', 'NN'), ('is', 'VBZ'), ('to', 'TO'), ('augment', 'VB'), ('the', 'DT'), ('network', 'NN'), ('with', 'IN'), ('an', 'DT'), ('explicit', 'JJ'), ('memory', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('To', 'to'), ('correct', 'correct'), ('for', 'for'), ('that', 'that'), (',', ','), ('one', 'one'), ('idea', 'idea'), ('is', 'be'), ('to', 'to'), ('augment', 'augment'), ('the', 'the'), ('network', 'network'), ('with', 'with'), ('an', 'a'), ('explicit', 'explicit'), ('memory', 'memory'), ('.', '.')] 

 Dependency tags are: 
>> [(('To', 'correct'), 'mark'), (('correct', 'is'), 'advcl'), (('for', 'that'), 'case'), (('that', 'correct'), 'obl'), ((',', 'is'), 'punct'), (('one', 'idea'), 'nummod'), (('idea', 'is'), 'nsubj'), (('is', 'root'), 'root'), (('to', 'augment'), 'mark'), (('augment', 'is'), 'ccomp'), (('the', 'network'), 'det'), (('network', 'augment'), 'obj'), (('with', 'memory'), 'case'), (('an', 'memory'), 'det'), (('explicit', 'memory'), 'amod'), (('memory', 'augment'), 'obl'), (('.', 'is'), 'punct')]

 Named Entites are: 
>> [('one', 'CARDINAL')]

------------------- Sentence 2 -------------------

 The first proposal of this kind is the long short-term  memory (LSTM) networks that use special hidden units, the natural  behaviour of which is to remember inputs for a long time79. 

Tokens are: 
>> ['The', 'first', 'proposal', 'of', 'this', 'kind', 'is', 'the', 'long', 'short', '-', 'term', 'memory', '(', 'LSTM', ')', 'networks', 'that', 'use', 'special', 'hidden', 'units', ',', 'the', 'natural', 'behaviour', 'of', 'which', 'is', 'to', 'remember', 'inputs', 'for', 'a', 'long', 'time79', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('first', 'ADJ'), ('proposal', 'NOUN'), ('of', 'ADP'), ('this', 'DET'), ('kind', 'NOUN'), ('is', 'AUX'), ('the', 'DET'), ('long', 'ADJ'), ('short', 'ADJ'), ('-', 'PUNCT'), ('term', 'NOUN'), ('memory', 'NOUN'), ('(', 'PUNCT'), ('LSTM', 'PROPN'), (')', 'PUNCT'), ('networks', 'NOUN'), ('that', 'PRON'), ('use', 'VERB'), ('special', 'ADJ'), ('hidden', 'VERB'), ('units', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('natural', 'ADJ'), ('behaviour', 'NOUN'), ('of', 'ADP'), ('which', 'PRON'), ('is', 'VERB'), ('to', 'PART'), ('remember', 'VERB'), ('inputs', 'NOUN'), ('for', 'ADP'), ('a', 'DET'), ('long', 'ADJ'), ('time79', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('first', 'JJ'), ('proposal', 'NN'), ('of', 'IN'), ('this', 'DT'), ('kind', 'NN'), ('is', 'VBZ'), ('the', 'DT'), ('long', 'JJ'), ('short', 'JJ'), ('-', 'HYPH'), ('term', 'NN'), ('memory', 'NN'), ('(', '-LRB-'), ('LSTM', 'NNP'), (')', '-RRB-'), ('networks', 'NNS'), ('that', 'WDT'), ('use', 'VBP'), ('special', 'JJ'), ('hidden', 'VBN'), ('units', 'NNS'), (',', ','), ('the', 'DT'), ('natural', 'JJ'), ('behaviour', 'NN'), ('of', 'IN'), ('which', 'WDT'), ('is', 'VBZ'), ('to', 'TO'), ('remember', 'VB'), ('inputs', 'NNS'), ('for', 'IN'), ('a', 'DT'), ('long', 'JJ'), ('time79', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('first', 'first'), ('proposal', 'proposal'), ('of', 'of'), ('this', 'this'), ('kind', 'kind'), ('is', 'be'), ('the', 'the'), ('long', 'long'), ('short', 'short'), ('-', '-'), ('term', 'term'), ('memory', 'memory'), ('(', '('), ('LSTM', 'LSTM'), (')', ')'), ('networks', 'network'), ('that', 'that'), ('use', 'use'), ('special', 'special'), ('hidden', 'hide'), ('units', 'unit'), (',', ','), ('the', 'the'), ('natural', 'natural'), ('behaviour', 'behaviour'), ('of', 'of'), ('which', 'which'), ('is', 'be'), ('to', 'to'), ('remember', 'remember'), ('inputs', 'input'), ('for', 'for'), ('a', 'a'), ('long', 'long'), ('time79', 'time79'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'proposal'), 'det'), (('first', 'proposal'), 'amod'), (('proposal', 'memory'), 'nsubj'), (('of', 'kind'), 'case'), (('this', 'kind'), 'det'), (('kind', 'proposal'), 'nmod'), (('is', 'memory'), 'cop'), (('the', 'memory'), 'det'), (('long', 'memory'), 'amod'), (('short', 'term'), 'amod'), (('-', 'term'), 'punct'), (('term', 'memory'), 'compound'), (('memory', 'root'), 'root'), (('(', 'LSTM'), 'punct'), (('LSTM', 'memory'), 'appos'), ((')', 'LSTM'), 'punct'), (('networks', 'memory'), 'appos'), (('that', 'use'), 'nsubj'), (('use', 'networks'), 'acl:relcl'), (('special', 'units'), 'amod'), (('hidden', 'units'), 'amod'), (('units', 'use'), 'obj'), ((',', 'is'), 'punct'), (('the', 'behaviour'), 'det'), (('natural', 'behaviour'), 'amod'), (('behaviour', 'is'), 'nsubj'), (('of', 'which'), 'case'), (('which', 'behaviour'), 'nmod'), (('is', 'memory'), 'acl:relcl'), (('to', 'remember'), 'mark'), (('remember', 'is'), 'ccomp'), (('inputs', 'remember'), 'obj'), (('for', 'time79'), 'case'), (('a', 'time79'), 'det'), (('long', 'time79'), 'amod'), (('time79', 'inputs'), 'nmod'), (('.', 'memory'), 'punct')]

 Named Entites are: 
>> [('first', 'ORDINAL')]

------------------- Sentence 3 -------------------

 A special  unit called the memory cell acts like an accumulator or a gated leaky  neuron: it has a connection to itself at the next time step that has a  weight of one, so it copies its own real-valued state and accumulates  the external signal, but this self-connection is multiplicatively gated  by another unit that learns to decide when to clear the content of the  memory. 

Tokens are: 
>> ['A', 'special', 'unit', 'called', 'the', 'memory', 'cell', 'acts', 'like', 'an', 'accumulator', 'or', 'a', 'gated', 'leaky', 'neuron', ':', 'it', 'has', 'a', 'connection', 'to', 'itself', 'at', 'the', 'next', 'time', 'step', 'that', 'has', 'a', 'weight', 'of', 'one', ',', 'so', 'it', 'copies', 'its', 'own', 'real', '-', 'valued', 'state', 'and', 'accumulates', 'the', 'external', 'signal', ',', 'but', 'this', 'self', '-', 'connection', 'is', 'multiplicatively', 'gated', 'by', 'another', 'unit', 'that', 'learns', 'to', 'decide', 'when', 'to', 'clear', 'the', 'content', 'of', 'the', 'memory', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('special', 'ADJ'), ('unit', 'NOUN'), ('called', 'VERB'), ('the', 'DET'), ('memory', 'NOUN'), ('cell', 'NOUN'), ('acts', 'VERB'), ('like', 'ADP'), ('an', 'DET'), ('accumulator', 'NOUN'), ('or', 'CCONJ'), ('a', 'DET'), ('gated', 'VERB'), ('leaky', 'ADJ'), ('neuron', 'NOUN'), (':', 'PUNCT'), ('it', 'PRON'), ('has', 'VERB'), ('a', 'DET'), ('connection', 'NOUN'), ('to', 'ADP'), ('itself', 'PRON'), ('at', 'ADP'), ('the', 'DET'), ('next', 'ADJ'), ('time', 'NOUN'), ('step', 'NOUN'), ('that', 'PRON'), ('has', 'VERB'), ('a', 'DET'), ('weight', 'NOUN'), ('of', 'ADP'), ('one', 'NUM'), (',', 'PUNCT'), ('so', 'ADV'), ('it', 'PRON'), ('copies', 'VERB'), ('its', 'PRON'), ('own', 'ADJ'), ('real', 'ADJ'), ('-', 'PUNCT'), ('valued', 'VERB'), ('state', 'NOUN'), ('and', 'CCONJ'), ('accumulates', 'VERB'), ('the', 'DET'), ('external', 'ADJ'), ('signal', 'NOUN'), (',', 'PUNCT'), ('but', 'CCONJ'), ('this', 'DET'), ('self', 'NOUN'), ('-', 'PUNCT'), ('connection', 'NOUN'), ('is', 'AUX'), ('multiplicatively', 'ADV'), ('gated', 'VERB'), ('by', 'ADP'), ('another', 'DET'), ('unit', 'NOUN'), ('that', 'PRON'), ('learns', 'VERB'), ('to', 'PART'), ('decide', 'VERB'), ('when', 'SCONJ'), ('to', 'PART'), ('clear', 'VERB'), ('the', 'DET'), ('content', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('memory', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('special', 'JJ'), ('unit', 'NN'), ('called', 'VBN'), ('the', 'DT'), ('memory', 'NN'), ('cell', 'NN'), ('acts', 'VBZ'), ('like', 'IN'), ('an', 'DT'), ('accumulator', 'NN'), ('or', 'CC'), ('a', 'DT'), ('gated', 'VBN'), ('leaky', 'JJ'), ('neuron', 'NN'), (':', ':'), ('it', 'PRP'), ('has', 'VBZ'), ('a', 'DT'), ('connection', 'NN'), ('to', 'IN'), ('itself', 'PRP'), ('at', 'IN'), ('the', 'DT'), ('next', 'JJ'), ('time', 'NN'), ('step', 'NN'), ('that', 'WDT'), ('has', 'VBZ'), ('a', 'DT'), ('weight', 'NN'), ('of', 'IN'), ('one', 'CD'), (',', ','), ('so', 'RB'), ('it', 'PRP'), ('copies', 'VBZ'), ('its', 'PRP$'), ('own', 'JJ'), ('real', 'JJ'), ('-', 'HYPH'), ('valued', 'VBN'), ('state', 'NN'), ('and', 'CC'), ('accumulates', 'VBZ'), ('the', 'DT'), ('external', 'JJ'), ('signal', 'NN'), (',', ','), ('but', 'CC'), ('this', 'DT'), ('self', 'NN'), ('-', 'HYPH'), ('connection', 'NN'), ('is', 'VBZ'), ('multiplicatively', 'RB'), ('gated', 'VBN'), ('by', 'IN'), ('another', 'DT'), ('unit', 'NN'), ('that', 'WDT'), ('learns', 'VBZ'), ('to', 'TO'), ('decide', 'VB'), ('when', 'WRB'), ('to', 'TO'), ('clear', 'VB'), ('the', 'DT'), ('content', 'NN'), ('of', 'IN'), ('the', 'DT'), ('memory', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('special', 'special'), ('unit', 'unit'), ('called', 'call'), ('the', 'the'), ('memory', 'memory'), ('cell', 'cell'), ('acts', 'act'), ('like', 'like'), ('an', 'a'), ('accumulator', 'accumulator'), ('or', 'or'), ('a', 'a'), ('gated', 'gated'), ('leaky', 'leaky'), ('neuron', 'neuron'), (':', ':'), ('it', 'it'), ('has', 'have'), ('a', 'a'), ('connection', 'connection'), ('to', 'to'), ('itself', 'itself'), ('at', 'at'), ('the', 'the'), ('next', 'next'), ('time', 'time'), ('step', 'step'), ('that', 'that'), ('has', 'have'), ('a', 'a'), ('weight', 'weight'), ('of', 'of'), ('one', 'one'), (',', ','), ('so', 'so'), ('it', 'it'), ('copies', 'copy'), ('its', 'its'), ('own', 'own'), ('real', 'real'), ('-', '-'), ('valued', 'value'), ('state', 'state'), ('and', 'and'), ('accumulates', 'accumulate'), ('the', 'the'), ('external', 'external'), ('signal', 'signal'), (',', ','), ('but', 'but'), ('this', 'this'), ('self', 'self'), ('-', '-'), ('connection', 'connection'), ('is', 'be'), ('multiplicatively', 'multiplicatively'), ('gated', 'gated'), ('by', 'by'), ('another', 'another'), ('unit', 'unit'), ('that', 'that'), ('learns', 'learn'), ('to', 'to'), ('decide', 'decide'), ('when', 'when'), ('to', 'to'), ('clear', 'clear'), ('the', 'the'), ('content', 'content'), ('of', 'of'), ('the', 'the'), ('memory', 'memory'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'unit'), 'det'), (('special', 'unit'), 'amod'), (('unit', 'acts'), 'nsubj'), (('called', 'unit'), 'acl'), (('the', 'cell'), 'det'), (('memory', 'cell'), 'compound'), (('cell', 'called'), 'xcomp'), (('acts', 'root'), 'root'), (('like', 'accumulator'), 'case'), (('an', 'accumulator'), 'det'), (('accumulator', 'acts'), 'obl'), (('or', 'neuron'), 'cc'), (('a', 'neuron'), 'det'), (('gated', 'neuron'), 'amod'), (('leaky', 'neuron'), 'amod'), (('neuron', 'accumulator'), 'conj'), ((':', 'acts'), 'punct'), (('it', 'has'), 'nsubj'), (('has', 'acts'), 'parataxis'), (('a', 'connection'), 'det'), (('connection', 'has'), 'obj'), (('to', 'itself'), 'case'), (('itself', 'connection'), 'nmod'), (('at', 'step'), 'case'), (('the', 'step'), 'det'), (('next', 'step'), 'amod'), (('time', 'step'), 'compound'), (('step', 'connection'), 'nmod'), (('that', 'has'), 'nsubj'), (('has', 'step'), 'acl:relcl'), (('a', 'weight'), 'det'), (('weight', 'has'), 'obj'), (('of', 'one'), 'case'), (('one', 'weight'), 'nmod'), ((',', 'copies'), 'punct'), (('so', 'copies'), 'advmod'), (('it', 'copies'), 'nsubj'), (('copies', 'acts'), 'parataxis'), (('its', 'state'), 'nmod:poss'), (('own', 'state'), 'amod'), (('real', 'valued'), 'compound'), (('-', 'valued'), 'punct'), (('valued', 'state'), 'amod'), (('state', 'copies'), 'obj'), (('and', 'accumulates'), 'cc'), (('accumulates', 'copies'), 'conj'), (('the', 'signal'), 'det'), (('external', 'signal'), 'amod'), (('signal', 'accumulates'), 'obj'), ((',', 'gated'), 'punct'), (('but', 'gated'), 'cc'), (('this', 'connection'), 'det'), (('self', 'connection'), 'compound'), (('-', 'connection'), 'punct'), (('connection', 'gated'), 'nsubj:pass'), (('is', 'gated'), 'aux:pass'), (('multiplicatively', 'gated'), 'advmod'), (('gated', 'acts'), 'conj'), (('by', 'unit'), 'case'), (('another', 'unit'), 'det'), (('unit', 'gated'), 'obl'), (('that', 'learns'), 'nsubj'), (('learns', 'unit'), 'acl:relcl'), (('to', 'decide'), 'mark'), (('decide', 'learns'), 'xcomp'), (('when', 'clear'), 'mark'), (('to', 'clear'), 'mark'), (('clear', 'decide'), 'advcl'), (('the', 'content'), 'det'), (('content', 'clear'), 'obj'), (('of', 'memory'), 'case'), (('the', 'memory'), 'det'), (('memory', 'content'), 'nmod'), (('.', 'acts'), 'punct')]

 Named Entites are: 
>> [('one', 'CARDINAL')]

================================ Paragraph 219 =================================

LSTM networks have subsequently proved to be more effective  than conventional RNNs, especially when they have several layers for  each time step87, enabling an entire speech recognition system that  goes all the way from acoustics to the sequence of characters in the  transcription. LSTM networks or related forms of gated units are also  currently used for the encoder and decoder networks that perform  so well at machine translation17,72,76.  


------------------- Sentence 1 -------------------

 LSTM networks have subsequently proved to be more effective  than conventional RNNs, especially when they have several layers for  each time step87, enabling an entire speech recognition system that  goes all the way from acoustics to the sequence of characters in the  transcription. 

Tokens are: 
>> ['LSTM', 'networks', 'have', 'subsequently', 'proved', 'to', 'be', 'more', 'effective', 'than', 'conventional', 'RNNs', ',', 'especially', 'when', 'they', 'have', 'several', 'layers', 'for', 'each', 'time', 'step87', ',', 'enabling', 'an', 'entire', 'speech', 'recognition', 'system', 'that', 'goes', 'all', 'the', 'way', 'from', 'acoustics', 'to', 'the', 'sequence', 'of', 'characters', 'in', 'the', 'transcription', '.'] 

 UPOS tags are: 
>> [('LSTM', 'PROPN'), ('networks', 'NOUN'), ('have', 'AUX'), ('subsequently', 'ADV'), ('proved', 'VERB'), ('to', 'PART'), ('be', 'AUX'), ('more', 'ADV'), ('effective', 'ADJ'), ('than', 'ADP'), ('conventional', 'ADJ'), ('RNNs', 'NOUN'), (',', 'PUNCT'), ('especially', 'ADV'), ('when', 'SCONJ'), ('they', 'PRON'), ('have', 'VERB'), ('several', 'ADJ'), ('layers', 'NOUN'), ('for', 'ADP'), ('each', 'DET'), ('time', 'NOUN'), ('step87', 'NOUN'), (',', 'PUNCT'), ('enabling', 'VERB'), ('an', 'DET'), ('entire', 'ADJ'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('system', 'NOUN'), ('that', 'PRON'), ('goes', 'VERB'), ('all', 'PRON'), ('the', 'DET'), ('way', 'NOUN'), ('from', 'ADP'), ('acoustics', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('sequence', 'NOUN'), ('of', 'ADP'), ('characters', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('transcription', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('LSTM', 'NNP'), ('networks', 'NNS'), ('have', 'VBP'), ('subsequently', 'RB'), ('proved', 'VBN'), ('to', 'TO'), ('be', 'VB'), ('more', 'RBR'), ('effective', 'JJ'), ('than', 'IN'), ('conventional', 'JJ'), ('RNNs', 'NNS'), (',', ','), ('especially', 'RB'), ('when', 'WRB'), ('they', 'PRP'), ('have', 'VBP'), ('several', 'JJ'), ('layers', 'NNS'), ('for', 'IN'), ('each', 'DT'), ('time', 'NN'), ('step87', 'NN'), (',', ','), ('enabling', 'VBG'), ('an', 'DT'), ('entire', 'JJ'), ('speech', 'NN'), ('recognition', 'NN'), ('system', 'NN'), ('that', 'WDT'), ('goes', 'VBZ'), ('all', 'PDT'), ('the', 'DT'), ('way', 'NN'), ('from', 'IN'), ('acoustics', 'NNS'), ('to', 'IN'), ('the', 'DT'), ('sequence', 'NN'), ('of', 'IN'), ('characters', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('transcription', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('LSTM', 'LSTM'), ('networks', 'network'), ('have', 'have'), ('subsequently', 'subsequently'), ('proved', 'prove'), ('to', 'to'), ('be', 'be'), ('more', 'more'), ('effective', 'effective'), ('than', 'than'), ('conventional', 'conventional'), ('RNNs', 'rnn'), (',', ','), ('especially', 'especially'), ('when', 'when'), ('they', 'they'), ('have', 'have'), ('several', 'several'), ('layers', 'layer'), ('for', 'for'), ('each', 'each'), ('time', 'time'), ('step87', 'step87'), (',', ','), ('enabling', 'enable'), ('an', 'a'), ('entire', 'entire'), ('speech', 'speech'), ('recognition', 'recognition'), ('system', 'system'), ('that', 'that'), ('goes', 'go'), ('all', 'all'), ('the', 'the'), ('way', 'way'), ('from', 'from'), ('acoustics', 'acoustic'), ('to', 'to'), ('the', 'the'), ('sequence', 'sequence'), ('of', 'of'), ('characters', 'character'), ('in', 'in'), ('the', 'the'), ('transcription', 'transcription'), ('.', '.')] 

 Dependency tags are: 
>> [(('LSTM', 'networks'), 'compound'), (('networks', 'proved'), 'nsubj'), (('have', 'proved'), 'aux'), (('subsequently', 'proved'), 'advmod'), (('proved', 'root'), 'root'), (('to', 'effective'), 'mark'), (('be', 'effective'), 'cop'), (('more', 'effective'), 'advmod'), (('effective', 'proved'), 'xcomp'), (('than', 'RNNs'), 'case'), (('conventional', 'RNNs'), 'amod'), (('RNNs', 'effective'), 'obl'), ((',', 'have'), 'punct'), (('especially', 'have'), 'advmod'), (('when', 'have'), 'mark'), (('they', 'have'), 'nsubj'), (('have', 'effective'), 'advcl'), (('several', 'layers'), 'amod'), (('layers', 'have'), 'obj'), (('for', 'step87'), 'case'), (('each', 'step87'), 'det'), (('time', 'step87'), 'compound'), (('step87', 'layers'), 'nmod'), ((',', 'enabling'), 'punct'), (('enabling', 'have'), 'advcl'), (('an', 'system'), 'det'), (('entire', 'system'), 'amod'), (('speech', 'system'), 'compound'), (('recognition', 'system'), 'compound'), (('system', 'enabling'), 'obj'), (('that', 'goes'), 'nsubj'), (('goes', 'system'), 'acl:relcl'), (('all', 'way'), 'det:predet'), (('the', 'way'), 'det'), (('way', 'goes'), 'obj'), (('from', 'acoustics'), 'case'), (('acoustics', 'way'), 'nmod'), (('to', 'sequence'), 'case'), (('the', 'sequence'), 'det'), (('sequence', 'goes'), 'obl'), (('of', 'characters'), 'case'), (('characters', 'sequence'), 'nmod'), (('in', 'transcription'), 'case'), (('the', 'transcription'), 'det'), (('transcription', 'characters'), 'nmod'), (('.', 'proved'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 LSTM networks or related forms of gated units are also  currently used for the encoder and decoder networks that perform  so well at machine translation17,72,76. 

Tokens are: 
>> ['LSTM', 'networks', 'or', 'related', 'forms', 'of', 'gated', 'units', 'are', 'also', 'currently', 'used', 'for', 'the', 'encoder', 'and', 'decoder', 'networks', 'that', 'perform', 'so', 'well', 'at', 'machine', 'translation', '17,72,76', '.'] 

 UPOS tags are: 
>> [('LSTM', 'PROPN'), ('networks', 'NOUN'), ('or', 'CCONJ'), ('related', 'ADJ'), ('forms', 'NOUN'), ('of', 'ADP'), ('gated', 'VERB'), ('units', 'NOUN'), ('are', 'AUX'), ('also', 'ADV'), ('currently', 'ADV'), ('used', 'VERB'), ('for', 'ADP'), ('the', 'DET'), ('encoder', 'NOUN'), ('and', 'CCONJ'), ('decoder', 'NOUN'), ('networks', 'NOUN'), ('that', 'PRON'), ('perform', 'VERB'), ('so', 'ADV'), ('well', 'ADV'), ('at', 'ADP'), ('machine', 'NOUN'), ('translation', 'NOUN'), ('17,72,76', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('LSTM', 'NNP'), ('networks', 'NNS'), ('or', 'CC'), ('related', 'JJ'), ('forms', 'NNS'), ('of', 'IN'), ('gated', 'VBN'), ('units', 'NNS'), ('are', 'VBP'), ('also', 'RB'), ('currently', 'RB'), ('used', 'VBN'), ('for', 'IN'), ('the', 'DT'), ('encoder', 'NN'), ('and', 'CC'), ('decoder', 'NN'), ('networks', 'NNS'), ('that', 'WDT'), ('perform', 'VBP'), ('so', 'RB'), ('well', 'RB'), ('at', 'IN'), ('machine', 'NN'), ('translation', 'NN'), ('17,72,76', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('LSTM', 'LSTM'), ('networks', 'network'), ('or', 'or'), ('related', 'related'), ('forms', 'form'), ('of', 'of'), ('gated', 'gated'), ('units', 'unit'), ('are', 'be'), ('also', 'also'), ('currently', 'currently'), ('used', 'use'), ('for', 'for'), ('the', 'the'), ('encoder', 'encoder'), ('and', 'and'), ('decoder', 'decoder'), ('networks', 'network'), ('that', 'that'), ('perform', 'perform'), ('so', 'so'), ('well', 'well'), ('at', 'at'), ('machine', 'machine'), ('translation', 'translation'), ('17,72,76', '177277'), ('.', '.')] 

 Dependency tags are: 
>> [(('LSTM', 'networks'), 'compound'), (('networks', 'used'), 'nsubj:pass'), (('or', 'forms'), 'cc'), (('related', 'forms'), 'amod'), (('forms', 'networks'), 'conj'), (('of', 'units'), 'case'), (('gated', 'units'), 'amod'), (('units', 'forms'), 'nmod'), (('are', 'used'), 'aux:pass'), (('also', 'used'), 'advmod'), (('currently', 'used'), 'advmod'), (('used', 'root'), 'root'), (('for', 'encoder'), 'case'), (('the', 'encoder'), 'det'), (('encoder', 'used'), 'obl'), (('and', 'networks'), 'cc'), (('decoder', 'networks'), 'compound'), (('networks', 'encoder'), 'conj'), (('that', 'perform'), 'nsubj'), (('perform', 'encoder'), 'acl:relcl'), (('so', 'well'), 'advmod'), (('well', 'perform'), 'advmod'), (('at', 'translation'), 'case'), (('machine', 'translation'), 'compound'), (('translation', 'perform'), 'obl'), (('17,72,76', 'translation'), 'nummod'), (('.', 'used'), 'punct')]

 Named Entites are: 
>> [('17,72,76', 'CARDINAL')]

================================ Paragraph 220 =================================

Over the past year, several authors have made different proposals to  augment RNNs with a memory module. Proposals include the Neural  Turing Machine in which the network is augmented by a ‘tape-like’  memory that the RNN can choose to read from or write to88, and  memory networks, in which a regular network is augmented by a  kind of associative memory89. Memory networks have yielded excel- lent performance on standard question-answering benchmarks. The  memory is used to remember the story about which the network is  later asked to answer questions.  


------------------- Sentence 1 -------------------

 Over the past year, several authors have made different proposals to  augment RNNs with a memory module. 

Tokens are: 
>> ['Over', 'the', 'past', 'year', ',', 'several', 'authors', 'have', 'made', 'different', 'proposals', 'to', 'augment', 'RNNs', 'with', 'a', 'memory', 'module', '.'] 

 UPOS tags are: 
>> [('Over', 'ADP'), ('the', 'DET'), ('past', 'ADJ'), ('year', 'NOUN'), (',', 'PUNCT'), ('several', 'ADJ'), ('authors', 'NOUN'), ('have', 'AUX'), ('made', 'VERB'), ('different', 'ADJ'), ('proposals', 'NOUN'), ('to', 'PART'), ('augment', 'VERB'), ('RNNs', 'NOUN'), ('with', 'ADP'), ('a', 'DET'), ('memory', 'NOUN'), ('module', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Over', 'IN'), ('the', 'DT'), ('past', 'JJ'), ('year', 'NN'), (',', ','), ('several', 'JJ'), ('authors', 'NNS'), ('have', 'VBP'), ('made', 'VBN'), ('different', 'JJ'), ('proposals', 'NNS'), ('to', 'TO'), ('augment', 'VB'), ('RNNs', 'NNS'), ('with', 'IN'), ('a', 'DT'), ('memory', 'NN'), ('module', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Over', 'over'), ('the', 'the'), ('past', 'past'), ('year', 'year'), (',', ','), ('several', 'several'), ('authors', 'author'), ('have', 'have'), ('made', 'make'), ('different', 'different'), ('proposals', 'proposal'), ('to', 'to'), ('augment', 'augment'), ('RNNs', 'rnn'), ('with', 'with'), ('a', 'a'), ('memory', 'memory'), ('module', 'module'), ('.', '.')] 

 Dependency tags are: 
>> [(('Over', 'year'), 'case'), (('the', 'year'), 'det'), (('past', 'year'), 'amod'), (('year', 'made'), 'obl'), ((',', 'made'), 'punct'), (('several', 'authors'), 'amod'), (('authors', 'made'), 'nsubj'), (('have', 'made'), 'aux'), (('made', 'root'), 'root'), (('different', 'proposals'), 'amod'), (('proposals', 'made'), 'obj'), (('to', 'augment'), 'mark'), (('augment', 'proposals'), 'acl'), (('RNNs', 'augment'), 'obj'), (('with', 'module'), 'case'), (('a', 'module'), 'det'), (('memory', 'module'), 'compound'), (('module', 'augment'), 'obl'), (('.', 'made'), 'punct')]

 Named Entites are: 
>> [('the past year', 'DATE'), ('RNNs', 'ORG')]

------------------- Sentence 2 -------------------

 Proposals include the Neural  Turing Machine in which the network is augmented by a ‘tape-like’  memory that the RNN can choose to read from or write to88, and  memory networks, in which a regular network is augmented by a  kind of associative memory 

Tokens are: 
>> ['Proposals', 'include', 'the', 'Neural', 'Turing', 'Machine', 'in', 'which', 'the', 'network', 'is', 'augmented', 'by', 'a', '‘', 'tape-', 'like', '’', 'memory', 'that', 'the', 'RNN', 'can', 'choose', 'to', 'read', 'from', 'or', 'write', 'to', '88', ',', 'and', 'memory', 'networks', ',', 'in', 'which', 'a', 'regular', 'network', 'is', 'augmented', 'by', 'a', 'kind', 'of', 'associative', 'memory'] 

 UPOS tags are: 
>> [('Proposals', 'NOUN'), ('include', 'VERB'), ('the', 'DET'), ('Neural', 'ADJ'), ('Turing', 'PROPN'), ('Machine', 'PROPN'), ('in', 'ADP'), ('which', 'PRON'), ('the', 'DET'), ('network', 'NOUN'), ('is', 'AUX'), ('augmented', 'VERB'), ('by', 'ADP'), ('a', 'DET'), ('‘', 'PUNCT'), ('tape-', 'NOUN'), ('like', 'ADP'), ('’', 'PUNCT'), ('memory', 'NOUN'), ('that', 'PRON'), ('the', 'DET'), ('RNN', 'PROPN'), ('can', 'AUX'), ('choose', 'VERB'), ('to', 'PART'), ('read', 'VERB'), ('from', 'ADP'), ('or', 'CCONJ'), ('write', 'VERB'), ('to', 'ADP'), ('88', 'NUM'), (',', 'PUNCT'), ('and', 'CCONJ'), ('memory', 'NOUN'), ('networks', 'NOUN'), (',', 'PUNCT'), ('in', 'ADP'), ('which', 'PRON'), ('a', 'DET'), ('regular', 'ADJ'), ('network', 'NOUN'), ('is', 'AUX'), ('augmented', 'VERB'), ('by', 'ADP'), ('a', 'DET'), ('kind', 'NOUN'), ('of', 'ADP'), ('associative', 'ADJ'), ('memory', 'NOUN')] 

 XPOS tags are: 
>> [('Proposals', 'NNS'), ('include', 'VBP'), ('the', 'DT'), ('Neural', 'NNP'), ('Turing', 'NNP'), ('Machine', 'NNP'), ('in', 'IN'), ('which', 'WDT'), ('the', 'DT'), ('network', 'NN'), ('is', 'VBZ'), ('augmented', 'VBN'), ('by', 'IN'), ('a', 'DT'), ('‘', '``'), ('tape-', 'NN'), ('like', 'IN'), ('’', "''"), ('memory', 'NN'), ('that', 'WDT'), ('the', 'DT'), ('RNN', 'NNP'), ('can', 'MD'), ('choose', 'VB'), ('to', 'TO'), ('read', 'VB'), ('from', 'IN'), ('or', 'CC'), ('write', 'VB'), ('to', 'IN'), ('88', 'CD'), (',', ','), ('and', 'CC'), ('memory', 'NN'), ('networks', 'NNS'), (',', ','), ('in', 'IN'), ('which', 'WDT'), ('a', 'DT'), ('regular', 'JJ'), ('network', 'NN'), ('is', 'VBZ'), ('augmented', 'VBN'), ('by', 'IN'), ('a', 'DT'), ('kind', 'NN'), ('of', 'IN'), ('associative', 'JJ'), ('memory', 'NN')] 

 Lemmas are: 
>> [('Proposals', 'proposal'), ('include', 'include'), ('the', 'the'), ('Neural', 'neural'), ('Turing', 'Turing'), ('Machine', 'Machine'), ('in', 'in'), ('which', 'which'), ('the', 'the'), ('network', 'network'), ('is', 'be'), ('augmented', 'augment'), ('by', 'by'), ('a', 'a'), ('‘', "'"), ('tape-', 'tape-'), ('like', 'like'), ('’', "'"), ('memory', 'memory'), ('that', 'that'), ('the', 'the'), ('RNN', 'RNN'), ('can', 'can'), ('choose', 'choose'), ('to', 'to'), ('read', 'read'), ('from', 'from'), ('or', 'or'), ('write', 'write'), ('to', 'to'), ('88', '88'), (',', ','), ('and', 'and'), ('memory', 'memory'), ('networks', 'network'), (',', ','), ('in', 'in'), ('which', 'which'), ('a', 'a'), ('regular', 'regular'), ('network', 'network'), ('is', 'be'), ('augmented', 'augment'), ('by', 'by'), ('a', 'a'), ('kind', 'kind'), ('of', 'of'), ('associative', 'associative'), ('memory', 'memory')] 

 Dependency tags are: 
>> [(('Proposals', 'include'), 'nsubj'), (('include', 'root'), 'root'), (('the', 'Machine'), 'det'), (('Neural', 'Machine'), 'amod'), (('Turing', 'Machine'), 'compound'), (('Machine', 'include'), 'obj'), (('in', 'which'), 'case'), (('which', 'augmented'), 'obl'), (('the', 'network'), 'det'), (('network', 'augmented'), 'nsubj:pass'), (('is', 'augmented'), 'aux:pass'), (('augmented', 'Machine'), 'acl:relcl'), (('by', 'memory'), 'case'), (('a', 'memory'), 'det'), (('‘', 'memory'), 'punct'), (('tape-', 'memory'), 'compound'), (('like', 'memory'), 'case'), (('’', 'memory'), 'punct'), (('memory', 'augmented'), 'obl'), (('that', 'choose'), 'obj'), (('the', 'RNN'), 'det'), (('RNN', 'choose'), 'nsubj'), (('can', 'choose'), 'aux'), (('choose', 'memory'), 'acl:relcl'), (('to', 'read'), 'mark'), (('read', 'choose'), 'xcomp'), (('from', 'read'), 'obl'), (('or', 'write'), 'cc'), (('write', 'read'), 'conj'), (('to', '88'), 'case'), (('88', 'write'), 'obl'), ((',', 'networks'), 'punct'), (('and', 'networks'), 'cc'), (('memory', 'networks'), 'compound'), (('networks', 'memory'), 'conj'), ((',', 'augmented'), 'punct'), (('in', 'which'), 'case'), (('which', 'augmented'), 'obl'), (('a', 'network'), 'det'), (('regular', 'network'), 'amod'), (('network', 'augmented'), 'nsubj:pass'), (('is', 'augmented'), 'aux:pass'), (('augmented', 'networks'), 'acl:relcl'), (('by', 'kind'), 'case'), (('a', 'kind'), 'det'), (('kind', 'augmented'), 'obl'), (('of', 'memory'), 'case'), (('associative', 'memory'), 'amod'), (('memory', 'kind'), 'nmod')]

 Named Entites are: 
>> [('the Neural  Turing Machine', 'PRODUCT'), ('RNN', 'ORG'), ('88', 'CARDINAL')]

------------------- Sentence 3 -------------------

 89. 

Tokens are: 
>> ['89', '.'] 

 UPOS tags are: 
>> [('89', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('89', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('89', '89'), ('.', '.')] 

 Dependency tags are: 
>> [(('89', 'root'), 'root'), (('.', '89'), 'punct')]

 Named Entites are: 
>> [('89', 'CARDINAL')]

------------------- Sentence 4 -------------------

 Memory networks have yielded excel- lent performance on standard question-answering benchmarks. 

Tokens are: 
>> ['Memory', 'networks', 'have', 'yielded', 'excel-', 'lent', 'performance', 'on', 'standard', 'question', '-', 'answering', 'benchmarks', '.'] 

 UPOS tags are: 
>> [('Memory', 'NOUN'), ('networks', 'NOUN'), ('have', 'AUX'), ('yielded', 'VERB'), ('excel-', 'ADJ'), ('lent', 'VERB'), ('performance', 'NOUN'), ('on', 'ADP'), ('standard', 'ADJ'), ('question', 'NOUN'), ('-', 'PUNCT'), ('answering', 'NOUN'), ('benchmarks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Memory', 'NN'), ('networks', 'NNS'), ('have', 'VBP'), ('yielded', 'VBN'), ('excel-', 'JJ'), ('lent', 'VBN'), ('performance', 'NN'), ('on', 'IN'), ('standard', 'JJ'), ('question', 'NN'), ('-', 'HYPH'), ('answering', 'NN'), ('benchmarks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Memory', 'memory'), ('networks', 'network'), ('have', 'have'), ('yielded', 'yield'), ('excel-', 'excel-'), ('lent', 'leave'), ('performance', 'performance'), ('on', 'on'), ('standard', 'standard'), ('question', 'question'), ('-', '-'), ('answering', 'answer'), ('benchmarks', 'benchmark'), ('.', '.')] 

 Dependency tags are: 
>> [(('Memory', 'networks'), 'compound'), (('networks', 'yielded'), 'nsubj'), (('have', 'yielded'), 'aux'), (('yielded', 'root'), 'root'), (('excel-', 'performance'), 'amod'), (('lent', 'performance'), 'amod'), (('performance', 'yielded'), 'obj'), (('on', 'benchmarks'), 'case'), (('standard', 'benchmarks'), 'amod'), (('question', 'answering'), 'compound'), (('-', 'answering'), 'punct'), (('answering', 'benchmarks'), 'amod'), (('benchmarks', 'performance'), 'nmod'), (('.', 'yielded'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 5 -------------------

 The  memory is used to remember the story about which the network is  later asked to answer questions. 

Tokens are: 
>> ['The', 'memory', 'is', 'used', 'to', 'remember', 'the', 'story', 'about', 'which', 'the', 'network', 'is', 'later', 'asked', 'to', 'answer', 'questions', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('memory', 'NOUN'), ('is', 'AUX'), ('used', 'VERB'), ('to', 'PART'), ('remember', 'VERB'), ('the', 'DET'), ('story', 'NOUN'), ('about', 'ADP'), ('which', 'PRON'), ('the', 'DET'), ('network', 'NOUN'), ('is', 'AUX'), ('later', 'ADV'), ('asked', 'VERB'), ('to', 'PART'), ('answer', 'VERB'), ('questions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('memory', 'NN'), ('is', 'VBZ'), ('used', 'VBN'), ('to', 'TO'), ('remember', 'VB'), ('the', 'DT'), ('story', 'NN'), ('about', 'IN'), ('which', 'WDT'), ('the', 'DT'), ('network', 'NN'), ('is', 'VBZ'), ('later', 'RBR'), ('asked', 'VBN'), ('to', 'TO'), ('answer', 'VB'), ('questions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('memory', 'memory'), ('is', 'be'), ('used', 'use'), ('to', 'to'), ('remember', 'remember'), ('the', 'the'), ('story', 'story'), ('about', 'about'), ('which', 'which'), ('the', 'the'), ('network', 'network'), ('is', 'be'), ('later', 'late'), ('asked', 'ask'), ('to', 'to'), ('answer', 'answer'), ('questions', 'question'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'memory'), 'det'), (('memory', 'used'), 'nsubj:pass'), (('is', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('to', 'remember'), 'mark'), (('remember', 'used'), 'xcomp'), (('the', 'story'), 'det'), (('story', 'remember'), 'obj'), (('about', 'which'), 'case'), (('which', 'asked'), 'obl'), (('the', 'network'), 'det'), (('network', 'asked'), 'nsubj:pass'), (('is', 'asked'), 'aux:pass'), (('later', 'asked'), 'advmod'), (('asked', 'story'), 'acl:relcl'), (('to', 'answer'), 'mark'), (('answer', 'asked'), 'xcomp'), (('questions', 'answer'), 'obj'), (('.', 'used'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 221 =================================

Beyond simple memorization, neural Turing machines and mem- ory networks are being used for tasks that would normally require  reasoning and symbol manipulation. Neural Turing machines can  be taught ‘algorithms’. Among other things, they can learn to output  


------------------- Sentence 1 -------------------

 Beyond simple memorization, neural Turing machines and mem- ory networks are being used for tasks that would normally require  reasoning and symbol manipulation. 

Tokens are: 
>> ['Beyond', 'simple', 'memorization', ',', 'neural', 'Turing', 'machines', 'and', 'mem-', 'ory', 'networks', 'are', 'being', 'used', 'for', 'tasks', 'that', 'would', 'normally', 'require', 'reasoning', 'and', 'symbol', 'manipulation', '.'] 

 UPOS tags are: 
>> [('Beyond', 'ADP'), ('simple', 'ADJ'), ('memorization', 'NOUN'), (',', 'PUNCT'), ('neural', 'ADJ'), ('Turing', 'NOUN'), ('machines', 'NOUN'), ('and', 'CCONJ'), ('mem-', 'NOUN'), ('ory', 'NOUN'), ('networks', 'NOUN'), ('are', 'AUX'), ('being', 'AUX'), ('used', 'VERB'), ('for', 'ADP'), ('tasks', 'NOUN'), ('that', 'PRON'), ('would', 'AUX'), ('normally', 'ADV'), ('require', 'VERB'), ('reasoning', 'NOUN'), ('and', 'CCONJ'), ('symbol', 'NOUN'), ('manipulation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Beyond', 'IN'), ('simple', 'JJ'), ('memorization', 'NN'), (',', ','), ('neural', 'JJ'), ('Turing', 'NN'), ('machines', 'NNS'), ('and', 'CC'), ('mem-', 'NN'), ('ory', 'NN'), ('networks', 'NNS'), ('are', 'VBP'), ('being', 'VBG'), ('used', 'VBN'), ('for', 'IN'), ('tasks', 'NNS'), ('that', 'WDT'), ('would', 'MD'), ('normally', 'RB'), ('require', 'VB'), ('reasoning', 'NN'), ('and', 'CC'), ('symbol', 'NN'), ('manipulation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Beyond', 'beyond'), ('simple', 'simple'), ('memorization', 'memorization'), (',', ','), ('neural', 'neural'), ('Turing', 'turing'), ('machines', 'machine'), ('and', 'and'), ('mem-', 'mem-'), ('ory', 'ory'), ('networks', 'network'), ('are', 'be'), ('being', 'be'), ('used', 'use'), ('for', 'for'), ('tasks', 'task'), ('that', 'that'), ('would', 'would'), ('normally', 'normally'), ('require', 'require'), ('reasoning', 'reasoning'), ('and', 'and'), ('symbol', 'symbol'), ('manipulation', 'manipulation'), ('.', '.')] 

 Dependency tags are: 
>> [(('Beyond', 'memorization'), 'case'), (('simple', 'memorization'), 'amod'), (('memorization', 'used'), 'obl'), ((',', 'used'), 'punct'), (('neural', 'machines'), 'amod'), (('Turing', 'machines'), 'compound'), (('machines', 'used'), 'nsubj:pass'), (('and', 'networks'), 'cc'), (('mem-', 'networks'), 'compound'), (('ory', 'networks'), 'compound'), (('networks', 'machines'), 'conj'), (('are', 'used'), 'aux'), (('being', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('for', 'tasks'), 'case'), (('tasks', 'used'), 'obl'), (('that', 'require'), 'nsubj'), (('would', 'require'), 'aux'), (('normally', 'require'), 'advmod'), (('require', 'tasks'), 'acl:relcl'), (('reasoning', 'require'), 'obj'), (('and', 'manipulation'), 'cc'), (('symbol', 'manipulation'), 'compound'), (('manipulation', 'reasoning'), 'conj'), (('.', 'used'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Neural Turing machines can  be taught ‘algorithms’. 

Tokens are: 
>> ['Neural', 'Turing', 'machines', 'can', 'be', 'taught', '‘', 'algorithms', '’.'] 

 UPOS tags are: 
>> [('Neural', 'ADJ'), ('Turing', 'NOUN'), ('machines', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('taught', 'VERB'), ('‘', 'PUNCT'), ('algorithms', 'NOUN'), ('’.', 'PUNCT')] 

 XPOS tags are: 
>> [('Neural', 'JJ'), ('Turing', 'NN'), ('machines', 'NNS'), ('can', 'MD'), ('be', 'VB'), ('taught', 'VBN'), ('‘', '``'), ('algorithms', 'NNS'), ('’.', "''")] 

 Lemmas are: 
>> [('Neural', 'neural'), ('Turing', 'turing'), ('machines', 'machine'), ('can', 'can'), ('be', 'be'), ('taught', 'teach'), ('‘', "'"), ('algorithms', 'algorithm'), ('’.', '’.')] 

 Dependency tags are: 
>> [(('Neural', 'machines'), 'amod'), (('Turing', 'machines'), 'compound'), (('machines', 'taught'), 'nsubj:pass'), (('can', 'taught'), 'aux'), (('be', 'taught'), 'aux:pass'), (('taught', 'root'), 'root'), (('‘', 'algorithms'), 'punct'), (('algorithms', 'taught'), 'xcomp'), (('’.', 'algorithms'), 'punct')]

 Named Entites are: 
>> [('Neural Turing', 'PRODUCT')]

------------------- Sentence 3 -------------------

 Among other things, they can learn to output 

Tokens are: 
>> ['Among', 'other', 'things', ',', 'they', 'can', 'learn', 'to', 'output'] 

 UPOS tags are: 
>> [('Among', 'ADP'), ('other', 'ADJ'), ('things', 'NOUN'), (',', 'PUNCT'), ('they', 'PRON'), ('can', 'AUX'), ('learn', 'VERB'), ('to', 'PART'), ('output', 'VERB')] 

 XPOS tags are: 
>> [('Among', 'IN'), ('other', 'JJ'), ('things', 'NNS'), (',', ','), ('they', 'PRP'), ('can', 'MD'), ('learn', 'VB'), ('to', 'TO'), ('output', 'VB')] 

 Lemmas are: 
>> [('Among', 'among'), ('other', 'other'), ('things', 'thing'), (',', ','), ('they', 'they'), ('can', 'can'), ('learn', 'learn'), ('to', 'to'), ('output', 'output')] 

 Dependency tags are: 
>> [(('Among', 'things'), 'case'), (('other', 'things'), 'amod'), (('things', 'learn'), 'obl'), ((',', 'learn'), 'punct'), (('they', 'learn'), 'nsubj'), (('can', 'learn'), 'aux'), (('learn', 'root'), 'root'), (('to', 'output'), 'mark'), (('output', 'learn'), 'xcomp')]

 Named Entites are: 
>> []

================================ Paragraph 222 =================================

a sorted list of symbols when their input consists of an unsorted  sequence in which each symbol is accompanied by a real value that  indicates its priority in the list88. Memory networks can be trained  to keep track of the state of the world in a setting similar to a text  adventure game and after reading a story, they can answer questions  that require complex inference90. In one test example, the network is  shown a 15-sentence version of the The Lord of the Rings and correctly  answers questions such as “where is Frodo now?”89.   


------------------- Sentence 1 -------------------

 a sorted list of symbols when their input consists of an unsorted  sequence in which each symbol is accompanied by a real value that  indicates its priority in the list 

Tokens are: 
>> ['a', 'sorted', 'list', 'of', 'symbols', 'when', 'their', 'input', 'consists', 'of', 'an', 'unsorted', 'sequence', 'in', 'which', 'each', 'symbol', 'is', 'accompanied', 'by', 'a', 'real', 'value', 'that', 'indicates', 'its', 'priority', 'in', 'the', 'list'] 

 UPOS tags are: 
>> [('a', 'DET'), ('sorted', 'VERB'), ('list', 'NOUN'), ('of', 'ADP'), ('symbols', 'NOUN'), ('when', 'SCONJ'), ('their', 'PRON'), ('input', 'NOUN'), ('consists', 'VERB'), ('of', 'ADP'), ('an', 'DET'), ('unsorted', 'ADJ'), ('sequence', 'NOUN'), ('in', 'ADP'), ('which', 'PRON'), ('each', 'DET'), ('symbol', 'NOUN'), ('is', 'AUX'), ('accompanied', 'VERB'), ('by', 'ADP'), ('a', 'DET'), ('real', 'ADJ'), ('value', 'NOUN'), ('that', 'PRON'), ('indicates', 'VERB'), ('its', 'PRON'), ('priority', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('list', 'NOUN')] 

 XPOS tags are: 
>> [('a', 'DT'), ('sorted', 'VBN'), ('list', 'NN'), ('of', 'IN'), ('symbols', 'NNS'), ('when', 'WRB'), ('their', 'PRP$'), ('input', 'NN'), ('consists', 'VBZ'), ('of', 'IN'), ('an', 'DT'), ('unsorted', 'JJ'), ('sequence', 'NN'), ('in', 'IN'), ('which', 'WDT'), ('each', 'DT'), ('symbol', 'NN'), ('is', 'VBZ'), ('accompanied', 'VBN'), ('by', 'IN'), ('a', 'DT'), ('real', 'JJ'), ('value', 'NN'), ('that', 'WDT'), ('indicates', 'VBZ'), ('its', 'PRP$'), ('priority', 'NN'), ('in', 'IN'), ('the', 'DT'), ('list', 'NN')] 

 Lemmas are: 
>> [('a', 'a'), ('sorted', 'sort'), ('list', 'list'), ('of', 'of'), ('symbols', 'symbol'), ('when', 'when'), ('their', 'they'), ('input', 'input'), ('consists', 'consist'), ('of', 'of'), ('an', 'a'), ('unsorted', 'unsorted'), ('sequence', 'sequence'), ('in', 'in'), ('which', 'which'), ('each', 'each'), ('symbol', 'symbol'), ('is', 'be'), ('accompanied', 'accompany'), ('by', 'by'), ('a', 'a'), ('real', 'real'), ('value', 'value'), ('that', 'that'), ('indicates', 'indicate'), ('its', 'its'), ('priority', 'priority'), ('in', 'in'), ('the', 'the'), ('list', 'list')] 

 Dependency tags are: 
>> [(('a', 'list'), 'det'), (('sorted', 'list'), 'amod'), (('list', 'root'), 'root'), (('of', 'symbols'), 'case'), (('symbols', 'list'), 'nmod'), (('when', 'consists'), 'mark'), (('their', 'input'), 'nmod:poss'), (('input', 'consists'), 'nsubj'), (('consists', 'list'), 'acl'), (('of', 'sequence'), 'case'), (('an', 'sequence'), 'det'), (('unsorted', 'sequence'), 'amod'), (('sequence', 'consists'), 'obl'), (('in', 'which'), 'case'), (('which', 'accompanied'), 'obl'), (('each', 'symbol'), 'det'), (('symbol', 'accompanied'), 'nsubj:pass'), (('is', 'accompanied'), 'aux:pass'), (('accompanied', 'sequence'), 'acl:relcl'), (('by', 'value'), 'case'), (('a', 'value'), 'det'), (('real', 'value'), 'amod'), (('value', 'accompanied'), 'obl'), (('that', 'indicates'), 'nsubj'), (('indicates', 'value'), 'acl:relcl'), (('its', 'priority'), 'nmod:poss'), (('priority', 'indicates'), 'obj'), (('in', 'list'), 'case'), (('the', 'list'), 'det'), (('list', 'indicates'), 'obl')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 88. 

Tokens are: 
>> ['88', '.'] 

 UPOS tags are: 
>> [('88', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('88', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('88', '88'), ('.', '.')] 

 Dependency tags are: 
>> [(('88', 'root'), 'root'), (('.', '88'), 'punct')]

 Named Entites are: 
>> [('88', 'CARDINAL')]

------------------- Sentence 3 -------------------

 Memory networks can be trained  to keep track of the state of the world in a setting similar to a text  adventure game and after reading a story, they can answer questions  that require complex inference90. 

Tokens are: 
>> ['Memory', 'networks', 'can', 'be', 'trained', 'to', 'keep', 'track', 'of', 'the', 'state', 'of', 'the', 'world', 'in', 'a', 'setting', 'similar', 'to', 'a', 'text', 'adventure', 'game', 'and', 'after', 'reading', 'a', 'story', ',', 'they', 'can', 'answer', 'questions', 'that', 'require', 'complex', 'inference90', '.'] 

 UPOS tags are: 
>> [('Memory', 'NOUN'), ('networks', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('trained', 'VERB'), ('to', 'PART'), ('keep', 'VERB'), ('track', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('state', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('world', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('setting', 'NOUN'), ('similar', 'ADJ'), ('to', 'ADP'), ('a', 'DET'), ('text', 'NOUN'), ('adventure', 'NOUN'), ('game', 'NOUN'), ('and', 'CCONJ'), ('after', 'SCONJ'), ('reading', 'VERB'), ('a', 'DET'), ('story', 'NOUN'), (',', 'PUNCT'), ('they', 'PRON'), ('can', 'AUX'), ('answer', 'VERB'), ('questions', 'NOUN'), ('that', 'PRON'), ('require', 'VERB'), ('complex', 'ADJ'), ('inference90', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Memory', 'NN'), ('networks', 'NNS'), ('can', 'MD'), ('be', 'VB'), ('trained', 'VBN'), ('to', 'TO'), ('keep', 'VB'), ('track', 'NN'), ('of', 'IN'), ('the', 'DT'), ('state', 'NN'), ('of', 'IN'), ('the', 'DT'), ('world', 'NN'), ('in', 'IN'), ('a', 'DT'), ('setting', 'NN'), ('similar', 'JJ'), ('to', 'IN'), ('a', 'DT'), ('text', 'NN'), ('adventure', 'NN'), ('game', 'NN'), ('and', 'CC'), ('after', 'IN'), ('reading', 'VBG'), ('a', 'DT'), ('story', 'NN'), (',', ','), ('they', 'PRP'), ('can', 'MD'), ('answer', 'VB'), ('questions', 'NNS'), ('that', 'WDT'), ('require', 'VBP'), ('complex', 'JJ'), ('inference90', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Memory', 'memory'), ('networks', 'network'), ('can', 'can'), ('be', 'be'), ('trained', 'train'), ('to', 'to'), ('keep', 'keep'), ('track', 'track'), ('of', 'of'), ('the', 'the'), ('state', 'state'), ('of', 'of'), ('the', 'the'), ('world', 'world'), ('in', 'in'), ('a', 'a'), ('setting', 'setting'), ('similar', 'similar'), ('to', 'to'), ('a', 'a'), ('text', 'text'), ('adventure', 'adventure'), ('game', 'game'), ('and', 'and'), ('after', 'after'), ('reading', 'read'), ('a', 'a'), ('story', 'story'), (',', ','), ('they', 'they'), ('can', 'can'), ('answer', 'answer'), ('questions', 'question'), ('that', 'that'), ('require', 'require'), ('complex', 'complex'), ('inference90', 'inference90'), ('.', '.')] 

 Dependency tags are: 
>> [(('Memory', 'networks'), 'compound'), (('networks', 'trained'), 'nsubj:pass'), (('can', 'trained'), 'aux'), (('be', 'trained'), 'aux:pass'), (('trained', 'root'), 'root'), (('to', 'keep'), 'mark'), (('keep', 'trained'), 'xcomp'), (('track', 'keep'), 'obj'), (('of', 'state'), 'case'), (('the', 'state'), 'det'), (('state', 'track'), 'nmod'), (('of', 'world'), 'case'), (('the', 'world'), 'det'), (('world', 'state'), 'nmod'), (('in', 'setting'), 'case'), (('a', 'setting'), 'det'), (('setting', 'keep'), 'obl'), (('similar', 'setting'), 'amod'), (('to', 'game'), 'case'), (('a', 'game'), 'det'), (('text', 'game'), 'compound'), (('adventure', 'game'), 'compound'), (('game', 'similar'), 'obl'), (('and', 'answer'), 'cc'), (('after', 'reading'), 'mark'), (('reading', 'answer'), 'advcl'), (('a', 'story'), 'det'), (('story', 'reading'), 'obj'), ((',', 'answer'), 'punct'), (('they', 'answer'), 'nsubj'), (('can', 'answer'), 'aux'), (('answer', 'trained'), 'conj'), (('questions', 'answer'), 'obj'), (('that', 'require'), 'nsubj'), (('require', 'questions'), 'acl:relcl'), (('complex', 'inference90'), 'amod'), (('inference90', 'require'), 'obj'), (('.', 'trained'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 In one test example, the network is  shown a 15-sentence version of the The Lord of the Rings and correctly  answers questions such as “where is Frodo now?” 

Tokens are: 
>> ['In', 'one', 'test', 'example', ',', 'the', 'network', 'is', 'shown', 'a', '15', '-', 'sentence', 'version', 'of', 'the', 'The', 'Lord', 'of', 'the', 'Rings', 'and', 'correctly', 'answers', 'questions', 'such', 'as', '“', 'where', 'is', 'Frodo', 'now', '?', '”'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('one', 'NUM'), ('test', 'NOUN'), ('example', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('network', 'NOUN'), ('is', 'AUX'), ('shown', 'VERB'), ('a', 'DET'), ('15', 'NUM'), ('-', 'PUNCT'), ('sentence', 'NOUN'), ('version', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('The', 'DET'), ('Lord', 'PROPN'), ('of', 'ADP'), ('the', 'DET'), ('Rings', 'PROPN'), ('and', 'CCONJ'), ('correctly', 'ADV'), ('answers', 'NOUN'), ('questions', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('“', 'PUNCT'), ('where', 'ADV'), ('is', 'AUX'), ('Frodo', 'PROPN'), ('now', 'ADV'), ('?', 'PUNCT'), ('”', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('one', 'CD'), ('test', 'NN'), ('example', 'NN'), (',', ','), ('the', 'DT'), ('network', 'NN'), ('is', 'VBZ'), ('shown', 'VBN'), ('a', 'DT'), ('15', 'CD'), ('-', 'HYPH'), ('sentence', 'NN'), ('version', 'NN'), ('of', 'IN'), ('the', 'DT'), ('The', 'DT'), ('Lord', 'NNP'), ('of', 'IN'), ('the', 'DT'), ('Rings', 'NNPS'), ('and', 'CC'), ('correctly', 'RB'), ('answers', 'NNS'), ('questions', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('“', '``'), ('where', 'WRB'), ('is', 'VBZ'), ('Frodo', 'NNP'), ('now', 'RB'), ('?', '.'), ('”', "''")] 

 Lemmas are: 
>> [('In', 'in'), ('one', 'one'), ('test', 'test'), ('example', 'example'), (',', ','), ('the', 'the'), ('network', 'network'), ('is', 'be'), ('shown', 'show'), ('a', 'a'), ('15', '15'), ('-', '-'), ('sentence', 'sentence'), ('version', 'version'), ('of', 'of'), ('the', 'the'), ('The', 'the'), ('Lord', 'Lord'), ('of', 'of'), ('the', 'the'), ('Rings', 'Rings'), ('and', 'and'), ('correctly', 'correctly'), ('answers', 'answer'), ('questions', 'question'), ('such', 'such'), ('as', 'as'), ('“', "''"), ('where', 'where'), ('is', 'be'), ('Frodo', 'Frodo'), ('now', 'now'), ('?', '?'), ('”', "''")] 

 Dependency tags are: 
>> [(('In', 'example'), 'case'), (('one', 'example'), 'nummod'), (('test', 'example'), 'compound'), (('example', 'shown'), 'obl'), ((',', 'shown'), 'punct'), (('the', 'network'), 'det'), (('network', 'shown'), 'nsubj:pass'), (('is', 'shown'), 'aux:pass'), (('shown', 'root'), 'root'), (('a', 'version'), 'det'), (('15', 'sentence'), 'nummod'), (('-', 'sentence'), 'punct'), (('sentence', 'version'), 'compound'), (('version', 'shown'), 'obj'), (('of', 'Lord'), 'case'), (('the', 'Lord'), 'det'), (('The', 'Lord'), 'det'), (('Lord', 'version'), 'nmod'), (('of', 'Rings'), 'case'), (('the', 'Rings'), 'det'), (('Rings', 'Lord'), 'nmod'), (('and', 'answers'), 'cc'), (('correctly', 'answers'), 'advmod'), (('answers', 'version'), 'conj'), (('questions', 'answers'), 'obj'), (('such', 'where'), 'case'), (('as', 'such'), 'fixed'), (('“', 'where'), 'punct'), (('where', 'questions'), 'nmod'), (('is', 'Frodo'), 'cop'), (('Frodo', 'where'), 'nsubj'), (('now', 'Frodo'), 'advmod'), (('?', 'where'), 'punct'), (('”', 'where'), 'punct')]

 Named Entites are: 
>> [('one', 'CARDINAL'), ('15', 'CARDINAL'), ('the The Lord of the Rings', 'WORK_OF_ART'), ('Frodo', 'PERSON')]

------------------- Sentence 5 -------------------

 89. 

Tokens are: 
>> ['89.'] 

 UPOS tags are: 
>> [('89.', 'X')] 

 XPOS tags are: 
>> [('89.', 'ADD')] 

 Lemmas are: 
>> [('89.', '89.')] 

 Dependency tags are: 
>> [(('89.', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 223 =================================

The future of deep learning  Unsupervised learning91–98 had a catalytic effect in reviving interest in  deep learning, but has since been overshadowed by the successes of  purely supervised learning. Although we have not focused on it in this  Review, we expect unsupervised learning to become far more important  in the longer term. Human and animal learning is largely unsupervised:  we discover the structure of the world by observing it, not by being told  the name of every object.  


------------------- Sentence 1 -------------------

 The future of deep learning  Unsupervised learning91–98 had a catalytic effect in reviving interest in  deep learning, but has since been overshadowed by the successes of  purely supervised learning. 

Tokens are: 
>> ['The', 'future', 'of', 'deep', 'learning', 'Unsupervised', 'learning', '91–98', 'had', 'a', 'catalytic', 'effect', 'in', 'reviving', 'interest', 'in', 'deep', 'learning', ',', 'but', 'has', 'since', 'been', 'overshadowed', 'by', 'the', 'successes', 'of', 'purely', 'supervised', 'learning', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('future', 'NOUN'), ('of', 'ADP'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('Unsupervised', 'VERB'), ('learning', 'NOUN'), ('91–98', 'NUM'), ('had', 'VERB'), ('a', 'DET'), ('catalytic', 'ADJ'), ('effect', 'NOUN'), ('in', 'SCONJ'), ('reviving', 'VERB'), ('interest', 'NOUN'), ('in', 'ADP'), ('deep', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('but', 'CCONJ'), ('has', 'AUX'), ('since', 'ADV'), ('been', 'AUX'), ('overshadowed', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('successes', 'NOUN'), ('of', 'ADP'), ('purely', 'ADV'), ('supervised', 'VERB'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('future', 'NN'), ('of', 'IN'), ('deep', 'JJ'), ('learning', 'NN'), ('Unsupervised', 'VBN'), ('learning', 'NN'), ('91–98', 'CD'), ('had', 'VBD'), ('a', 'DT'), ('catalytic', 'JJ'), ('effect', 'NN'), ('in', 'IN'), ('reviving', 'VBG'), ('interest', 'NN'), ('in', 'IN'), ('deep', 'JJ'), ('learning', 'NN'), (',', ','), ('but', 'CC'), ('has', 'VBZ'), ('since', 'RB'), ('been', 'VBN'), ('overshadowed', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('successes', 'NNS'), ('of', 'IN'), ('purely', 'RB'), ('supervised', 'VBN'), ('learning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('future', 'future'), ('of', 'of'), ('deep', 'deep'), ('learning', 'learning'), ('Unsupervised', 'unsupervise'), ('learning', 'learning'), ('91–98', '91–98'), ('had', 'have'), ('a', 'a'), ('catalytic', 'catalytic'), ('effect', 'effect'), ('in', 'in'), ('reviving', 'revive'), ('interest', 'interest'), ('in', 'in'), ('deep', 'deep'), ('learning', 'learning'), (',', ','), ('but', 'but'), ('has', 'have'), ('since', 'since'), ('been', 'be'), ('overshadowed', 'overshadow'), ('by', 'by'), ('the', 'the'), ('successes', 'success'), ('of', 'of'), ('purely', 'purely'), ('supervised', 'supervise'), ('learning', 'learning'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'future'), 'det'), (('future', 'had'), 'nsubj'), (('of', '91–98'), 'case'), (('deep', '91–98'), 'amod'), (('learning', 'Unsupervised'), 'compound'), (('Unsupervised', '91–98'), 'amod'), (('learning', '91–98'), 'compound'), (('91–98', 'future'), 'nmod'), (('had', 'root'), 'root'), (('a', 'effect'), 'det'), (('catalytic', 'effect'), 'amod'), (('effect', 'had'), 'obj'), (('in', 'reviving'), 'mark'), (('reviving', 'effect'), 'acl'), (('interest', 'reviving'), 'obj'), (('in', 'learning'), 'case'), (('deep', 'learning'), 'amod'), (('learning', 'reviving'), 'obl'), ((',', 'overshadowed'), 'punct'), (('but', 'overshadowed'), 'cc'), (('has', 'overshadowed'), 'aux'), (('since', 'overshadowed'), 'advmod'), (('been', 'overshadowed'), 'aux:pass'), (('overshadowed', 'had'), 'conj'), (('by', 'successes'), 'case'), (('the', 'successes'), 'det'), (('successes', 'overshadowed'), 'obl'), (('of', 'learning'), 'case'), (('purely', 'supervised'), 'advmod'), (('supervised', 'learning'), 'amod'), (('learning', 'successes'), 'nmod'), (('.', 'had'), 'punct')]

 Named Entites are: 
>> [('91–98', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Although we have not focused on it in this  Review, we expect unsupervised learning to become far more important  in the longer term. 

Tokens are: 
>> ['Although', 'we', 'have', 'not', 'focused', 'on', 'it', 'in', 'this', 'Review', ',', 'we', 'expect', 'unsupervised', 'learning', 'to', 'become', 'far', 'more', 'important', 'in', 'the', 'longer', 'term', '.'] 

 UPOS tags are: 
>> [('Although', 'SCONJ'), ('we', 'PRON'), ('have', 'AUX'), ('not', 'PART'), ('focused', 'VERB'), ('on', 'ADP'), ('it', 'PRON'), ('in', 'ADP'), ('this', 'DET'), ('Review', 'NOUN'), (',', 'PUNCT'), ('we', 'PRON'), ('expect', 'VERB'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('to', 'PART'), ('become', 'VERB'), ('far', 'ADV'), ('more', 'ADV'), ('important', 'ADJ'), ('in', 'ADP'), ('the', 'DET'), ('longer', 'ADJ'), ('term', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Although', 'IN'), ('we', 'PRP'), ('have', 'VBP'), ('not', 'RB'), ('focused', 'VBN'), ('on', 'IN'), ('it', 'PRP'), ('in', 'IN'), ('this', 'DT'), ('Review', 'NN'), (',', ','), ('we', 'PRP'), ('expect', 'VBP'), ('unsupervised', 'JJ'), ('learning', 'NN'), ('to', 'TO'), ('become', 'VB'), ('far', 'RB'), ('more', 'RBR'), ('important', 'JJ'), ('in', 'IN'), ('the', 'DT'), ('longer', 'JJR'), ('term', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Although', 'although'), ('we', 'we'), ('have', 'have'), ('not', 'not'), ('focused', 'focus'), ('on', 'on'), ('it', 'it'), ('in', 'in'), ('this', 'this'), ('Review', 'review'), (',', ','), ('we', 'we'), ('expect', 'expect'), ('unsupervised', 'unsupervised'), ('learning', 'learning'), ('to', 'to'), ('become', 'become'), ('far', 'far'), ('more', 'more'), ('important', 'important'), ('in', 'in'), ('the', 'the'), ('longer', 'long'), ('term', 'term'), ('.', '.')] 

 Dependency tags are: 
>> [(('Although', 'focused'), 'mark'), (('we', 'focused'), 'nsubj'), (('have', 'focused'), 'aux'), (('not', 'focused'), 'advmod'), (('focused', 'expect'), 'advcl'), (('on', 'it'), 'case'), (('it', 'focused'), 'obl'), (('in', 'Review'), 'case'), (('this', 'Review'), 'det'), (('Review', 'focused'), 'obl'), ((',', 'expect'), 'punct'), (('we', 'expect'), 'nsubj'), (('expect', 'root'), 'root'), (('unsupervised', 'learning'), 'amod'), (('learning', 'expect'), 'obj'), (('to', 'become'), 'mark'), (('become', 'expect'), 'xcomp'), (('far', 'more'), 'advmod'), (('more', 'important'), 'advmod'), (('important', 'become'), 'xcomp'), (('in', 'term'), 'case'), (('the', 'term'), 'det'), (('longer', 'term'), 'amod'), (('term', 'important'), 'obl'), (('.', 'expect'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Human and animal learning is largely unsupervised:  we discover the structure of the world by observing it, not by being told  the name of every object. 

Tokens are: 
>> ['Human', 'and', 'animal', 'learning', 'is', 'largely', 'unsupervised', ':', 'we', 'discover', 'the', 'structure', 'of', 'the', 'world', 'by', 'observing', 'it', ',', 'not', 'by', 'being', 'told', 'the', 'name', 'of', 'every', 'object', '.'] 

 UPOS tags are: 
>> [('Human', 'ADJ'), ('and', 'CCONJ'), ('animal', 'NOUN'), ('learning', 'NOUN'), ('is', 'AUX'), ('largely', 'ADV'), ('unsupervised', 'ADJ'), (':', 'PUNCT'), ('we', 'PRON'), ('discover', 'VERB'), ('the', 'DET'), ('structure', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('world', 'NOUN'), ('by', 'SCONJ'), ('observing', 'VERB'), ('it', 'PRON'), (',', 'PUNCT'), ('not', 'ADV'), ('by', 'SCONJ'), ('being', 'AUX'), ('told', 'VERB'), ('the', 'DET'), ('name', 'NOUN'), ('of', 'ADP'), ('every', 'DET'), ('object', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Human', 'JJ'), ('and', 'CC'), ('animal', 'NN'), ('learning', 'NN'), ('is', 'VBZ'), ('largely', 'RB'), ('unsupervised', 'JJ'), (':', ':'), ('we', 'PRP'), ('discover', 'VBP'), ('the', 'DT'), ('structure', 'NN'), ('of', 'IN'), ('the', 'DT'), ('world', 'NN'), ('by', 'IN'), ('observing', 'VBG'), ('it', 'PRP'), (',', ','), ('not', 'RB'), ('by', 'IN'), ('being', 'VBG'), ('told', 'VBN'), ('the', 'DT'), ('name', 'NN'), ('of', 'IN'), ('every', 'DT'), ('object', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Human', 'human'), ('and', 'and'), ('animal', 'animal'), ('learning', 'learning'), ('is', 'be'), ('largely', 'largely'), ('unsupervised', 'unsupervised'), (':', ':'), ('we', 'we'), ('discover', 'discover'), ('the', 'the'), ('structure', 'structure'), ('of', 'of'), ('the', 'the'), ('world', 'world'), ('by', 'by'), ('observing', 'observe'), ('it', 'it'), (',', ','), ('not', 'not'), ('by', 'by'), ('being', 'be'), ('told', 'tell'), ('the', 'the'), ('name', 'name'), ('of', 'of'), ('every', 'every'), ('object', 'object'), ('.', '.')] 

 Dependency tags are: 
>> [(('Human', 'learning'), 'amod'), (('and', 'animal'), 'cc'), (('animal', 'Human'), 'conj'), (('learning', 'unsupervised'), 'nsubj'), (('is', 'unsupervised'), 'cop'), (('largely', 'unsupervised'), 'advmod'), (('unsupervised', 'root'), 'root'), ((':', 'unsupervised'), 'punct'), (('we', 'discover'), 'nsubj'), (('discover', 'unsupervised'), 'parataxis'), (('the', 'structure'), 'det'), (('structure', 'discover'), 'obj'), (('of', 'world'), 'case'), (('the', 'world'), 'det'), (('world', 'structure'), 'nmod'), (('by', 'observing'), 'mark'), (('observing', 'discover'), 'advcl'), (('it', 'observing'), 'obj'), ((',', 'told'), 'punct'), (('not', 'told'), 'advmod'), (('by', 'told'), 'mark'), (('being', 'told'), 'aux:pass'), (('told', 'observing'), 'advcl'), (('the', 'name'), 'det'), (('name', 'told'), 'obj'), (('of', 'object'), 'case'), (('every', 'object'), 'det'), (('object', 'name'), 'nmod'), (('.', 'unsupervised'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 224 =================================

Human vision is an active process that sequentially samples the optic  array in an intelligent, task-specific way using a small, high-resolution  fovea with a large, low-resolution surround. We expect much of the  future progress in vision to come from systems that are trained end-to- end and combine ConvNets with RNNs that use reinforcement learning  to decide where to look. Systems combining deep learning and rein- forcement learning are in their infancy, but they already outperform  passive vision systems99 at classification tasks and produce impressive  results in learning to play many different video games100.  


------------------- Sentence 1 -------------------

 Human vision is an active process that sequentially samples the optic  array in an intelligent, task-specific way using a small, high-resolution  fovea with a large, low-resolution surround. 

Tokens are: 
>> ['Human', 'vision', 'is', 'an', 'active', 'process', 'that', 'sequentially', 'samples', 'the', 'optic', 'array', 'in', 'an', 'intelligent', ',', 'task', '-', 'specific', 'way', 'using', 'a', 'small', ',', 'high', '-', 'resolution', 'fovea', 'with', 'a', 'large', ',', 'low-resolution', 'surround', '.'] 

 UPOS tags are: 
>> [('Human', 'ADJ'), ('vision', 'NOUN'), ('is', 'AUX'), ('an', 'DET'), ('active', 'ADJ'), ('process', 'NOUN'), ('that', 'PRON'), ('sequentially', 'ADV'), ('samples', 'VERB'), ('the', 'DET'), ('optic', 'ADJ'), ('array', 'NOUN'), ('in', 'ADP'), ('an', 'DET'), ('intelligent', 'ADJ'), (',', 'PUNCT'), ('task', 'NOUN'), ('-', 'PUNCT'), ('specific', 'ADJ'), ('way', 'NOUN'), ('using', 'VERB'), ('a', 'DET'), ('small', 'ADJ'), (',', 'PUNCT'), ('high', 'ADJ'), ('-', 'PUNCT'), ('resolution', 'NOUN'), ('fovea', 'NOUN'), ('with', 'ADP'), ('a', 'DET'), ('large', 'ADJ'), (',', 'PUNCT'), ('low-resolution', 'NOUN'), ('surround', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Human', 'JJ'), ('vision', 'NN'), ('is', 'VBZ'), ('an', 'DT'), ('active', 'JJ'), ('process', 'NN'), ('that', 'WDT'), ('sequentially', 'RB'), ('samples', 'VBZ'), ('the', 'DT'), ('optic', 'JJ'), ('array', 'NN'), ('in', 'IN'), ('an', 'DT'), ('intelligent', 'JJ'), (',', ','), ('task', 'NN'), ('-', 'HYPH'), ('specific', 'JJ'), ('way', 'NN'), ('using', 'VBG'), ('a', 'DT'), ('small', 'JJ'), (',', ','), ('high', 'JJ'), ('-', 'HYPH'), ('resolution', 'NN'), ('fovea', 'NN'), ('with', 'IN'), ('a', 'DT'), ('large', 'JJ'), (',', ','), ('low-resolution', 'NN'), ('surround', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Human', 'human'), ('vision', 'vision'), ('is', 'be'), ('an', 'a'), ('active', 'active'), ('process', 'process'), ('that', 'that'), ('sequentially', 'sequentially'), ('samples', 'sample'), ('the', 'the'), ('optic', 'optic'), ('array', 'array'), ('in', 'in'), ('an', 'a'), ('intelligent', 'intelligent'), (',', ','), ('task', 'task'), ('-', '-'), ('specific', 'specific'), ('way', 'way'), ('using', 'use'), ('a', 'a'), ('small', 'small'), (',', ','), ('high', 'high'), ('-', '-'), ('resolution', 'resolution'), ('fovea', 'fovea'), ('with', 'with'), ('a', 'a'), ('large', 'large'), (',', ','), ('low-resolution', 'low-resolution'), ('surround', 'surround'), ('.', '.')] 

 Dependency tags are: 
>> [(('Human', 'vision'), 'amod'), (('vision', 'process'), 'nsubj'), (('is', 'process'), 'cop'), (('an', 'process'), 'det'), (('active', 'process'), 'amod'), (('process', 'root'), 'root'), (('that', 'samples'), 'nsubj'), (('sequentially', 'samples'), 'advmod'), (('samples', 'process'), 'acl:relcl'), (('the', 'array'), 'det'), (('optic', 'array'), 'amod'), (('array', 'samples'), 'obj'), (('in', 'way'), 'case'), (('an', 'way'), 'det'), (('intelligent', 'way'), 'amod'), ((',', 'way'), 'punct'), (('task', 'specific'), 'obl:npmod'), (('-', 'specific'), 'punct'), (('specific', 'way'), 'amod'), (('way', 'samples'), 'obl'), (('using', 'way'), 'acl'), (('a', 'fovea'), 'det'), (('small', 'fovea'), 'amod'), ((',', 'fovea'), 'punct'), (('high', 'resolution'), 'amod'), (('-', 'resolution'), 'punct'), (('resolution', 'fovea'), 'compound'), (('fovea', 'using'), 'obj'), (('with', 'surround'), 'case'), (('a', 'surround'), 'det'), (('large', 'surround'), 'amod'), ((',', 'surround'), 'punct'), (('low-resolution', 'surround'), 'compound'), (('surround', 'fovea'), 'nmod'), (('.', 'process'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 We expect much of the  future progress in vision to come from systems that are trained end-to- end and combine ConvNets with RNNs that use reinforcement learning  to decide where to look. 

Tokens are: 
>> ['We', 'expect', 'much', 'of', 'the', 'future', 'progress', 'in', 'vision', 'to', 'come', 'from', 'systems', 'that', 'are', 'trained', 'end', '-', 'to', '-', 'end', 'and', 'combine', 'ConvNets', 'with', 'RNNs', 'that', 'use', 'reinforcement', 'learning', 'to', 'decide', 'where', 'to', 'look', '.'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('expect', 'VERB'), ('much', 'ADJ'), ('of', 'ADP'), ('the', 'DET'), ('future', 'ADJ'), ('progress', 'NOUN'), ('in', 'ADP'), ('vision', 'NOUN'), ('to', 'PART'), ('come', 'VERB'), ('from', 'ADP'), ('systems', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('trained', 'VERB'), ('end', 'NOUN'), ('-', 'PUNCT'), ('to', 'ADP'), ('-', 'PUNCT'), ('end', 'NOUN'), ('and', 'CCONJ'), ('combine', 'VERB'), ('ConvNets', 'PROPN'), ('with', 'ADP'), ('RNNs', 'NOUN'), ('that', 'PRON'), ('use', 'VERB'), ('reinforcement', 'NOUN'), ('learning', 'NOUN'), ('to', 'PART'), ('decide', 'VERB'), ('where', 'SCONJ'), ('to', 'PART'), ('look', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('expect', 'VBP'), ('much', 'JJ'), ('of', 'IN'), ('the', 'DT'), ('future', 'JJ'), ('progress', 'NN'), ('in', 'IN'), ('vision', 'NN'), ('to', 'TO'), ('come', 'VB'), ('from', 'IN'), ('systems', 'NNS'), ('that', 'WDT'), ('are', 'VBP'), ('trained', 'VBN'), ('end', 'NN'), ('-', 'HYPH'), ('to', 'IN'), ('-', 'HYPH'), ('end', 'NN'), ('and', 'CC'), ('combine', 'VB'), ('ConvNets', 'NNPS'), ('with', 'IN'), ('RNNs', 'NNS'), ('that', 'WDT'), ('use', 'VBP'), ('reinforcement', 'NN'), ('learning', 'NN'), ('to', 'TO'), ('decide', 'VB'), ('where', 'WRB'), ('to', 'TO'), ('look', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('expect', 'expect'), ('much', 'much'), ('of', 'of'), ('the', 'the'), ('future', 'future'), ('progress', 'progress'), ('in', 'in'), ('vision', 'vision'), ('to', 'to'), ('come', 'come'), ('from', 'from'), ('systems', 'system'), ('that', 'that'), ('are', 'be'), ('trained', 'train'), ('end', 'end'), ('-', '-'), ('to', 'to'), ('-', '-'), ('end', 'end'), ('and', 'and'), ('combine', 'combine'), ('ConvNets', 'Convnet'), ('with', 'with'), ('RNNs', 'rnn'), ('that', 'that'), ('use', 'use'), ('reinforcement', 'reinforcement'), ('learning', 'learning'), ('to', 'to'), ('decide', 'decide'), ('where', 'where'), ('to', 'to'), ('look', 'look'), ('.', '.')] 

 Dependency tags are: 
>> [(('We', 'expect'), 'nsubj'), (('expect', 'root'), 'root'), (('much', 'expect'), 'obj'), (('of', 'progress'), 'case'), (('the', 'progress'), 'det'), (('future', 'progress'), 'amod'), (('progress', 'much'), 'obl'), (('in', 'vision'), 'case'), (('vision', 'progress'), 'nmod'), (('to', 'come'), 'mark'), (('come', 'expect'), 'advcl'), (('from', 'systems'), 'case'), (('systems', 'come'), 'obl'), (('that', 'trained'), 'nsubj:pass'), (('are', 'trained'), 'aux:pass'), (('trained', 'systems'), 'acl:relcl'), (('end', 'trained'), 'obj'), (('-', 'end'), 'punct'), (('to', 'end'), 'case'), (('-', 'end'), 'punct'), (('end', 'end'), 'nmod'), (('and', 'combine'), 'cc'), (('combine', 'trained'), 'conj'), (('ConvNets', 'combine'), 'obj'), (('with', 'RNNs'), 'case'), (('RNNs', 'combine'), 'obl'), (('that', 'use'), 'nsubj'), (('use', 'RNNs'), 'acl:relcl'), (('reinforcement', 'learning'), 'compound'), (('learning', 'use'), 'obj'), (('to', 'decide'), 'mark'), (('decide', 'use'), 'advcl'), (('where', 'look'), 'mark'), (('to', 'look'), 'mark'), (('look', 'decide'), 'xcomp'), (('.', 'expect'), 'punct')]

 Named Entites are: 
>> [('ConvNets', 'ORG')]

------------------- Sentence 3 -------------------

 Systems combining deep learning and rein- forcement learning are in their infancy, but they already outperform  passive vision systems99 at classification tasks and produce impressive  results in learning to play many different video games100. 

Tokens are: 
>> ['Systems', 'combining', 'deep', 'learning', 'and', 'rein', '-', 'forcement', 'learning', 'are', 'in', 'their', 'infancy', ',', 'but', 'they', 'already', 'outperform', 'passive', 'vision', 'systems99', 'at', 'classification', 'tasks', 'and', 'produce', 'impressive', 'results', 'in', 'learning', 'to', 'play', 'many', 'different', 'video', 'games', '100.'] 

 UPOS tags are: 
>> [('Systems', 'NOUN'), ('combining', 'VERB'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('and', 'CCONJ'), ('rein', 'NOUN'), ('-', 'PUNCT'), ('forcement', 'NOUN'), ('learning', 'NOUN'), ('are', 'AUX'), ('in', 'ADP'), ('their', 'PRON'), ('infancy', 'NOUN'), (',', 'PUNCT'), ('but', 'CCONJ'), ('they', 'PRON'), ('already', 'ADV'), ('outperform', 'VERB'), ('passive', 'ADJ'), ('vision', 'NOUN'), ('systems99', 'NOUN'), ('at', 'ADP'), ('classification', 'NOUN'), ('tasks', 'NOUN'), ('and', 'CCONJ'), ('produce', 'VERB'), ('impressive', 'ADJ'), ('results', 'NOUN'), ('in', 'SCONJ'), ('learning', 'VERB'), ('to', 'PART'), ('play', 'VERB'), ('many', 'ADJ'), ('different', 'ADJ'), ('video', 'NOUN'), ('games', 'NOUN'), ('100.', 'NUM')] 

 XPOS tags are: 
>> [('Systems', 'NNS'), ('combining', 'VBG'), ('deep', 'JJ'), ('learning', 'NN'), ('and', 'CC'), ('rein', 'NN'), ('-', 'HYPH'), ('forcement', 'NN'), ('learning', 'NN'), ('are', 'VBP'), ('in', 'IN'), ('their', 'PRP$'), ('infancy', 'NN'), (',', ','), ('but', 'CC'), ('they', 'PRP'), ('already', 'RB'), ('outperform', 'VBP'), ('passive', 'JJ'), ('vision', 'NN'), ('systems99', 'NNS'), ('at', 'IN'), ('classification', 'NN'), ('tasks', 'NNS'), ('and', 'CC'), ('produce', 'VBP'), ('impressive', 'JJ'), ('results', 'NNS'), ('in', 'IN'), ('learning', 'VBG'), ('to', 'TO'), ('play', 'VB'), ('many', 'JJ'), ('different', 'JJ'), ('video', 'NN'), ('games', 'NNS'), ('100.', 'CD')] 

 Lemmas are: 
>> [('Systems', 'system'), ('combining', 'combine'), ('deep', 'deep'), ('learning', 'learning'), ('and', 'and'), ('rein', 'rein'), ('-', '-'), ('forcement', 'forcement'), ('learning', 'learning'), ('are', 'be'), ('in', 'in'), ('their', 'they'), ('infancy', 'infancy'), (',', ','), ('but', 'but'), ('they', 'they'), ('already', 'already'), ('outperform', 'outperform'), ('passive', 'passive'), ('vision', 'vision'), ('systems99', 'systems99'), ('at', 'at'), ('classification', 'classification'), ('tasks', 'task'), ('and', 'and'), ('produce', 'produce'), ('impressive', 'impressive'), ('results', 'result'), ('in', 'in'), ('learning', 'learn'), ('to', 'to'), ('play', 'play'), ('many', 'many'), ('different', 'different'), ('video', 'video'), ('games', 'game'), ('100.', '100.')] 

 Dependency tags are: 
>> [(('Systems', 'infancy'), 'nsubj'), (('combining', 'Systems'), 'acl'), (('deep', 'learning'), 'amod'), (('learning', 'combining'), 'obj'), (('and', 'learning'), 'cc'), (('rein', 'forcement'), 'compound'), (('-', 'forcement'), 'punct'), (('forcement', 'learning'), 'compound'), (('learning', 'combining'), 'obj'), (('are', 'infancy'), 'cop'), (('in', 'infancy'), 'case'), (('their', 'infancy'), 'nmod:poss'), (('infancy', 'root'), 'root'), ((',', 'outperform'), 'punct'), (('but', 'outperform'), 'cc'), (('they', 'outperform'), 'nsubj'), (('already', 'outperform'), 'advmod'), (('outperform', 'infancy'), 'conj'), (('passive', 'systems99'), 'amod'), (('vision', 'systems99'), 'compound'), (('systems99', 'outperform'), 'obj'), (('at', 'tasks'), 'case'), (('classification', 'tasks'), 'compound'), (('tasks', 'outperform'), 'obl'), (('and', 'produce'), 'cc'), (('produce', 'outperform'), 'conj'), (('impressive', 'results'), 'amod'), (('results', 'produce'), 'obj'), (('in', 'learning'), 'mark'), (('learning', 'results'), 'acl'), (('to', 'play'), 'mark'), (('play', 'learning'), 'xcomp'), (('many', 'games'), 'amod'), (('different', 'games'), 'amod'), (('video', 'games'), 'compound'), (('games', 'play'), 'obj'), (('100.', 'games'), 'nummod')]

 Named Entites are: 
>> [('100.', 'CARDINAL')]

================================ Paragraph 225 =================================

Natural language understanding is another area in which deep learn- ing is poised to make a large impact over the next few years. We expect  systems that use RNNs to understand sentences or whole documents  will become much better when they learn strategies for selectively  attending to one part at a time76,86.  


------------------- Sentence 1 -------------------

 Natural language understanding is another area in which deep learn- ing is poised to make a large impact over the next few years. 

Tokens are: 
>> ['Natural', 'language', 'understanding', 'is', 'another', 'area', 'in', 'which', 'deep', 'learn', '-', 'ing', 'is', 'poised', 'to', 'make', 'a', 'large', 'impact', 'over', 'the', 'next', 'few', 'years', '.'] 

 UPOS tags are: 
>> [('Natural', 'ADJ'), ('language', 'NOUN'), ('understanding', 'NOUN'), ('is', 'AUX'), ('another', 'DET'), ('area', 'NOUN'), ('in', 'ADP'), ('which', 'PRON'), ('deep', 'ADJ'), ('learn', 'NOUN'), ('-', 'PUNCT'), ('ing', 'NOUN'), ('is', 'AUX'), ('poised', 'VERB'), ('to', 'PART'), ('make', 'VERB'), ('a', 'DET'), ('large', 'ADJ'), ('impact', 'NOUN'), ('over', 'ADP'), ('the', 'DET'), ('next', 'ADJ'), ('few', 'ADJ'), ('years', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Natural', 'JJ'), ('language', 'NN'), ('understanding', 'NN'), ('is', 'VBZ'), ('another', 'DT'), ('area', 'NN'), ('in', 'IN'), ('which', 'WDT'), ('deep', 'JJ'), ('learn', 'NN'), ('-', ','), ('ing', 'NN'), ('is', 'VBZ'), ('poised', 'VBN'), ('to', 'TO'), ('make', 'VB'), ('a', 'DT'), ('large', 'JJ'), ('impact', 'NN'), ('over', 'IN'), ('the', 'DT'), ('next', 'JJ'), ('few', 'JJ'), ('years', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Natural', 'Natural'), ('language', 'language'), ('understanding', 'understanding'), ('is', 'be'), ('another', 'another'), ('area', 'area'), ('in', 'in'), ('which', 'which'), ('deep', 'deep'), ('learn', 'learn'), ('-', '-'), ('ing', 'ing'), ('is', 'be'), ('poised', 'poise'), ('to', 'to'), ('make', 'make'), ('a', 'a'), ('large', 'large'), ('impact', 'impact'), ('over', 'over'), ('the', 'the'), ('next', 'next'), ('few', 'few'), ('years', 'year'), ('.', '.')] 

 Dependency tags are: 
>> [(('Natural', 'understanding'), 'amod'), (('language', 'understanding'), 'compound'), (('understanding', 'area'), 'nsubj'), (('is', 'area'), 'cop'), (('another', 'area'), 'det'), (('area', 'root'), 'root'), (('in', 'which'), 'case'), (('which', 'poised'), 'obl'), (('deep', 'learn'), 'amod'), (('learn', 'poised'), 'nsubj:pass'), (('-', 'learn'), 'punct'), (('ing', 'poised'), 'nsubj:pass'), (('is', 'poised'), 'aux:pass'), (('poised', 'area'), 'acl:relcl'), (('to', 'make'), 'mark'), (('make', 'poised'), 'xcomp'), (('a', 'impact'), 'det'), (('large', 'impact'), 'amod'), (('impact', 'make'), 'obj'), (('over', 'years'), 'case'), (('the', 'years'), 'det'), (('next', 'years'), 'amod'), (('few', 'years'), 'amod'), (('years', 'make'), 'obl'), (('.', 'area'), 'punct')]

 Named Entites are: 
>> [('the next few years', 'DATE')]

------------------- Sentence 2 -------------------

 We expect  systems that use RNNs to understand sentences or whole documents  will become much better when they learn strategies for selectively  attending to one part at a time76,86. 

Tokens are: 
>> ['We', 'expect', 'systems', 'that', 'use', 'RNNs', 'to', 'understand', 'sentences', 'or', 'whole', 'documents', 'will', 'become', 'much', 'better', 'when', 'they', 'learn', 'strategies', 'for', 'selectively', 'attending', 'to', 'one', 'part', 'at', 'a', 'time', '76,86', '.'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('expect', 'VERB'), ('systems', 'NOUN'), ('that', 'PRON'), ('use', 'VERB'), ('RNNs', 'NOUN'), ('to', 'PART'), ('understand', 'VERB'), ('sentences', 'NOUN'), ('or', 'CCONJ'), ('whole', 'ADJ'), ('documents', 'NOUN'), ('will', 'AUX'), ('become', 'VERB'), ('much', 'ADV'), ('better', 'ADJ'), ('when', 'SCONJ'), ('they', 'PRON'), ('learn', 'VERB'), ('strategies', 'NOUN'), ('for', 'SCONJ'), ('selectively', 'ADV'), ('attending', 'VERB'), ('to', 'ADP'), ('one', 'NUM'), ('part', 'NOUN'), ('at', 'ADP'), ('a', 'DET'), ('time', 'NOUN'), ('76,86', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('expect', 'VBP'), ('systems', 'NNS'), ('that', 'WDT'), ('use', 'VBP'), ('RNNs', 'NNS'), ('to', 'TO'), ('understand', 'VB'), ('sentences', 'NNS'), ('or', 'CC'), ('whole', 'JJ'), ('documents', 'NNS'), ('will', 'MD'), ('become', 'VB'), ('much', 'RB'), ('better', 'JJR'), ('when', 'WRB'), ('they', 'PRP'), ('learn', 'VBP'), ('strategies', 'NNS'), ('for', 'IN'), ('selectively', 'RB'), ('attending', 'VBG'), ('to', 'IN'), ('one', 'CD'), ('part', 'NN'), ('at', 'IN'), ('a', 'DT'), ('time', 'NN'), ('76,86', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('expect', 'expect'), ('systems', 'system'), ('that', 'that'), ('use', 'use'), ('RNNs', 'rnn'), ('to', 'to'), ('understand', 'understand'), ('sentences', 'sentence'), ('or', 'or'), ('whole', 'whole'), ('documents', 'document'), ('will', 'will'), ('become', 'become'), ('much', 'much'), ('better', 'good'), ('when', 'when'), ('they', 'they'), ('learn', 'learn'), ('strategies', 'strategy'), ('for', 'for'), ('selectively', 'selectively'), ('attending', 'attend'), ('to', 'to'), ('one', 'one'), ('part', 'part'), ('at', 'at'), ('a', 'a'), ('time', 'time'), ('76,86', '7686'), ('.', '.')] 

 Dependency tags are: 
>> [(('We', 'expect'), 'nsubj'), (('expect', 'root'), 'root'), (('systems', 'expect'), 'obj'), (('that', 'use'), 'nsubj'), (('use', 'systems'), 'acl:relcl'), (('RNNs', 'use'), 'obj'), (('to', 'understand'), 'mark'), (('understand', 'use'), 'advcl'), (('sentences', 'understand'), 'obj'), (('or', 'documents'), 'cc'), (('whole', 'documents'), 'amod'), (('documents', 'sentences'), 'conj'), (('will', 'become'), 'aux'), (('become', 'expect'), 'conj'), (('much', 'better'), 'advmod'), (('better', 'become'), 'xcomp'), (('when', 'learn'), 'mark'), (('they', 'learn'), 'nsubj'), (('learn', 'better'), 'advcl'), (('strategies', 'learn'), 'obj'), (('for', 'attending'), 'mark'), (('selectively', 'attending'), 'advmod'), (('attending', 'strategies'), 'acl'), (('to', 'part'), 'case'), (('one', 'part'), 'nummod'), (('part', 'attending'), 'obl'), (('at', 'time'), 'case'), (('a', 'time'), 'det'), (('time', 'attending'), 'obl'), (('76,86', 'time'), 'nummod'), (('.', 'expect'), 'punct')]

 Named Entites are: 
>> [('one', 'CARDINAL'), ('76,86', 'CARDINAL')]

================================ Paragraph 226 =================================

Ultimately, major progress in artificial intelligence will come about  through systems that combine representation learning with complex  reasoning. Although deep learning and simple reasoning have been  used for speech and handwriting recognition for a long time, new  paradigms are needed to replace rule-based manipulation of symbolic  expressions by operations on large vectors101. ■ 


------------------- Sentence 1 -------------------

 Ultimately, major progress in artificial intelligence will come about  through systems that combine representation learning with complex  reasoning. 

Tokens are: 
>> ['Ultimately', ',', 'major', 'progress', 'in', 'artificial', 'intelligence', 'will', 'come', 'about', 'through', 'systems', 'that', 'combine', 'representation', 'learning', 'with', 'complex', 'reasoning', '.'] 

 UPOS tags are: 
>> [('Ultimately', 'ADV'), (',', 'PUNCT'), ('major', 'ADJ'), ('progress', 'NOUN'), ('in', 'ADP'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('will', 'AUX'), ('come', 'VERB'), ('about', 'ADP'), ('through', 'ADP'), ('systems', 'NOUN'), ('that', 'PRON'), ('combine', 'VERB'), ('representation', 'NOUN'), ('learning', 'NOUN'), ('with', 'ADP'), ('complex', 'ADJ'), ('reasoning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Ultimately', 'RB'), (',', ','), ('major', 'JJ'), ('progress', 'NN'), ('in', 'IN'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('will', 'MD'), ('come', 'VB'), ('about', 'IN'), ('through', 'IN'), ('systems', 'NNS'), ('that', 'WDT'), ('combine', 'VBP'), ('representation', 'NN'), ('learning', 'NN'), ('with', 'IN'), ('complex', 'JJ'), ('reasoning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Ultimately', 'ultimately'), (',', ','), ('major', 'major'), ('progress', 'progress'), ('in', 'in'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('will', 'will'), ('come', 'come'), ('about', 'about'), ('through', 'through'), ('systems', 'system'), ('that', 'that'), ('combine', 'combine'), ('representation', 'representation'), ('learning', 'learning'), ('with', 'with'), ('complex', 'complex'), ('reasoning', 'reasoning'), ('.', '.')] 

 Dependency tags are: 
>> [(('Ultimately', 'come'), 'advmod'), ((',', 'come'), 'punct'), (('major', 'progress'), 'amod'), (('progress', 'come'), 'nsubj'), (('in', 'intelligence'), 'case'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'progress'), 'nmod'), (('will', 'come'), 'aux'), (('come', 'root'), 'root'), (('about', 'come'), 'obl'), (('through', 'systems'), 'case'), (('systems', 'come'), 'obl'), (('that', 'combine'), 'nsubj'), (('combine', 'systems'), 'acl:relcl'), (('representation', 'learning'), 'compound'), (('learning', 'combine'), 'obj'), (('with', 'reasoning'), 'case'), (('complex', 'reasoning'), 'amod'), (('reasoning', 'combine'), 'obl'), (('.', 'come'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Although deep learning and simple reasoning have been  used for speech and handwriting recognition for a long time, new  paradigms are needed to replace rule-based manipulation of symbolic  expressions by operations on large vectors101. 

Tokens are: 
>> ['Although', 'deep', 'learning', 'and', 'simple', 'reasoning', 'have', 'been', 'used', 'for', 'speech', 'and', 'handwriting', 'recognition', 'for', 'a', 'long', 'time', ',', 'new', 'paradigms', 'are', 'needed', 'to', 'replace', 'rule', '-', 'based', 'manipulation', 'of', 'symbolic', 'expressions', 'by', 'operations', 'on', 'large', 'vectors', '101', '.'] 

 UPOS tags are: 
>> [('Although', 'SCONJ'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('and', 'CCONJ'), ('simple', 'ADJ'), ('reasoning', 'NOUN'), ('have', 'AUX'), ('been', 'AUX'), ('used', 'VERB'), ('for', 'ADP'), ('speech', 'NOUN'), ('and', 'CCONJ'), ('handwriting', 'NOUN'), ('recognition', 'NOUN'), ('for', 'ADP'), ('a', 'DET'), ('long', 'ADJ'), ('time', 'NOUN'), (',', 'PUNCT'), ('new', 'ADJ'), ('paradigms', 'NOUN'), ('are', 'AUX'), ('needed', 'VERB'), ('to', 'PART'), ('replace', 'VERB'), ('rule', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('manipulation', 'NOUN'), ('of', 'ADP'), ('symbolic', 'ADJ'), ('expressions', 'NOUN'), ('by', 'ADP'), ('operations', 'NOUN'), ('on', 'ADP'), ('large', 'ADJ'), ('vectors', 'NOUN'), ('101', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Although', 'IN'), ('deep', 'JJ'), ('learning', 'NN'), ('and', 'CC'), ('simple', 'JJ'), ('reasoning', 'NN'), ('have', 'VBP'), ('been', 'VBN'), ('used', 'VBN'), ('for', 'IN'), ('speech', 'NN'), ('and', 'CC'), ('handwriting', 'NN'), ('recognition', 'NN'), ('for', 'IN'), ('a', 'DT'), ('long', 'JJ'), ('time', 'NN'), (',', ','), ('new', 'JJ'), ('paradigms', 'NNS'), ('are', 'VBP'), ('needed', 'VBN'), ('to', 'TO'), ('replace', 'VB'), ('rule', 'NN'), ('-', 'HYPH'), ('based', 'VBN'), ('manipulation', 'NN'), ('of', 'IN'), ('symbolic', 'JJ'), ('expressions', 'NNS'), ('by', 'IN'), ('operations', 'NNS'), ('on', 'IN'), ('large', 'JJ'), ('vectors', 'NNS'), ('101', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('Although', 'although'), ('deep', 'deep'), ('learning', 'learning'), ('and', 'and'), ('simple', 'simple'), ('reasoning', 'reasoning'), ('have', 'have'), ('been', 'be'), ('used', 'use'), ('for', 'for'), ('speech', 'speech'), ('and', 'and'), ('handwriting', 'handwriting'), ('recognition', 'recognition'), ('for', 'for'), ('a', 'a'), ('long', 'long'), ('time', 'time'), (',', ','), ('new', 'new'), ('paradigms', 'paradigm'), ('are', 'be'), ('needed', 'need'), ('to', 'to'), ('replace', 'replace'), ('rule', 'rule'), ('-', '-'), ('based', 'base'), ('manipulation', 'manipulation'), ('of', 'of'), ('symbolic', 'symbolic'), ('expressions', 'expression'), ('by', 'by'), ('operations', 'operation'), ('on', 'on'), ('large', 'large'), ('vectors', 'vector'), ('101', '101'), ('.', '.')] 

 Dependency tags are: 
>> [(('Although', 'used'), 'mark'), (('deep', 'learning'), 'amod'), (('learning', 'used'), 'nsubj:pass'), (('and', 'reasoning'), 'cc'), (('simple', 'reasoning'), 'amod'), (('reasoning', 'learning'), 'conj'), (('have', 'used'), 'aux'), (('been', 'used'), 'aux:pass'), (('used', 'needed'), 'advcl'), (('for', 'recognition'), 'case'), (('speech', 'recognition'), 'compound'), (('and', 'handwriting'), 'cc'), (('handwriting', 'speech'), 'conj'), (('recognition', 'used'), 'obl'), (('for', 'time'), 'case'), (('a', 'time'), 'det'), (('long', 'time'), 'amod'), (('time', 'used'), 'obl'), ((',', 'used'), 'punct'), (('new', 'paradigms'), 'amod'), (('paradigms', 'needed'), 'nsubj:pass'), (('are', 'needed'), 'aux:pass'), (('needed', 'root'), 'root'), (('to', 'replace'), 'mark'), (('replace', 'needed'), 'xcomp'), (('rule', 'based'), 'obl:npmod'), (('-', 'based'), 'punct'), (('based', 'manipulation'), 'amod'), (('manipulation', 'replace'), 'obj'), (('of', 'expressions'), 'case'), (('symbolic', 'expressions'), 'amod'), (('expressions', 'manipulation'), 'nmod'), (('by', 'operations'), 'case'), (('operations', 'expressions'), 'nmod'), (('on', 'vectors'), 'case'), (('large', 'vectors'), 'amod'), (('vectors', 'operations'), 'nmod'), (('101', 'vectors'), 'nummod'), (('.', 'needed'), 'punct')]

 Named Entites are: 
>> [('101', 'CARDINAL')]

------------------- Sentence 3 -------------------

 ■ 

Tokens are: 
>> ['■'] 

 UPOS tags are: 
>> [('■', 'PROPN')] 

 XPOS tags are: 
>> [('■', 'NNP')] 

 Lemmas are: 
>> [('■', '■')] 

 Dependency tags are: 
>> [(('■', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 227 =================================

Received 25 February; accepted 1 May 2015. 


------------------- Sentence 1 -------------------

 Received 25 February; accepted 1 May 2015. 

Tokens are: 
>> ['Received', '25', 'February', ';', 'accepted', '1', 'May', '2015', '.'] 

 UPOS tags are: 
>> [('Received', 'VERB'), ('25', 'NUM'), ('February', 'PROPN'), (';', 'PUNCT'), ('accepted', 'VERB'), ('1', 'NUM'), ('May', 'PROPN'), ('2015', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Received', 'VBD'), ('25', 'CD'), ('February', 'NNP'), (';', ':'), ('accepted', 'VBD'), ('1', 'CD'), ('May', 'NNP'), ('2015', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('Received', 'receive'), ('25', '25'), ('February', 'February'), (';', ';'), ('accepted', 'accept'), ('1', '1'), ('May', 'May'), ('2015', '2015'), ('.', '.')] 

 Dependency tags are: 
>> [(('Received', 'root'), 'root'), (('25', 'February'), 'nummod'), (('February', 'Received'), 'obl:tmod'), ((';', 'accepted'), 'punct'), (('accepted', 'Received'), 'parataxis'), (('1', 'May'), 'nummod'), (('May', 'accepted'), 'obj'), (('2015', 'May'), 'nummod'), (('.', 'Received'), 'punct')]

 Named Entites are: 
>> [('25 February', 'DATE'), ('1 May 2015', 'DATE')]

================================ Paragraph 228 =================================

1. Krizhevsky, A., Sutskever, I. & Hinton, G. ImageNet classification with deep  convolutional neural networks. In Proc. Advances in Neural Information  Processing Systems 25 1090–1098 (2012). 


------------------- Sentence 1 -------------------

 1. Krizhevsky, A., Sutskever, I. & Hinton, G. Image 

Tokens are: 
>> ['1', '.', 'Krizhevsky', ',', 'A.', ',', 'Sutskever', ',', 'I.', '&', 'Hinton', ',', 'G.', 'Image'] 

 UPOS tags are: 
>> [('1', 'NUM'), ('.', 'PUNCT'), ('Krizhevsky', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), (',', 'PUNCT'), ('Sutskever', 'PROPN'), (',', 'PUNCT'), ('I.', 'PROPN'), ('&', 'CCONJ'), ('Hinton', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('Image', 'PROPN')] 

 XPOS tags are: 
>> [('1', 'LS'), ('.', '.'), ('Krizhevsky', 'NNP'), (',', ','), ('A.', 'NNP'), (',', ','), ('Sutskever', 'NNP'), (',', ','), ('I.', 'NNP'), ('&', 'CC'), ('Hinton', 'NNP'), (',', ','), ('G.', 'NNP'), ('Image', 'NNP')] 

 Lemmas are: 
>> [('1', '1'), ('.', '.'), ('Krizhevsky', 'Krizhevsky'), (',', ','), ('A.', 'A.'), (',', ','), ('Sutskever', 'Sutskever'), (',', ','), ('I.', 'i.'), ('&', '&'), ('Hinton', 'Hinton'), (',', ','), ('G.', 'G.'), ('Image', 'image')] 

 Dependency tags are: 
>> [(('1', 'Krizhevsky'), 'nummod'), (('.', '1'), 'punct'), (('Krizhevsky', 'root'), 'root'), ((',', 'A.'), 'punct'), (('A.', 'Krizhevsky'), 'conj'), ((',', 'Sutskever'), 'punct'), (('Sutskever', 'Krizhevsky'), 'conj'), ((',', 'I.'), 'punct'), (('I.', 'Krizhevsky'), 'conj'), (('&', 'Hinton'), 'cc'), (('Hinton', 'I.'), 'conj'), ((',', 'Krizhevsky'), 'punct'), (('G.', 'Image'), 'compound'), (('Image', 'Krizhevsky'), 'list')]

 Named Entites are: 
>> [('1', 'CARDINAL'), ('Krizhevsky, A.', 'ORG'), ('Sutskever', 'GPE'), ('I. & Hinton', 'ORG'), ('G. Image', 'PERSON')]

------------------- Sentence 2 -------------------

 Net classification with deep  convolutional neural networks. 

Tokens are: 
>> ['Net', 'classification', 'with', 'deep', 'convolutional', 'neural', 'networks', '.'] 

 UPOS tags are: 
>> [('Net', 'ADJ'), ('classification', 'NOUN'), ('with', 'ADP'), ('deep', 'ADJ'), ('convolutional', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Net', 'JJ'), ('classification', 'NN'), ('with', 'IN'), ('deep', 'JJ'), ('convolutional', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Net', 'net'), ('classification', 'classification'), ('with', 'with'), ('deep', 'deep'), ('convolutional', 'convolutional'), ('neural', 'neural'), ('networks', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('Net', 'classification'), 'amod'), (('classification', 'root'), 'root'), (('with', 'networks'), 'case'), (('deep', 'networks'), 'amod'), (('convolutional', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'classification'), 'nmod'), (('.', 'classification'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 In Proc. Advances in Neural Information  Processing Systems 25 1090–1098 (2012). 

Tokens are: 
>> ['In', 'Proc.', 'Advances', 'in', 'Neural', 'Information', 'Processing', 'Systems', '25', '1090–1098', '(', '2012', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'NOUN'), ('Advances', 'NOUN'), ('in', 'ADP'), ('Neural', 'ADJ'), ('Information', 'NOUN'), ('Processing', 'NOUN'), ('Systems', 'PROPN'), ('25', 'NUM'), ('1090–1098', 'NUM'), ('(', 'PUNCT'), ('2012', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NN'), ('Advances', 'NNS'), ('in', 'IN'), ('Neural', 'JJ'), ('Information', 'NN'), ('Processing', 'NN'), ('Systems', 'NNP'), ('25', 'CD'), ('1090–1098', 'CD'), ('(', '-LRB-'), ('2012', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'proc.'), ('Advances', 'advance'), ('in', 'in'), ('Neural', 'neural'), ('Information', 'information'), ('Processing', 'processing'), ('Systems', 'System'), ('25', '25'), ('1090–1098', '1090–1098'), ('(', '('), ('2012', '2012'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Advances'), 'case'), (('Proc.', 'Advances'), 'compound'), (('Advances', 'root'), 'root'), (('in', 'Processing'), 'case'), (('Neural', 'Information'), 'amod'), (('Information', 'Processing'), 'compound'), (('Processing', 'Advances'), 'nmod'), (('Systems', 'Processing'), 'appos'), (('25', 'Systems'), 'nummod'), (('1090–1098', 'Systems'), 'nummod'), (('(', '2012'), 'punct'), (('2012', 'Systems'), 'nmod:tmod'), ((')', '2012'), 'punct'), (('.', 'Advances'), 'punct')]

 Named Entites are: 
>> [('Neural Information  Processing Systems', 'ORG'), ('25 1090–1098', 'CARDINAL'), ('2012', 'DATE')]

================================ Paragraph 229 =================================

 This report was a breakthrough that used convolutional nets to almost halve  the error rate for object recognition, and precipitated the rapid adoption of  deep learning by the computer vision community. 


------------------- Sentence 1 -------------------

 This report was a breakthrough that used convolutional nets to almost halve  the error rate for object recognition, and precipitated the rapid adoption of  deep learning by the computer vision community. 

Tokens are: 
>> ['This', 'report', 'was', 'a', 'breakthrough', 'that', 'used', 'convolutional', 'nets', 'to', 'almost', 'halve', 'the', 'error', 'rate', 'for', 'object', 'recognition', ',', 'and', 'precipitated', 'the', 'rapid', 'adoption', 'of', 'deep', 'learning', 'by', 'the', 'computer', 'vision', 'community', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('report', 'NOUN'), ('was', 'AUX'), ('a', 'DET'), ('breakthrough', 'NOUN'), ('that', 'PRON'), ('used', 'VERB'), ('convolutional', 'ADJ'), ('nets', 'NOUN'), ('to', 'PART'), ('almost', 'ADV'), ('halve', 'VERB'), ('the', 'DET'), ('error', 'NOUN'), ('rate', 'NOUN'), ('for', 'ADP'), ('object', 'NOUN'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('precipitated', 'VERB'), ('the', 'DET'), ('rapid', 'ADJ'), ('adoption', 'NOUN'), ('of', 'ADP'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('by', 'ADP'), ('the', 'DET'), ('computer', 'NOUN'), ('vision', 'NOUN'), ('community', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('report', 'NN'), ('was', 'VBD'), ('a', 'DT'), ('breakthrough', 'NN'), ('that', 'WDT'), ('used', 'VBD'), ('convolutional', 'JJ'), ('nets', 'NNS'), ('to', 'TO'), ('almost', 'RB'), ('halve', 'VB'), ('the', 'DT'), ('error', 'NN'), ('rate', 'NN'), ('for', 'IN'), ('object', 'NN'), ('recognition', 'NN'), (',', ','), ('and', 'CC'), ('precipitated', 'VBD'), ('the', 'DT'), ('rapid', 'JJ'), ('adoption', 'NN'), ('of', 'IN'), ('deep', 'JJ'), ('learning', 'NN'), ('by', 'IN'), ('the', 'DT'), ('computer', 'NN'), ('vision', 'NN'), ('community', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('report', 'report'), ('was', 'be'), ('a', 'a'), ('breakthrough', 'breakthrough'), ('that', 'that'), ('used', 'use'), ('convolutional', 'convolutional'), ('nets', 'net'), ('to', 'to'), ('almost', 'almost'), ('halve', 'halve'), ('the', 'the'), ('error', 'error'), ('rate', 'rate'), ('for', 'for'), ('object', 'object'), ('recognition', 'recognition'), (',', ','), ('and', 'and'), ('precipitated', 'precipitate'), ('the', 'the'), ('rapid', 'rapid'), ('adoption', 'adoption'), ('of', 'of'), ('deep', 'deep'), ('learning', 'learning'), ('by', 'by'), ('the', 'the'), ('computer', 'computer'), ('vision', 'vision'), ('community', 'community'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'report'), 'det'), (('report', 'breakthrough'), 'nsubj'), (('was', 'breakthrough'), 'cop'), (('a', 'breakthrough'), 'det'), (('breakthrough', 'root'), 'root'), (('that', 'used'), 'nsubj'), (('used', 'breakthrough'), 'acl:relcl'), (('convolutional', 'nets'), 'amod'), (('nets', 'used'), 'obj'), (('to', 'halve'), 'mark'), (('almost', 'halve'), 'advmod'), (('halve', 'used'), 'xcomp'), (('the', 'rate'), 'det'), (('error', 'rate'), 'compound'), (('rate', 'halve'), 'obj'), (('for', 'recognition'), 'case'), (('object', 'recognition'), 'compound'), (('recognition', 'rate'), 'nmod'), ((',', 'precipitated'), 'punct'), (('and', 'precipitated'), 'cc'), (('precipitated', 'halve'), 'conj'), (('the', 'adoption'), 'det'), (('rapid', 'adoption'), 'amod'), (('adoption', 'precipitated'), 'obj'), (('of', 'learning'), 'case'), (('deep', 'learning'), 'amod'), (('learning', 'adoption'), 'nmod'), (('by', 'community'), 'case'), (('the', 'community'), 'det'), (('computer', 'community'), 'compound'), (('vision', 'community'), 'compound'), (('community', 'precipitated'), 'obl'), (('.', 'breakthrough'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 230 =================================

2. Farabet, C., Couprie, C., Najman, L. & LeCun, Y. Learning hierarchical features for  scene labeling. IEEE Trans. Pattern Anal. Mach. Intell. 35, 1915–1929 (2013).  


------------------- Sentence 1 -------------------

 2. Farabet, C., Couprie, C., Najman, L. & LeCun, Y. Learning hierarchical features for  scene labeling. 

Tokens are: 
>> ['2.', 'Farabet', ',', 'C.', ',', 'Couprie', ',', 'C.', ',', 'Najman', ',', 'L.', '&', 'LeCun', ',', 'Y.', 'Learning', 'hierarchical', 'features', 'for', 'scene', 'labeling', '.'] 

 UPOS tags are: 
>> [('2.', 'X'), ('Farabet', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), (',', 'PUNCT'), ('Couprie', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), (',', 'PUNCT'), ('Najman', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('&', 'CCONJ'), ('LeCun', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('Learning', 'VERB'), ('hierarchical', 'ADJ'), ('features', 'NOUN'), ('for', 'ADP'), ('scene', 'NOUN'), ('labeling', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('2.', 'LS'), ('Farabet', 'NNP'), (',', ','), ('C.', 'NNP'), (',', ','), ('Couprie', 'NNP'), (',', ','), ('C.', 'NNP'), (',', ','), ('Najman', 'NNP'), (',', ','), ('L.', 'NNP'), ('&', 'CC'), ('LeCun', 'NNP'), (',', ','), ('Y.', 'NNP'), ('Learning', 'VBG'), ('hierarchical', 'JJ'), ('features', 'NNS'), ('for', 'IN'), ('scene', 'NN'), ('labeling', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('2.', '2.'), ('Farabet', 'Farabet'), (',', ','), ('C.', 'C.'), (',', ','), ('Couprie', 'Couprie'), (',', ','), ('C.', 'C.'), (',', ','), ('Najman', 'Najman'), (',', ','), ('L.', 'L.'), ('&', '&'), ('LeCun', 'LeCun'), (',', ','), ('Y.', 'Y.'), ('Learning', 'learning'), ('hierarchical', 'hierarchical'), ('features', 'feature'), ('for', 'for'), ('scene', 'scene'), ('labeling', 'labeling'), ('.', '.')] 

 Dependency tags are: 
>> [(('2.', 'Farabet'), 'dep'), (('Farabet', 'root'), 'root'), ((',', 'C.'), 'punct'), (('C.', 'Farabet'), 'conj'), ((',', 'Couprie'), 'punct'), (('Couprie', 'Farabet'), 'conj'), ((',', 'C.'), 'punct'), (('C.', 'Farabet'), 'conj'), ((',', 'Najman'), 'punct'), (('Najman', 'Farabet'), 'conj'), ((',', 'L.'), 'punct'), (('L.', 'Farabet'), 'conj'), (('&', 'LeCun'), 'cc'), (('LeCun', 'L.'), 'conj'), ((',', 'Learning'), 'punct'), (('Y.', 'Learning'), 'nsubj'), (('Learning', 'Farabet'), 'list'), (('hierarchical', 'features'), 'amod'), (('features', 'Learning'), 'obj'), (('for', 'labeling'), 'case'), (('scene', 'labeling'), 'compound'), (('labeling', 'features'), 'nmod'), (('.', 'Farabet'), 'punct')]

 Named Entites are: 
>> [('2.', 'CARDINAL'), ('Farabet', 'GPE'), ('C.', 'NORP'), ('Couprie', 'GPE'), ('C.', 'NORP'), ('Najman', 'GPE'), ('L. & LeCun', 'GPE')]

------------------- Sentence 2 -------------------

 IEEE Trans. Pattern Anal. Mach. Intell. 35, 1915–1929 (2013). 

Tokens are: 
>> ['IEEE', 'Trans', '.', 'Pattern', 'Anal', '.', 'Mach', '.', 'Intell.', '35', ',', '1915–1929', '(', '2013', ')', '.'] 

 UPOS tags are: 
>> [('IEEE', 'PROPN'), ('Trans', 'PROPN'), ('.', 'PUNCT'), ('Pattern', 'PROPN'), ('Anal', 'PROPN'), ('.', 'PUNCT'), ('Mach', 'PROPN'), ('.', 'PUNCT'), ('Intell.', 'PROPN'), ('35', 'NUM'), (',', 'PUNCT'), ('1915–1929', 'NUM'), ('(', 'PUNCT'), ('2013', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IEEE', 'NNP'), ('Trans', 'NNP'), ('.', '.'), ('Pattern', 'NNP'), ('Anal', 'NNP'), ('.', '.'), ('Mach', 'NNP'), ('.', '.'), ('Intell.', 'NNP'), ('35', 'CD'), (',', ','), ('1915–1929', 'CD'), ('(', '-LRB-'), ('2013', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('IEEE', 'IEEE'), ('Trans', 'Trans'), ('.', '.'), ('Pattern', 'Pattern'), ('Anal', 'Anal'), ('.', '.'), ('Mach', 'Mach'), ('.', '.'), ('Intell.', 'Intell.'), ('35', '35'), (',', ','), ('1915–1929', '1915–1929'), ('(', '('), ('2013', '2013'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('IEEE', 'Trans'), 'compound'), (('Trans', 'root'), 'root'), (('.', 'Trans'), 'punct'), (('Pattern', 'Trans'), 'appos'), (('Anal', 'Pattern'), 'flat'), (('.', 'Pattern'), 'punct'), (('Mach', 'Pattern'), 'list'), (('.', 'Intell.'), 'punct'), (('Intell.', 'Pattern'), 'list'), (('35', 'Intell.'), 'dep'), ((',', '1915–1929'), 'punct'), (('1915–1929', 'Intell.'), 'nmod:tmod'), (('(', '2013'), 'punct'), (('2013', '1915–1929'), 'nmod:tmod'), ((')', '2013'), 'punct'), (('.', 'Trans'), 'punct')]

 Named Entites are: 
>> [('Intell. 35, 1915–1929 (2013)', 'DATE')]

================================ Paragraph 231 =================================

3. Tompson, J., Jain, A., LeCun, Y. & Bregler, C. Joint training of a convolutional  network and a graphical model for human pose estimation. In Proc. Advances in  Neural Information Processing Systems 27 1799–1807 (2014).  


------------------- Sentence 1 -------------------

 3. Tompson, J., Jain, A., LeCun, Y. & Bregler, C. Joint training of a convolutional  network and a graphical model for human pose estimation. 

Tokens are: 
>> ['3', '.', 'Tompson', ',', 'J.', ',', 'Jain', ',', 'A.', ',', 'LeCun', ',', 'Y.', '&', 'Bregler', ',', 'C.', 'Joint', 'training', 'of', 'a', 'convolutional', 'network', 'and', 'a', 'graphical', 'model', 'for', 'human', 'pose', 'estimation', '.'] 

 UPOS tags are: 
>> [('3', 'NUM'), ('.', 'PUNCT'), ('Tompson', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), (',', 'PUNCT'), ('Jain', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), (',', 'PUNCT'), ('LeCun', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('&', 'CCONJ'), ('Bregler', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), ('Joint', 'ADJ'), ('training', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('convolutional', 'ADJ'), ('network', 'NOUN'), ('and', 'CCONJ'), ('a', 'DET'), ('graphical', 'ADJ'), ('model', 'NOUN'), ('for', 'ADP'), ('human', 'ADJ'), ('pose', 'NOUN'), ('estimation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('3', 'LS'), ('.', '.'), ('Tompson', 'NNP'), (',', ','), ('J.', 'NNP'), (',', ','), ('Jain', 'NNP'), (',', ','), ('A.', 'NNP'), (',', ','), ('LeCun', 'NNP'), (',', ','), ('Y.', 'NNP'), ('&', 'CC'), ('Bregler', 'NNP'), (',', ','), ('C.', 'NNP'), ('Joint', 'JJ'), ('training', 'NN'), ('of', 'IN'), ('a', 'DT'), ('convolutional', 'JJ'), ('network', 'NN'), ('and', 'CC'), ('a', 'DT'), ('graphical', 'JJ'), ('model', 'NN'), ('for', 'IN'), ('human', 'JJ'), ('pose', 'NN'), ('estimation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('3', '3'), ('.', '.'), ('Tompson', 'Tompson'), (',', ','), ('J.', 'J.'), (',', ','), ('Jain', 'Jain'), (',', ','), ('A.', 'A.'), (',', ','), ('LeCun', 'LeCun'), (',', ','), ('Y.', 'Y.'), ('&', '&'), ('Bregler', 'Bregler'), (',', ','), ('C.', 'C.'), ('Joint', 'Joint'), ('training', 'training'), ('of', 'of'), ('a', 'a'), ('convolutional', 'convolutional'), ('network', 'network'), ('and', 'and'), ('a', 'a'), ('graphical', 'graphical'), ('model', 'model'), ('for', 'for'), ('human', 'human'), ('pose', 'pose'), ('estimation', 'estimation'), ('.', '.')] 

 Dependency tags are: 
>> [(('3', 'Tompson'), 'nummod'), (('.', '3'), 'punct'), (('Tompson', 'root'), 'root'), ((',', 'J.'), 'punct'), (('J.', 'Tompson'), 'conj'), ((',', 'Jain'), 'punct'), (('Jain', 'Tompson'), 'conj'), ((',', 'A.'), 'punct'), (('A.', 'Tompson'), 'conj'), ((',', 'LeCun'), 'punct'), (('LeCun', 'Tompson'), 'conj'), ((',', 'Y.'), 'punct'), (('Y.', 'Tompson'), 'conj'), (('&', 'Bregler'), 'cc'), (('Bregler', 'Tompson'), 'conj'), ((',', 'training'), 'punct'), (('C.', 'training'), 'compound'), (('Joint', 'training'), 'amod'), (('training', 'Tompson'), 'conj'), (('of', 'network'), 'case'), (('a', 'network'), 'det'), (('convolutional', 'network'), 'amod'), (('network', 'training'), 'nmod'), (('and', 'model'), 'cc'), (('a', 'model'), 'det'), (('graphical', 'model'), 'amod'), (('model', 'Tompson'), 'conj'), (('for', 'estimation'), 'case'), (('human', 'estimation'), 'amod'), (('pose', 'estimation'), 'compound'), (('estimation', 'model'), 'nmod'), (('.', 'Tompson'), 'punct')]

 Named Entites are: 
>> [('3', 'CARDINAL'), ('Tompson, J., Jain, A.', 'ORG'), ('LeCun', 'GPE'), ('Y. & Bregler', 'ORG')]

------------------- Sentence 2 -------------------

 In Proc. Advances in  Neural Information Processing Systems 27 1799–1807 (2014). 

Tokens are: 
>> ['In', 'Proc.', 'Advances', 'in', 'Neural', 'Information', 'Processing', 'Systems', '27', '1799–1807', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'NOUN'), ('Advances', 'NOUN'), ('in', 'ADP'), ('Neural', 'ADJ'), ('Information', 'NOUN'), ('Processing', 'NOUN'), ('Systems', 'NOUN'), ('27', 'NUM'), ('1799–1807', 'NUM'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NN'), ('Advances', 'NNS'), ('in', 'IN'), ('Neural', 'JJ'), ('Information', 'NN'), ('Processing', 'NN'), ('Systems', 'NNS'), ('27', 'CD'), ('1799–1807', 'CD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'proc.'), ('Advances', 'advance'), ('in', 'in'), ('Neural', 'neural'), ('Information', 'information'), ('Processing', 'processing'), ('Systems', 'system'), ('27', '27'), ('1799–1807', '1799–1807'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Advances'), 'case'), (('Proc.', 'Advances'), 'compound'), (('Advances', 'root'), 'root'), (('in', 'Systems'), 'case'), (('Neural', 'Information'), 'amod'), (('Information', 'Systems'), 'compound'), (('Processing', 'Systems'), 'compound'), (('Systems', 'Advances'), 'nmod'), (('27', 'Systems'), 'nummod'), (('1799–1807', '27'), 'flat'), (('(', '2014'), 'punct'), (('2014', 'Systems'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'Advances'), 'punct')]

 Named Entites are: 
>> [('Neural Information Processing Systems', 'ORG'), ('27 1799–1807', 'CARDINAL'), ('2014', 'DATE')]

================================ Paragraph 232 =================================

4. Szegedy, C. et al. Going deeper with convolutions. Preprint at http://arxiv.org/ abs/1409.4842 (2014).  


------------------- Sentence 1 -------------------

 4. Szegedy, C. et al. Going deeper with convolutions. 

Tokens are: 
>> ['4', '.', 'Szegedy', ',', 'C.', 'et', 'al.', 'Going', 'deeper', 'with', 'convolutions', '.'] 

 UPOS tags are: 
>> [('4', 'NUM'), ('.', 'PUNCT'), ('Szegedy', 'VERB'), (',', 'PUNCT'), ('C.', 'X'), ('et', 'X'), ('al.', 'X'), ('Going', 'VERB'), ('deeper', 'ADJ'), ('with', 'ADP'), ('convolutions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('4', 'LS'), ('.', '.'), ('Szegedy', 'VBN'), (',', ','), ('C.', 'FW'), ('et', 'FW'), ('al.', 'FW'), ('Going', 'VBG'), ('deeper', 'JJR'), ('with', 'IN'), ('convolutions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('4', '4'), ('.', '.'), ('Szegedy', 'szegedy'), (',', ','), ('C.', 'C.'), ('et', 'et'), ('al.', 'al.'), ('Going', 'go'), ('deeper', 'deep'), ('with', 'with'), ('convolutions', 'convolution'), ('.', '.')] 

 Dependency tags are: 
>> [(('4', 'Going'), 'nummod'), (('.', '4'), 'punct'), (('Szegedy', 'Going'), 'advcl'), ((',', 'Szegedy'), 'punct'), (('C.', 'Going'), 'nsubj'), (('et', 'al.'), 'cc'), (('al.', 'C.'), 'conj'), (('Going', 'root'), 'root'), (('deeper', 'Going'), 'xcomp'), (('with', 'convolutions'), 'case'), (('convolutions', 'Going'), 'obl'), (('.', 'Going'), 'punct')]

 Named Entites are: 
>> [('4', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Preprint at http://arxiv.org/ abs/1409.4842 (2014). 

Tokens are: 
>> ['Preprint', 'at', 'http://arxiv.org/', 'abs/1409.4842', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('Preprint', 'NOUN'), ('at', 'ADP'), ('http://arxiv.org/', 'X'), ('abs/1409.4842', 'NUM'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Preprint', 'NN'), ('at', 'IN'), ('http://arxiv.org/', 'ADD'), ('abs/1409.4842', 'CD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Preprint', 'preprint'), ('at', 'at'), ('http://arxiv.org/', 'http://arxiv.org/'), ('abs/1409.4842', 'abs/1409.4842'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Preprint', 'root'), 'root'), (('at', 'http://arxiv.org/'), 'case'), (('http://arxiv.org/', 'Preprint'), 'nmod'), (('abs/1409.4842', 'Preprint'), 'appos'), (('(', '2014'), 'punct'), (('2014', 'abs/1409.4842'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'Preprint'), 'punct')]

 Named Entites are: 
>> [('2014', 'DATE')]

================================ Paragraph 233 =================================

5. Mikolov, T., Deoras, A., Povey, D., Burget, L. & Cernocky, J. Strategies for training  large scale neural network language models. In Proc. Automatic Speech  Recognition and Understanding 196–201 (2011).  


------------------- Sentence 1 -------------------

 5. Mikolov, T., Deoras, A., Povey, D., Burget, L. & Cernocky, J. Strategies for training  large scale neural network language models. 

Tokens are: 
>> ['5', '.', 'Mikolov', ',', 'T.', ',', 'Deoras', ',', 'A.', ',', 'Povey', ',', 'D.', ',', 'Burget', ',', 'L.', '&', 'Cernocky', ',', 'J.', 'Strategies', 'for', 'training', 'large', 'scale', 'neural', 'network', 'language', 'models', '.'] 

 UPOS tags are: 
>> [('5', 'NUM'), ('.', 'PUNCT'), ('Mikolov', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), (',', 'PUNCT'), ('Deoras', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), (',', 'PUNCT'), ('Povey', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), (',', 'PUNCT'), ('Burget', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('&', 'CCONJ'), ('Cernocky', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('Strategies', 'PROPN'), ('for', 'SCONJ'), ('training', 'VERB'), ('large', 'ADJ'), ('scale', 'NOUN'), ('neural', 'ADJ'), ('network', 'NOUN'), ('language', 'NOUN'), ('models', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('5', 'LS'), ('.', '.'), ('Mikolov', 'NNP'), (',', ','), ('T.', 'NNP'), (',', ','), ('Deoras', 'NNP'), (',', ','), ('A.', 'NNP'), (',', ','), ('Povey', 'NNP'), (',', ','), ('D.', 'NNP'), (',', ','), ('Burget', 'NNP'), (',', ','), ('L.', 'NNP'), ('&', 'CC'), ('Cernocky', 'NNP'), (',', ','), ('J.', 'NNP'), ('Strategies', 'NNPS'), ('for', 'IN'), ('training', 'VBG'), ('large', 'JJ'), ('scale', 'NN'), ('neural', 'JJ'), ('network', 'NN'), ('language', 'NN'), ('models', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('5', '5'), ('.', '.'), ('Mikolov', 'Mikolov'), (',', ','), ('T.', 'T.'), (',', ','), ('Deoras', 'Deoras'), (',', ','), ('A.', 'A.'), (',', ','), ('Povey', 'Povey'), (',', ','), ('D.', 'D.'), (',', ','), ('Burget', 'Burget'), (',', ','), ('L.', 'L.'), ('&', '&'), ('Cernocky', 'Cernocky'), (',', ','), ('J.', 'J.'), ('Strategies', 'Strategy'), ('for', 'for'), ('training', 'train'), ('large', 'large'), ('scale', 'scale'), ('neural', 'neural'), ('network', 'network'), ('language', 'language'), ('models', 'model'), ('.', '.')] 

 Dependency tags are: 
>> [(('5', 'Mikolov'), 'nummod'), (('.', '5'), 'punct'), (('Mikolov', 'root'), 'root'), ((',', 'T.'), 'punct'), (('T.', 'Mikolov'), 'conj'), ((',', 'Deoras'), 'punct'), (('Deoras', 'Mikolov'), 'conj'), ((',', 'A.'), 'punct'), (('A.', 'Mikolov'), 'conj'), ((',', 'Povey'), 'punct'), (('Povey', 'Mikolov'), 'conj'), ((',', 'D.'), 'punct'), (('D.', 'Mikolov'), 'conj'), ((',', 'Burget'), 'punct'), (('Burget', 'Mikolov'), 'conj'), ((',', 'L.'), 'punct'), (('L.', 'Mikolov'), 'conj'), (('&', 'Cernocky'), 'cc'), (('Cernocky', 'L.'), 'conj'), ((',', 'Strategies'), 'punct'), (('J.', 'Strategies'), 'compound'), (('Strategies', 'Mikolov'), 'conj'), (('for', 'training'), 'mark'), (('training', 'Strategies'), 'acl'), (('large', 'models'), 'amod'), (('scale', 'models'), 'compound'), (('neural', 'network'), 'amod'), (('network', 'models'), 'compound'), (('language', 'models'), 'compound'), (('models', 'training'), 'obj'), (('.', 'Mikolov'), 'punct')]

 Named Entites are: 
>> [('5', 'CARDINAL'), ('Mikolov, T., Deoras, A.', 'ORG'), ('Povey', 'GPE'), ('D.', 'NORP'), ('Burget', 'GPE'), ('L. & Cernocky', 'ORG'), ('J. Strategies', 'ORG')]

------------------- Sentence 2 -------------------

 In Proc. Automatic Speech  Recognition and Understanding 196–201 (2011). 

Tokens are: 
>> ['In', 'Proc.', 'Automatic', 'Speech', 'Recognition', 'and', 'Understanding', '196–201', '(', '2011', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('Automatic', 'ADJ'), ('Speech', 'PROPN'), ('Recognition', 'NOUN'), ('and', 'CCONJ'), ('Understanding', 'PROPN'), ('196–201', 'NUM'), ('(', 'PUNCT'), ('2011', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('Automatic', 'JJ'), ('Speech', 'NNP'), ('Recognition', 'NN'), ('and', 'CC'), ('Understanding', 'NNP'), ('196–201', 'CD'), ('(', '-LRB-'), ('2011', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('Automatic', 'automatic'), ('Speech', 'Speech'), ('Recognition', 'recognition'), ('and', 'and'), ('Understanding', 'Understanding'), ('196–201', '196–201'), ('(', '('), ('2011', '2011'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Recognition'), 'case'), (('Proc.', 'Recognition'), 'compound'), (('Automatic', 'Recognition'), 'amod'), (('Speech', 'Recognition'), 'compound'), (('Recognition', 'root'), 'root'), (('and', 'Understanding'), 'cc'), (('Understanding', 'Recognition'), 'conj'), (('196–201', 'Understanding'), 'nummod'), (('(', '2011'), 'punct'), (('2011', 'Understanding'), 'nmod:tmod'), ((')', '2011'), 'punct'), (('.', 'Recognition'), 'punct')]

 Named Entites are: 
>> [('Proc. Automatic Speech  Recognition and Understanding 196–201', 'LAW'), ('2011', 'DATE')]

================================ Paragraph 234 =================================

6. Hinton, G. et al. Deep neural networks for acoustic modeling in speech  recognition. IEEE Signal Processing Magazine 29, 82–97 (2012). 


------------------- Sentence 1 -------------------

 6. Hinton, G. et al. 

Tokens are: 
>> ['6', '.', 'Hinton', ',', 'G.', 'et', 'al.'] 

 UPOS tags are: 
>> [('6', 'NUM'), ('.', 'PUNCT'), ('Hinton', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('et', 'X'), ('al.', 'X')] 

 XPOS tags are: 
>> [('6', 'LS'), ('.', '.'), ('Hinton', 'NNP'), (',', ','), ('G.', 'NNP'), ('et', 'FW'), ('al.', 'FW')] 

 Lemmas are: 
>> [('6', '6'), ('.', '.'), ('Hinton', 'Hinton'), (',', ','), ('G.', 'G.'), ('et', 'et'), ('al.', 'al.')] 

 Dependency tags are: 
>> [(('6', 'Hinton'), 'nummod'), (('.', '6'), 'punct'), (('Hinton', 'root'), 'root'), ((',', 'G.'), 'punct'), (('G.', 'Hinton'), 'conj'), (('et', 'al.'), 'cc'), (('al.', 'Hinton'), 'conj')]

 Named Entites are: 
>> [('6', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Deep neural networks for acoustic modeling in speech  recognition. 

Tokens are: 
>> ['Deep', 'neural', 'networks', 'for', 'acoustic', 'modeling', 'in', 'speech', 'recognition', '.'] 

 UPOS tags are: 
>> [('Deep', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('for', 'ADP'), ('acoustic', 'ADJ'), ('modeling', 'NOUN'), ('in', 'ADP'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Deep', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), ('for', 'IN'), ('acoustic', 'JJ'), ('modeling', 'NN'), ('in', 'IN'), ('speech', 'NN'), ('recognition', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Deep', 'deep'), ('neural', 'neural'), ('networks', 'network'), ('for', 'for'), ('acoustic', 'acoustic'), ('modeling', 'modeling'), ('in', 'in'), ('speech', 'speech'), ('recognition', 'recognition'), ('.', '.')] 

 Dependency tags are: 
>> [(('Deep', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'root'), 'root'), (('for', 'modeling'), 'case'), (('acoustic', 'modeling'), 'amod'), (('modeling', 'networks'), 'nmod'), (('in', 'recognition'), 'case'), (('speech', 'recognition'), 'compound'), (('recognition', 'modeling'), 'nmod'), (('.', 'networks'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 IEEE Signal Processing Magazine 29, 82–97 (2012). 

Tokens are: 
>> ['IEEE', 'Signal', 'Processing', 'Magazine', '29', ',', '82–97', '(', '2012', ')', '.'] 

 UPOS tags are: 
>> [('IEEE', 'PROPN'), ('Signal', 'PROPN'), ('Processing', 'PROPN'), ('Magazine', 'PROPN'), ('29', 'NUM'), (',', 'PUNCT'), ('82–97', 'NUM'), ('(', 'PUNCT'), ('2012', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IEEE', 'NNP'), ('Signal', 'NNP'), ('Processing', 'NNP'), ('Magazine', 'NNP'), ('29', 'CD'), (',', ','), ('82–97', 'CD'), ('(', '-LRB-'), ('2012', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('IEEE', 'IEEE'), ('Signal', 'Signal'), ('Processing', 'processing'), ('Magazine', 'Magazine'), ('29', '29'), (',', ','), ('82–97', '82–97'), ('(', '('), ('2012', '2012'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('IEEE', 'Signal'), 'compound'), (('Signal', 'root'), 'root'), (('Processing', 'Magazine'), 'compound'), (('Magazine', 'Signal'), 'list'), (('29', 'Magazine'), 'dep'), ((',', '82–97'), 'punct'), (('82–97', 'Magazine'), 'list'), (('(', '2012'), 'punct'), (('2012', '82–97'), 'nmod:tmod'), ((')', '2012'), 'punct'), (('.', 'Signal'), 'punct')]

 Named Entites are: 
>> [('IEEE Signal Processing Magazine 29', 'ORG'), ('82–97', 'CARDINAL'), ('2012', 'DATE')]

================================ Paragraph 235 =================================

 This joint paper from the major speech recognition laboratories, summarizing  the breakthrough achieved with deep learning on the task of phonetic  classification for automatic speech recognition, was the first major industrial  application of deep learning. 


------------------- Sentence 1 -------------------

 This joint paper from the major speech recognition laboratories, summarizing  the breakthrough achieved with deep learning on the task of phonetic  classification for automatic speech recognition, was the first major industrial  application of deep learning. 

Tokens are: 
>> ['This', 'joint', 'paper', 'from', 'the', 'major', 'speech', 'recognition', 'laboratories', ',', 'summarizing', 'the', 'breakthrough', 'achieved', 'with', 'deep', 'learning', 'on', 'the', 'task', 'of', 'phonetic', 'classification', 'for', 'automatic', 'speech', 'recognition', ',', 'was', 'the', 'first', 'major', 'industrial', 'application', 'of', 'deep', 'learning', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('joint', 'ADJ'), ('paper', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('major', 'ADJ'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('laboratories', 'NOUN'), (',', 'PUNCT'), ('summarizing', 'VERB'), ('the', 'DET'), ('breakthrough', 'NOUN'), ('achieved', 'VERB'), ('with', 'ADP'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('on', 'ADP'), ('the', 'DET'), ('task', 'NOUN'), ('of', 'ADP'), ('phonetic', 'ADJ'), ('classification', 'NOUN'), ('for', 'ADP'), ('automatic', 'ADJ'), ('speech', 'NOUN'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('was', 'AUX'), ('the', 'DET'), ('first', 'ADJ'), ('major', 'ADJ'), ('industrial', 'ADJ'), ('application', 'NOUN'), ('of', 'ADP'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('joint', 'JJ'), ('paper', 'NN'), ('from', 'IN'), ('the', 'DT'), ('major', 'JJ'), ('speech', 'NN'), ('recognition', 'NN'), ('laboratories', 'NNS'), (',', ','), ('summarizing', 'VBG'), ('the', 'DT'), ('breakthrough', 'NN'), ('achieved', 'VBN'), ('with', 'IN'), ('deep', 'JJ'), ('learning', 'NN'), ('on', 'IN'), ('the', 'DT'), ('task', 'NN'), ('of', 'IN'), ('phonetic', 'JJ'), ('classification', 'NN'), ('for', 'IN'), ('automatic', 'JJ'), ('speech', 'NN'), ('recognition', 'NN'), (',', ','), ('was', 'VBD'), ('the', 'DT'), ('first', 'JJ'), ('major', 'JJ'), ('industrial', 'JJ'), ('application', 'NN'), ('of', 'IN'), ('deep', 'JJ'), ('learning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('joint', 'joint'), ('paper', 'paper'), ('from', 'from'), ('the', 'the'), ('major', 'major'), ('speech', 'speech'), ('recognition', 'recognition'), ('laboratories', 'laboratory'), (',', ','), ('summarizing', 'summarize'), ('the', 'the'), ('breakthrough', 'breakthrough'), ('achieved', 'achieve'), ('with', 'with'), ('deep', 'deep'), ('learning', 'learning'), ('on', 'on'), ('the', 'the'), ('task', 'task'), ('of', 'of'), ('phonetic', 'phonetic'), ('classification', 'classification'), ('for', 'for'), ('automatic', 'automatic'), ('speech', 'speech'), ('recognition', 'recognition'), (',', ','), ('was', 'be'), ('the', 'the'), ('first', 'first'), ('major', 'major'), ('industrial', 'industrial'), ('application', 'application'), ('of', 'of'), ('deep', 'deep'), ('learning', 'learning'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'paper'), 'det'), (('joint', 'paper'), 'amod'), (('paper', 'application'), 'nsubj'), (('from', 'laboratories'), 'case'), (('the', 'laboratories'), 'det'), (('major', 'laboratories'), 'amod'), (('speech', 'recognition'), 'compound'), (('recognition', 'laboratories'), 'compound'), (('laboratories', 'paper'), 'nmod'), ((',', 'paper'), 'punct'), (('summarizing', 'paper'), 'acl'), (('the', 'breakthrough'), 'det'), (('breakthrough', 'summarizing'), 'obj'), (('achieved', 'breakthrough'), 'acl'), (('with', 'learning'), 'case'), (('deep', 'learning'), 'amod'), (('learning', 'achieved'), 'obl'), (('on', 'task'), 'case'), (('the', 'task'), 'det'), (('task', 'achieved'), 'obl'), (('of', 'classification'), 'case'), (('phonetic', 'classification'), 'amod'), (('classification', 'task'), 'nmod'), (('for', 'recognition'), 'case'), (('automatic', 'recognition'), 'amod'), (('speech', 'recognition'), 'compound'), (('recognition', 'classification'), 'nmod'), ((',', 'application'), 'punct'), (('was', 'application'), 'cop'), (('the', 'application'), 'det'), (('first', 'application'), 'amod'), (('major', 'application'), 'amod'), (('industrial', 'application'), 'amod'), (('application', 'root'), 'root'), (('of', 'learning'), 'case'), (('deep', 'learning'), 'amod'), (('learning', 'application'), 'nmod'), (('.', 'application'), 'punct')]

 Named Entites are: 
>> [('first', 'ORDINAL')]

================================ Paragraph 236 =================================

7. Sainath, T., Mohamed, A.-R., Kingsbury, B. & Ramabhadran, B. Deep  convolutional neural networks for LVCSR. In Proc. Acoustics, Speech and Signal  Processing 8614–8618 (2013).  


------------------- Sentence 1 -------------------

 7. Sainath, T., Mohamed, A.-R., Kingsbury, B. & Ramabhadran, B. Deep  convolutional neural networks for LVCSR. 

Tokens are: 
>> ['7', '.', 'Sainath', ',', 'T.', ',', 'Mohamed', ',', 'A.-R.', ',', 'Kingsbury', ',', 'B.', '&', 'Ramabhadran', ',', 'B.', 'Deep', 'convolutional', 'neural', 'networks', 'for', 'LVCSR', '.'] 

 UPOS tags are: 
>> [('7', 'NUM'), ('.', 'PUNCT'), ('Sainath', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), (',', 'PUNCT'), ('Mohamed', 'PROPN'), (',', 'PUNCT'), ('A.-R.', 'PROPN'), (',', 'PUNCT'), ('Kingsbury', 'PROPN'), (',', 'PUNCT'), ('B.', 'PROPN'), ('&', 'CCONJ'), ('Ramabhadran', 'PROPN'), (',', 'PUNCT'), ('B.', 'PROPN'), ('Deep', 'ADJ'), ('convolutional', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('for', 'ADP'), ('LVCSR', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('7', 'LS'), ('.', '.'), ('Sainath', 'NNP'), (',', ','), ('T.', 'NNP'), (',', ','), ('Mohamed', 'NNP'), (',', ','), ('A.-R.', 'NNP'), (',', ','), ('Kingsbury', 'NNP'), (',', ','), ('B.', 'NNP'), ('&', 'CC'), ('Ramabhadran', 'NNP'), (',', ','), ('B.', 'NNP'), ('Deep', 'JJ'), ('convolutional', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), ('for', 'IN'), ('LVCSR', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('7', '7'), ('.', '.'), ('Sainath', 'Sainath'), (',', ','), ('T.', 'T.'), (',', ','), ('Mohamed', 'Mohamed'), (',', ','), ('A.-R.', 'A.-R.'), (',', ','), ('Kingsbury', 'Kingsbury'), (',', ','), ('B.', 'B.'), ('&', '&'), ('Ramabhadran', 'Ramabhadran'), (',', ','), ('B.', 'B.'), ('Deep', 'deep'), ('convolutional', 'convolutional'), ('neural', 'neural'), ('networks', 'network'), ('for', 'for'), ('LVCSR', 'LVCSR'), ('.', '.')] 

 Dependency tags are: 
>> [(('7', 'Sainath'), 'nummod'), (('.', '7'), 'punct'), (('Sainath', 'root'), 'root'), ((',', 'T.'), 'punct'), (('T.', 'Sainath'), 'conj'), ((',', 'Mohamed'), 'punct'), (('Mohamed', 'Sainath'), 'conj'), ((',', 'A.-R.'), 'punct'), (('A.-R.', 'Sainath'), 'conj'), ((',', 'Kingsbury'), 'punct'), (('Kingsbury', 'Sainath'), 'conj'), ((',', 'B.'), 'punct'), (('B.', 'Sainath'), 'conj'), (('&', 'Ramabhadran'), 'cc'), (('Ramabhadran', 'B.'), 'conj'), ((',', 'networks'), 'punct'), (('B.', 'networks'), 'compound'), (('Deep', 'networks'), 'amod'), (('convolutional', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'Sainath'), 'conj'), (('for', 'LVCSR'), 'case'), (('LVCSR', 'networks'), 'nmod'), (('.', 'Sainath'), 'punct')]

 Named Entites are: 
>> [('7. Sainath, T., Mohamed, A.-R., Kingsbury, B. & Ramabhadran', 'ORG'), ('B.', 'NORP'), ('LVCSR', 'ORG')]

------------------- Sentence 2 -------------------

 In Proc. Acoustics, Speech and Signal  Processing 8614–8618 (2013). 

Tokens are: 
>> ['In', 'Proc.', 'Acoustics', ',', 'Speech', 'and', 'Signal', 'Processing', '8614–8618', '(', '2013', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'NOUN'), ('Acoustics', 'NOUN'), (',', 'PUNCT'), ('Speech', 'NOUN'), ('and', 'CCONJ'), ('Signal', 'NOUN'), ('Processing', 'NOUN'), ('8614–8618', 'NUM'), ('(', 'PUNCT'), ('2013', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NN'), ('Acoustics', 'NNS'), (',', ','), ('Speech', 'NN'), ('and', 'CC'), ('Signal', 'NN'), ('Processing', 'NN'), ('8614–8618', 'CD'), ('(', '-LRB-'), ('2013', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'proc.'), ('Acoustics', 'acoustic'), (',', ','), ('Speech', 'speech'), ('and', 'and'), ('Signal', 'signal'), ('Processing', 'processing'), ('8614–8618', '8614–8618'), ('(', '('), ('2013', '2013'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Acoustics'), 'case'), (('Proc.', 'Acoustics'), 'compound'), (('Acoustics', 'root'), 'root'), ((',', 'Speech'), 'punct'), (('Speech', 'Acoustics'), 'conj'), (('and', 'Signal'), 'cc'), (('Signal', 'Acoustics'), 'conj'), (('Processing', 'Acoustics'), 'conj'), (('8614–8618', 'Processing'), 'nummod'), (('(', '2013'), 'punct'), (('2013', 'Processing'), 'nmod:tmod'), ((')', '2013'), 'punct'), (('.', 'Acoustics'), 'punct')]

 Named Entites are: 
>> [('Proc. Acoustics', 'ORG'), ('8614–8618', 'CARDINAL'), ('2013', 'DATE')]

================================ Paragraph 237 =================================

8. Ma, J., Sheridan, R. P., Liaw, A., Dahl, G. E. & Svetnik, V. Deep neural nets as a  method for quantitative structure-activity relationships. J. Chem. Inf. Model. 55,  263–274 (2015).  


------------------- Sentence 1 -------------------

 8. Ma, J., Sheridan, R. P., Liaw, A., Dahl, G. E. & Svetnik, V. Deep neural nets as a  method for quantitative structure-activity relationships. 

Tokens are: 
>> ['8', '.', 'Ma', ',', 'J.', ',', 'Sheridan', ',', 'R.', 'P.', ',', 'Liaw', ',', 'A.', ',', 'Dahl', ',', 'G.', 'E.', '&', 'Svetnik', ',', 'V.', 'Deep', 'neural', 'nets', 'as', 'a', 'method', 'for', 'quantitative', 'structure', '-', 'activity', 'relationships', '.'] 

 UPOS tags are: 
>> [('8', 'NUM'), ('.', 'PUNCT'), ('Ma', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), (',', 'PUNCT'), ('Sheridan', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('P.', 'PROPN'), (',', 'PUNCT'), ('Liaw', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), (',', 'PUNCT'), ('Dahl', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('E.', 'PROPN'), ('&', 'CCONJ'), ('Svetnik', 'PROPN'), (',', 'PUNCT'), ('V.', 'PROPN'), ('Deep', 'ADJ'), ('neural', 'ADJ'), ('nets', 'NOUN'), ('as', 'ADP'), ('a', 'DET'), ('method', 'NOUN'), ('for', 'ADP'), ('quantitative', 'ADJ'), ('structure', 'NOUN'), ('-', 'PUNCT'), ('activity', 'NOUN'), ('relationships', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('8', 'LS'), ('.', '.'), ('Ma', 'NNP'), (',', ','), ('J.', 'NNP'), (',', ','), ('Sheridan', 'NNP'), (',', ','), ('R.', 'NNP'), ('P.', 'NNP'), (',', ','), ('Liaw', 'NNP'), (',', ','), ('A.', 'NNP'), (',', ','), ('Dahl', 'NNP'), (',', ','), ('G.', 'NNP'), ('E.', 'NNP'), ('&', 'CC'), ('Svetnik', 'NNP'), (',', ','), ('V.', 'NNP'), ('Deep', 'JJ'), ('neural', 'JJ'), ('nets', 'NNS'), ('as', 'IN'), ('a', 'DT'), ('method', 'NN'), ('for', 'IN'), ('quantitative', 'JJ'), ('structure', 'NN'), ('-', 'HYPH'), ('activity', 'NN'), ('relationships', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('8', '8'), ('.', '.'), ('Ma', 'ma'), (',', ','), ('J.', 'J.'), (',', ','), ('Sheridan', 'Sheridan'), (',', ','), ('R.', 'R.'), ('P.', 'P.'), (',', ','), ('Liaw', 'Liaw'), (',', ','), ('A.', 'A.'), (',', ','), ('Dahl', 'Dahl'), (',', ','), ('G.', 'G.'), ('E.', 'E.'), ('&', '&'), ('Svetnik', 'Svetnik'), (',', ','), ('V.', 'V.'), ('Deep', 'deep'), ('neural', 'neural'), ('nets', 'net'), ('as', 'as'), ('a', 'a'), ('method', 'method'), ('for', 'for'), ('quantitative', 'quantitative'), ('structure', 'structure'), ('-', '-'), ('activity', 'activity'), ('relationships', 'relationship'), ('.', '.')] 

 Dependency tags are: 
>> [(('8', 'Ma'), 'nummod'), (('.', '8'), 'punct'), (('Ma', 'root'), 'root'), ((',', 'J.'), 'punct'), (('J.', 'Ma'), 'conj'), ((',', 'Sheridan'), 'punct'), (('Sheridan', 'Ma'), 'conj'), ((',', 'R.'), 'punct'), (('R.', 'Ma'), 'conj'), (('P.', 'R.'), 'flat'), ((',', 'Liaw'), 'punct'), (('Liaw', 'Ma'), 'conj'), ((',', 'A.'), 'punct'), (('A.', 'Ma'), 'conj'), ((',', 'Dahl'), 'punct'), (('Dahl', 'Ma'), 'conj'), ((',', 'G.'), 'punct'), (('G.', 'Ma'), 'conj'), (('E.', 'G.'), 'flat'), (('&', 'Svetnik'), 'cc'), (('Svetnik', 'Ma'), 'conj'), ((',', 'nets'), 'punct'), (('V.', 'nets'), 'compound'), (('Deep', 'nets'), 'amod'), (('neural', 'nets'), 'amod'), (('nets', 'Ma'), 'conj'), (('as', 'method'), 'case'), (('a', 'method'), 'det'), (('method', 'nets'), 'nmod'), (('for', 'relationships'), 'case'), (('quantitative', 'relationships'), 'amod'), (('structure', 'activity'), 'compound'), (('-', 'activity'), 'punct'), (('activity', 'relationships'), 'compound'), (('relationships', 'method'), 'nmod'), (('.', 'Ma'), 'punct')]

 Named Entites are: 
>> [('8. Ma, J., Sheridan, R. P.', 'ORG'), ('Liaw, A., Dahl, G. E. & Svetnik', 'ORG')]

------------------- Sentence 2 -------------------

 J. Chem. Inf. Model. 55,  263–274 (2015). 

Tokens are: 
>> ['J.', 'Chem', '.', 'Inf.', 'Model.', '55', ',', '263–274', '(', '2015', ')', '.'] 

 UPOS tags are: 
>> [('J.', 'PROPN'), ('Chem', 'PROPN'), ('.', 'PUNCT'), ('Inf.', 'PROPN'), ('Model.', 'PROPN'), ('55', 'NUM'), (',', 'PUNCT'), ('263–274', 'NUM'), ('(', 'PUNCT'), ('2015', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('J.', 'NNP'), ('Chem', 'NNP'), ('.', '.'), ('Inf.', 'NNP'), ('Model.', 'NNP'), ('55', 'CD'), (',', ','), ('263–274', 'CD'), ('(', '-LRB-'), ('2015', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('J.', 'J.'), ('Chem', 'Chem'), ('.', '.'), ('Inf.', 'Inf.'), ('Model.', 'Model.'), ('55', '55'), (',', ','), ('263–274', '263–274'), ('(', '('), ('2015', '2015'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('J.', 'root'), 'root'), (('Chem', 'J.'), 'flat'), (('.', 'J.'), 'punct'), (('Inf.', 'J.'), 'list'), (('Model.', 'Inf.'), 'flat'), (('55', 'Inf.'), 'dep'), ((',', '263–274'), 'punct'), (('263–274', 'Inf.'), 'list'), (('(', '2015'), 'punct'), (('2015', '263–274'), 'nmod:tmod'), ((')', '2015'), 'punct'), (('.', 'J.'), 'punct')]

 Named Entites are: 
>> [('J. Chem.', 'PERSON'), ('55', 'CARDINAL'), ('263–274', 'CARDINAL'), ('2015', 'DATE')]

================================ Paragraph 238 =================================

9. Ciodaro, T., Deva, D., de Seixas, J. & Damazio, D. Online particle detection with  neural networks based on topological calorimetry information. J. Phys. Conf.  Series 368, 012030 (2012).  


------------------- Sentence 1 -------------------

 9. Ciodaro, T., Deva, D., de Seixas, J. & Damazio, D. Online particle detection with  neural networks based on topological calorimetry information. 

Tokens are: 
>> ['9', '.', 'Ciodaro', ',', 'T.', ',', 'Deva', ',', 'D.', ',', 'de', 'Seixas', ',', 'J.', '&', 'Damazio', ',', 'D.', 'Online', 'particle', 'detection', 'with', 'neural', 'networks', 'based', 'on', 'topological', 'calorimetry', 'information', '.'] 

 UPOS tags are: 
>> [('9', 'NUM'), ('.', 'PUNCT'), ('Ciodaro', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), (',', 'PUNCT'), ('Deva', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), (',', 'PUNCT'), ('de', 'PROPN'), ('Seixas', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('&', 'CCONJ'), ('Damazio', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('Online', 'ADJ'), ('particle', 'NOUN'), ('detection', 'NOUN'), ('with', 'ADP'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('based', 'VERB'), ('on', 'ADP'), ('topological', 'ADJ'), ('calorimetry', 'NOUN'), ('information', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('9', 'LS'), ('.', '.'), ('Ciodaro', 'NNP'), (',', ','), ('T.', 'NNP'), (',', ','), ('Deva', 'NNP'), (',', ','), ('D.', 'NNP'), (',', ','), ('de', 'NNP'), ('Seixas', 'NNP'), (',', ','), ('J.', 'NNP'), ('&', 'CC'), ('Damazio', 'NNP'), (',', ','), ('D.', 'NNP'), ('Online', 'JJ'), ('particle', 'NN'), ('detection', 'NN'), ('with', 'IN'), ('neural', 'JJ'), ('networks', 'NNS'), ('based', 'VBN'), ('on', 'IN'), ('topological', 'JJ'), ('calorimetry', 'NN'), ('information', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('9', '9'), ('.', '.'), ('Ciodaro', 'Ciodaro'), (',', ','), ('T.', 'T.'), (',', ','), ('Deva', 'Deva'), (',', ','), ('D.', 'D.'), (',', ','), ('de', 'de'), ('Seixas', 'Seixas'), (',', ','), ('J.', 'J.'), ('&', '&'), ('Damazio', 'Damazio'), (',', ','), ('D.', 'D.'), ('Online', 'Online'), ('particle', 'particle'), ('detection', 'detection'), ('with', 'with'), ('neural', 'neural'), ('networks', 'network'), ('based', 'base'), ('on', 'on'), ('topological', 'topological'), ('calorimetry', 'calorimetry'), ('information', 'information'), ('.', '.')] 

 Dependency tags are: 
>> [(('9', 'Ciodaro'), 'nummod'), (('.', '9'), 'punct'), (('Ciodaro', 'root'), 'root'), ((',', 'T.'), 'punct'), (('T.', 'Ciodaro'), 'conj'), ((',', 'Deva'), 'punct'), (('Deva', 'Ciodaro'), 'conj'), ((',', 'D.'), 'punct'), (('D.', 'Ciodaro'), 'conj'), ((',', 'de'), 'punct'), (('de', 'Ciodaro'), 'conj'), (('Seixas', 'D.'), 'flat'), ((',', 'J.'), 'punct'), (('J.', 'Ciodaro'), 'conj'), (('&', 'Damazio'), 'cc'), (('Damazio', 'J.'), 'conj'), ((',', 'detection'), 'punct'), (('D.', 'detection'), 'compound'), (('Online', 'detection'), 'amod'), (('particle', 'detection'), 'compound'), (('detection', 'Ciodaro'), 'conj'), (('with', 'networks'), 'case'), (('neural', 'networks'), 'amod'), (('networks', 'detection'), 'nmod'), (('based', 'networks'), 'acl'), (('on', 'information'), 'case'), (('topological', 'information'), 'amod'), (('calorimetry', 'information'), 'compound'), (('information', 'based'), 'obl'), (('.', 'detection'), 'punct')]

 Named Entites are: 
>> [('9. Ciodaro, T.', 'ORG'), ('Deva', 'GPE'), ('D.', 'NORP'), ('de Seixas', 'GPE'), ('J. & Damazio', 'ORG'), ('D.', 'GPE')]

------------------- Sentence 2 -------------------

 J. Phys. Conf.  Series 368, 012030 (2012). 

Tokens are: 
>> ['J.', 'Phys', '.', 'Conf.', 'Series', '368', ',', '012030', '(', '2012', ')', '.'] 

 UPOS tags are: 
>> [('J.', 'PROPN'), ('Phys', 'PROPN'), ('.', 'PUNCT'), ('Conf.', 'PROPN'), ('Series', 'PROPN'), ('368', 'NUM'), (',', 'PUNCT'), ('012030', 'NUM'), ('(', 'PUNCT'), ('2012', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('J.', 'NNP'), ('Phys', 'NNP'), ('.', '.'), ('Conf.', 'NNP'), ('Series', 'NNP'), ('368', 'CD'), (',', ','), ('012030', 'CD'), ('(', '-LRB-'), ('2012', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('J.', 'J.'), ('Phys', 'Phy'), ('.', '.'), ('Conf.', 'conf.'), ('Series', 'Series'), ('368', '368'), (',', ','), ('012030', '012030'), ('(', '('), ('2012', '2012'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('J.', 'root'), 'root'), (('Phys', 'J.'), 'flat'), (('.', 'J.'), 'punct'), (('Conf.', 'Series'), 'compound'), (('Series', 'J.'), 'list'), (('368', 'Series'), 'dep'), ((',', '012030'), 'punct'), (('012030', 'Series'), 'nummod'), (('(', '2012'), 'punct'), (('2012', '012030'), 'nmod:tmod'), ((')', '2012'), 'punct'), (('.', 'J.'), 'punct')]

 Named Entites are: 
>> [('368', 'CARDINAL'), ('012030', 'CARDINAL'), ('2012', 'DATE')]

================================ Paragraph 239 =================================

10. Kaggle. Higgs boson machine learning challenge. Kaggle https://www.kaggle. com/c/higgs-boson (2014).  


------------------- Sentence 1 -------------------

 10. Kaggle. 

Tokens are: 
>> ['10', '.', 'Kaggle', '.'] 

 UPOS tags are: 
>> [('10', 'NUM'), ('.', 'PUNCT'), ('Kaggle', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('10', 'LS'), ('.', '.'), ('Kaggle', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('10', '10'), ('.', '.'), ('Kaggle', 'Kaggle'), ('.', '.')] 

 Dependency tags are: 
>> [(('10', 'Kaggle'), 'nummod'), (('.', '10'), 'punct'), (('Kaggle', 'root'), 'root'), (('.', 'Kaggle'), 'punct')]

 Named Entites are: 
>> [('10', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Higgs boson machine learning challenge. 

Tokens are: 
>> ['Higgs', 'boson', 'machine', 'learning', 'challenge', '.'] 

 UPOS tags are: 
>> [('Higgs', 'PROPN'), ('boson', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('challenge', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Higgs', 'NNP'), ('boson', 'NN'), ('machine', 'NN'), ('learning', 'NN'), ('challenge', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Higgs', 'Higgs'), ('boson', 'boson'), ('machine', 'machine'), ('learning', 'learning'), ('challenge', 'challenge'), ('.', '.')] 

 Dependency tags are: 
>> [(('Higgs', 'machine'), 'compound'), (('boson', 'machine'), 'compound'), (('machine', 'challenge'), 'compound'), (('learning', 'challenge'), 'compound'), (('challenge', 'root'), 'root'), (('.', 'challenge'), 'punct')]

 Named Entites are: 
>> [('Higgs', 'PERSON')]

------------------- Sentence 3 -------------------

 Kaggle https://www.kaggle. com/c/higgs-boson (2014). 

Tokens are: 
>> ['Kaggle', 'https://www.kaggle.', 'com/c/higgs-boson', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('Kaggle', 'PROPN'), ('https://www.kaggle.', 'PROPN'), ('com/c/higgs-boson', 'NOUN'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Kaggle', 'NNP'), ('https://www.kaggle.', 'NNP'), ('com/c/higgs-boson', 'NN'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Kaggle', 'Kaggle'), ('https://www.kaggle.', 'https://www.kaggle.'), ('com/c/higgs-boson', 'com/c/higgs-boson'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Kaggle', 'root'), 'root'), (('https://www.kaggle.', 'Kaggle'), 'list'), (('com/c/higgs-boson', 'Kaggle'), 'list'), (('(', '2014'), 'punct'), (('2014', 'com/c/higgs-boson'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'Kaggle'), 'punct')]

 Named Entites are: 
>> [('2014', 'DATE')]

================================ Paragraph 240 =================================

11. Helmstaedter, M. et al. Connectomic reconstruction of the inner plexiform layer  in the mouse retina. Nature 500, 168–174 (2013).  


------------------- Sentence 1 -------------------

 11. 

Tokens are: 
>> ['11', '.'] 

 UPOS tags are: 
>> [('11', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('11', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('11', '11'), ('.', '.')] 

 Dependency tags are: 
>> [(('11', 'root'), 'root'), (('.', '11'), 'punct')]

 Named Entites are: 
>> [('11', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Helmstaedter, M. et al. Connectomic reconstruction of the inner plexiform layer  in the mouse retina. 

Tokens are: 
>> ['Helmstaedter', ',', 'M.', 'et', 'al.', 'Connectomic', 'reconstruction', 'of', 'the', 'inner', 'plexiform', 'layer', 'in', 'the', 'mouse', 'retina', '.'] 

 UPOS tags are: 
>> [('Helmstaedter', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('et', 'X'), ('al.', 'X'), ('Connectomic', 'PROPN'), ('reconstruction', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('inner', 'ADJ'), ('plexiform', 'NOUN'), ('layer', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('mouse', 'NOUN'), ('retina', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Helmstaedter', 'NNP'), (',', ','), ('M.', 'NNP'), ('et', 'FW'), ('al.', 'FW'), ('Connectomic', 'NNP'), ('reconstruction', 'NN'), ('of', 'IN'), ('the', 'DT'), ('inner', 'JJ'), ('plexiform', 'NN'), ('layer', 'NN'), ('in', 'IN'), ('the', 'DT'), ('mouse', 'NN'), ('retina', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Helmstaedter', 'Helmstaedter'), (',', ','), ('M.', 'M.'), ('et', 'et'), ('al.', 'al.'), ('Connectomic', 'Connectomic'), ('reconstruction', 'reconstruction'), ('of', 'of'), ('the', 'the'), ('inner', 'inner'), ('plexiform', 'plexiform'), ('layer', 'layer'), ('in', 'in'), ('the', 'the'), ('mouse', 'mouse'), ('retina', 'retina'), ('.', '.')] 

 Dependency tags are: 
>> [(('Helmstaedter', 'root'), 'root'), ((',', 'M.'), 'punct'), (('M.', 'Helmstaedter'), 'conj'), (('et', 'al.'), 'cc'), (('al.', 'Helmstaedter'), 'conj'), (('Connectomic', 'Helmstaedter'), 'flat'), (('reconstruction', 'Helmstaedter'), 'appos'), (('of', 'layer'), 'case'), (('the', 'layer'), 'det'), (('inner', 'layer'), 'amod'), (('plexiform', 'layer'), 'compound'), (('layer', 'reconstruction'), 'nmod'), (('in', 'retina'), 'case'), (('the', 'retina'), 'det'), (('mouse', 'retina'), 'compound'), (('retina', 'layer'), 'nmod'), (('.', 'Helmstaedter'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Nature 500, 168–174 (2013). 

Tokens are: 
>> ['Nature', '500', ',', '168–174', '(', '2013', ')', '.'] 

 UPOS tags are: 
>> [('Nature', 'NOUN'), ('500', 'NUM'), (',', 'PUNCT'), ('168–174', 'NUM'), ('(', 'PUNCT'), ('2013', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Nature', 'NN'), ('500', 'CD'), (',', ','), ('168–174', 'CD'), ('(', '-LRB-'), ('2013', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Nature', 'nature'), ('500', '500'), (',', ','), ('168–174', '168–174'), ('(', '('), ('2013', '2013'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Nature', 'root'), 'root'), (('500', 'Nature'), 'dep'), ((',', 'Nature'), 'punct'), (('168–174', 'Nature'), 'appos'), (('(', '2013'), 'punct'), (('2013', '168–174'), 'nmod:tmod'), ((')', '2013'), 'punct'), (('.', 'Nature'), 'punct')]

 Named Entites are: 
>> [('500', 'CARDINAL'), ('168–174', 'CARDINAL'), ('2013', 'DATE')]

================================ Paragraph 241 =================================

xtxt−1 xt+1x 


------------------- Sentence 1 -------------------

 xtxt−1 xt+1x 

Tokens are: 
>> ['xtxt−1', 'xt', '+1x'] 

 UPOS tags are: 
>> [('xtxt−1', 'PROPN'), ('xt', 'PROPN'), ('+1x', 'NUM')] 

 XPOS tags are: 
>> [('xtxt−1', 'NNP'), ('xt', 'NNP'), ('+1x', 'CD')] 

 Lemmas are: 
>> [('xtxt−1', 'xtxt−1'), ('xt', 'xt'), ('+1x', '+1x')] 

 Dependency tags are: 
>> [(('xtxt−1', 'xt'), 'compound'), (('xt', 'root'), 'root'), (('+1x', 'xt'), 'nmod:tmod')]

 Named Entites are: 
>> []

================================ Paragraph 242 =================================

Unfold 


------------------- Sentence 1 -------------------

 Unfold 

Tokens are: 
>> ['Unfold'] 

 UPOS tags are: 
>> [('Unfold', 'VERB')] 

 XPOS tags are: 
>> [('Unfold', 'VB')] 

 Lemmas are: 
>> [('Unfold', 'unfold')] 

 Dependency tags are: 
>> [(('Unfold', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 243 =================================

V W 


------------------- Sentence 1 -------------------

 V W 

Tokens are: 
>> ['V', 'W'] 

 UPOS tags are: 
>> [('V', 'PROPN'), ('W', 'PROPN')] 

 XPOS tags are: 
>> [('V', 'NNP'), ('W', 'NNP')] 

 Lemmas are: 
>> [('V', 'V'), ('W', 'W')] 

 Dependency tags are: 
>> [(('V', 'root'), 'root'), (('W', 'V'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 244 =================================

W W W W 


------------------- Sentence 1 -------------------

 W W W W 

Tokens are: 
>> ['W', 'W', 'W', 'W'] 

 UPOS tags are: 
>> [('W', 'X'), ('W', 'X'), ('W', 'PROPN'), ('W', 'PROPN')] 

 XPOS tags are: 
>> [('W', 'GW'), ('W', 'GW'), ('W', 'NNP'), ('W', 'NNP')] 

 Lemmas are: 
>> [('W', 'w'), ('W', 'w'), ('W', 'W'), ('W', 'W')] 

 Dependency tags are: 
>> [(('W', 'root'), 'root'), (('W', 'W'), 'goeswith'), (('W', 'W'), 'goeswith'), (('W', 'W'), 'goeswith')]

 Named Entites are: 
>> [('W W W W', 'FAC')]

================================ Paragraph 245 =================================

V V V 


------------------- Sentence 1 -------------------

 V V V 

Tokens are: 
>> ['V', 'V', 'V'] 

 UPOS tags are: 
>> [('V', 'PROPN'), ('V', 'PROPN'), ('V', 'PROPN')] 

 XPOS tags are: 
>> [('V', 'NNP'), ('V', 'NNP'), ('V', 'NNP')] 

 Lemmas are: 
>> [('V', 'V'), ('V', 'V'), ('V', 'V')] 

 Dependency tags are: 
>> [(('V', 'root'), 'root'), (('V', 'V'), 'flat'), (('V', 'V'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 246 =================================

U U U U 


------------------- Sentence 1 -------------------

 U U U U 

Tokens are: 
>> ['U', 'U', 'U', 'U'] 

 UPOS tags are: 
>> [('U', 'NOUN'), ('U', 'NOUN'), ('U', 'PROPN'), ('U', 'PROPN')] 

 XPOS tags are: 
>> [('U', 'NN'), ('U', 'NN'), ('U', 'NNP'), ('U', 'NNP')] 

 Lemmas are: 
>> [('U', 'U'), ('U', 'U'), ('U', 'U'), ('U', 'U')] 

 Dependency tags are: 
>> [(('U', 'root'), 'root'), (('U', 'U'), 'flat'), (('U', 'U'), 'flat'), (('U', 'U'), 'flat')]

 Named Entites are: 
>> []

================================ Paragraph 247 =================================

s 


------------------- Sentence 1 -------------------

 s 

Tokens are: 
>> ['s'] 

 UPOS tags are: 
>> [('s', 'VERB')] 

 XPOS tags are: 
>> [('s', 'VBZ')] 

 Lemmas are: 
>> [('s', 'be')] 

 Dependency tags are: 
>> [(('s', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 248 =================================

o 


------------------- Sentence 1 -------------------

 o 

Tokens are: 
>> ['o'] 

 UPOS tags are: 
>> [('o', 'PROPN')] 

 XPOS tags are: 
>> [('o', 'NNP')] 

 Lemmas are: 
>> [('o', 'o')] 

 Dependency tags are: 
>> [(('o', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 249 =================================

st−1 


------------------- Sentence 1 -------------------

 st−1 

Tokens are: 
>> ['st−1'] 

 UPOS tags are: 
>> [('st−1', 'PROPN')] 

 XPOS tags are: 
>> [('st−1', 'NNP')] 

 Lemmas are: 
>> [('st−1', 'st−1')] 

 Dependency tags are: 
>> [(('st−1', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 250 =================================

ot−1 ot 


------------------- Sentence 1 -------------------

 ot−1 ot 

Tokens are: 
>> ['ot−1', 'ot'] 

 UPOS tags are: 
>> [('ot−1', 'PROPN'), ('ot', 'PUNCT')] 

 XPOS tags are: 
>> [('ot−1', 'NNP'), ('ot', '.')] 

 Lemmas are: 
>> [('ot−1', 'ot−1'), ('ot', 'to')] 

 Dependency tags are: 
>> [(('ot−1', 'root'), 'root'), (('ot', 'ot−1'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 251 =================================

st st+1 


------------------- Sentence 1 -------------------

 st st+1 

Tokens are: 
>> ['st', 'st', '+1'] 

 UPOS tags are: 
>> [('st', 'PROPN'), ('st', 'PROPN'), ('+1', 'NUM')] 

 XPOS tags are: 
>> [('st', 'NNP'), ('st', 'NNP'), ('+1', 'CD')] 

 Lemmas are: 
>> [('st', 'st'), ('st', 'st'), ('+1', '+1')] 

 Dependency tags are: 
>> [(('st', 'root'), 'root'), (('st', 'st'), 'flat'), (('+1', 'st'), 'nmod:tmod')]

 Named Entites are: 
>> []

================================ Paragraph 252 =================================

ot+1 


------------------- Sentence 1 -------------------

 ot+1 

Tokens are: 
>> ['ot', '+1'] 

 UPOS tags are: 
>> [('ot', 'PROPN'), ('+1', 'SYM')] 

 XPOS tags are: 
>> [('ot', 'NNP'), ('+1', 'NFP')] 

 Lemmas are: 
>> [('ot', 'to'), ('+1', '+1')] 

 Dependency tags are: 
>> [(('ot', 'root'), 'root'), (('+1', 'ot'), 'compound')]

 Named Entites are: 
>> []

================================ Paragraph 253 =================================

Figure 5 | A recurrent neural network and the unfolding in time of the  computation involved in its forward computation. The artificial neurons  (for example, hidden units grouped under node s with values st at time t) get  inputs from other neurons at previous time steps (this is represented with the  black square, representing a delay of one time step, on the left). In this way, a  recurrent neural network can map an input sequence with elements xt into an  output sequence with elements ot, with each ot depending on all the previous  xtʹ (for tʹ ≤ t). The same parameters (matrices U,V,W ) are used at each time  step. Many other architectures are possible, including a variant in which the  network can generate a sequence of outputs (for example, words), each of  which is used as inputs for the next time step. The backpropagation algorithm  (Fig. 1) can be directly applied to the computational graph of the unfolded  network on the right, to compute the derivative of a total error (for example,  the log-probability of generating the right sequence of outputs) with respect to  all the states st and all the parameters. 


------------------- Sentence 1 -------------------

 Figure 5 | A recurrent neural network and the unfolding in time of the  computation involved in its forward computation. 

Tokens are: 
>> ['Figure', '5', '|', 'A', 'recurrent', 'neural', 'network', 'and', 'the', 'unfolding', 'in', 'time', 'of', 'the', 'computation', 'involved', 'in', 'its', 'forward', 'computation', '.'] 

 UPOS tags are: 
>> [('Figure', 'PROPN'), ('5', 'NUM'), ('|', 'PUNCT'), ('A', 'DET'), ('recurrent', 'ADJ'), ('neural', 'ADJ'), ('network', 'NOUN'), ('and', 'CCONJ'), ('the', 'DET'), ('unfolding', 'NOUN'), ('in', 'ADP'), ('time', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('computation', 'NOUN'), ('involved', 'VERB'), ('in', 'ADP'), ('its', 'PRON'), ('forward', 'ADJ'), ('computation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Figure', 'NNP'), ('5', 'CD'), ('|', ':'), ('A', 'DT'), ('recurrent', 'JJ'), ('neural', 'JJ'), ('network', 'NN'), ('and', 'CC'), ('the', 'DT'), ('unfolding', 'NN'), ('in', 'IN'), ('time', 'NN'), ('of', 'IN'), ('the', 'DT'), ('computation', 'NN'), ('involved', 'VBN'), ('in', 'IN'), ('its', 'PRP$'), ('forward', 'JJ'), ('computation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Figure', 'Figure'), ('5', '5'), ('|', '|'), ('A', 'a'), ('recurrent', 'recurrent'), ('neural', 'neural'), ('network', 'network'), ('and', 'and'), ('the', 'the'), ('unfolding', 'unfolding'), ('in', 'in'), ('time', 'time'), ('of', 'of'), ('the', 'the'), ('computation', 'computation'), ('involved', 'involve'), ('in', 'in'), ('its', 'its'), ('forward', 'forward'), ('computation', 'computation'), ('.', '.')] 

 Dependency tags are: 
>> [(('Figure', 'root'), 'root'), (('5', 'Figure'), 'dep'), (('|', 'network'), 'punct'), (('A', 'network'), 'det'), (('recurrent', 'network'), 'amod'), (('neural', 'network'), 'amod'), (('network', 'Figure'), 'appos'), (('and', 'unfolding'), 'cc'), (('the', 'unfolding'), 'det'), (('unfolding', 'network'), 'conj'), (('in', 'time'), 'case'), (('time', 'unfolding'), 'nmod'), (('of', 'computation'), 'case'), (('the', 'computation'), 'det'), (('computation', 'time'), 'nmod'), (('involved', 'computation'), 'acl'), (('in', 'computation'), 'case'), (('its', 'computation'), 'nmod:poss'), (('forward', 'computation'), 'amod'), (('computation', 'involved'), 'obl'), (('.', 'Figure'), 'punct')]

 Named Entites are: 
>> [('5', 'CARDINAL')]

------------------- Sentence 2 -------------------

 The artificial neurons  (for example, hidden units grouped under node s with values st at time t) get  inputs from other neurons at previous time steps (this is represented with the  black square, representing a delay of one time step, on the left). 

Tokens are: 
>> ['The', 'artificial', 'neurons', '(', 'for', 'example', ',', 'hidden', 'units', 'grouped', 'under', 'node', 's', 'with', 'values', 'st', 'at', 'time', 't', ')', 'get', 'inputs', 'from', 'other', 'neurons', 'at', 'previous', 'time', 'steps', '(', 'this', 'is', 'represented', 'with', 'the', 'black', 'square', ',', 'representing', 'a', 'delay', 'of', 'one', 'time', 'step', ',', 'on', 'the', 'left', ')', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('artificial', 'ADJ'), ('neurons', 'NOUN'), ('(', 'PUNCT'), ('for', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('hidden', 'VERB'), ('units', 'NOUN'), ('grouped', 'VERB'), ('under', 'ADP'), ('node', 'NOUN'), ('s', 'PART'), ('with', 'ADP'), ('values', 'NOUN'), ('st', 'PROPN'), ('at', 'ADP'), ('time', 'NOUN'), ('t', 'NOUN'), (')', 'PUNCT'), ('get', 'VERB'), ('inputs', 'NOUN'), ('from', 'ADP'), ('other', 'ADJ'), ('neurons', 'NOUN'), ('at', 'ADP'), ('previous', 'ADJ'), ('time', 'NOUN'), ('steps', 'NOUN'), ('(', 'PUNCT'), ('this', 'PRON'), ('is', 'AUX'), ('represented', 'VERB'), ('with', 'ADP'), ('the', 'DET'), ('black', 'ADJ'), ('square', 'NOUN'), (',', 'PUNCT'), ('representing', 'VERB'), ('a', 'DET'), ('delay', 'NOUN'), ('of', 'ADP'), ('one', 'NUM'), ('time', 'NOUN'), ('step', 'NOUN'), (',', 'PUNCT'), ('on', 'ADP'), ('the', 'DET'), ('left', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('artificial', 'JJ'), ('neurons', 'NNS'), ('(', '-LRB-'), ('for', 'IN'), ('example', 'NN'), (',', ','), ('hidden', 'VBN'), ('units', 'NNS'), ('grouped', 'VBN'), ('under', 'IN'), ('node', 'NN'), ('s', 'POS'), ('with', 'IN'), ('values', 'NNS'), ('st', 'NNP'), ('at', 'IN'), ('time', 'NN'), ('t', 'NN'), (')', '-RRB-'), ('get', 'VBP'), ('inputs', 'NNS'), ('from', 'IN'), ('other', 'JJ'), ('neurons', 'NNS'), ('at', 'IN'), ('previous', 'JJ'), ('time', 'NN'), ('steps', 'NNS'), ('(', '-LRB-'), ('this', 'DT'), ('is', 'VBZ'), ('represented', 'VBN'), ('with', 'IN'), ('the', 'DT'), ('black', 'JJ'), ('square', 'NN'), (',', ','), ('representing', 'VBG'), ('a', 'DT'), ('delay', 'NN'), ('of', 'IN'), ('one', 'CD'), ('time', 'NN'), ('step', 'NN'), (',', ','), ('on', 'IN'), ('the', 'DT'), ('left', 'NN'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('artificial', 'artificial'), ('neurons', 'neuron'), ('(', '('), ('for', 'for'), ('example', 'example'), (',', ','), ('hidden', 'hide'), ('units', 'unit'), ('grouped', 'group'), ('under', 'under'), ('node', 'node'), ('s', "'s"), ('with', 'with'), ('values', 'value'), ('st', 'st'), ('at', 'at'), ('time', 'time'), ('t', 't'), (')', ')'), ('get', 'get'), ('inputs', 'input'), ('from', 'from'), ('other', 'other'), ('neurons', 'neuron'), ('at', 'at'), ('previous', 'previous'), ('time', 'time'), ('steps', 'step'), ('(', '('), ('this', 'this'), ('is', 'be'), ('represented', 'represent'), ('with', 'with'), ('the', 'the'), ('black', 'black'), ('square', 'square'), (',', ','), ('representing', 'represent'), ('a', 'a'), ('delay', 'delay'), ('of', 'of'), ('one', 'one'), ('time', 'time'), ('step', 'step'), (',', ','), ('on', 'on'), ('the', 'the'), ('left', 'left'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'neurons'), 'det'), (('artificial', 'neurons'), 'amod'), (('neurons', 'get'), 'nsubj'), (('(', 'units'), 'punct'), (('for', 'example'), 'case'), (('example', 'get'), 'obl'), ((',', 'units'), 'punct'), (('hidden', 'units'), 'amod'), (('units', 'neurons'), 'appos'), (('grouped', 'units'), 'acl'), (('under', 'node'), 'case'), (('node', 'grouped'), 'obl'), (('s', 'node'), 'case'), (('with', 'st'), 'case'), (('values', 'st'), 'compound'), (('st', 'grouped'), 'obl'), (('at', 'time'), 'case'), (('time', 'st'), 'nmod'), (('t', 'time'), 'nmod:tmod'), ((')', 'units'), 'punct'), (('get', 'root'), 'root'), (('inputs', 'get'), 'obj'), (('from', 'neurons'), 'case'), (('other', 'neurons'), 'amod'), (('neurons', 'inputs'), 'nmod'), (('at', 'steps'), 'case'), (('previous', 'steps'), 'amod'), (('time', 'steps'), 'compound'), (('steps', 'get'), 'obl'), (('(', 'represented'), 'punct'), (('this', 'represented'), 'nsubj:pass'), (('is', 'represented'), 'aux:pass'), (('represented', 'get'), 'parataxis'), (('with', 'square'), 'case'), (('the', 'square'), 'det'), (('black', 'square'), 'amod'), (('square', 'represented'), 'obl'), ((',', 'representing'), 'punct'), (('representing', 'represented'), 'advcl'), (('a', 'delay'), 'det'), (('delay', 'representing'), 'obj'), (('of', 'step'), 'case'), (('one', 'step'), 'nummod'), (('time', 'step'), 'compound'), (('step', 'delay'), 'nmod'), ((',', 'left'), 'punct'), (('on', 'left'), 'case'), (('the', 'left'), 'det'), (('left', 'representing'), 'obl'), ((')', 'represented'), 'punct'), (('.', 'get'), 'punct')]

 Named Entites are: 
>> [('one', 'CARDINAL')]

------------------- Sentence 3 -------------------

 In this way, a  recurrent neural network can map an input sequence with elements xt into an  output sequence with elements ot, with each ot depending on all the previous  xtʹ (for tʹ ≤ t). 

Tokens are: 
>> ['In', 'this', 'way', ',', 'a', 'recurrent', 'neural', 'network', 'can', 'map', 'an', 'input', 'sequence', 'with', 'elements', 'xt', 'into', 'an', 'output', 'sequence', 'with', 'elements', 'ot', ',', 'with', 'each', 'ot', 'depending', 'on', 'all', 'the', 'previous', 'xtʹ', '(', 'for', 'tʹ', '≤', 't', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('this', 'DET'), ('way', 'NOUN'), (',', 'PUNCT'), ('a', 'DET'), ('recurrent', 'ADJ'), ('neural', 'ADJ'), ('network', 'NOUN'), ('can', 'AUX'), ('map', 'VERB'), ('an', 'DET'), ('input', 'NOUN'), ('sequence', 'NOUN'), ('with', 'ADP'), ('elements', 'NOUN'), ('xt', 'NOUN'), ('into', 'ADP'), ('an', 'DET'), ('output', 'NOUN'), ('sequence', 'NOUN'), ('with', 'ADP'), ('elements', 'NOUN'), ('ot', 'NOUN'), (',', 'PUNCT'), ('with', 'ADP'), ('each', 'DET'), ('ot', 'NOUN'), ('depending', 'VERB'), ('on', 'ADP'), ('all', 'DET'), ('the', 'DET'), ('previous', 'ADJ'), ('xtʹ', 'NOUN'), ('(', 'PUNCT'), ('for', 'ADP'), ('tʹ', 'NUM'), ('≤', 'NOUN'), ('t', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('this', 'DT'), ('way', 'NN'), (',', ','), ('a', 'DT'), ('recurrent', 'JJ'), ('neural', 'JJ'), ('network', 'NN'), ('can', 'MD'), ('map', 'VB'), ('an', 'DT'), ('input', 'NN'), ('sequence', 'NN'), ('with', 'IN'), ('elements', 'NNS'), ('xt', 'NN'), ('into', 'IN'), ('an', 'DT'), ('output', 'NN'), ('sequence', 'NN'), ('with', 'IN'), ('elements', 'NNS'), ('ot', 'NN'), (',', ','), ('with', 'IN'), ('each', 'DT'), ('ot', 'NN'), ('depending', 'VBG'), ('on', 'IN'), ('all', 'PDT'), ('the', 'DT'), ('previous', 'JJ'), ('xtʹ', 'NNS'), ('(', '-LRB-'), ('for', 'IN'), ('tʹ', 'CD'), ('≤', 'NNS'), ('t', 'NN'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('this', 'this'), ('way', 'way'), (',', ','), ('a', 'a'), ('recurrent', 'recurrent'), ('neural', 'neural'), ('network', 'network'), ('can', 'can'), ('map', 'map'), ('an', 'a'), ('input', 'input'), ('sequence', 'sequence'), ('with', 'with'), ('elements', 'element'), ('xt', 'xt'), ('into', 'into'), ('an', 'a'), ('output', 'output'), ('sequence', 'sequence'), ('with', 'with'), ('elements', 'element'), ('ot', 'to'), (',', ','), ('with', 'with'), ('each', 'each'), ('ot', 'to'), ('depending', 'depend'), ('on', 'on'), ('all', 'all'), ('the', 'the'), ('previous', 'previous'), ('xtʹ', 'xtʹ'), ('(', '('), ('for', 'for'), ('tʹ', 'tʹ'), ('≤', '≤'), ('t', 't'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'way'), 'case'), (('this', 'way'), 'det'), (('way', 'map'), 'obl'), ((',', 'map'), 'punct'), (('a', 'network'), 'det'), (('recurrent', 'network'), 'amod'), (('neural', 'network'), 'amod'), (('network', 'map'), 'nsubj'), (('can', 'map'), 'aux'), (('map', 'root'), 'root'), (('an', 'sequence'), 'det'), (('input', 'sequence'), 'compound'), (('sequence', 'map'), 'obj'), (('with', 'xt'), 'case'), (('elements', 'xt'), 'compound'), (('xt', 'sequence'), 'nmod'), (('into', 'sequence'), 'case'), (('an', 'sequence'), 'det'), (('output', 'sequence'), 'compound'), (('sequence', 'map'), 'obl'), (('with', 'elements'), 'case'), (('elements', 'sequence'), 'nmod'), (('ot', 'elements'), 'amod'), ((',', 'map'), 'punct'), (('with', 'ot'), 'case'), (('each', 'ot'), 'det'), (('ot', 'map'), 'obl'), (('depending', 'xtʹ'), 'case'), (('on', 'depending'), 'fixed'), (('all', 'xtʹ'), 'det:predet'), (('the', 'xtʹ'), 'det'), (('previous', 'xtʹ'), 'amod'), (('xtʹ', 'ot'), 'nmod'), (('(', '≤'), 'punct'), (('for', '≤'), 'case'), (('tʹ', '≤'), 'nummod'), (('≤', 'xtʹ'), 'nmod'), (('t', '≤'), 'nummod'), ((')', '≤'), 'punct'), (('.', 'map'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 The same parameters (matrices U,V,W ) are used at each time  step. 

Tokens are: 
>> ['The', 'same', 'parameters', '(', 'matrices', 'U,', 'V,', 'W', ')', 'are', 'used', 'at', 'each', 'time', 'step', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('same', 'ADJ'), ('parameters', 'NOUN'), ('(', 'PUNCT'), ('matrices', 'NOUN'), ('U,', 'PUNCT'), ('V,', 'PROPN'), ('W', 'NOUN'), (')', 'PUNCT'), ('are', 'AUX'), ('used', 'VERB'), ('at', 'ADP'), ('each', 'DET'), ('time', 'NOUN'), ('step', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('same', 'JJ'), ('parameters', 'NNS'), ('(', '-LRB-'), ('matrices', 'NNS'), ('U,', ','), ('V,', 'NNP'), ('W', 'NN'), (')', '-RRB-'), ('are', 'VBP'), ('used', 'VBN'), ('at', 'IN'), ('each', 'DT'), ('time', 'NN'), ('step', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('same', 'same'), ('parameters', 'parameter'), ('(', '('), ('matrices', 'matrice'), ('U,', 'U,'), ('V,', 'V,'), ('W', 'W'), (')', ')'), ('are', 'be'), ('used', 'use'), ('at', 'at'), ('each', 'each'), ('time', 'time'), ('step', 'step'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'parameters'), 'det'), (('same', 'parameters'), 'amod'), (('parameters', 'used'), 'nsubj:pass'), (('(', 'matrices'), 'punct'), (('matrices', 'parameters'), 'appos'), (('U,', 'matrices'), 'punct'), (('V,', 'W'), 'compound'), (('W', 'matrices'), 'appos'), ((')', 'matrices'), 'punct'), (('are', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('at', 'step'), 'case'), (('each', 'step'), 'det'), (('time', 'step'), 'compound'), (('step', 'used'), 'obl'), (('.', 'used'), 'punct')]

 Named Entites are: 
>> [('U,V,W', 'PRODUCT')]

------------------- Sentence 5 -------------------

 Many other architectures are possible, including a variant in which the  network can generate a sequence of outputs (for example, words), each of  which is used as inputs for the next time step. 

Tokens are: 
>> ['Many', 'other', 'architectures', 'are', 'possible', ',', 'including', 'a', 'variant', 'in', 'which', 'the', 'network', 'can', 'generate', 'a', 'sequence', 'of', 'outputs', '(', 'for', 'example', ',', 'words', ')', ',', 'each', 'of', 'which', 'is', 'used', 'as', 'inputs', 'for', 'the', 'next', 'time', 'step', '.'] 

 UPOS tags are: 
>> [('Many', 'ADJ'), ('other', 'ADJ'), ('architectures', 'NOUN'), ('are', 'AUX'), ('possible', 'ADJ'), (',', 'PUNCT'), ('including', 'VERB'), ('a', 'DET'), ('variant', 'NOUN'), ('in', 'ADP'), ('which', 'PRON'), ('the', 'DET'), ('network', 'NOUN'), ('can', 'AUX'), ('generate', 'VERB'), ('a', 'DET'), ('sequence', 'NOUN'), ('of', 'ADP'), ('outputs', 'NOUN'), ('(', 'PUNCT'), ('for', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('words', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('each', 'PRON'), ('of', 'ADP'), ('which', 'PRON'), ('is', 'AUX'), ('used', 'VERB'), ('as', 'ADP'), ('inputs', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('next', 'ADJ'), ('time', 'NOUN'), ('step', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Many', 'JJ'), ('other', 'JJ'), ('architectures', 'NNS'), ('are', 'VBP'), ('possible', 'JJ'), (',', ','), ('including', 'VBG'), ('a', 'DT'), ('variant', 'NN'), ('in', 'IN'), ('which', 'WDT'), ('the', 'DT'), ('network', 'NN'), ('can', 'MD'), ('generate', 'VB'), ('a', 'DT'), ('sequence', 'NN'), ('of', 'IN'), ('outputs', 'NNS'), ('(', '-LRB-'), ('for', 'IN'), ('example', 'NN'), (',', ','), ('words', 'NNS'), (')', '-RRB-'), (',', ','), ('each', 'DT'), ('of', 'IN'), ('which', 'WDT'), ('is', 'VBZ'), ('used', 'VBN'), ('as', 'IN'), ('inputs', 'NNS'), ('for', 'IN'), ('the', 'DT'), ('next', 'JJ'), ('time', 'NN'), ('step', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Many', 'many'), ('other', 'other'), ('architectures', 'architecture'), ('are', 'be'), ('possible', 'possible'), (',', ','), ('including', 'include'), ('a', 'a'), ('variant', 'variant'), ('in', 'in'), ('which', 'which'), ('the', 'the'), ('network', 'network'), ('can', 'can'), ('generate', 'generate'), ('a', 'a'), ('sequence', 'sequence'), ('of', 'of'), ('outputs', 'output'), ('(', '('), ('for', 'for'), ('example', 'example'), (',', ','), ('words', 'word'), (')', ')'), (',', ','), ('each', 'each'), ('of', 'of'), ('which', 'which'), ('is', 'be'), ('used', 'use'), ('as', 'as'), ('inputs', 'input'), ('for', 'for'), ('the', 'the'), ('next', 'next'), ('time', 'time'), ('step', 'step'), ('.', '.')] 

 Dependency tags are: 
>> [(('Many', 'architectures'), 'amod'), (('other', 'architectures'), 'amod'), (('architectures', 'possible'), 'nsubj'), (('are', 'possible'), 'cop'), (('possible', 'root'), 'root'), ((',', 'variant'), 'punct'), (('including', 'variant'), 'case'), (('a', 'variant'), 'det'), (('variant', 'possible'), 'obl'), (('in', 'which'), 'case'), (('which', 'generate'), 'obl'), (('the', 'network'), 'det'), (('network', 'generate'), 'nsubj'), (('can', 'generate'), 'aux'), (('generate', 'variant'), 'acl:relcl'), (('a', 'sequence'), 'det'), (('sequence', 'generate'), 'obj'), (('of', 'outputs'), 'case'), (('outputs', 'sequence'), 'nmod'), (('(', 'example'), 'punct'), (('for', 'example'), 'case'), (('example', 'generate'), 'obl'), ((',', 'words'), 'punct'), (('words', 'example'), 'appos'), ((')', 'words'), 'punct'), ((',', 'used'), 'punct'), (('each', 'used'), 'nsubj:pass'), (('of', 'which'), 'case'), (('which', 'each'), 'nmod'), (('is', 'used'), 'aux:pass'), (('used', 'variant'), 'acl:relcl'), (('as', 'inputs'), 'case'), (('inputs', 'used'), 'obl'), (('for', 'step'), 'case'), (('the', 'step'), 'det'), (('next', 'step'), 'amod'), (('time', 'step'), 'compound'), (('step', 'used'), 'obl'), (('.', 'possible'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 6 -------------------

 The backpropagation algorithm  (Fig. 1) can be directly applied to the computational graph of the unfolded  network on the right, to compute the derivative of a total error (for example,  the log-probability of generating the right sequence of outputs) with respect to  all the states st and all the parameters. 

Tokens are: 
>> ['The', 'backpropagation', 'algorithm', '(', 'Fig.', '1', ')', 'can', 'be', 'directly', 'applied', 'to', 'the', 'computational', 'graph', 'of', 'the', 'unfolded', 'network', 'on', 'the', 'right', ',', 'to', 'compute', 'the', 'derivative', 'of', 'a', 'total', 'error', '(', 'for', 'example', ',', 'the', 'log-probability', 'of', 'generating', 'the', 'right', 'sequence', 'of', 'outputs', ')', 'with', 'respect', 'to', 'all', 'the', 'states', 'st', 'and', 'all', 'the', 'parameters', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('backpropagation', 'NOUN'), ('algorithm', 'NOUN'), ('(', 'PUNCT'), ('Fig.', 'PROPN'), ('1', 'NUM'), (')', 'PUNCT'), ('can', 'AUX'), ('be', 'AUX'), ('directly', 'ADV'), ('applied', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('computational', 'ADJ'), ('graph', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('unfolded', 'ADJ'), ('network', 'NOUN'), ('on', 'ADP'), ('the', 'DET'), ('right', 'NOUN'), (',', 'PUNCT'), ('to', 'PART'), ('compute', 'VERB'), ('the', 'DET'), ('derivative', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('total', 'ADJ'), ('error', 'NOUN'), ('(', 'PUNCT'), ('for', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('log-probability', 'NOUN'), ('of', 'SCONJ'), ('generating', 'VERB'), ('the', 'DET'), ('right', 'ADJ'), ('sequence', 'NOUN'), ('of', 'ADP'), ('outputs', 'NOUN'), (')', 'PUNCT'), ('with', 'ADP'), ('respect', 'NOUN'), ('to', 'ADP'), ('all', 'PRON'), ('the', 'DET'), ('states', 'NOUN'), ('st', 'NOUN'), ('and', 'CCONJ'), ('all', 'PRON'), ('the', 'DET'), ('parameters', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('backpropagation', 'NN'), ('algorithm', 'NN'), ('(', '-LRB-'), ('Fig.', 'NNP'), ('1', 'CD'), (')', '-RRB-'), ('can', 'MD'), ('be', 'VB'), ('directly', 'RB'), ('applied', 'VBN'), ('to', 'IN'), ('the', 'DT'), ('computational', 'JJ'), ('graph', 'NN'), ('of', 'IN'), ('the', 'DT'), ('unfolded', 'JJ'), ('network', 'NN'), ('on', 'IN'), ('the', 'DT'), ('right', 'NN'), (',', ','), ('to', 'TO'), ('compute', 'VB'), ('the', 'DT'), ('derivative', 'NN'), ('of', 'IN'), ('a', 'DT'), ('total', 'JJ'), ('error', 'NN'), ('(', '-LRB-'), ('for', 'IN'), ('example', 'NN'), (',', ','), ('the', 'DT'), ('log-probability', 'NN'), ('of', 'IN'), ('generating', 'VBG'), ('the', 'DT'), ('right', 'JJ'), ('sequence', 'NN'), ('of', 'IN'), ('outputs', 'NNS'), (')', '-RRB-'), ('with', 'IN'), ('respect', 'NN'), ('to', 'IN'), ('all', 'PDT'), ('the', 'DT'), ('states', 'NNS'), ('st', 'NN'), ('and', 'CC'), ('all', 'PDT'), ('the', 'DT'), ('parameters', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('backpropagation', 'backpropagation'), ('algorithm', 'algorithm'), ('(', '('), ('Fig.', 'Fig.'), ('1', '1'), (')', ')'), ('can', 'can'), ('be', 'be'), ('directly', 'directly'), ('applied', 'apply'), ('to', 'to'), ('the', 'the'), ('computational', 'computational'), ('graph', 'graph'), ('of', 'of'), ('the', 'the'), ('unfolded', 'unfolded'), ('network', 'network'), ('on', 'on'), ('the', 'the'), ('right', 'right'), (',', ','), ('to', 'to'), ('compute', 'compute'), ('the', 'the'), ('derivative', 'derivative'), ('of', 'of'), ('a', 'a'), ('total', 'total'), ('error', 'error'), ('(', '('), ('for', 'for'), ('example', 'example'), (',', ','), ('the', 'the'), ('log-probability', 'log-probability'), ('of', 'of'), ('generating', 'generate'), ('the', 'the'), ('right', 'right'), ('sequence', 'sequence'), ('of', 'of'), ('outputs', 'output'), (')', ')'), ('with', 'with'), ('respect', 'respect'), ('to', 'to'), ('all', 'all'), ('the', 'the'), ('states', 'state'), ('st', 'st'), ('and', 'and'), ('all', 'all'), ('the', 'the'), ('parameters', 'parameter'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'algorithm'), 'det'), (('backpropagation', 'algorithm'), 'compound'), (('algorithm', 'applied'), 'nsubj:pass'), (('(', 'Fig.'), 'punct'), (('Fig.', 'algorithm'), 'appos'), (('1', 'Fig.'), 'dep'), ((')', 'Fig.'), 'punct'), (('can', 'applied'), 'aux'), (('be', 'applied'), 'aux:pass'), (('directly', 'applied'), 'advmod'), (('applied', 'root'), 'root'), (('to', 'graph'), 'case'), (('the', 'graph'), 'det'), (('computational', 'graph'), 'amod'), (('graph', 'applied'), 'obl'), (('of', 'network'), 'case'), (('the', 'network'), 'det'), (('unfolded', 'network'), 'amod'), (('network', 'graph'), 'nmod'), (('on', 'right'), 'case'), (('the', 'right'), 'det'), (('right', 'network'), 'nmod'), ((',', 'compute'), 'punct'), (('to', 'compute'), 'mark'), (('compute', 'applied'), 'xcomp'), (('the', 'derivative'), 'det'), (('derivative', 'compute'), 'obj'), (('of', 'error'), 'case'), (('a', 'error'), 'det'), (('total', 'error'), 'amod'), (('error', 'derivative'), 'nmod'), (('(', 'log-probability'), 'punct'), (('for', 'example'), 'case'), (('example', 'log-probability'), 'nmod'), ((',', 'log-probability'), 'punct'), (('the', 'log-probability'), 'det'), (('log-probability', 'error'), 'appos'), (('of', 'generating'), 'mark'), (('generating', 'log-probability'), 'acl'), (('the', 'sequence'), 'det'), (('right', 'sequence'), 'amod'), (('sequence', 'generating'), 'obj'), (('of', 'outputs'), 'case'), (('outputs', 'sequence'), 'nmod'), ((')', 'log-probability'), 'punct'), (('with', 'respect'), 'case'), (('respect', 'generating'), 'obl'), (('to', 'st'), 'case'), (('all', 'st'), 'det:predet'), (('the', 'st'), 'det'), (('states', 'st'), 'compound'), (('st', 'respect'), 'nmod'), (('and', 'parameters'), 'cc'), (('all', 'parameters'), 'det:predet'), (('the', 'parameters'), 'det'), (('parameters', 'st'), 'conj'), (('.', 'applied'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 254 =================================

4 4 2  |  N A T U R E  |  V O L  5 2 1  |  2 8  M A Y  2 0 1 5 


------------------- Sentence 1 -------------------

 4 4 2  |  N A T U R E  |  V O L  5 2 1  |  2 8  M A Y  2 0 1 5 

Tokens are: 
>> ['4', '4', '2', '|', 'N', 'A', 'T', 'U', 'R', 'E', '|', 'V', 'O', 'L', '5', '2', '1', '|', '2', '8', 'M', 'A', 'Y', '2', '0', '1', '5'] 

 UPOS tags are: 
>> [('4', 'NUM'), ('4', 'NUM'), ('2', 'NUM'), ('|', 'PUNCT'), ('N', 'NOUN'), ('A', 'NUM'), ('T', 'NOUN'), ('U', 'NOUN'), ('R', 'NOUN'), ('E', 'NOUN'), ('|', 'SYM'), ('V', 'NOUN'), ('O', 'SYM'), ('L', 'SYM'), ('5', 'NUM'), ('2', 'NUM'), ('1', 'NUM'), ('|', 'SYM'), ('2', 'NUM'), ('8', 'NUM'), ('M', 'NUM'), ('A', 'NUM'), ('Y', 'NOUN'), ('2', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('5', 'NUM')] 

 XPOS tags are: 
>> [('4', 'CD'), ('4', 'CD'), ('2', 'CD'), ('|', ':'), ('N', 'NN'), ('A', 'CD'), ('T', 'NN'), ('U', 'NNS'), ('R', 'NNS'), ('E', 'NN'), ('|', 'SYM'), ('V', 'NN'), ('O', 'SYM'), ('L', 'SYM'), ('5', 'CD'), ('2', 'CD'), ('1', 'CD'), ('|', 'SYM'), ('2', 'CD'), ('8', 'CD'), ('M', 'CD'), ('A', 'CD'), ('Y', 'NN'), ('2', 'CD'), ('0', 'CD'), ('1', 'CD'), ('5', 'CD')] 

 Lemmas are: 
>> [('4', '4'), ('4', '4'), ('2', '2'), ('|', '|'), ('N', 'N'), ('A', 'a'), ('T', 'T'), ('U', 'U'), ('R', 'R'), ('E', 'e'), ('|', '|'), ('V', 'V'), ('O', 'o'), ('L', 'l'), ('5', '5'), ('2', '2'), ('1', '1'), ('|', '|'), ('2', '2'), ('8', '8'), ('M', 'm'), ('A', 'a'), ('Y', 'Y'), ('2', '2'), ('0', '0'), ('1', '1'), ('5', '5')] 

 Dependency tags are: 
>> [(('4', '4'), 'compound'), (('4', 'N'), 'nummod'), (('2', '4'), 'compound'), (('|', 'N'), 'punct'), (('N', 'root'), 'root'), (('A', 'N'), 'nummod'), (('T', 'N'), 'appos'), (('U', 'R'), 'compound'), (('R', 'E'), 'compound'), (('E', 'N'), 'list'), (('|', 'E'), 'compound'), (('V', 'E'), 'appos'), (('O', '5'), 'punct'), (('L', '5'), 'compound'), (('5', 'V'), 'appos'), (('2', '5'), 'conj'), (('1', '5'), 'conj'), (('|', '2'), 'case'), (('2', '5'), 'conj'), (('8', '2'), 'flat'), (('M', '8'), 'flat'), (('A', '8'), 'flat'), (('Y', '2'), 'nsubj'), (('2', '8'), 'conj'), (('0', '2'), 'flat'), (('1', '2'), 'flat'), (('5', '1'), 'flat')]

 Named Entites are: 
>> [('1', 'CARDINAL'), ('5', 'CARDINAL')]

================================ Paragraph 255 =================================

REVIEWINSIGHT 


------------------- Sentence 1 -------------------

 REVIEWINSIGHT 

Tokens are: 
>> ['REVIEWINSIGHT'] 

 UPOS tags are: 
>> [('REVIEWINSIGHT', 'NOUN')] 

 XPOS tags are: 
>> [('REVIEWINSIGHT', 'NNS')] 

 Lemmas are: 
>> [('REVIEWINSIGHT', 'reviewinsight')] 

 Dependency tags are: 
>> [(('REVIEWINSIGHT', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 256 =================================

© 2015 Macmillan Publishers Limited. All rights reserved


------------------- Sentence 1 -------------------

 © 2015 Macmillan Publishers Limited. 

Tokens are: 
>> ['©', '2015', 'Macmillan', 'Publishers', 'Limited', '.'] 

 UPOS tags are: 
>> [('©', 'ADP'), ('2015', 'NUM'), ('Macmillan', 'PROPN'), ('Publishers', 'PROPN'), ('Limited', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('©', 'IN'), ('2015', 'CD'), ('Macmillan', 'NNP'), ('Publishers', 'NNPS'), ('Limited', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('©', 'at'), ('2015', '2015'), ('Macmillan', 'Macmillan'), ('Publishers', 'Publisher'), ('Limited', 'Limited'), ('.', '.')] 

 Dependency tags are: 
>> [(('©', 'Limited'), 'case'), (('2015', 'Limited'), 'nummod'), (('Macmillan', 'Limited'), 'compound'), (('Publishers', 'Limited'), 'compound'), (('Limited', 'root'), 'root'), (('.', 'Limited'), 'punct')]

 Named Entites are: 
>> [('2015', 'DATE'), ('Macmillan Publishers Limited', 'ORG')]

------------------- Sentence 2 -------------------

 All rights reserved 

Tokens are: 
>> ['All', 'rights', 'reserved'] 

 UPOS tags are: 
>> [('All', 'DET'), ('rights', 'NOUN'), ('reserved', 'VERB')] 

 XPOS tags are: 
>> [('All', 'DT'), ('rights', 'NNS'), ('reserved', 'VBN')] 

 Lemmas are: 
>> [('All', 'all'), ('rights', 'rights'), ('reserved', 'reserve')] 

 Dependency tags are: 
>> [(('All', 'rights'), 'det'), (('rights', 'root'), 'root'), (('reserved', 'rights'), 'acl')]

 Named Entites are: 
>> []

================================ Paragraph 257 =================================

12. Leung, M. K., Xiong, H. Y., Lee, L. J. & Frey, B. J. Deep learning of the tissue- regulated splicing code. Bioinformatics 30, i121–i129 (2014).  


------------------- Sentence 1 -------------------

 12. Leung, M. K., Xiong, H. Y., Lee, L. J. & Frey, B. J. Deep learning of the tissue- regulated splicing code. 

Tokens are: 
>> ['12', '.', 'Leung', ',', 'M.', 'K.', ',', 'Xiong', ',', 'H.', 'Y.', ',', 'Lee', ',', 'L.', 'J.', '&', 'Frey', ',', 'B.', 'J.', 'Deep', 'learning', 'of', 'the', 'tissue-', 'regulated', 'splicing', 'code', '.'] 

 UPOS tags are: 
>> [('12', 'NUM'), ('.', 'PUNCT'), ('Leung', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('K.', 'PROPN'), (',', 'PUNCT'), ('Xiong', 'PROPN'), (',', 'PUNCT'), ('H.', 'PROPN'), ('Y.', 'PROPN'), (',', 'PUNCT'), ('Lee', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('J.', 'PROPN'), ('&', 'CCONJ'), ('Frey', 'PROPN'), (',', 'PUNCT'), ('B.', 'PROPN'), ('J.', 'PROPN'), ('Deep', 'ADJ'), ('learning', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('tissue-', 'ADJ'), ('regulated', 'VERB'), ('splicing', 'NOUN'), ('code', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('12', 'LS'), ('.', '.'), ('Leung', 'NNP'), (',', ','), ('M.', 'NNP'), ('K.', 'NNP'), (',', ','), ('Xiong', 'NNP'), (',', ','), ('H.', 'NNP'), ('Y.', 'NNP'), (',', ','), ('Lee', 'NNP'), (',', ','), ('L.', 'NNP'), ('J.', 'NNP'), ('&', 'CC'), ('Frey', 'NNP'), (',', ','), ('B.', 'NNP'), ('J.', 'NNP'), ('Deep', 'JJ'), ('learning', 'NN'), ('of', 'IN'), ('the', 'DT'), ('tissue-', 'JJ'), ('regulated', 'VBN'), ('splicing', 'NN'), ('code', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('12', '12'), ('.', '.'), ('Leung', 'Leung'), (',', ','), ('M.', 'M.'), ('K.', 'K.'), (',', ','), ('Xiong', 'Xiong'), (',', ','), ('H.', 'H.'), ('Y.', 'Y.'), (',', ','), ('Lee', 'Lee'), (',', ','), ('L.', 'L.'), ('J.', 'J.'), ('&', '&'), ('Frey', 'Frey'), (',', ','), ('B.', 'B.'), ('J.', 'J.'), ('Deep', 'deep'), ('learning', 'learning'), ('of', 'of'), ('the', 'the'), ('tissue-', 'tissue-'), ('regulated', 'regulate'), ('splicing', 'splicing'), ('code', 'code'), ('.', '.')] 

 Dependency tags are: 
>> [(('12', 'Leung'), 'nummod'), (('.', '12'), 'punct'), (('Leung', 'root'), 'root'), ((',', 'M.'), 'punct'), (('M.', 'Leung'), 'conj'), (('K.', 'Leung'), 'flat'), ((',', 'Xiong'), 'punct'), (('Xiong', 'Leung'), 'conj'), ((',', 'H.'), 'punct'), (('H.', 'Leung'), 'conj'), (('Y.', 'H.'), 'flat'), ((',', 'Lee'), 'punct'), (('Lee', 'Leung'), 'conj'), ((',', 'L.'), 'punct'), (('L.', 'Leung'), 'conj'), (('J.', 'L.'), 'flat'), (('&', 'Frey'), 'cc'), (('Frey', 'Leung'), 'conj'), ((',', 'B.'), 'punct'), (('B.', 'Leung'), 'conj'), (('J.', 'B.'), 'flat'), (('Deep', 'learning'), 'amod'), (('learning', 'Leung'), 'conj'), (('of', 'code'), 'case'), (('the', 'code'), 'det'), (('tissue-', 'code'), 'amod'), (('regulated', 'code'), 'amod'), (('splicing', 'code'), 'compound'), (('code', 'learning'), 'nmod'), (('.', 'learning'), 'punct')]

 Named Entites are: 
>> [('12', 'CARDINAL'), ('Leung', 'PERSON'), ('M. K.', 'PERSON'), ('Xiong', 'PERSON'), ('H. Y.', 'PERSON'), ('Lee', 'PERSON'), ('L. J. & Frey', 'PERSON'), ('B. J. Deep', 'PERSON')]

------------------- Sentence 2 -------------------

 Bioinformatics 30, i121–i129 (2014). 

Tokens are: 
>> ['Bioinformatics', '30', ',', 'i121–i129', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('Bioinformatics', 'PROPN'), ('30', 'NUM'), (',', 'PUNCT'), ('i121–i129', 'NUM'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Bioinformatics', 'NNP'), ('30', 'CD'), (',', ','), ('i121–i129', 'CD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Bioinformatics', 'Bioinformatics'), ('30', '30'), (',', ','), ('i121–i129', 'i121–i129'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Bioinformatics', 'root'), 'root'), (('30', 'Bioinformatics'), 'dep'), ((',', 'i121–i129'), 'punct'), (('i121–i129', 'Bioinformatics'), 'nmod:tmod'), (('(', '2014'), 'punct'), (('2014', 'i121–i129'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'Bioinformatics'), 'punct')]

 Named Entites are: 
>> [('30', 'CARDINAL'), ('2014', 'DATE')]

================================ Paragraph 258 =================================

13. Xiong, H. Y. et al. The human splicing code reveals new insights into the genetic  determinants of disease. Science 347, 6218 (2015).  


------------------- Sentence 1 -------------------

 13. 

Tokens are: 
>> ['13', '.'] 

 UPOS tags are: 
>> [('13', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('13', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('13', '13'), ('.', '.')] 

 Dependency tags are: 
>> [(('13', 'root'), 'root'), (('.', '13'), 'punct')]

 Named Entites are: 
>> [('13', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Xiong, H. Y. et al. 

Tokens are: 
>> ['Xiong', ',', 'H.', 'Y.', 'et', 'al', '.'] 

 UPOS tags are: 
>> [('Xiong', 'PROPN'), (',', 'PUNCT'), ('H.', 'PROPN'), ('Y.', 'PROPN'), ('et', 'PROPN'), ('al', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Xiong', 'NNP'), (',', ','), ('H.', 'NNP'), ('Y.', 'NNP'), ('et', 'NNP'), ('al', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('Xiong', 'Xiong'), (',', ','), ('H.', 'H.'), ('Y.', 'Y.'), ('et', 'et'), ('al', 'al'), ('.', '.')] 

 Dependency tags are: 
>> [(('Xiong', 'root'), 'root'), ((',', 'H.'), 'punct'), (('H.', 'Xiong'), 'flat'), (('Y.', 'H.'), 'flat'), (('et', 'H.'), 'flat'), (('al', 'H.'), 'flat'), (('.', 'Xiong'), 'punct')]

 Named Entites are: 
>> [('Xiong', 'PERSON'), ('H. Y. et al', 'PERSON')]

------------------- Sentence 3 -------------------

 The human splicing code reveals new insights into the genetic  determinants of disease. 

Tokens are: 
>> ['The', 'human', 'splicing', 'code', 'reveals', 'new', 'insights', 'into', 'the', 'genetic', 'determinants', 'of', 'disease', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('human', 'ADJ'), ('splicing', 'NOUN'), ('code', 'NOUN'), ('reveals', 'VERB'), ('new', 'ADJ'), ('insights', 'NOUN'), ('into', 'ADP'), ('the', 'DET'), ('genetic', 'ADJ'), ('determinants', 'NOUN'), ('of', 'ADP'), ('disease', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('human', 'JJ'), ('splicing', 'NN'), ('code', 'NN'), ('reveals', 'VBZ'), ('new', 'JJ'), ('insights', 'NNS'), ('into', 'IN'), ('the', 'DT'), ('genetic', 'JJ'), ('determinants', 'NNS'), ('of', 'IN'), ('disease', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('human', 'human'), ('splicing', 'splicing'), ('code', 'code'), ('reveals', 'reveal'), ('new', 'new'), ('insights', 'insight'), ('into', 'into'), ('the', 'the'), ('genetic', 'genetic'), ('determinants', 'determinant'), ('of', 'of'), ('disease', 'disease'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'code'), 'det'), (('human', 'code'), 'amod'), (('splicing', 'code'), 'compound'), (('code', 'reveals'), 'nsubj'), (('reveals', 'root'), 'root'), (('new', 'insights'), 'amod'), (('insights', 'reveals'), 'obj'), (('into', 'determinants'), 'case'), (('the', 'determinants'), 'det'), (('genetic', 'determinants'), 'amod'), (('determinants', 'insights'), 'nmod'), (('of', 'disease'), 'case'), (('disease', 'determinants'), 'nmod'), (('.', 'reveals'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Science 347, 6218 (2015). 

Tokens are: 
>> ['Science', '347', ',', '6218', '(', '2015', ')', '.'] 

 UPOS tags are: 
>> [('Science', 'PROPN'), ('347', 'NUM'), (',', 'PUNCT'), ('6218', 'NUM'), ('(', 'PUNCT'), ('2015', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Science', 'NNP'), ('347', 'CD'), (',', ','), ('6218', 'CD'), ('(', '-LRB-'), ('2015', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Science', 'Science'), ('347', '347'), (',', ','), ('6218', '6218'), ('(', '('), ('2015', '2015'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Science', '347'), 'compound'), (('347', 'root'), 'root'), ((',', '6218'), 'punct'), (('6218', '347'), 'nmod:tmod'), (('(', '2015'), 'punct'), (('2015', '6218'), 'nmod:tmod'), ((')', '2015'), 'punct'), (('.', '347'), 'punct')]

 Named Entites are: 
>> [('347', 'CARDINAL'), ('6218', 'CARDINAL'), ('2015', 'DATE')]

================================ Paragraph 259 =================================

14. Collobert, R., et al. Natural language processing (almost) from scratch. J. Mach.  Learn. Res. 12, 2493–2537 (2011).  


------------------- Sentence 1 -------------------

 14. Collobert, R., et al. Natural language processing (almost) from scratch. 

Tokens are: 
>> ['14', '.', 'Collobert', ',', 'R.', ',', 'et', 'al.', 'Natural', 'language', 'processing', '(', 'almost', ')', 'from', 'scratch', '.'] 

 UPOS tags are: 
>> [('14', 'NUM'), ('.', 'PUNCT'), ('Collobert', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), (',', 'PUNCT'), ('et', 'X'), ('al.', 'X'), ('Natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), ('(', 'PUNCT'), ('almost', 'ADV'), (')', 'PUNCT'), ('from', 'ADP'), ('scratch', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('14', 'LS'), ('.', '.'), ('Collobert', 'NNP'), (',', ','), ('R.', 'NNP'), (',', ','), ('et', 'FW'), ('al.', 'FW'), ('Natural', 'JJ'), ('language', 'NN'), ('processing', 'NN'), ('(', '-LRB-'), ('almost', 'RB'), (')', '-RRB-'), ('from', 'IN'), ('scratch', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('14', '14'), ('.', '.'), ('Collobert', 'Collobert'), (',', ','), ('R.', 'R.'), (',', ','), ('et', 'et'), ('al.', 'al.'), ('Natural', 'Natural'), ('language', 'language'), ('processing', 'processing'), ('(', '('), ('almost', 'almost'), (')', ')'), ('from', 'from'), ('scratch', 'scratch'), ('.', '.')] 

 Dependency tags are: 
>> [(('14', 'Collobert'), 'nummod'), (('.', '14'), 'punct'), (('Collobert', 'root'), 'root'), ((',', 'R.'), 'punct'), (('R.', 'Collobert'), 'conj'), ((',', 'al.'), 'punct'), (('et', 'al.'), 'cc'), (('al.', 'Collobert'), 'conj'), (('Natural', 'processing'), 'amod'), (('language', 'processing'), 'compound'), (('processing', 'Collobert'), 'list'), (('(', 'Collobert'), 'punct'), (('almost', 'processing'), 'advmod'), ((')', 'almost'), 'punct'), (('from', 'scratch'), 'case'), (('scratch', 'processing'), 'nmod'), (('.', 'Collobert'), 'punct')]

 Named Entites are: 
>> [('14', 'CARDINAL'), ('Collobert', 'PERSON')]

------------------- Sentence 2 -------------------

 J. Mach.  Learn. Res. 12, 2493–2537 (2011). 

Tokens are: 
>> ['J.', 'Mach', '.', 'Learn.', 'Res.', '12', ',', '2493–2537', '(', '2011', ')', '.'] 

 UPOS tags are: 
>> [('J.', 'PROPN'), ('Mach', 'PROPN'), ('.', 'PUNCT'), ('Learn.', 'PROPN'), ('Res.', 'PROPN'), ('12', 'NUM'), (',', 'PUNCT'), ('2493–2537', 'NUM'), ('(', 'PUNCT'), ('2011', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('J.', 'NNP'), ('Mach', 'NNP'), ('.', '.'), ('Learn.', 'NNP'), ('Res.', 'NNP'), ('12', 'CD'), (',', ','), ('2493–2537', 'CD'), ('(', '-LRB-'), ('2011', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('J.', 'J.'), ('Mach', 'Mach'), ('.', '.'), ('Learn.', 'Learn.'), ('Res.', 'Res.'), ('12', '12'), (',', ','), ('2493–2537', '2493–2537'), ('(', '('), ('2011', '2011'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('J.', 'root'), 'root'), (('Mach', 'J.'), 'flat'), (('.', 'J.'), 'punct'), (('Learn.', 'J.'), 'list'), (('Res.', 'Learn.'), 'flat'), (('12', 'Learn.'), 'dep'), ((',', '2493–2537'), 'punct'), (('2493–2537', 'Learn.'), 'list'), (('(', '2011'), 'punct'), (('2011', '2493–2537'), 'nmod:tmod'), ((')', '2011'), 'punct'), (('.', 'J.'), 'punct')]

 Named Entites are: 
>> [('J. Mach.', 'PERSON'), ('Learn. Res. 12', 'DATE'), ('2493–2537', 'CARDINAL'), ('2011', 'DATE')]

================================ Paragraph 260 =================================

15. Bordes, A., Chopra, S. & Weston, J. Question answering with subgraph  embeddings. In Proc. Empirical Methods in Natural Language Processing http:// arxiv.org/abs/1406.3676v3 (2014).  


------------------- Sentence 1 -------------------

 15. Bordes, A., Chopra, S. & Weston, J. Question answering with subgraph  embeddings. 

Tokens are: 
>> ['15', '.', 'Bordes', ',', 'A.', ',', 'Chopra', ',', 'S.', '&', 'Weston', ',', 'J.', 'Question', 'answering', 'with', 'subgraph', 'embeddings', '.'] 

 UPOS tags are: 
>> [('15', 'NUM'), ('.', 'PUNCT'), ('Bordes', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), (',', 'PUNCT'), ('Chopra', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('&', 'CCONJ'), ('Weston', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('Question', 'PROPN'), ('answering', 'VERB'), ('with', 'ADP'), ('subgraph', 'NOUN'), ('embeddings', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('15', 'LS'), ('.', '.'), ('Bordes', 'NNP'), (',', ','), ('A.', 'NNP'), (',', ','), ('Chopra', 'NNP'), (',', ','), ('S.', 'NNP'), ('&', 'CC'), ('Weston', 'NNP'), (',', ','), ('J.', 'NNP'), ('Question', 'NNP'), ('answering', 'VBG'), ('with', 'IN'), ('subgraph', 'NN'), ('embeddings', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('15', '15'), ('.', '.'), ('Bordes', 'Bordes'), (',', ','), ('A.', 'A.'), (',', ','), ('Chopra', 'Chopra'), (',', ','), ('S.', 'S.'), ('&', '&'), ('Weston', 'Weston'), (',', ','), ('J.', 'J.'), ('Question', 'question'), ('answering', 'answer'), ('with', 'with'), ('subgraph', 'subgraph'), ('embeddings', 'embedding'), ('.', '.')] 

 Dependency tags are: 
>> [(('15', 'Bordes'), 'nummod'), (('.', '15'), 'punct'), (('Bordes', 'root'), 'root'), ((',', 'A.'), 'punct'), (('A.', 'Bordes'), 'conj'), ((',', 'Chopra'), 'punct'), (('Chopra', 'Bordes'), 'conj'), ((',', 'S.'), 'punct'), (('S.', 'Bordes'), 'conj'), (('&', 'Weston'), 'cc'), (('Weston', 'S.'), 'conj'), ((',', 'Bordes'), 'punct'), (('J.', 'Question'), 'compound'), (('Question', 'Bordes'), 'list'), (('answering', 'Question'), 'acl'), (('with', 'embeddings'), 'case'), (('subgraph', 'embeddings'), 'compound'), (('embeddings', 'answering'), 'obl'), (('.', 'Bordes'), 'punct')]

 Named Entites are: 
>> [('15', 'CARDINAL'), ('Bordes, A., Chopra, S. & Weston', 'ORG'), ('J. Question', 'PERSON')]

------------------- Sentence 2 -------------------

 In Proc. Empirical Methods in Natural Language Processing http:// arxiv.org/abs/1406.3676v3 (2014). 

Tokens are: 
>> ['In', 'Proc.', 'Empirical', 'Methods', 'in', 'Natural', 'Language', 'Processing', 'http://', 'arxiv.org/abs/1406.3676v3', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'NOUN'), ('Empirical', 'ADJ'), ('Methods', 'NOUN'), ('in', 'ADP'), ('Natural', 'ADJ'), ('Language', 'NOUN'), ('Processing', 'NOUN'), ('http://', 'PROPN'), ('arxiv.org/abs/1406.3676v3', 'X'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NN'), ('Empirical', 'JJ'), ('Methods', 'NNS'), ('in', 'IN'), ('Natural', 'JJ'), ('Language', 'NN'), ('Processing', 'NN'), ('http://', 'NNP'), ('arxiv.org/abs/1406.3676v3', 'ADD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'proc.'), ('Empirical', 'empirical'), ('Methods', 'method'), ('in', 'in'), ('Natural', 'Natural'), ('Language', 'language'), ('Processing', 'processing'), ('http://', 'http://'), ('arxiv.org/abs/1406.3676v3', 'arxiv.org/abs/1406.3676v3'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Methods'), 'case'), (('Proc.', 'Methods'), 'compound'), (('Empirical', 'Methods'), 'amod'), (('Methods', 'root'), 'root'), (('in', 'Processing'), 'case'), (('Natural', 'Language'), 'amod'), (('Language', 'Processing'), 'compound'), (('Processing', 'Methods'), 'nmod'), (('http://', 'Processing'), 'appos'), (('arxiv.org/abs/1406.3676v3', 'Processing'), 'appos'), (('(', '2014'), 'punct'), (('2014', 'arxiv.org/abs/1406.3676v3'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'Methods'), 'punct')]

 Named Entites are: 
>> [('2014', 'DATE')]

================================ Paragraph 261 =================================

16. Jean, S., Cho, K., Memisevic, R. & Bengio, Y. On using very large target  vocabulary for neural machine translation. In Proc. ACL-IJCNLP http://arxiv.org/ abs/1412.2007 (2015). 


------------------- Sentence 1 -------------------

 16. Jean, S., Cho, K., Memisevic, R. & Bengio, Y. 

Tokens are: 
>> ['16', '.', 'Jean', ',', 'S.', ',', 'Cho', ',', 'K.', ',', 'Memisevic', ',', 'R.', '&', 'Bengio', ',', 'Y.'] 

 UPOS tags are: 
>> [('16', 'NUM'), ('.', 'PUNCT'), ('Jean', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), (',', 'PUNCT'), ('Cho', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), (',', 'PUNCT'), ('Memisevic', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('&', 'CCONJ'), ('Bengio', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN')] 

 XPOS tags are: 
>> [('16', 'LS'), ('.', '.'), ('Jean', 'NNP'), (',', ','), ('S.', 'NNP'), (',', ','), ('Cho', 'NNP'), (',', ','), ('K.', 'NNP'), (',', ','), ('Memisevic', 'NNP'), (',', ','), ('R.', 'NNP'), ('&', 'CC'), ('Bengio', 'NNP'), (',', ','), ('Y.', 'NNP')] 

 Lemmas are: 
>> [('16', '16'), ('.', '.'), ('Jean', 'Jean'), (',', ','), ('S.', 'S.'), (',', ','), ('Cho', 'Cho'), (',', ','), ('K.', 'K.'), (',', ','), ('Memisevic', 'Memisevic'), (',', ','), ('R.', 'R.'), ('&', '&'), ('Bengio', 'Bengio'), (',', ','), ('Y.', 'Y.')] 

 Dependency tags are: 
>> [(('16', 'Jean'), 'nummod'), (('.', '16'), 'punct'), (('Jean', 'root'), 'root'), ((',', 'S.'), 'punct'), (('S.', 'Jean'), 'conj'), ((',', 'Cho'), 'punct'), (('Cho', 'Jean'), 'conj'), ((',', 'K.'), 'punct'), (('K.', 'Jean'), 'conj'), ((',', 'Memisevic'), 'punct'), (('Memisevic', 'Jean'), 'conj'), ((',', 'R.'), 'punct'), (('R.', 'Jean'), 'conj'), (('&', 'Bengio'), 'cc'), (('Bengio', 'R.'), 'conj'), ((',', 'Y.'), 'punct'), (('Y.', 'Jean'), 'conj')]

 Named Entites are: 
>> [('16', 'CARDINAL'), ('Jean', 'PERSON'), ('S.', 'NORP'), ('Cho', 'PERSON'), ('Memisevic', 'GPE'), ('R. & Bengio', 'PERSON')]

------------------- Sentence 2 -------------------

 On using very large target  vocabulary for neural machine translation. 

Tokens are: 
>> ['On', 'using', 'very', 'large', 'target', 'vocabulary', 'for', 'neural', 'machine', 'translation', '.'] 

 UPOS tags are: 
>> [('On', 'SCONJ'), ('using', 'VERB'), ('very', 'ADV'), ('large', 'ADJ'), ('target', 'NOUN'), ('vocabulary', 'NOUN'), ('for', 'ADP'), ('neural', 'ADJ'), ('machine', 'NOUN'), ('translation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('On', 'IN'), ('using', 'VBG'), ('very', 'RB'), ('large', 'JJ'), ('target', 'NN'), ('vocabulary', 'NN'), ('for', 'IN'), ('neural', 'JJ'), ('machine', 'NN'), ('translation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('On', 'on'), ('using', 'use'), ('very', 'very'), ('large', 'large'), ('target', 'target'), ('vocabulary', 'vocabulary'), ('for', 'for'), ('neural', 'neural'), ('machine', 'machine'), ('translation', 'translation'), ('.', '.')] 

 Dependency tags are: 
>> [(('On', 'using'), 'mark'), (('using', 'root'), 'root'), (('very', 'large'), 'advmod'), (('large', 'vocabulary'), 'amod'), (('target', 'vocabulary'), 'compound'), (('vocabulary', 'using'), 'obj'), (('for', 'translation'), 'case'), (('neural', 'translation'), 'amod'), (('machine', 'translation'), 'compound'), (('translation', 'vocabulary'), 'nmod'), (('.', 'using'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 In Proc. ACL-IJCNLP http://arxiv.org/ abs/1412.2007 (2015). 

Tokens are: 
>> ['In', 'Proc.', 'ACL-IJCNLP', 'http://arxiv.org/', 'abs/1412.2007', '(', '2015', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('ACL-IJCNLP', 'PROPN'), ('http://arxiv.org/', 'X'), ('abs/1412.2007', 'NUM'), ('(', 'PUNCT'), ('2015', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('ACL-IJCNLP', 'NNP'), ('http://arxiv.org/', 'ADD'), ('abs/1412.2007', 'CD'), ('(', '-LRB-'), ('2015', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('ACL-IJCNLP', 'ACL-IJCNLP'), ('http://arxiv.org/', 'http://arxiv.org/'), ('abs/1412.2007', 'abs/1412.2007'), ('(', '('), ('2015', '2015'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Proc.'), 'case'), (('Proc.', 'ACL-IJCNLP'), 'compound'), (('ACL-IJCNLP', 'root'), 'root'), (('http://arxiv.org/', 'ACL-IJCNLP'), 'list'), (('abs/1412.2007', 'ACL-IJCNLP'), 'list'), (('(', '2015'), 'punct'), (('2015', 'abs/1412.2007'), 'nmod:tmod'), ((')', '2015'), 'punct'), (('.', 'ACL-IJCNLP'), 'punct')]

 Named Entites are: 
>> [('Proc. ACL-IJCNLP', 'ORG'), ('2015', 'DATE')]

================================ Paragraph 262 =================================

17. Sutskever, I. Vinyals, O. & Le. Q. V. Sequence to sequence learning with neural  networks. In Proc. Advances in Neural Information Processing Systems 27  3104–3112 (2014).  


------------------- Sentence 1 -------------------

 17. 

Tokens are: 
>> ['17', '.'] 

 UPOS tags are: 
>> [('17', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('17', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('17', '17'), ('.', '.')] 

 Dependency tags are: 
>> [(('17', 'root'), 'root'), (('.', '17'), 'punct')]

 Named Entites are: 
>> [('17', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Sutskever, I. Vinyals, O. & Le. Q. V. Sequence to sequence learning with neural  networks. 

Tokens are: 
>> ['Sutskever', ',', 'I.', 'Vinyals', ',', 'O.', '&', 'Le.', 'Q.', 'V.', 'Sequence', 'to', 'sequence', 'learning', 'with', 'neural', 'networks', '.'] 

 UPOS tags are: 
>> [('Sutskever', 'PROPN'), (',', 'PUNCT'), ('I.', 'PROPN'), ('Vinyals', 'PROPN'), (',', 'PUNCT'), ('O.', 'PROPN'), ('&', 'CCONJ'), ('Le.', 'PROPN'), ('Q.', 'PROPN'), ('V.', 'NOUN'), ('Sequence', 'NOUN'), ('to', 'ADP'), ('sequence', 'VERB'), ('learning', 'NOUN'), ('with', 'ADP'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Sutskever', 'NNP'), (',', ','), ('I.', 'NNP'), ('Vinyals', 'NNPS'), (',', ','), ('O.', 'NNP'), ('&', 'CC'), ('Le.', 'NNP'), ('Q.', 'NNP'), ('V.', 'NN'), ('Sequence', 'NN'), ('to', 'IN'), ('sequence', 'VB'), ('learning', 'NN'), ('with', 'IN'), ('neural', 'JJ'), ('networks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Sutskever', 'Sutskever'), (',', ','), ('I.', 'i.'), ('Vinyals', 'Vinyals'), (',', ','), ('O.', 'O.'), ('&', '&'), ('Le.', 'Le.'), ('Q.', 'Q.'), ('V.', 'V.'), ('Sequence', 'sequence'), ('to', 'to'), ('sequence', 'sequence'), ('learning', 'learning'), ('with', 'with'), ('neural', 'neural'), ('networks', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('Sutskever', 'root'), 'root'), ((',', 'Sutskever'), 'punct'), (('I.', 'Sutskever'), 'flat'), (('Vinyals', 'Sutskever'), 'flat'), ((',', 'O.'), 'punct'), (('O.', 'Sutskever'), 'conj'), (('&', 'Le.'), 'cc'), (('Le.', 'O.'), 'conj'), (('Q.', 'Sutskever'), 'list'), (('V.', 'Sequence'), 'compound'), (('Sequence', 'Sutskever'), 'parataxis'), (('to', 'sequence'), 'mark'), (('sequence', 'Sequence'), 'acl'), (('learning', 'sequence'), 'obj'), (('with', 'networks'), 'case'), (('neural', 'networks'), 'amod'), (('networks', 'learning'), 'nmod'), (('.', 'Sutskever'), 'punct')]

 Named Entites are: 
>> [('Sutskever', 'ORG'), ('I. Vinyals', 'PERSON'), ('O. & Le.', 'ORG')]

------------------- Sentence 3 -------------------

 In Proc. Advances in Neural Information Processing Systems 27  3104–3112 (2014). 

Tokens are: 
>> ['In', 'Proc.', 'Advances', 'in', 'Neural', 'Information', 'Processing', 'Systems', '27', '3104–3112', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'NOUN'), ('Advances', 'NOUN'), ('in', 'ADP'), ('Neural', 'ADJ'), ('Information', 'NOUN'), ('Processing', 'NOUN'), ('Systems', 'NOUN'), ('27', 'NUM'), ('3104–3112', 'NUM'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NN'), ('Advances', 'NNS'), ('in', 'IN'), ('Neural', 'JJ'), ('Information', 'NN'), ('Processing', 'NN'), ('Systems', 'NNS'), ('27', 'CD'), ('3104–3112', 'CD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'proc.'), ('Advances', 'advance'), ('in', 'in'), ('Neural', 'neural'), ('Information', 'information'), ('Processing', 'processing'), ('Systems', 'system'), ('27', '27'), ('3104–3112', '3104–3112'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Advances'), 'case'), (('Proc.', 'Advances'), 'compound'), (('Advances', 'root'), 'root'), (('in', 'Systems'), 'case'), (('Neural', 'Information'), 'amod'), (('Information', 'Systems'), 'compound'), (('Processing', 'Systems'), 'compound'), (('Systems', 'Advances'), 'nmod'), (('27', 'Systems'), 'nummod'), (('3104–3112', '27'), 'flat'), (('(', '2014'), 'punct'), (('2014', 'Systems'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'Advances'), 'punct')]

 Named Entites are: 
>> [('Neural Information Processing Systems', 'ORG'), ('27', 'CARDINAL'), ('3104–3112', 'CARDINAL'), ('2014', 'DATE')]

================================ Paragraph 263 =================================

 This paper showed state-of-the-art machine translation results with the  architecture introduced in ref. 72, with a recurrent network trained to read a  sentence in one language, produce a semantic representation of its meaning,  and generate a translation in another language. 


------------------- Sentence 1 -------------------

 This paper showed state-of-the-art machine translation results with the  architecture introduced in ref. 72, with a recurrent network trained to read a  sentence in one language, produce a semantic representation of its meaning,  and generate a translation in another language. 

Tokens are: 
>> ['This', 'paper', 'showed', 'state', '-', 'of', '-', 'the', '-', 'art', 'machine', 'translation', 'results', 'with', 'the', 'architecture', 'introduced', 'in', 'ref.', '72', ',', 'with', 'a', 'recurrent', 'network', 'trained', 'to', 'read', 'a', 'sentence', 'in', 'one', 'language', ',', 'produce', 'a', 'semantic', 'representation', 'of', 'its', 'meaning', ',', 'and', 'generate', 'a', 'translation', 'in', 'another', 'language', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('paper', 'NOUN'), ('showed', 'VERB'), ('state', 'NOUN'), ('-', 'PUNCT'), ('of', 'ADP'), ('-', 'PUNCT'), ('the', 'DET'), ('-', 'PUNCT'), ('art', 'NOUN'), ('machine', 'NOUN'), ('translation', 'NOUN'), ('results', 'NOUN'), ('with', 'ADP'), ('the', 'DET'), ('architecture', 'NOUN'), ('introduced', 'VERB'), ('in', 'ADP'), ('ref.', 'NOUN'), ('72', 'NUM'), (',', 'PUNCT'), ('with', 'ADP'), ('a', 'DET'), ('recurrent', 'ADJ'), ('network', 'NOUN'), ('trained', 'VERB'), ('to', 'PART'), ('read', 'VERB'), ('a', 'DET'), ('sentence', 'NOUN'), ('in', 'ADP'), ('one', 'NUM'), ('language', 'NOUN'), (',', 'PUNCT'), ('produce', 'VERB'), ('a', 'DET'), ('semantic', 'ADJ'), ('representation', 'NOUN'), ('of', 'ADP'), ('its', 'PRON'), ('meaning', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('generate', 'VERB'), ('a', 'DET'), ('translation', 'NOUN'), ('in', 'ADP'), ('another', 'DET'), ('language', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('paper', 'NN'), ('showed', 'VBD'), ('state', 'NN'), ('-', 'HYPH'), ('of', 'IN'), ('-', 'HYPH'), ('the', 'DT'), ('-', 'HYPH'), ('art', 'NN'), ('machine', 'NN'), ('translation', 'NN'), ('results', 'NNS'), ('with', 'IN'), ('the', 'DT'), ('architecture', 'NN'), ('introduced', 'VBN'), ('in', 'IN'), ('ref.', 'NN'), ('72', 'CD'), (',', ','), ('with', 'IN'), ('a', 'DT'), ('recurrent', 'JJ'), ('network', 'NN'), ('trained', 'VBN'), ('to', 'TO'), ('read', 'VB'), ('a', 'DT'), ('sentence', 'NN'), ('in', 'IN'), ('one', 'CD'), ('language', 'NN'), (',', ','), ('produce', 'VB'), ('a', 'DT'), ('semantic', 'JJ'), ('representation', 'NN'), ('of', 'IN'), ('its', 'PRP$'), ('meaning', 'NN'), (',', ','), ('and', 'CC'), ('generate', 'VB'), ('a', 'DT'), ('translation', 'NN'), ('in', 'IN'), ('another', 'DT'), ('language', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('paper', 'paper'), ('showed', 'show'), ('state', 'state'), ('-', '-'), ('of', 'of'), ('-', '-'), ('the', 'the'), ('-', '-'), ('art', 'art'), ('machine', 'machine'), ('translation', 'translation'), ('results', 'result'), ('with', 'with'), ('the', 'the'), ('architecture', 'architecture'), ('introduced', 'introduce'), ('in', 'in'), ('ref.', 'ref.'), ('72', '72'), (',', ','), ('with', 'with'), ('a', 'a'), ('recurrent', 'recurrent'), ('network', 'network'), ('trained', 'train'), ('to', 'to'), ('read', 'read'), ('a', 'a'), ('sentence', 'sentence'), ('in', 'in'), ('one', 'one'), ('language', 'language'), (',', ','), ('produce', 'produce'), ('a', 'a'), ('semantic', 'semantic'), ('representation', 'representation'), ('of', 'of'), ('its', 'its'), ('meaning', 'meaning'), (',', ','), ('and', 'and'), ('generate', 'generate'), ('a', 'a'), ('translation', 'translation'), ('in', 'in'), ('another', 'another'), ('language', 'language'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'paper'), 'det'), (('paper', 'showed'), 'nsubj'), (('showed', 'root'), 'root'), (('state', 'results'), 'compound'), (('-', 'state'), 'punct'), (('of', 'art'), 'case'), (('-', 'art'), 'punct'), (('the', 'art'), 'det'), (('-', 'art'), 'punct'), (('art', 'state'), 'nmod'), (('machine', 'results'), 'compound'), (('translation', 'results'), 'compound'), (('results', 'showed'), 'obj'), (('with', 'architecture'), 'case'), (('the', 'architecture'), 'det'), (('architecture', 'results'), 'nmod'), (('introduced', 'architecture'), 'acl'), (('in', 'ref.'), 'case'), (('ref.', 'introduced'), 'obl'), (('72', 'ref.'), 'nummod'), ((',', 'network'), 'punct'), (('with', 'network'), 'case'), (('a', 'network'), 'det'), (('recurrent', 'network'), 'amod'), (('network', 'results'), 'nmod'), (('trained', 'network'), 'acl'), (('to', 'read'), 'mark'), (('read', 'trained'), 'xcomp'), (('a', 'sentence'), 'det'), (('sentence', 'read'), 'obj'), (('in', 'language'), 'case'), (('one', 'language'), 'nummod'), (('language', 'read'), 'obl'), ((',', 'produce'), 'punct'), (('produce', 'read'), 'conj'), (('a', 'representation'), 'det'), (('semantic', 'representation'), 'amod'), (('representation', 'produce'), 'obj'), (('of', 'meaning'), 'case'), (('its', 'meaning'), 'nmod:poss'), (('meaning', 'representation'), 'nmod'), ((',', 'generate'), 'punct'), (('and', 'generate'), 'cc'), (('generate', 'produce'), 'conj'), (('a', 'translation'), 'det'), (('translation', 'generate'), 'obj'), (('in', 'language'), 'case'), (('another', 'language'), 'det'), (('language', 'translation'), 'nmod'), (('.', 'showed'), 'punct')]

 Named Entites are: 
>> [('72', 'CARDINAL')]

================================ Paragraph 264 =================================

18. Bottou, L. & Bousquet, O. The tradeoffs of large scale learning. In Proc. Advances  in Neural Information Processing Systems 20 161–168 (2007).  


------------------- Sentence 1 -------------------

 18. Bottou, L. & Bousquet, O. 

Tokens are: 
>> ['18', '.', 'Bottou', ',', 'L.', '&', 'Bousquet', ',', 'O', '.'] 

 UPOS tags are: 
>> [('18', 'NUM'), ('.', 'PUNCT'), ('Bottou', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('&', 'CCONJ'), ('Bousquet', 'PROPN'), (',', 'PUNCT'), ('O', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('18', 'LS'), ('.', '.'), ('Bottou', 'NNP'), (',', ','), ('L.', 'NNP'), ('&', 'CC'), ('Bousquet', 'NNP'), (',', ','), ('O', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('18', '18'), ('.', '.'), ('Bottou', 'Bottou'), (',', ','), ('L.', 'L.'), ('&', '&'), ('Bousquet', 'Bousquet'), (',', ','), ('O', 'o'), ('.', '.')] 

 Dependency tags are: 
>> [(('18', 'Bottou'), 'nummod'), (('.', '18'), 'punct'), (('Bottou', 'root'), 'root'), ((',', 'L.'), 'punct'), (('L.', 'Bottou'), 'conj'), (('&', 'Bousquet'), 'cc'), (('Bousquet', 'Bottou'), 'conj'), ((',', 'Bottou'), 'punct'), (('O', 'Bottou'), 'list'), (('.', 'Bottou'), 'punct')]

 Named Entites are: 
>> [('18', 'CARDINAL'), ('L. & Bousquet', 'GPE')]

------------------- Sentence 2 -------------------

 The tradeoffs of large scale learning. 

Tokens are: 
>> ['The', 'tradeoffs', 'of', 'large', 'scale', 'learning', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('tradeoffs', 'NOUN'), ('of', 'ADP'), ('large', 'ADJ'), ('scale', 'NOUN'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('tradeoffs', 'NNS'), ('of', 'IN'), ('large', 'JJ'), ('scale', 'NN'), ('learning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('tradeoffs', 'tradeoff'), ('of', 'of'), ('large', 'large'), ('scale', 'scale'), ('learning', 'learning'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'tradeoffs'), 'det'), (('tradeoffs', 'root'), 'root'), (('of', 'learning'), 'case'), (('large', 'learning'), 'amod'), (('scale', 'learning'), 'compound'), (('learning', 'tradeoffs'), 'nmod'), (('.', 'tradeoffs'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 In Proc. Advances  in Neural Information Processing Systems 20 161–168 (2007). 

Tokens are: 
>> ['In', 'Proc.', 'Advances', 'in', 'Neural', 'Information', 'Processing', 'Systems', '20', '161–168', '(', '2007', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'NOUN'), ('Advances', 'NOUN'), ('in', 'ADP'), ('Neural', 'ADJ'), ('Information', 'NOUN'), ('Processing', 'NOUN'), ('Systems', 'NOUN'), ('20', 'NUM'), ('161–168', 'NUM'), ('(', 'PUNCT'), ('2007', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NN'), ('Advances', 'NNS'), ('in', 'IN'), ('Neural', 'JJ'), ('Information', 'NN'), ('Processing', 'NN'), ('Systems', 'NNS'), ('20', 'CD'), ('161–168', 'CD'), ('(', '-LRB-'), ('2007', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'proc.'), ('Advances', 'advance'), ('in', 'in'), ('Neural', 'neural'), ('Information', 'information'), ('Processing', 'processing'), ('Systems', 'system'), ('20', '20'), ('161–168', '161–168'), ('(', '('), ('2007', '2007'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Advances'), 'case'), (('Proc.', 'Advances'), 'compound'), (('Advances', 'root'), 'root'), (('in', 'Systems'), 'case'), (('Neural', 'Information'), 'amod'), (('Information', 'Systems'), 'compound'), (('Processing', 'Systems'), 'compound'), (('Systems', 'Advances'), 'nmod'), (('20', 'Systems'), 'nummod'), (('161–168', 'Systems'), 'appos'), (('(', '2007'), 'punct'), (('2007', 'Systems'), 'nmod:tmod'), ((')', '2007'), 'punct'), (('.', 'Advances'), 'punct')]

 Named Entites are: 
>> [('Neural Information Processing Systems', 'ORG'), ('20 161–168', 'CARDINAL'), ('2007', 'DATE')]

================================ Paragraph 265 =================================

19. Duda, R. O. & Hart, P. E. Pattern Classification and Scene Analysis (Wiley, 1973).  20. Schölkopf, B. & Smola, A. Learning with Kernels (MIT Press, 2002).  21. Bengio, Y., Delalleau, O. & Le Roux, N. The curse of highly variable functions  


------------------- Sentence 1 -------------------

 19. Duda, R. O. & Hart, P. E. Pattern Classification and Scene Analysis (Wiley, 1973). 

Tokens are: 
>> ['19', '.', 'Duda', ',', 'R.', 'O.', '&', 'Hart', ',', 'P.', 'E.', 'Pattern', 'Classification', 'and', 'Scene', 'Analysis', '(', 'Wiley', ',', '1973', ')', '.'] 

 UPOS tags are: 
>> [('19', 'NUM'), ('.', 'PUNCT'), ('Duda', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('O.', 'PROPN'), ('&', 'CCONJ'), ('Hart', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('E.', 'PROPN'), ('Pattern', 'PROPN'), ('Classification', 'PROPN'), ('and', 'CCONJ'), ('Scene', 'PROPN'), ('Analysis', 'PROPN'), ('(', 'PUNCT'), ('Wiley', 'PROPN'), (',', 'PUNCT'), ('1973', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('19', 'LS'), ('.', '.'), ('Duda', 'NNP'), (',', ','), ('R.', 'NNP'), ('O.', 'NNP'), ('&', 'CC'), ('Hart', 'NNP'), (',', ','), ('P.', 'NNP'), ('E.', 'NNP'), ('Pattern', 'NNP'), ('Classification', 'NNP'), ('and', 'CC'), ('Scene', 'NNP'), ('Analysis', 'NNP'), ('(', '-LRB-'), ('Wiley', 'NNP'), (',', ','), ('1973', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('19', '19'), ('.', '.'), ('Duda', 'Duda'), (',', ','), ('R.', 'R.'), ('O.', 'O.'), ('&', '&'), ('Hart', 'Hart'), (',', ','), ('P.', 'P.'), ('E.', 'E.'), ('Pattern', 'Pattern'), ('Classification', 'Classification'), ('and', 'and'), ('Scene', 'scene'), ('Analysis', 'Analysis'), ('(', '('), ('Wiley', 'Wiley'), (',', ','), ('1973', '1973'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('19', 'Duda'), 'nummod'), (('.', '19'), 'punct'), (('Duda', 'root'), 'root'), ((',', 'R.'), 'punct'), (('R.', 'Duda'), 'flat'), (('O.', 'Duda'), 'flat'), (('&', 'Hart'), 'cc'), (('Hart', 'Duda'), 'conj'), ((',', 'P.'), 'punct'), (('P.', 'Duda'), 'list'), (('E.', 'P.'), 'flat'), (('Pattern', 'Classification'), 'compound'), (('Classification', 'Duda'), 'list'), (('and', 'Analysis'), 'cc'), (('Scene', 'Analysis'), 'compound'), (('Analysis', 'Duda'), 'conj'), (('(', 'Wiley'), 'punct'), (('Wiley', 'Analysis'), 'appos'), ((',', 'Wiley'), 'punct'), (('1973', 'Wiley'), 'nummod'), ((')', 'Wiley'), 'punct'), (('.', 'Duda'), 'punct')]

 Named Entites are: 
>> [('19. Duda, R. O. & Hart', 'ORG'), ('P. E. Pattern Classification and Scene Analysis (Wiley', 'ORG'), ('1973', 'DATE')]

------------------- Sentence 2 -------------------

 20. 

Tokens are: 
>> ['20', '.'] 

 UPOS tags are: 
>> [('20', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('20', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('20', '20'), ('.', '.')] 

 Dependency tags are: 
>> [(('20', 'root'), 'root'), (('.', '20'), 'punct')]

 Named Entites are: 
>> [('20', 'CARDINAL')]

------------------- Sentence 3 -------------------

 Schölkopf, B. & Smola, A. Learning with Kernels (MIT Press, 2002). 

Tokens are: 
>> ['Schölkopf', ',', 'B.', '&', 'Smola', ',', 'A.', 'Learning', 'with', 'Kernels', '(', 'MIT', 'Press', ',', '2002', ')', '.'] 

 UPOS tags are: 
>> [('Schölkopf', 'PROPN'), (',', 'PUNCT'), ('B.', 'PROPN'), ('&', 'CCONJ'), ('Smola', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('Learning', 'PROPN'), ('with', 'ADP'), ('Kernels', 'PROPN'), ('(', 'PUNCT'), ('MIT', 'PROPN'), ('Press', 'PROPN'), (',', 'PUNCT'), ('2002', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Schölkopf', 'NNP'), (',', ','), ('B.', 'NNP'), ('&', 'CC'), ('Smola', 'NNP'), (',', ','), ('A.', 'NNP'), ('Learning', 'NNP'), ('with', 'IN'), ('Kernels', 'NNPS'), ('(', '-LRB-'), ('MIT', 'NNP'), ('Press', 'NNP'), (',', ','), ('2002', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Schölkopf', 'Schölkopf'), (',', ','), ('B.', 'B.'), ('&', '&'), ('Smola', 'Smola'), (',', ','), ('A.', 'A.'), ('Learning', 'learning'), ('with', 'with'), ('Kernels', 'Kernels'), ('(', '('), ('MIT', 'MIT'), ('Press', 'Press'), (',', ','), ('2002', '2002'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Schölkopf', 'root'), 'root'), ((',', 'B.'), 'punct'), (('B.', 'Schölkopf'), 'conj'), (('&', 'Smola'), 'cc'), (('Smola', 'Schölkopf'), 'conj'), ((',', 'Schölkopf'), 'punct'), (('A.', 'Schölkopf'), 'list'), (('Learning', 'A.'), 'flat'), (('with', 'Kernels'), 'case'), (('Kernels', 'Schölkopf'), 'nmod'), (('(', 'Press'), 'punct'), (('MIT', 'Press'), 'compound'), (('Press', 'Kernels'), 'appos'), ((',', '2002'), 'punct'), (('2002', 'Press'), 'nmod:tmod'), ((')', 'Press'), 'punct'), (('.', 'Schölkopf'), 'punct')]

 Named Entites are: 
>> [('Schölkopf', 'ORG'), ('B. & Smola', 'ORG'), ('A. Learning', 'ORG'), ('Kernels', 'ORG'), ('MIT Press', 'ORG'), ('2002', 'DATE')]

------------------- Sentence 4 -------------------

 21. 

Tokens are: 
>> ['21', '.'] 

 UPOS tags are: 
>> [('21', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('21', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('21', '21'), ('.', '.')] 

 Dependency tags are: 
>> [(('21', 'root'), 'root'), (('.', '21'), 'punct')]

 Named Entites are: 
>> [('21', 'CARDINAL')]

------------------- Sentence 5 -------------------

 Bengio, Y., Delalleau, O. & Le Roux, N. 

Tokens are: 
>> ['Bengio', ',', 'Y.', ',', 'Delalleau', ',', 'O.', '&', 'Le', 'Roux', ',', 'N.'] 

 UPOS tags are: 
>> [('Bengio', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), (',', 'PUNCT'), ('Delalleau', 'PROPN'), (',', 'PUNCT'), ('O.', 'PROPN'), ('&', 'CCONJ'), ('Le', 'PROPN'), ('Roux', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN')] 

 XPOS tags are: 
>> [('Bengio', 'NNP'), (',', ','), ('Y.', 'NNP'), (',', ','), ('Delalleau', 'NNP'), (',', ','), ('O.', 'NNP'), ('&', 'CC'), ('Le', 'NNP'), ('Roux', 'NNP'), (',', ','), ('N.', 'NNP')] 

 Lemmas are: 
>> [('Bengio', 'Bengio'), (',', ','), ('Y.', 'Y.'), (',', ','), ('Delalleau', 'Delalleau'), (',', ','), ('O.', 'O.'), ('&', '&'), ('Le', 'Le'), ('Roux', 'Roux'), (',', ','), ('N.', 'N.')] 

 Dependency tags are: 
>> [(('Bengio', 'root'), 'root'), ((',', 'Y.'), 'punct'), (('Y.', 'Bengio'), 'conj'), ((',', 'Delalleau'), 'punct'), (('Delalleau', 'Bengio'), 'conj'), ((',', 'O.'), 'punct'), (('O.', 'Bengio'), 'conj'), (('&', 'Le'), 'cc'), (('Le', 'Bengio'), 'conj'), (('Roux', 'Le'), 'flat'), ((',', 'N.'), 'punct'), (('N.', 'Bengio'), 'conj')]

 Named Entites are: 
>> [('Bengio', 'ORG'), ('Y.', 'NORP'), ('Delalleau', 'GPE'), ('O. & Le Roux', 'ORG'), ('N.', 'GPE')]

------------------- Sentence 6 -------------------

 The curse of highly variable functions 

Tokens are: 
>> ['The', 'curse', 'of', 'highly', 'variable', 'functions'] 

 UPOS tags are: 
>> [('The', 'DET'), ('curse', 'NOUN'), ('of', 'ADP'), ('highly', 'ADV'), ('variable', 'ADJ'), ('functions', 'NOUN')] 

 XPOS tags are: 
>> [('The', 'DT'), ('curse', 'NN'), ('of', 'IN'), ('highly', 'RB'), ('variable', 'JJ'), ('functions', 'NNS')] 

 Lemmas are: 
>> [('The', 'the'), ('curse', 'curse'), ('of', 'of'), ('highly', 'highly'), ('variable', 'variable'), ('functions', 'function')] 

 Dependency tags are: 
>> [(('The', 'curse'), 'det'), (('curse', 'root'), 'root'), (('of', 'functions'), 'case'), (('highly', 'variable'), 'advmod'), (('variable', 'functions'), 'amod'), (('functions', 'curse'), 'nmod')]

 Named Entites are: 
>> []

================================ Paragraph 266 =================================

for local kernel machines. In Proc. Advances in Neural Information Processing  Systems 18 107–114 (2005).  


------------------- Sentence 1 -------------------

 for local kernel machines. 

Tokens are: 
>> ['for', 'local', 'kernel', 'machines', '.'] 

 UPOS tags are: 
>> [('for', 'ADP'), ('local', 'ADJ'), ('kernel', 'NOUN'), ('machines', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('for', 'IN'), ('local', 'JJ'), ('kernel', 'NN'), ('machines', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('for', 'for'), ('local', 'local'), ('kernel', 'kernel'), ('machines', 'machine'), ('.', '.')] 

 Dependency tags are: 
>> [(('for', 'machines'), 'case'), (('local', 'machines'), 'amod'), (('kernel', 'machines'), 'compound'), (('machines', 'root'), 'root'), (('.', 'machines'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 In Proc. Advances in Neural Information Processing  Systems 18 107–114 (2005). 

Tokens are: 
>> ['In', 'Proc.', 'Advances', 'in', 'Neural', 'Information', 'Processing', 'Systems', '18', '107–114', '(', '2005', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'NOUN'), ('Advances', 'NOUN'), ('in', 'ADP'), ('Neural', 'ADJ'), ('Information', 'NOUN'), ('Processing', 'NOUN'), ('Systems', 'NOUN'), ('18', 'NUM'), ('107–114', 'NUM'), ('(', 'PUNCT'), ('2005', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NN'), ('Advances', 'NNS'), ('in', 'IN'), ('Neural', 'JJ'), ('Information', 'NN'), ('Processing', 'NN'), ('Systems', 'NNS'), ('18', 'CD'), ('107–114', 'CD'), ('(', '-LRB-'), ('2005', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'proc.'), ('Advances', 'advance'), ('in', 'in'), ('Neural', 'neural'), ('Information', 'information'), ('Processing', 'processing'), ('Systems', 'system'), ('18', '18'), ('107–114', '107–114'), ('(', '('), ('2005', '2005'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Advances'), 'case'), (('Proc.', 'Advances'), 'compound'), (('Advances', 'root'), 'root'), (('in', 'Systems'), 'case'), (('Neural', 'Information'), 'amod'), (('Information', 'Systems'), 'compound'), (('Processing', 'Systems'), 'compound'), (('Systems', 'Advances'), 'nmod'), (('18', '107–114'), 'compound'), (('107–114', 'Systems'), 'nummod'), (('(', '2005'), 'punct'), (('2005', '107–114'), 'nmod:tmod'), ((')', '2005'), 'punct'), (('.', 'Advances'), 'punct')]

 Named Entites are: 
>> [('Neural Information Processing  Systems', 'ORG'), ('18', 'CARDINAL'), ('107–114', 'CARDINAL'), ('2005', 'DATE')]

================================ Paragraph 267 =================================

22. Selfridge, O. G. Pandemonium: a paradigm for learning in mechanisation of  thought processes. In Proc. Symposium on Mechanisation of Thought Processes  513–526 (1958).  


------------------- Sentence 1 -------------------

 22. Selfridge, O. G. Pandemonium: a paradigm for learning in mechanisation of  thought processes. 

Tokens are: 
>> ['22', '.', 'Selfridge', ',', 'O.', 'G.', 'Pandemonium', ':', 'a', 'paradigm', 'for', 'learning', 'in', 'mechanisation', 'of', 'thought', 'processes', '.'] 

 UPOS tags are: 
>> [('22', 'NUM'), ('.', 'PUNCT'), ('Selfridge', 'PROPN'), (',', 'PUNCT'), ('O.', 'PROPN'), ('G.', 'PROPN'), ('Pandemonium', 'PROPN'), (':', 'PUNCT'), ('a', 'DET'), ('paradigm', 'NOUN'), ('for', 'SCONJ'), ('learning', 'VERB'), ('in', 'ADP'), ('mechanisation', 'NOUN'), ('of', 'ADP'), ('thought', 'NOUN'), ('processes', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('22', 'LS'), ('.', '.'), ('Selfridge', 'NNP'), (',', ','), ('O.', 'NNP'), ('G.', 'NNP'), ('Pandemonium', 'NNP'), (':', ':'), ('a', 'DT'), ('paradigm', 'NN'), ('for', 'IN'), ('learning', 'VBG'), ('in', 'IN'), ('mechanisation', 'NN'), ('of', 'IN'), ('thought', 'NN'), ('processes', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('22', '22'), ('.', '.'), ('Selfridge', 'Selfridge'), (',', ','), ('O.', 'O.'), ('G.', 'G.'), ('Pandemonium', 'Pandemonium'), (':', ':'), ('a', 'a'), ('paradigm', 'paradigm'), ('for', 'for'), ('learning', 'learn'), ('in', 'in'), ('mechanisation', 'mechanisation'), ('of', 'of'), ('thought', 'thought'), ('processes', 'process'), ('.', '.')] 

 Dependency tags are: 
>> [(('22', 'Selfridge'), 'nummod'), (('.', '22'), 'punct'), (('Selfridge', 'root'), 'root'), ((',', 'Selfridge'), 'punct'), (('O.', 'Selfridge'), 'flat'), (('G.', 'O.'), 'flat'), (('Pandemonium', 'Selfridge'), 'flat'), ((':', 'paradigm'), 'punct'), (('a', 'paradigm'), 'det'), (('paradigm', 'Selfridge'), 'appos'), (('for', 'learning'), 'mark'), (('learning', 'paradigm'), 'acl'), (('in', 'mechanisation'), 'case'), (('mechanisation', 'learning'), 'obl'), (('of', 'processes'), 'case'), (('thought', 'processes'), 'compound'), (('processes', 'mechanisation'), 'nmod'), (('.', 'Selfridge'), 'punct')]

 Named Entites are: 
>> [('22', 'CARDINAL')]

------------------- Sentence 2 -------------------

 In Proc. Symposium on Mechanisation of Thought Processes  513–526 (1958). 

Tokens are: 
>> ['In', 'Proc.', 'Symposium', 'on', 'Mechanisation', 'of', 'Thought', 'Processes', '513–526', '(', '1958', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('Symposium', 'PROPN'), ('on', 'ADP'), ('Mechanisation', 'PROPN'), ('of', 'ADP'), ('Thought', 'PROPN'), ('Processes', 'PROPN'), ('513–526', 'NUM'), ('(', 'PUNCT'), ('1958', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('Symposium', 'NNP'), ('on', 'IN'), ('Mechanisation', 'NNP'), ('of', 'IN'), ('Thought', 'NNP'), ('Processes', 'NNPS'), ('513–526', 'CD'), ('(', '-LRB-'), ('1958', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('Symposium', 'Symposium'), ('on', 'on'), ('Mechanisation', 'Mechanisation'), ('of', 'of'), ('Thought', 'think'), ('Processes', 'Process'), ('513–526', '513–526'), ('(', '('), ('1958', '1958'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Symposium'), 'case'), (('Proc.', 'Symposium'), 'compound'), (('Symposium', 'root'), 'root'), (('on', 'Mechanisation'), 'case'), (('Mechanisation', 'Symposium'), 'nmod'), (('of', 'Processes'), 'case'), (('Thought', 'Processes'), 'compound'), (('Processes', 'Symposium'), 'nmod'), (('513–526', 'Processes'), 'appos'), (('(', '1958'), 'punct'), (('1958', 'Processes'), 'nmod:tmod'), ((')', '1958'), 'punct'), (('.', 'Symposium'), 'punct')]

 Named Entites are: 
>> [('Proc. Symposium on Mechanisation of Thought Processes  513–526', 'WORK_OF_ART'), ('1958', 'DATE')]

================================ Paragraph 268 =================================

23. Rosenblatt, F. The Perceptron — A Perceiving and Recognizing Automaton. Tech.  Rep. 85-460-1 (Cornell Aeronautical Laboratory, 1957).  


------------------- Sentence 1 -------------------

 23. Rosenblatt, F. The Perceptron — A Perceiving and Recognizing Automaton. 

Tokens are: 
>> ['23', '.', 'Rosenblatt', ',', 'F.', 'The', 'Perceptron', '—', 'A', 'Perceiving', 'and', 'Recognizing', 'Automaton', '.'] 

 UPOS tags are: 
>> [('23', 'NUM'), ('.', 'PUNCT'), ('Rosenblatt', 'PROPN'), (',', 'PUNCT'), ('F.', 'PROPN'), ('The', 'DET'), ('Perceptron', 'PROPN'), ('—', 'PUNCT'), ('A', 'DET'), ('Perceiving', 'VERB'), ('and', 'CCONJ'), ('Recognizing', 'VERB'), ('Automaton', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('23', 'LS'), ('.', '.'), ('Rosenblatt', 'NNP'), (',', ','), ('F.', 'NNP'), ('The', 'DT'), ('Perceptron', 'NNP'), ('—', ':'), ('A', 'DT'), ('Perceiving', 'VBG'), ('and', 'CC'), ('Recognizing', 'VBG'), ('Automaton', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('23', '23'), ('.', '.'), ('Rosenblatt', 'Rosenblatt'), (',', ','), ('F.', 'F.'), ('The', 'the'), ('Perceptron', 'Perceptron'), ('—', '—'), ('A', 'a'), ('Perceiving', 'perceive'), ('and', 'and'), ('Recognizing', 'recognize'), ('Automaton', 'automaton'), ('.', '.')] 

 Dependency tags are: 
>> [(('23', 'Rosenblatt'), 'nummod'), (('.', '23'), 'punct'), (('Rosenblatt', 'root'), 'root'), ((',', 'Rosenblatt'), 'punct'), (('F.', 'Rosenblatt'), 'list'), (('The', 'Perceptron'), 'det'), (('Perceptron', 'Rosenblatt'), 'list'), (('—', 'Rosenblatt'), 'punct'), (('A', 'Automaton'), 'det'), (('Perceiving', 'Automaton'), 'amod'), (('and', 'Recognizing'), 'cc'), (('Recognizing', 'Perceiving'), 'conj'), (('Automaton', 'Rosenblatt'), 'appos'), (('.', 'Rosenblatt'), 'punct')]

 Named Entites are: 
>> [('23', 'CARDINAL'), ('F. The Perceptron — A Perceiving and Recognizing Automaton', 'WORK_OF_ART')]

------------------- Sentence 2 -------------------

 Tech.  Rep. 85-460-1 (Cornell Aeronautical Laboratory, 1957). 

Tokens are: 
>> ['Tech.', 'Rep.', '85-460', '-1', '(', 'Cornell', 'Aeronautical', 'Laboratory', ',', '1957', ')', '.'] 

 UPOS tags are: 
>> [('Tech.', 'PROPN'), ('Rep.', 'PROPN'), ('85-460', 'NUM'), ('-1', 'PROPN'), ('(', 'PUNCT'), ('Cornell', 'PROPN'), ('Aeronautical', 'ADJ'), ('Laboratory', 'PROPN'), (',', 'PUNCT'), ('1957', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Tech.', 'NNP'), ('Rep.', 'NNP'), ('85-460', 'CD'), ('-1', 'NNP'), ('(', '-LRB-'), ('Cornell', 'NNP'), ('Aeronautical', 'NNP'), ('Laboratory', 'NNP'), (',', ','), ('1957', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Tech.', 'Tech.'), ('Rep.', 'Rep.'), ('85-460', '85-460'), ('-1', '-1'), ('(', '('), ('Cornell', 'Cornell'), ('Aeronautical', 'aeronautical'), ('Laboratory', 'Laboratory'), (',', ','), ('1957', '1957'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Tech.', 'root'), 'root'), (('Rep.', 'Tech.'), 'flat'), (('85-460', 'Tech.'), 'list'), (('-1', 'Tech.'), 'list'), (('(', 'Laboratory'), 'punct'), (('Cornell', 'Laboratory'), 'compound'), (('Aeronautical', 'Laboratory'), 'amod'), (('Laboratory', '-1'), 'appos'), ((',', '1957'), 'punct'), (('1957', 'Laboratory'), 'nmod:tmod'), ((')', 'Laboratory'), 'punct'), (('.', 'Tech.'), 'punct')]

 Named Entites are: 
>> [('85-460', 'CARDINAL'), ('Cornell Aeronautical Laboratory', 'ORG'), ('1957', 'DATE')]

================================ Paragraph 269 =================================

24. Werbos, P. Beyond Regression: New Tools for Prediction and Analysis in the  Behavioral Sciences. PhD thesis, Harvard Univ. (1974).  


------------------- Sentence 1 -------------------

 24. Werbos, P. Beyond Regression: New Tools for Prediction and Analysis in the  Behavioral Sciences. 

Tokens are: 
>> ['24', '.', 'Werbos', ',', 'P.', 'Beyond', 'Regression', ':', 'New', 'Tools', 'for', 'Prediction', 'and', 'Analysis', 'in', 'the', 'Behavioral', 'Sciences', '.'] 

 UPOS tags are: 
>> [('24', 'NUM'), ('.', 'PUNCT'), ('Werbos', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('Beyond', 'ADP'), ('Regression', 'PROPN'), (':', 'PUNCT'), ('New', 'ADJ'), ('Tools', 'PROPN'), ('for', 'ADP'), ('Prediction', 'PROPN'), ('and', 'CCONJ'), ('Analysis', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('Behavioral', 'ADJ'), ('Sciences', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('24', 'LS'), ('.', '.'), ('Werbos', 'NNP'), (',', ','), ('P.', 'NNP'), ('Beyond', 'IN'), ('Regression', 'NNP'), (':', ':'), ('New', 'NNP'), ('Tools', 'NNPS'), ('for', 'IN'), ('Prediction', 'NNP'), ('and', 'CC'), ('Analysis', 'NN'), ('in', 'IN'), ('the', 'DT'), ('Behavioral', 'NNP'), ('Sciences', 'NNPS'), ('.', '.')] 

 Lemmas are: 
>> [('24', '24'), ('.', '.'), ('Werbos', 'Werbos'), (',', ','), ('P.', 'P.'), ('Beyond', 'beyond'), ('Regression', 'Regression'), (':', ':'), ('New', 'New'), ('Tools', 'Tool'), ('for', 'for'), ('Prediction', 'Prediction'), ('and', 'and'), ('Analysis', 'analysis'), ('in', 'in'), ('the', 'the'), ('Behavioral', 'Behavioral'), ('Sciences', 'Science'), ('.', '.')] 

 Dependency tags are: 
>> [(('24', 'Werbos'), 'nummod'), (('.', '24'), 'punct'), (('Werbos', 'root'), 'root'), ((',', 'Werbos'), 'punct'), (('P.', 'Werbos'), 'flat'), (('Beyond', 'Regression'), 'case'), (('Regression', 'Werbos'), 'nmod'), ((':', 'Tools'), 'punct'), (('New', 'Tools'), 'amod'), (('Tools', 'Werbos'), 'list'), (('for', 'Prediction'), 'case'), (('Prediction', 'Tools'), 'nmod'), (('and', 'Analysis'), 'cc'), (('Analysis', 'Prediction'), 'conj'), (('in', 'Sciences'), 'case'), (('the', 'Sciences'), 'det'), (('Behavioral', 'Sciences'), 'amod'), (('Sciences', 'Prediction'), 'nmod'), (('.', 'Werbos'), 'punct')]

 Named Entites are: 
>> [('24', 'CARDINAL'), ('Werbos', 'PERSON'), ('the  Behavioral Sciences', 'ORG')]

------------------- Sentence 2 -------------------

 PhD thesis, Harvard Univ. (1974). 

Tokens are: 
>> ['PhD', 'thesis', ',', 'Harvard', 'Univ.', '(', '1974', ')', '.'] 

 UPOS tags are: 
>> [('PhD', 'NOUN'), ('thesis', 'NOUN'), (',', 'PUNCT'), ('Harvard', 'PROPN'), ('Univ.', 'PROPN'), ('(', 'PUNCT'), ('1974', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('PhD', 'NN'), ('thesis', 'NN'), (',', ','), ('Harvard', 'NNP'), ('Univ.', 'NNP'), ('(', '-LRB-'), ('1974', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('PhD', 'phd'), ('thesis', 'thesis'), (',', ','), ('Harvard', 'Harvard'), ('Univ.', 'Univ.'), ('(', '('), ('1974', '1974'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('PhD', 'thesis'), 'compound'), (('thesis', 'root'), 'root'), ((',', 'Univ.'), 'punct'), (('Harvard', 'Univ.'), 'compound'), (('Univ.', 'thesis'), 'appos'), (('(', '1974'), 'punct'), (('1974', 'Univ.'), 'nmod:tmod'), ((')', '1974'), 'punct'), (('.', 'thesis'), 'punct')]

 Named Entites are: 
>> [('PhD', 'WORK_OF_ART'), ('Harvard Univ.', 'ORG'), ('1974', 'DATE')]

================================ Paragraph 270 =================================

25. Parker, D. B. Learning Logic Report TR–47 (MIT Press, 1985).  26. LeCun, Y. Une procédure d’apprentissage pour Réseau à seuil assymétrique  


------------------- Sentence 1 -------------------

 25. Parker, D. B. Learning Logic Report TR–47 (MIT Press, 1985). 

Tokens are: 
>> ['25', '.', 'Parker', ',', 'D.', 'B.', 'Learning', 'Logic', 'Report', 'TR–47', '(', 'MIT', 'Press', ',', '1985', ')', '.'] 

 UPOS tags are: 
>> [('25', 'NUM'), ('.', 'PUNCT'), ('Parker', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('B.', 'PROPN'), ('Learning', 'PROPN'), ('Logic', 'PROPN'), ('Report', 'PROPN'), ('TR–47', 'PROPN'), ('(', 'PUNCT'), ('MIT', 'PROPN'), ('Press', 'PROPN'), (',', 'PUNCT'), ('1985', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('25', 'LS'), ('.', '.'), ('Parker', 'NNP'), (',', ','), ('D.', 'NNP'), ('B.', 'NNP'), ('Learning', 'NNP'), ('Logic', 'NNP'), ('Report', 'NNP'), ('TR–47', 'NNP'), ('(', '-LRB-'), ('MIT', 'NNP'), ('Press', 'NNP'), (',', ','), ('1985', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('25', '25'), ('.', '.'), ('Parker', 'Parker'), (',', ','), ('D.', 'D.'), ('B.', 'B.'), ('Learning', 'learning'), ('Logic', 'logic'), ('Report', 'report'), ('TR–47', 'TR–47'), ('(', '('), ('MIT', 'MIT'), ('Press', 'Press'), (',', ','), ('1985', '1985'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('25', 'Parker'), 'nummod'), (('.', '25'), 'punct'), (('Parker', 'root'), 'root'), ((',', 'Parker'), 'punct'), (('D.', 'Parker'), 'flat'), (('B.', 'Parker'), 'flat'), (('Learning', 'Report'), 'compound'), (('Logic', 'Report'), 'compound'), (('Report', 'Parker'), 'list'), (('TR–47', 'Parker'), 'list'), (('(', 'Press'), 'punct'), (('MIT', 'Press'), 'compound'), (('Press', 'TR–47'), 'appos'), ((',', 'Press'), 'punct'), (('1985', 'Press'), 'nummod'), ((')', 'Press'), 'punct'), (('.', 'Parker'), 'punct')]

 Named Entites are: 
>> [('25. Parker, D. B. Learning Logic Report TR–47', 'ORG'), ('MIT Press', 'ORG'), ('1985', 'DATE')]

------------------- Sentence 2 -------------------

 26. 

Tokens are: 
>> ['26', '.'] 

 UPOS tags are: 
>> [('26', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('26', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('26', '26'), ('.', '.')] 

 Dependency tags are: 
>> [(('26', 'root'), 'root'), (('.', '26'), 'punct')]

 Named Entites are: 
>> [('26', 'CARDINAL')]

------------------- Sentence 3 -------------------

 LeCun, Y. Une procédure d’apprentissage pour Réseau à seuil assymétrique 

Tokens are: 
>> ['LeCun', ',', 'Y.', 'Une', 'procédure', 'd’apprentissage', 'pour', 'Réseau', 'à', 'seuil', 'assymétrique'] 

 UPOS tags are: 
>> [('LeCun', 'PROPN'), (',', 'PUNCT'), ('Y.', 'X'), ('Une', 'X'), ('procédure', 'X'), ('d’apprentissage', 'X'), ('pour', 'X'), ('Réseau', 'X'), ('à', 'X'), ('seuil', 'X'), ('assymétrique', 'X')] 

 XPOS tags are: 
>> [('LeCun', 'NNP'), (',', ','), ('Y.', 'FW'), ('Une', 'FW'), ('procédure', 'FW'), ('d’apprentissage', 'FW'), ('pour', 'FW'), ('Réseau', 'FW'), ('à', 'FW'), ('seuil', 'FW'), ('assymétrique', 'FW')] 

 Lemmas are: 
>> [('LeCun', 'LeCun'), (',', ','), ('Y.', 'Y.'), ('Une', 'une'), ('procédure', 'procédure'), ('d’apprentissage', 'd’apprentissage'), ('pour', 'pour'), ('Réseau', 'réseau'), ('à', 'à'), ('seuil', 'seuil'), ('assymétrique', 'assymétrique')] 

 Dependency tags are: 
>> [(('LeCun', 'root'), 'root'), ((',', 'LeCun'), 'punct'), (('Y.', 'LeCun'), 'list'), (('Une', 'LeCun'), 'flat'), (('procédure', 'LeCun'), 'list'), (('d’apprentissage', 'LeCun'), 'list'), (('pour', 'LeCun'), 'list'), (('Réseau', 'LeCun'), 'list'), (('à', 'LeCun'), 'list'), (('seuil', 'LeCun'), 'list'), (('assymétrique', 'LeCun'), 'list')]

 Named Entites are: 
>> []

================================ Paragraph 271 =================================

in Cognitiva 85: a la Frontière de l’Intelligence Artificielle, des Sciences de la  Connaissance et des Neurosciences [in French] 599–604 (1985).  


------------------- Sentence 1 -------------------

 in Cognitiva 85: a la Frontière de l’Intelligence Artificielle, des Sciences de la  Connaissance et des Neurosciences [in French] 599–604 (1985). 

Tokens are: 
>> ['in', 'Cognitiva', '85', ':', 'a', 'la', 'Frontière', 'de', 'l’Intelligence', 'Artificielle', ',', 'des', 'Sciences', 'de', 'la', 'Connaissance', 'et', 'des', 'Neurosciences', '[', 'in', 'French', ']', '599–604', '(', '1985', ')', '.'] 

 UPOS tags are: 
>> [('in', 'ADP'), ('Cognitiva', 'PROPN'), ('85', 'NUM'), (':', 'PUNCT'), ('a', 'DET'), ('la', 'PROPN'), ('Frontière', 'PROPN'), ('de', 'PROPN'), ('l’Intelligence', 'X'), ('Artificielle', 'PROPN'), (',', 'PUNCT'), ('des', 'PROPN'), ('Sciences', 'PROPN'), ('de', 'PROPN'), ('la', 'PROPN'), ('Connaissance', 'PROPN'), ('et', 'X'), ('des', 'X'), ('Neurosciences', 'PROPN'), ('[', 'PUNCT'), ('in', 'ADP'), ('French', 'PROPN'), (']', 'PUNCT'), ('599–604', 'NUM'), ('(', 'PUNCT'), ('1985', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('in', 'IN'), ('Cognitiva', 'NNP'), ('85', 'CD'), (':', ':'), ('a', 'DT'), ('la', 'NNP'), ('Frontière', 'NNP'), ('de', 'NNP'), ('l’Intelligence', 'FW'), ('Artificielle', 'NNP'), (',', ','), ('des', 'NNP'), ('Sciences', 'NNP'), ('de', 'NNP'), ('la', 'NNP'), ('Connaissance', 'NNP'), ('et', 'FW'), ('des', 'FW'), ('Neurosciences', 'NNP'), ('[', '-LRB-'), ('in', 'IN'), ('French', 'NNP'), (']', '-RRB-'), ('599–604', 'CD'), ('(', '-LRB-'), ('1985', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('in', 'in'), ('Cognitiva', 'Cognitiva'), ('85', '85'), (':', ':'), ('a', 'a'), ('la', 'la'), ('Frontière', 'Frontière'), ('de', 'de'), ('l’Intelligence', 'l’intelligence'), ('Artificielle', 'Artificielle'), (',', ','), ('des', 'des'), ('Sciences', 'Science'), ('de', 'de'), ('la', 'la'), ('Connaissance', 'Connaissance'), ('et', 'et'), ('des', 'des'), ('Neurosciences', 'Neuroscience'), ('[', '['), ('in', 'in'), ('French', 'French'), (']', ']'), ('599–604', '599–604'), ('(', '('), ('1985', '1985'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('in', 'Cognitiva'), 'case'), (('Cognitiva', 'Artificielle'), 'nmod'), (('85', 'Cognitiva'), 'nummod'), ((':', 'Cognitiva'), 'punct'), (('a', 'l’Intelligence'), 'det'), (('la', 'root'), 'root'), (('Frontière', 'la'), 'flat'), (('de', 'la'), 'flat'), (('l’Intelligence', 'la'), 'flat'), (('Artificielle', 'la'), 'flat'), ((',', 'des'), 'punct'), (('des', 'Sciences'), 'compound'), (('Sciences', 'la'), 'compound'), (('de', 'la'), 'compound'), (('la', 'la'), 'conj'), (('Connaissance', 'la'), 'flat'), (('et', 'des'), 'cc'), (('des', 'Neurosciences'), 'compound'), (('Neurosciences', 'la'), 'flat'), (('[', 'French'), 'punct'), (('in', 'French'), 'case'), (('French', 'Neurosciences'), 'nmod'), ((']', 'French'), 'punct'), (('599–604', 'French'), 'nmod:tmod'), (('(', '1985'), 'punct'), (('1985', 'French'), 'nmod:tmod'), ((')', '1985'), 'punct'), (('.', 'Artificielle'), 'punct')]

 Named Entites are: 
>> [('Cognitiva 85', 'DATE'), ('des Sciences de la  Connaissance et des Neurosciences', 'FAC'), ('French', 'LANGUAGE'), ('599–604', 'CARDINAL'), ('1985', 'DATE')]

================================ Paragraph 272 =================================

27. Rumelhart, D. E., Hinton, G. E. & Williams, R. J. Learning representations by  back-propagating errors. Nature 323, 533–536 (1986).  


------------------- Sentence 1 -------------------

 27. Rumelhart, D. E., Hinton, G. E. & Williams, R. J. Learning representations by  back-propagating errors. 

Tokens are: 
>> ['27', '.', 'Rumelhart', ',', 'D.', 'E.', ',', 'Hinton', ',', 'G.', 'E.', '&', 'Williams', ',', 'R.', 'J.', 'Learning', 'representations', 'by', 'back', '-', 'propagating', 'errors', '.'] 

 UPOS tags are: 
>> [('27', 'NUM'), ('.', 'PUNCT'), ('Rumelhart', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('E.', 'PROPN'), (',', 'PUNCT'), ('Hinton', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('E.', 'PROPN'), ('&', 'CCONJ'), ('Williams', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('J.', 'PROPN'), ('Learning', 'PROPN'), ('representations', 'NOUN'), ('by', 'ADP'), ('back', 'NOUN'), ('-', 'PUNCT'), ('propagating', 'VERB'), ('errors', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('27', 'LS'), ('.', '.'), ('Rumelhart', 'NNP'), (',', ','), ('D.', 'NNP'), ('E.', 'NNP'), (',', ','), ('Hinton', 'NNP'), (',', ','), ('G.', 'NNP'), ('E.', 'NNP'), ('&', 'CC'), ('Williams', 'NNP'), (',', ','), ('R.', 'NNP'), ('J.', 'NNP'), ('Learning', 'NNP'), ('representations', 'NNS'), ('by', 'IN'), ('back', 'NN'), ('-', 'HYPH'), ('propagating', 'VBG'), ('errors', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('27', '27'), ('.', '.'), ('Rumelhart', 'Rumelhart'), (',', ','), ('D.', 'D.'), ('E.', 'E.'), (',', ','), ('Hinton', 'Hinton'), (',', ','), ('G.', 'G.'), ('E.', 'E.'), ('&', '&'), ('Williams', 'Williams'), (',', ','), ('R.', 'R.'), ('J.', 'J.'), ('Learning', 'learning'), ('representations', 'representation'), ('by', 'by'), ('back', 'back'), ('-', '-'), ('propagating', 'propagate'), ('errors', 'error'), ('.', '.')] 

 Dependency tags are: 
>> [(('27', 'Rumelhart'), 'nummod'), (('.', '27'), 'punct'), (('Rumelhart', 'root'), 'root'), ((',', 'D.'), 'punct'), (('D.', 'Rumelhart'), 'flat'), (('E.', 'Rumelhart'), 'flat'), ((',', 'Hinton'), 'punct'), (('Hinton', 'Rumelhart'), 'conj'), ((',', 'G.'), 'punct'), (('G.', 'Rumelhart'), 'conj'), (('E.', 'G.'), 'flat'), (('&', 'Williams'), 'cc'), (('Williams', 'Rumelhart'), 'conj'), ((',', 'Rumelhart'), 'punct'), (('R.', 'representations'), 'compound'), (('J.', 'R.'), 'flat'), (('Learning', 'representations'), 'compound'), (('representations', 'Rumelhart'), 'list'), (('by', 'errors'), 'case'), (('back', 'propagating'), 'compound'), (('-', 'propagating'), 'punct'), (('propagating', 'errors'), 'amod'), (('errors', 'representations'), 'nmod'), (('.', 'Rumelhart'), 'punct')]

 Named Entites are: 
>> [('27', 'CARDINAL'), ('Rumelhart', 'PERSON'), ('D. E.', 'GPE'), ('Hinton', 'GPE'), ('G. E. & Williams', 'ORG'), ('R. J. Learning', 'ORG')]

------------------- Sentence 2 -------------------

 Nature 323, 533–536 (1986). 

Tokens are: 
>> ['Nature', '323', ',', '533–536', '(', '1986', ')', '.'] 

 UPOS tags are: 
>> [('Nature', 'NOUN'), ('323', 'NUM'), (',', 'PUNCT'), ('533–536', 'NUM'), ('(', 'PUNCT'), ('1986', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Nature', 'NN'), ('323', 'CD'), (',', ','), ('533–536', 'CD'), ('(', '-LRB-'), ('1986', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Nature', 'nature'), ('323', '323'), (',', ','), ('533–536', '533–536'), ('(', '('), ('1986', '1986'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Nature', 'root'), 'root'), (('323', 'Nature'), 'dep'), ((',', 'Nature'), 'punct'), (('533–536', 'Nature'), 'appos'), (('(', '1986'), 'punct'), (('1986', '533–536'), 'nmod:tmod'), ((')', '1986'), 'punct'), (('.', 'Nature'), 'punct')]

 Named Entites are: 
>> [('323', 'CARDINAL'), ('533–536', 'CARDINAL'), ('1986', 'DATE')]

================================ Paragraph 273 =================================

28. Glorot, X., Bordes, A. & Bengio. Y. Deep sparse rectifier neural networks. In Proc.  14th International Conference on Artificial Intelligence and Statistics 315–323  (2011).  


------------------- Sentence 1 -------------------

 28. Glorot, X., Bordes, A. & Bengio. 

Tokens are: 
>> ['28', '.', 'Glorot', ',', 'X.', ',', 'Bordes', ',', 'A.', '&', 'Bengio', '.'] 

 UPOS tags are: 
>> [('28', 'NUM'), ('.', 'PUNCT'), ('Glorot', 'PROPN'), (',', 'PUNCT'), ('X.', 'PROPN'), (',', 'PUNCT'), ('Bordes', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('&', 'CCONJ'), ('Bengio', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('28', 'LS'), ('.', '.'), ('Glorot', 'NNP'), (',', ','), ('X.', 'NNP'), (',', ','), ('Bordes', 'NNP'), (',', ','), ('A.', 'NNP'), ('&', 'CC'), ('Bengio', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('28', '28'), ('.', '.'), ('Glorot', 'Glorot'), (',', ','), ('X.', 'X.'), (',', ','), ('Bordes', 'Bordes'), (',', ','), ('A.', 'A.'), ('&', '&'), ('Bengio', 'Bengio'), ('.', '.')] 

 Dependency tags are: 
>> [(('28', 'Glorot'), 'nummod'), (('.', '28'), 'punct'), (('Glorot', 'root'), 'root'), ((',', 'X.'), 'punct'), (('X.', 'Glorot'), 'conj'), ((',', 'Bordes'), 'punct'), (('Bordes', 'Glorot'), 'conj'), ((',', 'A.'), 'punct'), (('A.', 'Glorot'), 'conj'), (('&', 'Bengio'), 'cc'), (('Bengio', 'A.'), 'conj'), (('.', 'Glorot'), 'punct')]

 Named Entites are: 
>> [('28', 'CARDINAL'), ('Glorot, X., Bordes, A. & Bengio', 'ORG')]

------------------- Sentence 2 -------------------

 Y. Deep sparse rectifier neural networks. 

Tokens are: 
>> ['Y.', 'Deep', 'sparse', 'rectifier', 'neural', 'networks', '.'] 

 UPOS tags are: 
>> [('Y.', 'X'), ('Deep', 'ADJ'), ('sparse', 'ADJ'), ('rectifier', 'NOUN'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Y.', 'LS'), ('Deep', 'JJ'), ('sparse', 'JJ'), ('rectifier', 'NN'), ('neural', 'JJ'), ('networks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Y.', 'Y.'), ('Deep', 'deep'), ('sparse', 'sparse'), ('rectifier', 'rectifier'), ('neural', 'neural'), ('networks', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('Y.', 'networks'), 'dep'), (('Deep', 'networks'), 'amod'), (('sparse', 'networks'), 'amod'), (('rectifier', 'networks'), 'compound'), (('neural', 'networks'), 'amod'), (('networks', 'root'), 'root'), (('.', 'networks'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 In Proc.  14th International Conference on Artificial Intelligence and Statistics 315–323  (2011). 

Tokens are: 
>> ['In', 'Proc.', '14th', 'International', 'Conference', 'on', 'Artificial', 'Intelligence', 'and', 'Statistics', '315–323', '(', '2011', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('14th', 'ADJ'), ('International', 'ADJ'), ('Conference', 'PROPN'), ('on', 'ADP'), ('Artificial', 'ADJ'), ('Intelligence', 'PROPN'), ('and', 'CCONJ'), ('Statistics', 'PROPN'), ('315–323', 'NUM'), ('(', 'PUNCT'), ('2011', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('14th', 'NNP'), ('International', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('Artificial', 'NNP'), ('Intelligence', 'NNP'), ('and', 'CC'), ('Statistics', 'NNP'), ('315–323', 'CD'), ('(', '-LRB-'), ('2011', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('14th', '14th'), ('International', 'International'), ('Conference', 'Conference'), ('on', 'on'), ('Artificial', 'Artificial'), ('Intelligence', 'Intelligence'), ('and', 'and'), ('Statistics', 'Statistic'), ('315–323', '315–323'), ('(', '('), ('2011', '2011'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('14th', 'Conference'), 'amod'), (('International', 'Conference'), 'amod'), (('Conference', 'root'), 'root'), (('on', 'Intelligence'), 'case'), (('Artificial', 'Intelligence'), 'amod'), (('Intelligence', 'Conference'), 'nmod'), (('and', 'Statistics'), 'cc'), (('Statistics', 'Intelligence'), 'conj'), (('315–323', 'Statistics'), 'nummod'), (('(', '2011'), 'punct'), (('2011', 'Statistics'), 'nmod:tmod'), ((')', '2011'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('14th', 'ORDINAL'), ('International Conference on Artificial Intelligence and Statistics 315–323', 'EVENT'), ('2011', 'DATE')]

================================ Paragraph 274 =================================

 This paper showed that supervised training of very deep neural networks is  much faster if the hidden layers are composed of ReLU. 


------------------- Sentence 1 -------------------

 This paper showed that supervised training of very deep neural networks is  much faster if the hidden layers are composed of ReLU. 

Tokens are: 
>> ['This', 'paper', 'showed', 'that', 'supervised', 'training', 'of', 'very', 'deep', 'neural', 'networks', 'is', 'much', 'faster', 'if', 'the', 'hidden', 'layers', 'are', 'composed', 'of', 'ReLU.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('paper', 'NOUN'), ('showed', 'VERB'), ('that', 'SCONJ'), ('supervised', 'VERB'), ('training', 'NOUN'), ('of', 'ADP'), ('very', 'ADV'), ('deep', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('is', 'AUX'), ('much', 'ADV'), ('faster', 'ADJ'), ('if', 'SCONJ'), ('the', 'DET'), ('hidden', 'VERB'), ('layers', 'NOUN'), ('are', 'AUX'), ('composed', 'VERB'), ('of', 'ADP'), ('ReLU.', 'PROPN')] 

 XPOS tags are: 
>> [('This', 'DT'), ('paper', 'NN'), ('showed', 'VBD'), ('that', 'IN'), ('supervised', 'VBN'), ('training', 'NN'), ('of', 'IN'), ('very', 'RB'), ('deep', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), ('is', 'VBZ'), ('much', 'RB'), ('faster', 'JJR'), ('if', 'IN'), ('the', 'DT'), ('hidden', 'VBN'), ('layers', 'NNS'), ('are', 'VBP'), ('composed', 'VBN'), ('of', 'IN'), ('ReLU.', 'NNP')] 

 Lemmas are: 
>> [('This', 'this'), ('paper', 'paper'), ('showed', 'show'), ('that', 'that'), ('supervised', 'supervise'), ('training', 'training'), ('of', 'of'), ('very', 'very'), ('deep', 'deep'), ('neural', 'neural'), ('networks', 'network'), ('is', 'be'), ('much', 'much'), ('faster', 'fast'), ('if', 'if'), ('the', 'the'), ('hidden', 'hide'), ('layers', 'layer'), ('are', 'be'), ('composed', 'compose'), ('of', 'of'), ('ReLU.', 'ReLU.')] 

 Dependency tags are: 
>> [(('This', 'paper'), 'det'), (('paper', 'showed'), 'nsubj'), (('showed', 'root'), 'root'), (('that', 'faster'), 'mark'), (('supervised', 'training'), 'amod'), (('training', 'faster'), 'nsubj'), (('of', 'networks'), 'case'), (('very', 'deep'), 'advmod'), (('deep', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'training'), 'nmod'), (('is', 'faster'), 'cop'), (('much', 'faster'), 'advmod'), (('faster', 'showed'), 'ccomp'), (('if', 'composed'), 'mark'), (('the', 'layers'), 'det'), (('hidden', 'layers'), 'amod'), (('layers', 'composed'), 'nsubj:pass'), (('are', 'composed'), 'aux:pass'), (('composed', 'faster'), 'advcl'), (('of', 'ReLU.'), 'case'), (('ReLU.', 'composed'), 'obl')]

 Named Entites are: 
>> []

================================ Paragraph 275 =================================

29. Dauphin, Y. et al. Identifying and attacking the saddle point problem in high- dimensional non-convex optimization. In Proc. Advances in Neural Information  Processing Systems 27 2933–2941 (2014).  


------------------- Sentence 1 -------------------

 29. 

Tokens are: 
>> ['29', '.'] 

 UPOS tags are: 
>> [('29', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('29', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('29', '29'), ('.', '.')] 

 Dependency tags are: 
>> [(('29', 'root'), 'root'), (('.', '29'), 'punct')]

 Named Entites are: 
>> [('29', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Dauphin, Y. et al. Identifying and attacking the saddle point problem in high- dimensional non-convex optimization. 

Tokens are: 
>> ['Dauphin', ',', 'Y.', 'et', 'al.', 'Identifying', 'and', 'attacking', 'the', 'saddle', 'point', 'problem', 'in', 'high', '-', 'dimensional', 'non-convex', 'optimization', '.'] 

 UPOS tags are: 
>> [('Dauphin', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('et', 'X'), ('al.', 'X'), ('Identifying', 'VERB'), ('and', 'CCONJ'), ('attacking', 'VERB'), ('the', 'DET'), ('saddle', 'NOUN'), ('point', 'NOUN'), ('problem', 'NOUN'), ('in', 'ADP'), ('high', 'ADJ'), ('-', 'PUNCT'), ('dimensional', 'ADJ'), ('non-convex', 'ADJ'), ('optimization', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Dauphin', 'NNP'), (',', ','), ('Y.', 'NNP'), ('et', 'FW'), ('al.', 'FW'), ('Identifying', 'VBG'), ('and', 'CC'), ('attacking', 'VBG'), ('the', 'DT'), ('saddle', 'NN'), ('point', 'NN'), ('problem', 'NN'), ('in', 'IN'), ('high', 'JJ'), ('-', 'HYPH'), ('dimensional', 'JJ'), ('non-convex', 'JJ'), ('optimization', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Dauphin', 'Dauphin'), (',', ','), ('Y.', 'Y.'), ('et', 'et'), ('al.', 'al.'), ('Identifying', 'identify'), ('and', 'and'), ('attacking', 'attack'), ('the', 'the'), ('saddle', 'saddle'), ('point', 'point'), ('problem', 'problem'), ('in', 'in'), ('high', 'high'), ('-', '-'), ('dimensional', 'dimensional'), ('non-convex', 'non-convex'), ('optimization', 'optimization'), ('.', '.')] 

 Dependency tags are: 
>> [(('Dauphin', 'root'), 'root'), ((',', 'Y.'), 'punct'), (('Y.', 'Dauphin'), 'conj'), (('et', 'al.'), 'cc'), (('al.', 'Dauphin'), 'conj'), (('Identifying', 'Dauphin'), 'acl'), (('and', 'attacking'), 'cc'), (('attacking', 'Identifying'), 'conj'), (('the', 'problem'), 'det'), (('saddle', 'point'), 'compound'), (('point', 'problem'), 'compound'), (('problem', 'attacking'), 'obj'), (('in', 'optimization'), 'case'), (('high', 'dimensional'), 'amod'), (('-', 'dimensional'), 'punct'), (('dimensional', 'optimization'), 'amod'), (('non-convex', 'optimization'), 'amod'), (('optimization', 'problem'), 'nmod'), (('.', 'Dauphin'), 'punct')]

 Named Entites are: 
>> [('Dauphin', 'GPE')]

------------------- Sentence 3 -------------------

 In Proc. Advances in Neural Information  Processing Systems 27 2933–2941 (2014). 

Tokens are: 
>> ['In', 'Proc.', 'Advances', 'in', 'Neural', 'Information', 'Processing', 'Systems', '27', '2933–2941', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'NOUN'), ('Advances', 'NOUN'), ('in', 'ADP'), ('Neural', 'ADJ'), ('Information', 'NOUN'), ('Processing', 'NOUN'), ('Systems', 'NOUN'), ('27', 'NUM'), ('2933–2941', 'NUM'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NN'), ('Advances', 'NNS'), ('in', 'IN'), ('Neural', 'JJ'), ('Information', 'NN'), ('Processing', 'NN'), ('Systems', 'NNS'), ('27', 'CD'), ('2933–2941', 'CD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'proc.'), ('Advances', 'advance'), ('in', 'in'), ('Neural', 'neural'), ('Information', 'information'), ('Processing', 'processing'), ('Systems', 'system'), ('27', '27'), ('2933–2941', '2933–2941'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Advances'), 'case'), (('Proc.', 'Advances'), 'compound'), (('Advances', 'root'), 'root'), (('in', 'Systems'), 'case'), (('Neural', 'Information'), 'amod'), (('Information', 'Systems'), 'compound'), (('Processing', 'Systems'), 'compound'), (('Systems', 'Advances'), 'nmod'), (('27', 'Systems'), 'nummod'), (('2933–2941', '27'), 'flat'), (('(', '2014'), 'punct'), (('2014', 'Systems'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'Advances'), 'punct')]

 Named Entites are: 
>> [('Neural Information  Processing Systems', 'ORG'), ('27', 'CARDINAL'), ('2933–2941', 'CARDINAL'), ('2014', 'DATE')]

================================ Paragraph 276 =================================

30. Choromanska, A., Henaff, M., Mathieu, M., Arous, G. B. & LeCun, Y. The loss  surface of multilayer networks. In Proc. Conference on AI and Statistics http:// arxiv.org/abs/1412.0233 (2014).  


------------------- Sentence 1 -------------------

 30. Choromanska, A., Henaff, M., Mathieu, M., Arous, G. B. & LeCun, Y. 

Tokens are: 
>> ['30', '.', 'Choromanska', ',', 'A.', ',', 'Henaff', ',', 'M.', ',', 'Mathieu', ',', 'M.', ',', 'Arous', ',', 'G.', 'B.', '&', 'LeCun', ',', 'Y.'] 

 UPOS tags are: 
>> [('30', 'NUM'), ('.', 'PUNCT'), ('Choromanska', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), (',', 'PUNCT'), ('Henaff', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), (',', 'PUNCT'), ('Mathieu', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), (',', 'PUNCT'), ('Arous', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('B.', 'PROPN'), ('&', 'CCONJ'), ('LeCun', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN')] 

 XPOS tags are: 
>> [('30', 'LS'), ('.', '.'), ('Choromanska', 'NNP'), (',', ','), ('A.', 'NNP'), (',', ','), ('Henaff', 'NNP'), (',', ','), ('M.', 'NNP'), (',', ','), ('Mathieu', 'NNP'), (',', ','), ('M.', 'NNP'), (',', ','), ('Arous', 'NNP'), (',', ','), ('G.', 'NNP'), ('B.', 'NNP'), ('&', 'CC'), ('LeCun', 'NNP'), (',', ','), ('Y.', 'NNP')] 

 Lemmas are: 
>> [('30', '30'), ('.', '.'), ('Choromanska', 'Choromanska'), (',', ','), ('A.', 'A.'), (',', ','), ('Henaff', 'Henaff'), (',', ','), ('M.', 'M.'), (',', ','), ('Mathieu', 'Mathieu'), (',', ','), ('M.', 'M.'), (',', ','), ('Arous', 'Arous'), (',', ','), ('G.', 'G.'), ('B.', 'B.'), ('&', '&'), ('LeCun', 'LeCun'), (',', ','), ('Y.', 'Y.')] 

 Dependency tags are: 
>> [(('30', 'Choromanska'), 'nummod'), (('.', '30'), 'punct'), (('Choromanska', 'root'), 'root'), ((',', 'A.'), 'punct'), (('A.', 'Choromanska'), 'conj'), ((',', 'Henaff'), 'punct'), (('Henaff', 'Choromanska'), 'conj'), ((',', 'M.'), 'punct'), (('M.', 'Choromanska'), 'conj'), ((',', 'Mathieu'), 'punct'), (('Mathieu', 'Choromanska'), 'conj'), ((',', 'M.'), 'punct'), (('M.', 'Choromanska'), 'conj'), ((',', 'Arous'), 'punct'), (('Arous', 'Choromanska'), 'conj'), ((',', 'G.'), 'punct'), (('G.', 'Choromanska'), 'conj'), (('B.', 'G.'), 'flat'), (('&', 'LeCun'), 'cc'), (('LeCun', 'B.'), 'conj'), ((',', 'Y.'), 'punct'), (('Y.', 'Choromanska'), 'conj')]

 Named Entites are: 
>> [('30. Choromanska, A.', 'ORG'), ('Henaff', 'GPE'), ('M.', 'NORP'), ('Mathieu', 'GPE'), ('M.', 'NORP'), ('LeCun', 'GPE')]

------------------- Sentence 2 -------------------

 The loss  surface of multilayer networks. 

Tokens are: 
>> ['The', 'loss', 'surface', 'of', 'multilayer', 'networks', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('loss', 'NOUN'), ('surface', 'NOUN'), ('of', 'ADP'), ('multilayer', 'NOUN'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('loss', 'NN'), ('surface', 'NN'), ('of', 'IN'), ('multilayer', 'NN'), ('networks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('loss', 'loss'), ('surface', 'surface'), ('of', 'of'), ('multilayer', 'multilayer'), ('networks', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'surface'), 'det'), (('loss', 'surface'), 'compound'), (('surface', 'root'), 'root'), (('of', 'networks'), 'case'), (('multilayer', 'networks'), 'compound'), (('networks', 'surface'), 'nmod'), (('.', 'surface'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 In Proc. Conference on AI and Statistics http:// arxiv.org/abs/1412.0233 (2014). 

Tokens are: 
>> ['In', 'Proc.', 'Conference', 'on', 'AI', 'and', 'Statistics', 'http://', 'arxiv.org/abs/1412.0233', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('Conference', 'PROPN'), ('on', 'ADP'), ('AI', 'PROPN'), ('and', 'CCONJ'), ('Statistics', 'PROPN'), ('http://', 'PROPN'), ('arxiv.org/abs/1412.0233', 'X'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('AI', 'NNP'), ('and', 'CC'), ('Statistics', 'NNP'), ('http://', 'NNP'), ('arxiv.org/abs/1412.0233', 'ADD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('Conference', 'Conference'), ('on', 'on'), ('AI', 'AI'), ('and', 'and'), ('Statistics', 'Statistic'), ('http://', 'http://'), ('arxiv.org/abs/1412.0233', 'arxiv.org/abs/1412.0233'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('Conference', 'root'), 'root'), (('on', 'AI'), 'case'), (('AI', 'Conference'), 'nmod'), (('and', 'Statistics'), 'cc'), (('Statistics', 'AI'), 'conj'), (('http://', 'Statistics'), 'flat'), (('arxiv.org/abs/1412.0233', 'Conference'), 'appos'), (('(', '2014'), 'punct'), (('2014', 'arxiv.org/abs/1412.0233'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('Proc. Conference on AI and Statistics', 'ORG'), ('2014', 'DATE')]

================================ Paragraph 277 =================================

31. Hinton, G. E. What kind of graphical model is the brain? In Proc. 19th  International Joint Conference on Artificial intelligence 1765–1775 (2005).  


------------------- Sentence 1 -------------------

 31. 

Tokens are: 
>> ['31', '.'] 

 UPOS tags are: 
>> [('31', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('31', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('31', '31'), ('.', '.')] 

 Dependency tags are: 
>> [(('31', 'root'), 'root'), (('.', '31'), 'punct')]

 Named Entites are: 
>> [('31', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Hinton, G. E. 

Tokens are: 
>> ['Hinton', ',', 'G.', 'E.'] 

 UPOS tags are: 
>> [('Hinton', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('E.', 'PROPN')] 

 XPOS tags are: 
>> [('Hinton', 'NNP'), (',', ','), ('G.', 'NNP'), ('E.', 'NNP')] 

 Lemmas are: 
>> [('Hinton', 'Hinton'), (',', ','), ('G.', 'G.'), ('E.', 'E.')] 

 Dependency tags are: 
>> [(('Hinton', 'root'), 'root'), ((',', 'Hinton'), 'punct'), (('G.', 'Hinton'), 'compound'), (('E.', 'Hinton'), 'flat')]

 Named Entites are: 
>> [('Hinton', 'ORG')]

------------------- Sentence 3 -------------------

 What kind of graphical model is the brain? 

Tokens are: 
>> ['What', 'kind', 'of', 'graphical', 'model', 'is', 'the', 'brain', '?'] 

 UPOS tags are: 
>> [('What', 'DET'), ('kind', 'NOUN'), ('of', 'ADP'), ('graphical', 'ADJ'), ('model', 'NOUN'), ('is', 'AUX'), ('the', 'DET'), ('brain', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WDT'), ('kind', 'NN'), ('of', 'IN'), ('graphical', 'JJ'), ('model', 'NN'), ('is', 'VBZ'), ('the', 'DT'), ('brain', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('kind', 'kind'), ('of', 'of'), ('graphical', 'graphical'), ('model', 'model'), ('is', 'be'), ('the', 'the'), ('brain', 'brain'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'kind'), 'det'), (('kind', 'brain'), 'nsubj'), (('of', 'model'), 'case'), (('graphical', 'model'), 'amod'), (('model', 'kind'), 'nmod'), (('is', 'brain'), 'cop'), (('the', 'brain'), 'det'), (('brain', 'root'), 'root'), (('?', 'brain'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 In Proc. 19th  International Joint Conference on Artificial intelligence 1765–1775 (2005). 

Tokens are: 
>> ['In', 'Proc.', '19th', 'International', 'Joint', 'Conference', 'on', 'Artificial', 'intelligence', '1765–1775', '(', '2005', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('19th', 'ADJ'), ('International', 'ADJ'), ('Joint', 'ADJ'), ('Conference', 'PROPN'), ('on', 'ADP'), ('Artificial', 'ADJ'), ('intelligence', 'NOUN'), ('1765–1775', 'NUM'), ('(', 'PUNCT'), ('2005', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('19th', 'JJ'), ('International', 'NNP'), ('Joint', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('Artificial', 'JJ'), ('intelligence', 'NN'), ('1765–1775', 'CD'), ('(', '-LRB-'), ('2005', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('19th', '19th'), ('International', 'International'), ('Joint', 'Joint'), ('Conference', 'Conference'), ('on', 'on'), ('Artificial', 'Artificial'), ('intelligence', 'intelligence'), ('1765–1775', '1765–1775'), ('(', '('), ('2005', '2005'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('19th', 'Conference'), 'amod'), (('International', 'Conference'), 'amod'), (('Joint', 'Conference'), 'amod'), (('Conference', 'root'), 'root'), (('on', 'intelligence'), 'case'), (('Artificial', 'intelligence'), 'amod'), (('intelligence', 'Conference'), 'nmod'), (('1765–1775', 'intelligence'), 'nummod'), (('(', '2005'), 'punct'), (('2005', '1765–1775'), 'nmod:tmod'), ((')', '2005'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('19th', 'ORDINAL'), ('International Joint Conference on Artificial intelligence 1765–1775', 'EVENT'), ('2005', 'DATE')]

================================ Paragraph 278 =================================

32. Hinton, G. E., Osindero, S. & Teh, Y.-W. A fast learning algorithm for deep belief  nets. Neural Comp. 18, 1527–1554 (2006). 


------------------- Sentence 1 -------------------

 32. Hinton, G. E., Osindero, S. & Teh, Y.-W. A fast learning algorithm for deep belief  nets. 

Tokens are: 
>> ['32', '.', 'Hinton', ',', 'G.', 'E.', ',', 'Osindero', ',', 'S.', '&', 'Teh', ',', 'Y.-', 'W.', 'A', 'fast', 'learning', 'algorithm', 'for', 'deep', 'belief', 'nets', '.'] 

 UPOS tags are: 
>> [('32', 'NUM'), ('.', 'PUNCT'), ('Hinton', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('E.', 'PROPN'), (',', 'PUNCT'), ('Osindero', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('&', 'CCONJ'), ('Teh', 'PROPN'), (',', 'PUNCT'), ('Y.-', 'PROPN'), ('W.', 'PROPN'), ('A', 'DET'), ('fast', 'ADJ'), ('learning', 'NOUN'), ('algorithm', 'NOUN'), ('for', 'ADP'), ('deep', 'ADJ'), ('belief', 'NOUN'), ('nets', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('32', 'LS'), ('.', '.'), ('Hinton', 'NNP'), (',', ','), ('G.', 'NNP'), ('E.', 'NNP'), (',', ','), ('Osindero', 'NNP'), (',', ','), ('S.', 'NNP'), ('&', 'CC'), ('Teh', 'NNP'), (',', ','), ('Y.-', 'NNP'), ('W.', 'NNP'), ('A', 'DT'), ('fast', 'JJ'), ('learning', 'NN'), ('algorithm', 'NN'), ('for', 'IN'), ('deep', 'JJ'), ('belief', 'NN'), ('nets', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('32', '32'), ('.', '.'), ('Hinton', 'Hinton'), (',', ','), ('G.', 'G.'), ('E.', 'E.'), (',', ','), ('Osindero', 'Osindero'), (',', ','), ('S.', 'S.'), ('&', '&'), ('Teh', 'Teh'), (',', ','), ('Y.-', 'Y.-'), ('W.', 'W.'), ('A', 'a'), ('fast', 'fast'), ('learning', 'learning'), ('algorithm', 'algorithm'), ('for', 'for'), ('deep', 'deep'), ('belief', 'belief'), ('nets', 'net'), ('.', '.')] 

 Dependency tags are: 
>> [(('32', 'Hinton'), 'nummod'), (('.', '32'), 'punct'), (('Hinton', 'root'), 'root'), ((',', 'G.'), 'punct'), (('G.', 'Hinton'), 'conj'), (('E.', 'Hinton'), 'flat'), ((',', 'Osindero'), 'punct'), (('Osindero', 'Hinton'), 'conj'), ((',', 'S.'), 'punct'), (('S.', 'Hinton'), 'conj'), (('&', 'Teh'), 'cc'), (('Teh', 'Hinton'), 'conj'), ((',', 'Y.-'), 'punct'), (('Y.-', 'Hinton'), 'conj'), (('W.', 'Y.-'), 'flat'), (('A', 'algorithm'), 'det'), (('fast', 'algorithm'), 'amod'), (('learning', 'algorithm'), 'compound'), (('algorithm', 'Hinton'), 'appos'), (('for', 'nets'), 'case'), (('deep', 'nets'), 'amod'), (('belief', 'nets'), 'compound'), (('nets', 'algorithm'), 'nmod'), (('.', 'Hinton'), 'punct')]

 Named Entites are: 
>> [('32', 'CARDINAL'), ('Hinton, G. E.', 'ORG'), ('Osindero', 'GPE'), ('S. & Teh', 'ORG')]

------------------- Sentence 2 -------------------

 Neural Comp. 18, 1527–1554 (2006). 

Tokens are: 
>> ['Neural', 'Comp.', '18', ',', '1527–1554', '(', '2006', ')', '.'] 

 UPOS tags are: 
>> [('Neural', 'PROPN'), ('Comp.', 'PROPN'), ('18', 'NUM'), (',', 'PUNCT'), ('1527–1554', 'NUM'), ('(', 'PUNCT'), ('2006', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Neural', 'NNP'), ('Comp.', 'NNP'), ('18', 'CD'), (',', ','), ('1527–1554', 'CD'), ('(', '-LRB-'), ('2006', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Neural', 'Neural'), ('Comp.', 'Comp.'), ('18', '18'), (',', ','), ('1527–1554', '1527–1554'), ('(', '('), ('2006', '2006'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Neural', 'root'), 'root'), (('Comp.', 'Neural'), 'flat'), (('18', 'Neural'), 'dep'), ((',', '1527–1554'), 'punct'), (('1527–1554', '18'), 'nmod:tmod'), (('(', '2006'), 'punct'), (('2006', '18'), 'nmod:tmod'), ((')', '2006'), 'punct'), (('.', 'Neural'), 'punct')]

 Named Entites are: 
>> [('18', 'CARDINAL'), ('2006', 'DATE')]

================================ Paragraph 279 =================================

 This paper introduced a novel and effective way of training very deep neural  networks by pre-training one hidden layer at a time using the unsupervised  learning procedure for restricted Boltzmann machines.  


------------------- Sentence 1 -------------------

 This paper introduced a novel and effective way of training very deep neural  networks by pre-training one hidden layer at a time using the unsupervised  learning procedure for restricted Boltzmann machines. 

Tokens are: 
>> ['This', 'paper', 'introduced', 'a', 'novel', 'and', 'effective', 'way', 'of', 'training', 'very', 'deep', 'neural', 'networks', 'by', 'pre-training', 'one', 'hidden', 'layer', 'at', 'a', 'time', 'using', 'the', 'unsupervised', 'learning', 'procedure', 'for', 'restricted', 'Boltzmann', 'machines', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('paper', 'NOUN'), ('introduced', 'VERB'), ('a', 'DET'), ('novel', 'ADJ'), ('and', 'CCONJ'), ('effective', 'ADJ'), ('way', 'NOUN'), ('of', 'SCONJ'), ('training', 'VERB'), ('very', 'ADV'), ('deep', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('by', 'SCONJ'), ('pre-training', 'VERB'), ('one', 'NUM'), ('hidden', 'VERB'), ('layer', 'NOUN'), ('at', 'ADP'), ('a', 'DET'), ('time', 'NOUN'), ('using', 'VERB'), ('the', 'DET'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('procedure', 'NOUN'), ('for', 'ADP'), ('restricted', 'VERB'), ('Boltzmann', 'PROPN'), ('machines', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('paper', 'NN'), ('introduced', 'VBD'), ('a', 'DT'), ('novel', 'JJ'), ('and', 'CC'), ('effective', 'JJ'), ('way', 'NN'), ('of', 'IN'), ('training', 'VBG'), ('very', 'RB'), ('deep', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), ('by', 'IN'), ('pre-training', 'VBG'), ('one', 'CD'), ('hidden', 'VBN'), ('layer', 'NN'), ('at', 'IN'), ('a', 'DT'), ('time', 'NN'), ('using', 'VBG'), ('the', 'DT'), ('unsupervised', 'JJ'), ('learning', 'NN'), ('procedure', 'NN'), ('for', 'IN'), ('restricted', 'VBN'), ('Boltzmann', 'NNP'), ('machines', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('paper', 'paper'), ('introduced', 'introduce'), ('a', 'a'), ('novel', 'novel'), ('and', 'and'), ('effective', 'effective'), ('way', 'way'), ('of', 'of'), ('training', 'train'), ('very', 'very'), ('deep', 'deep'), ('neural', 'neural'), ('networks', 'network'), ('by', 'by'), ('pre-training', 'pre-train'), ('one', 'one'), ('hidden', 'hide'), ('layer', 'layer'), ('at', 'at'), ('a', 'a'), ('time', 'time'), ('using', 'use'), ('the', 'the'), ('unsupervised', 'unsupervised'), ('learning', 'learning'), ('procedure', 'procedure'), ('for', 'for'), ('restricted', 'restrict'), ('Boltzmann', 'Boltzmann'), ('machines', 'machine'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'paper'), 'det'), (('paper', 'introduced'), 'nsubj'), (('introduced', 'root'), 'root'), (('a', 'way'), 'det'), (('novel', 'way'), 'amod'), (('and', 'effective'), 'cc'), (('effective', 'novel'), 'conj'), (('way', 'introduced'), 'obj'), (('of', 'training'), 'mark'), (('training', 'way'), 'acl'), (('very', 'deep'), 'advmod'), (('deep', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'training'), 'obj'), (('by', 'pre-training'), 'mark'), (('pre-training', 'training'), 'advcl'), (('one', 'layer'), 'nummod'), (('hidden', 'layer'), 'amod'), (('layer', 'pre-training'), 'obj'), (('at', 'time'), 'case'), (('a', 'time'), 'det'), (('time', 'pre-training'), 'obl'), (('using', 'pre-training'), 'advcl'), (('the', 'procedure'), 'det'), (('unsupervised', 'procedure'), 'amod'), (('learning', 'procedure'), 'compound'), (('procedure', 'using'), 'obj'), (('for', 'machines'), 'case'), (('restricted', 'machines'), 'amod'), (('Boltzmann', 'machines'), 'compound'), (('machines', 'procedure'), 'nmod'), (('.', 'introduced'), 'punct')]

 Named Entites are: 
>> [('one', 'CARDINAL'), ('Boltzmann', 'PRODUCT')]

================================ Paragraph 280 =================================

33. Bengio, Y., Lamblin, P., Popovici, D. & Larochelle, H. Greedy layer-wise training  of deep networks. In Proc. Advances in Neural Information Processing Systems 19  153–160 (2006).  


------------------- Sentence 1 -------------------

 33. Bengio, Y., Lamblin, P., Popovici, D. & Larochelle, H. Greedy layer-wise training  of deep networks. 

Tokens are: 
>> ['33', '.', 'Bengio', ',', 'Y.', ',', 'Lamblin', ',', 'P.', ',', 'Popovici', ',', 'D.', '&', 'Larochelle', ',', 'H.', 'Greedy', 'layer', '-', 'wise', 'training', 'of', 'deep', 'networks', '.'] 

 UPOS tags are: 
>> [('33', 'NUM'), ('.', 'PUNCT'), ('Bengio', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), (',', 'PUNCT'), ('Lamblin', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), (',', 'PUNCT'), ('Popovici', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('&', 'CCONJ'), ('Larochelle', 'PROPN'), (',', 'PUNCT'), ('H.', 'PROPN'), ('Greedy', 'ADJ'), ('layer', 'NOUN'), ('-', 'PUNCT'), ('wise', 'ADJ'), ('training', 'NOUN'), ('of', 'ADP'), ('deep', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('33', 'LS'), ('.', '.'), ('Bengio', 'NNP'), (',', ','), ('Y.', 'NNP'), (',', ','), ('Lamblin', 'NNP'), (',', ','), ('P.', 'NNP'), (',', ','), ('Popovici', 'NNP'), (',', ','), ('D.', 'NNP'), ('&', 'CC'), ('Larochelle', 'NNP'), (',', ','), ('H.', 'NNP'), ('Greedy', 'JJ'), ('layer', 'NN'), ('-', 'HYPH'), ('wise', 'JJ'), ('training', 'NN'), ('of', 'IN'), ('deep', 'JJ'), ('networks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('33', '33'), ('.', '.'), ('Bengio', 'Bengio'), (',', ','), ('Y.', 'Y.'), (',', ','), ('Lamblin', 'Lamblin'), (',', ','), ('P.', 'P.'), (',', ','), ('Popovici', 'Popovici'), (',', ','), ('D.', 'D.'), ('&', '&'), ('Larochelle', 'Larochelle'), (',', ','), ('H.', 'H.'), ('Greedy', 'Greedy'), ('layer', 'layer'), ('-', '-'), ('wise', 'wise'), ('training', 'training'), ('of', 'of'), ('deep', 'deep'), ('networks', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('33', 'Bengio'), 'nummod'), (('.', '33'), 'punct'), (('Bengio', 'root'), 'root'), ((',', 'Y.'), 'punct'), (('Y.', 'Bengio'), 'conj'), ((',', 'Lamblin'), 'punct'), (('Lamblin', 'Bengio'), 'conj'), ((',', 'P.'), 'punct'), (('P.', 'Bengio'), 'conj'), ((',', 'Popovici'), 'punct'), (('Popovici', 'Bengio'), 'conj'), ((',', 'D.'), 'punct'), (('D.', 'Bengio'), 'conj'), (('&', 'Larochelle'), 'cc'), (('Larochelle', 'Bengio'), 'conj'), ((',', 'training'), 'punct'), (('H.', 'Bengio'), 'conj'), (('Greedy', 'training'), 'amod'), (('layer', 'wise'), 'compound'), (('-', 'wise'), 'punct'), (('wise', 'training'), 'amod'), (('training', 'Bengio'), 'conj'), (('of', 'networks'), 'case'), (('deep', 'networks'), 'amod'), (('networks', 'training'), 'nmod'), (('.', 'Bengio'), 'punct')]

 Named Entites are: 
>> [('33', 'CARDINAL'), ('Bengio', 'GPE'), ('Y.', 'GPE'), ('Lamblin', 'GPE'), ('P.', 'GPE'), ('Popovici', 'GPE'), ('D.', 'NORP'), ('Larochelle', 'GPE'), ('H. Greedy', 'PERSON')]

------------------- Sentence 2 -------------------

 In Proc. Advances in Neural Information Processing Systems 19  153–160 (2006). 

Tokens are: 
>> ['In', 'Proc.', 'Advances', 'in', 'Neural', 'Information', 'Processing', 'Systems', '19', '153–160', '(', '2006', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'NOUN'), ('Advances', 'NOUN'), ('in', 'ADP'), ('Neural', 'ADJ'), ('Information', 'NOUN'), ('Processing', 'NOUN'), ('Systems', 'PROPN'), ('19', 'NUM'), ('153–160', 'NUM'), ('(', 'PUNCT'), ('2006', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NN'), ('Advances', 'NNS'), ('in', 'IN'), ('Neural', 'JJ'), ('Information', 'NN'), ('Processing', 'NN'), ('Systems', 'NNP'), ('19', 'CD'), ('153–160', 'CD'), ('(', '-LRB-'), ('2006', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'proc.'), ('Advances', 'advance'), ('in', 'in'), ('Neural', 'neural'), ('Information', 'information'), ('Processing', 'processing'), ('Systems', 'System'), ('19', '19'), ('153–160', '153–160'), ('(', '('), ('2006', '2006'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Advances'), 'case'), (('Proc.', 'Advances'), 'compound'), (('Advances', 'root'), 'root'), (('in', 'Processing'), 'case'), (('Neural', 'Information'), 'amod'), (('Information', 'Processing'), 'compound'), (('Processing', 'Advances'), 'nmod'), (('Systems', 'Processing'), 'appos'), (('19', 'Systems'), 'nummod'), (('153–160', '19'), 'flat'), (('(', '2006'), 'punct'), (('2006', 'Systems'), 'nmod:tmod'), ((')', '2006'), 'punct'), (('.', 'Advances'), 'punct')]

 Named Entites are: 
>> [('Neural Information Processing Systems', 'ORG'), ('19', 'CARDINAL'), ('153–160', 'CARDINAL'), ('2006', 'DATE')]

================================ Paragraph 281 =================================

 This report demonstrated that the unsupervised pre-training method  introduced in ref. 32 significantly improves performance on test data and  generalizes the method to other unsupervised representation-learning  techniques, such as auto-encoders. 


------------------- Sentence 1 -------------------

 This report demonstrated that the unsupervised pre-training method  introduced in ref. 

Tokens are: 
>> ['This', 'report', 'demonstrated', 'that', 'the', 'unsupervised', 'pre-training', 'method', 'introduced', 'in', 'ref', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('report', 'NOUN'), ('demonstrated', 'VERB'), ('that', 'SCONJ'), ('the', 'DET'), ('unsupervised', 'ADJ'), ('pre-training', 'NOUN'), ('method', 'NOUN'), ('introduced', 'VERB'), ('in', 'ADP'), ('ref', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('report', 'NN'), ('demonstrated', 'VBD'), ('that', 'IN'), ('the', 'DT'), ('unsupervised', 'JJ'), ('pre-training', 'NN'), ('method', 'NN'), ('introduced', 'VBN'), ('in', 'IN'), ('ref', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('report', 'report'), ('demonstrated', 'demonstrate'), ('that', 'that'), ('the', 'the'), ('unsupervised', 'unsupervised'), ('pre-training', 'pre-training'), ('method', 'method'), ('introduced', 'introduce'), ('in', 'in'), ('ref', 'ref'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'report'), 'det'), (('report', 'demonstrated'), 'nsubj'), (('demonstrated', 'root'), 'root'), (('that', 'method'), 'mark'), (('the', 'method'), 'det'), (('unsupervised', 'method'), 'amod'), (('pre-training', 'method'), 'compound'), (('method', 'demonstrated'), 'ccomp'), (('introduced', 'method'), 'acl'), (('in', 'ref'), 'case'), (('ref', 'introduced'), 'obl'), (('.', 'demonstrated'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 32 significantly improves performance on test data and  generalizes the method to other unsupervised representation-learning  techniques, such as auto-encoders. 

Tokens are: 
>> ['32', 'significantly', 'improves', 'performance', 'on', 'test', 'data', 'and', 'generalizes', 'the', 'method', 'to', 'other', 'unsupervised', 'representation', '-', 'learning', 'techniques', ',', 'such', 'as', 'auto-encoders', '.'] 

 UPOS tags are: 
>> [('32', 'NUM'), ('significantly', 'ADV'), ('improves', 'VERB'), ('performance', 'NOUN'), ('on', 'ADP'), ('test', 'NOUN'), ('data', 'NOUN'), ('and', 'CCONJ'), ('generalizes', 'VERB'), ('the', 'DET'), ('method', 'NOUN'), ('to', 'ADP'), ('other', 'ADJ'), ('unsupervised', 'ADJ'), ('representation', 'NOUN'), ('-', 'PUNCT'), ('learning', 'NOUN'), ('techniques', 'NOUN'), (',', 'PUNCT'), ('such', 'ADJ'), ('as', 'ADP'), ('auto-encoders', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('32', 'CD'), ('significantly', 'RB'), ('improves', 'VBZ'), ('performance', 'NN'), ('on', 'IN'), ('test', 'NN'), ('data', 'NNS'), ('and', 'CC'), ('generalizes', 'VBZ'), ('the', 'DT'), ('method', 'NN'), ('to', 'IN'), ('other', 'JJ'), ('unsupervised', 'JJ'), ('representation', 'NN'), ('-', 'HYPH'), ('learning', 'NN'), ('techniques', 'NNS'), (',', ','), ('such', 'JJ'), ('as', 'IN'), ('auto-encoders', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('32', '32'), ('significantly', 'significantly'), ('improves', 'improve'), ('performance', 'performance'), ('on', 'on'), ('test', 'test'), ('data', 'datum'), ('and', 'and'), ('generalizes', 'generalize'), ('the', 'the'), ('method', 'method'), ('to', 'to'), ('other', 'other'), ('unsupervised', 'unsupervised'), ('representation', 'representation'), ('-', '-'), ('learning', 'learning'), ('techniques', 'technique'), (',', ','), ('such', 'such'), ('as', 'as'), ('auto-encoders', 'auto-encoders'), ('.', '.')] 

 Dependency tags are: 
>> [(('32', 'improves'), 'nsubj'), (('significantly', 'improves'), 'advmod'), (('improves', 'root'), 'root'), (('performance', 'improves'), 'obj'), (('on', 'data'), 'case'), (('test', 'data'), 'compound'), (('data', 'improves'), 'obl'), (('and', 'generalizes'), 'cc'), (('generalizes', 'improves'), 'conj'), (('the', 'method'), 'det'), (('method', 'generalizes'), 'obj'), (('to', 'techniques'), 'case'), (('other', 'techniques'), 'amod'), (('unsupervised', 'techniques'), 'amod'), (('representation', 'learning'), 'compound'), (('-', 'learning'), 'punct'), (('learning', 'techniques'), 'compound'), (('techniques', 'method'), 'nmod'), ((',', 'techniques'), 'punct'), (('such', 'auto-encoders'), 'case'), (('as', 'such'), 'fixed'), (('auto-encoders', 'techniques'), 'nmod'), (('.', 'improves'), 'punct')]

 Named Entites are: 
>> [('32', 'CARDINAL')]

================================ Paragraph 282 =================================

34. Ranzato, M., Poultney, C., Chopra, S. & LeCun, Y. Efficient learning of sparse  representations with an energy-based model. In Proc. Advances in Neural  Information Processing Systems 19 1137–1144 (2006).  


------------------- Sentence 1 -------------------

 34. Ranzato, M., Poultney, C., Chopra, S. & LeCun, Y. Efficient learning of sparse  representations with an energy-based model. 

Tokens are: 
>> ['34', '.', 'Ranzato', ',', 'M.', ',', 'Poultney', ',', 'C.', ',', 'Chopra', ',', 'S.', '&', 'LeCun', ',', 'Y.', 'Efficient', 'learning', 'of', 'sparse', 'representations', 'with', 'an', 'energy', '-', 'based', 'model', '.'] 

 UPOS tags are: 
>> [('34', 'NUM'), ('.', 'PUNCT'), ('Ranzato', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), (',', 'PUNCT'), ('Poultney', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), (',', 'PUNCT'), ('Chopra', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('&', 'CCONJ'), ('LeCun', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('Efficient', 'ADJ'), ('learning', 'NOUN'), ('of', 'ADP'), ('sparse', 'ADJ'), ('representations', 'NOUN'), ('with', 'ADP'), ('an', 'DET'), ('energy', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('model', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('34', 'LS'), ('.', '.'), ('Ranzato', 'NNP'), (',', ','), ('M.', 'NNP'), (',', ','), ('Poultney', 'NNP'), (',', ','), ('C.', 'NNP'), (',', ','), ('Chopra', 'NNP'), (',', ','), ('S.', 'NNP'), ('&', 'CC'), ('LeCun', 'NNP'), (',', ','), ('Y.', 'NNP'), ('Efficient', 'JJ'), ('learning', 'NN'), ('of', 'IN'), ('sparse', 'JJ'), ('representations', 'NNS'), ('with', 'IN'), ('an', 'DT'), ('energy', 'NN'), ('-', 'HYPH'), ('based', 'VBN'), ('model', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('34', '34'), ('.', '.'), ('Ranzato', 'Ranzato'), (',', ','), ('M.', 'M.'), (',', ','), ('Poultney', 'Poultney'), (',', ','), ('C.', 'C.'), (',', ','), ('Chopra', 'Chopra'), (',', ','), ('S.', 'S.'), ('&', '&'), ('LeCun', 'LeCun'), (',', ','), ('Y.', 'Y.'), ('Efficient', 'efficient'), ('learning', 'learning'), ('of', 'of'), ('sparse', 'sparse'), ('representations', 'representation'), ('with', 'with'), ('an', 'a'), ('energy', 'energy'), ('-', '-'), ('based', 'base'), ('model', 'model'), ('.', '.')] 

 Dependency tags are: 
>> [(('34', 'Ranzato'), 'nummod'), (('.', '34'), 'punct'), (('Ranzato', 'root'), 'root'), ((',', 'M.'), 'punct'), (('M.', 'Ranzato'), 'conj'), ((',', 'Poultney'), 'punct'), (('Poultney', 'Ranzato'), 'conj'), ((',', 'C.'), 'punct'), (('C.', 'Ranzato'), 'conj'), ((',', 'Chopra'), 'punct'), (('Chopra', 'Ranzato'), 'conj'), ((',', 'S.'), 'punct'), (('S.', 'Ranzato'), 'conj'), (('&', 'LeCun'), 'cc'), (('LeCun', 'S.'), 'conj'), ((',', 'learning'), 'punct'), (('Y.', 'learning'), 'compound'), (('Efficient', 'learning'), 'amod'), (('learning', 'Ranzato'), 'conj'), (('of', 'representations'), 'case'), (('sparse', 'representations'), 'amod'), (('representations', 'learning'), 'nmod'), (('with', 'model'), 'case'), (('an', 'model'), 'det'), (('energy', 'based'), 'compound'), (('-', 'based'), 'punct'), (('based', 'model'), 'amod'), (('model', 'representations'), 'nmod'), (('.', 'Ranzato'), 'punct')]

 Named Entites are: 
>> [('34. Ranzato, M., Poultney, C.', 'ORG'), ('Chopra, S. & LeCun', 'ORG')]

------------------- Sentence 2 -------------------

 In Proc. Advances in Neural  Information Processing Systems 19 1137–1144 (2006). 

Tokens are: 
>> ['In', 'Proc.', 'Advances', 'in', 'Neural', 'Information', 'Processing', 'Systems', '19', '1137–1144', '(', '2006', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'NOUN'), ('Advances', 'NOUN'), ('in', 'ADP'), ('Neural', 'ADJ'), ('Information', 'NOUN'), ('Processing', 'NOUN'), ('Systems', 'PROPN'), ('19', 'NUM'), ('1137–1144', 'NUM'), ('(', 'PUNCT'), ('2006', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NN'), ('Advances', 'NNS'), ('in', 'IN'), ('Neural', 'JJ'), ('Information', 'NN'), ('Processing', 'NN'), ('Systems', 'NNP'), ('19', 'CD'), ('1137–1144', 'CD'), ('(', '-LRB-'), ('2006', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'proc.'), ('Advances', 'advance'), ('in', 'in'), ('Neural', 'neural'), ('Information', 'information'), ('Processing', 'processing'), ('Systems', 'System'), ('19', '19'), ('1137–1144', '1137–1144'), ('(', '('), ('2006', '2006'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Advances'), 'case'), (('Proc.', 'Advances'), 'compound'), (('Advances', 'root'), 'root'), (('in', 'Processing'), 'case'), (('Neural', 'Information'), 'amod'), (('Information', 'Processing'), 'compound'), (('Processing', 'Advances'), 'nmod'), (('Systems', 'Processing'), 'appos'), (('19', 'Systems'), 'nummod'), (('1137–1144', 'Systems'), 'nummod'), (('(', '2006'), 'punct'), (('2006', 'Systems'), 'nmod:tmod'), ((')', '2006'), 'punct'), (('.', 'Advances'), 'punct')]

 Named Entites are: 
>> [('Neural  Information Processing Systems', 'ORG'), ('19', 'CARDINAL'), ('1137–1144', 'CARDINAL'), ('2006', 'DATE')]

================================ Paragraph 283 =================================

35. Hinton, G. E. & Salakhutdinov, R. Reducing the dimensionality of data with  neural networks. Science 313, 504–507 (2006).  


------------------- Sentence 1 -------------------

 35. Hinton, G. E. & Salakhutdinov, R. Reducing the dimensionality of data with  neural networks. 

Tokens are: 
>> ['35', '.', 'Hinton', ',', 'G.', 'E.', '&', 'Salakhutdinov', ',', 'R.', 'Reducing', 'the', 'dimensionality', 'of', 'data', 'with', 'neural', 'networks', '.'] 

 UPOS tags are: 
>> [('35', 'NUM'), ('.', 'PUNCT'), ('Hinton', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('E.', 'PROPN'), ('&', 'CCONJ'), ('Salakhutdinov', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('Reducing', 'VERB'), ('the', 'DET'), ('dimensionality', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), ('with', 'ADP'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('35', 'LS'), ('.', '.'), ('Hinton', 'NNP'), (',', ','), ('G.', 'NNP'), ('E.', 'NNP'), ('&', 'CC'), ('Salakhutdinov', 'NNP'), (',', ','), ('R.', 'NNP'), ('Reducing', 'VBG'), ('the', 'DT'), ('dimensionality', 'NN'), ('of', 'IN'), ('data', 'NNS'), ('with', 'IN'), ('neural', 'JJ'), ('networks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('35', '35'), ('.', '.'), ('Hinton', 'Hinton'), (',', ','), ('G.', 'G.'), ('E.', 'E.'), ('&', '&'), ('Salakhutdinov', 'Salakhutdinov'), (',', ','), ('R.', 'R.'), ('Reducing', 'reduce'), ('the', 'the'), ('dimensionality', 'dimensionality'), ('of', 'of'), ('data', 'datum'), ('with', 'with'), ('neural', 'neural'), ('networks', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('35', 'Hinton'), 'nummod'), (('.', '35'), 'punct'), (('Hinton', 'root'), 'root'), ((',', 'G.'), 'punct'), (('G.', 'Hinton'), 'conj'), (('E.', 'Hinton'), 'flat'), (('&', 'Salakhutdinov'), 'cc'), (('Salakhutdinov', 'Hinton'), 'conj'), ((',', 'Hinton'), 'punct'), (('R.', 'Hinton'), 'appos'), (('Reducing', 'Hinton'), 'acl'), (('the', 'dimensionality'), 'det'), (('dimensionality', 'Reducing'), 'obj'), (('of', 'data'), 'case'), (('data', 'dimensionality'), 'nmod'), (('with', 'networks'), 'case'), (('neural', 'networks'), 'amod'), (('networks', 'data'), 'nmod'), (('.', 'Hinton'), 'punct')]

 Named Entites are: 
>> [('35. Hinton, G. E. & Salakhutdinov', 'ORG')]

------------------- Sentence 2 -------------------

 Science 313, 504–507 (2006). 

Tokens are: 
>> ['Science', '313', ',', '504–507', '(', '2006', ')', '.'] 

 UPOS tags are: 
>> [('Science', 'PROPN'), ('313', 'NUM'), (',', 'PUNCT'), ('504–507', 'NUM'), ('(', 'PUNCT'), ('2006', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Science', 'NNP'), ('313', 'CD'), (',', ','), ('504–507', 'CD'), ('(', '-LRB-'), ('2006', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Science', 'Science'), ('313', '313'), (',', ','), ('504–507', '504–507'), ('(', '('), ('2006', '2006'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Science', '313'), 'compound'), (('313', 'root'), 'root'), ((',', '504–507'), 'punct'), (('504–507', '313'), 'nmod:tmod'), (('(', '2006'), 'punct'), (('2006', '504–507'), 'nmod:tmod'), ((')', '2006'), 'punct'), (('.', '313'), 'punct')]

 Named Entites are: 
>> [('313', 'CARDINAL'), ('504–507', 'CARDINAL'), ('2006', 'DATE')]

================================ Paragraph 284 =================================

36. Sermanet, P., Kavukcuoglu, K., Chintala, S. & LeCun, Y. Pedestrian detection with  unsupervised multi-stage feature learning. In Proc. International Conference  on Computer Vision and Pattern Recognition http://arxiv.org/abs/1212.0142  (2013).  


------------------- Sentence 1 -------------------

 36. Sermanet, P., Kavukcuoglu, K., Chintala, S. & LeCun, Y. Pedestrian detection with  unsupervised multi-stage feature learning. 

Tokens are: 
>> ['36', '.', 'Sermanet', ',', 'P.', ',', 'Kavukcuoglu', ',', 'K.', ',', 'Chintala', ',', 'S.', '&', 'LeCun', ',', 'Y.', 'Pedestrian', 'detection', 'with', 'unsupervised', 'multi-stage', 'feature', 'learning', '.'] 

 UPOS tags are: 
>> [('36', 'NUM'), ('.', 'PUNCT'), ('Sermanet', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), (',', 'PUNCT'), ('Kavukcuoglu', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), (',', 'PUNCT'), ('Chintala', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('&', 'CCONJ'), ('LeCun', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('Pedestrian', 'PROPN'), ('detection', 'NOUN'), ('with', 'ADP'), ('unsupervised', 'ADJ'), ('multi-stage', 'ADJ'), ('feature', 'NOUN'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('36', 'LS'), ('.', '.'), ('Sermanet', 'NNP'), (',', ','), ('P.', 'NNP'), (',', ','), ('Kavukcuoglu', 'NNP'), (',', ','), ('K.', 'NNP'), (',', ','), ('Chintala', 'NNP'), (',', ','), ('S.', 'NNP'), ('&', 'CC'), ('LeCun', 'NNP'), (',', ','), ('Y.', 'NNP'), ('Pedestrian', 'NNP'), ('detection', 'NN'), ('with', 'IN'), ('unsupervised', 'JJ'), ('multi-stage', 'JJ'), ('feature', 'NN'), ('learning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('36', '36'), ('.', '.'), ('Sermanet', 'Sermanet'), (',', ','), ('P.', 'P.'), (',', ','), ('Kavukcuoglu', 'Kavukcuoglu'), (',', ','), ('K.', 'K.'), (',', ','), ('Chintala', 'Chintala'), (',', ','), ('S.', 'S.'), ('&', '&'), ('LeCun', 'LeCun'), (',', ','), ('Y.', 'Y.'), ('Pedestrian', 'Pedestrian'), ('detection', 'detection'), ('with', 'with'), ('unsupervised', 'unsupervised'), ('multi-stage', 'multi-stage'), ('feature', 'feature'), ('learning', 'learning'), ('.', '.')] 

 Dependency tags are: 
>> [(('36', 'Sermanet'), 'nummod'), (('.', '36'), 'punct'), (('Sermanet', 'root'), 'root'), ((',', 'P.'), 'punct'), (('P.', 'Sermanet'), 'conj'), ((',', 'Kavukcuoglu'), 'punct'), (('Kavukcuoglu', 'Sermanet'), 'conj'), ((',', 'K.'), 'punct'), (('K.', 'Sermanet'), 'conj'), ((',', 'Chintala'), 'punct'), (('Chintala', 'Sermanet'), 'conj'), ((',', 'S.'), 'punct'), (('S.', 'Sermanet'), 'conj'), (('&', 'LeCun'), 'cc'), (('LeCun', 'S.'), 'conj'), ((',', 'detection'), 'punct'), (('Y.', 'detection'), 'compound'), (('Pedestrian', 'detection'), 'compound'), (('detection', 'Sermanet'), 'conj'), (('with', 'learning'), 'case'), (('unsupervised', 'learning'), 'amod'), (('multi-stage', 'learning'), 'amod'), (('feature', 'learning'), 'compound'), (('learning', 'detection'), 'nmod'), (('.', 'Sermanet'), 'punct')]

 Named Entites are: 
>> [('36', 'CARDINAL'), ('Kavukcuoglu', 'GPE'), ('Chintala', 'GPE'), ('S. & LeCun', 'ORG')]

------------------- Sentence 2 -------------------

 In Proc. International Conference  on Computer Vision and Pattern Recognition http://arxiv.org/abs/1212.0142  (2013). 

Tokens are: 
>> ['In', 'Proc.', 'International', 'Conference', 'on', 'Computer', 'Vision', 'and', 'Pattern', 'Recognition', 'http://arxiv.org/abs/1212.0142', '(', '2013', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('International', 'ADJ'), ('Conference', 'PROPN'), ('on', 'ADP'), ('Computer', 'PROPN'), ('Vision', 'PROPN'), ('and', 'CCONJ'), ('Pattern', 'PROPN'), ('Recognition', 'PROPN'), ('http://arxiv.org/abs/1212.0142', 'X'), ('(', 'PUNCT'), ('2013', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('International', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('Computer', 'NNP'), ('Vision', 'NNP'), ('and', 'CC'), ('Pattern', 'NNP'), ('Recognition', 'NNP'), ('http://arxiv.org/abs/1212.0142', 'ADD'), ('(', '-LRB-'), ('2013', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('International', 'International'), ('Conference', 'Conference'), ('on', 'on'), ('Computer', 'Computer'), ('Vision', 'Vision'), ('and', 'and'), ('Pattern', 'Pattern'), ('Recognition', 'recognition'), ('http://arxiv.org/abs/1212.0142', 'http://arxiv.org/abs/1212.0142'), ('(', '('), ('2013', '2013'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('International', 'Conference'), 'amod'), (('Conference', 'root'), 'root'), (('on', 'Vision'), 'case'), (('Computer', 'Vision'), 'compound'), (('Vision', 'Conference'), 'nmod'), (('and', 'Recognition'), 'cc'), (('Pattern', 'Recognition'), 'compound'), (('Recognition', 'Vision'), 'conj'), (('http://arxiv.org/abs/1212.0142', 'Recognition'), 'appos'), (('(', '2013'), 'punct'), (('2013', 'http://arxiv.org/abs/1212.0142'), 'nmod:tmod'), ((')', '2013'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('Proc. International Conference  on Computer Vision', 'EVENT'), ('Pattern Recognition', 'WORK_OF_ART'), ('2013', 'DATE')]

================================ Paragraph 285 =================================

37. Raina, R., Madhavan, A. & Ng, A. Y. Large-scale deep unsupervised learning  using graphics processors. In Proc. 26th Annual International Conference on  Machine Learning 873–880 (2009).  


------------------- Sentence 1 -------------------

 37. Raina, R., Madhavan, A. & Ng, A. Y. Large-scale deep unsupervised learning  using graphics processors. 

Tokens are: 
>> ['37', '.', 'Raina', ',', 'R.', ',', 'Madhavan', ',', 'A.', '&', 'Ng', ',', 'A.', 'Y.', 'Large', '-', 'scale', 'deep', 'unsupervised', 'learning', 'using', 'graphics', 'processors', '.'] 

 UPOS tags are: 
>> [('37', 'NUM'), ('.', 'PUNCT'), ('Raina', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), (',', 'PUNCT'), ('Madhavan', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('&', 'CCONJ'), ('Ng', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('Y.', 'PROPN'), ('Large', 'ADJ'), ('-', 'PUNCT'), ('scale', 'NOUN'), ('deep', 'ADJ'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('using', 'VERB'), ('graphics', 'NOUN'), ('processors', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('37', 'LS'), ('.', '.'), ('Raina', 'NNP'), (',', ','), ('R.', 'NNP'), (',', ','), ('Madhavan', 'NNP'), (',', ','), ('A.', 'NNP'), ('&', 'CC'), ('Ng', 'NNP'), (',', ','), ('A.', 'NNP'), ('Y.', 'NNP'), ('Large', 'JJ'), ('-', 'HYPH'), ('scale', 'NN'), ('deep', 'JJ'), ('unsupervised', 'JJ'), ('learning', 'NN'), ('using', 'VBG'), ('graphics', 'NNS'), ('processors', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('37', '37'), ('.', '.'), ('Raina', 'Raina'), (',', ','), ('R.', 'R.'), (',', ','), ('Madhavan', 'Madhavan'), (',', ','), ('A.', 'A.'), ('&', '&'), ('Ng', 'Ng'), (',', ','), ('A.', 'A.'), ('Y.', 'Y.'), ('Large', 'large'), ('-', '-'), ('scale', 'scale'), ('deep', 'deep'), ('unsupervised', 'unsupervised'), ('learning', 'learning'), ('using', 'use'), ('graphics', 'graphic'), ('processors', 'processor'), ('.', '.')] 

 Dependency tags are: 
>> [(('37', 'Raina'), 'nummod'), (('.', '37'), 'punct'), (('Raina', 'root'), 'root'), ((',', 'R.'), 'punct'), (('R.', 'Raina'), 'conj'), ((',', 'Madhavan'), 'punct'), (('Madhavan', 'Raina'), 'conj'), ((',', 'A.'), 'punct'), (('A.', 'Raina'), 'conj'), (('&', 'Ng'), 'cc'), (('Ng', 'Raina'), 'conj'), ((',', 'Raina'), 'punct'), (('A.', 'Raina'), 'conj'), (('Y.', 'A.'), 'flat'), (('Large', 'scale'), 'amod'), (('-', 'scale'), 'punct'), (('scale', 'Raina'), 'list'), (('deep', 'learning'), 'amod'), (('unsupervised', 'learning'), 'amod'), (('learning', 'Raina'), 'conj'), (('using', 'learning'), 'acl'), (('graphics', 'processors'), 'compound'), (('processors', 'using'), 'obj'), (('.', 'Raina'), 'punct')]

 Named Entites are: 
>> [('37. Raina, R., Madhavan, A. & Ng', 'ORG')]

------------------- Sentence 2 -------------------

 In Proc. 26th Annual International Conference on  Machine Learning 873–880 (2009). 

Tokens are: 
>> ['In', 'Proc.', '26th', 'Annual', 'International', 'Conference', 'on', 'Machine', 'Learning', '873–880', '(', '2009', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('26th', 'ADJ'), ('Annual', 'ADJ'), ('International', 'ADJ'), ('Conference', 'PROPN'), ('on', 'ADP'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('873–880', 'NUM'), ('(', 'PUNCT'), ('2009', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('26th', 'NNP'), ('Annual', 'NNP'), ('International', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('Machine', 'NNP'), ('Learning', 'NNP'), ('873–880', 'CD'), ('(', '-LRB-'), ('2009', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('26th', '26th'), ('Annual', 'annual'), ('International', 'International'), ('Conference', 'Conference'), ('on', 'on'), ('Machine', 'Machine'), ('Learning', 'learning'), ('873–880', '873–880'), ('(', '('), ('2009', '2009'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('26th', 'Conference'), 'amod'), (('Annual', 'Conference'), 'amod'), (('International', 'Conference'), 'amod'), (('Conference', 'root'), 'root'), (('on', 'Machine'), 'case'), (('Machine', 'Conference'), 'nmod'), (('Learning', 'Machine'), 'flat'), (('873–880', 'Machine'), 'nummod'), (('(', '2009'), 'punct'), (('2009', '873–880'), 'nmod:tmod'), ((')', '2009'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('26th', 'ORDINAL'), ('Annual International Conference on  Machine Learning 873–880', 'EVENT'), ('2009', 'DATE')]

================================ Paragraph 286 =================================

38. Mohamed, A.-R., Dahl, G. E. & Hinton, G. Acoustic modeling using deep belief  networks. IEEE Trans. Audio Speech Lang. Process. 20, 14–22 (2012).  


------------------- Sentence 1 -------------------

 38. Mohamed, A.-R., Dahl, G. E. & Hinton, G. Acoustic modeling using deep belief  networks. 

Tokens are: 
>> ['38', '.', 'Mohamed', ',', 'A.-R.', ',', 'Dahl', ',', 'G.', 'E.', '&', 'Hinton', ',', 'G.', 'Acoustic', 'modeling', 'using', 'deep', 'belief', 'networks', '.'] 

 UPOS tags are: 
>> [('38', 'NUM'), ('.', 'PUNCT'), ('Mohamed', 'PROPN'), (',', 'PUNCT'), ('A.-R.', 'PROPN'), (',', 'PUNCT'), ('Dahl', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('E.', 'PROPN'), ('&', 'CCONJ'), ('Hinton', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('Acoustic', 'ADJ'), ('modeling', 'NOUN'), ('using', 'VERB'), ('deep', 'ADJ'), ('belief', 'NOUN'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('38', 'LS'), ('.', '.'), ('Mohamed', 'NNP'), (',', ','), ('A.-R.', 'NNP'), (',', ','), ('Dahl', 'NNP'), (',', ','), ('G.', 'NNP'), ('E.', 'NNP'), ('&', 'CC'), ('Hinton', 'NNP'), (',', ','), ('G.', 'NNP'), ('Acoustic', 'JJ'), ('modeling', 'NN'), ('using', 'VBG'), ('deep', 'JJ'), ('belief', 'NN'), ('networks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('38', '38'), ('.', '.'), ('Mohamed', 'Mohamed'), (',', ','), ('A.-R.', 'A.-R.'), (',', ','), ('Dahl', 'Dahl'), (',', ','), ('G.', 'G.'), ('E.', 'E.'), ('&', '&'), ('Hinton', 'Hinton'), (',', ','), ('G.', 'G.'), ('Acoustic', 'acoustic'), ('modeling', 'modeling'), ('using', 'use'), ('deep', 'deep'), ('belief', 'belief'), ('networks', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('38', 'Mohamed'), 'nummod'), (('.', '38'), 'punct'), (('Mohamed', 'root'), 'root'), ((',', 'A.-R.'), 'punct'), (('A.-R.', 'Mohamed'), 'conj'), ((',', 'Dahl'), 'punct'), (('Dahl', 'Mohamed'), 'conj'), ((',', 'G.'), 'punct'), (('G.', 'Mohamed'), 'conj'), (('E.', 'G.'), 'flat'), (('&', 'Hinton'), 'cc'), (('Hinton', 'Mohamed'), 'conj'), ((',', 'modeling'), 'punct'), (('G.', 'modeling'), 'compound'), (('Acoustic', 'modeling'), 'amod'), (('modeling', 'Mohamed'), 'conj'), (('using', 'modeling'), 'acl'), (('deep', 'networks'), 'amod'), (('belief', 'networks'), 'compound'), (('networks', 'using'), 'obj'), (('.', 'Mohamed'), 'punct')]

 Named Entites are: 
>> [('38', 'CARDINAL'), ('Mohamed', 'PERSON'), ('A.-R., Dahl, G. E. & Hinton', 'ORG'), ('G. Acoustic', 'ORG')]

------------------- Sentence 2 -------------------

 IEEE Trans. Audio Speech Lang. Process. 20, 14–22 (2012). 

Tokens are: 
>> ['IEEE', 'Trans', '.', 'Audio', 'Speech', 'Lang.', 'Process.', '20', ',', '14–22', '(', '2012', ')', '.'] 

 UPOS tags are: 
>> [('IEEE', 'PROPN'), ('Trans', 'PROPN'), ('.', 'PUNCT'), ('Audio', 'PROPN'), ('Speech', 'PROPN'), ('Lang.', 'PROPN'), ('Process.', 'PROPN'), ('20', 'NUM'), (',', 'PUNCT'), ('14–22', 'NUM'), ('(', 'PUNCT'), ('2012', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IEEE', 'NNP'), ('Trans', 'NNP'), ('.', '.'), ('Audio', 'NNP'), ('Speech', 'NNP'), ('Lang.', 'NNP'), ('Process.', 'NNP'), ('20', 'CD'), (',', ','), ('14–22', 'CD'), ('(', '-LRB-'), ('2012', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('IEEE', 'IEEE'), ('Trans', 'Trans'), ('.', '.'), ('Audio', 'audio'), ('Speech', 'Speech'), ('Lang.', 'Lang.'), ('Process.', 'Process.'), ('20', '20'), (',', ','), ('14–22', '14–22'), ('(', '('), ('2012', '2012'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('IEEE', 'Trans'), 'compound'), (('Trans', 'root'), 'root'), (('.', 'Trans'), 'punct'), (('Audio', 'Trans'), 'appos'), (('Speech', 'Audio'), 'flat'), (('Lang.', 'Audio'), 'flat'), (('Process.', 'Audio'), 'flat'), (('20', 'Audio'), 'list'), ((',', '14–22'), 'punct'), (('14–22', '20'), 'nmod:tmod'), (('(', '2012'), 'punct'), (('2012', '14–22'), 'nmod:tmod'), ((')', '2012'), 'punct'), (('.', 'Trans'), 'punct')]

 Named Entites are: 
>> [('20', 'CARDINAL'), ('14–22', 'CARDINAL'), ('2012', 'DATE')]

================================ Paragraph 287 =================================

39. Dahl, G. E., Yu, D., Deng, L. & Acero, A. Context-dependent pre-trained deep  neural networks for large vocabulary speech recognition. IEEE Trans. Audio  Speech Lang. Process. 20, 33–42 (2012).  


------------------- Sentence 1 -------------------

 39. Dahl, G. E., Yu, D., Deng, L. & Acero, A. Context-dependent pre-trained deep  neural networks for large vocabulary speech recognition. 

Tokens are: 
>> ['39', '.', 'Dahl', ',', 'G.', 'E.', ',', 'Yu', ',', 'D.', ',', 'Deng', ',', 'L.', '&', 'Acero', ',', 'A.', 'Context', '-', 'dependent', 'pre-trained', 'deep', 'neural', 'networks', 'for', 'large', 'vocabulary', 'speech', 'recognition', '.'] 

 UPOS tags are: 
>> [('39', 'NUM'), ('.', 'PUNCT'), ('Dahl', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('E.', 'PROPN'), (',', 'PUNCT'), ('Yu', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), (',', 'PUNCT'), ('Deng', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('&', 'CCONJ'), ('Acero', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('Context', 'PROPN'), ('-', 'PUNCT'), ('dependent', 'ADJ'), ('pre-trained', 'ADJ'), ('deep', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('for', 'ADP'), ('large', 'ADJ'), ('vocabulary', 'NOUN'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('39', 'LS'), ('.', '.'), ('Dahl', 'NNP'), (',', ','), ('G.', 'NNP'), ('E.', 'NNP'), (',', ','), ('Yu', 'NNP'), (',', ','), ('D.', 'NNP'), (',', ','), ('Deng', 'NNP'), (',', ','), ('L.', 'NNP'), ('&', 'CC'), ('Acero', 'NNP'), (',', ','), ('A.', 'NNP'), ('Context', 'NNP'), ('-', ','), ('dependent', 'JJ'), ('pre-trained', 'JJ'), ('deep', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), ('for', 'IN'), ('large', 'JJ'), ('vocabulary', 'NN'), ('speech', 'NN'), ('recognition', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('39', '39'), ('.', '.'), ('Dahl', 'Dahl'), (',', ','), ('G.', 'G.'), ('E.', 'E.'), (',', ','), ('Yu', 'Yu'), (',', ','), ('D.', 'D.'), (',', ','), ('Deng', 'Deng'), (',', ','), ('L.', 'L.'), ('&', '&'), ('Acero', 'Acero'), (',', ','), ('A.', 'A.'), ('Context', 'Context'), ('-', '-'), ('dependent', 'dependent'), ('pre-trained', 'pre-trained'), ('deep', 'deep'), ('neural', 'neural'), ('networks', 'network'), ('for', 'for'), ('large', 'large'), ('vocabulary', 'vocabulary'), ('speech', 'speech'), ('recognition', 'recognition'), ('.', '.')] 

 Dependency tags are: 
>> [(('39', 'Dahl'), 'nummod'), (('.', '39'), 'punct'), (('Dahl', 'root'), 'root'), ((',', 'G.'), 'punct'), (('G.', 'Dahl'), 'conj'), (('E.', 'Dahl'), 'flat'), ((',', 'Yu'), 'punct'), (('Yu', 'Dahl'), 'conj'), ((',', 'D.'), 'punct'), (('D.', 'Dahl'), 'conj'), ((',', 'Deng'), 'punct'), (('Deng', 'Dahl'), 'conj'), ((',', 'L.'), 'punct'), (('L.', 'Dahl'), 'conj'), (('&', 'Acero'), 'cc'), (('Acero', 'L.'), 'conj'), ((',', 'Context'), 'punct'), (('A.', 'Context'), 'compound'), (('Context', 'Dahl'), 'conj'), (('-', 'Dahl'), 'punct'), (('dependent', 'networks'), 'amod'), (('pre-trained', 'networks'), 'amod'), (('deep', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'Dahl'), 'appos'), (('for', 'recognition'), 'case'), (('large', 'recognition'), 'amod'), (('vocabulary', 'recognition'), 'compound'), (('speech', 'recognition'), 'compound'), (('recognition', 'networks'), 'nmod'), (('.', 'Dahl'), 'punct')]

 Named Entites are: 
>> [('39', 'CARDINAL'), ('Dahl', 'PERSON'), ('G. E.', 'GPE'), ('Yu', 'PERSON'), ('D.', 'NORP'), ('Deng', 'PERSON'), ('L. & Acero', 'ORG')]

------------------- Sentence 2 -------------------

 IEEE Trans. Audio  Speech Lang. Process. 20, 33–42 (2012). 

Tokens are: 
>> ['IEEE', 'Trans', '.', 'Audio', 'Speech', 'Lang.', 'Process.', '20', ',', '33–42', '(', '2012', ')', '.'] 

 UPOS tags are: 
>> [('IEEE', 'PROPN'), ('Trans', 'PROPN'), ('.', 'PUNCT'), ('Audio', 'PROPN'), ('Speech', 'PROPN'), ('Lang.', 'PROPN'), ('Process.', 'PROPN'), ('20', 'NUM'), (',', 'PUNCT'), ('33–42', 'NUM'), ('(', 'PUNCT'), ('2012', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IEEE', 'NNP'), ('Trans', 'NNP'), ('.', '.'), ('Audio', 'NNP'), ('Speech', 'NNP'), ('Lang.', 'NNP'), ('Process.', 'NNP'), ('20', 'CD'), (',', ','), ('33–42', 'CD'), ('(', '-LRB-'), ('2012', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('IEEE', 'IEEE'), ('Trans', 'Trans'), ('.', '.'), ('Audio', 'audio'), ('Speech', 'Speech'), ('Lang.', 'Lang.'), ('Process.', 'Process.'), ('20', '20'), (',', ','), ('33–42', '33–42'), ('(', '('), ('2012', '2012'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('IEEE', 'Trans'), 'compound'), (('Trans', 'root'), 'root'), (('.', 'Trans'), 'punct'), (('Audio', 'Trans'), 'appos'), (('Speech', 'Audio'), 'flat'), (('Lang.', 'Audio'), 'flat'), (('Process.', 'Audio'), 'flat'), (('20', 'Audio'), 'list'), ((',', '33–42'), 'punct'), (('33–42', '20'), 'conj'), (('(', '2012'), 'punct'), (('2012', '33–42'), 'nmod:tmod'), ((')', '2012'), 'punct'), (('.', 'Trans'), 'punct')]

 Named Entites are: 
>> [('20', 'CARDINAL'), ('33–42', 'CARDINAL'), ('2012', 'DATE')]

================================ Paragraph 288 =================================

40. Bengio, Y., Courville, A. & Vincent, P. Representation learning: a review and new  perspectives. IEEE Trans. Pattern Anal. Machine Intell. 35, 1798–1828 (2013).  


------------------- Sentence 1 -------------------

 40. Bengio, Y., Courville, A. & Vincent, P. Representation learning: a review and new  perspectives. 

Tokens are: 
>> ['40', '.', 'Bengio', ',', 'Y.', ',', 'Courville', ',', 'A.', '&', 'Vincent', ',', 'P.', 'Representation', 'learning', ':', 'a', 'review', 'and', 'new', 'perspectives', '.'] 

 UPOS tags are: 
>> [('40', 'NUM'), ('.', 'PUNCT'), ('Bengio', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), (',', 'PUNCT'), ('Courville', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('&', 'CCONJ'), ('Vincent', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('Representation', 'PROPN'), ('learning', 'NOUN'), (':', 'PUNCT'), ('a', 'DET'), ('review', 'NOUN'), ('and', 'CCONJ'), ('new', 'ADJ'), ('perspectives', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('40', 'LS'), ('.', '.'), ('Bengio', 'NNP'), (',', ','), ('Y.', 'NNP'), (',', ','), ('Courville', 'NNP'), (',', ','), ('A.', 'NNP'), ('&', 'CC'), ('Vincent', 'NNP'), (',', ','), ('P.', 'NNP'), ('Representation', 'NNP'), ('learning', 'NN'), (':', ':'), ('a', 'DT'), ('review', 'NN'), ('and', 'CC'), ('new', 'JJ'), ('perspectives', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('40', '40'), ('.', '.'), ('Bengio', 'Bengio'), (',', ','), ('Y.', 'Y.'), (',', ','), ('Courville', 'Courville'), (',', ','), ('A.', 'A.'), ('&', '&'), ('Vincent', 'Vincent'), (',', ','), ('P.', 'P.'), ('Representation', 'representation'), ('learning', 'learning'), (':', ':'), ('a', 'a'), ('review', 'review'), ('and', 'and'), ('new', 'new'), ('perspectives', 'perspective'), ('.', '.')] 

 Dependency tags are: 
>> [(('40', 'Bengio'), 'nummod'), (('.', '40'), 'punct'), (('Bengio', 'root'), 'root'), ((',', 'Y.'), 'punct'), (('Y.', 'Bengio'), 'conj'), ((',', 'Courville'), 'punct'), (('Courville', 'Bengio'), 'conj'), ((',', 'A.'), 'punct'), (('A.', 'Bengio'), 'conj'), (('&', 'Vincent'), 'cc'), (('Vincent', 'Bengio'), 'conj'), ((',', 'Bengio'), 'punct'), (('P.', 'Bengio'), 'conj'), (('Representation', 'learning'), 'compound'), (('learning', 'Bengio'), 'list'), ((':', 'review'), 'punct'), (('a', 'review'), 'det'), (('review', 'Bengio'), 'list'), (('and', 'perspectives'), 'cc'), (('new', 'perspectives'), 'amod'), (('perspectives', 'review'), 'conj'), (('.', 'Bengio'), 'punct')]

 Named Entites are: 
>> [('40', 'CARDINAL'), ('Bengio, Y., Courville, A. & Vincent', 'ORG'), ('P. Representation', 'ORG')]

------------------- Sentence 2 -------------------

 IEEE Trans. Pattern Anal. Machine Intell. 35, 1798–1828 (2013). 

Tokens are: 
>> ['IEEE', 'Trans', '.', 'Pattern', 'Anal', '.', 'Machine', 'Intell.', '35', ',', '1798–1828', '(', '2013', ')', '.'] 

 UPOS tags are: 
>> [('IEEE', 'PROPN'), ('Trans', 'PROPN'), ('.', 'PUNCT'), ('Pattern', 'NOUN'), ('Anal', 'PROPN'), ('.', 'PUNCT'), ('Machine', 'NOUN'), ('Intell.', 'PROPN'), ('35', 'NUM'), (',', 'PUNCT'), ('1798–1828', 'NUM'), ('(', 'PUNCT'), ('2013', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IEEE', 'NNP'), ('Trans', 'NNP'), ('.', '.'), ('Pattern', 'NN'), ('Anal', 'NNP'), ('.', '.'), ('Machine', 'NN'), ('Intell.', 'NNP'), ('35', 'CD'), (',', ','), ('1798–1828', 'CD'), ('(', '-LRB-'), ('2013', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('IEEE', 'IEEE'), ('Trans', 'Trans'), ('.', '.'), ('Pattern', 'pattern'), ('Anal', 'Anal'), ('.', '.'), ('Machine', 'Machine'), ('Intell.', 'Intell.'), ('35', '35'), (',', ','), ('1798–1828', '1798–1828'), ('(', '('), ('2013', '2013'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('IEEE', 'Trans'), 'compound'), (('Trans', 'root'), 'root'), (('.', 'Trans'), 'punct'), (('Pattern', 'Trans'), 'appos'), (('Anal', 'Trans'), 'list'), (('.', 'Trans'), 'punct'), (('Machine', 'Trans'), 'list'), (('Intell.', 'Machine'), 'appos'), (('35', 'Intell.'), 'nummod'), ((',', 'Intell.'), 'punct'), (('1798–1828', 'Intell.'), 'nummod'), (('(', '2013'), 'punct'), (('2013', 'Intell.'), 'nmod:tmod'), ((')', '2013'), 'punct'), (('.', 'Trans'), 'punct')]

 Named Entites are: 
>> [('35', 'CARDINAL'), ('1798–1828', 'CARDINAL'), ('2013', 'DATE')]

================================ Paragraph 289 =================================

41. LeCun, Y. et al. Handwritten digit recognition with a back-propagation network.  In Proc. Advances in Neural Information Processing Systems 396–404 (1990).  


------------------- Sentence 1 -------------------

 41. LeCun, Y. et al. Handwritten digit recognition with a back-propagation network. 

Tokens are: 
>> ['41', '.', 'LeCun', ',', 'Y.', 'et', 'al.', 'Handwritten', 'digit', 'recognition', 'with', 'a', 'back', '-', 'propagation', 'network', '.'] 

 UPOS tags are: 
>> [('41', 'NUM'), ('.', 'PUNCT'), ('LeCun', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('et', 'X'), ('al.', 'X'), ('Handwritten', 'PROPN'), ('digit', 'NOUN'), ('recognition', 'NOUN'), ('with', 'ADP'), ('a', 'DET'), ('back', 'NOUN'), ('-', 'PUNCT'), ('propagation', 'NOUN'), ('network', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('41', 'LS'), ('.', '.'), ('LeCun', 'NNP'), (',', ','), ('Y.', 'NNP'), ('et', 'FW'), ('al.', 'FW'), ('Handwritten', 'NNP'), ('digit', 'NN'), ('recognition', 'NN'), ('with', 'IN'), ('a', 'DT'), ('back', 'NN'), ('-', 'HYPH'), ('propagation', 'NN'), ('network', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('41', '41'), ('.', '.'), ('LeCun', 'LeCun'), (',', ','), ('Y.', 'Y.'), ('et', 'et'), ('al.', 'al.'), ('Handwritten', 'handwritten'), ('digit', 'digit'), ('recognition', 'recognition'), ('with', 'with'), ('a', 'a'), ('back', 'back'), ('-', '-'), ('propagation', 'propagation'), ('network', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('41', 'LeCun'), 'nummod'), (('.', '41'), 'punct'), (('LeCun', 'root'), 'root'), ((',', 'LeCun'), 'punct'), (('Y.', 'LeCun'), 'conj'), (('et', 'al.'), 'cc'), (('al.', 'Y.'), 'conj'), (('Handwritten', 'digit'), 'compound'), (('digit', 'recognition'), 'compound'), (('recognition', 'LeCun'), 'appos'), (('with', 'network'), 'case'), (('a', 'network'), 'det'), (('back', 'propagation'), 'compound'), (('-', 'propagation'), 'punct'), (('propagation', 'network'), 'compound'), (('network', 'recognition'), 'nmod'), (('.', 'LeCun'), 'punct')]

 Named Entites are: 
>> [('41', 'CARDINAL'), ('LeCun', 'ORG')]

------------------- Sentence 2 -------------------

 In Proc. Advances in Neural Information Processing Systems 396–404 (1990). 

Tokens are: 
>> ['In', 'Proc.', 'Advances', 'in', 'Neural', 'Information', 'Processing', 'Systems', '396–404', '(', '1990', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'NOUN'), ('Advances', 'NOUN'), ('in', 'ADP'), ('Neural', 'ADJ'), ('Information', 'NOUN'), ('Processing', 'NOUN'), ('Systems', 'NOUN'), ('396–404', 'NUM'), ('(', 'PUNCT'), ('1990', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NN'), ('Advances', 'NNS'), ('in', 'IN'), ('Neural', 'JJ'), ('Information', 'NN'), ('Processing', 'NN'), ('Systems', 'NNS'), ('396–404', 'CD'), ('(', '-LRB-'), ('1990', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'proc.'), ('Advances', 'advance'), ('in', 'in'), ('Neural', 'neural'), ('Information', 'information'), ('Processing', 'processing'), ('Systems', 'system'), ('396–404', '396–404'), ('(', '('), ('1990', '1990'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Advances'), 'case'), (('Proc.', 'Advances'), 'compound'), (('Advances', 'root'), 'root'), (('in', 'Systems'), 'case'), (('Neural', 'Information'), 'amod'), (('Information', 'Systems'), 'compound'), (('Processing', 'Systems'), 'compound'), (('Systems', 'Advances'), 'nmod'), (('396–404', 'Systems'), 'nummod'), (('(', '1990'), 'punct'), (('1990', 'Systems'), 'nmod:tmod'), ((')', '1990'), 'punct'), (('.', 'Advances'), 'punct')]

 Named Entites are: 
>> [('Neural Information Processing Systems', 'ORG'), ('396–404', 'CARDINAL'), ('1990', 'DATE')]

================================ Paragraph 290 =================================

 This is the first paper on convolutional networks trained by backpropagation  


------------------- Sentence 1 -------------------

 This is the first paper on convolutional networks trained by backpropagation 

Tokens are: 
>> ['This', 'is', 'the', 'first', 'paper', 'on', 'convolutional', 'networks', 'trained', 'by', 'backpropagation'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('is', 'AUX'), ('the', 'DET'), ('first', 'ADJ'), ('paper', 'NOUN'), ('on', 'ADP'), ('convolutional', 'ADJ'), ('networks', 'NOUN'), ('trained', 'VERB'), ('by', 'ADP'), ('backpropagation', 'NOUN')] 

 XPOS tags are: 
>> [('This', 'DT'), ('is', 'VBZ'), ('the', 'DT'), ('first', 'JJ'), ('paper', 'NN'), ('on', 'IN'), ('convolutional', 'JJ'), ('networks', 'NNS'), ('trained', 'VBN'), ('by', 'IN'), ('backpropagation', 'NN')] 

 Lemmas are: 
>> [('This', 'this'), ('is', 'be'), ('the', 'the'), ('first', 'first'), ('paper', 'paper'), ('on', 'on'), ('convolutional', 'convolutional'), ('networks', 'network'), ('trained', 'train'), ('by', 'by'), ('backpropagation', 'backpropagation')] 

 Dependency tags are: 
>> [(('This', 'paper'), 'nsubj'), (('is', 'paper'), 'cop'), (('the', 'paper'), 'det'), (('first', 'paper'), 'amod'), (('paper', 'root'), 'root'), (('on', 'networks'), 'case'), (('convolutional', 'networks'), 'amod'), (('networks', 'paper'), 'nmod'), (('trained', 'networks'), 'acl'), (('by', 'backpropagation'), 'case'), (('backpropagation', 'trained'), 'obl')]

 Named Entites are: 
>> [('first', 'ORDINAL')]

================================ Paragraph 291 =================================

for the task of classifying low-resolution images of handwritten digits. 42. LeCun, Y., Bottou, L., Bengio, Y. & Haffner, P. Gradient-based learning applied to  


------------------- Sentence 1 -------------------

 for the task of classifying low-resolution images of handwritten digits. 

Tokens are: 
>> ['for', 'the', 'task', 'of', 'classifying', 'low-resolution', 'images', 'of', 'handwritten', 'digits', '.'] 

 UPOS tags are: 
>> [('for', 'ADP'), ('the', 'DET'), ('task', 'NOUN'), ('of', 'SCONJ'), ('classifying', 'VERB'), ('low-resolution', 'ADJ'), ('images', 'NOUN'), ('of', 'ADP'), ('handwritten', 'NOUN'), ('digits', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('for', 'IN'), ('the', 'DT'), ('task', 'NN'), ('of', 'IN'), ('classifying', 'VBG'), ('low-resolution', 'JJ'), ('images', 'NNS'), ('of', 'IN'), ('handwritten', 'NN'), ('digits', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('for', 'for'), ('the', 'the'), ('task', 'task'), ('of', 'of'), ('classifying', 'classify'), ('low-resolution', 'low-resolution'), ('images', 'image'), ('of', 'of'), ('handwritten', 'handwritten'), ('digits', 'digit'), ('.', '.')] 

 Dependency tags are: 
>> [(('for', 'task'), 'case'), (('the', 'task'), 'det'), (('task', 'root'), 'root'), (('of', 'classifying'), 'mark'), (('classifying', 'task'), 'acl'), (('low-resolution', 'images'), 'amod'), (('images', 'classifying'), 'obj'), (('of', 'digits'), 'case'), (('handwritten', 'digits'), 'compound'), (('digits', 'images'), 'nmod'), (('.', 'task'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 42. 

Tokens are: 
>> ['42', '.'] 

 UPOS tags are: 
>> [('42', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('42', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('42', '42'), ('.', '.')] 

 Dependency tags are: 
>> [(('42', 'root'), 'root'), (('.', '42'), 'punct')]

 Named Entites are: 
>> [('42', 'CARDINAL')]

------------------- Sentence 3 -------------------

 LeCun, Y., Bottou, L., Bengio, Y. & Haffner, P. Gradient-based learning applied to 

Tokens are: 
>> ['LeCun', ',', 'Y.', ',', 'Bottou', ',', 'L.', ',', 'Bengio', ',', 'Y.', '&', 'Haffner', ',', 'P.', 'Gradient', '-', 'based', 'learning', 'applied', 'to'] 

 UPOS tags are: 
>> [('LeCun', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), (',', 'PUNCT'), ('Bottou', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), (',', 'PUNCT'), ('Bengio', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('&', 'CCONJ'), ('Haffner', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('Gradient', 'PROPN'), ('-', 'PUNCT'), ('based', 'VERB'), ('learning', 'NOUN'), ('applied', 'VERB'), ('to', 'ADP')] 

 XPOS tags are: 
>> [('LeCun', 'NNP'), (',', ','), ('Y.', 'NNP'), (',', ','), ('Bottou', 'NNP'), (',', ','), ('L.', 'NNP'), (',', ','), ('Bengio', 'NNP'), (',', ','), ('Y.', 'NNP'), ('&', 'CC'), ('Haffner', 'NNP'), (',', ','), ('P.', 'NNP'), ('Gradient', 'NNP'), ('-', 'HYPH'), ('based', 'VBN'), ('learning', 'NN'), ('applied', 'VBN'), ('to', 'IN')] 

 Lemmas are: 
>> [('LeCun', 'LeCun'), (',', ','), ('Y.', 'Y.'), (',', ','), ('Bottou', 'Bottou'), (',', ','), ('L.', 'L.'), (',', ','), ('Bengio', 'Bengio'), (',', ','), ('Y.', 'Y.'), ('&', '&'), ('Haffner', 'Haffner'), (',', ','), ('P.', 'P.'), ('Gradient', 'Gradient'), ('-', '-'), ('based', 'base'), ('learning', 'learning'), ('applied', 'apply'), ('to', 'to')] 

 Dependency tags are: 
>> [(('LeCun', 'root'), 'root'), ((',', 'Y.'), 'punct'), (('Y.', 'LeCun'), 'conj'), ((',', 'Bottou'), 'punct'), (('Bottou', 'LeCun'), 'conj'), ((',', 'L.'), 'punct'), (('L.', 'LeCun'), 'conj'), ((',', 'Bengio'), 'punct'), (('Bengio', 'LeCun'), 'conj'), ((',', 'Y.'), 'punct'), (('Y.', 'LeCun'), 'conj'), (('&', 'Haffner'), 'cc'), (('Haffner', 'Y.'), 'conj'), ((',', 'learning'), 'punct'), (('P.', 'learning'), 'compound'), (('Gradient', 'based'), 'compound'), (('-', 'based'), 'punct'), (('based', 'learning'), 'amod'), (('learning', 'LeCun'), 'parataxis'), (('applied', 'learning'), 'acl'), (('to', 'applied'), 'obl')]

 Named Entites are: 
>> [('LeCun, Y.', 'ORG'), ('Bottou', 'GPE'), ('L.', 'GPE'), ('Bengio', 'GPE'), ('Y. & Haffner', 'ORG'), ('P. Gradient', 'ORG')]

================================ Paragraph 292 =================================

document recognition. Proc. IEEE 86, 2278–2324 (1998).   This overview paper on the principles of end-to-end training of modular  


------------------- Sentence 1 -------------------

 document recognition. 

Tokens are: 
>> ['document', 'recognition', '.'] 

 UPOS tags are: 
>> [('document', 'VERB'), ('recognition', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('document', 'VB'), ('recognition', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('document', 'document'), ('recognition', 'recognition'), ('.', '.')] 

 Dependency tags are: 
>> [(('document', 'root'), 'root'), (('recognition', 'document'), 'obj'), (('.', 'document'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 Proc. IEEE 86, 2278–2324 (1998). 

Tokens are: 
>> ['Proc.', 'IEEE', '86', ',', '2278–2324', '(', '1998', ')', '.'] 

 UPOS tags are: 
>> [('Proc.', 'PROPN'), ('IEEE', 'PROPN'), ('86', 'NUM'), (',', 'PUNCT'), ('2278–2324', 'NUM'), ('(', 'PUNCT'), ('1998', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Proc.', 'NNP'), ('IEEE', 'NNP'), ('86', 'CD'), (',', ','), ('2278–2324', 'CD'), ('(', '-LRB-'), ('1998', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Proc.', 'Proc.'), ('IEEE', 'IEEE'), ('86', '86'), (',', ','), ('2278–2324', '2278–2324'), ('(', '('), ('1998', '1998'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Proc.', 'root'), 'root'), (('IEEE', 'Proc.'), 'flat'), (('86', 'IEEE'), 'nummod'), ((',', 'IEEE'), 'punct'), (('2278–2324', 'IEEE'), 'nmod:tmod'), (('(', '1998'), 'punct'), (('1998', 'IEEE'), 'list'), ((')', '1998'), 'punct'), (('.', 'Proc.'), 'punct')]

 Named Entites are: 
>> [('Proc. IEEE 86', 'ORG'), ('2278–2324', 'CARDINAL'), ('1998', 'DATE')]

------------------- Sentence 3 -------------------

 This overview paper on the principles of end-to-end training of modular 

Tokens are: 
>> ['This', 'overview', 'paper', 'on', 'the', 'principles', 'of', 'end', '-', 'to', '-', 'end', 'training', 'of', 'modular'] 

 UPOS tags are: 
>> [('This', 'DET'), ('overview', 'NOUN'), ('paper', 'NOUN'), ('on', 'ADP'), ('the', 'DET'), ('principles', 'NOUN'), ('of', 'ADP'), ('end', 'NOUN'), ('-', 'PUNCT'), ('to', 'ADP'), ('-', 'PUNCT'), ('end', 'NOUN'), ('training', 'NOUN'), ('of', 'ADP'), ('modular', 'NOUN')] 

 XPOS tags are: 
>> [('This', 'DT'), ('overview', 'NN'), ('paper', 'NN'), ('on', 'IN'), ('the', 'DT'), ('principles', 'NNS'), ('of', 'IN'), ('end', 'NN'), ('-', 'HYPH'), ('to', 'IN'), ('-', 'HYPH'), ('end', 'NN'), ('training', 'NN'), ('of', 'IN'), ('modular', 'NN')] 

 Lemmas are: 
>> [('This', 'this'), ('overview', 'overview'), ('paper', 'paper'), ('on', 'on'), ('the', 'the'), ('principles', 'principle'), ('of', 'of'), ('end', 'end'), ('-', '-'), ('to', 'to'), ('-', '-'), ('end', 'end'), ('training', 'training'), ('of', 'of'), ('modular', 'modular')] 

 Dependency tags are: 
>> [(('This', 'paper'), 'det'), (('overview', 'paper'), 'compound'), (('paper', 'root'), 'root'), (('on', 'principles'), 'case'), (('the', 'principles'), 'det'), (('principles', 'paper'), 'nmod'), (('of', 'training'), 'case'), (('end', 'training'), 'compound'), (('-', 'end'), 'punct'), (('to', 'end'), 'case'), (('-', 'end'), 'punct'), (('end', 'end'), 'nmod'), (('training', 'principles'), 'nmod'), (('of', 'modular'), 'case'), (('modular', 'training'), 'nmod')]

 Named Entites are: 
>> []

================================ Paragraph 293 =================================

systems such as deep neural networks using gradient-based optimization  showed how neural networks (and in particular convolutional nets) can be  combined with search or inference mechanisms to model complex outputs  that are interdependent, such as sequences of characters associated with the  content of a document. 


------------------- Sentence 1 -------------------

 systems such as deep neural networks using gradient-based optimization  showed how neural networks (and in particular convolutional nets) can be  combined with search or inference mechanisms to model complex outputs  that are interdependent, such as sequences of characters associated with the  content of a document. 

Tokens are: 
>> ['systems', 'such', 'as', 'deep', 'neural', 'networks', 'using', 'gradient', '-', 'based', 'optimization', 'showed', 'how', 'neural', 'networks', '(', 'and', 'in', 'particular', 'convolutional', 'nets', ')', 'can', 'be', 'combined', 'with', 'search', 'or', 'inference', 'mechanisms', 'to', 'model', 'complex', 'outputs', 'that', 'are', 'interdependent', ',', 'such', 'as', 'sequences', 'of', 'characters', 'associated', 'with', 'the', 'content', 'of', 'a', 'document', '.'] 

 UPOS tags are: 
>> [('systems', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('deep', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('using', 'VERB'), ('gradient', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('optimization', 'NOUN'), ('showed', 'VERB'), ('how', 'SCONJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('(', 'PUNCT'), ('and', 'CCONJ'), ('in', 'ADP'), ('particular', 'ADJ'), ('convolutional', 'ADJ'), ('nets', 'NOUN'), (')', 'PUNCT'), ('can', 'AUX'), ('be', 'AUX'), ('combined', 'VERB'), ('with', 'ADP'), ('search', 'NOUN'), ('or', 'CCONJ'), ('inference', 'NOUN'), ('mechanisms', 'NOUN'), ('to', 'PART'), ('model', 'VERB'), ('complex', 'ADJ'), ('outputs', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('interdependent', 'ADJ'), (',', 'PUNCT'), ('such', 'ADJ'), ('as', 'ADP'), ('sequences', 'NOUN'), ('of', 'ADP'), ('characters', 'NOUN'), ('associated', 'VERB'), ('with', 'ADP'), ('the', 'DET'), ('content', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('document', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('systems', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('deep', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), ('using', 'VBG'), ('gradient', 'NN'), ('-', 'HYPH'), ('based', 'VBN'), ('optimization', 'NN'), ('showed', 'VBD'), ('how', 'WRB'), ('neural', 'JJ'), ('networks', 'NNS'), ('(', '-LRB-'), ('and', 'CC'), ('in', 'IN'), ('particular', 'JJ'), ('convolutional', 'JJ'), ('nets', 'NNS'), (')', '-RRB-'), ('can', 'MD'), ('be', 'VB'), ('combined', 'VBN'), ('with', 'IN'), ('search', 'NN'), ('or', 'CC'), ('inference', 'NN'), ('mechanisms', 'NNS'), ('to', 'TO'), ('model', 'VB'), ('complex', 'JJ'), ('outputs', 'NNS'), ('that', 'WDT'), ('are', 'VBP'), ('interdependent', 'JJ'), (',', ','), ('such', 'JJ'), ('as', 'IN'), ('sequences', 'NNS'), ('of', 'IN'), ('characters', 'NNS'), ('associated', 'VBN'), ('with', 'IN'), ('the', 'DT'), ('content', 'NN'), ('of', 'IN'), ('a', 'DT'), ('document', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('systems', 'system'), ('such', 'such'), ('as', 'as'), ('deep', 'deep'), ('neural', 'neural'), ('networks', 'network'), ('using', 'use'), ('gradient', 'gradient'), ('-', '-'), ('based', 'base'), ('optimization', 'optimization'), ('showed', 'show'), ('how', 'how'), ('neural', 'neural'), ('networks', 'network'), ('(', '('), ('and', 'and'), ('in', 'in'), ('particular', 'particular'), ('convolutional', 'convolutional'), ('nets', 'net'), (')', ')'), ('can', 'can'), ('be', 'be'), ('combined', 'combine'), ('with', 'with'), ('search', 'search'), ('or', 'or'), ('inference', 'inference'), ('mechanisms', 'mechanism'), ('to', 'to'), ('model', 'model'), ('complex', 'complex'), ('outputs', 'output'), ('that', 'that'), ('are', 'be'), ('interdependent', 'interdependent'), (',', ','), ('such', 'such'), ('as', 'as'), ('sequences', 'sequence'), ('of', 'of'), ('characters', 'character'), ('associated', 'associate'), ('with', 'with'), ('the', 'the'), ('content', 'content'), ('of', 'of'), ('a', 'a'), ('document', 'document'), ('.', '.')] 

 Dependency tags are: 
>> [(('systems', 'showed'), 'nsubj'), (('such', 'networks'), 'case'), (('as', 'such'), 'fixed'), (('deep', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'systems'), 'nmod'), (('using', 'networks'), 'acl'), (('gradient', 'based'), 'compound'), (('-', 'based'), 'punct'), (('based', 'optimization'), 'amod'), (('optimization', 'using'), 'obj'), (('showed', 'root'), 'root'), (('how', 'combined'), 'mark'), (('neural', 'networks'), 'amod'), (('networks', 'combined'), 'nsubj:pass'), (('(', 'networks'), 'punct'), (('and', 'nets'), 'cc'), (('in', 'nets'), 'case'), (('particular', 'nets'), 'amod'), (('convolutional', 'nets'), 'amod'), (('nets', 'networks'), 'conj'), ((')', 'nets'), 'punct'), (('can', 'combined'), 'aux'), (('be', 'combined'), 'aux:pass'), (('combined', 'showed'), 'ccomp'), (('with', 'mechanisms'), 'case'), (('search', 'mechanisms'), 'compound'), (('or', 'inference'), 'cc'), (('inference', 'search'), 'conj'), (('mechanisms', 'combined'), 'obl'), (('to', 'model'), 'mark'), (('model', 'combined'), 'advcl'), (('complex', 'outputs'), 'amod'), (('outputs', 'model'), 'obj'), (('that', 'interdependent'), 'nsubj'), (('are', 'interdependent'), 'cop'), (('interdependent', 'outputs'), 'acl:relcl'), ((',', 'sequences'), 'punct'), (('such', 'sequences'), 'case'), (('as', 'such'), 'fixed'), (('sequences', 'outputs'), 'nmod'), (('of', 'characters'), 'case'), (('characters', 'sequences'), 'nmod'), (('associated', 'characters'), 'acl'), (('with', 'content'), 'case'), (('the', 'content'), 'det'), (('content', 'associated'), 'obl'), (('of', 'document'), 'case'), (('a', 'document'), 'det'), (('document', 'content'), 'nmod'), (('.', 'showed'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 294 =================================

43. Hubel, D. H. & Wiesel, T. N. Receptive fields, binocular interaction, and functional  architecture in the cat’s visual cortex. J. Physiol. 160, 106–154 (1962).  


------------------- Sentence 1 -------------------

 43. 

Tokens are: 
>> ['43', '.'] 

 UPOS tags are: 
>> [('43', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('43', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('43', '43'), ('.', '.')] 

 Dependency tags are: 
>> [(('43', 'root'), 'root'), (('.', '43'), 'punct')]

 Named Entites are: 
>> [('43', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Hubel, D. H. & Wiesel, T. N. Receptive fields, binocular interaction, and functional  architecture in the cat’s visual cortex. 

Tokens are: 
>> ['Hubel', ',', 'D.', 'H.', '&', 'Wiesel', ',', 'T.', 'N.', 'Receptive', 'fields', ',', 'binocular', 'interaction', ',', 'and', 'functional', 'architecture', 'in', 'the', 'cat', '’s', 'visual', 'cortex', '.'] 

 UPOS tags are: 
>> [('Hubel', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('H.', 'PROPN'), ('&', 'CCONJ'), ('Wiesel', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), ('N.', 'PROPN'), ('Receptive', 'ADJ'), ('fields', 'NOUN'), (',', 'PUNCT'), ('binocular', 'ADJ'), ('interaction', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('functional', 'ADJ'), ('architecture', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('cat', 'NOUN'), ('’s', 'PART'), ('visual', 'ADJ'), ('cortex', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Hubel', 'NNP'), (',', ','), ('D.', 'NNP'), ('H.', 'NNP'), ('&', 'CC'), ('Wiesel', 'NNP'), (',', ','), ('T.', 'NNP'), ('N.', 'NNP'), ('Receptive', 'JJ'), ('fields', 'NNS'), (',', ','), ('binocular', 'JJ'), ('interaction', 'NN'), (',', ','), ('and', 'CC'), ('functional', 'JJ'), ('architecture', 'NN'), ('in', 'IN'), ('the', 'DT'), ('cat', 'NN'), ('’s', 'POS'), ('visual', 'JJ'), ('cortex', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Hubel', 'Hubel'), (',', ','), ('D.', 'D.'), ('H.', 'H.'), ('&', '&'), ('Wiesel', 'Wiesel'), (',', ','), ('T.', 'T.'), ('N.', 'N.'), ('Receptive', 'receptive'), ('fields', 'field'), (',', ','), ('binocular', 'binocular'), ('interaction', 'interaction'), (',', ','), ('and', 'and'), ('functional', 'functional'), ('architecture', 'architecture'), ('in', 'in'), ('the', 'the'), ('cat', 'cat'), ('’s', "'s"), ('visual', 'visual'), ('cortex', 'cortex'), ('.', '.')] 

 Dependency tags are: 
>> [(('Hubel', 'root'), 'root'), ((',', 'D.'), 'punct'), (('D.', 'Hubel'), 'conj'), (('H.', 'Hubel'), 'flat'), (('&', 'Wiesel'), 'cc'), (('Wiesel', 'Hubel'), 'conj'), ((',', 'fields'), 'punct'), (('T.', 'fields'), 'compound'), (('N.', 'T.'), 'flat'), (('Receptive', 'fields'), 'amod'), (('fields', 'Hubel'), 'conj'), ((',', 'interaction'), 'punct'), (('binocular', 'interaction'), 'amod'), (('interaction', 'Hubel'), 'conj'), ((',', 'architecture'), 'punct'), (('and', 'architecture'), 'cc'), (('functional', 'architecture'), 'amod'), (('architecture', 'Hubel'), 'conj'), (('in', 'cortex'), 'case'), (('the', 'cat'), 'det'), (('cat', 'cortex'), 'nmod:poss'), (('’s', 'cat'), 'case'), (('visual', 'cortex'), 'amod'), (('cortex', 'architecture'), 'nmod'), (('.', 'Hubel'), 'punct')]

 Named Entites are: 
>> [('Hubel', 'ORG'), ('D. H. & Wiesel', 'ORG')]

------------------- Sentence 3 -------------------

 J. Physiol. 160, 106–154 (1962). 

Tokens are: 
>> ['J.', 'Physiol.', '160', ',', '106–154', '(', '1962', ')', '.'] 

 UPOS tags are: 
>> [('J.', 'PROPN'), ('Physiol.', 'PROPN'), ('160', 'NUM'), (',', 'PUNCT'), ('106–154', 'NUM'), ('(', 'PUNCT'), ('1962', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('J.', 'NNP'), ('Physiol.', 'NNP'), ('160', 'CD'), (',', ','), ('106–154', 'CD'), ('(', '-LRB-'), ('1962', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('J.', 'J.'), ('Physiol.', 'Physiol.'), ('160', '160'), (',', ','), ('106–154', '106–154'), ('(', '('), ('1962', '1962'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('J.', 'root'), 'root'), (('Physiol.', 'J.'), 'flat'), (('160', 'J.'), 'list'), ((',', 'J.'), 'punct'), (('106–154', 'J.'), 'list'), (('(', '1962'), 'punct'), (('1962', '106–154'), 'nmod:tmod'), ((')', '1962'), 'punct'), (('.', 'J.'), 'punct')]

 Named Entites are: 
>> [('160', 'CARDINAL'), ('106–154', 'CARDINAL'), ('1962', 'DATE')]

================================ Paragraph 295 =================================

44. Felleman, D. J. & Essen, D. C. V. Distributed hierarchical processing in the  primate cerebral cortex. Cereb. Cortex 1, 1–47 (1991).  


------------------- Sentence 1 -------------------

 44. Felleman, D. J. & Essen, D. C. V. Distributed hierarchical processing in the  primate cerebral cortex. 

Tokens are: 
>> ['44', '.', 'Felleman', ',', 'D.', 'J.', '&', 'Essen', ',', 'D.', 'C.', 'V.', 'Distributed', 'hierarchical', 'processing', 'in', 'the', 'primate', 'cerebral', 'cortex', '.'] 

 UPOS tags are: 
>> [('44', 'NUM'), ('.', 'PUNCT'), ('Felleman', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('J.', 'PROPN'), ('&', 'CCONJ'), ('Essen', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('C.', 'PROPN'), ('V.', 'PROPN'), ('Distributed', 'VERB'), ('hierarchical', 'ADJ'), ('processing', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('primate', 'NOUN'), ('cerebral', 'ADJ'), ('cortex', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('44', 'LS'), ('.', '.'), ('Felleman', 'NNP'), (',', ','), ('D.', 'NNP'), ('J.', 'NNP'), ('&', 'CC'), ('Essen', 'NNP'), (',', ','), ('D.', 'NNP'), ('C.', 'NNP'), ('V.', 'NNP'), ('Distributed', 'VBN'), ('hierarchical', 'JJ'), ('processing', 'NN'), ('in', 'IN'), ('the', 'DT'), ('primate', 'NN'), ('cerebral', 'JJ'), ('cortex', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('44', '44'), ('.', '.'), ('Felleman', 'Felleman'), (',', ','), ('D.', 'D.'), ('J.', 'J.'), ('&', '&'), ('Essen', 'Essen'), (',', ','), ('D.', 'D.'), ('C.', 'C.'), ('V.', 'V.'), ('Distributed', 'distribute'), ('hierarchical', 'hierarchical'), ('processing', 'processing'), ('in', 'in'), ('the', 'the'), ('primate', 'primate'), ('cerebral', 'cerebral'), ('cortex', 'cortex'), ('.', '.')] 

 Dependency tags are: 
>> [(('44', 'Felleman'), 'nummod'), (('.', '44'), 'punct'), (('Felleman', 'root'), 'root'), ((',', 'D.'), 'punct'), (('D.', 'Felleman'), 'flat'), (('J.', 'Felleman'), 'flat'), (('&', 'Essen'), 'cc'), (('Essen', 'Felleman'), 'conj'), ((',', 'Felleman'), 'punct'), (('D.', 'Felleman'), 'list'), (('C.', 'D.'), 'flat'), (('V.', 'D.'), 'flat'), (('Distributed', 'Felleman'), 'list'), (('hierarchical', 'processing'), 'amod'), (('processing', 'Distributed'), 'obj'), (('in', 'cortex'), 'case'), (('the', 'cortex'), 'det'), (('primate', 'cortex'), 'compound'), (('cerebral', 'cortex'), 'amod'), (('cortex', 'processing'), 'nmod'), (('.', 'Felleman'), 'punct')]

 Named Entites are: 
>> [('44', 'CARDINAL'), ('D. J. & Essen', 'ORG'), ('D.', 'NORP')]

------------------- Sentence 2 -------------------

 Cereb. Cortex 1, 1–47 (1991). 

Tokens are: 
>> ['Cereb', '.', 'Cortex', '1', ',', '1–47', '(', '1991', ')', '.'] 

 UPOS tags are: 
>> [('Cereb', 'PROPN'), ('.', 'PUNCT'), ('Cortex', 'PROPN'), ('1', 'NUM'), (',', 'PUNCT'), ('1–47', 'NUM'), ('(', 'PUNCT'), ('1991', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Cereb', 'NNP'), ('.', '.'), ('Cortex', 'NNP'), ('1', 'CD'), (',', ','), ('1–47', 'CD'), ('(', '-LRB-'), ('1991', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Cereb', 'Cereb'), ('.', '.'), ('Cortex', 'Cortex'), ('1', '1'), (',', ','), ('1–47', '1–47'), ('(', '('), ('1991', '1991'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Cereb', 'root'), 'root'), (('.', 'Cereb'), 'punct'), (('Cortex', 'Cereb'), 'appos'), (('1', 'Cortex'), 'dep'), ((',', '1–47'), 'punct'), (('1–47', 'Cortex'), 'list'), (('(', '1991'), 'punct'), (('1991', '1–47'), 'nmod:tmod'), ((')', '1991'), 'punct'), (('.', 'Cereb'), 'punct')]

 Named Entites are: 
>> [('Cereb. Cortex 1', 'ORG'), ('1–47 (1991', 'DATE')]

================================ Paragraph 296 =================================

45. Cadieu, C. F. et al. Deep neural networks rival the representation of primate  it cortex for core visual object recognition. PLoS Comp. Biol. 10, e1003963  (2014).  


------------------- Sentence 1 -------------------

 45. Cadieu, C. F. et al. 

Tokens are: 
>> ['45', '.', 'Cadieu', ',', 'C.', 'F.', 'et', 'al.'] 

 UPOS tags are: 
>> [('45', 'NUM'), ('.', 'PUNCT'), ('Cadieu', 'PROPN'), (',', 'PUNCT'), ('C.', 'X'), ('F.', 'X'), ('et', 'X'), ('al.', 'X')] 

 XPOS tags are: 
>> [('45', 'LS'), ('.', '.'), ('Cadieu', 'NNP'), (',', ','), ('C.', 'FW'), ('F.', 'FW'), ('et', 'FW'), ('al.', 'FW')] 

 Lemmas are: 
>> [('45', '45'), ('.', '.'), ('Cadieu', 'Cadieu'), (',', ','), ('C.', 'C.'), ('F.', 'F.'), ('et', 'et'), ('al.', 'al.')] 

 Dependency tags are: 
>> [(('45', 'Cadieu'), 'nummod'), (('.', '45'), 'punct'), (('Cadieu', 'root'), 'root'), ((',', 'Cadieu'), 'punct'), (('C.', 'F.'), 'compound'), (('F.', 'Cadieu'), 'conj'), (('et', 'al.'), 'cc'), (('al.', 'Cadieu'), 'conj')]

 Named Entites are: 
>> [('45', 'CARDINAL'), ('Cadieu', 'PERSON')]

------------------- Sentence 2 -------------------

 Deep neural networks rival the representation of primate  it cortex for core visual object recognition. 

Tokens are: 
>> ['Deep', 'neural', 'networks', 'rival', 'the', 'representation', 'of', 'primate', 'it', 'cortex', 'for', 'core', 'visual', 'object', 'recognition', '.'] 

 UPOS tags are: 
>> [('Deep', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('rival', 'VERB'), ('the', 'DET'), ('representation', 'NOUN'), ('of', 'ADP'), ('primate', 'NOUN'), ('it', 'PRON'), ('cortex', 'NOUN'), ('for', 'ADP'), ('core', 'ADJ'), ('visual', 'ADJ'), ('object', 'NOUN'), ('recognition', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Deep', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), ('rival', 'VBP'), ('the', 'DT'), ('representation', 'NN'), ('of', 'IN'), ('primate', 'NN'), ('it', 'PRP'), ('cortex', 'NN'), ('for', 'IN'), ('core', 'JJ'), ('visual', 'JJ'), ('object', 'NN'), ('recognition', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Deep', 'deep'), ('neural', 'neural'), ('networks', 'network'), ('rival', 'rival'), ('the', 'the'), ('representation', 'representation'), ('of', 'of'), ('primate', 'primate'), ('it', 'it'), ('cortex', 'cortex'), ('for', 'for'), ('core', 'core'), ('visual', 'visual'), ('object', 'object'), ('recognition', 'recognition'), ('.', '.')] 

 Dependency tags are: 
>> [(('Deep', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'rival'), 'nsubj'), (('rival', 'root'), 'root'), (('the', 'representation'), 'det'), (('representation', 'rival'), 'obj'), (('of', 'primate'), 'case'), (('primate', 'representation'), 'nmod'), (('it', 'cortex'), 'nsubj'), (('cortex', 'representation'), 'acl:relcl'), (('for', 'recognition'), 'case'), (('core', 'recognition'), 'amod'), (('visual', 'recognition'), 'amod'), (('object', 'recognition'), 'compound'), (('recognition', 'cortex'), 'obl'), (('.', 'rival'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 PLoS Comp. Biol. 10, e1003963  (2014). 

Tokens are: 
>> ['PLoS', 'Comp.', 'Biol.', '10', ',', 'e1003963', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('PLoS', 'PROPN'), ('Comp.', 'PROPN'), ('Biol.', 'PROPN'), ('10', 'NUM'), (',', 'PUNCT'), ('e1003963', 'NUM'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('PLoS', 'NNP'), ('Comp.', 'NNP'), ('Biol.', 'NNP'), ('10', 'CD'), (',', ','), ('e1003963', 'CD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('PLoS', 'PLoS'), ('Comp.', 'Comp.'), ('Biol.', 'Biol.'), ('10', '10'), (',', ','), ('e1003963', 'e1003963'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('PLoS', 'root'), 'root'), (('Comp.', 'PLoS'), 'flat'), (('Biol.', 'PLoS'), 'list'), (('10', 'PLoS'), 'dep'), ((',', 'e1003963'), 'punct'), (('e1003963', '10'), 'nmod:tmod'), (('(', '2014'), 'punct'), (('2014', 'e1003963'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'PLoS'), 'punct')]

 Named Entites are: 
>> [('10', 'CARDINAL'), ('e1003963', 'CARDINAL'), ('2014', 'DATE')]

================================ Paragraph 297 =================================

46. Fukushima, K. & Miyake, S. Neocognitron: a new algorithm for pattern  recognition tolerant of deformations and shifts in position. Pattern Recognition  15, 455–469 (1982).  


------------------- Sentence 1 -------------------

 46. Fukushima, K. & Miyake, S. Neocognitron: a new algorithm for pattern  recognition tolerant of deformations and shifts in position. 

Tokens are: 
>> ['46', '.', 'Fukushima', ',', 'K.', '&', 'Miyake', ',', 'S.', 'Neocognitron', ':', 'a', 'new', 'algorithm', 'for', 'pattern', 'recognition', 'tolerant', 'of', 'deformations', 'and', 'shifts', 'in', 'position', '.'] 

 UPOS tags are: 
>> [('46', 'NUM'), ('.', 'PUNCT'), ('Fukushima', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), ('&', 'CCONJ'), ('Miyake', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('Neocognitron', 'PROPN'), (':', 'PUNCT'), ('a', 'DET'), ('new', 'ADJ'), ('algorithm', 'NOUN'), ('for', 'ADP'), ('pattern', 'NOUN'), ('recognition', 'NOUN'), ('tolerant', 'ADJ'), ('of', 'ADP'), ('deformations', 'NOUN'), ('and', 'CCONJ'), ('shifts', 'NOUN'), ('in', 'ADP'), ('position', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('46', 'LS'), ('.', '.'), ('Fukushima', 'NNP'), (',', ','), ('K.', 'NNP'), ('&', 'CC'), ('Miyake', 'NNP'), (',', ','), ('S.', 'NNP'), ('Neocognitron', 'NNP'), (':', ':'), ('a', 'DT'), ('new', 'JJ'), ('algorithm', 'NN'), ('for', 'IN'), ('pattern', 'NN'), ('recognition', 'NN'), ('tolerant', 'JJ'), ('of', 'IN'), ('deformations', 'NNS'), ('and', 'CC'), ('shifts', 'NNS'), ('in', 'IN'), ('position', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('46', '46'), ('.', '.'), ('Fukushima', 'Fukushima'), (',', ','), ('K.', 'K.'), ('&', '&'), ('Miyake', 'Miyake'), (',', ','), ('S.', 'S.'), ('Neocognitron', 'Neocognitron'), (':', ':'), ('a', 'a'), ('new', 'new'), ('algorithm', 'algorithm'), ('for', 'for'), ('pattern', 'pattern'), ('recognition', 'recognition'), ('tolerant', 'tolerant'), ('of', 'of'), ('deformations', 'deformation'), ('and', 'and'), ('shifts', 'shift'), ('in', 'in'), ('position', 'position'), ('.', '.')] 

 Dependency tags are: 
>> [(('46', 'Fukushima'), 'nummod'), (('.', '46'), 'punct'), (('Fukushima', 'root'), 'root'), ((',', 'K.'), 'punct'), (('K.', 'Fukushima'), 'conj'), (('&', 'Miyake'), 'cc'), (('Miyake', 'Fukushima'), 'conj'), ((',', 'Fukushima'), 'punct'), (('S.', 'Fukushima'), 'list'), (('Neocognitron', 'S.'), 'flat'), ((':', 'Fukushima'), 'punct'), (('a', 'algorithm'), 'det'), (('new', 'algorithm'), 'amod'), (('algorithm', 'Fukushima'), 'appos'), (('for', 'recognition'), 'case'), (('pattern', 'recognition'), 'compound'), (('recognition', 'algorithm'), 'nmod'), (('tolerant', 'recognition'), 'amod'), (('of', 'deformations'), 'case'), (('deformations', 'tolerant'), 'obl'), (('and', 'shifts'), 'cc'), (('shifts', 'deformations'), 'conj'), (('in', 'position'), 'case'), (('position', 'deformations'), 'nmod'), (('.', 'Fukushima'), 'punct')]

 Named Entites are: 
>> [('46', 'CARDINAL'), ('Fukushima', 'GPE'), ('K. & Miyake', 'WORK_OF_ART'), ('S. Neocognitron', 'GPE')]

------------------- Sentence 2 -------------------

 Pattern Recognition  15, 455–469 (1982). 

Tokens are: 
>> ['Pattern', 'Recognition', '15', ',', '455–469', '(', '1982', ')', '.'] 

 UPOS tags are: 
>> [('Pattern', 'NOUN'), ('Recognition', 'PROPN'), ('15', 'NUM'), (',', 'PUNCT'), ('455–469', 'NUM'), ('(', 'PUNCT'), ('1982', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Pattern', 'NN'), ('Recognition', 'NNP'), ('15', 'CD'), (',', ','), ('455–469', 'CD'), ('(', '-LRB-'), ('1982', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Pattern', 'pattern'), ('Recognition', 'recognition'), ('15', '15'), (',', ','), ('455–469', '455–469'), ('(', '('), ('1982', '1982'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Pattern', 'root'), 'root'), (('Recognition', 'Pattern'), 'dep'), (('15', 'Pattern'), 'dep'), ((',', '455–469'), 'punct'), (('455–469', 'Pattern'), 'appos'), (('(', '1982'), 'punct'), (('1982', '455–469'), 'nmod:tmod'), ((')', '1982'), 'punct'), (('.', 'Pattern'), 'punct')]

 Named Entites are: 
>> [('15', 'CARDINAL'), ('455–469', 'CARDINAL'), ('1982', 'DATE')]

================================ Paragraph 298 =================================

47. Waibel, A., Hanazawa, T., Hinton, G. E., Shikano, K. & Lang, K. Phoneme  recognition using time-delay neural networks. IEEE Trans. Acoustics Speech  Signal Process. 37, 328–339 (1989).  


------------------- Sentence 1 -------------------

 47. Waibel, A., Hanazawa, T., Hinton, G. E., Shikano, K. & Lang, K. Phoneme  recognition using time-delay neural networks. 

Tokens are: 
>> ['47', '.', 'Waibel', ',', 'A.', ',', 'Hanazawa', ',', 'T.', ',', 'Hinton', ',', 'G.', 'E.', ',', 'Shikano', ',', 'K.', '&', 'Lang', ',', 'K.', 'Phoneme', 'recognition', 'using', 'time', '-', 'delay', 'neural', 'networks', '.'] 

 UPOS tags are: 
>> [('47', 'NUM'), ('.', 'PUNCT'), ('Waibel', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), (',', 'PUNCT'), ('Hanazawa', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), (',', 'PUNCT'), ('Hinton', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('E.', 'PROPN'), (',', 'PUNCT'), ('Shikano', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), ('&', 'CCONJ'), ('Lang', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), ('Phoneme', 'PROPN'), ('recognition', 'NOUN'), ('using', 'VERB'), ('time', 'NOUN'), ('-', 'PUNCT'), ('delay', 'VERB'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('47', 'LS'), ('.', '.'), ('Waibel', 'NNP'), (',', ','), ('A.', 'NNP'), (',', ','), ('Hanazawa', 'NNP'), (',', ','), ('T.', 'NNP'), (',', ','), ('Hinton', 'NNP'), (',', ','), ('G.', 'NNP'), ('E.', 'NNP'), (',', ','), ('Shikano', 'NNP'), (',', ','), ('K.', 'NNP'), ('&', 'CC'), ('Lang', 'NNP'), (',', ','), ('K.', 'NNP'), ('Phoneme', 'NNP'), ('recognition', 'NN'), ('using', 'VBG'), ('time', 'NN'), ('-', 'HYPH'), ('delay', 'VB'), ('neural', 'JJ'), ('networks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('47', '47'), ('.', '.'), ('Waibel', 'Waibel'), (',', ','), ('A.', 'A.'), (',', ','), ('Hanazawa', 'Hanazawa'), (',', ','), ('T.', 'T.'), (',', ','), ('Hinton', 'Hinton'), (',', ','), ('G.', 'G.'), ('E.', 'E.'), (',', ','), ('Shikano', 'Shikano'), (',', ','), ('K.', 'K.'), ('&', '&'), ('Lang', 'Lang'), (',', ','), ('K.', 'K.'), ('Phoneme', 'Phoneme'), ('recognition', 'recognition'), ('using', 'use'), ('time', 'time'), ('-', '-'), ('delay', 'delay'), ('neural', 'neural'), ('networks', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('47', 'Waibel'), 'nummod'), (('.', '47'), 'punct'), (('Waibel', 'root'), 'root'), ((',', 'A.'), 'punct'), (('A.', 'Waibel'), 'conj'), ((',', 'Hanazawa'), 'punct'), (('Hanazawa', 'Waibel'), 'conj'), ((',', 'T.'), 'punct'), (('T.', 'Waibel'), 'conj'), ((',', 'Hinton'), 'punct'), (('Hinton', 'Waibel'), 'conj'), ((',', 'G.'), 'punct'), (('G.', 'Waibel'), 'conj'), (('E.', 'G.'), 'flat'), ((',', 'Shikano'), 'punct'), (('Shikano', 'Waibel'), 'conj'), ((',', 'K.'), 'punct'), (('K.', 'Waibel'), 'conj'), (('&', 'Lang'), 'cc'), (('Lang', 'K.'), 'conj'), ((',', 'recognition'), 'punct'), (('K.', 'recognition'), 'compound'), (('Phoneme', 'recognition'), 'compound'), (('recognition', 'Waibel'), 'conj'), (('using', 'recognition'), 'acl'), (('time', 'delay'), 'compound'), (('-', 'delay'), 'punct'), (('delay', 'using'), 'xcomp'), (('neural', 'networks'), 'amod'), (('networks', 'using'), 'obj'), (('.', 'recognition'), 'punct')]

 Named Entites are: 
>> [('47. Waibel, A.', 'ORG'), ('Hanazawa', 'GPE'), ('T.', 'NORP'), ('Hinton', 'GPE'), ('G. E.', 'GPE'), ('Shikano, K. & Lang', 'ORG'), ('K. Phoneme', 'ORG')]

------------------- Sentence 2 -------------------

 IEEE Trans. 

Tokens are: 
>> ['IEEE', 'Trans', '.'] 

 UPOS tags are: 
>> [('IEEE', 'PROPN'), ('Trans', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IEEE', 'NNP'), ('Trans', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('IEEE', 'IEEE'), ('Trans', 'Trans'), ('.', '.')] 

 Dependency tags are: 
>> [(('IEEE', 'Trans'), 'compound'), (('Trans', 'root'), 'root'), (('.', 'Trans'), 'punct')]

 Named Entites are: 
>> [('IEEE Trans', 'ORG')]

------------------- Sentence 3 -------------------

 Acoustics Speech  Signal Process. 37, 328–339 (1989). 

Tokens are: 
>> ['Acoustics', 'Speech', 'Signal', 'Process.', '37', ',', '328–339', '(', '1989', ')', '.'] 

 UPOS tags are: 
>> [('Acoustics', 'NOUN'), ('Speech', 'PROPN'), ('Signal', 'PROPN'), ('Process.', 'PROPN'), ('37', 'NUM'), (',', 'PUNCT'), ('328–339', 'NUM'), ('(', 'PUNCT'), ('1989', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Acoustics', 'NNS'), ('Speech', 'NNP'), ('Signal', 'NNP'), ('Process.', 'NNP'), ('37', 'CD'), (',', ','), ('328–339', 'CD'), ('(', '-LRB-'), ('1989', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Acoustics', 'acoustic'), ('Speech', 'Speech'), ('Signal', 'Signal'), ('Process.', 'Process.'), ('37', '37'), (',', ','), ('328–339', '328–339'), ('(', '('), ('1989', '1989'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Acoustics', 'root'), 'root'), (('Speech', 'Signal'), 'compound'), (('Signal', 'Acoustics'), 'appos'), (('Process.', 'Signal'), 'flat'), (('37', 'Process.'), 'nummod'), ((',', '328–339'), 'punct'), (('328–339', 'Process.'), 'nummod'), (('(', '1989'), 'punct'), (('1989', '328–339'), 'nmod:tmod'), ((')', '1989'), 'punct'), (('.', 'Acoustics'), 'punct')]

 Named Entites are: 
>> [('37', 'CARDINAL'), ('328–339', 'CARDINAL'), ('1989', 'DATE')]

================================ Paragraph 299 =================================

48. Bottou, L., Fogelman-Soulié, F., Blanchet, P. & Lienard, J. Experiments with time  delay networks and dynamic time warping for speaker independent isolated  digit recognition. In Proc. EuroSpeech 89 537–540 (1989).  


------------------- Sentence 1 -------------------

 48. Bottou, L., Fogelman-Soulié, F., Blanchet, P. & Lienard, J. Experiments with time  delay networks and dynamic time warping for speaker independent isolated  digit recognition. 

Tokens are: 
>> ['48', '.', 'Bottou', ',', 'L.', ',', 'Fogelman', '-', 'Soulié', ',', 'F.', ',', 'Blanchet', ',', 'P.', '&', 'Lienard', ',', 'J.', 'Experiments', 'with', 'time', 'delay', 'networks', 'and', 'dynamic', 'time', 'warping', 'for', 'speaker', 'independent', 'isolated', 'digit', 'recognition', '.'] 

 UPOS tags are: 
>> [('48', 'NUM'), ('.', 'PUNCT'), ('Bottou', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), (',', 'PUNCT'), ('Fogelman', 'PROPN'), ('-', 'PUNCT'), ('Soulié', 'PROPN'), (',', 'PUNCT'), ('F.', 'PROPN'), (',', 'PUNCT'), ('Blanchet', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('&', 'CCONJ'), ('Lienard', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('Experiments', 'PROPN'), ('with', 'ADP'), ('time', 'NOUN'), ('delay', 'NOUN'), ('networks', 'NOUN'), ('and', 'CCONJ'), ('dynamic', 'ADJ'), ('time', 'NOUN'), ('warping', 'NOUN'), ('for', 'ADP'), ('speaker', 'NOUN'), ('independent', 'ADJ'), ('isolated', 'VERB'), ('digit', 'NOUN'), ('recognition', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('48', 'LS'), ('.', '.'), ('Bottou', 'NNP'), (',', ','), ('L.', 'NNP'), (',', ','), ('Fogelman', 'NNP'), ('-', ','), ('Soulié', 'NNP'), (',', ','), ('F.', 'NNP'), (',', ','), ('Blanchet', 'NNP'), (',', ','), ('P.', 'NNP'), ('&', 'CC'), ('Lienard', 'NNP'), (',', ','), ('J.', 'NNP'), ('Experiments', 'NNPS'), ('with', 'IN'), ('time', 'NN'), ('delay', 'NN'), ('networks', 'NNS'), ('and', 'CC'), ('dynamic', 'JJ'), ('time', 'NN'), ('warping', 'NN'), ('for', 'IN'), ('speaker', 'NN'), ('independent', 'JJ'), ('isolated', 'VBN'), ('digit', 'NN'), ('recognition', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('48', '48'), ('.', '.'), ('Bottou', 'Bottou'), (',', ','), ('L.', 'L.'), (',', ','), ('Fogelman', 'Fogelman'), ('-', '-'), ('Soulié', 'Soulié'), (',', ','), ('F.', 'F.'), (',', ','), ('Blanchet', 'Blanchet'), (',', ','), ('P.', 'P.'), ('&', '&'), ('Lienard', 'Lienard'), (',', ','), ('J.', 'J.'), ('Experiments', 'Experiments'), ('with', 'with'), ('time', 'time'), ('delay', 'delay'), ('networks', 'network'), ('and', 'and'), ('dynamic', 'dynamic'), ('time', 'time'), ('warping', 'warping'), ('for', 'for'), ('speaker', 'speaker'), ('independent', 'independent'), ('isolated', 'isolate'), ('digit', 'digit'), ('recognition', 'recognition'), ('.', '.')] 

 Dependency tags are: 
>> [(('48', 'Bottou'), 'nummod'), (('.', '48'), 'punct'), (('Bottou', 'root'), 'root'), ((',', 'L.'), 'punct'), (('L.', 'Bottou'), 'conj'), ((',', 'Fogelman'), 'punct'), (('Fogelman', 'Bottou'), 'conj'), (('-', 'Bottou'), 'punct'), (('Soulié', 'Bottou'), 'conj'), ((',', 'F.'), 'punct'), (('F.', 'Soulié'), 'conj'), ((',', 'Blanchet'), 'punct'), (('Blanchet', 'Soulié'), 'conj'), ((',', 'P.'), 'punct'), (('P.', 'Soulié'), 'conj'), (('&', 'Lienard'), 'cc'), (('Lienard', 'Soulié'), 'conj'), ((',', 'Experiments'), 'punct'), (('J.', 'Experiments'), 'compound'), (('Experiments', 'Bottou'), 'conj'), (('with', 'networks'), 'case'), (('time', 'networks'), 'compound'), (('delay', 'networks'), 'compound'), (('networks', 'Experiments'), 'nmod'), (('and', 'warping'), 'cc'), (('dynamic', 'warping'), 'amod'), (('time', 'warping'), 'compound'), (('warping', 'Bottou'), 'conj'), (('for', 'recognition'), 'case'), (('speaker', 'recognition'), 'compound'), (('independent', 'recognition'), 'amod'), (('isolated', 'recognition'), 'amod'), (('digit', 'recognition'), 'compound'), (('recognition', 'warping'), 'nmod'), (('.', 'Bottou'), 'punct')]

 Named Entites are: 
>> [('48', 'CARDINAL'), ('Bottou, L., Fogelman-Soulié, F.', 'ORG'), ('Blanchet', 'GPE'), ('P. & Lienard', 'ORG'), ('J. Experiments', 'ORG')]

------------------- Sentence 2 -------------------

 In Proc. EuroSpeech 89 537–540 (1989). 

Tokens are: 
>> ['In', 'Proc.', 'EuroSpeech', '89', '537–540', '(', '1989', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('EuroSpeech', 'PROPN'), ('89', 'NUM'), ('537–540', 'NUM'), ('(', 'PUNCT'), ('1989', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('EuroSpeech', 'NNP'), ('89', 'CD'), ('537–540', 'CD'), ('(', '-LRB-'), ('1989', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('EuroSpeech', 'EuroSpeech'), ('89', '89'), ('537–540', '537–540'), ('(', '('), ('1989', '1989'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Proc.'), 'case'), (('Proc.', 'EuroSpeech'), 'compound'), (('EuroSpeech', 'root'), 'root'), (('89', 'EuroSpeech'), 'nummod'), (('537–540', 'EuroSpeech'), 'nummod'), (('(', '1989'), 'punct'), (('1989', 'EuroSpeech'), 'nmod:tmod'), ((')', '1989'), 'punct'), (('.', 'EuroSpeech'), 'punct')]

 Named Entites are: 
>> [('Proc. EuroSpeech 89', 'LAW'), ('537–540', 'CARDINAL'), ('1989', 'DATE')]

================================ Paragraph 300 =================================

49. Simard, D., Steinkraus, P. Y. & Platt, J. C. Best practices for convolutional neural  networks. In Proc. Document Analysis and Recognition 958–963 (2003).  


------------------- Sentence 1 -------------------

 49. Simard, D., Steinkraus, P. Y. & Platt, J. C. Best practices for convolutional neural  networks. 

Tokens are: 
>> ['49', '.', 'Simard', ',', 'D.', ',', 'Steinkraus', ',', 'P.', 'Y.', '&', 'Platt', ',', 'J.', 'C.', 'Best', 'practices', 'for', 'convolutional', 'neural', 'networks', '.'] 

 UPOS tags are: 
>> [('49', 'NUM'), ('.', 'PUNCT'), ('Simard', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), (',', 'PUNCT'), ('Steinkraus', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('Y.', 'PROPN'), ('&', 'CCONJ'), ('Platt', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('C.', 'PROPN'), ('Best', 'ADJ'), ('practices', 'NOUN'), ('for', 'ADP'), ('convolutional', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('49', 'LS'), ('.', '.'), ('Simard', 'NNP'), (',', ','), ('D.', 'NNP'), (',', ','), ('Steinkraus', 'NNP'), (',', ','), ('P.', 'NNP'), ('Y.', 'NNP'), ('&', 'CC'), ('Platt', 'NNP'), (',', ','), ('J.', 'NNP'), ('C.', 'NNP'), ('Best', 'JJS'), ('practices', 'NNS'), ('for', 'IN'), ('convolutional', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('49', '49'), ('.', '.'), ('Simard', 'Simard'), (',', ','), ('D.', 'D.'), (',', ','), ('Steinkraus', 'Steinkraus'), (',', ','), ('P.', 'P.'), ('Y.', 'Y.'), ('&', '&'), ('Platt', 'Platt'), (',', ','), ('J.', 'J.'), ('C.', 'C.'), ('Best', 'good'), ('practices', 'practice'), ('for', 'for'), ('convolutional', 'convolutional'), ('neural', 'neural'), ('networks', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('49', 'Simard'), 'nummod'), (('.', '49'), 'punct'), (('Simard', 'root'), 'root'), ((',', 'D.'), 'punct'), (('D.', 'Simard'), 'flat'), ((',', 'Steinkraus'), 'punct'), (('Steinkraus', 'Simard'), 'conj'), ((',', 'P.'), 'punct'), (('P.', 'Simard'), 'conj'), (('Y.', 'P.'), 'flat'), (('&', 'Platt'), 'cc'), (('Platt', 'Simard'), 'conj'), ((',', 'Simard'), 'punct'), (('J.', 'Simard'), 'list'), (('C.', 'J.'), 'flat'), (('Best', 'practices'), 'amod'), (('practices', 'Simard'), 'list'), (('for', 'networks'), 'case'), (('convolutional', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'practices'), 'nmod'), (('.', 'Simard'), 'punct')]

 Named Entites are: 
>> [('49', 'CARDINAL'), ('Simard, D., Steinkraus', 'ORG'), ('P. Y. & Platt', 'ORG'), ('J. C.', 'ORG')]

------------------- Sentence 2 -------------------

 In Proc. Document Analysis and Recognition 958–963 (2003). 

Tokens are: 
>> ['In', 'Proc.', 'Document', 'Analysis', 'and', 'Recognition', '958–963', '(', '2003', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'NOUN'), ('Document', 'NOUN'), ('Analysis', 'NOUN'), ('and', 'CCONJ'), ('Recognition', 'NOUN'), ('958–963', 'NUM'), ('(', 'PUNCT'), ('2003', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NN'), ('Document', 'NN'), ('Analysis', 'NN'), ('and', 'CC'), ('Recognition', 'NN'), ('958–963', 'CD'), ('(', '-LRB-'), ('2003', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'proc.'), ('Document', 'document'), ('Analysis', 'analysis'), ('and', 'and'), ('Recognition', 'recognition'), ('958–963', '958–963'), ('(', '('), ('2003', '2003'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Analysis'), 'case'), (('Proc.', 'Analysis'), 'compound'), (('Document', 'Analysis'), 'compound'), (('Analysis', 'root'), 'root'), (('and', 'Recognition'), 'cc'), (('Recognition', 'Analysis'), 'conj'), (('958–963', 'Recognition'), 'nummod'), (('(', '2003'), 'punct'), (('2003', 'Analysis'), 'nmod:tmod'), ((')', '2003'), 'punct'), (('.', 'Analysis'), 'punct')]

 Named Entites are: 
>> [('Proc. Document Analysis and Recognition 958–963', 'WORK_OF_ART'), ('2003', 'DATE')]

================================ Paragraph 301 =================================

50. Vaillant, R., Monrocq, C. & LeCun, Y. Original approach for the localisation of  objects in images. In Proc. Vision, Image, and Signal Processing 141, 245–250  (1994).  


------------------- Sentence 1 -------------------

 50. Vaillant, R., Monrocq, C. & LeCun, Y. Original approach for the localisation of  objects in images. 

Tokens are: 
>> ['50', '.', 'Vaillant', ',', 'R.', ',', 'Monrocq', ',', 'C.', '&', 'LeCun', ',', 'Y.', 'Original', 'approach', 'for', 'the', 'localisation', 'of', 'objects', 'in', 'images', '.'] 

 UPOS tags are: 
>> [('50', 'NUM'), ('.', 'PUNCT'), ('Vaillant', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), (',', 'PUNCT'), ('Monrocq', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), ('&', 'CCONJ'), ('LeCun', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('Original', 'ADJ'), ('approach', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('localisation', 'NOUN'), ('of', 'ADP'), ('objects', 'NOUN'), ('in', 'ADP'), ('images', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('50', 'LS'), ('.', '.'), ('Vaillant', 'NNP'), (',', ','), ('R.', 'NNP'), (',', ','), ('Monrocq', 'NNP'), (',', ','), ('C.', 'NNP'), ('&', 'CC'), ('LeCun', 'NNP'), (',', ','), ('Y.', 'NNP'), ('Original', 'JJ'), ('approach', 'NN'), ('for', 'IN'), ('the', 'DT'), ('localisation', 'NN'), ('of', 'IN'), ('objects', 'NNS'), ('in', 'IN'), ('images', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('50', '50'), ('.', '.'), ('Vaillant', 'Vaillant'), (',', ','), ('R.', 'R.'), (',', ','), ('Monrocq', 'Monrocq'), (',', ','), ('C.', 'C.'), ('&', '&'), ('LeCun', 'LeCun'), (',', ','), ('Y.', 'Y.'), ('Original', 'original'), ('approach', 'approach'), ('for', 'for'), ('the', 'the'), ('localisation', 'localisation'), ('of', 'of'), ('objects', 'object'), ('in', 'in'), ('images', 'image'), ('.', '.')] 

 Dependency tags are: 
>> [(('50', 'Vaillant'), 'nummod'), (('.', '50'), 'punct'), (('Vaillant', 'root'), 'root'), ((',', 'R.'), 'punct'), (('R.', 'Vaillant'), 'conj'), ((',', 'Monrocq'), 'punct'), (('Monrocq', 'Vaillant'), 'conj'), ((',', 'C.'), 'punct'), (('C.', 'Vaillant'), 'conj'), (('&', 'LeCun'), 'cc'), (('LeCun', 'C.'), 'conj'), ((',', 'Vaillant'), 'punct'), (('Y.', 'approach'), 'compound'), (('Original', 'approach'), 'amod'), (('approach', 'Vaillant'), 'appos'), (('for', 'localisation'), 'case'), (('the', 'localisation'), 'det'), (('localisation', 'approach'), 'nmod'), (('of', 'objects'), 'case'), (('objects', 'localisation'), 'nmod'), (('in', 'images'), 'case'), (('images', 'objects'), 'nmod'), (('.', 'Vaillant'), 'punct')]

 Named Entites are: 
>> [('50', 'CARDINAL'), ('R.', 'NORP'), ('Monrocq', 'GPE')]

------------------- Sentence 2 -------------------

 In Proc. Vision, Image, and Signal Processing 141, 245–250  (1994). 

Tokens are: 
>> ['In', 'Proc.', 'Vision', ',', 'Image', ',', 'and', 'Signal', 'Processing', '141', ',', '245–250', '(', '1994', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('Vision', 'PROPN'), (',', 'PUNCT'), ('Image', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('Signal', 'NOUN'), ('Processing', 'NOUN'), ('141', 'NUM'), (',', 'PUNCT'), ('245–250', 'NUM'), ('(', 'PUNCT'), ('1994', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('Vision', 'NNP'), (',', ','), ('Image', 'NN'), (',', ','), ('and', 'CC'), ('Signal', 'NN'), ('Processing', 'NN'), ('141', 'CD'), (',', ','), ('245–250', 'CD'), ('(', '-LRB-'), ('1994', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('Vision', 'Vision'), (',', ','), ('Image', 'image'), (',', ','), ('and', 'and'), ('Signal', 'signal'), ('Processing', 'processing'), ('141', '141'), (',', ','), ('245–250', '245–250'), ('(', '('), ('1994', '1994'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Vision'), 'case'), (('Proc.', 'Vision'), 'compound'), (('Vision', 'root'), 'root'), ((',', 'Image'), 'punct'), (('Image', 'Vision'), 'conj'), ((',', 'Signal'), 'punct'), (('and', 'Signal'), 'cc'), (('Signal', 'Vision'), 'conj'), (('Processing', 'Signal'), 'appos'), (('141', 'Processing'), 'nummod'), ((',', '245–250'), 'punct'), (('245–250', 'Processing'), 'appos'), (('(', '1994'), 'punct'), (('1994', '245–250'), 'nmod:tmod'), ((')', '1994'), 'punct'), (('.', 'Vision'), 'punct')]

 Named Entites are: 
>> [('Proc. Vision', 'ORG'), ('Signal Processing 141', 'ORG'), ('245–250', 'CARDINAL'), ('1994', 'DATE')]

================================ Paragraph 302 =================================

51. Nowlan, S. & Platt, J. in Neural Information Processing Systems 901–908 (1995).  52. Lawrence, S., Giles, C. L., Tsoi, A. C. & Back, A. D. Face recognition: a  


------------------- Sentence 1 -------------------

 51. 

Tokens are: 
>> ['51', '.'] 

 UPOS tags are: 
>> [('51', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('51', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('51', '51'), ('.', '.')] 

 Dependency tags are: 
>> [(('51', 'root'), 'root'), (('.', '51'), 'punct')]

 Named Entites are: 
>> [('51', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Nowlan, S. & Platt, J. in Neural Information Processing Systems 901–908 (1995). 

Tokens are: 
>> ['Nowlan', ',', 'S.', '&', 'Platt', ',', 'J.', 'in', 'Neural', 'Information', 'Processing', 'Systems', '901–908', '(', '1995', ')', '.'] 

 UPOS tags are: 
>> [('Nowlan', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('&', 'CCONJ'), ('Platt', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('in', 'ADP'), ('Neural', 'ADJ'), ('Information', 'PROPN'), ('Processing', 'PROPN'), ('Systems', 'PROPN'), ('901–908', 'NUM'), ('(', 'PUNCT'), ('1995', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Nowlan', 'NNP'), (',', ','), ('S.', 'NNP'), ('&', 'CC'), ('Platt', 'NNP'), (',', ','), ('J.', 'NNP'), ('in', 'IN'), ('Neural', 'JJ'), ('Information', 'NNP'), ('Processing', 'NNP'), ('Systems', 'NNP'), ('901–908', 'CD'), ('(', '-LRB-'), ('1995', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Nowlan', 'Nowlan'), (',', ','), ('S.', 'S.'), ('&', '&'), ('Platt', 'Platt'), (',', ','), ('J.', 'J.'), ('in', 'in'), ('Neural', 'neural'), ('Information', 'Information'), ('Processing', 'processing'), ('Systems', 'System'), ('901–908', '901–908'), ('(', '('), ('1995', '1995'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Nowlan', 'root'), 'root'), ((',', 'S.'), 'punct'), (('S.', 'Nowlan'), 'flat'), (('&', 'Platt'), 'cc'), (('Platt', 'Nowlan'), 'conj'), ((',', 'Nowlan'), 'punct'), (('J.', 'Nowlan'), 'list'), (('in', 'Information'), 'case'), (('Neural', 'Information'), 'amod'), (('Information', 'Nowlan'), 'nmod'), (('Processing', 'Systems'), 'compound'), (('Systems', 'Nowlan'), 'list'), (('901–908', 'Systems'), 'nummod'), (('(', '1995'), 'punct'), (('1995', 'Systems'), 'nmod:tmod'), ((')', '1995'), 'punct'), (('.', 'Nowlan'), 'punct')]

 Named Entites are: 
>> [('Nowlan, S. & Platt', 'ORG'), ('J. in Neural Information Processing Systems', 'ORG'), ('901–908', 'CARDINAL'), ('1995', 'DATE')]

------------------- Sentence 3 -------------------

 52. 

Tokens are: 
>> ['52', '.'] 

 UPOS tags are: 
>> [('52', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('52', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('52', '52'), ('.', '.')] 

 Dependency tags are: 
>> [(('52', 'root'), 'root'), (('.', '52'), 'punct')]

 Named Entites are: 
>> [('52', 'CARDINAL')]

------------------- Sentence 4 -------------------

 Lawrence, S., Giles, C. L., Tsoi, A. C. & Back, A. D. Face recognition: a 

Tokens are: 
>> ['Lawrence', ',', 'S.', ',', 'Giles', ',', 'C.', 'L.', ',', 'Tsoi', ',', 'A.', 'C.', '&', 'Back', ',', 'A.', 'D.', 'Face', 'recognition', ':', 'a'] 

 UPOS tags are: 
>> [('Lawrence', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), (',', 'PUNCT'), ('Giles', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), ('L.', 'PROPN'), (',', 'PUNCT'), ('Tsoi', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('C.', 'PROPN'), ('&', 'CCONJ'), ('Back', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('D.', 'PROPN'), ('Face', 'PROPN'), ('recognition', 'NOUN'), (':', 'PUNCT'), ('a', 'SYM')] 

 XPOS tags are: 
>> [('Lawrence', 'NNP'), (',', ','), ('S.', 'NNP'), (',', ','), ('Giles', 'NNP'), (',', ','), ('C.', 'NNP'), ('L.', 'NNP'), (',', ','), ('Tsoi', 'NNP'), (',', ','), ('A.', 'NNP'), ('C.', 'NNP'), ('&', 'CC'), ('Back', 'NNP'), (',', ','), ('A.', 'NNP'), ('D.', 'NNP'), ('Face', 'NNP'), ('recognition', 'NN'), (':', ':'), ('a', 'SYM')] 

 Lemmas are: 
>> [('Lawrence', 'Lawrence'), (',', ','), ('S.', 'S.'), (',', ','), ('Giles', 'Giles'), (',', ','), ('C.', 'C.'), ('L.', 'L.'), (',', ','), ('Tsoi', 'Tsoi'), (',', ','), ('A.', 'A.'), ('C.', 'C.'), ('&', '&'), ('Back', 'Back'), (',', ','), ('A.', 'A.'), ('D.', 'D.'), ('Face', 'Face'), ('recognition', 'recognition'), (':', ':'), ('a', 'a')] 

 Dependency tags are: 
>> [(('Lawrence', 'root'), 'root'), ((',', 'S.'), 'punct'), (('S.', 'Lawrence'), 'flat'), ((',', 'Giles'), 'punct'), (('Giles', 'Lawrence'), 'conj'), ((',', 'C.'), 'punct'), (('C.', 'Lawrence'), 'conj'), (('L.', 'C.'), 'flat'), ((',', 'Tsoi'), 'punct'), (('Tsoi', 'Lawrence'), 'conj'), ((',', 'A.'), 'punct'), (('A.', 'Lawrence'), 'list'), (('C.', 'A.'), 'flat'), (('&', 'Back'), 'cc'), (('Back', 'A.'), 'conj'), ((',', 'A.'), 'punct'), (('A.', 'recognition'), 'compound'), (('D.', 'A.'), 'flat'), (('Face', 'recognition'), 'compound'), (('recognition', 'Lawrence'), 'list'), ((':', 'recognition'), 'punct'), (('a', 'recognition'), 'appos')]

 Named Entites are: 
>> [('Lawrence, S.', 'ORG'), ('Giles', 'PERSON'), ('C. L.', 'PERSON'), ('Tsoi', 'ORG')]

================================ Paragraph 303 =================================

convolutional neural-network approach. IEEE Trans. Neural Networks 8, 98–113  (1997).  


------------------- Sentence 1 -------------------

 convolutional neural-network approach. 

Tokens are: 
>> ['convolutional', 'neural-', 'network', 'approach', '.'] 

 UPOS tags are: 
>> [('convolutional', 'ADJ'), ('neural-', 'ADJ'), ('network', 'NOUN'), ('approach', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('convolutional', 'JJ'), ('neural-', 'JJ'), ('network', 'NN'), ('approach', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('convolutional', 'convolutional'), ('neural-', 'neural-'), ('network', 'network'), ('approach', 'approach'), ('.', '.')] 

 Dependency tags are: 
>> [(('convolutional', 'approach'), 'amod'), (('neural-', 'network'), 'amod'), (('network', 'approach'), 'compound'), (('approach', 'root'), 'root'), (('.', 'approach'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 IEEE Trans. 

Tokens are: 
>> ['IEEE', 'Trans', '.'] 

 UPOS tags are: 
>> [('IEEE', 'PROPN'), ('Trans', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IEEE', 'NNP'), ('Trans', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('IEEE', 'IEEE'), ('Trans', 'Trans'), ('.', '.')] 

 Dependency tags are: 
>> [(('IEEE', 'Trans'), 'compound'), (('Trans', 'root'), 'root'), (('.', 'Trans'), 'punct')]

 Named Entites are: 
>> [('IEEE Trans', 'ORG')]

------------------- Sentence 3 -------------------

 Neural Networks 8, 98–113  (1997). 

Tokens are: 
>> ['Neural', 'Networks', '8', ',', '98–113', '(', '1997', ')', '.'] 

 UPOS tags are: 
>> [('Neural', 'ADJ'), ('Networks', 'PROPN'), ('8', 'NUM'), (',', 'PUNCT'), ('98–113', 'NUM'), ('(', 'PUNCT'), ('1997', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Neural', 'JJ'), ('Networks', 'NNPS'), ('8', 'CD'), (',', ','), ('98–113', 'CD'), ('(', '-LRB-'), ('1997', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Neural', 'neural'), ('Networks', 'Network'), ('8', '8'), (',', ','), ('98–113', '98–113'), ('(', '('), ('1997', '1997'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Neural', 'Networks'), 'amod'), (('Networks', '8'), 'compound'), (('8', 'root'), 'root'), ((',', '98–113'), 'punct'), (('98–113', '8'), 'nmod:tmod'), (('(', '1997'), 'punct'), (('1997', '98–113'), 'nmod:tmod'), ((')', '1997'), 'punct'), (('.', '8'), 'punct')]

 Named Entites are: 
>> [('Neural Networks 8', 'ORG'), ('98–113', 'CARDINAL'), ('1997', 'DATE')]

================================ Paragraph 304 =================================

53. Ciresan, D., Meier, U. Masci, J. & Schmidhuber, J. Multi-column deep neural  network for traffic sign classification. Neural Networks 32, 333–338 (2012).  


------------------- Sentence 1 -------------------

 53. Ciresan, D., Meier, U. Masci, J. & Schmidhuber, J. Multi-column deep neural  network for traffic sign classification. 

Tokens are: 
>> ['53', '.', 'Ciresan', ',', 'D.', ',', 'Meier', ',', 'U.', 'Masci', ',', 'J.', '&', 'Schmidhuber', ',', 'J.', 'Multi-column', 'deep', 'neural', 'network', 'for', 'traffic', 'sign', 'classification', '.'] 

 UPOS tags are: 
>> [('53', 'NUM'), ('.', 'PUNCT'), ('Ciresan', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), (',', 'PUNCT'), ('Meier', 'PROPN'), (',', 'PUNCT'), ('U.', 'PROPN'), ('Masci', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('&', 'CCONJ'), ('Schmidhuber', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('Multi-column', 'ADJ'), ('deep', 'ADJ'), ('neural', 'ADJ'), ('network', 'NOUN'), ('for', 'ADP'), ('traffic', 'NOUN'), ('sign', 'NOUN'), ('classification', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('53', 'LS'), ('.', '.'), ('Ciresan', 'NNP'), (',', ','), ('D.', 'NNP'), (',', ','), ('Meier', 'NNP'), (',', ','), ('U.', 'NNP'), ('Masci', 'NNP'), (',', ','), ('J.', 'NNP'), ('&', 'CC'), ('Schmidhuber', 'NNP'), (',', ','), ('J.', 'NNP'), ('Multi-column', 'JJ'), ('deep', 'JJ'), ('neural', 'JJ'), ('network', 'NN'), ('for', 'IN'), ('traffic', 'NN'), ('sign', 'NN'), ('classification', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('53', '53'), ('.', '.'), ('Ciresan', 'Ciresan'), (',', ','), ('D.', 'D.'), (',', ','), ('Meier', 'Meier'), (',', ','), ('U.', 'U.'), ('Masci', 'Masci'), (',', ','), ('J.', 'J.'), ('&', '&'), ('Schmidhuber', 'Schmidhuber'), (',', ','), ('J.', 'J.'), ('Multi-column', 'multi-column'), ('deep', 'deep'), ('neural', 'neural'), ('network', 'network'), ('for', 'for'), ('traffic', 'traffic'), ('sign', 'sign'), ('classification', 'classification'), ('.', '.')] 

 Dependency tags are: 
>> [(('53', 'Ciresan'), 'nummod'), (('.', '53'), 'punct'), (('Ciresan', 'root'), 'root'), ((',', 'D.'), 'punct'), (('D.', 'Ciresan'), 'conj'), ((',', 'Meier'), 'punct'), (('Meier', 'Ciresan'), 'conj'), ((',', 'U.'), 'punct'), (('U.', 'Ciresan'), 'conj'), (('Masci', 'U.'), 'flat'), ((',', 'J.'), 'punct'), (('J.', 'Ciresan'), 'conj'), (('&', 'Schmidhuber'), 'cc'), (('Schmidhuber', 'J.'), 'conj'), ((',', 'network'), 'punct'), (('J.', 'network'), 'compound'), (('Multi-column', 'network'), 'amod'), (('deep', 'network'), 'amod'), (('neural', 'network'), 'amod'), (('network', 'Ciresan'), 'conj'), (('for', 'classification'), 'case'), (('traffic', 'classification'), 'compound'), (('sign', 'classification'), 'compound'), (('classification', 'network'), 'nmod'), (('.', 'Ciresan'), 'punct')]

 Named Entites are: 
>> [('53. Ciresan, D., Meier, U. Masci', 'ORG'), ('J. & Schmidhuber', 'ORG'), ('J. Multi-column', 'ORG')]

------------------- Sentence 2 -------------------

 Neural Networks 32, 333–338 (2012). 

Tokens are: 
>> ['Neural', 'Networks', '32', ',', '333–338', '(', '2012', ')', '.'] 

 UPOS tags are: 
>> [('Neural', 'ADJ'), ('Networks', 'PROPN'), ('32', 'NUM'), (',', 'PUNCT'), ('333–338', 'NUM'), ('(', 'PUNCT'), ('2012', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Neural', 'NNP'), ('Networks', 'NNPS'), ('32', 'CD'), (',', ','), ('333–338', 'CD'), ('(', '-LRB-'), ('2012', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Neural', 'neural'), ('Networks', 'Network'), ('32', '32'), (',', ','), ('333–338', '333–338'), ('(', '('), ('2012', '2012'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Neural', 'Networks'), 'amod'), (('Networks', 'root'), 'root'), (('32', 'Networks'), 'dep'), ((',', '333–338'), 'punct'), (('333–338', 'Networks'), 'list'), (('(', '2012'), 'punct'), (('2012', '333–338'), 'nmod:tmod'), ((')', '2012'), 'punct'), (('.', 'Networks'), 'punct')]

 Named Entites are: 
>> [('Neural Networks 32', 'ORG'), ('333–338', 'CARDINAL'), ('2012', 'DATE')]

================================ Paragraph 305 =================================

54. Ning, F. et al. Toward automatic phenotyping of developing embryos from  videos. IEEE Trans. Image Process. 14, 1360–1371 (2005).  


------------------- Sentence 1 -------------------

 54. 

Tokens are: 
>> ['54', '.'] 

 UPOS tags are: 
>> [('54', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('54', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('54', '54'), ('.', '.')] 

 Dependency tags are: 
>> [(('54', 'root'), 'root'), (('.', '54'), 'punct')]

 Named Entites are: 
>> [('54', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Ning, F. et al. Toward automatic phenotyping of developing embryos from  videos. 

Tokens are: 
>> ['Ning', ',', 'F.', 'et', 'al.', 'Toward', 'automatic', 'phenotyping', 'of', 'developing', 'embryos', 'from', 'videos', '.'] 

 UPOS tags are: 
>> [('Ning', 'PROPN'), (',', 'PUNCT'), ('F.', 'X'), ('et', 'X'), ('al.', 'X'), ('Toward', 'ADP'), ('automatic', 'ADJ'), ('phenotyping', 'NOUN'), ('of', 'SCONJ'), ('developing', 'VERB'), ('embryos', 'NOUN'), ('from', 'ADP'), ('videos', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Ning', 'NNP'), (',', ','), ('F.', 'FW'), ('et', 'FW'), ('al.', 'FW'), ('Toward', 'IN'), ('automatic', 'JJ'), ('phenotyping', 'NN'), ('of', 'IN'), ('developing', 'VBG'), ('embryos', 'NNS'), ('from', 'IN'), ('videos', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Ning', 'Ning'), (',', ','), ('F.', 'F.'), ('et', 'et'), ('al.', 'al.'), ('Toward', 'toward'), ('automatic', 'automatic'), ('phenotyping', 'phenotyping'), ('of', 'of'), ('developing', 'develop'), ('embryos', 'embryo'), ('from', 'from'), ('videos', 'video'), ('.', '.')] 

 Dependency tags are: 
>> [(('Ning', 'root'), 'root'), ((',', 'F.'), 'punct'), (('F.', 'Ning'), 'conj'), (('et', 'al.'), 'cc'), (('al.', 'Ning'), 'conj'), (('Toward', 'phenotyping'), 'case'), (('automatic', 'phenotyping'), 'amod'), (('phenotyping', 'Ning'), 'nmod'), (('of', 'developing'), 'mark'), (('developing', 'phenotyping'), 'acl'), (('embryos', 'developing'), 'obj'), (('from', 'videos'), 'case'), (('videos', 'developing'), 'obl'), (('.', 'Ning'), 'punct')]

 Named Entites are: 
>> [('Ning', 'PERSON')]

------------------- Sentence 3 -------------------

 IEEE Trans. 

Tokens are: 
>> ['IEEE', 'Trans', '.'] 

 UPOS tags are: 
>> [('IEEE', 'PROPN'), ('Trans', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IEEE', 'NNP'), ('Trans', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('IEEE', 'IEEE'), ('Trans', 'Trans'), ('.', '.')] 

 Dependency tags are: 
>> [(('IEEE', 'Trans'), 'compound'), (('Trans', 'root'), 'root'), (('.', 'Trans'), 'punct')]

 Named Entites are: 
>> [('IEEE Trans', 'ORG')]

------------------- Sentence 4 -------------------

 Image Process. 14, 1360–1371 (2005). 

Tokens are: 
>> ['Image', 'Process.', '14', ',', '1360–1371', '(', '2005', ')', '.'] 

 UPOS tags are: 
>> [('Image', 'NOUN'), ('Process.', 'PROPN'), ('14', 'NUM'), (',', 'PUNCT'), ('1360–1371', 'NUM'), ('(', 'PUNCT'), ('2005', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Image', 'NN'), ('Process.', 'NNP'), ('14', 'CD'), (',', ','), ('1360–1371', 'CD'), ('(', '-LRB-'), ('2005', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Image', 'image'), ('Process.', 'Process.'), ('14', '14'), (',', ','), ('1360–1371', '1360–1371'), ('(', '('), ('2005', '2005'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Image', 'root'), 'root'), (('Process.', 'Image'), 'dep'), (('14', 'Image'), 'dep'), ((',', '1360–1371'), 'punct'), (('1360–1371', 'Process.'), 'list'), (('(', '2005'), 'punct'), (('2005', '1360–1371'), 'nmod:tmod'), ((')', '2005'), 'punct'), (('.', 'Image'), 'punct')]

 Named Entites are: 
>> [('14', 'CARDINAL'), ('1360–1371', 'CARDINAL'), ('2005', 'DATE')]

================================ Paragraph 306 =================================

55. Turaga, S. C. et al. Convolutional networks can learn to generate affinity graphs  for image segmentation. Neural Comput. 22, 511–538 (2010).  


------------------- Sentence 1 -------------------

 55. 

Tokens are: 
>> ['55', '.'] 

 UPOS tags are: 
>> [('55', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('55', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('55', '55'), ('.', '.')] 

 Dependency tags are: 
>> [(('55', 'root'), 'root'), (('.', '55'), 'punct')]

 Named Entites are: 
>> [('55', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Turaga, S. C. et al. Convolutional networks can learn to generate affinity graphs  for image segmentation. 

Tokens are: 
>> ['Turaga', ',', 'S.', 'C.', 'et', 'al.', 'Convolutional', 'networks', 'can', 'learn', 'to', 'generate', 'affinity', 'graphs', 'for', 'image', 'segmentation', '.'] 

 UPOS tags are: 
>> [('Turaga', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('C.', 'PROPN'), ('et', 'X'), ('al.', 'X'), ('Convolutional', 'ADJ'), ('networks', 'NOUN'), ('can', 'AUX'), ('learn', 'VERB'), ('to', 'PART'), ('generate', 'VERB'), ('affinity', 'NOUN'), ('graphs', 'NOUN'), ('for', 'ADP'), ('image', 'NOUN'), ('segmentation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Turaga', 'NNP'), (',', ','), ('S.', 'NNP'), ('C.', 'NNP'), ('et', 'FW'), ('al.', 'FW'), ('Convolutional', 'JJ'), ('networks', 'NNS'), ('can', 'MD'), ('learn', 'VB'), ('to', 'TO'), ('generate', 'VB'), ('affinity', 'NN'), ('graphs', 'NNS'), ('for', 'IN'), ('image', 'NN'), ('segmentation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Turaga', 'Turaga'), (',', ','), ('S.', 'S.'), ('C.', 'C.'), ('et', 'et'), ('al.', 'al.'), ('Convolutional', 'convolutional'), ('networks', 'network'), ('can', 'can'), ('learn', 'learn'), ('to', 'to'), ('generate', 'generate'), ('affinity', 'affinity'), ('graphs', 'graph'), ('for', 'for'), ('image', 'image'), ('segmentation', 'segmentation'), ('.', '.')] 

 Dependency tags are: 
>> [(('Turaga', 'learn'), 'nsubj'), ((',', 'S.'), 'punct'), (('S.', 'Turaga'), 'conj'), (('C.', 'S.'), 'flat'), (('et', 'al.'), 'cc'), (('al.', 'S.'), 'conj'), (('Convolutional', 'networks'), 'amod'), (('networks', 'Turaga'), 'conj'), (('can', 'learn'), 'aux'), (('learn', 'root'), 'root'), (('to', 'generate'), 'mark'), (('generate', 'learn'), 'xcomp'), (('affinity', 'graphs'), 'compound'), (('graphs', 'generate'), 'obj'), (('for', 'segmentation'), 'case'), (('image', 'segmentation'), 'compound'), (('segmentation', 'graphs'), 'nmod'), (('.', 'learn'), 'punct')]

 Named Entites are: 
>> [('Turaga', 'ORG')]

------------------- Sentence 3 -------------------

 Neural Comput. 22, 511–538 (2010). 

Tokens are: 
>> ['Neural', 'Comput.', '22', ',', '511–538', '(', '2010', ')', '.'] 

 UPOS tags are: 
>> [('Neural', 'PROPN'), ('Comput.', 'PROPN'), ('22', 'NUM'), (',', 'PUNCT'), ('511–538', 'NUM'), ('(', 'PUNCT'), ('2010', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Neural', 'NNP'), ('Comput.', 'NNP'), ('22', 'CD'), (',', ','), ('511–538', 'CD'), ('(', '-LRB-'), ('2010', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Neural', 'Neural'), ('Comput.', 'Comput.'), ('22', '22'), (',', ','), ('511–538', '511–538'), ('(', '('), ('2010', '2010'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Neural', 'root'), 'root'), (('Comput.', '22'), 'compound'), (('22', 'Neural'), 'dep'), ((',', '511–538'), 'punct'), (('511–538', '22'), 'nmod:tmod'), (('(', '2010'), 'punct'), (('2010', '22'), 'nmod:tmod'), ((')', '2010'), 'punct'), (('.', 'Neural'), 'punct')]

 Named Entites are: 
>> [('22', 'CARDINAL'), ('511–538', 'CARDINAL'), ('2010', 'DATE')]

================================ Paragraph 307 =================================

56. Garcia, C. & Delakis, M. Convolutional face finder: a neural architecture for  fast and robust face detection. IEEE Trans. Pattern Anal. Machine Intell. 26,  1408–1423 (2004).  


------------------- Sentence 1 -------------------

 56. Garcia, C. & Delakis, M. Convolutional face finder: a neural architecture for  fast and robust face detection. 

Tokens are: 
>> ['56', '.', 'Garcia', ',', 'C.', '&', 'Delakis', ',', 'M.', 'Convolutional', 'face', 'finder', ':', 'a', 'neural', 'architecture', 'for', 'fast', 'and', 'robust', 'face', 'detection', '.'] 

 UPOS tags are: 
>> [('56', 'NUM'), ('.', 'PUNCT'), ('Garcia', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), ('&', 'CCONJ'), ('Delakis', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('Convolutional', 'ADJ'), ('face', 'NOUN'), ('finder', 'NOUN'), (':', 'PUNCT'), ('a', 'DET'), ('neural', 'ADJ'), ('architecture', 'NOUN'), ('for', 'ADP'), ('fast', 'ADJ'), ('and', 'CCONJ'), ('robust', 'ADJ'), ('face', 'NOUN'), ('detection', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('56', 'LS'), ('.', '.'), ('Garcia', 'NNP'), (',', ','), ('C.', 'NNP'), ('&', 'CC'), ('Delakis', 'NNP'), (',', ','), ('M.', 'NNP'), ('Convolutional', 'JJ'), ('face', 'NN'), ('finder', 'NN'), (':', ':'), ('a', 'DT'), ('neural', 'JJ'), ('architecture', 'NN'), ('for', 'IN'), ('fast', 'JJ'), ('and', 'CC'), ('robust', 'JJ'), ('face', 'NN'), ('detection', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('56', '56'), ('.', '.'), ('Garcia', 'Garcia'), (',', ','), ('C.', 'C.'), ('&', '&'), ('Delakis', 'Delakis'), (',', ','), ('M.', 'M.'), ('Convolutional', 'convolutional'), ('face', 'face'), ('finder', 'finder'), (':', ':'), ('a', 'a'), ('neural', 'neural'), ('architecture', 'architecture'), ('for', 'for'), ('fast', 'fast'), ('and', 'and'), ('robust', 'robust'), ('face', 'face'), ('detection', 'detection'), ('.', '.')] 

 Dependency tags are: 
>> [(('56', 'Garcia'), 'nummod'), (('.', '56'), 'punct'), (('Garcia', 'root'), 'root'), ((',', 'C.'), 'punct'), (('C.', 'Garcia'), 'conj'), (('&', 'Delakis'), 'cc'), (('Delakis', 'Garcia'), 'conj'), ((',', 'Garcia'), 'punct'), (('M.', 'finder'), 'compound'), (('Convolutional', 'face'), 'amod'), (('face', 'finder'), 'compound'), (('finder', 'Garcia'), 'list'), ((':', 'Garcia'), 'punct'), (('a', 'architecture'), 'det'), (('neural', 'architecture'), 'amod'), (('architecture', 'Garcia'), 'appos'), (('for', 'detection'), 'case'), (('fast', 'detection'), 'amod'), (('and', 'robust'), 'cc'), (('robust', 'fast'), 'conj'), (('face', 'detection'), 'compound'), (('detection', 'architecture'), 'nmod'), (('.', 'Garcia'), 'punct')]

 Named Entites are: 
>> [('56', 'CARDINAL'), ('Garcia, C. & Delakis', 'ORG')]

------------------- Sentence 2 -------------------

 IEEE Trans. Pattern Anal. Machine Intell. 26,  1408–1423 (2004). 

Tokens are: 
>> ['IEEE', 'Trans', '.', 'Pattern', 'Anal', '.', 'Machine', 'Intell.', '26', ',', '1408–1423', '(', '2004', ')', '.'] 

 UPOS tags are: 
>> [('IEEE', 'PROPN'), ('Trans', 'PROPN'), ('.', 'PUNCT'), ('Pattern', 'PROPN'), ('Anal', 'PROPN'), ('.', 'PUNCT'), ('Machine', 'PROPN'), ('Intell.', 'PROPN'), ('26', 'NUM'), (',', 'PUNCT'), ('1408–1423', 'NUM'), ('(', 'PUNCT'), ('2004', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IEEE', 'NNP'), ('Trans', 'NNP'), ('.', '.'), ('Pattern', 'NNP'), ('Anal', 'NNP'), ('.', '.'), ('Machine', 'NNP'), ('Intell.', 'NNP'), ('26', 'CD'), (',', ','), ('1408–1423', 'CD'), ('(', '-LRB-'), ('2004', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('IEEE', 'IEEE'), ('Trans', 'Trans'), ('.', '.'), ('Pattern', 'Pattern'), ('Anal', 'Anal'), ('.', '.'), ('Machine', 'Machine'), ('Intell.', 'Intell.'), ('26', '26'), (',', ','), ('1408–1423', '1408–1423'), ('(', '('), ('2004', '2004'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('IEEE', 'Trans'), 'compound'), (('Trans', 'root'), 'root'), (('.', 'Trans'), 'punct'), (('Pattern', 'Trans'), 'appos'), (('Anal', 'Pattern'), 'flat'), (('.', 'Trans'), 'punct'), (('Machine', 'Pattern'), 'list'), (('Intell.', 'Machine'), 'flat'), (('26', 'Intell.'), 'nummod'), ((',', 'Intell.'), 'punct'), (('1408–1423', 'Intell.'), 'appos'), (('(', '2004'), 'punct'), (('2004', '1408–1423'), 'nummod'), ((')', '2004'), 'punct'), (('.', 'Trans'), 'punct')]

 Named Entites are: 
>> [('IEEE Trans. Pattern Anal. Machine', 'ORG'), ('26', 'CARDINAL'), ('1408–1423', 'CARDINAL'), ('2004', 'DATE')]

================================ Paragraph 308 =================================

57. Osadchy, M., LeCun, Y. & Miller, M. Synergistic face detection and pose  estimation with energy-based models. J. Mach. Learn. Res. 8, 1197–1215  (2007).  


------------------- Sentence 1 -------------------

 57. 

Tokens are: 
>> ['57', '.'] 

 UPOS tags are: 
>> [('57', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('57', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('57', '57'), ('.', '.')] 

 Dependency tags are: 
>> [(('57', 'root'), 'root'), (('.', '57'), 'punct')]

 Named Entites are: 
>> [('57', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Osadchy, M., LeCun, Y. & Miller, M. Synergistic face detection and pose  estimation with energy-based models. 

Tokens are: 
>> ['Osadchy', ',', 'M.', ',', 'LeCun', ',', 'Y.', '&', 'Miller', ',', 'M.', 'Synergistic', 'face', 'detection', 'and', 'pose', 'estimation', 'with', 'energy', '-', 'based', 'models', '.'] 

 UPOS tags are: 
>> [('Osadchy', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), (',', 'PUNCT'), ('LeCun', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('&', 'CCONJ'), ('Miller', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('Synergistic', 'ADJ'), ('face', 'NOUN'), ('detection', 'NOUN'), ('and', 'CCONJ'), ('pose', 'VERB'), ('estimation', 'NOUN'), ('with', 'ADP'), ('energy', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('models', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Osadchy', 'NNP'), (',', ','), ('M.', 'NNP'), (',', ','), ('LeCun', 'NNP'), (',', ','), ('Y.', 'NNP'), ('&', 'CC'), ('Miller', 'NNP'), (',', ','), ('M.', 'NNP'), ('Synergistic', 'JJ'), ('face', 'NN'), ('detection', 'NN'), ('and', 'CC'), ('pose', 'VBP'), ('estimation', 'NN'), ('with', 'IN'), ('energy', 'NN'), ('-', 'HYPH'), ('based', 'VBN'), ('models', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Osadchy', 'Osadchy'), (',', ','), ('M.', 'M.'), (',', ','), ('LeCun', 'LeCun'), (',', ','), ('Y.', 'Y.'), ('&', '&'), ('Miller', 'Miller'), (',', ','), ('M.', 'M.'), ('Synergistic', 'Synergistic'), ('face', 'face'), ('detection', 'detection'), ('and', 'and'), ('pose', 'pose'), ('estimation', 'estimation'), ('with', 'with'), ('energy', 'energy'), ('-', '-'), ('based', 'base'), ('models', 'model'), ('.', '.')] 

 Dependency tags are: 
>> [(('Osadchy', 'root'), 'root'), ((',', 'M.'), 'punct'), (('M.', 'Osadchy'), 'conj'), ((',', 'LeCun'), 'punct'), (('LeCun', 'Osadchy'), 'conj'), ((',', 'Y.'), 'punct'), (('Y.', 'Osadchy'), 'conj'), (('&', 'Miller'), 'cc'), (('Miller', 'Y.'), 'conj'), ((',', 'detection'), 'punct'), (('M.', 'detection'), 'compound'), (('Synergistic', 'detection'), 'amod'), (('face', 'detection'), 'compound'), (('detection', 'Osadchy'), 'conj'), (('and', 'pose'), 'cc'), (('pose', 'Osadchy'), 'conj'), (('estimation', 'pose'), 'obj'), (('with', 'models'), 'case'), (('energy', 'based'), 'compound'), (('-', 'based'), 'punct'), (('based', 'models'), 'amod'), (('models', 'pose'), 'obl'), (('.', 'Osadchy'), 'punct')]

 Named Entites are: 
>> [('Osadchy, M., LeCun, Y. & Miller', 'ORG')]

------------------- Sentence 3 -------------------

 J. Mach. Learn. Res. 8, 1197–1215  (2007). 

Tokens are: 
>> ['J.', 'Mach', '.', 'Learn.', 'Res.', '8', ',', '1197–1215', '(', '2007', ')', '.'] 

 UPOS tags are: 
>> [('J.', 'PROPN'), ('Mach', 'PROPN'), ('.', 'PUNCT'), ('Learn.', 'PROPN'), ('Res.', 'PROPN'), ('8', 'NUM'), (',', 'PUNCT'), ('1197–1215', 'NUM'), ('(', 'PUNCT'), ('2007', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('J.', 'NNP'), ('Mach', 'NNP'), ('.', '.'), ('Learn.', 'NNP'), ('Res.', 'NNP'), ('8', 'CD'), (',', ','), ('1197–1215', 'CD'), ('(', '-LRB-'), ('2007', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('J.', 'J.'), ('Mach', 'Mach'), ('.', '.'), ('Learn.', 'Learn.'), ('Res.', 'Res.'), ('8', '8'), (',', ','), ('1197–1215', '1197–1215'), ('(', '('), ('2007', '2007'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('J.', 'root'), 'root'), (('Mach', 'J.'), 'flat'), (('.', 'J.'), 'punct'), (('Learn.', 'J.'), 'list'), (('Res.', 'Learn.'), 'flat'), (('8', 'Learn.'), 'dep'), ((',', '1197–1215'), 'punct'), (('1197–1215', 'Learn.'), 'nmod:tmod'), (('(', '2007'), 'punct'), (('2007', '1197–1215'), 'nmod:tmod'), ((')', '2007'), 'punct'), (('.', 'J.'), 'punct')]

 Named Entites are: 
>> [('J. Mach.', 'PERSON'), ('Learn. Res. 8', 'WORK_OF_ART'), ('1197–1215', 'CARDINAL'), ('2007', 'DATE')]

================================ Paragraph 309 =================================

58. Tompson, J., Goroshin, R. R., Jain, A., LeCun, Y. Y. & Bregler, C. C. Efficient object  localization using convolutional networks. In Proc. Conference on Computer  Vision and Pattern Recognition http://arxiv.org/abs/1411.4280 (2014).  


------------------- Sentence 1 -------------------

 58. Tompson, J., Goroshin, R. R., Jain, A., LeCun, Y. Y. & Bregler, C. C. Efficient object  localization using convolutional networks. 

Tokens are: 
>> ['58', '.', 'Tompson', ',', 'J.', ',', 'Goroshin', ',', 'R.', 'R.', ',', 'Jain', ',', 'A.', ',', 'LeCun', ',', 'Y.', 'Y.', '&', 'Bregler', ',', 'C.', 'C.', 'Efficient', 'object', 'localization', 'using', 'convolutional', 'networks', '.'] 

 UPOS tags are: 
>> [('58', 'NUM'), ('.', 'PUNCT'), ('Tompson', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), (',', 'PUNCT'), ('Goroshin', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('R.', 'PROPN'), (',', 'PUNCT'), ('Jain', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), (',', 'PUNCT'), ('LeCun', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('Y.', 'PROPN'), ('&', 'CCONJ'), ('Bregler', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), ('C.', 'PROPN'), ('Efficient', 'ADJ'), ('object', 'NOUN'), ('localization', 'NOUN'), ('using', 'VERB'), ('convolutional', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('58', 'LS'), ('.', '.'), ('Tompson', 'NNP'), (',', ','), ('J.', 'NNP'), (',', ','), ('Goroshin', 'NNP'), (',', ','), ('R.', 'NNP'), ('R.', 'NNP'), (',', ','), ('Jain', 'NNP'), (',', ','), ('A.', 'NNP'), (',', ','), ('LeCun', 'NNP'), (',', ','), ('Y.', 'NNP'), ('Y.', 'NNP'), ('&', 'CC'), ('Bregler', 'NNP'), (',', ','), ('C.', 'NNP'), ('C.', 'NNP'), ('Efficient', 'JJ'), ('object', 'NN'), ('localization', 'NN'), ('using', 'VBG'), ('convolutional', 'JJ'), ('networks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('58', '58'), ('.', '.'), ('Tompson', 'Tompson'), (',', ','), ('J.', 'J.'), (',', ','), ('Goroshin', 'Goroshin'), (',', ','), ('R.', 'R.'), ('R.', 'R.'), (',', ','), ('Jain', 'Jain'), (',', ','), ('A.', 'A.'), (',', ','), ('LeCun', 'LeCun'), (',', ','), ('Y.', 'Y.'), ('Y.', 'Y.'), ('&', '&'), ('Bregler', 'Bregler'), (',', ','), ('C.', 'C.'), ('C.', 'C.'), ('Efficient', 'efficient'), ('object', 'object'), ('localization', 'localization'), ('using', 'use'), ('convolutional', 'convolutional'), ('networks', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('58', 'Tompson'), 'nummod'), (('.', '58'), 'punct'), (('Tompson', 'root'), 'root'), ((',', 'J.'), 'punct'), (('J.', 'Tompson'), 'conj'), ((',', 'Goroshin'), 'punct'), (('Goroshin', 'Tompson'), 'conj'), ((',', 'R.'), 'punct'), (('R.', 'Tompson'), 'conj'), (('R.', 'R.'), 'flat'), ((',', 'Jain'), 'punct'), (('Jain', 'Tompson'), 'conj'), ((',', 'A.'), 'punct'), (('A.', 'Tompson'), 'conj'), ((',', 'LeCun'), 'punct'), (('LeCun', 'Tompson'), 'conj'), ((',', 'Y.'), 'punct'), (('Y.', 'Tompson'), 'conj'), (('Y.', 'Y.'), 'flat'), (('&', 'Bregler'), 'cc'), (('Bregler', 'Tompson'), 'conj'), ((',', 'localization'), 'punct'), (('C.', 'localization'), 'compound'), (('C.', 'C.'), 'flat'), (('Efficient', 'localization'), 'amod'), (('object', 'localization'), 'compound'), (('localization', 'Tompson'), 'conj'), (('using', 'localization'), 'acl'), (('convolutional', 'networks'), 'amod'), (('networks', 'using'), 'obj'), (('.', 'localization'), 'punct')]

 Named Entites are: 
>> [('58. Tompson, J., Goroshin, R. R.', 'ORG'), ('Jain, A.', 'ORG'), ('LeCun', 'GPE'), ('Y. Y. & Bregler', 'ORG')]

------------------- Sentence 2 -------------------

 In Proc. Conference on Computer  Vision and Pattern Recognition http://arxiv.org/abs/1411.4280 (2014). 

Tokens are: 
>> ['In', 'Proc.', 'Conference', 'on', 'Computer', 'Vision', 'and', 'Pattern', 'Recognition', 'http://arxiv.org/abs/1411.4280', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('Conference', 'PROPN'), ('on', 'ADP'), ('Computer', 'PROPN'), ('Vision', 'PROPN'), ('and', 'CCONJ'), ('Pattern', 'PROPN'), ('Recognition', 'PROPN'), ('http://arxiv.org/abs/1411.4280', 'X'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('Computer', 'NNP'), ('Vision', 'NNP'), ('and', 'CC'), ('Pattern', 'NNP'), ('Recognition', 'NNP'), ('http://arxiv.org/abs/1411.4280', 'ADD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('Conference', 'Conference'), ('on', 'on'), ('Computer', 'Computer'), ('Vision', 'Vision'), ('and', 'and'), ('Pattern', 'Pattern'), ('Recognition', 'recognition'), ('http://arxiv.org/abs/1411.4280', 'http://arxiv.org/abs/1411.4280'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('Conference', 'root'), 'root'), (('on', 'Vision'), 'case'), (('Computer', 'Vision'), 'compound'), (('Vision', 'Conference'), 'nmod'), (('and', 'Recognition'), 'cc'), (('Pattern', 'Recognition'), 'compound'), (('Recognition', 'Vision'), 'conj'), (('http://arxiv.org/abs/1411.4280', 'Recognition'), 'appos'), (('(', '2014'), 'punct'), (('2014', 'http://arxiv.org/abs/1411.4280'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('Proc. Conference on Computer  Vision', 'ORG'), ('Pattern Recognition', 'WORK_OF_ART'), ('2014', 'DATE')]

================================ Paragraph 310 =================================

59. Taigman, Y., Yang, M., Ranzato, M. & Wolf, L. Deepface: closing the gap to  human-level performance in face verification. In Proc. Conference on Computer  Vision and Pattern Recognition 1701–1708 (2014).  


------------------- Sentence 1 -------------------

 59. Taigman, Y., Yang, M., Ranzato, M. & Wolf, L. Deepface: closing the gap to  human-level performance in face verification. 

Tokens are: 
>> ['59', '.', 'Taigman', ',', 'Y.', ',', 'Yang', ',', 'M.', ',', 'Ranzato', ',', 'M.', '&', 'Wolf', ',', 'L.', 'Deepface', ':', 'closing', 'the', 'gap', 'to', 'human-level', 'performance', 'in', 'face', 'verification', '.'] 

 UPOS tags are: 
>> [('59', 'NUM'), ('.', 'PUNCT'), ('Taigman', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), (',', 'PUNCT'), ('Yang', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), (',', 'PUNCT'), ('Ranzato', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('&', 'CCONJ'), ('Wolf', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('Deepface', 'PROPN'), (':', 'PUNCT'), ('closing', 'VERB'), ('the', 'DET'), ('gap', 'NOUN'), ('to', 'ADP'), ('human-level', 'ADJ'), ('performance', 'NOUN'), ('in', 'ADP'), ('face', 'NOUN'), ('verification', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('59', 'LS'), ('.', '.'), ('Taigman', 'NNP'), (',', ','), ('Y.', 'NNP'), (',', ','), ('Yang', 'NNP'), (',', ','), ('M.', 'NNP'), (',', ','), ('Ranzato', 'NNP'), (',', ','), ('M.', 'NNP'), ('&', 'CC'), ('Wolf', 'NNP'), (',', ','), ('L.', 'NNP'), ('Deepface', 'NNP'), (':', ':'), ('closing', 'VBG'), ('the', 'DT'), ('gap', 'NN'), ('to', 'IN'), ('human-level', 'JJ'), ('performance', 'NN'), ('in', 'IN'), ('face', 'NN'), ('verification', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('59', '59'), ('.', '.'), ('Taigman', 'Taigman'), (',', ','), ('Y.', 'Y.'), (',', ','), ('Yang', 'Yang'), (',', ','), ('M.', 'M.'), (',', ','), ('Ranzato', 'Ranzato'), (',', ','), ('M.', 'M.'), ('&', '&'), ('Wolf', 'Wolf'), (',', ','), ('L.', 'L.'), ('Deepface', 'Deepface'), (':', ':'), ('closing', 'close'), ('the', 'the'), ('gap', 'gap'), ('to', 'to'), ('human-level', 'human-level'), ('performance', 'performance'), ('in', 'in'), ('face', 'face'), ('verification', 'verification'), ('.', '.')] 

 Dependency tags are: 
>> [(('59', 'Taigman'), 'nummod'), (('.', '59'), 'punct'), (('Taigman', 'root'), 'root'), ((',', 'Y.'), 'punct'), (('Y.', 'Taigman'), 'conj'), ((',', 'Yang'), 'punct'), (('Yang', 'Taigman'), 'conj'), ((',', 'M.'), 'punct'), (('M.', 'Taigman'), 'conj'), ((',', 'Ranzato'), 'punct'), (('Ranzato', 'Taigman'), 'conj'), ((',', 'M.'), 'punct'), (('M.', 'Taigman'), 'conj'), (('&', 'Wolf'), 'cc'), (('Wolf', 'Taigman'), 'conj'), ((',', 'L.'), 'punct'), (('L.', 'Taigman'), 'conj'), (('Deepface', 'L.'), 'flat'), ((':', 'closing'), 'punct'), (('closing', 'Taigman'), 'parataxis'), (('the', 'gap'), 'det'), (('gap', 'closing'), 'obj'), (('to', 'performance'), 'case'), (('human-level', 'performance'), 'amod'), (('performance', 'gap'), 'nmod'), (('in', 'verification'), 'case'), (('face', 'verification'), 'compound'), (('verification', 'performance'), 'nmod'), (('.', 'Taigman'), 'punct')]

 Named Entites are: 
>> [('59. Taigman, Y., Yang, M., Ranzato, M. & Wolf', 'ORG'), ('L. Deepface', 'PERSON')]

------------------- Sentence 2 -------------------

 In Proc. Conference on Computer  Vision and Pattern Recognition 1701–1708 (2014). 

Tokens are: 
>> ['In', 'Proc.', 'Conference', 'on', 'Computer', 'Vision', 'and', 'Pattern', 'Recognition', '1701–1708', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('Conference', 'PROPN'), ('on', 'ADP'), ('Computer', 'PROPN'), ('Vision', 'PROPN'), ('and', 'CCONJ'), ('Pattern', 'PROPN'), ('Recognition', 'PROPN'), ('1701–1708', 'NUM'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('Computer', 'NNP'), ('Vision', 'NNP'), ('and', 'CC'), ('Pattern', 'NNP'), ('Recognition', 'NNP'), ('1701–1708', 'CD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('Conference', 'Conference'), ('on', 'on'), ('Computer', 'Computer'), ('Vision', 'Vision'), ('and', 'and'), ('Pattern', 'Pattern'), ('Recognition', 'recognition'), ('1701–1708', '1701–1708'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('Conference', 'root'), 'root'), (('on', 'Vision'), 'case'), (('Computer', 'Vision'), 'compound'), (('Vision', 'Conference'), 'nmod'), (('and', 'Recognition'), 'cc'), (('Pattern', 'Recognition'), 'compound'), (('Recognition', 'Vision'), 'conj'), (('1701–1708', 'Recognition'), 'nummod'), (('(', '2014'), 'punct'), (('2014', 'Recognition'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('Proc. Conference on Computer  Vision and Pattern Recognition 1701–1708', 'EVENT'), ('2014', 'DATE')]

================================ Paragraph 311 =================================

60. Hadsell, R. et al. Learning long-range vision for autonomous off-road driving.  J. Field Robot. 26, 120–144 (2009).  


------------------- Sentence 1 -------------------

 60. 

Tokens are: 
>> ['60', '.'] 

 UPOS tags are: 
>> [('60', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('60', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('60', '60'), ('.', '.')] 

 Dependency tags are: 
>> [(('60', 'root'), 'root'), (('.', '60'), 'punct')]

 Named Entites are: 
>> [('60', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Hadsell, R. et al. 

Tokens are: 
>> ['Hadsell', ',', 'R.', 'et', 'al.'] 

 UPOS tags are: 
>> [('Hadsell', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('et', 'X'), ('al.', 'X')] 

 XPOS tags are: 
>> [('Hadsell', 'NNP'), (',', ','), ('R.', 'NNP'), ('et', 'FW'), ('al.', 'FW')] 

 Lemmas are: 
>> [('Hadsell', 'Hadsell'), (',', ','), ('R.', 'R.'), ('et', 'et'), ('al.', 'al.')] 

 Dependency tags are: 
>> [(('Hadsell', 'root'), 'root'), ((',', 'R.'), 'punct'), (('R.', 'Hadsell'), 'conj'), (('et', 'al.'), 'cc'), (('al.', 'Hadsell'), 'conj')]

 Named Entites are: 
>> [('Hadsell', 'PERSON')]

------------------- Sentence 3 -------------------

 Learning long-range vision for autonomous off-road driving. 

Tokens are: 
>> ['Learning', 'long', '-', 'range', 'vision', 'for', 'autonomous', 'off-road', 'driving', '.'] 

 UPOS tags are: 
>> [('Learning', 'VERB'), ('long', 'ADV'), ('-', 'PUNCT'), ('range', 'NOUN'), ('vision', 'NOUN'), ('for', 'ADP'), ('autonomous', 'ADJ'), ('off-road', 'ADJ'), ('driving', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Learning', 'VBG'), ('long', 'RB'), ('-', 'HYPH'), ('range', 'NN'), ('vision', 'NN'), ('for', 'IN'), ('autonomous', 'JJ'), ('off-road', 'JJ'), ('driving', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Learning', 'learning'), ('long', 'long'), ('-', '-'), ('range', 'range'), ('vision', 'vision'), ('for', 'for'), ('autonomous', 'autonomous'), ('off-road', 'off-road'), ('driving', 'driving'), ('.', '.')] 

 Dependency tags are: 
>> [(('Learning', 'vision'), 'amod'), (('long', 'range'), 'amod'), (('-', 'range'), 'punct'), (('range', 'vision'), 'compound'), (('vision', 'root'), 'root'), (('for', 'driving'), 'case'), (('autonomous', 'driving'), 'amod'), (('off-road', 'driving'), 'amod'), (('driving', 'vision'), 'nmod'), (('.', 'Learning'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 J. Field Robot. 26, 120–144 (2009). 

Tokens are: 
>> ['J.', 'Field', 'Robot.', '26', ',', '120–144', '(', '2009', ')', '.'] 

 UPOS tags are: 
>> [('J.', 'PROPN'), ('Field', 'PROPN'), ('Robot.', 'PROPN'), ('26', 'NUM'), (',', 'PUNCT'), ('120–144', 'NUM'), ('(', 'PUNCT'), ('2009', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('J.', 'NNP'), ('Field', 'NNP'), ('Robot.', 'NNP'), ('26', 'CD'), (',', ','), ('120–144', 'CD'), ('(', '-LRB-'), ('2009', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('J.', 'J.'), ('Field', 'Field'), ('Robot.', 'Robot.'), ('26', '26'), (',', ','), ('120–144', '120–144'), ('(', '('), ('2009', '2009'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('J.', 'Field'), 'compound'), (('Field', 'root'), 'root'), (('Robot.', 'Field'), 'flat'), (('26', 'Robot.'), 'nummod'), ((',', '120–144'), 'punct'), (('120–144', '26'), 'nmod:tmod'), (('(', '2009'), 'punct'), (('2009', '26'), 'nmod:tmod'), ((')', '2009'), 'punct'), (('.', 'Field'), 'punct')]

 Named Entites are: 
>> [('J. Field Robot.', 'PERSON'), ('26', 'CARDINAL'), ('120–144', 'CARDINAL'), ('2009', 'DATE')]

================================ Paragraph 312 =================================

61. Farabet, C., Couprie, C., Najman, L. & LeCun, Y. Scene parsing with multiscale  feature learning, purity trees, and optimal covers. In Proc. International  Conference on Machine Learning http://arxiv.org/abs/1202.2160 (2012).  


------------------- Sentence 1 -------------------

 61. Farabet, C., Couprie, C., Najman, L. & LeCun, Y. Scene parsing with multiscale  feature learning, purity trees, and optimal covers. 

Tokens are: 
>> ['61', '.', 'Farabet', ',', 'C.', ',', 'Couprie', ',', 'C.', ',', 'Najman', ',', 'L.', '&', 'LeCun', ',', 'Y.', 'Scene', 'parsing', 'with', 'multiscale', 'feature', 'learning', ',', 'purity', 'trees', ',', 'and', 'optimal', 'covers', '.'] 

 UPOS tags are: 
>> [('61', 'NUM'), ('.', 'PUNCT'), ('Farabet', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), (',', 'PUNCT'), ('Couprie', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), (',', 'PUNCT'), ('Najman', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('&', 'CCONJ'), ('LeCun', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('Scene', 'PROPN'), ('parsing', 'NOUN'), ('with', 'ADP'), ('multiscale', 'ADJ'), ('feature', 'NOUN'), ('learning', 'NOUN'), (',', 'PUNCT'), ('purity', 'NOUN'), ('trees', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('optimal', 'ADJ'), ('covers', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('61', 'LS'), ('.', '.'), ('Farabet', 'NNP'), (',', ','), ('C.', 'NNP'), (',', ','), ('Couprie', 'NNP'), (',', ','), ('C.', 'NNP'), (',', ','), ('Najman', 'NNP'), (',', ','), ('L.', 'NNP'), ('&', 'CC'), ('LeCun', 'NNP'), (',', ','), ('Y.', 'NNP'), ('Scene', 'NNP'), ('parsing', 'NN'), ('with', 'IN'), ('multiscale', 'JJ'), ('feature', 'NN'), ('learning', 'NN'), (',', ','), ('purity', 'NN'), ('trees', 'NNS'), (',', ','), ('and', 'CC'), ('optimal', 'JJ'), ('covers', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('61', '61'), ('.', '.'), ('Farabet', 'Farabet'), (',', ','), ('C.', 'C.'), (',', ','), ('Couprie', 'Couprie'), (',', ','), ('C.', 'C.'), (',', ','), ('Najman', 'Najman'), (',', ','), ('L.', 'L.'), ('&', '&'), ('LeCun', 'LeCun'), (',', ','), ('Y.', 'Y.'), ('Scene', 'scene'), ('parsing', 'parsing'), ('with', 'with'), ('multiscale', 'multiscale'), ('feature', 'feature'), ('learning', 'learning'), (',', ','), ('purity', 'purity'), ('trees', 'tree'), (',', ','), ('and', 'and'), ('optimal', 'optimal'), ('covers', 'cover'), ('.', '.')] 

 Dependency tags are: 
>> [(('61', 'Farabet'), 'nummod'), (('.', '61'), 'punct'), (('Farabet', 'root'), 'root'), ((',', 'C.'), 'punct'), (('C.', 'Farabet'), 'conj'), ((',', 'Couprie'), 'punct'), (('Couprie', 'Farabet'), 'conj'), ((',', 'C.'), 'punct'), (('C.', 'Farabet'), 'conj'), ((',', 'Najman'), 'punct'), (('Najman', 'Farabet'), 'conj'), ((',', 'L.'), 'punct'), (('L.', 'Farabet'), 'conj'), (('&', 'LeCun'), 'cc'), (('LeCun', 'L.'), 'conj'), ((',', 'parsing'), 'punct'), (('Y.', 'Scene'), 'compound'), (('Scene', 'parsing'), 'compound'), (('parsing', 'Farabet'), 'conj'), (('with', 'learning'), 'case'), (('multiscale', 'learning'), 'amod'), (('feature', 'learning'), 'compound'), (('learning', 'parsing'), 'nmod'), ((',', 'trees'), 'punct'), (('purity', 'trees'), 'compound'), (('trees', 'learning'), 'conj'), ((',', 'covers'), 'punct'), (('and', 'covers'), 'cc'), (('optimal', 'covers'), 'amod'), (('covers', 'learning'), 'conj'), (('.', 'Farabet'), 'punct')]

 Named Entites are: 
>> [('61', 'CARDINAL'), ('C.', 'NORP'), ('Couprie', 'GPE'), ('C.', 'NORP'), ('Najman', 'GPE'), ('L. & LeCun', 'GPE')]

------------------- Sentence 2 -------------------

 In Proc. International  Conference on Machine Learning http://arxiv.org/abs/1202.2160 (2012). 

Tokens are: 
>> ['In', 'Proc.', 'International', 'Conference', 'on', 'Machine', 'Learning', 'http://arxiv.org/abs/1202.2160', '(', '2012', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('International', 'ADJ'), ('Conference', 'PROPN'), ('on', 'ADP'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('http://arxiv.org/abs/1202.2160', 'X'), ('(', 'PUNCT'), ('2012', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('International', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('Machine', 'NNP'), ('Learning', 'NNP'), ('http://arxiv.org/abs/1202.2160', 'ADD'), ('(', '-LRB-'), ('2012', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('International', 'International'), ('Conference', 'Conference'), ('on', 'on'), ('Machine', 'Machine'), ('Learning', 'learning'), ('http://arxiv.org/abs/1202.2160', 'http://arxiv.org/abs/1202.2160'), ('(', '('), ('2012', '2012'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('International', 'Conference'), 'amod'), (('Conference', 'root'), 'root'), (('on', 'Learning'), 'case'), (('Machine', 'Conference'), 'nmod'), (('Learning', 'Conference'), 'nmod'), (('http://arxiv.org/abs/1202.2160', 'Conference'), 'appos'), (('(', '2012'), 'punct'), (('2012', 'http://arxiv.org/abs/1202.2160'), 'nmod:tmod'), ((')', '2012'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('Proc. International  Conference on Machine Learning', 'EVENT'), ('2012', 'DATE')]

================================ Paragraph 313 =================================

62. Srivastava, N., Hinton, G., Krizhevsky, A., Sutskever, I. & Salakhutdinov, R.  Dropout: a simple way to prevent neural networks from overfitting. J. Machine  Learning Res. 15, 1929–1958 (2014).  


------------------- Sentence 1 -------------------

 62. Srivastava, N., Hinton, G., Krizhevsky, A., Sutskever, I. & Salakhutdinov, R.  Dropout: a simple way to prevent neural networks from overfitting. 

Tokens are: 
>> ['62', '.', 'Srivastava', ',', 'N.', ',', 'Hinton', ',', 'G.', ',', 'Krizhevsky', ',', 'A.', ',', 'Sutskever', ',', 'I.', '&', 'Salakhutdinov', ',', 'R.', 'Dropout', ':', 'a', 'simple', 'way', 'to', 'prevent', 'neural', 'networks', 'from', 'overfitting', '.'] 

 UPOS tags are: 
>> [('62', 'NUM'), ('.', 'PUNCT'), ('Srivastava', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), (',', 'PUNCT'), ('Hinton', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), (',', 'PUNCT'), ('Krizhevsky', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), (',', 'PUNCT'), ('Sutskever', 'PROPN'), (',', 'PUNCT'), ('I.', 'PROPN'), ('&', 'CCONJ'), ('Salakhutdinov', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('Dropout', 'PROPN'), (':', 'PUNCT'), ('a', 'DET'), ('simple', 'ADJ'), ('way', 'NOUN'), ('to', 'PART'), ('prevent', 'VERB'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('from', 'ADP'), ('overfitting', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('62', 'LS'), ('.', '.'), ('Srivastava', 'NNP'), (',', ','), ('N.', 'NNP'), (',', ','), ('Hinton', 'NNP'), (',', ','), ('G.', 'NNP'), (',', ','), ('Krizhevsky', 'NNP'), (',', ','), ('A.', 'NNP'), (',', ','), ('Sutskever', 'NNP'), (',', ','), ('I.', 'NNP'), ('&', 'CC'), ('Salakhutdinov', 'NNP'), (',', ','), ('R.', 'NNP'), ('Dropout', 'NNP'), (':', ':'), ('a', 'DT'), ('simple', 'JJ'), ('way', 'NN'), ('to', 'TO'), ('prevent', 'VB'), ('neural', 'JJ'), ('networks', 'NNS'), ('from', 'IN'), ('overfitting', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('62', '62'), ('.', '.'), ('Srivastava', 'Srivastava'), (',', ','), ('N.', 'N.'), (',', ','), ('Hinton', 'Hinton'), (',', ','), ('G.', 'G.'), (',', ','), ('Krizhevsky', 'Krizhevsky'), (',', ','), ('A.', 'A.'), (',', ','), ('Sutskever', 'Sutskever'), (',', ','), ('I.', 'i.'), ('&', '&'), ('Salakhutdinov', 'Salakhutdinov'), (',', ','), ('R.', 'R.'), ('Dropout', 'Dropout'), (':', ':'), ('a', 'a'), ('simple', 'simple'), ('way', 'way'), ('to', 'to'), ('prevent', 'prevent'), ('neural', 'neural'), ('networks', 'network'), ('from', 'from'), ('overfitting', 'overfitting'), ('.', '.')] 

 Dependency tags are: 
>> [(('62', 'Srivastava'), 'nummod'), (('.', '62'), 'punct'), (('Srivastava', 'root'), 'root'), ((',', 'N.'), 'punct'), (('N.', 'Srivastava'), 'conj'), ((',', 'Hinton'), 'punct'), (('Hinton', 'Srivastava'), 'conj'), ((',', 'G.'), 'punct'), (('G.', 'Srivastava'), 'conj'), ((',', 'Krizhevsky'), 'punct'), (('Krizhevsky', 'Srivastava'), 'conj'), ((',', 'A.'), 'punct'), (('A.', 'Srivastava'), 'conj'), ((',', 'Sutskever'), 'punct'), (('Sutskever', 'Srivastava'), 'conj'), ((',', 'I.'), 'punct'), (('I.', 'Srivastava'), 'conj'), (('&', 'Salakhutdinov'), 'cc'), (('Salakhutdinov', 'I.'), 'conj'), ((',', 'R.'), 'punct'), (('R.', 'Srivastava'), 'conj'), (('Dropout', 'R.'), 'flat'), ((':', 'way'), 'punct'), (('a', 'way'), 'det'), (('simple', 'way'), 'amod'), (('way', 'Srivastava'), 'appos'), (('to', 'prevent'), 'mark'), (('prevent', 'way'), 'acl'), (('neural', 'networks'), 'amod'), (('networks', 'prevent'), 'obj'), (('from', 'overfitting'), 'case'), (('overfitting', 'prevent'), 'obl'), (('.', 'way'), 'punct')]

 Named Entites are: 
>> [('62', 'CARDINAL'), ('N.', 'GPE'), ('Hinton', 'GPE'), ('G.', 'GPE'), ('Krizhevsky', 'GPE'), ('A.', 'GPE'), ('Sutskever', 'GPE'), ('Salakhutdinov', 'GPE'), ('R.  Dropout', 'GPE')]

------------------- Sentence 2 -------------------

 J. Machine  Learning Res. 15, 1929–1958 (2014). 

Tokens are: 
>> ['J.', 'Machine', 'Learning', 'Res.', '15', ',', '1929–1958', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('J.', 'PROPN'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('Res.', 'PROPN'), ('15', 'NUM'), (',', 'PUNCT'), ('1929–1958', 'NUM'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('J.', 'NNP'), ('Machine', 'NNP'), ('Learning', 'NNP'), ('Res.', 'NNP'), ('15', 'CD'), (',', ','), ('1929–1958', 'CD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('J.', 'J.'), ('Machine', 'Machine'), ('Learning', 'learning'), ('Res.', 'Res.'), ('15', '15'), (',', ','), ('1929–1958', '1929–1958'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('J.', 'root'), 'root'), (('Machine', 'J.'), 'flat'), (('Learning', 'J.'), 'flat'), (('Res.', 'J.'), 'list'), (('15', 'J.'), 'list'), ((',', '1929–1958'), 'punct'), (('1929–1958', '15'), 'nmod:tmod'), (('(', '2014'), 'punct'), (('2014', '1929–1958'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'J.'), 'punct')]

 Named Entites are: 
>> [('J. Machine  Learning Res. 15', 'ORG'), ('1929–1958', 'CARDINAL'), ('2014', 'DATE')]

================================ Paragraph 314 =================================

63. Sermanet, P. et al. Overfeat: integrated recognition, localization and detection  using convolutional networks. In Proc. International Conference on Learning  Representations http://arxiv.org/abs/1312.6229 (2014).  


------------------- Sentence 1 -------------------

 63. 

Tokens are: 
>> ['63', '.'] 

 UPOS tags are: 
>> [('63', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('63', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('63', '63'), ('.', '.')] 

 Dependency tags are: 
>> [(('63', 'root'), 'root'), (('.', '63'), 'punct')]

 Named Entites are: 
>> [('63', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Sermanet, P. et al. Overfeat: integrated recognition, localization and detection  using convolutional networks. 

Tokens are: 
>> ['Sermanet', ',', 'P.', 'et', 'al.', 'Overfeat', ':', 'integrated', 'recognition', ',', 'localization', 'and', 'detection', 'using', 'convolutional', 'networks', '.'] 

 UPOS tags are: 
>> [('Sermanet', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('et', 'X'), ('al.', 'X'), ('Overfeat', 'PROPN'), (':', 'PUNCT'), ('integrated', 'VERB'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('localization', 'NOUN'), ('and', 'CCONJ'), ('detection', 'NOUN'), ('using', 'VERB'), ('convolutional', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Sermanet', 'NNP'), (',', ','), ('P.', 'NNP'), ('et', 'FW'), ('al.', 'FW'), ('Overfeat', 'NNP'), (':', ':'), ('integrated', 'VBN'), ('recognition', 'NN'), (',', ','), ('localization', 'NN'), ('and', 'CC'), ('detection', 'NN'), ('using', 'VBG'), ('convolutional', 'JJ'), ('networks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Sermanet', 'Sermanet'), (',', ','), ('P.', 'P.'), ('et', 'et'), ('al.', 'al.'), ('Overfeat', 'Overfeat'), (':', ':'), ('integrated', 'integrate'), ('recognition', 'recognition'), (',', ','), ('localization', 'localization'), ('and', 'and'), ('detection', 'detection'), ('using', 'use'), ('convolutional', 'convolutional'), ('networks', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('Sermanet', 'root'), 'root'), ((',', 'P.'), 'punct'), (('P.', 'Sermanet'), 'conj'), (('et', 'al.'), 'cc'), (('al.', 'Sermanet'), 'conj'), (('Overfeat', 'al.'), 'flat'), ((':', 'recognition'), 'punct'), (('integrated', 'recognition'), 'amod'), (('recognition', 'Sermanet'), 'parataxis'), ((',', 'localization'), 'punct'), (('localization', 'recognition'), 'conj'), (('and', 'detection'), 'cc'), (('detection', 'recognition'), 'conj'), (('using', 'recognition'), 'acl'), (('convolutional', 'networks'), 'amod'), (('networks', 'using'), 'obj'), (('.', 'Sermanet'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 In Proc. International Conference on Learning  Representations http://arxiv.org/abs/1312.6229 (2014). 

Tokens are: 
>> ['In', 'Proc.', 'International', 'Conference', 'on', 'Learning', 'Representations', 'http://arxiv.org/abs/1312.6229', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('International', 'ADJ'), ('Conference', 'PROPN'), ('on', 'ADP'), ('Learning', 'PROPN'), ('Representations', 'PROPN'), ('http://arxiv.org/abs/1312.6229', 'X'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('International', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('Learning', 'NNP'), ('Representations', 'NNPS'), ('http://arxiv.org/abs/1312.6229', 'ADD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('International', 'International'), ('Conference', 'Conference'), ('on', 'on'), ('Learning', 'learning'), ('Representations', 'Representations'), ('http://arxiv.org/abs/1312.6229', 'http://arxiv.org/abs/1312.6229'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('International', 'Conference'), 'amod'), (('Conference', 'root'), 'root'), (('on', 'Representations'), 'case'), (('Learning', 'Representations'), 'compound'), (('Representations', 'Conference'), 'nmod'), (('http://arxiv.org/abs/1312.6229', 'Representations'), 'appos'), (('(', '2014'), 'punct'), (('2014', 'http://arxiv.org/abs/1312.6229'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('Proc. International Conference on Learning  Representations', 'EVENT'), ('2014', 'DATE')]

================================ Paragraph 315 =================================

64. Girshick, R., Donahue, J., Darrell, T. & Malik, J. Rich feature hierarchies for  accurate object detection and semantic segmentation. In Proc. Conference on  Computer Vision and Pattern Recognition 580–587 (2014).  


------------------- Sentence 1 -------------------

 64. Girshick, R., Donahue, J., Darrell, T. & Malik, J. Rich feature hierarchies for  accurate object detection and semantic segmentation. 

Tokens are: 
>> ['64', '.', 'Girshick', ',', 'R.', ',', 'Donahue', ',', 'J.', ',', 'Darrell', ',', 'T.', '&', 'Malik', ',', 'J.', 'Rich', 'feature', 'hierarchies', 'for', 'accurate', 'object', 'detection', 'and', 'semantic', 'segmentation', '.'] 

 UPOS tags are: 
>> [('64', 'NUM'), ('.', 'PUNCT'), ('Girshick', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), (',', 'PUNCT'), ('Donahue', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), (',', 'PUNCT'), ('Darrell', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), ('&', 'CCONJ'), ('Malik', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('Rich', 'ADJ'), ('feature', 'NOUN'), ('hierarchies', 'NOUN'), ('for', 'ADP'), ('accurate', 'ADJ'), ('object', 'NOUN'), ('detection', 'NOUN'), ('and', 'CCONJ'), ('semantic', 'ADJ'), ('segmentation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('64', 'LS'), ('.', '.'), ('Girshick', 'NNP'), (',', ','), ('R.', 'NNP'), (',', ','), ('Donahue', 'NNP'), (',', ','), ('J.', 'NNP'), (',', ','), ('Darrell', 'NNP'), (',', ','), ('T.', 'NNP'), ('&', 'CC'), ('Malik', 'NNP'), (',', ','), ('J.', 'NNP'), ('Rich', 'JJ'), ('feature', 'NN'), ('hierarchies', 'NNS'), ('for', 'IN'), ('accurate', 'JJ'), ('object', 'NN'), ('detection', 'NN'), ('and', 'CC'), ('semantic', 'JJ'), ('segmentation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('64', '64'), ('.', '.'), ('Girshick', 'Girshick'), (',', ','), ('R.', 'R.'), (',', ','), ('Donahue', 'Donahue'), (',', ','), ('J.', 'J.'), (',', ','), ('Darrell', 'Darrell'), (',', ','), ('T.', 'T.'), ('&', '&'), ('Malik', 'Malik'), (',', ','), ('J.', 'J.'), ('Rich', 'Rich'), ('feature', 'feature'), ('hierarchies', 'hierarchy'), ('for', 'for'), ('accurate', 'accurate'), ('object', 'object'), ('detection', 'detection'), ('and', 'and'), ('semantic', 'semantic'), ('segmentation', 'segmentation'), ('.', '.')] 

 Dependency tags are: 
>> [(('64', 'Girshick'), 'nummod'), (('.', '64'), 'punct'), (('Girshick', 'root'), 'root'), ((',', 'R.'), 'punct'), (('R.', 'Girshick'), 'conj'), ((',', 'Donahue'), 'punct'), (('Donahue', 'Girshick'), 'conj'), ((',', 'J.'), 'punct'), (('J.', 'Girshick'), 'conj'), ((',', 'Darrell'), 'punct'), (('Darrell', 'Girshick'), 'conj'), ((',', 'T.'), 'punct'), (('T.', 'Girshick'), 'conj'), (('&', 'Malik'), 'cc'), (('Malik', 'Girshick'), 'conj'), ((',', 'hierarchies'), 'punct'), (('J.', 'Girshick'), 'conj'), (('Rich', 'hierarchies'), 'amod'), (('feature', 'hierarchies'), 'compound'), (('hierarchies', 'Girshick'), 'conj'), (('for', 'detection'), 'case'), (('accurate', 'detection'), 'amod'), (('object', 'detection'), 'compound'), (('detection', 'hierarchies'), 'nmod'), (('and', 'segmentation'), 'cc'), (('semantic', 'segmentation'), 'amod'), (('segmentation', 'detection'), 'conj'), (('.', 'Girshick'), 'punct')]

 Named Entites are: 
>> [('64. Girshick, R., Donahue, J., Darrell, T. & Malik', 'ORG'), ('J. Rich', 'PERSON')]

------------------- Sentence 2 -------------------

 In Proc. Conference on  Computer Vision and Pattern Recognition 580–587 (2014). 

Tokens are: 
>> ['In', 'Proc.', 'Conference', 'on', 'Computer', 'Vision', 'and', 'Pattern', 'Recognition', '580–587', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('Conference', 'PROPN'), ('on', 'ADP'), ('Computer', 'PROPN'), ('Vision', 'PROPN'), ('and', 'CCONJ'), ('Pattern', 'PROPN'), ('Recognition', 'PROPN'), ('580–587', 'NUM'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('Computer', 'NNP'), ('Vision', 'NNP'), ('and', 'CC'), ('Pattern', 'NNP'), ('Recognition', 'NNP'), ('580–587', 'CD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('Conference', 'Conference'), ('on', 'on'), ('Computer', 'Computer'), ('Vision', 'Vision'), ('and', 'and'), ('Pattern', 'Pattern'), ('Recognition', 'recognition'), ('580–587', '580–587'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('Conference', 'root'), 'root'), (('on', 'Vision'), 'case'), (('Computer', 'Vision'), 'compound'), (('Vision', 'Conference'), 'nmod'), (('and', 'Recognition'), 'cc'), (('Pattern', 'Recognition'), 'compound'), (('Recognition', 'Vision'), 'conj'), (('580–587', 'Recognition'), 'nummod'), (('(', '2014'), 'punct'), (('2014', 'Recognition'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('Proc. Conference on  Computer Vision', 'ORG'), ('Pattern Recognition 580–587', 'WORK_OF_ART'), ('2014', 'DATE')]

================================ Paragraph 316 =================================

65. Simonyan, K. & Zisserman, A. Very deep convolutional networks for large-scale  image recognition. In Proc. International Conference on Learning Representations  http://arxiv.org/abs/1409.1556 (2014).  


------------------- Sentence 1 -------------------

 65. Simonyan, K. & Zisserman, A. Very deep convolutional networks for large-scale  image recognition. 

Tokens are: 
>> ['65', '.', 'Simonyan', ',', 'K.', '&', 'Zisserman', ',', 'A.', 'Very', 'deep', 'convolutional', 'networks', 'for', 'large', '-', 'scale', 'image', 'recognition', '.'] 

 UPOS tags are: 
>> [('65', 'NUM'), ('.', 'PUNCT'), ('Simonyan', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), ('&', 'CCONJ'), ('Zisserman', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('Very', 'ADV'), ('deep', 'ADJ'), ('convolutional', 'ADJ'), ('networks', 'NOUN'), ('for', 'ADP'), ('large', 'ADJ'), ('-', 'PUNCT'), ('scale', 'NOUN'), ('image', 'NOUN'), ('recognition', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('65', 'LS'), ('.', '.'), ('Simonyan', 'NNP'), (',', ','), ('K.', 'NNP'), ('&', 'CC'), ('Zisserman', 'NNP'), (',', ','), ('A.', 'NNP'), ('Very', 'RB'), ('deep', 'JJ'), ('convolutional', 'JJ'), ('networks', 'NNS'), ('for', 'IN'), ('large', 'JJ'), ('-', 'HYPH'), ('scale', 'NN'), ('image', 'NN'), ('recognition', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('65', '65'), ('.', '.'), ('Simonyan', 'Simonyan'), (',', ','), ('K.', 'K.'), ('&', '&'), ('Zisserman', 'Zisserman'), (',', ','), ('A.', 'A.'), ('Very', 'very'), ('deep', 'deep'), ('convolutional', 'convolutional'), ('networks', 'network'), ('for', 'for'), ('large', 'large'), ('-', '-'), ('scale', 'scale'), ('image', 'image'), ('recognition', 'recognition'), ('.', '.')] 

 Dependency tags are: 
>> [(('65', 'Simonyan'), 'nummod'), (('.', '65'), 'punct'), (('Simonyan', 'root'), 'root'), ((',', 'K.'), 'punct'), (('K.', 'Simonyan'), 'conj'), (('&', 'Zisserman'), 'cc'), (('Zisserman', 'Simonyan'), 'conj'), ((',', 'Simonyan'), 'punct'), (('A.', 'networks'), 'nmod:poss'), (('Very', 'deep'), 'advmod'), (('deep', 'networks'), 'amod'), (('convolutional', 'networks'), 'amod'), (('networks', 'Simonyan'), 'appos'), (('for', 'recognition'), 'case'), (('large', 'scale'), 'amod'), (('-', 'scale'), 'punct'), (('scale', 'recognition'), 'compound'), (('image', 'recognition'), 'compound'), (('recognition', 'networks'), 'nmod'), (('.', 'Simonyan'), 'punct')]

 Named Entites are: 
>> [('65', 'CARDINAL'), ('Simonyan, K. & Zisserman', 'ORG')]

------------------- Sentence 2 -------------------

 In Proc. International Conference on Learning Representations  http://arxiv.org/abs/1409.1556 (2014). 

Tokens are: 
>> ['In', 'Proc.', 'International', 'Conference', 'on', 'Learning', 'Representations', 'http://arxiv.org/abs/1409.1556', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('International', 'ADJ'), ('Conference', 'PROPN'), ('on', 'ADP'), ('Learning', 'PROPN'), ('Representations', 'PROPN'), ('http://arxiv.org/abs/1409.1556', 'X'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('International', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('Learning', 'NNP'), ('Representations', 'NNPS'), ('http://arxiv.org/abs/1409.1556', 'ADD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('International', 'International'), ('Conference', 'Conference'), ('on', 'on'), ('Learning', 'learning'), ('Representations', 'Representations'), ('http://arxiv.org/abs/1409.1556', 'http://arxiv.org/abs/1409.1556'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('International', 'Conference'), 'amod'), (('Conference', 'root'), 'root'), (('on', 'Representations'), 'case'), (('Learning', 'Representations'), 'compound'), (('Representations', 'Conference'), 'nmod'), (('http://arxiv.org/abs/1409.1556', 'Representations'), 'appos'), (('(', '2014'), 'punct'), (('2014', 'http://arxiv.org/abs/1409.1556'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('Proc. International Conference on Learning Representations', 'EVENT'), ('2014', 'DATE')]

================================ Paragraph 317 =================================

66. Boser, B., Sackinger, E., Bromley, J., LeCun, Y. & Jackel, L. An analog neural  network processor with programmable topology. J. Solid State Circuits 26,  2017–2025 (1991).  


------------------- Sentence 1 -------------------

 66. Boser, B., Sackinger, E., Bromley, J., LeCun, Y. & Jackel, L. An analog neural  network processor with programmable topology. 

Tokens are: 
>> ['66', '.', 'Boser', ',', 'B.', ',', 'Sackinger', ',', 'E.', ',', 'Bromley', ',', 'J.', ',', 'LeCun', ',', 'Y.', '&', 'Jackel', ',', 'L.', 'An', 'analog', 'neural', 'network', 'processor', 'with', 'programmable', 'topology', '.'] 

 UPOS tags are: 
>> [('66', 'NUM'), ('.', 'PUNCT'), ('Boser', 'PROPN'), (',', 'PUNCT'), ('B.', 'PROPN'), (',', 'PUNCT'), ('Sackinger', 'PROPN'), (',', 'PUNCT'), ('E.', 'PROPN'), (',', 'PUNCT'), ('Bromley', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), (',', 'PUNCT'), ('LeCun', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('&', 'CCONJ'), ('Jackel', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('An', 'DET'), ('analog', 'ADJ'), ('neural', 'ADJ'), ('network', 'NOUN'), ('processor', 'NOUN'), ('with', 'ADP'), ('programmable', 'ADJ'), ('topology', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('66', 'LS'), ('.', '.'), ('Boser', 'NNP'), (',', ','), ('B.', 'NNP'), (',', ','), ('Sackinger', 'NNP'), (',', ','), ('E.', 'NNP'), (',', ','), ('Bromley', 'NNP'), (',', ','), ('J.', 'NNP'), (',', ','), ('LeCun', 'NNP'), (',', ','), ('Y.', 'NNP'), ('&', 'CC'), ('Jackel', 'NNP'), (',', ','), ('L.', 'NNP'), ('An', 'DT'), ('analog', 'JJ'), ('neural', 'JJ'), ('network', 'NN'), ('processor', 'NN'), ('with', 'IN'), ('programmable', 'JJ'), ('topology', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('66', '66'), ('.', '.'), ('Boser', 'Boser'), (',', ','), ('B.', 'B.'), (',', ','), ('Sackinger', 'Sackinger'), (',', ','), ('E.', 'E.'), (',', ','), ('Bromley', 'Bromley'), (',', ','), ('J.', 'J.'), (',', ','), ('LeCun', 'LeCun'), (',', ','), ('Y.', 'Y.'), ('&', '&'), ('Jackel', 'Jackel'), (',', ','), ('L.', 'L.'), ('An', 'a'), ('analog', 'analog'), ('neural', 'neural'), ('network', 'network'), ('processor', 'processor'), ('with', 'with'), ('programmable', 'programmable'), ('topology', 'topology'), ('.', '.')] 

 Dependency tags are: 
>> [(('66', 'Boser'), 'nummod'), (('.', '66'), 'punct'), (('Boser', 'root'), 'root'), ((',', 'B.'), 'punct'), (('B.', 'Boser'), 'conj'), ((',', 'Sackinger'), 'punct'), (('Sackinger', 'Boser'), 'conj'), ((',', 'E.'), 'punct'), (('E.', 'Boser'), 'conj'), ((',', 'Bromley'), 'punct'), (('Bromley', 'Boser'), 'conj'), ((',', 'J.'), 'punct'), (('J.', 'Boser'), 'conj'), ((',', 'LeCun'), 'punct'), (('LeCun', 'Boser'), 'conj'), ((',', 'Y.'), 'punct'), (('Y.', 'Boser'), 'conj'), (('&', 'Jackel'), 'cc'), (('Jackel', 'Y.'), 'conj'), ((',', 'processor'), 'punct'), (('L.', 'Boser'), 'conj'), (('An', 'processor'), 'det'), (('analog', 'processor'), 'amod'), (('neural', 'network'), 'amod'), (('network', 'processor'), 'compound'), (('processor', 'Boser'), 'conj'), (('with', 'topology'), 'case'), (('programmable', 'topology'), 'amod'), (('topology', 'processor'), 'nmod'), (('.', 'processor'), 'punct')]

 Named Entites are: 
>> [('66. Boser, B., Sackinger, E., Bromley, J.', 'ORG'), ('LeCun', 'GPE'), ('Y. & Jackel', 'ORG')]

------------------- Sentence 2 -------------------

 J. Solid State Circuits 26,  2017–2025 (1991). 

Tokens are: 
>> ['J.', 'Solid', 'State', 'Circuits', '26', ',', '2017–2025', '(', '1991', ')', '.'] 

 UPOS tags are: 
>> [('J.', 'PROPN'), ('Solid', 'ADJ'), ('State', 'PROPN'), ('Circuits', 'PROPN'), ('26', 'NUM'), (',', 'PUNCT'), ('2017–2025', 'NUM'), ('(', 'PUNCT'), ('1991', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('J.', 'NNP'), ('Solid', 'NNP'), ('State', 'NNP'), ('Circuits', 'NNPS'), ('26', 'CD'), (',', ','), ('2017–2025', 'CD'), ('(', '-LRB-'), ('1991', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('J.', 'J.'), ('Solid', 'solid'), ('State', 'State'), ('Circuits', 'Circuits'), ('26', '26'), (',', ','), ('2017–2025', '2017–2025'), ('(', '('), ('1991', '1991'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('J.', 'Circuits'), 'compound'), (('Solid', 'State'), 'amod'), (('State', 'Circuits'), 'compound'), (('Circuits', 'root'), 'root'), (('26', 'Circuits'), 'nummod'), ((',', 'Circuits'), 'punct'), (('2017–2025', 'Circuits'), 'appos'), (('(', '1991'), 'punct'), (('1991', 'Circuits'), 'appos'), ((')', '1991'), 'punct'), (('.', 'Circuits'), 'punct')]

 Named Entites are: 
>> [('J. Solid State Circuits 26', 'ORG'), ('2017–2025', 'CARDINAL'), ('1991', 'DATE')]

================================ Paragraph 318 =================================

67. Farabet, C. et al. Large-scale FPGA-based convolutional networks. In Scaling  up Machine Learning: Parallel and Distributed Approaches (eds Bekkerman, R.,  Bilenko, M. & Langford, J.) 399–419 (Cambridge Univ. Press, 2011).  


------------------- Sentence 1 -------------------

 67. 

Tokens are: 
>> ['67', '.'] 

 UPOS tags are: 
>> [('67', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('67', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('67', '67'), ('.', '.')] 

 Dependency tags are: 
>> [(('67', 'root'), 'root'), (('.', '67'), 'punct')]

 Named Entites are: 
>> [('67', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Farabet, C. et al. Large-scale FPGA-based convolutional networks. 

Tokens are: 
>> ['Farabet', ',', 'C.', 'et', 'al.', 'Large-scale', 'FPGA', '-', 'based', 'convolutional', 'networks', '.'] 

 UPOS tags are: 
>> [('Farabet', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), ('et', 'X'), ('al.', 'X'), ('Large-scale', 'ADJ'), ('FPGA', 'PROPN'), ('-', 'PUNCT'), ('based', 'VERB'), ('convolutional', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Farabet', 'NNP'), (',', ','), ('C.', 'NNP'), ('et', 'FW'), ('al.', 'FW'), ('Large-scale', 'JJ'), ('FPGA', 'NNP'), ('-', 'HYPH'), ('based', 'VBN'), ('convolutional', 'JJ'), ('networks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Farabet', 'Farabet'), (',', ','), ('C.', 'C.'), ('et', 'et'), ('al.', 'al.'), ('Large-scale', 'large-scale'), ('FPGA', 'FPGA'), ('-', '-'), ('based', 'base'), ('convolutional', 'convolutional'), ('networks', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('Farabet', 'root'), 'root'), ((',', 'Farabet'), 'punct'), (('C.', 'Farabet'), 'conj'), (('et', 'al.'), 'cc'), (('al.', 'Farabet'), 'conj'), (('Large-scale', 'networks'), 'amod'), (('FPGA', 'based'), 'compound'), (('-', 'based'), 'punct'), (('based', 'networks'), 'amod'), (('convolutional', 'networks'), 'amod'), (('networks', 'Farabet'), 'appos'), (('.', 'Farabet'), 'punct')]

 Named Entites are: 
>> [('Farabet', 'ORG')]

------------------- Sentence 3 -------------------

 In Scaling  up Machine Learning: Parallel and Distributed Approaches (eds Bekkerman, R.,  Bilenko, M. & Langford, J.) 399–419 (Cambridge Univ. 

Tokens are: 
>> ['In', 'Scaling', 'up', 'Machine', 'Learning', ':', 'Parallel', 'and', 'Distributed', 'Approaches', '(', 'eds', 'Bekkerman', ',', 'R.', ',', 'Bilenko', ',', 'M.', '&', 'Langford', ',', 'J.', ')', '399–419', '(', 'Cambridge', 'Univ', '.'] 

 UPOS tags are: 
>> [('In', 'SCONJ'), ('Scaling', 'VERB'), ('up', 'ADP'), ('Machine', 'NOUN'), ('Learning', 'NOUN'), (':', 'PUNCT'), ('Parallel', 'ADJ'), ('and', 'CCONJ'), ('Distributed', 'VERB'), ('Approaches', 'NOUN'), ('(', 'PUNCT'), ('eds', 'NOUN'), ('Bekkerman', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), (',', 'PUNCT'), ('Bilenko', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('&', 'CCONJ'), ('Langford', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), (')', 'PUNCT'), ('399–419', 'NUM'), ('(', 'PUNCT'), ('Cambridge', 'PROPN'), ('Univ', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Scaling', 'VBG'), ('up', 'RP'), ('Machine', 'NN'), ('Learning', 'NN'), (':', ':'), ('Parallel', 'JJ'), ('and', 'CC'), ('Distributed', 'VBN'), ('Approaches', 'NNS'), ('(', '-LRB-'), ('eds', 'NN'), ('Bekkerman', 'NNP'), (',', ','), ('R.', 'NNP'), (',', ','), ('Bilenko', 'NNP'), (',', ','), ('M.', 'NNP'), ('&', 'CC'), ('Langford', 'NNP'), (',', ','), ('J.', 'NNP'), (')', '-RRB-'), ('399–419', 'CD'), ('(', '-LRB-'), ('Cambridge', 'NNP'), ('Univ', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Scaling', 'scale'), ('up', 'up'), ('Machine', 'Machine'), ('Learning', 'learning'), (':', ':'), ('Parallel', 'parallel'), ('and', 'and'), ('Distributed', 'distribute'), ('Approaches', 'approach'), ('(', '('), ('eds', 'eds'), ('Bekkerman', 'Bekkerman'), (',', ','), ('R.', 'R.'), (',', ','), ('Bilenko', 'Bilenko'), (',', ','), ('M.', 'M.'), ('&', '&'), ('Langford', 'Langford'), (',', ','), ('J.', 'J.'), (')', ')'), ('399–419', '399–419'), ('(', '('), ('Cambridge', 'Cambridge'), ('Univ', 'Univ'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Scaling'), 'mark'), (('Scaling', 'root'), 'root'), (('up', 'Scaling'), 'compound:prt'), (('Machine', 'Learning'), 'compound'), (('Learning', 'Scaling'), 'obj'), ((':', 'Approaches'), 'punct'), (('Parallel', 'Approaches'), 'amod'), (('and', 'Distributed'), 'cc'), (('Distributed', 'Parallel'), 'conj'), (('Approaches', 'Learning'), 'appos'), (('(', 'eds'), 'punct'), (('eds', 'Approaches'), 'appos'), (('Bekkerman', 'eds'), 'flat'), ((',', 'R.'), 'punct'), (('R.', 'Bekkerman'), 'conj'), ((',', 'Bilenko'), 'punct'), (('Bilenko', 'Bekkerman'), 'conj'), ((',', 'M.'), 'punct'), (('M.', 'Bekkerman'), 'conj'), (('&', 'Langford'), 'cc'), (('Langford', 'Bekkerman'), 'conj'), ((',', 'J.'), 'punct'), (('J.', 'eds'), 'conj'), ((')', 'J.'), 'punct'), (('399–419', 'eds'), 'conj'), (('(', 'Univ'), 'punct'), (('Cambridge', 'Univ'), 'compound'), (('Univ', 'eds'), 'conj'), (('.', 'Approaches'), 'punct')]

 Named Entites are: 
>> [('Bilenko', 'ORG'), ('M. & Langford', 'ORG'), ('399–419', 'CARDINAL'), ('Cambridge Univ', 'ORG')]

------------------- Sentence 4 -------------------

 Press, 2011). 

Tokens are: 
>> ['Press', ',', '2011', ')', '.'] 

 UPOS tags are: 
>> [('Press', 'PROPN'), (',', 'PUNCT'), ('2011', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Press', 'NNP'), (',', ','), ('2011', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Press', 'Press'), (',', ','), ('2011', '2011'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Press', 'root'), 'root'), ((',', '2011'), 'punct'), (('2011', 'Press'), 'nmod:tmod'), ((')', 'Press'), 'punct'), (('.', 'Press'), 'punct')]

 Named Entites are: 
>> [('2011', 'DATE')]

================================ Paragraph 319 =================================

68. Bengio, Y. Learning Deep Architectures for AI (Now, 2009).  69. Montufar, G. & Morton, J. When does a mixture of products contain a product of  


------------------- Sentence 1 -------------------

 68. Bengio, Y. Learning Deep Architectures for AI (Now, 2009). 

Tokens are: 
>> ['68', '.', 'Bengio', ',', 'Y.', 'Learning', 'Deep', 'Architectures', 'for', 'AI', '(', 'Now', ',', '2009', ')', '.'] 

 UPOS tags are: 
>> [('68', 'NUM'), ('.', 'PUNCT'), ('Bengio', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('Learning', 'PROPN'), ('Deep', 'ADJ'), ('Architectures', 'PROPN'), ('for', 'ADP'), ('AI', 'PROPN'), ('(', 'PUNCT'), ('Now', 'ADV'), (',', 'PUNCT'), ('2009', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('68', 'LS'), ('.', '.'), ('Bengio', 'NNP'), (',', ','), ('Y.', 'NNP'), ('Learning', 'NNP'), ('Deep', 'NNP'), ('Architectures', 'NNPS'), ('for', 'IN'), ('AI', 'NNP'), ('(', '-LRB-'), ('Now', 'RB'), (',', ','), ('2009', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('68', '68'), ('.', '.'), ('Bengio', 'Bengio'), (',', ','), ('Y.', 'Y.'), ('Learning', 'learning'), ('Deep', 'deep'), ('Architectures', 'Architecture'), ('for', 'for'), ('AI', 'AI'), ('(', '('), ('Now', 'now'), (',', ','), ('2009', '2009'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('68', 'Bengio'), 'nummod'), (('.', '68'), 'punct'), (('Bengio', 'root'), 'root'), ((',', 'Bengio'), 'punct'), (('Y.', 'Architectures'), 'compound'), (('Learning', 'Architectures'), 'compound'), (('Deep', 'Architectures'), 'amod'), (('Architectures', 'Bengio'), 'list'), (('for', 'AI'), 'case'), (('AI', 'Architectures'), 'nmod'), (('(', 'Now'), 'punct'), (('Now', 'Bengio'), 'advmod'), ((',', '2009'), 'punct'), (('2009', 'Now'), 'conj'), ((')', 'Now'), 'punct'), (('.', 'Bengio'), 'punct')]

 Named Entites are: 
>> [('68', 'CARDINAL'), ('Bengio, Y. Learning Deep Architectures', 'WORK_OF_ART'), ('2009', 'DATE')]

------------------- Sentence 2 -------------------

 69. 

Tokens are: 
>> ['69', '.'] 

 UPOS tags are: 
>> [('69', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('69', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('69', '69'), ('.', '.')] 

 Dependency tags are: 
>> [(('69', 'root'), 'root'), (('.', '69'), 'punct')]

 Named Entites are: 
>> [('69', 'CARDINAL')]

------------------- Sentence 3 -------------------

 Montufar, G. & Morton, J. When does a mixture of products contain a product of 

Tokens are: 
>> ['Montufar', ',', 'G.', '&', 'Morton', ',', 'J.', 'When', 'does', 'a', 'mixture', 'of', 'products', 'contain', 'a', 'product', 'of'] 

 UPOS tags are: 
>> [('Montufar', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('&', 'CCONJ'), ('Morton', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('When', 'SCONJ'), ('does', 'VERB'), ('a', 'DET'), ('mixture', 'NOUN'), ('of', 'ADP'), ('products', 'NOUN'), ('contain', 'VERB'), ('a', 'DET'), ('product', 'NOUN'), ('of', 'ADP')] 

 XPOS tags are: 
>> [('Montufar', 'NNP'), (',', ','), ('G.', 'NNP'), ('&', 'CC'), ('Morton', 'NNP'), (',', ','), ('J.', 'NNP'), ('When', 'WRB'), ('does', 'VBZ'), ('a', 'DT'), ('mixture', 'NN'), ('of', 'IN'), ('products', 'NNS'), ('contain', 'VB'), ('a', 'DT'), ('product', 'NN'), ('of', 'IN')] 

 Lemmas are: 
>> [('Montufar', 'Montufar'), (',', ','), ('G.', 'G.'), ('&', '&'), ('Morton', 'Morton'), (',', ','), ('J.', 'J.'), ('When', 'when'), ('does', 'do'), ('a', 'a'), ('mixture', 'mixture'), ('of', 'of'), ('products', 'product'), ('contain', 'contain'), ('a', 'a'), ('product', 'product'), ('of', 'of')] 

 Dependency tags are: 
>> [(('Montufar', 'root'), 'root'), ((',', 'G.'), 'punct'), (('G.', 'Montufar'), 'conj'), (('&', 'Morton'), 'cc'), (('Morton', 'Montufar'), 'conj'), ((',', 'Montufar'), 'punct'), (('J.', 'Montufar'), 'appos'), (('When', 'does'), 'mark'), (('does', 'Montufar'), 'parataxis'), (('a', 'mixture'), 'det'), (('mixture', 'does'), 'obj'), (('of', 'products'), 'case'), (('products', 'mixture'), 'nmod'), (('contain', 'does'), 'advcl'), (('a', 'product'), 'det'), (('product', 'contain'), 'obj'), (('of', 'contain'), 'obl')]

 Named Entites are: 
>> [('Montufar', 'ORG'), ('G. & Morton, J.', 'ORG')]

================================ Paragraph 320 =================================

mixtures? J. Discrete Math. 29, 321–347 (2014).  70. Montufar, G. F., Pascanu, R., Cho, K. & Bengio, Y. On the number of linear regions  


------------------- Sentence 1 -------------------

 mixtures? J. Discrete Math. 29, 321–347 (2014). 

Tokens are: 
>> ['mixtures', '?', 'J.', 'Discrete', 'Math.', '29', ',', '321–347', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('mixtures', 'NOUN'), ('?', 'PUNCT'), ('J.', 'PROPN'), ('Discrete', 'PROPN'), ('Math.', 'PROPN'), ('29', 'NUM'), (',', 'PUNCT'), ('321–347', 'NUM'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('mixtures', 'NNS'), ('?', '.'), ('J.', 'NNP'), ('Discrete', 'NNP'), ('Math.', 'NNP'), ('29', 'CD'), (',', ','), ('321–347', 'CD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('mixtures', 'mixture'), ('?', '?'), ('J.', 'J.'), ('Discrete', 'Discrete'), ('Math.', 'Math.'), ('29', '29'), (',', ','), ('321–347', '321–347'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('mixtures', 'root'), 'root'), (('?', 'mixtures'), 'punct'), (('J.', 'mixtures'), 'appos'), (('Discrete', 'J.'), 'flat'), (('Math.', '29'), 'compound'), (('29', 'J.'), 'list'), ((',', '321–347'), 'punct'), (('321–347', '29'), 'nmod:tmod'), (('(', '2014'), 'punct'), (('2014', '29'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'mixtures'), 'punct')]

 Named Entites are: 
>> [('J. Discrete Math. 29', 'WORK_OF_ART'), ('321–347', 'CARDINAL'), ('2014', 'DATE')]

------------------- Sentence 2 -------------------

 70. Montufar, G. F., Pascanu, R., Cho, K. & Bengio, Y. 

Tokens are: 
>> ['70', '.', 'Montufar', ',', 'G.', 'F.', ',', 'Pascanu', ',', 'R.', ',', 'Cho', ',', 'K.', '&', 'Bengio', ',', 'Y.'] 

 UPOS tags are: 
>> [('70', 'NUM'), ('.', 'PUNCT'), ('Montufar', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('F.', 'PROPN'), (',', 'PUNCT'), ('Pascanu', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), (',', 'PUNCT'), ('Cho', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), ('&', 'CCONJ'), ('Bengio', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN')] 

 XPOS tags are: 
>> [('70', 'LS'), ('.', '.'), ('Montufar', 'NNP'), (',', ','), ('G.', 'NNP'), ('F.', 'NNP'), (',', ','), ('Pascanu', 'NNP'), (',', ','), ('R.', 'NNP'), (',', ','), ('Cho', 'NNP'), (',', ','), ('K.', 'NNP'), ('&', 'CC'), ('Bengio', 'NNP'), (',', ','), ('Y.', 'NNP')] 

 Lemmas are: 
>> [('70', '70'), ('.', '.'), ('Montufar', 'Montufar'), (',', ','), ('G.', 'G.'), ('F.', 'F.'), (',', ','), ('Pascanu', 'Pascanu'), (',', ','), ('R.', 'R.'), (',', ','), ('Cho', 'Cho'), (',', ','), ('K.', 'K.'), ('&', '&'), ('Bengio', 'Bengio'), (',', ','), ('Y.', 'Y.')] 

 Dependency tags are: 
>> [(('70', 'Montufar'), 'nummod'), (('.', '70'), 'punct'), (('Montufar', 'root'), 'root'), ((',', 'G.'), 'punct'), (('G.', 'Montufar'), 'conj'), (('F.', 'Montufar'), 'flat'), ((',', 'Pascanu'), 'punct'), (('Pascanu', 'Montufar'), 'conj'), ((',', 'R.'), 'punct'), (('R.', 'Montufar'), 'conj'), ((',', 'Cho'), 'punct'), (('Cho', 'Montufar'), 'conj'), ((',', 'K.'), 'punct'), (('K.', 'Montufar'), 'conj'), (('&', 'Bengio'), 'cc'), (('Bengio', 'K.'), 'conj'), ((',', 'Y.'), 'punct'), (('Y.', 'Montufar'), 'conj')]

 Named Entites are: 
>> [('70', 'CARDINAL'), ('G. F.', 'PERSON'), ('Pascanu', 'GPE'), ('R.', 'NORP'), ('Cho', 'PERSON'), ('K. & Bengio', 'PERSON')]

------------------- Sentence 3 -------------------

 On the number of linear regions 

Tokens are: 
>> ['On', 'the', 'number', 'of', 'linear', 'regions'] 

 UPOS tags are: 
>> [('On', 'ADP'), ('the', 'DET'), ('number', 'NOUN'), ('of', 'ADP'), ('linear', 'ADJ'), ('regions', 'NOUN')] 

 XPOS tags are: 
>> [('On', 'IN'), ('the', 'DT'), ('number', 'NN'), ('of', 'IN'), ('linear', 'JJ'), ('regions', 'NNS')] 

 Lemmas are: 
>> [('On', 'on'), ('the', 'the'), ('number', 'number'), ('of', 'of'), ('linear', 'linear'), ('regions', 'region')] 

 Dependency tags are: 
>> [(('On', 'number'), 'case'), (('the', 'number'), 'det'), (('number', 'root'), 'root'), (('of', 'regions'), 'case'), (('linear', 'regions'), 'amod'), (('regions', 'number'), 'nmod')]

 Named Entites are: 
>> []

================================ Paragraph 321 =================================

of deep neural networks. In Proc. Advances in Neural Information Processing  Systems 27 2924–2932 (2014).  


------------------- Sentence 1 -------------------

 of deep neural networks. 

Tokens are: 
>> ['of', 'deep', 'neural', 'networks', '.'] 

 UPOS tags are: 
>> [('of', 'ADP'), ('deep', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('of', 'IN'), ('deep', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('of', 'of'), ('deep', 'deep'), ('neural', 'neural'), ('networks', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('of', 'networks'), 'case'), (('deep', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'root'), 'root'), (('.', 'networks'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 In Proc. Advances in Neural Information Processing  Systems 27 2924–2932 (2014). 

Tokens are: 
>> ['In', 'Proc.', 'Advances', 'in', 'Neural', 'Information', 'Processing', 'Systems', '27', '2924–2932', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'NOUN'), ('Advances', 'NOUN'), ('in', 'ADP'), ('Neural', 'ADJ'), ('Information', 'NOUN'), ('Processing', 'NOUN'), ('Systems', 'NOUN'), ('27', 'NUM'), ('2924–2932', 'NUM'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NN'), ('Advances', 'NNS'), ('in', 'IN'), ('Neural', 'JJ'), ('Information', 'NN'), ('Processing', 'NN'), ('Systems', 'NNS'), ('27', 'CD'), ('2924–2932', 'CD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'proc.'), ('Advances', 'advance'), ('in', 'in'), ('Neural', 'neural'), ('Information', 'information'), ('Processing', 'processing'), ('Systems', 'system'), ('27', '27'), ('2924–2932', '2924–2932'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Advances'), 'case'), (('Proc.', 'Advances'), 'compound'), (('Advances', 'root'), 'root'), (('in', 'Systems'), 'case'), (('Neural', 'Information'), 'amod'), (('Information', 'Systems'), 'compound'), (('Processing', 'Systems'), 'compound'), (('Systems', 'Advances'), 'nmod'), (('27', 'Systems'), 'nummod'), (('2924–2932', '27'), 'flat'), (('(', '2014'), 'punct'), (('2014', 'Systems'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'Advances'), 'punct')]

 Named Entites are: 
>> [('Neural Information Processing  Systems', 'ORG'), ('27', 'CARDINAL'), ('2924–2932', 'CARDINAL'), ('2014', 'DATE')]

================================ Paragraph 322 =================================

71. Bengio, Y., Ducharme, R. & Vincent, P. A neural probabilistic language model. In  Proc. Advances in Neural Information Processing Systems 13 932–938 (2001).  


------------------- Sentence 1 -------------------

 71. 

Tokens are: 
>> ['71', '.'] 

 UPOS tags are: 
>> [('71', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('71', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('71', '71'), ('.', '.')] 

 Dependency tags are: 
>> [(('71', 'root'), 'root'), (('.', '71'), 'punct')]

 Named Entites are: 
>> [('71', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Bengio, Y., Ducharme, R. & Vincent, P. A neural probabilistic language model. 

Tokens are: 
>> ['Bengio', ',', 'Y.', ',', 'Ducharme', ',', 'R.', '&', 'Vincent', ',', 'P.', 'A', 'neural', 'probabilistic', 'language', 'model', '.'] 

 UPOS tags are: 
>> [('Bengio', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), (',', 'PUNCT'), ('Ducharme', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('&', 'CCONJ'), ('Vincent', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('A', 'DET'), ('neural', 'ADJ'), ('probabilistic', 'ADJ'), ('language', 'NOUN'), ('model', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Bengio', 'NNP'), (',', ','), ('Y.', 'NNP'), (',', ','), ('Ducharme', 'NNP'), (',', ','), ('R.', 'NNP'), ('&', 'CC'), ('Vincent', 'NNP'), (',', ','), ('P.', 'NNP'), ('A', 'DT'), ('neural', 'JJ'), ('probabilistic', 'JJ'), ('language', 'NN'), ('model', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Bengio', 'Bengio'), (',', ','), ('Y.', 'Y.'), (',', ','), ('Ducharme', 'Ducharme'), (',', ','), ('R.', 'R.'), ('&', '&'), ('Vincent', 'Vincent'), (',', ','), ('P.', 'P.'), ('A', 'a'), ('neural', 'neural'), ('probabilistic', 'probabilistic'), ('language', 'language'), ('model', 'model'), ('.', '.')] 

 Dependency tags are: 
>> [(('Bengio', 'root'), 'root'), ((',', 'Y.'), 'punct'), (('Y.', 'Bengio'), 'conj'), ((',', 'Ducharme'), 'punct'), (('Ducharme', 'Bengio'), 'conj'), ((',', 'R.'), 'punct'), (('R.', 'Bengio'), 'conj'), (('&', 'Vincent'), 'cc'), (('Vincent', 'Bengio'), 'conj'), ((',', 'Bengio'), 'punct'), (('P.', 'Bengio'), 'conj'), (('A', 'model'), 'det'), (('neural', 'model'), 'amod'), (('probabilistic', 'model'), 'amod'), (('language', 'model'), 'compound'), (('model', 'Bengio'), 'appos'), (('.', 'Bengio'), 'punct')]

 Named Entites are: 
>> [('Bengio, Y.', 'ORG'), ('Ducharme', 'GPE'), ('R. & Vincent', 'ORG')]

------------------- Sentence 3 -------------------

 In  Proc. Advances in Neural Information Processing Systems 13 932–938 (2001). 

Tokens are: 
>> ['In', 'Proc.', 'Advances', 'in', 'Neural', 'Information', 'Processing', 'Systems', '13', '932–938', '(', '2001', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'NOUN'), ('Advances', 'NOUN'), ('in', 'ADP'), ('Neural', 'ADJ'), ('Information', 'NOUN'), ('Processing', 'NOUN'), ('Systems', 'NOUN'), ('13', 'NUM'), ('932–938', 'NUM'), ('(', 'PUNCT'), ('2001', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NN'), ('Advances', 'NNS'), ('in', 'IN'), ('Neural', 'JJ'), ('Information', 'NN'), ('Processing', 'NN'), ('Systems', 'NNS'), ('13', 'CD'), ('932–938', 'CD'), ('(', '-LRB-'), ('2001', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'proc.'), ('Advances', 'advance'), ('in', 'in'), ('Neural', 'neural'), ('Information', 'information'), ('Processing', 'processing'), ('Systems', 'system'), ('13', '13'), ('932–938', '932–938'), ('(', '('), ('2001', '2001'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Advances'), 'case'), (('Proc.', 'Advances'), 'compound'), (('Advances', 'root'), 'root'), (('in', 'Systems'), 'case'), (('Neural', 'Information'), 'amod'), (('Information', 'Systems'), 'compound'), (('Processing', 'Systems'), 'compound'), (('Systems', 'Advances'), 'nmod'), (('13', '932–938'), 'compound'), (('932–938', 'Systems'), 'nummod'), (('(', '2001'), 'punct'), (('2001', '932–938'), 'nmod'), ((')', '2001'), 'punct'), (('.', 'Advances'), 'punct')]

 Named Entites are: 
>> [('Neural Information Processing Systems', 'ORG'), ('13', 'CARDINAL'), ('932–938', 'CARDINAL'), ('2001', 'DATE')]

================================ Paragraph 323 =================================

 This paper introduced neural language models, which learn to convert a word  symbol into a word vector or word embedding composed of learned semantic  features in order to predict the next word in a sequence. 


------------------- Sentence 1 -------------------

 This paper introduced neural language models, which learn to convert a word  symbol into a word vector or word embedding composed of learned semantic  features in order to predict the next word in a sequence. 

Tokens are: 
>> ['This', 'paper', 'introduced', 'neural', 'language', 'models', ',', 'which', 'learn', 'to', 'convert', 'a', 'word', 'symbol', 'into', 'a', 'word', 'vector', 'or', 'word', 'embedding', 'composed', 'of', 'learned', 'semantic', 'features', 'in', 'order', 'to', 'predict', 'the', 'next', 'word', 'in', 'a', 'sequence', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('paper', 'NOUN'), ('introduced', 'VERB'), ('neural', 'ADJ'), ('language', 'NOUN'), ('models', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('learn', 'VERB'), ('to', 'PART'), ('convert', 'VERB'), ('a', 'DET'), ('word', 'NOUN'), ('symbol', 'NOUN'), ('into', 'ADP'), ('a', 'DET'), ('word', 'NOUN'), ('vector', 'NOUN'), ('or', 'CCONJ'), ('word', 'NOUN'), ('embedding', 'NOUN'), ('composed', 'VERB'), ('of', 'ADP'), ('learned', 'VERB'), ('semantic', 'ADJ'), ('features', 'NOUN'), ('in', 'ADP'), ('order', 'NOUN'), ('to', 'PART'), ('predict', 'VERB'), ('the', 'DET'), ('next', 'ADJ'), ('word', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('sequence', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('paper', 'NN'), ('introduced', 'VBD'), ('neural', 'JJ'), ('language', 'NN'), ('models', 'NNS'), (',', ','), ('which', 'WDT'), ('learn', 'VBP'), ('to', 'TO'), ('convert', 'VB'), ('a', 'DT'), ('word', 'NN'), ('symbol', 'NN'), ('into', 'IN'), ('a', 'DT'), ('word', 'NN'), ('vector', 'NN'), ('or', 'CC'), ('word', 'NN'), ('embedding', 'NN'), ('composed', 'VBN'), ('of', 'IN'), ('learned', 'VBN'), ('semantic', 'JJ'), ('features', 'NNS'), ('in', 'IN'), ('order', 'NN'), ('to', 'TO'), ('predict', 'VB'), ('the', 'DT'), ('next', 'JJ'), ('word', 'NN'), ('in', 'IN'), ('a', 'DT'), ('sequence', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('paper', 'paper'), ('introduced', 'introduce'), ('neural', 'neural'), ('language', 'language'), ('models', 'model'), (',', ','), ('which', 'which'), ('learn', 'learn'), ('to', 'to'), ('convert', 'convert'), ('a', 'a'), ('word', 'word'), ('symbol', 'symbol'), ('into', 'into'), ('a', 'a'), ('word', 'word'), ('vector', 'vector'), ('or', 'or'), ('word', 'word'), ('embedding', 'embed'), ('composed', 'compose'), ('of', 'of'), ('learned', 'learn'), ('semantic', 'semantic'), ('features', 'feature'), ('in', 'in'), ('order', 'order'), ('to', 'to'), ('predict', 'predict'), ('the', 'the'), ('next', 'next'), ('word', 'word'), ('in', 'in'), ('a', 'a'), ('sequence', 'sequence'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'paper'), 'det'), (('paper', 'introduced'), 'nsubj'), (('introduced', 'root'), 'root'), (('neural', 'models'), 'amod'), (('language', 'models'), 'compound'), (('models', 'introduced'), 'obj'), ((',', 'learn'), 'punct'), (('which', 'learn'), 'nsubj'), (('learn', 'models'), 'acl:relcl'), (('to', 'convert'), 'mark'), (('convert', 'learn'), 'xcomp'), (('a', 'symbol'), 'det'), (('word', 'convert'), 'obj'), (('symbol', 'convert'), 'obj'), (('into', 'vector'), 'case'), (('a', 'word'), 'det'), (('word', 'convert'), 'obl'), (('vector', 'convert'), 'obl'), (('or', 'embedding'), 'cc'), (('word', 'embedding'), 'compound'), (('embedding', 'vector'), 'conj'), (('composed', 'embedding'), 'acl'), (('of', 'features'), 'case'), (('learned', 'features'), 'amod'), (('semantic', 'features'), 'amod'), (('features', 'composed'), 'obl'), (('in', 'predict'), 'mark'), (('order', 'in'), 'fixed'), (('to', 'predict'), 'mark'), (('predict', 'convert'), 'advcl'), (('the', 'word'), 'det'), (('next', 'word'), 'amod'), (('word', 'predict'), 'obj'), (('in', 'sequence'), 'case'), (('a', 'sequence'), 'det'), (('sequence', 'word'), 'nmod'), (('.', 'introduced'), 'punct')]

 Named Entites are: 
>> []

================================ Paragraph 324 =================================

72. Cho, K. et al. Learning phrase representations using RNN encoder-decoder  


------------------- Sentence 1 -------------------

 72. 

Tokens are: 
>> ['72', '.'] 

 UPOS tags are: 
>> [('72', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('72', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('72', '72'), ('.', '.')] 

 Dependency tags are: 
>> [(('72', 'root'), 'root'), (('.', '72'), 'punct')]

 Named Entites are: 
>> [('72', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Cho, K. et al. 

Tokens are: 
>> ['Cho', ',', 'K.', 'et', 'al.'] 

 UPOS tags are: 
>> [('Cho', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), ('et', 'X'), ('al.', 'X')] 

 XPOS tags are: 
>> [('Cho', 'NNP'), (',', ','), ('K.', 'NNP'), ('et', 'FW'), ('al.', 'FW')] 

 Lemmas are: 
>> [('Cho', 'Cho'), (',', ','), ('K.', 'K.'), ('et', 'et'), ('al.', 'al.')] 

 Dependency tags are: 
>> [(('Cho', 'root'), 'root'), ((',', 'K.'), 'punct'), (('K.', 'Cho'), 'conj'), (('et', 'al.'), 'cc'), (('al.', 'Cho'), 'conj')]

 Named Entites are: 
>> [('Cho', 'PERSON')]

------------------- Sentence 3 -------------------

 Learning phrase representations using RNN encoder-decoder 

Tokens are: 
>> ['Learning', 'phrase', 'representations', 'using', 'RNN', 'encoder', '-', 'decoder'] 

 UPOS tags are: 
>> [('Learning', 'VERB'), ('phrase', 'NOUN'), ('representations', 'NOUN'), ('using', 'VERB'), ('RNN', 'NOUN'), ('encoder', 'NOUN'), ('-', 'PUNCT'), ('decoder', 'NOUN')] 

 XPOS tags are: 
>> [('Learning', 'VBG'), ('phrase', 'NN'), ('representations', 'NNS'), ('using', 'VBG'), ('RNN', 'NN'), ('encoder', 'NN'), ('-', 'HYPH'), ('decoder', 'NN')] 

 Lemmas are: 
>> [('Learning', 'learning'), ('phrase', 'phrase'), ('representations', 'representation'), ('using', 'use'), ('RNN', 'rnn'), ('encoder', 'encoder'), ('-', '-'), ('decoder', 'decoder')] 

 Dependency tags are: 
>> [(('Learning', 'root'), 'root'), (('phrase', 'representations'), 'compound'), (('representations', 'Learning'), 'obj'), (('using', 'representations'), 'acl'), (('RNN', 'decoder'), 'compound'), (('encoder', 'decoder'), 'compound'), (('-', 'decoder'), 'punct'), (('decoder', 'using'), 'obj')]

 Named Entites are: 
>> []

================================ Paragraph 325 =================================

2 8  M A Y  2 0 1 5  |  V O L  5 2 1  |  N A T U R E  |  4 4 3 


------------------- Sentence 1 -------------------

 2 8  M A Y  2 0 1 5  |  V O L  5 2 1  |  N A T U R E  |  4 4 3 

Tokens are: 
>> ['2', '8', 'M', 'A', 'Y', '2', '0', '1', '5', '|', 'V', 'O', 'L', '5', '2', '1', '|', 'N', 'A', 'T', 'U', 'R', 'E', '|', '4', '4', '3'] 

 UPOS tags are: 
>> [('2', 'NUM'), ('8', 'NUM'), ('M', 'NOUN'), ('A', 'NUM'), ('Y', 'NOUN'), ('2', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('5', 'NUM'), ('|', 'SYM'), ('V', 'NOUN'), ('O', 'NOUN'), ('L', 'SYM'), ('5', 'NUM'), ('2', 'NUM'), ('1', 'NUM'), ('|', 'SYM'), ('N', 'NOUN'), ('A', 'NUM'), ('T', 'NOUN'), ('U', 'NOUN'), ('R', 'NOUN'), ('E', 'NOUN'), ('|', 'PUNCT'), ('4', 'NUM'), ('4', 'NUM'), ('3', 'NUM')] 

 XPOS tags are: 
>> [('2', 'CD'), ('8', 'CD'), ('M', 'NN'), ('A', 'LS'), ('Y', 'NN'), ('2', 'CD'), ('0', 'CD'), ('1', 'CD'), ('5', 'CD'), ('|', 'SYM'), ('V', 'NN'), ('O', 'NNS'), ('L', 'SYM'), ('5', 'CD'), ('2', 'CD'), ('1', 'CD'), ('|', 'SYM'), ('N', 'NN'), ('A', 'CD'), ('T', 'NN'), ('U', 'NN'), ('R', 'NN'), ('E', 'NN'), ('|', ':'), ('4', 'CD'), ('4', 'CD'), ('3', 'CD')] 

 Lemmas are: 
>> [('2', '2'), ('8', '8'), ('M', 'm'), ('A', 'a'), ('Y', 'Y'), ('2', '2'), ('0', '0'), ('1', '1'), ('5', '5'), ('|', '|'), ('V', 'V'), ('O', 'o'), ('L', 'l'), ('5', '5'), ('2', '2'), ('1', '1'), ('|', '|'), ('N', 'N'), ('A', 'a'), ('T', 'T'), ('U', 'U'), ('R', 'R'), ('E', 'e'), ('|', '|'), ('4', '4'), ('4', '4'), ('3', '3')] 

 Dependency tags are: 
>> [(('2', 'M'), 'nummod'), (('8', 'M'), 'nummod'), (('M', 'root'), 'root'), (('A', 'M'), 'nummod'), (('Y', 'M'), 'appos'), (('2', 'Y'), 'nummod'), (('0', '2'), 'conj'), (('1', '2'), 'conj'), (('5', '1'), 'compound'), (('|', 'Y'), 'list'), (('V', 'O'), 'nummod'), (('O', '|'), 'appos'), (('L', 'O'), 'appos'), (('5', 'O'), 'nummod'), (('2', '5'), 'conj'), (('1', '2'), 'conj'), (('|', 'N'), 'compound'), (('N', '2'), 'conj'), (('A', 'T'), 'nummod'), (('T', 'N'), 'appos'), (('U', 'E'), 'compound'), (('R', 'E'), 'compound'), (('E', 'N'), 'appos'), (('|', '4'), 'punct'), (('4', 'E'), 'appos'), (('4', '4'), 'flat'), (('3', '4'), 'flat')]

 Named Entites are: 
>> [('4', 'CARDINAL'), ('4', 'CARDINAL')]

================================ Paragraph 326 =================================

REVIEW INSIGHT 


------------------- Sentence 1 -------------------

 REVIEW INSIGHT 

Tokens are: 
>> ['REVIEW', 'INSIGHT'] 

 UPOS tags are: 
>> [('REVIEW', 'NOUN'), ('INSIGHT', 'NOUN')] 

 XPOS tags are: 
>> [('REVIEW', 'NN'), ('INSIGHT', 'NN')] 

 Lemmas are: 
>> [('REVIEW', 'review'), ('INSIGHT', 'insight')] 

 Dependency tags are: 
>> [(('REVIEW', 'INSIGHT'), 'compound'), (('INSIGHT', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 327 =================================

© 2015 Macmillan Publishers Limited. All rights reserved


------------------- Sentence 1 -------------------

 © 2015 Macmillan Publishers Limited. 

Tokens are: 
>> ['©', '2015', 'Macmillan', 'Publishers', 'Limited', '.'] 

 UPOS tags are: 
>> [('©', 'ADP'), ('2015', 'NUM'), ('Macmillan', 'PROPN'), ('Publishers', 'PROPN'), ('Limited', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('©', 'IN'), ('2015', 'CD'), ('Macmillan', 'NNP'), ('Publishers', 'NNPS'), ('Limited', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('©', 'at'), ('2015', '2015'), ('Macmillan', 'Macmillan'), ('Publishers', 'Publisher'), ('Limited', 'Limited'), ('.', '.')] 

 Dependency tags are: 
>> [(('©', 'Limited'), 'case'), (('2015', 'Limited'), 'nummod'), (('Macmillan', 'Limited'), 'compound'), (('Publishers', 'Limited'), 'compound'), (('Limited', 'root'), 'root'), (('.', 'Limited'), 'punct')]

 Named Entites are: 
>> [('2015', 'DATE'), ('Macmillan Publishers Limited', 'ORG')]

------------------- Sentence 2 -------------------

 All rights reserved 

Tokens are: 
>> ['All', 'rights', 'reserved'] 

 UPOS tags are: 
>> [('All', 'DET'), ('rights', 'NOUN'), ('reserved', 'VERB')] 

 XPOS tags are: 
>> [('All', 'DT'), ('rights', 'NNS'), ('reserved', 'VBN')] 

 Lemmas are: 
>> [('All', 'all'), ('rights', 'rights'), ('reserved', 'reserve')] 

 Dependency tags are: 
>> [(('All', 'rights'), 'det'), (('rights', 'root'), 'root'), (('reserved', 'rights'), 'acl')]

 Named Entites are: 
>> []

================================ Paragraph 328 =================================

for statistical machine translation. In Proc. Conference on Empirical Methods in  Natural Language Processing 1724–1734 (2014).   


------------------- Sentence 1 -------------------

 for statistical machine translation. 

Tokens are: 
>> ['for', 'statistical', 'machine', 'translation', '.'] 

 UPOS tags are: 
>> [('for', 'ADP'), ('statistical', 'ADJ'), ('machine', 'NOUN'), ('translation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('for', 'IN'), ('statistical', 'JJ'), ('machine', 'NN'), ('translation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('for', 'for'), ('statistical', 'statistical'), ('machine', 'machine'), ('translation', 'translation'), ('.', '.')] 

 Dependency tags are: 
>> [(('for', 'translation'), 'case'), (('statistical', 'translation'), 'amod'), (('machine', 'translation'), 'compound'), (('translation', 'root'), 'root'), (('.', 'translation'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 In Proc. Conference on Empirical Methods in  Natural Language Processing 1724–1734 (2014). 

Tokens are: 
>> ['In', 'Proc.', 'Conference', 'on', 'Empirical', 'Methods', 'in', 'Natural', 'Language', 'Processing', '1724–1734', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('Conference', 'PROPN'), ('on', 'ADP'), ('Empirical', 'ADJ'), ('Methods', 'NOUN'), ('in', 'ADP'), ('Natural', 'ADJ'), ('Language', 'PROPN'), ('Processing', 'PROPN'), ('1724–1734', 'NUM'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('Empirical', 'JJ'), ('Methods', 'NNS'), ('in', 'IN'), ('Natural', 'JJ'), ('Language', 'NNP'), ('Processing', 'NNP'), ('1724–1734', 'CD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('Conference', 'Conference'), ('on', 'on'), ('Empirical', 'empirical'), ('Methods', 'method'), ('in', 'in'), ('Natural', 'Natural'), ('Language', 'Language'), ('Processing', 'processing'), ('1724–1734', '1724–1734'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('Conference', 'root'), 'root'), (('on', 'Methods'), 'case'), (('Empirical', 'Methods'), 'amod'), (('Methods', 'Conference'), 'nmod'), (('in', 'Language'), 'case'), (('Natural', 'Language'), 'amod'), (('Language', 'Methods'), 'nmod'), (('Processing', 'Language'), 'appos'), (('1724–1734', 'Processing'), 'flat'), (('(', '2014'), 'punct'), (('2014', 'Processing'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('1724–1734', 'CARDINAL'), ('2014', 'DATE')]

================================ Paragraph 329 =================================

73. Schwenk, H. Continuous space language models. Computer Speech Lang. 21,  492–518 (2007).  


------------------- Sentence 1 -------------------

 73. 

Tokens are: 
>> ['73', '.'] 

 UPOS tags are: 
>> [('73', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('73', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('73', '73'), ('.', '.')] 

 Dependency tags are: 
>> [(('73', 'root'), 'root'), (('.', '73'), 'punct')]

 Named Entites are: 
>> [('73', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Schwenk, H. Continuous space language models. 

Tokens are: 
>> ['Schwenk', ',', 'H.', 'Continuous', 'space', 'language', 'models', '.'] 

 UPOS tags are: 
>> [('Schwenk', 'PROPN'), (',', 'PUNCT'), ('H.', 'PROPN'), ('Continuous', 'ADJ'), ('space', 'NOUN'), ('language', 'NOUN'), ('models', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Schwenk', 'NNP'), (',', ','), ('H.', 'NNP'), ('Continuous', 'JJ'), ('space', 'NN'), ('language', 'NN'), ('models', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Schwenk', 'Schwenk'), (',', ','), ('H.', 'H.'), ('Continuous', 'continuous'), ('space', 'space'), ('language', 'language'), ('models', 'model'), ('.', '.')] 

 Dependency tags are: 
>> [(('Schwenk', 'root'), 'root'), ((',', 'Schwenk'), 'punct'), (('H.', 'models'), 'compound'), (('Continuous', 'models'), 'amod'), (('space', 'language'), 'compound'), (('language', 'models'), 'compound'), (('models', 'Schwenk'), 'appos'), (('.', 'Schwenk'), 'punct')]

 Named Entites are: 
>> [('Schwenk', 'ORG')]

------------------- Sentence 3 -------------------

 Computer Speech Lang. 21,  492–518 (2007). 

Tokens are: 
>> ['Computer', 'Speech', 'Lang.', '21', ',', '492–518', '(', '2007', ')', '.'] 

 UPOS tags are: 
>> [('Computer', 'PROPN'), ('Speech', 'PROPN'), ('Lang.', 'PROPN'), ('21', 'NUM'), (',', 'PUNCT'), ('492–518', 'NUM'), ('(', 'PUNCT'), ('2007', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Computer', 'NNP'), ('Speech', 'NNP'), ('Lang.', 'NNP'), ('21', 'CD'), (',', ','), ('492–518', 'CD'), ('(', '-LRB-'), ('2007', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Computer', 'Computer'), ('Speech', 'Speech'), ('Lang.', 'Lang.'), ('21', '21'), (',', ','), ('492–518', '492–518'), ('(', '('), ('2007', '2007'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Computer', 'Speech'), 'compound'), (('Speech', 'root'), 'root'), (('Lang.', 'Speech'), 'flat'), (('21', 'Speech'), 'dep'), ((',', '492–518'), 'punct'), (('492–518', '21'), 'nmod:tmod'), (('(', '2007'), 'punct'), (('2007', '492–518'), 'nmod:tmod'), ((')', '2007'), 'punct'), (('.', 'Speech'), 'punct')]

 Named Entites are: 
>> [('21', 'CARDINAL'), ('492–518', 'CARDINAL'), ('2007', 'DATE')]

================================ Paragraph 330 =================================

74. Socher, R., Lin, C. C-Y., Manning, C. & Ng, A. Y. Parsing natural scenes and  natural language with recursive neural networks. In Proc. International  Conference on Machine Learning 129–136 (2011).  


------------------- Sentence 1 -------------------

 74. Socher, R., Lin, C. C-Y., Manning, C. & Ng, A. Y. Parsing natural scenes and  natural language with recursive neural networks. 

Tokens are: 
>> ['74', '.', 'Socher', ',', 'R.', ',', 'Lin', ',', 'C.', 'C-Y.', ',', 'Manning', ',', 'C.', '&', 'Ng', ',', 'A.', 'Y.', 'Parsing', 'natural', 'scenes', 'and', 'natural', 'language', 'with', 'recursive', 'neural', 'networks', '.'] 

 UPOS tags are: 
>> [('74', 'NUM'), ('.', 'PUNCT'), ('Socher', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), (',', 'PUNCT'), ('Lin', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), ('C-Y.', 'PROPN'), (',', 'PUNCT'), ('Manning', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), ('&', 'CCONJ'), ('Ng', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('Y.', 'PROPN'), ('Parsing', 'VERB'), ('natural', 'ADJ'), ('scenes', 'NOUN'), ('and', 'CCONJ'), ('natural', 'ADJ'), ('language', 'NOUN'), ('with', 'ADP'), ('recursive', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('74', 'LS'), ('.', '.'), ('Socher', 'NNP'), (',', ','), ('R.', 'NNP'), (',', ','), ('Lin', 'NNP'), (',', ','), ('C.', 'NNP'), ('C-Y.', 'NNP'), (',', ','), ('Manning', 'NNP'), (',', ','), ('C.', 'NNP'), ('&', 'CC'), ('Ng', 'NNP'), (',', ','), ('A.', 'NNP'), ('Y.', 'NNP'), ('Parsing', 'VBG'), ('natural', 'JJ'), ('scenes', 'NNS'), ('and', 'CC'), ('natural', 'JJ'), ('language', 'NN'), ('with', 'IN'), ('recursive', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('74', '74'), ('.', '.'), ('Socher', 'Socher'), (',', ','), ('R.', 'R.'), (',', ','), ('Lin', 'Lin'), (',', ','), ('C.', 'C.'), ('C-Y.', 'C-Y.'), (',', ','), ('Manning', 'Manning'), (',', ','), ('C.', 'C.'), ('&', '&'), ('Ng', 'Ng'), (',', ','), ('A.', 'A.'), ('Y.', 'Y.'), ('Parsing', 'parse'), ('natural', 'natural'), ('scenes', 'scene'), ('and', 'and'), ('natural', 'natural'), ('language', 'language'), ('with', 'with'), ('recursive', 'recursive'), ('neural', 'neural'), ('networks', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('74', 'Socher'), 'nummod'), (('.', '74'), 'punct'), (('Socher', 'root'), 'root'), ((',', 'R.'), 'punct'), (('R.', 'Socher'), 'conj'), ((',', 'Lin'), 'punct'), (('Lin', 'Socher'), 'conj'), ((',', 'C-Y.'), 'punct'), (('C.', 'C-Y.'), 'compound'), (('C-Y.', 'Socher'), 'conj'), ((',', 'Manning'), 'punct'), (('Manning', 'Socher'), 'conj'), ((',', 'C.'), 'punct'), (('C.', 'Socher'), 'conj'), (('&', 'Ng'), 'cc'), (('Ng', 'C.'), 'conj'), ((',', 'A.'), 'punct'), (('A.', 'Socher'), 'conj'), (('Y.', 'A.'), 'flat'), (('Parsing', 'Socher'), 'conj'), (('natural', 'scenes'), 'amod'), (('scenes', 'Parsing'), 'obj'), (('and', 'language'), 'cc'), (('natural', 'language'), 'amod'), (('language', 'scenes'), 'conj'), (('with', 'networks'), 'case'), (('recursive', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'language'), 'nmod'), (('.', 'Socher'), 'punct')]

 Named Entites are: 
>> [('74', 'CARDINAL'), ('R.', 'NORP'), ('Lin', 'PERSON'), ('Manning', 'GPE')]

------------------- Sentence 2 -------------------

 In Proc. International  Conference on Machine Learning 129–136 (2011). 

Tokens are: 
>> ['In', 'Proc.', 'International', 'Conference', 'on', 'Machine', 'Learning', '129–136', '(', '2011', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('International', 'ADJ'), ('Conference', 'PROPN'), ('on', 'ADP'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('129–136', 'NUM'), ('(', 'PUNCT'), ('2011', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('International', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('Machine', 'NNP'), ('Learning', 'NNP'), ('129–136', 'CD'), ('(', '-LRB-'), ('2011', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('International', 'International'), ('Conference', 'Conference'), ('on', 'on'), ('Machine', 'Machine'), ('Learning', 'learning'), ('129–136', '129–136'), ('(', '('), ('2011', '2011'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('International', 'Conference'), 'amod'), (('Conference', 'root'), 'root'), (('on', 'Machine'), 'case'), (('Machine', 'Conference'), 'nmod'), (('Learning', 'Machine'), 'flat'), (('129–136', 'Learning'), 'nummod'), (('(', '2011'), 'punct'), (('2011', '129–136'), 'nmod:tmod'), ((')', '2011'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('Proc. International  Conference on Machine Learning 129–136', 'EVENT'), ('2011', 'DATE')]

================================ Paragraph 331 =================================

75. Mikolov, T., Sutskever, I., Chen, K., Corrado, G. & Dean, J. Distributed  representations of words and phrases and their compositionality. In Proc.  Advances in Neural Information Processing Systems 26 3111–3119 (2013).  


------------------- Sentence 1 -------------------

 75. Mikolov, T., Sutskever, I., Chen, K., Corrado, G. & Dean, J. Distributed  representations of words and phrases and their compositionality. 

Tokens are: 
>> ['75', '.', 'Mikolov', ',', 'T.', ',', 'Sutskever', ',', 'I.', ',', 'Chen', ',', 'K.', ',', 'Corrado', ',', 'G.', '&', 'Dean', ',', 'J.', 'Distributed', 'representations', 'of', 'words', 'and', 'phrases', 'and', 'their', 'compositionality', '.'] 

 UPOS tags are: 
>> [('75', 'NUM'), ('.', 'PUNCT'), ('Mikolov', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), (',', 'PUNCT'), ('Sutskever', 'PROPN'), (',', 'PUNCT'), ('I.', 'PROPN'), (',', 'PUNCT'), ('Chen', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), (',', 'PUNCT'), ('Corrado', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('&', 'CCONJ'), ('Dean', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('Distributed', 'VERB'), ('representations', 'NOUN'), ('of', 'ADP'), ('words', 'NOUN'), ('and', 'CCONJ'), ('phrases', 'NOUN'), ('and', 'CCONJ'), ('their', 'PRON'), ('compositionality', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('75', 'LS'), ('.', '.'), ('Mikolov', 'NNP'), (',', ','), ('T.', 'NNP'), (',', ','), ('Sutskever', 'NNP'), (',', ','), ('I.', 'NNP'), (',', ','), ('Chen', 'NNP'), (',', ','), ('K.', 'NNP'), (',', ','), ('Corrado', 'NNP'), (',', ','), ('G.', 'NNP'), ('&', 'CC'), ('Dean', 'NNP'), (',', ','), ('J.', 'NNP'), ('Distributed', 'VBN'), ('representations', 'NNS'), ('of', 'IN'), ('words', 'NNS'), ('and', 'CC'), ('phrases', 'NNS'), ('and', 'CC'), ('their', 'PRP$'), ('compositionality', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('75', '75'), ('.', '.'), ('Mikolov', 'Mikolov'), (',', ','), ('T.', 'T.'), (',', ','), ('Sutskever', 'Sutskever'), (',', ','), ('I.', 'i.'), (',', ','), ('Chen', 'Chen'), (',', ','), ('K.', 'K.'), (',', ','), ('Corrado', 'Corrado'), (',', ','), ('G.', 'G.'), ('&', '&'), ('Dean', 'Dean'), (',', ','), ('J.', 'J.'), ('Distributed', 'distribute'), ('representations', 'representation'), ('of', 'of'), ('words', 'word'), ('and', 'and'), ('phrases', 'phrase'), ('and', 'and'), ('their', 'they'), ('compositionality', 'compositionality'), ('.', '.')] 

 Dependency tags are: 
>> [(('75', 'Mikolov'), 'nummod'), (('.', '75'), 'punct'), (('Mikolov', 'root'), 'root'), ((',', 'T.'), 'punct'), (('T.', 'Mikolov'), 'conj'), ((',', 'Sutskever'), 'punct'), (('Sutskever', 'Mikolov'), 'conj'), ((',', 'I.'), 'punct'), (('I.', 'Mikolov'), 'conj'), ((',', 'Chen'), 'punct'), (('Chen', 'Mikolov'), 'conj'), ((',', 'K.'), 'punct'), (('K.', 'Mikolov'), 'conj'), ((',', 'Corrado'), 'punct'), (('Corrado', 'Mikolov'), 'conj'), ((',', 'G.'), 'punct'), (('G.', 'Mikolov'), 'conj'), (('&', 'Dean'), 'cc'), (('Dean', 'G.'), 'conj'), ((',', 'representations'), 'punct'), (('J.', 'Mikolov'), 'conj'), (('Distributed', 'representations'), 'amod'), (('representations', 'Mikolov'), 'conj'), (('of', 'words'), 'case'), (('words', 'representations'), 'nmod'), (('and', 'phrases'), 'cc'), (('phrases', 'words'), 'conj'), (('and', 'compositionality'), 'cc'), (('their', 'compositionality'), 'nmod:poss'), (('compositionality', 'words'), 'conj'), (('.', 'Distributed'), 'punct')]

 Named Entites are: 
>> [('75. Mikolov, T., Sutskever, I., Chen, K., Corrado, G. & Dean', 'ORG')]

------------------- Sentence 2 -------------------

 In Proc.  Advances in Neural Information Processing Systems 26 3111–3119 (2013). 

Tokens are: 
>> ['In', 'Proc.', 'Advances', 'in', 'Neural', 'Information', 'Processing', 'Systems', '26', '3111–3119', '(', '2013', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'NOUN'), ('Advances', 'NOUN'), ('in', 'ADP'), ('Neural', 'ADJ'), ('Information', 'NOUN'), ('Processing', 'NOUN'), ('Systems', 'NOUN'), ('26', 'NUM'), ('3111–3119', 'NUM'), ('(', 'PUNCT'), ('2013', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NN'), ('Advances', 'NNS'), ('in', 'IN'), ('Neural', 'JJ'), ('Information', 'NN'), ('Processing', 'NN'), ('Systems', 'NNS'), ('26', 'CD'), ('3111–3119', 'CD'), ('(', '-LRB-'), ('2013', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'proc.'), ('Advances', 'advance'), ('in', 'in'), ('Neural', 'neural'), ('Information', 'information'), ('Processing', 'processing'), ('Systems', 'system'), ('26', '26'), ('3111–3119', '3111–3119'), ('(', '('), ('2013', '2013'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Advances'), 'case'), (('Proc.', 'Advances'), 'compound'), (('Advances', 'root'), 'root'), (('in', 'Systems'), 'case'), (('Neural', 'Information'), 'amod'), (('Information', 'Systems'), 'compound'), (('Processing', 'Systems'), 'compound'), (('Systems', 'Advances'), 'nmod'), (('26', '3111–3119'), 'compound'), (('3111–3119', 'Systems'), 'appos'), (('(', '2013'), 'punct'), (('2013', 'Systems'), 'nmod:tmod'), ((')', '2013'), 'punct'), (('.', 'Advances'), 'punct')]

 Named Entites are: 
>> [('Neural Information Processing Systems', 'ORG'), ('26', 'CARDINAL'), ('3111–3119', 'CARDINAL'), ('2013', 'DATE')]

================================ Paragraph 332 =================================

76. Bahdanau, D., Cho, K. & Bengio, Y. Neural machine translation by jointly  learning to align and translate. In Proc. International Conference on Learning  Representations http://arxiv.org/abs/1409.0473 (2015). 


------------------- Sentence 1 -------------------

 76. Bahdanau, D., Cho, K. & Bengio, Y. Neural machine translation by jointly  learning to align and translate. 

Tokens are: 
>> ['76', '.', 'Bahdanau', ',', 'D.', ',', 'Cho', ',', 'K.', '&', 'Bengio', ',', 'Y.', 'Neural', 'machine', 'translation', 'by', 'jointly', 'learning', 'to', 'align', 'and', 'translate', '.'] 

 UPOS tags are: 
>> [('76', 'NUM'), ('.', 'PUNCT'), ('Bahdanau', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), (',', 'PUNCT'), ('Cho', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), ('&', 'CCONJ'), ('Bengio', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('Neural', 'ADJ'), ('machine', 'NOUN'), ('translation', 'NOUN'), ('by', 'SCONJ'), ('jointly', 'ADV'), ('learning', 'VERB'), ('to', 'PART'), ('align', 'VERB'), ('and', 'CCONJ'), ('translate', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('76', 'LS'), ('.', '.'), ('Bahdanau', 'NNP'), (',', ','), ('D.', 'NNP'), (',', ','), ('Cho', 'NNP'), (',', ','), ('K.', 'NNP'), ('&', 'CC'), ('Bengio', 'NNP'), (',', ','), ('Y.', 'NNP'), ('Neural', 'JJ'), ('machine', 'NN'), ('translation', 'NN'), ('by', 'IN'), ('jointly', 'RB'), ('learning', 'VBG'), ('to', 'TO'), ('align', 'VB'), ('and', 'CC'), ('translate', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('76', '76'), ('.', '.'), ('Bahdanau', 'Bahdanau'), (',', ','), ('D.', 'D.'), (',', ','), ('Cho', 'Cho'), (',', ','), ('K.', 'K.'), ('&', '&'), ('Bengio', 'Bengio'), (',', ','), ('Y.', 'Y.'), ('Neural', 'neural'), ('machine', 'machine'), ('translation', 'translation'), ('by', 'by'), ('jointly', 'jointly'), ('learning', 'learn'), ('to', 'to'), ('align', 'align'), ('and', 'and'), ('translate', 'translate'), ('.', '.')] 

 Dependency tags are: 
>> [(('76', 'Bahdanau'), 'nummod'), (('.', '76'), 'punct'), (('Bahdanau', 'root'), 'root'), ((',', 'D.'), 'punct'), (('D.', 'Bahdanau'), 'conj'), ((',', 'Cho'), 'punct'), (('Cho', 'Bahdanau'), 'conj'), ((',', 'K.'), 'punct'), (('K.', 'Bahdanau'), 'conj'), (('&', 'Bengio'), 'cc'), (('Bengio', 'K.'), 'conj'), ((',', 'Bahdanau'), 'punct'), (('Y.', 'translation'), 'compound'), (('Neural', 'machine'), 'amod'), (('machine', 'translation'), 'compound'), (('translation', 'Bahdanau'), 'appos'), (('by', 'learning'), 'mark'), (('jointly', 'learning'), 'advmod'), (('learning', 'translation'), 'acl'), (('to', 'align'), 'mark'), (('align', 'learning'), 'xcomp'), (('and', 'translate'), 'cc'), (('translate', 'align'), 'conj'), (('.', 'Bahdanau'), 'punct')]

 Named Entites are: 
>> [('76', 'CARDINAL'), ('Bahdanau', 'GPE'), ('D.', 'NORP'), ('Cho', 'PERSON'), ('K. & Bengio', 'ORG')]

------------------- Sentence 2 -------------------

 In Proc. International Conference on Learning  Representations http://arxiv.org/abs/1409.0473 (2015). 

Tokens are: 
>> ['In', 'Proc.', 'International', 'Conference', 'on', 'Learning', 'Representations', 'http://arxiv.org/abs/1409.0473', '(', '2015', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('International', 'ADJ'), ('Conference', 'PROPN'), ('on', 'ADP'), ('Learning', 'PROPN'), ('Representations', 'PROPN'), ('http://arxiv.org/abs/1409.0473', 'X'), ('(', 'PUNCT'), ('2015', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('International', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('Learning', 'NNP'), ('Representations', 'NNPS'), ('http://arxiv.org/abs/1409.0473', 'ADD'), ('(', '-LRB-'), ('2015', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('International', 'International'), ('Conference', 'Conference'), ('on', 'on'), ('Learning', 'learning'), ('Representations', 'Representations'), ('http://arxiv.org/abs/1409.0473', 'http://arxiv.org/abs/1409.0473'), ('(', '('), ('2015', '2015'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('International', 'Conference'), 'amod'), (('Conference', 'root'), 'root'), (('on', 'Representations'), 'case'), (('Learning', 'Representations'), 'compound'), (('Representations', 'Conference'), 'nmod'), (('http://arxiv.org/abs/1409.0473', 'Representations'), 'appos'), (('(', '2015'), 'punct'), (('2015', 'http://arxiv.org/abs/1409.0473'), 'nmod:tmod'), ((')', '2015'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('Proc. International Conference on Learning  Representations', 'EVENT'), ('2015', 'DATE')]

================================ Paragraph 333 =================================

77. Hochreiter, S. Untersuchungen zu dynamischen neuronalen Netzen [in  German] Diploma thesis, T.U. Münich (1991).  


------------------- Sentence 1 -------------------

 77. 

Tokens are: 
>> ['77', '.'] 

 UPOS tags are: 
>> [('77', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('77', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('77', '77'), ('.', '.')] 

 Dependency tags are: 
>> [(('77', 'root'), 'root'), (('.', '77'), 'punct')]

 Named Entites are: 
>> [('77', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Hochreiter, S. Untersuchungen zu dynamischen neuronalen Netzen [in  German] 

Tokens are: 
>> ['Hochreiter', ',', 'S.', 'Untersuchungen', 'zu', 'dynamischen', 'neuronalen', 'Netzen', '[', 'in', 'German', ']'] 

 UPOS tags are: 
>> [('Hochreiter', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('Untersuchungen', 'PROPN'), ('zu', 'PROPN'), ('dynamischen', 'PROPN'), ('neuronalen', 'PROPN'), ('Netzen', 'PROPN'), ('[', 'PUNCT'), ('in', 'ADP'), ('German', 'PROPN'), (']', 'PUNCT')] 

 XPOS tags are: 
>> [('Hochreiter', 'NNP'), (',', ','), ('S.', 'NNP'), ('Untersuchungen', 'NNP'), ('zu', 'NNP'), ('dynamischen', 'NNP'), ('neuronalen', 'NNP'), ('Netzen', 'NNP'), ('[', '-LRB-'), ('in', 'IN'), ('German', 'NNP'), (']', '-RRB-')] 

 Lemmas are: 
>> [('Hochreiter', 'Hochreiter'), (',', ','), ('S.', 'S.'), ('Untersuchungen', 'Untersuchungen'), ('zu', 'zu'), ('dynamischen', 'dynamischen'), ('neuronalen', 'neuronalen'), ('Netzen', 'Netzen'), ('[', '['), ('in', 'in'), ('German', 'German'), (']', ']')] 

 Dependency tags are: 
>> [(('Hochreiter', 'root'), 'root'), ((',', 'S.'), 'punct'), (('S.', 'Hochreiter'), 'flat'), (('Untersuchungen', 'S.'), 'flat'), (('zu', 'S.'), 'flat'), (('dynamischen', 'S.'), 'flat'), (('neuronalen', 'S.'), 'flat'), (('Netzen', 'Hochreiter'), 'flat'), (('[', 'German'), 'punct'), (('in', 'German'), 'case'), (('German', 'Hochreiter'), 'nmod'), ((']', 'German'), 'punct')]

 Named Entites are: 
>> [('Hochreiter', 'PERSON'), ('Netzen', 'NORP'), ('German', 'LANGUAGE')]

------------------- Sentence 3 -------------------

 Diploma thesis, T.U. Münich (1991). 

Tokens are: 
>> ['Diploma', 'thesis', ',', 'T.U.', 'Münich', '(', '1991', ')', '.'] 

 UPOS tags are: 
>> [('Diploma', 'NOUN'), ('thesis', 'NOUN'), (',', 'PUNCT'), ('T.U.', 'PROPN'), ('Münich', 'PROPN'), ('(', 'PUNCT'), ('1991', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Diploma', 'NN'), ('thesis', 'NN'), (',', ','), ('T.U.', 'NNP'), ('Münich', 'NNP'), ('(', '-LRB-'), ('1991', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Diploma', 'diploma'), ('thesis', 'thesis'), (',', ','), ('T.U.', 'T.U.'), ('Münich', 'Münich'), ('(', '('), ('1991', '1991'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Diploma', 'thesis'), 'compound'), (('thesis', 'root'), 'root'), ((',', 'T.U.'), 'punct'), (('T.U.', 'thesis'), 'appos'), (('Münich', 'T.U.'), 'flat'), (('(', '1991'), 'punct'), (('1991', 'T.U.'), 'nmod:tmod'), ((')', '1991'), 'punct'), (('.', 'thesis'), 'punct')]

 Named Entites are: 
>> [('T.U. Münich', 'WORK_OF_ART'), ('1991', 'DATE')]

================================ Paragraph 334 =================================

78. Bengio, Y., Simard, P. & Frasconi, P. Learning long-term dependencies with  gradient descent is difficult. IEEE Trans. Neural Networks 5, 157–166 (1994).  


------------------- Sentence 1 -------------------

 78. Bengio, Y., Simard, P. & Frasconi, P. Learning long-term dependencies with  gradient descent is difficult. 

Tokens are: 
>> ['78', '.', 'Bengio', ',', 'Y.', ',', 'Simard', ',', 'P.', '&', 'Frasconi', ',', 'P.', 'Learning', 'long', '-', 'term', 'dependencies', 'with', 'gradient', 'descent', 'is', 'difficult', '.'] 

 UPOS tags are: 
>> [('78', 'NUM'), ('.', 'PUNCT'), ('Bengio', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), (',', 'PUNCT'), ('Simard', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('&', 'CCONJ'), ('Frasconi', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('Learning', 'VERB'), ('long', 'ADJ'), ('-', 'PUNCT'), ('term', 'NOUN'), ('dependencies', 'NOUN'), ('with', 'ADP'), ('gradient', 'NOUN'), ('descent', 'NOUN'), ('is', 'AUX'), ('difficult', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('78', 'LS'), ('.', '.'), ('Bengio', 'NNP'), (',', ','), ('Y.', 'NNP'), (',', ','), ('Simard', 'NNP'), (',', ','), ('P.', 'NNP'), ('&', 'CC'), ('Frasconi', 'NNP'), (',', ','), ('P.', 'NNP'), ('Learning', 'VBG'), ('long', 'JJ'), ('-', 'HYPH'), ('term', 'NN'), ('dependencies', 'NNS'), ('with', 'IN'), ('gradient', 'NN'), ('descent', 'NN'), ('is', 'VBZ'), ('difficult', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('78', '78'), ('.', '.'), ('Bengio', 'Bengio'), (',', ','), ('Y.', 'Y.'), (',', ','), ('Simard', 'Simard'), (',', ','), ('P.', 'P.'), ('&', '&'), ('Frasconi', 'Frasconi'), (',', ','), ('P.', 'P.'), ('Learning', 'learning'), ('long', 'long'), ('-', '-'), ('term', 'term'), ('dependencies', 'dependency'), ('with', 'with'), ('gradient', 'gradient'), ('descent', 'descent'), ('is', 'be'), ('difficult', 'difficult'), ('.', '.')] 

 Dependency tags are: 
>> [(('78', 'difficult'), 'nummod'), (('.', '78'), 'punct'), (('Bengio', 'difficult'), 'nsubj'), ((',', 'Y.'), 'punct'), (('Y.', 'Bengio'), 'conj'), ((',', 'Simard'), 'punct'), (('Simard', 'Bengio'), 'conj'), ((',', 'P.'), 'punct'), (('P.', 'Bengio'), 'conj'), (('&', 'Frasconi'), 'cc'), (('Frasconi', 'P.'), 'conj'), ((',', 'Bengio'), 'punct'), (('P.', 'Learning'), 'compound'), (('Learning', 'dependencies'), 'amod'), (('long', 'term'), 'amod'), (('-', 'term'), 'punct'), (('term', 'dependencies'), 'compound'), (('dependencies', 'difficult'), 'nsubj'), (('with', 'descent'), 'case'), (('gradient', 'descent'), 'compound'), (('descent', 'dependencies'), 'nmod'), (('is', 'difficult'), 'cop'), (('difficult', 'root'), 'root'), (('.', 'difficult'), 'punct')]

 Named Entites are: 
>> [('78', 'CARDINAL'), ('Simard', 'GPE')]

------------------- Sentence 2 -------------------

 IEEE Trans. 

Tokens are: 
>> ['IEEE', 'Trans', '.'] 

 UPOS tags are: 
>> [('IEEE', 'PROPN'), ('Trans', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IEEE', 'NNP'), ('Trans', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('IEEE', 'IEEE'), ('Trans', 'Trans'), ('.', '.')] 

 Dependency tags are: 
>> [(('IEEE', 'Trans'), 'compound'), (('Trans', 'root'), 'root'), (('.', 'Trans'), 'punct')]

 Named Entites are: 
>> [('IEEE Trans', 'ORG')]

------------------- Sentence 3 -------------------

 Neural Networks 5, 157–166 (1994). 

Tokens are: 
>> ['Neural', 'Networks', '5', ',', '157–166', '(', '1994', ')', '.'] 

 UPOS tags are: 
>> [('Neural', 'ADJ'), ('Networks', 'PROPN'), ('5', 'NUM'), (',', 'PUNCT'), ('157–166', 'NUM'), ('(', 'PUNCT'), ('1994', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Neural', 'JJ'), ('Networks', 'NNPS'), ('5', 'CD'), (',', ','), ('157–166', 'CD'), ('(', '-LRB-'), ('1994', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Neural', 'neural'), ('Networks', 'Network'), ('5', '5'), (',', ','), ('157–166', '157–166'), ('(', '('), ('1994', '1994'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Neural', 'Networks'), 'amod'), (('Networks', 'root'), 'root'), (('5', 'Networks'), 'dep'), ((',', '157–166'), 'punct'), (('157–166', 'Networks'), 'list'), (('(', '1994'), 'punct'), (('1994', '157–166'), 'nmod:tmod'), ((')', '1994'), 'punct'), (('.', 'Networks'), 'punct')]

 Named Entites are: 
>> [('Neural Networks 5', 'ORG'), ('157–166 (1994', 'DATE')]

================================ Paragraph 335 =================================

79. Hochreiter, S. & Schmidhuber, J. Long short-term memory. Neural Comput. 9,  1735–1780 (1997).  


------------------- Sentence 1 -------------------

 79. 

Tokens are: 
>> ['79', '.'] 

 UPOS tags are: 
>> [('79', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('79', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('79', '79'), ('.', '.')] 

 Dependency tags are: 
>> [(('79', 'root'), 'root'), (('.', '79'), 'punct')]

 Named Entites are: 
>> [('79', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Hochreiter, S. & Schmidhuber, J. Long short-term memory. 

Tokens are: 
>> ['Hochreiter', ',', 'S.', '&', 'Schmidhuber', ',', 'J.', 'Long', 'short', '-', 'term', 'memory', '.'] 

 UPOS tags are: 
>> [('Hochreiter', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('&', 'CCONJ'), ('Schmidhuber', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('Long', 'ADJ'), ('short', 'ADJ'), ('-', 'PUNCT'), ('term', 'NOUN'), ('memory', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Hochreiter', 'NNP'), (',', ','), ('S.', 'NNP'), ('&', 'CC'), ('Schmidhuber', 'NNP'), (',', ','), ('J.', 'NNP'), ('Long', 'JJ'), ('short', 'JJ'), ('-', 'HYPH'), ('term', 'NN'), ('memory', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Hochreiter', 'Hochreiter'), (',', ','), ('S.', 'S.'), ('&', '&'), ('Schmidhuber', 'Schmidhuber'), (',', ','), ('J.', 'J.'), ('Long', 'Long'), ('short', 'short'), ('-', '-'), ('term', 'term'), ('memory', 'memory'), ('.', '.')] 

 Dependency tags are: 
>> [(('Hochreiter', 'root'), 'root'), ((',', 'S.'), 'punct'), (('S.', 'Hochreiter'), 'conj'), (('&', 'Schmidhuber'), 'cc'), (('Schmidhuber', 'Hochreiter'), 'conj'), ((',', 'Hochreiter'), 'punct'), (('J.', 'memory'), 'compound'), (('Long', 'memory'), 'amod'), (('short', 'term'), 'amod'), (('-', 'term'), 'punct'), (('term', 'memory'), 'compound'), (('memory', 'Hochreiter'), 'appos'), (('.', 'Hochreiter'), 'punct')]

 Named Entites are: 
>> [('Hochreiter', 'ORG'), ('S. & Schmidhuber', 'ORG'), ('J. Long', 'PERSON')]

------------------- Sentence 3 -------------------

 Neural Comput. 9,  1735–1780 (1997). 

Tokens are: 
>> ['Neural', 'Comput.', '9', ',', '1735–1780', '(', '1997', ')', '.'] 

 UPOS tags are: 
>> [('Neural', 'PROPN'), ('Comput.', 'PROPN'), ('9', 'NUM'), (',', 'PUNCT'), ('1735–1780', 'NUM'), ('(', 'PUNCT'), ('1997', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Neural', 'NNP'), ('Comput.', 'NNP'), ('9', 'CD'), (',', ','), ('1735–1780', 'CD'), ('(', '-LRB-'), ('1997', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Neural', 'Neural'), ('Comput.', 'Comput.'), ('9', '9'), (',', ','), ('1735–1780', '1735–1780'), ('(', '('), ('1997', '1997'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Neural', 'root'), 'root'), (('Comput.', '9'), 'compound'), (('9', 'Neural'), 'dep'), ((',', '1735–1780'), 'punct'), (('1735–1780', '9'), 'nmod:tmod'), (('(', '1997'), 'punct'), (('1997', '9'), 'nmod:tmod'), ((')', '1997'), 'punct'), (('.', 'Neural'), 'punct')]

 Named Entites are: 
>> [('9,  1735–1780 (1997', 'DATE')]

================================ Paragraph 336 =================================

 This paper introduced LSTM recurrent networks, which have become a crucial  ingredient in recent advances with recurrent networks because they are good  at learning long-range dependencies.  


------------------- Sentence 1 -------------------

 This paper introduced LSTM recurrent networks, which have become a crucial  ingredient in recent advances with recurrent networks because they are good  at learning long-range dependencies. 

Tokens are: 
>> ['This', 'paper', 'introduced', 'LSTM', 'recurrent', 'networks', ',', 'which', 'have', 'become', 'a', 'crucial', 'ingredient', 'in', 'recent', 'advances', 'with', 'recurrent', 'networks', 'because', 'they', 'are', 'good', 'at', 'learning', 'long', '-', 'range', 'dependencies', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('paper', 'NOUN'), ('introduced', 'VERB'), ('LSTM', 'PROPN'), ('recurrent', 'ADJ'), ('networks', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('have', 'AUX'), ('become', 'VERB'), ('a', 'DET'), ('crucial', 'ADJ'), ('ingredient', 'NOUN'), ('in', 'ADP'), ('recent', 'ADJ'), ('advances', 'NOUN'), ('with', 'ADP'), ('recurrent', 'ADJ'), ('networks', 'NOUN'), ('because', 'SCONJ'), ('they', 'PRON'), ('are', 'AUX'), ('good', 'ADJ'), ('at', 'SCONJ'), ('learning', 'VERB'), ('long', 'ADJ'), ('-', 'PUNCT'), ('range', 'NOUN'), ('dependencies', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('paper', 'NN'), ('introduced', 'VBD'), ('LSTM', 'NNP'), ('recurrent', 'JJ'), ('networks', 'NNS'), (',', ','), ('which', 'WDT'), ('have', 'VBP'), ('become', 'VBN'), ('a', 'DT'), ('crucial', 'JJ'), ('ingredient', 'NN'), ('in', 'IN'), ('recent', 'JJ'), ('advances', 'NNS'), ('with', 'IN'), ('recurrent', 'JJ'), ('networks', 'NNS'), ('because', 'IN'), ('they', 'PRP'), ('are', 'VBP'), ('good', 'JJ'), ('at', 'IN'), ('learning', 'VBG'), ('long', 'JJ'), ('-', 'HYPH'), ('range', 'NN'), ('dependencies', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('paper', 'paper'), ('introduced', 'introduce'), ('LSTM', 'LSTM'), ('recurrent', 'recurrent'), ('networks', 'network'), (',', ','), ('which', 'which'), ('have', 'have'), ('become', 'become'), ('a', 'a'), ('crucial', 'crucial'), ('ingredient', 'ingredient'), ('in', 'in'), ('recent', 'recent'), ('advances', 'advance'), ('with', 'with'), ('recurrent', 'recurrent'), ('networks', 'network'), ('because', 'because'), ('they', 'they'), ('are', 'be'), ('good', 'good'), ('at', 'at'), ('learning', 'learn'), ('long', 'long'), ('-', '-'), ('range', 'range'), ('dependencies', 'dependency'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'paper'), 'det'), (('paper', 'introduced'), 'nsubj'), (('introduced', 'root'), 'root'), (('LSTM', 'networks'), 'compound'), (('recurrent', 'networks'), 'amod'), (('networks', 'introduced'), 'obj'), ((',', 'become'), 'punct'), (('which', 'become'), 'nsubj'), (('have', 'become'), 'aux'), (('become', 'networks'), 'acl:relcl'), (('a', 'ingredient'), 'det'), (('crucial', 'ingredient'), 'amod'), (('ingredient', 'become'), 'xcomp'), (('in', 'advances'), 'case'), (('recent', 'advances'), 'amod'), (('advances', 'ingredient'), 'nmod'), (('with', 'networks'), 'case'), (('recurrent', 'networks'), 'amod'), (('networks', 'advances'), 'nmod'), (('because', 'good'), 'mark'), (('they', 'good'), 'nsubj'), (('are', 'good'), 'cop'), (('good', 'become'), 'advcl'), (('at', 'learning'), 'mark'), (('learning', 'good'), 'advcl'), (('long', 'range'), 'amod'), (('-', 'range'), 'punct'), (('range', 'dependencies'), 'compound'), (('dependencies', 'learning'), 'obj'), (('.', 'introduced'), 'punct')]

 Named Entites are: 
>> [('LSTM', 'ORG')]

================================ Paragraph 337 =================================

80. ElHihi, S. & Bengio, Y. Hierarchical recurrent neural networks for long-term  dependencies. In Proc. Advances in Neural Information Processing Systems 8  http://papers.nips.cc/paper/1102-hierarchical-recurrent-neural-networks-for- long-term-dependencies (1995).  


------------------- Sentence 1 -------------------

 80. ElHihi, S. & Bengio, Y. Hierarchical recurrent neural networks for long-term  dependencies. 

Tokens are: 
>> ['80', '.', 'ElHihi', ',', 'S.', '&', 'Bengio', ',', 'Y.', 'Hierarchical', 'recurrent', 'neural', 'networks', 'for', 'long', '-', 'term', 'dependencies', '.'] 

 UPOS tags are: 
>> [('80', 'NUM'), ('.', 'PUNCT'), ('ElHihi', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('&', 'CCONJ'), ('Bengio', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('Hierarchical', 'ADJ'), ('recurrent', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('for', 'ADP'), ('long', 'ADJ'), ('-', 'PUNCT'), ('term', 'NOUN'), ('dependencies', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('80', 'LS'), ('.', '.'), ('ElHihi', 'NNP'), (',', ','), ('S.', 'NNP'), ('&', 'CC'), ('Bengio', 'NNP'), (',', ','), ('Y.', 'NNP'), ('Hierarchical', 'JJ'), ('recurrent', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), ('for', 'IN'), ('long', 'JJ'), ('-', 'HYPH'), ('term', 'NN'), ('dependencies', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('80', '80'), ('.', '.'), ('ElHihi', 'ElHihi'), (',', ','), ('S.', 'S.'), ('&', '&'), ('Bengio', 'Bengio'), (',', ','), ('Y.', 'Y.'), ('Hierarchical', 'hierarchical'), ('recurrent', 'recurrent'), ('neural', 'neural'), ('networks', 'network'), ('for', 'for'), ('long', 'long'), ('-', '-'), ('term', 'term'), ('dependencies', 'dependency'), ('.', '.')] 

 Dependency tags are: 
>> [(('80', 'ElHihi'), 'nummod'), (('.', '80'), 'punct'), (('ElHihi', 'root'), 'root'), ((',', 'S.'), 'punct'), (('S.', 'ElHihi'), 'conj'), (('&', 'Bengio'), 'cc'), (('Bengio', 'ElHihi'), 'conj'), ((',', 'ElHihi'), 'punct'), (('Y.', 'networks'), 'compound'), (('Hierarchical', 'networks'), 'amod'), (('recurrent', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'ElHihi'), 'appos'), (('for', 'dependencies'), 'case'), (('long', 'term'), 'amod'), (('-', 'term'), 'punct'), (('term', 'dependencies'), 'compound'), (('dependencies', 'networks'), 'nmod'), (('.', 'ElHihi'), 'punct')]

 Named Entites are: 
>> [('80', 'CARDINAL'), ('ElHihi, S. & Bengio', 'ORG')]

------------------- Sentence 2 -------------------

 In Proc. Advances in Neural Information Processing Systems 8  http://papers.nips.cc/paper/1102-hierarchical-recurrent-neural-networks-for- long-term-dependencies (1995). 

Tokens are: 
>> ['In', 'Proc.', 'Advances', 'in', 'Neural', 'Information', 'Processing', 'Systems', '8', 'http://papers.nips.cc/paper/1102-hierarchical-recurrent-neural-networks-for-', 'long-term-dependencies', '(', '1995', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'NOUN'), ('Advances', 'NOUN'), ('in', 'ADP'), ('Neural', 'ADJ'), ('Information', 'NOUN'), ('Processing', 'NOUN'), ('Systems', 'NOUN'), ('8', 'NUM'), ('http://papers.nips.cc/paper/1102-hierarchical-recurrent-neural-networks-for-', 'X'), ('long-term-dependencies', 'NOUN'), ('(', 'PUNCT'), ('1995', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NN'), ('Advances', 'NNS'), ('in', 'IN'), ('Neural', 'JJ'), ('Information', 'NN'), ('Processing', 'NN'), ('Systems', 'NNS'), ('8', 'CD'), ('http://papers.nips.cc/paper/1102-hierarchical-recurrent-neural-networks-for-', 'ADD'), ('long-term-dependencies', 'NN'), ('(', '-LRB-'), ('1995', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'proc.'), ('Advances', 'advance'), ('in', 'in'), ('Neural', 'neural'), ('Information', 'information'), ('Processing', 'processing'), ('Systems', 'system'), ('8', '8'), ('http://papers.nips.cc/paper/1102-hierarchical-recurrent-neural-networks-for-', 'http://papers.nips.cc/paper/1102-hierarchical-recurrent-neural-networks-for-'), ('long-term-dependencies', 'long-term-dependency'), ('(', '('), ('1995', '1995'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Advances'), 'case'), (('Proc.', 'Advances'), 'compound'), (('Advances', 'long-term-dependencies'), 'nmod'), (('in', 'Systems'), 'case'), (('Neural', 'Information'), 'amod'), (('Information', 'Systems'), 'compound'), (('Processing', 'Systems'), 'compound'), (('Systems', 'Advances'), 'nmod'), (('8', 'Systems'), 'nummod'), (('http://papers.nips.cc/paper/1102-hierarchical-recurrent-neural-networks-for-', 'long-term-dependencies'), 'compound'), (('long-term-dependencies', 'root'), 'root'), (('(', '1995'), 'punct'), (('1995', 'long-term-dependencies'), 'nmod:tmod'), ((')', '1995'), 'punct'), (('.', 'long-term-dependencies'), 'punct')]

 Named Entites are: 
>> [('Proc. Advances in Neural Information Processing Systems 8', 'ORG'), ('1995', 'DATE')]

================================ Paragraph 338 =================================

81. Sutskever, I. Training Recurrent Neural Networks. PhD thesis, Univ. Toronto  (2012).  


------------------- Sentence 1 -------------------

 81. 

Tokens are: 
>> ['81', '.'] 

 UPOS tags are: 
>> [('81', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('81', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('81', '81'), ('.', '.')] 

 Dependency tags are: 
>> [(('81', 'root'), 'root'), (('.', '81'), 'punct')]

 Named Entites are: 
>> [('81', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Sutskever, I. Training Recurrent Neural Networks. 

Tokens are: 
>> ['Sutskever', ',', 'I.', 'Training', 'Recurrent', 'Neural', 'Networks', '.'] 

 UPOS tags are: 
>> [('Sutskever', 'PROPN'), (',', 'PUNCT'), ('I.', 'PROPN'), ('Training', 'VERB'), ('Recurrent', 'ADJ'), ('Neural', 'ADJ'), ('Networks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Sutskever', 'NNP'), (',', ','), ('I.', 'NNP'), ('Training', 'VBG'), ('Recurrent', 'JJ'), ('Neural', 'JJ'), ('Networks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Sutskever', 'Sutskever'), (',', ','), ('I.', 'i.'), ('Training', 'train'), ('Recurrent', 'recurrent'), ('Neural', 'neural'), ('Networks', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('Sutskever', 'root'), 'root'), ((',', 'Sutskever'), 'punct'), (('I.', 'Sutskever'), 'appos'), (('Training', 'Sutskever'), 'parataxis'), (('Recurrent', 'Networks'), 'amod'), (('Neural', 'Networks'), 'amod'), (('Networks', 'Training'), 'obj'), (('.', 'Sutskever'), 'punct')]

 Named Entites are: 
>> [('Sutskever, I. Training Recurrent Neural Networks', 'ORG')]

------------------- Sentence 3 -------------------

 PhD thesis, Univ. Toronto  (2012). 

Tokens are: 
>> ['PhD', 'thesis', ',', 'Univ.', 'Toronto', '(', '2012', ')', '.'] 

 UPOS tags are: 
>> [('PhD', 'PROPN'), ('thesis', 'NOUN'), (',', 'PUNCT'), ('Univ.', 'PROPN'), ('Toronto', 'PROPN'), ('(', 'PUNCT'), ('2012', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('PhD', 'NNP'), ('thesis', 'NN'), (',', ','), ('Univ.', 'NNP'), ('Toronto', 'NNP'), ('(', '-LRB-'), ('2012', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('PhD', 'PhD'), ('thesis', 'thesis'), (',', ','), ('Univ.', 'Univ.'), ('Toronto', 'Toronto'), ('(', '('), ('2012', '2012'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('PhD', 'thesis'), 'compound'), (('thesis', 'root'), 'root'), ((',', 'Univ.'), 'punct'), (('Univ.', 'thesis'), 'appos'), (('Toronto', 'Univ.'), 'flat'), (('(', '2012'), 'punct'), (('2012', 'Univ.'), 'nmod:tmod'), ((')', '2012'), 'punct'), (('.', 'thesis'), 'punct')]

 Named Entites are: 
>> [('Univ. Toronto', 'ORG'), ('2012', 'DATE')]

================================ Paragraph 339 =================================

82. Pascanu, R., Mikolov, T. & Bengio, Y. On the difficulty of training recurrent neural  networks. In Proc. 30th International Conference on Machine Learning 1310– 1318 (2013).  


------------------- Sentence 1 -------------------

 82. Pascanu, R., Mikolov, T. & Bengio, Y. 

Tokens are: 
>> ['82', '.', 'Pascanu', ',', 'R.', ',', 'Mikolov', ',', 'T.', '&', 'Bengio', ',', 'Y.'] 

 UPOS tags are: 
>> [('82', 'NUM'), ('.', 'PUNCT'), ('Pascanu', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), (',', 'PUNCT'), ('Mikolov', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), ('&', 'CCONJ'), ('Bengio', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN')] 

 XPOS tags are: 
>> [('82', 'LS'), ('.', '.'), ('Pascanu', 'NNP'), (',', ','), ('R.', 'NNP'), (',', ','), ('Mikolov', 'NNP'), (',', ','), ('T.', 'NNP'), ('&', 'CC'), ('Bengio', 'NNP'), (',', ','), ('Y.', 'NNP')] 

 Lemmas are: 
>> [('82', '82'), ('.', '.'), ('Pascanu', 'Pascanu'), (',', ','), ('R.', 'R.'), (',', ','), ('Mikolov', 'Mikolov'), (',', ','), ('T.', 'T.'), ('&', '&'), ('Bengio', 'Bengio'), (',', ','), ('Y.', 'Y.')] 

 Dependency tags are: 
>> [(('82', 'Pascanu'), 'nummod'), (('.', '82'), 'punct'), (('Pascanu', 'root'), 'root'), ((',', 'R.'), 'punct'), (('R.', 'Pascanu'), 'conj'), ((',', 'Mikolov'), 'punct'), (('Mikolov', 'Pascanu'), 'conj'), ((',', 'T.'), 'punct'), (('T.', 'Pascanu'), 'conj'), (('&', 'Bengio'), 'cc'), (('Bengio', 'Pascanu'), 'conj'), ((',', 'Pascanu'), 'punct'), (('Y.', 'Pascanu'), 'conj')]

 Named Entites are: 
>> [('82', 'CARDINAL'), ('R.', 'NORP'), ('Mikolov', 'GPE'), ('T. & Bengio', 'ORG')]

------------------- Sentence 2 -------------------

 On the difficulty of training recurrent neural  networks. 

Tokens are: 
>> ['On', 'the', 'difficulty', 'of', 'training', 'recurrent', 'neural', 'networks', '.'] 

 UPOS tags are: 
>> [('On', 'ADP'), ('the', 'DET'), ('difficulty', 'NOUN'), ('of', 'SCONJ'), ('training', 'VERB'), ('recurrent', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('On', 'IN'), ('the', 'DT'), ('difficulty', 'NN'), ('of', 'IN'), ('training', 'VBG'), ('recurrent', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('On', 'on'), ('the', 'the'), ('difficulty', 'difficulty'), ('of', 'of'), ('training', 'train'), ('recurrent', 'recurrent'), ('neural', 'neural'), ('networks', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('On', 'difficulty'), 'case'), (('the', 'difficulty'), 'det'), (('difficulty', 'root'), 'root'), (('of', 'training'), 'mark'), (('training', 'difficulty'), 'acl'), (('recurrent', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'training'), 'obj'), (('.', 'difficulty'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 In Proc. 30th International Conference on Machine Learning 1310– 1318 (2013). 

Tokens are: 
>> ['In', 'Proc.', '30th', 'International', 'Conference', 'on', 'Machine', 'Learning', '1310', '–', '1318', '(', '2013', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('30th', 'ADJ'), ('International', 'ADJ'), ('Conference', 'PROPN'), ('on', 'ADP'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('1310', 'NUM'), ('–', 'SYM'), ('1318', 'NUM'), ('(', 'PUNCT'), ('2013', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('30th', 'JJ'), ('International', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('Machine', 'NNP'), ('Learning', 'NNP'), ('1310', 'CD'), ('–', 'SYM'), ('1318', 'CD'), ('(', '-LRB-'), ('2013', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('30th', '30th'), ('International', 'International'), ('Conference', 'Conference'), ('on', 'on'), ('Machine', 'Machine'), ('Learning', 'learning'), ('1310', '1310'), ('–', '-'), ('1318', '1318'), ('(', '('), ('2013', '2013'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('30th', 'Conference'), 'amod'), (('International', 'Conference'), 'amod'), (('Conference', 'root'), 'root'), (('on', 'Machine'), 'case'), (('Machine', 'Conference'), 'nmod'), (('Learning', 'Machine'), 'flat'), (('1310', 'Machine'), 'nummod'), (('–', '1318'), 'case'), (('1318', '1310'), 'nmod'), (('(', '2013'), 'punct'), (('2013', '1318'), 'nmod:tmod'), ((')', '2013'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('30th', 'ORDINAL'), ('International Conference on Machine Learning', 'EVENT'), ('1310– 1318 (2013)', 'DATE')]

================================ Paragraph 340 =================================

83. Sutskever, I., Martens, J. & Hinton, G. E. Generating text with recurrent neural  networks. In Proc. 28th International Conference on Machine Learning 1017– 1024 (2011).  


------------------- Sentence 1 -------------------

 83. 

Tokens are: 
>> ['83', '.'] 

 UPOS tags are: 
>> [('83', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('83', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('83', '83'), ('.', '.')] 

 Dependency tags are: 
>> [(('83', 'root'), 'root'), (('.', '83'), 'punct')]

 Named Entites are: 
>> [('83', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Sutskever, I., Martens, J. & Hinton, G. E. Generating text with recurrent neural  networks. 

Tokens are: 
>> ['Sutskever', ',', 'I.', ',', 'Martens', ',', 'J.', '&', 'Hinton', ',', 'G.', 'E.', 'Generating', 'text', 'with', 'recurrent', 'neural', 'networks', '.'] 

 UPOS tags are: 
>> [('Sutskever', 'PROPN'), (',', 'PUNCT'), ('I.', 'PROPN'), (',', 'PUNCT'), ('Martens', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('&', 'CCONJ'), ('Hinton', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('E.', 'PROPN'), ('Generating', 'VERB'), ('text', 'NOUN'), ('with', 'ADP'), ('recurrent', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Sutskever', 'NNP'), (',', ','), ('I.', 'NNP'), (',', ','), ('Martens', 'NNP'), (',', ','), ('J.', 'NNP'), ('&', 'CC'), ('Hinton', 'NNP'), (',', ','), ('G.', 'NNP'), ('E.', 'NNP'), ('Generating', 'VBG'), ('text', 'NN'), ('with', 'IN'), ('recurrent', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Sutskever', 'Sutskever'), (',', ','), ('I.', 'i.'), (',', ','), ('Martens', 'Martens'), (',', ','), ('J.', 'J.'), ('&', '&'), ('Hinton', 'Hinton'), (',', ','), ('G.', 'G.'), ('E.', 'E.'), ('Generating', 'generate'), ('text', 'text'), ('with', 'with'), ('recurrent', 'recurrent'), ('neural', 'neural'), ('networks', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('Sutskever', 'root'), 'root'), ((',', 'I.'), 'punct'), (('I.', 'Sutskever'), 'conj'), ((',', 'Martens'), 'punct'), (('Martens', 'Sutskever'), 'conj'), ((',', 'J.'), 'punct'), (('J.', 'Sutskever'), 'conj'), (('&', 'Hinton'), 'cc'), (('Hinton', 'Sutskever'), 'conj'), ((',', 'G.'), 'punct'), (('G.', 'Sutskever'), 'conj'), (('E.', 'G.'), 'flat'), (('Generating', 'Sutskever'), 'acl'), (('text', 'Generating'), 'obj'), (('with', 'networks'), 'case'), (('recurrent', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'text'), 'nmod'), (('.', 'Sutskever'), 'punct')]

 Named Entites are: 
>> [('Sutskever, I., Martens, J. & Hinton', 'ORG'), ('G. E. Generating', 'ORG')]

------------------- Sentence 3 -------------------

 In Proc. 28th International Conference on Machine Learning 1017– 1024 (2011). 

Tokens are: 
>> ['In', 'Proc.', '28th', 'International', 'Conference', 'on', 'Machine', 'Learning', '1017', '–', '1024', '(', '2011', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('28th', 'ADJ'), ('International', 'ADJ'), ('Conference', 'PROPN'), ('on', 'ADP'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('1017', 'NUM'), ('–', 'SYM'), ('1024', 'NUM'), ('(', 'PUNCT'), ('2011', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('28th', 'JJ'), ('International', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('Machine', 'NNP'), ('Learning', 'NNP'), ('1017', 'CD'), ('–', 'SYM'), ('1024', 'CD'), ('(', '-LRB-'), ('2011', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('28th', '28th'), ('International', 'International'), ('Conference', 'Conference'), ('on', 'on'), ('Machine', 'Machine'), ('Learning', 'learning'), ('1017', '1017'), ('–', '-'), ('1024', '1024'), ('(', '('), ('2011', '2011'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('28th', 'Conference'), 'amod'), (('International', 'Conference'), 'amod'), (('Conference', 'root'), 'root'), (('on', 'Machine'), 'case'), (('Machine', 'Conference'), 'nmod'), (('Learning', 'Machine'), 'flat'), (('1017', 'Machine'), 'nummod'), (('–', '1024'), 'case'), (('1024', '1017'), 'nmod'), (('(', '2011'), 'punct'), (('2011', '1024'), 'nmod:tmod'), ((')', '2011'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('28th', 'ORDINAL'), ('International Conference on Machine Learning 1017', 'EVENT'), ('1024', 'CARDINAL'), ('2011', 'DATE')]

================================ Paragraph 341 =================================

84. Lakoff, G. & Johnson, M. Metaphors We Live By (Univ. Chicago Press, 2008).  85. Rogers, T. T. & McClelland, J. L. Semantic Cognition: A Parallel Distributed  


------------------- Sentence 1 -------------------

 84. Lakoff, G. & Johnson, M. Metaphors We Live By (Univ. Chicago Press, 2008). 

Tokens are: 
>> ['84', '.', 'Lakoff', ',', 'G.', '&', 'Johnson', ',', 'M.', 'Metaphors', 'We', 'Live', 'By', '(', 'Univ.', 'Chicago', 'Press', ',', '2008', ')', '.'] 

 UPOS tags are: 
>> [('84', 'NUM'), ('.', 'PUNCT'), ('Lakoff', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('&', 'CCONJ'), ('Johnson', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('Metaphors', 'PROPN'), ('We', 'PRON'), ('Live', 'VERB'), ('By', 'ADP'), ('(', 'PUNCT'), ('Univ.', 'PROPN'), ('Chicago', 'PROPN'), ('Press', 'PROPN'), (',', 'PUNCT'), ('2008', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('84', 'LS'), ('.', '.'), ('Lakoff', 'NNP'), (',', ','), ('G.', 'NNP'), ('&', 'CC'), ('Johnson', 'NNP'), (',', ','), ('M.', 'NNP'), ('Metaphors', 'NNPS'), ('We', 'PRP'), ('Live', 'VBP'), ('By', 'IN'), ('(', '-LRB-'), ('Univ.', 'NNP'), ('Chicago', 'NNP'), ('Press', 'NNP'), (',', ','), ('2008', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('84', '84'), ('.', '.'), ('Lakoff', 'Lakoff'), (',', ','), ('G.', 'G.'), ('&', '&'), ('Johnson', 'Johnson'), (',', ','), ('M.', 'M.'), ('Metaphors', 'Metaphor'), ('We', 'we'), ('Live', 'live'), ('By', 'by'), ('(', '('), ('Univ.', 'Univ.'), ('Chicago', 'Chicago'), ('Press', 'Press'), (',', ','), ('2008', '2008'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('84', 'Live'), 'nummod'), (('.', '84'), 'punct'), (('Lakoff', 'Live'), 'nsubj'), ((',', 'G.'), 'punct'), (('G.', 'Lakoff'), 'conj'), (('&', 'Johnson'), 'cc'), (('Johnson', 'Lakoff'), 'conj'), ((',', 'Lakoff'), 'punct'), (('M.', 'Metaphors'), 'compound'), (('Metaphors', 'Lakoff'), 'conj'), (('We', 'Live'), 'nsubj'), (('Live', 'root'), 'root'), (('By', 'Univ.'), 'case'), (('(', 'Univ.'), 'punct'), (('Univ.', 'Press'), 'compound'), (('Chicago', 'Press'), 'compound'), (('Press', 'Live'), 'obl'), ((',', 'Press'), 'punct'), (('2008', 'Press'), 'nmod:tmod'), ((')', 'Univ.'), 'punct'), (('.', 'Live'), 'punct')]

 Named Entites are: 
>> [('84. Lakoff, G. & Johnson, M. Metaphors We Live By', 'ORG'), ('Univ. Chicago Press', 'ORG'), ('2008', 'DATE')]

------------------- Sentence 2 -------------------

 85. 

Tokens are: 
>> ['85', '.'] 

 UPOS tags are: 
>> [('85', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('85', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('85', '85'), ('.', '.')] 

 Dependency tags are: 
>> [(('85', 'root'), 'root'), (('.', '85'), 'punct')]

 Named Entites are: 
>> [('85', 'CARDINAL')]

------------------- Sentence 3 -------------------

 Rogers, T. T. & McClelland, J. L. Semantic Cognition: A Parallel Distributed 

Tokens are: 
>> ['Rogers', ',', 'T.', 'T.', '&', 'McClelland', ',', 'J.', 'L.', 'Semantic', 'Cognition', ':', 'A', 'Parallel', 'Distributed'] 

 UPOS tags are: 
>> [('Rogers', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), ('T.', 'PROPN'), ('&', 'CCONJ'), ('McClelland', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('L.', 'PROPN'), ('Semantic', 'ADJ'), ('Cognition', 'PROPN'), (':', 'PUNCT'), ('A', 'DET'), ('Parallel', 'ADJ'), ('Distributed', 'VERB')] 

 XPOS tags are: 
>> [('Rogers', 'NNP'), (',', ','), ('T.', 'NNP'), ('T.', 'NNP'), ('&', 'CC'), ('McClelland', 'NNP'), (',', ','), ('J.', 'NNP'), ('L.', 'NNP'), ('Semantic', 'JJ'), ('Cognition', 'NNP'), (':', ':'), ('A', 'DT'), ('Parallel', 'JJ'), ('Distributed', 'VBN')] 

 Lemmas are: 
>> [('Rogers', 'Rogers'), (',', ','), ('T.', 'T.'), ('T.', 'T.'), ('&', '&'), ('McClelland', 'McClelland'), (',', ','), ('J.', 'J.'), ('L.', 'L.'), ('Semantic', 'Semantic'), ('Cognition', 'Cognition'), (':', ':'), ('A', 'a'), ('Parallel', 'parallel'), ('Distributed', 'distribute')] 

 Dependency tags are: 
>> [(('Rogers', 'root'), 'root'), ((',', 'T.'), 'punct'), (('T.', 'Rogers'), 'flat'), (('T.', 'Rogers'), 'flat'), (('&', 'McClelland'), 'cc'), (('McClelland', 'Rogers'), 'conj'), ((',', 'J.'), 'punct'), (('J.', 'Rogers'), 'list'), (('L.', 'J.'), 'flat'), (('Semantic', 'Cognition'), 'amod'), (('Cognition', 'Rogers'), 'list'), ((':', 'Cognition'), 'punct'), (('A', 'Distributed'), 'det'), (('Parallel', 'Distributed'), 'amod'), (('Distributed', 'Rogers'), 'list')]

 Named Entites are: 
>> [('Rogers, T. T. & McClelland', 'ORG')]

================================ Paragraph 342 =================================

Processing Approach (MIT Press, 2004).  86. Xu, K. et al. Show, attend and tell: Neural image caption generation with visual  


------------------- Sentence 1 -------------------

 Processing Approach (MIT Press, 2004). 

Tokens are: 
>> ['Processing', 'Approach', '(', 'MIT', 'Press', ',', '2004', ')', '.'] 

 UPOS tags are: 
>> [('Processing', 'NOUN'), ('Approach', 'NOUN'), ('(', 'PUNCT'), ('MIT', 'PROPN'), ('Press', 'PROPN'), (',', 'PUNCT'), ('2004', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Processing', 'NN'), ('Approach', 'NN'), ('(', '-LRB-'), ('MIT', 'NNP'), ('Press', 'NNP'), (',', ','), ('2004', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Processing', 'processing'), ('Approach', 'approach'), ('(', '('), ('MIT', 'MIT'), ('Press', 'Press'), (',', ','), ('2004', '2004'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Processing', 'Approach'), 'compound'), (('Approach', 'root'), 'root'), (('(', 'Press'), 'punct'), (('MIT', 'Press'), 'compound'), (('Press', 'Approach'), 'appos'), ((',', '2004'), 'punct'), (('2004', 'Press'), 'nmod:tmod'), ((')', 'Press'), 'punct'), (('.', 'Approach'), 'punct')]

 Named Entites are: 
>> [('Processing Approach', 'ORG'), ('MIT Press', 'ORG'), ('2004', 'DATE')]

------------------- Sentence 2 -------------------

 86. 

Tokens are: 
>> ['86', '.'] 

 UPOS tags are: 
>> [('86', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('86', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('86', '86'), ('.', '.')] 

 Dependency tags are: 
>> [(('86', 'root'), 'root'), (('.', '86'), 'punct')]

 Named Entites are: 
>> [('86', 'CARDINAL')]

------------------- Sentence 3 -------------------

 Xu, K. et al. 

Tokens are: 
>> ['Xu', ',', 'K.', 'et', 'al.'] 

 UPOS tags are: 
>> [('Xu', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), ('et', 'X'), ('al.', 'X')] 

 XPOS tags are: 
>> [('Xu', 'NNP'), (',', ','), ('K.', 'NNP'), ('et', 'FW'), ('al.', 'FW')] 

 Lemmas are: 
>> [('Xu', 'Xu'), (',', ','), ('K.', 'K.'), ('et', 'et'), ('al.', 'al.')] 

 Dependency tags are: 
>> [(('Xu', 'root'), 'root'), ((',', 'K.'), 'punct'), (('K.', 'Xu'), 'conj'), (('et', 'al.'), 'cc'), (('al.', 'Xu'), 'conj')]

 Named Entites are: 
>> [('Xu', 'PERSON')]

------------------- Sentence 4 -------------------

 Show, attend and tell: Neural image caption generation with visual 

Tokens are: 
>> ['Show', ',', 'attend', 'and', 'tell', ':', 'Neural', 'image', 'caption', 'generation', 'with', 'visual'] 

 UPOS tags are: 
>> [('Show', 'VERB'), (',', 'PUNCT'), ('attend', 'VERB'), ('and', 'CCONJ'), ('tell', 'VERB'), (':', 'PUNCT'), ('Neural', 'ADJ'), ('image', 'NOUN'), ('caption', 'NOUN'), ('generation', 'NOUN'), ('with', 'ADP'), ('visual', 'ADJ')] 

 XPOS tags are: 
>> [('Show', 'VB'), (',', ','), ('attend', 'VB'), ('and', 'CC'), ('tell', 'VB'), (':', ':'), ('Neural', 'JJ'), ('image', 'NN'), ('caption', 'NN'), ('generation', 'NN'), ('with', 'IN'), ('visual', 'JJ')] 

 Lemmas are: 
>> [('Show', 'show'), (',', ','), ('attend', 'attend'), ('and', 'and'), ('tell', 'tell'), (':', ':'), ('Neural', 'neural'), ('image', 'image'), ('caption', 'caption'), ('generation', 'generation'), ('with', 'with'), ('visual', 'visual')] 

 Dependency tags are: 
>> [(('Show', 'root'), 'root'), ((',', 'attend'), 'punct'), (('attend', 'Show'), 'conj'), (('and', 'tell'), 'cc'), (('tell', 'Show'), 'conj'), ((':', 'generation'), 'punct'), (('Neural', 'image'), 'amod'), (('image', 'generation'), 'compound'), (('caption', 'generation'), 'compound'), (('generation', 'tell'), 'obj'), (('with', 'visual'), 'case'), (('visual', 'generation'), 'nmod')]

 Named Entites are: 
>> []

================================ Paragraph 343 =================================

attention. In Proc. International Conference on Learning Representations http:// arxiv.org/abs/1502.03044 (2015).  


------------------- Sentence 1 -------------------

 attention. 

Tokens are: 
>> ['attention', '.'] 

 UPOS tags are: 
>> [('attention', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('attention', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('attention', 'attention'), ('.', '.')] 

 Dependency tags are: 
>> [(('attention', 'root'), 'root'), (('.', 'attention'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 In Proc. International Conference on Learning Representations http:// arxiv.org/abs/1502.03044 (2015). 

Tokens are: 
>> ['In', 'Proc.', 'International', 'Conference', 'on', 'Learning', 'Representations', 'http://', 'arxiv.org/abs/1502.03044', '(', '2015', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('International', 'ADJ'), ('Conference', 'PROPN'), ('on', 'ADP'), ('Learning', 'PROPN'), ('Representations', 'PROPN'), ('http://', 'PROPN'), ('arxiv.org/abs/1502.03044', 'X'), ('(', 'PUNCT'), ('2015', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('International', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('Learning', 'NNP'), ('Representations', 'NNPS'), ('http://', 'NNP'), ('arxiv.org/abs/1502.03044', 'ADD'), ('(', '-LRB-'), ('2015', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('International', 'International'), ('Conference', 'Conference'), ('on', 'on'), ('Learning', 'learning'), ('Representations', 'Representations'), ('http://', 'http://'), ('arxiv.org/abs/1502.03044', 'arxiv.org/abs/1502.03044'), ('(', '('), ('2015', '2015'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('International', 'Conference'), 'amod'), (('Conference', 'root'), 'root'), (('on', 'Representations'), 'case'), (('Learning', 'Representations'), 'compound'), (('Representations', 'Conference'), 'nmod'), (('http://', 'Representations'), 'appos'), (('arxiv.org/abs/1502.03044', 'Representations'), 'appos'), (('(', '2015'), 'punct'), (('2015', 'arxiv.org/abs/1502.03044'), 'nmod:tmod'), ((')', '2015'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('Proc. International Conference on Learning Representations http://', 'EVENT'), ('2015', 'DATE')]

================================ Paragraph 344 =================================

87. Graves, A., Mohamed, A.-R. & Hinton, G. Speech recognition with deep recurrent  neural networks. In Proc. International Conference on Acoustics, Speech and  Signal Processing 6645–6649 (2013).  


------------------- Sentence 1 -------------------

 87. Graves, A., Mohamed, A.-R. & Hinton, G. Speech recognition with deep recurrent  neural networks. 

Tokens are: 
>> ['87', '.', 'Graves', ',', 'A.', ',', 'Mohamed', ',', 'A.-', 'R.', '&', 'Hinton', ',', 'G.', 'Speech', 'recognition', 'with', 'deep', 'recurrent', 'neural', 'networks', '.'] 

 UPOS tags are: 
>> [('87', 'NUM'), ('.', 'PUNCT'), ('Graves', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), (',', 'PUNCT'), ('Mohamed', 'PROPN'), (',', 'PUNCT'), ('A.-', 'PROPN'), ('R.', 'PROPN'), ('&', 'CCONJ'), ('Hinton', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('Speech', 'PROPN'), ('recognition', 'NOUN'), ('with', 'ADP'), ('deep', 'ADJ'), ('recurrent', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('87', 'LS'), ('.', '.'), ('Graves', 'NNPS'), (',', ','), ('A.', 'NNP'), (',', ','), ('Mohamed', 'NNP'), (',', ','), ('A.-', 'NNP'), ('R.', 'NNP'), ('&', 'CC'), ('Hinton', 'NNP'), (',', ','), ('G.', 'NNP'), ('Speech', 'NNP'), ('recognition', 'NN'), ('with', 'IN'), ('deep', 'JJ'), ('recurrent', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('87', '87'), ('.', '.'), ('Graves', 'Grave'), (',', ','), ('A.', 'A.'), (',', ','), ('Mohamed', 'Mohamed'), (',', ','), ('A.-', 'A.-'), ('R.', 'R.'), ('&', '&'), ('Hinton', 'Hinton'), (',', ','), ('G.', 'G.'), ('Speech', 'Speech'), ('recognition', 'recognition'), ('with', 'with'), ('deep', 'deep'), ('recurrent', 'recurrent'), ('neural', 'neural'), ('networks', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('87', 'Graves'), 'nummod'), (('.', '87'), 'punct'), (('Graves', 'root'), 'root'), ((',', 'A.'), 'punct'), (('A.', 'Graves'), 'conj'), ((',', 'Mohamed'), 'punct'), (('Mohamed', 'Graves'), 'conj'), ((',', 'A.-'), 'punct'), (('A.-', 'Graves'), 'conj'), (('R.', 'A.-'), 'flat'), (('&', 'Hinton'), 'cc'), (('Hinton', 'Graves'), 'conj'), ((',', 'Graves'), 'punct'), (('G.', 'Graves'), 'conj'), (('Speech', 'recognition'), 'compound'), (('recognition', 'Graves'), 'conj'), (('with', 'networks'), 'case'), (('deep', 'networks'), 'amod'), (('recurrent', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'recognition'), 'nmod'), (('.', 'recognition'), 'punct')]

 Named Entites are: 
>> [('87. Graves, A., Mohamed', 'ORG'), ('A.-R. & Hinton', 'ORG'), ('G. Speech', 'ORG')]

------------------- Sentence 2 -------------------

 In Proc. International Conference on Acoustics, Speech and  Signal Processing 6645–6649 (2013). 

Tokens are: 
>> ['In', 'Proc.', 'International', 'Conference', 'on', 'Acoustics', ',', 'Speech', 'and', 'Signal', 'Processing', '6645–6649', '(', '2013', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('International', 'ADJ'), ('Conference', 'PROPN'), ('on', 'ADP'), ('Acoustics', 'PROPN'), (',', 'PUNCT'), ('Speech', 'NOUN'), ('and', 'CCONJ'), ('Signal', 'PROPN'), ('Processing', 'NOUN'), ('6645–6649', 'NUM'), ('(', 'PUNCT'), ('2013', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('International', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('Acoustics', 'NNP'), (',', ','), ('Speech', 'NN'), ('and', 'CC'), ('Signal', 'NNP'), ('Processing', 'NN'), ('6645–6649', 'CD'), ('(', '-LRB-'), ('2013', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('International', 'International'), ('Conference', 'Conference'), ('on', 'on'), ('Acoustics', 'Acoustic'), (',', ','), ('Speech', 'speech'), ('and', 'and'), ('Signal', 'Signal'), ('Processing', 'processing'), ('6645–6649', '6645–6649'), ('(', '('), ('2013', '2013'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('International', 'Conference'), 'amod'), (('Conference', 'root'), 'root'), (('on', 'Acoustics'), 'case'), (('Acoustics', 'Conference'), 'nmod'), ((',', 'Speech'), 'punct'), (('Speech', 'Acoustics'), 'conj'), (('and', 'Signal'), 'cc'), (('Signal', 'Acoustics'), 'conj'), (('Processing', 'Conference'), 'conj'), (('6645–6649', 'Processing'), 'nummod'), (('(', '2013'), 'punct'), (('2013', 'Processing'), 'nmod:tmod'), ((')', '2013'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('Proc. International Conference on Acoustics, Speech and  Signal Processing 6645–6649', 'EVENT'), ('2013', 'DATE')]

================================ Paragraph 345 =================================

88. Graves, A., Wayne, G. & Danihelka, I. Neural Turing machines. http://arxiv.org/ abs/1410.5401 (2014).  


------------------- Sentence 1 -------------------

 88. Graves, A., Wayne, G. & Danihelka, I. Neural Turing machines. 

Tokens are: 
>> ['88', '.', 'Graves', ',', 'A.', ',', 'Wayne', ',', 'G.', '&', 'Danihelka', ',', 'I.', 'Neural', 'Turing', 'machines', '.'] 

 UPOS tags are: 
>> [('88', 'NUM'), ('.', 'PUNCT'), ('Graves', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), (',', 'PUNCT'), ('Wayne', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('&', 'CCONJ'), ('Danihelka', 'PROPN'), (',', 'PUNCT'), ('I.', 'PROPN'), ('Neural', 'ADJ'), ('Turing', 'PROPN'), ('machines', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('88', 'LS'), ('.', '.'), ('Graves', 'NNPS'), (',', ','), ('A.', 'NNP'), (',', ','), ('Wayne', 'NNP'), (',', ','), ('G.', 'NNP'), ('&', 'CC'), ('Danihelka', 'NNP'), (',', ','), ('I.', 'NNP'), ('Neural', 'NNP'), ('Turing', 'NNP'), ('machines', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('88', '88'), ('.', '.'), ('Graves', 'Grave'), (',', ','), ('A.', 'A.'), (',', ','), ('Wayne', 'Wayne'), (',', ','), ('G.', 'G.'), ('&', '&'), ('Danihelka', 'Danihelka'), (',', ','), ('I.', 'i.'), ('Neural', 'neural'), ('Turing', 'Turing'), ('machines', 'machine'), ('.', '.')] 

 Dependency tags are: 
>> [(('88', 'Graves'), 'nummod'), (('.', '88'), 'punct'), (('Graves', 'root'), 'root'), ((',', 'A.'), 'punct'), (('A.', 'Graves'), 'conj'), ((',', 'Wayne'), 'punct'), (('Wayne', 'Graves'), 'conj'), ((',', 'G.'), 'punct'), (('G.', 'Graves'), 'conj'), (('&', 'Danihelka'), 'cc'), (('Danihelka', 'Graves'), 'conj'), ((',', 'machines'), 'punct'), (('I.', 'machines'), 'compound'), (('Neural', 'Turing'), 'amod'), (('Turing', 'machines'), 'compound'), (('machines', 'Graves'), 'list'), (('.', 'Graves'), 'punct')]

 Named Entites are: 
>> [('88. Graves, A., Wayne, G. & Danihelka', 'ORG')]

------------------- Sentence 2 -------------------

 http://arxiv.org/ abs/1410.5401 (2014). 

Tokens are: 
>> ['http://arxiv.org/', 'abs/1410.5401', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('http://arxiv.org/', 'X'), ('abs/1410.5401', 'NUM'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('http://arxiv.org/', 'ADD'), ('abs/1410.5401', 'CD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('http://arxiv.org/', 'http://arxiv.org/'), ('abs/1410.5401', 'abs/1410.5401'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('http://arxiv.org/', 'root'), 'root'), (('abs/1410.5401', 'http://arxiv.org/'), 'list'), (('(', '2014'), 'punct'), (('2014', 'abs/1410.5401'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'http://arxiv.org/'), 'punct')]

 Named Entites are: 
>> [('2014', 'DATE')]

================================ Paragraph 346 =================================

89. Weston, J. Chopra, S. & Bordes, A. Memory networks. http://arxiv.org/ abs/1410.3916 (2014).  


------------------- Sentence 1 -------------------

 89. 

Tokens are: 
>> ['89', '.'] 

 UPOS tags are: 
>> [('89', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('89', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('89', '89'), ('.', '.')] 

 Dependency tags are: 
>> [(('89', 'root'), 'root'), (('.', '89'), 'punct')]

 Named Entites are: 
>> [('89', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Weston, J. Chopra, S. & Bordes, A. Memory networks. 

Tokens are: 
>> ['Weston', ',', 'J.', 'Chopra', ',', 'S.', '&', 'Bordes', ',', 'A.', 'Memory', 'networks', '.'] 

 UPOS tags are: 
>> [('Weston', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('Chopra', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('&', 'CCONJ'), ('Bordes', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('Memory', 'PROPN'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Weston', 'NNP'), (',', ','), ('J.', 'NNP'), ('Chopra', 'NNP'), (',', ','), ('S.', 'NNP'), ('&', 'CC'), ('Bordes', 'NNP'), (',', ','), ('A.', 'NNP'), ('Memory', 'NNP'), ('networks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Weston', 'Weston'), (',', ','), ('J.', 'J.'), ('Chopra', 'Chopra'), (',', ','), ('S.', 'S.'), ('&', '&'), ('Bordes', 'Bordes'), (',', ','), ('A.', 'A.'), ('Memory', 'Memory'), ('networks', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('Weston', 'root'), 'root'), ((',', 'J.'), 'punct'), (('J.', 'Weston'), 'conj'), (('Chopra', 'Weston'), 'flat'), ((',', 'S.'), 'punct'), (('S.', 'Weston'), 'conj'), (('&', 'Bordes'), 'cc'), (('Bordes', 'S.'), 'conj'), ((',', 'Weston'), 'punct'), (('A.', 'networks'), 'compound'), (('Memory', 'networks'), 'compound'), (('networks', 'Weston'), 'list'), (('.', 'Weston'), 'punct')]

 Named Entites are: 
>> [('Weston, J. Chopra', 'ORG'), ('S. & Bordes', 'ORG'), ('A. Memory', 'ORG')]

------------------- Sentence 3 -------------------

 http://arxiv.org/ abs/1410.3916 (2014). 

Tokens are: 
>> ['http://arxiv.org/', 'abs/1410.3916', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('http://arxiv.org/', 'X'), ('abs/1410.3916', 'NUM'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('http://arxiv.org/', 'ADD'), ('abs/1410.3916', 'CD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('http://arxiv.org/', 'http://arxiv.org/'), ('abs/1410.3916', 'abs/1410.3916'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('http://arxiv.org/', 'root'), 'root'), (('abs/1410.3916', 'http://arxiv.org/'), 'list'), (('(', '2014'), 'punct'), (('2014', 'abs/1410.3916'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'http://arxiv.org/'), 'punct')]

 Named Entites are: 
>> [('2014', 'DATE')]

================================ Paragraph 347 =================================

90. Weston, J., Bordes, A., Chopra, S. & Mikolov, T. Towards AI-complete question  answering: a set of prerequisite toy tasks. http://arxiv.org/abs/1502.05698  (2015).  


------------------- Sentence 1 -------------------

 90. Weston, J., Bordes, A., Chopra, S. & Mikolov, T. Towards AI-complete question  answering: a set of prerequisite toy tasks. 

Tokens are: 
>> ['90', '.', 'Weston', ',', 'J.', ',', 'Bordes', ',', 'A.', ',', 'Chopra', ',', 'S.', '&', 'Mikolov', ',', 'T.', 'Towards', 'AI', '-', 'complete', 'question', 'answering', ':', 'a', 'set', 'of', 'prerequisite', 'toy', 'tasks', '.'] 

 UPOS tags are: 
>> [('90', 'NUM'), ('.', 'PUNCT'), ('Weston', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), (',', 'PUNCT'), ('Bordes', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), (',', 'PUNCT'), ('Chopra', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('&', 'CCONJ'), ('Mikolov', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), ('Towards', 'ADP'), ('AI', 'PROPN'), ('-', 'PUNCT'), ('complete', 'ADJ'), ('question', 'NOUN'), ('answering', 'NOUN'), (':', 'PUNCT'), ('a', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('prerequisite', 'NOUN'), ('toy', 'NOUN'), ('tasks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('90', 'LS'), ('.', '.'), ('Weston', 'NNP'), (',', ','), ('J.', 'NNP'), (',', ','), ('Bordes', 'NNP'), (',', ','), ('A.', 'NNP'), (',', ','), ('Chopra', 'NNP'), (',', ','), ('S.', 'NNP'), ('&', 'CC'), ('Mikolov', 'NNP'), (',', ','), ('T.', 'NNP'), ('Towards', 'IN'), ('AI', 'NNP'), ('-', 'HYPH'), ('complete', 'JJ'), ('question', 'NN'), ('answering', 'NN'), (':', ':'), ('a', 'DT'), ('set', 'NN'), ('of', 'IN'), ('prerequisite', 'NN'), ('toy', 'NN'), ('tasks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('90', '90'), ('.', '.'), ('Weston', 'Weston'), (',', ','), ('J.', 'J.'), (',', ','), ('Bordes', 'Bordes'), (',', ','), ('A.', 'A.'), (',', ','), ('Chopra', 'Chopra'), (',', ','), ('S.', 'S.'), ('&', '&'), ('Mikolov', 'Mikolov'), (',', ','), ('T.', 'T.'), ('Towards', 'towards'), ('AI', 'AI'), ('-', '-'), ('complete', 'complete'), ('question', 'question'), ('answering', 'answer'), (':', ':'), ('a', 'a'), ('set', 'set'), ('of', 'of'), ('prerequisite', 'prerequisite'), ('toy', 'toy'), ('tasks', 'task'), ('.', '.')] 

 Dependency tags are: 
>> [(('90', 'Weston'), 'nummod'), (('.', '90'), 'punct'), (('Weston', 'root'), 'root'), ((',', 'J.'), 'punct'), (('J.', 'Weston'), 'conj'), ((',', 'Weston'), 'punct'), (('Bordes', 'Weston'), 'conj'), ((',', 'A.'), 'punct'), (('A.', 'Weston'), 'conj'), ((',', 'Chopra'), 'punct'), (('Chopra', 'Weston'), 'conj'), ((',', 'S.'), 'punct'), (('S.', 'Weston'), 'conj'), (('&', 'Mikolov'), 'cc'), (('Mikolov', 'S.'), 'conj'), ((',', 'Weston'), 'punct'), (('T.', 'Weston'), 'conj'), (('Towards', 'question'), 'case'), (('AI', 'complete'), 'compound'), (('-', 'complete'), 'punct'), (('complete', 'question'), 'amod'), (('question', 'answering'), 'compound'), (('answering', 'Weston'), 'list'), ((':', 'set'), 'punct'), (('a', 'set'), 'det'), (('set', 'answering'), 'appos'), (('of', 'tasks'), 'case'), (('prerequisite', 'tasks'), 'compound'), (('toy', 'tasks'), 'compound'), (('tasks', 'set'), 'nmod'), (('.', 'answering'), 'punct')]

 Named Entites are: 
>> [('90. Weston, J., Bordes, A., Chopra', 'ORG'), ('S. & Mikolov', 'ORG'), ('T. Towards AI', 'ORG')]

------------------- Sentence 2 -------------------

 http://arxiv.org/abs/1502.05698  (2015). 

Tokens are: 
>> ['http://arxiv.org/abs/1502.05698', '(', '2015', ')', '.'] 

 UPOS tags are: 
>> [('http://arxiv.org/abs/1502.05698', 'X'), ('(', 'PUNCT'), ('2015', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('http://arxiv.org/abs/1502.05698', 'ADD'), ('(', '-LRB-'), ('2015', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('http://arxiv.org/abs/1502.05698', 'http://arxiv.org/abs/1502.05698'), ('(', '('), ('2015', '2015'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('http://arxiv.org/abs/1502.05698', 'root'), 'root'), (('(', '2015'), 'punct'), (('2015', 'http://arxiv.org/abs/1502.05698'), 'nmod:tmod'), ((')', '2015'), 'punct'), (('.', 'http://arxiv.org/abs/1502.05698'), 'punct')]

 Named Entites are: 
>> [('2015', 'DATE')]

================================ Paragraph 348 =================================

91. Hinton, G. E., Dayan, P., Frey, B. J. & Neal, R. M. The wake-sleep algorithm for  unsupervised neural networks. Science 268, 1558–1161 (1995).  


------------------- Sentence 1 -------------------

 91. Hinton, G. E., Dayan, P., Frey, B. J. & Neal, R. M. 

Tokens are: 
>> ['91', '.', 'Hinton', ',', 'G.', 'E.', ',', 'Dayan', ',', 'P.', ',', 'Frey', ',', 'B.', 'J.', '&', 'Neal', ',', 'R.', 'M.'] 

 UPOS tags are: 
>> [('91', 'NUM'), ('.', 'PUNCT'), ('Hinton', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('E.', 'PROPN'), (',', 'PUNCT'), ('Dayan', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), (',', 'PUNCT'), ('Frey', 'PROPN'), (',', 'PUNCT'), ('B.', 'PROPN'), ('J.', 'PROPN'), ('&', 'CCONJ'), ('Neal', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('M.', 'PROPN')] 

 XPOS tags are: 
>> [('91', 'LS'), ('.', '.'), ('Hinton', 'NNP'), (',', ','), ('G.', 'NNP'), ('E.', 'NNP'), (',', ','), ('Dayan', 'NNP'), (',', ','), ('P.', 'NNP'), (',', ','), ('Frey', 'NNP'), (',', ','), ('B.', 'NNP'), ('J.', 'NNP'), ('&', 'CC'), ('Neal', 'NNP'), (',', ','), ('R.', 'NNP'), ('M.', 'NNP')] 

 Lemmas are: 
>> [('91', '91'), ('.', '.'), ('Hinton', 'Hinton'), (',', ','), ('G.', 'G.'), ('E.', 'E.'), (',', ','), ('Dayan', 'Dayan'), (',', ','), ('P.', 'P.'), (',', ','), ('Frey', 'Frey'), (',', ','), ('B.', 'B.'), ('J.', 'J.'), ('&', '&'), ('Neal', 'Neal'), (',', ','), ('R.', 'R.'), ('M.', 'M.')] 

 Dependency tags are: 
>> [(('91', 'Hinton'), 'nummod'), (('.', '91'), 'punct'), (('Hinton', 'root'), 'root'), ((',', 'G.'), 'punct'), (('G.', 'Hinton'), 'conj'), (('E.', 'Hinton'), 'flat'), ((',', 'Dayan'), 'punct'), (('Dayan', 'Hinton'), 'conj'), ((',', 'P.'), 'punct'), (('P.', 'Hinton'), 'conj'), ((',', 'Frey'), 'punct'), (('Frey', 'Hinton'), 'conj'), ((',', 'B.'), 'punct'), (('B.', 'Hinton'), 'conj'), (('J.', 'B.'), 'flat'), (('&', 'Neal'), 'cc'), (('Neal', 'Hinton'), 'conj'), ((',', 'R.'), 'punct'), (('R.', 'Hinton'), 'conj'), (('M.', 'R.'), 'flat')]

 Named Entites are: 
>> [('91. Hinton', 'ORG'), ('G. E.', 'PERSON'), ('Dayan', 'GPE'), ('P.', 'NORP'), ('Frey', 'PERSON'), ('B. J. & Neal', 'PERSON'), ('R. M.', 'GPE')]

------------------- Sentence 2 -------------------

 The wake-sleep algorithm for  unsupervised neural networks. 

Tokens are: 
>> ['The', 'wake-', 'sleep', 'algorithm', 'for', 'unsupervised', 'neural', 'networks', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('wake-', 'NOUN'), ('sleep', 'VERB'), ('algorithm', 'NOUN'), ('for', 'ADP'), ('unsupervised', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('wake-', 'NN'), ('sleep', 'VBP'), ('algorithm', 'NN'), ('for', 'IN'), ('unsupervised', 'JJ'), ('neural', 'JJ'), ('networks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('wake-', 'wake-'), ('sleep', 'sleep'), ('algorithm', 'algorithm'), ('for', 'for'), ('unsupervised', 'unsupervised'), ('neural', 'neural'), ('networks', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'wake-'), 'det'), (('wake-', 'sleep'), 'nsubj'), (('sleep', 'algorithm'), 'amod'), (('algorithm', 'root'), 'root'), (('for', 'networks'), 'case'), (('unsupervised', 'networks'), 'amod'), (('neural', 'networks'), 'amod'), (('networks', 'algorithm'), 'nmod'), (('.', 'algorithm'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Science 268, 1558–1161 (1995). 

Tokens are: 
>> ['Science', '268', ',', '1558–1161', '(', '1995', ')', '.'] 

 UPOS tags are: 
>> [('Science', 'NOUN'), ('268', 'NUM'), (',', 'PUNCT'), ('1558–1161', 'NUM'), ('(', 'PUNCT'), ('1995', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Science', 'NN'), ('268', 'CD'), (',', ','), ('1558–1161', 'CD'), ('(', '-LRB-'), ('1995', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Science', 'science'), ('268', '268'), (',', ','), ('1558–1161', '1558–1161'), ('(', '('), ('1995', '1995'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Science', '268'), 'compound'), (('268', 'root'), 'root'), ((',', '1558–1161'), 'punct'), (('1558–1161', '268'), 'nmod:tmod'), (('(', '1995'), 'punct'), (('1995', '1558–1161'), 'nmod:tmod'), ((')', '1995'), 'punct'), (('.', '268'), 'punct')]

 Named Entites are: 
>> [('268', 'CARDINAL'), ('1558–1161', 'CARDINAL'), ('1995', 'DATE')]

================================ Paragraph 349 =================================

92. Salakhutdinov, R. & Hinton, G. Deep Boltzmann machines. In Proc. International  Conference on Artificial Intelligence and Statistics 448–455 (2009).  


------------------- Sentence 1 -------------------

 92. Salakhutdinov, R. & Hinton, G. Deep Boltzmann machines. 

Tokens are: 
>> ['92', '.', 'Salakhutdinov', ',', 'R.', '&', 'Hinton', ',', 'G.', 'Deep', 'Boltzmann', 'machines', '.'] 

 UPOS tags are: 
>> [('92', 'NUM'), ('.', 'PUNCT'), ('Salakhutdinov', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('&', 'CCONJ'), ('Hinton', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('Deep', 'ADJ'), ('Boltzmann', 'PROPN'), ('machines', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('92', 'LS'), ('.', '.'), ('Salakhutdinov', 'NNP'), (',', ','), ('R.', 'NNP'), ('&', 'CC'), ('Hinton', 'NNP'), (',', ','), ('G.', 'NNP'), ('Deep', 'JJ'), ('Boltzmann', 'NNP'), ('machines', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('92', '92'), ('.', '.'), ('Salakhutdinov', 'Salakhutdinov'), (',', ','), ('R.', 'R.'), ('&', '&'), ('Hinton', 'Hinton'), (',', ','), ('G.', 'G.'), ('Deep', 'deep'), ('Boltzmann', 'Boltzmann'), ('machines', 'machine'), ('.', '.')] 

 Dependency tags are: 
>> [(('92', 'Salakhutdinov'), 'nummod'), (('.', '92'), 'punct'), (('Salakhutdinov', 'root'), 'root'), ((',', 'R.'), 'punct'), (('R.', 'Salakhutdinov'), 'conj'), (('&', 'Hinton'), 'cc'), (('Hinton', 'Salakhutdinov'), 'conj'), ((',', 'Salakhutdinov'), 'punct'), (('G.', 'machines'), 'compound'), (('Deep', 'machines'), 'amod'), (('Boltzmann', 'machines'), 'compound'), (('machines', 'Salakhutdinov'), 'list'), (('.', 'Salakhutdinov'), 'punct')]

 Named Entites are: 
>> [('92', 'CARDINAL'), ('Salakhutdinov', 'ORG'), ('R. & Hinton', 'ORG'), ('G. Deep Boltzmann', 'PERSON')]

------------------- Sentence 2 -------------------

 In Proc. International  Conference on Artificial Intelligence and Statistics 448–455 (2009). 

Tokens are: 
>> ['In', 'Proc.', 'International', 'Conference', 'on', 'Artificial', 'Intelligence', 'and', 'Statistics', '448–455', '(', '2009', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('International', 'ADJ'), ('Conference', 'PROPN'), ('on', 'ADP'), ('Artificial', 'ADJ'), ('Intelligence', 'PROPN'), ('and', 'CCONJ'), ('Statistics', 'PROPN'), ('448–455', 'NUM'), ('(', 'PUNCT'), ('2009', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('International', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('Artificial', 'NNP'), ('Intelligence', 'NNP'), ('and', 'CC'), ('Statistics', 'NNP'), ('448–455', 'CD'), ('(', '-LRB-'), ('2009', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('International', 'International'), ('Conference', 'Conference'), ('on', 'on'), ('Artificial', 'Artificial'), ('Intelligence', 'Intelligence'), ('and', 'and'), ('Statistics', 'Statistic'), ('448–455', '448–455'), ('(', '('), ('2009', '2009'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('International', 'Conference'), 'amod'), (('Conference', 'root'), 'root'), (('on', 'Intelligence'), 'case'), (('Artificial', 'Intelligence'), 'amod'), (('Intelligence', 'Conference'), 'nmod'), (('and', 'Statistics'), 'cc'), (('Statistics', 'Intelligence'), 'conj'), (('448–455', 'Statistics'), 'nummod'), (('(', '2009'), 'punct'), (('2009', '448–455'), 'nmod:tmod'), ((')', '2009'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('Proc. International  Conference on Artificial Intelligence and Statistics 448–455', 'EVENT'), ('2009', 'DATE')]

================================ Paragraph 350 =================================

93. Vincent, P., Larochelle, H., Bengio, Y. & Manzagol, P.-A. Extracting and composing  robust features with denoising autoencoders. In Proc. 25th International  Conference on Machine Learning 1096–1103 (2008).  


------------------- Sentence 1 -------------------

 93. 

Tokens are: 
>> ['93', '.'] 

 UPOS tags are: 
>> [('93', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('93', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('93', '93'), ('.', '.')] 

 Dependency tags are: 
>> [(('93', 'root'), 'root'), (('.', '93'), 'punct')]

 Named Entites are: 
>> [('93', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Vincent, P., Larochelle, H., Bengio, Y. & Manzagol, P.-A. Extracting and composing  robust features with denoising autoencoders. 

Tokens are: 
>> ['Vincent', ',', 'P.', ',', 'Larochelle', ',', 'H.', ',', 'Bengio', ',', 'Y.', '&', 'Manzagol', ',', 'P.-A.', 'Extracting', 'and', 'composing', 'robust', 'features', 'with', 'denoising', 'autoencoders', '.'] 

 UPOS tags are: 
>> [('Vincent', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), (',', 'PUNCT'), ('Larochelle', 'PROPN'), (',', 'PUNCT'), ('H.', 'PROPN'), (',', 'PUNCT'), ('Bengio', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('&', 'CCONJ'), ('Manzagol', 'PROPN'), (',', 'PUNCT'), ('P.-A.', 'PROPN'), ('Extracting', 'VERB'), ('and', 'CCONJ'), ('composing', 'VERB'), ('robust', 'ADJ'), ('features', 'NOUN'), ('with', 'ADP'), ('denoising', 'VERB'), ('autoencoders', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Vincent', 'NNP'), (',', ','), ('P.', 'NNP'), (',', ','), ('Larochelle', 'NNP'), (',', ','), ('H.', 'NNP'), (',', ','), ('Bengio', 'NNP'), (',', ','), ('Y.', 'NNP'), ('&', 'CC'), ('Manzagol', 'NNP'), (',', ','), ('P.-A.', 'NNP'), ('Extracting', 'VBG'), ('and', 'CC'), ('composing', 'VBG'), ('robust', 'JJ'), ('features', 'NNS'), ('with', 'IN'), ('denoising', 'VBG'), ('autoencoders', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Vincent', 'Vincent'), (',', ','), ('P.', 'P.'), (',', ','), ('Larochelle', 'Larochelle'), (',', ','), ('H.', 'H.'), (',', ','), ('Bengio', 'Bengio'), (',', ','), ('Y.', 'Y.'), ('&', '&'), ('Manzagol', 'Manzagol'), (',', ','), ('P.-A.', 'P.-A.'), ('Extracting', 'extract'), ('and', 'and'), ('composing', 'compose'), ('robust', 'robust'), ('features', 'feature'), ('with', 'with'), ('denoising', 'denoise'), ('autoencoders', 'autoencoders'), ('.', '.')] 

 Dependency tags are: 
>> [(('Vincent', 'root'), 'root'), ((',', 'P.'), 'punct'), (('P.', 'Vincent'), 'conj'), ((',', 'Larochelle'), 'punct'), (('Larochelle', 'Vincent'), 'conj'), ((',', 'H.'), 'punct'), (('H.', 'Vincent'), 'conj'), ((',', 'Bengio'), 'punct'), (('Bengio', 'Vincent'), 'conj'), ((',', 'Y.'), 'punct'), (('Y.', 'Vincent'), 'conj'), (('&', 'Manzagol'), 'cc'), (('Manzagol', 'Y.'), 'conj'), ((',', 'P.-A.'), 'punct'), (('P.-A.', 'Vincent'), 'conj'), (('Extracting', 'Vincent'), 'acl'), (('and', 'composing'), 'cc'), (('composing', 'Extracting'), 'conj'), (('robust', 'features'), 'amod'), (('features', 'composing'), 'obj'), (('with', 'autoencoders'), 'case'), (('denoising', 'autoencoders'), 'amod'), (('autoencoders', 'features'), 'nmod'), (('.', 'Vincent'), 'punct')]

 Named Entites are: 
>> [('Vincent, P., Larochelle, H.', 'ORG'), ('Bengio', 'ORG'), ('Y. & Manzagol', 'ORG'), ('P.-A. Extracting', 'ORG')]

------------------- Sentence 3 -------------------

 In Proc. 25th International  Conference on Machine Learning 1096–1103 (2008). 

Tokens are: 
>> ['In', 'Proc.', '25th', 'International', 'Conference', 'on', 'Machine', 'Learning', '1096–1103', '(', '2008', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('25th', 'ADJ'), ('International', 'ADJ'), ('Conference', 'PROPN'), ('on', 'ADP'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('1096–1103', 'NUM'), ('(', 'PUNCT'), ('2008', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('25th', 'NNP'), ('International', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('Machine', 'NNP'), ('Learning', 'NNP'), ('1096–1103', 'CD'), ('(', '-LRB-'), ('2008', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('25th', '25th'), ('International', 'International'), ('Conference', 'Conference'), ('on', 'on'), ('Machine', 'Machine'), ('Learning', 'learning'), ('1096–1103', '1096–1103'), ('(', '('), ('2008', '2008'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('25th', 'Conference'), 'amod'), (('International', 'Conference'), 'amod'), (('Conference', 'root'), 'root'), (('on', 'Learning'), 'case'), (('Machine', 'Learning'), 'compound'), (('Learning', 'Conference'), 'nmod'), (('1096–1103', 'Learning'), 'nummod'), (('(', '2008'), 'punct'), (('2008', 'Learning'), 'nmod:tmod'), ((')', '2008'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('25th', 'ORDINAL'), ('International  Conference on Machine Learning 1096–1103', 'EVENT'), ('2008', 'DATE')]

================================ Paragraph 351 =================================

94. Kavukcuoglu, K. et al. Learning convolutional feature hierarchies for visual  recognition. In Proc. Advances in Neural Information Processing Systems 23  1090–1098 (2010).  


------------------- Sentence 1 -------------------

 94. 

Tokens are: 
>> ['94', '.'] 

 UPOS tags are: 
>> [('94', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('94', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('94', '94'), ('.', '.')] 

 Dependency tags are: 
>> [(('94', 'root'), 'root'), (('.', '94'), 'punct')]

 Named Entites are: 
>> [('94', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Kavukcuoglu, K. et al. Learning convolutional feature hierarchies for visual  recognition. 

Tokens are: 
>> ['Kavukcuoglu', ',', 'K.', 'et', 'al.', 'Learning', 'convolutional', 'feature', 'hierarchies', 'for', 'visual', 'recognition', '.'] 

 UPOS tags are: 
>> [('Kavukcuoglu', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), ('et', 'X'), ('al.', 'X'), ('Learning', 'PROPN'), ('convolutional', 'ADJ'), ('feature', 'NOUN'), ('hierarchies', 'NOUN'), ('for', 'ADP'), ('visual', 'ADJ'), ('recognition', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Kavukcuoglu', 'NNP'), (',', ','), ('K.', 'NNP'), ('et', 'FW'), ('al.', 'FW'), ('Learning', 'NNP'), ('convolutional', 'JJ'), ('feature', 'NN'), ('hierarchies', 'NNS'), ('for', 'IN'), ('visual', 'JJ'), ('recognition', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Kavukcuoglu', 'Kavukcuoglu'), (',', ','), ('K.', 'K.'), ('et', 'et'), ('al.', 'al.'), ('Learning', 'learning'), ('convolutional', 'convolutional'), ('feature', 'feature'), ('hierarchies', 'hierarchy'), ('for', 'for'), ('visual', 'visual'), ('recognition', 'recognition'), ('.', '.')] 

 Dependency tags are: 
>> [(('Kavukcuoglu', 'root'), 'root'), ((',', 'Kavukcuoglu'), 'punct'), (('K.', 'Kavukcuoglu'), 'conj'), (('et', 'al.'), 'cc'), (('al.', 'Kavukcuoglu'), 'conj'), (('Learning', 'hierarchies'), 'compound'), (('convolutional', 'feature'), 'amod'), (('feature', 'hierarchies'), 'compound'), (('hierarchies', 'Kavukcuoglu'), 'appos'), (('for', 'recognition'), 'case'), (('visual', 'recognition'), 'amod'), (('recognition', 'hierarchies'), 'nmod'), (('.', 'Kavukcuoglu'), 'punct')]

 Named Entites are: 
>> [('Kavukcuoglu', 'PERSON')]

------------------- Sentence 3 -------------------

 In Proc. Advances in Neural Information Processing Systems 23  1090–1098 (2010). 

Tokens are: 
>> ['In', 'Proc.', 'Advances', 'in', 'Neural', 'Information', 'Processing', 'Systems', '23', '1090–1098', '(', '2010', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'NOUN'), ('Advances', 'NOUN'), ('in', 'ADP'), ('Neural', 'ADJ'), ('Information', 'NOUN'), ('Processing', 'NOUN'), ('Systems', 'PROPN'), ('23', 'NUM'), ('1090–1098', 'NUM'), ('(', 'PUNCT'), ('2010', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NN'), ('Advances', 'NNS'), ('in', 'IN'), ('Neural', 'JJ'), ('Information', 'NN'), ('Processing', 'NN'), ('Systems', 'NNP'), ('23', 'CD'), ('1090–1098', 'CD'), ('(', '-LRB-'), ('2010', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'proc.'), ('Advances', 'advance'), ('in', 'in'), ('Neural', 'neural'), ('Information', 'information'), ('Processing', 'processing'), ('Systems', 'System'), ('23', '23'), ('1090–1098', '1090–1098'), ('(', '('), ('2010', '2010'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Advances'), 'case'), (('Proc.', 'Advances'), 'compound'), (('Advances', 'root'), 'root'), (('in', 'Processing'), 'case'), (('Neural', 'Information'), 'amod'), (('Information', 'Processing'), 'compound'), (('Processing', 'Advances'), 'nmod'), (('Systems', 'Processing'), 'appos'), (('23', 'Systems'), 'nummod'), (('1090–1098', '23'), 'flat'), (('(', '2010'), 'punct'), (('2010', '23'), 'nmod:tmod'), ((')', '2010'), 'punct'), (('.', 'Advances'), 'punct')]

 Named Entites are: 
>> [('Neural Information Processing Systems', 'ORG'), ('23  1090–1098', 'CARDINAL'), ('2010', 'DATE')]

================================ Paragraph 352 =================================

95. Gregor, K. & LeCun, Y. Learning fast approximations of sparse coding. In Proc.  International Conference on Machine Learning 399–406 (2010).  


------------------- Sentence 1 -------------------

 95. 

Tokens are: 
>> ['95', '.'] 

 UPOS tags are: 
>> [('95', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('95', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('95', '95'), ('.', '.')] 

 Dependency tags are: 
>> [(('95', 'root'), 'root'), (('.', '95'), 'punct')]

 Named Entites are: 
>> [('95', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Gregor, K. & LeCun, Y. Learning fast approximations of sparse coding. 

Tokens are: 
>> ['Gregor', ',', 'K.', '&', 'LeCun', ',', 'Y.', 'Learning', 'fast', 'approximations', 'of', 'sparse', 'coding', '.'] 

 UPOS tags are: 
>> [('Gregor', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), ('&', 'CCONJ'), ('LeCun', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('Learning', 'VERB'), ('fast', 'ADJ'), ('approximations', 'NOUN'), ('of', 'ADP'), ('sparse', 'ADJ'), ('coding', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Gregor', 'NNP'), (',', ','), ('K.', 'NNP'), ('&', 'CC'), ('LeCun', 'NNP'), (',', ','), ('Y.', 'NNP'), ('Learning', 'VBG'), ('fast', 'JJ'), ('approximations', 'NNS'), ('of', 'IN'), ('sparse', 'JJ'), ('coding', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Gregor', 'Gregor'), (',', ','), ('K.', 'K.'), ('&', '&'), ('LeCun', 'LeCun'), (',', ','), ('Y.', 'Y.'), ('Learning', 'learning'), ('fast', 'fast'), ('approximations', 'approximation'), ('of', 'of'), ('sparse', 'sparse'), ('coding', 'coding'), ('.', '.')] 

 Dependency tags are: 
>> [(('Gregor', 'root'), 'root'), ((',', 'K.'), 'punct'), (('K.', 'Gregor'), 'conj'), (('&', 'LeCun'), 'cc'), (('LeCun', 'Gregor'), 'conj'), ((',', 'Learning'), 'punct'), (('Y.', 'Learning'), 'nsubj'), (('Learning', 'Gregor'), 'parataxis'), (('fast', 'approximations'), 'amod'), (('approximations', 'Learning'), 'obj'), (('of', 'coding'), 'case'), (('sparse', 'coding'), 'amod'), (('coding', 'approximations'), 'nmod'), (('.', 'Gregor'), 'punct')]

 Named Entites are: 
>> [('Gregor, K. & LeCun', 'ORG'), ('Y. Learning', 'ORG')]

------------------- Sentence 3 -------------------

 In Proc.  International Conference on Machine Learning 399–406 (2010). 

Tokens are: 
>> ['In', 'Proc.', 'International', 'Conference', 'on', 'Machine', 'Learning', '399–406', '(', '2010', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('International', 'ADJ'), ('Conference', 'PROPN'), ('on', 'ADP'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('399–406', 'NUM'), ('(', 'PUNCT'), ('2010', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('International', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('Machine', 'NNP'), ('Learning', 'NNP'), ('399–406', 'CD'), ('(', '-LRB-'), ('2010', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('International', 'International'), ('Conference', 'Conference'), ('on', 'on'), ('Machine', 'Machine'), ('Learning', 'learning'), ('399–406', '399–406'), ('(', '('), ('2010', '2010'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('International', 'Conference'), 'amod'), (('Conference', 'root'), 'root'), (('on', 'Learning'), 'case'), (('Machine', 'Conference'), 'nmod'), (('Learning', 'Conference'), 'nmod'), (('399–406', 'Learning'), 'nummod'), (('(', '2010'), 'punct'), (('2010', 'Learning'), 'nmod:tmod'), ((')', '2010'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('Proc.  International Conference on Machine Learning 399–406', 'EVENT'), ('2010', 'DATE')]

================================ Paragraph 353 =================================

96. Ranzato, M., Mnih, V., Susskind, J. M. & Hinton, G. E. Modeling natural images  using gated MRFs. IEEE Trans. Pattern Anal. Machine Intell. 35, 2206–2222  (2013).  


------------------- Sentence 1 -------------------

 96. Ranzato, M., Mnih, V., Susskind, J. M. & Hinton, G. E. Modeling natural images  using gated MRFs. 

Tokens are: 
>> ['96', '.', 'Ranzato', ',', 'M.', ',', 'Mnih', ',', 'V.', ',', 'Susskind', ',', 'J.', 'M.', '&', 'Hinton', ',', 'G.', 'E.', 'Modeling', 'natural', 'images', 'using', 'gated', 'MRFs', '.'] 

 UPOS tags are: 
>> [('96', 'NUM'), ('.', 'PUNCT'), ('Ranzato', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), (',', 'PUNCT'), ('Mnih', 'PROPN'), (',', 'PUNCT'), ('V.', 'PROPN'), (',', 'PUNCT'), ('Susskind', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('M.', 'PROPN'), ('&', 'CCONJ'), ('Hinton', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('E.', 'PROPN'), ('Modeling', 'VERB'), ('natural', 'ADJ'), ('images', 'NOUN'), ('using', 'VERB'), ('gated', 'VERB'), ('MRFs', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('96', 'LS'), ('.', '.'), ('Ranzato', 'NNP'), (',', ','), ('M.', 'NNP'), (',', ','), ('Mnih', 'NNP'), (',', ','), ('V.', 'NNP'), (',', ','), ('Susskind', 'NNP'), (',', ','), ('J.', 'NNP'), ('M.', 'NNP'), ('&', 'CC'), ('Hinton', 'NNP'), (',', ','), ('G.', 'NNP'), ('E.', 'NNP'), ('Modeling', 'VBG'), ('natural', 'JJ'), ('images', 'NNS'), ('using', 'VBG'), ('gated', 'VBN'), ('MRFs', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('96', '96'), ('.', '.'), ('Ranzato', 'Ranzato'), (',', ','), ('M.', 'M.'), (',', ','), ('Mnih', 'Mnih'), (',', ','), ('V.', 'V.'), (',', ','), ('Susskind', 'Susskind'), (',', ','), ('J.', 'J.'), ('M.', 'M.'), ('&', '&'), ('Hinton', 'Hinton'), (',', ','), ('G.', 'G.'), ('E.', 'E.'), ('Modeling', 'model'), ('natural', 'natural'), ('images', 'image'), ('using', 'use'), ('gated', 'gated'), ('MRFs', 'mrf'), ('.', '.')] 

 Dependency tags are: 
>> [(('96', 'Ranzato'), 'nummod'), (('.', '96'), 'punct'), (('Ranzato', 'root'), 'root'), ((',', 'M.'), 'punct'), (('M.', 'Ranzato'), 'conj'), ((',', 'Mnih'), 'punct'), (('Mnih', 'Ranzato'), 'conj'), ((',', 'V.'), 'punct'), (('V.', 'Ranzato'), 'conj'), ((',', 'Susskind'), 'punct'), (('Susskind', 'Ranzato'), 'conj'), ((',', 'J.'), 'punct'), (('J.', 'Ranzato'), 'conj'), (('M.', 'J.'), 'flat'), (('&', 'Hinton'), 'cc'), (('Hinton', 'Ranzato'), 'conj'), ((',', 'G.'), 'punct'), (('G.', 'Ranzato'), 'conj'), (('E.', 'G.'), 'flat'), (('Modeling', 'Ranzato'), 'conj'), (('natural', 'images'), 'amod'), (('images', 'Modeling'), 'obj'), (('using', 'images'), 'acl'), (('gated', 'MRFs'), 'amod'), (('MRFs', 'using'), 'obj'), (('.', 'Modeling'), 'punct')]

 Named Entites are: 
>> [('96. Ranzato, M., Mnih, V.', 'ORG'), ('Susskind', 'GPE'), ('J. M. & Hinton', 'ORG'), ('G. E. Modeling', 'ORG')]

------------------- Sentence 2 -------------------

 IEEE Trans. Pattern Anal. Machine Intell. 35, 2206–2222  (2013). 

Tokens are: 
>> ['IEEE', 'Trans', '.', 'Pattern', 'Anal', '.', 'Machine', 'Intell.', '35', ',', '2206–2222', '(', '2013', ')', '.'] 

 UPOS tags are: 
>> [('IEEE', 'PROPN'), ('Trans', 'PROPN'), ('.', 'PUNCT'), ('Pattern', 'NOUN'), ('Anal', 'PROPN'), ('.', 'PUNCT'), ('Machine', 'NOUN'), ('Intell.', 'PROPN'), ('35', 'NUM'), (',', 'PUNCT'), ('2206–2222', 'NUM'), ('(', 'PUNCT'), ('2013', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('IEEE', 'NNP'), ('Trans', 'NNP'), ('.', '.'), ('Pattern', 'NN'), ('Anal', 'NNP'), ('.', '.'), ('Machine', 'NN'), ('Intell.', 'NNP'), ('35', 'CD'), (',', ','), ('2206–2222', 'CD'), ('(', '-LRB-'), ('2013', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('IEEE', 'IEEE'), ('Trans', 'Trans'), ('.', '.'), ('Pattern', 'pattern'), ('Anal', 'Anal'), ('.', '.'), ('Machine', 'Machine'), ('Intell.', 'Intell.'), ('35', '35'), (',', ','), ('2206–2222', '2206–2222'), ('(', '('), ('2013', '2013'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('IEEE', 'Trans'), 'compound'), (('Trans', 'root'), 'root'), (('.', 'Trans'), 'punct'), (('Pattern', 'Trans'), 'appos'), (('Anal', 'Trans'), 'list'), (('.', 'Trans'), 'punct'), (('Machine', 'Trans'), 'list'), (('Intell.', 'Machine'), 'appos'), (('35', 'Intell.'), 'nummod'), ((',', 'Intell.'), 'punct'), (('2206–2222', 'Intell.'), 'nummod'), (('(', '2013'), 'punct'), (('2013', 'Intell.'), 'nmod:tmod'), ((')', '2013'), 'punct'), (('.', 'Trans'), 'punct')]

 Named Entites are: 
>> [('35', 'CARDINAL'), ('2206–2222', 'CARDINAL'), ('2013', 'DATE')]

================================ Paragraph 354 =================================

97. Bengio, Y., Thibodeau-Laufer, E., Alain, G. & Yosinski, J. Deep generative  stochastic networks trainable by backprop. In Proc. 31st International  Conference on Machine Learning 226–234 (2014).  


------------------- Sentence 1 -------------------

 97. 

Tokens are: 
>> ['97', '.'] 

 UPOS tags are: 
>> [('97', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('97', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('97', '97'), ('.', '.')] 

 Dependency tags are: 
>> [(('97', 'root'), 'root'), (('.', '97'), 'punct')]

 Named Entites are: 
>> [('97', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Bengio, Y., Thibodeau-Laufer, E., Alain, G. & Yosinski, J. Deep generative  stochastic networks trainable by backprop. 

Tokens are: 
>> ['Bengio', ',', 'Y.', ',', 'Thibodeau', '-', 'Laufer', ',', 'E.', ',', 'Alain', ',', 'G.', '&', 'Yosinski', ',', 'J.', 'Deep', 'generative', 'stochastic', 'networks', 'trainable', 'by', 'backprop', '.'] 

 UPOS tags are: 
>> [('Bengio', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), (',', 'PUNCT'), ('Thibodeau', 'PROPN'), ('-', 'PUNCT'), ('Laufer', 'PROPN'), (',', 'PUNCT'), ('E.', 'PROPN'), (',', 'PUNCT'), ('Alain', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('&', 'CCONJ'), ('Yosinski', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('Deep', 'ADJ'), ('generative', 'ADJ'), ('stochastic', 'ADJ'), ('networks', 'NOUN'), ('trainable', 'ADJ'), ('by', 'ADP'), ('backprop', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Bengio', 'NNP'), (',', ','), ('Y.', 'NNP'), (',', ','), ('Thibodeau', 'NNP'), ('-', ','), ('Laufer', 'NNP'), (',', ','), ('E.', 'NNP'), (',', ','), ('Alain', 'NNP'), (',', ','), ('G.', 'NNP'), ('&', 'CC'), ('Yosinski', 'NNP'), (',', ','), ('J.', 'NNP'), ('Deep', 'NNP'), ('generative', 'JJ'), ('stochastic', 'JJ'), ('networks', 'NNS'), ('trainable', 'JJ'), ('by', 'IN'), ('backprop', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('Bengio', 'Bengio'), (',', ','), ('Y.', 'Y.'), (',', ','), ('Thibodeau', 'Thibodeau'), ('-', '-'), ('Laufer', 'Laufer'), (',', ','), ('E.', 'E.'), (',', ','), ('Alain', 'Alain'), (',', ','), ('G.', 'G.'), ('&', '&'), ('Yosinski', 'Yosinski'), (',', ','), ('J.', 'J.'), ('Deep', 'deep'), ('generative', 'generative'), ('stochastic', 'stochastic'), ('networks', 'network'), ('trainable', 'trainable'), ('by', 'by'), ('backprop', 'backprop'), ('.', '.')] 

 Dependency tags are: 
>> [(('Bengio', 'root'), 'root'), ((',', 'Y.'), 'punct'), (('Y.', 'Bengio'), 'conj'), ((',', 'Thibodeau'), 'punct'), (('Thibodeau', 'Bengio'), 'conj'), (('-', 'Bengio'), 'punct'), (('Laufer', 'Bengio'), 'conj'), ((',', 'E.'), 'punct'), (('E.', 'Laufer'), 'conj'), ((',', 'Alain'), 'punct'), (('Alain', 'Bengio'), 'conj'), ((',', 'G.'), 'punct'), (('G.', 'Bengio'), 'conj'), (('&', 'Yosinski'), 'cc'), (('Yosinski', 'G.'), 'conj'), ((',', 'networks'), 'punct'), (('J.', 'Bengio'), 'conj'), (('Deep', 'networks'), 'amod'), (('generative', 'networks'), 'amod'), (('stochastic', 'networks'), 'amod'), (('networks', 'Bengio'), 'appos'), (('trainable', 'networks'), 'amod'), (('by', 'backprop'), 'case'), (('backprop', 'trainable'), 'obl'), (('.', 'Bengio'), 'punct')]

 Named Entites are: 
>> [('Bengio, Y.', 'ORG'), ('Thibodeau-Laufer', 'GPE'), ('E.', 'GPE'), ('Alain', 'GPE'), ('G. & Yosinski', 'ORG'), ('J. Deep', 'ORG')]

------------------- Sentence 3 -------------------

 In Proc. 31st International  Conference on Machine Learning 226–234 (2014). 

Tokens are: 
>> ['In', 'Proc.', '31st', 'International', 'Conference', 'on', 'Machine', 'Learning', '226–234', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('31st', 'ADJ'), ('International', 'ADJ'), ('Conference', 'PROPN'), ('on', 'ADP'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('226–234', 'NUM'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('31st', 'NNP'), ('International', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('Machine', 'NNP'), ('Learning', 'NNP'), ('226–234', 'CD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('31st', '31st'), ('International', 'International'), ('Conference', 'Conference'), ('on', 'on'), ('Machine', 'Machine'), ('Learning', 'learning'), ('226–234', '226–234'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('31st', 'Conference'), 'amod'), (('International', 'Conference'), 'amod'), (('Conference', 'root'), 'root'), (('on', 'Machine'), 'case'), (('Machine', 'Conference'), 'nmod'), (('Learning', 'Machine'), 'flat'), (('226–234', 'Conference'), 'nmod'), (('(', '2014'), 'punct'), (('2014', '226–234'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('31st', 'ORDINAL'), ('International  Conference on Machine Learning 226–234', 'EVENT'), ('2014', 'DATE')]

================================ Paragraph 355 =================================

98. Kingma, D., Rezende, D., Mohamed, S. & Welling, M. Semi-supervised learning  with deep generative models. In Proc. Advances in Neural Information Processing  Systems 27 3581–3589 (2014).  


------------------- Sentence 1 -------------------

 98. Kingma, D., Rezende, D., Mohamed, S. & Welling, M. Semi-supervised learning  with deep generative models. 

Tokens are: 
>> ['98', '.', 'Kingma', ',', 'D.', ',', 'Rezende', ',', 'D.', ',', 'Mohamed', ',', 'S.', '&', 'Welling', ',', 'M.', 'Semi-supervised', 'learning', 'with', 'deep', 'generative', 'models', '.'] 

 UPOS tags are: 
>> [('98', 'NUM'), ('.', 'PUNCT'), ('Kingma', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), (',', 'PUNCT'), ('Rezende', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), (',', 'PUNCT'), ('Mohamed', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('&', 'CCONJ'), ('Welling', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('Semi-supervised', 'VERB'), ('learning', 'VERB'), ('with', 'ADP'), ('deep', 'ADJ'), ('generative', 'ADJ'), ('models', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('98', 'LS'), ('.', '.'), ('Kingma', 'NNP'), (',', ','), ('D.', 'NNP'), (',', ','), ('Rezende', 'NNP'), (',', ','), ('D.', 'NNP'), (',', ','), ('Mohamed', 'NNP'), (',', ','), ('S.', 'NNP'), ('&', 'CC'), ('Welling', 'NNP'), (',', ','), ('M.', 'NNP'), ('Semi-supervised', 'VBN'), ('learning', 'VBG'), ('with', 'IN'), ('deep', 'JJ'), ('generative', 'JJ'), ('models', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('98', '98'), ('.', '.'), ('Kingma', 'Kingma'), (',', ','), ('D.', 'D.'), (',', ','), ('Rezende', 'Rezende'), (',', ','), ('D.', 'D.'), (',', ','), ('Mohamed', 'Mohamed'), (',', ','), ('S.', 'S.'), ('&', '&'), ('Welling', 'Welling'), (',', ','), ('M.', 'M.'), ('Semi-supervised', 'semi-supervise'), ('learning', 'learn'), ('with', 'with'), ('deep', 'deep'), ('generative', 'generative'), ('models', 'model'), ('.', '.')] 

 Dependency tags are: 
>> [(('98', 'Semi-supervised'), 'nummod'), (('.', '98'), 'punct'), (('Kingma', 'Semi-supervised'), 'nsubj'), ((',', 'D.'), 'punct'), (('D.', 'Kingma'), 'conj'), ((',', 'Rezende'), 'punct'), (('Rezende', 'Kingma'), 'conj'), ((',', 'D.'), 'punct'), (('D.', 'Kingma'), 'conj'), ((',', 'Mohamed'), 'punct'), (('Mohamed', 'Kingma'), 'conj'), ((',', 'S.'), 'punct'), (('S.', 'Kingma'), 'conj'), (('&', 'Welling'), 'cc'), (('Welling', 'S.'), 'conj'), ((',', 'Semi-supervised'), 'punct'), (('M.', 'Semi-supervised'), 'nsubj'), (('Semi-supervised', 'root'), 'root'), (('learning', 'Semi-supervised'), 'xcomp'), (('with', 'models'), 'case'), (('deep', 'models'), 'amod'), (('generative', 'models'), 'amod'), (('models', 'learning'), 'obl'), (('.', 'Semi-supervised'), 'punct')]

 Named Entites are: 
>> [('98', 'CARDINAL'), ('Kingma', 'GPE'), ('D.', 'NORP'), ('Rezende', 'GPE'), ('D.', 'NORP'), ('Mohamed', 'GPE'), ('S. & Welling', 'ORG'), ('M.', 'GPE')]

------------------- Sentence 2 -------------------

 In Proc. Advances in Neural Information Processing  Systems 27 3581–3589 (2014). 

Tokens are: 
>> ['In', 'Proc.', 'Advances', 'in', 'Neural', 'Information', 'Processing', 'Systems', '27', '3581–3589', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'NOUN'), ('Advances', 'NOUN'), ('in', 'ADP'), ('Neural', 'ADJ'), ('Information', 'NOUN'), ('Processing', 'NOUN'), ('Systems', 'NOUN'), ('27', 'NUM'), ('3581–3589', 'NUM'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NN'), ('Advances', 'NNS'), ('in', 'IN'), ('Neural', 'JJ'), ('Information', 'NN'), ('Processing', 'NN'), ('Systems', 'NNS'), ('27', 'CD'), ('3581–3589', 'CD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'proc.'), ('Advances', 'advance'), ('in', 'in'), ('Neural', 'neural'), ('Information', 'information'), ('Processing', 'processing'), ('Systems', 'system'), ('27', '27'), ('3581–3589', '3581–3589'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Advances'), 'case'), (('Proc.', 'Advances'), 'compound'), (('Advances', 'root'), 'root'), (('in', 'Systems'), 'case'), (('Neural', 'Information'), 'amod'), (('Information', 'Systems'), 'compound'), (('Processing', 'Systems'), 'compound'), (('Systems', 'Advances'), 'nmod'), (('27', 'Systems'), 'nummod'), (('3581–3589', '27'), 'flat'), (('(', '2014'), 'punct'), (('2014', 'Systems'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'Advances'), 'punct')]

 Named Entites are: 
>> [('Neural Information Processing  Systems', 'ORG'), ('27', 'CARDINAL'), ('3581–3589', 'CARDINAL'), ('2014', 'DATE')]

================================ Paragraph 356 =================================

99. Ba, J., Mnih, V. & Kavukcuoglu, K. Multiple object recognition with visual  attention. In Proc. International Conference on Learning Representations http:// arxiv.org/abs/1412.7755 (2014).  


------------------- Sentence 1 -------------------

 99. 

Tokens are: 
>> ['99', '.'] 

 UPOS tags are: 
>> [('99', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('99', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('99', '99'), ('.', '.')] 

 Dependency tags are: 
>> [(('99', 'root'), 'root'), (('.', '99'), 'punct')]

 Named Entites are: 
>> [('99', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Ba, J., Mnih, V. & Kavukcuoglu, K. Multiple object recognition with visual  attention. 

Tokens are: 
>> ['Ba', ',', 'J.', ',', 'Mnih', ',', 'V.', '&', 'Kavukcuoglu', ',', 'K.', 'Multiple', 'object', 'recognition', 'with', 'visual', 'attention', '.'] 

 UPOS tags are: 
>> [('Ba', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), (',', 'PUNCT'), ('Mnih', 'PROPN'), (',', 'PUNCT'), ('V.', 'PROPN'), ('&', 'CCONJ'), ('Kavukcuoglu', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), ('Multiple', 'ADJ'), ('object', 'NOUN'), ('recognition', 'NOUN'), ('with', 'ADP'), ('visual', 'ADJ'), ('attention', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Ba', 'NNP'), (',', ','), ('J.', 'NNP'), (',', ','), ('Mnih', 'NNP'), (',', ','), ('V.', 'NNP'), ('&', 'CC'), ('Kavukcuoglu', 'NNP'), (',', ','), ('K.', 'NNP'), ('Multiple', 'JJ'), ('object', 'NN'), ('recognition', 'NN'), ('with', 'IN'), ('visual', 'JJ'), ('attention', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Ba', 'Ba'), (',', ','), ('J.', 'J.'), (',', ','), ('Mnih', 'Mnih'), (',', ','), ('V.', 'V.'), ('&', '&'), ('Kavukcuoglu', 'Kavukcuoglu'), (',', ','), ('K.', 'K.'), ('Multiple', 'multiple'), ('object', 'object'), ('recognition', 'recognition'), ('with', 'with'), ('visual', 'visual'), ('attention', 'attention'), ('.', '.')] 

 Dependency tags are: 
>> [(('Ba', 'root'), 'root'), ((',', 'J.'), 'punct'), (('J.', 'Ba'), 'conj'), ((',', 'Mnih'), 'punct'), (('Mnih', 'Ba'), 'conj'), ((',', 'V.'), 'punct'), (('V.', 'Ba'), 'conj'), (('&', 'Kavukcuoglu'), 'cc'), (('Kavukcuoglu', 'V.'), 'conj'), ((',', 'recognition'), 'punct'), (('K.', 'recognition'), 'compound'), (('Multiple', 'recognition'), 'amod'), (('object', 'recognition'), 'compound'), (('recognition', 'Ba'), 'parataxis'), (('with', 'attention'), 'case'), (('visual', 'attention'), 'amod'), (('attention', 'recognition'), 'nmod'), (('.', 'Ba'), 'punct')]

 Named Entites are: 
>> [('J., Mnih, V. & Kavukcuoglu', 'ORG')]

------------------- Sentence 3 -------------------

 In Proc. International Conference on Learning Representations http:// arxiv.org/abs/1412.7755 (2014). 

Tokens are: 
>> ['In', 'Proc.', 'International', 'Conference', 'on', 'Learning', 'Representations', 'http://', 'arxiv.org/abs/1412.7755', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('International', 'ADJ'), ('Conference', 'PROPN'), ('on', 'ADP'), ('Learning', 'PROPN'), ('Representations', 'PROPN'), ('http://', 'PROPN'), ('arxiv.org/abs/1412.7755', 'X'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('International', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('Learning', 'NNP'), ('Representations', 'NNPS'), ('http://', 'NNP'), ('arxiv.org/abs/1412.7755', 'ADD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('International', 'International'), ('Conference', 'Conference'), ('on', 'on'), ('Learning', 'learning'), ('Representations', 'Representations'), ('http://', 'http://'), ('arxiv.org/abs/1412.7755', 'arxiv.org/abs/1412.7755'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('International', 'Conference'), 'amod'), (('Conference', 'root'), 'root'), (('on', 'Representations'), 'case'), (('Learning', 'Representations'), 'compound'), (('Representations', 'Conference'), 'nmod'), (('http://', 'Representations'), 'appos'), (('arxiv.org/abs/1412.7755', 'Representations'), 'appos'), (('(', '2014'), 'punct'), (('2014', 'arxiv.org/abs/1412.7755'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('Proc. International Conference on Learning Representations', 'EVENT'), ('2014', 'DATE')]

================================ Paragraph 357 =================================

100. Mnih, V. et al. Human-level control through deep reinforcement learning. Nature   518, 529–533 (2015). 


------------------- Sentence 1 -------------------

 100. 

Tokens are: 
>> ['100', '.'] 

 UPOS tags are: 
>> [('100', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('100', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('100', '100'), ('.', '.')] 

 Dependency tags are: 
>> [(('100', 'root'), 'root'), (('.', '100'), 'punct')]

 Named Entites are: 
>> [('100', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Mnih, V. et al. Human-level control through deep reinforcement learning. 

Tokens are: 
>> ['Mnih', ',', 'V.', 'et', 'al.', 'Human-level', 'control', 'through', 'deep', 'reinforcement', 'learning', '.'] 

 UPOS tags are: 
>> [('Mnih', 'PROPN'), (',', 'PUNCT'), ('V.', 'PROPN'), ('et', 'X'), ('al.', 'X'), ('Human-level', 'ADJ'), ('control', 'NOUN'), ('through', 'ADP'), ('deep', 'ADJ'), ('reinforcement', 'NOUN'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Mnih', 'NNP'), (',', ','), ('V.', 'NNP'), ('et', 'FW'), ('al.', 'FW'), ('Human-level', 'JJ'), ('control', 'NN'), ('through', 'IN'), ('deep', 'JJ'), ('reinforcement', 'NN'), ('learning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Mnih', 'Mnih'), (',', ','), ('V.', 'V.'), ('et', 'et'), ('al.', 'al.'), ('Human-level', 'human-level'), ('control', 'control'), ('through', 'through'), ('deep', 'deep'), ('reinforcement', 'reinforcement'), ('learning', 'learning'), ('.', '.')] 

 Dependency tags are: 
>> [(('Mnih', 'root'), 'root'), ((',', 'V.'), 'punct'), (('V.', 'Mnih'), 'conj'), (('et', 'al.'), 'cc'), (('al.', 'Mnih'), 'conj'), (('Human-level', 'control'), 'amod'), (('control', 'Mnih'), 'appos'), (('through', 'learning'), 'case'), (('deep', 'learning'), 'amod'), (('reinforcement', 'learning'), 'compound'), (('learning', 'control'), 'nmod'), (('.', 'Mnih'), 'punct')]

 Named Entites are: 
>> [('Mnih', 'PERSON')]

------------------- Sentence 3 -------------------

 Nature   518, 529–533 (2015). 

Tokens are: 
>> ['Nature', '518', ',', '529–533', '(', '2015', ')', '.'] 

 UPOS tags are: 
>> [('Nature', 'NOUN'), ('518', 'NUM'), (',', 'PUNCT'), ('529–533', 'NUM'), ('(', 'PUNCT'), ('2015', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Nature', 'NN'), ('518', 'CD'), (',', ','), ('529–533', 'CD'), ('(', '-LRB-'), ('2015', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Nature', 'nature'), ('518', '518'), (',', ','), ('529–533', '529–533'), ('(', '('), ('2015', '2015'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Nature', 'root'), 'root'), (('518', 'Nature'), 'dep'), ((',', '529–533'), 'punct'), (('529–533', 'Nature'), 'appos'), (('(', '2015'), 'punct'), (('2015', '529–533'), 'nmod:tmod'), ((')', '2015'), 'punct'), (('.', 'Nature'), 'punct')]

 Named Entites are: 
>> [('518', 'CARDINAL'), ('529–533', 'CARDINAL'), ('2015', 'DATE')]

================================ Paragraph 358 =================================

101. Bottou, L. From machine learning to machine reasoning. Mach. Learn. 94,  133–149 (2014).  


------------------- Sentence 1 -------------------

 101. 

Tokens are: 
>> ['101', '.'] 

 UPOS tags are: 
>> [('101', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('101', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('101', '101'), ('.', '.')] 

 Dependency tags are: 
>> [(('101', 'root'), 'root'), (('.', '101'), 'punct')]

 Named Entites are: 
>> [('101', 'CARDINAL')]

------------------- Sentence 2 -------------------

 Bottou, L. From machine learning to machine reasoning. 

Tokens are: 
>> ['Bottou', ',', 'L.', 'From', 'machine', 'learning', 'to', 'machine', 'reasoning', '.'] 

 UPOS tags are: 
>> [('Bottou', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('From', 'ADP'), ('machine', 'NOUN'), ('learning', 'VERB'), ('to', 'ADP'), ('machine', 'NOUN'), ('reasoning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Bottou', 'NNP'), (',', ','), ('L.', 'NNP'), ('From', 'IN'), ('machine', 'NN'), ('learning', 'VBG'), ('to', 'IN'), ('machine', 'NN'), ('reasoning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Bottou', 'Bottou'), (',', ','), ('L.', 'L.'), ('From', 'from'), ('machine', 'machine'), ('learning', 'learn'), ('to', 'to'), ('machine', 'machine'), ('reasoning', 'reasoning'), ('.', '.')] 

 Dependency tags are: 
>> [(('Bottou', 'root'), 'root'), ((',', 'Bottou'), 'punct'), (('L.', 'Bottou'), 'flat'), (('From', 'machine'), 'case'), (('machine', 'Bottou'), 'nmod'), (('learning', 'Bottou'), 'acl'), (('to', 'reasoning'), 'case'), (('machine', 'reasoning'), 'compound'), (('reasoning', 'learning'), 'obl'), (('.', 'Bottou'), 'punct')]

 Named Entites are: 
>> [('Bottou', 'ORG')]

------------------- Sentence 3 -------------------

 Mach. Learn. 94,  133–149 (2014). 

Tokens are: 
>> ['Mach', '.', 'Learn.', '94', ',', '133–149', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('Mach', 'PROPN'), ('.', 'PUNCT'), ('Learn.', 'PROPN'), ('94', 'NUM'), (',', 'PUNCT'), ('133–149', 'NUM'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Mach', 'NNP'), ('.', '.'), ('Learn.', 'NNP'), ('94', 'CD'), (',', ','), ('133–149', 'CD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Mach', 'Mach'), ('.', '.'), ('Learn.', 'Learn.'), ('94', '94'), (',', ','), ('133–149', '133–149'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Mach', 'Learn.'), 'dep'), (('.', 'Mach'), 'punct'), (('Learn.', 'root'), 'root'), (('94', 'Learn.'), 'dep'), ((',', '133–149'), 'punct'), (('133–149', 'Learn.'), 'list'), (('(', '2014'), 'punct'), (('2014', '133–149'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'Mach'), 'punct')]

 Named Entites are: 
>> [('94', 'CARDINAL'), ('133–149', 'CARDINAL'), ('2014', 'DATE')]

================================ Paragraph 359 =================================

102. Vinyals, O., Toshev, A., Bengio, S. & Erhan, D. Show and tell: a neural image  caption generator. In Proc. International Conference on Machine Learning http:// arxiv.org/abs/1502.03044 (2014). 


------------------- Sentence 1 -------------------

 102. Vinyals, O., Toshev, A., Bengio, S. & Erhan, D. Show and tell: a neural image  caption generator. 

Tokens are: 
>> ['102', '.', 'Vinyals', ',', 'O.', ',', 'Toshev', ',', 'A.', ',', 'Bengio', ',', 'S.', '&', 'Erhan', ',', 'D.', 'Show', 'and', 'tell', ':', 'a', 'neural', 'image', 'caption', 'generator', '.'] 

 UPOS tags are: 
>> [('102', 'NUM'), ('.', 'PUNCT'), ('Vinyals', 'PROPN'), (',', 'PUNCT'), ('O.', 'PROPN'), (',', 'PUNCT'), ('Toshev', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), (',', 'PUNCT'), ('Bengio', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('&', 'CCONJ'), ('Erhan', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('Show', 'PROPN'), ('and', 'CCONJ'), ('tell', 'VERB'), (':', 'PUNCT'), ('a', 'DET'), ('neural', 'ADJ'), ('image', 'NOUN'), ('caption', 'NOUN'), ('generator', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('102', 'LS'), ('.', '.'), ('Vinyals', 'NNPS'), (',', ','), ('O.', 'NNP'), (',', ','), ('Toshev', 'NNP'), (',', ','), ('A.', 'NNP'), (',', ','), ('Bengio', 'NNP'), (',', ','), ('S.', 'NNP'), ('&', 'CC'), ('Erhan', 'NNP'), (',', ','), ('D.', 'NNP'), ('Show', 'NNP'), ('and', 'CC'), ('tell', 'VB'), (':', ':'), ('a', 'DT'), ('neural', 'JJ'), ('image', 'NN'), ('caption', 'NN'), ('generator', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('102', '102'), ('.', '.'), ('Vinyals', 'Vinyals'), (',', ','), ('O.', 'O.'), (',', ','), ('Toshev', 'Toshev'), (',', ','), ('A.', 'A.'), (',', ','), ('Bengio', 'Bengio'), (',', ','), ('S.', 'S.'), ('&', '&'), ('Erhan', 'Erhan'), (',', ','), ('D.', 'D.'), ('Show', 'show'), ('and', 'and'), ('tell', 'tell'), (':', ':'), ('a', 'a'), ('neural', 'neural'), ('image', 'image'), ('caption', 'caption'), ('generator', 'generator'), ('.', '.')] 

 Dependency tags are: 
>> [(('102', 'Vinyals'), 'nummod'), (('.', '102'), 'punct'), (('Vinyals', 'root'), 'root'), ((',', 'O.'), 'punct'), (('O.', 'Vinyals'), 'conj'), ((',', 'Toshev'), 'punct'), (('Toshev', 'Vinyals'), 'conj'), ((',', 'A.'), 'punct'), (('A.', 'Vinyals'), 'conj'), ((',', 'Bengio'), 'punct'), (('Bengio', 'Vinyals'), 'conj'), ((',', 'S.'), 'punct'), (('S.', 'Vinyals'), 'conj'), (('&', 'Erhan'), 'cc'), (('Erhan', 'Vinyals'), 'conj'), ((',', 'Show'), 'punct'), (('D.', 'Show'), 'compound'), (('Show', 'Vinyals'), 'conj'), (('and', 'tell'), 'cc'), (('tell', 'Vinyals'), 'conj'), ((':', 'generator'), 'punct'), (('a', 'generator'), 'det'), (('neural', 'image'), 'amod'), (('image', 'generator'), 'compound'), (('caption', 'generator'), 'compound'), (('generator', 'tell'), 'ccomp'), (('.', 'Vinyals'), 'punct')]

 Named Entites are: 
>> [('102. Vinyals, O., Toshev, A.', 'ORG'), ('Bengio', 'PERSON'), ('S. & Erhan', 'ORG'), ('D. Show', 'ORG')]

------------------- Sentence 2 -------------------

 In Proc. International Conference on Machine Learning http:// arxiv.org/abs/1502.03044 (2014). 

Tokens are: 
>> ['In', 'Proc.', 'International', 'Conference', 'on', 'Machine', 'Learning', 'http://', 'arxiv.org/abs/1502.03044', '(', '2014', ')', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('Proc.', 'PROPN'), ('International', 'ADJ'), ('Conference', 'PROPN'), ('on', 'ADP'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('http://', 'PROPN'), ('arxiv.org/abs/1502.03044', 'X'), ('(', 'PUNCT'), ('2014', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('Proc.', 'NNP'), ('International', 'NNP'), ('Conference', 'NNP'), ('on', 'IN'), ('Machine', 'NNP'), ('Learning', 'NNP'), ('http://', 'NNP'), ('arxiv.org/abs/1502.03044', 'ADD'), ('(', '-LRB-'), ('2014', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('Proc.', 'Proc.'), ('International', 'International'), ('Conference', 'Conference'), ('on', 'on'), ('Machine', 'Machine'), ('Learning', 'learning'), ('http://', 'http://'), ('arxiv.org/abs/1502.03044', 'arxiv.org/abs/1502.03044'), ('(', '('), ('2014', '2014'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'Conference'), 'case'), (('Proc.', 'Conference'), 'compound'), (('International', 'Conference'), 'amod'), (('Conference', 'root'), 'root'), (('on', 'Machine'), 'case'), (('Machine', 'Conference'), 'nmod'), (('Learning', 'http://'), 'compound'), (('http://', 'Conference'), 'nmod'), (('arxiv.org/abs/1502.03044', 'http://'), 'appos'), (('(', '2014'), 'punct'), (('2014', 'arxiv.org/abs/1502.03044'), 'nmod:tmod'), ((')', '2014'), 'punct'), (('.', 'Conference'), 'punct')]

 Named Entites are: 
>> [('Proc. International Conference on Machine Learning', 'EVENT'), ('2014', 'DATE')]

================================ Paragraph 360 =================================

103. van der Maaten, L. & Hinton, G. E. Visualizing data using t-SNE. J. Mach. Learn. Research 9, 2579–2605 (2008). 


------------------- Sentence 1 -------------------

 103. 

Tokens are: 
>> ['103', '.'] 

 UPOS tags are: 
>> [('103', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('103', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('103', '103'), ('.', '.')] 

 Dependency tags are: 
>> [(('103', 'root'), 'root'), (('.', '103'), 'punct')]

 Named Entites are: 
>> [('103', 'CARDINAL')]

------------------- Sentence 2 -------------------

 van der Maaten, L. & Hinton, G. E. Visualizing data using t-SNE. 

Tokens are: 
>> ['van', 'der', 'Maaten', ',', 'L.', '&', 'Hinton', ',', 'G.', 'E.', 'Visualizing', 'data', 'using', 't-SNE', '.'] 

 UPOS tags are: 
>> [('van', 'PROPN'), ('der', 'PROPN'), ('Maaten', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('&', 'CCONJ'), ('Hinton', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('E.', 'PROPN'), ('Visualizing', 'VERB'), ('data', 'NOUN'), ('using', 'VERB'), ('t-SNE', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('van', 'NNP'), ('der', 'NNP'), ('Maaten', 'NNP'), (',', ','), ('L.', 'NNP'), ('&', 'CC'), ('Hinton', 'NNP'), (',', ','), ('G.', 'NNP'), ('E.', 'NNP'), ('Visualizing', 'VBG'), ('data', 'NNS'), ('using', 'VBG'), ('t-SNE', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('van', 'van'), ('der', 'der'), ('Maaten', 'Maaten'), (',', ','), ('L.', 'L.'), ('&', '&'), ('Hinton', 'Hinton'), (',', ','), ('G.', 'G.'), ('E.', 'E.'), ('Visualizing', 'visualize'), ('data', 'datum'), ('using', 'use'), ('t-SNE', 't-SNE'), ('.', '.')] 

 Dependency tags are: 
>> [(('van', 'root'), 'root'), (('der', 'van'), 'flat'), (('Maaten', 'van'), 'flat'), ((',', 'L.'), 'punct'), (('L.', 'van'), 'flat'), (('&', 'Hinton'), 'cc'), (('Hinton', 'L.'), 'conj'), ((',', 'van'), 'punct'), (('G.', 'van'), 'list'), (('E.', 'G.'), 'flat'), (('Visualizing', 'van'), 'parataxis'), (('data', 'Visualizing'), 'obj'), (('using', 'data'), 'acl'), (('t-SNE', 'using'), 'obj'), (('.', 'van'), 'punct')]

 Named Entites are: 
>> [('van der Maaten', 'ORG'), ('L. & Hinton', 'ORG'), ('G. E. Visualizing', 'ORG'), ('t-SNE', 'ORG')]

------------------- Sentence 3 -------------------

 J. Mach. Learn. Research 9, 2579–2605 (2008). 

Tokens are: 
>> ['J.', 'Mach', '.', 'Learn.', 'Research', '9', ',', '2579–2605', '(', '2008', ')', '.'] 

 UPOS tags are: 
>> [('J.', 'PROPN'), ('Mach', 'PROPN'), ('.', 'PUNCT'), ('Learn.', 'PROPN'), ('Research', 'PROPN'), ('9', 'NUM'), (',', 'PUNCT'), ('2579–2605', 'NUM'), ('(', 'PUNCT'), ('2008', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('J.', 'NNP'), ('Mach', 'NNP'), ('.', '.'), ('Learn.', 'NNP'), ('Research', 'NNP'), ('9', 'CD'), (',', ','), ('2579–2605', 'CD'), ('(', '-LRB-'), ('2008', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('J.', 'J.'), ('Mach', 'Mach'), ('.', '.'), ('Learn.', 'Learn.'), ('Research', 'Research'), ('9', '9'), (',', ','), ('2579–2605', '2579–2605'), ('(', '('), ('2008', '2008'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('J.', 'root'), 'root'), (('Mach', 'J.'), 'flat'), (('.', 'J.'), 'punct'), (('Learn.', '9'), 'compound'), (('Research', '9'), 'compound'), (('9', 'J.'), 'list'), ((',', '2579–2605'), 'punct'), (('2579–2605', '9'), 'nmod:tmod'), (('(', '2008'), 'punct'), (('2008', '9'), 'nmod:tmod'), ((')', '2008'), 'punct'), (('.', 'J.'), 'punct')]

 Named Entites are: 
>> [('J. Mach.', 'PERSON'), ('Learn. Research 9', 'ORG'), ('2579–2605', 'CARDINAL'), ('2008', 'DATE')]

================================ Paragraph 361 =================================

Acknowledgements The authors would like to thank the Natural Sciences and  Engineering Research Council of Canada, the Canadian Institute For Advanced  Research (CIFAR), the National Science Foundation and Office of Naval Research  for support. Y.L. and Y.B. are CIFAR fellows. 


------------------- Sentence 1 -------------------

 Acknowledgements 

Tokens are: 
>> ['Acknowledgements'] 

 UPOS tags are: 
>> [('Acknowledgements', 'NOUN')] 

 XPOS tags are: 
>> [('Acknowledgements', 'NNS')] 

 Lemmas are: 
>> [('Acknowledgements', 'acknowledgement')] 

 Dependency tags are: 
>> [(('Acknowledgements', 'root'), 'root')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 The authors would like to thank the Natural Sciences and  Engineering Research Council of Canada, the Canadian Institute For Advanced  Research (CIFAR), the National Science Foundation and Office of Naval Research  for support. 

Tokens are: 
>> ['The', 'authors', 'would', 'like', 'to', 'thank', 'the', 'Natural', 'Sciences', 'and', 'Engineering', 'Research', 'Council', 'of', 'Canada', ',', 'the', 'Canadian', 'Institute', 'For', 'Advanced', 'Research', '(', 'CIFAR', ')', ',', 'the', 'National', 'Science', 'Foundation', 'and', 'Office', 'of', 'Naval', 'Research', 'for', 'support', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('authors', 'NOUN'), ('would', 'AUX'), ('like', 'VERB'), ('to', 'PART'), ('thank', 'VERB'), ('the', 'DET'), ('Natural', 'ADJ'), ('Sciences', 'PROPN'), ('and', 'CCONJ'), ('Engineering', 'PROPN'), ('Research', 'PROPN'), ('Council', 'PROPN'), ('of', 'ADP'), ('Canada', 'PROPN'), (',', 'PUNCT'), ('the', 'DET'), ('Canadian', 'ADJ'), ('Institute', 'PROPN'), ('For', 'ADP'), ('Advanced', 'ADJ'), ('Research', 'PROPN'), ('(', 'PUNCT'), ('CIFAR', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('the', 'DET'), ('National', 'ADJ'), ('Science', 'PROPN'), ('Foundation', 'PROPN'), ('and', 'CCONJ'), ('Office', 'PROPN'), ('of', 'ADP'), ('Naval', 'ADJ'), ('Research', 'PROPN'), ('for', 'ADP'), ('support', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('authors', 'NNS'), ('would', 'MD'), ('like', 'VB'), ('to', 'TO'), ('thank', 'VB'), ('the', 'DT'), ('Natural', 'NNP'), ('Sciences', 'NNPS'), ('and', 'CC'), ('Engineering', 'NNP'), ('Research', 'NNP'), ('Council', 'NNP'), ('of', 'IN'), ('Canada', 'NNP'), (',', ','), ('the', 'DT'), ('Canadian', 'NNP'), ('Institute', 'NNP'), ('For', 'IN'), ('Advanced', 'NNP'), ('Research', 'NNP'), ('(', '-LRB-'), ('CIFAR', 'NNP'), (')', '-RRB-'), (',', ','), ('the', 'DT'), ('National', 'NNP'), ('Science', 'NNP'), ('Foundation', 'NNP'), ('and', 'CC'), ('Office', 'NNP'), ('of', 'IN'), ('Naval', 'NNP'), ('Research', 'NNP'), ('for', 'IN'), ('support', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('authors', 'author'), ('would', 'would'), ('like', 'like'), ('to', 'to'), ('thank', 'thank'), ('the', 'the'), ('Natural', 'Natural'), ('Sciences', 'Science'), ('and', 'and'), ('Engineering', 'Engineering'), ('Research', 'Research'), ('Council', 'Council'), ('of', 'of'), ('Canada', 'Canada'), (',', ','), ('the', 'the'), ('Canadian', 'Canadian'), ('Institute', 'Institute'), ('For', 'for'), ('Advanced', 'Advanced'), ('Research', 'Research'), ('(', '('), ('CIFAR', 'CIFAR'), (')', ')'), (',', ','), ('the', 'the'), ('National', 'National'), ('Science', 'Science'), ('Foundation', 'Foundation'), ('and', 'and'), ('Office', 'Office'), ('of', 'of'), ('Naval', 'Naval'), ('Research', 'Research'), ('for', 'for'), ('support', 'support'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'authors'), 'det'), (('authors', 'like'), 'nsubj'), (('would', 'like'), 'aux'), (('like', 'root'), 'root'), (('to', 'thank'), 'mark'), (('thank', 'like'), 'xcomp'), (('the', 'Council'), 'det'), (('Natural', 'Sciences'), 'amod'), (('Sciences', 'thank'), 'obj'), (('and', 'Council'), 'cc'), (('Engineering', 'Research'), 'compound'), (('Research', 'Council'), 'compound'), (('Council', 'Sciences'), 'conj'), (('of', 'Canada'), 'case'), (('Canada', 'Council'), 'nmod'), ((',', 'Institute'), 'punct'), (('the', 'Institute'), 'det'), (('Canadian', 'Institute'), 'amod'), (('Institute', 'Sciences'), 'conj'), (('For', 'Research'), 'case'), (('Advanced', 'Research'), 'amod'), (('Research', 'Institute'), 'nmod'), (('(', 'CIFAR'), 'punct'), (('CIFAR', 'Research'), 'appos'), ((')', 'CIFAR'), 'punct'), ((',', 'Foundation'), 'punct'), (('the', 'Foundation'), 'det'), (('National', 'Science'), 'amod'), (('Science', 'Foundation'), 'compound'), (('Foundation', 'Research'), 'conj'), (('and', 'Office'), 'cc'), (('Office', 'Foundation'), 'conj'), (('of', 'Research'), 'case'), (('Naval', 'Research'), 'amod'), (('Research', 'Office'), 'nmod'), (('for', 'support'), 'case'), (('support', 'Foundation'), 'nmod'), (('.', 'like'), 'punct')]

 Named Entites are: 
>> [('the Natural Sciences and  Engineering Research Council of Canada', 'ORG'), ('the Canadian Institute For Advanced  Research (CIFAR)', 'ORG'), ('the National Science Foundation', 'ORG'), ('Office of Naval Research', 'ORG')]

------------------- Sentence 3 -------------------

 Y.L. and Y.B. are CIFAR fellows. 

Tokens are: 
>> ['Y.L.', 'and', 'Y.B.', 'are', 'CIFAR', 'fellows', '.'] 

 UPOS tags are: 
>> [('Y.L.', 'PROPN'), ('and', 'CCONJ'), ('Y.B.', 'PROPN'), ('are', 'AUX'), ('CIFAR', 'PROPN'), ('fellows', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Y.L.', 'NNP'), ('and', 'CC'), ('Y.B.', 'NNP'), ('are', 'VBP'), ('CIFAR', 'NNP'), ('fellows', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Y.L.', 'Y.L.'), ('and', 'and'), ('Y.B.', 'Y.B.'), ('are', 'be'), ('CIFAR', 'CIFAR'), ('fellows', 'fellow'), ('.', '.')] 

 Dependency tags are: 
>> [(('Y.L.', 'fellows'), 'nsubj'), (('and', 'Y.B.'), 'cc'), (('Y.B.', 'Y.L.'), 'conj'), (('are', 'fellows'), 'cop'), (('CIFAR', 'fellows'), 'compound'), (('fellows', 'root'), 'root'), (('.', 'fellows'), 'punct')]

 Named Entites are: 
>> [('Y.B.', 'WORK_OF_ART'), ('CIFAR', 'ORG')]

================================ Paragraph 362 =================================

Author Information Reprints and permissions information is available at  www.nature.com/reprints. The authors declare no competing financial  interests. Readers are welcome to comment on the online version of this  paper at go.nature.com/7cjbaa. Correspondence should be addressed to Y.L.  (yann@cs.nyu.edu). 


------------------- Sentence 1 -------------------

 Author Information Reprints and permissions information is available at  www.nature.com/reprints. 

Tokens are: 
>> ['Author', 'Information', 'Reprints', 'and', 'permissions', 'information', 'is', 'available', 'at', 'www.nature.com/reprints.'] 

 UPOS tags are: 
>> [('Author', 'NOUN'), ('Information', 'NOUN'), ('Reprints', 'NOUN'), ('and', 'CCONJ'), ('permissions', 'NOUN'), ('information', 'NOUN'), ('is', 'AUX'), ('available', 'ADJ'), ('at', 'ADP'), ('www.nature.com/reprints.', 'X')] 

 XPOS tags are: 
>> [('Author', 'NN'), ('Information', 'NN'), ('Reprints', 'NNS'), ('and', 'CC'), ('permissions', 'NNS'), ('information', 'NN'), ('is', 'VBZ'), ('available', 'JJ'), ('at', 'IN'), ('www.nature.com/reprints.', 'ADD')] 

 Lemmas are: 
>> [('Author', 'author'), ('Information', 'information'), ('Reprints', 'reprint'), ('and', 'and'), ('permissions', 'permission'), ('information', 'information'), ('is', 'be'), ('available', 'available'), ('at', 'at'), ('www.nature.com/reprints.', 'www.nature.com/reprints.')] 

 Dependency tags are: 
>> [(('Author', 'Reprints'), 'compound'), (('Information', 'Reprints'), 'compound'), (('Reprints', 'available'), 'nsubj'), (('and', 'information'), 'cc'), (('permissions', 'information'), 'compound'), (('information', 'Reprints'), 'conj'), (('is', 'available'), 'cop'), (('available', 'root'), 'root'), (('at', 'www.nature.com/reprints.'), 'case'), (('www.nature.com/reprints.', 'available'), 'obl')]

 Named Entites are: 
>> []

------------------- Sentence 2 -------------------

 The authors declare no competing financial  interests. 

Tokens are: 
>> ['The', 'authors', 'declare', 'no', 'competing', 'financial', 'interests', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('authors', 'NOUN'), ('declare', 'VERB'), ('no', 'DET'), ('competing', 'VERB'), ('financial', 'ADJ'), ('interests', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('authors', 'NNS'), ('declare', 'VBP'), ('no', 'DT'), ('competing', 'VBG'), ('financial', 'JJ'), ('interests', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('authors', 'author'), ('declare', 'declare'), ('no', 'no'), ('competing', 'compete'), ('financial', 'financial'), ('interests', 'interest'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'authors'), 'det'), (('authors', 'declare'), 'nsubj'), (('declare', 'root'), 'root'), (('no', 'interests'), 'det'), (('competing', 'interests'), 'amod'), (('financial', 'interests'), 'amod'), (('interests', 'declare'), 'obj'), (('.', 'declare'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 3 -------------------

 Readers are welcome to comment on the online version of this  paper at go.nature.com/7cjbaa. 

Tokens are: 
>> ['Readers', 'are', 'welcome', 'to', 'comment', 'on', 'the', 'online', 'version', 'of', 'this', 'paper', 'at', 'go.nature.com/7cjbaa', '.'] 

 UPOS tags are: 
>> [('Readers', 'NOUN'), ('are', 'AUX'), ('welcome', 'ADJ'), ('to', 'PART'), ('comment', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('online', 'ADJ'), ('version', 'NOUN'), ('of', 'ADP'), ('this', 'DET'), ('paper', 'NOUN'), ('at', 'ADP'), ('go.nature.com/7cjbaa', 'X'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Readers', 'NNS'), ('are', 'VBP'), ('welcome', 'JJ'), ('to', 'TO'), ('comment', 'VB'), ('on', 'IN'), ('the', 'DT'), ('online', 'JJ'), ('version', 'NN'), ('of', 'IN'), ('this', 'DT'), ('paper', 'NN'), ('at', 'IN'), ('go.nature.com/7cjbaa', 'ADD'), ('.', '.')] 

 Lemmas are: 
>> [('Readers', 'reader'), ('are', 'be'), ('welcome', 'welcome'), ('to', 'to'), ('comment', 'comment'), ('on', 'on'), ('the', 'the'), ('online', 'online'), ('version', 'version'), ('of', 'of'), ('this', 'this'), ('paper', 'paper'), ('at', 'at'), ('go.nature.com/7cjbaa', 'go.nature.com/7cjbaa'), ('.', '.')] 

 Dependency tags are: 
>> [(('Readers', 'welcome'), 'nsubj'), (('are', 'welcome'), 'cop'), (('welcome', 'root'), 'root'), (('to', 'comment'), 'mark'), (('comment', 'welcome'), 'xcomp'), (('on', 'version'), 'case'), (('the', 'version'), 'det'), (('online', 'version'), 'amod'), (('version', 'comment'), 'obl'), (('of', 'paper'), 'case'), (('this', 'paper'), 'det'), (('paper', 'version'), 'nmod'), (('at', 'go.nature.com/7cjbaa'), 'case'), (('go.nature.com/7cjbaa', 'comment'), 'obl'), (('.', 'welcome'), 'punct')]

 Named Entites are: 
>> []

------------------- Sentence 4 -------------------

 Correspondence should be addressed to Y.L.  (yann@cs.nyu.edu). 

Tokens are: 
>> ['Correspondence', 'should', 'be', 'addressed', 'to', 'Y.L.', '(', 'yann@cs.nyu.edu', ')', '.'] 

 UPOS tags are: 
>> [('Correspondence', 'NOUN'), ('should', 'AUX'), ('be', 'AUX'), ('addressed', 'VERB'), ('to', 'ADP'), ('Y.L.', 'PROPN'), ('(', 'PUNCT'), ('yann@cs.nyu.edu', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Correspondence', 'NN'), ('should', 'MD'), ('be', 'VB'), ('addressed', 'VBN'), ('to', 'IN'), ('Y.L.', 'NNP'), ('(', '-LRB-'), ('yann@cs.nyu.edu', 'NNP'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Correspondence', 'Correspondence'), ('should', 'should'), ('be', 'be'), ('addressed', 'address'), ('to', 'to'), ('Y.L.', 'Y.L.'), ('(', '('), ('yann@cs.nyu.edu', 'yann@cs.nyu.edu'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Correspondence', 'addressed'), 'nsubj:pass'), (('should', 'addressed'), 'aux'), (('be', 'addressed'), 'aux:pass'), (('addressed', 'root'), 'root'), (('to', 'Y.L.'), 'case'), (('Y.L.', 'addressed'), 'obl'), (('(', 'yann@cs.nyu.edu'), 'punct'), (('yann@cs.nyu.edu', 'Y.L.'), 'appos'), ((')', 'yann@cs.nyu.edu'), 'punct'), (('.', 'addressed'), 'punct')]

 Named Entites are: 
>> [('Y.L.', 'WORK_OF_ART')]

================================ Paragraph 363 =================================

4 4 4  |  N A T U R E  |  V O L  5 2 1  |  2 8  M A Y  2 0 1 5 


------------------- Sentence 1 -------------------

 4 4 4  |  N A T U R E  |  V O L  5 2 1  |  2 8  M A Y  2 0 1 5 

Tokens are: 
>> ['4', '4', '4', '|', 'N', 'A', 'T', 'U', 'R', 'E', '|', 'V', 'O', 'L', '5', '2', '1', '|', '2', '8', 'M', 'A', 'Y', '2', '0', '1', '5'] 

 UPOS tags are: 
>> [('4', 'NUM'), ('4', 'NUM'), ('4', 'NUM'), ('|', 'PUNCT'), ('N', 'NOUN'), ('A', 'NUM'), ('T', 'NOUN'), ('U', 'NOUN'), ('R', 'NOUN'), ('E', 'NOUN'), ('|', 'SYM'), ('V', 'NOUN'), ('O', 'SYM'), ('L', 'SYM'), ('5', 'NUM'), ('2', 'NUM'), ('1', 'NUM'), ('|', 'SYM'), ('2', 'NUM'), ('8', 'NUM'), ('M', 'NUM'), ('A', 'NUM'), ('Y', 'NOUN'), ('2', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('5', 'NUM')] 

 XPOS tags are: 
>> [('4', 'CD'), ('4', 'CD'), ('4', 'CD'), ('|', ':'), ('N', 'NN'), ('A', 'CD'), ('T', 'NN'), ('U', 'NNS'), ('R', 'NNS'), ('E', 'NN'), ('|', 'SYM'), ('V', 'NN'), ('O', 'SYM'), ('L', 'SYM'), ('5', 'CD'), ('2', 'CD'), ('1', 'CD'), ('|', 'SYM'), ('2', 'CD'), ('8', 'CD'), ('M', 'CD'), ('A', 'CD'), ('Y', 'NN'), ('2', 'CD'), ('0', 'CD'), ('1', 'CD'), ('5', 'CD')] 

 Lemmas are: 
>> [('4', '4'), ('4', '4'), ('4', '4'), ('|', '|'), ('N', 'N'), ('A', 'a'), ('T', 'T'), ('U', 'U'), ('R', 'R'), ('E', 'e'), ('|', '|'), ('V', 'V'), ('O', 'o'), ('L', 'l'), ('5', '5'), ('2', '2'), ('1', '1'), ('|', '|'), ('2', '2'), ('8', '8'), ('M', 'm'), ('A', 'a'), ('Y', 'Y'), ('2', '2'), ('0', '0'), ('1', '1'), ('5', '5')] 

 Dependency tags are: 
>> [(('4', '4'), 'compound'), (('4', '4'), 'compound'), (('4', 'N'), 'nummod'), (('|', '4'), 'punct'), (('N', 'root'), 'root'), (('A', 'N'), 'nummod'), (('T', 'N'), 'appos'), (('U', 'R'), 'compound'), (('R', 'E'), 'compound'), (('E', 'N'), 'list'), (('|', 'E'), 'compound'), (('V', 'E'), 'appos'), (('O', '5'), 'case'), (('L', '5'), 'compound'), (('5', 'V'), 'appos'), (('2', '5'), 'conj'), (('1', '5'), 'conj'), (('|', '2'), 'case'), (('2', '5'), 'conj'), (('8', '2'), 'flat'), (('M', '8'), 'flat'), (('A', '8'), 'flat'), (('Y', '2'), 'nsubj'), (('2', '8'), 'conj'), (('0', '2'), 'flat'), (('1', '2'), 'flat'), (('5', '1'), 'flat')]

 Named Entites are: 
>> [('1', 'CARDINAL'), ('5', 'CARDINAL')]

================================ Paragraph 364 =================================

REVIEWINSIGHT 


------------------- Sentence 1 -------------------

 REVIEWINSIGHT 

Tokens are: 
>> ['REVIEWINSIGHT'] 

 UPOS tags are: 
>> [('REVIEWINSIGHT', 'NOUN')] 

 XPOS tags are: 
>> [('REVIEWINSIGHT', 'NNS')] 

 Lemmas are: 
>> [('REVIEWINSIGHT', 'reviewinsight')] 

 Dependency tags are: 
>> [(('REVIEWINSIGHT', 'root'), 'root')]

 Named Entites are: 
>> []

================================ Paragraph 365 =================================

© 2015 Macmillan Publishers Limited. All rights reserved


------------------- Sentence 1 -------------------

 © 2015 Macmillan Publishers Limited. 

Tokens are: 
>> ['©', '2015', 'Macmillan', 'Publishers', 'Limited', '.'] 

 UPOS tags are: 
>> [('©', 'ADP'), ('2015', 'NUM'), ('Macmillan', 'PROPN'), ('Publishers', 'PROPN'), ('Limited', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('©', 'IN'), ('2015', 'CD'), ('Macmillan', 'NNP'), ('Publishers', 'NNPS'), ('Limited', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('©', 'at'), ('2015', '2015'), ('Macmillan', 'Macmillan'), ('Publishers', 'Publisher'), ('Limited', 'Limited'), ('.', '.')] 

 Dependency tags are: 
>> [(('©', 'Limited'), 'case'), (('2015', 'Limited'), 'nummod'), (('Macmillan', 'Limited'), 'compound'), (('Publishers', 'Limited'), 'compound'), (('Limited', 'root'), 'root'), (('.', 'Limited'), 'punct')]

 Named Entites are: 
>> [('2015', 'DATE'), ('Macmillan Publishers Limited', 'ORG')]

------------------- Sentence 2 -------------------

 All rights reserved 

Tokens are: 
>> ['All', 'rights', 'reserved'] 

 UPOS tags are: 
>> [('All', 'DET'), ('rights', 'NOUN'), ('reserved', 'VERB')] 

 XPOS tags are: 
>> [('All', 'DT'), ('rights', 'NNS'), ('reserved', 'VBN')] 

 Lemmas are: 
>> [('All', 'all'), ('rights', 'rights'), ('reserved', 'reserve')] 

 Dependency tags are: 
>> [(('All', 'rights'), 'det'), (('rights', 'root'), 'root'), (('reserved', 'rights'), 'acl')]

 Named Entites are: 
>> []