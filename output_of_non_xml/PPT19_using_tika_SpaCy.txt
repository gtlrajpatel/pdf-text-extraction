				 *** Text Processing using Spacy *** 


============================ Sentence 1 =============================

OOPC++ UNIT-1   Prof. Rupesh G. Vaishnav rupesh.vaishnav@darshan.ac.in 94280-37452 Information & Network Security (2170709) 


>> Tokens are: 
[OOPC++, UNIT-1,   , Prof., Rupesh, G., Vaishnav, rupesh.vaishnav@darshan.ac.in, 94280, -, 37452, Information, &, Network, Security, (, 2170709, )] 

>> PoS Tags are: 
[('OOPC++', 'INTJ'), ('UNIT-1', 'PROPN'), ('  ', 'SPACE'), ('Prof.', 'PROPN'), ('Rupesh', 'PROPN'), ('G.', 'PROPN'), ('Vaishnav', 'PROPN'), ('rupesh.vaishnav@darshan.ac.in', 'NUM'), ('94280', 'NUM'), ('-', 'SYM'), ('37452', 'NUM'), ('Information', 'PROPN'), ('&', 'CCONJ'), ('Network', 'PROPN'), ('Security', 'PROPN'), ('(', 'PUNCT'), ('2170709', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('OOPC++', 'intj'), ('UNIT-1', 'ROOT'), ('  ', 'nummod'), ('Prof.', 'compound'), ('Rupesh', 'compound'), ('G.', 'compound'), ('Vaishnav', 'dobj'), ('rupesh.vaishnav@darshan.ac.in', 'appos'), ('94280', 'nummod'), ('-', 'punct'), ('37452', 'nummod'), ('Information', 'nmod'), ('&', 'cc'), ('Network', 'conj'), ('Security', 'appos'), ('(', 'punct'), ('2170709', 'appos'), (')', 'punct')]

>> Bigrams: 
[[OOPC++, UNIT-1], [UNIT-1,   ], [  , Prof.], [Prof., Rupesh], [Rupesh, G.], [G., Vaishnav], [Vaishnav, rupesh.vaishnav@darshan.ac.in], [rupesh.vaishnav@darshan.ac.in, 94280], [94280, -], [-, 37452], [37452, Information], [Information, &], [&, Network], [Network, Security], [Security, (], [(, 2170709], [2170709, )]]

>> Trigrams: 
[[OOPC++, UNIT-1,   ], [UNIT-1,   , Prof.], [  , Prof., Rupesh], [Prof., Rupesh, G.], [Rupesh, G., Vaishnav], [G., Vaishnav, rupesh.vaishnav@darshan.ac.in], [Vaishnav, rupesh.vaishnav@darshan.ac.in, 94280], [rupesh.vaishnav@darshan.ac.in, 94280, -], [94280, -, 37452], [-, 37452, Information], [37452, Information, &], [Information, &, Network], [&, Network, Security], [Network, Security, (], [Security, (, 2170709], [(, 2170709, )]]

>> Noun Phrases are: 
[OOPC++ UNIT-1,   Prof. Rupesh G. Vaishnav, 94280-37452 Information & Network Security]

>> Named Entities are: 
[('Rupesh G. Vaishnav', 'PERSON'), ('94280-37452', 'DATE'), ('Information & Network Security', 'ORG')]


============================ Sentence 2 =============================

	 Darshan Institute of Engineering & Technology UNIT-7 Digital Signature      1  Outline Digital Signature Digital Signature properties Requirements and security   


>> Tokens are: 
[	 , Darshan, Institute, Engineering, &, Technology, UNIT-7, Digital, Signature,      , 1,  , Outline, Digital, Signature, Digital, Signature, properties, Requirements, security,  ] 

>> PoS Tags are: 
[('\t ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('UNIT-7', 'PROPN'), ('Digital', 'PROPN'), ('Signature', 'PROPN'), ('     ', 'SPACE'), ('1', 'NUM'), (' ', 'SPACE'), ('Outline', 'PROPN'), ('Digital', 'PROPN'), ('Signature', 'PROPN'), ('Digital', 'PROPN'), ('Signature', 'PROPN'), ('properties', 'VERB'), ('Requirements', 'PROPN'), ('security', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t ', 'dep'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('UNIT-7', 'compound'), ('Digital', 'compound'), ('Signature', 'compound'), ('     ', 'appos'), ('1', 'nummod'), (' ', 'appos'), ('Outline', 'compound'), ('Digital', 'compound'), ('Signature', 'compound'), ('Digital', 'compound'), ('Signature', 'nsubj'), ('properties', 'ROOT'), ('Requirements', 'dobj'), ('security', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[	 , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, UNIT-7], [UNIT-7, Digital], [Digital, Signature], [Signature,      ], [     , 1], [1,  ], [ , Outline], [Outline, Digital], [Digital, Signature], [Signature, Digital], [Digital, Signature], [Signature, properties], [properties, Requirements], [Requirements, security], [security,  ]]

>> Trigrams: 
[[	 , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, UNIT-7], [Technology, UNIT-7, Digital], [UNIT-7, Digital, Signature], [Digital, Signature,      ], [Signature,      , 1], [     , 1,  ], [1,  , Outline], [ , Outline, Digital], [Outline, Digital, Signature], [Digital, Signature, Digital], [Signature, Digital, Signature], [Digital, Signature, properties], [Signature, properties, Requirements], [properties, Requirements, security], [Requirements, security,  ]]

>> Noun Phrases are: 
[Darshan Institute, Engineering, Technology, Outline Digital Signature Digital Signature, Requirements, security]

>> Named Entities are: 
[('Darshan Institute of Engineering & Technology', 'ORG'), ('Digital', 'ORG'), ('Requirements', 'ORG')]


============================ Sentence 3 =============================

Various digital signature schemes (Elgamal and Schnorr) Digital Signature algorithm / Digital Signature Standard   Unit-7   


>> Tokens are: 
[digital, signature, schemes, (, Elgamal, Schnorr, ), Digital, Signature, algorithm, /, Digital, Signature, Standard,   , Unit-7,  ] 

>> PoS Tags are: 
[('digital', 'ADJ'), ('signature', 'NOUN'), ('schemes', 'NOUN'), ('(', 'PUNCT'), ('Elgamal', 'PROPN'), ('Schnorr', 'PROPN'), (')', 'PUNCT'), ('Digital', 'PROPN'), ('Signature', 'PROPN'), ('algorithm', 'NOUN'), ('/', 'SYM'), ('Digital', 'PROPN'), ('Signature', 'PROPN'), ('Standard', 'PROPN'), ('  ', 'SPACE'), ('Unit-7', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('digital', 'amod'), ('signature', 'compound'), ('schemes', 'ROOT'), ('(', 'punct'), ('Elgamal', 'nmod'), ('Schnorr', 'conj'), (')', 'punct'), ('Digital', 'compound'), ('Signature', 'appos'), ('algorithm', 'punct'), ('/', 'punct'), ('Digital', 'compound'), ('Signature', 'compound'), ('Standard', 'appos'), ('  ', 'appos'), ('Unit-7', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[digital, signature], [signature, schemes], [schemes, (], [(, Elgamal], [Elgamal, Schnorr], [Schnorr, )], [), Digital], [Digital, Signature], [Signature, algorithm], [algorithm, /], [/, Digital], [Digital, Signature], [Signature, Standard], [Standard,   ], [  , Unit-7], [Unit-7,  ]]

>> Trigrams: 
[[digital, signature, schemes], [signature, schemes, (], [schemes, (, Elgamal], [(, Elgamal, Schnorr], [Elgamal, Schnorr, )], [Schnorr, ), Digital], [), Digital, Signature], [Digital, Signature, algorithm], [Signature, algorithm, /], [algorithm, /, Digital], [/, Digital, Signature], [Digital, Signature, Standard], [Signature, Standard,   ], [Standard,   , Unit-7], [  , Unit-7,  ]]

>> Noun Phrases are: 
[Various digital signature schemes, Elgamal and Schnorr) Digital Signature, / Digital Signature Standard, Unit-7]

>> Named Entities are: 
[('Digital', 'ORG'), ('Digital', 'ORG'), ('Unit-7', 'ORG')]


============================ Sentence 4 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  X.800 and RFC 2828 International Telecommunication Union (ITU) 2   Symmetric-key  ciphers: Block ciphers Stream ciphers   


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,  , X.800, RFC, 2828, International, Telecommunication, Union, (, ITU, ), 2,   , Symmetric, -, key,  , ciphers, :, Block, ciphers, Stream, ciphers,  ] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), (' ', 'SPACE'), ('X.800', 'PROPN'), ('RFC', 'PROPN'), ('2828', 'NUM'), ('International', 'PROPN'), ('Telecommunication', 'PROPN'), ('Union', 'PROPN'), ('(', 'PUNCT'), ('ITU', 'PROPN'), (')', 'PUNCT'), ('2', 'NUM'), ('  ', 'SPACE'), ('Symmetric', 'PROPN'), ('-', 'PUNCT'), ('key', 'ADJ'), (' ', 'SPACE'), ('ciphers', 'NOUN'), (':', 'PUNCT'), ('Block', 'NOUN'), ('ciphers', 'VERB'), ('Stream', 'PROPN'), ('ciphers', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'dep'), (' ', 'punct'), ('X.800', 'appos'), ('RFC', 'conj'), ('2828', 'nummod'), ('International', 'compound'), ('Telecommunication', 'compound'), ('Union', 'appos'), ('(', 'punct'), ('ITU', 'appos'), (')', 'punct'), ('2', 'nummod'), ('  ', 'nmod'), ('Symmetric', 'compound'), ('-', 'punct'), ('key', 'amod'), (' ', 'compound'), ('ciphers', 'dep'), (':', 'punct'), ('Block', 'nsubj'), ('ciphers', 'ROOT'), ('Stream', 'compound'), ('ciphers', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,  ], [ , X.800], [X.800, RFC], [RFC, 2828], [2828, International], [International, Telecommunication], [Telecommunication, Union], [Union, (], [(, ITU], [ITU, )], [), 2], [2,   ], [  , Symmetric], [Symmetric, -], [-, key], [key,  ], [ , ciphers], [ciphers, :], [:, Block], [Block, ciphers], [ciphers, Stream], [Stream, ciphers], [ciphers,  ]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,  ], [‹#›,  , X.800], [ , X.800, RFC], [X.800, RFC, 2828], [RFC, 2828, International], [2828, International, Telecommunication], [International, Telecommunication, Union], [Telecommunication, Union, (], [Union, (, ITU], [(, ITU, )], [ITU, ), 2], [), 2,   ], [2,   , Symmetric], [  , Symmetric, -], [Symmetric, -, key], [-, key,  ], [key,  , ciphers], [ , ciphers, :], [ciphers, :, Block], [:, Block, ciphers], [Block, ciphers, Stream], [ciphers, Stream, ciphers], [Stream, ciphers,  ]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology, X.800, RFC, International Telecommunication Union, (ITU, Block, Stream ciphers]

>> Named Entities are: 
[('Institute of Engineering & Technology', 'ORG'), ('X.800', 'CARDINAL'), ('RFC 2828 International Telecommunication Union', 'ORG'), ('ITU', 'ORG'), ('2', 'CARDINAL'), ('Symmetric', 'ORG'), ('Block', 'GPE'), ('Stream', 'GPE')]


============================ Sentence 5 =============================

Public-key ciphers Cryptographic Goals Cryptographic goals Confidentiality Data integrity Authentication Non-repudiation           Message authentication     


>> Tokens are: 
[Public, -, key, ciphers, Cryptographic, Goals, Cryptographic, goals, Confidentiality, Data, integrity, Authentication, Non, -, repudiation,           , Message, authentication,    ] 

>> PoS Tags are: 
[('Public', 'ADJ'), ('-', 'PUNCT'), ('key', 'ADJ'), ('ciphers', 'NOUN'), ('Cryptographic', 'PROPN'), ('Goals', 'PROPN'), ('Cryptographic', 'ADJ'), ('goals', 'NOUN'), ('Confidentiality', 'PROPN'), ('Data', 'PROPN'), ('integrity', 'NOUN'), ('Authentication', 'PROPN'), ('Non', 'ADJ'), ('-', 'NOUN'), ('repudiation', 'ADJ'), ('          ', 'SPACE'), ('Message', 'NOUN'), ('authentication', 'NOUN'), ('   ', 'SPACE')] 

>> Dependency Tags are: 
[('Public', 'amod'), ('-', 'punct'), ('key', 'amod'), ('ciphers', 'ROOT'), ('Cryptographic', 'nmod'), ('Goals', 'nmod'), ('Cryptographic', 'amod'), ('goals', 'dobj'), ('Confidentiality', 'compound'), ('Data', 'compound'), ('integrity', 'compound'), ('Authentication', 'compound'), ('Non', 'compound'), ('-', 'amod'), ('repudiation', 'amod'), ('          ', 'compound'), ('Message', 'compound'), ('authentication', 'appos'), ('   ', 'nummod')]

>> Bigrams: 
[[Public, -], [-, key], [key, ciphers], [ciphers, Cryptographic], [Cryptographic, Goals], [Goals, Cryptographic], [Cryptographic, goals], [goals, Confidentiality], [Confidentiality, Data], [Data, integrity], [integrity, Authentication], [Authentication, Non], [Non, -], [-, repudiation], [repudiation,           ], [          , Message], [Message, authentication], [authentication,    ]]

>> Trigrams: 
[[Public, -, key], [-, key, ciphers], [key, ciphers, Cryptographic], [ciphers, Cryptographic, Goals], [Cryptographic, Goals, Cryptographic], [Goals, Cryptographic, goals], [Cryptographic, goals, Confidentiality], [goals, Confidentiality, Data], [Confidentiality, Data, integrity], [Data, integrity, Authentication], [integrity, Authentication, Non], [Authentication, Non, -], [Non, -, repudiation], [-, repudiation,           ], [repudiation,           , Message], [          , Message, authentication], [Message, authentication,    ]]

>> Noun Phrases are: 
[Public-key ciphers, Cryptographic Goals Cryptographic goals, Confidentiality Data integrity Authentication Non-repudiation           Message authentication]

>> Named Entities are: 
[('Confidentiality Data', 'ORG'), ('Message', 'ORG')]


============================ Sentence 6 =============================

Entity authentication Arbitrary length hash functions  Message  Authentication  codes (MACs)  Digital signatures Authentication  primitives Digital signatures MACs Digital       signatures  Unit-7   


>> Tokens are: 
[Entity, authentication, Arbitrary, length, hash, functions,  , Message,  , Authentication,  , codes, (, MACs, ),  , Digital, signatures, Authentication,  , primitives, Digital, signatures, MACs, Digital,       , signatures,  , Unit-7,  ] 

>> PoS Tags are: 
[('Entity', 'NOUN'), ('authentication', 'NOUN'), ('Arbitrary', 'ADJ'), ('length', 'NOUN'), ('hash', 'NOUN'), ('functions', 'NOUN'), (' ', 'SPACE'), ('Message', 'NOUN'), (' ', 'SPACE'), ('Authentication', 'PROPN'), (' ', 'SPACE'), ('codes', 'NOUN'), ('(', 'PUNCT'), ('MACs', 'PROPN'), (')', 'PUNCT'), (' ', 'SPACE'), ('Digital', 'PROPN'), ('signatures', 'NOUN'), ('Authentication', 'NOUN'), (' ', 'SPACE'), ('primitives', 'VERB'), ('Digital', 'PROPN'), ('signatures', 'NOUN'), ('MACs', 'PROPN'), ('Digital', 'PROPN'), ('      ', 'SPACE'), ('signatures', 'NOUN'), (' ', 'SPACE'), ('Unit-7', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Entity', 'compound'), ('authentication', 'nmod'), ('Arbitrary', 'amod'), ('length', 'compound'), ('hash', 'compound'), ('functions', 'dep'), (' ', 'punct'), ('Message', 'compound'), (' ', 'nmod'), ('Authentication', 'compound'), (' ', 'compound'), ('codes', 'appos'), ('(', 'punct'), ('MACs', 'appos'), (')', 'punct'), (' ', 'appos'), ('Digital', 'compound'), ('signatures', 'compound'), ('Authentication', 'appos'), (' ', 'nsubj'), ('primitives', 'ROOT'), ('Digital', 'compound'), ('signatures', 'dobj'), ('MACs', 'compound'), ('Digital', 'compound'), ('      ', 'compound'), ('signatures', 'conj'), (' ', 'dep'), ('Unit-7', 'advcl'), (' ', 'dobj')]

>> Bigrams: 
[[Entity, authentication], [authentication, Arbitrary], [Arbitrary, length], [length, hash], [hash, functions], [functions,  ], [ , Message], [Message,  ], [ , Authentication], [Authentication,  ], [ , codes], [codes, (], [(, MACs], [MACs, )], [),  ], [ , Digital], [Digital, signatures], [signatures, Authentication], [Authentication,  ], [ , primitives], [primitives, Digital], [Digital, signatures], [signatures, MACs], [MACs, Digital], [Digital,       ], [      , signatures], [signatures,  ], [ , Unit-7], [Unit-7,  ]]

>> Trigrams: 
[[Entity, authentication, Arbitrary], [authentication, Arbitrary, length], [Arbitrary, length, hash], [length, hash, functions], [hash, functions,  ], [functions,  , Message], [ , Message,  ], [Message,  , Authentication], [ , Authentication,  ], [Authentication,  , codes], [ , codes, (], [codes, (, MACs], [(, MACs, )], [MACs, ),  ], [),  , Digital], [ , Digital, signatures], [Digital, signatures, Authentication], [signatures, Authentication,  ], [Authentication,  , primitives], [ , primitives, Digital], [primitives, Digital, signatures], [Digital, signatures, MACs], [signatures, MACs, Digital], [MACs, Digital,       ], [Digital,       , signatures], [      , signatures,  ], [signatures,  , Unit-7], [ , Unit-7,  ]]

>> Noun Phrases are: 
[Message  Authentication  codes, MACs, Digital signatures Authentication, Digital signatures, MACs Digital       signatures]

>> Named Entities are: 
[('Arbitrary', 'CARDINAL'), ('Digital', 'ORG'), ('Digital', 'ORG'), ('Digital', 'ORG'), ('Unit-7', 'GPE')]


============================ Sentence 7 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  3 Проверить правильность схемы   


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,  , 3, Проверить, правильность, схемы,  ] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), (' ', 'SPACE'), ('3', 'NUM'), ('Проверить', 'PROPN'), ('правильность', 'ADJ'), ('схемы', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'nmod'), (' ', 'nmod'), ('3', 'nummod'), ('Проверить', 'compound'), ('правильность', 'amod'), ('схемы', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,  ], [ , 3], [3, Проверить], [Проверить, правильность], [правильность, схемы], [схемы,  ]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,  ], [‹#›,  , 3], [ , 3, Проверить], [3, Проверить, правильность], [Проверить, правильность, схемы], [правильность, схемы,  ]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Institute of Engineering & Technology', 'ORG'), ('‹#›', 'DATE'), ('3', 'CARDINAL')]


============================ Sentence 8 =============================

Digital Signature 


>> Tokens are: 
[Digital, Signature] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'ROOT')]

>> Bigrams: 
[[Digital, Signature]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Digital Signature]

>> Named Entities are: 
[('Digital', 'ORG')]


============================ Sentence 9 =============================

A digital signature is an authentication mechanism that enables the creator of a message to attach a code that acts as a signature. 


>> Tokens are: 
[digital, signature, authentication, mechanism, enables, creator, message, attach, code, acts, signature, .] 

>> PoS Tags are: 
[('digital', 'ADJ'), ('signature', 'NOUN'), ('authentication', 'NOUN'), ('mechanism', 'NOUN'), ('enables', 'VERB'), ('creator', 'NOUN'), ('message', 'NOUN'), ('attach', 'VERB'), ('code', 'NOUN'), ('acts', 'VERB'), ('signature', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('digital', 'amod'), ('signature', 'nsubj'), ('authentication', 'compound'), ('mechanism', 'attr'), ('enables', 'relcl'), ('creator', 'dobj'), ('message', 'pobj'), ('attach', 'acl'), ('code', 'dobj'), ('acts', 'relcl'), ('signature', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[digital, signature], [signature, authentication], [authentication, mechanism], [mechanism, enables], [enables, creator], [creator, message], [message, attach], [attach, code], [code, acts], [acts, signature], [signature, .]]

>> Trigrams: 
[[digital, signature, authentication], [signature, authentication, mechanism], [authentication, mechanism, enables], [mechanism, enables, creator], [enables, creator, message], [creator, message, attach], [message, attach, code], [attach, code, acts], [code, acts, signature], [acts, signature, .]]

>> Noun Phrases are: 
[A digital signature, an authentication mechanism, the creator, a message, a code, a signature]

>> Named Entities are: 
[]


============================ Sentence 10 =============================

Typically the signature is formed by taking the hash of the message and encrypting the message with the creator’s private key. 


>> Tokens are: 
[Typically, signature, formed, taking, hash, message, encrypting, message, creator, private, key, .] 

>> PoS Tags are: 
[('Typically', 'ADV'), ('signature', 'NOUN'), ('formed', 'VERB'), ('taking', 'VERB'), ('hash', 'NOUN'), ('message', 'NOUN'), ('encrypting', 'VERB'), ('message', 'NOUN'), ('creator', 'NOUN'), ('private', 'ADJ'), ('key', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Typically', 'advmod'), ('signature', 'nsubjpass'), ('formed', 'ROOT'), ('taking', 'pcomp'), ('hash', 'dobj'), ('message', 'pobj'), ('encrypting', 'conj'), ('message', 'dobj'), ('creator', 'poss'), ('private', 'amod'), ('key', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Typically, signature], [signature, formed], [formed, taking], [taking, hash], [hash, message], [message, encrypting], [encrypting, message], [message, creator], [creator, private], [private, key], [key, .]]

>> Trigrams: 
[[Typically, signature, formed], [signature, formed, taking], [formed, taking, hash], [taking, hash, message], [hash, message, encrypting], [message, encrypting, message], [encrypting, message, creator], [message, creator, private], [creator, private, key], [private, key, .]]

>> Noun Phrases are: 
[the signature, the hash, the message, the message, the creator’s private key]

>> Named Entities are: 
[]


============================ Sentence 11 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 12 =============================

The signature guarantees the source and integrity of the message. 


>> Tokens are: 
[signature, guarantees, source, integrity, message, .] 

>> PoS Tags are: 
[('signature', 'NOUN'), ('guarantees', 'VERB'), ('source', 'NOUN'), ('integrity', 'NOUN'), ('message', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('signature', 'nsubj'), ('guarantees', 'ROOT'), ('source', 'dobj'), ('integrity', 'conj'), ('message', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[signature, guarantees], [guarantees, source], [source, integrity], [integrity, message], [message, .]]

>> Trigrams: 
[[signature, guarantees, source], [guarantees, source, integrity], [source, integrity, message], [integrity, message, .]]

>> Noun Phrases are: 
[The signature, the source, integrity, the message]

>> Named Entities are: 
[]


============================ Sentence 13 =============================

The digital signature standard (DSS) is an NIST standard that uses the secure hash algorithm 


>> Tokens are: 
[digital, signature, standard, (, DSS, ), NIST, standard, uses, secure, hash, algorithm] 

>> PoS Tags are: 
[('digital', 'ADJ'), ('signature', 'NOUN'), ('standard', 'NOUN'), ('(', 'PUNCT'), ('DSS', 'PROPN'), (')', 'PUNCT'), ('NIST', 'PROPN'), ('standard', 'NOUN'), ('uses', 'VERB'), ('secure', 'ADJ'), ('hash', 'NOUN'), ('algorithm', 'NOUN')] 

>> Dependency Tags are: 
[('digital', 'amod'), ('signature', 'compound'), ('standard', 'nsubj'), ('(', 'punct'), ('DSS', 'appos'), (')', 'punct'), ('NIST', 'compound'), ('standard', 'attr'), ('uses', 'relcl'), ('secure', 'amod'), ('hash', 'dobj'), ('algorithm', 'punct')]

>> Bigrams: 
[[digital, signature], [signature, standard], [standard, (], [(, DSS], [DSS, )], [), NIST], [NIST, standard], [standard, uses], [uses, secure], [secure, hash], [hash, algorithm]]

>> Trigrams: 
[[digital, signature, standard], [signature, standard, (], [standard, (, DSS], [(, DSS, )], [DSS, ), NIST], [), NIST, standard], [NIST, standard, uses], [standard, uses, secure], [uses, secure, hash], [secure, hash, algorithm]]

>> Noun Phrases are: 
[The digital signature standard, (DSS, an NIST standard, the secure hash]

>> Named Entities are: 
[('DSS', 'ORG'), ('NIST', 'ORG')]


============================ Sentence 14 =============================

(SHA). 


>> Tokens are: 
[(, SHA, ), .] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('SHA', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('SHA', 'ROOT'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[(, SHA], [SHA, )], [), .]]

>> Trigrams: 
[[(, SHA, )], [SHA, ), .]]

>> Noun Phrases are: 
[(SHA]

>> Named Entities are: 
[('SHA', 'ORG')]


============================ Sentence 15 =============================

 Unit-7   


>> Tokens are: 
[ , Unit-7,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Unit-7', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'nmod'), ('Unit-7', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[ , Unit-7], [Unit-7,  ]]

>> Trigrams: 
[[ , Unit-7,  ]]

>> Noun Phrases are: 
[ Unit-7]

>> Named Entities are: 
[('Unit-7', 'GPE')]


============================ Sentence 16 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›      Hash code, MAC and 


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,      , Hash, code, ,, MAC] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), ('     ', 'SPACE'), ('Hash', 'PROPN'), ('code', 'NOUN'), (',', 'PUNCT'), ('MAC', 'PROPN')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'ROOT'), ('     ', 'compound'), ('Hash', 'compound'), ('code', 'dobj'), (',', 'punct'), ('MAC', 'conj')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,      ], [     , Hash], [Hash, code], [code, ,], [,, MAC]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,      ], [‹#›,      , Hash], [     , Hash, code], [Hash, code, ,], [code, ,, MAC]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology,      Hash code, MAC]

>> Named Entities are: 
[('Institute of Engineering & Technology', 'ORG'), ('‹#›      Hash', 'PERSON'), ('MAC', 'ORG')]


============================ Sentence 17 =============================

Digital Signature Hash Code 


>> Tokens are: 
[Digital, Signature, Hash, Code] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('Hash', 'PROPN'), ('Code', 'PROPN')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'compound'), ('Hash', 'compound'), ('Code', 'ROOT')]

>> Bigrams: 
[[Digital, Signature], [Signature, Hash], [Hash, Code]]

>> Trigrams: 
[[Digital, Signature, Hash], [Signature, Hash, Code]]

>> Noun Phrases are: 
[Digital Signature Hash Code]

>> Named Entities are: 
[('Digital', 'ORG')]


============================ Sentence 18 =============================

A hash of the message, if appended to the message itself, only protects against accidental changes to the message, as an attacker who modifies the message can simply calculate a new hash and use it instead of the original one. 


>> Tokens are: 
[hash, message, ,, appended, message, ,, protects, accidental, changes, message, ,, attacker, modifies, message, simply, calculate, new, hash, use, instead, original, .] 

>> PoS Tags are: 
[('hash', 'NOUN'), ('message', 'NOUN'), (',', 'PUNCT'), ('appended', 'VERB'), ('message', 'NOUN'), (',', 'PUNCT'), ('protects', 'NOUN'), ('accidental', 'ADJ'), ('changes', 'NOUN'), ('message', 'NOUN'), (',', 'PUNCT'), ('attacker', 'NOUN'), ('modifies', 'VERB'), ('message', 'NOUN'), ('simply', 'ADV'), ('calculate', 'VERB'), ('new', 'ADJ'), ('hash', 'NOUN'), ('use', 'VERB'), ('instead', 'ADV'), ('original', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('hash', 'nsubj'), ('message', 'pobj'), (',', 'punct'), ('appended', 'advcl'), ('message', 'pobj'), (',', 'punct'), ('protects', 'appos'), ('accidental', 'amod'), ('changes', 'pobj'), ('message', 'pobj'), (',', 'punct'), ('attacker', 'pobj'), ('modifies', 'relcl'), ('message', 'dobj'), ('simply', 'advmod'), ('calculate', 'ROOT'), ('new', 'amod'), ('hash', 'dobj'), ('use', 'conj'), ('instead', 'advmod'), ('original', 'amod'), ('.', 'punct')]

>> Bigrams: 
[[hash, message], [message, ,], [,, appended], [appended, message], [message, ,], [,, protects], [protects, accidental], [accidental, changes], [changes, message], [message, ,], [,, attacker], [attacker, modifies], [modifies, message], [message, simply], [simply, calculate], [calculate, new], [new, hash], [hash, use], [use, instead], [instead, original], [original, .]]

>> Trigrams: 
[[hash, message, ,], [message, ,, appended], [,, appended, message], [appended, message, ,], [message, ,, protects], [,, protects, accidental], [protects, accidental, changes], [accidental, changes, message], [changes, message, ,], [message, ,, attacker], [,, attacker, modifies], [attacker, modifies, message], [modifies, message, simply], [message, simply, calculate], [simply, calculate, new], [calculate, new, hash], [new, hash, use], [hash, use, instead], [use, instead, original], [instead, original, .]]

>> Noun Phrases are: 
[A hash, the message, the message, itself, accidental changes, the message, an attacker, who, the message, a new hash, it, the original one]

>> Named Entities are: 
[]


============================ Sentence 19 =============================

So this only gives integrity. 


>> Tokens are: 
[gives, integrity, .] 

>> PoS Tags are: 
[('gives', 'VERB'), ('integrity', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('gives', 'ROOT'), ('integrity', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[gives, integrity], [integrity, .]]

>> Trigrams: 
[[gives, integrity, .]]

>> Noun Phrases are: 
[integrity]

>> Named Entities are: 
[]


============================ Sentence 20 =============================

MAC A message authentication code (MAC) (sometimes also known as keyed hash) protects against message forgery by anyone who doesn't know the secret. 


>> Tokens are: 
[MAC, message, authentication, code, (, MAC, ), (, known, keyed, hash, ), protects, message, forgery, know, secret, .] 

>> PoS Tags are: 
[('MAC', 'PROPN'), ('message', 'NOUN'), ('authentication', 'NOUN'), ('code', 'NOUN'), ('(', 'PUNCT'), ('MAC', 'PROPN'), (')', 'PUNCT'), ('(', 'PUNCT'), ('known', 'VERB'), ('keyed', 'ADJ'), ('hash', 'NOUN'), (')', 'PUNCT'), ('protects', 'VERB'), ('message', 'NOUN'), ('forgery', 'NOUN'), ('know', 'VERB'), ('secret', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('MAC', 'compound'), ('message', 'compound'), ('authentication', 'compound'), ('code', 'nsubj'), ('(', 'punct'), ('MAC', 'appos'), (')', 'punct'), ('(', 'punct'), ('known', 'acl'), ('keyed', 'amod'), ('hash', 'pobj'), (')', 'punct'), ('protects', 'ROOT'), ('message', 'compound'), ('forgery', 'pobj'), ('know', 'relcl'), ('secret', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[MAC, message], [message, authentication], [authentication, code], [code, (], [(, MAC], [MAC, )], [), (], [(, known], [known, keyed], [keyed, hash], [hash, )], [), protects], [protects, message], [message, forgery], [forgery, know], [know, secret], [secret, .]]

>> Trigrams: 
[[MAC, message, authentication], [message, authentication, code], [authentication, code, (], [code, (, MAC], [(, MAC, )], [MAC, ), (], [), (, known], [(, known, keyed], [known, keyed, hash], [keyed, hash, )], [hash, ), protects], [), protects, message], [protects, message, forgery], [message, forgery, know], [forgery, know, secret], [know, secret, .]]

>> Noun Phrases are: 
[MAC A message authentication code, MAC, keyed hash, message forgery, anyone, who, the secret]

>> Named Entities are: 
[('MAC', 'ORG'), ('MAC', 'ORG')]


============================ Sentence 21 =============================

This means that the receiver can forge any message – thus we have both integrity and authentication (as long as the receiver doesn't have a split personality), but not non-repudiation. 


>> Tokens are: 
[means, receiver, forge, message, –, integrity, authentication, (, long, receiver, split, personality, ), ,, non, -, repudiation, .] 

>> PoS Tags are: 
[('means', 'VERB'), ('receiver', 'NOUN'), ('forge', 'VERB'), ('message', 'NOUN'), ('–', 'PUNCT'), ('integrity', 'NOUN'), ('authentication', 'NOUN'), ('(', 'PUNCT'), ('long', 'ADV'), ('receiver', 'NOUN'), ('split', 'ADJ'), ('personality', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('non', 'ADJ'), ('-', 'ADJ'), ('repudiation', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('means', 'ROOT'), ('receiver', 'nsubj'), ('forge', 'ccomp'), ('message', 'dobj'), ('–', 'punct'), ('integrity', 'dobj'), ('authentication', 'conj'), ('(', 'punct'), ('long', 'advmod'), ('receiver', 'nsubj'), ('split', 'amod'), ('personality', 'dobj'), (')', 'punct'), (',', 'punct'), ('non', 'amod'), ('-', 'conj'), ('repudiation', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[means, receiver], [receiver, forge], [forge, message], [message, –], [–, integrity], [integrity, authentication], [authentication, (], [(, long], [long, receiver], [receiver, split], [split, personality], [personality, )], [), ,], [,, non], [non, -], [-, repudiation], [repudiation, .]]

>> Trigrams: 
[[means, receiver, forge], [receiver, forge, message], [forge, message, –], [message, –, integrity], [–, integrity, authentication], [integrity, authentication, (], [authentication, (, long], [(, long, receiver], [long, receiver, split], [receiver, split, personality], [split, personality, )], [personality, ), ,], [), ,, non], [,, non, -], [non, -, repudiation], [-, repudiation, .]]

>> Noun Phrases are: 
[the receiver, any message, we, both integrity, authentication, the receiver, a split personality]

>> Named Entities are: 
[]


============================ Sentence 22 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 23 =============================

Unit-7   


>> Tokens are: 
[Unit-7,  ] 

>> PoS Tags are: 
[('Unit-7', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Unit-7', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Unit-7,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Unit-7]

>> Named Entities are: 
[('Unit-7', 'GPE')]


============================ Sentence 24 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›   


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,  ] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,  ]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 25 =============================

Hash code, MAC and Digital Signature Digital Signature 


>> Tokens are: 
[Hash, code, ,, MAC, Digital, Signature, Digital, Signature] 

>> PoS Tags are: 
[('Hash', 'PROPN'), ('code', 'NOUN'), (',', 'PUNCT'), ('MAC', 'PROPN'), ('Digital', 'PROPN'), ('Signature', 'PROPN'), ('Digital', 'PROPN'), ('Signature', 'PROPN')] 

>> Dependency Tags are: 
[('Hash', 'compound'), ('code', 'ROOT'), (',', 'punct'), ('MAC', 'conj'), ('Digital', 'compound'), ('Signature', 'compound'), ('Digital', 'compound'), ('Signature', 'appos')]

>> Bigrams: 
[[Hash, code], [code, ,], [,, MAC], [MAC, Digital], [Digital, Signature], [Signature, Digital], [Digital, Signature]]

>> Trigrams: 
[[Hash, code, ,], [code, ,, MAC], [,, MAC, Digital], [MAC, Digital, Signature], [Digital, Signature, Digital], [Signature, Digital, Signature]]

>> Noun Phrases are: 
[Hash code, MAC, Digital Signature Digital Signature]

>> Named Entities are: 
[('MAC', 'ORG'), ('Digital Signature Digital Signature', 'ORG')]


============================ Sentence 26 =============================

A digital signature is created with a private key, and verified with the corresponding public key of an asymmetric key-pair. 


>> Tokens are: 
[digital, signature, created, private, key, ,, verified, corresponding, public, key, asymmetric, key, -, pair, .] 

>> PoS Tags are: 
[('digital', 'ADJ'), ('signature', 'NOUN'), ('created', 'VERB'), ('private', 'ADJ'), ('key', 'NOUN'), (',', 'PUNCT'), ('verified', 'VERB'), ('corresponding', 'VERB'), ('public', 'ADJ'), ('key', 'NOUN'), ('asymmetric', 'ADJ'), ('key', 'NOUN'), ('-', 'PUNCT'), ('pair', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('digital', 'amod'), ('signature', 'nsubjpass'), ('created', 'ROOT'), ('private', 'amod'), ('key', 'pobj'), (',', 'punct'), ('verified', 'conj'), ('corresponding', 'amod'), ('public', 'amod'), ('key', 'pobj'), ('asymmetric', 'amod'), ('key', 'amod'), ('-', 'punct'), ('pair', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[digital, signature], [signature, created], [created, private], [private, key], [key, ,], [,, verified], [verified, corresponding], [corresponding, public], [public, key], [key, asymmetric], [asymmetric, key], [key, -], [-, pair], [pair, .]]

>> Trigrams: 
[[digital, signature, created], [signature, created, private], [created, private, key], [private, key, ,], [key, ,, verified], [,, verified, corresponding], [verified, corresponding, public], [corresponding, public, key], [public, key, asymmetric], [key, asymmetric, key], [asymmetric, key, -], [key, -, pair], [-, pair, .]]

>> Noun Phrases are: 
[A digital signature, a private key, the corresponding public key, an asymmetric key-pair]

>> Named Entities are: 
[]


============================ Sentence 27 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 28 =============================

Only the holder of the private key can create this signature, and normally anyone knowing the public key can verify it. 


>> Tokens are: 
[holder, private, key, create, signature, ,, normally, knowing, public, key, verify, .] 

>> PoS Tags are: 
[('holder', 'NOUN'), ('private', 'ADJ'), ('key', 'NOUN'), ('create', 'VERB'), ('signature', 'NOUN'), (',', 'PUNCT'), ('normally', 'ADV'), ('knowing', 'VERB'), ('public', 'ADJ'), ('key', 'NOUN'), ('verify', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('holder', 'nsubj'), ('private', 'amod'), ('key', 'pobj'), ('create', 'ROOT'), ('signature', 'dobj'), (',', 'punct'), ('normally', 'advmod'), ('knowing', 'acl'), ('public', 'amod'), ('key', 'dobj'), ('verify', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[holder, private], [private, key], [key, create], [create, signature], [signature, ,], [,, normally], [normally, knowing], [knowing, public], [public, key], [key, verify], [verify, .]]

>> Trigrams: 
[[holder, private, key], [private, key, create], [key, create, signature], [create, signature, ,], [signature, ,, normally], [,, normally, knowing], [normally, knowing, public], [knowing, public, key], [public, key, verify], [key, verify, .]]

>> Noun Phrases are: 
[Only the holder, the private key, this signature, anyone, the public key, it]

>> Named Entities are: 
[]


============================ Sentence 29 =============================

  Unit-7   


>> Tokens are: 
[  , Unit-7,  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Unit-7', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'nmod'), ('Unit-7', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[  , Unit-7], [Unit-7,  ]]

>> Trigrams: 
[[  , Unit-7,  ]]

>> Noun Phrases are: 
[  Unit-7]

>> Named Entities are: 
[('Unit-7', 'GPE')]


============================ Sentence 30 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›   


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,  ] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,  ]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 31 =============================

Attacks and Forgeries Key-only attack: C only knows A’s public key. 


>> Tokens are: 
[Attacks, Forgeries, Key, -, attack, :, C, knows, public, key, .] 

>> PoS Tags are: 
[('Attacks', 'PROPN'), ('Forgeries', 'PROPN'), ('Key', 'PROPN'), ('-', 'PUNCT'), ('attack', 'NOUN'), (':', 'PUNCT'), ('C', 'NOUN'), ('knows', 'VERB'), ('public', 'ADJ'), ('key', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Attacks', 'nmod'), ('Forgeries', 'conj'), ('Key', 'conj'), ('-', 'punct'), ('attack', 'dep'), (':', 'punct'), ('C', 'nsubj'), ('knows', 'ROOT'), ('public', 'amod'), ('key', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Attacks, Forgeries], [Forgeries, Key], [Key, -], [-, attack], [attack, :], [:, C], [C, knows], [knows, public], [public, key], [key, .]]

>> Trigrams: 
[[Attacks, Forgeries, Key], [Forgeries, Key, -], [Key, -, attack], [-, attack, :], [attack, :, C], [:, C, knows], [C, knows, public], [knows, public, key], [public, key, .]]

>> Noun Phrases are: 
[C, A’s public key]

>> Named Entities are: 
[]


============================ Sentence 32 =============================

 Known message attack: C is given access to a set of messages and their signatures. 


>> Tokens are: 
[ , Known, message, attack, :, C, given, access, set, messages, signatures, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Known', 'ADJ'), ('message', 'NOUN'), ('attack', 'NOUN'), (':', 'PUNCT'), ('C', 'NOUN'), ('given', 'VERB'), ('access', 'NOUN'), ('set', 'NOUN'), ('messages', 'NOUN'), ('signatures', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nmod'), ('Known', 'amod'), ('message', 'compound'), ('attack', 'dep'), (':', 'punct'), ('C', 'nsubjpass'), ('given', 'ROOT'), ('access', 'dobj'), ('set', 'pobj'), ('messages', 'pobj'), ('signatures', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[ , Known], [Known, message], [message, attack], [attack, :], [:, C], [C, given], [given, access], [access, set], [set, messages], [messages, signatures], [signatures, .]]

>> Trigrams: 
[[ , Known, message], [Known, message, attack], [message, attack, :], [attack, :, C], [:, C, given], [C, given, access], [given, access, set], [access, set, messages], [set, messages, signatures], [messages, signatures, .]]

>> Noun Phrases are: 
[C, access, a set, messages, their signatures]

>> Named Entities are: 
[]


============================ Sentence 33 =============================

Generic chosen message attack: C chooses a list of messages before attempting to breaks A’s signature scheme, independent of A’s public key. 


>> Tokens are: 
[Generic, chosen, message, attack, :, C, chooses, list, messages, attempting, breaks, signature, scheme, ,, independent, public, key, .] 

>> PoS Tags are: 
[('Generic', 'ADJ'), ('chosen', 'VERB'), ('message', 'NOUN'), ('attack', 'NOUN'), (':', 'PUNCT'), ('C', 'NOUN'), ('chooses', 'VERB'), ('list', 'NOUN'), ('messages', 'NOUN'), ('attempting', 'VERB'), ('breaks', 'VERB'), ('signature', 'NOUN'), ('scheme', 'NOUN'), (',', 'PUNCT'), ('independent', 'ADJ'), ('public', 'ADJ'), ('key', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Generic', 'amod'), ('chosen', 'amod'), ('message', 'compound'), ('attack', 'dep'), (':', 'punct'), ('C', 'nsubj'), ('chooses', 'ROOT'), ('list', 'dobj'), ('messages', 'pobj'), ('attempting', 'pcomp'), ('breaks', 'xcomp'), ('signature', 'compound'), ('scheme', 'dobj'), (',', 'punct'), ('independent', 'amod'), ('public', 'amod'), ('key', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Generic, chosen], [chosen, message], [message, attack], [attack, :], [:, C], [C, chooses], [chooses, list], [list, messages], [messages, attempting], [attempting, breaks], [breaks, signature], [signature, scheme], [scheme, ,], [,, independent], [independent, public], [public, key], [key, .]]

>> Trigrams: 
[[Generic, chosen, message], [chosen, message, attack], [message, attack, :], [attack, :, C], [:, C, chooses], [C, chooses, list], [chooses, list, messages], [list, messages, attempting], [messages, attempting, breaks], [attempting, breaks, signature], [breaks, signature, scheme], [signature, scheme, ,], [scheme, ,, independent], [,, independent, public], [independent, public, key], [public, key, .]]

>> Noun Phrases are: 
[C, a list, messages, A’s signature scheme, A’s public key]

>> Named Entities are: 
[]


============================ Sentence 34 =============================

C then obtains from A valid signatures for the chosen messages. 


>> Tokens are: 
[C, obtains, valid, signatures, chosen, messages, .] 

>> PoS Tags are: 
[('C', 'NOUN'), ('obtains', 'VERB'), ('valid', 'ADJ'), ('signatures', 'NOUN'), ('chosen', 'VERB'), ('messages', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('C', 'nsubj'), ('obtains', 'ROOT'), ('valid', 'amod'), ('signatures', 'pobj'), ('chosen', 'amod'), ('messages', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[C, obtains], [obtains, valid], [valid, signatures], [signatures, chosen], [chosen, messages], [messages, .]]

>> Trigrams: 
[[C, obtains, valid], [obtains, valid, signatures], [valid, signatures, chosen], [signatures, chosen, messages], [chosen, messages, .]]

>> Noun Phrases are: 
[C, A valid signatures, the chosen messages]

>> Named Entities are: 
[]


============================ Sentence 35 =============================

The attack is generic, because it does not depend on A’s public key; the same attack is used against everyone. 


>> Tokens are: 
[attack, generic, ,, depend, public, key, ;, attack, .] 

>> PoS Tags are: 
[('attack', 'NOUN'), ('generic', 'ADJ'), (',', 'PUNCT'), ('depend', 'VERB'), ('public', 'ADJ'), ('key', 'NOUN'), (';', 'PUNCT'), ('attack', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('attack', 'nsubj'), ('generic', 'acomp'), (',', 'punct'), ('depend', 'advcl'), ('public', 'amod'), ('key', 'pobj'), (';', 'punct'), ('attack', 'nsubjpass'), ('.', 'punct')]

>> Bigrams: 
[[attack, generic], [generic, ,], [,, depend], [depend, public], [public, key], [key, ;], [;, attack], [attack, .]]

>> Trigrams: 
[[attack, generic, ,], [generic, ,, depend], [,, depend, public], [depend, public, key], [public, key, ;], [key, ;, attack], [;, attack, .]]

>> Noun Phrases are: 
[The attack, it, A’s public key, the same attack, everyone]

>> Named Entities are: 
[]


============================ Sentence 36 =============================

Directed chosen message attack: Similar to the generic attack, except that the list of messages to be signed is chosen after C knows A’s public key but before any signatures are seen. 


>> Tokens are: 
[Directed, chosen, message, attack, :, Similar, generic, attack, ,, list, messages, signed, chosen, C, knows, public, key, signatures, seen, .] 

>> PoS Tags are: 
[('Directed', 'VERB'), ('chosen', 'VERB'), ('message', 'NOUN'), ('attack', 'NOUN'), (':', 'PUNCT'), ('Similar', 'ADJ'), ('generic', 'ADJ'), ('attack', 'NOUN'), (',', 'PUNCT'), ('list', 'NOUN'), ('messages', 'NOUN'), ('signed', 'VERB'), ('chosen', 'VERB'), ('C', 'PROPN'), ('knows', 'VERB'), ('public', 'ADJ'), ('key', 'NOUN'), ('signatures', 'NOUN'), ('seen', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Directed', 'ROOT'), ('chosen', 'amod'), ('message', 'compound'), ('attack', 'dobj'), (':', 'punct'), ('Similar', 'advcl'), ('generic', 'amod'), ('attack', 'pobj'), (',', 'punct'), ('list', 'nsubjpass'), ('messages', 'pobj'), ('signed', 'relcl'), ('chosen', 'pcomp'), ('C', 'nsubj'), ('knows', 'advcl'), ('public', 'amod'), ('key', 'dobj'), ('signatures', 'nsubjpass'), ('seen', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Directed, chosen], [chosen, message], [message, attack], [attack, :], [:, Similar], [Similar, generic], [generic, attack], [attack, ,], [,, list], [list, messages], [messages, signed], [signed, chosen], [chosen, C], [C, knows], [knows, public], [public, key], [key, signatures], [signatures, seen], [seen, .]]

>> Trigrams: 
[[Directed, chosen, message], [chosen, message, attack], [message, attack, :], [attack, :, Similar], [:, Similar, generic], [Similar, generic, attack], [generic, attack, ,], [attack, ,, list], [,, list, messages], [list, messages, signed], [messages, signed, chosen], [signed, chosen, C], [chosen, C, knows], [C, knows, public], [knows, public, key], [public, key, signatures], [key, signatures, seen], [signatures, seen, .]]

>> Noun Phrases are: 
[chosen message attack, the generic attack, the list, messages, C, A’s public key, any signatures]

>> Named Entities are: 
[]


============================ Sentence 37 =============================

Adaptive chosen message attack: C is allowed to use A as an “oracle.” 


>> Tokens are: 
[Adaptive, chosen, message, attack, :, C, allowed, use, “, oracle, ., ”] 

>> PoS Tags are: 
[('Adaptive', 'ADJ'), ('chosen', 'VERB'), ('message', 'NOUN'), ('attack', 'NOUN'), (':', 'PUNCT'), ('C', 'NOUN'), ('allowed', 'VERB'), ('use', 'VERB'), ('“', 'PUNCT'), ('oracle', 'NOUN'), ('.', 'PUNCT'), ('”', 'PUNCT')] 

>> Dependency Tags are: 
[('Adaptive', 'compound'), ('chosen', 'amod'), ('message', 'compound'), ('attack', 'dep'), (':', 'punct'), ('C', 'nsubjpass'), ('allowed', 'ROOT'), ('use', 'xcomp'), ('“', 'punct'), ('oracle', 'pobj'), ('.', 'punct'), ('”', 'punct')]

>> Bigrams: 
[[Adaptive, chosen], [chosen, message], [message, attack], [attack, :], [:, C], [C, allowed], [allowed, use], [use, “], [“, oracle], [oracle, .], [., ”]]

>> Trigrams: 
[[Adaptive, chosen, message], [chosen, message, attack], [message, attack, :], [attack, :, C], [:, C, allowed], [C, allowed, use], [allowed, use, “], [use, “, oracle], [“, oracle, .], [oracle, ., ”]]

>> Noun Phrases are: 
[C, A, an “oracle]

>> Named Entities are: 
[]


============================ Sentence 38 =============================

This means the A may request signatures of messages that depend on previously obtained message–signature pairs. 


>> Tokens are: 
[means, request, signatures, messages, depend, previously, obtained, message, –, signature, pairs, .] 

>> PoS Tags are: 
[('means', 'VERB'), ('request', 'VERB'), ('signatures', 'NOUN'), ('messages', 'NOUN'), ('depend', 'VERB'), ('previously', 'ADV'), ('obtained', 'VERB'), ('message', 'NOUN'), ('–', 'PUNCT'), ('signature', 'NOUN'), ('pairs', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('means', 'ROOT'), ('request', 'ccomp'), ('signatures', 'dobj'), ('messages', 'pobj'), ('depend', 'relcl'), ('previously', 'advmod'), ('obtained', 'amod'), ('message', 'pobj'), ('–', 'punct'), ('signature', 'nsubj'), ('pairs', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[means, request], [request, signatures], [signatures, messages], [messages, depend], [depend, previously], [previously, obtained], [obtained, message], [message, –], [–, signature], [signature, pairs], [pairs, .]]

>> Trigrams: 
[[means, request, signatures], [request, signatures, messages], [signatures, messages, depend], [messages, depend, previously], [depend, previously, obtained], [previously, obtained, message], [obtained, message, –], [message, –, signature], [–, signature, pairs], [signature, pairs, .]]

>> Noun Phrases are: 
[the A, signatures, messages, previously obtained message, signature]

>> Named Entities are: 
[]


============================ Sentence 39 =============================

 Unit-7   


>> Tokens are: 
[ , Unit-7,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Unit-7', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'nsubj'), ('Unit-7', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[ , Unit-7], [Unit-7,  ]]

>> Trigrams: 
[[ , Unit-7,  ]]

>> Noun Phrases are: 
[ Unit-7]

>> Named Entities are: 
[('Unit-7', 'GPE')]


============================ Sentence 40 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›   


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,  ] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,  ]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 41 =============================

Attacks and Forgeries Total break: C determines A’s private key. 


>> Tokens are: 
[Attacks, Forgeries, Total, break, :, C, determines, private, key, .] 

>> PoS Tags are: 
[('Attacks', 'PROPN'), ('Forgeries', 'PROPN'), ('Total', 'PROPN'), ('break', 'NOUN'), (':', 'PUNCT'), ('C', 'NOUN'), ('determines', 'VERB'), ('private', 'ADJ'), ('key', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Attacks', 'nsubj'), ('Forgeries', 'conj'), ('Total', 'conj'), ('break', 'dep'), (':', 'punct'), ('C', 'nsubj'), ('determines', 'ROOT'), ('private', 'amod'), ('key', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Attacks, Forgeries], [Forgeries, Total], [Total, break], [break, :], [:, C], [C, determines], [determines, private], [private, key], [key, .]]

>> Trigrams: 
[[Attacks, Forgeries, Total], [Forgeries, Total, break], [Total, break, :], [break, :, C], [:, C, determines], [C, determines, private], [determines, private, key], [private, key, .]]

>> Noun Phrases are: 
[Attacks, Forgeries, Total, C, A’s private key]

>> Named Entities are: 
[('Forgeries Total', 'ORG')]


============================ Sentence 42 =============================

Universal forgery: C finds an efficient signing algorithm that provides an equivalent way of constructing signatures on arbitrary messages. 


>> Tokens are: 
[Universal, forgery, :, C, finds, efficient, signing, algorithm, provides, equivalent, way, constructing, signatures, arbitrary, messages, .] 

>> PoS Tags are: 
[('Universal', 'ADJ'), ('forgery', 'NOUN'), (':', 'PUNCT'), ('C', 'NOUN'), ('finds', 'VERB'), ('efficient', 'ADJ'), ('signing', 'NOUN'), ('algorithm', 'NOUN'), ('provides', 'VERB'), ('equivalent', 'ADJ'), ('way', 'NOUN'), ('constructing', 'VERB'), ('signatures', 'NOUN'), ('arbitrary', 'ADJ'), ('messages', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Universal', 'amod'), ('forgery', 'dep'), (':', 'punct'), ('C', 'nsubj'), ('finds', 'ROOT'), ('efficient', 'amod'), ('signing', 'compound'), ('algorithm', 'dobj'), ('provides', 'relcl'), ('equivalent', 'amod'), ('way', 'dobj'), ('constructing', 'pcomp'), ('signatures', 'dobj'), ('arbitrary', 'amod'), ('messages', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Universal, forgery], [forgery, :], [:, C], [C, finds], [finds, efficient], [efficient, signing], [signing, algorithm], [algorithm, provides], [provides, equivalent], [equivalent, way], [way, constructing], [constructing, signatures], [signatures, arbitrary], [arbitrary, messages], [messages, .]]

>> Trigrams: 
[[Universal, forgery, :], [forgery, :, C], [:, C, finds], [C, finds, efficient], [finds, efficient, signing], [efficient, signing, algorithm], [signing, algorithm, provides], [algorithm, provides, equivalent], [provides, equivalent, way], [equivalent, way, constructing], [way, constructing, signatures], [constructing, signatures, arbitrary], [signatures, arbitrary, messages], [arbitrary, messages, .]]

>> Noun Phrases are: 
[C, an efficient signing algorithm, an equivalent way, signatures, arbitrary messages]

>> Named Entities are: 
[]


============================ Sentence 43 =============================

Selective forgery: C forges a signature for a particular message chosen by C. Existential forgery: C forges a signature for at least one message. 


>> Tokens are: 
[Selective, forgery, :, C, forges, signature, particular, message, chosen, C., Existential, forgery, :, C, forges, signature, message, .] 

>> PoS Tags are: 
[('Selective', 'ADJ'), ('forgery', 'NOUN'), (':', 'PUNCT'), ('C', 'NOUN'), ('forges', 'VERB'), ('signature', 'NOUN'), ('particular', 'ADJ'), ('message', 'NOUN'), ('chosen', 'VERB'), ('C.', 'PROPN'), ('Existential', 'PROPN'), ('forgery', 'NOUN'), (':', 'PUNCT'), ('C', 'NOUN'), ('forges', 'VERB'), ('signature', 'NOUN'), ('message', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Selective', 'amod'), ('forgery', 'dep'), (':', 'punct'), ('C', 'nsubj'), ('forges', 'ROOT'), ('signature', 'dobj'), ('particular', 'amod'), ('message', 'pobj'), ('chosen', 'acl'), ('C.', 'compound'), ('Existential', 'compound'), ('forgery', 'pobj'), (':', 'punct'), ('C', 'nsubj'), ('forges', 'appos'), ('signature', 'dobj'), ('message', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Selective, forgery], [forgery, :], [:, C], [C, forges], [forges, signature], [signature, particular], [particular, message], [message, chosen], [chosen, C.], [C., Existential], [Existential, forgery], [forgery, :], [:, C], [C, forges], [forges, signature], [signature, message], [message, .]]

>> Trigrams: 
[[Selective, forgery, :], [forgery, :, C], [:, C, forges], [C, forges, signature], [forges, signature, particular], [signature, particular, message], [particular, message, chosen], [message, chosen, C.], [chosen, C., Existential], [C., Existential, forgery], [Existential, forgery, :], [forgery, :, C], [:, C, forges], [C, forges, signature], [forges, signature, message], [signature, message, .]]

>> Noun Phrases are: 
[C, a signature, a particular message, C. Existential forgery, C, a signature, at least one message]

>> Named Entities are: 
[('at least one', 'CARDINAL')]


============================ Sentence 44 =============================

C has no control over the message. 


>> Tokens are: 
[C, control, message, .] 

>> PoS Tags are: 
[('C', 'NOUN'), ('control', 'NOUN'), ('message', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('C', 'nsubj'), ('control', 'dobj'), ('message', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[C, control], [control, message], [message, .]]

>> Trigrams: 
[[C, control, message], [control, message, .]]

>> Noun Phrases are: 
[C, no control, the message]

>> Named Entities are: 
[]


============================ Sentence 45 =============================

Consequently, this forgery may only be a minor nuisance to A.  Unit-7   


>> Tokens are: 
[Consequently, ,, forgery, minor, nuisance, A.,  , Unit-7,  ] 

>> PoS Tags are: 
[('Consequently', 'ADV'), (',', 'PUNCT'), ('forgery', 'NOUN'), ('minor', 'ADJ'), ('nuisance', 'NOUN'), ('A.', 'NOUN'), (' ', 'SPACE'), ('Unit-7', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Consequently', 'advmod'), (',', 'punct'), ('forgery', 'nsubj'), ('minor', 'amod'), ('nuisance', 'attr'), ('A.', 'compound'), (' ', 'pobj'), ('Unit-7', 'advcl'), (' ', 'punct')]

>> Bigrams: 
[[Consequently, ,], [,, forgery], [forgery, minor], [minor, nuisance], [nuisance, A.], [A.,  ], [ , Unit-7], [Unit-7,  ]]

>> Trigrams: 
[[Consequently, ,, forgery], [,, forgery, minor], [forgery, minor, nuisance], [minor, nuisance, A.], [nuisance, A.,  ], [A.,  , Unit-7], [ , Unit-7,  ]]

>> Noun Phrases are: 
[this forgery, a minor nuisance]

>> Named Entities are: 
[('Unit-7', 'GPE')]


============================ Sentence 46 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›   


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,  ] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,  ]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 47 =============================

Digital Signature Requirements The signature must be a bit pattern that depends on the message being signed. 


>> Tokens are: 
[Digital, Signature, Requirements, signature, bit, pattern, depends, message, signed, .] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('Requirements', 'PROPN'), ('signature', 'NOUN'), ('bit', 'NOUN'), ('pattern', 'NOUN'), ('depends', 'VERB'), ('message', 'NOUN'), ('signed', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'compound'), ('Requirements', 'nsubj'), ('signature', 'nsubj'), ('bit', 'compound'), ('pattern', 'attr'), ('depends', 'relcl'), ('message', 'pobj'), ('signed', 'acl'), ('.', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature, Requirements], [Requirements, signature], [signature, bit], [bit, pattern], [pattern, depends], [depends, message], [message, signed], [signed, .]]

>> Trigrams: 
[[Digital, Signature, Requirements], [Signature, Requirements, signature], [Requirements, signature, bit], [signature, bit, pattern], [bit, pattern, depends], [pattern, depends, message], [depends, message, signed], [message, signed, .]]

>> Noun Phrases are: 
[Digital Signature Requirements, The signature, a bit pattern, the message]

>> Named Entities are: 
[]


============================ Sentence 48 =============================

The signature must use some information unique to the sender to prevent both forgery and denial. 


>> Tokens are: 
[signature, use, information, unique, sender, prevent, forgery, denial, .] 

>> PoS Tags are: 
[('signature', 'NOUN'), ('use', 'VERB'), ('information', 'NOUN'), ('unique', 'ADJ'), ('sender', 'NOUN'), ('prevent', 'VERB'), ('forgery', 'NOUN'), ('denial', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('signature', 'nsubj'), ('use', 'ROOT'), ('information', 'dobj'), ('unique', 'amod'), ('sender', 'pobj'), ('prevent', 'acl'), ('forgery', 'dobj'), ('denial', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[signature, use], [use, information], [information, unique], [unique, sender], [sender, prevent], [prevent, forgery], [forgery, denial], [denial, .]]

>> Trigrams: 
[[signature, use, information], [use, information, unique], [information, unique, sender], [unique, sender, prevent], [sender, prevent, forgery], [prevent, forgery, denial], [forgery, denial, .]]

>> Noun Phrases are: 
[The signature, some information, the sender, both forgery, denial]

>> Named Entities are: 
[]


============================ Sentence 49 =============================

It must be relatively easy to produce the digital signature. 


>> Tokens are: 
[relatively, easy, produce, digital, signature, .] 

>> PoS Tags are: 
[('relatively', 'ADV'), ('easy', 'ADJ'), ('produce', 'VERB'), ('digital', 'ADJ'), ('signature', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('relatively', 'advmod'), ('easy', 'acomp'), ('produce', 'xcomp'), ('digital', 'amod'), ('signature', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[relatively, easy], [easy, produce], [produce, digital], [digital, signature], [signature, .]]

>> Trigrams: 
[[relatively, easy, produce], [easy, produce, digital], [produce, digital, signature], [digital, signature, .]]

>> Noun Phrases are: 
[It, the digital signature]

>> Named Entities are: 
[]


============================ Sentence 50 =============================

It must be relatively easy to recognize and verify the digital signature. 


>> Tokens are: 
[relatively, easy, recognize, verify, digital, signature, .] 

>> PoS Tags are: 
[('relatively', 'ADV'), ('easy', 'ADJ'), ('recognize', 'VERB'), ('verify', 'VERB'), ('digital', 'ADJ'), ('signature', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('relatively', 'advmod'), ('easy', 'acomp'), ('recognize', 'xcomp'), ('verify', 'conj'), ('digital', 'amod'), ('signature', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[relatively, easy], [easy, recognize], [recognize, verify], [verify, digital], [digital, signature], [signature, .]]

>> Trigrams: 
[[relatively, easy, recognize], [easy, recognize, verify], [recognize, verify, digital], [verify, digital, signature], [digital, signature, .]]

>> Noun Phrases are: 
[It, the digital signature]

>> Named Entities are: 
[]


============================ Sentence 51 =============================

It must be computationally infeasible to forge a digital signature, either by constructing a new message for an existing digital signature or by constructing a fraudulent digital signature for a given message. 


>> Tokens are: 
[computationally, infeasible, forge, digital, signature, ,, constructing, new, message, existing, digital, signature, constructing, fraudulent, digital, signature, given, message, .] 

>> PoS Tags are: 
[('computationally', 'ADV'), ('infeasible', 'ADJ'), ('forge', 'VERB'), ('digital', 'ADJ'), ('signature', 'NOUN'), (',', 'PUNCT'), ('constructing', 'VERB'), ('new', 'ADJ'), ('message', 'NOUN'), ('existing', 'VERB'), ('digital', 'ADJ'), ('signature', 'NOUN'), ('constructing', 'VERB'), ('fraudulent', 'ADJ'), ('digital', 'ADJ'), ('signature', 'NOUN'), ('given', 'VERB'), ('message', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('computationally', 'advmod'), ('infeasible', 'acomp'), ('forge', 'xcomp'), ('digital', 'amod'), ('signature', 'dobj'), (',', 'punct'), ('constructing', 'pcomp'), ('new', 'amod'), ('message', 'dobj'), ('existing', 'amod'), ('digital', 'amod'), ('signature', 'pobj'), ('constructing', 'pcomp'), ('fraudulent', 'amod'), ('digital', 'amod'), ('signature', 'dobj'), ('given', 'amod'), ('message', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[computationally, infeasible], [infeasible, forge], [forge, digital], [digital, signature], [signature, ,], [,, constructing], [constructing, new], [new, message], [message, existing], [existing, digital], [digital, signature], [signature, constructing], [constructing, fraudulent], [fraudulent, digital], [digital, signature], [signature, given], [given, message], [message, .]]

>> Trigrams: 
[[computationally, infeasible, forge], [infeasible, forge, digital], [forge, digital, signature], [digital, signature, ,], [signature, ,, constructing], [,, constructing, new], [constructing, new, message], [new, message, existing], [message, existing, digital], [existing, digital, signature], [digital, signature, constructing], [signature, constructing, fraudulent], [constructing, fraudulent, digital], [fraudulent, digital, signature], [digital, signature, given], [signature, given, message], [given, message, .]]

>> Noun Phrases are: 
[It, a digital signature, a new message, an existing digital signature, a fraudulent digital signature, a given message]

>> Named Entities are: 
[]


============================ Sentence 52 =============================

It must be practical to retain a copy of the digital signature in storage. 


>> Tokens are: 
[practical, retain, copy, digital, signature, storage, .] 

>> PoS Tags are: 
[('practical', 'ADJ'), ('retain', 'VERB'), ('copy', 'NOUN'), ('digital', 'ADJ'), ('signature', 'NOUN'), ('storage', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('practical', 'acomp'), ('retain', 'xcomp'), ('copy', 'dobj'), ('digital', 'amod'), ('signature', 'pobj'), ('storage', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[practical, retain], [retain, copy], [copy, digital], [digital, signature], [signature, storage], [storage, .]]

>> Trigrams: 
[[practical, retain, copy], [retain, copy, digital], [copy, digital, signature], [digital, signature, storage], [signature, storage, .]]

>> Noun Phrases are: 
[It, a copy, the digital signature, storage]

>> Named Entities are: 
[]


============================ Sentence 53 =============================

 Unit-7   


>> Tokens are: 
[ , Unit-7,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Unit-7', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'nsubj'), ('Unit-7', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[ , Unit-7], [Unit-7,  ]]

>> Trigrams: 
[[ , Unit-7,  ]]

>> Noun Phrases are: 
[ Unit-7]

>> Named Entities are: 
[('Unit-7', 'GPE')]


============================ Sentence 54 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›   


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,  ] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,  ]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 55 =============================

Digital Signature Standard / DSA 


>> Tokens are: 
[Digital, Signature, Standard, /, DSA] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('Standard', 'PROPN'), ('/', 'SYM'), ('DSA', 'PROPN')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'compound'), ('Standard', 'nmod'), ('/', 'punct'), ('DSA', 'ROOT')]

>> Bigrams: 
[[Digital, Signature], [Signature, Standard], [Standard, /], [/, DSA]]

>> Trigrams: 
[[Digital, Signature, Standard], [Signature, Standard, /], [Standard, /, DSA]]

>> Noun Phrases are: 
[Digital Signature Standard / DSA]

>> Named Entities are: 
[]


============================ Sentence 56 =============================

The DSS uses an algorithm that is designed to provide only the digital signature function. 


>> Tokens are: 
[DSS, uses, algorithm, designed, provide, digital, signature, function, .] 

>> PoS Tags are: 
[('DSS', 'PROPN'), ('uses', 'VERB'), ('algorithm', 'NOUN'), ('designed', 'VERB'), ('provide', 'VERB'), ('digital', 'ADJ'), ('signature', 'NOUN'), ('function', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('DSS', 'nsubj'), ('uses', 'ROOT'), ('algorithm', 'dobj'), ('designed', 'relcl'), ('provide', 'xcomp'), ('digital', 'amod'), ('signature', 'compound'), ('function', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[DSS, uses], [uses, algorithm], [algorithm, designed], [designed, provide], [provide, digital], [digital, signature], [signature, function], [function, .]]

>> Trigrams: 
[[DSS, uses, algorithm], [uses, algorithm, designed], [algorithm, designed, provide], [designed, provide, digital], [provide, digital, signature], [digital, signature, function], [signature, function, .]]

>> Noun Phrases are: 
[The DSS, an algorithm, only the digital signature function]

>> Named Entities are: 
[('DSS', 'ORG')]


============================ Sentence 57 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 58 =============================

Unlike RSA, it cannot be used for encryption or key exchange. 


>> Tokens are: 
[Unlike, RSA, ,, encryption, key, exchange, .] 

>> PoS Tags are: 
[('Unlike', 'ADP'), ('RSA', 'PROPN'), (',', 'PUNCT'), ('encryption', 'NOUN'), ('key', 'ADJ'), ('exchange', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Unlike', 'prep'), ('RSA', 'pobj'), (',', 'punct'), ('encryption', 'pobj'), ('key', 'amod'), ('exchange', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Unlike, RSA], [RSA, ,], [,, encryption], [encryption, key], [key, exchange], [exchange, .]]

>> Trigrams: 
[[Unlike, RSA, ,], [RSA, ,, encryption], [,, encryption, key], [encryption, key, exchange], [key, exchange, .]]

>> Noun Phrases are: 
[RSA, it, encryption, key exchange]

>> Named Entities are: 
[('RSA', 'ORG')]


============================ Sentence 59 =============================

  Unit-7   


>> Tokens are: 
[  , Unit-7,  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Unit-7', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'nmod'), ('Unit-7', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[  , Unit-7], [Unit-7,  ]]

>> Trigrams: 
[[  , Unit-7,  ]]

>> Noun Phrases are: 
[  Unit-7]

>> Named Entities are: 
[('Unit-7', 'GPE')]


============================ Sentence 60 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›   


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,  ] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,  ]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 61 =============================

RSA Approach 


>> Tokens are: 
[RSA, Approach] 

>> PoS Tags are: 
[('RSA', 'PROPN'), ('Approach', 'NOUN')] 

>> Dependency Tags are: 
[('RSA', 'compound'), ('Approach', 'ROOT')]

>> Bigrams: 
[[RSA, Approach]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[RSA Approach]

>> Named Entities are: 
[]


============================ Sentence 62 =============================

In the RSA approach, the message to be signed is input to a hash function that produces a secure hash code of fixed length. 


>> Tokens are: 
[RSA, approach, ,, message, signed, input, hash, function, produces, secure, hash, code, fixed, length, .] 

>> PoS Tags are: 
[('RSA', 'PROPN'), ('approach', 'NOUN'), (',', 'PUNCT'), ('message', 'NOUN'), ('signed', 'VERB'), ('input', 'NOUN'), ('hash', 'NOUN'), ('function', 'NOUN'), ('produces', 'VERB'), ('secure', 'ADJ'), ('hash', 'NOUN'), ('code', 'NOUN'), ('fixed', 'VERB'), ('length', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('RSA', 'compound'), ('approach', 'pobj'), (',', 'punct'), ('message', 'nsubj'), ('signed', 'relcl'), ('input', 'attr'), ('hash', 'compound'), ('function', 'pobj'), ('produces', 'relcl'), ('secure', 'amod'), ('hash', 'compound'), ('code', 'dobj'), ('fixed', 'amod'), ('length', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[RSA, approach], [approach, ,], [,, message], [message, signed], [signed, input], [input, hash], [hash, function], [function, produces], [produces, secure], [secure, hash], [hash, code], [code, fixed], [fixed, length], [length, .]]

>> Trigrams: 
[[RSA, approach, ,], [approach, ,, message], [,, message, signed], [message, signed, input], [signed, input, hash], [input, hash, function], [hash, function, produces], [function, produces, secure], [produces, secure, hash], [secure, hash, code], [hash, code, fixed], [code, fixed, length], [fixed, length, .]]

>> Noun Phrases are: 
[the RSA approach, the message, input, a hash function, a secure hash code, fixed length]

>> Named Entities are: 
[('RSA', 'ORG')]


============================ Sentence 63 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 64 =============================

This hash code is then encrypted using the sender’s private key to form the signature. 


>> Tokens are: 
[hash, code, encrypted, sender, private, key, form, signature, .] 

>> PoS Tags are: 
[('hash', 'NOUN'), ('code', 'NOUN'), ('encrypted', 'VERB'), ('sender', 'NOUN'), ('private', 'ADJ'), ('key', 'NOUN'), ('form', 'VERB'), ('signature', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('hash', 'compound'), ('code', 'nsubjpass'), ('encrypted', 'ROOT'), ('sender', 'poss'), ('private', 'amod'), ('key', 'dobj'), ('form', 'xcomp'), ('signature', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[hash, code], [code, encrypted], [encrypted, sender], [sender, private], [private, key], [key, form], [form, signature], [signature, .]]

>> Trigrams: 
[[hash, code, encrypted], [code, encrypted, sender], [encrypted, sender, private], [sender, private, key], [private, key, form], [key, form, signature], [form, signature, .]]

>> Noun Phrases are: 
[This hash code, the sender’s private key, the signature]

>> Named Entities are: 
[]


============================ Sentence 65 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 66 =============================

Both the message and the signature are then transmitted. 


>> Tokens are: 
[message, signature, transmitted, .] 

>> PoS Tags are: 
[('message', 'NOUN'), ('signature', 'NOUN'), ('transmitted', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('message', 'nsubjpass'), ('signature', 'conj'), ('transmitted', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[message, signature], [signature, transmitted], [transmitted, .]]

>> Trigrams: 
[[message, signature, transmitted], [signature, transmitted, .]]

>> Noun Phrases are: 
[Both the message, the signature]

>> Named Entities are: 
[]


============================ Sentence 67 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 68 =============================

The recipient takes the message and  produces a hash code. 


>> Tokens are: 
[recipient, takes, message,  , produces, hash, code, .] 

>> PoS Tags are: 
[('recipient', 'NOUN'), ('takes', 'VERB'), ('message', 'NOUN'), (' ', 'SPACE'), ('produces', 'VERB'), ('hash', 'NOUN'), ('code', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('recipient', 'nsubj'), ('takes', 'ROOT'), ('message', 'dobj'), (' ', 'nsubj'), ('produces', 'conj'), ('hash', 'compound'), ('code', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[recipient, takes], [takes, message], [message,  ], [ , produces], [produces, hash], [hash, code], [code, .]]

>> Trigrams: 
[[recipient, takes, message], [takes, message,  ], [message,  , produces], [ , produces, hash], [produces, hash, code], [hash, code, .]]

>> Noun Phrases are: 
[The recipient, the message, a hash code]

>> Named Entities are: 
[]


============================ Sentence 69 =============================

   Unit-7   


>> Tokens are: 
[   , Unit-7,  ] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('Unit-7', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'nummod'), ('Unit-7', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[   , Unit-7], [Unit-7,  ]]

>> Trigrams: 
[[   , Unit-7,  ]]

>> Noun Phrases are: 
[   Unit-7]

>> Named Entities are: 
[('Unit-7', 'GPE')]


============================ Sentence 70 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›   


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,  ] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,  ]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Digital', 'ORG'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 71 =============================

RSA Approach The recipient also decrypts the signature using the sender’s public key. 


>> Tokens are: 
[RSA, Approach, recipient, decrypts, signature, sender, public, key, .] 

>> PoS Tags are: 
[('RSA', 'PROPN'), ('Approach', 'PROPN'), ('recipient', 'NOUN'), ('decrypts', 'VERB'), ('signature', 'NOUN'), ('sender', 'NOUN'), ('public', 'ADJ'), ('key', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('RSA', 'compound'), ('Approach', 'npadvmod'), ('recipient', 'nsubj'), ('decrypts', 'ROOT'), ('signature', 'dobj'), ('sender', 'poss'), ('public', 'amod'), ('key', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[RSA, Approach], [Approach, recipient], [recipient, decrypts], [decrypts, signature], [signature, sender], [sender, public], [public, key], [key, .]]

>> Trigrams: 
[[RSA, Approach, recipient], [Approach, recipient, decrypts], [recipient, decrypts, signature], [decrypts, signature, sender], [signature, sender, public], [sender, public, key], [public, key, .]]

>> Noun Phrases are: 
[The recipient, the signature, the sender’s public key]

>> Named Entities are: 
[]


============================ Sentence 72 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 73 =============================

If the calculated hash code matches the decrypted signature, the signature is accepted as valid. 


>> Tokens are: 
[calculated, hash, code, matches, decrypted, signature, ,, signature, accepted, valid, .] 

>> PoS Tags are: 
[('calculated', 'VERB'), ('hash', 'NOUN'), ('code', 'NOUN'), ('matches', 'VERB'), ('decrypted', 'VERB'), ('signature', 'NOUN'), (',', 'PUNCT'), ('signature', 'NOUN'), ('accepted', 'VERB'), ('valid', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('calculated', 'amod'), ('hash', 'compound'), ('code', 'nsubj'), ('matches', 'advcl'), ('decrypted', 'amod'), ('signature', 'dobj'), (',', 'punct'), ('signature', 'nsubjpass'), ('accepted', 'ROOT'), ('valid', 'amod'), ('.', 'punct')]

>> Bigrams: 
[[calculated, hash], [hash, code], [code, matches], [matches, decrypted], [decrypted, signature], [signature, ,], [,, signature], [signature, accepted], [accepted, valid], [valid, .]]

>> Trigrams: 
[[calculated, hash, code], [hash, code, matches], [code, matches, decrypted], [matches, decrypted, signature], [decrypted, signature, ,], [signature, ,, signature], [,, signature, accepted], [signature, accepted, valid], [accepted, valid, .]]

>> Noun Phrases are: 
[the calculated hash code, the decrypted signature, the signature]

>> Named Entities are: 
[]


============================ Sentence 74 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 75 =============================

Because only the sender knows the private key, only the sender could have produced a valid signature. 


>> Tokens are: 
[sender, knows, private, key, ,, sender, produced, valid, signature, .] 

>> PoS Tags are: 
[('sender', 'NOUN'), ('knows', 'VERB'), ('private', 'ADJ'), ('key', 'NOUN'), (',', 'PUNCT'), ('sender', 'NOUN'), ('produced', 'VERB'), ('valid', 'ADJ'), ('signature', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('sender', 'nsubj'), ('knows', 'advcl'), ('private', 'amod'), ('key', 'dobj'), (',', 'punct'), ('sender', 'nsubj'), ('produced', 'ROOT'), ('valid', 'amod'), ('signature', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[sender, knows], [knows, private], [private, key], [key, ,], [,, sender], [sender, produced], [produced, valid], [valid, signature], [signature, .]]

>> Trigrams: 
[[sender, knows, private], [knows, private, key], [private, key, ,], [key, ,, sender], [,, sender, produced], [sender, produced, valid], [produced, valid, signature], [valid, signature, .]]

>> Noun Phrases are: 
[only the sender, the private key, only the sender, a valid signature]

>> Named Entities are: 
[]


============================ Sentence 76 =============================

 Unit-7   


>> Tokens are: 
[ , Unit-7,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Unit-7', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('Unit-7', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[ , Unit-7], [Unit-7,  ]]

>> Trigrams: 
[[ , Unit-7,  ]]

>> Noun Phrases are: 
[Unit-7]

>> Named Entities are: 
[('Unit-7', 'GPE')]


============================ Sentence 77 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›   


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,  ] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,  ]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 78 =============================

DSA Approach The hash code is provided as input to a signature function along with a random number k generated  for this particular signature. 


>> Tokens are: 
[DSA, Approach, hash, code, provided, input, signature, function, random, number, k, generated,  , particular, signature, .] 

>> PoS Tags are: 
[('DSA', 'PROPN'), ('Approach', 'PROPN'), ('hash', 'NOUN'), ('code', 'NOUN'), ('provided', 'VERB'), ('input', 'NOUN'), ('signature', 'NOUN'), ('function', 'NOUN'), ('random', 'ADJ'), ('number', 'NOUN'), ('k', 'NOUN'), ('generated', 'VERB'), (' ', 'SPACE'), ('particular', 'ADJ'), ('signature', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('DSA', 'compound'), ('Approach', 'nsubjpass'), ('hash', 'compound'), ('code', 'nsubjpass'), ('provided', 'ROOT'), ('input', 'pobj'), ('signature', 'compound'), ('function', 'pobj'), ('random', 'amod'), ('number', 'pobj'), ('k', 'punct'), ('generated', 'conj'), (' ', 'dobj'), ('particular', 'amod'), ('signature', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[DSA, Approach], [Approach, hash], [hash, code], [code, provided], [provided, input], [input, signature], [signature, function], [function, random], [random, number], [number, k], [k, generated], [generated,  ], [ , particular], [particular, signature], [signature, .]]

>> Trigrams: 
[[DSA, Approach, hash], [Approach, hash, code], [hash, code, provided], [code, provided, input], [provided, input, signature], [input, signature, function], [signature, function, random], [function, random, number], [random, number, k], [number, k, generated], [k, generated,  ], [generated,  , particular], [ , particular, signature], [particular, signature, .]]

>> Noun Phrases are: 
[DSA Approach, The hash code, input, a signature function, a random number, this particular signature]

>> Named Entities are: 
[]


============================ Sentence 79 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 80 =============================

The signature function also depends on the sender’s private key (PRa) and a set of parameters known to a group of communicating principals. 


>> Tokens are: 
[signature, function, depends, sender, private, key, (, PRa, ), set, parameters, known, group, communicating, principals, .] 

>> PoS Tags are: 
[('signature', 'NOUN'), ('function', 'NOUN'), ('depends', 'VERB'), ('sender', 'NOUN'), ('private', 'ADJ'), ('key', 'NOUN'), ('(', 'PUNCT'), ('PRa', 'PROPN'), (')', 'PUNCT'), ('set', 'NOUN'), ('parameters', 'NOUN'), ('known', 'VERB'), ('group', 'NOUN'), ('communicating', 'VERB'), ('principals', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('signature', 'compound'), ('function', 'nsubj'), ('depends', 'ROOT'), ('sender', 'poss'), ('private', 'amod'), ('key', 'nmod'), ('(', 'punct'), ('PRa', 'pobj'), (')', 'punct'), ('set', 'conj'), ('parameters', 'pobj'), ('known', 'acl'), ('group', 'pobj'), ('communicating', 'amod'), ('principals', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[signature, function], [function, depends], [depends, sender], [sender, private], [private, key], [key, (], [(, PRa], [PRa, )], [), set], [set, parameters], [parameters, known], [known, group], [group, communicating], [communicating, principals], [principals, .]]

>> Trigrams: 
[[signature, function, depends], [function, depends, sender], [depends, sender, private], [sender, private, key], [private, key, (], [key, (, PRa], [(, PRa, )], [PRa, ), set], [), set, parameters], [set, parameters, known], [parameters, known, group], [known, group, communicating], [group, communicating, principals], [communicating, principals, .]]

>> Noun Phrases are: 
[The signature function, the sender’s private key (PRa, a set, parameters, a group, communicating principals]

>> Named Entities are: 
[]


============================ Sentence 81 =============================

We can consider this set to constitute a global public key (PU) 


>> Tokens are: 
[consider, set, constitute, global, public, key, (, PU, )] 

>> PoS Tags are: 
[('consider', 'VERB'), ('set', 'NOUN'), ('constitute', 'VERB'), ('global', 'ADJ'), ('public', 'ADJ'), ('key', 'NOUN'), ('(', 'PUNCT'), ('PU', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('consider', 'ROOT'), ('set', 'dobj'), ('constitute', 'advcl'), ('global', 'amod'), ('public', 'amod'), ('key', 'nmod'), ('(', 'punct'), ('PU', 'dobj'), (')', 'punct')]

>> Bigrams: 
[[consider, set], [set, constitute], [constitute, global], [global, public], [public, key], [key, (], [(, PU], [PU, )]]

>> Trigrams: 
[[consider, set, constitute], [set, constitute, global], [constitute, global, public], [global, public, key], [public, key, (], [key, (, PU], [(, PU, )]]

>> Noun Phrases are: 
[We, this set, a global public key (PU]

>> Named Entities are: 
[]


============================ Sentence 82 =============================

The result is a signature consisting of two components, labelled s  and r.   Unit-7   


>> Tokens are: 
[result, signature, consisting, components, ,, labelled, s,  , r.,   , Unit-7,  ] 

>> PoS Tags are: 
[('result', 'NOUN'), ('signature', 'NOUN'), ('consisting', 'VERB'), ('components', 'NOUN'), (',', 'PUNCT'), ('labelled', 'VERB'), ('s', 'PRON'), (' ', 'SPACE'), ('r.', 'NOUN'), ('  ', 'SPACE'), ('Unit-7', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('result', 'nsubj'), ('signature', 'attr'), ('consisting', 'acl'), ('components', 'pobj'), (',', 'punct'), ('labelled', 'acl'), ('s', 'prep'), (' ', 'dobj'), ('r.', 'compound'), ('  ', 'conj'), ('Unit-7', 'oprd'), (' ', 'punct')]

>> Bigrams: 
[[result, signature], [signature, consisting], [consisting, components], [components, ,], [,, labelled], [labelled, s], [s,  ], [ , r.], [r.,   ], [  , Unit-7], [Unit-7,  ]]

>> Trigrams: 
[[result, signature, consisting], [signature, consisting, components], [consisting, components, ,], [components, ,, labelled], [,, labelled, s], [labelled, s,  ], [s,  , r.], [ , r.,   ], [r.,   , Unit-7], [  , Unit-7,  ]]

>> Noun Phrases are: 
[The result, a signature, two components, Unit-7]

>> Named Entities are: 
[('two', 'CARDINAL'), ('Unit-7', 'GPE')]


============================ Sentence 83 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›   


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,  ] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,  ]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 84 =============================

DSA Approach 


>> Tokens are: 
[DSA, Approach] 

>> PoS Tags are: 
[('DSA', 'PROPN'), ('Approach', 'NOUN')] 

>> Dependency Tags are: 
[('DSA', 'compound'), ('Approach', 'ROOT')]

>> Bigrams: 
[[DSA, Approach]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[DSA Approach]

>> Named Entities are: 
[]


============================ Sentence 85 =============================

At the receiving end, the hash code of the incoming message is generated. 


>> Tokens are: 
[receiving, end, ,, hash, code, incoming, message, generated, .] 

>> PoS Tags are: 
[('receiving', 'NOUN'), ('end', 'NOUN'), (',', 'PUNCT'), ('hash', 'NOUN'), ('code', 'NOUN'), ('incoming', 'ADJ'), ('message', 'NOUN'), ('generated', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('receiving', 'compound'), ('end', 'pobj'), (',', 'punct'), ('hash', 'compound'), ('code', 'nsubjpass'), ('incoming', 'amod'), ('message', 'pobj'), ('generated', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[receiving, end], [end, ,], [,, hash], [hash, code], [code, incoming], [incoming, message], [message, generated], [generated, .]]

>> Trigrams: 
[[receiving, end, ,], [end, ,, hash], [,, hash, code], [hash, code, incoming], [code, incoming, message], [incoming, message, generated], [message, generated, .]]

>> Noun Phrases are: 
[the receiving end, the hash code, the incoming message]

>> Named Entities are: 
[]


============================ Sentence 86 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 87 =============================

This plus the signature is input to a verification function. 


>> Tokens are: 
[plus, signature, input, verification, function, .] 

>> PoS Tags are: 
[('plus', 'CCONJ'), ('signature', 'NOUN'), ('input', 'NOUN'), ('verification', 'NOUN'), ('function', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('plus', 'cc'), ('signature', 'conj'), ('input', 'acomp'), ('verification', 'compound'), ('function', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[plus, signature], [signature, input], [input, verification], [verification, function], [function, .]]

>> Trigrams: 
[[plus, signature, input], [signature, input, verification], [input, verification, function], [verification, function, .]]

>> Noun Phrases are: 
[the signature, a verification function]

>> Named Entities are: 
[]


============================ Sentence 88 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 89 =============================

The verification function also depends on the global public key as well as the sender’s public key (PUa), which is paired with the sender’s private key. 


>> Tokens are: 
[verification, function, depends, global, public, key, sender, public, key, (, PUa, ), ,, paired, sender, private, key, .] 

>> PoS Tags are: 
[('verification', 'NOUN'), ('function', 'NOUN'), ('depends', 'VERB'), ('global', 'ADJ'), ('public', 'ADJ'), ('key', 'NOUN'), ('sender', 'NOUN'), ('public', 'ADJ'), ('key', 'NOUN'), ('(', 'PUNCT'), ('PUa', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('paired', 'VERB'), ('sender', 'NOUN'), ('private', 'ADJ'), ('key', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('verification', 'compound'), ('function', 'nsubj'), ('depends', 'ROOT'), ('global', 'amod'), ('public', 'amod'), ('key', 'pobj'), ('sender', 'conj'), ('public', 'amod'), ('key', 'nmod'), ('(', 'punct'), ('PUa', 'appos'), (')', 'punct'), (',', 'punct'), ('paired', 'relcl'), ('sender', 'poss'), ('private', 'amod'), ('key', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[verification, function], [function, depends], [depends, global], [global, public], [public, key], [key, sender], [sender, public], [public, key], [key, (], [(, PUa], [PUa, )], [), ,], [,, paired], [paired, sender], [sender, private], [private, key], [key, .]]

>> Trigrams: 
[[verification, function, depends], [function, depends, global], [depends, global, public], [global, public, key], [public, key, sender], [key, sender, public], [sender, public, key], [public, key, (], [key, (, PUa], [(, PUa, )], [PUa, ), ,], [), ,, paired], [,, paired, sender], [paired, sender, private], [sender, private, key], [private, key, .]]

>> Noun Phrases are: 
[The verification function, the global public key, the sender, public key (PUa, the sender’s private key]

>> Named Entities are: 
[]


============================ Sentence 90 =============================

The output of the verification function is a value that is equal to the signature component r if the signature is valid. 


>> Tokens are: 
[output, verification, function, value, equal, signature, component, r, signature, valid, .] 

>> PoS Tags are: 
[('output', 'NOUN'), ('verification', 'NOUN'), ('function', 'NOUN'), ('value', 'NOUN'), ('equal', 'ADJ'), ('signature', 'NOUN'), ('component', 'NOUN'), ('r', 'NOUN'), ('signature', 'NOUN'), ('valid', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('output', 'nsubj'), ('verification', 'compound'), ('function', 'pobj'), ('value', 'attr'), ('equal', 'acomp'), ('signature', 'compound'), ('component', 'pobj'), ('r', 'punct'), ('signature', 'nsubj'), ('valid', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[output, verification], [verification, function], [function, value], [value, equal], [equal, signature], [signature, component], [component, r], [r, signature], [signature, valid], [valid, .]]

>> Trigrams: 
[[output, verification, function], [verification, function, value], [function, value, equal], [value, equal, signature], [equal, signature, component], [signature, component, r], [component, r, signature], [r, signature, valid], [signature, valid, .]]

>> Noun Phrases are: 
[The output, the verification function, a value, the signature component, the signature]

>> Named Entities are: 
[]


============================ Sentence 91 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 92 =============================

The signature function is such that only the sender, with knowledge of the private key, could have produced the valid signature. 


>> Tokens are: 
[signature, function, sender, ,, knowledge, private, key, ,, produced, valid, signature, .] 

>> PoS Tags are: 
[('signature', 'NOUN'), ('function', 'NOUN'), ('sender', 'NOUN'), (',', 'PUNCT'), ('knowledge', 'NOUN'), ('private', 'ADJ'), ('key', 'NOUN'), (',', 'PUNCT'), ('produced', 'VERB'), ('valid', 'ADJ'), ('signature', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('signature', 'compound'), ('function', 'nsubj'), ('sender', 'nsubj'), (',', 'punct'), ('knowledge', 'pobj'), ('private', 'amod'), ('key', 'pobj'), (',', 'punct'), ('produced', 'ccomp'), ('valid', 'amod'), ('signature', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[signature, function], [function, sender], [sender, ,], [,, knowledge], [knowledge, private], [private, key], [key, ,], [,, produced], [produced, valid], [valid, signature], [signature, .]]

>> Trigrams: 
[[signature, function, sender], [function, sender, ,], [sender, ,, knowledge], [,, knowledge, private], [knowledge, private, key], [private, key, ,], [key, ,, produced], [,, produced, valid], [produced, valid, signature], [valid, signature, .]]

>> Noun Phrases are: 
[The signature function, only the sender, knowledge, the private key, the valid signature]

>> Named Entities are: 
[]


============================ Sentence 93 =============================

 Unit-7   


>> Tokens are: 
[ , Unit-7,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Unit-7', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('Unit-7', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[ , Unit-7], [Unit-7,  ]]

>> Trigrams: 
[[ , Unit-7,  ]]

>> Noun Phrases are: 
[Unit-7]

>> Named Entities are: 
[('Unit-7', 'GPE')]


============================ Sentence 94 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›   


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,  ] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,  ]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 95 =============================

Digital Signature Algorithm    Unit-7   


>> Tokens are: 
[Digital, Signature, Algorithm,    , Unit-7,  ] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('Algorithm', 'PROPN'), ('   ', 'SPACE'), ('Unit-7', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'compound'), ('Algorithm', 'npadvmod'), ('   ', 'nummod'), ('Unit-7', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature, Algorithm], [Algorithm,    ], [   , Unit-7], [Unit-7,  ]]

>> Trigrams: 
[[Digital, Signature, Algorithm], [Signature, Algorithm,    ], [Algorithm,    , Unit-7], [   , Unit-7,  ]]

>> Noun Phrases are: 
[Digital Signature Algorithm    Unit-7]

>> Named Entities are: 
[('Unit-7', 'GPE')]


============================ Sentence 96 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›   


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,  ] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,  ]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Digital', 'ORG'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 97 =============================

Digital Signature Algorithm    Unit-7   


>> Tokens are: 
[Digital, Signature, Algorithm,    , Unit-7,  ] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('Algorithm', 'PROPN'), ('   ', 'SPACE'), ('Unit-7', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'compound'), ('Algorithm', 'npadvmod'), ('   ', 'nummod'), ('Unit-7', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature, Algorithm], [Algorithm,    ], [   , Unit-7], [Unit-7,  ]]

>> Trigrams: 
[[Digital, Signature, Algorithm], [Signature, Algorithm,    ], [Algorithm,    , Unit-7], [   , Unit-7,  ]]

>> Noun Phrases are: 
[Digital Signature Algorithm    Unit-7]

>> Named Entities are: 
[('Unit-7', 'GPE')]


============================ Sentence 98 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›   


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,  ] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,  ]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Digital', 'ORG'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 99 =============================

Digital Signature Algorithm    Unit-7   


>> Tokens are: 
[Digital, Signature, Algorithm,    , Unit-7,  ] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('Algorithm', 'PROPN'), ('   ', 'SPACE'), ('Unit-7', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'compound'), ('Algorithm', 'npadvmod'), ('   ', 'nummod'), ('Unit-7', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature, Algorithm], [Algorithm,    ], [   , Unit-7], [Unit-7,  ]]

>> Trigrams: 
[[Digital, Signature, Algorithm], [Signature, Algorithm,    ], [Algorithm,    , Unit-7], [   , Unit-7,  ]]

>> Noun Phrases are: 
[Digital Signature Algorithm    Unit-7]

>> Named Entities are: 
[('Unit-7', 'GPE')]


============================ Sentence 100 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›   


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,  ] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,  ]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Digital', 'ORG'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 101 =============================

Digital Signature Algorithm      DSA Signing    Unit-7   


>> Tokens are: 
[Digital, Signature, Algorithm,      , DSA, Signing,    , Unit-7,  ] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('Algorithm', 'PROPN'), ('     ', 'SPACE'), ('DSA', 'PROPN'), ('Signing', 'VERB'), ('   ', 'SPACE'), ('Unit-7', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'compound'), ('Algorithm', 'compound'), ('     ', 'ROOT'), ('DSA', 'compound'), ('Signing', 'appos'), ('   ', 'prep'), ('Unit-7', 'appos'), (' ', 'appos')]

>> Bigrams: 
[[Digital, Signature], [Signature, Algorithm], [Algorithm,      ], [     , DSA], [DSA, Signing], [Signing,    ], [   , Unit-7], [Unit-7,  ]]

>> Trigrams: 
[[Digital, Signature, Algorithm], [Signature, Algorithm,      ], [Algorithm,      , DSA], [     , DSA, Signing], [DSA, Signing,    ], [Signing,    , Unit-7], [   , Unit-7,  ]]

>> Noun Phrases are: 
[Unit-7]

>> Named Entities are: 
[('Unit-7', 'GPE')]


============================ Sentence 102 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›   


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,  ] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,  ]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 103 =============================

DSA Verifying    Unit-7   


>> Tokens are: 
[DSA, Verifying,    , Unit-7,  ] 

>> PoS Tags are: 
[('DSA', 'PROPN'), ('Verifying', 'VERB'), ('   ', 'SPACE'), ('Unit-7', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('DSA', 'compound'), ('Verifying', 'ROOT'), ('   ', 'nummod'), ('Unit-7', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[DSA, Verifying], [Verifying,    ], [   , Unit-7], [Unit-7,  ]]

>> Trigrams: 
[[DSA, Verifying,    ], [Verifying,    , Unit-7], [   , Unit-7,  ]]

>> Noun Phrases are: 
[   Unit-7]

>> Named Entities are: 
[('Unit-7', 'GPE')]


============================ Sentence 104 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›   


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,  ] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,  ]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Digital', 'ORG'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 105 =============================

ElGamal Digital Signatures Uses private key for encryption (signing) 


>> Tokens are: 
[ElGamal, Digital, Signatures, Uses, private, key, encryption, (, signing, )] 

>> PoS Tags are: 
[('ElGamal', 'PROPN'), ('Digital', 'PROPN'), ('Signatures', 'PROPN'), ('Uses', 'VERB'), ('private', 'ADJ'), ('key', 'NOUN'), ('encryption', 'NOUN'), ('(', 'PUNCT'), ('signing', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('ElGamal', 'compound'), ('Digital', 'compound'), ('Signatures', 'nsubj'), ('Uses', 'ROOT'), ('private', 'amod'), ('key', 'dobj'), ('encryption', 'pobj'), ('(', 'punct'), ('signing', 'acl'), (')', 'punct')]

>> Bigrams: 
[[ElGamal, Digital], [Digital, Signatures], [Signatures, Uses], [Uses, private], [private, key], [key, encryption], [encryption, (], [(, signing], [signing, )]]

>> Trigrams: 
[[ElGamal, Digital, Signatures], [Digital, Signatures, Uses], [Signatures, Uses, private], [Uses, private, key], [private, key, encryption], [key, encryption, (], [encryption, (, signing], [(, signing, )]]

>> Noun Phrases are: 
[ElGamal Digital Signatures, private key, encryption]

>> Named Entities are: 
[]


============================ Sentence 106 =============================

Uses public key for decryption (verification) Each user (e.g.--.- A) generates their key chooses a secret key (number): 1 < xA < q-1   


>> Tokens are: 
[Uses, public, key, decryption, (, verification, ), user, (, e.g.--.-, ), generates, key, chooses, secret, key, (, number, ):, 1, <, xA, <, q-1,  ] 

>> PoS Tags are: 
[('Uses', 'VERB'), ('public', 'ADJ'), ('key', 'NOUN'), ('decryption', 'NOUN'), ('(', 'PUNCT'), ('verification', 'NOUN'), (')', 'PUNCT'), ('user', 'NOUN'), ('(', 'PUNCT'), ('e.g.--.-', 'PROPN'), (')', 'PUNCT'), ('generates', 'VERB'), ('key', 'NOUN'), ('chooses', 'VERB'), ('secret', 'ADJ'), ('key', 'NOUN'), ('(', 'PUNCT'), ('number', 'NOUN'), ('):', 'PUNCT'), ('1', 'NUM'), ('<', 'SYM'), ('xA', 'NUM'), ('<', 'X'), ('q-1', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Uses', 'advcl'), ('public', 'amod'), ('key', 'dobj'), ('decryption', 'pobj'), ('(', 'punct'), ('verification', 'appos'), (')', 'punct'), ('user', 'nsubj'), ('(', 'punct'), ('e.g.--.-', 'compound'), (')', 'punct'), ('generates', 'ROOT'), ('key', 'dobj'), ('chooses', 'ccomp'), ('secret', 'amod'), ('key', 'dobj'), ('(', 'punct'), ('number', 'appos'), ('):', 'punct'), ('1', 'nummod'), ('<', 'appos'), ('xA', 'npadvmod'), ('<', 'punct'), ('q-1', 'poss'), (' ', 'dobj')]

>> Bigrams: 
[[Uses, public], [public, key], [key, decryption], [decryption, (], [(, verification], [verification, )], [), user], [user, (], [(, e.g.--.-], [e.g.--.-, )], [), generates], [generates, key], [key, chooses], [chooses, secret], [secret, key], [key, (], [(, number], [number, ):], [):, 1], [1, <], [<, xA], [xA, <], [<, q-1], [q-1,  ]]

>> Trigrams: 
[[Uses, public, key], [public, key, decryption], [key, decryption, (], [decryption, (, verification], [(, verification, )], [verification, ), user], [), user, (], [user, (, e.g.--.-], [(, e.g.--.-, )], [e.g.--.-, ), generates], [), generates, key], [generates, key, chooses], [key, chooses, secret], [chooses, secret, key], [secret, key, (], [key, (, number], [(, number, ):], [number, ):, 1], [):, 1, <], [1, <, xA], [<, xA, <], [xA, <, q-1], [<, q-1,  ]]

>> Noun Phrases are: 
[public key, decryption, (verification, Each user, e.g.--.- A, their key, a secret key, (number]

>> Named Entities are: 
[]


============================ Sentence 107 =============================

compute their public key: yA = axA mod q   Unit-7   


>> Tokens are: 
[compute, public, key, :, yA, =, axA, mod, q,   , Unit-7,  ] 

>> PoS Tags are: 
[('compute', 'VERB'), ('public', 'ADJ'), ('key', 'NOUN'), (':', 'PUNCT'), ('yA', 'PROPN'), ('=', 'SYM'), ('axA', 'X'), ('mod', 'NOUN'), ('q', 'NOUN'), ('  ', 'SPACE'), ('Unit-7', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('compute', 'ROOT'), ('public', 'amod'), ('key', 'dobj'), (':', 'punct'), ('yA', 'nmod'), ('=', 'punct'), ('axA', 'appos'), ('mod', 'nmod'), ('q', 'appos'), ('  ', 'poss'), ('Unit-7', 'npadvmod'), (' ', 'punct')]

>> Bigrams: 
[[compute, public], [public, key], [key, :], [:, yA], [yA, =], [=, axA], [axA, mod], [mod, q], [q,   ], [  , Unit-7], [Unit-7,  ]]

>> Trigrams: 
[[compute, public, key], [public, key, :], [key, :, yA], [:, yA, =], [yA, =, axA], [=, axA, mod], [axA, mod, q], [mod, q,   ], [q,   , Unit-7], [  , Unit-7,  ]]

>> Noun Phrases are: 
[their public key, q]

>> Named Entities are: 
[('Unit-7', 'GPE')]


============================ Sentence 108 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  22 Recall from Chapter 10, that in 1984, T. Elgamal announced a public-key scheme based on discrete logarithms, closely related to the Diffie-Hellman technique [ELGA84, ELGA85]. 


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,  , 22, Recall, Chapter, 10, ,, 1984, ,, T., Elgamal, announced, public, -, key, scheme, based, discrete, logarithms, ,, closely, related, Diffie, -, Hellman, technique, [, ELGA84, ,, ELGA85, ], .] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), (' ', 'SPACE'), ('22', 'NUM'), ('Recall', 'NOUN'), ('Chapter', 'NOUN'), ('10', 'NUM'), (',', 'PUNCT'), ('1984', 'NUM'), (',', 'PUNCT'), ('T.', 'PROPN'), ('Elgamal', 'PROPN'), ('announced', 'VERB'), ('public', 'ADJ'), ('-', 'PUNCT'), ('key', 'ADJ'), ('scheme', 'NOUN'), ('based', 'VERB'), ('discrete', 'ADJ'), ('logarithms', 'NOUN'), (',', 'PUNCT'), ('closely', 'ADV'), ('related', 'ADJ'), ('Diffie', 'PROPN'), ('-', 'PUNCT'), ('Hellman', 'PROPN'), ('technique', 'NOUN'), ('[', 'PUNCT'), ('ELGA84', 'PROPN'), (',', 'PUNCT'), ('ELGA85', 'X'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'ROOT'), (' ', 'dobj'), ('22', 'nummod'), ('Recall', 'dobj'), ('Chapter', 'pobj'), ('10', 'nummod'), (',', 'punct'), ('1984', 'pobj'), (',', 'punct'), ('T.', 'compound'), ('Elgamal', 'nsubj'), ('announced', 'ccomp'), ('public', 'amod'), ('-', 'punct'), ('key', 'amod'), ('scheme', 'dobj'), ('based', 'acl'), ('discrete', 'amod'), ('logarithms', 'pobj'), (',', 'punct'), ('closely', 'advmod'), ('related', 'amod'), ('Diffie', 'compound'), ('-', 'punct'), ('Hellman', 'compound'), ('technique', 'pobj'), ('[', 'punct'), ('ELGA84', 'appos'), (',', 'punct'), ('ELGA85', 'npadvmod'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,  ], [ , 22], [22, Recall], [Recall, Chapter], [Chapter, 10], [10, ,], [,, 1984], [1984, ,], [,, T.], [T., Elgamal], [Elgamal, announced], [announced, public], [public, -], [-, key], [key, scheme], [scheme, based], [based, discrete], [discrete, logarithms], [logarithms, ,], [,, closely], [closely, related], [related, Diffie], [Diffie, -], [-, Hellman], [Hellman, technique], [technique, [], [[, ELGA84], [ELGA84, ,], [,, ELGA85], [ELGA85, ]], [], .]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,  ], [‹#›,  , 22], [ , 22, Recall], [22, Recall, Chapter], [Recall, Chapter, 10], [Chapter, 10, ,], [10, ,, 1984], [,, 1984, ,], [1984, ,, T.], [,, T., Elgamal], [T., Elgamal, announced], [Elgamal, announced, public], [announced, public, -], [public, -, key], [-, key, scheme], [key, scheme, based], [scheme, based, discrete], [based, discrete, logarithms], [discrete, logarithms, ,], [logarithms, ,, closely], [,, closely, related], [closely, related, Diffie], [related, Diffie, -], [Diffie, -, Hellman], [-, Hellman, technique], [Hellman, technique, [], [technique, [, ELGA84], [[, ELGA84, ,], [ELGA84, ,, ELGA85], [,, ELGA85, ]], [ELGA85, ], .]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology, 22 Recall, Chapter, T. Elgamal, a public-key scheme, discrete logarithms, the Diffie-Hellman technique, ELGA84]

>> Named Entities are: 
[('Institute of Engineering & Technology', 'ORG'), ('22', 'CARDINAL'), ('Chapter 10', 'LAW'), ('1984', 'DATE'), ('T. Elgamal', 'PERSON'), ('Diffie-Hellman', 'ORG')]


============================ Sentence 109 =============================

The ElGamal encryption scheme is designed to enable encryption by a user's public key with decryption by the user's private key. 


>> Tokens are: 
[ElGamal, encryption, scheme, designed, enable, encryption, user, public, key, decryption, user, private, key, .] 

>> PoS Tags are: 
[('ElGamal', 'PROPN'), ('encryption', 'NOUN'), ('scheme', 'NOUN'), ('designed', 'VERB'), ('enable', 'VERB'), ('encryption', 'NOUN'), ('user', 'NOUN'), ('public', 'ADJ'), ('key', 'NOUN'), ('decryption', 'NOUN'), ('user', 'NOUN'), ('private', 'ADJ'), ('key', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ElGamal', 'compound'), ('encryption', 'compound'), ('scheme', 'nsubjpass'), ('designed', 'ROOT'), ('enable', 'xcomp'), ('encryption', 'dobj'), ('user', 'poss'), ('public', 'amod'), ('key', 'pobj'), ('decryption', 'pobj'), ('user', 'poss'), ('private', 'amod'), ('key', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ElGamal, encryption], [encryption, scheme], [scheme, designed], [designed, enable], [enable, encryption], [encryption, user], [user, public], [public, key], [key, decryption], [decryption, user], [user, private], [private, key], [key, .]]

>> Trigrams: 
[[ElGamal, encryption, scheme], [encryption, scheme, designed], [scheme, designed, enable], [designed, enable, encryption], [enable, encryption, user], [encryption, user, public], [user, public, key], [public, key, decryption], [key, decryption, user], [decryption, user, private], [user, private, key], [private, key, .]]

>> Noun Phrases are: 
[The ElGamal encryption scheme, encryption, a user's public key, decryption, the user's private key]

>> Named Entities are: 
[]


============================ Sentence 110 =============================

The ElGamal signature scheme involves the use of the private key for encryption and the public key for decryption. 


>> Tokens are: 
[ElGamal, signature, scheme, involves, use, private, key, encryption, public, key, decryption, .] 

>> PoS Tags are: 
[('ElGamal', 'PROPN'), ('signature', 'NOUN'), ('scheme', 'NOUN'), ('involves', 'VERB'), ('use', 'NOUN'), ('private', 'ADJ'), ('key', 'NOUN'), ('encryption', 'NOUN'), ('public', 'ADJ'), ('key', 'NOUN'), ('decryption', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ElGamal', 'compound'), ('signature', 'compound'), ('scheme', 'nsubj'), ('involves', 'ROOT'), ('use', 'dobj'), ('private', 'amod'), ('key', 'pobj'), ('encryption', 'pobj'), ('public', 'amod'), ('key', 'conj'), ('decryption', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ElGamal, signature], [signature, scheme], [scheme, involves], [involves, use], [use, private], [private, key], [key, encryption], [encryption, public], [public, key], [key, decryption], [decryption, .]]

>> Trigrams: 
[[ElGamal, signature, scheme], [signature, scheme, involves], [scheme, involves, use], [involves, use, private], [use, private, key], [private, key, encryption], [key, encryption, public], [encryption, public, key], [public, key, decryption], [key, decryption, .]]

>> Noun Phrases are: 
[The ElGamal signature scheme, the use, the private key, encryption, the public key, decryption]

>> Named Entities are: 
[]


============================ Sentence 111 =============================

The ElGamal cryptosystem is used in some form in a number of standards including the digital signature standard (DSS) and the S/MIME email standard.   


>> Tokens are: 
[ElGamal, cryptosystem, form, number, standards, including, digital, signature, standard, (, DSS, ), S, /, MIME, email, standard, .,  ] 

>> PoS Tags are: 
[('ElGamal', 'PROPN'), ('cryptosystem', 'NOUN'), ('form', 'NOUN'), ('number', 'NOUN'), ('standards', 'NOUN'), ('including', 'VERB'), ('digital', 'ADJ'), ('signature', 'NOUN'), ('standard', 'NOUN'), ('(', 'PUNCT'), ('DSS', 'PROPN'), (')', 'PUNCT'), ('S', 'PROPN'), ('/', 'SYM'), ('MIME', 'PROPN'), ('email', 'NOUN'), ('standard', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('ElGamal', 'compound'), ('cryptosystem', 'nsubjpass'), ('form', 'pobj'), ('number', 'pobj'), ('standards', 'pobj'), ('including', 'prep'), ('digital', 'amod'), ('signature', 'compound'), ('standard', 'pobj'), ('(', 'punct'), ('DSS', 'appos'), (')', 'punct'), ('S', 'nmod'), ('/', 'punct'), ('MIME', 'compound'), ('email', 'compound'), ('standard', 'conj'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[ElGamal, cryptosystem], [cryptosystem, form], [form, number], [number, standards], [standards, including], [including, digital], [digital, signature], [signature, standard], [standard, (], [(, DSS], [DSS, )], [), S], [S, /], [/, MIME], [MIME, email], [email, standard], [standard, .], [.,  ]]

>> Trigrams: 
[[ElGamal, cryptosystem, form], [cryptosystem, form, number], [form, number, standards], [number, standards, including], [standards, including, digital], [including, digital, signature], [digital, signature, standard], [signature, standard, (], [standard, (, DSS], [(, DSS, )], [DSS, ), S], [), S, /], [S, /, MIME], [/, MIME, email], [MIME, email, standard], [email, standard, .], [standard, .,  ]]

>> Noun Phrases are: 
[The ElGamal cryptosystem, some form, a number, standards, the digital signature standard, (DSS, the S/MIME email standard]

>> Named Entities are: 
[('DSS', 'ORG')]


============================ Sentence 112 =============================

As with Diffie-Hellman, the global elements of ElGamal are a prime number q and a, which is a primitive root of q. User A generates a private/public key pair as shown. 


>> Tokens are: 
[Diffie, -, Hellman, ,, global, elements, ElGamal, prime, number, q, ,, primitive, root, q., User, generates, private, /, public, key, pair, shown, .] 

>> PoS Tags are: 
[('Diffie', 'PROPN'), ('-', 'PUNCT'), ('Hellman', 'PROPN'), (',', 'PUNCT'), ('global', 'ADJ'), ('elements', 'NOUN'), ('ElGamal', 'PROPN'), ('prime', 'ADJ'), ('number', 'NOUN'), ('q', 'NOUN'), (',', 'PUNCT'), ('primitive', 'ADJ'), ('root', 'NOUN'), ('q.', 'PROPN'), ('User', 'PROPN'), ('generates', 'VERB'), ('private', 'ADJ'), ('/', 'SYM'), ('public', 'ADJ'), ('key', 'ADJ'), ('pair', 'NOUN'), ('shown', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Diffie', 'compound'), ('-', 'punct'), ('Hellman', 'pobj'), (',', 'punct'), ('global', 'amod'), ('elements', 'nsubj'), ('ElGamal', 'pobj'), ('prime', 'amod'), ('number', 'attr'), ('q', 'punct'), (',', 'punct'), ('primitive', 'amod'), ('root', 'attr'), ('q.', 'compound'), ('User', 'compound'), ('generates', 'conj'), ('private', 'amod'), ('/', 'punct'), ('public', 'amod'), ('key', 'amod'), ('pair', 'dobj'), ('shown', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[Diffie, -], [-, Hellman], [Hellman, ,], [,, global], [global, elements], [elements, ElGamal], [ElGamal, prime], [prime, number], [number, q], [q, ,], [,, primitive], [primitive, root], [root, q.], [q., User], [User, generates], [generates, private], [private, /], [/, public], [public, key], [key, pair], [pair, shown], [shown, .]]

>> Trigrams: 
[[Diffie, -, Hellman], [-, Hellman, ,], [Hellman, ,, global], [,, global, elements], [global, elements, ElGamal], [elements, ElGamal, prime], [ElGamal, prime, number], [prime, number, q], [number, q, ,], [q, ,, primitive], [,, primitive, root], [primitive, root, q.], [root, q., User], [q., User, generates], [User, generates, private], [generates, private, /], [private, /, public], [/, public, key], [public, key, pair], [key, pair, shown], [pair, shown, .]]

>> Noun Phrases are: 
[Diffie-Hellman, the global elements, ElGamal, a prime number, a primitive root, q. User A, a private/public key pair]

>> Named Entities are: 
[('Diffie-Hellman', 'ORG'), ('User A', 'PRODUCT')]


============================ Sentence 113 =============================

The security of ElGamal is based on the difficulty of computing discrete logarithms, to recover either x given y, or k given K (next slide). 


>> Tokens are: 
[security, ElGamal, based, difficulty, computing, discrete, logarithms, ,, recover, x, given, y, ,, k, given, K, (, slide, ), .] 

>> PoS Tags are: 
[('security', 'NOUN'), ('ElGamal', 'PROPN'), ('based', 'VERB'), ('difficulty', 'NOUN'), ('computing', 'VERB'), ('discrete', 'ADJ'), ('logarithms', 'NOUN'), (',', 'PUNCT'), ('recover', 'VERB'), ('x', 'X'), ('given', 'VERB'), ('y', 'PROPN'), (',', 'PUNCT'), ('k', 'NOUN'), ('given', 'VERB'), ('K', 'PROPN'), ('(', 'PUNCT'), ('slide', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('security', 'nsubjpass'), ('ElGamal', 'pobj'), ('based', 'ROOT'), ('difficulty', 'pobj'), ('computing', 'pcomp'), ('discrete', 'amod'), ('logarithms', 'dobj'), (',', 'punct'), ('recover', 'advcl'), ('x', 'punct'), ('given', 'prep'), ('y', 'pobj'), (',', 'punct'), ('k', 'conj'), ('given', 'prep'), ('K', 'pobj'), ('(', 'punct'), ('slide', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[security, ElGamal], [ElGamal, based], [based, difficulty], [difficulty, computing], [computing, discrete], [discrete, logarithms], [logarithms, ,], [,, recover], [recover, x], [x, given], [given, y], [y, ,], [,, k], [k, given], [given, K], [K, (], [(, slide], [slide, )], [), .]]

>> Trigrams: 
[[security, ElGamal, based], [ElGamal, based, difficulty], [based, difficulty, computing], [difficulty, computing, discrete], [computing, discrete, logarithms], [discrete, logarithms, ,], [logarithms, ,, recover], [,, recover, x], [recover, x, given], [x, given, y], [given, y, ,], [y, ,, k], [,, k, given], [k, given, K], [given, K, (], [K, (, slide], [(, slide, )], [slide, ), .]]

>> Noun Phrases are: 
[The security, ElGamal, the difficulty, discrete logarithms, y, k, K, (next slide]

>> Named Entities are: 
[]


============================ Sentence 114 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 115 =============================

ElGamal Digital Signature Alice signs a message M to Bob by computing the hash m = H(M), 0 <= m <= (q-1) chose random integer K with 1 <= K <= (q-1) and gcd(K,q-1)=1 compute temporary key:  S1 = ak mod q compute K-1 the inverse of K mod (q-1) compute the value:  S2 = K-1(m-xAS1) mod (q-1) signature is:(S1,S2) 


>> Tokens are: 
[ElGamal, Digital, Signature, Alice, signs, message, M, Bob, computing, hash, m, =, H(M, ), ,, 0, <, =, m, <, =, (, q-1, ), chose, random, integer, K, 1, <, =, K, <, =, (, q-1, ), gcd(K, ,, q-1)=1, compute, temporary, key, :,  , S1, =, ak, mod, q, compute, K-1, inverse, K, mod, (, q-1, ), compute, value, :,  , S2, =, K-1(m, -, xAS1, ), mod, (, q-1, ), signature, is:(S1,S2, )] 

>> PoS Tags are: 
[('ElGamal', 'PROPN'), ('Digital', 'PROPN'), ('Signature', 'NOUN'), ('Alice', 'PROPN'), ('signs', 'VERB'), ('message', 'NOUN'), ('M', 'NOUN'), ('Bob', 'PROPN'), ('computing', 'VERB'), ('hash', 'NOUN'), ('m', 'VERB'), ('=', 'PUNCT'), ('H(M', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('0', 'NUM'), ('<', 'X'), ('=', 'PUNCT'), ('m', 'VERB'), ('<', 'X'), ('=', 'PUNCT'), ('(', 'PUNCT'), ('q-1', 'PROPN'), (')', 'PUNCT'), ('chose', 'VERB'), ('random', 'ADJ'), ('integer', 'NOUN'), ('K', 'PROPN'), ('1', 'NUM'), ('<', 'X'), ('=', 'PUNCT'), ('K', 'NOUN'), ('<', 'X'), ('=', 'PUNCT'), ('(', 'PUNCT'), ('q-1', 'PROPN'), (')', 'PUNCT'), ('gcd(K', 'NUM'), (',', 'PUNCT'), ('q-1)=1', 'AUX'), ('compute', 'VERB'), ('temporary', 'ADJ'), ('key', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE'), ('S1', 'NOUN'), ('=', 'PUNCT'), ('ak', 'X'), ('mod', 'X'), ('q', 'NOUN'), ('compute', 'NOUN'), ('K-1', 'PROPN'), ('inverse', 'NOUN'), ('K', 'NOUN'), ('mod', 'PROPN'), ('(', 'PUNCT'), ('q-1', 'PROPN'), (')', 'PUNCT'), ('compute', 'VERB'), ('value', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE'), ('S2', 'NOUN'), ('=', 'SYM'), ('K-1(m', 'PROPN'), ('-', 'PUNCT'), ('xAS1', 'NOUN'), (')', 'PUNCT'), ('mod', 'X'), ('(', 'PUNCT'), ('q-1', 'PROPN'), (')', 'PUNCT'), ('signature', 'NOUN'), ('is:(S1,S2', 'INTJ'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('ElGamal', 'compound'), ('Digital', 'compound'), ('Signature', 'compound'), ('Alice', 'nsubj'), ('signs', 'ccomp'), ('message', 'compound'), ('M', 'dobj'), ('Bob', 'pobj'), ('computing', 'pcomp'), ('hash', 'dobj'), ('m', 'punct'), ('=', 'dobj'), ('H(M', 'dobj'), (')', 'punct'), (',', 'punct'), ('0', 'dep'), ('<', 'dobj'), ('=', 'punct'), ('m', 'dep'), ('<', 'dobj'), ('=', 'npadvmod'), ('(', 'punct'), ('q-1', 'parataxis'), (')', 'punct'), ('chose', 'conj'), ('random', 'amod'), ('integer', 'compound'), ('K', 'dobj'), ('1', 'pobj'), ('<', 'pobj'), ('=', 'punct'), ('K', 'dep'), ('<', 'punct'), ('=', 'punct'), ('(', 'punct'), ('q-1', 'appos'), (')', 'punct'), ('gcd(K', 'conj'), (',', 'punct'), ('q-1)=1', 'aux'), ('compute', 'ccomp'), ('temporary', 'amod'), ('key', 'dobj'), (':', 'punct'), (' ', 'compound'), ('S1', 'nsubj'), ('=', 'punct'), ('ak', 'nmod'), ('mod', 'nmod'), ('q', 'compound'), ('compute', 'compound'), ('K-1', 'appos'), ('inverse', 'appos'), ('K', 'nmod'), ('mod', 'nmod'), ('(', 'punct'), ('q-1', 'pobj'), (')', 'punct'), ('compute', 'ROOT'), ('value', 'dobj'), (':', 'punct'), (' ', 'appos'), ('S2', 'nmod'), ('=', 'punct'), ('K-1(m', 'appos'), ('-', 'punct'), ('xAS1', 'nmod'), (')', 'punct'), ('mod', 'nmod'), ('(', 'punct'), ('q-1', 'nmod'), (')', 'punct'), ('signature', 'dobj'), ('is:(S1,S2', 'intj'), (')', 'punct')]

>> Bigrams: 
[[ElGamal, Digital], [Digital, Signature], [Signature, Alice], [Alice, signs], [signs, message], [message, M], [M, Bob], [Bob, computing], [computing, hash], [hash, m], [m, =], [=, H(M], [H(M, )], [), ,], [,, 0], [0, <], [<, =], [=, m], [m, <], [<, =], [=, (], [(, q-1], [q-1, )], [), chose], [chose, random], [random, integer], [integer, K], [K, 1], [1, <], [<, =], [=, K], [K, <], [<, =], [=, (], [(, q-1], [q-1, )], [), gcd(K], [gcd(K, ,], [,, q-1)=1], [q-1)=1, compute], [compute, temporary], [temporary, key], [key, :], [:,  ], [ , S1], [S1, =], [=, ak], [ak, mod], [mod, q], [q, compute], [compute, K-1], [K-1, inverse], [inverse, K], [K, mod], [mod, (], [(, q-1], [q-1, )], [), compute], [compute, value], [value, :], [:,  ], [ , S2], [S2, =], [=, K-1(m], [K-1(m, -], [-, xAS1], [xAS1, )], [), mod], [mod, (], [(, q-1], [q-1, )], [), signature], [signature, is:(S1,S2], [is:(S1,S2, )]]

>> Trigrams: 
[[ElGamal, Digital, Signature], [Digital, Signature, Alice], [Signature, Alice, signs], [Alice, signs, message], [signs, message, M], [message, M, Bob], [M, Bob, computing], [Bob, computing, hash], [computing, hash, m], [hash, m, =], [m, =, H(M], [=, H(M, )], [H(M, ), ,], [), ,, 0], [,, 0, <], [0, <, =], [<, =, m], [=, m, <], [m, <, =], [<, =, (], [=, (, q-1], [(, q-1, )], [q-1, ), chose], [), chose, random], [chose, random, integer], [random, integer, K], [integer, K, 1], [K, 1, <], [1, <, =], [<, =, K], [=, K, <], [K, <, =], [<, =, (], [=, (, q-1], [(, q-1, )], [q-1, ), gcd(K], [), gcd(K, ,], [gcd(K, ,, q-1)=1], [,, q-1)=1, compute], [q-1)=1, compute, temporary], [compute, temporary, key], [temporary, key, :], [key, :,  ], [:,  , S1], [ , S1, =], [S1, =, ak], [=, ak, mod], [ak, mod, q], [mod, q, compute], [q, compute, K-1], [compute, K-1, inverse], [K-1, inverse, K], [inverse, K, mod], [K, mod, (], [mod, (, q-1], [(, q-1, )], [q-1, ), compute], [), compute, value], [compute, value, :], [value, :,  ], [:,  , S2], [ , S2, =], [S2, =, K-1(m], [=, K-1(m, -], [K-1(m, -, xAS1], [-, xAS1, )], [xAS1, ), mod], [), mod, (], [mod, (, q-1], [(, q-1, )], [q-1, ), signature], [), signature, is:(S1,S2], [signature, is:(S1,S2, )]]

>> Noun Phrases are: 
[ElGamal Digital Signature Alice, a message M, Bob, the hash, H(M, random integer K, (q-1, temporary key,  S1, = ak mod q compute K-1, the inverse, K mod (q-1, the value, S2 = K-1(m, xAS1) mod (q-1) signature]

>> Named Entities are: 
[('Bob', 'PERSON')]


============================ Sentence 116 =============================

Any user B can verify the signature by computing V1 = am mod q V2 = yAS1 


>> Tokens are: 
[user, B, verify, signature, computing, V1, =, mod, q, V2, =, yAS1] 

>> PoS Tags are: 
[('user', 'NOUN'), ('B', 'NOUN'), ('verify', 'VERB'), ('signature', 'NOUN'), ('computing', 'VERB'), ('V1', 'PROPN'), ('=', 'PUNCT'), ('mod', 'NOUN'), ('q', 'NOUN'), ('V2', 'NOUN'), ('=', 'PUNCT'), ('yAS1', 'X')] 

>> Dependency Tags are: 
[('user', 'compound'), ('B', 'nsubj'), ('verify', 'ROOT'), ('signature', 'dobj'), ('computing', 'pcomp'), ('V1', 'dobj'), ('=', 'punct'), ('mod', 'nmod'), ('q', 'det'), ('V2', 'attr'), ('=', 'punct'), ('yAS1', 'punct')]

>> Bigrams: 
[[user, B], [B, verify], [verify, signature], [signature, computing], [computing, V1], [V1, =], [=, mod], [mod, q], [q, V2], [V2, =], [=, yAS1]]

>> Trigrams: 
[[user, B, verify], [B, verify, signature], [verify, signature, computing], [signature, computing, V1], [computing, V1, =], [V1, =, mod], [=, mod, q], [mod, q, V2], [q, V2, =], [V2, =, yAS1]]

>> Noun Phrases are: 
[Any user B, the signature, V1, mod q V2]

>> Named Entities are: 
[]


============================ Sentence 117 =============================

S1S2 mod q Signature is valid if V1 = V2  Unit-7   


>> Tokens are: 
[S1S2, mod, q, Signature, valid, V1, =, V2,  , Unit-7,  ] 

>> PoS Tags are: 
[('S1S2', 'NOUN'), ('mod', 'NOUN'), ('q', 'PROPN'), ('Signature', 'NOUN'), ('valid', 'ADJ'), ('V1', 'PROPN'), ('=', 'SYM'), ('V2', 'PROPN'), (' ', 'SPACE'), ('Unit-7', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('S1S2', 'nmod'), ('mod', 'advmod'), ('q', 'compound'), ('Signature', 'nsubj'), ('valid', 'acomp'), ('V1', 'advcl'), ('=', 'punct'), ('V2', 'npadvmod'), (' ', 'npadvmod'), ('Unit-7', 'appos'), (' ', 'npadvmod')]

>> Bigrams: 
[[S1S2, mod], [mod, q], [q, Signature], [Signature, valid], [valid, V1], [V1, =], [=, V2], [V2,  ], [ , Unit-7], [Unit-7,  ]]

>> Trigrams: 
[[S1S2, mod, q], [mod, q, Signature], [q, Signature, valid], [Signature, valid, V1], [valid, V1, =], [V1, =, V2], [=, V2,  ], [V2,  , Unit-7], [ , Unit-7,  ]]

>> Noun Phrases are: 
[S1S2 mod q Signature]

>> Named Entities are: 
[('V2', 'CARDINAL'), ('Unit-7', 'GPE')]


============================ Sentence 118 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  23 


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,  , 23] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), (' ', 'SPACE'), ('23', 'NUM')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'ROOT'), (' ', 'dobj'), ('23', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,  ], [ , 23]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,  ], [‹#›,  , 23]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Institute of Engineering & Technology', 'ORG'), ('23', 'CARDINAL')]


============================ Sentence 119 =============================

To sign a message M, user A first computes the hash m = H(M), such that m is an integer in the range 0 <= m <= q – 1. 


>> Tokens are: 
[sign, message, M, ,, user, computes, hash, m, =, H(M, ), ,, m, integer, range, 0, <, =, m, <, =, q, –, 1, .] 

>> PoS Tags are: 
[('sign', 'VERB'), ('message', 'NOUN'), ('M', 'NOUN'), (',', 'PUNCT'), ('user', 'NOUN'), ('computes', 'VERB'), ('hash', 'NOUN'), ('m', 'VERB'), ('=', 'PUNCT'), ('H(M', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('m', 'VERB'), ('integer', 'NOUN'), ('range', 'NOUN'), ('0', 'NUM'), ('<', 'X'), ('=', 'PUNCT'), ('m', 'VERB'), ('<', 'X'), ('=', 'PUNCT'), ('q', 'NOUN'), ('–', 'PUNCT'), ('1', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('sign', 'advcl'), ('message', 'compound'), ('M', 'dobj'), (',', 'punct'), ('user', 'meta'), ('computes', 'ROOT'), ('hash', 'dobj'), ('m', 'appos'), ('=', 'dobj'), ('H(M', 'npadvmod'), (')', 'punct'), (',', 'punct'), ('m', 'nsubj'), ('integer', 'attr'), ('range', 'pobj'), ('0', 'punct'), ('<', 'dobj'), ('=', 'punct'), ('m', 'npadvmod'), ('<', 'nsubj'), ('=', 'punct'), ('q', 'npadvmod'), ('–', 'punct'), ('1', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[sign, message], [message, M], [M, ,], [,, user], [user, computes], [computes, hash], [hash, m], [m, =], [=, H(M], [H(M, )], [), ,], [,, m], [m, integer], [integer, range], [range, 0], [0, <], [<, =], [=, m], [m, <], [<, =], [=, q], [q, –], [–, 1], [1, .]]

>> Trigrams: 
[[sign, message, M], [message, M, ,], [M, ,, user], [,, user, computes], [user, computes, hash], [computes, hash, m], [hash, m, =], [m, =, H(M], [=, H(M, )], [H(M, ), ,], [), ,, m], [,, m, integer], [m, integer, range], [integer, range, 0], [range, 0, <], [0, <, =], [<, =, m], [=, m, <], [m, <, =], [<, =, q], [=, q, –], [q, –, 1], [–, 1, .]]

>> Noun Phrases are: 
[a message M, the hash, an integer, the range]

>> Named Entities are: 
[('first', 'ORDINAL'), ('1', 'CARDINAL')]


============================ Sentence 120 =============================

A then forms a digital signature as shown. 


>> Tokens are: 
[forms, digital, signature, shown, .] 

>> PoS Tags are: 
[('forms', 'VERB'), ('digital', 'ADJ'), ('signature', 'NOUN'), ('shown', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('forms', 'ROOT'), ('digital', 'amod'), ('signature', 'dobj'), ('shown', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[forms, digital], [digital, signature], [signature, shown], [shown, .]]

>> Trigrams: 
[[forms, digital, signature], [digital, signature, shown], [signature, shown, .]]

>> Noun Phrases are: 
[a digital signature]

>> Named Entities are: 
[]


============================ Sentence 121 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 122 =============================

The basic idea with El Gamal signatures is to again choose a temporary random signing  key, protect it, then use it solve the specified equation on the hash of the message to create the signature (in 2 pieces). 


>> Tokens are: 
[basic, idea, El, Gamal, signatures, choose, temporary, random, signing,  , key, ,, protect, ,, use, solve, specified, equation, hash, message, create, signature, (, 2, pieces, ), .] 

>> PoS Tags are: 
[('basic', 'ADJ'), ('idea', 'NOUN'), ('El', 'PROPN'), ('Gamal', 'PROPN'), ('signatures', 'NOUN'), ('choose', 'VERB'), ('temporary', 'ADJ'), ('random', 'ADJ'), ('signing', 'NOUN'), (' ', 'SPACE'), ('key', 'ADJ'), (',', 'PUNCT'), ('protect', 'VERB'), (',', 'PUNCT'), ('use', 'VERB'), ('solve', 'VERB'), ('specified', 'VERB'), ('equation', 'NOUN'), ('hash', 'NOUN'), ('message', 'NOUN'), ('create', 'VERB'), ('signature', 'NOUN'), ('(', 'PUNCT'), ('2', 'NUM'), ('pieces', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('basic', 'amod'), ('idea', 'nsubj'), ('El', 'compound'), ('Gamal', 'compound'), ('signatures', 'pobj'), ('choose', 'xcomp'), ('temporary', 'amod'), ('random', 'amod'), ('signing', 'dobj'), (' ', 'prep'), ('key', 'appos'), (',', 'punct'), ('protect', 'conj'), (',', 'punct'), ('use', 'dep'), ('solve', 'ccomp'), ('specified', 'amod'), ('equation', 'dobj'), ('hash', 'pobj'), ('message', 'pobj'), ('create', 'advcl'), ('signature', 'dobj'), ('(', 'punct'), ('2', 'nummod'), ('pieces', 'pobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[basic, idea], [idea, El], [El, Gamal], [Gamal, signatures], [signatures, choose], [choose, temporary], [temporary, random], [random, signing], [signing,  ], [ , key], [key, ,], [,, protect], [protect, ,], [,, use], [use, solve], [solve, specified], [specified, equation], [equation, hash], [hash, message], [message, create], [create, signature], [signature, (], [(, 2], [2, pieces], [pieces, )], [), .]]

>> Trigrams: 
[[basic, idea, El], [idea, El, Gamal], [El, Gamal, signatures], [Gamal, signatures, choose], [signatures, choose, temporary], [choose, temporary, random], [temporary, random, signing], [random, signing,  ], [signing,  , key], [ , key, ,], [key, ,, protect], [,, protect, ,], [protect, ,, use], [,, use, solve], [use, solve, specified], [solve, specified, equation], [specified, equation, hash], [equation, hash, message], [hash, message, create], [message, create, signature], [create, signature, (], [signature, (, 2], [(, 2, pieces], [2, pieces, )], [pieces, ), .]]

>> Noun Phrases are: 
[The basic idea, El Gamal signatures, a temporary random signing, it, it, the specified equation, the hash, the message, the signature, 2 pieces]

>> Named Entities are: 
[('El Gamal', 'GPE'), ('2', 'CARDINAL')]


============================ Sentence 123 =============================

Verification consists of confirming the validation equation that relates the signature to the (hash of the) message (see text for proof). 


>> Tokens are: 
[Verification, consists, confirming, validation, equation, relates, signature, (, hash, ), message, (, text, proof, ), .] 

>> PoS Tags are: 
[('Verification', 'NOUN'), ('consists', 'VERB'), ('confirming', 'VERB'), ('validation', 'NOUN'), ('equation', 'NOUN'), ('relates', 'VERB'), ('signature', 'NOUN'), ('(', 'PUNCT'), ('hash', 'NOUN'), (')', 'PUNCT'), ('message', 'NOUN'), ('(', 'PUNCT'), ('text', 'NOUN'), ('proof', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Verification', 'nsubj'), ('consists', 'ROOT'), ('confirming', 'pcomp'), ('validation', 'compound'), ('equation', 'dobj'), ('relates', 'relcl'), ('signature', 'dobj'), ('(', 'punct'), ('hash', 'pobj'), (')', 'punct'), ('message', 'pobj'), ('(', 'punct'), ('text', 'dobj'), ('proof', 'pobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Verification, consists], [consists, confirming], [confirming, validation], [validation, equation], [equation, relates], [relates, signature], [signature, (], [(, hash], [hash, )], [), message], [message, (], [(, text], [text, proof], [proof, )], [), .]]

>> Trigrams: 
[[Verification, consists, confirming], [consists, confirming, validation], [confirming, validation, equation], [validation, equation, relates], [equation, relates, signature], [relates, signature, (], [signature, (, hash], [(, hash, )], [hash, ), message], [), message, (], [message, (, text], [(, text, proof], [text, proof, )], [proof, ), .]]

>> Noun Phrases are: 
[Verification, the validation equation, the signature, the (hash, the) message, text, proof]

>> Named Entities are: 
[('Verification', 'ORG')]


============================ Sentence 124 =============================

Again note that El Gamal encryption involves 1 modulo exponentiation and multiplications (vs 1 exponentiation for RSA). 


>> Tokens are: 
[note, El, Gamal, encryption, involves, 1, modulo, exponentiation, multiplications, (, vs, 1, exponentiation, RSA, ), .] 

>> PoS Tags are: 
[('note', 'VERB'), ('El', 'PROPN'), ('Gamal', 'PROPN'), ('encryption', 'NOUN'), ('involves', 'VERB'), ('1', 'NUM'), ('modulo', 'ADJ'), ('exponentiation', 'NOUN'), ('multiplications', 'NOUN'), ('(', 'PUNCT'), ('vs', 'ADP'), ('1', 'NUM'), ('exponentiation', 'NOUN'), ('RSA', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('note', 'ROOT'), ('El', 'compound'), ('Gamal', 'compound'), ('encryption', 'nsubj'), ('involves', 'ccomp'), ('1', 'nummod'), ('modulo', 'amod'), ('exponentiation', 'dobj'), ('multiplications', 'conj'), ('(', 'punct'), ('vs', 'prep'), ('1', 'nummod'), ('exponentiation', 'pobj'), ('RSA', 'pobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[note, El], [El, Gamal], [Gamal, encryption], [encryption, involves], [involves, 1], [1, modulo], [modulo, exponentiation], [exponentiation, multiplications], [multiplications, (], [(, vs], [vs, 1], [1, exponentiation], [exponentiation, RSA], [RSA, )], [), .]]

>> Trigrams: 
[[note, El, Gamal], [El, Gamal, encryption], [Gamal, encryption, involves], [encryption, involves, 1], [involves, 1, modulo], [1, modulo, exponentiation], [modulo, exponentiation, multiplications], [exponentiation, multiplications, (], [multiplications, (, vs], [(, vs, 1], [vs, 1, exponentiation], [1, exponentiation, RSA], [exponentiation, RSA, )], [RSA, ), .]]

>> Noun Phrases are: 
[El Gamal encryption, 1 modulo exponentiation, multiplications, 1 exponentiation, RSA]

>> Named Entities are: 
[('El Gamal', 'GPE'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('RSA', 'ORG')]


============================ Sentence 125 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 126 =============================

ElGamal Signature Example  Use field GF(19) 


>> Tokens are: 
[ElGamal, Signature, Example,  , Use, field, GF(19, )] 

>> PoS Tags are: 
[('ElGamal', 'PROPN'), ('Signature', 'PROPN'), ('Example', 'PROPN'), (' ', 'SPACE'), ('Use', 'VERB'), ('field', 'NOUN'), ('GF(19', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('ElGamal', 'compound'), ('Signature', 'compound'), ('Example', 'compound'), (' ', 'nsubj'), ('Use', 'ROOT'), ('field', 'compound'), ('GF(19', 'dobj'), (')', 'punct')]

>> Bigrams: 
[[ElGamal, Signature], [Signature, Example], [Example,  ], [ , Use], [Use, field], [field, GF(19], [GF(19, )]]

>> Trigrams: 
[[ElGamal, Signature, Example], [Signature, Example,  ], [Example,  , Use], [ , Use, field], [Use, field, GF(19], [field, GF(19, )]]

>> Noun Phrases are: 
[field GF(19]

>> Named Entities are: 
[]


============================ Sentence 127 =============================

q=19 and a=10 Alice computes her key: 


>> Tokens are: 
[q=19, a=10, Alice, computes, key, :] 

>> PoS Tags are: 
[('q=19', 'ADJ'), ('a=10', 'PROPN'), ('Alice', 'PROPN'), ('computes', 'VERB'), ('key', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('q=19', 'ROOT'), ('a=10', 'compound'), ('Alice', 'nsubj'), ('computes', 'conj'), ('key', 'dobj'), (':', 'punct')]

>> Bigrams: 
[[q=19, a=10], [a=10, Alice], [Alice, computes], [computes, key], [key, :]]

>> Trigrams: 
[[q=19, a=10, Alice], [a=10, Alice, computes], [Alice, computes, key], [computes, key, :]]

>> Noun Phrases are: 
[a=10 Alice, her key]

>> Named Entities are: 
[('Alice', 'PERSON')]


============================ Sentence 128 =============================

A chooses xA=16 & computes yA=1016 mod 19 = 4 


>> Tokens are: 
[chooses, xA=16, &, computes, yA=1016, mod, 19, =, 4] 

>> PoS Tags are: 
[('chooses', 'VERB'), ('xA=16', 'NUM'), ('&', 'CCONJ'), ('computes', 'VERB'), ('yA=1016', 'PRON'), ('mod', 'NOUN'), ('19', 'NUM'), ('=', 'SYM'), ('4', 'NUM')] 

>> Dependency Tags are: 
[('chooses', 'ROOT'), ('xA=16', 'dobj'), ('&', 'cc'), ('computes', 'conj'), ('yA=1016', 'nmod'), ('mod', 'quantmod'), ('19', 'nummod'), ('=', 'punct'), ('4', 'dobj')]

>> Bigrams: 
[[chooses, xA=16], [xA=16, &], [&, computes], [computes, yA=1016], [yA=1016, mod], [mod, 19], [19, =], [=, 4]]

>> Trigrams: 
[[chooses, xA=16, &], [xA=16, &, computes], [&, computes, yA=1016], [computes, yA=1016, mod], [yA=1016, mod, 19], [mod, 19, =], [19, =, 4]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('19', 'CARDINAL'), ('4', 'CARDINAL')]


============================ Sentence 129 =============================

Alice signs message with hash m=14 as (3,4): choosing random K=5 which has gcd(18,5)=1 computing S1 = 105 mod 19 = 3 finding K-1 mod (q-1) = 5-1 mod 18 = 11 computing S2 = 11(14-16.3) mod 18 = 4 


>> Tokens are: 
[Alice, signs, message, hash, m=14, (, 3,4, ):, choosing, random, K=5, gcd(18,5)=1, computing, S1, =, 105, mod, 19, =, 3, finding, K-1, mod, (, q-1, ), =, 5, -, 1, mod, 18, =, 11, computing, S2, =, 11(14, -, 16.3, ), mod, 18, =, 4] 

>> PoS Tags are: 
[('Alice', 'PROPN'), ('signs', 'VERB'), ('message', 'NOUN'), ('hash', 'NOUN'), ('m=14', 'NOUN'), ('(', 'PUNCT'), ('3,4', 'NUM'), ('):', 'PUNCT'), ('choosing', 'VERB'), ('random', 'ADJ'), ('K=5', 'PROPN'), ('gcd(18,5)=1', 'ADP'), ('computing', 'VERB'), ('S1', 'PROPN'), ('=', 'PUNCT'), ('105', 'NUM'), ('mod', 'ADJ'), ('19', 'NUM'), ('=', 'SYM'), ('3', 'NUM'), ('finding', 'VERB'), ('K-1', 'PROPN'), ('mod', 'NOUN'), ('(', 'PUNCT'), ('q-1', 'PROPN'), (')', 'PUNCT'), ('=', 'SYM'), ('5', 'NUM'), ('-', 'SYM'), ('1', 'NUM'), ('mod', 'NOUN'), ('18', 'NUM'), ('=', 'SYM'), ('11', 'NUM'), ('computing', 'VERB'), ('S2', 'NOUN'), ('=', 'SYM'), ('11(14', 'NOUN'), ('-', 'PUNCT'), ('16.3', 'NUM'), (')', 'PUNCT'), ('mod', 'NOUN'), ('18', 'NUM'), ('=', 'SYM'), ('4', 'NUM')] 

>> Dependency Tags are: 
[('Alice', 'nsubj'), ('signs', 'ROOT'), ('message', 'dobj'), ('hash', 'compound'), ('m=14', 'pobj'), ('(', 'punct'), ('3,4', 'pobj'), ('):', 'punct'), ('choosing', 'advcl'), ('random', 'dobj'), ('K=5', 'appos'), ('gcd(18,5)=1', 'ccomp'), ('computing', 'xcomp'), ('S1', 'dobj'), ('=', 'punct'), ('105', 'nummod'), ('mod', 'dobj'), ('19', 'nummod'), ('=', 'punct'), ('3', 'appos'), ('finding', 'acl'), ('K-1', 'nmod'), ('mod', 'nmod'), ('(', 'punct'), ('q-1', 'dobj'), (')', 'punct'), ('=', 'quantmod'), ('5', 'quantmod'), ('-', 'punct'), ('1', 'nummod'), ('mod', 'dobj'), ('18', 'nummod'), ('=', 'punct'), ('11', 'nummod'), ('computing', 'xcomp'), ('S2', 'dobj'), ('=', 'punct'), ('11(14', 'nmod'), ('-', 'punct'), ('16.3', 'prep'), (')', 'punct'), ('mod', 'prep'), ('18', 'nummod'), ('=', 'punct'), ('4', 'prep')]

>> Bigrams: 
[[Alice, signs], [signs, message], [message, hash], [hash, m=14], [m=14, (], [(, 3,4], [3,4, ):], [):, choosing], [choosing, random], [random, K=5], [K=5, gcd(18,5)=1], [gcd(18,5)=1, computing], [computing, S1], [S1, =], [=, 105], [105, mod], [mod, 19], [19, =], [=, 3], [3, finding], [finding, K-1], [K-1, mod], [mod, (], [(, q-1], [q-1, )], [), =], [=, 5], [5, -], [-, 1], [1, mod], [mod, 18], [18, =], [=, 11], [11, computing], [computing, S2], [S2, =], [=, 11(14], [11(14, -], [-, 16.3], [16.3, )], [), mod], [mod, 18], [18, =], [=, 4]]

>> Trigrams: 
[[Alice, signs, message], [signs, message, hash], [message, hash, m=14], [hash, m=14, (], [m=14, (, 3,4], [(, 3,4, ):], [3,4, ):, choosing], [):, choosing, random], [choosing, random, K=5], [random, K=5, gcd(18,5)=1], [K=5, gcd(18,5)=1, computing], [gcd(18,5)=1, computing, S1], [computing, S1, =], [S1, =, 105], [=, 105, mod], [105, mod, 19], [mod, 19, =], [19, =, 3], [=, 3, finding], [3, finding, K-1], [finding, K-1, mod], [K-1, mod, (], [mod, (, q-1], [(, q-1, )], [q-1, ), =], [), =, 5], [=, 5, -], [5, -, 1], [-, 1, mod], [1, mod, 18], [mod, 18, =], [18, =, 11], [=, 11, computing], [11, computing, S2], [computing, S2, =], [S2, =, 11(14], [=, 11(14, -], [11(14, -, 16.3], [-, 16.3, )], [16.3, ), mod], [), mod, 18], [mod, 18, =], [18, =, 4]]

>> Noun Phrases are: 
[Alice, message, hash m=14, K=5, S1, K-1 mod (q-1, = 5-1 mod, S2]

>> Named Entities are: 
[('S1', 'ORG'), ('105', 'CARDINAL'), ('19', 'CARDINAL'), ('3', 'CARDINAL'), ('K-1', 'PRODUCT'), ('5', 'CARDINAL'), ('18', 'CARDINAL'), ('11', 'CARDINAL'), ('S2', 'PRODUCT'), ('18', 'CARDINAL'), ('4', 'CARDINAL')]


============================ Sentence 130 =============================

Any user B can verify the signature by computing V1 = 1014 mod 19 = 16 V2 = 43.34 = 5184 = 16 mod 19 since 16 = 16 signature is valid   Unit-7   


>> Tokens are: 
[user, B, verify, signature, computing, V1, =, 1014, mod, 19, =, 16, V2, =, 43.34, =, 5184, =, 16, mod, 19, 16, =, 16, signature, valid,   , Unit-7,  ] 

>> PoS Tags are: 
[('user', 'NOUN'), ('B', 'NOUN'), ('verify', 'VERB'), ('signature', 'NOUN'), ('computing', 'VERB'), ('V1', 'PROPN'), ('=', 'PUNCT'), ('1014', 'NUM'), ('mod', 'NOUN'), ('19', 'NUM'), ('=', 'SYM'), ('16', 'NUM'), ('V2', 'NOUN'), ('=', 'PUNCT'), ('43.34', 'NUM'), ('=', 'SYM'), ('5184', 'NUM'), ('=', 'SYM'), ('16', 'NUM'), ('mod', 'NOUN'), ('19', 'NUM'), ('16', 'NUM'), ('=', 'SYM'), ('16', 'NUM'), ('signature', 'NOUN'), ('valid', 'ADJ'), ('  ', 'SPACE'), ('Unit-7', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('user', 'compound'), ('B', 'nsubj'), ('verify', 'ROOT'), ('signature', 'dobj'), ('computing', 'pcomp'), ('V1', 'dobj'), ('=', 'npadvmod'), ('1014', 'nummod'), ('mod', 'npadvmod'), ('19', 'nummod'), ('=', 'punct'), ('16', 'nummod'), ('V2', 'appos'), ('=', 'punct'), ('43.34', 'dobj'), ('=', 'npadvmod'), ('5184', 'npadvmod'), ('=', 'punct'), ('16', 'nummod'), ('mod', 'dobj'), ('19', 'nummod'), ('16', 'nummod'), ('=', 'punct'), ('16', 'nummod'), ('signature', 'pobj'), ('valid', 'acomp'), ('  ', 'nummod'), ('Unit-7', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[user, B], [B, verify], [verify, signature], [signature, computing], [computing, V1], [V1, =], [=, 1014], [1014, mod], [mod, 19], [19, =], [=, 16], [16, V2], [V2, =], [=, 43.34], [43.34, =], [=, 5184], [5184, =], [=, 16], [16, mod], [mod, 19], [19, 16], [16, =], [=, 16], [16, signature], [signature, valid], [valid,   ], [  , Unit-7], [Unit-7,  ]]

>> Trigrams: 
[[user, B, verify], [B, verify, signature], [verify, signature, computing], [signature, computing, V1], [computing, V1, =], [V1, =, 1014], [=, 1014, mod], [1014, mod, 19], [mod, 19, =], [19, =, 16], [=, 16, V2], [16, V2, =], [V2, =, 43.34], [=, 43.34, =], [43.34, =, 5184], [=, 5184, =], [5184, =, 16], [=, 16, mod], [16, mod, 19], [mod, 19, 16], [19, 16, =], [16, =, 16], [=, 16, signature], [16, signature, valid], [signature, valid,   ], [valid,   , Unit-7], [  , Unit-7,  ]]

>> Noun Phrases are: 
[Any user B, the signature, V1, 19 = 16 V2, 16 mod, 16 = 16 signature,   Unit-7]

>> Named Entities are: 
[('V1', 'CARDINAL'), ('19', 'CARDINAL'), ('16', 'CARDINAL'), ('43.34', 'CARDINAL'), ('5184', 'CARDINAL'), ('16', 'CARDINAL'), ('19', 'CARDINAL'), ('16', 'CARDINAL'), ('16', 'CARDINAL'), ('Unit-7', 'GPE')]


============================ Sentence 131 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  24 


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,  , 24] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), (' ', 'SPACE'), ('24', 'NUM')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'ROOT'), (' ', 'dobj'), ('24', 'nummod')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,  ], [ , 24]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,  ], [‹#›,  , 24]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 132 =============================

Here is an example of creating and verifying an ElGamal signature from the text using the prime field GF(19); that is, q = 19. 


>> Tokens are: 
[example, creating, verifying, ElGamal, signature, text, prime, field, GF(19, ), ;, ,, q, =, 19, .] 

>> PoS Tags are: 
[('example', 'NOUN'), ('creating', 'VERB'), ('verifying', 'VERB'), ('ElGamal', 'PROPN'), ('signature', 'NOUN'), ('text', 'NOUN'), ('prime', 'ADJ'), ('field', 'NOUN'), ('GF(19', 'NOUN'), (')', 'PUNCT'), (';', 'PUNCT'), (',', 'PUNCT'), ('q', 'NOUN'), ('=', 'SYM'), ('19', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'nsubj'), ('creating', 'pcomp'), ('verifying', 'conj'), ('ElGamal', 'compound'), ('signature', 'dobj'), ('text', 'pobj'), ('prime', 'amod'), ('field', 'compound'), ('GF(19', 'dobj'), (')', 'punct'), (';', 'punct'), (',', 'punct'), ('q', 'ROOT'), ('=', 'punct'), ('19', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[example, creating], [creating, verifying], [verifying, ElGamal], [ElGamal, signature], [signature, text], [text, prime], [prime, field], [field, GF(19], [GF(19, )], [), ;], [;, ,], [,, q], [q, =], [=, 19], [19, .]]

>> Trigrams: 
[[example, creating, verifying], [creating, verifying, ElGamal], [verifying, ElGamal, signature], [ElGamal, signature, text], [signature, text, prime], [text, prime, field], [prime, field, GF(19], [field, GF(19, )], [GF(19, ), ;], [), ;, ,], [;, ,, q], [,, q, =], [q, =, 19], [=, 19, .]]

>> Noun Phrases are: 
[an example, an ElGamal signature, the text, the prime field GF(19]

>> Named Entities are: 
[('19', 'CARDINAL')]


============================ Sentence 133 =============================

It has primitive roots {2, 3, 10, 13, 14, 15}, as shown in Table 8.3. 


>> Tokens are: 
[primitive, roots, {, 2, ,, 3, ,, 10, ,, 13, ,, 14, ,, 15, }, ,, shown, Table, 8.3, .] 

>> PoS Tags are: 
[('primitive', 'ADJ'), ('roots', 'NOUN'), ('{', 'PUNCT'), ('2', 'NUM'), (',', 'PUNCT'), ('3', 'NUM'), (',', 'PUNCT'), ('10', 'NUM'), (',', 'PUNCT'), ('13', 'NUM'), (',', 'PUNCT'), ('14', 'NUM'), (',', 'PUNCT'), ('15', 'NUM'), ('}', 'PUNCT'), (',', 'PUNCT'), ('shown', 'VERB'), ('Table', 'PROPN'), ('8.3', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('primitive', 'amod'), ('roots', 'dobj'), ('{', 'punct'), ('2', 'appos'), (',', 'punct'), ('3', 'appos'), (',', 'punct'), ('10', 'appos'), (',', 'punct'), ('13', 'appos'), (',', 'punct'), ('14', 'nummod'), (',', 'punct'), ('15', 'appos'), ('}', 'punct'), (',', 'punct'), ('shown', 'advcl'), ('Table', 'pobj'), ('8.3', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[primitive, roots], [roots, {], [{, 2], [2, ,], [,, 3], [3, ,], [,, 10], [10, ,], [,, 13], [13, ,], [,, 14], [14, ,], [,, 15], [15, }], [}, ,], [,, shown], [shown, Table], [Table, 8.3], [8.3, .]]

>> Trigrams: 
[[primitive, roots, {], [roots, {, 2], [{, 2, ,], [2, ,, 3], [,, 3, ,], [3, ,, 10], [,, 10, ,], [10, ,, 13], [,, 13, ,], [13, ,, 14], [,, 14, ,], [14, ,, 15], [,, 15, }], [15, }, ,], [}, ,, shown], [,, shown, Table], [shown, Table, 8.3], [Table, 8.3, .]]

>> Noun Phrases are: 
[It, primitive roots, Table]

>> Named Entities are: 
[('2, 3', 'DATE'), ('10', 'DATE'), ('13', 'DATE'), ('14', 'DATE'), ('15', 'CARDINAL'), ('Table 8.3', 'LAW')]


============================ Sentence 134 =============================

We choose a = 10. 


>> Tokens are: 
[choose, =, 10, .] 

>> PoS Tags are: 
[('choose', 'VERB'), ('=', 'SYM'), ('10', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('choose', 'ROOT'), ('=', 'punct'), ('10', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[choose, =], [=, 10], [10, .]]

>> Trigrams: 
[[choose, =, 10], [=, 10, .]]

>> Noun Phrases are: 
[We]

>> Named Entities are: 
[('10', 'CARDINAL')]


============================ Sentence 135 =============================

Alice generates a key pair as shown, which is = {19, 10, 4}. 


>> Tokens are: 
[Alice, generates, key, pair, shown, ,, =, {, 19, ,, 10, ,, 4, }, .] 

>> PoS Tags are: 
[('Alice', 'PROPN'), ('generates', 'VERB'), ('key', 'ADJ'), ('pair', 'NOUN'), ('shown', 'VERB'), (',', 'PUNCT'), ('=', 'PUNCT'), ('{', 'PUNCT'), ('19', 'NUM'), (',', 'PUNCT'), ('10', 'NUM'), (',', 'PUNCT'), ('4', 'NUM'), ('}', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Alice', 'nsubj'), ('generates', 'ROOT'), ('key', 'amod'), ('pair', 'dobj'), ('shown', 'advcl'), (',', 'punct'), ('=', 'attr'), ('{', 'punct'), ('19', 'appos'), (',', 'punct'), ('10', 'appos'), (',', 'punct'), ('4', 'appos'), ('}', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Alice, generates], [generates, key], [key, pair], [pair, shown], [shown, ,], [,, =], [=, {], [{, 19], [19, ,], [,, 10], [10, ,], [,, 4], [4, }], [}, .]]

>> Trigrams: 
[[Alice, generates, key], [generates, key, pair], [key, pair, shown], [pair, shown, ,], [shown, ,, =], [,, =, {], [=, {, 19], [{, 19, ,], [19, ,, 10], [,, 10, ,], [10, ,, 4], [,, 4, }], [4, }, .]]

>> Noun Phrases are: 
[Alice, a key pair]

>> Named Entities are: 
[('19', 'DATE'), ('10', 'DATE'), ('4', 'CARDINAL')]


============================ Sentence 136 =============================

Alice can sign a message with hash m = 14 as shown to compute the signature pair (3,4). 


>> Tokens are: 
[Alice, sign, message, hash, m, =, 14, shown, compute, signature, pair, (, 3,4, ), .] 

>> PoS Tags are: 
[('Alice', 'PROPN'), ('sign', 'VERB'), ('message', 'NOUN'), ('hash', 'NOUN'), ('m', 'VERB'), ('=', 'SYM'), ('14', 'NUM'), ('shown', 'VERB'), ('compute', 'VERB'), ('signature', 'NOUN'), ('pair', 'NOUN'), ('(', 'PUNCT'), ('3,4', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Alice', 'nsubj'), ('sign', 'ROOT'), ('message', 'dobj'), ('hash', 'pobj'), ('m', 'punct'), ('=', 'dobj'), ('14', 'dobj'), ('shown', 'advcl'), ('compute', 'xcomp'), ('signature', 'compound'), ('pair', 'dobj'), ('(', 'punct'), ('3,4', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Alice, sign], [sign, message], [message, hash], [hash, m], [m, =], [=, 14], [14, shown], [shown, compute], [compute, signature], [signature, pair], [pair, (], [(, 3,4], [3,4, )], [), .]]

>> Trigrams: 
[[Alice, sign, message], [sign, message, hash], [message, hash, m], [hash, m, =], [m, =, 14], [=, 14, shown], [14, shown, compute], [shown, compute, signature], [compute, signature, pair], [signature, pair, (], [pair, (, 3,4], [(, 3,4, )], [3,4, ), .]]

>> Noun Phrases are: 
[Alice, a message, hash, the signature pair]

>> Named Entities are: 
[('14', 'CARDINAL')]


============================ Sentence 137 =============================

Any user B can verify the signature by computing confirming the validation equation as shown. 


>> Tokens are: 
[user, B, verify, signature, computing, confirming, validation, equation, shown, .] 

>> PoS Tags are: 
[('user', 'NOUN'), ('B', 'NOUN'), ('verify', 'VERB'), ('signature', 'NOUN'), ('computing', 'VERB'), ('confirming', 'VERB'), ('validation', 'NOUN'), ('equation', 'NOUN'), ('shown', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('user', 'compound'), ('B', 'nsubj'), ('verify', 'ROOT'), ('signature', 'dobj'), ('computing', 'pcomp'), ('confirming', 'xcomp'), ('validation', 'compound'), ('equation', 'dobj'), ('shown', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[user, B], [B, verify], [verify, signature], [signature, computing], [computing, confirming], [confirming, validation], [validation, equation], [equation, shown], [shown, .]]

>> Trigrams: 
[[user, B, verify], [B, verify, signature], [verify, signature, computing], [signature, computing, confirming], [computing, confirming, validation], [confirming, validation, equation], [validation, equation, shown], [equation, shown, .]]

>> Noun Phrases are: 
[Any user B, the signature, the validation equation]

>> Named Entities are: 
[]


============================ Sentence 138 =============================

   Schnorr Digital Signatures Also uses exponentiation in a finite (Galois) security based on discrete logarithms Minimizes message dependent computation multiplying a 2n-bit integer with an n-bit integer Main work can be done in idle time Have using a prime modulus p  p–1 has a prime factor q of appropriate size typically p 1024-bit and q 160-bit numbers  Unit-7   


>> Tokens are: 
[   , Schnorr, Digital, Signatures, uses, exponentiation, finite, (, Galois, ), security, based, discrete, logarithms, Minimizes, message, dependent, computation, multiplying, 2n, -, bit, integer, n, -, bit, integer, Main, work, idle, time, prime, modulus, p,  , p–1, prime, factor, q, appropriate, size, typically, p, 1024, -, bit, q, 160, -, bit, numbers,  , Unit-7,  ] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('Schnorr', 'PROPN'), ('Digital', 'PROPN'), ('Signatures', 'PROPN'), ('uses', 'VERB'), ('exponentiation', 'NOUN'), ('finite', 'NOUN'), ('(', 'PUNCT'), ('Galois', 'PROPN'), (')', 'PUNCT'), ('security', 'NOUN'), ('based', 'VERB'), ('discrete', 'ADJ'), ('logarithms', 'NOUN'), ('Minimizes', 'PROPN'), ('message', 'NOUN'), ('dependent', 'ADJ'), ('computation', 'NOUN'), ('multiplying', 'VERB'), ('2n', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('integer', 'NOUN'), ('n', 'CCONJ'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('integer', 'NOUN'), ('Main', 'PROPN'), ('work', 'NOUN'), ('idle', 'ADJ'), ('time', 'NOUN'), ('prime', 'ADJ'), ('modulus', 'NOUN'), ('p', 'DET'), (' ', 'SPACE'), ('p–1', 'NOUN'), ('prime', 'ADJ'), ('factor', 'NOUN'), ('q', 'NOUN'), ('appropriate', 'ADJ'), ('size', 'NOUN'), ('typically', 'ADV'), ('p', 'DET'), ('1024', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('q', 'ADJ'), ('160', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('numbers', 'NOUN'), (' ', 'SPACE'), ('Unit-7', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'nsubj'), ('Schnorr', 'compound'), ('Digital', 'compound'), ('Signatures', 'nsubj'), ('uses', 'ROOT'), ('exponentiation', 'dobj'), ('finite', 'pobj'), ('(', 'punct'), ('Galois', 'nmod'), (')', 'punct'), ('security', 'appos'), ('based', 'acl'), ('discrete', 'amod'), ('logarithms', 'compound'), ('Minimizes', 'nmod'), ('message', 'nsubjpass'), ('dependent', 'amod'), ('computation', 'dobj'), ('multiplying', 'acl'), ('2n', 'nummod'), ('-', 'punct'), ('bit', 'compound'), ('integer', 'dobj'), ('n', 'nummod'), ('-', 'punct'), ('bit', 'compound'), ('integer', 'nmod'), ('Main', 'compound'), ('work', 'nsubjpass'), ('idle', 'amod'), ('time', 'pobj'), ('prime', 'amod'), ('modulus', 'nmod'), ('p', 'quantmod'), (' ', 'appos'), ('p–1', 'dobj'), ('prime', 'amod'), ('factor', 'dobj'), ('q', 'appos'), ('appropriate', 'amod'), ('size', 'pobj'), ('typically', 'advmod'), ('p', 'det'), ('1024', 'nummod'), ('-', 'punct'), ('bit', 'nmod'), ('q', 'conj'), ('160', 'nummod'), ('-', 'punct'), ('bit', 'compound'), ('numbers', 'appos'), (' ', 'nsubj'), ('Unit-7', 'relcl'), (' ', 'punct')]

>> Bigrams: 
[[   , Schnorr], [Schnorr, Digital], [Digital, Signatures], [Signatures, uses], [uses, exponentiation], [exponentiation, finite], [finite, (], [(, Galois], [Galois, )], [), security], [security, based], [based, discrete], [discrete, logarithms], [logarithms, Minimizes], [Minimizes, message], [message, dependent], [dependent, computation], [computation, multiplying], [multiplying, 2n], [2n, -], [-, bit], [bit, integer], [integer, n], [n, -], [-, bit], [bit, integer], [integer, Main], [Main, work], [work, idle], [idle, time], [time, prime], [prime, modulus], [modulus, p], [p,  ], [ , p–1], [p–1, prime], [prime, factor], [factor, q], [q, appropriate], [appropriate, size], [size, typically], [typically, p], [p, 1024], [1024, -], [-, bit], [bit, q], [q, 160], [160, -], [-, bit], [bit, numbers], [numbers,  ], [ , Unit-7], [Unit-7,  ]]

>> Trigrams: 
[[   , Schnorr, Digital], [Schnorr, Digital, Signatures], [Digital, Signatures, uses], [Signatures, uses, exponentiation], [uses, exponentiation, finite], [exponentiation, finite, (], [finite, (, Galois], [(, Galois, )], [Galois, ), security], [), security, based], [security, based, discrete], [based, discrete, logarithms], [discrete, logarithms, Minimizes], [logarithms, Minimizes, message], [Minimizes, message, dependent], [message, dependent, computation], [dependent, computation, multiplying], [computation, multiplying, 2n], [multiplying, 2n, -], [2n, -, bit], [-, bit, integer], [bit, integer, n], [integer, n, -], [n, -, bit], [-, bit, integer], [bit, integer, Main], [integer, Main, work], [Main, work, idle], [work, idle, time], [idle, time, prime], [time, prime, modulus], [prime, modulus, p], [modulus, p,  ], [p,  , p–1], [ , p–1, prime], [p–1, prime, factor], [prime, factor, q], [factor, q, appropriate], [q, appropriate, size], [appropriate, size, typically], [size, typically, p], [typically, p, 1024], [p, 1024, -], [1024, -, bit], [-, bit, q], [bit, q, 160], [q, 160, -], [160, -, bit], [-, bit, numbers], [bit, numbers,  ], [numbers,  , Unit-7], [ , Unit-7,  ]]

>> Noun Phrases are: 
[Schnorr Digital Signatures, exponentiation, a finite, (Galois) security, discrete logarithms Minimizes message, dependent computation, a 2n-bit integer, an n-bit integer Main work, idle time, a prime modulus p  p–1, a prime factor, q, appropriate size, typically p 1024-bit and q 160-bit numbers]

>> Named Entities are: 
[('Digital Signatures', 'ORG'), ('Galois', 'PERSON'), ('2n', 'CARDINAL'), ('Main', 'ORG'), ('1024', 'DATE'), ('160', 'CARDINAL'), ('Unit-7', 'GPE')]


============================ Sentence 139 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  25 


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,  , 25] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), (' ', 'SPACE'), ('25', 'NUM')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'ROOT'), (' ', 'dobj'), ('25', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,  ], [ , 25]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,  ], [‹#›,  , 25]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Institute of Engineering & Technology', 'ORG'), ('25', 'DATE')]


============================ Sentence 140 =============================

As with the ElGamal digital signature scheme, the Schnorr signature scheme is based on discrete logarithms [SCHN89, SCHN91]. 


>> Tokens are: 
[ElGamal, digital, signature, scheme, ,, Schnorr, signature, scheme, based, discrete, logarithms, [, SCHN89, ,, SCHN91, ], .] 

>> PoS Tags are: 
[('ElGamal', 'PROPN'), ('digital', 'ADJ'), ('signature', 'NOUN'), ('scheme', 'NOUN'), (',', 'PUNCT'), ('Schnorr', 'PROPN'), ('signature', 'NOUN'), ('scheme', 'NOUN'), ('based', 'VERB'), ('discrete', 'ADJ'), ('logarithms', 'NOUN'), ('[', 'PUNCT'), ('SCHN89', 'NUM'), (',', 'PUNCT'), ('SCHN91', 'NOUN'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ElGamal', 'nmod'), ('digital', 'amod'), ('signature', 'compound'), ('scheme', 'pobj'), (',', 'punct'), ('Schnorr', 'compound'), ('signature', 'compound'), ('scheme', 'nsubjpass'), ('based', 'ROOT'), ('discrete', 'amod'), ('logarithms', 'pobj'), ('[', 'punct'), ('SCHN89', 'appos'), (',', 'punct'), ('SCHN91', 'npadvmod'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[ElGamal, digital], [digital, signature], [signature, scheme], [scheme, ,], [,, Schnorr], [Schnorr, signature], [signature, scheme], [scheme, based], [based, discrete], [discrete, logarithms], [logarithms, [], [[, SCHN89], [SCHN89, ,], [,, SCHN91], [SCHN91, ]], [], .]]

>> Trigrams: 
[[ElGamal, digital, signature], [digital, signature, scheme], [signature, scheme, ,], [scheme, ,, Schnorr], [,, Schnorr, signature], [Schnorr, signature, scheme], [signature, scheme, based], [scheme, based, discrete], [based, discrete, logarithms], [discrete, logarithms, [], [logarithms, [, SCHN89], [[, SCHN89, ,], [SCHN89, ,, SCHN91], [,, SCHN91, ]], [SCHN91, ], .]]

>> Noun Phrases are: 
[the ElGamal digital signature scheme, the Schnorr signature scheme, discrete logarithms]

>> Named Entities are: 
[]


============================ Sentence 141 =============================

The Schnorr scheme minimizes the message dependent amount of computation required to generate a signature. 


>> Tokens are: 
[Schnorr, scheme, minimizes, message, dependent, computation, required, generate, signature, .] 

>> PoS Tags are: 
[('Schnorr', 'PROPN'), ('scheme', 'NOUN'), ('minimizes', 'VERB'), ('message', 'NOUN'), ('dependent', 'ADJ'), ('computation', 'NOUN'), ('required', 'VERB'), ('generate', 'VERB'), ('signature', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Schnorr', 'compound'), ('scheme', 'nsubj'), ('minimizes', 'ROOT'), ('message', 'npadvmod'), ('dependent', 'amod'), ('computation', 'pobj'), ('required', 'acl'), ('generate', 'xcomp'), ('signature', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Schnorr, scheme], [scheme, minimizes], [minimizes, message], [message, dependent], [dependent, computation], [computation, required], [required, generate], [generate, signature], [signature, .]]

>> Trigrams: 
[[Schnorr, scheme, minimizes], [scheme, minimizes, message], [minimizes, message, dependent], [message, dependent, computation], [dependent, computation, required], [computation, required, generate], [required, generate, signature], [generate, signature, .]]

>> Noun Phrases are: 
[The Schnorr scheme, the message dependent amount, computation, a signature]

>> Named Entities are: 
[]


============================ Sentence 142 =============================

The main work for signature generation does not depend on the message and can be done during the idle time of the processor. 


>> Tokens are: 
[main, work, signature, generation, depend, message, idle, time, processor, .] 

>> PoS Tags are: 
[('main', 'ADJ'), ('work', 'NOUN'), ('signature', 'NOUN'), ('generation', 'NOUN'), ('depend', 'VERB'), ('message', 'NOUN'), ('idle', 'ADJ'), ('time', 'NOUN'), ('processor', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('main', 'amod'), ('work', 'nsubj'), ('signature', 'compound'), ('generation', 'pobj'), ('depend', 'ROOT'), ('message', 'pobj'), ('idle', 'amod'), ('time', 'pobj'), ('processor', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[main, work], [work, signature], [signature, generation], [generation, depend], [depend, message], [message, idle], [idle, time], [time, processor], [processor, .]]

>> Trigrams: 
[[main, work, signature], [work, signature, generation], [signature, generation, depend], [generation, depend, message], [depend, message, idle], [message, idle, time], [idle, time, processor], [time, processor, .]]

>> Noun Phrases are: 
[The main work, signature generation, the message, the idle time, the processor]

>> Named Entities are: 
[]


============================ Sentence 143 =============================

The message dependent part of the signature generation requires multiplying a 2n-bit integer with an n-bit integer. 


>> Tokens are: 
[message, dependent, signature, generation, requires, multiplying, 2n, -, bit, integer, n, -, bit, integer, .] 

>> PoS Tags are: 
[('message', 'NOUN'), ('dependent', 'ADJ'), ('signature', 'NOUN'), ('generation', 'NOUN'), ('requires', 'VERB'), ('multiplying', 'VERB'), ('2n', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('integer', 'NOUN'), ('n', 'CCONJ'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('integer', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('message', 'nmod'), ('dependent', 'amod'), ('signature', 'compound'), ('generation', 'pobj'), ('requires', 'ROOT'), ('multiplying', 'xcomp'), ('2n', 'nummod'), ('-', 'punct'), ('bit', 'compound'), ('integer', 'dobj'), ('n', 'nummod'), ('-', 'punct'), ('bit', 'compound'), ('integer', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[message, dependent], [dependent, signature], [signature, generation], [generation, requires], [requires, multiplying], [multiplying, 2n], [2n, -], [-, bit], [bit, integer], [integer, n], [n, -], [-, bit], [bit, integer], [integer, .]]

>> Trigrams: 
[[message, dependent, signature], [dependent, signature, generation], [signature, generation, requires], [generation, requires, multiplying], [requires, multiplying, 2n], [multiplying, 2n, -], [2n, -, bit], [-, bit, integer], [bit, integer, n], [integer, n, -], [n, -, bit], [-, bit, integer], [bit, integer, .]]

>> Noun Phrases are: 
[The message dependent part, the signature generation, a 2n-bit integer, an n-bit integer]

>> Named Entities are: 
[('2n', 'CARDINAL')]


============================ Sentence 144 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 145 =============================

The scheme is based on using a prime modulus p, with p – 1 having a prime factor q of appropriate size; that is p – 1 = 1 (mod q). 


>> Tokens are: 
[scheme, based, prime, modulus, p, ,, p, –, 1, having, prime, factor, q, appropriate, size, ;, p, –, 1, =, 1, (, mod, q, ), .] 

>> PoS Tags are: 
[('scheme', 'NOUN'), ('based', 'VERB'), ('prime', 'ADJ'), ('modulus', 'NOUN'), ('p', 'NOUN'), (',', 'PUNCT'), ('p', 'NOUN'), ('–', 'PUNCT'), ('1', 'NUM'), ('having', 'VERB'), ('prime', 'ADJ'), ('factor', 'NOUN'), ('q', 'NOUN'), ('appropriate', 'ADJ'), ('size', 'NOUN'), (';', 'PUNCT'), ('p', 'DET'), ('–', 'PUNCT'), ('1', 'NUM'), ('=', 'SYM'), ('1', 'NUM'), ('(', 'PUNCT'), ('mod', 'X'), ('q', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('scheme', 'nsubjpass'), ('based', 'ccomp'), ('prime', 'amod'), ('modulus', 'compound'), ('p', 'dobj'), (',', 'punct'), ('p', 'pobj'), ('–', 'punct'), ('1', 'prep'), ('having', 'pcomp'), ('prime', 'amod'), ('factor', 'dobj'), ('q', 'appos'), ('appropriate', 'amod'), ('size', 'pobj'), (';', 'punct'), ('p', 'attr'), ('–', 'punct'), ('1', 'quantmod'), ('=', 'punct'), ('1', 'attr'), ('(', 'punct'), ('mod', 'compound'), ('q', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[scheme, based], [based, prime], [prime, modulus], [modulus, p], [p, ,], [,, p], [p, –], [–, 1], [1, having], [having, prime], [prime, factor], [factor, q], [q, appropriate], [appropriate, size], [size, ;], [;, p], [p, –], [–, 1], [1, =], [=, 1], [1, (], [(, mod], [mod, q], [q, )], [), .]]

>> Trigrams: 
[[scheme, based, prime], [based, prime, modulus], [prime, modulus, p], [modulus, p, ,], [p, ,, p], [,, p, –], [p, –, 1], [–, 1, having], [1, having, prime], [having, prime, factor], [prime, factor, q], [factor, q, appropriate], [q, appropriate, size], [appropriate, size, ;], [size, ;, p], [;, p, –], [p, –, 1], [–, 1, =], [1, =, 1], [=, 1, (], [1, (, mod], [(, mod, q], [mod, q, )], [q, ), .]]

>> Noun Phrases are: 
[The scheme, a prime modulus p, p, a prime factor, q, appropriate size, mod q]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 146 =============================

Typically, we use p approx 21024 and q approx 2160. 


>> Tokens are: 
[Typically, ,, use, p, approx, 21024, q, approx, 2160, .] 

>> PoS Tags are: 
[('Typically', 'ADV'), (',', 'PUNCT'), ('use', 'VERB'), ('p', 'DET'), ('approx', 'NOUN'), ('21024', 'NUM'), ('q', 'NOUN'), ('approx', 'NOUN'), ('2160', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Typically', 'advmod'), (',', 'punct'), ('use', 'ROOT'), ('p', 'dobj'), ('approx', 'dobj'), ('21024', 'nummod'), ('q', 'nmod'), ('approx', 'advmod'), ('2160', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Typically, ,], [,, use], [use, p], [p, approx], [approx, 21024], [21024, q], [q, approx], [approx, 2160], [2160, .]]

>> Trigrams: 
[[Typically, ,, use], [,, use, p], [use, p, approx], [p, approx, 21024], [approx, 21024, q], [21024, q, approx], [q, approx, 2160], [approx, 2160, .]]

>> Noun Phrases are: 
[we, approx]

>> Named Entities are: 
[('21024', 'DATE')]


============================ Sentence 147 =============================

Thus, p  is a 1024-bit number and q  is a 160-bit number, which is also the length of the SHA-1 hash value. 


>> Tokens are: 
[,, p,  , 1024, -, bit, number, q,  , 160, -, bit, number, ,, length, SHA-1, hash, value, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('p', 'DET'), (' ', 'SPACE'), ('1024', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('number', 'NOUN'), ('q', 'PRON'), (' ', 'SPACE'), ('160', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('number', 'NOUN'), (',', 'PUNCT'), ('length', 'NOUN'), ('SHA-1', 'PROPN'), ('hash', 'NOUN'), ('value', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('p', 'det'), (' ', 'nsubj'), ('1024', 'nummod'), ('-', 'punct'), ('bit', 'compound'), ('number', 'attr'), ('q', 'nmod'), (' ', 'conj'), ('160', 'nummod'), ('-', 'punct'), ('bit', 'compound'), ('number', 'attr'), (',', 'punct'), ('length', 'attr'), ('SHA-1', 'compound'), ('hash', 'compound'), ('value', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[,, p], [p,  ], [ , 1024], [1024, -], [-, bit], [bit, number], [number, q], [q,  ], [ , 160], [160, -], [-, bit], [bit, number], [number, ,], [,, length], [length, SHA-1], [SHA-1, hash], [hash, value], [value, .]]

>> Trigrams: 
[[,, p,  ], [p,  , 1024], [ , 1024, -], [1024, -, bit], [-, bit, number], [bit, number, q], [number, q,  ], [q,  , 160], [ , 160, -], [160, -, bit], [-, bit, number], [bit, number, ,], [number, ,, length], [,, length, SHA-1], [length, SHA-1, hash], [SHA-1, hash, value], [hash, value, .]]

>> Noun Phrases are: 
[a 1024-bit number, a 160-bit number, the length, the SHA-1 hash value]

>> Named Entities are: 
[('1024', 'DATE'), ('160', 'CARDINAL')]


============================ Sentence 148 =============================

 Schnorr Key Setup choose suitable primes p , q choose a  such that aq = 1 mod p (a,p,q) are global parameters for all each user (e.g.--.- A) generates a key chooses a secret key (number): 


>> Tokens are: 
[ , Schnorr, Key, Setup, choose, suitable, primes, p, ,, q, choose,  , aq, =, 1, mod, p, (, ,, p, ,, q, ), global, parameters, user, (, e.g.--.-, ), generates, key, chooses, secret, key, (, number, ):] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Schnorr', 'PROPN'), ('Key', 'PROPN'), ('Setup', 'PROPN'), ('choose', 'VERB'), ('suitable', 'ADJ'), ('primes', 'NOUN'), ('p', 'PRON'), (',', 'PUNCT'), ('q', 'PROPN'), ('choose', 'VERB'), (' ', 'SPACE'), ('aq', 'PROPN'), ('=', 'SYM'), ('1', 'NUM'), ('mod', 'NOUN'), ('p', 'DET'), ('(', 'PUNCT'), (',', 'PUNCT'), ('p', 'NOUN'), (',', 'PUNCT'), ('q', 'NOUN'), (')', 'PUNCT'), ('global', 'ADJ'), ('parameters', 'NOUN'), ('user', 'NOUN'), ('(', 'PUNCT'), ('e.g.--.-', 'NOUN'), (')', 'PUNCT'), ('generates', 'VERB'), ('key', 'NOUN'), ('chooses', 'VERB'), ('secret', 'ADJ'), ('key', 'NOUN'), ('(', 'PUNCT'), ('number', 'NOUN'), ('):', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'dep'), ('Schnorr', 'compound'), ('Key', 'compound'), ('Setup', 'nsubj'), ('choose', 'ccomp'), ('suitable', 'amod'), ('primes', 'dobj'), ('p', 'dobj'), (',', 'punct'), ('q', 'nsubj'), ('choose', 'ROOT'), (' ', 'dobj'), ('aq', 'amod'), ('=', 'punct'), ('1', 'nummod'), ('mod', 'appos'), ('p', 'appos'), ('(', 'punct'), (',', 'punct'), ('p', 'nmod'), (',', 'punct'), ('q', 'appos'), (')', 'punct'), ('global', 'amod'), ('parameters', 'attr'), ('user', 'pobj'), ('(', 'punct'), ('e.g.--.-', 'compound'), (')', 'punct'), ('generates', 'conj'), ('key', 'nsubj'), ('chooses', 'ccomp'), ('secret', 'amod'), ('key', 'dobj'), ('(', 'punct'), ('number', 'appos'), ('):', 'punct')]

>> Bigrams: 
[[ , Schnorr], [Schnorr, Key], [Key, Setup], [Setup, choose], [choose, suitable], [suitable, primes], [primes, p], [p, ,], [,, q], [q, choose], [choose,  ], [ , aq], [aq, =], [=, 1], [1, mod], [mod, p], [p, (], [(, ,], [,, p], [p, ,], [,, q], [q, )], [), global], [global, parameters], [parameters, user], [user, (], [(, e.g.--.-], [e.g.--.-, )], [), generates], [generates, key], [key, chooses], [chooses, secret], [secret, key], [key, (], [(, number], [number, ):]]

>> Trigrams: 
[[ , Schnorr, Key], [Schnorr, Key, Setup], [Key, Setup, choose], [Setup, choose, suitable], [choose, suitable, primes], [suitable, primes, p], [primes, p, ,], [p, ,, q], [,, q, choose], [q, choose,  ], [choose,  , aq], [ , aq, =], [aq, =, 1], [=, 1, mod], [1, mod, p], [mod, p, (], [p, (, ,], [(, ,, p], [,, p, ,], [p, ,, q], [,, q, )], [q, ), global], [), global, parameters], [global, parameters, user], [parameters, user, (], [user, (, e.g.--.-], [(, e.g.--.-, )], [e.g.--.-, ), generates], [), generates, key], [generates, key, chooses], [key, chooses, secret], [chooses, secret, key], [secret, key, (], [key, (, number], [(, number, ):]]

>> Noun Phrases are: 
[Schnorr Key Setup, suitable primes, p, q, such that aq = 1 mod, (a,p,q, global parameters, all each user, (e.g.--.- A, a key, a secret key, (number]

>> Named Entities are: 
[]


============================ Sentence 149 =============================

0 < sA < q  compute their public key: vA = a-sA mod q   Unit-7   


>> Tokens are: 
[0, <, sA, <, q,  , compute, public, key, :, vA, =, -, sA, mod, q,   , Unit-7,  ] 

>> PoS Tags are: 
[('0', 'NUM'), ('<', 'PUNCT'), ('sA', 'PROPN'), ('<', 'X'), ('q', 'X'), (' ', 'SPACE'), ('compute', 'VERB'), ('public', 'ADJ'), ('key', 'NOUN'), (':', 'PUNCT'), ('vA', 'PROPN'), ('=', 'PUNCT'), ('-', 'PUNCT'), ('sA', 'NOUN'), ('mod', 'NOUN'), ('q', 'NOUN'), ('  ', 'SPACE'), ('Unit-7', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('0', 'nummod'), ('<', 'dep'), ('sA', 'appos'), ('<', 'appos'), ('q', 'punct'), (' ', 'nsubj'), ('compute', 'ROOT'), ('public', 'amod'), ('key', 'dobj'), (':', 'punct'), ('vA', 'appos'), ('=', 'nmod'), ('-', 'punct'), ('sA', 'compound'), ('mod', 'amod'), ('q', 'npadvmod'), ('  ', 'appos'), ('Unit-7', 'npadvmod'), (' ', 'punct')]

>> Bigrams: 
[[0, <], [<, sA], [sA, <], [<, q], [q,  ], [ , compute], [compute, public], [public, key], [key, :], [:, vA], [vA, =], [=, -], [-, sA], [sA, mod], [mod, q], [q,   ], [  , Unit-7], [Unit-7,  ]]

>> Trigrams: 
[[0, <, sA], [<, sA, <], [sA, <, q], [<, q,  ], [q,  , compute], [ , compute, public], [compute, public, key], [public, key, :], [key, :, vA], [:, vA, =], [vA, =, -], [=, -, sA], [-, sA, mod], [sA, mod, q], [mod, q,   ], [q,   , Unit-7], [  , Unit-7,  ]]

>> Noun Phrases are: 
[sA, their public key, vA]

>> Named Entities are: 
[('Unit-7', 'GPE')]


============================ Sentence 150 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  26 


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,  , 26] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), (' ', 'SPACE'), ('26', 'NUM')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'ROOT'), (' ', 'dobj'), ('26', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,  ], [ , 26]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,  ], [‹#›,  , 26]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Institute of Engineering & Technology', 'ORG'), ('26', 'CARDINAL')]


============================ Sentence 151 =============================

The first part of this scheme is the generation of a private/public key pair, which consists of the following steps:    Choose primes p and q, such that q is a prime factor of p – 1.   Choose an integer a such that aq = 1 


>> Tokens are: 
[scheme, generation, private, /, public, key, pair, ,, consists, following, steps, :,    , Choose, primes, p, q, ,, q, prime, factor, p, –, 1, .,   , Choose, integer, aq, =, 1] 

>> PoS Tags are: 
[('scheme', 'NOUN'), ('generation', 'NOUN'), ('private', 'ADJ'), ('/', 'SYM'), ('public', 'ADJ'), ('key', 'ADJ'), ('pair', 'NOUN'), (',', 'PUNCT'), ('consists', 'VERB'), ('following', 'VERB'), ('steps', 'NOUN'), (':', 'PUNCT'), ('   ', 'SPACE'), ('Choose', 'PROPN'), ('primes', 'VERB'), ('p', 'PROPN'), ('q', 'PROPN'), (',', 'PUNCT'), ('q', 'NOUN'), ('prime', 'ADJ'), ('factor', 'NOUN'), ('p', 'DET'), ('–', 'PUNCT'), ('1', 'NUM'), ('.', 'PUNCT'), ('  ', 'SPACE'), ('Choose', 'VERB'), ('integer', 'NOUN'), ('aq', 'PROPN'), ('=', 'SYM'), ('1', 'NUM')] 

>> Dependency Tags are: 
[('scheme', 'pobj'), ('generation', 'attr'), ('private', 'amod'), ('/', 'punct'), ('public', 'amod'), ('key', 'amod'), ('pair', 'pobj'), (',', 'punct'), ('consists', 'relcl'), ('following', 'amod'), ('steps', 'pobj'), (':', 'punct'), ('   ', 'compound'), ('Choose', 'nsubj'), ('primes', 'ccomp'), ('p', 'dobj'), ('q', 'conj'), (',', 'punct'), ('q', 'nsubj'), ('prime', 'amod'), ('factor', 'attr'), ('p', 'pobj'), ('–', 'punct'), ('1', 'prep'), ('.', 'punct'), ('  ', 'dobj'), ('Choose', 'ROOT'), ('integer', 'dobj'), ('aq', 'quantmod'), ('=', 'punct'), ('1', 'punct')]

>> Bigrams: 
[[scheme, generation], [generation, private], [private, /], [/, public], [public, key], [key, pair], [pair, ,], [,, consists], [consists, following], [following, steps], [steps, :], [:,    ], [   , Choose], [Choose, primes], [primes, p], [p, q], [q, ,], [,, q], [q, prime], [prime, factor], [factor, p], [p, –], [–, 1], [1, .], [.,   ], [  , Choose], [Choose, integer], [integer, aq], [aq, =], [=, 1]]

>> Trigrams: 
[[scheme, generation, private], [generation, private, /], [private, /, public], [/, public, key], [public, key, pair], [key, pair, ,], [pair, ,, consists], [,, consists, following], [consists, following, steps], [following, steps, :], [steps, :,    ], [:,    , Choose], [   , Choose, primes], [Choose, primes, p], [primes, p, q], [p, q, ,], [q, ,, q], [,, q, prime], [q, prime, factor], [prime, factor, p], [factor, p, –], [p, –, 1], [–, 1, .], [1, .,   ], [.,   , Choose], [  , Choose, integer], [Choose, integer, aq], [integer, aq, =], [aq, =, 1]]

>> Noun Phrases are: 
[The first part, this scheme, the generation, a private/public key pair, the following steps,    Choose, p, q, q, a prime factor, an integer]

>> Named Entities are: 
[('first', 'ORDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL')]


============================ Sentence 152 =============================

mod p. 


>> Tokens are: 
[mod, p.] 

>> PoS Tags are: 
[('mod', 'NOUN'), ('p.', 'NOUN')] 

>> Dependency Tags are: 
[('mod', 'compound'), ('p.', 'ROOT')]

>> Bigrams: 
[[mod, p.]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[mod p.]

>> Named Entities are: 
[]


============================ Sentence 153 =============================

The values a, p, and q comprise a global public key that can be common to a group of users. 


>> Tokens are: 
[values, ,, p, ,, q, comprise, global, public, key, common, group, users, .] 

>> PoS Tags are: 
[('values', 'NOUN'), (',', 'PUNCT'), ('p', 'NOUN'), (',', 'PUNCT'), ('q', 'PRON'), ('comprise', 'VERB'), ('global', 'ADJ'), ('public', 'ADJ'), ('key', 'NOUN'), ('common', 'ADJ'), ('group', 'NOUN'), ('users', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('values', 'nsubj'), (',', 'punct'), ('p', 'conj'), (',', 'punct'), ('q', 'conj'), ('comprise', 'ROOT'), ('global', 'amod'), ('public', 'amod'), ('key', 'dobj'), ('common', 'acomp'), ('group', 'pobj'), ('users', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[values, ,], [,, p], [p, ,], [,, q], [q, comprise], [comprise, global], [global, public], [public, key], [key, common], [common, group], [group, users], [users, .]]

>> Trigrams: 
[[values, ,, p], [,, p, ,], [p, ,, q], [,, q, comprise], [q, comprise, global], [comprise, global, public], [global, public, key], [public, key, common], [key, common, group], [common, group, users], [group, users, .]]

>> Noun Phrases are: 
[The values, p, q, a global public key, a group, users]

>> Named Entities are: 
[]


============================ Sentence 154 =============================

  Choose a random integer s with 0 < s < q. 


>> Tokens are: 
[  , Choose, random, integer, s, 0, <, s, <, q.] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Choose', 'VERB'), ('random', 'ADJ'), ('integer', 'NOUN'), ('s', 'VERB'), ('0', 'NUM'), ('<', 'X'), ('s', 'VERB'), ('<', 'X'), ('q.', 'INTJ')] 

>> Dependency Tags are: 
[('  ', 'nsubj'), ('Choose', 'ccomp'), ('random', 'amod'), ('integer', 'dobj'), ('s', 'ccomp'), ('0', 'pobj'), ('<', 'dep'), ('s', 'ROOT'), ('<', 'punct'), ('q.', 'punct')]

>> Bigrams: 
[[  , Choose], [Choose, random], [random, integer], [integer, s], [s, 0], [0, <], [<, s], [s, <], [<, q.]]

>> Trigrams: 
[[  , Choose, random], [Choose, random, integer], [random, integer, s], [integer, s, 0], [s, 0, <], [0, <, s], [<, s, <], [s, <, q.]]

>> Noun Phrases are: 
[a random integer]

>> Named Entities are: 
[]


============================ Sentence 155 =============================

This is the user's private key. 


>> Tokens are: 
[user, private, key, .] 

>> PoS Tags are: 
[('user', 'NOUN'), ('private', 'ADJ'), ('key', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('user', 'poss'), ('private', 'amod'), ('key', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[user, private], [private, key], [key, .]]

>> Trigrams: 
[[user, private, key], [private, key, .]]

>> Noun Phrases are: 
[the user's private key]

>> Named Entities are: 
[]


============================ Sentence 156 =============================

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 157 =============================

Calculate v = a–s 


>> Tokens are: 
[Calculate, v, =, –, s] 

>> PoS Tags are: 
[('Calculate', 'NOUN'), ('v', 'ADP'), ('=', 'ADP'), ('–', 'PUNCT'), ('s', 'X')] 

>> Dependency Tags are: 
[('Calculate', 'nsubj'), ('v', 'prep'), ('=', 'pobj'), ('–', 'punct'), ('s', 'ROOT')]

>> Bigrams: 
[[Calculate, v], [v, =], [=, –], [–, s]]

>> Trigrams: 
[[Calculate, v, =], [v, =, –], [=, –, s]]

>> Noun Phrases are: 
[Calculate]

>> Named Entities are: 
[]


============================ Sentence 158 =============================

mod p. 


>> Tokens are: 
[mod, p.] 

>> PoS Tags are: 
[('mod', 'NOUN'), ('p.', 'NOUN')] 

>> Dependency Tags are: 
[('mod', 'compound'), ('p.', 'ROOT')]

>> Bigrams: 
[[mod, p.]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[mod p.]

>> Named Entities are: 
[]


============================ Sentence 159 =============================

This is the user's public key. 


>> Tokens are: 
[user, public, key, .] 

>> PoS Tags are: 
[('user', 'NOUN'), ('public', 'ADJ'), ('key', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('user', 'poss'), ('public', 'amod'), ('key', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[user, public], [public, key], [key, .]]

>> Trigrams: 
[[user, public, key], [public, key, .]]

>> Noun Phrases are: 
[the user's public key]

>> Named Entities are: 
[]


============================ Sentence 160 =============================

  Schnorr Signature User signs message by choosing random r with 0<r<q and computing x = ar mod p concatenate message with x and hash result to computing: e = H(M || x)    computing: y = (r + se) mod q  signature is pair (e, y) 


>> Tokens are: 
[  , Schnorr, Signature, User, signs, message, choosing, random, r, 0, <, r, <, q, computing, x, =, ar, mod, p, concatenate, message, x, hash, result, computing, :, e, =, H(M, ||, x, ),    , computing, :, y, =, (, r, +, se, ), mod, q,  , signature, pair, (, e, ,, y, )] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Schnorr', 'PROPN'), ('Signature', 'PROPN'), ('User', 'PROPN'), ('signs', 'VERB'), ('message', 'NOUN'), ('choosing', 'VERB'), ('random', 'ADJ'), ('r', 'NOUN'), ('0', 'NUM'), ('<', 'PUNCT'), ('r', 'NOUN'), ('<', 'X'), ('q', 'NOUN'), ('computing', 'VERB'), ('x', 'SYM'), ('=', 'X'), ('ar', 'ADV'), ('mod', 'NOUN'), ('p', 'DET'), ('concatenate', 'ADJ'), ('message', 'NOUN'), ('x', 'PUNCT'), ('hash', 'NOUN'), ('result', 'VERB'), ('computing', 'VERB'), (':', 'PUNCT'), ('e', 'NOUN'), ('=', 'X'), ('H(M', 'PROPN'), ('||', 'NUM'), ('x', 'X'), (')', 'PUNCT'), ('   ', 'SPACE'), ('computing', 'VERB'), (':', 'PUNCT'), ('y', 'X'), ('=', 'PUNCT'), ('(', 'PUNCT'), ('r', 'NOUN'), ('+', 'SYM'), ('se', 'X'), (')', 'PUNCT'), ('mod', 'X'), ('q', 'NOUN'), (' ', 'SPACE'), ('signature', 'NOUN'), ('pair', 'NOUN'), ('(', 'PUNCT'), ('e', 'NOUN'), (',', 'PUNCT'), ('y', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nummod'), ('Schnorr', 'compound'), ('Signature', 'compound'), ('User', 'nsubj'), ('signs', 'ROOT'), ('message', 'dobj'), ('choosing', 'pcomp'), ('random', 'amod'), ('r', 'dobj'), ('0', 'pobj'), ('<', 'dep'), ('r', 'prep'), ('<', 'dobj'), ('q', 'dobj'), ('computing', 'conj'), ('x', 'punct'), ('=', 'dobj'), ('ar', 'prep'), ('mod', 'nmod'), ('p', 'det'), ('concatenate', 'amod'), ('message', 'dobj'), ('x', 'punct'), ('hash', 'nsubj'), ('result', 'conj'), ('computing', 'pcomp'), (':', 'punct'), ('e', 'appos'), ('=', 'appos'), ('H(M', 'dobj'), ('||', 'nummod'), ('x', 'punct'), (')', 'punct'), ('   ', 'dep'), ('computing', 'ccomp'), (':', 'punct'), ('y', 'appos'), ('=', 'punct'), ('(', 'punct'), ('r', 'quantmod'), ('+', 'preconj'), ('se', 'advmod'), (')', 'punct'), ('mod', 'nmod'), ('q', 'nmod'), (' ', 'compound'), ('signature', 'nsubj'), ('pair', 'attr'), ('(', 'punct'), ('e', 'nmod'), (',', 'punct'), ('y', 'appos'), (')', 'punct')]

>> Bigrams: 
[[  , Schnorr], [Schnorr, Signature], [Signature, User], [User, signs], [signs, message], [message, choosing], [choosing, random], [random, r], [r, 0], [0, <], [<, r], [r, <], [<, q], [q, computing], [computing, x], [x, =], [=, ar], [ar, mod], [mod, p], [p, concatenate], [concatenate, message], [message, x], [x, hash], [hash, result], [result, computing], [computing, :], [:, e], [e, =], [=, H(M], [H(M, ||], [||, x], [x, )], [),    ], [   , computing], [computing, :], [:, y], [y, =], [=, (], [(, r], [r, +], [+, se], [se, )], [), mod], [mod, q], [q,  ], [ , signature], [signature, pair], [pair, (], [(, e], [e, ,], [,, y], [y, )]]

>> Trigrams: 
[[  , Schnorr, Signature], [Schnorr, Signature, User], [Signature, User, signs], [User, signs, message], [signs, message, choosing], [message, choosing, random], [choosing, random, r], [random, r, 0], [r, 0, <], [0, <, r], [<, r, <], [r, <, q], [<, q, computing], [q, computing, x], [computing, x, =], [x, =, ar], [=, ar, mod], [ar, mod, p], [mod, p, concatenate], [p, concatenate, message], [concatenate, message, x], [message, x, hash], [x, hash, result], [hash, result, computing], [result, computing, :], [computing, :, e], [:, e, =], [e, =, H(M], [=, H(M, ||], [H(M, ||, x], [||, x, )], [x, ),    ], [),    , computing], [   , computing, :], [computing, :, y], [:, y, =], [y, =, (], [=, (, r], [(, r, +], [r, +, se], [+, se, )], [se, ), mod], [), mod, q], [mod, q,  ], [q,  , signature], [ , signature, pair], [signature, pair, (], [pair, (, e], [(, e, ,], [e, ,, y], [,, y, )]]

>> Noun Phrases are: 
[  Schnorr Signature User, message, random r, q, mod p concatenate message, hash, e, H(M, mod q  signature, pair, e, y]

>> Named Entities are: 
[]


============================ Sentence 161 =============================

Any other user can verify the signature as follows:    computing: x' = ayve mod p    verifying that: e = H(M || x’)     Unit-7   


>> Tokens are: 
[user, verify, signature, follows, :,    , computing, :, x, ', =, ayve, mod, p,    , verifying, :, e, =, H(M, ||, x, ’, ),     , Unit-7,  ] 

>> PoS Tags are: 
[('user', 'NOUN'), ('verify', 'VERB'), ('signature', 'NOUN'), ('follows', 'VERB'), (':', 'PUNCT'), ('   ', 'SPACE'), ('computing', 'NOUN'), (':', 'PUNCT'), ('x', 'PUNCT'), ("'", 'PUNCT'), ('=', 'NOUN'), ('ayve', 'NOUN'), ('mod', 'NOUN'), ('p', 'DET'), ('   ', 'SPACE'), ('verifying', 'NOUN'), (':', 'PUNCT'), ('e', 'X'), ('=', 'PUNCT'), ('H(M', 'PROPN'), ('||', 'NOUN'), ('x', 'SYM'), ('’', 'PUNCT'), (')', 'PUNCT'), ('    ', 'SPACE'), ('Unit-7', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('user', 'nsubj'), ('verify', 'ROOT'), ('signature', 'dobj'), ('follows', 'advcl'), (':', 'punct'), ('   ', 'nummod'), ('computing', 'amod'), (':', 'punct'), ('x', 'punct'), ("'", 'punct'), ('=', 'punct'), ('ayve', 'conj'), ('mod', 'prep'), ('p', 'det'), ('   ', 'nummod'), ('verifying', 'pobj'), (':', 'punct'), ('e', 'compound'), ('=', 'meta'), ('H(M', 'appos'), ('||', 'cc'), ('x', 'punct'), ('’', 'punct'), (')', 'punct'), ('    ', 'nsubj'), ('Unit-7', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[user, verify], [verify, signature], [signature, follows], [follows, :], [:,    ], [   , computing], [computing, :], [:, x], [x, '], [', =], [=, ayve], [ayve, mod], [mod, p], [p,    ], [   , verifying], [verifying, :], [:, e], [e, =], [=, H(M], [H(M, ||], [||, x], [x, ’], [’, )], [),     ], [    , Unit-7], [Unit-7,  ]]

>> Trigrams: 
[[user, verify, signature], [verify, signature, follows], [signature, follows, :], [follows, :,    ], [:,    , computing], [   , computing, :], [computing, :, x], [:, x, '], [x, ', =], [', =, ayve], [=, ayve, mod], [ayve, mod, p], [mod, p,    ], [p,    , verifying], [   , verifying, :], [verifying, :, e], [:, e, =], [e, =, H(M], [=, H(M, ||], [H(M, ||, x], [||, x, ’], [x, ’, )], [’, ),     ], [),     , Unit-7], [    , Unit-7,  ]]

>> Noun Phrases are: 
[Any other user, the signature, p    verifying, e = H(M, )     Unit-7]

>> Named Entities are: 
[]


============================ Sentence 162 =============================

Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  27 A user with public key s and private key v generates a signature as follows:    Choose a random integer r with 0 < r < q and compute x = ar mod 


>> Tokens are: 
[Digital, Signature,                                                           , Darshan, Institute, Engineering, &, Technology,   , ‹#›,  , 27, user, public, key, s, private, key, v, generates, signature, follows, :,    , Choose, random, integer, r, 0, <, r, <, q, compute, x, =, ar, mod] 

>> PoS Tags are: 
[('Digital', 'PROPN'), ('Signature', 'PROPN'), ('                                                          ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('  ', 'SPACE'), ('‹#›', 'VERB'), (' ', 'SPACE'), ('27', 'NUM'), ('user', 'NOUN'), ('public', 'ADJ'), ('key', 'NOUN'), ('s', 'NOUN'), ('private', 'ADJ'), ('key', 'NOUN'), ('v', 'NOUN'), ('generates', 'VERB'), ('signature', 'NOUN'), ('follows', 'VERB'), (':', 'PUNCT'), ('   ', 'SPACE'), ('Choose', 'VERB'), ('random', 'ADJ'), ('integer', 'NOUN'), ('r', 'NOUN'), ('0', 'NUM'), ('<', 'PUNCT'), ('r', 'NOUN'), ('<', 'X'), ('q', 'NOUN'), ('compute', 'VERB'), ('x', 'SYM'), ('=', 'X'), ('ar', 'ADV'), ('mod', 'NOUN')] 

>> Dependency Tags are: 
[('Digital', 'compound'), ('Signature', 'nsubj'), ('                                                          ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('  ', 'appos'), ('‹#›', 'ccomp'), (' ', 'nmod'), ('27', 'nummod'), ('user', 'dobj'), ('public', 'amod'), ('key', 'compound'), ('s', 'pobj'), ('private', 'amod'), ('key', 'compound'), ('v', 'conj'), ('generates', 'ccomp'), ('signature', 'dobj'), ('follows', 'advcl'), (':', 'punct'), ('   ', 'nsubj'), ('Choose', 'ROOT'), ('random', 'amod'), ('integer', 'compound'), ('r', 'dobj'), ('0', 'pobj'), ('<', 'dep'), ('r', 'npadvmod'), ('<', 'dobj'), ('q', 'dobj'), ('compute', 'conj'), ('x', 'punct'), ('=', 'dep'), ('ar', 'prep'), ('mod', 'punct')]

>> Bigrams: 
[[Digital, Signature], [Signature,                                                           ], [                                                          , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology,   ], [  , ‹#›], [‹#›,  ], [ , 27], [27, user], [user, public], [public, key], [key, s], [s, private], [private, key], [key, v], [v, generates], [generates, signature], [signature, follows], [follows, :], [:,    ], [   , Choose], [Choose, random], [random, integer], [integer, r], [r, 0], [0, <], [<, r], [r, <], [<, q], [q, compute], [compute, x], [x, =], [=, ar], [ar, mod]]

>> Trigrams: 
[[Digital, Signature,                                                           ], [Signature,                                                           , Darshan], [                                                          , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology,   ], [Technology,   , ‹#›], [  , ‹#›,  ], [‹#›,  , 27], [ , 27, user], [27, user, public], [user, public, key], [public, key, s], [key, s, private], [s, private, key], [private, key, v], [key, v, generates], [v, generates, signature], [generates, signature, follows], [signature, follows, :], [follows, :,    ], [:,    , Choose], [   , Choose, random], [Choose, random, integer], [random, integer, r], [integer, r, 0], [r, 0, <], [0, <, r], [<, r, <], [r, <, q], [<, q, compute], [q, compute, x], [compute, x, =], [x, =, ar], [=, ar, mod]]

>> Noun Phrases are: 
[Digital Signature, Darshan Institute, Engineering, Technology,  27 A user, public key s, private key v, a signature, a random integer r, q]

>> Named Entities are: 
[('Institute of Engineering & Technology', 'ORG'), ('‹#›', 'DATE'), ('27', 'CARDINAL')]


============================ Sentence 163 =============================

p. This is independent of any message M, hence can be pre-computed. 


>> Tokens are: 
[p., independent, message, M, ,, pre, -, computed, .] 

>> PoS Tags are: 
[('p.', 'NOUN'), ('independent', 'ADJ'), ('message', 'NOUN'), ('M', 'PROPN'), (',', 'PUNCT'), ('pre', 'VERB'), ('-', 'VERB'), ('computed', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('p.', 'npadvmod'), ('independent', 'acomp'), ('message', 'compound'), ('M', 'pobj'), (',', 'punct'), ('pre', 'acomp'), ('-', 'acomp'), ('computed', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[p., independent], [independent, message], [message, M], [M, ,], [,, pre], [pre, -], [-, computed], [computed, .]]

>> Trigrams: 
[[p., independent, message], [independent, message, M], [message, M, ,], [M, ,, pre], [,, pre, -], [pre, -, computed], [-, computed, .]]

>> Noun Phrases are: 
[any message M]

>> Named Entities are: 
[]


============================ Sentence 164 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 165 =============================

Concatenate message with x and hash result to compute: e = H(M || x)    Compute y = 


>> Tokens are: 
[Concatenate, message, x, hash, result, compute, :, e, =, H(M, ||, x, ),    , Compute, y, =] 

>> PoS Tags are: 
[('Concatenate', 'ADJ'), ('message', 'NOUN'), ('x', 'PUNCT'), ('hash', 'NOUN'), ('result', 'VERB'), ('compute', 'VERB'), (':', 'PUNCT'), ('e', 'X'), ('=', 'X'), ('H(M', 'PROPN'), ('||', 'NUM'), ('x', 'X'), (')', 'PUNCT'), ('   ', 'SPACE'), ('Compute', 'NOUN'), ('y', 'NOUN'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('Concatenate', 'amod'), ('message', 'ROOT'), ('x', 'punct'), ('hash', 'nsubj'), ('result', 'conj'), ('compute', 'xcomp'), (':', 'punct'), ('e', 'appos'), ('=', 'appos'), ('H(M', 'appos'), ('||', 'npadvmod'), ('x', 'punct'), (')', 'punct'), ('   ', 'compound'), ('Compute', 'compound'), ('y', 'appos'), ('=', 'punct')]

>> Bigrams: 
[[Concatenate, message], [message, x], [x, hash], [hash, result], [result, compute], [compute, :], [:, e], [e, =], [=, H(M], [H(M, ||], [||, x], [x, )], [),    ], [   , Compute], [Compute, y], [y, =]]

>> Trigrams: 
[[Concatenate, message, x], [message, x, hash], [x, hash, result], [hash, result, compute], [result, compute, :], [compute, :, e], [:, e, =], [e, =, H(M], [=, H(M, ||], [H(M, ||, x], [||, x, )], [x, ),    ], [),    , Compute], [   , Compute, y], [Compute, y, =]]

>> Noun Phrases are: 
[Concatenate message, hash, H(M,    Compute y]

>> Named Entities are: 
[]


============================ Sentence 166 =============================

(r + se) mod 


>> Tokens are: 
[(, r, +, se, ), mod] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('r', 'NOUN'), ('+', 'NOUN'), ('se', 'X'), (')', 'PUNCT'), ('mod', 'NOUN')] 

>> Dependency Tags are: 
[('(', 'punct'), ('r', 'quantmod'), ('+', 'advmod'), ('se', 'nmod'), (')', 'punct'), ('mod', 'ROOT')]

>> Bigrams: 
[[(, r], [r, +], [+, se], [se, )], [), mod]]

>> Trigrams: 
[[(, r, +], [r, +, se], [+, se, )], [se, ), mod]]

>> Noun Phrases are: 
[(r + se) mod]

>> Named Entities are: 
[]


============================ Sentence 167 =============================

q. 


>> Tokens are: 
[q.] 

>> PoS Tags are: 
[('q.', 'NOUN')] 

>> Dependency Tags are: 
[('q.', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[q.]

>> Named Entities are: 
[]


============================ Sentence 168 =============================

The signature consists of the pair (e, y). 


>> Tokens are: 
[signature, consists, pair, (, e, ,, y, ), .] 

>> PoS Tags are: 
[('signature', 'NOUN'), ('consists', 'VERB'), ('pair', 'NOUN'), ('(', 'PUNCT'), ('e', 'NOUN'), (',', 'PUNCT'), ('y', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('signature', 'nsubj'), ('consists', 'ROOT'), ('pair', 'pobj'), ('(', 'punct'), ('e', 'appos'), (',', 'punct'), ('y', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[signature, consists], [consists, pair], [pair, (], [(, e], [e, ,], [,, y], [y, )], [), .]]

>> Trigrams: 
[[signature, consists, pair], [consists, pair, (], [pair, (, e], [(, e, ,], [e, ,, y], [,, y, )], [y, ), .]]

>> Noun Phrases are: 
[The signature, the pair, (e, y]

>> Named Entities are: 
[]


============================ Sentence 169 =============================

  Any other user can verify the signature as follows:    Compute x' = ayve mod p.    Verify that e = H(M || x'). 


>> Tokens are: 
[  , user, verify, signature, follows, :,    , Compute, x, ', =, ayve, mod, p.,    , Verify, e, =, H(M, ||, x, ', ), .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('user', 'NOUN'), ('verify', 'VERB'), ('signature', 'NOUN'), ('follows', 'VERB'), (':', 'PUNCT'), ('   ', 'SPACE'), ('Compute', 'NOUN'), ('x', 'PUNCT'), ("'", 'PUNCT'), ('=', 'NOUN'), ('ayve', 'NOUN'), ('mod', 'NOUN'), ('p.', 'NOUN'), ('   ', 'SPACE'), ('Verify', 'VERB'), ('e', 'X'), ('=', 'SYM'), ('H(M', 'PROPN'), ('||', 'NOUN'), ('x', 'X'), ("'", 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'dep'), ('user', 'nsubj'), ('verify', 'ROOT'), ('signature', 'dobj'), ('follows', 'advcl'), (':', 'punct'), ('   ', 'compound'), ('Compute', 'npadvmod'), ('x', 'punct'), ("'", 'punct'), ('=', 'punct'), ('ayve', 'appos'), ('mod', 'appos'), ('p.', 'npadvmod'), ('   ', 'nummod'), ('Verify', 'advcl'), ('e', 'dobj'), ('=', 'dobj'), ('H(M', 'dobj'), ('||', 'npadvmod'), ('x', 'punct'), ("'", 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[  , user], [user, verify], [verify, signature], [signature, follows], [follows, :], [:,    ], [   , Compute], [Compute, x], [x, '], [', =], [=, ayve], [ayve, mod], [mod, p.], [p.,    ], [   , Verify], [Verify, e], [e, =], [=, H(M], [H(M, ||], [||, x], [x, '], [', )], [), .]]

>> Trigrams: 
[[  , user, verify], [user, verify, signature], [verify, signature, follows], [signature, follows, :], [follows, :,    ], [:,    , Compute], [   , Compute, x], [Compute, x, '], [x, ', =], [', =, ayve], [=, ayve, mod], [ayve, mod, p.], [mod, p.,    ], [p.,    , Verify], [   , Verify, e], [Verify, e, =], [e, =, H(M], [=, H(M, ||], [H(M, ||, x], [||, x, '], [x, ', )], [', ), .]]

>> Noun Phrases are: 
[Any other user, the signature, ayve, mod, H(M]

>> Named Entities are: 
[('Compute', 'ORG')]


============================ Sentence 170 =============================

  See text for details of why the verification works. 


>> Tokens are: 
[  , text, details, verification, works, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('text', 'NOUN'), ('details', 'NOUN'), ('verification', 'NOUN'), ('works', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nsubj'), ('text', 'dobj'), ('details', 'pobj'), ('verification', 'nsubj'), ('works', 'pcomp'), ('.', 'punct')]

>> Bigrams: 
[[  , text], [text, details], [details, verification], [verification, works], [works, .]]

>> Trigrams: 
[[  , text, details], [text, details, verification], [details, verification, works], [verification, works, .]]

>> Noun Phrases are: 
[text, details, the verification]

>> Named Entities are: 
[]
