				 *** Text Processing using NLTK *** 


============================ Sentence 1 =============================

AI-10 The membership functions work on fuzzy sets of variables. 


>> Tokens are: 
 ['AI-10', 'The', 'membership', 'functions', 'work', 'fuzzy', 'sets', 'variables', '.']

>> Bigrams are: 
 [('AI-10', 'The'), ('The', 'membership'), ('membership', 'functions'), ('functions', 'work'), ('work', 'fuzzy'), ('fuzzy', 'sets'), ('sets', 'variables'), ('variables', '.')]

>> Trigrams are: 
 [('AI-10', 'The', 'membership'), ('The', 'membership', 'functions'), ('membership', 'functions', 'work'), ('functions', 'work', 'fuzzy'), ('work', 'fuzzy', 'sets'), ('fuzzy', 'sets', 'variables'), ('sets', 'variables', '.')]

>> POS Tags are: 
 [('AI-10', 'NNP'), ('The', 'DT'), ('membership', 'NN'), ('functions', 'NNS'), ('work', 'VBP'), ('fuzzy', 'JJ'), ('sets', 'NNS'), ('variables', 'NNS'), ('.', '.')]

 (S
  (NP AI-10/NNP)
  (NP The/DT membership/NN functions/NNS)
  work/VBP
  (NP fuzzy/JJ sets/NNS variables/NNS)
  ./.) 


>> Noun Phrases are: 
 ['AI-10', 'The membership functions', 'fuzzy sets variables']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('AI-10', 'ai-10'), ('The', 'the'), ('membership', 'membership'), ('functions', 'function'), ('work', 'work'), ('fuzzy', 'fuzzi'), ('sets', 'set'), ('variables', 'variabl'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('AI-10', 'ai-10'), ('The', 'the'), ('membership', 'membership'), ('functions', 'function'), ('work', 'work'), ('fuzzy', 'fuzzi'), ('sets', 'set'), ('variables', 'variabl'), ('.', '.')]

>> Lemmatization: 
 [('AI-10', 'AI-10'), ('The', 'The'), ('membership', 'membership'), ('functions', 'function'), ('work', 'work'), ('fuzzy', 'fuzzy'), ('sets', 'set'), ('variables', 'variable'), ('.', '.')]



============================ Sentence 2 =============================

Membership Function Membership functions allow you to quantify linguistic term and represent a fuzzy set graphically. 


>> Tokens are: 
 ['Membership', 'Function', 'Membership', 'functions', 'allow', 'quantify', 'linguistic', 'term', 'represent', 'fuzzy', 'set', 'graphically', '.']

>> Bigrams are: 
 [('Membership', 'Function'), ('Function', 'Membership'), ('Membership', 'functions'), ('functions', 'allow'), ('allow', 'quantify'), ('quantify', 'linguistic'), ('linguistic', 'term'), ('term', 'represent'), ('represent', 'fuzzy'), ('fuzzy', 'set'), ('set', 'graphically'), ('graphically', '.')]

>> Trigrams are: 
 [('Membership', 'Function', 'Membership'), ('Function', 'Membership', 'functions'), ('Membership', 'functions', 'allow'), ('functions', 'allow', 'quantify'), ('allow', 'quantify', 'linguistic'), ('quantify', 'linguistic', 'term'), ('linguistic', 'term', 'represent'), ('term', 'represent', 'fuzzy'), ('represent', 'fuzzy', 'set'), ('fuzzy', 'set', 'graphically'), ('set', 'graphically', '.')]

>> POS Tags are: 
 [('Membership', 'NNP'), ('Function', 'NNP'), ('Membership', 'NNP'), ('functions', 'NNS'), ('allow', 'VBP'), ('quantify', 'RB'), ('linguistic', 'JJ'), ('term', 'NN'), ('represent', 'NN'), ('fuzzy', 'NN'), ('set', 'VBN'), ('graphically', 'RB'), ('.', '.')]

 (S
  (NP Membership/NNP Function/NNP Membership/NNP functions/NNS)
  allow/VBP
  quantify/RB
  (NP linguistic/JJ term/NN represent/NN fuzzy/NN)
  set/VBN
  graphically/RB
  ./.) 


>> Noun Phrases are: 
 ['Membership Function Membership functions', 'linguistic term represent fuzzy']

>> Named Entities are: 
 [('PERSON', 'Membership'), ('ORGANIZATION', 'Function Membership')] 

>> Stemming using Porter Stemmer: 
 [('Membership', 'membership'), ('Function', 'function'), ('Membership', 'membership'), ('functions', 'function'), ('allow', 'allow'), ('quantify', 'quantifi'), ('linguistic', 'linguist'), ('term', 'term'), ('represent', 'repres'), ('fuzzy', 'fuzzi'), ('set', 'set'), ('graphically', 'graphic'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Membership', 'membership'), ('Function', 'function'), ('Membership', 'membership'), ('functions', 'function'), ('allow', 'allow'), ('quantify', 'quantifi'), ('linguistic', 'linguist'), ('term', 'term'), ('represent', 'repres'), ('fuzzy', 'fuzzi'), ('set', 'set'), ('graphically', 'graphic'), ('.', '.')]

>> Lemmatization: 
 [('Membership', 'Membership'), ('Function', 'Function'), ('Membership', 'Membership'), ('functions', 'function'), ('allow', 'allow'), ('quantify', 'quantify'), ('linguistic', 'linguistic'), ('term', 'term'), ('represent', 'represent'), ('fuzzy', 'fuzzy'), ('set', 'set'), ('graphically', 'graphically'), ('.', '.')]



============================ Sentence 3 =============================

A membership function for a fuzzy set A on the universe of discourse X is defined as μA:X → [0,1]. 


>> Tokens are: 
 ['A', 'membership', 'function', 'fuzzy', 'set', 'A', 'universe', 'discourse', 'X', 'defined', 'μA', ':', 'X', '→', '[', '0,1', ']', '.']

>> Bigrams are: 
 [('A', 'membership'), ('membership', 'function'), ('function', 'fuzzy'), ('fuzzy', 'set'), ('set', 'A'), ('A', 'universe'), ('universe', 'discourse'), ('discourse', 'X'), ('X', 'defined'), ('defined', 'μA'), ('μA', ':'), (':', 'X'), ('X', '→'), ('→', '['), ('[', '0,1'), ('0,1', ']'), (']', '.')]

>> Trigrams are: 
 [('A', 'membership', 'function'), ('membership', 'function', 'fuzzy'), ('function', 'fuzzy', 'set'), ('fuzzy', 'set', 'A'), ('set', 'A', 'universe'), ('A', 'universe', 'discourse'), ('universe', 'discourse', 'X'), ('discourse', 'X', 'defined'), ('X', 'defined', 'μA'), ('defined', 'μA', ':'), ('μA', ':', 'X'), (':', 'X', '→'), ('X', '→', '['), ('→', '[', '0,1'), ('[', '0,1', ']'), ('0,1', ']', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('membership', 'NN'), ('function', 'NN'), ('fuzzy', 'NN'), ('set', 'VBN'), ('A', 'NNP'), ('universe', 'JJ'), ('discourse', 'NN'), ('X', 'NNP'), ('defined', 'VBD'), ('μA', 'NNS'), (':', ':'), ('X', 'NN'), ('→', 'NNP'), ('[', 'VBZ'), ('0,1', 'CD'), (']', 'NN'), ('.', '.')]

 (S
  (NP A/DT membership/NN function/NN fuzzy/NN)
  set/VBN
  (NP A/NNP)
  (NP universe/JJ discourse/NN X/NNP)
  defined/VBD
  (NP μA/NNS)
  :/:
  (NP X/NN →/NNP)
  [/VBZ
  0,1/CD
  (NP ]/NN)
  ./.) 


>> Noun Phrases are: 
 ['A membership function fuzzy', 'A', 'universe discourse X', 'μA', 'X →', ']']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('membership', 'membership'), ('function', 'function'), ('fuzzy', 'fuzzi'), ('set', 'set'), ('A', 'a'), ('universe', 'univers'), ('discourse', 'discours'), ('X', 'x'), ('defined', 'defin'), ('μA', 'μa'), (':', ':'), ('X', 'x'), ('→', '→'), ('[', '['), ('0,1', '0,1'), (']', ']'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('membership', 'membership'), ('function', 'function'), ('fuzzy', 'fuzzi'), ('set', 'set'), ('A', 'a'), ('universe', 'univers'), ('discourse', 'discours'), ('X', 'x'), ('defined', 'defin'), ('μA', 'μa'), (':', ':'), ('X', 'x'), ('→', '→'), ('[', '['), ('0,1', '0,1'), (']', ']'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('membership', 'membership'), ('function', 'function'), ('fuzzy', 'fuzzy'), ('set', 'set'), ('A', 'A'), ('universe', 'universe'), ('discourse', 'discourse'), ('X', 'X'), ('defined', 'defined'), ('μA', 'μA'), (':', ':'), ('X', 'X'), ('→', '→'), ('[', '['), ('0,1', '0,1'), (']', ']'), ('.', '.')]



============================ Sentence 4 =============================

Here, each element of X is mapped to a value between 0 and 1. 


>> Tokens are: 
 ['Here', ',', 'element', 'X', 'mapped', 'value', '0', '1', '.']

>> Bigrams are: 
 [('Here', ','), (',', 'element'), ('element', 'X'), ('X', 'mapped'), ('mapped', 'value'), ('value', '0'), ('0', '1'), ('1', '.')]

>> Trigrams are: 
 [('Here', ',', 'element'), (',', 'element', 'X'), ('element', 'X', 'mapped'), ('X', 'mapped', 'value'), ('mapped', 'value', '0'), ('value', '0', '1'), ('0', '1', '.')]

>> POS Tags are: 
 [('Here', 'RB'), (',', ','), ('element', 'JJ'), ('X', 'NNP'), ('mapped', 'VBD'), ('value', 'NN'), ('0', 'CD'), ('1', 'CD'), ('.', '.')]

 (S
  Here/RB
  ,/,
  (NP element/JJ X/NNP)
  mapped/VBD
  (NP value/NN)
  0/CD
  1/CD
  ./.) 


>> Noun Phrases are: 
 ['element X', 'value']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Here', 'here'), (',', ','), ('element', 'element'), ('X', 'x'), ('mapped', 'map'), ('value', 'valu'), ('0', '0'), ('1', '1'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Here', 'here'), (',', ','), ('element', 'element'), ('X', 'x'), ('mapped', 'map'), ('value', 'valu'), ('0', '0'), ('1', '1'), ('.', '.')]

>> Lemmatization: 
 [('Here', 'Here'), (',', ','), ('element', 'element'), ('X', 'X'), ('mapped', 'mapped'), ('value', 'value'), ('0', '0'), ('1', '1'), ('.', '.')]



============================ Sentence 5 =============================

It is called membership value or degree of membership. 


>> Tokens are: 
 ['It', 'called', 'membership', 'value', 'degree', 'membership', '.']

>> Bigrams are: 
 [('It', 'called'), ('called', 'membership'), ('membership', 'value'), ('value', 'degree'), ('degree', 'membership'), ('membership', '.')]

>> Trigrams are: 
 [('It', 'called', 'membership'), ('called', 'membership', 'value'), ('membership', 'value', 'degree'), ('value', 'degree', 'membership'), ('degree', 'membership', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('called', 'VBD'), ('membership', 'NN'), ('value', 'NN'), ('degree', 'JJ'), ('membership', 'NN'), ('.', '.')]

 (S
  It/PRP
  called/VBD
  (NP membership/NN value/NN)
  (NP degree/JJ membership/NN)
  ./.) 


>> Noun Phrases are: 
 ['membership value', 'degree membership']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('called', 'call'), ('membership', 'membership'), ('value', 'valu'), ('degree', 'degre'), ('membership', 'membership'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('called', 'call'), ('membership', 'membership'), ('value', 'valu'), ('degree', 'degre'), ('membership', 'membership'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('called', 'called'), ('membership', 'membership'), ('value', 'value'), ('degree', 'degree'), ('membership', 'membership'), ('.', '.')]



============================ Sentence 6 =============================

It quantifies the degree of membership of the element in X to the fuzzy set A. 


>> Tokens are: 
 ['It', 'quantifies', 'degree', 'membership', 'element', 'X', 'fuzzy', 'set', 'A', '.']

>> Bigrams are: 
 [('It', 'quantifies'), ('quantifies', 'degree'), ('degree', 'membership'), ('membership', 'element'), ('element', 'X'), ('X', 'fuzzy'), ('fuzzy', 'set'), ('set', 'A'), ('A', '.')]

>> Trigrams are: 
 [('It', 'quantifies', 'degree'), ('quantifies', 'degree', 'membership'), ('degree', 'membership', 'element'), ('membership', 'element', 'X'), ('element', 'X', 'fuzzy'), ('X', 'fuzzy', 'set'), ('fuzzy', 'set', 'A'), ('set', 'A', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('quantifies', 'VBZ'), ('degree', 'JJ'), ('membership', 'NN'), ('element', 'NN'), ('X', 'NNP'), ('fuzzy', 'NN'), ('set', 'VBD'), ('A', 'NNP'), ('.', '.')]

 (S
  It/PRP
  quantifies/VBZ
  (NP degree/JJ membership/NN element/NN X/NNP fuzzy/NN)
  set/VBD
  (NP A/NNP)
  ./.) 


>> Noun Phrases are: 
 ['degree membership element X fuzzy', 'A']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('quantifies', 'quantifi'), ('degree', 'degre'), ('membership', 'membership'), ('element', 'element'), ('X', 'x'), ('fuzzy', 'fuzzi'), ('set', 'set'), ('A', 'a'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('quantifies', 'quantifi'), ('degree', 'degre'), ('membership', 'membership'), ('element', 'element'), ('X', 'x'), ('fuzzy', 'fuzzi'), ('set', 'set'), ('A', 'a'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('quantifies', 'quantifies'), ('degree', 'degree'), ('membership', 'membership'), ('element', 'element'), ('X', 'X'), ('fuzzy', 'fuzzy'), ('set', 'set'), ('A', 'A'), ('.', '.')]



============================ Sentence 7 =============================

· x axis represents the universe of discourse. 


>> Tokens are: 
 ['·', 'x', 'axis', 'represents', 'universe', 'discourse', '.']

>> Bigrams are: 
 [('·', 'x'), ('x', 'axis'), ('axis', 'represents'), ('represents', 'universe'), ('universe', 'discourse'), ('discourse', '.')]

>> Trigrams are: 
 [('·', 'x', 'axis'), ('x', 'axis', 'represents'), ('axis', 'represents', 'universe'), ('represents', 'universe', 'discourse'), ('universe', 'discourse', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('x', 'NNP'), ('axis', 'NN'), ('represents', 'VBZ'), ('universe', 'JJ'), ('discourse', 'NN'), ('.', '.')]

 (S
  (NP ·/JJ x/NNP axis/NN)
  represents/VBZ
  (NP universe/JJ discourse/NN)
  ./.) 


>> Noun Phrases are: 
 ['· x axis', 'universe discourse']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('x', 'x'), ('axis', 'axi'), ('represents', 'repres'), ('universe', 'univers'), ('discourse', 'discours'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('x', 'x'), ('axis', 'axi'), ('represents', 'repres'), ('universe', 'univers'), ('discourse', 'discours'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('x', 'x'), ('axis', 'axis'), ('represents', 'represents'), ('universe', 'universe'), ('discourse', 'discourse'), ('.', '.')]



============================ Sentence 8 =============================

· y axis represents the degrees of membership in the [0, 1] interval. 


>> Tokens are: 
 ['·', 'axis', 'represents', 'degrees', 'membership', '[', '0', ',', '1', ']', 'interval', '.']

>> Bigrams are: 
 [('·', 'axis'), ('axis', 'represents'), ('represents', 'degrees'), ('degrees', 'membership'), ('membership', '['), ('[', '0'), ('0', ','), (',', '1'), ('1', ']'), (']', 'interval'), ('interval', '.')]

>> Trigrams are: 
 [('·', 'axis', 'represents'), ('axis', 'represents', 'degrees'), ('represents', 'degrees', 'membership'), ('degrees', 'membership', '['), ('membership', '[', '0'), ('[', '0', ','), ('0', ',', '1'), (',', '1', ']'), ('1', ']', 'interval'), (']', 'interval', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('axis', 'NN'), ('represents', 'VBZ'), ('degrees', 'NNS'), ('membership', 'NN'), ('[', 'VBZ'), ('0', 'CD'), (',', ','), ('1', 'CD'), (']', 'NN'), ('interval', 'NN'), ('.', '.')]

 (S
  (NP ·/JJ axis/NN)
  represents/VBZ
  (NP degrees/NNS membership/NN)
  [/VBZ
  0/CD
  ,/,
  1/CD
  (NP ]/NN interval/NN)
  ./.) 


>> Noun Phrases are: 
 ['· axis', 'degrees membership', '] interval']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('axis', 'axi'), ('represents', 'repres'), ('degrees', 'degre'), ('membership', 'membership'), ('[', '['), ('0', '0'), (',', ','), ('1', '1'), (']', ']'), ('interval', 'interv'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('axis', 'axi'), ('represents', 'repres'), ('degrees', 'degre'), ('membership', 'membership'), ('[', '['), ('0', '0'), (',', ','), ('1', '1'), (']', ']'), ('interval', 'interv'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('axis', 'axis'), ('represents', 'represents'), ('degrees', 'degree'), ('membership', 'membership'), ('[', '['), ('0', '0'), (',', ','), ('1', '1'), (']', ']'), ('interval', 'interval'), ('.', '.')]



============================ Sentence 9 =============================

There can be multiple membership functions applicable to fuzzify a numerical value. 


>> Tokens are: 
 ['There', 'multiple', 'membership', 'functions', 'applicable', 'fuzzify', 'numerical', 'value', '.']

>> Bigrams are: 
 [('There', 'multiple'), ('multiple', 'membership'), ('membership', 'functions'), ('functions', 'applicable'), ('applicable', 'fuzzify'), ('fuzzify', 'numerical'), ('numerical', 'value'), ('value', '.')]

>> Trigrams are: 
 [('There', 'multiple', 'membership'), ('multiple', 'membership', 'functions'), ('membership', 'functions', 'applicable'), ('functions', 'applicable', 'fuzzify'), ('applicable', 'fuzzify', 'numerical'), ('fuzzify', 'numerical', 'value'), ('numerical', 'value', '.')]

>> POS Tags are: 
 [('There', 'EX'), ('multiple', 'JJ'), ('membership', 'NN'), ('functions', 'NNS'), ('applicable', 'JJ'), ('fuzzify', 'JJ'), ('numerical', 'JJ'), ('value', 'NN'), ('.', '.')]

 (S
  There/EX
  (NP multiple/JJ membership/NN functions/NNS)
  (NP applicable/JJ fuzzify/JJ numerical/JJ value/NN)
  ./.) 


>> Noun Phrases are: 
 ['multiple membership functions', 'applicable fuzzify numerical value']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('There', 'there'), ('multiple', 'multipl'), ('membership', 'membership'), ('functions', 'function'), ('applicable', 'applic'), ('fuzzify', 'fuzzifi'), ('numerical', 'numer'), ('value', 'valu'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('There', 'there'), ('multiple', 'multipl'), ('membership', 'membership'), ('functions', 'function'), ('applicable', 'applic'), ('fuzzify', 'fuzzifi'), ('numerical', 'numer'), ('value', 'valu'), ('.', '.')]

>> Lemmatization: 
 [('There', 'There'), ('multiple', 'multiple'), ('membership', 'membership'), ('functions', 'function'), ('applicable', 'applicable'), ('fuzzify', 'fuzzify'), ('numerical', 'numerical'), ('value', 'value'), ('.', '.')]



============================ Sentence 10 =============================

Simple membership functions are used as use of complex functions does not add more precision in the output. 


>> Tokens are: 
 ['Simple', 'membership', 'functions', 'used', 'use', 'complex', 'functions', 'add', 'precision', 'output', '.']

>> Bigrams are: 
 [('Simple', 'membership'), ('membership', 'functions'), ('functions', 'used'), ('used', 'use'), ('use', 'complex'), ('complex', 'functions'), ('functions', 'add'), ('add', 'precision'), ('precision', 'output'), ('output', '.')]

>> Trigrams are: 
 [('Simple', 'membership', 'functions'), ('membership', 'functions', 'used'), ('functions', 'used', 'use'), ('used', 'use', 'complex'), ('use', 'complex', 'functions'), ('complex', 'functions', 'add'), ('functions', 'add', 'precision'), ('add', 'precision', 'output'), ('precision', 'output', '.')]

>> POS Tags are: 
 [('Simple', 'JJ'), ('membership', 'NN'), ('functions', 'NNS'), ('used', 'VBN'), ('use', 'NN'), ('complex', 'JJ'), ('functions', 'NNS'), ('add', 'VBP'), ('precision', 'NN'), ('output', 'NN'), ('.', '.')]

 (S
  (NP Simple/JJ membership/NN functions/NNS)
  used/VBN
  (NP use/NN)
  (NP complex/JJ functions/NNS)
  add/VBP
  (NP precision/NN output/NN)
  ./.) 


>> Noun Phrases are: 
 ['Simple membership functions', 'use', 'complex functions', 'precision output']

>> Named Entities are: 
 [('GPE', 'Simple')] 

>> Stemming using Porter Stemmer: 
 [('Simple', 'simpl'), ('membership', 'membership'), ('functions', 'function'), ('used', 'use'), ('use', 'use'), ('complex', 'complex'), ('functions', 'function'), ('add', 'add'), ('precision', 'precis'), ('output', 'output'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Simple', 'simpl'), ('membership', 'membership'), ('functions', 'function'), ('used', 'use'), ('use', 'use'), ('complex', 'complex'), ('functions', 'function'), ('add', 'add'), ('precision', 'precis'), ('output', 'output'), ('.', '.')]

>> Lemmatization: 
 [('Simple', 'Simple'), ('membership', 'membership'), ('functions', 'function'), ('used', 'used'), ('use', 'use'), ('complex', 'complex'), ('functions', 'function'), ('add', 'add'), ('precision', 'precision'), ('output', 'output'), ('.', '.')]



============================ Sentence 11 =============================

All membership functions for LP, MP, S, MN, and LN are shown as below −  The triangular membership function shapes are most common among various other membership function shapes such as trapezoidal, singleton, and Gaussian. 


>> Tokens are: 
 ['All', 'membership', 'functions', 'LP', ',', 'MP', ',', 'S', ',', 'MN', ',', 'LN', 'shown', '−', 'The', 'triangular', 'membership', 'function', 'shapes', 'common', 'among', 'various', 'membership', 'function', 'shapes', 'trapezoidal', ',', 'singleton', ',', 'Gaussian', '.']

>> Bigrams are: 
 [('All', 'membership'), ('membership', 'functions'), ('functions', 'LP'), ('LP', ','), (',', 'MP'), ('MP', ','), (',', 'S'), ('S', ','), (',', 'MN'), ('MN', ','), (',', 'LN'), ('LN', 'shown'), ('shown', '−'), ('−', 'The'), ('The', 'triangular'), ('triangular', 'membership'), ('membership', 'function'), ('function', 'shapes'), ('shapes', 'common'), ('common', 'among'), ('among', 'various'), ('various', 'membership'), ('membership', 'function'), ('function', 'shapes'), ('shapes', 'trapezoidal'), ('trapezoidal', ','), (',', 'singleton'), ('singleton', ','), (',', 'Gaussian'), ('Gaussian', '.')]

>> Trigrams are: 
 [('All', 'membership', 'functions'), ('membership', 'functions', 'LP'), ('functions', 'LP', ','), ('LP', ',', 'MP'), (',', 'MP', ','), ('MP', ',', 'S'), (',', 'S', ','), ('S', ',', 'MN'), (',', 'MN', ','), ('MN', ',', 'LN'), (',', 'LN', 'shown'), ('LN', 'shown', '−'), ('shown', '−', 'The'), ('−', 'The', 'triangular'), ('The', 'triangular', 'membership'), ('triangular', 'membership', 'function'), ('membership', 'function', 'shapes'), ('function', 'shapes', 'common'), ('shapes', 'common', 'among'), ('common', 'among', 'various'), ('among', 'various', 'membership'), ('various', 'membership', 'function'), ('membership', 'function', 'shapes'), ('function', 'shapes', 'trapezoidal'), ('shapes', 'trapezoidal', ','), ('trapezoidal', ',', 'singleton'), (',', 'singleton', ','), ('singleton', ',', 'Gaussian'), (',', 'Gaussian', '.')]

>> POS Tags are: 
 [('All', 'DT'), ('membership', 'NN'), ('functions', 'NNS'), ('LP', 'NNP'), (',', ','), ('MP', 'NNP'), (',', ','), ('S', 'NNP'), (',', ','), ('MN', 'NNP'), (',', ','), ('LN', 'NNP'), ('shown', 'VBN'), ('−', 'VBP'), ('The', 'DT'), ('triangular', 'JJ'), ('membership', 'NN'), ('function', 'NN'), ('shapes', 'NNS'), ('common', 'JJ'), ('among', 'IN'), ('various', 'JJ'), ('membership', 'NN'), ('function', 'NN'), ('shapes', 'NNS'), ('trapezoidal', 'VBP'), (',', ','), ('singleton', 'NN'), (',', ','), ('Gaussian', 'NNP'), ('.', '.')]

 (S
  (NP All/DT membership/NN functions/NNS LP/NNP)
  ,/,
  (NP MP/NNP)
  ,/,
  (NP S/NNP)
  ,/,
  (NP MN/NNP)
  ,/,
  (NP LN/NNP)
  shown/VBN
  −/VBP
  (NP The/DT triangular/JJ membership/NN function/NN shapes/NNS)
  common/JJ
  among/IN
  (NP various/JJ membership/NN function/NN shapes/NNS)
  trapezoidal/VBP
  ,/,
  (NP singleton/NN)
  ,/,
  (NP Gaussian/NNP)
  ./.) 


>> Noun Phrases are: 
 ['All membership functions LP', 'MP', 'S', 'MN', 'LN', 'The triangular membership function shapes', 'various membership function shapes', 'singleton', 'Gaussian']

>> Named Entities are: 
 [('ORGANIZATION', 'MP'), ('GPE', 'S'), ('ORGANIZATION', 'MN'), ('ORGANIZATION', 'LN'), ('GPE', 'Gaussian')] 

>> Stemming using Porter Stemmer: 
 [('All', 'all'), ('membership', 'membership'), ('functions', 'function'), ('LP', 'lp'), (',', ','), ('MP', 'mp'), (',', ','), ('S', 's'), (',', ','), ('MN', 'mn'), (',', ','), ('LN', 'ln'), ('shown', 'shown'), ('−', '−'), ('The', 'the'), ('triangular', 'triangular'), ('membership', 'membership'), ('function', 'function'), ('shapes', 'shape'), ('common', 'common'), ('among', 'among'), ('various', 'variou'), ('membership', 'membership'), ('function', 'function'), ('shapes', 'shape'), ('trapezoidal', 'trapezoid'), (',', ','), ('singleton', 'singleton'), (',', ','), ('Gaussian', 'gaussian'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('All', 'all'), ('membership', 'membership'), ('functions', 'function'), ('LP', 'lp'), (',', ','), ('MP', 'mp'), (',', ','), ('S', 's'), (',', ','), ('MN', 'mn'), (',', ','), ('LN', 'ln'), ('shown', 'shown'), ('−', '−'), ('The', 'the'), ('triangular', 'triangular'), ('membership', 'membership'), ('function', 'function'), ('shapes', 'shape'), ('common', 'common'), ('among', 'among'), ('various', 'various'), ('membership', 'membership'), ('function', 'function'), ('shapes', 'shape'), ('trapezoidal', 'trapezoid'), (',', ','), ('singleton', 'singleton'), (',', ','), ('Gaussian', 'gaussian'), ('.', '.')]

>> Lemmatization: 
 [('All', 'All'), ('membership', 'membership'), ('functions', 'function'), ('LP', 'LP'), (',', ','), ('MP', 'MP'), (',', ','), ('S', 'S'), (',', ','), ('MN', 'MN'), (',', ','), ('LN', 'LN'), ('shown', 'shown'), ('−', '−'), ('The', 'The'), ('triangular', 'triangular'), ('membership', 'membership'), ('function', 'function'), ('shapes', 'shape'), ('common', 'common'), ('among', 'among'), ('various', 'various'), ('membership', 'membership'), ('function', 'function'), ('shapes', 'shape'), ('trapezoidal', 'trapezoidal'), (',', ','), ('singleton', 'singleton'), (',', ','), ('Gaussian', 'Gaussian'), ('.', '.')]



============================ Sentence 12 =============================

Here, the input to 5-level fuzzifier varies from -10 volts to +10 volts. 


>> Tokens are: 
 ['Here', ',', 'input', '5-level', 'fuzzifier', 'varies', '-10', 'volts', '+10', 'volts', '.']

>> Bigrams are: 
 [('Here', ','), (',', 'input'), ('input', '5-level'), ('5-level', 'fuzzifier'), ('fuzzifier', 'varies'), ('varies', '-10'), ('-10', 'volts'), ('volts', '+10'), ('+10', 'volts'), ('volts', '.')]

>> Trigrams are: 
 [('Here', ',', 'input'), (',', 'input', '5-level'), ('input', '5-level', 'fuzzifier'), ('5-level', 'fuzzifier', 'varies'), ('fuzzifier', 'varies', '-10'), ('varies', '-10', 'volts'), ('-10', 'volts', '+10'), ('volts', '+10', 'volts'), ('+10', 'volts', '.')]

>> POS Tags are: 
 [('Here', 'RB'), (',', ','), ('input', 'VB'), ('5-level', 'JJ'), ('fuzzifier', 'NN'), ('varies', 'NNS'), ('-10', 'VBP'), ('volts', 'NNS'), ('+10', 'JJ'), ('volts', 'NNS'), ('.', '.')]

 (S
  Here/RB
  ,/,
  input/VB
  (NP 5-level/JJ fuzzifier/NN varies/NNS)
  -10/VBP
  (NP volts/NNS)
  (NP +10/JJ volts/NNS)
  ./.) 


>> Noun Phrases are: 
 ['5-level fuzzifier varies', 'volts', '+10 volts']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Here', 'here'), (',', ','), ('input', 'input'), ('5-level', '5-level'), ('fuzzifier', 'fuzzifi'), ('varies', 'vari'), ('-10', '-10'), ('volts', 'volt'), ('+10', '+10'), ('volts', 'volt'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Here', 'here'), (',', ','), ('input', 'input'), ('5-level', '5-level'), ('fuzzifier', 'fuzzifi'), ('varies', 'vari'), ('-10', '-10'), ('volts', 'volt'), ('+10', '+10'), ('volts', 'volt'), ('.', '.')]

>> Lemmatization: 
 [('Here', 'Here'), (',', ','), ('input', 'input'), ('5-level', '5-level'), ('fuzzifier', 'fuzzifier'), ('varies', 'varies'), ('-10', '-10'), ('volts', 'volt'), ('+10', '+10'), ('volts', 'volt'), ('.', '.')]



============================ Sentence 13 =============================

Hence the corresponding output also changes. 


>> Tokens are: 
 ['Hence', 'corresponding', 'output', 'also', 'changes', '.']

>> Bigrams are: 
 [('Hence', 'corresponding'), ('corresponding', 'output'), ('output', 'also'), ('also', 'changes'), ('changes', '.')]

>> Trigrams are: 
 [('Hence', 'corresponding', 'output'), ('corresponding', 'output', 'also'), ('output', 'also', 'changes'), ('also', 'changes', '.')]

>> POS Tags are: 
 [('Hence', 'NNP'), ('corresponding', 'VBG'), ('output', 'NN'), ('also', 'RB'), ('changes', 'NNS'), ('.', '.')]

 (S
  (NP Hence/NNP)
  corresponding/VBG
  (NP output/NN)
  also/RB
  (NP changes/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Hence', 'output', 'changes']

>> Named Entities are: 
 [('GPE', 'Hence')] 

>> Stemming using Porter Stemmer: 
 [('Hence', 'henc'), ('corresponding', 'correspond'), ('output', 'output'), ('also', 'also'), ('changes', 'chang'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Hence', 'henc'), ('corresponding', 'correspond'), ('output', 'output'), ('also', 'also'), ('changes', 'chang'), ('.', '.')]

>> Lemmatization: 
 [('Hence', 'Hence'), ('corresponding', 'corresponding'), ('output', 'output'), ('also', 'also'), ('changes', 'change'), ('.', '.')]



============================ Sentence 14 =============================

Example of a Fuzzy Logic System Let us consider an air conditioning system with 5-level fuzzy logic system. 


>> Tokens are: 
 ['Example', 'Fuzzy', 'Logic', 'System', 'Let', 'us', 'consider', 'air', 'conditioning', 'system', '5-level', 'fuzzy', 'logic', 'system', '.']

>> Bigrams are: 
 [('Example', 'Fuzzy'), ('Fuzzy', 'Logic'), ('Logic', 'System'), ('System', 'Let'), ('Let', 'us'), ('us', 'consider'), ('consider', 'air'), ('air', 'conditioning'), ('conditioning', 'system'), ('system', '5-level'), ('5-level', 'fuzzy'), ('fuzzy', 'logic'), ('logic', 'system'), ('system', '.')]

>> Trigrams are: 
 [('Example', 'Fuzzy', 'Logic'), ('Fuzzy', 'Logic', 'System'), ('Logic', 'System', 'Let'), ('System', 'Let', 'us'), ('Let', 'us', 'consider'), ('us', 'consider', 'air'), ('consider', 'air', 'conditioning'), ('air', 'conditioning', 'system'), ('conditioning', 'system', '5-level'), ('system', '5-level', 'fuzzy'), ('5-level', 'fuzzy', 'logic'), ('fuzzy', 'logic', 'system'), ('logic', 'system', '.')]

>> POS Tags are: 
 [('Example', 'NNP'), ('Fuzzy', 'NNP'), ('Logic', 'NNP'), ('System', 'NNP'), ('Let', 'NNP'), ('us', 'PRP'), ('consider', 'VB'), ('air', 'NN'), ('conditioning', 'VBG'), ('system', 'NN'), ('5-level', 'JJ'), ('fuzzy', 'NN'), ('logic', 'NN'), ('system', 'NN'), ('.', '.')]

 (S
  (NP Example/NNP Fuzzy/NNP Logic/NNP System/NNP Let/NNP)
  us/PRP
  consider/VB
  (NP air/NN)
  conditioning/VBG
  (NP system/NN)
  (NP 5-level/JJ fuzzy/NN logic/NN system/NN)
  ./.) 


>> Noun Phrases are: 
 ['Example Fuzzy Logic System Let', 'air', 'system', '5-level fuzzy logic system']

>> Named Entities are: 
 [('PERSON', 'Example'), ('PERSON', 'Fuzzy Logic System')] 

>> Stemming using Porter Stemmer: 
 [('Example', 'exampl'), ('Fuzzy', 'fuzzi'), ('Logic', 'logic'), ('System', 'system'), ('Let', 'let'), ('us', 'us'), ('consider', 'consid'), ('air', 'air'), ('conditioning', 'condit'), ('system', 'system'), ('5-level', '5-level'), ('fuzzy', 'fuzzi'), ('logic', 'logic'), ('system', 'system'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Example', 'exampl'), ('Fuzzy', 'fuzzi'), ('Logic', 'logic'), ('System', 'system'), ('Let', 'let'), ('us', 'us'), ('consider', 'consid'), ('air', 'air'), ('conditioning', 'condit'), ('system', 'system'), ('5-level', '5-level'), ('fuzzy', 'fuzzi'), ('logic', 'logic'), ('system', 'system'), ('.', '.')]

>> Lemmatization: 
 [('Example', 'Example'), ('Fuzzy', 'Fuzzy'), ('Logic', 'Logic'), ('System', 'System'), ('Let', 'Let'), ('us', 'u'), ('consider', 'consider'), ('air', 'air'), ('conditioning', 'conditioning'), ('system', 'system'), ('5-level', '5-level'), ('fuzzy', 'fuzzy'), ('logic', 'logic'), ('system', 'system'), ('.', '.')]



============================ Sentence 15 =============================

This system adjusts the temperature of air conditioner by comparing the room temperature and the target temperature value. 


>> Tokens are: 
 ['This', 'system', 'adjusts', 'temperature', 'air', 'conditioner', 'comparing', 'room', 'temperature', 'target', 'temperature', 'value', '.']

>> Bigrams are: 
 [('This', 'system'), ('system', 'adjusts'), ('adjusts', 'temperature'), ('temperature', 'air'), ('air', 'conditioner'), ('conditioner', 'comparing'), ('comparing', 'room'), ('room', 'temperature'), ('temperature', 'target'), ('target', 'temperature'), ('temperature', 'value'), ('value', '.')]

>> Trigrams are: 
 [('This', 'system', 'adjusts'), ('system', 'adjusts', 'temperature'), ('adjusts', 'temperature', 'air'), ('temperature', 'air', 'conditioner'), ('air', 'conditioner', 'comparing'), ('conditioner', 'comparing', 'room'), ('comparing', 'room', 'temperature'), ('room', 'temperature', 'target'), ('temperature', 'target', 'temperature'), ('target', 'temperature', 'value'), ('temperature', 'value', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('system', 'NN'), ('adjusts', 'VBZ'), ('temperature', 'RB'), ('air', 'NN'), ('conditioner', 'NN'), ('comparing', 'VBG'), ('room', 'NN'), ('temperature', 'NN'), ('target', 'NN'), ('temperature', 'NN'), ('value', 'NN'), ('.', '.')]

 (S
  (NP This/DT system/NN)
  adjusts/VBZ
  temperature/RB
  (NP air/NN conditioner/NN)
  comparing/VBG
  (NP room/NN temperature/NN target/NN temperature/NN value/NN)
  ./.) 


>> Noun Phrases are: 
 ['This system', 'air conditioner', 'room temperature target temperature value']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('system', 'system'), ('adjusts', 'adjust'), ('temperature', 'temperatur'), ('air', 'air'), ('conditioner', 'condition'), ('comparing', 'compar'), ('room', 'room'), ('temperature', 'temperatur'), ('target', 'target'), ('temperature', 'temperatur'), ('value', 'valu'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('system', 'system'), ('adjusts', 'adjust'), ('temperature', 'temperatur'), ('air', 'air'), ('conditioner', 'condition'), ('comparing', 'compar'), ('room', 'room'), ('temperature', 'temperatur'), ('target', 'target'), ('temperature', 'temperatur'), ('value', 'valu'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('system', 'system'), ('adjusts', 'adjusts'), ('temperature', 'temperature'), ('air', 'air'), ('conditioner', 'conditioner'), ('comparing', 'comparing'), ('room', 'room'), ('temperature', 'temperature'), ('target', 'target'), ('temperature', 'temperature'), ('value', 'value'), ('.', '.')]



============================ Sentence 16 =============================

Algorithm · Define linguistic Variables and terms (start) · Construct membership functions for them. 


>> Tokens are: 
 ['Algorithm', '·', 'Define', 'linguistic', 'Variables', 'terms', '(', 'start', ')', '·', 'Construct', 'membership', 'functions', '.']

>> Bigrams are: 
 [('Algorithm', '·'), ('·', 'Define'), ('Define', 'linguistic'), ('linguistic', 'Variables'), ('Variables', 'terms'), ('terms', '('), ('(', 'start'), ('start', ')'), (')', '·'), ('·', 'Construct'), ('Construct', 'membership'), ('membership', 'functions'), ('functions', '.')]

>> Trigrams are: 
 [('Algorithm', '·', 'Define'), ('·', 'Define', 'linguistic'), ('Define', 'linguistic', 'Variables'), ('linguistic', 'Variables', 'terms'), ('Variables', 'terms', '('), ('terms', '(', 'start'), ('(', 'start', ')'), ('start', ')', '·'), (')', '·', 'Construct'), ('·', 'Construct', 'membership'), ('Construct', 'membership', 'functions'), ('membership', 'functions', '.')]

>> POS Tags are: 
 [('Algorithm', 'NNP'), ('·', 'NNP'), ('Define', 'NNP'), ('linguistic', 'JJ'), ('Variables', 'NNS'), ('terms', 'NNS'), ('(', '('), ('start', 'NN'), (')', ')'), ('·', 'FW'), ('Construct', 'NNP'), ('membership', 'NN'), ('functions', 'NNS'), ('.', '.')]

 (S
  (NP Algorithm/NNP ·/NNP Define/NNP)
  (NP linguistic/JJ Variables/NNS terms/NNS)
  (/(
  (NP start/NN)
  )/)
  ·/FW
  (NP Construct/NNP membership/NN functions/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Algorithm · Define', 'linguistic Variables terms', 'start', 'Construct membership functions']

>> Named Entities are: 
 [('PERSON', 'Algorithm')] 

>> Stemming using Porter Stemmer: 
 [('Algorithm', 'algorithm'), ('·', '·'), ('Define', 'defin'), ('linguistic', 'linguist'), ('Variables', 'variabl'), ('terms', 'term'), ('(', '('), ('start', 'start'), (')', ')'), ('·', '·'), ('Construct', 'construct'), ('membership', 'membership'), ('functions', 'function'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Algorithm', 'algorithm'), ('·', '·'), ('Define', 'defin'), ('linguistic', 'linguist'), ('Variables', 'variabl'), ('terms', 'term'), ('(', '('), ('start', 'start'), (')', ')'), ('·', '·'), ('Construct', 'construct'), ('membership', 'membership'), ('functions', 'function'), ('.', '.')]

>> Lemmatization: 
 [('Algorithm', 'Algorithm'), ('·', '·'), ('Define', 'Define'), ('linguistic', 'linguistic'), ('Variables', 'Variables'), ('terms', 'term'), ('(', '('), ('start', 'start'), (')', ')'), ('·', '·'), ('Construct', 'Construct'), ('membership', 'membership'), ('functions', 'function'), ('.', '.')]



============================ Sentence 17 =============================

(start) · Construct knowledge base of rules (start) · Convert crisp data into fuzzy data sets using membership functions. 


>> Tokens are: 
 ['(', 'start', ')', '·', 'Construct', 'knowledge', 'base', 'rules', '(', 'start', ')', '·', 'Convert', 'crisp', 'data', 'fuzzy', 'data', 'sets', 'using', 'membership', 'functions', '.']

>> Bigrams are: 
 [('(', 'start'), ('start', ')'), (')', '·'), ('·', 'Construct'), ('Construct', 'knowledge'), ('knowledge', 'base'), ('base', 'rules'), ('rules', '('), ('(', 'start'), ('start', ')'), (')', '·'), ('·', 'Convert'), ('Convert', 'crisp'), ('crisp', 'data'), ('data', 'fuzzy'), ('fuzzy', 'data'), ('data', 'sets'), ('sets', 'using'), ('using', 'membership'), ('membership', 'functions'), ('functions', '.')]

>> Trigrams are: 
 [('(', 'start', ')'), ('start', ')', '·'), (')', '·', 'Construct'), ('·', 'Construct', 'knowledge'), ('Construct', 'knowledge', 'base'), ('knowledge', 'base', 'rules'), ('base', 'rules', '('), ('rules', '(', 'start'), ('(', 'start', ')'), ('start', ')', '·'), (')', '·', 'Convert'), ('·', 'Convert', 'crisp'), ('Convert', 'crisp', 'data'), ('crisp', 'data', 'fuzzy'), ('data', 'fuzzy', 'data'), ('fuzzy', 'data', 'sets'), ('data', 'sets', 'using'), ('sets', 'using', 'membership'), ('using', 'membership', 'functions'), ('membership', 'functions', '.')]

>> POS Tags are: 
 [('(', '('), ('start', 'NN'), (')', ')'), ('·', 'FW'), ('Construct', 'NNP'), ('knowledge', 'NN'), ('base', 'NN'), ('rules', 'NNS'), ('(', '('), ('start', 'NN'), (')', ')'), ('·', 'NN'), ('Convert', 'NNP'), ('crisp', 'NN'), ('data', 'NNS'), ('fuzzy', 'RB'), ('data', 'NNS'), ('sets', 'NNS'), ('using', 'VBG'), ('membership', 'NN'), ('functions', 'NNS'), ('.', '.')]

 (S
  (/(
  (NP start/NN)
  )/)
  ·/FW
  (NP Construct/NNP knowledge/NN base/NN rules/NNS)
  (/(
  (NP start/NN)
  )/)
  (NP ·/NN Convert/NNP crisp/NN data/NNS)
  fuzzy/RB
  (NP data/NNS sets/NNS)
  using/VBG
  (NP membership/NN functions/NNS)
  ./.) 


>> Noun Phrases are: 
 ['start', 'Construct knowledge base rules', 'start', '· Convert crisp data', 'data sets', 'membership functions']

>> Named Entities are: 
 [('PERSON', 'Convert')] 

>> Stemming using Porter Stemmer: 
 [('(', '('), ('start', 'start'), (')', ')'), ('·', '·'), ('Construct', 'construct'), ('knowledge', 'knowledg'), ('base', 'base'), ('rules', 'rule'), ('(', '('), ('start', 'start'), (')', ')'), ('·', '·'), ('Convert', 'convert'), ('crisp', 'crisp'), ('data', 'data'), ('fuzzy', 'fuzzi'), ('data', 'data'), ('sets', 'set'), ('using', 'use'), ('membership', 'membership'), ('functions', 'function'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('(', '('), ('start', 'start'), (')', ')'), ('·', '·'), ('Construct', 'construct'), ('knowledge', 'knowledg'), ('base', 'base'), ('rules', 'rule'), ('(', '('), ('start', 'start'), (')', ')'), ('·', '·'), ('Convert', 'convert'), ('crisp', 'crisp'), ('data', 'data'), ('fuzzy', 'fuzzi'), ('data', 'data'), ('sets', 'set'), ('using', 'use'), ('membership', 'membership'), ('functions', 'function'), ('.', '.')]

>> Lemmatization: 
 [('(', '('), ('start', 'start'), (')', ')'), ('·', '·'), ('Construct', 'Construct'), ('knowledge', 'knowledge'), ('base', 'base'), ('rules', 'rule'), ('(', '('), ('start', 'start'), (')', ')'), ('·', '·'), ('Convert', 'Convert'), ('crisp', 'crisp'), ('data', 'data'), ('fuzzy', 'fuzzy'), ('data', 'data'), ('sets', 'set'), ('using', 'using'), ('membership', 'membership'), ('functions', 'function'), ('.', '.')]



============================ Sentence 18 =============================

(fuzzification) · Evaluate rules in the rule base. 


>> Tokens are: 
 ['(', 'fuzzification', ')', '·', 'Evaluate', 'rules', 'rule', 'base', '.']

>> Bigrams are: 
 [('(', 'fuzzification'), ('fuzzification', ')'), (')', '·'), ('·', 'Evaluate'), ('Evaluate', 'rules'), ('rules', 'rule'), ('rule', 'base'), ('base', '.')]

>> Trigrams are: 
 [('(', 'fuzzification', ')'), ('fuzzification', ')', '·'), (')', '·', 'Evaluate'), ('·', 'Evaluate', 'rules'), ('Evaluate', 'rules', 'rule'), ('rules', 'rule', 'base'), ('rule', 'base', '.')]

>> POS Tags are: 
 [('(', '('), ('fuzzification', 'NN'), (')', ')'), ('·', 'NN'), ('Evaluate', 'NNP'), ('rules', 'NNS'), ('rule', 'VBP'), ('base', 'NN'), ('.', '.')]

 (S
  (/(
  (NP fuzzification/NN)
  )/)
  (NP ·/NN Evaluate/NNP rules/NNS)
  rule/VBP
  (NP base/NN)
  ./.) 


>> Noun Phrases are: 
 ['fuzzification', '· Evaluate rules', 'base']

>> Named Entities are: 
 [('ORGANIZATION', 'Evaluate')] 

>> Stemming using Porter Stemmer: 
 [('(', '('), ('fuzzification', 'fuzzif'), (')', ')'), ('·', '·'), ('Evaluate', 'evalu'), ('rules', 'rule'), ('rule', 'rule'), ('base', 'base'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('(', '('), ('fuzzification', 'fuzzif'), (')', ')'), ('·', '·'), ('Evaluate', 'evalu'), ('rules', 'rule'), ('rule', 'rule'), ('base', 'base'), ('.', '.')]

>> Lemmatization: 
 [('(', '('), ('fuzzification', 'fuzzification'), (')', ')'), ('·', '·'), ('Evaluate', 'Evaluate'), ('rules', 'rule'), ('rule', 'rule'), ('base', 'base'), ('.', '.')]



============================ Sentence 19 =============================

(Inference Engine) · Combine results from each rule. 


>> Tokens are: 
 ['(', 'Inference', 'Engine', ')', '·', 'Combine', 'results', 'rule', '.']

>> Bigrams are: 
 [('(', 'Inference'), ('Inference', 'Engine'), ('Engine', ')'), (')', '·'), ('·', 'Combine'), ('Combine', 'results'), ('results', 'rule'), ('rule', '.')]

>> Trigrams are: 
 [('(', 'Inference', 'Engine'), ('Inference', 'Engine', ')'), ('Engine', ')', '·'), (')', '·', 'Combine'), ('·', 'Combine', 'results'), ('Combine', 'results', 'rule'), ('results', 'rule', '.')]

>> POS Tags are: 
 [('(', '('), ('Inference', 'NNP'), ('Engine', 'NNP'), (')', ')'), ('·', 'VBP'), ('Combine', 'NNP'), ('results', 'NNS'), ('rule', 'NN'), ('.', '.')]

 (S
  (/(
  (NP Inference/NNP Engine/NNP)
  )/)
  ·/VBP
  (NP Combine/NNP results/NNS rule/NN)
  ./.) 


>> Noun Phrases are: 
 ['Inference Engine', 'Combine results rule']

>> Named Entities are: 
 [('ORGANIZATION', 'Inference Engine'), ('ORGANIZATION', 'Combine')] 

>> Stemming using Porter Stemmer: 
 [('(', '('), ('Inference', 'infer'), ('Engine', 'engin'), (')', ')'), ('·', '·'), ('Combine', 'combin'), ('results', 'result'), ('rule', 'rule'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('(', '('), ('Inference', 'infer'), ('Engine', 'engin'), (')', ')'), ('·', '·'), ('Combine', 'combin'), ('results', 'result'), ('rule', 'rule'), ('.', '.')]

>> Lemmatization: 
 [('(', '('), ('Inference', 'Inference'), ('Engine', 'Engine'), (')', ')'), ('·', '·'), ('Combine', 'Combine'), ('results', 'result'), ('rule', 'rule'), ('.', '.')]



============================ Sentence 20 =============================

(Inference Engine) · Convert output data into non-fuzzy values. 


>> Tokens are: 
 ['(', 'Inference', 'Engine', ')', '·', 'Convert', 'output', 'data', 'non-fuzzy', 'values', '.']

>> Bigrams are: 
 [('(', 'Inference'), ('Inference', 'Engine'), ('Engine', ')'), (')', '·'), ('·', 'Convert'), ('Convert', 'output'), ('output', 'data'), ('data', 'non-fuzzy'), ('non-fuzzy', 'values'), ('values', '.')]

>> Trigrams are: 
 [('(', 'Inference', 'Engine'), ('Inference', 'Engine', ')'), ('Engine', ')', '·'), (')', '·', 'Convert'), ('·', 'Convert', 'output'), ('Convert', 'output', 'data'), ('output', 'data', 'non-fuzzy'), ('data', 'non-fuzzy', 'values'), ('non-fuzzy', 'values', '.')]

>> POS Tags are: 
 [('(', '('), ('Inference', 'NNP'), ('Engine', 'NNP'), (')', ')'), ('·', 'VBP'), ('Convert', 'NNP'), ('output', 'NN'), ('data', 'NNS'), ('non-fuzzy', 'JJ'), ('values', 'NNS'), ('.', '.')]

 (S
  (/(
  (NP Inference/NNP Engine/NNP)
  )/)
  ·/VBP
  (NP Convert/NNP output/NN data/NNS)
  (NP non-fuzzy/JJ values/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Inference Engine', 'Convert output data', 'non-fuzzy values']

>> Named Entities are: 
 [('ORGANIZATION', 'Inference Engine'), ('PERSON', 'Convert')] 

>> Stemming using Porter Stemmer: 
 [('(', '('), ('Inference', 'infer'), ('Engine', 'engin'), (')', ')'), ('·', '·'), ('Convert', 'convert'), ('output', 'output'), ('data', 'data'), ('non-fuzzy', 'non-fuzzi'), ('values', 'valu'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('(', '('), ('Inference', 'infer'), ('Engine', 'engin'), (')', ')'), ('·', '·'), ('Convert', 'convert'), ('output', 'output'), ('data', 'data'), ('non-fuzzy', 'non-fuzzi'), ('values', 'valu'), ('.', '.')]

>> Lemmatization: 
 [('(', '('), ('Inference', 'Inference'), ('Engine', 'Engine'), (')', ')'), ('·', '·'), ('Convert', 'Convert'), ('output', 'output'), ('data', 'data'), ('non-fuzzy', 'non-fuzzy'), ('values', 'value'), ('.', '.')]



============================ Sentence 21 =============================

(defuzzification) Development Step 1 − Define linguistic variables and terms Linguistic variables are input and output variables in the form of simple words or sentences. 


>> Tokens are: 
 ['(', 'defuzzification', ')', 'Development', 'Step', '1', '−', 'Define', 'linguistic', 'variables', 'terms', 'Linguistic', 'variables', 'input', 'output', 'variables', 'form', 'simple', 'words', 'sentences', '.']

>> Bigrams are: 
 [('(', 'defuzzification'), ('defuzzification', ')'), (')', 'Development'), ('Development', 'Step'), ('Step', '1'), ('1', '−'), ('−', 'Define'), ('Define', 'linguistic'), ('linguistic', 'variables'), ('variables', 'terms'), ('terms', 'Linguistic'), ('Linguistic', 'variables'), ('variables', 'input'), ('input', 'output'), ('output', 'variables'), ('variables', 'form'), ('form', 'simple'), ('simple', 'words'), ('words', 'sentences'), ('sentences', '.')]

>> Trigrams are: 
 [('(', 'defuzzification', ')'), ('defuzzification', ')', 'Development'), (')', 'Development', 'Step'), ('Development', 'Step', '1'), ('Step', '1', '−'), ('1', '−', 'Define'), ('−', 'Define', 'linguistic'), ('Define', 'linguistic', 'variables'), ('linguistic', 'variables', 'terms'), ('variables', 'terms', 'Linguistic'), ('terms', 'Linguistic', 'variables'), ('Linguistic', 'variables', 'input'), ('variables', 'input', 'output'), ('input', 'output', 'variables'), ('output', 'variables', 'form'), ('variables', 'form', 'simple'), ('form', 'simple', 'words'), ('simple', 'words', 'sentences'), ('words', 'sentences', '.')]

>> POS Tags are: 
 [('(', '('), ('defuzzification', 'NN'), (')', ')'), ('Development', 'NNP'), ('Step', 'NNP'), ('1', 'CD'), ('−', 'NNP'), ('Define', 'NNP'), ('linguistic', 'JJ'), ('variables', 'NNS'), ('terms', 'NNS'), ('Linguistic', 'JJ'), ('variables', 'NNS'), ('input', 'VBP'), ('output', 'NN'), ('variables', 'NNS'), ('form', 'VBP'), ('simple', 'JJ'), ('words', 'NNS'), ('sentences', 'NNS'), ('.', '.')]

 (S
  (/(
  (NP defuzzification/NN)
  )/)
  (NP Development/NNP Step/NNP)
  1/CD
  (NP −/NNP Define/NNP)
  (NP linguistic/JJ variables/NNS terms/NNS)
  (NP Linguistic/JJ variables/NNS)
  input/VBP
  (NP output/NN variables/NNS)
  form/VBP
  (NP simple/JJ words/NNS sentences/NNS)
  ./.) 


>> Noun Phrases are: 
 ['defuzzification', 'Development Step', '− Define', 'linguistic variables terms', 'Linguistic variables', 'output variables', 'simple words sentences']

>> Named Entities are: 
 [('ORGANIZATION', 'Linguistic')] 

>> Stemming using Porter Stemmer: 
 [('(', '('), ('defuzzification', 'defuzzif'), (')', ')'), ('Development', 'develop'), ('Step', 'step'), ('1', '1'), ('−', '−'), ('Define', 'defin'), ('linguistic', 'linguist'), ('variables', 'variabl'), ('terms', 'term'), ('Linguistic', 'linguist'), ('variables', 'variabl'), ('input', 'input'), ('output', 'output'), ('variables', 'variabl'), ('form', 'form'), ('simple', 'simpl'), ('words', 'word'), ('sentences', 'sentenc'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('(', '('), ('defuzzification', 'defuzzif'), (')', ')'), ('Development', 'develop'), ('Step', 'step'), ('1', '1'), ('−', '−'), ('Define', 'defin'), ('linguistic', 'linguist'), ('variables', 'variabl'), ('terms', 'term'), ('Linguistic', 'linguist'), ('variables', 'variabl'), ('input', 'input'), ('output', 'output'), ('variables', 'variabl'), ('form', 'form'), ('simple', 'simpl'), ('words', 'word'), ('sentences', 'sentenc'), ('.', '.')]

>> Lemmatization: 
 [('(', '('), ('defuzzification', 'defuzzification'), (')', ')'), ('Development', 'Development'), ('Step', 'Step'), ('1', '1'), ('−', '−'), ('Define', 'Define'), ('linguistic', 'linguistic'), ('variables', 'variable'), ('terms', 'term'), ('Linguistic', 'Linguistic'), ('variables', 'variable'), ('input', 'input'), ('output', 'output'), ('variables', 'variable'), ('form', 'form'), ('simple', 'simple'), ('words', 'word'), ('sentences', 'sentence'), ('.', '.')]



============================ Sentence 22 =============================

For room temperature, cold, warm, hot, etc., are linguistic terms. 


>> Tokens are: 
 ['For', 'room', 'temperature', ',', 'cold', ',', 'warm', ',', 'hot', ',', 'etc.', ',', 'linguistic', 'terms', '.']

>> Bigrams are: 
 [('For', 'room'), ('room', 'temperature'), ('temperature', ','), (',', 'cold'), ('cold', ','), (',', 'warm'), ('warm', ','), (',', 'hot'), ('hot', ','), (',', 'etc.'), ('etc.', ','), (',', 'linguistic'), ('linguistic', 'terms'), ('terms', '.')]

>> Trigrams are: 
 [('For', 'room', 'temperature'), ('room', 'temperature', ','), ('temperature', ',', 'cold'), (',', 'cold', ','), ('cold', ',', 'warm'), (',', 'warm', ','), ('warm', ',', 'hot'), (',', 'hot', ','), ('hot', ',', 'etc.'), (',', 'etc.', ','), ('etc.', ',', 'linguistic'), (',', 'linguistic', 'terms'), ('linguistic', 'terms', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('room', 'NN'), ('temperature', 'NN'), (',', ','), ('cold', 'NN'), (',', ','), ('warm', 'JJ'), (',', ','), ('hot', 'JJ'), (',', ','), ('etc.', 'FW'), (',', ','), ('linguistic', 'JJ'), ('terms', 'NNS'), ('.', '.')]

 (S
  For/IN
  (NP room/NN temperature/NN)
  ,/,
  (NP cold/NN)
  ,/,
  warm/JJ
  ,/,
  hot/JJ
  ,/,
  etc./FW
  ,/,
  (NP linguistic/JJ terms/NNS)
  ./.) 


>> Noun Phrases are: 
 ['room temperature', 'cold', 'linguistic terms']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('room', 'room'), ('temperature', 'temperatur'), (',', ','), ('cold', 'cold'), (',', ','), ('warm', 'warm'), (',', ','), ('hot', 'hot'), (',', ','), ('etc.', 'etc.'), (',', ','), ('linguistic', 'linguist'), ('terms', 'term'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('room', 'room'), ('temperature', 'temperatur'), (',', ','), ('cold', 'cold'), (',', ','), ('warm', 'warm'), (',', ','), ('hot', 'hot'), (',', ','), ('etc.', 'etc.'), (',', ','), ('linguistic', 'linguist'), ('terms', 'term'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('room', 'room'), ('temperature', 'temperature'), (',', ','), ('cold', 'cold'), (',', ','), ('warm', 'warm'), (',', ','), ('hot', 'hot'), (',', ','), ('etc.', 'etc.'), (',', ','), ('linguistic', 'linguistic'), ('terms', 'term'), ('.', '.')]



============================ Sentence 23 =============================

Temperature (t) = {very-cold, cold, warm, very-warm, hot} Every member of this set is a linguistic term and it can cover some portion of overall temperature values. 


>> Tokens are: 
 ['Temperature', '(', ')', '=', '{', 'very-cold', ',', 'cold', ',', 'warm', ',', 'very-warm', ',', 'hot', '}', 'Every', 'member', 'set', 'linguistic', 'term', 'cover', 'portion', 'overall', 'temperature', 'values', '.']

>> Bigrams are: 
 [('Temperature', '('), ('(', ')'), (')', '='), ('=', '{'), ('{', 'very-cold'), ('very-cold', ','), (',', 'cold'), ('cold', ','), (',', 'warm'), ('warm', ','), (',', 'very-warm'), ('very-warm', ','), (',', 'hot'), ('hot', '}'), ('}', 'Every'), ('Every', 'member'), ('member', 'set'), ('set', 'linguistic'), ('linguistic', 'term'), ('term', 'cover'), ('cover', 'portion'), ('portion', 'overall'), ('overall', 'temperature'), ('temperature', 'values'), ('values', '.')]

>> Trigrams are: 
 [('Temperature', '(', ')'), ('(', ')', '='), (')', '=', '{'), ('=', '{', 'very-cold'), ('{', 'very-cold', ','), ('very-cold', ',', 'cold'), (',', 'cold', ','), ('cold', ',', 'warm'), (',', 'warm', ','), ('warm', ',', 'very-warm'), (',', 'very-warm', ','), ('very-warm', ',', 'hot'), (',', 'hot', '}'), ('hot', '}', 'Every'), ('}', 'Every', 'member'), ('Every', 'member', 'set'), ('member', 'set', 'linguistic'), ('set', 'linguistic', 'term'), ('linguistic', 'term', 'cover'), ('term', 'cover', 'portion'), ('cover', 'portion', 'overall'), ('portion', 'overall', 'temperature'), ('overall', 'temperature', 'values'), ('temperature', 'values', '.')]

>> POS Tags are: 
 [('Temperature', 'NNP'), ('(', '('), (')', ')'), ('=', 'RB'), ('{', '('), ('very-cold', 'JJ'), (',', ','), ('cold', 'JJ'), (',', ','), ('warm', 'JJ'), (',', ','), ('very-warm', 'JJ'), (',', ','), ('hot', 'JJ'), ('}', ')'), ('Every', 'NNP'), ('member', 'NN'), ('set', 'VBN'), ('linguistic', 'JJ'), ('term', 'NN'), ('cover', 'NN'), ('portion', 'NN'), ('overall', 'JJ'), ('temperature', 'NN'), ('values', 'NNS'), ('.', '.')]

 (S
  (NP Temperature/NNP)
  (/(
  )/)
  =/RB
  {/(
  very-cold/JJ
  ,/,
  cold/JJ
  ,/,
  warm/JJ
  ,/,
  very-warm/JJ
  ,/,
  hot/JJ
  }/)
  (NP Every/NNP member/NN)
  set/VBN
  (NP linguistic/JJ term/NN cover/NN portion/NN)
  (NP overall/JJ temperature/NN values/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Temperature', 'Every member', 'linguistic term cover portion', 'overall temperature values']

>> Named Entities are: 
 [('GPE', 'Temperature')] 

>> Stemming using Porter Stemmer: 
 [('Temperature', 'temperatur'), ('(', '('), (')', ')'), ('=', '='), ('{', '{'), ('very-cold', 'very-cold'), (',', ','), ('cold', 'cold'), (',', ','), ('warm', 'warm'), (',', ','), ('very-warm', 'very-warm'), (',', ','), ('hot', 'hot'), ('}', '}'), ('Every', 'everi'), ('member', 'member'), ('set', 'set'), ('linguistic', 'linguist'), ('term', 'term'), ('cover', 'cover'), ('portion', 'portion'), ('overall', 'overal'), ('temperature', 'temperatur'), ('values', 'valu'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Temperature', 'temperatur'), ('(', '('), (')', ')'), ('=', '='), ('{', '{'), ('very-cold', 'very-cold'), (',', ','), ('cold', 'cold'), (',', ','), ('warm', 'warm'), (',', ','), ('very-warm', 'very-warm'), (',', ','), ('hot', 'hot'), ('}', '}'), ('Every', 'everi'), ('member', 'member'), ('set', 'set'), ('linguistic', 'linguist'), ('term', 'term'), ('cover', 'cover'), ('portion', 'portion'), ('overall', 'overal'), ('temperature', 'temperatur'), ('values', 'valu'), ('.', '.')]

>> Lemmatization: 
 [('Temperature', 'Temperature'), ('(', '('), (')', ')'), ('=', '='), ('{', '{'), ('very-cold', 'very-cold'), (',', ','), ('cold', 'cold'), (',', ','), ('warm', 'warm'), (',', ','), ('very-warm', 'very-warm'), (',', ','), ('hot', 'hot'), ('}', '}'), ('Every', 'Every'), ('member', 'member'), ('set', 'set'), ('linguistic', 'linguistic'), ('term', 'term'), ('cover', 'cover'), ('portion', 'portion'), ('overall', 'overall'), ('temperature', 'temperature'), ('values', 'value'), ('.', '.')]



============================ Sentence 24 =============================

Step 2 − Construct membership functions for them The membership functions of temperature variable are as shown −  Step3 − Construct knowledge base rules Create a matrix of room temperature values versus target temperature values that an air conditioning system is expected to provide. 


>> Tokens are: 
 ['Step', '2', '−', 'Construct', 'membership', 'functions', 'The', 'membership', 'functions', 'temperature', 'variable', 'shown', '−', 'Step3', '−', 'Construct', 'knowledge', 'base', 'rules', 'Create', 'matrix', 'room', 'temperature', 'values', 'versus', 'target', 'temperature', 'values', 'air', 'conditioning', 'system', 'expected', 'provide', '.']

>> Bigrams are: 
 [('Step', '2'), ('2', '−'), ('−', 'Construct'), ('Construct', 'membership'), ('membership', 'functions'), ('functions', 'The'), ('The', 'membership'), ('membership', 'functions'), ('functions', 'temperature'), ('temperature', 'variable'), ('variable', 'shown'), ('shown', '−'), ('−', 'Step3'), ('Step3', '−'), ('−', 'Construct'), ('Construct', 'knowledge'), ('knowledge', 'base'), ('base', 'rules'), ('rules', 'Create'), ('Create', 'matrix'), ('matrix', 'room'), ('room', 'temperature'), ('temperature', 'values'), ('values', 'versus'), ('versus', 'target'), ('target', 'temperature'), ('temperature', 'values'), ('values', 'air'), ('air', 'conditioning'), ('conditioning', 'system'), ('system', 'expected'), ('expected', 'provide'), ('provide', '.')]

>> Trigrams are: 
 [('Step', '2', '−'), ('2', '−', 'Construct'), ('−', 'Construct', 'membership'), ('Construct', 'membership', 'functions'), ('membership', 'functions', 'The'), ('functions', 'The', 'membership'), ('The', 'membership', 'functions'), ('membership', 'functions', 'temperature'), ('functions', 'temperature', 'variable'), ('temperature', 'variable', 'shown'), ('variable', 'shown', '−'), ('shown', '−', 'Step3'), ('−', 'Step3', '−'), ('Step3', '−', 'Construct'), ('−', 'Construct', 'knowledge'), ('Construct', 'knowledge', 'base'), ('knowledge', 'base', 'rules'), ('base', 'rules', 'Create'), ('rules', 'Create', 'matrix'), ('Create', 'matrix', 'room'), ('matrix', 'room', 'temperature'), ('room', 'temperature', 'values'), ('temperature', 'values', 'versus'), ('values', 'versus', 'target'), ('versus', 'target', 'temperature'), ('target', 'temperature', 'values'), ('temperature', 'values', 'air'), ('values', 'air', 'conditioning'), ('air', 'conditioning', 'system'), ('conditioning', 'system', 'expected'), ('system', 'expected', 'provide'), ('expected', 'provide', '.')]

>> POS Tags are: 
 [('Step', 'NN'), ('2', 'CD'), ('−', 'JJ'), ('Construct', 'NNP'), ('membership', 'NN'), ('functions', 'NNS'), ('The', 'DT'), ('membership', 'NN'), ('functions', 'NNS'), ('temperature', 'VBP'), ('variable', 'JJ'), ('shown', 'VBN'), ('−', 'JJ'), ('Step3', 'NNP'), ('−', 'NNP'), ('Construct', 'NNP'), ('knowledge', 'NN'), ('base', 'NN'), ('rules', 'NNS'), ('Create', 'NNP'), ('matrix', 'NN'), ('room', 'NN'), ('temperature', 'NN'), ('values', 'VBZ'), ('versus', 'IN'), ('target', 'NN'), ('temperature', 'NN'), ('values', 'VBZ'), ('air', 'RP'), ('conditioning', 'VBG'), ('system', 'NN'), ('expected', 'VBN'), ('provide', 'RB'), ('.', '.')]

 (S
  (NP Step/NN)
  2/CD
  (NP −/JJ Construct/NNP membership/NN functions/NNS)
  (NP The/DT membership/NN functions/NNS)
  temperature/VBP
  variable/JJ
  shown/VBN
  (NP
    −/JJ
    Step3/NNP
    −/NNP
    Construct/NNP
    knowledge/NN
    base/NN
    rules/NNS
    Create/NNP
    matrix/NN
    room/NN
    temperature/NN)
  values/VBZ
  versus/IN
  (NP target/NN temperature/NN)
  values/VBZ
  air/RP
  conditioning/VBG
  (NP system/NN)
  expected/VBN
  provide/RB
  ./.) 


>> Noun Phrases are: 
 ['Step', '− Construct membership functions', 'The membership functions', '− Step3 − Construct knowledge base rules Create matrix room temperature', 'target temperature', 'system']

>> Named Entities are: 
 [('PERSON', 'Step3'), ('ORGANIZATION', 'Create')] 

>> Stemming using Porter Stemmer: 
 [('Step', 'step'), ('2', '2'), ('−', '−'), ('Construct', 'construct'), ('membership', 'membership'), ('functions', 'function'), ('The', 'the'), ('membership', 'membership'), ('functions', 'function'), ('temperature', 'temperatur'), ('variable', 'variabl'), ('shown', 'shown'), ('−', '−'), ('Step3', 'step3'), ('−', '−'), ('Construct', 'construct'), ('knowledge', 'knowledg'), ('base', 'base'), ('rules', 'rule'), ('Create', 'creat'), ('matrix', 'matrix'), ('room', 'room'), ('temperature', 'temperatur'), ('values', 'valu'), ('versus', 'versu'), ('target', 'target'), ('temperature', 'temperatur'), ('values', 'valu'), ('air', 'air'), ('conditioning', 'condit'), ('system', 'system'), ('expected', 'expect'), ('provide', 'provid'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Step', 'step'), ('2', '2'), ('−', '−'), ('Construct', 'construct'), ('membership', 'membership'), ('functions', 'function'), ('The', 'the'), ('membership', 'membership'), ('functions', 'function'), ('temperature', 'temperatur'), ('variable', 'variabl'), ('shown', 'shown'), ('−', '−'), ('Step3', 'step3'), ('−', '−'), ('Construct', 'construct'), ('knowledge', 'knowledg'), ('base', 'base'), ('rules', 'rule'), ('Create', 'creat'), ('matrix', 'matrix'), ('room', 'room'), ('temperature', 'temperatur'), ('values', 'valu'), ('versus', 'versus'), ('target', 'target'), ('temperature', 'temperatur'), ('values', 'valu'), ('air', 'air'), ('conditioning', 'condit'), ('system', 'system'), ('expected', 'expect'), ('provide', 'provid'), ('.', '.')]

>> Lemmatization: 
 [('Step', 'Step'), ('2', '2'), ('−', '−'), ('Construct', 'Construct'), ('membership', 'membership'), ('functions', 'function'), ('The', 'The'), ('membership', 'membership'), ('functions', 'function'), ('temperature', 'temperature'), ('variable', 'variable'), ('shown', 'shown'), ('−', '−'), ('Step3', 'Step3'), ('−', '−'), ('Construct', 'Construct'), ('knowledge', 'knowledge'), ('base', 'base'), ('rules', 'rule'), ('Create', 'Create'), ('matrix', 'matrix'), ('room', 'room'), ('temperature', 'temperature'), ('values', 'value'), ('versus', 'versus'), ('target', 'target'), ('temperature', 'temperature'), ('values', 'value'), ('air', 'air'), ('conditioning', 'conditioning'), ('system', 'system'), ('expected', 'expected'), ('provide', 'provide'), ('.', '.')]



============================ Sentence 25 =============================

RoomTemp. 


>> Tokens are: 
 ['RoomTemp', '.']

>> Bigrams are: 
 [('RoomTemp', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('RoomTemp', 'NNP'), ('.', '.')]

 (S (NP RoomTemp/NNP) ./.) 


>> Noun Phrases are: 
 ['RoomTemp']

>> Named Entities are: 
 [('GPE', 'RoomTemp')] 

>> Stemming using Porter Stemmer: 
 [('RoomTemp', 'roomtemp'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('RoomTemp', 'roomtemp'), ('.', '.')]

>> Lemmatization: 
 [('RoomTemp', 'RoomTemp'), ('.', '.')]



============================ Sentence 26 =============================

/Target 	Very_Cold 	Cold 	Warm 	Hot 	Very_Hot  	Very_Cold 	No_Change 	Heat 	Heat 	Heat 	Heat  	Cold 	Cool 	No_Change 	Heat 	Heat 	Heat  	Warm 	Cool 	Cool 	No_Change 	Heat 	Heat  	Hot 	Cool 	Cool 	Cool 	No_Change 	Heat  	Very_Hot 	Cool 	Cool 	Cool 	Cool 	No_Change   Build a set of rules into the knowledge base in the form of IF-THEN-ELSE structures. 


>> Tokens are: 
 ['/Target', 'Very_Cold', 'Cold', 'Warm', 'Hot', 'Very_Hot', 'Very_Cold', 'No_Change', 'Heat', 'Heat', 'Heat', 'Heat', 'Cold', 'Cool', 'No_Change', 'Heat', 'Heat', 'Heat', 'Warm', 'Cool', 'Cool', 'No_Change', 'Heat', 'Heat', 'Hot', 'Cool', 'Cool', 'Cool', 'No_Change', 'Heat', 'Very_Hot', 'Cool', 'Cool', 'Cool', 'Cool', 'No_Change', 'Build', 'set', 'rules', 'knowledge', 'base', 'form', 'IF-THEN-ELSE', 'structures', '.']

>> Bigrams are: 
 [('/Target', 'Very_Cold'), ('Very_Cold', 'Cold'), ('Cold', 'Warm'), ('Warm', 'Hot'), ('Hot', 'Very_Hot'), ('Very_Hot', 'Very_Cold'), ('Very_Cold', 'No_Change'), ('No_Change', 'Heat'), ('Heat', 'Heat'), ('Heat', 'Heat'), ('Heat', 'Heat'), ('Heat', 'Cold'), ('Cold', 'Cool'), ('Cool', 'No_Change'), ('No_Change', 'Heat'), ('Heat', 'Heat'), ('Heat', 'Heat'), ('Heat', 'Warm'), ('Warm', 'Cool'), ('Cool', 'Cool'), ('Cool', 'No_Change'), ('No_Change', 'Heat'), ('Heat', 'Heat'), ('Heat', 'Hot'), ('Hot', 'Cool'), ('Cool', 'Cool'), ('Cool', 'Cool'), ('Cool', 'No_Change'), ('No_Change', 'Heat'), ('Heat', 'Very_Hot'), ('Very_Hot', 'Cool'), ('Cool', 'Cool'), ('Cool', 'Cool'), ('Cool', 'Cool'), ('Cool', 'No_Change'), ('No_Change', 'Build'), ('Build', 'set'), ('set', 'rules'), ('rules', 'knowledge'), ('knowledge', 'base'), ('base', 'form'), ('form', 'IF-THEN-ELSE'), ('IF-THEN-ELSE', 'structures'), ('structures', '.')]

>> Trigrams are: 
 [('/Target', 'Very_Cold', 'Cold'), ('Very_Cold', 'Cold', 'Warm'), ('Cold', 'Warm', 'Hot'), ('Warm', 'Hot', 'Very_Hot'), ('Hot', 'Very_Hot', 'Very_Cold'), ('Very_Hot', 'Very_Cold', 'No_Change'), ('Very_Cold', 'No_Change', 'Heat'), ('No_Change', 'Heat', 'Heat'), ('Heat', 'Heat', 'Heat'), ('Heat', 'Heat', 'Heat'), ('Heat', 'Heat', 'Cold'), ('Heat', 'Cold', 'Cool'), ('Cold', 'Cool', 'No_Change'), ('Cool', 'No_Change', 'Heat'), ('No_Change', 'Heat', 'Heat'), ('Heat', 'Heat', 'Heat'), ('Heat', 'Heat', 'Warm'), ('Heat', 'Warm', 'Cool'), ('Warm', 'Cool', 'Cool'), ('Cool', 'Cool', 'No_Change'), ('Cool', 'No_Change', 'Heat'), ('No_Change', 'Heat', 'Heat'), ('Heat', 'Heat', 'Hot'), ('Heat', 'Hot', 'Cool'), ('Hot', 'Cool', 'Cool'), ('Cool', 'Cool', 'Cool'), ('Cool', 'Cool', 'No_Change'), ('Cool', 'No_Change', 'Heat'), ('No_Change', 'Heat', 'Very_Hot'), ('Heat', 'Very_Hot', 'Cool'), ('Very_Hot', 'Cool', 'Cool'), ('Cool', 'Cool', 'Cool'), ('Cool', 'Cool', 'Cool'), ('Cool', 'Cool', 'No_Change'), ('Cool', 'No_Change', 'Build'), ('No_Change', 'Build', 'set'), ('Build', 'set', 'rules'), ('set', 'rules', 'knowledge'), ('rules', 'knowledge', 'base'), ('knowledge', 'base', 'form'), ('base', 'form', 'IF-THEN-ELSE'), ('form', 'IF-THEN-ELSE', 'structures'), ('IF-THEN-ELSE', 'structures', '.')]

>> POS Tags are: 
 [('/Target', 'NN'), ('Very_Cold', 'NNP'), ('Cold', 'NNP'), ('Warm', 'NNP'), ('Hot', 'NNP'), ('Very_Hot', 'NNP'), ('Very_Cold', 'NNP'), ('No_Change', 'NNP'), ('Heat', 'NNP'), ('Heat', 'NNP'), ('Heat', 'NNP'), ('Heat', 'NNP'), ('Cold', 'NNP'), ('Cool', 'NNP'), ('No_Change', 'NNP'), ('Heat', 'NNP'), ('Heat', 'NNP'), ('Heat', 'NNP'), ('Warm', 'NNP'), ('Cool', 'NNP'), ('Cool', 'NNP'), ('No_Change', 'NNP'), ('Heat', 'NNP'), ('Heat', 'NNP'), ('Hot', 'NNP'), ('Cool', 'NNP'), ('Cool', 'NNP'), ('Cool', 'NNP'), ('No_Change', 'NNP'), ('Heat', 'NNP'), ('Very_Hot', 'NNP'), ('Cool', 'NNP'), ('Cool', 'NNP'), ('Cool', 'NNP'), ('Cool', 'NNP'), ('No_Change', 'NNP'), ('Build', 'NNP'), ('set', 'VBD'), ('rules', 'NNS'), ('knowledge', 'VB'), ('base', 'NN'), ('form', 'NN'), ('IF-THEN-ELSE', 'NNP'), ('structures', 'NNS'), ('.', '.')]

 (S
  (NP
    /Target/NN
    Very_Cold/NNP
    Cold/NNP
    Warm/NNP
    Hot/NNP
    Very_Hot/NNP
    Very_Cold/NNP
    No_Change/NNP
    Heat/NNP
    Heat/NNP
    Heat/NNP
    Heat/NNP
    Cold/NNP
    Cool/NNP
    No_Change/NNP
    Heat/NNP
    Heat/NNP
    Heat/NNP
    Warm/NNP
    Cool/NNP
    Cool/NNP
    No_Change/NNP
    Heat/NNP
    Heat/NNP
    Hot/NNP
    Cool/NNP
    Cool/NNP
    Cool/NNP
    No_Change/NNP
    Heat/NNP
    Very_Hot/NNP
    Cool/NNP
    Cool/NNP
    Cool/NNP
    Cool/NNP
    No_Change/NNP
    Build/NNP)
  set/VBD
  (NP rules/NNS)
  knowledge/VB
  (NP base/NN form/NN IF-THEN-ELSE/NNP structures/NNS)
  ./.) 


>> Noun Phrases are: 
 ['/Target Very_Cold Cold Warm Hot Very_Hot Very_Cold No_Change Heat Heat Heat Heat Cold Cool No_Change Heat Heat Heat Warm Cool Cool No_Change Heat Heat Hot Cool Cool Cool No_Change Heat Very_Hot Cool Cool Cool Cool No_Change Build', 'rules', 'base form IF-THEN-ELSE structures']

>> Named Entities are: 
 [('PERSON', 'Very_Cold Cold Warm Hot Very_Hot Very_Cold No_Change Heat Heat Heat Heat Cold Cool No_Change Heat Heat Heat Warm Cool Cool No_Change Heat Heat Hot Cool Cool Cool No_Change Heat Very_Hot Cool Cool Cool Cool No_Change Build')] 

>> Stemming using Porter Stemmer: 
 [('/Target', '/target'), ('Very_Cold', 'very_cold'), ('Cold', 'cold'), ('Warm', 'warm'), ('Hot', 'hot'), ('Very_Hot', 'very_hot'), ('Very_Cold', 'very_cold'), ('No_Change', 'no_chang'), ('Heat', 'heat'), ('Heat', 'heat'), ('Heat', 'heat'), ('Heat', 'heat'), ('Cold', 'cold'), ('Cool', 'cool'), ('No_Change', 'no_chang'), ('Heat', 'heat'), ('Heat', 'heat'), ('Heat', 'heat'), ('Warm', 'warm'), ('Cool', 'cool'), ('Cool', 'cool'), ('No_Change', 'no_chang'), ('Heat', 'heat'), ('Heat', 'heat'), ('Hot', 'hot'), ('Cool', 'cool'), ('Cool', 'cool'), ('Cool', 'cool'), ('No_Change', 'no_chang'), ('Heat', 'heat'), ('Very_Hot', 'very_hot'), ('Cool', 'cool'), ('Cool', 'cool'), ('Cool', 'cool'), ('Cool', 'cool'), ('No_Change', 'no_chang'), ('Build', 'build'), ('set', 'set'), ('rules', 'rule'), ('knowledge', 'knowledg'), ('base', 'base'), ('form', 'form'), ('IF-THEN-ELSE', 'if-then-els'), ('structures', 'structur'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('/Target', '/target'), ('Very_Cold', 'very_cold'), ('Cold', 'cold'), ('Warm', 'warm'), ('Hot', 'hot'), ('Very_Hot', 'very_hot'), ('Very_Cold', 'very_cold'), ('No_Change', 'no_chang'), ('Heat', 'heat'), ('Heat', 'heat'), ('Heat', 'heat'), ('Heat', 'heat'), ('Cold', 'cold'), ('Cool', 'cool'), ('No_Change', 'no_chang'), ('Heat', 'heat'), ('Heat', 'heat'), ('Heat', 'heat'), ('Warm', 'warm'), ('Cool', 'cool'), ('Cool', 'cool'), ('No_Change', 'no_chang'), ('Heat', 'heat'), ('Heat', 'heat'), ('Hot', 'hot'), ('Cool', 'cool'), ('Cool', 'cool'), ('Cool', 'cool'), ('No_Change', 'no_chang'), ('Heat', 'heat'), ('Very_Hot', 'very_hot'), ('Cool', 'cool'), ('Cool', 'cool'), ('Cool', 'cool'), ('Cool', 'cool'), ('No_Change', 'no_chang'), ('Build', 'build'), ('set', 'set'), ('rules', 'rule'), ('knowledge', 'knowledg'), ('base', 'base'), ('form', 'form'), ('IF-THEN-ELSE', 'if-then-els'), ('structures', 'structur'), ('.', '.')]

>> Lemmatization: 
 [('/Target', '/Target'), ('Very_Cold', 'Very_Cold'), ('Cold', 'Cold'), ('Warm', 'Warm'), ('Hot', 'Hot'), ('Very_Hot', 'Very_Hot'), ('Very_Cold', 'Very_Cold'), ('No_Change', 'No_Change'), ('Heat', 'Heat'), ('Heat', 'Heat'), ('Heat', 'Heat'), ('Heat', 'Heat'), ('Cold', 'Cold'), ('Cool', 'Cool'), ('No_Change', 'No_Change'), ('Heat', 'Heat'), ('Heat', 'Heat'), ('Heat', 'Heat'), ('Warm', 'Warm'), ('Cool', 'Cool'), ('Cool', 'Cool'), ('No_Change', 'No_Change'), ('Heat', 'Heat'), ('Heat', 'Heat'), ('Hot', 'Hot'), ('Cool', 'Cool'), ('Cool', 'Cool'), ('Cool', 'Cool'), ('No_Change', 'No_Change'), ('Heat', 'Heat'), ('Very_Hot', 'Very_Hot'), ('Cool', 'Cool'), ('Cool', 'Cool'), ('Cool', 'Cool'), ('Cool', 'Cool'), ('No_Change', 'No_Change'), ('Build', 'Build'), ('set', 'set'), ('rules', 'rule'), ('knowledge', 'knowledge'), ('base', 'base'), ('form', 'form'), ('IF-THEN-ELSE', 'IF-THEN-ELSE'), ('structures', 'structure'), ('.', '.')]



============================ Sentence 27 =============================

Sr. No. 


>> Tokens are: 
 ['Sr.', 'No', '.']

>> Bigrams are: 
 [('Sr.', 'No'), ('No', '.')]

>> Trigrams are: 
 [('Sr.', 'No', '.')]

>> POS Tags are: 
 [('Sr.', 'NNP'), ('No', 'NNP'), ('.', '.')]

 (S (NP Sr./NNP No/NNP) ./.) 


>> Noun Phrases are: 
 ['Sr. No']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Sr.', 'sr.'), ('No', 'no'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Sr.', 'sr.'), ('No', 'no'), ('.', '.')]

>> Lemmatization: 
 [('Sr.', 'Sr.'), ('No', 'No'), ('.', '.')]



============================ Sentence 28 =============================

Condition 	Action  	1 	IF temperature=(Cold OR Very_Cold) AND target=Warm THEN 	Heat  	2 	IF temperature=(Hot OR Very_Hot) AND target=Warm THEN 	Cool  	3 	IF (temperature=Warm) AND (target=Warm) THEN 	No_Change   Step 4 − Obtain fuzzy value Fuzzy set operations perform evaluation of rules. 


>> Tokens are: 
 ['Condition', 'Action', '1', 'IF', 'temperature=', '(', 'Cold', 'OR', 'Very_Cold', ')', 'AND', 'target=Warm', 'THEN', 'Heat', '2', 'IF', 'temperature=', '(', 'Hot', 'OR', 'Very_Hot', ')', 'AND', 'target=Warm', 'THEN', 'Cool', '3', 'IF', '(', 'temperature=Warm', ')', 'AND', '(', 'target=Warm', ')', 'THEN', 'No_Change', 'Step', '4', '−', 'Obtain', 'fuzzy', 'value', 'Fuzzy', 'set', 'operations', 'perform', 'evaluation', 'rules', '.']

>> Bigrams are: 
 [('Condition', 'Action'), ('Action', '1'), ('1', 'IF'), ('IF', 'temperature='), ('temperature=', '('), ('(', 'Cold'), ('Cold', 'OR'), ('OR', 'Very_Cold'), ('Very_Cold', ')'), (')', 'AND'), ('AND', 'target=Warm'), ('target=Warm', 'THEN'), ('THEN', 'Heat'), ('Heat', '2'), ('2', 'IF'), ('IF', 'temperature='), ('temperature=', '('), ('(', 'Hot'), ('Hot', 'OR'), ('OR', 'Very_Hot'), ('Very_Hot', ')'), (')', 'AND'), ('AND', 'target=Warm'), ('target=Warm', 'THEN'), ('THEN', 'Cool'), ('Cool', '3'), ('3', 'IF'), ('IF', '('), ('(', 'temperature=Warm'), ('temperature=Warm', ')'), (')', 'AND'), ('AND', '('), ('(', 'target=Warm'), ('target=Warm', ')'), (')', 'THEN'), ('THEN', 'No_Change'), ('No_Change', 'Step'), ('Step', '4'), ('4', '−'), ('−', 'Obtain'), ('Obtain', 'fuzzy'), ('fuzzy', 'value'), ('value', 'Fuzzy'), ('Fuzzy', 'set'), ('set', 'operations'), ('operations', 'perform'), ('perform', 'evaluation'), ('evaluation', 'rules'), ('rules', '.')]

>> Trigrams are: 
 [('Condition', 'Action', '1'), ('Action', '1', 'IF'), ('1', 'IF', 'temperature='), ('IF', 'temperature=', '('), ('temperature=', '(', 'Cold'), ('(', 'Cold', 'OR'), ('Cold', 'OR', 'Very_Cold'), ('OR', 'Very_Cold', ')'), ('Very_Cold', ')', 'AND'), (')', 'AND', 'target=Warm'), ('AND', 'target=Warm', 'THEN'), ('target=Warm', 'THEN', 'Heat'), ('THEN', 'Heat', '2'), ('Heat', '2', 'IF'), ('2', 'IF', 'temperature='), ('IF', 'temperature=', '('), ('temperature=', '(', 'Hot'), ('(', 'Hot', 'OR'), ('Hot', 'OR', 'Very_Hot'), ('OR', 'Very_Hot', ')'), ('Very_Hot', ')', 'AND'), (')', 'AND', 'target=Warm'), ('AND', 'target=Warm', 'THEN'), ('target=Warm', 'THEN', 'Cool'), ('THEN', 'Cool', '3'), ('Cool', '3', 'IF'), ('3', 'IF', '('), ('IF', '(', 'temperature=Warm'), ('(', 'temperature=Warm', ')'), ('temperature=Warm', ')', 'AND'), (')', 'AND', '('), ('AND', '(', 'target=Warm'), ('(', 'target=Warm', ')'), ('target=Warm', ')', 'THEN'), (')', 'THEN', 'No_Change'), ('THEN', 'No_Change', 'Step'), ('No_Change', 'Step', '4'), ('Step', '4', '−'), ('4', '−', 'Obtain'), ('−', 'Obtain', 'fuzzy'), ('Obtain', 'fuzzy', 'value'), ('fuzzy', 'value', 'Fuzzy'), ('value', 'Fuzzy', 'set'), ('Fuzzy', 'set', 'operations'), ('set', 'operations', 'perform'), ('operations', 'perform', 'evaluation'), ('perform', 'evaluation', 'rules'), ('evaluation', 'rules', '.')]

>> POS Tags are: 
 [('Condition', 'NNP'), ('Action', 'NNP'), ('1', 'CD'), ('IF', 'NNP'), ('temperature=', 'NN'), ('(', '('), ('Cold', 'NNP'), ('OR', 'NNP'), ('Very_Cold', 'NNP'), (')', ')'), ('AND', 'CC'), ('target=Warm', 'NN'), ('THEN', 'NNP'), ('Heat', 'NNP'), ('2', 'CD'), ('IF', 'NNP'), ('temperature=', 'NN'), ('(', '('), ('Hot', 'NNP'), ('OR', 'NNP'), ('Very_Hot', 'NNP'), (')', ')'), ('AND', 'CC'), ('target=Warm', 'JJ'), ('THEN', 'NNP'), ('Cool', 'NNP'), ('3', 'CD'), ('IF', 'NNP'), ('(', '('), ('temperature=Warm', 'NN'), (')', ')'), ('AND', 'CC'), ('(', '('), ('target=Warm', 'NN'), (')', ')'), ('THEN', 'NNP'), ('No_Change', 'NNP'), ('Step', 'NNP'), ('4', 'CD'), ('−', 'NNP'), ('Obtain', 'NNP'), ('fuzzy', 'JJ'), ('value', 'NN'), ('Fuzzy', 'NNP'), ('set', 'VBD'), ('operations', 'NNS'), ('perform', 'VB'), ('evaluation', 'NN'), ('rules', 'NNS'), ('.', '.')]

 (S
  (NP Condition/NNP Action/NNP)
  1/CD
  (NP IF/NNP temperature=/NN)
  (/(
  (NP Cold/NNP OR/NNP Very_Cold/NNP)
  )/)
  AND/CC
  (NP target=Warm/NN THEN/NNP Heat/NNP)
  2/CD
  (NP IF/NNP temperature=/NN)
  (/(
  (NP Hot/NNP OR/NNP Very_Hot/NNP)
  )/)
  AND/CC
  (NP target=Warm/JJ THEN/NNP Cool/NNP)
  3/CD
  (NP IF/NNP)
  (/(
  (NP temperature=Warm/NN)
  )/)
  AND/CC
  (/(
  (NP target=Warm/NN)
  )/)
  (NP THEN/NNP No_Change/NNP Step/NNP)
  4/CD
  (NP −/NNP Obtain/NNP)
  (NP fuzzy/JJ value/NN Fuzzy/NNP)
  set/VBD
  (NP operations/NNS)
  perform/VB
  (NP evaluation/NN rules/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Condition Action', 'IF temperature=', 'Cold OR Very_Cold', 'target=Warm THEN Heat', 'IF temperature=', 'Hot OR Very_Hot', 'target=Warm THEN Cool', 'IF', 'temperature=Warm', 'target=Warm', 'THEN No_Change Step', '− Obtain', 'fuzzy value Fuzzy', 'operations', 'evaluation rules']

>> Named Entities are: 
 [('ORGANIZATION', 'Cold'), ('ORGANIZATION', 'Hot'), ('PERSON', 'Fuzzy')] 

>> Stemming using Porter Stemmer: 
 [('Condition', 'condit'), ('Action', 'action'), ('1', '1'), ('IF', 'if'), ('temperature=', 'temperature='), ('(', '('), ('Cold', 'cold'), ('OR', 'or'), ('Very_Cold', 'very_cold'), (')', ')'), ('AND', 'and'), ('target=Warm', 'target=warm'), ('THEN', 'then'), ('Heat', 'heat'), ('2', '2'), ('IF', 'if'), ('temperature=', 'temperature='), ('(', '('), ('Hot', 'hot'), ('OR', 'or'), ('Very_Hot', 'very_hot'), (')', ')'), ('AND', 'and'), ('target=Warm', 'target=warm'), ('THEN', 'then'), ('Cool', 'cool'), ('3', '3'), ('IF', 'if'), ('(', '('), ('temperature=Warm', 'temperature=warm'), (')', ')'), ('AND', 'and'), ('(', '('), ('target=Warm', 'target=warm'), (')', ')'), ('THEN', 'then'), ('No_Change', 'no_chang'), ('Step', 'step'), ('4', '4'), ('−', '−'), ('Obtain', 'obtain'), ('fuzzy', 'fuzzi'), ('value', 'valu'), ('Fuzzy', 'fuzzi'), ('set', 'set'), ('operations', 'oper'), ('perform', 'perform'), ('evaluation', 'evalu'), ('rules', 'rule'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Condition', 'condit'), ('Action', 'action'), ('1', '1'), ('IF', 'if'), ('temperature=', 'temperature='), ('(', '('), ('Cold', 'cold'), ('OR', 'or'), ('Very_Cold', 'very_cold'), (')', ')'), ('AND', 'and'), ('target=Warm', 'target=warm'), ('THEN', 'then'), ('Heat', 'heat'), ('2', '2'), ('IF', 'if'), ('temperature=', 'temperature='), ('(', '('), ('Hot', 'hot'), ('OR', 'or'), ('Very_Hot', 'very_hot'), (')', ')'), ('AND', 'and'), ('target=Warm', 'target=warm'), ('THEN', 'then'), ('Cool', 'cool'), ('3', '3'), ('IF', 'if'), ('(', '('), ('temperature=Warm', 'temperature=warm'), (')', ')'), ('AND', 'and'), ('(', '('), ('target=Warm', 'target=warm'), (')', ')'), ('THEN', 'then'), ('No_Change', 'no_chang'), ('Step', 'step'), ('4', '4'), ('−', '−'), ('Obtain', 'obtain'), ('fuzzy', 'fuzzi'), ('value', 'valu'), ('Fuzzy', 'fuzzi'), ('set', 'set'), ('operations', 'oper'), ('perform', 'perform'), ('evaluation', 'evalu'), ('rules', 'rule'), ('.', '.')]

>> Lemmatization: 
 [('Condition', 'Condition'), ('Action', 'Action'), ('1', '1'), ('IF', 'IF'), ('temperature=', 'temperature='), ('(', '('), ('Cold', 'Cold'), ('OR', 'OR'), ('Very_Cold', 'Very_Cold'), (')', ')'), ('AND', 'AND'), ('target=Warm', 'target=Warm'), ('THEN', 'THEN'), ('Heat', 'Heat'), ('2', '2'), ('IF', 'IF'), ('temperature=', 'temperature='), ('(', '('), ('Hot', 'Hot'), ('OR', 'OR'), ('Very_Hot', 'Very_Hot'), (')', ')'), ('AND', 'AND'), ('target=Warm', 'target=Warm'), ('THEN', 'THEN'), ('Cool', 'Cool'), ('3', '3'), ('IF', 'IF'), ('(', '('), ('temperature=Warm', 'temperature=Warm'), (')', ')'), ('AND', 'AND'), ('(', '('), ('target=Warm', 'target=Warm'), (')', ')'), ('THEN', 'THEN'), ('No_Change', 'No_Change'), ('Step', 'Step'), ('4', '4'), ('−', '−'), ('Obtain', 'Obtain'), ('fuzzy', 'fuzzy'), ('value', 'value'), ('Fuzzy', 'Fuzzy'), ('set', 'set'), ('operations', 'operation'), ('perform', 'perform'), ('evaluation', 'evaluation'), ('rules', 'rule'), ('.', '.')]



============================ Sentence 29 =============================

The operations used for OR and AND are Max and Min respectively. 


>> Tokens are: 
 ['The', 'operations', 'used', 'OR', 'AND', 'Max', 'Min', 'respectively', '.']

>> Bigrams are: 
 [('The', 'operations'), ('operations', 'used'), ('used', 'OR'), ('OR', 'AND'), ('AND', 'Max'), ('Max', 'Min'), ('Min', 'respectively'), ('respectively', '.')]

>> Trigrams are: 
 [('The', 'operations', 'used'), ('operations', 'used', 'OR'), ('used', 'OR', 'AND'), ('OR', 'AND', 'Max'), ('AND', 'Max', 'Min'), ('Max', 'Min', 'respectively'), ('Min', 'respectively', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('operations', 'NNS'), ('used', 'VBD'), ('OR', 'NNP'), ('AND', 'NNP'), ('Max', 'NNP'), ('Min', 'NNP'), ('respectively', 'RB'), ('.', '.')]

 (S
  (NP The/DT operations/NNS)
  used/VBD
  (NP OR/NNP AND/NNP Max/NNP Min/NNP)
  respectively/RB
  ./.) 


>> Noun Phrases are: 
 ['The operations', 'OR AND Max Min']

>> Named Entities are: 
 [('ORGANIZATION', 'OR')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('operations', 'oper'), ('used', 'use'), ('OR', 'or'), ('AND', 'and'), ('Max', 'max'), ('Min', 'min'), ('respectively', 'respect'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('operations', 'oper'), ('used', 'use'), ('OR', 'or'), ('AND', 'and'), ('Max', 'max'), ('Min', 'min'), ('respectively', 'respect'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('operations', 'operation'), ('used', 'used'), ('OR', 'OR'), ('AND', 'AND'), ('Max', 'Max'), ('Min', 'Min'), ('respectively', 'respectively'), ('.', '.')]



============================ Sentence 30 =============================

Combine all results of evaluation to form a final result. 


>> Tokens are: 
 ['Combine', 'results', 'evaluation', 'form', 'final', 'result', '.']

>> Bigrams are: 
 [('Combine', 'results'), ('results', 'evaluation'), ('evaluation', 'form'), ('form', 'final'), ('final', 'result'), ('result', '.')]

>> Trigrams are: 
 [('Combine', 'results', 'evaluation'), ('results', 'evaluation', 'form'), ('evaluation', 'form', 'final'), ('form', 'final', 'result'), ('final', 'result', '.')]

>> POS Tags are: 
 [('Combine', 'NNP'), ('results', 'NNS'), ('evaluation', 'NN'), ('form', 'VBP'), ('final', 'JJ'), ('result', 'NN'), ('.', '.')]

 (S
  (NP Combine/NNP results/NNS evaluation/NN)
  form/VBP
  (NP final/JJ result/NN)
  ./.) 


>> Noun Phrases are: 
 ['Combine results evaluation', 'final result']

>> Named Entities are: 
 [('GPE', 'Combine')] 

>> Stemming using Porter Stemmer: 
 [('Combine', 'combin'), ('results', 'result'), ('evaluation', 'evalu'), ('form', 'form'), ('final', 'final'), ('result', 'result'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Combine', 'combin'), ('results', 'result'), ('evaluation', 'evalu'), ('form', 'form'), ('final', 'final'), ('result', 'result'), ('.', '.')]

>> Lemmatization: 
 [('Combine', 'Combine'), ('results', 'result'), ('evaluation', 'evaluation'), ('form', 'form'), ('final', 'final'), ('result', 'result'), ('.', '.')]



============================ Sentence 31 =============================

This result is a fuzzy value. 


>> Tokens are: 
 ['This', 'result', 'fuzzy', 'value', '.']

>> Bigrams are: 
 [('This', 'result'), ('result', 'fuzzy'), ('fuzzy', 'value'), ('value', '.')]

>> Trigrams are: 
 [('This', 'result', 'fuzzy'), ('result', 'fuzzy', 'value'), ('fuzzy', 'value', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('result', 'NN'), ('fuzzy', 'VBZ'), ('value', 'NN'), ('.', '.')]

 (S (NP This/DT result/NN) fuzzy/VBZ (NP value/NN) ./.) 


>> Noun Phrases are: 
 ['This result', 'value']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('result', 'result'), ('fuzzy', 'fuzzi'), ('value', 'valu'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('result', 'result'), ('fuzzy', 'fuzzi'), ('value', 'valu'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('result', 'result'), ('fuzzy', 'fuzzy'), ('value', 'value'), ('.', '.')]



============================ Sentence 32 =============================

Step 5 − Perform defuzzification Defuzzification is then performed according to membership function for output variable. 


>> Tokens are: 
 ['Step', '5', '−', 'Perform', 'defuzzification', 'Defuzzification', 'performed', 'according', 'membership', 'function', 'output', 'variable', '.']

>> Bigrams are: 
 [('Step', '5'), ('5', '−'), ('−', 'Perform'), ('Perform', 'defuzzification'), ('defuzzification', 'Defuzzification'), ('Defuzzification', 'performed'), ('performed', 'according'), ('according', 'membership'), ('membership', 'function'), ('function', 'output'), ('output', 'variable'), ('variable', '.')]

>> Trigrams are: 
 [('Step', '5', '−'), ('5', '−', 'Perform'), ('−', 'Perform', 'defuzzification'), ('Perform', 'defuzzification', 'Defuzzification'), ('defuzzification', 'Defuzzification', 'performed'), ('Defuzzification', 'performed', 'according'), ('performed', 'according', 'membership'), ('according', 'membership', 'function'), ('membership', 'function', 'output'), ('function', 'output', 'variable'), ('output', 'variable', '.')]

>> POS Tags are: 
 [('Step', 'NN'), ('5', 'CD'), ('−', 'NN'), ('Perform', 'NNP'), ('defuzzification', 'NN'), ('Defuzzification', 'NNP'), ('performed', 'VBD'), ('according', 'VBG'), ('membership', 'NN'), ('function', 'NN'), ('output', 'NN'), ('variable', 'JJ'), ('.', '.')]

 (S
  (NP Step/NN)
  5/CD
  (NP −/NN Perform/NNP defuzzification/NN Defuzzification/NNP)
  performed/VBD
  according/VBG
  (NP membership/NN function/NN output/NN)
  variable/JJ
  ./.) 


>> Noun Phrases are: 
 ['Step', '− Perform defuzzification Defuzzification', 'membership function output']

>> Named Entities are: 
 [('PERSON', 'Perform'), ('PERSON', 'Defuzzification')] 

>> Stemming using Porter Stemmer: 
 [('Step', 'step'), ('5', '5'), ('−', '−'), ('Perform', 'perform'), ('defuzzification', 'defuzzif'), ('Defuzzification', 'defuzzif'), ('performed', 'perform'), ('according', 'accord'), ('membership', 'membership'), ('function', 'function'), ('output', 'output'), ('variable', 'variabl'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Step', 'step'), ('5', '5'), ('−', '−'), ('Perform', 'perform'), ('defuzzification', 'defuzzif'), ('Defuzzification', 'defuzzif'), ('performed', 'perform'), ('according', 'accord'), ('membership', 'membership'), ('function', 'function'), ('output', 'output'), ('variable', 'variabl'), ('.', '.')]

>> Lemmatization: 
 [('Step', 'Step'), ('5', '5'), ('−', '−'), ('Perform', 'Perform'), ('defuzzification', 'defuzzification'), ('Defuzzification', 'Defuzzification'), ('performed', 'performed'), ('according', 'according'), ('membership', 'membership'), ('function', 'function'), ('output', 'output'), ('variable', 'variable'), ('.', '.')]



============================ Sentence 33 =============================

Application Areas of Fuzzy Logic The key application areas of fuzzy logic are as given − Automotive Systems · Automatic Gearboxes · Four-Wheel Steering · Vehicle environment control Consumer Electronic Goods · Hi-Fi Systems · Photocopiers · Still and Video Cameras · Television Domestic Goods · Microwave Ovens · Refrigerators · Toasters · Vacuum Cleaners · Washing Machines Environment Control · Air Conditioners/Dryers/Heaters · Humidifiers Advantages of FLSs · Mathematical concepts within fuzzy reasoning are very simple. 


>> Tokens are: 
 ['Application', 'Areas', 'Fuzzy', 'Logic', 'The', 'key', 'application', 'areas', 'fuzzy', 'logic', 'given', '−', 'Automotive', 'Systems', '·', 'Automatic', 'Gearboxes', '·', 'Four-Wheel', 'Steering', '·', 'Vehicle', 'environment', 'control', 'Consumer', 'Electronic', 'Goods', '·', 'Hi-Fi', 'Systems', '·', 'Photocopiers', '·', 'Still', 'Video', 'Cameras', '·', 'Television', 'Domestic', 'Goods', '·', 'Microwave', 'Ovens', '·', 'Refrigerators', '·', 'Toasters', '·', 'Vacuum', 'Cleaners', '·', 'Washing', 'Machines', 'Environment', 'Control', '·', 'Air', 'Conditioners/Dryers/Heaters', '·', 'Humidifiers', 'Advantages', 'FLSs', '·', 'Mathematical', 'concepts', 'within', 'fuzzy', 'reasoning', 'simple', '.']

>> Bigrams are: 
 [('Application', 'Areas'), ('Areas', 'Fuzzy'), ('Fuzzy', 'Logic'), ('Logic', 'The'), ('The', 'key'), ('key', 'application'), ('application', 'areas'), ('areas', 'fuzzy'), ('fuzzy', 'logic'), ('logic', 'given'), ('given', '−'), ('−', 'Automotive'), ('Automotive', 'Systems'), ('Systems', '·'), ('·', 'Automatic'), ('Automatic', 'Gearboxes'), ('Gearboxes', '·'), ('·', 'Four-Wheel'), ('Four-Wheel', 'Steering'), ('Steering', '·'), ('·', 'Vehicle'), ('Vehicle', 'environment'), ('environment', 'control'), ('control', 'Consumer'), ('Consumer', 'Electronic'), ('Electronic', 'Goods'), ('Goods', '·'), ('·', 'Hi-Fi'), ('Hi-Fi', 'Systems'), ('Systems', '·'), ('·', 'Photocopiers'), ('Photocopiers', '·'), ('·', 'Still'), ('Still', 'Video'), ('Video', 'Cameras'), ('Cameras', '·'), ('·', 'Television'), ('Television', 'Domestic'), ('Domestic', 'Goods'), ('Goods', '·'), ('·', 'Microwave'), ('Microwave', 'Ovens'), ('Ovens', '·'), ('·', 'Refrigerators'), ('Refrigerators', '·'), ('·', 'Toasters'), ('Toasters', '·'), ('·', 'Vacuum'), ('Vacuum', 'Cleaners'), ('Cleaners', '·'), ('·', 'Washing'), ('Washing', 'Machines'), ('Machines', 'Environment'), ('Environment', 'Control'), ('Control', '·'), ('·', 'Air'), ('Air', 'Conditioners/Dryers/Heaters'), ('Conditioners/Dryers/Heaters', '·'), ('·', 'Humidifiers'), ('Humidifiers', 'Advantages'), ('Advantages', 'FLSs'), ('FLSs', '·'), ('·', 'Mathematical'), ('Mathematical', 'concepts'), ('concepts', 'within'), ('within', 'fuzzy'), ('fuzzy', 'reasoning'), ('reasoning', 'simple'), ('simple', '.')]

>> Trigrams are: 
 [('Application', 'Areas', 'Fuzzy'), ('Areas', 'Fuzzy', 'Logic'), ('Fuzzy', 'Logic', 'The'), ('Logic', 'The', 'key'), ('The', 'key', 'application'), ('key', 'application', 'areas'), ('application', 'areas', 'fuzzy'), ('areas', 'fuzzy', 'logic'), ('fuzzy', 'logic', 'given'), ('logic', 'given', '−'), ('given', '−', 'Automotive'), ('−', 'Automotive', 'Systems'), ('Automotive', 'Systems', '·'), ('Systems', '·', 'Automatic'), ('·', 'Automatic', 'Gearboxes'), ('Automatic', 'Gearboxes', '·'), ('Gearboxes', '·', 'Four-Wheel'), ('·', 'Four-Wheel', 'Steering'), ('Four-Wheel', 'Steering', '·'), ('Steering', '·', 'Vehicle'), ('·', 'Vehicle', 'environment'), ('Vehicle', 'environment', 'control'), ('environment', 'control', 'Consumer'), ('control', 'Consumer', 'Electronic'), ('Consumer', 'Electronic', 'Goods'), ('Electronic', 'Goods', '·'), ('Goods', '·', 'Hi-Fi'), ('·', 'Hi-Fi', 'Systems'), ('Hi-Fi', 'Systems', '·'), ('Systems', '·', 'Photocopiers'), ('·', 'Photocopiers', '·'), ('Photocopiers', '·', 'Still'), ('·', 'Still', 'Video'), ('Still', 'Video', 'Cameras'), ('Video', 'Cameras', '·'), ('Cameras', '·', 'Television'), ('·', 'Television', 'Domestic'), ('Television', 'Domestic', 'Goods'), ('Domestic', 'Goods', '·'), ('Goods', '·', 'Microwave'), ('·', 'Microwave', 'Ovens'), ('Microwave', 'Ovens', '·'), ('Ovens', '·', 'Refrigerators'), ('·', 'Refrigerators', '·'), ('Refrigerators', '·', 'Toasters'), ('·', 'Toasters', '·'), ('Toasters', '·', 'Vacuum'), ('·', 'Vacuum', 'Cleaners'), ('Vacuum', 'Cleaners', '·'), ('Cleaners', '·', 'Washing'), ('·', 'Washing', 'Machines'), ('Washing', 'Machines', 'Environment'), ('Machines', 'Environment', 'Control'), ('Environment', 'Control', '·'), ('Control', '·', 'Air'), ('·', 'Air', 'Conditioners/Dryers/Heaters'), ('Air', 'Conditioners/Dryers/Heaters', '·'), ('Conditioners/Dryers/Heaters', '·', 'Humidifiers'), ('·', 'Humidifiers', 'Advantages'), ('Humidifiers', 'Advantages', 'FLSs'), ('Advantages', 'FLSs', '·'), ('FLSs', '·', 'Mathematical'), ('·', 'Mathematical', 'concepts'), ('Mathematical', 'concepts', 'within'), ('concepts', 'within', 'fuzzy'), ('within', 'fuzzy', 'reasoning'), ('fuzzy', 'reasoning', 'simple'), ('reasoning', 'simple', '.')]

>> POS Tags are: 
 [('Application', 'NNP'), ('Areas', 'NNP'), ('Fuzzy', 'NNP'), ('Logic', 'NNP'), ('The', 'DT'), ('key', 'JJ'), ('application', 'NN'), ('areas', 'NNS'), ('fuzzy', 'VBP'), ('logic', 'JJ'), ('given', 'VBN'), ('−', 'JJ'), ('Automotive', 'NNP'), ('Systems', 'NNPS'), ('·', 'NNP'), ('Automatic', 'NNP'), ('Gearboxes', 'NNP'), ('·', 'NNP'), ('Four-Wheel', 'NNP'), ('Steering', 'NNP'), ('·', 'NNP'), ('Vehicle', 'NNP'), ('environment', 'NN'), ('control', 'NN'), ('Consumer', 'NNP'), ('Electronic', 'NNP'), ('Goods', 'NNP'), ('·', 'NNP'), ('Hi-Fi', 'NNP'), ('Systems', 'NNP'), ('·', 'NNP'), ('Photocopiers', 'NNP'), ('·', 'NNP'), ('Still', 'RB'), ('Video', 'NNP'), ('Cameras', 'NNP'), ('·', 'NNP'), ('Television', 'NNP'), ('Domestic', 'NNP'), ('Goods', 'NNP'), ('·', 'NNP'), ('Microwave', 'NNP'), ('Ovens', 'NNP'), ('·', 'NNP'), ('Refrigerators', 'NNP'), ('·', 'NNP'), ('Toasters', 'NNP'), ('·', 'NNP'), ('Vacuum', 'NNP'), ('Cleaners', 'NNP'), ('·', 'NNP'), ('Washing', 'NNP'), ('Machines', 'NNP'), ('Environment', 'NNP'), ('Control', 'NNP'), ('·', 'NNP'), ('Air', 'NNP'), ('Conditioners/Dryers/Heaters', 'NNP'), ('·', 'POS'), ('Humidifiers', 'NNP'), ('Advantages', 'NNP'), ('FLSs', 'NNP'), ('·', 'NNP'), ('Mathematical', 'NNP'), ('concepts', 'NNS'), ('within', 'IN'), ('fuzzy', 'JJ'), ('reasoning', 'VBG'), ('simple', 'NN'), ('.', '.')]

 (S
  (NP Application/NNP Areas/NNP Fuzzy/NNP Logic/NNP)
  (NP The/DT key/JJ application/NN areas/NNS)
  fuzzy/VBP
  logic/JJ
  given/VBN
  (NP −/JJ Automotive/NNP)
  Systems/NNPS
  (NP
    ·/NNP
    Automatic/NNP
    Gearboxes/NNP
    ·/NNP
    Four-Wheel/NNP
    Steering/NNP
    ·/NNP
    Vehicle/NNP
    environment/NN
    control/NN
    Consumer/NNP
    Electronic/NNP
    Goods/NNP
    ·/NNP
    Hi-Fi/NNP
    Systems/NNP
    ·/NNP
    Photocopiers/NNP
    ·/NNP)
  Still/RB
  (NP
    Video/NNP
    Cameras/NNP
    ·/NNP
    Television/NNP
    Domestic/NNP
    Goods/NNP
    ·/NNP
    Microwave/NNP
    Ovens/NNP
    ·/NNP
    Refrigerators/NNP
    ·/NNP
    Toasters/NNP
    ·/NNP
    Vacuum/NNP
    Cleaners/NNP
    ·/NNP
    Washing/NNP
    Machines/NNP
    Environment/NNP
    Control/NNP
    ·/NNP
    Air/NNP
    Conditioners/Dryers/Heaters/NNP)
  ·/POS
  (NP
    Humidifiers/NNP
    Advantages/NNP
    FLSs/NNP
    ·/NNP
    Mathematical/NNP
    concepts/NNS)
  within/IN
  fuzzy/JJ
  reasoning/VBG
  (NP simple/NN)
  ./.) 


>> Noun Phrases are: 
 ['Application Areas Fuzzy Logic', 'The key application areas', '− Automotive', '· Automatic Gearboxes · Four-Wheel Steering · Vehicle environment control Consumer Electronic Goods · Hi-Fi Systems · Photocopiers ·', 'Video Cameras · Television Domestic Goods · Microwave Ovens · Refrigerators · Toasters · Vacuum Cleaners · Washing Machines Environment Control · Air Conditioners/Dryers/Heaters', 'Humidifiers Advantages FLSs · Mathematical concepts', 'simple']

>> Named Entities are: 
 [('PERSON', 'Areas Fuzzy'), ('ORGANIZATION', 'Automotive Systems'), ('ORGANIZATION', 'Consumer Electronic Goods'), ('PERSON', 'Video Cameras'), ('PERSON', 'Goods'), ('PERSON', 'Microwave Ovens'), ('PERSON', 'Vacuum Cleaners'), ('PERSON', 'Machines Environment Control'), ('ORGANIZATION', 'Humidifiers Advantages')] 

>> Stemming using Porter Stemmer: 
 [('Application', 'applic'), ('Areas', 'area'), ('Fuzzy', 'fuzzi'), ('Logic', 'logic'), ('The', 'the'), ('key', 'key'), ('application', 'applic'), ('areas', 'area'), ('fuzzy', 'fuzzi'), ('logic', 'logic'), ('given', 'given'), ('−', '−'), ('Automotive', 'automot'), ('Systems', 'system'), ('·', '·'), ('Automatic', 'automat'), ('Gearboxes', 'gearbox'), ('·', '·'), ('Four-Wheel', 'four-wheel'), ('Steering', 'steer'), ('·', '·'), ('Vehicle', 'vehicl'), ('environment', 'environ'), ('control', 'control'), ('Consumer', 'consum'), ('Electronic', 'electron'), ('Goods', 'good'), ('·', '·'), ('Hi-Fi', 'hi-fi'), ('Systems', 'system'), ('·', '·'), ('Photocopiers', 'photocopi'), ('·', '·'), ('Still', 'still'), ('Video', 'video'), ('Cameras', 'camera'), ('·', '·'), ('Television', 'televis'), ('Domestic', 'domest'), ('Goods', 'good'), ('·', '·'), ('Microwave', 'microwav'), ('Ovens', 'oven'), ('·', '·'), ('Refrigerators', 'refriger'), ('·', '·'), ('Toasters', 'toaster'), ('·', '·'), ('Vacuum', 'vacuum'), ('Cleaners', 'cleaner'), ('·', '·'), ('Washing', 'wash'), ('Machines', 'machin'), ('Environment', 'environ'), ('Control', 'control'), ('·', '·'), ('Air', 'air'), ('Conditioners/Dryers/Heaters', 'conditioners/dryers/heat'), ('·', '·'), ('Humidifiers', 'humidifi'), ('Advantages', 'advantag'), ('FLSs', 'flss'), ('·', '·'), ('Mathematical', 'mathemat'), ('concepts', 'concept'), ('within', 'within'), ('fuzzy', 'fuzzi'), ('reasoning', 'reason'), ('simple', 'simpl'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Application', 'applic'), ('Areas', 'area'), ('Fuzzy', 'fuzzi'), ('Logic', 'logic'), ('The', 'the'), ('key', 'key'), ('application', 'applic'), ('areas', 'area'), ('fuzzy', 'fuzzi'), ('logic', 'logic'), ('given', 'given'), ('−', '−'), ('Automotive', 'automot'), ('Systems', 'system'), ('·', '·'), ('Automatic', 'automat'), ('Gearboxes', 'gearbox'), ('·', '·'), ('Four-Wheel', 'four-wheel'), ('Steering', 'steer'), ('·', '·'), ('Vehicle', 'vehicl'), ('environment', 'environ'), ('control', 'control'), ('Consumer', 'consum'), ('Electronic', 'electron'), ('Goods', 'good'), ('·', '·'), ('Hi-Fi', 'hi-fi'), ('Systems', 'system'), ('·', '·'), ('Photocopiers', 'photocopi'), ('·', '·'), ('Still', 'still'), ('Video', 'video'), ('Cameras', 'camera'), ('·', '·'), ('Television', 'televis'), ('Domestic', 'domest'), ('Goods', 'good'), ('·', '·'), ('Microwave', 'microwav'), ('Ovens', 'oven'), ('·', '·'), ('Refrigerators', 'refriger'), ('·', '·'), ('Toasters', 'toaster'), ('·', '·'), ('Vacuum', 'vacuum'), ('Cleaners', 'cleaner'), ('·', '·'), ('Washing', 'wash'), ('Machines', 'machin'), ('Environment', 'environ'), ('Control', 'control'), ('·', '·'), ('Air', 'air'), ('Conditioners/Dryers/Heaters', 'conditioners/dryers/heat'), ('·', '·'), ('Humidifiers', 'humidifi'), ('Advantages', 'advantag'), ('FLSs', 'flss'), ('·', '·'), ('Mathematical', 'mathemat'), ('concepts', 'concept'), ('within', 'within'), ('fuzzy', 'fuzzi'), ('reasoning', 'reason'), ('simple', 'simpl'), ('.', '.')]

>> Lemmatization: 
 [('Application', 'Application'), ('Areas', 'Areas'), ('Fuzzy', 'Fuzzy'), ('Logic', 'Logic'), ('The', 'The'), ('key', 'key'), ('application', 'application'), ('areas', 'area'), ('fuzzy', 'fuzzy'), ('logic', 'logic'), ('given', 'given'), ('−', '−'), ('Automotive', 'Automotive'), ('Systems', 'Systems'), ('·', '·'), ('Automatic', 'Automatic'), ('Gearboxes', 'Gearboxes'), ('·', '·'), ('Four-Wheel', 'Four-Wheel'), ('Steering', 'Steering'), ('·', '·'), ('Vehicle', 'Vehicle'), ('environment', 'environment'), ('control', 'control'), ('Consumer', 'Consumer'), ('Electronic', 'Electronic'), ('Goods', 'Goods'), ('·', '·'), ('Hi-Fi', 'Hi-Fi'), ('Systems', 'Systems'), ('·', '·'), ('Photocopiers', 'Photocopiers'), ('·', '·'), ('Still', 'Still'), ('Video', 'Video'), ('Cameras', 'Cameras'), ('·', '·'), ('Television', 'Television'), ('Domestic', 'Domestic'), ('Goods', 'Goods'), ('·', '·'), ('Microwave', 'Microwave'), ('Ovens', 'Ovens'), ('·', '·'), ('Refrigerators', 'Refrigerators'), ('·', '·'), ('Toasters', 'Toasters'), ('·', '·'), ('Vacuum', 'Vacuum'), ('Cleaners', 'Cleaners'), ('·', '·'), ('Washing', 'Washing'), ('Machines', 'Machines'), ('Environment', 'Environment'), ('Control', 'Control'), ('·', '·'), ('Air', 'Air'), ('Conditioners/Dryers/Heaters', 'Conditioners/Dryers/Heaters'), ('·', '·'), ('Humidifiers', 'Humidifiers'), ('Advantages', 'Advantages'), ('FLSs', 'FLSs'), ('·', '·'), ('Mathematical', 'Mathematical'), ('concepts', 'concept'), ('within', 'within'), ('fuzzy', 'fuzzy'), ('reasoning', 'reasoning'), ('simple', 'simple'), ('.', '.')]



============================ Sentence 34 =============================

· You can modify a FLS by just adding or deleting rules due to flexibility of fuzzy logic. 


>> Tokens are: 
 ['·', 'You', 'modify', 'FLS', 'adding', 'deleting', 'rules', 'due', 'flexibility', 'fuzzy', 'logic', '.']

>> Bigrams are: 
 [('·', 'You'), ('You', 'modify'), ('modify', 'FLS'), ('FLS', 'adding'), ('adding', 'deleting'), ('deleting', 'rules'), ('rules', 'due'), ('due', 'flexibility'), ('flexibility', 'fuzzy'), ('fuzzy', 'logic'), ('logic', '.')]

>> Trigrams are: 
 [('·', 'You', 'modify'), ('You', 'modify', 'FLS'), ('modify', 'FLS', 'adding'), ('FLS', 'adding', 'deleting'), ('adding', 'deleting', 'rules'), ('deleting', 'rules', 'due'), ('rules', 'due', 'flexibility'), ('due', 'flexibility', 'fuzzy'), ('flexibility', 'fuzzy', 'logic'), ('fuzzy', 'logic', '.')]

>> POS Tags are: 
 [('·', 'NN'), ('You', 'PRP'), ('modify', 'VBP'), ('FLS', 'NNP'), ('adding', 'VBG'), ('deleting', 'NN'), ('rules', 'NNS'), ('due', 'JJ'), ('flexibility', 'NN'), ('fuzzy', 'JJ'), ('logic', 'NN'), ('.', '.')]

 (S
  (NP ·/NN)
  You/PRP
  modify/VBP
  (NP FLS/NNP)
  adding/VBG
  (NP deleting/NN rules/NNS)
  (NP due/JJ flexibility/NN)
  (NP fuzzy/JJ logic/NN)
  ./.) 


>> Noun Phrases are: 
 ['·', 'FLS', 'deleting rules', 'due flexibility', 'fuzzy logic']

>> Named Entities are: 
 [('ORGANIZATION', 'FLS')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('You', 'you'), ('modify', 'modifi'), ('FLS', 'fl'), ('adding', 'ad'), ('deleting', 'delet'), ('rules', 'rule'), ('due', 'due'), ('flexibility', 'flexibl'), ('fuzzy', 'fuzzi'), ('logic', 'logic'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('You', 'you'), ('modify', 'modifi'), ('FLS', 'fls'), ('adding', 'ad'), ('deleting', 'delet'), ('rules', 'rule'), ('due', 'due'), ('flexibility', 'flexibl'), ('fuzzy', 'fuzzi'), ('logic', 'logic'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('You', 'You'), ('modify', 'modify'), ('FLS', 'FLS'), ('adding', 'adding'), ('deleting', 'deleting'), ('rules', 'rule'), ('due', 'due'), ('flexibility', 'flexibility'), ('fuzzy', 'fuzzy'), ('logic', 'logic'), ('.', '.')]



============================ Sentence 35 =============================

· Fuzzy logic Systems can take imprecise, distorted, noisy input information. 


>> Tokens are: 
 ['·', 'Fuzzy', 'logic', 'Systems', 'take', 'imprecise', ',', 'distorted', ',', 'noisy', 'input', 'information', '.']

>> Bigrams are: 
 [('·', 'Fuzzy'), ('Fuzzy', 'logic'), ('logic', 'Systems'), ('Systems', 'take'), ('take', 'imprecise'), ('imprecise', ','), (',', 'distorted'), ('distorted', ','), (',', 'noisy'), ('noisy', 'input'), ('input', 'information'), ('information', '.')]

>> Trigrams are: 
 [('·', 'Fuzzy', 'logic'), ('Fuzzy', 'logic', 'Systems'), ('logic', 'Systems', 'take'), ('Systems', 'take', 'imprecise'), ('take', 'imprecise', ','), ('imprecise', ',', 'distorted'), (',', 'distorted', ','), ('distorted', ',', 'noisy'), (',', 'noisy', 'input'), ('noisy', 'input', 'information'), ('input', 'information', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Fuzzy', 'NNP'), ('logic', 'JJ'), ('Systems', 'NNP'), ('take', 'NN'), ('imprecise', 'NN'), (',', ','), ('distorted', 'VBN'), (',', ','), ('noisy', 'JJ'), ('input', 'NN'), ('information', 'NN'), ('.', '.')]

 (S
  (NP ·/JJ Fuzzy/NNP)
  (NP logic/JJ Systems/NNP take/NN imprecise/NN)
  ,/,
  distorted/VBN
  ,/,
  (NP noisy/JJ input/NN information/NN)
  ./.) 


>> Noun Phrases are: 
 ['· Fuzzy', 'logic Systems take imprecise', 'noisy input information']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Fuzzy', 'fuzzi'), ('logic', 'logic'), ('Systems', 'system'), ('take', 'take'), ('imprecise', 'imprecis'), (',', ','), ('distorted', 'distort'), (',', ','), ('noisy', 'noisi'), ('input', 'input'), ('information', 'inform'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Fuzzy', 'fuzzi'), ('logic', 'logic'), ('Systems', 'system'), ('take', 'take'), ('imprecise', 'imprecis'), (',', ','), ('distorted', 'distort'), (',', ','), ('noisy', 'noisi'), ('input', 'input'), ('information', 'inform'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Fuzzy', 'Fuzzy'), ('logic', 'logic'), ('Systems', 'Systems'), ('take', 'take'), ('imprecise', 'imprecise'), (',', ','), ('distorted', 'distorted'), (',', ','), ('noisy', 'noisy'), ('input', 'input'), ('information', 'information'), ('.', '.')]



============================ Sentence 36 =============================

· FLSs are easy to construct and understand. 


>> Tokens are: 
 ['·', 'FLSs', 'easy', 'construct', 'understand', '.']

>> Bigrams are: 
 [('·', 'FLSs'), ('FLSs', 'easy'), ('easy', 'construct'), ('construct', 'understand'), ('understand', '.')]

>> Trigrams are: 
 [('·', 'FLSs', 'easy'), ('FLSs', 'easy', 'construct'), ('easy', 'construct', 'understand'), ('construct', 'understand', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('FLSs', 'NNP'), ('easy', 'JJ'), ('construct', 'NN'), ('understand', 'NN'), ('.', '.')]

 (S (NP ·/JJ FLSs/NNP) (NP easy/JJ construct/NN understand/NN) ./.) 


>> Noun Phrases are: 
 ['· FLSs', 'easy construct understand']

>> Named Entities are: 
 [('ORGANIZATION', 'FLSs')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('FLSs', 'flss'), ('easy', 'easi'), ('construct', 'construct'), ('understand', 'understand'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('FLSs', 'flss'), ('easy', 'easi'), ('construct', 'construct'), ('understand', 'understand'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('FLSs', 'FLSs'), ('easy', 'easy'), ('construct', 'construct'), ('understand', 'understand'), ('.', '.')]



============================ Sentence 37 =============================

· Fuzzy logic is a solution to complex problems in all fields of life, including medicine, as it resembles human reasoning and decision making. 


>> Tokens are: 
 ['·', 'Fuzzy', 'logic', 'solution', 'complex', 'problems', 'fields', 'life', ',', 'including', 'medicine', ',', 'resembles', 'human', 'reasoning', 'decision', 'making', '.']

>> Bigrams are: 
 [('·', 'Fuzzy'), ('Fuzzy', 'logic'), ('logic', 'solution'), ('solution', 'complex'), ('complex', 'problems'), ('problems', 'fields'), ('fields', 'life'), ('life', ','), (',', 'including'), ('including', 'medicine'), ('medicine', ','), (',', 'resembles'), ('resembles', 'human'), ('human', 'reasoning'), ('reasoning', 'decision'), ('decision', 'making'), ('making', '.')]

>> Trigrams are: 
 [('·', 'Fuzzy', 'logic'), ('Fuzzy', 'logic', 'solution'), ('logic', 'solution', 'complex'), ('solution', 'complex', 'problems'), ('complex', 'problems', 'fields'), ('problems', 'fields', 'life'), ('fields', 'life', ','), ('life', ',', 'including'), (',', 'including', 'medicine'), ('including', 'medicine', ','), ('medicine', ',', 'resembles'), (',', 'resembles', 'human'), ('resembles', 'human', 'reasoning'), ('human', 'reasoning', 'decision'), ('reasoning', 'decision', 'making'), ('decision', 'making', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Fuzzy', 'NNP'), ('logic', 'JJ'), ('solution', 'NN'), ('complex', 'NN'), ('problems', 'NNS'), ('fields', 'NNS'), ('life', 'NN'), (',', ','), ('including', 'VBG'), ('medicine', 'NN'), (',', ','), ('resembles', 'VBZ'), ('human', 'JJ'), ('reasoning', 'VBG'), ('decision', 'NN'), ('making', 'NN'), ('.', '.')]

 (S
  (NP ·/JJ Fuzzy/NNP)
  (NP
    logic/JJ
    solution/NN
    complex/NN
    problems/NNS
    fields/NNS
    life/NN)
  ,/,
  including/VBG
  (NP medicine/NN)
  ,/,
  resembles/VBZ
  human/JJ
  reasoning/VBG
  (NP decision/NN making/NN)
  ./.) 


>> Noun Phrases are: 
 ['· Fuzzy', 'logic solution complex problems fields life', 'medicine', 'decision making']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Fuzzy', 'fuzzi'), ('logic', 'logic'), ('solution', 'solut'), ('complex', 'complex'), ('problems', 'problem'), ('fields', 'field'), ('life', 'life'), (',', ','), ('including', 'includ'), ('medicine', 'medicin'), (',', ','), ('resembles', 'resembl'), ('human', 'human'), ('reasoning', 'reason'), ('decision', 'decis'), ('making', 'make'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Fuzzy', 'fuzzi'), ('logic', 'logic'), ('solution', 'solut'), ('complex', 'complex'), ('problems', 'problem'), ('fields', 'field'), ('life', 'life'), (',', ','), ('including', 'includ'), ('medicine', 'medicin'), (',', ','), ('resembles', 'resembl'), ('human', 'human'), ('reasoning', 'reason'), ('decision', 'decis'), ('making', 'make'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Fuzzy', 'Fuzzy'), ('logic', 'logic'), ('solution', 'solution'), ('complex', 'complex'), ('problems', 'problem'), ('fields', 'field'), ('life', 'life'), (',', ','), ('including', 'including'), ('medicine', 'medicine'), (',', ','), ('resembles', 'resembles'), ('human', 'human'), ('reasoning', 'reasoning'), ('decision', 'decision'), ('making', 'making'), ('.', '.')]



============================ Sentence 38 =============================

Disadvantages of FLSs · There is no systematic approach to fuzzy system designing. 


>> Tokens are: 
 ['Disadvantages', 'FLSs', '·', 'There', 'systematic', 'approach', 'fuzzy', 'system', 'designing', '.']

>> Bigrams are: 
 [('Disadvantages', 'FLSs'), ('FLSs', '·'), ('·', 'There'), ('There', 'systematic'), ('systematic', 'approach'), ('approach', 'fuzzy'), ('fuzzy', 'system'), ('system', 'designing'), ('designing', '.')]

>> Trigrams are: 
 [('Disadvantages', 'FLSs', '·'), ('FLSs', '·', 'There'), ('·', 'There', 'systematic'), ('There', 'systematic', 'approach'), ('systematic', 'approach', 'fuzzy'), ('approach', 'fuzzy', 'system'), ('fuzzy', 'system', 'designing'), ('system', 'designing', '.')]

>> POS Tags are: 
 [('Disadvantages', 'NNS'), ('FLSs', 'NNP'), ('·', 'VBP'), ('There', 'EX'), ('systematic', 'JJ'), ('approach', 'NN'), ('fuzzy', 'NN'), ('system', 'NN'), ('designing', 'VBG'), ('.', '.')]

 (S
  (NP Disadvantages/NNS FLSs/NNP)
  ·/VBP
  There/EX
  (NP systematic/JJ approach/NN fuzzy/NN system/NN)
  designing/VBG
  ./.) 


>> Noun Phrases are: 
 ['Disadvantages FLSs', 'systematic approach fuzzy system']

>> Named Entities are: 
 [('ORGANIZATION', 'FLSs')] 

>> Stemming using Porter Stemmer: 
 [('Disadvantages', 'disadvantag'), ('FLSs', 'flss'), ('·', '·'), ('There', 'there'), ('systematic', 'systemat'), ('approach', 'approach'), ('fuzzy', 'fuzzi'), ('system', 'system'), ('designing', 'design'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Disadvantages', 'disadvantag'), ('FLSs', 'flss'), ('·', '·'), ('There', 'there'), ('systematic', 'systemat'), ('approach', 'approach'), ('fuzzy', 'fuzzi'), ('system', 'system'), ('designing', 'design'), ('.', '.')]

>> Lemmatization: 
 [('Disadvantages', 'Disadvantages'), ('FLSs', 'FLSs'), ('·', '·'), ('There', 'There'), ('systematic', 'systematic'), ('approach', 'approach'), ('fuzzy', 'fuzzy'), ('system', 'system'), ('designing', 'designing'), ('.', '.')]



============================ Sentence 39 =============================

· They are understandable only when simple. 


>> Tokens are: 
 ['·', 'They', 'understandable', 'simple', '.']

>> Bigrams are: 
 [('·', 'They'), ('They', 'understandable'), ('understandable', 'simple'), ('simple', '.')]

>> Trigrams are: 
 [('·', 'They', 'understandable'), ('They', 'understandable', 'simple'), ('understandable', 'simple', '.')]

>> POS Tags are: 
 [('·', 'NN'), ('They', 'PRP'), ('understandable', 'JJ'), ('simple', 'NN'), ('.', '.')]

 (S (NP ·/NN) They/PRP (NP understandable/JJ simple/NN) ./.) 


>> Noun Phrases are: 
 ['·', 'understandable simple']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('They', 'they'), ('understandable', 'understand'), ('simple', 'simpl'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('They', 'they'), ('understandable', 'understand'), ('simple', 'simpl'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('They', 'They'), ('understandable', 'understandable'), ('simple', 'simple'), ('.', '.')]



============================ Sentence 40 =============================

· They are suitable for the problems which do not need high accuracy. 


>> Tokens are: 
 ['·', 'They', 'suitable', 'problems', 'need', 'high', 'accuracy', '.']

>> Bigrams are: 
 [('·', 'They'), ('They', 'suitable'), ('suitable', 'problems'), ('problems', 'need'), ('need', 'high'), ('high', 'accuracy'), ('accuracy', '.')]

>> Trigrams are: 
 [('·', 'They', 'suitable'), ('They', 'suitable', 'problems'), ('suitable', 'problems', 'need'), ('problems', 'need', 'high'), ('need', 'high', 'accuracy'), ('high', 'accuracy', '.')]

>> POS Tags are: 
 [('·', 'NN'), ('They', 'PRP'), ('suitable', 'VBP'), ('problems', 'NNS'), ('need', 'VBP'), ('high', 'JJ'), ('accuracy', 'NN'), ('.', '.')]

 (S
  (NP ·/NN)
  They/PRP
  suitable/VBP
  (NP problems/NNS)
  need/VBP
  (NP high/JJ accuracy/NN)
  ./.) 


>> Noun Phrases are: 
 ['·', 'problems', 'high accuracy']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('They', 'they'), ('suitable', 'suitabl'), ('problems', 'problem'), ('need', 'need'), ('high', 'high'), ('accuracy', 'accuraci'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('They', 'they'), ('suitable', 'suitabl'), ('problems', 'problem'), ('need', 'need'), ('high', 'high'), ('accuracy', 'accuraci'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('They', 'They'), ('suitable', 'suitable'), ('problems', 'problem'), ('need', 'need'), ('high', 'high'), ('accuracy', 'accuracy'), ('.', '.')]

