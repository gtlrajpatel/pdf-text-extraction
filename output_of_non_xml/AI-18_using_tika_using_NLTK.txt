				 *** Text Processing using NLTK *** 


============================ Sentence 1 =============================

AI-18 FeedBack ANN Here, feedback loops are allowed. 


>> Tokens are: 
 ['AI-18', 'FeedBack', 'ANN', 'Here', ',', 'feedback', 'loops', 'allowed', '.']

>> Bigrams are: 
 [('AI-18', 'FeedBack'), ('FeedBack', 'ANN'), ('ANN', 'Here'), ('Here', ','), (',', 'feedback'), ('feedback', 'loops'), ('loops', 'allowed'), ('allowed', '.')]

>> Trigrams are: 
 [('AI-18', 'FeedBack', 'ANN'), ('FeedBack', 'ANN', 'Here'), ('ANN', 'Here', ','), ('Here', ',', 'feedback'), (',', 'feedback', 'loops'), ('feedback', 'loops', 'allowed'), ('loops', 'allowed', '.')]

>> POS Tags are: 
 [('AI-18', 'NNP'), ('FeedBack', 'NNP'), ('ANN', 'NNP'), ('Here', 'RB'), (',', ','), ('feedback', 'NN'), ('loops', 'NN'), ('allowed', 'VBN'), ('.', '.')]

 (S
  (NP AI-18/NNP FeedBack/NNP ANN/NNP)
  Here/RB
  ,/,
  (NP feedback/NN loops/NN)
  allowed/VBN
  ./.) 


>> Noun Phrases are: 
 ['AI-18 FeedBack ANN', 'feedback loops']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('AI-18', 'ai-18'), ('FeedBack', 'feedback'), ('ANN', 'ann'), ('Here', 'here'), (',', ','), ('feedback', 'feedback'), ('loops', 'loop'), ('allowed', 'allow'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('AI-18', 'ai-18'), ('FeedBack', 'feedback'), ('ANN', 'ann'), ('Here', 'here'), (',', ','), ('feedback', 'feedback'), ('loops', 'loop'), ('allowed', 'allow'), ('.', '.')]

>> Lemmatization: 
 [('AI-18', 'AI-18'), ('FeedBack', 'FeedBack'), ('ANN', 'ANN'), ('Here', 'Here'), (',', ','), ('feedback', 'feedback'), ('loops', 'loop'), ('allowed', 'allowed'), ('.', '.')]



============================ Sentence 2 =============================

They are used in content addressable memories. 


>> Tokens are: 
 ['They', 'used', 'content', 'addressable', 'memories', '.']

>> Bigrams are: 
 [('They', 'used'), ('used', 'content'), ('content', 'addressable'), ('addressable', 'memories'), ('memories', '.')]

>> Trigrams are: 
 [('They', 'used', 'content'), ('used', 'content', 'addressable'), ('content', 'addressable', 'memories'), ('addressable', 'memories', '.')]

>> POS Tags are: 
 [('They', 'PRP'), ('used', 'VBD'), ('content', 'NN'), ('addressable', 'JJ'), ('memories', 'NNS'), ('.', '.')]

 (S
  They/PRP
  used/VBD
  (NP content/NN)
  (NP addressable/JJ memories/NNS)
  ./.) 


>> Noun Phrases are: 
 ['content', 'addressable memories']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('They', 'they'), ('used', 'use'), ('content', 'content'), ('addressable', 'address'), ('memories', 'memori'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('They', 'they'), ('used', 'use'), ('content', 'content'), ('addressable', 'address'), ('memories', 'memori'), ('.', '.')]

>> Lemmatization: 
 [('They', 'They'), ('used', 'used'), ('content', 'content'), ('addressable', 'addressable'), ('memories', 'memory'), ('.', '.')]



============================ Sentence 3 =============================

Working of ANNs In the topology diagrams shown, each arrow represents a connection between two neurons and indicates the pathway for the flow of information. 


>> Tokens are: 
 ['Working', 'ANNs', 'In', 'topology', 'diagrams', 'shown', ',', 'arrow', 'represents', 'connection', 'two', 'neurons', 'indicates', 'pathway', 'flow', 'information', '.']

>> Bigrams are: 
 [('Working', 'ANNs'), ('ANNs', 'In'), ('In', 'topology'), ('topology', 'diagrams'), ('diagrams', 'shown'), ('shown', ','), (',', 'arrow'), ('arrow', 'represents'), ('represents', 'connection'), ('connection', 'two'), ('two', 'neurons'), ('neurons', 'indicates'), ('indicates', 'pathway'), ('pathway', 'flow'), ('flow', 'information'), ('information', '.')]

>> Trigrams are: 
 [('Working', 'ANNs', 'In'), ('ANNs', 'In', 'topology'), ('In', 'topology', 'diagrams'), ('topology', 'diagrams', 'shown'), ('diagrams', 'shown', ','), ('shown', ',', 'arrow'), (',', 'arrow', 'represents'), ('arrow', 'represents', 'connection'), ('represents', 'connection', 'two'), ('connection', 'two', 'neurons'), ('two', 'neurons', 'indicates'), ('neurons', 'indicates', 'pathway'), ('indicates', 'pathway', 'flow'), ('pathway', 'flow', 'information'), ('flow', 'information', '.')]

>> POS Tags are: 
 [('Working', 'VBG'), ('ANNs', 'NNP'), ('In', 'IN'), ('topology', 'NN'), ('diagrams', 'NNS'), ('shown', 'VBN'), (',', ','), ('arrow', 'JJ'), ('represents', 'VBZ'), ('connection', 'NN'), ('two', 'CD'), ('neurons', 'NNS'), ('indicates', 'VBZ'), ('pathway', 'RB'), ('flow', 'JJ'), ('information', 'NN'), ('.', '.')]

 (S
  Working/VBG
  (NP ANNs/NNP)
  In/IN
  (NP topology/NN diagrams/NNS)
  shown/VBN
  ,/,
  arrow/JJ
  represents/VBZ
  (NP connection/NN)
  two/CD
  (NP neurons/NNS)
  indicates/VBZ
  pathway/RB
  (NP flow/JJ information/NN)
  ./.) 


>> Noun Phrases are: 
 ['ANNs', 'topology diagrams', 'connection', 'neurons', 'flow information']

>> Named Entities are: 
 [('ORGANIZATION', 'ANNs')] 

>> Stemming using Porter Stemmer: 
 [('Working', 'work'), ('ANNs', 'ann'), ('In', 'in'), ('topology', 'topolog'), ('diagrams', 'diagram'), ('shown', 'shown'), (',', ','), ('arrow', 'arrow'), ('represents', 'repres'), ('connection', 'connect'), ('two', 'two'), ('neurons', 'neuron'), ('indicates', 'indic'), ('pathway', 'pathway'), ('flow', 'flow'), ('information', 'inform'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Working', 'work'), ('ANNs', 'ann'), ('In', 'in'), ('topology', 'topolog'), ('diagrams', 'diagram'), ('shown', 'shown'), (',', ','), ('arrow', 'arrow'), ('represents', 'repres'), ('connection', 'connect'), ('two', 'two'), ('neurons', 'neuron'), ('indicates', 'indic'), ('pathway', 'pathway'), ('flow', 'flow'), ('information', 'inform'), ('.', '.')]

>> Lemmatization: 
 [('Working', 'Working'), ('ANNs', 'ANNs'), ('In', 'In'), ('topology', 'topology'), ('diagrams', 'diagram'), ('shown', 'shown'), (',', ','), ('arrow', 'arrow'), ('represents', 'represents'), ('connection', 'connection'), ('two', 'two'), ('neurons', 'neuron'), ('indicates', 'indicates'), ('pathway', 'pathway'), ('flow', 'flow'), ('information', 'information'), ('.', '.')]



============================ Sentence 4 =============================

Each connection has a weight, an integer number that controls the signal between the two neurons. 


>> Tokens are: 
 ['Each', 'connection', 'weight', ',', 'integer', 'number', 'controls', 'signal', 'two', 'neurons', '.']

>> Bigrams are: 
 [('Each', 'connection'), ('connection', 'weight'), ('weight', ','), (',', 'integer'), ('integer', 'number'), ('number', 'controls'), ('controls', 'signal'), ('signal', 'two'), ('two', 'neurons'), ('neurons', '.')]

>> Trigrams are: 
 [('Each', 'connection', 'weight'), ('connection', 'weight', ','), ('weight', ',', 'integer'), (',', 'integer', 'number'), ('integer', 'number', 'controls'), ('number', 'controls', 'signal'), ('controls', 'signal', 'two'), ('signal', 'two', 'neurons'), ('two', 'neurons', '.')]

>> POS Tags are: 
 [('Each', 'DT'), ('connection', 'NN'), ('weight', 'NN'), (',', ','), ('integer', 'NN'), ('number', 'NN'), ('controls', 'VBZ'), ('signal', 'JJ'), ('two', 'CD'), ('neurons', 'NNS'), ('.', '.')]

 (S
  (NP Each/DT connection/NN weight/NN)
  ,/,
  (NP integer/NN number/NN)
  controls/VBZ
  signal/JJ
  two/CD
  (NP neurons/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Each connection weight', 'integer number', 'neurons']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Each', 'each'), ('connection', 'connect'), ('weight', 'weight'), (',', ','), ('integer', 'integ'), ('number', 'number'), ('controls', 'control'), ('signal', 'signal'), ('two', 'two'), ('neurons', 'neuron'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Each', 'each'), ('connection', 'connect'), ('weight', 'weight'), (',', ','), ('integer', 'integ'), ('number', 'number'), ('controls', 'control'), ('signal', 'signal'), ('two', 'two'), ('neurons', 'neuron'), ('.', '.')]

>> Lemmatization: 
 [('Each', 'Each'), ('connection', 'connection'), ('weight', 'weight'), (',', ','), ('integer', 'integer'), ('number', 'number'), ('controls', 'control'), ('signal', 'signal'), ('two', 'two'), ('neurons', 'neuron'), ('.', '.')]



============================ Sentence 5 =============================

If the network generates a “good or desired” output, there is no need to adjust the weights. 


>> Tokens are: 
 ['If', 'network', 'generates', '“', 'good', 'desired', '”', 'output', ',', 'need', 'adjust', 'weights', '.']

>> Bigrams are: 
 [('If', 'network'), ('network', 'generates'), ('generates', '“'), ('“', 'good'), ('good', 'desired'), ('desired', '”'), ('”', 'output'), ('output', ','), (',', 'need'), ('need', 'adjust'), ('adjust', 'weights'), ('weights', '.')]

>> Trigrams are: 
 [('If', 'network', 'generates'), ('network', 'generates', '“'), ('generates', '“', 'good'), ('“', 'good', 'desired'), ('good', 'desired', '”'), ('desired', '”', 'output'), ('”', 'output', ','), ('output', ',', 'need'), (',', 'need', 'adjust'), ('need', 'adjust', 'weights'), ('adjust', 'weights', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('network', 'NN'), ('generates', 'NNS'), ('“', 'VBP'), ('good', 'JJ'), ('desired', 'VBN'), ('”', 'NNP'), ('output', 'NN'), (',', ','), ('need', 'VBP'), ('adjust', 'JJ'), ('weights', 'NNS'), ('.', '.')]

 (S
  If/IN
  (NP network/NN generates/NNS)
  “/VBP
  good/JJ
  desired/VBN
  (NP ”/NNP output/NN)
  ,/,
  need/VBP
  (NP adjust/JJ weights/NNS)
  ./.) 


>> Noun Phrases are: 
 ['network generates', '” output', 'adjust weights']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('network', 'network'), ('generates', 'gener'), ('“', '“'), ('good', 'good'), ('desired', 'desir'), ('”', '”'), ('output', 'output'), (',', ','), ('need', 'need'), ('adjust', 'adjust'), ('weights', 'weight'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('network', 'network'), ('generates', 'generat'), ('“', '“'), ('good', 'good'), ('desired', 'desir'), ('”', '”'), ('output', 'output'), (',', ','), ('need', 'need'), ('adjust', 'adjust'), ('weights', 'weight'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('network', 'network'), ('generates', 'generates'), ('“', '“'), ('good', 'good'), ('desired', 'desired'), ('”', '”'), ('output', 'output'), (',', ','), ('need', 'need'), ('adjust', 'adjust'), ('weights', 'weight'), ('.', '.')]



============================ Sentence 6 =============================

However, if the network generates a “poor or undesired” output or an error, then the system alters the weights in order to improve subsequent results. 


>> Tokens are: 
 ['However', ',', 'network', 'generates', '“', 'poor', 'undesired', '”', 'output', 'error', ',', 'system', 'alters', 'weights', 'order', 'improve', 'subsequent', 'results', '.']

>> Bigrams are: 
 [('However', ','), (',', 'network'), ('network', 'generates'), ('generates', '“'), ('“', 'poor'), ('poor', 'undesired'), ('undesired', '”'), ('”', 'output'), ('output', 'error'), ('error', ','), (',', 'system'), ('system', 'alters'), ('alters', 'weights'), ('weights', 'order'), ('order', 'improve'), ('improve', 'subsequent'), ('subsequent', 'results'), ('results', '.')]

>> Trigrams are: 
 [('However', ',', 'network'), (',', 'network', 'generates'), ('network', 'generates', '“'), ('generates', '“', 'poor'), ('“', 'poor', 'undesired'), ('poor', 'undesired', '”'), ('undesired', '”', 'output'), ('”', 'output', 'error'), ('output', 'error', ','), ('error', ',', 'system'), (',', 'system', 'alters'), ('system', 'alters', 'weights'), ('alters', 'weights', 'order'), ('weights', 'order', 'improve'), ('order', 'improve', 'subsequent'), ('improve', 'subsequent', 'results'), ('subsequent', 'results', '.')]

>> POS Tags are: 
 [('However', 'RB'), (',', ','), ('network', 'NN'), ('generates', 'NNS'), ('“', 'VBP'), ('poor', 'JJ'), ('undesired', 'JJ'), ('”', 'NNP'), ('output', 'NN'), ('error', 'NN'), (',', ','), ('system', 'NN'), ('alters', 'NNS'), ('weights', 'NNS'), ('order', 'NN'), ('improve', 'VB'), ('subsequent', 'JJ'), ('results', 'NNS'), ('.', '.')]

 (S
  However/RB
  ,/,
  (NP network/NN generates/NNS)
  “/VBP
  (NP poor/JJ undesired/JJ ”/NNP output/NN error/NN)
  ,/,
  (NP system/NN alters/NNS weights/NNS order/NN)
  improve/VB
  (NP subsequent/JJ results/NNS)
  ./.) 


>> Noun Phrases are: 
 ['network generates', 'poor undesired ” output error', 'system alters weights order', 'subsequent results']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('However', 'howev'), (',', ','), ('network', 'network'), ('generates', 'gener'), ('“', '“'), ('poor', 'poor'), ('undesired', 'undesir'), ('”', '”'), ('output', 'output'), ('error', 'error'), (',', ','), ('system', 'system'), ('alters', 'alter'), ('weights', 'weight'), ('order', 'order'), ('improve', 'improv'), ('subsequent', 'subsequ'), ('results', 'result'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('However', 'howev'), (',', ','), ('network', 'network'), ('generates', 'generat'), ('“', '“'), ('poor', 'poor'), ('undesired', 'undesir'), ('”', '”'), ('output', 'output'), ('error', 'error'), (',', ','), ('system', 'system'), ('alters', 'alter'), ('weights', 'weight'), ('order', 'order'), ('improve', 'improv'), ('subsequent', 'subsequ'), ('results', 'result'), ('.', '.')]

>> Lemmatization: 
 [('However', 'However'), (',', ','), ('network', 'network'), ('generates', 'generates'), ('“', '“'), ('poor', 'poor'), ('undesired', 'undesired'), ('”', '”'), ('output', 'output'), ('error', 'error'), (',', ','), ('system', 'system'), ('alters', 'alters'), ('weights', 'weight'), ('order', 'order'), ('improve', 'improve'), ('subsequent', 'subsequent'), ('results', 'result'), ('.', '.')]



============================ Sentence 7 =============================

Machine Learning in ANNs ANNs are capable of learning and they need to be trained. 


>> Tokens are: 
 ['Machine', 'Learning', 'ANNs', 'ANNs', 'capable', 'learning', 'need', 'trained', '.']

>> Bigrams are: 
 [('Machine', 'Learning'), ('Learning', 'ANNs'), ('ANNs', 'ANNs'), ('ANNs', 'capable'), ('capable', 'learning'), ('learning', 'need'), ('need', 'trained'), ('trained', '.')]

>> Trigrams are: 
 [('Machine', 'Learning', 'ANNs'), ('Learning', 'ANNs', 'ANNs'), ('ANNs', 'ANNs', 'capable'), ('ANNs', 'capable', 'learning'), ('capable', 'learning', 'need'), ('learning', 'need', 'trained'), ('need', 'trained', '.')]

>> POS Tags are: 
 [('Machine', 'NN'), ('Learning', 'NNP'), ('ANNs', 'NNP'), ('ANNs', 'NNP'), ('capable', 'JJ'), ('learning', 'VBG'), ('need', 'NN'), ('trained', 'VBN'), ('.', '.')]

 (S
  (NP Machine/NN Learning/NNP ANNs/NNP ANNs/NNP)
  capable/JJ
  learning/VBG
  (NP need/NN)
  trained/VBN
  ./.) 


>> Noun Phrases are: 
 ['Machine Learning ANNs ANNs', 'need']

>> Named Entities are: 
 [('PERSON', 'Machine Learning'), ('ORGANIZATION', 'ANNs')] 

>> Stemming using Porter Stemmer: 
 [('Machine', 'machin'), ('Learning', 'learn'), ('ANNs', 'ann'), ('ANNs', 'ann'), ('capable', 'capabl'), ('learning', 'learn'), ('need', 'need'), ('trained', 'train'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Machine', 'machin'), ('Learning', 'learn'), ('ANNs', 'ann'), ('ANNs', 'ann'), ('capable', 'capabl'), ('learning', 'learn'), ('need', 'need'), ('trained', 'train'), ('.', '.')]

>> Lemmatization: 
 [('Machine', 'Machine'), ('Learning', 'Learning'), ('ANNs', 'ANNs'), ('ANNs', 'ANNs'), ('capable', 'capable'), ('learning', 'learning'), ('need', 'need'), ('trained', 'trained'), ('.', '.')]



============================ Sentence 8 =============================

There are several learning strategies − · Supervised Learning − It involves a teacher that is scholar than the ANN itself. 


>> Tokens are: 
 ['There', 'several', 'learning', 'strategies', '−', '·', 'Supervised', 'Learning', '−', 'It', 'involves', 'teacher', 'scholar', 'ANN', '.']

>> Bigrams are: 
 [('There', 'several'), ('several', 'learning'), ('learning', 'strategies'), ('strategies', '−'), ('−', '·'), ('·', 'Supervised'), ('Supervised', 'Learning'), ('Learning', '−'), ('−', 'It'), ('It', 'involves'), ('involves', 'teacher'), ('teacher', 'scholar'), ('scholar', 'ANN'), ('ANN', '.')]

>> Trigrams are: 
 [('There', 'several', 'learning'), ('several', 'learning', 'strategies'), ('learning', 'strategies', '−'), ('strategies', '−', '·'), ('−', '·', 'Supervised'), ('·', 'Supervised', 'Learning'), ('Supervised', 'Learning', '−'), ('Learning', '−', 'It'), ('−', 'It', 'involves'), ('It', 'involves', 'teacher'), ('involves', 'teacher', 'scholar'), ('teacher', 'scholar', 'ANN'), ('scholar', 'ANN', '.')]

>> POS Tags are: 
 [('There', 'EX'), ('several', 'JJ'), ('learning', 'VBG'), ('strategies', 'NNS'), ('−', 'NNP'), ('·', 'NNP'), ('Supervised', 'VBD'), ('Learning', 'NNP'), ('−', 'IN'), ('It', 'PRP'), ('involves', 'VBZ'), ('teacher', 'CC'), ('scholar', 'JJ'), ('ANN', 'NNP'), ('.', '.')]

 (S
  There/EX
  several/JJ
  learning/VBG
  (NP strategies/NNS −/NNP ·/NNP)
  Supervised/VBD
  (NP Learning/NNP)
  −/IN
  It/PRP
  involves/VBZ
  teacher/CC
  (NP scholar/JJ ANN/NNP)
  ./.) 


>> Noun Phrases are: 
 ['strategies − ·', 'Learning', 'scholar ANN']

>> Named Entities are: 
 [('ORGANIZATION', 'ANN')] 

>> Stemming using Porter Stemmer: 
 [('There', 'there'), ('several', 'sever'), ('learning', 'learn'), ('strategies', 'strategi'), ('−', '−'), ('·', '·'), ('Supervised', 'supervis'), ('Learning', 'learn'), ('−', '−'), ('It', 'it'), ('involves', 'involv'), ('teacher', 'teacher'), ('scholar', 'scholar'), ('ANN', 'ann'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('There', 'there'), ('several', 'sever'), ('learning', 'learn'), ('strategies', 'strategi'), ('−', '−'), ('·', '·'), ('Supervised', 'supervis'), ('Learning', 'learn'), ('−', '−'), ('It', 'it'), ('involves', 'involv'), ('teacher', 'teacher'), ('scholar', 'scholar'), ('ANN', 'ann'), ('.', '.')]

>> Lemmatization: 
 [('There', 'There'), ('several', 'several'), ('learning', 'learning'), ('strategies', 'strategy'), ('−', '−'), ('·', '·'), ('Supervised', 'Supervised'), ('Learning', 'Learning'), ('−', '−'), ('It', 'It'), ('involves', 'involves'), ('teacher', 'teacher'), ('scholar', 'scholar'), ('ANN', 'ANN'), ('.', '.')]



============================ Sentence 9 =============================

For example, the teacher feeds some example data about which the teacher already knows the answers. 


>> Tokens are: 
 ['For', 'example', ',', 'teacher', 'feeds', 'example', 'data', 'teacher', 'already', 'knows', 'answers', '.']

>> Bigrams are: 
 [('For', 'example'), ('example', ','), (',', 'teacher'), ('teacher', 'feeds'), ('feeds', 'example'), ('example', 'data'), ('data', 'teacher'), ('teacher', 'already'), ('already', 'knows'), ('knows', 'answers'), ('answers', '.')]

>> Trigrams are: 
 [('For', 'example', ','), ('example', ',', 'teacher'), (',', 'teacher', 'feeds'), ('teacher', 'feeds', 'example'), ('feeds', 'example', 'data'), ('example', 'data', 'teacher'), ('data', 'teacher', 'already'), ('teacher', 'already', 'knows'), ('already', 'knows', 'answers'), ('knows', 'answers', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('example', 'NN'), (',', ','), ('teacher', 'RB'), ('feeds', 'JJ'), ('example', 'NN'), ('data', 'NNS'), ('teacher', 'RB'), ('already', 'RB'), ('knows', 'VBZ'), ('answers', 'NNS'), ('.', '.')]

 (S
  For/IN
  (NP example/NN)
  ,/,
  teacher/RB
  (NP feeds/JJ example/NN data/NNS)
  teacher/RB
  already/RB
  knows/VBZ
  (NP answers/NNS)
  ./.) 


>> Noun Phrases are: 
 ['example', 'feeds example data', 'answers']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('teacher', 'teacher'), ('feeds', 'feed'), ('example', 'exampl'), ('data', 'data'), ('teacher', 'teacher'), ('already', 'alreadi'), ('knows', 'know'), ('answers', 'answer'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('teacher', 'teacher'), ('feeds', 'feed'), ('example', 'exampl'), ('data', 'data'), ('teacher', 'teacher'), ('already', 'alreadi'), ('knows', 'know'), ('answers', 'answer'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('example', 'example'), (',', ','), ('teacher', 'teacher'), ('feeds', 'feed'), ('example', 'example'), ('data', 'data'), ('teacher', 'teacher'), ('already', 'already'), ('knows', 'know'), ('answers', 'answer'), ('.', '.')]



============================ Sentence 10 =============================

For example, pattern recognizing. 


>> Tokens are: 
 ['For', 'example', ',', 'pattern', 'recognizing', '.']

>> Bigrams are: 
 [('For', 'example'), ('example', ','), (',', 'pattern'), ('pattern', 'recognizing'), ('recognizing', '.')]

>> Trigrams are: 
 [('For', 'example', ','), ('example', ',', 'pattern'), (',', 'pattern', 'recognizing'), ('pattern', 'recognizing', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('example', 'NN'), (',', ','), ('pattern', 'JJ'), ('recognizing', 'NN'), ('.', '.')]

 (S For/IN (NP example/NN) ,/, (NP pattern/JJ recognizing/NN) ./.) 


>> Noun Phrases are: 
 ['example', 'pattern recognizing']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('pattern', 'pattern'), ('recognizing', 'recogn'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('pattern', 'pattern'), ('recognizing', 'recogn'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('example', 'example'), (',', ','), ('pattern', 'pattern'), ('recognizing', 'recognizing'), ('.', '.')]



============================ Sentence 11 =============================

The ANN comes up with guesses while recognizing. 


>> Tokens are: 
 ['The', 'ANN', 'comes', 'guesses', 'recognizing', '.']

>> Bigrams are: 
 [('The', 'ANN'), ('ANN', 'comes'), ('comes', 'guesses'), ('guesses', 'recognizing'), ('recognizing', '.')]

>> Trigrams are: 
 [('The', 'ANN', 'comes'), ('ANN', 'comes', 'guesses'), ('comes', 'guesses', 'recognizing'), ('guesses', 'recognizing', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('ANN', 'NNP'), ('comes', 'VBZ'), ('guesses', 'NNS'), ('recognizing', 'VBG'), ('.', '.')]

 (S
  (NP The/DT ANN/NNP)
  comes/VBZ
  (NP guesses/NNS)
  recognizing/VBG
  ./.) 


>> Noun Phrases are: 
 ['The ANN', 'guesses']

>> Named Entities are: 
 [('ORGANIZATION', 'ANN')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('ANN', 'ann'), ('comes', 'come'), ('guesses', 'guess'), ('recognizing', 'recogn'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('ANN', 'ann'), ('comes', 'come'), ('guesses', 'guess'), ('recognizing', 'recogn'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('ANN', 'ANN'), ('comes', 'come'), ('guesses', 'guess'), ('recognizing', 'recognizing'), ('.', '.')]



============================ Sentence 12 =============================

Then the teacher provides the ANN with the answers. 


>> Tokens are: 
 ['Then', 'teacher', 'provides', 'ANN', 'answers', '.']

>> Bigrams are: 
 [('Then', 'teacher'), ('teacher', 'provides'), ('provides', 'ANN'), ('ANN', 'answers'), ('answers', '.')]

>> Trigrams are: 
 [('Then', 'teacher', 'provides'), ('teacher', 'provides', 'ANN'), ('provides', 'ANN', 'answers'), ('ANN', 'answers', '.')]

>> POS Tags are: 
 [('Then', 'RB'), ('teacher', 'RB'), ('provides', 'VBZ'), ('ANN', 'NNP'), ('answers', 'NNS'), ('.', '.')]

 (S Then/RB teacher/RB provides/VBZ (NP ANN/NNP answers/NNS) ./.) 


>> Noun Phrases are: 
 ['ANN answers']

>> Named Entities are: 
 [('ORGANIZATION', 'ANN')] 

>> Stemming using Porter Stemmer: 
 [('Then', 'then'), ('teacher', 'teacher'), ('provides', 'provid'), ('ANN', 'ann'), ('answers', 'answer'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Then', 'then'), ('teacher', 'teacher'), ('provides', 'provid'), ('ANN', 'ann'), ('answers', 'answer'), ('.', '.')]

>> Lemmatization: 
 [('Then', 'Then'), ('teacher', 'teacher'), ('provides', 'provides'), ('ANN', 'ANN'), ('answers', 'answer'), ('.', '.')]



============================ Sentence 13 =============================

The network then compares it guesses with the teacher’s “correct” answers and makes adjustments according to errors. 


>> Tokens are: 
 ['The', 'network', 'compares', 'guesses', 'teacher', '’', '“', 'correct', '”', 'answers', 'makes', 'adjustments', 'according', 'errors', '.']

>> Bigrams are: 
 [('The', 'network'), ('network', 'compares'), ('compares', 'guesses'), ('guesses', 'teacher'), ('teacher', '’'), ('’', '“'), ('“', 'correct'), ('correct', '”'), ('”', 'answers'), ('answers', 'makes'), ('makes', 'adjustments'), ('adjustments', 'according'), ('according', 'errors'), ('errors', '.')]

>> Trigrams are: 
 [('The', 'network', 'compares'), ('network', 'compares', 'guesses'), ('compares', 'guesses', 'teacher'), ('guesses', 'teacher', '’'), ('teacher', '’', '“'), ('’', '“', 'correct'), ('“', 'correct', '”'), ('correct', '”', 'answers'), ('”', 'answers', 'makes'), ('answers', 'makes', 'adjustments'), ('makes', 'adjustments', 'according'), ('adjustments', 'according', 'errors'), ('according', 'errors', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('network', 'NN'), ('compares', 'VBZ'), ('guesses', 'VBZ'), ('teacher', 'RB'), ('’', 'JJ'), ('“', 'NNP'), ('correct', 'NN'), ('”', 'NN'), ('answers', 'NNS'), ('makes', 'VBZ'), ('adjustments', 'NNS'), ('according', 'VBG'), ('errors', 'NNS'), ('.', '.')]

 (S
  (NP The/DT network/NN)
  compares/VBZ
  guesses/VBZ
  teacher/RB
  (NP ’/JJ “/NNP correct/NN ”/NN answers/NNS)
  makes/VBZ
  (NP adjustments/NNS)
  according/VBG
  (NP errors/NNS)
  ./.) 


>> Noun Phrases are: 
 ['The network', '’ “ correct ” answers', 'adjustments', 'errors']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('network', 'network'), ('compares', 'compar'), ('guesses', 'guess'), ('teacher', 'teacher'), ('’', '’'), ('“', '“'), ('correct', 'correct'), ('”', '”'), ('answers', 'answer'), ('makes', 'make'), ('adjustments', 'adjust'), ('according', 'accord'), ('errors', 'error'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('network', 'network'), ('compares', 'compar'), ('guesses', 'guess'), ('teacher', 'teacher'), ('’', '’'), ('“', '“'), ('correct', 'correct'), ('”', '”'), ('answers', 'answer'), ('makes', 'make'), ('adjustments', 'adjust'), ('according', 'accord'), ('errors', 'error'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('network', 'network'), ('compares', 'compare'), ('guesses', 'guess'), ('teacher', 'teacher'), ('’', '’'), ('“', '“'), ('correct', 'correct'), ('”', '”'), ('answers', 'answer'), ('makes', 'make'), ('adjustments', 'adjustment'), ('according', 'according'), ('errors', 'error'), ('.', '.')]



============================ Sentence 14 =============================

· Unsupervised Learning − It is required when there is no example data set with known answers. 


>> Tokens are: 
 ['·', 'Unsupervised', 'Learning', '−', 'It', 'required', 'example', 'data', 'set', 'known', 'answers', '.']

>> Bigrams are: 
 [('·', 'Unsupervised'), ('Unsupervised', 'Learning'), ('Learning', '−'), ('−', 'It'), ('It', 'required'), ('required', 'example'), ('example', 'data'), ('data', 'set'), ('set', 'known'), ('known', 'answers'), ('answers', '.')]

>> Trigrams are: 
 [('·', 'Unsupervised', 'Learning'), ('Unsupervised', 'Learning', '−'), ('Learning', '−', 'It'), ('−', 'It', 'required'), ('It', 'required', 'example'), ('required', 'example', 'data'), ('example', 'data', 'set'), ('data', 'set', 'known'), ('set', 'known', 'answers'), ('known', 'answers', '.')]

>> POS Tags are: 
 [('·', 'NNS'), ('Unsupervised', 'VBD'), ('Learning', 'VBG'), ('−', 'IN'), ('It', 'PRP'), ('required', 'VBD'), ('example', 'NN'), ('data', 'NNS'), ('set', 'VBD'), ('known', 'JJ'), ('answers', 'NNS'), ('.', '.')]

 (S
  (NP ·/NNS)
  Unsupervised/VBD
  Learning/VBG
  −/IN
  It/PRP
  required/VBD
  (NP example/NN data/NNS)
  set/VBD
  (NP known/JJ answers/NNS)
  ./.) 


>> Noun Phrases are: 
 ['·', 'example data', 'known answers']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Unsupervised', 'unsupervis'), ('Learning', 'learn'), ('−', '−'), ('It', 'it'), ('required', 'requir'), ('example', 'exampl'), ('data', 'data'), ('set', 'set'), ('known', 'known'), ('answers', 'answer'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Unsupervised', 'unsupervis'), ('Learning', 'learn'), ('−', '−'), ('It', 'it'), ('required', 'requir'), ('example', 'exampl'), ('data', 'data'), ('set', 'set'), ('known', 'known'), ('answers', 'answer'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Unsupervised', 'Unsupervised'), ('Learning', 'Learning'), ('−', '−'), ('It', 'It'), ('required', 'required'), ('example', 'example'), ('data', 'data'), ('set', 'set'), ('known', 'known'), ('answers', 'answer'), ('.', '.')]



============================ Sentence 15 =============================

For example, searching for a hidden pattern. 


>> Tokens are: 
 ['For', 'example', ',', 'searching', 'hidden', 'pattern', '.']

>> Bigrams are: 
 [('For', 'example'), ('example', ','), (',', 'searching'), ('searching', 'hidden'), ('hidden', 'pattern'), ('pattern', '.')]

>> Trigrams are: 
 [('For', 'example', ','), ('example', ',', 'searching'), (',', 'searching', 'hidden'), ('searching', 'hidden', 'pattern'), ('hidden', 'pattern', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('example', 'NN'), (',', ','), ('searching', 'VBG'), ('hidden', 'JJ'), ('pattern', 'NN'), ('.', '.')]

 (S
  For/IN
  (NP example/NN)
  ,/,
  searching/VBG
  (NP hidden/JJ pattern/NN)
  ./.) 


>> Noun Phrases are: 
 ['example', 'hidden pattern']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('searching', 'search'), ('hidden', 'hidden'), ('pattern', 'pattern'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('searching', 'search'), ('hidden', 'hidden'), ('pattern', 'pattern'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('example', 'example'), (',', ','), ('searching', 'searching'), ('hidden', 'hidden'), ('pattern', 'pattern'), ('.', '.')]



============================ Sentence 16 =============================

In this case, clustering i.e.- dividing a set of elements into groups according to some unknown pattern is carried out based on the existing data sets present. 


>> Tokens are: 
 ['In', 'case', ',', 'clustering', 'i.e.-', 'dividing', 'set', 'elements', 'groups', 'according', 'unknown', 'pattern', 'carried', 'based', 'existing', 'data', 'sets', 'present', '.']

>> Bigrams are: 
 [('In', 'case'), ('case', ','), (',', 'clustering'), ('clustering', 'i.e.-'), ('i.e.-', 'dividing'), ('dividing', 'set'), ('set', 'elements'), ('elements', 'groups'), ('groups', 'according'), ('according', 'unknown'), ('unknown', 'pattern'), ('pattern', 'carried'), ('carried', 'based'), ('based', 'existing'), ('existing', 'data'), ('data', 'sets'), ('sets', 'present'), ('present', '.')]

>> Trigrams are: 
 [('In', 'case', ','), ('case', ',', 'clustering'), (',', 'clustering', 'i.e.-'), ('clustering', 'i.e.-', 'dividing'), ('i.e.-', 'dividing', 'set'), ('dividing', 'set', 'elements'), ('set', 'elements', 'groups'), ('elements', 'groups', 'according'), ('groups', 'according', 'unknown'), ('according', 'unknown', 'pattern'), ('unknown', 'pattern', 'carried'), ('pattern', 'carried', 'based'), ('carried', 'based', 'existing'), ('based', 'existing', 'data'), ('existing', 'data', 'sets'), ('data', 'sets', 'present'), ('sets', 'present', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('case', 'NN'), (',', ','), ('clustering', 'VBG'), ('i.e.-', 'JJ'), ('dividing', 'NN'), ('set', 'VBN'), ('elements', 'NNS'), ('groups', 'NNS'), ('according', 'VBG'), ('unknown', 'JJ'), ('pattern', 'NN'), ('carried', 'VBD'), ('based', 'VBN'), ('existing', 'VBG'), ('data', 'NNS'), ('sets', 'NNS'), ('present', 'JJ'), ('.', '.')]

 (S
  In/IN
  (NP case/NN)
  ,/,
  clustering/VBG
  (NP i.e.-/JJ dividing/NN)
  set/VBN
  (NP elements/NNS groups/NNS)
  according/VBG
  (NP unknown/JJ pattern/NN)
  carried/VBD
  based/VBN
  existing/VBG
  (NP data/NNS sets/NNS)
  present/JJ
  ./.) 


>> Noun Phrases are: 
 ['case', 'i.e.- dividing', 'elements groups', 'unknown pattern', 'data sets']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('case', 'case'), (',', ','), ('clustering', 'cluster'), ('i.e.-', 'i.e.-'), ('dividing', 'divid'), ('set', 'set'), ('elements', 'element'), ('groups', 'group'), ('according', 'accord'), ('unknown', 'unknown'), ('pattern', 'pattern'), ('carried', 'carri'), ('based', 'base'), ('existing', 'exist'), ('data', 'data'), ('sets', 'set'), ('present', 'present'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('case', 'case'), (',', ','), ('clustering', 'cluster'), ('i.e.-', 'i.e.-'), ('dividing', 'divid'), ('set', 'set'), ('elements', 'element'), ('groups', 'group'), ('according', 'accord'), ('unknown', 'unknown'), ('pattern', 'pattern'), ('carried', 'carri'), ('based', 'base'), ('existing', 'exist'), ('data', 'data'), ('sets', 'set'), ('present', 'present'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('case', 'case'), (',', ','), ('clustering', 'clustering'), ('i.e.-', 'i.e.-'), ('dividing', 'dividing'), ('set', 'set'), ('elements', 'element'), ('groups', 'group'), ('according', 'according'), ('unknown', 'unknown'), ('pattern', 'pattern'), ('carried', 'carried'), ('based', 'based'), ('existing', 'existing'), ('data', 'data'), ('sets', 'set'), ('present', 'present'), ('.', '.')]



============================ Sentence 17 =============================

· Reinforcement Learning − This strategy built on observation. 


>> Tokens are: 
 ['·', 'Reinforcement', 'Learning', '−', 'This', 'strategy', 'built', 'observation', '.']

>> Bigrams are: 
 [('·', 'Reinforcement'), ('Reinforcement', 'Learning'), ('Learning', '−'), ('−', 'This'), ('This', 'strategy'), ('strategy', 'built'), ('built', 'observation'), ('observation', '.')]

>> Trigrams are: 
 [('·', 'Reinforcement', 'Learning'), ('Reinforcement', 'Learning', '−'), ('Learning', '−', 'This'), ('−', 'This', 'strategy'), ('This', 'strategy', 'built'), ('strategy', 'built', 'observation'), ('built', 'observation', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Reinforcement', 'NNP'), ('Learning', 'NNP'), ('−', 'NNP'), ('This', 'DT'), ('strategy', 'NN'), ('built', 'VBN'), ('observation', 'NN'), ('.', '.')]

 (S
  (NP ·/JJ Reinforcement/NNP Learning/NNP −/NNP)
  (NP This/DT strategy/NN)
  built/VBN
  (NP observation/NN)
  ./.) 


>> Noun Phrases are: 
 ['· Reinforcement Learning −', 'This strategy', 'observation']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Reinforcement', 'reinforc'), ('Learning', 'learn'), ('−', '−'), ('This', 'thi'), ('strategy', 'strategi'), ('built', 'built'), ('observation', 'observ'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Reinforcement', 'reinforc'), ('Learning', 'learn'), ('−', '−'), ('This', 'this'), ('strategy', 'strategi'), ('built', 'built'), ('observation', 'observ'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Reinforcement', 'Reinforcement'), ('Learning', 'Learning'), ('−', '−'), ('This', 'This'), ('strategy', 'strategy'), ('built', 'built'), ('observation', 'observation'), ('.', '.')]



============================ Sentence 18 =============================

The ANN makes a decision by observing its environment. 


>> Tokens are: 
 ['The', 'ANN', 'makes', 'decision', 'observing', 'environment', '.']

>> Bigrams are: 
 [('The', 'ANN'), ('ANN', 'makes'), ('makes', 'decision'), ('decision', 'observing'), ('observing', 'environment'), ('environment', '.')]

>> Trigrams are: 
 [('The', 'ANN', 'makes'), ('ANN', 'makes', 'decision'), ('makes', 'decision', 'observing'), ('decision', 'observing', 'environment'), ('observing', 'environment', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('ANN', 'NNP'), ('makes', 'VBZ'), ('decision', 'NN'), ('observing', 'VBG'), ('environment', 'NN'), ('.', '.')]

 (S
  (NP The/DT ANN/NNP)
  makes/VBZ
  (NP decision/NN)
  observing/VBG
  (NP environment/NN)
  ./.) 


>> Noun Phrases are: 
 ['The ANN', 'decision', 'environment']

>> Named Entities are: 
 [('ORGANIZATION', 'ANN')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('ANN', 'ann'), ('makes', 'make'), ('decision', 'decis'), ('observing', 'observ'), ('environment', 'environ'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('ANN', 'ann'), ('makes', 'make'), ('decision', 'decis'), ('observing', 'observ'), ('environment', 'environ'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('ANN', 'ANN'), ('makes', 'make'), ('decision', 'decision'), ('observing', 'observing'), ('environment', 'environment'), ('.', '.')]



============================ Sentence 19 =============================

If the observation is negative, the network adjusts its weights to be able to make a different required decision the next time. 


>> Tokens are: 
 ['If', 'observation', 'negative', ',', 'network', 'adjusts', 'weights', 'able', 'make', 'different', 'required', 'decision', 'next', 'time', '.']

>> Bigrams are: 
 [('If', 'observation'), ('observation', 'negative'), ('negative', ','), (',', 'network'), ('network', 'adjusts'), ('adjusts', 'weights'), ('weights', 'able'), ('able', 'make'), ('make', 'different'), ('different', 'required'), ('required', 'decision'), ('decision', 'next'), ('next', 'time'), ('time', '.')]

>> Trigrams are: 
 [('If', 'observation', 'negative'), ('observation', 'negative', ','), ('negative', ',', 'network'), (',', 'network', 'adjusts'), ('network', 'adjusts', 'weights'), ('adjusts', 'weights', 'able'), ('weights', 'able', 'make'), ('able', 'make', 'different'), ('make', 'different', 'required'), ('different', 'required', 'decision'), ('required', 'decision', 'next'), ('decision', 'next', 'time'), ('next', 'time', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('observation', 'NN'), ('negative', 'NN'), (',', ','), ('network', 'NN'), ('adjusts', 'NNS'), ('weights', 'VBP'), ('able', 'JJ'), ('make', 'VBP'), ('different', 'JJ'), ('required', 'VBN'), ('decision', 'NN'), ('next', 'JJ'), ('time', 'NN'), ('.', '.')]

 (S
  If/IN
  (NP observation/NN negative/NN)
  ,/,
  (NP network/NN adjusts/NNS)
  weights/VBP
  able/JJ
  make/VBP
  different/JJ
  required/VBN
  (NP decision/NN)
  (NP next/JJ time/NN)
  ./.) 


>> Noun Phrases are: 
 ['observation negative', 'network adjusts', 'decision', 'next time']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('observation', 'observ'), ('negative', 'neg'), (',', ','), ('network', 'network'), ('adjusts', 'adjust'), ('weights', 'weight'), ('able', 'abl'), ('make', 'make'), ('different', 'differ'), ('required', 'requir'), ('decision', 'decis'), ('next', 'next'), ('time', 'time'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('observation', 'observ'), ('negative', 'negat'), (',', ','), ('network', 'network'), ('adjusts', 'adjust'), ('weights', 'weight'), ('able', 'abl'), ('make', 'make'), ('different', 'differ'), ('required', 'requir'), ('decision', 'decis'), ('next', 'next'), ('time', 'time'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('observation', 'observation'), ('negative', 'negative'), (',', ','), ('network', 'network'), ('adjusts', 'adjusts'), ('weights', 'weight'), ('able', 'able'), ('make', 'make'), ('different', 'different'), ('required', 'required'), ('decision', 'decision'), ('next', 'next'), ('time', 'time'), ('.', '.')]



============================ Sentence 20 =============================

Back Propagation Algorithm It is the training or learning algorithm. 


>> Tokens are: 
 ['Back', 'Propagation', 'Algorithm', 'It', 'training', 'learning', 'algorithm', '.']

>> Bigrams are: 
 [('Back', 'Propagation'), ('Propagation', 'Algorithm'), ('Algorithm', 'It'), ('It', 'training'), ('training', 'learning'), ('learning', 'algorithm'), ('algorithm', '.')]

>> Trigrams are: 
 [('Back', 'Propagation', 'Algorithm'), ('Propagation', 'Algorithm', 'It'), ('Algorithm', 'It', 'training'), ('It', 'training', 'learning'), ('training', 'learning', 'algorithm'), ('learning', 'algorithm', '.')]

>> POS Tags are: 
 [('Back', 'NNP'), ('Propagation', 'NNP'), ('Algorithm', 'NNP'), ('It', 'PRP'), ('training', 'VBG'), ('learning', 'VBG'), ('algorithm', 'NN'), ('.', '.')]

 (S
  (NP Back/NNP Propagation/NNP Algorithm/NNP)
  It/PRP
  training/VBG
  learning/VBG
  (NP algorithm/NN)
  ./.) 


>> Noun Phrases are: 
 ['Back Propagation Algorithm', 'algorithm']

>> Named Entities are: 
 [('PERSON', 'Back')] 

>> Stemming using Porter Stemmer: 
 [('Back', 'back'), ('Propagation', 'propag'), ('Algorithm', 'algorithm'), ('It', 'it'), ('training', 'train'), ('learning', 'learn'), ('algorithm', 'algorithm'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Back', 'back'), ('Propagation', 'propag'), ('Algorithm', 'algorithm'), ('It', 'it'), ('training', 'train'), ('learning', 'learn'), ('algorithm', 'algorithm'), ('.', '.')]

>> Lemmatization: 
 [('Back', 'Back'), ('Propagation', 'Propagation'), ('Algorithm', 'Algorithm'), ('It', 'It'), ('training', 'training'), ('learning', 'learning'), ('algorithm', 'algorithm'), ('.', '.')]



============================ Sentence 21 =============================

It learns by example. 


>> Tokens are: 
 ['It', 'learns', 'example', '.']

>> Bigrams are: 
 [('It', 'learns'), ('learns', 'example'), ('example', '.')]

>> Trigrams are: 
 [('It', 'learns', 'example'), ('learns', 'example', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('learns', 'VBZ'), ('example', 'NN'), ('.', '.')]

 (S It/PRP learns/VBZ (NP example/NN) ./.) 


>> Noun Phrases are: 
 ['example']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('learns', 'learn'), ('example', 'exampl'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('learns', 'learn'), ('example', 'exampl'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('learns', 'learns'), ('example', 'example'), ('.', '.')]



============================ Sentence 22 =============================

If you submit to the algorithm the example of what you want the network to do, it changes the network’s weights so that it can produce desired output for a particular input on finishing the training. 


>> Tokens are: 
 ['If', 'submit', 'algorithm', 'example', 'want', 'network', ',', 'changes', 'network', '’', 'weights', 'produce', 'desired', 'output', 'particular', 'input', 'finishing', 'training', '.']

>> Bigrams are: 
 [('If', 'submit'), ('submit', 'algorithm'), ('algorithm', 'example'), ('example', 'want'), ('want', 'network'), ('network', ','), (',', 'changes'), ('changes', 'network'), ('network', '’'), ('’', 'weights'), ('weights', 'produce'), ('produce', 'desired'), ('desired', 'output'), ('output', 'particular'), ('particular', 'input'), ('input', 'finishing'), ('finishing', 'training'), ('training', '.')]

>> Trigrams are: 
 [('If', 'submit', 'algorithm'), ('submit', 'algorithm', 'example'), ('algorithm', 'example', 'want'), ('example', 'want', 'network'), ('want', 'network', ','), ('network', ',', 'changes'), (',', 'changes', 'network'), ('changes', 'network', '’'), ('network', '’', 'weights'), ('’', 'weights', 'produce'), ('weights', 'produce', 'desired'), ('produce', 'desired', 'output'), ('desired', 'output', 'particular'), ('output', 'particular', 'input'), ('particular', 'input', 'finishing'), ('input', 'finishing', 'training'), ('finishing', 'training', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('submit', 'VBN'), ('algorithm', 'VBP'), ('example', 'NN'), ('want', 'VBP'), ('network', 'NN'), (',', ','), ('changes', 'NNS'), ('network', 'NN'), ('’', 'VBP'), ('weights', 'NNS'), ('produce', 'VBP'), ('desired', 'VBN'), ('output', 'NN'), ('particular', 'JJ'), ('input', 'NN'), ('finishing', 'VBG'), ('training', 'NN'), ('.', '.')]

 (S
  If/IN
  submit/VBN
  algorithm/VBP
  (NP example/NN)
  want/VBP
  (NP network/NN)
  ,/,
  (NP changes/NNS network/NN)
  ’/VBP
  (NP weights/NNS)
  produce/VBP
  desired/VBN
  (NP output/NN)
  (NP particular/JJ input/NN)
  finishing/VBG
  (NP training/NN)
  ./.) 


>> Noun Phrases are: 
 ['example', 'network', 'changes network', 'weights', 'output', 'particular input', 'training']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('submit', 'submit'), ('algorithm', 'algorithm'), ('example', 'exampl'), ('want', 'want'), ('network', 'network'), (',', ','), ('changes', 'chang'), ('network', 'network'), ('’', '’'), ('weights', 'weight'), ('produce', 'produc'), ('desired', 'desir'), ('output', 'output'), ('particular', 'particular'), ('input', 'input'), ('finishing', 'finish'), ('training', 'train'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('submit', 'submit'), ('algorithm', 'algorithm'), ('example', 'exampl'), ('want', 'want'), ('network', 'network'), (',', ','), ('changes', 'chang'), ('network', 'network'), ('’', '’'), ('weights', 'weight'), ('produce', 'produc'), ('desired', 'desir'), ('output', 'output'), ('particular', 'particular'), ('input', 'input'), ('finishing', 'finish'), ('training', 'train'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('submit', 'submit'), ('algorithm', 'algorithm'), ('example', 'example'), ('want', 'want'), ('network', 'network'), (',', ','), ('changes', 'change'), ('network', 'network'), ('’', '’'), ('weights', 'weight'), ('produce', 'produce'), ('desired', 'desired'), ('output', 'output'), ('particular', 'particular'), ('input', 'input'), ('finishing', 'finishing'), ('training', 'training'), ('.', '.')]



============================ Sentence 23 =============================

Back Propagation networks are ideal for simple Pattern Recognition and Mapping Tasks. 


>> Tokens are: 
 ['Back', 'Propagation', 'networks', 'ideal', 'simple', 'Pattern', 'Recognition', 'Mapping', 'Tasks', '.']

>> Bigrams are: 
 [('Back', 'Propagation'), ('Propagation', 'networks'), ('networks', 'ideal'), ('ideal', 'simple'), ('simple', 'Pattern'), ('Pattern', 'Recognition'), ('Recognition', 'Mapping'), ('Mapping', 'Tasks'), ('Tasks', '.')]

>> Trigrams are: 
 [('Back', 'Propagation', 'networks'), ('Propagation', 'networks', 'ideal'), ('networks', 'ideal', 'simple'), ('ideal', 'simple', 'Pattern'), ('simple', 'Pattern', 'Recognition'), ('Pattern', 'Recognition', 'Mapping'), ('Recognition', 'Mapping', 'Tasks'), ('Mapping', 'Tasks', '.')]

>> POS Tags are: 
 [('Back', 'NNP'), ('Propagation', 'NNP'), ('networks', 'NNS'), ('ideal', 'VBP'), ('simple', 'JJ'), ('Pattern', 'NNP'), ('Recognition', 'NNP'), ('Mapping', 'NNP'), ('Tasks', 'NNP'), ('.', '.')]

 (S
  (NP Back/NNP Propagation/NNP networks/NNS)
  ideal/VBP
  (NP simple/JJ Pattern/NNP Recognition/NNP Mapping/NNP Tasks/NNP)
  ./.) 


>> Noun Phrases are: 
 ['Back Propagation networks', 'simple Pattern Recognition Mapping Tasks']

>> Named Entities are: 
 [('PERSON', 'Back'), ('PERSON', 'Pattern Recognition Mapping Tasks')] 

>> Stemming using Porter Stemmer: 
 [('Back', 'back'), ('Propagation', 'propag'), ('networks', 'network'), ('ideal', 'ideal'), ('simple', 'simpl'), ('Pattern', 'pattern'), ('Recognition', 'recognit'), ('Mapping', 'map'), ('Tasks', 'task'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Back', 'back'), ('Propagation', 'propag'), ('networks', 'network'), ('ideal', 'ideal'), ('simple', 'simpl'), ('Pattern', 'pattern'), ('Recognition', 'recognit'), ('Mapping', 'map'), ('Tasks', 'task'), ('.', '.')]

>> Lemmatization: 
 [('Back', 'Back'), ('Propagation', 'Propagation'), ('networks', 'network'), ('ideal', 'ideal'), ('simple', 'simple'), ('Pattern', 'Pattern'), ('Recognition', 'Recognition'), ('Mapping', 'Mapping'), ('Tasks', 'Tasks'), ('.', '.')]



============================ Sentence 24 =============================

Bayesian Networks (BN) These are the graphical structures used to represent the probabilistic relationship among a set of random variables. 


>> Tokens are: 
 ['Bayesian', 'Networks', '(', 'BN', ')', 'These', 'graphical', 'structures', 'used', 'represent', 'probabilistic', 'relationship', 'among', 'set', 'random', 'variables', '.']

>> Bigrams are: 
 [('Bayesian', 'Networks'), ('Networks', '('), ('(', 'BN'), ('BN', ')'), (')', 'These'), ('These', 'graphical'), ('graphical', 'structures'), ('structures', 'used'), ('used', 'represent'), ('represent', 'probabilistic'), ('probabilistic', 'relationship'), ('relationship', 'among'), ('among', 'set'), ('set', 'random'), ('random', 'variables'), ('variables', '.')]

>> Trigrams are: 
 [('Bayesian', 'Networks', '('), ('Networks', '(', 'BN'), ('(', 'BN', ')'), ('BN', ')', 'These'), (')', 'These', 'graphical'), ('These', 'graphical', 'structures'), ('graphical', 'structures', 'used'), ('structures', 'used', 'represent'), ('used', 'represent', 'probabilistic'), ('represent', 'probabilistic', 'relationship'), ('probabilistic', 'relationship', 'among'), ('relationship', 'among', 'set'), ('among', 'set', 'random'), ('set', 'random', 'variables'), ('random', 'variables', '.')]

>> POS Tags are: 
 [('Bayesian', 'JJ'), ('Networks', 'NNP'), ('(', '('), ('BN', 'NNP'), (')', ')'), ('These', 'DT'), ('graphical', 'JJ'), ('structures', 'NNS'), ('used', 'VBN'), ('represent', 'JJ'), ('probabilistic', 'JJ'), ('relationship', 'NN'), ('among', 'IN'), ('set', 'JJ'), ('random', 'NN'), ('variables', 'NNS'), ('.', '.')]

 (S
  (NP Bayesian/JJ Networks/NNP)
  (/(
  (NP BN/NNP)
  )/)
  (NP These/DT graphical/JJ structures/NNS)
  used/VBN
  (NP represent/JJ probabilistic/JJ relationship/NN)
  among/IN
  (NP set/JJ random/NN variables/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Bayesian Networks', 'BN', 'These graphical structures', 'represent probabilistic relationship', 'set random variables']

>> Named Entities are: 
 [('GPE', 'Bayesian'), ('PERSON', 'Networks')] 

>> Stemming using Porter Stemmer: 
 [('Bayesian', 'bayesian'), ('Networks', 'network'), ('(', '('), ('BN', 'bn'), (')', ')'), ('These', 'these'), ('graphical', 'graphic'), ('structures', 'structur'), ('used', 'use'), ('represent', 'repres'), ('probabilistic', 'probabilist'), ('relationship', 'relationship'), ('among', 'among'), ('set', 'set'), ('random', 'random'), ('variables', 'variabl'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Bayesian', 'bayesian'), ('Networks', 'network'), ('(', '('), ('BN', 'bn'), (')', ')'), ('These', 'these'), ('graphical', 'graphic'), ('structures', 'structur'), ('used', 'use'), ('represent', 'repres'), ('probabilistic', 'probabilist'), ('relationship', 'relationship'), ('among', 'among'), ('set', 'set'), ('random', 'random'), ('variables', 'variabl'), ('.', '.')]

>> Lemmatization: 
 [('Bayesian', 'Bayesian'), ('Networks', 'Networks'), ('(', '('), ('BN', 'BN'), (')', ')'), ('These', 'These'), ('graphical', 'graphical'), ('structures', 'structure'), ('used', 'used'), ('represent', 'represent'), ('probabilistic', 'probabilistic'), ('relationship', 'relationship'), ('among', 'among'), ('set', 'set'), ('random', 'random'), ('variables', 'variable'), ('.', '.')]



============================ Sentence 25 =============================

Bayesian networks are also called Belief Networks or Bayes Nets. 


>> Tokens are: 
 ['Bayesian', 'networks', 'also', 'called', 'Belief', 'Networks', 'Bayes', 'Nets', '.']

>> Bigrams are: 
 [('Bayesian', 'networks'), ('networks', 'also'), ('also', 'called'), ('called', 'Belief'), ('Belief', 'Networks'), ('Networks', 'Bayes'), ('Bayes', 'Nets'), ('Nets', '.')]

>> Trigrams are: 
 [('Bayesian', 'networks', 'also'), ('networks', 'also', 'called'), ('also', 'called', 'Belief'), ('called', 'Belief', 'Networks'), ('Belief', 'Networks', 'Bayes'), ('Networks', 'Bayes', 'Nets'), ('Bayes', 'Nets', '.')]

>> POS Tags are: 
 [('Bayesian', 'JJ'), ('networks', 'NNS'), ('also', 'RB'), ('called', 'VBD'), ('Belief', 'NNP'), ('Networks', 'NNP'), ('Bayes', 'NNP'), ('Nets', 'NNP'), ('.', '.')]

 (S
  (NP Bayesian/JJ networks/NNS)
  also/RB
  called/VBD
  (NP Belief/NNP Networks/NNP Bayes/NNP Nets/NNP)
  ./.) 


>> Noun Phrases are: 
 ['Bayesian networks', 'Belief Networks Bayes Nets']

>> Named Entities are: 
 [('GPE', 'Bayesian'), ('PERSON', 'Belief Networks Bayes Nets')] 

>> Stemming using Porter Stemmer: 
 [('Bayesian', 'bayesian'), ('networks', 'network'), ('also', 'also'), ('called', 'call'), ('Belief', 'belief'), ('Networks', 'network'), ('Bayes', 'bay'), ('Nets', 'net'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Bayesian', 'bayesian'), ('networks', 'network'), ('also', 'also'), ('called', 'call'), ('Belief', 'belief'), ('Networks', 'network'), ('Bayes', 'bay'), ('Nets', 'net'), ('.', '.')]

>> Lemmatization: 
 [('Bayesian', 'Bayesian'), ('networks', 'network'), ('also', 'also'), ('called', 'called'), ('Belief', 'Belief'), ('Networks', 'Networks'), ('Bayes', 'Bayes'), ('Nets', 'Nets'), ('.', '.')]



============================ Sentence 26 =============================

BNs reason about uncertain domain. 


>> Tokens are: 
 ['BNs', 'reason', 'uncertain', 'domain', '.']

>> Bigrams are: 
 [('BNs', 'reason'), ('reason', 'uncertain'), ('uncertain', 'domain'), ('domain', '.')]

>> Trigrams are: 
 [('BNs', 'reason', 'uncertain'), ('reason', 'uncertain', 'domain'), ('uncertain', 'domain', '.')]

>> POS Tags are: 
 [('BNs', 'NNP'), ('reason', 'NN'), ('uncertain', 'JJ'), ('domain', 'NN'), ('.', '.')]

 (S (NP BNs/NNP reason/NN) (NP uncertain/JJ domain/NN) ./.) 


>> Noun Phrases are: 
 ['BNs reason', 'uncertain domain']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('BNs', 'bn'), ('reason', 'reason'), ('uncertain', 'uncertain'), ('domain', 'domain'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('BNs', 'bns'), ('reason', 'reason'), ('uncertain', 'uncertain'), ('domain', 'domain'), ('.', '.')]

>> Lemmatization: 
 [('BNs', 'BNs'), ('reason', 'reason'), ('uncertain', 'uncertain'), ('domain', 'domain'), ('.', '.')]



============================ Sentence 27 =============================

In these networks, each node represents a random variable with specific propositions. 


>> Tokens are: 
 ['In', 'networks', ',', 'node', 'represents', 'random', 'variable', 'specific', 'propositions', '.']

>> Bigrams are: 
 [('In', 'networks'), ('networks', ','), (',', 'node'), ('node', 'represents'), ('represents', 'random'), ('random', 'variable'), ('variable', 'specific'), ('specific', 'propositions'), ('propositions', '.')]

>> Trigrams are: 
 [('In', 'networks', ','), ('networks', ',', 'node'), (',', 'node', 'represents'), ('node', 'represents', 'random'), ('represents', 'random', 'variable'), ('random', 'variable', 'specific'), ('variable', 'specific', 'propositions'), ('specific', 'propositions', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('networks', 'NNS'), (',', ','), ('node', 'JJ'), ('represents', 'VBZ'), ('random', 'NN'), ('variable', 'JJ'), ('specific', 'JJ'), ('propositions', 'NNS'), ('.', '.')]

 (S
  In/IN
  (NP networks/NNS)
  ,/,
  node/JJ
  represents/VBZ
  (NP random/NN)
  (NP variable/JJ specific/JJ propositions/NNS)
  ./.) 


>> Noun Phrases are: 
 ['networks', 'random', 'variable specific propositions']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('networks', 'network'), (',', ','), ('node', 'node'), ('represents', 'repres'), ('random', 'random'), ('variable', 'variabl'), ('specific', 'specif'), ('propositions', 'proposit'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('networks', 'network'), (',', ','), ('node', 'node'), ('represents', 'repres'), ('random', 'random'), ('variable', 'variabl'), ('specific', 'specif'), ('propositions', 'proposit'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('networks', 'network'), (',', ','), ('node', 'node'), ('represents', 'represents'), ('random', 'random'), ('variable', 'variable'), ('specific', 'specific'), ('propositions', 'proposition'), ('.', '.')]



============================ Sentence 28 =============================

For example, in a medical diagnosis domain, the node Cancer represents the proposition that a patient has cancer. 


>> Tokens are: 
 ['For', 'example', ',', 'medical', 'diagnosis', 'domain', ',', 'node', 'Cancer', 'represents', 'proposition', 'patient', 'cancer', '.']

>> Bigrams are: 
 [('For', 'example'), ('example', ','), (',', 'medical'), ('medical', 'diagnosis'), ('diagnosis', 'domain'), ('domain', ','), (',', 'node'), ('node', 'Cancer'), ('Cancer', 'represents'), ('represents', 'proposition'), ('proposition', 'patient'), ('patient', 'cancer'), ('cancer', '.')]

>> Trigrams are: 
 [('For', 'example', ','), ('example', ',', 'medical'), (',', 'medical', 'diagnosis'), ('medical', 'diagnosis', 'domain'), ('diagnosis', 'domain', ','), ('domain', ',', 'node'), (',', 'node', 'Cancer'), ('node', 'Cancer', 'represents'), ('Cancer', 'represents', 'proposition'), ('represents', 'proposition', 'patient'), ('proposition', 'patient', 'cancer'), ('patient', 'cancer', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('example', 'NN'), (',', ','), ('medical', 'JJ'), ('diagnosis', 'NN'), ('domain', 'NN'), (',', ','), ('node', 'JJ'), ('Cancer', 'NNP'), ('represents', 'VBZ'), ('proposition', 'NN'), ('patient', 'NN'), ('cancer', 'NN'), ('.', '.')]

 (S
  For/IN
  (NP example/NN)
  ,/,
  (NP medical/JJ diagnosis/NN domain/NN)
  ,/,
  (NP node/JJ Cancer/NNP)
  represents/VBZ
  (NP proposition/NN patient/NN cancer/NN)
  ./.) 


>> Noun Phrases are: 
 ['example', 'medical diagnosis domain', 'node Cancer', 'proposition patient cancer']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('medical', 'medic'), ('diagnosis', 'diagnosi'), ('domain', 'domain'), (',', ','), ('node', 'node'), ('Cancer', 'cancer'), ('represents', 'repres'), ('proposition', 'proposit'), ('patient', 'patient'), ('cancer', 'cancer'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('medical', 'medic'), ('diagnosis', 'diagnosi'), ('domain', 'domain'), (',', ','), ('node', 'node'), ('Cancer', 'cancer'), ('represents', 'repres'), ('proposition', 'proposit'), ('patient', 'patient'), ('cancer', 'cancer'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('example', 'example'), (',', ','), ('medical', 'medical'), ('diagnosis', 'diagnosis'), ('domain', 'domain'), (',', ','), ('node', 'node'), ('Cancer', 'Cancer'), ('represents', 'represents'), ('proposition', 'proposition'), ('patient', 'patient'), ('cancer', 'cancer'), ('.', '.')]



============================ Sentence 29 =============================

The edges connecting the nodes represent probabilistic dependencies among those random variables. 


>> Tokens are: 
 ['The', 'edges', 'connecting', 'nodes', 'represent', 'probabilistic', 'dependencies', 'among', 'random', 'variables', '.']

>> Bigrams are: 
 [('The', 'edges'), ('edges', 'connecting'), ('connecting', 'nodes'), ('nodes', 'represent'), ('represent', 'probabilistic'), ('probabilistic', 'dependencies'), ('dependencies', 'among'), ('among', 'random'), ('random', 'variables'), ('variables', '.')]

>> Trigrams are: 
 [('The', 'edges', 'connecting'), ('edges', 'connecting', 'nodes'), ('connecting', 'nodes', 'represent'), ('nodes', 'represent', 'probabilistic'), ('represent', 'probabilistic', 'dependencies'), ('probabilistic', 'dependencies', 'among'), ('dependencies', 'among', 'random'), ('among', 'random', 'variables'), ('random', 'variables', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('edges', 'NNS'), ('connecting', 'VBG'), ('nodes', 'NNS'), ('represent', 'VBP'), ('probabilistic', 'JJ'), ('dependencies', 'NNS'), ('among', 'IN'), ('random', 'JJ'), ('variables', 'NNS'), ('.', '.')]

 (S
  (NP The/DT edges/NNS)
  connecting/VBG
  (NP nodes/NNS)
  represent/VBP
  (NP probabilistic/JJ dependencies/NNS)
  among/IN
  (NP random/JJ variables/NNS)
  ./.) 


>> Noun Phrases are: 
 ['The edges', 'nodes', 'probabilistic dependencies', 'random variables']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('edges', 'edg'), ('connecting', 'connect'), ('nodes', 'node'), ('represent', 'repres'), ('probabilistic', 'probabilist'), ('dependencies', 'depend'), ('among', 'among'), ('random', 'random'), ('variables', 'variabl'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('edges', 'edg'), ('connecting', 'connect'), ('nodes', 'node'), ('represent', 'repres'), ('probabilistic', 'probabilist'), ('dependencies', 'depend'), ('among', 'among'), ('random', 'random'), ('variables', 'variabl'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('edges', 'edge'), ('connecting', 'connecting'), ('nodes', 'node'), ('represent', 'represent'), ('probabilistic', 'probabilistic'), ('dependencies', 'dependency'), ('among', 'among'), ('random', 'random'), ('variables', 'variable'), ('.', '.')]



============================ Sentence 30 =============================

If out of two nodes, one is affecting the other then they must be directly connected in the directions of the effect. 


>> Tokens are: 
 ['If', 'two', 'nodes', ',', 'one', 'affecting', 'must', 'directly', 'connected', 'directions', 'effect', '.']

>> Bigrams are: 
 [('If', 'two'), ('two', 'nodes'), ('nodes', ','), (',', 'one'), ('one', 'affecting'), ('affecting', 'must'), ('must', 'directly'), ('directly', 'connected'), ('connected', 'directions'), ('directions', 'effect'), ('effect', '.')]

>> Trigrams are: 
 [('If', 'two', 'nodes'), ('two', 'nodes', ','), ('nodes', ',', 'one'), (',', 'one', 'affecting'), ('one', 'affecting', 'must'), ('affecting', 'must', 'directly'), ('must', 'directly', 'connected'), ('directly', 'connected', 'directions'), ('connected', 'directions', 'effect'), ('directions', 'effect', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('two', 'CD'), ('nodes', 'NNS'), (',', ','), ('one', 'CD'), ('affecting', 'NN'), ('must', 'MD'), ('directly', 'RB'), ('connected', 'VBN'), ('directions', 'NNS'), ('effect', 'NN'), ('.', '.')]

 (S
  If/IN
  two/CD
  (NP nodes/NNS)
  ,/,
  one/CD
  (NP affecting/NN)
  must/MD
  directly/RB
  connected/VBN
  (NP directions/NNS effect/NN)
  ./.) 


>> Noun Phrases are: 
 ['nodes', 'affecting', 'directions effect']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('two', 'two'), ('nodes', 'node'), (',', ','), ('one', 'one'), ('affecting', 'affect'), ('must', 'must'), ('directly', 'directli'), ('connected', 'connect'), ('directions', 'direct'), ('effect', 'effect'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('two', 'two'), ('nodes', 'node'), (',', ','), ('one', 'one'), ('affecting', 'affect'), ('must', 'must'), ('directly', 'direct'), ('connected', 'connect'), ('directions', 'direct'), ('effect', 'effect'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('two', 'two'), ('nodes', 'node'), (',', ','), ('one', 'one'), ('affecting', 'affecting'), ('must', 'must'), ('directly', 'directly'), ('connected', 'connected'), ('directions', 'direction'), ('effect', 'effect'), ('.', '.')]



============================ Sentence 31 =============================

The strength of the relationship between variables is quantified by the probability associated with each node. 


>> Tokens are: 
 ['The', 'strength', 'relationship', 'variables', 'quantified', 'probability', 'associated', 'node', '.']

>> Bigrams are: 
 [('The', 'strength'), ('strength', 'relationship'), ('relationship', 'variables'), ('variables', 'quantified'), ('quantified', 'probability'), ('probability', 'associated'), ('associated', 'node'), ('node', '.')]

>> Trigrams are: 
 [('The', 'strength', 'relationship'), ('strength', 'relationship', 'variables'), ('relationship', 'variables', 'quantified'), ('variables', 'quantified', 'probability'), ('quantified', 'probability', 'associated'), ('probability', 'associated', 'node'), ('associated', 'node', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('strength', 'NN'), ('relationship', 'NN'), ('variables', 'NNS'), ('quantified', 'VBD'), ('probability', 'NN'), ('associated', 'VBN'), ('node', 'NN'), ('.', '.')]

 (S
  (NP The/DT strength/NN relationship/NN variables/NNS)
  quantified/VBD
  (NP probability/NN)
  associated/VBN
  (NP node/NN)
  ./.) 


>> Noun Phrases are: 
 ['The strength relationship variables', 'probability', 'node']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('strength', 'strength'), ('relationship', 'relationship'), ('variables', 'variabl'), ('quantified', 'quantifi'), ('probability', 'probabl'), ('associated', 'associ'), ('node', 'node'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('strength', 'strength'), ('relationship', 'relationship'), ('variables', 'variabl'), ('quantified', 'quantifi'), ('probability', 'probabl'), ('associated', 'associ'), ('node', 'node'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('strength', 'strength'), ('relationship', 'relationship'), ('variables', 'variable'), ('quantified', 'quantified'), ('probability', 'probability'), ('associated', 'associated'), ('node', 'node'), ('.', '.')]



============================ Sentence 32 =============================

There is an only constraint on the arcs in a BN that you cannot return to a node simply by following directed arcs. 


>> Tokens are: 
 ['There', 'constraint', 'arcs', 'BN', 'return', 'node', 'simply', 'following', 'directed', 'arcs', '.']

>> Bigrams are: 
 [('There', 'constraint'), ('constraint', 'arcs'), ('arcs', 'BN'), ('BN', 'return'), ('return', 'node'), ('node', 'simply'), ('simply', 'following'), ('following', 'directed'), ('directed', 'arcs'), ('arcs', '.')]

>> Trigrams are: 
 [('There', 'constraint', 'arcs'), ('constraint', 'arcs', 'BN'), ('arcs', 'BN', 'return'), ('BN', 'return', 'node'), ('return', 'node', 'simply'), ('node', 'simply', 'following'), ('simply', 'following', 'directed'), ('following', 'directed', 'arcs'), ('directed', 'arcs', '.')]

>> POS Tags are: 
 [('There', 'EX'), ('constraint', 'NN'), ('arcs', 'NN'), ('BN', 'NNP'), ('return', 'NN'), ('node', 'RB'), ('simply', 'RB'), ('following', 'VBG'), ('directed', 'VBN'), ('arcs', 'NNS'), ('.', '.')]

 (S
  There/EX
  (NP constraint/NN arcs/NN BN/NNP return/NN)
  node/RB
  simply/RB
  following/VBG
  directed/VBN
  (NP arcs/NNS)
  ./.) 


>> Noun Phrases are: 
 ['constraint arcs BN return', 'arcs']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('There', 'there'), ('constraint', 'constraint'), ('arcs', 'arc'), ('BN', 'bn'), ('return', 'return'), ('node', 'node'), ('simply', 'simpli'), ('following', 'follow'), ('directed', 'direct'), ('arcs', 'arc'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('There', 'there'), ('constraint', 'constraint'), ('arcs', 'arc'), ('BN', 'bn'), ('return', 'return'), ('node', 'node'), ('simply', 'simpli'), ('following', 'follow'), ('directed', 'direct'), ('arcs', 'arc'), ('.', '.')]

>> Lemmatization: 
 [('There', 'There'), ('constraint', 'constraint'), ('arcs', 'arc'), ('BN', 'BN'), ('return', 'return'), ('node', 'node'), ('simply', 'simply'), ('following', 'following'), ('directed', 'directed'), ('arcs', 'arc'), ('.', '.')]



============================ Sentence 33 =============================

Hence the BNs are called Directed Acyclic Graphs (DAGs). 


>> Tokens are: 
 ['Hence', 'BNs', 'called', 'Directed', 'Acyclic', 'Graphs', '(', 'DAGs', ')', '.']

>> Bigrams are: 
 [('Hence', 'BNs'), ('BNs', 'called'), ('called', 'Directed'), ('Directed', 'Acyclic'), ('Acyclic', 'Graphs'), ('Graphs', '('), ('(', 'DAGs'), ('DAGs', ')'), (')', '.')]

>> Trigrams are: 
 [('Hence', 'BNs', 'called'), ('BNs', 'called', 'Directed'), ('called', 'Directed', 'Acyclic'), ('Directed', 'Acyclic', 'Graphs'), ('Acyclic', 'Graphs', '('), ('Graphs', '(', 'DAGs'), ('(', 'DAGs', ')'), ('DAGs', ')', '.')]

>> POS Tags are: 
 [('Hence', 'NNP'), ('BNs', 'NNP'), ('called', 'VBD'), ('Directed', 'NNP'), ('Acyclic', 'NNP'), ('Graphs', 'NNP'), ('(', '('), ('DAGs', 'NNP'), (')', ')'), ('.', '.')]

 (S
  (NP Hence/NNP BNs/NNP)
  called/VBD
  (NP Directed/NNP Acyclic/NNP Graphs/NNP)
  (/(
  (NP DAGs/NNP)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['Hence BNs', 'Directed Acyclic Graphs', 'DAGs']

>> Named Entities are: 
 [('PERSON', 'Hence'), ('ORGANIZATION', 'BNs'), ('ORGANIZATION', 'Directed Acyclic Graphs'), ('ORGANIZATION', 'DAGs')] 

>> Stemming using Porter Stemmer: 
 [('Hence', 'henc'), ('BNs', 'bn'), ('called', 'call'), ('Directed', 'direct'), ('Acyclic', 'acycl'), ('Graphs', 'graph'), ('(', '('), ('DAGs', 'dag'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Hence', 'henc'), ('BNs', 'bns'), ('called', 'call'), ('Directed', 'direct'), ('Acyclic', 'acycl'), ('Graphs', 'graph'), ('(', '('), ('DAGs', 'dag'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('Hence', 'Hence'), ('BNs', 'BNs'), ('called', 'called'), ('Directed', 'Directed'), ('Acyclic', 'Acyclic'), ('Graphs', 'Graphs'), ('(', '('), ('DAGs', 'DAGs'), (')', ')'), ('.', '.')]



============================ Sentence 34 =============================

BNs are capable of handling multivalued variables simultaneously. 


>> Tokens are: 
 ['BNs', 'capable', 'handling', 'multivalued', 'variables', 'simultaneously', '.']

>> Bigrams are: 
 [('BNs', 'capable'), ('capable', 'handling'), ('handling', 'multivalued'), ('multivalued', 'variables'), ('variables', 'simultaneously'), ('simultaneously', '.')]

>> Trigrams are: 
 [('BNs', 'capable', 'handling'), ('capable', 'handling', 'multivalued'), ('handling', 'multivalued', 'variables'), ('multivalued', 'variables', 'simultaneously'), ('variables', 'simultaneously', '.')]

>> POS Tags are: 
 [('BNs', 'NNP'), ('capable', 'JJ'), ('handling', 'VBG'), ('multivalued', 'VBN'), ('variables', 'NNS'), ('simultaneously', 'RB'), ('.', '.')]

 (S
  (NP BNs/NNP)
  capable/JJ
  handling/VBG
  multivalued/VBN
  (NP variables/NNS)
  simultaneously/RB
  ./.) 


>> Noun Phrases are: 
 ['BNs', 'variables']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('BNs', 'bn'), ('capable', 'capabl'), ('handling', 'handl'), ('multivalued', 'multivalu'), ('variables', 'variabl'), ('simultaneously', 'simultan'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('BNs', 'bns'), ('capable', 'capabl'), ('handling', 'handl'), ('multivalued', 'multivalu'), ('variables', 'variabl'), ('simultaneously', 'simultan'), ('.', '.')]

>> Lemmatization: 
 [('BNs', 'BNs'), ('capable', 'capable'), ('handling', 'handling'), ('multivalued', 'multivalued'), ('variables', 'variable'), ('simultaneously', 'simultaneously'), ('.', '.')]



============================ Sentence 35 =============================

The BN variables are composed of two dimensions − · Range of prepositions · Probability assigned to each of the prepositions. 


>> Tokens are: 
 ['The', 'BN', 'variables', 'composed', 'two', 'dimensions', '−', '·', 'Range', 'prepositions', '·', 'Probability', 'assigned', 'prepositions', '.']

>> Bigrams are: 
 [('The', 'BN'), ('BN', 'variables'), ('variables', 'composed'), ('composed', 'two'), ('two', 'dimensions'), ('dimensions', '−'), ('−', '·'), ('·', 'Range'), ('Range', 'prepositions'), ('prepositions', '·'), ('·', 'Probability'), ('Probability', 'assigned'), ('assigned', 'prepositions'), ('prepositions', '.')]

>> Trigrams are: 
 [('The', 'BN', 'variables'), ('BN', 'variables', 'composed'), ('variables', 'composed', 'two'), ('composed', 'two', 'dimensions'), ('two', 'dimensions', '−'), ('dimensions', '−', '·'), ('−', '·', 'Range'), ('·', 'Range', 'prepositions'), ('Range', 'prepositions', '·'), ('prepositions', '·', 'Probability'), ('·', 'Probability', 'assigned'), ('Probability', 'assigned', 'prepositions'), ('assigned', 'prepositions', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('BN', 'NNP'), ('variables', 'NNS'), ('composed', 'VBD'), ('two', 'CD'), ('dimensions', 'NNS'), ('−', 'VBP'), ('·', 'JJ'), ('Range', 'NNP'), ('prepositions', 'NNS'), ('·', 'VBP'), ('Probability', 'NNP'), ('assigned', 'VBD'), ('prepositions', 'NNS'), ('.', '.')]

 (S
  (NP The/DT BN/NNP variables/NNS)
  composed/VBD
  two/CD
  (NP dimensions/NNS)
  −/VBP
  (NP ·/JJ Range/NNP prepositions/NNS)
  ·/VBP
  (NP Probability/NNP)
  assigned/VBD
  (NP prepositions/NNS)
  ./.) 


>> Noun Phrases are: 
 ['The BN variables', 'dimensions', '· Range prepositions', 'Probability', 'prepositions']

>> Named Entities are: 
 [('ORGANIZATION', 'BN')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('BN', 'bn'), ('variables', 'variabl'), ('composed', 'compos'), ('two', 'two'), ('dimensions', 'dimens'), ('−', '−'), ('·', '·'), ('Range', 'rang'), ('prepositions', 'preposit'), ('·', '·'), ('Probability', 'probabl'), ('assigned', 'assign'), ('prepositions', 'preposit'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('BN', 'bn'), ('variables', 'variabl'), ('composed', 'compos'), ('two', 'two'), ('dimensions', 'dimens'), ('−', '−'), ('·', '·'), ('Range', 'rang'), ('prepositions', 'preposit'), ('·', '·'), ('Probability', 'probabl'), ('assigned', 'assign'), ('prepositions', 'preposit'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('BN', 'BN'), ('variables', 'variable'), ('composed', 'composed'), ('two', 'two'), ('dimensions', 'dimension'), ('−', '−'), ('·', '·'), ('Range', 'Range'), ('prepositions', 'preposition'), ('·', '·'), ('Probability', 'Probability'), ('assigned', 'assigned'), ('prepositions', 'preposition'), ('.', '.')]



============================ Sentence 36 =============================

Consider a finite set X = {X1, X2, …,Xn} of discrete random variables, where each variable Xi may take values from a finite set, denoted by Val(Xi). 


>> Tokens are: 
 ['Consider', 'finite', 'set', 'X', '=', '{', 'X1', ',', 'X2', ',', '…', ',', 'Xn', '}', 'discrete', 'random', 'variables', ',', 'variable', 'Xi', 'may', 'take', 'values', 'finite', 'set', ',', 'denoted', 'Val', '(', 'Xi', ')', '.']

>> Bigrams are: 
 [('Consider', 'finite'), ('finite', 'set'), ('set', 'X'), ('X', '='), ('=', '{'), ('{', 'X1'), ('X1', ','), (',', 'X2'), ('X2', ','), (',', '…'), ('…', ','), (',', 'Xn'), ('Xn', '}'), ('}', 'discrete'), ('discrete', 'random'), ('random', 'variables'), ('variables', ','), (',', 'variable'), ('variable', 'Xi'), ('Xi', 'may'), ('may', 'take'), ('take', 'values'), ('values', 'finite'), ('finite', 'set'), ('set', ','), (',', 'denoted'), ('denoted', 'Val'), ('Val', '('), ('(', 'Xi'), ('Xi', ')'), (')', '.')]

>> Trigrams are: 
 [('Consider', 'finite', 'set'), ('finite', 'set', 'X'), ('set', 'X', '='), ('X', '=', '{'), ('=', '{', 'X1'), ('{', 'X1', ','), ('X1', ',', 'X2'), (',', 'X2', ','), ('X2', ',', '…'), (',', '…', ','), ('…', ',', 'Xn'), (',', 'Xn', '}'), ('Xn', '}', 'discrete'), ('}', 'discrete', 'random'), ('discrete', 'random', 'variables'), ('random', 'variables', ','), ('variables', ',', 'variable'), (',', 'variable', 'Xi'), ('variable', 'Xi', 'may'), ('Xi', 'may', 'take'), ('may', 'take', 'values'), ('take', 'values', 'finite'), ('values', 'finite', 'set'), ('finite', 'set', ','), ('set', ',', 'denoted'), (',', 'denoted', 'Val'), ('denoted', 'Val', '('), ('Val', '(', 'Xi'), ('(', 'Xi', ')'), ('Xi', ')', '.')]

>> POS Tags are: 
 [('Consider', 'VB'), ('finite', 'JJ'), ('set', 'NN'), ('X', 'NNP'), ('=', 'NNP'), ('{', '('), ('X1', 'NNP'), (',', ','), ('X2', 'NNP'), (',', ','), ('…', 'NNP'), (',', ','), ('Xn', 'NNP'), ('}', ')'), ('discrete', 'JJ'), ('random', 'JJ'), ('variables', 'NNS'), (',', ','), ('variable', 'JJ'), ('Xi', 'NN'), ('may', 'MD'), ('take', 'VB'), ('values', 'NNS'), ('finite', 'RB'), ('set', 'VBN'), (',', ','), ('denoted', 'VBN'), ('Val', 'NNP'), ('(', '('), ('Xi', 'NNP'), (')', ')'), ('.', '.')]

 (S
  Consider/VB
  (NP finite/JJ set/NN X/NNP =/NNP)
  {/(
  (NP X1/NNP)
  ,/,
  (NP X2/NNP)
  ,/,
  (NP …/NNP)
  ,/,
  (NP Xn/NNP)
  }/)
  (NP discrete/JJ random/JJ variables/NNS)
  ,/,
  (NP variable/JJ Xi/NN)
  may/MD
  take/VB
  (NP values/NNS)
  finite/RB
  set/VBN
  ,/,
  denoted/VBN
  (NP Val/NNP)
  (/(
  (NP Xi/NNP)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['finite set X =', 'X1', 'X2', '…', 'Xn', 'discrete random variables', 'variable Xi', 'values', 'Val', 'Xi']

>> Named Entities are: 
 [('GPE', 'X2'), ('GPE', 'Val')] 

>> Stemming using Porter Stemmer: 
 [('Consider', 'consid'), ('finite', 'finit'), ('set', 'set'), ('X', 'x'), ('=', '='), ('{', '{'), ('X1', 'x1'), (',', ','), ('X2', 'x2'), (',', ','), ('…', '…'), (',', ','), ('Xn', 'xn'), ('}', '}'), ('discrete', 'discret'), ('random', 'random'), ('variables', 'variabl'), (',', ','), ('variable', 'variabl'), ('Xi', 'xi'), ('may', 'may'), ('take', 'take'), ('values', 'valu'), ('finite', 'finit'), ('set', 'set'), (',', ','), ('denoted', 'denot'), ('Val', 'val'), ('(', '('), ('Xi', 'xi'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Consider', 'consid'), ('finite', 'finit'), ('set', 'set'), ('X', 'x'), ('=', '='), ('{', '{'), ('X1', 'x1'), (',', ','), ('X2', 'x2'), (',', ','), ('…', '…'), (',', ','), ('Xn', 'xn'), ('}', '}'), ('discrete', 'discret'), ('random', 'random'), ('variables', 'variabl'), (',', ','), ('variable', 'variabl'), ('Xi', 'xi'), ('may', 'may'), ('take', 'take'), ('values', 'valu'), ('finite', 'finit'), ('set', 'set'), (',', ','), ('denoted', 'denot'), ('Val', 'val'), ('(', '('), ('Xi', 'xi'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('Consider', 'Consider'), ('finite', 'finite'), ('set', 'set'), ('X', 'X'), ('=', '='), ('{', '{'), ('X1', 'X1'), (',', ','), ('X2', 'X2'), (',', ','), ('…', '…'), (',', ','), ('Xn', 'Xn'), ('}', '}'), ('discrete', 'discrete'), ('random', 'random'), ('variables', 'variable'), (',', ','), ('variable', 'variable'), ('Xi', 'Xi'), ('may', 'may'), ('take', 'take'), ('values', 'value'), ('finite', 'finite'), ('set', 'set'), (',', ','), ('denoted', 'denoted'), ('Val', 'Val'), ('(', '('), ('Xi', 'Xi'), (')', ')'), ('.', '.')]



============================ Sentence 37 =============================

If there is a directed link from variable Xi to variable, Xj, then variable Xi will be a parent of variable Xj showing direct dependencies between the variables. 


>> Tokens are: 
 ['If', 'directed', 'link', 'variable', 'Xi', 'variable', ',', 'Xj', ',', 'variable', 'Xi', 'parent', 'variable', 'Xj', 'showing', 'direct', 'dependencies', 'variables', '.']

>> Bigrams are: 
 [('If', 'directed'), ('directed', 'link'), ('link', 'variable'), ('variable', 'Xi'), ('Xi', 'variable'), ('variable', ','), (',', 'Xj'), ('Xj', ','), (',', 'variable'), ('variable', 'Xi'), ('Xi', 'parent'), ('parent', 'variable'), ('variable', 'Xj'), ('Xj', 'showing'), ('showing', 'direct'), ('direct', 'dependencies'), ('dependencies', 'variables'), ('variables', '.')]

>> Trigrams are: 
 [('If', 'directed', 'link'), ('directed', 'link', 'variable'), ('link', 'variable', 'Xi'), ('variable', 'Xi', 'variable'), ('Xi', 'variable', ','), ('variable', ',', 'Xj'), (',', 'Xj', ','), ('Xj', ',', 'variable'), (',', 'variable', 'Xi'), ('variable', 'Xi', 'parent'), ('Xi', 'parent', 'variable'), ('parent', 'variable', 'Xj'), ('variable', 'Xj', 'showing'), ('Xj', 'showing', 'direct'), ('showing', 'direct', 'dependencies'), ('direct', 'dependencies', 'variables'), ('dependencies', 'variables', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('directed', 'VBN'), ('link', 'NN'), ('variable', 'JJ'), ('Xi', 'NNP'), ('variable', 'NN'), (',', ','), ('Xj', 'NNP'), (',', ','), ('variable', 'JJ'), ('Xi', 'FW'), ('parent', 'NN'), ('variable', 'JJ'), ('Xj', 'NNP'), ('showing', 'VBG'), ('direct', 'JJ'), ('dependencies', 'NNS'), ('variables', 'NNS'), ('.', '.')]

 (S
  If/IN
  directed/VBN
  (NP link/NN)
  (NP variable/JJ Xi/NNP variable/NN)
  ,/,
  (NP Xj/NNP)
  ,/,
  variable/JJ
  Xi/FW
  (NP parent/NN)
  (NP variable/JJ Xj/NNP)
  showing/VBG
  (NP direct/JJ dependencies/NNS variables/NNS)
  ./.) 


>> Noun Phrases are: 
 ['link', 'variable Xi variable', 'Xj', 'parent', 'variable Xj', 'direct dependencies variables']

>> Named Entities are: 
 [('GPE', 'Xj')] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('directed', 'direct'), ('link', 'link'), ('variable', 'variabl'), ('Xi', 'xi'), ('variable', 'variabl'), (',', ','), ('Xj', 'xj'), (',', ','), ('variable', 'variabl'), ('Xi', 'xi'), ('parent', 'parent'), ('variable', 'variabl'), ('Xj', 'xj'), ('showing', 'show'), ('direct', 'direct'), ('dependencies', 'depend'), ('variables', 'variabl'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('directed', 'direct'), ('link', 'link'), ('variable', 'variabl'), ('Xi', 'xi'), ('variable', 'variabl'), (',', ','), ('Xj', 'xj'), (',', ','), ('variable', 'variabl'), ('Xi', 'xi'), ('parent', 'parent'), ('variable', 'variabl'), ('Xj', 'xj'), ('showing', 'show'), ('direct', 'direct'), ('dependencies', 'depend'), ('variables', 'variabl'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('directed', 'directed'), ('link', 'link'), ('variable', 'variable'), ('Xi', 'Xi'), ('variable', 'variable'), (',', ','), ('Xj', 'Xj'), (',', ','), ('variable', 'variable'), ('Xi', 'Xi'), ('parent', 'parent'), ('variable', 'variable'), ('Xj', 'Xj'), ('showing', 'showing'), ('direct', 'direct'), ('dependencies', 'dependency'), ('variables', 'variable'), ('.', '.')]



============================ Sentence 38 =============================

The structure of BN is ideal for combining prior knowledge and observed data. 


>> Tokens are: 
 ['The', 'structure', 'BN', 'ideal', 'combining', 'prior', 'knowledge', 'observed', 'data', '.']

>> Bigrams are: 
 [('The', 'structure'), ('structure', 'BN'), ('BN', 'ideal'), ('ideal', 'combining'), ('combining', 'prior'), ('prior', 'knowledge'), ('knowledge', 'observed'), ('observed', 'data'), ('data', '.')]

>> Trigrams are: 
 [('The', 'structure', 'BN'), ('structure', 'BN', 'ideal'), ('BN', 'ideal', 'combining'), ('ideal', 'combining', 'prior'), ('combining', 'prior', 'knowledge'), ('prior', 'knowledge', 'observed'), ('knowledge', 'observed', 'data'), ('observed', 'data', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('structure', 'NN'), ('BN', 'NNP'), ('ideal', 'NN'), ('combining', 'VBG'), ('prior', 'JJ'), ('knowledge', 'NN'), ('observed', 'VBD'), ('data', 'NNS'), ('.', '.')]

 (S
  (NP The/DT structure/NN BN/NNP ideal/NN)
  combining/VBG
  (NP prior/JJ knowledge/NN)
  observed/VBD
  (NP data/NNS)
  ./.) 


>> Noun Phrases are: 
 ['The structure BN ideal', 'prior knowledge', 'data']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('structure', 'structur'), ('BN', 'bn'), ('ideal', 'ideal'), ('combining', 'combin'), ('prior', 'prior'), ('knowledge', 'knowledg'), ('observed', 'observ'), ('data', 'data'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('structure', 'structur'), ('BN', 'bn'), ('ideal', 'ideal'), ('combining', 'combin'), ('prior', 'prior'), ('knowledge', 'knowledg'), ('observed', 'observ'), ('data', 'data'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('structure', 'structure'), ('BN', 'BN'), ('ideal', 'ideal'), ('combining', 'combining'), ('prior', 'prior'), ('knowledge', 'knowledge'), ('observed', 'observed'), ('data', 'data'), ('.', '.')]



============================ Sentence 39 =============================

BN can be used to learn the causal relationships and understand various problem domains and to predict future events, even in case of missing data. 


>> Tokens are: 
 ['BN', 'used', 'learn', 'causal', 'relationships', 'understand', 'various', 'problem', 'domains', 'predict', 'future', 'events', ',', 'even', 'case', 'missing', 'data', '.']

>> Bigrams are: 
 [('BN', 'used'), ('used', 'learn'), ('learn', 'causal'), ('causal', 'relationships'), ('relationships', 'understand'), ('understand', 'various'), ('various', 'problem'), ('problem', 'domains'), ('domains', 'predict'), ('predict', 'future'), ('future', 'events'), ('events', ','), (',', 'even'), ('even', 'case'), ('case', 'missing'), ('missing', 'data'), ('data', '.')]

>> Trigrams are: 
 [('BN', 'used', 'learn'), ('used', 'learn', 'causal'), ('learn', 'causal', 'relationships'), ('causal', 'relationships', 'understand'), ('relationships', 'understand', 'various'), ('understand', 'various', 'problem'), ('various', 'problem', 'domains'), ('problem', 'domains', 'predict'), ('domains', 'predict', 'future'), ('predict', 'future', 'events'), ('future', 'events', ','), ('events', ',', 'even'), (',', 'even', 'case'), ('even', 'case', 'missing'), ('case', 'missing', 'data'), ('missing', 'data', '.')]

>> POS Tags are: 
 [('BN', 'NNP'), ('used', 'VBD'), ('learn', 'NN'), ('causal', 'NN'), ('relationships', 'NNS'), ('understand', 'VBP'), ('various', 'JJ'), ('problem', 'NN'), ('domains', 'VBZ'), ('predict', 'JJ'), ('future', 'JJ'), ('events', 'NNS'), (',', ','), ('even', 'RB'), ('case', 'NN'), ('missing', 'VBG'), ('data', 'NNS'), ('.', '.')]

 (S
  (NP BN/NNP)
  used/VBD
  (NP learn/NN causal/NN relationships/NNS)
  understand/VBP
  (NP various/JJ problem/NN)
  domains/VBZ
  (NP predict/JJ future/JJ events/NNS)
  ,/,
  even/RB
  (NP case/NN)
  missing/VBG
  (NP data/NNS)
  ./.) 


>> Noun Phrases are: 
 ['BN', 'learn causal relationships', 'various problem', 'predict future events', 'case', 'data']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('BN', 'bn'), ('used', 'use'), ('learn', 'learn'), ('causal', 'causal'), ('relationships', 'relationship'), ('understand', 'understand'), ('various', 'variou'), ('problem', 'problem'), ('domains', 'domain'), ('predict', 'predict'), ('future', 'futur'), ('events', 'event'), (',', ','), ('even', 'even'), ('case', 'case'), ('missing', 'miss'), ('data', 'data'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('BN', 'bn'), ('used', 'use'), ('learn', 'learn'), ('causal', 'causal'), ('relationships', 'relationship'), ('understand', 'understand'), ('various', 'various'), ('problem', 'problem'), ('domains', 'domain'), ('predict', 'predict'), ('future', 'futur'), ('events', 'event'), (',', ','), ('even', 'even'), ('case', 'case'), ('missing', 'miss'), ('data', 'data'), ('.', '.')]

>> Lemmatization: 
 [('BN', 'BN'), ('used', 'used'), ('learn', 'learn'), ('causal', 'causal'), ('relationships', 'relationship'), ('understand', 'understand'), ('various', 'various'), ('problem', 'problem'), ('domains', 'domain'), ('predict', 'predict'), ('future', 'future'), ('events', 'event'), (',', ','), ('even', 'even'), ('case', 'case'), ('missing', 'missing'), ('data', 'data'), ('.', '.')]



============================ Sentence 40 =============================

Building a Bayesian Network A knowledge engineer can build a Bayesian network. 


>> Tokens are: 
 ['Building', 'Bayesian', 'Network', 'A', 'knowledge', 'engineer', 'build', 'Bayesian', 'network', '.']

>> Bigrams are: 
 [('Building', 'Bayesian'), ('Bayesian', 'Network'), ('Network', 'A'), ('A', 'knowledge'), ('knowledge', 'engineer'), ('engineer', 'build'), ('build', 'Bayesian'), ('Bayesian', 'network'), ('network', '.')]

>> Trigrams are: 
 [('Building', 'Bayesian', 'Network'), ('Bayesian', 'Network', 'A'), ('Network', 'A', 'knowledge'), ('A', 'knowledge', 'engineer'), ('knowledge', 'engineer', 'build'), ('engineer', 'build', 'Bayesian'), ('build', 'Bayesian', 'network'), ('Bayesian', 'network', '.')]

>> POS Tags are: 
 [('Building', 'VBG'), ('Bayesian', 'NNP'), ('Network', 'NNP'), ('A', 'NNP'), ('knowledge', 'NN'), ('engineer', 'NN'), ('build', 'NN'), ('Bayesian', 'JJ'), ('network', 'NN'), ('.', '.')]

 (S
  Building/VBG
  (NP
    Bayesian/NNP
    Network/NNP
    A/NNP
    knowledge/NN
    engineer/NN
    build/NN)
  (NP Bayesian/JJ network/NN)
  ./.) 


>> Noun Phrases are: 
 ['Bayesian Network A knowledge engineer build', 'Bayesian network']

>> Named Entities are: 
 [('PERSON', 'Bayesian Network'), ('GPE', 'Bayesian')] 

>> Stemming using Porter Stemmer: 
 [('Building', 'build'), ('Bayesian', 'bayesian'), ('Network', 'network'), ('A', 'a'), ('knowledge', 'knowledg'), ('engineer', 'engin'), ('build', 'build'), ('Bayesian', 'bayesian'), ('network', 'network'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Building', 'build'), ('Bayesian', 'bayesian'), ('Network', 'network'), ('A', 'a'), ('knowledge', 'knowledg'), ('engineer', 'engin'), ('build', 'build'), ('Bayesian', 'bayesian'), ('network', 'network'), ('.', '.')]

>> Lemmatization: 
 [('Building', 'Building'), ('Bayesian', 'Bayesian'), ('Network', 'Network'), ('A', 'A'), ('knowledge', 'knowledge'), ('engineer', 'engineer'), ('build', 'build'), ('Bayesian', 'Bayesian'), ('network', 'network'), ('.', '.')]



============================ Sentence 41 =============================

There are a number of steps the knowledge engineer needs to take while building it. 


>> Tokens are: 
 ['There', 'number', 'steps', 'knowledge', 'engineer', 'needs', 'take', 'building', '.']

>> Bigrams are: 
 [('There', 'number'), ('number', 'steps'), ('steps', 'knowledge'), ('knowledge', 'engineer'), ('engineer', 'needs'), ('needs', 'take'), ('take', 'building'), ('building', '.')]

>> Trigrams are: 
 [('There', 'number', 'steps'), ('number', 'steps', 'knowledge'), ('steps', 'knowledge', 'engineer'), ('knowledge', 'engineer', 'needs'), ('engineer', 'needs', 'take'), ('needs', 'take', 'building'), ('take', 'building', '.')]

>> POS Tags are: 
 [('There', 'EX'), ('number', 'NN'), ('steps', 'NNS'), ('knowledge', 'VBP'), ('engineer', 'NN'), ('needs', 'NNS'), ('take', 'VBP'), ('building', 'NN'), ('.', '.')]

 (S
  There/EX
  (NP number/NN steps/NNS)
  knowledge/VBP
  (NP engineer/NN needs/NNS)
  take/VBP
  (NP building/NN)
  ./.) 


>> Noun Phrases are: 
 ['number steps', 'engineer needs', 'building']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('There', 'there'), ('number', 'number'), ('steps', 'step'), ('knowledge', 'knowledg'), ('engineer', 'engin'), ('needs', 'need'), ('take', 'take'), ('building', 'build'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('There', 'there'), ('number', 'number'), ('steps', 'step'), ('knowledge', 'knowledg'), ('engineer', 'engin'), ('needs', 'need'), ('take', 'take'), ('building', 'build'), ('.', '.')]

>> Lemmatization: 
 [('There', 'There'), ('number', 'number'), ('steps', 'step'), ('knowledge', 'knowledge'), ('engineer', 'engineer'), ('needs', 'need'), ('take', 'take'), ('building', 'building'), ('.', '.')]



============================ Sentence 42 =============================

Example problem − Lung cancer. 


>> Tokens are: 
 ['Example', 'problem', '−', 'Lung', 'cancer', '.']

>> Bigrams are: 
 [('Example', 'problem'), ('problem', '−'), ('−', 'Lung'), ('Lung', 'cancer'), ('cancer', '.')]

>> Trigrams are: 
 [('Example', 'problem', '−'), ('problem', '−', 'Lung'), ('−', 'Lung', 'cancer'), ('Lung', 'cancer', '.')]

>> POS Tags are: 
 [('Example', 'NN'), ('problem', 'NN'), ('−', 'NNP'), ('Lung', 'NNP'), ('cancer', 'NN'), ('.', '.')]

 (S (NP Example/NN problem/NN −/NNP Lung/NNP cancer/NN) ./.) 


>> Noun Phrases are: 
 ['Example problem − Lung cancer']

>> Named Entities are: 
 [('GPE', 'Example')] 

>> Stemming using Porter Stemmer: 
 [('Example', 'exampl'), ('problem', 'problem'), ('−', '−'), ('Lung', 'lung'), ('cancer', 'cancer'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Example', 'exampl'), ('problem', 'problem'), ('−', '−'), ('Lung', 'lung'), ('cancer', 'cancer'), ('.', '.')]

>> Lemmatization: 
 [('Example', 'Example'), ('problem', 'problem'), ('−', '−'), ('Lung', 'Lung'), ('cancer', 'cancer'), ('.', '.')]



============================ Sentence 43 =============================

A patient has been suffering from breathlessness. 


>> Tokens are: 
 ['A', 'patient', 'suffering', 'breathlessness', '.']

>> Bigrams are: 
 [('A', 'patient'), ('patient', 'suffering'), ('suffering', 'breathlessness'), ('breathlessness', '.')]

>> Trigrams are: 
 [('A', 'patient', 'suffering'), ('patient', 'suffering', 'breathlessness'), ('suffering', 'breathlessness', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('patient', 'NN'), ('suffering', 'VBG'), ('breathlessness', 'NN'), ('.', '.')]

 (S (NP A/DT patient/NN) suffering/VBG (NP breathlessness/NN) ./.) 


>> Noun Phrases are: 
 ['A patient', 'breathlessness']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('patient', 'patient'), ('suffering', 'suffer'), ('breathlessness', 'breathless'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('patient', 'patient'), ('suffering', 'suffer'), ('breathlessness', 'breathless'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('patient', 'patient'), ('suffering', 'suffering'), ('breathlessness', 'breathlessness'), ('.', '.')]



============================ Sentence 44 =============================

He visits the doctor, suspecting he has lung cancer. 


>> Tokens are: 
 ['He', 'visits', 'doctor', ',', 'suspecting', 'lung', 'cancer', '.']

>> Bigrams are: 
 [('He', 'visits'), ('visits', 'doctor'), ('doctor', ','), (',', 'suspecting'), ('suspecting', 'lung'), ('lung', 'cancer'), ('cancer', '.')]

>> Trigrams are: 
 [('He', 'visits', 'doctor'), ('visits', 'doctor', ','), ('doctor', ',', 'suspecting'), (',', 'suspecting', 'lung'), ('suspecting', 'lung', 'cancer'), ('lung', 'cancer', '.')]

>> POS Tags are: 
 [('He', 'PRP'), ('visits', 'VBZ'), ('doctor', 'NN'), (',', ','), ('suspecting', 'VBG'), ('lung', 'NN'), ('cancer', 'NN'), ('.', '.')]

 (S
  He/PRP
  visits/VBZ
  (NP doctor/NN)
  ,/,
  suspecting/VBG
  (NP lung/NN cancer/NN)
  ./.) 


>> Noun Phrases are: 
 ['doctor', 'lung cancer']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('He', 'he'), ('visits', 'visit'), ('doctor', 'doctor'), (',', ','), ('suspecting', 'suspect'), ('lung', 'lung'), ('cancer', 'cancer'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('He', 'he'), ('visits', 'visit'), ('doctor', 'doctor'), (',', ','), ('suspecting', 'suspect'), ('lung', 'lung'), ('cancer', 'cancer'), ('.', '.')]

>> Lemmatization: 
 [('He', 'He'), ('visits', 'visit'), ('doctor', 'doctor'), (',', ','), ('suspecting', 'suspecting'), ('lung', 'lung'), ('cancer', 'cancer'), ('.', '.')]



============================ Sentence 45 =============================

The doctor knows that barring lung cancer, there are various other possible diseases the patient might have such as tuberculosis and bronchitis. 


>> Tokens are: 
 ['The', 'doctor', 'knows', 'barring', 'lung', 'cancer', ',', 'various', 'possible', 'diseases', 'patient', 'might', 'tuberculosis', 'bronchitis', '.']

>> Bigrams are: 
 [('The', 'doctor'), ('doctor', 'knows'), ('knows', 'barring'), ('barring', 'lung'), ('lung', 'cancer'), ('cancer', ','), (',', 'various'), ('various', 'possible'), ('possible', 'diseases'), ('diseases', 'patient'), ('patient', 'might'), ('might', 'tuberculosis'), ('tuberculosis', 'bronchitis'), ('bronchitis', '.')]

>> Trigrams are: 
 [('The', 'doctor', 'knows'), ('doctor', 'knows', 'barring'), ('knows', 'barring', 'lung'), ('barring', 'lung', 'cancer'), ('lung', 'cancer', ','), ('cancer', ',', 'various'), (',', 'various', 'possible'), ('various', 'possible', 'diseases'), ('possible', 'diseases', 'patient'), ('diseases', 'patient', 'might'), ('patient', 'might', 'tuberculosis'), ('might', 'tuberculosis', 'bronchitis'), ('tuberculosis', 'bronchitis', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('doctor', 'NN'), ('knows', 'VBZ'), ('barring', 'VBG'), ('lung', 'NN'), ('cancer', 'NN'), (',', ','), ('various', 'JJ'), ('possible', 'JJ'), ('diseases', 'NNS'), ('patient', 'JJ'), ('might', 'MD'), ('tuberculosis', 'VB'), ('bronchitis', 'NN'), ('.', '.')]

 (S
  (NP The/DT doctor/NN)
  knows/VBZ
  barring/VBG
  (NP lung/NN cancer/NN)
  ,/,
  (NP various/JJ possible/JJ diseases/NNS)
  patient/JJ
  might/MD
  tuberculosis/VB
  (NP bronchitis/NN)
  ./.) 


>> Noun Phrases are: 
 ['The doctor', 'lung cancer', 'various possible diseases', 'bronchitis']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('doctor', 'doctor'), ('knows', 'know'), ('barring', 'bar'), ('lung', 'lung'), ('cancer', 'cancer'), (',', ','), ('various', 'variou'), ('possible', 'possibl'), ('diseases', 'diseas'), ('patient', 'patient'), ('might', 'might'), ('tuberculosis', 'tuberculosi'), ('bronchitis', 'bronchiti'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('doctor', 'doctor'), ('knows', 'know'), ('barring', 'bar'), ('lung', 'lung'), ('cancer', 'cancer'), (',', ','), ('various', 'various'), ('possible', 'possibl'), ('diseases', 'diseas'), ('patient', 'patient'), ('might', 'might'), ('tuberculosis', 'tuberculosi'), ('bronchitis', 'bronchiti'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('doctor', 'doctor'), ('knows', 'know'), ('barring', 'barring'), ('lung', 'lung'), ('cancer', 'cancer'), (',', ','), ('various', 'various'), ('possible', 'possible'), ('diseases', 'disease'), ('patient', 'patient'), ('might', 'might'), ('tuberculosis', 'tuberculosis'), ('bronchitis', 'bronchitis'), ('.', '.')]



============================ Sentence 46 =============================

Gather Relevant Information of Problem · Is the patient a smoker? 


>> Tokens are: 
 ['Gather', 'Relevant', 'Information', 'Problem', '·', 'Is', 'patient', 'smoker', '?']

>> Bigrams are: 
 [('Gather', 'Relevant'), ('Relevant', 'Information'), ('Information', 'Problem'), ('Problem', '·'), ('·', 'Is'), ('Is', 'patient'), ('patient', 'smoker'), ('smoker', '?')]

>> Trigrams are: 
 [('Gather', 'Relevant', 'Information'), ('Relevant', 'Information', 'Problem'), ('Information', 'Problem', '·'), ('Problem', '·', 'Is'), ('·', 'Is', 'patient'), ('Is', 'patient', 'smoker'), ('patient', 'smoker', '?')]

>> POS Tags are: 
 [('Gather', 'NNP'), ('Relevant', 'NNP'), ('Information', 'NNP'), ('Problem', 'NNP'), ('·', 'NNP'), ('Is', 'NNP'), ('patient', 'JJ'), ('smoker', 'NN'), ('?', '.')]

 (S
  (NP
    Gather/NNP
    Relevant/NNP
    Information/NNP
    Problem/NNP
    ·/NNP
    Is/NNP)
  (NP patient/JJ smoker/NN)
  ?/.) 


>> Noun Phrases are: 
 ['Gather Relevant Information Problem · Is', 'patient smoker']

>> Named Entities are: 
 [('PERSON', 'Gather'), ('ORGANIZATION', 'Relevant Information Problem')] 

>> Stemming using Porter Stemmer: 
 [('Gather', 'gather'), ('Relevant', 'relev'), ('Information', 'inform'), ('Problem', 'problem'), ('·', '·'), ('Is', 'is'), ('patient', 'patient'), ('smoker', 'smoker'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('Gather', 'gather'), ('Relevant', 'relev'), ('Information', 'inform'), ('Problem', 'problem'), ('·', '·'), ('Is', 'is'), ('patient', 'patient'), ('smoker', 'smoker'), ('?', '?')]

>> Lemmatization: 
 [('Gather', 'Gather'), ('Relevant', 'Relevant'), ('Information', 'Information'), ('Problem', 'Problem'), ('·', '·'), ('Is', 'Is'), ('patient', 'patient'), ('smoker', 'smoker'), ('?', '?')]



============================ Sentence 47 =============================

If yes, then high chances of cancer and bronchitis. 


>> Tokens are: 
 ['If', 'yes', ',', 'high', 'chances', 'cancer', 'bronchitis', '.']

>> Bigrams are: 
 [('If', 'yes'), ('yes', ','), (',', 'high'), ('high', 'chances'), ('chances', 'cancer'), ('cancer', 'bronchitis'), ('bronchitis', '.')]

>> Trigrams are: 
 [('If', 'yes', ','), ('yes', ',', 'high'), (',', 'high', 'chances'), ('high', 'chances', 'cancer'), ('chances', 'cancer', 'bronchitis'), ('cancer', 'bronchitis', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('yes', 'NNS'), (',', ','), ('high', 'JJ'), ('chances', 'NNS'), ('cancer', 'NN'), ('bronchitis', 'NN'), ('.', '.')]

 (S
  If/IN
  (NP yes/NNS)
  ,/,
  (NP high/JJ chances/NNS cancer/NN bronchitis/NN)
  ./.) 


>> Noun Phrases are: 
 ['yes', 'high chances cancer bronchitis']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('yes', 'ye'), (',', ','), ('high', 'high'), ('chances', 'chanc'), ('cancer', 'cancer'), ('bronchitis', 'bronchiti'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('yes', 'yes'), (',', ','), ('high', 'high'), ('chances', 'chanc'), ('cancer', 'cancer'), ('bronchitis', 'bronchiti'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('yes', 'yes'), (',', ','), ('high', 'high'), ('chances', 'chance'), ('cancer', 'cancer'), ('bronchitis', 'bronchitis'), ('.', '.')]



============================ Sentence 48 =============================

· Is the patient exposed to air pollution? 


>> Tokens are: 
 ['·', 'Is', 'patient', 'exposed', 'air', 'pollution', '?']

>> Bigrams are: 
 [('·', 'Is'), ('Is', 'patient'), ('patient', 'exposed'), ('exposed', 'air'), ('air', 'pollution'), ('pollution', '?')]

>> Trigrams are: 
 [('·', 'Is', 'patient'), ('Is', 'patient', 'exposed'), ('patient', 'exposed', 'air'), ('exposed', 'air', 'pollution'), ('air', 'pollution', '?')]

>> POS Tags are: 
 [('·', 'NN'), ('Is', 'VBZ'), ('patient', 'JJ'), ('exposed', 'VBN'), ('air', 'NN'), ('pollution', 'NN'), ('?', '.')]

 (S
  (NP ·/NN)
  Is/VBZ
  patient/JJ
  exposed/VBN
  (NP air/NN pollution/NN)
  ?/.) 


>> Noun Phrases are: 
 ['·', 'air pollution']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Is', 'is'), ('patient', 'patient'), ('exposed', 'expos'), ('air', 'air'), ('pollution', 'pollut'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Is', 'is'), ('patient', 'patient'), ('exposed', 'expos'), ('air', 'air'), ('pollution', 'pollut'), ('?', '?')]

>> Lemmatization: 
 [('·', '·'), ('Is', 'Is'), ('patient', 'patient'), ('exposed', 'exposed'), ('air', 'air'), ('pollution', 'pollution'), ('?', '?')]



============================ Sentence 49 =============================

If yes, what sort of air pollution? 


>> Tokens are: 
 ['If', 'yes', ',', 'sort', 'air', 'pollution', '?']

>> Bigrams are: 
 [('If', 'yes'), ('yes', ','), (',', 'sort'), ('sort', 'air'), ('air', 'pollution'), ('pollution', '?')]

>> Trigrams are: 
 [('If', 'yes', ','), ('yes', ',', 'sort'), (',', 'sort', 'air'), ('sort', 'air', 'pollution'), ('air', 'pollution', '?')]

>> POS Tags are: 
 [('If', 'IN'), ('yes', 'NNS'), (',', ','), ('sort', 'NN'), ('air', 'NN'), ('pollution', 'NN'), ('?', '.')]

 (S If/IN (NP yes/NNS) ,/, (NP sort/NN air/NN pollution/NN) ?/.) 


>> Noun Phrases are: 
 ['yes', 'sort air pollution']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('yes', 'ye'), (',', ','), ('sort', 'sort'), ('air', 'air'), ('pollution', 'pollut'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('yes', 'yes'), (',', ','), ('sort', 'sort'), ('air', 'air'), ('pollution', 'pollut'), ('?', '?')]

>> Lemmatization: 
 [('If', 'If'), ('yes', 'yes'), (',', ','), ('sort', 'sort'), ('air', 'air'), ('pollution', 'pollution'), ('?', '?')]



============================ Sentence 50 =============================

· Take an X-Ray positive X-ray would indicate either TB or lung cancer. 


>> Tokens are: 
 ['·', 'Take', 'X-Ray', 'positive', 'X-ray', 'would', 'indicate', 'either', 'TB', 'lung', 'cancer', '.']

>> Bigrams are: 
 [('·', 'Take'), ('Take', 'X-Ray'), ('X-Ray', 'positive'), ('positive', 'X-ray'), ('X-ray', 'would'), ('would', 'indicate'), ('indicate', 'either'), ('either', 'TB'), ('TB', 'lung'), ('lung', 'cancer'), ('cancer', '.')]

>> Trigrams are: 
 [('·', 'Take', 'X-Ray'), ('Take', 'X-Ray', 'positive'), ('X-Ray', 'positive', 'X-ray'), ('positive', 'X-ray', 'would'), ('X-ray', 'would', 'indicate'), ('would', 'indicate', 'either'), ('indicate', 'either', 'TB'), ('either', 'TB', 'lung'), ('TB', 'lung', 'cancer'), ('lung', 'cancer', '.')]

>> POS Tags are: 
 [('·', 'NNS'), ('Take', 'VBP'), ('X-Ray', 'JJ'), ('positive', 'JJ'), ('X-ray', 'NN'), ('would', 'MD'), ('indicate', 'VB'), ('either', 'CC'), ('TB', 'NNP'), ('lung', 'NN'), ('cancer', 'NN'), ('.', '.')]

 (S
  (NP ·/NNS)
  Take/VBP
  (NP X-Ray/JJ positive/JJ X-ray/NN)
  would/MD
  indicate/VB
  either/CC
  (NP TB/NNP lung/NN cancer/NN)
  ./.) 


>> Noun Phrases are: 
 ['·', 'X-Ray positive X-ray', 'TB lung cancer']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Take', 'take'), ('X-Ray', 'x-ray'), ('positive', 'posit'), ('X-ray', 'x-ray'), ('would', 'would'), ('indicate', 'indic'), ('either', 'either'), ('TB', 'tb'), ('lung', 'lung'), ('cancer', 'cancer'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Take', 'take'), ('X-Ray', 'x-ray'), ('positive', 'posit'), ('X-ray', 'x-ray'), ('would', 'would'), ('indicate', 'indic'), ('either', 'either'), ('TB', 'tb'), ('lung', 'lung'), ('cancer', 'cancer'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Take', 'Take'), ('X-Ray', 'X-Ray'), ('positive', 'positive'), ('X-ray', 'X-ray'), ('would', 'would'), ('indicate', 'indicate'), ('either', 'either'), ('TB', 'TB'), ('lung', 'lung'), ('cancer', 'cancer'), ('.', '.')]



============================ Sentence 51 =============================

Identify Interesting Variables The knowledge engineer tries to answer the questions − · Which nodes to represent? 


>> Tokens are: 
 ['Identify', 'Interesting', 'Variables', 'The', 'knowledge', 'engineer', 'tries', 'answer', 'questions', '−', '·', 'Which', 'nodes', 'represent', '?']

>> Bigrams are: 
 [('Identify', 'Interesting'), ('Interesting', 'Variables'), ('Variables', 'The'), ('The', 'knowledge'), ('knowledge', 'engineer'), ('engineer', 'tries'), ('tries', 'answer'), ('answer', 'questions'), ('questions', '−'), ('−', '·'), ('·', 'Which'), ('Which', 'nodes'), ('nodes', 'represent'), ('represent', '?')]

>> Trigrams are: 
 [('Identify', 'Interesting', 'Variables'), ('Interesting', 'Variables', 'The'), ('Variables', 'The', 'knowledge'), ('The', 'knowledge', 'engineer'), ('knowledge', 'engineer', 'tries'), ('engineer', 'tries', 'answer'), ('tries', 'answer', 'questions'), ('answer', 'questions', '−'), ('questions', '−', '·'), ('−', '·', 'Which'), ('·', 'Which', 'nodes'), ('Which', 'nodes', 'represent'), ('nodes', 'represent', '?')]

>> POS Tags are: 
 [('Identify', 'NNP'), ('Interesting', 'NNP'), ('Variables', 'NNP'), ('The', 'DT'), ('knowledge', 'NN'), ('engineer', 'NN'), ('tries', 'NNS'), ('answer', 'VBP'), ('questions', 'NNS'), ('−', 'NNP'), ('·', 'NNP'), ('Which', 'NNP'), ('nodes', 'VBZ'), ('represent', 'NN'), ('?', '.')]

 (S
  (NP Identify/NNP Interesting/NNP Variables/NNP)
  (NP The/DT knowledge/NN engineer/NN tries/NNS)
  answer/VBP
  (NP questions/NNS −/NNP ·/NNP Which/NNP)
  nodes/VBZ
  (NP represent/NN)
  ?/.) 


>> Noun Phrases are: 
 ['Identify Interesting Variables', 'The knowledge engineer tries', 'questions − · Which', 'represent']

>> Named Entities are: 
 [('PERSON', 'Identify')] 

>> Stemming using Porter Stemmer: 
 [('Identify', 'identifi'), ('Interesting', 'interest'), ('Variables', 'variabl'), ('The', 'the'), ('knowledge', 'knowledg'), ('engineer', 'engin'), ('tries', 'tri'), ('answer', 'answer'), ('questions', 'question'), ('−', '−'), ('·', '·'), ('Which', 'which'), ('nodes', 'node'), ('represent', 'repres'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('Identify', 'identifi'), ('Interesting', 'interest'), ('Variables', 'variabl'), ('The', 'the'), ('knowledge', 'knowledg'), ('engineer', 'engin'), ('tries', 'tri'), ('answer', 'answer'), ('questions', 'question'), ('−', '−'), ('·', '·'), ('Which', 'which'), ('nodes', 'node'), ('represent', 'repres'), ('?', '?')]

>> Lemmatization: 
 [('Identify', 'Identify'), ('Interesting', 'Interesting'), ('Variables', 'Variables'), ('The', 'The'), ('knowledge', 'knowledge'), ('engineer', 'engineer'), ('tries', 'try'), ('answer', 'answer'), ('questions', 'question'), ('−', '−'), ('·', '·'), ('Which', 'Which'), ('nodes', 'node'), ('represent', 'represent'), ('?', '?')]



============================ Sentence 52 =============================

· What values can they take? 


>> Tokens are: 
 ['·', 'What', 'values', 'take', '?']

>> Bigrams are: 
 [('·', 'What'), ('What', 'values'), ('values', 'take'), ('take', '?')]

>> Trigrams are: 
 [('·', 'What', 'values'), ('What', 'values', 'take'), ('values', 'take', '?')]

>> POS Tags are: 
 [('·', 'VB'), ('What', 'WP'), ('values', 'NNS'), ('take', 'VB'), ('?', '.')]

 (S ·/VB What/WP (NP values/NNS) take/VB ?/.) 


>> Noun Phrases are: 
 ['values']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('What', 'what'), ('values', 'valu'), ('take', 'take'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('What', 'what'), ('values', 'valu'), ('take', 'take'), ('?', '?')]

>> Lemmatization: 
 [('·', '·'), ('What', 'What'), ('values', 'value'), ('take', 'take'), ('?', '?')]



============================ Sentence 53 =============================

In which state can they be? 


>> Tokens are: 
 ['In', 'state', '?']

>> Bigrams are: 
 [('In', 'state'), ('state', '?')]

>> Trigrams are: 
 [('In', 'state', '?')]

>> POS Tags are: 
 [('In', 'IN'), ('state', 'NN'), ('?', '.')]

 (S In/IN (NP state/NN) ?/.) 


>> Noun Phrases are: 
 ['state']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('state', 'state'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('state', 'state'), ('?', '?')]

>> Lemmatization: 
 [('In', 'In'), ('state', 'state'), ('?', '?')]



============================ Sentence 54 =============================

For now let us consider nodes, with only discrete values. 


>> Tokens are: 
 ['For', 'let', 'us', 'consider', 'nodes', ',', 'discrete', 'values', '.']

>> Bigrams are: 
 [('For', 'let'), ('let', 'us'), ('us', 'consider'), ('consider', 'nodes'), ('nodes', ','), (',', 'discrete'), ('discrete', 'values'), ('values', '.')]

>> Trigrams are: 
 [('For', 'let', 'us'), ('let', 'us', 'consider'), ('us', 'consider', 'nodes'), ('consider', 'nodes', ','), ('nodes', ',', 'discrete'), (',', 'discrete', 'values'), ('discrete', 'values', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('let', 'NN'), ('us', 'PRP'), ('consider', 'VB'), ('nodes', 'NNS'), (',', ','), ('discrete', 'JJ'), ('values', 'NNS'), ('.', '.')]

 (S
  For/IN
  (NP let/NN)
  us/PRP
  consider/VB
  (NP nodes/NNS)
  ,/,
  (NP discrete/JJ values/NNS)
  ./.) 


>> Noun Phrases are: 
 ['let', 'nodes', 'discrete values']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('let', 'let'), ('us', 'us'), ('consider', 'consid'), ('nodes', 'node'), (',', ','), ('discrete', 'discret'), ('values', 'valu'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('let', 'let'), ('us', 'us'), ('consider', 'consid'), ('nodes', 'node'), (',', ','), ('discrete', 'discret'), ('values', 'valu'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('let', 'let'), ('us', 'u'), ('consider', 'consider'), ('nodes', 'node'), (',', ','), ('discrete', 'discrete'), ('values', 'value'), ('.', '.')]



============================ Sentence 55 =============================

The variable must take on exactly one of these values at a time. 


>> Tokens are: 
 ['The', 'variable', 'must', 'take', 'exactly', 'one', 'values', 'time', '.']

>> Bigrams are: 
 [('The', 'variable'), ('variable', 'must'), ('must', 'take'), ('take', 'exactly'), ('exactly', 'one'), ('one', 'values'), ('values', 'time'), ('time', '.')]

>> Trigrams are: 
 [('The', 'variable', 'must'), ('variable', 'must', 'take'), ('must', 'take', 'exactly'), ('take', 'exactly', 'one'), ('exactly', 'one', 'values'), ('one', 'values', 'time'), ('values', 'time', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('variable', 'JJ'), ('must', 'MD'), ('take', 'VB'), ('exactly', 'RB'), ('one', 'CD'), ('values', 'NNS'), ('time', 'NN'), ('.', '.')]

 (S
  The/DT
  variable/JJ
  must/MD
  take/VB
  exactly/RB
  one/CD
  (NP values/NNS time/NN)
  ./.) 


>> Noun Phrases are: 
 ['values time']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('variable', 'variabl'), ('must', 'must'), ('take', 'take'), ('exactly', 'exactli'), ('one', 'one'), ('values', 'valu'), ('time', 'time'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('variable', 'variabl'), ('must', 'must'), ('take', 'take'), ('exactly', 'exact'), ('one', 'one'), ('values', 'valu'), ('time', 'time'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('variable', 'variable'), ('must', 'must'), ('take', 'take'), ('exactly', 'exactly'), ('one', 'one'), ('values', 'value'), ('time', 'time'), ('.', '.')]



============================ Sentence 56 =============================

Common types of discrete nodes are − · Boolean nodes − They represent propositions, taking binary values TRUE (T) and FALSE (F). 


>> Tokens are: 
 ['Common', 'types', 'discrete', 'nodes', '−', '·', 'Boolean', 'nodes', '−', 'They', 'represent', 'propositions', ',', 'taking', 'binary', 'values', 'TRUE', '(', 'T', ')', 'FALSE', '(', 'F', ')', '.']

>> Bigrams are: 
 [('Common', 'types'), ('types', 'discrete'), ('discrete', 'nodes'), ('nodes', '−'), ('−', '·'), ('·', 'Boolean'), ('Boolean', 'nodes'), ('nodes', '−'), ('−', 'They'), ('They', 'represent'), ('represent', 'propositions'), ('propositions', ','), (',', 'taking'), ('taking', 'binary'), ('binary', 'values'), ('values', 'TRUE'), ('TRUE', '('), ('(', 'T'), ('T', ')'), (')', 'FALSE'), ('FALSE', '('), ('(', 'F'), ('F', ')'), (')', '.')]

>> Trigrams are: 
 [('Common', 'types', 'discrete'), ('types', 'discrete', 'nodes'), ('discrete', 'nodes', '−'), ('nodes', '−', '·'), ('−', '·', 'Boolean'), ('·', 'Boolean', 'nodes'), ('Boolean', 'nodes', '−'), ('nodes', '−', 'They'), ('−', 'They', 'represent'), ('They', 'represent', 'propositions'), ('represent', 'propositions', ','), ('propositions', ',', 'taking'), (',', 'taking', 'binary'), ('taking', 'binary', 'values'), ('binary', 'values', 'TRUE'), ('values', 'TRUE', '('), ('TRUE', '(', 'T'), ('(', 'T', ')'), ('T', ')', 'FALSE'), (')', 'FALSE', '('), ('FALSE', '(', 'F'), ('(', 'F', ')'), ('F', ')', '.')]

>> POS Tags are: 
 [('Common', 'JJ'), ('types', 'NNS'), ('discrete', 'JJ'), ('nodes', 'NNS'), ('−', 'VBP'), ('·', 'JJ'), ('Boolean', 'NNP'), ('nodes', 'NNS'), ('−', 'VBP'), ('They', 'PRP'), ('represent', 'VBP'), ('propositions', 'NNS'), (',', ','), ('taking', 'VBG'), ('binary', 'JJ'), ('values', 'NNS'), ('TRUE', 'NNP'), ('(', '('), ('T', 'NNP'), (')', ')'), ('FALSE', 'NNP'), ('(', '('), ('F', 'NNP'), (')', ')'), ('.', '.')]

 (S
  (NP Common/JJ types/NNS)
  (NP discrete/JJ nodes/NNS)
  −/VBP
  (NP ·/JJ Boolean/NNP nodes/NNS)
  −/VBP
  They/PRP
  represent/VBP
  (NP propositions/NNS)
  ,/,
  taking/VBG
  (NP binary/JJ values/NNS TRUE/NNP)
  (/(
  (NP T/NNP)
  )/)
  (NP FALSE/NNP)
  (/(
  (NP F/NNP)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['Common types', 'discrete nodes', '· Boolean nodes', 'propositions', 'binary values TRUE', 'T', 'FALSE', 'F']

>> Named Entities are: 
 [('GPE', 'Boolean'), ('ORGANIZATION', 'TRUE')] 

>> Stemming using Porter Stemmer: 
 [('Common', 'common'), ('types', 'type'), ('discrete', 'discret'), ('nodes', 'node'), ('−', '−'), ('·', '·'), ('Boolean', 'boolean'), ('nodes', 'node'), ('−', '−'), ('They', 'they'), ('represent', 'repres'), ('propositions', 'proposit'), (',', ','), ('taking', 'take'), ('binary', 'binari'), ('values', 'valu'), ('TRUE', 'true'), ('(', '('), ('T', 't'), (')', ')'), ('FALSE', 'fals'), ('(', '('), ('F', 'f'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Common', 'common'), ('types', 'type'), ('discrete', 'discret'), ('nodes', 'node'), ('−', '−'), ('·', '·'), ('Boolean', 'boolean'), ('nodes', 'node'), ('−', '−'), ('They', 'they'), ('represent', 'repres'), ('propositions', 'proposit'), (',', ','), ('taking', 'take'), ('binary', 'binari'), ('values', 'valu'), ('TRUE', 'true'), ('(', '('), ('T', 't'), (')', ')'), ('FALSE', 'fals'), ('(', '('), ('F', 'f'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('Common', 'Common'), ('types', 'type'), ('discrete', 'discrete'), ('nodes', 'node'), ('−', '−'), ('·', '·'), ('Boolean', 'Boolean'), ('nodes', 'node'), ('−', '−'), ('They', 'They'), ('represent', 'represent'), ('propositions', 'proposition'), (',', ','), ('taking', 'taking'), ('binary', 'binary'), ('values', 'value'), ('TRUE', 'TRUE'), ('(', '('), ('T', 'T'), (')', ')'), ('FALSE', 'FALSE'), ('(', '('), ('F', 'F'), (')', ')'), ('.', '.')]



============================ Sentence 57 =============================

· Ordered values − A node Pollution might represent and take values from {low, medium, high} describing degree of a patient’s exposure to pollution. 


>> Tokens are: 
 ['·', 'Ordered', 'values', '−', 'A', 'node', 'Pollution', 'might', 'represent', 'take', 'values', '{', 'low', ',', 'medium', ',', 'high', '}', 'describing', 'degree', 'patient', '’', 'exposure', 'pollution', '.']

>> Bigrams are: 
 [('·', 'Ordered'), ('Ordered', 'values'), ('values', '−'), ('−', 'A'), ('A', 'node'), ('node', 'Pollution'), ('Pollution', 'might'), ('might', 'represent'), ('represent', 'take'), ('take', 'values'), ('values', '{'), ('{', 'low'), ('low', ','), (',', 'medium'), ('medium', ','), (',', 'high'), ('high', '}'), ('}', 'describing'), ('describing', 'degree'), ('degree', 'patient'), ('patient', '’'), ('’', 'exposure'), ('exposure', 'pollution'), ('pollution', '.')]

>> Trigrams are: 
 [('·', 'Ordered', 'values'), ('Ordered', 'values', '−'), ('values', '−', 'A'), ('−', 'A', 'node'), ('A', 'node', 'Pollution'), ('node', 'Pollution', 'might'), ('Pollution', 'might', 'represent'), ('might', 'represent', 'take'), ('represent', 'take', 'values'), ('take', 'values', '{'), ('values', '{', 'low'), ('{', 'low', ','), ('low', ',', 'medium'), (',', 'medium', ','), ('medium', ',', 'high'), (',', 'high', '}'), ('high', '}', 'describing'), ('}', 'describing', 'degree'), ('describing', 'degree', 'patient'), ('degree', 'patient', '’'), ('patient', '’', 'exposure'), ('’', 'exposure', 'pollution'), ('exposure', 'pollution', '.')]

>> POS Tags are: 
 [('·', 'RB'), ('Ordered', 'NNP'), ('values', 'NNS'), ('−', 'VBP'), ('A', 'DT'), ('node', 'JJ'), ('Pollution', 'NN'), ('might', 'MD'), ('represent', 'VB'), ('take', 'VB'), ('values', 'NNS'), ('{', '('), ('low', 'JJ'), (',', ','), ('medium', 'NN'), (',', ','), ('high', 'JJ'), ('}', ')'), ('describing', 'VBG'), ('degree', 'JJ'), ('patient', 'NN'), ('’', 'NN'), ('exposure', 'NN'), ('pollution', 'NN'), ('.', '.')]

 (S
  ·/RB
  (NP Ordered/NNP values/NNS)
  −/VBP
  (NP A/DT node/JJ Pollution/NN)
  might/MD
  represent/VB
  take/VB
  (NP values/NNS)
  {/(
  low/JJ
  ,/,
  (NP medium/NN)
  ,/,
  high/JJ
  }/)
  describing/VBG
  (NP degree/JJ patient/NN ’/NN exposure/NN pollution/NN)
  ./.) 


>> Noun Phrases are: 
 ['Ordered values', 'A node Pollution', 'values', 'medium', 'degree patient ’ exposure pollution']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Ordered', 'order'), ('values', 'valu'), ('−', '−'), ('A', 'a'), ('node', 'node'), ('Pollution', 'pollut'), ('might', 'might'), ('represent', 'repres'), ('take', 'take'), ('values', 'valu'), ('{', '{'), ('low', 'low'), (',', ','), ('medium', 'medium'), (',', ','), ('high', 'high'), ('}', '}'), ('describing', 'describ'), ('degree', 'degre'), ('patient', 'patient'), ('’', '’'), ('exposure', 'exposur'), ('pollution', 'pollut'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Ordered', 'order'), ('values', 'valu'), ('−', '−'), ('A', 'a'), ('node', 'node'), ('Pollution', 'pollut'), ('might', 'might'), ('represent', 'repres'), ('take', 'take'), ('values', 'valu'), ('{', '{'), ('low', 'low'), (',', ','), ('medium', 'medium'), (',', ','), ('high', 'high'), ('}', '}'), ('describing', 'describ'), ('degree', 'degre'), ('patient', 'patient'), ('’', '’'), ('exposure', 'exposur'), ('pollution', 'pollut'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Ordered', 'Ordered'), ('values', 'value'), ('−', '−'), ('A', 'A'), ('node', 'node'), ('Pollution', 'Pollution'), ('might', 'might'), ('represent', 'represent'), ('take', 'take'), ('values', 'value'), ('{', '{'), ('low', 'low'), (',', ','), ('medium', 'medium'), (',', ','), ('high', 'high'), ('}', '}'), ('describing', 'describing'), ('degree', 'degree'), ('patient', 'patient'), ('’', '’'), ('exposure', 'exposure'), ('pollution', 'pollution'), ('.', '.')]



============================ Sentence 58 =============================

· Integral values − A node called Age might represent patient’s age with possible values from 1 to 120. 


>> Tokens are: 
 ['·', 'Integral', 'values', '−', 'A', 'node', 'called', 'Age', 'might', 'represent', 'patient', '’', 'age', 'possible', 'values', '1', '120', '.']

>> Bigrams are: 
 [('·', 'Integral'), ('Integral', 'values'), ('values', '−'), ('−', 'A'), ('A', 'node'), ('node', 'called'), ('called', 'Age'), ('Age', 'might'), ('might', 'represent'), ('represent', 'patient'), ('patient', '’'), ('’', 'age'), ('age', 'possible'), ('possible', 'values'), ('values', '1'), ('1', '120'), ('120', '.')]

>> Trigrams are: 
 [('·', 'Integral', 'values'), ('Integral', 'values', '−'), ('values', '−', 'A'), ('−', 'A', 'node'), ('A', 'node', 'called'), ('node', 'called', 'Age'), ('called', 'Age', 'might'), ('Age', 'might', 'represent'), ('might', 'represent', 'patient'), ('represent', 'patient', '’'), ('patient', '’', 'age'), ('’', 'age', 'possible'), ('age', 'possible', 'values'), ('possible', 'values', '1'), ('values', '1', '120'), ('1', '120', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Integral', 'NNP'), ('values', 'NNS'), ('−', 'VBP'), ('A', 'DT'), ('node', 'NN'), ('called', 'VBN'), ('Age', 'NNP'), ('might', 'MD'), ('represent', 'VB'), ('patient', 'JJ'), ('’', 'NNP'), ('age', 'NN'), ('possible', 'JJ'), ('values', 'NNS'), ('1', 'CD'), ('120', 'CD'), ('.', '.')]

 (S
  (NP ·/JJ Integral/NNP values/NNS)
  −/VBP
  (NP A/DT node/NN)
  called/VBN
  (NP Age/NNP)
  might/MD
  represent/VB
  (NP patient/JJ ’/NNP age/NN)
  (NP possible/JJ values/NNS)
  1/CD
  120/CD
  ./.) 


>> Noun Phrases are: 
 ['· Integral values', 'A node', 'Age', 'patient ’ age', 'possible values']

>> Named Entities are: 
 [('PERSON', 'Age')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Integral', 'integr'), ('values', 'valu'), ('−', '−'), ('A', 'a'), ('node', 'node'), ('called', 'call'), ('Age', 'age'), ('might', 'might'), ('represent', 'repres'), ('patient', 'patient'), ('’', '’'), ('age', 'age'), ('possible', 'possibl'), ('values', 'valu'), ('1', '1'), ('120', '120'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Integral', 'integr'), ('values', 'valu'), ('−', '−'), ('A', 'a'), ('node', 'node'), ('called', 'call'), ('Age', 'age'), ('might', 'might'), ('represent', 'repres'), ('patient', 'patient'), ('’', '’'), ('age', 'age'), ('possible', 'possibl'), ('values', 'valu'), ('1', '1'), ('120', '120'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Integral', 'Integral'), ('values', 'value'), ('−', '−'), ('A', 'A'), ('node', 'node'), ('called', 'called'), ('Age', 'Age'), ('might', 'might'), ('represent', 'represent'), ('patient', 'patient'), ('’', '’'), ('age', 'age'), ('possible', 'possible'), ('values', 'value'), ('1', '1'), ('120', '120'), ('.', '.')]



============================ Sentence 59 =============================

Even at this early stage, modeling choices are being made. 


>> Tokens are: 
 ['Even', 'early', 'stage', ',', 'modeling', 'choices', 'made', '.']

>> Bigrams are: 
 [('Even', 'early'), ('early', 'stage'), ('stage', ','), (',', 'modeling'), ('modeling', 'choices'), ('choices', 'made'), ('made', '.')]

>> Trigrams are: 
 [('Even', 'early', 'stage'), ('early', 'stage', ','), ('stage', ',', 'modeling'), (',', 'modeling', 'choices'), ('modeling', 'choices', 'made'), ('choices', 'made', '.')]

>> POS Tags are: 
 [('Even', 'RB'), ('early', 'JJ'), ('stage', 'NN'), (',', ','), ('modeling', 'VBG'), ('choices', 'NNS'), ('made', 'VBN'), ('.', '.')]

 (S
  Even/RB
  (NP early/JJ stage/NN)
  ,/,
  modeling/VBG
  (NP choices/NNS)
  made/VBN
  ./.) 


>> Noun Phrases are: 
 ['early stage', 'choices']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Even', 'even'), ('early', 'earli'), ('stage', 'stage'), (',', ','), ('modeling', 'model'), ('choices', 'choic'), ('made', 'made'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Even', 'even'), ('early', 'earli'), ('stage', 'stage'), (',', ','), ('modeling', 'model'), ('choices', 'choic'), ('made', 'made'), ('.', '.')]

>> Lemmatization: 
 [('Even', 'Even'), ('early', 'early'), ('stage', 'stage'), (',', ','), ('modeling', 'modeling'), ('choices', 'choice'), ('made', 'made'), ('.', '.')]



============================ Sentence 60 =============================

Possible nodes and values for the lung cancer example − 	Node Name 	Type 	Value 	Nodes Creation  	Polution 	Binary 	{LOW, HIGH, MEDIUM} 	  	Smoker 	Boolean 	{TRUE, FASLE} 	  	Lung-Cancer 	Boolean 	{TRUE, FASLE} 	  	X-Ray 	Binary 	{Positive, Negative} 	   Create Arcs between Nodes Topology of the network should capture qualitative relationships between variables. 


>> Tokens are: 
 ['Possible', 'nodes', 'values', 'lung', 'cancer', 'example', '−', 'Node', 'Name', 'Type', 'Value', 'Nodes', 'Creation', 'Polution', 'Binary', '{', 'LOW', ',', 'HIGH', ',', 'MEDIUM', '}', 'Smoker', 'Boolean', '{', 'TRUE', ',', 'FASLE', '}', 'Lung-Cancer', 'Boolean', '{', 'TRUE', ',', 'FASLE', '}', 'X-Ray', 'Binary', '{', 'Positive', ',', 'Negative', '}', 'Create', 'Arcs', 'Nodes', 'Topology', 'network', 'capture', 'qualitative', 'relationships', 'variables', '.']

>> Bigrams are: 
 [('Possible', 'nodes'), ('nodes', 'values'), ('values', 'lung'), ('lung', 'cancer'), ('cancer', 'example'), ('example', '−'), ('−', 'Node'), ('Node', 'Name'), ('Name', 'Type'), ('Type', 'Value'), ('Value', 'Nodes'), ('Nodes', 'Creation'), ('Creation', 'Polution'), ('Polution', 'Binary'), ('Binary', '{'), ('{', 'LOW'), ('LOW', ','), (',', 'HIGH'), ('HIGH', ','), (',', 'MEDIUM'), ('MEDIUM', '}'), ('}', 'Smoker'), ('Smoker', 'Boolean'), ('Boolean', '{'), ('{', 'TRUE'), ('TRUE', ','), (',', 'FASLE'), ('FASLE', '}'), ('}', 'Lung-Cancer'), ('Lung-Cancer', 'Boolean'), ('Boolean', '{'), ('{', 'TRUE'), ('TRUE', ','), (',', 'FASLE'), ('FASLE', '}'), ('}', 'X-Ray'), ('X-Ray', 'Binary'), ('Binary', '{'), ('{', 'Positive'), ('Positive', ','), (',', 'Negative'), ('Negative', '}'), ('}', 'Create'), ('Create', 'Arcs'), ('Arcs', 'Nodes'), ('Nodes', 'Topology'), ('Topology', 'network'), ('network', 'capture'), ('capture', 'qualitative'), ('qualitative', 'relationships'), ('relationships', 'variables'), ('variables', '.')]

>> Trigrams are: 
 [('Possible', 'nodes', 'values'), ('nodes', 'values', 'lung'), ('values', 'lung', 'cancer'), ('lung', 'cancer', 'example'), ('cancer', 'example', '−'), ('example', '−', 'Node'), ('−', 'Node', 'Name'), ('Node', 'Name', 'Type'), ('Name', 'Type', 'Value'), ('Type', 'Value', 'Nodes'), ('Value', 'Nodes', 'Creation'), ('Nodes', 'Creation', 'Polution'), ('Creation', 'Polution', 'Binary'), ('Polution', 'Binary', '{'), ('Binary', '{', 'LOW'), ('{', 'LOW', ','), ('LOW', ',', 'HIGH'), (',', 'HIGH', ','), ('HIGH', ',', 'MEDIUM'), (',', 'MEDIUM', '}'), ('MEDIUM', '}', 'Smoker'), ('}', 'Smoker', 'Boolean'), ('Smoker', 'Boolean', '{'), ('Boolean', '{', 'TRUE'), ('{', 'TRUE', ','), ('TRUE', ',', 'FASLE'), (',', 'FASLE', '}'), ('FASLE', '}', 'Lung-Cancer'), ('}', 'Lung-Cancer', 'Boolean'), ('Lung-Cancer', 'Boolean', '{'), ('Boolean', '{', 'TRUE'), ('{', 'TRUE', ','), ('TRUE', ',', 'FASLE'), (',', 'FASLE', '}'), ('FASLE', '}', 'X-Ray'), ('}', 'X-Ray', 'Binary'), ('X-Ray', 'Binary', '{'), ('Binary', '{', 'Positive'), ('{', 'Positive', ','), ('Positive', ',', 'Negative'), (',', 'Negative', '}'), ('Negative', '}', 'Create'), ('}', 'Create', 'Arcs'), ('Create', 'Arcs', 'Nodes'), ('Arcs', 'Nodes', 'Topology'), ('Nodes', 'Topology', 'network'), ('Topology', 'network', 'capture'), ('network', 'capture', 'qualitative'), ('capture', 'qualitative', 'relationships'), ('qualitative', 'relationships', 'variables'), ('relationships', 'variables', '.')]

>> POS Tags are: 
 [('Possible', 'JJ'), ('nodes', 'NNS'), ('values', 'NNS'), ('lung', 'VBP'), ('cancer', 'NN'), ('example', 'NN'), ('−', 'NNP'), ('Node', 'NNP'), ('Name', 'NNP'), ('Type', 'NNP'), ('Value', 'NNP'), ('Nodes', 'NNP'), ('Creation', 'NNP'), ('Polution', 'NNP'), ('Binary', 'NNP'), ('{', '('), ('LOW', 'NNP'), (',', ','), ('HIGH', 'NNP'), (',', ','), ('MEDIUM', 'NNP'), ('}', ')'), ('Smoker', 'NNP'), ('Boolean', 'NNP'), ('{', '('), ('TRUE', 'NNP'), (',', ','), ('FASLE', 'NNP'), ('}', ')'), ('Lung-Cancer', 'NNP'), ('Boolean', 'NNP'), ('{', '('), ('TRUE', 'NNP'), (',', ','), ('FASLE', 'NNP'), ('}', ')'), ('X-Ray', 'NNP'), ('Binary', 'NNP'), ('{', '('), ('Positive', 'NNP'), (',', ','), ('Negative', 'NNP'), ('}', ')'), ('Create', 'NNP'), ('Arcs', 'NNP'), ('Nodes', 'NNP'), ('Topology', 'NNP'), ('network', 'NN'), ('capture', 'NN'), ('qualitative', 'JJ'), ('relationships', 'NNS'), ('variables', 'NNS'), ('.', '.')]

 (S
  (NP Possible/JJ nodes/NNS values/NNS)
  lung/VBP
  (NP
    cancer/NN
    example/NN
    −/NNP
    Node/NNP
    Name/NNP
    Type/NNP
    Value/NNP
    Nodes/NNP
    Creation/NNP
    Polution/NNP
    Binary/NNP)
  {/(
  (NP LOW/NNP)
  ,/,
  (NP HIGH/NNP)
  ,/,
  (NP MEDIUM/NNP)
  }/)
  (NP Smoker/NNP Boolean/NNP)
  {/(
  (NP TRUE/NNP)
  ,/,
  (NP FASLE/NNP)
  }/)
  (NP Lung-Cancer/NNP Boolean/NNP)
  {/(
  (NP TRUE/NNP)
  ,/,
  (NP FASLE/NNP)
  }/)
  (NP X-Ray/NNP Binary/NNP)
  {/(
  (NP Positive/NNP)
  ,/,
  (NP Negative/NNP)
  }/)
  (NP
    Create/NNP
    Arcs/NNP
    Nodes/NNP
    Topology/NNP
    network/NN
    capture/NN)
  (NP qualitative/JJ relationships/NNS variables/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Possible nodes values', 'cancer example − Node Name Type Value Nodes Creation Polution Binary', 'LOW', 'HIGH', 'MEDIUM', 'Smoker Boolean', 'TRUE', 'FASLE', 'Lung-Cancer Boolean', 'TRUE', 'FASLE', 'X-Ray Binary', 'Positive', 'Negative', 'Create Arcs Nodes Topology network capture', 'qualitative relationships variables']

>> Named Entities are: 
 [('ORGANIZATION', 'LOW'), ('ORGANIZATION', 'HIGH'), ('ORGANIZATION', 'MEDIUM'), ('PERSON', 'Smoker Boolean'), ('ORGANIZATION', 'TRUE'), ('ORGANIZATION', 'FASLE'), ('ORGANIZATION', 'TRUE'), ('ORGANIZATION', 'FASLE'), ('PERSON', 'Negative'), ('ORGANIZATION', 'Create Arcs Nodes Topology')] 

>> Stemming using Porter Stemmer: 
 [('Possible', 'possibl'), ('nodes', 'node'), ('values', 'valu'), ('lung', 'lung'), ('cancer', 'cancer'), ('example', 'exampl'), ('−', '−'), ('Node', 'node'), ('Name', 'name'), ('Type', 'type'), ('Value', 'valu'), ('Nodes', 'node'), ('Creation', 'creation'), ('Polution', 'polut'), ('Binary', 'binari'), ('{', '{'), ('LOW', 'low'), (',', ','), ('HIGH', 'high'), (',', ','), ('MEDIUM', 'medium'), ('}', '}'), ('Smoker', 'smoker'), ('Boolean', 'boolean'), ('{', '{'), ('TRUE', 'true'), (',', ','), ('FASLE', 'fasl'), ('}', '}'), ('Lung-Cancer', 'lung-canc'), ('Boolean', 'boolean'), ('{', '{'), ('TRUE', 'true'), (',', ','), ('FASLE', 'fasl'), ('}', '}'), ('X-Ray', 'x-ray'), ('Binary', 'binari'), ('{', '{'), ('Positive', 'posit'), (',', ','), ('Negative', 'neg'), ('}', '}'), ('Create', 'creat'), ('Arcs', 'arc'), ('Nodes', 'node'), ('Topology', 'topolog'), ('network', 'network'), ('capture', 'captur'), ('qualitative', 'qualit'), ('relationships', 'relationship'), ('variables', 'variabl'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Possible', 'possibl'), ('nodes', 'node'), ('values', 'valu'), ('lung', 'lung'), ('cancer', 'cancer'), ('example', 'exampl'), ('−', '−'), ('Node', 'node'), ('Name', 'name'), ('Type', 'type'), ('Value', 'valu'), ('Nodes', 'node'), ('Creation', 'creation'), ('Polution', 'polut'), ('Binary', 'binari'), ('{', '{'), ('LOW', 'low'), (',', ','), ('HIGH', 'high'), (',', ','), ('MEDIUM', 'medium'), ('}', '}'), ('Smoker', 'smoker'), ('Boolean', 'boolean'), ('{', '{'), ('TRUE', 'true'), (',', ','), ('FASLE', 'fasl'), ('}', '}'), ('Lung-Cancer', 'lung-canc'), ('Boolean', 'boolean'), ('{', '{'), ('TRUE', 'true'), (',', ','), ('FASLE', 'fasl'), ('}', '}'), ('X-Ray', 'x-ray'), ('Binary', 'binari'), ('{', '{'), ('Positive', 'posit'), (',', ','), ('Negative', 'negat'), ('}', '}'), ('Create', 'creat'), ('Arcs', 'arc'), ('Nodes', 'node'), ('Topology', 'topolog'), ('network', 'network'), ('capture', 'captur'), ('qualitative', 'qualit'), ('relationships', 'relationship'), ('variables', 'variabl'), ('.', '.')]

>> Lemmatization: 
 [('Possible', 'Possible'), ('nodes', 'node'), ('values', 'value'), ('lung', 'lung'), ('cancer', 'cancer'), ('example', 'example'), ('−', '−'), ('Node', 'Node'), ('Name', 'Name'), ('Type', 'Type'), ('Value', 'Value'), ('Nodes', 'Nodes'), ('Creation', 'Creation'), ('Polution', 'Polution'), ('Binary', 'Binary'), ('{', '{'), ('LOW', 'LOW'), (',', ','), ('HIGH', 'HIGH'), (',', ','), ('MEDIUM', 'MEDIUM'), ('}', '}'), ('Smoker', 'Smoker'), ('Boolean', 'Boolean'), ('{', '{'), ('TRUE', 'TRUE'), (',', ','), ('FASLE', 'FASLE'), ('}', '}'), ('Lung-Cancer', 'Lung-Cancer'), ('Boolean', 'Boolean'), ('{', '{'), ('TRUE', 'TRUE'), (',', ','), ('FASLE', 'FASLE'), ('}', '}'), ('X-Ray', 'X-Ray'), ('Binary', 'Binary'), ('{', '{'), ('Positive', 'Positive'), (',', ','), ('Negative', 'Negative'), ('}', '}'), ('Create', 'Create'), ('Arcs', 'Arcs'), ('Nodes', 'Nodes'), ('Topology', 'Topology'), ('network', 'network'), ('capture', 'capture'), ('qualitative', 'qualitative'), ('relationships', 'relationship'), ('variables', 'variable'), ('.', '.')]



============================ Sentence 61 =============================

For example, what causes a patient to have lung cancer? 


>> Tokens are: 
 ['For', 'example', ',', 'causes', 'patient', 'lung', 'cancer', '?']

>> Bigrams are: 
 [('For', 'example'), ('example', ','), (',', 'causes'), ('causes', 'patient'), ('patient', 'lung'), ('lung', 'cancer'), ('cancer', '?')]

>> Trigrams are: 
 [('For', 'example', ','), ('example', ',', 'causes'), (',', 'causes', 'patient'), ('causes', 'patient', 'lung'), ('patient', 'lung', 'cancer'), ('lung', 'cancer', '?')]

>> POS Tags are: 
 [('For', 'IN'), ('example', 'NN'), (',', ','), ('causes', 'VBZ'), ('patient', 'JJ'), ('lung', 'NN'), ('cancer', 'NN'), ('?', '.')]

 (S
  For/IN
  (NP example/NN)
  ,/,
  causes/VBZ
  (NP patient/JJ lung/NN cancer/NN)
  ?/.) 


>> Noun Phrases are: 
 ['example', 'patient lung cancer']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('causes', 'caus'), ('patient', 'patient'), ('lung', 'lung'), ('cancer', 'cancer'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('causes', 'caus'), ('patient', 'patient'), ('lung', 'lung'), ('cancer', 'cancer'), ('?', '?')]

>> Lemmatization: 
 [('For', 'For'), ('example', 'example'), (',', ','), ('causes', 'cause'), ('patient', 'patient'), ('lung', 'lung'), ('cancer', 'cancer'), ('?', '?')]



============================ Sentence 62 =============================

- Pollution and smoking. 


>> Tokens are: 
 ['-', 'Pollution', 'smoking', '.']

>> Bigrams are: 
 [('-', 'Pollution'), ('Pollution', 'smoking'), ('smoking', '.')]

>> Trigrams are: 
 [('-', 'Pollution', 'smoking'), ('Pollution', 'smoking', '.')]

>> POS Tags are: 
 [('-', ':'), ('Pollution', 'NN'), ('smoking', 'NN'), ('.', '.')]

 (S -/: (NP Pollution/NN smoking/NN) ./.) 


>> Noun Phrases are: 
 ['Pollution smoking']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('-', '-'), ('Pollution', 'pollut'), ('smoking', 'smoke'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('-', '-'), ('Pollution', 'pollut'), ('smoking', 'smoke'), ('.', '.')]

>> Lemmatization: 
 [('-', '-'), ('Pollution', 'Pollution'), ('smoking', 'smoking'), ('.', '.')]



============================ Sentence 63 =============================

Then add arcs from node Pollution and node Smoker to node Lung-Cancer. 


>> Tokens are: 
 ['Then', 'add', 'arcs', 'node', 'Pollution', 'node', 'Smoker', 'node', 'Lung-Cancer', '.']

>> Bigrams are: 
 [('Then', 'add'), ('add', 'arcs'), ('arcs', 'node'), ('node', 'Pollution'), ('Pollution', 'node'), ('node', 'Smoker'), ('Smoker', 'node'), ('node', 'Lung-Cancer'), ('Lung-Cancer', '.')]

>> Trigrams are: 
 [('Then', 'add', 'arcs'), ('add', 'arcs', 'node'), ('arcs', 'node', 'Pollution'), ('node', 'Pollution', 'node'), ('Pollution', 'node', 'Smoker'), ('node', 'Smoker', 'node'), ('Smoker', 'node', 'Lung-Cancer'), ('node', 'Lung-Cancer', '.')]

>> POS Tags are: 
 [('Then', 'RB'), ('add', 'VB'), ('arcs', 'JJ'), ('node', 'JJ'), ('Pollution', 'NNP'), ('node', 'NN'), ('Smoker', 'NNP'), ('node', 'VBD'), ('Lung-Cancer', 'NNP'), ('.', '.')]

 (S
  Then/RB
  add/VB
  (NP arcs/JJ node/JJ Pollution/NNP node/NN Smoker/NNP)
  node/VBD
  (NP Lung-Cancer/NNP)
  ./.) 


>> Noun Phrases are: 
 ['arcs node Pollution node Smoker', 'Lung-Cancer']

>> Named Entities are: 
 [('PERSON', 'Smoker')] 

>> Stemming using Porter Stemmer: 
 [('Then', 'then'), ('add', 'add'), ('arcs', 'arc'), ('node', 'node'), ('Pollution', 'pollut'), ('node', 'node'), ('Smoker', 'smoker'), ('node', 'node'), ('Lung-Cancer', 'lung-canc'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Then', 'then'), ('add', 'add'), ('arcs', 'arc'), ('node', 'node'), ('Pollution', 'pollut'), ('node', 'node'), ('Smoker', 'smoker'), ('node', 'node'), ('Lung-Cancer', 'lung-canc'), ('.', '.')]

>> Lemmatization: 
 [('Then', 'Then'), ('add', 'add'), ('arcs', 'arc'), ('node', 'node'), ('Pollution', 'Pollution'), ('node', 'node'), ('Smoker', 'Smoker'), ('node', 'node'), ('Lung-Cancer', 'Lung-Cancer'), ('.', '.')]



============================ Sentence 64 =============================

Similarly if patient has lung cancer, then X-ray result will be positive. 


>> Tokens are: 
 ['Similarly', 'patient', 'lung', 'cancer', ',', 'X-ray', 'result', 'positive', '.']

>> Bigrams are: 
 [('Similarly', 'patient'), ('patient', 'lung'), ('lung', 'cancer'), ('cancer', ','), (',', 'X-ray'), ('X-ray', 'result'), ('result', 'positive'), ('positive', '.')]

>> Trigrams are: 
 [('Similarly', 'patient', 'lung'), ('patient', 'lung', 'cancer'), ('lung', 'cancer', ','), ('cancer', ',', 'X-ray'), (',', 'X-ray', 'result'), ('X-ray', 'result', 'positive'), ('result', 'positive', '.')]

>> POS Tags are: 
 [('Similarly', 'RB'), ('patient', 'JJ'), ('lung', 'NN'), ('cancer', 'NN'), (',', ','), ('X-ray', 'JJ'), ('result', 'NN'), ('positive', 'JJ'), ('.', '.')]

 (S
  Similarly/RB
  (NP patient/JJ lung/NN cancer/NN)
  ,/,
  (NP X-ray/JJ result/NN)
  positive/JJ
  ./.) 


>> Noun Phrases are: 
 ['patient lung cancer', 'X-ray result']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Similarly', 'similarli'), ('patient', 'patient'), ('lung', 'lung'), ('cancer', 'cancer'), (',', ','), ('X-ray', 'x-ray'), ('result', 'result'), ('positive', 'posit'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Similarly', 'similar'), ('patient', 'patient'), ('lung', 'lung'), ('cancer', 'cancer'), (',', ','), ('X-ray', 'x-ray'), ('result', 'result'), ('positive', 'posit'), ('.', '.')]

>> Lemmatization: 
 [('Similarly', 'Similarly'), ('patient', 'patient'), ('lung', 'lung'), ('cancer', 'cancer'), (',', ','), ('X-ray', 'X-ray'), ('result', 'result'), ('positive', 'positive'), ('.', '.')]



============================ Sentence 65 =============================

Then add arcs from node Lung-Cancer to node X-Ray. 


>> Tokens are: 
 ['Then', 'add', 'arcs', 'node', 'Lung-Cancer', 'node', 'X-Ray', '.']

>> Bigrams are: 
 [('Then', 'add'), ('add', 'arcs'), ('arcs', 'node'), ('node', 'Lung-Cancer'), ('Lung-Cancer', 'node'), ('node', 'X-Ray'), ('X-Ray', '.')]

>> Trigrams are: 
 [('Then', 'add', 'arcs'), ('add', 'arcs', 'node'), ('arcs', 'node', 'Lung-Cancer'), ('node', 'Lung-Cancer', 'node'), ('Lung-Cancer', 'node', 'X-Ray'), ('node', 'X-Ray', '.')]

>> POS Tags are: 
 [('Then', 'RB'), ('add', 'VB'), ('arcs', 'JJ'), ('node', 'JJ'), ('Lung-Cancer', 'JJ'), ('node', 'JJ'), ('X-Ray', 'NN'), ('.', '.')]

 (S
  Then/RB
  add/VB
  (NP arcs/JJ node/JJ Lung-Cancer/JJ node/JJ X-Ray/NN)
  ./.) 


>> Noun Phrases are: 
 ['arcs node Lung-Cancer node X-Ray']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Then', 'then'), ('add', 'add'), ('arcs', 'arc'), ('node', 'node'), ('Lung-Cancer', 'lung-canc'), ('node', 'node'), ('X-Ray', 'x-ray'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Then', 'then'), ('add', 'add'), ('arcs', 'arc'), ('node', 'node'), ('Lung-Cancer', 'lung-canc'), ('node', 'node'), ('X-Ray', 'x-ray'), ('.', '.')]

>> Lemmatization: 
 [('Then', 'Then'), ('add', 'add'), ('arcs', 'arc'), ('node', 'node'), ('Lung-Cancer', 'Lung-Cancer'), ('node', 'node'), ('X-Ray', 'X-Ray'), ('.', '.')]



============================ Sentence 66 =============================

Specify Topology Conventionally, BNs are laid out so that the arcs point from top to bottom. 


>> Tokens are: 
 ['Specify', 'Topology', 'Conventionally', ',', 'BNs', 'laid', 'arcs', 'point', 'top', 'bottom', '.']

>> Bigrams are: 
 [('Specify', 'Topology'), ('Topology', 'Conventionally'), ('Conventionally', ','), (',', 'BNs'), ('BNs', 'laid'), ('laid', 'arcs'), ('arcs', 'point'), ('point', 'top'), ('top', 'bottom'), ('bottom', '.')]

>> Trigrams are: 
 [('Specify', 'Topology', 'Conventionally'), ('Topology', 'Conventionally', ','), ('Conventionally', ',', 'BNs'), (',', 'BNs', 'laid'), ('BNs', 'laid', 'arcs'), ('laid', 'arcs', 'point'), ('arcs', 'point', 'top'), ('point', 'top', 'bottom'), ('top', 'bottom', '.')]

>> POS Tags are: 
 [('Specify', 'NNP'), ('Topology', 'NNP'), ('Conventionally', 'NNP'), (',', ','), ('BNs', 'NNP'), ('laid', 'VBD'), ('arcs', 'JJ'), ('point', 'NN'), ('top', 'JJ'), ('bottom', 'NN'), ('.', '.')]

 (S
  (NP Specify/NNP Topology/NNP Conventionally/NNP)
  ,/,
  (NP BNs/NNP)
  laid/VBD
  (NP arcs/JJ point/NN)
  (NP top/JJ bottom/NN)
  ./.) 


>> Noun Phrases are: 
 ['Specify Topology Conventionally', 'BNs', 'arcs point', 'top bottom']

>> Named Entities are: 
 [('PERSON', 'Specify'), ('PERSON', 'Topology Conventionally'), ('ORGANIZATION', 'BNs')] 

>> Stemming using Porter Stemmer: 
 [('Specify', 'specifi'), ('Topology', 'topolog'), ('Conventionally', 'convent'), (',', ','), ('BNs', 'bn'), ('laid', 'laid'), ('arcs', 'arc'), ('point', 'point'), ('top', 'top'), ('bottom', 'bottom'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Specify', 'specifi'), ('Topology', 'topolog'), ('Conventionally', 'convent'), (',', ','), ('BNs', 'bns'), ('laid', 'laid'), ('arcs', 'arc'), ('point', 'point'), ('top', 'top'), ('bottom', 'bottom'), ('.', '.')]

>> Lemmatization: 
 [('Specify', 'Specify'), ('Topology', 'Topology'), ('Conventionally', 'Conventionally'), (',', ','), ('BNs', 'BNs'), ('laid', 'laid'), ('arcs', 'arc'), ('point', 'point'), ('top', 'top'), ('bottom', 'bottom'), ('.', '.')]



============================ Sentence 67 =============================

The set of parent nodes of a node X is given by Parents(X). 


>> Tokens are: 
 ['The', 'set', 'parent', 'nodes', 'node', 'X', 'given', 'Parents', '(', 'X', ')', '.']

>> Bigrams are: 
 [('The', 'set'), ('set', 'parent'), ('parent', 'nodes'), ('nodes', 'node'), ('node', 'X'), ('X', 'given'), ('given', 'Parents'), ('Parents', '('), ('(', 'X'), ('X', ')'), (')', '.')]

>> Trigrams are: 
 [('The', 'set', 'parent'), ('set', 'parent', 'nodes'), ('parent', 'nodes', 'node'), ('nodes', 'node', 'X'), ('node', 'X', 'given'), ('X', 'given', 'Parents'), ('given', 'Parents', '('), ('Parents', '(', 'X'), ('(', 'X', ')'), ('X', ')', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('set', 'NN'), ('parent', 'NN'), ('nodes', 'NNS'), ('node', 'VBP'), ('X', 'NNP'), ('given', 'VBN'), ('Parents', 'NNP'), ('(', '('), ('X', 'NNP'), (')', ')'), ('.', '.')]

 (S
  (NP The/DT set/NN parent/NN nodes/NNS)
  node/VBP
  (NP X/NNP)
  given/VBN
  (NP Parents/NNP)
  (/(
  (NP X/NNP)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['The set parent nodes', 'X', 'Parents', 'X']

>> Named Entities are: 
 [('GPE', 'Parents')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('set', 'set'), ('parent', 'parent'), ('nodes', 'node'), ('node', 'node'), ('X', 'x'), ('given', 'given'), ('Parents', 'parent'), ('(', '('), ('X', 'x'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('set', 'set'), ('parent', 'parent'), ('nodes', 'node'), ('node', 'node'), ('X', 'x'), ('given', 'given'), ('Parents', 'parent'), ('(', '('), ('X', 'x'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('set', 'set'), ('parent', 'parent'), ('nodes', 'node'), ('node', 'node'), ('X', 'X'), ('given', 'given'), ('Parents', 'Parents'), ('(', '('), ('X', 'X'), (')', ')'), ('.', '.')]



============================ Sentence 68 =============================

The Lung-Cancer node has two parents (reasons or causes): Pollution and Smoker, while node Smoker is an ancestor of node X-Ray. 


>> Tokens are: 
 ['The', 'Lung-Cancer', 'node', 'two', 'parents', '(', 'reasons', 'causes', ')', ':', 'Pollution', 'Smoker', ',', 'node', 'Smoker', 'ancestor', 'node', 'X-Ray', '.']

>> Bigrams are: 
 [('The', 'Lung-Cancer'), ('Lung-Cancer', 'node'), ('node', 'two'), ('two', 'parents'), ('parents', '('), ('(', 'reasons'), ('reasons', 'causes'), ('causes', ')'), (')', ':'), (':', 'Pollution'), ('Pollution', 'Smoker'), ('Smoker', ','), (',', 'node'), ('node', 'Smoker'), ('Smoker', 'ancestor'), ('ancestor', 'node'), ('node', 'X-Ray'), ('X-Ray', '.')]

>> Trigrams are: 
 [('The', 'Lung-Cancer', 'node'), ('Lung-Cancer', 'node', 'two'), ('node', 'two', 'parents'), ('two', 'parents', '('), ('parents', '(', 'reasons'), ('(', 'reasons', 'causes'), ('reasons', 'causes', ')'), ('causes', ')', ':'), (')', ':', 'Pollution'), (':', 'Pollution', 'Smoker'), ('Pollution', 'Smoker', ','), ('Smoker', ',', 'node'), (',', 'node', 'Smoker'), ('node', 'Smoker', 'ancestor'), ('Smoker', 'ancestor', 'node'), ('ancestor', 'node', 'X-Ray'), ('node', 'X-Ray', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('Lung-Cancer', 'NNP'), ('node', 'NN'), ('two', 'CD'), ('parents', 'NNS'), ('(', '('), ('reasons', 'NNS'), ('causes', 'VBZ'), (')', ')'), (':', ':'), ('Pollution', 'NN'), ('Smoker', 'NNP'), (',', ','), ('node', 'JJ'), ('Smoker', 'NNP'), ('ancestor', 'NN'), ('node', 'VBD'), ('X-Ray', 'NNP'), ('.', '.')]

 (S
  (NP The/DT Lung-Cancer/NNP node/NN)
  two/CD
  (NP parents/NNS)
  (/(
  (NP reasons/NNS)
  causes/VBZ
  )/)
  :/:
  (NP Pollution/NN Smoker/NNP)
  ,/,
  (NP node/JJ Smoker/NNP ancestor/NN)
  node/VBD
  (NP X-Ray/NNP)
  ./.) 


>> Noun Phrases are: 
 ['The Lung-Cancer node', 'parents', 'reasons', 'Pollution Smoker', 'node Smoker ancestor', 'X-Ray']

>> Named Entities are: 
 [('PERSON', 'Smoker')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('Lung-Cancer', 'lung-canc'), ('node', 'node'), ('two', 'two'), ('parents', 'parent'), ('(', '('), ('reasons', 'reason'), ('causes', 'caus'), (')', ')'), (':', ':'), ('Pollution', 'pollut'), ('Smoker', 'smoker'), (',', ','), ('node', 'node'), ('Smoker', 'smoker'), ('ancestor', 'ancestor'), ('node', 'node'), ('X-Ray', 'x-ray'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('Lung-Cancer', 'lung-canc'), ('node', 'node'), ('two', 'two'), ('parents', 'parent'), ('(', '('), ('reasons', 'reason'), ('causes', 'caus'), (')', ')'), (':', ':'), ('Pollution', 'pollut'), ('Smoker', 'smoker'), (',', ','), ('node', 'node'), ('Smoker', 'smoker'), ('ancestor', 'ancestor'), ('node', 'node'), ('X-Ray', 'x-ray'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('Lung-Cancer', 'Lung-Cancer'), ('node', 'node'), ('two', 'two'), ('parents', 'parent'), ('(', '('), ('reasons', 'reason'), ('causes', 'cause'), (')', ')'), (':', ':'), ('Pollution', 'Pollution'), ('Smoker', 'Smoker'), (',', ','), ('node', 'node'), ('Smoker', 'Smoker'), ('ancestor', 'ancestor'), ('node', 'node'), ('X-Ray', 'X-Ray'), ('.', '.')]



============================ Sentence 69 =============================

Similarly, X-Ray is a child (consequence or effects) of node Lung-Cancer and successor of nodes Smoker and Pollution. 


>> Tokens are: 
 ['Similarly', ',', 'X-Ray', 'child', '(', 'consequence', 'effects', ')', 'node', 'Lung-Cancer', 'successor', 'nodes', 'Smoker', 'Pollution', '.']

>> Bigrams are: 
 [('Similarly', ','), (',', 'X-Ray'), ('X-Ray', 'child'), ('child', '('), ('(', 'consequence'), ('consequence', 'effects'), ('effects', ')'), (')', 'node'), ('node', 'Lung-Cancer'), ('Lung-Cancer', 'successor'), ('successor', 'nodes'), ('nodes', 'Smoker'), ('Smoker', 'Pollution'), ('Pollution', '.')]

>> Trigrams are: 
 [('Similarly', ',', 'X-Ray'), (',', 'X-Ray', 'child'), ('X-Ray', 'child', '('), ('child', '(', 'consequence'), ('(', 'consequence', 'effects'), ('consequence', 'effects', ')'), ('effects', ')', 'node'), (')', 'node', 'Lung-Cancer'), ('node', 'Lung-Cancer', 'successor'), ('Lung-Cancer', 'successor', 'nodes'), ('successor', 'nodes', 'Smoker'), ('nodes', 'Smoker', 'Pollution'), ('Smoker', 'Pollution', '.')]

>> POS Tags are: 
 [('Similarly', 'RB'), (',', ','), ('X-Ray', 'JJ'), ('child', 'NN'), ('(', '('), ('consequence', 'JJ'), ('effects', 'NNS'), (')', ')'), ('node', 'VBP'), ('Lung-Cancer', 'NNP'), ('successor', 'NN'), ('nodes', 'NNS'), ('Smoker', 'NNP'), ('Pollution', 'NNP'), ('.', '.')]

 (S
  Similarly/RB
  ,/,
  (NP X-Ray/JJ child/NN)
  (/(
  (NP consequence/JJ effects/NNS)
  )/)
  node/VBP
  (NP
    Lung-Cancer/NNP
    successor/NN
    nodes/NNS
    Smoker/NNP
    Pollution/NNP)
  ./.) 


>> Noun Phrases are: 
 ['X-Ray child', 'consequence effects', 'Lung-Cancer successor nodes Smoker Pollution']

>> Named Entities are: 
 [('PERSON', 'Smoker Pollution')] 

>> Stemming using Porter Stemmer: 
 [('Similarly', 'similarli'), (',', ','), ('X-Ray', 'x-ray'), ('child', 'child'), ('(', '('), ('consequence', 'consequ'), ('effects', 'effect'), (')', ')'), ('node', 'node'), ('Lung-Cancer', 'lung-canc'), ('successor', 'successor'), ('nodes', 'node'), ('Smoker', 'smoker'), ('Pollution', 'pollut'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Similarly', 'similar'), (',', ','), ('X-Ray', 'x-ray'), ('child', 'child'), ('(', '('), ('consequence', 'consequ'), ('effects', 'effect'), (')', ')'), ('node', 'node'), ('Lung-Cancer', 'lung-canc'), ('successor', 'successor'), ('nodes', 'node'), ('Smoker', 'smoker'), ('Pollution', 'pollut'), ('.', '.')]

>> Lemmatization: 
 [('Similarly', 'Similarly'), (',', ','), ('X-Ray', 'X-Ray'), ('child', 'child'), ('(', '('), ('consequence', 'consequence'), ('effects', 'effect'), (')', ')'), ('node', 'node'), ('Lung-Cancer', 'Lung-Cancer'), ('successor', 'successor'), ('nodes', 'node'), ('Smoker', 'Smoker'), ('Pollution', 'Pollution'), ('.', '.')]



============================ Sentence 70 =============================

Conditional Probabilities Now quantify the relationships between connected nodes: this is done by specifying a conditional probability distribution for each node. 


>> Tokens are: 
 ['Conditional', 'Probabilities', 'Now', 'quantify', 'relationships', 'connected', 'nodes', ':', 'done', 'specifying', 'conditional', 'probability', 'distribution', 'node', '.']

>> Bigrams are: 
 [('Conditional', 'Probabilities'), ('Probabilities', 'Now'), ('Now', 'quantify'), ('quantify', 'relationships'), ('relationships', 'connected'), ('connected', 'nodes'), ('nodes', ':'), (':', 'done'), ('done', 'specifying'), ('specifying', 'conditional'), ('conditional', 'probability'), ('probability', 'distribution'), ('distribution', 'node'), ('node', '.')]

>> Trigrams are: 
 [('Conditional', 'Probabilities', 'Now'), ('Probabilities', 'Now', 'quantify'), ('Now', 'quantify', 'relationships'), ('quantify', 'relationships', 'connected'), ('relationships', 'connected', 'nodes'), ('connected', 'nodes', ':'), ('nodes', ':', 'done'), (':', 'done', 'specifying'), ('done', 'specifying', 'conditional'), ('specifying', 'conditional', 'probability'), ('conditional', 'probability', 'distribution'), ('probability', 'distribution', 'node'), ('distribution', 'node', '.')]

>> POS Tags are: 
 [('Conditional', 'JJ'), ('Probabilities', 'NNS'), ('Now', 'RB'), ('quantify', 'VBP'), ('relationships', 'NNS'), ('connected', 'VBN'), ('nodes', 'NNS'), (':', ':'), ('done', 'VBN'), ('specifying', 'VBG'), ('conditional', 'JJ'), ('probability', 'NN'), ('distribution', 'NN'), ('node', 'NN'), ('.', '.')]

 (S
  (NP Conditional/JJ Probabilities/NNS)
  Now/RB
  quantify/VBP
  (NP relationships/NNS)
  connected/VBN
  (NP nodes/NNS)
  :/:
  done/VBN
  specifying/VBG
  (NP conditional/JJ probability/NN distribution/NN node/NN)
  ./.) 


>> Noun Phrases are: 
 ['Conditional Probabilities', 'relationships', 'nodes', 'conditional probability distribution node']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Conditional', 'condit'), ('Probabilities', 'probabl'), ('Now', 'now'), ('quantify', 'quantifi'), ('relationships', 'relationship'), ('connected', 'connect'), ('nodes', 'node'), (':', ':'), ('done', 'done'), ('specifying', 'specifi'), ('conditional', 'condit'), ('probability', 'probabl'), ('distribution', 'distribut'), ('node', 'node'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Conditional', 'condit'), ('Probabilities', 'probabl'), ('Now', 'now'), ('quantify', 'quantifi'), ('relationships', 'relationship'), ('connected', 'connect'), ('nodes', 'node'), (':', ':'), ('done', 'done'), ('specifying', 'specifi'), ('conditional', 'condit'), ('probability', 'probabl'), ('distribution', 'distribut'), ('node', 'node'), ('.', '.')]

>> Lemmatization: 
 [('Conditional', 'Conditional'), ('Probabilities', 'Probabilities'), ('Now', 'Now'), ('quantify', 'quantify'), ('relationships', 'relationship'), ('connected', 'connected'), ('nodes', 'node'), (':', ':'), ('done', 'done'), ('specifying', 'specifying'), ('conditional', 'conditional'), ('probability', 'probability'), ('distribution', 'distribution'), ('node', 'node'), ('.', '.')]



============================ Sentence 71 =============================

As only discrete variables are considered here, this takes the form of a Conditional Probability Table (CPT). 


>> Tokens are: 
 ['As', 'discrete', 'variables', 'considered', ',', 'takes', 'form', 'Conditional', 'Probability', 'Table', '(', 'CPT', ')', '.']

>> Bigrams are: 
 [('As', 'discrete'), ('discrete', 'variables'), ('variables', 'considered'), ('considered', ','), (',', 'takes'), ('takes', 'form'), ('form', 'Conditional'), ('Conditional', 'Probability'), ('Probability', 'Table'), ('Table', '('), ('(', 'CPT'), ('CPT', ')'), (')', '.')]

>> Trigrams are: 
 [('As', 'discrete', 'variables'), ('discrete', 'variables', 'considered'), ('variables', 'considered', ','), ('considered', ',', 'takes'), (',', 'takes', 'form'), ('takes', 'form', 'Conditional'), ('form', 'Conditional', 'Probability'), ('Conditional', 'Probability', 'Table'), ('Probability', 'Table', '('), ('Table', '(', 'CPT'), ('(', 'CPT', ')'), ('CPT', ')', '.')]

>> POS Tags are: 
 [('As', 'IN'), ('discrete', 'JJ'), ('variables', 'NNS'), ('considered', 'VBN'), (',', ','), ('takes', 'VBZ'), ('form', 'JJ'), ('Conditional', 'NNP'), ('Probability', 'NNP'), ('Table', 'NNP'), ('(', '('), ('CPT', 'NNP'), (')', ')'), ('.', '.')]

 (S
  As/IN
  (NP discrete/JJ variables/NNS)
  considered/VBN
  ,/,
  takes/VBZ
  (NP form/JJ Conditional/NNP Probability/NNP Table/NNP)
  (/(
  (NP CPT/NNP)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['discrete variables', 'form Conditional Probability Table', 'CPT']

>> Named Entities are: 
 [('ORGANIZATION', 'Conditional'), ('ORGANIZATION', 'CPT')] 

>> Stemming using Porter Stemmer: 
 [('As', 'as'), ('discrete', 'discret'), ('variables', 'variabl'), ('considered', 'consid'), (',', ','), ('takes', 'take'), ('form', 'form'), ('Conditional', 'condit'), ('Probability', 'probabl'), ('Table', 'tabl'), ('(', '('), ('CPT', 'cpt'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('As', 'as'), ('discrete', 'discret'), ('variables', 'variabl'), ('considered', 'consid'), (',', ','), ('takes', 'take'), ('form', 'form'), ('Conditional', 'condit'), ('Probability', 'probabl'), ('Table', 'tabl'), ('(', '('), ('CPT', 'cpt'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('As', 'As'), ('discrete', 'discrete'), ('variables', 'variable'), ('considered', 'considered'), (',', ','), ('takes', 'take'), ('form', 'form'), ('Conditional', 'Conditional'), ('Probability', 'Probability'), ('Table', 'Table'), ('(', '('), ('CPT', 'CPT'), (')', ')'), ('.', '.')]



============================ Sentence 72 =============================

First, for each node we need to look at all the possible combinations of values of those parent nodes. 


>> Tokens are: 
 ['First', ',', 'node', 'need', 'look', 'possible', 'combinations', 'values', 'parent', 'nodes', '.']

>> Bigrams are: 
 [('First', ','), (',', 'node'), ('node', 'need'), ('need', 'look'), ('look', 'possible'), ('possible', 'combinations'), ('combinations', 'values'), ('values', 'parent'), ('parent', 'nodes'), ('nodes', '.')]

>> Trigrams are: 
 [('First', ',', 'node'), (',', 'node', 'need'), ('node', 'need', 'look'), ('need', 'look', 'possible'), ('look', 'possible', 'combinations'), ('possible', 'combinations', 'values'), ('combinations', 'values', 'parent'), ('values', 'parent', 'nodes'), ('parent', 'nodes', '.')]

>> POS Tags are: 
 [('First', 'RB'), (',', ','), ('node', 'RB'), ('need', 'MD'), ('look', 'VB'), ('possible', 'JJ'), ('combinations', 'NNS'), ('values', 'NNS'), ('parent', 'NN'), ('nodes', 'NNS'), ('.', '.')]

 (S
  First/RB
  ,/,
  node/RB
  need/MD
  look/VB
  (NP possible/JJ combinations/NNS values/NNS parent/NN nodes/NNS)
  ./.) 


>> Noun Phrases are: 
 ['possible combinations values parent nodes']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('First', 'first'), (',', ','), ('node', 'node'), ('need', 'need'), ('look', 'look'), ('possible', 'possibl'), ('combinations', 'combin'), ('values', 'valu'), ('parent', 'parent'), ('nodes', 'node'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('First', 'first'), (',', ','), ('node', 'node'), ('need', 'need'), ('look', 'look'), ('possible', 'possibl'), ('combinations', 'combin'), ('values', 'valu'), ('parent', 'parent'), ('nodes', 'node'), ('.', '.')]

>> Lemmatization: 
 [('First', 'First'), (',', ','), ('node', 'node'), ('need', 'need'), ('look', 'look'), ('possible', 'possible'), ('combinations', 'combination'), ('values', 'value'), ('parent', 'parent'), ('nodes', 'node'), ('.', '.')]



============================ Sentence 73 =============================

Each such combination is called an instantiation of the parent set. 


>> Tokens are: 
 ['Each', 'combination', 'called', 'instantiation', 'parent', 'set', '.']

>> Bigrams are: 
 [('Each', 'combination'), ('combination', 'called'), ('called', 'instantiation'), ('instantiation', 'parent'), ('parent', 'set'), ('set', '.')]

>> Trigrams are: 
 [('Each', 'combination', 'called'), ('combination', 'called', 'instantiation'), ('called', 'instantiation', 'parent'), ('instantiation', 'parent', 'set'), ('parent', 'set', '.')]

>> POS Tags are: 
 [('Each', 'DT'), ('combination', 'NN'), ('called', 'VBN'), ('instantiation', 'NN'), ('parent', 'NN'), ('set', 'NN'), ('.', '.')]

 (S
  (NP Each/DT combination/NN)
  called/VBN
  (NP instantiation/NN parent/NN set/NN)
  ./.) 


>> Noun Phrases are: 
 ['Each combination', 'instantiation parent set']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Each', 'each'), ('combination', 'combin'), ('called', 'call'), ('instantiation', 'instanti'), ('parent', 'parent'), ('set', 'set'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Each', 'each'), ('combination', 'combin'), ('called', 'call'), ('instantiation', 'instanti'), ('parent', 'parent'), ('set', 'set'), ('.', '.')]

>> Lemmatization: 
 [('Each', 'Each'), ('combination', 'combination'), ('called', 'called'), ('instantiation', 'instantiation'), ('parent', 'parent'), ('set', 'set'), ('.', '.')]



============================ Sentence 74 =============================

For each distinct instantiation of parent node values, we need to specify the probability that the child will take. 


>> Tokens are: 
 ['For', 'distinct', 'instantiation', 'parent', 'node', 'values', ',', 'need', 'specify', 'probability', 'child', 'take', '.']

>> Bigrams are: 
 [('For', 'distinct'), ('distinct', 'instantiation'), ('instantiation', 'parent'), ('parent', 'node'), ('node', 'values'), ('values', ','), (',', 'need'), ('need', 'specify'), ('specify', 'probability'), ('probability', 'child'), ('child', 'take'), ('take', '.')]

>> Trigrams are: 
 [('For', 'distinct', 'instantiation'), ('distinct', 'instantiation', 'parent'), ('instantiation', 'parent', 'node'), ('parent', 'node', 'values'), ('node', 'values', ','), ('values', ',', 'need'), (',', 'need', 'specify'), ('need', 'specify', 'probability'), ('specify', 'probability', 'child'), ('probability', 'child', 'take'), ('child', 'take', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('distinct', 'JJ'), ('instantiation', 'NN'), ('parent', 'NN'), ('node', 'NN'), ('values', 'NNS'), (',', ','), ('need', 'VBP'), ('specify', 'JJ'), ('probability', 'NN'), ('child', 'NN'), ('take', 'NN'), ('.', '.')]

 (S
  For/IN
  (NP distinct/JJ instantiation/NN parent/NN node/NN values/NNS)
  ,/,
  need/VBP
  (NP specify/JJ probability/NN child/NN take/NN)
  ./.) 


>> Noun Phrases are: 
 ['distinct instantiation parent node values', 'specify probability child take']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('distinct', 'distinct'), ('instantiation', 'instanti'), ('parent', 'parent'), ('node', 'node'), ('values', 'valu'), (',', ','), ('need', 'need'), ('specify', 'specifi'), ('probability', 'probabl'), ('child', 'child'), ('take', 'take'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('distinct', 'distinct'), ('instantiation', 'instanti'), ('parent', 'parent'), ('node', 'node'), ('values', 'valu'), (',', ','), ('need', 'need'), ('specify', 'specifi'), ('probability', 'probabl'), ('child', 'child'), ('take', 'take'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('distinct', 'distinct'), ('instantiation', 'instantiation'), ('parent', 'parent'), ('node', 'node'), ('values', 'value'), (',', ','), ('need', 'need'), ('specify', 'specify'), ('probability', 'probability'), ('child', 'child'), ('take', 'take'), ('.', '.')]



============================ Sentence 75 =============================

For example, the Lung-Cancer node’s parents are Pollution and Smoking. 


>> Tokens are: 
 ['For', 'example', ',', 'Lung-Cancer', 'node', '’', 'parents', 'Pollution', 'Smoking', '.']

>> Bigrams are: 
 [('For', 'example'), ('example', ','), (',', 'Lung-Cancer'), ('Lung-Cancer', 'node'), ('node', '’'), ('’', 'parents'), ('parents', 'Pollution'), ('Pollution', 'Smoking'), ('Smoking', '.')]

>> Trigrams are: 
 [('For', 'example', ','), ('example', ',', 'Lung-Cancer'), (',', 'Lung-Cancer', 'node'), ('Lung-Cancer', 'node', '’'), ('node', '’', 'parents'), ('’', 'parents', 'Pollution'), ('parents', 'Pollution', 'Smoking'), ('Pollution', 'Smoking', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('example', 'NN'), (',', ','), ('Lung-Cancer', 'NNP'), ('node', 'NN'), ('’', 'NN'), ('parents', 'NNS'), ('Pollution', 'NNP'), ('Smoking', 'NNP'), ('.', '.')]

 (S
  For/IN
  (NP example/NN)
  ,/,
  (NP
    Lung-Cancer/NNP
    node/NN
    ’/NN
    parents/NNS
    Pollution/NNP
    Smoking/NNP)
  ./.) 


>> Noun Phrases are: 
 ['example', 'Lung-Cancer node ’ parents Pollution Smoking']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('Lung-Cancer', 'lung-canc'), ('node', 'node'), ('’', '’'), ('parents', 'parent'), ('Pollution', 'pollut'), ('Smoking', 'smoke'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('Lung-Cancer', 'lung-canc'), ('node', 'node'), ('’', '’'), ('parents', 'parent'), ('Pollution', 'pollut'), ('Smoking', 'smoke'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('example', 'example'), (',', ','), ('Lung-Cancer', 'Lung-Cancer'), ('node', 'node'), ('’', '’'), ('parents', 'parent'), ('Pollution', 'Pollution'), ('Smoking', 'Smoking'), ('.', '.')]



============================ Sentence 76 =============================

They take the possible values = { (H,T), ( H,F), (L,T), (L,F)}. 


>> Tokens are: 
 ['They', 'take', 'possible', 'values', '=', '{', '(', 'H', ',', 'T', ')', ',', '(', 'H', ',', 'F', ')', ',', '(', 'L', ',', 'T', ')', ',', '(', 'L', ',', 'F', ')', '}', '.']

>> Bigrams are: 
 [('They', 'take'), ('take', 'possible'), ('possible', 'values'), ('values', '='), ('=', '{'), ('{', '('), ('(', 'H'), ('H', ','), (',', 'T'), ('T', ')'), (')', ','), (',', '('), ('(', 'H'), ('H', ','), (',', 'F'), ('F', ')'), (')', ','), (',', '('), ('(', 'L'), ('L', ','), (',', 'T'), ('T', ')'), (')', ','), (',', '('), ('(', 'L'), ('L', ','), (',', 'F'), ('F', ')'), (')', '}'), ('}', '.')]

>> Trigrams are: 
 [('They', 'take', 'possible'), ('take', 'possible', 'values'), ('possible', 'values', '='), ('values', '=', '{'), ('=', '{', '('), ('{', '(', 'H'), ('(', 'H', ','), ('H', ',', 'T'), (',', 'T', ')'), ('T', ')', ','), (')', ',', '('), (',', '(', 'H'), ('(', 'H', ','), ('H', ',', 'F'), (',', 'F', ')'), ('F', ')', ','), (')', ',', '('), (',', '(', 'L'), ('(', 'L', ','), ('L', ',', 'T'), (',', 'T', ')'), ('T', ')', ','), (')', ',', '('), (',', '(', 'L'), ('(', 'L', ','), ('L', ',', 'F'), (',', 'F', ')'), ('F', ')', '}'), (')', '}', '.')]

>> POS Tags are: 
 [('They', 'PRP'), ('take', 'VBP'), ('possible', 'JJ'), ('values', 'NNS'), ('=', 'VBP'), ('{', '('), ('(', '('), ('H', 'NNP'), (',', ','), ('T', 'NNP'), (')', ')'), (',', ','), ('(', '('), ('H', 'NNP'), (',', ','), ('F', 'NNP'), (')', ')'), (',', ','), ('(', '('), ('L', 'NNP'), (',', ','), ('T', 'NNP'), (')', ')'), (',', ','), ('(', '('), ('L', 'NNP'), (',', ','), ('F', 'NNP'), (')', ')'), ('}', ')'), ('.', '.')]

 (S
  They/PRP
  take/VBP
  (NP possible/JJ values/NNS)
  =/VBP
  {/(
  (/(
  (NP H/NNP)
  ,/,
  (NP T/NNP)
  )/)
  ,/,
  (/(
  (NP H/NNP)
  ,/,
  (NP F/NNP)
  )/)
  ,/,
  (/(
  (NP L/NNP)
  ,/,
  (NP T/NNP)
  )/)
  ,/,
  (/(
  (NP L/NNP)
  ,/,
  (NP F/NNP)
  )/)
  }/)
  ./.) 


>> Noun Phrases are: 
 ['possible values', 'H', 'T', 'H', 'F', 'L', 'T', 'L', 'F']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('They', 'they'), ('take', 'take'), ('possible', 'possibl'), ('values', 'valu'), ('=', '='), ('{', '{'), ('(', '('), ('H', 'h'), (',', ','), ('T', 't'), (')', ')'), (',', ','), ('(', '('), ('H', 'h'), (',', ','), ('F', 'f'), (')', ')'), (',', ','), ('(', '('), ('L', 'l'), (',', ','), ('T', 't'), (')', ')'), (',', ','), ('(', '('), ('L', 'l'), (',', ','), ('F', 'f'), (')', ')'), ('}', '}'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('They', 'they'), ('take', 'take'), ('possible', 'possibl'), ('values', 'valu'), ('=', '='), ('{', '{'), ('(', '('), ('H', 'h'), (',', ','), ('T', 't'), (')', ')'), (',', ','), ('(', '('), ('H', 'h'), (',', ','), ('F', 'f'), (')', ')'), (',', ','), ('(', '('), ('L', 'l'), (',', ','), ('T', 't'), (')', ')'), (',', ','), ('(', '('), ('L', 'l'), (',', ','), ('F', 'f'), (')', ')'), ('}', '}'), ('.', '.')]

>> Lemmatization: 
 [('They', 'They'), ('take', 'take'), ('possible', 'possible'), ('values', 'value'), ('=', '='), ('{', '{'), ('(', '('), ('H', 'H'), (',', ','), ('T', 'T'), (')', ')'), (',', ','), ('(', '('), ('H', 'H'), (',', ','), ('F', 'F'), (')', ')'), (',', ','), ('(', '('), ('L', 'L'), (',', ','), ('T', 'T'), (')', ')'), (',', ','), ('(', '('), ('L', 'L'), (',', ','), ('F', 'F'), (')', ')'), ('}', '}'), ('.', '.')]



============================ Sentence 77 =============================

The CPT specifies the probability of cancer for each of these cases as <0.05, 0.02, 0.03, 0.001> respectively. 


>> Tokens are: 
 ['The', 'CPT', 'specifies', 'probability', 'cancer', 'cases', '<', '0.05', ',', '0.02', ',', '0.03', ',', '0.001', '>', 'respectively', '.']

>> Bigrams are: 
 [('The', 'CPT'), ('CPT', 'specifies'), ('specifies', 'probability'), ('probability', 'cancer'), ('cancer', 'cases'), ('cases', '<'), ('<', '0.05'), ('0.05', ','), (',', '0.02'), ('0.02', ','), (',', '0.03'), ('0.03', ','), (',', '0.001'), ('0.001', '>'), ('>', 'respectively'), ('respectively', '.')]

>> Trigrams are: 
 [('The', 'CPT', 'specifies'), ('CPT', 'specifies', 'probability'), ('specifies', 'probability', 'cancer'), ('probability', 'cancer', 'cases'), ('cancer', 'cases', '<'), ('cases', '<', '0.05'), ('<', '0.05', ','), ('0.05', ',', '0.02'), (',', '0.02', ','), ('0.02', ',', '0.03'), (',', '0.03', ','), ('0.03', ',', '0.001'), (',', '0.001', '>'), ('0.001', '>', 'respectively'), ('>', 'respectively', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('CPT', 'NNP'), ('specifies', 'NNS'), ('probability', 'NN'), ('cancer', 'NN'), ('cases', 'NNS'), ('<', 'VBP'), ('0.05', 'CD'), (',', ','), ('0.02', 'CD'), (',', ','), ('0.03', 'CD'), (',', ','), ('0.001', 'CD'), ('>', 'NN'), ('respectively', 'RB'), ('.', '.')]

 (S
  (NP
    The/DT
    CPT/NNP
    specifies/NNS
    probability/NN
    cancer/NN
    cases/NNS)
  </VBP
  0.05/CD
  ,/,
  0.02/CD
  ,/,
  0.03/CD
  ,/,
  0.001/CD
  (NP >/NN)
  respectively/RB
  ./.) 


>> Noun Phrases are: 
 ['The CPT specifies probability cancer cases', '>']

>> Named Entities are: 
 [('ORGANIZATION', 'CPT')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('CPT', 'cpt'), ('specifies', 'specifi'), ('probability', 'probabl'), ('cancer', 'cancer'), ('cases', 'case'), ('<', '<'), ('0.05', '0.05'), (',', ','), ('0.02', '0.02'), (',', ','), ('0.03', '0.03'), (',', ','), ('0.001', '0.001'), ('>', '>'), ('respectively', 'respect'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('CPT', 'cpt'), ('specifies', 'specifi'), ('probability', 'probabl'), ('cancer', 'cancer'), ('cases', 'case'), ('<', '<'), ('0.05', '0.05'), (',', ','), ('0.02', '0.02'), (',', ','), ('0.03', '0.03'), (',', ','), ('0.001', '0.001'), ('>', '>'), ('respectively', 'respect'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('CPT', 'CPT'), ('specifies', 'specifies'), ('probability', 'probability'), ('cancer', 'cancer'), ('cases', 'case'), ('<', '<'), ('0.05', '0.05'), (',', ','), ('0.02', '0.02'), (',', ','), ('0.03', '0.03'), (',', ','), ('0.001', '0.001'), ('>', '>'), ('respectively', 'respectively'), ('.', '.')]



============================ Sentence 78 =============================

Each node will have conditional probability associated as follows −  Applications of Neural Networks They can perform tasks that are easy for a human but difficult for a machine − · Aerospace − Autopilot aircrafts, aircraft fault detection. 


>> Tokens are: 
 ['Each', 'node', 'conditional', 'probability', 'associated', 'follows', '−', 'Applications', 'Neural', 'Networks', 'They', 'perform', 'tasks', 'easy', 'human', 'difficult', 'machine', '−', '·', 'Aerospace', '−', 'Autopilot', 'aircrafts', ',', 'aircraft', 'fault', 'detection', '.']

>> Bigrams are: 
 [('Each', 'node'), ('node', 'conditional'), ('conditional', 'probability'), ('probability', 'associated'), ('associated', 'follows'), ('follows', '−'), ('−', 'Applications'), ('Applications', 'Neural'), ('Neural', 'Networks'), ('Networks', 'They'), ('They', 'perform'), ('perform', 'tasks'), ('tasks', 'easy'), ('easy', 'human'), ('human', 'difficult'), ('difficult', 'machine'), ('machine', '−'), ('−', '·'), ('·', 'Aerospace'), ('Aerospace', '−'), ('−', 'Autopilot'), ('Autopilot', 'aircrafts'), ('aircrafts', ','), (',', 'aircraft'), ('aircraft', 'fault'), ('fault', 'detection'), ('detection', '.')]

>> Trigrams are: 
 [('Each', 'node', 'conditional'), ('node', 'conditional', 'probability'), ('conditional', 'probability', 'associated'), ('probability', 'associated', 'follows'), ('associated', 'follows', '−'), ('follows', '−', 'Applications'), ('−', 'Applications', 'Neural'), ('Applications', 'Neural', 'Networks'), ('Neural', 'Networks', 'They'), ('Networks', 'They', 'perform'), ('They', 'perform', 'tasks'), ('perform', 'tasks', 'easy'), ('tasks', 'easy', 'human'), ('easy', 'human', 'difficult'), ('human', 'difficult', 'machine'), ('difficult', 'machine', '−'), ('machine', '−', '·'), ('−', '·', 'Aerospace'), ('·', 'Aerospace', '−'), ('Aerospace', '−', 'Autopilot'), ('−', 'Autopilot', 'aircrafts'), ('Autopilot', 'aircrafts', ','), ('aircrafts', ',', 'aircraft'), (',', 'aircraft', 'fault'), ('aircraft', 'fault', 'detection'), ('fault', 'detection', '.')]

>> POS Tags are: 
 [('Each', 'DT'), ('node', 'JJ'), ('conditional', 'JJ'), ('probability', 'NN'), ('associated', 'VBN'), ('follows', 'VBZ'), ('−', 'NNP'), ('Applications', 'NNP'), ('Neural', 'NNP'), ('Networks', 'NNP'), ('They', 'PRP'), ('perform', 'VBP'), ('tasks', 'NNS'), ('easy', 'JJ'), ('human', 'JJ'), ('difficult', 'JJ'), ('machine', 'NN'), ('−', 'NNP'), ('·', 'NNP'), ('Aerospace', 'NNP'), ('−', 'NNP'), ('Autopilot', 'NNP'), ('aircrafts', 'NNS'), (',', ','), ('aircraft', 'NN'), ('fault', 'NN'), ('detection', 'NN'), ('.', '.')]

 (S
  (NP Each/DT node/JJ conditional/JJ probability/NN)
  associated/VBN
  follows/VBZ
  (NP −/NNP Applications/NNP Neural/NNP Networks/NNP)
  They/PRP
  perform/VBP
  (NP tasks/NNS)
  (NP
    easy/JJ
    human/JJ
    difficult/JJ
    machine/NN
    −/NNP
    ·/NNP
    Aerospace/NNP
    −/NNP
    Autopilot/NNP
    aircrafts/NNS)
  ,/,
  (NP aircraft/NN fault/NN detection/NN)
  ./.) 


>> Noun Phrases are: 
 ['Each node conditional probability', '− Applications Neural Networks', 'tasks', 'easy human difficult machine − · Aerospace − Autopilot aircrafts', 'aircraft fault detection']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Each', 'each'), ('node', 'node'), ('conditional', 'condit'), ('probability', 'probabl'), ('associated', 'associ'), ('follows', 'follow'), ('−', '−'), ('Applications', 'applic'), ('Neural', 'neural'), ('Networks', 'network'), ('They', 'they'), ('perform', 'perform'), ('tasks', 'task'), ('easy', 'easi'), ('human', 'human'), ('difficult', 'difficult'), ('machine', 'machin'), ('−', '−'), ('·', '·'), ('Aerospace', 'aerospac'), ('−', '−'), ('Autopilot', 'autopilot'), ('aircrafts', 'aircraft'), (',', ','), ('aircraft', 'aircraft'), ('fault', 'fault'), ('detection', 'detect'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Each', 'each'), ('node', 'node'), ('conditional', 'condit'), ('probability', 'probabl'), ('associated', 'associ'), ('follows', 'follow'), ('−', '−'), ('Applications', 'applic'), ('Neural', 'neural'), ('Networks', 'network'), ('They', 'they'), ('perform', 'perform'), ('tasks', 'task'), ('easy', 'easi'), ('human', 'human'), ('difficult', 'difficult'), ('machine', 'machin'), ('−', '−'), ('·', '·'), ('Aerospace', 'aerospac'), ('−', '−'), ('Autopilot', 'autopilot'), ('aircrafts', 'aircraft'), (',', ','), ('aircraft', 'aircraft'), ('fault', 'fault'), ('detection', 'detect'), ('.', '.')]

>> Lemmatization: 
 [('Each', 'Each'), ('node', 'node'), ('conditional', 'conditional'), ('probability', 'probability'), ('associated', 'associated'), ('follows', 'follows'), ('−', '−'), ('Applications', 'Applications'), ('Neural', 'Neural'), ('Networks', 'Networks'), ('They', 'They'), ('perform', 'perform'), ('tasks', 'task'), ('easy', 'easy'), ('human', 'human'), ('difficult', 'difficult'), ('machine', 'machine'), ('−', '−'), ('·', '·'), ('Aerospace', 'Aerospace'), ('−', '−'), ('Autopilot', 'Autopilot'), ('aircrafts', 'aircraft'), (',', ','), ('aircraft', 'aircraft'), ('fault', 'fault'), ('detection', 'detection'), ('.', '.')]



============================ Sentence 79 =============================

· Automotive − Automobile guidance systems. 


>> Tokens are: 
 ['·', 'Automotive', '−', 'Automobile', 'guidance', 'systems', '.']

>> Bigrams are: 
 [('·', 'Automotive'), ('Automotive', '−'), ('−', 'Automobile'), ('Automobile', 'guidance'), ('guidance', 'systems'), ('systems', '.')]

>> Trigrams are: 
 [('·', 'Automotive', '−'), ('Automotive', '−', 'Automobile'), ('−', 'Automobile', 'guidance'), ('Automobile', 'guidance', 'systems'), ('guidance', 'systems', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Automotive', 'NNP'), ('−', 'NNP'), ('Automobile', 'NNP'), ('guidance', 'NN'), ('systems', 'NNS'), ('.', '.')]

 (S
  (NP
    ·/JJ
    Automotive/NNP
    −/NNP
    Automobile/NNP
    guidance/NN
    systems/NNS)
  ./.) 


>> Noun Phrases are: 
 ['· Automotive − Automobile guidance systems']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Automotive', 'automot'), ('−', '−'), ('Automobile', 'automobil'), ('guidance', 'guidanc'), ('systems', 'system'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Automotive', 'automot'), ('−', '−'), ('Automobile', 'automobil'), ('guidance', 'guidanc'), ('systems', 'system'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Automotive', 'Automotive'), ('−', '−'), ('Automobile', 'Automobile'), ('guidance', 'guidance'), ('systems', 'system'), ('.', '.')]



============================ Sentence 80 =============================

· Military − Weapon orientation and steering, target tracking, object discrimination, facial recognition, signal/image identification. 


>> Tokens are: 
 ['·', 'Military', '−', 'Weapon', 'orientation', 'steering', ',', 'target', 'tracking', ',', 'object', 'discrimination', ',', 'facial', 'recognition', ',', 'signal/image', 'identification', '.']

>> Bigrams are: 
 [('·', 'Military'), ('Military', '−'), ('−', 'Weapon'), ('Weapon', 'orientation'), ('orientation', 'steering'), ('steering', ','), (',', 'target'), ('target', 'tracking'), ('tracking', ','), (',', 'object'), ('object', 'discrimination'), ('discrimination', ','), (',', 'facial'), ('facial', 'recognition'), ('recognition', ','), (',', 'signal/image'), ('signal/image', 'identification'), ('identification', '.')]

>> Trigrams are: 
 [('·', 'Military', '−'), ('Military', '−', 'Weapon'), ('−', 'Weapon', 'orientation'), ('Weapon', 'orientation', 'steering'), ('orientation', 'steering', ','), ('steering', ',', 'target'), (',', 'target', 'tracking'), ('target', 'tracking', ','), ('tracking', ',', 'object'), (',', 'object', 'discrimination'), ('object', 'discrimination', ','), ('discrimination', ',', 'facial'), (',', 'facial', 'recognition'), ('facial', 'recognition', ','), ('recognition', ',', 'signal/image'), (',', 'signal/image', 'identification'), ('signal/image', 'identification', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Military', 'NNP'), ('−', 'NNP'), ('Weapon', 'NNP'), ('orientation', 'NN'), ('steering', 'NN'), (',', ','), ('target', 'NN'), ('tracking', 'NN'), (',', ','), ('object', 'JJ'), ('discrimination', 'NN'), (',', ','), ('facial', 'JJ'), ('recognition', 'NN'), (',', ','), ('signal/image', 'NN'), ('identification', 'NN'), ('.', '.')]

 (S
  (NP ·/JJ Military/NNP −/NNP Weapon/NNP orientation/NN steering/NN)
  ,/,
  (NP target/NN tracking/NN)
  ,/,
  (NP object/JJ discrimination/NN)
  ,/,
  (NP facial/JJ recognition/NN)
  ,/,
  (NP signal/image/NN identification/NN)
  ./.) 


>> Noun Phrases are: 
 ['· Military − Weapon orientation steering', 'target tracking', 'object discrimination', 'facial recognition', 'signal/image identification']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Military', 'militari'), ('−', '−'), ('Weapon', 'weapon'), ('orientation', 'orient'), ('steering', 'steer'), (',', ','), ('target', 'target'), ('tracking', 'track'), (',', ','), ('object', 'object'), ('discrimination', 'discrimin'), (',', ','), ('facial', 'facial'), ('recognition', 'recognit'), (',', ','), ('signal/image', 'signal/imag'), ('identification', 'identif'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Military', 'militari'), ('−', '−'), ('Weapon', 'weapon'), ('orientation', 'orient'), ('steering', 'steer'), (',', ','), ('target', 'target'), ('tracking', 'track'), (',', ','), ('object', 'object'), ('discrimination', 'discrimin'), (',', ','), ('facial', 'facial'), ('recognition', 'recognit'), (',', ','), ('signal/image', 'signal/imag'), ('identification', 'identif'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Military', 'Military'), ('−', '−'), ('Weapon', 'Weapon'), ('orientation', 'orientation'), ('steering', 'steering'), (',', ','), ('target', 'target'), ('tracking', 'tracking'), (',', ','), ('object', 'object'), ('discrimination', 'discrimination'), (',', ','), ('facial', 'facial'), ('recognition', 'recognition'), (',', ','), ('signal/image', 'signal/image'), ('identification', 'identification'), ('.', '.')]



============================ Sentence 81 =============================

· Electronics − Code sequence prediction, IC chip layout, chip failure analysis, machine vision, voice synthesis. 


>> Tokens are: 
 ['·', 'Electronics', '−', 'Code', 'sequence', 'prediction', ',', 'IC', 'chip', 'layout', ',', 'chip', 'failure', 'analysis', ',', 'machine', 'vision', ',', 'voice', 'synthesis', '.']

>> Bigrams are: 
 [('·', 'Electronics'), ('Electronics', '−'), ('−', 'Code'), ('Code', 'sequence'), ('sequence', 'prediction'), ('prediction', ','), (',', 'IC'), ('IC', 'chip'), ('chip', 'layout'), ('layout', ','), (',', 'chip'), ('chip', 'failure'), ('failure', 'analysis'), ('analysis', ','), (',', 'machine'), ('machine', 'vision'), ('vision', ','), (',', 'voice'), ('voice', 'synthesis'), ('synthesis', '.')]

>> Trigrams are: 
 [('·', 'Electronics', '−'), ('Electronics', '−', 'Code'), ('−', 'Code', 'sequence'), ('Code', 'sequence', 'prediction'), ('sequence', 'prediction', ','), ('prediction', ',', 'IC'), (',', 'IC', 'chip'), ('IC', 'chip', 'layout'), ('chip', 'layout', ','), ('layout', ',', 'chip'), (',', 'chip', 'failure'), ('chip', 'failure', 'analysis'), ('failure', 'analysis', ','), ('analysis', ',', 'machine'), (',', 'machine', 'vision'), ('machine', 'vision', ','), ('vision', ',', 'voice'), (',', 'voice', 'synthesis'), ('voice', 'synthesis', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Electronics', 'NNP'), ('−', 'NNP'), ('Code', 'NNP'), ('sequence', 'NN'), ('prediction', 'NN'), (',', ','), ('IC', 'NNP'), ('chip', 'NN'), ('layout', 'NN'), (',', ','), ('chip', 'NN'), ('failure', 'NN'), ('analysis', 'NN'), (',', ','), ('machine', 'NN'), ('vision', 'NN'), (',', ','), ('voice', 'NN'), ('synthesis', 'NN'), ('.', '.')]

 (S
  (NP ·/JJ Electronics/NNP −/NNP Code/NNP sequence/NN prediction/NN)
  ,/,
  (NP IC/NNP chip/NN layout/NN)
  ,/,
  (NP chip/NN failure/NN analysis/NN)
  ,/,
  (NP machine/NN vision/NN)
  ,/,
  (NP voice/NN synthesis/NN)
  ./.) 


>> Noun Phrases are: 
 ['· Electronics − Code sequence prediction', 'IC chip layout', 'chip failure analysis', 'machine vision', 'voice synthesis']

>> Named Entities are: 
 [('ORGANIZATION', 'IC')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Electronics', 'electron'), ('−', '−'), ('Code', 'code'), ('sequence', 'sequenc'), ('prediction', 'predict'), (',', ','), ('IC', 'ic'), ('chip', 'chip'), ('layout', 'layout'), (',', ','), ('chip', 'chip'), ('failure', 'failur'), ('analysis', 'analysi'), (',', ','), ('machine', 'machin'), ('vision', 'vision'), (',', ','), ('voice', 'voic'), ('synthesis', 'synthesi'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Electronics', 'electron'), ('−', '−'), ('Code', 'code'), ('sequence', 'sequenc'), ('prediction', 'predict'), (',', ','), ('IC', 'ic'), ('chip', 'chip'), ('layout', 'layout'), (',', ','), ('chip', 'chip'), ('failure', 'failur'), ('analysis', 'analysi'), (',', ','), ('machine', 'machin'), ('vision', 'vision'), (',', ','), ('voice', 'voic'), ('synthesis', 'synthesi'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Electronics', 'Electronics'), ('−', '−'), ('Code', 'Code'), ('sequence', 'sequence'), ('prediction', 'prediction'), (',', ','), ('IC', 'IC'), ('chip', 'chip'), ('layout', 'layout'), (',', ','), ('chip', 'chip'), ('failure', 'failure'), ('analysis', 'analysis'), (',', ','), ('machine', 'machine'), ('vision', 'vision'), (',', ','), ('voice', 'voice'), ('synthesis', 'synthesis'), ('.', '.')]



============================ Sentence 82 =============================

· Financial − Real estate appraisal, loan advisor, mortgage screening, corporate bond rating, portfolio trading program, corporate financial analysis, currency value prediction, document readers, credit application evaluators. 


>> Tokens are: 
 ['·', 'Financial', '−', 'Real', 'estate', 'appraisal', ',', 'loan', 'advisor', ',', 'mortgage', 'screening', ',', 'corporate', 'bond', 'rating', ',', 'portfolio', 'trading', 'program', ',', 'corporate', 'financial', 'analysis', ',', 'currency', 'value', 'prediction', ',', 'document', 'readers', ',', 'credit', 'application', 'evaluators', '.']

>> Bigrams are: 
 [('·', 'Financial'), ('Financial', '−'), ('−', 'Real'), ('Real', 'estate'), ('estate', 'appraisal'), ('appraisal', ','), (',', 'loan'), ('loan', 'advisor'), ('advisor', ','), (',', 'mortgage'), ('mortgage', 'screening'), ('screening', ','), (',', 'corporate'), ('corporate', 'bond'), ('bond', 'rating'), ('rating', ','), (',', 'portfolio'), ('portfolio', 'trading'), ('trading', 'program'), ('program', ','), (',', 'corporate'), ('corporate', 'financial'), ('financial', 'analysis'), ('analysis', ','), (',', 'currency'), ('currency', 'value'), ('value', 'prediction'), ('prediction', ','), (',', 'document'), ('document', 'readers'), ('readers', ','), (',', 'credit'), ('credit', 'application'), ('application', 'evaluators'), ('evaluators', '.')]

>> Trigrams are: 
 [('·', 'Financial', '−'), ('Financial', '−', 'Real'), ('−', 'Real', 'estate'), ('Real', 'estate', 'appraisal'), ('estate', 'appraisal', ','), ('appraisal', ',', 'loan'), (',', 'loan', 'advisor'), ('loan', 'advisor', ','), ('advisor', ',', 'mortgage'), (',', 'mortgage', 'screening'), ('mortgage', 'screening', ','), ('screening', ',', 'corporate'), (',', 'corporate', 'bond'), ('corporate', 'bond', 'rating'), ('bond', 'rating', ','), ('rating', ',', 'portfolio'), (',', 'portfolio', 'trading'), ('portfolio', 'trading', 'program'), ('trading', 'program', ','), ('program', ',', 'corporate'), (',', 'corporate', 'financial'), ('corporate', 'financial', 'analysis'), ('financial', 'analysis', ','), ('analysis', ',', 'currency'), (',', 'currency', 'value'), ('currency', 'value', 'prediction'), ('value', 'prediction', ','), ('prediction', ',', 'document'), (',', 'document', 'readers'), ('document', 'readers', ','), ('readers', ',', 'credit'), (',', 'credit', 'application'), ('credit', 'application', 'evaluators'), ('application', 'evaluators', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Financial', 'NNP'), ('−', 'NNP'), ('Real', 'NNP'), ('estate', 'NN'), ('appraisal', 'NN'), (',', ','), ('loan', 'NN'), ('advisor', 'NN'), (',', ','), ('mortgage', 'NN'), ('screening', 'NN'), (',', ','), ('corporate', 'JJ'), ('bond', 'NN'), ('rating', 'NN'), (',', ','), ('portfolio', 'NN'), ('trading', 'NN'), ('program', 'NN'), (',', ','), ('corporate', 'JJ'), ('financial', 'JJ'), ('analysis', 'NN'), (',', ','), ('currency', 'NN'), ('value', 'NN'), ('prediction', 'NN'), (',', ','), ('document', 'NN'), ('readers', 'NNS'), (',', ','), ('credit', 'NN'), ('application', 'NN'), ('evaluators', 'NNS'), ('.', '.')]

 (S
  (NP ·/JJ Financial/NNP −/NNP Real/NNP estate/NN appraisal/NN)
  ,/,
  (NP loan/NN advisor/NN)
  ,/,
  (NP mortgage/NN screening/NN)
  ,/,
  (NP corporate/JJ bond/NN rating/NN)
  ,/,
  (NP portfolio/NN trading/NN program/NN)
  ,/,
  (NP corporate/JJ financial/JJ analysis/NN)
  ,/,
  (NP currency/NN value/NN prediction/NN)
  ,/,
  (NP document/NN readers/NNS)
  ,/,
  (NP credit/NN application/NN evaluators/NNS)
  ./.) 


>> Noun Phrases are: 
 ['· Financial − Real estate appraisal', 'loan advisor', 'mortgage screening', 'corporate bond rating', 'portfolio trading program', 'corporate financial analysis', 'currency value prediction', 'document readers', 'credit application evaluators']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Financial', 'financi'), ('−', '−'), ('Real', 'real'), ('estate', 'estat'), ('appraisal', 'apprais'), (',', ','), ('loan', 'loan'), ('advisor', 'advisor'), (',', ','), ('mortgage', 'mortgag'), ('screening', 'screen'), (',', ','), ('corporate', 'corpor'), ('bond', 'bond'), ('rating', 'rate'), (',', ','), ('portfolio', 'portfolio'), ('trading', 'trade'), ('program', 'program'), (',', ','), ('corporate', 'corpor'), ('financial', 'financi'), ('analysis', 'analysi'), (',', ','), ('currency', 'currenc'), ('value', 'valu'), ('prediction', 'predict'), (',', ','), ('document', 'document'), ('readers', 'reader'), (',', ','), ('credit', 'credit'), ('application', 'applic'), ('evaluators', 'evalu'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Financial', 'financi'), ('−', '−'), ('Real', 'real'), ('estate', 'estat'), ('appraisal', 'apprais'), (',', ','), ('loan', 'loan'), ('advisor', 'advisor'), (',', ','), ('mortgage', 'mortgag'), ('screening', 'screen'), (',', ','), ('corporate', 'corpor'), ('bond', 'bond'), ('rating', 'rate'), (',', ','), ('portfolio', 'portfolio'), ('trading', 'trade'), ('program', 'program'), (',', ','), ('corporate', 'corpor'), ('financial', 'financi'), ('analysis', 'analysi'), (',', ','), ('currency', 'currenc'), ('value', 'valu'), ('prediction', 'predict'), (',', ','), ('document', 'document'), ('readers', 'reader'), (',', ','), ('credit', 'credit'), ('application', 'applic'), ('evaluators', 'evalu'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Financial', 'Financial'), ('−', '−'), ('Real', 'Real'), ('estate', 'estate'), ('appraisal', 'appraisal'), (',', ','), ('loan', 'loan'), ('advisor', 'advisor'), (',', ','), ('mortgage', 'mortgage'), ('screening', 'screening'), (',', ','), ('corporate', 'corporate'), ('bond', 'bond'), ('rating', 'rating'), (',', ','), ('portfolio', 'portfolio'), ('trading', 'trading'), ('program', 'program'), (',', ','), ('corporate', 'corporate'), ('financial', 'financial'), ('analysis', 'analysis'), (',', ','), ('currency', 'currency'), ('value', 'value'), ('prediction', 'prediction'), (',', ','), ('document', 'document'), ('readers', 'reader'), (',', ','), ('credit', 'credit'), ('application', 'application'), ('evaluators', 'evaluator'), ('.', '.')]



============================ Sentence 83 =============================

· Industrial − Manufacturing process control, product design and analysis, quality inspection systems, welding quality analysis, paper quality prediction, chemical product design analysis, dynamic modeling of chemical process systems, machine maintenance analysis, project bidding, planning, and management. 


>> Tokens are: 
 ['·', 'Industrial', '−', 'Manufacturing', 'process', 'control', ',', 'product', 'design', 'analysis', ',', 'quality', 'inspection', 'systems', ',', 'welding', 'quality', 'analysis', ',', 'paper', 'quality', 'prediction', ',', 'chemical', 'product', 'design', 'analysis', ',', 'dynamic', 'modeling', 'chemical', 'process', 'systems', ',', 'machine', 'maintenance', 'analysis', ',', 'project', 'bidding', ',', 'planning', ',', 'management', '.']

>> Bigrams are: 
 [('·', 'Industrial'), ('Industrial', '−'), ('−', 'Manufacturing'), ('Manufacturing', 'process'), ('process', 'control'), ('control', ','), (',', 'product'), ('product', 'design'), ('design', 'analysis'), ('analysis', ','), (',', 'quality'), ('quality', 'inspection'), ('inspection', 'systems'), ('systems', ','), (',', 'welding'), ('welding', 'quality'), ('quality', 'analysis'), ('analysis', ','), (',', 'paper'), ('paper', 'quality'), ('quality', 'prediction'), ('prediction', ','), (',', 'chemical'), ('chemical', 'product'), ('product', 'design'), ('design', 'analysis'), ('analysis', ','), (',', 'dynamic'), ('dynamic', 'modeling'), ('modeling', 'chemical'), ('chemical', 'process'), ('process', 'systems'), ('systems', ','), (',', 'machine'), ('machine', 'maintenance'), ('maintenance', 'analysis'), ('analysis', ','), (',', 'project'), ('project', 'bidding'), ('bidding', ','), (',', 'planning'), ('planning', ','), (',', 'management'), ('management', '.')]

>> Trigrams are: 
 [('·', 'Industrial', '−'), ('Industrial', '−', 'Manufacturing'), ('−', 'Manufacturing', 'process'), ('Manufacturing', 'process', 'control'), ('process', 'control', ','), ('control', ',', 'product'), (',', 'product', 'design'), ('product', 'design', 'analysis'), ('design', 'analysis', ','), ('analysis', ',', 'quality'), (',', 'quality', 'inspection'), ('quality', 'inspection', 'systems'), ('inspection', 'systems', ','), ('systems', ',', 'welding'), (',', 'welding', 'quality'), ('welding', 'quality', 'analysis'), ('quality', 'analysis', ','), ('analysis', ',', 'paper'), (',', 'paper', 'quality'), ('paper', 'quality', 'prediction'), ('quality', 'prediction', ','), ('prediction', ',', 'chemical'), (',', 'chemical', 'product'), ('chemical', 'product', 'design'), ('product', 'design', 'analysis'), ('design', 'analysis', ','), ('analysis', ',', 'dynamic'), (',', 'dynamic', 'modeling'), ('dynamic', 'modeling', 'chemical'), ('modeling', 'chemical', 'process'), ('chemical', 'process', 'systems'), ('process', 'systems', ','), ('systems', ',', 'machine'), (',', 'machine', 'maintenance'), ('machine', 'maintenance', 'analysis'), ('maintenance', 'analysis', ','), ('analysis', ',', 'project'), (',', 'project', 'bidding'), ('project', 'bidding', ','), ('bidding', ',', 'planning'), (',', 'planning', ','), ('planning', ',', 'management'), (',', 'management', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Industrial', 'NNP'), ('−', 'NNP'), ('Manufacturing', 'NNP'), ('process', 'NN'), ('control', 'NN'), (',', ','), ('product', 'NN'), ('design', 'NN'), ('analysis', 'NN'), (',', ','), ('quality', 'NN'), ('inspection', 'NN'), ('systems', 'NNS'), (',', ','), ('welding', 'VBG'), ('quality', 'NN'), ('analysis', 'NN'), (',', ','), ('paper', 'NN'), ('quality', 'NN'), ('prediction', 'NN'), (',', ','), ('chemical', 'JJ'), ('product', 'NN'), ('design', 'NN'), ('analysis', 'NN'), (',', ','), ('dynamic', 'JJ'), ('modeling', 'VBG'), ('chemical', 'JJ'), ('process', 'NN'), ('systems', 'NNS'), (',', ','), ('machine', 'NN'), ('maintenance', 'NN'), ('analysis', 'NN'), (',', ','), ('project', 'NN'), ('bidding', 'NN'), (',', ','), ('planning', 'NN'), (',', ','), ('management', 'NN'), ('.', '.')]

 (S
  (NP
    ·/JJ
    Industrial/NNP
    −/NNP
    Manufacturing/NNP
    process/NN
    control/NN)
  ,/,
  (NP product/NN design/NN analysis/NN)
  ,/,
  (NP quality/NN inspection/NN systems/NNS)
  ,/,
  welding/VBG
  (NP quality/NN analysis/NN)
  ,/,
  (NP paper/NN quality/NN prediction/NN)
  ,/,
  (NP chemical/JJ product/NN design/NN analysis/NN)
  ,/,
  dynamic/JJ
  modeling/VBG
  (NP chemical/JJ process/NN systems/NNS)
  ,/,
  (NP machine/NN maintenance/NN analysis/NN)
  ,/,
  (NP project/NN bidding/NN)
  ,/,
  (NP planning/NN)
  ,/,
  (NP management/NN)
  ./.) 


>> Noun Phrases are: 
 ['· Industrial − Manufacturing process control', 'product design analysis', 'quality inspection systems', 'quality analysis', 'paper quality prediction', 'chemical product design analysis', 'chemical process systems', 'machine maintenance analysis', 'project bidding', 'planning', 'management']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Industrial', 'industri'), ('−', '−'), ('Manufacturing', 'manufactur'), ('process', 'process'), ('control', 'control'), (',', ','), ('product', 'product'), ('design', 'design'), ('analysis', 'analysi'), (',', ','), ('quality', 'qualiti'), ('inspection', 'inspect'), ('systems', 'system'), (',', ','), ('welding', 'weld'), ('quality', 'qualiti'), ('analysis', 'analysi'), (',', ','), ('paper', 'paper'), ('quality', 'qualiti'), ('prediction', 'predict'), (',', ','), ('chemical', 'chemic'), ('product', 'product'), ('design', 'design'), ('analysis', 'analysi'), (',', ','), ('dynamic', 'dynam'), ('modeling', 'model'), ('chemical', 'chemic'), ('process', 'process'), ('systems', 'system'), (',', ','), ('machine', 'machin'), ('maintenance', 'mainten'), ('analysis', 'analysi'), (',', ','), ('project', 'project'), ('bidding', 'bid'), (',', ','), ('planning', 'plan'), (',', ','), ('management', 'manag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Industrial', 'industri'), ('−', '−'), ('Manufacturing', 'manufactur'), ('process', 'process'), ('control', 'control'), (',', ','), ('product', 'product'), ('design', 'design'), ('analysis', 'analysi'), (',', ','), ('quality', 'qualiti'), ('inspection', 'inspect'), ('systems', 'system'), (',', ','), ('welding', 'weld'), ('quality', 'qualiti'), ('analysis', 'analysi'), (',', ','), ('paper', 'paper'), ('quality', 'qualiti'), ('prediction', 'predict'), (',', ','), ('chemical', 'chemic'), ('product', 'product'), ('design', 'design'), ('analysis', 'analysi'), (',', ','), ('dynamic', 'dynam'), ('modeling', 'model'), ('chemical', 'chemic'), ('process', 'process'), ('systems', 'system'), (',', ','), ('machine', 'machin'), ('maintenance', 'mainten'), ('analysis', 'analysi'), (',', ','), ('project', 'project'), ('bidding', 'bid'), (',', ','), ('planning', 'plan'), (',', ','), ('management', 'manag'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Industrial', 'Industrial'), ('−', '−'), ('Manufacturing', 'Manufacturing'), ('process', 'process'), ('control', 'control'), (',', ','), ('product', 'product'), ('design', 'design'), ('analysis', 'analysis'), (',', ','), ('quality', 'quality'), ('inspection', 'inspection'), ('systems', 'system'), (',', ','), ('welding', 'welding'), ('quality', 'quality'), ('analysis', 'analysis'), (',', ','), ('paper', 'paper'), ('quality', 'quality'), ('prediction', 'prediction'), (',', ','), ('chemical', 'chemical'), ('product', 'product'), ('design', 'design'), ('analysis', 'analysis'), (',', ','), ('dynamic', 'dynamic'), ('modeling', 'modeling'), ('chemical', 'chemical'), ('process', 'process'), ('systems', 'system'), (',', ','), ('machine', 'machine'), ('maintenance', 'maintenance'), ('analysis', 'analysis'), (',', ','), ('project', 'project'), ('bidding', 'bidding'), (',', ','), ('planning', 'planning'), (',', ','), ('management', 'management'), ('.', '.')]



============================ Sentence 84 =============================

· Medical − Cancer cell analysis, EEG and ECG analysis, prosthetic design, transplant time optimizer. 


>> Tokens are: 
 ['·', 'Medical', '−', 'Cancer', 'cell', 'analysis', ',', 'EEG', 'ECG', 'analysis', ',', 'prosthetic', 'design', ',', 'transplant', 'time', 'optimizer', '.']

>> Bigrams are: 
 [('·', 'Medical'), ('Medical', '−'), ('−', 'Cancer'), ('Cancer', 'cell'), ('cell', 'analysis'), ('analysis', ','), (',', 'EEG'), ('EEG', 'ECG'), ('ECG', 'analysis'), ('analysis', ','), (',', 'prosthetic'), ('prosthetic', 'design'), ('design', ','), (',', 'transplant'), ('transplant', 'time'), ('time', 'optimizer'), ('optimizer', '.')]

>> Trigrams are: 
 [('·', 'Medical', '−'), ('Medical', '−', 'Cancer'), ('−', 'Cancer', 'cell'), ('Cancer', 'cell', 'analysis'), ('cell', 'analysis', ','), ('analysis', ',', 'EEG'), (',', 'EEG', 'ECG'), ('EEG', 'ECG', 'analysis'), ('ECG', 'analysis', ','), ('analysis', ',', 'prosthetic'), (',', 'prosthetic', 'design'), ('prosthetic', 'design', ','), ('design', ',', 'transplant'), (',', 'transplant', 'time'), ('transplant', 'time', 'optimizer'), ('time', 'optimizer', '.')]

>> POS Tags are: 
 [('·', 'NNP'), ('Medical', 'NNP'), ('−', 'NNP'), ('Cancer', 'NNP'), ('cell', 'NN'), ('analysis', 'NN'), (',', ','), ('EEG', 'NNP'), ('ECG', 'NNP'), ('analysis', 'NN'), (',', ','), ('prosthetic', 'JJ'), ('design', 'NN'), (',', ','), ('transplant', 'JJ'), ('time', 'NN'), ('optimizer', 'NN'), ('.', '.')]

 (S
  (NP ·/NNP Medical/NNP −/NNP Cancer/NNP cell/NN analysis/NN)
  ,/,
  (NP EEG/NNP ECG/NNP analysis/NN)
  ,/,
  (NP prosthetic/JJ design/NN)
  ,/,
  (NP transplant/JJ time/NN optimizer/NN)
  ./.) 


>> Noun Phrases are: 
 ['· Medical − Cancer cell analysis', 'EEG ECG analysis', 'prosthetic design', 'transplant time optimizer']

>> Named Entities are: 
 [('ORGANIZATION', 'EEG')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Medical', 'medic'), ('−', '−'), ('Cancer', 'cancer'), ('cell', 'cell'), ('analysis', 'analysi'), (',', ','), ('EEG', 'eeg'), ('ECG', 'ecg'), ('analysis', 'analysi'), (',', ','), ('prosthetic', 'prosthet'), ('design', 'design'), (',', ','), ('transplant', 'transplant'), ('time', 'time'), ('optimizer', 'optim'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Medical', 'medic'), ('−', '−'), ('Cancer', 'cancer'), ('cell', 'cell'), ('analysis', 'analysi'), (',', ','), ('EEG', 'eeg'), ('ECG', 'ecg'), ('analysis', 'analysi'), (',', ','), ('prosthetic', 'prosthet'), ('design', 'design'), (',', ','), ('transplant', 'transplant'), ('time', 'time'), ('optimizer', 'optim'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Medical', 'Medical'), ('−', '−'), ('Cancer', 'Cancer'), ('cell', 'cell'), ('analysis', 'analysis'), (',', ','), ('EEG', 'EEG'), ('ECG', 'ECG'), ('analysis', 'analysis'), (',', ','), ('prosthetic', 'prosthetic'), ('design', 'design'), (',', ','), ('transplant', 'transplant'), ('time', 'time'), ('optimizer', 'optimizer'), ('.', '.')]



============================ Sentence 85 =============================

· Speech − Speech recognition, speech classification, text to speech conversion. 


>> Tokens are: 
 ['·', 'Speech', '−', 'Speech', 'recognition', ',', 'speech', 'classification', ',', 'text', 'speech', 'conversion', '.']

>> Bigrams are: 
 [('·', 'Speech'), ('Speech', '−'), ('−', 'Speech'), ('Speech', 'recognition'), ('recognition', ','), (',', 'speech'), ('speech', 'classification'), ('classification', ','), (',', 'text'), ('text', 'speech'), ('speech', 'conversion'), ('conversion', '.')]

>> Trigrams are: 
 [('·', 'Speech', '−'), ('Speech', '−', 'Speech'), ('−', 'Speech', 'recognition'), ('Speech', 'recognition', ','), ('recognition', ',', 'speech'), (',', 'speech', 'classification'), ('speech', 'classification', ','), ('classification', ',', 'text'), (',', 'text', 'speech'), ('text', 'speech', 'conversion'), ('speech', 'conversion', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Speech', 'NNP'), ('−', 'NNP'), ('Speech', 'NNP'), ('recognition', 'NN'), (',', ','), ('speech', 'NN'), ('classification', 'NN'), (',', ','), ('text', 'JJ'), ('speech', 'NN'), ('conversion', 'NN'), ('.', '.')]

 (S
  (NP ·/JJ Speech/NNP −/NNP Speech/NNP recognition/NN)
  ,/,
  (NP speech/NN classification/NN)
  ,/,
  (NP text/JJ speech/NN conversion/NN)
  ./.) 


>> Noun Phrases are: 
 ['· Speech − Speech recognition', 'speech classification', 'text speech conversion']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Speech', 'speech'), ('−', '−'), ('Speech', 'speech'), ('recognition', 'recognit'), (',', ','), ('speech', 'speech'), ('classification', 'classif'), (',', ','), ('text', 'text'), ('speech', 'speech'), ('conversion', 'convers'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Speech', 'speech'), ('−', '−'), ('Speech', 'speech'), ('recognition', 'recognit'), (',', ','), ('speech', 'speech'), ('classification', 'classif'), (',', ','), ('text', 'text'), ('speech', 'speech'), ('conversion', 'convers'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Speech', 'Speech'), ('−', '−'), ('Speech', 'Speech'), ('recognition', 'recognition'), (',', ','), ('speech', 'speech'), ('classification', 'classification'), (',', ','), ('text', 'text'), ('speech', 'speech'), ('conversion', 'conversion'), ('.', '.')]



============================ Sentence 86 =============================

· Telecommunications − Image and data compression, automated information services, real-time spoken language translation. 


>> Tokens are: 
 ['·', 'Telecommunications', '−', 'Image', 'data', 'compression', ',', 'automated', 'information', 'services', ',', 'real-time', 'spoken', 'language', 'translation', '.']

>> Bigrams are: 
 [('·', 'Telecommunications'), ('Telecommunications', '−'), ('−', 'Image'), ('Image', 'data'), ('data', 'compression'), ('compression', ','), (',', 'automated'), ('automated', 'information'), ('information', 'services'), ('services', ','), (',', 'real-time'), ('real-time', 'spoken'), ('spoken', 'language'), ('language', 'translation'), ('translation', '.')]

>> Trigrams are: 
 [('·', 'Telecommunications', '−'), ('Telecommunications', '−', 'Image'), ('−', 'Image', 'data'), ('Image', 'data', 'compression'), ('data', 'compression', ','), ('compression', ',', 'automated'), (',', 'automated', 'information'), ('automated', 'information', 'services'), ('information', 'services', ','), ('services', ',', 'real-time'), (',', 'real-time', 'spoken'), ('real-time', 'spoken', 'language'), ('spoken', 'language', 'translation'), ('language', 'translation', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Telecommunications', 'NNP'), ('−', 'NNP'), ('Image', 'NNP'), ('data', 'NN'), ('compression', 'NN'), (',', ','), ('automated', 'VBN'), ('information', 'NN'), ('services', 'NNS'), (',', ','), ('real-time', 'JJ'), ('spoken', 'JJ'), ('language', 'NN'), ('translation', 'NN'), ('.', '.')]

 (S
  (NP
    ·/JJ
    Telecommunications/NNP
    −/NNP
    Image/NNP
    data/NN
    compression/NN)
  ,/,
  automated/VBN
  (NP information/NN services/NNS)
  ,/,
  (NP real-time/JJ spoken/JJ language/NN translation/NN)
  ./.) 


>> Noun Phrases are: 
 ['· Telecommunications − Image data compression', 'information services', 'real-time spoken language translation']

>> Named Entities are: 
 [('ORGANIZATION', 'Telecommunications')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Telecommunications', 'telecommun'), ('−', '−'), ('Image', 'imag'), ('data', 'data'), ('compression', 'compress'), (',', ','), ('automated', 'autom'), ('information', 'inform'), ('services', 'servic'), (',', ','), ('real-time', 'real-tim'), ('spoken', 'spoken'), ('language', 'languag'), ('translation', 'translat'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Telecommunications', 'telecommun'), ('−', '−'), ('Image', 'imag'), ('data', 'data'), ('compression', 'compress'), (',', ','), ('automated', 'autom'), ('information', 'inform'), ('services', 'servic'), (',', ','), ('real-time', 'real-tim'), ('spoken', 'spoken'), ('language', 'languag'), ('translation', 'translat'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Telecommunications', 'Telecommunications'), ('−', '−'), ('Image', 'Image'), ('data', 'data'), ('compression', 'compression'), (',', ','), ('automated', 'automated'), ('information', 'information'), ('services', 'service'), (',', ','), ('real-time', 'real-time'), ('spoken', 'spoken'), ('language', 'language'), ('translation', 'translation'), ('.', '.')]



============================ Sentence 87 =============================

· Transportation − Truck Brake system diagnosis, vehicle scheduling, routing systems. 


>> Tokens are: 
 ['·', 'Transportation', '−', 'Truck', 'Brake', 'system', 'diagnosis', ',', 'vehicle', 'scheduling', ',', 'routing', 'systems', '.']

>> Bigrams are: 
 [('·', 'Transportation'), ('Transportation', '−'), ('−', 'Truck'), ('Truck', 'Brake'), ('Brake', 'system'), ('system', 'diagnosis'), ('diagnosis', ','), (',', 'vehicle'), ('vehicle', 'scheduling'), ('scheduling', ','), (',', 'routing'), ('routing', 'systems'), ('systems', '.')]

>> Trigrams are: 
 [('·', 'Transportation', '−'), ('Transportation', '−', 'Truck'), ('−', 'Truck', 'Brake'), ('Truck', 'Brake', 'system'), ('Brake', 'system', 'diagnosis'), ('system', 'diagnosis', ','), ('diagnosis', ',', 'vehicle'), (',', 'vehicle', 'scheduling'), ('vehicle', 'scheduling', ','), ('scheduling', ',', 'routing'), (',', 'routing', 'systems'), ('routing', 'systems', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Transportation', 'NNP'), ('−', 'NNP'), ('Truck', 'NNP'), ('Brake', 'NNP'), ('system', 'NN'), ('diagnosis', 'NN'), (',', ','), ('vehicle', 'NN'), ('scheduling', 'NN'), (',', ','), ('routing', 'VBG'), ('systems', 'NNS'), ('.', '.')]

 (S
  (NP
    ·/JJ
    Transportation/NNP
    −/NNP
    Truck/NNP
    Brake/NNP
    system/NN
    diagnosis/NN)
  ,/,
  (NP vehicle/NN scheduling/NN)
  ,/,
  routing/VBG
  (NP systems/NNS)
  ./.) 


>> Noun Phrases are: 
 ['· Transportation − Truck Brake system diagnosis', 'vehicle scheduling', 'systems']

>> Named Entities are: 
 [('ORGANIZATION', 'Transportation'), ('PERSON', 'Truck Brake')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Transportation', 'transport'), ('−', '−'), ('Truck', 'truck'), ('Brake', 'brake'), ('system', 'system'), ('diagnosis', 'diagnosi'), (',', ','), ('vehicle', 'vehicl'), ('scheduling', 'schedul'), (',', ','), ('routing', 'rout'), ('systems', 'system'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Transportation', 'transport'), ('−', '−'), ('Truck', 'truck'), ('Brake', 'brake'), ('system', 'system'), ('diagnosis', 'diagnosi'), (',', ','), ('vehicle', 'vehicl'), ('scheduling', 'schedul'), (',', ','), ('routing', 'rout'), ('systems', 'system'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Transportation', 'Transportation'), ('−', '−'), ('Truck', 'Truck'), ('Brake', 'Brake'), ('system', 'system'), ('diagnosis', 'diagnosis'), (',', ','), ('vehicle', 'vehicle'), ('scheduling', 'scheduling'), (',', ','), ('routing', 'routing'), ('systems', 'system'), ('.', '.')]



============================ Sentence 88 =============================

· Software − Pattern Recognition in facial recognition, optical character recognition, etc. 


>> Tokens are: 
 ['·', 'Software', '−', 'Pattern', 'Recognition', 'facial', 'recognition', ',', 'optical', 'character', 'recognition', ',', 'etc', '.']

>> Bigrams are: 
 [('·', 'Software'), ('Software', '−'), ('−', 'Pattern'), ('Pattern', 'Recognition'), ('Recognition', 'facial'), ('facial', 'recognition'), ('recognition', ','), (',', 'optical'), ('optical', 'character'), ('character', 'recognition'), ('recognition', ','), (',', 'etc'), ('etc', '.')]

>> Trigrams are: 
 [('·', 'Software', '−'), ('Software', '−', 'Pattern'), ('−', 'Pattern', 'Recognition'), ('Pattern', 'Recognition', 'facial'), ('Recognition', 'facial', 'recognition'), ('facial', 'recognition', ','), ('recognition', ',', 'optical'), (',', 'optical', 'character'), ('optical', 'character', 'recognition'), ('character', 'recognition', ','), ('recognition', ',', 'etc'), (',', 'etc', '.')]

>> POS Tags are: 
 [('·', 'NN'), ('Software', 'NNP'), ('−', 'NNP'), ('Pattern', 'NNP'), ('Recognition', 'NNP'), ('facial', 'JJ'), ('recognition', 'NN'), (',', ','), ('optical', 'JJ'), ('character', 'NN'), ('recognition', 'NN'), (',', ','), ('etc', 'FW'), ('.', '.')]

 (S
  (NP ·/NN Software/NNP −/NNP Pattern/NNP Recognition/NNP)
  (NP facial/JJ recognition/NN)
  ,/,
  (NP optical/JJ character/NN recognition/NN)
  ,/,
  etc/FW
  ./.) 


>> Noun Phrases are: 
 ['· Software − Pattern Recognition', 'facial recognition', 'optical character recognition']

>> Named Entities are: 
 [('PERSON', 'Software'), ('PERSON', 'Pattern Recognition')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Software', 'softwar'), ('−', '−'), ('Pattern', 'pattern'), ('Recognition', 'recognit'), ('facial', 'facial'), ('recognition', 'recognit'), (',', ','), ('optical', 'optic'), ('character', 'charact'), ('recognition', 'recognit'), (',', ','), ('etc', 'etc'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Software', 'softwar'), ('−', '−'), ('Pattern', 'pattern'), ('Recognition', 'recognit'), ('facial', 'facial'), ('recognition', 'recognit'), (',', ','), ('optical', 'optic'), ('character', 'charact'), ('recognition', 'recognit'), (',', ','), ('etc', 'etc'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Software', 'Software'), ('−', '−'), ('Pattern', 'Pattern'), ('Recognition', 'Recognition'), ('facial', 'facial'), ('recognition', 'recognition'), (',', ','), ('optical', 'optical'), ('character', 'character'), ('recognition', 'recognition'), (',', ','), ('etc', 'etc'), ('.', '.')]



============================ Sentence 89 =============================

· Time Series Prediction − ANNs are used to make predictions on stocks and natural calamities. 


>> Tokens are: 
 ['·', 'Time', 'Series', 'Prediction', '−', 'ANNs', 'used', 'make', 'predictions', 'stocks', 'natural', 'calamities', '.']

>> Bigrams are: 
 [('·', 'Time'), ('Time', 'Series'), ('Series', 'Prediction'), ('Prediction', '−'), ('−', 'ANNs'), ('ANNs', 'used'), ('used', 'make'), ('make', 'predictions'), ('predictions', 'stocks'), ('stocks', 'natural'), ('natural', 'calamities'), ('calamities', '.')]

>> Trigrams are: 
 [('·', 'Time', 'Series'), ('Time', 'Series', 'Prediction'), ('Series', 'Prediction', '−'), ('Prediction', '−', 'ANNs'), ('−', 'ANNs', 'used'), ('ANNs', 'used', 'make'), ('used', 'make', 'predictions'), ('make', 'predictions', 'stocks'), ('predictions', 'stocks', 'natural'), ('stocks', 'natural', 'calamities'), ('natural', 'calamities', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Time', 'NNP'), ('Series', 'NNP'), ('Prediction', 'NNP'), ('−', 'NNP'), ('ANNs', 'NNP'), ('used', 'VBD'), ('make', 'VB'), ('predictions', 'NNS'), ('stocks', 'NNS'), ('natural', 'JJ'), ('calamities', 'NNS'), ('.', '.')]

 (S
  (NP ·/JJ Time/NNP Series/NNP Prediction/NNP −/NNP ANNs/NNP)
  used/VBD
  make/VB
  (NP predictions/NNS stocks/NNS)
  (NP natural/JJ calamities/NNS)
  ./.) 


>> Noun Phrases are: 
 ['· Time Series Prediction − ANNs', 'predictions stocks', 'natural calamities']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Time', 'time'), ('Series', 'seri'), ('Prediction', 'predict'), ('−', '−'), ('ANNs', 'ann'), ('used', 'use'), ('make', 'make'), ('predictions', 'predict'), ('stocks', 'stock'), ('natural', 'natur'), ('calamities', 'calam'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Time', 'time'), ('Series', 'seri'), ('Prediction', 'predict'), ('−', '−'), ('ANNs', 'ann'), ('used', 'use'), ('make', 'make'), ('predictions', 'predict'), ('stocks', 'stock'), ('natural', 'natur'), ('calamities', 'calam'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Time', 'Time'), ('Series', 'Series'), ('Prediction', 'Prediction'), ('−', '−'), ('ANNs', 'ANNs'), ('used', 'used'), ('make', 'make'), ('predictions', 'prediction'), ('stocks', 'stock'), ('natural', 'natural'), ('calamities', 'calamity'), ('.', '.')]



============================ Sentence 90 =============================

· Signal Processing − Neural networks can be trained to process an audio signal and filter it appropriately in the hearing aids. 


>> Tokens are: 
 ['·', 'Signal', 'Processing', '−', 'Neural', 'networks', 'trained', 'process', 'audio', 'signal', 'filter', 'appropriately', 'hearing', 'aids', '.']

>> Bigrams are: 
 [('·', 'Signal'), ('Signal', 'Processing'), ('Processing', '−'), ('−', 'Neural'), ('Neural', 'networks'), ('networks', 'trained'), ('trained', 'process'), ('process', 'audio'), ('audio', 'signal'), ('signal', 'filter'), ('filter', 'appropriately'), ('appropriately', 'hearing'), ('hearing', 'aids'), ('aids', '.')]

>> Trigrams are: 
 [('·', 'Signal', 'Processing'), ('Signal', 'Processing', '−'), ('Processing', '−', 'Neural'), ('−', 'Neural', 'networks'), ('Neural', 'networks', 'trained'), ('networks', 'trained', 'process'), ('trained', 'process', 'audio'), ('process', 'audio', 'signal'), ('audio', 'signal', 'filter'), ('signal', 'filter', 'appropriately'), ('filter', 'appropriately', 'hearing'), ('appropriately', 'hearing', 'aids'), ('hearing', 'aids', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Signal', 'NNP'), ('Processing', 'NNP'), ('−', 'NNP'), ('Neural', 'NNP'), ('networks', 'NNS'), ('trained', 'VBD'), ('process', 'NN'), ('audio', 'JJ'), ('signal', 'NN'), ('filter', 'RBR'), ('appropriately', 'RB'), ('hearing', 'VBG'), ('aids', 'NNS'), ('.', '.')]

 (S
  (NP ·/JJ Signal/NNP Processing/NNP −/NNP Neural/NNP networks/NNS)
  trained/VBD
  (NP process/NN)
  (NP audio/JJ signal/NN)
  filter/RBR
  appropriately/RB
  hearing/VBG
  (NP aids/NNS)
  ./.) 


>> Noun Phrases are: 
 ['· Signal Processing − Neural networks', 'process', 'audio signal', 'aids']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Signal', 'signal'), ('Processing', 'process'), ('−', '−'), ('Neural', 'neural'), ('networks', 'network'), ('trained', 'train'), ('process', 'process'), ('audio', 'audio'), ('signal', 'signal'), ('filter', 'filter'), ('appropriately', 'appropri'), ('hearing', 'hear'), ('aids', 'aid'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Signal', 'signal'), ('Processing', 'process'), ('−', '−'), ('Neural', 'neural'), ('networks', 'network'), ('trained', 'train'), ('process', 'process'), ('audio', 'audio'), ('signal', 'signal'), ('filter', 'filter'), ('appropriately', 'appropri'), ('hearing', 'hear'), ('aids', 'aid'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Signal', 'Signal'), ('Processing', 'Processing'), ('−', '−'), ('Neural', 'Neural'), ('networks', 'network'), ('trained', 'trained'), ('process', 'process'), ('audio', 'audio'), ('signal', 'signal'), ('filter', 'filter'), ('appropriately', 'appropriately'), ('hearing', 'hearing'), ('aids', 'aid'), ('.', '.')]



============================ Sentence 91 =============================

· Control − ANNs are often used to make steering decisions of physical vehicles. 


>> Tokens are: 
 ['·', 'Control', '−', 'ANNs', 'often', 'used', 'make', 'steering', 'decisions', 'physical', 'vehicles', '.']

>> Bigrams are: 
 [('·', 'Control'), ('Control', '−'), ('−', 'ANNs'), ('ANNs', 'often'), ('often', 'used'), ('used', 'make'), ('make', 'steering'), ('steering', 'decisions'), ('decisions', 'physical'), ('physical', 'vehicles'), ('vehicles', '.')]

>> Trigrams are: 
 [('·', 'Control', '−'), ('Control', '−', 'ANNs'), ('−', 'ANNs', 'often'), ('ANNs', 'often', 'used'), ('often', 'used', 'make'), ('used', 'make', 'steering'), ('make', 'steering', 'decisions'), ('steering', 'decisions', 'physical'), ('decisions', 'physical', 'vehicles'), ('physical', 'vehicles', '.')]

>> POS Tags are: 
 [('·', 'NNS'), ('Control', 'NNP'), ('−', 'NNP'), ('ANNs', 'NNP'), ('often', 'RB'), ('used', 'VBD'), ('make', 'VB'), ('steering', 'JJ'), ('decisions', 'NNS'), ('physical', 'JJ'), ('vehicles', 'NNS'), ('.', '.')]

 (S
  (NP ·/NNS Control/NNP −/NNP ANNs/NNP)
  often/RB
  used/VBD
  make/VB
  (NP steering/JJ decisions/NNS)
  (NP physical/JJ vehicles/NNS)
  ./.) 


>> Noun Phrases are: 
 ['· Control − ANNs', 'steering decisions', 'physical vehicles']

>> Named Entities are: 
 [('ORGANIZATION', 'Control')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Control', 'control'), ('−', '−'), ('ANNs', 'ann'), ('often', 'often'), ('used', 'use'), ('make', 'make'), ('steering', 'steer'), ('decisions', 'decis'), ('physical', 'physic'), ('vehicles', 'vehicl'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Control', 'control'), ('−', '−'), ('ANNs', 'ann'), ('often', 'often'), ('used', 'use'), ('make', 'make'), ('steering', 'steer'), ('decisions', 'decis'), ('physical', 'physic'), ('vehicles', 'vehicl'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Control', 'Control'), ('−', '−'), ('ANNs', 'ANNs'), ('often', 'often'), ('used', 'used'), ('make', 'make'), ('steering', 'steering'), ('decisions', 'decision'), ('physical', 'physical'), ('vehicles', 'vehicle'), ('.', '.')]



============================ Sentence 92 =============================

· Anomaly Detection − As ANNs are expert at recognizing patterns, they can also be trained to generate an output when something unusual occurs that misfits the pattern. 


>> Tokens are: 
 ['·', 'Anomaly', 'Detection', '−', 'As', 'ANNs', 'expert', 'recognizing', 'patterns', ',', 'also', 'trained', 'generate', 'output', 'something', 'unusual', 'occurs', 'misfits', 'pattern', '.']

>> Bigrams are: 
 [('·', 'Anomaly'), ('Anomaly', 'Detection'), ('Detection', '−'), ('−', 'As'), ('As', 'ANNs'), ('ANNs', 'expert'), ('expert', 'recognizing'), ('recognizing', 'patterns'), ('patterns', ','), (',', 'also'), ('also', 'trained'), ('trained', 'generate'), ('generate', 'output'), ('output', 'something'), ('something', 'unusual'), ('unusual', 'occurs'), ('occurs', 'misfits'), ('misfits', 'pattern'), ('pattern', '.')]

>> Trigrams are: 
 [('·', 'Anomaly', 'Detection'), ('Anomaly', 'Detection', '−'), ('Detection', '−', 'As'), ('−', 'As', 'ANNs'), ('As', 'ANNs', 'expert'), ('ANNs', 'expert', 'recognizing'), ('expert', 'recognizing', 'patterns'), ('recognizing', 'patterns', ','), ('patterns', ',', 'also'), (',', 'also', 'trained'), ('also', 'trained', 'generate'), ('trained', 'generate', 'output'), ('generate', 'output', 'something'), ('output', 'something', 'unusual'), ('something', 'unusual', 'occurs'), ('unusual', 'occurs', 'misfits'), ('occurs', 'misfits', 'pattern'), ('misfits', 'pattern', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Anomaly', 'NNP'), ('Detection', 'NNP'), ('−', 'NNP'), ('As', 'IN'), ('ANNs', 'NNP'), ('expert', 'VBP'), ('recognizing', 'VBG'), ('patterns', 'NNS'), (',', ','), ('also', 'RB'), ('trained', 'JJ'), ('generate', 'NN'), ('output', 'NN'), ('something', 'NN'), ('unusual', 'JJ'), ('occurs', 'VBZ'), ('misfits', 'NNS'), ('pattern', 'NN'), ('.', '.')]

 (S
  (NP ·/JJ Anomaly/NNP Detection/NNP −/NNP)
  As/IN
  (NP ANNs/NNP)
  expert/VBP
  recognizing/VBG
  (NP patterns/NNS)
  ,/,
  also/RB
  (NP trained/JJ generate/NN output/NN something/NN)
  unusual/JJ
  occurs/VBZ
  (NP misfits/NNS pattern/NN)
  ./.) 


>> Noun Phrases are: 
 ['· Anomaly Detection −', 'ANNs', 'patterns', 'trained generate output something', 'misfits pattern']

>> Named Entities are: 
 [('PERSON', 'Anomaly Detection'), ('ORGANIZATION', 'ANNs')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Anomaly', 'anomali'), ('Detection', 'detect'), ('−', '−'), ('As', 'as'), ('ANNs', 'ann'), ('expert', 'expert'), ('recognizing', 'recogn'), ('patterns', 'pattern'), (',', ','), ('also', 'also'), ('trained', 'train'), ('generate', 'gener'), ('output', 'output'), ('something', 'someth'), ('unusual', 'unusu'), ('occurs', 'occur'), ('misfits', 'misfit'), ('pattern', 'pattern'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Anomaly', 'anomali'), ('Detection', 'detect'), ('−', '−'), ('As', 'as'), ('ANNs', 'ann'), ('expert', 'expert'), ('recognizing', 'recogn'), ('patterns', 'pattern'), (',', ','), ('also', 'also'), ('trained', 'train'), ('generate', 'generat'), ('output', 'output'), ('something', 'someth'), ('unusual', 'unusu'), ('occurs', 'occur'), ('misfits', 'misfit'), ('pattern', 'pattern'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Anomaly', 'Anomaly'), ('Detection', 'Detection'), ('−', '−'), ('As', 'As'), ('ANNs', 'ANNs'), ('expert', 'expert'), ('recognizing', 'recognizing'), ('patterns', 'pattern'), (',', ','), ('also', 'also'), ('trained', 'trained'), ('generate', 'generate'), ('output', 'output'), ('something', 'something'), ('unusual', 'unusual'), ('occurs', 'occurs'), ('misfits', 'misfit'), ('pattern', 'pattern'), ('.', '.')]

