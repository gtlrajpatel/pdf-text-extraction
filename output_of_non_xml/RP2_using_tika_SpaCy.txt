				 *** Text Processing using Spacy *** 


============================ Sentence 1 =============================

Demystifying data science White paper | OpenText   WHITE PAPERWHITE PAPER  Demystifying data science How organizations can benefit from artificial intelligence and  advanced analytics    2/14Demystifying data science   Contents 


>> Tokens are: 
[Demystifying, data, science, White, paper, |, OpenText,   , WHITE, PAPERWHITE, PAPER,  , Demystifying, data, science, organizations, benefit, artificial, intelligence,  , advanced, analytics,    , 2/14Demystifying, data, science,   , Contents] 

>> PoS Tags are: 
[('Demystifying', 'VERB'), ('data', 'NOUN'), ('science', 'NOUN'), ('White', 'PROPN'), ('paper', 'NOUN'), ('|', 'NOUN'), ('OpenText', 'PROPN'), ('  ', 'SPACE'), ('WHITE', 'PROPN'), ('PAPERWHITE', 'PROPN'), ('PAPER', 'NOUN'), (' ', 'SPACE'), ('Demystifying', 'VERB'), ('data', 'NOUN'), ('science', 'NOUN'), ('organizations', 'NOUN'), ('benefit', 'VERB'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), (' ', 'SPACE'), ('advanced', 'ADJ'), ('analytics', 'NOUN'), ('   ', 'SPACE'), ('2/14Demystifying', 'NUM'), ('data', 'NOUN'), ('science', 'NOUN'), ('  ', 'SPACE'), ('Contents', 'NOUN')] 

>> Dependency Tags are: 
[('Demystifying', 'ROOT'), ('data', 'compound'), ('science', 'dobj'), ('White', 'compound'), ('paper', 'dobj'), ('|', 'npadvmod'), ('OpenText', 'punct'), ('  ', 'appos'), ('WHITE', 'compound'), ('PAPERWHITE', 'compound'), ('PAPER', 'appos'), (' ', 'appos'), ('Demystifying', 'conj'), ('data', 'compound'), ('science', 'dobj'), ('organizations', 'nsubj'), ('benefit', 'ccomp'), ('artificial', 'amod'), ('intelligence', 'pobj'), (' ', 'nmod'), ('advanced', 'amod'), ('analytics', 'conj'), ('   ', 'conj'), ('2/14Demystifying', 'compound'), ('data', 'compound'), ('science', 'dobj'), ('  ', 'dobj'), ('Contents', 'dobj')]

>> Bigrams: 
[[Demystifying, data], [data, science], [science, White], [White, paper], [paper, |], [|, OpenText], [OpenText,   ], [  , WHITE], [WHITE, PAPERWHITE], [PAPERWHITE, PAPER], [PAPER,  ], [ , Demystifying], [Demystifying, data], [data, science], [science, organizations], [organizations, benefit], [benefit, artificial], [artificial, intelligence], [intelligence,  ], [ , advanced], [advanced, analytics], [analytics,    ], [   , 2/14Demystifying], [2/14Demystifying, data], [data, science], [science,   ], [  , Contents]]

>> Trigrams: 
[[Demystifying, data, science], [data, science, White], [science, White, paper], [White, paper, |], [paper, |, OpenText], [|, OpenText,   ], [OpenText,   , WHITE], [  , WHITE, PAPERWHITE], [WHITE, PAPERWHITE, PAPER], [PAPERWHITE, PAPER,  ], [PAPER,  , Demystifying], [ , Demystifying, data], [Demystifying, data, science], [data, science, organizations], [science, organizations, benefit], [organizations, benefit, artificial], [benefit, artificial, intelligence], [artificial, intelligence,  ], [intelligence,  , advanced], [ , advanced, analytics], [advanced, analytics,    ], [analytics,    , 2/14Demystifying], [   , 2/14Demystifying, data], [2/14Demystifying, data, science], [data, science,   ], [science,   , Contents]]

>> Noun Phrases are: 
[data science, White paper, WHITE PAPERWHITE PAPER, data science, organizations, artificial intelligence,  advanced analytics, 2/14Demystifying data science, Contents]

>> Named Entities are: 
[('White', 'PERSON'), ('WHITE PAPERWHITE PAPER', 'ORG'), ('Contents', 'ORG')]


============================ Sentence 2 =============================

What is artificial intelligence and machine learning? 


>> Tokens are: 
[artificial, intelligence, machine, learning, ?] 

>> PoS Tags are: 
[('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('artificial', 'amod'), ('intelligence', 'attr'), ('machine', 'compound'), ('learning', 'conj'), ('?', 'punct')]

>> Bigrams: 
[[artificial, intelligence], [intelligence, machine], [machine, learning], [learning, ?]]

>> Trigrams: 
[[artificial, intelligence, machine], [intelligence, machine, learning], [machine, learning, ?]]

>> Noun Phrases are: 
[What, artificial intelligence, machine learning]

>> Named Entities are: 
[]


============================ Sentence 3 =============================

4   How can an organization derive business value from AI and analytics? 


>> Tokens are: 
[4,   , organization, derive, business, value, AI, analytics, ?] 

>> PoS Tags are: 
[('4', 'NUM'), ('  ', 'SPACE'), ('organization', 'NOUN'), ('derive', 'VERB'), ('business', 'NOUN'), ('value', 'NOUN'), ('AI', 'PROPN'), ('analytics', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('4', 'nummod'), ('  ', 'ROOT'), ('organization', 'nsubj'), ('derive', 'relcl'), ('business', 'compound'), ('value', 'dobj'), ('AI', 'pobj'), ('analytics', 'conj'), ('?', 'punct')]

>> Bigrams: 
[[4,   ], [  , organization], [organization, derive], [derive, business], [business, value], [value, AI], [AI, analytics], [analytics, ?]]

>> Trigrams: 
[[4,   , organization], [  , organization, derive], [organization, derive, business], [derive, business, value], [business, value, AI], [value, AI, analytics], [AI, analytics, ?]]

>> Noun Phrases are: 
[an organization, business value, AI, analytics]

>> Named Entities are: 
[('4', 'CARDINAL'), ('AI', 'ORG')]


============================ Sentence 4 =============================

 6   


>> Tokens are: 
[ , 6,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('6', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('6', 'nummod'), (' ', 'appos')]

>> Bigrams: 
[[ , 6], [6,  ]]

>> Trigrams: 
[[ , 6,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('6', 'CARDINAL')]


============================ Sentence 5 =============================

What are the requirements for adopting AI? 


>> Tokens are: 
[requirements, adopting, AI, ?] 

>> PoS Tags are: 
[('requirements', 'NOUN'), ('adopting', 'VERB'), ('AI', 'PROPN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('requirements', 'nsubj'), ('adopting', 'pcomp'), ('AI', 'dobj'), ('?', 'punct')]

>> Bigrams: 
[[requirements, adopting], [adopting, AI], [AI, ?]]

>> Trigrams: 
[[requirements, adopting, AI], [adopting, AI, ?]]

>> Noun Phrases are: 
[What, the requirements, AI]

>> Named Entities are: 
[('AI', 'ORG')]


============================ Sentence 6 =============================

7  How can data science, artificial intelligence  and analytics transform business processes? 


>> Tokens are: 
[7,  , data, science, ,, artificial, intelligence,  , analytics, transform, business, processes, ?] 

>> PoS Tags are: 
[('7', 'NUM'), (' ', 'SPACE'), ('data', 'VERB'), ('science', 'NOUN'), (',', 'PUNCT'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), (' ', 'SPACE'), ('analytics', 'NOUN'), ('transform', 'VERB'), ('business', 'NOUN'), ('processes', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('7', 'nummod'), (' ', 'nsubj'), ('data', 'relcl'), ('science', 'dobj'), (',', 'punct'), ('artificial', 'amod'), ('intelligence', 'compound'), (' ', 'conj'), ('analytics', 'conj'), ('transform', 'ROOT'), ('business', 'compound'), ('processes', 'dobj'), ('?', 'punct')]

>> Bigrams: 
[[7,  ], [ , data], [data, science], [science, ,], [,, artificial], [artificial, intelligence], [intelligence,  ], [ , analytics], [analytics, transform], [transform, business], [business, processes], [processes, ?]]

>> Trigrams: 
[[7,  , data], [ , data, science], [data, science, ,], [science, ,, artificial], [,, artificial, intelligence], [artificial, intelligence,  ], [intelligence,  , analytics], [ , analytics, transform], [analytics, transform, business], [transform, business, processes], [business, processes, ?]]

>> Noun Phrases are: 
[science, analytics, business processes]

>> Named Entities are: 
[]


============================ Sentence 7 =============================

9  Common techniques and methodologies 10  Machine learning 10   


>> Tokens are: 
[9,  , Common, techniques, methodologies, 10,  , Machine, learning, 10,  ] 

>> PoS Tags are: 
[('9', 'NUM'), (' ', 'SPACE'), ('Common', 'ADJ'), ('techniques', 'NOUN'), ('methodologies', 'NOUN'), ('10', 'NUM'), (' ', 'SPACE'), ('Machine', 'NOUN'), ('learning', 'VERB'), ('10', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('9', 'nummod'), (' ', 'nummod'), ('Common', 'amod'), ('techniques', 'dobj'), ('methodologies', 'conj'), ('10', 'nummod'), (' ', 'compound'), ('Machine', 'ROOT'), ('learning', 'acl'), ('10', 'nummod'), (' ', 'punct')]

>> Bigrams: 
[[9,  ], [ , Common], [Common, techniques], [techniques, methodologies], [methodologies, 10], [10,  ], [ , Machine], [Machine, learning], [learning, 10], [10,  ]]

>> Trigrams: 
[[9,  , Common], [ , Common, techniques], [Common, techniques, methodologies], [techniques, methodologies, 10], [methodologies, 10,  ], [10,  , Machine], [ , Machine, learning], [Machine, learning, 10], [learning, 10,  ]]

>> Noun Phrases are: 
[Common techniques, methodologies]

>> Named Entities are: 
[('10', 'CARDINAL'), ('10', 'CARDINAL')]


============================ Sentence 8 =============================

Supervised learning 11   


>> Tokens are: 
[Supervised, learning, 11,  ] 

>> PoS Tags are: 
[('Supervised', 'ADJ'), ('learning', 'VERB'), ('11', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Supervised', 'amod'), ('learning', 'ROOT'), ('11', 'nummod'), (' ', 'punct')]

>> Bigrams: 
[[Supervised, learning], [learning, 11], [11,  ]]

>> Trigrams: 
[[Supervised, learning, 11], [learning, 11,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('11', 'CARDINAL')]


============================ Sentence 9 =============================

Unsupervised learning 12   


>> Tokens are: 
[Unsupervised, learning, 12,  ] 

>> PoS Tags are: 
[('Unsupervised', 'PROPN'), ('learning', 'VERB'), ('12', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Unsupervised', 'nsubj'), ('learning', 'ROOT'), ('12', 'nummod'), (' ', 'punct')]

>> Bigrams: 
[[Unsupervised, learning], [learning, 12], [12,  ]]

>> Trigrams: 
[[Unsupervised, learning, 12], [learning, 12,  ]]

>> Noun Phrases are: 
[Unsupervised]

>> Named Entities are: 
[('12', 'CARDINAL')]


============================ Sentence 10 =============================

Natural language processing 13   


>> Tokens are: 
[Natural, language, processing, 13,  ] 

>> PoS Tags are: 
[('Natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'VERB'), ('13', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Natural', 'amod'), ('language', 'compound'), ('processing', 'ROOT'), ('13', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[Natural, language], [language, processing], [processing, 13], [13,  ]]

>> Trigrams: 
[[Natural, language, processing], [language, processing, 13], [processing, 13,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('13', 'CARDINAL')]


============================ Sentence 11 =============================

Key questions to ask and how to define high value use-cases 13  Resources 14    3/14Demystifying data science   Summary 


>> Tokens are: 
[Key, questions, ask, define, high, value, use, -, cases, 13,  , Resources, 14,    , 3/14Demystifying, data, science,   , Summary] 

>> PoS Tags are: 
[('Key', 'ADJ'), ('questions', 'NOUN'), ('ask', 'VERB'), ('define', 'VERB'), ('high', 'ADJ'), ('value', 'NOUN'), ('use', 'NOUN'), ('-', 'PUNCT'), ('cases', 'NOUN'), ('13', 'NUM'), (' ', 'SPACE'), ('Resources', 'NOUN'), ('14', 'NUM'), ('   ', 'SPACE'), ('3/14Demystifying', 'ADJ'), ('data', 'NOUN'), ('science', 'NOUN'), ('  ', 'SPACE'), ('Summary', 'PROPN')] 

>> Dependency Tags are: 
[('Key', 'amod'), ('questions', 'ROOT'), ('ask', 'acl'), ('define', 'conj'), ('high', 'amod'), ('value', 'nmod'), ('use', 'compound'), ('-', 'punct'), ('cases', 'dobj'), ('13', 'nummod'), (' ', 'appos'), ('Resources', 'appos'), ('14', 'nummod'), ('   ', 'nummod'), ('3/14Demystifying', 'amod'), ('data', 'compound'), ('science', 'appos'), ('  ', 'appos'), ('Summary', 'npadvmod')]

>> Bigrams: 
[[Key, questions], [questions, ask], [ask, define], [define, high], [high, value], [value, use], [use, -], [-, cases], [cases, 13], [13,  ], [ , Resources], [Resources, 14], [14,    ], [   , 3/14Demystifying], [3/14Demystifying, data], [data, science], [science,   ], [  , Summary]]

>> Trigrams: 
[[Key, questions, ask], [questions, ask, define], [ask, define, high], [define, high, value], [high, value, use], [value, use, -], [use, -, cases], [-, cases, 13], [cases, 13,  ], [13,  , Resources], [ , Resources, 14], [Resources, 14,    ], [14,    , 3/14Demystifying], [   , 3/14Demystifying, data], [3/14Demystifying, data, science], [data, science,   ], [science,   , Summary]]

>> Noun Phrases are: 
[Key questions, high value use-cases, Resources, 14    3/14Demystifying data science]

>> Named Entities are: 
[('13', 'CARDINAL'), ('Resources', 'PERSON'), ('14', 'CARDINAL')]


============================ Sentence 12 =============================

By 2020, Forbes estimates that 85 percent of customer interactions will be  managed without a human.1 While many of us use AI technology, such as Alexa and  Siri, as part of our daily lives, we may not be aware of its greater uses. 


>> Tokens are: 
[2020, ,, Forbes, estimates, 85, percent, customer, interactions,  , managed, human.1, use, AI, technology, ,, Alexa,  , Siri, ,, daily, lives, ,, aware, greater, uses, .] 

>> PoS Tags are: 
[('2020', 'NUM'), (',', 'PUNCT'), ('Forbes', 'PROPN'), ('estimates', 'VERB'), ('85', 'NUM'), ('percent', 'NOUN'), ('customer', 'NOUN'), ('interactions', 'NOUN'), (' ', 'SPACE'), ('managed', 'VERB'), ('human.1', 'NOUN'), ('use', 'VERB'), ('AI', 'PROPN'), ('technology', 'NOUN'), (',', 'PUNCT'), ('Alexa', 'PROPN'), (' ', 'SPACE'), ('Siri', 'PROPN'), (',', 'PUNCT'), ('daily', 'ADJ'), ('lives', 'NOUN'), (',', 'PUNCT'), ('aware', 'ADJ'), ('greater', 'ADJ'), ('uses', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('2020', 'pobj'), (',', 'punct'), ('Forbes', 'nsubj'), ('estimates', 'ROOT'), ('85', 'nummod'), ('percent', 'nsubj'), ('customer', 'compound'), ('interactions', 'pobj'), (' ', 'dep'), ('managed', 'ccomp'), ('human.1', 'pobj'), ('use', 'advcl'), ('AI', 'compound'), ('technology', 'dobj'), (',', 'punct'), ('Alexa', 'pobj'), (' ', 'compound'), ('Siri', 'conj'), (',', 'punct'), ('daily', 'amod'), ('lives', 'pobj'), (',', 'punct'), ('aware', 'acomp'), ('greater', 'amod'), ('uses', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[2020, ,], [,, Forbes], [Forbes, estimates], [estimates, 85], [85, percent], [percent, customer], [customer, interactions], [interactions,  ], [ , managed], [managed, human.1], [human.1, use], [use, AI], [AI, technology], [technology, ,], [,, Alexa], [Alexa,  ], [ , Siri], [Siri, ,], [,, daily], [daily, lives], [lives, ,], [,, aware], [aware, greater], [greater, uses], [uses, .]]

>> Trigrams: 
[[2020, ,, Forbes], [,, Forbes, estimates], [Forbes, estimates, 85], [estimates, 85, percent], [85, percent, customer], [percent, customer, interactions], [customer, interactions,  ], [interactions,  , managed], [ , managed, human.1], [managed, human.1, use], [human.1, use, AI], [use, AI, technology], [AI, technology, ,], [technology, ,, Alexa], [,, Alexa,  ], [Alexa,  , Siri], [ , Siri, ,], [Siri, ,, daily], [,, daily, lives], [daily, lives, ,], [lives, ,, aware], [,, aware, greater], [aware, greater, uses], [greater, uses, .]]

>> Noun Phrases are: 
[Forbes, 85 percent, customer interactions, a human.1, us, AI technology, Alexa,  Siri, part, our daily lives, we, its greater uses]

>> Named Entities are: 
[('2020', 'DATE'), ('Forbes', 'ORG'), ('85 percent', 'PERCENT'), ('AI', 'ORG'), ('Alexa', 'ORG')]


============================ Sentence 13 =============================

In fact, with  machine learning applied, AI can help teach computers, target ads and personalize  content for consumers to ensure better and more informed business decisions. 


>> Tokens are: 
[fact, ,,  , machine, learning, applied, ,, AI, help, teach, computers, ,, target, ads, personalize,  , content, consumers, ensure, better, informed, business, decisions, .] 

>> PoS Tags are: 
[('fact', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('applied', 'VERB'), (',', 'PUNCT'), ('AI', 'PROPN'), ('help', 'VERB'), ('teach', 'VERB'), ('computers', 'NOUN'), (',', 'PUNCT'), ('target', 'NOUN'), ('ads', 'NOUN'), ('personalize', 'VERB'), (' ', 'SPACE'), ('content', 'NOUN'), ('consumers', 'NOUN'), ('ensure', 'VERB'), ('better', 'ADJ'), ('informed', 'ADJ'), ('business', 'NOUN'), ('decisions', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('fact', 'pobj'), (',', 'punct'), (' ', 'pobj'), ('machine', 'compound'), ('learning', 'nsubj'), ('applied', 'pcomp'), (',', 'punct'), ('AI', 'nsubj'), ('help', 'ROOT'), ('teach', 'xcomp'), ('computers', 'dobj'), (',', 'punct'), ('target', 'compound'), ('ads', 'conj'), ('personalize', 'conj'), (' ', 'compound'), ('content', 'dobj'), ('consumers', 'nsubj'), ('ensure', 'advcl'), ('better', 'amod'), ('informed', 'conj'), ('business', 'compound'), ('decisions', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[fact, ,], [,,  ], [ , machine], [machine, learning], [learning, applied], [applied, ,], [,, AI], [AI, help], [help, teach], [teach, computers], [computers, ,], [,, target], [target, ads], [ads, personalize], [personalize,  ], [ , content], [content, consumers], [consumers, ensure], [ensure, better], [better, informed], [informed, business], [business, decisions], [decisions, .]]

>> Trigrams: 
[[fact, ,,  ], [,,  , machine], [ , machine, learning], [machine, learning, applied], [learning, applied, ,], [applied, ,, AI], [,, AI, help], [AI, help, teach], [help, teach, computers], [teach, computers, ,], [computers, ,, target], [,, target, ads], [target, ads, personalize], [ads, personalize,  ], [personalize,  , content], [ , content, consumers], [content, consumers, ensure], [consumers, ensure, better], [ensure, better, informed], [better, informed, business], [informed, business, decisions], [business, decisions, .]]

>> Noun Phrases are: 
[fact, machine learning, AI, computers, target ads,  content, consumers, better and more informed business decisions]

>> Named Entities are: 
[('AI', 'ORG')]


============================ Sentence 14 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 15 =============================

This paper will clarify some key definitions around artificial intelligence and  machine learning. 


>> Tokens are: 
[paper, clarify, key, definitions, artificial, intelligence,  , machine, learning, .] 

>> PoS Tags are: 
[('paper', 'NOUN'), ('clarify', 'VERB'), ('key', 'ADJ'), ('definitions', 'NOUN'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), (' ', 'SPACE'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('paper', 'nsubj'), ('clarify', 'ROOT'), ('key', 'amod'), ('definitions', 'dobj'), ('artificial', 'amod'), ('intelligence', 'pobj'), (' ', 'compound'), ('machine', 'compound'), ('learning', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[paper, clarify], [clarify, key], [key, definitions], [definitions, artificial], [artificial, intelligence], [intelligence,  ], [ , machine], [machine, learning], [learning, .]]

>> Trigrams: 
[[paper, clarify, key], [clarify, key, definitions], [key, definitions, artificial], [definitions, artificial, intelligence], [artificial, intelligence,  ], [intelligence,  , machine], [ , machine, learning], [machine, learning, .]]

>> Noun Phrases are: 
[This paper, some key definitions, artificial intelligence,  machine learning]

>> Named Entities are: 
[]


============================ Sentence 16 =============================

It will also simplify some common techniques in machine learning,  such as supervised learning, natural language processing and classification, and  identify the types of business questions these techniques can answer. 


>> Tokens are: 
[simplify, common, techniques, machine, learning, ,,  , supervised, learning, ,, natural, language, processing, classification, ,,  , identify, types, business, questions, techniques, answer, .] 

>> PoS Tags are: 
[('simplify', 'VERB'), ('common', 'ADJ'), ('techniques', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('supervised', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), ('classification', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('identify', 'VERB'), ('types', 'NOUN'), ('business', 'NOUN'), ('questions', 'NOUN'), ('techniques', 'NOUN'), ('answer', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('simplify', 'ROOT'), ('common', 'amod'), ('techniques', 'dobj'), ('machine', 'compound'), ('learning', 'pobj'), (',', 'punct'), (' ', 'conj'), ('supervised', 'amod'), ('learning', 'pobj'), (',', 'punct'), ('natural', 'amod'), ('language', 'compound'), ('processing', 'conj'), ('classification', 'conj'), (',', 'punct'), (' ', 'nsubj'), ('identify', 'conj'), ('types', 'dobj'), ('business', 'compound'), ('questions', 'pobj'), ('techniques', 'nsubj'), ('answer', 'relcl'), ('.', 'punct')]

>> Bigrams: 
[[simplify, common], [common, techniques], [techniques, machine], [machine, learning], [learning, ,], [,,  ], [ , supervised], [supervised, learning], [learning, ,], [,, natural], [natural, language], [language, processing], [processing, classification], [classification, ,], [,,  ], [ , identify], [identify, types], [types, business], [business, questions], [questions, techniques], [techniques, answer], [answer, .]]

>> Trigrams: 
[[simplify, common, techniques], [common, techniques, machine], [techniques, machine, learning], [machine, learning, ,], [learning, ,,  ], [,,  , supervised], [ , supervised, learning], [supervised, learning, ,], [learning, ,, natural], [,, natural, language], [natural, language, processing], [language, processing, classification], [processing, classification, ,], [classification, ,,  ], [,,  , identify], [ , identify, types], [identify, types, business], [types, business, questions], [business, questions, techniques], [questions, techniques, answer], [techniques, answer, .]]

>> Noun Phrases are: 
[It, some common techniques, machine learning, supervised learning, natural language processing, classification, the types, business questions, these techniques]

>> Named Entities are: 
[]


============================ Sentence 17 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 18 =============================

While understanding a small number of customers may not pose a challenge,  keeping pace as organizations grow and expand their customer base can be  difficult. 


>> Tokens are: 
[understanding, small, number, customers, pose, challenge, ,,  , keeping, pace, organizations, grow, expand, customer, base,  , difficult, .] 

>> PoS Tags are: 
[('understanding', 'VERB'), ('small', 'ADJ'), ('number', 'NOUN'), ('customers', 'NOUN'), ('pose', 'VERB'), ('challenge', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('keeping', 'VERB'), ('pace', 'NOUN'), ('organizations', 'NOUN'), ('grow', 'VERB'), ('expand', 'VERB'), ('customer', 'NOUN'), ('base', 'NOUN'), (' ', 'SPACE'), ('difficult', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('understanding', 'csubj'), ('small', 'amod'), ('number', 'dobj'), ('customers', 'pobj'), ('pose', 'ROOT'), ('challenge', 'dobj'), (',', 'punct'), (' ', 'nsubj'), ('keeping', 'advcl'), ('pace', 'dobj'), ('organizations', 'nsubj'), ('grow', 'advcl'), ('expand', 'conj'), ('customer', 'compound'), ('base', 'dobj'), (' ', 'attr'), ('difficult', 'amod'), ('.', 'punct')]

>> Bigrams: 
[[understanding, small], [small, number], [number, customers], [customers, pose], [pose, challenge], [challenge, ,], [,,  ], [ , keeping], [keeping, pace], [pace, organizations], [organizations, grow], [grow, expand], [expand, customer], [customer, base], [base,  ], [ , difficult], [difficult, .]]

>> Trigrams: 
[[understanding, small, number], [small, number, customers], [number, customers, pose], [customers, pose, challenge], [pose, challenge, ,], [challenge, ,,  ], [,,  , keeping], [ , keeping, pace], [keeping, pace, organizations], [pace, organizations, grow], [organizations, grow, expand], [grow, expand, customer], [expand, customer, base], [customer, base,  ], [base,  , difficult], [ , difficult, .]]

>> Noun Phrases are: 
[a small number, customers, a challenge, pace, organizations, their customer base]

>> Named Entities are: 
[]


============================ Sentence 19 =============================

Data analytics can help reveal trends and metrics that would otherwise  be lost among the masses of information. 


>> Tokens are: 
[Data, analytics, help, reveal, trends, metrics,  , lost, masses, information, .] 

>> PoS Tags are: 
[('Data', 'NOUN'), ('analytics', 'NOUN'), ('help', 'VERB'), ('reveal', 'VERB'), ('trends', 'NOUN'), ('metrics', 'NOUN'), (' ', 'SPACE'), ('lost', 'VERB'), ('masses', 'NOUN'), ('information', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Data', 'compound'), ('analytics', 'nsubj'), ('help', 'ROOT'), ('reveal', 'xcomp'), ('trends', 'dobj'), ('metrics', 'conj'), (' ', 'nsubjpass'), ('lost', 'relcl'), ('masses', 'pobj'), ('information', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Data, analytics], [analytics, help], [help, reveal], [reveal, trends], [trends, metrics], [metrics,  ], [ , lost], [lost, masses], [masses, information], [information, .]]

>> Trigrams: 
[[Data, analytics, help], [analytics, help, reveal], [help, reveal, trends], [reveal, trends, metrics], [trends, metrics,  ], [metrics,  , lost], [ , lost, masses], [lost, masses, information], [masses, information, .]]

>> Noun Phrases are: 
[Data analytics, trends, metrics, the masses, information]

>> Named Entities are: 
[]


============================ Sentence 20 =============================

Organizations are now starting to  leverage descriptive, diagnostic, predictive and prescriptive analytics to address  the growing needs and demands of their customer base. 


>> Tokens are: 
[Organizations, starting,  , leverage, descriptive, ,, diagnostic, ,, predictive, prescriptive, analytics, address,  , growing, needs, demands, customer, base, .] 

>> PoS Tags are: 
[('Organizations', 'NOUN'), ('starting', 'VERB'), (' ', 'SPACE'), ('leverage', 'NOUN'), ('descriptive', 'ADJ'), (',', 'PUNCT'), ('diagnostic', 'ADJ'), (',', 'PUNCT'), ('predictive', 'ADJ'), ('prescriptive', 'ADJ'), ('analytics', 'NOUN'), ('address', 'VERB'), (' ', 'SPACE'), ('growing', 'VERB'), ('needs', 'NOUN'), ('demands', 'NOUN'), ('customer', 'NOUN'), ('base', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Organizations', 'nsubj'), ('starting', 'ROOT'), (' ', 'pobj'), ('leverage', 'appos'), ('descriptive', 'amod'), (',', 'punct'), ('diagnostic', 'amod'), (',', 'punct'), ('predictive', 'conj'), ('prescriptive', 'conj'), ('analytics', 'dobj'), ('address', 'relcl'), (' ', 'dobj'), ('growing', 'amod'), ('needs', 'dobj'), ('demands', 'conj'), ('customer', 'compound'), ('base', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Organizations, starting], [starting,  ], [ , leverage], [leverage, descriptive], [descriptive, ,], [,, diagnostic], [diagnostic, ,], [,, predictive], [predictive, prescriptive], [prescriptive, analytics], [analytics, address], [address,  ], [ , growing], [growing, needs], [needs, demands], [demands, customer], [customer, base], [base, .]]

>> Trigrams: 
[[Organizations, starting,  ], [starting,  , leverage], [ , leverage, descriptive], [leverage, descriptive, ,], [descriptive, ,, diagnostic], [,, diagnostic, ,], [diagnostic, ,, predictive], [,, predictive, prescriptive], [predictive, prescriptive, analytics], [prescriptive, analytics, address], [analytics, address,  ], [address,  , growing], [ , growing, needs], [growing, needs, demands], [needs, demands, customer], [demands, customer, base], [customer, base, .]]

>> Noun Phrases are: 
[Organizations, leverage, descriptive, diagnostic, predictive and prescriptive analytics, the growing needs, demands, their customer base]

>> Named Entities are: 
[]


============================ Sentence 21 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 22 =============================

The promise of artificial intelligence is exciting but before jumping in organizations  need the right data literacy, infrastructure and expertise. 


>> Tokens are: 
[promise, artificial, intelligence, exciting, jumping, organizations,  , need, right, data, literacy, ,, infrastructure, expertise, .] 

>> PoS Tags are: 
[('promise', 'NOUN'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('exciting', 'ADJ'), ('jumping', 'VERB'), ('organizations', 'NOUN'), (' ', 'SPACE'), ('need', 'VERB'), ('right', 'ADJ'), ('data', 'NOUN'), ('literacy', 'NOUN'), (',', 'PUNCT'), ('infrastructure', 'NOUN'), ('expertise', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('promise', 'nsubj'), ('artificial', 'amod'), ('intelligence', 'pobj'), ('exciting', 'acomp'), ('jumping', 'pcomp'), ('organizations', 'pobj'), (' ', 'nsubj'), ('need', 'conj'), ('right', 'amod'), ('data', 'compound'), ('literacy', 'dobj'), (',', 'punct'), ('infrastructure', 'conj'), ('expertise', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[promise, artificial], [artificial, intelligence], [intelligence, exciting], [exciting, jumping], [jumping, organizations], [organizations,  ], [ , need], [need, right], [right, data], [data, literacy], [literacy, ,], [,, infrastructure], [infrastructure, expertise], [expertise, .]]

>> Trigrams: 
[[promise, artificial, intelligence], [artificial, intelligence, exciting], [intelligence, exciting, jumping], [exciting, jumping, organizations], [jumping, organizations,  ], [organizations,  , need], [ , need, right], [need, right, data], [right, data, literacy], [data, literacy, ,], [literacy, ,, infrastructure], [,, infrastructure, expertise], [infrastructure, expertise, .]]

>> Noun Phrases are: 
[The promise, artificial intelligence, organizations, the right data literacy, infrastructure, expertise]

>> Named Entities are: 
[]


============================ Sentence 23 =============================

This paper will also cover  key competencies organizations need to get started with AI and how to progress  from data collection, exploration and analytics to artificial intelligence. 


>> Tokens are: 
[paper, cover,  , key, competencies, organizations, need, started, AI, progress,  , data, collection, ,, exploration, analytics, artificial, intelligence, .] 

>> PoS Tags are: 
[('paper', 'NOUN'), ('cover', 'VERB'), (' ', 'SPACE'), ('key', 'ADJ'), ('competencies', 'NOUN'), ('organizations', 'NOUN'), ('need', 'VERB'), ('started', 'VERB'), ('AI', 'PROPN'), ('progress', 'VERB'), (' ', 'SPACE'), ('data', 'NOUN'), ('collection', 'NOUN'), (',', 'PUNCT'), ('exploration', 'NOUN'), ('analytics', 'NOUN'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('paper', 'nsubj'), ('cover', 'ROOT'), (' ', 'dobj'), ('key', 'amod'), ('competencies', 'compound'), ('organizations', 'nsubj'), ('need', 'ccomp'), ('started', 'xcomp'), ('AI', 'pobj'), ('progress', 'xcomp'), (' ', 'dobj'), ('data', 'compound'), ('collection', 'pobj'), (',', 'punct'), ('exploration', 'conj'), ('analytics', 'conj'), ('artificial', 'amod'), ('intelligence', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[paper, cover], [cover,  ], [ , key], [key, competencies], [competencies, organizations], [organizations, need], [need, started], [started, AI], [AI, progress], [progress,  ], [ , data], [data, collection], [collection, ,], [,, exploration], [exploration, analytics], [analytics, artificial], [artificial, intelligence], [intelligence, .]]

>> Trigrams: 
[[paper, cover,  ], [cover,  , key], [ , key, competencies], [key, competencies, organizations], [competencies, organizations, need], [organizations, need, started], [need, started, AI], [started, AI, progress], [AI, progress,  ], [progress,  , data], [ , data, collection], [data, collection, ,], [collection, ,, exploration], [,, exploration, analytics], [exploration, analytics, artificial], [analytics, artificial, intelligence], [artificial, intelligence, .]]

>> Noun Phrases are: 
[This paper, key competencies organizations, AI, data collection, exploration, analytics, artificial intelligence]

>> Named Entities are: 
[('AI', 'ORG')]


============================ Sentence 24 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 25 =============================

Finally, this paper will help define meaningful and high value use-cases with  a structured framework to gather and align business, technology and data  requirements for a successful artificial intelligence implementation. 


>> Tokens are: 
[Finally, ,, paper, help, define, meaningful, high, value, use, -, cases,  , structured, framework, gather, align, business, ,, technology, data,  , requirements, successful, artificial, intelligence, implementation, .] 

>> PoS Tags are: 
[('Finally', 'ADV'), (',', 'PUNCT'), ('paper', 'NOUN'), ('help', 'VERB'), ('define', 'VERB'), ('meaningful', 'ADJ'), ('high', 'ADJ'), ('value', 'NOUN'), ('use', 'NOUN'), ('-', 'PUNCT'), ('cases', 'NOUN'), (' ', 'SPACE'), ('structured', 'ADJ'), ('framework', 'NOUN'), ('gather', 'VERB'), ('align', 'ADJ'), ('business', 'NOUN'), (',', 'PUNCT'), ('technology', 'NOUN'), ('data', 'NOUN'), (' ', 'SPACE'), ('requirements', 'NOUN'), ('successful', 'ADJ'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('implementation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Finally', 'advmod'), (',', 'punct'), ('paper', 'nsubj'), ('help', 'ROOT'), ('define', 'xcomp'), ('meaningful', 'amod'), ('high', 'conj'), ('value', 'compound'), ('use', 'compound'), ('-', 'punct'), ('cases', 'dobj'), (' ', 'pobj'), ('structured', 'amod'), ('framework', 'dobj'), ('gather', 'relcl'), ('align', 'amod'), ('business', 'conj'), (',', 'punct'), ('technology', 'conj'), ('data', 'compound'), (' ', 'conj'), ('requirements', 'dobj'), ('successful', 'amod'), ('artificial', 'amod'), ('intelligence', 'compound'), ('implementation', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Finally, ,], [,, paper], [paper, help], [help, define], [define, meaningful], [meaningful, high], [high, value], [value, use], [use, -], [-, cases], [cases,  ], [ , structured], [structured, framework], [framework, gather], [gather, align], [align, business], [business, ,], [,, technology], [technology, data], [data,  ], [ , requirements], [requirements, successful], [successful, artificial], [artificial, intelligence], [intelligence, implementation], [implementation, .]]

>> Trigrams: 
[[Finally, ,, paper], [,, paper, help], [paper, help, define], [help, define, meaningful], [define, meaningful, high], [meaningful, high, value], [high, value, use], [value, use, -], [use, -, cases], [-, cases,  ], [cases,  , structured], [ , structured, framework], [structured, framework, gather], [framework, gather, align], [gather, align, business], [align, business, ,], [business, ,, technology], [,, technology, data], [technology, data,  ], [data,  , requirements], [ , requirements, successful], [requirements, successful, artificial], [successful, artificial, intelligence], [artificial, intelligence, implementation], [intelligence, implementation, .]]

>> Noun Phrases are: 
[this paper, meaningful and high value use-cases, a structured framework, requirements, a successful artificial intelligence implementation]

>> Named Entities are: 
[]


============================ Sentence 26 =============================

   4/14Demystifying data science   What is artificial intelligence and machine learning? 


>> Tokens are: 
[   , 4/14Demystifying, data, science,   , artificial, intelligence, machine, learning, ?] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('4/14Demystifying', 'NUM'), ('data', 'NOUN'), ('science', 'NOUN'), ('  ', 'SPACE'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('   ', 'nummod'), ('4/14Demystifying', 'compound'), ('data', 'compound'), ('science', 'compound'), ('  ', 'dep'), ('artificial', 'amod'), ('intelligence', 'attr'), ('machine', 'compound'), ('learning', 'conj'), ('?', 'punct')]

>> Bigrams: 
[[   , 4/14Demystifying], [4/14Demystifying, data], [data, science], [science,   ], [  , artificial], [artificial, intelligence], [intelligence, machine], [machine, learning], [learning, ?]]

>> Trigrams: 
[[   , 4/14Demystifying, data], [4/14Demystifying, data, science], [data, science,   ], [science,   , artificial], [  , artificial, intelligence], [artificial, intelligence, machine], [intelligence, machine, learning], [machine, learning, ?]]

>> Noun Phrases are: 
[What, artificial intelligence, machine learning]

>> Named Entities are: 
[]


============================ Sentence 27 =============================

According to Gartner, artificial intelligence will generate $2.9 trillion USD in  business value and recover 6.2 billion hours of worker productivity by 2021.2   


>> Tokens are: 
[According, Gartner, ,, artificial, intelligence, generate, $, 2.9, trillion, USD,  , business, value, recover, 6.2, billion, hours, worker, productivity, 2021.2,  ] 

>> PoS Tags are: 
[('According', 'VERB'), ('Gartner', 'PROPN'), (',', 'PUNCT'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('generate', 'VERB'), ('$', 'SYM'), ('2.9', 'NUM'), ('trillion', 'NUM'), ('USD', 'NOUN'), (' ', 'SPACE'), ('business', 'NOUN'), ('value', 'NOUN'), ('recover', 'VERB'), ('6.2', 'NUM'), ('billion', 'NUM'), ('hours', 'NOUN'), ('worker', 'NOUN'), ('productivity', 'NOUN'), ('2021.2', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('According', 'prep'), ('Gartner', 'pobj'), (',', 'punct'), ('artificial', 'amod'), ('intelligence', 'nsubj'), ('generate', 'ROOT'), ('$', 'quantmod'), ('2.9', 'compound'), ('trillion', 'nummod'), ('USD', 'dobj'), (' ', 'pobj'), ('business', 'compound'), ('value', 'pobj'), ('recover', 'conj'), ('6.2', 'compound'), ('billion', 'nummod'), ('hours', 'dobj'), ('worker', 'compound'), ('productivity', 'pobj'), ('2021.2', 'pobj'), (' ', 'dobj')]

>> Bigrams: 
[[According, Gartner], [Gartner, ,], [,, artificial], [artificial, intelligence], [intelligence, generate], [generate, $], [$, 2.9], [2.9, trillion], [trillion, USD], [USD,  ], [ , business], [business, value], [value, recover], [recover, 6.2], [6.2, billion], [billion, hours], [hours, worker], [worker, productivity], [productivity, 2021.2], [2021.2,  ]]

>> Trigrams: 
[[According, Gartner, ,], [Gartner, ,, artificial], [,, artificial, intelligence], [artificial, intelligence, generate], [intelligence, generate, $], [generate, $, 2.9], [$, 2.9, trillion], [2.9, trillion, USD], [trillion, USD,  ], [USD,  , business], [ , business, value], [business, value, recover], [value, recover, 6.2], [recover, 6.2, billion], [6.2, billion, hours], [billion, hours, worker], [hours, worker, productivity], [worker, productivity, 2021.2], [productivity, 2021.2,  ]]

>> Noun Phrases are: 
[Gartner, artificial intelligence, $2.9 trillion USD, business value, 6.2 billion hours, worker productivity]

>> Named Entities are: 
[('Gartner', 'PERSON'), ('$2.9 trillion', 'MONEY'), ('6.2 billion hours', 'QUANTITY'), ('2021.2', 'CARDINAL')]


============================ Sentence 28 =============================

To realize the high growth potential and costs savings from analytics and AI  technology, we must demystify some key artificial intelligence, machine learning  and analytics concepts. 


>> Tokens are: 
[realize, high, growth, potential, costs, savings, analytics, AI,  , technology, ,, demystify, key, artificial, intelligence, ,, machine, learning,  , analytics, concepts, .] 

>> PoS Tags are: 
[('realize', 'VERB'), ('high', 'ADJ'), ('growth', 'NOUN'), ('potential', 'NOUN'), ('costs', 'VERB'), ('savings', 'NOUN'), ('analytics', 'NOUN'), ('AI', 'PROPN'), (' ', 'SPACE'), ('technology', 'NOUN'), (',', 'PUNCT'), ('demystify', 'VERB'), ('key', 'ADJ'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('learning', 'VERB'), (' ', 'SPACE'), ('analytics', 'NOUN'), ('concepts', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('realize', 'advcl'), ('high', 'amod'), ('growth', 'compound'), ('potential', 'dobj'), ('costs', 'conj'), ('savings', 'dobj'), ('analytics', 'pobj'), ('AI', 'nmod'), (' ', 'nummod'), ('technology', 'conj'), (',', 'punct'), ('demystify', 'ROOT'), ('key', 'amod'), ('artificial', 'amod'), ('intelligence', 'dobj'), (',', 'punct'), ('machine', 'compound'), ('learning', 'advcl'), (' ', 'nmod'), ('analytics', 'conj'), ('concepts', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[realize, high], [high, growth], [growth, potential], [potential, costs], [costs, savings], [savings, analytics], [analytics, AI], [AI,  ], [ , technology], [technology, ,], [,, demystify], [demystify, key], [key, artificial], [artificial, intelligence], [intelligence, ,], [,, machine], [machine, learning], [learning,  ], [ , analytics], [analytics, concepts], [concepts, .]]

>> Trigrams: 
[[realize, high, growth], [high, growth, potential], [growth, potential, costs], [potential, costs, savings], [costs, savings, analytics], [savings, analytics, AI], [analytics, AI,  ], [AI,  , technology], [ , technology, ,], [technology, ,, demystify], [,, demystify, key], [demystify, key, artificial], [key, artificial, intelligence], [artificial, intelligence, ,], [intelligence, ,, machine], [,, machine, learning], [machine, learning,  ], [learning,  , analytics], [ , analytics, concepts], [analytics, concepts, .]]

>> Noun Phrases are: 
[the high growth potential, savings, analytics, AI  technology, we, some key artificial intelligence,  and analytics concepts]

>> Named Entities are: 
[('AI', 'ORG')]


============================ Sentence 29 =============================

  Simply put, artificial intelligence systems automate and simplify tasks, such as  recognizing objects, making sense of speech, etc. 


>> Tokens are: 
[  , Simply, ,, artificial, intelligence, systems, automate, simplify, tasks, ,,  , recognizing, objects, ,, making, sense, speech, ,, etc, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Simply', 'ADV'), (',', 'PUNCT'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('systems', 'NOUN'), ('automate', 'NOUN'), ('simplify', 'VERB'), ('tasks', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('recognizing', 'VERB'), ('objects', 'NOUN'), (',', 'PUNCT'), ('making', 'VERB'), ('sense', 'NOUN'), ('speech', 'NOUN'), (',', 'PUNCT'), ('etc', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nsubj'), ('Simply', 'advmod'), (',', 'punct'), ('artificial', 'amod'), ('intelligence', 'compound'), ('systems', 'compound'), ('automate', 'dobj'), ('simplify', 'conj'), ('tasks', 'dobj'), (',', 'punct'), (' ', 'pobj'), ('recognizing', 'acl'), ('objects', 'dobj'), (',', 'punct'), ('making', 'advcl'), ('sense', 'dobj'), ('speech', 'pobj'), (',', 'punct'), ('etc', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[  , Simply], [Simply, ,], [,, artificial], [artificial, intelligence], [intelligence, systems], [systems, automate], [automate, simplify], [simplify, tasks], [tasks, ,], [,,  ], [ , recognizing], [recognizing, objects], [objects, ,], [,, making], [making, sense], [sense, speech], [speech, ,], [,, etc], [etc, .]]

>> Trigrams: 
[[  , Simply, ,], [Simply, ,, artificial], [,, artificial, intelligence], [artificial, intelligence, systems], [intelligence, systems, automate], [systems, automate, simplify], [automate, simplify, tasks], [simplify, tasks, ,], [tasks, ,,  ], [,,  , recognizing], [ , recognizing, objects], [recognizing, objects, ,], [objects, ,, making], [,, making, sense], [making, sense, speech], [sense, speech, ,], [speech, ,, etc], [,, etc, .]]

>> Noun Phrases are: 
[, artificial intelligence systems automate, tasks, objects, sense, speech]

>> Named Entities are: 
[]


============================ Sentence 30 =============================

But, how does that lead to  learning how to drive a car? 


>> Tokens are: 
[,, lead,  , learning, drive, car, ?] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('lead', 'VERB'), (' ', 'SPACE'), ('learning', 'VERB'), ('drive', 'VERB'), ('car', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('lead', 'ROOT'), (' ', 'pobj'), ('learning', 'advcl'), ('drive', 'xcomp'), ('car', 'dobj'), ('?', 'punct')]

>> Bigrams: 
[[,, lead], [lead,  ], [ , learning], [learning, drive], [drive, car], [car, ?]]

>> Trigrams: 
[[,, lead,  ], [lead,  , learning], [ , learning, drive], [learning, drive, car], [drive, car, ?]]

>> Noun Phrases are: 
[a car]

>> Named Entities are: 
[]


============================ Sentence 31 =============================

A key concept of AI technology is the difference  between learning and training. 


>> Tokens are: 
[key, concept, AI, technology, difference,  , learning, training, .] 

>> PoS Tags are: 
[('key', 'ADJ'), ('concept', 'NOUN'), ('AI', 'PROPN'), ('technology', 'NOUN'), ('difference', 'NOUN'), (' ', 'SPACE'), ('learning', 'VERB'), ('training', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('key', 'amod'), ('concept', 'nsubj'), ('AI', 'compound'), ('technology', 'pobj'), ('difference', 'attr'), (' ', 'appos'), ('learning', 'pobj'), ('training', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[key, concept], [concept, AI], [AI, technology], [technology, difference], [difference,  ], [ , learning], [learning, training], [training, .]]

>> Trigrams: 
[[key, concept, AI], [concept, AI, technology], [AI, technology, difference], [technology, difference,  ], [difference,  , learning], [ , learning, training], [learning, training, .]]

>> Noun Phrases are: 
[A key concept, AI technology, the difference, training]

>> Named Entities are: 
[('AI', 'ORG')]


============================ Sentence 32 =============================

Just as a human goes through the process of  driver training to become proficient, a computer learns from experience or,  more specifically, data. 


>> Tokens are: 
[human, goes, process,  , driver, training, proficient, ,, computer, learns, experience, ,,  , specifically, ,, data, .] 

>> PoS Tags are: 
[('human', 'NOUN'), ('goes', 'VERB'), ('process', 'NOUN'), (' ', 'SPACE'), ('driver', 'NOUN'), ('training', 'NOUN'), ('proficient', 'ADJ'), (',', 'PUNCT'), ('computer', 'NOUN'), ('learns', 'VERB'), ('experience', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('specifically', 'ADV'), (',', 'PUNCT'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('human', 'nsubj'), ('goes', 'advcl'), ('process', 'pobj'), (' ', 'pobj'), ('driver', 'compound'), ('training', 'pobj'), ('proficient', 'acomp'), (',', 'punct'), ('computer', 'nsubj'), ('learns', 'ROOT'), ('experience', 'pobj'), (',', 'punct'), (' ', 'dep'), ('specifically', 'advmod'), (',', 'punct'), ('data', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[human, goes], [goes, process], [process,  ], [ , driver], [driver, training], [training, proficient], [proficient, ,], [,, computer], [computer, learns], [learns, experience], [experience, ,], [,,  ], [ , specifically], [specifically, ,], [,, data], [data, .]]

>> Trigrams: 
[[human, goes, process], [goes, process,  ], [process,  , driver], [ , driver, training], [driver, training, proficient], [training, proficient, ,], [proficient, ,, computer], [,, computer, learns], [computer, learns, experience], [learns, experience, ,], [experience, ,,  ], [,,  , specifically], [ , specifically, ,], [specifically, ,, data], [,, data, .]]

>> Noun Phrases are: 
[a human, the process, driver training, a computer, experience,  more specifically, data]

>> Named Entities are: 
[]


============================ Sentence 33 =============================

Once the system has data on good driving practices and  the “rules of the road”, it becomes intelligent enough to make decisions in the  real world. 


>> Tokens are: 
[system, data, good, driving, practices,  , “, rules, road, ”, ,, intelligent, decisions,  , real, world, .] 

>> PoS Tags are: 
[('system', 'NOUN'), ('data', 'NOUN'), ('good', 'ADJ'), ('driving', 'NOUN'), ('practices', 'NOUN'), (' ', 'SPACE'), ('“', 'PUNCT'), ('rules', 'NOUN'), ('road', 'NOUN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('intelligent', 'ADJ'), ('decisions', 'NOUN'), (' ', 'SPACE'), ('real', 'ADJ'), ('world', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('system', 'nsubj'), ('data', 'dobj'), ('good', 'amod'), ('driving', 'compound'), ('practices', 'pobj'), (' ', 'conj'), ('“', 'punct'), ('rules', 'dobj'), ('road', 'pobj'), ('”', 'punct'), (',', 'punct'), ('intelligent', 'acomp'), ('decisions', 'dobj'), (' ', 'nmod'), ('real', 'amod'), ('world', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[system, data], [data, good], [good, driving], [driving, practices], [practices,  ], [ , “], [“, rules], [rules, road], [road, ”], [”, ,], [,, intelligent], [intelligent, decisions], [decisions,  ], [ , real], [real, world], [world, .]]

>> Trigrams: 
[[system, data, good], [data, good, driving], [good, driving, practices], [driving, practices,  ], [practices,  , “], [ , “, rules], [“, rules, road], [rules, road, ”], [road, ”, ,], [”, ,, intelligent], [,, intelligent, decisions], [intelligent, decisions,  ], [decisions,  , real], [ , real, world], [real, world, .]]

>> Noun Phrases are: 
[the system, data, good driving practices, the “rules, the road, it, decisions, the  real world]

>> Named Entities are: 
[]


============================ Sentence 34 =============================

While there are more complexities in the learning, management and  monitoring of such technology and solutions, this is the core of AI. 


>> Tokens are: 
[complexities, learning, ,, management,  , monitoring, technology, solutions, ,, core, AI, .] 

>> PoS Tags are: 
[('complexities', 'NOUN'), ('learning', 'NOUN'), (',', 'PUNCT'), ('management', 'NOUN'), (' ', 'SPACE'), ('monitoring', 'NOUN'), ('technology', 'NOUN'), ('solutions', 'NOUN'), (',', 'PUNCT'), ('core', 'NOUN'), ('AI', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('complexities', 'attr'), ('learning', 'pobj'), (',', 'punct'), ('management', 'conj'), (' ', 'conj'), ('monitoring', 'conj'), ('technology', 'pobj'), ('solutions', 'conj'), (',', 'punct'), ('core', 'attr'), ('AI', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[complexities, learning], [learning, ,], [,, management], [management,  ], [ , monitoring], [monitoring, technology], [technology, solutions], [solutions, ,], [,, core], [core, AI], [AI, .]]

>> Trigrams: 
[[complexities, learning, ,], [learning, ,, management], [,, management,  ], [management,  , monitoring], [ , monitoring, technology], [monitoring, technology, solutions], [technology, solutions, ,], [solutions, ,, core], [,, core, AI], [core, AI, .]]

>> Noun Phrases are: 
[more complexities, the learning, management, monitoring, such technology, solutions, the core, AI]

>> Named Entities are: 
[('AI', 'ORG')]


============================ Sentence 35 =============================

  Deep learning   


>> Tokens are: 
[  , Deep, learning,  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Deep', 'PROPN'), ('learning', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'dep'), ('Deep', 'amod'), ('learning', 'ROOT'), (' ', 'appos')]

>> Bigrams: 
[[  , Deep], [Deep, learning], [learning,  ]]

>> Trigrams: 
[[  , Deep, learning], [Deep, learning,  ]]

>> Noun Phrases are: 
[  Deep learning]

>> Named Entities are: 
[]


============================ Sentence 36 =============================

Popular and powerful set of machine learning techniques, which mimic the brain’s  neuron activities, called  neural networks. 


>> Tokens are: 
[Popular, powerful, set, machine, learning, techniques, ,, mimic, brain,  , neuron, activities, ,, called,  , neural, networks, .] 

>> PoS Tags are: 
[('Popular', 'ADJ'), ('powerful', 'ADJ'), ('set', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('techniques', 'NOUN'), (',', 'PUNCT'), ('mimic', 'VERB'), ('brain', 'NOUN'), (' ', 'SPACE'), ('neuron', 'NOUN'), ('activities', 'NOUN'), (',', 'PUNCT'), ('called', 'VERB'), (' ', 'SPACE'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Popular', 'nsubj'), ('powerful', 'amod'), ('set', 'conj'), ('machine', 'compound'), ('learning', 'compound'), ('techniques', 'pobj'), (',', 'punct'), ('mimic', 'relcl'), ('brain', 'nmod'), (' ', 'compound'), ('neuron', 'compound'), ('activities', 'dobj'), (',', 'punct'), ('called', 'ROOT'), (' ', 'dobj'), ('neural', 'amod'), ('networks', 'oprd'), ('.', 'punct')]

>> Bigrams: 
[[Popular, powerful], [powerful, set], [set, machine], [machine, learning], [learning, techniques], [techniques, ,], [,, mimic], [mimic, brain], [brain,  ], [ , neuron], [neuron, activities], [activities, ,], [,, called], [called,  ], [ , neural], [neural, networks], [networks, .]]

>> Trigrams: 
[[Popular, powerful, set], [powerful, set, machine], [set, machine, learning], [machine, learning, techniques], [learning, techniques, ,], [techniques, ,, mimic], [,, mimic, brain], [mimic, brain,  ], [brain,  , neuron], [ , neuron, activities], [neuron, activities, ,], [activities, ,, called], [,, called,  ], [called,  , neural], [ , neural, networks], [neural, networks, .]]

>> Noun Phrases are: 
[powerful set, machine learning techniques, the brain’s  neuron activities, neural networks]

>> Named Entities are: 
[]


============================ Sentence 37 =============================

 Machine learning  Field of AI that learns from historical data towards an end goal/outcome. 


>> Tokens are: 
[ , Machine, learning,  , Field, AI, learns, historical, data, end, goal, /, outcome, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Machine', 'NOUN'), ('learning', 'VERB'), (' ', 'SPACE'), ('Field', 'PROPN'), ('AI', 'PROPN'), ('learns', 'VERB'), ('historical', 'ADJ'), ('data', 'NOUN'), ('end', 'NOUN'), ('goal', 'NOUN'), ('/', 'SYM'), ('outcome', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('Machine', 'nsubj'), ('learning', 'ROOT'), (' ', 'compound'), ('Field', 'dobj'), ('AI', 'pobj'), ('learns', 'relcl'), ('historical', 'amod'), ('data', 'pobj'), ('end', 'compound'), ('goal', 'nmod'), ('/', 'punct'), ('outcome', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , Machine], [Machine, learning], [learning,  ], [ , Field], [Field, AI], [AI, learns], [learns, historical], [historical, data], [data, end], [end, goal], [goal, /], [/, outcome], [outcome, .]]

>> Trigrams: 
[[ , Machine, learning], [Machine, learning,  ], [learning,  , Field], [ , Field, AI], [Field, AI, learns], [AI, learns, historical], [learns, historical, data], [historical, data, end], [data, end, goal], [end, goal, /], [goal, /, outcome], [/, outcome, .]]

>> Noun Phrases are: 
[ Machine,  Field, AI, historical data, an end goal/outcome]

>> Named Entities are: 
[]


============================ Sentence 38 =============================

For  example, the customers likely to default on their home loan. 


>> Tokens are: 
[ , example, ,, customers, likely, default, home, loan, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('example', 'NOUN'), (',', 'PUNCT'), ('customers', 'NOUN'), ('likely', 'ADJ'), ('default', 'VERB'), ('home', 'NOUN'), ('loan', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'pobj'), ('example', 'pobj'), (',', 'punct'), ('customers', 'ROOT'), ('likely', 'amod'), ('default', 'xcomp'), ('home', 'compound'), ('loan', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , example], [example, ,], [,, customers], [customers, likely], [likely, default], [default, home], [home, loan], [loan, .]]

>> Trigrams: 
[[ , example, ,], [example, ,, customers], [,, customers, likely], [customers, likely, default], [likely, default, home], [default, home, loan], [home, loan, .]]

>> Noun Phrases are: 
[example, their home loan]

>> Named Entities are: 
[]


============================ Sentence 39 =============================

 Artificial intelligence  Computing systems capable of performing tasks that humans are very good at,  such as recognizing objects, recognizing and making sense of speech, self-driving  cars. 


>> Tokens are: 
[ , Artificial, intelligence,  , Computing, systems, capable, performing, tasks, humans, good, ,,  , recognizing, objects, ,, recognizing, making, sense, speech, ,, self, -, driving,  , cars, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Artificial', 'ADJ'), ('intelligence', 'NOUN'), (' ', 'SPACE'), ('Computing', 'NOUN'), ('systems', 'NOUN'), ('capable', 'ADJ'), ('performing', 'VERB'), ('tasks', 'NOUN'), ('humans', 'NOUN'), ('good', 'ADJ'), (',', 'PUNCT'), (' ', 'SPACE'), ('recognizing', 'VERB'), ('objects', 'NOUN'), (',', 'PUNCT'), ('recognizing', 'VERB'), ('making', 'VERB'), ('sense', 'NOUN'), ('speech', 'NOUN'), (',', 'PUNCT'), ('self', 'NOUN'), ('-', 'PUNCT'), ('driving', 'VERB'), (' ', 'SPACE'), ('cars', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'dep'), ('Artificial', 'amod'), ('intelligence', 'compound'), (' ', 'compound'), ('Computing', 'compound'), ('systems', 'ROOT'), ('capable', 'amod'), ('performing', 'pcomp'), ('tasks', 'dobj'), ('humans', 'nsubj'), ('good', 'acomp'), (',', 'punct'), (' ', 'pobj'), ('recognizing', 'pcomp'), ('objects', 'dobj'), (',', 'punct'), ('recognizing', 'conj'), ('making', 'conj'), ('sense', 'dobj'), ('speech', 'pobj'), (',', 'punct'), ('self', 'npadvmod'), ('-', 'punct'), ('driving', 'conj'), (' ', 'prep'), ('cars', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[ , Artificial], [Artificial, intelligence], [intelligence,  ], [ , Computing], [Computing, systems], [systems, capable], [capable, performing], [performing, tasks], [tasks, humans], [humans, good], [good, ,], [,,  ], [ , recognizing], [recognizing, objects], [objects, ,], [,, recognizing], [recognizing, making], [making, sense], [sense, speech], [speech, ,], [,, self], [self, -], [-, driving], [driving,  ], [ , cars], [cars, .]]

>> Trigrams: 
[[ , Artificial, intelligence], [Artificial, intelligence,  ], [intelligence,  , Computing], [ , Computing, systems], [Computing, systems, capable], [systems, capable, performing], [capable, performing, tasks], [performing, tasks, humans], [tasks, humans, good], [humans, good, ,], [good, ,,  ], [,,  , recognizing], [ , recognizing, objects], [recognizing, objects, ,], [objects, ,, recognizing], [,, recognizing, making], [recognizing, making, sense], [making, sense, speech], [sense, speech, ,], [speech, ,, self], [,, self, -], [self, -, driving], [-, driving,  ], [driving,  , cars], [ , cars, .]]

>> Noun Phrases are: 
[ Artificial intelligence  Computing systems, tasks, humans, objects, sense, speech, cars]

>> Named Entities are: 
[('Computing', 'PERSON')]


============================ Sentence 40 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 41 =============================

Source: https://www.kdnuggets.com/2018/11/an-introduction-ai.html  Machine learning, a subset of artificial intelligence, enables users to learn from  historical data to achieve a desired outcome. 


>> Tokens are: 
[Source, :, https://www.kdnuggets.com/2018/11/an-introduction-ai.html,  , Machine, learning, ,, subset, artificial, intelligence, ,, enables, users, learn,  , historical, data, achieve, desired, outcome, .] 

>> PoS Tags are: 
[('Source', 'NOUN'), (':', 'PUNCT'), ('https://www.kdnuggets.com/2018/11/an-introduction-ai.html', 'PROPN'), (' ', 'SPACE'), ('Machine', 'NOUN'), ('learning', 'NOUN'), (',', 'PUNCT'), ('subset', 'NOUN'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), (',', 'PUNCT'), ('enables', 'VERB'), ('users', 'NOUN'), ('learn', 'VERB'), (' ', 'SPACE'), ('historical', 'ADJ'), ('data', 'NOUN'), ('achieve', 'VERB'), ('desired', 'VERB'), ('outcome', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Source', 'nsubj'), (':', 'punct'), ('https://www.kdnuggets.com/2018/11/an-introduction-ai.html', 'appos'), (' ', 'compound'), ('Machine', 'compound'), ('learning', 'appos'), (',', 'punct'), ('subset', 'appos'), ('artificial', 'amod'), ('intelligence', 'pobj'), (',', 'punct'), ('enables', 'ROOT'), ('users', 'dobj'), ('learn', 'xcomp'), (' ', 'nmod'), ('historical', 'amod'), ('data', 'pobj'), ('achieve', 'advcl'), ('desired', 'amod'), ('outcome', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Source, :], [:, https://www.kdnuggets.com/2018/11/an-introduction-ai.html], [https://www.kdnuggets.com/2018/11/an-introduction-ai.html,  ], [ , Machine], [Machine, learning], [learning, ,], [,, subset], [subset, artificial], [artificial, intelligence], [intelligence, ,], [,, enables], [enables, users], [users, learn], [learn,  ], [ , historical], [historical, data], [data, achieve], [achieve, desired], [desired, outcome], [outcome, .]]

>> Trigrams: 
[[Source, :, https://www.kdnuggets.com/2018/11/an-introduction-ai.html], [:, https://www.kdnuggets.com/2018/11/an-introduction-ai.html,  ], [https://www.kdnuggets.com/2018/11/an-introduction-ai.html,  , Machine], [ , Machine, learning], [Machine, learning, ,], [learning, ,, subset], [,, subset, artificial], [subset, artificial, intelligence], [artificial, intelligence, ,], [intelligence, ,, enables], [,, enables, users], [enables, users, learn], [users, learn,  ], [learn,  , historical], [ , historical, data], [historical, data, achieve], [data, achieve, desired], [achieve, desired, outcome], [desired, outcome, .]]

>> Noun Phrases are: 
[Source, https://www.kdnuggets.com/2018/11/an-introduction-ai.html,  Machine learning, a subset, artificial intelligence, users,  historical data, a desired outcome]

>> Named Entities are: 
[('https://www.kdnuggets.com/2018/11/an-introduction-ai.html', 'PERSON')]


============================ Sentence 42 =============================

It powers targeted ads, personalized  content, song recommendations, predictive maintenance activities, virtual  assistants and more. 


>> Tokens are: 
[powers, targeted, ads, ,, personalized,  , content, ,, song, recommendations, ,, predictive, maintenance, activities, ,, virtual,  , assistants, .] 

>> PoS Tags are: 
[('powers', 'VERB'), ('targeted', 'ADJ'), ('ads', 'NOUN'), (',', 'PUNCT'), ('personalized', 'VERB'), (' ', 'SPACE'), ('content', 'NOUN'), (',', 'PUNCT'), ('song', 'NOUN'), ('recommendations', 'NOUN'), (',', 'PUNCT'), ('predictive', 'ADJ'), ('maintenance', 'NOUN'), ('activities', 'NOUN'), (',', 'PUNCT'), ('virtual', 'ADJ'), (' ', 'SPACE'), ('assistants', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('powers', 'ROOT'), ('targeted', 'amod'), ('ads', 'dobj'), (',', 'punct'), ('personalized', 'advcl'), (' ', 'compound'), ('content', 'dobj'), (',', 'punct'), ('song', 'compound'), ('recommendations', 'conj'), (',', 'punct'), ('predictive', 'amod'), ('maintenance', 'compound'), ('activities', 'conj'), (',', 'punct'), ('virtual', 'amod'), (' ', 'compound'), ('assistants', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[powers, targeted], [targeted, ads], [ads, ,], [,, personalized], [personalized,  ], [ , content], [content, ,], [,, song], [song, recommendations], [recommendations, ,], [,, predictive], [predictive, maintenance], [maintenance, activities], [activities, ,], [,, virtual], [virtual,  ], [ , assistants], [assistants, .]]

>> Trigrams: 
[[powers, targeted, ads], [targeted, ads, ,], [ads, ,, personalized], [,, personalized,  ], [personalized,  , content], [ , content, ,], [content, ,, song], [,, song, recommendations], [song, recommendations, ,], [recommendations, ,, predictive], [,, predictive, maintenance], [predictive, maintenance, activities], [maintenance, activities, ,], [activities, ,, virtual], [,, virtual,  ], [virtual,  , assistants], [ , assistants, .]]

>> Noun Phrases are: 
[It, targeted ads,  content, song recommendations, predictive maintenance activities, virtual  assistants]

>> Named Entities are: 
[]


============================ Sentence 43 =============================

  Machine learning can be broken down into two key phases, learning and predicting. 


>> Tokens are: 
[  , Machine, learning, broken, key, phases, ,, learning, predicting, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Machine', 'NOUN'), ('learning', 'NOUN'), ('broken', 'VERB'), ('key', 'ADJ'), ('phases', 'NOUN'), (',', 'PUNCT'), ('learning', 'VERB'), ('predicting', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nummod'), ('Machine', 'compound'), ('learning', 'nsubjpass'), ('broken', 'ROOT'), ('key', 'amod'), ('phases', 'pobj'), (',', 'punct'), ('learning', 'advcl'), ('predicting', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[  , Machine], [Machine, learning], [learning, broken], [broken, key], [key, phases], [phases, ,], [,, learning], [learning, predicting], [predicting, .]]

>> Trigrams: 
[[  , Machine, learning], [Machine, learning, broken], [learning, broken, key], [broken, key, phases], [key, phases, ,], [phases, ,, learning], [,, learning, predicting], [learning, predicting, .]]

>> Noun Phrases are: 
[  Machine learning, two key phases]

>> Named Entities are: 
[('two', 'CARDINAL')]


============================ Sentence 44 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 45 =============================

In the learning phase, certain statistical techniques or algorithms are applied to  historical data and/or previous business outcomes to generate a machine learning  model. 


>> Tokens are: 
[learning, phase, ,, certain, statistical, techniques, algorithms, applied,  , historical, data, and/or, previous, business, outcomes, generate, machine, learning,  , model, .] 

>> PoS Tags are: 
[('learning', 'NOUN'), ('phase', 'NOUN'), (',', 'PUNCT'), ('certain', 'ADJ'), ('statistical', 'ADJ'), ('techniques', 'NOUN'), ('algorithms', 'NOUN'), ('applied', 'VERB'), (' ', 'SPACE'), ('historical', 'ADJ'), ('data', 'NOUN'), ('and/or', 'CCONJ'), ('previous', 'ADJ'), ('business', 'NOUN'), ('outcomes', 'NOUN'), ('generate', 'VERB'), ('machine', 'NOUN'), ('learning', 'VERB'), (' ', 'SPACE'), ('model', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('learning', 'compound'), ('phase', 'pobj'), (',', 'punct'), ('certain', 'amod'), ('statistical', 'amod'), ('techniques', 'nsubjpass'), ('algorithms', 'conj'), ('applied', 'ROOT'), (' ', 'nmod'), ('historical', 'amod'), ('data', 'pobj'), ('and/or', 'cc'), ('previous', 'amod'), ('business', 'compound'), ('outcomes', 'conj'), ('generate', 'advcl'), ('machine', 'dobj'), ('learning', 'acl'), (' ', 'compound'), ('model', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[learning, phase], [phase, ,], [,, certain], [certain, statistical], [statistical, techniques], [techniques, algorithms], [algorithms, applied], [applied,  ], [ , historical], [historical, data], [data, and/or], [and/or, previous], [previous, business], [business, outcomes], [outcomes, generate], [generate, machine], [machine, learning], [learning,  ], [ , model], [model, .]]

>> Trigrams: 
[[learning, phase, ,], [phase, ,, certain], [,, certain, statistical], [certain, statistical, techniques], [statistical, techniques, algorithms], [techniques, algorithms, applied], [algorithms, applied,  ], [applied,  , historical], [ , historical, data], [historical, data, and/or], [data, and/or, previous], [and/or, previous, business], [previous, business, outcomes], [business, outcomes, generate], [outcomes, generate, machine], [generate, machine, learning], [machine, learning,  ], [learning,  , model], [ , model, .]]

>> Noun Phrases are: 
[the learning phase, certain statistical techniques, algorithms,  historical data, previous business outcomes, a machine,  model]

>> Named Entities are: 
[]


============================ Sentence 46 =============================

A model can be thought of as a set of rules or instructions, such as steps in  a recipe, that one must follow to make a business decision. 


>> Tokens are: 
[model, thought, set, rules, instructions, ,, steps,  , recipe, ,, follow, business, decision, .] 

>> PoS Tags are: 
[('model', 'NOUN'), ('thought', 'VERB'), ('set', 'NOUN'), ('rules', 'NOUN'), ('instructions', 'NOUN'), (',', 'PUNCT'), ('steps', 'NOUN'), (' ', 'SPACE'), ('recipe', 'NOUN'), (',', 'PUNCT'), ('follow', 'VERB'), ('business', 'NOUN'), ('decision', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('model', 'nsubjpass'), ('thought', 'ccomp'), ('set', 'pobj'), ('rules', 'pobj'), ('instructions', 'conj'), (',', 'punct'), ('steps', 'pobj'), (' ', 'pobj'), ('recipe', 'npadvmod'), (',', 'punct'), ('follow', 'ROOT'), ('business', 'compound'), ('decision', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[model, thought], [thought, set], [set, rules], [rules, instructions], [instructions, ,], [,, steps], [steps,  ], [ , recipe], [recipe, ,], [,, follow], [follow, business], [business, decision], [decision, .]]

>> Trigrams: 
[[model, thought, set], [thought, set, rules], [set, rules, instructions], [rules, instructions, ,], [instructions, ,, steps], [,, steps,  ], [steps,  , recipe], [ , recipe, ,], [recipe, ,, follow], [,, follow, business], [follow, business, decision], [business, decision, .]]

>> Noun Phrases are: 
[A model, a set, rules, instructions, steps, one, a business decision]

>> Named Entities are: 
[]


============================ Sentence 47 =============================

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 48 =============================

For example, in order to approve a loan application, a loan officer will consider  income, age, net worth and many other factors before making a final decision. 


>> Tokens are: 
[example, ,, order, approve, loan, application, ,, loan, officer, consider,  , income, ,, age, ,, net, worth, factors, making, final, decision, .] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), ('order', 'NOUN'), ('approve', 'VERB'), ('loan', 'NOUN'), ('application', 'NOUN'), (',', 'PUNCT'), ('loan', 'NOUN'), ('officer', 'NOUN'), ('consider', 'VERB'), (' ', 'SPACE'), ('income', 'NOUN'), (',', 'PUNCT'), ('age', 'NOUN'), (',', 'PUNCT'), ('net', 'ADJ'), ('worth', 'NOUN'), ('factors', 'NOUN'), ('making', 'VERB'), ('final', 'ADJ'), ('decision', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct'), ('order', 'pobj'), ('approve', 'acl'), ('loan', 'compound'), ('application', 'dobj'), (',', 'punct'), ('loan', 'compound'), ('officer', 'nsubj'), ('consider', 'ROOT'), (' ', 'compound'), ('income', 'dobj'), (',', 'punct'), ('age', 'conj'), (',', 'punct'), ('net', 'amod'), ('worth', 'conj'), ('factors', 'conj'), ('making', 'pcomp'), ('final', 'amod'), ('decision', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[example, ,], [,, order], [order, approve], [approve, loan], [loan, application], [application, ,], [,, loan], [loan, officer], [officer, consider], [consider,  ], [ , income], [income, ,], [,, age], [age, ,], [,, net], [net, worth], [worth, factors], [factors, making], [making, final], [final, decision], [decision, .]]

>> Trigrams: 
[[example, ,, order], [,, order, approve], [order, approve, loan], [approve, loan, application], [loan, application, ,], [application, ,, loan], [,, loan, officer], [loan, officer, consider], [officer, consider,  ], [consider,  , income], [ , income, ,], [income, ,, age], [,, age, ,], [age, ,, net], [,, net, worth], [net, worth, factors], [worth, factors, making], [factors, making, final], [making, final, decision], [final, decision, .]]

>> Noun Phrases are: 
[example, order, a loan application, a loan officer,  income, age, net worth, many other factors, a final decision]

>> Named Entities are: 
[]


============================ Sentence 49 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 50 =============================

Each attribute of the application is a rule or factor that the officer must evaluate  to approve or reject the loan. 


>> Tokens are: 
[attribute, application, rule, factor, officer, evaluate,  , approve, reject, loan, .] 

>> PoS Tags are: 
[('attribute', 'NOUN'), ('application', 'NOUN'), ('rule', 'NOUN'), ('factor', 'NOUN'), ('officer', 'NOUN'), ('evaluate', 'VERB'), (' ', 'SPACE'), ('approve', 'VERB'), ('reject', 'VERB'), ('loan', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('attribute', 'nsubj'), ('application', 'pobj'), ('rule', 'attr'), ('factor', 'conj'), ('officer', 'nsubj'), ('evaluate', 'relcl'), (' ', 'dobj'), ('approve', 'xcomp'), ('reject', 'conj'), ('loan', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[attribute, application], [application, rule], [rule, factor], [factor, officer], [officer, evaluate], [evaluate,  ], [ , approve], [approve, reject], [reject, loan], [loan, .]]

>> Trigrams: 
[[attribute, application, rule], [application, rule, factor], [rule, factor, officer], [factor, officer, evaluate], [officer, evaluate,  ], [evaluate,  , approve], [ , approve, reject], [approve, reject, loan], [reject, loan, .]]

>> Noun Phrases are: 
[Each attribute, the application, a rule, factor, the officer, the loan]

>> Named Entities are: 
[]


============================ Sentence 51 =============================

Machine learning techniques follow a similar  methodology, comparing various attributes, historical decisions and the outcome  of similar applicants to estimate the credit worthiness of the new applicant. 


>> Tokens are: 
[Machine, learning, techniques, follow, similar,  , methodology, ,, comparing, attributes, ,, historical, decisions, outcome,  , similar, applicants, estimate, credit, worthiness, new, applicant, .] 

>> PoS Tags are: 
[('Machine', 'NOUN'), ('learning', 'NOUN'), ('techniques', 'NOUN'), ('follow', 'VERB'), ('similar', 'ADJ'), (' ', 'SPACE'), ('methodology', 'NOUN'), (',', 'PUNCT'), ('comparing', 'VERB'), ('attributes', 'NOUN'), (',', 'PUNCT'), ('historical', 'ADJ'), ('decisions', 'NOUN'), ('outcome', 'NOUN'), (' ', 'SPACE'), ('similar', 'ADJ'), ('applicants', 'NOUN'), ('estimate', 'VERB'), ('credit', 'NOUN'), ('worthiness', 'NOUN'), ('new', 'ADJ'), ('applicant', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Machine', 'compound'), ('learning', 'compound'), ('techniques', 'nsubj'), ('follow', 'ROOT'), ('similar', 'amod'), (' ', 'compound'), ('methodology', 'dobj'), (',', 'punct'), ('comparing', 'advcl'), ('attributes', 'dobj'), (',', 'punct'), ('historical', 'amod'), ('decisions', 'conj'), ('outcome', 'conj'), (' ', 'appos'), ('similar', 'amod'), ('applicants', 'pobj'), ('estimate', 'acl'), ('credit', 'compound'), ('worthiness', 'dobj'), ('new', 'amod'), ('applicant', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Machine, learning], [learning, techniques], [techniques, follow], [follow, similar], [similar,  ], [ , methodology], [methodology, ,], [,, comparing], [comparing, attributes], [attributes, ,], [,, historical], [historical, decisions], [decisions, outcome], [outcome,  ], [ , similar], [similar, applicants], [applicants, estimate], [estimate, credit], [credit, worthiness], [worthiness, new], [new, applicant], [applicant, .]]

>> Trigrams: 
[[Machine, learning, techniques], [learning, techniques, follow], [techniques, follow, similar], [follow, similar,  ], [similar,  , methodology], [ , methodology, ,], [methodology, ,, comparing], [,, comparing, attributes], [comparing, attributes, ,], [attributes, ,, historical], [,, historical, decisions], [historical, decisions, outcome], [decisions, outcome,  ], [outcome,  , similar], [ , similar, applicants], [similar, applicants, estimate], [applicants, estimate, credit], [estimate, credit, worthiness], [credit, worthiness, new], [worthiness, new, applicant], [new, applicant, .]]

>> Noun Phrases are: 
[Machine learning techniques, a similar  methodology, various attributes, historical decisions, the outcome, similar applicants, the credit worthiness, the new applicant]

>> Named Entities are: 
[]


============================ Sentence 52 =============================

  Just as a human goes  through the process of  driver training to become  proficient, a computer  learns from experience or,  more specifically, data. 


>> Tokens are: 
[  , human, goes,  , process,  , driver, training,  , proficient, ,, computer,  , learns, experience, ,,  , specifically, ,, data, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('human', 'NOUN'), ('goes', 'VERB'), (' ', 'SPACE'), ('process', 'NOUN'), (' ', 'SPACE'), ('driver', 'NOUN'), ('training', 'NOUN'), (' ', 'SPACE'), ('proficient', 'ADJ'), (',', 'PUNCT'), ('computer', 'NOUN'), (' ', 'SPACE'), ('learns', 'VERB'), ('experience', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('specifically', 'ADV'), (',', 'PUNCT'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('human', 'nsubj'), ('goes', 'advcl'), (' ', 'dobj'), ('process', 'pobj'), (' ', 'pobj'), ('driver', 'compound'), ('training', 'pobj'), (' ', 'dep'), ('proficient', 'acomp'), (',', 'punct'), ('computer', 'npadvmod'), (' ', 'nsubj'), ('learns', 'relcl'), ('experience', 'pobj'), (',', 'punct'), (' ', 'conj'), ('specifically', 'advmod'), (',', 'punct'), ('data', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[  , human], [human, goes], [goes,  ], [ , process], [process,  ], [ , driver], [driver, training], [training,  ], [ , proficient], [proficient, ,], [,, computer], [computer,  ], [ , learns], [learns, experience], [experience, ,], [,,  ], [ , specifically], [specifically, ,], [,, data], [data, .]]

>> Trigrams: 
[[  , human, goes], [human, goes,  ], [goes,  , process], [ , process,  ], [process,  , driver], [ , driver, training], [driver, training,  ], [training,  , proficient], [ , proficient, ,], [proficient, ,, computer], [,, computer,  ], [computer,  , learns], [ , learns, experience], [learns, experience, ,], [experience, ,,  ], [,,  , specifically], [ , specifically, ,], [specifically, ,, data], [,, data, .]]

>> Noun Phrases are: 
[a human, the process, driver training, experience, , data]

>> Named Entities are: 
[]


============================ Sentence 53 =============================

  Machine learning, a subset  of artificial intelligence,  enables users to learn  from historical data to  achieve a desired outcome.   


>> Tokens are: 
[  , Machine, learning, ,, subset,  , artificial, intelligence, ,,  , enables, users, learn,  , historical, data,  , achieve, desired, outcome, .,  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Machine', 'NOUN'), ('learning', 'NOUN'), (',', 'PUNCT'), ('subset', 'NOUN'), (' ', 'SPACE'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('enables', 'VERB'), ('users', 'NOUN'), ('learn', 'VERB'), (' ', 'SPACE'), ('historical', 'ADJ'), ('data', 'NOUN'), (' ', 'SPACE'), ('achieve', 'VERB'), ('desired', 'VERB'), ('outcome', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'nummod'), ('Machine', 'compound'), ('learning', 'nsubj'), (',', 'punct'), ('subset', 'amod'), (' ', 'appos'), ('artificial', 'amod'), ('intelligence', 'pobj'), (',', 'punct'), (' ', 'nsubj'), ('enables', 'ROOT'), ('users', 'dobj'), ('learn', 'xcomp'), (' ', 'dobj'), ('historical', 'amod'), ('data', 'pobj'), (' ', 'pobj'), ('achieve', 'advcl'), ('desired', 'amod'), ('outcome', 'dobj'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[  , Machine], [Machine, learning], [learning, ,], [,, subset], [subset,  ], [ , artificial], [artificial, intelligence], [intelligence, ,], [,,  ], [ , enables], [enables, users], [users, learn], [learn,  ], [ , historical], [historical, data], [data,  ], [ , achieve], [achieve, desired], [desired, outcome], [outcome, .], [.,  ]]

>> Trigrams: 
[[  , Machine, learning], [Machine, learning, ,], [learning, ,, subset], [,, subset,  ], [subset,  , artificial], [ , artificial, intelligence], [artificial, intelligence, ,], [intelligence, ,,  ], [,,  , enables], [ , enables, users], [enables, users, learn], [users, learn,  ], [learn,  , historical], [ , historical, data], [historical, data,  ], [data,  , achieve], [ , achieve, desired], [achieve, desired, outcome], [desired, outcome, .], [outcome, .,  ]]

>> Noun Phrases are: 
[  Machine learning, artificial intelligence, users, historical data, a desired outcome]

>> Named Entities are: 
[]


============================ Sentence 54 =============================

It powers targeted ads,  personalized content,  song recommendations,  predictive maintenance  activities, virtual assistants  and more. 


>> Tokens are: 
[powers, targeted, ads, ,,  , personalized, content, ,,  , song, recommendations, ,,  , predictive, maintenance,  , activities, ,, virtual, assistants,  , .] 

>> PoS Tags are: 
[('powers', 'VERB'), ('targeted', 'ADJ'), ('ads', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('personalized', 'ADJ'), ('content', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('song', 'NOUN'), ('recommendations', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('predictive', 'ADJ'), ('maintenance', 'NOUN'), (' ', 'SPACE'), ('activities', 'NOUN'), (',', 'PUNCT'), ('virtual', 'ADJ'), ('assistants', 'NOUN'), (' ', 'SPACE'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('powers', 'ROOT'), ('targeted', 'amod'), ('ads', 'dobj'), (',', 'punct'), (' ', 'nmod'), ('personalized', 'amod'), ('content', 'dobj'), (',', 'punct'), (' ', 'nmod'), ('song', 'amod'), ('recommendations', 'dobj'), (',', 'punct'), (' ', 'nmod'), ('predictive', 'amod'), ('maintenance', 'compound'), (' ', 'compound'), ('activities', 'conj'), (',', 'punct'), ('virtual', 'amod'), ('assistants', 'compound'), (' ', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[powers, targeted], [targeted, ads], [ads, ,], [,,  ], [ , personalized], [personalized, content], [content, ,], [,,  ], [ , song], [song, recommendations], [recommendations, ,], [,,  ], [ , predictive], [predictive, maintenance], [maintenance,  ], [ , activities], [activities, ,], [,, virtual], [virtual, assistants], [assistants,  ], [ , .]]

>> Trigrams: 
[[powers, targeted, ads], [targeted, ads, ,], [ads, ,,  ], [,,  , personalized], [ , personalized, content], [personalized, content, ,], [content, ,,  ], [,,  , song], [ , song, recommendations], [song, recommendations, ,], [recommendations, ,,  ], [,,  , predictive], [ , predictive, maintenance], [predictive, maintenance,  ], [maintenance,  , activities], [ , activities, ,], [activities, ,, virtual], [,, virtual, assistants], [virtual, assistants,  ], [assistants,  , .]]

>> Noun Phrases are: 
[It, targeted ads,  personalized content,  song recommendations,  predictive maintenance  activities]

>> Named Entities are: 
[]


============================ Sentence 55 =============================

  Deep learning Machine learning Artificial intelligence  Popular and powerful  set of machine learning   techniques, which mimic  the brain’s neuron   activities, called  neural networks. 


>> Tokens are: 
[  , Deep, learning, Machine, learning, Artificial, intelligence,  , Popular, powerful,  , set, machine, learning,   , techniques, ,, mimic,  , brain, neuron,   , activities, ,, called,  , neural, networks, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Deep', 'PROPN'), ('learning', 'VERB'), ('Machine', 'NOUN'), ('learning', 'VERB'), ('Artificial', 'ADJ'), ('intelligence', 'NOUN'), (' ', 'SPACE'), ('Popular', 'ADJ'), ('powerful', 'ADJ'), (' ', 'SPACE'), ('set', 'NOUN'), ('machine', 'NOUN'), ('learning', 'VERB'), ('  ', 'SPACE'), ('techniques', 'NOUN'), (',', 'PUNCT'), ('mimic', 'VERB'), (' ', 'SPACE'), ('brain', 'NOUN'), ('neuron', 'NOUN'), ('  ', 'SPACE'), ('activities', 'NOUN'), (',', 'PUNCT'), ('called', 'VERB'), (' ', 'SPACE'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nmod'), ('Deep', 'amod'), ('learning', 'amod'), ('Machine', 'nsubj'), ('learning', 'acl'), ('Artificial', 'amod'), ('intelligence', 'dobj'), (' ', 'appos'), ('Popular', 'amod'), ('powerful', 'conj'), (' ', 'appos'), ('set', 'acl'), ('machine', 'pobj'), ('learning', 'ROOT'), ('  ', 'compound'), ('techniques', 'dobj'), (',', 'punct'), ('mimic', 'relcl'), (' ', 'dobj'), ('brain', 'poss'), ('neuron', 'nmod'), ('  ', 'compound'), ('activities', 'dobj'), (',', 'punct'), ('called', 'dep'), (' ', 'dobj'), ('neural', 'amod'), ('networks', 'oprd'), ('.', 'punct')]

>> Bigrams: 
[[  , Deep], [Deep, learning], [learning, Machine], [Machine, learning], [learning, Artificial], [Artificial, intelligence], [intelligence,  ], [ , Popular], [Popular, powerful], [powerful,  ], [ , set], [set, machine], [machine, learning], [learning,   ], [  , techniques], [techniques, ,], [,, mimic], [mimic,  ], [ , brain], [brain, neuron], [neuron,   ], [  , activities], [activities, ,], [,, called], [called,  ], [ , neural], [neural, networks], [networks, .]]

>> Trigrams: 
[[  , Deep, learning], [Deep, learning, Machine], [learning, Machine, learning], [Machine, learning, Artificial], [learning, Artificial, intelligence], [Artificial, intelligence,  ], [intelligence,  , Popular], [ , Popular, powerful], [Popular, powerful,  ], [powerful,  , set], [ , set, machine], [set, machine, learning], [machine, learning,   ], [learning,   , techniques], [  , techniques, ,], [techniques, ,, mimic], [,, mimic,  ], [mimic,  , brain], [ , brain, neuron], [brain, neuron,   ], [neuron,   , activities], [  , activities, ,], [activities, ,, called], [,, called,  ], [called,  , neural], [ , neural, networks], [neural, networks, .]]

>> Noun Phrases are: 
[  Deep learning Machine, Artificial intelligence, machine,   techniques, the brain’s neuron   activities, neural networks]

>> Named Entities are: 
[]


============================ Sentence 56 =============================

 Field of AI that learns from  historical data towards an   end goal/outcome. 


>> Tokens are: 
[ , Field, AI, learns,  , historical, data,   , end, goal, /, outcome, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Field', 'PROPN'), ('AI', 'PROPN'), ('learns', 'VERB'), (' ', 'SPACE'), ('historical', 'ADJ'), ('data', 'NOUN'), ('  ', 'SPACE'), ('end', 'NOUN'), ('goal', 'NOUN'), ('/', 'SYM'), ('outcome', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('Field', 'ROOT'), ('AI', 'pobj'), ('learns', 'relcl'), (' ', 'nmod'), ('historical', 'amod'), ('data', 'pobj'), ('  ', 'compound'), ('end', 'pobj'), ('goal', 'nmod'), ('/', 'punct'), ('outcome', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , Field], [Field, AI], [AI, learns], [learns,  ], [ , historical], [historical, data], [data,   ], [  , end], [end, goal], [goal, /], [/, outcome], [outcome, .]]

>> Trigrams: 
[[ , Field, AI], [Field, AI, learns], [AI, learns,  ], [learns,  , historical], [ , historical, data], [historical, data,   ], [data,   , end], [  , end, goal], [end, goal, /], [goal, /, outcome], [/, outcome, .]]

>> Noun Phrases are: 
[ Field, AI,  historical data, an   end, goal/outcome]

>> Named Entities are: 
[]


============================ Sentence 57 =============================

For  example, the customers  likely to default on their   home loan. 


>> Tokens are: 
[ , example, ,, customers,  , likely, default,   , home, loan, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('example', 'NOUN'), (',', 'PUNCT'), ('customers', 'NOUN'), (' ', 'SPACE'), ('likely', 'ADJ'), ('default', 'VERB'), ('  ', 'SPACE'), ('home', 'NOUN'), ('loan', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'pobj'), ('example', 'pobj'), (',', 'punct'), ('customers', 'pobj'), (' ', 'appos'), ('likely', 'amod'), ('default', 'xcomp'), ('  ', 'nummod'), ('home', 'compound'), ('loan', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , example], [example, ,], [,, customers], [customers,  ], [ , likely], [likely, default], [default,   ], [  , home], [home, loan], [loan, .]]

>> Trigrams: 
[[ , example, ,], [example, ,, customers], [,, customers,  ], [customers,  , likely], [ , likely, default], [likely, default,   ], [default,   , home], [  , home, loan], [home, loan, .]]

>> Noun Phrases are: 
[example, the customers, their   home loan]

>> Named Entities are: 
[]


============================ Sentence 58 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 59 =============================

Computing systems  capable of performing   tasks that humans are very  good at, such as   recognizing objects,  recognizing and making   sense of speech,  self-driving cars. 


>> Tokens are: 
[Computing, systems,  , capable, performing,   , tasks, humans,  , good, ,,   , recognizing, objects, ,,  , recognizing, making,   , sense, speech, ,,  , self, -, driving, cars, .] 

>> PoS Tags are: 
[('Computing', 'NOUN'), ('systems', 'NOUN'), (' ', 'SPACE'), ('capable', 'ADJ'), ('performing', 'VERB'), ('  ', 'SPACE'), ('tasks', 'NOUN'), ('humans', 'NOUN'), (' ', 'SPACE'), ('good', 'ADJ'), (',', 'PUNCT'), ('  ', 'SPACE'), ('recognizing', 'VERB'), ('objects', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('recognizing', 'VERB'), ('making', 'VERB'), ('  ', 'SPACE'), ('sense', 'NOUN'), ('speech', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('self', 'NOUN'), ('-', 'PUNCT'), ('driving', 'VERB'), ('cars', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Computing', 'compound'), ('systems', 'ROOT'), (' ', 'appos'), ('capable', 'amod'), ('performing', 'pcomp'), ('  ', 'compound'), ('tasks', 'dobj'), ('humans', 'nsubj'), (' ', 'npadvmod'), ('good', 'acomp'), (',', 'punct'), ('  ', 'pobj'), ('recognizing', 'acl'), ('objects', 'dobj'), (',', 'punct'), (' ', 'appos'), ('recognizing', 'acl'), ('making', 'conj'), ('  ', 'poss'), ('sense', 'dobj'), ('speech', 'pobj'), (',', 'punct'), (' ', 'nmod'), ('self', 'npadvmod'), ('-', 'punct'), ('driving', 'amod'), ('cars', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Computing, systems], [systems,  ], [ , capable], [capable, performing], [performing,   ], [  , tasks], [tasks, humans], [humans,  ], [ , good], [good, ,], [,,   ], [  , recognizing], [recognizing, objects], [objects, ,], [,,  ], [ , recognizing], [recognizing, making], [making,   ], [  , sense], [sense, speech], [speech, ,], [,,  ], [ , self], [self, -], [-, driving], [driving, cars], [cars, .]]

>> Trigrams: 
[[Computing, systems,  ], [systems,  , capable], [ , capable, performing], [capable, performing,   ], [performing,   , tasks], [  , tasks, humans], [tasks, humans,  ], [humans,  , good], [ , good, ,], [good, ,,   ], [,,   , recognizing], [  , recognizing, objects], [recognizing, objects, ,], [objects, ,,  ], [,,  , recognizing], [ , recognizing, making], [recognizing, making,   ], [making,   , sense], [  , sense, speech], [sense, speech, ,], [speech, ,,  ], [,,  , self], [ , self, -], [self, -, driving], [-, driving, cars], [driving, cars, .]]

>> Noun Phrases are: 
[Computing systems,   tasks, humans, objects,   sense, speech,  self-driving cars]

>> Named Entities are: 
[('Computing', 'PERSON')]


============================ Sentence 60 =============================

   5/14Demystifying data science    


>> Tokens are: 
[   , 5/14Demystifying, data, science,   ] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('5/14Demystifying', 'NOUN'), ('data', 'NOUN'), ('science', 'NOUN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'nummod'), ('5/14Demystifying', 'amod'), ('data', 'compound'), ('science', 'nsubj'), ('  ', 'ROOT')]

>> Bigrams: 
[[   , 5/14Demystifying], [5/14Demystifying, data], [data, science], [science,   ]]

>> Trigrams: 
[[   , 5/14Demystifying, data], [5/14Demystifying, data, science], [data, science,   ]]

>> Noun Phrases are: 
[   5/14Demystifying data science]

>> Named Entities are: 
[]


============================ Sentence 61 =============================

In the predicting phase, patterns identified during the learning phase are applied  to new data or business processes to score or predict the likelihood of outcomes. 


>> Tokens are: 
[predicting, phase, ,, patterns, identified, learning, phase, applied,  , new, data, business, processes, score, predict, likelihood, outcomes, .] 

>> PoS Tags are: 
[('predicting', 'VERB'), ('phase', 'NOUN'), (',', 'PUNCT'), ('patterns', 'NOUN'), ('identified', 'VERB'), ('learning', 'NOUN'), ('phase', 'NOUN'), ('applied', 'VERB'), (' ', 'SPACE'), ('new', 'ADJ'), ('data', 'NOUN'), ('business', 'NOUN'), ('processes', 'NOUN'), ('score', 'VERB'), ('predict', 'VERB'), ('likelihood', 'NOUN'), ('outcomes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('predicting', 'amod'), ('phase', 'pobj'), (',', 'punct'), ('patterns', 'nsubjpass'), ('identified', 'acl'), ('learning', 'compound'), ('phase', 'pobj'), ('applied', 'ROOT'), (' ', 'dobj'), ('new', 'amod'), ('data', 'pobj'), ('business', 'compound'), ('processes', 'conj'), ('score', 'advcl'), ('predict', 'conj'), ('likelihood', 'dobj'), ('outcomes', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[predicting, phase], [phase, ,], [,, patterns], [patterns, identified], [identified, learning], [learning, phase], [phase, applied], [applied,  ], [ , new], [new, data], [data, business], [business, processes], [processes, score], [score, predict], [predict, likelihood], [likelihood, outcomes], [outcomes, .]]

>> Trigrams: 
[[predicting, phase, ,], [phase, ,, patterns], [,, patterns, identified], [patterns, identified, learning], [identified, learning, phase], [learning, phase, applied], [phase, applied,  ], [applied,  , new], [ , new, data], [new, data, business], [data, business, processes], [business, processes, score], [processes, score, predict], [score, predict, likelihood], [predict, likelihood, outcomes], [likelihood, outcomes, .]]

>> Noun Phrases are: 
[the predicting phase, patterns, the learning phase, new data, business processes, the likelihood, outcomes]

>> Named Entities are: 
[]


============================ Sentence 62 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 63 =============================

Scoring outcomes enables organizations to optimize resource allocation and  decision-making activities, make more intelligent decisions and automate key  business processes at scale. 


>> Tokens are: 
[Scoring, outcomes, enables, organizations, optimize, resource, allocation,  , decision, -, making, activities, ,, intelligent, decisions, automate, key,  , business, processes, scale, .] 

>> PoS Tags are: 
[('Scoring', 'NOUN'), ('outcomes', 'NOUN'), ('enables', 'VERB'), ('organizations', 'NOUN'), ('optimize', 'VERB'), ('resource', 'NOUN'), ('allocation', 'NOUN'), (' ', 'SPACE'), ('decision', 'NOUN'), ('-', 'PUNCT'), ('making', 'VERB'), ('activities', 'NOUN'), (',', 'PUNCT'), ('intelligent', 'ADJ'), ('decisions', 'NOUN'), ('automate', 'VERB'), ('key', 'ADJ'), (' ', 'SPACE'), ('business', 'NOUN'), ('processes', 'NOUN'), ('scale', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Scoring', 'compound'), ('outcomes', 'nsubj'), ('enables', 'ROOT'), ('organizations', 'dobj'), ('optimize', 'xcomp'), ('resource', 'compound'), ('allocation', 'dobj'), (' ', 'conj'), ('decision', 'npadvmod'), ('-', 'punct'), ('making', 'amod'), ('activities', 'dobj'), (',', 'punct'), ('intelligent', 'amod'), ('decisions', 'dobj'), ('automate', 'conj'), ('key', 'amod'), (' ', 'compound'), ('business', 'compound'), ('processes', 'dobj'), ('scale', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Scoring, outcomes], [outcomes, enables], [enables, organizations], [organizations, optimize], [optimize, resource], [resource, allocation], [allocation,  ], [ , decision], [decision, -], [-, making], [making, activities], [activities, ,], [,, intelligent], [intelligent, decisions], [decisions, automate], [automate, key], [key,  ], [ , business], [business, processes], [processes, scale], [scale, .]]

>> Trigrams: 
[[Scoring, outcomes, enables], [outcomes, enables, organizations], [enables, organizations, optimize], [organizations, optimize, resource], [optimize, resource, allocation], [resource, allocation,  ], [allocation,  , decision], [ , decision, -], [decision, -, making], [-, making, activities], [making, activities, ,], [activities, ,, intelligent], [,, intelligent, decisions], [intelligent, decisions, automate], [decisions, automate, key], [automate, key,  ], [key,  , business], [ , business, processes], [business, processes, scale], [processes, scale, .]]

>> Noun Phrases are: 
[Scoring outcomes, organizations, resource allocation, decision-making activities, more intelligent decisions, key  business processes, scale]

>> Named Entities are: 
[]


============================ Sentence 64 =============================

Some key business questions that machine learning  techniques can help answer include:  1. 


>> Tokens are: 
[key, business, questions, machine, learning,  , techniques, help, answer, include, :,  , 1, .] 

>> PoS Tags are: 
[('key', 'ADJ'), ('business', 'NOUN'), ('questions', 'NOUN'), ('machine', 'NOUN'), ('learning', 'VERB'), (' ', 'SPACE'), ('techniques', 'NOUN'), ('help', 'VERB'), ('answer', 'VERB'), ('include', 'VERB'), (':', 'PUNCT'), (' ', 'SPACE'), ('1', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('key', 'amod'), ('business', 'compound'), ('questions', 'nsubj'), ('machine', 'nsubj'), ('learning', 'acl'), (' ', 'compound'), ('techniques', 'dobj'), ('help', 'relcl'), ('answer', 'xcomp'), ('include', 'ROOT'), (':', 'punct'), (' ', 'dobj'), ('1', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[key, business], [business, questions], [questions, machine], [machine, learning], [learning,  ], [ , techniques], [techniques, help], [help, answer], [answer, include], [include, :], [:,  ], [ , 1], [1, .]]

>> Trigrams: 
[[key, business, questions], [business, questions, machine], [questions, machine, learning], [machine, learning,  ], [learning,  , techniques], [ , techniques, help], [techniques, help, answer], [help, answer, include], [answer, include, :], [include, :,  ], [:,  , 1], [ , 1, .]]

>> Noun Phrases are: 
[Some key business questions, machine,  techniques]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 65 =============================

Will my customer purchase product X?  2. 


>> Tokens are: 
[customer, purchase, product, X, ?,  , 2, .] 

>> PoS Tags are: 
[('customer', 'NOUN'), ('purchase', 'NOUN'), ('product', 'NOUN'), ('X', 'NOUN'), ('?', 'PUNCT'), (' ', 'SPACE'), ('2', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('customer', 'compound'), ('purchase', 'compound'), ('product', 'nsubj'), ('X', 'appos'), ('?', 'punct'), (' ', 'appos'), ('2', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[customer, purchase], [purchase, product], [product, X], [X, ?], [?,  ], [ , 2], [2, .]]

>> Trigrams: 
[[customer, purchase, product], [purchase, product, X], [product, X, ?], [X, ?,  ], [?,  , 2], [ , 2, .]]

>> Noun Phrases are: 
[my customer purchase product, X]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 66 =============================

Will my customer like a recommended song?  3. 


>> Tokens are: 
[customer, like, recommended, song, ?,  , 3, .] 

>> PoS Tags are: 
[('customer', 'NOUN'), ('like', 'ADP'), ('recommended', 'VERB'), ('song', 'NOUN'), ('?', 'PUNCT'), (' ', 'SPACE'), ('3', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('customer', 'nsubj'), ('like', 'prep'), ('recommended', 'amod'), ('song', 'pobj'), ('?', 'punct'), (' ', 'nsubj'), ('3', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[customer, like], [like, recommended], [recommended, song], [song, ?], [?,  ], [ , 3], [3, .]]

>> Trigrams: 
[[customer, like, recommended], [like, recommended, song], [recommended, song, ?], [song, ?,  ], [?,  , 3], [ , 3, .]]

>> Noun Phrases are: 
[my customer, a recommended song]

>> Named Entities are: 
[('3', 'CARDINAL')]


============================ Sentence 67 =============================

Which of my customers are likely to switch to a competitor or cancel their contract? 


>> Tokens are: 
[customers, likely, switch, competitor, cancel, contract, ?] 

>> PoS Tags are: 
[('customers', 'NOUN'), ('likely', 'ADJ'), ('switch', 'VERB'), ('competitor', 'NOUN'), ('cancel', 'VERB'), ('contract', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('customers', 'pobj'), ('likely', 'acomp'), ('switch', 'xcomp'), ('competitor', 'pobj'), ('cancel', 'conj'), ('contract', 'dobj'), ('?', 'punct')]

>> Bigrams: 
[[customers, likely], [likely, switch], [switch, competitor], [competitor, cancel], [cancel, contract], [contract, ?]]

>> Trigrams: 
[[customers, likely, switch], [likely, switch, competitor], [switch, competitor, cancel], [competitor, cancel, contract], [cancel, contract, ?]]

>> Noun Phrases are: 
[my customers, a competitor, their contract]

>> Named Entities are: 
[]


============================ Sentence 68 =============================

 4. 


>> Tokens are: 
[ , 4, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('4', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('4', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[ , 4], [4, .]]

>> Trigrams: 
[[ , 4, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('4', 'CARDINAL')]


============================ Sentence 69 =============================

Of all recently submitted claims, which ones are likely to require an additional  fraud investigation unit review?  5. 


>> Tokens are: 
[recently, submitted, claims, ,, ones, likely, require, additional,  , fraud, investigation, unit, review, ?,  , 5, .] 

>> PoS Tags are: 
[('recently', 'ADV'), ('submitted', 'VERB'), ('claims', 'NOUN'), (',', 'PUNCT'), ('ones', 'NOUN'), ('likely', 'ADJ'), ('require', 'VERB'), ('additional', 'ADJ'), (' ', 'SPACE'), ('fraud', 'NOUN'), ('investigation', 'NOUN'), ('unit', 'NOUN'), ('review', 'NOUN'), ('?', 'PUNCT'), (' ', 'SPACE'), ('5', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('recently', 'advmod'), ('submitted', 'amod'), ('claims', 'ROOT'), (',', 'punct'), ('ones', 'nsubj'), ('likely', 'acomp'), ('require', 'xcomp'), ('additional', 'amod'), (' ', 'compound'), ('fraud', 'compound'), ('investigation', 'compound'), ('unit', 'compound'), ('review', 'dobj'), ('?', 'punct'), (' ', 'appos'), ('5', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[recently, submitted], [submitted, claims], [claims, ,], [,, ones], [ones, likely], [likely, require], [require, additional], [additional,  ], [ , fraud], [fraud, investigation], [investigation, unit], [unit, review], [review, ?], [?,  ], [ , 5], [5, .]]

>> Trigrams: 
[[recently, submitted, claims], [submitted, claims, ,], [claims, ,, ones], [,, ones, likely], [ones, likely, require], [likely, require, additional], [require, additional,  ], [additional,  , fraud], [ , fraud, investigation], [fraud, investigation, unit], [investigation, unit, review], [unit, review, ?], [review, ?,  ], [?,  , 5], [ , 5, .]]

>> Noun Phrases are: 
[Of all recently submitted claims, which ones, an additional  fraud investigation unit review]

>> Named Entities are: 
[('5', 'CARDINAL')]


============================ Sentence 70 =============================

Is this applicant likely to default on their car loan in the future?   


>> Tokens are: 
[applicant, likely, default, car, loan, future, ?,  ] 

>> PoS Tags are: 
[('applicant', 'NOUN'), ('likely', 'ADJ'), ('default', 'VERB'), ('car', 'NOUN'), ('loan', 'NOUN'), ('future', 'NOUN'), ('?', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('applicant', 'nsubj'), ('likely', 'acomp'), ('default', 'xcomp'), ('car', 'compound'), ('loan', 'pobj'), ('future', 'pobj'), ('?', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[applicant, likely], [likely, default], [default, car], [car, loan], [loan, future], [future, ?], [?,  ]]

>> Trigrams: 
[[applicant, likely, default], [likely, default, car], [default, car, loan], [car, loan, future], [loan, future, ?], [future, ?,  ]]

>> Noun Phrases are: 
[this applicant, their car loan, the future]

>> Named Entities are: 
[]


============================ Sentence 71 =============================

What do algorithms do?   


>> Tokens are: 
[algorithms, ?,  ] 

>> PoS Tags are: 
[('algorithms', 'NOUN'), ('?', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('algorithms', 'nsubj'), ('?', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[algorithms, ?], [?,  ]]

>> Trigrams: 
[[algorithms, ?,  ]]

>> Noun Phrases are: 
[What, algorithms]

>> Named Entities are: 
[]


============================ Sentence 72 =============================

Task Main objective Insight/ result   


>> Tokens are: 
[Task, Main, objective, Insight/, result,  ] 

>> PoS Tags are: 
[('Task', 'PROPN'), ('Main', 'PROPN'), ('objective', 'ADJ'), ('Insight/', 'NOUN'), ('result', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Task', 'nmod'), ('Main', 'nmod'), ('objective', 'amod'), ('Insight/', 'nsubj'), ('result', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Task, Main], [Main, objective], [objective, Insight/], [Insight/, result], [result,  ]]

>> Trigrams: 
[[Task, Main, objective], [Main, objective, Insight/], [objective, Insight/, result], [Insight/, result,  ]]

>> Noun Phrases are: 
[Task Main objective Insight/]

>> Named Entities are: 
[('Task Main', 'PRODUCT'), ('Insight/', 'ORG')]


============================ Sentence 73 =============================

An algorithm is a step- by-step instruction set  or formula for solving a  problem or completing a  task  Minimize errors or  some sort of “loss  function” to attain the  best approach to solve  a task   


>> Tokens are: 
[algorithm, step-, -, step, instruction, set,  , formula, solving,  , problem, completing,  , task,  , Minimize, errors,  , sort, “, loss,  , function, ”, attain,  , best, approach, solve,  , task,  ] 

>> PoS Tags are: 
[('algorithm', 'NOUN'), ('step-', 'ADJ'), ('-', 'PUNCT'), ('step', 'NOUN'), ('instruction', 'NOUN'), ('set', 'VERB'), (' ', 'SPACE'), ('formula', 'NOUN'), ('solving', 'VERB'), (' ', 'SPACE'), ('problem', 'NOUN'), ('completing', 'VERB'), (' ', 'SPACE'), ('task', 'NOUN'), (' ', 'SPACE'), ('Minimize', 'PROPN'), ('errors', 'NOUN'), (' ', 'SPACE'), ('sort', 'NOUN'), ('“', 'PUNCT'), ('loss', 'NOUN'), (' ', 'SPACE'), ('function', 'NOUN'), ('”', 'PUNCT'), ('attain', 'VERB'), (' ', 'SPACE'), ('best', 'ADJ'), ('approach', 'NOUN'), ('solve', 'VERB'), (' ', 'SPACE'), ('task', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('algorithm', 'nsubj'), ('step-', 'nmod'), ('-', 'punct'), ('step', 'pobj'), ('instruction', 'attr'), ('set', 'acl'), (' ', 'dobj'), ('formula', 'conj'), ('solving', 'pcomp'), (' ', 'compound'), ('problem', 'dobj'), ('completing', 'conj'), (' ', 'compound'), ('task', 'compound'), (' ', 'compound'), ('Minimize', 'compound'), ('errors', 'dobj'), (' ', 'conj'), ('sort', 'attr'), ('“', 'punct'), ('loss', 'compound'), (' ', 'compound'), ('function', 'pobj'), ('”', 'punct'), ('attain', 'acl'), (' ', 'nmod'), ('best', 'amod'), ('approach', 'dobj'), ('solve', 'advcl'), (' ', 'dative'), ('task', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[algorithm, step-], [step-, -], [-, step], [step, instruction], [instruction, set], [set,  ], [ , formula], [formula, solving], [solving,  ], [ , problem], [problem, completing], [completing,  ], [ , task], [task,  ], [ , Minimize], [Minimize, errors], [errors,  ], [ , sort], [sort, “], [“, loss], [loss,  ], [ , function], [function, ”], [”, attain], [attain,  ], [ , best], [best, approach], [approach, solve], [solve,  ], [ , task], [task,  ]]

>> Trigrams: 
[[algorithm, step-, -], [step-, -, step], [-, step, instruction], [step, instruction, set], [instruction, set,  ], [set,  , formula], [ , formula, solving], [formula, solving,  ], [solving,  , problem], [ , problem, completing], [problem, completing,  ], [completing,  , task], [ , task,  ], [task,  , Minimize], [ , Minimize, errors], [Minimize, errors,  ], [errors,  , sort], [ , sort, “], [sort, “, loss], [“, loss,  ], [loss,  , function], [ , function, ”], [function, ”, attain], [”, attain,  ], [attain,  , best], [ , best, approach], [best, approach, solve], [approach, solve,  ], [solve,  , task], [ , task,  ]]

>> Noun Phrases are: 
[An algorithm, -step, formula, a  problem, a  task  Minimize errors, some sort, loss  function, the  best approach, a task]

>> Named Entities are: 
[('Minimize', 'PERSON')]


============================ Sentence 74 =============================

The algorithm learns from  its mistakes/errors, finds  the best approach and  generates insights and  rules that can be used to  make predictions  1. 


>> Tokens are: 
[algorithm, learns,  , mistakes, /, errors, ,, finds,  , best, approach,  , generates, insights,  , rules,  , predictions,  , 1, .] 

>> PoS Tags are: 
[('algorithm', 'NOUN'), ('learns', 'VERB'), (' ', 'SPACE'), ('mistakes', 'NOUN'), ('/', 'SYM'), ('errors', 'NOUN'), (',', 'PUNCT'), ('finds', 'VERB'), (' ', 'SPACE'), ('best', 'ADJ'), ('approach', 'NOUN'), (' ', 'SPACE'), ('generates', 'VERB'), ('insights', 'NOUN'), (' ', 'SPACE'), ('rules', 'NOUN'), (' ', 'SPACE'), ('predictions', 'NOUN'), (' ', 'SPACE'), ('1', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('algorithm', 'nsubj'), ('learns', 'ROOT'), (' ', 'pobj'), ('mistakes', 'nmod'), ('/', 'punct'), ('errors', 'dobj'), (',', 'punct'), ('finds', 'conj'), (' ', 'dobj'), ('best', 'amod'), ('approach', 'nsubj'), (' ', 'nsubj'), ('generates', 'ccomp'), ('insights', 'dobj'), (' ', 'compound'), ('rules', 'conj'), (' ', 'pobj'), ('predictions', 'nsubj'), (' ', 'dobj'), ('1', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[algorithm, learns], [learns,  ], [ , mistakes], [mistakes, /], [/, errors], [errors, ,], [,, finds], [finds,  ], [ , best], [best, approach], [approach,  ], [ , generates], [generates, insights], [insights,  ], [ , rules], [rules,  ], [ , predictions], [predictions,  ], [ , 1], [1, .]]

>> Trigrams: 
[[algorithm, learns,  ], [learns,  , mistakes], [ , mistakes, /], [mistakes, /, errors], [/, errors, ,], [errors, ,, finds], [,, finds,  ], [finds,  , best], [ , best, approach], [best, approach,  ], [approach,  , generates], [ , generates, insights], [generates, insights,  ], [insights,  , rules], [ , rules,  ], [rules,  , predictions], [ , predictions,  ], [predictions,  , 1], [ , 1, .]]

>> Noun Phrases are: 
[The algorithm, its mistakes/errors, the best approach, insights,  rules, predictions]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 75 =============================

	Take	the	chicken	out  2. 


>> Tokens are: 
[	, 	, 	, chicken, 	,  , 2, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('chicken', 'NOUN'), ('\t', 'SPACE'), (' ', 'SPACE'), ('2', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'nsubj'), ('\t', 'dobj'), ('\t', 'compound'), ('chicken', 'compound'), ('\t', 'dobj'), (' ', 'pobj'), ('2', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[	, 	], [	, 	], [	, chicken], [chicken, 	], [	,  ], [ , 2], [2, .]]

>> Trigrams: 
[[	, 	, 	], [	, 	, chicken], [	, chicken, 	], [chicken, 	,  ], [	,  , 2], [ , 2, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 76 =============================

	 Salt	and	season  3. 


>> Tokens are: 
[	 , Salt, 	, 	, season,  , 3, .] 

>> PoS Tags are: 
[('\t ', 'SPACE'), ('Salt', 'PROPN'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('season', 'NOUN'), (' ', 'SPACE'), ('3', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t ', 'amod'), ('Salt', 'compound'), ('\t', 'nmod'), ('\t', 'conj'), ('season', 'compound'), (' ', 'compound'), ('3', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[	 , Salt], [Salt, 	], [	, 	], [	, season], [season,  ], [ , 3], [3, .]]

>> Trigrams: 
[[	 , Salt, 	], [Salt, 	, 	], [	, 	, season], [	, season,  ], [season,  , 3], [ , 3, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('Salt', 'PERSON'), ('3', 'CARDINAL')]


============================ Sentence 77 =============================

	 Bake	it   


>> Tokens are: 
[	 , Bake, 	,  ] 

>> PoS Tags are: 
[('\t ', 'SPACE'), ('Bake', 'PROPN'), ('\t', 'SPACE'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t ', 'compound'), ('Bake', 'compound'), ('\t', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[	 , Bake], [Bake, 	], [	,  ]]

>> Trigrams: 
[[	 , Bake, 	], [Bake, 	,  ]]

>> Noun Phrases are: 
[it]

>> Named Entities are: 
[]


============================ Sentence 78 =============================

Minimize	the	number	 of	things/steps	needed	 to	take	in	order	to	 serve	the	dish   


>> Tokens are: 
[Minimize, 	, 	, number, 	 , 	, things, /, steps, 	, needed, 	 , 	, 	, 	, order, 	, 	 , serve, 	, 	, dish,  ] 

>> PoS Tags are: 
[('Minimize', 'PROPN'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('number', 'NOUN'), ('\t ', 'SPACE'), ('\t', 'SPACE'), ('things', 'NOUN'), ('/', 'SYM'), ('steps', 'NOUN'), ('\t', 'SPACE'), ('needed', 'VERB'), ('\t ', 'SPACE'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('order', 'NOUN'), ('\t', 'SPACE'), ('\t ', 'SPACE'), ('serve', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('dish', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Minimize', 'compound'), ('\t', 'npadvmod'), ('\t', 'compound'), ('number', 'appos'), ('\t ', 'appos'), ('\t', 'amod'), ('things', 'nmod'), ('/', 'punct'), ('steps', 'pobj'), ('\t', 'nsubj'), ('needed', 'ROOT'), ('\t ', 'dobj'), ('\t', 'pobj'), ('\t', 'dobj'), ('\t', 'compound'), ('order', 'pobj'), ('\t', 'dobj'), ('\t ', 'advcl'), ('serve', 'dep'), ('\t', 'dobj'), ('\t', 'compound'), ('dish', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[Minimize, 	], [	, 	], [	, number], [number, 	 ], [	 , 	], [	, things], [things, /], [/, steps], [steps, 	], [	, needed], [needed, 	 ], [	 , 	], [	, 	], [	, 	], [	, order], [order, 	], [	, 	 ], [	 , serve], [serve, 	], [	, 	], [	, dish], [dish,  ]]

>> Trigrams: 
[[Minimize, 	, 	], [	, 	, number], [	, number, 	 ], [number, 	 , 	], [	 , 	, things], [	, things, /], [things, /, steps], [/, steps, 	], [steps, 	, needed], [	, needed, 	 ], [needed, 	 , 	], [	 , 	, 	], [	, 	, 	], [	, 	, order], [	, order, 	], [order, 	, 	 ], [	, 	 , serve], [	 , serve, 	], [serve, 	, 	], [	, 	, dish], [	, dish,  ]]

>> Noun Phrases are: 
[the	number, 	things/steps, 	order, the	dish]

>> Named Entities are: 
[]


============================ Sentence 79 =============================

Learn	from	your	mistakes	 	the	next	time 


>> Tokens are: 
[Learn, 	, 	, 	, mistakes, 	 	, 	, 	, time] 

>> PoS Tags are: 
[('Learn', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('mistakes', 'NOUN'), ('\t \t', 'SPACE'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('time', 'NOUN')] 

>> Dependency Tags are: 
[('Learn', 'compound'), ('\t', 'nsubj'), ('\t', 'pobj'), ('\t', 'compound'), ('mistakes', 'nsubj'), ('\t \t', 'ROOT'), ('\t', 'dobj'), ('\t', 'compound'), ('time', 'appos')]

>> Bigrams: 
[[Learn, 	], [	, 	], [	, 	], [	, mistakes], [mistakes, 	 	], [	 	, 	], [	, 	], [	, time]]

>> Trigrams: 
[[Learn, 	, 	], [	, 	, 	], [	, 	, mistakes], [	, mistakes, 	 	], [mistakes, 	 	, 	], [	 	, 	, 	], [	, 	, time]]

>> Noun Phrases are: 
[Learn	from	your	mistakes, next	time]

>> Named Entities are: 
[('Learn', 'PRODUCT')]


============================ Sentence 80 =============================

	you	attempt	 	the	recipe   


>> Tokens are: 
[	, 	, attempt, 	 	, 	, recipe,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('\t', 'SPACE'), ('attempt', 'NOUN'), ('\t \t', 'SPACE'), ('\t', 'SPACE'), ('recipe', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'nsubj'), ('\t', 'conj'), ('attempt', 'dep'), ('\t \t', 'dep'), ('\t', 'compound'), ('recipe', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[	, 	], [	, attempt], [attempt, 	 	], [	 	, 	], [	, recipe], [recipe,  ]]

>> Trigrams: 
[[	, 	, attempt], [	, attempt, 	 	], [attempt, 	 	, 	], [	 	, 	, recipe], [	, recipe,  ]]

>> Noun Phrases are: 
[you]

>> Named Entities are: 
[]


============================ Sentence 81 =============================

With the growth of data, the invention of advanced algorithms and cheaper  commodity hardware to process big data at scale, deep learning, a powerful set  of machine learning techniques, has become prominent in the industry. 


>> Tokens are: 
[growth, data, ,, invention, advanced, algorithms, cheaper,  , commodity, hardware, process, big, data, scale, ,, deep, learning, ,, powerful, set,  , machine, learning, techniques, ,, prominent, industry, .] 

>> PoS Tags are: 
[('growth', 'NOUN'), ('data', 'NOUN'), (',', 'PUNCT'), ('invention', 'NOUN'), ('advanced', 'ADJ'), ('algorithms', 'NOUN'), ('cheaper', 'ADJ'), (' ', 'SPACE'), ('commodity', 'NOUN'), ('hardware', 'NOUN'), ('process', 'VERB'), ('big', 'ADJ'), ('data', 'NOUN'), ('scale', 'NOUN'), (',', 'PUNCT'), ('deep', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('powerful', 'ADJ'), ('set', 'NOUN'), (' ', 'SPACE'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('techniques', 'NOUN'), (',', 'PUNCT'), ('prominent', 'ADJ'), ('industry', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('growth', 'pobj'), ('data', 'pobj'), (',', 'punct'), ('invention', 'nsubj'), ('advanced', 'amod'), ('algorithms', 'pobj'), ('cheaper', 'amod'), (' ', 'compound'), ('commodity', 'compound'), ('hardware', 'conj'), ('process', 'relcl'), ('big', 'amod'), ('data', 'dobj'), ('scale', 'pobj'), (',', 'punct'), ('deep', 'amod'), ('learning', 'appos'), (',', 'punct'), ('powerful', 'amod'), ('set', 'appos'), (' ', 'appos'), ('machine', 'compound'), ('learning', 'compound'), ('techniques', 'pobj'), (',', 'punct'), ('prominent', 'acomp'), ('industry', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[growth, data], [data, ,], [,, invention], [invention, advanced], [advanced, algorithms], [algorithms, cheaper], [cheaper,  ], [ , commodity], [commodity, hardware], [hardware, process], [process, big], [big, data], [data, scale], [scale, ,], [,, deep], [deep, learning], [learning, ,], [,, powerful], [powerful, set], [set,  ], [ , machine], [machine, learning], [learning, techniques], [techniques, ,], [,, prominent], [prominent, industry], [industry, .]]

>> Trigrams: 
[[growth, data, ,], [data, ,, invention], [,, invention, advanced], [invention, advanced, algorithms], [advanced, algorithms, cheaper], [algorithms, cheaper,  ], [cheaper,  , commodity], [ , commodity, hardware], [commodity, hardware, process], [hardware, process, big], [process, big, data], [big, data, scale], [data, scale, ,], [scale, ,, deep], [,, deep, learning], [deep, learning, ,], [learning, ,, powerful], [,, powerful, set], [powerful, set,  ], [set,  , machine], [ , machine, learning], [machine, learning, techniques], [learning, techniques, ,], [techniques, ,, prominent], [,, prominent, industry], [prominent, industry, .]]

>> Noun Phrases are: 
[the growth, data, the invention, advanced algorithms, cheaper  commodity hardware, big data, scale, deep learning, a powerful set, machine learning techniques, the industry]

>> Named Entities are: 
[]


============================ Sentence 82 =============================

Deep  learning techniques mimic the brain’s neuron activities, which is why they are also  referred to as neural networks. 


>> Tokens are: 
[Deep,  , learning, techniques, mimic, brain, neuron, activities, ,,  , referred, neural, networks, .] 

>> PoS Tags are: 
[('Deep', 'ADJ'), (' ', 'SPACE'), ('learning', 'VERB'), ('techniques', 'NOUN'), ('mimic', 'VERB'), ('brain', 'NOUN'), ('neuron', 'NOUN'), ('activities', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('referred', 'VERB'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Deep', 'amod'), (' ', 'nsubj'), ('learning', 'acl'), ('techniques', 'dobj'), ('mimic', 'ROOT'), ('brain', 'poss'), ('neuron', 'compound'), ('activities', 'dobj'), (',', 'punct'), (' ', 'nsubj'), ('referred', 'ccomp'), ('neural', 'amod'), ('networks', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Deep,  ], [ , learning], [learning, techniques], [techniques, mimic], [mimic, brain], [brain, neuron], [neuron, activities], [activities, ,], [,,  ], [ , referred], [referred, neural], [neural, networks], [networks, .]]

>> Trigrams: 
[[Deep,  , learning], [ , learning, techniques], [learning, techniques, mimic], [techniques, mimic, brain], [mimic, brain, neuron], [brain, neuron, activities], [neuron, activities, ,], [activities, ,,  ], [,,  , referred], [ , referred, neural], [referred, neural, networks], [neural, networks, .]]

>> Noun Phrases are: 
[techniques, the brain’s neuron activities, they, neural networks]

>> Named Entities are: 
[]


============================ Sentence 83 =============================

Some common applications include natural language  processing, image recognition, realistic photo and video generation. 


>> Tokens are: 
[common, applications, include, natural, language,  , processing, ,, image, recognition, ,, realistic, photo, video, generation, .] 

>> PoS Tags are: 
[('common', 'ADJ'), ('applications', 'NOUN'), ('include', 'VERB'), ('natural', 'ADJ'), ('language', 'NOUN'), (' ', 'SPACE'), ('processing', 'NOUN'), (',', 'PUNCT'), ('image', 'NOUN'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('realistic', 'ADJ'), ('photo', 'NOUN'), ('video', 'NOUN'), ('generation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('common', 'amod'), ('applications', 'nsubj'), ('include', 'ROOT'), ('natural', 'amod'), ('language', 'dobj'), (' ', 'prep'), ('processing', 'conj'), (',', 'punct'), ('image', 'compound'), ('recognition', 'conj'), (',', 'punct'), ('realistic', 'amod'), ('photo', 'conj'), ('video', 'compound'), ('generation', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[common, applications], [applications, include], [include, natural], [natural, language], [language,  ], [ , processing], [processing, ,], [,, image], [image, recognition], [recognition, ,], [,, realistic], [realistic, photo], [photo, video], [video, generation], [generation, .]]

>> Trigrams: 
[[common, applications, include], [applications, include, natural], [include, natural, language], [natural, language,  ], [language,  , processing], [ , processing, ,], [processing, ,, image], [,, image, recognition], [image, recognition, ,], [recognition, ,, realistic], [,, realistic, photo], [realistic, photo, video], [photo, video, generation], [video, generation, .]]

>> Noun Phrases are: 
[Some common applications, natural language, processing, image recognition, realistic photo, video generation]

>> Named Entities are: 
[]


============================ Sentence 84 =============================

  With the growth of data,  the invention of advanced  algorithms and cheaper  commodity hardware to  process big data at scale,  deep learning, a powerful  set of machine learning  techniques, has become  prominent in the industry. 


>> Tokens are: 
[  , growth, data, ,,  , invention, advanced,  , algorithms, cheaper,  , commodity, hardware,  , process, big, data, scale, ,,  , deep, learning, ,, powerful,  , set, machine, learning,  , techniques, ,,  , prominent, industry, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('growth', 'NOUN'), ('data', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('invention', 'NOUN'), ('advanced', 'ADJ'), (' ', 'SPACE'), ('algorithms', 'NOUN'), ('cheaper', 'ADJ'), (' ', 'SPACE'), ('commodity', 'NOUN'), ('hardware', 'NOUN'), (' ', 'SPACE'), ('process', 'VERB'), ('big', 'ADJ'), ('data', 'NOUN'), ('scale', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('deep', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('powerful', 'ADJ'), (' ', 'SPACE'), ('set', 'NOUN'), ('machine', 'NOUN'), ('learning', 'VERB'), (' ', 'SPACE'), ('techniques', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('prominent', 'ADJ'), ('industry', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'dep'), ('growth', 'pobj'), ('data', 'pobj'), (',', 'punct'), (' ', 'nmod'), ('invention', 'nsubj'), ('advanced', 'amod'), (' ', 'compound'), ('algorithms', 'pobj'), ('cheaper', 'amod'), (' ', 'nmod'), ('commodity', 'compound'), ('hardware', 'conj'), (' ', 'pobj'), ('process', 'ROOT'), ('big', 'amod'), ('data', 'dobj'), ('scale', 'pobj'), (',', 'punct'), (' ', 'nmod'), ('deep', 'amod'), ('learning', 'dobj'), (',', 'punct'), ('powerful', 'amod'), (' ', 'compound'), ('set', 'appos'), ('machine', 'pobj'), ('learning', 'acl'), (' ', 'compound'), ('techniques', 'dobj'), (',', 'punct'), (' ', 'attr'), ('prominent', 'amod'), ('industry', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , growth], [growth, data], [data, ,], [,,  ], [ , invention], [invention, advanced], [advanced,  ], [ , algorithms], [algorithms, cheaper], [cheaper,  ], [ , commodity], [commodity, hardware], [hardware,  ], [ , process], [process, big], [big, data], [data, scale], [scale, ,], [,,  ], [ , deep], [deep, learning], [learning, ,], [,, powerful], [powerful,  ], [ , set], [set, machine], [machine, learning], [learning,  ], [ , techniques], [techniques, ,], [,,  ], [ , prominent], [prominent, industry], [industry, .]]

>> Trigrams: 
[[  , growth, data], [growth, data, ,], [data, ,,  ], [,,  , invention], [ , invention, advanced], [invention, advanced,  ], [advanced,  , algorithms], [ , algorithms, cheaper], [algorithms, cheaper,  ], [cheaper,  , commodity], [ , commodity, hardware], [commodity, hardware,  ], [hardware,  , process], [ , process, big], [process, big, data], [big, data, scale], [data, scale, ,], [scale, ,,  ], [,,  , deep], [ , deep, learning], [deep, learning, ,], [learning, ,, powerful], [,, powerful,  ], [powerful,  , set], [ , set, machine], [set, machine, learning], [machine, learning,  ], [learning,  , techniques], [ , techniques, ,], [techniques, ,,  ], [,,  , prominent], [ , prominent, industry], [prominent, industry, .]]

>> Noun Phrases are: 
[the growth, data,  the invention, advanced  algorithms, cheaper  commodity hardware, big data, scale,  deep learning, a powerful  set, machine,  techniques, the industry]

>> Named Entities are: 
[]


============================ Sentence 85 =============================

  Task An algorithm is a   step-by-step instruction set  or formula for solving a   problem or completing a task  1. 


>> Tokens are: 
[  , Task, algorithm,   , step, -, -, step, instruction, set,  , formula, solving,   , problem, completing, task,  , 1, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Task', 'PROPN'), ('algorithm', 'NOUN'), ('  ', 'SPACE'), ('step', 'NOUN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('step', 'NOUN'), ('instruction', 'NOUN'), ('set', 'VERB'), (' ', 'SPACE'), ('formula', 'NOUN'), ('solving', 'VERB'), ('  ', 'SPACE'), ('problem', 'NOUN'), ('completing', 'VERB'), ('task', 'NOUN'), (' ', 'SPACE'), ('1', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nsubj'), ('Task', 'compound'), ('algorithm', 'nsubj'), ('  ', 'nummod'), ('step', 'nmod'), ('-', 'punct'), ('-', 'punct'), ('step', 'pobj'), ('instruction', 'attr'), ('set', 'acl'), (' ', 'dobj'), ('formula', 'conj'), ('solving', 'pcomp'), ('  ', 'compound'), ('problem', 'dobj'), ('completing', 'conj'), ('task', 'compound'), (' ', 'dobj'), ('1', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[  , Task], [Task, algorithm], [algorithm,   ], [  , step], [step, -], [-, -], [-, step], [step, instruction], [instruction, set], [set,  ], [ , formula], [formula, solving], [solving,   ], [  , problem], [problem, completing], [completing, task], [task,  ], [ , 1], [1, .]]

>> Trigrams: 
[[  , Task, algorithm], [Task, algorithm,   ], [algorithm,   , step], [  , step, -], [step, -, -], [-, -, step], [-, step, instruction], [step, instruction, set], [instruction, set,  ], [set,  , formula], [ , formula, solving], [formula, solving,   ], [solving,   , problem], [  , problem, completing], [problem, completing, task], [completing, task,  ], [task,  , 1], [ , 1, .]]

>> Noun Phrases are: 
[Task An algorithm, step, formula, a   problem]

>> Named Entities are: 
[('Task An', 'PRODUCT'), ('1', 'CARDINAL')]


============================ Sentence 86 =============================

Take the chicken out 2. 


>> Tokens are: 
[chicken, 2, .] 

>> PoS Tags are: 
[('chicken', 'NOUN'), ('2', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('chicken', 'dobj'), ('2', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[chicken, 2], [2, .]]

>> Trigrams: 
[[chicken, 2, .]]

>> Noun Phrases are: 
[the chicken]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 87 =============================

Salt and season 3. 


>> Tokens are: 
[Salt, season, 3, .] 

>> PoS Tags are: 
[('Salt', 'NOUN'), ('season', 'NOUN'), ('3', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Salt', 'ROOT'), ('season', 'conj'), ('3', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[Salt, season], [season, 3], [3, .]]

>> Trigrams: 
[[Salt, season, 3], [season, 3, .]]

>> Noun Phrases are: 
[Salt, season]

>> Named Entities are: 
[]


============================ Sentence 88 =============================

Bake it   


>> Tokens are: 
[Bake,  ] 

>> PoS Tags are: 
[('Bake', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Bake', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Bake,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[it]

>> Named Entities are: 
[]


============================ Sentence 89 =============================

Minimize errors or some sort  of “loss function” to attain the  best approach to solve a task   


>> Tokens are: 
[Minimize, errors, sort,  , “, loss, function, ”, attain,  , best, approach, solve, task,  ] 

>> PoS Tags are: 
[('Minimize', 'PROPN'), ('errors', 'NOUN'), ('sort', 'NOUN'), (' ', 'SPACE'), ('“', 'PUNCT'), ('loss', 'NOUN'), ('function', 'NOUN'), ('”', 'PUNCT'), ('attain', 'VERB'), (' ', 'SPACE'), ('best', 'ADJ'), ('approach', 'NOUN'), ('solve', 'VERB'), ('task', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Minimize', 'compound'), ('errors', 'ROOT'), ('sort', 'conj'), (' ', 'appos'), ('“', 'punct'), ('loss', 'compound'), ('function', 'pobj'), ('”', 'punct'), ('attain', 'relcl'), (' ', 'nmod'), ('best', 'amod'), ('approach', 'dobj'), ('solve', 'advcl'), ('task', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[Minimize, errors], [errors, sort], [sort,  ], [ , “], [“, loss], [loss, function], [function, ”], [”, attain], [attain,  ], [ , best], [best, approach], [approach, solve], [solve, task], [task,  ]]

>> Trigrams: 
[[Minimize, errors, sort], [errors, sort,  ], [sort,  , “], [ , “, loss], [“, loss, function], [loss, function, ”], [function, ”, attain], [”, attain,  ], [attain,  , best], [ , best, approach], [best, approach, solve], [approach, solve, task], [solve, task,  ]]

>> Noun Phrases are: 
[Minimize errors, some sort, “loss function, the  best approach, a task]

>> Named Entities are: 
[]


============================ Sentence 90 =============================

Minimize the number of  things/steps needed to take   in order to serve the dish   


>> Tokens are: 
[Minimize, number,  , things, /, steps, needed,   , order, serve, dish,  ] 

>> PoS Tags are: 
[('Minimize', 'VERB'), ('number', 'NOUN'), (' ', 'SPACE'), ('things', 'NOUN'), ('/', 'SYM'), ('steps', 'NOUN'), ('needed', 'VERB'), ('  ', 'SPACE'), ('order', 'NOUN'), ('serve', 'VERB'), ('dish', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Minimize', 'ROOT'), ('number', 'dobj'), (' ', 'nmod'), ('things', 'nmod'), ('/', 'punct'), ('steps', 'pobj'), ('needed', 'acl'), ('  ', 'dobj'), ('order', 'pobj'), ('serve', 'acl'), ('dish', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[Minimize, number], [number,  ], [ , things], [things, /], [/, steps], [steps, needed], [needed,   ], [  , order], [order, serve], [serve, dish], [dish,  ]]

>> Trigrams: 
[[Minimize, number,  ], [number,  , things], [ , things, /], [things, /, steps], [/, steps, needed], [steps, needed,   ], [needed,   , order], [  , order, serve], [order, serve, dish], [serve, dish,  ]]

>> Noun Phrases are: 
[the number,  things/steps, order, the dish]

>> Named Entities are: 
[('Minimize', 'PRODUCT')]


============================ Sentence 91 =============================

The algorithm learns from its  mistakes/errors, finds the   best approach and generates  insights and rules that can be   used to make predictions   


>> Tokens are: 
[algorithm, learns,  , mistakes, /, errors, ,, finds,   , best, approach, generates,  , insights, rules,   , predictions,  ] 

>> PoS Tags are: 
[('algorithm', 'NOUN'), ('learns', 'VERB'), (' ', 'SPACE'), ('mistakes', 'NOUN'), ('/', 'SYM'), ('errors', 'NOUN'), (',', 'PUNCT'), ('finds', 'VERB'), ('  ', 'SPACE'), ('best', 'ADJ'), ('approach', 'NOUN'), ('generates', 'VERB'), (' ', 'SPACE'), ('insights', 'NOUN'), ('rules', 'NOUN'), ('  ', 'SPACE'), ('predictions', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('algorithm', 'nsubj'), ('learns', 'ROOT'), (' ', 'nmod'), ('mistakes', 'nmod'), ('/', 'punct'), ('errors', 'pobj'), (',', 'punct'), ('finds', 'conj'), ('  ', 'nummod'), ('best', 'amod'), ('approach', 'dobj'), ('generates', 'conj'), (' ', 'dative'), ('insights', 'dobj'), ('rules', 'conj'), ('  ', 'attr'), ('predictions', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[algorithm, learns], [learns,  ], [ , mistakes], [mistakes, /], [/, errors], [errors, ,], [,, finds], [finds,   ], [  , best], [best, approach], [approach, generates], [generates,  ], [ , insights], [insights, rules], [rules,   ], [  , predictions], [predictions,  ]]

>> Trigrams: 
[[algorithm, learns,  ], [learns,  , mistakes], [ , mistakes, /], [mistakes, /, errors], [/, errors, ,], [errors, ,, finds], [,, finds,   ], [finds,   , best], [  , best, approach], [best, approach, generates], [approach, generates,  ], [generates,  , insights], [ , insights, rules], [insights, rules,   ], [rules,   , predictions], [  , predictions,  ]]

>> Noun Phrases are: 
[The algorithm, its  mistakes/errors, the   best approach, insights, rules, predictions]

>> Named Entities are: 
[]


============================ Sentence 92 =============================

Learn from your mistakes  the next time you attempt   the recipe   


>> Tokens are: 
[Learn, mistakes,  , time, attempt,   , recipe,  ] 

>> PoS Tags are: 
[('Learn', 'VERB'), ('mistakes', 'NOUN'), (' ', 'SPACE'), ('time', 'NOUN'), ('attempt', 'VERB'), ('  ', 'SPACE'), ('recipe', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Learn', 'ROOT'), ('mistakes', 'pobj'), (' ', 'dobj'), ('time', 'npadvmod'), ('attempt', 'relcl'), ('  ', 'dobj'), ('recipe', 'npadvmod'), (' ', 'punct')]

>> Bigrams: 
[[Learn, mistakes], [mistakes,  ], [ , time], [time, attempt], [attempt,   ], [  , recipe], [recipe,  ]]

>> Trigrams: 
[[Learn, mistakes,  ], [mistakes,  , time], [ , time, attempt], [time, attempt,   ], [attempt,   , recipe], [  , recipe,  ]]

>> Noun Phrases are: 
[your mistakes, you]

>> Named Entities are: 
[('Learn', 'ORG')]


============================ Sentence 93 =============================

Main objective   


>> Tokens are: 
[Main, objective,  ] 

>> PoS Tags are: 
[('Main', 'ADJ'), ('objective', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Main', 'amod'), ('objective', 'ROOT'), (' ', 'appos')]

>> Bigrams: 
[[Main, objective], [objective,  ]]

>> Trigrams: 
[[Main, objective,  ]]

>> Noun Phrases are: 
[Main objective]

>> Named Entities are: 
[('Main', 'ORG')]


============================ Sentence 94 =============================

Insight/ result  Machine learning Recipe Analogy    6/14Demystifying data science   How can an organization derive business value from AI   and analytics? 


>> Tokens are: 
[Insight/, result,  , Machine, learning, Recipe, Analogy,    , 6/14Demystifying, data, science,   , organization, derive, business, value, AI,   , analytics, ?] 

>> PoS Tags are: 
[('Insight/', 'NOUN'), ('result', 'VERB'), (' ', 'SPACE'), ('Machine', 'NOUN'), ('learning', 'NOUN'), ('Recipe', 'PROPN'), ('Analogy', 'PROPN'), ('   ', 'SPACE'), ('6/14Demystifying', 'PROPN'), ('data', 'NOUN'), ('science', 'NOUN'), ('  ', 'SPACE'), ('organization', 'NOUN'), ('derive', 'VERB'), ('business', 'NOUN'), ('value', 'NOUN'), ('AI', 'PROPN'), ('  ', 'SPACE'), ('analytics', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('Insight/', 'nsubj'), ('result', 'ROOT'), (' ', 'compound'), ('Machine', 'compound'), ('learning', 'nmod'), ('Recipe', 'nmod'), ('Analogy', 'appos'), ('   ', 'compound'), ('6/14Demystifying', 'compound'), ('data', 'compound'), ('science', 'compound'), ('  ', 'dobj'), ('organization', 'nsubj'), ('derive', 'relcl'), ('business', 'compound'), ('value', 'dobj'), ('AI', 'compound'), ('  ', 'pobj'), ('analytics', 'conj'), ('?', 'punct')]

>> Bigrams: 
[[Insight/, result], [result,  ], [ , Machine], [Machine, learning], [learning, Recipe], [Recipe, Analogy], [Analogy,    ], [   , 6/14Demystifying], [6/14Demystifying, data], [data, science], [science,   ], [  , organization], [organization, derive], [derive, business], [business, value], [value, AI], [AI,   ], [  , analytics], [analytics, ?]]

>> Trigrams: 
[[Insight/, result,  ], [result,  , Machine], [ , Machine, learning], [Machine, learning, Recipe], [learning, Recipe, Analogy], [Recipe, Analogy,    ], [Analogy,    , 6/14Demystifying], [   , 6/14Demystifying, data], [6/14Demystifying, data, science], [data, science,   ], [science,   , organization], [  , organization, derive], [organization, derive, business], [derive, business, value], [business, value, AI], [value, AI,   ], [AI,   , analytics], [  , analytics, ?]]

>> Noun Phrases are: 
[Insight/, Recipe Analogy, an organization, business value, analytics]

>> Named Entities are: 
[('Insight/', 'ORG')]


============================ Sentence 95 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 96 =============================

There are some common questions organizations consider when appealing  to their customer base: Who are the customers? 


>> Tokens are: 
[common, questions, organizations, consider, appealing,  , customer, base, :, customers, ?] 

>> PoS Tags are: 
[('common', 'ADJ'), ('questions', 'NOUN'), ('organizations', 'NOUN'), ('consider', 'VERB'), ('appealing', 'VERB'), (' ', 'SPACE'), ('customer', 'NOUN'), ('base', 'NOUN'), (':', 'PUNCT'), ('customers', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('common', 'amod'), ('questions', 'compound'), ('organizations', 'nsubj'), ('consider', 'conj'), ('appealing', 'advcl'), (' ', 'dobj'), ('customer', 'compound'), ('base', 'pobj'), (':', 'punct'), ('customers', 'nsubj'), ('?', 'punct')]

>> Bigrams: 
[[common, questions], [questions, organizations], [organizations, consider], [consider, appealing], [appealing,  ], [ , customer], [customer, base], [base, :], [:, customers], [customers, ?]]

>> Trigrams: 
[[common, questions, organizations], [questions, organizations, consider], [organizations, consider, appealing], [consider, appealing,  ], [appealing,  , customer], [ , customer, base], [customer, base, :], [base, :, customers], [:, customers, ?]]

>> Noun Phrases are: 
[some common questions organizations, their customer base, Who, the customers]

>> Named Entities are: 
[]


============================ Sentence 97 =============================

What do they want? 


>> Tokens are: 
[want, ?] 

>> PoS Tags are: 
[('want', 'VERB'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('want', 'ROOT'), ('?', 'punct')]

>> Bigrams: 
[[want, ?]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[What, they]

>> Named Entities are: 
[]


============================ Sentence 98 =============================

How can  the organization provide the best customer experience to gain a competitive  advantage? 


>> Tokens are: 
[ , organization, provide, best, customer, experience, gain, competitive,  , advantage, ?] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('organization', 'NOUN'), ('provide', 'VERB'), ('best', 'ADJ'), ('customer', 'NOUN'), ('experience', 'NOUN'), ('gain', 'VERB'), ('competitive', 'ADJ'), (' ', 'SPACE'), ('advantage', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('organization', 'nsubj'), ('provide', 'ccomp'), ('best', 'amod'), ('customer', 'compound'), ('experience', 'dobj'), ('gain', 'advcl'), ('competitive', 'amod'), (' ', 'compound'), ('advantage', 'dobj'), ('?', 'punct')]

>> Bigrams: 
[[ , organization], [organization, provide], [provide, best], [best, customer], [customer, experience], [experience, gain], [gain, competitive], [competitive,  ], [ , advantage], [advantage, ?]]

>> Trigrams: 
[[ , organization, provide], [organization, provide, best], [provide, best, customer], [best, customer, experience], [customer, experience, gain], [experience, gain, competitive], [gain, competitive,  ], [competitive,  , advantage], [ , advantage, ?]]

>> Noun Phrases are: 
[the organization, the best customer experience, a competitive  advantage]

>> Named Entities are: 
[]


============================ Sentence 99 =============================

Data analytics help answer these business questions. 


>> Tokens are: 
[Data, analytics, help, answer, business, questions, .] 

>> PoS Tags are: 
[('Data', 'NOUN'), ('analytics', 'NOUN'), ('help', 'VERB'), ('answer', 'VERB'), ('business', 'NOUN'), ('questions', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Data', 'compound'), ('analytics', 'nsubj'), ('help', 'ROOT'), ('answer', 'xcomp'), ('business', 'compound'), ('questions', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Data, analytics], [analytics, help], [help, answer], [answer, business], [business, questions], [questions, .]]

>> Trigrams: 
[[Data, analytics, help], [analytics, help, answer], [help, answer, business], [answer, business, questions], [business, questions, .]]

>> Noun Phrases are: 
[Data analytics, these business questions]

>> Named Entities are: 
[]


============================ Sentence 100 =============================

  Data analytics is the science of analyzing raw data to draw conclusions from that  information. 


>> Tokens are: 
[  , Data, analytics, science, analyzing, raw, data, draw, conclusions,  , information, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Data', 'PROPN'), ('analytics', 'NOUN'), ('science', 'NOUN'), ('analyzing', 'VERB'), ('raw', 'ADJ'), ('data', 'NOUN'), ('draw', 'VERB'), ('conclusions', 'NOUN'), (' ', 'SPACE'), ('information', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nummod'), ('Data', 'compound'), ('analytics', 'nsubj'), ('science', 'attr'), ('analyzing', 'pcomp'), ('raw', 'amod'), ('data', 'dobj'), ('draw', 'advcl'), ('conclusions', 'dobj'), (' ', 'compound'), ('information', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , Data], [Data, analytics], [analytics, science], [science, analyzing], [analyzing, raw], [raw, data], [data, draw], [draw, conclusions], [conclusions,  ], [ , information], [information, .]]

>> Trigrams: 
[[  , Data, analytics], [Data, analytics, science], [analytics, science, analyzing], [science, analyzing, raw], [analyzing, raw, data], [raw, data, draw], [data, draw, conclusions], [draw, conclusions,  ], [conclusions,  , information], [ , information, .]]

>> Noun Phrases are: 
[  Data analytics, the science, raw data, conclusions, that  information]

>> Named Entities are: 
[]


============================ Sentence 101 =============================

Data analytics techniques can reveal trends and metrics that would  otherwise be lost in a mass of information. 


>> Tokens are: 
[Data, analytics, techniques, reveal, trends, metrics,  , lost, mass, information, .] 

>> PoS Tags are: 
[('Data', 'NOUN'), ('analytics', 'NOUN'), ('techniques', 'NOUN'), ('reveal', 'VERB'), ('trends', 'NOUN'), ('metrics', 'NOUN'), (' ', 'SPACE'), ('lost', 'VERB'), ('mass', 'NOUN'), ('information', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Data', 'compound'), ('analytics', 'compound'), ('techniques', 'nsubj'), ('reveal', 'ROOT'), ('trends', 'dobj'), ('metrics', 'conj'), (' ', 'nsubjpass'), ('lost', 'relcl'), ('mass', 'pobj'), ('information', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Data, analytics], [analytics, techniques], [techniques, reveal], [reveal, trends], [trends, metrics], [metrics,  ], [ , lost], [lost, mass], [mass, information], [information, .]]

>> Trigrams: 
[[Data, analytics, techniques], [analytics, techniques, reveal], [techniques, reveal, trends], [reveal, trends, metrics], [trends, metrics,  ], [metrics,  , lost], [ , lost, mass], [lost, mass, information], [mass, information, .]]

>> Noun Phrases are: 
[Data analytics techniques, trends, metrics, a mass, information]

>> Named Entities are: 
[]


============================ Sentence 102 =============================

This information can then be utilized  to optimize processes to increase the overall efficiency of a business or system. 


>> Tokens are: 
[information, utilized,  , optimize, processes, increase, overall, efficiency, business, system, .] 

>> PoS Tags are: 
[('information', 'NOUN'), ('utilized', 'VERB'), (' ', 'SPACE'), ('optimize', 'VERB'), ('processes', 'NOUN'), ('increase', 'VERB'), ('overall', 'ADJ'), ('efficiency', 'NOUN'), ('business', 'NOUN'), ('system', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('information', 'nsubjpass'), ('utilized', 'ROOT'), (' ', 'dobj'), ('optimize', 'xcomp'), ('processes', 'dobj'), ('increase', 'advcl'), ('overall', 'amod'), ('efficiency', 'dobj'), ('business', 'pobj'), ('system', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[information, utilized], [utilized,  ], [ , optimize], [optimize, processes], [processes, increase], [increase, overall], [overall, efficiency], [efficiency, business], [business, system], [system, .]]

>> Trigrams: 
[[information, utilized,  ], [utilized,  , optimize], [ , optimize, processes], [optimize, processes, increase], [processes, increase, overall], [increase, overall, efficiency], [overall, efficiency, business], [efficiency, business, system], [business, system, .]]

>> Noun Phrases are: 
[This information, processes, the overall efficiency, a business, system]

>> Named Entities are: 
[]


============================ Sentence 103 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 104 =============================

Data analytics techniques can be broken down into four main types based on the  difficulty of analysis and business value. 


>> Tokens are: 
[Data, analytics, techniques, broken, main, types, based,  , difficulty, analysis, business, value, .] 

>> PoS Tags are: 
[('Data', 'PROPN'), ('analytics', 'NOUN'), ('techniques', 'NOUN'), ('broken', 'VERB'), ('main', 'ADJ'), ('types', 'NOUN'), ('based', 'VERB'), (' ', 'SPACE'), ('difficulty', 'NOUN'), ('analysis', 'NOUN'), ('business', 'NOUN'), ('value', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Data', 'compound'), ('analytics', 'compound'), ('techniques', 'nsubjpass'), ('broken', 'ROOT'), ('main', 'amod'), ('types', 'pobj'), ('based', 'acl'), (' ', 'compound'), ('difficulty', 'pobj'), ('analysis', 'pobj'), ('business', 'compound'), ('value', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Data, analytics], [analytics, techniques], [techniques, broken], [broken, main], [main, types], [types, based], [based,  ], [ , difficulty], [difficulty, analysis], [analysis, business], [business, value], [value, .]]

>> Trigrams: 
[[Data, analytics, techniques], [analytics, techniques, broken], [techniques, broken, main], [broken, main, types], [main, types, based], [types, based,  ], [based,  , difficulty], [ , difficulty, analysis], [difficulty, analysis, business], [analysis, business, value], [business, value, .]]

>> Noun Phrases are: 
[Data analytics techniques, four main types, the  difficulty, analysis, business value]

>> Named Entities are: 
[('four', 'CARDINAL')]


============================ Sentence 105 =============================

 a.   


>> Tokens are: 
[ , a.,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('a.', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'nmod'), ('a.', 'compound'), (' ', 'ROOT')]

>> Bigrams: 
[[ , a.], [a.,  ]]

>> Trigrams: 
[[ , a.,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 106 =============================

Descriptive analytics parses raw historical data and draws conclusion that help  managers, investors and others determine why business changes occurred. 


>> Tokens are: 
[Descriptive, analytics, parses, raw, historical, data, draws, conclusion, help,  , managers, ,, investors, determine, business, changes, occurred, .] 

>> PoS Tags are: 
[('Descriptive', 'ADJ'), ('analytics', 'NOUN'), ('parses', 'VERB'), ('raw', 'ADJ'), ('historical', 'ADJ'), ('data', 'NOUN'), ('draws', 'VERB'), ('conclusion', 'NOUN'), ('help', 'VERB'), (' ', 'SPACE'), ('managers', 'NOUN'), (',', 'PUNCT'), ('investors', 'NOUN'), ('determine', 'VERB'), ('business', 'NOUN'), ('changes', 'NOUN'), ('occurred', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Descriptive', 'amod'), ('analytics', 'nsubj'), ('parses', 'ROOT'), ('raw', 'amod'), ('historical', 'amod'), ('data', 'dobj'), ('draws', 'conj'), ('conclusion', 'dobj'), ('help', 'relcl'), (' ', 'compound'), ('managers', 'dobj'), (',', 'punct'), ('investors', 'conj'), ('determine', 'acl'), ('business', 'compound'), ('changes', 'nsubj'), ('occurred', 'ccomp'), ('.', 'punct')]

>> Bigrams: 
[[Descriptive, analytics], [analytics, parses], [parses, raw], [raw, historical], [historical, data], [data, draws], [draws, conclusion], [conclusion, help], [help,  ], [ , managers], [managers, ,], [,, investors], [investors, determine], [determine, business], [business, changes], [changes, occurred], [occurred, .]]

>> Trigrams: 
[[Descriptive, analytics, parses], [analytics, parses, raw], [parses, raw, historical], [raw, historical, data], [historical, data, draws], [data, draws, conclusion], [draws, conclusion, help], [conclusion, help,  ], [help,  , managers], [ , managers, ,], [managers, ,, investors], [,, investors, determine], [investors, determine, business], [determine, business, changes], [business, changes, occurred], [changes, occurred, .]]

>> Noun Phrases are: 
[Descriptive analytics, raw historical data, conclusion,  managers, investors, others, business changes]

>> Named Entities are: 
[]


============================ Sentence 107 =============================

    


>> Tokens are: 
[   ] 

>> PoS Tags are: 
[('   ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 108 =============================

b.   


>> Tokens are: 
[b.,  ] 

>> PoS Tags are: 
[('b.', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('b.', 'ROOT'), (' ', 'appos')]

>> Bigrams: 
[[b.,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[b.]

>> Named Entities are: 
[]


============================ Sentence 109 =============================

Diagnostic analytics provides an understanding of why events took place  by examining data. 


>> Tokens are: 
[Diagnostic, analytics, provides, understanding, events, took, place,  , examining, data, .] 

>> PoS Tags are: 
[('Diagnostic', 'ADJ'), ('analytics', 'NOUN'), ('provides', 'VERB'), ('understanding', 'NOUN'), ('events', 'NOUN'), ('took', 'VERB'), ('place', 'NOUN'), (' ', 'SPACE'), ('examining', 'VERB'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Diagnostic', 'amod'), ('analytics', 'nsubj'), ('provides', 'ROOT'), ('understanding', 'dobj'), ('events', 'nsubj'), ('took', 'pcomp'), ('place', 'dobj'), (' ', 'dobj'), ('examining', 'pcomp'), ('data', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Diagnostic, analytics], [analytics, provides], [provides, understanding], [understanding, events], [events, took], [took, place], [place,  ], [ , examining], [examining, data], [data, .]]

>> Trigrams: 
[[Diagnostic, analytics, provides], [analytics, provides, understanding], [provides, understanding, events], [understanding, events, took], [events, took, place], [took, place,  ], [place,  , examining], [ , examining, data], [examining, data, .]]

>> Noun Phrases are: 
[Diagnostic analytics, an understanding, events, place, data]

>> Named Entities are: 
[('Diagnostic', 'NORP')]


============================ Sentence 110 =============================

A type of advanced analytics, techniques include data  discovery and mining, correlation analysis and drill-down. 


>> Tokens are: 
[type, advanced, analytics, ,, techniques, include, data,  , discovery, mining, ,, correlation, analysis, drill, -, .] 

>> PoS Tags are: 
[('type', 'NOUN'), ('advanced', 'ADJ'), ('analytics', 'NOUN'), (',', 'PUNCT'), ('techniques', 'NOUN'), ('include', 'VERB'), ('data', 'NOUN'), (' ', 'SPACE'), ('discovery', 'NOUN'), ('mining', 'NOUN'), (',', 'PUNCT'), ('correlation', 'NOUN'), ('analysis', 'NOUN'), ('drill', 'NOUN'), ('-', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('type', 'nsubj'), ('advanced', 'amod'), ('analytics', 'pobj'), (',', 'punct'), ('techniques', 'nsubj'), ('include', 'ROOT'), ('data', 'compound'), (' ', 'compound'), ('discovery', 'dobj'), ('mining', 'conj'), (',', 'punct'), ('correlation', 'compound'), ('analysis', 'conj'), ('drill', 'compound'), ('-', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[type, advanced], [advanced, analytics], [analytics, ,], [,, techniques], [techniques, include], [include, data], [data,  ], [ , discovery], [discovery, mining], [mining, ,], [,, correlation], [correlation, analysis], [analysis, drill], [drill, -], [-, .]]

>> Trigrams: 
[[type, advanced, analytics], [advanced, analytics, ,], [analytics, ,, techniques], [,, techniques, include], [techniques, include, data], [include, data,  ], [data,  , discovery], [ , discovery, mining], [discovery, mining, ,], [mining, ,, correlation], [,, correlation, analysis], [correlation, analysis, drill], [analysis, drill, -], [drill, -, .]]

>> Noun Phrases are: 
[A type, advanced analytics, techniques, data  discovery, mining, correlation analysis, drill-down]

>> Named Entities are: 
[]


============================ Sentence 111 =============================

  c.   


>> Tokens are: 
[  , c.,  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('c.', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'nmod'), ('c.', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[  , c.], [c.,  ]]

>> Trigrams: 
[[  , c.,  ]]

>> Noun Phrases are: 
[  c.]

>> Named Entities are: 
[]


============================ Sentence 112 =============================

Predictive analytics uses statistics and modeling to predict future behavior. 


>> Tokens are: 
[Predictive, analytics, uses, statistics, modeling, predict, future, behavior, .] 

>> PoS Tags are: 
[('Predictive', 'ADJ'), ('analytics', 'NOUN'), ('uses', 'VERB'), ('statistics', 'NOUN'), ('modeling', 'NOUN'), ('predict', 'VERB'), ('future', 'ADJ'), ('behavior', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Predictive', 'amod'), ('analytics', 'nsubj'), ('uses', 'ROOT'), ('statistics', 'dobj'), ('modeling', 'conj'), ('predict', 'xcomp'), ('future', 'amod'), ('behavior', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Predictive, analytics], [analytics, uses], [uses, statistics], [statistics, modeling], [modeling, predict], [predict, future], [future, behavior], [behavior, .]]

>> Trigrams: 
[[Predictive, analytics, uses], [analytics, uses, statistics], [uses, statistics, modeling], [statistics, modeling, predict], [modeling, predict, future], [predict, future, behavior], [future, behavior, .]]

>> Noun Phrases are: 
[Predictive analytics, statistics, modeling, future behavior]

>> Named Entities are: 
[]


============================ Sentence 113 =============================

Using  data patterns, predictive analytics identifies when patterns are likely to reoccur  to identify and prevent potential risks, take advantage of future opportunities or  advantageously reallocate resources. 


>> Tokens are: 
[ , data, patterns, ,, predictive, analytics, identifies, patterns, likely, reoccur,  , identify, prevent, potential, risks, ,, advantage, future, opportunities,  , advantageously, reallocate, resources, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('data', 'NOUN'), ('patterns', 'NOUN'), (',', 'PUNCT'), ('predictive', 'ADJ'), ('analytics', 'NOUN'), ('identifies', 'NOUN'), ('patterns', 'NOUN'), ('likely', 'ADJ'), ('reoccur', 'VERB'), (' ', 'SPACE'), ('identify', 'VERB'), ('prevent', 'VERB'), ('potential', 'ADJ'), ('risks', 'NOUN'), (',', 'PUNCT'), ('advantage', 'NOUN'), ('future', 'ADJ'), ('opportunities', 'NOUN'), (' ', 'SPACE'), ('advantageously', 'ADV'), ('reallocate', 'ADJ'), ('resources', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'dobj'), ('data', 'compound'), ('patterns', 'dobj'), (',', 'punct'), ('predictive', 'amod'), ('analytics', 'nsubj'), ('identifies', 'ROOT'), ('patterns', 'nsubj'), ('likely', 'acomp'), ('reoccur', 'xcomp'), (' ', 'dobj'), ('identify', 'xcomp'), ('prevent', 'conj'), ('potential', 'amod'), ('risks', 'dobj'), (',', 'punct'), ('advantage', 'dobj'), ('future', 'amod'), ('opportunities', 'pobj'), (' ', 'nsubj'), ('advantageously', 'advmod'), ('reallocate', 'conj'), ('resources', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[ , data], [data, patterns], [patterns, ,], [,, predictive], [predictive, analytics], [analytics, identifies], [identifies, patterns], [patterns, likely], [likely, reoccur], [reoccur,  ], [ , identify], [identify, prevent], [prevent, potential], [potential, risks], [risks, ,], [,, advantage], [advantage, future], [future, opportunities], [opportunities,  ], [ , advantageously], [advantageously, reallocate], [reallocate, resources], [resources, .]]

>> Trigrams: 
[[ , data, patterns], [data, patterns, ,], [patterns, ,, predictive], [,, predictive, analytics], [predictive, analytics, identifies], [analytics, identifies, patterns], [identifies, patterns, likely], [patterns, likely, reoccur], [likely, reoccur,  ], [reoccur,  , identify], [ , identify, prevent], [identify, prevent, potential], [prevent, potential, risks], [potential, risks, ,], [risks, ,, advantage], [,, advantage, future], [advantage, future, opportunities], [future, opportunities,  ], [opportunities,  , advantageously], [ , advantageously, reallocate], [advantageously, reallocate, resources], [reallocate, resources, .]]

>> Noun Phrases are: 
[data patterns, predictive analytics, patterns, potential risks, advantage, future opportunities, resources]

>> Named Entities are: 
[]


============================ Sentence 114 =============================

  d.   


>> Tokens are: 
[  , d.,  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('d.', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('d.', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[  , d.], [d.,  ]]

>> Trigrams: 
[[  , d.,  ]]

>> Noun Phrases are: 
[d.]

>> Named Entities are: 
[]


============================ Sentence 115 =============================

Prescriptive analytics uses machine learning to analyze raw data to help  organizations make better decision and take a proper course of action. 


>> Tokens are: 
[Prescriptive, analytics, uses, machine, learning, analyze, raw, data, help,  , organizations, better, decision, proper, course, action, .] 

>> PoS Tags are: 
[('Prescriptive', 'ADJ'), ('analytics', 'NOUN'), ('uses', 'VERB'), ('machine', 'NOUN'), ('learning', 'VERB'), ('analyze', 'VERB'), ('raw', 'ADJ'), ('data', 'NOUN'), ('help', 'VERB'), (' ', 'SPACE'), ('organizations', 'NOUN'), ('better', 'ADJ'), ('decision', 'NOUN'), ('proper', 'ADJ'), ('course', 'NOUN'), ('action', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Prescriptive', 'amod'), ('analytics', 'nsubj'), ('uses', 'ROOT'), ('machine', 'dobj'), ('learning', 'xcomp'), ('analyze', 'xcomp'), ('raw', 'amod'), ('data', 'dobj'), ('help', 'advcl'), (' ', 'compound'), ('organizations', 'nsubj'), ('better', 'amod'), ('decision', 'dobj'), ('proper', 'amod'), ('course', 'dobj'), ('action', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Prescriptive, analytics], [analytics, uses], [uses, machine], [machine, learning], [learning, analyze], [analyze, raw], [raw, data], [data, help], [help,  ], [ , organizations], [organizations, better], [better, decision], [decision, proper], [proper, course], [course, action], [action, .]]

>> Trigrams: 
[[Prescriptive, analytics, uses], [analytics, uses, machine], [uses, machine, learning], [machine, learning, analyze], [learning, analyze, raw], [analyze, raw, data], [raw, data, help], [data, help,  ], [help,  , organizations], [ , organizations, better], [organizations, better, decision], [better, decision, proper], [decision, proper, course], [proper, course, action], [course, action, .]]

>> Noun Phrases are: 
[Prescriptive analytics, machine, raw data,  organizations, better decision, a proper course, action]

>> Named Entities are: 
[('Prescriptive', 'ORG')]


============================ Sentence 116 =============================

Factoring  in possible scenarios, available resources, past performance and current  performance, prescriptive analytics help determine the best course of action in  a situation. 


>> Tokens are: 
[Factoring,  , possible, scenarios, ,, available, resources, ,, past, performance, current,  , performance, ,, prescriptive, analytics, help, determine, best, course, action,  , situation, .] 

>> PoS Tags are: 
[('Factoring', 'VERB'), (' ', 'SPACE'), ('possible', 'ADJ'), ('scenarios', 'NOUN'), (',', 'PUNCT'), ('available', 'ADJ'), ('resources', 'NOUN'), (',', 'PUNCT'), ('past', 'ADJ'), ('performance', 'NOUN'), ('current', 'ADJ'), (' ', 'SPACE'), ('performance', 'NOUN'), (',', 'PUNCT'), ('prescriptive', 'ADJ'), ('analytics', 'NOUN'), ('help', 'AUX'), ('determine', 'VERB'), ('best', 'ADJ'), ('course', 'NOUN'), ('action', 'NOUN'), (' ', 'SPACE'), ('situation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Factoring', 'advcl'), (' ', 'dobj'), ('possible', 'amod'), ('scenarios', 'pobj'), (',', 'punct'), ('available', 'amod'), ('resources', 'conj'), (',', 'punct'), ('past', 'amod'), ('performance', 'conj'), ('current', 'amod'), (' ', 'compound'), ('performance', 'conj'), (',', 'punct'), ('prescriptive', 'amod'), ('analytics', 'nsubj'), ('help', 'aux'), ('determine', 'ROOT'), ('best', 'amod'), ('course', 'dobj'), ('action', 'pobj'), (' ', 'pobj'), ('situation', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Factoring,  ], [ , possible], [possible, scenarios], [scenarios, ,], [,, available], [available, resources], [resources, ,], [,, past], [past, performance], [performance, current], [current,  ], [ , performance], [performance, ,], [,, prescriptive], [prescriptive, analytics], [analytics, help], [help, determine], [determine, best], [best, course], [course, action], [action,  ], [ , situation], [situation, .]]

>> Trigrams: 
[[Factoring,  , possible], [ , possible, scenarios], [possible, scenarios, ,], [scenarios, ,, available], [,, available, resources], [available, resources, ,], [resources, ,, past], [,, past, performance], [past, performance, current], [performance, current,  ], [current,  , performance], [ , performance, ,], [performance, ,, prescriptive], [,, prescriptive, analytics], [prescriptive, analytics, help], [analytics, help, determine], [help, determine, best], [determine, best, course], [best, course, action], [course, action,  ], [action,  , situation], [ , situation, .]]

>> Noun Phrases are: 
[possible scenarios, available resources, past performance, current  performance, prescriptive analytics, the best course, action, a situation]

>> Named Entities are: 
[]


============================ Sentence 117 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 118 =============================

Data analytics techniques can be broken down  into four main types based on the difficulty of  analysis and business value:  a.  Descriptive analytics. 


>> Tokens are: 
[Data, analytics, techniques, broken,  , main, types, based, difficulty,  , analysis, business, value, :,  , a.,  , Descriptive, analytics, .] 

>> PoS Tags are: 
[('Data', 'NOUN'), ('analytics', 'NOUN'), ('techniques', 'NOUN'), ('broken', 'VERB'), (' ', 'SPACE'), ('main', 'ADJ'), ('types', 'NOUN'), ('based', 'VERB'), ('difficulty', 'NOUN'), (' ', 'SPACE'), ('analysis', 'NOUN'), ('business', 'NOUN'), ('value', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE'), ('a.', 'NOUN'), (' ', 'SPACE'), ('Descriptive', 'ADJ'), ('analytics', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Data', 'compound'), ('analytics', 'compound'), ('techniques', 'nsubjpass'), ('broken', 'ROOT'), (' ', 'pobj'), ('main', 'amod'), ('types', 'pobj'), ('based', 'acl'), ('difficulty', 'pobj'), (' ', 'pobj'), ('analysis', 'appos'), ('business', 'compound'), ('value', 'conj'), (':', 'punct'), (' ', 'compound'), ('a.', 'compound'), (' ', 'amod'), ('Descriptive', 'amod'), ('analytics', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Data, analytics], [analytics, techniques], [techniques, broken], [broken,  ], [ , main], [main, types], [types, based], [based, difficulty], [difficulty,  ], [ , analysis], [analysis, business], [business, value], [value, :], [:,  ], [ , a.], [a.,  ], [ , Descriptive], [Descriptive, analytics], [analytics, .]]

>> Trigrams: 
[[Data, analytics, techniques], [analytics, techniques, broken], [techniques, broken,  ], [broken,  , main], [ , main, types], [main, types, based], [types, based, difficulty], [based, difficulty,  ], [difficulty,  , analysis], [ , analysis, business], [analysis, business, value], [business, value, :], [value, :,  ], [:,  , a.], [ , a.,  ], [a.,  , Descriptive], [ , Descriptive, analytics], [Descriptive, analytics, .]]

>> Noun Phrases are: 
[Data analytics techniques, four main types, the difficulty, analysis, business value,  a.  Descriptive analytics]

>> Named Entities are: 
[('four', 'CARDINAL')]


============================ Sentence 119 =============================

What happened? 


>> Tokens are: 
[happened, ?] 

>> PoS Tags are: 
[('happened', 'VERB'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('happened', 'ROOT'), ('?', 'punct')]

>> Bigrams: 
[[happened, ?]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[What]

>> Named Entities are: 
[]


============================ Sentence 120 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 121 =============================

b.  Diagnostic analytics. 


>> Tokens are: 
[b.,  , Diagnostic, analytics, .] 

>> PoS Tags are: 
[('b.', 'NOUN'), (' ', 'SPACE'), ('Diagnostic', 'ADJ'), ('analytics', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('b.', 'nmod'), (' ', 'nummod'), ('Diagnostic', 'amod'), ('analytics', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[b.,  ], [ , Diagnostic], [Diagnostic, analytics], [analytics, .]]

>> Trigrams: 
[[b.,  , Diagnostic], [ , Diagnostic, analytics], [Diagnostic, analytics, .]]

>> Noun Phrases are: 
[b.  Diagnostic analytics]

>> Named Entities are: 
[('Diagnostic', 'NORP')]


============================ Sentence 122 =============================

Why did it happen? 


>> Tokens are: 
[happen, ?] 

>> PoS Tags are: 
[('happen', 'VERB'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('happen', 'ROOT'), ('?', 'punct')]

>> Bigrams: 
[[happen, ?]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[it]

>> Named Entities are: 
[]


============================ Sentence 123 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 124 =============================

c.   


>> Tokens are: 
[c.,  ] 

>> PoS Tags are: 
[('c.', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('c.', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[c.,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[c.]

>> Named Entities are: 
[]


============================ Sentence 125 =============================

Predictive analytics. 


>> Tokens are: 
[Predictive, analytics, .] 

>> PoS Tags are: 
[('Predictive', 'ADJ'), ('analytics', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Predictive', 'amod'), ('analytics', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Predictive, analytics], [analytics, .]]

>> Trigrams: 
[[Predictive, analytics, .]]

>> Noun Phrases are: 
[Predictive analytics]

>> Named Entities are: 
[]


============================ Sentence 126 =============================

What will happen?   


>> Tokens are: 
[happen, ?,  ] 

>> PoS Tags are: 
[('happen', 'VERB'), ('?', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('happen', 'ROOT'), ('?', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[happen, ?], [?,  ]]

>> Trigrams: 
[[happen, ?,  ]]

>> Noun Phrases are: 
[What]

>> Named Entities are: 
[]


============================ Sentence 127 =============================

d.   


>> Tokens are: 
[d.,  ] 

>> PoS Tags are: 
[('d.', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('d.', 'compound'), (' ', 'ROOT')]

>> Bigrams: 
[[d.,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 128 =============================

Prescriptive analytics. 


>> Tokens are: 
[Prescriptive, analytics, .] 

>> PoS Tags are: 
[('Prescriptive', 'PROPN'), ('analytics', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Prescriptive', 'amod'), ('analytics', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Prescriptive, analytics], [analytics, .]]

>> Trigrams: 
[[Prescriptive, analytics, .]]

>> Noun Phrases are: 
[Prescriptive analytics]

>> Named Entities are: 
[]


============================ Sentence 129 =============================

How can we make it  happen? 


>> Tokens are: 
[ , happen, ?] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('happen', 'VERB'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nsubj'), ('happen', 'ccomp'), ('?', 'punct')]

>> Bigrams: 
[[ , happen], [happen, ?]]

>> Trigrams: 
[[ , happen, ?]]

>> Noun Phrases are: 
[we, it]

>> Named Entities are: 
[]


============================ Sentence 130 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 131 =============================

Business value   


>> Tokens are: 
[Business, value,  ] 

>> PoS Tags are: 
[('Business', 'NOUN'), ('value', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Business', 'compound'), ('value', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Business, value], [value,  ]]

>> Trigrams: 
[[Business, value,  ]]

>> Noun Phrases are: 
[Business value]

>> Named Entities are: 
[]


============================ Sentence 132 =============================

Difficulty   


>> Tokens are: 
[Difficulty,  ] 

>> PoS Tags are: 
[('Difficulty', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Difficulty', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[Difficulty,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Difficulty]

>> Named Entities are: 
[]


============================ Sentence 133 =============================

Predictive analytics What will happen? 


>> Tokens are: 
[Predictive, analytics, happen, ?] 

>> PoS Tags are: 
[('Predictive', 'ADJ'), ('analytics', 'NOUN'), ('happen', 'VERB'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('Predictive', 'amod'), ('analytics', 'ROOT'), ('happen', 'relcl'), ('?', 'punct')]

>> Bigrams: 
[[Predictive, analytics], [analytics, happen], [happen, ?]]

>> Trigrams: 
[[Predictive, analytics, happen], [analytics, happen, ?]]

>> Noun Phrases are: 
[Predictive analytics, What]

>> Named Entities are: 
[]


============================ Sentence 134 =============================

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 135 =============================

Prescriptive  analytics   


>> Tokens are: 
[Prescriptive,  , analytics,  ] 

>> PoS Tags are: 
[('Prescriptive', 'PROPN'), (' ', 'SPACE'), ('analytics', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prescriptive', 'nmod'), (' ', 'nummod'), ('analytics', 'ROOT'), (' ', 'appos')]

>> Bigrams: 
[[Prescriptive,  ], [ , analytics], [analytics,  ]]

>> Trigrams: 
[[Prescriptive,  , analytics], [ , analytics,  ]]

>> Noun Phrases are: 
[Prescriptive  analytics]

>> Named Entities are: 
[]


============================ Sentence 136 =============================

How can we  make it happen? 


>> Tokens are: 
[ , happen, ?] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('happen', 'VERB'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nsubj'), ('happen', 'ccomp'), ('?', 'punct')]

>> Bigrams: 
[[ , happen], [happen, ?]]

>> Trigrams: 
[[ , happen, ?]]

>> Noun Phrases are: 
[we, it]

>> Named Entities are: 
[]


============================ Sentence 137 =============================

Diagnostic analytics    


>> Tokens are: 
[Diagnostic, analytics,   ] 

>> PoS Tags are: 
[('Diagnostic', 'ADJ'), ('analytics', 'NOUN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Diagnostic', 'amod'), ('analytics', 'compound'), ('  ', 'ROOT')]

>> Bigrams: 
[[Diagnostic, analytics], [analytics,   ]]

>> Trigrams: 
[[Diagnostic, analytics,   ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 138 =============================

Why did it happen? 


>> Tokens are: 
[happen, ?] 

>> PoS Tags are: 
[('happen', 'VERB'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('happen', 'ROOT'), ('?', 'punct')]

>> Bigrams: 
[[happen, ?]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[it]

>> Named Entities are: 
[]


============================ Sentence 139 =============================

 Descriptive analytics   


>> Tokens are: 
[ , Descriptive, analytics,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Descriptive', 'ADJ'), ('analytics', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'nmod'), ('Descriptive', 'amod'), ('analytics', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[ , Descriptive], [Descriptive, analytics], [analytics,  ]]

>> Trigrams: 
[[ , Descriptive, analytics], [Descriptive, analytics,  ]]

>> Noun Phrases are: 
[ Descriptive analytics]

>> Named Entities are: 
[]


============================ Sentence 140 =============================

What happened? 


>> Tokens are: 
[happened, ?] 

>> PoS Tags are: 
[('happened', 'VERB'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('happened', 'ROOT'), ('?', 'punct')]

>> Bigrams: 
[[happened, ?]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[What]

>> Named Entities are: 
[]


============================ Sentence 141 =============================

   7/14Demystifying data science   What are the requirements for adopting AI? 


>> Tokens are: 
[   , 7/14Demystifying, data, science,   , requirements, adopting, AI, ?] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('7/14Demystifying', 'NOUN'), ('data', 'NOUN'), ('science', 'NOUN'), ('  ', 'SPACE'), ('requirements', 'NOUN'), ('adopting', 'VERB'), ('AI', 'PROPN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('   ', 'nummod'), ('7/14Demystifying', 'compound'), ('data', 'compound'), ('science', 'compound'), ('  ', 'dep'), ('requirements', 'nsubj'), ('adopting', 'pcomp'), ('AI', 'dobj'), ('?', 'punct')]

>> Bigrams: 
[[   , 7/14Demystifying], [7/14Demystifying, data], [data, science], [science,   ], [  , requirements], [requirements, adopting], [adopting, AI], [AI, ?]]

>> Trigrams: 
[[   , 7/14Demystifying, data], [7/14Demystifying, data, science], [data, science,   ], [science,   , requirements], [  , requirements, adopting], [requirements, adopting, AI], [adopting, AI, ?]]

>> Noun Phrases are: 
[What, the requirements, AI]

>> Named Entities are: 
[('AI', 'ORG')]


============================ Sentence 142 =============================

This hierarchical pyramid explains the competencies every organization requires   to ensure a successful AI implementation. 


>> Tokens are: 
[hierarchical, pyramid, explains, competencies, organization, requires,   , ensure, successful, AI, implementation, .] 

>> PoS Tags are: 
[('hierarchical', 'ADJ'), ('pyramid', 'NOUN'), ('explains', 'VERB'), ('competencies', 'NOUN'), ('organization', 'NOUN'), ('requires', 'VERB'), ('  ', 'SPACE'), ('ensure', 'VERB'), ('successful', 'ADJ'), ('AI', 'PROPN'), ('implementation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('hierarchical', 'amod'), ('pyramid', 'nsubj'), ('explains', 'ROOT'), ('competencies', 'dobj'), ('organization', 'nsubj'), ('requires', 'relcl'), ('  ', 'dobj'), ('ensure', 'xcomp'), ('successful', 'amod'), ('AI', 'compound'), ('implementation', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[hierarchical, pyramid], [pyramid, explains], [explains, competencies], [competencies, organization], [organization, requires], [requires,   ], [  , ensure], [ensure, successful], [successful, AI], [AI, implementation], [implementation, .]]

>> Trigrams: 
[[hierarchical, pyramid, explains], [pyramid, explains, competencies], [explains, competencies, organization], [competencies, organization, requires], [organization, requires,   ], [requires,   , ensure], [  , ensure, successful], [ensure, successful, AI], [successful, AI, implementation], [AI, implementation, .]]

>> Noun Phrases are: 
[This hierarchical pyramid, the competencies, every organization, a successful AI implementation]

>> Named Entities are: 
[('AI', 'ORG')]


============================ Sentence 143 =============================

  AI,  deep learning  Machine learning  and benchmarking:   


>> Tokens are: 
[  , AI, ,,  , deep, learning,  , Machine, learning,  , benchmarking, :,  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('AI', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE'), ('deep', 'ADJ'), ('learning', 'VERB'), (' ', 'SPACE'), ('Machine', 'NOUN'), ('learning', 'VERB'), (' ', 'SPACE'), ('benchmarking', 'VERB'), (':', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'nummod'), ('AI', 'nsubj'), (',', 'punct'), (' ', 'appos'), ('deep', 'advmod'), ('learning', 'ROOT'), (' ', 'compound'), ('Machine', 'nsubj'), ('learning', 'ccomp'), (' ', 'dobj'), ('benchmarking', 'conj'), (':', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[  , AI], [AI, ,], [,,  ], [ , deep], [deep, learning], [learning,  ], [ , Machine], [Machine, learning], [learning,  ], [ , benchmarking], [benchmarking, :], [:,  ]]

>> Trigrams: 
[[  , AI, ,], [AI, ,,  ], [,,  , deep], [ , deep, learning], [deep, learning,  ], [learning,  , Machine], [ , Machine, learning], [Machine, learning,  ], [learning,  , benchmarking], [ , benchmarking, :], [benchmarking, :,  ]]

>> Noun Phrases are: 
[  AI,  Machine]

>> Named Entities are: 
[('AI', 'ORG')]


============================ Sentence 144 =============================

A/B testing,  experimentation  BI or analytics:  Metrics, segmentation,  aggregation, data labelling  Explore and transform:   


>> Tokens are: 
[/, B, testing, ,,  , experimentation,  , BI, analytics, :,  , Metrics, ,, segmentation, ,,  , aggregation, ,, data, labelling,  , Explore, transform, :,  ] 

>> PoS Tags are: 
[('/', 'SYM'), ('B', 'NOUN'), ('testing', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('experimentation', 'NOUN'), (' ', 'SPACE'), ('BI', 'PROPN'), ('analytics', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE'), ('Metrics', 'PROPN'), (',', 'PUNCT'), ('segmentation', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('aggregation', 'NOUN'), (',', 'PUNCT'), ('data', 'NOUN'), ('labelling', 'NOUN'), (' ', 'SPACE'), ('Explore', 'NOUN'), ('transform', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('/', 'punct'), ('B', 'compound'), ('testing', 'ROOT'), (',', 'punct'), (' ', 'compound'), ('experimentation', 'compound'), (' ', 'compound'), ('BI', 'appos'), ('analytics', 'conj'), (':', 'punct'), (' ', 'compound'), ('Metrics', 'conj'), (',', 'punct'), ('segmentation', 'conj'), (',', 'punct'), (' ', 'compound'), ('aggregation', 'conj'), (',', 'punct'), ('data', 'compound'), ('labelling', 'appos'), (' ', 'compound'), ('Explore', 'conj'), ('transform', 'conj'), (':', 'punct'), (' ', 'conj')]

>> Bigrams: 
[[/, B], [B, testing], [testing, ,], [,,  ], [ , experimentation], [experimentation,  ], [ , BI], [BI, analytics], [analytics, :], [:,  ], [ , Metrics], [Metrics, ,], [,, segmentation], [segmentation, ,], [,,  ], [ , aggregation], [aggregation, ,], [,, data], [data, labelling], [labelling,  ], [ , Explore], [Explore, transform], [transform, :], [:,  ]]

>> Trigrams: 
[[/, B, testing], [B, testing, ,], [testing, ,,  ], [,,  , experimentation], [ , experimentation,  ], [experimentation,  , BI], [ , BI, analytics], [BI, analytics, :], [analytics, :,  ], [:,  , Metrics], [ , Metrics, ,], [Metrics, ,, segmentation], [,, segmentation, ,], [segmentation, ,,  ], [,,  , aggregation], [ , aggregation, ,], [aggregation, ,, data], [,, data, labelling], [data, labelling,  ], [labelling,  , Explore], [ , Explore, transform], [Explore, transform, :], [transform, :,  ]]

>> Noun Phrases are: 
[A/B testing,  experimentation  BI, analytics,  Metrics, segmentation,  aggregation, data labelling,  Explore, transform]

>> Named Entities are: 
[('BI', 'ORG')]


============================ Sentence 145 =============================

Data preparation, cleaning  and exploratory data analysis   


>> Tokens are: 
[Data, preparation, ,, cleaning,  , exploratory, data, analysis,  ] 

>> PoS Tags are: 
[('Data', 'NOUN'), ('preparation', 'NOUN'), (',', 'PUNCT'), ('cleaning', 'VERB'), (' ', 'SPACE'), ('exploratory', 'ADJ'), ('data', 'NOUN'), ('analysis', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Data', 'compound'), ('preparation', 'ROOT'), (',', 'punct'), ('cleaning', 'acl'), (' ', 'dobj'), ('exploratory', 'amod'), ('data', 'compound'), ('analysis', 'conj'), (' ', 'appos')]

>> Bigrams: 
[[Data, preparation], [preparation, ,], [,, cleaning], [cleaning,  ], [ , exploratory], [exploratory, data], [data, analysis], [analysis,  ]]

>> Trigrams: 
[[Data, preparation, ,], [preparation, ,, cleaning], [,, cleaning,  ], [cleaning,  , exploratory], [ , exploratory, data], [exploratory, data, analysis], [data, analysis,  ]]

>> Noun Phrases are: 
[Data preparation, exploratory data analysis]

>> Named Entities are: 
[]


============================ Sentence 146 =============================

Data flow:   


>> Tokens are: 
[Data, flow, :,  ] 

>> PoS Tags are: 
[('Data', 'PROPN'), ('flow', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Data', 'compound'), ('flow', 'ROOT'), (':', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Data, flow], [flow, :], [:,  ]]

>> Trigrams: 
[[Data, flow, :], [flow, :,  ]]

>> Noun Phrases are: 
[Data flow]

>> Named Entities are: 
[]


============================ Sentence 147 =============================

Infrastructure, pipelines, ETL,  structured and unstructured data storage   


>> Tokens are: 
[Infrastructure, ,, pipelines, ,, ETL, ,,  , structured, unstructured, data, storage,  ] 

>> PoS Tags are: 
[('Infrastructure', 'NOUN'), (',', 'PUNCT'), ('pipelines', 'NOUN'), (',', 'PUNCT'), ('ETL', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE'), ('structured', 'VERB'), ('unstructured', 'ADJ'), ('data', 'NOUN'), ('storage', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Infrastructure', 'ROOT'), (',', 'punct'), ('pipelines', 'conj'), (',', 'punct'), ('ETL', 'conj'), (',', 'punct'), (' ', 'conj'), ('structured', 'amod'), ('unstructured', 'conj'), ('data', 'compound'), ('storage', 'compound'), (' ', 'appos')]

>> Bigrams: 
[[Infrastructure, ,], [,, pipelines], [pipelines, ,], [,, ETL], [ETL, ,], [,,  ], [ , structured], [structured, unstructured], [unstructured, data], [data, storage], [storage,  ]]

>> Trigrams: 
[[Infrastructure, ,, pipelines], [,, pipelines, ,], [pipelines, ,, ETL], [,, ETL, ,], [ETL, ,,  ], [,,  , structured], [ , structured, unstructured], [structured, unstructured, data], [unstructured, data, storage], [data, storage,  ]]

>> Noun Phrases are: 
[Infrastructure, pipelines, ETL]

>> Named Entities are: 
[('ETL', 'ORG')]


============================ Sentence 148 =============================

Data collection:   


>> Tokens are: 
[Data, collection, :,  ] 

>> PoS Tags are: 
[('Data', 'PROPN'), ('collection', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Data', 'compound'), ('collection', 'ROOT'), (':', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Data, collection], [collection, :], [:,  ]]

>> Trigrams: 
[[Data, collection, :], [collection, :,  ]]

>> Noun Phrases are: 
[Data collection]

>> Named Entities are: 
[]


============================ Sentence 149 =============================

External data, logging, sensors,  user generated content  AI,  deep   learning  Machine learning  and benchmarking:   A/B testing,  experimentation  BI or analytics:  Metrics, segmentation,   aggregation, data labelling  Explore and transform:  Data preparation, cleaning   and exploratory data analysis   


>> Tokens are: 
[External, data, ,, logging, ,, sensors, ,,  , user, generated, content,  , AI, ,,  , deep,   , learning,  , Machine, learning,  , benchmarking, :,   , /, B, testing, ,,  , experimentation,  , BI, analytics, :,  , Metrics, ,, segmentation, ,,   , aggregation, ,, data, labelling,  , Explore, transform, :,  , Data, preparation, ,, cleaning,   , exploratory, data, analysis,  ] 

>> PoS Tags are: 
[('External', 'ADJ'), ('data', 'NOUN'), (',', 'PUNCT'), ('logging', 'VERB'), (',', 'PUNCT'), ('sensors', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('user', 'NOUN'), ('generated', 'VERB'), ('content', 'NOUN'), (' ', 'SPACE'), ('AI', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE'), ('deep', 'ADJ'), ('  ', 'SPACE'), ('learning', 'VERB'), (' ', 'SPACE'), ('Machine', 'NOUN'), ('learning', 'VERB'), (' ', 'SPACE'), ('benchmarking', 'VERB'), (':', 'PUNCT'), ('  ', 'SPACE'), ('/', 'SYM'), ('B', 'NOUN'), ('testing', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('experimentation', 'NOUN'), (' ', 'SPACE'), ('BI', 'PROPN'), ('analytics', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE'), ('Metrics', 'PROPN'), (',', 'PUNCT'), ('segmentation', 'NOUN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('aggregation', 'NOUN'), (',', 'PUNCT'), ('data', 'NOUN'), ('labelling', 'NOUN'), (' ', 'SPACE'), ('Explore', 'NOUN'), ('transform', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE'), ('Data', 'NOUN'), ('preparation', 'NOUN'), (',', 'PUNCT'), ('cleaning', 'VERB'), ('  ', 'SPACE'), ('exploratory', 'ADJ'), ('data', 'NOUN'), ('analysis', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('External', 'amod'), ('data', 'nsubj'), (',', 'punct'), ('logging', 'acl'), (',', 'punct'), ('sensors', 'conj'), (',', 'punct'), (' ', 'compound'), ('user', 'nsubj'), ('generated', 'ROOT'), ('content', 'nmod'), (' ', 'compound'), ('AI', 'dobj'), (',', 'punct'), (' ', 'appos'), ('deep', 'amod'), ('  ', 'nsubj'), ('learning', 'advcl'), (' ', 'compound'), ('Machine', 'nsubj'), ('learning', 'ccomp'), (' ', 'dobj'), ('benchmarking', 'conj'), (':', 'punct'), ('  ', 'nmod'), ('/', 'punct'), ('B', 'compound'), ('testing', 'appos'), (',', 'punct'), (' ', 'compound'), ('experimentation', 'compound'), (' ', 'compound'), ('BI', 'appos'), ('analytics', 'conj'), (':', 'punct'), (' ', 'compound'), ('Metrics', 'npadvmod'), (',', 'punct'), ('segmentation', 'appos'), (',', 'punct'), ('  ', 'compound'), ('aggregation', 'conj'), (',', 'punct'), ('data', 'compound'), ('labelling', 'appos'), (' ', 'compound'), ('Explore', 'dobj'), ('transform', 'conj'), (':', 'punct'), (' ', 'appos'), ('Data', 'compound'), ('preparation', 'conj'), (',', 'punct'), ('cleaning', 'acl'), ('  ', 'dobj'), ('exploratory', 'amod'), ('data', 'compound'), ('analysis', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[External, data], [data, ,], [,, logging], [logging, ,], [,, sensors], [sensors, ,], [,,  ], [ , user], [user, generated], [generated, content], [content,  ], [ , AI], [AI, ,], [,,  ], [ , deep], [deep,   ], [  , learning], [learning,  ], [ , Machine], [Machine, learning], [learning,  ], [ , benchmarking], [benchmarking, :], [:,   ], [  , /], [/, B], [B, testing], [testing, ,], [,,  ], [ , experimentation], [experimentation,  ], [ , BI], [BI, analytics], [analytics, :], [:,  ], [ , Metrics], [Metrics, ,], [,, segmentation], [segmentation, ,], [,,   ], [  , aggregation], [aggregation, ,], [,, data], [data, labelling], [labelling,  ], [ , Explore], [Explore, transform], [transform, :], [:,  ], [ , Data], [Data, preparation], [preparation, ,], [,, cleaning], [cleaning,   ], [  , exploratory], [exploratory, data], [data, analysis], [analysis,  ]]

>> Trigrams: 
[[External, data, ,], [data, ,, logging], [,, logging, ,], [logging, ,, sensors], [,, sensors, ,], [sensors, ,,  ], [,,  , user], [ , user, generated], [user, generated, content], [generated, content,  ], [content,  , AI], [ , AI, ,], [AI, ,,  ], [,,  , deep], [ , deep,   ], [deep,   , learning], [  , learning,  ], [learning,  , Machine], [ , Machine, learning], [Machine, learning,  ], [learning,  , benchmarking], [ , benchmarking, :], [benchmarking, :,   ], [:,   , /], [  , /, B], [/, B, testing], [B, testing, ,], [testing, ,,  ], [,,  , experimentation], [ , experimentation,  ], [experimentation,  , BI], [ , BI, analytics], [BI, analytics, :], [analytics, :,  ], [:,  , Metrics], [ , Metrics, ,], [Metrics, ,, segmentation], [,, segmentation, ,], [segmentation, ,,   ], [,,   , aggregation], [  , aggregation, ,], [aggregation, ,, data], [,, data, labelling], [data, labelling,  ], [labelling,  , Explore], [ , Explore, transform], [Explore, transform, :], [transform, :,  ], [:,  , Data], [ , Data, preparation], [Data, preparation, ,], [preparation, ,, cleaning], [,, cleaning,   ], [cleaning,   , exploratory], [  , exploratory, data], [exploratory, data, analysis], [data, analysis,  ]]

>> Noun Phrases are: 
[External data,  user, content  AI,  Machine,   A/B testing,  experimentation  BI, analytics, segmentation,   aggregation, data labelling,  Explore, transform, exploratory data analysis]

>> Named Entities are: 
[('AI', 'ORG'), ('BI', 'ORG')]


============================ Sentence 150 =============================

Data flow:   


>> Tokens are: 
[Data, flow, :,  ] 

>> PoS Tags are: 
[('Data', 'PROPN'), ('flow', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Data', 'compound'), ('flow', 'ROOT'), (':', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Data, flow], [flow, :], [:,  ]]

>> Trigrams: 
[[Data, flow, :], [flow, :,  ]]

>> Noun Phrases are: 
[Data flow]

>> Named Entities are: 
[]


============================ Sentence 151 =============================

Infrastructure, pipelines, ETL,   structured and unstructured data storage  Data collection: 


>> Tokens are: 
[Infrastructure, ,, pipelines, ,, ETL, ,,   , structured, unstructured, data, storage,  , Data, collection, :] 

>> PoS Tags are: 
[('Infrastructure', 'NOUN'), (',', 'PUNCT'), ('pipelines', 'NOUN'), (',', 'PUNCT'), ('ETL', 'NOUN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('structured', 'VERB'), ('unstructured', 'ADJ'), ('data', 'NOUN'), ('storage', 'NOUN'), (' ', 'SPACE'), ('Data', 'PROPN'), ('collection', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Infrastructure', 'npadvmod'), (',', 'punct'), ('pipelines', 'conj'), (',', 'punct'), ('ETL', 'conj'), (',', 'punct'), ('  ', 'nsubj'), ('structured', 'ROOT'), ('unstructured', 'amod'), ('data', 'compound'), ('storage', 'conj'), (' ', 'compound'), ('Data', 'compound'), ('collection', 'appos'), (':', 'punct')]

>> Bigrams: 
[[Infrastructure, ,], [,, pipelines], [pipelines, ,], [,, ETL], [ETL, ,], [,,   ], [  , structured], [structured, unstructured], [unstructured, data], [data, storage], [storage,  ], [ , Data], [Data, collection], [collection, :]]

>> Trigrams: 
[[Infrastructure, ,, pipelines], [,, pipelines, ,], [pipelines, ,, ETL], [,, ETL, ,], [ETL, ,,   ], [,,   , structured], [  , structured, unstructured], [structured, unstructured, data], [unstructured, data, storage], [data, storage,  ], [storage,  , Data], [ , Data, collection], [Data, collection, :]]

>> Noun Phrases are: 
[unstructured data storage,  Data collection]

>> Named Entities are: 
[]


============================ Sentence 152 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 153 =============================

External data, logging, sensors,   user generated content  Data collection. 


>> Tokens are: 
[External, data, ,, logging, ,, sensors, ,,   , user, generated, content,  , Data, collection, .] 

>> PoS Tags are: 
[('External', 'ADJ'), ('data', 'NOUN'), (',', 'PUNCT'), ('logging', 'VERB'), (',', 'PUNCT'), ('sensors', 'NOUN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('user', 'NOUN'), ('generated', 'VERB'), ('content', 'NOUN'), (' ', 'SPACE'), ('Data', 'PROPN'), ('collection', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('External', 'amod'), ('data', 'nsubj'), (',', 'punct'), ('logging', 'acl'), (',', 'punct'), ('sensors', 'conj'), (',', 'punct'), ('  ', 'nummod'), ('user', 'nsubj'), ('generated', 'ROOT'), ('content', 'dobj'), (' ', 'compound'), ('Data', 'compound'), ('collection', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[External, data], [data, ,], [,, logging], [logging, ,], [,, sensors], [sensors, ,], [,,   ], [  , user], [user, generated], [generated, content], [content,  ], [ , Data], [Data, collection], [collection, .]]

>> Trigrams: 
[[External, data, ,], [data, ,, logging], [,, logging, ,], [logging, ,, sensors], [,, sensors, ,], [sensors, ,,   ], [,,   , user], [  , user, generated], [user, generated, content], [generated, content,  ], [content,  , Data], [ , Data, collection], [Data, collection, .]]

>> Noun Phrases are: 
[External data,   user, content,  Data collection]

>> Named Entities are: 
[]


============================ Sentence 154 =============================

At the bottom of the pyramid is data collection. 


>> Tokens are: 
[pyramid, data, collection, .] 

>> PoS Tags are: 
[('pyramid', 'NOUN'), ('data', 'NOUN'), ('collection', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('pyramid', 'pobj'), ('data', 'compound'), ('collection', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[pyramid, data], [data, collection], [collection, .]]

>> Trigrams: 
[[pyramid, data, collection], [data, collection, .]]

>> Noun Phrases are: 
[the bottom, the pyramid, data collection]

>> Named Entities are: 
[]


============================ Sentence 155 =============================

At this stage, the  goal is to identify what data is needed and what is available. 


>> Tokens are: 
[stage, ,,  , goal, identify, data, needed, available, .] 

>> PoS Tags are: 
[('stage', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('goal', 'NOUN'), ('identify', 'VERB'), ('data', 'NOUN'), ('needed', 'VERB'), ('available', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('stage', 'pobj'), (',', 'punct'), (' ', 'compound'), ('goal', 'nsubj'), ('identify', 'xcomp'), ('data', 'nsubjpass'), ('needed', 'ccomp'), ('available', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[stage, ,], [,,  ], [ , goal], [goal, identify], [identify, data], [data, needed], [needed, available], [available, .]]

>> Trigrams: 
[[stage, ,,  ], [,,  , goal], [ , goal, identify], [goal, identify, data], [identify, data, needed], [data, needed, available], [needed, available, .]]

>> Noun Phrases are: 
[this stage, the  goal, what data, what]

>> Named Entities are: 
[]


============================ Sentence 156 =============================

If it is a user-facing  product, are all relevant interactions logged? 


>> Tokens are: 
[user, -, facing,  , product, ,, relevant, interactions, logged, ?] 

>> PoS Tags are: 
[('user', 'NOUN'), ('-', 'PUNCT'), ('facing', 'VERB'), (' ', 'SPACE'), ('product', 'NOUN'), (',', 'PUNCT'), ('relevant', 'ADJ'), ('interactions', 'NOUN'), ('logged', 'VERB'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('user', 'npadvmod'), ('-', 'punct'), ('facing', 'amod'), (' ', 'compound'), ('product', 'attr'), (',', 'punct'), ('relevant', 'amod'), ('interactions', 'attr'), ('logged', 'acl'), ('?', 'punct')]

>> Bigrams: 
[[user, -], [-, facing], [facing,  ], [ , product], [product, ,], [,, relevant], [relevant, interactions], [interactions, logged], [logged, ?]]

>> Trigrams: 
[[user, -, facing], [-, facing,  ], [facing,  , product], [ , product, ,], [product, ,, relevant], [,, relevant, interactions], [relevant, interactions, logged], [interactions, logged, ?]]

>> Noun Phrases are: 
[it, a user-facing  product, relevant interactions]

>> Named Entities are: 
[]


============================ Sentence 157 =============================

If it is a sensor, what data is coming  through and how? 


>> Tokens are: 
[sensor, ,, data, coming,  , ?] 

>> PoS Tags are: 
[('sensor', 'NOUN'), (',', 'PUNCT'), ('data', 'NOUN'), ('coming', 'VERB'), (' ', 'SPACE'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('sensor', 'attr'), (',', 'punct'), ('data', 'nsubj'), ('coming', 'ROOT'), (' ', 'dobj'), ('?', 'punct')]

>> Bigrams: 
[[sensor, ,], [,, data], [data, coming], [coming,  ], [ , ?]]

>> Trigrams: 
[[sensor, ,, data], [,, data, coming], [data, coming,  ], [coming,  , ?]]

>> Noun Phrases are: 
[it, a sensor, what data]

>> Named Entities are: 
[]


============================ Sentence 158 =============================

Without data, no machine learning or AI solution can learn or  predict outcomes. 


>> Tokens are: 
[data, ,, machine, learning, AI, solution, learn,  , predict, outcomes, .] 

>> PoS Tags are: 
[('data', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('AI', 'NOUN'), ('solution', 'NOUN'), ('learn', 'VERB'), (' ', 'SPACE'), ('predict', 'VERB'), ('outcomes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('data', 'pobj'), (',', 'punct'), ('machine', 'compound'), ('learning', 'nsubj'), ('AI', 'compound'), ('solution', 'conj'), ('learn', 'ROOT'), (' ', 'nsubj'), ('predict', 'conj'), ('outcomes', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[data, ,], [,, machine], [machine, learning], [learning, AI], [AI, solution], [solution, learn], [learn,  ], [ , predict], [predict, outcomes], [outcomes, .]]

>> Trigrams: 
[[data, ,, machine], [,, machine, learning], [machine, learning, AI], [learning, AI, solution], [AI, solution, learn], [solution, learn,  ], [learn,  , predict], [ , predict, outcomes], [predict, outcomes, .]]

>> Noun Phrases are: 
[data, no machine learning, AI solution, outcomes]

>> Named Entities are: 
[('AI', 'ORG')]


============================ Sentence 159 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 160 =============================

Data flow. 


>> Tokens are: 
[Data, flow, .] 

>> PoS Tags are: 
[('Data', 'NOUN'), ('flow', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Data', 'compound'), ('flow', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Data, flow], [flow, .]]

>> Trigrams: 
[[Data, flow, .]]

>> Noun Phrases are: 
[Data flow]

>> Named Entities are: 
[]


============================ Sentence 161 =============================

Identify how the data flows through the system. 


>> Tokens are: 
[Identify, data, flows, system, .] 

>> PoS Tags are: 
[('Identify', 'VERB'), ('data', 'NOUN'), ('flows', 'VERB'), ('system', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Identify', 'ROOT'), ('data', 'nsubj'), ('flows', 'ccomp'), ('system', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Identify, data], [data, flows], [flows, system], [system, .]]

>> Trigrams: 
[[Identify, data, flows], [data, flows, system], [flows, system, .]]

>> Noun Phrases are: 
[the data, the system]

>> Named Entities are: 
[]


============================ Sentence 162 =============================

Is there a reliable  stream/ETL process established? 


>> Tokens are: 
[reliable,  , stream, /, ETL, process, established, ?] 

>> PoS Tags are: 
[('reliable', 'ADJ'), (' ', 'SPACE'), ('stream', 'NOUN'), ('/', 'SYM'), ('ETL', 'NOUN'), ('process', 'NOUN'), ('established', 'VERB'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('reliable', 'amod'), (' ', 'compound'), ('stream', 'nmod'), ('/', 'punct'), ('ETL', 'compound'), ('process', 'attr'), ('established', 'acl'), ('?', 'punct')]

>> Bigrams: 
[[reliable,  ], [ , stream], [stream, /], [/, ETL], [ETL, process], [process, established], [established, ?]]

>> Trigrams: 
[[reliable,  , stream], [ , stream, /], [stream, /, ETL], [/, ETL, process], [ETL, process, established], [process, established, ?]]

>> Noun Phrases are: 
[a reliable  stream/ETL process]

>> Named Entities are: 
[]


============================ Sentence 163 =============================

Where is the data stored, and how easy is it to  access and analyze?   


>> Tokens are: 
[data, stored, ,, easy,  , access, analyze, ?,  ] 

>> PoS Tags are: 
[('data', 'NOUN'), ('stored', 'VERB'), (',', 'PUNCT'), ('easy', 'ADJ'), (' ', 'SPACE'), ('access', 'NOUN'), ('analyze', 'VERB'), ('?', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('data', 'nsubj'), ('stored', 'acomp'), (',', 'punct'), ('easy', 'acomp'), (' ', 'pobj'), ('access', 'nsubj'), ('analyze', 'conj'), ('?', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[data, stored], [stored, ,], [,, easy], [easy,  ], [ , access], [access, analyze], [analyze, ?], [?,  ]]

>> Trigrams: 
[[data, stored, ,], [stored, ,, easy], [,, easy,  ], [easy,  , access], [ , access, analyze], [access, analyze, ?], [analyze, ?,  ]]

>> Noun Phrases are: 
[the data, it, access]

>> Named Entities are: 
[]


============================ Sentence 164 =============================

Explore and transform. 


>> Tokens are: 
[Explore, transform, .] 

>> PoS Tags are: 
[('Explore', 'NOUN'), ('transform', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Explore', 'ROOT'), ('transform', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Explore, transform], [transform, .]]

>> Trigrams: 
[[Explore, transform, .]]

>> Noun Phrases are: 
[Explore, transform]

>> Named Entities are: 
[]


============================ Sentence 165 =============================

Only when data is accessible can it be explored and  transformed for modelling. 


>> Tokens are: 
[data, accessible, explored,  , transformed, modelling, .] 

>> PoS Tags are: 
[('data', 'NOUN'), ('accessible', 'ADJ'), ('explored', 'VERB'), (' ', 'SPACE'), ('transformed', 'VERB'), ('modelling', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('data', 'nsubj'), ('accessible', 'acomp'), ('explored', 'ROOT'), (' ', 'nsubj'), ('transformed', 'conj'), ('modelling', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[data, accessible], [accessible, explored], [explored,  ], [ , transformed], [transformed, modelling], [modelling, .]]

>> Trigrams: 
[[data, accessible, explored], [accessible, explored,  ], [explored,  , transformed], [ , transformed, modelling], [transformed, modelling, .]]

>> Noun Phrases are: 
[data, it, modelling]

>> Named Entities are: 
[]


============================ Sentence 166 =============================

This stage is one of the most time-consuming and  underestimated of the data science project lifecycle. 


>> Tokens are: 
[stage, time, -, consuming,  , underestimated, data, science, project, lifecycle, .] 

>> PoS Tags are: 
[('stage', 'NOUN'), ('time', 'NOUN'), ('-', 'PUNCT'), ('consuming', 'VERB'), (' ', 'SPACE'), ('underestimated', 'VERB'), ('data', 'NOUN'), ('science', 'NOUN'), ('project', 'NOUN'), ('lifecycle', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('stage', 'nsubj'), ('time', 'npadvmod'), ('-', 'punct'), ('consuming', 'pobj'), (' ', 'conj'), ('underestimated', 'acl'), ('data', 'compound'), ('science', 'compound'), ('project', 'compound'), ('lifecycle', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[stage, time], [time, -], [-, consuming], [consuming,  ], [ , underestimated], [underestimated, data], [data, science], [science, project], [project, lifecycle], [lifecycle, .]]

>> Trigrams: 
[[stage, time, -], [time, -, consuming], [-, consuming,  ], [consuming,  , underestimated], [ , underestimated, data], [underestimated, data, science], [data, science, project], [science, project, lifecycle], [project, lifecycle, .]]

>> Noun Phrases are: 
[This stage, the data science project lifecycle]

>> Named Entities are: 
[]


============================ Sentence 167 =============================

It is at this stage that teams  and organizations realize that they are missing data, their machine sensors are  unreliable, they are not tracking relevant information about customers and other  key issues. 


>> Tokens are: 
[stage, teams,  , organizations, realize, missing, data, ,, machine, sensors,  , unreliable, ,, tracking, relevant, information, customers,  , key, issues, .] 

>> PoS Tags are: 
[('stage', 'NOUN'), ('teams', 'VERB'), (' ', 'SPACE'), ('organizations', 'NOUN'), ('realize', 'VERB'), ('missing', 'VERB'), ('data', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('sensors', 'NOUN'), (' ', 'SPACE'), ('unreliable', 'ADJ'), (',', 'PUNCT'), ('tracking', 'VERB'), ('relevant', 'ADJ'), ('information', 'NOUN'), ('customers', 'NOUN'), (' ', 'SPACE'), ('key', 'ADJ'), ('issues', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('stage', 'pobj'), ('teams', 'ccomp'), (' ', 'dobj'), ('organizations', 'conj'), ('realize', 'conj'), ('missing', 'ccomp'), ('data', 'dobj'), (',', 'punct'), ('machine', 'compound'), ('sensors', 'nsubj'), (' ', 'attr'), ('unreliable', 'amod'), (',', 'punct'), ('tracking', 'ccomp'), ('relevant', 'amod'), ('information', 'dobj'), ('customers', 'pobj'), (' ', 'nmod'), ('key', 'amod'), ('issues', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[stage, teams], [teams,  ], [ , organizations], [organizations, realize], [realize, missing], [missing, data], [data, ,], [,, machine], [machine, sensors], [sensors,  ], [ , unreliable], [unreliable, ,], [,, tracking], [tracking, relevant], [relevant, information], [information, customers], [customers,  ], [ , key], [key, issues], [issues, .]]

>> Trigrams: 
[[stage, teams,  ], [teams,  , organizations], [ , organizations, realize], [organizations, realize, missing], [realize, missing, data], [missing, data, ,], [data, ,, machine], [,, machine, sensors], [machine, sensors,  ], [sensors,  , unreliable], [ , unreliable, ,], [unreliable, ,, tracking], [,, tracking, relevant], [tracking, relevant, information], [relevant, information, customers], [information, customers,  ], [customers,  , key], [ , key, issues], [key, issues, .]]

>> Noun Phrases are: 
[It, this stage, organizations, they, data, their machine sensors, they, relevant information, customers, other  key issues]

>> Named Entities are: 
[]


============================ Sentence 168 =============================

It forces them to return to data collection and ensure the foundation is  solid before moving forward. 


>> Tokens are: 
[forces, return, data, collection, ensure, foundation,  , solid, moving, forward, .] 

>> PoS Tags are: 
[('forces', 'VERB'), ('return', 'VERB'), ('data', 'NOUN'), ('collection', 'NOUN'), ('ensure', 'VERB'), ('foundation', 'NOUN'), (' ', 'SPACE'), ('solid', 'ADJ'), ('moving', 'VERB'), ('forward', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('forces', 'ROOT'), ('return', 'xcomp'), ('data', 'compound'), ('collection', 'pobj'), ('ensure', 'conj'), ('foundation', 'nsubj'), (' ', 'attr'), ('solid', 'acomp'), ('moving', 'pcomp'), ('forward', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[forces, return], [return, data], [data, collection], [collection, ensure], [ensure, foundation], [foundation,  ], [ , solid], [solid, moving], [moving, forward], [forward, .]]

>> Trigrams: 
[[forces, return, data], [return, data, collection], [data, collection, ensure], [collection, ensure, foundation], [ensure, foundation,  ], [foundation,  , solid], [ , solid, moving], [solid, moving, forward], [moving, forward, .]]

>> Noun Phrases are: 
[It, them, data collection, the foundation]

>> Named Entities are: 
[]


============================ Sentence 169 =============================

 “Not going to the top is like  an insight engine working  at half capacity, not using  all its potential.” 


>> Tokens are: 
[ , “, going, like,  , insight, engine, working,  , half, capacity, ,,  , potential, ., ”] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('“', 'PUNCT'), ('going', 'VERB'), ('like', 'ADP'), (' ', 'SPACE'), ('insight', 'NOUN'), ('engine', 'NOUN'), ('working', 'VERB'), (' ', 'SPACE'), ('half', 'ADJ'), ('capacity', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('potential', 'NOUN'), ('.', 'PUNCT'), ('”', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'dep'), ('“', 'punct'), ('going', 'csubj'), ('like', 'prep'), (' ', 'pobj'), ('insight', 'compound'), ('engine', 'attr'), ('working', 'acl'), (' ', 'dobj'), ('half', 'amod'), ('capacity', 'pobj'), (',', 'punct'), (' ', 'dobj'), ('potential', 'dobj'), ('.', 'punct'), ('”', 'punct')]

>> Bigrams: 
[[ , “], [“, going], [going, like], [like,  ], [ , insight], [insight, engine], [engine, working], [working,  ], [ , half], [half, capacity], [capacity, ,], [,,  ], [ , potential], [potential, .], [., ”]]

>> Trigrams: 
[[ , “, going], [“, going, like], [going, like,  ], [like,  , insight], [ , insight, engine], [insight, engine, working], [engine, working,  ], [working,  , half], [ , half, capacity], [half, capacity, ,], [capacity, ,,  ], [,,  , potential], [ , potential, .], [potential, ., ”]]

>> Noun Phrases are: 
[the top, an insight engine, half capacity, all its potential]

>> Named Entities are: 
[('half', 'CARDINAL')]


============================ Sentence 170 =============================

   8/14Demystifying data science   Business intelligence and analytics. 


>> Tokens are: 
[   , 8/14Demystifying, data, science,   , Business, intelligence, analytics, .] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('8/14Demystifying', 'NOUN'), ('data', 'NOUN'), ('science', 'NOUN'), ('  ', 'SPACE'), ('Business', 'PROPN'), ('intelligence', 'NOUN'), ('analytics', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('   ', 'nummod'), ('8/14Demystifying', 'compound'), ('data', 'compound'), ('science', 'nmod'), ('  ', 'appos'), ('Business', 'compound'), ('intelligence', 'ROOT'), ('analytics', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[   , 8/14Demystifying], [8/14Demystifying, data], [data, science], [science,   ], [  , Business], [Business, intelligence], [intelligence, analytics], [analytics, .]]

>> Trigrams: 
[[   , 8/14Demystifying, data], [8/14Demystifying, data, science], [data, science,   ], [science,   , Business], [  , Business, intelligence], [Business, intelligence, analytics], [intelligence, analytics, .]]

>> Noun Phrases are: 
[   8/14Demystifying data science   Business intelligence, analytics]

>> Named Entities are: 
[]


============================ Sentence 171 =============================

When teams can reliably explore and clean  data, organizations can start building what is traditionally thought of as business  intelligence or analytics, which includes defining key metrics to track, identifying  how seasonality impacts product sales and operations, segmenting users based on  demographic factors, etc. 


>> Tokens are: 
[teams, reliably, explore, clean,  , data, ,, organizations, start, building, traditionally, thought, business,  , intelligence, analytics, ,, includes, defining, key, metrics, track, ,, identifying,  , seasonality, impacts, product, sales, operations, ,, segmenting, users, based,  , demographic, factors, ,, etc, .] 

>> PoS Tags are: 
[('teams', 'NOUN'), ('reliably', 'ADV'), ('explore', 'VERB'), ('clean', 'VERB'), (' ', 'SPACE'), ('data', 'NOUN'), (',', 'PUNCT'), ('organizations', 'NOUN'), ('start', 'VERB'), ('building', 'VERB'), ('traditionally', 'ADV'), ('thought', 'VERB'), ('business', 'NOUN'), (' ', 'SPACE'), ('intelligence', 'NOUN'), ('analytics', 'NOUN'), (',', 'PUNCT'), ('includes', 'VERB'), ('defining', 'VERB'), ('key', 'ADJ'), ('metrics', 'NOUN'), ('track', 'VERB'), (',', 'PUNCT'), ('identifying', 'VERB'), (' ', 'SPACE'), ('seasonality', 'NOUN'), ('impacts', 'NOUN'), ('product', 'NOUN'), ('sales', 'NOUN'), ('operations', 'NOUN'), (',', 'PUNCT'), ('segmenting', 'VERB'), ('users', 'NOUN'), ('based', 'VERB'), (' ', 'SPACE'), ('demographic', 'ADJ'), ('factors', 'NOUN'), (',', 'PUNCT'), ('etc', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('teams', 'nsubj'), ('reliably', 'advmod'), ('explore', 'advcl'), ('clean', 'conj'), (' ', 'compound'), ('data', 'dobj'), (',', 'punct'), ('organizations', 'nsubj'), ('start', 'ROOT'), ('building', 'xcomp'), ('traditionally', 'advmod'), ('thought', 'ccomp'), ('business', 'npadvmod'), (' ', 'compound'), ('intelligence', 'pobj'), ('analytics', 'conj'), (',', 'punct'), ('includes', 'relcl'), ('defining', 'xcomp'), ('key', 'amod'), ('metrics', 'dobj'), ('track', 'xcomp'), (',', 'punct'), ('identifying', 'advcl'), (' ', 'dobj'), ('seasonality', 'compound'), ('impacts', 'compound'), ('product', 'compound'), ('sales', 'dobj'), ('operations', 'conj'), (',', 'punct'), ('segmenting', 'conj'), ('users', 'dobj'), ('based', 'prep'), (' ', 'nmod'), ('demographic', 'amod'), ('factors', 'pobj'), (',', 'punct'), ('etc', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[teams, reliably], [reliably, explore], [explore, clean], [clean,  ], [ , data], [data, ,], [,, organizations], [organizations, start], [start, building], [building, traditionally], [traditionally, thought], [thought, business], [business,  ], [ , intelligence], [intelligence, analytics], [analytics, ,], [,, includes], [includes, defining], [defining, key], [key, metrics], [metrics, track], [track, ,], [,, identifying], [identifying,  ], [ , seasonality], [seasonality, impacts], [impacts, product], [product, sales], [sales, operations], [operations, ,], [,, segmenting], [segmenting, users], [users, based], [based,  ], [ , demographic], [demographic, factors], [factors, ,], [,, etc], [etc, .]]

>> Trigrams: 
[[teams, reliably, explore], [reliably, explore, clean], [explore, clean,  ], [clean,  , data], [ , data, ,], [data, ,, organizations], [,, organizations, start], [organizations, start, building], [start, building, traditionally], [building, traditionally, thought], [traditionally, thought, business], [thought, business,  ], [business,  , intelligence], [ , intelligence, analytics], [intelligence, analytics, ,], [analytics, ,, includes], [,, includes, defining], [includes, defining, key], [defining, key, metrics], [key, metrics, track], [metrics, track, ,], [track, ,, identifying], [,, identifying,  ], [identifying,  , seasonality], [ , seasonality, impacts], [seasonality, impacts, product], [impacts, product, sales], [product, sales, operations], [sales, operations, ,], [operations, ,, segmenting], [,, segmenting, users], [segmenting, users, based], [users, based,  ], [based,  , demographic], [ , demographic, factors], [demographic, factors, ,], [factors, ,, etc], [,, etc, .]]

>> Noun Phrases are: 
[teams,  data, organizations, what, business  intelligence, analytics, key metrics, how seasonality impacts product sales, operations, users,  demographic factors]

>> Named Entities are: 
[]


============================ Sentence 172 =============================

However, as the goal is to build an artificial intelligence  solution, it is important to start thinking about the features or attributes to include  in machine learning models, what training data the machine will need to learn, what  to predict and automate and how to create the labels from which the machine will  learn. 


>> Tokens are: 
[,, goal, build, artificial, intelligence,  , solution, ,, important, start, thinking, features, attributes, include,  , machine, learning, models, ,, training, data, machine, need, learn, ,,  , predict, automate, create, labels, machine,  , learn, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('goal', 'NOUN'), ('build', 'VERB'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), (' ', 'SPACE'), ('solution', 'NOUN'), (',', 'PUNCT'), ('important', 'ADJ'), ('start', 'VERB'), ('thinking', 'VERB'), ('features', 'NOUN'), ('attributes', 'NOUN'), ('include', 'VERB'), (' ', 'SPACE'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('models', 'NOUN'), (',', 'PUNCT'), ('training', 'NOUN'), ('data', 'NOUN'), ('machine', 'NOUN'), ('need', 'VERB'), ('learn', 'VERB'), (',', 'PUNCT'), (' ', 'SPACE'), ('predict', 'VERB'), ('automate', 'ADJ'), ('create', 'VERB'), ('labels', 'NOUN'), ('machine', 'NOUN'), (' ', 'SPACE'), ('learn', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('goal', 'nsubj'), ('build', 'xcomp'), ('artificial', 'amod'), ('intelligence', 'compound'), (' ', 'compound'), ('solution', 'dobj'), (',', 'punct'), ('important', 'acomp'), ('start', 'xcomp'), ('thinking', 'xcomp'), ('features', 'pobj'), ('attributes', 'conj'), ('include', 'advcl'), (' ', 'dobj'), ('machine', 'compound'), ('learning', 'compound'), ('models', 'pobj'), (',', 'punct'), ('training', 'compound'), ('data', 'csubj'), ('machine', 'nsubj'), ('need', 'ROOT'), ('learn', 'xcomp'), (',', 'punct'), (' ', 'nsubj'), ('predict', 'ccomp'), ('automate', 'conj'), ('create', 'conj'), ('labels', 'dobj'), ('machine', 'nsubj'), (' ', 'nsubj'), ('learn', 'relcl'), ('.', 'punct')]

>> Bigrams: 
[[,, goal], [goal, build], [build, artificial], [artificial, intelligence], [intelligence,  ], [ , solution], [solution, ,], [,, important], [important, start], [start, thinking], [thinking, features], [features, attributes], [attributes, include], [include,  ], [ , machine], [machine, learning], [learning, models], [models, ,], [,, training], [training, data], [data, machine], [machine, need], [need, learn], [learn, ,], [,,  ], [ , predict], [predict, automate], [automate, create], [create, labels], [labels, machine], [machine,  ], [ , learn], [learn, .]]

>> Trigrams: 
[[,, goal, build], [goal, build, artificial], [build, artificial, intelligence], [artificial, intelligence,  ], [intelligence,  , solution], [ , solution, ,], [solution, ,, important], [,, important, start], [important, start, thinking], [start, thinking, features], [thinking, features, attributes], [features, attributes, include], [attributes, include,  ], [include,  , machine], [ , machine, learning], [machine, learning, models], [learning, models, ,], [models, ,, training], [,, training, data], [training, data, machine], [data, machine, need], [machine, need, learn], [need, learn, ,], [learn, ,,  ], [,,  , predict], [ , predict, automate], [predict, automate, create], [automate, create, labels], [create, labels, machine], [labels, machine,  ], [machine,  , learn], [ , learn, .]]

>> Noun Phrases are: 
[the goal, an artificial intelligence  solution, it, the features, attributes, machine learning models, the machine, what, the labels, the machine]

>> Named Entities are: 
[]


============================ Sentence 173 =============================

Label creation can be done automatically, such as when the machine breaks  down and it automatically registers an event in the back-end system. 


>> Tokens are: 
[Label, creation, automatically, ,, machine, breaks,  , automatically, registers, event, -, end, system, .] 

>> PoS Tags are: 
[('Label', 'PROPN'), ('creation', 'NOUN'), ('automatically', 'ADV'), (',', 'PUNCT'), ('machine', 'NOUN'), ('breaks', 'VERB'), (' ', 'SPACE'), ('automatically', 'ADV'), ('registers', 'VERB'), ('event', 'NOUN'), ('-', 'PUNCT'), ('end', 'NOUN'), ('system', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Label', 'compound'), ('creation', 'nsubjpass'), ('automatically', 'advmod'), (',', 'punct'), ('machine', 'nsubj'), ('breaks', 'pcomp'), (' ', 'dobj'), ('automatically', 'advmod'), ('registers', 'conj'), ('event', 'dobj'), ('-', 'punct'), ('end', 'compound'), ('system', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Label, creation], [creation, automatically], [automatically, ,], [,, machine], [machine, breaks], [breaks,  ], [ , automatically], [automatically, registers], [registers, event], [event, -], [-, end], [end, system], [system, .]]

>> Trigrams: 
[[Label, creation, automatically], [creation, automatically, ,], [automatically, ,, machine], [,, machine, breaks], [machine, breaks,  ], [breaks,  , automatically], [ , automatically, registers], [automatically, registers, event], [registers, event, -], [event, -, end], [-, end, system], [end, system, .]]

>> Noun Phrases are: 
[Label creation, the machine, it, an event, the back-end system]

>> Named Entities are: 
[]


============================ Sentence 174 =============================

Or, it can  be done by introducing humans. 


>> Tokens are: 
[,,  , introducing, humans, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), (' ', 'SPACE'), ('introducing', 'VERB'), ('humans', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), (' ', 'nsubjpass'), ('introducing', 'pcomp'), ('humans', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[,,  ], [ , introducing], [introducing, humans], [humans, .]]

>> Trigrams: 
[[,,  , introducing], [ , introducing, humans], [introducing, humans, .]]

>> Noun Phrases are: 
[it, humans]

>> Named Entities are: 
[]


============================ Sentence 175 =============================

For example, an engineer reports an issue when  a machine part seems to be faulty during a routine inspection and the result is  manually added to the data. 


>> Tokens are: 
[example, ,, engineer, reports, issue,  , machine, faulty, routine, inspection, result,  , manually, added, data, .] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), ('engineer', 'NOUN'), ('reports', 'VERB'), ('issue', 'NOUN'), (' ', 'SPACE'), ('machine', 'NOUN'), ('faulty', 'ADJ'), ('routine', 'ADJ'), ('inspection', 'NOUN'), ('result', 'NOUN'), (' ', 'SPACE'), ('manually', 'ADV'), ('added', 'VERB'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct'), ('engineer', 'nsubj'), ('reports', 'ROOT'), ('issue', 'dobj'), (' ', 'nsubj'), ('machine', 'compound'), ('faulty', 'acomp'), ('routine', 'amod'), ('inspection', 'pobj'), ('result', 'conj'), (' ', 'nsubj'), ('manually', 'advmod'), ('added', 'ccomp'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[example, ,], [,, engineer], [engineer, reports], [reports, issue], [issue,  ], [ , machine], [machine, faulty], [faulty, routine], [routine, inspection], [inspection, result], [result,  ], [ , manually], [manually, added], [added, data], [data, .]]

>> Trigrams: 
[[example, ,, engineer], [,, engineer, reports], [engineer, reports, issue], [reports, issue,  ], [issue,  , machine], [ , machine, faulty], [machine, faulty, routine], [faulty, routine, inspection], [routine, inspection, result], [inspection, result,  ], [result,  , manually], [ , manually, added], [manually, added, data], [added, data, .]]

>> Noun Phrases are: 
[example, an engineer, an issue, a machine part, a routine inspection, the result, the data]

>> Named Entities are: 
[]


============================ Sentence 176 =============================

  Machine learning and benchmarking. 


>> Tokens are: 
[  , Machine, learning, benchmarking, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Machine', 'NOUN'), ('learning', 'NOUN'), ('benchmarking', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'poss'), ('Machine', 'compound'), ('learning', 'ROOT'), ('benchmarking', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[  , Machine], [Machine, learning], [learning, benchmarking], [benchmarking, .]]

>> Trigrams: 
[[  , Machine, learning], [Machine, learning, benchmarking], [learning, benchmarking, .]]

>> Noun Phrases are: 
[  Machine learning]

>> Named Entities are: 
[]


============================ Sentence 177 =============================

Although there is sample data that can be  used to make predictions, work is not complete. 


>> Tokens are: 
[sample, data,  ,  , predictions, ,, work, complete, .] 

>> PoS Tags are: 
[('sample', 'NOUN'), ('data', 'NOUN'), ('\u200a', 'SPACE'), (' ', 'SPACE'), ('predictions', 'NOUN'), (',', 'PUNCT'), ('work', 'NOUN'), ('complete', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('sample', 'compound'), ('data', 'compound'), ('\u200a', 'attr'), (' ', 'attr'), ('predictions', 'dobj'), (',', 'punct'), ('work', 'nsubj'), ('complete', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[sample, data], [data,  ], [ ,  ], [ , predictions], [predictions, ,], [,, work], [work, complete], [complete, .]]

>> Trigrams: 
[[sample, data,  ], [data,  ,  ], [ ,  , predictions], [ , predictions, ,], [predictions, ,, work], [,, work, complete], [work, complete, .]]

>> Noun Phrases are: 
[predictions, work]

>> Named Entities are: 
[]


============================ Sentence 178 =============================

A/B testing or experimentation  framework needs to be in place to deploy models incrementally and avoid real  world disasters. 


>> Tokens are: 
[/, B, testing, experimentation,  , framework, needs, place, deploy, models, incrementally, avoid, real,  , world, disasters, .] 

>> PoS Tags are: 
[('/', 'SYM'), ('B', 'NOUN'), ('testing', 'NOUN'), ('experimentation', 'NOUN'), (' ', 'SPACE'), ('framework', 'NOUN'), ('needs', 'VERB'), ('place', 'NOUN'), ('deploy', 'VERB'), ('models', 'NOUN'), ('incrementally', 'ADV'), ('avoid', 'VERB'), ('real', 'ADJ'), (' ', 'SPACE'), ('world', 'NOUN'), ('disasters', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('/', 'punct'), ('B', 'compound'), ('testing', 'nsubj'), ('experimentation', 'conj'), (' ', 'prep'), ('framework', 'conj'), ('needs', 'ROOT'), ('place', 'pobj'), ('deploy', 'advcl'), ('models', 'dobj'), ('incrementally', 'advmod'), ('avoid', 'conj'), ('real', 'amod'), (' ', 'compound'), ('world', 'compound'), ('disasters', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[/, B], [B, testing], [testing, experimentation], [experimentation,  ], [ , framework], [framework, needs], [needs, place], [place, deploy], [deploy, models], [models, incrementally], [incrementally, avoid], [avoid, real], [real,  ], [ , world], [world, disasters], [disasters, .]]

>> Trigrams: 
[[/, B, testing], [B, testing, experimentation], [testing, experimentation,  ], [experimentation,  , framework], [ , framework, needs], [framework, needs, place], [needs, place, deploy], [place, deploy, models], [deploy, models, incrementally], [models, incrementally, avoid], [incrementally, avoid, real], [avoid, real,  ], [real,  , world], [ , world, disasters], [world, disasters, .]]

>> Noun Phrases are: 
[A/B testing, experimentation, framework, place, models, real  world disasters]

>> Named Entities are: 
[]


============================ Sentence 179 =============================

Model validation and experimentation approaches provide a  rough estimate of the effects of changes before practical implementation. 


>> Tokens are: 
[Model, validation, experimentation, approaches, provide,  , rough, estimate, effects, changes, practical, implementation, .] 

>> PoS Tags are: 
[('Model', 'PROPN'), ('validation', 'NOUN'), ('experimentation', 'NOUN'), ('approaches', 'NOUN'), ('provide', 'VERB'), (' ', 'SPACE'), ('rough', 'ADJ'), ('estimate', 'NOUN'), ('effects', 'NOUN'), ('changes', 'NOUN'), ('practical', 'ADJ'), ('implementation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Model', 'nmod'), ('validation', 'nmod'), ('experimentation', 'conj'), ('approaches', 'nsubj'), ('provide', 'ROOT'), (' ', 'nmod'), ('rough', 'amod'), ('estimate', 'dobj'), ('effects', 'pobj'), ('changes', 'pobj'), ('practical', 'amod'), ('implementation', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Model, validation], [validation, experimentation], [experimentation, approaches], [approaches, provide], [provide,  ], [ , rough], [rough, estimate], [estimate, effects], [effects, changes], [changes, practical], [practical, implementation], [implementation, .]]

>> Trigrams: 
[[Model, validation, experimentation], [validation, experimentation, approaches], [experimentation, approaches, provide], [approaches, provide,  ], [provide,  , rough], [ , rough, estimate], [rough, estimate, effects], [estimate, effects, changes], [effects, changes, practical], [changes, practical, implementation], [practical, implementation, .]]

>> Noun Phrases are: 
[Model validation and experimentation approaches, a  rough estimate, the effects, changes, practical implementation]

>> Named Entities are: 
[]


============================ Sentence 180 =============================

At  this stage, a very simple baseline or benchmark for performance tracking should  be established. 


>> Tokens are: 
[ , stage, ,, simple, baseline, benchmark, performance, tracking,  , established, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('stage', 'NOUN'), (',', 'PUNCT'), ('simple', 'ADJ'), ('baseline', 'NOUN'), ('benchmark', 'NOUN'), ('performance', 'NOUN'), ('tracking', 'NOUN'), (' ', 'SPACE'), ('established', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'pobj'), ('stage', 'pobj'), (',', 'punct'), ('simple', 'amod'), ('baseline', 'nsubjpass'), ('benchmark', 'conj'), ('performance', 'compound'), ('tracking', 'pobj'), (' ', 'nsubjpass'), ('established', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[ , stage], [stage, ,], [,, simple], [simple, baseline], [baseline, benchmark], [benchmark, performance], [performance, tracking], [tracking,  ], [ , established], [established, .]]

>> Trigrams: 
[[ , stage, ,], [stage, ,, simple], [,, simple, baseline], [simple, baseline, benchmark], [baseline, benchmark, performance], [benchmark, performance, tracking], [performance, tracking,  ], [tracking,  , established], [ , established, .]]

>> Noun Phrases are: 
[this stage, a very simple baseline, benchmark, performance tracking]

>> Named Entities are: 
[]


============================ Sentence 181 =============================

An example fraud detection system includes monitoring high  risk credit card transactions that were proved to be fraudulent and comparing  them with the current operational performance of machine learning models to  accurately detect fraud. 


>> Tokens are: 
[example, fraud, detection, system, includes, monitoring, high,  , risk, credit, card, transactions, proved, fraudulent, comparing,  , current, operational, performance, machine, learning, models,  , accurately, detect, fraud, .] 

>> PoS Tags are: 
[('example', 'NOUN'), ('fraud', 'NOUN'), ('detection', 'NOUN'), ('system', 'NOUN'), ('includes', 'VERB'), ('monitoring', 'VERB'), ('high', 'ADJ'), (' ', 'SPACE'), ('risk', 'NOUN'), ('credit', 'NOUN'), ('card', 'NOUN'), ('transactions', 'NOUN'), ('proved', 'VERB'), ('fraudulent', 'ADJ'), ('comparing', 'VERB'), (' ', 'SPACE'), ('current', 'ADJ'), ('operational', 'ADJ'), ('performance', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('models', 'NOUN'), (' ', 'SPACE'), ('accurately', 'ADV'), ('detect', 'VERB'), ('fraud', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'compound'), ('fraud', 'compound'), ('detection', 'compound'), ('system', 'nsubj'), ('includes', 'ROOT'), ('monitoring', 'xcomp'), ('high', 'amod'), (' ', 'compound'), ('risk', 'compound'), ('credit', 'compound'), ('card', 'compound'), ('transactions', 'dobj'), ('proved', 'relcl'), ('fraudulent', 'acomp'), ('comparing', 'conj'), (' ', 'dobj'), ('current', 'amod'), ('operational', 'amod'), ('performance', 'pobj'), ('machine', 'compound'), ('learning', 'compound'), ('models', 'pobj'), (' ', 'pobj'), ('accurately', 'advmod'), ('detect', 'advcl'), ('fraud', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[example, fraud], [fraud, detection], [detection, system], [system, includes], [includes, monitoring], [monitoring, high], [high,  ], [ , risk], [risk, credit], [credit, card], [card, transactions], [transactions, proved], [proved, fraudulent], [fraudulent, comparing], [comparing,  ], [ , current], [current, operational], [operational, performance], [performance, machine], [machine, learning], [learning, models], [models,  ], [ , accurately], [accurately, detect], [detect, fraud], [fraud, .]]

>> Trigrams: 
[[example, fraud, detection], [fraud, detection, system], [detection, system, includes], [system, includes, monitoring], [includes, monitoring, high], [monitoring, high,  ], [high,  , risk], [ , risk, credit], [risk, credit, card], [credit, card, transactions], [card, transactions, proved], [transactions, proved, fraudulent], [proved, fraudulent, comparing], [fraudulent, comparing,  ], [comparing,  , current], [ , current, operational], [current, operational, performance], [operational, performance, machine], [performance, machine, learning], [machine, learning, models], [learning, models,  ], [models,  , accurately], [ , accurately, detect], [accurately, detect, fraud], [detect, fraud, .]]

>> Noun Phrases are: 
[An example fraud detection system, high  risk credit card transactions, them, the current operational performance, machine learning models, fraud]

>> Named Entities are: 
[]


============================ Sentence 182 =============================

  Artificial intelligence. 


>> Tokens are: 
[  , Artificial, intelligence, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Artificial', 'ADJ'), ('intelligence', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nmod'), ('Artificial', 'amod'), ('intelligence', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[  , Artificial], [Artificial, intelligence], [intelligence, .]]

>> Trigrams: 
[[  , Artificial, intelligence], [Artificial, intelligence, .]]

>> Noun Phrases are: 
[  Artificial intelligence]

>> Named Entities are: 
[]


============================ Sentence 183 =============================

At this stage a team might be looking to make  improvements in production. 


>> Tokens are: 
[stage, team, looking,  , improvements, production, .] 

>> PoS Tags are: 
[('stage', 'NOUN'), ('team', 'NOUN'), ('looking', 'VERB'), (' ', 'SPACE'), ('improvements', 'NOUN'), ('production', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('stage', 'pobj'), ('team', 'nsubj'), ('looking', 'ROOT'), (' ', 'compound'), ('improvements', 'dobj'), ('production', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[stage, team], [team, looking], [looking,  ], [ , improvements], [improvements, production], [production, .]]

>> Trigrams: 
[[stage, team, looking], [team, looking,  ], [looking,  , improvements], [ , improvements, production], [improvements, production, .]]

>> Noun Phrases are: 
[this stage, a team,  improvements, production]

>> Named Entities are: 
[]


============================ Sentence 184 =============================

This can be achieved by learning new methods  and techniques in machine learning and deep learning to improve processes,  predictions, outcomes and insights. 


>> Tokens are: 
[achieved, learning, new, methods,  , techniques, machine, learning, deep, learning, improve, processes, ,,  , predictions, ,, outcomes, insights, .] 

>> PoS Tags are: 
[('achieved', 'VERB'), ('learning', 'VERB'), ('new', 'ADJ'), ('methods', 'NOUN'), (' ', 'SPACE'), ('techniques', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('improve', 'VERB'), ('processes', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('predictions', 'NOUN'), (',', 'PUNCT'), ('outcomes', 'NOUN'), ('insights', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('achieved', 'ROOT'), ('learning', 'pcomp'), ('new', 'amod'), ('methods', 'dobj'), (' ', 'appos'), ('techniques', 'conj'), ('machine', 'compound'), ('learning', 'pobj'), ('deep', 'amod'), ('learning', 'conj'), ('improve', 'xcomp'), ('processes', 'dobj'), (',', 'punct'), (' ', 'nummod'), ('predictions', 'npadvmod'), (',', 'punct'), ('outcomes', 'conj'), ('insights', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[achieved, learning], [learning, new], [new, methods], [methods,  ], [ , techniques], [techniques, machine], [machine, learning], [learning, deep], [deep, learning], [learning, improve], [improve, processes], [processes, ,], [,,  ], [ , predictions], [predictions, ,], [,, outcomes], [outcomes, insights], [insights, .]]

>> Trigrams: 
[[achieved, learning, new], [learning, new, methods], [new, methods,  ], [methods,  , techniques], [ , techniques, machine], [techniques, machine, learning], [machine, learning, deep], [learning, deep, learning], [deep, learning, improve], [learning, improve, processes], [improve, processes, ,], [processes, ,,  ], [,,  , predictions], [ , predictions, ,], [predictions, ,, outcomes], [,, outcomes, insights], [outcomes, insights, .]]

>> Noun Phrases are: 
[new methods, techniques, machine learning, deep learning, processes]

>> Named Entities are: 
[]


============================ Sentence 185 =============================

By leveraging advanced and new techniques,  teams can gain an Information Advantage from massive amounts of data, explore  and model it faster and build solutions, such as voice assistants. 


>> Tokens are: 
[leveraging, advanced, new, techniques, ,,  , teams, gain, Information, Advantage, massive, amounts, data, ,, explore,  , model, faster, build, solutions, ,, voice, assistants, .] 

>> PoS Tags are: 
[('leveraging', 'VERB'), ('advanced', 'ADJ'), ('new', 'ADJ'), ('techniques', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('teams', 'NOUN'), ('gain', 'VERB'), ('Information', 'PROPN'), ('Advantage', 'PROPN'), ('massive', 'ADJ'), ('amounts', 'NOUN'), ('data', 'NOUN'), (',', 'PUNCT'), ('explore', 'VERB'), (' ', 'SPACE'), ('model', 'VERB'), ('faster', 'ADV'), ('build', 'VERB'), ('solutions', 'NOUN'), (',', 'PUNCT'), ('voice', 'NOUN'), ('assistants', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('leveraging', 'pcomp'), ('advanced', 'amod'), ('new', 'conj'), ('techniques', 'dobj'), (',', 'punct'), (' ', 'compound'), ('teams', 'nsubj'), ('gain', 'ROOT'), ('Information', 'compound'), ('Advantage', 'dobj'), ('massive', 'amod'), ('amounts', 'pobj'), ('data', 'pobj'), (',', 'punct'), ('explore', 'conj'), (' ', 'dobj'), ('model', 'conj'), ('faster', 'advmod'), ('build', 'conj'), ('solutions', 'dobj'), (',', 'punct'), ('voice', 'compound'), ('assistants', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[leveraging, advanced], [advanced, new], [new, techniques], [techniques, ,], [,,  ], [ , teams], [teams, gain], [gain, Information], [Information, Advantage], [Advantage, massive], [massive, amounts], [amounts, data], [data, ,], [,, explore], [explore,  ], [ , model], [model, faster], [faster, build], [build, solutions], [solutions, ,], [,, voice], [voice, assistants], [assistants, .]]

>> Trigrams: 
[[leveraging, advanced, new], [advanced, new, techniques], [new, techniques, ,], [techniques, ,,  ], [,,  , teams], [ , teams, gain], [teams, gain, Information], [gain, Information, Advantage], [Information, Advantage, massive], [Advantage, massive, amounts], [massive, amounts, data], [amounts, data, ,], [data, ,, explore], [,, explore,  ], [explore,  , model], [ , model, faster], [model, faster, build], [faster, build, solutions], [build, solutions, ,], [solutions, ,, voice], [,, voice, assistants], [voice, assistants, .]]

>> Noun Phrases are: 
[advanced and new techniques,  teams, an Information Advantage, massive amounts, data, it, solutions, voice assistants]

>> Named Entities are: 
[]


============================ Sentence 186 =============================

   9/14Demystifying data science   How can data science, artificial intelligence and analytics  help transform business processes? 


>> Tokens are: 
[   , 9/14Demystifying, data, science,   , data, science, ,, artificial, intelligence, analytics,  , help, transform, business, processes, ?] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('9/14Demystifying', 'NUM'), ('data', 'NOUN'), ('science', 'NOUN'), ('  ', 'SPACE'), ('data', 'VERB'), ('science', 'NOUN'), (',', 'PUNCT'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('analytics', 'NOUN'), (' ', 'SPACE'), ('help', 'VERB'), ('transform', 'VERB'), ('business', 'NOUN'), ('processes', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('   ', 'nummod'), ('9/14Demystifying', 'compound'), ('data', 'compound'), ('science', 'compound'), ('  ', 'dep'), ('data', 'relcl'), ('science', 'dobj'), (',', 'punct'), ('artificial', 'amod'), ('intelligence', 'conj'), ('analytics', 'conj'), (' ', 'nsubj'), ('help', 'ROOT'), ('transform', 'xcomp'), ('business', 'compound'), ('processes', 'dobj'), ('?', 'punct')]

>> Bigrams: 
[[   , 9/14Demystifying], [9/14Demystifying, data], [data, science], [science,   ], [  , data], [data, science], [science, ,], [,, artificial], [artificial, intelligence], [intelligence, analytics], [analytics,  ], [ , help], [help, transform], [transform, business], [business, processes], [processes, ?]]

>> Trigrams: 
[[   , 9/14Demystifying, data], [9/14Demystifying, data, science], [data, science,   ], [science,   , data], [  , data, science], [data, science, ,], [science, ,, artificial], [,, artificial, intelligence], [artificial, intelligence, analytics], [intelligence, analytics,  ], [analytics,  , help], [ , help, transform], [help, transform, business], [transform, business, processes], [business, processes, ?]]

>> Noun Phrases are: 
[science, artificial intelligence, analytics, business processes]

>> Named Entities are: 
[]


============================ Sentence 187 =============================

Data science is a multi-disciplinary field that uses scientific methods, processes,  algorithms and systems to extract knowledge and insights from structured and  unstructured data. 


>> Tokens are: 
[Data, science, multi, -, disciplinary, field, uses, scientific, methods, ,, processes, ,,  , algorithms, systems, extract, knowledge, insights, structured,  , unstructured, data, .] 

>> PoS Tags are: 
[('Data', 'NOUN'), ('science', 'NOUN'), ('multi', 'ADJ'), ('-', 'ADJ'), ('disciplinary', 'ADJ'), ('field', 'NOUN'), ('uses', 'VERB'), ('scientific', 'ADJ'), ('methods', 'NOUN'), (',', 'PUNCT'), ('processes', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('algorithms', 'NOUN'), ('systems', 'NOUN'), ('extract', 'VERB'), ('knowledge', 'NOUN'), ('insights', 'NOUN'), ('structured', 'VERB'), (' ', 'SPACE'), ('unstructured', 'ADJ'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Data', 'compound'), ('science', 'nsubj'), ('multi', 'amod'), ('-', 'amod'), ('disciplinary', 'amod'), ('field', 'attr'), ('uses', 'relcl'), ('scientific', 'amod'), ('methods', 'dobj'), (',', 'punct'), ('processes', 'conj'), (',', 'punct'), (' ', 'conj'), ('algorithms', 'conj'), ('systems', 'conj'), ('extract', 'xcomp'), ('knowledge', 'dobj'), ('insights', 'conj'), ('structured', 'pobj'), (' ', 'nmod'), ('unstructured', 'amod'), ('data', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Data, science], [science, multi], [multi, -], [-, disciplinary], [disciplinary, field], [field, uses], [uses, scientific], [scientific, methods], [methods, ,], [,, processes], [processes, ,], [,,  ], [ , algorithms], [algorithms, systems], [systems, extract], [extract, knowledge], [knowledge, insights], [insights, structured], [structured,  ], [ , unstructured], [unstructured, data], [data, .]]

>> Trigrams: 
[[Data, science, multi], [science, multi, -], [multi, -, disciplinary], [-, disciplinary, field], [disciplinary, field, uses], [field, uses, scientific], [uses, scientific, methods], [scientific, methods, ,], [methods, ,, processes], [,, processes, ,], [processes, ,,  ], [,,  , algorithms], [ , algorithms, systems], [algorithms, systems, extract], [systems, extract, knowledge], [extract, knowledge, insights], [knowledge, insights, structured], [insights, structured,  ], [structured,  , unstructured], [ , unstructured, data], [unstructured, data, .]]

>> Noun Phrases are: 
[Data science, a multi-disciplinary field, scientific methods, processes, algorithms, systems, knowledge, insights,  unstructured data]

>> Named Entities are: 
[]


============================ Sentence 188 =============================

Because there are a number of different techniques and  methodologies, it is often difficult to narrow down the scope of how data science  can impact business performance, operations, customer experience and costs. 


>> Tokens are: 
[number, different, techniques,  , methodologies, ,, difficult, narrow, scope, data, science,  , impact, business, performance, ,, operations, ,, customer, experience, costs, .] 

>> PoS Tags are: 
[('number', 'NOUN'), ('different', 'ADJ'), ('techniques', 'NOUN'), (' ', 'SPACE'), ('methodologies', 'NOUN'), (',', 'PUNCT'), ('difficult', 'ADJ'), ('narrow', 'VERB'), ('scope', 'NOUN'), ('data', 'NOUN'), ('science', 'NOUN'), (' ', 'SPACE'), ('impact', 'VERB'), ('business', 'NOUN'), ('performance', 'NOUN'), (',', 'PUNCT'), ('operations', 'NOUN'), (',', 'PUNCT'), ('customer', 'NOUN'), ('experience', 'NOUN'), ('costs', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('number', 'attr'), ('different', 'amod'), ('techniques', 'pobj'), (' ', 'compound'), ('methodologies', 'conj'), (',', 'punct'), ('difficult', 'acomp'), ('narrow', 'xcomp'), ('scope', 'dobj'), ('data', 'compound'), ('science', 'compound'), (' ', 'nsubj'), ('impact', 'pcomp'), ('business', 'compound'), ('performance', 'dobj'), (',', 'punct'), ('operations', 'conj'), (',', 'punct'), ('customer', 'compound'), ('experience', 'conj'), ('costs', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[number, different], [different, techniques], [techniques,  ], [ , methodologies], [methodologies, ,], [,, difficult], [difficult, narrow], [narrow, scope], [scope, data], [data, science], [science,  ], [ , impact], [impact, business], [business, performance], [performance, ,], [,, operations], [operations, ,], [,, customer], [customer, experience], [experience, costs], [costs, .]]

>> Trigrams: 
[[number, different, techniques], [different, techniques,  ], [techniques,  , methodologies], [ , methodologies, ,], [methodologies, ,, difficult], [,, difficult, narrow], [difficult, narrow, scope], [narrow, scope, data], [scope, data, science], [data, science,  ], [science,  , impact], [ , impact, business], [impact, business, performance], [business, performance, ,], [performance, ,, operations], [,, operations, ,], [operations, ,, customer], [,, customer, experience], [customer, experience, costs], [experience, costs, .]]

>> Noun Phrases are: 
[a number, different techniques,  methodologies, it, the scope, business performance, operations, customer experience, costs]

>> Named Entities are: 
[]


============================ Sentence 189 =============================

Here  are just a few ways data science can be leveraged. 


>> Tokens are: 
[ , ways, data, science, leveraged, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('ways', 'NOUN'), ('data', 'NOUN'), ('science', 'NOUN'), ('leveraged', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nsubj'), ('ways', 'attr'), ('data', 'compound'), ('science', 'nsubjpass'), ('leveraged', 'relcl'), ('.', 'punct')]

>> Bigrams: 
[[ , ways], [ways, data], [data, science], [science, leveraged], [leveraged, .]]

>> Trigrams: 
[[ , ways, data], [ways, data, science], [data, science, leveraged], [science, leveraged, .]]

>> Noun Phrases are: 
[just a few ways, data science]

>> Named Entities are: 
[]


============================ Sentence 190 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 191 =============================

Augment employee decisions with data-driven insights and intelligence   Utilize subject matter experts’ knowledge of how employees make business  decisions and transform the steps into data point, applying machine learning  techniques to identify the decision making pattern from this historical data to  predict future business outcomes. 


>> Tokens are: 
[Augment, employee, decisions, data, -, driven, insights, intelligence,   , Utilize, subject, matter, experts, ’, knowledge, employees, business,  , decisions, transform, steps, data, point, ,, applying, machine, learning,  , techniques, identify, decision, making, pattern, historical, data,  , predict, future, business, outcomes, .] 

>> PoS Tags are: 
[('Augment', 'NOUN'), ('employee', 'NOUN'), ('decisions', 'NOUN'), ('data', 'NOUN'), ('-', 'PUNCT'), ('driven', 'VERB'), ('insights', 'NOUN'), ('intelligence', 'NOUN'), ('  ', 'SPACE'), ('Utilize', 'PROPN'), ('subject', 'ADJ'), ('matter', 'NOUN'), ('experts', 'NOUN'), ('’', 'PART'), ('knowledge', 'NOUN'), ('employees', 'NOUN'), ('business', 'NOUN'), (' ', 'SPACE'), ('decisions', 'NOUN'), ('transform', 'VERB'), ('steps', 'NOUN'), ('data', 'NOUN'), ('point', 'NOUN'), (',', 'PUNCT'), ('applying', 'VERB'), ('machine', 'NOUN'), ('learning', 'VERB'), (' ', 'SPACE'), ('techniques', 'NOUN'), ('identify', 'VERB'), ('decision', 'NOUN'), ('making', 'VERB'), ('pattern', 'NOUN'), ('historical', 'ADJ'), ('data', 'NOUN'), (' ', 'SPACE'), ('predict', 'VERB'), ('future', 'ADJ'), ('business', 'NOUN'), ('outcomes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Augment', 'compound'), ('employee', 'compound'), ('decisions', 'nsubj'), ('data', 'npadvmod'), ('-', 'punct'), ('driven', 'amod'), ('insights', 'pobj'), ('intelligence', 'compound'), ('  ', 'conj'), ('Utilize', 'ROOT'), ('subject', 'amod'), ('matter', 'compound'), ('experts', 'poss'), ('’', 'case'), ('knowledge', 'dobj'), ('employees', 'nsubj'), ('business', 'compound'), (' ', 'compound'), ('decisions', 'dobj'), ('transform', 'conj'), ('steps', 'dobj'), ('data', 'compound'), ('point', 'pobj'), (',', 'punct'), ('applying', 'conj'), ('machine', 'dobj'), ('learning', 'xcomp'), (' ', 'prep'), ('techniques', 'dobj'), ('identify', 'advcl'), ('decision', 'npadvmod'), ('making', 'amod'), ('pattern', 'dobj'), ('historical', 'amod'), ('data', 'pobj'), (' ', 'pobj'), ('predict', 'conj'), ('future', 'amod'), ('business', 'compound'), ('outcomes', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Augment, employee], [employee, decisions], [decisions, data], [data, -], [-, driven], [driven, insights], [insights, intelligence], [intelligence,   ], [  , Utilize], [Utilize, subject], [subject, matter], [matter, experts], [experts, ’], [’, knowledge], [knowledge, employees], [employees, business], [business,  ], [ , decisions], [decisions, transform], [transform, steps], [steps, data], [data, point], [point, ,], [,, applying], [applying, machine], [machine, learning], [learning,  ], [ , techniques], [techniques, identify], [identify, decision], [decision, making], [making, pattern], [pattern, historical], [historical, data], [data,  ], [ , predict], [predict, future], [future, business], [business, outcomes], [outcomes, .]]

>> Trigrams: 
[[Augment, employee, decisions], [employee, decisions, data], [decisions, data, -], [data, -, driven], [-, driven, insights], [driven, insights, intelligence], [insights, intelligence,   ], [intelligence,   , Utilize], [  , Utilize, subject], [Utilize, subject, matter], [subject, matter, experts], [matter, experts, ’], [experts, ’, knowledge], [’, knowledge, employees], [knowledge, employees, business], [employees, business,  ], [business,  , decisions], [ , decisions, transform], [decisions, transform, steps], [transform, steps, data], [steps, data, point], [data, point, ,], [point, ,, applying], [,, applying, machine], [applying, machine, learning], [machine, learning,  ], [learning,  , techniques], [ , techniques, identify], [techniques, identify, decision], [identify, decision, making], [decision, making, pattern], [making, pattern, historical], [pattern, historical, data], [historical, data,  ], [data,  , predict], [ , predict, future], [predict, future, business], [future, business, outcomes], [business, outcomes, .]]

>> Noun Phrases are: 
[Augment employee decisions, data-driven insights, subject matter experts’ knowledge, employees, business  decisions, the steps, data point, machine, techniques, the decision making pattern, this historical data, future business outcomes]

>> Named Entities are: 
[('Utilize', 'ORG')]


============================ Sentence 192 =============================

Organizations can design an intelligent system  that can handle complex requests or tasks, provide intelligent/best fit decisions  for individual scenarios and empower employees to make decisions quickly and  more effectively. 


>> Tokens are: 
[Organizations, design, intelligent, system,  , handle, complex, requests, tasks, ,, provide, intelligent, /, best, fit, decisions,  , individual, scenarios, empower, employees, decisions, quickly,  , effectively, .] 

>> PoS Tags are: 
[('Organizations', 'NOUN'), ('design', 'VERB'), ('intelligent', 'ADJ'), ('system', 'NOUN'), (' ', 'SPACE'), ('handle', 'VERB'), ('complex', 'ADJ'), ('requests', 'NOUN'), ('tasks', 'NOUN'), (',', 'PUNCT'), ('provide', 'VERB'), ('intelligent', 'ADJ'), ('/', 'SYM'), ('best', 'ADJ'), ('fit', 'ADJ'), ('decisions', 'NOUN'), (' ', 'SPACE'), ('individual', 'ADJ'), ('scenarios', 'NOUN'), ('empower', 'ADJ'), ('employees', 'NOUN'), ('decisions', 'NOUN'), ('quickly', 'ADV'), (' ', 'SPACE'), ('effectively', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Organizations', 'nsubj'), ('design', 'ROOT'), ('intelligent', 'amod'), ('system', 'dobj'), (' ', 'appos'), ('handle', 'relcl'), ('complex', 'amod'), ('requests', 'dobj'), ('tasks', 'conj'), (',', 'punct'), ('provide', 'conj'), ('intelligent', 'amod'), ('/', 'punct'), ('best', 'amod'), ('fit', 'amod'), ('decisions', 'dobj'), (' ', 'nummod'), ('individual', 'amod'), ('scenarios', 'pobj'), ('empower', 'amod'), ('employees', 'conj'), ('decisions', 'dobj'), ('quickly', 'advmod'), (' ', 'conj'), ('effectively', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[Organizations, design], [design, intelligent], [intelligent, system], [system,  ], [ , handle], [handle, complex], [complex, requests], [requests, tasks], [tasks, ,], [,, provide], [provide, intelligent], [intelligent, /], [/, best], [best, fit], [fit, decisions], [decisions,  ], [ , individual], [individual, scenarios], [scenarios, empower], [empower, employees], [employees, decisions], [decisions, quickly], [quickly,  ], [ , effectively], [effectively, .]]

>> Trigrams: 
[[Organizations, design, intelligent], [design, intelligent, system], [intelligent, system,  ], [system,  , handle], [ , handle, complex], [handle, complex, requests], [complex, requests, tasks], [requests, tasks, ,], [tasks, ,, provide], [,, provide, intelligent], [provide, intelligent, /], [intelligent, /, best], [/, best, fit], [best, fit, decisions], [fit, decisions,  ], [decisions,  , individual], [ , individual, scenarios], [individual, scenarios, empower], [scenarios, empower, employees], [empower, employees, decisions], [employees, decisions, quickly], [decisions, quickly,  ], [quickly,  , effectively], [ , effectively, .]]

>> Noun Phrases are: 
[Organizations, an intelligent system, complex requests, tasks, intelligent/best fit decisions, individual scenarios, empower employees, decisions]

>> Named Entities are: 
[]


============================ Sentence 193 =============================

Some example uses include credit risk scoring, automated  underwriting, wealth management fund assistants and customer service chatbots. 


>> Tokens are: 
[example, uses, include, credit, risk, scoring, ,, automated,  , underwriting, ,, wealth, management, fund, assistants, customer, service, chatbots, .] 

>> PoS Tags are: 
[('example', 'NOUN'), ('uses', 'VERB'), ('include', 'VERB'), ('credit', 'NOUN'), ('risk', 'NOUN'), ('scoring', 'NOUN'), (',', 'PUNCT'), ('automated', 'VERB'), (' ', 'SPACE'), ('underwriting', 'NOUN'), (',', 'PUNCT'), ('wealth', 'NOUN'), ('management', 'NOUN'), ('fund', 'NOUN'), ('assistants', 'NOUN'), ('customer', 'NOUN'), ('service', 'NOUN'), ('chatbots', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'nsubj'), ('uses', 'ROOT'), ('include', 'xcomp'), ('credit', 'compound'), ('risk', 'compound'), ('scoring', 'dobj'), (',', 'punct'), ('automated', 'dep'), (' ', 'compound'), ('underwriting', 'dobj'), (',', 'punct'), ('wealth', 'compound'), ('management', 'compound'), ('fund', 'compound'), ('assistants', 'conj'), ('customer', 'compound'), ('service', 'compound'), ('chatbots', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[example, uses], [uses, include], [include, credit], [credit, risk], [risk, scoring], [scoring, ,], [,, automated], [automated,  ], [ , underwriting], [underwriting, ,], [,, wealth], [wealth, management], [management, fund], [fund, assistants], [assistants, customer], [customer, service], [service, chatbots], [chatbots, .]]

>> Trigrams: 
[[example, uses, include], [uses, include, credit], [include, credit, risk], [credit, risk, scoring], [risk, scoring, ,], [scoring, ,, automated], [,, automated,  ], [automated,  , underwriting], [ , underwriting, ,], [underwriting, ,, wealth], [,, wealth, management], [wealth, management, fund], [management, fund, assistants], [fund, assistants, customer], [assistants, customer, service], [customer, service, chatbots], [service, chatbots, .]]

>> Noun Phrases are: 
[Some example, credit risk scoring,  underwriting, wealth management fund assistants, customer service chatbots]

>> Named Entities are: 
[]


============================ Sentence 194 =============================

  Automate and improve the efficiency of operations with intelligent,   data-driven decisions   


>> Tokens are: 
[  , Automate, improve, efficiency, operations, intelligent, ,,   , data, -, driven, decisions,  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Automate', 'PROPN'), ('improve', 'VERB'), ('efficiency', 'NOUN'), ('operations', 'NOUN'), ('intelligent', 'ADJ'), (',', 'PUNCT'), ('  ', 'SPACE'), ('data', 'NOUN'), ('-', 'PUNCT'), ('driven', 'VERB'), ('decisions', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'compound'), ('Automate', 'ROOT'), ('improve', 'conj'), ('efficiency', 'dobj'), ('operations', 'pobj'), ('intelligent', 'pobj'), (',', 'punct'), ('  ', 'nummod'), ('data', 'npadvmod'), ('-', 'punct'), ('driven', 'amod'), ('decisions', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[  , Automate], [Automate, improve], [improve, efficiency], [efficiency, operations], [operations, intelligent], [intelligent, ,], [,,   ], [  , data], [data, -], [-, driven], [driven, decisions], [decisions,  ]]

>> Trigrams: 
[[  , Automate, improve], [Automate, improve, efficiency], [improve, efficiency, operations], [efficiency, operations, intelligent], [operations, intelligent, ,], [intelligent, ,,   ], [,,   , data], [  , data, -], [data, -, driven], [-, driven, decisions], [driven, decisions,  ]]

>> Noun Phrases are: 
[  Automate, the efficiency, operations, ,   data-driven decisions]

>> Named Entities are: 
[]


============================ Sentence 195 =============================

Leverage AI and analytics techniques to drive operational efficiency. 


>> Tokens are: 
[Leverage, AI, analytics, techniques, drive, operational, efficiency, .] 

>> PoS Tags are: 
[('Leverage', 'PROPN'), ('AI', 'PROPN'), ('analytics', 'NOUN'), ('techniques', 'NOUN'), ('drive', 'VERB'), ('operational', 'ADJ'), ('efficiency', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Leverage', 'compound'), ('AI', 'ROOT'), ('analytics', 'compound'), ('techniques', 'conj'), ('drive', 'relcl'), ('operational', 'amod'), ('efficiency', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Leverage, AI], [AI, analytics], [analytics, techniques], [techniques, drive], [drive, operational], [operational, efficiency], [efficiency, .]]

>> Trigrams: 
[[Leverage, AI, analytics], [AI, analytics, techniques], [analytics, techniques, drive], [techniques, drive, operational], [drive, operational, efficiency], [operational, efficiency, .]]

>> Noun Phrases are: 
[Leverage AI, analytics techniques, operational efficiency]

>> Named Entities are: 
[]


============================ Sentence 196 =============================

By utilizing  sensor information from machines, machine learning can help predict when a  specific machine is likely to require maintenance, allowing technicians to be  proactive rather than reactive in maintenance efforts. 


>> Tokens are: 
[utilizing,  , sensor, information, machines, ,, machine, learning, help, predict,  , specific, machine, likely, require, maintenance, ,, allowing, technicians,  , proactive, reactive, maintenance, efforts, .] 

>> PoS Tags are: 
[('utilizing', 'VERB'), (' ', 'SPACE'), ('sensor', 'NOUN'), ('information', 'NOUN'), ('machines', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('help', 'VERB'), ('predict', 'VERB'), (' ', 'SPACE'), ('specific', 'ADJ'), ('machine', 'NOUN'), ('likely', 'ADJ'), ('require', 'VERB'), ('maintenance', 'NOUN'), (',', 'PUNCT'), ('allowing', 'VERB'), ('technicians', 'NOUN'), (' ', 'SPACE'), ('proactive', 'ADJ'), ('reactive', 'VERB'), ('maintenance', 'NOUN'), ('efforts', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('utilizing', 'pcomp'), (' ', 'compound'), ('sensor', 'compound'), ('information', 'dobj'), ('machines', 'pobj'), (',', 'punct'), ('machine', 'compound'), ('learning', 'nsubj'), ('help', 'ROOT'), ('predict', 'xcomp'), (' ', 'nmod'), ('specific', 'amod'), ('machine', 'nsubj'), ('likely', 'acomp'), ('require', 'xcomp'), ('maintenance', 'dobj'), (',', 'punct'), ('allowing', 'advcl'), ('technicians', 'nsubj'), (' ', 'attr'), ('proactive', 'acomp'), ('reactive', 'ccomp'), ('maintenance', 'compound'), ('efforts', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[utilizing,  ], [ , sensor], [sensor, information], [information, machines], [machines, ,], [,, machine], [machine, learning], [learning, help], [help, predict], [predict,  ], [ , specific], [specific, machine], [machine, likely], [likely, require], [require, maintenance], [maintenance, ,], [,, allowing], [allowing, technicians], [technicians,  ], [ , proactive], [proactive, reactive], [reactive, maintenance], [maintenance, efforts], [efforts, .]]

>> Trigrams: 
[[utilizing,  , sensor], [ , sensor, information], [sensor, information, machines], [information, machines, ,], [machines, ,, machine], [,, machine, learning], [machine, learning, help], [learning, help, predict], [help, predict,  ], [predict,  , specific], [ , specific, machine], [specific, machine, likely], [machine, likely, require], [likely, require, maintenance], [require, maintenance, ,], [maintenance, ,, allowing], [,, allowing, technicians], [allowing, technicians,  ], [technicians,  , proactive], [ , proactive, reactive], [proactive, reactive, maintenance], [reactive, maintenance, efforts], [maintenance, efforts, .]]

>> Noun Phrases are: 
[ sensor information, machines, machine learning, a  specific machine, maintenance, technicians, maintenance efforts]

>> Named Entities are: 
[]


============================ Sentence 197 =============================

Some AI applications in this  context include predictive maintenance, recommender systems, robotic process  automation and airline scheduling. 


>> Tokens are: 
[AI, applications,  , context, include, predictive, maintenance, ,, recommender, systems, ,, robotic, process,  , automation, airline, scheduling, .] 

>> PoS Tags are: 
[('AI', 'PROPN'), ('applications', 'NOUN'), (' ', 'SPACE'), ('context', 'NOUN'), ('include', 'VERB'), ('predictive', 'ADJ'), ('maintenance', 'NOUN'), (',', 'PUNCT'), ('recommender', 'NOUN'), ('systems', 'NOUN'), (',', 'PUNCT'), ('robotic', 'ADJ'), ('process', 'NOUN'), (' ', 'SPACE'), ('automation', 'NOUN'), ('airline', 'NOUN'), ('scheduling', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('AI', 'compound'), ('applications', 'nsubj'), (' ', 'compound'), ('context', 'pobj'), ('include', 'ROOT'), ('predictive', 'amod'), ('maintenance', 'dobj'), (',', 'punct'), ('recommender', 'compound'), ('systems', 'conj'), (',', 'punct'), ('robotic', 'amod'), ('process', 'nmod'), (' ', 'punct'), ('automation', 'nmod'), ('airline', 'compound'), ('scheduling', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[AI, applications], [applications,  ], [ , context], [context, include], [include, predictive], [predictive, maintenance], [maintenance, ,], [,, recommender], [recommender, systems], [systems, ,], [,, robotic], [robotic, process], [process,  ], [ , automation], [automation, airline], [airline, scheduling], [scheduling, .]]

>> Trigrams: 
[[AI, applications,  ], [applications,  , context], [ , context, include], [context, include, predictive], [include, predictive, maintenance], [predictive, maintenance, ,], [maintenance, ,, recommender], [,, recommender, systems], [recommender, systems, ,], [systems, ,, robotic], [,, robotic, process], [robotic, process,  ], [process,  , automation], [ , automation, airline], [automation, airline, scheduling], [airline, scheduling, .]]

>> Noun Phrases are: 
[Some AI applications, this  context, predictive maintenance, recommender systems, robotic process  automation and airline scheduling]

>> Named Entities are: 
[]


============================ Sentence 198 =============================

  Apply data driven insights to make timely and consequential tactical   and strategic decisions  Better inform management and strategic decisions by leveraging machine learning  and advanced analytics. 


>> Tokens are: 
[  , Apply, data, driven, insights, timely, consequential, tactical,   , strategic, decisions,  , Better, inform, management, strategic, decisions, leveraging, machine, learning,  , advanced, analytics, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Apply', 'PROPN'), ('data', 'NOUN'), ('driven', 'VERB'), ('insights', 'NOUN'), ('timely', 'ADJ'), ('consequential', 'ADJ'), ('tactical', 'ADJ'), ('  ', 'SPACE'), ('strategic', 'ADJ'), ('decisions', 'NOUN'), (' ', 'SPACE'), ('Better', 'ADV'), ('inform', 'VERB'), ('management', 'NOUN'), ('strategic', 'ADJ'), ('decisions', 'NOUN'), ('leveraging', 'VERB'), ('machine', 'NOUN'), ('learning', 'VERB'), (' ', 'SPACE'), ('advanced', 'ADJ'), ('analytics', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nmod'), ('Apply', 'nmod'), ('data', 'npadvmod'), ('driven', 'amod'), ('insights', 'nsubj'), ('timely', 'amod'), ('consequential', 'conj'), ('tactical', 'amod'), ('  ', 'dobj'), ('strategic', 'amod'), ('decisions', 'conj'), (' ', 'punct'), ('Better', 'advmod'), ('inform', 'ROOT'), ('management', 'dobj'), ('strategic', 'amod'), ('decisions', 'conj'), ('leveraging', 'pcomp'), ('machine', 'dobj'), ('learning', 'xcomp'), (' ', 'dobj'), ('advanced', 'amod'), ('analytics', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[  , Apply], [Apply, data], [data, driven], [driven, insights], [insights, timely], [timely, consequential], [consequential, tactical], [tactical,   ], [  , strategic], [strategic, decisions], [decisions,  ], [ , Better], [Better, inform], [inform, management], [management, strategic], [strategic, decisions], [decisions, leveraging], [leveraging, machine], [machine, learning], [learning,  ], [ , advanced], [advanced, analytics], [analytics, .]]

>> Trigrams: 
[[  , Apply, data], [Apply, data, driven], [data, driven, insights], [driven, insights, timely], [insights, timely, consequential], [timely, consequential, tactical], [consequential, tactical,   ], [tactical,   , strategic], [  , strategic, decisions], [strategic, decisions,  ], [decisions,  , Better], [ , Better, inform], [Better, inform, management], [inform, management, strategic], [management, strategic, decisions], [strategic, decisions, leveraging], [decisions, leveraging, machine], [leveraging, machine, learning], [machine, learning,  ], [learning,  , advanced], [ , advanced, analytics], [advanced, analytics, .]]

>> Noun Phrases are: 
[  Apply data driven insights, strategic decisions, management, strategic decisions, machine, advanced analytics]

>> Named Entities are: 
[('Apply', 'ORG')]


============================ Sentence 199 =============================

These tend to be ad hoc projects or solutions, where  the goal is to apply statistical techniques to gain key insights around business  processes. 


>> Tokens are: 
[tend, ad, hoc, projects, solutions, ,,  , goal, apply, statistical, techniques, gain, key, insights, business,  , processes, .] 

>> PoS Tags are: 
[('tend', 'VERB'), ('ad', 'X'), ('hoc', 'X'), ('projects', 'NOUN'), ('solutions', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('goal', 'NOUN'), ('apply', 'VERB'), ('statistical', 'ADJ'), ('techniques', 'NOUN'), ('gain', 'VERB'), ('key', 'ADJ'), ('insights', 'NOUN'), ('business', 'NOUN'), (' ', 'SPACE'), ('processes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('tend', 'ROOT'), ('ad', 'nmod'), ('hoc', 'amod'), ('projects', 'attr'), ('solutions', 'conj'), (',', 'punct'), (' ', 'nsubj'), ('goal', 'nsubj'), ('apply', 'xcomp'), ('statistical', 'amod'), ('techniques', 'dobj'), ('gain', 'advcl'), ('key', 'amod'), ('insights', 'dobj'), ('business', 'compound'), (' ', 'compound'), ('processes', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[tend, ad], [ad, hoc], [hoc, projects], [projects, solutions], [solutions, ,], [,,  ], [ , goal], [goal, apply], [apply, statistical], [statistical, techniques], [techniques, gain], [gain, key], [key, insights], [insights, business], [business,  ], [ , processes], [processes, .]]

>> Trigrams: 
[[tend, ad, hoc], [ad, hoc, projects], [hoc, projects, solutions], [projects, solutions, ,], [solutions, ,,  ], [,,  , goal], [ , goal, apply], [goal, apply, statistical], [apply, statistical, techniques], [statistical, techniques, gain], [techniques, gain, key], [gain, key, insights], [key, insights, business], [insights, business,  ], [business,  , processes], [ , processes, .]]

>> Noun Phrases are: 
[ad hoc projects, solutions, the goal, statistical techniques, key insights, business  processes]

>> Named Entities are: 
[]


============================ Sentence 200 =============================

For example, by measuring analytics related to cleanliness, customer  service, overall satisfaction, etc., an amusement park operations manager can  determine the likelihood of repeat customers, identify key gaps in operations and  better market the value of the park to the right demographics. 


>> Tokens are: 
[example, ,, measuring, analytics, related, cleanliness, ,, customer,  , service, ,, overall, satisfaction, ,, etc, ., ,, amusement, park, operations, manager,  , determine, likelihood, repeat, customers, ,, identify, key, gaps, operations,  , better, market, value, park, right, demographics, .] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), ('measuring', 'VERB'), ('analytics', 'NOUN'), ('related', 'VERB'), ('cleanliness', 'NOUN'), (',', 'PUNCT'), ('customer', 'NOUN'), (' ', 'SPACE'), ('service', 'NOUN'), (',', 'PUNCT'), ('overall', 'ADJ'), ('satisfaction', 'NOUN'), (',', 'PUNCT'), ('etc', 'X'), ('.', 'X'), (',', 'PUNCT'), ('amusement', 'NOUN'), ('park', 'NOUN'), ('operations', 'NOUN'), ('manager', 'NOUN'), (' ', 'SPACE'), ('determine', 'VERB'), ('likelihood', 'NOUN'), ('repeat', 'NOUN'), ('customers', 'NOUN'), (',', 'PUNCT'), ('identify', 'VERB'), ('key', 'ADJ'), ('gaps', 'NOUN'), ('operations', 'NOUN'), (' ', 'SPACE'), ('better', 'ADJ'), ('market', 'NOUN'), ('value', 'NOUN'), ('park', 'NOUN'), ('right', 'ADJ'), ('demographics', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct'), ('measuring', 'pcomp'), ('analytics', 'dobj'), ('related', 'acl'), ('cleanliness', 'pobj'), (',', 'punct'), ('customer', 'nmod'), (' ', 'nummod'), ('service', 'conj'), (',', 'punct'), ('overall', 'amod'), ('satisfaction', 'conj'), (',', 'punct'), ('etc', 'conj'), ('.', 'conj'), (',', 'punct'), ('amusement', 'compound'), ('park', 'compound'), ('operations', 'compound'), ('manager', 'nsubj'), (' ', 'nsubj'), ('determine', 'ROOT'), ('likelihood', 'dobj'), ('repeat', 'compound'), ('customers', 'pobj'), (',', 'punct'), ('identify', 'conj'), ('key', 'amod'), ('gaps', 'dobj'), ('operations', 'pobj'), (' ', 'nsubj'), ('better', 'amod'), ('market', 'conj'), ('value', 'dobj'), ('park', 'pobj'), ('right', 'amod'), ('demographics', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[example, ,], [,, measuring], [measuring, analytics], [analytics, related], [related, cleanliness], [cleanliness, ,], [,, customer], [customer,  ], [ , service], [service, ,], [,, overall], [overall, satisfaction], [satisfaction, ,], [,, etc], [etc, .], [., ,], [,, amusement], [amusement, park], [park, operations], [operations, manager], [manager,  ], [ , determine], [determine, likelihood], [likelihood, repeat], [repeat, customers], [customers, ,], [,, identify], [identify, key], [key, gaps], [gaps, operations], [operations,  ], [ , better], [better, market], [market, value], [value, park], [park, right], [right, demographics], [demographics, .]]

>> Trigrams: 
[[example, ,, measuring], [,, measuring, analytics], [measuring, analytics, related], [analytics, related, cleanliness], [related, cleanliness, ,], [cleanliness, ,, customer], [,, customer,  ], [customer,  , service], [ , service, ,], [service, ,, overall], [,, overall, satisfaction], [overall, satisfaction, ,], [satisfaction, ,, etc], [,, etc, .], [etc, ., ,], [., ,, amusement], [,, amusement, park], [amusement, park, operations], [park, operations, manager], [operations, manager,  ], [manager,  , determine], [ , determine, likelihood], [determine, likelihood, repeat], [likelihood, repeat, customers], [repeat, customers, ,], [customers, ,, identify], [,, identify, key], [identify, key, gaps], [key, gaps, operations], [gaps, operations,  ], [operations,  , better], [ , better, market], [better, market, value], [market, value, park], [value, park, right], [park, right, demographics], [right, demographics, .]]

>> Noun Phrases are: 
[example, analytics, cleanliness, customer  service, overall satisfaction, an amusement park operations manager, the likelihood, repeat customers, key gaps, operations,  better market, the value, the park, the right demographics]

>> Named Entities are: 
[]


============================ Sentence 201 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 202 =============================

Personalize customer experiences  Identify and recommend personalized products at scale with recommender  systems. 


>> Tokens are: 
[Personalize, customer, experiences,  , Identify, recommend, personalized, products, scale, recommender,  , systems, .] 

>> PoS Tags are: 
[('Personalize', 'PROPN'), ('customer', 'NOUN'), ('experiences', 'VERB'), (' ', 'SPACE'), ('Identify', 'VERB'), ('recommend', 'VERB'), ('personalized', 'ADJ'), ('products', 'NOUN'), ('scale', 'NOUN'), ('recommender', 'NOUN'), (' ', 'SPACE'), ('systems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Personalize', 'csubj'), ('customer', 'compound'), ('experiences', 'ROOT'), (' ', 'nsubj'), ('Identify', 'xcomp'), ('recommend', 'conj'), ('personalized', 'amod'), ('products', 'dobj'), ('scale', 'pobj'), ('recommender', 'compound'), (' ', 'compound'), ('systems', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Personalize, customer], [customer, experiences], [experiences,  ], [ , Identify], [Identify, recommend], [recommend, personalized], [personalized, products], [products, scale], [scale, recommender], [recommender,  ], [ , systems], [systems, .]]

>> Trigrams: 
[[Personalize, customer, experiences], [customer, experiences,  ], [experiences,  , Identify], [ , Identify, recommend], [Identify, recommend, personalized], [recommend, personalized, products], [personalized, products, scale], [products, scale, recommender], [scale, recommender,  ], [recommender,  , systems], [ , systems, .]]

>> Noun Phrases are: 
[personalized products, scale, recommender  systems]

>> Named Entities are: 
[]


============================ Sentence 203 =============================

The likes of Google, Amazon, Facebook and Apple have made  personalization an expectation. 


>> Tokens are: 
[likes, Google, ,, Amazon, ,, Facebook, Apple,  , personalization, expectation, .] 

>> PoS Tags are: 
[('likes', 'NOUN'), ('Google', 'PROPN'), (',', 'PUNCT'), ('Amazon', 'PROPN'), (',', 'PUNCT'), ('Facebook', 'PROPN'), ('Apple', 'PROPN'), (' ', 'SPACE'), ('personalization', 'NOUN'), ('expectation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('likes', 'nsubj'), ('Google', 'pobj'), (',', 'punct'), ('Amazon', 'appos'), (',', 'punct'), ('Facebook', 'conj'), ('Apple', 'conj'), (' ', 'nsubj'), ('personalization', 'ccomp'), ('expectation', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[likes, Google], [Google, ,], [,, Amazon], [Amazon, ,], [,, Facebook], [Facebook, Apple], [Apple,  ], [ , personalization], [personalization, expectation], [expectation, .]]

>> Trigrams: 
[[likes, Google, ,], [Google, ,, Amazon], [,, Amazon, ,], [Amazon, ,, Facebook], [,, Facebook, Apple], [Facebook, Apple,  ], [Apple,  , personalization], [ , personalization, expectation], [personalization, expectation, .]]

>> Noun Phrases are: 
[The likes, Google, Amazon, Facebook, Apple, an expectation]

>> Named Entities are: 
[('Google', 'ORG'), ('Amazon', 'ORG'), ('Apple', 'ORG')]


============================ Sentence 204 =============================

Recommender systems are one of the more  popular examples of how machine learning can be leveraged to analyze data  across millions of users to accomplish this. 


>> Tokens are: 
[Recommender, systems,  , popular, examples, machine, learning, leveraged, analyze, data,  , millions, users, accomplish, .] 

>> PoS Tags are: 
[('Recommender', 'NOUN'), ('systems', 'NOUN'), (' ', 'SPACE'), ('popular', 'ADJ'), ('examples', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('leveraged', 'VERB'), ('analyze', 'VERB'), ('data', 'NOUN'), (' ', 'SPACE'), ('millions', 'NOUN'), ('users', 'NOUN'), ('accomplish', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Recommender', 'compound'), ('systems', 'nsubj'), (' ', 'nmod'), ('popular', 'amod'), ('examples', 'pobj'), ('machine', 'compound'), ('learning', 'nsubj'), ('leveraged', 'acomp'), ('analyze', 'xcomp'), ('data', 'dobj'), (' ', 'dobj'), ('millions', 'pobj'), ('users', 'pobj'), ('accomplish', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[Recommender, systems], [systems,  ], [ , popular], [popular, examples], [examples, machine], [machine, learning], [learning, leveraged], [leveraged, analyze], [analyze, data], [data,  ], [ , millions], [millions, users], [users, accomplish], [accomplish, .]]

>> Trigrams: 
[[Recommender, systems,  ], [systems,  , popular], [ , popular, examples], [popular, examples, machine], [examples, machine, learning], [machine, learning, leveraged], [learning, leveraged, analyze], [leveraged, analyze, data], [analyze, data,  ], [data,  , millions], [ , millions, users], [millions, users, accomplish], [users, accomplish, .]]

>> Noun Phrases are: 
[Recommender systems, the more  popular examples, machine learning, data, millions, users]

>> Named Entities are: 
[('millions', 'CARDINAL')]


============================ Sentence 205 =============================

By analyzing and tracking various  customer touchpoints, some retailers are now able to predict the likelihood  of users buying future products. 


>> Tokens are: 
[analyzing, tracking,  , customer, touchpoints, ,, retailers, able, predict, likelihood,  , users, buying, future, products, .] 

>> PoS Tags are: 
[('analyzing', 'VERB'), ('tracking', 'VERB'), (' ', 'SPACE'), ('customer', 'NOUN'), ('touchpoints', 'NOUN'), (',', 'PUNCT'), ('retailers', 'NOUN'), ('able', 'ADJ'), ('predict', 'VERB'), ('likelihood', 'NOUN'), (' ', 'SPACE'), ('users', 'NOUN'), ('buying', 'VERB'), ('future', 'ADJ'), ('products', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('analyzing', 'pcomp'), ('tracking', 'conj'), (' ', 'compound'), ('customer', 'compound'), ('touchpoints', 'dobj'), (',', 'punct'), ('retailers', 'nsubj'), ('able', 'acomp'), ('predict', 'xcomp'), ('likelihood', 'dobj'), (' ', 'nsubj'), ('users', 'pobj'), ('buying', 'advcl'), ('future', 'amod'), ('products', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[analyzing, tracking], [tracking,  ], [ , customer], [customer, touchpoints], [touchpoints, ,], [,, retailers], [retailers, able], [able, predict], [predict, likelihood], [likelihood,  ], [ , users], [users, buying], [buying, future], [future, products], [products, .]]

>> Trigrams: 
[[analyzing, tracking,  ], [tracking,  , customer], [ , customer, touchpoints], [customer, touchpoints, ,], [touchpoints, ,, retailers], [,, retailers, able], [retailers, able, predict], [able, predict, likelihood], [predict, likelihood,  ], [likelihood,  , users], [ , users, buying], [users, buying, future], [buying, future, products], [future, products, .]]

>> Noun Phrases are: 
[various  customer touchpoints, some retailers, the likelihood, users, future products]

>> Named Entities are: 
[]


============================ Sentence 206 =============================

It is important to note that machine learning  solutions need not be 100 percent accurate to realize business value and ROI. 


>> Tokens are: 
[important, note, machine, learning,  , solutions, need, 100, percent, accurate, realize, business, value, ROI, .] 

>> PoS Tags are: 
[('important', 'ADJ'), ('note', 'VERB'), ('machine', 'NOUN'), ('learning', 'VERB'), (' ', 'SPACE'), ('solutions', 'NOUN'), ('need', 'AUX'), ('100', 'NUM'), ('percent', 'NOUN'), ('accurate', 'ADJ'), ('realize', 'VERB'), ('business', 'NOUN'), ('value', 'NOUN'), ('ROI', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('important', 'acomp'), ('note', 'xcomp'), ('machine', 'nsubj'), ('learning', 'acl'), (' ', 'compound'), ('solutions', 'dobj'), ('need', 'aux'), ('100', 'nummod'), ('percent', 'npadvmod'), ('accurate', 'acomp'), ('realize', 'advcl'), ('business', 'compound'), ('value', 'dobj'), ('ROI', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[important, note], [note, machine], [machine, learning], [learning,  ], [ , solutions], [solutions, need], [need, 100], [100, percent], [percent, accurate], [accurate, realize], [realize, business], [business, value], [value, ROI], [ROI, .]]

>> Trigrams: 
[[important, note, machine], [note, machine, learning], [machine, learning,  ], [learning,  , solutions], [ , solutions, need], [solutions, need, 100], [need, 100, percent], [100, percent, accurate], [percent, accurate, realize], [accurate, realize, business], [realize, business, value], [business, value, ROI], [value, ROI, .]]

>> Noun Phrases are: 
[It, machine,  solutions, business value, ROI]

>> Named Entities are: 
[('100 percent', 'PERCENT')]


============================ Sentence 207 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 208 =============================

The goal should be to conduct data-driven decision making at scale to reduce  operational costs and optimize resources and targeting efforts. 


>> Tokens are: 
[goal, conduct, data, -, driven, decision, making, scale, reduce,  , operational, costs, optimize, resources, targeting, efforts, .] 

>> PoS Tags are: 
[('goal', 'NOUN'), ('conduct', 'VERB'), ('data', 'NOUN'), ('-', 'PUNCT'), ('driven', 'VERB'), ('decision', 'NOUN'), ('making', 'VERB'), ('scale', 'NOUN'), ('reduce', 'VERB'), (' ', 'SPACE'), ('operational', 'ADJ'), ('costs', 'NOUN'), ('optimize', 'NOUN'), ('resources', 'NOUN'), ('targeting', 'VERB'), ('efforts', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('goal', 'nsubj'), ('conduct', 'xcomp'), ('data', 'npadvmod'), ('-', 'punct'), ('driven', 'amod'), ('decision', 'compound'), ('making', 'dobj'), ('scale', 'pobj'), ('reduce', 'advcl'), (' ', 'dative'), ('operational', 'amod'), ('costs', 'dobj'), ('optimize', 'compound'), ('resources', 'conj'), ('targeting', 'conj'), ('efforts', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[goal, conduct], [conduct, data], [data, -], [-, driven], [driven, decision], [decision, making], [making, scale], [scale, reduce], [reduce,  ], [ , operational], [operational, costs], [costs, optimize], [optimize, resources], [resources, targeting], [targeting, efforts], [efforts, .]]

>> Trigrams: 
[[goal, conduct, data], [conduct, data, -], [data, -, driven], [-, driven, decision], [driven, decision, making], [decision, making, scale], [making, scale, reduce], [scale, reduce,  ], [reduce,  , operational], [ , operational, costs], [operational, costs, optimize], [costs, optimize, resources], [optimize, resources, targeting], [resources, targeting, efforts], [targeting, efforts, .]]

>> Noun Phrases are: 
[The goal, scale, operational costs, optimize resources, efforts]

>> Named Entities are: 
[]


============================ Sentence 209 =============================

   10/14Demystifying data science    


>> Tokens are: 
[   , 10/14Demystifying, data, science,   ] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('10/14Demystifying', 'NOUN'), ('data', 'NOUN'), ('science', 'NOUN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'nummod'), ('10/14Demystifying', 'nummod'), ('data', 'compound'), ('science', 'compound'), ('  ', 'ROOT')]

>> Bigrams: 
[[   , 10/14Demystifying], [10/14Demystifying, data], [data, science], [science,   ]]

>> Trigrams: 
[[   , 10/14Demystifying, data], [10/14Demystifying, data, science], [data, science,   ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 210 =============================

Utilize data driven insights and intelligence to accelerate new product  development   


>> Tokens are: 
[Utilize, data, driven, insights, intelligence, accelerate, new, product,  , development,  ] 

>> PoS Tags are: 
[('Utilize', 'PROPN'), ('data', 'NOUN'), ('driven', 'VERB'), ('insights', 'NOUN'), ('intelligence', 'NOUN'), ('accelerate', 'VERB'), ('new', 'ADJ'), ('product', 'NOUN'), (' ', 'SPACE'), ('development', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Utilize', 'compound'), ('data', 'npadvmod'), ('driven', 'amod'), ('insights', 'dobj'), ('intelligence', 'conj'), ('accelerate', 'xcomp'), ('new', 'amod'), ('product', 'dobj'), (' ', 'compound'), ('development', 'ROOT'), (' ', 'appos')]

>> Bigrams: 
[[Utilize, data], [data, driven], [driven, insights], [insights, intelligence], [intelligence, accelerate], [accelerate, new], [new, product], [product,  ], [ , development], [development,  ]]

>> Trigrams: 
[[Utilize, data, driven], [data, driven, insights], [driven, insights, intelligence], [insights, intelligence, accelerate], [intelligence, accelerate, new], [accelerate, new, product], [new, product,  ], [product,  , development], [ , development,  ]]

>> Noun Phrases are: 
[data driven insights, intelligence, new product]

>> Named Entities are: 
[('Utilize', 'ORG')]


============================ Sentence 211 =============================

Convert massive amounts of big data into meaningful and actionable insights. 


>> Tokens are: 
[Convert, massive, amounts, big, data, meaningful, actionable, insights, .] 

>> PoS Tags are: 
[('Convert', 'PROPN'), ('massive', 'ADJ'), ('amounts', 'NOUN'), ('big', 'ADJ'), ('data', 'NOUN'), ('meaningful', 'ADJ'), ('actionable', 'ADJ'), ('insights', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Convert', 'ROOT'), ('massive', 'amod'), ('amounts', 'dobj'), ('big', 'amod'), ('data', 'pobj'), ('meaningful', 'amod'), ('actionable', 'conj'), ('insights', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Convert, massive], [massive, amounts], [amounts, big], [big, data], [data, meaningful], [meaningful, actionable], [actionable, insights], [insights, .]]

>> Trigrams: 
[[Convert, massive, amounts], [massive, amounts, big], [amounts, big, data], [big, data, meaningful], [data, meaningful, actionable], [meaningful, actionable, insights], [actionable, insights, .]]

>> Noun Phrases are: 
[Convert, massive amounts, big data, meaningful and actionable insights]

>> Named Entities are: 
[('Convert', 'ORG')]


============================ Sentence 212 =============================

Voice  assistants, autopilot features and smart home devices have become part of day- to-day life. 


>> Tokens are: 
[Voice,  , assistants, ,, autopilot, features, smart, home, devices, day-, -, day, life, .] 

>> PoS Tags are: 
[('Voice', 'NOUN'), (' ', 'SPACE'), ('assistants', 'NOUN'), (',', 'PUNCT'), ('autopilot', 'NOUN'), ('features', 'NOUN'), ('smart', 'ADJ'), ('home', 'NOUN'), ('devices', 'NOUN'), ('day-', 'NOUN'), ('-', 'PUNCT'), ('day', 'NOUN'), ('life', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Voice', 'compound'), (' ', 'compound'), ('assistants', 'nsubj'), (',', 'punct'), ('autopilot', 'compound'), ('features', 'conj'), ('smart', 'amod'), ('home', 'compound'), ('devices', 'conj'), ('day-', 'nmod'), ('-', 'punct'), ('day', 'pobj'), ('life', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Voice,  ], [ , assistants], [assistants, ,], [,, autopilot], [autopilot, features], [features, smart], [smart, home], [home, devices], [devices, day-], [day-, -], [-, day], [day, life], [life, .]]

>> Trigrams: 
[[Voice,  , assistants], [ , assistants, ,], [assistants, ,, autopilot], [,, autopilot, features], [autopilot, features, smart], [features, smart, home], [smart, home, devices], [home, devices, day-], [devices, day-, -], [day-, -, day], [-, day, life], [day, life, .]]

>> Noun Phrases are: 
[Voice  assistants, autopilot features, smart home devices, part, day]

>> Named Entities are: 
[]


============================ Sentence 213 =============================

This new class of AI-driven products are powered by machine learning  and advanced analytics techniques, allowing organizations and teams to better  understand consumer needs and wants, feature requests and usage patterns. 


>> Tokens are: 
[new, class, AI, -, driven, products, powered, machine, learning,  , advanced, analytics, techniques, ,, allowing, organizations, teams, better,  , understand, consumer, needs, wants, ,, feature, requests, usage, patterns, .] 

>> PoS Tags are: 
[('new', 'ADJ'), ('class', 'NOUN'), ('AI', 'NOUN'), ('-', 'PUNCT'), ('driven', 'VERB'), ('products', 'NOUN'), ('powered', 'VERB'), ('machine', 'NOUN'), ('learning', 'VERB'), (' ', 'SPACE'), ('advanced', 'ADJ'), ('analytics', 'NOUN'), ('techniques', 'NOUN'), (',', 'PUNCT'), ('allowing', 'VERB'), ('organizations', 'NOUN'), ('teams', 'NOUN'), ('better', 'ADV'), (' ', 'SPACE'), ('understand', 'VERB'), ('consumer', 'NOUN'), ('needs', 'NOUN'), ('wants', 'VERB'), (',', 'PUNCT'), ('feature', 'NOUN'), ('requests', 'NOUN'), ('usage', 'NOUN'), ('patterns', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('new', 'amod'), ('class', 'nsubjpass'), ('AI', 'npadvmod'), ('-', 'punct'), ('driven', 'amod'), ('products', 'pobj'), ('powered', 'ROOT'), ('machine', 'pobj'), ('learning', 'acl'), (' ', 'dobj'), ('advanced', 'amod'), ('analytics', 'compound'), ('techniques', 'conj'), (',', 'punct'), ('allowing', 'advcl'), ('organizations', 'dobj'), ('teams', 'conj'), ('better', 'amod'), (' ', 'pobj'), ('understand', 'ccomp'), ('consumer', 'compound'), ('needs', 'dobj'), ('wants', 'conj'), (',', 'punct'), ('feature', 'compound'), ('requests', 'conj'), ('usage', 'compound'), ('patterns', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[new, class], [class, AI], [AI, -], [-, driven], [driven, products], [products, powered], [powered, machine], [machine, learning], [learning,  ], [ , advanced], [advanced, analytics], [analytics, techniques], [techniques, ,], [,, allowing], [allowing, organizations], [organizations, teams], [teams, better], [better,  ], [ , understand], [understand, consumer], [consumer, needs], [needs, wants], [wants, ,], [,, feature], [feature, requests], [requests, usage], [usage, patterns], [patterns, .]]

>> Trigrams: 
[[new, class, AI], [class, AI, -], [AI, -, driven], [-, driven, products], [driven, products, powered], [products, powered, machine], [powered, machine, learning], [machine, learning,  ], [learning,  , advanced], [ , advanced, analytics], [advanced, analytics, techniques], [analytics, techniques, ,], [techniques, ,, allowing], [,, allowing, organizations], [allowing, organizations, teams], [organizations, teams, better], [teams, better,  ], [better,  , understand], [ , understand, consumer], [understand, consumer, needs], [consumer, needs, wants], [needs, wants, ,], [wants, ,, feature], [,, feature, requests], [feature, requests, usage], [requests, usage, patterns], [usage, patterns, .]]

>> Noun Phrases are: 
[This new class, AI-driven products, machine, advanced analytics techniques, organizations, teams, consumer needs]

>> Named Entities are: 
[('AI', 'ORG')]


============================ Sentence 214 =============================

 Common techniques and methodologies in machine learning Machine learning takes what comes naturally to humans and applies it at scale. 


>> Tokens are: 
[ , Common, techniques, methodologies, machine, learning, Machine, learning, takes, comes, naturally, humans, applies, scale, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Common', 'ADJ'), ('techniques', 'NOUN'), ('methodologies', 'NOUN'), ('machine', 'NOUN'), ('learning', 'VERB'), ('Machine', 'NOUN'), ('learning', 'NOUN'), ('takes', 'VERB'), ('comes', 'VERB'), ('naturally', 'ADV'), ('humans', 'NOUN'), ('applies', 'VERB'), ('scale', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nsubj'), ('Common', 'amod'), ('techniques', 'dobj'), ('methodologies', 'conj'), ('machine', 'pobj'), ('learning', 'acl'), ('Machine', 'compound'), ('learning', 'dobj'), ('takes', 'ROOT'), ('comes', 'ccomp'), ('naturally', 'advmod'), ('humans', 'pobj'), ('applies', 'conj'), ('scale', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , Common], [Common, techniques], [techniques, methodologies], [methodologies, machine], [machine, learning], [learning, Machine], [Machine, learning], [learning, takes], [takes, comes], [comes, naturally], [naturally, humans], [humans, applies], [applies, scale], [scale, .]]

>> Trigrams: 
[[ , Common, techniques], [Common, techniques, methodologies], [techniques, methodologies, machine], [methodologies, machine, learning], [machine, learning, Machine], [learning, Machine, learning], [Machine, learning, takes], [learning, takes, comes], [takes, comes, naturally], [comes, naturally, humans], [naturally, humans, applies], [humans, applies, scale], [applies, scale, .]]

>> Noun Phrases are: 
[Common techniques, methodologies, machine, Machine learning, what, humans, it, scale]

>> Named Entities are: 
[('Machine', 'NORP')]


============================ Sentence 215 =============================

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 216 =============================

For example, when machine learning reviews a loan application, it can review  5,000 credit transactions, three credit reports, 10 incidents, the five-year income  history of Joe Adams in seconds. 


>> Tokens are: 
[example, ,, machine, learning, reviews, loan, application, ,, review,  , 5,000, credit, transactions, ,, credit, reports, ,, 10, incidents, ,, -, year, income,  , history, Joe, Adams, seconds, .] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('reviews', 'VERB'), ('loan', 'NOUN'), ('application', 'NOUN'), (',', 'PUNCT'), ('review', 'VERB'), (' ', 'SPACE'), ('5,000', 'NUM'), ('credit', 'NOUN'), ('transactions', 'NOUN'), (',', 'PUNCT'), ('credit', 'NOUN'), ('reports', 'NOUN'), (',', 'PUNCT'), ('10', 'NUM'), ('incidents', 'NOUN'), (',', 'PUNCT'), ('-', 'PUNCT'), ('year', 'NOUN'), ('income', 'NOUN'), (' ', 'SPACE'), ('history', 'NOUN'), ('Joe', 'PROPN'), ('Adams', 'PROPN'), ('seconds', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct'), ('machine', 'compound'), ('learning', 'nsubj'), ('reviews', 'advcl'), ('loan', 'compound'), ('application', 'dobj'), (',', 'punct'), ('review', 'ROOT'), (' ', 'dobj'), ('5,000', 'nummod'), ('credit', 'compound'), ('transactions', 'dobj'), (',', 'punct'), ('credit', 'compound'), ('reports', 'dep'), (',', 'punct'), ('10', 'nummod'), ('incidents', 'appos'), (',', 'punct'), ('-', 'punct'), ('year', 'compound'), ('income', 'compound'), (' ', 'compound'), ('history', 'dobj'), ('Joe', 'compound'), ('Adams', 'pobj'), ('seconds', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[example, ,], [,, machine], [machine, learning], [learning, reviews], [reviews, loan], [loan, application], [application, ,], [,, review], [review,  ], [ , 5,000], [5,000, credit], [credit, transactions], [transactions, ,], [,, credit], [credit, reports], [reports, ,], [,, 10], [10, incidents], [incidents, ,], [,, -], [-, year], [year, income], [income,  ], [ , history], [history, Joe], [Joe, Adams], [Adams, seconds], [seconds, .]]

>> Trigrams: 
[[example, ,, machine], [,, machine, learning], [machine, learning, reviews], [learning, reviews, loan], [reviews, loan, application], [loan, application, ,], [application, ,, review], [,, review,  ], [review,  , 5,000], [ , 5,000, credit], [5,000, credit, transactions], [credit, transactions, ,], [transactions, ,, credit], [,, credit, reports], [credit, reports, ,], [reports, ,, 10], [,, 10, incidents], [10, incidents, ,], [incidents, ,, -], [,, -, year], [-, year, income], [year, income,  ], [income,  , history], [ , history, Joe], [history, Joe, Adams], [Joe, Adams, seconds], [Adams, seconds, .]]

>> Noun Phrases are: 
[example, machine learning, a loan application, it, 5,000 credit transactions, 10 incidents, the five-year income  history, Joe Adams, seconds]

>> Named Entities are: 
[('5,000', 'CARDINAL'), ('three', 'CARDINAL'), ('10', 'CARDINAL'), ('five-year', 'DATE'), ('Joe Adams', 'PERSON')]


============================ Sentence 217 =============================

This would not be possible by a domain expert. 


>> Tokens are: 
[possible, domain, expert, .] 

>> PoS Tags are: 
[('possible', 'ADJ'), ('domain', 'NOUN'), ('expert', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('possible', 'acomp'), ('domain', 'compound'), ('expert', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[possible, domain], [domain, expert], [expert, .]]

>> Trigrams: 
[[possible, domain, expert], [domain, expert, .]]

>> Noun Phrases are: 
[a domain expert]

>> Named Entities are: 
[]


============================ Sentence 218 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 219 =============================

They simply do not have the capacity to reviews with the speed of a machine and  provide a decision on his loan as soon as it is submitted. 


>> Tokens are: 
[simply, capacity, reviews, speed, machine,  , provide, decision, loan, soon, submitted, .] 

>> PoS Tags are: 
[('simply', 'ADV'), ('capacity', 'NOUN'), ('reviews', 'NOUN'), ('speed', 'NOUN'), ('machine', 'NOUN'), (' ', 'SPACE'), ('provide', 'VERB'), ('decision', 'NOUN'), ('loan', 'NOUN'), ('soon', 'ADV'), ('submitted', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('simply', 'advmod'), ('capacity', 'dobj'), ('reviews', 'acl'), ('speed', 'pobj'), ('machine', 'pobj'), (' ', 'conj'), ('provide', 'conj'), ('decision', 'dobj'), ('loan', 'pobj'), ('soon', 'advmod'), ('submitted', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[simply, capacity], [capacity, reviews], [reviews, speed], [speed, machine], [machine,  ], [ , provide], [provide, decision], [decision, loan], [loan, soon], [soon, submitted], [submitted, .]]

>> Trigrams: 
[[simply, capacity, reviews], [capacity, reviews, speed], [reviews, speed, machine], [speed, machine,  ], [machine,  , provide], [ , provide, decision], [provide, decision, loan], [decision, loan, soon], [loan, soon, submitted], [soon, submitted, .]]

>> Noun Phrases are: 
[They, the capacity, the speed, a machine, a decision, his loan, it]

>> Named Entities are: 
[]


============================ Sentence 220 =============================

Even if the expert is highly  experienced and efficient, it takes considerable time to review application details  and there is still room for human error. 


>> Tokens are: 
[expert, highly,  , experienced, efficient, ,, takes, considerable, time, review, application, details,  , room, human, error, .] 

>> PoS Tags are: 
[('expert', 'NOUN'), ('highly', 'ADV'), (' ', 'SPACE'), ('experienced', 'ADJ'), ('efficient', 'ADJ'), (',', 'PUNCT'), ('takes', 'VERB'), ('considerable', 'ADJ'), ('time', 'NOUN'), ('review', 'VERB'), ('application', 'NOUN'), ('details', 'NOUN'), (' ', 'SPACE'), ('room', 'NOUN'), ('human', 'ADJ'), ('error', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('expert', 'nsubj'), ('highly', 'advmod'), (' ', 'nsubj'), ('experienced', 'acomp'), ('efficient', 'conj'), (',', 'punct'), ('takes', 'ROOT'), ('considerable', 'amod'), ('time', 'dobj'), ('review', 'xcomp'), ('application', 'compound'), ('details', 'dobj'), (' ', 'dobj'), ('room', 'attr'), ('human', 'amod'), ('error', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[expert, highly], [highly,  ], [ , experienced], [experienced, efficient], [efficient, ,], [,, takes], [takes, considerable], [considerable, time], [time, review], [review, application], [application, details], [details,  ], [ , room], [room, human], [human, error], [error, .]]

>> Trigrams: 
[[expert, highly,  ], [highly,  , experienced], [ , experienced, efficient], [experienced, efficient, ,], [efficient, ,, takes], [,, takes, considerable], [takes, considerable, time], [considerable, time, review], [time, review, application], [review, application, details], [application, details,  ], [details,  , room], [ , room, human], [room, human, error], [human, error, .]]

>> Noun Phrases are: 
[the expert, it, considerable time, application details, room, human error]

>> Named Entities are: 
[]


============================ Sentence 221 =============================

Machine learning uses past experience and  trends in historical data related to customers in both good standing and those that  defaulted on loans to make a decision. 


>> Tokens are: 
[Machine, learning, uses, past, experience,  , trends, historical, data, related, customers, good, standing,  , defaulted, loans, decision, .] 

>> PoS Tags are: 
[('Machine', 'NOUN'), ('learning', 'NOUN'), ('uses', 'VERB'), ('past', 'ADJ'), ('experience', 'NOUN'), (' ', 'SPACE'), ('trends', 'NOUN'), ('historical', 'ADJ'), ('data', 'NOUN'), ('related', 'VERB'), ('customers', 'NOUN'), ('good', 'ADJ'), ('standing', 'NOUN'), (' ', 'SPACE'), ('defaulted', 'VERB'), ('loans', 'NOUN'), ('decision', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Machine', 'compound'), ('learning', 'nsubj'), ('uses', 'ROOT'), ('past', 'amod'), ('experience', 'dobj'), (' ', 'compound'), ('trends', 'conj'), ('historical', 'amod'), ('data', 'pobj'), ('related', 'acl'), ('customers', 'pobj'), ('good', 'amod'), ('standing', 'pobj'), (' ', 'nsubj'), ('defaulted', 'relcl'), ('loans', 'pobj'), ('decision', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Machine, learning], [learning, uses], [uses, past], [past, experience], [experience,  ], [ , trends], [trends, historical], [historical, data], [data, related], [related, customers], [customers, good], [good, standing], [standing,  ], [ , defaulted], [defaulted, loans], [loans, decision], [decision, .]]

>> Trigrams: 
[[Machine, learning, uses], [learning, uses, past], [uses, past, experience], [past, experience,  ], [experience,  , trends], [ , trends, historical], [trends, historical, data], [historical, data, related], [data, related, customers], [related, customers, good], [customers, good, standing], [good, standing,  ], [standing,  , defaulted], [ , defaulted, loans], [defaulted, loans, decision], [loans, decision, .]]

>> Noun Phrases are: 
[Machine learning, past experience,  trends, historical data, customers, both good standing, loans, a decision]

>> Named Entities are: 
[]


============================ Sentence 222 =============================

With the combination of machine learning  and good quality data, organizations can quickly make unbiased, data-driven  decisions at scale in seconds. 


>> Tokens are: 
[combination, machine, learning,  , good, quality, data, ,, organizations, quickly, unbiased, ,, data, -, driven,  , decisions, scale, seconds, .] 

>> PoS Tags are: 
[('combination', 'NOUN'), ('machine', 'NOUN'), ('learning', 'VERB'), (' ', 'SPACE'), ('good', 'ADJ'), ('quality', 'NOUN'), ('data', 'NOUN'), (',', 'PUNCT'), ('organizations', 'NOUN'), ('quickly', 'ADV'), ('unbiased', 'ADJ'), (',', 'PUNCT'), ('data', 'NOUN'), ('-', 'PUNCT'), ('driven', 'VERB'), (' ', 'SPACE'), ('decisions', 'NOUN'), ('scale', 'NOUN'), ('seconds', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('combination', 'pobj'), ('machine', 'pobj'), ('learning', 'acl'), (' ', 'dobj'), ('good', 'amod'), ('quality', 'compound'), ('data', 'conj'), (',', 'punct'), ('organizations', 'nsubj'), ('quickly', 'advmod'), ('unbiased', 'amod'), (',', 'punct'), ('data', 'npadvmod'), ('-', 'punct'), ('driven', 'amod'), (' ', 'compound'), ('decisions', 'dobj'), ('scale', 'pobj'), ('seconds', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[combination, machine], [machine, learning], [learning,  ], [ , good], [good, quality], [quality, data], [data, ,], [,, organizations], [organizations, quickly], [quickly, unbiased], [unbiased, ,], [,, data], [data, -], [-, driven], [driven,  ], [ , decisions], [decisions, scale], [scale, seconds], [seconds, .]]

>> Trigrams: 
[[combination, machine, learning], [machine, learning,  ], [learning,  , good], [ , good, quality], [good, quality, data], [quality, data, ,], [data, ,, organizations], [,, organizations, quickly], [organizations, quickly, unbiased], [quickly, unbiased, ,], [unbiased, ,, data], [,, data, -], [data, -, driven], [-, driven,  ], [driven,  , decisions], [ , decisions, scale], [decisions, scale, seconds], [scale, seconds, .]]

>> Noun Phrases are: 
[the combination, machine, good quality data, organizations, unbiased, data-driven  decisions, scale, seconds]

>> Named Entities are: 
[('seconds', 'TIME')]


============================ Sentence 223 =============================

 Machine learning offers various approaches to solve business problems. 


>> Tokens are: 
[ , Machine, learning, offers, approaches, solve, business, problems, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Machine', 'NOUN'), ('learning', 'NOUN'), ('offers', 'VERB'), ('approaches', 'NOUN'), ('solve', 'VERB'), ('business', 'NOUN'), ('problems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('Machine', 'compound'), ('learning', 'nsubj'), ('offers', 'ROOT'), ('approaches', 'dobj'), ('solve', 'acl'), ('business', 'compound'), ('problems', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[ , Machine], [Machine, learning], [learning, offers], [offers, approaches], [approaches, solve], [solve, business], [business, problems], [problems, .]]

>> Trigrams: 
[[ , Machine, learning], [Machine, learning, offers], [learning, offers, approaches], [offers, approaches, solve], [approaches, solve, business], [solve, business, problems], [business, problems, .]]

>> Noun Phrases are: 
[ Machine learning, various approaches, business problems]

>> Named Entities are: 
[]


============================ Sentence 224 =============================

The first  approach is based on whether there is data related to the outcome of a process. 


>> Tokens are: 
[ , approach, based, data, related, outcome, process, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('approach', 'NOUN'), ('based', 'VERB'), ('data', 'NOUN'), ('related', 'VERB'), ('outcome', 'NOUN'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('approach', 'nsubjpass'), ('based', 'ROOT'), ('data', 'attr'), ('related', 'acl'), ('outcome', 'pobj'), ('process', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , approach], [approach, based], [based, data], [data, related], [related, outcome], [outcome, process], [process, .]]

>> Trigrams: 
[[ , approach, based], [approach, based, data], [based, data, related], [data, related, outcome], [related, outcome, process], [outcome, process, .]]

>> Noun Phrases are: 
[The first  approach, data, the outcome, a process]

>> Named Entities are: 
[('first', 'ORDINAL')]


============================ Sentence 225 =============================

 Did the machine stop working? 


>> Tokens are: 
[ , machine, stop, working, ?] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('machine', 'NOUN'), ('stop', 'VERB'), ('working', 'VERB'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'dep'), ('machine', 'nsubj'), ('stop', 'ROOT'), ('working', 'xcomp'), ('?', 'punct')]

>> Bigrams: 
[[ , machine], [machine, stop], [stop, working], [working, ?]]

>> Trigrams: 
[[ , machine, stop], [machine, stop, working], [stop, working, ?]]

>> Noun Phrases are: 
[the machine]

>> Named Entities are: 
[]


============================ Sentence 226 =============================

Did the customer leave? 


>> Tokens are: 
[customer, leave, ?] 

>> PoS Tags are: 
[('customer', 'NOUN'), ('leave', 'VERB'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('customer', 'nsubj'), ('leave', 'ROOT'), ('?', 'punct')]

>> Bigrams: 
[[customer, leave], [leave, ?]]

>> Trigrams: 
[[customer, leave, ?]]

>> Noun Phrases are: 
[the customer]

>> Named Entities are: 
[]


============================ Sentence 227 =============================

Did the employee quit? 


>> Tokens are: 
[employee, quit, ?] 

>> PoS Tags are: 
[('employee', 'NOUN'), ('quit', 'VERB'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('employee', 'nsubj'), ('quit', 'ROOT'), ('?', 'punct')]

>> Bigrams: 
[[employee, quit], [quit, ?]]

>> Trigrams: 
[[employee, quit, ?]]

>> Noun Phrases are: 
[the employee]

>> Named Entities are: 
[]


============================ Sentence 228 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 229 =============================

It is important to understand and model how behavior and fluctuations in data  lead to a certain business outcome. 


>> Tokens are: 
[important, understand, model, behavior, fluctuations, data,  , lead, certain, business, outcome, .] 

>> PoS Tags are: 
[('important', 'ADJ'), ('understand', 'VERB'), ('model', 'VERB'), ('behavior', 'NOUN'), ('fluctuations', 'NOUN'), ('data', 'NOUN'), (' ', 'SPACE'), ('lead', 'VERB'), ('certain', 'ADJ'), ('business', 'NOUN'), ('outcome', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('important', 'acomp'), ('understand', 'xcomp'), ('model', 'conj'), ('behavior', 'nsubj'), ('fluctuations', 'conj'), ('data', 'compound'), (' ', 'pobj'), ('lead', 'dobj'), ('certain', 'amod'), ('business', 'compound'), ('outcome', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[important, understand], [understand, model], [model, behavior], [behavior, fluctuations], [fluctuations, data], [data,  ], [ , lead], [lead, certain], [certain, business], [business, outcome], [outcome, .]]

>> Trigrams: 
[[important, understand, model], [understand, model, behavior], [model, behavior, fluctuations], [behavior, fluctuations, data], [fluctuations, data,  ], [data,  , lead], [ , lead, certain], [lead, certain, business], [certain, business, outcome], [business, outcome, .]]

>> Noun Phrases are: 
[It, behavior, fluctuations, a certain business outcome]

>> Named Entities are: 
[]


============================ Sentence 230 =============================

This type of machine learning is known as  supervised learning. 


>> Tokens are: 
[type, machine, learning, known,  , supervised, learning, .] 

>> PoS Tags are: 
[('type', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('known', 'VERB'), (' ', 'SPACE'), ('supervised', 'VERB'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('type', 'nsubjpass'), ('machine', 'compound'), ('learning', 'pobj'), ('known', 'ROOT'), (' ', 'nsubj'), ('supervised', 'amod'), ('learning', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[type, machine], [machine, learning], [learning, known], [known,  ], [ , supervised], [supervised, learning], [learning, .]]

>> Trigrams: 
[[type, machine, learning], [machine, learning, known], [learning, known,  ], [known,  , supervised], [ , supervised, learning], [supervised, learning, .]]

>> Noun Phrases are: 
[This type, machine learning,  supervised learning]

>> Named Entities are: 
[]


============================ Sentence 231 =============================

  Machine learning   


>> Tokens are: 
[  , Machine, learning,  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Machine', 'NOUN'), ('learning', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('Machine', 'appos'), ('learning', 'advcl'), (' ', 'punct')]

>> Bigrams: 
[[  , Machine], [Machine, learning], [learning,  ]]

>> Trigrams: 
[[  , Machine, learning], [Machine, learning,  ]]

>> Noun Phrases are: 
[Machine]

>> Named Entities are: 
[]


============================ Sentence 232 =============================

Unsupervised learning Supervised learning   


>> Tokens are: 
[Unsupervised, learning, Supervised, learning,  ] 

>> PoS Tags are: 
[('Unsupervised', 'PROPN'), ('learning', 'VERB'), ('Supervised', 'ADJ'), ('learning', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Unsupervised', 'dep'), ('learning', 'acl'), ('Supervised', 'amod'), ('learning', 'ROOT'), (' ', 'appos')]

>> Bigrams: 
[[Unsupervised, learning], [learning, Supervised], [Supervised, learning], [learning,  ]]

>> Trigrams: 
[[Unsupervised, learning, Supervised], [learning, Supervised, learning], [Supervised, learning,  ]]

>> Noun Phrases are: 
[Unsupervised learning Supervised learning]

>> Named Entities are: 
[]


============================ Sentence 233 =============================

• 


>> Tokens are: 
[•] 

>> PoS Tags are: 
[('•', 'PRON')] 

>> Dependency Tags are: 
[('•', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[•]

>> Named Entities are: 
[]


============================ Sentence 234 =============================

	Data	does	not	contain	 a	category/response	to	 predict   


>> Tokens are: 
[	, Data, 	, 	, 	, contain, 	 , 	, category, /, response, 	, 	 , predict,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Data', 'PROPN'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('contain', 'VERB'), ('\t ', 'SPACE'), ('\t', 'SPACE'), ('category', 'NOUN'), ('/', 'SYM'), ('response', 'NOUN'), ('\t', 'SPACE'), ('\t ', 'SPACE'), ('predict', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Data', 'compound'), ('\t', 'nsubj'), ('\t', 'nsubj'), ('\t', 'nsubj'), ('contain', 'ccomp'), ('\t ', 'dobj'), ('\t', 'nmod'), ('category', 'nmod'), ('/', 'punct'), ('response', 'compound'), ('\t', 'nsubj'), ('\t ', 'pobj'), ('predict', 'advcl'), (' ', 'dobj')]

>> Bigrams: 
[[	, Data], [Data, 	], [	, 	], [	, 	], [	, contain], [contain, 	 ], [	 , 	], [	, category], [category, /], [/, response], [response, 	], [	, 	 ], [	 , predict], [predict,  ]]

>> Trigrams: 
[[	, Data, 	], [Data, 	, 	], [	, 	, 	], [	, 	, contain], [	, contain, 	 ], [contain, 	 , 	], [	 , 	, category], [	, category, /], [category, /, response], [/, response, 	], [response, 	, 	 ], [	, 	 , predict], [	 , predict,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 235 =============================

• 


>> Tokens are: 
[•] 

>> PoS Tags are: 
[('•', 'PRON')] 

>> Dependency Tags are: 
[('•', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[•]

>> Named Entities are: 
[]


============================ Sentence 236 =============================

	 


>> Tokens are: 
[	] 

>> PoS Tags are: 
[('\t', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 237 =============================

The	goal	here	is	to	learn	 about	the	underlying	 structure	or	distribution	 of	the	data,	and	discover	 inherent	patterns	from	 within	it	in	order	to	draw	 inferences  •		 


>> Tokens are: 
[	, goal, 	, 	, 	, 	, learn, 	 , 	, 	, underlying, 	 , structure, 	, 	, distribution, 	 , 	, 	, data, ,, 	, 	, discover, 	 , inherent, 	, patterns, 	, 	 , 	, 	, 	, order, 	, 	, draw, 	 , inferences,  , •, 		] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('goal', 'NOUN'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('learn', 'VERB'), ('\t ', 'SPACE'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('underlying', 'VERB'), ('\t ', 'SPACE'), ('structure', 'NOUN'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('distribution', 'NOUN'), ('\t ', 'SPACE'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('data', 'NOUN'), (',', 'PUNCT'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('discover', 'VERB'), ('\t ', 'SPACE'), ('inherent', 'ADJ'), ('\t', 'SPACE'), ('patterns', 'NOUN'), ('\t', 'SPACE'), ('\t ', 'SPACE'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('order', 'NOUN'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('draw', 'VERB'), ('\t ', 'SPACE'), ('inferences', 'NOUN'), (' ', 'SPACE'), ('•', 'X'), ('\t\t', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('goal', 'nsubj'), ('\t', 'appos'), ('\t', 'appos'), ('\t', 'attr'), ('\t', 'pobj'), ('learn', 'ccomp'), ('\t ', 'dobj'), ('\t', 'pobj'), ('\t', 'nmod'), ('underlying', 'amod'), ('\t ', 'nmod'), ('structure', 'appos'), ('\t', 'conj'), ('\t', 'conj'), ('distribution', 'conj'), ('\t ', 'appos'), ('\t', 'pobj'), ('\t', 'compound'), ('data', 'appos'), (',', 'punct'), ('\t', 'conj'), ('\t', 'conj'), ('discover', 'ROOT'), ('\t ', 'dobj'), ('inherent', 'amod'), ('\t', 'compound'), ('patterns', 'compound'), ('\t', 'dobj'), ('\t ', 'pobj'), ('\t', 'pobj'), ('\t', 'ccomp'), ('\t', 'compound'), ('order', 'pobj'), ('\t', 'nsubj'), ('\t', 'pobj'), ('draw', 'advcl'), ('\t ', 'compound'), ('inferences', 'dobj'), (' ', 'dobj'), ('•', 'cc'), ('\t\t', 'punct')]

>> Bigrams: 
[[	, goal], [goal, 	], [	, 	], [	, 	], [	, 	], [	, learn], [learn, 	 ], [	 , 	], [	, 	], [	, underlying], [underlying, 	 ], [	 , structure], [structure, 	], [	, 	], [	, distribution], [distribution, 	 ], [	 , 	], [	, 	], [	, data], [data, ,], [,, 	], [	, 	], [	, discover], [discover, 	 ], [	 , inherent], [inherent, 	], [	, patterns], [patterns, 	], [	, 	 ], [	 , 	], [	, 	], [	, 	], [	, order], [order, 	], [	, 	], [	, draw], [draw, 	 ], [	 , inferences], [inferences,  ], [ , •], [•, 		]]

>> Trigrams: 
[[	, goal, 	], [goal, 	, 	], [	, 	, 	], [	, 	, 	], [	, 	, learn], [	, learn, 	 ], [learn, 	 , 	], [	 , 	, 	], [	, 	, underlying], [	, underlying, 	 ], [underlying, 	 , structure], [	 , structure, 	], [structure, 	, 	], [	, 	, distribution], [	, distribution, 	 ], [distribution, 	 , 	], [	 , 	, 	], [	, 	, data], [	, data, ,], [data, ,, 	], [,, 	, 	], [	, 	, discover], [	, discover, 	 ], [discover, 	 , inherent], [	 , inherent, 	], [inherent, 	, patterns], [	, patterns, 	], [patterns, 	, 	 ], [	, 	 , 	], [	 , 	, 	], [	, 	, 	], [	, 	, order], [	, order, 	], [order, 	, 	], [	, 	, draw], [	, draw, 	 ], [draw, 	 , inferences], [	 , inferences,  ], [inferences,  , •], [ , •, 		]]

>> Noun Phrases are: 
[The	goal, the	underlying	 structure, distribution, the	data, it, 	order, 	 inferences]

>> Named Entities are: 
[]


============================ Sentence 238 =============================

We	know	the	outcome/ response  •	Takes	known	set	of	input	 data	and	responses	to	it,	and						 trains	a	model	to	generate	 reasonable	predictions	for						 the	response	to	new	dataMachine  learning   


>> Tokens are: 
[	, know, 	, 	, outcome/, response,  , •, 	, Takes, 	, known, 	, set, 	, 	, input, 	 , data, 	, 	, responses, 	, 	, ,, 	, 						 , trains, 	, 	, model, 	, 	, generate, 	 , reasonable, 	, predictions, 	, 						 , 	, response, 	, 	, new, 	, dataMachine,  , learning,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('know', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('outcome/', 'PUNCT'), ('response', 'NOUN'), (' ', 'SPACE'), ('•', 'PRON'), ('\t', 'SPACE'), ('Takes', 'VERB'), ('\t', 'SPACE'), ('known', 'VERB'), ('\t', 'SPACE'), ('set', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('input', 'VERB'), ('\t ', 'SPACE'), ('data', 'NOUN'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('responses', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), (',', 'PUNCT'), ('\t', 'SPACE'), ('\t\t\t\t\t\t ', 'SPACE'), ('trains', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('model', 'NOUN'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('generate', 'VERB'), ('\t ', 'SPACE'), ('reasonable', 'ADJ'), ('\t', 'SPACE'), ('predictions', 'NOUN'), ('\t', 'SPACE'), ('\t\t\t\t\t\t ', 'SPACE'), ('\t', 'SPACE'), ('response', 'NOUN'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('new', 'ADJ'), ('\t', 'SPACE'), ('dataMachine', 'NOUN'), (' ', 'SPACE'), ('learning', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'appos'), ('know', 'ROOT'), ('\t', 'nsubj'), ('\t', 'nmod'), ('outcome/', 'punct'), ('response', 'appos'), (' ', 'appos'), ('•', 'appos'), ('\t', 'nsubj'), ('Takes', 'ccomp'), ('\t', 'nsubj'), ('known', 'acl'), ('\t', 'dobj'), ('set', 'ccomp'), ('\t', 'nsubj'), ('\t', 'pobj'), ('input', 'ccomp'), ('\t ', 'nmod'), ('data', 'nsubj'), ('\t', 'appos'), ('\t', 'conj'), ('responses', 'ccomp'), ('\t', 'dobj'), ('\t', 'pobj'), (',', 'punct'), ('\t', 'nsubj'), ('\t\t\t\t\t\t ', 'conj'), ('trains', 'conj'), ('\t', 'nsubj'), ('\t', 'compound'), ('model', 'appos'), ('\t', 'conj'), ('\t', 'pobj'), ('generate', 'ccomp'), ('\t ', 'nmod'), ('reasonable', 'amod'), ('\t', 'compound'), ('predictions', 'dobj'), ('\t', 'dobj'), ('\t\t\t\t\t\t ', 'pobj'), ('\t', 'compound'), ('response', 'dobj'), ('\t', 'appos'), ('\t', 'pobj'), ('new', 'amod'), ('\t', 'compound'), ('dataMachine', 'appos'), (' ', 'appos'), ('learning', 'acl'), (' ', 'dobj')]

>> Bigrams: 
[[	, know], [know, 	], [	, 	], [	, outcome/], [outcome/, response], [response,  ], [ , •], [•, 	], [	, Takes], [Takes, 	], [	, known], [known, 	], [	, set], [set, 	], [	, 	], [	, input], [input, 	 ], [	 , data], [data, 	], [	, 	], [	, responses], [responses, 	], [	, 	], [	, ,], [,, 	], [	, 						 ], [						 , trains], [trains, 	], [	, 	], [	, model], [model, 	], [	, 	], [	, generate], [generate, 	 ], [	 , reasonable], [reasonable, 	], [	, predictions], [predictions, 	], [	, 						 ], [						 , 	], [	, response], [response, 	], [	, 	], [	, new], [new, 	], [	, dataMachine], [dataMachine,  ], [ , learning], [learning,  ]]

>> Trigrams: 
[[	, know, 	], [know, 	, 	], [	, 	, outcome/], [	, outcome/, response], [outcome/, response,  ], [response,  , •], [ , •, 	], [•, 	, Takes], [	, Takes, 	], [Takes, 	, known], [	, known, 	], [known, 	, set], [	, set, 	], [set, 	, 	], [	, 	, input], [	, input, 	 ], [input, 	 , data], [	 , data, 	], [data, 	, 	], [	, 	, responses], [	, responses, 	], [responses, 	, 	], [	, 	, ,], [	, ,, 	], [,, 	, 						 ], [	, 						 , trains], [						 , trains, 	], [trains, 	, 	], [	, 	, model], [	, model, 	], [model, 	, 	], [	, 	, generate], [	, generate, 	 ], [generate, 	 , reasonable], [	 , reasonable, 	], [reasonable, 	, predictions], [	, predictions, 	], [predictions, 	, 						 ], [	, 						 , 	], [						 , 	, response], [	, response, 	], [response, 	, 	], [	, 	, new], [	, new, 	], [new, 	, dataMachine], [	, dataMachine,  ], [dataMachine,  , learning], [ , learning,  ]]

>> Noun Phrases are: 
[We, the	outcome/ response, •, 	 data, it, a	model, 	 reasonable	predictions, the	response, new	dataMachine]

>> Named Entities are: 
[]


============================ Sentence 239 =============================

Unsupervised learning  •   


>> Tokens are: 
[Unsupervised, learning,  , •,  ] 

>> PoS Tags are: 
[('Unsupervised', 'PROPN'), ('learning', 'VERB'), (' ', 'SPACE'), ('•', 'PRON'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Unsupervised', 'nsubj'), ('learning', 'ROOT'), (' ', 'dobj'), ('•', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Unsupervised, learning], [learning,  ], [ , •], [•,  ]]

>> Trigrams: 
[[Unsupervised, learning,  ], [learning,  , •], [ , •,  ]]

>> Noun Phrases are: 
[Unsupervised]

>> Named Entities are: 
[]


============================ Sentence 240 =============================

Data does not contain a category/response to predict  •   


>> Tokens are: 
[Data, contain, category, /, response, predict,  , •,  ] 

>> PoS Tags are: 
[('Data', 'PROPN'), ('contain', 'VERB'), ('category', 'NOUN'), ('/', 'SYM'), ('response', 'NOUN'), ('predict', 'VERB'), (' ', 'SPACE'), ('•', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Data', 'nsubj'), ('contain', 'ROOT'), ('category', 'nmod'), ('/', 'punct'), ('response', 'dobj'), ('predict', 'relcl'), (' ', 'dobj'), ('•', 'npadvmod'), (' ', 'punct')]

>> Bigrams: 
[[Data, contain], [contain, category], [category, /], [/, response], [response, predict], [predict,  ], [ , •], [•,  ]]

>> Trigrams: 
[[Data, contain, category], [contain, category, /], [category, /, response], [/, response, predict], [response, predict,  ], [predict,  , •], [ , •,  ]]

>> Noun Phrases are: 
[Data, a category/response]

>> Named Entities are: 
[]


============================ Sentence 241 =============================

The goal here is to learn about the underlying structure        or distribution of the data, and discover inherent      patterns from within it in order to draw inferences   


>> Tokens are: 
[goal, learn, underlying, structure,        , distribution, data, ,, discover, inherent,      , patterns, order, draw, inferences,  ] 

>> PoS Tags are: 
[('goal', 'NOUN'), ('learn', 'VERB'), ('underlying', 'VERB'), ('structure', 'NOUN'), ('       ', 'SPACE'), ('distribution', 'NOUN'), ('data', 'NOUN'), (',', 'PUNCT'), ('discover', 'VERB'), ('inherent', 'ADJ'), ('     ', 'SPACE'), ('patterns', 'NOUN'), ('order', 'NOUN'), ('draw', 'VERB'), ('inferences', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('goal', 'nsubj'), ('learn', 'xcomp'), ('underlying', 'amod'), ('structure', 'pobj'), ('       ', 'appos'), ('distribution', 'conj'), ('data', 'pobj'), (',', 'punct'), ('discover', 'conj'), ('inherent', 'amod'), ('     ', 'compound'), ('patterns', 'dobj'), ('order', 'pobj'), ('draw', 'acl'), ('inferences', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[goal, learn], [learn, underlying], [underlying, structure], [structure,        ], [       , distribution], [distribution, data], [data, ,], [,, discover], [discover, inherent], [inherent,      ], [     , patterns], [patterns, order], [order, draw], [draw, inferences], [inferences,  ]]

>> Trigrams: 
[[goal, learn, underlying], [learn, underlying, structure], [underlying, structure,        ], [structure,        , distribution], [       , distribution, data], [distribution, data, ,], [data, ,, discover], [,, discover, inherent], [discover, inherent,      ], [inherent,      , patterns], [     , patterns, order], [patterns, order, draw], [order, draw, inferences], [draw, inferences,  ]]

>> Noun Phrases are: 
[The goal, the underlying structure, distribution, the data, inherent      patterns, it, order, inferences]

>> Named Entities are: 
[]


============================ Sentence 242 =============================

Supervised learning   


>> Tokens are: 
[Supervised, learning,  ] 

>> PoS Tags are: 
[('Supervised', 'ADJ'), ('learning', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Supervised', 'amod'), ('learning', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[Supervised, learning], [learning,  ]]

>> Trigrams: 
[[Supervised, learning,  ]]

>> Noun Phrases are: 
[Supervised learning]

>> Named Entities are: 
[]


============================ Sentence 243 =============================

•   


>> Tokens are: 
[•,  ] 

>> PoS Tags are: 
[('•', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('•', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[•,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 244 =============================

We know the outcome/response  •  Takes known set of input data and responses to it, and      trains a model to generate reasonable predictions for      the response to new data    11/14Demystifying data science    


>> Tokens are: 
[know, outcome, /, response,  , •,  , Takes, known, set, input, data, responses, ,,      , trains, model, generate, reasonable, predictions,      , response, new, data,    , 11/14Demystifying, data, science,   ] 

>> PoS Tags are: 
[('know', 'VERB'), ('outcome', 'NOUN'), ('/', 'SYM'), ('response', 'NOUN'), (' ', 'SPACE'), ('•', 'PRON'), (' ', 'SPACE'), ('Takes', 'VERB'), ('known', 'VERB'), ('set', 'NOUN'), ('input', 'NOUN'), ('data', 'NOUN'), ('responses', 'NOUN'), (',', 'PUNCT'), ('     ', 'SPACE'), ('trains', 'VERB'), ('model', 'NOUN'), ('generate', 'VERB'), ('reasonable', 'ADJ'), ('predictions', 'NOUN'), ('     ', 'SPACE'), ('response', 'NOUN'), ('new', 'ADJ'), ('data', 'NOUN'), ('   ', 'SPACE'), ('11/14Demystifying', 'NOUN'), ('data', 'NOUN'), ('science', 'NOUN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('know', 'ROOT'), ('outcome', 'nmod'), ('/', 'punct'), ('response', 'dobj'), (' ', 'punct'), ('•', 'punct'), (' ', 'nsubj'), ('Takes', 'ccomp'), ('known', 'amod'), ('set', 'dobj'), ('input', 'compound'), ('data', 'pobj'), ('responses', 'conj'), (',', 'punct'), ('     ', 'nsubj'), ('trains', 'conj'), ('model', 'dobj'), ('generate', 'xcomp'), ('reasonable', 'amod'), ('predictions', 'dobj'), ('     ', 'pobj'), ('response', 'dobj'), ('new', 'amod'), ('data', 'pobj'), ('   ', 'nummod'), ('11/14Demystifying', 'compound'), ('data', 'compound'), ('science', 'appos'), ('  ', 'dobj')]

>> Bigrams: 
[[know, outcome], [outcome, /], [/, response], [response,  ], [ , •], [•,  ], [ , Takes], [Takes, known], [known, set], [set, input], [input, data], [data, responses], [responses, ,], [,,      ], [     , trains], [trains, model], [model, generate], [generate, reasonable], [reasonable, predictions], [predictions,      ], [     , response], [response, new], [new, data], [data,    ], [   , 11/14Demystifying], [11/14Demystifying, data], [data, science], [science,   ]]

>> Trigrams: 
[[know, outcome, /], [outcome, /, response], [/, response,  ], [response,  , •], [ , •,  ], [•,  , Takes], [ , Takes, known], [Takes, known, set], [known, set, input], [set, input, data], [input, data, responses], [data, responses, ,], [responses, ,,      ], [,,      , trains], [     , trains, model], [trains, model, generate], [model, generate, reasonable], [generate, reasonable, predictions], [reasonable, predictions,      ], [predictions,      , response], [     , response, new], [response, new, data], [new, data,    ], [data,    , 11/14Demystifying], [   , 11/14Demystifying, data], [11/14Demystifying, data, science], [data, science,   ]]

>> Noun Phrases are: 
[We, the outcome/response, known set, input data, responses, it, a model, reasonable predictions, the response, new data, 11/14Demystifying data science]

>> Named Entities are: 
[]


============================ Sentence 245 =============================

If there is no response or category to predict, the goal is to learn the underlying  structure of the data and discover patterns to draw real world inferences. 


>> Tokens are: 
[response, category, predict, ,, goal, learn, underlying,  , structure, data, discover, patterns, draw, real, world, inferences, .] 

>> PoS Tags are: 
[('response', 'NOUN'), ('category', 'NOUN'), ('predict', 'VERB'), (',', 'PUNCT'), ('goal', 'NOUN'), ('learn', 'VERB'), ('underlying', 'ADJ'), (' ', 'SPACE'), ('structure', 'NOUN'), ('data', 'NOUN'), ('discover', 'VERB'), ('patterns', 'NOUN'), ('draw', 'VERB'), ('real', 'ADJ'), ('world', 'NOUN'), ('inferences', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('response', 'attr'), ('category', 'conj'), ('predict', 'acl'), (',', 'punct'), ('goal', 'nsubj'), ('learn', 'xcomp'), ('underlying', 'amod'), (' ', 'compound'), ('structure', 'dobj'), ('data', 'pobj'), ('discover', 'conj'), ('patterns', 'dobj'), ('draw', 'advcl'), ('real', 'amod'), ('world', 'compound'), ('inferences', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[response, category], [category, predict], [predict, ,], [,, goal], [goal, learn], [learn, underlying], [underlying,  ], [ , structure], [structure, data], [data, discover], [discover, patterns], [patterns, draw], [draw, real], [real, world], [world, inferences], [inferences, .]]

>> Trigrams: 
[[response, category, predict], [category, predict, ,], [predict, ,, goal], [,, goal, learn], [goal, learn, underlying], [learn, underlying,  ], [underlying,  , structure], [ , structure, data], [structure, data, discover], [data, discover, patterns], [discover, patterns, draw], [patterns, draw, real], [draw, real, world], [real, world, inferences], [world, inferences, .]]

>> Noun Phrases are: 
[no response, category, the goal, the underlying  structure, the data, patterns, real world inferences]

>> Named Entities are: 
[]


============================ Sentence 246 =============================

For  example, unsupervised learning approaches are commonly used to segment  customers based on demographic, behavior and past product purchase history. 


>> Tokens are: 
[ , example, ,, unsupervised, learning, approaches, commonly, segment,  , customers, based, demographic, ,, behavior, past, product, purchase, history, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('example', 'NOUN'), (',', 'PUNCT'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('approaches', 'NOUN'), ('commonly', 'ADV'), ('segment', 'VERB'), (' ', 'SPACE'), ('customers', 'NOUN'), ('based', 'VERB'), ('demographic', 'ADJ'), (',', 'PUNCT'), ('behavior', 'NOUN'), ('past', 'ADJ'), ('product', 'NOUN'), ('purchase', 'NOUN'), ('history', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'pobj'), ('example', 'pobj'), (',', 'punct'), ('unsupervised', 'amod'), ('learning', 'compound'), ('approaches', 'nsubjpass'), ('commonly', 'advmod'), ('segment', 'xcomp'), (' ', 'dobj'), ('customers', 'dobj'), ('based', 'prep'), ('demographic', 'amod'), (',', 'punct'), ('behavior', 'conj'), ('past', 'conj'), ('product', 'compound'), ('purchase', 'compound'), ('history', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , example], [example, ,], [,, unsupervised], [unsupervised, learning], [learning, approaches], [approaches, commonly], [commonly, segment], [segment,  ], [ , customers], [customers, based], [based, demographic], [demographic, ,], [,, behavior], [behavior, past], [past, product], [product, purchase], [purchase, history], [history, .]]

>> Trigrams: 
[[ , example, ,], [example, ,, unsupervised], [,, unsupervised, learning], [unsupervised, learning, approaches], [learning, approaches, commonly], [approaches, commonly, segment], [commonly, segment,  ], [segment,  , customers], [ , customers, based], [customers, based, demographic], [based, demographic, ,], [demographic, ,, behavior], [,, behavior, past], [behavior, past, product], [past, product, purchase], [product, purchase, history], [purchase, history, .]]

>> Noun Phrases are: 
[example, unsupervised learning approaches, customers, demographic, behavior and past product purchase history]

>> Named Entities are: 
[]


============================ Sentence 247 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 248 =============================

This allows an organization to learn more about their customers, which products  are frequently bought together and how different groups prefer certain services  and products over others. 


>> Tokens are: 
[allows, organization, learn, customers, ,, products,  , frequently, bought, different, groups, prefer, certain, services,  , products, .] 

>> PoS Tags are: 
[('allows', 'VERB'), ('organization', 'NOUN'), ('learn', 'VERB'), ('customers', 'NOUN'), (',', 'PUNCT'), ('products', 'VERB'), (' ', 'SPACE'), ('frequently', 'ADV'), ('bought', 'VERB'), ('different', 'ADJ'), ('groups', 'NOUN'), ('prefer', 'VERB'), ('certain', 'ADJ'), ('services', 'NOUN'), (' ', 'SPACE'), ('products', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('allows', 'ROOT'), ('organization', 'nsubj'), ('learn', 'ccomp'), ('customers', 'pobj'), (',', 'punct'), ('products', 'relcl'), (' ', 'nsubjpass'), ('frequently', 'advmod'), ('bought', 'ccomp'), ('different', 'amod'), ('groups', 'nsubj'), ('prefer', 'conj'), ('certain', 'amod'), ('services', 'compound'), (' ', 'dobj'), ('products', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[allows, organization], [organization, learn], [learn, customers], [customers, ,], [,, products], [products,  ], [ , frequently], [frequently, bought], [bought, different], [different, groups], [groups, prefer], [prefer, certain], [certain, services], [services,  ], [ , products], [products, .]]

>> Trigrams: 
[[allows, organization, learn], [organization, learn, customers], [learn, customers, ,], [customers, ,, products], [,, products,  ], [products,  , frequently], [ , frequently, bought], [frequently, bought, different], [bought, different, groups], [different, groups, prefer], [groups, prefer, certain], [prefer, certain, services], [certain, services,  ], [services,  , products], [ , products, .]]

>> Noun Phrases are: 
[an organization, their customers, how different groups, products, others]

>> Named Entities are: 
[]


============================ Sentence 249 =============================

It may not immediately understand that Emily from  Philadelphia falls within customer segment X, but the organization can learn how  many of its customers are similar to Emily based on behavior and consumption  characteristics. 


>> Tokens are: 
[immediately, understand, Emily,  , Philadelphia, falls, customer, segment, X, ,, organization, learn,  , customers, similar, Emily, based, behavior, consumption,  , characteristics, .] 

>> PoS Tags are: 
[('immediately', 'ADV'), ('understand', 'VERB'), ('Emily', 'ADV'), (' ', 'SPACE'), ('Philadelphia', 'PROPN'), ('falls', 'VERB'), ('customer', 'NOUN'), ('segment', 'NOUN'), ('X', 'NOUN'), (',', 'PUNCT'), ('organization', 'NOUN'), ('learn', 'VERB'), (' ', 'SPACE'), ('customers', 'NOUN'), ('similar', 'ADJ'), ('Emily', 'ADV'), ('based', 'VERB'), ('behavior', 'NOUN'), ('consumption', 'NOUN'), (' ', 'SPACE'), ('characteristics', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('immediately', 'advmod'), ('understand', 'ROOT'), ('Emily', 'advmod'), (' ', 'pobj'), ('Philadelphia', 'nsubj'), ('falls', 'ccomp'), ('customer', 'compound'), ('segment', 'compound'), ('X', 'pobj'), (',', 'punct'), ('organization', 'nsubj'), ('learn', 'conj'), (' ', 'nsubj'), ('customers', 'pobj'), ('similar', 'acomp'), ('Emily', 'pobj'), ('based', 'prep'), ('behavior', 'pobj'), ('consumption', 'conj'), (' ', 'prep'), ('characteristics', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[immediately, understand], [understand, Emily], [Emily,  ], [ , Philadelphia], [Philadelphia, falls], [falls, customer], [customer, segment], [segment, X], [X, ,], [,, organization], [organization, learn], [learn,  ], [ , customers], [customers, similar], [similar, Emily], [Emily, based], [based, behavior], [behavior, consumption], [consumption,  ], [ , characteristics], [characteristics, .]]

>> Trigrams: 
[[immediately, understand, Emily], [understand, Emily,  ], [Emily,  , Philadelphia], [ , Philadelphia, falls], [Philadelphia, falls, customer], [falls, customer, segment], [customer, segment, X], [segment, X, ,], [X, ,, organization], [,, organization, learn], [organization, learn,  ], [learn,  , customers], [ , customers, similar], [customers, similar, Emily], [similar, Emily, based], [Emily, based, behavior], [based, behavior, consumption], [behavior, consumption,  ], [consumption,  , characteristics], [ , characteristics, .]]

>> Noun Phrases are: 
[It, Philadelphia, customer segment X, the organization, its customers, behavior, consumption, characteristics]

>> Named Entities are: 
[('Emily', 'PERSON'), ('Philadelphia', 'GPE')]


============================ Sentence 250 =============================

Are they active on mobile? 


>> Tokens are: 
[active, mobile, ?] 

>> PoS Tags are: 
[('active', 'ADJ'), ('mobile', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('active', 'acomp'), ('mobile', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[active, mobile], [mobile, ?]]

>> Trigrams: 
[[active, mobile, ?]]

>> Noun Phrases are: 
[they, mobile]

>> Named Entities are: 
[]


============================ Sentence 251 =============================

Do they use social media? 


>> Tokens are: 
[use, social, media, ?] 

>> PoS Tags are: 
[('use', 'VERB'), ('social', 'ADJ'), ('media', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('use', 'ROOT'), ('social', 'amod'), ('media', 'dobj'), ('?', 'punct')]

>> Bigrams: 
[[use, social], [social, media], [media, ?]]

>> Trigrams: 
[[use, social, media], [social, media, ?]]

>> Noun Phrases are: 
[they, social media]

>> Named Entities are: 
[]


============================ Sentence 252 =============================

Do they  visit retail stores for purchases? 


>> Tokens are: 
[ , visit, retail, stores, purchases, ?] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('visit', 'VERB'), ('retail', 'ADJ'), ('stores', 'NOUN'), ('purchases', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'dep'), ('visit', 'ROOT'), ('retail', 'amod'), ('stores', 'dobj'), ('purchases', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[ , visit], [visit, retail], [retail, stores], [stores, purchases], [purchases, ?]]

>> Trigrams: 
[[ , visit, retail], [visit, retail, stores], [retail, stores, purchases], [stores, purchases, ?]]

>> Noun Phrases are: 
[they, retail stores, purchases]

>> Named Entities are: 
[]


============================ Sentence 253 =============================

Are they affluent? 


>> Tokens are: 
[affluent, ?] 

>> PoS Tags are: 
[('affluent', 'ADJ'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('affluent', 'acomp'), ('?', 'punct')]

>> Bigrams: 
[[affluent, ?]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[they]

>> Named Entities are: 
[]


============================ Sentence 254 =============================

These insights can allow  organizations to make data-driven decisions for future marketing campaigns,  product development, etc. 


>> Tokens are: 
[insights, allow,  , organizations, data, -, driven, decisions, future, marketing, campaigns, ,,  , product, development, ,, etc, .] 

>> PoS Tags are: 
[('insights', 'NOUN'), ('allow', 'VERB'), (' ', 'SPACE'), ('organizations', 'NOUN'), ('data', 'NOUN'), ('-', 'PUNCT'), ('driven', 'VERB'), ('decisions', 'NOUN'), ('future', 'ADJ'), ('marketing', 'NOUN'), ('campaigns', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('product', 'NOUN'), ('development', 'NOUN'), (',', 'PUNCT'), ('etc', 'X'), ('.', 'X')] 

>> Dependency Tags are: 
[('insights', 'nsubj'), ('allow', 'ROOT'), (' ', 'compound'), ('organizations', 'nsubj'), ('data', 'npadvmod'), ('-', 'punct'), ('driven', 'amod'), ('decisions', 'dobj'), ('future', 'amod'), ('marketing', 'compound'), ('campaigns', 'pobj'), (',', 'punct'), (' ', 'compound'), ('product', 'compound'), ('development', 'npadvmod'), (',', 'punct'), ('etc', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[insights, allow], [allow,  ], [ , organizations], [organizations, data], [data, -], [-, driven], [driven, decisions], [decisions, future], [future, marketing], [marketing, campaigns], [campaigns, ,], [,,  ], [ , product], [product, development], [development, ,], [,, etc], [etc, .]]

>> Trigrams: 
[[insights, allow,  ], [allow,  , organizations], [ , organizations, data], [organizations, data, -], [data, -, driven], [-, driven, decisions], [driven, decisions, future], [decisions, future, marketing], [future, marketing, campaigns], [marketing, campaigns, ,], [campaigns, ,,  ], [,,  , product], [ , product, development], [product, development, ,], [development, ,, etc], [,, etc, .]]

>> Noun Phrases are: 
[These insights,  organizations, data-driven decisions, future marketing campaigns]

>> Named Entities are: 
[]


============================ Sentence 255 =============================

  Supervised learning   


>> Tokens are: 
[  , Supervised, learning,  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Supervised', 'ADJ'), ('learning', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'dep'), ('Supervised', 'amod'), ('learning', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[  , Supervised], [Supervised, learning], [learning,  ]]

>> Trigrams: 
[[  , Supervised, learning], [Supervised, learning,  ]]

>> Noun Phrases are: 
[  Supervised learning]

>> Named Entities are: 
[]


============================ Sentence 256 =============================

Supervised learning can be broken down into two categories based on what it is  trying to predict. 


>> Tokens are: 
[Supervised, learning, broken, categories, based,  , trying, predict, .] 

>> PoS Tags are: 
[('Supervised', 'ADJ'), ('learning', 'NOUN'), ('broken', 'VERB'), ('categories', 'NOUN'), ('based', 'VERB'), (' ', 'SPACE'), ('trying', 'VERB'), ('predict', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Supervised', 'amod'), ('learning', 'nsubjpass'), ('broken', 'ROOT'), ('categories', 'pobj'), ('based', 'prep'), (' ', 'nsubj'), ('trying', 'pcomp'), ('predict', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[Supervised, learning], [learning, broken], [broken, categories], [categories, based], [based,  ], [ , trying], [trying, predict], [predict, .]]

>> Trigrams: 
[[Supervised, learning, broken], [learning, broken, categories], [broken, categories, based], [categories, based,  ], [based,  , trying], [ , trying, predict], [trying, predict, .]]

>> Noun Phrases are: 
[Supervised learning, two categories, what, it]

>> Named Entities are: 
[('two', 'CARDINAL')]


============================ Sentence 257 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 258 =============================

Supervised learning  Classification   


>> Tokens are: 
[Supervised, learning,  , Classification,  ] 

>> PoS Tags are: 
[('Supervised', 'ADJ'), ('learning', 'VERB'), (' ', 'SPACE'), ('Classification', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Supervised', 'amod'), ('learning', 'ROOT'), (' ', 'dobj'), ('Classification', 'compound'), (' ', 'dobj')]

>> Bigrams: 
[[Supervised, learning], [learning,  ], [ , Classification], [Classification,  ]]

>> Trigrams: 
[[Supervised, learning,  ], [learning,  , Classification], [ , Classification,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 259 =============================

(categories) Regression (numbers)   


>> Tokens are: 
[(, categories, ), Regression, (, numbers, ),  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('categories', 'NOUN'), (')', 'PUNCT'), ('Regression', 'NOUN'), ('(', 'PUNCT'), ('numbers', 'NOUN'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('categories', 'nmod'), (')', 'punct'), ('Regression', 'ROOT'), ('(', 'punct'), ('numbers', 'appos'), (')', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[(, categories], [categories, )], [), Regression], [Regression, (], [(, numbers], [numbers, )], [),  ]]

>> Trigrams: 
[[(, categories, )], [categories, ), Regression], [), Regression, (], [Regression, (, numbers], [(, numbers, )], [numbers, ),  ]]

>> Noun Phrases are: 
[(categories) Regression, numbers]

>> Named Entities are: 
[]


============================ Sentence 260 =============================

Use	if	data	can	be	tagged,	 categorized	or	separated	 into	specific	groups		or	 classes   


>> Tokens are: 
[Use, 	, 	, data, 	, 	, 	, tagged, ,, 	 , categorized, 	, 	, separated, 	 , 	, specific, 	, groups, 		, 	 , classes,  ] 

>> PoS Tags are: 
[('Use', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('data', 'NOUN'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('tagged', 'VERB'), (',', 'PUNCT'), ('\t ', 'SPACE'), ('categorized', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('separated', 'VERB'), ('\t ', 'SPACE'), ('\t', 'SPACE'), ('specific', 'ADJ'), ('\t', 'SPACE'), ('groups', 'NOUN'), ('\t\t', 'SPACE'), ('\t ', 'SPACE'), ('classes', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Use', 'advcl'), ('\t', 'dobj'), ('\t', 'compound'), ('data', 'compound'), ('\t', 'nsubj'), ('\t', 'nsubj'), ('\t', 'nsubj'), ('tagged', 'ccomp'), (',', 'punct'), ('\t ', 'nsubj'), ('categorized', 'ROOT'), ('\t', 'dobj'), ('\t', 'conj'), ('separated', 'ccomp'), ('\t ', 'dobj'), ('\t', 'nmod'), ('specific', 'nmod'), ('\t', 'amod'), ('groups', 'pobj'), ('\t\t', 'prep'), ('\t ', 'amod'), ('classes', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[Use, 	], [	, 	], [	, data], [data, 	], [	, 	], [	, 	], [	, tagged], [tagged, ,], [,, 	 ], [	 , categorized], [categorized, 	], [	, 	], [	, separated], [separated, 	 ], [	 , 	], [	, specific], [specific, 	], [	, groups], [groups, 		], [		, 	 ], [	 , classes], [classes,  ]]

>> Trigrams: 
[[Use, 	, 	], [	, 	, data], [	, data, 	], [data, 	, 	], [	, 	, 	], [	, 	, tagged], [	, tagged, ,], [tagged, ,, 	 ], [,, 	 , categorized], [	 , categorized, 	], [categorized, 	, 	], [	, 	, separated], [	, separated, 	 ], [separated, 	 , 	], [	 , 	, specific], [	, specific, 	], [specific, 	, groups], [	, groups, 		], [groups, 		, 	 ], [		, 	 , classes], [	 , classes,  ]]

>> Noun Phrases are: 
[	specific	groups]

>> Named Entities are: 
[]


============================ Sentence 261 =============================

Use	if	the	response	being	 predicted	is	a	real	number   


>> Tokens are: 
[Use, 	, 	, 	, response, 	, 	 , predicted, 	, 	, 	, real, 	, number,  ] 

>> PoS Tags are: 
[('Use', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('response', 'NOUN'), ('\t', 'SPACE'), ('\t ', 'SPACE'), ('predicted', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('real', 'ADJ'), ('\t', 'SPACE'), ('number', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Use', 'ROOT'), ('\t', 'dobj'), ('\t', 'npadvmod'), ('\t', 'compound'), ('response', 'appos'), ('\t', 'nsubj'), ('\t ', 'acomp'), ('predicted', 'ccomp'), ('\t', 'nsubj'), ('\t', 'attr'), ('\t', 'nmod'), ('real', 'amod'), ('\t', 'amod'), ('number', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[Use, 	], [	, 	], [	, 	], [	, response], [response, 	], [	, 	 ], [	 , predicted], [predicted, 	], [	, 	], [	, 	], [	, real], [real, 	], [	, number], [number,  ]]

>> Trigrams: 
[[Use, 	, 	], [	, 	, 	], [	, 	, response], [	, response, 	], [response, 	, 	 ], [	, 	 , predicted], [	 , predicted, 	], [predicted, 	, 	], [	, 	, 	], [	, 	, real], [	, real, 	], [real, 	, number], [	, number,  ]]

>> Noun Phrases are: 
[the	response, a	real	number]

>> Named Entities are: 
[]


============================ Sentence 262 =============================

Supervised learning  Classification   


>> Tokens are: 
[Supervised, learning,  , Classification,  ] 

>> PoS Tags are: 
[('Supervised', 'ADJ'), ('learning', 'NOUN'), (' ', 'SPACE'), ('Classification', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Supervised', 'amod'), ('learning', 'ROOT'), (' ', 'punct'), ('Classification', 'compound'), (' ', 'dobj')]

>> Bigrams: 
[[Supervised, learning], [learning,  ], [ , Classification], [Classification,  ]]

>> Trigrams: 
[[Supervised, learning,  ], [learning,  , Classification], [ , Classification,  ]]

>> Noun Phrases are: 
[Supervised learning]

>> Named Entities are: 
[]


============================ Sentence 263 =============================

(categories)   


>> Tokens are: 
[(, categories, ),  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('categories', 'NOUN'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('categories', 'ROOT'), (')', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[(, categories], [categories, )], [),  ]]

>> Trigrams: 
[[(, categories, )], [categories, ),  ]]

>> Noun Phrases are: 
[(categories]

>> Named Entities are: 
[]


============================ Sentence 264 =============================

Regression (numbers)   


>> Tokens are: 
[Regression, (, numbers, ),  ] 

>> PoS Tags are: 
[('Regression', 'NOUN'), ('(', 'PUNCT'), ('numbers', 'NOUN'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Regression', 'ROOT'), ('(', 'punct'), ('numbers', 'appos'), (')', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Regression, (], [(, numbers], [numbers, )], [),  ]]

>> Trigrams: 
[[Regression, (, numbers], [(, numbers, )], [numbers, ),  ]]

>> Noun Phrases are: 
[Regression, numbers]

>> Named Entities are: 
[]


============================ Sentence 265 =============================

Use if data can be tagged,  categorized or separated   into specific groups  or classes   


>> Tokens are: 
[Use, data, tagged, ,,  , categorized, separated,   , specific, groups,  , classes,  ] 

>> PoS Tags are: 
[('Use', 'PROPN'), ('data', 'NOUN'), ('tagged', 'VERB'), (',', 'PUNCT'), (' ', 'SPACE'), ('categorized', 'VERB'), ('separated', 'VERB'), ('  ', 'SPACE'), ('specific', 'ADJ'), ('groups', 'NOUN'), (' ', 'SPACE'), ('classes', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Use', 'advcl'), ('data', 'nsubjpass'), ('tagged', 'advcl'), (',', 'punct'), (' ', 'nsubj'), ('categorized', 'ROOT'), ('separated', 'conj'), ('  ', 'dobj'), ('specific', 'amod'), ('groups', 'pobj'), (' ', 'appos'), ('classes', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[Use, data], [data, tagged], [tagged, ,], [,,  ], [ , categorized], [categorized, separated], [separated,   ], [  , specific], [specific, groups], [groups,  ], [ , classes], [classes,  ]]

>> Trigrams: 
[[Use, data, tagged], [data, tagged, ,], [tagged, ,,  ], [,,  , categorized], [ , categorized, separated], [categorized, separated,   ], [separated,   , specific], [  , specific, groups], [specific, groups,  ], [groups,  , classes], [ , classes,  ]]

>> Noun Phrases are: 
[data, specific groups, classes]

>> Named Entities are: 
[]


============================ Sentence 266 =============================

Use if the response being  predicted is a real number  Classification algorithms or approaches are used when asking questions regarding  categories. 


>> Tokens are: 
[Use, response,  , predicted, real, number,  , Classification, algorithms, approaches, asking, questions,  , categories, .] 

>> PoS Tags are: 
[('Use', 'VERB'), ('response', 'NOUN'), (' ', 'SPACE'), ('predicted', 'VERB'), ('real', 'ADJ'), ('number', 'NOUN'), (' ', 'SPACE'), ('Classification', 'PROPN'), ('algorithms', 'NOUN'), ('approaches', 'NOUN'), ('asking', 'VERB'), ('questions', 'NOUN'), (' ', 'SPACE'), ('categories', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Use', 'csubj'), ('response', 'nsubj'), (' ', 'attr'), ('predicted', 'advcl'), ('real', 'amod'), ('number', 'attr'), (' ', 'acl'), ('Classification', 'compound'), ('algorithms', 'dobj'), ('approaches', 'conj'), ('asking', 'advcl'), ('questions', 'dobj'), (' ', 'compound'), ('categories', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Use, response], [response,  ], [ , predicted], [predicted, real], [real, number], [number,  ], [ , Classification], [Classification, algorithms], [algorithms, approaches], [approaches, asking], [asking, questions], [questions,  ], [ , categories], [categories, .]]

>> Trigrams: 
[[Use, response,  ], [response,  , predicted], [ , predicted, real], [predicted, real, number], [real, number,  ], [number,  , Classification], [ , Classification, algorithms], [Classification, algorithms, approaches], [algorithms, approaches, asking], [approaches, asking, questions], [asking, questions,  ], [questions,  , categories], [ , categories, .]]

>> Noun Phrases are: 
[the response, a real number, Classification algorithms, approaches, questions,  categories]

>> Named Entities are: 
[('Classification', 'ORG')]


============================ Sentence 267 =============================

Examples include:   • 


>> Tokens are: 
[Examples, include, :,   , •] 

>> PoS Tags are: 
[('Examples', 'NOUN'), ('include', 'VERB'), (':', 'PUNCT'), ('  ', 'SPACE'), ('•', 'PRON')] 

>> Dependency Tags are: 
[('Examples', 'nsubj'), ('include', 'ROOT'), (':', 'punct'), ('  ', 'dobj'), ('•', 'cc')]

>> Bigrams: 
[[Examples, include], [include, :], [:,   ], [  , •]]

>> Trigrams: 
[[Examples, include, :], [include, :,   ], [:,   , •]]

>> Noun Phrases are: 
[Examples]

>> Named Entities are: 
[]


============================ Sentence 268 =============================

Will this customer switch to another competitor in the next month? 


>> Tokens are: 
[customer, switch, competitor, month, ?] 

>> PoS Tags are: 
[('customer', 'NOUN'), ('switch', 'VERB'), ('competitor', 'NOUN'), ('month', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('customer', 'nsubj'), ('switch', 'ROOT'), ('competitor', 'pobj'), ('month', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[customer, switch], [switch, competitor], [competitor, month], [month, ?]]

>> Trigrams: 
[[customer, switch, competitor], [switch, competitor, month], [competitor, month, ?]]

>> Noun Phrases are: 
[this customer, another competitor, the next month]

>> Named Entities are: 
[('the next month', 'DATE')]


============================ Sentence 269 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 270 =============================

• 


>> Tokens are: 
[•] 

>> PoS Tags are: 
[('•', 'PRON')] 

>> Dependency Tags are: 
[('•', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[•]

>> Named Entities are: 
[]


============================ Sentence 271 =============================

Will this customer default in the next month, six months or year? 


>> Tokens are: 
[customer, default, month, ,, months, year, ?] 

>> PoS Tags are: 
[('customer', 'NOUN'), ('default', 'VERB'), ('month', 'NOUN'), (',', 'PUNCT'), ('months', 'NOUN'), ('year', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('customer', 'nsubj'), ('default', 'ROOT'), ('month', 'pobj'), (',', 'punct'), ('months', 'npadvmod'), ('year', 'conj'), ('?', 'punct')]

>> Bigrams: 
[[customer, default], [default, month], [month, ,], [,, months], [months, year], [year, ?]]

>> Trigrams: 
[[customer, default, month], [default, month, ,], [month, ,, months], [,, months, year], [months, year, ?]]

>> Noun Phrases are: 
[this customer, the next month]

>> Named Entities are: 
[('the next month', 'DATE'), ('six months or year', 'DATE')]


============================ Sentence 272 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 273 =============================

• 


>> Tokens are: 
[•] 

>> PoS Tags are: 
[('•', 'PRON')] 

>> Dependency Tags are: 
[('•', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[•]

>> Named Entities are: 
[]


============================ Sentence 274 =============================

Is an email spam or genuine? 


>> Tokens are: 
[email, spam, genuine, ?] 

>> PoS Tags are: 
[('email', 'NOUN'), ('spam', 'NOUN'), ('genuine', 'ADJ'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('email', 'compound'), ('spam', 'attr'), ('genuine', 'conj'), ('?', 'punct')]

>> Bigrams: 
[[email, spam], [spam, genuine], [genuine, ?]]

>> Trigrams: 
[[email, spam, genuine], [spam, genuine, ?]]

>> Noun Phrases are: 
[an email spam]

>> Named Entities are: 
[]


============================ Sentence 275 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 276 =============================

• 


>> Tokens are: 
[•] 

>> PoS Tags are: 
[('•', 'PRON')] 

>> Dependency Tags are: 
[('•', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[•]

>> Named Entities are: 
[]


============================ Sentence 277 =============================

Is this document for compliance, legal or customer support? 


>> Tokens are: 
[document, compliance, ,, legal, customer, support, ?] 

>> PoS Tags are: 
[('document', 'NOUN'), ('compliance', 'NOUN'), (',', 'PUNCT'), ('legal', 'ADJ'), ('customer', 'NOUN'), ('support', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('document', 'attr'), ('compliance', 'pobj'), (',', 'punct'), ('legal', 'conj'), ('customer', 'conj'), ('support', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[document, compliance], [compliance, ,], [,, legal], [legal, customer], [customer, support], [support, ?]]

>> Trigrams: 
[[document, compliance, ,], [compliance, ,, legal], [,, legal, customer], [legal, customer, support], [customer, support, ?]]

>> Noun Phrases are: 
[this document, compliance, customer, support]

>> Named Entities are: 
[]


============================ Sentence 278 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 279 =============================

Regression algorithms or approaches are used when asking questions with   numerical outcomes:  • 


>> Tokens are: 
[Regression, algorithms, approaches, asking, questions,   , numerical, outcomes, :,  , •] 

>> PoS Tags are: 
[('Regression', 'NOUN'), ('algorithms', 'NOUN'), ('approaches', 'NOUN'), ('asking', 'VERB'), ('questions', 'NOUN'), ('  ', 'SPACE'), ('numerical', 'ADJ'), ('outcomes', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE'), ('•', 'VERB')] 

>> Dependency Tags are: 
[('Regression', 'compound'), ('algorithms', 'nsubjpass'), ('approaches', 'conj'), ('asking', 'advcl'), ('questions', 'dobj'), ('  ', 'poss'), ('numerical', 'amod'), ('outcomes', 'pobj'), (':', 'punct'), (' ', 'appos'), ('•', 'punct')]

>> Bigrams: 
[[Regression, algorithms], [algorithms, approaches], [approaches, asking], [asking, questions], [questions,   ], [  , numerical], [numerical, outcomes], [outcomes, :], [:,  ], [ , •]]

>> Trigrams: 
[[Regression, algorithms, approaches], [algorithms, approaches, asking], [approaches, asking, questions], [asking, questions,   ], [questions,   , numerical], [  , numerical, outcomes], [numerical, outcomes, :], [outcomes, :,  ], [:,  , •]]

>> Noun Phrases are: 
[Regression algorithms, approaches, questions,   numerical outcomes]

>> Named Entities are: 
[]


============================ Sentence 280 =============================

What will the temperature be at 6:00 pm today? 


>> Tokens are: 
[temperature, 6:00, pm, today, ?] 

>> PoS Tags are: 
[('temperature', 'NOUN'), ('6:00', 'NUM'), ('pm', 'NOUN'), ('today', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('temperature', 'nsubj'), ('6:00', 'nummod'), ('pm', 'pobj'), ('today', 'npadvmod'), ('?', 'punct')]

>> Bigrams: 
[[temperature, 6:00], [6:00, pm], [pm, today], [today, ?]]

>> Trigrams: 
[[temperature, 6:00, pm], [6:00, pm, today], [pm, today, ?]]

>> Noun Phrases are: 
[What, the temperature, 6:00 pm]

>> Named Entities are: 
[('6:00 pm', 'TIME'), ('today', 'DATE')]


============================ Sentence 281 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 282 =============================

• 


>> Tokens are: 
[•] 

>> PoS Tags are: 
[('•', 'VERB')] 

>> Dependency Tags are: 
[('•', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 283 =============================

In how many days will this machine stop working? 


>> Tokens are: 
[days, machine, stop, working, ?] 

>> PoS Tags are: 
[('days', 'NOUN'), ('machine', 'NOUN'), ('stop', 'VERB'), ('working', 'VERB'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('days', 'npadvmod'), ('machine', 'nsubj'), ('stop', 'pcomp'), ('working', 'xcomp'), ('?', 'punct')]

>> Bigrams: 
[[days, machine], [machine, stop], [stop, working], [working, ?]]

>> Trigrams: 
[[days, machine, stop], [machine, stop, working], [stop, working, ?]]

>> Noun Phrases are: 
[this machine]

>> Named Entities are: 
[]


============================ Sentence 284 =============================

  • 


>> Tokens are: 
[  , •] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('•', 'CCONJ')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('•', 'punct')]

>> Bigrams: 
[[  , •]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 285 =============================

What should be the price of a property based on size, number of rooms and location? 


>> Tokens are: 
[price, property, based, size, ,, number, rooms, location, ?] 

>> PoS Tags are: 
[('price', 'NOUN'), ('property', 'NOUN'), ('based', 'VERB'), ('size', 'NOUN'), (',', 'PUNCT'), ('number', 'NOUN'), ('rooms', 'NOUN'), ('location', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('price', 'attr'), ('property', 'pobj'), ('based', 'acl'), ('size', 'pobj'), (',', 'punct'), ('number', 'appos'), ('rooms', 'pobj'), ('location', 'conj'), ('?', 'punct')]

>> Bigrams: 
[[price, property], [property, based], [based, size], [size, ,], [,, number], [number, rooms], [rooms, location], [location, ?]]

>> Trigrams: 
[[price, property, based], [property, based, size], [based, size, ,], [size, ,, number], [,, number, rooms], [number, rooms, location], [rooms, location, ?]]

>> Noun Phrases are: 
[What, the price, a property, size, number, rooms, location]

>> Named Entities are: 
[]


============================ Sentence 286 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 287 =============================

• 


>> Tokens are: 
[•] 

>> PoS Tags are: 
[('•', 'VERB')] 

>> Dependency Tags are: 
[('•', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 288 =============================

How many orders am I likely to receive in the next three months for my product? 


>> Tokens are: 
[orders, likely, receive, months, product, ?] 

>> PoS Tags are: 
[('orders', 'NOUN'), ('likely', 'ADJ'), ('receive', 'VERB'), ('months', 'NOUN'), ('product', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('orders', 'nsubj'), ('likely', 'acomp'), ('receive', 'xcomp'), ('months', 'pobj'), ('product', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[orders, likely], [likely, receive], [receive, months], [months, product], [product, ?]]

>> Trigrams: 
[[orders, likely, receive], [likely, receive, months], [receive, months, product], [months, product, ?]]

>> Noun Phrases are: 
[How many orders, I, the next three months, my product]

>> Named Entities are: 
[('the next three months', 'DATE')]


============================ Sentence 289 =============================

   12/14Demystifying data science   Unsupervised learning   


>> Tokens are: 
[   , 12/14Demystifying, data, science,   , Unsupervised, learning,  ] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('12/14Demystifying', 'NOUN'), ('data', 'NOUN'), ('science', 'NOUN'), ('  ', 'SPACE'), ('Unsupervised', 'PROPN'), ('learning', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'nummod'), ('12/14Demystifying', 'compound'), ('data', 'compound'), ('science', 'dep'), ('  ', 'appos'), ('Unsupervised', 'nsubj'), ('learning', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[   , 12/14Demystifying], [12/14Demystifying, data], [data, science], [science,   ], [  , Unsupervised], [Unsupervised, learning], [learning,  ]]

>> Trigrams: 
[[   , 12/14Demystifying, data], [12/14Demystifying, data, science], [data, science,   ], [science,   , Unsupervised], [  , Unsupervised, learning], [Unsupervised, learning,  ]]

>> Noun Phrases are: 
[Unsupervised]

>> Named Entities are: 
[]


============================ Sentence 290 =============================

There are multiple unsupervised learning approaches and techniques that can  be utilized to gain meaningful insights. 


>> Tokens are: 
[multiple, unsupervised, learning, approaches, techniques,  , utilized, gain, meaningful, insights, .] 

>> PoS Tags are: 
[('multiple', 'ADJ'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('approaches', 'NOUN'), ('techniques', 'NOUN'), (' ', 'SPACE'), ('utilized', 'VERB'), ('gain', 'VERB'), ('meaningful', 'ADJ'), ('insights', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('multiple', 'amod'), ('unsupervised', 'amod'), ('learning', 'compound'), ('approaches', 'attr'), ('techniques', 'conj'), (' ', 'nsubjpass'), ('utilized', 'relcl'), ('gain', 'xcomp'), ('meaningful', 'amod'), ('insights', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[multiple, unsupervised], [unsupervised, learning], [learning, approaches], [approaches, techniques], [techniques,  ], [ , utilized], [utilized, gain], [gain, meaningful], [meaningful, insights], [insights, .]]

>> Trigrams: 
[[multiple, unsupervised, learning], [unsupervised, learning, approaches], [learning, approaches, techniques], [approaches, techniques,  ], [techniques,  , utilized], [ , utilized, gain], [utilized, gain, meaningful], [gain, meaningful, insights], [meaningful, insights, .]]

>> Noun Phrases are: 
[multiple unsupervised learning approaches, techniques, meaningful insights]

>> Named Entities are: 
[]


============================ Sentence 291 =============================

One of the more popular techniques is  clustering, which groups things that are similar or have features in common. 


>> Tokens are: 
[popular, techniques,  , clustering, ,, groups, things, similar, features, common, .] 

>> PoS Tags are: 
[('popular', 'ADJ'), ('techniques', 'NOUN'), (' ', 'SPACE'), ('clustering', 'VERB'), (',', 'PUNCT'), ('groups', 'VERB'), ('things', 'NOUN'), ('similar', 'ADJ'), ('features', 'NOUN'), ('common', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('popular', 'amod'), ('techniques', 'pobj'), (' ', 'nsubj'), ('clustering', 'ROOT'), (',', 'punct'), ('groups', 'advcl'), ('things', 'dobj'), ('similar', 'acomp'), ('features', 'dobj'), ('common', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[popular, techniques], [techniques,  ], [ , clustering], [clustering, ,], [,, groups], [groups, things], [things, similar], [similar, features], [features, common], [common, .]]

>> Trigrams: 
[[popular, techniques,  ], [techniques,  , clustering], [ , clustering, ,], [clustering, ,, groups], [,, groups, things], [groups, things, similar], [things, similar, features], [similar, features, common], [features, common, .]]

>> Noun Phrases are: 
[the more popular techniques, things, features]

>> Named Entities are: 
[('One', 'CARDINAL')]


============================ Sentence 292 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 293 =============================

Organizations use clustering techniques to answer business questions, such as:  • 


>> Tokens are: 
[Organizations, use, clustering, techniques, answer, business, questions, ,, :,  , •] 

>> PoS Tags are: 
[('Organizations', 'NOUN'), ('use', 'VERB'), ('clustering', 'VERB'), ('techniques', 'NOUN'), ('answer', 'VERB'), ('business', 'NOUN'), ('questions', 'NOUN'), (',', 'PUNCT'), (':', 'PUNCT'), (' ', 'SPACE'), ('•', 'VERB')] 

>> Dependency Tags are: 
[('Organizations', 'nsubj'), ('use', 'ROOT'), ('clustering', 'xcomp'), ('techniques', 'dobj'), ('answer', 'xcomp'), ('business', 'compound'), ('questions', 'dobj'), (',', 'punct'), (':', 'punct'), (' ', 'pobj'), ('•', 'punct')]

>> Bigrams: 
[[Organizations, use], [use, clustering], [clustering, techniques], [techniques, answer], [answer, business], [business, questions], [questions, ,], [,, :], [:,  ], [ , •]]

>> Trigrams: 
[[Organizations, use, clustering], [use, clustering, techniques], [clustering, techniques, answer], [techniques, answer, business], [answer, business, questions], [business, questions, ,], [questions, ,, :], [,, :,  ], [:,  , •]]

>> Noun Phrases are: 
[Organizations, techniques, business questions]

>> Named Entities are: 
[]


============================ Sentence 294 =============================

How many distinct customer groups exist for my products? 


>> Tokens are: 
[distinct, customer, groups, exist, products, ?] 

>> PoS Tags are: 
[('distinct', 'ADJ'), ('customer', 'NOUN'), ('groups', 'NOUN'), ('exist', 'VERB'), ('products', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('distinct', 'amod'), ('customer', 'compound'), ('groups', 'nsubj'), ('exist', 'ROOT'), ('products', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[distinct, customer], [customer, groups], [groups, exist], [exist, products], [products, ?]]

>> Trigrams: 
[[distinct, customer, groups], [customer, groups, exist], [groups, exist, products], [exist, products, ?]]

>> Noun Phrases are: 
[How many distinct customer groups, my products]

>> Named Entities are: 
[]


============================ Sentence 295 =============================

Who belongs to   which group? 


>> Tokens are: 
[belongs,   , group, ?] 

>> PoS Tags are: 
[('belongs', 'VERB'), ('  ', 'SPACE'), ('group', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('belongs', 'ROOT'), ('  ', 'pobj'), ('group', 'npadvmod'), ('?', 'punct')]

>> Bigrams: 
[[belongs,   ], [  , group], [group, ?]]

>> Trigrams: 
[[belongs,   , group], [  , group, ?]]

>> Noun Phrases are: 
[Who]

>> Named Entities are: 
[]


============================ Sentence 296 =============================

  • 


>> Tokens are: 
[  , •] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('•', 'NUM')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('•', 'punct')]

>> Bigrams: 
[[  , •]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 297 =============================

To which customer subgroups should I market my product and how should I target  them? 


>> Tokens are: 
[customer, subgroups, market, product, target,  , ?] 

>> PoS Tags are: 
[('customer', 'NOUN'), ('subgroups', 'NOUN'), ('market', 'VERB'), ('product', 'NOUN'), ('target', 'VERB'), (' ', 'SPACE'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('customer', 'compound'), ('subgroups', 'nsubj'), ('market', 'ROOT'), ('product', 'dobj'), ('target', 'conj'), (' ', 'dobj'), ('?', 'punct')]

>> Bigrams: 
[[customer, subgroups], [subgroups, market], [market, product], [product, target], [target,  ], [ , ?]]

>> Trigrams: 
[[customer, subgroups, market], [subgroups, market, product], [market, product, target], [product, target,  ], [target,  , ?]]

>> Noun Phrases are: 
[customer subgroups, I, my product, I, them]

>> Named Entities are: 
[]


============================ Sentence 298 =============================

What are the key characteristics of each group? 


>> Tokens are: 
[key, characteristics, group, ?] 

>> PoS Tags are: 
[('key', 'ADJ'), ('characteristics', 'NOUN'), ('group', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('key', 'amod'), ('characteristics', 'nsubj'), ('group', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[key, characteristics], [characteristics, group], [group, ?]]

>> Trigrams: 
[[key, characteristics, group], [characteristics, group, ?]]

>> Noun Phrases are: 
[What, the key characteristics, each group]

>> Named Entities are: 
[]


============================ Sentence 299 =============================

 • 


>> Tokens are: 
[ , •] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('•', 'INTJ')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('•', 'punct')]

>> Bigrams: 
[[ , •]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 300 =============================

How can I group my documents into distinct categories? 


>> Tokens are: 
[group, documents, distinct, categories, ?] 

>> PoS Tags are: 
[('group', 'VERB'), ('documents', 'NOUN'), ('distinct', 'ADJ'), ('categories', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('group', 'ROOT'), ('documents', 'dobj'), ('distinct', 'amod'), ('categories', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[group, documents], [documents, distinct], [distinct, categories], [categories, ?]]

>> Trigrams: 
[[group, documents, distinct], [documents, distinct, categories], [distinct, categories, ?]]

>> Noun Phrases are: 
[I, my documents, distinct categories]

>> Named Entities are: 
[]


============================ Sentence 301 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 302 =============================

If a business is looking to answer questions around the identification of anomalies  or rare behavior and occurrences, anomaly detection techniques are utilized to  identify unusual patterns that do not conform to expected behavior, called outliers. 


>> Tokens are: 
[business, looking, answer, questions, identification, anomalies,  , rare, behavior, occurrences, ,, anomaly, detection, techniques, utilized,  , identify, unusual, patterns, conform, expected, behavior, ,, called, outliers, .] 

>> PoS Tags are: 
[('business', 'NOUN'), ('looking', 'VERB'), ('answer', 'VERB'), ('questions', 'NOUN'), ('identification', 'NOUN'), ('anomalies', 'NOUN'), (' ', 'SPACE'), ('rare', 'ADJ'), ('behavior', 'NOUN'), ('occurrences', 'NOUN'), (',', 'PUNCT'), ('anomaly', 'NOUN'), ('detection', 'NOUN'), ('techniques', 'NOUN'), ('utilized', 'VERB'), (' ', 'SPACE'), ('identify', 'VERB'), ('unusual', 'ADJ'), ('patterns', 'NOUN'), ('conform', 'VERB'), ('expected', 'VERB'), ('behavior', 'NOUN'), (',', 'PUNCT'), ('called', 'VERB'), ('outliers', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('business', 'nsubj'), ('looking', 'advcl'), ('answer', 'xcomp'), ('questions', 'dobj'), ('identification', 'pobj'), ('anomalies', 'compound'), (' ', 'pobj'), ('rare', 'amod'), ('behavior', 'conj'), ('occurrences', 'conj'), (',', 'punct'), ('anomaly', 'compound'), ('detection', 'compound'), ('techniques', 'nsubjpass'), ('utilized', 'ROOT'), (' ', 'pobj'), ('identify', 'advcl'), ('unusual', 'amod'), ('patterns', 'dobj'), ('conform', 'relcl'), ('expected', 'amod'), ('behavior', 'pobj'), (',', 'punct'), ('called', 'conj'), ('outliers', 'oprd'), ('.', 'punct')]

>> Bigrams: 
[[business, looking], [looking, answer], [answer, questions], [questions, identification], [identification, anomalies], [anomalies,  ], [ , rare], [rare, behavior], [behavior, occurrences], [occurrences, ,], [,, anomaly], [anomaly, detection], [detection, techniques], [techniques, utilized], [utilized,  ], [ , identify], [identify, unusual], [unusual, patterns], [patterns, conform], [conform, expected], [expected, behavior], [behavior, ,], [,, called], [called, outliers], [outliers, .]]

>> Trigrams: 
[[business, looking, answer], [looking, answer, questions], [answer, questions, identification], [questions, identification, anomalies], [identification, anomalies,  ], [anomalies,  , rare], [ , rare, behavior], [rare, behavior, occurrences], [behavior, occurrences, ,], [occurrences, ,, anomaly], [,, anomaly, detection], [anomaly, detection, techniques], [detection, techniques, utilized], [techniques, utilized,  ], [utilized,  , identify], [ , identify, unusual], [identify, unusual, patterns], [unusual, patterns, conform], [patterns, conform, expected], [conform, expected, behavior], [expected, behavior, ,], [behavior, ,, called], [,, called, outliers], [called, outliers, .]]

>> Noun Phrases are: 
[a business, questions, the identification, rare behavior, occurrences, anomaly detection techniques, unusual patterns, expected behavior, outliers]

>> Named Entities are: 
[]


============================ Sentence 303 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 304 =============================

It has many applications in business, from intrusion detection, such as identifying  strange patterns in network traffic, to system health monitoring, including spotting  a malignant tumor in an MRI scan. 


>> Tokens are: 
[applications, business, ,, intrusion, detection, ,, identifying,  , strange, patterns, network, traffic, ,, system, health, monitoring, ,, including, spotting,  , malignant, tumor, MRI, scan, .] 

>> PoS Tags are: 
[('applications', 'NOUN'), ('business', 'NOUN'), (',', 'PUNCT'), ('intrusion', 'NOUN'), ('detection', 'NOUN'), (',', 'PUNCT'), ('identifying', 'VERB'), (' ', 'SPACE'), ('strange', 'ADJ'), ('patterns', 'NOUN'), ('network', 'NOUN'), ('traffic', 'NOUN'), (',', 'PUNCT'), ('system', 'VERB'), ('health', 'NOUN'), ('monitoring', 'NOUN'), (',', 'PUNCT'), ('including', 'VERB'), ('spotting', 'VERB'), (' ', 'SPACE'), ('malignant', 'ADJ'), ('tumor', 'NOUN'), ('MRI', 'NOUN'), ('scan', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('applications', 'dobj'), ('business', 'pobj'), (',', 'punct'), ('intrusion', 'compound'), ('detection', 'pobj'), (',', 'punct'), ('identifying', 'pcomp'), (' ', 'dative'), ('strange', 'amod'), ('patterns', 'dobj'), ('network', 'compound'), ('traffic', 'pobj'), (',', 'punct'), ('system', 'conj'), ('health', 'compound'), ('monitoring', 'dobj'), (',', 'punct'), ('including', 'prep'), ('spotting', 'pcomp'), (' ', 'dative'), ('malignant', 'amod'), ('tumor', 'dobj'), ('MRI', 'compound'), ('scan', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[applications, business], [business, ,], [,, intrusion], [intrusion, detection], [detection, ,], [,, identifying], [identifying,  ], [ , strange], [strange, patterns], [patterns, network], [network, traffic], [traffic, ,], [,, system], [system, health], [health, monitoring], [monitoring, ,], [,, including], [including, spotting], [spotting,  ], [ , malignant], [malignant, tumor], [tumor, MRI], [MRI, scan], [scan, .]]

>> Trigrams: 
[[applications, business, ,], [business, ,, intrusion], [,, intrusion, detection], [intrusion, detection, ,], [detection, ,, identifying], [,, identifying,  ], [identifying,  , strange], [ , strange, patterns], [strange, patterns, network], [patterns, network, traffic], [network, traffic, ,], [traffic, ,, system], [,, system, health], [system, health, monitoring], [health, monitoring, ,], [monitoring, ,, including], [,, including, spotting], [including, spotting,  ], [spotting,  , malignant], [ , malignant, tumor], [malignant, tumor, MRI], [tumor, MRI, scan], [MRI, scan, .]]

>> Noun Phrases are: 
[It, many applications, business, intrusion detection, strange patterns, network traffic, health monitoring, a malignant tumor, an MRI scan]

>> Named Entities are: 
[]


============================ Sentence 305 =============================

Some additional questions that can be answered  using these techniques include:  •   


>> Tokens are: 
[additional, questions, answered,  , techniques, include, :,  , •,  ] 

>> PoS Tags are: 
[('additional', 'ADJ'), ('questions', 'NOUN'), ('answered', 'VERB'), (' ', 'SPACE'), ('techniques', 'NOUN'), ('include', 'VERB'), (':', 'PUNCT'), (' ', 'SPACE'), ('•', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('additional', 'amod'), ('questions', 'nsubj'), ('answered', 'relcl'), (' ', 'dobj'), ('techniques', 'dobj'), ('include', 'ROOT'), (':', 'punct'), (' ', 'dobj'), ('•', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[additional, questions], [questions, answered], [answered,  ], [ , techniques], [techniques, include], [include, :], [:,  ], [ , •], [•,  ]]

>> Trigrams: 
[[additional, questions, answered], [questions, answered,  ], [answered,  , techniques], [ , techniques, include], [techniques, include, :], [include, :,  ], [:,  , •], [ , •,  ]]

>> Noun Phrases are: 
[Some additional questions, these techniques]

>> Named Entities are: 
[]


============================ Sentence 306 =============================

Given a massive database of financial data, which transactions are suspicious  and likely to be fraudulent? 


>> Tokens are: 
[Given, massive, database, financial, data, ,, transactions, suspicious,  , likely, fraudulent, ?] 

>> PoS Tags are: 
[('Given', 'VERB'), ('massive', 'ADJ'), ('database', 'NOUN'), ('financial', 'ADJ'), ('data', 'NOUN'), (',', 'PUNCT'), ('transactions', 'NOUN'), ('suspicious', 'ADJ'), (' ', 'SPACE'), ('likely', 'ADJ'), ('fraudulent', 'ADJ'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('Given', 'prep'), ('massive', 'amod'), ('database', 'pobj'), ('financial', 'amod'), ('data', 'pobj'), (',', 'punct'), ('transactions', 'nsubj'), ('suspicious', 'amod'), (' ', 'attr'), ('likely', 'conj'), ('fraudulent', 'acomp'), ('?', 'punct')]

>> Bigrams: 
[[Given, massive], [massive, database], [database, financial], [financial, data], [data, ,], [,, transactions], [transactions, suspicious], [suspicious,  ], [ , likely], [likely, fraudulent], [fraudulent, ?]]

>> Trigrams: 
[[Given, massive, database], [massive, database, financial], [database, financial, data], [financial, data, ,], [data, ,, transactions], [,, transactions, suspicious], [transactions, suspicious,  ], [suspicious,  , likely], [ , likely, fraudulent], [likely, fraudulent, ?]]

>> Noun Phrases are: 
[a massive database, financial data, which transactions]

>> Named Entities are: 
[]


============================ Sentence 307 =============================

  • 


>> Tokens are: 
[  , •] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('•', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('•', 'punct')]

>> Bigrams: 
[[  , •]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 308 =============================

Given the huge number of container shipments arriving at a country’s ports every  day, which should be opened by customs to prevent smuggling, terrorism, etc.?   


>> Tokens are: 
[Given, huge, number, container, shipments, arriving, country, ports,  , day, ,, opened, customs, prevent, smuggling, ,, terrorism, ,, etc, ., ?,  ] 

>> PoS Tags are: 
[('Given', 'VERB'), ('huge', 'ADJ'), ('number', 'NOUN'), ('container', 'NOUN'), ('shipments', 'NOUN'), ('arriving', 'VERB'), ('country', 'NOUN'), ('ports', 'NOUN'), (' ', 'SPACE'), ('day', 'NOUN'), (',', 'PUNCT'), ('opened', 'VERB'), ('customs', 'NOUN'), ('prevent', 'VERB'), ('smuggling', 'NOUN'), (',', 'PUNCT'), ('terrorism', 'NOUN'), (',', 'PUNCT'), ('etc', 'X'), ('.', 'PUNCT'), ('?', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Given', 'ROOT'), ('huge', 'amod'), ('number', 'pobj'), ('container', 'compound'), ('shipments', 'pobj'), ('arriving', 'acl'), ('country', 'poss'), ('ports', 'pobj'), (' ', 'compound'), ('day', 'npadvmod'), (',', 'punct'), ('opened', 'relcl'), ('customs', 'pobj'), ('prevent', 'advcl'), ('smuggling', 'dobj'), (',', 'punct'), ('terrorism', 'conj'), (',', 'punct'), ('etc', 'conj'), ('.', 'conj'), ('?', 'punct'), (' ', 'pobj')]

>> Bigrams: 
[[Given, huge], [huge, number], [number, container], [container, shipments], [shipments, arriving], [arriving, country], [country, ports], [ports,  ], [ , day], [day, ,], [,, opened], [opened, customs], [customs, prevent], [prevent, smuggling], [smuggling, ,], [,, terrorism], [terrorism, ,], [,, etc], [etc, .], [., ?], [?,  ]]

>> Trigrams: 
[[Given, huge, number], [huge, number, container], [number, container, shipments], [container, shipments, arriving], [shipments, arriving, country], [arriving, country, ports], [country, ports,  ], [ports,  , day], [ , day, ,], [day, ,, opened], [,, opened, customs], [opened, customs, prevent], [customs, prevent, smuggling], [prevent, smuggling, ,], [smuggling, ,, terrorism], [,, terrorism, ,], [terrorism, ,, etc], [,, etc, .], [etc, ., ?], [., ?,  ]]

>> Noun Phrases are: 
[the huge number, container shipments, a country’s ports, customs, smuggling, terrorism]

>> Named Entities are: 
[('every  day', 'DATE')]


============================ Sentence 309 =============================

•   


>> Tokens are: 
[•,  ] 

>> PoS Tags are: 
[('•', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('•', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[•,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 310 =============================

Given a log of all the traffic on a computer network, which sessions represent  attempted intrusions?  Association mining, another set of techniques, can help find correlations  between different products or factors in an organization’s data. 


>> Tokens are: 
[Given, log, traffic, computer, network, ,, sessions, represent,  , attempted, intrusions, ?,  , Association, mining, ,, set, techniques, ,, help, find, correlations,  , different, products, factors, organization, data, .] 

>> PoS Tags are: 
[('Given', 'VERB'), ('log', 'NOUN'), ('traffic', 'NOUN'), ('computer', 'NOUN'), ('network', 'NOUN'), (',', 'PUNCT'), ('sessions', 'NOUN'), ('represent', 'VERB'), (' ', 'SPACE'), ('attempted', 'VERB'), ('intrusions', 'NOUN'), ('?', 'PUNCT'), (' ', 'SPACE'), ('Association', 'PROPN'), ('mining', 'NOUN'), (',', 'PUNCT'), ('set', 'NOUN'), ('techniques', 'NOUN'), (',', 'PUNCT'), ('help', 'VERB'), ('find', 'VERB'), ('correlations', 'NOUN'), (' ', 'SPACE'), ('different', 'ADJ'), ('products', 'NOUN'), ('factors', 'NOUN'), ('organization', 'NOUN'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Given', 'prep'), ('log', 'pobj'), ('traffic', 'pobj'), ('computer', 'compound'), ('network', 'pobj'), (',', 'punct'), ('sessions', 'nsubj'), ('represent', 'relcl'), (' ', 'nmod'), ('attempted', 'amod'), ('intrusions', 'dobj'), ('?', 'punct'), (' ', 'compound'), ('Association', 'compound'), ('mining', 'pobj'), (',', 'punct'), ('set', 'appos'), ('techniques', 'pobj'), (',', 'punct'), ('help', 'ROOT'), ('find', 'xcomp'), ('correlations', 'dobj'), (' ', 'appos'), ('different', 'amod'), ('products', 'pobj'), ('factors', 'conj'), ('organization', 'poss'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Given, log], [log, traffic], [traffic, computer], [computer, network], [network, ,], [,, sessions], [sessions, represent], [represent,  ], [ , attempted], [attempted, intrusions], [intrusions, ?], [?,  ], [ , Association], [Association, mining], [mining, ,], [,, set], [set, techniques], [techniques, ,], [,, help], [help, find], [find, correlations], [correlations,  ], [ , different], [different, products], [products, factors], [factors, organization], [organization, data], [data, .]]

>> Trigrams: 
[[Given, log, traffic], [log, traffic, computer], [traffic, computer, network], [computer, network, ,], [network, ,, sessions], [,, sessions, represent], [sessions, represent,  ], [represent,  , attempted], [ , attempted, intrusions], [attempted, intrusions, ?], [intrusions, ?,  ], [?,  , Association], [ , Association, mining], [Association, mining, ,], [mining, ,, set], [,, set, techniques], [set, techniques, ,], [techniques, ,, help], [,, help, find], [help, find, correlations], [find, correlations,  ], [correlations,  , different], [ , different, products], [different, products, factors], [products, factors, organization], [factors, organization, data], [organization, data, .]]

>> Noun Phrases are: 
[a log, all the traffic, a computer network, sessions,  attempted intrusions,  Association mining, another set, techniques, correlations, different products, factors, an organization’s data]

>> Named Entities are: 
[]


============================ Sentence 311 =============================

For example, if a  customer purchases baby diapers, he or she has a 60 percent chance of purchasing  baby lotion within the next month. 


>> Tokens are: 
[example, ,,  , customer, purchases, baby, diapers, ,, 60, percent, chance, purchasing,  , baby, lotion, month, .] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('customer', 'NOUN'), ('purchases', 'VERB'), ('baby', 'NOUN'), ('diapers', 'NOUN'), (',', 'PUNCT'), ('60', 'NUM'), ('percent', 'NOUN'), ('chance', 'NOUN'), ('purchasing', 'VERB'), (' ', 'SPACE'), ('baby', 'NOUN'), ('lotion', 'NOUN'), ('month', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct'), (' ', 'compound'), ('customer', 'nsubj'), ('purchases', 'advcl'), ('baby', 'compound'), ('diapers', 'dobj'), (',', 'punct'), ('60', 'nummod'), ('percent', 'compound'), ('chance', 'dobj'), ('purchasing', 'pcomp'), (' ', 'dobj'), ('baby', 'compound'), ('lotion', 'dobj'), ('month', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[example, ,], [,,  ], [ , customer], [customer, purchases], [purchases, baby], [baby, diapers], [diapers, ,], [,, 60], [60, percent], [percent, chance], [chance, purchasing], [purchasing,  ], [ , baby], [baby, lotion], [lotion, month], [month, .]]

>> Trigrams: 
[[example, ,,  ], [,,  , customer], [ , customer, purchases], [customer, purchases, baby], [purchases, baby, diapers], [baby, diapers, ,], [diapers, ,, 60], [,, 60, percent], [60, percent, chance], [percent, chance, purchasing], [chance, purchasing,  ], [purchasing,  , baby], [ , baby, lotion], [baby, lotion, month], [lotion, month, .]]

>> Noun Phrases are: 
[example, a  customer, baby diapers, he, she, a 60 percent chance, baby lotion, the next month]

>> Named Entities are: 
[('60 percent', 'PERCENT'), ('the next month', 'DATE')]


============================ Sentence 312 =============================

By identifying such insights using association  mining, retailers can predict the need for new products and target customers with  coupons and offers before the customer even realizes they are running out of baby  lotion. 


>> Tokens are: 
[identifying, insights, association,  , mining, ,, retailers, predict, need, new, products, target, customers,  , coupons, offers, customer, realizes, running, baby,  , lotion, .] 

>> PoS Tags are: 
[('identifying', 'VERB'), ('insights', 'NOUN'), ('association', 'NOUN'), (' ', 'SPACE'), ('mining', 'NOUN'), (',', 'PUNCT'), ('retailers', 'NOUN'), ('predict', 'VERB'), ('need', 'NOUN'), ('new', 'ADJ'), ('products', 'NOUN'), ('target', 'NOUN'), ('customers', 'NOUN'), (' ', 'SPACE'), ('coupons', 'NOUN'), ('offers', 'NOUN'), ('customer', 'NOUN'), ('realizes', 'VERB'), ('running', 'VERB'), ('baby', 'NOUN'), (' ', 'SPACE'), ('lotion', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('identifying', 'pcomp'), ('insights', 'dobj'), ('association', 'nmod'), (' ', 'nummod'), ('mining', 'dobj'), (',', 'punct'), ('retailers', 'nsubj'), ('predict', 'ROOT'), ('need', 'dobj'), ('new', 'amod'), ('products', 'pobj'), ('target', 'compound'), ('customers', 'conj'), (' ', 'compound'), ('coupons', 'pobj'), ('offers', 'conj'), ('customer', 'nsubj'), ('realizes', 'advcl'), ('running', 'ccomp'), ('baby', 'compound'), (' ', 'compound'), ('lotion', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[identifying, insights], [insights, association], [association,  ], [ , mining], [mining, ,], [,, retailers], [retailers, predict], [predict, need], [need, new], [new, products], [products, target], [target, customers], [customers,  ], [ , coupons], [coupons, offers], [offers, customer], [customer, realizes], [realizes, running], [running, baby], [baby,  ], [ , lotion], [lotion, .]]

>> Trigrams: 
[[identifying, insights, association], [insights, association,  ], [association,  , mining], [ , mining, ,], [mining, ,, retailers], [,, retailers, predict], [retailers, predict, need], [predict, need, new], [need, new, products], [new, products, target], [products, target, customers], [target, customers,  ], [customers,  , coupons], [ , coupons, offers], [coupons, offers, customer], [offers, customer, realizes], [customer, realizes, running], [realizes, running, baby], [running, baby,  ], [baby,  , lotion], [ , lotion, .]]

>> Noun Phrases are: 
[such insights, association  mining, retailers, the need, new products, target customers,  coupons, offers, the customer, they, baby  lotion]

>> Named Entities are: 
[]


============================ Sentence 313 =============================

The most common application of association mining algorithms is in market  basket analysis. 


>> Tokens are: 
[common, application, association, mining, algorithms, market,  , basket, analysis, .] 

>> PoS Tags are: 
[('common', 'ADJ'), ('application', 'NOUN'), ('association', 'NOUN'), ('mining', 'NOUN'), ('algorithms', 'NOUN'), ('market', 'NOUN'), (' ', 'SPACE'), ('basket', 'NOUN'), ('analysis', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('common', 'amod'), ('application', 'nsubj'), ('association', 'compound'), ('mining', 'compound'), ('algorithms', 'pobj'), ('market', 'compound'), (' ', 'compound'), ('basket', 'compound'), ('analysis', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[common, application], [application, association], [association, mining], [mining, algorithms], [algorithms, market], [market,  ], [ , basket], [basket, analysis], [analysis, .]]

>> Trigrams: 
[[common, application, association], [application, association, mining], [association, mining, algorithms], [mining, algorithms, market], [algorithms, market,  ], [market,  , basket], [ , basket, analysis], [basket, analysis, .]]

>> Noun Phrases are: 
[The most common application, association mining algorithms, market  basket analysis]

>> Named Entities are: 
[]


============================ Sentence 314 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 315 =============================

Unsupervised learning   


>> Tokens are: 
[Unsupervised, learning,  ] 

>> PoS Tags are: 
[('Unsupervised', 'PROPN'), ('learning', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Unsupervised', 'nsubj'), ('learning', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Unsupervised, learning], [learning,  ]]

>> Trigrams: 
[[Unsupervised, learning,  ]]

>> Noun Phrases are: 
[Unsupervised]

>> Named Entities are: 
[]


============================ Sentence 316 =============================

Clustering Anomaly detection Association mining  Partition	the	data	 set	into	X	groups	 so	that	records		in	 the	same	group	 are	similar	to	each	 other,	and		records	 in	different	groups	 are	dissimilar  Identification	 of	rare	items,	 events	or	 observations	which	 raise	suspicion	 by	differing	 significantly	from	 	the	majority	of	the	 data  Find	frequent	 patterns,	 correlations	and	 	associations	 among	a	set	of	 items	in	relational	 	and	transaction	 databases   


>> Tokens are: 
[Clustering, Anomaly, detection, Association, mining,  , Partition, 	, 	, data, 	 , set, 	, 	, X, 	, groups, 	 , 	, 	, records, 		, 	 , 	, 	, group, 	 , 	, similar, 	, 	, 	 , ,, 	, 		, records, 	 , 	, different, 	, groups, 	 , 	, dissimilar,  , Identification, 	 , 	, rare, 	, items, ,, 	 , events, 	, 	 , observations, 	, 	 , raise, 	, suspicion, 	 , 	, differing, 	 , significantly, 	, 	 	, 	, majority, 	, 	, 	 , data,  , Find, 	, frequent, 	 , patterns, ,, 	 , correlations, 	, 	 	, associations, 	 , 	, 	, set, 	, 	 , items, 	, 	, relational, 	 	, 	, transaction, 	 , databases,  ] 

>> PoS Tags are: 
[('Clustering', 'PROPN'), ('Anomaly', 'PROPN'), ('detection', 'NOUN'), ('Association', 'PROPN'), ('mining', 'NOUN'), (' ', 'SPACE'), ('Partition', 'PROPN'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('data', 'NOUN'), ('\t ', 'SPACE'), ('set', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('X', 'PROPN'), ('\t', 'SPACE'), ('groups', 'NOUN'), ('\t ', 'SPACE'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('records', 'VERB'), ('\t\t', 'SPACE'), ('\t ', 'SPACE'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('group', 'NOUN'), ('\t ', 'SPACE'), ('\t', 'SPACE'), ('similar', 'ADJ'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('\t ', 'SPACE'), (',', 'PUNCT'), ('\t', 'SPACE'), ('\t\t', 'SPACE'), ('records', 'NOUN'), ('\t ', 'SPACE'), ('\t', 'SPACE'), ('different', 'ADJ'), ('\t', 'SPACE'), ('groups', 'NOUN'), ('\t ', 'SPACE'), ('\t', 'SPACE'), ('dissimilar', 'ADJ'), (' ', 'SPACE'), ('Identification', 'PROPN'), ('\t ', 'SPACE'), ('\t', 'SPACE'), ('rare', 'ADJ'), ('\t', 'SPACE'), ('items', 'NOUN'), (',', 'PUNCT'), ('\t ', 'SPACE'), ('events', 'NOUN'), ('\t', 'SPACE'), ('\t ', 'SPACE'), ('observations', 'NOUN'), ('\t', 'SPACE'), ('\t ', 'SPACE'), ('raise', 'VERB'), ('\t', 'SPACE'), ('suspicion', 'NOUN'), ('\t ', 'SPACE'), ('\t', 'SPACE'), ('differing', 'VERB'), ('\t ', 'SPACE'), ('significantly', 'ADV'), ('\t', 'SPACE'), ('\t \t', 'SPACE'), ('\t', 'SPACE'), ('majority', 'NOUN'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('\t ', 'SPACE'), ('data', 'NOUN'), (' ', 'SPACE'), ('Find', 'VERB'), ('\t', 'SPACE'), ('frequent', 'ADJ'), ('\t ', 'SPACE'), ('patterns', 'NOUN'), (',', 'PUNCT'), ('\t ', 'SPACE'), ('correlations', 'NOUN'), ('\t', 'SPACE'), ('\t \t', 'SPACE'), ('associations', 'NOUN'), ('\t ', 'SPACE'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('set', 'NOUN'), ('\t', 'SPACE'), ('\t ', 'SPACE'), ('items', 'NOUN'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('relational', 'ADJ'), ('\t \t', 'SPACE'), ('\t', 'SPACE'), ('transaction', 'NOUN'), ('\t ', 'SPACE'), ('databases', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Clustering', 'compound'), ('Anomaly', 'compound'), ('detection', 'compound'), ('Association', 'compound'), ('mining', 'compound'), (' ', 'compound'), ('Partition', 'compound'), ('\t', 'nsubj'), ('\t', 'compound'), ('data', 'compound'), ('\t ', 'appos'), ('set', 'ccomp'), ('\t', 'dobj'), ('\t', 'compound'), ('X', 'nmod'), ('\t', 'compound'), ('groups', 'pobj'), ('\t ', 'advcl'), ('\t', 'advcl'), ('\t', 'nsubj'), ('records', 'ccomp'), ('\t\t', 'dobj'), ('\t ', 'pobj'), ('\t', 'amod'), ('\t', 'compound'), ('group', 'compound'), ('\t ', 'nsubj'), ('\t', 'attr'), ('similar', 'amod'), ('\t', 'appos'), ('\t', 'pobj'), ('\t ', 'attr'), (',', 'punct'), ('\t', 'conj'), ('\t\t', 'compound'), ('records', 'conj'), ('\t ', 'attr'), ('\t', 'amod'), ('different', 'amod'), ('\t', 'compound'), ('groups', 'pobj'), ('\t ', 'nsubj'), ('\t', 'amod'), ('dissimilar', 'amod'), (' ', 'compound'), ('Identification', 'compound'), ('\t ', 'attr'), ('\t', 'amod'), ('rare', 'amod'), ('\t', 'compound'), ('items', 'pobj'), (',', 'punct'), ('\t ', 'amod'), ('events', 'nsubj'), ('\t', 'appos'), ('\t ', 'amod'), ('observations', 'conj'), ('\t', 'appos'), ('\t ', 'relcl'), ('raise', 'advcl'), ('\t', 'amod'), ('suspicion', 'compound'), ('\t ', 'dobj'), ('\t', 'nsubj'), ('differing', 'amod'), ('\t ', 'pobj'), ('significantly', 'advmod'), ('\t', 'appos'), ('\t \t', 'pobj'), ('\t', 'compound'), ('majority', 'appos'), ('\t', 'appos'), ('\t', 'pobj'), ('\t ', 'amod'), ('data', 'dobj'), (' ', 'nsubj'), ('Find', 'relcl'), ('\t', 'amod'), ('frequent', 'amod'), ('\t ', 'amod'), ('patterns', 'dobj'), (',', 'punct'), ('\t ', 'amod'), ('correlations', 'nmod'), ('\t', 'nmod'), ('\t \t', 'conj'), ('associations', 'nsubj'), ('\t ', 'conj'), ('\t', 'pobj'), ('\t', 'compound'), ('set', 'dobj'), ('\t', 'appos'), ('\t ', 'amod'), ('items', 'pobj'), ('\t', 'appos'), ('\t', 'nmod'), ('relational', 'amod'), ('\t \t', 'pobj'), ('\t', 'conj'), ('transaction', 'conj'), ('\t ', 'nsubj'), ('databases', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Clustering, Anomaly], [Anomaly, detection], [detection, Association], [Association, mining], [mining,  ], [ , Partition], [Partition, 	], [	, 	], [	, data], [data, 	 ], [	 , set], [set, 	], [	, 	], [	, X], [X, 	], [	, groups], [groups, 	 ], [	 , 	], [	, 	], [	, records], [records, 		], [		, 	 ], [	 , 	], [	, 	], [	, group], [group, 	 ], [	 , 	], [	, similar], [similar, 	], [	, 	], [	, 	 ], [	 , ,], [,, 	], [	, 		], [		, records], [records, 	 ], [	 , 	], [	, different], [different, 	], [	, groups], [groups, 	 ], [	 , 	], [	, dissimilar], [dissimilar,  ], [ , Identification], [Identification, 	 ], [	 , 	], [	, rare], [rare, 	], [	, items], [items, ,], [,, 	 ], [	 , events], [events, 	], [	, 	 ], [	 , observations], [observations, 	], [	, 	 ], [	 , raise], [raise, 	], [	, suspicion], [suspicion, 	 ], [	 , 	], [	, differing], [differing, 	 ], [	 , significantly], [significantly, 	], [	, 	 	], [	 	, 	], [	, majority], [majority, 	], [	, 	], [	, 	 ], [	 , data], [data,  ], [ , Find], [Find, 	], [	, frequent], [frequent, 	 ], [	 , patterns], [patterns, ,], [,, 	 ], [	 , correlations], [correlations, 	], [	, 	 	], [	 	, associations], [associations, 	 ], [	 , 	], [	, 	], [	, set], [set, 	], [	, 	 ], [	 , items], [items, 	], [	, 	], [	, relational], [relational, 	 	], [	 	, 	], [	, transaction], [transaction, 	 ], [	 , databases], [databases,  ]]

>> Trigrams: 
[[Clustering, Anomaly, detection], [Anomaly, detection, Association], [detection, Association, mining], [Association, mining,  ], [mining,  , Partition], [ , Partition, 	], [Partition, 	, 	], [	, 	, data], [	, data, 	 ], [data, 	 , set], [	 , set, 	], [set, 	, 	], [	, 	, X], [	, X, 	], [X, 	, groups], [	, groups, 	 ], [groups, 	 , 	], [	 , 	, 	], [	, 	, records], [	, records, 		], [records, 		, 	 ], [		, 	 , 	], [	 , 	, 	], [	, 	, group], [	, group, 	 ], [group, 	 , 	], [	 , 	, similar], [	, similar, 	], [similar, 	, 	], [	, 	, 	 ], [	, 	 , ,], [	 , ,, 	], [,, 	, 		], [	, 		, records], [		, records, 	 ], [records, 	 , 	], [	 , 	, different], [	, different, 	], [different, 	, groups], [	, groups, 	 ], [groups, 	 , 	], [	 , 	, dissimilar], [	, dissimilar,  ], [dissimilar,  , Identification], [ , Identification, 	 ], [Identification, 	 , 	], [	 , 	, rare], [	, rare, 	], [rare, 	, items], [	, items, ,], [items, ,, 	 ], [,, 	 , events], [	 , events, 	], [events, 	, 	 ], [	, 	 , observations], [	 , observations, 	], [observations, 	, 	 ], [	, 	 , raise], [	 , raise, 	], [raise, 	, suspicion], [	, suspicion, 	 ], [suspicion, 	 , 	], [	 , 	, differing], [	, differing, 	 ], [differing, 	 , significantly], [	 , significantly, 	], [significantly, 	, 	 	], [	, 	 	, 	], [	 	, 	, majority], [	, majority, 	], [majority, 	, 	], [	, 	, 	 ], [	, 	 , data], [	 , data,  ], [data,  , Find], [ , Find, 	], [Find, 	, frequent], [	, frequent, 	 ], [frequent, 	 , patterns], [	 , patterns, ,], [patterns, ,, 	 ], [,, 	 , correlations], [	 , correlations, 	], [correlations, 	, 	 	], [	, 	 	, associations], [	 	, associations, 	 ], [associations, 	 , 	], [	 , 	, 	], [	, 	, set], [	, set, 	], [set, 	, 	 ], [	, 	 , items], [	 , items, 	], [items, 	, 	], [	, 	, relational], [	, relational, 	 	], [relational, 	 	, 	], [	 	, 	, transaction], [	, transaction, 	 ], [transaction, 	 , databases], [	 , databases,  ]]

>> Noun Phrases are: 
[	X	groups, 		records, 	different	groups, 	rare	items, 	 events, 	 observations, the	majority, the	 data, 	frequent	 patterns, 	 correlations	and	 	associations, a	set, 	 items, transaction]

>> Named Entities are: 
[]


============================ Sentence 317 =============================

U ns  up er  vi se  d  le  ar ni  ng   


>> Tokens are: 
[U, ns,  , er,  , vi, se,  , d,  , le,  , ar, ni,  , ng,  ] 

>> PoS Tags are: 
[('U', 'NOUN'), ('ns', 'ADP'), (' ', 'SPACE'), ('er', 'INTJ'), (' ', 'SPACE'), ('vi', 'ADV'), ('se', 'X'), (' ', 'SPACE'), ('d', 'X'), (' ', 'SPACE'), ('le', 'X'), (' ', 'SPACE'), ('ar', 'ADP'), ('ni', 'NOUN'), (' ', 'SPACE'), ('ng', 'ADP'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('U', 'nsubj'), ('ns', 'ROOT'), (' ', 'attr'), ('er', 'intj'), (' ', 'attr'), ('vi', 'advmod'), ('se', 'advmod'), (' ', 'nmod'), ('d', 'punct'), (' ', 'appos'), ('le', 'prep'), (' ', 'pobj'), ('ar', 'prep'), ('ni', 'nmod'), (' ', 'pobj'), ('ng', 'punct'), (' ', 'pobj')]

>> Bigrams: 
[[U, ns], [ns,  ], [ , er], [er,  ], [ , vi], [vi, se], [se,  ], [ , d], [d,  ], [ , le], [le,  ], [ , ar], [ar, ni], [ni,  ], [ , ng], [ng,  ]]

>> Trigrams: 
[[U, ns,  ], [ns,  , er], [ , er,  ], [er,  , vi], [ , vi, se], [vi, se,  ], [se,  , d], [ , d,  ], [d,  , le], [ , le,  ], [le,  , ar], [ , ar, ni], [ar, ni,  ], [ni,  , ng], [ , ng,  ]]

>> Noun Phrases are: 
[U]

>> Named Entities are: 
[]


============================ Sentence 318 =============================

Clustering  Anomaly detection  Association mining  Partition the data set into X groups so that records  in the same group are similar to each other, and  records in different groups are dissimilar   


>> Tokens are: 
[Clustering,  , Anomaly, detection,  , Association, mining,  , Partition, data, set, X, groups, records,  , group, similar, ,,  , records, different, groups, dissimilar,  ] 

>> PoS Tags are: 
[('Clustering', 'VERB'), (' ', 'SPACE'), ('Anomaly', 'PROPN'), ('detection', 'NOUN'), (' ', 'SPACE'), ('Association', 'PROPN'), ('mining', 'NOUN'), (' ', 'SPACE'), ('Partition', 'PROPN'), ('data', 'NOUN'), ('set', 'VERB'), ('X', 'NOUN'), ('groups', 'NOUN'), ('records', 'VERB'), (' ', 'SPACE'), ('group', 'NOUN'), ('similar', 'ADJ'), (',', 'PUNCT'), (' ', 'SPACE'), ('records', 'NOUN'), ('different', 'ADJ'), ('groups', 'NOUN'), ('dissimilar', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Clustering', 'nmod'), (' ', 'advmod'), ('Anomaly', 'compound'), ('detection', 'compound'), (' ', 'compound'), ('Association', 'compound'), ('mining', 'compound'), (' ', 'compound'), ('Partition', 'nsubj'), ('data', 'appos'), ('set', 'acl'), ('X', 'compound'), ('groups', 'pobj'), ('records', 'advcl'), (' ', 'dobj'), ('group', 'pobj'), ('similar', 'acomp'), (',', 'punct'), (' ', 'compound'), ('records', 'nsubj'), ('different', 'amod'), ('groups', 'pobj'), ('dissimilar', 'acomp'), (' ', 'punct')]

>> Bigrams: 
[[Clustering,  ], [ , Anomaly], [Anomaly, detection], [detection,  ], [ , Association], [Association, mining], [mining,  ], [ , Partition], [Partition, data], [data, set], [set, X], [X, groups], [groups, records], [records,  ], [ , group], [group, similar], [similar, ,], [,,  ], [ , records], [records, different], [different, groups], [groups, dissimilar], [dissimilar,  ]]

>> Trigrams: 
[[Clustering,  , Anomaly], [ , Anomaly, detection], [Anomaly, detection,  ], [detection,  , Association], [ , Association, mining], [Association, mining,  ], [mining,  , Partition], [ , Partition, data], [Partition, data, set], [data, set, X], [set, X, groups], [X, groups, records], [groups, records,  ], [records,  , group], [ , group, similar], [group, similar, ,], [similar, ,,  ], [,,  , records], [ , records, different], [records, different, groups], [different, groups, dissimilar], [groups, dissimilar,  ]]

>> Noun Phrases are: 
[Clustering  Anomaly detection  Association mining  Partition, the data, X groups, the same group,  records, different groups]

>> Named Entities are: 
[('Anomaly', 'NORP')]


============================ Sentence 319 =============================

Identification of rare items, events or observations which raise suspicion by differing significantly from  the majority of the data  Find frequent patterns, correlations and  associations among a set of items in relational  and transaction databases    13/14Demystifying data science   Natural language processing (NLP) 


>> Tokens are: 
[Identification, rare, items, ,, events, observations, raise, suspicion, differing, significantly,  , majority, data,  , Find, frequent, patterns, ,, correlations,  , associations, set, items, relational,  , transaction, databases,    , 13/14Demystifying, data, science,   , Natural, language, processing, (, NLP, )] 

>> PoS Tags are: 
[('Identification', 'NOUN'), ('rare', 'ADJ'), ('items', 'NOUN'), (',', 'PUNCT'), ('events', 'NOUN'), ('observations', 'NOUN'), ('raise', 'VERB'), ('suspicion', 'NOUN'), ('differing', 'VERB'), ('significantly', 'ADV'), (' ', 'SPACE'), ('majority', 'NOUN'), ('data', 'NOUN'), (' ', 'SPACE'), ('Find', 'VERB'), ('frequent', 'ADJ'), ('patterns', 'NOUN'), (',', 'PUNCT'), ('correlations', 'NOUN'), (' ', 'SPACE'), ('associations', 'NOUN'), ('set', 'NOUN'), ('items', 'NOUN'), ('relational', 'ADJ'), (' ', 'SPACE'), ('transaction', 'NOUN'), ('databases', 'VERB'), ('   ', 'SPACE'), ('13/14Demystifying', 'VERB'), ('data', 'NOUN'), ('science', 'NOUN'), ('  ', 'SPACE'), ('Natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), ('(', 'PUNCT'), ('NLP', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Identification', 'nsubj'), ('rare', 'amod'), ('items', 'pobj'), (',', 'punct'), ('events', 'conj'), ('observations', 'conj'), ('raise', 'relcl'), ('suspicion', 'dobj'), ('differing', 'pcomp'), ('significantly', 'advmod'), (' ', 'pobj'), ('majority', 'dobj'), ('data', 'pobj'), (' ', 'nsubj'), ('Find', 'ROOT'), ('frequent', 'amod'), ('patterns', 'dobj'), (',', 'punct'), ('correlations', 'conj'), (' ', 'compound'), ('associations', 'conj'), ('set', 'pobj'), ('items', 'pobj'), ('relational', 'amod'), (' ', 'pobj'), ('transaction', 'conj'), ('databases', 'conj'), ('   ', 'nummod'), ('13/14Demystifying', 'amod'), ('data', 'compound'), ('science', 'dobj'), ('  ', 'appos'), ('Natural', 'amod'), ('language', 'compound'), ('processing', 'conj'), ('(', 'punct'), ('NLP', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Identification, rare], [rare, items], [items, ,], [,, events], [events, observations], [observations, raise], [raise, suspicion], [suspicion, differing], [differing, significantly], [significantly,  ], [ , majority], [majority, data], [data,  ], [ , Find], [Find, frequent], [frequent, patterns], [patterns, ,], [,, correlations], [correlations,  ], [ , associations], [associations, set], [set, items], [items, relational], [relational,  ], [ , transaction], [transaction, databases], [databases,    ], [   , 13/14Demystifying], [13/14Demystifying, data], [data, science], [science,   ], [  , Natural], [Natural, language], [language, processing], [processing, (], [(, NLP], [NLP, )]]

>> Trigrams: 
[[Identification, rare, items], [rare, items, ,], [items, ,, events], [,, events, observations], [events, observations, raise], [observations, raise, suspicion], [raise, suspicion, differing], [suspicion, differing, significantly], [differing, significantly,  ], [significantly,  , majority], [ , majority, data], [majority, data,  ], [data,  , Find], [ , Find, frequent], [Find, frequent, patterns], [frequent, patterns, ,], [patterns, ,, correlations], [,, correlations,  ], [correlations,  , associations], [ , associations, set], [associations, set, items], [set, items, relational], [items, relational,  ], [relational,  , transaction], [ , transaction, databases], [transaction, databases,    ], [databases,    , 13/14Demystifying], [   , 13/14Demystifying, data], [13/14Demystifying, data, science], [data, science,   ], [science,   , Natural], [  , Natural, language], [Natural, language, processing], [language, processing, (], [processing, (, NLP], [(, NLP, )]]

>> Noun Phrases are: 
[Identification, rare items, events, observations, suspicion, the majority, the data, frequent patterns, correlations,  associations, a set, items, transaction,    13/14Demystifying data science, Natural language processing, NLP]

>> Named Entities are: 
[('NLP', 'ORG')]


============================ Sentence 320 =============================

 Natural language processing is a set of systematic processes for intelligently  and efficiently analyzing, understanding and deriving information from text data. 


>> Tokens are: 
[ , Natural, language, processing, set, systematic, processes, intelligently,  , efficiently, analyzing, ,, understanding, deriving, information, text, data, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), ('set', 'NOUN'), ('systematic', 'ADJ'), ('processes', 'NOUN'), ('intelligently', 'ADV'), (' ', 'SPACE'), ('efficiently', 'ADV'), ('analyzing', 'VERB'), (',', 'PUNCT'), ('understanding', 'NOUN'), ('deriving', 'VERB'), ('information', 'NOUN'), ('text', 'NOUN'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('Natural', 'amod'), ('language', 'compound'), ('processing', 'nsubj'), ('set', 'attr'), ('systematic', 'amod'), ('processes', 'pobj'), ('intelligently', 'advmod'), (' ', 'pobj'), ('efficiently', 'advmod'), ('analyzing', 'conj'), (',', 'punct'), ('understanding', 'conj'), ('deriving', 'conj'), ('information', 'dobj'), ('text', 'compound'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , Natural], [Natural, language], [language, processing], [processing, set], [set, systematic], [systematic, processes], [processes, intelligently], [intelligently,  ], [ , efficiently], [efficiently, analyzing], [analyzing, ,], [,, understanding], [understanding, deriving], [deriving, information], [information, text], [text, data], [data, .]]

>> Trigrams: 
[[ , Natural, language], [Natural, language, processing], [language, processing, set], [processing, set, systematic], [set, systematic, processes], [systematic, processes, intelligently], [processes, intelligently,  ], [intelligently,  , efficiently], [ , efficiently, analyzing], [efficiently, analyzing, ,], [analyzing, ,, understanding], [,, understanding, deriving], [understanding, deriving, information], [deriving, information, text], [information, text, data], [text, data, .]]

>> Noun Phrases are: 
[ Natural language processing, a set, systematic processes, understanding, information, text data]

>> Named Entities are: 
[]


============================ Sentence 321 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 322 =============================

It can organize massive amounts of text data and perform numerous automated  tasks, such as automatic summarization, machine translation, named entity  recognition, relationship extraction, sentiment analysis, speech recognition and  topic segmentation. 


>> Tokens are: 
[organize, massive, amounts, text, data, perform, numerous, automated,  , tasks, ,, automatic, summarization, ,, machine, translation, ,, named, entity,  , recognition, ,, relationship, extraction, ,, sentiment, analysis, ,, speech, recognition,  , topic, segmentation, .] 

>> PoS Tags are: 
[('organize', 'VERB'), ('massive', 'ADJ'), ('amounts', 'NOUN'), ('text', 'NOUN'), ('data', 'NOUN'), ('perform', 'VERB'), ('numerous', 'ADJ'), ('automated', 'VERB'), (' ', 'SPACE'), ('tasks', 'NOUN'), (',', 'PUNCT'), ('automatic', 'ADJ'), ('summarization', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('translation', 'NOUN'), (',', 'PUNCT'), ('named', 'VERB'), ('entity', 'NOUN'), (' ', 'SPACE'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('relationship', 'NOUN'), ('extraction', 'NOUN'), (',', 'PUNCT'), ('sentiment', 'NOUN'), ('analysis', 'NOUN'), (',', 'PUNCT'), ('speech', 'NOUN'), ('recognition', 'NOUN'), (' ', 'SPACE'), ('topic', 'NOUN'), ('segmentation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('organize', 'ROOT'), ('massive', 'amod'), ('amounts', 'dobj'), ('text', 'compound'), ('data', 'pobj'), ('perform', 'conj'), ('numerous', 'amod'), ('automated', 'amod'), (' ', 'compound'), ('tasks', 'dobj'), (',', 'punct'), ('automatic', 'amod'), ('summarization', 'pobj'), (',', 'punct'), ('machine', 'compound'), ('translation', 'conj'), (',', 'punct'), ('named', 'acl'), ('entity', 'oprd'), (' ', 'compound'), ('recognition', 'dobj'), (',', 'punct'), ('relationship', 'compound'), ('extraction', 'conj'), (',', 'punct'), ('sentiment', 'compound'), ('analysis', 'conj'), (',', 'punct'), ('speech', 'compound'), ('recognition', 'conj'), (' ', 'nmod'), ('topic', 'compound'), ('segmentation', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[organize, massive], [massive, amounts], [amounts, text], [text, data], [data, perform], [perform, numerous], [numerous, automated], [automated,  ], [ , tasks], [tasks, ,], [,, automatic], [automatic, summarization], [summarization, ,], [,, machine], [machine, translation], [translation, ,], [,, named], [named, entity], [entity,  ], [ , recognition], [recognition, ,], [,, relationship], [relationship, extraction], [extraction, ,], [,, sentiment], [sentiment, analysis], [analysis, ,], [,, speech], [speech, recognition], [recognition,  ], [ , topic], [topic, segmentation], [segmentation, .]]

>> Trigrams: 
[[organize, massive, amounts], [massive, amounts, text], [amounts, text, data], [text, data, perform], [data, perform, numerous], [perform, numerous, automated], [numerous, automated,  ], [automated,  , tasks], [ , tasks, ,], [tasks, ,, automatic], [,, automatic, summarization], [automatic, summarization, ,], [summarization, ,, machine], [,, machine, translation], [machine, translation, ,], [translation, ,, named], [,, named, entity], [named, entity,  ], [entity,  , recognition], [ , recognition, ,], [recognition, ,, relationship], [,, relationship, extraction], [relationship, extraction, ,], [extraction, ,, sentiment], [,, sentiment, analysis], [sentiment, analysis, ,], [analysis, ,, speech], [,, speech, recognition], [speech, recognition,  ], [recognition,  , topic], [ , topic, segmentation], [topic, segmentation, .]]

>> Noun Phrases are: 
[It, massive amounts, text data, numerous automated  tasks, automatic summarization, machine translation, entity,  recognition, relationship extraction, sentiment analysis, speech recognition,  topic segmentation]

>> Named Entities are: 
[]


============================ Sentence 323 =============================

 Key questions to ask and how to define high value use-cases To identify meaningful and high value use-cases for teams and organizations, it is  important to gather relevant information and requirements on three key pillars. 


>> Tokens are: 
[ , Key, questions, ask, define, high, value, use, -, cases, identify, meaningful, high, value, use, -, cases, teams, organizations, ,,  , important, gather, relevant, information, requirements, key, pillars, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Key', 'ADJ'), ('questions', 'NOUN'), ('ask', 'VERB'), ('define', 'VERB'), ('high', 'ADJ'), ('value', 'NOUN'), ('use', 'NOUN'), ('-', 'PUNCT'), ('cases', 'NOUN'), ('identify', 'VERB'), ('meaningful', 'ADJ'), ('high', 'ADJ'), ('value', 'NOUN'), ('use', 'NOUN'), ('-', 'PUNCT'), ('cases', 'NOUN'), ('teams', 'NOUN'), ('organizations', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('important', 'ADJ'), ('gather', 'VERB'), ('relevant', 'ADJ'), ('information', 'NOUN'), ('requirements', 'NOUN'), ('key', 'ADJ'), ('pillars', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'dep'), ('Key', 'amod'), ('questions', 'dobj'), ('ask', 'acl'), ('define', 'conj'), ('high', 'amod'), ('value', 'compound'), ('use', 'compound'), ('-', 'punct'), ('cases', 'dobj'), ('identify', 'relcl'), ('meaningful', 'amod'), ('high', 'conj'), ('value', 'compound'), ('use', 'compound'), ('-', 'punct'), ('cases', 'dobj'), ('teams', 'pobj'), ('organizations', 'conj'), (',', 'punct'), (' ', 'attr'), ('important', 'amod'), ('gather', 'xcomp'), ('relevant', 'amod'), ('information', 'dobj'), ('requirements', 'conj'), ('key', 'amod'), ('pillars', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , Key], [Key, questions], [questions, ask], [ask, define], [define, high], [high, value], [value, use], [use, -], [-, cases], [cases, identify], [identify, meaningful], [meaningful, high], [high, value], [value, use], [use, -], [-, cases], [cases, teams], [teams, organizations], [organizations, ,], [,,  ], [ , important], [important, gather], [gather, relevant], [relevant, information], [information, requirements], [requirements, key], [key, pillars], [pillars, .]]

>> Trigrams: 
[[ , Key, questions], [Key, questions, ask], [questions, ask, define], [ask, define, high], [define, high, value], [high, value, use], [value, use, -], [use, -, cases], [-, cases, identify], [cases, identify, meaningful], [identify, meaningful, high], [meaningful, high, value], [high, value, use], [value, use, -], [use, -, cases], [-, cases, teams], [cases, teams, organizations], [teams, organizations, ,], [organizations, ,,  ], [,,  , important], [ , important, gather], [important, gather, relevant], [gather, relevant, information], [relevant, information, requirements], [information, requirements, key], [requirements, key, pillars], [key, pillars, .]]

>> Noun Phrases are: 
[Key questions, high value use-cases, meaningful and high value use-cases, teams, organizations, it, relevant information, requirements, three key pillars]

>> Named Entities are: 
[('three', 'CARDINAL')]


============================ Sentence 324 =============================

  1. 


>> Tokens are: 
[  , 1, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('1', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('1', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[  , 1], [1, .]]

>> Trigrams: 
[[  , 1, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 325 =============================

Business knowledge • 


>> Tokens are: 
[Business, knowledge, •] 

>> PoS Tags are: 
[('Business', 'NOUN'), ('knowledge', 'NOUN'), ('•', 'VERB')] 

>> Dependency Tags are: 
[('Business', 'compound'), ('knowledge', 'ROOT'), ('•', 'punct')]

>> Bigrams: 
[[Business, knowledge], [knowledge, •]]

>> Trigrams: 
[[Business, knowledge, •]]

>> Noun Phrases are: 
[Business knowledge]

>> Named Entities are: 
[]


============================ Sentence 326 =============================

What is the current business process? 


>> Tokens are: 
[current, business, process, ?] 

>> PoS Tags are: 
[('current', 'ADJ'), ('business', 'NOUN'), ('process', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('current', 'amod'), ('business', 'compound'), ('process', 'nsubj'), ('?', 'punct')]

>> Bigrams: 
[[current, business], [business, process], [process, ?]]

>> Trigrams: 
[[current, business, process], [business, process, ?]]

>> Noun Phrases are: 
[What, the current business process]

>> Named Entities are: 
[]


============================ Sentence 327 =============================

How are things done currently? 


>> Tokens are: 
[things, currently, ?] 

>> PoS Tags are: 
[('things', 'NOUN'), ('currently', 'ADV'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('things', 'nsubjpass'), ('currently', 'advmod'), ('?', 'punct')]

>> Bigrams: 
[[things, currently], [currently, ?]]

>> Trigrams: 
[[things, currently, ?]]

>> Noun Phrases are: 
[things]

>> Named Entities are: 
[]


============================ Sentence 328 =============================

Does  someone manually identify which products to recommend to each customer? 


>> Tokens are: 
[ , manually, identify, products, recommend, customer, ?] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('manually', 'ADV'), ('identify', 'VERB'), ('products', 'NOUN'), ('recommend', 'VERB'), ('customer', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nsubj'), ('manually', 'advmod'), ('identify', 'ROOT'), ('products', 'nsubj'), ('recommend', 'ccomp'), ('customer', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[ , manually], [manually, identify], [identify, products], [products, recommend], [recommend, customer], [customer, ?]]

>> Trigrams: 
[[ , manually, identify], [manually, identify, products], [identify, products, recommend], [products, recommend, customer], [recommend, customer, ?]]

>> Noun Phrases are: 
[someone, which products, each customer]

>> Named Entities are: 
[]


============================ Sentence 329 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 330 =============================

Does someone manually review each loan application for fraud or risk? 


>> Tokens are: 
[manually, review, loan, application, fraud, risk, ?] 

>> PoS Tags are: 
[('manually', 'ADV'), ('review', 'VERB'), ('loan', 'NOUN'), ('application', 'NOUN'), ('fraud', 'NOUN'), ('risk', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('manually', 'advmod'), ('review', 'ROOT'), ('loan', 'compound'), ('application', 'dobj'), ('fraud', 'pobj'), ('risk', 'conj'), ('?', 'punct')]

>> Bigrams: 
[[manually, review], [review, loan], [loan, application], [application, fraud], [fraud, risk], [risk, ?]]

>> Trigrams: 
[[manually, review, loan], [review, loan, application], [loan, application, fraud], [application, fraud, risk], [fraud, risk, ?]]

>> Noun Phrases are: 
[someone, each loan application, fraud, risk]

>> Named Entities are: 
[]


============================ Sentence 331 =============================

Does an  engineer manually inspect all machinery each week for failure? 


>> Tokens are: 
[ , engineer, manually, inspect, machinery, week, failure, ?] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('engineer', 'NOUN'), ('manually', 'ADV'), ('inspect', 'VERB'), ('machinery', 'NOUN'), ('week', 'NOUN'), ('failure', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('engineer', 'nsubj'), ('manually', 'advmod'), ('inspect', 'ROOT'), ('machinery', 'dobj'), ('week', 'npadvmod'), ('failure', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[ , engineer], [engineer, manually], [manually, inspect], [inspect, machinery], [machinery, week], [week, failure], [failure, ?]]

>> Trigrams: 
[[ , engineer, manually], [engineer, manually, inspect], [manually, inspect, machinery], [inspect, machinery, week], [machinery, week, failure], [week, failure, ?]]

>> Noun Phrases are: 
[an  engineer, all machinery, failure]

>> Named Entities are: 
[('each week', 'DATE')]


============================ Sentence 332 =============================

Be as specific and  detailed as possible in defining the current process. 


>> Tokens are: 
[specific,  , detailed, possible, defining, current, process, .] 

>> PoS Tags are: 
[('specific', 'ADJ'), (' ', 'SPACE'), ('detailed', 'ADJ'), ('possible', 'ADJ'), ('defining', 'VERB'), ('current', 'ADJ'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('specific', 'acomp'), (' ', 'nsubj'), ('detailed', 'conj'), ('possible', 'amod'), ('defining', 'pcomp'), ('current', 'amod'), ('process', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[specific,  ], [ , detailed], [detailed, possible], [possible, defining], [defining, current], [current, process], [process, .]]

>> Trigrams: 
[[specific,  , detailed], [ , detailed, possible], [detailed, possible, defining], [possible, defining, current], [defining, current, process], [current, process, .]]

>> Noun Phrases are: 
[the current process]

>> Named Entities are: 
[]


============================ Sentence 333 =============================

  • 


>> Tokens are: 
[  , •] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('•', 'NUM')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('•', 'nummod')]

>> Bigrams: 
[[  , •]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 334 =============================

Define measurable goals and objectives. 


>> Tokens are: 
[Define, measurable, goals, objectives, .] 

>> PoS Tags are: 
[('Define', 'VERB'), ('measurable', 'ADJ'), ('goals', 'NOUN'), ('objectives', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Define', 'ROOT'), ('measurable', 'amod'), ('goals', 'dobj'), ('objectives', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Define, measurable], [measurable, goals], [goals, objectives], [objectives, .]]

>> Trigrams: 
[[Define, measurable, goals], [measurable, goals, objectives], [goals, objectives, .]]

>> Noun Phrases are: 
[measurable goals, objectives]

>> Named Entities are: 
[]


============================ Sentence 335 =============================

Is it to replace or enhance an existing  process? 


>> Tokens are: 
[replace, enhance, existing,  , process, ?] 

>> PoS Tags are: 
[('replace', 'VERB'), ('enhance', 'VERB'), ('existing', 'VERB'), (' ', 'SPACE'), ('process', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('replace', 'xcomp'), ('enhance', 'conj'), ('existing', 'amod'), (' ', 'compound'), ('process', 'dobj'), ('?', 'punct')]

>> Bigrams: 
[[replace, enhance], [enhance, existing], [existing,  ], [ , process], [process, ?]]

>> Trigrams: 
[[replace, enhance, existing], [enhance, existing,  ], [existing,  , process], [ , process, ?]]

>> Noun Phrases are: 
[it, an existing  process]

>> Named Entities are: 
[]


============================ Sentence 336 =============================

Is it to increase revenue and conversions from product upsell and cross sell  opportunities or to increase software subscriptions by three percent this quarter? 


>> Tokens are: 
[increase, revenue, conversions, product, upsell, cross, sell,  , opportunities, increase, software, subscriptions, percent, quarter, ?] 

>> PoS Tags are: 
[('increase', 'VERB'), ('revenue', 'NOUN'), ('conversions', 'NOUN'), ('product', 'NOUN'), ('upsell', 'ADJ'), ('cross', 'VERB'), ('sell', 'VERB'), (' ', 'SPACE'), ('opportunities', 'NOUN'), ('increase', 'VERB'), ('software', 'NOUN'), ('subscriptions', 'NOUN'), ('percent', 'NOUN'), ('quarter', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('increase', 'xcomp'), ('revenue', 'dobj'), ('conversions', 'conj'), ('product', 'compound'), ('upsell', 'pobj'), ('cross', 'conj'), ('sell', 'amod'), (' ', 'prep'), ('opportunities', 'dobj'), ('increase', 'conj'), ('software', 'compound'), ('subscriptions', 'dobj'), ('percent', 'pobj'), ('quarter', 'npadvmod'), ('?', 'punct')]

>> Bigrams: 
[[increase, revenue], [revenue, conversions], [conversions, product], [product, upsell], [upsell, cross], [cross, sell], [sell,  ], [ , opportunities], [opportunities, increase], [increase, software], [software, subscriptions], [subscriptions, percent], [percent, quarter], [quarter, ?]]

>> Trigrams: 
[[increase, revenue, conversions], [revenue, conversions, product], [conversions, product, upsell], [product, upsell, cross], [upsell, cross, sell], [cross, sell,  ], [sell,  , opportunities], [ , opportunities, increase], [opportunities, increase, software], [increase, software, subscriptions], [software, subscriptions, percent], [subscriptions, percent, quarter], [percent, quarter, ?]]

>> Noun Phrases are: 
[it, revenue, conversions, sell  opportunities, software subscriptions, three percent]

>> Named Entities are: 
[('three percent', 'PERCENT'), ('this quarter', 'DATE')]


============================ Sentence 337 =============================

 • 


>> Tokens are: 
[ , •] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('•', 'VERB')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('•', 'punct')]

>> Bigrams: 
[[ , •]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 338 =============================

What areas can be improved? 


>> Tokens are: 
[areas, improved, ?] 

>> PoS Tags are: 
[('areas', 'NOUN'), ('improved', 'VERB'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('areas', 'nsubjpass'), ('improved', 'ROOT'), ('?', 'punct')]

>> Bigrams: 
[[areas, improved], [improved, ?]]

>> Trigrams: 
[[areas, improved, ?]]

>> Noun Phrases are: 
[What areas]

>> Named Entities are: 
[]


============================ Sentence 339 =============================

What is the business question to be answered  with analytics? 


>> Tokens are: 
[business, question, answered,  , analytics, ?] 

>> PoS Tags are: 
[('business', 'NOUN'), ('question', 'NOUN'), ('answered', 'VERB'), (' ', 'SPACE'), ('analytics', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('business', 'compound'), ('question', 'nsubj'), ('answered', 'relcl'), (' ', 'dobj'), ('analytics', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[business, question], [question, answered], [answered,  ], [ , analytics], [analytics, ?]]

>> Trigrams: 
[[business, question, answered], [question, answered,  ], [answered,  , analytics], [ , analytics, ?]]

>> Noun Phrases are: 
[What, the business question, analytics]

>> Named Entities are: 
[]


============================ Sentence 340 =============================

Leverage subject matter experts to identify key pain points and  gaps in the current business process. 


>> Tokens are: 
[Leverage, subject, matter, experts, identify, key, pain, points,  , gaps, current, business, process, .] 

>> PoS Tags are: 
[('Leverage', 'NOUN'), ('subject', 'ADJ'), ('matter', 'NOUN'), ('experts', 'NOUN'), ('identify', 'VERB'), ('key', 'ADJ'), ('pain', 'NOUN'), ('points', 'NOUN'), (' ', 'SPACE'), ('gaps', 'NOUN'), ('current', 'ADJ'), ('business', 'NOUN'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Leverage', 'nmod'), ('subject', 'amod'), ('matter', 'compound'), ('experts', 'ROOT'), ('identify', 'relcl'), ('key', 'amod'), ('pain', 'compound'), ('points', 'dobj'), (' ', 'compound'), ('gaps', 'conj'), ('current', 'amod'), ('business', 'compound'), ('process', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Leverage, subject], [subject, matter], [matter, experts], [experts, identify], [identify, key], [key, pain], [pain, points], [points,  ], [ , gaps], [gaps, current], [current, business], [business, process], [process, .]]

>> Trigrams: 
[[Leverage, subject, matter], [subject, matter, experts], [matter, experts, identify], [experts, identify, key], [identify, key, pain], [key, pain, points], [pain, points,  ], [points,  , gaps], [ , gaps, current], [gaps, current, business], [current, business, process], [business, process, .]]

>> Noun Phrases are: 
[Leverage subject matter experts, key pain points,  gaps, the current business process]

>> Named Entities are: 
[]


============================ Sentence 341 =============================

Determine what part of the process can  be enhanced. 


>> Tokens are: 
[Determine, process,  , enhanced, .] 

>> PoS Tags are: 
[('Determine', 'VERB'), ('process', 'NOUN'), (' ', 'SPACE'), ('enhanced', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Determine', 'ROOT'), ('process', 'pobj'), (' ', 'nsubjpass'), ('enhanced', 'ccomp'), ('.', 'punct')]

>> Bigrams: 
[[Determine, process], [process,  ], [ , enhanced], [enhanced, .]]

>> Trigrams: 
[[Determine, process,  ], [process,  , enhanced], [ , enhanced, .]]

>> Noun Phrases are: 
[what part, the process]

>> Named Entities are: 
[]


============================ Sentence 342 =============================

Where can data-driven insights be used? 


>> Tokens are: 
[data, -, driven, insights, ?] 

>> PoS Tags are: 
[('data', 'NOUN'), ('-', 'PUNCT'), ('driven', 'VERB'), ('insights', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('data', 'npadvmod'), ('-', 'punct'), ('driven', 'amod'), ('insights', 'nsubjpass'), ('?', 'punct')]

>> Bigrams: 
[[data, -], [-, driven], [driven, insights], [insights, ?]]

>> Trigrams: 
[[data, -, driven], [-, driven, insights], [driven, insights, ?]]

>> Noun Phrases are: 
[data-driven insights]

>> Named Entities are: 
[]


============================ Sentence 343 =============================

Is the objective to speed  up loan application processing? 


>> Tokens are: 
[objective, speed,  , loan, application, processing, ?] 

>> PoS Tags are: 
[('objective', 'NOUN'), ('speed', 'VERB'), (' ', 'SPACE'), ('loan', 'NOUN'), ('application', 'NOUN'), ('processing', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('objective', 'nsubj'), ('speed', 'acl'), (' ', 'dobj'), ('loan', 'compound'), ('application', 'compound'), ('processing', 'dobj'), ('?', 'punct')]

>> Bigrams: 
[[objective, speed], [speed,  ], [ , loan], [loan, application], [application, processing], [processing, ?]]

>> Trigrams: 
[[objective, speed,  ], [speed,  , loan], [ , loan, application], [loan, application, processing], [application, processing, ?]]

>> Noun Phrases are: 
[the objective, loan application processing]

>> Named Entities are: 
[]


============================ Sentence 344 =============================

Identify high risk transactions on credit cards? 


>> Tokens are: 
[Identify, high, risk, transactions, credit, cards, ?] 

>> PoS Tags are: 
[('Identify', 'VERB'), ('high', 'ADJ'), ('risk', 'NOUN'), ('transactions', 'NOUN'), ('credit', 'NOUN'), ('cards', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('Identify', 'ROOT'), ('high', 'amod'), ('risk', 'compound'), ('transactions', 'dobj'), ('credit', 'compound'), ('cards', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[Identify, high], [high, risk], [risk, transactions], [transactions, credit], [credit, cards], [cards, ?]]

>> Trigrams: 
[[Identify, high, risk], [high, risk, transactions], [risk, transactions, credit], [transactions, credit, cards], [credit, cards, ?]]

>> Noun Phrases are: 
[high risk transactions, credit cards]

>> Named Entities are: 
[]


============================ Sentence 345 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 346 =============================

Understand customers better? 


>> Tokens are: 
[Understand, customers, better, ?] 

>> PoS Tags are: 
[('Understand', 'VERB'), ('customers', 'NOUN'), ('better', 'ADV'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('Understand', 'compound'), ('customers', 'nsubj'), ('better', 'ROOT'), ('?', 'punct')]

>> Bigrams: 
[[Understand, customers], [customers, better], [better, ?]]

>> Trigrams: 
[[Understand, customers, better], [customers, better, ?]]

>> Noun Phrases are: 
[Understand customers]

>> Named Entities are: 
[]


============================ Sentence 347 =============================

Specify key challenges and areas for improvement. 


>> Tokens are: 
[Specify, key, challenges, areas, improvement, .] 

>> PoS Tags are: 
[('Specify', 'VERB'), ('key', 'ADJ'), ('challenges', 'NOUN'), ('areas', 'NOUN'), ('improvement', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Specify', 'ROOT'), ('key', 'amod'), ('challenges', 'dobj'), ('areas', 'conj'), ('improvement', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Specify, key], [key, challenges], [challenges, areas], [areas, improvement], [improvement, .]]

>> Trigrams: 
[[Specify, key, challenges], [key, challenges, areas], [challenges, areas, improvement], [areas, improvement, .]]

>> Noun Phrases are: 
[key challenges, areas, improvement]

>> Named Entities are: 
[]


============================ Sentence 348 =============================

  2. 


>> Tokens are: 
[  , 2, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('2', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('2', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[  , 2], [2, .]]

>> Trigrams: 
[[  , 2, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 349 =============================

Solution vision • 


>> Tokens are: 
[Solution, vision, •] 

>> PoS Tags are: 
[('Solution', 'NOUN'), ('vision', 'NOUN'), ('•', 'INTJ')] 

>> Dependency Tags are: 
[('Solution', 'compound'), ('vision', 'ROOT'), ('•', 'punct')]

>> Bigrams: 
[[Solution, vision], [vision, •]]

>> Trigrams: 
[[Solution, vision, •]]

>> Noun Phrases are: 
[Solution vision]

>> Named Entities are: 
[]


============================ Sentence 350 =============================

Why is it important to solve the current business problem/use-case? 


>> Tokens are: 
[important, solve, current, business, problem, /, use, -, case, ?] 

>> PoS Tags are: 
[('important', 'ADJ'), ('solve', 'VERB'), ('current', 'ADJ'), ('business', 'NOUN'), ('problem', 'NOUN'), ('/', 'SYM'), ('use', 'NOUN'), ('-', 'PUNCT'), ('case', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('important', 'acomp'), ('solve', 'xcomp'), ('current', 'amod'), ('business', 'nmod'), ('problem', 'nmod'), ('/', 'punct'), ('use', 'compound'), ('-', 'punct'), ('case', 'dobj'), ('?', 'punct')]

>> Bigrams: 
[[important, solve], [solve, current], [current, business], [business, problem], [problem, /], [/, use], [use, -], [-, case], [case, ?]]

>> Trigrams: 
[[important, solve, current], [solve, current, business], [current, business, problem], [business, problem, /], [problem, /, use], [/, use, -], [use, -, case], [-, case, ?]]

>> Noun Phrases are: 
[it, the current business problem/use-case]

>> Named Entities are: 
[]


============================ Sentence 351 =============================

Define  what success would look like. 


>> Tokens are: 
[Define,  , success, look, like, .] 

>> PoS Tags are: 
[('Define', 'PROPN'), (' ', 'SPACE'), ('success', 'NOUN'), ('look', 'VERB'), ('like', 'ADP'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Define', 'npadvmod'), (' ', 'nummod'), ('success', 'nsubj'), ('look', 'ROOT'), ('like', 'prep'), ('.', 'punct')]

>> Bigrams: 
[[Define,  ], [ , success], [success, look], [look, like], [like, .]]

>> Trigrams: 
[[Define,  , success], [ , success, look], [success, look, like], [look, like, .]]

>> Noun Phrases are: 
[what success]

>> Named Entities are: 
[]


============================ Sentence 352 =============================

Specifically, in order to execute a successful  project, what are the minimum requirements and success criteria? 


>> Tokens are: 
[Specifically, ,, order, execute, successful,  , project, ,, minimum, requirements, success, criteria, ?] 

>> PoS Tags are: 
[('Specifically', 'ADV'), (',', 'PUNCT'), ('order', 'NOUN'), ('execute', 'VERB'), ('successful', 'ADJ'), (' ', 'SPACE'), ('project', 'NOUN'), (',', 'PUNCT'), ('minimum', 'ADJ'), ('requirements', 'NOUN'), ('success', 'NOUN'), ('criteria', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('Specifically', 'advmod'), (',', 'punct'), ('order', 'pobj'), ('execute', 'acl'), ('successful', 'amod'), (' ', 'compound'), ('project', 'dobj'), (',', 'punct'), ('minimum', 'amod'), ('requirements', 'nsubj'), ('success', 'compound'), ('criteria', 'conj'), ('?', 'punct')]

>> Bigrams: 
[[Specifically, ,], [,, order], [order, execute], [execute, successful], [successful,  ], [ , project], [project, ,], [,, minimum], [minimum, requirements], [requirements, success], [success, criteria], [criteria, ?]]

>> Trigrams: 
[[Specifically, ,, order], [,, order, execute], [order, execute, successful], [execute, successful,  ], [successful,  , project], [ , project, ,], [project, ,, minimum], [,, minimum, requirements], [minimum, requirements, success], [requirements, success, criteria], [success, criteria, ?]]

>> Noun Phrases are: 
[order, a successful  project, what, the minimum requirements, success criteria]

>> Named Entities are: 
[]


============================ Sentence 353 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 354 =============================

• Define what decision or business process will be affected by the analytical  solution. 


>> Tokens are: 
[•, Define, decision, business, process, affected, analytical,  , solution, .] 

>> PoS Tags are: 
[('•', 'INTJ'), ('Define', 'VERB'), ('decision', 'NOUN'), ('business', 'NOUN'), ('process', 'NOUN'), ('affected', 'VERB'), ('analytical', 'ADJ'), (' ', 'SPACE'), ('solution', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('•', 'dep'), ('Define', 'advcl'), ('decision', 'nmod'), ('business', 'conj'), ('process', 'nsubjpass'), ('affected', 'ROOT'), ('analytical', 'amod'), (' ', 'compound'), ('solution', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[•, Define], [Define, decision], [decision, business], [business, process], [process, affected], [affected, analytical], [analytical,  ], [ , solution], [solution, .]]

>> Trigrams: 
[[•, Define, decision], [Define, decision, business], [decision, business, process], [business, process, affected], [process, affected, analytical], [affected, analytical,  ], [analytical,  , solution], [ , solution, .]]

>> Noun Phrases are: 
[what decision or business process, the analytical  solution]

>> Named Entities are: 
[]


============================ Sentence 355 =============================

Who will be affected by this tool? 


>> Tokens are: 
[affected, tool, ?] 

>> PoS Tags are: 
[('affected', 'VERB'), ('tool', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('affected', 'ROOT'), ('tool', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[affected, tool], [tool, ?]]

>> Trigrams: 
[[affected, tool, ?]]

>> Noun Phrases are: 
[Who, this tool]

>> Named Entities are: 
[]


============================ Sentence 356 =============================

Who are the users of this tool? 


>> Tokens are: 
[users, tool, ?] 

>> PoS Tags are: 
[('users', 'NOUN'), ('tool', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('users', 'attr'), ('tool', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[users, tool], [tool, ?]]

>> Trigrams: 
[[users, tool, ?]]

>> Noun Phrases are: 
[Who, the users, this tool]

>> Named Entities are: 
[]


============================ Sentence 357 =============================

Will  this impact the marketing department and analysts? 


>> Tokens are: 
[ , impact, marketing, department, analysts, ?] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('impact', 'NOUN'), ('marketing', 'NOUN'), ('department', 'NOUN'), ('analysts', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'npadvmod'), ('impact', 'ROOT'), ('marketing', 'compound'), ('department', 'dobj'), ('analysts', 'conj'), ('?', 'punct')]

>> Bigrams: 
[[ , impact], [impact, marketing], [marketing, department], [department, analysts], [analysts, ?]]

>> Trigrams: 
[[ , impact, marketing], [impact, marketing, department], [marketing, department, analysts], [department, analysts, ?]]

>> Noun Phrases are: 
[Will  this impact, the marketing department, analysts]

>> Named Entities are: 
[]


============================ Sentence 358 =============================

Will it impact planning and  maintenance personnel? 


>> Tokens are: 
[impact, planning,  , maintenance, personnel, ?] 

>> PoS Tags are: 
[('impact', 'VERB'), ('planning', 'NOUN'), (' ', 'SPACE'), ('maintenance', 'NOUN'), ('personnel', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('impact', 'ROOT'), ('planning', 'dobj'), (' ', 'conj'), ('maintenance', 'compound'), ('personnel', 'dobj'), ('?', 'punct')]

>> Bigrams: 
[[impact, planning], [planning,  ], [ , maintenance], [maintenance, personnel], [personnel, ?]]

>> Trigrams: 
[[impact, planning,  ], [planning,  , maintenance], [ , maintenance, personnel], [maintenance, personnel, ?]]

>> Noun Phrases are: 
[it, planning, maintenance personnel]

>> Named Entities are: 
[]


============================ Sentence 359 =============================

Will it impact the claims processing unit of an insurance  company that is responsible for mitigating fraud? 


>> Tokens are: 
[impact, claims, processing, unit, insurance,  , company, responsible, mitigating, fraud, ?] 

>> PoS Tags are: 
[('impact', 'VERB'), ('claims', 'NOUN'), ('processing', 'NOUN'), ('unit', 'NOUN'), ('insurance', 'NOUN'), (' ', 'SPACE'), ('company', 'NOUN'), ('responsible', 'ADJ'), ('mitigating', 'VERB'), ('fraud', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('impact', 'ROOT'), ('claims', 'compound'), ('processing', 'compound'), ('unit', 'dobj'), ('insurance', 'compound'), (' ', 'compound'), ('company', 'pobj'), ('responsible', 'acomp'), ('mitigating', 'pcomp'), ('fraud', 'dobj'), ('?', 'punct')]

>> Bigrams: 
[[impact, claims], [claims, processing], [processing, unit], [unit, insurance], [insurance,  ], [ , company], [company, responsible], [responsible, mitigating], [mitigating, fraud], [fraud, ?]]

>> Trigrams: 
[[impact, claims, processing], [claims, processing, unit], [processing, unit, insurance], [unit, insurance,  ], [insurance,  , company], [ , company, responsible], [company, responsible, mitigating], [responsible, mitigating, fraud], [mitigating, fraud, ?]]

>> Noun Phrases are: 
[it, the claims processing unit, an insurance  company, fraud]

>> Named Entities are: 
[]


============================ Sentence 360 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 361 =============================

• 


>> Tokens are: 
[•] 

>> PoS Tags are: 
[('•', 'INTJ')] 

>> Dependency Tags are: 
[('•', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 362 =============================

How is the ROI of AI and analytics measured? 


>> Tokens are: 
[ROI, AI, analytics, measured, ?] 

>> PoS Tags are: 
[('ROI', 'PROPN'), ('AI', 'PROPN'), ('analytics', 'NOUN'), ('measured', 'VERB'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('ROI', 'nsubj'), ('AI', 'pobj'), ('analytics', 'conj'), ('measured', 'acl'), ('?', 'punct')]

>> Bigrams: 
[[ROI, AI], [AI, analytics], [analytics, measured], [measured, ?]]

>> Trigrams: 
[[ROI, AI, analytics], [AI, analytics, measured], [analytics, measured, ?]]

>> Noun Phrases are: 
[the ROI, AI, analytics]

>> Named Entities are: 
[('AI', 'ORG')]


============================ Sentence 363 =============================

Is there any current method to  track/benchmark the performance of current business processes and outcomes?  3. 


>> Tokens are: 
[current, method,  , track, /, benchmark, performance, current, business, processes, outcomes, ?,  , 3, .] 

>> PoS Tags are: 
[('current', 'ADJ'), ('method', 'NOUN'), (' ', 'SPACE'), ('track', 'NOUN'), ('/', 'SYM'), ('benchmark', 'NOUN'), ('performance', 'NOUN'), ('current', 'ADJ'), ('business', 'NOUN'), ('processes', 'NOUN'), ('outcomes', 'NOUN'), ('?', 'PUNCT'), (' ', 'SPACE'), ('3', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('current', 'amod'), ('method', 'attr'), (' ', 'pobj'), ('track', 'nmod'), ('/', 'punct'), ('benchmark', 'attr'), ('performance', 'dobj'), ('current', 'amod'), ('business', 'compound'), ('processes', 'pobj'), ('outcomes', 'conj'), ('?', 'punct'), (' ', 'nsubj'), ('3', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[current, method], [method,  ], [ , track], [track, /], [/, benchmark], [benchmark, performance], [performance, current], [current, business], [business, processes], [processes, outcomes], [outcomes, ?], [?,  ], [ , 3], [3, .]]

>> Trigrams: 
[[current, method,  ], [method,  , track], [ , track, /], [track, /, benchmark], [/, benchmark, performance], [benchmark, performance, current], [performance, current, business], [current, business, processes], [business, processes, outcomes], [processes, outcomes, ?], [outcomes, ?,  ], [?,  , 3], [ , 3, .]]

>> Noun Phrases are: 
[any current method, track/benchmark, the performance, current business processes, outcomes]

>> Named Entities are: 
[('3', 'CARDINAL')]


============================ Sentence 364 =============================

Data adequacy • 


>> Tokens are: 
[Data, adequacy, •] 

>> PoS Tags are: 
[('Data', 'NOUN'), ('adequacy', 'NOUN'), ('•', 'VERB')] 

>> Dependency Tags are: 
[('Data', 'compound'), ('adequacy', 'ROOT'), ('•', 'punct')]

>> Bigrams: 
[[Data, adequacy], [adequacy, •]]

>> Trigrams: 
[[Data, adequacy, •]]

>> Noun Phrases are: 
[Data adequacy]

>> Named Entities are: 
[]


============================ Sentence 365 =============================

What data is available? 


>> Tokens are: 
[data, available, ?] 

>> PoS Tags are: 
[('data', 'NOUN'), ('available', 'ADJ'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('data', 'nsubj'), ('available', 'acomp'), ('?', 'punct')]

>> Bigrams: 
[[data, available], [available, ?]]

>> Trigrams: 
[[data, available, ?]]

>> Noun Phrases are: 
[What data]

>> Named Entities are: 
[]


============================ Sentence 366 =============================

Is it structured or unstructured? 


>> Tokens are: 
[structured, unstructured, ?] 

>> PoS Tags are: 
[('structured', 'VERB'), ('unstructured', 'ADJ'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('structured', 'ROOT'), ('unstructured', 'conj'), ('?', 'punct')]

>> Bigrams: 
[[structured, unstructured], [unstructured, ?]]

>> Trigrams: 
[[structured, unstructured, ?]]

>> Noun Phrases are: 
[it]

>> Named Entities are: 
[]


============================ Sentence 367 =============================

Is there data relevant to  answering the business problem? 


>> Tokens are: 
[data, relevant,  , answering, business, problem, ?] 

>> PoS Tags are: 
[('data', 'NOUN'), ('relevant', 'ADJ'), (' ', 'SPACE'), ('answering', 'VERB'), ('business', 'NOUN'), ('problem', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('data', 'attr'), ('relevant', 'amod'), (' ', 'pobj'), ('answering', 'acl'), ('business', 'compound'), ('problem', 'dobj'), ('?', 'punct')]

>> Bigrams: 
[[data, relevant], [relevant,  ], [ , answering], [answering, business], [business, problem], [problem, ?]]

>> Trigrams: 
[[data, relevant,  ], [relevant,  , answering], [ , answering, business], [answering, business, problem], [business, problem, ?]]

>> Noun Phrases are: 
[data, the business problem]

>> Named Entities are: 
[]


============================ Sentence 368 =============================

Example: Operational data is required to predict  when a machine will fail. 


>> Tokens are: 
[Example, :, Operational, data, required, predict,  , machine, fail, .] 

>> PoS Tags are: 
[('Example', 'NOUN'), (':', 'PUNCT'), ('Operational', 'ADJ'), ('data', 'NOUN'), ('required', 'VERB'), ('predict', 'VERB'), (' ', 'SPACE'), ('machine', 'NOUN'), ('fail', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Example', 'dep'), (':', 'punct'), ('Operational', 'amod'), ('data', 'nsubjpass'), ('required', 'ROOT'), ('predict', 'xcomp'), (' ', 'dobj'), ('machine', 'nsubj'), ('fail', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[Example, :], [:, Operational], [Operational, data], [data, required], [required, predict], [predict,  ], [ , machine], [machine, fail], [fail, .]]

>> Trigrams: 
[[Example, :, Operational], [:, Operational, data], [Operational, data, required], [data, required, predict], [required, predict,  ], [predict,  , machine], [ , machine, fail], [machine, fail, .]]

>> Noun Phrases are: 
[Operational data, a machine]

>> Named Entities are: 
[]


============================ Sentence 369 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 370 =============================

• 


>> Tokens are: 
[•] 

>> PoS Tags are: 
[('•', 'X')] 

>> Dependency Tags are: 
[('•', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 371 =============================

How much data does the organization have? 


>> Tokens are: 
[data, organization, ?] 

>> PoS Tags are: 
[('data', 'NOUN'), ('organization', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('data', 'dobj'), ('organization', 'nsubj'), ('?', 'punct')]

>> Bigrams: 
[[data, organization], [organization, ?]]

>> Trigrams: 
[[data, organization, ?]]

>> Noun Phrases are: 
[How much data, the organization]

>> Named Entities are: 
[]


============================ Sentence 372 =============================

Where is the data stored? 


>> Tokens are: 
[data, stored, ?] 

>> PoS Tags are: 
[('data', 'NOUN'), ('stored', 'VERB'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('data', 'nsubj'), ('stored', 'ROOT'), ('?', 'punct')]

>> Bigrams: 
[[data, stored], [stored, ?]]

>> Trigrams: 
[[data, stored, ?]]

>> Noun Phrases are: 
[the data]

>> Named Entities are: 
[]


============================ Sentence 373 =============================

  • Is data readily accessible for analysis and modelling?    14/14   


>> Tokens are: 
[  , •, data, readily, accessible, analysis, modelling, ?,    , 14/14,  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('•', 'PRON'), ('data', 'NOUN'), ('readily', 'ADV'), ('accessible', 'ADJ'), ('analysis', 'NOUN'), ('modelling', 'NOUN'), ('?', 'PUNCT'), ('   ', 'SPACE'), ('14/14', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'nsubj'), ('•', 'nummod'), ('data', 'attr'), ('readily', 'advmod'), ('accessible', 'amod'), ('analysis', 'pobj'), ('modelling', 'conj'), ('?', 'punct'), ('   ', 'compound'), ('14/14', 'nummod'), (' ', 'punct')]

>> Bigrams: 
[[  , •], [•, data], [data, readily], [readily, accessible], [accessible, analysis], [analysis, modelling], [modelling, ?], [?,    ], [   , 14/14], [14/14,  ]]

>> Trigrams: 
[[  , •, data], [•, data, readily], [data, readily, accessible], [readily, accessible, analysis], [accessible, analysis, modelling], [analysis, modelling, ?], [modelling, ?,    ], [?,    , 14/14], [   , 14/14,  ]]

>> Noun Phrases are: 
[data, analysis, modelling]

>> Named Entities are: 
[]


============================ Sentence 374 =============================

Copyright © 2021 Open Text. 


>> Tokens are: 
[Copyright, ©, 2021, Open, Text, .] 

>> PoS Tags are: 
[('Copyright', 'NOUN'), ('©', 'NOUN'), ('2021', 'NUM'), ('Open', 'PROPN'), ('Text', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Copyright', 'compound'), ('©', 'nmod'), ('2021', 'nummod'), ('Open', 'compound'), ('Text', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Copyright, ©], [©, 2021], [2021, Open], [Open, Text], [Text, .]]

>> Trigrams: 
[[Copyright, ©, 2021], [©, 2021, Open], [2021, Open, Text], [Open, Text, .]]

>> Noun Phrases are: 
[Copyright © 2021 Open Text]

>> Named Entities are: 
[('2021', 'DATE')]


============================ Sentence 375 =============================

All Rights Reserved. 


>> Tokens are: 
[Rights, Reserved, .] 

>> PoS Tags are: 
[('Rights', 'PROPN'), ('Reserved', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Rights', 'compound'), ('Reserved', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Rights, Reserved], [Reserved, .]]

>> Trigrams: 
[[Rights, Reserved, .]]

>> Noun Phrases are: 
[All Rights Reserved]

>> Named Entities are: 
[]


============================ Sentence 376 =============================

Trademarks owned by Open Text. 


>> Tokens are: 
[Trademarks, owned, Open, Text, .] 

>> PoS Tags are: 
[('Trademarks', 'NOUN'), ('owned', 'VERB'), ('Open', 'PROPN'), ('Text', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Trademarks', 'ROOT'), ('owned', 'acl'), ('Open', 'compound'), ('Text', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Trademarks, owned], [owned, Open], [Open, Text], [Text, .]]

>> Trigrams: 
[[Trademarks, owned, Open], [owned, Open, Text], [Open, Text, .]]

>> Noun Phrases are: 
[Trademarks, Open Text]

>> Named Entities are: 
[('Trademarks', 'NORP')]


============================ Sentence 377 =============================

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 378 =============================

For more information, visit: https://www.opentext.com/about/copyright-information • (23.04.21)17629.EN#  opentext.com/contact   


>> Tokens are: 
[information, ,, visit, :, https://www.opentext.com/about/copyright-information, •, (, 23.04.21)17629.EN, #,  , opentext.com/contact,  ] 

>> PoS Tags are: 
[('information', 'NOUN'), (',', 'PUNCT'), ('visit', 'NOUN'), (':', 'PUNCT'), ('https://www.opentext.com/about/copyright-information', 'PROPN'), ('•', 'NUM'), ('(', 'PUNCT'), ('23.04.21)17629.EN', 'NUM'), ('#', 'SYM'), (' ', 'SPACE'), ('opentext.com/contact', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('information', 'pobj'), (',', 'punct'), ('visit', 'ROOT'), (':', 'punct'), ('https://www.opentext.com/about/copyright-information', 'appos'), ('•', 'nummod'), ('(', 'punct'), ('23.04.21)17629.EN', 'amod'), ('#', 'appos'), (' ', 'nummod'), ('opentext.com/contact', 'compound'), (' ', 'punct')]

>> Bigrams: 
[[information, ,], [,, visit], [visit, :], [:, https://www.opentext.com/about/copyright-information], [https://www.opentext.com/about/copyright-information, •], [•, (], [(, 23.04.21)17629.EN], [23.04.21)17629.EN, #], [#,  ], [ , opentext.com/contact], [opentext.com/contact,  ]]

>> Trigrams: 
[[information, ,, visit], [,, visit, :], [visit, :, https://www.opentext.com/about/copyright-information], [:, https://www.opentext.com/about/copyright-information, •], [https://www.opentext.com/about/copyright-information, •, (], [•, (, 23.04.21)17629.EN], [(, 23.04.21)17629.EN, #], [23.04.21)17629.EN, #,  ], [#,  , opentext.com/contact], [ , opentext.com/contact,  ]]

>> Noun Phrases are: 
[more information, https://www.opentext.com/about/copyright-information]

>> Named Entities are: 
[]


============================ Sentence 379 =============================

Use-case evaluation worksheet Section 1: Business knowledge                                                                       Section 2: Solution vision                                                                     Section 3: Data adequacy                                                                     Tips and tricks • Framing the right business question is key to success. 


>> Tokens are: 
[Use, -, case, evaluation, worksheet, Section, 1, :, Business, knowledge,                                                                       , Section, 2, :, Solution, vision,                                                                     , Section, 3, :, Data, adequacy,                                                                     , Tips, tricks, •, Framing, right, business, question, key, success, .] 

>> PoS Tags are: 
[('Use', 'NOUN'), ('-', 'PUNCT'), ('case', 'NOUN'), ('evaluation', 'NOUN'), ('worksheet', 'NOUN'), ('Section', 'NOUN'), ('1', 'NUM'), (':', 'PUNCT'), ('Business', 'NOUN'), ('knowledge', 'NOUN'), ('                                                                      ', 'SPACE'), ('Section', 'NOUN'), ('2', 'NUM'), (':', 'PUNCT'), ('Solution', 'NOUN'), ('vision', 'NOUN'), ('                                                                    ', 'SPACE'), ('Section', 'NOUN'), ('3', 'NUM'), (':', 'PUNCT'), ('Data', 'PROPN'), ('adequacy', 'NOUN'), ('                                                                    ', 'SPACE'), ('Tips', 'NOUN'), ('tricks', 'NOUN'), ('•', 'X'), ('Framing', 'VERB'), ('right', 'ADJ'), ('business', 'NOUN'), ('question', 'NOUN'), ('key', 'ADJ'), ('success', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Use', 'compound'), ('-', 'punct'), ('case', 'compound'), ('evaluation', 'compound'), ('worksheet', 'compound'), ('Section', 'nsubj'), ('1', 'nummod'), (':', 'punct'), ('Business', 'compound'), ('knowledge', 'compound'), ('                                                                      ', 'compound'), ('Section', 'appos'), ('2', 'nummod'), (':', 'punct'), ('Solution', 'compound'), ('vision', 'appos'), ('                                                                    ', 'compound'), ('Section', 'appos'), ('3', 'nummod'), (':', 'punct'), ('Data', 'compound'), ('adequacy', 'compound'), ('                                                                    ', 'compound'), ('Tips', 'appos'), ('tricks', 'conj'), ('•', 'nummod'), ('Framing', 'acl'), ('right', 'amod'), ('business', 'compound'), ('question', 'dobj'), ('key', 'acomp'), ('success', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Use, -], [-, case], [case, evaluation], [evaluation, worksheet], [worksheet, Section], [Section, 1], [1, :], [:, Business], [Business, knowledge], [knowledge,                                                                       ], [                                                                      , Section], [Section, 2], [2, :], [:, Solution], [Solution, vision], [vision,                                                                     ], [                                                                    , Section], [Section, 3], [3, :], [:, Data], [Data, adequacy], [adequacy,                                                                     ], [                                                                    , Tips], [Tips, tricks], [tricks, •], [•, Framing], [Framing, right], [right, business], [business, question], [question, key], [key, success], [success, .]]

>> Trigrams: 
[[Use, -, case], [-, case, evaluation], [case, evaluation, worksheet], [evaluation, worksheet, Section], [worksheet, Section, 1], [Section, 1, :], [1, :, Business], [:, Business, knowledge], [Business, knowledge,                                                                       ], [knowledge,                                                                       , Section], [                                                                      , Section, 2], [Section, 2, :], [2, :, Solution], [:, Solution, vision], [Solution, vision,                                                                     ], [vision,                                                                     , Section], [                                                                    , Section, 3], [Section, 3, :], [3, :, Data], [:, Data, adequacy], [Data, adequacy,                                                                     ], [adequacy,                                                                     , Tips], [                                                                    , Tips, tricks], [Tips, tricks, •], [tricks, •, Framing], [•, Framing, right], [Framing, right, business], [right, business, question], [business, question, key], [question, key, success], [key, success, .]]

>> Noun Phrases are: 
[Use-case evaluation worksheet Section, Business knowledge                                                                       Section, Solution vision,                                                                     Section, Data adequacy                                                                     Tips, tricks, the right business question, success]

>> Named Entities are: 
[('Section 1:', 'LAW'), ('Section 3', 'LAW')]


============================ Sentence 380 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 381 =============================

• Identify what success means and what the end solution will look like at the start. 


>> Tokens are: 
[•, Identify, success, means, end, solution, look, like, start, .] 

>> PoS Tags are: 
[('•', 'X'), ('Identify', 'VERB'), ('success', 'NOUN'), ('means', 'VERB'), ('end', 'NOUN'), ('solution', 'NOUN'), ('look', 'VERB'), ('like', 'ADP'), ('start', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('•', 'nsubj'), ('Identify', 'ROOT'), ('success', 'nsubj'), ('means', 'ccomp'), ('end', 'compound'), ('solution', 'nsubj'), ('look', 'conj'), ('like', 'prep'), ('start', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[•, Identify], [Identify, success], [success, means], [means, end], [end, solution], [solution, look], [look, like], [like, start], [start, .]]

>> Trigrams: 
[[•, Identify, success], [Identify, success, means], [success, means, end], [means, end, solution], [end, solution, look], [solution, look, like], [look, like, start], [like, start, .]]

>> Noun Phrases are: 
[what success, what, the end solution, the start]

>> Named Entities are: 
[]


============================ Sentence 382 =============================

  • 


>> Tokens are: 
[  , •] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('•', 'PRON')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('•', 'punct')]

>> Bigrams: 
[[  , •]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 383 =============================

Remember that AI applications have a very different lifecycle—training, testing,  modelling, experimenting and creating. 


>> Tokens are: 
[Remember, AI, applications, different, lifecycle, —, training, ,, testing, ,,  , modelling, ,, experimenting, creating, .] 

>> PoS Tags are: 
[('Remember', 'VERB'), ('AI', 'PROPN'), ('applications', 'NOUN'), ('different', 'ADJ'), ('lifecycle', 'NOUN'), ('—', 'PUNCT'), ('training', 'NOUN'), (',', 'PUNCT'), ('testing', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('modelling', 'NOUN'), (',', 'PUNCT'), ('experimenting', 'VERB'), ('creating', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Remember', 'ROOT'), ('AI', 'compound'), ('applications', 'nsubj'), ('different', 'amod'), ('lifecycle', 'dobj'), ('—', 'punct'), ('training', 'appos'), (',', 'punct'), ('testing', 'conj'), (',', 'punct'), (' ', 'conj'), ('modelling', 'conj'), (',', 'punct'), ('experimenting', 'conj'), ('creating', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Remember, AI], [AI, applications], [applications, different], [different, lifecycle], [lifecycle, —], [—, training], [training, ,], [,, testing], [testing, ,], [,,  ], [ , modelling], [modelling, ,], [,, experimenting], [experimenting, creating], [creating, .]]

>> Trigrams: 
[[Remember, AI, applications], [AI, applications, different], [applications, different, lifecycle], [different, lifecycle, —], [lifecycle, —, training], [—, training, ,], [training, ,, testing], [,, testing, ,], [testing, ,,  ], [,,  , modelling], [ , modelling, ,], [modelling, ,, experimenting], [,, experimenting, creating], [experimenting, creating, .]]

>> Noun Phrases are: 
[AI applications, a very different lifecycle, training, testing, modelling]

>> Named Entities are: 
[]


============================ Sentence 384 =============================

 • Start small, start early! 


>> Tokens are: 
[ , •, Start, small, ,, start, early, !] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('•', 'PRON'), ('Start', 'VERB'), ('small', 'ADJ'), (',', 'PUNCT'), ('start', 'VERB'), ('early', 'ADV'), ('!', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nsubj'), ('•', 'appos'), ('Start', 'ROOT'), ('small', 'acomp'), (',', 'punct'), ('start', 'conj'), ('early', 'advmod'), ('!', 'punct')]

>> Bigrams: 
[[ , •], [•, Start], [Start, small], [small, ,], [,, start], [start, early], [early, !]]

>> Trigrams: 
[[ , •, Start], [•, Start, small], [Start, small, ,], [small, ,, start], [,, start, early], [start, early, !]]

>> Noun Phrases are: 
[•]

>> Named Entities are: 
[]


============================ Sentence 385 =============================

 • Iterate, iterate, iterate! 


>> Tokens are: 
[ , •, Iterate, ,, iterate, ,, iterate, !] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('•', 'PRON'), ('Iterate', 'PROPN'), (',', 'PUNCT'), ('iterate', 'NOUN'), (',', 'PUNCT'), ('iterate', 'NOUN'), ('!', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('•', 'punct'), ('Iterate', 'appos'), (',', 'punct'), ('iterate', 'amod'), (',', 'punct'), ('iterate', 'appos'), ('!', 'punct')]

>> Bigrams: 
[[ , •], [•, Iterate], [Iterate, ,], [,, iterate], [iterate, ,], [,, iterate], [iterate, !]]

>> Trigrams: 
[[ , •, Iterate], [•, Iterate, ,], [Iterate, ,, iterate], [,, iterate, ,], [iterate, ,, iterate], [,, iterate, !]]

>> Noun Phrases are: 
[Iterate, iterate, iterate]

>> Named Entities are: 
[]


============================ Sentence 386 =============================

  About OpenText OpenText, The Information Company, enables organizations to gain insight through  market leading information management solutions, on-premises or in the cloud. 


>> Tokens are: 
[  , OpenText, OpenText, ,, Information, Company, ,, enables, organizations, gain, insight,  , market, leading, information, management, solutions, ,, -, premises, cloud, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('OpenText', 'PROPN'), ('OpenText', 'PROPN'), (',', 'PUNCT'), ('Information', 'PROPN'), ('Company', 'PROPN'), (',', 'PUNCT'), ('enables', 'VERB'), ('organizations', 'NOUN'), ('gain', 'VERB'), ('insight', 'NOUN'), (' ', 'SPACE'), ('market', 'NOUN'), ('leading', 'VERB'), ('information', 'NOUN'), ('management', 'NOUN'), ('solutions', 'NOUN'), (',', 'PUNCT'), ('-', 'PUNCT'), ('premises', 'NOUN'), ('cloud', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nsubj'), ('OpenText', 'compound'), ('OpenText', 'pobj'), (',', 'punct'), ('Information', 'compound'), ('Company', 'appos'), (',', 'punct'), ('enables', 'ROOT'), ('organizations', 'dobj'), ('gain', 'xcomp'), ('insight', 'dobj'), (' ', 'pobj'), ('market', 'npadvmod'), ('leading', 'amod'), ('information', 'compound'), ('management', 'compound'), ('solutions', 'pobj'), (',', 'punct'), ('-', 'punct'), ('premises', 'pobj'), ('cloud', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , OpenText], [OpenText, OpenText], [OpenText, ,], [,, Information], [Information, Company], [Company, ,], [,, enables], [enables, organizations], [organizations, gain], [gain, insight], [insight,  ], [ , market], [market, leading], [leading, information], [information, management], [management, solutions], [solutions, ,], [,, -], [-, premises], [premises, cloud], [cloud, .]]

>> Trigrams: 
[[  , OpenText, OpenText], [OpenText, OpenText, ,], [OpenText, ,, Information], [,, Information, Company], [Information, Company, ,], [Company, ,, enables], [,, enables, organizations], [enables, organizations, gain], [organizations, gain, insight], [gain, insight,  ], [insight,  , market], [ , market, leading], [market, leading, information], [leading, information, management], [information, management, solutions], [management, solutions, ,], [solutions, ,, -], [,, -, premises], [-, premises, cloud], [premises, cloud, .]]

>> Noun Phrases are: 
[OpenText OpenText, The Information Company, organizations, insight, market leading information management solutions, premises, the cloud]

>> Named Entities are: 
[('About OpenText OpenText', 'PERCENT'), ('The Information Company', 'ORG')]


============================ Sentence 387 =============================

For  more information about OpenText (NASDAQ: OTEX, TSX: OTEX) visit: opentext.com.   


>> Tokens are: 
[ , information, OpenText, (, NASDAQ, :, OTEX, ,, TSX, :, OTEX, ), visit, :, opentext.com, .,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('information', 'NOUN'), ('OpenText', 'PROPN'), ('(', 'PUNCT'), ('NASDAQ', 'PROPN'), (':', 'PUNCT'), ('OTEX', 'PROPN'), (',', 'PUNCT'), ('TSX', 'PROPN'), (':', 'PUNCT'), ('OTEX', 'PROPN'), (')', 'PUNCT'), ('visit', 'NOUN'), (':', 'PUNCT'), ('opentext.com', 'X'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'pobj'), ('information', 'pobj'), ('OpenText', 'pobj'), ('(', 'punct'), ('NASDAQ', 'appos'), (':', 'punct'), ('OTEX', 'appos'), (',', 'punct'), ('TSX', 'conj'), (':', 'punct'), ('OTEX', 'appos'), (')', 'punct'), ('visit', 'ROOT'), (':', 'punct'), ('opentext.com', 'appos'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[ , information], [information, OpenText], [OpenText, (], [(, NASDAQ], [NASDAQ, :], [:, OTEX], [OTEX, ,], [,, TSX], [TSX, :], [:, OTEX], [OTEX, )], [), visit], [visit, :], [:, opentext.com], [opentext.com, .], [.,  ]]

>> Trigrams: 
[[ , information, OpenText], [information, OpenText, (], [OpenText, (, NASDAQ], [(, NASDAQ, :], [NASDAQ, :, OTEX], [:, OTEX, ,], [OTEX, ,, TSX], [,, TSX, :], [TSX, :, OTEX], [:, OTEX, )], [OTEX, ), visit], [), visit, :], [visit, :, opentext.com], [:, opentext.com, .], [opentext.com, .,  ]]

>> Noun Phrases are: 
[more information, OpenText, NASDAQ, OTEX, TSX, OTEX]

>> Named Entities are: 
[('OpenText', 'ORG'), ('NASDAQ', 'ORG'), ('TSX', 'ORG'), ('OTEX', 'ORG')]


============================ Sentence 388 =============================

Connect with us: • OpenText CEO Mark Barrenechea’s blog • Twitter | LinkedIn   Learn more   OpenText™ Magellan™    OpenText™ Magellan™    product overview    OpenText AI white paper     OpenText™ Magellan™ infographic    


>> Tokens are: 
[Connect, :, •, OpenText, CEO, Mark, Barrenechea, blog, •, Twitter, |, LinkedIn,   , Learn,   , OpenText, ™, Magellan, ™,    , OpenText, ™, Magellan, ™,    , product, overview,    , OpenText, AI, white, paper,     , OpenText, ™, Magellan, ™, infographic,   ] 

>> PoS Tags are: 
[('Connect', 'VERB'), (':', 'PUNCT'), ('•', 'X'), ('OpenText', 'PROPN'), ('CEO', 'PROPN'), ('Mark', 'PROPN'), ('Barrenechea', 'PROPN'), ('blog', 'NOUN'), ('•', 'CCONJ'), ('Twitter', 'PROPN'), ('|', 'NOUN'), ('LinkedIn', 'PROPN'), ('  ', 'SPACE'), ('Learn', 'VERB'), ('  ', 'SPACE'), ('OpenText', 'PROPN'), ('™', 'VERB'), ('Magellan', 'PROPN'), ('™', 'VERB'), ('   ', 'SPACE'), ('OpenText', 'PROPN'), ('™', 'PROPN'), ('Magellan', 'PROPN'), ('™', 'VERB'), ('   ', 'SPACE'), ('product', 'NOUN'), ('overview', 'NOUN'), ('   ', 'SPACE'), ('OpenText', 'PROPN'), ('AI', 'PROPN'), ('white', 'ADJ'), ('paper', 'NOUN'), ('    ', 'SPACE'), ('OpenText', 'PROPN'), ('™', 'VERB'), ('Magellan', 'PROPN'), ('™', 'PROPN'), ('infographic', 'ADJ'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Connect', 'advcl'), (':', 'punct'), ('•', 'nmod'), ('OpenText', 'compound'), ('CEO', 'compound'), ('Mark', 'compound'), ('Barrenechea', 'poss'), ('blog', 'dobj'), ('•', 'advmod'), ('Twitter', 'compound'), ('|', 'compound'), ('LinkedIn', 'nsubj'), ('  ', 'appos'), ('Learn', 'ROOT'), ('  ', 'dobj'), ('OpenText', 'dep'), ('™', 'nmod'), ('Magellan', 'nsubj'), ('™', 'advcl'), ('   ', 'dobj'), ('OpenText', 'dep'), ('™', 'nmod'), ('Magellan', 'nsubj'), ('™', 'ccomp'), ('   ', 'nummod'), ('product', 'compound'), ('overview', 'dobj'), ('   ', 'conj'), ('OpenText', 'nmod'), ('AI', 'nmod'), ('white', 'amod'), ('paper', 'nsubj'), ('    ', 'dobj'), ('OpenText', 'dep'), ('™', 'nmod'), ('Magellan', 'nsubj'), ('™', 'appos'), ('infographic', 'conj'), ('  ', 'punct')]

>> Bigrams: 
[[Connect, :], [:, •], [•, OpenText], [OpenText, CEO], [CEO, Mark], [Mark, Barrenechea], [Barrenechea, blog], [blog, •], [•, Twitter], [Twitter, |], [|, LinkedIn], [LinkedIn,   ], [  , Learn], [Learn,   ], [  , OpenText], [OpenText, ™], [™, Magellan], [Magellan, ™], [™,    ], [   , OpenText], [OpenText, ™], [™, Magellan], [Magellan, ™], [™,    ], [   , product], [product, overview], [overview,    ], [   , OpenText], [OpenText, AI], [AI, white], [white, paper], [paper,     ], [    , OpenText], [OpenText, ™], [™, Magellan], [Magellan, ™], [™, infographic], [infographic,   ]]

>> Trigrams: 
[[Connect, :, •], [:, •, OpenText], [•, OpenText, CEO], [OpenText, CEO, Mark], [CEO, Mark, Barrenechea], [Mark, Barrenechea, blog], [Barrenechea, blog, •], [blog, •, Twitter], [•, Twitter, |], [Twitter, |, LinkedIn], [|, LinkedIn,   ], [LinkedIn,   , Learn], [  , Learn,   ], [Learn,   , OpenText], [  , OpenText, ™], [OpenText, ™, Magellan], [™, Magellan, ™], [Magellan, ™,    ], [™,    , OpenText], [   , OpenText, ™], [OpenText, ™, Magellan], [™, Magellan, ™], [Magellan, ™,    ], [™,    , product], [   , product, overview], [product, overview,    ], [overview,    , OpenText], [   , OpenText, AI], [OpenText, AI, white], [AI, white, paper], [white, paper,     ], [paper,     , OpenText], [    , OpenText, ™], [OpenText, ™, Magellan], [™, Magellan, ™], [Magellan, ™, infographic], [™, infographic,   ]]

>> Noun Phrases are: 
[us, : • OpenText CEO Mark Barrenechea’s blog, Twitter | LinkedIn, Magellan, Magellan,    product overview, OpenText AI white paper, Magellan]

>> Named Entities are: 
[('OpenText', 'ORG'), ('Mark Barrenechea’s', 'PERSON'), ('LinkedIn', 'GPE'), ('Learn', 'ORG'), ('OpenText', 'ORG'), ('Magellan', 'PRODUCT'), ('OpenText', 'ORG'), ('Magellan', 'PRODUCT'), ('OpenText', 'ORG'), ('Magellan', 'ORG')]


============================ Sentence 389 =============================

Join 


>> Tokens are: 
[Join] 

>> PoS Tags are: 
[('Join', 'VERB')] 

>> Dependency Tags are: 
[('Join', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 390 =============================

the conversation   Keep up to date   Watch the videos  1	Forbes,	5 Ways AI Is Transforming The Customer Experience,	April	16,	2019. 


>> Tokens are: 
[conversation,   , date,   , Watch, videos,  , 1, 	, Forbes, ,, 	, 5, Ways, AI, Transforming, Customer, Experience, ,, 	, April, 	, 16, ,, 	, 2019, .] 

>> PoS Tags are: 
[('conversation', 'NOUN'), ('  ', 'SPACE'), ('date', 'NOUN'), ('  ', 'SPACE'), ('Watch', 'VERB'), ('videos', 'NOUN'), (' ', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('Forbes', 'PROPN'), (',', 'PUNCT'), ('\t', 'SPACE'), ('5', 'NUM'), ('Ways', 'PROPN'), ('AI', 'PROPN'), ('Transforming', 'VERB'), ('Customer', 'PROPN'), ('Experience', 'PROPN'), (',', 'PUNCT'), ('\t', 'SPACE'), ('April', 'PROPN'), ('\t', 'SPACE'), ('16', 'NUM'), (',', 'PUNCT'), ('\t', 'SPACE'), ('2019', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('conversation', 'ROOT'), ('  ', 'nsubj'), ('date', 'pobj'), ('  ', 'appos'), ('Watch', 'acl'), ('videos', 'nsubj'), (' ', 'ccomp'), ('1', 'nummod'), ('\t', 'compound'), ('Forbes', 'dobj'), (',', 'punct'), ('\t', 'compound'), ('5', 'nummod'), ('Ways', 'compound'), ('AI', 'nsubj'), ('Transforming', 'relcl'), ('Customer', 'compound'), ('Experience', 'dobj'), (',', 'punct'), ('\t', 'compound'), ('April', 'compound'), ('\t', 'npadvmod'), ('16', 'nummod'), (',', 'punct'), ('\t', 'appos'), ('2019', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[conversation,   ], [  , date], [date,   ], [  , Watch], [Watch, videos], [videos,  ], [ , 1], [1, 	], [	, Forbes], [Forbes, ,], [,, 	], [	, 5], [5, Ways], [Ways, AI], [AI, Transforming], [Transforming, Customer], [Customer, Experience], [Experience, ,], [,, 	], [	, April], [April, 	], [	, 16], [16, ,], [,, 	], [	, 2019], [2019, .]]

>> Trigrams: 
[[conversation,   , date], [  , date,   ], [date,   , Watch], [  , Watch, videos], [Watch, videos,  ], [videos,  , 1], [ , 1, 	], [1, 	, Forbes], [	, Forbes, ,], [Forbes, ,, 	], [,, 	, 5], [	, 5, Ways], [5, Ways, AI], [Ways, AI, Transforming], [AI, Transforming, Customer], [Transforming, Customer, Experience], [Customer, Experience, ,], [Experience, ,, 	], [,, 	, April], [	, April, 	], [April, 	, 16], [	, 16, ,], [16, ,, 	], [,, 	, 2019], [	, 2019, .]]

>> Noun Phrases are: 
[the conversation, date, the videos, 1	Forbes, 	5 Ways AI, The Customer Experience]

>> Named Entities are: 
[('1', 'CARDINAL'), ('5', 'CARDINAL'), ('April', 'DATE'), ('16', 'DATE'), ('2019', 'DATE')]


============================ Sentence 391 =============================

		 2	Gartner,	Gartner Says AI Augmentation Will Create $2.9 Trillion of Business Value in 2021,	August	5,	2019. 


>> Tokens are: 
[		 , 2, 	, Gartner, ,, 	, Gartner, Says, AI, Augmentation, Create, $, 2.9, Trillion, Business, Value, 2021, ,, 	, August, 	, 5, ,, 	, 2019, .] 

>> PoS Tags are: 
[('\t\t ', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('Gartner', 'PROPN'), (',', 'PUNCT'), ('\t', 'SPACE'), ('Gartner', 'PROPN'), ('Says', 'VERB'), ('AI', 'PROPN'), ('Augmentation', 'PROPN'), ('Create', 'VERB'), ('$', 'SYM'), ('2.9', 'NUM'), ('Trillion', 'NUM'), ('Business', 'PROPN'), ('Value', 'PROPN'), ('2021', 'NUM'), (',', 'PUNCT'), ('\t', 'SPACE'), ('August', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), (',', 'PUNCT'), ('\t', 'SPACE'), ('2019', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t\t ', 'nmod'), ('2', 'nummod'), ('\t', 'compound'), ('Gartner', 'nsubj'), (',', 'punct'), ('\t', 'compound'), ('Gartner', 'conj'), ('Says', 'ROOT'), ('AI', 'compound'), ('Augmentation', 'nsubj'), ('Create', 'ccomp'), ('$', 'quantmod'), ('2.9', 'compound'), ('Trillion', 'dobj'), ('Business', 'compound'), ('Value', 'pobj'), ('2021', 'pobj'), (',', 'punct'), ('\t', 'compound'), ('August', 'compound'), ('\t', 'npadvmod'), ('5', 'nummod'), (',', 'punct'), ('\t', 'conj'), ('2019', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[		 , 2], [2, 	], [	, Gartner], [Gartner, ,], [,, 	], [	, Gartner], [Gartner, Says], [Says, AI], [AI, Augmentation], [Augmentation, Create], [Create, $], [$, 2.9], [2.9, Trillion], [Trillion, Business], [Business, Value], [Value, 2021], [2021, ,], [,, 	], [	, August], [August, 	], [	, 5], [5, ,], [,, 	], [	, 2019], [2019, .]]

>> Trigrams: 
[[		 , 2, 	], [2, 	, Gartner], [	, Gartner, ,], [Gartner, ,, 	], [,, 	, Gartner], [	, Gartner, Says], [Gartner, Says, AI], [Says, AI, Augmentation], [AI, Augmentation, Create], [Augmentation, Create, $], [Create, $, 2.9], [$, 2.9, Trillion], [2.9, Trillion, Business], [Trillion, Business, Value], [Business, Value, 2021], [Value, 2021, ,], [2021, ,, 	], [,, 	, August], [	, August, 	], [August, 	, 5], [	, 5, ,], [5, ,, 	], [,, 	, 2019], [	, 2019, .]]

>> Noun Phrases are: 
[		 2	Gartner, 	Gartner, AI Augmentation, Business Value]

>> Named Entities are: 
[('Gartner', 'PERSON'), ('Gartner', 'PERSON'), ('$2.9 Trillion', 'MONEY'), ('2021', 'DATE'), ('August', 'DATE'), ('5', 'DATE'), ('2019', 'DATE')]
