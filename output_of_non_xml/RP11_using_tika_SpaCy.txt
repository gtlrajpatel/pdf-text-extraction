				 *** Text Processing using Spacy *** 


============================ Sentence 1 =============================

Microsoft Word - 32. 


>> Tokens are: 
[Microsoft, Word, -, 32, .] 

>> PoS Tags are: 
[('Microsoft', 'PROPN'), ('Word', 'PROPN'), ('-', 'PUNCT'), ('32', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Microsoft', 'compound'), ('Word', 'compound'), ('-', 'punct'), ('32', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Microsoft, Word], [Word, -], [-, 32], [32, .]]

>> Trigrams: 
[[Microsoft, Word, -], [Word, -, 32], [-, 32, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('Microsoft Word - 32', 'PERSON')]


============================ Sentence 2 =============================

Paper   Machine Learning Algorithms: A Review  Ayon Dey  Department of CSE, Gautam Buddha University,   Greater Noida, Uttar Pradesh, India    


>> Tokens are: 
[Paper,   , Machine, Learning, Algorithms, :, Review,  , Ayon, Dey,  , Department, CSE, ,, Gautam, Buddha, University, ,,   , Greater, Noida, ,, Uttar, Pradesh, ,, India,   ] 

>> PoS Tags are: 
[('Paper', 'NOUN'), ('  ', 'SPACE'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('Algorithms', 'PROPN'), (':', 'PUNCT'), ('Review', 'PROPN'), (' ', 'SPACE'), ('Ayon', 'PROPN'), ('Dey', 'PROPN'), (' ', 'SPACE'), ('Department', 'PROPN'), ('CSE', 'PROPN'), (',', 'PUNCT'), ('Gautam', 'PROPN'), ('Buddha', 'PROPN'), ('University', 'PROPN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('Greater', 'PROPN'), ('Noida', 'PROPN'), (',', 'PUNCT'), ('Uttar', 'PROPN'), ('Pradesh', 'PROPN'), (',', 'PUNCT'), ('India', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Paper', 'compound'), ('  ', 'dep'), ('Machine', 'compound'), ('Learning', 'compound'), ('Algorithms', 'ROOT'), (':', 'punct'), ('Review', 'nmod'), (' ', 'compound'), ('Ayon', 'compound'), ('Dey', 'nmod'), (' ', 'nummod'), ('Department', 'appos'), ('CSE', 'pobj'), (',', 'punct'), ('Gautam', 'compound'), ('Buddha', 'compound'), ('University', 'appos'), (',', 'punct'), ('  ', 'compound'), ('Greater', 'compound'), ('Noida', 'conj'), (',', 'punct'), ('Uttar', 'compound'), ('Pradesh', 'conj'), (',', 'punct'), ('India', 'appos'), ('  ', 'punct')]

>> Bigrams: 
[[Paper,   ], [  , Machine], [Machine, Learning], [Learning, Algorithms], [Algorithms, :], [:, Review], [Review,  ], [ , Ayon], [Ayon, Dey], [Dey,  ], [ , Department], [Department, CSE], [CSE, ,], [,, Gautam], [Gautam, Buddha], [Buddha, University], [University, ,], [,,   ], [  , Greater], [Greater, Noida], [Noida, ,], [,, Uttar], [Uttar, Pradesh], [Pradesh, ,], [,, India], [India,   ]]

>> Trigrams: 
[[Paper,   , Machine], [  , Machine, Learning], [Machine, Learning, Algorithms], [Learning, Algorithms, :], [Algorithms, :, Review], [:, Review,  ], [Review,  , Ayon], [ , Ayon, Dey], [Ayon, Dey,  ], [Dey,  , Department], [ , Department, CSE], [Department, CSE, ,], [CSE, ,, Gautam], [,, Gautam, Buddha], [Gautam, Buddha, University], [Buddha, University, ,], [University, ,,   ], [,,   , Greater], [  , Greater, Noida], [Greater, Noida, ,], [Noida, ,, Uttar], [,, Uttar, Pradesh], [Uttar, Pradesh, ,], [Pradesh, ,, India], [,, India,   ]]

>> Noun Phrases are: 
[Paper   Machine Learning Algorithms, A Review  Ayon Dey  Department, CSE, Gautam Buddha University,   Greater Noida, Uttar Pradesh, India]

>> Named Entities are: 
[('Department of CSE', 'ORG'), ('Gautam Buddha University', 'ORG'), ('Greater Noida', 'GPE'), ('Uttar Pradesh', 'ORG'), ('India', 'GPE')]


============================ Sentence 3 =============================

Abstract – In this paper, various machine learning algorithms have been discussed. 


>> Tokens are: 
[Abstract, –, paper, ,, machine, learning, algorithms, discussed, .] 

>> PoS Tags are: 
[('Abstract', 'PROPN'), ('–', 'PUNCT'), ('paper', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('learning', 'VERB'), ('algorithms', 'NOUN'), ('discussed', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Abstract', 'dep'), ('–', 'punct'), ('paper', 'pobj'), (',', 'punct'), ('machine', 'npadvmod'), ('learning', 'amod'), ('algorithms', 'nsubjpass'), ('discussed', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Abstract, –], [–, paper], [paper, ,], [,, machine], [machine, learning], [learning, algorithms], [algorithms, discussed], [discussed, .]]

>> Trigrams: 
[[Abstract, –, paper], [–, paper, ,], [paper, ,, machine], [,, machine, learning], [machine, learning, algorithms], [learning, algorithms, discussed], [algorithms, discussed, .]]

>> Noun Phrases are: 
[this paper, various machine learning algorithms]

>> Named Entities are: 
[]


============================ Sentence 4 =============================

These algorithms are used for various  purposes like data mining, image processing, predictive  analytics, etc. to name a few. 


>> Tokens are: 
[algorithms,  , purposes, like, data, mining, ,, image, processing, ,, predictive,  , analytics, ,, etc, ., .] 

>> PoS Tags are: 
[('algorithms', 'NOUN'), (' ', 'SPACE'), ('purposes', 'NOUN'), ('like', 'ADP'), ('data', 'NOUN'), ('mining', 'NOUN'), (',', 'PUNCT'), ('image', 'NOUN'), ('processing', 'NOUN'), (',', 'PUNCT'), ('predictive', 'ADJ'), (' ', 'SPACE'), ('analytics', 'NOUN'), (',', 'PUNCT'), ('etc', 'X'), ('.', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('algorithms', 'nsubjpass'), (' ', 'compound'), ('purposes', 'pobj'), ('like', 'prep'), ('data', 'compound'), ('mining', 'pobj'), (',', 'punct'), ('image', 'compound'), ('processing', 'conj'), (',', 'punct'), ('predictive', 'amod'), (' ', 'compound'), ('analytics', 'conj'), (',', 'punct'), ('etc', 'conj'), ('.', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[algorithms,  ], [ , purposes], [purposes, like], [like, data], [data, mining], [mining, ,], [,, image], [image, processing], [processing, ,], [,, predictive], [predictive,  ], [ , analytics], [analytics, ,], [,, etc], [etc, .], [., .]]

>> Trigrams: 
[[algorithms,  , purposes], [ , purposes, like], [purposes, like, data], [like, data, mining], [data, mining, ,], [mining, ,, image], [,, image, processing], [image, processing, ,], [processing, ,, predictive], [,, predictive,  ], [predictive,  , analytics], [ , analytics, ,], [analytics, ,, etc], [,, etc, .], [etc, ., .]]

>> Noun Phrases are: 
[These algorithms, various  purposes, data mining, image processing, predictive  analytics]

>> Named Entities are: 
[]


============================ Sentence 5 =============================

The main advantage of using  machine learning is that, once an algorithm learns what to do  with data, it can do its work automatically. 


>> Tokens are: 
[main, advantage,  , machine, learning, ,, algorithm, learns,  , data, ,, work, automatically, .] 

>> PoS Tags are: 
[('main', 'ADJ'), ('advantage', 'NOUN'), (' ', 'SPACE'), ('machine', 'NOUN'), ('learning', 'NOUN'), (',', 'PUNCT'), ('algorithm', 'NOUN'), ('learns', 'VERB'), (' ', 'SPACE'), ('data', 'NOUN'), (',', 'PUNCT'), ('work', 'NOUN'), ('automatically', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('main', 'amod'), ('advantage', 'nsubj'), (' ', 'compound'), ('machine', 'compound'), ('learning', 'dobj'), (',', 'punct'), ('algorithm', 'nsubj'), ('learns', 'ccomp'), (' ', 'dobj'), ('data', 'pobj'), (',', 'punct'), ('work', 'dobj'), ('automatically', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[main, advantage], [advantage,  ], [ , machine], [machine, learning], [learning, ,], [,, algorithm], [algorithm, learns], [learns,  ], [ , data], [data, ,], [,, work], [work, automatically], [automatically, .]]

>> Trigrams: 
[[main, advantage,  ], [advantage,  , machine], [ , machine, learning], [machine, learning, ,], [learning, ,, algorithm], [,, algorithm, learns], [algorithm, learns,  ], [learns,  , data], [ , data, ,], [data, ,, work], [,, work, automatically], [work, automatically, .]]

>> Noun Phrases are: 
[The main advantage,  machine learning, an algorithm, what, data, it, its work]

>> Named Entities are: 
[]


============================ Sentence 6 =============================

  Keywords – Machine learning, algorithms, pseudo code   I. INTRODUCTION   Machine learning is used to teach machines how to  handle the data more efficiently. 


>> Tokens are: 
[  , Keywords, –, Machine, learning, ,, algorithms, ,, pseudo, code,   , I., INTRODUCTION,   , Machine, learning, teach, machines,  , handle, data, efficiently, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Keywords', 'PROPN'), ('–', 'PUNCT'), ('Machine', 'NOUN'), ('learning', 'NOUN'), (',', 'PUNCT'), ('algorithms', 'NOUN'), (',', 'PUNCT'), ('pseudo', 'NOUN'), ('code', 'NOUN'), ('  ', 'SPACE'), ('I.', 'PROPN'), ('INTRODUCTION', 'NOUN'), ('  ', 'SPACE'), ('Machine', 'NOUN'), ('learning', 'NOUN'), ('teach', 'VERB'), ('machines', 'NOUN'), (' ', 'SPACE'), ('handle', 'VERB'), ('data', 'NOUN'), ('efficiently', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nmod'), ('Keywords', 'nsubj'), ('–', 'punct'), ('Machine', 'compound'), ('learning', 'conj'), (',', 'punct'), ('algorithms', 'conj'), (',', 'punct'), ('pseudo', 'compound'), ('code', 'dep'), ('  ', 'poss'), ('I.', 'compound'), ('INTRODUCTION', 'nsubjpass'), ('  ', 'poss'), ('Machine', 'compound'), ('learning', 'nsubjpass'), ('teach', 'xcomp'), ('machines', 'dobj'), (' ', 'nsubj'), ('handle', 'xcomp'), ('data', 'dobj'), ('efficiently', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[  , Keywords], [Keywords, –], [–, Machine], [Machine, learning], [learning, ,], [,, algorithms], [algorithms, ,], [,, pseudo], [pseudo, code], [code,   ], [  , I.], [I., INTRODUCTION], [INTRODUCTION,   ], [  , Machine], [Machine, learning], [learning, teach], [teach, machines], [machines,  ], [ , handle], [handle, data], [data, efficiently], [efficiently, .]]

>> Trigrams: 
[[  , Keywords, –], [Keywords, –, Machine], [–, Machine, learning], [Machine, learning, ,], [learning, ,, algorithms], [,, algorithms, ,], [algorithms, ,, pseudo], [,, pseudo, code], [pseudo, code,   ], [code,   , I.], [  , I., INTRODUCTION], [I., INTRODUCTION,   ], [INTRODUCTION,   , Machine], [  , Machine, learning], [Machine, learning, teach], [learning, teach, machines], [teach, machines,  ], [machines,  , handle], [ , handle, data], [handle, data, efficiently], [data, efficiently, .]]

>> Noun Phrases are: 
[  Keywords, Machine learning, algorithms,   I. INTRODUCTION,   Machine learning, machines, the data]

>> Named Entities are: 
[]


============================ Sentence 7 =============================

Sometimes after viewing  the data, we cannot interpret the pattern or extract  information from the data. 


>> Tokens are: 
[viewing,  , data, ,, interpret, pattern, extract,  , information, data, .] 

>> PoS Tags are: 
[('viewing', 'VERB'), (' ', 'SPACE'), ('data', 'NOUN'), (',', 'PUNCT'), ('interpret', 'VERB'), ('pattern', 'NOUN'), ('extract', 'VERB'), (' ', 'SPACE'), ('information', 'NOUN'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('viewing', 'pcomp'), (' ', 'dobj'), ('data', 'dobj'), (',', 'punct'), ('interpret', 'ROOT'), ('pattern', 'dobj'), ('extract', 'conj'), (' ', 'dative'), ('information', 'dobj'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[viewing,  ], [ , data], [data, ,], [,, interpret], [interpret, pattern], [pattern, extract], [extract,  ], [ , information], [information, data], [data, .]]

>> Trigrams: 
[[viewing,  , data], [ , data, ,], [data, ,, interpret], [,, interpret, pattern], [interpret, pattern, extract], [pattern, extract,  ], [extract,  , information], [ , information, data], [information, data, .]]

>> Noun Phrases are: 
[the data, we, the pattern, information, the data]

>> Named Entities are: 
[]


============================ Sentence 8 =============================

In that case, we apply machine  learning [1]. 


>> Tokens are: 
[case, ,, apply, machine,  , learning, [, 1, ], .] 

>> PoS Tags are: 
[('case', 'NOUN'), (',', 'PUNCT'), ('apply', 'VERB'), ('machine', 'NOUN'), (' ', 'SPACE'), ('learning', 'VERB'), ('[', 'PUNCT'), ('1', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('case', 'pobj'), (',', 'punct'), ('apply', 'ROOT'), ('machine', 'compound'), (' ', 'dobj'), ('learning', 'advcl'), ('[', 'punct'), ('1', 'dobj'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[case, ,], [,, apply], [apply, machine], [machine,  ], [ , learning], [learning, [], [[, 1], [1, ]], [], .]]

>> Trigrams: 
[[case, ,, apply], [,, apply, machine], [apply, machine,  ], [machine,  , learning], [ , learning, [], [learning, [, 1], [[, 1, ]], [1, ], .]]

>> Noun Phrases are: 
[that case, we]

>> Named Entities are: 
[]


============================ Sentence 9 =============================

With the abundance of datasets available, the  demand for machine learning is in rise. 


>> Tokens are: 
[abundance, datasets, available, ,,  , demand, machine, learning, rise, .] 

>> PoS Tags are: 
[('abundance', 'NOUN'), ('datasets', 'NOUN'), ('available', 'ADJ'), (',', 'PUNCT'), (' ', 'SPACE'), ('demand', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('rise', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('abundance', 'nsubj'), ('datasets', 'pobj'), ('available', 'advcl'), (',', 'punct'), (' ', 'compound'), ('demand', 'nsubj'), ('machine', 'compound'), ('learning', 'pobj'), ('rise', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[abundance, datasets], [datasets, available], [available, ,], [,,  ], [ , demand], [demand, machine], [machine, learning], [learning, rise], [rise, .]]

>> Trigrams: 
[[abundance, datasets, available], [datasets, available, ,], [available, ,,  ], [,,  , demand], [ , demand, machine], [demand, machine, learning], [machine, learning, rise], [learning, rise, .]]

>> Noun Phrases are: 
[the abundance, datasets, the  demand, machine learning, rise]

>> Named Entities are: 
[]


============================ Sentence 10 =============================

Many industries  from medicine to military apply machine learning to extract  relevant information. 


>> Tokens are: 
[industries,  , medicine, military, apply, machine, learning, extract,  , relevant, information, .] 

>> PoS Tags are: 
[('industries', 'NOUN'), (' ', 'SPACE'), ('medicine', 'NOUN'), ('military', 'NOUN'), ('apply', 'VERB'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('extract', 'VERB'), (' ', 'SPACE'), ('relevant', 'ADJ'), ('information', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('industries', 'nsubj'), (' ', 'appos'), ('medicine', 'pobj'), ('military', 'pobj'), ('apply', 'ROOT'), ('machine', 'compound'), ('learning', 'dobj'), ('extract', 'advcl'), (' ', 'dobj'), ('relevant', 'amod'), ('information', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[industries,  ], [ , medicine], [medicine, military], [military, apply], [apply, machine], [machine, learning], [learning, extract], [extract,  ], [ , relevant], [relevant, information], [information, .]]

>> Trigrams: 
[[industries,  , medicine], [ , medicine, military], [medicine, military, apply], [military, apply, machine], [apply, machine, learning], [machine, learning, extract], [learning, extract,  ], [extract,  , relevant], [ , relevant, information], [relevant, information, .]]

>> Noun Phrases are: 
[Many industries, medicine, military, machine learning, relevant information]

>> Named Entities are: 
[]


============================ Sentence 11 =============================

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 12 =============================

The purpose of machine learning is to learn from the  data. 


>> Tokens are: 
[purpose, machine, learning, learn,  , data, .] 

>> PoS Tags are: 
[('purpose', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('learn', 'VERB'), (' ', 'SPACE'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('purpose', 'nsubj'), ('machine', 'compound'), ('learning', 'pobj'), ('learn', 'xcomp'), (' ', 'compound'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[purpose, machine], [machine, learning], [learning, learn], [learn,  ], [ , data], [data, .]]

>> Trigrams: 
[[purpose, machine, learning], [machine, learning, learn], [learning, learn,  ], [learn,  , data], [ , data, .]]

>> Noun Phrases are: 
[The purpose, machine learning, the  data]

>> Named Entities are: 
[]


============================ Sentence 13 =============================

Many studies have been done on how to make  machines learn by themselves [2] [3]. 


>> Tokens are: 
[studies,  , machines, learn, [, 2, ], [, 3, ], .] 

>> PoS Tags are: 
[('studies', 'NOUN'), (' ', 'SPACE'), ('machines', 'NOUN'), ('learn', 'VERB'), ('[', 'PUNCT'), ('2', 'NUM'), (']', 'PUNCT'), ('[', 'PUNCT'), ('3', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('studies', 'nsubjpass'), (' ', 'compound'), ('machines', 'nsubj'), ('learn', 'ccomp'), ('[', 'punct'), ('2', 'ROOT'), (']', 'punct'), ('[', 'punct'), ('3', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[studies,  ], [ , machines], [machines, learn], [learn, [], [[, 2], [2, ]], [], [], [[, 3], [3, ]], [], .]]

>> Trigrams: 
[[studies,  , machines], [ , machines, learn], [machines, learn, [], [learn, [, 2], [[, 2, ]], [2, ], [], [], [, 3], [[, 3, ]], [3, ], .]]

>> Noun Phrases are: 
[Many studies,  machines, themselves]

>> Named Entities are: 
[('2', 'CARDINAL'), ('3', 'CARDINAL')]


============================ Sentence 14 =============================

Many  mathematicians and programmers apply several approaches  to find the solution of this problem. 


>> Tokens are: 
[ , mathematicians, programmers, apply, approaches,  , find, solution, problem, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('mathematicians', 'NOUN'), ('programmers', 'NOUN'), ('apply', 'VERB'), ('approaches', 'NOUN'), (' ', 'SPACE'), ('find', 'VERB'), ('solution', 'NOUN'), ('problem', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nummod'), ('mathematicians', 'nsubj'), ('programmers', 'conj'), ('apply', 'ROOT'), ('approaches', 'dobj'), (' ', 'appos'), ('find', 'advcl'), ('solution', 'dobj'), ('problem', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , mathematicians], [mathematicians, programmers], [programmers, apply], [apply, approaches], [approaches,  ], [ , find], [find, solution], [solution, problem], [problem, .]]

>> Trigrams: 
[[ , mathematicians, programmers], [mathematicians, programmers, apply], [programmers, apply, approaches], [apply, approaches,  ], [approaches,  , find], [ , find, solution], [find, solution, problem], [solution, problem, .]]

>> Noun Phrases are: 
[Many  mathematicians, programmers, several approaches, the solution, this problem]

>> Named Entities are: 
[]


============================ Sentence 15 =============================

Some of them are  demonstrated in Fig. 


>> Tokens are: 
[ , demonstrated, Fig, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('demonstrated', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nsubj'), ('demonstrated', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , demonstrated], [demonstrated, Fig], [Fig, .]]

>> Trigrams: 
[[ , demonstrated, Fig], [demonstrated, Fig, .]]

>> Noun Phrases are: 
[them, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 16 =============================

1. 


>> Tokens are: 
[1, .] 

>> PoS Tags are: 
[('1', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[1, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 17 =============================

  All the techniques of machine learning are explained in  Section 2. 


>> Tokens are: 
[  , techniques, machine, learning, explained,  , Section, 2, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('techniques', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('explained', 'VERB'), (' ', 'SPACE'), ('Section', 'NOUN'), ('2', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'dep'), ('techniques', 'nsubjpass'), ('machine', 'compound'), ('learning', 'pobj'), ('explained', 'ROOT'), (' ', 'pobj'), ('Section', 'npadvmod'), ('2', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[  , techniques], [techniques, machine], [machine, learning], [learning, explained], [explained,  ], [ , Section], [Section, 2], [2, .]]

>> Trigrams: 
[[  , techniques, machine], [techniques, machine, learning], [machine, learning, explained], [learning, explained,  ], [explained,  , Section], [ , Section, 2], [Section, 2, .]]

>> Noun Phrases are: 
[All the techniques, machine learning]

>> Named Entities are: 
[('Section 2', 'LAW')]


============================ Sentence 18 =============================

Section 3 concludes this paper. 


>> Tokens are: 
[Section, 3, concludes, paper, .] 

>> PoS Tags are: 
[('Section', 'NOUN'), ('3', 'NUM'), ('concludes', 'VERB'), ('paper', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Section', 'nsubj'), ('3', 'nummod'), ('concludes', 'ROOT'), ('paper', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Section, 3], [3, concludes], [concludes, paper], [paper, .]]

>> Trigrams: 
[[Section, 3, concludes], [3, concludes, paper], [concludes, paper, .]]

>> Noun Phrases are: 
[Section, this paper]

>> Named Entities are: 
[]


============================ Sentence 19 =============================

  II. 


>> Tokens are: 
[  , II, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('II', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'compound'), ('II', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[  , II], [II, .]]

>> Trigrams: 
[[  , II, .]]

>> Noun Phrases are: 
[  II]

>> Named Entities are: 
[]


============================ Sentence 20 =============================

TYPES OF LEARNING  A. Supervised Learning    


>> Tokens are: 
[TYPES, LEARNING,  , A., Supervised, Learning,   ] 

>> PoS Tags are: 
[('TYPES', 'NOUN'), ('LEARNING', 'NOUN'), (' ', 'SPACE'), ('A.', 'NOUN'), ('Supervised', 'PROPN'), ('Learning', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('TYPES', 'ROOT'), ('LEARNING', 'nmod'), (' ', 'nummod'), ('A.', 'compound'), ('Supervised', 'compound'), ('Learning', 'pobj'), ('  ', 'punct')]

>> Bigrams: 
[[TYPES, LEARNING], [LEARNING,  ], [ , A.], [A., Supervised], [Supervised, Learning], [Learning,   ]]

>> Trigrams: 
[[TYPES, LEARNING,  ], [LEARNING,  , A.], [ , A., Supervised], [A., Supervised, Learning], [Supervised, Learning,   ]]

>> Noun Phrases are: 
[TYPES, LEARNING  A. Supervised Learning]

>> Named Entities are: 
[]


============================ Sentence 21 =============================

The supervised machine learning algorithms are those  algorithms which needs external assistance. 


>> Tokens are: 
[supervised, machine, learning, algorithms,  , algorithms, needs, external, assistance, .] 

>> PoS Tags are: 
[('supervised', 'ADJ'), ('machine', 'NOUN'), ('learning', 'VERB'), ('algorithms', 'NOUN'), (' ', 'SPACE'), ('algorithms', 'NOUN'), ('needs', 'VERB'), ('external', 'ADJ'), ('assistance', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('supervised', 'amod'), ('machine', 'nsubj'), ('learning', 'acl'), ('algorithms', 'dobj'), (' ', 'compound'), ('algorithms', 'attr'), ('needs', 'relcl'), ('external', 'amod'), ('assistance', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[supervised, machine], [machine, learning], [learning, algorithms], [algorithms,  ], [ , algorithms], [algorithms, needs], [needs, external], [external, assistance], [assistance, .]]

>> Trigrams: 
[[supervised, machine, learning], [machine, learning, algorithms], [learning, algorithms,  ], [algorithms,  , algorithms], [ , algorithms, needs], [algorithms, needs, external], [needs, external, assistance], [external, assistance, .]]

>> Noun Phrases are: 
[The supervised machine, algorithms, those  algorithms, external assistance]

>> Named Entities are: 
[]


============================ Sentence 22 =============================

The input  dataset is divided into train and test dataset. 


>> Tokens are: 
[input,  , dataset, divided, train, test, dataset, .] 

>> PoS Tags are: 
[('input', 'NOUN'), (' ', 'SPACE'), ('dataset', 'NOUN'), ('divided', 'VERB'), ('train', 'NOUN'), ('test', 'NOUN'), ('dataset', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('input', 'nmod'), (' ', 'appos'), ('dataset', 'nsubjpass'), ('divided', 'ROOT'), ('train', 'pobj'), ('test', 'conj'), ('dataset', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[input,  ], [ , dataset], [dataset, divided], [divided, train], [train, test], [test, dataset], [dataset, .]]

>> Trigrams: 
[[input,  , dataset], [ , dataset, divided], [dataset, divided, train], [divided, train, test], [train, test, dataset], [test, dataset, .]]

>> Noun Phrases are: 
[The input  dataset, train, test, dataset]

>> Named Entities are: 
[]


============================ Sentence 23 =============================

The train  dataset has output variable which needs to be predicted or  classified. 


>> Tokens are: 
[train,  , dataset, output, variable, needs, predicted,  , classified, .] 

>> PoS Tags are: 
[('train', 'NOUN'), (' ', 'SPACE'), ('dataset', 'NOUN'), ('output', 'NOUN'), ('variable', 'NOUN'), ('needs', 'VERB'), ('predicted', 'VERB'), (' ', 'SPACE'), ('classified', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('train', 'nmod'), (' ', 'appos'), ('dataset', 'nsubj'), ('output', 'compound'), ('variable', 'dobj'), ('needs', 'relcl'), ('predicted', 'xcomp'), (' ', 'nsubj'), ('classified', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[train,  ], [ , dataset], [dataset, output], [output, variable], [variable, needs], [needs, predicted], [predicted,  ], [ , classified], [classified, .]]

>> Trigrams: 
[[train,  , dataset], [ , dataset, output], [dataset, output, variable], [output, variable, needs], [variable, needs, predicted], [needs, predicted,  ], [predicted,  , classified], [ , classified, .]]

>> Noun Phrases are: 
[The train  dataset, output variable]

>> Named Entities are: 
[]


============================ Sentence 24 =============================

All algorithms learn some kind of patterns from  the training dataset and apply them to the test dataset for  prediction or classification [4]. 


>> Tokens are: 
[algorithms, learn, kind, patterns,  , training, dataset, apply, test, dataset,  , prediction, classification, [, 4, ], .] 

>> PoS Tags are: 
[('algorithms', 'NOUN'), ('learn', 'VERB'), ('kind', 'NOUN'), ('patterns', 'NOUN'), (' ', 'SPACE'), ('training', 'NOUN'), ('dataset', 'NOUN'), ('apply', 'VERB'), ('test', 'NOUN'), ('dataset', 'VERB'), (' ', 'SPACE'), ('prediction', 'NOUN'), ('classification', 'NOUN'), ('[', 'PUNCT'), ('4', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('algorithms', 'nsubj'), ('learn', 'ROOT'), ('kind', 'dobj'), ('patterns', 'pobj'), (' ', 'pobj'), ('training', 'compound'), ('dataset', 'dobj'), ('apply', 'conj'), ('test', 'pobj'), ('dataset', 'advcl'), (' ', 'pobj'), ('prediction', 'dobj'), ('classification', 'conj'), ('[', 'punct'), ('4', 'dep'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[algorithms, learn], [learn, kind], [kind, patterns], [patterns,  ], [ , training], [training, dataset], [dataset, apply], [apply, test], [test, dataset], [dataset,  ], [ , prediction], [prediction, classification], [classification, [], [[, 4], [4, ]], [], .]]

>> Trigrams: 
[[algorithms, learn, kind], [learn, kind, patterns], [kind, patterns,  ], [patterns,  , training], [ , training, dataset], [training, dataset, apply], [dataset, apply, test], [apply, test, dataset], [test, dataset,  ], [dataset,  , prediction], [ , prediction, classification], [prediction, classification, [], [classification, [, 4], [[, 4, ]], [4, ], .]]

>> Noun Phrases are: 
[All algorithms, some kind, patterns, the training dataset, them, the test, prediction, classification]

>> Named Entities are: 
[('4', 'CARDINAL')]


============================ Sentence 25 =============================

The workflow of supervised  machine learning algorithms is given in Fig. 


>> Tokens are: 
[workflow, supervised,  , machine, learning, algorithms, given, Fig, .] 

>> PoS Tags are: 
[('workflow', 'NOUN'), ('supervised', 'ADJ'), (' ', 'SPACE'), ('machine', 'NOUN'), ('learning', 'VERB'), ('algorithms', 'NOUN'), ('given', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('workflow', 'nsubjpass'), ('supervised', 'amod'), (' ', 'compound'), ('machine', 'compound'), ('learning', 'amod'), ('algorithms', 'pobj'), ('given', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[workflow, supervised], [supervised,  ], [ , machine], [machine, learning], [learning, algorithms], [algorithms, given], [given, Fig], [Fig, .]]

>> Trigrams: 
[[workflow, supervised,  ], [supervised,  , machine], [ , machine, learning], [machine, learning, algorithms], [learning, algorithms, given], [algorithms, given, Fig], [given, Fig, .]]

>> Noun Phrases are: 
[The workflow, supervised  machine learning algorithms, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 26 =============================

2. 


>> Tokens are: 
[2, .] 

>> PoS Tags are: 
[('2', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('2', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[2, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 27 =============================

Three most  famous supervised machine learning algorithms have been  discussed here. 


>> Tokens are: 
[ , famous, supervised, machine, learning, algorithms,  , discussed, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('famous', 'ADJ'), ('supervised', 'ADJ'), ('machine', 'NOUN'), ('learning', 'VERB'), ('algorithms', 'NOUN'), (' ', 'SPACE'), ('discussed', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nmod'), ('famous', 'amod'), ('supervised', 'amod'), ('machine', 'compound'), ('learning', 'amod'), ('algorithms', 'nsubjpass'), (' ', 'dep'), ('discussed', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[ , famous], [famous, supervised], [supervised, machine], [machine, learning], [learning, algorithms], [algorithms,  ], [ , discussed], [discussed, .]]

>> Trigrams: 
[[ , famous, supervised], [famous, supervised, machine], [supervised, machine, learning], [machine, learning, algorithms], [learning, algorithms,  ], [algorithms,  , discussed], [ , discussed, .]]

>> Noun Phrases are: 
[Three most  famous supervised machine learning algorithms]

>> Named Entities are: 
[('Three', 'CARDINAL')]


============================ Sentence 28 =============================

  (1) Decision Tree: Decision trees are those type of trees which groups attributes by sorting them based on their  values. 


>> Tokens are: 
[  , (, 1, ), Decision, Tree, :, Decision, trees, type, trees, groups, attributes, sorting, based,  , values, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('Decision', 'NOUN'), ('Tree', 'NOUN'), (':', 'PUNCT'), ('Decision', 'NOUN'), ('trees', 'NOUN'), ('type', 'NOUN'), ('trees', 'NOUN'), ('groups', 'NOUN'), ('attributes', 'VERB'), ('sorting', 'VERB'), ('based', 'VERB'), (' ', 'SPACE'), ('values', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nsubj'), ('(', 'punct'), ('1', 'nummod'), (')', 'punct'), ('Decision', 'compound'), ('Tree', 'appos'), (':', 'punct'), ('Decision', 'compound'), ('trees', 'nsubj'), ('type', 'attr'), ('trees', 'pobj'), ('groups', 'nsubj'), ('attributes', 'relcl'), ('sorting', 'pcomp'), ('based', 'prep'), (' ', 'compound'), ('values', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , (], [(, 1], [1, )], [), Decision], [Decision, Tree], [Tree, :], [:, Decision], [Decision, trees], [trees, type], [type, trees], [trees, groups], [groups, attributes], [attributes, sorting], [sorting, based], [based,  ], [ , values], [values, .]]

>> Trigrams: 
[[  , (, 1], [(, 1, )], [1, ), Decision], [), Decision, Tree], [Decision, Tree, :], [Tree, :, Decision], [:, Decision, trees], [Decision, trees, type], [trees, type, trees], [type, trees, groups], [trees, groups, attributes], [groups, attributes, sorting], [attributes, sorting, based], [sorting, based,  ], [based,  , values], [ , values, .]]

>> Noun Phrases are: 
[(1) Decision Tree, Decision trees, those type, trees, groups, them, their  values]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 29 =============================

Decision tree is used mainly for classification  purpose. 


>> Tokens are: 
[Decision, tree, mainly, classification,  , purpose, .] 

>> PoS Tags are: 
[('Decision', 'NOUN'), ('tree', 'NOUN'), ('mainly', 'ADV'), ('classification', 'NOUN'), (' ', 'SPACE'), ('purpose', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Decision', 'compound'), ('tree', 'nsubjpass'), ('mainly', 'advmod'), ('classification', 'compound'), (' ', 'compound'), ('purpose', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Decision, tree], [tree, mainly], [mainly, classification], [classification,  ], [ , purpose], [purpose, .]]

>> Trigrams: 
[[Decision, tree, mainly], [tree, mainly, classification], [mainly, classification,  ], [classification,  , purpose], [ , purpose, .]]

>> Noun Phrases are: 
[Decision tree, classification  purpose]

>> Named Entities are: 
[]


============================ Sentence 30 =============================

Each tree consists of nodes and branches. 


>> Tokens are: 
[tree, consists, nodes, branches, .] 

>> PoS Tags are: 
[('tree', 'NOUN'), ('consists', 'VERB'), ('nodes', 'NOUN'), ('branches', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('tree', 'nsubj'), ('consists', 'ROOT'), ('nodes', 'pobj'), ('branches', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[tree, consists], [consists, nodes], [nodes, branches], [branches, .]]

>> Trigrams: 
[[tree, consists, nodes], [consists, nodes, branches], [nodes, branches, .]]

>> Noun Phrases are: 
[Each tree, nodes, branches]

>> Named Entities are: 
[]


============================ Sentence 31 =============================

Each  nodes represents attributes in a group that is to be classified  and each branch represents a value that the node can take  [4]. 


>> Tokens are: 
[ , nodes, represents, attributes, group, classified,  , branch, represents, value, node,  , [, 4, ], .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('nodes', 'NOUN'), ('represents', 'VERB'), ('attributes', 'NOUN'), ('group', 'NOUN'), ('classified', 'VERB'), (' ', 'SPACE'), ('branch', 'NOUN'), ('represents', 'VERB'), ('value', 'NOUN'), ('node', 'NOUN'), (' ', 'SPACE'), ('[', 'PUNCT'), ('4', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nmod'), ('nodes', 'nsubj'), ('represents', 'ROOT'), ('attributes', 'dobj'), ('group', 'pobj'), ('classified', 'xcomp'), (' ', 'dobj'), ('branch', 'nsubj'), ('represents', 'conj'), ('value', 'dobj'), ('node', 'nsubj'), (' ', 'dobj'), ('[', 'punct'), ('4', 'dobj'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[ , nodes], [nodes, represents], [represents, attributes], [attributes, group], [group, classified], [classified,  ], [ , branch], [branch, represents], [represents, value], [value, node], [node,  ], [ , [], [[, 4], [4, ]], [], .]]

>> Trigrams: 
[[ , nodes, represents], [nodes, represents, attributes], [represents, attributes, group], [attributes, group, classified], [group, classified,  ], [classified,  , branch], [ , branch, represents], [branch, represents, value], [represents, value, node], [value, node,  ], [node,  , [], [ , [, 4], [[, 4, ]], [4, ], .]]

>> Noun Phrases are: 
[Each  nodes, attributes, a group, each branch, a value, the node]

>> Named Entities are: 
[('4', 'CARDINAL')]


============================ Sentence 32 =============================

An example of decision tree is given in Fig. 


>> Tokens are: 
[example, decision, tree, given, Fig, .] 

>> PoS Tags are: 
[('example', 'NOUN'), ('decision', 'NOUN'), ('tree', 'NOUN'), ('given', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'nsubjpass'), ('decision', 'compound'), ('tree', 'pobj'), ('given', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[example, decision], [decision, tree], [tree, given], [given, Fig], [Fig, .]]

>> Trigrams: 
[[example, decision, tree], [decision, tree, given], [tree, given, Fig], [given, Fig, .]]

>> Noun Phrases are: 
[An example, decision tree, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 33 =============================

3. 


>> Tokens are: 
[3, .] 

>> PoS Tags are: 
[('3', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('3', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[3, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('3', 'CARDINAL')]


============================ Sentence 34 =============================

  The pseudo code for Decision tree is described in Fig. 


>> Tokens are: 
[  , pseudo, code, Decision, tree, described, Fig, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('pseudo', 'NOUN'), ('code', 'NOUN'), ('Decision', 'NOUN'), ('tree', 'NOUN'), ('described', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'dep'), ('pseudo', 'compound'), ('code', 'nsubjpass'), ('Decision', 'compound'), ('tree', 'pobj'), ('described', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , pseudo], [pseudo, code], [code, Decision], [Decision, tree], [tree, described], [described, Fig], [Fig, .]]

>> Trigrams: 
[[  , pseudo, code], [pseudo, code, Decision], [code, Decision, tree], [Decision, tree, described], [tree, described, Fig], [described, Fig, .]]

>> Noun Phrases are: 
[The pseudo code, Decision tree, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 35 =============================

4;  where S, A and y are training set, input attribute and target  attribute respectively. 


>> Tokens are: 
[4, ;,  , S, ,, y, training, set, ,, input, attribute, target,  , attribute, respectively, .] 

>> PoS Tags are: 
[('4', 'NUM'), (';', 'PUNCT'), (' ', 'SPACE'), ('S', 'PROPN'), (',', 'PUNCT'), ('y', 'NOUN'), ('training', 'VERB'), ('set', 'NOUN'), (',', 'PUNCT'), ('input', 'NOUN'), ('attribute', 'NOUN'), ('target', 'VERB'), (' ', 'SPACE'), ('attribute', 'NOUN'), ('respectively', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('4', 'nummod'), (';', 'punct'), (' ', 'ROOT'), ('S', 'nsubj'), (',', 'punct'), ('y', 'conj'), ('training', 'relcl'), ('set', 'dobj'), (',', 'punct'), ('input', 'compound'), ('attribute', 'conj'), ('target', 'compound'), (' ', 'compound'), ('attribute', 'conj'), ('respectively', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[4, ;], [;,  ], [ , S], [S, ,], [,, y], [y, training], [training, set], [set, ,], [,, input], [input, attribute], [attribute, target], [target,  ], [ , attribute], [attribute, respectively], [respectively, .]]

>> Trigrams: 
[[4, ;,  ], [;,  , S], [ , S, ,], [S, ,, y], [,, y, training], [y, training, set], [training, set, ,], [set, ,, input], [,, input, attribute], [input, attribute, target], [attribute, target,  ], [target,  , attribute], [ , attribute, respectively], [attribute, respectively, .]]

>> Noun Phrases are: 
[S, A, y, set]

>> Named Entities are: 
[('4', 'CARDINAL')]


============================ Sentence 36 =============================

  Fig. 


>> Tokens are: 
[  , Fig, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Fig', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nmod'), ('Fig', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[  , Fig], [Fig, .]]

>> Trigrams: 
[[  , Fig, .]]

>> Noun Phrases are: 
[  Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 37 =============================

1. 


>> Tokens are: 
[1, .] 

>> PoS Tags are: 
[('1', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[1, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 38 =============================

Types of Learning [2] [3]   


>> Tokens are: 
[Types, Learning, [, 2, ], [, 3, ],  ] 

>> PoS Tags are: 
[('Types', 'NOUN'), ('Learning', 'PROPN'), ('[', 'PUNCT'), ('2', 'NUM'), (']', 'PUNCT'), ('[', 'PUNCT'), ('3', 'NUM'), (']', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Types', 'ROOT'), ('Learning', 'pobj'), ('[', 'punct'), ('2', 'appos'), (']', 'punct'), ('[', 'punct'), ('3', 'appos'), (']', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Types, Learning], [Learning, [], [[, 2], [2, ]], [], [], [[, 3], [3, ]], [],  ]]

>> Trigrams: 
[[Types, Learning, [], [Learning, [, 2], [[, 2, ]], [2, ], [], [], [, 3], [[, 3, ]], [3, ],  ]]

>> Noun Phrases are: 
[Types, Learning]

>> Named Entities are: 
[]


============================ Sentence 39 =============================

Ayon Dey / (IJCSIT) International Journal of Computer Science and Information Technologies, Vol. 


>> Tokens are: 
[Ayon, Dey, /, (, IJCSIT, ), International, Journal, Computer, Science, Information, Technologies, ,, Vol, .] 

>> PoS Tags are: 
[('Ayon', 'PROPN'), ('Dey', 'PROPN'), ('/', 'SYM'), ('(', 'PUNCT'), ('IJCSIT', 'PROPN'), (')', 'PUNCT'), ('International', 'PROPN'), ('Journal', 'PROPN'), ('Computer', 'PROPN'), ('Science', 'PROPN'), ('Information', 'PROPN'), ('Technologies', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Ayon', 'compound'), ('Dey', 'ROOT'), ('/', 'punct'), ('(', 'punct'), ('IJCSIT', 'nmod'), (')', 'punct'), ('International', 'compound'), ('Journal', 'appos'), ('Computer', 'nmod'), ('Science', 'pobj'), ('Information', 'compound'), ('Technologies', 'conj'), (',', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[Ayon, Dey], [Dey, /], [/, (], [(, IJCSIT], [IJCSIT, )], [), International], [International, Journal], [Journal, Computer], [Computer, Science], [Science, Information], [Information, Technologies], [Technologies, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[Ayon, Dey, /], [Dey, /, (], [/, (, IJCSIT], [(, IJCSIT, )], [IJCSIT, ), International], [), International, Journal], [International, Journal, Computer], [Journal, Computer, Science], [Computer, Science, Information], [Science, Information, Technologies], [Information, Technologies, ,], [Technologies, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[Ayon Dey, IJCSIT) International Journal, Computer Science, Information Technologies]

>> Named Entities are: 
[('International Journal of Computer Science and Information Technologies', 'ORG')]


============================ Sentence 40 =============================

7 (3) , 2016, 1174-1179  www.ijcsit.com 1174       Fig. 


>> Tokens are: 
[7, (, 3, ), ,, 2016, ,, 1174, -, 1179,  , www.ijcsit.com, 1174,       , Fig, .] 

>> PoS Tags are: 
[('7', 'NUM'), ('(', 'PUNCT'), ('3', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('2016', 'NUM'), (',', 'PUNCT'), ('1174', 'NUM'), ('-', 'SYM'), ('1179', 'NUM'), (' ', 'SPACE'), ('www.ijcsit.com', 'X'), ('1174', 'NUM'), ('      ', 'SPACE'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('7', 'nummod'), ('(', 'punct'), ('3', 'appos'), (')', 'punct'), (',', 'punct'), ('2016', 'npadvmod'), (',', 'punct'), ('1174', 'appos'), ('-', 'punct'), ('1179', 'prep'), (' ', 'ROOT'), ('www.ijcsit.com', 'npadvmod'), ('1174', 'nummod'), ('      ', 'compound'), ('Fig', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[7, (], [(, 3], [3, )], [), ,], [,, 2016], [2016, ,], [,, 1174], [1174, -], [-, 1179], [1179,  ], [ , www.ijcsit.com], [www.ijcsit.com, 1174], [1174,       ], [      , Fig], [Fig, .]]

>> Trigrams: 
[[7, (, 3], [(, 3, )], [3, ), ,], [), ,, 2016], [,, 2016, ,], [2016, ,, 1174], [,, 1174, -], [1174, -, 1179], [-, 1179,  ], [1179,  , www.ijcsit.com], [ , www.ijcsit.com, 1174], [www.ijcsit.com, 1174,       ], [1174,       , Fig], [      , Fig, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('7', 'CARDINAL'), ('3', 'CARDINAL'), ('2016', 'DATE'), ('1174-1179', 'DATE'), ('Fig', 'PERSON')]


============================ Sentence 41 =============================

2. 


>> Tokens are: 
[2, .] 

>> PoS Tags are: 
[('2', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('2', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[2, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 42 =============================

Workflow of supervised machine learning algorithm 


>> Tokens are: 
[Workflow, supervised, machine, learning, algorithm] 

>> PoS Tags are: 
[('Workflow', 'NOUN'), ('supervised', 'ADJ'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('algorithm', 'NOUN')] 

>> Dependency Tags are: 
[('Workflow', 'ROOT'), ('supervised', 'amod'), ('machine', 'compound'), ('learning', 'pcomp'), ('algorithm', 'punct')]

>> Bigrams: 
[[Workflow, supervised], [supervised, machine], [machine, learning], [learning, algorithm]]

>> Trigrams: 
[[Workflow, supervised, machine], [supervised, machine, learning], [machine, learning, algorithm]]

>> Noun Phrases are: 
[Workflow, supervised machine learning]

>> Named Entities are: 
[]


============================ Sentence 43 =============================

[4]      Fig. 


>> Tokens are: 
[[, 4, ],      , Fig, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('4', 'NUM'), (']', 'PUNCT'), ('  \xa0  ', 'SPACE'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('4', 'nummod'), (']', 'punct'), ('  \xa0  ', 'compound'), ('Fig', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[[, 4], [4, ]], [],      ], [     , Fig], [Fig, .]]

>> Trigrams: 
[[[, 4, ]], [4, ],      ], [],      , Fig], [     , Fig, .]]

>> Noun Phrases are: 
[[4]      Fig]

>> Named Entities are: 
[('4', 'CARDINAL')]


============================ Sentence 44 =============================

3. 


>> Tokens are: 
[3, .] 

>> PoS Tags are: 
[('3', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('3', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[3, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('3', 'CARDINAL')]


============================ Sentence 45 =============================

Decision Tree [5]   (2) 


>> Tokens are: 
[Decision, Tree, [, 5, ],   , (, 2, )] 

>> PoS Tags are: 
[('Decision', 'NOUN'), ('Tree', 'PROPN'), ('[', 'PUNCT'), ('5', 'NUM'), (']', 'PUNCT'), ('  ', 'SPACE'), ('(', 'PUNCT'), ('2', 'X'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Decision', 'compound'), ('Tree', 'ROOT'), ('[', 'punct'), ('5', 'appos'), (']', 'punct'), ('  ', 'appos'), ('(', 'punct'), ('2', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Decision, Tree], [Tree, [], [[, 5], [5, ]], [],   ], [  , (], [(, 2], [2, )]]

>> Trigrams: 
[[Decision, Tree, [], [Tree, [, 5], [[, 5, ]], [5, ],   ], [],   , (], [  , (, 2], [(, 2, )]]

>> Noun Phrases are: 
[Decision Tree]

>> Named Entities are: 
[('5', 'CARDINAL'), ('2', 'CARDINAL')]


============================ Sentence 46 =============================

Naïve Bayes: Naïve Bayes mainly targets the text classification industry. 


>> Tokens are: 
[Naïve, Bayes, :, Naïve, Bayes, mainly, targets, text, classification, industry, .] 

>> PoS Tags are: 
[('Naïve', 'PROPN'), ('Bayes', 'PROPN'), (':', 'PUNCT'), ('Naïve', 'PROPN'), ('Bayes', 'PROPN'), ('mainly', 'ADV'), ('targets', 'VERB'), ('text', 'NOUN'), ('classification', 'NOUN'), ('industry', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Naïve', 'compound'), ('Bayes', 'nsubj'), (':', 'punct'), ('Naïve', 'compound'), ('Bayes', 'nsubj'), ('mainly', 'advmod'), ('targets', 'ROOT'), ('text', 'compound'), ('classification', 'compound'), ('industry', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Naïve, Bayes], [Bayes, :], [:, Naïve], [Naïve, Bayes], [Bayes, mainly], [mainly, targets], [targets, text], [text, classification], [classification, industry], [industry, .]]

>> Trigrams: 
[[Naïve, Bayes, :], [Bayes, :, Naïve], [:, Naïve, Bayes], [Naïve, Bayes, mainly], [Bayes, mainly, targets], [mainly, targets, text], [targets, text, classification], [text, classification, industry], [classification, industry, .]]

>> Noun Phrases are: 
[Naïve Bayes, Naïve Bayes, the text classification industry]

>> Named Entities are: 
[('Bayes', 'ORG')]


============================ Sentence 47 =============================

It is mainly used for clustering and  classification purpose [6]. 


>> Tokens are: 
[mainly, clustering,  , classification, purpose, [, 6, ], .] 

>> PoS Tags are: 
[('mainly', 'ADV'), ('clustering', 'NOUN'), (' ', 'SPACE'), ('classification', 'NOUN'), ('purpose', 'NOUN'), ('[', 'PUNCT'), ('6', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('mainly', 'advmod'), ('clustering', 'pobj'), (' ', 'conj'), ('classification', 'compound'), ('purpose', 'dobj'), ('[', 'punct'), ('6', 'npadvmod'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[mainly, clustering], [clustering,  ], [ , classification], [classification, purpose], [purpose, [], [[, 6], [6, ]], [], .]]

>> Trigrams: 
[[mainly, clustering,  ], [clustering,  , classification], [ , classification, purpose], [classification, purpose, [], [purpose, [, 6], [[, 6, ]], [6, ], .]]

>> Noun Phrases are: 
[It, clustering, classification purpose]

>> Named Entities are: 
[('6', 'CARDINAL')]


============================ Sentence 48 =============================

The underlying architecture of  Naïve Bayes depends on the conditional probability. 


>> Tokens are: 
[underlying, architecture,  , Naïve, Bayes, depends, conditional, probability, .] 

>> PoS Tags are: 
[('underlying', 'VERB'), ('architecture', 'NOUN'), (' ', 'SPACE'), ('Naïve', 'PROPN'), ('Bayes', 'PROPN'), ('depends', 'VERB'), ('conditional', 'ADJ'), ('probability', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('underlying', 'amod'), ('architecture', 'nsubj'), (' ', 'pobj'), ('Naïve', 'compound'), ('Bayes', 'nsubj'), ('depends', 'ROOT'), ('conditional', 'amod'), ('probability', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[underlying, architecture], [architecture,  ], [ , Naïve], [Naïve, Bayes], [Bayes, depends], [depends, conditional], [conditional, probability], [probability, .]]

>> Trigrams: 
[[underlying, architecture,  ], [architecture,  , Naïve], [ , Naïve, Bayes], [Naïve, Bayes, depends], [Bayes, depends, conditional], [depends, conditional, probability], [conditional, probability, .]]

>> Noun Phrases are: 
[The underlying architecture, Naïve Bayes, the conditional probability]

>> Named Entities are: 
[]


============================ Sentence 49 =============================

It  creates trees based on their probability of happening. 


>> Tokens are: 
[ , creates, trees, based, probability, happening, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('creates', 'VERB'), ('trees', 'NOUN'), ('based', 'VERB'), ('probability', 'NOUN'), ('happening', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nsubj'), ('creates', 'ROOT'), ('trees', 'dobj'), ('based', 'acl'), ('probability', 'pobj'), ('happening', 'pcomp'), ('.', 'punct')]

>> Bigrams: 
[[ , creates], [creates, trees], [trees, based], [based, probability], [probability, happening], [happening, .]]

>> Trigrams: 
[[ , creates, trees], [creates, trees, based], [trees, based, probability], [based, probability, happening], [probability, happening, .]]

>> Noun Phrases are: 
[It, trees, their probability]

>> Named Entities are: 
[]


============================ Sentence 50 =============================

These  trees are also known as Bayesian Network. 


>> Tokens are: 
[ , trees, known, Bayesian, Network, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('trees', 'NOUN'), ('known', 'VERB'), ('Bayesian', 'PROPN'), ('Network', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('trees', 'nsubjpass'), ('known', 'ROOT'), ('Bayesian', 'compound'), ('Network', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , trees], [trees, known], [known, Bayesian], [Bayesian, Network], [Network, .]]

>> Trigrams: 
[[ , trees, known], [trees, known, Bayesian], [known, Bayesian, Network], [Bayesian, Network, .]]

>> Noun Phrases are: 
[These  trees, Bayesian Network]

>> Named Entities are: 
[('Bayesian Network', 'ORG')]


============================ Sentence 51 =============================

An example of  the network is given in Fig. 


>> Tokens are: 
[example,  , network, given, Fig, .] 

>> PoS Tags are: 
[('example', 'NOUN'), (' ', 'SPACE'), ('network', 'NOUN'), ('given', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'nsubjpass'), (' ', 'pobj'), ('network', 'nsubjpass'), ('given', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[example,  ], [ , network], [network, given], [given, Fig], [Fig, .]]

>> Trigrams: 
[[example,  , network], [ , network, given], [network, given, Fig], [given, Fig, .]]

>> Noun Phrases are: 
[An example, the network, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 52 =============================

5. 


>> Tokens are: 
[5, .] 

>> PoS Tags are: 
[('5', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('5', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[5, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('5', 'CARDINAL')]


============================ Sentence 53 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[('\xa0', 'SPACE')] 

>> Dependency Tags are: 
[('\xa0', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 54 =============================

The pseudo code is given in  Fig. 


>> Tokens are: 
[pseudo, code, given,  , Fig, .] 

>> PoS Tags are: 
[('pseudo', 'NOUN'), ('code', 'NOUN'), ('given', 'VERB'), (' ', 'SPACE'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('pseudo', 'compound'), ('code', 'nsubjpass'), ('given', 'ROOT'), (' ', 'pobj'), ('Fig', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[pseudo, code], [code, given], [given,  ], [ , Fig], [Fig, .]]

>> Trigrams: 
[[pseudo, code, given], [code, given,  ], [given,  , Fig], [ , Fig, .]]

>> Noun Phrases are: 
[The pseudo code, Fig]

>> Named Entities are: 
[('Fig', 'ORG')]


============================ Sentence 55 =============================

6. 


>> Tokens are: 
[6, .] 

>> PoS Tags are: 
[('6', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('6', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[6, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('6', 'CARDINAL')]


============================ Sentence 56 =============================

     Fig. 


>> Tokens are: 
[     , Fig, .] 

>> PoS Tags are: 
[('  \xa0  ', 'SPACE'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  \xa0  ', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[     , Fig], [Fig, .]]

>> Trigrams: 
[[     , Fig, .]]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[]


============================ Sentence 57 =============================

5. 


>> Tokens are: 
[5, .] 

>> PoS Tags are: 
[('5', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('5', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[5, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('5', 'CARDINAL')]


============================ Sentence 58 =============================

An Example of Bayesian Network [7]      Fig. 


>> Tokens are: 
[Example, Bayesian, Network, [, 7, ],      , Fig, .] 

>> PoS Tags are: 
[('Example', 'PROPN'), ('Bayesian', 'PROPN'), ('Network', 'PROPN'), ('[', 'PUNCT'), ('7', 'NUM'), (']', 'PUNCT'), ('  \xa0  ', 'SPACE'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Example', 'ROOT'), ('Bayesian', 'compound'), ('Network', 'pobj'), ('[', 'punct'), ('7', 'appos'), (']', 'punct'), ('  \xa0  ', 'compound'), ('Fig', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Example, Bayesian], [Bayesian, Network], [Network, [], [[, 7], [7, ]], [],      ], [     , Fig], [Fig, .]]

>> Trigrams: 
[[Example, Bayesian, Network], [Bayesian, Network, [], [Network, [, 7], [[, 7, ]], [7, ],      ], [],      , Fig], [     , Fig, .]]

>> Noun Phrases are: 
[An Example, Bayesian Network,      Fig]

>> Named Entities are: 
[('Example of Bayesian Network', 'ORG'), ('7', 'CARDINAL')]


============================ Sentence 59 =============================

4. 


>> Tokens are: 
[4, .] 

>> PoS Tags are: 
[('4', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('4', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[4, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('4', 'CARDINAL')]


============================ Sentence 60 =============================

Pseudo code for Decision Tree [5]      Fig. 


>> Tokens are: 
[Pseudo, code, Decision, Tree, [, 5, ],      , Fig, .] 

>> PoS Tags are: 
[('Pseudo', 'NOUN'), ('code', 'NOUN'), ('Decision', 'NOUN'), ('Tree', 'PROPN'), ('[', 'PUNCT'), ('5', 'NUM'), (']', 'PUNCT'), ('  \xa0  ', 'SPACE'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Pseudo', 'compound'), ('code', 'ROOT'), ('Decision', 'compound'), ('Tree', 'pobj'), ('[', 'punct'), ('5', 'prep'), (']', 'punct'), ('  \xa0  ', 'compound'), ('Fig', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Pseudo, code], [code, Decision], [Decision, Tree], [Tree, [], [[, 5], [5, ]], [],      ], [     , Fig], [Fig, .]]

>> Trigrams: 
[[Pseudo, code, Decision], [code, Decision, Tree], [Decision, Tree, [], [Tree, [, 5], [[, 5, ]], [5, ],      ], [],      , Fig], [     , Fig, .]]

>> Noun Phrases are: 
[Pseudo code, Decision Tree,      Fig]

>> Named Entities are: 
[('5', 'CARDINAL')]


============================ Sentence 61 =============================

6. 


>> Tokens are: 
[6, .] 

>> PoS Tags are: 
[('6', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('6', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[6, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('6', 'CARDINAL')]


============================ Sentence 62 =============================

Pseudo code for Naïve Bayes [6]   (3) 


>> Tokens are: 
[Pseudo, code, Naïve, Bayes, [, 6, ],   , (, 3, )] 

>> PoS Tags are: 
[('Pseudo', 'NOUN'), ('code', 'NOUN'), ('Naïve', 'PROPN'), ('Bayes', 'PROPN'), ('[', 'PUNCT'), ('6', 'NUM'), (']', 'PUNCT'), ('  ', 'SPACE'), ('(', 'PUNCT'), ('3', 'X'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Pseudo', 'compound'), ('code', 'ROOT'), ('Naïve', 'compound'), ('Bayes', 'pobj'), ('[', 'punct'), ('6', 'nummod'), (']', 'punct'), ('  ', 'parataxis'), ('(', 'punct'), ('3', 'parataxis'), (')', 'punct')]

>> Bigrams: 
[[Pseudo, code], [code, Naïve], [Naïve, Bayes], [Bayes, [], [[, 6], [6, ]], [],   ], [  , (], [(, 3], [3, )]]

>> Trigrams: 
[[Pseudo, code, Naïve], [code, Naïve, Bayes], [Naïve, Bayes, [], [Bayes, [, 6], [[, 6, ]], [6, ],   ], [],   , (], [  , (, 3], [(, 3, )]]

>> Noun Phrases are: 
[Pseudo code, Naïve Bayes]

>> Named Entities are: 
[('6', 'CARDINAL'), ('3', 'CARDINAL')]


============================ Sentence 63 =============================

Support Vector Machine: Another most widely used state-of-the-art machine learning technique is Support  Vector Machine (SVM). 


>> Tokens are: 
[Support, Vector, Machine, :, widely, state, -, -, -, art, machine, learning, technique, Support,  , Vector, Machine, (, SVM, ), .] 

>> PoS Tags are: 
[('Support', 'PROPN'), ('Vector', 'PROPN'), ('Machine', 'PROPN'), (':', 'PUNCT'), ('widely', 'ADV'), ('state', 'NOUN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('art', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('technique', 'NOUN'), ('Support', 'PROPN'), (' ', 'SPACE'), ('Vector', 'PROPN'), ('Machine', 'PROPN'), ('(', 'PUNCT'), ('SVM', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Support', 'compound'), ('Vector', 'compound'), ('Machine', 'nsubj'), (':', 'punct'), ('widely', 'advmod'), ('state', 'nmod'), ('-', 'punct'), ('-', 'punct'), ('-', 'punct'), ('art', 'pobj'), ('machine', 'compound'), ('learning', 'compound'), ('technique', 'nsubj'), ('Support', 'attr'), (' ', 'prep'), ('Vector', 'compound'), ('Machine', 'appos'), ('(', 'punct'), ('SVM', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Support, Vector], [Vector, Machine], [Machine, :], [:, widely], [widely, state], [state, -], [-, -], [-, -], [-, art], [art, machine], [machine, learning], [learning, technique], [technique, Support], [Support,  ], [ , Vector], [Vector, Machine], [Machine, (], [(, SVM], [SVM, )], [), .]]

>> Trigrams: 
[[Support, Vector, Machine], [Vector, Machine, :], [Machine, :, widely], [:, widely, state], [widely, state, -], [state, -, -], [-, -, -], [-, -, art], [-, art, machine], [art, machine, learning], [machine, learning, technique], [learning, technique, Support], [technique, Support,  ], [Support,  , Vector], [ , Vector, Machine], [Vector, Machine, (], [Machine, (, SVM], [(, SVM, )], [SVM, ), .]]

>> Noun Phrases are: 
[Support Vector Machine, the-art, Support, Vector Machine, SVM]

>> Named Entities are: 
[('Support Vector Machine', 'ORG'), ('Support  Vector Machine', 'ORG'), ('SVM', 'ORG')]


============================ Sentence 64 =============================

It is mainly used for classification. 


>> Tokens are: 
[mainly, classification, .] 

>> PoS Tags are: 
[('mainly', 'ADV'), ('classification', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('mainly', 'advmod'), ('classification', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[mainly, classification], [classification, .]]

>> Trigrams: 
[[mainly, classification, .]]

>> Noun Phrases are: 
[It, classification]

>> Named Entities are: 
[]


============================ Sentence 65 =============================

 SVM works on the principle of margin calculation. 


>> Tokens are: 
[ , SVM, works, principle, margin, calculation, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('SVM', 'PROPN'), ('works', 'VERB'), ('principle', 'NOUN'), ('margin', 'NOUN'), ('calculation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('SVM', 'nsubj'), ('works', 'ROOT'), ('principle', 'pobj'), ('margin', 'compound'), ('calculation', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , SVM], [SVM, works], [works, principle], [principle, margin], [margin, calculation], [calculation, .]]

>> Trigrams: 
[[ , SVM, works], [SVM, works, principle], [works, principle, margin], [principle, margin, calculation], [margin, calculation, .]]

>> Noun Phrases are: 
[ SVM, the principle, margin calculation]

>> Named Entities are: 
[('SVM', 'ORG')]


============================ Sentence 66 =============================

It  basically, draw margins between the classes. 


>> Tokens are: 
[ , basically, ,, draw, margins, classes, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('basically', 'ADV'), (',', 'PUNCT'), ('draw', 'VERB'), ('margins', 'NOUN'), ('classes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'appos'), ('basically', 'advmod'), (',', 'punct'), ('draw', 'ROOT'), ('margins', 'dobj'), ('classes', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , basically], [basically, ,], [,, draw], [draw, margins], [margins, classes], [classes, .]]

>> Trigrams: 
[[ , basically, ,], [basically, ,, draw], [,, draw, margins], [draw, margins, classes], [margins, classes, .]]

>> Noun Phrases are: 
[It, margins, the classes]

>> Named Entities are: 
[]


============================ Sentence 67 =============================

The margins  are drawn in such a fashion that the distance between the   Ayon Dey / (IJCSIT) International Journal of Computer Science and Information Technologies, Vol. 


>> Tokens are: 
[margins,  , drawn, fashion, distance,   , Ayon, Dey, /, (, IJCSIT, ), International, Journal, Computer, Science, Information, Technologies, ,, Vol, .] 

>> PoS Tags are: 
[('margins', 'NOUN'), (' ', 'SPACE'), ('drawn', 'VERB'), ('fashion', 'NOUN'), ('distance', 'NOUN'), ('  ', 'SPACE'), ('Ayon', 'PROPN'), ('Dey', 'PROPN'), ('/', 'SYM'), ('(', 'PUNCT'), ('IJCSIT', 'PROPN'), (')', 'PUNCT'), ('International', 'PROPN'), ('Journal', 'PROPN'), ('Computer', 'PROPN'), ('Science', 'PROPN'), ('Information', 'PROPN'), ('Technologies', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('margins', 'nsubj'), (' ', 'nsubjpass'), ('drawn', 'relcl'), ('fashion', 'pobj'), ('distance', 'ROOT'), ('  ', 'compound'), ('Ayon', 'compound'), ('Dey', 'pobj'), ('/', 'punct'), ('(', 'punct'), ('IJCSIT', 'nmod'), (')', 'punct'), ('International', 'compound'), ('Journal', 'appos'), ('Computer', 'nmod'), ('Science', 'pobj'), ('Information', 'compound'), ('Technologies', 'conj'), (',', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[margins,  ], [ , drawn], [drawn, fashion], [fashion, distance], [distance,   ], [  , Ayon], [Ayon, Dey], [Dey, /], [/, (], [(, IJCSIT], [IJCSIT, )], [), International], [International, Journal], [Journal, Computer], [Computer, Science], [Science, Information], [Information, Technologies], [Technologies, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[margins,  , drawn], [ , drawn, fashion], [drawn, fashion, distance], [fashion, distance,   ], [distance,   , Ayon], [  , Ayon, Dey], [Ayon, Dey, /], [Dey, /, (], [/, (, IJCSIT], [(, IJCSIT, )], [IJCSIT, ), International], [), International, Journal], [International, Journal, Computer], [Journal, Computer, Science], [Computer, Science, Information], [Science, Information, Technologies], [Information, Technologies, ,], [Technologies, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[The margins, such a fashion, the   Ayon Dey, (IJCSIT) International Journal, Computer Science, Information Technologies]

>> Named Entities are: 
[('Ayon Dey', 'ORG'), ('International Journal of Computer Science and Information Technologies', 'ORG')]


============================ Sentence 68 =============================

7 (3) , 2016, 1174-1179  www.ijcsit.com 1175    margin and the classes is maximum and hence, minimizing  the classification error. 


>> Tokens are: 
[7, (, 3, ), ,, 2016, ,, 1174, -, 1179,  , www.ijcsit.com, 1175,    , margin, classes, maximum, ,, minimizing,  , classification, error, .] 

>> PoS Tags are: 
[('7', 'NUM'), ('(', 'PUNCT'), ('3', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('2016', 'NUM'), (',', 'PUNCT'), ('1174', 'NUM'), ('-', 'SYM'), ('1179', 'NUM'), (' ', 'SPACE'), ('www.ijcsit.com', 'X'), ('1175', 'NUM'), ('   ', 'SPACE'), ('margin', 'NOUN'), ('classes', 'NOUN'), ('maximum', 'ADJ'), (',', 'PUNCT'), ('minimizing', 'VERB'), (' ', 'SPACE'), ('classification', 'NOUN'), ('error', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('7', 'nummod'), ('(', 'punct'), ('3', 'appos'), (')', 'punct'), (',', 'punct'), ('2016', 'npadvmod'), (',', 'punct'), ('1174', 'appos'), ('-', 'punct'), ('1179', 'prep'), (' ', 'ROOT'), ('www.ijcsit.com', 'npadvmod'), ('1175', 'nummod'), ('   ', 'nummod'), ('margin', 'npadvmod'), ('classes', 'nsubj'), ('maximum', 'acomp'), (',', 'punct'), ('minimizing', 'advcl'), (' ', 'dative'), ('classification', 'compound'), ('error', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[7, (], [(, 3], [3, )], [), ,], [,, 2016], [2016, ,], [,, 1174], [1174, -], [-, 1179], [1179,  ], [ , www.ijcsit.com], [www.ijcsit.com, 1175], [1175,    ], [   , margin], [margin, classes], [classes, maximum], [maximum, ,], [,, minimizing], [minimizing,  ], [ , classification], [classification, error], [error, .]]

>> Trigrams: 
[[7, (, 3], [(, 3, )], [3, ), ,], [), ,, 2016], [,, 2016, ,], [2016, ,, 1174], [,, 1174, -], [1174, -, 1179], [-, 1179,  ], [1179,  , www.ijcsit.com], [ , www.ijcsit.com, 1175], [www.ijcsit.com, 1175,    ], [1175,    , margin], [   , margin, classes], [margin, classes, maximum], [classes, maximum, ,], [maximum, ,, minimizing], [,, minimizing,  ], [minimizing,  , classification], [ , classification, error], [classification, error, .]]

>> Noun Phrases are: 
[the classes, the classification error]

>> Named Entities are: 
[('7', 'CARDINAL'), ('3', 'CARDINAL'), ('2016', 'DATE'), ('1174-1179', 'DATE'), ('1175', 'DATE')]


============================ Sentence 69 =============================

An example of working and pseudo  code of SVM is given in Fig. 


>> Tokens are: 
[example, working, pseudo,  , code, SVM, given, Fig, .] 

>> PoS Tags are: 
[('example', 'NOUN'), ('working', 'NOUN'), ('pseudo', 'VERB'), (' ', 'SPACE'), ('code', 'NOUN'), ('SVM', 'PROPN'), ('given', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'nsubjpass'), ('working', 'pobj'), ('pseudo', 'conj'), (' ', 'dobj'), ('code', 'dobj'), ('SVM', 'pobj'), ('given', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[example, working], [working, pseudo], [pseudo,  ], [ , code], [code, SVM], [SVM, given], [given, Fig], [Fig, .]]

>> Trigrams: 
[[example, working, pseudo], [working, pseudo,  ], [pseudo,  , code], [ , code, SVM], [code, SVM, given], [SVM, given, Fig], [given, Fig, .]]

>> Noun Phrases are: 
[An example, working, code, SVM, Fig]

>> Named Entities are: 
[('SVM', 'ORG'), ('Fig', 'PERSON')]


============================ Sentence 70 =============================

7 and Fig. 8, respectively. 


>> Tokens are: 
[7, Fig, ., 8, ,, respectively, .] 

>> PoS Tags are: 
[('7', 'NUM'), ('Fig', 'PROPN'), ('.', 'PUNCT'), ('8', 'NUM'), (',', 'PUNCT'), ('respectively', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('7', 'ROOT'), ('Fig', 'conj'), ('.', 'punct'), ('8', 'appos'), (',', 'punct'), ('respectively', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[7, Fig], [Fig, .], [., 8], [8, ,], [,, respectively], [respectively, .]]

>> Trigrams: 
[[7, Fig, .], [Fig, ., 8], [., 8, ,], [8, ,, respectively], [,, respectively, .]]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('7', 'CARDINAL'), ('Fig', 'PERSON'), ('8', 'CARDINAL')]


============================ Sentence 71 =============================

     


>> Tokens are: 
[    ] 

>> PoS Tags are: 
[('  \xa0 ', 'SPACE')] 

>> Dependency Tags are: 
[('  \xa0 ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 72 =============================

Fig. 


>> Tokens are: 
[Fig, .] 

>> PoS Tags are: 
[('Fig', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Fig', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Fig, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 73 =============================

7. 


>> Tokens are: 
[7, .] 

>> PoS Tags are: 
[('7', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('7', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[7, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('7', 'CARDINAL')]


============================ Sentence 74 =============================

Working of Support Vector Machine [8]      


>> Tokens are: 
[Working, Support, Vector, Machine, [, 8, ],     ] 

>> PoS Tags are: 
[('Working', 'VERB'), ('Support', 'PROPN'), ('Vector', 'PROPN'), ('Machine', 'PROPN'), ('[', 'PUNCT'), ('8', 'NUM'), (']', 'PUNCT'), ('  \xa0 ', 'SPACE')] 

>> Dependency Tags are: 
[('Working', 'ROOT'), ('Support', 'compound'), ('Vector', 'compound'), ('Machine', 'pobj'), ('[', 'punct'), ('8', 'nummod'), (']', 'punct'), ('  \xa0 ', 'conj')]

>> Bigrams: 
[[Working, Support], [Support, Vector], [Vector, Machine], [Machine, [], [[, 8], [8, ]], [],     ]]

>> Trigrams: 
[[Working, Support, Vector], [Support, Vector, Machine], [Vector, Machine, [], [Machine, [, 8], [[, 8, ]], [8, ],     ]]

>> Noun Phrases are: 
[Support Vector Machine]

>> Named Entities are: 
[('Working of Support Vector Machine', 'ORG')]


============================ Sentence 75 =============================

Fig. 8. 


>> Tokens are: 
[Fig, ., 8, .] 

>> PoS Tags are: 
[('Fig', 'NOUN'), ('.', 'PUNCT'), ('8', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Fig', 'ROOT'), ('.', 'punct'), ('8', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Fig, .], [., 8], [8, .]]

>> Trigrams: 
[[Fig, ., 8], [., 8, .]]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON'), ('8', 'CARDINAL')]


============================ Sentence 76 =============================

Pseudo code for Support Vector machine [9]   B. Unsupervised Learning    


>> Tokens are: 
[Pseudo, code, Support, Vector, machine, [, 9, ],   , B., Unsupervised, Learning,   ] 

>> PoS Tags are: 
[('Pseudo', 'NOUN'), ('code', 'NOUN'), ('Support', 'PROPN'), ('Vector', 'PROPN'), ('machine', 'NOUN'), ('[', 'PUNCT'), ('9', 'NUM'), (']', 'PUNCT'), ('  ', 'SPACE'), ('B.', 'PROPN'), ('Unsupervised', 'PROPN'), ('Learning', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Pseudo', 'compound'), ('code', 'ROOT'), ('Support', 'compound'), ('Vector', 'compound'), ('machine', 'pobj'), ('[', 'punct'), ('9', 'appos'), (']', 'punct'), ('  ', 'compound'), ('B.', 'compound'), ('Unsupervised', 'compound'), ('Learning', 'appos'), ('  ', 'punct')]

>> Bigrams: 
[[Pseudo, code], [code, Support], [Support, Vector], [Vector, machine], [machine, [], [[, 9], [9, ]], [],   ], [  , B.], [B., Unsupervised], [Unsupervised, Learning], [Learning,   ]]

>> Trigrams: 
[[Pseudo, code, Support], [code, Support, Vector], [Support, Vector, machine], [Vector, machine, [], [machine, [, 9], [[, 9, ]], [9, ],   ], [],   , B.], [  , B., Unsupervised], [B., Unsupervised, Learning], [Unsupervised, Learning,   ]]

>> Noun Phrases are: 
[Pseudo code, Support Vector machine,   B. Unsupervised Learning]

>> Named Entities are: 
[('Support Vector', 'ORG'), ('9', 'CARDINAL')]


============================ Sentence 77 =============================

The unsupervised learning algorithms learns few features  from the data. 


>> Tokens are: 
[unsupervised, learning, algorithms, learns, features,  , data, .] 

>> PoS Tags are: 
[('unsupervised', 'ADJ'), ('learning', 'VERB'), ('algorithms', 'NOUN'), ('learns', 'VERB'), ('features', 'NOUN'), (' ', 'SPACE'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('unsupervised', 'amod'), ('learning', 'amod'), ('algorithms', 'nsubj'), ('learns', 'ROOT'), ('features', 'compound'), (' ', 'dobj'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[unsupervised, learning], [learning, algorithms], [algorithms, learns], [learns, features], [features,  ], [ , data], [data, .]]

>> Trigrams: 
[[unsupervised, learning, algorithms], [learning, algorithms, learns], [algorithms, learns, features], [learns, features,  ], [features,  , data], [ , data, .]]

>> Noun Phrases are: 
[The unsupervised learning algorithms, the data]

>> Named Entities are: 
[]


============================ Sentence 78 =============================

When new data is introduced, it uses the  previously learned features to recognize the class of the  data. 


>> Tokens are: 
[new, data, introduced, ,, uses,  , previously, learned, features, recognize, class,  , data, .] 

>> PoS Tags are: 
[('new', 'ADJ'), ('data', 'NOUN'), ('introduced', 'VERB'), (',', 'PUNCT'), ('uses', 'VERB'), (' ', 'SPACE'), ('previously', 'ADV'), ('learned', 'VERB'), ('features', 'NOUN'), ('recognize', 'VERB'), ('class', 'NOUN'), (' ', 'SPACE'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('new', 'amod'), ('data', 'nsubjpass'), ('introduced', 'advcl'), (',', 'punct'), ('uses', 'ROOT'), (' ', 'dobj'), ('previously', 'advmod'), ('learned', 'amod'), ('features', 'dobj'), ('recognize', 'acl'), ('class', 'dobj'), (' ', 'compound'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[new, data], [data, introduced], [introduced, ,], [,, uses], [uses,  ], [ , previously], [previously, learned], [learned, features], [features, recognize], [recognize, class], [class,  ], [ , data], [data, .]]

>> Trigrams: 
[[new, data, introduced], [data, introduced, ,], [introduced, ,, uses], [,, uses,  ], [uses,  , previously], [ , previously, learned], [previously, learned, features], [learned, features, recognize], [features, recognize, class], [recognize, class,  ], [class,  , data], [ , data, .]]

>> Noun Phrases are: 
[new data, it, previously learned features, the class, the  data]

>> Named Entities are: 
[]


============================ Sentence 79 =============================

It is mainly used for clustering and feature reduction.   


>> Tokens are: 
[mainly, clustering, feature, reduction, .,  ] 

>> PoS Tags are: 
[('mainly', 'ADV'), ('clustering', 'NOUN'), ('feature', 'NOUN'), ('reduction', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('mainly', 'advmod'), ('clustering', 'pobj'), ('feature', 'compound'), ('reduction', 'conj'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[mainly, clustering], [clustering, feature], [feature, reduction], [reduction, .], [.,  ]]

>> Trigrams: 
[[mainly, clustering, feature], [clustering, feature, reduction], [feature, reduction, .], [reduction, .,  ]]

>> Noun Phrases are: 
[It, clustering, feature reduction]

>> Named Entities are: 
[]


============================ Sentence 80 =============================

An example of workflow of unsupervised learning is given  in Fig. 


>> Tokens are: 
[example, workflow, unsupervised, learning, given,  , Fig, .] 

>> PoS Tags are: 
[('example', 'NOUN'), ('workflow', 'NOUN'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('given', 'VERB'), (' ', 'SPACE'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'nsubjpass'), ('workflow', 'pobj'), ('unsupervised', 'amod'), ('learning', 'pobj'), ('given', 'ROOT'), (' ', 'dobj'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[example, workflow], [workflow, unsupervised], [unsupervised, learning], [learning, given], [given,  ], [ , Fig], [Fig, .]]

>> Trigrams: 
[[example, workflow, unsupervised], [workflow, unsupervised, learning], [unsupervised, learning, given], [learning, given,  ], [given,  , Fig], [ , Fig, .]]

>> Noun Phrases are: 
[An example, workflow, unsupervised learning, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 81 =============================

9. 


>> Tokens are: 
[9, .] 

>> PoS Tags are: 
[('9', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('9', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[9, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('9', 'CARDINAL')]


============================ Sentence 82 =============================

     


>> Tokens are: 
[    ] 

>> PoS Tags are: 
[('  \xa0 ', 'SPACE')] 

>> Dependency Tags are: 
[('  \xa0 ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 83 =============================

Fig. 


>> Tokens are: 
[Fig, .] 

>> PoS Tags are: 
[('Fig', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Fig', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Fig, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 84 =============================

9. 


>> Tokens are: 
[9, .] 

>> PoS Tags are: 
[('9', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('9', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[9, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('9', 'CARDINAL')]


============================ Sentence 85 =============================

Example of Unsupervised Learning [10]    


>> Tokens are: 
[Example, Unsupervised, Learning, [, 10, ],   ] 

>> PoS Tags are: 
[('Example', 'NOUN'), ('Unsupervised', 'PROPN'), ('Learning', 'PROPN'), ('[', 'PUNCT'), ('10', 'NUM'), (']', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Example', 'nsubj'), ('Unsupervised', 'compound'), ('Learning', 'pobj'), ('[', 'punct'), ('10', 'appos'), (']', 'punct'), ('  ', 'ROOT')]

>> Bigrams: 
[[Example, Unsupervised], [Unsupervised, Learning], [Learning, [], [[, 10], [10, ]], [],   ]]

>> Trigrams: 
[[Example, Unsupervised, Learning], [Unsupervised, Learning, [], [Learning, [, 10], [[, 10, ]], [10, ],   ]]

>> Noun Phrases are: 
[Example, Unsupervised Learning]

>> Named Entities are: 
[('10', 'CARDINAL')]


============================ Sentence 86 =============================

The two main algorithms for clustering and  dimensionality reduction techniques are discussed below. 


>> Tokens are: 
[main, algorithms, clustering,  , dimensionality, reduction, techniques, discussed, .] 

>> PoS Tags are: 
[('main', 'ADJ'), ('algorithms', 'NOUN'), ('clustering', 'NOUN'), (' ', 'SPACE'), ('dimensionality', 'NOUN'), ('reduction', 'NOUN'), ('techniques', 'NOUN'), ('discussed', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('main', 'amod'), ('algorithms', 'nsubjpass'), ('clustering', 'pobj'), (' ', 'conj'), ('dimensionality', 'compound'), ('reduction', 'compound'), ('techniques', 'nsubjpass'), ('discussed', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[main, algorithms], [algorithms, clustering], [clustering,  ], [ , dimensionality], [dimensionality, reduction], [reduction, techniques], [techniques, discussed], [discussed, .]]

>> Trigrams: 
[[main, algorithms, clustering], [algorithms, clustering,  ], [clustering,  , dimensionality], [ , dimensionality, reduction], [dimensionality, reduction, techniques], [reduction, techniques, discussed], [techniques, discussed, .]]

>> Noun Phrases are: 
[The two main algorithms, clustering, dimensionality reduction techniques]

>> Named Entities are: 
[('two', 'CARDINAL')]


============================ Sentence 87 =============================

  (1) K-Means Clustering: 


>> Tokens are: 
[  , (, 1, ), K, -, Means, Clustering, :] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('(', 'PUNCT'), ('1', 'X'), (')', 'PUNCT'), ('K', 'PROPN'), ('-', 'PUNCT'), ('Means', 'PROPN'), ('Clustering', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'dep'), ('(', 'punct'), ('1', 'nummod'), (')', 'punct'), ('K', 'compound'), ('-', 'punct'), ('Means', 'compound'), ('Clustering', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[  , (], [(, 1], [1, )], [), K], [K, -], [-, Means], [Means, Clustering], [Clustering, :]]

>> Trigrams: 
[[  , (, 1], [(, 1, )], [1, ), K], [), K, -], [K, -, Means], [-, Means, Clustering], [Means, Clustering, :]]

>> Noun Phrases are: 
[  (1) K-Means Clustering]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 88 =============================

Clustering or grouping is a type of unsupervised learning technique that when initiates,  creates groups automatically. 


>> Tokens are: 
[Clustering, grouping, type, unsupervised, learning, technique, initiates, ,,  , creates, groups, automatically, .] 

>> PoS Tags are: 
[('Clustering', 'NOUN'), ('grouping', 'NOUN'), ('type', 'NOUN'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('technique', 'NOUN'), ('initiates', 'VERB'), (',', 'PUNCT'), (' ', 'SPACE'), ('creates', 'VERB'), ('groups', 'NOUN'), ('automatically', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Clustering', 'nsubj'), ('grouping', 'conj'), ('type', 'attr'), ('unsupervised', 'amod'), ('learning', 'compound'), ('technique', 'pobj'), ('initiates', 'advcl'), (',', 'punct'), (' ', 'nsubj'), ('creates', 'relcl'), ('groups', 'dobj'), ('automatically', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[Clustering, grouping], [grouping, type], [type, unsupervised], [unsupervised, learning], [learning, technique], [technique, initiates], [initiates, ,], [,,  ], [ , creates], [creates, groups], [groups, automatically], [automatically, .]]

>> Trigrams: 
[[Clustering, grouping, type], [grouping, type, unsupervised], [type, unsupervised, learning], [unsupervised, learning, technique], [learning, technique, initiates], [technique, initiates, ,], [initiates, ,,  ], [,,  , creates], [ , creates, groups], [creates, groups, automatically], [groups, automatically, .]]

>> Noun Phrases are: 
[Clustering, grouping, a type, unsupervised learning technique, groups]

>> Named Entities are: 
[]


============================ Sentence 89 =============================

The items which possesses  similar characteristics are put in the same cluster. 


>> Tokens are: 
[items, possesses,  , similar, characteristics, cluster, .] 

>> PoS Tags are: 
[('items', 'NOUN'), ('possesses', 'VERB'), (' ', 'SPACE'), ('similar', 'ADJ'), ('characteristics', 'NOUN'), ('cluster', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('items', 'nsubjpass'), ('possesses', 'relcl'), (' ', 'nmod'), ('similar', 'amod'), ('characteristics', 'dobj'), ('cluster', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[items, possesses], [possesses,  ], [ , similar], [similar, characteristics], [characteristics, cluster], [cluster, .]]

>> Trigrams: 
[[items, possesses,  ], [possesses,  , similar], [ , similar, characteristics], [similar, characteristics, cluster], [characteristics, cluster, .]]

>> Noun Phrases are: 
[The items,  similar characteristics, the same cluster]

>> Named Entities are: 
[]


============================ Sentence 90 =============================

This  algorithm is called k-means because it creates k distinct  clusters. 


>> Tokens are: 
[ , algorithm, called, k, -, means, creates, k, distinct,  , clusters, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('algorithm', 'NOUN'), ('called', 'VERB'), ('k', 'NOUN'), ('-', 'PUNCT'), ('means', 'NOUN'), ('creates', 'VERB'), ('k', 'DET'), ('distinct', 'ADJ'), (' ', 'SPACE'), ('clusters', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('algorithm', 'nsubjpass'), ('called', 'ROOT'), ('k', 'compound'), ('-', 'punct'), ('means', 'oprd'), ('creates', 'advcl'), ('k', 'det'), ('distinct', 'amod'), (' ', 'compound'), ('clusters', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[ , algorithm], [algorithm, called], [called, k], [k, -], [-, means], [means, creates], [creates, k], [k, distinct], [distinct,  ], [ , clusters], [clusters, .]]

>> Trigrams: 
[[ , algorithm, called], [algorithm, called, k], [called, k, -], [k, -, means], [-, means, creates], [means, creates, k], [creates, k, distinct], [k, distinct,  ], [distinct,  , clusters], [ , clusters, .]]

>> Noun Phrases are: 
[This  algorithm, k-means, it, k distinct  clusters]

>> Named Entities are: 
[]


============================ Sentence 91 =============================

The mean of the values in a particular cluster is the  center of that cluster [9]. 


>> Tokens are: 
[mean, values, particular, cluster,  , center, cluster, [, 9, ], .] 

>> PoS Tags are: 
[('mean', 'NOUN'), ('values', 'NOUN'), ('particular', 'ADJ'), ('cluster', 'NOUN'), (' ', 'SPACE'), ('center', 'NOUN'), ('cluster', 'NOUN'), ('[', 'PUNCT'), ('9', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('mean', 'nsubj'), ('values', 'pobj'), ('particular', 'amod'), ('cluster', 'pobj'), (' ', 'compound'), ('center', 'attr'), ('cluster', 'pobj'), ('[', 'punct'), ('9', 'dep'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[mean, values], [values, particular], [particular, cluster], [cluster,  ], [ , center], [center, cluster], [cluster, [], [[, 9], [9, ]], [], .]]

>> Trigrams: 
[[mean, values, particular], [values, particular, cluster], [particular, cluster,  ], [cluster,  , center], [ , center, cluster], [center, cluster, [], [cluster, [, 9], [[, 9, ]], [9, ], .]]

>> Noun Phrases are: 
[The mean, the values, a particular cluster, the  center, that cluster]

>> Named Entities are: 
[('9', 'CARDINAL')]


============================ Sentence 92 =============================

A clustered data is represented in  Fig. 


>> Tokens are: 
[clustered, data, represented,  , Fig, .] 

>> PoS Tags are: 
[('clustered', 'ADJ'), ('data', 'NOUN'), ('represented', 'VERB'), (' ', 'SPACE'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('clustered', 'amod'), ('data', 'nsubjpass'), ('represented', 'ROOT'), (' ', 'pobj'), ('Fig', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[clustered, data], [data, represented], [represented,  ], [ , Fig], [Fig, .]]

>> Trigrams: 
[[clustered, data, represented], [data, represented,  ], [represented,  , Fig], [ , Fig, .]]

>> Noun Phrases are: 
[A clustered data]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 93 =============================

10. 


>> Tokens are: 
[10, .] 

>> PoS Tags are: 
[('10', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('10', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[10, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('10', 'CARDINAL')]


============================ Sentence 94 =============================

The algorithm for k-means is given in Fig. 


>> Tokens are: 
[algorithm, k, -, means, given, Fig, .] 

>> PoS Tags are: 
[('algorithm', 'NOUN'), ('k', 'NOUN'), ('-', 'PUNCT'), ('means', 'NOUN'), ('given', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('algorithm', 'nsubjpass'), ('k', 'det'), ('-', 'punct'), ('means', 'pobj'), ('given', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[algorithm, k], [k, -], [-, means], [means, given], [given, Fig], [Fig, .]]

>> Trigrams: 
[[algorithm, k, -], [k, -, means], [-, means, given], [means, given, Fig], [given, Fig, .]]

>> Noun Phrases are: 
[The algorithm, k-means, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 95 =============================

11. 


>> Tokens are: 
[11, .] 

>> PoS Tags are: 
[('11', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('11', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[11, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('11', 'CARDINAL')]


============================ Sentence 96 =============================

     


>> Tokens are: 
[    ] 

>> PoS Tags are: 
[('  \xa0 ', 'SPACE')] 

>> Dependency Tags are: 
[('  \xa0 ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 97 =============================

Fig. 


>> Tokens are: 
[Fig, .] 

>> PoS Tags are: 
[('Fig', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Fig', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Fig, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 98 =============================

10. 


>> Tokens are: 
[10, .] 

>> PoS Tags are: 
[('10', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('10', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[10, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('10', 'CARDINAL')]


============================ Sentence 99 =============================

K-Means Clustering [12]        Fig. 


>> Tokens are: 
[K, -, Means, Clustering, [, 12, ],        , Fig, .] 

>> PoS Tags are: 
[('K', 'PROPN'), ('-', 'PUNCT'), ('Means', 'PROPN'), ('Clustering', 'PROPN'), ('[', 'PUNCT'), ('12', 'NUM'), (']', 'PUNCT'), ('  \xa0  \xa0 ', 'SPACE'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('K', 'compound'), ('-', 'punct'), ('Means', 'compound'), ('Clustering', 'nsubj'), ('[', 'punct'), ('12', 'appos'), (']', 'punct'), ('  \xa0  \xa0 ', 'ROOT'), ('Fig', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[K, -], [-, Means], [Means, Clustering], [Clustering, [], [[, 12], [12, ]], [],        ], [       , Fig], [Fig, .]]

>> Trigrams: 
[[K, -, Means], [-, Means, Clustering], [Means, Clustering, [], [Clustering, [, 12], [[, 12, ]], [12, ],        ], [],        , Fig], [       , Fig, .]]

>> Noun Phrases are: 
[K-Means Clustering, Fig]

>> Named Entities are: 
[('K-Means Clustering', 'ORG'), ('12', 'CARDINAL')]


============================ Sentence 100 =============================

11. 


>> Tokens are: 
[11, .] 

>> PoS Tags are: 
[('11', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('11', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[11, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('11', 'CARDINAL')]


============================ Sentence 101 =============================

Pseudo code for k-means clustering [13]   (2) Principal Component Analysis 


>> Tokens are: 
[Pseudo, code, k, -, means, clustering, [, 13, ],   , (, 2, ), Principal, Component, Analysis] 

>> PoS Tags are: 
[('Pseudo', 'NOUN'), ('code', 'NOUN'), ('k', 'NOUN'), ('-', 'PUNCT'), ('means', 'NOUN'), ('clustering', 'NOUN'), ('[', 'PUNCT'), ('13', 'NUM'), (']', 'PUNCT'), ('  ', 'SPACE'), ('(', 'PUNCT'), ('2', 'X'), (')', 'PUNCT'), ('Principal', 'PROPN'), ('Component', 'NOUN'), ('Analysis', 'NOUN')] 

>> Dependency Tags are: 
[('Pseudo', 'compound'), ('code', 'nsubj'), ('k', 'det'), ('-', 'punct'), ('means', 'pobj'), ('clustering', 'ROOT'), ('[', 'punct'), ('13', 'appos'), (']', 'punct'), ('  ', 'dobj'), ('(', 'punct'), ('2', 'appos'), (')', 'punct'), ('Principal', 'compound'), ('Component', 'compound'), ('Analysis', 'punct')]

>> Bigrams: 
[[Pseudo, code], [code, k], [k, -], [-, means], [means, clustering], [clustering, [], [[, 13], [13, ]], [],   ], [  , (], [(, 2], [2, )], [), Principal], [Principal, Component], [Component, Analysis]]

>> Trigrams: 
[[Pseudo, code, k], [code, k, -], [k, -, means], [-, means, clustering], [means, clustering, [], [clustering, [, 13], [[, 13, ]], [13, ],   ], [],   , (], [  , (, 2], [(, 2, )], [2, ), Principal], [), Principal, Component], [Principal, Component, Analysis]]

>> Noun Phrases are: 
[Pseudo code, k-means]

>> Named Entities are: 
[('13', 'CARDINAL'), ('2', 'CARDINAL')]


============================ Sentence 102 =============================

In Principal Component Analysis or PCA, the dimension of  the data is reduced to make the computations faster and  easier. 


>> Tokens are: 
[Principal, Component, Analysis, PCA, ,, dimension,  , data, reduced, computations, faster,  , easier, .] 

>> PoS Tags are: 
[('Principal', 'PROPN'), ('Component', 'PROPN'), ('Analysis', 'PROPN'), ('PCA', 'PROPN'), (',', 'PUNCT'), ('dimension', 'NOUN'), (' ', 'SPACE'), ('data', 'NOUN'), ('reduced', 'VERB'), ('computations', 'NOUN'), ('faster', 'ADV'), (' ', 'SPACE'), ('easier', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Principal', 'compound'), ('Component', 'compound'), ('Analysis', 'pobj'), ('PCA', 'conj'), (',', 'punct'), ('dimension', 'nsubjpass'), (' ', 'pobj'), ('data', 'nsubjpass'), ('reduced', 'ROOT'), ('computations', 'nsubj'), ('faster', 'ccomp'), (' ', 'nsubj'), ('easier', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Principal, Component], [Component, Analysis], [Analysis, PCA], [PCA, ,], [,, dimension], [dimension,  ], [ , data], [data, reduced], [reduced, computations], [computations, faster], [faster,  ], [ , easier], [easier, .]]

>> Trigrams: 
[[Principal, Component, Analysis], [Component, Analysis, PCA], [Analysis, PCA, ,], [PCA, ,, dimension], [,, dimension,  ], [dimension,  , data], [ , data, reduced], [data, reduced, computations], [reduced, computations, faster], [computations, faster,  ], [faster,  , easier], [ , easier, .]]

>> Noun Phrases are: 
[Principal Component Analysis, PCA, the dimension, the data, the computations]

>> Named Entities are: 
[('PCA', 'ORG')]


============================ Sentence 103 =============================

To understand how PCA works, let’s take an  example of 2D data. 


>> Tokens are: 
[understand, PCA, works, ,, let,  , example, 2D, data, .] 

>> PoS Tags are: 
[('understand', 'VERB'), ('PCA', 'PROPN'), ('works', 'VERB'), (',', 'PUNCT'), ('let', 'VERB'), (' ', 'SPACE'), ('example', 'NOUN'), ('2D', 'NOUN'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('understand', 'advcl'), ('PCA', 'nsubj'), ('works', 'ccomp'), (',', 'punct'), ('let', 'ROOT'), (' ', 'amod'), ('example', 'dobj'), ('2D', 'compound'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[understand, PCA], [PCA, works], [works, ,], [,, let], [let,  ], [ , example], [example, 2D], [2D, data], [data, .]]

>> Trigrams: 
[[understand, PCA, works], [PCA, works, ,], [works, ,, let], [,, let,  ], [let,  , example], [ , example, 2D], [example, 2D, data], [2D, data, .]]

>> Noun Phrases are: 
[PCA, ’s, an  example, 2D data]

>> Named Entities are: 
[('PCA', 'ORG'), ('’s', 'GPE'), ('2D', 'CARDINAL')]


============================ Sentence 104 =============================

When the data is being plot in a graph,  it will take up two axes. 


>> Tokens are: 
[data, plot, graph, ,,  , axes, .] 

>> PoS Tags are: 
[('data', 'NOUN'), ('plot', 'NOUN'), ('graph', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('axes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('data', 'nsubj'), ('plot', 'attr'), ('graph', 'pobj'), (',', 'punct'), (' ', 'dep'), ('axes', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[data, plot], [plot, graph], [graph, ,], [,,  ], [ , axes], [axes, .]]

>> Trigrams: 
[[data, plot, graph], [plot, graph, ,], [graph, ,,  ], [,,  , axes], [ , axes, .]]

>> Noun Phrases are: 
[the data, plot, a graph, it, two axes]

>> Named Entities are: 
[('two', 'CARDINAL')]


============================ Sentence 105 =============================

PCA is applied on the data, the  data then will be 1D. 


>> Tokens are: 
[PCA, applied, data, ,,  , data, 1D.] 

>> PoS Tags are: 
[('PCA', 'PROPN'), ('applied', 'VERB'), ('data', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('data', 'NOUN'), ('1D.', 'NUM')] 

>> Dependency Tags are: 
[('PCA', 'nsubjpass'), ('applied', 'ccomp'), ('data', 'pobj'), (',', 'punct'), (' ', 'compound'), ('data', 'nsubj'), ('1D.', 'attr')]

>> Bigrams: 
[[PCA, applied], [applied, data], [data, ,], [,,  ], [ , data], [data, 1D.]]

>> Trigrams: 
[[PCA, applied, data], [applied, data, ,], [data, ,,  ], [,,  , data], [ , data, 1D.]]

>> Noun Phrases are: 
[PCA, the data, the  data]

>> Named Entities are: 
[('PCA', 'ORG')]


============================ Sentence 106 =============================

This is explained in Fig. 


>> Tokens are: 
[explained, Fig, .] 

>> PoS Tags are: 
[('explained', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('explained', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[explained, Fig], [Fig, .]]

>> Trigrams: 
[[explained, Fig, .]]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 107 =============================

12. 


>> Tokens are: 
[12, .] 

>> PoS Tags are: 
[('12', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('12', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[12, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('12', 'CARDINAL')]


============================ Sentence 108 =============================

The  pseudo code for PCA is discussed in Fig. 


>> Tokens are: 
[ , pseudo, code, PCA, discussed, Fig, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('pseudo', 'NOUN'), ('code', 'NOUN'), ('PCA', 'PROPN'), ('discussed', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('pseudo', 'compound'), ('code', 'nsubjpass'), ('PCA', 'pobj'), ('discussed', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , pseudo], [pseudo, code], [code, PCA], [PCA, discussed], [discussed, Fig], [Fig, .]]

>> Trigrams: 
[[ , pseudo, code], [pseudo, code, PCA], [code, PCA, discussed], [PCA, discussed, Fig], [discussed, Fig, .]]

>> Noun Phrases are: 
[The  pseudo code, PCA, Fig]

>> Named Entities are: 
[('PCA', 'ORG'), ('Fig', 'PERSON')]


============================ Sentence 109 =============================

13. 


>> Tokens are: 
[13, .] 

>> PoS Tags are: 
[('13', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('13', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[13, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('13', 'CARDINAL')]


============================ Sentence 110 =============================

       


>> Tokens are: 
[      ] 

>> PoS Tags are: 
[('    \xa0 ', 'SPACE')] 

>> Dependency Tags are: 
[('    \xa0 ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 111 =============================

Fig. 


>> Tokens are: 
[Fig, .] 

>> PoS Tags are: 
[('Fig', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Fig', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Fig, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'ORG')]


============================ Sentence 112 =============================

12. 


>> Tokens are: 
[12, .] 

>> PoS Tags are: 
[('12', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('12', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[12, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('12', 'CARDINAL')]


============================ Sentence 113 =============================

Visualization of data before and after applying PCA [11]   Ayon Dey / (IJCSIT) International Journal of Computer Science and Information Technologies, Vol. 


>> Tokens are: 
[Visualization, data, applying, PCA, [, 11, ],   , Ayon, Dey, /, (, IJCSIT, ), International, Journal, Computer, Science, Information, Technologies, ,, Vol, .] 

>> PoS Tags are: 
[('Visualization', 'NOUN'), ('data', 'NOUN'), ('applying', 'VERB'), ('PCA', 'PROPN'), ('[', 'PUNCT'), ('11', 'NUM'), (']', 'PUNCT'), ('  ', 'SPACE'), ('Ayon', 'PROPN'), ('Dey', 'PROPN'), ('/', 'SYM'), ('(', 'PUNCT'), ('IJCSIT', 'PROPN'), (')', 'PUNCT'), ('International', 'PROPN'), ('Journal', 'PROPN'), ('Computer', 'PROPN'), ('Science', 'PROPN'), ('Information', 'PROPN'), ('Technologies', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Visualization', 'ROOT'), ('data', 'pobj'), ('applying', 'pcomp'), ('PCA', 'dobj'), ('[', 'punct'), ('11', 'appos'), (']', 'punct'), ('  ', 'compound'), ('Ayon', 'compound'), ('Dey', 'appos'), ('/', 'punct'), ('(', 'punct'), ('IJCSIT', 'nmod'), (')', 'punct'), ('International', 'compound'), ('Journal', 'appos'), ('Computer', 'nmod'), ('Science', 'pobj'), ('Information', 'compound'), ('Technologies', 'conj'), (',', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[Visualization, data], [data, applying], [applying, PCA], [PCA, [], [[, 11], [11, ]], [],   ], [  , Ayon], [Ayon, Dey], [Dey, /], [/, (], [(, IJCSIT], [IJCSIT, )], [), International], [International, Journal], [Journal, Computer], [Computer, Science], [Science, Information], [Information, Technologies], [Technologies, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[Visualization, data, applying], [data, applying, PCA], [applying, PCA, [], [PCA, [, 11], [[, 11, ]], [11, ],   ], [],   , Ayon], [  , Ayon, Dey], [Ayon, Dey, /], [Dey, /, (], [/, (, IJCSIT], [(, IJCSIT, )], [IJCSIT, ), International], [), International, Journal], [International, Journal, Computer], [Journal, Computer, Science], [Computer, Science, Information], [Science, Information, Technologies], [Information, Technologies, ,], [Technologies, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[Visualization, data, PCA,   Ayon Dey, IJCSIT) International Journal, Computer Science, Information Technologies]

>> Named Entities are: 
[('PCA', 'ORG'), ('11', 'CARDINAL'), ('Ayon Dey', 'ORG'), ('International Journal of Computer Science and Information Technologies', 'ORG')]


============================ Sentence 114 =============================

7 (3) , 2016, 1174-1179  www.ijcsit.com 


>> Tokens are: 
[7, (, 3, ), ,, 2016, ,, 1174, -, 1179,  , www.ijcsit.com] 

>> PoS Tags are: 
[('7', 'NUM'), ('(', 'PUNCT'), ('3', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('2016', 'NUM'), (',', 'PUNCT'), ('1174', 'NUM'), ('-', 'SYM'), ('1179', 'NUM'), (' ', 'SPACE'), ('www.ijcsit.com', 'X')] 

>> Dependency Tags are: 
[('7', 'nummod'), ('(', 'punct'), ('3', 'appos'), (')', 'punct'), (',', 'punct'), ('2016', 'npadvmod'), (',', 'punct'), ('1174', 'appos'), ('-', 'punct'), ('1179', 'prep'), (' ', 'ROOT'), ('www.ijcsit.com', 'punct')]

>> Bigrams: 
[[7, (], [(, 3], [3, )], [), ,], [,, 2016], [2016, ,], [,, 1174], [1174, -], [-, 1179], [1179,  ], [ , www.ijcsit.com]]

>> Trigrams: 
[[7, (, 3], [(, 3, )], [3, ), ,], [), ,, 2016], [,, 2016, ,], [2016, ,, 1174], [,, 1174, -], [1174, -, 1179], [-, 1179,  ], [1179,  , www.ijcsit.com]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('7', 'CARDINAL'), ('3', 'CARDINAL'), ('2016', 'DATE'), ('1174-1179', 'DATE')]


============================ Sentence 115 =============================

1176      Fig. 


>> Tokens are: 
[1176,      , Fig, .] 

>> PoS Tags are: 
[('1176', 'NUM'), ('   \xa0 ', 'SPACE'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1176', 'nummod'), ('   \xa0 ', 'compound'), ('Fig', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[1176,      ], [     , Fig], [Fig, .]]

>> Trigrams: 
[[1176,      , Fig], [     , Fig, .]]

>> Noun Phrases are: 
[1176      Fig]

>> Named Entities are: 
[('Fig', 'ORG')]


============================ Sentence 116 =============================

13. 


>> Tokens are: 
[13, .] 

>> PoS Tags are: 
[('13', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('13', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[13, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('13', 'CARDINAL')]


============================ Sentence 117 =============================

Pseudo code for PCA [14]   C. Semi - Supervised Learning    


>> Tokens are: 
[Pseudo, code, PCA, [, 14, ],   , C., Semi, -, Supervised, Learning,   ] 

>> PoS Tags are: 
[('Pseudo', 'NOUN'), ('code', 'NOUN'), ('PCA', 'PROPN'), ('[', 'PUNCT'), ('14', 'NUM'), (']', 'PUNCT'), ('  ', 'SPACE'), ('C.', 'PROPN'), ('Semi', 'PROPN'), ('-', 'ADJ'), ('Supervised', 'ADJ'), ('Learning', 'NOUN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Pseudo', 'compound'), ('code', 'ROOT'), ('PCA', 'pobj'), ('[', 'punct'), ('14', 'appos'), (']', 'punct'), ('  ', 'nmod'), ('C.', 'npadvmod'), ('Semi', 'amod'), ('-', 'amod'), ('Supervised', 'amod'), ('Learning', 'conj'), ('  ', 'punct')]

>> Bigrams: 
[[Pseudo, code], [code, PCA], [PCA, [], [[, 14], [14, ]], [],   ], [  , C.], [C., Semi], [Semi, -], [-, Supervised], [Supervised, Learning], [Learning,   ]]

>> Trigrams: 
[[Pseudo, code, PCA], [code, PCA, [], [PCA, [, 14], [[, 14, ]], [14, ],   ], [],   , C.], [  , C., Semi], [C., Semi, -], [Semi, -, Supervised], [-, Supervised, Learning], [Supervised, Learning,   ]]

>> Noun Phrases are: 
[Pseudo code, PCA,   C. Semi - Supervised Learning]

>> Named Entities are: 
[('PCA', 'ORG'), ('14', 'CARDINAL')]


============================ Sentence 118 =============================

Semi – supervised learning algorithms is a technique  which combines the power of both supervised and  unsupervised learning. 


>> Tokens are: 
[Semi, –, supervised, learning, algorithms, technique,  , combines, power, supervised,  , unsupervised, learning, .] 

>> PoS Tags are: 
[('Semi', 'PROPN'), ('–', 'PUNCT'), ('supervised', 'ADJ'), ('learning', 'VERB'), ('algorithms', 'NOUN'), ('technique', 'NOUN'), (' ', 'SPACE'), ('combines', 'VERB'), ('power', 'NOUN'), ('supervised', 'VERB'), (' ', 'SPACE'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Semi', 'dep'), ('–', 'punct'), ('supervised', 'amod'), ('learning', 'amod'), ('algorithms', 'nsubj'), ('technique', 'attr'), (' ', 'appos'), ('combines', 'relcl'), ('power', 'dobj'), ('supervised', 'pcomp'), (' ', 'nmod'), ('unsupervised', 'amod'), ('learning', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Semi, –], [–, supervised], [supervised, learning], [learning, algorithms], [algorithms, technique], [technique,  ], [ , combines], [combines, power], [power, supervised], [supervised,  ], [ , unsupervised], [unsupervised, learning], [learning, .]]

>> Trigrams: 
[[Semi, –, supervised], [–, supervised, learning], [supervised, learning, algorithms], [learning, algorithms, technique], [algorithms, technique,  ], [technique,  , combines], [ , combines, power], [combines, power, supervised], [power, supervised,  ], [supervised,  , unsupervised], [ , unsupervised, learning], [unsupervised, learning, .]]

>> Noun Phrases are: 
[supervised learning algorithms, a technique, the power,  unsupervised learning]

>> Named Entities are: 
[]


============================ Sentence 119 =============================

It can be fruit-full in those areas of  machine learning and data mining where the unlabeled data  is already present and getting the labeled data is a tedious  process [15]. 


>> Tokens are: 
[fruit, -, areas,  , machine, learning, data, mining, unlabeled, data,  , present, getting, labeled, data, tedious,  , process, [, 15, ], .] 

>> PoS Tags are: 
[('fruit', 'NOUN'), ('-', 'PUNCT'), ('areas', 'NOUN'), (' ', 'SPACE'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('data', 'NOUN'), ('mining', 'NOUN'), ('unlabeled', 'ADJ'), ('data', 'NOUN'), (' ', 'SPACE'), ('present', 'ADJ'), ('getting', 'VERB'), ('labeled', 'VERB'), ('data', 'NOUN'), ('tedious', 'ADJ'), (' ', 'SPACE'), ('process', 'NOUN'), ('[', 'PUNCT'), ('15', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('fruit', 'npadvmod'), ('-', 'punct'), ('areas', 'pobj'), (' ', 'nmod'), ('machine', 'compound'), ('learning', 'pobj'), ('data', 'compound'), ('mining', 'conj'), ('unlabeled', 'amod'), ('data', 'nsubj'), (' ', 'appos'), ('present', 'acomp'), ('getting', 'advcl'), ('labeled', 'amod'), ('data', 'nsubj'), ('tedious', 'amod'), (' ', 'compound'), ('process', 'attr'), ('[', 'punct'), ('15', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[fruit, -], [-, areas], [areas,  ], [ , machine], [machine, learning], [learning, data], [data, mining], [mining, unlabeled], [unlabeled, data], [data,  ], [ , present], [present, getting], [getting, labeled], [labeled, data], [data, tedious], [tedious,  ], [ , process], [process, [], [[, 15], [15, ]], [], .]]

>> Trigrams: 
[[fruit, -, areas], [-, areas,  ], [areas,  , machine], [ , machine, learning], [machine, learning, data], [learning, data, mining], [data, mining, unlabeled], [mining, unlabeled, data], [unlabeled, data,  ], [data,  , present], [ , present, getting], [present, getting, labeled], [getting, labeled, data], [labeled, data, tedious], [data, tedious,  ], [tedious,  , process], [ , process, [], [process, [, 15], [[, 15, ]], [15, ], .]]

>> Noun Phrases are: 
[It, those areas,  machine learning, data mining, the unlabeled data, the labeled data, a tedious  process]

>> Named Entities are: 
[('15', 'CARDINAL')]


============================ Sentence 120 =============================

There are many categories of semi-supervised  learning [16]. 


>> Tokens are: 
[categories, semi, -, supervised,  , learning, [, 16, ], .] 

>> PoS Tags are: 
[('categories', 'NOUN'), ('semi', 'ADJ'), ('-', 'ADJ'), ('supervised', 'ADJ'), (' ', 'SPACE'), ('learning', 'VERB'), ('[', 'PUNCT'), ('16', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('categories', 'attr'), ('semi', 'amod'), ('-', 'amod'), ('supervised', 'amod'), (' ', 'compound'), ('learning', 'pobj'), ('[', 'punct'), ('16', 'attr'), (']', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[categories, semi], [semi, -], [-, supervised], [supervised,  ], [ , learning], [learning, [], [[, 16], [16, ]], [], .]]

>> Trigrams: 
[[categories, semi, -], [semi, -, supervised], [-, supervised,  ], [supervised,  , learning], [ , learning, [], [learning, [, 16], [[, 16, ]], [16, ], .]]

>> Noun Phrases are: 
[many categories]

>> Named Entities are: 
[('16', 'CARDINAL')]


============================ Sentence 121 =============================

Some of which are discussed below:   (1) Generative Models: Generative models are one of the oldest semi-supervised learning method assumes a structure 


>> Tokens are: 
[discussed, :,   , (, 1, ), Generative, Models, :, Generative, models, oldest, semi, -, supervised, learning, method, assumes, structure] 

>> PoS Tags are: 
[('discussed', 'VERB'), (':', 'PUNCT'), ('  ', 'SPACE'), ('(', 'PUNCT'), ('1', 'X'), (')', 'PUNCT'), ('Generative', 'PROPN'), ('Models', 'PROPN'), (':', 'PUNCT'), ('Generative', 'ADJ'), ('models', 'NOUN'), ('oldest', 'ADJ'), ('semi', 'ADJ'), ('-', 'ADJ'), ('supervised', 'ADJ'), ('learning', 'NOUN'), ('method', 'NOUN'), ('assumes', 'VERB'), ('structure', 'NOUN')] 

>> Dependency Tags are: 
[('discussed', 'ROOT'), (':', 'punct'), ('  ', 'appos'), ('(', 'punct'), ('1', 'appos'), (')', 'punct'), ('Generative', 'compound'), ('Models', 'appos'), (':', 'punct'), ('Generative', 'amod'), ('models', 'nsubj'), ('oldest', 'amod'), ('semi', 'amod'), ('-', 'amod'), ('supervised', 'amod'), ('learning', 'compound'), ('method', 'pobj'), ('assumes', 'advcl'), ('structure', 'dobj')]

>> Bigrams: 
[[discussed, :], [:,   ], [  , (], [(, 1], [1, )], [), Generative], [Generative, Models], [Models, :], [:, Generative], [Generative, models], [models, oldest], [oldest, semi], [semi, -], [-, supervised], [supervised, learning], [learning, method], [method, assumes], [assumes, structure]]

>> Trigrams: 
[[discussed, :,   ], [:,   , (], [  , (, 1], [(, 1, )], [1, ), Generative], [), Generative, Models], [Generative, Models, :], [Models, :, Generative], [:, Generative, models], [Generative, models, oldest], [models, oldest, semi], [oldest, semi, -], [semi, -, supervised], [-, supervised, learning], [supervised, learning, method], [learning, method, assumes], [method, assumes, structure]]

>> Noun Phrases are: 
[Generative Models, the oldest semi-supervised learning method, a structure]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 122 =============================

 like p(x,y) = p(y)p(x|y) where p(x|y) is a mixed distribution  e.g.--.- Gaussian mixture models. 


>> Tokens are: 
[ , like, p(x, ,, y, ), =, p(y)p(x|y, ), p(x|y, ), mixed, distribution,  , e.g.--.-, Gaussian, mixture, models, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('like', 'ADP'), ('p(x', 'PROPN'), (',', 'PUNCT'), ('y', 'PROPN'), (')', 'PUNCT'), ('=', 'PUNCT'), ('p(y)p(x|y', 'PROPN'), (')', 'PUNCT'), ('p(x|y', 'NOUN'), (')', 'PUNCT'), ('mixed', 'ADJ'), ('distribution', 'NOUN'), (' ', 'SPACE'), ('e.g.--.-', 'ADJ'), ('Gaussian', 'ADJ'), ('mixture', 'NOUN'), ('models', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('like', 'prep'), ('p(x', 'pobj'), (',', 'punct'), ('y', 'npadvmod'), (')', 'punct'), ('=', 'punct'), ('p(y)p(x|y', 'npadvmod'), (')', 'punct'), ('p(x|y', 'nsubj'), (')', 'punct'), ('mixed', 'amod'), ('distribution', 'attr'), (' ', 'nmod'), ('e.g.--.-', 'amod'), ('Gaussian', 'amod'), ('mixture', 'compound'), ('models', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[ , like], [like, p(x], [p(x, ,], [,, y], [y, )], [), =], [=, p(y)p(x|y], [p(y)p(x|y, )], [), p(x|y], [p(x|y, )], [), mixed], [mixed, distribution], [distribution,  ], [ , e.g.--.-], [e.g.--.-, Gaussian], [Gaussian, mixture], [mixture, models], [models, .]]

>> Trigrams: 
[[ , like, p(x], [like, p(x, ,], [p(x, ,, y], [,, y, )], [y, ), =], [), =, p(y)p(x|y], [=, p(y)p(x|y, )], [p(y)p(x|y, ), p(x|y], [), p(x|y, )], [p(x|y, ), mixed], [), mixed, distribution], [mixed, distribution,  ], [distribution,  , e.g.--.-], [ , e.g.--.-, Gaussian], [e.g.--.-, Gaussian, mixture], [Gaussian, mixture, models], [mixture, models, .]]

>> Noun Phrases are: 
[p(x, p(x|y, a mixed distribution,  e.g.--.- Gaussian mixture models]

>> Named Entities are: 
[('p(x', 'PERSON')]


============================ Sentence 123 =============================

Within the unlabeled data,  the mixed components can be identifiable. 


>> Tokens are: 
[unlabeled, data, ,,  , mixed, components, identifiable, .] 

>> PoS Tags are: 
[('unlabeled', 'ADJ'), ('data', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('mixed', 'ADJ'), ('components', 'NOUN'), ('identifiable', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('unlabeled', 'amod'), ('data', 'pobj'), (',', 'punct'), (' ', 'nsubj'), ('mixed', 'amod'), ('components', 'nsubj'), ('identifiable', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[unlabeled, data], [data, ,], [,,  ], [ , mixed], [mixed, components], [components, identifiable], [identifiable, .]]

>> Trigrams: 
[[unlabeled, data, ,], [data, ,,  ], [,,  , mixed], [ , mixed, components], [mixed, components, identifiable], [components, identifiable, .]]

>> Noun Phrases are: 
[the unlabeled data, the mixed components]

>> Named Entities are: 
[]


============================ Sentence 124 =============================

One labeled  example per component is enough to confirm the mixture  distribution. 


>> Tokens are: 
[labeled,  , example, component, confirm, mixture,  , distribution, .] 

>> PoS Tags are: 
[('labeled', 'VERB'), (' ', 'SPACE'), ('example', 'NOUN'), ('component', 'NOUN'), ('confirm', 'VERB'), ('mixture', 'NOUN'), (' ', 'SPACE'), ('distribution', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('labeled', 'ROOT'), (' ', 'dobj'), ('example', 'oprd'), ('component', 'pobj'), ('confirm', 'xcomp'), ('mixture', 'dobj'), (' ', 'compound'), ('distribution', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[labeled,  ], [ , example], [example, component], [component, confirm], [confirm, mixture], [mixture,  ], [ , distribution], [distribution, .]]

>> Trigrams: 
[[labeled,  , example], [ , example, component], [example, component, confirm], [component, confirm, mixture], [confirm, mixture,  ], [mixture,  , distribution], [ , distribution, .]]

>> Noun Phrases are: 
[example, component, the mixture,  distribution]

>> Named Entities are: 
[('One', 'CARDINAL')]


============================ Sentence 125 =============================

  (2) Self-Training: 


>> Tokens are: 
[  , (, 2, ), Self, -, Training, :] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('(', 'PUNCT'), ('2', 'X'), (')', 'PUNCT'), ('Self', 'PROPN'), ('-', 'PUNCT'), ('Training', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('(', 'punct'), ('2', 'appos'), (')', 'punct'), ('Self', 'compound'), ('-', 'punct'), ('Training', 'appos'), (':', 'punct')]

>> Bigrams: 
[[  , (], [(, 2], [2, )], [), Self], [Self, -], [-, Training], [Training, :]]

>> Trigrams: 
[[  , (, 2], [(, 2, )], [2, ), Self], [), Self, -], [Self, -, Training], [-, Training, :]]

>> Noun Phrases are: 
[Self-Training]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 126 =============================

In self-training, a classifier is trained with a portion of labeled data. 


>> Tokens are: 
[self, -, training, ,, classifier, trained, portion, labeled, data, .] 

>> PoS Tags are: 
[('self', 'NOUN'), ('-', 'PUNCT'), ('training', 'NOUN'), (',', 'PUNCT'), ('classifier', 'NOUN'), ('trained', 'VERB'), ('portion', 'NOUN'), ('labeled', 'VERB'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('self', 'compound'), ('-', 'punct'), ('training', 'pobj'), (',', 'punct'), ('classifier', 'nsubjpass'), ('trained', 'ROOT'), ('portion', 'pobj'), ('labeled', 'amod'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[self, -], [-, training], [training, ,], [,, classifier], [classifier, trained], [trained, portion], [portion, labeled], [labeled, data], [data, .]]

>> Trigrams: 
[[self, -, training], [-, training, ,], [training, ,, classifier], [,, classifier, trained], [classifier, trained, portion], [trained, portion, labeled], [portion, labeled, data], [labeled, data, .]]

>> Noun Phrases are: 
[self-training, a classifier, a portion, labeled data]

>> Named Entities are: 
[]


============================ Sentence 127 =============================

The classifier is then fed with  unlabeled data. 


>> Tokens are: 
[classifier, fed,  , unlabeled, data, .] 

>> PoS Tags are: 
[('classifier', 'NOUN'), ('fed', 'VERB'), (' ', 'SPACE'), ('unlabeled', 'ADJ'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('classifier', 'nsubjpass'), ('fed', 'ROOT'), (' ', 'nmod'), ('unlabeled', 'amod'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[classifier, fed], [fed,  ], [ , unlabeled], [unlabeled, data], [data, .]]

>> Trigrams: 
[[classifier, fed,  ], [fed,  , unlabeled], [ , unlabeled, data], [unlabeled, data, .]]

>> Noun Phrases are: 
[The classifier,  unlabeled data]

>> Named Entities are: 
[]


============================ Sentence 128 =============================

The unlabeled points and the predicted  labels are added together in the training set. 


>> Tokens are: 
[unlabeled, points, predicted,  , labels, added, training, set, .] 

>> PoS Tags are: 
[('unlabeled', 'ADJ'), ('points', 'NOUN'), ('predicted', 'VERB'), (' ', 'SPACE'), ('labels', 'NOUN'), ('added', 'VERB'), ('training', 'NOUN'), ('set', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('unlabeled', 'amod'), ('points', 'nsubjpass'), ('predicted', 'amod'), (' ', 'compound'), ('labels', 'nsubjpass'), ('added', 'ROOT'), ('training', 'compound'), ('set', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[unlabeled, points], [points, predicted], [predicted,  ], [ , labels], [labels, added], [added, training], [training, set], [set, .]]

>> Trigrams: 
[[unlabeled, points, predicted], [points, predicted,  ], [predicted,  , labels], [ , labels, added], [labels, added, training], [added, training, set], [training, set, .]]

>> Noun Phrases are: 
[The unlabeled points, the predicted  labels, the training set]

>> Named Entities are: 
[]


============================ Sentence 129 =============================

This procedure  is then repeated further. 


>> Tokens are: 
[procedure,  , repeated, .] 

>> PoS Tags are: 
[('procedure', 'NOUN'), (' ', 'SPACE'), ('repeated', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('procedure', 'nsubjpass'), (' ', 'nsubjpass'), ('repeated', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[procedure,  ], [ , repeated], [repeated, .]]

>> Trigrams: 
[[procedure,  , repeated], [ , repeated, .]]

>> Noun Phrases are: 
[This procedure]

>> Named Entities are: 
[]


============================ Sentence 130 =============================

Since the classifier is learning  itself, hence the name self-training. 


>> Tokens are: 
[classifier, learning,  , ,, self, -, training, .] 

>> PoS Tags are: 
[('classifier', 'NOUN'), ('learning', 'VERB'), (' ', 'SPACE'), (',', 'PUNCT'), ('self', 'NOUN'), ('-', 'PUNCT'), ('training', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('classifier', 'nsubj'), ('learning', 'ROOT'), (' ', 'dobj'), (',', 'punct'), ('self', 'compound'), ('-', 'punct'), ('training', 'dep'), ('.', 'punct')]

>> Bigrams: 
[[classifier, learning], [learning,  ], [ , ,], [,, self], [self, -], [-, training], [training, .]]

>> Trigrams: 
[[classifier, learning,  ], [learning,  , ,], [ , ,, self], [,, self, -], [self, -, training], [-, training, .]]

>> Noun Phrases are: 
[the classifier, itself]

>> Named Entities are: 
[]


============================ Sentence 131 =============================

  (3) Transductive SVM: 


>> Tokens are: 
[  , (, 3, ), Transductive, SVM, :] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('(', 'PUNCT'), ('3', 'X'), (')', 'PUNCT'), ('Transductive', 'PROPN'), ('SVM', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('(', 'punct'), ('3', 'appos'), (')', 'punct'), ('Transductive', 'compound'), ('SVM', 'appos'), (':', 'punct')]

>> Bigrams: 
[[  , (], [(, 3], [3, )], [), Transductive], [Transductive, SVM], [SVM, :]]

>> Trigrams: 
[[  , (, 3], [(, 3, )], [3, ), Transductive], [), Transductive, SVM], [Transductive, SVM, :]]

>> Noun Phrases are: 
[Transductive SVM]

>> Named Entities are: 
[('3', 'CARDINAL'), ('SVM', 'ORG')]


============================ Sentence 132 =============================

Transductive support vector machine or TSVM is an extension of SVM. 


>> Tokens are: 
[Transductive, support, vector, machine, TSVM, extension, SVM, .] 

>> PoS Tags are: 
[('Transductive', 'VERB'), ('support', 'NOUN'), ('vector', 'NOUN'), ('machine', 'NOUN'), ('TSVM', 'PROPN'), ('extension', 'NOUN'), ('SVM', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Transductive', 'csubj'), ('support', 'compound'), ('vector', 'compound'), ('machine', 'dobj'), ('TSVM', 'conj'), ('extension', 'attr'), ('SVM', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Transductive, support], [support, vector], [vector, machine], [machine, TSVM], [TSVM, extension], [extension, SVM], [SVM, .]]

>> Trigrams: 
[[Transductive, support, vector], [support, vector, machine], [vector, machine, TSVM], [machine, TSVM, extension], [TSVM, extension, SVM], [extension, SVM, .]]

>> Noun Phrases are: 
[support vector machine, TSVM, an extension, SVM]

>> Named Entities are: 
[('TSVM', 'ORG'), ('SVM', 'ORG')]


============================ Sentence 133 =============================

In TSVM, the  labeled and unlabeled data both are considered. 


>> Tokens are: 
[TSVM, ,,  , labeled, unlabeled, data, considered, .] 

>> PoS Tags are: 
[('TSVM', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE'), ('labeled', 'VERB'), ('unlabeled', 'VERB'), ('data', 'NOUN'), ('considered', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('TSVM', 'pobj'), (',', 'punct'), (' ', 'nsubj'), ('labeled', 'amod'), ('unlabeled', 'conj'), ('data', 'nsubjpass'), ('considered', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[TSVM, ,], [,,  ], [ , labeled], [labeled, unlabeled], [unlabeled, data], [data, considered], [considered, .]]

>> Trigrams: 
[[TSVM, ,,  ], [,,  , labeled], [ , labeled, unlabeled], [labeled, unlabeled, data], [unlabeled, data, considered], [data, considered, .]]

>> Noun Phrases are: 
[TSVM]

>> Named Entities are: 
[]


============================ Sentence 134 =============================

It is used to  label the unlabeled data in such a way that the margin is  maximum between the labeled and unlabeled data. 


>> Tokens are: 
[ , label, unlabeled, data, way, margin,  , maximum, labeled, unlabeled, data, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('label', 'VERB'), ('unlabeled', 'ADJ'), ('data', 'NOUN'), ('way', 'NOUN'), ('margin', 'NOUN'), (' ', 'SPACE'), ('maximum', 'ADJ'), ('labeled', 'VERB'), ('unlabeled', 'ADJ'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'pobj'), ('label', 'xcomp'), ('unlabeled', 'amod'), ('data', 'dobj'), ('way', 'pobj'), ('margin', 'nsubj'), (' ', 'attr'), ('maximum', 'acomp'), ('labeled', 'amod'), ('unlabeled', 'conj'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , label], [label, unlabeled], [unlabeled, data], [data, way], [way, margin], [margin,  ], [ , maximum], [maximum, labeled], [labeled, unlabeled], [unlabeled, data], [data, .]]

>> Trigrams: 
[[ , label, unlabeled], [label, unlabeled, data], [unlabeled, data, way], [data, way, margin], [way, margin,  ], [margin,  , maximum], [ , maximum, labeled], [maximum, labeled, unlabeled], [labeled, unlabeled, data], [unlabeled, data, .]]

>> Noun Phrases are: 
[It, the unlabeled data, such a way, the margin, the labeled and unlabeled data]

>> Named Entities are: 
[]


============================ Sentence 135 =============================

Finding  an exact solution by TSVM is a NP-hard problem. 


>> Tokens are: 
[Finding,  , exact, solution, TSVM, NP, -, hard, problem, .] 

>> PoS Tags are: 
[('Finding', 'VERB'), (' ', 'SPACE'), ('exact', 'ADJ'), ('solution', 'NOUN'), ('TSVM', 'PROPN'), ('NP', 'PROPN'), ('-', 'PUNCT'), ('hard', 'ADJ'), ('problem', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Finding', 'csubj'), (' ', 'dative'), ('exact', 'amod'), ('solution', 'dobj'), ('TSVM', 'pobj'), ('NP', 'npadvmod'), ('-', 'punct'), ('hard', 'amod'), ('problem', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[Finding,  ], [ , exact], [exact, solution], [solution, TSVM], [TSVM, NP], [NP, -], [-, hard], [hard, problem], [problem, .]]

>> Trigrams: 
[[Finding,  , exact], [ , exact, solution], [exact, solution, TSVM], [solution, TSVM, NP], [TSVM, NP, -], [NP, -, hard], [-, hard, problem], [hard, problem, .]]

>> Noun Phrases are: 
[an exact solution, TSVM, a NP-hard problem]

>> Named Entities are: 
[('TSVM', 'ORG'), ('NP', 'ORG')]


============================ Sentence 136 =============================

     D. Reinforcement Learning    


>> Tokens are: 
[     , D., Reinforcement, Learning,   ] 

>> PoS Tags are: 
[('     ', 'SPACE'), ('D.', 'PROPN'), ('Reinforcement', 'PROPN'), ('Learning', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('     ', 'compound'), ('D.', 'compound'), ('Reinforcement', 'compound'), ('Learning', 'ROOT'), ('  ', 'punct')]

>> Bigrams: 
[[     , D.], [D., Reinforcement], [Reinforcement, Learning], [Learning,   ]]

>> Trigrams: 
[[     , D., Reinforcement], [D., Reinforcement, Learning], [Reinforcement, Learning,   ]]

>> Noun Phrases are: 
[     D. Reinforcement Learning]

>> Named Entities are: 
[('D.', 'NORP')]


============================ Sentence 137 =============================

Reinforcement learning is a type of learning which  makes decisions based on which actions to take such that  the outcome is more positive. 


>> Tokens are: 
[Reinforcement, learning, type, learning,  , makes, decisions, based, actions,  , outcome, positive, .] 

>> PoS Tags are: 
[('Reinforcement', 'PROPN'), ('learning', 'NOUN'), ('type', 'NOUN'), ('learning', 'VERB'), (' ', 'SPACE'), ('makes', 'VERB'), ('decisions', 'NOUN'), ('based', 'VERB'), ('actions', 'NOUN'), (' ', 'SPACE'), ('outcome', 'NOUN'), ('positive', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Reinforcement', 'compound'), ('learning', 'nsubj'), ('type', 'attr'), ('learning', 'pobj'), (' ', 'nsubj'), ('makes', 'relcl'), ('decisions', 'dobj'), ('based', 'prep'), ('actions', 'nsubj'), (' ', 'nsubj'), ('outcome', 'nsubj'), ('positive', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[Reinforcement, learning], [learning, type], [type, learning], [learning,  ], [ , makes], [makes, decisions], [decisions, based], [based, actions], [actions,  ], [ , outcome], [outcome, positive], [positive, .]]

>> Trigrams: 
[[Reinforcement, learning, type], [learning, type, learning], [type, learning,  ], [learning,  , makes], [ , makes, decisions], [makes, decisions, based], [decisions, based, actions], [based, actions,  ], [actions,  , outcome], [ , outcome, positive], [outcome, positive, .]]

>> Noun Phrases are: 
[Reinforcement learning, a type, decisions, actions, the outcome]

>> Named Entities are: 
[]


============================ Sentence 138 =============================

The learner has no knowledge  which actions to take until it’s been given a situation. 


>> Tokens are: 
[learner, knowledge,  , actions, given, situation, .] 

>> PoS Tags are: 
[('learner', 'NOUN'), ('knowledge', 'NOUN'), (' ', 'SPACE'), ('actions', 'NOUN'), ('given', 'VERB'), ('situation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('learner', 'nsubj'), ('knowledge', 'dobj'), (' ', 'prep'), ('actions', 'dobj'), ('given', 'advcl'), ('situation', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[learner, knowledge], [knowledge,  ], [ , actions], [actions, given], [given, situation], [situation, .]]

>> Trigrams: 
[[learner, knowledge,  ], [knowledge,  , actions], [ , actions, given], [actions, given, situation], [given, situation, .]]

>> Noun Phrases are: 
[The learner, no knowledge, which actions, it, a situation]

>> Named Entities are: 
[]


============================ Sentence 139 =============================

The  action which is taken by the learner may affect situations   and their actions in the future. 


>> Tokens are: 
[ , action, taken, learner, affect, situations,   , actions, future, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('action', 'NOUN'), ('taken', 'VERB'), ('learner', 'NOUN'), ('affect', 'VERB'), ('situations', 'NOUN'), ('  ', 'SPACE'), ('actions', 'NOUN'), ('future', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('action', 'nsubj'), ('taken', 'relcl'), ('learner', 'pobj'), ('affect', 'ROOT'), ('situations', 'compound'), ('  ', 'dobj'), ('actions', 'conj'), ('future', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , action], [action, taken], [taken, learner], [learner, affect], [affect, situations], [situations,   ], [  , actions], [actions, future], [future, .]]

>> Trigrams: 
[[ , action, taken], [action, taken, learner], [taken, learner, affect], [learner, affect, situations], [affect, situations,   ], [situations,   , actions], [  , actions, future], [actions, future, .]]

>> Noun Phrases are: 
[The  action, the learner, their actions, the future]

>> Named Entities are: 
[]


============================ Sentence 140 =============================

Reinforcement learning  solely depends on two criteria: trial and error search and  delayed outcome [17]. 


>> Tokens are: 
[Reinforcement, learning,  , solely, depends, criteria, :, trial, error, search,  , delayed, outcome, [, 17, ], .] 

>> PoS Tags are: 
[('Reinforcement', 'NOUN'), ('learning', 'VERB'), (' ', 'SPACE'), ('solely', 'ADV'), ('depends', 'VERB'), ('criteria', 'NOUN'), (':', 'PUNCT'), ('trial', 'NOUN'), ('error', 'NOUN'), ('search', 'NOUN'), (' ', 'SPACE'), ('delayed', 'VERB'), ('outcome', 'NOUN'), ('[', 'PUNCT'), ('17', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Reinforcement', 'nsubj'), ('learning', 'acl'), (' ', 'dobj'), ('solely', 'advmod'), ('depends', 'ROOT'), ('criteria', 'pobj'), (':', 'punct'), ('trial', 'appos'), ('error', 'compound'), ('search', 'conj'), (' ', 'nsubj'), ('delayed', 'conj'), ('outcome', 'dobj'), ('[', 'punct'), ('17', 'npadvmod'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Reinforcement, learning], [learning,  ], [ , solely], [solely, depends], [depends, criteria], [criteria, :], [:, trial], [trial, error], [error, search], [search,  ], [ , delayed], [delayed, outcome], [outcome, [], [[, 17], [17, ]], [], .]]

>> Trigrams: 
[[Reinforcement, learning,  ], [learning,  , solely], [ , solely, depends], [solely, depends, criteria], [depends, criteria, :], [criteria, :, trial], [:, trial, error], [trial, error, search], [error, search,  ], [search,  , delayed], [ , delayed, outcome], [delayed, outcome, [], [outcome, [, 17], [[, 17, ]], [17, ], .]]

>> Noun Phrases are: 
[Reinforcement, two criteria, trial, error search, outcome]

>> Named Entities are: 
[('two', 'CARDINAL'), ('17', 'CARDINAL')]


============================ Sentence 141 =============================

The general model [18] for  reinforcement learning is depicted in Fig. 


>> Tokens are: 
[general, model, [, 18, ],  , reinforcement, learning, depicted, Fig, .] 

>> PoS Tags are: 
[('general', 'ADJ'), ('model', 'NOUN'), ('[', 'PUNCT'), ('18', 'NUM'), (']', 'PUNCT'), (' ', 'SPACE'), ('reinforcement', 'NOUN'), ('learning', 'NOUN'), ('depicted', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('general', 'amod'), ('model', 'nsubjpass'), ('[', 'punct'), ('18', 'appos'), (']', 'punct'), (' ', 'nummod'), ('reinforcement', 'compound'), ('learning', 'pobj'), ('depicted', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[general, model], [model, [], [[, 18], [18, ]], [],  ], [ , reinforcement], [reinforcement, learning], [learning, depicted], [depicted, Fig], [Fig, .]]

>> Trigrams: 
[[general, model, [], [model, [, 18], [[, 18, ]], [18, ],  ], [],  , reinforcement], [ , reinforcement, learning], [reinforcement, learning, depicted], [learning, depicted, Fig], [depicted, Fig, .]]

>> Noun Phrases are: 
[The general model,  reinforcement learning, Fig]

>> Named Entities are: 
[('18', 'CARDINAL'), ('Fig', 'PERSON')]


============================ Sentence 142 =============================

14.         


>> Tokens are: 
[14, .,        ] 

>> PoS Tags are: 
[('14', 'NUM'), ('.', 'PUNCT'), ('     \xa0 ', 'SPACE')] 

>> Dependency Tags are: 
[('14', 'ROOT'), ('.', 'punct'), ('     \xa0 ', 'punct')]

>> Bigrams: 
[[14, .], [.,        ]]

>> Trigrams: 
[[14, .,        ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('14', 'CARDINAL')]


============================ Sentence 143 =============================

Fig. 


>> Tokens are: 
[Fig, .] 

>> PoS Tags are: 
[('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Fig', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Fig, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 144 =============================

14. 


>> Tokens are: 
[14, .] 

>> PoS Tags are: 
[('14', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('14', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[14, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('14', 'CARDINAL')]


============================ Sentence 145 =============================

The Reinforcement Learning Model [18]    


>> Tokens are: 
[Reinforcement, Learning, Model, [, 18, ],   ] 

>> PoS Tags are: 
[('Reinforcement', 'PROPN'), ('Learning', 'PROPN'), ('Model', 'PROPN'), ('[', 'PUNCT'), ('18', 'NUM'), (']', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Reinforcement', 'compound'), ('Learning', 'compound'), ('Model', 'ROOT'), ('[', 'punct'), ('18', 'appos'), (']', 'punct'), ('  ', 'appos')]

>> Bigrams: 
[[Reinforcement, Learning], [Learning, Model], [Model, [], [[, 18], [18, ]], [],   ]]

>> Trigrams: 
[[Reinforcement, Learning, Model], [Learning, Model, [], [Model, [, 18], [[, 18, ]], [18, ],   ]]

>> Noun Phrases are: 
[The Reinforcement Learning Model]

>> Named Entities are: 
[('The Reinforcement Learning Model', 'ORG'), ('18', 'CARDINAL')]


============================ Sentence 146 =============================

In the figure, the agent receives an input i, current state s,  state transition r and input function I from the environment. 


>> Tokens are: 
[figure, ,, agent, receives, input, ,, current, state, s, ,,  , state, transition, r, input, function, environment, .] 

>> PoS Tags are: 
[('figure', 'NOUN'), (',', 'PUNCT'), ('agent', 'NOUN'), ('receives', 'VERB'), ('input', 'NOUN'), (',', 'PUNCT'), ('current', 'ADJ'), ('state', 'NOUN'), ('s', 'PART'), (',', 'PUNCT'), (' ', 'SPACE'), ('state', 'NOUN'), ('transition', 'NOUN'), ('r', 'NOUN'), ('input', 'NOUN'), ('function', 'NOUN'), ('environment', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('figure', 'pobj'), (',', 'punct'), ('agent', 'nsubj'), ('receives', 'ROOT'), ('input', 'dobj'), (',', 'punct'), ('current', 'amod'), ('state', 'compound'), ('s', 'conj'), (',', 'punct'), (' ', 'dobj'), ('state', 'compound'), ('transition', 'appos'), ('r', 'nummod'), ('input', 'conj'), ('function', 'conj'), ('environment', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[figure, ,], [,, agent], [agent, receives], [receives, input], [input, ,], [,, current], [current, state], [state, s], [s, ,], [,,  ], [ , state], [state, transition], [transition, r], [r, input], [input, function], [function, environment], [environment, .]]

>> Trigrams: 
[[figure, ,, agent], [,, agent, receives], [agent, receives, input], [receives, input, ,], [input, ,, current], [,, current, state], [current, state, s], [state, s, ,], [s, ,,  ], [,,  , state], [ , state, transition], [state, transition, r], [transition, r, input], [r, input, function], [input, function, environment], [function, environment, .]]

>> Noun Phrases are: 
[the figure, the agent, an input, i, state transition, function, I, the environment]

>> Named Entities are: 
[]


============================ Sentence 147 =============================

 Based on these inputs, the agent generates a behavior B and  takes an action a which generates an outcome. 


>> Tokens are: 
[ , Based, inputs, ,, agent, generates, behavior, B,  , takes, action, generates, outcome, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Based', 'VERB'), ('inputs', 'NOUN'), (',', 'PUNCT'), ('agent', 'NOUN'), ('generates', 'VERB'), ('behavior', 'NOUN'), ('B', 'NOUN'), (' ', 'SPACE'), ('takes', 'VERB'), ('action', 'NOUN'), ('generates', 'VERB'), ('outcome', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'dep'), ('Based', 'acl'), ('inputs', 'pobj'), (',', 'punct'), ('agent', 'nsubj'), ('generates', 'ROOT'), ('behavior', 'compound'), ('B', 'dobj'), (' ', 'conj'), ('takes', 'conj'), ('action', 'dobj'), ('generates', 'relcl'), ('outcome', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[ , Based], [Based, inputs], [inputs, ,], [,, agent], [agent, generates], [generates, behavior], [behavior, B], [B,  ], [ , takes], [takes, action], [action, generates], [generates, outcome], [outcome, .]]

>> Trigrams: 
[[ , Based, inputs], [Based, inputs, ,], [inputs, ,, agent], [,, agent, generates], [agent, generates, behavior], [generates, behavior, B], [behavior, B,  ], [B,  , takes], [ , takes, action], [takes, action, generates], [action, generates, outcome], [generates, outcome, .]]

>> Noun Phrases are: 
[these inputs, the agent, a behavior B, an action, an outcome]

>> Named Entities are: 
[]


============================ Sentence 148 =============================

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 149 =============================

E. Multitask Learning    


>> Tokens are: 
[E., Multitask, Learning,   ] 

>> PoS Tags are: 
[('E.', 'PROPN'), ('Multitask', 'PROPN'), ('Learning', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('E.', 'compound'), ('Multitask', 'compound'), ('Learning', 'ROOT'), ('  ', 'punct')]

>> Bigrams: 
[[E., Multitask], [Multitask, Learning], [Learning,   ]]

>> Trigrams: 
[[E., Multitask, Learning], [Multitask, Learning,   ]]

>> Noun Phrases are: 
[E. Multitask Learning]

>> Named Entities are: 
[('E. Multitask Learning', 'ORG')]


============================ Sentence 150 =============================

Multitask learning has a simple goal of helping other  learners to perform better. 


>> Tokens are: 
[Multitask, learning, simple, goal, helping,  , learners, perform, better, .] 

>> PoS Tags are: 
[('Multitask', 'PROPN'), ('learning', 'NOUN'), ('simple', 'ADJ'), ('goal', 'NOUN'), ('helping', 'VERB'), (' ', 'SPACE'), ('learners', 'NOUN'), ('perform', 'VERB'), ('better', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Multitask', 'compound'), ('learning', 'nsubj'), ('simple', 'amod'), ('goal', 'dobj'), ('helping', 'pcomp'), (' ', 'compound'), ('learners', 'nsubj'), ('perform', 'ccomp'), ('better', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[Multitask, learning], [learning, simple], [simple, goal], [goal, helping], [helping,  ], [ , learners], [learners, perform], [perform, better], [better, .]]

>> Trigrams: 
[[Multitask, learning, simple], [learning, simple, goal], [simple, goal, helping], [goal, helping,  ], [helping,  , learners], [ , learners, perform], [learners, perform, better], [perform, better, .]]

>> Noun Phrases are: 
[Multitask learning, a simple goal, other  learners]

>> Named Entities are: 
[]


============================ Sentence 151 =============================

When multitask learning  algorithms are applied on a task, it remembers the  procedure how it solved the problem or how it reaches to  the particular conclusion. 


>> Tokens are: 
[multitask, learning,  , algorithms, applied, task, ,, remembers,  , procedure, solved, problem, reaches,  , particular, conclusion, .] 

>> PoS Tags are: 
[('multitask', 'ADV'), ('learning', 'VERB'), (' ', 'SPACE'), ('algorithms', 'NOUN'), ('applied', 'VERB'), ('task', 'NOUN'), (',', 'PUNCT'), ('remembers', 'VERB'), (' ', 'SPACE'), ('procedure', 'NOUN'), ('solved', 'VERB'), ('problem', 'NOUN'), ('reaches', 'VERB'), (' ', 'SPACE'), ('particular', 'ADJ'), ('conclusion', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('multitask', 'prep'), ('learning', 'pcomp'), (' ', 'dobj'), ('algorithms', 'dobj'), ('applied', 'advcl'), ('task', 'pobj'), (',', 'punct'), ('remembers', 'ROOT'), (' ', 'compound'), ('procedure', 'dobj'), ('solved', 'relcl'), ('problem', 'dobj'), ('reaches', 'conj'), (' ', 'pobj'), ('particular', 'amod'), ('conclusion', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[multitask, learning], [learning,  ], [ , algorithms], [algorithms, applied], [applied, task], [task, ,], [,, remembers], [remembers,  ], [ , procedure], [procedure, solved], [solved, problem], [problem, reaches], [reaches,  ], [ , particular], [particular, conclusion], [conclusion, .]]

>> Trigrams: 
[[multitask, learning,  ], [learning,  , algorithms], [ , algorithms, applied], [algorithms, applied, task], [applied, task, ,], [task, ,, remembers], [,, remembers,  ], [remembers,  , procedure], [ , procedure, solved], [procedure, solved, problem], [solved, problem, reaches], [problem, reaches,  ], [reaches,  , particular], [ , particular, conclusion], [particular, conclusion, .]]

>> Noun Phrases are: 
[algorithms, a task, it, the  procedure, it, the problem, it, the particular conclusion]

>> Named Entities are: 
[]


============================ Sentence 152 =============================

The algorithm then uses these  steps to find the solution of other similar problem or task. 


>> Tokens are: 
[algorithm, uses,  , steps, find, solution, similar, problem, task, .] 

>> PoS Tags are: 
[('algorithm', 'NOUN'), ('uses', 'VERB'), (' ', 'SPACE'), ('steps', 'NOUN'), ('find', 'VERB'), ('solution', 'NOUN'), ('similar', 'ADJ'), ('problem', 'NOUN'), ('task', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('algorithm', 'nsubj'), ('uses', 'ROOT'), (' ', 'compound'), ('steps', 'dobj'), ('find', 'xcomp'), ('solution', 'dobj'), ('similar', 'amod'), ('problem', 'pobj'), ('task', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[algorithm, uses], [uses,  ], [ , steps], [steps, find], [find, solution], [solution, similar], [similar, problem], [problem, task], [task, .]]

>> Trigrams: 
[[algorithm, uses,  ], [uses,  , steps], [ , steps, find], [steps, find, solution], [find, solution, similar], [solution, similar, problem], [similar, problem, task], [problem, task, .]]

>> Noun Phrases are: 
[The algorithm, these  steps, the solution, other similar problem, task]

>> Named Entities are: 
[]


============================ Sentence 153 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 154 =============================

This helping of one algorithm to another can also be termed  as inductive transfer mechanism. 


>> Tokens are: 
[helping, algorithm, termed,  , inductive, transfer, mechanism, .] 

>> PoS Tags are: 
[('helping', 'NOUN'), ('algorithm', 'NOUN'), ('termed', 'VERB'), (' ', 'SPACE'), ('inductive', 'ADJ'), ('transfer', 'NOUN'), ('mechanism', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('helping', 'nsubjpass'), ('algorithm', 'pobj'), ('termed', 'ROOT'), (' ', 'oprd'), ('inductive', 'amod'), ('transfer', 'compound'), ('mechanism', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[helping, algorithm], [algorithm, termed], [termed,  ], [ , inductive], [inductive, transfer], [transfer, mechanism], [mechanism, .]]

>> Trigrams: 
[[helping, algorithm, termed], [algorithm, termed,  ], [termed,  , inductive], [ , inductive, transfer], [inductive, transfer, mechanism], [transfer, mechanism, .]]

>> Noun Phrases are: 
[This helping, one algorithm, inductive transfer mechanism]

>> Named Entities are: 
[('one', 'CARDINAL')]


============================ Sentence 155 =============================

If the learners share their  experience with each other, the learners can learn  concurrently rather than individually and can be much  faster 


>> Tokens are: 
[learners, share,  , experience, ,, learners, learn,  , concurrently, individually,  , faster] 

>> PoS Tags are: 
[('learners', 'NOUN'), ('share', 'VERB'), (' ', 'SPACE'), ('experience', 'NOUN'), (',', 'PUNCT'), ('learners', 'NOUN'), ('learn', 'VERB'), (' ', 'SPACE'), ('concurrently', 'ADV'), ('individually', 'ADV'), (' ', 'SPACE'), ('faster', 'ADJ')] 

>> Dependency Tags are: 
[('learners', 'nsubj'), ('share', 'advcl'), (' ', 'compound'), ('experience', 'dobj'), (',', 'punct'), ('learners', 'nsubj'), ('learn', 'ROOT'), (' ', 'dobj'), ('concurrently', 'advmod'), ('individually', 'advmod'), (' ', 'npadvmod'), ('faster', 'acomp')]

>> Bigrams: 
[[learners, share], [share,  ], [ , experience], [experience, ,], [,, learners], [learners, learn], [learn,  ], [ , concurrently], [concurrently, individually], [individually,  ], [ , faster]]

>> Trigrams: 
[[learners, share,  ], [share,  , experience], [ , experience, ,], [experience, ,, learners], [,, learners, learn], [learners, learn,  ], [learn,  , concurrently], [ , concurrently, individually], [concurrently, individually,  ], [individually,  , faster]]

>> Noun Phrases are: 
[the learners, their  experience, the learners]

>> Named Entities are: 
[]


============================ Sentence 156 =============================

[19]. 


>> Tokens are: 
[[, 19, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('19', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('19', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 19], [19, ]], [], .]]

>> Trigrams: 
[[[, 19, ]], [19, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('19', 'CARDINAL')]


============================ Sentence 157 =============================

  F. Ensemble 


>> Tokens are: 
[  , F., Ensemble] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('F.', 'PROPN'), ('Ensemble', 'PROPN')] 

>> Dependency Tags are: 
[('  ', 'compound'), ('F.', 'compound'), ('Ensemble', 'ROOT')]

>> Bigrams: 
[[  , F.], [F., Ensemble]]

>> Trigrams: 
[[  , F., Ensemble]]

>> Noun Phrases are: 
[  F. Ensemble]

>> Named Entities are: 
[]


============================ Sentence 158 =============================

Learning    


>> Tokens are: 
[Learning,   ] 

>> PoS Tags are: 
[('Learning', 'VERB'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Learning', 'ROOT'), ('  ', 'dobj')]

>> Bigrams: 
[[Learning,   ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 159 =============================

When various individual learners are combined to form  only one learner then that particular type of learning is  called ensemble learning. 


>> Tokens are: 
[individual, learners, combined, form,  , learner, particular, type, learning,  , called, ensemble, learning, .] 

>> PoS Tags are: 
[('individual', 'ADJ'), ('learners', 'NOUN'), ('combined', 'VERB'), ('form', 'VERB'), (' ', 'SPACE'), ('learner', 'NOUN'), ('particular', 'ADJ'), ('type', 'NOUN'), ('learning', 'NOUN'), (' ', 'SPACE'), ('called', 'VERB'), ('ensemble', 'ADJ'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('individual', 'amod'), ('learners', 'nsubjpass'), ('combined', 'advcl'), ('form', 'xcomp'), (' ', 'dobj'), ('learner', 'dobj'), ('particular', 'amod'), ('type', 'dobj'), ('learning', 'pobj'), (' ', 'nsubj'), ('called', 'ROOT'), ('ensemble', 'amod'), ('learning', 'oprd'), ('.', 'punct')]

>> Bigrams: 
[[individual, learners], [learners, combined], [combined, form], [form,  ], [ , learner], [learner, particular], [particular, type], [type, learning], [learning,  ], [ , called], [called, ensemble], [ensemble, learning], [learning, .]]

>> Trigrams: 
[[individual, learners, combined], [learners, combined, form], [combined, form,  ], [form,  , learner], [ , learner, particular], [learner, particular, type], [particular, type, learning], [type, learning,  ], [learning,  , called], [ , called, ensemble], [called, ensemble, learning], [ensemble, learning, .]]

>> Noun Phrases are: 
[various individual learners, only one learner, that particular type, learning, ensemble learning]

>> Named Entities are: 
[]


============================ Sentence 160 =============================

The individual learner may be  Naïve Bayes, decision tree, neural network, etc. 


>> Tokens are: 
[individual, learner,  , Naïve, Bayes, ,, decision, tree, ,, neural, network, ,, etc, .] 

>> PoS Tags are: 
[('individual', 'ADJ'), ('learner', 'NOUN'), (' ', 'SPACE'), ('Naïve', 'PROPN'), ('Bayes', 'PROPN'), (',', 'PUNCT'), ('decision', 'NOUN'), ('tree', 'NOUN'), (',', 'PUNCT'), ('neural', 'ADJ'), ('network', 'NOUN'), (',', 'PUNCT'), ('etc', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('individual', 'amod'), ('learner', 'nsubj'), (' ', 'attr'), ('Naïve', 'compound'), ('Bayes', 'attr'), (',', 'punct'), ('decision', 'compound'), ('tree', 'conj'), (',', 'punct'), ('neural', 'amod'), ('network', 'conj'), (',', 'punct'), ('etc', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[individual, learner], [learner,  ], [ , Naïve], [Naïve, Bayes], [Bayes, ,], [,, decision], [decision, tree], [tree, ,], [,, neural], [neural, network], [network, ,], [,, etc], [etc, .]]

>> Trigrams: 
[[individual, learner,  ], [learner,  , Naïve], [ , Naïve, Bayes], [Naïve, Bayes, ,], [Bayes, ,, decision], [,, decision, tree], [decision, tree, ,], [tree, ,, neural], [,, neural, network], [neural, network, ,], [network, ,, etc], [,, etc, .]]

>> Noun Phrases are: 
[The individual learner, Naïve Bayes, decision tree, neural network]

>> Named Entities are: 
[]


============================ Sentence 161 =============================

Ensemble  learning is a hot topic since 1990s. 


>> Tokens are: 
[Ensemble,  , learning, hot, topic, 1990s, .] 

>> PoS Tags are: 
[('Ensemble', 'VERB'), (' ', 'SPACE'), ('learning', 'NOUN'), ('hot', 'ADJ'), ('topic', 'NOUN'), ('1990s', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Ensemble', 'amod'), (' ', 'compound'), ('learning', 'nsubj'), ('hot', 'amod'), ('topic', 'attr'), ('1990s', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Ensemble,  ], [ , learning], [learning, hot], [hot, topic], [topic, 1990s], [1990s, .]]

>> Trigrams: 
[[Ensemble,  , learning], [ , learning, hot], [learning, hot, topic], [hot, topic, 1990s], [topic, 1990s, .]]

>> Noun Phrases are: 
[Ensemble  learning, a hot topic]

>> Named Entities are: 
[('1990s', 'DATE')]


============================ Sentence 162 =============================

It has been observed  that, a collection of learners is almost always better at doing  a particular job rather than individual learners [20]. 


>> Tokens are: 
[observed,  , ,, collection, learners, better,  , particular, job, individual, learners, [, 20, ], .] 

>> PoS Tags are: 
[('observed', 'VERB'), (' ', 'SPACE'), (',', 'PUNCT'), ('collection', 'NOUN'), ('learners', 'NOUN'), ('better', 'ADJ'), (' ', 'SPACE'), ('particular', 'ADJ'), ('job', 'NOUN'), ('individual', 'ADJ'), ('learners', 'NOUN'), ('[', 'PUNCT'), ('20', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('observed', 'ROOT'), (' ', 'dobj'), (',', 'punct'), ('collection', 'nsubj'), ('learners', 'pobj'), ('better', 'acomp'), (' ', 'dative'), ('particular', 'amod'), ('job', 'dobj'), ('individual', 'amod'), ('learners', 'conj'), ('[', 'punct'), ('20', 'dep'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[observed,  ], [ , ,], [,, collection], [collection, learners], [learners, better], [better,  ], [ , particular], [particular, job], [job, individual], [individual, learners], [learners, [], [[, 20], [20, ]], [], .]]

>> Trigrams: 
[[observed,  , ,], [ , ,, collection], [,, collection, learners], [collection, learners, better], [learners, better,  ], [better,  , particular], [ , particular, job], [particular, job, individual], [job, individual, learners], [individual, learners, [], [learners, [, 20], [[, 20, ]], [20, ], .]]

>> Noun Phrases are: 
[It, a collection, learners, a particular job, individual learners]

>> Named Entities are: 
[('20', 'CARDINAL')]


============================ Sentence 163 =============================

Two  popular Ensemble learning techniques are given below  [21]:   (1) 


>> Tokens are: 
[ , popular, Ensemble, learning, techniques, given,  , [, 21, ], :,   , (, 1, )] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('popular', 'ADJ'), ('Ensemble', 'NOUN'), ('learning', 'NOUN'), ('techniques', 'NOUN'), ('given', 'VERB'), (' ', 'SPACE'), ('[', 'PUNCT'), ('21', 'NUM'), (']', 'PUNCT'), (':', 'PUNCT'), ('  ', 'SPACE'), ('(', 'PUNCT'), ('1', 'X'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nmod'), ('popular', 'amod'), ('Ensemble', 'compound'), ('learning', 'compound'), ('techniques', 'nsubjpass'), ('given', 'ROOT'), (' ', 'pobj'), ('[', 'punct'), ('21', 'npadvmod'), (']', 'punct'), (':', 'punct'), ('  ', 'appos'), ('(', 'punct'), ('1', 'appos'), (')', 'punct')]

>> Bigrams: 
[[ , popular], [popular, Ensemble], [Ensemble, learning], [learning, techniques], [techniques, given], [given,  ], [ , [], [[, 21], [21, ]], [], :], [:,   ], [  , (], [(, 1], [1, )]]

>> Trigrams: 
[[ , popular, Ensemble], [popular, Ensemble, learning], [Ensemble, learning, techniques], [learning, techniques, given], [techniques, given,  ], [given,  , [], [ , [, 21], [[, 21, ]], [21, ], :], [], :,   ], [:,   , (], [  , (, 1], [(, 1, )]]

>> Noun Phrases are: 
[Two  popular Ensemble learning techniques]

>> Named Entities are: 
[('Two', 'CARDINAL'), ('Ensemble', 'NORP'), ('21', 'CARDINAL'), ('1', 'CARDINAL')]


============================ Sentence 164 =============================

Boosting: Boosting is a technique in ensemble learning which is used to decrease bias and variance.   


>> Tokens are: 
[Boosting, :, Boosting, technique, ensemble, learning, decrease, bias, variance, .,  ] 

>> PoS Tags are: 
[('Boosting', 'VERB'), (':', 'PUNCT'), ('Boosting', 'NOUN'), ('technique', 'NOUN'), ('ensemble', 'ADJ'), ('learning', 'NOUN'), ('decrease', 'VERB'), ('bias', 'NOUN'), ('variance', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Boosting', 'ROOT'), (':', 'punct'), ('Boosting', 'nsubj'), ('technique', 'attr'), ('ensemble', 'amod'), ('learning', 'pobj'), ('decrease', 'xcomp'), ('bias', 'dobj'), ('variance', 'conj'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Boosting, :], [:, Boosting], [Boosting, technique], [technique, ensemble], [ensemble, learning], [learning, decrease], [decrease, bias], [bias, variance], [variance, .], [.,  ]]

>> Trigrams: 
[[Boosting, :, Boosting], [:, Boosting, technique], [Boosting, technique, ensemble], [technique, ensemble, learning], [ensemble, learning, decrease], [learning, decrease, bias], [decrease, bias, variance], [bias, variance, .], [variance, .,  ]]

>> Noun Phrases are: 
[Boosting, a technique, ensemble learning, bias, variance]

>> Named Entities are: 
[]


============================ Sentence 165 =============================

Boosting creates a collection of weak learners and convert  them to one strong learner. 


>> Tokens are: 
[Boosting, creates, collection, weak, learners, convert,  , strong, learner, .] 

>> PoS Tags are: 
[('Boosting', 'VERB'), ('creates', 'VERB'), ('collection', 'NOUN'), ('weak', 'ADJ'), ('learners', 'NOUN'), ('convert', 'VERB'), (' ', 'SPACE'), ('strong', 'ADJ'), ('learner', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Boosting', 'nsubj'), ('creates', 'ROOT'), ('collection', 'dobj'), ('weak', 'amod'), ('learners', 'pobj'), ('convert', 'conj'), (' ', 'dobj'), ('strong', 'amod'), ('learner', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Boosting, creates], [creates, collection], [collection, weak], [weak, learners], [learners, convert], [convert,  ], [ , strong], [strong, learner], [learner, .]]

>> Trigrams: 
[[Boosting, creates, collection], [creates, collection, weak], [collection, weak, learners], [weak, learners, convert], [learners, convert,  ], [convert,  , strong], [ , strong, learner], [strong, learner, .]]

>> Noun Phrases are: 
[a collection, weak learners, them, one strong learner]

>> Named Entities are: 
[('one', 'CARDINAL')]


============================ Sentence 166 =============================

A weak learner is a classifier  which is barely correlated with true classification. 


>> Tokens are: 
[weak, learner, classifier,  , barely, correlated, true, classification, .] 

>> PoS Tags are: 
[('weak', 'ADJ'), ('learner', 'NOUN'), ('classifier', 'NOUN'), (' ', 'SPACE'), ('barely', 'ADV'), ('correlated', 'VERB'), ('true', 'ADJ'), ('classification', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('weak', 'amod'), ('learner', 'nsubj'), ('classifier', 'attr'), (' ', 'appos'), ('barely', 'advmod'), ('correlated', 'relcl'), ('true', 'amod'), ('classification', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[weak, learner], [learner, classifier], [classifier,  ], [ , barely], [barely, correlated], [correlated, true], [true, classification], [classification, .]]

>> Trigrams: 
[[weak, learner, classifier], [learner, classifier,  ], [classifier,  , barely], [ , barely, correlated], [barely, correlated, true], [correlated, true, classification], [true, classification, .]]

>> Noun Phrases are: 
[A weak learner, a classifier, true classification]

>> Named Entities are: 
[]


============================ Sentence 167 =============================

On the  other hand, a strong learner is a type of classifier which is  strongly correlated with true classification [21]. 


>> Tokens are: 
[ , hand, ,, strong, learner, type, classifier,  , strongly, correlated, true, classification, [, 21, ], .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('hand', 'NOUN'), (',', 'PUNCT'), ('strong', 'ADJ'), ('learner', 'NOUN'), ('type', 'NOUN'), ('classifier', 'NOUN'), (' ', 'SPACE'), ('strongly', 'ADV'), ('correlated', 'VERB'), ('true', 'ADJ'), ('classification', 'NOUN'), ('[', 'PUNCT'), ('21', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nmod'), ('hand', 'pobj'), (',', 'punct'), ('strong', 'amod'), ('learner', 'nsubj'), ('type', 'attr'), ('classifier', 'pobj'), (' ', 'nsubj'), ('strongly', 'advmod'), ('correlated', 'relcl'), ('true', 'amod'), ('classification', 'pobj'), ('[', 'punct'), ('21', 'npadvmod'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[ , hand], [hand, ,], [,, strong], [strong, learner], [learner, type], [type, classifier], [classifier,  ], [ , strongly], [strongly, correlated], [correlated, true], [true, classification], [classification, [], [[, 21], [21, ]], [], .]]

>> Trigrams: 
[[ , hand, ,], [hand, ,, strong], [,, strong, learner], [strong, learner, type], [learner, type, classifier], [type, classifier,  ], [classifier,  , strongly], [ , strongly, correlated], [strongly, correlated, true], [correlated, true, classification], [true, classification, [], [classification, [, 21], [[, 21, ]], [21, ], .]]

>> Noun Phrases are: 
[the  other hand, a strong learner, a type, classifier, true classification]

>> Named Entities are: 
[('21', 'CARDINAL')]


============================ Sentence 168 =============================

The pseudo  code for AdaBoost (which is most popular example of  boosting) is give in Fig. 


>> Tokens are: 
[pseudo,  , code, AdaBoost, (, popular, example,  , boosting, ), Fig, .] 

>> PoS Tags are: 
[('pseudo', 'NOUN'), (' ', 'SPACE'), ('code', 'NOUN'), ('AdaBoost', 'PROPN'), ('(', 'PUNCT'), ('popular', 'ADJ'), ('example', 'NOUN'), (' ', 'SPACE'), ('boosting', 'VERB'), (')', 'PUNCT'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('pseudo', 'nsubj'), (' ', 'compound'), ('code', 'appos'), ('AdaBoost', 'pobj'), ('(', 'punct'), ('popular', 'amod'), ('example', 'attr'), (' ', 'nsubj'), ('boosting', 'pcomp'), (')', 'punct'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[pseudo,  ], [ , code], [code, AdaBoost], [AdaBoost, (], [(, popular], [popular, example], [example,  ], [ , boosting], [boosting, )], [), Fig], [Fig, .]]

>> Trigrams: 
[[pseudo,  , code], [ , code, AdaBoost], [code, AdaBoost, (], [AdaBoost, (, popular], [(, popular, example], [popular, example,  ], [example,  , boosting], [ , boosting, )], [boosting, ), Fig], [), Fig, .]]

>> Noun Phrases are: 
[The pseudo,  code, AdaBoost, most popular example, Fig]

>> Named Entities are: 
[('AdaBoost', 'ORG'), ('Fig', 'PERSON')]


============================ Sentence 169 =============================

15. 


>> Tokens are: 
[15, .] 

>> PoS Tags are: 
[('15', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('15', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[15, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('15', 'CARDINAL')]


============================ Sentence 170 =============================

  Ayon Dey / (IJCSIT) International Journal of Computer Science and Information Technologies, Vol. 


>> Tokens are: 
[  , Ayon, Dey, /, (, IJCSIT, ), International, Journal, Computer, Science, Information, Technologies, ,, Vol, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Ayon', 'PROPN'), ('Dey', 'PROPN'), ('/', 'SYM'), ('(', 'PUNCT'), ('IJCSIT', 'PROPN'), (')', 'PUNCT'), ('International', 'PROPN'), ('Journal', 'PROPN'), ('Computer', 'PROPN'), ('Science', 'PROPN'), ('Information', 'PROPN'), ('Technologies', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'compound'), ('Ayon', 'compound'), ('Dey', 'ROOT'), ('/', 'punct'), ('(', 'punct'), ('IJCSIT', 'nmod'), (')', 'punct'), ('International', 'compound'), ('Journal', 'appos'), ('Computer', 'nmod'), ('Science', 'pobj'), ('Information', 'compound'), ('Technologies', 'conj'), (',', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[  , Ayon], [Ayon, Dey], [Dey, /], [/, (], [(, IJCSIT], [IJCSIT, )], [), International], [International, Journal], [Journal, Computer], [Computer, Science], [Science, Information], [Information, Technologies], [Technologies, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[  , Ayon, Dey], [Ayon, Dey, /], [Dey, /, (], [/, (, IJCSIT], [(, IJCSIT, )], [IJCSIT, ), International], [), International, Journal], [International, Journal, Computer], [Journal, Computer, Science], [Computer, Science, Information], [Science, Information, Technologies], [Information, Technologies, ,], [Technologies, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[  Ayon Dey, IJCSIT) International Journal, Computer Science, Information Technologies]

>> Named Entities are: 
[('Ayon Dey', 'ORG'), ('International Journal of Computer Science and Information Technologies', 'ORG')]


============================ Sentence 171 =============================

7 (3) , 2016, 1174-1179  www.ijcsit.com 1177      Fig. 


>> Tokens are: 
[7, (, 3, ), ,, 2016, ,, 1174, -, 1179,  , www.ijcsit.com, 1177,      , Fig, .] 

>> PoS Tags are: 
[('7', 'NUM'), ('(', 'PUNCT'), ('3', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('2016', 'NUM'), (',', 'PUNCT'), ('1174', 'NUM'), ('-', 'SYM'), ('1179', 'NUM'), (' ', 'SPACE'), ('www.ijcsit.com', 'X'), ('1177', 'NUM'), ('   \xa0 ', 'SPACE'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('7', 'nummod'), ('(', 'punct'), ('3', 'appos'), (')', 'punct'), (',', 'punct'), ('2016', 'npadvmod'), (',', 'punct'), ('1174', 'appos'), ('-', 'punct'), ('1179', 'prep'), (' ', 'ROOT'), ('www.ijcsit.com', 'npadvmod'), ('1177', 'nummod'), ('   \xa0 ', 'compound'), ('Fig', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[7, (], [(, 3], [3, )], [), ,], [,, 2016], [2016, ,], [,, 1174], [1174, -], [-, 1179], [1179,  ], [ , www.ijcsit.com], [www.ijcsit.com, 1177], [1177,      ], [     , Fig], [Fig, .]]

>> Trigrams: 
[[7, (, 3], [(, 3, )], [3, ), ,], [), ,, 2016], [,, 2016, ,], [2016, ,, 1174], [,, 1174, -], [1174, -, 1179], [-, 1179,  ], [1179,  , www.ijcsit.com], [ , www.ijcsit.com, 1177], [www.ijcsit.com, 1177,      ], [1177,      , Fig], [     , Fig, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('7', 'CARDINAL'), ('3', 'CARDINAL'), ('2016', 'DATE'), ('1174-1179', 'DATE'), ('Fig', 'ORG')]


============================ Sentence 172 =============================

15. 


>> Tokens are: 
[15, .] 

>> PoS Tags are: 
[('15', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('15', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[15, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('15', 'CARDINAL')]


============================ Sentence 173 =============================

Pseudo code for AdaBoost [21]   (2) Bagging: Bagging or bootstrap aggregating is applied where the accuracy and stability of a machine learning  algorithm needs to be increased. 


>> Tokens are: 
[Pseudo, code, AdaBoost, [, 21, ],   , (, 2, ), Bagging, :, Bagging, bootstrap, aggregating, applied, accuracy, stability, machine, learning,  , algorithm, needs, increased, .] 

>> PoS Tags are: 
[('Pseudo', 'NOUN'), ('code', 'NOUN'), ('AdaBoost', 'PROPN'), ('[', 'PUNCT'), ('21', 'NUM'), (']', 'PUNCT'), ('  ', 'SPACE'), ('(', 'PUNCT'), ('2', 'X'), (')', 'PUNCT'), ('Bagging', 'NOUN'), (':', 'PUNCT'), ('Bagging', 'NOUN'), ('bootstrap', 'NOUN'), ('aggregating', 'NOUN'), ('applied', 'VERB'), ('accuracy', 'NOUN'), ('stability', 'NOUN'), ('machine', 'NOUN'), ('learning', 'VERB'), (' ', 'SPACE'), ('algorithm', 'NOUN'), ('needs', 'VERB'), ('increased', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Pseudo', 'compound'), ('code', 'nsubj'), ('AdaBoost', 'pobj'), ('[', 'punct'), ('21', 'appos'), (']', 'punct'), ('  ', 'appos'), ('(', 'punct'), ('2', 'appos'), (')', 'punct'), ('Bagging', 'ROOT'), (':', 'punct'), ('Bagging', 'nsubjpass'), ('bootstrap', 'compound'), ('aggregating', 'conj'), ('applied', 'ccomp'), ('accuracy', 'nsubj'), ('stability', 'conj'), ('machine', 'pobj'), ('learning', 'acl'), (' ', 'dobj'), ('algorithm', 'pobj'), ('needs', 'advcl'), ('increased', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[Pseudo, code], [code, AdaBoost], [AdaBoost, [], [[, 21], [21, ]], [],   ], [  , (], [(, 2], [2, )], [), Bagging], [Bagging, :], [:, Bagging], [Bagging, bootstrap], [bootstrap, aggregating], [aggregating, applied], [applied, accuracy], [accuracy, stability], [stability, machine], [machine, learning], [learning,  ], [ , algorithm], [algorithm, needs], [needs, increased], [increased, .]]

>> Trigrams: 
[[Pseudo, code, AdaBoost], [code, AdaBoost, [], [AdaBoost, [, 21], [[, 21, ]], [21, ],   ], [],   , (], [  , (, 2], [(, 2, )], [2, ), Bagging], [), Bagging, :], [Bagging, :, Bagging], [:, Bagging, bootstrap], [Bagging, bootstrap, aggregating], [bootstrap, aggregating, applied], [aggregating, applied, accuracy], [applied, accuracy, stability], [accuracy, stability, machine], [stability, machine, learning], [machine, learning,  ], [learning,  , algorithm], [ , algorithm, needs], [algorithm, needs, increased], [needs, increased, .]]

>> Noun Phrases are: 
[Pseudo code, AdaBoost, Bagging, bootstrap aggregating, the accuracy, stability, a machine, algorithm]

>> Named Entities are: 
[('AdaBoost', 'ORG'), ('21', 'CARDINAL'), ('2', 'CARDINAL')]


============================ Sentence 174 =============================

It is applicable in  classification and regression. 


>> Tokens are: 
[applicable,  , classification, regression, .] 

>> PoS Tags are: 
[('applicable', 'ADJ'), (' ', 'SPACE'), ('classification', 'NOUN'), ('regression', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('applicable', 'acomp'), (' ', 'compound'), ('classification', 'pobj'), ('regression', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[applicable,  ], [ , classification], [classification, regression], [regression, .]]

>> Trigrams: 
[[applicable,  , classification], [ , classification, regression], [classification, regression, .]]

>> Noun Phrases are: 
[It,  classification, regression]

>> Named Entities are: 
[]


============================ Sentence 175 =============================

Bagging also decreases  variance and helps in handling overfitting [23]. 


>> Tokens are: 
[Bagging, decreases,  , variance, helps, handling, overfitting, [, 23, ], .] 

>> PoS Tags are: 
[('Bagging', 'NOUN'), ('decreases', 'VERB'), (' ', 'SPACE'), ('variance', 'NOUN'), ('helps', 'VERB'), ('handling', 'VERB'), ('overfitting', 'VERB'), ('[', 'PUNCT'), ('23', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Bagging', 'nsubj'), ('decreases', 'ROOT'), (' ', 'compound'), ('variance', 'dobj'), ('helps', 'conj'), ('handling', 'pcomp'), ('overfitting', 'xcomp'), ('[', 'punct'), ('23', 'npadvmod'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Bagging, decreases], [decreases,  ], [ , variance], [variance, helps], [helps, handling], [handling, overfitting], [overfitting, [], [[, 23], [23, ]], [], .]]

>> Trigrams: 
[[Bagging, decreases,  ], [decreases,  , variance], [ , variance, helps], [variance, helps, handling], [helps, handling, overfitting], [handling, overfitting, [], [overfitting, [, 23], [[, 23, ]], [23, ], .]]

>> Noun Phrases are: 
[Bagging,  variance]

>> Named Entities are: 
[('23', 'CARDINAL')]


============================ Sentence 176 =============================

The pseudo  code for bagging in given in Fig. 


>> Tokens are: 
[pseudo,  , code, bagging, given, Fig, .] 

>> PoS Tags are: 
[('pseudo', 'NOUN'), (' ', 'SPACE'), ('code', 'NOUN'), ('bagging', 'NOUN'), ('given', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('pseudo', 'ROOT'), (' ', 'compound'), ('code', 'appos'), ('bagging', 'pobj'), ('given', 'acl'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[pseudo,  ], [ , code], [code, bagging], [bagging, given], [given, Fig], [Fig, .]]

>> Trigrams: 
[[pseudo,  , code], [ , code, bagging], [code, bagging, given], [bagging, given, Fig], [given, Fig, .]]

>> Noun Phrases are: 
[The pseudo,  code, bagging, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 177 =============================

16. 


>> Tokens are: 
[16, .] 

>> PoS Tags are: 
[('16', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('16', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[16, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('16', 'CARDINAL')]


============================ Sentence 178 =============================

     


>> Tokens are: 
[    ] 

>> PoS Tags are: 
[('  \xa0 ', 'SPACE')] 

>> Dependency Tags are: 
[('  \xa0 ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 179 =============================

Fig. 


>> Tokens are: 
[Fig, .] 

>> PoS Tags are: 
[('Fig', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Fig', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Fig, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 180 =============================

16. 


>> Tokens are: 
[16, .] 

>> PoS Tags are: 
[('16', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('16', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[16, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('16', 'CARDINAL')]


============================ Sentence 181 =============================

Pseudo code for Bagging [21]   G. Neural Network Learning   


>> Tokens are: 
[Pseudo, code, Bagging, [, 21, ],   , G., Neural, Network, Learning,  ] 

>> PoS Tags are: 
[('Pseudo', 'NOUN'), ('code', 'NOUN'), ('Bagging', 'PROPN'), ('[', 'PUNCT'), ('21', 'NUM'), (']', 'PUNCT'), ('  ', 'SPACE'), ('G.', 'PROPN'), ('Neural', 'PROPN'), ('Network', 'PROPN'), ('Learning', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Pseudo', 'compound'), ('code', 'ROOT'), ('Bagging', 'pobj'), ('[', 'punct'), ('21', 'appos'), (']', 'punct'), ('  ', 'appos'), ('G.', 'compound'), ('Neural', 'compound'), ('Network', 'compound'), ('Learning', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[Pseudo, code], [code, Bagging], [Bagging, [], [[, 21], [21, ]], [],   ], [  , G.], [G., Neural], [Neural, Network], [Network, Learning], [Learning,  ]]

>> Trigrams: 
[[Pseudo, code, Bagging], [code, Bagging, [], [Bagging, [, 21], [[, 21, ]], [21, ],   ], [],   , G.], [  , G., Neural], [G., Neural, Network], [Neural, Network, Learning], [Network, Learning,  ]]

>> Noun Phrases are: 
[Pseudo code, Bagging, G. Neural Network Learning]

>> Named Entities are: 
[('21', 'CARDINAL'), ('G. Neural Network Learning', 'ORG')]


============================ Sentence 182 =============================

The neural network (or artificial neural network or ANN)   is derived from the biological concept of neurons. 


>> Tokens are: 
[neural, network, (, artificial, neural, network, ANN, ),   , derived, biological, concept, neurons, .] 

>> PoS Tags are: 
[('neural', 'ADJ'), ('network', 'NOUN'), ('(', 'PUNCT'), ('artificial', 'ADJ'), ('neural', 'ADJ'), ('network', 'NOUN'), ('ANN', 'PROPN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('derived', 'VERB'), ('biological', 'ADJ'), ('concept', 'NOUN'), ('neurons', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('neural', 'amod'), ('network', 'nsubjpass'), ('(', 'punct'), ('artificial', 'amod'), ('neural', 'amod'), ('network', 'conj'), ('ANN', 'conj'), (')', 'punct'), ('  ', 'appos'), ('derived', 'ROOT'), ('biological', 'amod'), ('concept', 'pobj'), ('neurons', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[neural, network], [network, (], [(, artificial], [artificial, neural], [neural, network], [network, ANN], [ANN, )], [),   ], [  , derived], [derived, biological], [biological, concept], [concept, neurons], [neurons, .]]

>> Trigrams: 
[[neural, network, (], [network, (, artificial], [(, artificial, neural], [artificial, neural, network], [neural, network, ANN], [network, ANN, )], [ANN, ),   ], [),   , derived], [  , derived, biological], [derived, biological, concept], [biological, concept, neurons], [concept, neurons, .]]

>> Noun Phrases are: 
[The neural network, artificial neural network, ANN, the biological concept, neurons]

>> Named Entities are: 
[]


============================ Sentence 183 =============================

A neuron  is a cell like structure in a brain. 


>> Tokens are: 
[neuron,  , cell, like, structure, brain, .] 

>> PoS Tags are: 
[('neuron', 'NOUN'), (' ', 'SPACE'), ('cell', 'NOUN'), ('like', 'ADP'), ('structure', 'NOUN'), ('brain', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('neuron', 'nsubj'), (' ', 'appos'), ('cell', 'attr'), ('like', 'prep'), ('structure', 'pobj'), ('brain', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[neuron,  ], [ , cell], [cell, like], [like, structure], [structure, brain], [brain, .]]

>> Trigrams: 
[[neuron,  , cell], [ , cell, like], [cell, like, structure], [like, structure, brain], [structure, brain, .]]

>> Noun Phrases are: 
[A neuron, a cell, structure, a brain]

>> Named Entities are: 
[]


============================ Sentence 184 =============================

To understand neural  network, one must understand how a neuron works. 


>> Tokens are: 
[understand, neural,  , network, ,, understand, neuron, works, .] 

>> PoS Tags are: 
[('understand', 'VERB'), ('neural', 'ADJ'), (' ', 'SPACE'), ('network', 'NOUN'), (',', 'PUNCT'), ('understand', 'VERB'), ('neuron', 'NOUN'), ('works', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('understand', 'advcl'), ('neural', 'amod'), (' ', 'compound'), ('network', 'dobj'), (',', 'punct'), ('understand', 'ROOT'), ('neuron', 'nsubj'), ('works', 'ccomp'), ('.', 'punct')]

>> Bigrams: 
[[understand, neural], [neural,  ], [ , network], [network, ,], [,, understand], [understand, neuron], [neuron, works], [works, .]]

>> Trigrams: 
[[understand, neural,  ], [neural,  , network], [ , network, ,], [network, ,, understand], [,, understand, neuron], [understand, neuron, works], [neuron, works, .]]

>> Noun Phrases are: 
[neural  network, one, a neuron]

>> Named Entities are: 
[]


============================ Sentence 185 =============================

A  neuron has mainly four parts (see Fig 17). 


>> Tokens are: 
[ , neuron, mainly, parts, (, Fig, 17, ), .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('neuron', 'NOUN'), ('mainly', 'ADV'), ('parts', 'NOUN'), ('(', 'PUNCT'), ('Fig', 'PROPN'), ('17', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('neuron', 'nsubj'), ('mainly', 'advmod'), ('parts', 'dobj'), ('(', 'punct'), ('Fig', 'dobj'), ('17', 'nummod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[ , neuron], [neuron, mainly], [mainly, parts], [parts, (], [(, Fig], [Fig, 17], [17, )], [), .]]

>> Trigrams: 
[[ , neuron, mainly], [neuron, mainly, parts], [mainly, parts, (], [parts, (, Fig], [(, Fig, 17], [Fig, 17, )], [17, ), .]]

>> Noun Phrases are: 
[A  neuron, mainly four parts, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 186 =============================

They are dendrites, nucleus, soma and axon. 


>> Tokens are: 
[dendrites, ,, nucleus, ,, soma, axon, .] 

>> PoS Tags are: 
[('dendrites', 'NOUN'), (',', 'PUNCT'), ('nucleus', 'NOUN'), (',', 'PUNCT'), ('soma', 'NOUN'), ('axon', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('dendrites', 'attr'), (',', 'punct'), ('nucleus', 'conj'), (',', 'punct'), ('soma', 'conj'), ('axon', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[dendrites, ,], [,, nucleus], [nucleus, ,], [,, soma], [soma, axon], [axon, .]]

>> Trigrams: 
[[dendrites, ,, nucleus], [,, nucleus, ,], [nucleus, ,, soma], [,, soma, axon], [soma, axon, .]]

>> Noun Phrases are: 
[They, dendrites, nucleus, soma, axon]

>> Named Entities are: 
[]


============================ Sentence 187 =============================

     Fig. 


>> Tokens are: 
[     , Fig, .] 

>> PoS Tags are: 
[('   \xa0 ', 'SPACE'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('   \xa0 ', 'compound'), ('Fig', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[     , Fig], [Fig, .]]

>> Trigrams: 
[[     , Fig, .]]

>> Noun Phrases are: 
[     Fig]

>> Named Entities are: 
[('Fig', 'ORG')]


============================ Sentence 188 =============================

17. 


>> Tokens are: 
[17, .] 

>> PoS Tags are: 
[('17', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('17', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[17, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('17', 'CARDINAL')]


============================ Sentence 189 =============================

A Neuron [24]    


>> Tokens are: 
[Neuron, [, 24, ],   ] 

>> PoS Tags are: 
[('Neuron', 'PROPN'), ('[', 'PUNCT'), ('24', 'NUM'), (']', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Neuron', 'ROOT'), ('[', 'punct'), ('24', 'appos'), (']', 'punct'), ('  ', 'appos')]

>> Bigrams: 
[[Neuron, [], [[, 24], [24, ]], [],   ]]

>> Trigrams: 
[[Neuron, [, 24], [[, 24, ]], [24, ],   ]]

>> Noun Phrases are: 
[A Neuron]

>> Named Entities are: 
[('Neuron', 'ORG'), ('24', 'CARDINAL')]


============================ Sentence 190 =============================

The dendrites receive electrical signals. 


>> Tokens are: 
[dendrites, receive, electrical, signals, .] 

>> PoS Tags are: 
[('dendrites', 'NOUN'), ('receive', 'VERB'), ('electrical', 'ADJ'), ('signals', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('dendrites', 'nsubj'), ('receive', 'ROOT'), ('electrical', 'amod'), ('signals', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[dendrites, receive], [receive, electrical], [electrical, signals], [signals, .]]

>> Trigrams: 
[[dendrites, receive, electrical], [receive, electrical, signals], [electrical, signals, .]]

>> Noun Phrases are: 
[The dendrites, electrical signals]

>> Named Entities are: 
[]


============================ Sentence 191 =============================

Soma processes  the electrical signal. 


>> Tokens are: 
[Soma, processes,  , electrical, signal, .] 

>> PoS Tags are: 
[('Soma', 'NOUN'), ('processes', 'VERB'), (' ', 'SPACE'), ('electrical', 'ADJ'), ('signal', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Soma', 'compound'), ('processes', 'ROOT'), (' ', 'dobj'), ('electrical', 'amod'), ('signal', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Soma, processes], [processes,  ], [ , electrical], [electrical, signal], [signal, .]]

>> Trigrams: 
[[Soma, processes,  ], [processes,  , electrical], [ , electrical, signal], [electrical, signal, .]]

>> Noun Phrases are: 
[the electrical signal]

>> Named Entities are: 
[('Soma', 'PERSON')]


============================ Sentence 192 =============================

The output of the process is carried by  the axon to the dendrite terminals where the output is sent  to next neuron. 


>> Tokens are: 
[output, process, carried,  , axon, dendrite, terminals, output, sent,  , neuron, .] 

>> PoS Tags are: 
[('output', 'NOUN'), ('process', 'NOUN'), ('carried', 'VERB'), (' ', 'SPACE'), ('axon', 'NOUN'), ('dendrite', 'ADJ'), ('terminals', 'NOUN'), ('output', 'NOUN'), ('sent', 'VERB'), (' ', 'SPACE'), ('neuron', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('output', 'nsubjpass'), ('process', 'pobj'), ('carried', 'ROOT'), (' ', 'pobj'), ('axon', 'dobj'), ('dendrite', 'amod'), ('terminals', 'pobj'), ('output', 'nsubjpass'), ('sent', 'relcl'), (' ', 'dobj'), ('neuron', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[output, process], [process, carried], [carried,  ], [ , axon], [axon, dendrite], [dendrite, terminals], [terminals, output], [output, sent], [sent,  ], [ , neuron], [neuron, .]]

>> Trigrams: 
[[output, process, carried], [process, carried,  ], [carried,  , axon], [ , axon, dendrite], [axon, dendrite, terminals], [dendrite, terminals, output], [terminals, output, sent], [output, sent,  ], [sent,  , neuron], [ , neuron, .]]

>> Noun Phrases are: 
[The output, the process, the axon, the dendrite terminals, the output, next neuron]

>> Named Entities are: 
[]


============================ Sentence 193 =============================

The nucleus is the heart of the neuron. 


>> Tokens are: 
[nucleus, heart, neuron, .] 

>> PoS Tags are: 
[('nucleus', 'NOUN'), ('heart', 'NOUN'), ('neuron', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('nucleus', 'nsubj'), ('heart', 'attr'), ('neuron', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[nucleus, heart], [heart, neuron], [neuron, .]]

>> Trigrams: 
[[nucleus, heart, neuron], [heart, neuron, .]]

>> Noun Phrases are: 
[The nucleus, the heart, the neuron]

>> Named Entities are: 
[]


============================ Sentence 194 =============================

The  inter-connection of neuron is called neural network where  electrical impulses travel around the brain. 


>> Tokens are: 
[ , inter, -, connection, neuron, called, neural, network,  , electrical, impulses, travel, brain, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('inter', 'ADJ'), ('-', 'NOUN'), ('connection', 'NOUN'), ('neuron', 'NOUN'), ('called', 'VERB'), ('neural', 'ADJ'), ('network', 'NOUN'), (' ', 'SPACE'), ('electrical', 'ADJ'), ('impulses', 'NOUN'), ('travel', 'VERB'), ('brain', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nsubj'), ('inter', 'nsubjpass'), ('-', 'nsubjpass'), ('connection', 'nsubjpass'), ('neuron', 'pobj'), ('called', 'ROOT'), ('neural', 'amod'), ('network', 'oprd'), (' ', 'nmod'), ('electrical', 'amod'), ('impulses', 'nsubj'), ('travel', 'relcl'), ('brain', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , inter], [inter, -], [-, connection], [connection, neuron], [neuron, called], [called, neural], [neural, network], [network,  ], [ , electrical], [electrical, impulses], [impulses, travel], [travel, brain], [brain, .]]

>> Trigrams: 
[[ , inter, -], [inter, -, connection], [-, connection, neuron], [connection, neuron, called], [neuron, called, neural], [called, neural, network], [neural, network,  ], [network,  , electrical], [ , electrical, impulses], [electrical, impulses, travel], [impulses, travel, brain], [travel, brain, .]]

>> Noun Phrases are: 
[-, connection, neuron, neural network,  electrical impulses, the brain]

>> Named Entities are: 
[]


============================ Sentence 195 =============================

     Fig. 


>> Tokens are: 
[     , Fig, .] 

>> PoS Tags are: 
[('   \xa0 ', 'SPACE'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('   \xa0 ', 'compound'), ('Fig', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[     , Fig], [Fig, .]]

>> Trigrams: 
[[     , Fig, .]]

>> Noun Phrases are: 
[     Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 196 =============================

18. 


>> Tokens are: 
[18, .] 

>> PoS Tags are: 
[('18', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('18', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[18, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('18', 'CARDINAL')]


============================ Sentence 197 =============================

Structure of an Artificial Neural Network [24]    


>> Tokens are: 
[Structure, Artificial, Neural, Network, [, 24, ],   ] 

>> PoS Tags are: 
[('Structure', 'NOUN'), ('Artificial', 'PROPN'), ('Neural', 'PROPN'), ('Network', 'PROPN'), ('[', 'PUNCT'), ('24', 'NUM'), (']', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Structure', 'ROOT'), ('Artificial', 'compound'), ('Neural', 'compound'), ('Network', 'pobj'), ('[', 'punct'), ('24', 'appos'), (']', 'punct'), ('  ', 'punct')]

>> Bigrams: 
[[Structure, Artificial], [Artificial, Neural], [Neural, Network], [Network, [], [[, 24], [24, ]], [],   ]]

>> Trigrams: 
[[Structure, Artificial, Neural], [Artificial, Neural, Network], [Neural, Network, [], [Network, [, 24], [[, 24, ]], [24, ],   ]]

>> Noun Phrases are: 
[Structure, an Artificial Neural Network]

>> Named Entities are: 
[('an Artificial Neural Network', 'ORG'), ('24', 'CARDINAL')]


============================ Sentence 198 =============================

An artificial neural network behaves the same way. 


>> Tokens are: 
[artificial, neural, network, behaves, way, .] 

>> PoS Tags are: 
[('artificial', 'ADJ'), ('neural', 'ADJ'), ('network', 'NOUN'), ('behaves', 'VERB'), ('way', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('artificial', 'amod'), ('neural', 'amod'), ('network', 'nsubj'), ('behaves', 'ROOT'), ('way', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[artificial, neural], [neural, network], [network, behaves], [behaves, way], [way, .]]

>> Trigrams: 
[[artificial, neural, network], [neural, network, behaves], [network, behaves, way], [behaves, way, .]]

>> Noun Phrases are: 
[An artificial neural network]

>> Named Entities are: 
[]


============================ Sentence 199 =============================

It  works on three layers. 


>> Tokens are: 
[ , works, layers, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('works', 'VERB'), ('layers', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'appos'), ('works', 'ROOT'), ('layers', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , works], [works, layers], [layers, .]]

>> Trigrams: 
[[ , works, layers], [works, layers, .]]

>> Noun Phrases are: 
[It, three layers]

>> Named Entities are: 
[('three', 'CARDINAL')]


============================ Sentence 200 =============================

The input layer takes input (much  like dendrites). 


>> Tokens are: 
[input, layer, takes, input, (,  , like, dendrites, ), .] 

>> PoS Tags are: 
[('input', 'NOUN'), ('layer', 'NOUN'), ('takes', 'VERB'), ('input', 'NOUN'), ('(', 'PUNCT'), (' ', 'SPACE'), ('like', 'ADP'), ('dendrites', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('input', 'compound'), ('layer', 'nsubj'), ('takes', 'ROOT'), ('input', 'dobj'), ('(', 'punct'), (' ', 'dobj'), ('like', 'prep'), ('dendrites', 'pobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[input, layer], [layer, takes], [takes, input], [input, (], [(,  ], [ , like], [like, dendrites], [dendrites, )], [), .]]

>> Trigrams: 
[[input, layer, takes], [layer, takes, input], [takes, input, (], [input, (,  ], [(,  , like], [ , like, dendrites], [like, dendrites, )], [dendrites, ), .]]

>> Noun Phrases are: 
[The input layer, input, dendrites]

>> Named Entities are: 
[]


============================ Sentence 201 =============================

The hidden layer processes the input (like  soma and axon). 


>> Tokens are: 
[hidden, layer, processes, input, (, like,  , soma, axon, ), .] 

>> PoS Tags are: 
[('hidden', 'ADJ'), ('layer', 'NOUN'), ('processes', 'VERB'), ('input', 'NOUN'), ('(', 'PUNCT'), ('like', 'ADP'), (' ', 'SPACE'), ('soma', 'NOUN'), ('axon', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('hidden', 'amod'), ('layer', 'nsubj'), ('processes', 'ROOT'), ('input', 'dobj'), ('(', 'punct'), ('like', 'prep'), (' ', 'pobj'), ('soma', 'pobj'), ('axon', 'conj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[hidden, layer], [layer, processes], [processes, input], [input, (], [(, like], [like,  ], [ , soma], [soma, axon], [axon, )], [), .]]

>> Trigrams: 
[[hidden, layer, processes], [layer, processes, input], [processes, input, (], [input, (, like], [(, like,  ], [like,  , soma], [ , soma, axon], [soma, axon, )], [axon, ), .]]

>> Noun Phrases are: 
[The hidden layer, the input, soma, axon]

>> Named Entities are: 
[]


============================ Sentence 202 =============================

Finally, the output layer sends the  calculated output (like dendrite terminals) 


>> Tokens are: 
[Finally, ,, output, layer, sends,  , calculated, output, (, like, dendrite, terminals, )] 

>> PoS Tags are: 
[('Finally', 'ADV'), (',', 'PUNCT'), ('output', 'NOUN'), ('layer', 'NOUN'), ('sends', 'VERB'), (' ', 'SPACE'), ('calculated', 'ADJ'), ('output', 'NOUN'), ('(', 'PUNCT'), ('like', 'ADP'), ('dendrite', 'ADJ'), ('terminals', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Finally', 'advmod'), (',', 'punct'), ('output', 'compound'), ('layer', 'nsubj'), ('sends', 'ROOT'), (' ', 'nmod'), ('calculated', 'amod'), ('output', 'dobj'), ('(', 'punct'), ('like', 'prep'), ('dendrite', 'amod'), ('terminals', 'pobj'), (')', 'punct')]

>> Bigrams: 
[[Finally, ,], [,, output], [output, layer], [layer, sends], [sends,  ], [ , calculated], [calculated, output], [output, (], [(, like], [like, dendrite], [dendrite, terminals], [terminals, )]]

>> Trigrams: 
[[Finally, ,, output], [,, output, layer], [output, layer, sends], [layer, sends,  ], [sends,  , calculated], [ , calculated, output], [calculated, output, (], [output, (, like], [(, like, dendrite], [like, dendrite, terminals], [dendrite, terminals, )]]

>> Noun Phrases are: 
[the output layer, the  calculated output, dendrite terminals]

>> Named Entities are: 
[]


============================ Sentence 203 =============================

[24]. 


>> Tokens are: 
[[, 24, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('24', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('24', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 24], [24, ]], [], .]]

>> Trigrams: 
[[[, 24, ]], [24, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('24', 'CARDINAL')]


============================ Sentence 204 =============================

There are  basically three types of artificial neural network:  supervised, unsupervised and reinforcement [25]. 


>> Tokens are: 
[ , basically, types, artificial, neural, network, :,  , supervised, ,, unsupervised, reinforcement, [, 25, ], .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('basically', 'ADV'), ('types', 'NOUN'), ('artificial', 'ADJ'), ('neural', 'ADJ'), ('network', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE'), ('supervised', 'VERB'), (',', 'PUNCT'), ('unsupervised', 'ADJ'), ('reinforcement', 'NOUN'), ('[', 'PUNCT'), ('25', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'attr'), ('basically', 'advmod'), ('types', 'attr'), ('artificial', 'amod'), ('neural', 'amod'), ('network', 'pobj'), (':', 'punct'), (' ', 'nsubj'), ('supervised', 'acl'), (',', 'punct'), ('unsupervised', 'conj'), ('reinforcement', 'conj'), ('[', 'punct'), ('25', 'dep'), (']', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[ , basically], [basically, types], [types, artificial], [artificial, neural], [neural, network], [network, :], [:,  ], [ , supervised], [supervised, ,], [,, unsupervised], [unsupervised, reinforcement], [reinforcement, [], [[, 25], [25, ]], [], .]]

>> Trigrams: 
[[ , basically, types], [basically, types, artificial], [types, artificial, neural], [artificial, neural, network], [neural, network, :], [network, :,  ], [:,  , supervised], [ , supervised, ,], [supervised, ,, unsupervised], [,, unsupervised, reinforcement], [unsupervised, reinforcement, [], [reinforcement, [, 25], [[, 25, ]], [25, ], .]]

>> Noun Phrases are: 
[basically three types, artificial neural network]

>> Named Entities are: 
[('three', 'CARDINAL'), ('25', 'CARDINAL')]


============================ Sentence 205 =============================

  (1) Supervised Neural Network: 


>> Tokens are: 
[  , (, 1, ), Supervised, Neural, Network, :] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('(', 'PUNCT'), ('1', 'X'), (')', 'PUNCT'), ('Supervised', 'PROPN'), ('Neural', 'PROPN'), ('Network', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('(', 'punct'), ('1', 'appos'), (')', 'punct'), ('Supervised', 'compound'), ('Neural', 'compound'), ('Network', 'appos'), (':', 'punct')]

>> Bigrams: 
[[  , (], [(, 1], [1, )], [), Supervised], [Supervised, Neural], [Neural, Network], [Network, :]]

>> Trigrams: 
[[  , (, 1], [(, 1, )], [1, ), Supervised], [), Supervised, Neural], [Supervised, Neural, Network], [Neural, Network, :]]

>> Noun Phrases are: 
[Supervised Neural Network]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 206 =============================

In the supervised neural network, the output of the input is already known. 


>> Tokens are: 
[supervised, neural, network, ,, output, input, known, .] 

>> PoS Tags are: 
[('supervised', 'ADJ'), ('neural', 'ADJ'), ('network', 'NOUN'), (',', 'PUNCT'), ('output', 'NOUN'), ('input', 'NOUN'), ('known', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('supervised', 'amod'), ('neural', 'amod'), ('network', 'pobj'), (',', 'punct'), ('output', 'nsubjpass'), ('input', 'pobj'), ('known', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[supervised, neural], [neural, network], [network, ,], [,, output], [output, input], [input, known], [known, .]]

>> Trigrams: 
[[supervised, neural, network], [neural, network, ,], [network, ,, output], [,, output, input], [output, input, known], [input, known, .]]

>> Noun Phrases are: 
[the supervised neural network, the output, the input]

>> Named Entities are: 
[]


============================ Sentence 207 =============================

The  predicted output of the neural network is compared with the  actual output. 


>> Tokens are: 
[ , predicted, output, neural, network, compared,  , actual, output, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('predicted', 'VERB'), ('output', 'NOUN'), ('neural', 'ADJ'), ('network', 'NOUN'), ('compared', 'VERB'), (' ', 'SPACE'), ('actual', 'ADJ'), ('output', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nsubj'), ('predicted', 'ROOT'), ('output', 'dobj'), ('neural', 'amod'), ('network', 'pobj'), ('compared', 'ccomp'), (' ', 'nmod'), ('actual', 'amod'), ('output', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , predicted], [predicted, output], [output, neural], [neural, network], [network, compared], [compared,  ], [ , actual], [actual, output], [output, .]]

>> Trigrams: 
[[ , predicted, output], [predicted, output, neural], [output, neural, network], [neural, network, compared], [network, compared,  ], [compared,  , actual], [ , actual, output], [actual, output, .]]

>> Noun Phrases are: 
[output, the neural network, the  actual output]

>> Named Entities are: 
[]


============================ Sentence 208 =============================

Based on the error, the parameters are  changed, and then fed into the neural network again. 


>> Tokens are: 
[Based, error, ,, parameters,  , changed, ,, fed, neural, network, .] 

>> PoS Tags are: 
[('Based', 'VERB'), ('error', 'NOUN'), (',', 'PUNCT'), ('parameters', 'NOUN'), (' ', 'SPACE'), ('changed', 'VERB'), (',', 'PUNCT'), ('fed', 'VERB'), ('neural', 'ADJ'), ('network', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Based', 'prep'), ('error', 'pobj'), (',', 'punct'), ('parameters', 'nsubjpass'), (' ', 'npadvmod'), ('changed', 'ROOT'), (',', 'punct'), ('fed', 'conj'), ('neural', 'amod'), ('network', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Based, error], [error, ,], [,, parameters], [parameters,  ], [ , changed], [changed, ,], [,, fed], [fed, neural], [neural, network], [network, .]]

>> Trigrams: 
[[Based, error, ,], [error, ,, parameters], [,, parameters,  ], [parameters,  , changed], [ , changed, ,], [changed, ,, fed], [,, fed, neural], [fed, neural, network], [neural, network, .]]

>> Noun Phrases are: 
[the error, the parameters, the neural network]

>> Named Entities are: 
[]


============================ Sentence 209 =============================

Fig. 


>> Tokens are: 
[Fig, .] 

>> PoS Tags are: 
[('Fig', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Fig', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Fig, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 210 =============================

19  will summarize the process. 


>> Tokens are: 
[19,  , summarize, process, .] 

>> PoS Tags are: 
[('19', 'NUM'), (' ', 'SPACE'), ('summarize', 'VERB'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('19', 'nummod'), (' ', 'nsubj'), ('summarize', 'ROOT'), ('process', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[19,  ], [ , summarize], [summarize, process], [process, .]]

>> Trigrams: 
[[19,  , summarize], [ , summarize, process], [summarize, process, .]]

>> Noun Phrases are: 
[the process]

>> Named Entities are: 
[('19', 'CARDINAL')]


============================ Sentence 211 =============================

Supervised neural network is  used in feed forward neural network. 


>> Tokens are: 
[Supervised, neural, network,  , feed, forward, neural, network, .] 

>> PoS Tags are: 
[('Supervised', 'ADJ'), ('neural', 'ADJ'), ('network', 'NOUN'), (' ', 'SPACE'), ('feed', 'NOUN'), ('forward', 'ADV'), ('neural', 'ADJ'), ('network', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Supervised', 'amod'), ('neural', 'amod'), ('network', 'nsubj'), (' ', 'attr'), ('feed', 'nmod'), ('forward', 'advmod'), ('neural', 'amod'), ('network', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Supervised, neural], [neural, network], [network,  ], [ , feed], [feed, forward], [forward, neural], [neural, network], [network, .]]

>> Trigrams: 
[[Supervised, neural, network], [neural, network,  ], [network,  , feed], [ , feed, forward], [feed, forward, neural], [forward, neural, network], [neural, network, .]]

>> Noun Phrases are: 
[Supervised neural network, feed forward neural network]

>> Named Entities are: 
[]


============================ Sentence 212 =============================

     


>> Tokens are: 
[    ] 

>> PoS Tags are: 
[('  \xa0 ', 'SPACE')] 

>> Dependency Tags are: 
[('  \xa0 ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 213 =============================

Fig. 


>> Tokens are: 
[Fig, .] 

>> PoS Tags are: 
[('Fig', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Fig', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Fig, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 214 =============================

19. 


>> Tokens are: 
[19, .] 

>> PoS Tags are: 
[('19', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('19', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[19, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('19', 'CARDINAL')]


============================ Sentence 215 =============================

Supervised Neural Network [25]   (2) 


>> Tokens are: 
[Supervised, Neural, Network, [, 25, ],   , (, 2, )] 

>> PoS Tags are: 
[('Supervised', 'PROPN'), ('Neural', 'PROPN'), ('Network', 'PROPN'), ('[', 'PUNCT'), ('25', 'NUM'), (']', 'PUNCT'), ('  ', 'SPACE'), ('(', 'PUNCT'), ('2', 'X'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Supervised', 'amod'), ('Neural', 'compound'), ('Network', 'ROOT'), ('[', 'punct'), ('25', 'appos'), (']', 'punct'), ('  ', 'appos'), ('(', 'punct'), ('2', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Supervised, Neural], [Neural, Network], [Network, [], [[, 25], [25, ]], [],   ], [  , (], [(, 2], [2, )]]

>> Trigrams: 
[[Supervised, Neural, Network], [Neural, Network, [], [Network, [, 25], [[, 25, ]], [25, ],   ], [],   , (], [  , (, 2], [(, 2, )]]

>> Noun Phrases are: 
[Supervised Neural Network]

>> Named Entities are: 
[('25', 'CARDINAL'), ('2', 'CARDINAL')]


============================ Sentence 216 =============================

Unsupervised Neural Network: 


>> Tokens are: 
[Unsupervised, Neural, Network, :] 

>> PoS Tags are: 
[('Unsupervised', 'PROPN'), ('Neural', 'PROPN'), ('Network', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Unsupervised', 'compound'), ('Neural', 'compound'), ('Network', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[Unsupervised, Neural], [Neural, Network], [Network, :]]

>> Trigrams: 
[[Unsupervised, Neural, Network], [Neural, Network, :]]

>> Noun Phrases are: 
[Unsupervised Neural Network]

>> Named Entities are: 
[]


============================ Sentence 217 =============================

Here, the neural network has no prior clue about the output the input. 


>> Tokens are: 
[,, neural, network, prior, clue, output, input, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('neural', 'ADJ'), ('network', 'NOUN'), ('prior', 'ADJ'), ('clue', 'NOUN'), ('output', 'NOUN'), ('input', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('neural', 'amod'), ('network', 'nsubj'), ('prior', 'amod'), ('clue', 'dobj'), ('output', 'pobj'), ('input', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[,, neural], [neural, network], [network, prior], [prior, clue], [clue, output], [output, input], [input, .]]

>> Trigrams: 
[[,, neural, network], [neural, network, prior], [network, prior, clue], [prior, clue, output], [clue, output, input], [output, input, .]]

>> Noun Phrases are: 
[the neural network, no prior clue, the output, the input]

>> Named Entities are: 
[]


============================ Sentence 218 =============================

The  main job of the network is to categorize the data according  to some similarities. 


>> Tokens are: 
[ , main, job, network, categorize, data, according,  , similarities, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('main', 'ADJ'), ('job', 'NOUN'), ('network', 'NOUN'), ('categorize', 'VERB'), ('data', 'NOUN'), ('according', 'VERB'), (' ', 'SPACE'), ('similarities', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'amod'), ('main', 'amod'), ('job', 'nsubj'), ('network', 'pobj'), ('categorize', 'xcomp'), ('data', 'dobj'), ('according', 'prep'), (' ', 'pobj'), ('similarities', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , main], [main, job], [job, network], [network, categorize], [categorize, data], [data, according], [according,  ], [ , similarities], [similarities, .]]

>> Trigrams: 
[[ , main, job], [main, job, network], [job, network, categorize], [network, categorize, data], [categorize, data, according], [data, according,  ], [according,  , similarities], [ , similarities, .]]

>> Noun Phrases are: 
[The  main job, the network, the data, some similarities]

>> Named Entities are: 
[]


============================ Sentence 219 =============================

The neural network checks the  correlation between various inputs and groups them. 


>> Tokens are: 
[neural, network, checks,  , correlation, inputs, groups, .] 

>> PoS Tags are: 
[('neural', 'ADJ'), ('network', 'NOUN'), ('checks', 'VERB'), (' ', 'SPACE'), ('correlation', 'NOUN'), ('inputs', 'NOUN'), ('groups', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('neural', 'amod'), ('network', 'nsubj'), ('checks', 'ROOT'), (' ', 'compound'), ('correlation', 'dobj'), ('inputs', 'pobj'), ('groups', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[neural, network], [network, checks], [checks,  ], [ , correlation], [correlation, inputs], [inputs, groups], [groups, .]]

>> Trigrams: 
[[neural, network, checks], [network, checks,  ], [checks,  , correlation], [ , correlation, inputs], [correlation, inputs, groups], [inputs, groups, .]]

>> Noun Phrases are: 
[The neural network, the  correlation, various inputs, groups, them]

>> Named Entities are: 
[]


============================ Sentence 220 =============================

The  schematic diagram is shown in Fig. 


>> Tokens are: 
[ , schematic, diagram, shown, Fig, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('schematic', 'ADJ'), ('diagram', 'NOUN'), ('shown', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nmod'), ('schematic', 'amod'), ('diagram', 'nsubjpass'), ('shown', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , schematic], [schematic, diagram], [diagram, shown], [shown, Fig], [Fig, .]]

>> Trigrams: 
[[ , schematic, diagram], [schematic, diagram, shown], [diagram, shown, Fig], [shown, Fig, .]]

>> Noun Phrases are: 
[The  schematic diagram, Fig]

>> Named Entities are: 
[('Fig', 'ORG')]


============================ Sentence 221 =============================

20. 


>> Tokens are: 
[20, .] 

>> PoS Tags are: 
[('20', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('20', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[20, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('20', 'CARDINAL')]


============================ Sentence 222 =============================

     


>> Tokens are: 
[    ] 

>> PoS Tags are: 
[('  \xa0 ', 'SPACE')] 

>> Dependency Tags are: 
[('  \xa0 ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 223 =============================

Fig. 


>> Tokens are: 
[Fig, .] 

>> PoS Tags are: 
[('Fig', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Fig', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Fig, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 224 =============================

20. 


>> Tokens are: 
[20, .] 

>> PoS Tags are: 
[('20', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('20', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[20, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('20', 'CARDINAL')]


============================ Sentence 225 =============================

Unsupervised Neural Network [25]   (3) Reinforced Neural Network: 


>> Tokens are: 
[Unsupervised, Neural, Network, [, 25, ],   , (, 3, ), Reinforced, Neural, Network, :] 

>> PoS Tags are: 
[('Unsupervised', 'PROPN'), ('Neural', 'PROPN'), ('Network', 'PROPN'), ('[', 'PUNCT'), ('25', 'NUM'), (']', 'PUNCT'), ('  ', 'SPACE'), ('(', 'PUNCT'), ('3', 'X'), (')', 'PUNCT'), ('Reinforced', 'PROPN'), ('Neural', 'PROPN'), ('Network', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Unsupervised', 'compound'), ('Neural', 'compound'), ('Network', 'ROOT'), ('[', 'punct'), ('25', 'appos'), (']', 'punct'), ('  ', 'appos'), ('(', 'punct'), ('3', 'appos'), (')', 'punct'), ('Reinforced', 'compound'), ('Neural', 'compound'), ('Network', 'appos'), (':', 'punct')]

>> Bigrams: 
[[Unsupervised, Neural], [Neural, Network], [Network, [], [[, 25], [25, ]], [],   ], [  , (], [(, 3], [3, )], [), Reinforced], [Reinforced, Neural], [Neural, Network], [Network, :]]

>> Trigrams: 
[[Unsupervised, Neural, Network], [Neural, Network, [], [Network, [, 25], [[, 25, ]], [25, ],   ], [],   , (], [  , (, 3], [(, 3, )], [3, ), Reinforced], [), Reinforced, Neural], [Reinforced, Neural, Network], [Neural, Network, :]]

>> Noun Phrases are: 
[Unsupervised Neural Network, Reinforced Neural Network]

>> Named Entities are: 
[('25', 'CARDINAL'), ('3', 'CARDINAL')]


============================ Sentence 226 =============================

In reinforced neural network, the network behaves as if a human communicates  with the environment. 


>> Tokens are: 
[reinforced, neural, network, ,, network, behaves, human, communicates,  , environment, .] 

>> PoS Tags are: 
[('reinforced', 'VERB'), ('neural', 'ADJ'), ('network', 'NOUN'), (',', 'PUNCT'), ('network', 'NOUN'), ('behaves', 'VERB'), ('human', 'ADJ'), ('communicates', 'VERB'), (' ', 'SPACE'), ('environment', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('reinforced', 'amod'), ('neural', 'amod'), ('network', 'pobj'), (',', 'punct'), ('network', 'nsubj'), ('behaves', 'ROOT'), ('human', 'amod'), ('communicates', 'advcl'), (' ', 'dobj'), ('environment', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[reinforced, neural], [neural, network], [network, ,], [,, network], [network, behaves], [behaves, human], [human, communicates], [communicates,  ], [ , environment], [environment, .]]

>> Trigrams: 
[[reinforced, neural, network], [neural, network, ,], [network, ,, network], [,, network, behaves], [network, behaves, human], [behaves, human, communicates], [human, communicates,  ], [communicates,  , environment], [ , environment, .]]

>> Noun Phrases are: 
[reinforced neural network, the network, the environment]

>> Named Entities are: 
[]


============================ Sentence 227 =============================

From the environment, a feedback  has been provided to the network acknowledging the fact  that whether the decision taken by the network is right or   Ayon Dey / (IJCSIT) International Journal of Computer Science and Information Technologies, Vol. 


>> Tokens are: 
[environment, ,, feedback,  , provided, network, acknowledging, fact,  , decision, taken, network, right,   , Ayon, Dey, /, (, IJCSIT, ), International, Journal, Computer, Science, Information, Technologies, ,, Vol, .] 

>> PoS Tags are: 
[('environment', 'NOUN'), (',', 'PUNCT'), ('feedback', 'NOUN'), (' ', 'SPACE'), ('provided', 'VERB'), ('network', 'NOUN'), ('acknowledging', 'VERB'), ('fact', 'NOUN'), (' ', 'SPACE'), ('decision', 'NOUN'), ('taken', 'VERB'), ('network', 'NOUN'), ('right', 'ADJ'), ('  ', 'SPACE'), ('Ayon', 'PROPN'), ('Dey', 'PROPN'), ('/', 'SYM'), ('(', 'PUNCT'), ('IJCSIT', 'PROPN'), (')', 'PUNCT'), ('International', 'PROPN'), ('Journal', 'PROPN'), ('Computer', 'PROPN'), ('Science', 'PROPN'), ('Information', 'PROPN'), ('Technologies', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('environment', 'pobj'), (',', 'punct'), ('feedback', 'nsubjpass'), (' ', 'nsubjpass'), ('provided', 'ROOT'), ('network', 'pobj'), ('acknowledging', 'acl'), ('fact', 'dobj'), (' ', 'punct'), ('decision', 'nsubj'), ('taken', 'acl'), ('network', 'pobj'), ('right', 'acomp'), ('  ', 'compound'), ('Ayon', 'compound'), ('Dey', 'conj'), ('/', 'punct'), ('(', 'punct'), ('IJCSIT', 'nmod'), (')', 'punct'), ('International', 'compound'), ('Journal', 'appos'), ('Computer', 'nmod'), ('Science', 'pobj'), ('Information', 'compound'), ('Technologies', 'conj'), (',', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[environment, ,], [,, feedback], [feedback,  ], [ , provided], [provided, network], [network, acknowledging], [acknowledging, fact], [fact,  ], [ , decision], [decision, taken], [taken, network], [network, right], [right,   ], [  , Ayon], [Ayon, Dey], [Dey, /], [/, (], [(, IJCSIT], [IJCSIT, )], [), International], [International, Journal], [Journal, Computer], [Computer, Science], [Science, Information], [Information, Technologies], [Technologies, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[environment, ,, feedback], [,, feedback,  ], [feedback,  , provided], [ , provided, network], [provided, network, acknowledging], [network, acknowledging, fact], [acknowledging, fact,  ], [fact,  , decision], [ , decision, taken], [decision, taken, network], [taken, network, right], [network, right,   ], [right,   , Ayon], [  , Ayon, Dey], [Ayon, Dey, /], [Dey, /, (], [/, (, IJCSIT], [(, IJCSIT, )], [IJCSIT, ), International], [), International, Journal], [International, Journal, Computer], [Journal, Computer, Science], [Computer, Science, Information], [Science, Information, Technologies], [Information, Technologies, ,], [Technologies, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[the environment, a feedback, the network, the fact, the decision, the network, IJCSIT) International Journal, Computer Science, Information Technologies]

>> Named Entities are: 
[('Ayon Dey', 'ORG'), ('International Journal of Computer Science and Information Technologies', 'ORG')]


============================ Sentence 228 =============================

7 (3) , 2016, 1174-1179  www.ijcsit.com 


>> Tokens are: 
[7, (, 3, ), ,, 2016, ,, 1174, -, 1179,  , www.ijcsit.com] 

>> PoS Tags are: 
[('7', 'NUM'), ('(', 'PUNCT'), ('3', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('2016', 'NUM'), (',', 'PUNCT'), ('1174', 'NUM'), ('-', 'SYM'), ('1179', 'NUM'), (' ', 'SPACE'), ('www.ijcsit.com', 'X')] 

>> Dependency Tags are: 
[('7', 'nummod'), ('(', 'punct'), ('3', 'appos'), (')', 'punct'), (',', 'punct'), ('2016', 'npadvmod'), (',', 'punct'), ('1174', 'appos'), ('-', 'punct'), ('1179', 'nummod'), (' ', 'ROOT'), ('www.ijcsit.com', 'npadvmod')]

>> Bigrams: 
[[7, (], [(, 3], [3, )], [), ,], [,, 2016], [2016, ,], [,, 1174], [1174, -], [-, 1179], [1179,  ], [ , www.ijcsit.com]]

>> Trigrams: 
[[7, (, 3], [(, 3, )], [3, ), ,], [), ,, 2016], [,, 2016, ,], [2016, ,, 1174], [,, 1174, -], [1174, -, 1179], [-, 1179,  ], [1179,  , www.ijcsit.com]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('7', 'CARDINAL'), ('3', 'CARDINAL'), ('2016', 'DATE'), ('1174-1179', 'DATE')]


============================ Sentence 229 =============================

1178    wrong. 


>> Tokens are: 
[1178,    , wrong, .] 

>> PoS Tags are: 
[('1178', 'NUM'), ('   ', 'SPACE'), ('wrong', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1178', 'nummod'), ('   ', 'nsubj'), ('wrong', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[1178,    ], [   , wrong], [wrong, .]]

>> Trigrams: 
[[1178,    , wrong], [   , wrong, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1178', 'DATE')]


============================ Sentence 230 =============================

If the decision is right, the connections which points  to that particular output is strengthened. 


>> Tokens are: 
[decision, right, ,, connections, points,  , particular, output, strengthened, .] 

>> PoS Tags are: 
[('decision', 'NOUN'), ('right', 'ADJ'), (',', 'PUNCT'), ('connections', 'NOUN'), ('points', 'VERB'), (' ', 'SPACE'), ('particular', 'ADJ'), ('output', 'NOUN'), ('strengthened', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('decision', 'nsubj'), ('right', 'acomp'), (',', 'punct'), ('connections', 'nsubjpass'), ('points', 'relcl'), (' ', 'dobj'), ('particular', 'amod'), ('output', 'pobj'), ('strengthened', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[decision, right], [right, ,], [,, connections], [connections, points], [points,  ], [ , particular], [particular, output], [output, strengthened], [strengthened, .]]

>> Trigrams: 
[[decision, right, ,], [right, ,, connections], [,, connections, points], [connections, points,  ], [points,  , particular], [ , particular, output], [particular, output, strengthened], [output, strengthened, .]]

>> Noun Phrases are: 
[the decision, the connections, that particular output]

>> Named Entities are: 
[]


============================ Sentence 231 =============================

The connections  are weakened otherwise. 


>> Tokens are: 
[connections,  , weakened, .] 

>> PoS Tags are: 
[('connections', 'NOUN'), (' ', 'SPACE'), ('weakened', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('connections', 'nsubjpass'), (' ', 'nsubjpass'), ('weakened', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[connections,  ], [ , weakened], [weakened, .]]

>> Trigrams: 
[[connections,  , weakened], [ , weakened, .]]

>> Noun Phrases are: 
[The connections]

>> Named Entities are: 
[]


============================ Sentence 232 =============================

The network has no previous  information about the output. 


>> Tokens are: 
[network, previous,  , information, output, .] 

>> PoS Tags are: 
[('network', 'NOUN'), ('previous', 'ADJ'), (' ', 'SPACE'), ('information', 'NOUN'), ('output', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('network', 'nsubj'), ('previous', 'amod'), (' ', 'compound'), ('information', 'dobj'), ('output', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[network, previous], [previous,  ], [ , information], [information, output], [output, .]]

>> Trigrams: 
[[network, previous,  ], [previous,  , information], [ , information, output], [information, output, .]]

>> Noun Phrases are: 
[The network, no previous  information, the output]

>> Named Entities are: 
[]


============================ Sentence 233 =============================

Reinforced neural network is  represented in Fig. 


>> Tokens are: 
[Reinforced, neural, network,  , represented, Fig, .] 

>> PoS Tags are: 
[('Reinforced', 'VERB'), ('neural', 'ADJ'), ('network', 'NOUN'), (' ', 'SPACE'), ('represented', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Reinforced', 'amod'), ('neural', 'amod'), ('network', 'nsubjpass'), (' ', 'nsubjpass'), ('represented', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Reinforced, neural], [neural, network], [network,  ], [ , represented], [represented, Fig], [Fig, .]]

>> Trigrams: 
[[Reinforced, neural, network], [neural, network,  ], [network,  , represented], [ , represented, Fig], [represented, Fig, .]]

>> Noun Phrases are: 
[Reinforced neural network, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 234 =============================

21. 


>> Tokens are: 
[21, .] 

>> PoS Tags are: 
[('21', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('21', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[21, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('21', 'CARDINAL')]


============================ Sentence 235 =============================

  (4)    Fig. 21. 


>> Tokens are: 
[  , (, 4, ),    , Fig, ., 21, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('(', 'PUNCT'), ('4', 'NUM'), (')', 'PUNCT'), (' \xa0 ', 'SPACE'), ('Fig', 'PROPN'), ('.', 'PUNCT'), ('21', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('(', 'punct'), ('4', 'appos'), (')', 'punct'), (' \xa0 ', 'compound'), ('Fig', 'appos'), ('.', 'punct'), ('21', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[  , (], [(, 4], [4, )], [),    ], [   , Fig], [Fig, .], [., 21], [21, .]]

>> Trigrams: 
[[  , (, 4], [(, 4, )], [4, ),    ], [),    , Fig], [   , Fig, .], [Fig, ., 21], [., 21, .]]

>> Noun Phrases are: 
[   Fig]

>> Named Entities are: 
[('4', 'CARDINAL'), ('Fig', 'PERSON'), ('21', 'CARDINAL')]


============================ Sentence 236 =============================

Reinforced Neural Network [25]   H. Instance-Based Learning    


>> Tokens are: 
[Reinforced, Neural, Network, [, 25, ],   , H., Instance, -, Based, Learning,   ] 

>> PoS Tags are: 
[('Reinforced', 'PROPN'), ('Neural', 'PROPN'), ('Network', 'PROPN'), ('[', 'PUNCT'), ('25', 'NUM'), (']', 'PUNCT'), ('  ', 'SPACE'), ('H.', 'PROPN'), ('Instance', 'PROPN'), ('-', 'PUNCT'), ('Based', 'VERB'), ('Learning', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Reinforced', 'compound'), ('Neural', 'compound'), ('Network', 'ROOT'), ('[', 'punct'), ('25', 'appos'), (']', 'punct'), ('  ', 'appos'), ('H.', 'compound'), ('Instance', 'compound'), ('-', 'punct'), ('Based', 'amod'), ('Learning', 'appos'), ('  ', 'punct')]

>> Bigrams: 
[[Reinforced, Neural], [Neural, Network], [Network, [], [[, 25], [25, ]], [],   ], [  , H.], [H., Instance], [Instance, -], [-, Based], [Based, Learning], [Learning,   ]]

>> Trigrams: 
[[Reinforced, Neural, Network], [Neural, Network, [], [Network, [, 25], [[, 25, ]], [25, ],   ], [],   , H.], [  , H., Instance], [H., Instance, -], [Instance, -, Based], [-, Based, Learning], [Based, Learning,   ]]

>> Noun Phrases are: 
[Reinforced Neural Network, H. Instance-Based Learning]

>> Named Entities are: 
[('25', 'CARDINAL'), ('H. Instance-Based Learning', 'ORG')]


============================ Sentence 237 =============================

In instance-based learning, the learner learns a particular  type of pattern. 


>> Tokens are: 
[instance, -, based, learning, ,, learner, learns, particular,  , type, pattern, .] 

>> PoS Tags are: 
[('instance', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('learning', 'NOUN'), (',', 'PUNCT'), ('learner', 'NOUN'), ('learns', 'VERB'), ('particular', 'ADJ'), (' ', 'SPACE'), ('type', 'NOUN'), ('pattern', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('instance', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('learning', 'pobj'), (',', 'punct'), ('learner', 'nsubj'), ('learns', 'ROOT'), ('particular', 'amod'), (' ', 'compound'), ('type', 'dobj'), ('pattern', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[instance, -], [-, based], [based, learning], [learning, ,], [,, learner], [learner, learns], [learns, particular], [particular,  ], [ , type], [type, pattern], [pattern, .]]

>> Trigrams: 
[[instance, -, based], [-, based, learning], [based, learning, ,], [learning, ,, learner], [,, learner, learns], [learner, learns, particular], [learns, particular,  ], [particular,  , type], [ , type, pattern], [type, pattern, .]]

>> Noun Phrases are: 
[instance-based learning, the learner, a particular  type, pattern]

>> Named Entities are: 
[]


============================ Sentence 238 =============================

It tries to apply the same pattern to the  newly fed data. 


>> Tokens are: 
[tries, apply, pattern,  , newly, fed, data, .] 

>> PoS Tags are: 
[('tries', 'VERB'), ('apply', 'VERB'), ('pattern', 'NOUN'), (' ', 'SPACE'), ('newly', 'ADV'), ('fed', 'VERB'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('tries', 'ROOT'), ('apply', 'xcomp'), ('pattern', 'dobj'), (' ', 'nmod'), ('newly', 'advmod'), ('fed', 'amod'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[tries, apply], [apply, pattern], [pattern,  ], [ , newly], [newly, fed], [fed, data], [data, .]]

>> Trigrams: 
[[tries, apply, pattern], [apply, pattern,  ], [pattern,  , newly], [ , newly, fed], [newly, fed, data], [fed, data, .]]

>> Noun Phrases are: 
[It, the same pattern, the  newly fed data]

>> Named Entities are: 
[]


============================ Sentence 239 =============================

Hence the name instance-based. 


>> Tokens are: 
[instance, -, based, .] 

>> PoS Tags are: 
[('instance', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('instance', 'npadvmod'), ('-', 'punct'), ('based', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[instance, -], [-, based], [based, .]]

>> Trigrams: 
[[instance, -, based], [-, based, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 240 =============================

It is a type  of lazy learner which waits for the test data to arrive and  then act on it together with training data. 


>> Tokens are: 
[type,  , lazy, learner, waits, test, data, arrive,  , act, training, data, .] 

>> PoS Tags are: 
[('type', 'NOUN'), (' ', 'SPACE'), ('lazy', 'ADJ'), ('learner', 'NOUN'), ('waits', 'VERB'), ('test', 'NOUN'), ('data', 'NOUN'), ('arrive', 'VERB'), (' ', 'SPACE'), ('act', 'VERB'), ('training', 'NOUN'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('type', 'attr'), (' ', 'appos'), ('lazy', 'amod'), ('learner', 'pobj'), ('waits', 'relcl'), ('test', 'compound'), ('data', 'nsubj'), ('arrive', 'advcl'), (' ', 'conj'), ('act', 'dep'), ('training', 'compound'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[type,  ], [ , lazy], [lazy, learner], [learner, waits], [waits, test], [test, data], [data, arrive], [arrive,  ], [ , act], [act, training], [training, data], [data, .]]

>> Trigrams: 
[[type,  , lazy], [ , lazy, learner], [lazy, learner, waits], [learner, waits, test], [waits, test, data], [test, data, arrive], [data, arrive,  ], [arrive,  , act], [ , act, training], [act, training, data], [training, data, .]]

>> Noun Phrases are: 
[It, a type, lazy learner, the test data, it, training data]

>> Named Entities are: 
[]


============================ Sentence 241 =============================

The complexity of  the learning algorithm increases with the size of the data. 


>> Tokens are: 
[complexity,  , learning, algorithm, increases, size, data, .] 

>> PoS Tags are: 
[('complexity', 'NOUN'), (' ', 'SPACE'), ('learning', 'VERB'), ('algorithm', 'NOUN'), ('increases', 'VERB'), ('size', 'NOUN'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('complexity', 'nsubj'), (' ', 'pobj'), ('learning', 'amod'), ('algorithm', 'nsubj'), ('increases', 'ROOT'), ('size', 'pobj'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[complexity,  ], [ , learning], [learning, algorithm], [algorithm, increases], [increases, size], [size, data], [data, .]]

>> Trigrams: 
[[complexity,  , learning], [ , learning, algorithm], [learning, algorithm, increases], [algorithm, increases, size], [increases, size, data], [size, data, .]]

>> Noun Phrases are: 
[The complexity, the learning algorithm, the size, the data]

>> Named Entities are: 
[]


============================ Sentence 242 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 243 =============================

Given below is a well-known example of instance-based  learning which is k-nearest neighbor [26]. 


>> Tokens are: 
[Given, -, known, example, instance, -, based,  , learning, k, -, nearest, neighbor, [, 26, ], .] 

>> PoS Tags are: 
[('Given', 'VERB'), ('-', 'PUNCT'), ('known', 'VERB'), ('example', 'NOUN'), ('instance', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), (' ', 'SPACE'), ('learning', 'VERB'), ('k', 'ADV'), ('-', 'PUNCT'), ('nearest', 'ADJ'), ('neighbor', 'NOUN'), ('[', 'PUNCT'), ('26', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Given', 'prep'), ('-', 'punct'), ('known', 'amod'), ('example', 'attr'), ('instance', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), (' ', 'compound'), ('learning', 'pobj'), ('k', 'advmod'), ('-', 'punct'), ('nearest', 'amod'), ('neighbor', 'attr'), ('[', 'punct'), ('26', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Given, -], [-, known], [known, example], [example, instance], [instance, -], [-, based], [based,  ], [ , learning], [learning, k], [k, -], [-, nearest], [nearest, neighbor], [neighbor, [], [[, 26], [26, ]], [], .]]

>> Trigrams: 
[[Given, -, known], [-, known, example], [known, example, instance], [example, instance, -], [instance, -, based], [-, based,  ], [based,  , learning], [ , learning, k], [learning, k, -], [k, -, nearest], [-, nearest, neighbor], [nearest, neighbor, [], [neighbor, [, 26], [[, 26, ]], [26, ], .]]

>> Noun Phrases are: 
[a well-known example, k-nearest neighbor]

>> Named Entities are: 
[('26', 'CARDINAL')]


============================ Sentence 244 =============================

  (1) K-Nearest Neighbor: 


>> Tokens are: 
[  , (, 1, ), K, -, Nearest, Neighbor, :] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('(', 'PUNCT'), ('1', 'X'), (')', 'PUNCT'), ('K', 'PROPN'), ('-', 'PUNCT'), ('Nearest', 'PROPN'), ('Neighbor', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('(', 'punct'), ('1', 'appos'), (')', 'punct'), ('K', 'compound'), ('-', 'punct'), ('Nearest', 'compound'), ('Neighbor', 'appos'), (':', 'punct')]

>> Bigrams: 
[[  , (], [(, 1], [1, )], [), K], [K, -], [-, Nearest], [Nearest, Neighbor], [Neighbor, :]]

>> Trigrams: 
[[  , (, 1], [(, 1, )], [1, ), K], [), K, -], [K, -, Nearest], [-, Nearest, Neighbor], [Nearest, Neighbor, :]]

>> Noun Phrases are: 
[K-Nearest Neighbor]

>> Named Entities are: 
[('1', 'CARDINAL'), ('K-Nearest Neighbor', 'ORG')]


============================ Sentence 245 =============================

In k-nearest neighbor (or KNN), the training data (which is well-labeled) is fed into the  learner. 


>> Tokens are: 
[k, -, nearest, neighbor, (, KNN, ), ,, training, data, (, -, labeled, ), fed,  , learner, .] 

>> PoS Tags are: 
[('k', 'NOUN'), ('-', 'PUNCT'), ('nearest', 'ADJ'), ('neighbor', 'NOUN'), ('(', 'PUNCT'), ('KNN', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('training', 'NOUN'), ('data', 'NOUN'), ('(', 'PUNCT'), ('-', 'PUNCT'), ('labeled', 'VERB'), (')', 'PUNCT'), ('fed', 'VERB'), (' ', 'SPACE'), ('learner', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('k', 'advmod'), ('-', 'punct'), ('nearest', 'amod'), ('neighbor', 'pobj'), ('(', 'punct'), ('KNN', 'conj'), (')', 'punct'), (',', 'punct'), ('training', 'compound'), ('data', 'nsubjpass'), ('(', 'punct'), ('-', 'punct'), ('labeled', 'acomp'), (')', 'punct'), ('fed', 'ROOT'), (' ', 'compound'), ('learner', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[k, -], [-, nearest], [nearest, neighbor], [neighbor, (], [(, KNN], [KNN, )], [), ,], [,, training], [training, data], [data, (], [(, -], [-, labeled], [labeled, )], [), fed], [fed,  ], [ , learner], [learner, .]]

>> Trigrams: 
[[k, -, nearest], [-, nearest, neighbor], [nearest, neighbor, (], [neighbor, (, KNN], [(, KNN, )], [KNN, ), ,], [), ,, training], [,, training, data], [training, data, (], [data, (, -], [(, -, labeled], [-, labeled, )], [labeled, ), fed], [), fed,  ], [fed,  , learner], [ , learner, .]]

>> Noun Phrases are: 
[k-nearest neighbor, KNN, the training data, the  learner]

>> Named Entities are: 
[('KNN', 'ORG')]


============================ Sentence 246 =============================

When the test data is introduced to the learner, it  compares both the data. 


>> Tokens are: 
[test, data, introduced, learner, ,,  , compares, data, .] 

>> PoS Tags are: 
[('test', 'NOUN'), ('data', 'NOUN'), ('introduced', 'VERB'), ('learner', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('compares', 'VERB'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('test', 'compound'), ('data', 'nsubjpass'), ('introduced', 'advcl'), ('learner', 'pobj'), (',', 'punct'), (' ', 'appos'), ('compares', 'ROOT'), ('data', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[test, data], [data, introduced], [introduced, learner], [learner, ,], [,,  ], [ , compares], [compares, data], [data, .]]

>> Trigrams: 
[[test, data, introduced], [data, introduced, learner], [introduced, learner, ,], [learner, ,,  ], [,,  , compares], [ , compares, data], [compares, data, .]]

>> Noun Phrases are: 
[the test data, the learner, it, both the data]

>> Named Entities are: 
[]


============================ Sentence 247 =============================

k most correlated data is taken from  training set. 


>> Tokens are: 
[k, correlated, data, taken,  , training, set, .] 

>> PoS Tags are: 
[('k', 'DET'), ('correlated', 'ADJ'), ('data', 'NOUN'), ('taken', 'VERB'), (' ', 'SPACE'), ('training', 'NOUN'), ('set', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('k', 'meta'), ('correlated', 'amod'), ('data', 'nsubjpass'), ('taken', 'ROOT'), (' ', 'compound'), ('training', 'compound'), ('set', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[k, correlated], [correlated, data], [data, taken], [taken,  ], [ , training], [training, set], [set, .]]

>> Trigrams: 
[[k, correlated, data], [correlated, data, taken], [data, taken,  ], [taken,  , training], [ , training, set], [training, set, .]]

>> Noun Phrases are: 
[most correlated data,  training set]

>> Named Entities are: 
[]


============================ Sentence 248 =============================

The majority of k is taken which serves as the  new class for the test data [27]. 


>> Tokens are: 
[majority, k, taken, serves,  , new, class, test, data, [, 27, ], .] 

>> PoS Tags are: 
[('majority', 'NOUN'), ('k', 'NOUN'), ('taken', 'VERB'), ('serves', 'VERB'), (' ', 'SPACE'), ('new', 'ADJ'), ('class', 'NOUN'), ('test', 'NOUN'), ('data', 'NOUN'), ('[', 'PUNCT'), ('27', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('majority', 'nsubjpass'), ('k', 'pobj'), ('taken', 'ROOT'), ('serves', 'advcl'), (' ', 'nmod'), ('new', 'amod'), ('class', 'pobj'), ('test', 'compound'), ('data', 'pobj'), ('[', 'punct'), ('27', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[majority, k], [k, taken], [taken, serves], [serves,  ], [ , new], [new, class], [class, test], [test, data], [data, [], [[, 27], [27, ]], [], .]]

>> Trigrams: 
[[majority, k, taken], [k, taken, serves], [taken, serves,  ], [serves,  , new], [ , new, class], [new, class, test], [class, test, data], [test, data, [], [data, [, 27], [[, 27, ]], [27, ], .]]

>> Noun Phrases are: 
[The majority, k, the  new class, the test data]

>> Named Entities are: 
[('27', 'CARDINAL')]


============================ Sentence 249 =============================

The pseudo code for KNN  is given in Fig. 


>> Tokens are: 
[pseudo, code, KNN,  , given, Fig, .] 

>> PoS Tags are: 
[('pseudo', 'NOUN'), ('code', 'NOUN'), ('KNN', 'PROPN'), (' ', 'SPACE'), ('given', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('pseudo', 'compound'), ('code', 'nsubjpass'), ('KNN', 'compound'), (' ', 'pobj'), ('given', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[pseudo, code], [code, KNN], [KNN,  ], [ , given], [given, Fig], [Fig, .]]

>> Trigrams: 
[[pseudo, code, KNN], [code, KNN,  ], [KNN,  , given], [ , given, Fig], [given, Fig, .]]

>> Noun Phrases are: 
[The pseudo code, Fig]

>> Named Entities are: 
[('KNN', 'ORG'), ('Fig', 'PERSON')]


============================ Sentence 250 =============================

22. 


>> Tokens are: 
[22, .] 

>> PoS Tags are: 
[('22', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('22', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[22, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('22', 'CARDINAL')]


============================ Sentence 251 =============================

     


>> Tokens are: 
[    ] 

>> PoS Tags are: 
[('  \xa0 ', 'SPACE')] 

>> Dependency Tags are: 
[('  \xa0 ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 252 =============================

Fig. 


>> Tokens are: 
[Fig, .] 

>> PoS Tags are: 
[('Fig', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Fig', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Fig, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 253 =============================

22. 


>> Tokens are: 
[22, .] 

>> PoS Tags are: 
[('22', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('22', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[22, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('22', 'CARDINAL')]


============================ Sentence 254 =============================

Pseudo code for K-Nearest Neighbor [28]      III. 


>> Tokens are: 
[Pseudo, code, K, -, Nearest, Neighbor, [, 28, ],      , III, .] 

>> PoS Tags are: 
[('Pseudo', 'NOUN'), ('code', 'NOUN'), ('K', 'PROPN'), ('-', 'PUNCT'), ('Nearest', 'PROPN'), ('Neighbor', 'PROPN'), ('[', 'PUNCT'), ('28', 'NUM'), (']', 'PUNCT'), ('     ', 'SPACE'), ('III', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Pseudo', 'compound'), ('code', 'ROOT'), ('K', 'compound'), ('-', 'punct'), ('Nearest', 'compound'), ('Neighbor', 'pobj'), ('[', 'punct'), ('28', 'appos'), (']', 'punct'), ('     ', 'compound'), ('III', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Pseudo, code], [code, K], [K, -], [-, Nearest], [Nearest, Neighbor], [Neighbor, [], [[, 28], [28, ]], [],      ], [     , III], [III, .]]

>> Trigrams: 
[[Pseudo, code, K], [code, K, -], [K, -, Nearest], [-, Nearest, Neighbor], [Nearest, Neighbor, [], [Neighbor, [, 28], [[, 28, ]], [28, ],      ], [],      , III], [     , III, .]]

>> Noun Phrases are: 
[Pseudo code, K-Nearest Neighbor,      III]

>> Named Entities are: 
[('K-Nearest Neighbor', 'ORG'), ('28', 'CARDINAL')]


============================ Sentence 255 =============================

CONCLUSION    


>> Tokens are: 
[CONCLUSION,   ] 

>> PoS Tags are: 
[('CONCLUSION', 'NOUN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('CONCLUSION', 'ROOT'), ('  ', 'punct')]

>> Bigrams: 
[[CONCLUSION,   ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[CONCLUSION]

>> Named Entities are: 
[]


============================ Sentence 256 =============================

This paper surveys various machine learning algorithms. 


>> Tokens are: 
[paper, surveys, machine, learning, algorithms, .] 

>> PoS Tags are: 
[('paper', 'NOUN'), ('surveys', 'VERB'), ('machine', 'NOUN'), ('learning', 'VERB'), ('algorithms', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('paper', 'compound'), ('surveys', 'ROOT'), ('machine', 'npadvmod'), ('learning', 'compound'), ('algorithms', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[paper, surveys], [surveys, machine], [machine, learning], [learning, algorithms], [algorithms, .]]

>> Trigrams: 
[[paper, surveys, machine], [surveys, machine, learning], [machine, learning, algorithms], [learning, algorithms, .]]

>> Noun Phrases are: 
[various machine learning algorithms]

>> Named Entities are: 
[]


============================ Sentence 257 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 258 =============================

Today each and every person is using machine learning  knowingly or unknowingly. 


>> Tokens are: 
[Today, person, machine, learning,  , knowingly, unknowingly, .] 

>> PoS Tags are: 
[('Today', 'NOUN'), ('person', 'NOUN'), ('machine', 'NOUN'), ('learning', 'VERB'), (' ', 'SPACE'), ('knowingly', 'ADV'), ('unknowingly', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Today', 'npadvmod'), ('person', 'nsubj'), ('machine', 'dobj'), ('learning', 'xcomp'), (' ', 'dobj'), ('knowingly', 'advmod'), ('unknowingly', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Today, person], [person, machine], [machine, learning], [learning,  ], [ , knowingly], [knowingly, unknowingly], [unknowingly, .]]

>> Trigrams: 
[[Today, person, machine], [person, machine, learning], [machine, learning,  ], [learning,  , knowingly], [ , knowingly, unknowingly], [knowingly, unknowingly, .]]

>> Noun Phrases are: 
[every person, machine]

>> Named Entities are: 
[('Today', 'DATE')]


============================ Sentence 259 =============================

From getting a recommended  product in online shopping to updating photos in social  networking sites. 


>> Tokens are: 
[getting, recommended,  , product, online, shopping, updating, photos, social,  , networking, sites, .] 

>> PoS Tags are: 
[('getting', 'VERB'), ('recommended', 'VERB'), (' ', 'SPACE'), ('product', 'NOUN'), ('online', 'ADJ'), ('shopping', 'NOUN'), ('updating', 'VERB'), ('photos', 'NOUN'), ('social', 'ADJ'), (' ', 'SPACE'), ('networking', 'NOUN'), ('sites', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('getting', 'pcomp'), ('recommended', 'amod'), (' ', 'compound'), ('product', 'dobj'), ('online', 'amod'), ('shopping', 'pobj'), ('updating', 'pcomp'), ('photos', 'dobj'), ('social', 'amod'), (' ', 'compound'), ('networking', 'compound'), ('sites', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[getting, recommended], [recommended,  ], [ , product], [product, online], [online, shopping], [shopping, updating], [updating, photos], [photos, social], [social,  ], [ , networking], [networking, sites], [sites, .]]

>> Trigrams: 
[[getting, recommended,  ], [recommended,  , product], [ , product, online], [product, online, shopping], [online, shopping, updating], [shopping, updating, photos], [updating, photos, social], [photos, social,  ], [social,  , networking], [ , networking, sites], [networking, sites, .]]

>> Noun Phrases are: 
[a recommended  product, online shopping, photos, social  networking sites]

>> Named Entities are: 
[]


============================ Sentence 260 =============================

This paper gives an introduction to most  of the popular machine learning algorithms. 


>> Tokens are: 
[paper, gives, introduction,  , popular, machine, learning, algorithms, .] 

>> PoS Tags are: 
[('paper', 'NOUN'), ('gives', 'VERB'), ('introduction', 'NOUN'), (' ', 'SPACE'), ('popular', 'ADJ'), ('machine', 'NOUN'), ('learning', 'VERB'), ('algorithms', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('paper', 'nsubj'), ('gives', 'ROOT'), ('introduction', 'dobj'), (' ', 'pobj'), ('popular', 'amod'), ('machine', 'pobj'), ('learning', 'acl'), ('algorithms', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[paper, gives], [gives, introduction], [introduction,  ], [ , popular], [popular, machine], [machine, learning], [learning, algorithms], [algorithms, .]]

>> Trigrams: 
[[paper, gives, introduction], [gives, introduction,  ], [introduction,  , popular], [ , popular, machine], [popular, machine, learning], [machine, learning, algorithms], [learning, algorithms, .]]

>> Noun Phrases are: 
[This paper, an introduction, the popular machine, algorithms]

>> Named Entities are: 
[]


============================ Sentence 261 =============================

  REFERENCES  [1] W. Richert, L. P. Coelho, “Building Machine Learning Systems with   Python”, Packt Publishing Ltd., ISBN 978-1-78216-140-0   


>> Tokens are: 
[  , REFERENCES,  , [, 1, ], W., Richert, ,, L., P., Coelho, ,, “, Building, Machine, Learning, Systems,   , Python, ”, ,, Packt, Publishing, Ltd., ,, ISBN, 978, -, 1, -, 78216, -, 140, -, 0,  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('REFERENCES', 'NOUN'), (' ', 'SPACE'), ('[', 'PUNCT'), ('1', 'X'), (']', 'PUNCT'), ('W.', 'PROPN'), ('Richert', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('P.', 'PROPN'), ('Coelho', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Building', 'VERB'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('Systems', 'PROPN'), ('  ', 'SPACE'), ('Python', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Packt', 'PROPN'), ('Publishing', 'PROPN'), ('Ltd.', 'PROPN'), (',', 'PUNCT'), ('ISBN', 'PROPN'), ('978', 'NUM'), ('-', 'SYM'), ('1', 'NUM'), ('-', 'PUNCT'), ('78216', 'NUM'), ('-', 'SYM'), ('140', 'NUM'), ('-', 'SYM'), ('0', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'nummod'), ('REFERENCES', 'compound'), (' ', 'nsubj'), ('[', 'punct'), ('1', 'appos'), (']', 'punct'), ('W.', 'compound'), ('Richert', 'appos'), (',', 'punct'), ('L.', 'compound'), ('P.', 'compound'), ('Coelho', 'appos'), (',', 'punct'), ('“', 'punct'), ('Building', 'compound'), ('Machine', 'compound'), ('Learning', 'compound'), ('Systems', 'appos'), ('  ', 'compound'), ('Python', 'pobj'), ('”', 'punct'), (',', 'punct'), ('Packt', 'compound'), ('Publishing', 'compound'), ('Ltd.', 'appos'), (',', 'punct'), ('ISBN', 'ROOT'), ('978', 'npadvmod'), ('-', 'punct'), ('1', 'prep'), ('-', 'punct'), ('78216', 'prep'), ('-', 'punct'), ('140', 'prep'), ('-', 'punct'), ('0', 'nummod'), (' ', 'dobj')]

>> Bigrams: 
[[  , REFERENCES], [REFERENCES,  ], [ , [], [[, 1], [1, ]], [], W.], [W., Richert], [Richert, ,], [,, L.], [L., P.], [P., Coelho], [Coelho, ,], [,, “], [“, Building], [Building, Machine], [Machine, Learning], [Learning, Systems], [Systems,   ], [  , Python], [Python, ”], [”, ,], [,, Packt], [Packt, Publishing], [Publishing, Ltd.], [Ltd., ,], [,, ISBN], [ISBN, 978], [978, -], [-, 1], [1, -], [-, 78216], [78216, -], [-, 140], [140, -], [-, 0], [0,  ]]

>> Trigrams: 
[[  , REFERENCES,  ], [REFERENCES,  , [], [ , [, 1], [[, 1, ]], [1, ], W.], [], W., Richert], [W., Richert, ,], [Richert, ,, L.], [,, L., P.], [L., P., Coelho], [P., Coelho, ,], [Coelho, ,, “], [,, “, Building], [“, Building, Machine], [Building, Machine, Learning], [Machine, Learning, Systems], [Learning, Systems,   ], [Systems,   , Python], [  , Python, ”], [Python, ”, ,], [”, ,, Packt], [,, Packt, Publishing], [Packt, Publishing, Ltd.], [Publishing, Ltd., ,], [Ltd., ,, ISBN], [,, ISBN, 978], [ISBN, 978, -], [978, -, 1], [-, 1, -], [1, -, 78216], [-, 78216, -], [78216, -, 140], [-, 140, -], [140, -, 0], [-, 0,  ]]

>> Noun Phrases are: 
[W. Richert, L. P. Coelho, Building Machine Learning Systems,   Python, Packt Publishing Ltd.]

>> Named Entities are: 
[('W. Richert', 'PERSON'), ('L. P. Coelho', 'PERSON'), ('Building Machine Learning Systems', 'WORK_OF_ART'), ('Packt Publishing Ltd.', 'ORG'), ('ISBN', 'ORG'), ('978', 'CARDINAL')]


============================ Sentence 262 =============================

[2] M. Welling, “A First Encounter with Machine Learning”  [3] M. Bowles, “Machine Learning in Python: Essential Techniques for   Predictive Analytics”, John Wiley & Sons Inc., ISBN: 978-1-118- 96174-2   [4] S.B. Kotsiantis, “Supervised Machine Learning: 


>> Tokens are: 
[[, 2, ], M., Welling, ,, “, Encounter, Machine, Learning, ”,  , [, 3, ], M., Bowles, ,, “, Machine, Learning, Python, :, Essential, Techniques,   , Predictive, Analytics, ”, ,, John, Wiley, &, Sons, Inc., ,, ISBN, :, 978, -, 1, -, 118-, 96174, -, 2,   , [, 4, ], S.B., Kotsiantis, ,, “, Supervised, Machine, Learning, :] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('2', 'NUM'), (']', 'PUNCT'), ('M.', 'PROPN'), ('Welling', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Encounter', 'PROPN'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('”', 'PUNCT'), (' ', 'SPACE'), ('[', 'PUNCT'), ('3', 'X'), (']', 'PUNCT'), ('M.', 'PROPN'), ('Bowles', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Machine', 'NOUN'), ('Learning', 'PROPN'), ('Python', 'PROPN'), (':', 'PUNCT'), ('Essential', 'PROPN'), ('Techniques', 'PROPN'), ('  ', 'SPACE'), ('Predictive', 'PROPN'), ('Analytics', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('John', 'PROPN'), ('Wiley', 'PROPN'), ('&', 'CCONJ'), ('Sons', 'PROPN'), ('Inc.', 'PROPN'), (',', 'PUNCT'), ('ISBN', 'NOUN'), (':', 'PUNCT'), ('978', 'NUM'), ('-', 'SYM'), ('1', 'NUM'), ('-', 'SYM'), ('118-', 'NUM'), ('96174', 'NUM'), ('-', 'SYM'), ('2', 'NUM'), ('  ', 'SPACE'), ('[', 'PUNCT'), ('4', 'NUM'), (']', 'PUNCT'), ('S.B.', 'PROPN'), ('Kotsiantis', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Supervised', 'ADJ'), ('Machine', 'NOUN'), ('Learning', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('2', 'meta'), (']', 'punct'), ('M.', 'compound'), ('Welling', 'ROOT'), (',', 'punct'), ('“', 'punct'), ('Encounter', 'appos'), ('Machine', 'compound'), ('Learning', 'pobj'), ('”', 'punct'), (' ', 'appos'), ('[', 'punct'), ('3', 'appos'), (']', 'punct'), ('M.', 'compound'), ('Bowles', 'appos'), (',', 'punct'), ('“', 'punct'), ('Machine', 'compound'), ('Learning', 'conj'), ('Python', 'pobj'), (':', 'punct'), ('Essential', 'compound'), ('Techniques', 'conj'), ('  ', 'nummod'), ('Predictive', 'compound'), ('Analytics', 'pobj'), ('”', 'punct'), (',', 'punct'), ('John', 'compound'), ('Wiley', 'conj'), ('&', 'cc'), ('Sons', 'compound'), ('Inc.', 'conj'), (',', 'punct'), ('ISBN', 'appos'), (':', 'punct'), ('978', 'nummod'), ('-', 'punct'), ('1', 'prep'), ('-', 'punct'), ('118-', 'prep'), ('96174', 'nummod'), ('-', 'punct'), ('2', 'nummod'), ('  ', 'conj'), ('[', 'punct'), ('4', 'appos'), (']', 'punct'), ('S.B.', 'compound'), ('Kotsiantis', 'appos'), (',', 'punct'), ('“', 'punct'), ('Supervised', 'amod'), ('Machine', 'compound'), ('Learning', 'appos'), (':', 'punct')]

>> Bigrams: 
[[[, 2], [2, ]], [], M.], [M., Welling], [Welling, ,], [,, “], [“, Encounter], [Encounter, Machine], [Machine, Learning], [Learning, ”], [”,  ], [ , [], [[, 3], [3, ]], [], M.], [M., Bowles], [Bowles, ,], [,, “], [“, Machine], [Machine, Learning], [Learning, Python], [Python, :], [:, Essential], [Essential, Techniques], [Techniques,   ], [  , Predictive], [Predictive, Analytics], [Analytics, ”], [”, ,], [,, John], [John, Wiley], [Wiley, &], [&, Sons], [Sons, Inc.], [Inc., ,], [,, ISBN], [ISBN, :], [:, 978], [978, -], [-, 1], [1, -], [-, 118-], [118-, 96174], [96174, -], [-, 2], [2,   ], [  , [], [[, 4], [4, ]], [], S.B.], [S.B., Kotsiantis], [Kotsiantis, ,], [,, “], [“, Supervised], [Supervised, Machine], [Machine, Learning], [Learning, :]]

>> Trigrams: 
[[[, 2, ]], [2, ], M.], [], M., Welling], [M., Welling, ,], [Welling, ,, “], [,, “, Encounter], [“, Encounter, Machine], [Encounter, Machine, Learning], [Machine, Learning, ”], [Learning, ”,  ], [”,  , [], [ , [, 3], [[, 3, ]], [3, ], M.], [], M., Bowles], [M., Bowles, ,], [Bowles, ,, “], [,, “, Machine], [“, Machine, Learning], [Machine, Learning, Python], [Learning, Python, :], [Python, :, Essential], [:, Essential, Techniques], [Essential, Techniques,   ], [Techniques,   , Predictive], [  , Predictive, Analytics], [Predictive, Analytics, ”], [Analytics, ”, ,], [”, ,, John], [,, John, Wiley], [John, Wiley, &], [Wiley, &, Sons], [&, Sons, Inc.], [Sons, Inc., ,], [Inc., ,, ISBN], [,, ISBN, :], [ISBN, :, 978], [:, 978, -], [978, -, 1], [-, 1, -], [1, -, 118-], [-, 118-, 96174], [118-, 96174, -], [96174, -, 2], [-, 2,   ], [2,   , [], [  , [, 4], [[, 4, ]], [4, ], S.B.], [], S.B., Kotsiantis], [S.B., Kotsiantis, ,], [Kotsiantis, ,, “], [,, “, Supervised], [“, Supervised, Machine], [Supervised, Machine, Learning], [Machine, Learning, :]]

>> Noun Phrases are: 
[[2] M. Welling, A First Encounter, Machine Learning, M. Bowles, Machine Learning, Python, Essential Techniques,   Predictive Analytics, John Wiley, Sons Inc., ISBN, S.B. Kotsiantis, Supervised Machine Learning]

>> Named Entities are: 
[('A First Encounter with Machine Learning', 'WORK_OF_ART'), ('Machine Learning', 'WORK_OF_ART'), ('John Wiley & Sons Inc.', 'ORG'), ('ISBN', 'ORG'), ('978', 'CARDINAL'), ('96174', 'CARDINAL'), ('4', 'CARDINAL'), ('S.B. Kotsiantis', 'PERSON'), ('Supervised Machine Learning:', 'WORK_OF_ART')]


============================ Sentence 263 =============================

A Review of  Classification Techniques”, Informatica 31 (2007) 


>> Tokens are: 
[Review,  , Classification, Techniques, ”, ,, Informatica, 31, (, 2007, )] 

>> PoS Tags are: 
[('Review', 'PROPN'), (' ', 'SPACE'), ('Classification', 'PROPN'), ('Techniques', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Informatica', 'PROPN'), ('31', 'NUM'), ('(', 'PUNCT'), ('2007', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Review', 'ROOT'), (' ', 'compound'), ('Classification', 'compound'), ('Techniques', 'pobj'), ('”', 'punct'), (',', 'punct'), ('Informatica', 'npadvmod'), ('31', 'nummod'), ('(', 'punct'), ('2007', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Review,  ], [ , Classification], [Classification, Techniques], [Techniques, ”], [”, ,], [,, Informatica], [Informatica, 31], [31, (], [(, 2007], [2007, )]]

>> Trigrams: 
[[Review,  , Classification], [ , Classification, Techniques], [Classification, Techniques, ”], [Techniques, ”, ,], [”, ,, Informatica], [,, Informatica, 31], [Informatica, 31, (], [31, (, 2007], [(, 2007, )]]

>> Noun Phrases are: 
[A Review,  Classification Techniques]

>> Named Entities are: 
[('Informatica 31 (2007', 'DATE')]


============================ Sentence 264 =============================

249-268   [5] L. Rokach, O. Maimon, “Top – Down Induction of Decision Trees   


>> Tokens are: 
[249, -, 268,   , [, 5, ], L., Rokach, ,, O., Maimon, ,, “, –, Induction, Decision, Trees,  ] 

>> PoS Tags are: 
[('249', 'NUM'), ('-', 'SYM'), ('268', 'NUM'), ('  ', 'SPACE'), ('[', 'PUNCT'), ('5', 'NUM'), (']', 'PUNCT'), ('L.', 'PROPN'), ('Rokach', 'PROPN'), (',', 'PUNCT'), ('O.', 'PROPN'), ('Maimon', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('–', 'PUNCT'), ('Induction', 'PROPN'), ('Decision', 'PROPN'), ('Trees', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('249', 'nummod'), ('-', 'punct'), ('268', 'nummod'), ('  ', 'ROOT'), ('[', 'punct'), ('5', 'appos'), (']', 'punct'), ('L.', 'compound'), ('Rokach', 'appos'), (',', 'punct'), ('O.', 'compound'), ('Maimon', 'appos'), (',', 'punct'), ('“', 'punct'), ('–', 'punct'), ('Induction', 'appos'), ('Decision', 'compound'), ('Trees', 'pobj'), (' ', 'prep')]

>> Bigrams: 
[[249, -], [-, 268], [268,   ], [  , [], [[, 5], [5, ]], [], L.], [L., Rokach], [Rokach, ,], [,, O.], [O., Maimon], [Maimon, ,], [,, “], [“, –], [–, Induction], [Induction, Decision], [Decision, Trees], [Trees,  ]]

>> Trigrams: 
[[249, -, 268], [-, 268,   ], [268,   , [], [  , [, 5], [[, 5, ]], [5, ], L.], [], L., Rokach], [L., Rokach, ,], [Rokach, ,, O.], [,, O., Maimon], [O., Maimon, ,], [Maimon, ,, “], [,, “, –], [“, –, Induction], [–, Induction, Decision], [Induction, Decision, Trees], [Decision, Trees,  ]]

>> Noun Phrases are: 
[L. Rokach, O. Maimon, Top – Down Induction, Decision Trees]

>> Named Entities are: 
[('249', 'CARDINAL'), ('5', 'CARDINAL'), ('L. Rokach', 'PERSON'), ('O. Maimon', 'PERSON')]


============================ Sentence 265 =============================

Classifiers – A Survey”, IEEE Transactions on Systems,     


>> Tokens are: 
[Classifiers, –, Survey, ”, ,, IEEE, Transactions, Systems, ,,    ] 

>> PoS Tags are: 
[('Classifiers', 'PROPN'), ('–', 'PUNCT'), ('Survey', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('IEEE', 'PROPN'), ('Transactions', 'PROPN'), ('Systems', 'PROPN'), (',', 'PUNCT'), ('   ', 'SPACE')] 

>> Dependency Tags are: 
[('Classifiers', 'dep'), ('–', 'punct'), ('Survey', 'ROOT'), ('”', 'punct'), (',', 'punct'), ('IEEE', 'compound'), ('Transactions', 'appos'), ('Systems', 'pobj'), (',', 'punct'), ('   ', 'punct')]

>> Bigrams: 
[[Classifiers, –], [–, Survey], [Survey, ”], [”, ,], [,, IEEE], [IEEE, Transactions], [Transactions, Systems], [Systems, ,], [,,    ]]

>> Trigrams: 
[[Classifiers, –, Survey], [–, Survey, ”], [Survey, ”, ,], [”, ,, IEEE], [,, IEEE, Transactions], [IEEE, Transactions, Systems], [Transactions, Systems, ,], [Systems, ,,    ]]

>> Noun Phrases are: 
[Classifiers – A Survey, IEEE Transactions, Systems]

>> Named Entities are: 
[('IEEE Transactions on Systems', 'ORG')]


============================ Sentence 266 =============================

[6] D. Lowd, P. Domingos, “Naïve Bayes Models for Probability  Estimation”   [7] https://webdocs.cs.ualberta.ca/~greiner/C- 651/Homework2_Fall2008.html   [8] D. Meyer, “Support Vector Machines – The Interface to libsvm in  package e1071”, August 2015   [9] S. S. Shwartz, Y. Singer, N. Srebro, “ 


>> Tokens are: 
[[, 6, ], D., Lowd, ,, P., Domingos, ,, “, Naïve, Bayes, Models, Probability,  , Estimation, ”,   , [, 7, ], https://webdocs.cs.ualberta.ca/~greiner/C-, 651, /, Homework2_Fall2008.html,   , [, 8, ], D., Meyer, ,, “, Support, Vector, Machines, –, Interface, libsvm,  , package, e1071, ”, ,, August, 2015,   , [, 9, ], S., S., Shwartz, ,, Y., Singer, ,, N., Srebro, ,, “] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('6', 'NUM'), (']', 'PUNCT'), ('D.', 'PROPN'), ('Lowd', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('Domingos', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Naïve', 'PROPN'), ('Bayes', 'PROPN'), ('Models', 'PROPN'), ('Probability', 'PROPN'), (' ', 'SPACE'), ('Estimation', 'PROPN'), ('”', 'PUNCT'), ('  ', 'SPACE'), ('[', 'PUNCT'), ('7', 'NUM'), (']', 'PUNCT'), ('https://webdocs.cs.ualberta.ca/~greiner/C-', 'NOUN'), ('651', 'NUM'), ('/', 'SYM'), ('Homework2_Fall2008.html', 'NOUN'), ('  ', 'SPACE'), ('[', 'PUNCT'), ('8', 'NUM'), (']', 'PUNCT'), ('D.', 'PROPN'), ('Meyer', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Support', 'PROPN'), ('Vector', 'PROPN'), ('Machines', 'PROPN'), ('–', 'PUNCT'), ('Interface', 'PROPN'), ('libsvm', 'VERB'), (' ', 'SPACE'), ('package', 'NOUN'), ('e1071', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('August', 'PROPN'), ('2015', 'NUM'), ('  ', 'SPACE'), ('[', 'PUNCT'), ('9', 'NUM'), (']', 'PUNCT'), ('S.', 'PROPN'), ('S.', 'PROPN'), ('Shwartz', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('Singer', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), ('Srebro', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('6', 'dep'), (']', 'punct'), ('D.', 'compound'), ('Lowd', 'nsubj'), (',', 'punct'), ('P.', 'compound'), ('Domingos', 'appos'), (',', 'punct'), ('“', 'punct'), ('Naïve', 'compound'), ('Bayes', 'compound'), ('Models', 'appos'), ('Probability', 'nmod'), (' ', 'compound'), ('Estimation', 'pobj'), ('”', 'punct'), ('  ', 'punct'), ('[', 'punct'), ('7', 'appos'), (']', 'punct'), ('https://webdocs.cs.ualberta.ca/~greiner/C-', 'ROOT'), ('651', 'nummod'), ('/', 'punct'), ('Homework2_Fall2008.html', 'prep'), ('  ', 'dobj'), ('[', 'punct'), ('8', 'prep'), (']', 'punct'), ('D.', 'compound'), ('Meyer', 'appos'), (',', 'punct'), ('“', 'punct'), ('Support', 'compound'), ('Vector', 'compound'), ('Machines', 'dobj'), ('–', 'punct'), ('Interface', 'nsubj'), ('libsvm', 'advcl'), (' ', 'pobj'), ('package', 'pobj'), ('e1071', 'pobj'), ('”', 'punct'), (',', 'punct'), ('August', 'npadvmod'), ('2015', 'nummod'), ('  ', 'conj'), ('[', 'punct'), ('9', 'appos'), (']', 'punct'), ('S.', 'compound'), ('S.', 'compound'), ('Shwartz', 'appos'), (',', 'punct'), ('Y.', 'compound'), ('Singer', 'conj'), (',', 'punct'), ('N.', 'compound'), ('Srebro', 'appos'), (',', 'punct'), ('“', 'punct')]

>> Bigrams: 
[[[, 6], [6, ]], [], D.], [D., Lowd], [Lowd, ,], [,, P.], [P., Domingos], [Domingos, ,], [,, “], [“, Naïve], [Naïve, Bayes], [Bayes, Models], [Models, Probability], [Probability,  ], [ , Estimation], [Estimation, ”], [”,   ], [  , [], [[, 7], [7, ]], [], https://webdocs.cs.ualberta.ca/~greiner/C-], [https://webdocs.cs.ualberta.ca/~greiner/C-, 651], [651, /], [/, Homework2_Fall2008.html], [Homework2_Fall2008.html,   ], [  , [], [[, 8], [8, ]], [], D.], [D., Meyer], [Meyer, ,], [,, “], [“, Support], [Support, Vector], [Vector, Machines], [Machines, –], [–, Interface], [Interface, libsvm], [libsvm,  ], [ , package], [package, e1071], [e1071, ”], [”, ,], [,, August], [August, 2015], [2015,   ], [  , [], [[, 9], [9, ]], [], S.], [S., S.], [S., Shwartz], [Shwartz, ,], [,, Y.], [Y., Singer], [Singer, ,], [,, N.], [N., Srebro], [Srebro, ,], [,, “]]

>> Trigrams: 
[[[, 6, ]], [6, ], D.], [], D., Lowd], [D., Lowd, ,], [Lowd, ,, P.], [,, P., Domingos], [P., Domingos, ,], [Domingos, ,, “], [,, “, Naïve], [“, Naïve, Bayes], [Naïve, Bayes, Models], [Bayes, Models, Probability], [Models, Probability,  ], [Probability,  , Estimation], [ , Estimation, ”], [Estimation, ”,   ], [”,   , [], [  , [, 7], [[, 7, ]], [7, ], https://webdocs.cs.ualberta.ca/~greiner/C-], [], https://webdocs.cs.ualberta.ca/~greiner/C-, 651], [https://webdocs.cs.ualberta.ca/~greiner/C-, 651, /], [651, /, Homework2_Fall2008.html], [/, Homework2_Fall2008.html,   ], [Homework2_Fall2008.html,   , [], [  , [, 8], [[, 8, ]], [8, ], D.], [], D., Meyer], [D., Meyer, ,], [Meyer, ,, “], [,, “, Support], [“, Support, Vector], [Support, Vector, Machines], [Vector, Machines, –], [Machines, –, Interface], [–, Interface, libsvm], [Interface, libsvm,  ], [libsvm,  , package], [ , package, e1071], [package, e1071, ”], [e1071, ”, ,], [”, ,, August], [,, August, 2015], [August, 2015,   ], [2015,   , [], [  , [, 9], [[, 9, ]], [9, ], S.], [], S., S.], [S., S., Shwartz], [S., Shwartz, ,], [Shwartz, ,, Y.], [,, Y., Singer], [Y., Singer, ,], [Singer, ,, N.], [,, N., Srebro], [N., Srebro, ,], [Srebro, ,, “]]

>> Noun Phrases are: 
[[6] D. Lowd, P. Domingos, Naïve Bayes Models, Probability  Estimation, D. Meyer, Support Vector Machines, The Interface, package, e1071, S. S. Shwartz, Y. Singer, N. Srebro]

>> Named Entities are: 
[('6', 'CARDINAL'), ('P. Domingos', 'PERSON'), ('Naïve Bayes Models for Probability  Estimation', 'WORK_OF_ART'), ('7', 'CARDINAL'), ('651', 'CARDINAL'), ('8', 'CARDINAL'), ('Support Vector Machines', 'ORG'), ('August 2015', 'DATE'), ('S. S. Shwartz', 'PERSON'), ('Y. Singer', 'PERSON'), ('N. Srebro', 'PERSON')]


============================ Sentence 267 =============================

Pegasos: Primal Estimated sub -  Gradient Solver for SVM”, Proceedings of the 24th International  Conference on Machine Learning, Corvallis, OR, 2007   [10] http://www.simplilearn.com/what-is-machine-learning-and-why-it- matters-article   [11] P. Harrington, “Machine Learning in action”, Manning Publications  Co., Shelter Island, New York, 2012   [12] http://pypr.sourceforge.net/kmeans.html  [13] K. Alsabati, S. Ranaka, V. Singh, “An efficient k-means clustering   algorithm”, Electrical Engineering and Computer Science, 1997   


>> Tokens are: 
[Pegasos, :, Primal, Estimated, sub, -,  , Gradient, Solver, SVM, ”, ,, Proceedings, 24th, International,  , Conference, Machine, Learning, ,, Corvallis, ,, ,, 2007,   , [, 10, ], http://www.simplilearn.com/what-is-machine-learning-and-why-it-, matters, -, article,   , [, 11, ], P., Harrington, ,, “, Machine, Learning, action, ”, ,, Manning, Publications,  , Co., ,, Shelter, Island, ,, New, York, ,, 2012,   , [, 12, ], http://pypr.sourceforge.net/kmeans.html,  , [, 13, ], K., Alsabati, ,, S., Ranaka, ,, V., Singh, ,, “, efficient, k, -, means, clustering,   , algorithm, ”, ,, Electrical, Engineering, Computer, Science, ,, 1997,  ] 

>> PoS Tags are: 
[('Pegasos', 'PROPN'), (':', 'PUNCT'), ('Primal', 'PROPN'), ('Estimated', 'PROPN'), ('sub', 'NOUN'), ('-', 'NOUN'), (' ', 'SPACE'), ('Gradient', 'PROPN'), ('Solver', 'PROPN'), ('SVM', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Proceedings', 'NOUN'), ('24th', 'ADJ'), ('International', 'PROPN'), (' ', 'SPACE'), ('Conference', 'PROPN'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), (',', 'PUNCT'), ('Corvallis', 'PROPN'), (',', 'PUNCT'), (',', 'PUNCT'), ('2007', 'NUM'), ('  ', 'SPACE'), ('[', 'PUNCT'), ('10', 'NUM'), (']', 'PUNCT'), ('http://www.simplilearn.com/what-is-machine-learning-and-why-it-', 'X'), ('matters', 'NOUN'), ('-', 'PUNCT'), ('article', 'NOUN'), ('  ', 'SPACE'), ('[', 'PUNCT'), ('11', 'NUM'), (']', 'PUNCT'), ('P.', 'PROPN'), ('Harrington', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Machine', 'NOUN'), ('Learning', 'PROPN'), ('action', 'NOUN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Manning', 'PROPN'), ('Publications', 'PROPN'), (' ', 'SPACE'), ('Co.', 'PROPN'), (',', 'PUNCT'), ('Shelter', 'PROPN'), ('Island', 'PROPN'), (',', 'PUNCT'), ('New', 'PROPN'), ('York', 'PROPN'), (',', 'PUNCT'), ('2012', 'NUM'), ('  ', 'SPACE'), ('[', 'PUNCT'), ('12', 'NUM'), (']', 'PUNCT'), ('http://pypr.sourceforge.net/kmeans.html', 'X'), (' ', 'SPACE'), ('[', 'PUNCT'), ('13', 'NUM'), (']', 'PUNCT'), ('K.', 'PROPN'), ('Alsabati', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('Ranaka', 'PROPN'), (',', 'PUNCT'), ('V.', 'PROPN'), ('Singh', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('efficient', 'ADJ'), ('k', 'NOUN'), ('-', 'PUNCT'), ('means', 'NOUN'), ('clustering', 'VERB'), ('  ', 'SPACE'), ('algorithm', 'ADV'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Electrical', 'PROPN'), ('Engineering', 'PROPN'), ('Computer', 'PROPN'), ('Science', 'PROPN'), (',', 'PUNCT'), ('1997', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Pegasos', 'ROOT'), (':', 'punct'), ('Primal', 'compound'), ('Estimated', 'amod'), ('sub', 'appos'), ('-', 'punct'), (' ', 'amod'), ('Gradient', 'compound'), ('Solver', 'appos'), ('SVM', 'pobj'), ('”', 'punct'), (',', 'punct'), ('Proceedings', 'appos'), ('24th', 'amod'), ('International', 'nmod'), (' ', 'compound'), ('Conference', 'pobj'), ('Machine', 'compound'), ('Learning', 'pobj'), (',', 'punct'), ('Corvallis', 'conj'), (',', 'punct'), (',', 'punct'), ('2007', 'nummod'), ('  ', 'appos'), ('[', 'punct'), ('10', 'appos'), (']', 'punct'), ('http://www.simplilearn.com/what-is-machine-learning-and-why-it-', 'appos'), ('matters', 'appos'), ('-', 'punct'), ('article', 'compound'), ('  ', 'appos'), ('[', 'punct'), ('11', 'appos'), (']', 'punct'), ('P.', 'compound'), ('Harrington', 'appos'), (',', 'punct'), ('“', 'punct'), ('Machine', 'compound'), ('Learning', 'appos'), ('action', 'pobj'), ('”', 'punct'), (',', 'punct'), ('Manning', 'compound'), ('Publications', 'nmod'), (' ', 'compound'), ('Co.', 'appos'), (',', 'punct'), ('Shelter', 'compound'), ('Island', 'conj'), (',', 'punct'), ('New', 'compound'), ('York', 'conj'), (',', 'punct'), ('2012', 'nummod'), ('  ', 'appos'), ('[', 'punct'), ('12', 'appos'), (']', 'punct'), ('http://pypr.sourceforge.net/kmeans.html', 'appos'), (' ', 'appos'), ('[', 'punct'), ('13', 'appos'), (']', 'punct'), ('K.', 'compound'), ('Alsabati', 'appos'), (',', 'punct'), ('S.', 'compound'), ('Ranaka', 'appos'), (',', 'punct'), ('V.', 'compound'), ('Singh', 'appos'), (',', 'punct'), ('“', 'punct'), ('efficient', 'amod'), ('k', 'compound'), ('-', 'punct'), ('means', 'appos'), ('clustering', 'acl'), ('  ', 'dobj'), ('algorithm', 'advmod'), ('”', 'punct'), (',', 'punct'), ('Electrical', 'compound'), ('Engineering', 'conj'), ('Computer', 'conj'), ('Science', 'conj'), (',', 'punct'), ('1997', 'npadvmod'), (' ', 'appos')]

>> Bigrams: 
[[Pegasos, :], [:, Primal], [Primal, Estimated], [Estimated, sub], [sub, -], [-,  ], [ , Gradient], [Gradient, Solver], [Solver, SVM], [SVM, ”], [”, ,], [,, Proceedings], [Proceedings, 24th], [24th, International], [International,  ], [ , Conference], [Conference, Machine], [Machine, Learning], [Learning, ,], [,, Corvallis], [Corvallis, ,], [,, ,], [,, 2007], [2007,   ], [  , [], [[, 10], [10, ]], [], http://www.simplilearn.com/what-is-machine-learning-and-why-it-], [http://www.simplilearn.com/what-is-machine-learning-and-why-it-, matters], [matters, -], [-, article], [article,   ], [  , [], [[, 11], [11, ]], [], P.], [P., Harrington], [Harrington, ,], [,, “], [“, Machine], [Machine, Learning], [Learning, action], [action, ”], [”, ,], [,, Manning], [Manning, Publications], [Publications,  ], [ , Co.], [Co., ,], [,, Shelter], [Shelter, Island], [Island, ,], [,, New], [New, York], [York, ,], [,, 2012], [2012,   ], [  , [], [[, 12], [12, ]], [], http://pypr.sourceforge.net/kmeans.html], [http://pypr.sourceforge.net/kmeans.html,  ], [ , [], [[, 13], [13, ]], [], K.], [K., Alsabati], [Alsabati, ,], [,, S.], [S., Ranaka], [Ranaka, ,], [,, V.], [V., Singh], [Singh, ,], [,, “], [“, efficient], [efficient, k], [k, -], [-, means], [means, clustering], [clustering,   ], [  , algorithm], [algorithm, ”], [”, ,], [,, Electrical], [Electrical, Engineering], [Engineering, Computer], [Computer, Science], [Science, ,], [,, 1997], [1997,  ]]

>> Trigrams: 
[[Pegasos, :, Primal], [:, Primal, Estimated], [Primal, Estimated, sub], [Estimated, sub, -], [sub, -,  ], [-,  , Gradient], [ , Gradient, Solver], [Gradient, Solver, SVM], [Solver, SVM, ”], [SVM, ”, ,], [”, ,, Proceedings], [,, Proceedings, 24th], [Proceedings, 24th, International], [24th, International,  ], [International,  , Conference], [ , Conference, Machine], [Conference, Machine, Learning], [Machine, Learning, ,], [Learning, ,, Corvallis], [,, Corvallis, ,], [Corvallis, ,, ,], [,, ,, 2007], [,, 2007,   ], [2007,   , [], [  , [, 10], [[, 10, ]], [10, ], http://www.simplilearn.com/what-is-machine-learning-and-why-it-], [], http://www.simplilearn.com/what-is-machine-learning-and-why-it-, matters], [http://www.simplilearn.com/what-is-machine-learning-and-why-it-, matters, -], [matters, -, article], [-, article,   ], [article,   , [], [  , [, 11], [[, 11, ]], [11, ], P.], [], P., Harrington], [P., Harrington, ,], [Harrington, ,, “], [,, “, Machine], [“, Machine, Learning], [Machine, Learning, action], [Learning, action, ”], [action, ”, ,], [”, ,, Manning], [,, Manning, Publications], [Manning, Publications,  ], [Publications,  , Co.], [ , Co., ,], [Co., ,, Shelter], [,, Shelter, Island], [Shelter, Island, ,], [Island, ,, New], [,, New, York], [New, York, ,], [York, ,, 2012], [,, 2012,   ], [2012,   , [], [  , [, 12], [[, 12, ]], [12, ], http://pypr.sourceforge.net/kmeans.html], [], http://pypr.sourceforge.net/kmeans.html,  ], [http://pypr.sourceforge.net/kmeans.html,  , [], [ , [, 13], [[, 13, ]], [13, ], K.], [], K., Alsabati], [K., Alsabati, ,], [Alsabati, ,, S.], [,, S., Ranaka], [S., Ranaka, ,], [Ranaka, ,, V.], [,, V., Singh], [V., Singh, ,], [Singh, ,, “], [,, “, efficient], [“, efficient, k], [efficient, k, -], [k, -, means], [-, means, clustering], [means, clustering,   ], [clustering,   , algorithm], [  , algorithm, ”], [algorithm, ”, ,], [”, ,, Electrical], [,, Electrical, Engineering], [Electrical, Engineering, Computer], [Engineering, Computer, Science], [Computer, Science, ,], [Science, ,, 1997], [,, 1997,  ]]

>> Noun Phrases are: 
[Pegasos, Primal Estimated sub,  Gradient Solver, SVM, Proceedings, the 24th International  Conference, Machine Learning, Corvallis, matters, P. Harrington, Machine Learning, action, Manning Publications  Co., Shelter Island, New York, K. Alsabati, S. Ranaka, V. Singh, An efficient k-means, Electrical Engineering, Computer, Science]

>> Named Entities are: 
[('Pegasos: Primal Estimated', 'WORK_OF_ART'), ('SVM', 'ORG'), ('Proceedings of the 24th', 'WORK_OF_ART'), ('Corvallis', 'PERSON'), ('2007', 'DATE'), ('10', 'CARDINAL'), ('11', 'CARDINAL'), ('P. Harrington', 'PERSON'), ('Machine Learning', 'WORK_OF_ART'), ('Manning Publications  Co.', 'ORG'), ('Shelter Island', 'GPE'), ('New York', 'GPE'), ('2012', 'DATE'), ('12', 'CARDINAL'), ('S. Ranaka', 'PERSON'), ('V. Singh', 'PERSON'), ('Electrical Engineering and Computer Science', 'ORG'), ('1997', 'DATE')]


============================ Sentence 268 =============================

[14] M. Andrecut, “Parallel GPU Implementation of Iterative PCA    


>> Tokens are: 
[[, 14, ], M., Andrecut, ,, “, Parallel, GPU, Implementation, Iterative, PCA,   ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('14', 'NUM'), (']', 'PUNCT'), ('M.', 'PROPN'), ('Andrecut', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Parallel', 'ADJ'), ('GPU', 'ADJ'), ('Implementation', 'NOUN'), ('Iterative', 'PROPN'), ('PCA', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('14', 'nummod'), (']', 'punct'), ('M.', 'compound'), ('Andrecut', 'ROOT'), (',', 'punct'), ('“', 'punct'), ('Parallel', 'amod'), ('GPU', 'compound'), ('Implementation', 'appos'), ('Iterative', 'compound'), ('PCA', 'pobj'), ('  ', 'punct')]

>> Bigrams: 
[[[, 14], [14, ]], [], M.], [M., Andrecut], [Andrecut, ,], [,, “], [“, Parallel], [Parallel, GPU], [GPU, Implementation], [Implementation, Iterative], [Iterative, PCA], [PCA,   ]]

>> Trigrams: 
[[[, 14, ]], [14, ], M.], [], M., Andrecut], [M., Andrecut, ,], [Andrecut, ,, “], [,, “, Parallel], [“, Parallel, GPU], [Parallel, GPU, Implementation], [GPU, Implementation, Iterative], [Implementation, Iterative, PCA], [Iterative, PCA,   ]]

>> Noun Phrases are: 
[[14] M. Andrecut, Parallel GPU Implementation, Iterative PCA]

>> Named Entities are: 
[('14', 'CARDINAL'), ('Parallel GPU Implementation of Iterative PCA', 'WORK_OF_ART')]


============================ Sentence 269 =============================

Algorithms”, Institute of Biocomplexity and Informatics, University  of Calgary, Canada, 2008   [15] X. Zhu, A. B. Goldberg, “Introduction to Semi – Supervised   


>> Tokens are: 
[Algorithms, ”, ,, Institute, Biocomplexity, Informatics, ,, University,  , Calgary, ,, Canada, ,, 2008,   , [, 15, ], X., Zhu, ,, A., B., Goldberg, ,, “, Introduction, Semi, –, Supervised,  ] 

>> PoS Tags are: 
[('Algorithms', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Institute', 'PROPN'), ('Biocomplexity', 'PROPN'), ('Informatics', 'PROPN'), (',', 'PUNCT'), ('University', 'PROPN'), (' ', 'SPACE'), ('Calgary', 'PROPN'), (',', 'PUNCT'), ('Canada', 'PROPN'), (',', 'PUNCT'), ('2008', 'NUM'), ('  ', 'SPACE'), ('[', 'PUNCT'), ('15', 'NUM'), (']', 'PUNCT'), ('X.', 'PROPN'), ('Zhu', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('B.', 'PROPN'), ('Goldberg', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Introduction', 'NOUN'), ('Semi', 'PROPN'), ('–', 'PUNCT'), ('Supervised', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Algorithms', 'ROOT'), ('”', 'punct'), (',', 'punct'), ('Institute', 'appos'), ('Biocomplexity', 'pobj'), ('Informatics', 'conj'), (',', 'punct'), ('University', 'conj'), (' ', 'nummod'), ('Calgary', 'pobj'), (',', 'punct'), ('Canada', 'conj'), (',', 'punct'), ('2008', 'nummod'), ('  ', 'appos'), ('[', 'punct'), ('15', 'nummod'), (']', 'punct'), ('X.', 'compound'), ('Zhu', 'appos'), (',', 'punct'), ('A.', 'compound'), ('B.', 'compound'), ('Goldberg', 'appos'), (',', 'punct'), ('“', 'punct'), ('Introduction', 'appos'), ('Semi', 'pobj'), ('–', 'punct'), ('Supervised', 'appos'), (' ', 'advmod')]

>> Bigrams: 
[[Algorithms, ”], [”, ,], [,, Institute], [Institute, Biocomplexity], [Biocomplexity, Informatics], [Informatics, ,], [,, University], [University,  ], [ , Calgary], [Calgary, ,], [,, Canada], [Canada, ,], [,, 2008], [2008,   ], [  , [], [[, 15], [15, ]], [], X.], [X., Zhu], [Zhu, ,], [,, A.], [A., B.], [B., Goldberg], [Goldberg, ,], [,, “], [“, Introduction], [Introduction, Semi], [Semi, –], [–, Supervised], [Supervised,  ]]

>> Trigrams: 
[[Algorithms, ”, ,], [”, ,, Institute], [,, Institute, Biocomplexity], [Institute, Biocomplexity, Informatics], [Biocomplexity, Informatics, ,], [Informatics, ,, University], [,, University,  ], [University,  , Calgary], [ , Calgary, ,], [Calgary, ,, Canada], [,, Canada, ,], [Canada, ,, 2008], [,, 2008,   ], [2008,   , [], [  , [, 15], [[, 15, ]], [15, ], X.], [], X., Zhu], [X., Zhu, ,], [Zhu, ,, A.], [,, A., B.], [A., B., Goldberg], [B., Goldberg, ,], [Goldberg, ,, “], [,, “, Introduction], [“, Introduction, Semi], [Introduction, Semi, –], [Semi, –, Supervised], [–, Supervised,  ]]

>> Noun Phrases are: 
[Algorithms, Institute, Biocomplexity, Informatics, University, Calgary, Canada, 15] X. Zhu, A. B. Goldberg, Introduction, Semi]

>> Named Entities are: 
[('Algorithms', 'PERSON'), ('Institute of Biocomplexity and Informatics, University  of Calgary,', 'ORG'), ('Canada', 'GPE'), ('2008', 'DATE'), ('15', 'CARDINAL'), ('X. Zhu', 'PERSON'), ('A. B. Goldberg', 'PERSON'), ('Introduction to Semi – Supervised  ', 'WORK_OF_ART')]


============================ Sentence 270 =============================

Learning”, Synthesis Lectures on Artificial Intelligence and Machine   


>> Tokens are: 
[Learning, ”, ,, Synthesis, Lectures, Artificial, Intelligence, Machine,  ] 

>> PoS Tags are: 
[('Learning', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Synthesis', 'PROPN'), ('Lectures', 'PROPN'), ('Artificial', 'PROPN'), ('Intelligence', 'PROPN'), ('Machine', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Learning', 'dep'), ('”', 'punct'), (',', 'punct'), ('Synthesis', 'compound'), ('Lectures', 'ROOT'), ('Artificial', 'compound'), ('Intelligence', 'pobj'), ('Machine', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[Learning, ”], [”, ,], [,, Synthesis], [Synthesis, Lectures], [Lectures, Artificial], [Artificial, Intelligence], [Intelligence, Machine], [Machine,  ]]

>> Trigrams: 
[[Learning, ”, ,], [”, ,, Synthesis], [,, Synthesis, Lectures], [Synthesis, Lectures, Artificial], [Lectures, Artificial, Intelligence], [Artificial, Intelligence, Machine], [Intelligence, Machine,  ]]

>> Noun Phrases are: 
[Learning”, Synthesis Lectures, Artificial Intelligence, Machine]

>> Named Entities are: 
[('Synthesis Lectures on Artificial Intelligence and Machine  ', 'WORK_OF_ART')]


============================ Sentence 271 =============================

Learning, 2009, Vol. 


>> Tokens are: 
[Learning, ,, 2009, ,, Vol, .] 

>> PoS Tags are: 
[('Learning', 'PROPN'), (',', 'PUNCT'), ('2009', 'NUM'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Learning', 'ROOT'), (',', 'punct'), ('2009', 'appos'), (',', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[Learning, ,], [,, 2009], [2009, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[Learning, ,, 2009], [,, 2009, ,], [2009, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[Learning]

>> Named Entities are: 
[('2009', 'DATE')]


============================ Sentence 272 =============================

3, No. 1, Pages 1-130   [16] X. Zhu, “Semi-Supervised Learning Literature Survey”, Computer  Sciences, University of Wisconsin-Madison, No. 1530, 2005   [17] R. S. Sutton, “Introduction: The Challenge of Reinforcement   


>> Tokens are: 
[3, ,, ., 1, ,, Pages, 1, -, 130,   , [, 16, ], X., Zhu, ,, “, Semi, -, Supervised, Learning, Literature, Survey, ”, ,, Computer,  , Sciences, ,, University, Wisconsin, -, Madison, ,, ., 1530, ,, 2005,   , [, 17, ], R., S., Sutton, ,, “, Introduction, :, Challenge, Reinforcement,  ] 

>> PoS Tags are: 
[('3', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('1', 'NUM'), (',', 'PUNCT'), ('Pages', 'PROPN'), ('1', 'NUM'), ('-', 'SYM'), ('130', 'NUM'), ('  ', 'SPACE'), ('[', 'PUNCT'), ('16', 'NUM'), (']', 'PUNCT'), ('X.', 'PROPN'), ('Zhu', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Semi', 'ADJ'), ('-', 'ADJ'), ('Supervised', 'ADJ'), ('Learning', 'PROPN'), ('Literature', 'PROPN'), ('Survey', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Computer', 'PROPN'), (' ', 'SPACE'), ('Sciences', 'PROPN'), (',', 'PUNCT'), ('University', 'PROPN'), ('Wisconsin', 'PROPN'), ('-', 'PUNCT'), ('Madison', 'PROPN'), (',', 'PUNCT'), ('.', 'NOUN'), ('1530', 'NUM'), (',', 'PUNCT'), ('2005', 'NUM'), ('  ', 'SPACE'), ('[', 'PUNCT'), ('17', 'NUM'), (']', 'PUNCT'), ('R.', 'PROPN'), ('S.', 'PROPN'), ('Sutton', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Introduction', 'NOUN'), (':', 'PUNCT'), ('Challenge', 'PROPN'), ('Reinforcement', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('3', 'nummod'), (',', 'punct'), ('.', 'npadvmod'), ('1', 'nummod'), (',', 'punct'), ('Pages', 'compound'), ('1', 'nummod'), ('-', 'punct'), ('130', 'nummod'), ('  ', 'ROOT'), ('[', 'punct'), ('16', 'appos'), (']', 'punct'), ('X.', 'compound'), ('Zhu', 'appos'), (',', 'punct'), ('“', 'punct'), ('Semi', 'amod'), ('-', 'punct'), ('Supervised', 'amod'), ('Learning', 'compound'), ('Literature', 'compound'), ('Survey', 'appos'), ('”', 'punct'), (',', 'punct'), ('Computer', 'compound'), (' ', 'compound'), ('Sciences', 'conj'), (',', 'punct'), ('University', 'conj'), ('Wisconsin', 'pobj'), ('-', 'punct'), ('Madison', 'appos'), (',', 'punct'), ('.', 'punct'), ('1530', 'appos'), (',', 'punct'), ('2005', 'nummod'), ('  ', 'appos'), ('[', 'punct'), ('17', 'appos'), (']', 'punct'), ('R.', 'compound'), ('S.', 'compound'), ('Sutton', 'appos'), (',', 'punct'), ('“', 'punct'), ('Introduction', 'appos'), (':', 'punct'), ('Challenge', 'appos'), ('Reinforcement', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[3, ,], [,, .], [., 1], [1, ,], [,, Pages], [Pages, 1], [1, -], [-, 130], [130,   ], [  , [], [[, 16], [16, ]], [], X.], [X., Zhu], [Zhu, ,], [,, “], [“, Semi], [Semi, -], [-, Supervised], [Supervised, Learning], [Learning, Literature], [Literature, Survey], [Survey, ”], [”, ,], [,, Computer], [Computer,  ], [ , Sciences], [Sciences, ,], [,, University], [University, Wisconsin], [Wisconsin, -], [-, Madison], [Madison, ,], [,, .], [., 1530], [1530, ,], [,, 2005], [2005,   ], [  , [], [[, 17], [17, ]], [], R.], [R., S.], [S., Sutton], [Sutton, ,], [,, “], [“, Introduction], [Introduction, :], [:, Challenge], [Challenge, Reinforcement], [Reinforcement,  ]]

>> Trigrams: 
[[3, ,, .], [,, ., 1], [., 1, ,], [1, ,, Pages], [,, Pages, 1], [Pages, 1, -], [1, -, 130], [-, 130,   ], [130,   , [], [  , [, 16], [[, 16, ]], [16, ], X.], [], X., Zhu], [X., Zhu, ,], [Zhu, ,, “], [,, “, Semi], [“, Semi, -], [Semi, -, Supervised], [-, Supervised, Learning], [Supervised, Learning, Literature], [Learning, Literature, Survey], [Literature, Survey, ”], [Survey, ”, ,], [”, ,, Computer], [,, Computer,  ], [Computer,  , Sciences], [ , Sciences, ,], [Sciences, ,, University], [,, University, Wisconsin], [University, Wisconsin, -], [Wisconsin, -, Madison], [-, Madison, ,], [Madison, ,, .], [,, ., 1530], [., 1530, ,], [1530, ,, 2005], [,, 2005,   ], [2005,   , [], [  , [, 17], [[, 17, ]], [17, ], R.], [], R., S.], [R., S., Sutton], [S., Sutton, ,], [Sutton, ,, “], [,, “, Introduction], [“, Introduction, :], [Introduction, :, Challenge], [:, Challenge, Reinforcement], [Challenge, Reinforcement,  ]]

>> Noun Phrases are: 
[X. Zhu, Semi-Supervised Learning Literature Survey, Computer  Sciences, University, Wisconsin, -Madison, R. S. Sutton, Introduction, The Challenge, Reinforcement]

>> Named Entities are: 
[('3', 'CARDINAL'), ('1', 'CARDINAL'), ('16', 'CARDINAL'), ('X. Zhu', 'PERSON'), ('Semi-Supervised Learning Literature Survey', 'WORK_OF_ART'), ('Computer  Sciences,', 'ORG'), ('University of Wisconsin-Madison', 'ORG'), ('1530', 'CARDINAL'), ('2005', 'DATE'), ('17', 'CARDINAL'), ('S. Sutton', 'PERSON'), ('Introduction: The Challenge of Reinforcement  ', 'WORK_OF_ART')]


============================ Sentence 273 =============================

Learning”, Machine Learning, 8, Page 225-227, Kluwer Academic   


>> Tokens are: 
[Learning, ”, ,, Machine, Learning, ,, 8, ,, Page, 225, -, 227, ,, Kluwer, Academic,  ] 

>> PoS Tags are: 
[('Learning', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), (',', 'PUNCT'), ('8', 'NUM'), (',', 'PUNCT'), ('Page', 'PROPN'), ('225', 'NUM'), ('-', 'SYM'), ('227', 'NUM'), (',', 'PUNCT'), ('Kluwer', 'PROPN'), ('Academic', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Learning', 'ROOT'), ('”', 'punct'), (',', 'punct'), ('Machine', 'compound'), ('Learning', 'conj'), (',', 'punct'), ('8', 'appos'), (',', 'punct'), ('Page', 'appos'), ('225', 'nummod'), ('-', 'punct'), ('227', 'prep'), (',', 'punct'), ('Kluwer', 'compound'), ('Academic', 'appos'), (' ', 'advmod')]

>> Bigrams: 
[[Learning, ”], [”, ,], [,, Machine], [Machine, Learning], [Learning, ,], [,, 8], [8, ,], [,, Page], [Page, 225], [225, -], [-, 227], [227, ,], [,, Kluwer], [Kluwer, Academic], [Academic,  ]]

>> Trigrams: 
[[Learning, ”, ,], [”, ,, Machine], [,, Machine, Learning], [Machine, Learning, ,], [Learning, ,, 8], [,, 8, ,], [8, ,, Page], [,, Page, 225], [Page, 225, -], [225, -, 227], [-, 227, ,], [227, ,, Kluwer], [,, Kluwer, Academic], [Kluwer, Academic,  ]]

>> Noun Phrases are: 
[Learning, Machine Learning, Page, Kluwer Academic]

>> Named Entities are: 
[('Machine Learning', 'PERSON'), ('8', 'DATE'), ('225', 'CARDINAL'), ('Kluwer Academic  ', 'ORG')]


============================ Sentence 274 =============================

Publishers, Boston, 1992   [18] L. P. Kaelbing, M. L. Littman, A. W. Moore, “Reinforcement   


>> Tokens are: 
[Publishers, ,, Boston, ,, 1992,   , [, 18, ], L., P., Kaelbing, ,, M., L., Littman, ,, A., W., Moore, ,, “, Reinforcement,  ] 

>> PoS Tags are: 
[('Publishers', 'PROPN'), (',', 'PUNCT'), ('Boston', 'PROPN'), (',', 'PUNCT'), ('1992', 'NUM'), ('  ', 'SPACE'), ('[', 'PUNCT'), ('18', 'NUM'), (']', 'PUNCT'), ('L.', 'PROPN'), ('P.', 'PROPN'), ('Kaelbing', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('L.', 'PROPN'), ('Littman', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('W.', 'PROPN'), ('Moore', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Reinforcement', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Publishers', 'ROOT'), (',', 'punct'), ('Boston', 'appos'), (',', 'punct'), ('1992', 'nummod'), ('  ', 'appos'), ('[', 'punct'), ('18', 'appos'), (']', 'punct'), ('L.', 'compound'), ('P.', 'compound'), ('Kaelbing', 'appos'), (',', 'punct'), ('M.', 'compound'), ('L.', 'compound'), ('Littman', 'conj'), (',', 'punct'), ('A.', 'compound'), ('W.', 'compound'), ('Moore', 'appos'), (',', 'punct'), ('“', 'punct'), ('Reinforcement', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[Publishers, ,], [,, Boston], [Boston, ,], [,, 1992], [1992,   ], [  , [], [[, 18], [18, ]], [], L.], [L., P.], [P., Kaelbing], [Kaelbing, ,], [,, M.], [M., L.], [L., Littman], [Littman, ,], [,, A.], [A., W.], [W., Moore], [Moore, ,], [,, “], [“, Reinforcement], [Reinforcement,  ]]

>> Trigrams: 
[[Publishers, ,, Boston], [,, Boston, ,], [Boston, ,, 1992], [,, 1992,   ], [1992,   , [], [  , [, 18], [[, 18, ]], [18, ], L.], [], L., P.], [L., P., Kaelbing], [P., Kaelbing, ,], [Kaelbing, ,, M.], [,, M., L.], [M., L., Littman], [L., Littman, ,], [Littman, ,, A.], [,, A., W.], [A., W., Moore], [W., Moore, ,], [Moore, ,, “], [,, “, Reinforcement], [“, Reinforcement,  ]]

>> Noun Phrases are: 
[Publishers, Boston, L. P. Kaelbing, M. L. Littman, A. W. Moore, Reinforcement]

>> Named Entities are: 
[('Publishers', 'GPE'), ('Boston', 'GPE'), ('1992', 'DATE'), ('18', 'CARDINAL'), ('L. P. Kaelbing', 'PERSON'), ('M. L. Littman', 'PERSON'), ('A. W. Moore', 'PERSON'), ('Reinforcement  ', 'WORK_OF_ART')]


============================ Sentence 275 =============================

Learning: 


>> Tokens are: 
[Learning, :] 

>> PoS Tags are: 
[('Learning', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Learning', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[Learning, :]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Learning]

>> Named Entities are: 
[]


============================ Sentence 276 =============================

A Survey”, Journal of Artificial Intelligence Research, 4,   


>> Tokens are: 
[Survey, ”, ,, Journal, Artificial, Intelligence, Research, ,, 4, ,,  ] 

>> PoS Tags are: 
[('Survey', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Journal', 'PROPN'), ('Artificial', 'PROPN'), ('Intelligence', 'PROPN'), ('Research', 'PROPN'), (',', 'PUNCT'), ('4', 'NUM'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Survey', 'ROOT'), ('”', 'punct'), (',', 'punct'), ('Journal', 'appos'), ('Artificial', 'compound'), ('Intelligence', 'compound'), ('Research', 'pobj'), (',', 'punct'), ('4', 'appos'), (',', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Survey, ”], [”, ,], [,, Journal], [Journal, Artificial], [Artificial, Intelligence], [Intelligence, Research], [Research, ,], [,, 4], [4, ,], [,,  ]]

>> Trigrams: 
[[Survey, ”, ,], [”, ,, Journal], [,, Journal, Artificial], [Journal, Artificial, Intelligence], [Artificial, Intelligence, Research], [Intelligence, Research, ,], [Research, ,, 4], [,, 4, ,], [4, ,,  ]]

>> Noun Phrases are: 
[A Survey, Journal, Artificial Intelligence Research]

>> Named Entities are: 
[('Journal of Artificial Intelligence Research', 'ORG'), ('4', 'DATE')]


============================ Sentence 277 =============================

Page 237-285, 1996   [19] R. Caruana, “Multitask Learning”, Machine Learning, 28, 41-75,   


>> Tokens are: 
[Page, 237, -, 285, ,, 1996,   , [, 19, ], R., Caruana, ,, “, Multitask, Learning, ”, ,, Machine, Learning, ,, 28, ,, 41, -, 75, ,,  ] 

>> PoS Tags are: 
[('Page', 'NOUN'), ('237', 'NUM'), ('-', 'SYM'), ('285', 'NUM'), (',', 'PUNCT'), ('1996', 'NUM'), ('  ', 'SPACE'), ('[', 'PUNCT'), ('19', 'NUM'), (']', 'PUNCT'), ('R.', 'PROPN'), ('Caruana', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Multitask', 'PROPN'), ('Learning', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), (',', 'PUNCT'), ('28', 'NUM'), (',', 'PUNCT'), ('41', 'NUM'), ('-', 'SYM'), ('75', 'NUM'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Page', 'ROOT'), ('237', 'nummod'), ('-', 'punct'), ('285', 'prep'), (',', 'punct'), ('1996', 'nummod'), ('  ', 'appos'), ('[', 'punct'), ('19', 'nummod'), (']', 'punct'), ('R.', 'compound'), ('Caruana', 'appos'), (',', 'punct'), ('“', 'punct'), ('Multitask', 'compound'), ('Learning', 'appos'), ('”', 'punct'), (',', 'punct'), ('Machine', 'compound'), ('Learning', 'conj'), (',', 'punct'), ('28', 'appos'), (',', 'punct'), ('41', 'appos'), ('-', 'punct'), ('75', 'prep'), (',', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Page, 237], [237, -], [-, 285], [285, ,], [,, 1996], [1996,   ], [  , [], [[, 19], [19, ]], [], R.], [R., Caruana], [Caruana, ,], [,, “], [“, Multitask], [Multitask, Learning], [Learning, ”], [”, ,], [,, Machine], [Machine, Learning], [Learning, ,], [,, 28], [28, ,], [,, 41], [41, -], [-, 75], [75, ,], [,,  ]]

>> Trigrams: 
[[Page, 237, -], [237, -, 285], [-, 285, ,], [285, ,, 1996], [,, 1996,   ], [1996,   , [], [  , [, 19], [[, 19, ]], [19, ], R.], [], R., Caruana], [R., Caruana, ,], [Caruana, ,, “], [,, “, Multitask], [“, Multitask, Learning], [Multitask, Learning, ”], [Learning, ”, ,], [”, ,, Machine], [,, Machine, Learning], [Machine, Learning, ,], [Learning, ,, 28], [,, 28, ,], [28, ,, 41], [,, 41, -], [41, -, 75], [-, 75, ,], [75, ,,  ]]

>> Noun Phrases are: 
[Page, R. Caruana, Multitask Learning, Machine Learning]

>> Named Entities are: 
[('19', 'CARDINAL'), ('R. Caruana', 'PERSON'), ('Multitask Learning', 'WORK_OF_ART'), ('Machine Learning', 'PERSON'), ('28', 'DATE'), ('41-75', 'DATE')]


============================ Sentence 278 =============================

Kluwer Academic Publishers, 1997   [20] D. Opitz, R. Maclin, “Popular Ensemble Methods: An Empirical  Study”, Journal of Artificial Intelligence Research, 11, Pages 169- 198, 1999   [21] Z. H. Zhou, “Ensemble Learning”, National Key Laboratory for   


>> Tokens are: 
[Kluwer, Academic, Publishers, ,, 1997,   , [, 20, ], D., Opitz, ,, R., Maclin, ,, “, Popular, Ensemble, Methods, :, Empirical,  , Study, ”, ,, Journal, Artificial, Intelligence, Research, ,, 11, ,, Pages, 169-, 198, ,, 1999,   , [, 21, ], Z., H., Zhou, ,, “, Ensemble, Learning, ”, ,, National, Key, Laboratory,  ] 

>> PoS Tags are: 
[('Kluwer', 'PROPN'), ('Academic', 'PROPN'), ('Publishers', 'PROPN'), (',', 'PUNCT'), ('1997', 'NUM'), ('  ', 'SPACE'), ('[', 'PUNCT'), ('20', 'NUM'), (']', 'PUNCT'), ('D.', 'PROPN'), ('Opitz', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('Maclin', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Popular', 'PROPN'), ('Ensemble', 'PROPN'), ('Methods', 'PROPN'), (':', 'PUNCT'), ('Empirical', 'PROPN'), (' ', 'SPACE'), ('Study', 'NOUN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Journal', 'PROPN'), ('Artificial', 'PROPN'), ('Intelligence', 'PROPN'), ('Research', 'PROPN'), (',', 'PUNCT'), ('11', 'NUM'), (',', 'PUNCT'), ('Pages', 'PROPN'), ('169-', 'NUM'), ('198', 'NUM'), (',', 'PUNCT'), ('1999', 'NUM'), ('  ', 'SPACE'), ('[', 'PUNCT'), ('21', 'NUM'), (']', 'PUNCT'), ('Z.', 'PROPN'), ('H.', 'PROPN'), ('Zhou', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Ensemble', 'PROPN'), ('Learning', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('National', 'PROPN'), ('Key', 'PROPN'), ('Laboratory', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Kluwer', 'compound'), ('Academic', 'compound'), ('Publishers', 'ROOT'), (',', 'punct'), ('1997', 'nummod'), ('  ', 'appos'), ('[', 'punct'), ('20', 'dep'), (']', 'punct'), ('D.', 'compound'), ('Opitz', 'appos'), (',', 'punct'), ('R.', 'compound'), ('Maclin', 'appos'), (',', 'punct'), ('“', 'punct'), ('Popular', 'compound'), ('Ensemble', 'compound'), ('Methods', 'appos'), (':', 'punct'), ('Empirical', 'nmod'), (' ', 'compound'), ('Study', 'appos'), ('”', 'punct'), (',', 'punct'), ('Journal', 'conj'), ('Artificial', 'compound'), ('Intelligence', 'compound'), ('Research', 'pobj'), (',', 'punct'), ('11', 'appos'), (',', 'punct'), ('Pages', 'appos'), ('169-', 'compound'), ('198', 'nummod'), (',', 'punct'), ('1999', 'nummod'), ('  ', 'appos'), ('[', 'punct'), ('21', 'appos'), (']', 'punct'), ('Z.', 'compound'), ('H.', 'compound'), ('Zhou', 'appos'), (',', 'punct'), ('“', 'punct'), ('Ensemble', 'compound'), ('Learning', 'appos'), ('”', 'punct'), (',', 'punct'), ('National', 'compound'), ('Key', 'compound'), ('Laboratory', 'conj'), (' ', 'pobj')]

>> Bigrams: 
[[Kluwer, Academic], [Academic, Publishers], [Publishers, ,], [,, 1997], [1997,   ], [  , [], [[, 20], [20, ]], [], D.], [D., Opitz], [Opitz, ,], [,, R.], [R., Maclin], [Maclin, ,], [,, “], [“, Popular], [Popular, Ensemble], [Ensemble, Methods], [Methods, :], [:, Empirical], [Empirical,  ], [ , Study], [Study, ”], [”, ,], [,, Journal], [Journal, Artificial], [Artificial, Intelligence], [Intelligence, Research], [Research, ,], [,, 11], [11, ,], [,, Pages], [Pages, 169-], [169-, 198], [198, ,], [,, 1999], [1999,   ], [  , [], [[, 21], [21, ]], [], Z.], [Z., H.], [H., Zhou], [Zhou, ,], [,, “], [“, Ensemble], [Ensemble, Learning], [Learning, ”], [”, ,], [,, National], [National, Key], [Key, Laboratory], [Laboratory,  ]]

>> Trigrams: 
[[Kluwer, Academic, Publishers], [Academic, Publishers, ,], [Publishers, ,, 1997], [,, 1997,   ], [1997,   , [], [  , [, 20], [[, 20, ]], [20, ], D.], [], D., Opitz], [D., Opitz, ,], [Opitz, ,, R.], [,, R., Maclin], [R., Maclin, ,], [Maclin, ,, “], [,, “, Popular], [“, Popular, Ensemble], [Popular, Ensemble, Methods], [Ensemble, Methods, :], [Methods, :, Empirical], [:, Empirical,  ], [Empirical,  , Study], [ , Study, ”], [Study, ”, ,], [”, ,, Journal], [,, Journal, Artificial], [Journal, Artificial, Intelligence], [Artificial, Intelligence, Research], [Intelligence, Research, ,], [Research, ,, 11], [,, 11, ,], [11, ,, Pages], [,, Pages, 169-], [Pages, 169-, 198], [169-, 198, ,], [198, ,, 1999], [,, 1999,   ], [1999,   , [], [  , [, 21], [[, 21, ]], [21, ], Z.], [], Z., H.], [Z., H., Zhou], [H., Zhou, ,], [Zhou, ,, “], [,, “, Ensemble], [“, Ensemble, Learning], [Ensemble, Learning, ”], [Learning, ”, ,], [”, ,, National], [,, National, Key], [National, Key, Laboratory], [Key, Laboratory,  ]]

>> Noun Phrases are: 
[Kluwer Academic Publishers, 20] D. Opitz, R. Maclin, Popular Ensemble Methods, An Empirical  Study, Journal, Artificial Intelligence Research, Pages, Z. H. Zhou, “Ensemble Learning, National Key Laboratory]

>> Named Entities are: 
[('Kluwer Academic Publishers', 'ORG'), ('1997', 'DATE'), ('20', 'CARDINAL'), ('R. Maclin', 'PERSON'), ('Popular Ensemble Methods: An Empirical  Study', 'WORK_OF_ART'), ('Journal of Artificial Intelligence Research', 'ORG'), ('11', 'DATE'), ('198', 'CARDINAL'), ('21', 'CARDINAL'), ('Z. H. Zhou', 'PERSON'), ('Ensemble Learning', 'WORK_OF_ART'), ('National Key Laboratory', 'ORG')]


============================ Sentence 279 =============================

Novel Software Technology, Nanjing University, Nanjing, China   [22] https://en.wikipedia.org/wiki/Boosting_(machine_learning)   


>> Tokens are: 
[Novel, Software, Technology, ,, Nanjing, University, ,, Nanjing, ,, China,   , [, 22, ], https://en.wikipedia.org/wiki/Boosting_(machine_learning, ),  ] 

>> PoS Tags are: 
[('Novel', 'PROPN'), ('Software', 'PROPN'), ('Technology', 'PROPN'), (',', 'PUNCT'), ('Nanjing', 'PROPN'), ('University', 'PROPN'), (',', 'PUNCT'), ('Nanjing', 'PROPN'), (',', 'PUNCT'), ('China', 'PROPN'), ('  ', 'SPACE'), ('[', 'PUNCT'), ('22', 'NUM'), (']', 'PUNCT'), ('https://en.wikipedia.org/wiki/Boosting_(machine_learning', 'VERB'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Novel', 'compound'), ('Software', 'compound'), ('Technology', 'nsubj'), (',', 'punct'), ('Nanjing', 'compound'), ('University', 'conj'), (',', 'punct'), ('Nanjing', 'conj'), (',', 'punct'), ('China', 'appos'), ('  ', 'appos'), ('[', 'punct'), ('22', 'appos'), (']', 'punct'), ('https://en.wikipedia.org/wiki/Boosting_(machine_learning', 'ROOT'), (')', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Novel, Software], [Software, Technology], [Technology, ,], [,, Nanjing], [Nanjing, University], [University, ,], [,, Nanjing], [Nanjing, ,], [,, China], [China,   ], [  , [], [[, 22], [22, ]], [], https://en.wikipedia.org/wiki/Boosting_(machine_learning], [https://en.wikipedia.org/wiki/Boosting_(machine_learning, )], [),  ]]

>> Trigrams: 
[[Novel, Software, Technology], [Software, Technology, ,], [Technology, ,, Nanjing], [,, Nanjing, University], [Nanjing, University, ,], [University, ,, Nanjing], [,, Nanjing, ,], [Nanjing, ,, China], [,, China,   ], [China,   , [], [  , [, 22], [[, 22, ]], [22, ], https://en.wikipedia.org/wiki/Boosting_(machine_learning], [], https://en.wikipedia.org/wiki/Boosting_(machine_learning, )], [https://en.wikipedia.org/wiki/Boosting_(machine_learning, ),  ]]

>> Noun Phrases are: 
[Novel Software Technology, Nanjing University, Nanjing, China]

>> Named Entities are: 
[('Nanjing University', 'ORG'), ('Nanjing', 'GPE'), ('China', 'GPE'), ('22', 'CARDINAL')]


============================ Sentence 280 =============================

[23] https://en.wikipedia.org/wiki/Bootstrap_aggregating   


>> Tokens are: 
[[, 23, ], https://en.wikipedia.org/wiki/Bootstrap_aggregating,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('23', 'NUM'), (']', 'PUNCT'), ('https://en.wikipedia.org/wiki/Bootstrap_aggregating', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('23', 'dep'), (']', 'punct'), ('https://en.wikipedia.org/wiki/Bootstrap_aggregating', 'ROOT'), (' ', 'dobj')]

>> Bigrams: 
[[[, 23], [23, ]], [], https://en.wikipedia.org/wiki/Bootstrap_aggregating], [https://en.wikipedia.org/wiki/Bootstrap_aggregating,  ]]

>> Trigrams: 
[[[, 23, ]], [23, ], https://en.wikipedia.org/wiki/Bootstrap_aggregating], [], https://en.wikipedia.org/wiki/Bootstrap_aggregating,  ]]

>> Noun Phrases are: 
[[23] https://en.wikipedia.org/wiki/Bootstrap_aggregating]

>> Named Entities are: 
[('23', 'CARDINAL')]


============================ Sentence 281 =============================

[24] V. Sharma, S. Rai, A. Dev, “A Comprehensive Study of Artificial   Neural Networks”, International Journal of Advanced Research in   


>> Tokens are: 
[[, 24, ], V., Sharma, ,, S., Rai, ,, A., Dev, ,, “, Comprehensive, Study, Artificial,   , Neural, Networks, ”, ,, International, Journal, Advanced, Research,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('24', 'NUM'), (']', 'PUNCT'), ('V.', 'PROPN'), ('Sharma', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('Rai', 'PROPN'), (',', 'PUNCT'), ('A.', 'NOUN'), ('Dev', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Comprehensive', 'PROPN'), ('Study', 'PROPN'), ('Artificial', 'PROPN'), ('  ', 'SPACE'), ('Neural', 'PROPN'), ('Networks', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('International', 'PROPN'), ('Journal', 'PROPN'), ('Advanced', 'PROPN'), ('Research', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('24', 'nummod'), (']', 'punct'), ('V.', 'compound'), ('Sharma', 'ROOT'), (',', 'punct'), ('S.', 'compound'), ('Rai', 'appos'), (',', 'punct'), ('A.', 'compound'), ('Dev', 'appos'), (',', 'punct'), ('“', 'punct'), ('Comprehensive', 'compound'), ('Study', 'appos'), ('Artificial', 'pobj'), ('  ', 'compound'), ('Neural', 'compound'), ('Networks', 'appos'), ('”', 'punct'), (',', 'punct'), ('International', 'compound'), ('Journal', 'conj'), ('Advanced', 'compound'), ('Research', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[[, 24], [24, ]], [], V.], [V., Sharma], [Sharma, ,], [,, S.], [S., Rai], [Rai, ,], [,, A.], [A., Dev], [Dev, ,], [,, “], [“, Comprehensive], [Comprehensive, Study], [Study, Artificial], [Artificial,   ], [  , Neural], [Neural, Networks], [Networks, ”], [”, ,], [,, International], [International, Journal], [Journal, Advanced], [Advanced, Research], [Research,  ]]

>> Trigrams: 
[[[, 24, ]], [24, ], V.], [], V., Sharma], [V., Sharma, ,], [Sharma, ,, S.], [,, S., Rai], [S., Rai, ,], [Rai, ,, A.], [,, A., Dev], [A., Dev, ,], [Dev, ,, “], [,, “, Comprehensive], [“, Comprehensive, Study], [Comprehensive, Study, Artificial], [Study, Artificial,   ], [Artificial,   , Neural], [  , Neural, Networks], [Neural, Networks, ”], [Networks, ”, ,], [”, ,, International], [,, International, Journal], [International, Journal, Advanced], [Journal, Advanced, Research], [Advanced, Research,  ]]

>> Noun Phrases are: 
[[24] V. Sharma, S. Rai, A. Dev, A Comprehensive Study, Artificial,   Neural Networks, International Journal, Advanced Research]

>> Named Entities are: 
[('S. Rai', 'PERSON'), ('A. Dev', 'PERSON'), ('A Comprehensive Study of Artificial   Neural Networks”', 'WORK_OF_ART'), ('International Journal of Advanced Research', 'ORG')]


============================ Sentence 282 =============================

Computer Science and Software Engineering, ISSN 2277128X,  Volume 2, Issue 10, October 2012   [25] S. B. Hiregoudar, K. Manjunath, K. S. Patil, “A Survey: Research  Summary on Neural Networks”, International Journal of Research in  Engineering and Technology, ISSN: 2319 1163, Volume 03, Special   


>> Tokens are: 
[Computer, Science, Software, Engineering, ,, ISSN, 2277128X, ,,  , Volume, 2, ,, Issue, 10, ,, October, 2012,   , [, 25, ], S., B., Hiregoudar, ,, K., Manjunath, ,, K., S., Patil, ,, “, Survey, :, Research,  , Summary, Neural, Networks, ”, ,, International, Journal, Research,  , Engineering, Technology, ,, ISSN, :, 2319, 1163, ,, Volume, 03, ,, Special,  ] 

>> PoS Tags are: 
[('Computer', 'PROPN'), ('Science', 'PROPN'), ('Software', 'PROPN'), ('Engineering', 'PROPN'), (',', 'PUNCT'), ('ISSN', 'PROPN'), ('2277128X', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE'), ('Volume', 'NOUN'), ('2', 'NUM'), (',', 'PUNCT'), ('Issue', 'NOUN'), ('10', 'NUM'), (',', 'PUNCT'), ('October', 'PROPN'), ('2012', 'NUM'), ('  ', 'SPACE'), ('[', 'PUNCT'), ('25', 'NUM'), (']', 'PUNCT'), ('S.', 'PROPN'), ('B.', 'PROPN'), ('Hiregoudar', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), ('Manjunath', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), ('S.', 'PROPN'), ('Patil', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Survey', 'NOUN'), (':', 'PUNCT'), ('Research', 'PROPN'), (' ', 'SPACE'), ('Summary', 'PROPN'), ('Neural', 'PROPN'), ('Networks', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('International', 'PROPN'), ('Journal', 'PROPN'), ('Research', 'PROPN'), (' ', 'SPACE'), ('Engineering', 'PROPN'), ('Technology', 'PROPN'), (',', 'PUNCT'), ('ISSN', 'PROPN'), (':', 'PUNCT'), ('2319', 'NUM'), ('1163', 'NUM'), (',', 'PUNCT'), ('Volume', 'NOUN'), ('03', 'NUM'), (',', 'PUNCT'), ('Special', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Computer', 'nmod'), ('Science', 'nmod'), ('Software', 'conj'), ('Engineering', 'nsubj'), (',', 'punct'), ('ISSN', 'compound'), ('2277128X', 'npadvmod'), (',', 'punct'), (' ', 'compound'), ('Volume', 'conj'), ('2', 'nummod'), (',', 'punct'), ('Issue', 'conj'), ('10', 'nummod'), (',', 'punct'), ('October', 'npadvmod'), ('2012', 'nummod'), ('  ', 'appos'), ('[', 'punct'), ('25', 'appos'), (']', 'punct'), ('S.', 'compound'), ('B.', 'compound'), ('Hiregoudar', 'appos'), (',', 'punct'), ('K.', 'compound'), ('Manjunath', 'appos'), (',', 'punct'), ('K.', 'compound'), ('S.', 'compound'), ('Patil', 'appos'), (',', 'punct'), ('“', 'punct'), ('Survey', 'ROOT'), (':', 'punct'), ('Research', 'appos'), (' ', 'punct'), ('Summary', 'appos'), ('Neural', 'compound'), ('Networks', 'pobj'), ('”', 'punct'), (',', 'punct'), ('International', 'compound'), ('Journal', 'appos'), ('Research', 'pobj'), (' ', 'pobj'), ('Engineering', 'appos'), ('Technology', 'conj'), (',', 'punct'), ('ISSN', 'appos'), (':', 'punct'), ('2319', 'nummod'), ('1163', 'appos'), (',', 'punct'), ('Volume', 'appos'), ('03', 'nummod'), (',', 'punct'), ('Special', 'appos'), (' ', 'appos')]

>> Bigrams: 
[[Computer, Science], [Science, Software], [Software, Engineering], [Engineering, ,], [,, ISSN], [ISSN, 2277128X], [2277128X, ,], [,,  ], [ , Volume], [Volume, 2], [2, ,], [,, Issue], [Issue, 10], [10, ,], [,, October], [October, 2012], [2012,   ], [  , [], [[, 25], [25, ]], [], S.], [S., B.], [B., Hiregoudar], [Hiregoudar, ,], [,, K.], [K., Manjunath], [Manjunath, ,], [,, K.], [K., S.], [S., Patil], [Patil, ,], [,, “], [“, Survey], [Survey, :], [:, Research], [Research,  ], [ , Summary], [Summary, Neural], [Neural, Networks], [Networks, ”], [”, ,], [,, International], [International, Journal], [Journal, Research], [Research,  ], [ , Engineering], [Engineering, Technology], [Technology, ,], [,, ISSN], [ISSN, :], [:, 2319], [2319, 1163], [1163, ,], [,, Volume], [Volume, 03], [03, ,], [,, Special], [Special,  ]]

>> Trigrams: 
[[Computer, Science, Software], [Science, Software, Engineering], [Software, Engineering, ,], [Engineering, ,, ISSN], [,, ISSN, 2277128X], [ISSN, 2277128X, ,], [2277128X, ,,  ], [,,  , Volume], [ , Volume, 2], [Volume, 2, ,], [2, ,, Issue], [,, Issue, 10], [Issue, 10, ,], [10, ,, October], [,, October, 2012], [October, 2012,   ], [2012,   , [], [  , [, 25], [[, 25, ]], [25, ], S.], [], S., B.], [S., B., Hiregoudar], [B., Hiregoudar, ,], [Hiregoudar, ,, K.], [,, K., Manjunath], [K., Manjunath, ,], [Manjunath, ,, K.], [,, K., S.], [K., S., Patil], [S., Patil, ,], [Patil, ,, “], [,, “, Survey], [“, Survey, :], [Survey, :, Research], [:, Research,  ], [Research,  , Summary], [ , Summary, Neural], [Summary, Neural, Networks], [Neural, Networks, ”], [Networks, ”, ,], [”, ,, International], [,, International, Journal], [International, Journal, Research], [Journal, Research,  ], [Research,  , Engineering], [ , Engineering, Technology], [Engineering, Technology, ,], [Technology, ,, ISSN], [,, ISSN, :], [ISSN, :, 2319], [:, 2319, 1163], [2319, 1163, ,], [1163, ,, Volume], [,, Volume, 03], [Volume, 03, ,], [03, ,, Special], [,, Special,  ]]

>> Noun Phrases are: 
[Computer Science and Software Engineering,  Volume, Issue, S. B. Hiregoudar, K. Manjunath, K. S. Patil, Research, Summary, Neural Networks, International Journal, Research, Engineering, Technology, ISSN, Volume, Special]

>> Named Entities are: 
[('ISSN', 'ORG'), ('2', 'CARDINAL'), ('10, October 2012', 'DATE'), ('25', 'CARDINAL'), ('S. B. Hiregoudar', 'PERSON'), ('K. Manjunath', 'PERSON'), ('K. S. Patil', 'PERSON'), ('A Survey: Research  Summary on Neural Networks”', 'WORK_OF_ART'), ('International Journal of Research', 'ORG'), ('ISSN', 'ORG'), ('2319 1163', 'DATE'), ('03', 'CARDINAL')]


============================ Sentence 283 =============================

Issue 


>> Tokens are: 
[Issue] 

>> PoS Tags are: 
[('Issue', 'NOUN')] 

>> Dependency Tags are: 
[('Issue', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Issue]

>> Named Entities are: 
[]


============================ Sentence 284 =============================

03 


>> Tokens are: 
[03] 

>> PoS Tags are: 
[('03', 'NUM')] 

>> Dependency Tags are: 
[('03', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('03', 'CARDINAL')]


============================ Sentence 285 =============================

, pages 385-389, May, 2014   [26] https://en.wikipedia.org/wiki/Instance-based_learning  [27] P. Harrington, “Machine Learning in Action”, Manning Publications   Co., Shelter Island, New York, ISBN 9781617290183, 2012  [28] J. M. Keller, M. R. Gray, J. A. Givens Jr., “A Fuzzy K-Nearest   Neighbor Algorithm”, IEEE Transactions on Systems, Man and  Cybernetics, Vol. 


>> Tokens are: 
[,, pages, 385, -, 389, ,, ,, 2014,   , [, 26, ], https://en.wikipedia.org/wiki/Instance-based_learning,  , [, 27, ], P., Harrington, ,, “, Machine, Learning, Action, ”, ,, Manning, Publications,   , Co., ,, Shelter, Island, ,, New, York, ,, ISBN, 9781617290183, ,, 2012,  , [, 28, ], J., M., Keller, ,, M., R., Gray, ,, J., A., Givens, Jr., ,, “, Fuzzy, K, -, Nearest,   , Neighbor, Algorithm, ”, ,, IEEE, Transactions, Systems, ,, Man,  , Cybernetics, ,, Vol, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('pages', 'NOUN'), ('385', 'NUM'), ('-', 'SYM'), ('389', 'NUM'), (',', 'PUNCT'), (',', 'PUNCT'), ('2014', 'NUM'), ('  ', 'SPACE'), ('[', 'PUNCT'), ('26', 'NUM'), (']', 'PUNCT'), ('https://en.wikipedia.org/wiki/Instance-based_learning', 'VERB'), (' ', 'SPACE'), ('[', 'PUNCT'), ('27', 'NUM'), (']', 'PUNCT'), ('P.', 'PROPN'), ('Harrington', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Machine', 'NOUN'), ('Learning', 'PROPN'), ('Action', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Manning', 'PROPN'), ('Publications', 'PROPN'), ('  ', 'SPACE'), ('Co.', 'PROPN'), (',', 'PUNCT'), ('Shelter', 'PROPN'), ('Island', 'PROPN'), (',', 'PUNCT'), ('New', 'PROPN'), ('York', 'PROPN'), (',', 'PUNCT'), ('ISBN', 'PROPN'), ('9781617290183', 'NUM'), (',', 'PUNCT'), ('2012', 'NUM'), (' ', 'SPACE'), ('[', 'PUNCT'), ('28', 'NUM'), (']', 'PUNCT'), ('J.', 'PROPN'), ('M.', 'PROPN'), ('Keller', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('R.', 'PROPN'), ('Gray', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('A.', 'PROPN'), ('Givens', 'PROPN'), ('Jr.', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Fuzzy', 'ADJ'), ('K', 'PROPN'), ('-', 'PUNCT'), ('Nearest', 'PROPN'), ('  ', 'SPACE'), ('Neighbor', 'PROPN'), ('Algorithm', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('IEEE', 'PROPN'), ('Transactions', 'PROPN'), ('Systems', 'PROPN'), (',', 'PUNCT'), ('Man', 'PROPN'), (' ', 'SPACE'), ('Cybernetics', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('pages', 'ROOT'), ('385', 'nummod'), ('-', 'punct'), ('389', 'prep'), (',', 'punct'), (',', 'punct'), ('2014', 'nummod'), ('  ', 'appos'), ('[', 'punct'), ('26', 'appos'), (']', 'punct'), ('https://en.wikipedia.org/wiki/Instance-based_learning', 'advcl'), (' ', 'dobj'), ('[', 'punct'), ('27', 'nummod'), (']', 'punct'), ('P.', 'compound'), ('Harrington', 'appos'), (',', 'punct'), ('“', 'punct'), ('Machine', 'compound'), ('Learning', 'appos'), ('Action', 'pobj'), ('”', 'punct'), (',', 'punct'), ('Manning', 'compound'), ('Publications', 'compound'), ('  ', 'compound'), ('Co.', 'conj'), (',', 'punct'), ('Shelter', 'compound'), ('Island', 'conj'), (',', 'punct'), ('New', 'compound'), ('York', 'conj'), (',', 'punct'), ('ISBN', 'npadvmod'), ('9781617290183', 'nummod'), (',', 'punct'), ('2012', 'nummod'), (' ', 'appos'), ('[', 'punct'), ('28', 'npadvmod'), (']', 'punct'), ('J.', 'compound'), ('M.', 'compound'), ('Keller', 'appos'), (',', 'punct'), ('M.', 'compound'), ('R.', 'compound'), ('Gray', 'appos'), (',', 'punct'), ('J.', 'compound'), ('A.', 'compound'), ('Givens', 'compound'), ('Jr.', 'appos'), (',', 'punct'), ('“', 'punct'), ('Fuzzy', 'compound'), ('K', 'compound'), ('-', 'punct'), ('Nearest', 'appos'), ('  ', 'compound'), ('Neighbor', 'compound'), ('Algorithm', 'appos'), ('”', 'punct'), (',', 'punct'), ('IEEE', 'compound'), ('Transactions', 'appos'), ('Systems', 'pobj'), (',', 'punct'), ('Man', 'conj'), (' ', 'conj'), ('Cybernetics', 'appos'), (',', 'punct'), ('Vol', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[,, pages], [pages, 385], [385, -], [-, 389], [389, ,], [,, ,], [,, 2014], [2014,   ], [  , [], [[, 26], [26, ]], [], https://en.wikipedia.org/wiki/Instance-based_learning], [https://en.wikipedia.org/wiki/Instance-based_learning,  ], [ , [], [[, 27], [27, ]], [], P.], [P., Harrington], [Harrington, ,], [,, “], [“, Machine], [Machine, Learning], [Learning, Action], [Action, ”], [”, ,], [,, Manning], [Manning, Publications], [Publications,   ], [  , Co.], [Co., ,], [,, Shelter], [Shelter, Island], [Island, ,], [,, New], [New, York], [York, ,], [,, ISBN], [ISBN, 9781617290183], [9781617290183, ,], [,, 2012], [2012,  ], [ , [], [[, 28], [28, ]], [], J.], [J., M.], [M., Keller], [Keller, ,], [,, M.], [M., R.], [R., Gray], [Gray, ,], [,, J.], [J., A.], [A., Givens], [Givens, Jr.], [Jr., ,], [,, “], [“, Fuzzy], [Fuzzy, K], [K, -], [-, Nearest], [Nearest,   ], [  , Neighbor], [Neighbor, Algorithm], [Algorithm, ”], [”, ,], [,, IEEE], [IEEE, Transactions], [Transactions, Systems], [Systems, ,], [,, Man], [Man,  ], [ , Cybernetics], [Cybernetics, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[,, pages, 385], [pages, 385, -], [385, -, 389], [-, 389, ,], [389, ,, ,], [,, ,, 2014], [,, 2014,   ], [2014,   , [], [  , [, 26], [[, 26, ]], [26, ], https://en.wikipedia.org/wiki/Instance-based_learning], [], https://en.wikipedia.org/wiki/Instance-based_learning,  ], [https://en.wikipedia.org/wiki/Instance-based_learning,  , [], [ , [, 27], [[, 27, ]], [27, ], P.], [], P., Harrington], [P., Harrington, ,], [Harrington, ,, “], [,, “, Machine], [“, Machine, Learning], [Machine, Learning, Action], [Learning, Action, ”], [Action, ”, ,], [”, ,, Manning], [,, Manning, Publications], [Manning, Publications,   ], [Publications,   , Co.], [  , Co., ,], [Co., ,, Shelter], [,, Shelter, Island], [Shelter, Island, ,], [Island, ,, New], [,, New, York], [New, York, ,], [York, ,, ISBN], [,, ISBN, 9781617290183], [ISBN, 9781617290183, ,], [9781617290183, ,, 2012], [,, 2012,  ], [2012,  , [], [ , [, 28], [[, 28, ]], [28, ], J.], [], J., M.], [J., M., Keller], [M., Keller, ,], [Keller, ,, M.], [,, M., R.], [M., R., Gray], [R., Gray, ,], [Gray, ,, J.], [,, J., A.], [J., A., Givens], [A., Givens, Jr.], [Givens, Jr., ,], [Jr., ,, “], [,, “, Fuzzy], [“, Fuzzy, K], [Fuzzy, K, -], [K, -, Nearest], [-, Nearest,   ], [Nearest,   , Neighbor], [  , Neighbor, Algorithm], [Neighbor, Algorithm, ”], [Algorithm, ”, ,], [”, ,, IEEE], [,, IEEE, Transactions], [IEEE, Transactions, Systems], [Transactions, Systems, ,], [Systems, ,, Man], [,, Man,  ], [Man,  , Cybernetics], [ , Cybernetics, ,], [Cybernetics, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[, pages, 27] P. Harrington, Machine Learning, Action, Manning Publications   Co., Shelter Island, New York, J. M. Keller, M. R. Gray, J. A. Givens Jr., A Fuzzy K-Nearest,   Neighbor Algorithm, IEEE Transactions, Systems, Man, Cybernetics, Vol]

>> Named Entities are: 
[('385', 'CARDINAL'), ('May', 'DATE'), ('2014', 'DATE'), ('26', 'CARDINAL'), ('27', 'CARDINAL'), ('P. Harrington', 'PERSON'), ('Machine Learning in Action', 'WORK_OF_ART'), ('Manning Publications   Co.', 'ORG'), ('Shelter Island', 'GPE'), ('New York', 'GPE'), ('2012', 'DATE'), ('28', 'CARDINAL'), ('J. M. Keller', 'PERSON'), ('M. R. Gray', 'PERSON'), ('J. A. Givens Jr.', 'PERSON'), ('Neighbor Algorithm', 'ORG'), ('IEEE Transactions on Systems', 'ORG'), ('Cybernetics', 'ORG')]


============================ Sentence 286 =============================

SMC-15, No. 4, August 1985   Ayon Dey / (IJCSIT) International Journal of Computer Science and Information Technologies, Vol. 


>> Tokens are: 
[SMC-15, ,, ., 4, ,, August, 1985,   , Ayon, Dey, /, (, IJCSIT, ), International, Journal, Computer, Science, Information, Technologies, ,, Vol, .] 

>> PoS Tags are: 
[('SMC-15', 'NOUN'), (',', 'PUNCT'), ('.', 'NOUN'), ('4', 'NUM'), (',', 'PUNCT'), ('August', 'PROPN'), ('1985', 'NUM'), ('  ', 'SPACE'), ('Ayon', 'PROPN'), ('Dey', 'PROPN'), ('/', 'SYM'), ('(', 'PUNCT'), ('IJCSIT', 'PROPN'), (')', 'PUNCT'), ('International', 'PROPN'), ('Journal', 'PROPN'), ('Computer', 'PROPN'), ('Science', 'PROPN'), ('Information', 'PROPN'), ('Technologies', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('SMC-15', 'ROOT'), (',', 'punct'), ('.', 'appos'), ('4', 'nummod'), (',', 'punct'), ('August', 'npadvmod'), ('1985', 'nummod'), ('  ', 'appos'), ('Ayon', 'compound'), ('Dey', 'appos'), ('/', 'punct'), ('(', 'punct'), ('IJCSIT', 'nmod'), (')', 'punct'), ('International', 'compound'), ('Journal', 'appos'), ('Computer', 'nmod'), ('Science', 'pobj'), ('Information', 'compound'), ('Technologies', 'conj'), (',', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[SMC-15, ,], [,, .], [., 4], [4, ,], [,, August], [August, 1985], [1985,   ], [  , Ayon], [Ayon, Dey], [Dey, /], [/, (], [(, IJCSIT], [IJCSIT, )], [), International], [International, Journal], [Journal, Computer], [Computer, Science], [Science, Information], [Information, Technologies], [Technologies, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[SMC-15, ,, .], [,, ., 4], [., 4, ,], [4, ,, August], [,, August, 1985], [August, 1985,   ], [1985,   , Ayon], [  , Ayon, Dey], [Ayon, Dey, /], [Dey, /, (], [/, (, IJCSIT], [(, IJCSIT, )], [IJCSIT, ), International], [), International, Journal], [International, Journal, Computer], [Journal, Computer, Science], [Computer, Science, Information], [Science, Information, Technologies], [Information, Technologies, ,], [Technologies, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[SMC-15, ., Ayon Dey, IJCSIT) International Journal, Computer Science, Information Technologies]

>> Named Entities are: 
[('4', 'CARDINAL'), ('August 1985', 'DATE'), ('Ayon Dey', 'ORG'), ('International Journal of Computer Science and Information Technologies', 'ORG')]


============================ Sentence 287 =============================

7 (3) , 2016, 1174-1179  www.ijcsit.com 1179 


>> Tokens are: 
[7, (, 3, ), ,, 2016, ,, 1174, -, 1179,  , www.ijcsit.com, 1179] 

>> PoS Tags are: 
[('7', 'NUM'), ('(', 'PUNCT'), ('3', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('2016', 'NUM'), (',', 'PUNCT'), ('1174', 'NUM'), ('-', 'SYM'), ('1179', 'NUM'), (' ', 'SPACE'), ('www.ijcsit.com', 'X'), ('1179', 'NUM')] 

>> Dependency Tags are: 
[('7', 'nummod'), ('(', 'punct'), ('3', 'appos'), (')', 'punct'), (',', 'punct'), ('2016', 'npadvmod'), (',', 'punct'), ('1174', 'appos'), ('-', 'punct'), ('1179', 'prep'), (' ', 'ROOT'), ('www.ijcsit.com', 'npadvmod'), ('1179', 'npadvmod')]

>> Bigrams: 
[[7, (], [(, 3], [3, )], [), ,], [,, 2016], [2016, ,], [,, 1174], [1174, -], [-, 1179], [1179,  ], [ , www.ijcsit.com], [www.ijcsit.com, 1179]]

>> Trigrams: 
[[7, (, 3], [(, 3, )], [3, ), ,], [), ,, 2016], [,, 2016, ,], [2016, ,, 1174], [,, 1174, -], [1174, -, 1179], [-, 1179,  ], [1179,  , www.ijcsit.com], [ , www.ijcsit.com, 1179]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('7', 'CARDINAL'), ('3', 'CARDINAL'), ('2016', 'DATE'), ('1174-1179', 'DATE')]
