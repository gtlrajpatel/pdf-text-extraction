				 *** Text Processing using NLTK *** 


============================ Sentence 1 =============================

OOPC++ UNIT-1   Prof. Rupesh G. Vaishnav rupesh.vaishnav@darshan.ac.in 94280-37452 Information & Network Security (2170709)	 Darshan Institute of Engineering & Technology UNIT-2 Stream ciphers and block ciphers      1  Unit-2 Stream ciphers and block ciphers Block Cipher structure Data Encryption standard (DES) Design principles of block cipher AES with structure AES Transformation functions Key expansion  Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  X.800 and RFC 2828 International Telecommunication Union (ITU) 2  Stream Cipher A stream cipher is one that encrypts a digital data stream one bit or one byte at a time. 


>> Tokens are: 
 ['OOPC++', 'UNIT-1', 'Prof.', 'Rupesh', 'G.', 'Vaishnav', 'rupesh.vaishnav', '@', 'darshan.ac.in', '94280-37452', 'Information', '&', 'Network', 'Security', '(', '2170709', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', 'UNIT-2', 'Stream', 'ciphers', 'block', 'ciphers', '1', 'Unit-2', 'Stream', 'ciphers', 'block', 'ciphers', 'Block', 'Cipher', 'structure', 'Data', 'Encryption', 'standard', '(', 'DES', ')', 'Design', 'principles', 'block', 'cipher', 'AES', 'structure', 'AES', 'Transformation', 'functions', 'Key', 'expansion', 'Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'X.800', 'RFC', '2828', 'International', 'Telecommunication', 'Union', '(', 'ITU', ')', '2', 'Stream', 'Cipher', 'A', 'stream', 'cipher', 'one', 'encrypts', 'digital', 'data', 'stream', 'one', 'bit', 'one', 'byte', 'time', '.']

>> Bigrams are: 
 [('OOPC++', 'UNIT-1'), ('UNIT-1', 'Prof.'), ('Prof.', 'Rupesh'), ('Rupesh', 'G.'), ('G.', 'Vaishnav'), ('Vaishnav', 'rupesh.vaishnav'), ('rupesh.vaishnav', '@'), ('@', 'darshan.ac.in'), ('darshan.ac.in', '94280-37452'), ('94280-37452', 'Information'), ('Information', '&'), ('&', 'Network'), ('Network', 'Security'), ('Security', '('), ('(', '2170709'), ('2170709', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', 'UNIT-2'), ('UNIT-2', 'Stream'), ('Stream', 'ciphers'), ('ciphers', 'block'), ('block', 'ciphers'), ('ciphers', '1'), ('1', 'Unit-2'), ('Unit-2', 'Stream'), ('Stream', 'ciphers'), ('ciphers', 'block'), ('block', 'ciphers'), ('ciphers', 'Block'), ('Block', 'Cipher'), ('Cipher', 'structure'), ('structure', 'Data'), ('Data', 'Encryption'), ('Encryption', 'standard'), ('standard', '('), ('(', 'DES'), ('DES', ')'), (')', 'Design'), ('Design', 'principles'), ('principles', 'block'), ('block', 'cipher'), ('cipher', 'AES'), ('AES', 'structure'), ('structure', 'AES'), ('AES', 'Transformation'), ('Transformation', 'functions'), ('functions', 'Key'), ('Key', 'expansion'), ('expansion', 'Unit-2'), ('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'X.800'), ('X.800', 'RFC'), ('RFC', '2828'), ('2828', 'International'), ('International', 'Telecommunication'), ('Telecommunication', 'Union'), ('Union', '('), ('(', 'ITU'), ('ITU', ')'), (')', '2'), ('2', 'Stream'), ('Stream', 'Cipher'), ('Cipher', 'A'), ('A', 'stream'), ('stream', 'cipher'), ('cipher', 'one'), ('one', 'encrypts'), ('encrypts', 'digital'), ('digital', 'data'), ('data', 'stream'), ('stream', 'one'), ('one', 'bit'), ('bit', 'one'), ('one', 'byte'), ('byte', 'time'), ('time', '.')]

>> Trigrams are: 
 [('OOPC++', 'UNIT-1', 'Prof.'), ('UNIT-1', 'Prof.', 'Rupesh'), ('Prof.', 'Rupesh', 'G.'), ('Rupesh', 'G.', 'Vaishnav'), ('G.', 'Vaishnav', 'rupesh.vaishnav'), ('Vaishnav', 'rupesh.vaishnav', '@'), ('rupesh.vaishnav', '@', 'darshan.ac.in'), ('@', 'darshan.ac.in', '94280-37452'), ('darshan.ac.in', '94280-37452', 'Information'), ('94280-37452', 'Information', '&'), ('Information', '&', 'Network'), ('&', 'Network', 'Security'), ('Network', 'Security', '('), ('Security', '(', '2170709'), ('(', '2170709', ')'), ('2170709', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', 'UNIT-2'), ('Technology', 'UNIT-2', 'Stream'), ('UNIT-2', 'Stream', 'ciphers'), ('Stream', 'ciphers', 'block'), ('ciphers', 'block', 'ciphers'), ('block', 'ciphers', '1'), ('ciphers', '1', 'Unit-2'), ('1', 'Unit-2', 'Stream'), ('Unit-2', 'Stream', 'ciphers'), ('Stream', 'ciphers', 'block'), ('ciphers', 'block', 'ciphers'), ('block', 'ciphers', 'Block'), ('ciphers', 'Block', 'Cipher'), ('Block', 'Cipher', 'structure'), ('Cipher', 'structure', 'Data'), ('structure', 'Data', 'Encryption'), ('Data', 'Encryption', 'standard'), ('Encryption', 'standard', '('), ('standard', '(', 'DES'), ('(', 'DES', ')'), ('DES', ')', 'Design'), (')', 'Design', 'principles'), ('Design', 'principles', 'block'), ('principles', 'block', 'cipher'), ('block', 'cipher', 'AES'), ('cipher', 'AES', 'structure'), ('AES', 'structure', 'AES'), ('structure', 'AES', 'Transformation'), ('AES', 'Transformation', 'functions'), ('Transformation', 'functions', 'Key'), ('functions', 'Key', 'expansion'), ('Key', 'expansion', 'Unit-2'), ('expansion', 'Unit-2', 'Darshan'), ('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'X.800'), ('›', 'X.800', 'RFC'), ('X.800', 'RFC', '2828'), ('RFC', '2828', 'International'), ('2828', 'International', 'Telecommunication'), ('International', 'Telecommunication', 'Union'), ('Telecommunication', 'Union', '('), ('Union', '(', 'ITU'), ('(', 'ITU', ')'), ('ITU', ')', '2'), (')', '2', 'Stream'), ('2', 'Stream', 'Cipher'), ('Stream', 'Cipher', 'A'), ('Cipher', 'A', 'stream'), ('A', 'stream', 'cipher'), ('stream', 'cipher', 'one'), ('cipher', 'one', 'encrypts'), ('one', 'encrypts', 'digital'), ('encrypts', 'digital', 'data'), ('digital', 'data', 'stream'), ('data', 'stream', 'one'), ('stream', 'one', 'bit'), ('one', 'bit', 'one'), ('bit', 'one', 'byte'), ('one', 'byte', 'time'), ('byte', 'time', '.')]

>> POS Tags are: 
 [('OOPC++', 'NNP'), ('UNIT-1', 'NNP'), ('Prof.', 'NNP'), ('Rupesh', 'NNP'), ('G.', 'NNP'), ('Vaishnav', 'NNP'), ('rupesh.vaishnav', 'NN'), ('@', 'NNP'), ('darshan.ac.in', 'VBZ'), ('94280-37452', 'CD'), ('Information', 'NNP'), ('&', 'CC'), ('Network', 'NNP'), ('Security', 'NNP'), ('(', '('), ('2170709', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('UNIT-2', 'NNP'), ('Stream', 'NNP'), ('ciphers', 'NNS'), ('block', 'VBP'), ('ciphers', 'NNS'), ('1', 'CD'), ('Unit-2', 'JJ'), ('Stream', 'NNP'), ('ciphers', 'NNS'), ('block', 'VBP'), ('ciphers', 'NNS'), ('Block', 'NNP'), ('Cipher', 'NNP'), ('structure', 'NN'), ('Data', 'NNP'), ('Encryption', 'NNP'), ('standard', 'NN'), ('(', '('), ('DES', 'NNP'), (')', ')'), ('Design', 'NNP'), ('principles', 'VBZ'), ('block', 'VB'), ('cipher', 'JJR'), ('AES', 'NNP'), ('structure', 'NN'), ('AES', 'NNP'), ('Transformation', 'NNP'), ('functions', 'NNS'), ('Key', 'NNP'), ('expansion', 'NN'), ('Unit-2', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('X.800', 'NNP'), ('RFC', 'NNP'), ('2828', 'CD'), ('International', 'NNP'), ('Telecommunication', 'NNP'), ('Union', 'NNP'), ('(', '('), ('ITU', 'NNP'), (')', ')'), ('2', 'CD'), ('Stream', 'NNP'), ('Cipher', 'NNP'), ('A', 'NNP'), ('stream', 'NN'), ('cipher', 'NN'), ('one', 'CD'), ('encrypts', 'VBZ'), ('digital', 'JJ'), ('data', 'NNS'), ('stream', 'NN'), ('one', 'CD'), ('bit', 'NN'), ('one', 'CD'), ('byte', 'NN'), ('time', 'NN'), ('.', '.')]

 (S
  (NP
    OOPC++/NNP
    UNIT-1/NNP
    Prof./NNP
    Rupesh/NNP
    G./NNP
    Vaishnav/NNP
    rupesh.vaishnav/NN
    @/NNP)
  darshan.ac.in/VBZ
  94280-37452/CD
  (NP Information/NNP)
  &/CC
  (NP Network/NNP Security/NNP)
  (/(
  2170709/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP UNIT-2/NNP Stream/NNP ciphers/NNS)
  block/VBP
  (NP ciphers/NNS)
  1/CD
  (NP Unit-2/JJ Stream/NNP ciphers/NNS)
  block/VBP
  (NP
    ciphers/NNS
    Block/NNP
    Cipher/NNP
    structure/NN
    Data/NNP
    Encryption/NNP
    standard/NN)
  (/(
  (NP DES/NNP)
  )/)
  (NP Design/NNP)
  principles/VBZ
  block/VB
  cipher/JJR
  (NP
    AES/NNP
    structure/NN
    AES/NNP
    Transformation/NNP
    functions/NNS
    Key/NNP
    expansion/NN
    Unit-2/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP X.800/NNP RFC/NNP)
  2828/CD
  (NP International/NNP Telecommunication/NNP Union/NNP)
  (/(
  (NP ITU/NNP)
  )/)
  2/CD
  (NP Stream/NNP Cipher/NNP A/NNP stream/NN cipher/NN)
  one/CD
  encrypts/VBZ
  (NP digital/JJ data/NNS stream/NN)
  one/CD
  (NP bit/NN)
  one/CD
  (NP byte/NN time/NN)
  ./.) 


>> Noun Phrases are: 
 ['OOPC++ UNIT-1 Prof. Rupesh G. Vaishnav rupesh.vaishnav @', 'Information', 'Network Security', 'Darshan Institute Engineering', 'Technology UNIT-2 Stream ciphers', 'ciphers', 'Unit-2 Stream ciphers', 'ciphers Block Cipher structure Data Encryption standard', 'DES', 'Design', 'AES structure AES Transformation functions Key expansion Unit-2 Darshan Institute Engineering', 'Technology ‹', '› X.800 RFC', 'International Telecommunication Union', 'ITU', 'Stream Cipher A stream cipher', 'digital data stream', 'bit', 'byte time']

>> Named Entities are: 
 [('PERSON', 'Rupesh G. Vaishnav'), ('PERSON', 'Network Security'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Block Cipher'), ('PERSON', 'Data Encryption'), ('ORGANIZATION', 'AES'), ('ORGANIZATION', 'AES'), ('GPE', 'Key'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'International Telecommunication Union'), ('ORGANIZATION', 'ITU'), ('PERSON', 'Stream Cipher')] 

>> Stemming using Porter Stemmer: 
 [('OOPC++', 'oopc++'), ('UNIT-1', 'unit-1'), ('Prof.', 'prof.'), ('Rupesh', 'rupesh'), ('G.', 'g.'), ('Vaishnav', 'vaishnav'), ('rupesh.vaishnav', 'rupesh.vaishnav'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('94280-37452', '94280-37452'), ('Information', 'inform'), ('&', '&'), ('Network', 'network'), ('Security', 'secur'), ('(', '('), ('2170709', '2170709'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('UNIT-2', 'unit-2'), ('Stream', 'stream'), ('ciphers', 'cipher'), ('block', 'block'), ('ciphers', 'cipher'), ('1', '1'), ('Unit-2', 'unit-2'), ('Stream', 'stream'), ('ciphers', 'cipher'), ('block', 'block'), ('ciphers', 'cipher'), ('Block', 'block'), ('Cipher', 'cipher'), ('structure', 'structur'), ('Data', 'data'), ('Encryption', 'encrypt'), ('standard', 'standard'), ('(', '('), ('DES', 'de'), (')', ')'), ('Design', 'design'), ('principles', 'principl'), ('block', 'block'), ('cipher', 'cipher'), ('AES', 'ae'), ('structure', 'structur'), ('AES', 'ae'), ('Transformation', 'transform'), ('functions', 'function'), ('Key', 'key'), ('expansion', 'expans'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('X.800', 'x.800'), ('RFC', 'rfc'), ('2828', '2828'), ('International', 'intern'), ('Telecommunication', 'telecommun'), ('Union', 'union'), ('(', '('), ('ITU', 'itu'), (')', ')'), ('2', '2'), ('Stream', 'stream'), ('Cipher', 'cipher'), ('A', 'a'), ('stream', 'stream'), ('cipher', 'cipher'), ('one', 'one'), ('encrypts', 'encrypt'), ('digital', 'digit'), ('data', 'data'), ('stream', 'stream'), ('one', 'one'), ('bit', 'bit'), ('one', 'one'), ('byte', 'byte'), ('time', 'time'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('OOPC++', 'oopc++'), ('UNIT-1', 'unit-1'), ('Prof.', 'prof.'), ('Rupesh', 'rupesh'), ('G.', 'g.'), ('Vaishnav', 'vaishnav'), ('rupesh.vaishnav', 'rupesh.vaishnav'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('94280-37452', '94280-37452'), ('Information', 'inform'), ('&', '&'), ('Network', 'network'), ('Security', 'secur'), ('(', '('), ('2170709', '2170709'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('UNIT-2', 'unit-2'), ('Stream', 'stream'), ('ciphers', 'cipher'), ('block', 'block'), ('ciphers', 'cipher'), ('1', '1'), ('Unit-2', 'unit-2'), ('Stream', 'stream'), ('ciphers', 'cipher'), ('block', 'block'), ('ciphers', 'cipher'), ('Block', 'block'), ('Cipher', 'cipher'), ('structure', 'structur'), ('Data', 'data'), ('Encryption', 'encrypt'), ('standard', 'standard'), ('(', '('), ('DES', 'des'), (')', ')'), ('Design', 'design'), ('principles', 'principl'), ('block', 'block'), ('cipher', 'cipher'), ('AES', 'ae'), ('structure', 'structur'), ('AES', 'ae'), ('Transformation', 'transform'), ('functions', 'function'), ('Key', 'key'), ('expansion', 'expans'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('X.800', 'x.800'), ('RFC', 'rfc'), ('2828', '2828'), ('International', 'intern'), ('Telecommunication', 'telecommun'), ('Union', 'union'), ('(', '('), ('ITU', 'itu'), (')', ')'), ('2', '2'), ('Stream', 'stream'), ('Cipher', 'cipher'), ('A', 'a'), ('stream', 'stream'), ('cipher', 'cipher'), ('one', 'one'), ('encrypts', 'encrypt'), ('digital', 'digit'), ('data', 'data'), ('stream', 'stream'), ('one', 'one'), ('bit', 'bit'), ('one', 'one'), ('byte', 'byte'), ('time', 'time'), ('.', '.')]

>> Lemmatization: 
 [('OOPC++', 'OOPC++'), ('UNIT-1', 'UNIT-1'), ('Prof.', 'Prof.'), ('Rupesh', 'Rupesh'), ('G.', 'G.'), ('Vaishnav', 'Vaishnav'), ('rupesh.vaishnav', 'rupesh.vaishnav'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('94280-37452', '94280-37452'), ('Information', 'Information'), ('&', '&'), ('Network', 'Network'), ('Security', 'Security'), ('(', '('), ('2170709', '2170709'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('UNIT-2', 'UNIT-2'), ('Stream', 'Stream'), ('ciphers', 'cipher'), ('block', 'block'), ('ciphers', 'cipher'), ('1', '1'), ('Unit-2', 'Unit-2'), ('Stream', 'Stream'), ('ciphers', 'cipher'), ('block', 'block'), ('ciphers', 'cipher'), ('Block', 'Block'), ('Cipher', 'Cipher'), ('structure', 'structure'), ('Data', 'Data'), ('Encryption', 'Encryption'), ('standard', 'standard'), ('(', '('), ('DES', 'DES'), (')', ')'), ('Design', 'Design'), ('principles', 'principle'), ('block', 'block'), ('cipher', 'cipher'), ('AES', 'AES'), ('structure', 'structure'), ('AES', 'AES'), ('Transformation', 'Transformation'), ('functions', 'function'), ('Key', 'Key'), ('expansion', 'expansion'), ('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('X.800', 'X.800'), ('RFC', 'RFC'), ('2828', '2828'), ('International', 'International'), ('Telecommunication', 'Telecommunication'), ('Union', 'Union'), ('(', '('), ('ITU', 'ITU'), (')', ')'), ('2', '2'), ('Stream', 'Stream'), ('Cipher', 'Cipher'), ('A', 'A'), ('stream', 'stream'), ('cipher', 'cipher'), ('one', 'one'), ('encrypts', 'encrypts'), ('digital', 'digital'), ('data', 'data'), ('stream', 'stream'), ('one', 'one'), ('bit', 'bit'), ('one', 'one'), ('byte', 'byte'), ('time', 'time'), ('.', '.')]



============================ Sentence 2 =============================

Examples of classical stream ciphers are Autokeyed Vigenère cipher ,A5/1,  RC4 and Vernam cipher. 


>> Tokens are: 
 ['Examples', 'classical', 'stream', 'ciphers', 'Autokeyed', 'Vigenère', 'cipher', ',', 'A5/1', ',', 'RC4', 'Vernam', 'cipher', '.']

>> Bigrams are: 
 [('Examples', 'classical'), ('classical', 'stream'), ('stream', 'ciphers'), ('ciphers', 'Autokeyed'), ('Autokeyed', 'Vigenère'), ('Vigenère', 'cipher'), ('cipher', ','), (',', 'A5/1'), ('A5/1', ','), (',', 'RC4'), ('RC4', 'Vernam'), ('Vernam', 'cipher'), ('cipher', '.')]

>> Trigrams are: 
 [('Examples', 'classical', 'stream'), ('classical', 'stream', 'ciphers'), ('stream', 'ciphers', 'Autokeyed'), ('ciphers', 'Autokeyed', 'Vigenère'), ('Autokeyed', 'Vigenère', 'cipher'), ('Vigenère', 'cipher', ','), ('cipher', ',', 'A5/1'), (',', 'A5/1', ','), ('A5/1', ',', 'RC4'), (',', 'RC4', 'Vernam'), ('RC4', 'Vernam', 'cipher'), ('Vernam', 'cipher', '.')]

>> POS Tags are: 
 [('Examples', 'NNS'), ('classical', 'JJ'), ('stream', 'NN'), ('ciphers', 'NNS'), ('Autokeyed', 'NNP'), ('Vigenère', 'NNP'), ('cipher', 'NN'), (',', ','), ('A5/1', 'NNP'), (',', ','), ('RC4', 'NNP'), ('Vernam', 'NNP'), ('cipher', 'NN'), ('.', '.')]

 (S
  (NP Examples/NNS)
  (NP
    classical/JJ
    stream/NN
    ciphers/NNS
    Autokeyed/NNP
    Vigenère/NNP
    cipher/NN)
  ,/,
  (NP A5/1/NNP)
  ,/,
  (NP RC4/NNP Vernam/NNP cipher/NN)
  ./.) 


>> Noun Phrases are: 
 ['Examples', 'classical stream ciphers Autokeyed Vigenère cipher', 'A5/1', 'RC4 Vernam cipher']

>> Named Entities are: 
 [('PERSON', 'Autokeyed Vigenère'), ('ORGANIZATION', 'RC4 Vernam')] 

>> Stemming using Porter Stemmer: 
 [('Examples', 'exampl'), ('classical', 'classic'), ('stream', 'stream'), ('ciphers', 'cipher'), ('Autokeyed', 'autokey'), ('Vigenère', 'vigenèr'), ('cipher', 'cipher'), (',', ','), ('A5/1', 'a5/1'), (',', ','), ('RC4', 'rc4'), ('Vernam', 'vernam'), ('cipher', 'cipher'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Examples', 'exampl'), ('classical', 'classic'), ('stream', 'stream'), ('ciphers', 'cipher'), ('Autokeyed', 'autokey'), ('Vigenère', 'vigenèr'), ('cipher', 'cipher'), (',', ','), ('A5/1', 'a5/1'), (',', ','), ('RC4', 'rc4'), ('Vernam', 'vernam'), ('cipher', 'cipher'), ('.', '.')]

>> Lemmatization: 
 [('Examples', 'Examples'), ('classical', 'classical'), ('stream', 'stream'), ('ciphers', 'cipher'), ('Autokeyed', 'Autokeyed'), ('Vigenère', 'Vigenère'), ('cipher', 'cipher'), (',', ','), ('A5/1', 'A5/1'), (',', ','), ('RC4', 'RC4'), ('Vernam', 'Vernam'), ('cipher', 'cipher'), ('.', '.')]



============================ Sentence 3 =============================

Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  Block Cipher A  block cipher is one in which a block of plaintext is treated as a whole and used to produce a ciphertext block of equal length. 


>> Tokens are: 
 ['Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Block', 'Cipher', 'A', 'block', 'cipher', 'one', 'block', 'plaintext', 'treated', 'whole', 'used', 'produce', 'ciphertext', 'block', 'equal', 'length', '.']

>> Bigrams are: 
 [('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Block'), ('Block', 'Cipher'), ('Cipher', 'A'), ('A', 'block'), ('block', 'cipher'), ('cipher', 'one'), ('one', 'block'), ('block', 'plaintext'), ('plaintext', 'treated'), ('treated', 'whole'), ('whole', 'used'), ('used', 'produce'), ('produce', 'ciphertext'), ('ciphertext', 'block'), ('block', 'equal'), ('equal', 'length'), ('length', '.')]

>> Trigrams are: 
 [('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Block'), ('›', 'Block', 'Cipher'), ('Block', 'Cipher', 'A'), ('Cipher', 'A', 'block'), ('A', 'block', 'cipher'), ('block', 'cipher', 'one'), ('cipher', 'one', 'block'), ('one', 'block', 'plaintext'), ('block', 'plaintext', 'treated'), ('plaintext', 'treated', 'whole'), ('treated', 'whole', 'used'), ('whole', 'used', 'produce'), ('used', 'produce', 'ciphertext'), ('produce', 'ciphertext', 'block'), ('ciphertext', 'block', 'equal'), ('block', 'equal', 'length'), ('equal', 'length', '.')]

>> POS Tags are: 
 [('Unit-2', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Block', 'NNP'), ('Cipher', 'NNP'), ('A', 'NNP'), ('block', 'NN'), ('cipher', 'NN'), ('one', 'CD'), ('block', 'NN'), ('plaintext', 'NN'), ('treated', 'VBD'), ('whole', 'JJ'), ('used', 'VBN'), ('produce', 'NN'), ('ciphertext', 'JJ'), ('block', 'NN'), ('equal', 'JJ'), ('length', 'NN'), ('.', '.')]

 (S
  (NP Unit-2/NNP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Block/NNP Cipher/NNP A/NNP block/NN cipher/NN)
  one/CD
  (NP block/NN plaintext/NN)
  treated/VBD
  whole/JJ
  used/VBN
  (NP produce/NN)
  (NP ciphertext/JJ block/NN)
  (NP equal/JJ length/NN)
  ./.) 


>> Noun Phrases are: 
 ['Unit-2 Darshan Institute Engineering', 'Technology ‹', '› Block Cipher A block cipher', 'block plaintext', 'produce', 'ciphertext block', 'equal length']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Block', 'block'), ('Cipher', 'cipher'), ('A', 'a'), ('block', 'block'), ('cipher', 'cipher'), ('one', 'one'), ('block', 'block'), ('plaintext', 'plaintext'), ('treated', 'treat'), ('whole', 'whole'), ('used', 'use'), ('produce', 'produc'), ('ciphertext', 'ciphertext'), ('block', 'block'), ('equal', 'equal'), ('length', 'length'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Block', 'block'), ('Cipher', 'cipher'), ('A', 'a'), ('block', 'block'), ('cipher', 'cipher'), ('one', 'one'), ('block', 'block'), ('plaintext', 'plaintext'), ('treated', 'treat'), ('whole', 'whole'), ('used', 'use'), ('produce', 'produc'), ('ciphertext', 'ciphertext'), ('block', 'block'), ('equal', 'equal'), ('length', 'length'), ('.', '.')]

>> Lemmatization: 
 [('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Block', 'Block'), ('Cipher', 'Cipher'), ('A', 'A'), ('block', 'block'), ('cipher', 'cipher'), ('one', 'one'), ('block', 'block'), ('plaintext', 'plaintext'), ('treated', 'treated'), ('whole', 'whole'), ('used', 'used'), ('produce', 'produce'), ('ciphertext', 'ciphertext'), ('block', 'block'), ('equal', 'equal'), ('length', 'length'), ('.', '.')]



============================ Sentence 4 =============================

Typically, a block size of 64 or 128 bits is used. 


>> Tokens are: 
 ['Typically', ',', 'block', 'size', '64', '128', 'bits', 'used', '.']

>> Bigrams are: 
 [('Typically', ','), (',', 'block'), ('block', 'size'), ('size', '64'), ('64', '128'), ('128', 'bits'), ('bits', 'used'), ('used', '.')]

>> Trigrams are: 
 [('Typically', ',', 'block'), (',', 'block', 'size'), ('block', 'size', '64'), ('size', '64', '128'), ('64', '128', 'bits'), ('128', 'bits', 'used'), ('bits', 'used', '.')]

>> POS Tags are: 
 [('Typically', 'RB'), (',', ','), ('block', 'NN'), ('size', 'NN'), ('64', 'CD'), ('128', 'CD'), ('bits', 'NNS'), ('used', 'VBN'), ('.', '.')]

 (S
  Typically/RB
  ,/,
  (NP block/NN size/NN)
  64/CD
  128/CD
  (NP bits/NNS)
  used/VBN
  ./.) 


>> Noun Phrases are: 
 ['block size', 'bits']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Typically', 'typic'), (',', ','), ('block', 'block'), ('size', 'size'), ('64', '64'), ('128', '128'), ('bits', 'bit'), ('used', 'use'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Typically', 'typic'), (',', ','), ('block', 'block'), ('size', 'size'), ('64', '64'), ('128', '128'), ('bits', 'bit'), ('used', 'use'), ('.', '.')]

>> Lemmatization: 
 [('Typically', 'Typically'), (',', ','), ('block', 'block'), ('size', 'size'), ('64', '64'), ('128', '128'), ('bits', 'bit'), ('used', 'used'), ('.', '.')]



============================ Sentence 5 =============================

Examples are Feistel Cipher, DES, Triple DES and AES    Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  Diffusion and Confusion Diffusion hides the relationship between the ciphertext and the plaintext. 


>> Tokens are: 
 ['Examples', 'Feistel', 'Cipher', ',', 'DES', ',', 'Triple', 'DES', 'AES', 'Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Diffusion', 'Confusion', 'Diffusion', 'hides', 'relationship', 'ciphertext', 'plaintext', '.']

>> Bigrams are: 
 [('Examples', 'Feistel'), ('Feistel', 'Cipher'), ('Cipher', ','), (',', 'DES'), ('DES', ','), (',', 'Triple'), ('Triple', 'DES'), ('DES', 'AES'), ('AES', 'Unit-2'), ('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Diffusion'), ('Diffusion', 'Confusion'), ('Confusion', 'Diffusion'), ('Diffusion', 'hides'), ('hides', 'relationship'), ('relationship', 'ciphertext'), ('ciphertext', 'plaintext'), ('plaintext', '.')]

>> Trigrams are: 
 [('Examples', 'Feistel', 'Cipher'), ('Feistel', 'Cipher', ','), ('Cipher', ',', 'DES'), (',', 'DES', ','), ('DES', ',', 'Triple'), (',', 'Triple', 'DES'), ('Triple', 'DES', 'AES'), ('DES', 'AES', 'Unit-2'), ('AES', 'Unit-2', 'Darshan'), ('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Diffusion'), ('›', 'Diffusion', 'Confusion'), ('Diffusion', 'Confusion', 'Diffusion'), ('Confusion', 'Diffusion', 'hides'), ('Diffusion', 'hides', 'relationship'), ('hides', 'relationship', 'ciphertext'), ('relationship', 'ciphertext', 'plaintext'), ('ciphertext', 'plaintext', '.')]

>> POS Tags are: 
 [('Examples', 'NNS'), ('Feistel', 'NNP'), ('Cipher', 'NNP'), (',', ','), ('DES', 'NNP'), (',', ','), ('Triple', 'NNP'), ('DES', 'NNP'), ('AES', 'NNP'), ('Unit-2', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Diffusion', 'NNP'), ('Confusion', 'NNP'), ('Diffusion', 'NNP'), ('hides', 'VBZ'), ('relationship', 'NN'), ('ciphertext', 'JJ'), ('plaintext', 'NN'), ('.', '.')]

 (S
  (NP Examples/NNS Feistel/NNP Cipher/NNP)
  ,/,
  (NP DES/NNP)
  ,/,
  (NP
    Triple/NNP
    DES/NNP
    AES/NNP
    Unit-2/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Diffusion/NNP Confusion/NNP Diffusion/NNP)
  hides/VBZ
  (NP relationship/NN)
  (NP ciphertext/JJ plaintext/NN)
  ./.) 


>> Noun Phrases are: 
 ['Examples Feistel Cipher', 'DES', 'Triple DES AES Unit-2 Darshan Institute Engineering', 'Technology ‹', '› Diffusion Confusion Diffusion', 'relationship', 'ciphertext plaintext']

>> Named Entities are: 
 [('PERSON', 'Feistel Cipher'), ('ORGANIZATION', 'DES'), ('PERSON', 'Triple'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('Examples', 'exampl'), ('Feistel', 'feistel'), ('Cipher', 'cipher'), (',', ','), ('DES', 'de'), (',', ','), ('Triple', 'tripl'), ('DES', 'de'), ('AES', 'ae'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffusion', 'diffus'), ('Confusion', 'confus'), ('Diffusion', 'diffus'), ('hides', 'hide'), ('relationship', 'relationship'), ('ciphertext', 'ciphertext'), ('plaintext', 'plaintext'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Examples', 'exampl'), ('Feistel', 'feistel'), ('Cipher', 'cipher'), (',', ','), ('DES', 'des'), (',', ','), ('Triple', 'tripl'), ('DES', 'des'), ('AES', 'ae'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffusion', 'diffus'), ('Confusion', 'confus'), ('Diffusion', 'diffus'), ('hides', 'hide'), ('relationship', 'relationship'), ('ciphertext', 'ciphertext'), ('plaintext', 'plaintext'), ('.', '.')]

>> Lemmatization: 
 [('Examples', 'Examples'), ('Feistel', 'Feistel'), ('Cipher', 'Cipher'), (',', ','), ('DES', 'DES'), (',', ','), ('Triple', 'Triple'), ('DES', 'DES'), ('AES', 'AES'), ('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffusion', 'Diffusion'), ('Confusion', 'Confusion'), ('Diffusion', 'Diffusion'), ('hides', 'hide'), ('relationship', 'relationship'), ('ciphertext', 'ciphertext'), ('plaintext', 'plaintext'), ('.', '.')]



============================ Sentence 6 =============================

This is achieved by having each plaintext digit affect the value of many ciphertext digits. 


>> Tokens are: 
 ['This', 'achieved', 'plaintext', 'digit', 'affect', 'value', 'many', 'ciphertext', 'digits', '.']

>> Bigrams are: 
 [('This', 'achieved'), ('achieved', 'plaintext'), ('plaintext', 'digit'), ('digit', 'affect'), ('affect', 'value'), ('value', 'many'), ('many', 'ciphertext'), ('ciphertext', 'digits'), ('digits', '.')]

>> Trigrams are: 
 [('This', 'achieved', 'plaintext'), ('achieved', 'plaintext', 'digit'), ('plaintext', 'digit', 'affect'), ('digit', 'affect', 'value'), ('affect', 'value', 'many'), ('value', 'many', 'ciphertext'), ('many', 'ciphertext', 'digits'), ('ciphertext', 'digits', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('achieved', 'VBD'), ('plaintext', 'JJ'), ('digit', 'NN'), ('affect', 'VBP'), ('value', 'NN'), ('many', 'JJ'), ('ciphertext', 'JJ'), ('digits', 'NNS'), ('.', '.')]

 (S
  This/DT
  achieved/VBD
  (NP plaintext/JJ digit/NN)
  affect/VBP
  (NP value/NN)
  (NP many/JJ ciphertext/JJ digits/NNS)
  ./.) 


>> Noun Phrases are: 
 ['plaintext digit', 'value', 'many ciphertext digits']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('achieved', 'achiev'), ('plaintext', 'plaintext'), ('digit', 'digit'), ('affect', 'affect'), ('value', 'valu'), ('many', 'mani'), ('ciphertext', 'ciphertext'), ('digits', 'digit'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('achieved', 'achiev'), ('plaintext', 'plaintext'), ('digit', 'digit'), ('affect', 'affect'), ('value', 'valu'), ('many', 'mani'), ('ciphertext', 'ciphertext'), ('digits', 'digit'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('achieved', 'achieved'), ('plaintext', 'plaintext'), ('digit', 'digit'), ('affect', 'affect'), ('value', 'value'), ('many', 'many'), ('ciphertext', 'ciphertext'), ('digits', 'digit'), ('.', '.')]



============================ Sentence 7 =============================

Confusion hides the relationship between the ciphertext and the key. 


>> Tokens are: 
 ['Confusion', 'hides', 'relationship', 'ciphertext', 'key', '.']

>> Bigrams are: 
 [('Confusion', 'hides'), ('hides', 'relationship'), ('relationship', 'ciphertext'), ('ciphertext', 'key'), ('key', '.')]

>> Trigrams are: 
 [('Confusion', 'hides', 'relationship'), ('hides', 'relationship', 'ciphertext'), ('relationship', 'ciphertext', 'key'), ('ciphertext', 'key', '.')]

>> POS Tags are: 
 [('Confusion', 'NNP'), ('hides', 'VBZ'), ('relationship', 'NN'), ('ciphertext', 'JJ'), ('key', 'NN'), ('.', '.')]

 (S
  (NP Confusion/NNP)
  hides/VBZ
  (NP relationship/NN)
  (NP ciphertext/JJ key/NN)
  ./.) 


>> Noun Phrases are: 
 ['Confusion', 'relationship', 'ciphertext key']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Confusion', 'confus'), ('hides', 'hide'), ('relationship', 'relationship'), ('ciphertext', 'ciphertext'), ('key', 'key'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Confusion', 'confus'), ('hides', 'hide'), ('relationship', 'relationship'), ('ciphertext', 'ciphertext'), ('key', 'key'), ('.', '.')]

>> Lemmatization: 
 [('Confusion', 'Confusion'), ('hides', 'hide'), ('relationship', 'relationship'), ('ciphertext', 'ciphertext'), ('key', 'key'), ('.', '.')]



============================ Sentence 8 =============================

This is achieved by the use of a complex substitution algorithm. 


>> Tokens are: 
 ['This', 'achieved', 'use', 'complex', 'substitution', 'algorithm', '.']

>> Bigrams are: 
 [('This', 'achieved'), ('achieved', 'use'), ('use', 'complex'), ('complex', 'substitution'), ('substitution', 'algorithm'), ('algorithm', '.')]

>> Trigrams are: 
 [('This', 'achieved', 'use'), ('achieved', 'use', 'complex'), ('use', 'complex', 'substitution'), ('complex', 'substitution', 'algorithm'), ('substitution', 'algorithm', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('achieved', 'VBN'), ('use', 'NN'), ('complex', 'JJ'), ('substitution', 'NN'), ('algorithm', 'NN'), ('.', '.')]

 (S
  This/DT
  achieved/VBN
  (NP use/NN)
  (NP complex/JJ substitution/NN algorithm/NN)
  ./.) 


>> Noun Phrases are: 
 ['use', 'complex substitution algorithm']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('achieved', 'achiev'), ('use', 'use'), ('complex', 'complex'), ('substitution', 'substitut'), ('algorithm', 'algorithm'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('achieved', 'achiev'), ('use', 'use'), ('complex', 'complex'), ('substitution', 'substitut'), ('algorithm', 'algorithm'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('achieved', 'achieved'), ('use', 'use'), ('complex', 'complex'), ('substitution', 'substitution'), ('algorithm', 'algorithm'), ('.', '.')]



============================ Sentence 9 =============================

Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›   Round 1   Plaintext (2w bits)   F   w bits w bits R0 L0 K1  R1 L1       Rn+1 Ln+1  Round i    F   Ki  Ri Li        Round n    F   Kn  Ln Rn Rn   Ln   Ciphertext (2w bits) Feistel Cipher Structure  Or Block Cipher Structure   Feistel Cipher Structure Input plaintext block of length 2w bits key K = n bits , Sub-keys: K1, K2, …, Kn (Derived from K) All rounds have the same structure. 


>> Tokens are: 
 ['Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Round', '1', 'Plaintext', '(', '2w', 'bits', ')', 'F', 'w', 'bits', 'w', 'bits', 'R0', 'L0', 'K1', 'R1', 'L1', 'Rn+1', 'Ln+1', 'Round', 'F', 'Ki', 'Ri', 'Li', 'Round', 'n', 'F', 'Kn', 'Ln', 'Rn', 'Rn', 'Ln', 'Ciphertext', '(', '2w', 'bits', ')', 'Feistel', 'Cipher', 'Structure', 'Or', 'Block', 'Cipher', 'Structure', 'Feistel', 'Cipher', 'Structure', 'Input', 'plaintext', 'block', 'length', '2w', 'bits', 'key', 'K', '=', 'n', 'bits', ',', 'Sub-keys', ':', 'K1', ',', 'K2', ',', '…', ',', 'Kn', '(', 'Derived', 'K', ')', 'All', 'rounds', 'structure', '.']

>> Bigrams are: 
 [('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Round'), ('Round', '1'), ('1', 'Plaintext'), ('Plaintext', '('), ('(', '2w'), ('2w', 'bits'), ('bits', ')'), (')', 'F'), ('F', 'w'), ('w', 'bits'), ('bits', 'w'), ('w', 'bits'), ('bits', 'R0'), ('R0', 'L0'), ('L0', 'K1'), ('K1', 'R1'), ('R1', 'L1'), ('L1', 'Rn+1'), ('Rn+1', 'Ln+1'), ('Ln+1', 'Round'), ('Round', 'F'), ('F', 'Ki'), ('Ki', 'Ri'), ('Ri', 'Li'), ('Li', 'Round'), ('Round', 'n'), ('n', 'F'), ('F', 'Kn'), ('Kn', 'Ln'), ('Ln', 'Rn'), ('Rn', 'Rn'), ('Rn', 'Ln'), ('Ln', 'Ciphertext'), ('Ciphertext', '('), ('(', '2w'), ('2w', 'bits'), ('bits', ')'), (')', 'Feistel'), ('Feistel', 'Cipher'), ('Cipher', 'Structure'), ('Structure', 'Or'), ('Or', 'Block'), ('Block', 'Cipher'), ('Cipher', 'Structure'), ('Structure', 'Feistel'), ('Feistel', 'Cipher'), ('Cipher', 'Structure'), ('Structure', 'Input'), ('Input', 'plaintext'), ('plaintext', 'block'), ('block', 'length'), ('length', '2w'), ('2w', 'bits'), ('bits', 'key'), ('key', 'K'), ('K', '='), ('=', 'n'), ('n', 'bits'), ('bits', ','), (',', 'Sub-keys'), ('Sub-keys', ':'), (':', 'K1'), ('K1', ','), (',', 'K2'), ('K2', ','), (',', '…'), ('…', ','), (',', 'Kn'), ('Kn', '('), ('(', 'Derived'), ('Derived', 'K'), ('K', ')'), (')', 'All'), ('All', 'rounds'), ('rounds', 'structure'), ('structure', '.')]

>> Trigrams are: 
 [('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Round'), ('›', 'Round', '1'), ('Round', '1', 'Plaintext'), ('1', 'Plaintext', '('), ('Plaintext', '(', '2w'), ('(', '2w', 'bits'), ('2w', 'bits', ')'), ('bits', ')', 'F'), (')', 'F', 'w'), ('F', 'w', 'bits'), ('w', 'bits', 'w'), ('bits', 'w', 'bits'), ('w', 'bits', 'R0'), ('bits', 'R0', 'L0'), ('R0', 'L0', 'K1'), ('L0', 'K1', 'R1'), ('K1', 'R1', 'L1'), ('R1', 'L1', 'Rn+1'), ('L1', 'Rn+1', 'Ln+1'), ('Rn+1', 'Ln+1', 'Round'), ('Ln+1', 'Round', 'F'), ('Round', 'F', 'Ki'), ('F', 'Ki', 'Ri'), ('Ki', 'Ri', 'Li'), ('Ri', 'Li', 'Round'), ('Li', 'Round', 'n'), ('Round', 'n', 'F'), ('n', 'F', 'Kn'), ('F', 'Kn', 'Ln'), ('Kn', 'Ln', 'Rn'), ('Ln', 'Rn', 'Rn'), ('Rn', 'Rn', 'Ln'), ('Rn', 'Ln', 'Ciphertext'), ('Ln', 'Ciphertext', '('), ('Ciphertext', '(', '2w'), ('(', '2w', 'bits'), ('2w', 'bits', ')'), ('bits', ')', 'Feistel'), (')', 'Feistel', 'Cipher'), ('Feistel', 'Cipher', 'Structure'), ('Cipher', 'Structure', 'Or'), ('Structure', 'Or', 'Block'), ('Or', 'Block', 'Cipher'), ('Block', 'Cipher', 'Structure'), ('Cipher', 'Structure', 'Feistel'), ('Structure', 'Feistel', 'Cipher'), ('Feistel', 'Cipher', 'Structure'), ('Cipher', 'Structure', 'Input'), ('Structure', 'Input', 'plaintext'), ('Input', 'plaintext', 'block'), ('plaintext', 'block', 'length'), ('block', 'length', '2w'), ('length', '2w', 'bits'), ('2w', 'bits', 'key'), ('bits', 'key', 'K'), ('key', 'K', '='), ('K', '=', 'n'), ('=', 'n', 'bits'), ('n', 'bits', ','), ('bits', ',', 'Sub-keys'), (',', 'Sub-keys', ':'), ('Sub-keys', ':', 'K1'), (':', 'K1', ','), ('K1', ',', 'K2'), (',', 'K2', ','), ('K2', ',', '…'), (',', '…', ','), ('…', ',', 'Kn'), (',', 'Kn', '('), ('Kn', '(', 'Derived'), ('(', 'Derived', 'K'), ('Derived', 'K', ')'), ('K', ')', 'All'), (')', 'All', 'rounds'), ('All', 'rounds', 'structure'), ('rounds', 'structure', '.')]

>> POS Tags are: 
 [('Unit-2', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Round', 'NNP'), ('1', 'CD'), ('Plaintext', 'NNP'), ('(', '('), ('2w', 'CD'), ('bits', 'NNS'), (')', ')'), ('F', 'NNP'), ('w', 'VBP'), ('bits', 'NNS'), ('w', 'VBP'), ('bits', 'NNS'), ('R0', 'NNP'), ('L0', 'NNP'), ('K1', 'NNP'), ('R1', 'NNP'), ('L1', 'NNP'), ('Rn+1', 'NNP'), ('Ln+1', 'NNP'), ('Round', 'NNP'), ('F', 'NNP'), ('Ki', 'NNP'), ('Ri', 'NNP'), ('Li', 'NNP'), ('Round', 'NNP'), ('n', 'RB'), ('F', 'NNP'), ('Kn', 'NNP'), ('Ln', 'NNP'), ('Rn', 'NNP'), ('Rn', 'NNP'), ('Ln', 'NNP'), ('Ciphertext', 'NNP'), ('(', '('), ('2w', 'CD'), ('bits', 'NNS'), (')', ')'), ('Feistel', 'NNP'), ('Cipher', 'NNP'), ('Structure', 'NNP'), ('Or', 'NNP'), ('Block', 'NNP'), ('Cipher', 'NNP'), ('Structure', 'NNP'), ('Feistel', 'NNP'), ('Cipher', 'NNP'), ('Structure', 'NNP'), ('Input', 'NNP'), ('plaintext', 'JJ'), ('block', 'NN'), ('length', 'NN'), ('2w', 'CD'), ('bits', 'NNS'), ('key', 'JJ'), ('K', 'NNP'), ('=', 'NNP'), ('n', 'MD'), ('bits', 'NNS'), (',', ','), ('Sub-keys', 'NNS'), (':', ':'), ('K1', 'NNP'), (',', ','), ('K2', 'NNP'), (',', ','), ('…', 'NNP'), (',', ','), ('Kn', 'NNP'), ('(', '('), ('Derived', 'NNP'), ('K', 'NNP'), (')', ')'), ('All', 'DT'), ('rounds', 'VBZ'), ('structure', 'NN'), ('.', '.')]

 (S
  (NP Unit-2/NNP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Round/NNP)
  1/CD
  (NP Plaintext/NNP)
  (/(
  2w/CD
  (NP bits/NNS)
  )/)
  (NP F/NNP)
  w/VBP
  (NP bits/NNS)
  w/VBP
  (NP
    bits/NNS
    R0/NNP
    L0/NNP
    K1/NNP
    R1/NNP
    L1/NNP
    Rn+1/NNP
    Ln+1/NNP
    Round/NNP
    F/NNP
    Ki/NNP
    Ri/NNP
    Li/NNP
    Round/NNP)
  n/RB
  (NP F/NNP Kn/NNP Ln/NNP Rn/NNP Rn/NNP Ln/NNP Ciphertext/NNP)
  (/(
  2w/CD
  (NP bits/NNS)
  )/)
  (NP
    Feistel/NNP
    Cipher/NNP
    Structure/NNP
    Or/NNP
    Block/NNP
    Cipher/NNP
    Structure/NNP
    Feistel/NNP
    Cipher/NNP
    Structure/NNP
    Input/NNP)
  (NP plaintext/JJ block/NN length/NN)
  2w/CD
  (NP bits/NNS)
  (NP key/JJ K/NNP =/NNP)
  n/MD
  (NP bits/NNS)
  ,/,
  (NP Sub-keys/NNS)
  :/:
  (NP K1/NNP)
  ,/,
  (NP K2/NNP)
  ,/,
  (NP …/NNP)
  ,/,
  (NP Kn/NNP)
  (/(
  (NP Derived/NNP K/NNP)
  )/)
  All/DT
  rounds/VBZ
  (NP structure/NN)
  ./.) 


>> Noun Phrases are: 
 ['Unit-2 Darshan Institute Engineering', 'Technology ‹', '› Round', 'Plaintext', 'bits', 'F', 'bits', 'bits R0 L0 K1 R1 L1 Rn+1 Ln+1 Round F Ki Ri Li Round', 'F Kn Ln Rn Rn Ln Ciphertext', 'bits', 'Feistel Cipher Structure Or Block Cipher Structure Feistel Cipher Structure Input', 'plaintext block length', 'bits', 'key K =', 'bits', 'Sub-keys', 'K1', 'K2', '…', 'Kn', 'Derived K', 'structure']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Feistel Cipher Structure Or Block Cipher Structure Feistel Cipher Structure Input'), ('GPE', 'K2'), ('GPE', 'Kn'), ('PERSON', 'Derived K')] 

>> Stemming using Porter Stemmer: 
 [('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Round', 'round'), ('1', '1'), ('Plaintext', 'plaintext'), ('(', '('), ('2w', '2w'), ('bits', 'bit'), (')', ')'), ('F', 'f'), ('w', 'w'), ('bits', 'bit'), ('w', 'w'), ('bits', 'bit'), ('R0', 'r0'), ('L0', 'l0'), ('K1', 'k1'), ('R1', 'r1'), ('L1', 'l1'), ('Rn+1', 'rn+1'), ('Ln+1', 'ln+1'), ('Round', 'round'), ('F', 'f'), ('Ki', 'ki'), ('Ri', 'ri'), ('Li', 'li'), ('Round', 'round'), ('n', 'n'), ('F', 'f'), ('Kn', 'kn'), ('Ln', 'ln'), ('Rn', 'rn'), ('Rn', 'rn'), ('Ln', 'ln'), ('Ciphertext', 'ciphertext'), ('(', '('), ('2w', '2w'), ('bits', 'bit'), (')', ')'), ('Feistel', 'feistel'), ('Cipher', 'cipher'), ('Structure', 'structur'), ('Or', 'or'), ('Block', 'block'), ('Cipher', 'cipher'), ('Structure', 'structur'), ('Feistel', 'feistel'), ('Cipher', 'cipher'), ('Structure', 'structur'), ('Input', 'input'), ('plaintext', 'plaintext'), ('block', 'block'), ('length', 'length'), ('2w', '2w'), ('bits', 'bit'), ('key', 'key'), ('K', 'k'), ('=', '='), ('n', 'n'), ('bits', 'bit'), (',', ','), ('Sub-keys', 'sub-key'), (':', ':'), ('K1', 'k1'), (',', ','), ('K2', 'k2'), (',', ','), ('…', '…'), (',', ','), ('Kn', 'kn'), ('(', '('), ('Derived', 'deriv'), ('K', 'k'), (')', ')'), ('All', 'all'), ('rounds', 'round'), ('structure', 'structur'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Round', 'round'), ('1', '1'), ('Plaintext', 'plaintext'), ('(', '('), ('2w', '2w'), ('bits', 'bit'), (')', ')'), ('F', 'f'), ('w', 'w'), ('bits', 'bit'), ('w', 'w'), ('bits', 'bit'), ('R0', 'r0'), ('L0', 'l0'), ('K1', 'k1'), ('R1', 'r1'), ('L1', 'l1'), ('Rn+1', 'rn+1'), ('Ln+1', 'ln+1'), ('Round', 'round'), ('F', 'f'), ('Ki', 'ki'), ('Ri', 'ri'), ('Li', 'li'), ('Round', 'round'), ('n', 'n'), ('F', 'f'), ('Kn', 'kn'), ('Ln', 'ln'), ('Rn', 'rn'), ('Rn', 'rn'), ('Ln', 'ln'), ('Ciphertext', 'ciphertext'), ('(', '('), ('2w', '2w'), ('bits', 'bit'), (')', ')'), ('Feistel', 'feistel'), ('Cipher', 'cipher'), ('Structure', 'structur'), ('Or', 'or'), ('Block', 'block'), ('Cipher', 'cipher'), ('Structure', 'structur'), ('Feistel', 'feistel'), ('Cipher', 'cipher'), ('Structure', 'structur'), ('Input', 'input'), ('plaintext', 'plaintext'), ('block', 'block'), ('length', 'length'), ('2w', '2w'), ('bits', 'bit'), ('key', 'key'), ('K', 'k'), ('=', '='), ('n', 'n'), ('bits', 'bit'), (',', ','), ('Sub-keys', 'sub-key'), (':', ':'), ('K1', 'k1'), (',', ','), ('K2', 'k2'), (',', ','), ('…', '…'), (',', ','), ('Kn', 'kn'), ('(', '('), ('Derived', 'deriv'), ('K', 'k'), (')', ')'), ('All', 'all'), ('rounds', 'round'), ('structure', 'structur'), ('.', '.')]

>> Lemmatization: 
 [('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Round', 'Round'), ('1', '1'), ('Plaintext', 'Plaintext'), ('(', '('), ('2w', '2w'), ('bits', 'bit'), (')', ')'), ('F', 'F'), ('w', 'w'), ('bits', 'bit'), ('w', 'w'), ('bits', 'bit'), ('R0', 'R0'), ('L0', 'L0'), ('K1', 'K1'), ('R1', 'R1'), ('L1', 'L1'), ('Rn+1', 'Rn+1'), ('Ln+1', 'Ln+1'), ('Round', 'Round'), ('F', 'F'), ('Ki', 'Ki'), ('Ri', 'Ri'), ('Li', 'Li'), ('Round', 'Round'), ('n', 'n'), ('F', 'F'), ('Kn', 'Kn'), ('Ln', 'Ln'), ('Rn', 'Rn'), ('Rn', 'Rn'), ('Ln', 'Ln'), ('Ciphertext', 'Ciphertext'), ('(', '('), ('2w', '2w'), ('bits', 'bit'), (')', ')'), ('Feistel', 'Feistel'), ('Cipher', 'Cipher'), ('Structure', 'Structure'), ('Or', 'Or'), ('Block', 'Block'), ('Cipher', 'Cipher'), ('Structure', 'Structure'), ('Feistel', 'Feistel'), ('Cipher', 'Cipher'), ('Structure', 'Structure'), ('Input', 'Input'), ('plaintext', 'plaintext'), ('block', 'block'), ('length', 'length'), ('2w', '2w'), ('bits', 'bit'), ('key', 'key'), ('K', 'K'), ('=', '='), ('n', 'n'), ('bits', 'bit'), (',', ','), ('Sub-keys', 'Sub-keys'), (':', ':'), ('K1', 'K1'), (',', ','), ('K2', 'K2'), (',', ','), ('…', '…'), (',', ','), ('Kn', 'Kn'), ('(', '('), ('Derived', 'Derived'), ('K', 'K'), (')', ')'), ('All', 'All'), ('rounds', 'round'), ('structure', 'structure'), ('.', '.')]



============================ Sentence 10 =============================

A substitution is performed by taking exclusive-OR on left half(Li) of the data and the output of round function F which has inputs right half(Ri) and sub key ki. 


>> Tokens are: 
 ['A', 'substitution', 'performed', 'taking', 'exclusive-OR', 'left', 'half', '(', 'Li', ')', 'data', 'output', 'round', 'function', 'F', 'inputs', 'right', 'half', '(', 'Ri', ')', 'sub', 'key', 'ki', '.']

>> Bigrams are: 
 [('A', 'substitution'), ('substitution', 'performed'), ('performed', 'taking'), ('taking', 'exclusive-OR'), ('exclusive-OR', 'left'), ('left', 'half'), ('half', '('), ('(', 'Li'), ('Li', ')'), (')', 'data'), ('data', 'output'), ('output', 'round'), ('round', 'function'), ('function', 'F'), ('F', 'inputs'), ('inputs', 'right'), ('right', 'half'), ('half', '('), ('(', 'Ri'), ('Ri', ')'), (')', 'sub'), ('sub', 'key'), ('key', 'ki'), ('ki', '.')]

>> Trigrams are: 
 [('A', 'substitution', 'performed'), ('substitution', 'performed', 'taking'), ('performed', 'taking', 'exclusive-OR'), ('taking', 'exclusive-OR', 'left'), ('exclusive-OR', 'left', 'half'), ('left', 'half', '('), ('half', '(', 'Li'), ('(', 'Li', ')'), ('Li', ')', 'data'), (')', 'data', 'output'), ('data', 'output', 'round'), ('output', 'round', 'function'), ('round', 'function', 'F'), ('function', 'F', 'inputs'), ('F', 'inputs', 'right'), ('inputs', 'right', 'half'), ('right', 'half', '('), ('half', '(', 'Ri'), ('(', 'Ri', ')'), ('Ri', ')', 'sub'), (')', 'sub', 'key'), ('sub', 'key', 'ki'), ('key', 'ki', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('substitution', 'NN'), ('performed', 'VBD'), ('taking', 'VBG'), ('exclusive-OR', 'JJ'), ('left', 'JJ'), ('half', 'NN'), ('(', '('), ('Li', 'NNP'), (')', ')'), ('data', 'NN'), ('output', 'NN'), ('round', 'NN'), ('function', 'NN'), ('F', 'NNP'), ('inputs', 'NNS'), ('right', 'RB'), ('half', 'NN'), ('(', '('), ('Ri', 'NNP'), (')', ')'), ('sub', 'VBP'), ('key', 'JJ'), ('ki', 'NN'), ('.', '.')]

 (S
  (NP A/DT substitution/NN)
  performed/VBD
  taking/VBG
  (NP exclusive-OR/JJ left/JJ half/NN)
  (/(
  (NP Li/NNP)
  )/)
  (NP data/NN output/NN round/NN function/NN F/NNP inputs/NNS)
  right/RB
  (NP half/NN)
  (/(
  (NP Ri/NNP)
  )/)
  sub/VBP
  (NP key/JJ ki/NN)
  ./.) 


>> Noun Phrases are: 
 ['A substitution', 'exclusive-OR left half', 'Li', 'data output round function F inputs', 'half', 'Ri', 'key ki']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('substitution', 'substitut'), ('performed', 'perform'), ('taking', 'take'), ('exclusive-OR', 'exclusive-or'), ('left', 'left'), ('half', 'half'), ('(', '('), ('Li', 'li'), (')', ')'), ('data', 'data'), ('output', 'output'), ('round', 'round'), ('function', 'function'), ('F', 'f'), ('inputs', 'input'), ('right', 'right'), ('half', 'half'), ('(', '('), ('Ri', 'ri'), (')', ')'), ('sub', 'sub'), ('key', 'key'), ('ki', 'ki'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('substitution', 'substitut'), ('performed', 'perform'), ('taking', 'take'), ('exclusive-OR', 'exclusive-or'), ('left', 'left'), ('half', 'half'), ('(', '('), ('Li', 'li'), (')', ')'), ('data', 'data'), ('output', 'output'), ('round', 'round'), ('function', 'function'), ('F', 'f'), ('inputs', 'input'), ('right', 'right'), ('half', 'half'), ('(', '('), ('Ri', 'ri'), (')', ')'), ('sub', 'sub'), ('key', 'key'), ('ki', 'ki'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('substitution', 'substitution'), ('performed', 'performed'), ('taking', 'taking'), ('exclusive-OR', 'exclusive-OR'), ('left', 'left'), ('half', 'half'), ('(', '('), ('Li', 'Li'), (')', ')'), ('data', 'data'), ('output', 'output'), ('round', 'round'), ('function', 'function'), ('F', 'F'), ('inputs', 'input'), ('right', 'right'), ('half', 'half'), ('(', '('), ('Ri', 'Ri'), (')', ')'), ('sub', 'sub'), ('key', 'key'), ('ki', 'ki'), ('.', '.')]



============================ Sentence 11 =============================

A permutation is performed that consists of interchange of two halves of data. 


>> Tokens are: 
 ['A', 'permutation', 'performed', 'consists', 'interchange', 'two', 'halves', 'data', '.']

>> Bigrams are: 
 [('A', 'permutation'), ('permutation', 'performed'), ('performed', 'consists'), ('consists', 'interchange'), ('interchange', 'two'), ('two', 'halves'), ('halves', 'data'), ('data', '.')]

>> Trigrams are: 
 [('A', 'permutation', 'performed'), ('permutation', 'performed', 'consists'), ('performed', 'consists', 'interchange'), ('consists', 'interchange', 'two'), ('interchange', 'two', 'halves'), ('two', 'halves', 'data'), ('halves', 'data', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('permutation', 'NN'), ('performed', 'VBN'), ('consists', 'VBZ'), ('interchange', 'NN'), ('two', 'CD'), ('halves', 'NNS'), ('data', 'NNS'), ('.', '.')]

 (S
  (NP A/DT permutation/NN)
  performed/VBN
  consists/VBZ
  (NP interchange/NN)
  two/CD
  (NP halves/NNS data/NNS)
  ./.) 


>> Noun Phrases are: 
 ['A permutation', 'interchange', 'halves data']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('permutation', 'permut'), ('performed', 'perform'), ('consists', 'consist'), ('interchange', 'interchang'), ('two', 'two'), ('halves', 'halv'), ('data', 'data'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('permutation', 'permut'), ('performed', 'perform'), ('consists', 'consist'), ('interchange', 'interchang'), ('two', 'two'), ('halves', 'halv'), ('data', 'data'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('permutation', 'permutation'), ('performed', 'performed'), ('consists', 'consists'), ('interchange', 'interchange'), ('two', 'two'), ('halves', 'half'), ('data', 'data'), ('.', '.')]



============================ Sentence 12 =============================

This structure is called Substitution-Permutation Network (SPN)   Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  Feistel Network Factors Block size: Common block size of 64-bit. 


>> Tokens are: 
 ['This', 'structure', 'called', 'Substitution-Permutation', 'Network', '(', 'SPN', ')', 'Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Feistel', 'Network', 'Factors', 'Block', 'size', ':', 'Common', 'block', 'size', '64-bit', '.']

>> Bigrams are: 
 [('This', 'structure'), ('structure', 'called'), ('called', 'Substitution-Permutation'), ('Substitution-Permutation', 'Network'), ('Network', '('), ('(', 'SPN'), ('SPN', ')'), (')', 'Unit-2'), ('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Feistel'), ('Feistel', 'Network'), ('Network', 'Factors'), ('Factors', 'Block'), ('Block', 'size'), ('size', ':'), (':', 'Common'), ('Common', 'block'), ('block', 'size'), ('size', '64-bit'), ('64-bit', '.')]

>> Trigrams are: 
 [('This', 'structure', 'called'), ('structure', 'called', 'Substitution-Permutation'), ('called', 'Substitution-Permutation', 'Network'), ('Substitution-Permutation', 'Network', '('), ('Network', '(', 'SPN'), ('(', 'SPN', ')'), ('SPN', ')', 'Unit-2'), (')', 'Unit-2', 'Darshan'), ('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Feistel'), ('›', 'Feistel', 'Network'), ('Feistel', 'Network', 'Factors'), ('Network', 'Factors', 'Block'), ('Factors', 'Block', 'size'), ('Block', 'size', ':'), ('size', ':', 'Common'), (':', 'Common', 'block'), ('Common', 'block', 'size'), ('block', 'size', '64-bit'), ('size', '64-bit', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('structure', 'NN'), ('called', 'VBN'), ('Substitution-Permutation', 'NNP'), ('Network', 'NNP'), ('(', '('), ('SPN', 'NNP'), (')', ')'), ('Unit-2', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Feistel', 'NNP'), ('Network', 'NNP'), ('Factors', 'NNP'), ('Block', 'NNP'), ('size', 'NN'), (':', ':'), ('Common', 'JJ'), ('block', 'NN'), ('size', 'NN'), ('64-bit', 'NN'), ('.', '.')]

 (S
  (NP This/DT structure/NN)
  called/VBN
  (NP Substitution-Permutation/NNP Network/NNP)
  (/(
  (NP SPN/NNP)
  )/)
  (NP Unit-2/NNP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Feistel/NNP Network/NNP Factors/NNP Block/NNP size/NN)
  :/:
  (NP Common/JJ block/NN size/NN 64-bit/NN)
  ./.) 


>> Noun Phrases are: 
 ['This structure', 'Substitution-Permutation Network', 'SPN', 'Unit-2 Darshan Institute Engineering', 'Technology ‹', '› Feistel Network Factors Block size', 'Common block size 64-bit']

>> Named Entities are: 
 [('ORGANIZATION', 'SPN'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Feistel Network Factors Block')] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('structure', 'structur'), ('called', 'call'), ('Substitution-Permutation', 'substitution-permut'), ('Network', 'network'), ('(', '('), ('SPN', 'spn'), (')', ')'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Feistel', 'feistel'), ('Network', 'network'), ('Factors', 'factor'), ('Block', 'block'), ('size', 'size'), (':', ':'), ('Common', 'common'), ('block', 'block'), ('size', 'size'), ('64-bit', '64-bit'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('structure', 'structur'), ('called', 'call'), ('Substitution-Permutation', 'substitution-permut'), ('Network', 'network'), ('(', '('), ('SPN', 'spn'), (')', ')'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Feistel', 'feistel'), ('Network', 'network'), ('Factors', 'factor'), ('Block', 'block'), ('size', 'size'), (':', ':'), ('Common', 'common'), ('block', 'block'), ('size', 'size'), ('64-bit', '64-bit'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('structure', 'structure'), ('called', 'called'), ('Substitution-Permutation', 'Substitution-Permutation'), ('Network', 'Network'), ('(', '('), ('SPN', 'SPN'), (')', ')'), ('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Feistel', 'Feistel'), ('Network', 'Network'), ('Factors', 'Factors'), ('Block', 'Block'), ('size', 'size'), (':', ':'), ('Common', 'Common'), ('block', 'block'), ('size', 'size'), ('64-bit', '64-bit'), ('.', '.')]



============================ Sentence 13 =============================

However, the new algorithms uses a 128-bit, 256-bit block size. 


>> Tokens are: 
 ['However', ',', 'new', 'algorithms', 'uses', '128-bit', ',', '256-bit', 'block', 'size', '.']

>> Bigrams are: 
 [('However', ','), (',', 'new'), ('new', 'algorithms'), ('algorithms', 'uses'), ('uses', '128-bit'), ('128-bit', ','), (',', '256-bit'), ('256-bit', 'block'), ('block', 'size'), ('size', '.')]

>> Trigrams are: 
 [('However', ',', 'new'), (',', 'new', 'algorithms'), ('new', 'algorithms', 'uses'), ('algorithms', 'uses', '128-bit'), ('uses', '128-bit', ','), ('128-bit', ',', '256-bit'), (',', '256-bit', 'block'), ('256-bit', 'block', 'size'), ('block', 'size', '.')]

>> POS Tags are: 
 [('However', 'RB'), (',', ','), ('new', 'JJ'), ('algorithms', 'JJ'), ('uses', 'VBZ'), ('128-bit', 'JJ'), (',', ','), ('256-bit', 'JJ'), ('block', 'NN'), ('size', 'NN'), ('.', '.')]

 (S
  However/RB
  ,/,
  new/JJ
  algorithms/JJ
  uses/VBZ
  128-bit/JJ
  ,/,
  (NP 256-bit/JJ block/NN size/NN)
  ./.) 


>> Noun Phrases are: 
 ['256-bit block size']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('However', 'howev'), (',', ','), ('new', 'new'), ('algorithms', 'algorithm'), ('uses', 'use'), ('128-bit', '128-bit'), (',', ','), ('256-bit', '256-bit'), ('block', 'block'), ('size', 'size'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('However', 'howev'), (',', ','), ('new', 'new'), ('algorithms', 'algorithm'), ('uses', 'use'), ('128-bit', '128-bit'), (',', ','), ('256-bit', '256-bit'), ('block', 'block'), ('size', 'size'), ('.', '.')]

>> Lemmatization: 
 [('However', 'However'), (',', ','), ('new', 'new'), ('algorithms', 'algorithm'), ('uses', 'us'), ('128-bit', '128-bit'), (',', ','), ('256-bit', '256-bit'), ('block', 'block'), ('size', 'size'), ('.', '.')]



============================ Sentence 14 =============================

Key size: Key sizes of 64 bits or less are now widely considered to be insufficient, These days at least 128 bit, more better, e.g.-.- 192 or 256 bit Number of rounds: A typical size is 16 rounds. 


>> Tokens are: 
 ['Key', 'size', ':', 'Key', 'sizes', '64', 'bits', 'less', 'widely', 'considered', 'insufficient', ',', 'These', 'days', 'least', '128', 'bit', ',', 'better', ',', 'e.g.-.-', '192', '256', 'bit', 'Number', 'rounds', ':', 'A', 'typical', 'size', '16', 'rounds', '.']

>> Bigrams are: 
 [('Key', 'size'), ('size', ':'), (':', 'Key'), ('Key', 'sizes'), ('sizes', '64'), ('64', 'bits'), ('bits', 'less'), ('less', 'widely'), ('widely', 'considered'), ('considered', 'insufficient'), ('insufficient', ','), (',', 'These'), ('These', 'days'), ('days', 'least'), ('least', '128'), ('128', 'bit'), ('bit', ','), (',', 'better'), ('better', ','), (',', 'e.g.-.-'), ('e.g.-.-', '192'), ('192', '256'), ('256', 'bit'), ('bit', 'Number'), ('Number', 'rounds'), ('rounds', ':'), (':', 'A'), ('A', 'typical'), ('typical', 'size'), ('size', '16'), ('16', 'rounds'), ('rounds', '.')]

>> Trigrams are: 
 [('Key', 'size', ':'), ('size', ':', 'Key'), (':', 'Key', 'sizes'), ('Key', 'sizes', '64'), ('sizes', '64', 'bits'), ('64', 'bits', 'less'), ('bits', 'less', 'widely'), ('less', 'widely', 'considered'), ('widely', 'considered', 'insufficient'), ('considered', 'insufficient', ','), ('insufficient', ',', 'These'), (',', 'These', 'days'), ('These', 'days', 'least'), ('days', 'least', '128'), ('least', '128', 'bit'), ('128', 'bit', ','), ('bit', ',', 'better'), (',', 'better', ','), ('better', ',', 'e.g.-.-'), (',', 'e.g.-.-', '192'), ('e.g.-.-', '192', '256'), ('192', '256', 'bit'), ('256', 'bit', 'Number'), ('bit', 'Number', 'rounds'), ('Number', 'rounds', ':'), ('rounds', ':', 'A'), (':', 'A', 'typical'), ('A', 'typical', 'size'), ('typical', 'size', '16'), ('size', '16', 'rounds'), ('16', 'rounds', '.')]

>> POS Tags are: 
 [('Key', 'JJ'), ('size', 'NN'), (':', ':'), ('Key', 'NNP'), ('sizes', 'VBZ'), ('64', 'CD'), ('bits', 'NNS'), ('less', 'RBR'), ('widely', 'RB'), ('considered', 'VBN'), ('insufficient', 'NN'), (',', ','), ('These', 'DT'), ('days', 'NNS'), ('least', 'VBD'), ('128', 'CD'), ('bit', 'NN'), (',', ','), ('better', 'JJR'), (',', ','), ('e.g.-.-', 'JJ'), ('192', 'CD'), ('256', 'CD'), ('bit', 'NN'), ('Number', 'NNP'), ('rounds', 'VBZ'), (':', ':'), ('A', 'DT'), ('typical', 'JJ'), ('size', 'NN'), ('16', 'CD'), ('rounds', 'NNS'), ('.', '.')]

 (S
  (NP Key/JJ size/NN)
  :/:
  (NP Key/NNP)
  sizes/VBZ
  64/CD
  (NP bits/NNS)
  less/RBR
  widely/RB
  considered/VBN
  (NP insufficient/NN)
  ,/,
  (NP These/DT days/NNS)
  least/VBD
  128/CD
  (NP bit/NN)
  ,/,
  better/JJR
  ,/,
  e.g.-.-/JJ
  192/CD
  256/CD
  (NP bit/NN Number/NNP)
  rounds/VBZ
  :/:
  (NP A/DT typical/JJ size/NN)
  16/CD
  (NP rounds/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Key size', 'Key', 'bits', 'insufficient', 'These days', 'bit', 'bit Number', 'A typical size', 'rounds']

>> Named Entities are: 
 [('GPE', 'Key'), ('PERSON', 'Key')] 

>> Stemming using Porter Stemmer: 
 [('Key', 'key'), ('size', 'size'), (':', ':'), ('Key', 'key'), ('sizes', 'size'), ('64', '64'), ('bits', 'bit'), ('less', 'less'), ('widely', 'wide'), ('considered', 'consid'), ('insufficient', 'insuffici'), (',', ','), ('These', 'these'), ('days', 'day'), ('least', 'least'), ('128', '128'), ('bit', 'bit'), (',', ','), ('better', 'better'), (',', ','), ('e.g.-.-', 'e.g.-.-'), ('192', '192'), ('256', '256'), ('bit', 'bit'), ('Number', 'number'), ('rounds', 'round'), (':', ':'), ('A', 'a'), ('typical', 'typic'), ('size', 'size'), ('16', '16'), ('rounds', 'round'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Key', 'key'), ('size', 'size'), (':', ':'), ('Key', 'key'), ('sizes', 'size'), ('64', '64'), ('bits', 'bit'), ('less', 'less'), ('widely', 'wide'), ('considered', 'consid'), ('insufficient', 'insuffici'), (',', ','), ('These', 'these'), ('days', 'day'), ('least', 'least'), ('128', '128'), ('bit', 'bit'), (',', ','), ('better', 'better'), (',', ','), ('e.g.-.-', 'e.g.-.-'), ('192', '192'), ('256', '256'), ('bit', 'bit'), ('Number', 'number'), ('rounds', 'round'), (':', ':'), ('A', 'a'), ('typical', 'typic'), ('size', 'size'), ('16', '16'), ('rounds', 'round'), ('.', '.')]

>> Lemmatization: 
 [('Key', 'Key'), ('size', 'size'), (':', ':'), ('Key', 'Key'), ('sizes', 'size'), ('64', '64'), ('bits', 'bit'), ('less', 'le'), ('widely', 'widely'), ('considered', 'considered'), ('insufficient', 'insufficient'), (',', ','), ('These', 'These'), ('days', 'day'), ('least', 'least'), ('128', '128'), ('bit', 'bit'), (',', ','), ('better', 'better'), (',', ','), ('e.g.-.-', 'e.g.-.-'), ('192', '192'), ('256', '256'), ('bit', 'bit'), ('Number', 'Number'), ('rounds', 'round'), (':', ':'), ('A', 'A'), ('typical', 'typical'), ('size', 'size'), ('16', '16'), ('rounds', 'round'), ('.', '.')]



============================ Sentence 15 =============================

Round function F: Again, greater complexity generally means greater resistance to cryptanalysis. 


>> Tokens are: 
 ['Round', 'function', 'F', ':', 'Again', ',', 'greater', 'complexity', 'generally', 'means', 'greater', 'resistance', 'cryptanalysis', '.']

>> Bigrams are: 
 [('Round', 'function'), ('function', 'F'), ('F', ':'), (':', 'Again'), ('Again', ','), (',', 'greater'), ('greater', 'complexity'), ('complexity', 'generally'), ('generally', 'means'), ('means', 'greater'), ('greater', 'resistance'), ('resistance', 'cryptanalysis'), ('cryptanalysis', '.')]

>> Trigrams are: 
 [('Round', 'function', 'F'), ('function', 'F', ':'), ('F', ':', 'Again'), (':', 'Again', ','), ('Again', ',', 'greater'), (',', 'greater', 'complexity'), ('greater', 'complexity', 'generally'), ('complexity', 'generally', 'means'), ('generally', 'means', 'greater'), ('means', 'greater', 'resistance'), ('greater', 'resistance', 'cryptanalysis'), ('resistance', 'cryptanalysis', '.')]

>> POS Tags are: 
 [('Round', 'NNP'), ('function', 'NN'), ('F', 'NNP'), (':', ':'), ('Again', 'NN'), (',', ','), ('greater', 'JJR'), ('complexity', 'NN'), ('generally', 'RB'), ('means', 'VBZ'), ('greater', 'JJR'), ('resistance', 'NN'), ('cryptanalysis', 'NN'), ('.', '.')]

 (S
  (NP Round/NNP function/NN F/NNP)
  :/:
  (NP Again/NN)
  ,/,
  greater/JJR
  (NP complexity/NN)
  generally/RB
  means/VBZ
  greater/JJR
  (NP resistance/NN cryptanalysis/NN)
  ./.) 


>> Noun Phrases are: 
 ['Round function F', 'Again', 'complexity', 'resistance cryptanalysis']

>> Named Entities are: 
 [('GPE', 'Round')] 

>> Stemming using Porter Stemmer: 
 [('Round', 'round'), ('function', 'function'), ('F', 'f'), (':', ':'), ('Again', 'again'), (',', ','), ('greater', 'greater'), ('complexity', 'complex'), ('generally', 'gener'), ('means', 'mean'), ('greater', 'greater'), ('resistance', 'resist'), ('cryptanalysis', 'cryptanalysi'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Round', 'round'), ('function', 'function'), ('F', 'f'), (':', ':'), ('Again', 'again'), (',', ','), ('greater', 'greater'), ('complexity', 'complex'), ('generally', 'general'), ('means', 'mean'), ('greater', 'greater'), ('resistance', 'resist'), ('cryptanalysis', 'cryptanalysi'), ('.', '.')]

>> Lemmatization: 
 [('Round', 'Round'), ('function', 'function'), ('F', 'F'), (':', ':'), ('Again', 'Again'), (',', ','), ('greater', 'greater'), ('complexity', 'complexity'), ('generally', 'generally'), ('means', 'mean'), ('greater', 'greater'), ('resistance', 'resistance'), ('cryptanalysis', 'cryptanalysis'), ('.', '.')]



============================ Sentence 16 =============================

Subkey generation algorithm: Greater complexity in this algorithm should lead to greater difficulty of cryptanalysis. 


>> Tokens are: 
 ['Subkey', 'generation', 'algorithm', ':', 'Greater', 'complexity', 'algorithm', 'lead', 'greater', 'difficulty', 'cryptanalysis', '.']

>> Bigrams are: 
 [('Subkey', 'generation'), ('generation', 'algorithm'), ('algorithm', ':'), (':', 'Greater'), ('Greater', 'complexity'), ('complexity', 'algorithm'), ('algorithm', 'lead'), ('lead', 'greater'), ('greater', 'difficulty'), ('difficulty', 'cryptanalysis'), ('cryptanalysis', '.')]

>> Trigrams are: 
 [('Subkey', 'generation', 'algorithm'), ('generation', 'algorithm', ':'), ('algorithm', ':', 'Greater'), (':', 'Greater', 'complexity'), ('Greater', 'complexity', 'algorithm'), ('complexity', 'algorithm', 'lead'), ('algorithm', 'lead', 'greater'), ('lead', 'greater', 'difficulty'), ('greater', 'difficulty', 'cryptanalysis'), ('difficulty', 'cryptanalysis', '.')]

>> POS Tags are: 
 [('Subkey', 'JJ'), ('generation', 'NN'), ('algorithm', 'NN'), (':', ':'), ('Greater', 'NNP'), ('complexity', 'NN'), ('algorithm', 'RB'), ('lead', 'JJ'), ('greater', 'JJR'), ('difficulty', 'NN'), ('cryptanalysis', 'NN'), ('.', '.')]

 (S
  (NP Subkey/JJ generation/NN algorithm/NN)
  :/:
  (NP Greater/NNP complexity/NN)
  algorithm/RB
  lead/JJ
  greater/JJR
  (NP difficulty/NN cryptanalysis/NN)
  ./.) 


>> Noun Phrases are: 
 ['Subkey generation algorithm', 'Greater complexity', 'difficulty cryptanalysis']

>> Named Entities are: 
 [('GPE', 'Subkey')] 

>> Stemming using Porter Stemmer: 
 [('Subkey', 'subkey'), ('generation', 'gener'), ('algorithm', 'algorithm'), (':', ':'), ('Greater', 'greater'), ('complexity', 'complex'), ('algorithm', 'algorithm'), ('lead', 'lead'), ('greater', 'greater'), ('difficulty', 'difficulti'), ('cryptanalysis', 'cryptanalysi'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Subkey', 'subkey'), ('generation', 'generat'), ('algorithm', 'algorithm'), (':', ':'), ('Greater', 'greater'), ('complexity', 'complex'), ('algorithm', 'algorithm'), ('lead', 'lead'), ('greater', 'greater'), ('difficulty', 'difficulti'), ('cryptanalysis', 'cryptanalysi'), ('.', '.')]

>> Lemmatization: 
 [('Subkey', 'Subkey'), ('generation', 'generation'), ('algorithm', 'algorithm'), (':', ':'), ('Greater', 'Greater'), ('complexity', 'complexity'), ('algorithm', 'algorithm'), ('lead', 'lead'), ('greater', 'greater'), ('difficulty', 'difficulty'), ('cryptanalysis', 'cryptanalysis'), ('.', '.')]



============================ Sentence 17 =============================

Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›   Feistel Encryption & Decryption Prove that o/p of first round of Decryption is equal to 32-bit swap of i/p of 16th round of Encryption  LD1=RE15 & RD1=LE15   On Encryption Side:   On Decryption Side:   XOR Associativity Property              Data Encryption Standard (DES) Type: Block Cipher Block Size : 64-bit Key Size: 64-bit, with only 56-bit effective Number of Rounds: 16    Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  Initial Permutation Round 1 Round 2 Round 16 32-bit swap Inverse Initial Permutation Permuted choice 2 Permuted choice 1 Left circular shift Permuted choice 2 Left circular shift Permuted choice 2 Left circular shift         64-bit plaintext         64-bit key         64-bit ciphertext 64 56 64 64 56 56 56 56 48 K1 48 K2 48 K16 DES Encryption Algorithm   DES Encryption Algorithm (Cont…) First, the 64-bit plaintext passes through an initial permutation (IP) that rearranges the bits to produce the permuted input. 


>> Tokens are: 
 ['Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Feistel', 'Encryption', '&', 'Decryption', 'Prove', 'o/p', 'first', 'round', 'Decryption', 'equal', '32-bit', 'swap', 'i/p', '16th', 'round', 'Encryption', 'LD1=RE15', '&', 'RD1=LE15', 'On', 'Encryption', 'Side', ':', 'On', 'Decryption', 'Side', ':', 'XOR', 'Associativity', 'Property', 'Data', 'Encryption', 'Standard', '(', 'DES', ')', 'Type', ':', 'Block', 'Cipher', 'Block', 'Size', ':', '64-bit', 'Key', 'Size', ':', '64-bit', ',', '56-bit', 'effective', 'Number', 'Rounds', ':', '16', 'Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Initial', 'Permutation', 'Round', '1', 'Round', '2', 'Round', '16', '32-bit', 'swap', 'Inverse', 'Initial', 'Permutation', 'Permuted', 'choice', '2', 'Permuted', 'choice', '1', 'Left', 'circular', 'shift', 'Permuted', 'choice', '2', 'Left', 'circular', 'shift', 'Permuted', 'choice', '2', 'Left', 'circular', 'shift', '64-bit', 'plaintext', '64-bit', 'key', '64-bit', 'ciphertext', '64', '56', '64', '64', '56', '56', '56', '56', '48', 'K1', '48', 'K2', '48', 'K16', 'DES', 'Encryption', 'Algorithm', 'DES', 'Encryption', 'Algorithm', '(', 'Cont…', ')', 'First', ',', '64-bit', 'plaintext', 'passes', 'initial', 'permutation', '(', 'IP', ')', 'rearranges', 'bits', 'produce', 'permuted', 'input', '.']

>> Bigrams are: 
 [('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Feistel'), ('Feistel', 'Encryption'), ('Encryption', '&'), ('&', 'Decryption'), ('Decryption', 'Prove'), ('Prove', 'o/p'), ('o/p', 'first'), ('first', 'round'), ('round', 'Decryption'), ('Decryption', 'equal'), ('equal', '32-bit'), ('32-bit', 'swap'), ('swap', 'i/p'), ('i/p', '16th'), ('16th', 'round'), ('round', 'Encryption'), ('Encryption', 'LD1=RE15'), ('LD1=RE15', '&'), ('&', 'RD1=LE15'), ('RD1=LE15', 'On'), ('On', 'Encryption'), ('Encryption', 'Side'), ('Side', ':'), (':', 'On'), ('On', 'Decryption'), ('Decryption', 'Side'), ('Side', ':'), (':', 'XOR'), ('XOR', 'Associativity'), ('Associativity', 'Property'), ('Property', 'Data'), ('Data', 'Encryption'), ('Encryption', 'Standard'), ('Standard', '('), ('(', 'DES'), ('DES', ')'), (')', 'Type'), ('Type', ':'), (':', 'Block'), ('Block', 'Cipher'), ('Cipher', 'Block'), ('Block', 'Size'), ('Size', ':'), (':', '64-bit'), ('64-bit', 'Key'), ('Key', 'Size'), ('Size', ':'), (':', '64-bit'), ('64-bit', ','), (',', '56-bit'), ('56-bit', 'effective'), ('effective', 'Number'), ('Number', 'Rounds'), ('Rounds', ':'), (':', '16'), ('16', 'Unit-2'), ('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Initial'), ('Initial', 'Permutation'), ('Permutation', 'Round'), ('Round', '1'), ('1', 'Round'), ('Round', '2'), ('2', 'Round'), ('Round', '16'), ('16', '32-bit'), ('32-bit', 'swap'), ('swap', 'Inverse'), ('Inverse', 'Initial'), ('Initial', 'Permutation'), ('Permutation', 'Permuted'), ('Permuted', 'choice'), ('choice', '2'), ('2', 'Permuted'), ('Permuted', 'choice'), ('choice', '1'), ('1', 'Left'), ('Left', 'circular'), ('circular', 'shift'), ('shift', 'Permuted'), ('Permuted', 'choice'), ('choice', '2'), ('2', 'Left'), ('Left', 'circular'), ('circular', 'shift'), ('shift', 'Permuted'), ('Permuted', 'choice'), ('choice', '2'), ('2', 'Left'), ('Left', 'circular'), ('circular', 'shift'), ('shift', '64-bit'), ('64-bit', 'plaintext'), ('plaintext', '64-bit'), ('64-bit', 'key'), ('key', '64-bit'), ('64-bit', 'ciphertext'), ('ciphertext', '64'), ('64', '56'), ('56', '64'), ('64', '64'), ('64', '56'), ('56', '56'), ('56', '56'), ('56', '56'), ('56', '48'), ('48', 'K1'), ('K1', '48'), ('48', 'K2'), ('K2', '48'), ('48', 'K16'), ('K16', 'DES'), ('DES', 'Encryption'), ('Encryption', 'Algorithm'), ('Algorithm', 'DES'), ('DES', 'Encryption'), ('Encryption', 'Algorithm'), ('Algorithm', '('), ('(', 'Cont…'), ('Cont…', ')'), (')', 'First'), ('First', ','), (',', '64-bit'), ('64-bit', 'plaintext'), ('plaintext', 'passes'), ('passes', 'initial'), ('initial', 'permutation'), ('permutation', '('), ('(', 'IP'), ('IP', ')'), (')', 'rearranges'), ('rearranges', 'bits'), ('bits', 'produce'), ('produce', 'permuted'), ('permuted', 'input'), ('input', '.')]

>> Trigrams are: 
 [('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Feistel'), ('›', 'Feistel', 'Encryption'), ('Feistel', 'Encryption', '&'), ('Encryption', '&', 'Decryption'), ('&', 'Decryption', 'Prove'), ('Decryption', 'Prove', 'o/p'), ('Prove', 'o/p', 'first'), ('o/p', 'first', 'round'), ('first', 'round', 'Decryption'), ('round', 'Decryption', 'equal'), ('Decryption', 'equal', '32-bit'), ('equal', '32-bit', 'swap'), ('32-bit', 'swap', 'i/p'), ('swap', 'i/p', '16th'), ('i/p', '16th', 'round'), ('16th', 'round', 'Encryption'), ('round', 'Encryption', 'LD1=RE15'), ('Encryption', 'LD1=RE15', '&'), ('LD1=RE15', '&', 'RD1=LE15'), ('&', 'RD1=LE15', 'On'), ('RD1=LE15', 'On', 'Encryption'), ('On', 'Encryption', 'Side'), ('Encryption', 'Side', ':'), ('Side', ':', 'On'), (':', 'On', 'Decryption'), ('On', 'Decryption', 'Side'), ('Decryption', 'Side', ':'), ('Side', ':', 'XOR'), (':', 'XOR', 'Associativity'), ('XOR', 'Associativity', 'Property'), ('Associativity', 'Property', 'Data'), ('Property', 'Data', 'Encryption'), ('Data', 'Encryption', 'Standard'), ('Encryption', 'Standard', '('), ('Standard', '(', 'DES'), ('(', 'DES', ')'), ('DES', ')', 'Type'), (')', 'Type', ':'), ('Type', ':', 'Block'), (':', 'Block', 'Cipher'), ('Block', 'Cipher', 'Block'), ('Cipher', 'Block', 'Size'), ('Block', 'Size', ':'), ('Size', ':', '64-bit'), (':', '64-bit', 'Key'), ('64-bit', 'Key', 'Size'), ('Key', 'Size', ':'), ('Size', ':', '64-bit'), (':', '64-bit', ','), ('64-bit', ',', '56-bit'), (',', '56-bit', 'effective'), ('56-bit', 'effective', 'Number'), ('effective', 'Number', 'Rounds'), ('Number', 'Rounds', ':'), ('Rounds', ':', '16'), (':', '16', 'Unit-2'), ('16', 'Unit-2', 'Darshan'), ('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Initial'), ('›', 'Initial', 'Permutation'), ('Initial', 'Permutation', 'Round'), ('Permutation', 'Round', '1'), ('Round', '1', 'Round'), ('1', 'Round', '2'), ('Round', '2', 'Round'), ('2', 'Round', '16'), ('Round', '16', '32-bit'), ('16', '32-bit', 'swap'), ('32-bit', 'swap', 'Inverse'), ('swap', 'Inverse', 'Initial'), ('Inverse', 'Initial', 'Permutation'), ('Initial', 'Permutation', 'Permuted'), ('Permutation', 'Permuted', 'choice'), ('Permuted', 'choice', '2'), ('choice', '2', 'Permuted'), ('2', 'Permuted', 'choice'), ('Permuted', 'choice', '1'), ('choice', '1', 'Left'), ('1', 'Left', 'circular'), ('Left', 'circular', 'shift'), ('circular', 'shift', 'Permuted'), ('shift', 'Permuted', 'choice'), ('Permuted', 'choice', '2'), ('choice', '2', 'Left'), ('2', 'Left', 'circular'), ('Left', 'circular', 'shift'), ('circular', 'shift', 'Permuted'), ('shift', 'Permuted', 'choice'), ('Permuted', 'choice', '2'), ('choice', '2', 'Left'), ('2', 'Left', 'circular'), ('Left', 'circular', 'shift'), ('circular', 'shift', '64-bit'), ('shift', '64-bit', 'plaintext'), ('64-bit', 'plaintext', '64-bit'), ('plaintext', '64-bit', 'key'), ('64-bit', 'key', '64-bit'), ('key', '64-bit', 'ciphertext'), ('64-bit', 'ciphertext', '64'), ('ciphertext', '64', '56'), ('64', '56', '64'), ('56', '64', '64'), ('64', '64', '56'), ('64', '56', '56'), ('56', '56', '56'), ('56', '56', '56'), ('56', '56', '48'), ('56', '48', 'K1'), ('48', 'K1', '48'), ('K1', '48', 'K2'), ('48', 'K2', '48'), ('K2', '48', 'K16'), ('48', 'K16', 'DES'), ('K16', 'DES', 'Encryption'), ('DES', 'Encryption', 'Algorithm'), ('Encryption', 'Algorithm', 'DES'), ('Algorithm', 'DES', 'Encryption'), ('DES', 'Encryption', 'Algorithm'), ('Encryption', 'Algorithm', '('), ('Algorithm', '(', 'Cont…'), ('(', 'Cont…', ')'), ('Cont…', ')', 'First'), (')', 'First', ','), ('First', ',', '64-bit'), (',', '64-bit', 'plaintext'), ('64-bit', 'plaintext', 'passes'), ('plaintext', 'passes', 'initial'), ('passes', 'initial', 'permutation'), ('initial', 'permutation', '('), ('permutation', '(', 'IP'), ('(', 'IP', ')'), ('IP', ')', 'rearranges'), (')', 'rearranges', 'bits'), ('rearranges', 'bits', 'produce'), ('bits', 'produce', 'permuted'), ('produce', 'permuted', 'input'), ('permuted', 'input', '.')]

>> POS Tags are: 
 [('Unit-2', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Feistel', 'NNP'), ('Encryption', 'NNP'), ('&', 'CC'), ('Decryption', 'NNP'), ('Prove', 'NNP'), ('o/p', 'VBD'), ('first', 'JJ'), ('round', 'NN'), ('Decryption', 'NNP'), ('equal', 'JJ'), ('32-bit', 'JJ'), ('swap', 'NN'), ('i/p', 'NN'), ('16th', 'CD'), ('round', 'NN'), ('Encryption', 'NNP'), ('LD1=RE15', 'NNP'), ('&', 'CC'), ('RD1=LE15', 'NNP'), ('On', 'IN'), ('Encryption', 'NNP'), ('Side', 'NNP'), (':', ':'), ('On', 'IN'), ('Decryption', 'NNP'), ('Side', 'NNP'), (':', ':'), ('XOR', 'JJ'), ('Associativity', 'NNP'), ('Property', 'NNP'), ('Data', 'NNP'), ('Encryption', 'NNP'), ('Standard', 'NNP'), ('(', '('), ('DES', 'NNP'), (')', ')'), ('Type', 'NN'), (':', ':'), ('Block', 'NNP'), ('Cipher', 'NNP'), ('Block', 'NNP'), ('Size', 'NNP'), (':', ':'), ('64-bit', 'JJ'), ('Key', 'NNP'), ('Size', 'NNP'), (':', ':'), ('64-bit', 'JJ'), (',', ','), ('56-bit', 'JJ'), ('effective', 'JJ'), ('Number', 'NNP'), ('Rounds', 'NNPS'), (':', ':'), ('16', 'CD'), ('Unit-2', 'JJ'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Initial', 'NNP'), ('Permutation', 'NNP'), ('Round', 'NNP'), ('1', 'CD'), ('Round', 'NNP'), ('2', 'CD'), ('Round', 'NNP'), ('16', 'CD'), ('32-bit', 'JJ'), ('swap', 'NN'), ('Inverse', 'NNP'), ('Initial', 'NNP'), ('Permutation', 'NNP'), ('Permuted', 'NNP'), ('choice', 'NN'), ('2', 'CD'), ('Permuted', 'NNP'), ('choice', 'NN'), ('1', 'CD'), ('Left', 'NNP'), ('circular', 'JJ'), ('shift', 'NN'), ('Permuted', 'NNP'), ('choice', 'NN'), ('2', 'CD'), ('Left', 'NNP'), ('circular', 'JJ'), ('shift', 'NN'), ('Permuted', 'NNP'), ('choice', 'NN'), ('2', 'CD'), ('Left', 'NNP'), ('circular', 'JJ'), ('shift', 'NN'), ('64-bit', 'JJ'), ('plaintext', 'JJ'), ('64-bit', 'JJ'), ('key', 'JJ'), ('64-bit', 'JJ'), ('ciphertext', 'NN'), ('64', 'CD'), ('56', 'CD'), ('64', 'CD'), ('64', 'CD'), ('56', 'CD'), ('56', 'CD'), ('56', 'CD'), ('56', 'CD'), ('48', 'CD'), ('K1', 'NNP'), ('48', 'CD'), ('K2', 'NNP'), ('48', 'CD'), ('K16', 'NNP'), ('DES', 'NNP'), ('Encryption', 'NNP'), ('Algorithm', 'NNP'), ('DES', 'NNP'), ('Encryption', 'NNP'), ('Algorithm', 'NNP'), ('(', '('), ('Cont…', 'NNP'), (')', ')'), ('First', 'NNP'), (',', ','), ('64-bit', 'JJ'), ('plaintext', 'NN'), ('passes', 'VBZ'), ('initial', 'JJ'), ('permutation', 'NN'), ('(', '('), ('IP', 'NNP'), (')', ')'), ('rearranges', 'VBZ'), ('bits', 'NNS'), ('produce', 'VBP'), ('permuted', 'VBN'), ('input', 'NN'), ('.', '.')]

 (S
  (NP Unit-2/NNP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Feistel/NNP Encryption/NNP)
  &/CC
  (NP Decryption/NNP Prove/NNP)
  o/p/VBD
  (NP first/JJ round/NN Decryption/NNP)
  (NP equal/JJ 32-bit/JJ swap/NN i/p/NN)
  16th/CD
  (NP round/NN Encryption/NNP LD1=RE15/NNP)
  &/CC
  (NP RD1=LE15/NNP)
  On/IN
  (NP Encryption/NNP Side/NNP)
  :/:
  On/IN
  (NP Decryption/NNP Side/NNP)
  :/:
  (NP
    XOR/JJ
    Associativity/NNP
    Property/NNP
    Data/NNP
    Encryption/NNP
    Standard/NNP)
  (/(
  (NP DES/NNP)
  )/)
  (NP Type/NN)
  :/:
  (NP Block/NNP Cipher/NNP Block/NNP Size/NNP)
  :/:
  (NP 64-bit/JJ Key/NNP Size/NNP)
  :/:
  64-bit/JJ
  ,/,
  (NP 56-bit/JJ effective/JJ Number/NNP)
  Rounds/NNPS
  :/:
  16/CD
  (NP Unit-2/JJ Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Initial/NNP Permutation/NNP Round/NNP)
  1/CD
  (NP Round/NNP)
  2/CD
  (NP Round/NNP)
  16/CD
  (NP
    32-bit/JJ
    swap/NN
    Inverse/NNP
    Initial/NNP
    Permutation/NNP
    Permuted/NNP
    choice/NN)
  2/CD
  (NP Permuted/NNP choice/NN)
  1/CD
  (NP Left/NNP)
  (NP circular/JJ shift/NN Permuted/NNP choice/NN)
  2/CD
  (NP Left/NNP)
  (NP circular/JJ shift/NN Permuted/NNP choice/NN)
  2/CD
  (NP Left/NNP)
  (NP circular/JJ shift/NN)
  (NP
    64-bit/JJ
    plaintext/JJ
    64-bit/JJ
    key/JJ
    64-bit/JJ
    ciphertext/NN)
  64/CD
  56/CD
  64/CD
  64/CD
  56/CD
  56/CD
  56/CD
  56/CD
  48/CD
  (NP K1/NNP)
  48/CD
  (NP K2/NNP)
  48/CD
  (NP
    K16/NNP
    DES/NNP
    Encryption/NNP
    Algorithm/NNP
    DES/NNP
    Encryption/NNP
    Algorithm/NNP)
  (/(
  (NP Cont…/NNP)
  )/)
  (NP First/NNP)
  ,/,
  (NP 64-bit/JJ plaintext/NN)
  passes/VBZ
  (NP initial/JJ permutation/NN)
  (/(
  (NP IP/NNP)
  )/)
  rearranges/VBZ
  (NP bits/NNS)
  produce/VBP
  permuted/VBN
  (NP input/NN)
  ./.) 


>> Noun Phrases are: 
 ['Unit-2 Darshan Institute Engineering', 'Technology ‹', '› Feistel Encryption', 'Decryption Prove', 'first round Decryption', 'equal 32-bit swap i/p', 'round Encryption LD1=RE15', 'RD1=LE15', 'Encryption Side', 'Decryption Side', 'XOR Associativity Property Data Encryption Standard', 'DES', 'Type', 'Block Cipher Block Size', '64-bit Key Size', '56-bit effective Number', 'Unit-2 Darshan Institute Engineering', 'Technology ‹', '› Initial Permutation Round', 'Round', 'Round', '32-bit swap Inverse Initial Permutation Permuted choice', 'Permuted choice', 'Left', 'circular shift Permuted choice', 'Left', 'circular shift Permuted choice', 'Left', 'circular shift', '64-bit plaintext 64-bit key 64-bit ciphertext', 'K1', 'K2', 'K16 DES Encryption Algorithm DES Encryption Algorithm', 'Cont…', 'First', '64-bit plaintext', 'initial permutation', 'IP', 'bits', 'input']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Feistel Encryption'), ('ORGANIZATION', 'Encryption'), ('ORGANIZATION', 'Encryption'), ('ORGANIZATION', 'XOR Associativity Property Data Encryption Standard'), ('PERSON', 'Block Cipher Block Size'), ('ORGANIZATION', 'Key'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Inverse Initial')] 

>> Stemming using Porter Stemmer: 
 [('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Feistel', 'feistel'), ('Encryption', 'encrypt'), ('&', '&'), ('Decryption', 'decrypt'), ('Prove', 'prove'), ('o/p', 'o/p'), ('first', 'first'), ('round', 'round'), ('Decryption', 'decrypt'), ('equal', 'equal'), ('32-bit', '32-bit'), ('swap', 'swap'), ('i/p', 'i/p'), ('16th', '16th'), ('round', 'round'), ('Encryption', 'encrypt'), ('LD1=RE15', 'ld1=re15'), ('&', '&'), ('RD1=LE15', 'rd1=le15'), ('On', 'on'), ('Encryption', 'encrypt'), ('Side', 'side'), (':', ':'), ('On', 'on'), ('Decryption', 'decrypt'), ('Side', 'side'), (':', ':'), ('XOR', 'xor'), ('Associativity', 'associ'), ('Property', 'properti'), ('Data', 'data'), ('Encryption', 'encrypt'), ('Standard', 'standard'), ('(', '('), ('DES', 'de'), (')', ')'), ('Type', 'type'), (':', ':'), ('Block', 'block'), ('Cipher', 'cipher'), ('Block', 'block'), ('Size', 'size'), (':', ':'), ('64-bit', '64-bit'), ('Key', 'key'), ('Size', 'size'), (':', ':'), ('64-bit', '64-bit'), (',', ','), ('56-bit', '56-bit'), ('effective', 'effect'), ('Number', 'number'), ('Rounds', 'round'), (':', ':'), ('16', '16'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Initial', 'initi'), ('Permutation', 'permut'), ('Round', 'round'), ('1', '1'), ('Round', 'round'), ('2', '2'), ('Round', 'round'), ('16', '16'), ('32-bit', '32-bit'), ('swap', 'swap'), ('Inverse', 'invers'), ('Initial', 'initi'), ('Permutation', 'permut'), ('Permuted', 'permut'), ('choice', 'choic'), ('2', '2'), ('Permuted', 'permut'), ('choice', 'choic'), ('1', '1'), ('Left', 'left'), ('circular', 'circular'), ('shift', 'shift'), ('Permuted', 'permut'), ('choice', 'choic'), ('2', '2'), ('Left', 'left'), ('circular', 'circular'), ('shift', 'shift'), ('Permuted', 'permut'), ('choice', 'choic'), ('2', '2'), ('Left', 'left'), ('circular', 'circular'), ('shift', 'shift'), ('64-bit', '64-bit'), ('plaintext', 'plaintext'), ('64-bit', '64-bit'), ('key', 'key'), ('64-bit', '64-bit'), ('ciphertext', 'ciphertext'), ('64', '64'), ('56', '56'), ('64', '64'), ('64', '64'), ('56', '56'), ('56', '56'), ('56', '56'), ('56', '56'), ('48', '48'), ('K1', 'k1'), ('48', '48'), ('K2', 'k2'), ('48', '48'), ('K16', 'k16'), ('DES', 'de'), ('Encryption', 'encrypt'), ('Algorithm', 'algorithm'), ('DES', 'de'), ('Encryption', 'encrypt'), ('Algorithm', 'algorithm'), ('(', '('), ('Cont…', 'cont…'), (')', ')'), ('First', 'first'), (',', ','), ('64-bit', '64-bit'), ('plaintext', 'plaintext'), ('passes', 'pass'), ('initial', 'initi'), ('permutation', 'permut'), ('(', '('), ('IP', 'ip'), (')', ')'), ('rearranges', 'rearrang'), ('bits', 'bit'), ('produce', 'produc'), ('permuted', 'permut'), ('input', 'input'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Feistel', 'feistel'), ('Encryption', 'encrypt'), ('&', '&'), ('Decryption', 'decrypt'), ('Prove', 'prove'), ('o/p', 'o/p'), ('first', 'first'), ('round', 'round'), ('Decryption', 'decrypt'), ('equal', 'equal'), ('32-bit', '32-bit'), ('swap', 'swap'), ('i/p', 'i/p'), ('16th', '16th'), ('round', 'round'), ('Encryption', 'encrypt'), ('LD1=RE15', 'ld1=re15'), ('&', '&'), ('RD1=LE15', 'rd1=le15'), ('On', 'on'), ('Encryption', 'encrypt'), ('Side', 'side'), (':', ':'), ('On', 'on'), ('Decryption', 'decrypt'), ('Side', 'side'), (':', ':'), ('XOR', 'xor'), ('Associativity', 'associ'), ('Property', 'properti'), ('Data', 'data'), ('Encryption', 'encrypt'), ('Standard', 'standard'), ('(', '('), ('DES', 'des'), (')', ')'), ('Type', 'type'), (':', ':'), ('Block', 'block'), ('Cipher', 'cipher'), ('Block', 'block'), ('Size', 'size'), (':', ':'), ('64-bit', '64-bit'), ('Key', 'key'), ('Size', 'size'), (':', ':'), ('64-bit', '64-bit'), (',', ','), ('56-bit', '56-bit'), ('effective', 'effect'), ('Number', 'number'), ('Rounds', 'round'), (':', ':'), ('16', '16'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Initial', 'initi'), ('Permutation', 'permut'), ('Round', 'round'), ('1', '1'), ('Round', 'round'), ('2', '2'), ('Round', 'round'), ('16', '16'), ('32-bit', '32-bit'), ('swap', 'swap'), ('Inverse', 'invers'), ('Initial', 'initi'), ('Permutation', 'permut'), ('Permuted', 'permut'), ('choice', 'choic'), ('2', '2'), ('Permuted', 'permut'), ('choice', 'choic'), ('1', '1'), ('Left', 'left'), ('circular', 'circular'), ('shift', 'shift'), ('Permuted', 'permut'), ('choice', 'choic'), ('2', '2'), ('Left', 'left'), ('circular', 'circular'), ('shift', 'shift'), ('Permuted', 'permut'), ('choice', 'choic'), ('2', '2'), ('Left', 'left'), ('circular', 'circular'), ('shift', 'shift'), ('64-bit', '64-bit'), ('plaintext', 'plaintext'), ('64-bit', '64-bit'), ('key', 'key'), ('64-bit', '64-bit'), ('ciphertext', 'ciphertext'), ('64', '64'), ('56', '56'), ('64', '64'), ('64', '64'), ('56', '56'), ('56', '56'), ('56', '56'), ('56', '56'), ('48', '48'), ('K1', 'k1'), ('48', '48'), ('K2', 'k2'), ('48', '48'), ('K16', 'k16'), ('DES', 'des'), ('Encryption', 'encrypt'), ('Algorithm', 'algorithm'), ('DES', 'des'), ('Encryption', 'encrypt'), ('Algorithm', 'algorithm'), ('(', '('), ('Cont…', 'cont…'), (')', ')'), ('First', 'first'), (',', ','), ('64-bit', '64-bit'), ('plaintext', 'plaintext'), ('passes', 'pass'), ('initial', 'initi'), ('permutation', 'permut'), ('(', '('), ('IP', 'ip'), (')', ')'), ('rearranges', 'rearrang'), ('bits', 'bit'), ('produce', 'produc'), ('permuted', 'permut'), ('input', 'input'), ('.', '.')]

>> Lemmatization: 
 [('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Feistel', 'Feistel'), ('Encryption', 'Encryption'), ('&', '&'), ('Decryption', 'Decryption'), ('Prove', 'Prove'), ('o/p', 'o/p'), ('first', 'first'), ('round', 'round'), ('Decryption', 'Decryption'), ('equal', 'equal'), ('32-bit', '32-bit'), ('swap', 'swap'), ('i/p', 'i/p'), ('16th', '16th'), ('round', 'round'), ('Encryption', 'Encryption'), ('LD1=RE15', 'LD1=RE15'), ('&', '&'), ('RD1=LE15', 'RD1=LE15'), ('On', 'On'), ('Encryption', 'Encryption'), ('Side', 'Side'), (':', ':'), ('On', 'On'), ('Decryption', 'Decryption'), ('Side', 'Side'), (':', ':'), ('XOR', 'XOR'), ('Associativity', 'Associativity'), ('Property', 'Property'), ('Data', 'Data'), ('Encryption', 'Encryption'), ('Standard', 'Standard'), ('(', '('), ('DES', 'DES'), (')', ')'), ('Type', 'Type'), (':', ':'), ('Block', 'Block'), ('Cipher', 'Cipher'), ('Block', 'Block'), ('Size', 'Size'), (':', ':'), ('64-bit', '64-bit'), ('Key', 'Key'), ('Size', 'Size'), (':', ':'), ('64-bit', '64-bit'), (',', ','), ('56-bit', '56-bit'), ('effective', 'effective'), ('Number', 'Number'), ('Rounds', 'Rounds'), (':', ':'), ('16', '16'), ('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Initial', 'Initial'), ('Permutation', 'Permutation'), ('Round', 'Round'), ('1', '1'), ('Round', 'Round'), ('2', '2'), ('Round', 'Round'), ('16', '16'), ('32-bit', '32-bit'), ('swap', 'swap'), ('Inverse', 'Inverse'), ('Initial', 'Initial'), ('Permutation', 'Permutation'), ('Permuted', 'Permuted'), ('choice', 'choice'), ('2', '2'), ('Permuted', 'Permuted'), ('choice', 'choice'), ('1', '1'), ('Left', 'Left'), ('circular', 'circular'), ('shift', 'shift'), ('Permuted', 'Permuted'), ('choice', 'choice'), ('2', '2'), ('Left', 'Left'), ('circular', 'circular'), ('shift', 'shift'), ('Permuted', 'Permuted'), ('choice', 'choice'), ('2', '2'), ('Left', 'Left'), ('circular', 'circular'), ('shift', 'shift'), ('64-bit', '64-bit'), ('plaintext', 'plaintext'), ('64-bit', '64-bit'), ('key', 'key'), ('64-bit', '64-bit'), ('ciphertext', 'ciphertext'), ('64', '64'), ('56', '56'), ('64', '64'), ('64', '64'), ('56', '56'), ('56', '56'), ('56', '56'), ('56', '56'), ('48', '48'), ('K1', 'K1'), ('48', '48'), ('K2', 'K2'), ('48', '48'), ('K16', 'K16'), ('DES', 'DES'), ('Encryption', 'Encryption'), ('Algorithm', 'Algorithm'), ('DES', 'DES'), ('Encryption', 'Encryption'), ('Algorithm', 'Algorithm'), ('(', '('), ('Cont…', 'Cont…'), (')', ')'), ('First', 'First'), (',', ','), ('64-bit', '64-bit'), ('plaintext', 'plaintext'), ('passes', 'pass'), ('initial', 'initial'), ('permutation', 'permutation'), ('(', '('), ('IP', 'IP'), (')', ')'), ('rearranges', 'rearranges'), ('bits', 'bit'), ('produce', 'produce'), ('permuted', 'permuted'), ('input', 'input'), ('.', '.')]



============================ Sentence 18 =============================

This is followed by a phase consisting of sixteen rounds of the same function, which involves both permutation and substitution functions. 


>> Tokens are: 
 ['This', 'followed', 'phase', 'consisting', 'sixteen', 'rounds', 'function', ',', 'involves', 'permutation', 'substitution', 'functions', '.']

>> Bigrams are: 
 [('This', 'followed'), ('followed', 'phase'), ('phase', 'consisting'), ('consisting', 'sixteen'), ('sixteen', 'rounds'), ('rounds', 'function'), ('function', ','), (',', 'involves'), ('involves', 'permutation'), ('permutation', 'substitution'), ('substitution', 'functions'), ('functions', '.')]

>> Trigrams are: 
 [('This', 'followed', 'phase'), ('followed', 'phase', 'consisting'), ('phase', 'consisting', 'sixteen'), ('consisting', 'sixteen', 'rounds'), ('sixteen', 'rounds', 'function'), ('rounds', 'function', ','), ('function', ',', 'involves'), (',', 'involves', 'permutation'), ('involves', 'permutation', 'substitution'), ('permutation', 'substitution', 'functions'), ('substitution', 'functions', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('followed', 'VBD'), ('phase', 'NN'), ('consisting', 'VBG'), ('sixteen', 'JJ'), ('rounds', 'NNS'), ('function', 'NN'), (',', ','), ('involves', 'VBZ'), ('permutation', 'NN'), ('substitution', 'NN'), ('functions', 'NNS'), ('.', '.')]

 (S
  This/DT
  followed/VBD
  (NP phase/NN)
  consisting/VBG
  (NP sixteen/JJ rounds/NNS function/NN)
  ,/,
  involves/VBZ
  (NP permutation/NN substitution/NN functions/NNS)
  ./.) 


>> Noun Phrases are: 
 ['phase', 'sixteen rounds function', 'permutation substitution functions']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('followed', 'follow'), ('phase', 'phase'), ('consisting', 'consist'), ('sixteen', 'sixteen'), ('rounds', 'round'), ('function', 'function'), (',', ','), ('involves', 'involv'), ('permutation', 'permut'), ('substitution', 'substitut'), ('functions', 'function'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('followed', 'follow'), ('phase', 'phase'), ('consisting', 'consist'), ('sixteen', 'sixteen'), ('rounds', 'round'), ('function', 'function'), (',', ','), ('involves', 'involv'), ('permutation', 'permut'), ('substitution', 'substitut'), ('functions', 'function'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('followed', 'followed'), ('phase', 'phase'), ('consisting', 'consisting'), ('sixteen', 'sixteen'), ('rounds', 'round'), ('function', 'function'), (',', ','), ('involves', 'involves'), ('permutation', 'permutation'), ('substitution', 'substitution'), ('functions', 'function'), ('.', '.')]



============================ Sentence 19 =============================

Finally, the preoutput is passed through a permutation that is the inverse of the initial permutation function, to produce the 64-bit ciphertext. 


>> Tokens are: 
 ['Finally', ',', 'preoutput', 'passed', 'permutation', 'inverse', 'initial', 'permutation', 'function', ',', 'produce', '64-bit', 'ciphertext', '.']

>> Bigrams are: 
 [('Finally', ','), (',', 'preoutput'), ('preoutput', 'passed'), ('passed', 'permutation'), ('permutation', 'inverse'), ('inverse', 'initial'), ('initial', 'permutation'), ('permutation', 'function'), ('function', ','), (',', 'produce'), ('produce', '64-bit'), ('64-bit', 'ciphertext'), ('ciphertext', '.')]

>> Trigrams are: 
 [('Finally', ',', 'preoutput'), (',', 'preoutput', 'passed'), ('preoutput', 'passed', 'permutation'), ('passed', 'permutation', 'inverse'), ('permutation', 'inverse', 'initial'), ('inverse', 'initial', 'permutation'), ('initial', 'permutation', 'function'), ('permutation', 'function', ','), ('function', ',', 'produce'), (',', 'produce', '64-bit'), ('produce', '64-bit', 'ciphertext'), ('64-bit', 'ciphertext', '.')]

>> POS Tags are: 
 [('Finally', 'RB'), (',', ','), ('preoutput', 'NN'), ('passed', 'VBD'), ('permutation', 'NN'), ('inverse', 'NN'), ('initial', 'JJ'), ('permutation', 'NN'), ('function', 'NN'), (',', ','), ('produce', 'VBP'), ('64-bit', 'JJ'), ('ciphertext', 'NN'), ('.', '.')]

 (S
  Finally/RB
  ,/,
  (NP preoutput/NN)
  passed/VBD
  (NP permutation/NN inverse/NN)
  (NP initial/JJ permutation/NN function/NN)
  ,/,
  produce/VBP
  (NP 64-bit/JJ ciphertext/NN)
  ./.) 


>> Noun Phrases are: 
 ['preoutput', 'permutation inverse', 'initial permutation function', '64-bit ciphertext']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Finally', 'final'), (',', ','), ('preoutput', 'preoutput'), ('passed', 'pass'), ('permutation', 'permut'), ('inverse', 'invers'), ('initial', 'initi'), ('permutation', 'permut'), ('function', 'function'), (',', ','), ('produce', 'produc'), ('64-bit', '64-bit'), ('ciphertext', 'ciphertext'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Finally', 'final'), (',', ','), ('preoutput', 'preoutput'), ('passed', 'pass'), ('permutation', 'permut'), ('inverse', 'invers'), ('initial', 'initi'), ('permutation', 'permut'), ('function', 'function'), (',', ','), ('produce', 'produc'), ('64-bit', '64-bit'), ('ciphertext', 'ciphertext'), ('.', '.')]

>> Lemmatization: 
 [('Finally', 'Finally'), (',', ','), ('preoutput', 'preoutput'), ('passed', 'passed'), ('permutation', 'permutation'), ('inverse', 'inverse'), ('initial', 'initial'), ('permutation', 'permutation'), ('function', 'function'), (',', ','), ('produce', 'produce'), ('64-bit', '64-bit'), ('ciphertext', 'ciphertext'), ('.', '.')]



============================ Sentence 20 =============================

The 56-bit key is passed through a permutation function. 


>> Tokens are: 
 ['The', '56-bit', 'key', 'passed', 'permutation', 'function', '.']

>> Bigrams are: 
 [('The', '56-bit'), ('56-bit', 'key'), ('key', 'passed'), ('passed', 'permutation'), ('permutation', 'function'), ('function', '.')]

>> Trigrams are: 
 [('The', '56-bit', 'key'), ('56-bit', 'key', 'passed'), ('key', 'passed', 'permutation'), ('passed', 'permutation', 'function'), ('permutation', 'function', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('56-bit', 'JJ'), ('key', 'NN'), ('passed', 'VBN'), ('permutation', 'NN'), ('function', 'NN'), ('.', '.')]

 (S
  (NP The/DT 56-bit/JJ key/NN)
  passed/VBN
  (NP permutation/NN function/NN)
  ./.) 


>> Noun Phrases are: 
 ['The 56-bit key', 'permutation function']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('56-bit', '56-bit'), ('key', 'key'), ('passed', 'pass'), ('permutation', 'permut'), ('function', 'function'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('56-bit', '56-bit'), ('key', 'key'), ('passed', 'pass'), ('permutation', 'permut'), ('function', 'function'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('56-bit', '56-bit'), ('key', 'key'), ('passed', 'passed'), ('permutation', 'permutation'), ('function', 'function'), ('.', '.')]



============================ Sentence 21 =============================

For each of the sixteen rounds, a subkey (Ki) is produced by the combination of a left circular shift and a permutation. 


>> Tokens are: 
 ['For', 'sixteen', 'rounds', ',', 'subkey', '(', 'Ki', ')', 'produced', 'combination', 'left', 'circular', 'shift', 'permutation', '.']

>> Bigrams are: 
 [('For', 'sixteen'), ('sixteen', 'rounds'), ('rounds', ','), (',', 'subkey'), ('subkey', '('), ('(', 'Ki'), ('Ki', ')'), (')', 'produced'), ('produced', 'combination'), ('combination', 'left'), ('left', 'circular'), ('circular', 'shift'), ('shift', 'permutation'), ('permutation', '.')]

>> Trigrams are: 
 [('For', 'sixteen', 'rounds'), ('sixteen', 'rounds', ','), ('rounds', ',', 'subkey'), (',', 'subkey', '('), ('subkey', '(', 'Ki'), ('(', 'Ki', ')'), ('Ki', ')', 'produced'), (')', 'produced', 'combination'), ('produced', 'combination', 'left'), ('combination', 'left', 'circular'), ('left', 'circular', 'shift'), ('circular', 'shift', 'permutation'), ('shift', 'permutation', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('sixteen', 'JJ'), ('rounds', 'NNS'), (',', ','), ('subkey', 'NN'), ('(', '('), ('Ki', 'NNP'), (')', ')'), ('produced', 'VBD'), ('combination', 'NN'), ('left', 'VBD'), ('circular', 'JJ'), ('shift', 'NN'), ('permutation', 'NN'), ('.', '.')]

 (S
  For/IN
  (NP sixteen/JJ rounds/NNS)
  ,/,
  (NP subkey/NN)
  (/(
  (NP Ki/NNP)
  )/)
  produced/VBD
  (NP combination/NN)
  left/VBD
  (NP circular/JJ shift/NN permutation/NN)
  ./.) 


>> Noun Phrases are: 
 ['sixteen rounds', 'subkey', 'Ki', 'combination', 'circular shift permutation']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('sixteen', 'sixteen'), ('rounds', 'round'), (',', ','), ('subkey', 'subkey'), ('(', '('), ('Ki', 'ki'), (')', ')'), ('produced', 'produc'), ('combination', 'combin'), ('left', 'left'), ('circular', 'circular'), ('shift', 'shift'), ('permutation', 'permut'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('sixteen', 'sixteen'), ('rounds', 'round'), (',', ','), ('subkey', 'subkey'), ('(', '('), ('Ki', 'ki'), (')', ')'), ('produced', 'produc'), ('combination', 'combin'), ('left', 'left'), ('circular', 'circular'), ('shift', 'shift'), ('permutation', 'permut'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('sixteen', 'sixteen'), ('rounds', 'round'), (',', ','), ('subkey', 'subkey'), ('(', '('), ('Ki', 'Ki'), (')', ')'), ('produced', 'produced'), ('combination', 'combination'), ('left', 'left'), ('circular', 'circular'), ('shift', 'shift'), ('permutation', 'permutation'), ('.', '.')]



============================ Sentence 22 =============================

Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  DES Single Round   Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›   32-bits  32-bits  28-bits  28-bits  Expansion/ permutation (E table)  XOR  Substitution/choice (S-box) Permutation (P)  XOR     Left Shift (S) Left Shift (S)  Permutation/ compression (Permuted choice 2)   48 Ki 48 48 32 32      confusion step is the S-box substitution, while the diffusion step is where the output of the S-boxes is rearranged according to the P-box permutation rules. 


>> Tokens are: 
 ['Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'DES', 'Single', 'Round', 'Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', '32-bits', '32-bits', '28-bits', '28-bits', 'Expansion/', 'permutation', '(', 'E', 'table', ')', 'XOR', 'Substitution/choice', '(', 'S-box', ')', 'Permutation', '(', 'P', ')', 'XOR', 'Left', 'Shift', '(', 'S', ')', 'Left', 'Shift', '(', 'S', ')', 'Permutation/', 'compression', '(', 'Permuted', 'choice', '2', ')', '48', 'Ki', '48', '48', '32', '32', 'confusion', 'step', 'S-box', 'substitution', ',', 'diffusion', 'step', 'output', 'S-boxes', 'rearranged', 'according', 'P-box', 'permutation', 'rules', '.']

>> Bigrams are: 
 [('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'DES'), ('DES', 'Single'), ('Single', 'Round'), ('Round', 'Unit-2'), ('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', '32-bits'), ('32-bits', '32-bits'), ('32-bits', '28-bits'), ('28-bits', '28-bits'), ('28-bits', 'Expansion/'), ('Expansion/', 'permutation'), ('permutation', '('), ('(', 'E'), ('E', 'table'), ('table', ')'), (')', 'XOR'), ('XOR', 'Substitution/choice'), ('Substitution/choice', '('), ('(', 'S-box'), ('S-box', ')'), (')', 'Permutation'), ('Permutation', '('), ('(', 'P'), ('P', ')'), (')', 'XOR'), ('XOR', 'Left'), ('Left', 'Shift'), ('Shift', '('), ('(', 'S'), ('S', ')'), (')', 'Left'), ('Left', 'Shift'), ('Shift', '('), ('(', 'S'), ('S', ')'), (')', 'Permutation/'), ('Permutation/', 'compression'), ('compression', '('), ('(', 'Permuted'), ('Permuted', 'choice'), ('choice', '2'), ('2', ')'), (')', '48'), ('48', 'Ki'), ('Ki', '48'), ('48', '48'), ('48', '32'), ('32', '32'), ('32', 'confusion'), ('confusion', 'step'), ('step', 'S-box'), ('S-box', 'substitution'), ('substitution', ','), (',', 'diffusion'), ('diffusion', 'step'), ('step', 'output'), ('output', 'S-boxes'), ('S-boxes', 'rearranged'), ('rearranged', 'according'), ('according', 'P-box'), ('P-box', 'permutation'), ('permutation', 'rules'), ('rules', '.')]

>> Trigrams are: 
 [('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'DES'), ('›', 'DES', 'Single'), ('DES', 'Single', 'Round'), ('Single', 'Round', 'Unit-2'), ('Round', 'Unit-2', 'Darshan'), ('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', '32-bits'), ('›', '32-bits', '32-bits'), ('32-bits', '32-bits', '28-bits'), ('32-bits', '28-bits', '28-bits'), ('28-bits', '28-bits', 'Expansion/'), ('28-bits', 'Expansion/', 'permutation'), ('Expansion/', 'permutation', '('), ('permutation', '(', 'E'), ('(', 'E', 'table'), ('E', 'table', ')'), ('table', ')', 'XOR'), (')', 'XOR', 'Substitution/choice'), ('XOR', 'Substitution/choice', '('), ('Substitution/choice', '(', 'S-box'), ('(', 'S-box', ')'), ('S-box', ')', 'Permutation'), (')', 'Permutation', '('), ('Permutation', '(', 'P'), ('(', 'P', ')'), ('P', ')', 'XOR'), (')', 'XOR', 'Left'), ('XOR', 'Left', 'Shift'), ('Left', 'Shift', '('), ('Shift', '(', 'S'), ('(', 'S', ')'), ('S', ')', 'Left'), (')', 'Left', 'Shift'), ('Left', 'Shift', '('), ('Shift', '(', 'S'), ('(', 'S', ')'), ('S', ')', 'Permutation/'), (')', 'Permutation/', 'compression'), ('Permutation/', 'compression', '('), ('compression', '(', 'Permuted'), ('(', 'Permuted', 'choice'), ('Permuted', 'choice', '2'), ('choice', '2', ')'), ('2', ')', '48'), (')', '48', 'Ki'), ('48', 'Ki', '48'), ('Ki', '48', '48'), ('48', '48', '32'), ('48', '32', '32'), ('32', '32', 'confusion'), ('32', 'confusion', 'step'), ('confusion', 'step', 'S-box'), ('step', 'S-box', 'substitution'), ('S-box', 'substitution', ','), ('substitution', ',', 'diffusion'), (',', 'diffusion', 'step'), ('diffusion', 'step', 'output'), ('step', 'output', 'S-boxes'), ('output', 'S-boxes', 'rearranged'), ('S-boxes', 'rearranged', 'according'), ('rearranged', 'according', 'P-box'), ('according', 'P-box', 'permutation'), ('P-box', 'permutation', 'rules'), ('permutation', 'rules', '.')]

>> POS Tags are: 
 [('Unit-2', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('DES', 'NNP'), ('Single', 'NNP'), ('Round', 'NNP'), ('Unit-2', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('32-bits', 'JJ'), ('32-bits', 'JJ'), ('28-bits', 'JJ'), ('28-bits', 'JJ'), ('Expansion/', 'NNP'), ('permutation', 'NN'), ('(', '('), ('E', 'NNP'), ('table', 'NN'), (')', ')'), ('XOR', 'NN'), ('Substitution/choice', 'NNP'), ('(', '('), ('S-box', 'NNP'), (')', ')'), ('Permutation', 'NNP'), ('(', '('), ('P', 'NNP'), (')', ')'), ('XOR', 'NN'), ('Left', 'NNP'), ('Shift', 'NNP'), ('(', '('), ('S', 'NNP'), (')', ')'), ('Left', 'VBD'), ('Shift', 'NNP'), ('(', '('), ('S', 'NNP'), (')', ')'), ('Permutation/', 'NNP'), ('compression', 'NN'), ('(', '('), ('Permuted', 'NNP'), ('choice', 'NN'), ('2', 'CD'), (')', ')'), ('48', 'CD'), ('Ki', 'NNP'), ('48', 'CD'), ('48', 'CD'), ('32', 'CD'), ('32', 'CD'), ('confusion', 'NN'), ('step', 'NN'), ('S-box', 'NNP'), ('substitution', 'NN'), (',', ','), ('diffusion', 'JJ'), ('step', 'NN'), ('output', 'NN'), ('S-boxes', 'NNP'), ('rearranged', 'VBD'), ('according', 'VBG'), ('P-box', 'NNP'), ('permutation', 'NN'), ('rules', 'NNS'), ('.', '.')]

 (S
  (NP Unit-2/NNP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    DES/NNP
    Single/NNP
    Round/NNP
    Unit-2/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/JJ
    32-bits/JJ
    32-bits/JJ
    28-bits/JJ
    28-bits/JJ
    Expansion//NNP
    permutation/NN)
  (/(
  (NP E/NNP table/NN)
  )/)
  (NP XOR/NN Substitution/choice/NNP)
  (/(
  (NP S-box/NNP)
  )/)
  (NP Permutation/NNP)
  (/(
  (NP P/NNP)
  )/)
  (NP XOR/NN Left/NNP Shift/NNP)
  (/(
  (NP S/NNP)
  )/)
  Left/VBD
  (NP Shift/NNP)
  (/(
  (NP S/NNP)
  )/)
  (NP Permutation//NNP compression/NN)
  (/(
  (NP Permuted/NNP choice/NN)
  2/CD
  )/)
  48/CD
  (NP Ki/NNP)
  48/CD
  48/CD
  32/CD
  32/CD
  (NP confusion/NN step/NN S-box/NNP substitution/NN)
  ,/,
  (NP diffusion/JJ step/NN output/NN S-boxes/NNP)
  rearranged/VBD
  according/VBG
  (NP P-box/NNP permutation/NN rules/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Unit-2 Darshan Institute Engineering', 'Technology ‹', '› DES Single Round Unit-2 Darshan Institute Engineering', 'Technology ‹', '› 32-bits 32-bits 28-bits 28-bits Expansion/ permutation', 'E table', 'XOR Substitution/choice', 'S-box', 'Permutation', 'P', 'XOR Left Shift', 'S', 'Shift', 'S', 'Permutation/ compression', 'Permuted choice', 'Ki', 'confusion step S-box substitution', 'diffusion step output S-boxes', 'P-box permutation rules']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'XOR'), ('ORGANIZATION', 'XOR Left Shift'), ('GPE', 'Shift'), ('ORGANIZATION', 'Permuted')] 

>> Stemming using Porter Stemmer: 
 [('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('DES', 'de'), ('Single', 'singl'), ('Round', 'round'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('32-bits', '32-bit'), ('32-bits', '32-bit'), ('28-bits', '28-bit'), ('28-bits', '28-bit'), ('Expansion/', 'expansion/'), ('permutation', 'permut'), ('(', '('), ('E', 'e'), ('table', 'tabl'), (')', ')'), ('XOR', 'xor'), ('Substitution/choice', 'substitution/choic'), ('(', '('), ('S-box', 's-box'), (')', ')'), ('Permutation', 'permut'), ('(', '('), ('P', 'p'), (')', ')'), ('XOR', 'xor'), ('Left', 'left'), ('Shift', 'shift'), ('(', '('), ('S', 's'), (')', ')'), ('Left', 'left'), ('Shift', 'shift'), ('(', '('), ('S', 's'), (')', ')'), ('Permutation/', 'permutation/'), ('compression', 'compress'), ('(', '('), ('Permuted', 'permut'), ('choice', 'choic'), ('2', '2'), (')', ')'), ('48', '48'), ('Ki', 'ki'), ('48', '48'), ('48', '48'), ('32', '32'), ('32', '32'), ('confusion', 'confus'), ('step', 'step'), ('S-box', 's-box'), ('substitution', 'substitut'), (',', ','), ('diffusion', 'diffus'), ('step', 'step'), ('output', 'output'), ('S-boxes', 's-box'), ('rearranged', 'rearrang'), ('according', 'accord'), ('P-box', 'p-box'), ('permutation', 'permut'), ('rules', 'rule'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('DES', 'des'), ('Single', 'singl'), ('Round', 'round'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('32-bits', '32-bit'), ('32-bits', '32-bit'), ('28-bits', '28-bit'), ('28-bits', '28-bit'), ('Expansion/', 'expansion/'), ('permutation', 'permut'), ('(', '('), ('E', 'e'), ('table', 'tabl'), (')', ')'), ('XOR', 'xor'), ('Substitution/choice', 'substitution/choic'), ('(', '('), ('S-box', 's-box'), (')', ')'), ('Permutation', 'permut'), ('(', '('), ('P', 'p'), (')', ')'), ('XOR', 'xor'), ('Left', 'left'), ('Shift', 'shift'), ('(', '('), ('S', 's'), (')', ')'), ('Left', 'left'), ('Shift', 'shift'), ('(', '('), ('S', 's'), (')', ')'), ('Permutation/', 'permutation/'), ('compression', 'compress'), ('(', '('), ('Permuted', 'permut'), ('choice', 'choic'), ('2', '2'), (')', ')'), ('48', '48'), ('Ki', 'ki'), ('48', '48'), ('48', '48'), ('32', '32'), ('32', '32'), ('confusion', 'confus'), ('step', 'step'), ('S-box', 's-box'), ('substitution', 'substitut'), (',', ','), ('diffusion', 'diffus'), ('step', 'step'), ('output', 'output'), ('S-boxes', 's-box'), ('rearranged', 'rearrang'), ('according', 'accord'), ('P-box', 'p-box'), ('permutation', 'permut'), ('rules', 'rule'), ('.', '.')]

>> Lemmatization: 
 [('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('DES', 'DES'), ('Single', 'Single'), ('Round', 'Round'), ('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('32-bits', '32-bits'), ('32-bits', '32-bits'), ('28-bits', '28-bits'), ('28-bits', '28-bits'), ('Expansion/', 'Expansion/'), ('permutation', 'permutation'), ('(', '('), ('E', 'E'), ('table', 'table'), (')', ')'), ('XOR', 'XOR'), ('Substitution/choice', 'Substitution/choice'), ('(', '('), ('S-box', 'S-box'), (')', ')'), ('Permutation', 'Permutation'), ('(', '('), ('P', 'P'), (')', ')'), ('XOR', 'XOR'), ('Left', 'Left'), ('Shift', 'Shift'), ('(', '('), ('S', 'S'), (')', ')'), ('Left', 'Left'), ('Shift', 'Shift'), ('(', '('), ('S', 'S'), (')', ')'), ('Permutation/', 'Permutation/'), ('compression', 'compression'), ('(', '('), ('Permuted', 'Permuted'), ('choice', 'choice'), ('2', '2'), (')', ')'), ('48', '48'), ('Ki', 'Ki'), ('48', '48'), ('48', '48'), ('32', '32'), ('32', '32'), ('confusion', 'confusion'), ('step', 'step'), ('S-box', 'S-box'), ('substitution', 'substitution'), (',', ','), ('diffusion', 'diffusion'), ('step', 'step'), ('output', 'output'), ('S-boxes', 'S-boxes'), ('rearranged', 'rearranged'), ('according', 'according'), ('P-box', 'P-box'), ('permutation', 'permutation'), ('rules', 'rule'), ('.', '.')]



============================ Sentence 23 =============================

14  DES Single Round (Cont…) Key Transformation Permutation of selection of sub-key from original key Expansion Permutation (E-table) Right half is expanded from 32-bits to 48-bits S-box Substitution Accepts 48-bits from XOR operation and produce 32-bits using 8 substitution boxes (each S-boxes has a 6-bit i/p and 4-bit o/p). 


>> Tokens are: 
 ['14', 'DES', 'Single', 'Round', '(', 'Cont…', ')', 'Key', 'Transformation', 'Permutation', 'selection', 'sub-key', 'original', 'key', 'Expansion', 'Permutation', '(', 'E-table', ')', 'Right', 'half', 'expanded', '32-bits', '48-bits', 'S-box', 'Substitution', 'Accepts', '48-bits', 'XOR', 'operation', 'produce', '32-bits', 'using', '8', 'substitution', 'boxes', '(', 'S-boxes', '6-bit', 'i/p', '4-bit', 'o/p', ')', '.']

>> Bigrams are: 
 [('14', 'DES'), ('DES', 'Single'), ('Single', 'Round'), ('Round', '('), ('(', 'Cont…'), ('Cont…', ')'), (')', 'Key'), ('Key', 'Transformation'), ('Transformation', 'Permutation'), ('Permutation', 'selection'), ('selection', 'sub-key'), ('sub-key', 'original'), ('original', 'key'), ('key', 'Expansion'), ('Expansion', 'Permutation'), ('Permutation', '('), ('(', 'E-table'), ('E-table', ')'), (')', 'Right'), ('Right', 'half'), ('half', 'expanded'), ('expanded', '32-bits'), ('32-bits', '48-bits'), ('48-bits', 'S-box'), ('S-box', 'Substitution'), ('Substitution', 'Accepts'), ('Accepts', '48-bits'), ('48-bits', 'XOR'), ('XOR', 'operation'), ('operation', 'produce'), ('produce', '32-bits'), ('32-bits', 'using'), ('using', '8'), ('8', 'substitution'), ('substitution', 'boxes'), ('boxes', '('), ('(', 'S-boxes'), ('S-boxes', '6-bit'), ('6-bit', 'i/p'), ('i/p', '4-bit'), ('4-bit', 'o/p'), ('o/p', ')'), (')', '.')]

>> Trigrams are: 
 [('14', 'DES', 'Single'), ('DES', 'Single', 'Round'), ('Single', 'Round', '('), ('Round', '(', 'Cont…'), ('(', 'Cont…', ')'), ('Cont…', ')', 'Key'), (')', 'Key', 'Transformation'), ('Key', 'Transformation', 'Permutation'), ('Transformation', 'Permutation', 'selection'), ('Permutation', 'selection', 'sub-key'), ('selection', 'sub-key', 'original'), ('sub-key', 'original', 'key'), ('original', 'key', 'Expansion'), ('key', 'Expansion', 'Permutation'), ('Expansion', 'Permutation', '('), ('Permutation', '(', 'E-table'), ('(', 'E-table', ')'), ('E-table', ')', 'Right'), (')', 'Right', 'half'), ('Right', 'half', 'expanded'), ('half', 'expanded', '32-bits'), ('expanded', '32-bits', '48-bits'), ('32-bits', '48-bits', 'S-box'), ('48-bits', 'S-box', 'Substitution'), ('S-box', 'Substitution', 'Accepts'), ('Substitution', 'Accepts', '48-bits'), ('Accepts', '48-bits', 'XOR'), ('48-bits', 'XOR', 'operation'), ('XOR', 'operation', 'produce'), ('operation', 'produce', '32-bits'), ('produce', '32-bits', 'using'), ('32-bits', 'using', '8'), ('using', '8', 'substitution'), ('8', 'substitution', 'boxes'), ('substitution', 'boxes', '('), ('boxes', '(', 'S-boxes'), ('(', 'S-boxes', '6-bit'), ('S-boxes', '6-bit', 'i/p'), ('6-bit', 'i/p', '4-bit'), ('i/p', '4-bit', 'o/p'), ('4-bit', 'o/p', ')'), ('o/p', ')', '.')]

>> POS Tags are: 
 [('14', 'CD'), ('DES', 'NNP'), ('Single', 'NNP'), ('Round', 'NNP'), ('(', '('), ('Cont…', 'NNP'), (')', ')'), ('Key', 'NNP'), ('Transformation', 'NNP'), ('Permutation', 'NNP'), ('selection', 'NN'), ('sub-key', 'JJ'), ('original', 'JJ'), ('key', 'JJ'), ('Expansion', 'NNP'), ('Permutation', 'NNP'), ('(', '('), ('E-table', 'JJ'), (')', ')'), ('Right', 'NNP'), ('half', 'NN'), ('expanded', 'VBD'), ('32-bits', 'JJ'), ('48-bits', 'JJ'), ('S-box', 'JJ'), ('Substitution', 'NNP'), ('Accepts', 'NNP'), ('48-bits', 'JJ'), ('XOR', 'NNP'), ('operation', 'NN'), ('produce', 'VBP'), ('32-bits', 'NNS'), ('using', 'VBG'), ('8', 'CD'), ('substitution', 'NN'), ('boxes', 'NNS'), ('(', '('), ('S-boxes', 'JJ'), ('6-bit', 'JJ'), ('i/p', 'NN'), ('4-bit', 'JJ'), ('o/p', 'NN'), (')', ')'), ('.', '.')]

 (S
  14/CD
  (NP DES/NNP Single/NNP Round/NNP)
  (/(
  (NP Cont…/NNP)
  )/)
  (NP Key/NNP Transformation/NNP Permutation/NNP selection/NN)
  (NP sub-key/JJ original/JJ key/JJ Expansion/NNP Permutation/NNP)
  (/(
  E-table/JJ
  )/)
  (NP Right/NNP half/NN)
  expanded/VBD
  (NP 32-bits/JJ 48-bits/JJ S-box/JJ Substitution/NNP Accepts/NNP)
  (NP 48-bits/JJ XOR/NNP operation/NN)
  produce/VBP
  (NP 32-bits/NNS)
  using/VBG
  8/CD
  (NP substitution/NN boxes/NNS)
  (/(
  (NP S-boxes/JJ 6-bit/JJ i/p/NN)
  (NP 4-bit/JJ o/p/NN)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['DES Single Round', 'Cont…', 'Key Transformation Permutation selection', 'sub-key original key Expansion Permutation', 'Right half', '32-bits 48-bits S-box Substitution Accepts', '48-bits XOR operation', '32-bits', 'substitution boxes', 'S-boxes 6-bit i/p', '4-bit o/p']

>> Named Entities are: 
 [('PERSON', 'Key Transformation'), ('ORGANIZATION', 'XOR')] 

>> Stemming using Porter Stemmer: 
 [('14', '14'), ('DES', 'de'), ('Single', 'singl'), ('Round', 'round'), ('(', '('), ('Cont…', 'cont…'), (')', ')'), ('Key', 'key'), ('Transformation', 'transform'), ('Permutation', 'permut'), ('selection', 'select'), ('sub-key', 'sub-key'), ('original', 'origin'), ('key', 'key'), ('Expansion', 'expans'), ('Permutation', 'permut'), ('(', '('), ('E-table', 'e-tabl'), (')', ')'), ('Right', 'right'), ('half', 'half'), ('expanded', 'expand'), ('32-bits', '32-bit'), ('48-bits', '48-bit'), ('S-box', 's-box'), ('Substitution', 'substitut'), ('Accepts', 'accept'), ('48-bits', '48-bit'), ('XOR', 'xor'), ('operation', 'oper'), ('produce', 'produc'), ('32-bits', '32-bit'), ('using', 'use'), ('8', '8'), ('substitution', 'substitut'), ('boxes', 'box'), ('(', '('), ('S-boxes', 's-box'), ('6-bit', '6-bit'), ('i/p', 'i/p'), ('4-bit', '4-bit'), ('o/p', 'o/p'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('14', '14'), ('DES', 'des'), ('Single', 'singl'), ('Round', 'round'), ('(', '('), ('Cont…', 'cont…'), (')', ')'), ('Key', 'key'), ('Transformation', 'transform'), ('Permutation', 'permut'), ('selection', 'select'), ('sub-key', 'sub-key'), ('original', 'origin'), ('key', 'key'), ('Expansion', 'expans'), ('Permutation', 'permut'), ('(', '('), ('E-table', 'e-tabl'), (')', ')'), ('Right', 'right'), ('half', 'half'), ('expanded', 'expand'), ('32-bits', '32-bit'), ('48-bits', '48-bit'), ('S-box', 's-box'), ('Substitution', 'substitut'), ('Accepts', 'accept'), ('48-bits', '48-bit'), ('XOR', 'xor'), ('operation', 'oper'), ('produce', 'produc'), ('32-bits', '32-bit'), ('using', 'use'), ('8', '8'), ('substitution', 'substitut'), ('boxes', 'box'), ('(', '('), ('S-boxes', 's-box'), ('6-bit', '6-bit'), ('i/p', 'i/p'), ('4-bit', '4-bit'), ('o/p', 'o/p'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('14', '14'), ('DES', 'DES'), ('Single', 'Single'), ('Round', 'Round'), ('(', '('), ('Cont…', 'Cont…'), (')', ')'), ('Key', 'Key'), ('Transformation', 'Transformation'), ('Permutation', 'Permutation'), ('selection', 'selection'), ('sub-key', 'sub-key'), ('original', 'original'), ('key', 'key'), ('Expansion', 'Expansion'), ('Permutation', 'Permutation'), ('(', '('), ('E-table', 'E-table'), (')', ')'), ('Right', 'Right'), ('half', 'half'), ('expanded', 'expanded'), ('32-bits', '32-bits'), ('48-bits', '48-bits'), ('S-box', 'S-box'), ('Substitution', 'Substitution'), ('Accepts', 'Accepts'), ('48-bits', '48-bits'), ('XOR', 'XOR'), ('operation', 'operation'), ('produce', 'produce'), ('32-bits', '32-bits'), ('using', 'using'), ('8', '8'), ('substitution', 'substitution'), ('boxes', 'box'), ('(', '('), ('S-boxes', 'S-boxes'), ('6-bit', '6-bit'), ('i/p', 'i/p'), ('4-bit', '4-bit'), ('o/p', 'o/p'), (')', ')'), ('.', '.')]



============================ Sentence 24 =============================

P-Box Permutation XOR and Swap  Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  Role of S-box   Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  Role of S-box (Cont…) The outer two bits of each group select one row of an S-box. 


>> Tokens are: 
 ['P-Box', 'Permutation', 'XOR', 'Swap', 'Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Role', 'S-box', 'Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Role', 'S-box', '(', 'Cont…', ')', 'The', 'outer', 'two', 'bits', 'group', 'select', 'one', 'row', 'S-box', '.']

>> Bigrams are: 
 [('P-Box', 'Permutation'), ('Permutation', 'XOR'), ('XOR', 'Swap'), ('Swap', 'Unit-2'), ('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Role'), ('Role', 'S-box'), ('S-box', 'Unit-2'), ('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Role'), ('Role', 'S-box'), ('S-box', '('), ('(', 'Cont…'), ('Cont…', ')'), (')', 'The'), ('The', 'outer'), ('outer', 'two'), ('two', 'bits'), ('bits', 'group'), ('group', 'select'), ('select', 'one'), ('one', 'row'), ('row', 'S-box'), ('S-box', '.')]

>> Trigrams are: 
 [('P-Box', 'Permutation', 'XOR'), ('Permutation', 'XOR', 'Swap'), ('XOR', 'Swap', 'Unit-2'), ('Swap', 'Unit-2', 'Darshan'), ('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Role'), ('›', 'Role', 'S-box'), ('Role', 'S-box', 'Unit-2'), ('S-box', 'Unit-2', 'Darshan'), ('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Role'), ('›', 'Role', 'S-box'), ('Role', 'S-box', '('), ('S-box', '(', 'Cont…'), ('(', 'Cont…', ')'), ('Cont…', ')', 'The'), (')', 'The', 'outer'), ('The', 'outer', 'two'), ('outer', 'two', 'bits'), ('two', 'bits', 'group'), ('bits', 'group', 'select'), ('group', 'select', 'one'), ('select', 'one', 'row'), ('one', 'row', 'S-box'), ('row', 'S-box', '.')]

>> POS Tags are: 
 [('P-Box', 'JJ'), ('Permutation', 'NNP'), ('XOR', 'NNP'), ('Swap', 'NNP'), ('Unit-2', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Role', 'NNP'), ('S-box', 'NNP'), ('Unit-2', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Role', 'NNP'), ('S-box', 'NNP'), ('(', '('), ('Cont…', 'NNP'), (')', ')'), ('The', 'DT'), ('outer', 'NN'), ('two', 'CD'), ('bits', 'NNS'), ('group', 'NN'), ('select', 'VBP'), ('one', 'CD'), ('row', 'NN'), ('S-box', 'NNP'), ('.', '.')]

 (S
  (NP
    P-Box/JJ
    Permutation/NNP
    XOR/NNP
    Swap/NNP
    Unit-2/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/JJ
    Role/NNP
    S-box/NNP
    Unit-2/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/JJ Role/NNP S-box/NNP)
  (/(
  (NP Cont…/NNP)
  )/)
  (NP The/DT outer/NN)
  two/CD
  (NP bits/NNS group/NN)
  select/VBP
  one/CD
  (NP row/NN S-box/NNP)
  ./.) 


>> Noun Phrases are: 
 ['P-Box Permutation XOR Swap Unit-2 Darshan Institute Engineering', 'Technology ‹', '› Role S-box Unit-2 Darshan Institute Engineering', 'Technology ‹', '› Role S-box', 'Cont…', 'The outer', 'bits group', 'row S-box']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Role'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Role')] 

>> Stemming using Porter Stemmer: 
 [('P-Box', 'p-box'), ('Permutation', 'permut'), ('XOR', 'xor'), ('Swap', 'swap'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Role', 'role'), ('S-box', 's-box'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Role', 'role'), ('S-box', 's-box'), ('(', '('), ('Cont…', 'cont…'), (')', ')'), ('The', 'the'), ('outer', 'outer'), ('two', 'two'), ('bits', 'bit'), ('group', 'group'), ('select', 'select'), ('one', 'one'), ('row', 'row'), ('S-box', 's-box'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('P-Box', 'p-box'), ('Permutation', 'permut'), ('XOR', 'xor'), ('Swap', 'swap'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Role', 'role'), ('S-box', 's-box'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Role', 'role'), ('S-box', 's-box'), ('(', '('), ('Cont…', 'cont…'), (')', ')'), ('The', 'the'), ('outer', 'outer'), ('two', 'two'), ('bits', 'bit'), ('group', 'group'), ('select', 'select'), ('one', 'one'), ('row', 'row'), ('S-box', 's-box'), ('.', '.')]

>> Lemmatization: 
 [('P-Box', 'P-Box'), ('Permutation', 'Permutation'), ('XOR', 'XOR'), ('Swap', 'Swap'), ('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Role', 'Role'), ('S-box', 'S-box'), ('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Role', 'Role'), ('S-box', 'S-box'), ('(', '('), ('Cont…', 'Cont…'), (')', ')'), ('The', 'The'), ('outer', 'outer'), ('two', 'two'), ('bits', 'bit'), ('group', 'group'), ('select', 'select'), ('one', 'one'), ('row', 'row'), ('S-box', 'S-box'), ('.', '.')]



============================ Sentence 25 =============================

Inner four bits selects one column of an S-box. 


>> Tokens are: 
 ['Inner', 'four', 'bits', 'selects', 'one', 'column', 'S-box', '.']

>> Bigrams are: 
 [('Inner', 'four'), ('four', 'bits'), ('bits', 'selects'), ('selects', 'one'), ('one', 'column'), ('column', 'S-box'), ('S-box', '.')]

>> Trigrams are: 
 [('Inner', 'four', 'bits'), ('four', 'bits', 'selects'), ('bits', 'selects', 'one'), ('selects', 'one', 'column'), ('one', 'column', 'S-box'), ('column', 'S-box', '.')]

>> POS Tags are: 
 [('Inner', 'NNP'), ('four', 'CD'), ('bits', 'NNS'), ('selects', 'VBZ'), ('one', 'CD'), ('column', 'NN'), ('S-box', 'NNP'), ('.', '.')]

 (S
  (NP Inner/NNP)
  four/CD
  (NP bits/NNS)
  selects/VBZ
  one/CD
  (NP column/NN S-box/NNP)
  ./.) 


>> Noun Phrases are: 
 ['Inner', 'bits', 'column S-box']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Inner', 'inner'), ('four', 'four'), ('bits', 'bit'), ('selects', 'select'), ('one', 'one'), ('column', 'column'), ('S-box', 's-box'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Inner', 'inner'), ('four', 'four'), ('bits', 'bit'), ('selects', 'select'), ('one', 'one'), ('column', 'column'), ('S-box', 's-box'), ('.', '.')]

>> Lemmatization: 
 [('Inner', 'Inner'), ('four', 'four'), ('bits', 'bit'), ('selects', 'selects'), ('one', 'one'), ('column', 'column'), ('S-box', 'S-box'), ('.', '.')]



============================ Sentence 26 =============================

Example:         S-box 1 	0	1	1	0	0	1  Row Column    Input Output 	1	0	0	1   Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›   17  Avalanche Effect Desirable property of any encryption algorithm is that a change in one bit of the plaintext or of the key should produce a change in many bits of cipher text. 


>> Tokens are: 
 ['Example', ':', 'S-box', '1', '0', '1', '1', '0', '0', '1', 'Row', 'Column', 'Input', 'Output', '1', '0', '0', '1', 'Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', '17', 'Avalanche', 'Effect', 'Desirable', 'property', 'encryption', 'algorithm', 'change', 'one', 'bit', 'plaintext', 'key', 'produce', 'change', 'many', 'bits', 'cipher', 'text', '.']

>> Bigrams are: 
 [('Example', ':'), (':', 'S-box'), ('S-box', '1'), ('1', '0'), ('0', '1'), ('1', '1'), ('1', '0'), ('0', '0'), ('0', '1'), ('1', 'Row'), ('Row', 'Column'), ('Column', 'Input'), ('Input', 'Output'), ('Output', '1'), ('1', '0'), ('0', '0'), ('0', '1'), ('1', 'Unit-2'), ('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', '17'), ('17', 'Avalanche'), ('Avalanche', 'Effect'), ('Effect', 'Desirable'), ('Desirable', 'property'), ('property', 'encryption'), ('encryption', 'algorithm'), ('algorithm', 'change'), ('change', 'one'), ('one', 'bit'), ('bit', 'plaintext'), ('plaintext', 'key'), ('key', 'produce'), ('produce', 'change'), ('change', 'many'), ('many', 'bits'), ('bits', 'cipher'), ('cipher', 'text'), ('text', '.')]

>> Trigrams are: 
 [('Example', ':', 'S-box'), (':', 'S-box', '1'), ('S-box', '1', '0'), ('1', '0', '1'), ('0', '1', '1'), ('1', '1', '0'), ('1', '0', '0'), ('0', '0', '1'), ('0', '1', 'Row'), ('1', 'Row', 'Column'), ('Row', 'Column', 'Input'), ('Column', 'Input', 'Output'), ('Input', 'Output', '1'), ('Output', '1', '0'), ('1', '0', '0'), ('0', '0', '1'), ('0', '1', 'Unit-2'), ('1', 'Unit-2', 'Darshan'), ('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', '17'), ('›', '17', 'Avalanche'), ('17', 'Avalanche', 'Effect'), ('Avalanche', 'Effect', 'Desirable'), ('Effect', 'Desirable', 'property'), ('Desirable', 'property', 'encryption'), ('property', 'encryption', 'algorithm'), ('encryption', 'algorithm', 'change'), ('algorithm', 'change', 'one'), ('change', 'one', 'bit'), ('one', 'bit', 'plaintext'), ('bit', 'plaintext', 'key'), ('plaintext', 'key', 'produce'), ('key', 'produce', 'change'), ('produce', 'change', 'many'), ('change', 'many', 'bits'), ('many', 'bits', 'cipher'), ('bits', 'cipher', 'text'), ('cipher', 'text', '.')]

>> POS Tags are: 
 [('Example', 'NNS'), (':', ':'), ('S-box', 'JJ'), ('1', 'CD'), ('0', 'CD'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('1', 'CD'), ('Row', 'NNP'), ('Column', 'NNP'), ('Input', 'NNP'), ('Output', 'NNP'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('1', 'CD'), ('Unit-2', 'JJ'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', '$'), ('17', 'CD'), ('Avalanche', 'NNP'), ('Effect', 'NNP'), ('Desirable', 'NNP'), ('property', 'NN'), ('encryption', 'NN'), ('algorithm', 'NN'), ('change', 'NN'), ('one', 'CD'), ('bit', 'NN'), ('plaintext', 'JJ'), ('key', 'JJ'), ('produce', 'VBP'), ('change', 'VBP'), ('many', 'JJ'), ('bits', 'NNS'), ('cipher', 'VBP'), ('text', 'NN'), ('.', '.')]

 (S
  (NP Example/NNS)
  :/:
  S-box/JJ
  1/CD
  0/CD
  1/CD
  1/CD
  0/CD
  0/CD
  1/CD
  (NP Row/NNP Column/NNP Input/NNP Output/NNP)
  1/CD
  0/CD
  0/CD
  1/CD
  (NP Unit-2/JJ Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  ›/$
  17/CD
  (NP
    Avalanche/NNP
    Effect/NNP
    Desirable/NNP
    property/NN
    encryption/NN
    algorithm/NN
    change/NN)
  one/CD
  (NP bit/NN)
  plaintext/JJ
  key/JJ
  produce/VBP
  change/VBP
  (NP many/JJ bits/NNS)
  cipher/VBP
  (NP text/NN)
  ./.) 


>> Noun Phrases are: 
 ['Example', 'Row Column Input Output', 'Unit-2 Darshan Institute Engineering', 'Technology ‹', 'Avalanche Effect Desirable property encryption algorithm change', 'bit', 'many bits', 'text']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('Example', 'exampl'), (':', ':'), ('S-box', 's-box'), ('1', '1'), ('0', '0'), ('1', '1'), ('1', '1'), ('0', '0'), ('0', '0'), ('1', '1'), ('Row', 'row'), ('Column', 'column'), ('Input', 'input'), ('Output', 'output'), ('1', '1'), ('0', '0'), ('0', '0'), ('1', '1'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('17', '17'), ('Avalanche', 'avalanch'), ('Effect', 'effect'), ('Desirable', 'desir'), ('property', 'properti'), ('encryption', 'encrypt'), ('algorithm', 'algorithm'), ('change', 'chang'), ('one', 'one'), ('bit', 'bit'), ('plaintext', 'plaintext'), ('key', 'key'), ('produce', 'produc'), ('change', 'chang'), ('many', 'mani'), ('bits', 'bit'), ('cipher', 'cipher'), ('text', 'text'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Example', 'exampl'), (':', ':'), ('S-box', 's-box'), ('1', '1'), ('0', '0'), ('1', '1'), ('1', '1'), ('0', '0'), ('0', '0'), ('1', '1'), ('Row', 'row'), ('Column', 'column'), ('Input', 'input'), ('Output', 'output'), ('1', '1'), ('0', '0'), ('0', '0'), ('1', '1'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('17', '17'), ('Avalanche', 'avalanch'), ('Effect', 'effect'), ('Desirable', 'desir'), ('property', 'properti'), ('encryption', 'encrypt'), ('algorithm', 'algorithm'), ('change', 'chang'), ('one', 'one'), ('bit', 'bit'), ('plaintext', 'plaintext'), ('key', 'key'), ('produce', 'produc'), ('change', 'chang'), ('many', 'mani'), ('bits', 'bit'), ('cipher', 'cipher'), ('text', 'text'), ('.', '.')]

>> Lemmatization: 
 [('Example', 'Example'), (':', ':'), ('S-box', 'S-box'), ('1', '1'), ('0', '0'), ('1', '1'), ('1', '1'), ('0', '0'), ('0', '0'), ('1', '1'), ('Row', 'Row'), ('Column', 'Column'), ('Input', 'Input'), ('Output', 'Output'), ('1', '1'), ('0', '0'), ('0', '0'), ('1', '1'), ('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('17', '17'), ('Avalanche', 'Avalanche'), ('Effect', 'Effect'), ('Desirable', 'Desirable'), ('property', 'property'), ('encryption', 'encryption'), ('algorithm', 'algorithm'), ('change', 'change'), ('one', 'one'), ('bit', 'bit'), ('plaintext', 'plaintext'), ('key', 'key'), ('produce', 'produce'), ('change', 'change'), ('many', 'many'), ('bits', 'bit'), ('cipher', 'cipher'), ('text', 'text'), ('.', '.')]



============================ Sentence 27 =============================

DES performs strong avalanche effect. 


>> Tokens are: 
 ['DES', 'performs', 'strong', 'avalanche', 'effect', '.']

>> Bigrams are: 
 [('DES', 'performs'), ('performs', 'strong'), ('strong', 'avalanche'), ('avalanche', 'effect'), ('effect', '.')]

>> Trigrams are: 
 [('DES', 'performs', 'strong'), ('performs', 'strong', 'avalanche'), ('strong', 'avalanche', 'effect'), ('avalanche', 'effect', '.')]

>> POS Tags are: 
 [('DES', 'NNP'), ('performs', 'NNS'), ('strong', 'JJ'), ('avalanche', 'NN'), ('effect', 'NN'), ('.', '.')]

 (S
  (NP DES/NNP performs/NNS)
  (NP strong/JJ avalanche/NN effect/NN)
  ./.) 


>> Noun Phrases are: 
 ['DES performs', 'strong avalanche effect']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('DES', 'de'), ('performs', 'perform'), ('strong', 'strong'), ('avalanche', 'avalanch'), ('effect', 'effect'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('DES', 'des'), ('performs', 'perform'), ('strong', 'strong'), ('avalanche', 'avalanch'), ('effect', 'effect'), ('.', '.')]

>> Lemmatization: 
 [('DES', 'DES'), ('performs', 'performs'), ('strong', 'strong'), ('avalanche', 'avalanche'), ('effect', 'effect'), ('.', '.')]



============================ Sentence 28 =============================

Although the two plaintext blocks differ only in the rightmost bit, the ciphertext blocks differ in 29 bits. 


>> Tokens are: 
 ['Although', 'two', 'plaintext', 'blocks', 'differ', 'rightmost', 'bit', ',', 'ciphertext', 'blocks', 'differ', '29', 'bits', '.']

>> Bigrams are: 
 [('Although', 'two'), ('two', 'plaintext'), ('plaintext', 'blocks'), ('blocks', 'differ'), ('differ', 'rightmost'), ('rightmost', 'bit'), ('bit', ','), (',', 'ciphertext'), ('ciphertext', 'blocks'), ('blocks', 'differ'), ('differ', '29'), ('29', 'bits'), ('bits', '.')]

>> Trigrams are: 
 [('Although', 'two', 'plaintext'), ('two', 'plaintext', 'blocks'), ('plaintext', 'blocks', 'differ'), ('blocks', 'differ', 'rightmost'), ('differ', 'rightmost', 'bit'), ('rightmost', 'bit', ','), ('bit', ',', 'ciphertext'), (',', 'ciphertext', 'blocks'), ('ciphertext', 'blocks', 'differ'), ('blocks', 'differ', '29'), ('differ', '29', 'bits'), ('29', 'bits', '.')]

>> POS Tags are: 
 [('Although', 'IN'), ('two', 'CD'), ('plaintext', 'NN'), ('blocks', 'NNS'), ('differ', 'VBP'), ('rightmost', 'JJ'), ('bit', 'NN'), (',', ','), ('ciphertext', 'NN'), ('blocks', 'NNS'), ('differ', 'VBP'), ('29', 'CD'), ('bits', 'NNS'), ('.', '.')]

 (S
  Although/IN
  two/CD
  (NP plaintext/NN blocks/NNS)
  differ/VBP
  (NP rightmost/JJ bit/NN)
  ,/,
  (NP ciphertext/NN blocks/NNS)
  differ/VBP
  29/CD
  (NP bits/NNS)
  ./.) 


>> Noun Phrases are: 
 ['plaintext blocks', 'rightmost bit', 'ciphertext blocks', 'bits']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Although', 'although'), ('two', 'two'), ('plaintext', 'plaintext'), ('blocks', 'block'), ('differ', 'differ'), ('rightmost', 'rightmost'), ('bit', 'bit'), (',', ','), ('ciphertext', 'ciphertext'), ('blocks', 'block'), ('differ', 'differ'), ('29', '29'), ('bits', 'bit'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Although', 'although'), ('two', 'two'), ('plaintext', 'plaintext'), ('blocks', 'block'), ('differ', 'differ'), ('rightmost', 'rightmost'), ('bit', 'bit'), (',', ','), ('ciphertext', 'ciphertext'), ('blocks', 'block'), ('differ', 'differ'), ('29', '29'), ('bits', 'bit'), ('.', '.')]

>> Lemmatization: 
 [('Although', 'Although'), ('two', 'two'), ('plaintext', 'plaintext'), ('blocks', 'block'), ('differ', 'differ'), ('rightmost', 'rightmost'), ('bit', 'bit'), (',', ','), ('ciphertext', 'ciphertext'), ('blocks', 'block'), ('differ', 'differ'), ('29', '29'), ('bits', 'bit'), ('.', '.')]



============================ Sentence 29 =============================

This means that changing approximately 1.5 % of the plaintext creates a change of approximately 45 % in the ciphertext. 


>> Tokens are: 
 ['This', 'means', 'changing', 'approximately', '1.5', '%', 'plaintext', 'creates', 'change', 'approximately', '45', '%', 'ciphertext', '.']

>> Bigrams are: 
 [('This', 'means'), ('means', 'changing'), ('changing', 'approximately'), ('approximately', '1.5'), ('1.5', '%'), ('%', 'plaintext'), ('plaintext', 'creates'), ('creates', 'change'), ('change', 'approximately'), ('approximately', '45'), ('45', '%'), ('%', 'ciphertext'), ('ciphertext', '.')]

>> Trigrams are: 
 [('This', 'means', 'changing'), ('means', 'changing', 'approximately'), ('changing', 'approximately', '1.5'), ('approximately', '1.5', '%'), ('1.5', '%', 'plaintext'), ('%', 'plaintext', 'creates'), ('plaintext', 'creates', 'change'), ('creates', 'change', 'approximately'), ('change', 'approximately', '45'), ('approximately', '45', '%'), ('45', '%', 'ciphertext'), ('%', 'ciphertext', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('means', 'VBZ'), ('changing', 'VBG'), ('approximately', 'RB'), ('1.5', 'CD'), ('%', 'NN'), ('plaintext', 'JJ'), ('creates', 'VBZ'), ('change', 'VBP'), ('approximately', 'RB'), ('45', 'CD'), ('%', 'NN'), ('ciphertext', 'NN'), ('.', '.')]

 (S
  This/DT
  means/VBZ
  changing/VBG
  approximately/RB
  1.5/CD
  (NP %/NN)
  plaintext/JJ
  creates/VBZ
  change/VBP
  approximately/RB
  45/CD
  (NP %/NN ciphertext/NN)
  ./.) 


>> Noun Phrases are: 
 ['%', '% ciphertext']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('means', 'mean'), ('changing', 'chang'), ('approximately', 'approxim'), ('1.5', '1.5'), ('%', '%'), ('plaintext', 'plaintext'), ('creates', 'creat'), ('change', 'chang'), ('approximately', 'approxim'), ('45', '45'), ('%', '%'), ('ciphertext', 'ciphertext'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('means', 'mean'), ('changing', 'chang'), ('approximately', 'approxim'), ('1.5', '1.5'), ('%', '%'), ('plaintext', 'plaintext'), ('creates', 'creat'), ('change', 'chang'), ('approximately', 'approxim'), ('45', '45'), ('%', '%'), ('ciphertext', 'ciphertext'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('means', 'mean'), ('changing', 'changing'), ('approximately', 'approximately'), ('1.5', '1.5'), ('%', '%'), ('plaintext', 'plaintext'), ('creates', 'creates'), ('change', 'change'), ('approximately', 'approximately'), ('45', '45'), ('%', '%'), ('ciphertext', 'ciphertext'), ('.', '.')]



============================ Sentence 30 =============================

Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  AES (Advanced Encryption Standard) The Rijndael proposal for AES defined a cipher in which the block length and the key length can be independently specified to be 128, 192, or 256 bits. 


>> Tokens are: 
 ['Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'AES', '(', 'Advanced', 'Encryption', 'Standard', ')', 'The', 'Rijndael', 'proposal', 'AES', 'defined', 'cipher', 'block', 'length', 'key', 'length', 'independently', 'specified', '128', ',', '192', ',', '256', 'bits', '.']

>> Bigrams are: 
 [('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'AES'), ('AES', '('), ('(', 'Advanced'), ('Advanced', 'Encryption'), ('Encryption', 'Standard'), ('Standard', ')'), (')', 'The'), ('The', 'Rijndael'), ('Rijndael', 'proposal'), ('proposal', 'AES'), ('AES', 'defined'), ('defined', 'cipher'), ('cipher', 'block'), ('block', 'length'), ('length', 'key'), ('key', 'length'), ('length', 'independently'), ('independently', 'specified'), ('specified', '128'), ('128', ','), (',', '192'), ('192', ','), (',', '256'), ('256', 'bits'), ('bits', '.')]

>> Trigrams are: 
 [('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'AES'), ('›', 'AES', '('), ('AES', '(', 'Advanced'), ('(', 'Advanced', 'Encryption'), ('Advanced', 'Encryption', 'Standard'), ('Encryption', 'Standard', ')'), ('Standard', ')', 'The'), (')', 'The', 'Rijndael'), ('The', 'Rijndael', 'proposal'), ('Rijndael', 'proposal', 'AES'), ('proposal', 'AES', 'defined'), ('AES', 'defined', 'cipher'), ('defined', 'cipher', 'block'), ('cipher', 'block', 'length'), ('block', 'length', 'key'), ('length', 'key', 'length'), ('key', 'length', 'independently'), ('length', 'independently', 'specified'), ('independently', 'specified', '128'), ('specified', '128', ','), ('128', ',', '192'), (',', '192', ','), ('192', ',', '256'), (',', '256', 'bits'), ('256', 'bits', '.')]

>> POS Tags are: 
 [('Unit-2', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('AES', 'NNP'), ('(', '('), ('Advanced', 'NNP'), ('Encryption', 'NNP'), ('Standard', 'NNP'), (')', ')'), ('The', 'DT'), ('Rijndael', 'NNP'), ('proposal', 'NN'), ('AES', 'NNP'), ('defined', 'VBD'), ('cipher', 'JJR'), ('block', 'NN'), ('length', 'NN'), ('key', 'JJ'), ('length', 'NN'), ('independently', 'RB'), ('specified', 'VBD'), ('128', 'CD'), (',', ','), ('192', 'CD'), (',', ','), ('256', 'CD'), ('bits', 'NNS'), ('.', '.')]

 (S
  (NP Unit-2/NNP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP AES/NNP)
  (/(
  (NP Advanced/NNP Encryption/NNP Standard/NNP)
  )/)
  (NP The/DT Rijndael/NNP proposal/NN AES/NNP)
  defined/VBD
  cipher/JJR
  (NP block/NN length/NN)
  (NP key/JJ length/NN)
  independently/RB
  specified/VBD
  128/CD
  ,/,
  192/CD
  ,/,
  256/CD
  (NP bits/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Unit-2 Darshan Institute Engineering', 'Technology ‹', '› AES', 'Advanced Encryption Standard', 'The Rijndael proposal AES', 'block length', 'key length', 'bits']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Advanced Encryption'), ('GPE', 'Rijndael'), ('ORGANIZATION', 'AES')] 

>> Stemming using Porter Stemmer: 
 [('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('AES', 'ae'), ('(', '('), ('Advanced', 'advanc'), ('Encryption', 'encrypt'), ('Standard', 'standard'), (')', ')'), ('The', 'the'), ('Rijndael', 'rijndael'), ('proposal', 'propos'), ('AES', 'ae'), ('defined', 'defin'), ('cipher', 'cipher'), ('block', 'block'), ('length', 'length'), ('key', 'key'), ('length', 'length'), ('independently', 'independ'), ('specified', 'specifi'), ('128', '128'), (',', ','), ('192', '192'), (',', ','), ('256', '256'), ('bits', 'bit'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('AES', 'ae'), ('(', '('), ('Advanced', 'advanc'), ('Encryption', 'encrypt'), ('Standard', 'standard'), (')', ')'), ('The', 'the'), ('Rijndael', 'rijndael'), ('proposal', 'propos'), ('AES', 'ae'), ('defined', 'defin'), ('cipher', 'cipher'), ('block', 'block'), ('length', 'length'), ('key', 'key'), ('length', 'length'), ('independently', 'independ'), ('specified', 'specifi'), ('128', '128'), (',', ','), ('192', '192'), (',', ','), ('256', '256'), ('bits', 'bit'), ('.', '.')]

>> Lemmatization: 
 [('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('AES', 'AES'), ('(', '('), ('Advanced', 'Advanced'), ('Encryption', 'Encryption'), ('Standard', 'Standard'), (')', ')'), ('The', 'The'), ('Rijndael', 'Rijndael'), ('proposal', 'proposal'), ('AES', 'AES'), ('defined', 'defined'), ('cipher', 'cipher'), ('block', 'block'), ('length', 'length'), ('key', 'key'), ('length', 'length'), ('independently', 'independently'), ('specified', 'specified'), ('128', '128'), (',', ','), ('192', '192'), (',', ','), ('256', '256'), ('bits', 'bit'), ('.', '.')]



============================ Sentence 31 =============================

AES designed to have characteristics  Resistance against all known attacks Speed and code compactness on a wide range of platforms Design simplicity 	Key size (words/ bytes/ bits)	4/16/128	6/24/192	8/32/256  	Block size (words/ bytes/ bits)	4/16/128	4/16/128	4/16/128  	Round key size (words/ bytes/ bits)	4/16/128	4/16/128	4/16/128  	Number of Rounds	10	12	14   Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  AES (Advanced Encryption Standard)      AES Plaintext (128 bits) Ciphertext (128 bits)  Key (128-256 bits)     Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›   AES Structure Initialization Expand 16-byte key to get the actual key block to be used. 


>> Tokens are: 
 ['AES', 'designed', 'characteristics', 'Resistance', 'known', 'attacks', 'Speed', 'code', 'compactness', 'wide', 'range', 'platforms', 'Design', 'simplicity', 'Key', 'size', '(', 'words/', 'bytes/', 'bits', ')', '4/16/128', '6/24/192', '8/32/256', 'Block', 'size', '(', 'words/', 'bytes/', 'bits', ')', '4/16/128', '4/16/128', '4/16/128', 'Round', 'key', 'size', '(', 'words/', 'bytes/', 'bits', ')', '4/16/128', '4/16/128', '4/16/128', 'Number', 'Rounds', '10', '12', '14', 'Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'AES', '(', 'Advanced', 'Encryption', 'Standard', ')', 'AES', 'Plaintext', '(', '128', 'bits', ')', 'Ciphertext', '(', '128', 'bits', ')', 'Key', '(', '128-256', 'bits', ')', 'Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'AES', 'Structure', 'Initialization', 'Expand', '16-byte', 'key', 'get', 'actual', 'key', 'block', 'used', '.']

>> Bigrams are: 
 [('AES', 'designed'), ('designed', 'characteristics'), ('characteristics', 'Resistance'), ('Resistance', 'known'), ('known', 'attacks'), ('attacks', 'Speed'), ('Speed', 'code'), ('code', 'compactness'), ('compactness', 'wide'), ('wide', 'range'), ('range', 'platforms'), ('platforms', 'Design'), ('Design', 'simplicity'), ('simplicity', 'Key'), ('Key', 'size'), ('size', '('), ('(', 'words/'), ('words/', 'bytes/'), ('bytes/', 'bits'), ('bits', ')'), (')', '4/16/128'), ('4/16/128', '6/24/192'), ('6/24/192', '8/32/256'), ('8/32/256', 'Block'), ('Block', 'size'), ('size', '('), ('(', 'words/'), ('words/', 'bytes/'), ('bytes/', 'bits'), ('bits', ')'), (')', '4/16/128'), ('4/16/128', '4/16/128'), ('4/16/128', '4/16/128'), ('4/16/128', 'Round'), ('Round', 'key'), ('key', 'size'), ('size', '('), ('(', 'words/'), ('words/', 'bytes/'), ('bytes/', 'bits'), ('bits', ')'), (')', '4/16/128'), ('4/16/128', '4/16/128'), ('4/16/128', '4/16/128'), ('4/16/128', 'Number'), ('Number', 'Rounds'), ('Rounds', '10'), ('10', '12'), ('12', '14'), ('14', 'Unit-2'), ('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'AES'), ('AES', '('), ('(', 'Advanced'), ('Advanced', 'Encryption'), ('Encryption', 'Standard'), ('Standard', ')'), (')', 'AES'), ('AES', 'Plaintext'), ('Plaintext', '('), ('(', '128'), ('128', 'bits'), ('bits', ')'), (')', 'Ciphertext'), ('Ciphertext', '('), ('(', '128'), ('128', 'bits'), ('bits', ')'), (')', 'Key'), ('Key', '('), ('(', '128-256'), ('128-256', 'bits'), ('bits', ')'), (')', 'Unit-2'), ('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'AES'), ('AES', 'Structure'), ('Structure', 'Initialization'), ('Initialization', 'Expand'), ('Expand', '16-byte'), ('16-byte', 'key'), ('key', 'get'), ('get', 'actual'), ('actual', 'key'), ('key', 'block'), ('block', 'used'), ('used', '.')]

>> Trigrams are: 
 [('AES', 'designed', 'characteristics'), ('designed', 'characteristics', 'Resistance'), ('characteristics', 'Resistance', 'known'), ('Resistance', 'known', 'attacks'), ('known', 'attacks', 'Speed'), ('attacks', 'Speed', 'code'), ('Speed', 'code', 'compactness'), ('code', 'compactness', 'wide'), ('compactness', 'wide', 'range'), ('wide', 'range', 'platforms'), ('range', 'platforms', 'Design'), ('platforms', 'Design', 'simplicity'), ('Design', 'simplicity', 'Key'), ('simplicity', 'Key', 'size'), ('Key', 'size', '('), ('size', '(', 'words/'), ('(', 'words/', 'bytes/'), ('words/', 'bytes/', 'bits'), ('bytes/', 'bits', ')'), ('bits', ')', '4/16/128'), (')', '4/16/128', '6/24/192'), ('4/16/128', '6/24/192', '8/32/256'), ('6/24/192', '8/32/256', 'Block'), ('8/32/256', 'Block', 'size'), ('Block', 'size', '('), ('size', '(', 'words/'), ('(', 'words/', 'bytes/'), ('words/', 'bytes/', 'bits'), ('bytes/', 'bits', ')'), ('bits', ')', '4/16/128'), (')', '4/16/128', '4/16/128'), ('4/16/128', '4/16/128', '4/16/128'), ('4/16/128', '4/16/128', 'Round'), ('4/16/128', 'Round', 'key'), ('Round', 'key', 'size'), ('key', 'size', '('), ('size', '(', 'words/'), ('(', 'words/', 'bytes/'), ('words/', 'bytes/', 'bits'), ('bytes/', 'bits', ')'), ('bits', ')', '4/16/128'), (')', '4/16/128', '4/16/128'), ('4/16/128', '4/16/128', '4/16/128'), ('4/16/128', '4/16/128', 'Number'), ('4/16/128', 'Number', 'Rounds'), ('Number', 'Rounds', '10'), ('Rounds', '10', '12'), ('10', '12', '14'), ('12', '14', 'Unit-2'), ('14', 'Unit-2', 'Darshan'), ('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'AES'), ('›', 'AES', '('), ('AES', '(', 'Advanced'), ('(', 'Advanced', 'Encryption'), ('Advanced', 'Encryption', 'Standard'), ('Encryption', 'Standard', ')'), ('Standard', ')', 'AES'), (')', 'AES', 'Plaintext'), ('AES', 'Plaintext', '('), ('Plaintext', '(', '128'), ('(', '128', 'bits'), ('128', 'bits', ')'), ('bits', ')', 'Ciphertext'), (')', 'Ciphertext', '('), ('Ciphertext', '(', '128'), ('(', '128', 'bits'), ('128', 'bits', ')'), ('bits', ')', 'Key'), (')', 'Key', '('), ('Key', '(', '128-256'), ('(', '128-256', 'bits'), ('128-256', 'bits', ')'), ('bits', ')', 'Unit-2'), (')', 'Unit-2', 'Darshan'), ('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'AES'), ('›', 'AES', 'Structure'), ('AES', 'Structure', 'Initialization'), ('Structure', 'Initialization', 'Expand'), ('Initialization', 'Expand', '16-byte'), ('Expand', '16-byte', 'key'), ('16-byte', 'key', 'get'), ('key', 'get', 'actual'), ('get', 'actual', 'key'), ('actual', 'key', 'block'), ('key', 'block', 'used'), ('block', 'used', '.')]

>> POS Tags are: 
 [('AES', 'NNP'), ('designed', 'VBD'), ('characteristics', 'NNS'), ('Resistance', 'NNP'), ('known', 'NN'), ('attacks', 'NNS'), ('Speed', 'NNP'), ('code', 'NN'), ('compactness', 'NN'), ('wide', 'JJ'), ('range', 'NN'), ('platforms', 'NNS'), ('Design', 'NNP'), ('simplicity', 'NN'), ('Key', 'NNP'), ('size', 'NN'), ('(', '('), ('words/', 'JJ'), ('bytes/', 'NN'), ('bits', 'NNS'), (')', ')'), ('4/16/128', 'CD'), ('6/24/192', 'CD'), ('8/32/256', 'CD'), ('Block', 'NNP'), ('size', 'NN'), ('(', '('), ('words/', 'JJ'), ('bytes/', 'NN'), ('bits', 'NNS'), (')', ')'), ('4/16/128', 'CD'), ('4/16/128', 'CD'), ('4/16/128', 'CD'), ('Round', 'NNP'), ('key', 'JJ'), ('size', 'NN'), ('(', '('), ('words/', 'JJ'), ('bytes/', 'NN'), ('bits', 'NNS'), (')', ')'), ('4/16/128', 'CD'), ('4/16/128', 'CD'), ('4/16/128', 'CD'), ('Number', 'NNP'), ('Rounds', 'NNP'), ('10', 'CD'), ('12', 'CD'), ('14', 'CD'), ('Unit-2', 'JJ'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('AES', 'NNP'), ('(', '('), ('Advanced', 'NNP'), ('Encryption', 'NNP'), ('Standard', 'NNP'), (')', ')'), ('AES', 'NNP'), ('Plaintext', 'NNP'), ('(', '('), ('128', 'CD'), ('bits', 'NNS'), (')', ')'), ('Ciphertext', 'NNP'), ('(', '('), ('128', 'CD'), ('bits', 'NNS'), (')', ')'), ('Key', 'NNP'), ('(', '('), ('128-256', 'JJ'), ('bits', 'NNS'), (')', ')'), ('Unit-2', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('AES', 'NNP'), ('Structure', 'NNP'), ('Initialization', 'NNP'), ('Expand', 'NNP'), ('16-byte', 'CD'), ('key', 'NN'), ('get', 'VB'), ('actual', 'JJ'), ('key', 'NN'), ('block', 'NN'), ('used', 'VBN'), ('.', '.')]

 (S
  (NP AES/NNP)
  designed/VBD
  (NP
    characteristics/NNS
    Resistance/NNP
    known/NN
    attacks/NNS
    Speed/NNP
    code/NN
    compactness/NN)
  (NP
    wide/JJ
    range/NN
    platforms/NNS
    Design/NNP
    simplicity/NN
    Key/NNP
    size/NN)
  (/(
  (NP words//JJ bytes//NN bits/NNS)
  )/)
  4/16/128/CD
  6/24/192/CD
  8/32/256/CD
  (NP Block/NNP size/NN)
  (/(
  (NP words//JJ bytes//NN bits/NNS)
  )/)
  4/16/128/CD
  4/16/128/CD
  4/16/128/CD
  (NP Round/NNP)
  (NP key/JJ size/NN)
  (/(
  (NP words//JJ bytes//NN bits/NNS)
  )/)
  4/16/128/CD
  4/16/128/CD
  4/16/128/CD
  (NP Number/NNP Rounds/NNP)
  10/CD
  12/CD
  14/CD
  (NP Unit-2/JJ Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP AES/NNP)
  (/(
  (NP Advanced/NNP Encryption/NNP Standard/NNP)
  )/)
  (NP AES/NNP Plaintext/NNP)
  (/(
  128/CD
  (NP bits/NNS)
  )/)
  (NP Ciphertext/NNP)
  (/(
  128/CD
  (NP bits/NNS)
  )/)
  (NP Key/NNP)
  (/(
  (NP 128-256/JJ bits/NNS)
  )/)
  (NP Unit-2/NNP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP AES/NNP Structure/NNP Initialization/NNP Expand/NNP)
  16-byte/CD
  (NP key/NN)
  get/VB
  (NP actual/JJ key/NN block/NN)
  used/VBN
  ./.) 


>> Noun Phrases are: 
 ['AES', 'characteristics Resistance known attacks Speed code compactness', 'wide range platforms Design simplicity Key size', 'words/ bytes/ bits', 'Block size', 'words/ bytes/ bits', 'Round', 'key size', 'words/ bytes/ bits', 'Number Rounds', 'Unit-2 Darshan Institute Engineering', 'Technology ‹', '› AES', 'Advanced Encryption Standard', 'AES Plaintext', 'bits', 'Ciphertext', 'bits', 'Key', '128-256 bits', 'Unit-2 Darshan Institute Engineering', 'Technology ‹', '› AES Structure Initialization Expand', 'key', 'actual key block']

>> Named Entities are: 
 [('ORGANIZATION', 'AES'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Advanced Encryption'), ('ORGANIZATION', 'AES'), ('GPE', 'Key'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('AES', 'ae'), ('designed', 'design'), ('characteristics', 'characterist'), ('Resistance', 'resist'), ('known', 'known'), ('attacks', 'attack'), ('Speed', 'speed'), ('code', 'code'), ('compactness', 'compact'), ('wide', 'wide'), ('range', 'rang'), ('platforms', 'platform'), ('Design', 'design'), ('simplicity', 'simplic'), ('Key', 'key'), ('size', 'size'), ('(', '('), ('words/', 'words/'), ('bytes/', 'bytes/'), ('bits', 'bit'), (')', ')'), ('4/16/128', '4/16/128'), ('6/24/192', '6/24/192'), ('8/32/256', '8/32/256'), ('Block', 'block'), ('size', 'size'), ('(', '('), ('words/', 'words/'), ('bytes/', 'bytes/'), ('bits', 'bit'), (')', ')'), ('4/16/128', '4/16/128'), ('4/16/128', '4/16/128'), ('4/16/128', '4/16/128'), ('Round', 'round'), ('key', 'key'), ('size', 'size'), ('(', '('), ('words/', 'words/'), ('bytes/', 'bytes/'), ('bits', 'bit'), (')', ')'), ('4/16/128', '4/16/128'), ('4/16/128', '4/16/128'), ('4/16/128', '4/16/128'), ('Number', 'number'), ('Rounds', 'round'), ('10', '10'), ('12', '12'), ('14', '14'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('AES', 'ae'), ('(', '('), ('Advanced', 'advanc'), ('Encryption', 'encrypt'), ('Standard', 'standard'), (')', ')'), ('AES', 'ae'), ('Plaintext', 'plaintext'), ('(', '('), ('128', '128'), ('bits', 'bit'), (')', ')'), ('Ciphertext', 'ciphertext'), ('(', '('), ('128', '128'), ('bits', 'bit'), (')', ')'), ('Key', 'key'), ('(', '('), ('128-256', '128-256'), ('bits', 'bit'), (')', ')'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('AES', 'ae'), ('Structure', 'structur'), ('Initialization', 'initi'), ('Expand', 'expand'), ('16-byte', '16-byte'), ('key', 'key'), ('get', 'get'), ('actual', 'actual'), ('key', 'key'), ('block', 'block'), ('used', 'use'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('AES', 'ae'), ('designed', 'design'), ('characteristics', 'characterist'), ('Resistance', 'resist'), ('known', 'known'), ('attacks', 'attack'), ('Speed', 'speed'), ('code', 'code'), ('compactness', 'compact'), ('wide', 'wide'), ('range', 'rang'), ('platforms', 'platform'), ('Design', 'design'), ('simplicity', 'simplic'), ('Key', 'key'), ('size', 'size'), ('(', '('), ('words/', 'words/'), ('bytes/', 'bytes/'), ('bits', 'bit'), (')', ')'), ('4/16/128', '4/16/128'), ('6/24/192', '6/24/192'), ('8/32/256', '8/32/256'), ('Block', 'block'), ('size', 'size'), ('(', '('), ('words/', 'words/'), ('bytes/', 'bytes/'), ('bits', 'bit'), (')', ')'), ('4/16/128', '4/16/128'), ('4/16/128', '4/16/128'), ('4/16/128', '4/16/128'), ('Round', 'round'), ('key', 'key'), ('size', 'size'), ('(', '('), ('words/', 'words/'), ('bytes/', 'bytes/'), ('bits', 'bit'), (')', ')'), ('4/16/128', '4/16/128'), ('4/16/128', '4/16/128'), ('4/16/128', '4/16/128'), ('Number', 'number'), ('Rounds', 'round'), ('10', '10'), ('12', '12'), ('14', '14'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('AES', 'ae'), ('(', '('), ('Advanced', 'advanc'), ('Encryption', 'encrypt'), ('Standard', 'standard'), (')', ')'), ('AES', 'ae'), ('Plaintext', 'plaintext'), ('(', '('), ('128', '128'), ('bits', 'bit'), (')', ')'), ('Ciphertext', 'ciphertext'), ('(', '('), ('128', '128'), ('bits', 'bit'), (')', ')'), ('Key', 'key'), ('(', '('), ('128-256', '128-256'), ('bits', 'bit'), (')', ')'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('AES', 'ae'), ('Structure', 'structur'), ('Initialization', 'initi'), ('Expand', 'expand'), ('16-byte', '16-byte'), ('key', 'key'), ('get', 'get'), ('actual', 'actual'), ('key', 'key'), ('block', 'block'), ('used', 'use'), ('.', '.')]

>> Lemmatization: 
 [('AES', 'AES'), ('designed', 'designed'), ('characteristics', 'characteristic'), ('Resistance', 'Resistance'), ('known', 'known'), ('attacks', 'attack'), ('Speed', 'Speed'), ('code', 'code'), ('compactness', 'compactness'), ('wide', 'wide'), ('range', 'range'), ('platforms', 'platform'), ('Design', 'Design'), ('simplicity', 'simplicity'), ('Key', 'Key'), ('size', 'size'), ('(', '('), ('words/', 'words/'), ('bytes/', 'bytes/'), ('bits', 'bit'), (')', ')'), ('4/16/128', '4/16/128'), ('6/24/192', '6/24/192'), ('8/32/256', '8/32/256'), ('Block', 'Block'), ('size', 'size'), ('(', '('), ('words/', 'words/'), ('bytes/', 'bytes/'), ('bits', 'bit'), (')', ')'), ('4/16/128', '4/16/128'), ('4/16/128', '4/16/128'), ('4/16/128', '4/16/128'), ('Round', 'Round'), ('key', 'key'), ('size', 'size'), ('(', '('), ('words/', 'words/'), ('bytes/', 'bytes/'), ('bits', 'bit'), (')', ')'), ('4/16/128', '4/16/128'), ('4/16/128', '4/16/128'), ('4/16/128', '4/16/128'), ('Number', 'Number'), ('Rounds', 'Rounds'), ('10', '10'), ('12', '12'), ('14', '14'), ('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('AES', 'AES'), ('(', '('), ('Advanced', 'Advanced'), ('Encryption', 'Encryption'), ('Standard', 'Standard'), (')', ')'), ('AES', 'AES'), ('Plaintext', 'Plaintext'), ('(', '('), ('128', '128'), ('bits', 'bit'), (')', ')'), ('Ciphertext', 'Ciphertext'), ('(', '('), ('128', '128'), ('bits', 'bit'), (')', ')'), ('Key', 'Key'), ('(', '('), ('128-256', '128-256'), ('bits', 'bit'), (')', ')'), ('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('AES', 'AES'), ('Structure', 'Structure'), ('Initialization', 'Initialization'), ('Expand', 'Expand'), ('16-byte', '16-byte'), ('key', 'key'), ('get', 'get'), ('actual', 'actual'), ('key', 'key'), ('block', 'block'), ('used', 'used'), ('.', '.')]



============================ Sentence 32 =============================

Initialize 16-byte plaintext block called as state. 


>> Tokens are: 
 ['Initialize', '16-byte', 'plaintext', 'block', 'called', 'state', '.']

>> Bigrams are: 
 [('Initialize', '16-byte'), ('16-byte', 'plaintext'), ('plaintext', 'block'), ('block', 'called'), ('called', 'state'), ('state', '.')]

>> Trigrams are: 
 [('Initialize', '16-byte', 'plaintext'), ('16-byte', 'plaintext', 'block'), ('plaintext', 'block', 'called'), ('block', 'called', 'state'), ('called', 'state', '.')]

>> POS Tags are: 
 [('Initialize', 'NNP'), ('16-byte', 'JJ'), ('plaintext', 'NN'), ('block', 'NN'), ('called', 'VBN'), ('state', 'NN'), ('.', '.')]

 (S
  (NP Initialize/NNP)
  (NP 16-byte/JJ plaintext/NN block/NN)
  called/VBN
  (NP state/NN)
  ./.) 


>> Noun Phrases are: 
 ['Initialize', '16-byte plaintext block', 'state']

>> Named Entities are: 
 [('GPE', 'Initialize')] 

>> Stemming using Porter Stemmer: 
 [('Initialize', 'initi'), ('16-byte', '16-byte'), ('plaintext', 'plaintext'), ('block', 'block'), ('called', 'call'), ('state', 'state'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Initialize', 'initi'), ('16-byte', '16-byte'), ('plaintext', 'plaintext'), ('block', 'block'), ('called', 'call'), ('state', 'state'), ('.', '.')]

>> Lemmatization: 
 [('Initialize', 'Initialize'), ('16-byte', '16-byte'), ('plaintext', 'plaintext'), ('block', 'block'), ('called', 'called'), ('state', 'state'), ('.', '.')]



============================ Sentence 33 =============================

XOR the state with the key block. 


>> Tokens are: 
 ['XOR', 'state', 'key', 'block', '.']

>> Bigrams are: 
 [('XOR', 'state'), ('state', 'key'), ('key', 'block'), ('block', '.')]

>> Trigrams are: 
 [('XOR', 'state', 'key'), ('state', 'key', 'block'), ('key', 'block', '.')]

>> POS Tags are: 
 [('XOR', 'NN'), ('state', 'NN'), ('key', 'JJ'), ('block', 'NN'), ('.', '.')]

 (S (NP XOR/NN state/NN) (NP key/JJ block/NN) ./.) 


>> Noun Phrases are: 
 ['XOR state', 'key block']

>> Named Entities are: 
 [('ORGANIZATION', 'XOR')] 

>> Stemming using Porter Stemmer: 
 [('XOR', 'xor'), ('state', 'state'), ('key', 'key'), ('block', 'block'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('XOR', 'xor'), ('state', 'state'), ('key', 'key'), ('block', 'block'), ('.', '.')]

>> Lemmatization: 
 [('XOR', 'XOR'), ('state', 'state'), ('key', 'key'), ('block', 'block'), ('.', '.')]



============================ Sentence 34 =============================

For each round Apply S-box Rotate rows of state Mix columns Add Round key: XOR the state with key block. 


>> Tokens are: 
 ['For', 'round', 'Apply', 'S-box', 'Rotate', 'rows', 'state', 'Mix', 'columns', 'Add', 'Round', 'key', ':', 'XOR', 'state', 'key', 'block', '.']

>> Bigrams are: 
 [('For', 'round'), ('round', 'Apply'), ('Apply', 'S-box'), ('S-box', 'Rotate'), ('Rotate', 'rows'), ('rows', 'state'), ('state', 'Mix'), ('Mix', 'columns'), ('columns', 'Add'), ('Add', 'Round'), ('Round', 'key'), ('key', ':'), (':', 'XOR'), ('XOR', 'state'), ('state', 'key'), ('key', 'block'), ('block', '.')]

>> Trigrams are: 
 [('For', 'round', 'Apply'), ('round', 'Apply', 'S-box'), ('Apply', 'S-box', 'Rotate'), ('S-box', 'Rotate', 'rows'), ('Rotate', 'rows', 'state'), ('rows', 'state', 'Mix'), ('state', 'Mix', 'columns'), ('Mix', 'columns', 'Add'), ('columns', 'Add', 'Round'), ('Add', 'Round', 'key'), ('Round', 'key', ':'), ('key', ':', 'XOR'), (':', 'XOR', 'state'), ('XOR', 'state', 'key'), ('state', 'key', 'block'), ('key', 'block', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('round', 'NN'), ('Apply', 'NNP'), ('S-box', 'NNP'), ('Rotate', 'NNP'), ('rows', 'VBZ'), ('state', 'NN'), ('Mix', 'NNP'), ('columns', 'NN'), ('Add', 'NNP'), ('Round', 'NNP'), ('key', 'NN'), (':', ':'), ('XOR', 'NN'), ('state', 'NN'), ('key', 'JJ'), ('block', 'NN'), ('.', '.')]

 (S
  For/IN
  (NP round/NN Apply/NNP S-box/NNP Rotate/NNP)
  rows/VBZ
  (NP state/NN Mix/NNP columns/NN Add/NNP Round/NNP key/NN)
  :/:
  (NP XOR/NN state/NN)
  (NP key/JJ block/NN)
  ./.) 


>> Noun Phrases are: 
 ['round Apply S-box Rotate', 'state Mix columns Add Round key', 'XOR state', 'key block']

>> Named Entities are: 
 [('PERSON', 'Apply'), ('PERSON', 'Mix'), ('PERSON', 'Add Round')] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('round', 'round'), ('Apply', 'appli'), ('S-box', 's-box'), ('Rotate', 'rotat'), ('rows', 'row'), ('state', 'state'), ('Mix', 'mix'), ('columns', 'column'), ('Add', 'add'), ('Round', 'round'), ('key', 'key'), (':', ':'), ('XOR', 'xor'), ('state', 'state'), ('key', 'key'), ('block', 'block'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('round', 'round'), ('Apply', 'appli'), ('S-box', 's-box'), ('Rotate', 'rotat'), ('rows', 'row'), ('state', 'state'), ('Mix', 'mix'), ('columns', 'column'), ('Add', 'add'), ('Round', 'round'), ('key', 'key'), (':', ':'), ('XOR', 'xor'), ('state', 'state'), ('key', 'key'), ('block', 'block'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('round', 'round'), ('Apply', 'Apply'), ('S-box', 'S-box'), ('Rotate', 'Rotate'), ('rows', 'row'), ('state', 'state'), ('Mix', 'Mix'), ('columns', 'column'), ('Add', 'Add'), ('Round', 'Round'), ('key', 'key'), (':', ':'), ('XOR', 'XOR'), ('state', 'state'), ('key', 'key'), ('block', 'block'), ('.', '.')]



============================ Sentence 35 =============================

Data Units in AES      Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  Block to State & State to Block    Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  Plain Text to State    Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  AES Structure The first N-1 rounds consist of four distinct transformation functions. 


>> Tokens are: 
 ['Data', 'Units', 'AES', 'Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Block', 'State', '&', 'State', 'Block', 'Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Plain', 'Text', 'State', 'Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'AES', 'Structure', 'The', 'first', 'N-1', 'rounds', 'consist', 'four', 'distinct', 'transformation', 'functions', '.']

>> Bigrams are: 
 [('Data', 'Units'), ('Units', 'AES'), ('AES', 'Unit-2'), ('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Block'), ('Block', 'State'), ('State', '&'), ('&', 'State'), ('State', 'Block'), ('Block', 'Unit-2'), ('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Plain'), ('Plain', 'Text'), ('Text', 'State'), ('State', 'Unit-2'), ('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'AES'), ('AES', 'Structure'), ('Structure', 'The'), ('The', 'first'), ('first', 'N-1'), ('N-1', 'rounds'), ('rounds', 'consist'), ('consist', 'four'), ('four', 'distinct'), ('distinct', 'transformation'), ('transformation', 'functions'), ('functions', '.')]

>> Trigrams are: 
 [('Data', 'Units', 'AES'), ('Units', 'AES', 'Unit-2'), ('AES', 'Unit-2', 'Darshan'), ('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Block'), ('›', 'Block', 'State'), ('Block', 'State', '&'), ('State', '&', 'State'), ('&', 'State', 'Block'), ('State', 'Block', 'Unit-2'), ('Block', 'Unit-2', 'Darshan'), ('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Plain'), ('›', 'Plain', 'Text'), ('Plain', 'Text', 'State'), ('Text', 'State', 'Unit-2'), ('State', 'Unit-2', 'Darshan'), ('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'AES'), ('›', 'AES', 'Structure'), ('AES', 'Structure', 'The'), ('Structure', 'The', 'first'), ('The', 'first', 'N-1'), ('first', 'N-1', 'rounds'), ('N-1', 'rounds', 'consist'), ('rounds', 'consist', 'four'), ('consist', 'four', 'distinct'), ('four', 'distinct', 'transformation'), ('distinct', 'transformation', 'functions'), ('transformation', 'functions', '.')]

>> POS Tags are: 
 [('Data', 'NNP'), ('Units', 'NNP'), ('AES', 'NNP'), ('Unit-2', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Block', 'NNP'), ('State', 'NNP'), ('&', 'CC'), ('State', 'NNP'), ('Block', 'NNP'), ('Unit-2', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Plain', 'NNP'), ('Text', 'NNP'), ('State', 'NNP'), ('Unit-2', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('AES', 'NNP'), ('Structure', 'NNP'), ('The', 'DT'), ('first', 'JJ'), ('N-1', 'NNP'), ('rounds', 'NNS'), ('consist', 'VBP'), ('four', 'CD'), ('distinct', 'JJ'), ('transformation', 'NN'), ('functions', 'NNS'), ('.', '.')]

 (S
  (NP
    Data/NNP
    Units/NNP
    AES/NNP
    Unit-2/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Block/NNP State/NNP)
  &/CC
  (NP
    State/NNP
    Block/NNP
    Unit-2/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    Plain/NNP
    Text/NNP
    State/NNP
    Unit-2/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP AES/NNP Structure/NNP)
  (NP The/DT first/JJ N-1/NNP rounds/NNS)
  consist/VBP
  four/CD
  (NP distinct/JJ transformation/NN functions/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Data Units AES Unit-2 Darshan Institute Engineering', 'Technology ‹', '› Block State', 'State Block Unit-2 Darshan Institute Engineering', 'Technology ‹', '› Plain Text State Unit-2 Darshan Institute Engineering', 'Technology ‹', '› AES Structure', 'The first N-1 rounds', 'distinct transformation functions']

>> Named Entities are: 
 [('PERSON', 'Data'), ('PERSON', 'Units AES'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'State Block'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('Data', 'data'), ('Units', 'unit'), ('AES', 'ae'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Block', 'block'), ('State', 'state'), ('&', '&'), ('State', 'state'), ('Block', 'block'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plain', 'plain'), ('Text', 'text'), ('State', 'state'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('AES', 'ae'), ('Structure', 'structur'), ('The', 'the'), ('first', 'first'), ('N-1', 'n-1'), ('rounds', 'round'), ('consist', 'consist'), ('four', 'four'), ('distinct', 'distinct'), ('transformation', 'transform'), ('functions', 'function'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Data', 'data'), ('Units', 'unit'), ('AES', 'ae'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Block', 'block'), ('State', 'state'), ('&', '&'), ('State', 'state'), ('Block', 'block'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plain', 'plain'), ('Text', 'text'), ('State', 'state'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('AES', 'ae'), ('Structure', 'structur'), ('The', 'the'), ('first', 'first'), ('N-1', 'n-1'), ('rounds', 'round'), ('consist', 'consist'), ('four', 'four'), ('distinct', 'distinct'), ('transformation', 'transform'), ('functions', 'function'), ('.', '.')]

>> Lemmatization: 
 [('Data', 'Data'), ('Units', 'Units'), ('AES', 'AES'), ('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Block', 'Block'), ('State', 'State'), ('&', '&'), ('State', 'State'), ('Block', 'Block'), ('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plain', 'Plain'), ('Text', 'Text'), ('State', 'State'), ('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('AES', 'AES'), ('Structure', 'Structure'), ('The', 'The'), ('first', 'first'), ('N-1', 'N-1'), ('rounds', 'round'), ('consist', 'consist'), ('four', 'four'), ('distinct', 'distinct'), ('transformation', 'transformation'), ('functions', 'function'), ('.', '.')]



============================ Sentence 36 =============================

The 16 input bytes are substituted using an S-box SubBytes Each of the four rows of the matrix is shifted to the left ShiftRows Each column of four bytes is now transformed using a special mathematical function. 


>> Tokens are: 
 ['The', '16', 'input', 'bytes', 'substituted', 'using', 'S-box', 'SubBytes', 'Each', 'four', 'rows', 'matrix', 'shifted', 'left', 'ShiftRows', 'Each', 'column', 'four', 'bytes', 'transformed', 'using', 'special', 'mathematical', 'function', '.']

>> Bigrams are: 
 [('The', '16'), ('16', 'input'), ('input', 'bytes'), ('bytes', 'substituted'), ('substituted', 'using'), ('using', 'S-box'), ('S-box', 'SubBytes'), ('SubBytes', 'Each'), ('Each', 'four'), ('four', 'rows'), ('rows', 'matrix'), ('matrix', 'shifted'), ('shifted', 'left'), ('left', 'ShiftRows'), ('ShiftRows', 'Each'), ('Each', 'column'), ('column', 'four'), ('four', 'bytes'), ('bytes', 'transformed'), ('transformed', 'using'), ('using', 'special'), ('special', 'mathematical'), ('mathematical', 'function'), ('function', '.')]

>> Trigrams are: 
 [('The', '16', 'input'), ('16', 'input', 'bytes'), ('input', 'bytes', 'substituted'), ('bytes', 'substituted', 'using'), ('substituted', 'using', 'S-box'), ('using', 'S-box', 'SubBytes'), ('S-box', 'SubBytes', 'Each'), ('SubBytes', 'Each', 'four'), ('Each', 'four', 'rows'), ('four', 'rows', 'matrix'), ('rows', 'matrix', 'shifted'), ('matrix', 'shifted', 'left'), ('shifted', 'left', 'ShiftRows'), ('left', 'ShiftRows', 'Each'), ('ShiftRows', 'Each', 'column'), ('Each', 'column', 'four'), ('column', 'four', 'bytes'), ('four', 'bytes', 'transformed'), ('bytes', 'transformed', 'using'), ('transformed', 'using', 'special'), ('using', 'special', 'mathematical'), ('special', 'mathematical', 'function'), ('mathematical', 'function', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('16', 'CD'), ('input', 'NN'), ('bytes', 'NNS'), ('substituted', 'VBD'), ('using', 'VBG'), ('S-box', 'NNP'), ('SubBytes', 'NNP'), ('Each', 'DT'), ('four', 'CD'), ('rows', 'NNS'), ('matrix', 'RB'), ('shifted', 'VBD'), ('left', 'JJ'), ('ShiftRows', 'NNP'), ('Each', 'DT'), ('column', 'NN'), ('four', 'CD'), ('bytes', 'NNS'), ('transformed', 'VBD'), ('using', 'VBG'), ('special', 'JJ'), ('mathematical', 'JJ'), ('function', 'NN'), ('.', '.')]

 (S
  The/DT
  16/CD
  (NP input/NN bytes/NNS)
  substituted/VBD
  using/VBG
  (NP S-box/NNP SubBytes/NNP)
  Each/DT
  four/CD
  (NP rows/NNS)
  matrix/RB
  shifted/VBD
  (NP left/JJ ShiftRows/NNP)
  (NP Each/DT column/NN)
  four/CD
  (NP bytes/NNS)
  transformed/VBD
  using/VBG
  (NP special/JJ mathematical/JJ function/NN)
  ./.) 


>> Noun Phrases are: 
 ['input bytes', 'S-box SubBytes', 'rows', 'left ShiftRows', 'Each column', 'bytes', 'special mathematical function']

>> Named Entities are: 
 [('ORGANIZATION', 'ShiftRows Each')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('16', '16'), ('input', 'input'), ('bytes', 'byte'), ('substituted', 'substitut'), ('using', 'use'), ('S-box', 's-box'), ('SubBytes', 'subbyt'), ('Each', 'each'), ('four', 'four'), ('rows', 'row'), ('matrix', 'matrix'), ('shifted', 'shift'), ('left', 'left'), ('ShiftRows', 'shiftrow'), ('Each', 'each'), ('column', 'column'), ('four', 'four'), ('bytes', 'byte'), ('transformed', 'transform'), ('using', 'use'), ('special', 'special'), ('mathematical', 'mathemat'), ('function', 'function'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('16', '16'), ('input', 'input'), ('bytes', 'byte'), ('substituted', 'substitut'), ('using', 'use'), ('S-box', 's-box'), ('SubBytes', 'subbyt'), ('Each', 'each'), ('four', 'four'), ('rows', 'row'), ('matrix', 'matrix'), ('shifted', 'shift'), ('left', 'left'), ('ShiftRows', 'shiftrow'), ('Each', 'each'), ('column', 'column'), ('four', 'four'), ('bytes', 'byte'), ('transformed', 'transform'), ('using', 'use'), ('special', 'special'), ('mathematical', 'mathemat'), ('function', 'function'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('16', '16'), ('input', 'input'), ('bytes', 'byte'), ('substituted', 'substituted'), ('using', 'using'), ('S-box', 'S-box'), ('SubBytes', 'SubBytes'), ('Each', 'Each'), ('four', 'four'), ('rows', 'row'), ('matrix', 'matrix'), ('shifted', 'shifted'), ('left', 'left'), ('ShiftRows', 'ShiftRows'), ('Each', 'Each'), ('column', 'column'), ('four', 'four'), ('bytes', 'byte'), ('transformed', 'transformed'), ('using', 'using'), ('special', 'special'), ('mathematical', 'mathematical'), ('function', 'function'), ('.', '.')]



============================ Sentence 37 =============================

MixColumns The 16 bytes of the matrix are now considered as 128 bits and are XORed to the 128 bits of the round key. 


>> Tokens are: 
 ['MixColumns', 'The', '16', 'bytes', 'matrix', 'considered', '128', 'bits', 'XORed', '128', 'bits', 'round', 'key', '.']

>> Bigrams are: 
 [('MixColumns', 'The'), ('The', '16'), ('16', 'bytes'), ('bytes', 'matrix'), ('matrix', 'considered'), ('considered', '128'), ('128', 'bits'), ('bits', 'XORed'), ('XORed', '128'), ('128', 'bits'), ('bits', 'round'), ('round', 'key'), ('key', '.')]

>> Trigrams are: 
 [('MixColumns', 'The', '16'), ('The', '16', 'bytes'), ('16', 'bytes', 'matrix'), ('bytes', 'matrix', 'considered'), ('matrix', 'considered', '128'), ('considered', '128', 'bits'), ('128', 'bits', 'XORed'), ('bits', 'XORed', '128'), ('XORed', '128', 'bits'), ('128', 'bits', 'round'), ('bits', 'round', 'key'), ('round', 'key', '.')]

>> POS Tags are: 
 [('MixColumns', 'NNP'), ('The', 'DT'), ('16', 'CD'), ('bytes', 'NNS'), ('matrix', 'RB'), ('considered', 'VBD'), ('128', 'CD'), ('bits', 'NNS'), ('XORed', 'VBP'), ('128', 'CD'), ('bits', 'NNS'), ('round', 'VBN'), ('key', 'NN'), ('.', '.')]

 (S
  (NP MixColumns/NNP)
  The/DT
  16/CD
  (NP bytes/NNS)
  matrix/RB
  considered/VBD
  128/CD
  (NP bits/NNS)
  XORed/VBP
  128/CD
  (NP bits/NNS)
  round/VBN
  (NP key/NN)
  ./.) 


>> Noun Phrases are: 
 ['MixColumns', 'bytes', 'bits', 'bits', 'key']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('MixColumns', 'mixcolumn'), ('The', 'the'), ('16', '16'), ('bytes', 'byte'), ('matrix', 'matrix'), ('considered', 'consid'), ('128', '128'), ('bits', 'bit'), ('XORed', 'xore'), ('128', '128'), ('bits', 'bit'), ('round', 'round'), ('key', 'key'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('MixColumns', 'mixcolumn'), ('The', 'the'), ('16', '16'), ('bytes', 'byte'), ('matrix', 'matrix'), ('considered', 'consid'), ('128', '128'), ('bits', 'bit'), ('XORed', 'xore'), ('128', '128'), ('bits', 'bit'), ('round', 'round'), ('key', 'key'), ('.', '.')]

>> Lemmatization: 
 [('MixColumns', 'MixColumns'), ('The', 'The'), ('16', '16'), ('bytes', 'byte'), ('matrix', 'matrix'), ('considered', 'considered'), ('128', '128'), ('bits', 'bit'), ('XORed', 'XORed'), ('128', '128'), ('bits', 'bit'), ('round', 'round'), ('key', 'key'), ('.', '.')]



============================ Sentence 38 =============================

AddRoundKey  Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  SubByte Transformation The forward substitute byte transformation, called SubBytes, is a simple table lookup   Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  ShiftRows The first row of State is not altered. 


>> Tokens are: 
 ['AddRoundKey', 'Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'SubByte', 'Transformation', 'The', 'forward', 'substitute', 'byte', 'transformation', ',', 'called', 'SubBytes', ',', 'simple', 'table', 'lookup', 'Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'ShiftRows', 'The', 'first', 'row', 'State', 'altered', '.']

>> Bigrams are: 
 [('AddRoundKey', 'Unit-2'), ('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'SubByte'), ('SubByte', 'Transformation'), ('Transformation', 'The'), ('The', 'forward'), ('forward', 'substitute'), ('substitute', 'byte'), ('byte', 'transformation'), ('transformation', ','), (',', 'called'), ('called', 'SubBytes'), ('SubBytes', ','), (',', 'simple'), ('simple', 'table'), ('table', 'lookup'), ('lookup', 'Unit-2'), ('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'ShiftRows'), ('ShiftRows', 'The'), ('The', 'first'), ('first', 'row'), ('row', 'State'), ('State', 'altered'), ('altered', '.')]

>> Trigrams are: 
 [('AddRoundKey', 'Unit-2', 'Darshan'), ('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'SubByte'), ('›', 'SubByte', 'Transformation'), ('SubByte', 'Transformation', 'The'), ('Transformation', 'The', 'forward'), ('The', 'forward', 'substitute'), ('forward', 'substitute', 'byte'), ('substitute', 'byte', 'transformation'), ('byte', 'transformation', ','), ('transformation', ',', 'called'), (',', 'called', 'SubBytes'), ('called', 'SubBytes', ','), ('SubBytes', ',', 'simple'), (',', 'simple', 'table'), ('simple', 'table', 'lookup'), ('table', 'lookup', 'Unit-2'), ('lookup', 'Unit-2', 'Darshan'), ('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'ShiftRows'), ('›', 'ShiftRows', 'The'), ('ShiftRows', 'The', 'first'), ('The', 'first', 'row'), ('first', 'row', 'State'), ('row', 'State', 'altered'), ('State', 'altered', '.')]

>> POS Tags are: 
 [('AddRoundKey', 'NNP'), ('Unit-2', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('SubByte', 'NNP'), ('Transformation', 'NNP'), ('The', 'DT'), ('forward', 'RB'), ('substitute', 'NN'), ('byte', 'NN'), ('transformation', 'NN'), (',', ','), ('called', 'VBN'), ('SubBytes', 'NNS'), (',', ','), ('simple', 'JJ'), ('table', 'JJ'), ('lookup', 'JJ'), ('Unit-2', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NN'), ('ShiftRows', 'VBZ'), ('The', 'DT'), ('first', 'JJ'), ('row', 'NN'), ('State', 'NNP'), ('altered', 'VBD'), ('.', '.')]

 (S
  (NP
    AddRoundKey/NNP
    Unit-2/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP SubByte/NNP Transformation/NNP)
  The/DT
  forward/RB
  (NP substitute/NN byte/NN transformation/NN)
  ,/,
  called/VBN
  (NP SubBytes/NNS)
  ,/,
  (NP
    simple/JJ
    table/JJ
    lookup/JJ
    Unit-2/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NN)
  ShiftRows/VBZ
  (NP The/DT first/JJ row/NN State/NNP)
  altered/VBD
  ./.) 


>> Noun Phrases are: 
 ['AddRoundKey Unit-2 Darshan Institute Engineering', 'Technology ‹', '› SubByte Transformation', 'substitute byte transformation', 'SubBytes', 'simple table lookup Unit-2 Darshan Institute Engineering', 'Technology ‹', '›', 'The first row State']

>> Named Entities are: 
 [('ORGANIZATION', 'AddRoundKey'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'SubBytes'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'State')] 

>> Stemming using Porter Stemmer: 
 [('AddRoundKey', 'addroundkey'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('SubByte', 'subbyt'), ('Transformation', 'transform'), ('The', 'the'), ('forward', 'forward'), ('substitute', 'substitut'), ('byte', 'byte'), ('transformation', 'transform'), (',', ','), ('called', 'call'), ('SubBytes', 'subbyt'), (',', ','), ('simple', 'simpl'), ('table', 'tabl'), ('lookup', 'lookup'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('ShiftRows', 'shiftrow'), ('The', 'the'), ('first', 'first'), ('row', 'row'), ('State', 'state'), ('altered', 'alter'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('AddRoundKey', 'addroundkey'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('SubByte', 'subbyt'), ('Transformation', 'transform'), ('The', 'the'), ('forward', 'forward'), ('substitute', 'substitut'), ('byte', 'byte'), ('transformation', 'transform'), (',', ','), ('called', 'call'), ('SubBytes', 'subbyt'), (',', ','), ('simple', 'simpl'), ('table', 'tabl'), ('lookup', 'lookup'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('ShiftRows', 'shiftrow'), ('The', 'the'), ('first', 'first'), ('row', 'row'), ('State', 'state'), ('altered', 'alter'), ('.', '.')]

>> Lemmatization: 
 [('AddRoundKey', 'AddRoundKey'), ('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('SubByte', 'SubByte'), ('Transformation', 'Transformation'), ('The', 'The'), ('forward', 'forward'), ('substitute', 'substitute'), ('byte', 'byte'), ('transformation', 'transformation'), (',', ','), ('called', 'called'), ('SubBytes', 'SubBytes'), (',', ','), ('simple', 'simple'), ('table', 'table'), ('lookup', 'lookup'), ('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('ShiftRows', 'ShiftRows'), ('The', 'The'), ('first', 'first'), ('row', 'row'), ('State', 'State'), ('altered', 'altered'), ('.', '.')]



============================ Sentence 39 =============================

For the second row, a 1-byte circular left shift is performed. 


>> Tokens are: 
 ['For', 'second', 'row', ',', '1-byte', 'circular', 'left', 'shift', 'performed', '.']

>> Bigrams are: 
 [('For', 'second'), ('second', 'row'), ('row', ','), (',', '1-byte'), ('1-byte', 'circular'), ('circular', 'left'), ('left', 'shift'), ('shift', 'performed'), ('performed', '.')]

>> Trigrams are: 
 [('For', 'second', 'row'), ('second', 'row', ','), ('row', ',', '1-byte'), (',', '1-byte', 'circular'), ('1-byte', 'circular', 'left'), ('circular', 'left', 'shift'), ('left', 'shift', 'performed'), ('shift', 'performed', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('second', 'JJ'), ('row', 'NN'), (',', ','), ('1-byte', 'JJ'), ('circular', 'NN'), ('left', 'VBD'), ('shift', 'NN'), ('performed', 'VBN'), ('.', '.')]

 (S
  For/IN
  (NP second/JJ row/NN)
  ,/,
  (NP 1-byte/JJ circular/NN)
  left/VBD
  (NP shift/NN)
  performed/VBN
  ./.) 


>> Noun Phrases are: 
 ['second row', '1-byte circular', 'shift']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('second', 'second'), ('row', 'row'), (',', ','), ('1-byte', '1-byte'), ('circular', 'circular'), ('left', 'left'), ('shift', 'shift'), ('performed', 'perform'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('second', 'second'), ('row', 'row'), (',', ','), ('1-byte', '1-byte'), ('circular', 'circular'), ('left', 'left'), ('shift', 'shift'), ('performed', 'perform'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('second', 'second'), ('row', 'row'), (',', ','), ('1-byte', '1-byte'), ('circular', 'circular'), ('left', 'left'), ('shift', 'shift'), ('performed', 'performed'), ('.', '.')]



============================ Sentence 40 =============================

For the third row, a 2-byte circular left shift is performed. 


>> Tokens are: 
 ['For', 'third', 'row', ',', '2-byte', 'circular', 'left', 'shift', 'performed', '.']

>> Bigrams are: 
 [('For', 'third'), ('third', 'row'), ('row', ','), (',', '2-byte'), ('2-byte', 'circular'), ('circular', 'left'), ('left', 'shift'), ('shift', 'performed'), ('performed', '.')]

>> Trigrams are: 
 [('For', 'third', 'row'), ('third', 'row', ','), ('row', ',', '2-byte'), (',', '2-byte', 'circular'), ('2-byte', 'circular', 'left'), ('circular', 'left', 'shift'), ('left', 'shift', 'performed'), ('shift', 'performed', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('third', 'JJ'), ('row', 'NN'), (',', ','), ('2-byte', 'JJ'), ('circular', 'NN'), ('left', 'VBD'), ('shift', 'NN'), ('performed', 'VBN'), ('.', '.')]

 (S
  For/IN
  (NP third/JJ row/NN)
  ,/,
  (NP 2-byte/JJ circular/NN)
  left/VBD
  (NP shift/NN)
  performed/VBN
  ./.) 


>> Noun Phrases are: 
 ['third row', '2-byte circular', 'shift']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('third', 'third'), ('row', 'row'), (',', ','), ('2-byte', '2-byte'), ('circular', 'circular'), ('left', 'left'), ('shift', 'shift'), ('performed', 'perform'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('third', 'third'), ('row', 'row'), (',', ','), ('2-byte', '2-byte'), ('circular', 'circular'), ('left', 'left'), ('shift', 'shift'), ('performed', 'perform'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('third', 'third'), ('row', 'row'), (',', ','), ('2-byte', '2-byte'), ('circular', 'circular'), ('left', 'left'), ('shift', 'shift'), ('performed', 'performed'), ('.', '.')]



============================ Sentence 41 =============================

For the fourth row, a 3-byte circular left shift is performed. 


>> Tokens are: 
 ['For', 'fourth', 'row', ',', '3-byte', 'circular', 'left', 'shift', 'performed', '.']

>> Bigrams are: 
 [('For', 'fourth'), ('fourth', 'row'), ('row', ','), (',', '3-byte'), ('3-byte', 'circular'), ('circular', 'left'), ('left', 'shift'), ('shift', 'performed'), ('performed', '.')]

>> Trigrams are: 
 [('For', 'fourth', 'row'), ('fourth', 'row', ','), ('row', ',', '3-byte'), (',', '3-byte', 'circular'), ('3-byte', 'circular', 'left'), ('circular', 'left', 'shift'), ('left', 'shift', 'performed'), ('shift', 'performed', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('fourth', 'JJ'), ('row', 'NN'), (',', ','), ('3-byte', 'JJ'), ('circular', 'NN'), ('left', 'VBD'), ('shift', 'NN'), ('performed', 'VBN'), ('.', '.')]

 (S
  For/IN
  (NP fourth/JJ row/NN)
  ,/,
  (NP 3-byte/JJ circular/NN)
  left/VBD
  (NP shift/NN)
  performed/VBN
  ./.) 


>> Noun Phrases are: 
 ['fourth row', '3-byte circular', 'shift']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('fourth', 'fourth'), ('row', 'row'), (',', ','), ('3-byte', '3-byte'), ('circular', 'circular'), ('left', 'left'), ('shift', 'shift'), ('performed', 'perform'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('fourth', 'fourth'), ('row', 'row'), (',', ','), ('3-byte', '3-byte'), ('circular', 'circular'), ('left', 'left'), ('shift', 'shift'), ('performed', 'perform'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('fourth', 'fourth'), ('row', 'row'), (',', ','), ('3-byte', '3-byte'), ('circular', 'circular'), ('left', 'left'), ('shift', 'shift'), ('performed', 'performed'), ('.', '.')]



============================ Sentence 42 =============================

Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  MixColumns Each byte of a column is mapped into a new value that is a function of all four bytes in that column. 


>> Tokens are: 
 ['Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'MixColumns', 'Each', 'byte', 'column', 'mapped', 'new', 'value', 'function', 'four', 'bytes', 'column', '.']

>> Bigrams are: 
 [('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'MixColumns'), ('MixColumns', 'Each'), ('Each', 'byte'), ('byte', 'column'), ('column', 'mapped'), ('mapped', 'new'), ('new', 'value'), ('value', 'function'), ('function', 'four'), ('four', 'bytes'), ('bytes', 'column'), ('column', '.')]

>> Trigrams are: 
 [('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'MixColumns'), ('›', 'MixColumns', 'Each'), ('MixColumns', 'Each', 'byte'), ('Each', 'byte', 'column'), ('byte', 'column', 'mapped'), ('column', 'mapped', 'new'), ('mapped', 'new', 'value'), ('new', 'value', 'function'), ('value', 'function', 'four'), ('function', 'four', 'bytes'), ('four', 'bytes', 'column'), ('bytes', 'column', '.')]

>> POS Tags are: 
 [('Unit-2', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('MixColumns', 'NNP'), ('Each', 'DT'), ('byte', 'NN'), ('column', 'NN'), ('mapped', 'VBD'), ('new', 'JJ'), ('value', 'NN'), ('function', 'NN'), ('four', 'CD'), ('bytes', 'NNS'), ('column', 'NN'), ('.', '.')]

 (S
  (NP Unit-2/NNP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP MixColumns/NNP)
  (NP Each/DT byte/NN column/NN)
  mapped/VBD
  (NP new/JJ value/NN function/NN)
  four/CD
  (NP bytes/NNS column/NN)
  ./.) 


>> Noun Phrases are: 
 ['Unit-2 Darshan Institute Engineering', 'Technology ‹', '› MixColumns', 'Each byte column', 'new value function', 'bytes column']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('MixColumns', 'mixcolumn'), ('Each', 'each'), ('byte', 'byte'), ('column', 'column'), ('mapped', 'map'), ('new', 'new'), ('value', 'valu'), ('function', 'function'), ('four', 'four'), ('bytes', 'byte'), ('column', 'column'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('MixColumns', 'mixcolumn'), ('Each', 'each'), ('byte', 'byte'), ('column', 'column'), ('mapped', 'map'), ('new', 'new'), ('value', 'valu'), ('function', 'function'), ('four', 'four'), ('bytes', 'byte'), ('column', 'column'), ('.', '.')]

>> Lemmatization: 
 [('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('MixColumns', 'MixColumns'), ('Each', 'Each'), ('byte', 'byte'), ('column', 'column'), ('mapped', 'mapped'), ('new', 'new'), ('value', 'value'), ('function', 'function'), ('four', 'four'), ('bytes', 'byte'), ('column', 'column'), ('.', '.')]



============================ Sentence 43 =============================

Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  AddRoundKey In the forward add round key transformation, the 128 bits of State are bitwise XORed with the 128 bits of the round key. 


>> Tokens are: 
 ['Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'AddRoundKey', 'In', 'forward', 'add', 'round', 'key', 'transformation', ',', '128', 'bits', 'State', 'bitwise', 'XORed', '128', 'bits', 'round', 'key', '.']

>> Bigrams are: 
 [('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'AddRoundKey'), ('AddRoundKey', 'In'), ('In', 'forward'), ('forward', 'add'), ('add', 'round'), ('round', 'key'), ('key', 'transformation'), ('transformation', ','), (',', '128'), ('128', 'bits'), ('bits', 'State'), ('State', 'bitwise'), ('bitwise', 'XORed'), ('XORed', '128'), ('128', 'bits'), ('bits', 'round'), ('round', 'key'), ('key', '.')]

>> Trigrams are: 
 [('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'AddRoundKey'), ('›', 'AddRoundKey', 'In'), ('AddRoundKey', 'In', 'forward'), ('In', 'forward', 'add'), ('forward', 'add', 'round'), ('add', 'round', 'key'), ('round', 'key', 'transformation'), ('key', 'transformation', ','), ('transformation', ',', '128'), (',', '128', 'bits'), ('128', 'bits', 'State'), ('bits', 'State', 'bitwise'), ('State', 'bitwise', 'XORed'), ('bitwise', 'XORed', '128'), ('XORed', '128', 'bits'), ('128', 'bits', 'round'), ('bits', 'round', 'key'), ('round', 'key', '.')]

>> POS Tags are: 
 [('Unit-2', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('AddRoundKey', 'NNP'), ('In', 'IN'), ('forward', 'RB'), ('add', 'VB'), ('round', 'NN'), ('key', 'JJ'), ('transformation', 'NN'), (',', ','), ('128', 'CD'), ('bits', 'NNS'), ('State', 'NNP'), ('bitwise', 'NN'), ('XORed', 'NNP'), ('128', 'CD'), ('bits', 'NNS'), ('round', 'VBN'), ('key', 'NN'), ('.', '.')]

 (S
  (NP Unit-2/NNP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP AddRoundKey/NNP)
  In/IN
  forward/RB
  add/VB
  (NP round/NN)
  (NP key/JJ transformation/NN)
  ,/,
  128/CD
  (NP bits/NNS State/NNP bitwise/NN XORed/NNP)
  128/CD
  (NP bits/NNS)
  round/VBN
  (NP key/NN)
  ./.) 


>> Noun Phrases are: 
 ['Unit-2 Darshan Institute Engineering', 'Technology ‹', '› AddRoundKey', 'round', 'key transformation', 'bits State bitwise XORed', 'bits', 'key']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('AddRoundKey', 'addroundkey'), ('In', 'in'), ('forward', 'forward'), ('add', 'add'), ('round', 'round'), ('key', 'key'), ('transformation', 'transform'), (',', ','), ('128', '128'), ('bits', 'bit'), ('State', 'state'), ('bitwise', 'bitwis'), ('XORed', 'xore'), ('128', '128'), ('bits', 'bit'), ('round', 'round'), ('key', 'key'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('AddRoundKey', 'addroundkey'), ('In', 'in'), ('forward', 'forward'), ('add', 'add'), ('round', 'round'), ('key', 'key'), ('transformation', 'transform'), (',', ','), ('128', '128'), ('bits', 'bit'), ('State', 'state'), ('bitwise', 'bitwis'), ('XORed', 'xore'), ('128', '128'), ('bits', 'bit'), ('round', 'round'), ('key', 'key'), ('.', '.')]

>> Lemmatization: 
 [('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('AddRoundKey', 'AddRoundKey'), ('In', 'In'), ('forward', 'forward'), ('add', 'add'), ('round', 'round'), ('key', 'key'), ('transformation', 'transformation'), (',', ','), ('128', '128'), ('bits', 'bit'), ('State', 'State'), ('bitwise', 'bitwise'), ('XORed', 'XORed'), ('128', '128'), ('bits', 'bit'), ('round', 'round'), ('key', 'key'), ('.', '.')]



============================ Sentence 44 =============================

State Round Key  Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  AES Overall Structure   Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›   The AES key expansion algorithm takes as input a four-word (16-byte) key and produces a linear array of 44 words (176 bytes). 


>> Tokens are: 
 ['State', 'Round', 'Key', 'Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'AES', 'Overall', 'Structure', 'Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'The', 'AES', 'key', 'expansion', 'algorithm', 'takes', 'input', 'four-word', '(', '16-byte', ')', 'key', 'produces', 'linear', 'array', '44', 'words', '(', '176', 'bytes', ')', '.']

>> Bigrams are: 
 [('State', 'Round'), ('Round', 'Key'), ('Key', 'Unit-2'), ('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'AES'), ('AES', 'Overall'), ('Overall', 'Structure'), ('Structure', 'Unit-2'), ('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'The'), ('The', 'AES'), ('AES', 'key'), ('key', 'expansion'), ('expansion', 'algorithm'), ('algorithm', 'takes'), ('takes', 'input'), ('input', 'four-word'), ('four-word', '('), ('(', '16-byte'), ('16-byte', ')'), (')', 'key'), ('key', 'produces'), ('produces', 'linear'), ('linear', 'array'), ('array', '44'), ('44', 'words'), ('words', '('), ('(', '176'), ('176', 'bytes'), ('bytes', ')'), (')', '.')]

>> Trigrams are: 
 [('State', 'Round', 'Key'), ('Round', 'Key', 'Unit-2'), ('Key', 'Unit-2', 'Darshan'), ('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'AES'), ('›', 'AES', 'Overall'), ('AES', 'Overall', 'Structure'), ('Overall', 'Structure', 'Unit-2'), ('Structure', 'Unit-2', 'Darshan'), ('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'The'), ('›', 'The', 'AES'), ('The', 'AES', 'key'), ('AES', 'key', 'expansion'), ('key', 'expansion', 'algorithm'), ('expansion', 'algorithm', 'takes'), ('algorithm', 'takes', 'input'), ('takes', 'input', 'four-word'), ('input', 'four-word', '('), ('four-word', '(', '16-byte'), ('(', '16-byte', ')'), ('16-byte', ')', 'key'), (')', 'key', 'produces'), ('key', 'produces', 'linear'), ('produces', 'linear', 'array'), ('linear', 'array', '44'), ('array', '44', 'words'), ('44', 'words', '('), ('words', '(', '176'), ('(', '176', 'bytes'), ('176', 'bytes', ')'), ('bytes', ')', '.')]

>> POS Tags are: 
 [('State', 'NN'), ('Round', 'NNP'), ('Key', 'NNP'), ('Unit-2', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('AES', 'NNP'), ('Overall', 'NNP'), ('Structure', 'NNP'), ('Unit-2', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'VBZ'), ('The', 'DT'), ('AES', 'NNP'), ('key', 'JJ'), ('expansion', 'NN'), ('algorithm', 'NN'), ('takes', 'VBZ'), ('input', 'JJ'), ('four-word', 'JJ'), ('(', '('), ('16-byte', 'JJ'), (')', ')'), ('key', 'JJ'), ('produces', 'VBZ'), ('linear', 'JJ'), ('array', 'NN'), ('44', 'CD'), ('words', 'NNS'), ('(', '('), ('176', 'CD'), ('bytes', 'NNS'), (')', ')'), ('.', '.')]

 (S
  (NP
    State/NN
    Round/NNP
    Key/NNP
    Unit-2/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    AES/NNP
    Overall/NNP
    Structure/NNP
    Unit-2/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  ›/VBZ
  (NP The/DT AES/NNP)
  (NP key/JJ expansion/NN algorithm/NN)
  takes/VBZ
  input/JJ
  four-word/JJ
  (/(
  16-byte/JJ
  )/)
  key/JJ
  produces/VBZ
  (NP linear/JJ array/NN)
  44/CD
  (NP words/NNS)
  (/(
  176/CD
  (NP bytes/NNS)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['State Round Key Unit-2 Darshan Institute Engineering', 'Technology ‹', '› AES Overall Structure Unit-2 Darshan Institute Engineering', 'Technology ‹', 'The AES', 'key expansion algorithm', 'linear array', 'words', 'bytes']

>> Named Entities are: 
 [('PERSON', 'Round Key'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'AES')] 

>> Stemming using Porter Stemmer: 
 [('State', 'state'), ('Round', 'round'), ('Key', 'key'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('AES', 'ae'), ('Overall', 'overal'), ('Structure', 'structur'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('The', 'the'), ('AES', 'ae'), ('key', 'key'), ('expansion', 'expans'), ('algorithm', 'algorithm'), ('takes', 'take'), ('input', 'input'), ('four-word', 'four-word'), ('(', '('), ('16-byte', '16-byte'), (')', ')'), ('key', 'key'), ('produces', 'produc'), ('linear', 'linear'), ('array', 'array'), ('44', '44'), ('words', 'word'), ('(', '('), ('176', '176'), ('bytes', 'byte'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('State', 'state'), ('Round', 'round'), ('Key', 'key'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('AES', 'ae'), ('Overall', 'overal'), ('Structure', 'structur'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('The', 'the'), ('AES', 'ae'), ('key', 'key'), ('expansion', 'expans'), ('algorithm', 'algorithm'), ('takes', 'take'), ('input', 'input'), ('four-word', 'four-word'), ('(', '('), ('16-byte', '16-byte'), (')', ')'), ('key', 'key'), ('produces', 'produc'), ('linear', 'linear'), ('array', 'array'), ('44', '44'), ('words', 'word'), ('(', '('), ('176', '176'), ('bytes', 'byte'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('State', 'State'), ('Round', 'Round'), ('Key', 'Key'), ('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('AES', 'AES'), ('Overall', 'Overall'), ('Structure', 'Structure'), ('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('The', 'The'), ('AES', 'AES'), ('key', 'key'), ('expansion', 'expansion'), ('algorithm', 'algorithm'), ('takes', 'take'), ('input', 'input'), ('four-word', 'four-word'), ('(', '('), ('16-byte', '16-byte'), (')', ')'), ('key', 'key'), ('produces', 'produce'), ('linear', 'linear'), ('array', 'array'), ('44', '44'), ('words', 'word'), ('(', '('), ('176', '176'), ('bytes', 'byte'), (')', ')'), ('.', '.')]



============================ Sentence 45 =============================

Each added word w[i] depends on the immediately preceding word, w[i - 1]. 


>> Tokens are: 
 ['Each', 'added', 'word', 'w', '[', ']', 'depends', 'immediately', 'preceding', 'word', ',', 'w', '[', '-', '1', ']', '.']

>> Bigrams are: 
 [('Each', 'added'), ('added', 'word'), ('word', 'w'), ('w', '['), ('[', ']'), (']', 'depends'), ('depends', 'immediately'), ('immediately', 'preceding'), ('preceding', 'word'), ('word', ','), (',', 'w'), ('w', '['), ('[', '-'), ('-', '1'), ('1', ']'), (']', '.')]

>> Trigrams are: 
 [('Each', 'added', 'word'), ('added', 'word', 'w'), ('word', 'w', '['), ('w', '[', ']'), ('[', ']', 'depends'), (']', 'depends', 'immediately'), ('depends', 'immediately', 'preceding'), ('immediately', 'preceding', 'word'), ('preceding', 'word', ','), ('word', ',', 'w'), (',', 'w', '['), ('w', '[', '-'), ('[', '-', '1'), ('-', '1', ']'), ('1', ']', '.')]

>> POS Tags are: 
 [('Each', 'DT'), ('added', 'VBD'), ('word', 'NN'), ('w', 'NN'), ('[', 'NNP'), (']', 'NNP'), ('depends', 'VBZ'), ('immediately', 'RB'), ('preceding', 'JJ'), ('word', 'NN'), (',', ','), ('w', 'WP'), ('[', 'SYM'), ('-', ':'), ('1', 'CD'), (']', 'NN'), ('.', '.')]

 (S
  Each/DT
  added/VBD
  (NP word/NN w/NN [/NNP ]/NNP)
  depends/VBZ
  immediately/RB
  (NP preceding/JJ word/NN)
  ,/,
  w/WP
  [/SYM
  -/:
  1/CD
  (NP ]/NN)
  ./.) 


>> Noun Phrases are: 
 ['word w [ ]', 'preceding word', ']']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Each', 'each'), ('added', 'ad'), ('word', 'word'), ('w', 'w'), ('[', '['), (']', ']'), ('depends', 'depend'), ('immediately', 'immedi'), ('preceding', 'preced'), ('word', 'word'), (',', ','), ('w', 'w'), ('[', '['), ('-', '-'), ('1', '1'), (']', ']'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Each', 'each'), ('added', 'ad'), ('word', 'word'), ('w', 'w'), ('[', '['), (']', ']'), ('depends', 'depend'), ('immediately', 'immedi'), ('preceding', 'preced'), ('word', 'word'), (',', ','), ('w', 'w'), ('[', '['), ('-', '-'), ('1', '1'), (']', ']'), ('.', '.')]

>> Lemmatization: 
 [('Each', 'Each'), ('added', 'added'), ('word', 'word'), ('w', 'w'), ('[', '['), (']', ']'), ('depends', 'depends'), ('immediately', 'immediately'), ('preceding', 'preceding'), ('word', 'word'), (',', ','), ('w', 'w'), ('[', '['), ('-', '-'), ('1', '1'), (']', ']'), ('.', '.')]



============================ Sentence 46 =============================

In three out of four cases, a simple XOR is used. 


>> Tokens are: 
 ['In', 'three', 'four', 'cases', ',', 'simple', 'XOR', 'used', '.']

>> Bigrams are: 
 [('In', 'three'), ('three', 'four'), ('four', 'cases'), ('cases', ','), (',', 'simple'), ('simple', 'XOR'), ('XOR', 'used'), ('used', '.')]

>> Trigrams are: 
 [('In', 'three', 'four'), ('three', 'four', 'cases'), ('four', 'cases', ','), ('cases', ',', 'simple'), (',', 'simple', 'XOR'), ('simple', 'XOR', 'used'), ('XOR', 'used', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('three', 'CD'), ('four', 'CD'), ('cases', 'NNS'), (',', ','), ('simple', 'JJ'), ('XOR', 'NNP'), ('used', 'VBD'), ('.', '.')]

 (S
  In/IN
  three/CD
  four/CD
  (NP cases/NNS)
  ,/,
  (NP simple/JJ XOR/NNP)
  used/VBD
  ./.) 


>> Noun Phrases are: 
 ['cases', 'simple XOR']

>> Named Entities are: 
 [('ORGANIZATION', 'XOR')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('three', 'three'), ('four', 'four'), ('cases', 'case'), (',', ','), ('simple', 'simpl'), ('XOR', 'xor'), ('used', 'use'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('three', 'three'), ('four', 'four'), ('cases', 'case'), (',', ','), ('simple', 'simpl'), ('XOR', 'xor'), ('used', 'use'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('three', 'three'), ('four', 'four'), ('cases', 'case'), (',', ','), ('simple', 'simple'), ('XOR', 'XOR'), ('used', 'used'), ('.', '.')]



============================ Sentence 47 =============================

AES Key Expansion   Key Expansion Example     Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#› 


>> Tokens are: 
 ['AES', 'Key', 'Expansion', 'Key', 'Expansion', 'Example', 'Unit-2', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›']

>> Bigrams are: 
 [('AES', 'Key'), ('Key', 'Expansion'), ('Expansion', 'Key'), ('Key', 'Expansion'), ('Expansion', 'Example'), ('Example', 'Unit-2'), ('Unit-2', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›')]

>> Trigrams are: 
 [('AES', 'Key', 'Expansion'), ('Key', 'Expansion', 'Key'), ('Expansion', 'Key', 'Expansion'), ('Key', 'Expansion', 'Example'), ('Expansion', 'Example', 'Unit-2'), ('Example', 'Unit-2', 'Darshan'), ('Unit-2', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›')]

>> POS Tags are: 
 [('AES', 'NNP'), ('Key', 'NNP'), ('Expansion', 'NNP'), ('Key', 'NNP'), ('Expansion', 'NNP'), ('Example', 'NNP'), ('Unit-2', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NN')]

 (S
  (NP
    AES/NNP
    Key/NNP
    Expansion/NNP
    Key/NNP
    Expansion/NNP
    Example/NNP
    Unit-2/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NN)) 


>> Noun Phrases are: 
 ['AES Key Expansion Key Expansion Example Unit-2 Darshan Institute Engineering', 'Technology ‹', '›']

>> Named Entities are: 
 [('ORGANIZATION', 'AES Key'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('AES', 'ae'), ('Key', 'key'), ('Expansion', 'expans'), ('Key', 'key'), ('Expansion', 'expans'), ('Example', 'exampl'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›')]

>> Stemming using Snowball Stemmer: 
 [('AES', 'ae'), ('Key', 'key'), ('Expansion', 'expans'), ('Key', 'key'), ('Expansion', 'expans'), ('Example', 'exampl'), ('Unit-2', 'unit-2'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›')]

>> Lemmatization: 
 [('AES', 'AES'), ('Key', 'Key'), ('Expansion', 'Expansion'), ('Key', 'Key'), ('Expansion', 'Expansion'), ('Example', 'Example'), ('Unit-2', 'Unit-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›')]

