				 *** Text Processing using Spacy *** 


============================ Sentence 1 =============================

A Very Brief Introduction to Machine Learning With Applications to Communication Systems  Osvaldo Simeone, Fellow, IEEE   


>> Tokens are: 
[Brief, Introduction, Machine, Learning, Applications, Communication, Systems,  , Osvaldo, Simeone, ,, Fellow, ,, IEEE,  ] 

>> PoS Tags are: 
[('Brief', 'ADJ'), ('Introduction', 'NOUN'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('Applications', 'PROPN'), ('Communication', 'PROPN'), ('Systems', 'PROPN'), (' ', 'SPACE'), ('Osvaldo', 'PROPN'), ('Simeone', 'PROPN'), (',', 'PUNCT'), ('Fellow', 'PROPN'), (',', 'PUNCT'), ('IEEE', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Brief', 'amod'), ('Introduction', 'ROOT'), ('Machine', 'compound'), ('Learning', 'pobj'), ('Applications', 'pobj'), ('Communication', 'compound'), ('Systems', 'pobj'), (' ', 'prep'), ('Osvaldo', 'compound'), ('Simeone', 'appos'), (',', 'punct'), ('Fellow', 'conj'), (',', 'punct'), ('IEEE', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[Brief, Introduction], [Introduction, Machine], [Machine, Learning], [Learning, Applications], [Applications, Communication], [Communication, Systems], [Systems,  ], [ , Osvaldo], [Osvaldo, Simeone], [Simeone, ,], [,, Fellow], [Fellow, ,], [,, IEEE], [IEEE,  ]]

>> Trigrams: 
[[Brief, Introduction, Machine], [Introduction, Machine, Learning], [Machine, Learning, Applications], [Learning, Applications, Communication], [Applications, Communication, Systems], [Communication, Systems,  ], [Systems,  , Osvaldo], [ , Osvaldo, Simeone], [Osvaldo, Simeone, ,], [Simeone, ,, Fellow], [,, Fellow, ,], [Fellow, ,, IEEE], [,, IEEE,  ]]

>> Noun Phrases are: 
[A Very Brief Introduction, Machine Learning, Applications, Communication Systems, Osvaldo Simeone, Fellow, IEEE]

>> Named Entities are: 
[('Osvaldo Simeone', 'PERSON')]


============================ Sentence 2 =============================

Abstract—Given the unprecedented availability of data and computing resources, there is widespread renewed interest in applying data-driven machine learning methods to problems for which the development of conventional engineering solutions is challenged by modelling or al- gorithmic deficiencies. 


>> Tokens are: 
[Abstract, —, Given, unprecedented, availability, data, computing, resources, ,, widespread, renewed, interest, applying, data, -, driven, machine, learning, methods, problems, development, conventional, engineering, solutions, challenged, modelling, al-, gorithmic, deficiencies, .] 

>> PoS Tags are: 
[('Abstract', 'PROPN'), ('—', 'PUNCT'), ('Given', 'VERB'), ('unprecedented', 'ADJ'), ('availability', 'NOUN'), ('data', 'NOUN'), ('computing', 'NOUN'), ('resources', 'NOUN'), (',', 'PUNCT'), ('widespread', 'ADJ'), ('renewed', 'VERB'), ('interest', 'NOUN'), ('applying', 'VERB'), ('data', 'NOUN'), ('-', 'PUNCT'), ('driven', 'VERB'), ('machine', 'NOUN'), ('learning', 'VERB'), ('methods', 'NOUN'), ('problems', 'NOUN'), ('development', 'NOUN'), ('conventional', 'ADJ'), ('engineering', 'NOUN'), ('solutions', 'NOUN'), ('challenged', 'VERB'), ('modelling', 'VERB'), ('al-', 'X'), ('gorithmic', 'ADJ'), ('deficiencies', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Abstract', 'intj'), ('—', 'punct'), ('Given', 'prep'), ('unprecedented', 'amod'), ('availability', 'pobj'), ('data', 'pobj'), ('computing', 'conj'), ('resources', 'pobj'), (',', 'punct'), ('widespread', 'advmod'), ('renewed', 'amod'), ('interest', 'attr'), ('applying', 'pcomp'), ('data', 'npadvmod'), ('-', 'punct'), ('driven', 'amod'), ('machine', 'compound'), ('learning', 'compound'), ('methods', 'dobj'), ('problems', 'pobj'), ('development', 'nsubjpass'), ('conventional', 'amod'), ('engineering', 'compound'), ('solutions', 'pobj'), ('challenged', 'relcl'), ('modelling', 'pcomp'), ('al-', 'advmod'), ('gorithmic', 'amod'), ('deficiencies', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Abstract, —], [—, Given], [Given, unprecedented], [unprecedented, availability], [availability, data], [data, computing], [computing, resources], [resources, ,], [,, widespread], [widespread, renewed], [renewed, interest], [interest, applying], [applying, data], [data, -], [-, driven], [driven, machine], [machine, learning], [learning, methods], [methods, problems], [problems, development], [development, conventional], [conventional, engineering], [engineering, solutions], [solutions, challenged], [challenged, modelling], [modelling, al-], [al-, gorithmic], [gorithmic, deficiencies], [deficiencies, .]]

>> Trigrams: 
[[Abstract, —, Given], [—, Given, unprecedented], [Given, unprecedented, availability], [unprecedented, availability, data], [availability, data, computing], [data, computing, resources], [computing, resources, ,], [resources, ,, widespread], [,, widespread, renewed], [widespread, renewed, interest], [renewed, interest, applying], [interest, applying, data], [applying, data, -], [data, -, driven], [-, driven, machine], [driven, machine, learning], [machine, learning, methods], [learning, methods, problems], [methods, problems, development], [problems, development, conventional], [development, conventional, engineering], [conventional, engineering, solutions], [engineering, solutions, challenged], [solutions, challenged, modelling], [challenged, modelling, al-], [modelling, al-, gorithmic], [al-, gorithmic, deficiencies], [gorithmic, deficiencies, .]]

>> Noun Phrases are: 
[the unprecedented availability, data, computing, resources, widespread renewed interest, data-driven machine learning methods, problems, the development, conventional engineering solutions, al- gorithmic deficiencies]

>> Named Entities are: 
[]


============================ Sentence 3 =============================

This tutorial-style paper starts by addressing the questions of why and when such techniques can be useful. 


>> Tokens are: 
[tutorial, -, style, paper, starts, addressing, questions, techniques, useful, .] 

>> PoS Tags are: 
[('tutorial', 'ADJ'), ('-', 'PUNCT'), ('style', 'NOUN'), ('paper', 'NOUN'), ('starts', 'NOUN'), ('addressing', 'VERB'), ('questions', 'NOUN'), ('techniques', 'NOUN'), ('useful', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('tutorial', 'amod'), ('-', 'punct'), ('style', 'compound'), ('paper', 'nsubj'), ('starts', 'ROOT'), ('addressing', 'pcomp'), ('questions', 'dobj'), ('techniques', 'nsubj'), ('useful', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[tutorial, -], [-, style], [style, paper], [paper, starts], [starts, addressing], [addressing, questions], [questions, techniques], [techniques, useful], [useful, .]]

>> Trigrams: 
[[tutorial, -, style], [-, style, paper], [style, paper, starts], [paper, starts, addressing], [starts, addressing, questions], [addressing, questions, techniques], [questions, techniques, useful], [techniques, useful, .]]

>> Noun Phrases are: 
[This tutorial-style paper, the questions, such techniques]

>> Named Entities are: 
[]


============================ Sentence 4 =============================

It then provides a high-level introduction to the basics of supervised and unsupervised learning. 


>> Tokens are: 
[provides, high, -, level, introduction, basics, supervised, unsupervised, learning, .] 

>> PoS Tags are: 
[('provides', 'VERB'), ('high', 'ADJ'), ('-', 'PUNCT'), ('level', 'NOUN'), ('introduction', 'NOUN'), ('basics', 'NOUN'), ('supervised', 'ADJ'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('provides', 'ROOT'), ('high', 'amod'), ('-', 'punct'), ('level', 'compound'), ('introduction', 'dobj'), ('basics', 'pobj'), ('supervised', 'amod'), ('unsupervised', 'conj'), ('learning', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[provides, high], [high, -], [-, level], [level, introduction], [introduction, basics], [basics, supervised], [supervised, unsupervised], [unsupervised, learning], [learning, .]]

>> Trigrams: 
[[provides, high, -], [high, -, level], [-, level, introduction], [level, introduction, basics], [introduction, basics, supervised], [basics, supervised, unsupervised], [supervised, unsupervised, learning], [unsupervised, learning, .]]

>> Noun Phrases are: 
[It, a high-level introduction, the basics, supervised and unsupervised learning]

>> Named Entities are: 
[]


============================ Sentence 5 =============================

For both supervised and unsupervised learning, exemplifying applications to communication networks are discussed by distinguishing tasks carried out at the edge and at the cloud segments of the network at different layers of the protocol stack, with an emphasis on the physical layer. 


>> Tokens are: 
[supervised, unsupervised, learning, ,, exemplifying, applications, communication, networks, discussed, distinguishing, tasks, carried, edge, cloud, segments, network, different, layers, protocol, stack, ,, emphasis, physical, layer, .] 

>> PoS Tags are: 
[('supervised', 'ADJ'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('exemplifying', 'VERB'), ('applications', 'NOUN'), ('communication', 'NOUN'), ('networks', 'NOUN'), ('discussed', 'VERB'), ('distinguishing', 'VERB'), ('tasks', 'NOUN'), ('carried', 'VERB'), ('edge', 'NOUN'), ('cloud', 'ADJ'), ('segments', 'NOUN'), ('network', 'NOUN'), ('different', 'ADJ'), ('layers', 'NOUN'), ('protocol', 'NOUN'), ('stack', 'NOUN'), (',', 'PUNCT'), ('emphasis', 'NOUN'), ('physical', 'ADJ'), ('layer', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('supervised', 'amod'), ('unsupervised', 'conj'), ('learning', 'pobj'), (',', 'punct'), ('exemplifying', 'acl'), ('applications', 'dobj'), ('communication', 'compound'), ('networks', 'pobj'), ('discussed', 'ROOT'), ('distinguishing', 'pcomp'), ('tasks', 'dobj'), ('carried', 'acl'), ('edge', 'pobj'), ('cloud', 'compound'), ('segments', 'pobj'), ('network', 'pobj'), ('different', 'amod'), ('layers', 'pobj'), ('protocol', 'compound'), ('stack', 'pobj'), (',', 'punct'), ('emphasis', 'pobj'), ('physical', 'amod'), ('layer', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[supervised, unsupervised], [unsupervised, learning], [learning, ,], [,, exemplifying], [exemplifying, applications], [applications, communication], [communication, networks], [networks, discussed], [discussed, distinguishing], [distinguishing, tasks], [tasks, carried], [carried, edge], [edge, cloud], [cloud, segments], [segments, network], [network, different], [different, layers], [layers, protocol], [protocol, stack], [stack, ,], [,, emphasis], [emphasis, physical], [physical, layer], [layer, .]]

>> Trigrams: 
[[supervised, unsupervised, learning], [unsupervised, learning, ,], [learning, ,, exemplifying], [,, exemplifying, applications], [exemplifying, applications, communication], [applications, communication, networks], [communication, networks, discussed], [networks, discussed, distinguishing], [discussed, distinguishing, tasks], [distinguishing, tasks, carried], [tasks, carried, edge], [carried, edge, cloud], [edge, cloud, segments], [cloud, segments, network], [segments, network, different], [network, different, layers], [different, layers, protocol], [layers, protocol, stack], [protocol, stack, ,], [stack, ,, emphasis], [,, emphasis, physical], [emphasis, physical, layer], [physical, layer, .]]

>> Noun Phrases are: 
[both supervised and unsupervised learning, applications, communication networks, tasks, the edge, the cloud segments, the network, different layers, the protocol stack, an emphasis, the physical layer]

>> Named Entities are: 
[]


============================ Sentence 6 =============================

 I. INTRODUCTION   


>> Tokens are: 
[ , I., INTRODUCTION,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('I.', 'NOUN'), ('INTRODUCTION', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('I.', 'compound'), ('INTRODUCTION', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[ , I.], [I., INTRODUCTION], [INTRODUCTION,  ]]

>> Trigrams: 
[[ , I., INTRODUCTION], [I., INTRODUCTION,  ]]

>> Noun Phrases are: 
[ I. INTRODUCTION]

>> Named Entities are: 
[]


============================ Sentence 7 =============================

After the “AI winter” of the 80s and the 90s, interest in the application of data-driven Artificial Intelligence (AI) techniques has been steadily increasing in a number of engineering fields, including speech and image analysis [1] and communications [2]. 


>> Tokens are: 
[“, AI, winter, ”, 80s, 90s, ,, interest, application, data, -, driven, Artificial, Intelligence, (, AI, ), techniques, steadily, increasing, number, engineering, fields, ,, including, speech, image, analysis, [, 1, ], communications, [, 2, ], .] 

>> PoS Tags are: 
[('“', 'PUNCT'), ('AI', 'PROPN'), ('winter', 'NOUN'), ('”', 'PUNCT'), ('80s', 'NOUN'), ('90s', 'NOUN'), (',', 'PUNCT'), ('interest', 'NOUN'), ('application', 'NOUN'), ('data', 'NOUN'), ('-', 'PUNCT'), ('driven', 'VERB'), ('Artificial', 'PROPN'), ('Intelligence', 'PROPN'), ('(', 'PUNCT'), ('AI', 'PROPN'), (')', 'PUNCT'), ('techniques', 'NOUN'), ('steadily', 'ADV'), ('increasing', 'VERB'), ('number', 'NOUN'), ('engineering', 'NOUN'), ('fields', 'NOUN'), (',', 'PUNCT'), ('including', 'VERB'), ('speech', 'NOUN'), ('image', 'NOUN'), ('analysis', 'NOUN'), ('[', 'PUNCT'), ('1', 'NUM'), (']', 'PUNCT'), ('communications', 'NOUN'), ('[', 'PUNCT'), ('2', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('“', 'punct'), ('AI', 'compound'), ('winter', 'pobj'), ('”', 'punct'), ('80s', 'pobj'), ('90s', 'conj'), (',', 'punct'), ('interest', 'conj'), ('application', 'pobj'), ('data', 'npadvmod'), ('-', 'punct'), ('driven', 'amod'), ('Artificial', 'nmod'), ('Intelligence', 'nmod'), ('(', 'punct'), ('AI', 'nmod'), (')', 'punct'), ('techniques', 'pobj'), ('steadily', 'advmod'), ('increasing', 'ROOT'), ('number', 'pobj'), ('engineering', 'compound'), ('fields', 'pobj'), (',', 'punct'), ('including', 'prep'), ('speech', 'pobj'), ('image', 'compound'), ('analysis', 'conj'), ('[', 'punct'), ('1', 'appos'), (']', 'punct'), ('communications', 'conj'), ('[', 'punct'), ('2', 'dep'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[“, AI], [AI, winter], [winter, ”], [”, 80s], [80s, 90s], [90s, ,], [,, interest], [interest, application], [application, data], [data, -], [-, driven], [driven, Artificial], [Artificial, Intelligence], [Intelligence, (], [(, AI], [AI, )], [), techniques], [techniques, steadily], [steadily, increasing], [increasing, number], [number, engineering], [engineering, fields], [fields, ,], [,, including], [including, speech], [speech, image], [image, analysis], [analysis, [], [[, 1], [1, ]], [], communications], [communications, [], [[, 2], [2, ]], [], .]]

>> Trigrams: 
[[“, AI, winter], [AI, winter, ”], [winter, ”, 80s], [”, 80s, 90s], [80s, 90s, ,], [90s, ,, interest], [,, interest, application], [interest, application, data], [application, data, -], [data, -, driven], [-, driven, Artificial], [driven, Artificial, Intelligence], [Artificial, Intelligence, (], [Intelligence, (, AI], [(, AI, )], [AI, ), techniques], [), techniques, steadily], [techniques, steadily, increasing], [steadily, increasing, number], [increasing, number, engineering], [number, engineering, fields], [engineering, fields, ,], [fields, ,, including], [,, including, speech], [including, speech, image], [speech, image, analysis], [image, analysis, [], [analysis, [, 1], [[, 1, ]], [1, ], communications], [], communications, [], [communications, [, 2], [[, 2, ]], [2, ], .]]

>> Noun Phrases are: 
[the “AI winter, the 80s, the 90s, interest, the application, data-driven Artificial Intelligence (AI) techniques, a number, engineering fields, speech, image analysis, communications]

>> Named Entities are: 
[('80s', 'DATE'), ('the 90s', 'DATE'), ('Artificial Intelligence (AI', 'ORG'), ('2', 'CARDINAL')]


============================ Sentence 8 =============================

Unlike the logic-based expert systems that were dominant in the earlier work on AI (see, e.g.--.-, [3]), the renewed confidence in data- driven methods is motivated by the successes of pattern recognition tools based on machine learning. 


>> Tokens are: 
[Unlike, logic, -, based, expert, systems, dominant, earlier, work, AI, (, ,, e.g.--.-, ,, [, 3, ], ), ,, renewed, confidence, data-, driven, methods, motivated, successes, pattern, recognition, tools, based, machine, learning, .] 

>> PoS Tags are: 
[('Unlike', 'ADP'), ('logic', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('expert', 'NOUN'), ('systems', 'NOUN'), ('dominant', 'ADJ'), ('earlier', 'ADJ'), ('work', 'NOUN'), ('AI', 'PROPN'), ('(', 'PUNCT'), (',', 'PUNCT'), ('e.g.--.-', 'X'), (',', 'PUNCT'), ('[', 'PUNCT'), ('3', 'NUM'), (']', 'PUNCT'), (')', 'PUNCT'), (',', 'PUNCT'), ('renewed', 'VERB'), ('confidence', 'NOUN'), ('data-', 'ADJ'), ('driven', 'VERB'), ('methods', 'NOUN'), ('motivated', 'VERB'), ('successes', 'NOUN'), ('pattern', 'NOUN'), ('recognition', 'NOUN'), ('tools', 'NOUN'), ('based', 'VERB'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Unlike', 'prep'), ('logic', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('expert', 'compound'), ('systems', 'pobj'), ('dominant', 'acomp'), ('earlier', 'amod'), ('work', 'pobj'), ('AI', 'pobj'), ('(', 'punct'), (',', 'punct'), ('e.g.--.-', 'intj'), (',', 'punct'), ('[', 'pobj'), ('3', 'nmod'), (']', 'punct'), (')', 'punct'), (',', 'punct'), ('renewed', 'amod'), ('confidence', 'nsubjpass'), ('data-', 'npadvmod'), ('driven', 'amod'), ('methods', 'pobj'), ('motivated', 'ROOT'), ('successes', 'pobj'), ('pattern', 'compound'), ('recognition', 'compound'), ('tools', 'pobj'), ('based', 'acl'), ('machine', 'compound'), ('learning', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Unlike, logic], [logic, -], [-, based], [based, expert], [expert, systems], [systems, dominant], [dominant, earlier], [earlier, work], [work, AI], [AI, (], [(, ,], [,, e.g.--.-], [e.g.--.-, ,], [,, [], [[, 3], [3, ]], [], )], [), ,], [,, renewed], [renewed, confidence], [confidence, data-], [data-, driven], [driven, methods], [methods, motivated], [motivated, successes], [successes, pattern], [pattern, recognition], [recognition, tools], [tools, based], [based, machine], [machine, learning], [learning, .]]

>> Trigrams: 
[[Unlike, logic, -], [logic, -, based], [-, based, expert], [based, expert, systems], [expert, systems, dominant], [systems, dominant, earlier], [dominant, earlier, work], [earlier, work, AI], [work, AI, (], [AI, (, ,], [(, ,, e.g.--.-], [,, e.g.--.-, ,], [e.g.--.-, ,, [], [,, [, 3], [[, 3, ]], [3, ], )], [], ), ,], [), ,, renewed], [,, renewed, confidence], [renewed, confidence, data-], [confidence, data-, driven], [data-, driven, methods], [driven, methods, motivated], [methods, motivated, successes], [motivated, successes, pattern], [successes, pattern, recognition], [pattern, recognition, tools], [recognition, tools, based], [tools, based, machine], [based, machine, learning], [machine, learning, .]]

>> Noun Phrases are: 
[the logic-based expert systems, the earlier work, AI, the renewed confidence, data- driven methods, the successes, pattern recognition tools, machine learning]

>> Named Entities are: 
[('AI', 'ORG'), ('3', 'CARDINAL')]


============================ Sentence 9 =============================

These tools rely on decades-old algorithms, such as backpropagation [4], the Expectation Maximization (EM) algorithm 


>> Tokens are: 
[tools, rely, decades, -, old, algorithms, ,, backpropagation, [, 4, ], ,, Expectation, Maximization, (, EM, ), algorithm] 

>> PoS Tags are: 
[('tools', 'NOUN'), ('rely', 'VERB'), ('decades', 'NOUN'), ('-', 'PUNCT'), ('old', 'ADJ'), ('algorithms', 'NOUN'), (',', 'PUNCT'), ('backpropagation', 'NOUN'), ('[', 'PUNCT'), ('4', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('Expectation', 'PROPN'), ('Maximization', 'PROPN'), ('(', 'PUNCT'), ('EM', 'NOUN'), (')', 'PUNCT'), ('algorithm', 'NOUN')] 

>> Dependency Tags are: 
[('tools', 'nsubj'), ('rely', 'ROOT'), ('decades', 'npadvmod'), ('-', 'punct'), ('old', 'amod'), ('algorithms', 'pobj'), (',', 'punct'), ('backpropagation', 'pobj'), ('[', 'punct'), ('4', 'appos'), (']', 'punct'), (',', 'punct'), ('Expectation', 'compound'), ('Maximization', 'conj'), ('(', 'punct'), ('EM', 'appos'), (')', 'punct'), ('algorithm', 'punct')]

>> Bigrams: 
[[tools, rely], [rely, decades], [decades, -], [-, old], [old, algorithms], [algorithms, ,], [,, backpropagation], [backpropagation, [], [[, 4], [4, ]], [], ,], [,, Expectation], [Expectation, Maximization], [Maximization, (], [(, EM], [EM, )], [), algorithm]]

>> Trigrams: 
[[tools, rely, decades], [rely, decades, -], [decades, -, old], [-, old, algorithms], [old, algorithms, ,], [algorithms, ,, backpropagation], [,, backpropagation, [], [backpropagation, [, 4], [[, 4, ]], [4, ], ,], [], ,, Expectation], [,, Expectation, Maximization], [Expectation, Maximization, (], [Maximization, (, EM], [(, EM, )], [EM, ), algorithm]]

>> Noun Phrases are: 
[These tools, decades-old algorithms, backpropagation, the Expectation Maximization, EM]

>> Named Entities are: 
[('decades-old', 'DATE'), ('4', 'CARDINAL'), ('the Expectation Maximization (EM', 'ORG')]


============================ Sentence 10 =============================

[5], and Q-learning [6], with a number of modern algorithmic advances, including novel regularization techniques and adaptive learning rate schedules (see review in [7]). 


>> Tokens are: 
[[, 5, ], ,, Q, -, learning, [, 6, ], ,, number, modern, algorithmic, advances, ,, including, novel, regularization, techniques, adaptive, learning, rate, schedules, (, review, [, 7, ], ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('5', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('Q', 'NOUN'), ('-', 'PUNCT'), ('learning', 'NOUN'), ('[', 'PUNCT'), ('6', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('number', 'NOUN'), ('modern', 'ADJ'), ('algorithmic', 'ADJ'), ('advances', 'NOUN'), (',', 'PUNCT'), ('including', 'VERB'), ('novel', 'ADJ'), ('regularization', 'NOUN'), ('techniques', 'NOUN'), ('adaptive', 'NOUN'), ('learning', 'NOUN'), ('rate', 'NOUN'), ('schedules', 'NOUN'), ('(', 'PUNCT'), ('review', 'NOUN'), ('[', 'PUNCT'), ('7', 'NUM'), (']', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('5', 'ROOT'), (']', 'punct'), (',', 'punct'), ('Q', 'compound'), ('-', 'punct'), ('learning', 'conj'), ('[', 'punct'), ('6', 'appos'), (']', 'punct'), (',', 'punct'), ('number', 'pobj'), ('modern', 'amod'), ('algorithmic', 'amod'), ('advances', 'pobj'), (',', 'punct'), ('including', 'prep'), ('novel', 'amod'), ('regularization', 'compound'), ('techniques', 'pobj'), ('adaptive', 'compound'), ('learning', 'compound'), ('rate', 'compound'), ('schedules', 'conj'), ('(', 'punct'), ('review', 'dobj'), ('[', 'pobj'), ('7', 'pobj'), (']', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 5], [5, ]], [], ,], [,, Q], [Q, -], [-, learning], [learning, [], [[, 6], [6, ]], [], ,], [,, number], [number, modern], [modern, algorithmic], [algorithmic, advances], [advances, ,], [,, including], [including, novel], [novel, regularization], [regularization, techniques], [techniques, adaptive], [adaptive, learning], [learning, rate], [rate, schedules], [schedules, (], [(, review], [review, [], [[, 7], [7, ]], [], )], [), .]]

>> Trigrams: 
[[[, 5, ]], [5, ], ,], [], ,, Q], [,, Q, -], [Q, -, learning], [-, learning, [], [learning, [, 6], [[, 6, ]], [6, ], ,], [], ,, number], [,, number, modern], [number, modern, algorithmic], [modern, algorithmic, advances], [algorithmic, advances, ,], [advances, ,, including], [,, including, novel], [including, novel, regularization], [novel, regularization, techniques], [regularization, techniques, adaptive], [techniques, adaptive, learning], [adaptive, learning, rate], [learning, rate, schedules], [rate, schedules, (], [schedules, (, review], [(, review, [], [review, [, 7], [[, 7, ]], [7, ], )], [], ), .]]

>> Noun Phrases are: 
[Q-learning, a number, modern algorithmic advances, novel regularization techniques, adaptive learning rate schedules, review]

>> Named Entities are: 
[('5', 'CARDINAL'), ('6', 'CARDINAL')]


============================ Sentence 11 =============================

Their success is built on the unprecedented availability of data and computing resources in many engineering domains. 


>> Tokens are: 
[success, built, unprecedented, availability, data, computing, resources, engineering, domains, .] 

>> PoS Tags are: 
[('success', 'NOUN'), ('built', 'VERB'), ('unprecedented', 'ADJ'), ('availability', 'NOUN'), ('data', 'NOUN'), ('computing', 'NOUN'), ('resources', 'NOUN'), ('engineering', 'NOUN'), ('domains', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('success', 'nsubjpass'), ('built', 'ROOT'), ('unprecedented', 'amod'), ('availability', 'pobj'), ('data', 'pobj'), ('computing', 'conj'), ('resources', 'dobj'), ('engineering', 'compound'), ('domains', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[success, built], [built, unprecedented], [unprecedented, availability], [availability, data], [data, computing], [computing, resources], [resources, engineering], [engineering, domains], [domains, .]]

>> Trigrams: 
[[success, built, unprecedented], [built, unprecedented, availability], [unprecedented, availability, data], [availability, data, computing], [data, computing, resources], [computing, resources, engineering], [resources, engineering, domains], [engineering, domains, .]]

>> Noun Phrases are: 
[Their success, the unprecedented availability, data, computing, resources, many engineering domains]

>> Named Entities are: 
[]


============================ Sentence 12 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 13 =============================

While the new wave of promises and breakthroughs around machine learning arguably falls short, at least for now, of the requirements that drove early AI research [3], [8], learning algorithms have proven to be useful in a number of important applications – and more is certainly on the way.   


>> Tokens are: 
[new, wave, promises, breakthroughs, machine, learning, arguably, falls, short, ,, ,, requirements, drove, early, AI, research, [, 3, ], ,, [, 8, ], ,, learning, algorithms, proven, useful, number, important, applications, –, certainly, way, .,  ] 

>> PoS Tags are: 
[('new', 'ADJ'), ('wave', 'NOUN'), ('promises', 'NOUN'), ('breakthroughs', 'NOUN'), ('machine', 'NOUN'), ('learning', 'VERB'), ('arguably', 'ADV'), ('falls', 'VERB'), ('short', 'ADJ'), (',', 'PUNCT'), (',', 'PUNCT'), ('requirements', 'NOUN'), ('drove', 'VERB'), ('early', 'ADJ'), ('AI', 'PROPN'), ('research', 'NOUN'), ('[', 'PUNCT'), ('3', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('[', 'PUNCT'), ('8', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('learning', 'VERB'), ('algorithms', 'NOUN'), ('proven', 'VERB'), ('useful', 'ADJ'), ('number', 'NOUN'), ('important', 'ADJ'), ('applications', 'NOUN'), ('–', 'PUNCT'), ('certainly', 'ADV'), ('way', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('new', 'amod'), ('wave', 'nsubj'), ('promises', 'pobj'), ('breakthroughs', 'conj'), ('machine', 'compound'), ('learning', 'acl'), ('arguably', 'advmod'), ('falls', 'advcl'), ('short', 'advmod'), (',', 'punct'), (',', 'punct'), ('requirements', 'pobj'), ('drove', 'relcl'), ('early', 'amod'), ('AI', 'compound'), ('research', 'dobj'), ('[', 'punct'), ('3', 'parataxis'), (']', 'punct'), (',', 'punct'), ('[', 'npadvmod'), ('8', 'dep'), (']', 'punct'), (',', 'punct'), ('learning', 'csubj'), ('algorithms', 'dobj'), ('proven', 'ROOT'), ('useful', 'acomp'), ('number', 'pobj'), ('important', 'amod'), ('applications', 'pobj'), ('–', 'punct'), ('certainly', 'advmod'), ('way', 'pobj'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[new, wave], [wave, promises], [promises, breakthroughs], [breakthroughs, machine], [machine, learning], [learning, arguably], [arguably, falls], [falls, short], [short, ,], [,, ,], [,, requirements], [requirements, drove], [drove, early], [early, AI], [AI, research], [research, [], [[, 3], [3, ]], [], ,], [,, [], [[, 8], [8, ]], [], ,], [,, learning], [learning, algorithms], [algorithms, proven], [proven, useful], [useful, number], [number, important], [important, applications], [applications, –], [–, certainly], [certainly, way], [way, .], [.,  ]]

>> Trigrams: 
[[new, wave, promises], [wave, promises, breakthroughs], [promises, breakthroughs, machine], [breakthroughs, machine, learning], [machine, learning, arguably], [learning, arguably, falls], [arguably, falls, short], [falls, short, ,], [short, ,, ,], [,, ,, requirements], [,, requirements, drove], [requirements, drove, early], [drove, early, AI], [early, AI, research], [AI, research, [], [research, [, 3], [[, 3, ]], [3, ], ,], [], ,, [], [,, [, 8], [[, 8, ]], [8, ], ,], [], ,, learning], [,, learning, algorithms], [learning, algorithms, proven], [algorithms, proven, useful], [proven, useful, number], [useful, number, important], [number, important, applications], [important, applications, –], [applications, –, certainly], [–, certainly, way], [certainly, way, .], [way, .,  ]]

>> Noun Phrases are: 
[the new wave, promises, breakthroughs, the requirements, early AI research, algorithms, a number, important applications, the way]

>> Named Entities are: 
[('AI', 'ORG'), ('3', 'CARDINAL'), ('8', 'CARDINAL')]


============================ Sentence 14 =============================

King’s College London, United Kingdom (email: osvaldo.simeone@kcl.ac.uk). 


>> Tokens are: 
[King, College, London, ,, United, Kingdom, (, email, :, osvaldo.simeone@kcl.ac.uk, ), .] 

>> PoS Tags are: 
[('King', 'PROPN'), ('College', 'PROPN'), ('London', 'PROPN'), (',', 'PUNCT'), ('United', 'PROPN'), ('Kingdom', 'PROPN'), ('(', 'PUNCT'), ('email', 'NOUN'), (':', 'PUNCT'), ('osvaldo.simeone@kcl.ac.uk', 'INTJ'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('King', 'poss'), ('College', 'compound'), ('London', 'nsubj'), (',', 'punct'), ('United', 'compound'), ('Kingdom', 'conj'), ('(', 'punct'), ('email', 'appos'), (':', 'punct'), ('osvaldo.simeone@kcl.ac.uk', 'ROOT'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[King, College], [College, London], [London, ,], [,, United], [United, Kingdom], [Kingdom, (], [(, email], [email, :], [:, osvaldo.simeone@kcl.ac.uk], [osvaldo.simeone@kcl.ac.uk, )], [), .]]

>> Trigrams: 
[[King, College, London], [College, London, ,], [London, ,, United], [,, United, Kingdom], [United, Kingdom, (], [Kingdom, (, email], [(, email, :], [email, :, osvaldo.simeone@kcl.ac.uk], [:, osvaldo.simeone@kcl.ac.uk, )], [osvaldo.simeone@kcl.ac.uk, ), .]]

>> Noun Phrases are: 
[King’s College London, United Kingdom, (email]

>> Named Entities are: 
[('King’s', 'ORG'), ('London', 'GPE'), ('United Kingdom', 'GPE')]


============================ Sentence 15 =============================

This work has received funding from the European Research Council (ERC) under the European Union Horizon 2020 research and innovation program (grant agreement 725731). 


>> Tokens are: 
[work, received, funding, European, Research, Council, (, ERC, ), European, Union, Horizon, 2020, research, innovation, program, (, grant, agreement, 725731, ), .] 

>> PoS Tags are: 
[('work', 'NOUN'), ('received', 'VERB'), ('funding', 'NOUN'), ('European', 'PROPN'), ('Research', 'PROPN'), ('Council', 'PROPN'), ('(', 'PUNCT'), ('ERC', 'PROPN'), (')', 'PUNCT'), ('European', 'PROPN'), ('Union', 'PROPN'), ('Horizon', 'PROPN'), ('2020', 'NUM'), ('research', 'NOUN'), ('innovation', 'NOUN'), ('program', 'NOUN'), ('(', 'PUNCT'), ('grant', 'NOUN'), ('agreement', 'NOUN'), ('725731', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('work', 'nsubj'), ('received', 'ROOT'), ('funding', 'dobj'), ('European', 'compound'), ('Research', 'compound'), ('Council', 'pobj'), ('(', 'punct'), ('ERC', 'appos'), (')', 'punct'), ('European', 'compound'), ('Union', 'nmod'), ('Horizon', 'nmod'), ('2020', 'nummod'), ('research', 'nmod'), ('innovation', 'conj'), ('program', 'pobj'), ('(', 'punct'), ('grant', 'compound'), ('agreement', 'appos'), ('725731', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[work, received], [received, funding], [funding, European], [European, Research], [Research, Council], [Council, (], [(, ERC], [ERC, )], [), European], [European, Union], [Union, Horizon], [Horizon, 2020], [2020, research], [research, innovation], [innovation, program], [program, (], [(, grant], [grant, agreement], [agreement, 725731], [725731, )], [), .]]

>> Trigrams: 
[[work, received, funding], [received, funding, European], [funding, European, Research], [European, Research, Council], [Research, Council, (], [Council, (, ERC], [(, ERC, )], [ERC, ), European], [), European, Union], [European, Union, Horizon], [Union, Horizon, 2020], [Horizon, 2020, research], [2020, research, innovation], [research, innovation, program], [innovation, program, (], [program, (, grant], [(, grant, agreement], [grant, agreement, 725731], [agreement, 725731, )], [725731, ), .]]

>> Noun Phrases are: 
[This work, funding, the European Research Council, ERC, the European Union Horizon 2020 research and innovation program, grant agreement]

>> Named Entities are: 
[('the European Research Council', 'ORG'), ('ERC', 'ORG'), ('the European Union', 'ORG'), ('2020', 'DATE')]


============================ Sentence 16 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 17 =============================

This paper provides a very brief introduction to key concepts in machine learning and to the literature on machine learning for communication systems. 


>> Tokens are: 
[paper, provides, brief, introduction, key, concepts, machine, learning, literature, machine, learning, communication, systems, .] 

>> PoS Tags are: 
[('paper', 'NOUN'), ('provides', 'VERB'), ('brief', 'ADJ'), ('introduction', 'NOUN'), ('key', 'ADJ'), ('concepts', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('literature', 'NOUN'), ('machine', 'NOUN'), ('learning', 'VERB'), ('communication', 'NOUN'), ('systems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('paper', 'nsubj'), ('provides', 'ROOT'), ('brief', 'amod'), ('introduction', 'dobj'), ('key', 'amod'), ('concepts', 'pobj'), ('machine', 'compound'), ('learning', 'pobj'), ('literature', 'pobj'), ('machine', 'compound'), ('learning', 'pobj'), ('communication', 'compound'), ('systems', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[paper, provides], [provides, brief], [brief, introduction], [introduction, key], [key, concepts], [concepts, machine], [machine, learning], [learning, literature], [literature, machine], [machine, learning], [learning, communication], [communication, systems], [systems, .]]

>> Trigrams: 
[[paper, provides, brief], [provides, brief, introduction], [brief, introduction, key], [introduction, key, concepts], [key, concepts, machine], [concepts, machine, learning], [machine, learning, literature], [learning, literature, machine], [literature, machine, learning], [machine, learning, communication], [learning, communication, systems], [communication, systems, .]]

>> Noun Phrases are: 
[This paper, a very brief introduction, key concepts, machine learning, the literature, communication systems]

>> Named Entities are: 
[]


============================ Sentence 18 =============================

Unlike other review papers such as [9]–[11], the presentation aims at highlighting conditions under which the use of machine learning is justified in engineering problems, as well as specific classes of learning algorithms that are suitable for their solution. 


>> Tokens are: 
[Unlike, review, papers, [, 9]–[11, ], ,, presentation, aims, highlighting, conditions, use, machine, learning, justified, engineering, problems, ,, specific, classes, learning, algorithms, suitable, solution, .] 

>> PoS Tags are: 
[('Unlike', 'ADP'), ('review', 'NOUN'), ('papers', 'NOUN'), ('[', 'PUNCT'), ('9]–[11', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('presentation', 'NOUN'), ('aims', 'VERB'), ('highlighting', 'VERB'), ('conditions', 'NOUN'), ('use', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('justified', 'VERB'), ('engineering', 'NOUN'), ('problems', 'NOUN'), (',', 'PUNCT'), ('specific', 'ADJ'), ('classes', 'NOUN'), ('learning', 'VERB'), ('algorithms', 'NOUN'), ('suitable', 'ADJ'), ('solution', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Unlike', 'prep'), ('review', 'compound'), ('papers', 'pobj'), ('[', 'pobj'), ('9]–[11', 'pobj'), (']', 'punct'), (',', 'punct'), ('presentation', 'nsubj'), ('aims', 'ROOT'), ('highlighting', 'pcomp'), ('conditions', 'dobj'), ('use', 'nsubj'), ('machine', 'compound'), ('learning', 'pobj'), ('justified', 'relcl'), ('engineering', 'compound'), ('problems', 'pobj'), (',', 'punct'), ('specific', 'amod'), ('classes', 'conj'), ('learning', 'pcomp'), ('algorithms', 'dobj'), ('suitable', 'acomp'), ('solution', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Unlike, review], [review, papers], [papers, [], [[, 9]–[11], [9]–[11, ]], [], ,], [,, presentation], [presentation, aims], [aims, highlighting], [highlighting, conditions], [conditions, use], [use, machine], [machine, learning], [learning, justified], [justified, engineering], [engineering, problems], [problems, ,], [,, specific], [specific, classes], [classes, learning], [learning, algorithms], [algorithms, suitable], [suitable, solution], [solution, .]]

>> Trigrams: 
[[Unlike, review, papers], [review, papers, [], [papers, [, 9]–[11], [[, 9]–[11, ]], [9]–[11, ], ,], [], ,, presentation], [,, presentation, aims], [presentation, aims, highlighting], [aims, highlighting, conditions], [highlighting, conditions, use], [conditions, use, machine], [use, machine, learning], [machine, learning, justified], [learning, justified, engineering], [justified, engineering, problems], [engineering, problems, ,], [problems, ,, specific], [,, specific, classes], [specific, classes, learning], [classes, learning, algorithms], [learning, algorithms, suitable], [algorithms, suitable, solution], [suitable, solution, .]]

>> Noun Phrases are: 
[other review papers, the presentation, conditions, the use, machine learning, engineering problems, specific classes, algorithms, their solution]

>> Named Entities are: 
[]


============================ Sentence 19 =============================

The presentation is organized around the description of general technical concepts, for which an overview of applications to communication networks is subsequently provided. 


>> Tokens are: 
[presentation, organized, description, general, technical, concepts, ,, overview, applications, communication, networks, subsequently, provided, .] 

>> PoS Tags are: 
[('presentation', 'NOUN'), ('organized', 'VERB'), ('description', 'NOUN'), ('general', 'ADJ'), ('technical', 'ADJ'), ('concepts', 'NOUN'), (',', 'PUNCT'), ('overview', 'NOUN'), ('applications', 'NOUN'), ('communication', 'NOUN'), ('networks', 'NOUN'), ('subsequently', 'ADV'), ('provided', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('presentation', 'nsubjpass'), ('organized', 'ROOT'), ('description', 'pobj'), ('general', 'amod'), ('technical', 'amod'), ('concepts', 'pobj'), (',', 'punct'), ('overview', 'nsubjpass'), ('applications', 'pobj'), ('communication', 'compound'), ('networks', 'pobj'), ('subsequently', 'advmod'), ('provided', 'relcl'), ('.', 'punct')]

>> Bigrams: 
[[presentation, organized], [organized, description], [description, general], [general, technical], [technical, concepts], [concepts, ,], [,, overview], [overview, applications], [applications, communication], [communication, networks], [networks, subsequently], [subsequently, provided], [provided, .]]

>> Trigrams: 
[[presentation, organized, description], [organized, description, general], [description, general, technical], [general, technical, concepts], [technical, concepts, ,], [concepts, ,, overview], [,, overview, applications], [overview, applications, communication], [applications, communication, networks], [communication, networks, subsequently], [networks, subsequently, provided], [subsequently, provided, .]]

>> Noun Phrases are: 
[The presentation, the description, general technical concepts, an overview, applications, communication networks]

>> Named Entities are: 
[]


============================ Sentence 20 =============================

These applications are chosen to exemplify general design criteria and tools and not to offer a comprehensive review of the state of the art and of the historical progression of advances on the topic. 


>> Tokens are: 
[applications, chosen, exemplify, general, design, criteria, tools, offer, comprehensive, review, state, art, historical, progression, advances, topic, .] 

>> PoS Tags are: 
[('applications', 'NOUN'), ('chosen', 'VERB'), ('exemplify', 'VERB'), ('general', 'ADJ'), ('design', 'NOUN'), ('criteria', 'NOUN'), ('tools', 'NOUN'), ('offer', 'VERB'), ('comprehensive', 'ADJ'), ('review', 'NOUN'), ('state', 'NOUN'), ('art', 'NOUN'), ('historical', 'ADJ'), ('progression', 'NOUN'), ('advances', 'NOUN'), ('topic', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('applications', 'nsubjpass'), ('chosen', 'ROOT'), ('exemplify', 'xcomp'), ('general', 'amod'), ('design', 'compound'), ('criteria', 'dobj'), ('tools', 'conj'), ('offer', 'conj'), ('comprehensive', 'amod'), ('review', 'dobj'), ('state', 'pobj'), ('art', 'pobj'), ('historical', 'amod'), ('progression', 'pobj'), ('advances', 'pobj'), ('topic', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[applications, chosen], [chosen, exemplify], [exemplify, general], [general, design], [design, criteria], [criteria, tools], [tools, offer], [offer, comprehensive], [comprehensive, review], [review, state], [state, art], [art, historical], [historical, progression], [progression, advances], [advances, topic], [topic, .]]

>> Trigrams: 
[[applications, chosen, exemplify], [chosen, exemplify, general], [exemplify, general, design], [general, design, criteria], [design, criteria, tools], [criteria, tools, offer], [tools, offer, comprehensive], [offer, comprehensive, review], [comprehensive, review, state], [review, state, art], [state, art, historical], [art, historical, progression], [historical, progression, advances], [progression, advances, topic], [advances, topic, .]]

>> Noun Phrases are: 
[These applications, general design criteria, tools, a comprehensive review, the state, the art, the historical progression, advances, the topic]

>> Named Entities are: 
[]


============================ Sentence 21 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 22 =============================

We proceed in this section by addressing the question “What is machine learning?”, by providing a taxonomy of machine learning methods, and by finally considering the question “When to use machine learning?”. 


>> Tokens are: 
[proceed, section, addressing, question, “, machine, learning, ?, ”, ,, providing, taxonomy, machine, learning, methods, ,, finally, considering, question, “, use, machine, learning, ?, ”, .] 

>> PoS Tags are: 
[('proceed', 'VERB'), ('section', 'NOUN'), ('addressing', 'VERB'), ('question', 'NOUN'), ('“', 'PUNCT'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('?', 'PUNCT'), ('”', 'PUNCT'), (',', 'PUNCT'), ('providing', 'VERB'), ('taxonomy', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('methods', 'NOUN'), (',', 'PUNCT'), ('finally', 'ADV'), ('considering', 'VERB'), ('question', 'NOUN'), ('“', 'PUNCT'), ('use', 'VERB'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('?', 'PUNCT'), ('”', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('proceed', 'ROOT'), ('section', 'pobj'), ('addressing', 'pcomp'), ('question', 'dobj'), ('“', 'punct'), ('machine', 'compound'), ('learning', 'nsubj'), ('?', 'punct'), ('”', 'punct'), (',', 'punct'), ('providing', 'pcomp'), ('taxonomy', 'dobj'), ('machine', 'compound'), ('learning', 'compound'), ('methods', 'pobj'), (',', 'punct'), ('finally', 'advmod'), ('considering', 'pcomp'), ('question', 'dobj'), ('“', 'punct'), ('use', 'advcl'), ('machine', 'compound'), ('learning', 'dobj'), ('?', 'punct'), ('”', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[proceed, section], [section, addressing], [addressing, question], [question, “], [“, machine], [machine, learning], [learning, ?], [?, ”], [”, ,], [,, providing], [providing, taxonomy], [taxonomy, machine], [machine, learning], [learning, methods], [methods, ,], [,, finally], [finally, considering], [considering, question], [question, “], [“, use], [use, machine], [machine, learning], [learning, ?], [?, ”], [”, .]]

>> Trigrams: 
[[proceed, section, addressing], [section, addressing, question], [addressing, question, “], [question, “, machine], [“, machine, learning], [machine, learning, ?], [learning, ?, ”], [?, ”, ,], [”, ,, providing], [,, providing, taxonomy], [providing, taxonomy, machine], [taxonomy, machine, learning], [machine, learning, methods], [learning, methods, ,], [methods, ,, finally], [,, finally, considering], [finally, considering, question], [considering, question, “], [question, “, use], [“, use, machine], [use, machine, learning], [machine, learning, ?], [learning, ?, ”], [?, ”, .]]

>> Noun Phrases are: 
[We, this section, the question, What, machine learning, a taxonomy, machine learning methods, the question, machine learning]

>> Named Entities are: 
[]


============================ Sentence 23 =============================

 A. 


>> Tokens are: 
[ , A.] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('A.', 'NOUN')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('A.', 'ROOT')]

>> Bigrams: 
[[ , A.]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[ A.]

>> Named Entities are: 
[]


============================ Sentence 24 =============================

What is Machine Learning? 


>> Tokens are: 
[Machine, Learning, ?] 

>> PoS Tags are: 
[('Machine', 'PROPN'), ('Learning', 'PROPN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('Machine', 'compound'), ('Learning', 'nsubj'), ('?', 'punct')]

>> Bigrams: 
[[Machine, Learning], [Learning, ?]]

>> Trigrams: 
[[Machine, Learning, ?]]

>> Noun Phrases are: 
[What, Machine Learning]

>> Named Entities are: 
[]


============================ Sentence 25 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 26 =============================

In order to fix the ideas, it is useful to introduce the machine learning methodology as an alternative to the conventional engineering approach for the design of an algorithmic solution. 


>> Tokens are: 
[order, fix, ideas, ,, useful, introduce, machine, learning, methodology, alternative, conventional, engineering, approach, design, algorithmic, solution, .] 

>> PoS Tags are: 
[('order', 'NOUN'), ('fix', 'VERB'), ('ideas', 'NOUN'), (',', 'PUNCT'), ('useful', 'ADJ'), ('introduce', 'VERB'), ('machine', 'NOUN'), ('learning', 'VERB'), ('methodology', 'NOUN'), ('alternative', 'NOUN'), ('conventional', 'ADJ'), ('engineering', 'NOUN'), ('approach', 'NOUN'), ('design', 'NOUN'), ('algorithmic', 'ADJ'), ('solution', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('order', 'pobj'), ('fix', 'acl'), ('ideas', 'dobj'), (',', 'punct'), ('useful', 'acomp'), ('introduce', 'xcomp'), ('machine', 'npadvmod'), ('learning', 'amod'), ('methodology', 'dobj'), ('alternative', 'pobj'), ('conventional', 'amod'), ('engineering', 'compound'), ('approach', 'pobj'), ('design', 'pobj'), ('algorithmic', 'amod'), ('solution', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[order, fix], [fix, ideas], [ideas, ,], [,, useful], [useful, introduce], [introduce, machine], [machine, learning], [learning, methodology], [methodology, alternative], [alternative, conventional], [conventional, engineering], [engineering, approach], [approach, design], [design, algorithmic], [algorithmic, solution], [solution, .]]

>> Trigrams: 
[[order, fix, ideas], [fix, ideas, ,], [ideas, ,, useful], [,, useful, introduce], [useful, introduce, machine], [introduce, machine, learning], [machine, learning, methodology], [learning, methodology, alternative], [methodology, alternative, conventional], [alternative, conventional, engineering], [conventional, engineering, approach], [engineering, approach, design], [approach, design, algorithmic], [design, algorithmic, solution], [algorithmic, solution, .]]

>> Noun Phrases are: 
[order, the ideas, it, the machine learning methodology, an alternative, the conventional engineering approach, the design, an algorithmic solution]

>> Named Entities are: 
[]


============================ Sentence 27 =============================

As illustrated in Fig. 1(a), the conventional engineering design flow starts with the ac- quisition of domain knowledge: The problem of interest is studied in detail, producing a mathematical model that capture the physics of the set-up under study. 


>> Tokens are: 
[illustrated, Fig, ., 1(a, ), ,, conventional, engineering, design, flow, starts, ac-, quisition, domain, knowledge, :, problem, interest, studied, detail, ,, producing, mathematical, model, capture, physics, set, -, study, .] 

>> PoS Tags are: 
[('illustrated', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT'), ('1(a', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('conventional', 'ADJ'), ('engineering', 'NOUN'), ('design', 'NOUN'), ('flow', 'NOUN'), ('starts', 'VERB'), ('ac-', 'ADJ'), ('quisition', 'NOUN'), ('domain', 'NOUN'), ('knowledge', 'NOUN'), (':', 'PUNCT'), ('problem', 'NOUN'), ('interest', 'NOUN'), ('studied', 'VERB'), ('detail', 'NOUN'), (',', 'PUNCT'), ('producing', 'VERB'), ('mathematical', 'ADJ'), ('model', 'NOUN'), ('capture', 'VERB'), ('physics', 'NOUN'), ('set', 'NOUN'), ('-', 'PUNCT'), ('study', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('illustrated', 'advcl'), ('Fig', 'pobj'), ('.', 'punct'), ('1(a', 'npadvmod'), (')', 'punct'), (',', 'punct'), ('conventional', 'amod'), ('engineering', 'compound'), ('design', 'compound'), ('flow', 'nsubj'), ('starts', 'ccomp'), ('ac-', 'amod'), ('quisition', 'pobj'), ('domain', 'compound'), ('knowledge', 'pobj'), (':', 'punct'), ('problem', 'nsubjpass'), ('interest', 'pobj'), ('studied', 'ROOT'), ('detail', 'pobj'), (',', 'punct'), ('producing', 'advcl'), ('mathematical', 'amod'), ('model', 'dobj'), ('capture', 'relcl'), ('physics', 'dobj'), ('set', 'compound'), ('-', 'punct'), ('study', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[illustrated, Fig], [Fig, .], [., 1(a], [1(a, )], [), ,], [,, conventional], [conventional, engineering], [engineering, design], [design, flow], [flow, starts], [starts, ac-], [ac-, quisition], [quisition, domain], [domain, knowledge], [knowledge, :], [:, problem], [problem, interest], [interest, studied], [studied, detail], [detail, ,], [,, producing], [producing, mathematical], [mathematical, model], [model, capture], [capture, physics], [physics, set], [set, -], [-, study], [study, .]]

>> Trigrams: 
[[illustrated, Fig, .], [Fig, ., 1(a], [., 1(a, )], [1(a, ), ,], [), ,, conventional], [,, conventional, engineering], [conventional, engineering, design], [engineering, design, flow], [design, flow, starts], [flow, starts, ac-], [starts, ac-, quisition], [ac-, quisition, domain], [quisition, domain, knowledge], [domain, knowledge, :], [knowledge, :, problem], [:, problem, interest], [problem, interest, studied], [interest, studied, detail], [studied, detail, ,], [detail, ,, producing], [,, producing, mathematical], [producing, mathematical, model], [mathematical, model, capture], [model, capture, physics], [capture, physics, set], [physics, set, -], [set, -, study], [-, study, .]]

>> Noun Phrases are: 
[Fig, the conventional engineering design flow, the ac- quisition, domain knowledge, The problem, interest, detail, a mathematical model, the physics, the set-up, study]

>> Named Entities are: 
[('Fig', 'PERSON'), ('1(a', 'CARDINAL')]


============================ Sentence 28 =============================

Based on the model, an optimized algorithm is produced that offers performance guarantees under the assumption that the given physics-based model is an accurate representation of reality. 


>> Tokens are: 
[Based, model, ,, optimized, algorithm, produced, offers, performance, guarantees, assumption, given, physics, -, based, model, accurate, representation, reality, .] 

>> PoS Tags are: 
[('Based', 'VERB'), ('model', 'NOUN'), (',', 'PUNCT'), ('optimized', 'VERB'), ('algorithm', 'NOUN'), ('produced', 'VERB'), ('offers', 'VERB'), ('performance', 'NOUN'), ('guarantees', 'NOUN'), ('assumption', 'NOUN'), ('given', 'VERB'), ('physics', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('model', 'NOUN'), ('accurate', 'ADJ'), ('representation', 'NOUN'), ('reality', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Based', 'prep'), ('model', 'pobj'), (',', 'punct'), ('optimized', 'amod'), ('algorithm', 'nsubjpass'), ('produced', 'ROOT'), ('offers', 'ccomp'), ('performance', 'compound'), ('guarantees', 'dobj'), ('assumption', 'pobj'), ('given', 'amod'), ('physics', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('model', 'nsubj'), ('accurate', 'amod'), ('representation', 'attr'), ('reality', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Based, model], [model, ,], [,, optimized], [optimized, algorithm], [algorithm, produced], [produced, offers], [offers, performance], [performance, guarantees], [guarantees, assumption], [assumption, given], [given, physics], [physics, -], [-, based], [based, model], [model, accurate], [accurate, representation], [representation, reality], [reality, .]]

>> Trigrams: 
[[Based, model, ,], [model, ,, optimized], [,, optimized, algorithm], [optimized, algorithm, produced], [algorithm, produced, offers], [produced, offers, performance], [offers, performance, guarantees], [performance, guarantees, assumption], [guarantees, assumption, given], [assumption, given, physics], [given, physics, -], [physics, -, based], [-, based, model], [based, model, accurate], [model, accurate, representation], [accurate, representation, reality], [representation, reality, .]]

>> Noun Phrases are: 
[the model, an optimized algorithm, performance guarantees, the assumption, the given physics-based model, an accurate representation, reality]

>> Named Entities are: 
[]


============================ Sentence 29 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 30 =============================

As an example, designing a decoding algorithm for a wireless fading channel under the conventional engi- neering approach would require the development, or the selection, of a physical model for the channel connecting transmitter and receiver. 


>> Tokens are: 
[example, ,, designing, decoding, algorithm, wireless, fading, channel, conventional, engi-, neering, approach, require, development, ,, selection, ,, physical, model, channel, connecting, transmitter, receiver, .] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), ('designing', 'VERB'), ('decoding', 'VERB'), ('algorithm', 'NOUN'), ('wireless', 'ADJ'), ('fading', 'VERB'), ('channel', 'NOUN'), ('conventional', 'ADJ'), ('engi-', 'ADJ'), ('neering', 'VERB'), ('approach', 'NOUN'), ('require', 'VERB'), ('development', 'NOUN'), (',', 'PUNCT'), ('selection', 'NOUN'), (',', 'PUNCT'), ('physical', 'ADJ'), ('model', 'NOUN'), ('channel', 'NOUN'), ('connecting', 'VERB'), ('transmitter', 'NOUN'), ('receiver', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct'), ('designing', 'csubj'), ('decoding', 'amod'), ('algorithm', 'dobj'), ('wireless', 'amod'), ('fading', 'amod'), ('channel', 'pobj'), ('conventional', 'amod'), ('engi-', 'amod'), ('neering', 'amod'), ('approach', 'pobj'), ('require', 'ROOT'), ('development', 'dobj'), (',', 'punct'), ('selection', 'conj'), (',', 'punct'), ('physical', 'amod'), ('model', 'pobj'), ('channel', 'nsubj'), ('connecting', 'amod'), ('transmitter', 'pobj'), ('receiver', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[example, ,], [,, designing], [designing, decoding], [decoding, algorithm], [algorithm, wireless], [wireless, fading], [fading, channel], [channel, conventional], [conventional, engi-], [engi-, neering], [neering, approach], [approach, require], [require, development], [development, ,], [,, selection], [selection, ,], [,, physical], [physical, model], [model, channel], [channel, connecting], [connecting, transmitter], [transmitter, receiver], [receiver, .]]

>> Trigrams: 
[[example, ,, designing], [,, designing, decoding], [designing, decoding, algorithm], [decoding, algorithm, wireless], [algorithm, wireless, fading], [wireless, fading, channel], [fading, channel, conventional], [channel, conventional, engi-], [conventional, engi-, neering], [engi-, neering, approach], [neering, approach, require], [approach, require, development], [require, development, ,], [development, ,, selection], [,, selection, ,], [selection, ,, physical], [,, physical, model], [physical, model, channel], [model, channel, connecting], [channel, connecting, transmitter], [connecting, transmitter, receiver], [transmitter, receiver, .]]

>> Noun Phrases are: 
[an example, a decoding algorithm, a wireless fading channel, the conventional engi- neering approach, the development, the selection, a physical model, the channel, receiver]

>> Named Entities are: 
[]


============================ Sentence 31 =============================

The solution would be obtained by tackling an optimization problem, and it would yield optimality guarantees under the given channel model. 


>> Tokens are: 
[solution, obtained, tackling, optimization, problem, ,, yield, optimality, guarantees, given, channel, model, .] 

>> PoS Tags are: 
[('solution', 'NOUN'), ('obtained', 'VERB'), ('tackling', 'VERB'), ('optimization', 'NOUN'), ('problem', 'NOUN'), (',', 'PUNCT'), ('yield', 'VERB'), ('optimality', 'NOUN'), ('guarantees', 'NOUN'), ('given', 'VERB'), ('channel', 'NOUN'), ('model', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('solution', 'nsubjpass'), ('obtained', 'ROOT'), ('tackling', 'pcomp'), ('optimization', 'compound'), ('problem', 'dobj'), (',', 'punct'), ('yield', 'conj'), ('optimality', 'compound'), ('guarantees', 'dobj'), ('given', 'amod'), ('channel', 'compound'), ('model', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[solution, obtained], [obtained, tackling], [tackling, optimization], [optimization, problem], [problem, ,], [,, yield], [yield, optimality], [optimality, guarantees], [guarantees, given], [given, channel], [channel, model], [model, .]]

>> Trigrams: 
[[solution, obtained, tackling], [obtained, tackling, optimization], [tackling, optimization, problem], [optimization, problem, ,], [problem, ,, yield], [,, yield, optimality], [yield, optimality, guarantees], [optimality, guarantees, given], [guarantees, given, channel], [given, channel, model], [channel, model, .]]

>> Noun Phrases are: 
[The solution, an optimization problem, it, optimality guarantees, the given channel model]

>> Named Entities are: 
[]


============================ Sentence 32 =============================

Typical example of channel models include Gaussian and fading channels (see, e.g.--.-, [12]). 


>> Tokens are: 
[Typical, example, channel, models, include, Gaussian, fading, channels, (, ,, e.g.--.-, ,, [, 12, ], ), .] 

>> PoS Tags are: 
[('Typical', 'ADJ'), ('example', 'NOUN'), ('channel', 'NOUN'), ('models', 'NOUN'), ('include', 'VERB'), ('Gaussian', 'ADJ'), ('fading', 'VERB'), ('channels', 'NOUN'), ('(', 'PUNCT'), (',', 'PUNCT'), ('e.g.--.-', 'X'), (',', 'PUNCT'), ('[', 'PUNCT'), ('12', 'NUM'), (']', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Typical', 'amod'), ('example', 'nsubj'), ('channel', 'compound'), ('models', 'pobj'), ('include', 'ROOT'), ('Gaussian', 'amod'), ('fading', 'conj'), ('channels', 'dobj'), ('(', 'punct'), (',', 'punct'), ('e.g.--.-', 'intj'), (',', 'punct'), ('[', 'punct'), ('12', 'dobj'), (']', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Typical, example], [example, channel], [channel, models], [models, include], [include, Gaussian], [Gaussian, fading], [fading, channels], [channels, (], [(, ,], [,, e.g.--.-], [e.g.--.-, ,], [,, [], [[, 12], [12, ]], [], )], [), .]]

>> Trigrams: 
[[Typical, example, channel], [example, channel, models], [channel, models, include], [models, include, Gaussian], [include, Gaussian, fading], [Gaussian, fading, channels], [fading, channels, (], [channels, (, ,], [(, ,, e.g.--.-], [,, e.g.--.-, ,], [e.g.--.-, ,, [], [,, [, 12], [[, 12, ]], [12, ], )], [], ), .]]

>> Noun Phrases are: 
[Typical example, channel models, Gaussian and fading channels]

>> Named Entities are: 
[('Gaussian', 'PERSON'), ('12', 'CARDINAL')]


============================ Sentence 33 =============================

 1  ar X   


>> Tokens are: 
[ , 1,  , ar, X,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('1', 'NUM'), (' ', 'SPACE'), ('ar', 'ADP'), ('X', 'PRON'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('1', 'nummod'), (' ', 'appos'), ('ar', 'prep'), ('X', 'nmod'), (' ', 'pobj')]

>> Bigrams: 
[[ , 1], [1,  ], [ , ar], [ar, X], [X,  ]]

>> Trigrams: 
[[ , 1,  ], [1,  , ar], [ , ar, X], [ar, X,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 34 =============================

iv :1  80 8. 


>> Tokens are: 
[iv, :1,  , 80, 8, .] 

>> PoS Tags are: 
[('iv', 'X'), (':1', 'NOUN'), (' ', 'SPACE'), ('80', 'NUM'), ('8', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('iv', 'ROOT'), (':1', 'punct'), (' ', 'appos'), ('80', 'nummod'), ('8', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[iv, :1], [:1,  ], [ , 80], [80, 8], [8, .]]

>> Trigrams: 
[[iv, :1,  ], [:1,  , 80], [ , 80, 8], [80, 8, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('80 8', 'DATE')]


============================ Sentence 35 =============================

 02 34  2v 4    [ cs  .I 


>> Tokens are: 
[ , 02, 34,  , 2v, 4,    , [, cs,  , .I] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('02', 'NUM'), ('34', 'NUM'), (' ', 'SPACE'), ('2v', 'PROPN'), ('4', 'NUM'), ('   ', 'SPACE'), ('[', 'PUNCT'), ('cs', 'X'), (' ', 'SPACE'), ('.I', 'PROPN')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('02', 'compound'), ('34', 'nummod'), (' ', 'dobj'), ('2v', 'npadvmod'), ('4', 'nummod'), ('   ', 'nummod'), ('[', 'punct'), ('cs', 'amod'), (' ', 'parataxis'), ('.I', 'punct')]

>> Bigrams: 
[[ , 02], [02, 34], [34,  ], [ , 2v], [2v, 4], [4,    ], [   , [], [[, cs], [cs,  ], [ , .I]]

>> Trigrams: 
[[ , 02, 34], [02, 34,  ], [34,  , 2v], [ , 2v, 4], [2v, 4,    ], [4,    , [], [   , [, cs], [[, cs,  ], [cs,  , .I]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('02 34', 'CARDINAL'), ('2v', 'CARDINAL')]


============================ Sentence 36 =============================

T  ]   5   N ov   2 01  8    acquisition   of domain   knowledge  algorithm   development  physics-based   mathematical model  algorithm with   performance   guarantees  acquisition   of data  learning  training set  black-box  machine  hypothesis   class  (a) 


>> Tokens are: 
[T,  , ],   , 5,   , N, ov,   , 2, 01,  , 8,    , acquisition,   , domain,   , knowledge,  , algorithm,   , development,  , physics, -, based,   , mathematical, model,  , algorithm,   , performance,   , guarantees,  , acquisition,   , data,  , learning,  , training, set,  , black, -, box,  , machine,  , hypothesis,   , class,  , (, )] 

>> PoS Tags are: 
[('T', 'NOUN'), (' ', 'SPACE'), (']', 'PUNCT'), ('  ', 'SPACE'), ('5', 'NUM'), ('  ', 'SPACE'), ('N', 'PROPN'), ('ov', 'ADP'), ('  ', 'SPACE'), ('2', 'NUM'), ('01', 'NUM'), (' ', 'SPACE'), ('8', 'NUM'), ('   ', 'SPACE'), ('acquisition', 'NOUN'), ('  ', 'SPACE'), ('domain', 'NOUN'), ('  ', 'SPACE'), ('knowledge', 'NOUN'), (' ', 'SPACE'), ('algorithm', 'NOUN'), ('  ', 'SPACE'), ('development', 'NOUN'), (' ', 'SPACE'), ('physics', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('  ', 'SPACE'), ('mathematical', 'ADJ'), ('model', 'NOUN'), (' ', 'SPACE'), ('algorithm', 'NOUN'), ('  ', 'SPACE'), ('performance', 'NOUN'), ('  ', 'SPACE'), ('guarantees', 'VERB'), (' ', 'SPACE'), ('acquisition', 'NOUN'), ('  ', 'SPACE'), ('data', 'NOUN'), (' ', 'SPACE'), ('learning', 'VERB'), (' ', 'SPACE'), ('training', 'NOUN'), ('set', 'NOUN'), (' ', 'SPACE'), ('black', 'ADJ'), ('-', 'PUNCT'), ('box', 'NOUN'), (' ', 'SPACE'), ('machine', 'NOUN'), (' ', 'SPACE'), ('hypothesis', 'NOUN'), ('  ', 'SPACE'), ('class', 'NOUN'), (' ', 'SPACE'), ('(', 'PUNCT'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('T', 'compound'), (' ', 'dep'), (']', 'punct'), ('  ', 'appos'), ('5', 'nummod'), ('  ', 'npadvmod'), ('N', 'npadvmod'), ('ov', 'prep'), ('  ', 'nmod'), ('2', 'compound'), ('01', 'nummod'), (' ', 'nmod'), ('8', 'compound'), ('   ', 'nummod'), ('acquisition', 'compound'), ('  ', 'pobj'), ('domain', 'pobj'), ('  ', 'nummod'), ('knowledge', 'appos'), (' ', 'appos'), ('algorithm', 'appos'), ('  ', 'nummod'), ('development', 'compound'), (' ', 'nmod'), ('physics', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('  ', 'nmod'), ('mathematical', 'amod'), ('model', 'appos'), (' ', 'appos'), ('algorithm', 'appos'), ('  ', 'compound'), ('performance', 'pobj'), ('  ', 'nsubj'), ('guarantees', 'ROOT'), (' ', 'dobj'), ('acquisition', 'compound'), ('  ', 'dobj'), ('data', 'compound'), (' ', 'pobj'), ('learning', 'acl'), (' ', 'dobj'), ('training', 'nsubj'), ('set', 'xcomp'), (' ', 'dobj'), ('black', 'amod'), ('-', 'punct'), ('box', 'compound'), (' ', 'compound'), ('machine', 'compound'), (' ', 'compound'), ('hypothesis', 'compound'), ('  ', 'punct'), ('class', 'compound'), (' ', 'dobj'), ('(', 'punct'), (')', 'punct')]

>> Bigrams: 
[[T,  ], [ , ]], [],   ], [  , 5], [5,   ], [  , N], [N, ov], [ov,   ], [  , 2], [2, 01], [01,  ], [ , 8], [8,    ], [   , acquisition], [acquisition,   ], [  , domain], [domain,   ], [  , knowledge], [knowledge,  ], [ , algorithm], [algorithm,   ], [  , development], [development,  ], [ , physics], [physics, -], [-, based], [based,   ], [  , mathematical], [mathematical, model], [model,  ], [ , algorithm], [algorithm,   ], [  , performance], [performance,   ], [  , guarantees], [guarantees,  ], [ , acquisition], [acquisition,   ], [  , data], [data,  ], [ , learning], [learning,  ], [ , training], [training, set], [set,  ], [ , black], [black, -], [-, box], [box,  ], [ , machine], [machine,  ], [ , hypothesis], [hypothesis,   ], [  , class], [class,  ], [ , (], [(, )]]

>> Trigrams: 
[[T,  , ]], [ , ],   ], [],   , 5], [  , 5,   ], [5,   , N], [  , N, ov], [N, ov,   ], [ov,   , 2], [  , 2, 01], [2, 01,  ], [01,  , 8], [ , 8,    ], [8,    , acquisition], [   , acquisition,   ], [acquisition,   , domain], [  , domain,   ], [domain,   , knowledge], [  , knowledge,  ], [knowledge,  , algorithm], [ , algorithm,   ], [algorithm,   , development], [  , development,  ], [development,  , physics], [ , physics, -], [physics, -, based], [-, based,   ], [based,   , mathematical], [  , mathematical, model], [mathematical, model,  ], [model,  , algorithm], [ , algorithm,   ], [algorithm,   , performance], [  , performance,   ], [performance,   , guarantees], [  , guarantees,  ], [guarantees,  , acquisition], [ , acquisition,   ], [acquisition,   , data], [  , data,  ], [data,  , learning], [ , learning,  ], [learning,  , training], [ , training, set], [training, set,  ], [set,  , black], [ , black, -], [black, -, box], [-, box,  ], [box,  , machine], [ , machine,  ], [machine,  , hypothesis], [ , hypothesis,   ], [hypothesis,   , class], [  , class,  ], [class,  , (], [ , (, )]]

>> Noun Phrases are: 
[domain,   knowledge, algorithm,   development  physics-based   mathematical model, algorithm,   performance, training]

>> Named Entities are: 
[('5', 'CARDINAL'), ('2 01', 'TIME'), ('8', 'CARDINAL')]


============================ Sentence 37 =============================

 (b)   


>> Tokens are: 
[ , (, b, ),  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('(', 'PUNCT'), ('b', 'X'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('(', 'punct'), ('b', 'appos'), (')', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[ , (], [(, b], [b, )], [),  ]]

>> Trigrams: 
[[ , (, b], [(, b, )], [b, ),  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 38 =============================

Fig. 


>> Tokens are: 
[Fig, .] 

>> PoS Tags are: 
[('Fig', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Fig', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Fig, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 39 =============================

1. 


>> Tokens are: 
[1, .] 

>> PoS Tags are: 
[('1', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[1, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 40 =============================

(a) Conventional engineering design flow; and (b) baseline machine learning methodology. 


>> Tokens are: 
[(, ), Conventional, engineering, design, flow, ;, (, b, ), baseline, machine, learning, methodology, .] 

>> PoS Tags are: 
[('(', 'PUNCT'), (')', 'PUNCT'), ('Conventional', 'ADJ'), ('engineering', 'NOUN'), ('design', 'NOUN'), ('flow', 'NOUN'), (';', 'PUNCT'), ('(', 'PUNCT'), ('b', 'X'), (')', 'PUNCT'), ('baseline', 'ADJ'), ('machine', 'NOUN'), ('learning', 'VERB'), ('methodology', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), (')', 'punct'), ('Conventional', 'amod'), ('engineering', 'compound'), ('design', 'compound'), ('flow', 'ROOT'), (';', 'punct'), ('(', 'punct'), ('b', 'meta'), (')', 'punct'), ('baseline', 'amod'), ('machine', 'npadvmod'), ('learning', 'acl'), ('methodology', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[(, )], [), Conventional], [Conventional, engineering], [engineering, design], [design, flow], [flow, ;], [;, (], [(, b], [b, )], [), baseline], [baseline, machine], [machine, learning], [learning, methodology], [methodology, .]]

>> Trigrams: 
[[(, ), Conventional], [), Conventional, engineering], [Conventional, engineering, design], [engineering, design, flow], [design, flow, ;], [flow, ;, (], [;, (, b], [(, b, )], [b, ), baseline], [), baseline, machine], [baseline, machine, learning], [machine, learning, methodology], [learning, methodology, .]]

>> Noun Phrases are: 
[(a) Conventional engineering design flow, methodology]

>> Named Entities are: 
[]


============================ Sentence 41 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 42 =============================

In contrast, in its most basic form, the machine learning approach substitutes the step of acquiring do- main knowledge with the potentially easier task of collecting a sufficiently large number of examples of desired behaviour for the algorithm of interest. 


>> Tokens are: 
[contrast, ,, basic, form, ,, machine, learning, approach, substitutes, step, acquiring, do-, main, knowledge, potentially, easier, task, collecting, sufficiently, large, number, examples, desired, behaviour, algorithm, interest, .] 

>> PoS Tags are: 
[('contrast', 'NOUN'), (',', 'PUNCT'), ('basic', 'ADJ'), ('form', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('learning', 'VERB'), ('approach', 'NOUN'), ('substitutes', 'VERB'), ('step', 'NOUN'), ('acquiring', 'VERB'), ('do-', 'X'), ('main', 'ADJ'), ('knowledge', 'NOUN'), ('potentially', 'ADV'), ('easier', 'ADJ'), ('task', 'NOUN'), ('collecting', 'VERB'), ('sufficiently', 'ADV'), ('large', 'ADJ'), ('number', 'NOUN'), ('examples', 'NOUN'), ('desired', 'VERB'), ('behaviour', 'NOUN'), ('algorithm', 'NOUN'), ('interest', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('contrast', 'pobj'), (',', 'punct'), ('basic', 'amod'), ('form', 'pobj'), (',', 'punct'), ('machine', 'compound'), ('learning', 'compound'), ('approach', 'nsubj'), ('substitutes', 'ROOT'), ('step', 'dobj'), ('acquiring', 'pcomp'), ('do-', 'nmod'), ('main', 'amod'), ('knowledge', 'dobj'), ('potentially', 'advmod'), ('easier', 'amod'), ('task', 'pobj'), ('collecting', 'pcomp'), ('sufficiently', 'advmod'), ('large', 'amod'), ('number', 'dobj'), ('examples', 'pobj'), ('desired', 'amod'), ('behaviour', 'pobj'), ('algorithm', 'pobj'), ('interest', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[contrast, ,], [,, basic], [basic, form], [form, ,], [,, machine], [machine, learning], [learning, approach], [approach, substitutes], [substitutes, step], [step, acquiring], [acquiring, do-], [do-, main], [main, knowledge], [knowledge, potentially], [potentially, easier], [easier, task], [task, collecting], [collecting, sufficiently], [sufficiently, large], [large, number], [number, examples], [examples, desired], [desired, behaviour], [behaviour, algorithm], [algorithm, interest], [interest, .]]

>> Trigrams: 
[[contrast, ,, basic], [,, basic, form], [basic, form, ,], [form, ,, machine], [,, machine, learning], [machine, learning, approach], [learning, approach, substitutes], [approach, substitutes, step], [substitutes, step, acquiring], [step, acquiring, do-], [acquiring, do-, main], [do-, main, knowledge], [main, knowledge, potentially], [knowledge, potentially, easier], [potentially, easier, task], [easier, task, collecting], [task, collecting, sufficiently], [collecting, sufficiently, large], [sufficiently, large, number], [large, number, examples], [number, examples, desired], [examples, desired, behaviour], [desired, behaviour, algorithm], [behaviour, algorithm, interest], [algorithm, interest, .]]

>> Noun Phrases are: 
[contrast, its most basic form, the machine learning approach, the step, do- main knowledge, the potentially easier task, a sufficiently large number, examples, desired behaviour, the algorithm, interest]

>> Named Entities are: 
[]


============================ Sentence 43 =============================

These examples constitute the training set. 


>> Tokens are: 
[examples, constitute, training, set, .] 

>> PoS Tags are: 
[('examples', 'NOUN'), ('constitute', 'VERB'), ('training', 'NOUN'), ('set', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('examples', 'nsubj'), ('constitute', 'ROOT'), ('training', 'compound'), ('set', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[examples, constitute], [constitute, training], [training, set], [set, .]]

>> Trigrams: 
[[examples, constitute, training], [constitute, training, set], [training, set, .]]

>> Noun Phrases are: 
[These examples, the training set]

>> Named Entities are: 
[]


============================ Sentence 44 =============================

As seen in Fig. 1(b), the examples in the training set are fed to a learning algorithm to produce a trained “machine” that carries out the desired task. 


>> Tokens are: 
[seen, Fig, ., 1(b, ), ,, examples, training, set, fed, learning, algorithm, produce, trained, “, machine, ”, carries, desired, task, .] 

>> PoS Tags are: 
[('seen', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT'), ('1(b', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('examples', 'NOUN'), ('training', 'NOUN'), ('set', 'NOUN'), ('fed', 'VERB'), ('learning', 'VERB'), ('algorithm', 'NOUN'), ('produce', 'VERB'), ('trained', 'VERB'), ('“', 'PUNCT'), ('machine', 'NOUN'), ('”', 'PUNCT'), ('carries', 'VERB'), ('desired', 'VERB'), ('task', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('seen', 'advcl'), ('Fig', 'pobj'), ('.', 'punct'), ('1(b', 'npadvmod'), (')', 'punct'), (',', 'punct'), ('examples', 'nsubjpass'), ('training', 'compound'), ('set', 'pobj'), ('fed', 'ROOT'), ('learning', 'amod'), ('algorithm', 'pobj'), ('produce', 'advcl'), ('trained', 'amod'), ('“', 'punct'), ('machine', 'dobj'), ('”', 'punct'), ('carries', 'relcl'), ('desired', 'amod'), ('task', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[seen, Fig], [Fig, .], [., 1(b], [1(b, )], [), ,], [,, examples], [examples, training], [training, set], [set, fed], [fed, learning], [learning, algorithm], [algorithm, produce], [produce, trained], [trained, “], [“, machine], [machine, ”], [”, carries], [carries, desired], [desired, task], [task, .]]

>> Trigrams: 
[[seen, Fig, .], [Fig, ., 1(b], [., 1(b, )], [1(b, ), ,], [), ,, examples], [,, examples, training], [examples, training, set], [training, set, fed], [set, fed, learning], [fed, learning, algorithm], [learning, algorithm, produce], [algorithm, produce, trained], [produce, trained, “], [trained, “, machine], [“, machine, ”], [machine, ”, carries], [”, carries, desired], [carries, desired, task], [desired, task, .]]

>> Noun Phrases are: 
[Fig, the examples, the training set, a learning algorithm, a trained “machine, the desired task]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 45 =============================

Learning is made possible by the choice of a set of possible “machines”, also known as the hypothesis class, from which the learning algorithm makes a selection during training. 


>> Tokens are: 
[Learning, possible, choice, set, possible, “, machines, ”, ,, known, hypothesis, class, ,, learning, algorithm, makes, selection, training, .] 

>> PoS Tags are: 
[('Learning', 'NOUN'), ('possible', 'ADJ'), ('choice', 'NOUN'), ('set', 'NOUN'), ('possible', 'ADJ'), ('“', 'PUNCT'), ('machines', 'NOUN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('known', 'VERB'), ('hypothesis', 'NOUN'), ('class', 'NOUN'), (',', 'PUNCT'), ('learning', 'NOUN'), ('algorithm', 'NOUN'), ('makes', 'VERB'), ('selection', 'NOUN'), ('training', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Learning', 'nsubjpass'), ('possible', 'oprd'), ('choice', 'pobj'), ('set', 'pobj'), ('possible', 'amod'), ('“', 'punct'), ('machines', 'pobj'), ('”', 'punct'), (',', 'punct'), ('known', 'advcl'), ('hypothesis', 'compound'), ('class', 'pobj'), (',', 'punct'), ('learning', 'amod'), ('algorithm', 'nsubj'), ('makes', 'relcl'), ('selection', 'dobj'), ('training', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Learning, possible], [possible, choice], [choice, set], [set, possible], [possible, “], [“, machines], [machines, ”], [”, ,], [,, known], [known, hypothesis], [hypothesis, class], [class, ,], [,, learning], [learning, algorithm], [algorithm, makes], [makes, selection], [selection, training], [training, .]]

>> Trigrams: 
[[Learning, possible, choice], [possible, choice, set], [choice, set, possible], [set, possible, “], [possible, “, machines], [“, machines, ”], [machines, ”, ,], [”, ,, known], [,, known, hypothesis], [known, hypothesis, class], [hypothesis, class, ,], [class, ,, learning], [,, learning, algorithm], [learning, algorithm, makes], [algorithm, makes, selection], [makes, selection, training], [selection, training, .]]

>> Noun Phrases are: 
[Learning, the choice, a set, possible “machines, the hypothesis class, the learning algorithm, a selection, training]

>> Named Entities are: 
[]


============================ Sentence 46 =============================

An example of an hypothesis class is given by a neural network architecture with learnable synaptic weights. 


>> Tokens are: 
[example, hypothesis, class, given, neural, network, architecture, learnable, synaptic, weights, .] 

>> PoS Tags are: 
[('example', 'NOUN'), ('hypothesis', 'NOUN'), ('class', 'NOUN'), ('given', 'VERB'), ('neural', 'ADJ'), ('network', 'NOUN'), ('architecture', 'NOUN'), ('learnable', 'ADJ'), ('synaptic', 'ADJ'), ('weights', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'nsubjpass'), ('hypothesis', 'compound'), ('class', 'pobj'), ('given', 'ROOT'), ('neural', 'amod'), ('network', 'compound'), ('architecture', 'pobj'), ('learnable', 'amod'), ('synaptic', 'amod'), ('weights', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[example, hypothesis], [hypothesis, class], [class, given], [given, neural], [neural, network], [network, architecture], [architecture, learnable], [learnable, synaptic], [synaptic, weights], [weights, .]]

>> Trigrams: 
[[example, hypothesis, class], [hypothesis, class, given], [class, given, neural], [given, neural, network], [neural, network, architecture], [network, architecture, learnable], [architecture, learnable, synaptic], [learnable, synaptic, weights], [synaptic, weights, .]]

>> Noun Phrases are: 
[An example, an hypothesis class, a neural network architecture, learnable synaptic weights]

>> Named Entities are: 
[]


============================ Sentence 47 =============================

Learning algorithms are generally based on the optimization of a performance criterion that measures how well the selected “machine” matches the available data. 


>> Tokens are: 
[Learning, algorithms, generally, based, optimization, performance, criterion, measures, selected, “, machine, ”, matches, available, data, .] 

>> PoS Tags are: 
[('Learning', 'VERB'), ('algorithms', 'NOUN'), ('generally', 'ADV'), ('based', 'VERB'), ('optimization', 'NOUN'), ('performance', 'NOUN'), ('criterion', 'NOUN'), ('measures', 'VERB'), ('selected', 'VERB'), ('“', 'PUNCT'), ('machine', 'NOUN'), ('”', 'PUNCT'), ('matches', 'VERB'), ('available', 'ADJ'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Learning', 'compound'), ('algorithms', 'nsubjpass'), ('generally', 'advmod'), ('based', 'ROOT'), ('optimization', 'pobj'), ('performance', 'compound'), ('criterion', 'pobj'), ('measures', 'relcl'), ('selected', 'amod'), ('“', 'punct'), ('machine', 'nsubj'), ('”', 'punct'), ('matches', 'ccomp'), ('available', 'amod'), ('data', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Learning, algorithms], [algorithms, generally], [generally, based], [based, optimization], [optimization, performance], [performance, criterion], [criterion, measures], [measures, selected], [selected, “], [“, machine], [machine, ”], [”, matches], [matches, available], [available, data], [data, .]]

>> Trigrams: 
[[Learning, algorithms, generally], [algorithms, generally, based], [generally, based, optimization], [based, optimization, performance], [optimization, performance, criterion], [performance, criterion, measures], [criterion, measures, selected], [measures, selected, “], [selected, “, machine], [“, machine, ”], [machine, ”, matches], [”, matches, available], [matches, available, data], [available, data, .]]

>> Noun Phrases are: 
[Learning algorithms, the optimization, a performance criterion, the selected “machine, the available data]

>> Named Entities are: 
[]


============================ Sentence 48 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 49 =============================

For the problem of designing a channel decoder, a machine learning approach can hence operate even in the absence of a well-established channel model. 


>> Tokens are: 
[problem, designing, channel, decoder, ,, machine, learning, approach, operate, absence, -, established, channel, model, .] 

>> PoS Tags are: 
[('problem', 'NOUN'), ('designing', 'VERB'), ('channel', 'NOUN'), ('decoder', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('approach', 'NOUN'), ('operate', 'VERB'), ('absence', 'NOUN'), ('-', 'PUNCT'), ('established', 'VERB'), ('channel', 'NOUN'), ('model', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('problem', 'pobj'), ('designing', 'pcomp'), ('channel', 'compound'), ('decoder', 'dobj'), (',', 'punct'), ('machine', 'compound'), ('learning', 'compound'), ('approach', 'nsubj'), ('operate', 'ROOT'), ('absence', 'pobj'), ('-', 'punct'), ('established', 'amod'), ('channel', 'compound'), ('model', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[problem, designing], [designing, channel], [channel, decoder], [decoder, ,], [,, machine], [machine, learning], [learning, approach], [approach, operate], [operate, absence], [absence, -], [-, established], [established, channel], [channel, model], [model, .]]

>> Trigrams: 
[[problem, designing, channel], [designing, channel, decoder], [channel, decoder, ,], [decoder, ,, machine], [,, machine, learning], [machine, learning, approach], [learning, approach, operate], [approach, operate, absence], [operate, absence, -], [absence, -, established], [-, established, channel], [established, channel, model], [channel, model, .]]

>> Noun Phrases are: 
[the problem, a channel decoder, a machine learning approach, the absence, a well-established channel model]

>> Named Entities are: 
[]


============================ Sentence 50 =============================

It is in fact enough to have a sufficiently large number of examples of received signals – the inputs to the decoding machine – and transmitted messages – the desired outputs of the decoding machine – to be used for the training of a given class of decoding functions [13]. 


>> Tokens are: 
[fact, sufficiently, large, number, examples, received, signals, –, inputs, decoding, machine, –, transmitted, messages, –, desired, outputs, decoding, machine, –, training, given, class, decoding, functions, [, 13, ], .] 

>> PoS Tags are: 
[('fact', 'NOUN'), ('sufficiently', 'ADV'), ('large', 'ADJ'), ('number', 'NOUN'), ('examples', 'NOUN'), ('received', 'VERB'), ('signals', 'NOUN'), ('–', 'PUNCT'), ('inputs', 'NOUN'), ('decoding', 'VERB'), ('machine', 'NOUN'), ('–', 'PUNCT'), ('transmitted', 'VERB'), ('messages', 'NOUN'), ('–', 'PUNCT'), ('desired', 'VERB'), ('outputs', 'NOUN'), ('decoding', 'VERB'), ('machine', 'NOUN'), ('–', 'PUNCT'), ('training', 'NOUN'), ('given', 'VERB'), ('class', 'NOUN'), ('decoding', 'VERB'), ('functions', 'NOUN'), ('[', 'PUNCT'), ('13', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('fact', 'pobj'), ('sufficiently', 'advmod'), ('large', 'amod'), ('number', 'dobj'), ('examples', 'pobj'), ('received', 'amod'), ('signals', 'pobj'), ('–', 'punct'), ('inputs', 'appos'), ('decoding', 'amod'), ('machine', 'pobj'), ('–', 'punct'), ('transmitted', 'conj'), ('messages', 'dobj'), ('–', 'punct'), ('desired', 'amod'), ('outputs', 'appos'), ('decoding', 'amod'), ('machine', 'pobj'), ('–', 'punct'), ('training', 'pobj'), ('given', 'amod'), ('class', 'pobj'), ('decoding', 'amod'), ('functions', 'pobj'), ('[', 'punct'), ('13', 'attr'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[fact, sufficiently], [sufficiently, large], [large, number], [number, examples], [examples, received], [received, signals], [signals, –], [–, inputs], [inputs, decoding], [decoding, machine], [machine, –], [–, transmitted], [transmitted, messages], [messages, –], [–, desired], [desired, outputs], [outputs, decoding], [decoding, machine], [machine, –], [–, training], [training, given], [given, class], [class, decoding], [decoding, functions], [functions, [], [[, 13], [13, ]], [], .]]

>> Trigrams: 
[[fact, sufficiently, large], [sufficiently, large, number], [large, number, examples], [number, examples, received], [examples, received, signals], [received, signals, –], [signals, –, inputs], [–, inputs, decoding], [inputs, decoding, machine], [decoding, machine, –], [machine, –, transmitted], [–, transmitted, messages], [transmitted, messages, –], [messages, –, desired], [–, desired, outputs], [desired, outputs, decoding], [outputs, decoding, machine], [decoding, machine, –], [machine, –, training], [–, training, given], [training, given, class], [given, class, decoding], [class, decoding, functions], [decoding, functions, [], [functions, [, 13], [[, 13, ]], [13, ], .]]

>> Noun Phrases are: 
[It, fact, a sufficiently large number, examples, received signals, the inputs, the decoding machine, messages, the desired outputs, the decoding machine, the training, a given class, decoding functions]

>> Named Entities are: 
[('13', 'CARDINAL')]


============================ Sentence 51 =============================

 acquisition   of domain   knowledge  acquisition   of data  learning  training set   machine  hypothesis   class   


>> Tokens are: 
[ , acquisition,   , domain,   , knowledge,  , acquisition,   , data,  , learning,  , training, set,   , machine,  , hypothesis,   , class,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('acquisition', 'NOUN'), ('  ', 'SPACE'), ('domain', 'NOUN'), ('  ', 'SPACE'), ('knowledge', 'NOUN'), (' ', 'SPACE'), ('acquisition', 'NOUN'), ('  ', 'SPACE'), ('data', 'NOUN'), (' ', 'SPACE'), ('learning', 'VERB'), (' ', 'SPACE'), ('training', 'NOUN'), ('set', 'VERB'), ('  ', 'SPACE'), ('machine', 'NOUN'), (' ', 'SPACE'), ('hypothesis', 'NOUN'), ('  ', 'SPACE'), ('class', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('acquisition', 'compound'), ('  ', 'ROOT'), ('domain', 'pobj'), ('  ', 'nummod'), ('knowledge', 'compound'), (' ', 'compound'), ('acquisition', 'compound'), ('  ', 'appos'), ('data', 'compound'), (' ', 'pobj'), ('learning', 'acl'), (' ', 'dobj'), ('training', 'conj'), ('set', 'acl'), ('  ', 'nummod'), ('machine', 'dobj'), (' ', 'punct'), ('hypothesis', 'compound'), ('  ', 'compound'), ('class', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[ , acquisition], [acquisition,   ], [  , domain], [domain,   ], [  , knowledge], [knowledge,  ], [ , acquisition], [acquisition,   ], [  , data], [data,  ], [ , learning], [learning,  ], [ , training], [training, set], [set,   ], [  , machine], [machine,  ], [ , hypothesis], [hypothesis,   ], [  , class], [class,  ]]

>> Trigrams: 
[[ , acquisition,   ], [acquisition,   , domain], [  , domain,   ], [domain,   , knowledge], [  , knowledge,  ], [knowledge,  , acquisition], [ , acquisition,   ], [acquisition,   , data], [  , data,  ], [data,  , learning], [ , learning,  ], [learning,  , training], [ , training, set], [training, set,   ], [set,   , machine], [  , machine,  ], [machine,  , hypothesis], [ , hypothesis,   ], [hypothesis,   , class], [  , class,  ]]

>> Noun Phrases are: 
[domain, training,   machine, hypothesis   class]

>> Named Entities are: 
[]


============================ Sentence 52 =============================

Fig. 


>> Tokens are: 
[Fig, .] 

>> PoS Tags are: 
[('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Fig', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Fig, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 53 =============================

2. 


>> Tokens are: 
[2, .] 

>> PoS Tags are: 
[('2', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('2', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[2, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 54 =============================

Machine learning methodology that integrates domain knowl- edge during model selection. 


>> Tokens are: 
[Machine, learning, methodology, integrates, domain, knowl-, edge, model, selection, .] 

>> PoS Tags are: 
[('Machine', 'NOUN'), ('learning', 'NOUN'), ('methodology', 'NOUN'), ('integrates', 'VERB'), ('domain', 'VERB'), ('knowl-', 'ADJ'), ('edge', 'NOUN'), ('model', 'NOUN'), ('selection', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Machine', 'compound'), ('learning', 'ROOT'), ('methodology', 'dobj'), ('integrates', 'relcl'), ('domain', 'xcomp'), ('knowl-', 'compound'), ('edge', 'dobj'), ('model', 'compound'), ('selection', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Machine, learning], [learning, methodology], [methodology, integrates], [integrates, domain], [domain, knowl-], [knowl-, edge], [edge, model], [model, selection], [selection, .]]

>> Trigrams: 
[[Machine, learning, methodology], [learning, methodology, integrates], [methodology, integrates, domain], [integrates, domain, knowl-], [domain, knowl-, edge], [knowl-, edge, model], [edge, model, selection], [model, selection, .]]

>> Noun Phrases are: 
[Machine learning, methodology, knowl- edge, model selection]

>> Named Entities are: 
[]


============================ Sentence 55 =============================

 Moving beyond the basic formulation described above 


>> Tokens are: 
[ , Moving, basic, formulation, described] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Moving', 'VERB'), ('basic', 'ADJ'), ('formulation', 'NOUN'), ('described', 'VERB')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('Moving', 'acl'), ('basic', 'amod'), ('formulation', 'pobj'), ('described', 'acl')]

>> Bigrams: 
[[ , Moving], [Moving, basic], [basic, formulation], [formulation, described]]

>> Trigrams: 
[[ , Moving, basic], [Moving, basic, formulation], [basic, formulation, described]]

>> Noun Phrases are: 
[the basic formulation]

>> Named Entities are: 
[]


============================ Sentence 56 =============================

, machine learning tools can integrate available domain knowledge in the learning process. 


>> Tokens are: 
[,, machine, learning, tools, integrate, available, domain, knowledge, learning, process, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('tools', 'NOUN'), ('integrate', 'VERB'), ('available', 'ADJ'), ('domain', 'NOUN'), ('knowledge', 'NOUN'), ('learning', 'NOUN'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('machine', 'compound'), ('learning', 'compound'), ('tools', 'nsubj'), ('integrate', 'ROOT'), ('available', 'amod'), ('domain', 'compound'), ('knowledge', 'dobj'), ('learning', 'compound'), ('process', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[,, machine], [machine, learning], [learning, tools], [tools, integrate], [integrate, available], [available, domain], [domain, knowledge], [knowledge, learning], [learning, process], [process, .]]

>> Trigrams: 
[[,, machine, learning], [machine, learning, tools], [learning, tools, integrate], [tools, integrate, available], [integrate, available, domain], [available, domain, knowledge], [domain, knowledge, learning], [knowledge, learning, process], [learning, process, .]]

>> Noun Phrases are: 
[machine learning tools, available domain knowledge, the learning process]

>> Named Entities are: 
[]


============================ Sentence 57 =============================

This is indeed the key to the success of machine learning tools in a number of applications. 


>> Tokens are: 
[key, success, machine, learning, tools, number, applications, .] 

>> PoS Tags are: 
[('key', 'NOUN'), ('success', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('tools', 'NOUN'), ('number', 'NOUN'), ('applications', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('key', 'attr'), ('success', 'pobj'), ('machine', 'compound'), ('learning', 'compound'), ('tools', 'pobj'), ('number', 'pobj'), ('applications', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[key, success], [success, machine], [machine, learning], [learning, tools], [tools, number], [number, applications], [applications, .]]

>> Trigrams: 
[[key, success, machine], [success, machine, learning], [machine, learning, tools], [learning, tools, number], [tools, number, applications], [number, applications, .]]

>> Noun Phrases are: 
[the key, the success, machine learning tools, a number, applications]

>> Named Entities are: 
[]


============================ Sentence 58 =============================

A notable example is image processing, whereby knowledge of the translational invariance of vi- sual features is reflected in the adoption of convolutional neural networks as the hypothesis class to be trained. 


>> Tokens are: 
[notable, example, image, processing, ,, knowledge, translational, invariance, vi-, sual, features, reflected, adoption, convolutional, neural, networks, hypothesis, class, trained, .] 

>> PoS Tags are: 
[('notable', 'ADJ'), ('example', 'NOUN'), ('image', 'NOUN'), ('processing', 'NOUN'), (',', 'PUNCT'), ('knowledge', 'NOUN'), ('translational', 'ADJ'), ('invariance', 'NOUN'), ('vi-', 'NOUN'), ('sual', 'ADJ'), ('features', 'NOUN'), ('reflected', 'VERB'), ('adoption', 'NOUN'), ('convolutional', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('hypothesis', 'NOUN'), ('class', 'NOUN'), ('trained', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('notable', 'amod'), ('example', 'nsubj'), ('image', 'compound'), ('processing', 'attr'), (',', 'punct'), ('knowledge', 'nsubjpass'), ('translational', 'amod'), ('invariance', 'pobj'), ('vi-', 'nmod'), ('sual', 'amod'), ('features', 'pobj'), ('reflected', 'relcl'), ('adoption', 'pobj'), ('convolutional', 'amod'), ('neural', 'amod'), ('networks', 'pobj'), ('hypothesis', 'compound'), ('class', 'nsubjpass'), ('trained', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[notable, example], [example, image], [image, processing], [processing, ,], [,, knowledge], [knowledge, translational], [translational, invariance], [invariance, vi-], [vi-, sual], [sual, features], [features, reflected], [reflected, adoption], [adoption, convolutional], [convolutional, neural], [neural, networks], [networks, hypothesis], [hypothesis, class], [class, trained], [trained, .]]

>> Trigrams: 
[[notable, example, image], [example, image, processing], [image, processing, ,], [processing, ,, knowledge], [,, knowledge, translational], [knowledge, translational, invariance], [translational, invariance, vi-], [invariance, vi-, sual], [vi-, sual, features], [sual, features, reflected], [features, reflected, adoption], [reflected, adoption, convolutional], [adoption, convolutional, neural], [convolutional, neural, networks], [neural, networks, hypothesis], [networks, hypothesis, class], [hypothesis, class, trained], [class, trained, .]]

>> Noun Phrases are: 
[A notable example, image processing, knowledge, the translational invariance, vi- sual features, the adoption, convolutional neural networks, the hypothesis class]

>> Named Entities are: 
[]


============================ Sentence 59 =============================

More generally, as illustrated in Fig. 


>> Tokens are: 
[generally, ,, illustrated, Fig, .] 

>> PoS Tags are: 
[('generally', 'ADV'), (',', 'PUNCT'), ('illustrated', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('generally', 'advmod'), (',', 'punct'), ('illustrated', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[generally, ,], [,, illustrated], [illustrated, Fig], [Fig, .]]

>> Trigrams: 
[[generally, ,, illustrated], [,, illustrated, Fig], [illustrated, Fig, .]]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 60 =============================

2, domain knowl- edge can dictate the choice of a specific hypothesis class for use in the training process. 


>> Tokens are: 
[2, ,, domain, knowl-, edge, dictate, choice, specific, hypothesis, class, use, training, process, .] 

>> PoS Tags are: 
[('2', 'NUM'), (',', 'PUNCT'), ('domain', 'VERB'), ('knowl-', 'ADJ'), ('edge', 'NOUN'), ('dictate', 'VERB'), ('choice', 'NOUN'), ('specific', 'ADJ'), ('hypothesis', 'NOUN'), ('class', 'NOUN'), ('use', 'NOUN'), ('training', 'NOUN'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('2', 'dep'), (',', 'punct'), ('domain', 'csubj'), ('knowl-', 'compound'), ('edge', 'dobj'), ('dictate', 'ROOT'), ('choice', 'dobj'), ('specific', 'amod'), ('hypothesis', 'compound'), ('class', 'pobj'), ('use', 'pobj'), ('training', 'compound'), ('process', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[2, ,], [,, domain], [domain, knowl-], [knowl-, edge], [edge, dictate], [dictate, choice], [choice, specific], [specific, hypothesis], [hypothesis, class], [class, use], [use, training], [training, process], [process, .]]

>> Trigrams: 
[[2, ,, domain], [,, domain, knowl-], [domain, knowl-, edge], [knowl-, edge, dictate], [edge, dictate, choice], [dictate, choice, specific], [choice, specific, hypothesis], [specific, hypothesis, class], [hypothesis, class, use], [class, use, training], [use, training, process], [training, process, .]]

>> Noun Phrases are: 
[knowl- edge, the choice, a specific hypothesis class, use, the training process]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 61 =============================

Examples of applications of this idea to communication systems, including to the problem of decoding, will be discussed later in the paper. 


>> Tokens are: 
[Examples, applications, idea, communication, systems, ,, including, problem, decoding, ,, discussed, later, paper, .] 

>> PoS Tags are: 
[('Examples', 'NOUN'), ('applications', 'NOUN'), ('idea', 'NOUN'), ('communication', 'NOUN'), ('systems', 'NOUN'), (',', 'PUNCT'), ('including', 'VERB'), ('problem', 'NOUN'), ('decoding', 'VERB'), (',', 'PUNCT'), ('discussed', 'VERB'), ('later', 'ADV'), ('paper', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Examples', 'nsubjpass'), ('applications', 'pobj'), ('idea', 'pobj'), ('communication', 'compound'), ('systems', 'pobj'), (',', 'punct'), ('including', 'prep'), ('problem', 'pobj'), ('decoding', 'pcomp'), (',', 'punct'), ('discussed', 'ROOT'), ('later', 'advmod'), ('paper', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Examples, applications], [applications, idea], [idea, communication], [communication, systems], [systems, ,], [,, including], [including, problem], [problem, decoding], [decoding, ,], [,, discussed], [discussed, later], [later, paper], [paper, .]]

>> Trigrams: 
[[Examples, applications, idea], [applications, idea, communication], [idea, communication, systems], [communication, systems, ,], [systems, ,, including], [,, including, problem], [including, problem, decoding], [problem, decoding, ,], [decoding, ,, discussed], [,, discussed, later], [discussed, later, paper], [later, paper, .]]

>> Noun Phrases are: 
[Examples, applications, this idea, communication systems, the problem, the paper]

>> Named Entities are: 
[]


============================ Sentence 62 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 63 =============================

B. Taxonomy of Machine Learning Methods   


>> Tokens are: 
[B., Taxonomy, Machine, Learning, Methods,  ] 

>> PoS Tags are: 
[('B.', 'PROPN'), ('Taxonomy', 'PROPN'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('Methods', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('B.', 'compound'), ('Taxonomy', 'ROOT'), ('Machine', 'compound'), ('Learning', 'compound'), ('Methods', 'pobj'), (' ', 'appos')]

>> Bigrams: 
[[B., Taxonomy], [Taxonomy, Machine], [Machine, Learning], [Learning, Methods], [Methods,  ]]

>> Trigrams: 
[[B., Taxonomy, Machine], [Taxonomy, Machine, Learning], [Machine, Learning, Methods], [Learning, Methods,  ]]

>> Noun Phrases are: 
[B. Taxonomy, Machine Learning Methods]

>> Named Entities are: 
[]


============================ Sentence 64 =============================

There are three main classes of machine learning techniques, as discussed next. 


>> Tokens are: 
[main, classes, machine, learning, techniques, ,, discussed, .] 

>> PoS Tags are: 
[('main', 'ADJ'), ('classes', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('techniques', 'NOUN'), (',', 'PUNCT'), ('discussed', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('main', 'amod'), ('classes', 'attr'), ('machine', 'compound'), ('learning', 'compound'), ('techniques', 'pobj'), (',', 'punct'), ('discussed', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[main, classes], [classes, machine], [machine, learning], [learning, techniques], [techniques, ,], [,, discussed], [discussed, .]]

>> Trigrams: 
[[main, classes, machine], [classes, machine, learning], [machine, learning, techniques], [learning, techniques, ,], [techniques, ,, discussed], [,, discussed, .]]

>> Noun Phrases are: 
[three main classes, machine learning techniques]

>> Named Entities are: 
[('three', 'CARDINAL')]


============================ Sentence 65 =============================

• Supervised learning: 


>> Tokens are: 
[•, Supervised, learning, :] 

>> PoS Tags are: 
[('•', 'PRON'), ('Supervised', 'ADJ'), ('learning', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('•', 'punct'), ('Supervised', 'amod'), ('learning', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[•, Supervised], [Supervised, learning], [learning, :]]

>> Trigrams: 
[[•, Supervised, learning], [Supervised, learning, :]]

>> Noun Phrases are: 
[• Supervised learning]

>> Named Entities are: 
[]


============================ Sentence 66 =============================

In supervised learning, the  training set consists of pairs of input and desired output, and the goal is that of learning a mapping between input and output spaces. 


>> Tokens are: 
[supervised, learning, ,,  , training, set, consists, pairs, input, desired, output, ,, goal, learning, mapping, input, output, spaces, .] 

>> PoS Tags are: 
[('supervised', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('training', 'NOUN'), ('set', 'NOUN'), ('consists', 'VERB'), ('pairs', 'NOUN'), ('input', 'NOUN'), ('desired', 'VERB'), ('output', 'NOUN'), (',', 'PUNCT'), ('goal', 'NOUN'), ('learning', 'VERB'), ('mapping', 'NOUN'), ('input', 'NOUN'), ('output', 'NOUN'), ('spaces', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('supervised', 'amod'), ('learning', 'pobj'), (',', 'punct'), (' ', 'compound'), ('training', 'compound'), ('set', 'nsubj'), ('consists', 'ROOT'), ('pairs', 'pobj'), ('input', 'pobj'), ('desired', 'conj'), ('output', 'dobj'), (',', 'punct'), ('goal', 'nsubj'), ('learning', 'pcomp'), ('mapping', 'dobj'), ('input', 'nmod'), ('output', 'conj'), ('spaces', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[supervised, learning], [learning, ,], [,,  ], [ , training], [training, set], [set, consists], [consists, pairs], [pairs, input], [input, desired], [desired, output], [output, ,], [,, goal], [goal, learning], [learning, mapping], [mapping, input], [input, output], [output, spaces], [spaces, .]]

>> Trigrams: 
[[supervised, learning, ,], [learning, ,,  ], [,,  , training], [ , training, set], [training, set, consists], [set, consists, pairs], [consists, pairs, input], [pairs, input, desired], [input, desired, output], [desired, output, ,], [output, ,, goal], [,, goal, learning], [goal, learning, mapping], [learning, mapping, input], [mapping, input, output], [input, output, spaces], [output, spaces, .]]

>> Noun Phrases are: 
[supervised learning, the  training set, pairs, input, output, the goal, a mapping, input and output spaces]

>> Named Entities are: 
[]


============================ Sentence 67 =============================

As an illustration, in Fig. 3(a), the inputs are points in the two- dimensional plane, the outputs are the labels as- signed to each input (circles or crosses), and the goal is to learn a binary classifier. 


>> Tokens are: 
[illustration, ,, Fig, ., 3(a, ), ,, inputs, points, two-, dimensional, plane, ,, outputs, labels, as-, signed, input, (, circles, crosses, ), ,, goal, learn, binary, classifier, .] 

>> PoS Tags are: 
[('illustration', 'NOUN'), (',', 'PUNCT'), ('Fig', 'PROPN'), ('.', 'PUNCT'), ('3(a', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('inputs', 'NOUN'), ('points', 'NOUN'), ('two-', 'ADV'), ('dimensional', 'ADJ'), ('plane', 'NOUN'), (',', 'PUNCT'), ('outputs', 'NOUN'), ('labels', 'NOUN'), ('as-', 'X'), ('signed', 'VERB'), ('input', 'NOUN'), ('(', 'PUNCT'), ('circles', 'NOUN'), ('crosses', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('goal', 'NOUN'), ('learn', 'VERB'), ('binary', 'ADJ'), ('classifier', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('illustration', 'pobj'), (',', 'punct'), ('Fig', 'pobj'), ('.', 'punct'), ('3(a', 'pobj'), (')', 'punct'), (',', 'punct'), ('inputs', 'nsubj'), ('points', 'attr'), ('two-', 'advmod'), ('dimensional', 'amod'), ('plane', 'pobj'), (',', 'punct'), ('outputs', 'nsubj'), ('labels', 'attr'), ('as-', 'nmod'), ('signed', 'acl'), ('input', 'pobj'), ('(', 'punct'), ('circles', 'appos'), ('crosses', 'conj'), (')', 'punct'), (',', 'punct'), ('goal', 'nsubj'), ('learn', 'xcomp'), ('binary', 'amod'), ('classifier', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[illustration, ,], [,, Fig], [Fig, .], [., 3(a], [3(a, )], [), ,], [,, inputs], [inputs, points], [points, two-], [two-, dimensional], [dimensional, plane], [plane, ,], [,, outputs], [outputs, labels], [labels, as-], [as-, signed], [signed, input], [input, (], [(, circles], [circles, crosses], [crosses, )], [), ,], [,, goal], [goal, learn], [learn, binary], [binary, classifier], [classifier, .]]

>> Trigrams: 
[[illustration, ,, Fig], [,, Fig, .], [Fig, ., 3(a], [., 3(a, )], [3(a, ), ,], [), ,, inputs], [,, inputs, points], [inputs, points, two-], [points, two-, dimensional], [two-, dimensional, plane], [dimensional, plane, ,], [plane, ,, outputs], [,, outputs, labels], [outputs, labels, as-], [labels, as-, signed], [as-, signed, input], [signed, input, (], [input, (, circles], [(, circles, crosses], [circles, crosses, )], [crosses, ), ,], [), ,, goal], [,, goal, learn], [goal, learn, binary], [learn, binary, classifier], [binary, classifier, .]]

>> Noun Phrases are: 
[an illustration, Fig, the inputs, points, the two- dimensional plane, the outputs, the labels, each input, circles, crosses, the goal, a binary classifier]

>> Named Entities are: 
[('Fig', 'PERSON'), ('3(a', 'CARDINAL')]


============================ Sentence 68 =============================

Applications include the channel decoder discussed above, as well as email spam classification on the basis of examples of spam/ non-spam emails. 


>> Tokens are: 
[Applications, include, channel, decoder, discussed, ,, email, spam, classification, basis, examples, spam/, non, -, spam, emails, .] 

>> PoS Tags are: 
[('Applications', 'NOUN'), ('include', 'VERB'), ('channel', 'NOUN'), ('decoder', 'NOUN'), ('discussed', 'VERB'), (',', 'PUNCT'), ('email', 'NOUN'), ('spam', 'VERB'), ('classification', 'NOUN'), ('basis', 'NOUN'), ('examples', 'NOUN'), ('spam/', 'PUNCT'), ('non', 'ADJ'), ('-', 'ADJ'), ('spam', 'ADJ'), ('emails', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Applications', 'nsubj'), ('include', 'ROOT'), ('channel', 'compound'), ('decoder', 'dobj'), ('discussed', 'acl'), (',', 'punct'), ('email', 'nsubj'), ('spam', 'dep'), ('classification', 'dobj'), ('basis', 'pobj'), ('examples', 'pobj'), ('spam/', 'punct'), ('non', 'amod'), ('-', 'amod'), ('spam', 'amod'), ('emails', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Applications, include], [include, channel], [channel, decoder], [decoder, discussed], [discussed, ,], [,, email], [email, spam], [spam, classification], [classification, basis], [basis, examples], [examples, spam/], [spam/, non], [non, -], [-, spam], [spam, emails], [emails, .]]

>> Trigrams: 
[[Applications, include, channel], [include, channel, decoder], [channel, decoder, discussed], [decoder, discussed, ,], [discussed, ,, email], [,, email, spam], [email, spam, classification], [spam, classification, basis], [classification, basis, examples], [basis, examples, spam/], [examples, spam/, non], [spam/, non, -], [non, -, spam], [-, spam, emails], [spam, emails, .]]

>> Noun Phrases are: 
[Applications, the channel decoder, email, classification, the basis, examples, spam/ non-spam emails]

>> Named Entities are: 
[]


============================ Sentence 69 =============================

 • Unsupervised learning: 


>> Tokens are: 
[ , •, Unsupervised, learning, :] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('•', 'VERB'), ('Unsupervised', 'PROPN'), ('learning', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'dep'), ('•', 'punct'), ('Unsupervised', 'compound'), ('learning', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[ , •], [•, Unsupervised], [Unsupervised, learning], [learning, :]]

>> Trigrams: 
[[ , •, Unsupervised], [•, Unsupervised, learning], [Unsupervised, learning, :]]

>> Noun Phrases are: 
[ • Unsupervised learning]

>> Named Entities are: 
[]


============================ Sentence 70 =============================

In unsupervised learning, the training set consists of unlabelled inputs, that is, of inputs without any assigned desired output. 


>> Tokens are: 
[unsupervised, learning, ,, training, set, consists, unlabelled, inputs, ,, ,, inputs, assigned, desired, output, .] 

>> PoS Tags are: 
[('unsupervised', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('training', 'NOUN'), ('set', 'NOUN'), ('consists', 'VERB'), ('unlabelled', 'ADJ'), ('inputs', 'NOUN'), (',', 'PUNCT'), (',', 'PUNCT'), ('inputs', 'NOUN'), ('assigned', 'VERB'), ('desired', 'VERB'), ('output', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('unsupervised', 'amod'), ('learning', 'pobj'), (',', 'punct'), ('training', 'compound'), ('set', 'nsubj'), ('consists', 'ROOT'), ('unlabelled', 'amod'), ('inputs', 'pobj'), (',', 'punct'), (',', 'punct'), ('inputs', 'pobj'), ('assigned', 'amod'), ('desired', 'amod'), ('output', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[unsupervised, learning], [learning, ,], [,, training], [training, set], [set, consists], [consists, unlabelled], [unlabelled, inputs], [inputs, ,], [,, ,], [,, inputs], [inputs, assigned], [assigned, desired], [desired, output], [output, .]]

>> Trigrams: 
[[unsupervised, learning, ,], [learning, ,, training], [,, training, set], [training, set, consists], [set, consists, unlabelled], [consists, unlabelled, inputs], [unlabelled, inputs, ,], [inputs, ,, ,], [,, ,, inputs], [,, inputs, assigned], [inputs, assigned, desired], [assigned, desired, output], [desired, output, .]]

>> Noun Phrases are: 
[unsupervised learning, the training set, unlabelled inputs, inputs, any assigned desired output]

>> Named Entities are: 
[]


============================ Sentence 71 =============================

For instance, in Fig. 3(b), the inputs are again points in the two-dimensional plane, but no indication is provided by the data about the corresponding de- sired output. 


>> Tokens are: 
[instance, ,, Fig, ., 3(b, ), ,, inputs, points, -, dimensional, plane, ,, indication, provided, data, corresponding, de-, sired, output, .] 

>> PoS Tags are: 
[('instance', 'NOUN'), (',', 'PUNCT'), ('Fig', 'PROPN'), ('.', 'PUNCT'), ('3(b', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('inputs', 'NOUN'), ('points', 'NOUN'), ('-', 'PUNCT'), ('dimensional', 'ADJ'), ('plane', 'NOUN'), (',', 'PUNCT'), ('indication', 'NOUN'), ('provided', 'VERB'), ('data', 'NOUN'), ('corresponding', 'VERB'), ('de-', 'X'), ('sired', 'VERB'), ('output', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('instance', 'pobj'), (',', 'punct'), ('Fig', 'pobj'), ('.', 'punct'), ('3(b', 'pobj'), (')', 'punct'), (',', 'punct'), ('inputs', 'nsubjpass'), ('points', 'ROOT'), ('-', 'punct'), ('dimensional', 'amod'), ('plane', 'pobj'), (',', 'punct'), ('indication', 'nsubjpass'), ('provided', 'conj'), ('data', 'pobj'), ('corresponding', 'amod'), ('de-', 'npadvmod'), ('sired', 'amod'), ('output', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[instance, ,], [,, Fig], [Fig, .], [., 3(b], [3(b, )], [), ,], [,, inputs], [inputs, points], [points, -], [-, dimensional], [dimensional, plane], [plane, ,], [,, indication], [indication, provided], [provided, data], [data, corresponding], [corresponding, de-], [de-, sired], [sired, output], [output, .]]

>> Trigrams: 
[[instance, ,, Fig], [,, Fig, .], [Fig, ., 3(b], [., 3(b, )], [3(b, ), ,], [), ,, inputs], [,, inputs, points], [inputs, points, -], [points, -, dimensional], [-, dimensional, plane], [dimensional, plane, ,], [plane, ,, indication], [,, indication, provided], [indication, provided, data], [provided, data, corresponding], [data, corresponding, de-], [corresponding, de-, sired], [de-, sired, output], [sired, output, .]]

>> Noun Phrases are: 
[instance, Fig, the inputs, the two-dimensional plane, no indication, the data, the corresponding de- sired output]

>> Named Entities are: 
[('Fig', 'PERSON'), ('3(b', 'CARDINAL'), ('two', 'CARDINAL')]


============================ Sentence 72 =============================

Unsupervised learning generally aims at discovering properties of the mechanism gen- erating the data. 


>> Tokens are: 
[Unsupervised, learning, generally, aims, discovering, properties, mechanism, gen-, erating, data, .] 

>> PoS Tags are: 
[('Unsupervised', 'PROPN'), ('learning', 'VERB'), ('generally', 'ADV'), ('aims', 'VERB'), ('discovering', 'VERB'), ('properties', 'NOUN'), ('mechanism', 'NOUN'), ('gen-', 'NOUN'), ('erating', 'VERB'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Unsupervised', 'compound'), ('learning', 'nsubj'), ('generally', 'advmod'), ('aims', 'ROOT'), ('discovering', 'pcomp'), ('properties', 'dobj'), ('mechanism', 'pobj'), ('gen-', 'appos'), ('erating', 'acl'), ('data', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Unsupervised, learning], [learning, generally], [generally, aims], [aims, discovering], [discovering, properties], [properties, mechanism], [mechanism, gen-], [gen-, erating], [erating, data], [data, .]]

>> Trigrams: 
[[Unsupervised, learning, generally], [learning, generally, aims], [generally, aims, discovering], [aims, discovering, properties], [discovering, properties, mechanism], [properties, mechanism, gen-], [mechanism, gen-, erating], [gen-, erating, data], [erating, data, .]]

>> Noun Phrases are: 
[properties, the mechanism, gen-, the data]

>> Named Entities are: 
[]


============================ Sentence 73 =============================

In the example of Fig. 3(b), the goal of unsupervised learning is to cluster together  2    input points that are close to each other, hence assigning a label – the cluster index – to each input point (clusters are delimited by dashed lines). 


>> Tokens are: 
[example, Fig, ., 3(b, ), ,, goal, unsupervised, learning, cluster,  , 2,    , input, points, close, ,, assigning, label, –, cluster, index, –, input, point, (, clusters, delimited, dashed, lines, ), .] 

>> PoS Tags are: 
[('example', 'NOUN'), ('Fig', 'PROPN'), ('.', 'PUNCT'), ('3(b', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('goal', 'NOUN'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('cluster', 'VERB'), (' ', 'SPACE'), ('2', 'NUM'), ('   ', 'SPACE'), ('input', 'NOUN'), ('points', 'NOUN'), ('close', 'ADJ'), (',', 'PUNCT'), ('assigning', 'VERB'), ('label', 'NOUN'), ('–', 'PUNCT'), ('cluster', 'NOUN'), ('index', 'NOUN'), ('–', 'PUNCT'), ('input', 'NOUN'), ('point', 'NOUN'), ('(', 'PUNCT'), ('clusters', 'NOUN'), ('delimited', 'VERB'), ('dashed', 'VERB'), ('lines', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), ('Fig', 'pobj'), ('.', 'punct'), ('3(b', 'pobj'), (')', 'punct'), (',', 'punct'), ('goal', 'nsubj'), ('unsupervised', 'amod'), ('learning', 'pobj'), ('cluster', 'xcomp'), (' ', 'dobj'), ('2', 'compound'), ('   ', 'nummod'), ('input', 'compound'), ('points', 'npadvmod'), ('close', 'acomp'), (',', 'punct'), ('assigning', 'advcl'), ('label', 'dobj'), ('–', 'punct'), ('cluster', 'compound'), ('index', 'appos'), ('–', 'punct'), ('input', 'compound'), ('point', 'pobj'), ('(', 'punct'), ('clusters', 'nsubjpass'), ('delimited', 'conj'), ('dashed', 'amod'), ('lines', 'pobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[example, Fig], [Fig, .], [., 3(b], [3(b, )], [), ,], [,, goal], [goal, unsupervised], [unsupervised, learning], [learning, cluster], [cluster,  ], [ , 2], [2,    ], [   , input], [input, points], [points, close], [close, ,], [,, assigning], [assigning, label], [label, –], [–, cluster], [cluster, index], [index, –], [–, input], [input, point], [point, (], [(, clusters], [clusters, delimited], [delimited, dashed], [dashed, lines], [lines, )], [), .]]

>> Trigrams: 
[[example, Fig, .], [Fig, ., 3(b], [., 3(b, )], [3(b, ), ,], [), ,, goal], [,, goal, unsupervised], [goal, unsupervised, learning], [unsupervised, learning, cluster], [learning, cluster,  ], [cluster,  , 2], [ , 2,    ], [2,    , input], [   , input, points], [input, points, close], [points, close, ,], [close, ,, assigning], [,, assigning, label], [assigning, label, –], [label, –, cluster], [–, cluster, index], [cluster, index, –], [index, –, input], [–, input, point], [input, point, (], [point, (, clusters], [(, clusters, delimited], [clusters, delimited, dashed], [delimited, dashed, lines], [dashed, lines, )], [lines, ), .]]

>> Noun Phrases are: 
[the example, Fig, the goal, unsupervised learning, a label, the cluster index, each input point, clusters, dashed lines]

>> Named Entities are: 
[('Fig', 'ORG'), ('3(b', 'CARDINAL'), ('2', 'CARDINAL')]


============================ Sentence 74 =============================

Applications include clustering of documents with similar topics. 


>> Tokens are: 
[Applications, include, clustering, documents, similar, topics, .] 

>> PoS Tags are: 
[('Applications', 'NOUN'), ('include', 'VERB'), ('clustering', 'NOUN'), ('documents', 'NOUN'), ('similar', 'ADJ'), ('topics', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Applications', 'nsubj'), ('include', 'ROOT'), ('clustering', 'dobj'), ('documents', 'pobj'), ('similar', 'amod'), ('topics', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Applications, include], [include, clustering], [clustering, documents], [documents, similar], [similar, topics], [topics, .]]

>> Trigrams: 
[[Applications, include, clustering], [include, clustering, documents], [clustering, documents, similar], [documents, similar, topics], [similar, topics, .]]

>> Noun Phrases are: 
[Applications, clustering, documents, similar topics]

>> Named Entities are: 
[]


============================ Sentence 75 =============================

It is emphasized that clustering is only one of the learning tasks that fall under the category of unsupervised learning (see Sec V). 


>> Tokens are: 
[emphasized, clustering, learning, tasks, fall, category, unsupervised, learning, (, Sec, V, ), .] 

>> PoS Tags are: 
[('emphasized', 'VERB'), ('clustering', 'NOUN'), ('learning', 'NOUN'), ('tasks', 'NOUN'), ('fall', 'VERB'), ('category', 'NOUN'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('(', 'PUNCT'), ('Sec', 'PROPN'), ('V', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('emphasized', 'ROOT'), ('clustering', 'nsubj'), ('learning', 'compound'), ('tasks', 'pobj'), ('fall', 'relcl'), ('category', 'pobj'), ('unsupervised', 'amod'), ('learning', 'pobj'), ('(', 'punct'), ('Sec', 'compound'), ('V', 'dobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[emphasized, clustering], [clustering, learning], [learning, tasks], [tasks, fall], [fall, category], [category, unsupervised], [unsupervised, learning], [learning, (], [(, Sec], [Sec, V], [V, )], [), .]]

>> Trigrams: 
[[emphasized, clustering, learning], [clustering, learning, tasks], [learning, tasks, fall], [tasks, fall, category], [fall, category, unsupervised], [category, unsupervised, learning], [unsupervised, learning, (], [learning, (, Sec], [(, Sec, V], [Sec, V, )], [V, ), .]]

>> Noun Phrases are: 
[It, clustering, the learning tasks, the category, unsupervised learning, Sec V]

>> Named Entities are: 
[('only one', 'CARDINAL'), ('Sec V', 'PERSON')]


============================ Sentence 76 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 77 =============================

• Reinforcement learning: 


>> Tokens are: 
[•, Reinforcement, learning, :] 

>> PoS Tags are: 
[('•', 'PRON'), ('Reinforcement', 'NOUN'), ('learning', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('•', 'dep'), ('Reinforcement', 'compound'), ('learning', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[•, Reinforcement], [Reinforcement, learning], [learning, :]]

>> Trigrams: 
[[•, Reinforcement, learning], [Reinforcement, learning, :]]

>> Noun Phrases are: 
[• Reinforcement learning]

>> Named Entities are: 
[]


============================ Sentence 78 =============================

Reinforcement learning lies, in a sense, between supervised and unsuper-to be encountered at runtime vised learning. 


>> Tokens are: 
[Reinforcement, learning, lies, ,, sense, ,, supervised, unsuper, -, encountered, runtime, vised, learning, .] 

>> PoS Tags are: 
[('Reinforcement', 'NOUN'), ('learning', 'VERB'), ('lies', 'VERB'), (',', 'PUNCT'), ('sense', 'NOUN'), (',', 'PUNCT'), ('supervised', 'ADJ'), ('unsuper', 'ADJ'), ('-', 'PUNCT'), ('encountered', 'VERB'), ('runtime', 'NOUN'), ('vised', 'ADJ'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Reinforcement', 'compound'), ('learning', 'nsubj'), ('lies', 'nsubjpass'), (',', 'punct'), ('sense', 'pobj'), (',', 'punct'), ('supervised', 'amod'), ('unsuper', 'conj'), ('-', 'punct'), ('encountered', 'ROOT'), ('runtime', 'nmod'), ('vised', 'amod'), ('learning', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Reinforcement, learning], [learning, lies], [lies, ,], [,, sense], [sense, ,], [,, supervised], [supervised, unsuper], [unsuper, -], [-, encountered], [encountered, runtime], [runtime, vised], [vised, learning], [learning, .]]

>> Trigrams: 
[[Reinforcement, learning, lies], [learning, lies, ,], [lies, ,, sense], [,, sense, ,], [sense, ,, supervised], [,, supervised, unsuper], [supervised, unsuper, -], [unsuper, -, encountered], [-, encountered, runtime], [encountered, runtime, vised], [runtime, vised, learning], [vised, learning, .]]

>> Noun Phrases are: 
[a sense, runtime vised learning]

>> Named Entities are: 
[]


============================ Sentence 79 =============================

Unlike unsupervised learning, some form of supervision exists, but this does not come in the form of the specification of a desired output for every input in the data. 


>> Tokens are: 
[Unlike, unsupervised, learning, ,, form, supervision, exists, ,, come, form, specification, desired, output, input, data, .] 

>> PoS Tags are: 
[('Unlike', 'ADP'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('form', 'NOUN'), ('supervision', 'NOUN'), ('exists', 'VERB'), (',', 'PUNCT'), ('come', 'VERB'), ('form', 'NOUN'), ('specification', 'NOUN'), ('desired', 'VERB'), ('output', 'NOUN'), ('input', 'NOUN'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Unlike', 'prep'), ('unsupervised', 'amod'), ('learning', 'pobj'), (',', 'punct'), ('form', 'pobj'), ('supervision', 'compound'), ('exists', 'pobj'), (',', 'punct'), ('come', 'ROOT'), ('form', 'pobj'), ('specification', 'pobj'), ('desired', 'amod'), ('output', 'pobj'), ('input', 'pobj'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Unlike, unsupervised], [unsupervised, learning], [learning, ,], [,, form], [form, supervision], [supervision, exists], [exists, ,], [,, come], [come, form], [form, specification], [specification, desired], [desired, output], [output, input], [input, data], [data, .]]

>> Trigrams: 
[[Unlike, unsupervised, learning], [unsupervised, learning, ,], [learning, ,, form], [,, form, supervision], [form, supervision, exists], [supervision, exists, ,], [exists, ,, come], [,, come, form], [come, form, specification], [form, specification, desired], [specification, desired, output], [desired, output, input], [output, input, data], [input, data, .]]

>> Noun Phrases are: 
[unsupervised learning, some form, the form, the specification, a desired output, every input, the data]

>> Named Entities are: 
[]


============================ Sentence 80 =============================

Instead, a reinforcement learning algorithm receives feedback from the envi- ronment only after selecting an output for a given input or observation. 


>> Tokens are: 
[Instead, ,, reinforcement, learning, algorithm, receives, feedback, envi-, ronment, selecting, output, given, input, observation, .] 

>> PoS Tags are: 
[('Instead', 'ADV'), (',', 'PUNCT'), ('reinforcement', 'NOUN'), ('learning', 'NOUN'), ('algorithm', 'NOUN'), ('receives', 'VERB'), ('feedback', 'NOUN'), ('envi-', 'NOUN'), ('ronment', 'NOUN'), ('selecting', 'VERB'), ('output', 'NOUN'), ('given', 'VERB'), ('input', 'NOUN'), ('observation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Instead', 'advmod'), (',', 'punct'), ('reinforcement', 'compound'), ('learning', 'amod'), ('algorithm', 'nsubj'), ('receives', 'ROOT'), ('feedback', 'dobj'), ('envi-', 'compound'), ('ronment', 'pobj'), ('selecting', 'pcomp'), ('output', 'dobj'), ('given', 'amod'), ('input', 'pobj'), ('observation', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Instead, ,], [,, reinforcement], [reinforcement, learning], [learning, algorithm], [algorithm, receives], [receives, feedback], [feedback, envi-], [envi-, ronment], [ronment, selecting], [selecting, output], [output, given], [given, input], [input, observation], [observation, .]]

>> Trigrams: 
[[Instead, ,, reinforcement], [,, reinforcement, learning], [reinforcement, learning, algorithm], [learning, algorithm, receives], [algorithm, receives, feedback], [receives, feedback, envi-], [feedback, envi-, ronment], [envi-, ronment, selecting], [ronment, selecting, output], [selecting, output, given], [output, given, input], [given, input, observation], [input, observation, .]]

>> Noun Phrases are: 
[a reinforcement learning algorithm, feedback, the envi- ronment, an output, a given input, observation]

>> Named Entities are: 
[]


============================ Sentence 81 =============================

The feedback indicates the degree to which the output, known as action in re- inforcement learning, fulfils the goals of the learner. 


>> Tokens are: 
[feedback, indicates, degree, output, ,, known, action, re-, inforcement, learning, ,, fulfils, goals, learner, .] 

>> PoS Tags are: 
[('feedback', 'NOUN'), ('indicates', 'VERB'), ('degree', 'NOUN'), ('output', 'NOUN'), (',', 'PUNCT'), ('known', 'VERB'), ('action', 'NOUN'), ('re-', 'ADJ'), ('inforcement', 'NOUN'), ('learning', 'NOUN'), (',', 'PUNCT'), ('fulfils', 'VERB'), ('goals', 'NOUN'), ('learner', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('feedback', 'nsubj'), ('indicates', 'ROOT'), ('degree', 'dobj'), ('output', 'nsubj'), (',', 'punct'), ('known', 'acl'), ('action', 'pobj'), ('re-', 'compound'), ('inforcement', 'compound'), ('learning', 'pobj'), (',', 'punct'), ('fulfils', 'relcl'), ('goals', 'dobj'), ('learner', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[feedback, indicates], [indicates, degree], [degree, output], [output, ,], [,, known], [known, action], [action, re-], [re-, inforcement], [inforcement, learning], [learning, ,], [,, fulfils], [fulfils, goals], [goals, learner], [learner, .]]

>> Trigrams: 
[[feedback, indicates, degree], [indicates, degree, output], [degree, output, ,], [output, ,, known], [,, known, action], [known, action, re-], [action, re-, inforcement], [re-, inforcement, learning], [inforcement, learning, ,], [learning, ,, fulfils], [,, fulfils, goals], [fulfils, goals, learner], [goals, learner, .]]

>> Noun Phrases are: 
[The feedback, the degree, the output, action, re- inforcement learning, the goals, the learner]

>> Named Entities are: 
[]


============================ Sentence 82 =============================

Reinforcement learning applies to sequential deci- sion making problems in which the learner interacts with an environment by sequentially taking actions – the outputs – on the basis of its observations – its inputs – while receiving feedback regarding each selected action. 


>> Tokens are: 
[Reinforcement, learning, applies, sequential, deci-, sion, making, problems, learner, interacts, environment, sequentially, taking, actions, –, outputs, –, basis, observations, –, inputs, –, receiving, feedback, selected, action, .] 

>> PoS Tags are: 
[('Reinforcement', 'NOUN'), ('learning', 'NOUN'), ('applies', 'VERB'), ('sequential', 'ADJ'), ('deci-', 'NOUN'), ('sion', 'NOUN'), ('making', 'VERB'), ('problems', 'NOUN'), ('learner', 'NOUN'), ('interacts', 'VERB'), ('environment', 'NOUN'), ('sequentially', 'ADV'), ('taking', 'VERB'), ('actions', 'NOUN'), ('–', 'PUNCT'), ('outputs', 'NOUN'), ('–', 'PUNCT'), ('basis', 'NOUN'), ('observations', 'NOUN'), ('–', 'PUNCT'), ('inputs', 'NOUN'), ('–', 'PUNCT'), ('receiving', 'VERB'), ('feedback', 'NOUN'), ('selected', 'VERB'), ('action', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Reinforcement', 'compound'), ('learning', 'nsubj'), ('applies', 'ROOT'), ('sequential', 'amod'), ('deci-', 'compound'), ('sion', 'pobj'), ('making', 'acl'), ('problems', 'dobj'), ('learner', 'nsubj'), ('interacts', 'relcl'), ('environment', 'pobj'), ('sequentially', 'advmod'), ('taking', 'amod'), ('actions', 'pobj'), ('–', 'punct'), ('outputs', 'appos'), ('–', 'punct'), ('basis', 'pobj'), ('observations', 'pobj'), ('–', 'punct'), ('inputs', 'appos'), ('–', 'punct'), ('receiving', 'advcl'), ('feedback', 'dobj'), ('selected', 'amod'), ('action', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Reinforcement, learning], [learning, applies], [applies, sequential], [sequential, deci-], [deci-, sion], [sion, making], [making, problems], [problems, learner], [learner, interacts], [interacts, environment], [environment, sequentially], [sequentially, taking], [taking, actions], [actions, –], [–, outputs], [outputs, –], [–, basis], [basis, observations], [observations, –], [–, inputs], [inputs, –], [–, receiving], [receiving, feedback], [feedback, selected], [selected, action], [action, .]]

>> Trigrams: 
[[Reinforcement, learning, applies], [learning, applies, sequential], [applies, sequential, deci-], [sequential, deci-, sion], [deci-, sion, making], [sion, making, problems], [making, problems, learner], [problems, learner, interacts], [learner, interacts, environment], [interacts, environment, sequentially], [environment, sequentially, taking], [sequentially, taking, actions], [taking, actions, –], [actions, –, outputs], [–, outputs, –], [outputs, –, basis], [–, basis, observations], [basis, observations, –], [observations, –, inputs], [–, inputs, –], [inputs, –, receiving], [–, receiving, feedback], [receiving, feedback, selected], [feedback, selected, action], [selected, action, .]]

>> Noun Phrases are: 
[Reinforcement learning, sequential deci- sion, problems, the learner, an environment, sequentially taking actions, the outputs, the basis, its observations, its inputs, feedback, each selected action]

>> Named Entities are: 
[]


============================ Sentence 83 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 84 =============================

Most current machine learning applications fall in the supervised learning category, and hence aim at learning an existing pattern between inputs and outputs. 


>> Tokens are: 
[current, machine, learning, applications, fall, supervised, learning, category, ,, aim, learning, existing, pattern, inputs, outputs, .] 

>> PoS Tags are: 
[('current', 'ADJ'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('applications', 'NOUN'), ('fall', 'VERB'), ('supervised', 'ADJ'), ('learning', 'NOUN'), ('category', 'NOUN'), (',', 'PUNCT'), ('aim', 'VERB'), ('learning', 'VERB'), ('existing', 'VERB'), ('pattern', 'NOUN'), ('inputs', 'NOUN'), ('outputs', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('current', 'amod'), ('machine', 'compound'), ('learning', 'compound'), ('applications', 'nsubj'), ('fall', 'ROOT'), ('supervised', 'amod'), ('learning', 'compound'), ('category', 'pobj'), (',', 'punct'), ('aim', 'conj'), ('learning', 'pcomp'), ('existing', 'amod'), ('pattern', 'dobj'), ('inputs', 'pobj'), ('outputs', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[current, machine], [machine, learning], [learning, applications], [applications, fall], [fall, supervised], [supervised, learning], [learning, category], [category, ,], [,, aim], [aim, learning], [learning, existing], [existing, pattern], [pattern, inputs], [inputs, outputs], [outputs, .]]

>> Trigrams: 
[[current, machine, learning], [machine, learning, applications], [learning, applications, fall], [applications, fall, supervised], [fall, supervised, learning], [supervised, learning, category], [learning, category, ,], [category, ,, aim], [,, aim, learning], [aim, learning, existing], [learning, existing, pattern], [existing, pattern, inputs], [pattern, inputs, outputs], [inputs, outputs, .]]

>> Noun Phrases are: 
[Most current machine learning applications, the supervised learning category, an existing pattern, inputs, outputs]

>> Named Entities are: 
[]


============================ Sentence 85 =============================

Supervised learning is relatively well-understood at a theoretical level [14], [15], and it benefits from well- established algorithmic tools. 


>> Tokens are: 
[Supervised, learning, relatively, -, understood, theoretical, level, [, 14, ], ,, [, 15, ], ,, benefits, well-, established, algorithmic, tools, .] 

>> PoS Tags are: 
[('Supervised', 'ADJ'), ('learning', 'NOUN'), ('relatively', 'ADV'), ('-', 'PUNCT'), ('understood', 'VERB'), ('theoretical', 'ADJ'), ('level', 'NOUN'), ('[', 'PUNCT'), ('14', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('[', 'PUNCT'), ('15', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('benefits', 'VERB'), ('well-', 'ADJ'), ('established', 'VERB'), ('algorithmic', 'ADJ'), ('tools', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Supervised', 'amod'), ('learning', 'nsubj'), ('relatively', 'advmod'), ('-', 'punct'), ('understood', 'acomp'), ('theoretical', 'amod'), ('level', 'pobj'), ('[', 'punct'), ('14', 'dep'), (']', 'punct'), (',', 'punct'), ('[', 'dep'), ('15', 'dep'), (']', 'punct'), (',', 'punct'), ('benefits', 'conj'), ('well-', 'amod'), ('established', 'amod'), ('algorithmic', 'amod'), ('tools', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Supervised, learning], [learning, relatively], [relatively, -], [-, understood], [understood, theoretical], [theoretical, level], [level, [], [[, 14], [14, ]], [], ,], [,, [], [[, 15], [15, ]], [], ,], [,, benefits], [benefits, well-], [well-, established], [established, algorithmic], [algorithmic, tools], [tools, .]]

>> Trigrams: 
[[Supervised, learning, relatively], [learning, relatively, -], [relatively, -, understood], [-, understood, theoretical], [understood, theoretical, level], [theoretical, level, [], [level, [, 14], [[, 14, ]], [14, ], ,], [], ,, [], [,, [, 15], [[, 15, ]], [15, ], ,], [], ,, benefits], [,, benefits, well-], [benefits, well-, established], [well-, established, algorithmic], [established, algorithmic, tools], [algorithmic, tools, .]]

>> Noun Phrases are: 
[Supervised learning, a theoretical level, it, well- established algorithmic tools]

>> Named Entities are: 
[('14', 'CARDINAL'), ('15', 'CARDINAL')]


============================ Sentence 86 =============================

Unsupervised learning has so far defied a unified theoretical treatment [16]. 


>> Tokens are: 
[Unsupervised, learning, far, defied, unified, theoretical, treatment, [, 16, ], .] 

>> PoS Tags are: 
[('Unsupervised', 'ADJ'), ('learning', 'NOUN'), ('far', 'ADV'), ('defied', 'VERB'), ('unified', 'ADJ'), ('theoretical', 'ADJ'), ('treatment', 'NOUN'), ('[', 'PUNCT'), ('16', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Unsupervised', 'amod'), ('learning', 'nsubj'), ('far', 'advmod'), ('defied', 'ROOT'), ('unified', 'amod'), ('theoretical', 'amod'), ('treatment', 'dobj'), ('[', 'punct'), ('16', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Unsupervised, learning], [learning, far], [far, defied], [defied, unified], [unified, theoretical], [theoretical, treatment], [treatment, [], [[, 16], [16, ]], [], .]]

>> Trigrams: 
[[Unsupervised, learning, far], [learning, far, defied], [far, defied, unified], [defied, unified, theoretical], [unified, theoretical, treatment], [theoretical, treatment, [], [treatment, [, 16], [[, 16, ]], [16, ], .]]

>> Noun Phrases are: 
[Unsupervised learning, a unified theoretical treatment]

>> Named Entities are: 
[('16', 'CARDINAL')]


============================ Sentence 87 =============================

Never- theless, it arguably poses a more fundamental practical problem in that it directly tackles the challenge of learn- ing by direct observation without any form of explicit feedback. 


>> Tokens are: 
[Never-, theless, ,, arguably, poses, fundamental, practical, problem, directly, tackles, challenge, learn-, ing, direct, observation, form, explicit, feedback, .] 

>> PoS Tags are: 
[('Never-', 'ADJ'), ('theless', 'NOUN'), (',', 'PUNCT'), ('arguably', 'ADV'), ('poses', 'VERB'), ('fundamental', 'ADJ'), ('practical', 'ADJ'), ('problem', 'NOUN'), ('directly', 'ADV'), ('tackles', 'VERB'), ('challenge', 'NOUN'), ('learn-', 'ADJ'), ('ing', 'NOUN'), ('direct', 'ADJ'), ('observation', 'NOUN'), ('form', 'NOUN'), ('explicit', 'ADJ'), ('feedback', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Never-', 'amod'), ('theless', 'npadvmod'), (',', 'punct'), ('arguably', 'advmod'), ('poses', 'ROOT'), ('fundamental', 'amod'), ('practical', 'amod'), ('problem', 'dobj'), ('directly', 'advmod'), ('tackles', 'advcl'), ('challenge', 'dobj'), ('learn-', 'amod'), ('ing', 'pobj'), ('direct', 'amod'), ('observation', 'pobj'), ('form', 'pobj'), ('explicit', 'amod'), ('feedback', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Never-, theless], [theless, ,], [,, arguably], [arguably, poses], [poses, fundamental], [fundamental, practical], [practical, problem], [problem, directly], [directly, tackles], [tackles, challenge], [challenge, learn-], [learn-, ing], [ing, direct], [direct, observation], [observation, form], [form, explicit], [explicit, feedback], [feedback, .]]

>> Trigrams: 
[[Never-, theless, ,], [theless, ,, arguably], [,, arguably, poses], [arguably, poses, fundamental], [poses, fundamental, practical], [fundamental, practical, problem], [practical, problem, directly], [problem, directly, tackles], [directly, tackles, challenge], [tackles, challenge, learn-], [challenge, learn-, ing], [learn-, ing, direct], [ing, direct, observation], [direct, observation, form], [observation, form, explicit], [form, explicit, feedback], [explicit, feedback, .]]

>> Noun Phrases are: 
[it, a more fundamental practical problem, it, the challenge, learn- ing, direct observation, any form, explicit feedback]

>> Named Entities are: 
[]


============================ Sentence 88 =============================

Reinforcement learning has found extensive applications in problems that are characterized by clear feedback signals, such as win/lose outcomes in games, and that entail searches over large trees of possible action-observation histories [17], 


>> Tokens are: 
[Reinforcement, learning, found, extensive, applications, problems, characterized, clear, feedback, signals, ,, win, /, lose, outcomes, games, ,, entail, searches, large, trees, possible, action, -, observation, histories, [, 17, ], ,] 

>> PoS Tags are: 
[('Reinforcement', 'NOUN'), ('learning', 'NOUN'), ('found', 'VERB'), ('extensive', 'ADJ'), ('applications', 'NOUN'), ('problems', 'NOUN'), ('characterized', 'VERB'), ('clear', 'ADJ'), ('feedback', 'NOUN'), ('signals', 'NOUN'), (',', 'PUNCT'), ('win', 'NOUN'), ('/', 'SYM'), ('lose', 'VERB'), ('outcomes', 'NOUN'), ('games', 'NOUN'), (',', 'PUNCT'), ('entail', 'NOUN'), ('searches', 'NOUN'), ('large', 'ADJ'), ('trees', 'NOUN'), ('possible', 'ADJ'), ('action', 'NOUN'), ('-', 'PUNCT'), ('observation', 'NOUN'), ('histories', 'NOUN'), ('[', 'PUNCT'), ('17', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT')] 

>> Dependency Tags are: 
[('Reinforcement', 'compound'), ('learning', 'nsubj'), ('found', 'ROOT'), ('extensive', 'amod'), ('applications', 'dobj'), ('problems', 'pobj'), ('characterized', 'relcl'), ('clear', 'amod'), ('feedback', 'compound'), ('signals', 'pobj'), (',', 'punct'), ('win', 'npadvmod'), ('/', 'punct'), ('lose', 'pobj'), ('outcomes', 'dobj'), ('games', 'pobj'), (',', 'punct'), ('entail', 'compound'), ('searches', 'conj'), ('large', 'amod'), ('trees', 'pobj'), ('possible', 'amod'), ('action', 'compound'), ('-', 'punct'), ('observation', 'compound'), ('histories', 'pobj'), ('[', 'punct'), ('17', 'appos'), (']', 'punct'), (',', 'punct')]

>> Bigrams: 
[[Reinforcement, learning], [learning, found], [found, extensive], [extensive, applications], [applications, problems], [problems, characterized], [characterized, clear], [clear, feedback], [feedback, signals], [signals, ,], [,, win], [win, /], [/, lose], [lose, outcomes], [outcomes, games], [games, ,], [,, entail], [entail, searches], [searches, large], [large, trees], [trees, possible], [possible, action], [action, -], [-, observation], [observation, histories], [histories, [], [[, 17], [17, ]], [], ,]]

>> Trigrams: 
[[Reinforcement, learning, found], [learning, found, extensive], [found, extensive, applications], [extensive, applications, problems], [applications, problems, characterized], [problems, characterized, clear], [characterized, clear, feedback], [clear, feedback, signals], [feedback, signals, ,], [signals, ,, win], [,, win, /], [win, /, lose], [/, lose, outcomes], [lose, outcomes, games], [outcomes, games, ,], [games, ,, entail], [,, entail, searches], [entail, searches, large], [searches, large, trees], [large, trees, possible], [trees, possible, action], [possible, action, -], [action, -, observation], [-, observation, histories], [observation, histories, [], [histories, [, 17], [[, 17, ]], [17, ], ,]]

>> Noun Phrases are: 
[Reinforcement learning, extensive applications, problems, clear feedback signals, outcomes, games, that entail searches, large trees, possible action-observation histories]

>> Named Entities are: 
[('17', 'CARDINAL')]


============================ Sentence 89 =============================

[18]. 


>> Tokens are: 
[[, 18, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('18', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('18', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 18], [18, ]], [], .]]

>> Trigrams: 
[[[, 18, ]], [18, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('18', 'CARDINAL')]


============================ Sentence 90 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 91 =============================

This paper only covers supervised and unsupervised learning. 


>> Tokens are: 
[paper, covers, supervised, unsupervised, learning, .] 

>> PoS Tags are: 
[('paper', 'NOUN'), ('covers', 'VERB'), ('supervised', 'ADJ'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('paper', 'nsubj'), ('covers', 'ROOT'), ('supervised', 'amod'), ('unsupervised', 'conj'), ('learning', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[paper, covers], [covers, supervised], [supervised, unsupervised], [unsupervised, learning], [learning, .]]

>> Trigrams: 
[[paper, covers, supervised], [covers, supervised, unsupervised], [supervised, unsupervised, learning], [unsupervised, learning, .]]

>> Noun Phrases are: 
[This paper, supervised and unsupervised learning]

>> Named Entities are: 
[]


============================ Sentence 92 =============================

Reinforcement learning requires a different analytical framework grounded in Markov Decision Pro- cesses and will not be discussed here (see [17]). 


>> Tokens are: 
[Reinforcement, learning, requires, different, analytical, framework, grounded, Markov, Decision, Pro-, cesses, discussed, (, [, 17, ], ), .] 

>> PoS Tags are: 
[('Reinforcement', 'NOUN'), ('learning', 'NOUN'), ('requires', 'VERB'), ('different', 'ADJ'), ('analytical', 'ADJ'), ('framework', 'NOUN'), ('grounded', 'VERB'), ('Markov', 'PROPN'), ('Decision', 'PROPN'), ('Pro-', 'PROPN'), ('cesses', 'NOUN'), ('discussed', 'VERB'), ('(', 'PUNCT'), ('[', 'PUNCT'), ('17', 'NUM'), (']', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Reinforcement', 'compound'), ('learning', 'nsubj'), ('requires', 'ROOT'), ('different', 'amod'), ('analytical', 'amod'), ('framework', 'dobj'), ('grounded', 'acl'), ('Markov', 'compound'), ('Decision', 'compound'), ('Pro-', 'compound'), ('cesses', 'pobj'), ('discussed', 'conj'), ('(', 'punct'), ('[', 'punct'), ('17', 'dobj'), (']', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Reinforcement, learning], [learning, requires], [requires, different], [different, analytical], [analytical, framework], [framework, grounded], [grounded, Markov], [Markov, Decision], [Decision, Pro-], [Pro-, cesses], [cesses, discussed], [discussed, (], [(, [], [[, 17], [17, ]], [], )], [), .]]

>> Trigrams: 
[[Reinforcement, learning, requires], [learning, requires, different], [requires, different, analytical], [different, analytical, framework], [analytical, framework, grounded], [framework, grounded, Markov], [grounded, Markov, Decision], [Markov, Decision, Pro-], [Decision, Pro-, cesses], [Pro-, cesses, discussed], [cesses, discussed, (], [discussed, (, [], [(, [, 17], [[, 17, ]], [17, ], )], [], ), .]]

>> Noun Phrases are: 
[Reinforcement learning, a different analytical framework, Markov Decision Pro- cesses]

>> Named Entities are: 
[('Markov Decision', 'PERSON'), ('17', 'CARDINAL')]


============================ Sentence 93 =============================

For a broader discussion on the technical aspects of supervised and unsupervised learning, we point to [19] and refer- ences therein. 


>> Tokens are: 
[broader, discussion, technical, aspects, supervised, unsupervised, learning, ,, point, [, 19, ], refer-, ences, .] 

>> PoS Tags are: 
[('broader', 'ADJ'), ('discussion', 'NOUN'), ('technical', 'ADJ'), ('aspects', 'NOUN'), ('supervised', 'ADJ'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('point', 'VERB'), ('[', 'PUNCT'), ('19', 'NUM'), (']', 'PUNCT'), ('refer-', 'NOUN'), ('ences', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('broader', 'amod'), ('discussion', 'pobj'), ('technical', 'amod'), ('aspects', 'pobj'), ('supervised', 'amod'), ('unsupervised', 'conj'), ('learning', 'pobj'), (',', 'punct'), ('point', 'ROOT'), ('[', 'punct'), ('19', 'pobj'), (']', 'punct'), ('refer-', 'nsubj'), ('ences', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[broader, discussion], [discussion, technical], [technical, aspects], [aspects, supervised], [supervised, unsupervised], [unsupervised, learning], [learning, ,], [,, point], [point, [], [[, 19], [19, ]], [], refer-], [refer-, ences], [ences, .]]

>> Trigrams: 
[[broader, discussion, technical], [discussion, technical, aspects], [technical, aspects, supervised], [aspects, supervised, unsupervised], [supervised, unsupervised, learning], [unsupervised, learning, ,], [learning, ,, point], [,, point, [], [point, [, 19], [[, 19, ]], [19, ], refer-], [], refer-, ences], [refer-, ences, .]]

>> Noun Phrases are: 
[a broader discussion, the technical aspects, supervised and unsupervised learning, we, refer-]

>> Named Entities are: 
[('19', 'CARDINAL')]


============================ Sentence 94 =============================

 C. 


>> Tokens are: 
[ , C.] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('C.', 'PROPN')] 

>> Dependency Tags are: 
[(' ', 'nmod'), ('C.', 'ROOT')]

>> Bigrams: 
[[ , C.]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[ C.]

>> Named Entities are: 
[]


============================ Sentence 95 =============================

When to Use Machine Learning? 


>> Tokens are: 
[Use, Machine, Learning, ?] 

>> PoS Tags are: 
[('Use', 'VERB'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('Use', 'ROOT'), ('Machine', 'compound'), ('Learning', 'dobj'), ('?', 'punct')]

>> Bigrams: 
[[Use, Machine], [Machine, Learning], [Learning, ?]]

>> Trigrams: 
[[Use, Machine, Learning], [Machine, Learning, ?]]

>> Noun Phrases are: 
[Machine Learning]

>> Named Entities are: 
[]


============================ Sentence 96 =============================

Based on the discussion in Sec. 


>> Tokens are: 
[Based, discussion, Sec, .] 

>> PoS Tags are: 
[('Based', 'VERB'), ('discussion', 'NOUN'), ('Sec', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Based', 'ROOT'), ('discussion', 'pobj'), ('Sec', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Based, discussion], [discussion, Sec], [Sec, .]]

>> Trigrams: 
[[Based, discussion, Sec], [discussion, Sec, .]]

>> Noun Phrases are: 
[the discussion, Sec]

>> Named Entities are: 
[('Sec', 'PERSON')]


============================ Sentence 97 =============================

I-A, the use of a  machine learning approach in lieu of a more conventional engineering design should be justified on a case-by- case basis on the basis of its suitability and potential  advantages. 


>> Tokens are: 
[-, ,, use,  , machine, learning, approach, lieu, conventional, engineering, design, justified, case, -, by-, case, basis, basis, suitability, potential,  , advantages, .] 

>> PoS Tags are: 
[('-', 'PUNCT'), (',', 'PUNCT'), ('use', 'NOUN'), (' ', 'SPACE'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('approach', 'NOUN'), ('lieu', 'NOUN'), ('conventional', 'ADJ'), ('engineering', 'NOUN'), ('design', 'NOUN'), ('justified', 'VERB'), ('case', 'NOUN'), ('-', 'PUNCT'), ('by-', 'NOUN'), ('case', 'NOUN'), ('basis', 'NOUN'), ('basis', 'NOUN'), ('suitability', 'NOUN'), ('potential', 'ADJ'), (' ', 'SPACE'), ('advantages', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('-', 'punct'), (',', 'punct'), ('use', 'nsubjpass'), (' ', 'compound'), ('machine', 'compound'), ('learning', 'compound'), ('approach', 'pobj'), ('lieu', 'pobj'), ('conventional', 'amod'), ('engineering', 'compound'), ('design', 'pobj'), ('justified', 'ROOT'), ('case', 'compound'), ('-', 'punct'), ('by-', 'compound'), ('case', 'compound'), ('basis', 'pobj'), ('basis', 'pobj'), ('suitability', 'pobj'), ('potential', 'amod'), (' ', 'compound'), ('advantages', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[-, ,], [,, use], [use,  ], [ , machine], [machine, learning], [learning, approach], [approach, lieu], [lieu, conventional], [conventional, engineering], [engineering, design], [design, justified], [justified, case], [case, -], [-, by-], [by-, case], [case, basis], [basis, basis], [basis, suitability], [suitability, potential], [potential,  ], [ , advantages], [advantages, .]]

>> Trigrams: 
[[-, ,, use], [,, use,  ], [use,  , machine], [ , machine, learning], [machine, learning, approach], [learning, approach, lieu], [approach, lieu, conventional], [lieu, conventional, engineering], [conventional, engineering, design], [engineering, design, justified], [design, justified, case], [justified, case, -], [case, -, by-], [-, by-, case], [by-, case, basis], [case, basis, basis], [basis, basis, suitability], [basis, suitability, potential], [suitability, potential,  ], [potential,  , advantages], [ , advantages, .]]

>> Noun Phrases are: 
[I-A, the use, a  machine learning approach, lieu, a more conventional engineering design, a case-by- case basis, the basis, its suitability, potential  advantages]

>> Named Entities are: 
[]


============================ Sentence 98 =============================

The following criteria, inspired by [20], offer useful guidelines on the type of engineering tasks that can benefit from the use of machine learning tools. 


>> Tokens are: 
[following, criteria, ,, inspired, [, 20, ], ,, offer, useful, guidelines, type, engineering, tasks, benefit, use, machine, learning, tools, .] 

>> PoS Tags are: 
[('following', 'VERB'), ('criteria', 'NOUN'), (',', 'PUNCT'), ('inspired', 'VERB'), ('[', 'PUNCT'), ('20', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('offer', 'VERB'), ('useful', 'ADJ'), ('guidelines', 'NOUN'), ('type', 'NOUN'), ('engineering', 'NOUN'), ('tasks', 'NOUN'), ('benefit', 'VERB'), ('use', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('tools', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('following', 'amod'), ('criteria', 'nsubj'), (',', 'punct'), ('inspired', 'acl'), ('[', 'punct'), ('20', 'pobj'), (']', 'pobj'), (',', 'punct'), ('offer', 'ROOT'), ('useful', 'amod'), ('guidelines', 'dobj'), ('type', 'pobj'), ('engineering', 'compound'), ('tasks', 'pobj'), ('benefit', 'relcl'), ('use', 'pobj'), ('machine', 'compound'), ('learning', 'compound'), ('tools', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[following, criteria], [criteria, ,], [,, inspired], [inspired, [], [[, 20], [20, ]], [], ,], [,, offer], [offer, useful], [useful, guidelines], [guidelines, type], [type, engineering], [engineering, tasks], [tasks, benefit], [benefit, use], [use, machine], [machine, learning], [learning, tools], [tools, .]]

>> Trigrams: 
[[following, criteria, ,], [criteria, ,, inspired], [,, inspired, [], [inspired, [, 20], [[, 20, ]], [20, ], ,], [], ,, offer], [,, offer, useful], [offer, useful, guidelines], [useful, guidelines, type], [guidelines, type, engineering], [type, engineering, tasks], [engineering, tasks, benefit], [tasks, benefit, use], [benefit, use, machine], [use, machine, learning], [machine, learning, tools], [learning, tools, .]]

>> Noun Phrases are: 
[The following criteria, useful guidelines, the type, engineering tasks, the use, machine learning tools]

>> Named Entities are: 
[('20', 'CARDINAL')]


============================ Sentence 99 =============================

1. 


>> Tokens are: 
[1, .] 

>> PoS Tags are: 
[('1', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[1, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 100 =============================

The traditional engineering flow is not applicable or is undesirable due to a model deficit or to an algorithm deficit [21]. 


>> Tokens are: 
[traditional, engineering, flow, applicable, undesirable, model, deficit, algorithm, deficit, [, 21, ], .] 

>> PoS Tags are: 
[('traditional', 'ADJ'), ('engineering', 'NOUN'), ('flow', 'NOUN'), ('applicable', 'ADJ'), ('undesirable', 'ADJ'), ('model', 'NOUN'), ('deficit', 'NOUN'), ('algorithm', 'ADJ'), ('deficit', 'NOUN'), ('[', 'PUNCT'), ('21', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('traditional', 'amod'), ('engineering', 'compound'), ('flow', 'nsubj'), ('applicable', 'acomp'), ('undesirable', 'acomp'), ('model', 'compound'), ('deficit', 'pobj'), ('algorithm', 'amod'), ('deficit', 'pobj'), ('[', 'punct'), ('21', 'attr'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[traditional, engineering], [engineering, flow], [flow, applicable], [applicable, undesirable], [undesirable, model], [model, deficit], [deficit, algorithm], [algorithm, deficit], [deficit, [], [[, 21], [21, ]], [], .]]

>> Trigrams: 
[[traditional, engineering, flow], [engineering, flow, applicable], [flow, applicable, undesirable], [applicable, undesirable, model], [undesirable, model, deficit], [model, deficit, algorithm], [deficit, algorithm, deficit], [algorithm, deficit, [], [deficit, [, 21], [[, 21, ]], [21, ], .]]

>> Noun Phrases are: 
[The traditional engineering flow, a model deficit, an algorithm deficit]

>> Named Entities are: 
[('21', 'CARDINAL')]


============================ Sentence 101 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 102 =============================

• 


>> Tokens are: 
[•] 

>> PoS Tags are: 
[('•', 'X')] 

>> Dependency Tags are: 
[('•', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 103 =============================

With a model deficit, no physics-based mathematical models exist for the problem due to insufficient domain knowledge. 


>> Tokens are: 
[model, deficit, ,, physics, -, based, mathematical, models, exist, problem, insufficient, domain, knowledge, .] 

>> PoS Tags are: 
[('model', 'NOUN'), ('deficit', 'NOUN'), (',', 'PUNCT'), ('physics', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('mathematical', 'ADJ'), ('models', 'NOUN'), ('exist', 'VERB'), ('problem', 'NOUN'), ('insufficient', 'ADJ'), ('domain', 'NOUN'), ('knowledge', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('model', 'compound'), ('deficit', 'pobj'), (',', 'punct'), ('physics', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('mathematical', 'amod'), ('models', 'nsubj'), ('exist', 'ROOT'), ('problem', 'pobj'), ('insufficient', 'amod'), ('domain', 'compound'), ('knowledge', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[model, deficit], [deficit, ,], [,, physics], [physics, -], [-, based], [based, mathematical], [mathematical, models], [models, exist], [exist, problem], [problem, insufficient], [insufficient, domain], [domain, knowledge], [knowledge, .]]

>> Trigrams: 
[[model, deficit, ,], [deficit, ,, physics], [,, physics, -], [physics, -, based], [-, based, mathematical], [based, mathematical, models], [mathematical, models, exist], [models, exist, problem], [exist, problem, insufficient], [problem, insufficient, domain], [insufficient, domain, knowledge], [domain, knowledge, .]]

>> Noun Phrases are: 
[a model deficit, no physics-based mathematical models, the problem, insufficient domain knowledge]

>> Named Entities are: 
[]


============================ Sentence 104 =============================

As a result, a conventional model-based design is inapplicable. 


>> Tokens are: 
[result, ,, conventional, model, -, based, design, inapplicable, .] 

>> PoS Tags are: 
[('result', 'NOUN'), (',', 'PUNCT'), ('conventional', 'ADJ'), ('model', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('design', 'NOUN'), ('inapplicable', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('result', 'pobj'), (',', 'punct'), ('conventional', 'amod'), ('model', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('design', 'nsubj'), ('inapplicable', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[result, ,], [,, conventional], [conventional, model], [model, -], [-, based], [based, design], [design, inapplicable], [inapplicable, .]]

>> Trigrams: 
[[result, ,, conventional], [,, conventional, model], [conventional, model, -], [model, -, based], [-, based, design], [based, design, inapplicable], [design, inapplicable, .]]

>> Noun Phrases are: 
[a result, a conventional model-based design]

>> Named Entities are: 
[]


============================ Sentence 105 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 106 =============================

• 


>> Tokens are: 
[•] 

>> PoS Tags are: 
[('•', 'X')] 

>> Dependency Tags are: 
[('•', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 107 =============================

With an algorithm deficit, a well-established math- ematical model is available, but existing algorithms optimized on the basis of such model are too com- plex to be implemented for the given application. 


>> Tokens are: 
[algorithm, deficit, ,, -, established, math-, ematical, model, available, ,, existing, algorithms, optimized, basis, model, com-, plex, implemented, given, application, .] 

>> PoS Tags are: 
[('algorithm', 'ADJ'), ('deficit', 'NOUN'), (',', 'PUNCT'), ('-', 'PUNCT'), ('established', 'VERB'), ('math-', 'NOUN'), ('ematical', 'ADJ'), ('model', 'NOUN'), ('available', 'ADJ'), (',', 'PUNCT'), ('existing', 'VERB'), ('algorithms', 'NOUN'), ('optimized', 'VERB'), ('basis', 'NOUN'), ('model', 'NOUN'), ('com-', 'NOUN'), ('plex', 'NOUN'), ('implemented', 'VERB'), ('given', 'VERB'), ('application', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('algorithm', 'amod'), ('deficit', 'pobj'), (',', 'punct'), ('-', 'punct'), ('established', 'amod'), ('math-', 'nmod'), ('ematical', 'amod'), ('model', 'nsubj'), ('available', 'acomp'), (',', 'punct'), ('existing', 'amod'), ('algorithms', 'nsubj'), ('optimized', 'acl'), ('basis', 'pobj'), ('model', 'pobj'), ('com-', 'compound'), ('plex', 'nsubjpass'), ('implemented', 'ccomp'), ('given', 'amod'), ('application', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[algorithm, deficit], [deficit, ,], [,, -], [-, established], [established, math-], [math-, ematical], [ematical, model], [model, available], [available, ,], [,, existing], [existing, algorithms], [algorithms, optimized], [optimized, basis], [basis, model], [model, com-], [com-, plex], [plex, implemented], [implemented, given], [given, application], [application, .]]

>> Trigrams: 
[[algorithm, deficit, ,], [deficit, ,, -], [,, -, established], [-, established, math-], [established, math-, ematical], [math-, ematical, model], [ematical, model, available], [model, available, ,], [available, ,, existing], [,, existing, algorithms], [existing, algorithms, optimized], [algorithms, optimized, basis], [optimized, basis, model], [basis, model, com-], [model, com-, plex], [com-, plex, implemented], [plex, implemented, given], [implemented, given, application], [given, application, .]]

>> Noun Phrases are: 
[an algorithm deficit, a well-established math- ematical model, existing algorithms, the basis, such model, too com- plex, the given application]

>> Named Entities are: 
[]


============================ Sentence 108 =============================

In this case, the use of hypothesis classes including efficient “machines”, such as neural network of lim- ited size or with tailored hardware implementations (see, e.g.--.-, [22], [23] and references therein), can yield lower-complexity solutions. 


>> Tokens are: 
[case, ,, use, hypothesis, classes, including, efficient, “, machines, ”, ,, neural, network, lim-, ited, size, tailored, hardware, implementations, (, ,, e.g.--.-, ,, [, 22, ], ,, [, 23, ], references, ), ,, yield, lower, -, complexity, solutions, .] 

>> PoS Tags are: 
[('case', 'NOUN'), (',', 'PUNCT'), ('use', 'NOUN'), ('hypothesis', 'NOUN'), ('classes', 'NOUN'), ('including', 'VERB'), ('efficient', 'ADJ'), ('“', 'PUNCT'), ('machines', 'NOUN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('neural', 'ADJ'), ('network', 'NOUN'), ('lim-', 'ADV'), ('ited', 'VERB'), ('size', 'NOUN'), ('tailored', 'ADJ'), ('hardware', 'NOUN'), ('implementations', 'NOUN'), ('(', 'PUNCT'), (',', 'PUNCT'), ('e.g.--.-', 'X'), (',', 'PUNCT'), ('[', 'PUNCT'), ('22', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('[', 'PUNCT'), ('23', 'NUM'), (']', 'PUNCT'), ('references', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('yield', 'VERB'), ('lower', 'ADJ'), ('-', 'PUNCT'), ('complexity', 'NOUN'), ('solutions', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('case', 'pobj'), (',', 'punct'), ('use', 'nsubj'), ('hypothesis', 'compound'), ('classes', 'pobj'), ('including', 'prep'), ('efficient', 'amod'), ('“', 'punct'), ('machines', 'pobj'), ('”', 'punct'), (',', 'punct'), ('neural', 'amod'), ('network', 'pobj'), ('lim-', 'advmod'), ('ited', 'amod'), ('size', 'pobj'), ('tailored', 'amod'), ('hardware', 'compound'), ('implementations', 'pobj'), ('(', 'punct'), (',', 'punct'), ('e.g.--.-', 'appos'), (',', 'punct'), ('[', 'punct'), ('22', 'appos'), (']', 'punct'), (',', 'punct'), ('[', 'punct'), ('23', 'appos'), (']', 'punct'), ('references', 'conj'), (')', 'punct'), (',', 'punct'), ('yield', 'ROOT'), ('lower', 'amod'), ('-', 'punct'), ('complexity', 'compound'), ('solutions', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[case, ,], [,, use], [use, hypothesis], [hypothesis, classes], [classes, including], [including, efficient], [efficient, “], [“, machines], [machines, ”], [”, ,], [,, neural], [neural, network], [network, lim-], [lim-, ited], [ited, size], [size, tailored], [tailored, hardware], [hardware, implementations], [implementations, (], [(, ,], [,, e.g.--.-], [e.g.--.-, ,], [,, [], [[, 22], [22, ]], [], ,], [,, [], [[, 23], [23, ]], [], references], [references, )], [), ,], [,, yield], [yield, lower], [lower, -], [-, complexity], [complexity, solutions], [solutions, .]]

>> Trigrams: 
[[case, ,, use], [,, use, hypothesis], [use, hypothesis, classes], [hypothesis, classes, including], [classes, including, efficient], [including, efficient, “], [efficient, “, machines], [“, machines, ”], [machines, ”, ,], [”, ,, neural], [,, neural, network], [neural, network, lim-], [network, lim-, ited], [lim-, ited, size], [ited, size, tailored], [size, tailored, hardware], [tailored, hardware, implementations], [hardware, implementations, (], [implementations, (, ,], [(, ,, e.g.--.-], [,, e.g.--.-, ,], [e.g.--.-, ,, [], [,, [, 22], [[, 22, ]], [22, ], ,], [], ,, [], [,, [, 23], [[, 23, ]], [23, ], references], [], references, )], [references, ), ,], [), ,, yield], [,, yield, lower], [yield, lower, -], [lower, -, complexity], [-, complexity, solutions], [complexity, solutions, .]]

>> Noun Phrases are: 
[this case, hypothesis classes, efficient “machines, neural network, lim- ited size, tailored hardware implementations, references, lower-complexity solutions]

>> Named Entities are: 
[('22', 'CARDINAL'), ('23', 'CARDINAL')]


============================ Sentence 109 =============================

 2. 


>> Tokens are: 
[ , 2, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('2', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('2', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[ , 2], [2, .]]

>> Trigrams: 
[[ , 2, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 110 =============================

A sufficiently large training data sets exist or can be created. 


>> Tokens are: 
[sufficiently, large, training, data, sets, exist, created, .] 

>> PoS Tags are: 
[('sufficiently', 'ADV'), ('large', 'ADJ'), ('training', 'NOUN'), ('data', 'NOUN'), ('sets', 'NOUN'), ('exist', 'VERB'), ('created', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('sufficiently', 'advmod'), ('large', 'amod'), ('training', 'compound'), ('data', 'compound'), ('sets', 'nsubj'), ('exist', 'ROOT'), ('created', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[sufficiently, large], [large, training], [training, data], [data, sets], [sets, exist], [exist, created], [created, .]]

>> Trigrams: 
[[sufficiently, large, training], [large, training, data], [training, data, sets], [data, sets, exist], [sets, exist, created], [exist, created, .]]

>> Noun Phrases are: 
[A sufficiently large training data sets]

>> Named Entities are: 
[]


============================ Sentence 111 =============================

3. 


>> Tokens are: 
[3, .] 

>> PoS Tags are: 
[('3', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('3', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[3, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('3', 'CARDINAL')]


============================ Sentence 112 =============================

The task does not require the application of logic, common sense, or explicit reasoning based on back- ground knowledge. 


>> Tokens are: 
[task, require, application, logic, ,, common, sense, ,, explicit, reasoning, based, back-, ground, knowledge, .] 

>> PoS Tags are: 
[('task', 'NOUN'), ('require', 'VERB'), ('application', 'NOUN'), ('logic', 'NOUN'), (',', 'PUNCT'), ('common', 'ADJ'), ('sense', 'NOUN'), (',', 'PUNCT'), ('explicit', 'ADJ'), ('reasoning', 'NOUN'), ('based', 'VERB'), ('back-', 'NOUN'), ('ground', 'NOUN'), ('knowledge', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('task', 'nsubj'), ('require', 'ROOT'), ('application', 'dobj'), ('logic', 'pobj'), (',', 'punct'), ('common', 'amod'), ('sense', 'conj'), (',', 'punct'), ('explicit', 'amod'), ('reasoning', 'conj'), ('based', 'acl'), ('back-', 'compound'), ('ground', 'compound'), ('knowledge', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[task, require], [require, application], [application, logic], [logic, ,], [,, common], [common, sense], [sense, ,], [,, explicit], [explicit, reasoning], [reasoning, based], [based, back-], [back-, ground], [ground, knowledge], [knowledge, .]]

>> Trigrams: 
[[task, require, application], [require, application, logic], [application, logic, ,], [logic, ,, common], [,, common, sense], [common, sense, ,], [sense, ,, explicit], [,, explicit, reasoning], [explicit, reasoning, based], [reasoning, based, back-], [based, back-, ground], [back-, ground, knowledge], [ground, knowledge, .]]

>> Noun Phrases are: 
[The task, the application, logic, common sense, explicit reasoning, back- ground knowledge]

>> Named Entities are: 
[]


============================ Sentence 113 =============================

4. 


>> Tokens are: 
[4, .] 

>> PoS Tags are: 
[('4', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('4', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[4, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('4', 'CARDINAL')]


============================ Sentence 114 =============================

The task does not require detailed explanations for how the decision was made. 


>> Tokens are: 
[task, require, detailed, explanations, decision, .] 

>> PoS Tags are: 
[('task', 'NOUN'), ('require', 'VERB'), ('detailed', 'ADJ'), ('explanations', 'NOUN'), ('decision', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('task', 'nsubj'), ('require', 'ROOT'), ('detailed', 'amod'), ('explanations', 'dobj'), ('decision', 'nsubjpass'), ('.', 'punct')]

>> Bigrams: 
[[task, require], [require, detailed], [detailed, explanations], [explanations, decision], [decision, .]]

>> Trigrams: 
[[task, require, detailed], [require, detailed, explanations], [detailed, explanations, decision], [explanations, decision, .]]

>> Noun Phrases are: 
[The task, detailed explanations, the decision]

>> Named Entities are: 
[]


============================ Sentence 115 =============================

The trained machine is by and large a black box that maps inputs to outputs. 


>> Tokens are: 
[trained, machine, large, black, box, maps, inputs, outputs, .] 

>> PoS Tags are: 
[('trained', 'VERB'), ('machine', 'NOUN'), ('large', 'ADJ'), ('black', 'ADJ'), ('box', 'NOUN'), ('maps', 'VERB'), ('inputs', 'NOUN'), ('outputs', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('trained', 'amod'), ('machine', 'nsubj'), ('large', 'conj'), ('black', 'amod'), ('box', 'dobj'), ('maps', 'relcl'), ('inputs', 'dobj'), ('outputs', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[trained, machine], [machine, large], [large, black], [black, box], [box, maps], [maps, inputs], [inputs, outputs], [outputs, .]]

>> Trigrams: 
[[trained, machine, large], [machine, large, black], [large, black, box], [black, box, maps], [box, maps, inputs], [maps, inputs, outputs], [inputs, outputs, .]]

>> Noun Phrases are: 
[The trained machine, a black box, inputs, outputs]

>> Named Entities are: 
[]


============================ Sentence 116 =============================

As such, it does not provide direct means to ascertain why a given output has been produced in response to an input, although recent research has made some progress on this front [24]. 


>> Tokens are: 
[,, provide, direct, means, ascertain, given, output, produced, response, input, ,, recent, research, progress, [, 24, ], .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('provide', 'VERB'), ('direct', 'ADJ'), ('means', 'NOUN'), ('ascertain', 'VERB'), ('given', 'VERB'), ('output', 'NOUN'), ('produced', 'VERB'), ('response', 'NOUN'), ('input', 'NOUN'), (',', 'PUNCT'), ('recent', 'ADJ'), ('research', 'NOUN'), ('progress', 'NOUN'), ('[', 'PUNCT'), ('24', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('provide', 'ROOT'), ('direct', 'amod'), ('means', 'dobj'), ('ascertain', 'advcl'), ('given', 'amod'), ('output', 'nsubjpass'), ('produced', 'ccomp'), ('response', 'pobj'), ('input', 'pobj'), (',', 'punct'), ('recent', 'amod'), ('research', 'nsubj'), ('progress', 'dobj'), ('[', 'punct'), ('24', 'npadvmod'), (']', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[,, provide], [provide, direct], [direct, means], [means, ascertain], [ascertain, given], [given, output], [output, produced], [produced, response], [response, input], [input, ,], [,, recent], [recent, research], [research, progress], [progress, [], [[, 24], [24, ]], [], .]]

>> Trigrams: 
[[,, provide, direct], [provide, direct, means], [direct, means, ascertain], [means, ascertain, given], [ascertain, given, output], [given, output, produced], [output, produced, response], [produced, response, input], [response, input, ,], [input, ,, recent], [,, recent, research], [recent, research, progress], [research, progress, [], [progress, [, 24], [[, 24, ]], [24, ], .]]

>> Noun Phrases are: 
[it, direct means, a given output, response, an input, recent research, some progress, this front]

>> Named Entities are: 
[('24', 'CARDINAL')]


============================ Sentence 117 =============================

This contrasts with engineered optimal solutions, which can be typically interpreted on the basis of physical performance criteria. 


>> Tokens are: 
[contrasts, engineered, optimal, solutions, ,, typically, interpreted, basis, physical, performance, criteria, .] 

>> PoS Tags are: 
[('contrasts', 'VERB'), ('engineered', 'VERB'), ('optimal', 'ADJ'), ('solutions', 'NOUN'), (',', 'PUNCT'), ('typically', 'ADV'), ('interpreted', 'VERB'), ('basis', 'NOUN'), ('physical', 'ADJ'), ('performance', 'NOUN'), ('criteria', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('contrasts', 'ROOT'), ('engineered', 'amod'), ('optimal', 'amod'), ('solutions', 'pobj'), (',', 'punct'), ('typically', 'advmod'), ('interpreted', 'relcl'), ('basis', 'pobj'), ('physical', 'amod'), ('performance', 'compound'), ('criteria', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[contrasts, engineered], [engineered, optimal], [optimal, solutions], [solutions, ,], [,, typically], [typically, interpreted], [interpreted, basis], [basis, physical], [physical, performance], [performance, criteria], [criteria, .]]

>> Trigrams: 
[[contrasts, engineered, optimal], [engineered, optimal, solutions], [optimal, solutions, ,], [solutions, ,, typically], [,, typically, interpreted], [typically, interpreted, basis], [interpreted, basis, physical], [basis, physical, performance], [physical, performance, criteria], [performance, criteria, .]]

>> Noun Phrases are: 
[engineered optimal solutions, the basis, physical performance criteria]

>> Named Entities are: 
[]


============================ Sentence 118 =============================

For instance, a maximum likelihood decoder chooses a given output because it minimizes the probability of error under the assumed model. 


>> Tokens are: 
[instance, ,, maximum, likelihood, decoder, chooses, given, output, minimizes, probability, error, assumed, model, .] 

>> PoS Tags are: 
[('instance', 'NOUN'), (',', 'PUNCT'), ('maximum', 'ADJ'), ('likelihood', 'NOUN'), ('decoder', 'NOUN'), ('chooses', 'VERB'), ('given', 'VERB'), ('output', 'NOUN'), ('minimizes', 'VERB'), ('probability', 'NOUN'), ('error', 'NOUN'), ('assumed', 'ADJ'), ('model', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('instance', 'pobj'), (',', 'punct'), ('maximum', 'amod'), ('likelihood', 'compound'), ('decoder', 'nsubj'), ('chooses', 'ROOT'), ('given', 'amod'), ('output', 'dobj'), ('minimizes', 'advcl'), ('probability', 'dobj'), ('error', 'pobj'), ('assumed', 'amod'), ('model', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[instance, ,], [,, maximum], [maximum, likelihood], [likelihood, decoder], [decoder, chooses], [chooses, given], [given, output], [output, minimizes], [minimizes, probability], [probability, error], [error, assumed], [assumed, model], [model, .]]

>> Trigrams: 
[[instance, ,, maximum], [,, maximum, likelihood], [maximum, likelihood, decoder], [likelihood, decoder, chooses], [decoder, chooses, given], [chooses, given, output], [given, output, minimizes], [output, minimizes, probability], [minimizes, probability, error], [probability, error, assumed], [error, assumed, model], [assumed, model, .]]

>> Noun Phrases are: 
[instance, a maximum likelihood decoder, a given output, it, the probability, error, the assumed model]

>> Named Entities are: 
[]


============================ Sentence 119 =============================

5. 


>> Tokens are: 
[5, .] 

>> PoS Tags are: 
[('5', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('5', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[5, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('5', 'CARDINAL')]


============================ Sentence 120 =============================

The phenomenon or function being learned is station- ary for a sufficiently long period of time. 


>> Tokens are: 
[phenomenon, function, learned, station-, ary, sufficiently, long, period, time, .] 

>> PoS Tags are: 
[('phenomenon', 'NOUN'), ('function', 'NOUN'), ('learned', 'VERB'), ('station-', 'NOUN'), ('ary', 'ADJ'), ('sufficiently', 'ADV'), ('long', 'ADJ'), ('period', 'NOUN'), ('time', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('phenomenon', 'nsubj'), ('function', 'conj'), ('learned', 'acl'), ('station-', 'compound'), ('ary', 'attr'), ('sufficiently', 'advmod'), ('long', 'amod'), ('period', 'pobj'), ('time', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[phenomenon, function], [function, learned], [learned, station-], [station-, ary], [ary, sufficiently], [sufficiently, long], [long, period], [period, time], [time, .]]

>> Trigrams: 
[[phenomenon, function, learned], [function, learned, station-], [learned, station-, ary], [station-, ary, sufficiently], [ary, sufficiently, long], [sufficiently, long, period], [long, period, time], [period, time, .]]

>> Noun Phrases are: 
[The phenomenon, function, a sufficiently long period, time]

>> Named Entities are: 
[]


============================ Sentence 121 =============================

This is in order to enable data collection and learning. 


>> Tokens are: 
[order, enable, data, collection, learning, .] 

>> PoS Tags are: 
[('order', 'NOUN'), ('enable', 'VERB'), ('data', 'NOUN'), ('collection', 'NOUN'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('order', 'pobj'), ('enable', 'acl'), ('data', 'compound'), ('collection', 'dobj'), ('learning', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[order, enable], [enable, data], [data, collection], [collection, learning], [learning, .]]

>> Trigrams: 
[[order, enable, data], [enable, data, collection], [data, collection, learning], [collection, learning, .]]

>> Noun Phrases are: 
[order, data collection, learning]

>> Named Entities are: 
[]


============================ Sentence 122 =============================

6. 


>> Tokens are: 
[6, .] 

>> PoS Tags are: 
[('6', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('6', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[6, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('6', 'CARDINAL')]


============================ Sentence 123 =============================

The task has either loose requirement constraints, or, in the case of an algorithm deficit, the required performance guarantees can be provided via numeri- cal simulations. 


>> Tokens are: 
[task, loose, requirement, constraints, ,, ,, case, algorithm, deficit, ,, required, performance, guarantees, provided, numeri-, cal, simulations, .] 

>> PoS Tags are: 
[('task', 'NOUN'), ('loose', 'ADJ'), ('requirement', 'NOUN'), ('constraints', 'NOUN'), (',', 'PUNCT'), (',', 'PUNCT'), ('case', 'NOUN'), ('algorithm', 'ADJ'), ('deficit', 'NOUN'), (',', 'PUNCT'), ('required', 'VERB'), ('performance', 'NOUN'), ('guarantees', 'NOUN'), ('provided', 'VERB'), ('numeri-', 'NOUN'), ('cal', 'ADJ'), ('simulations', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('task', 'nsubj'), ('loose', 'amod'), ('requirement', 'compound'), ('constraints', 'dobj'), (',', 'punct'), (',', 'punct'), ('case', 'pobj'), ('algorithm', 'amod'), ('deficit', 'pobj'), (',', 'punct'), ('required', 'amod'), ('performance', 'compound'), ('guarantees', 'nsubjpass'), ('provided', 'conj'), ('numeri-', 'poss'), ('cal', 'cc'), ('simulations', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[task, loose], [loose, requirement], [requirement, constraints], [constraints, ,], [,, ,], [,, case], [case, algorithm], [algorithm, deficit], [deficit, ,], [,, required], [required, performance], [performance, guarantees], [guarantees, provided], [provided, numeri-], [numeri-, cal], [cal, simulations], [simulations, .]]

>> Trigrams: 
[[task, loose, requirement], [loose, requirement, constraints], [requirement, constraints, ,], [constraints, ,, ,], [,, ,, case], [,, case, algorithm], [case, algorithm, deficit], [algorithm, deficit, ,], [deficit, ,, required], [,, required, performance], [required, performance, guarantees], [performance, guarantees, provided], [guarantees, provided, numeri-], [provided, numeri-, cal], [numeri-, cal, simulations], [cal, simulations, .]]

>> Noun Phrases are: 
[The task, either loose requirement constraints, the case, an algorithm deficit, the required performance guarantees, numeri- cal simulations]

>> Named Entities are: 
[]


============================ Sentence 124 =============================

With the conventional engineering ap- proach, theoretical performance guarantees can be ob- tained that are backed by a physics-based mathematical model. 


>> Tokens are: 
[conventional, engineering, ap-, proach, ,, theoretical, performance, guarantees, ob-, tained, backed, physics, -, based, mathematical, model, .] 

>> PoS Tags are: 
[('conventional', 'ADJ'), ('engineering', 'NOUN'), ('ap-', 'X'), ('proach', 'NOUN'), (',', 'PUNCT'), ('theoretical', 'ADJ'), ('performance', 'NOUN'), ('guarantees', 'NOUN'), ('ob-', 'ADP'), ('tained', 'VERB'), ('backed', 'VERB'), ('physics', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('mathematical', 'ADJ'), ('model', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('conventional', 'amod'), ('engineering', 'pobj'), ('ap-', 'appos'), ('proach', 'pobj'), (',', 'punct'), ('theoretical', 'amod'), ('performance', 'compound'), ('guarantees', 'nsubjpass'), ('ob-', 'dep'), ('tained', 'ROOT'), ('backed', 'ccomp'), ('physics', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('mathematical', 'amod'), ('model', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[conventional, engineering], [engineering, ap-], [ap-, proach], [proach, ,], [,, theoretical], [theoretical, performance], [performance, guarantees], [guarantees, ob-], [ob-, tained], [tained, backed], [backed, physics], [physics, -], [-, based], [based, mathematical], [mathematical, model], [model, .]]

>> Trigrams: 
[[conventional, engineering, ap-], [engineering, ap-, proach], [ap-, proach, ,], [proach, ,, theoretical], [,, theoretical, performance], [theoretical, performance, guarantees], [performance, guarantees, ob-], [guarantees, ob-, tained], [ob-, tained, backed], [tained, backed, physics], [backed, physics, -], [physics, -, based], [-, based, mathematical], [based, mathematical, model], [mathematical, model, .]]

>> Noun Phrases are: 
[the conventional engineering, proach, theoretical performance guarantees, a physics-based mathematical model]

>> Named Entities are: 
[]


============================ Sentence 125 =============================

These guarantees can be relied upon insofar as the model is trusted to be an accurate representation of reality. 


>> Tokens are: 
[guarantees, relied, insofar, model, trusted, accurate, representation, reality, .] 

>> PoS Tags are: 
[('guarantees', 'NOUN'), ('relied', 'VERB'), ('insofar', 'ADV'), ('model', 'NOUN'), ('trusted', 'VERB'), ('accurate', 'ADJ'), ('representation', 'NOUN'), ('reality', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('guarantees', 'nsubjpass'), ('relied', 'ROOT'), ('insofar', 'advmod'), ('model', 'nsubjpass'), ('trusted', 'advcl'), ('accurate', 'amod'), ('representation', 'attr'), ('reality', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[guarantees, relied], [relied, insofar], [insofar, model], [model, trusted], [trusted, accurate], [accurate, representation], [representation, reality], [reality, .]]

>> Trigrams: 
[[guarantees, relied, insofar], [relied, insofar, model], [insofar, model, trusted], [model, trusted, accurate], [trusted, accurate, representation], [accurate, representation, reality], [representation, reality, .]]

>> Noun Phrases are: 
[These guarantees, the model, an accurate representation, reality]

>> Named Entities are: 
[]


============================ Sentence 126 =============================

If a machine learning approach is used to address an algorithm deficit and a physics-based model is available, then numerical results may be sufficient in order to compute satisfactory performance measures. 


>> Tokens are: 
[machine, learning, approach, address, algorithm, deficit, physics, -, based, model, available, ,, numerical, results, sufficient, order, compute, satisfactory, performance, measures, .] 

>> PoS Tags are: 
[('machine', 'NOUN'), ('learning', 'NOUN'), ('approach', 'NOUN'), ('address', 'VERB'), ('algorithm', 'ADJ'), ('deficit', 'NOUN'), ('physics', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('model', 'NOUN'), ('available', 'ADJ'), (',', 'PUNCT'), ('numerical', 'ADJ'), ('results', 'NOUN'), ('sufficient', 'ADJ'), ('order', 'NOUN'), ('compute', 'VERB'), ('satisfactory', 'ADJ'), ('performance', 'NOUN'), ('measures', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('machine', 'compound'), ('learning', 'compound'), ('approach', 'nsubjpass'), ('address', 'xcomp'), ('algorithm', 'amod'), ('deficit', 'dobj'), ('physics', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('model', 'conj'), ('available', 'acomp'), (',', 'punct'), ('numerical', 'amod'), ('results', 'nsubj'), ('sufficient', 'acomp'), ('order', 'pobj'), ('compute', 'acl'), ('satisfactory', 'amod'), ('performance', 'compound'), ('measures', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[machine, learning], [learning, approach], [approach, address], [address, algorithm], [algorithm, deficit], [deficit, physics], [physics, -], [-, based], [based, model], [model, available], [available, ,], [,, numerical], [numerical, results], [results, sufficient], [sufficient, order], [order, compute], [compute, satisfactory], [satisfactory, performance], [performance, measures], [measures, .]]

>> Trigrams: 
[[machine, learning, approach], [learning, approach, address], [approach, address, algorithm], [address, algorithm, deficit], [algorithm, deficit, physics], [deficit, physics, -], [physics, -, based], [-, based, model], [based, model, available], [model, available, ,], [available, ,, numerical], [,, numerical, results], [numerical, results, sufficient], [results, sufficient, order], [sufficient, order, compute], [order, compute, satisfactory], [compute, satisfactory, performance], [satisfactory, performance, measures], [performance, measures, .]]

>> Noun Phrases are: 
[a machine learning approach, an algorithm deficit, a physics-based model, numerical results, order, satisfactory performance measures]

>> Named Entities are: 
[]


============================ Sentence 127 =============================

In  3    4 5 6 7 8 9 0  1  2  3  4  5  4 5 6 7 8 0  1  2  3  4  5  (a)  (b) 


>> Tokens are: 
[ , 3,    , 4, 5, 6, 7, 8, 9, 0,  , 1,  , 2,  , 3,  , 4,  , 5,  , 4, 5, 6, 7, 8, 0,  , 1,  , 2,  , 3,  , 4,  , 5,  , (, ),  , (, b, )] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('3', 'NUM'), ('   ', 'SPACE'), ('4', 'NUM'), ('5', 'NUM'), ('6', 'NUM'), ('7', 'NUM'), ('8', 'NUM'), ('9', 'NUM'), ('0', 'NUM'), (' ', 'SPACE'), ('1', 'NUM'), (' ', 'SPACE'), ('2', 'NUM'), (' ', 'SPACE'), ('3', 'NUM'), (' ', 'SPACE'), ('4', 'NUM'), (' ', 'SPACE'), ('5', 'NUM'), (' ', 'SPACE'), ('4', 'NUM'), ('5', 'NUM'), ('6', 'NUM'), ('7', 'NUM'), ('8', 'NUM'), ('0', 'NUM'), (' ', 'SPACE'), ('1', 'NUM'), (' ', 'SPACE'), ('2', 'NUM'), (' ', 'SPACE'), ('3', 'NUM'), (' ', 'SPACE'), ('4', 'NUM'), (' ', 'SPACE'), ('5', 'NUM'), (' ', 'SPACE'), ('(', 'PUNCT'), (')', 'PUNCT'), (' ', 'SPACE'), ('(', 'PUNCT'), ('b', 'X'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'pobj'), ('3', 'nummod'), ('   ', 'quantmod'), ('4', 'compound'), ('5', 'pobj'), ('6', 'quantmod'), ('7', 'appos'), ('8', 'appos'), ('9', 'appos'), ('0', 'punct'), (' ', 'nmod'), ('1', 'nummod'), (' ', 'npadvmod'), ('2', 'nummod'), (' ', 'appos'), ('3', 'nummod'), (' ', 'pobj'), ('4', 'nummod'), (' ', 'appos'), ('5', 'nummod'), (' ', 'appos'), ('4', 'compound'), ('5', 'appos'), ('6', 'appos'), ('7', 'appos'), ('8', 'appos'), ('0', 'nummod'), (' ', 'appos'), ('1', 'nummod'), (' ', 'appos'), ('2', 'nummod'), (' ', 'appos'), ('3', 'nummod'), (' ', 'pobj'), ('4', 'nummod'), (' ', 'appos'), ('5', 'nummod'), (' ', 'appos'), ('(', 'punct'), (')', 'punct'), (' ', 'pobj'), ('(', 'punct'), ('b', 'appos'), (')', 'punct')]

>> Bigrams: 
[[ , 3], [3,    ], [   , 4], [4, 5], [5, 6], [6, 7], [7, 8], [8, 9], [9, 0], [0,  ], [ , 1], [1,  ], [ , 2], [2,  ], [ , 3], [3,  ], [ , 4], [4,  ], [ , 5], [5,  ], [ , 4], [4, 5], [5, 6], [6, 7], [7, 8], [8, 0], [0,  ], [ , 1], [1,  ], [ , 2], [2,  ], [ , 3], [3,  ], [ , 4], [4,  ], [ , 5], [5,  ], [ , (], [(, )], [),  ], [ , (], [(, b], [b, )]]

>> Trigrams: 
[[ , 3,    ], [3,    , 4], [   , 4, 5], [4, 5, 6], [5, 6, 7], [6, 7, 8], [7, 8, 9], [8, 9, 0], [9, 0,  ], [0,  , 1], [ , 1,  ], [1,  , 2], [ , 2,  ], [2,  , 3], [ , 3,  ], [3,  , 4], [ , 4,  ], [4,  , 5], [ , 5,  ], [5,  , 4], [ , 4, 5], [4, 5, 6], [5, 6, 7], [6, 7, 8], [7, 8, 0], [8, 0,  ], [0,  , 1], [ , 1,  ], [1,  , 2], [ , 2,  ], [2,  , 3], [ , 3,  ], [3,  , 4], [ , 4,  ], [4,  , 5], [ , 5,  ], [5,  , (], [ , (, )], [(, ),  ], [),  , (], [ , (, b], [(, b, )]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('3', 'CARDINAL'), ('1', 'CARDINAL'), ('4', 'CARDINAL'), ('4 5 6', 'DATE'), ('1', 'CARDINAL')]


============================ Sentence 128 =============================

 Fig. 


>> Tokens are: 
[ , Fig, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('Fig', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[ , Fig], [Fig, .]]

>> Trigrams: 
[[ , Fig, .]]

>> Noun Phrases are: 
[ Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 129 =============================

3. 


>> Tokens are: 
[3, .] 

>> PoS Tags are: 
[('3', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('3', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[3, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('3', 'CARDINAL')]


============================ Sentence 130 =============================

Illustration of (a) supervised learning and (b) unsupervised learning. 


>> Tokens are: 
[Illustration, (, ), supervised, learning, (, b, ), unsupervised, learning, .] 

>> PoS Tags are: 
[('Illustration', 'NOUN'), ('(', 'PUNCT'), (')', 'PUNCT'), ('supervised', 'ADJ'), ('learning', 'NOUN'), ('(', 'PUNCT'), ('b', 'X'), (')', 'PUNCT'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Illustration', 'nsubj'), ('(', 'punct'), (')', 'punct'), ('supervised', 'amod'), ('learning', 'ROOT'), ('(', 'punct'), ('b', 'meta'), (')', 'punct'), ('unsupervised', 'amod'), ('learning', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Illustration, (], [(, )], [), supervised], [supervised, learning], [learning, (], [(, b], [b, )], [), unsupervised], [unsupervised, learning], [learning, .]]

>> Trigrams: 
[[Illustration, (, )], [(, ), supervised], [), supervised, learning], [supervised, learning, (], [learning, (, b], [(, b, )], [b, ), unsupervised], [), unsupervised, learning], [unsupervised, learning, .]]

>> Noun Phrases are: 
[Illustration, (b) unsupervised learning]

>> Named Entities are: 
[]


============================ Sentence 131 =============================

 contrast, weaker guarantees can be offered by machine learning in the absence of a physics-based model. 


>> Tokens are: 
[ , contrast, ,, weaker, guarantees, offered, machine, learning, absence, physics, -, based, model, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('contrast', 'NOUN'), (',', 'PUNCT'), ('weaker', 'ADJ'), ('guarantees', 'NOUN'), ('offered', 'VERB'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('absence', 'NOUN'), ('physics', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('model', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nmod'), ('contrast', 'nsubjpass'), (',', 'punct'), ('weaker', 'amod'), ('guarantees', 'nsubjpass'), ('offered', 'ROOT'), ('machine', 'compound'), ('learning', 'pobj'), ('absence', 'pobj'), ('physics', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('model', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , contrast], [contrast, ,], [,, weaker], [weaker, guarantees], [guarantees, offered], [offered, machine], [machine, learning], [learning, absence], [absence, physics], [physics, -], [-, based], [based, model], [model, .]]

>> Trigrams: 
[[ , contrast, ,], [contrast, ,, weaker], [,, weaker, guarantees], [weaker, guarantees, offered], [guarantees, offered, machine], [offered, machine, learning], [machine, learning, absence], [learning, absence, physics], [absence, physics, -], [physics, -, based], [-, based, model], [based, model, .]]

>> Noun Phrases are: 
[ contrast, weaker guarantees, machine learning, the absence, a physics-based model]

>> Named Entities are: 
[]


============================ Sentence 132 =============================

In this case, one can provide performance bounds only under the assumptions that the hypothesis class is sufficiently general to include “machines” that can perform well on the problem and that the data is representative of the actual data distribution to be encountered at runtime (see, e.g.--.-, [19][Ch 5]). 


>> Tokens are: 
[case, ,, provide, performance, bounds, assumptions, hypothesis, class, sufficiently, general, include, “, machines, ”, perform, problem, data, representative, actual, data, distribution, encountered, runtime, (, ,, e.g.--.-, ,, [, 19][Ch, 5, ], ), .] 

>> PoS Tags are: 
[('case', 'NOUN'), (',', 'PUNCT'), ('provide', 'VERB'), ('performance', 'NOUN'), ('bounds', 'NOUN'), ('assumptions', 'NOUN'), ('hypothesis', 'NOUN'), ('class', 'NOUN'), ('sufficiently', 'ADV'), ('general', 'ADJ'), ('include', 'VERB'), ('“', 'PUNCT'), ('machines', 'NOUN'), ('”', 'PUNCT'), ('perform', 'VERB'), ('problem', 'NOUN'), ('data', 'NOUN'), ('representative', 'ADJ'), ('actual', 'ADJ'), ('data', 'NOUN'), ('distribution', 'NOUN'), ('encountered', 'VERB'), ('runtime', 'NOUN'), ('(', 'PUNCT'), (',', 'PUNCT'), ('e.g.--.-', 'X'), (',', 'PUNCT'), ('[', 'PUNCT'), ('19][Ch', 'NUM'), ('5', 'NUM'), (']', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('case', 'pobj'), (',', 'punct'), ('provide', 'ROOT'), ('performance', 'compound'), ('bounds', 'dobj'), ('assumptions', 'pobj'), ('hypothesis', 'compound'), ('class', 'nsubj'), ('sufficiently', 'advmod'), ('general', 'acomp'), ('include', 'xcomp'), ('“', 'punct'), ('machines', 'dobj'), ('”', 'punct'), ('perform', 'relcl'), ('problem', 'pobj'), ('data', 'nsubj'), ('representative', 'acomp'), ('actual', 'amod'), ('data', 'compound'), ('distribution', 'pobj'), ('encountered', 'relcl'), ('runtime', 'pobj'), ('(', 'punct'), (',', 'punct'), ('e.g.--.-', 'intj'), (',', 'punct'), ('[', 'punct'), ('19][Ch', 'dobj'), ('5', 'nummod'), (']', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[case, ,], [,, provide], [provide, performance], [performance, bounds], [bounds, assumptions], [assumptions, hypothesis], [hypothesis, class], [class, sufficiently], [sufficiently, general], [general, include], [include, “], [“, machines], [machines, ”], [”, perform], [perform, problem], [problem, data], [data, representative], [representative, actual], [actual, data], [data, distribution], [distribution, encountered], [encountered, runtime], [runtime, (], [(, ,], [,, e.g.--.-], [e.g.--.-, ,], [,, [], [[, 19][Ch], [19][Ch, 5], [5, ]], [], )], [), .]]

>> Trigrams: 
[[case, ,, provide], [,, provide, performance], [provide, performance, bounds], [performance, bounds, assumptions], [bounds, assumptions, hypothesis], [assumptions, hypothesis, class], [hypothesis, class, sufficiently], [class, sufficiently, general], [sufficiently, general, include], [general, include, “], [include, “, machines], [“, machines, ”], [machines, ”, perform], [”, perform, problem], [perform, problem, data], [problem, data, representative], [data, representative, actual], [representative, actual, data], [actual, data, distribution], [data, distribution, encountered], [distribution, encountered, runtime], [encountered, runtime, (], [runtime, (, ,], [(, ,, e.g.--.-], [,, e.g.--.-, ,], [e.g.--.-, ,, [], [,, [, 19][Ch], [[, 19][Ch, 5], [19][Ch, 5, ]], [5, ], )], [], ), .]]

>> Noun Phrases are: 
[this case, one, performance bounds, the assumptions, the hypothesis class, “machines, the problem, the data, the actual data distribution, runtime]

>> Named Entities are: 
[]


============================ Sentence 133 =============================

The selection of a biased hypothesis class or the use of an unrepresentative data set may hence yield strongly suboptimal performance. 


>> Tokens are: 
[selection, biased, hypothesis, class, use, unrepresentative, data, set, yield, strongly, suboptimal, performance, .] 

>> PoS Tags are: 
[('selection', 'NOUN'), ('biased', 'ADJ'), ('hypothesis', 'NOUN'), ('class', 'NOUN'), ('use', 'NOUN'), ('unrepresentative', 'ADJ'), ('data', 'NOUN'), ('set', 'NOUN'), ('yield', 'VERB'), ('strongly', 'ADV'), ('suboptimal', 'ADJ'), ('performance', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('selection', 'nsubj'), ('biased', 'amod'), ('hypothesis', 'compound'), ('class', 'pobj'), ('use', 'conj'), ('unrepresentative', 'amod'), ('data', 'compound'), ('set', 'pobj'), ('yield', 'ROOT'), ('strongly', 'advmod'), ('suboptimal', 'amod'), ('performance', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[selection, biased], [biased, hypothesis], [hypothesis, class], [class, use], [use, unrepresentative], [unrepresentative, data], [data, set], [set, yield], [yield, strongly], [strongly, suboptimal], [suboptimal, performance], [performance, .]]

>> Trigrams: 
[[selection, biased, hypothesis], [biased, hypothesis, class], [hypothesis, class, use], [class, use, unrepresentative], [use, unrepresentative, data], [unrepresentative, data, set], [data, set, yield], [set, yield, strongly], [yield, strongly, suboptimal], [strongly, suboptimal, performance], [suboptimal, performance, .]]

>> Noun Phrases are: 
[The selection, a biased hypothesis class, the use, an unrepresentative data set, strongly suboptimal performance]

>> Named Entities are: 
[]


============================ Sentence 134 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 135 =============================

We will return to these criteria when discussing ap- plications to communication systems. 


>> Tokens are: 
[return, criteria, discussing, ap-, plications, communication, systems, .] 

>> PoS Tags are: 
[('return', 'VERB'), ('criteria', 'NOUN'), ('discussing', 'VERB'), ('ap-', 'ADJ'), ('plications', 'NOUN'), ('communication', 'NOUN'), ('systems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('return', 'ROOT'), ('criteria', 'pobj'), ('discussing', 'advcl'), ('ap-', 'amod'), ('plications', 'dobj'), ('communication', 'compound'), ('systems', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[return, criteria], [criteria, discussing], [discussing, ap-], [ap-, plications], [plications, communication], [communication, systems], [systems, .]]

>> Trigrams: 
[[return, criteria, discussing], [criteria, discussing, ap-], [discussing, ap-, plications], [ap-, plications, communication], [plications, communication, systems], [communication, systems, .]]

>> Noun Phrases are: 
[We, these criteria, ap- plications, communication systems]

>> Named Entities are: 
[]


============================ Sentence 136 =============================

 II. 


>> Tokens are: 
[ , II, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('II', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('II', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[ , II], [II, .]]

>> Trigrams: 
[[ , II, .]]

>> Noun Phrases are: 
[ II]

>> Named Entities are: 
[]


============================ Sentence 137 =============================

MACHINE LEARNING FOR COMMUNICATION NETWORKS   


>> Tokens are: 
[MACHINE, LEARNING, COMMUNICATION, NETWORKS,  ] 

>> PoS Tags are: 
[('MACHINE', 'PROPN'), ('LEARNING', 'NOUN'), ('COMMUNICATION', 'PROPN'), ('NETWORKS', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('MACHINE', 'compound'), ('LEARNING', 'ROOT'), ('COMMUNICATION', 'compound'), ('NETWORKS', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[MACHINE, LEARNING], [LEARNING, COMMUNICATION], [COMMUNICATION, NETWORKS], [NETWORKS,  ]]

>> Trigrams: 
[[MACHINE, LEARNING, COMMUNICATION], [LEARNING, COMMUNICATION, NETWORKS], [COMMUNICATION, NETWORKS,  ]]

>> Noun Phrases are: 
[MACHINE LEARNING, COMMUNICATION NETWORKS]

>> Named Entities are: 
[]


============================ Sentence 138 =============================

In order to exemplify applications of supervised and unsupervised learning, we will offer annotated pointers to the literature on machine learning for communication systems. 


>> Tokens are: 
[order, exemplify, applications, supervised, unsupervised, learning, ,, offer, annotated, pointers, literature, machine, learning, communication, systems, .] 

>> PoS Tags are: 
[('order', 'NOUN'), ('exemplify', 'VERB'), ('applications', 'NOUN'), ('supervised', 'ADJ'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('offer', 'VERB'), ('annotated', 'VERB'), ('pointers', 'NOUN'), ('literature', 'NOUN'), ('machine', 'NOUN'), ('learning', 'VERB'), ('communication', 'NOUN'), ('systems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('order', 'pobj'), ('exemplify', 'acl'), ('applications', 'dobj'), ('supervised', 'amod'), ('unsupervised', 'conj'), ('learning', 'pobj'), (',', 'punct'), ('offer', 'ROOT'), ('annotated', 'amod'), ('pointers', 'dobj'), ('literature', 'pobj'), ('machine', 'compound'), ('learning', 'pobj'), ('communication', 'compound'), ('systems', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[order, exemplify], [exemplify, applications], [applications, supervised], [supervised, unsupervised], [unsupervised, learning], [learning, ,], [,, offer], [offer, annotated], [annotated, pointers], [pointers, literature], [literature, machine], [machine, learning], [learning, communication], [communication, systems], [systems, .]]

>> Trigrams: 
[[order, exemplify, applications], [exemplify, applications, supervised], [applications, supervised, unsupervised], [supervised, unsupervised, learning], [unsupervised, learning, ,], [learning, ,, offer], [,, offer, annotated], [offer, annotated, pointers], [annotated, pointers, literature], [pointers, literature, machine], [literature, machine, learning], [machine, learning, communication], [learning, communication, systems], [communication, systems, .]]

>> Noun Phrases are: 
[order, applications, supervised and unsupervised learning, we, annotated pointers, the literature, communication systems]

>> Named Entities are: 
[]


============================ Sentence 139 =============================

Rather than striving for a comprehensive, and historically minded, review, the applications and refer- ences have been selected with the goal of illustrating key aspects regarding the use of machine learning in engineering problems. 


>> Tokens are: 
[striving, comprehensive, ,, historically, minded, ,, review, ,, applications, refer-, ences, selected, goal, illustrating, key, aspects, use, machine, learning, engineering, problems, .] 

>> PoS Tags are: 
[('striving', 'VERB'), ('comprehensive', 'ADJ'), (',', 'PUNCT'), ('historically', 'ADV'), ('minded', 'ADJ'), (',', 'PUNCT'), ('review', 'NOUN'), (',', 'PUNCT'), ('applications', 'NOUN'), ('refer-', 'NOUN'), ('ences', 'NOUN'), ('selected', 'VERB'), ('goal', 'NOUN'), ('illustrating', 'VERB'), ('key', 'ADJ'), ('aspects', 'NOUN'), ('use', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('engineering', 'NOUN'), ('problems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('striving', 'pcomp'), ('comprehensive', 'amod'), (',', 'punct'), ('historically', 'advmod'), ('minded', 'conj'), (',', 'punct'), ('review', 'pobj'), (',', 'punct'), ('applications', 'conj'), ('refer-', 'compound'), ('ences', 'conj'), ('selected', 'ROOT'), ('goal', 'pobj'), ('illustrating', 'pcomp'), ('key', 'amod'), ('aspects', 'dobj'), ('use', 'pobj'), ('machine', 'compound'), ('learning', 'pobj'), ('engineering', 'compound'), ('problems', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[striving, comprehensive], [comprehensive, ,], [,, historically], [historically, minded], [minded, ,], [,, review], [review, ,], [,, applications], [applications, refer-], [refer-, ences], [ences, selected], [selected, goal], [goal, illustrating], [illustrating, key], [key, aspects], [aspects, use], [use, machine], [machine, learning], [learning, engineering], [engineering, problems], [problems, .]]

>> Trigrams: 
[[striving, comprehensive, ,], [comprehensive, ,, historically], [,, historically, minded], [historically, minded, ,], [minded, ,, review], [,, review, ,], [review, ,, applications], [,, applications, refer-], [applications, refer-, ences], [refer-, ences, selected], [ences, selected, goal], [selected, goal, illustrating], [goal, illustrating, key], [illustrating, key, aspects], [key, aspects, use], [aspects, use, machine], [use, machine, learning], [machine, learning, engineering], [learning, engineering, problems], [engineering, problems, .]]

>> Noun Phrases are: 
[a comprehensive, and historically minded, review, the applications, refer- ences, the goal, key aspects, the use, machine learning, engineering problems]

>> Named Entities are: 
[]


============================ Sentence 140 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 141 =============================

Core   Network  Edge   Cloud   


>> Tokens are: 
[Core,   , Network,  , Edge,   , Cloud,  ] 

>> PoS Tags are: 
[('Core', 'PROPN'), ('  ', 'SPACE'), ('Network', 'PROPN'), (' ', 'SPACE'), ('Edge', 'NOUN'), ('  ', 'SPACE'), ('Cloud', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Core', 'compound'), ('  ', 'nmod'), ('Network', 'compound'), (' ', 'compound'), ('Edge', 'appos'), ('  ', 'ROOT'), ('Cloud', 'appos'), (' ', 'appos')]

>> Bigrams: 
[[Core,   ], [  , Network], [Network,  ], [ , Edge], [Edge,   ], [  , Cloud], [Cloud,  ]]

>> Trigrams: 
[[Core,   , Network], [  , Network,  ], [Network,  , Edge], [ , Edge,   ], [Edge,   , Cloud], [  , Cloud,  ]]

>> Noun Phrases are: 
[Network  Edge, Cloud]

>> Named Entities are: 
[('Core   Network', 'ORG')]


============================ Sentence 142 =============================

Wireless   Edge   


>> Tokens are: 
[Wireless,   , Edge,  ] 

>> PoS Tags are: 
[('Wireless', 'PROPN'), ('  ', 'SPACE'), ('Edge', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Wireless', 'compound'), ('  ', 'compound'), ('Edge', 'ROOT'), (' ', 'advmod')]

>> Bigrams: 
[[Wireless,   ], [  , Edge], [Edge,  ]]

>> Trigrams: 
[[Wireless,   , Edge], [  , Edge,  ]]

>> Noun Phrases are: 
[Wireless   Edge]

>> Named Entities are: 
[]


============================ Sentence 143 =============================

Access   Network   


>> Tokens are: 
[Access,   , Network,  ] 

>> PoS Tags are: 
[('Access', 'PROPN'), ('  ', 'SPACE'), ('Network', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Access', 'compound'), ('  ', 'compound'), ('Network', 'ROOT'), (' ', 'appos')]

>> Bigrams: 
[[Access,   ], [  , Network], [Network,  ]]

>> Trigrams: 
[[Access,   , Network], [  , Network,  ]]

>> Noun Phrases are: 
[Access   Network]

>> Named Entities are: 
[]


============================ Sentence 144 =============================

Core   Cloud  Cloud  Edge  Fig. 


>> Tokens are: 
[Core,   , Cloud,  , Cloud,  , Edge,  , Fig, .] 

>> PoS Tags are: 
[('Core', 'PROPN'), ('  ', 'SPACE'), ('Cloud', 'PROPN'), (' ', 'SPACE'), ('Cloud', 'PROPN'), (' ', 'SPACE'), ('Edge', 'PROPN'), (' ', 'SPACE'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Core', 'compound'), ('  ', 'dep'), ('Cloud', 'appos'), (' ', 'prep'), ('Cloud', 'appos'), (' ', 'nummod'), ('Edge', 'ROOT'), (' ', 'compound'), ('Fig', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Core,   ], [  , Cloud], [Cloud,  ], [ , Cloud], [Cloud,  ], [ , Edge], [Edge,  ], [ , Fig], [Fig, .]]

>> Trigrams: 
[[Core,   , Cloud], [  , Cloud,  ], [Cloud,  , Cloud], [ , Cloud,  ], [Cloud,  , Edge], [ , Edge,  ], [Edge,  , Fig], [ , Fig, .]]

>> Noun Phrases are: 
[Cloud, Cloud,  Fig]

>> Named Entities are: 
[]


============================ Sentence 145 =============================

4. 


>> Tokens are: 
[4, .] 

>> PoS Tags are: 
[('4', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('4', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[4, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('4', 'CARDINAL')]


============================ Sentence 146 =============================

A generic cellular wireless network architecture that dis- tinguishes between edge segment, with base stations, access points, and associated computing resources, and cloud segment, consisting of core network and associated cloud computing platforms. 


>> Tokens are: 
[generic, cellular, wireless, network, architecture, dis-, tinguishes, edge, segment, ,, base, stations, ,, access, points, ,, associated, computing, resources, ,, cloud, segment, ,, consisting, core, network, associated, cloud, computing, platforms, .] 

>> PoS Tags are: 
[('generic', 'ADJ'), ('cellular', 'ADJ'), ('wireless', 'NOUN'), ('network', 'NOUN'), ('architecture', 'NOUN'), ('dis-', 'VERB'), ('tinguishes', 'NOUN'), ('edge', 'NOUN'), ('segment', 'NOUN'), (',', 'PUNCT'), ('base', 'NOUN'), ('stations', 'NOUN'), (',', 'PUNCT'), ('access', 'NOUN'), ('points', 'NOUN'), (',', 'PUNCT'), ('associated', 'VERB'), ('computing', 'NOUN'), ('resources', 'NOUN'), (',', 'PUNCT'), ('cloud', 'NOUN'), ('segment', 'NOUN'), (',', 'PUNCT'), ('consisting', 'VERB'), ('core', 'NOUN'), ('network', 'NOUN'), ('associated', 'ADJ'), ('cloud', 'NOUN'), ('computing', 'NOUN'), ('platforms', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('generic', 'amod'), ('cellular', 'amod'), ('wireless', 'amod'), ('network', 'compound'), ('architecture', 'ROOT'), ('dis-', 'relcl'), ('tinguishes', 'dobj'), ('edge', 'compound'), ('segment', 'pobj'), (',', 'punct'), ('base', 'compound'), ('stations', 'pobj'), (',', 'punct'), ('access', 'compound'), ('points', 'conj'), (',', 'punct'), ('associated', 'amod'), ('computing', 'compound'), ('resources', 'conj'), (',', 'punct'), ('cloud', 'compound'), ('segment', 'conj'), (',', 'punct'), ('consisting', 'acl'), ('core', 'compound'), ('network', 'pobj'), ('associated', 'amod'), ('cloud', 'compound'), ('computing', 'compound'), ('platforms', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[generic, cellular], [cellular, wireless], [wireless, network], [network, architecture], [architecture, dis-], [dis-, tinguishes], [tinguishes, edge], [edge, segment], [segment, ,], [,, base], [base, stations], [stations, ,], [,, access], [access, points], [points, ,], [,, associated], [associated, computing], [computing, resources], [resources, ,], [,, cloud], [cloud, segment], [segment, ,], [,, consisting], [consisting, core], [core, network], [network, associated], [associated, cloud], [cloud, computing], [computing, platforms], [platforms, .]]

>> Trigrams: 
[[generic, cellular, wireless], [cellular, wireless, network], [wireless, network, architecture], [network, architecture, dis-], [architecture, dis-, tinguishes], [dis-, tinguishes, edge], [tinguishes, edge, segment], [edge, segment, ,], [segment, ,, base], [,, base, stations], [base, stations, ,], [stations, ,, access], [,, access, points], [access, points, ,], [points, ,, associated], [,, associated, computing], [associated, computing, resources], [computing, resources, ,], [resources, ,, cloud], [,, cloud, segment], [cloud, segment, ,], [segment, ,, consisting], [,, consisting, core], [consisting, core, network], [core, network, associated], [network, associated, cloud], [associated, cloud, computing], [cloud, computing, platforms], [computing, platforms, .]]

>> Noun Phrases are: 
[A generic cellular wireless network architecture, tinguishes, edge segment, base stations, access points, associated computing resources, cloud segment, core network, associated cloud computing platforms]

>> Named Entities are: 
[]


============================ Sentence 147 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 148 =============================

Throughout, we focus on tasks carried out at the network side, rather than at the users, and organize the applications along two axes. 


>> Tokens are: 
[,, focus, tasks, carried, network, ,, users, ,, organize, applications, axes, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('focus', 'VERB'), ('tasks', 'NOUN'), ('carried', 'VERB'), ('network', 'NOUN'), (',', 'PUNCT'), ('users', 'NOUN'), (',', 'PUNCT'), ('organize', 'VERB'), ('applications', 'NOUN'), ('axes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('focus', 'ROOT'), ('tasks', 'pobj'), ('carried', 'acl'), ('network', 'compound'), (',', 'punct'), ('users', 'pobj'), (',', 'punct'), ('organize', 'conj'), ('applications', 'dobj'), ('axes', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[,, focus], [focus, tasks], [tasks, carried], [carried, network], [network, ,], [,, users], [users, ,], [,, organize], [organize, applications], [applications, axes], [axes, .]]

>> Trigrams: 
[[,, focus, tasks], [focus, tasks, carried], [tasks, carried, network], [carried, network, ,], [network, ,, users], [,, users, ,], [users, ,, organize], [,, organize, applications], [organize, applications, axes], [applications, axes, .]]

>> Noun Phrases are: 
[we, tasks, the network side, the users, the applications, two axes]

>> Named Entities are: 
[('two', 'CARDINAL')]


============================ Sentence 149 =============================

On one, with reference to Fig. 


>> Tokens are: 
[,, reference, Fig, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('reference', 'NOUN'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('reference', 'pobj'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[,, reference], [reference, Fig], [Fig, .]]

>> Trigrams: 
[[,, reference, Fig], [reference, Fig, .]]

>> Noun Phrases are: 
[reference, Fig]

>> Named Entities are: 
[('one', 'CARDINAL'), ('Fig', 'PERSON')]


============================ Sentence 150 =============================

4, we distinguish tasks that are carried out at the edge of the network, that is, at the base stations or access points and at the associated computing platforms, from tasks that are instead responsibility of a centralized cloud processor connected to the core network (see, e.g.--.-, [25]). 


>> Tokens are: 
[4, ,, distinguish, tasks, carried, edge, network, ,, ,, base, stations, access, points, associated, computing, platforms, ,, tasks, instead, responsibility, centralized, cloud, processor, connected, core, network, (, ,, e.g.--.-, ,, [, 25, ], ), .] 

>> PoS Tags are: 
[('4', 'NUM'), (',', 'PUNCT'), ('distinguish', 'VERB'), ('tasks', 'NOUN'), ('carried', 'VERB'), ('edge', 'NOUN'), ('network', 'NOUN'), (',', 'PUNCT'), (',', 'PUNCT'), ('base', 'NOUN'), ('stations', 'NOUN'), ('access', 'NOUN'), ('points', 'NOUN'), ('associated', 'ADJ'), ('computing', 'NOUN'), ('platforms', 'NOUN'), (',', 'PUNCT'), ('tasks', 'NOUN'), ('instead', 'ADV'), ('responsibility', 'NOUN'), ('centralized', 'ADJ'), ('cloud', 'NOUN'), ('processor', 'NOUN'), ('connected', 'VERB'), ('core', 'NOUN'), ('network', 'NOUN'), ('(', 'PUNCT'), (',', 'PUNCT'), ('e.g.--.-', 'X'), (',', 'PUNCT'), ('[', 'PUNCT'), ('25', 'NUM'), (']', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('4', 'dep'), (',', 'punct'), ('distinguish', 'ROOT'), ('tasks', 'dobj'), ('carried', 'relcl'), ('edge', 'pobj'), ('network', 'pobj'), (',', 'punct'), (',', 'punct'), ('base', 'compound'), ('stations', 'pobj'), ('access', 'compound'), ('points', 'conj'), ('associated', 'amod'), ('computing', 'compound'), ('platforms', 'pobj'), (',', 'punct'), ('tasks', 'pobj'), ('instead', 'advmod'), ('responsibility', 'attr'), ('centralized', 'amod'), ('cloud', 'compound'), ('processor', 'pobj'), ('connected', 'acl'), ('core', 'compound'), ('network', 'pobj'), ('(', 'punct'), (',', 'punct'), ('e.g.--.-', 'intj'), (',', 'punct'), ('[', 'punct'), ('25', 'dobj'), (']', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[4, ,], [,, distinguish], [distinguish, tasks], [tasks, carried], [carried, edge], [edge, network], [network, ,], [,, ,], [,, base], [base, stations], [stations, access], [access, points], [points, associated], [associated, computing], [computing, platforms], [platforms, ,], [,, tasks], [tasks, instead], [instead, responsibility], [responsibility, centralized], [centralized, cloud], [cloud, processor], [processor, connected], [connected, core], [core, network], [network, (], [(, ,], [,, e.g.--.-], [e.g.--.-, ,], [,, [], [[, 25], [25, ]], [], )], [), .]]

>> Trigrams: 
[[4, ,, distinguish], [,, distinguish, tasks], [distinguish, tasks, carried], [tasks, carried, edge], [carried, edge, network], [edge, network, ,], [network, ,, ,], [,, ,, base], [,, base, stations], [base, stations, access], [stations, access, points], [access, points, associated], [points, associated, computing], [associated, computing, platforms], [computing, platforms, ,], [platforms, ,, tasks], [,, tasks, instead], [tasks, instead, responsibility], [instead, responsibility, centralized], [responsibility, centralized, cloud], [centralized, cloud, processor], [cloud, processor, connected], [processor, connected, core], [connected, core, network], [core, network, (], [network, (, ,], [(, ,, e.g.--.-], [,, e.g.--.-, ,], [e.g.--.-, ,, [], [,, [, 25], [[, 25, ]], [25, ], )], [], ), .]]

>> Noun Phrases are: 
[we, tasks, the edge, the network, the base stations, access points, the associated computing platforms, tasks, responsibility, a centralized cloud processor, the core network]

>> Named Entities are: 
[('4', 'CARDINAL'), ('25', 'CARDINAL')]


============================ Sentence 151 =============================

The edge operates on the basis of timely local information collected at different layers of the protocol stack, which may include all layers from the physical up to the application layer. 


>> Tokens are: 
[edge, operates, basis, timely, local, information, collected, different, layers, protocol, stack, ,, include, layers, physical, application, layer, .] 

>> PoS Tags are: 
[('edge', 'NOUN'), ('operates', 'VERB'), ('basis', 'NOUN'), ('timely', 'ADJ'), ('local', 'ADJ'), ('information', 'NOUN'), ('collected', 'VERB'), ('different', 'ADJ'), ('layers', 'NOUN'), ('protocol', 'NOUN'), ('stack', 'NOUN'), (',', 'PUNCT'), ('include', 'VERB'), ('layers', 'NOUN'), ('physical', 'NOUN'), ('application', 'NOUN'), ('layer', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('edge', 'nsubj'), ('operates', 'ROOT'), ('basis', 'pobj'), ('timely', 'amod'), ('local', 'amod'), ('information', 'pobj'), ('collected', 'acl'), ('different', 'amod'), ('layers', 'pobj'), ('protocol', 'compound'), ('stack', 'pobj'), (',', 'punct'), ('include', 'relcl'), ('layers', 'dobj'), ('physical', 'pobj'), ('application', 'compound'), ('layer', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[edge, operates], [operates, basis], [basis, timely], [timely, local], [local, information], [information, collected], [collected, different], [different, layers], [layers, protocol], [protocol, stack], [stack, ,], [,, include], [include, layers], [layers, physical], [physical, application], [application, layer], [layer, .]]

>> Trigrams: 
[[edge, operates, basis], [operates, basis, timely], [basis, timely, local], [timely, local, information], [local, information, collected], [information, collected, different], [collected, different, layers], [different, layers, protocol], [layers, protocol, stack], [protocol, stack, ,], [stack, ,, include], [,, include, layers], [include, layers, physical], [layers, physical, application], [physical, application, layer], [application, layer, .]]

>> Noun Phrases are: 
[The edge, the basis, timely local information, different layers, the protocol stack, all layers, the physical, the application layer]

>> Named Entities are: 
[]


============================ Sentence 152 =============================

In contrast, the centralized cloud processes longer-term and global information collected from multiple nodes in the edge network, which typically encompasses only the higher layers of the protocol stack, namely networking and application layers. 


>> Tokens are: 
[contrast, ,, centralized, cloud, processes, longer, -, term, global, information, collected, multiple, nodes, edge, network, ,, typically, encompasses, higher, layers, protocol, stack, ,, networking, application, layers, .] 

>> PoS Tags are: 
[('contrast', 'NOUN'), (',', 'PUNCT'), ('centralized', 'ADJ'), ('cloud', 'NOUN'), ('processes', 'NOUN'), ('longer', 'ADJ'), ('-', 'PUNCT'), ('term', 'NOUN'), ('global', 'ADJ'), ('information', 'NOUN'), ('collected', 'VERB'), ('multiple', 'ADJ'), ('nodes', 'NOUN'), ('edge', 'NOUN'), ('network', 'NOUN'), (',', 'PUNCT'), ('typically', 'ADV'), ('encompasses', 'VERB'), ('higher', 'ADJ'), ('layers', 'NOUN'), ('protocol', 'NOUN'), ('stack', 'NOUN'), (',', 'PUNCT'), ('networking', 'VERB'), ('application', 'NOUN'), ('layers', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('contrast', 'pobj'), (',', 'punct'), ('centralized', 'amod'), ('cloud', 'nsubj'), ('processes', 'ROOT'), ('longer', 'amod'), ('-', 'punct'), ('term', 'nmod'), ('global', 'amod'), ('information', 'dobj'), ('collected', 'acl'), ('multiple', 'amod'), ('nodes', 'pobj'), ('edge', 'compound'), ('network', 'pobj'), (',', 'punct'), ('typically', 'advmod'), ('encompasses', 'relcl'), ('higher', 'amod'), ('layers', 'dobj'), ('protocol', 'compound'), ('stack', 'pobj'), (',', 'punct'), ('networking', 'advcl'), ('application', 'compound'), ('layers', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[contrast, ,], [,, centralized], [centralized, cloud], [cloud, processes], [processes, longer], [longer, -], [-, term], [term, global], [global, information], [information, collected], [collected, multiple], [multiple, nodes], [nodes, edge], [edge, network], [network, ,], [,, typically], [typically, encompasses], [encompasses, higher], [higher, layers], [layers, protocol], [protocol, stack], [stack, ,], [,, networking], [networking, application], [application, layers], [layers, .]]

>> Trigrams: 
[[contrast, ,, centralized], [,, centralized, cloud], [centralized, cloud, processes], [cloud, processes, longer], [processes, longer, -], [longer, -, term], [-, term, global], [term, global, information], [global, information, collected], [information, collected, multiple], [collected, multiple, nodes], [multiple, nodes, edge], [nodes, edge, network], [edge, network, ,], [network, ,, typically], [,, typically, encompasses], [typically, encompasses, higher], [encompasses, higher, layers], [higher, layers, protocol], [layers, protocol, stack], [protocol, stack, ,], [stack, ,, networking], [,, networking, application], [networking, application, layers], [application, layers, .]]

>> Noun Phrases are: 
[contrast, the centralized cloud, longer-term and global information, multiple nodes, the edge network, only the higher layers, the protocol stack]

>> Named Entities are: 
[]


============================ Sentence 153 =============================

Examples of data that may be available at the cloud and at the edge can be found in Table I and Table II, respectively. 


>> Tokens are: 
[Examples, data, available, cloud, edge, found, Table, Table, II, ,, respectively, .] 

>> PoS Tags are: 
[('Examples', 'NOUN'), ('data', 'NOUN'), ('available', 'ADJ'), ('cloud', 'NOUN'), ('edge', 'NOUN'), ('found', 'VERB'), ('Table', 'PROPN'), ('Table', 'PROPN'), ('II', 'PROPN'), (',', 'PUNCT'), ('respectively', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Examples', 'nsubjpass'), ('data', 'pobj'), ('available', 'acomp'), ('cloud', 'pobj'), ('edge', 'pobj'), ('found', 'ROOT'), ('Table', 'compound'), ('Table', 'compound'), ('II', 'conj'), (',', 'punct'), ('respectively', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[Examples, data], [data, available], [available, cloud], [cloud, edge], [edge, found], [found, Table], [Table, Table], [Table, II], [II, ,], [,, respectively], [respectively, .]]

>> Trigrams: 
[[Examples, data, available], [data, available, cloud], [available, cloud, edge], [cloud, edge, found], [edge, found, Table], [found, Table, Table], [Table, Table, II], [Table, II, ,], [II, ,, respectively], [,, respectively, .]]

>> Noun Phrases are: 
[Examples, data, the cloud, the edge, Table I, Table II]

>> Named Entities are: 
[('Table I and Table II', 'WORK_OF_ART')]


============================ Sentence 154 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 155 =============================

As a preliminary discussion, it is useful to ask which tasks of a communication network, if any, may benefit from machine learning through the lens of the criteria re- viewed in Sec. 


>> Tokens are: 
[preliminary, discussion, ,, useful, ask, tasks, communication, network, ,, ,, benefit, machine, learning, lens, criteria, re-, viewed, Sec, .] 

>> PoS Tags are: 
[('preliminary', 'ADJ'), ('discussion', 'NOUN'), (',', 'PUNCT'), ('useful', 'ADJ'), ('ask', 'VERB'), ('tasks', 'NOUN'), ('communication', 'NOUN'), ('network', 'NOUN'), (',', 'PUNCT'), (',', 'PUNCT'), ('benefit', 'VERB'), ('machine', 'NOUN'), ('learning', 'VERB'), ('lens', 'NOUN'), ('criteria', 'NOUN'), ('re-', 'X'), ('viewed', 'VERB'), ('Sec', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('preliminary', 'amod'), ('discussion', 'pobj'), (',', 'punct'), ('useful', 'acomp'), ('ask', 'xcomp'), ('tasks', 'dobj'), ('communication', 'compound'), ('network', 'pobj'), (',', 'punct'), (',', 'punct'), ('benefit', 'ROOT'), ('machine', 'pobj'), ('learning', 'pcomp'), ('lens', 'pobj'), ('criteria', 'pobj'), ('re-', 'nsubj'), ('viewed', 'relcl'), ('Sec', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[preliminary, discussion], [discussion, ,], [,, useful], [useful, ask], [ask, tasks], [tasks, communication], [communication, network], [network, ,], [,, ,], [,, benefit], [benefit, machine], [machine, learning], [learning, lens], [lens, criteria], [criteria, re-], [re-, viewed], [viewed, Sec], [Sec, .]]

>> Trigrams: 
[[preliminary, discussion, ,], [discussion, ,, useful], [,, useful, ask], [useful, ask, tasks], [ask, tasks, communication], [tasks, communication, network], [communication, network, ,], [network, ,, ,], [,, ,, benefit], [,, benefit, machine], [benefit, machine, learning], [machine, learning, lens], [learning, lens, criteria], [lens, criteria, re-], [criteria, re-, viewed], [re-, viewed, Sec], [viewed, Sec, .]]

>> Noun Phrases are: 
[a preliminary discussion, it, which tasks, a communication network, machine, the lens, the criteria, Sec]

>> Named Entities are: 
[('Sec', 'PERSON')]


============================ Sentence 156 =============================

I-C. First, as seen, there should be either a model deficit or an algorithm deficit that prevents the use of a conventional model-based engineering design. 


>> Tokens are: 
[-, C., ,, seen, ,, model, deficit, algorithm, deficit, prevents, use, conventional, model, -, based, engineering, design, .] 

>> PoS Tags are: 
[('-', 'PUNCT'), ('C.', 'PROPN'), (',', 'PUNCT'), ('seen', 'VERB'), (',', 'PUNCT'), ('model', 'NOUN'), ('deficit', 'NOUN'), ('algorithm', 'ADJ'), ('deficit', 'NOUN'), ('prevents', 'VERB'), ('use', 'NOUN'), ('conventional', 'ADJ'), ('model', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('engineering', 'NOUN'), ('design', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('-', 'punct'), ('C.', 'compound'), (',', 'punct'), ('seen', 'advcl'), (',', 'punct'), ('model', 'compound'), ('deficit', 'attr'), ('algorithm', 'amod'), ('deficit', 'conj'), ('prevents', 'relcl'), ('use', 'dobj'), ('conventional', 'amod'), ('model', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('engineering', 'compound'), ('design', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[-, C.], [C., ,], [,, seen], [seen, ,], [,, model], [model, deficit], [deficit, algorithm], [algorithm, deficit], [deficit, prevents], [prevents, use], [use, conventional], [conventional, model], [model, -], [-, based], [based, engineering], [engineering, design], [design, .]]

>> Trigrams: 
[[-, C., ,], [C., ,, seen], [,, seen, ,], [seen, ,, model], [,, model, deficit], [model, deficit, algorithm], [deficit, algorithm, deficit], [algorithm, deficit, prevents], [deficit, prevents, use], [prevents, use, conventional], [use, conventional, model], [conventional, model, -], [model, -, based], [-, based, engineering], [based, engineering, design], [engineering, design, .]]

>> Noun Phrases are: 
[I-C. First, either a model deficit, an algorithm deficit, the use, a conventional model-based engineering design]

>> Named Entities are: 
[]


============================ Sentence 157 =============================

As an example of model deficit, proactive resource allocation that is based on predictions of human behaviour, e.g.--.-, for caching popular contents, may not benefit from well- established and reliable models, making a data-driven approach desirable (see, e.g.--.-, [26], [27]). 


>> Tokens are: 
[example, model, deficit, ,, proactive, resource, allocation, based, predictions, human, behaviour, ,, e.g.--.-, ,, caching, popular, contents, ,, benefit, well-, established, reliable, models, ,, making, data, -, driven, approach, desirable, (, ,, e.g.--.-, ,, [, 26, ], ,, [, 27, ], ), .] 

>> PoS Tags are: 
[('example', 'NOUN'), ('model', 'NOUN'), ('deficit', 'NOUN'), (',', 'PUNCT'), ('proactive', 'ADJ'), ('resource', 'NOUN'), ('allocation', 'NOUN'), ('based', 'VERB'), ('predictions', 'NOUN'), ('human', 'ADJ'), ('behaviour', 'NOUN'), (',', 'PUNCT'), ('e.g.--.-', 'INTJ'), (',', 'PUNCT'), ('caching', 'VERB'), ('popular', 'ADJ'), ('contents', 'NOUN'), (',', 'PUNCT'), ('benefit', 'VERB'), ('well-', 'ADJ'), ('established', 'VERB'), ('reliable', 'ADJ'), ('models', 'NOUN'), (',', 'PUNCT'), ('making', 'VERB'), ('data', 'NOUN'), ('-', 'PUNCT'), ('driven', 'VERB'), ('approach', 'NOUN'), ('desirable', 'ADJ'), ('(', 'PUNCT'), (',', 'PUNCT'), ('e.g.--.-', 'X'), (',', 'PUNCT'), ('[', 'PUNCT'), ('26', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('[', 'PUNCT'), ('27', 'NUM'), (']', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), ('model', 'compound'), ('deficit', 'pobj'), (',', 'punct'), ('proactive', 'amod'), ('resource', 'compound'), ('allocation', 'appos'), ('based', 'relcl'), ('predictions', 'pobj'), ('human', 'amod'), ('behaviour', 'pobj'), (',', 'punct'), ('e.g.--.-', 'intj'), (',', 'punct'), ('caching', 'amod'), ('popular', 'amod'), ('contents', 'pobj'), (',', 'punct'), ('benefit', 'ROOT'), ('well-', 'nmod'), ('established', 'amod'), ('reliable', 'conj'), ('models', 'pobj'), (',', 'punct'), ('making', 'advcl'), ('data', 'npadvmod'), ('-', 'punct'), ('driven', 'amod'), ('approach', 'nsubj'), ('desirable', 'ccomp'), ('(', 'punct'), (',', 'punct'), ('e.g.--.-', 'intj'), (',', 'punct'), ('[', 'punct'), ('26', 'dep'), (']', 'punct'), (',', 'punct'), ('[', 'npadvmod'), ('27', 'npadvmod'), (']', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[example, model], [model, deficit], [deficit, ,], [,, proactive], [proactive, resource], [resource, allocation], [allocation, based], [based, predictions], [predictions, human], [human, behaviour], [behaviour, ,], [,, e.g.--.-], [e.g.--.-, ,], [,, caching], [caching, popular], [popular, contents], [contents, ,], [,, benefit], [benefit, well-], [well-, established], [established, reliable], [reliable, models], [models, ,], [,, making], [making, data], [data, -], [-, driven], [driven, approach], [approach, desirable], [desirable, (], [(, ,], [,, e.g.--.-], [e.g.--.-, ,], [,, [], [[, 26], [26, ]], [], ,], [,, [], [[, 27], [27, ]], [], )], [), .]]

>> Trigrams: 
[[example, model, deficit], [model, deficit, ,], [deficit, ,, proactive], [,, proactive, resource], [proactive, resource, allocation], [resource, allocation, based], [allocation, based, predictions], [based, predictions, human], [predictions, human, behaviour], [human, behaviour, ,], [behaviour, ,, e.g.--.-], [,, e.g.--.-, ,], [e.g.--.-, ,, caching], [,, caching, popular], [caching, popular, contents], [popular, contents, ,], [contents, ,, benefit], [,, benefit, well-], [benefit, well-, established], [well-, established, reliable], [established, reliable, models], [reliable, models, ,], [models, ,, making], [,, making, data], [making, data, -], [data, -, driven], [-, driven, approach], [driven, approach, desirable], [approach, desirable, (], [desirable, (, ,], [(, ,, e.g.--.-], [,, e.g.--.-, ,], [e.g.--.-, ,, [], [,, [, 26], [[, 26, ]], [26, ], ,], [], ,, [], [,, [, 27], [[, 27, ]], [27, ], )], [], ), .]]

>> Noun Phrases are: 
[an example, model deficit, proactive resource allocation, predictions, human behaviour, caching popular contents, well- established and reliable models, a data-driven approach]

>> Named Entities are: 
[('26', 'CARDINAL'), ('27', 'CARDINAL')]


============================ Sentence 158 =============================

For an instance of algorithm deficit, consider the problem of channel decoding for channels with known and accurate models based on which the maximum likelihood decoder entails an excessive complexity.   


>> Tokens are: 
[instance, algorithm, deficit, ,, consider, problem, channel, decoding, channels, known, accurate, models, based, maximum, likelihood, decoder, entails, excessive, complexity, .,  ] 

>> PoS Tags are: 
[('instance', 'NOUN'), ('algorithm', 'ADJ'), ('deficit', 'NOUN'), (',', 'PUNCT'), ('consider', 'VERB'), ('problem', 'NOUN'), ('channel', 'NOUN'), ('decoding', 'VERB'), ('channels', 'NOUN'), ('known', 'ADJ'), ('accurate', 'ADJ'), ('models', 'NOUN'), ('based', 'VERB'), ('maximum', 'ADJ'), ('likelihood', 'NOUN'), ('decoder', 'NOUN'), ('entails', 'VERB'), ('excessive', 'ADJ'), ('complexity', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('instance', 'pobj'), ('algorithm', 'amod'), ('deficit', 'pobj'), (',', 'punct'), ('consider', 'ROOT'), ('problem', 'dobj'), ('channel', 'pobj'), ('decoding', 'acl'), ('channels', 'pobj'), ('known', 'amod'), ('accurate', 'conj'), ('models', 'pobj'), ('based', 'acl'), ('maximum', 'amod'), ('likelihood', 'compound'), ('decoder', 'nsubj'), ('entails', 'relcl'), ('excessive', 'amod'), ('complexity', 'dobj'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[instance, algorithm], [algorithm, deficit], [deficit, ,], [,, consider], [consider, problem], [problem, channel], [channel, decoding], [decoding, channels], [channels, known], [known, accurate], [accurate, models], [models, based], [based, maximum], [maximum, likelihood], [likelihood, decoder], [decoder, entails], [entails, excessive], [excessive, complexity], [complexity, .], [.,  ]]

>> Trigrams: 
[[instance, algorithm, deficit], [algorithm, deficit, ,], [deficit, ,, consider], [,, consider, problem], [consider, problem, channel], [problem, channel, decoding], [channel, decoding, channels], [decoding, channels, known], [channels, known, accurate], [known, accurate, models], [accurate, models, based], [models, based, maximum], [based, maximum, likelihood], [maximum, likelihood, decoder], [likelihood, decoder, entails], [decoder, entails, excessive], [entails, excessive, complexity], [excessive, complexity, .], [complexity, .,  ]]

>> Noun Phrases are: 
[an instance, algorithm deficit, the problem, channel, channels, known and accurate models, the maximum likelihood decoder, an excessive complexity]

>> Named Entities are: 
[]


============================ Sentence 159 =============================

Assuming that the problem at hand is characterized by model or algorithm deficits, one should then consider the rest of the criteria discussed in Sec. 


>> Tokens are: 
[Assuming, problem, hand, characterized, model, algorithm, deficits, ,, consider, rest, criteria, discussed, Sec, .] 

>> PoS Tags are: 
[('Assuming', 'VERB'), ('problem', 'NOUN'), ('hand', 'NOUN'), ('characterized', 'VERB'), ('model', 'NOUN'), ('algorithm', 'NOUN'), ('deficits', 'NOUN'), (',', 'PUNCT'), ('consider', 'VERB'), ('rest', 'NOUN'), ('criteria', 'NOUN'), ('discussed', 'VERB'), ('Sec', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Assuming', 'advcl'), ('problem', 'nsubjpass'), ('hand', 'pobj'), ('characterized', 'ccomp'), ('model', 'pobj'), ('algorithm', 'compound'), ('deficits', 'conj'), (',', 'punct'), ('consider', 'ROOT'), ('rest', 'dobj'), ('criteria', 'pobj'), ('discussed', 'acl'), ('Sec', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Assuming, problem], [problem, hand], [hand, characterized], [characterized, model], [model, algorithm], [algorithm, deficits], [deficits, ,], [,, consider], [consider, rest], [rest, criteria], [criteria, discussed], [discussed, Sec], [Sec, .]]

>> Trigrams: 
[[Assuming, problem, hand], [problem, hand, characterized], [hand, characterized, model], [characterized, model, algorithm], [model, algorithm, deficits], [algorithm, deficits, ,], [deficits, ,, consider], [,, consider, rest], [consider, rest, criteria], [rest, criteria, discussed], [criteria, discussed, Sec], [discussed, Sec, .]]

>> Noun Phrases are: 
[the problem, hand, model, algorithm deficits, one, the rest, the criteria, Sec]

>> Named Entities are: 
[('Sec', 'PERSON')]


============================ Sentence 160 =============================

I-C. Most are  4    TABLE 


>> Tokens are: 
[-, C.,  , 4,    , TABLE] 

>> PoS Tags are: 
[('-', 'PUNCT'), ('C.', 'PROPN'), (' ', 'SPACE'), ('4', 'NUM'), ('   ', 'SPACE'), ('TABLE', 'NOUN')] 

>> Dependency Tags are: 
[('-', 'punct'), ('C.', 'compound'), (' ', 'attr'), ('4', 'compound'), ('   ', 'nummod'), ('TABLE', 'appos')]

>> Bigrams: 
[[-, C.], [C.,  ], [ , 4], [4,    ], [   , TABLE]]

>> Trigrams: 
[[-, C.,  ], [C.,  , 4], [ , 4,    ], [4,    , TABLE]]

>> Noun Phrases are: 
[4    TABLE]

>> Named Entities are: 
[('4', 'CARDINAL')]


============================ Sentence 161 =============================

I EXAMPLES OF DATA AVAILABLE 


>> Tokens are: 
[EXAMPLES, DATA, AVAILABLE] 

>> PoS Tags are: 
[('EXAMPLES', 'PROPN'), ('DATA', 'PROPN'), ('AVAILABLE', 'PROPN')] 

>> Dependency Tags are: 
[('EXAMPLES', 'appos'), ('DATA', 'pobj'), ('AVAILABLE', 'appos')]

>> Bigrams: 
[[EXAMPLES, DATA], [DATA, AVAILABLE]]

>> Trigrams: 
[[EXAMPLES, DATA, AVAILABLE]]

>> Noun Phrases are: 
[I, EXAMPLES, DATA, AVAILABLE]

>> Named Entities are: 
[]


============================ Sentence 162 =============================

AT THE EDGE SEGMENT OF A COMMUNICATION NETWORK 


>> Tokens are: 
[EDGE, SEGMENT, COMMUNICATION, NETWORK] 

>> PoS Tags are: 
[('EDGE', 'NOUN'), ('SEGMENT', 'NOUN'), ('COMMUNICATION', 'PROPN'), ('NETWORK', 'PROPN')] 

>> Dependency Tags are: 
[('EDGE', 'compound'), ('SEGMENT', 'pobj'), ('COMMUNICATION', 'compound'), ('NETWORK', 'pobj')]

>> Bigrams: 
[[EDGE, SEGMENT], [SEGMENT, COMMUNICATION], [COMMUNICATION, NETWORK]]

>> Trigrams: 
[[EDGE, SEGMENT, COMMUNICATION], [SEGMENT, COMMUNICATION, NETWORK]]

>> Noun Phrases are: 
[THE EDGE SEGMENT, A COMMUNICATION NETWORK]

>> Named Entities are: 
[('THE EDGE SEGMENT OF A COMMUNICATION NETWORK', 'EVENT')]


============================ Sentence 163 =============================

 Layer Data Physical Baseband signals, channel state information   


>> Tokens are: 
[ , Layer, Data, Physical, Baseband, signals, ,, channel, state, information,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Layer', 'PROPN'), ('Data', 'PROPN'), ('Physical', 'PROPN'), ('Baseband', 'PROPN'), ('signals', 'NOUN'), (',', 'PUNCT'), ('channel', 'NOUN'), ('state', 'NOUN'), ('information', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('Layer', 'compound'), ('Data', 'compound'), ('Physical', 'compound'), ('Baseband', 'compound'), ('signals', 'dobj'), (',', 'punct'), ('channel', 'compound'), ('state', 'compound'), ('information', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[ , Layer], [Layer, Data], [Data, Physical], [Physical, Baseband], [Baseband, signals], [signals, ,], [,, channel], [channel, state], [state, information], [information,  ]]

>> Trigrams: 
[[ , Layer, Data], [Layer, Data, Physical], [Data, Physical, Baseband], [Physical, Baseband, signals], [Baseband, signals, ,], [signals, ,, channel], [,, channel, state], [channel, state, information], [state, information,  ]]

>> Noun Phrases are: 
[Layer Data Physical Baseband signals, channel state information]

>> Named Entities are: 
[('Layer Data', 'ORG')]


============================ Sentence 164 =============================

Medium Access Control/ Link Throughput, FER, random access load and latency Network Location, traffic loads across services, users’ device types, battery levels   


>> Tokens are: 
[Medium, Access, Control/, Link, Throughput, ,, FER, ,, random, access, load, latency, Network, Location, ,, traffic, loads, services, ,, users, ’, device, types, ,, battery, levels,  ] 

>> PoS Tags are: 
[('Medium', 'PROPN'), ('Access', 'PROPN'), ('Control/', 'PROPN'), ('Link', 'PROPN'), ('Throughput', 'PROPN'), (',', 'PUNCT'), ('FER', 'PROPN'), (',', 'PUNCT'), ('random', 'ADJ'), ('access', 'NOUN'), ('load', 'NOUN'), ('latency', 'NOUN'), ('Network', 'PROPN'), ('Location', 'PROPN'), (',', 'PUNCT'), ('traffic', 'NOUN'), ('loads', 'NOUN'), ('services', 'NOUN'), (',', 'PUNCT'), ('users', 'NOUN'), ('’', 'PART'), ('device', 'NOUN'), ('types', 'NOUN'), (',', 'PUNCT'), ('battery', 'NOUN'), ('levels', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Medium', 'compound'), ('Access', 'compound'), ('Control/', 'compound'), ('Link', 'compound'), ('Throughput', 'ROOT'), (',', 'punct'), ('FER', 'appos'), (',', 'punct'), ('random', 'amod'), ('access', 'compound'), ('load', 'conj'), ('latency', 'conj'), ('Network', 'compound'), ('Location', 'appos'), (',', 'punct'), ('traffic', 'compound'), ('loads', 'conj'), ('services', 'pobj'), (',', 'punct'), ('users', 'poss'), ('’', 'case'), ('device', 'compound'), ('types', 'conj'), (',', 'punct'), ('battery', 'compound'), ('levels', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[Medium, Access], [Access, Control/], [Control/, Link], [Link, Throughput], [Throughput, ,], [,, FER], [FER, ,], [,, random], [random, access], [access, load], [load, latency], [latency, Network], [Network, Location], [Location, ,], [,, traffic], [traffic, loads], [loads, services], [services, ,], [,, users], [users, ’], [’, device], [device, types], [types, ,], [,, battery], [battery, levels], [levels,  ]]

>> Trigrams: 
[[Medium, Access, Control/], [Access, Control/, Link], [Control/, Link, Throughput], [Link, Throughput, ,], [Throughput, ,, FER], [,, FER, ,], [FER, ,, random], [,, random, access], [random, access, load], [access, load, latency], [load, latency, Network], [latency, Network, Location], [Network, Location, ,], [Location, ,, traffic], [,, traffic, loads], [traffic, loads, services], [loads, services, ,], [services, ,, users], [,, users, ’], [users, ’, device], [’, device, types], [device, types, ,], [types, ,, battery], [,, battery, levels], [battery, levels,  ]]

>> Noun Phrases are: 
[Medium Access Control/ Link Throughput, FER, random access load, latency, Network Location, traffic loads, services, users’ device types, battery levels]

>> Named Entities are: 
[('Medium Access Control/ Link Throughput', 'WORK_OF_ART'), ('FER', 'ORG'), ('Network Location', 'PERSON')]


============================ Sentence 165 =============================

Application Users’ preferences, content demands, computing loads, QoS metrics  TABLE II EXAMPLES OF DATA AVAILABLE 


>> Tokens are: 
[Application, Users, ’, preferences, ,, content, demands, ,, computing, loads, ,, QoS, metrics,  , TABLE, II, EXAMPLES, DATA, AVAILABLE] 

>> PoS Tags are: 
[('Application', 'PROPN'), ('Users', 'PROPN'), ('’', 'PART'), ('preferences', 'NOUN'), (',', 'PUNCT'), ('content', 'NOUN'), ('demands', 'NOUN'), (',', 'PUNCT'), ('computing', 'VERB'), ('loads', 'NOUN'), (',', 'PUNCT'), ('QoS', 'NOUN'), ('metrics', 'NOUN'), (' ', 'SPACE'), ('TABLE', 'PROPN'), ('II', 'PROPN'), ('EXAMPLES', 'PROPN'), ('DATA', 'PROPN'), ('AVAILABLE', 'PROPN')] 

>> Dependency Tags are: 
[('Application', 'compound'), ('Users', 'poss'), ('’', 'case'), ('preferences', 'ROOT'), (',', 'punct'), ('content', 'compound'), ('demands', 'appos'), (',', 'punct'), ('computing', 'acl'), ('loads', 'dobj'), (',', 'punct'), ('QoS', 'compound'), ('metrics', 'appos'), (' ', 'appos'), ('TABLE', 'compound'), ('II', 'compound'), ('EXAMPLES', 'appos'), ('DATA', 'pobj'), ('AVAILABLE', 'punct')]

>> Bigrams: 
[[Application, Users], [Users, ’], [’, preferences], [preferences, ,], [,, content], [content, demands], [demands, ,], [,, computing], [computing, loads], [loads, ,], [,, QoS], [QoS, metrics], [metrics,  ], [ , TABLE], [TABLE, II], [II, EXAMPLES], [EXAMPLES, DATA], [DATA, AVAILABLE]]

>> Trigrams: 
[[Application, Users, ’], [Users, ’, preferences], [’, preferences, ,], [preferences, ,, content], [,, content, demands], [content, demands, ,], [demands, ,, computing], [,, computing, loads], [computing, loads, ,], [loads, ,, QoS], [,, QoS, metrics], [QoS, metrics,  ], [metrics,  , TABLE], [ , TABLE, II], [TABLE, II, EXAMPLES], [II, EXAMPLES, DATA], [EXAMPLES, DATA, AVAILABLE]]

>> Noun Phrases are: 
[Application Users’ preferences, content demands, loads, QoS metrics, TABLE II EXAMPLES, DATA]

>> Named Entities are: 
[('TABLE II EXAMPLES OF DATA AVAILABLE', 'EVENT')]


============================ Sentence 166 =============================

AT THE CLOUD SEGMENT OF A COMMUNICATION NETWORK 


>> Tokens are: 
[CLOUD, SEGMENT, COMMUNICATION, NETWORK] 

>> PoS Tags are: 
[('CLOUD', 'PROPN'), ('SEGMENT', 'NOUN'), ('COMMUNICATION', 'PROPN'), ('NETWORK', 'PROPN')] 

>> Dependency Tags are: 
[('CLOUD', 'compound'), ('SEGMENT', 'pobj'), ('COMMUNICATION', 'compound'), ('NETWORK', 'pobj')]

>> Bigrams: 
[[CLOUD, SEGMENT], [SEGMENT, COMMUNICATION], [COMMUNICATION, NETWORK]]

>> Trigrams: 
[[CLOUD, SEGMENT, COMMUNICATION], [SEGMENT, COMMUNICATION, NETWORK]]

>> Noun Phrases are: 
[THE CLOUD SEGMENT, A COMMUNICATION NETWORK]

>> Named Entities are: 
[('THE CLOUD SEGMENT OF A COMMUNICATION NETWORK', 'FAC')]


============================ Sentence 167 =============================

 Layer Data Network Mobility patterns, network-wide traffic statistics, outage rates   


>> Tokens are: 
[ , Layer, Data, Network, Mobility, patterns, ,, network, -, wide, traffic, statistics, ,, outage, rates,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Layer', 'PROPN'), ('Data', 'PROPN'), ('Network', 'PROPN'), ('Mobility', 'PROPN'), ('patterns', 'NOUN'), (',', 'PUNCT'), ('network', 'NOUN'), ('-', 'PUNCT'), ('wide', 'ADJ'), ('traffic', 'NOUN'), ('statistics', 'NOUN'), (',', 'PUNCT'), ('outage', 'NOUN'), ('rates', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('Layer', 'compound'), ('Data', 'compound'), ('Network', 'compound'), ('Mobility', 'compound'), ('patterns', 'ROOT'), (',', 'punct'), ('network', 'npadvmod'), ('-', 'punct'), ('wide', 'amod'), ('traffic', 'compound'), ('statistics', 'conj'), (',', 'punct'), ('outage', 'compound'), ('rates', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[ , Layer], [Layer, Data], [Data, Network], [Network, Mobility], [Mobility, patterns], [patterns, ,], [,, network], [network, -], [-, wide], [wide, traffic], [traffic, statistics], [statistics, ,], [,, outage], [outage, rates], [rates,  ]]

>> Trigrams: 
[[ , Layer, Data], [Layer, Data, Network], [Data, Network, Mobility], [Network, Mobility, patterns], [Mobility, patterns, ,], [patterns, ,, network], [,, network, -], [network, -, wide], [-, wide, traffic], [wide, traffic, statistics], [traffic, statistics, ,], [statistics, ,, outage], [,, outage, rates], [outage, rates,  ]]

>> Noun Phrases are: 
[ Layer Data Network Mobility patterns, network-wide traffic statistics, outage rates]

>> Named Entities are: 
[('Layer Data Network Mobility', 'ORG')]


============================ Sentence 168 =============================

Application User’s behaviour patterns, subscription information, service usage statistics, TCP/IP traffic statistics  typically satisfied by communication problems. 


>> Tokens are: 
[Application, User, behaviour, patterns, ,, subscription, information, ,, service, usage, statistics, ,, TCP, /, IP, traffic, statistics,  , typically, satisfied, communication, problems, .] 

>> PoS Tags are: 
[('Application', 'PROPN'), ('User', 'PROPN'), ('behaviour', 'NOUN'), ('patterns', 'NOUN'), (',', 'PUNCT'), ('subscription', 'NOUN'), ('information', 'NOUN'), (',', 'PUNCT'), ('service', 'NOUN'), ('usage', 'NOUN'), ('statistics', 'NOUN'), (',', 'PUNCT'), ('TCP', 'PROPN'), ('/', 'SYM'), ('IP', 'NOUN'), ('traffic', 'NOUN'), ('statistics', 'NOUN'), (' ', 'SPACE'), ('typically', 'ADV'), ('satisfied', 'VERB'), ('communication', 'NOUN'), ('problems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Application', 'compound'), ('User', 'ROOT'), ('behaviour', 'compound'), ('patterns', 'appos'), (',', 'punct'), ('subscription', 'compound'), ('information', 'conj'), (',', 'punct'), ('service', 'compound'), ('usage', 'compound'), ('statistics', 'conj'), (',', 'punct'), ('TCP', 'nmod'), ('/', 'punct'), ('IP', 'compound'), ('traffic', 'compound'), ('statistics', 'appos'), (' ', 'nsubj'), ('typically', 'advmod'), ('satisfied', 'relcl'), ('communication', 'compound'), ('problems', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Application, User], [User, behaviour], [behaviour, patterns], [patterns, ,], [,, subscription], [subscription, information], [information, ,], [,, service], [service, usage], [usage, statistics], [statistics, ,], [,, TCP], [TCP, /], [/, IP], [IP, traffic], [traffic, statistics], [statistics,  ], [ , typically], [typically, satisfied], [satisfied, communication], [communication, problems], [problems, .]]

>> Trigrams: 
[[Application, User, behaviour], [User, behaviour, patterns], [behaviour, patterns, ,], [patterns, ,, subscription], [,, subscription, information], [subscription, information, ,], [information, ,, service], [,, service, usage], [service, usage, statistics], [usage, statistics, ,], [statistics, ,, TCP], [,, TCP, /], [TCP, /, IP], [/, IP, traffic], [IP, traffic, statistics], [traffic, statistics,  ], [statistics,  , typically], [ , typically, satisfied], [typically, satisfied, communication], [satisfied, communication, problems], [communication, problems, .]]

>> Noun Phrases are: 
[Application User, behaviour patterns, subscription information, service usage statistics, , TCP/IP traffic statistics, communication problems]

>> Named Entities are: 
[('TCP/IP', 'ORG')]


============================ Sentence 169 =============================

Indeed, for most tasks in communication networks, it is possible to collect or generate training data sets and there is no need to apply common sense or to provide detailed explanations for how a decision was made.   


>> Tokens are: 
[,, tasks, communication, networks, ,, possible, collect, generate, training, data, sets, need, apply, common, sense, provide, detailed, explanations, decision, .,  ] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('tasks', 'NOUN'), ('communication', 'NOUN'), ('networks', 'NOUN'), (',', 'PUNCT'), ('possible', 'ADJ'), ('collect', 'VERB'), ('generate', 'VERB'), ('training', 'NOUN'), ('data', 'NOUN'), ('sets', 'NOUN'), ('need', 'NOUN'), ('apply', 'VERB'), ('common', 'ADJ'), ('sense', 'NOUN'), ('provide', 'VERB'), ('detailed', 'ADJ'), ('explanations', 'NOUN'), ('decision', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(',', 'punct'), ('tasks', 'pobj'), ('communication', 'compound'), ('networks', 'pobj'), (',', 'punct'), ('possible', 'acomp'), ('collect', 'xcomp'), ('generate', 'conj'), ('training', 'compound'), ('data', 'compound'), ('sets', 'dobj'), ('need', 'attr'), ('apply', 'acl'), ('common', 'amod'), ('sense', 'dobj'), ('provide', 'conj'), ('detailed', 'amod'), ('explanations', 'dobj'), ('decision', 'nsubjpass'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[,, tasks], [tasks, communication], [communication, networks], [networks, ,], [,, possible], [possible, collect], [collect, generate], [generate, training], [training, data], [data, sets], [sets, need], [need, apply], [apply, common], [common, sense], [sense, provide], [provide, detailed], [detailed, explanations], [explanations, decision], [decision, .], [.,  ]]

>> Trigrams: 
[[,, tasks, communication], [tasks, communication, networks], [communication, networks, ,], [networks, ,, possible], [,, possible, collect], [possible, collect, generate], [collect, generate, training], [generate, training, data], [training, data, sets], [data, sets, need], [sets, need, apply], [need, apply, common], [apply, common, sense], [common, sense, provide], [sense, provide, detailed], [provide, detailed, explanations], [detailed, explanations, decision], [explanations, decision, .], [decision, .,  ]]

>> Noun Phrases are: 
[most tasks, communication networks, it, training data sets, no need, common sense, detailed explanations, a decision]

>> Named Entities are: 
[]


============================ Sentence 170 =============================

The remaining two criteria need to be checked on a case-by-case basis. 


>> Tokens are: 
[remaining, criteria, need, checked, case, -, -, case, basis, .] 

>> PoS Tags are: 
[('remaining', 'VERB'), ('criteria', 'NOUN'), ('need', 'VERB'), ('checked', 'VERB'), ('case', 'NOUN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('case', 'NOUN'), ('basis', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('remaining', 'amod'), ('criteria', 'nsubj'), ('need', 'ROOT'), ('checked', 'xcomp'), ('case', 'nmod'), ('-', 'punct'), ('-', 'punct'), ('case', 'pobj'), ('basis', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[remaining, criteria], [criteria, need], [need, checked], [checked, case], [case, -], [-, -], [-, case], [case, basis], [basis, .]]

>> Trigrams: 
[[remaining, criteria, need], [criteria, need, checked], [need, checked, case], [checked, case, -], [case, -, -], [-, -, case], [-, case, basis], [case, basis, .]]

>> Noun Phrases are: 
[The remaining two criteria, case]

>> Named Entities are: 
[('two', 'CARDINAL')]


============================ Sentence 171 =============================

First, the phenomenon or function being learned should not change too rapidly over time. 


>> Tokens are: 
[,, phenomenon, function, learned, change, rapidly, time, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('phenomenon', 'NOUN'), ('function', 'NOUN'), ('learned', 'VERB'), ('change', 'VERB'), ('rapidly', 'ADV'), ('time', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('phenomenon', 'nsubj'), ('function', 'conj'), ('learned', 'acl'), ('change', 'ROOT'), ('rapidly', 'advmod'), ('time', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[,, phenomenon], [phenomenon, function], [function, learned], [learned, change], [change, rapidly], [rapidly, time], [time, .]]

>> Trigrams: 
[[,, phenomenon, function], [phenomenon, function, learned], [function, learned, change], [learned, change, rapidly], [change, rapidly, time], [rapidly, time, .]]

>> Noun Phrases are: 
[the phenomenon, function, time]

>> Named Entities are: 
[('First', 'ORDINAL')]


============================ Sentence 172 =============================

For example, designing a channel decoder based on samples obtained from a limited number of realizations of a given propagation channel requires the channel is stationary over a sufficiently long period of time (see [28]). 


>> Tokens are: 
[example, ,, designing, channel, decoder, based, samples, obtained, limited, number, realizations, given, propagation, channel, requires, channel, stationary, sufficiently, long, period, time, (, [, 28, ], ), .] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), ('designing', 'VERB'), ('channel', 'NOUN'), ('decoder', 'NOUN'), ('based', 'VERB'), ('samples', 'NOUN'), ('obtained', 'VERB'), ('limited', 'ADJ'), ('number', 'NOUN'), ('realizations', 'NOUN'), ('given', 'VERB'), ('propagation', 'NOUN'), ('channel', 'NOUN'), ('requires', 'VERB'), ('channel', 'NOUN'), ('stationary', 'ADJ'), ('sufficiently', 'ADV'), ('long', 'ADJ'), ('period', 'NOUN'), ('time', 'NOUN'), ('(', 'PUNCT'), ('[', 'PUNCT'), ('28', 'NUM'), (']', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct'), ('designing', 'csubj'), ('channel', 'compound'), ('decoder', 'dobj'), ('based', 'prep'), ('samples', 'pobj'), ('obtained', 'acl'), ('limited', 'amod'), ('number', 'pobj'), ('realizations', 'pobj'), ('given', 'amod'), ('propagation', 'compound'), ('channel', 'pobj'), ('requires', 'ROOT'), ('channel', 'nsubj'), ('stationary', 'acomp'), ('sufficiently', 'advmod'), ('long', 'amod'), ('period', 'pobj'), ('time', 'pobj'), ('(', 'punct'), ('[', 'punct'), ('28', 'dobj'), (']', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[example, ,], [,, designing], [designing, channel], [channel, decoder], [decoder, based], [based, samples], [samples, obtained], [obtained, limited], [limited, number], [number, realizations], [realizations, given], [given, propagation], [propagation, channel], [channel, requires], [requires, channel], [channel, stationary], [stationary, sufficiently], [sufficiently, long], [long, period], [period, time], [time, (], [(, [], [[, 28], [28, ]], [], )], [), .]]

>> Trigrams: 
[[example, ,, designing], [,, designing, channel], [designing, channel, decoder], [channel, decoder, based], [decoder, based, samples], [based, samples, obtained], [samples, obtained, limited], [obtained, limited, number], [limited, number, realizations], [number, realizations, given], [realizations, given, propagation], [given, propagation, channel], [propagation, channel, requires], [channel, requires, channel], [requires, channel, stationary], [channel, stationary, sufficiently], [stationary, sufficiently, long], [sufficiently, long, period], [long, period, time], [period, time, (], [time, (, [], [(, [, 28], [[, 28, ]], [28, ], )], [], ), .]]

>> Noun Phrases are: 
[example, a channel decoder, samples, a limited number, realizations, a given propagation channel, the channel, a sufficiently long period, time]

>> Named Entities are: 
[('28', 'CARDINAL')]


============================ Sentence 173 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 174 =============================

Second, in the case of a model deficit, the task should have some tolerance for error in the sense of not requir- ing provable performance guarantees. 


>> Tokens are: 
[Second, ,, case, model, deficit, ,, task, tolerance, error, sense, requir-, ing, provable, performance, guarantees, .] 

>> PoS Tags are: 
[('Second', 'ADJ'), (',', 'PUNCT'), ('case', 'NOUN'), ('model', 'NOUN'), ('deficit', 'NOUN'), (',', 'PUNCT'), ('task', 'NOUN'), ('tolerance', 'NOUN'), ('error', 'NOUN'), ('sense', 'NOUN'), ('requir-', 'VERB'), ('ing', 'ADJ'), ('provable', 'ADJ'), ('performance', 'NOUN'), ('guarantees', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Second', 'advmod'), (',', 'punct'), ('case', 'pobj'), ('model', 'compound'), ('deficit', 'pobj'), (',', 'punct'), ('task', 'nsubj'), ('tolerance', 'dobj'), ('error', 'pobj'), ('sense', 'pobj'), ('requir-', 'pcomp'), ('ing', 'amod'), ('provable', 'amod'), ('performance', 'compound'), ('guarantees', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Second, ,], [,, case], [case, model], [model, deficit], [deficit, ,], [,, task], [task, tolerance], [tolerance, error], [error, sense], [sense, requir-], [requir-, ing], [ing, provable], [provable, performance], [performance, guarantees], [guarantees, .]]

>> Trigrams: 
[[Second, ,, case], [,, case, model], [case, model, deficit], [model, deficit, ,], [deficit, ,, task], [,, task, tolerance], [task, tolerance, error], [tolerance, error, sense], [error, sense, requir-], [sense, requir-, ing], [requir-, ing, provable], [ing, provable, performance], [provable, performance, guarantees], [performance, guarantees, .]]

>> Noun Phrases are: 
[the case, a model deficit, the task, some tolerance, error, the sense, ing provable performance guarantees]

>> Named Entities are: 
[('Second', 'ORDINAL')]


============================ Sentence 175 =============================

For instance, the performance of a decoder trained on a channel lacking a well-established channel model, such as a biological communication link, can only be relied upon insofar as one trusts the available data to be representative of the complete set of possible realizations of the problem under study. 


>> Tokens are: 
[instance, ,, performance, decoder, trained, channel, lacking, -, established, channel, model, ,, biological, communication, link, ,, relied, insofar, trusts, available, data, representative, complete, set, possible, realizations, problem, study, .] 

>> PoS Tags are: 
[('instance', 'NOUN'), (',', 'PUNCT'), ('performance', 'NOUN'), ('decoder', 'NOUN'), ('trained', 'VERB'), ('channel', 'NOUN'), ('lacking', 'VERB'), ('-', 'PUNCT'), ('established', 'VERB'), ('channel', 'NOUN'), ('model', 'NOUN'), (',', 'PUNCT'), ('biological', 'ADJ'), ('communication', 'NOUN'), ('link', 'NOUN'), (',', 'PUNCT'), ('relied', 'VERB'), ('insofar', 'ADV'), ('trusts', 'VERB'), ('available', 'ADJ'), ('data', 'NOUN'), ('representative', 'ADJ'), ('complete', 'ADJ'), ('set', 'NOUN'), ('possible', 'ADJ'), ('realizations', 'NOUN'), ('problem', 'NOUN'), ('study', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('instance', 'pobj'), (',', 'punct'), ('performance', 'nsubjpass'), ('decoder', 'pobj'), ('trained', 'acl'), ('channel', 'pobj'), ('lacking', 'acl'), ('-', 'punct'), ('established', 'amod'), ('channel', 'compound'), ('model', 'dobj'), (',', 'punct'), ('biological', 'amod'), ('communication', 'compound'), ('link', 'pobj'), (',', 'punct'), ('relied', 'ROOT'), ('insofar', 'advmod'), ('trusts', 'advcl'), ('available', 'amod'), ('data', 'dobj'), ('representative', 'acomp'), ('complete', 'amod'), ('set', 'pobj'), ('possible', 'amod'), ('realizations', 'pobj'), ('problem', 'pobj'), ('study', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[instance, ,], [,, performance], [performance, decoder], [decoder, trained], [trained, channel], [channel, lacking], [lacking, -], [-, established], [established, channel], [channel, model], [model, ,], [,, biological], [biological, communication], [communication, link], [link, ,], [,, relied], [relied, insofar], [insofar, trusts], [trusts, available], [available, data], [data, representative], [representative, complete], [complete, set], [set, possible], [possible, realizations], [realizations, problem], [problem, study], [study, .]]

>> Trigrams: 
[[instance, ,, performance], [,, performance, decoder], [performance, decoder, trained], [decoder, trained, channel], [trained, channel, lacking], [channel, lacking, -], [lacking, -, established], [-, established, channel], [established, channel, model], [channel, model, ,], [model, ,, biological], [,, biological, communication], [biological, communication, link], [communication, link, ,], [link, ,, relied], [,, relied, insofar], [relied, insofar, trusts], [insofar, trusts, available], [trusts, available, data], [available, data, representative], [data, representative, complete], [representative, complete, set], [complete, set, possible], [set, possible, realizations], [possible, realizations, problem], [realizations, problem, study], [problem, study, .]]

>> Noun Phrases are: 
[instance, the performance, a decoder, a channel, a well-established channel model, a biological communication link, the available data, the complete set, possible realizations, the problem, study]

>> Named Entities are: 
[]


============================ Sentence 176 =============================

Alternatively, under an algorithm deficit, a physics-based model, if available, can be possibly used to carry out computer simulations and obtain numerical performance guarantees. 


>> Tokens are: 
[Alternatively, ,, algorithm, deficit, ,, physics, -, based, model, ,, available, ,, possibly, carry, computer, simulations, obtain, numerical, performance, guarantees, .] 

>> PoS Tags are: 
[('Alternatively', 'ADV'), (',', 'PUNCT'), ('algorithm', 'ADJ'), ('deficit', 'NOUN'), (',', 'PUNCT'), ('physics', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('model', 'NOUN'), (',', 'PUNCT'), ('available', 'ADJ'), (',', 'PUNCT'), ('possibly', 'ADV'), ('carry', 'VERB'), ('computer', 'NOUN'), ('simulations', 'NOUN'), ('obtain', 'VERB'), ('numerical', 'ADJ'), ('performance', 'NOUN'), ('guarantees', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Alternatively', 'advmod'), (',', 'punct'), ('algorithm', 'amod'), ('deficit', 'pobj'), (',', 'punct'), ('physics', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('model', 'nsubjpass'), (',', 'punct'), ('available', 'advcl'), (',', 'punct'), ('possibly', 'advmod'), ('carry', 'xcomp'), ('computer', 'compound'), ('simulations', 'dobj'), ('obtain', 'conj'), ('numerical', 'amod'), ('performance', 'compound'), ('guarantees', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Alternatively, ,], [,, algorithm], [algorithm, deficit], [deficit, ,], [,, physics], [physics, -], [-, based], [based, model], [model, ,], [,, available], [available, ,], [,, possibly], [possibly, carry], [carry, computer], [computer, simulations], [simulations, obtain], [obtain, numerical], [numerical, performance], [performance, guarantees], [guarantees, .]]

>> Trigrams: 
[[Alternatively, ,, algorithm], [,, algorithm, deficit], [algorithm, deficit, ,], [deficit, ,, physics], [,, physics, -], [physics, -, based], [-, based, model], [based, model, ,], [model, ,, available], [,, available, ,], [available, ,, possibly], [,, possibly, carry], [possibly, carry, computer], [carry, computer, simulations], [computer, simulations, obtain], [simulations, obtain, numerical], [obtain, numerical, performance], [numerical, performance, guarantees], [performance, guarantees, .]]

>> Noun Phrases are: 
[an algorithm deficit, a physics-based model, computer simulations, numerical performance guarantees]

>> Named Entities are: 
[]


============================ Sentence 177 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 178 =============================

In Sec. 


>> Tokens are: 
[Sec, .] 

>> PoS Tags are: 
[('Sec', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Sec', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Sec, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Sec]

>> Named Entities are: 
[('Sec', 'PERSON')]


============================ Sentence 179 =============================

IV and Sec. 


>> Tokens are: 
[IV, Sec, .] 

>> PoS Tags are: 
[('IV', 'PROPN'), ('Sec', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('IV', 'ROOT'), ('Sec', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[IV, Sec], [Sec, .]]

>> Trigrams: 
[[IV, Sec, .]]

>> Noun Phrases are: 
[IV, Sec]

>> Named Entities are: 
[('Sec', 'PERSON')]


============================ Sentence 180 =============================

VI, we will provide some pointers to specific applications to supervised and unsupervised learning, respectively. 


>> Tokens are: 
[VI, ,, provide, pointers, specific, applications, supervised, unsupervised, learning, ,, respectively, .] 

>> PoS Tags are: 
[('VI', 'PROPN'), (',', 'PUNCT'), ('provide', 'VERB'), ('pointers', 'NOUN'), ('specific', 'ADJ'), ('applications', 'NOUN'), ('supervised', 'ADJ'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('respectively', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('VI', 'npadvmod'), (',', 'punct'), ('provide', 'ROOT'), ('pointers', 'dobj'), ('specific', 'amod'), ('applications', 'pobj'), ('supervised', 'advcl'), ('unsupervised', 'conj'), ('learning', 'dobj'), (',', 'punct'), ('respectively', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[VI, ,], [,, provide], [provide, pointers], [pointers, specific], [specific, applications], [applications, supervised], [supervised, unsupervised], [unsupervised, learning], [learning, ,], [,, respectively], [respectively, .]]

>> Trigrams: 
[[VI, ,, provide], [,, provide, pointers], [provide, pointers, specific], [pointers, specific, applications], [specific, applications, supervised], [applications, supervised, unsupervised], [supervised, unsupervised, learning], [unsupervised, learning, ,], [learning, ,, respectively], [,, respectively, .]]

>> Noun Phrases are: 
[we, some pointers, specific applications, learning]

>> Named Entities are: 
[]


============================ Sentence 181 =============================

 III. 


>> Tokens are: 
[ , III, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('III', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('III', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[ , III], [III, .]]

>> Trigrams: 
[[ , III, .]]

>> Noun Phrases are: 
[ III]

>> Named Entities are: 
[]


============================ Sentence 182 =============================

SUPERVISED LEARNING   


>> Tokens are: 
[SUPERVISED, LEARNING,  ] 

>> PoS Tags are: 
[('SUPERVISED', 'ADJ'), ('LEARNING', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('SUPERVISED', 'amod'), ('LEARNING', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[SUPERVISED, LEARNING], [LEARNING,  ]]

>> Trigrams: 
[[SUPERVISED, LEARNING,  ]]

>> Noun Phrases are: 
[SUPERVISED LEARNING]

>> Named Entities are: 
[]


============================ Sentence 183 =============================

As introduced in Sec. 


>> Tokens are: 
[introduced, Sec, .] 

>> PoS Tags are: 
[('introduced', 'VERB'), ('Sec', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('introduced', 'ROOT'), ('Sec', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[introduced, Sec], [Sec, .]]

>> Trigrams: 
[[introduced, Sec, .]]

>> Noun Phrases are: 
[Sec]

>> Named Entities are: 
[('Sec', 'PERSON')]


============================ Sentence 184 =============================

I, supervised learning aims at discovering patterns that relate inputs to outputs on the basis of a training set of input-output examples. 


>> Tokens are: 
[,, supervised, learning, aims, discovering, patterns, relate, inputs, outputs, basis, training, set, input, -, output, examples, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('supervised', 'ADJ'), ('learning', 'VERB'), ('aims', 'VERB'), ('discovering', 'VERB'), ('patterns', 'NOUN'), ('relate', 'VERB'), ('inputs', 'NOUN'), ('outputs', 'NOUN'), ('basis', 'NOUN'), ('training', 'NOUN'), ('set', 'NOUN'), ('input', 'NOUN'), ('-', 'PUNCT'), ('output', 'NOUN'), ('examples', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('supervised', 'amod'), ('learning', 'nsubj'), ('aims', 'ROOT'), ('discovering', 'pcomp'), ('patterns', 'dobj'), ('relate', 'relcl'), ('inputs', 'dobj'), ('outputs', 'pobj'), ('basis', 'pobj'), ('training', 'compound'), ('set', 'pobj'), ('input', 'compound'), ('-', 'punct'), ('output', 'compound'), ('examples', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[,, supervised], [supervised, learning], [learning, aims], [aims, discovering], [discovering, patterns], [patterns, relate], [relate, inputs], [inputs, outputs], [outputs, basis], [basis, training], [training, set], [set, input], [input, -], [-, output], [output, examples], [examples, .]]

>> Trigrams: 
[[,, supervised, learning], [supervised, learning, aims], [learning, aims, discovering], [aims, discovering, patterns], [discovering, patterns, relate], [patterns, relate, inputs], [relate, inputs, outputs], [inputs, outputs, basis], [outputs, basis, training], [basis, training, set], [training, set, input], [set, input, -], [input, -, output], [-, output, examples], [output, examples, .]]

>> Noun Phrases are: 
[I, patterns, inputs, outputs, the basis, a training set, input-output examples]

>> Named Entities are: 
[]


============================ Sentence 185 =============================

We can distinguish two classes of supervised learning problems depending on whether the outputs are continuous or dis- crete variables. 


>> Tokens are: 
[distinguish, classes, supervised, learning, problems, depending, outputs, continuous, dis-, crete, variables, .] 

>> PoS Tags are: 
[('distinguish', 'VERB'), ('classes', 'NOUN'), ('supervised', 'ADJ'), ('learning', 'NOUN'), ('problems', 'NOUN'), ('depending', 'VERB'), ('outputs', 'NOUN'), ('continuous', 'ADJ'), ('dis-', 'X'), ('crete', 'ADJ'), ('variables', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('distinguish', 'ROOT'), ('classes', 'dobj'), ('supervised', 'amod'), ('learning', 'compound'), ('problems', 'pobj'), ('depending', 'prep'), ('outputs', 'nsubj'), ('continuous', 'acomp'), ('dis-', 'conj'), ('crete', 'amod'), ('variables', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[distinguish, classes], [classes, supervised], [supervised, learning], [learning, problems], [problems, depending], [depending, outputs], [outputs, continuous], [continuous, dis-], [dis-, crete], [crete, variables], [variables, .]]

>> Trigrams: 
[[distinguish, classes, supervised], [classes, supervised, learning], [supervised, learning, problems], [learning, problems, depending], [problems, depending, outputs], [depending, outputs, continuous], [outputs, continuous, dis-], [continuous, dis-, crete], [dis-, crete, variables], [crete, variables, .]]

>> Noun Phrases are: 
[We, two classes, supervised learning problems, the outputs, crete variables]

>> Named Entities are: 
[('two', 'CARDINAL')]


============================ Sentence 186 =============================

In the former case, we have a regression problem, while in the latter we have a classification  0 


>> Tokens are: 
[case, ,, regression, problem, ,, classification,  , 0] 

>> PoS Tags are: 
[('case', 'NOUN'), (',', 'PUNCT'), ('regression', 'NOUN'), ('problem', 'NOUN'), (',', 'PUNCT'), ('classification', 'NOUN'), (' ', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('case', 'pobj'), (',', 'punct'), ('regression', 'compound'), ('problem', 'dobj'), (',', 'punct'), ('classification', 'dobj'), (' ', 'dobj'), ('0', 'punct')]

>> Bigrams: 
[[case, ,], [,, regression], [regression, problem], [problem, ,], [,, classification], [classification,  ], [ , 0]]

>> Trigrams: 
[[case, ,, regression], [,, regression, problem], [regression, problem, ,], [problem, ,, classification], [,, classification,  ], [classification,  , 0]]

>> Noun Phrases are: 
[the former case, we, a regression problem, we, a classification]

>> Named Entities are: 
[]


============================ Sentence 187 =============================

0.2 0.4 0.6 0.8 1 -1.5  -1  -0.5  0  0.5  1  1.5  ?   


>> Tokens are: 
[0.2, 0.4, 0.6, 0.8, 1, -1.5,  , -1,  , -0.5,  , 0,  , 0.5,  , 1,  , 1.5,  , ?,  ] 

>> PoS Tags are: 
[('0.2', 'NUM'), ('0.4', 'NUM'), ('0.6', 'NUM'), ('0.8', 'NUM'), ('1', 'NUM'), ('-1.5', 'NUM'), (' ', 'SPACE'), ('-1', 'PUNCT'), (' ', 'SPACE'), ('-0.5', 'X'), (' ', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE'), ('0.5', 'NUM'), (' ', 'SPACE'), ('1', 'NUM'), (' ', 'SPACE'), ('1.5', 'NUM'), (' ', 'SPACE'), ('?', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('0.2', 'compound'), ('0.4', 'quantmod'), ('0.6', 'appos'), ('0.8', 'compound'), ('1', 'nummod'), ('-1.5', 'punct'), (' ', 'appos'), ('-1', 'punct'), (' ', 'appos'), ('-0.5', 'punct'), (' ', 'quantmod'), ('0', 'punct'), (' ', 'ROOT'), ('0.5', 'nummod'), (' ', 'appos'), ('1', 'nummod'), (' ', 'appos'), ('1.5', 'nummod'), (' ', 'npadvmod'), ('?', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[0.2, 0.4], [0.4, 0.6], [0.6, 0.8], [0.8, 1], [1, -1.5], [-1.5,  ], [ , -1], [-1,  ], [ , -0.5], [-0.5,  ], [ , 0], [0,  ], [ , 0.5], [0.5,  ], [ , 1], [1,  ], [ , 1.5], [1.5,  ], [ , ?], [?,  ]]

>> Trigrams: 
[[0.2, 0.4, 0.6], [0.4, 0.6, 0.8], [0.6, 0.8, 1], [0.8, 1, -1.5], [1, -1.5,  ], [-1.5,  , -1], [ , -1,  ], [-1,  , -0.5], [ , -0.5,  ], [-0.5,  , 0], [ , 0,  ], [0,  , 0.5], [ , 0.5,  ], [0.5,  , 1], [ , 1,  ], [1,  , 1.5], [ , 1.5,  ], [1.5,  , ?], [ , ?,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('0.2 0.4 0.6 0.8 1 -1.5', 'QUANTITY'), ('0', 'CARDINAL'), ('0.5', 'CARDINAL'), ('1', 'CARDINAL')]


============================ Sentence 188 =============================

Fig. 5. 


>> Tokens are: 
[Fig, ., 5, .] 

>> PoS Tags are: 
[('Fig', 'PROPN'), ('.', 'PUNCT'), ('5', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Fig', 'ROOT'), ('.', 'punct'), ('5', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[Fig, .], [., 5], [5, .]]

>> Trigrams: 
[[Fig, ., 5], [., 5, .]]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON'), ('5', 'CARDINAL')]


============================ Sentence 189 =============================

Illustration of the supervised learning problem of regression: 


>> Tokens are: 
[Illustration, supervised, learning, problem, regression, :] 

>> PoS Tags are: 
[('Illustration', 'NOUN'), ('supervised', 'ADJ'), ('learning', 'NOUN'), ('problem', 'NOUN'), ('regression', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Illustration', 'ROOT'), ('supervised', 'amod'), ('learning', 'compound'), ('problem', 'pobj'), ('regression', 'pobj'), (':', 'punct')]

>> Bigrams: 
[[Illustration, supervised], [supervised, learning], [learning, problem], [problem, regression], [regression, :]]

>> Trigrams: 
[[Illustration, supervised, learning], [supervised, learning, problem], [learning, problem, regression], [problem, regression, :]]

>> Noun Phrases are: 
[Illustration, the supervised learning problem, regression]

>> Named Entities are: 
[]


============================ Sentence 190 =============================

Given input-output training examples (xn, tn), with n = 1, ..., N , how should we predict the output t for an unobserved value of the input x?  problem. 


>> Tokens are: 
[Given, input, -, output, training, examples, (, xn, ,, tn, ), ,, n, =, 1, ,, ..., ,, N, ,, predict, output, t, unobserved, value, input, x, ?,  , problem, .] 

>> PoS Tags are: 
[('Given', 'VERB'), ('input', 'NOUN'), ('-', 'PUNCT'), ('output', 'NOUN'), ('training', 'NOUN'), ('examples', 'NOUN'), ('(', 'PUNCT'), ('xn', 'NUM'), (',', 'PUNCT'), ('tn', 'ADV'), (')', 'PUNCT'), (',', 'PUNCT'), ('n', 'CCONJ'), ('=', 'SYM'), ('1', 'NUM'), (',', 'PUNCT'), ('...', 'PUNCT'), (',', 'PUNCT'), ('N', 'PROPN'), (',', 'PUNCT'), ('predict', 'VERB'), ('output', 'NOUN'), ('t', 'NOUN'), ('unobserved', 'ADJ'), ('value', 'NOUN'), ('input', 'NOUN'), ('x', 'PUNCT'), ('?', 'PUNCT'), (' ', 'SPACE'), ('problem', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Given', 'prep'), ('input', 'compound'), ('-', 'punct'), ('output', 'compound'), ('training', 'compound'), ('examples', 'pobj'), ('(', 'punct'), ('xn', 'appos'), (',', 'punct'), ('tn', 'advmod'), (')', 'punct'), (',', 'punct'), ('n', 'pobj'), ('=', 'pobj'), ('1', 'prep'), (',', 'punct'), ('...', 'punct'), (',', 'punct'), ('N', 'nmod'), (',', 'punct'), ('predict', 'ROOT'), ('output', 'compound'), ('t', 'dobj'), ('unobserved', 'amod'), ('value', 'pobj'), ('input', 'pobj'), ('x', 'punct'), ('?', 'punct'), (' ', 'compound'), ('problem', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Given, input], [input, -], [-, output], [output, training], [training, examples], [examples, (], [(, xn], [xn, ,], [,, tn], [tn, )], [), ,], [,, n], [n, =], [=, 1], [1, ,], [,, ...], [..., ,], [,, N], [N, ,], [,, predict], [predict, output], [output, t], [t, unobserved], [unobserved, value], [value, input], [input, x], [x, ?], [?,  ], [ , problem], [problem, .]]

>> Trigrams: 
[[Given, input, -], [input, -, output], [-, output, training], [output, training, examples], [training, examples, (], [examples, (, xn], [(, xn, ,], [xn, ,, tn], [,, tn, )], [tn, ), ,], [), ,, n], [,, n, =], [n, =, 1], [=, 1, ,], [1, ,, ...], [,, ..., ,], [..., ,, N], [,, N, ,], [N, ,, predict], [,, predict, output], [predict, output, t], [output, t, unobserved], [t, unobserved, value], [unobserved, value, input], [value, input, x], [input, x, ?], [x, ?,  ], [?,  , problem], [ , problem, .]]

>> Noun Phrases are: 
[input-output training examples, we, the output t, an unobserved value, the input,  problem]

>> Named Entities are: 
[('1', 'CARDINAL'), ('N', 'GPE')]


============================ Sentence 191 =============================

We discuss the respective goals of the two problems next. 


>> Tokens are: 
[discuss, respective, goals, problems, .] 

>> PoS Tags are: 
[('discuss', 'VERB'), ('respective', 'ADJ'), ('goals', 'NOUN'), ('problems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('discuss', 'ROOT'), ('respective', 'amod'), ('goals', 'dobj'), ('problems', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[discuss, respective], [respective, goals], [goals, problems], [problems, .]]

>> Trigrams: 
[[discuss, respective, goals], [respective, goals, problems], [goals, problems, .]]

>> Noun Phrases are: 
[We, the respective goals, the two problems]

>> Named Entities are: 
[('two', 'CARDINAL')]


============================ Sentence 192 =============================

This is followed by a formal definition of classification and regression, and by a discussion of the methodology and of the main steps involved in tackling the two classes of problems. 


>> Tokens are: 
[followed, formal, definition, classification, regression, ,, discussion, methodology, main, steps, involved, tackling, classes, problems, .] 

>> PoS Tags are: 
[('followed', 'VERB'), ('formal', 'ADJ'), ('definition', 'NOUN'), ('classification', 'NOUN'), ('regression', 'NOUN'), (',', 'PUNCT'), ('discussion', 'NOUN'), ('methodology', 'NOUN'), ('main', 'ADJ'), ('steps', 'NOUN'), ('involved', 'VERB'), ('tackling', 'VERB'), ('classes', 'NOUN'), ('problems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('followed', 'ROOT'), ('formal', 'amod'), ('definition', 'pobj'), ('classification', 'pobj'), ('regression', 'conj'), (',', 'punct'), ('discussion', 'pobj'), ('methodology', 'pobj'), ('main', 'amod'), ('steps', 'pobj'), ('involved', 'acl'), ('tackling', 'pcomp'), ('classes', 'dobj'), ('problems', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[followed, formal], [formal, definition], [definition, classification], [classification, regression], [regression, ,], [,, discussion], [discussion, methodology], [methodology, main], [main, steps], [steps, involved], [involved, tackling], [tackling, classes], [classes, problems], [problems, .]]

>> Trigrams: 
[[followed, formal, definition], [formal, definition, classification], [definition, classification, regression], [classification, regression, ,], [regression, ,, discussion], [,, discussion, methodology], [discussion, methodology, main], [methodology, main, steps], [main, steps, involved], [steps, involved, tackling], [involved, tackling, classes], [tackling, classes, problems], [classes, problems, .]]

>> Noun Phrases are: 
[a formal definition, classification, regression, a discussion, the methodology, the main steps, the two classes, problems]

>> Named Entities are: 
[('two', 'CARDINAL')]


============================ Sentence 193 =============================

 A. Goals   


>> Tokens are: 
[ , A., Goals,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('A.', 'NOUN'), ('Goals', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('A.', 'compound'), ('Goals', 'ROOT'), (' ', 'appos')]

>> Bigrams: 
[[ , A.], [A., Goals], [Goals,  ]]

>> Trigrams: 
[[ , A., Goals], [A., Goals,  ]]

>> Noun Phrases are: 
[ A. Goals]

>> Named Entities are: 
[]


============================ Sentence 194 =============================

As illustrated in Fig. 


>> Tokens are: 
[illustrated, Fig, .] 

>> PoS Tags are: 
[('illustrated', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('illustrated', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[illustrated, Fig], [Fig, .]]

>> Trigrams: 
[[illustrated, Fig, .]]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 195 =============================

5, in a regression problem, we are given a training set D of N training points (xn, tn), with n = 1, ..., N , where the variables xn are the inputs, also known as covariates, domain points, or explanatory variables; while the variables tn are the outputs, also known as dependent variables, labels, or responses. 


>> Tokens are: 
[5, ,, regression, problem, ,, given, training, set, D, N, training, points, (, xn, ,, tn, ), ,, n, =, 1, ,, ..., ,, N, ,, variables, xn, inputs, ,, known, covariates, ,, domain, points, ,, explanatory, variables, ;, variables, tn, outputs, ,, known, dependent, variables, ,, labels, ,, responses, .] 

>> PoS Tags are: 
[('5', 'NUM'), (',', 'PUNCT'), ('regression', 'NOUN'), ('problem', 'NOUN'), (',', 'PUNCT'), ('given', 'VERB'), ('training', 'NOUN'), ('set', 'VERB'), ('D', 'NOUN'), ('N', 'PROPN'), ('training', 'NOUN'), ('points', 'NOUN'), ('(', 'PUNCT'), ('xn', 'NUM'), (',', 'PUNCT'), ('tn', 'ADV'), (')', 'PUNCT'), (',', 'PUNCT'), ('n', 'CCONJ'), ('=', 'SYM'), ('1', 'NUM'), (',', 'PUNCT'), ('...', 'PUNCT'), (',', 'PUNCT'), ('N', 'PROPN'), (',', 'PUNCT'), ('variables', 'NOUN'), ('xn', 'NUM'), ('inputs', 'NOUN'), (',', 'PUNCT'), ('known', 'VERB'), ('covariates', 'NOUN'), (',', 'PUNCT'), ('domain', 'NOUN'), ('points', 'NOUN'), (',', 'PUNCT'), ('explanatory', 'ADJ'), ('variables', 'NOUN'), (';', 'PUNCT'), ('variables', 'NOUN'), ('tn', 'ADV'), ('outputs', 'NOUN'), (',', 'PUNCT'), ('known', 'VERB'), ('dependent', 'ADJ'), ('variables', 'NOUN'), (',', 'PUNCT'), ('labels', 'NOUN'), (',', 'PUNCT'), ('responses', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('5', 'meta'), (',', 'punct'), ('regression', 'compound'), ('problem', 'pobj'), (',', 'punct'), ('given', 'ROOT'), ('training', 'npadvmod'), ('set', 'amod'), ('D', 'nmod'), ('N', 'pobj'), ('training', 'compound'), ('points', 'dobj'), ('(', 'punct'), ('xn', 'appos'), (',', 'punct'), ('tn', 'advmod'), (')', 'punct'), (',', 'punct'), ('n', 'pobj'), ('=', 'conj'), ('1', 'prep'), (',', 'punct'), ('...', 'punct'), (',', 'punct'), ('N', 'npadvmod'), (',', 'punct'), ('variables', 'nsubj'), ('xn', 'appos'), ('inputs', 'attr'), (',', 'punct'), ('known', 'advcl'), ('covariates', 'pobj'), (',', 'punct'), ('domain', 'compound'), ('points', 'conj'), (',', 'punct'), ('explanatory', 'amod'), ('variables', 'conj'), (';', 'punct'), ('variables', 'nsubj'), ('tn', 'advmod'), ('outputs', 'attr'), (',', 'punct'), ('known', 'acl'), ('dependent', 'amod'), ('variables', 'pobj'), (',', 'punct'), ('labels', 'conj'), (',', 'punct'), ('responses', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[5, ,], [,, regression], [regression, problem], [problem, ,], [,, given], [given, training], [training, set], [set, D], [D, N], [N, training], [training, points], [points, (], [(, xn], [xn, ,], [,, tn], [tn, )], [), ,], [,, n], [n, =], [=, 1], [1, ,], [,, ...], [..., ,], [,, N], [N, ,], [,, variables], [variables, xn], [xn, inputs], [inputs, ,], [,, known], [known, covariates], [covariates, ,], [,, domain], [domain, points], [points, ,], [,, explanatory], [explanatory, variables], [variables, ;], [;, variables], [variables, tn], [tn, outputs], [outputs, ,], [,, known], [known, dependent], [dependent, variables], [variables, ,], [,, labels], [labels, ,], [,, responses], [responses, .]]

>> Trigrams: 
[[5, ,, regression], [,, regression, problem], [regression, problem, ,], [problem, ,, given], [,, given, training], [given, training, set], [training, set, D], [set, D, N], [D, N, training], [N, training, points], [training, points, (], [points, (, xn], [(, xn, ,], [xn, ,, tn], [,, tn, )], [tn, ), ,], [), ,, n], [,, n, =], [n, =, 1], [=, 1, ,], [1, ,, ...], [,, ..., ,], [..., ,, N], [,, N, ,], [N, ,, variables], [,, variables, xn], [variables, xn, inputs], [xn, inputs, ,], [inputs, ,, known], [,, known, covariates], [known, covariates, ,], [covariates, ,, domain], [,, domain, points], [domain, points, ,], [points, ,, explanatory], [,, explanatory, variables], [explanatory, variables, ;], [variables, ;, variables], [;, variables, tn], [variables, tn, outputs], [tn, outputs, ,], [outputs, ,, known], [,, known, dependent], [known, dependent, variables], [dependent, variables, ,], [variables, ,, labels], [,, labels, ,], [labels, ,, responses], [,, responses, .]]

>> Noun Phrases are: 
[a regression problem, we, N, the variables, the inputs, covariates, domain points, explanatory variables, the variables, the outputs, dependent variables, labels, responses]

>> Named Entities are: 
[('5', 'CARDINAL'), ('1', 'CARDINAL'), ('N', 'GPE')]


============================ Sentence 196 =============================

In regression, the outputs are continuous variables. 


>> Tokens are: 
[regression, ,, outputs, continuous, variables, .] 

>> PoS Tags are: 
[('regression', 'NOUN'), (',', 'PUNCT'), ('outputs', 'NOUN'), ('continuous', 'ADJ'), ('variables', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('regression', 'pobj'), (',', 'punct'), ('outputs', 'nsubj'), ('continuous', 'amod'), ('variables', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[regression, ,], [,, outputs], [outputs, continuous], [continuous, variables], [variables, .]]

>> Trigrams: 
[[regression, ,, outputs], [,, outputs, continuous], [outputs, continuous, variables], [continuous, variables, .]]

>> Noun Phrases are: 
[regression, the outputs, continuous variables]

>> Named Entities are: 
[]


============================ Sentence 197 =============================

The problem is to predict the output t for a new, that is, as of yet unobserved 


>> Tokens are: 
[problem, predict, output, t, new, ,, ,, unobserved] 

>> PoS Tags are: 
[('problem', 'NOUN'), ('predict', 'VERB'), ('output', 'NOUN'), ('t', 'NOUN'), ('new', 'ADJ'), (',', 'PUNCT'), (',', 'PUNCT'), ('unobserved', 'ADJ')] 

>> Dependency Tags are: 
[('problem', 'nsubj'), ('predict', 'xcomp'), ('output', 'compound'), ('t', 'dobj'), ('new', 'pobj'), (',', 'punct'), (',', 'punct'), ('unobserved', 'conj')]

>> Bigrams: 
[[problem, predict], [predict, output], [output, t], [t, new], [new, ,], [,, ,], [,, unobserved]]

>> Trigrams: 
[[problem, predict, output], [predict, output, t], [output, t, new], [t, new, ,], [new, ,, ,], [,, ,, unobserved]]

>> Noun Phrases are: 
[The problem, the output t]

>> Named Entities are: 
[]


============================ Sentence 198 =============================

, input x.   


>> Tokens are: 
[,, input, x.,  ] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('input', 'NOUN'), ('x.', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(',', 'punct'), ('input', 'ROOT'), ('x.', 'appos'), (' ', 'appos')]

>> Bigrams: 
[[,, input], [input, x.], [x.,  ]]

>> Trigrams: 
[[,, input, x.], [input, x.,  ]]

>> Noun Phrases are: 
[, input, x.]

>> Named Entities are: 
[]


============================ Sentence 199 =============================

As illustrated in Fig. 


>> Tokens are: 
[illustrated, Fig, .] 

>> PoS Tags are: 
[('illustrated', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('illustrated', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[illustrated, Fig], [Fig, .]]

>> Trigrams: 
[[illustrated, Fig, .]]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 200 =============================

6, classification is similarly defined with the only caveat that the outputs t are discrete  5    4 5 6 7 8 9 0.5  1  1.5  2  2.5  3  3.5  4  4.5  ?   


>> Tokens are: 
[6, ,, classification, similarly, defined, caveat, outputs, t, discrete,  , 5,    , 4, 5, 6, 7, 8, 9, 0.5,  , 1,  , 1.5,  , 2,  , 2.5,  , 3,  , 3.5,  , 4,  , 4.5,  , ?,  ] 

>> PoS Tags are: 
[('6', 'NUM'), (',', 'PUNCT'), ('classification', 'NOUN'), ('similarly', 'ADV'), ('defined', 'VERB'), ('caveat', 'NOUN'), ('outputs', 'NOUN'), ('t', 'NOUN'), ('discrete', 'ADJ'), (' ', 'SPACE'), ('5', 'NUM'), ('   ', 'SPACE'), ('4', 'NUM'), ('5', 'NUM'), ('6', 'NUM'), ('7', 'NUM'), ('8', 'NUM'), ('9', 'NUM'), ('0.5', 'NUM'), (' ', 'SPACE'), ('1', 'NUM'), (' ', 'SPACE'), ('1.5', 'NUM'), (' ', 'SPACE'), ('2', 'NUM'), (' ', 'SPACE'), ('2.5', 'NUM'), (' ', 'SPACE'), ('3', 'NUM'), (' ', 'SPACE'), ('3.5', 'NUM'), (' ', 'SPACE'), ('4', 'NUM'), (' ', 'SPACE'), ('4.5', 'NUM'), (' ', 'SPACE'), ('?', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('6', 'dep'), (',', 'punct'), ('classification', 'nsubjpass'), ('similarly', 'advmod'), ('defined', 'ROOT'), ('caveat', 'pobj'), ('outputs', 'compound'), ('t', 'nsubj'), ('discrete', 'acomp'), (' ', 'prep'), ('5', 'nummod'), ('   ', 'nmod'), ('4', 'nummod'), ('5', 'nummod'), ('6', 'nummod'), ('7', 'nummod'), ('8', 'quantmod'), ('9', 'compound'), ('0.5', 'nummod'), (' ', 'appos'), ('1', 'nummod'), (' ', 'appos'), ('1.5', 'nummod'), (' ', 'npadvmod'), ('2', 'nummod'), (' ', 'dobj'), ('2.5', 'nummod'), (' ', 'appos'), ('3', 'nummod'), (' ', 'npadvmod'), ('3.5', 'nummod'), (' ', 'appos'), ('4', 'nummod'), (' ', 'dobj'), ('4.5', 'nummod'), (' ', 'npadvmod'), ('?', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[6, ,], [,, classification], [classification, similarly], [similarly, defined], [defined, caveat], [caveat, outputs], [outputs, t], [t, discrete], [discrete,  ], [ , 5], [5,    ], [   , 4], [4, 5], [5, 6], [6, 7], [7, 8], [8, 9], [9, 0.5], [0.5,  ], [ , 1], [1,  ], [ , 1.5], [1.5,  ], [ , 2], [2,  ], [ , 2.5], [2.5,  ], [ , 3], [3,  ], [ , 3.5], [3.5,  ], [ , 4], [4,  ], [ , 4.5], [4.5,  ], [ , ?], [?,  ]]

>> Trigrams: 
[[6, ,, classification], [,, classification, similarly], [classification, similarly, defined], [similarly, defined, caveat], [defined, caveat, outputs], [caveat, outputs, t], [outputs, t, discrete], [t, discrete,  ], [discrete,  , 5], [ , 5,    ], [5,    , 4], [   , 4, 5], [4, 5, 6], [5, 6, 7], [6, 7, 8], [7, 8, 9], [8, 9, 0.5], [9, 0.5,  ], [0.5,  , 1], [ , 1,  ], [1,  , 1.5], [ , 1.5,  ], [1.5,  , 2], [ , 2,  ], [2,  , 2.5], [ , 2.5,  ], [2.5,  , 3], [ , 3,  ], [3,  , 3.5], [ , 3.5,  ], [3.5,  , 4], [ , 4,  ], [4,  , 4.5], [ , 4.5,  ], [4.5,  , ?], [ , ?,  ]]

>> Noun Phrases are: 
[classification, the only caveat, the outputs t]

>> Named Entities are: 
[('6', 'CARDINAL'), ('5', 'CARDINAL'), ('1', 'CARDINAL'), ('1.5', 'CARDINAL'), ('2', 'CARDINAL'), ('2.5', 'CARDINAL'), ('3', 'CARDINAL'), ('3.5', 'CARDINAL')]


============================ Sentence 201 =============================

Fig. 


>> Tokens are: 
[Fig, .] 

>> PoS Tags are: 
[('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Fig', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Fig, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 202 =============================

6. 


>> Tokens are: 
[6, .] 

>> PoS Tags are: 
[('6', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('6', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[6, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('6', 'CARDINAL')]


============================ Sentence 203 =============================

Illustration of the supervised learning problem of classi- fication: 


>> Tokens are: 
[Illustration, supervised, learning, problem, classi-, fication, :] 

>> PoS Tags are: 
[('Illustration', 'NOUN'), ('supervised', 'ADJ'), ('learning', 'NOUN'), ('problem', 'NOUN'), ('classi-', 'ADJ'), ('fication', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Illustration', 'ROOT'), ('supervised', 'amod'), ('learning', 'compound'), ('problem', 'pobj'), ('classi-', 'amod'), ('fication', 'pobj'), (':', 'punct')]

>> Bigrams: 
[[Illustration, supervised], [supervised, learning], [learning, problem], [problem, classi-], [classi-, fication], [fication, :]]

>> Trigrams: 
[[Illustration, supervised, learning], [supervised, learning, problem], [learning, problem, classi-], [problem, classi-, fication], [classi-, fication, :]]

>> Noun Phrases are: 
[Illustration, the supervised learning problem, classi- fication]

>> Named Entities are: 
[]


============================ Sentence 204 =============================

Given input-output training examples (xn, tn), with n = 1, ..., N , how should we predict the output t for an unobserved value of the input x?  variables that take a finite number of possible values. 


>> Tokens are: 
[Given, input, -, output, training, examples, (, xn, ,, tn, ), ,, n, =, 1, ,, ..., ,, N, ,, predict, output, t, unobserved, value, input, x, ?,  , variables, finite, number, possible, values, .] 

>> PoS Tags are: 
[('Given', 'VERB'), ('input', 'NOUN'), ('-', 'PUNCT'), ('output', 'NOUN'), ('training', 'NOUN'), ('examples', 'NOUN'), ('(', 'PUNCT'), ('xn', 'NUM'), (',', 'PUNCT'), ('tn', 'ADV'), (')', 'PUNCT'), (',', 'PUNCT'), ('n', 'CCONJ'), ('=', 'SYM'), ('1', 'NUM'), (',', 'PUNCT'), ('...', 'PUNCT'), (',', 'PUNCT'), ('N', 'PROPN'), (',', 'PUNCT'), ('predict', 'VERB'), ('output', 'NOUN'), ('t', 'NOUN'), ('unobserved', 'ADJ'), ('value', 'NOUN'), ('input', 'NOUN'), ('x', 'PUNCT'), ('?', 'PUNCT'), (' ', 'SPACE'), ('variables', 'NOUN'), ('finite', 'ADJ'), ('number', 'NOUN'), ('possible', 'ADJ'), ('values', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Given', 'prep'), ('input', 'amod'), ('-', 'punct'), ('output', 'compound'), ('training', 'compound'), ('examples', 'pobj'), ('(', 'punct'), ('xn', 'appos'), (',', 'punct'), ('tn', 'advmod'), (')', 'punct'), (',', 'punct'), ('n', 'pobj'), ('=', 'pobj'), ('1', 'prep'), (',', 'punct'), ('...', 'punct'), (',', 'punct'), ('N', 'nmod'), (',', 'punct'), ('predict', 'ROOT'), ('output', 'compound'), ('t', 'dobj'), ('unobserved', 'amod'), ('value', 'pobj'), ('input', 'pobj'), ('x', 'punct'), ('?', 'punct'), (' ', 'compound'), ('variables', 'dobj'), ('finite', 'amod'), ('number', 'dobj'), ('possible', 'amod'), ('values', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Given, input], [input, -], [-, output], [output, training], [training, examples], [examples, (], [(, xn], [xn, ,], [,, tn], [tn, )], [), ,], [,, n], [n, =], [=, 1], [1, ,], [,, ...], [..., ,], [,, N], [N, ,], [,, predict], [predict, output], [output, t], [t, unobserved], [unobserved, value], [value, input], [input, x], [x, ?], [?,  ], [ , variables], [variables, finite], [finite, number], [number, possible], [possible, values], [values, .]]

>> Trigrams: 
[[Given, input, -], [input, -, output], [-, output, training], [output, training, examples], [training, examples, (], [examples, (, xn], [(, xn, ,], [xn, ,, tn], [,, tn, )], [tn, ), ,], [), ,, n], [,, n, =], [n, =, 1], [=, 1, ,], [1, ,, ...], [,, ..., ,], [..., ,, N], [,, N, ,], [N, ,, predict], [,, predict, output], [predict, output, t], [output, t, unobserved], [t, unobserved, value], [unobserved, value, input], [value, input, x], [input, x, ?], [x, ?,  ], [?,  , variables], [ , variables, finite], [variables, finite, number], [finite, number, possible], [number, possible, values], [possible, values, .]]

>> Noun Phrases are: 
[input-output training examples, we, the output t, an unobserved value, the input,  variables, a finite number, possible values]

>> Named Entities are: 
[('1', 'CARDINAL'), ('N', 'GPE')]


============================ Sentence 205 =============================

The value of the output t for a given input x indicates the class to which x belongs. 


>> Tokens are: 
[value, output, t, given, input, x, indicates, class, x, belongs, .] 

>> PoS Tags are: 
[('value', 'NOUN'), ('output', 'NOUN'), ('t', 'NOUN'), ('given', 'VERB'), ('input', 'NOUN'), ('x', 'SYM'), ('indicates', 'VERB'), ('class', 'NOUN'), ('x', 'SYM'), ('belongs', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('value', 'nsubj'), ('output', 'compound'), ('t', 'pobj'), ('given', 'amod'), ('input', 'pobj'), ('x', 'punct'), ('indicates', 'ROOT'), ('class', 'dobj'), ('x', 'punct'), ('belongs', 'relcl'), ('.', 'punct')]

>> Bigrams: 
[[value, output], [output, t], [t, given], [given, input], [input, x], [x, indicates], [indicates, class], [class, x], [x, belongs], [belongs, .]]

>> Trigrams: 
[[value, output, t], [output, t, given], [t, given, input], [given, input, x], [input, x, indicates], [x, indicates, class], [indicates, class, x], [class, x, belongs], [x, belongs, .]]

>> Noun Phrases are: 
[The value, the output t, a given input, the class]

>> Named Entities are: 
[]


============================ Sentence 206 =============================

For instance, the label t is a binary variable as in Fig. 


>> Tokens are: 
[instance, ,, label, t, binary, variable, Fig, .] 

>> PoS Tags are: 
[('instance', 'NOUN'), (',', 'PUNCT'), ('label', 'NOUN'), ('t', 'NOUN'), ('binary', 'ADJ'), ('variable', 'NOUN'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('instance', 'pobj'), (',', 'punct'), ('label', 'compound'), ('t', 'nsubj'), ('binary', 'amod'), ('variable', 'attr'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[instance, ,], [,, label], [label, t], [t, binary], [binary, variable], [variable, Fig], [Fig, .]]

>> Trigrams: 
[[instance, ,, label], [,, label, t], [label, t, binary], [t, binary, variable], [binary, variable, Fig], [variable, Fig, .]]

>> Noun Phrases are: 
[instance, the label t, a binary variable, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 207 =============================

6 for a binary classification problem. 


>> Tokens are: 
[6, binary, classification, problem, .] 

>> PoS Tags are: 
[('6', 'NUM'), ('binary', 'ADJ'), ('classification', 'NOUN'), ('problem', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('6', 'ROOT'), ('binary', 'amod'), ('classification', 'compound'), ('problem', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[6, binary], [binary, classification], [classification, problem], [problem, .]]

>> Trigrams: 
[[6, binary, classification], [binary, classification, problem], [classification, problem, .]]

>> Noun Phrases are: 
[a binary classification problem]

>> Named Entities are: 
[('6', 'CARDINAL')]


============================ Sentence 208 =============================

Based on the training set D, the goal is to predict the label, or the class, t for a new, as of yet unobserved, input x.   


>> Tokens are: 
[Based, training, set, D, ,, goal, predict, label, ,, class, ,, t, new, ,, unobserved, ,, input, x.,  ] 

>> PoS Tags are: 
[('Based', 'VERB'), ('training', 'NOUN'), ('set', 'NOUN'), ('D', 'NOUN'), (',', 'PUNCT'), ('goal', 'NOUN'), ('predict', 'VERB'), ('label', 'NOUN'), (',', 'PUNCT'), ('class', 'NOUN'), (',', 'PUNCT'), ('t', 'NOUN'), ('new', 'ADJ'), (',', 'PUNCT'), ('unobserved', 'ADJ'), (',', 'PUNCT'), ('input', 'NOUN'), ('x.', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Based', 'prep'), ('training', 'compound'), ('set', 'amod'), ('D', 'pobj'), (',', 'punct'), ('goal', 'nsubj'), ('predict', 'xcomp'), ('label', 'dobj'), (',', 'punct'), ('class', 'conj'), (',', 'punct'), ('t', 'dep'), ('new', 'pobj'), (',', 'punct'), ('unobserved', 'conj'), (',', 'punct'), ('input', 'compound'), ('x.', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[Based, training], [training, set], [set, D], [D, ,], [,, goal], [goal, predict], [predict, label], [label, ,], [,, class], [class, ,], [,, t], [t, new], [new, ,], [,, unobserved], [unobserved, ,], [,, input], [input, x.], [x.,  ]]

>> Trigrams: 
[[Based, training, set], [training, set, D], [set, D, ,], [D, ,, goal], [,, goal, predict], [goal, predict, label], [predict, label, ,], [label, ,, class], [,, class, ,], [class, ,, t], [,, t, new], [t, new, ,], [new, ,, unobserved], [,, unobserved, ,], [unobserved, ,, input], [,, input, x.], [input, x.,  ]]

>> Noun Phrases are: 
[the training set D, the goal, the label, the class]

>> Named Entities are: 
[]


============================ Sentence 209 =============================

To sum up, the goal of both regression and clas- sification is to derive from the training data set D a predictor t̂(x) that generalizes the input-output mapping in D to inputs x that are not present in D. As such, learning is markedly distinct from memorizing: while memorizing would require producing a value tn for some recorded input xn in the training set, learning is about generalization from the data set to the rest of the relevant input space. 


>> Tokens are: 
[sum, ,, goal, regression, clas-, sification, derive, training, data, set, D, predictor, t̂(x, ), generalizes, input, -, output, mapping, D, inputs, x, present, D., ,, learning, markedly, distinct, memorizing, :, memorizing, require, producing, value, tn, recorded, input, xn, training, set, ,, learning, generalization, data, set, rest, relevant, input, space, .] 

>> PoS Tags are: 
[('sum', 'VERB'), (',', 'PUNCT'), ('goal', 'NOUN'), ('regression', 'NOUN'), ('clas-', 'ADJ'), ('sification', 'NOUN'), ('derive', 'VERB'), ('training', 'NOUN'), ('data', 'NOUN'), ('set', 'VERB'), ('D', 'NOUN'), ('predictor', 'NOUN'), ('t̂(x', 'NOUN'), (')', 'PUNCT'), ('generalizes', 'VERB'), ('input', 'NOUN'), ('-', 'PUNCT'), ('output', 'NOUN'), ('mapping', 'NOUN'), ('D', 'NOUN'), ('inputs', 'NOUN'), ('x', 'PUNCT'), ('present', 'ADJ'), ('D.', 'PROPN'), (',', 'PUNCT'), ('learning', 'NOUN'), ('markedly', 'ADV'), ('distinct', 'ADJ'), ('memorizing', 'VERB'), (':', 'PUNCT'), ('memorizing', 'NOUN'), ('require', 'VERB'), ('producing', 'VERB'), ('value', 'NOUN'), ('tn', 'ADV'), ('recorded', 'ADJ'), ('input', 'NOUN'), ('xn', 'NUM'), ('training', 'NOUN'), ('set', 'NOUN'), (',', 'PUNCT'), ('learning', 'VERB'), ('generalization', 'NOUN'), ('data', 'NOUN'), ('set', 'VERB'), ('rest', 'NOUN'), ('relevant', 'ADJ'), ('input', 'NOUN'), ('space', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('sum', 'advcl'), (',', 'punct'), ('goal', 'nsubj'), ('regression', 'pobj'), ('clas-', 'amod'), ('sification', 'conj'), ('derive', 'xcomp'), ('training', 'compound'), ('data', 'pobj'), ('set', 'acl'), ('D', 'dep'), ('predictor', 'appos'), ('t̂(x', 'advmod'), (')', 'punct'), ('generalizes', 'ccomp'), ('input', 'compound'), ('-', 'punct'), ('output', 'compound'), ('mapping', 'dobj'), ('D', 'pobj'), ('inputs', 'pobj'), ('x', 'punct'), ('present', 'acomp'), ('D.', 'pobj'), (',', 'punct'), ('learning', 'nsubj'), ('markedly', 'advmod'), ('distinct', 'acomp'), ('memorizing', 'pobj'), (':', 'punct'), ('memorizing', 'nsubj'), ('require', 'advcl'), ('producing', 'xcomp'), ('value', 'dobj'), ('tn', 'advmod'), ('recorded', 'amod'), ('input', 'pobj'), ('xn', 'nummod'), ('training', 'compound'), ('set', 'pobj'), (',', 'punct'), ('learning', 'nsubj'), ('generalization', 'pobj'), ('data', 'pobj'), ('set', 'acl'), ('rest', 'pobj'), ('relevant', 'amod'), ('input', 'compound'), ('space', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[sum, ,], [,, goal], [goal, regression], [regression, clas-], [clas-, sification], [sification, derive], [derive, training], [training, data], [data, set], [set, D], [D, predictor], [predictor, t̂(x], [t̂(x, )], [), generalizes], [generalizes, input], [input, -], [-, output], [output, mapping], [mapping, D], [D, inputs], [inputs, x], [x, present], [present, D.], [D., ,], [,, learning], [learning, markedly], [markedly, distinct], [distinct, memorizing], [memorizing, :], [:, memorizing], [memorizing, require], [require, producing], [producing, value], [value, tn], [tn, recorded], [recorded, input], [input, xn], [xn, training], [training, set], [set, ,], [,, learning], [learning, generalization], [generalization, data], [data, set], [set, rest], [rest, relevant], [relevant, input], [input, space], [space, .]]

>> Trigrams: 
[[sum, ,, goal], [,, goal, regression], [goal, regression, clas-], [regression, clas-, sification], [clas-, sification, derive], [sification, derive, training], [derive, training, data], [training, data, set], [data, set, D], [set, D, predictor], [D, predictor, t̂(x], [predictor, t̂(x, )], [t̂(x, ), generalizes], [), generalizes, input], [generalizes, input, -], [input, -, output], [-, output, mapping], [output, mapping, D], [mapping, D, inputs], [D, inputs, x], [inputs, x, present], [x, present, D.], [present, D., ,], [D., ,, learning], [,, learning, markedly], [learning, markedly, distinct], [markedly, distinct, memorizing], [distinct, memorizing, :], [memorizing, :, memorizing], [:, memorizing, require], [memorizing, require, producing], [require, producing, value], [producing, value, tn], [value, tn, recorded], [tn, recorded, input], [recorded, input, xn], [input, xn, training], [xn, training, set], [training, set, ,], [set, ,, learning], [,, learning, generalization], [learning, generalization, data], [generalization, data, set], [data, set, rest], [set, rest, relevant], [rest, relevant, input], [relevant, input, space], [input, space, .]]

>> Noun Phrases are: 
[the goal, both regression, clas- sification, the training data, a predictor, the input-output mapping, D, inputs, D., learning, memorizing, a value, some recorded input, the training set, generalization, the data, the rest, the relevant input space]

>> Named Entities are: 
[('D.', 'NORP')]


============================ Sentence 210 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 211 =============================

The problem of extrapolating a predictor from the training set is evidently impossible unless one is willing to make some assumption about the underlying input- output mapping. 


>> Tokens are: 
[problem, extrapolating, predictor, training, set, evidently, impossible, willing, assumption, underlying, input-, output, mapping, .] 

>> PoS Tags are: 
[('problem', 'NOUN'), ('extrapolating', 'VERB'), ('predictor', 'NOUN'), ('training', 'NOUN'), ('set', 'NOUN'), ('evidently', 'ADV'), ('impossible', 'ADJ'), ('willing', 'ADJ'), ('assumption', 'NOUN'), ('underlying', 'VERB'), ('input-', 'ADJ'), ('output', 'NOUN'), ('mapping', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('problem', 'nsubj'), ('extrapolating', 'pcomp'), ('predictor', 'dobj'), ('training', 'compound'), ('set', 'pobj'), ('evidently', 'advmod'), ('impossible', 'acomp'), ('willing', 'acomp'), ('assumption', 'dobj'), ('underlying', 'amod'), ('input-', 'amod'), ('output', 'compound'), ('mapping', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[problem, extrapolating], [extrapolating, predictor], [predictor, training], [training, set], [set, evidently], [evidently, impossible], [impossible, willing], [willing, assumption], [assumption, underlying], [underlying, input-], [input-, output], [output, mapping], [mapping, .]]

>> Trigrams: 
[[problem, extrapolating, predictor], [extrapolating, predictor, training], [predictor, training, set], [training, set, evidently], [set, evidently, impossible], [evidently, impossible, willing], [impossible, willing, assumption], [willing, assumption, underlying], [assumption, underlying, input-], [underlying, input-, output], [input-, output, mapping], [output, mapping, .]]

>> Noun Phrases are: 
[The problem, a predictor, the training set, some assumption, the underlying input- output mapping]

>> Named Entities are: 
[]


============================ Sentence 212 =============================

In fact, the output t may well equal any value for an unobserved x if nothing else is specified about the problem. 


>> Tokens are: 
[fact, ,, output, t, equal, value, unobserved, x, specified, problem, .] 

>> PoS Tags are: 
[('fact', 'NOUN'), (',', 'PUNCT'), ('output', 'NOUN'), ('t', 'NOUN'), ('equal', 'VERB'), ('value', 'NOUN'), ('unobserved', 'ADJ'), ('x', 'PUNCT'), ('specified', 'VERB'), ('problem', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('fact', 'pobj'), (',', 'punct'), ('output', 'compound'), ('t', 'nsubj'), ('equal', 'ROOT'), ('value', 'dobj'), ('unobserved', 'amod'), ('x', 'pobj'), ('specified', 'advcl'), ('problem', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[fact, ,], [,, output], [output, t], [t, equal], [equal, value], [value, unobserved], [unobserved, x], [x, specified], [specified, problem], [problem, .]]

>> Trigrams: 
[[fact, ,, output], [,, output, t], [output, t, equal], [t, equal, value], [equal, value, unobserved], [value, unobserved, x], [unobserved, x, specified], [x, specified, problem], [specified, problem, .]]

>> Noun Phrases are: 
[fact, the output t, any value, nothing, the problem]

>> Named Entities are: 
[]


============================ Sentence 213 =============================

This impossibility is formalized by the no free-lunch theorem: without making assumptions about the relationship between input and output, it is not possible to generalize the available observations outside the training set 


>> Tokens are: 
[impossibility, formalized, free, -, lunch, theorem, :, making, assumptions, relationship, input, output, ,, possible, generalize, available, observations, outside, training, set] 

>> PoS Tags are: 
[('impossibility', 'NOUN'), ('formalized', 'VERB'), ('free', 'ADJ'), ('-', 'PUNCT'), ('lunch', 'NOUN'), ('theorem', 'NOUN'), (':', 'PUNCT'), ('making', 'VERB'), ('assumptions', 'NOUN'), ('relationship', 'NOUN'), ('input', 'NOUN'), ('output', 'NOUN'), (',', 'PUNCT'), ('possible', 'ADJ'), ('generalize', 'VERB'), ('available', 'ADJ'), ('observations', 'NOUN'), ('outside', 'ADP'), ('training', 'NOUN'), ('set', 'NOUN')] 

>> Dependency Tags are: 
[('impossibility', 'nsubjpass'), ('formalized', 'ROOT'), ('free', 'amod'), ('-', 'punct'), ('lunch', 'compound'), ('theorem', 'pobj'), (':', 'punct'), ('making', 'pcomp'), ('assumptions', 'dobj'), ('relationship', 'pobj'), ('input', 'pobj'), ('output', 'conj'), (',', 'punct'), ('possible', 'acomp'), ('generalize', 'xcomp'), ('available', 'amod'), ('observations', 'dobj'), ('outside', 'prep'), ('training', 'compound'), ('set', 'pobj')]

>> Bigrams: 
[[impossibility, formalized], [formalized, free], [free, -], [-, lunch], [lunch, theorem], [theorem, :], [:, making], [making, assumptions], [assumptions, relationship], [relationship, input], [input, output], [output, ,], [,, possible], [possible, generalize], [generalize, available], [available, observations], [observations, outside], [outside, training], [training, set]]

>> Trigrams: 
[[impossibility, formalized, free], [formalized, free, -], [free, -, lunch], [-, lunch, theorem], [lunch, theorem, :], [theorem, :, making], [:, making, assumptions], [making, assumptions, relationship], [assumptions, relationship, input], [relationship, input, output], [input, output, ,], [output, ,, possible], [,, possible, generalize], [possible, generalize, available], [generalize, available, observations], [available, observations, outside], [observations, outside, training], [outside, training, set]]

>> Noun Phrases are: 
[This impossibility, the no free-lunch theorem, assumptions, the relationship, input, output, it, the available observations, the training set]

>> Named Entities are: 
[]


============================ Sentence 214 =============================

[14]. 


>> Tokens are: 
[[, 14, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('14', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('14', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 14], [14, ]], [], .]]

>> Trigrams: 
[[[, 14, ]], [14, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('14', 'CARDINAL')]


============================ Sentence 215 =============================

The set of assumptions made in order to enable learning are known as inductive bias. 


>> Tokens are: 
[set, assumptions, order, enable, learning, known, inductive, bias, .] 

>> PoS Tags are: 
[('set', 'NOUN'), ('assumptions', 'NOUN'), ('order', 'NOUN'), ('enable', 'VERB'), ('learning', 'NOUN'), ('known', 'VERB'), ('inductive', 'ADJ'), ('bias', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('set', 'ROOT'), ('assumptions', 'pobj'), ('order', 'pobj'), ('enable', 'acl'), ('learning', 'nsubjpass'), ('known', 'ccomp'), ('inductive', 'amod'), ('bias', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[set, assumptions], [assumptions, order], [order, enable], [enable, learning], [learning, known], [known, inductive], [inductive, bias], [bias, .]]

>> Trigrams: 
[[set, assumptions, order], [assumptions, order, enable], [order, enable, learning], [enable, learning, known], [learning, known, inductive], [known, inductive, bias], [inductive, bias, .]]

>> Noun Phrases are: 
[The set, assumptions, order, learning, inductive bias]

>> Named Entities are: 
[]


============================ Sentence 216 =============================

As an example, for the regression problem in Fig. 


>> Tokens are: 
[example, ,, regression, problem, Fig, .] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), ('regression', 'NOUN'), ('problem', 'NOUN'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct'), ('regression', 'compound'), ('problem', 'pobj'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[example, ,], [,, regression], [regression, problem], [problem, Fig], [Fig, .]]

>> Trigrams: 
[[example, ,, regression], [,, regression, problem], [regression, problem, Fig], [problem, Fig, .]]

>> Noun Phrases are: 
[an example, the regression problem, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 217 =============================

5, a possible inductive bias is to postulate that the input- output mapping is a polynomial function of some order. 


>> Tokens are: 
[5, ,, possible, inductive, bias, postulate, input-, output, mapping, polynomial, function, order, .] 

>> PoS Tags are: 
[('5', 'NUM'), (',', 'PUNCT'), ('possible', 'ADJ'), ('inductive', 'ADJ'), ('bias', 'NOUN'), ('postulate', 'VERB'), ('input-', 'ADJ'), ('output', 'NOUN'), ('mapping', 'NOUN'), ('polynomial', 'ADJ'), ('function', 'NOUN'), ('order', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('5', 'dep'), (',', 'punct'), ('possible', 'amod'), ('inductive', 'amod'), ('bias', 'nsubj'), ('postulate', 'xcomp'), ('input-', 'amod'), ('output', 'compound'), ('mapping', 'nsubj'), ('polynomial', 'amod'), ('function', 'attr'), ('order', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[5, ,], [,, possible], [possible, inductive], [inductive, bias], [bias, postulate], [postulate, input-], [input-, output], [output, mapping], [mapping, polynomial], [polynomial, function], [function, order], [order, .]]

>> Trigrams: 
[[5, ,, possible], [,, possible, inductive], [possible, inductive, bias], [inductive, bias, postulate], [bias, postulate, input-], [postulate, input-, output], [input-, output, mapping], [output, mapping, polynomial], [mapping, polynomial, function], [polynomial, function, order], [function, order, .]]

>> Noun Phrases are: 
[a possible inductive bias, the input- output mapping, a polynomial function, some order]

>> Named Entities are: 
[('5', 'CARDINAL')]


============================ Sentence 218 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 219 =============================

B. Defining Supervised Learning   


>> Tokens are: 
[B., Defining, Supervised, Learning,  ] 

>> PoS Tags are: 
[('B.', 'PROPN'), ('Defining', 'PROPN'), ('Supervised', 'PROPN'), ('Learning', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('B.', 'compound'), ('Defining', 'ROOT'), ('Supervised', 'compound'), ('Learning', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[B., Defining], [Defining, Supervised], [Supervised, Learning], [Learning,  ]]

>> Trigrams: 
[[B., Defining, Supervised], [Defining, Supervised, Learning], [Supervised, Learning,  ]]

>> Noun Phrases are: 
[B. Defining, Supervised Learning]

>> Named Entities are: 
[]


============================ Sentence 220 =============================

Having introduced the goal of supervised learning, we now provide a more formal definition of the problem. 


>> Tokens are: 
[Having, introduced, goal, supervised, learning, ,, provide, formal, definition, problem, .] 

>> PoS Tags are: 
[('Having', 'AUX'), ('introduced', 'VERB'), ('goal', 'NOUN'), ('supervised', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('provide', 'VERB'), ('formal', 'ADJ'), ('definition', 'NOUN'), ('problem', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Having', 'aux'), ('introduced', 'advcl'), ('goal', 'dobj'), ('supervised', 'amod'), ('learning', 'pobj'), (',', 'punct'), ('provide', 'ROOT'), ('formal', 'amod'), ('definition', 'dobj'), ('problem', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Having, introduced], [introduced, goal], [goal, supervised], [supervised, learning], [learning, ,], [,, provide], [provide, formal], [formal, definition], [definition, problem], [problem, .]]

>> Trigrams: 
[[Having, introduced, goal], [introduced, goal, supervised], [goal, supervised, learning], [supervised, learning, ,], [learning, ,, provide], [,, provide, formal], [provide, formal, definition], [formal, definition, problem], [definition, problem, .]]

>> Noun Phrases are: 
[the goal, supervised learning, we, a more formal definition, the problem]

>> Named Entities are: 
[]


============================ Sentence 221 =============================

Throughout, we use Roman font to denote random variables and the corresponding letter in regular font for realizations. 


>> Tokens are: 
[,, use, Roman, font, denote, random, variables, corresponding, letter, regular, font, realizations, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('use', 'VERB'), ('Roman', 'ADJ'), ('font', 'NOUN'), ('denote', 'VERB'), ('random', 'ADJ'), ('variables', 'NOUN'), ('corresponding', 'VERB'), ('letter', 'NOUN'), ('regular', 'ADJ'), ('font', 'NOUN'), ('realizations', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('use', 'ROOT'), ('Roman', 'amod'), ('font', 'dobj'), ('denote', 'xcomp'), ('random', 'amod'), ('variables', 'dobj'), ('corresponding', 'amod'), ('letter', 'conj'), ('regular', 'amod'), ('font', 'pobj'), ('realizations', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[,, use], [use, Roman], [Roman, font], [font, denote], [denote, random], [random, variables], [variables, corresponding], [corresponding, letter], [letter, regular], [regular, font], [font, realizations], [realizations, .]]

>> Trigrams: 
[[,, use, Roman], [use, Roman, font], [Roman, font, denote], [font, denote, random], [denote, random, variables], [random, variables, corresponding], [variables, corresponding, letter], [corresponding, letter, regular], [letter, regular, font], [regular, font, realizations], [font, realizations, .]]

>> Noun Phrases are: 
[we, Roman font, random variables, the corresponding letter, regular font, realizations]

>> Named Entities are: 
[]


============================ Sentence 222 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 223 =============================

As a starting point, we assume that the training set D is generated as  (xn, tn) ∼ i.i.d.   


>> Tokens are: 
[starting, point, ,, assume, training, set, D, generated,  , (, xn, ,, tn, ), ∼, i.i.d, .,  ] 

>> PoS Tags are: 
[('starting', 'NOUN'), ('point', 'NOUN'), (',', 'PUNCT'), ('assume', 'VERB'), ('training', 'NOUN'), ('set', 'NOUN'), ('D', 'NOUN'), ('generated', 'VERB'), (' ', 'SPACE'), ('(', 'PUNCT'), ('xn', 'NUM'), (',', 'PUNCT'), ('tn', 'ADV'), (')', 'PUNCT'), ('∼', 'PROPN'), ('i.i.d', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('starting', 'compound'), ('point', 'pobj'), (',', 'punct'), ('assume', 'ROOT'), ('training', 'compound'), ('set', 'amod'), ('D', 'nsubjpass'), ('generated', 'ccomp'), (' ', 'pobj'), ('(', 'punct'), ('xn', 'appos'), (',', 'punct'), ('tn', 'advmod'), (')', 'punct'), ('∼', 'compound'), ('i.i.d', 'dobj'), ('.', 'punct'), (' ', 'npadvmod')]

>> Bigrams: 
[[starting, point], [point, ,], [,, assume], [assume, training], [training, set], [set, D], [D, generated], [generated,  ], [ , (], [(, xn], [xn, ,], [,, tn], [tn, )], [), ∼], [∼, i.i.d], [i.i.d, .], [.,  ]]

>> Trigrams: 
[[starting, point, ,], [point, ,, assume], [,, assume, training], [assume, training, set], [training, set, D], [set, D, generated], [D, generated,  ], [generated,  , (], [ , (, xn], [(, xn, ,], [xn, ,, tn], [,, tn, )], [tn, ), ∼], [), ∼, i.i.d], [∼, i.i.d, .], [i.i.d, .,  ]]

>> Noun Phrases are: 
[a starting point, we, the training set D, ∼ i.i.d]

>> Named Entities are: 
[]


============================ Sentence 224 =============================

p(x, t), n = 1, ..., N, (1)  that is, each training sample pair (xn, tn) is generated from the same true joint distribution p(x, t) and the sam- ple pairs are independent identically distributed (i.i.d.). 


>> Tokens are: 
[p(x, ,, t, ), ,, n, =, 1, ,, ..., ,, N, ,, (, 1, ),  , ,, training, sample, pair, (, xn, ,, tn, ), generated, true, joint, distribution, p(x, ,, t, ), sam-, ple, pairs, independent, identically, distributed, (, i.i.d, ., ), .] 

>> PoS Tags are: 
[('p(x', 'PROPN'), (',', 'PUNCT'), ('t', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('n', 'CCONJ'), ('=', 'SYM'), ('1', 'NUM'), (',', 'PUNCT'), ('...', 'PUNCT'), (',', 'PUNCT'), ('N', 'PROPN'), (',', 'PUNCT'), ('(', 'PUNCT'), ('1', 'X'), (')', 'PUNCT'), (' ', 'SPACE'), (',', 'PUNCT'), ('training', 'VERB'), ('sample', 'NOUN'), ('pair', 'NOUN'), ('(', 'PUNCT'), ('xn', 'NUM'), (',', 'PUNCT'), ('tn', 'ADV'), (')', 'PUNCT'), ('generated', 'VERB'), ('true', 'ADJ'), ('joint', 'ADJ'), ('distribution', 'NOUN'), ('p(x', 'PROPN'), (',', 'PUNCT'), ('t', 'NOUN'), (')', 'PUNCT'), ('sam-', 'ADJ'), ('ple', 'NOUN'), ('pairs', 'NOUN'), ('independent', 'ADJ'), ('identically', 'ADV'), ('distributed', 'VERB'), ('(', 'PUNCT'), ('i.i.d', 'NOUN'), ('.', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('p(x', 'nsubjpass'), (',', 'punct'), ('t', 'appos'), (')', 'punct'), (',', 'punct'), ('n', 'cc'), ('=', 'punct'), ('1', 'prep'), (',', 'punct'), ('...', 'punct'), (',', 'punct'), ('N', 'appos'), (',', 'punct'), ('(', 'punct'), ('1', 'appos'), (')', 'punct'), (' ', 'appos'), (',', 'punct'), ('training', 'nmod'), ('sample', 'compound'), ('pair', 'dobj'), ('(', 'punct'), ('xn', 'appos'), (',', 'punct'), ('tn', 'advmod'), (')', 'punct'), ('generated', 'ROOT'), ('true', 'amod'), ('joint', 'amod'), ('distribution', 'pobj'), ('p(x', 'pobj'), (',', 'punct'), ('t', 'appos'), (')', 'punct'), ('sam-', 'amod'), ('ple', 'compound'), ('pairs', 'nsubj'), ('independent', 'acomp'), ('identically', 'advmod'), ('distributed', 'acomp'), ('(', 'punct'), ('i.i.d', 'intj'), ('.', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[p(x, ,], [,, t], [t, )], [), ,], [,, n], [n, =], [=, 1], [1, ,], [,, ...], [..., ,], [,, N], [N, ,], [,, (], [(, 1], [1, )], [),  ], [ , ,], [,, training], [training, sample], [sample, pair], [pair, (], [(, xn], [xn, ,], [,, tn], [tn, )], [), generated], [generated, true], [true, joint], [joint, distribution], [distribution, p(x], [p(x, ,], [,, t], [t, )], [), sam-], [sam-, ple], [ple, pairs], [pairs, independent], [independent, identically], [identically, distributed], [distributed, (], [(, i.i.d], [i.i.d, .], [., )], [), .]]

>> Trigrams: 
[[p(x, ,, t], [,, t, )], [t, ), ,], [), ,, n], [,, n, =], [n, =, 1], [=, 1, ,], [1, ,, ...], [,, ..., ,], [..., ,, N], [,, N, ,], [N, ,, (], [,, (, 1], [(, 1, )], [1, ),  ], [),  , ,], [ , ,, training], [,, training, sample], [training, sample, pair], [sample, pair, (], [pair, (, xn], [(, xn, ,], [xn, ,, tn], [,, tn, )], [tn, ), generated], [), generated, true], [generated, true, joint], [true, joint, distribution], [joint, distribution, p(x], [distribution, p(x, ,], [p(x, ,, t], [,, t, )], [t, ), sam-], [), sam-, ple], [sam-, ple, pairs], [ple, pairs, independent], [pairs, independent, identically], [independent, identically, distributed], [identically, distributed, (], [distributed, (, i.i.d], [(, i.i.d, .], [i.i.d, ., )], [., ), .]]

>> Noun Phrases are: 
[p(x, t, N, sample pair, the same true joint distribution, p(x, t, the sam- ple pairs]

>> Named Entities are: 
[('p(x', 'ORG'), ('1', 'CARDINAL'), ('N', 'GPE'), ('1', 'CARDINAL'), ('p(x', 'ORG')]


============================ Sentence 225 =============================

As discussed, based on the training set D, we wish to obtain a predictor t̂(x) that performs well on any possible relevant input x. 


>> Tokens are: 
[discussed, ,, based, training, set, D, ,, wish, obtain, predictor, t̂(x, ), performs, possible, relevant, input, x.] 

>> PoS Tags are: 
[('discussed', 'VERB'), (',', 'PUNCT'), ('based', 'VERB'), ('training', 'NOUN'), ('set', 'NOUN'), ('D', 'NOUN'), (',', 'PUNCT'), ('wish', 'VERB'), ('obtain', 'VERB'), ('predictor', 'NOUN'), ('t̂(x', 'NOUN'), (')', 'PUNCT'), ('performs', 'VERB'), ('possible', 'ADJ'), ('relevant', 'ADJ'), ('input', 'NOUN'), ('x.', 'NOUN')] 

>> Dependency Tags are: 
[('discussed', 'advcl'), (',', 'punct'), ('based', 'prep'), ('training', 'compound'), ('set', 'amod'), ('D', 'pobj'), (',', 'punct'), ('wish', 'ROOT'), ('obtain', 'xcomp'), ('predictor', 'dobj'), ('t̂(x', 'advmod'), (')', 'punct'), ('performs', 'ccomp'), ('possible', 'amod'), ('relevant', 'amod'), ('input', 'compound'), ('x.', 'pobj')]

>> Bigrams: 
[[discussed, ,], [,, based], [based, training], [training, set], [set, D], [D, ,], [,, wish], [wish, obtain], [obtain, predictor], [predictor, t̂(x], [t̂(x, )], [), performs], [performs, possible], [possible, relevant], [relevant, input], [input, x.]]

>> Trigrams: 
[[discussed, ,, based], [,, based, training], [based, training, set], [training, set, D], [set, D, ,], [D, ,, wish], [,, wish, obtain], [wish, obtain, predictor], [obtain, predictor, t̂(x], [predictor, t̂(x, )], [t̂(x, ), performs], [), performs, possible], [performs, possible, relevant], [possible, relevant, input], [relevant, input, x.]]

>> Noun Phrases are: 
[the training set D, we, a predictor, any possible relevant input x.]

>> Named Entities are: 
[]


============================ Sentence 226 =============================

This requirement is formalized by imposing that the predictor is accurate for any test pair (x, t) ∼ p(x, t), which is generated independently of all the pairs in the training set D.   


>> Tokens are: 
[requirement, formalized, imposing, predictor, accurate, test, pair, (, x, ,, t, ), ∼, p(x, ,, t, ), ,, generated, independently, pairs, training, set, D.,  ] 

>> PoS Tags are: 
[('requirement', 'NOUN'), ('formalized', 'VERB'), ('imposing', 'VERB'), ('predictor', 'NOUN'), ('accurate', 'ADJ'), ('test', 'NOUN'), ('pair', 'NOUN'), ('(', 'PUNCT'), ('x', 'SYM'), (',', 'PUNCT'), ('t', 'NOUN'), (')', 'PUNCT'), ('∼', 'PROPN'), ('p(x', 'PROPN'), (',', 'PUNCT'), ('t', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('generated', 'VERB'), ('independently', 'ADV'), ('pairs', 'NOUN'), ('training', 'NOUN'), ('set', 'VERB'), ('D.', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('requirement', 'nsubjpass'), ('formalized', 'ROOT'), ('imposing', 'pcomp'), ('predictor', 'nsubj'), ('accurate', 'acomp'), ('test', 'compound'), ('pair', 'pobj'), ('(', 'punct'), ('x', 'appos'), (',', 'punct'), ('t', 'appos'), (')', 'punct'), ('∼', 'compound'), ('p(x', 'appos'), (',', 'punct'), ('t', 'appos'), (')', 'punct'), (',', 'punct'), ('generated', 'relcl'), ('independently', 'advmod'), ('pairs', 'pobj'), ('training', 'pobj'), ('set', 'acl'), ('D.', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[requirement, formalized], [formalized, imposing], [imposing, predictor], [predictor, accurate], [accurate, test], [test, pair], [pair, (], [(, x], [x, ,], [,, t], [t, )], [), ∼], [∼, p(x], [p(x, ,], [,, t], [t, )], [), ,], [,, generated], [generated, independently], [independently, pairs], [pairs, training], [training, set], [set, D.], [D.,  ]]

>> Trigrams: 
[[requirement, formalized, imposing], [formalized, imposing, predictor], [imposing, predictor, accurate], [predictor, accurate, test], [accurate, test, pair], [test, pair, (], [pair, (, x], [(, x, ,], [x, ,, t], [,, t, )], [t, ), ∼], [), ∼, p(x], [∼, p(x, ,], [p(x, ,, t], [,, t, )], [t, ), ,], [), ,, generated], [,, generated, independently], [generated, independently, pairs], [independently, pairs, training], [pairs, training, set], [training, set, D.], [set, D.,  ]]

>> Noun Phrases are: 
[This requirement, the predictor, any test pair, t, ∼ p(x, t, all the pairs, the training, D.]

>> Named Entities are: 
[('∼ p(x', 'PERSON'), ('D.', 'NORP')]


============================ Sentence 227 =============================

The quality of the prediction t̂(x) for a test pair (x, t) is measured by a given loss function `(t, t̂) as `(t, t̂(x)). 


>> Tokens are: 
[quality, prediction, t̂(x, ), test, pair, (, x, ,, t, ), measured, given, loss, function, `, (, t, ,, t̂, ), `, (, t, ,, t̂(x, ), ), .] 

>> PoS Tags are: 
[('quality', 'NOUN'), ('prediction', 'NOUN'), ('t̂(x', 'ADV'), (')', 'PUNCT'), ('test', 'NOUN'), ('pair', 'NOUN'), ('(', 'PUNCT'), ('x', 'SYM'), (',', 'PUNCT'), ('t', 'NOUN'), (')', 'PUNCT'), ('measured', 'VERB'), ('given', 'VERB'), ('loss', 'NOUN'), ('function', 'NOUN'), ('`', 'PUNCT'), ('(', 'PUNCT'), ('t', 'NOUN'), (',', 'PUNCT'), ('t̂', 'INTJ'), (')', 'PUNCT'), ('`', 'PUNCT'), ('(', 'PUNCT'), ('t', 'NOUN'), (',', 'PUNCT'), ('t̂(x', 'NOUN'), (')', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('quality', 'nsubjpass'), ('prediction', 'compound'), ('t̂(x', 'pobj'), (')', 'punct'), ('test', 'compound'), ('pair', 'pobj'), ('(', 'punct'), ('x', 'nmod'), (',', 'punct'), ('t', 'appos'), (')', 'punct'), ('measured', 'ROOT'), ('given', 'amod'), ('loss', 'compound'), ('function', 'pobj'), ('`', 'punct'), ('(', 'punct'), ('t', 'appos'), (',', 'punct'), ('t̂', 'intj'), (')', 'punct'), ('`', 'punct'), ('(', 'punct'), ('t', 'nsubj'), (',', 'punct'), ('t̂(x', 'pobj'), (')', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[quality, prediction], [prediction, t̂(x], [t̂(x, )], [), test], [test, pair], [pair, (], [(, x], [x, ,], [,, t], [t, )], [), measured], [measured, given], [given, loss], [loss, function], [function, `], [`, (], [(, t], [t, ,], [,, t̂], [t̂, )], [), `], [`, (], [(, t], [t, ,], [,, t̂(x], [t̂(x, )], [), )], [), .]]

>> Trigrams: 
[[quality, prediction, t̂(x], [prediction, t̂(x, )], [t̂(x, ), test], [), test, pair], [test, pair, (], [pair, (, x], [(, x, ,], [x, ,, t], [,, t, )], [t, ), measured], [), measured, given], [measured, given, loss], [given, loss, function], [loss, function, `], [function, `, (], [`, (, t], [(, t, ,], [t, ,, t̂], [,, t̂, )], [t̂, ), `], [), `, (], [`, (, t], [(, t, ,], [t, ,, t̂(x], [,, t̂(x, )], [t̂(x, ), )], [), ), .]]

>> Noun Phrases are: 
[The quality, a test pair, t, a given loss function, t, (t]

>> Named Entities are: 
[]


============================ Sentence 228 =============================

Typical examples of loss functions include the quadratic loss `(t, t̂) = 


>> Tokens are: 
[Typical, examples, loss, functions, include, quadratic, loss, `, (, t, ,, t̂, ), =] 

>> PoS Tags are: 
[('Typical', 'ADJ'), ('examples', 'NOUN'), ('loss', 'NOUN'), ('functions', 'NOUN'), ('include', 'VERB'), ('quadratic', 'ADJ'), ('loss', 'NOUN'), ('`', 'PUNCT'), ('(', 'PUNCT'), ('t', 'NOUN'), (',', 'PUNCT'), ('t̂', 'INTJ'), (')', 'PUNCT'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('Typical', 'amod'), ('examples', 'nsubj'), ('loss', 'compound'), ('functions', 'pobj'), ('include', 'ROOT'), ('quadratic', 'amod'), ('loss', 'dobj'), ('`', 'punct'), ('(', 'punct'), ('t', 'appos'), (',', 'punct'), ('t̂', 'intj'), (')', 'punct'), ('=', 'punct')]

>> Bigrams: 
[[Typical, examples], [examples, loss], [loss, functions], [functions, include], [include, quadratic], [quadratic, loss], [loss, `], [`, (], [(, t], [t, ,], [,, t̂], [t̂, )], [), =]]

>> Trigrams: 
[[Typical, examples, loss], [examples, loss, functions], [loss, functions, include], [functions, include, quadratic], [include, quadratic, loss], [quadratic, loss, `], [loss, `, (], [`, (, t], [(, t, ,], [t, ,, t̂], [,, t̂, )], [t̂, ), =]]

>> Noun Phrases are: 
[Typical examples, loss functions, the quadratic loss, t]

>> Named Entities are: 
[]


============================ Sentence 229 =============================

(t − t̂)2 for regression problems; and the error rate `(t, t̂) = 1(t 6= t̂), which equals 1 when the prediction is incorrect, i.e.--, t 6= t̂, and 0 otherwise, for classification problems. 


>> Tokens are: 
[(, t, −, t̂)2, regression, problems, ;, error, rate, `, (, t, ,, t̂, ), =, 1(t, 6=, t̂, ), ,, equals, 1, prediction, incorrect, ,, i.e.--, ,, t, 6=, t̂, ,, 0, ,, classification, problems, .] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('t', 'NOUN'), ('−', 'PROPN'), ('t̂)2', 'PROPN'), ('regression', 'NOUN'), ('problems', 'NOUN'), (';', 'PUNCT'), ('error', 'NOUN'), ('rate', 'NOUN'), ('`', 'PUNCT'), ('(', 'PUNCT'), ('t', 'NOUN'), (',', 'PUNCT'), ('t̂', 'PUNCT'), (')', 'PUNCT'), ('=', 'SYM'), ('1(t', 'NUM'), ('6=', 'X'), ('t̂', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('equals', 'VERB'), ('1', 'NUM'), ('prediction', 'NOUN'), ('incorrect', 'ADJ'), (',', 'PUNCT'), ('i.e.--', 'PUNCT'), (',', 'PUNCT'), ('t', 'NOUN'), ('6=', 'X'), ('t̂', 'NUM'), (',', 'PUNCT'), ('0', 'NUM'), (',', 'PUNCT'), ('classification', 'NOUN'), ('problems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('t', 'compound'), ('−', 'compound'), ('t̂)2', 'ROOT'), ('regression', 'compound'), ('problems', 'pobj'), (';', 'punct'), ('error', 'compound'), ('rate', 'conj'), ('`', 'punct'), ('(', 'punct'), ('t', 'appos'), (',', 'punct'), ('t̂', 'intj'), (')', 'punct'), ('=', 'punct'), ('1(t', 'compound'), ('6=', 'appos'), ('t̂', 'punct'), (')', 'punct'), (',', 'punct'), ('equals', 'relcl'), ('1', 'dobj'), ('prediction', 'nsubj'), ('incorrect', 'acomp'), (',', 'punct'), ('i.e.--', 'appos'), (',', 'punct'), ('t', 'compound'), ('6=', 'appos'), ('t̂', 'appos'), (',', 'punct'), ('0', 'conj'), (',', 'punct'), ('classification', 'compound'), ('problems', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[(, t], [t, −], [−, t̂)2], [t̂)2, regression], [regression, problems], [problems, ;], [;, error], [error, rate], [rate, `], [`, (], [(, t], [t, ,], [,, t̂], [t̂, )], [), =], [=, 1(t], [1(t, 6=], [6=, t̂], [t̂, )], [), ,], [,, equals], [equals, 1], [1, prediction], [prediction, incorrect], [incorrect, ,], [,, i.e.--], [i.e.--, ,], [,, t], [t, 6=], [6=, t̂], [t̂, ,], [,, 0], [0, ,], [,, classification], [classification, problems], [problems, .]]

>> Trigrams: 
[[(, t, −], [t, −, t̂)2], [−, t̂)2, regression], [t̂)2, regression, problems], [regression, problems, ;], [problems, ;, error], [;, error, rate], [error, rate, `], [rate, `, (], [`, (, t], [(, t, ,], [t, ,, t̂], [,, t̂, )], [t̂, ), =], [), =, 1(t], [=, 1(t, 6=], [1(t, 6=, t̂], [6=, t̂, )], [t̂, ), ,], [), ,, equals], [,, equals, 1], [equals, 1, prediction], [1, prediction, incorrect], [prediction, incorrect, ,], [incorrect, ,, i.e.--], [,, i.e.--, ,], [i.e.--, ,, t], [,, t, 6=], [t, 6=, t̂], [6=, t̂, ,], [t̂, ,, 0], [,, 0, ,], [0, ,, classification], [,, classification, problems], [classification, problems, .]]

>> Noun Phrases are: 
[(t − t̂)2, regression problems, the error rate, t, the prediction, classification problems]

>> Named Entities are: 
[('t̂)2', 'CARDINAL'), ('1(t 6=', 'CARDINAL'), ('1', 'CARDINAL'), ('6=', 'CARDINAL')]


============================ Sentence 230 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 231 =============================

The formal goal of learning is that of minimizing the average loss on the test pair, which is referred to as the generalization loss. 


>> Tokens are: 
[formal, goal, learning, minimizing, average, loss, test, pair, ,, referred, generalization, loss, .] 

>> PoS Tags are: 
[('formal', 'ADJ'), ('goal', 'NOUN'), ('learning', 'NOUN'), ('minimizing', 'VERB'), ('average', 'ADJ'), ('loss', 'NOUN'), ('test', 'NOUN'), ('pair', 'NOUN'), (',', 'PUNCT'), ('referred', 'VERB'), ('generalization', 'NOUN'), ('loss', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('formal', 'amod'), ('goal', 'nsubj'), ('learning', 'pobj'), ('minimizing', 'pcomp'), ('average', 'amod'), ('loss', 'dobj'), ('test', 'compound'), ('pair', 'pobj'), (',', 'punct'), ('referred', 'relcl'), ('generalization', 'compound'), ('loss', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[formal, goal], [goal, learning], [learning, minimizing], [minimizing, average], [average, loss], [loss, test], [test, pair], [pair, ,], [,, referred], [referred, generalization], [generalization, loss], [loss, .]]

>> Trigrams: 
[[formal, goal, learning], [goal, learning, minimizing], [learning, minimizing, average], [minimizing, average, loss], [average, loss, test], [loss, test, pair], [test, pair, ,], [pair, ,, referred], [,, referred, generalization], [referred, generalization, loss], [generalization, loss, .]]

>> Noun Phrases are: 
[The formal goal, learning, the average loss, the test pair, the generalization loss]

>> Named Entities are: 
[]


============================ Sentence 232 =============================

For a given predictor t̂, this is defined as  Lp(t̂) 


>> Tokens are: 
[given, predictor, t̂, ,, defined,  , Lp(t̂, )] 

>> PoS Tags are: 
[('given', 'VERB'), ('predictor', 'NOUN'), ('t̂', 'NUM'), (',', 'PUNCT'), ('defined', 'VERB'), (' ', 'SPACE'), ('Lp(t̂', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('given', 'amod'), ('predictor', 'pobj'), ('t̂', 'intj'), (',', 'punct'), ('defined', 'ROOT'), (' ', 'pobj'), ('Lp(t̂', 'appos'), (')', 'punct')]

>> Bigrams: 
[[given, predictor], [predictor, t̂], [t̂, ,], [,, defined], [defined,  ], [ , Lp(t̂], [Lp(t̂, )]]

>> Trigrams: 
[[given, predictor, t̂], [predictor, t̂, ,], [t̂, ,, defined], [,, defined,  ], [defined,  , Lp(t̂], [ , Lp(t̂, )]]

>> Noun Phrases are: 
[a given predictor, Lp(t̂]

>> Named Entities are: 
[]


============================ Sentence 233 =============================

= E(x,t)∼p(x,t)[`(t, t̂(x))]. 


>> Tokens are: 
[=, E(x, ,, t)∼p(x, ,, t)[`(t, ,, t̂(x, ), ), ], .] 

>> PoS Tags are: 
[('=', 'PUNCT'), ('E(x', 'NUM'), (',', 'PUNCT'), ('t)∼p(x', 'NUM'), (',', 'PUNCT'), ('t)[`(t', 'DET'), (',', 'PUNCT'), ('t̂(x', 'NOUN'), (')', 'PUNCT'), (')', 'PUNCT'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('=', 'punct'), ('E(x', 'ROOT'), (',', 'punct'), ('t)∼p(x', 'intj'), (',', 'punct'), ('t)[`(t', 'intj'), (',', 'punct'), ('t̂(x', 'conj'), (')', 'punct'), (')', 'punct'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[=, E(x], [E(x, ,], [,, t)∼p(x], [t)∼p(x, ,], [,, t)[`(t], [t)[`(t, ,], [,, t̂(x], [t̂(x, )], [), )], [), ]], [], .]]

>> Trigrams: 
[[=, E(x, ,], [E(x, ,, t)∼p(x], [,, t)∼p(x, ,], [t)∼p(x, ,, t)[`(t], [,, t)[`(t, ,], [t)[`(t, ,, t̂(x], [,, t̂(x, )], [t̂(x, ), )], [), ), ]], [), ], .]]

>> Noun Phrases are: 
[, t̂(x]

>> Named Entities are: 
[]


============================ Sentence 234 =============================

(2)   


>> Tokens are: 
[(, 2, ),  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('2', 'X'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('2', 'ROOT'), (')', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[(, 2], [2, )], [),  ]]

>> Trigrams: 
[[(, 2, )], [2, ),  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 235 =============================

The generalization loss (2) is averaged over the distribu- tion of the test pair (x, t). 


>> Tokens are: 
[generalization, loss, (, 2, ), averaged, distribu-, tion, test, pair, (, x, ,, t, ), .] 

>> PoS Tags are: 
[('generalization', 'NOUN'), ('loss', 'NOUN'), ('(', 'PUNCT'), ('2', 'NUM'), (')', 'PUNCT'), ('averaged', 'VERB'), ('distribu-', 'NOUN'), ('tion', 'NOUN'), ('test', 'NOUN'), ('pair', 'NOUN'), ('(', 'PUNCT'), ('x', 'SYM'), (',', 'PUNCT'), ('t', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('generalization', 'compound'), ('loss', 'nsubjpass'), ('(', 'punct'), ('2', 'appos'), (')', 'punct'), ('averaged', 'ROOT'), ('distribu-', 'compound'), ('tion', 'pobj'), ('test', 'compound'), ('pair', 'pobj'), ('(', 'punct'), ('x', 'appos'), (',', 'punct'), ('t', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[generalization, loss], [loss, (], [(, 2], [2, )], [), averaged], [averaged, distribu-], [distribu-, tion], [tion, test], [test, pair], [pair, (], [(, x], [x, ,], [,, t], [t, )], [), .]]

>> Trigrams: 
[[generalization, loss, (], [loss, (, 2], [(, 2, )], [2, ), averaged], [), averaged, distribu-], [averaged, distribu-, tion], [distribu-, tion, test], [tion, test, pair], [test, pair, (], [pair, (, x], [(, x, ,], [x, ,, t], [,, t, )], [t, ), .]]

>> Noun Phrases are: 
[The generalization loss, the distribu- tion, the test pair]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 236 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 237 =============================

Before moving on to the solution of the problem of minimizing the generalization loss, we mention that the formulation provided here is only one, albeit arguably the most popular, of a number of alternative formula- tions of supervised learning. 


>> Tokens are: 
[moving, solution, problem, minimizing, generalization, loss, ,, mention, formulation, provided, ,, albeit, arguably, popular, ,, number, alternative, formula-, tions, supervised, learning, .] 

>> PoS Tags are: 
[('moving', 'VERB'), ('solution', 'NOUN'), ('problem', 'NOUN'), ('minimizing', 'VERB'), ('generalization', 'NOUN'), ('loss', 'NOUN'), (',', 'PUNCT'), ('mention', 'VERB'), ('formulation', 'NOUN'), ('provided', 'VERB'), (',', 'PUNCT'), ('albeit', 'SCONJ'), ('arguably', 'ADV'), ('popular', 'ADJ'), (',', 'PUNCT'), ('number', 'NOUN'), ('alternative', 'ADJ'), ('formula-', 'NOUN'), ('tions', 'NOUN'), ('supervised', 'ADJ'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('moving', 'pcomp'), ('solution', 'pobj'), ('problem', 'pobj'), ('minimizing', 'pcomp'), ('generalization', 'compound'), ('loss', 'dobj'), (',', 'punct'), ('mention', 'ROOT'), ('formulation', 'nsubj'), ('provided', 'acl'), (',', 'punct'), ('albeit', 'mark'), ('arguably', 'advmod'), ('popular', 'acomp'), (',', 'punct'), ('number', 'pobj'), ('alternative', 'amod'), ('formula-', 'compound'), ('tions', 'pobj'), ('supervised', 'amod'), ('learning', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[moving, solution], [solution, problem], [problem, minimizing], [minimizing, generalization], [generalization, loss], [loss, ,], [,, mention], [mention, formulation], [formulation, provided], [provided, ,], [,, albeit], [albeit, arguably], [arguably, popular], [popular, ,], [,, number], [number, alternative], [alternative, formula-], [formula-, tions], [tions, supervised], [supervised, learning], [learning, .]]

>> Trigrams: 
[[moving, solution, problem], [solution, problem, minimizing], [problem, minimizing, generalization], [minimizing, generalization, loss], [generalization, loss, ,], [loss, ,, mention], [,, mention, formulation], [mention, formulation, provided], [formulation, provided, ,], [provided, ,, albeit], [,, albeit, arguably], [albeit, arguably, popular], [arguably, popular, ,], [popular, ,, number], [,, number, alternative], [number, alternative, formula-], [alternative, formula-, tions], [formula-, tions, supervised], [tions, supervised, learning], [supervised, learning, .]]

>> Noun Phrases are: 
[the solution, the problem, the generalization loss, we, the formulation, a number, alternative formula- tions, supervised learning]

>> Named Entities are: 
[]


============================ Sentence 238 =============================

The frequentist framework described above is in fact complemented by other view- points, including Bayesian and Minimum Description Length (MDL) (see [19] and references therein). 


>> Tokens are: 
[frequentist, framework, described, fact, complemented, view-, points, ,, including, Bayesian, Minimum, Description, Length, (, MDL, ), (, [, 19, ], references, ), .] 

>> PoS Tags are: 
[('frequentist', 'ADJ'), ('framework', 'NOUN'), ('described', 'VERB'), ('fact', 'NOUN'), ('complemented', 'VERB'), ('view-', 'ADJ'), ('points', 'NOUN'), (',', 'PUNCT'), ('including', 'VERB'), ('Bayesian', 'PROPN'), ('Minimum', 'PROPN'), ('Description', 'PROPN'), ('Length', 'PROPN'), ('(', 'PUNCT'), ('MDL', 'PROPN'), (')', 'PUNCT'), ('(', 'PUNCT'), ('[', 'PUNCT'), ('19', 'NUM'), (']', 'PUNCT'), ('references', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('frequentist', 'amod'), ('framework', 'nsubj'), ('described', 'acl'), ('fact', 'pobj'), ('complemented', 'advcl'), ('view-', 'amod'), ('points', 'pobj'), (',', 'punct'), ('including', 'prep'), ('Bayesian', 'nmod'), ('Minimum', 'compound'), ('Description', 'conj'), ('Length', 'pobj'), ('(', 'punct'), ('MDL', 'appos'), (')', 'punct'), ('(', 'punct'), ('[', 'punct'), ('19', 'dep'), (']', 'punct'), ('references', 'conj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[frequentist, framework], [framework, described], [described, fact], [fact, complemented], [complemented, view-], [view-, points], [points, ,], [,, including], [including, Bayesian], [Bayesian, Minimum], [Minimum, Description], [Description, Length], [Length, (], [(, MDL], [MDL, )], [), (], [(, [], [[, 19], [19, ]], [], references], [references, )], [), .]]

>> Trigrams: 
[[frequentist, framework, described], [framework, described, fact], [described, fact, complemented], [fact, complemented, view-], [complemented, view-, points], [view-, points, ,], [points, ,, including], [,, including, Bayesian], [including, Bayesian, Minimum], [Bayesian, Minimum, Description], [Minimum, Description, Length], [Description, Length, (], [Length, (, MDL], [(, MDL, )], [MDL, ), (], [), (, [], [(, [, 19], [[, 19, ]], [19, ], references], [], references, )], [references, ), .]]

>> Noun Phrases are: 
[The frequentist framework, fact, other view- points, Bayesian and Minimum Description Length, MDL]

>> Named Entities are: 
[('Bayesian', 'NORP'), ('MDL', 'ORG'), ('19', 'CARDINAL')]


============================ Sentence 239 =============================

 C. 


>> Tokens are: 
[ , C.] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('C.', 'PROPN')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('C.', 'ROOT')]

>> Bigrams: 
[[ , C.]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[ C.]

>> Named Entities are: 
[]


============================ Sentence 240 =============================

When The True Distribution p(x, t) is Known: Infer- 


>> Tokens are: 
[True, Distribution, p(x, ,, t, ), Known, :, Infer-] 

>> PoS Tags are: 
[('True', 'ADJ'), ('Distribution', 'PROPN'), ('p(x', 'PROPN'), (',', 'PUNCT'), ('t', 'NOUN'), (')', 'PUNCT'), ('Known', 'VERB'), (':', 'PUNCT'), ('Infer-', 'PROPN')] 

>> Dependency Tags are: 
[('True', 'amod'), ('Distribution', 'compound'), ('p(x', 'nsubjpass'), (',', 'punct'), ('t', 'appos'), (')', 'punct'), ('Known', 'ROOT'), (':', 'punct'), ('Infer-', 'punct')]

>> Bigrams: 
[[True, Distribution], [Distribution, p(x], [p(x, ,], [,, t], [t, )], [), Known], [Known, :], [:, Infer-]]

>> Trigrams: 
[[True, Distribution, p(x], [Distribution, p(x, ,], [p(x, ,, t], [,, t, )], [t, ), Known], [), Known, :], [Known, :, Infer-]]

>> Noun Phrases are: 
[The True Distribution p(x, t]

>> Named Entities are: 
[]


============================ Sentence 241 =============================

ence   


>> Tokens are: 
[ence,  ] 

>> PoS Tags are: 
[('ence', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('ence', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[ence,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[ence]

>> Named Entities are: 
[]


============================ Sentence 242 =============================

Consider first the case in which the true joint dis- tribution p(x, t) relating input and output is known. 


>> Tokens are: 
[Consider, case, true, joint, dis-, tribution, p(x, ,, t, ), relating, input, output, known, .] 

>> PoS Tags are: 
[('Consider', 'VERB'), ('case', 'NOUN'), ('true', 'ADJ'), ('joint', 'ADJ'), ('dis-', 'NOUN'), ('tribution', 'NOUN'), ('p(x', 'PROPN'), (',', 'PUNCT'), ('t', 'NOUN'), (')', 'PUNCT'), ('relating', 'VERB'), ('input', 'NOUN'), ('output', 'NOUN'), ('known', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Consider', 'ROOT'), ('case', 'dobj'), ('true', 'amod'), ('joint', 'amod'), ('dis-', 'compound'), ('tribution', 'compound'), ('p(x', 'nsubjpass'), (',', 'punct'), ('t', 'appos'), (')', 'punct'), ('relating', 'acl'), ('input', 'dobj'), ('output', 'conj'), ('known', 'relcl'), ('.', 'punct')]

>> Bigrams: 
[[Consider, case], [case, true], [true, joint], [joint, dis-], [dis-, tribution], [tribution, p(x], [p(x, ,], [,, t], [t, )], [), relating], [relating, input], [input, output], [output, known], [known, .]]

>> Trigrams: 
[[Consider, case, true], [case, true, joint], [true, joint, dis-], [joint, dis-, tribution], [dis-, tribution, p(x], [tribution, p(x, ,], [p(x, ,, t], [,, t, )], [t, ), relating], [), relating, input], [relating, input, output], [input, output, known], [output, known, .]]

>> Noun Phrases are: 
[the case, the true joint dis- tribution p(x, t, input, output]

>> Named Entities are: 
[('first', 'ORDINAL'), ('p(x', 'ORG')]


============================ Sentence 243 =============================

This scenario can be considered as an idealization of the situation resulting from the conventional engineering design flow when the available physics-based model is accurate (see Sec I). 


>> Tokens are: 
[scenario, considered, idealization, situation, resulting, conventional, engineering, design, flow, available, physics, -, based, model, accurate, (, Sec, ), .] 

>> PoS Tags are: 
[('scenario', 'NOUN'), ('considered', 'VERB'), ('idealization', 'NOUN'), ('situation', 'NOUN'), ('resulting', 'VERB'), ('conventional', 'ADJ'), ('engineering', 'NOUN'), ('design', 'NOUN'), ('flow', 'NOUN'), ('available', 'ADJ'), ('physics', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('model', 'NOUN'), ('accurate', 'ADJ'), ('(', 'PUNCT'), ('Sec', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('scenario', 'nsubjpass'), ('considered', 'ccomp'), ('idealization', 'pobj'), ('situation', 'pobj'), ('resulting', 'acl'), ('conventional', 'amod'), ('engineering', 'compound'), ('design', 'compound'), ('flow', 'pobj'), ('available', 'amod'), ('physics', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('model', 'nsubj'), ('accurate', 'acomp'), ('(', 'punct'), ('Sec', 'compound'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[scenario, considered], [considered, idealization], [idealization, situation], [situation, resulting], [resulting, conventional], [conventional, engineering], [engineering, design], [design, flow], [flow, available], [available, physics], [physics, -], [-, based], [based, model], [model, accurate], [accurate, (], [(, Sec], [Sec, )], [), .]]

>> Trigrams: 
[[scenario, considered, idealization], [considered, idealization, situation], [idealization, situation, resulting], [situation, resulting, conventional], [resulting, conventional, engineering], [conventional, engineering, design], [engineering, design, flow], [design, flow, available], [flow, available, physics], [available, physics, -], [physics, -, based], [-, based, model], [based, model, accurate], [model, accurate, (], [accurate, (, Sec], [(, Sec, )], [Sec, ), .]]

>> Noun Phrases are: 
[This scenario, an idealization, the situation, the conventional engineering design flow, the available physics-based model, Sec I]

>> Named Entities are: 
[('Sec', 'PERSON')]


============================ Sentence 244 =============================

Under this assumption, the data set  6    D is not necessary, since the mapping between input and output is fully described by the distribution p(x, t). 


>> Tokens are: 
[assumption, ,, data, set,  , 6,    , D, necessary, ,, mapping, input, output, fully, described, distribution, p(x, ,, t, ), .] 

>> PoS Tags are: 
[('assumption', 'NOUN'), (',', 'PUNCT'), ('data', 'NOUN'), ('set', 'VERB'), (' ', 'SPACE'), ('6', 'NUM'), ('   ', 'SPACE'), ('D', 'PROPN'), ('necessary', 'ADJ'), (',', 'PUNCT'), ('mapping', 'NOUN'), ('input', 'NOUN'), ('output', 'NOUN'), ('fully', 'ADV'), ('described', 'VERB'), ('distribution', 'NOUN'), ('p(x', 'PROPN'), (',', 'PUNCT'), ('t', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('assumption', 'pobj'), (',', 'punct'), ('data', 'nsubj'), ('set', 'ccomp'), (' ', 'dobj'), ('6', 'nummod'), ('   ', 'nummod'), ('D', 'nsubj'), ('necessary', 'acomp'), (',', 'punct'), ('mapping', 'nsubjpass'), ('input', 'pobj'), ('output', 'conj'), ('fully', 'advmod'), ('described', 'advcl'), ('distribution', 'pobj'), ('p(x', 'pobj'), (',', 'punct'), ('t', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[assumption, ,], [,, data], [data, set], [set,  ], [ , 6], [6,    ], [   , D], [D, necessary], [necessary, ,], [,, mapping], [mapping, input], [input, output], [output, fully], [fully, described], [described, distribution], [distribution, p(x], [p(x, ,], [,, t], [t, )], [), .]]

>> Trigrams: 
[[assumption, ,, data], [,, data, set], [data, set,  ], [set,  , 6], [ , 6,    ], [6,    , D], [   , D, necessary], [D, necessary, ,], [necessary, ,, mapping], [,, mapping, input], [mapping, input, output], [input, output, fully], [output, fully, described], [fully, described, distribution], [described, distribution, p(x], [distribution, p(x, ,], [p(x, ,, t], [,, t, )], [t, ), .]]

>> Noun Phrases are: 
[this assumption, the data, 6    D, the mapping, input, output, the distribution, p(x, t]

>> Named Entities are: 
[('6', 'CARDINAL'), ('p(x', 'ORG')]


============================ Sentence 245 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 246 =============================

If the true distribution p(x, t) is known, the problem of minimizing the generalization loss reduces to a stan- dard inference problem, i.e.--, an estimation problem in a regression set-up, in which the outputs are continuous variables, or a detection problem in a classification set- up, in which the outputs are finite discrete variables. 


>> Tokens are: 
[true, distribution, p(x, ,, t, ), known, ,, problem, minimizing, generalization, loss, reduces, stan-, dard, inference, problem, ,, i.e.--, ,, estimation, problem, regression, set, -, ,, outputs, continuous, variables, ,, detection, problem, classification, set-, ,, outputs, finite, discrete, variables, .] 

>> PoS Tags are: 
[('true', 'ADJ'), ('distribution', 'NOUN'), ('p(x', 'PROPN'), (',', 'PUNCT'), ('t', 'NOUN'), (')', 'PUNCT'), ('known', 'VERB'), (',', 'PUNCT'), ('problem', 'NOUN'), ('minimizing', 'VERB'), ('generalization', 'NOUN'), ('loss', 'NOUN'), ('reduces', 'VERB'), ('stan-', 'ADJ'), ('dard', 'NOUN'), ('inference', 'NOUN'), ('problem', 'NOUN'), (',', 'PUNCT'), ('i.e.--', 'PUNCT'), (',', 'PUNCT'), ('estimation', 'NOUN'), ('problem', 'NOUN'), ('regression', 'NOUN'), ('set', 'NOUN'), ('-', 'PUNCT'), (',', 'PUNCT'), ('outputs', 'NOUN'), ('continuous', 'ADJ'), ('variables', 'NOUN'), (',', 'PUNCT'), ('detection', 'NOUN'), ('problem', 'NOUN'), ('classification', 'NOUN'), ('set-', 'NOUN'), (',', 'PUNCT'), ('outputs', 'NOUN'), ('finite', 'ADJ'), ('discrete', 'ADJ'), ('variables', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('true', 'amod'), ('distribution', 'nsubjpass'), ('p(x', 'appos'), (',', 'punct'), ('t', 'appos'), (')', 'punct'), ('known', 'advcl'), (',', 'punct'), ('problem', 'ROOT'), ('minimizing', 'pcomp'), ('generalization', 'compound'), ('loss', 'nsubj'), ('reduces', 'ccomp'), ('stan-', 'amod'), ('dard', 'compound'), ('inference', 'compound'), ('problem', 'pobj'), (',', 'punct'), ('i.e.--', 'conj'), (',', 'punct'), ('estimation', 'compound'), ('problem', 'appos'), ('regression', 'compound'), ('set', 'compound'), ('-', 'punct'), (',', 'punct'), ('outputs', 'nsubj'), ('continuous', 'amod'), ('variables', 'attr'), (',', 'punct'), ('detection', 'compound'), ('problem', 'conj'), ('classification', 'pobj'), ('set-', 'advmod'), (',', 'punct'), ('outputs', 'nsubj'), ('finite', 'amod'), ('discrete', 'amod'), ('variables', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[true, distribution], [distribution, p(x], [p(x, ,], [,, t], [t, )], [), known], [known, ,], [,, problem], [problem, minimizing], [minimizing, generalization], [generalization, loss], [loss, reduces], [reduces, stan-], [stan-, dard], [dard, inference], [inference, problem], [problem, ,], [,, i.e.--], [i.e.--, ,], [,, estimation], [estimation, problem], [problem, regression], [regression, set], [set, -], [-, ,], [,, outputs], [outputs, continuous], [continuous, variables], [variables, ,], [,, detection], [detection, problem], [problem, classification], [classification, set-], [set-, ,], [,, outputs], [outputs, finite], [finite, discrete], [discrete, variables], [variables, .]]

>> Trigrams: 
[[true, distribution, p(x], [distribution, p(x, ,], [p(x, ,, t], [,, t, )], [t, ), known], [), known, ,], [known, ,, problem], [,, problem, minimizing], [problem, minimizing, generalization], [minimizing, generalization, loss], [generalization, loss, reduces], [loss, reduces, stan-], [reduces, stan-, dard], [stan-, dard, inference], [dard, inference, problem], [inference, problem, ,], [problem, ,, i.e.--], [,, i.e.--, ,], [i.e.--, ,, estimation], [,, estimation, problem], [estimation, problem, regression], [problem, regression, set], [regression, set, -], [set, -, ,], [-, ,, outputs], [,, outputs, continuous], [outputs, continuous, variables], [continuous, variables, ,], [variables, ,, detection], [,, detection, problem], [detection, problem, classification], [problem, classification, set-], [classification, set-, ,], [set-, ,, outputs], [,, outputs, finite], [outputs, finite, discrete], [finite, discrete, variables], [discrete, variables, .]]

>> Noun Phrases are: 
[the true distribution, p(x, t, the generalization loss, a stan- dard inference problem, an estimation problem, the outputs, continuous variables, a detection problem, a classification, the outputs, finite discrete variables]

>> Named Entities are: 
[('p(x', 'ORG')]


============================ Sentence 247 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 248 =============================

In an inference problem, the optimal predictor t̂ can be directly computed from the posterior distribution  p(t|x) 


>> Tokens are: 
[inference, problem, ,, optimal, predictor, t̂, directly, computed, posterior, distribution,  , p(t|x, )] 

>> PoS Tags are: 
[('inference', 'NOUN'), ('problem', 'NOUN'), (',', 'PUNCT'), ('optimal', 'ADJ'), ('predictor', 'NOUN'), ('t̂', 'VERB'), ('directly', 'ADV'), ('computed', 'VERB'), ('posterior', 'ADJ'), ('distribution', 'NOUN'), (' ', 'SPACE'), ('p(t|x', 'X'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('inference', 'compound'), ('problem', 'pobj'), (',', 'punct'), ('optimal', 'amod'), ('predictor', 'nsubj'), ('t̂', 'nsubjpass'), ('directly', 'advmod'), ('computed', 'ROOT'), ('posterior', 'amod'), ('distribution', 'pobj'), (' ', 'punct'), ('p(t|x', 'appos'), (')', 'punct')]

>> Bigrams: 
[[inference, problem], [problem, ,], [,, optimal], [optimal, predictor], [predictor, t̂], [t̂, directly], [directly, computed], [computed, posterior], [posterior, distribution], [distribution,  ], [ , p(t|x], [p(t|x, )]]

>> Trigrams: 
[[inference, problem, ,], [problem, ,, optimal], [,, optimal, predictor], [optimal, predictor, t̂], [predictor, t̂, directly], [t̂, directly, computed], [directly, computed, posterior], [computed, posterior, distribution], [posterior, distribution,  ], [distribution,  , p(t|x], [ , p(t|x, )]]

>> Noun Phrases are: 
[an inference problem, the optimal predictor, the posterior distribution]

>> Named Entities are: 
[]


============================ Sentence 249 =============================

= p(x, t)  p(x) , (3)  where p(x) is the marginal distribution of the input x. The latter can be computed from the joint distribution p(x, t) by summing or integrating out all the values of t. 


>> Tokens are: 
[=, p(x, ,, t, ),  , p(x, ), ,, (, 3, ),  , p(x, ), marginal, distribution, input, x., computed, joint, distribution, p(x, ,, t, ), summing, integrating, values, t.] 

>> PoS Tags are: 
[('=', 'PUNCT'), ('p(x', 'PROPN'), (',', 'PUNCT'), ('t', 'NOUN'), (')', 'PUNCT'), (' ', 'SPACE'), ('p(x', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('(', 'PUNCT'), ('3', 'X'), (')', 'PUNCT'), (' ', 'SPACE'), ('p(x', 'PROPN'), (')', 'PUNCT'), ('marginal', 'ADJ'), ('distribution', 'NOUN'), ('input', 'NOUN'), ('x.', 'NOUN'), ('computed', 'VERB'), ('joint', 'ADJ'), ('distribution', 'NOUN'), ('p(x', 'PROPN'), (',', 'PUNCT'), ('t', 'NOUN'), (')', 'PUNCT'), ('summing', 'VERB'), ('integrating', 'VERB'), ('values', 'NOUN'), ('t.', 'NOUN')] 

>> Dependency Tags are: 
[('=', 'punct'), ('p(x', 'nsubjpass'), (',', 'punct'), ('t', 'appos'), (')', 'punct'), (' ', 'appos'), ('p(x', 'appos'), (')', 'punct'), (',', 'punct'), ('(', 'punct'), ('3', 'appos'), (')', 'punct'), (' ', 'appos'), ('p(x', 'nsubj'), (')', 'punct'), ('marginal', 'amod'), ('distribution', 'attr'), ('input', 'compound'), ('x.', 'pobj'), ('computed', 'ROOT'), ('joint', 'amod'), ('distribution', 'pobj'), ('p(x', 'npadvmod'), (',', 'punct'), ('t', 'appos'), (')', 'punct'), ('summing', 'pcomp'), ('integrating', 'conj'), ('values', 'dobj'), ('t.', 'pobj')]

>> Bigrams: 
[[=, p(x], [p(x, ,], [,, t], [t, )], [),  ], [ , p(x], [p(x, )], [), ,], [,, (], [(, 3], [3, )], [),  ], [ , p(x], [p(x, )], [), marginal], [marginal, distribution], [distribution, input], [input, x.], [x., computed], [computed, joint], [joint, distribution], [distribution, p(x], [p(x, ,], [,, t], [t, )], [), summing], [summing, integrating], [integrating, values], [values, t.]]

>> Trigrams: 
[[=, p(x, ,], [p(x, ,, t], [,, t, )], [t, ),  ], [),  , p(x], [ , p(x, )], [p(x, ), ,], [), ,, (], [,, (, 3], [(, 3, )], [3, ),  ], [),  , p(x], [ , p(x, )], [p(x, ), marginal], [), marginal, distribution], [marginal, distribution, input], [distribution, input, x.], [input, x., computed], [x., computed, joint], [computed, joint, distribution], [joint, distribution, p(x], [distribution, p(x, ,], [p(x, ,, t], [,, t, )], [t, ), summing], [), summing, integrating], [summing, integrating, values], [integrating, values, t.]]

>> Noun Phrases are: 
[= p(x, t, p(x, p(x, the marginal distribution, the input x., the joint distribution, t, all the values, t.]

>> Named Entities are: 
[('p(x', 'ORG'), ('p(x', 'ORG'), ('3', 'CARDINAL'), ('p(x', 'ORG'), ('p(x', 'ORG')]


============================ Sentence 250 =============================

In fact, given a loss function `(t, t̂), the optimal predictor for any input x is obtained as  t̂∗(x) = argmin t̂  Et∼p(t|x)[`(t, t̂)|x]. 


>> Tokens are: 
[fact, ,, given, loss, function, `, (, t, ,, t̂, ), ,, optimal, predictor, input, x, obtained,  , t̂∗(x, ), =, argmin, t̂,  , Et∼p(t|x)[`(t, ,, t̂)|x, ], .] 

>> PoS Tags are: 
[('fact', 'NOUN'), (',', 'PUNCT'), ('given', 'VERB'), ('loss', 'NOUN'), ('function', 'NOUN'), ('`', 'PUNCT'), ('(', 'PUNCT'), ('t', 'NOUN'), (',', 'PUNCT'), ('t̂', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('optimal', 'ADJ'), ('predictor', 'NOUN'), ('input', 'NOUN'), ('x', 'PUNCT'), ('obtained', 'VERB'), (' ', 'SPACE'), ('t̂∗(x', 'ADJ'), (')', 'PUNCT'), ('=', 'SYM'), ('argmin', 'VERB'), ('t̂', 'NUM'), (' ', 'SPACE'), ('Et∼p(t|x)[`(t', 'NOUN'), (',', 'PUNCT'), ('t̂)|x', 'X'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('fact', 'pobj'), (',', 'punct'), ('given', 'prep'), ('loss', 'compound'), ('function', 'pobj'), ('`', 'punct'), ('(', 'punct'), ('t', 'appos'), (',', 'punct'), ('t̂', 'intj'), (')', 'punct'), (',', 'punct'), ('optimal', 'amod'), ('predictor', 'nsubjpass'), ('input', 'pobj'), ('x', 'punct'), ('obtained', 'ccomp'), (' ', 'pobj'), ('t̂∗(x', 'appos'), (')', 'punct'), ('=', 'advmod'), ('argmin', 'ROOT'), ('t̂', 'punct'), (' ', 'punct'), ('Et∼p(t|x)[`(t', 'npadvmod'), (',', 'punct'), ('t̂)|x', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[fact, ,], [,, given], [given, loss], [loss, function], [function, `], [`, (], [(, t], [t, ,], [,, t̂], [t̂, )], [), ,], [,, optimal], [optimal, predictor], [predictor, input], [input, x], [x, obtained], [obtained,  ], [ , t̂∗(x], [t̂∗(x, )], [), =], [=, argmin], [argmin, t̂], [t̂,  ], [ , Et∼p(t|x)[`(t], [Et∼p(t|x)[`(t, ,], [,, t̂)|x], [t̂)|x, ]], [], .]]

>> Trigrams: 
[[fact, ,, given], [,, given, loss], [given, loss, function], [loss, function, `], [function, `, (], [`, (, t], [(, t, ,], [t, ,, t̂], [,, t̂, )], [t̂, ), ,], [), ,, optimal], [,, optimal, predictor], [optimal, predictor, input], [predictor, input, x], [input, x, obtained], [x, obtained,  ], [obtained,  , t̂∗(x], [ , t̂∗(x, )], [t̂∗(x, ), =], [), =, argmin], [=, argmin, t̂], [argmin, t̂,  ], [t̂,  , Et∼p(t|x)[`(t], [ , Et∼p(t|x)[`(t, ,], [Et∼p(t|x)[`(t, ,, t̂)|x], [,, t̂)|x, ]], [t̂)|x, ], .]]

>> Noun Phrases are: 
[fact, a loss function, t, the optimal predictor, any input]

>> Named Entities are: 
[]


============================ Sentence 251 =============================

(4)   


>> Tokens are: 
[(, 4, ),  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('4', 'X'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('4', 'ROOT'), (')', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[(, 4], [4, )], [),  ]]

>> Trigrams: 
[[(, 4, )], [4, ),  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 252 =============================

In words, the optimal predictor t̂∗(x) is obtained by identifying the value (or values) of t that minimizes the average loss, where the average is taken with respect to the posterior distribution p(t|x) of the output given the input. 


>> Tokens are: 
[words, ,, optimal, predictor, t̂∗(x, ), obtained, identifying, value, (, values, ), t, minimizes, average, loss, ,, average, taken, respect, posterior, distribution, p(t|x, ), output, given, input, .] 

>> PoS Tags are: 
[('words', 'NOUN'), (',', 'PUNCT'), ('optimal', 'ADJ'), ('predictor', 'NOUN'), ('t̂∗(x', 'NOUN'), (')', 'PUNCT'), ('obtained', 'VERB'), ('identifying', 'VERB'), ('value', 'NOUN'), ('(', 'PUNCT'), ('values', 'NOUN'), (')', 'PUNCT'), ('t', 'NOUN'), ('minimizes', 'VERB'), ('average', 'ADJ'), ('loss', 'NOUN'), (',', 'PUNCT'), ('average', 'NOUN'), ('taken', 'VERB'), ('respect', 'NOUN'), ('posterior', 'ADJ'), ('distribution', 'NOUN'), ('p(t|x', 'X'), (')', 'PUNCT'), ('output', 'NOUN'), ('given', 'VERB'), ('input', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('words', 'pobj'), (',', 'punct'), ('optimal', 'amod'), ('predictor', 'nsubjpass'), ('t̂∗(x', 'appos'), (')', 'punct'), ('obtained', 'ROOT'), ('identifying', 'pcomp'), ('value', 'dobj'), ('(', 'punct'), ('values', 'conj'), (')', 'punct'), ('t', 'pobj'), ('minimizes', 'relcl'), ('average', 'amod'), ('loss', 'dobj'), (',', 'punct'), ('average', 'nsubjpass'), ('taken', 'relcl'), ('respect', 'pobj'), ('posterior', 'amod'), ('distribution', 'pobj'), ('p(t|x', 'appos'), (')', 'punct'), ('output', 'pobj'), ('given', 'prep'), ('input', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[words, ,], [,, optimal], [optimal, predictor], [predictor, t̂∗(x], [t̂∗(x, )], [), obtained], [obtained, identifying], [identifying, value], [value, (], [(, values], [values, )], [), t], [t, minimizes], [minimizes, average], [average, loss], [loss, ,], [,, average], [average, taken], [taken, respect], [respect, posterior], [posterior, distribution], [distribution, p(t|x], [p(t|x, )], [), output], [output, given], [given, input], [input, .]]

>> Trigrams: 
[[words, ,, optimal], [,, optimal, predictor], [optimal, predictor, t̂∗(x], [predictor, t̂∗(x, )], [t̂∗(x, ), obtained], [), obtained, identifying], [obtained, identifying, value], [identifying, value, (], [value, (, values], [(, values, )], [values, ), t], [), t, minimizes], [t, minimizes, average], [minimizes, average, loss], [average, loss, ,], [loss, ,, average], [,, average, taken], [average, taken, respect], [taken, respect, posterior], [respect, posterior, distribution], [posterior, distribution, p(t|x], [distribution, p(t|x, )], [p(t|x, ), output], [), output, given], [output, given, input], [given, input, .]]

>> Noun Phrases are: 
[words, the optimal predictor, t̂∗(x, the value, values, t, the average loss, the average, respect, the posterior distribution, the output, the input]

>> Named Entities are: 
[]


============================ Sentence 253 =============================

Given that the posterior p(t|x) yields the optimal predictor, it is also known as the true predictive distribution. 


>> Tokens are: 
[Given, posterior, p(t|x, ), yields, optimal, predictor, ,, known, true, predictive, distribution, .] 

>> PoS Tags are: 
[('Given', 'VERB'), ('posterior', 'ADJ'), ('p(t|x', 'NOUN'), (')', 'PUNCT'), ('yields', 'VERB'), ('optimal', 'ADJ'), ('predictor', 'NOUN'), (',', 'PUNCT'), ('known', 'VERB'), ('true', 'ADJ'), ('predictive', 'ADJ'), ('distribution', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Given', 'prep'), ('posterior', 'amod'), ('p(t|x', 'nsubj'), (')', 'punct'), ('yields', 'ccomp'), ('optimal', 'amod'), ('predictor', 'dobj'), (',', 'punct'), ('known', 'ROOT'), ('true', 'amod'), ('predictive', 'amod'), ('distribution', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Given, posterior], [posterior, p(t|x], [p(t|x, )], [), yields], [yields, optimal], [optimal, predictor], [predictor, ,], [,, known], [known, true], [true, predictive], [predictive, distribution], [distribution, .]]

>> Trigrams: 
[[Given, posterior, p(t|x], [posterior, p(t|x, )], [p(t|x, ), yields], [), yields, optimal], [yields, optimal, predictor], [optimal, predictor, ,], [predictor, ,, known], [,, known, true], [known, true, predictive], [true, predictive, distribution], [predictive, distribution, .]]

>> Noun Phrases are: 
[the posterior p(t|x, the optimal predictor, it, the true predictive distribution]

>> Named Entities are: 
[]


============================ Sentence 254 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 255 =============================

The optimal predictor (4) can be explicitly evaluated for given loss functions. 


>> Tokens are: 
[optimal, predictor, (, 4, ), explicitly, evaluated, given, loss, functions, .] 

>> PoS Tags are: 
[('optimal', 'ADJ'), ('predictor', 'NOUN'), ('(', 'PUNCT'), ('4', 'NUM'), (')', 'PUNCT'), ('explicitly', 'ADV'), ('evaluated', 'VERB'), ('given', 'VERB'), ('loss', 'NOUN'), ('functions', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('optimal', 'amod'), ('predictor', 'nsubjpass'), ('(', 'punct'), ('4', 'appos'), (')', 'punct'), ('explicitly', 'advmod'), ('evaluated', 'ROOT'), ('given', 'pcomp'), ('loss', 'compound'), ('functions', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[optimal, predictor], [predictor, (], [(, 4], [4, )], [), explicitly], [explicitly, evaluated], [evaluated, given], [given, loss], [loss, functions], [functions, .]]

>> Trigrams: 
[[optimal, predictor, (], [predictor, (, 4], [(, 4, )], [4, ), explicitly], [), explicitly, evaluated], [explicitly, evaluated, given], [evaluated, given, loss], [given, loss, functions], [loss, functions, .]]

>> Noun Phrases are: 
[The optimal predictor, loss functions]

>> Named Entities are: 
[('4', 'CARDINAL')]


============================ Sentence 256 =============================

For instance, for the quadratic loss, which is typical for regression, the optimal predictor is given by the mean of the predictive distribution, or the posterior mean, i.e.--,  t̂∗(x) = Et∼p(t|x)[t|x], (5)  while, with the error rate loss, which is typical for classification, problems, the optimal predictor is given by the maximum of the predictive distribution, or the maximum a posteriori (MAP) estimate, i.e.--,  t̂∗(x) = argmax t p(t|x). 


>> Tokens are: 
[instance, ,, quadratic, loss, ,, typical, regression, ,, optimal, predictor, given, mean, predictive, distribution, ,, posterior, mean, ,, i.e.--, ,,  , t̂∗(x, ), =, Et∼p(t|x)[t|x, ], ,, (, 5, ),  , ,, error, rate, loss, ,, typical, classification, ,, problems, ,, optimal, predictor, given, maximum, predictive, distribution, ,, maximum, posteriori, (, MAP, ), estimate, ,, i.e.--, ,,  , t̂∗(x, ), =, argmax, t, p(t|x, ), .] 

>> PoS Tags are: 
[('instance', 'NOUN'), (',', 'PUNCT'), ('quadratic', 'ADJ'), ('loss', 'NOUN'), (',', 'PUNCT'), ('typical', 'ADJ'), ('regression', 'NOUN'), (',', 'PUNCT'), ('optimal', 'ADJ'), ('predictor', 'NOUN'), ('given', 'VERB'), ('mean', 'NOUN'), ('predictive', 'ADJ'), ('distribution', 'NOUN'), (',', 'PUNCT'), ('posterior', 'ADJ'), ('mean', 'NOUN'), (',', 'PUNCT'), ('i.e.--', 'PUNCT'), (',', 'PUNCT'), (' ', 'SPACE'), ('t̂∗(x', 'NUM'), (')', 'PUNCT'), ('=', 'VERB'), ('Et∼p(t|x)[t|x', 'PROPN'), (']', 'PUNCT'), (',', 'PUNCT'), ('(', 'PUNCT'), ('5', 'X'), (')', 'PUNCT'), (' ', 'SPACE'), (',', 'PUNCT'), ('error', 'NOUN'), ('rate', 'NOUN'), ('loss', 'NOUN'), (',', 'PUNCT'), ('typical', 'ADJ'), ('classification', 'NOUN'), (',', 'PUNCT'), ('problems', 'NOUN'), (',', 'PUNCT'), ('optimal', 'ADJ'), ('predictor', 'NOUN'), ('given', 'VERB'), ('maximum', 'NOUN'), ('predictive', 'ADJ'), ('distribution', 'NOUN'), (',', 'PUNCT'), ('maximum', 'NOUN'), ('posteriori', 'NOUN'), ('(', 'PUNCT'), ('MAP', 'PROPN'), (')', 'PUNCT'), ('estimate', 'NOUN'), (',', 'PUNCT'), ('i.e.--', 'CCONJ'), (',', 'PUNCT'), (' ', 'SPACE'), ('t̂∗(x', 'NUM'), (')', 'PUNCT'), ('=', 'SYM'), ('argmax', 'VERB'), ('t', 'X'), ('p(t|x', 'X'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('instance', 'pobj'), (',', 'punct'), ('quadratic', 'amod'), ('loss', 'pobj'), (',', 'punct'), ('typical', 'acomp'), ('regression', 'pobj'), (',', 'punct'), ('optimal', 'amod'), ('predictor', 'nsubjpass'), ('given', 'ccomp'), ('mean', 'pobj'), ('predictive', 'amod'), ('distribution', 'pobj'), (',', 'punct'), ('posterior', 'amod'), ('mean', 'conj'), (',', 'punct'), ('i.e.--', 'appos'), (',', 'punct'), (' ', 'appos'), ('t̂∗(x', 'appos'), (')', 'punct'), ('=', 'punct'), ('Et∼p(t|x)[t|x', 'nsubj'), (']', 'punct'), (',', 'punct'), ('(', 'punct'), ('5', 'appos'), (')', 'punct'), (' ', 'appos'), (',', 'punct'), ('error', 'compound'), ('rate', 'compound'), ('loss', 'pobj'), (',', 'punct'), ('typical', 'acomp'), ('classification', 'pobj'), (',', 'punct'), ('problems', 'conj'), (',', 'punct'), ('optimal', 'amod'), ('predictor', 'nsubjpass'), ('given', 'advcl'), ('maximum', 'pobj'), ('predictive', 'amod'), ('distribution', 'pobj'), (',', 'punct'), ('maximum', 'nsubj'), ('posteriori', 'nmod'), ('(', 'punct'), ('MAP', 'appos'), (')', 'punct'), ('estimate', 'conj'), (',', 'punct'), ('i.e.--', 'punct'), (',', 'punct'), (' ', 'appos'), ('t̂∗(x', 'appos'), (')', 'punct'), ('=', 'punct'), ('argmax', 'ROOT'), ('t', 'compound'), ('p(t|x', 'dobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[instance, ,], [,, quadratic], [quadratic, loss], [loss, ,], [,, typical], [typical, regression], [regression, ,], [,, optimal], [optimal, predictor], [predictor, given], [given, mean], [mean, predictive], [predictive, distribution], [distribution, ,], [,, posterior], [posterior, mean], [mean, ,], [,, i.e.--], [i.e.--, ,], [,,  ], [ , t̂∗(x], [t̂∗(x, )], [), =], [=, Et∼p(t|x)[t|x], [Et∼p(t|x)[t|x, ]], [], ,], [,, (], [(, 5], [5, )], [),  ], [ , ,], [,, error], [error, rate], [rate, loss], [loss, ,], [,, typical], [typical, classification], [classification, ,], [,, problems], [problems, ,], [,, optimal], [optimal, predictor], [predictor, given], [given, maximum], [maximum, predictive], [predictive, distribution], [distribution, ,], [,, maximum], [maximum, posteriori], [posteriori, (], [(, MAP], [MAP, )], [), estimate], [estimate, ,], [,, i.e.--], [i.e.--, ,], [,,  ], [ , t̂∗(x], [t̂∗(x, )], [), =], [=, argmax], [argmax, t], [t, p(t|x], [p(t|x, )], [), .]]

>> Trigrams: 
[[instance, ,, quadratic], [,, quadratic, loss], [quadratic, loss, ,], [loss, ,, typical], [,, typical, regression], [typical, regression, ,], [regression, ,, optimal], [,, optimal, predictor], [optimal, predictor, given], [predictor, given, mean], [given, mean, predictive], [mean, predictive, distribution], [predictive, distribution, ,], [distribution, ,, posterior], [,, posterior, mean], [posterior, mean, ,], [mean, ,, i.e.--], [,, i.e.--, ,], [i.e.--, ,,  ], [,,  , t̂∗(x], [ , t̂∗(x, )], [t̂∗(x, ), =], [), =, Et∼p(t|x)[t|x], [=, Et∼p(t|x)[t|x, ]], [Et∼p(t|x)[t|x, ], ,], [], ,, (], [,, (, 5], [(, 5, )], [5, ),  ], [),  , ,], [ , ,, error], [,, error, rate], [error, rate, loss], [rate, loss, ,], [loss, ,, typical], [,, typical, classification], [typical, classification, ,], [classification, ,, problems], [,, problems, ,], [problems, ,, optimal], [,, optimal, predictor], [optimal, predictor, given], [predictor, given, maximum], [given, maximum, predictive], [maximum, predictive, distribution], [predictive, distribution, ,], [distribution, ,, maximum], [,, maximum, posteriori], [maximum, posteriori, (], [posteriori, (, MAP], [(, MAP, )], [MAP, ), estimate], [), estimate, ,], [estimate, ,, i.e.--], [,, i.e.--, ,], [i.e.--, ,,  ], [,,  , t̂∗(x], [ , t̂∗(x, )], [t̂∗(x, ), =], [), =, argmax], [=, argmax, t], [argmax, t, p(t|x], [t, p(t|x, )], [p(t|x, ), .]]

>> Noun Phrases are: 
[instance, the quadratic loss, regression, the optimal predictor, the mean, the predictive distribution, the error rate loss, classification, problems, the optimal predictor, the maximum, the predictive distribution, the maximum, (MAP]

>> Named Entities are: 
[('MAP', 'ORG')]


============================ Sentence 257 =============================

(6)   


>> Tokens are: 
[(, 6, ),  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('6', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('6', 'nummod'), (')', 'punct'), (' ', 'ROOT')]

>> Bigrams: 
[[(, 6], [6, )], [),  ]]

>> Trigrams: 
[[(, 6, )], [6, ),  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('6', 'CARDINAL')]


============================ Sentence 258 =============================

For a numerical example, consider binary inputs and outputs and the joint distribution p(x, t) such that p(0, 0) = 


>> Tokens are: 
[numerical, example, ,, consider, binary, inputs, outputs, joint, distribution, p(x, ,, t, ), p(0, ,, 0, ), =] 

>> PoS Tags are: 
[('numerical', 'ADJ'), ('example', 'NOUN'), (',', 'PUNCT'), ('consider', 'VERB'), ('binary', 'ADJ'), ('inputs', 'NOUN'), ('outputs', 'NOUN'), ('joint', 'ADJ'), ('distribution', 'NOUN'), ('p(x', 'PROPN'), (',', 'PUNCT'), ('t', 'NOUN'), (')', 'PUNCT'), ('p(0', 'PROPN'), (',', 'PUNCT'), ('0', 'NUM'), (')', 'PUNCT'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('numerical', 'amod'), ('example', 'pobj'), (',', 'punct'), ('consider', 'ROOT'), ('binary', 'amod'), ('inputs', 'dobj'), ('outputs', 'conj'), ('joint', 'amod'), ('distribution', 'conj'), ('p(x', 'dobj'), (',', 'punct'), ('t', 'appos'), (')', 'punct'), ('p(0', 'appos'), (',', 'punct'), ('0', 'appos'), (')', 'punct'), ('=', 'punct')]

>> Bigrams: 
[[numerical, example], [example, ,], [,, consider], [consider, binary], [binary, inputs], [inputs, outputs], [outputs, joint], [joint, distribution], [distribution, p(x], [p(x, ,], [,, t], [t, )], [), p(0], [p(0, ,], [,, 0], [0, )], [), =]]

>> Trigrams: 
[[numerical, example, ,], [example, ,, consider], [,, consider, binary], [consider, binary, inputs], [binary, inputs, outputs], [inputs, outputs, joint], [outputs, joint, distribution], [joint, distribution, p(x], [distribution, p(x, ,], [p(x, ,, t], [,, t, )], [t, ), p(0], [), p(0, ,], [p(0, ,, 0], [,, 0, )], [0, ), =]]

>> Noun Phrases are: 
[a numerical example, binary inputs, outputs, the joint distribution, p(x, t, such that p(0]

>> Named Entities are: 
[('p(x', 'ORG')]


============================ Sentence 259 =============================

0.05, p(0, 1) = 0.45, p(1, 0) 


>> Tokens are: 
[0.05, ,, p(0, ,, 1, ), =, 0.45, ,, p(1, ,, 0, )] 

>> PoS Tags are: 
[('0.05', 'NUM'), (',', 'PUNCT'), ('p(0', 'PROPN'), (',', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('=', 'PUNCT'), ('0.45', 'NUM'), (',', 'PUNCT'), ('p(1', 'PROPN'), (',', 'PUNCT'), ('0', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('0.05', 'ROOT'), (',', 'punct'), ('p(0', 'npadvmod'), (',', 'punct'), ('1', 'appos'), (')', 'punct'), ('=', 'punct'), ('0.45', 'appos'), (',', 'punct'), ('p(1', 'npadvmod'), (',', 'punct'), ('0', 'nummod'), (')', 'punct')]

>> Bigrams: 
[[0.05, ,], [,, p(0], [p(0, ,], [,, 1], [1, )], [), =], [=, 0.45], [0.45, ,], [,, p(1], [p(1, ,], [,, 0], [0, )]]

>> Trigrams: 
[[0.05, ,, p(0], [,, p(0, ,], [p(0, ,, 1], [,, 1, )], [1, ), =], [), =, 0.45], [=, 0.45, ,], [0.45, ,, p(1], [,, p(1, ,], [p(1, ,, 0], [,, 0, )]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('0.05', 'CARDINAL'), ('1', 'CARDINAL'), ('0.45', 'CARDINAL')]


============================ Sentence 260 =============================

= 0.4 and p(1, 1) = 0.1. 


>> Tokens are: 
[=, 0.4, p(1, ,, 1, ), =, 0.1, .] 

>> PoS Tags are: 
[('=', 'PUNCT'), ('0.4', 'NUM'), ('p(1', 'PROPN'), (',', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('=', 'SYM'), ('0.1', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('=', 'punct'), ('0.4', 'nummod'), ('p(1', 'conj'), (',', 'punct'), ('1', 'appos'), (')', 'punct'), ('=', 'punct'), ('0.1', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[=, 0.4], [0.4, p(1], [p(1, ,], [,, 1], [1, )], [), =], [=, 0.1], [0.1, .]]

>> Trigrams: 
[[=, 0.4, p(1], [0.4, p(1, ,], [p(1, ,, 1], [,, 1, )], [1, ), =], [), =, 0.1], [=, 0.1, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('0.4', 'CARDINAL'), ('1', 'CARDINAL'), ('0.1', 'CARDINAL')]


============================ Sentence 261 =============================

The predictive distribution for input x = 0 is then given as p(t = 1|x = 0) = 0.9, and hence we have the optimal predictor given by the average t̂∗(x = 0) 


>> Tokens are: 
[predictive, distribution, input, x, =, 0, given, p(t, =, 1|x, =, 0, ), =, 0.9, ,, optimal, predictor, given, average, t̂∗(x, =, 0, )] 

>> PoS Tags are: 
[('predictive', 'ADJ'), ('distribution', 'NOUN'), ('input', 'NOUN'), ('x', 'SYM'), ('=', 'SYM'), ('0', 'NUM'), ('given', 'VERB'), ('p(t', 'PROPN'), ('=', 'PUNCT'), ('1|x', 'NUM'), ('=', 'PUNCT'), ('0', 'NUM'), (')', 'PUNCT'), ('=', 'PUNCT'), ('0.9', 'NUM'), (',', 'PUNCT'), ('optimal', 'ADJ'), ('predictor', 'NOUN'), ('given', 'VERB'), ('average', 'ADJ'), ('t̂∗(x', 'NOUN'), ('=', 'SYM'), ('0', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('predictive', 'amod'), ('distribution', 'nsubjpass'), ('input', 'pobj'), ('x', 'punct'), ('=', 'appos'), ('0', 'nummod'), ('given', 'ccomp'), ('p(t', 'pobj'), ('=', 'punct'), ('1|x', 'ROOT'), ('=', 'punct'), ('0', 'punct'), (')', 'punct'), ('=', 'punct'), ('0.9', 'appos'), (',', 'punct'), ('optimal', 'amod'), ('predictor', 'dobj'), ('given', 'acl'), ('average', 'amod'), ('t̂∗(x', 'pobj'), ('=', 'punct'), ('0', 'punct'), (')', 'punct')]

>> Bigrams: 
[[predictive, distribution], [distribution, input], [input, x], [x, =], [=, 0], [0, given], [given, p(t], [p(t, =], [=, 1|x], [1|x, =], [=, 0], [0, )], [), =], [=, 0.9], [0.9, ,], [,, optimal], [optimal, predictor], [predictor, given], [given, average], [average, t̂∗(x], [t̂∗(x, =], [=, 0], [0, )]]

>> Trigrams: 
[[predictive, distribution, input], [distribution, input, x], [input, x, =], [x, =, 0], [=, 0, given], [0, given, p(t], [given, p(t, =], [p(t, =, 1|x], [=, 1|x, =], [1|x, =, 0], [=, 0, )], [0, ), =], [), =, 0.9], [=, 0.9, ,], [0.9, ,, optimal], [,, optimal, predictor], [optimal, predictor, given], [predictor, given, average], [given, average, t̂∗(x], [average, t̂∗(x, =], [t̂∗(x, =, 0], [=, 0, )]]

>> Noun Phrases are: 
[The predictive distribution, input, p(t, we, the optimal predictor, the average t̂∗(x]

>> Named Entities are: 
[('0', 'CARDINAL'), ('1|x', 'CARDINAL'), ('0.9', 'CARDINAL'), ('0', 'CARDINAL')]


============================ Sentence 262 =============================

= 0.9 


>> Tokens are: 
[=, 0.9] 

>> PoS Tags are: 
[('=', 'PUNCT'), ('0.9', 'NUM')] 

>> Dependency Tags are: 
[('=', 'dep'), ('0.9', 'ROOT')]

>> Bigrams: 
[[=, 0.9]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('0.9', 'CARDINAL')]


============================ Sentence 263 =============================

× 1 + 0.1 × 0 = 0.9 for the quadratic loss, and by the MAP solution t̂∗(x = 0) 


>> Tokens are: 
[×, 1, +, 0.1, ×, 0, =, 0.9, quadratic, loss, ,, MAP, solution, t̂∗(x, =, 0, )] 

>> PoS Tags are: 
[('×', 'NOUN'), ('1', 'NUM'), ('+', 'SYM'), ('0.1', 'NUM'), ('×', 'NOUN'), ('0', 'PUNCT'), ('=', 'SYM'), ('0.9', 'NUM'), ('quadratic', 'ADJ'), ('loss', 'NOUN'), (',', 'PUNCT'), ('MAP', 'PROPN'), ('solution', 'NOUN'), ('t̂∗(x', 'ADJ'), ('=', 'SYM'), ('0', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('×', 'nmod'), ('1', 'nummod'), ('+', 'appos'), ('0.1', 'nummod'), ('×', 'npadvmod'), ('0', 'punct'), ('=', 'punct'), ('0.9', 'ROOT'), ('quadratic', 'amod'), ('loss', 'pobj'), (',', 'punct'), ('MAP', 'compound'), ('solution', 'pobj'), ('t̂∗(x', 'conj'), ('=', 'punct'), ('0', 'punct'), (')', 'punct')]

>> Bigrams: 
[[×, 1], [1, +], [+, 0.1], [0.1, ×], [×, 0], [0, =], [=, 0.9], [0.9, quadratic], [quadratic, loss], [loss, ,], [,, MAP], [MAP, solution], [solution, t̂∗(x], [t̂∗(x, =], [=, 0], [0, )]]

>> Trigrams: 
[[×, 1, +], [1, +, 0.1], [+, 0.1, ×], [0.1, ×, 0], [×, 0, =], [0, =, 0.9], [=, 0.9, quadratic], [0.9, quadratic, loss], [quadratic, loss, ,], [loss, ,, MAP], [,, MAP, solution], [MAP, solution, t̂∗(x], [solution, t̂∗(x, =], [t̂∗(x, =, 0], [=, 0, )]]

>> Noun Phrases are: 
[the quadratic loss, the MAP solution]

>> Named Entities are: 
[('0', 'CARDINAL'), ('0.9', 'CARDINAL'), ('MAP', 'ORG'), ('0', 'CARDINAL')]


============================ Sentence 264 =============================

= 1 for the error rate loss. 


>> Tokens are: 
[=, 1, error, rate, loss, .] 

>> PoS Tags are: 
[('=', 'PUNCT'), ('1', 'NUM'), ('error', 'NOUN'), ('rate', 'NOUN'), ('loss', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('=', 'punct'), ('1', 'ROOT'), ('error', 'compound'), ('rate', 'compound'), ('loss', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[=, 1], [1, error], [error, rate], [rate, loss], [loss, .]]

>> Trigrams: 
[[=, 1, error], [1, error, rate], [error, rate, loss], [rate, loss, .]]

>> Noun Phrases are: 
[the error rate loss]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 265 =============================

 D. 


>> Tokens are: 
[ , D.] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('D.', 'PROPN')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('D.', 'ROOT')]

>> Bigrams: 
[[ , D.]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[ D.]

>> Named Entities are: 
[('D.', 'NORP')]


============================ Sentence 266 =============================

When the True Distribution p(x, t) is Not Known: Machine Learning   


>> Tokens are: 
[True, Distribution, p(x, ,, t, ), Known, :, Machine, Learning,  ] 

>> PoS Tags are: 
[('True', 'ADJ'), ('Distribution', 'PROPN'), ('p(x', 'PROPN'), (',', 'PUNCT'), ('t', 'NOUN'), (')', 'PUNCT'), ('Known', 'ADJ'), (':', 'PUNCT'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('True', 'amod'), ('Distribution', 'compound'), ('p(x', 'nsubj'), (',', 'punct'), ('t', 'appos'), (')', 'punct'), ('Known', 'acomp'), (':', 'punct'), ('Machine', 'compound'), ('Learning', 'attr'), (' ', 'punct')]

>> Bigrams: 
[[True, Distribution], [Distribution, p(x], [p(x, ,], [,, t], [t, )], [), Known], [Known, :], [:, Machine], [Machine, Learning], [Learning,  ]]

>> Trigrams: 
[[True, Distribution, p(x], [Distribution, p(x, ,], [p(x, ,, t], [,, t, )], [t, ), Known], [), Known, :], [Known, :, Machine], [:, Machine, Learning], [Machine, Learning,  ]]

>> Noun Phrases are: 
[the True Distribution p(x, t, Machine Learning]

>> Named Entities are: 
[('the True Distribution p(x', 'ORG')]


============================ Sentence 267 =============================

Consider now the case of interest in which domain knowledge is not available and hence the true joint distribution is unknown. 


>> Tokens are: 
[Consider, case, interest, domain, knowledge, available, true, joint, distribution, unknown, .] 

>> PoS Tags are: 
[('Consider', 'VERB'), ('case', 'NOUN'), ('interest', 'NOUN'), ('domain', 'NOUN'), ('knowledge', 'NOUN'), ('available', 'ADJ'), ('true', 'ADJ'), ('joint', 'ADJ'), ('distribution', 'NOUN'), ('unknown', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Consider', 'ROOT'), ('case', 'dobj'), ('interest', 'pobj'), ('domain', 'compound'), ('knowledge', 'nsubj'), ('available', 'acomp'), ('true', 'amod'), ('joint', 'amod'), ('distribution', 'nsubj'), ('unknown', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[Consider, case], [case, interest], [interest, domain], [domain, knowledge], [knowledge, available], [available, true], [true, joint], [joint, distribution], [distribution, unknown], [unknown, .]]

>> Trigrams: 
[[Consider, case, interest], [case, interest, domain], [interest, domain, knowledge], [domain, knowledge, available], [knowledge, available, true], [available, true, joint], [true, joint, distribution], [joint, distribution, unknown], [distribution, unknown, .]]

>> Noun Phrases are: 
[the case, interest, domain knowledge, hence the true joint distribution]

>> Named Entities are: 
[]


============================ Sentence 268 =============================

In such a scenario, we have a learning problem and we need to use the examples in the training set D in order to obtain a meaningful predictor that approximately minimizes the generalization loss. 


>> Tokens are: 
[scenario, ,, learning, problem, need, use, examples, training, set, D, order, obtain, meaningful, predictor, approximately, minimizes, generalization, loss, .] 

>> PoS Tags are: 
[('scenario', 'NOUN'), (',', 'PUNCT'), ('learning', 'VERB'), ('problem', 'NOUN'), ('need', 'VERB'), ('use', 'VERB'), ('examples', 'NOUN'), ('training', 'NOUN'), ('set', 'NOUN'), ('D', 'NOUN'), ('order', 'NOUN'), ('obtain', 'VERB'), ('meaningful', 'ADJ'), ('predictor', 'NOUN'), ('approximately', 'ADV'), ('minimizes', 'VERB'), ('generalization', 'NOUN'), ('loss', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('scenario', 'pobj'), (',', 'punct'), ('learning', 'compound'), ('problem', 'dobj'), ('need', 'conj'), ('use', 'xcomp'), ('examples', 'dobj'), ('training', 'compound'), ('set', 'acl'), ('D', 'pobj'), ('order', 'pobj'), ('obtain', 'acl'), ('meaningful', 'amod'), ('predictor', 'dobj'), ('approximately', 'advmod'), ('minimizes', 'relcl'), ('generalization', 'compound'), ('loss', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[scenario, ,], [,, learning], [learning, problem], [problem, need], [need, use], [use, examples], [examples, training], [training, set], [set, D], [D, order], [order, obtain], [obtain, meaningful], [meaningful, predictor], [predictor, approximately], [approximately, minimizes], [minimizes, generalization], [generalization, loss], [loss, .]]

>> Trigrams: 
[[scenario, ,, learning], [,, learning, problem], [learning, problem, need], [problem, need, use], [need, use, examples], [use, examples, training], [examples, training, set], [training, set, D], [set, D, order], [D, order, obtain], [order, obtain, meaningful], [obtain, meaningful, predictor], [meaningful, predictor, approximately], [predictor, approximately, minimizes], [approximately, minimizes, generalization], [minimizes, generalization, loss], [generalization, loss, .]]

>> Noun Phrases are: 
[such a scenario, we, a learning problem, we, the examples, the training set D, order, a meaningful predictor, the generalization loss]

>> Named Entities are: 
[]


============================ Sentence 269 =============================

At a high level, the methodology applied by machine learning follows three main steps, which are described next. 


>> Tokens are: 
[high, level, ,, methodology, applied, machine, learning, follows, main, steps, ,, described, .] 

>> PoS Tags are: 
[('high', 'ADJ'), ('level', 'NOUN'), (',', 'PUNCT'), ('methodology', 'NOUN'), ('applied', 'VERB'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('follows', 'VERB'), ('main', 'ADJ'), ('steps', 'NOUN'), (',', 'PUNCT'), ('described', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('high', 'amod'), ('level', 'pobj'), (',', 'punct'), ('methodology', 'nsubj'), ('applied', 'acl'), ('machine', 'compound'), ('learning', 'pobj'), ('follows', 'ROOT'), ('main', 'amod'), ('steps', 'dobj'), (',', 'punct'), ('described', 'relcl'), ('.', 'punct')]

>> Bigrams: 
[[high, level], [level, ,], [,, methodology], [methodology, applied], [applied, machine], [machine, learning], [learning, follows], [follows, main], [main, steps], [steps, ,], [,, described], [described, .]]

>> Trigrams: 
[[high, level, ,], [level, ,, methodology], [,, methodology, applied], [methodology, applied, machine], [applied, machine, learning], [machine, learning, follows], [learning, follows, main], [follows, main, steps], [main, steps, ,], [steps, ,, described], [,, described, .]]

>> Noun Phrases are: 
[a high level, the methodology, machine learning, three main steps]

>> Named Entities are: 
[('three', 'CARDINAL')]


============================ Sentence 270 =============================

 1. 


>> Tokens are: 
[ , 1, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('1', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('1', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[ , 1], [1, .]]

>> Trigrams: 
[[ , 1, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 271 =============================

Model selection (inductive bias): As a first step, one needs to commit to a specific class of hypotheses that the learning algorithm may choose from. 


>> Tokens are: 
[Model, selection, (, inductive, bias, ):, step, ,, needs, commit, specific, class, hypotheses, learning, algorithm, choose, .] 

>> PoS Tags are: 
[('Model', 'NOUN'), ('selection', 'NOUN'), ('(', 'PUNCT'), ('inductive', 'ADJ'), ('bias', 'NOUN'), ('):', 'PUNCT'), ('step', 'NOUN'), (',', 'PUNCT'), ('needs', 'VERB'), ('commit', 'VERB'), ('specific', 'ADJ'), ('class', 'NOUN'), ('hypotheses', 'NOUN'), ('learning', 'NOUN'), ('algorithm', 'NOUN'), ('choose', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Model', 'compound'), ('selection', 'dep'), ('(', 'punct'), ('inductive', 'amod'), ('bias', 'appos'), ('):', 'punct'), ('step', 'pobj'), (',', 'punct'), ('needs', 'ROOT'), ('commit', 'xcomp'), ('specific', 'amod'), ('class', 'pobj'), ('hypotheses', 'pobj'), ('learning', 'amod'), ('algorithm', 'nsubj'), ('choose', 'relcl'), ('.', 'punct')]

>> Bigrams: 
[[Model, selection], [selection, (], [(, inductive], [inductive, bias], [bias, ):], [):, step], [step, ,], [,, needs], [needs, commit], [commit, specific], [specific, class], [class, hypotheses], [hypotheses, learning], [learning, algorithm], [algorithm, choose], [choose, .]]

>> Trigrams: 
[[Model, selection, (], [selection, (, inductive], [(, inductive, bias], [inductive, bias, ):], [bias, ):, step], [):, step, ,], [step, ,, needs], [,, needs, commit], [needs, commit, specific], [commit, specific, class], [specific, class, hypotheses], [class, hypotheses, learning], [hypotheses, learning, algorithm], [learning, algorithm, choose], [algorithm, choose, .]]

>> Noun Phrases are: 
[inductive bias, a first step, one, a specific class, hypotheses, the learning algorithm]

>> Named Entities are: 
[('first', 'ORDINAL')]


============================ Sentence 272 =============================

The hypothesis class is also referred to as model. 


>> Tokens are: 
[hypothesis, class, referred, model, .] 

>> PoS Tags are: 
[('hypothesis', 'NOUN'), ('class', 'NOUN'), ('referred', 'VERB'), ('model', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('hypothesis', 'compound'), ('class', 'nsubjpass'), ('referred', 'ROOT'), ('model', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[hypothesis, class], [class, referred], [referred, model], [model, .]]

>> Trigrams: 
[[hypothesis, class, referred], [class, referred, model], [referred, model, .]]

>> Noun Phrases are: 
[The hypothesis class, model]

>> Named Entities are: 
[]


============================ Sentence 273 =============================

The selection of the hy- pothesis class characterizes the inductive bias mentioned above as a pre-requisite for learning. 


>> Tokens are: 
[selection, hy-, pothesis, class, characterizes, inductive, bias, mentioned, pre, -, requisite, learning, .] 

>> PoS Tags are: 
[('selection', 'NOUN'), ('hy-', 'ADJ'), ('pothesis', 'NOUN'), ('class', 'NOUN'), ('characterizes', 'VERB'), ('inductive', 'ADJ'), ('bias', 'NOUN'), ('mentioned', 'VERB'), ('pre', 'NOUN'), ('-', 'ADJ'), ('requisite', 'ADJ'), ('learning', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('selection', 'nsubj'), ('hy-', 'amod'), ('pothesis', 'compound'), ('class', 'pobj'), ('characterizes', 'ROOT'), ('inductive', 'amod'), ('bias', 'dobj'), ('mentioned', 'acl'), ('pre', 'pobj'), ('-', 'pobj'), ('requisite', 'pobj'), ('learning', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[selection, hy-], [hy-, pothesis], [pothesis, class], [class, characterizes], [characterizes, inductive], [inductive, bias], [bias, mentioned], [mentioned, pre], [pre, -], [-, requisite], [requisite, learning], [learning, .]]

>> Trigrams: 
[[selection, hy-, pothesis], [hy-, pothesis, class], [pothesis, class, characterizes], [class, characterizes, inductive], [characterizes, inductive, bias], [inductive, bias, mentioned], [bias, mentioned, pre], [mentioned, pre, -], [pre, -, requisite], [-, requisite, learning], [requisite, learning, .]]

>> Noun Phrases are: 
[The selection, the hy- pothesis class, the inductive bias, a pre]

>> Named Entities are: 
[]


============================ Sentence 274 =============================

In a probabilistic framework, the hypothesis class, or model, is defined by a family of probability distributions parameterized by a vector θ. 


>> Tokens are: 
[probabilistic, framework, ,, hypothesis, class, ,, model, ,, defined, family, probability, distributions, parameterized, vector, θ, .] 

>> PoS Tags are: 
[('probabilistic', 'ADJ'), ('framework', 'NOUN'), (',', 'PUNCT'), ('hypothesis', 'NOUN'), ('class', 'NOUN'), (',', 'PUNCT'), ('model', 'NOUN'), (',', 'PUNCT'), ('defined', 'VERB'), ('family', 'NOUN'), ('probability', 'NOUN'), ('distributions', 'NOUN'), ('parameterized', 'VERB'), ('vector', 'NOUN'), ('θ', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('probabilistic', 'amod'), ('framework', 'pobj'), (',', 'punct'), ('hypothesis', 'compound'), ('class', 'nsubjpass'), (',', 'punct'), ('model', 'conj'), (',', 'punct'), ('defined', 'ROOT'), ('family', 'pobj'), ('probability', 'compound'), ('distributions', 'pobj'), ('parameterized', 'acl'), ('vector', 'pobj'), ('θ', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[probabilistic, framework], [framework, ,], [,, hypothesis], [hypothesis, class], [class, ,], [,, model], [model, ,], [,, defined], [defined, family], [family, probability], [probability, distributions], [distributions, parameterized], [parameterized, vector], [vector, θ], [θ, .]]

>> Trigrams: 
[[probabilistic, framework, ,], [framework, ,, hypothesis], [,, hypothesis, class], [hypothesis, class, ,], [class, ,, model], [,, model, ,], [model, ,, defined], [,, defined, family], [defined, family, probability], [family, probability, distributions], [probability, distributions, parameterized], [distributions, parameterized, vector], [parameterized, vector, θ], [vector, θ, .]]

>> Noun Phrases are: 
[a probabilistic framework, the hypothesis class, model, a family, probability distributions, a vector]

>> Named Entities are: 
[]


============================ Sentence 275 =============================

Specifically, there are two main ways of specifying a parametric family of distributions as a model for supervised learning: • Generative model: Generative models specify a  family of joint distributions p(x, t|θ); • Discriminative model: Discriminative models pa-  rameterize directly the predictive distribution as p(t|x, θ).   


>> Tokens are: 
[Specifically, ,, main, ways, specifying, parametric, family, distributions, model, supervised, learning, :, •, Generative, model, :, Generative, models, specify,  , family, joint, distributions, p(x, ,, t|θ, ), ;, •, Discriminative, model, :, Discriminative, models, pa-,  , rameterize, directly, predictive, distribution, p(t|x, ,, θ, ), .,  ] 

>> PoS Tags are: 
[('Specifically', 'ADV'), (',', 'PUNCT'), ('main', 'ADJ'), ('ways', 'NOUN'), ('specifying', 'VERB'), ('parametric', 'ADJ'), ('family', 'NOUN'), ('distributions', 'NOUN'), ('model', 'NOUN'), ('supervised', 'ADJ'), ('learning', 'NOUN'), (':', 'PUNCT'), ('•', 'X'), ('Generative', 'ADJ'), ('model', 'NOUN'), (':', 'PUNCT'), ('Generative', 'ADJ'), ('models', 'NOUN'), ('specify', 'VERB'), (' ', 'SPACE'), ('family', 'NOUN'), ('joint', 'ADJ'), ('distributions', 'NOUN'), ('p(x', 'PROPN'), (',', 'PUNCT'), ('t|θ', 'PROPN'), (')', 'PUNCT'), (';', 'PUNCT'), ('•', 'X'), ('Discriminative', 'ADJ'), ('model', 'NOUN'), (':', 'PUNCT'), ('Discriminative', 'NOUN'), ('models', 'NOUN'), ('pa-', 'AUX'), (' ', 'SPACE'), ('rameterize', 'VERB'), ('directly', 'ADV'), ('predictive', 'ADJ'), ('distribution', 'NOUN'), ('p(t|x', 'NOUN'), (',', 'PUNCT'), ('θ', 'X'), (')', 'PUNCT'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Specifically', 'advmod'), (',', 'punct'), ('main', 'amod'), ('ways', 'attr'), ('specifying', 'pcomp'), ('parametric', 'amod'), ('family', 'dobj'), ('distributions', 'pobj'), ('model', 'pobj'), ('supervised', 'amod'), ('learning', 'pobj'), (':', 'punct'), ('•', 'amod'), ('Generative', 'amod'), ('model', 'dep'), (':', 'punct'), ('Generative', 'amod'), ('models', 'nsubj'), ('specify', 'acl'), (' ', 'compound'), ('family', 'dobj'), ('joint', 'amod'), ('distributions', 'pobj'), ('p(x', 'conj'), (',', 'punct'), ('t|θ', 'npadvmod'), (')', 'punct'), (';', 'punct'), ('•', 'compound'), ('Discriminative', 'compound'), ('model', 'dep'), (':', 'punct'), ('Discriminative', 'compound'), ('models', 'nsubj'), ('pa-', 'aux'), (' ', 'pobj'), ('rameterize', 'acl'), ('directly', 'advmod'), ('predictive', 'amod'), ('distribution', 'dobj'), ('p(t|x', 'pobj'), (',', 'punct'), ('θ', 'prep'), (')', 'punct'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Specifically, ,], [,, main], [main, ways], [ways, specifying], [specifying, parametric], [parametric, family], [family, distributions], [distributions, model], [model, supervised], [supervised, learning], [learning, :], [:, •], [•, Generative], [Generative, model], [model, :], [:, Generative], [Generative, models], [models, specify], [specify,  ], [ , family], [family, joint], [joint, distributions], [distributions, p(x], [p(x, ,], [,, t|θ], [t|θ, )], [), ;], [;, •], [•, Discriminative], [Discriminative, model], [model, :], [:, Discriminative], [Discriminative, models], [models, pa-], [pa-,  ], [ , rameterize], [rameterize, directly], [directly, predictive], [predictive, distribution], [distribution, p(t|x], [p(t|x, ,], [,, θ], [θ, )], [), .], [.,  ]]

>> Trigrams: 
[[Specifically, ,, main], [,, main, ways], [main, ways, specifying], [ways, specifying, parametric], [specifying, parametric, family], [parametric, family, distributions], [family, distributions, model], [distributions, model, supervised], [model, supervised, learning], [supervised, learning, :], [learning, :, •], [:, •, Generative], [•, Generative, model], [Generative, model, :], [model, :, Generative], [:, Generative, models], [Generative, models, specify], [models, specify,  ], [specify,  , family], [ , family, joint], [family, joint, distributions], [joint, distributions, p(x], [distributions, p(x, ,], [p(x, ,, t|θ], [,, t|θ, )], [t|θ, ), ;], [), ;, •], [;, •, Discriminative], [•, Discriminative, model], [Discriminative, model, :], [model, :, Discriminative], [:, Discriminative, models], [Discriminative, models, pa-], [models, pa-,  ], [pa-,  , rameterize], [ , rameterize, directly], [rameterize, directly, predictive], [directly, predictive, distribution], [predictive, distribution, p(t|x], [distribution, p(t|x, ,], [p(t|x, ,, θ], [,, θ, )], [θ, ), .], [), .,  ]]

>> Noun Phrases are: 
[two main ways, a parametric family, distributions, a model, supervised learning, Generative models, a  family, joint distributions, p(x, Discriminative models, the predictive distribution, p(t|x]

>> Named Entities are: 
[('two', 'CARDINAL'), ('p(x', 'ORG')]


============================ Sentence 276 =============================

Broadly speaking, discriminative models do not make any assumptions about the distribution of the inputs x and hence may be less prone to bias caused by a misspecification of the hypothesis class. 


>> Tokens are: 
[Broadly, speaking, ,, discriminative, models, assumptions, distribution, inputs, x, prone, bias, caused, misspecification, hypothesis, class, .] 

>> PoS Tags are: 
[('Broadly', 'ADV'), ('speaking', 'VERB'), (',', 'PUNCT'), ('discriminative', 'ADJ'), ('models', 'NOUN'), ('assumptions', 'NOUN'), ('distribution', 'NOUN'), ('inputs', 'NOUN'), ('x', 'SYM'), ('prone', 'ADJ'), ('bias', 'VERB'), ('caused', 'VERB'), ('misspecification', 'NOUN'), ('hypothesis', 'NOUN'), ('class', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Broadly', 'advmod'), ('speaking', 'advcl'), (',', 'punct'), ('discriminative', 'amod'), ('models', 'nsubj'), ('assumptions', 'dobj'), ('distribution', 'pobj'), ('inputs', 'pobj'), ('x', 'punct'), ('prone', 'acomp'), ('bias', 'pobj'), ('caused', 'acl'), ('misspecification', 'pobj'), ('hypothesis', 'compound'), ('class', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Broadly, speaking], [speaking, ,], [,, discriminative], [discriminative, models], [models, assumptions], [assumptions, distribution], [distribution, inputs], [inputs, x], [x, prone], [prone, bias], [bias, caused], [caused, misspecification], [misspecification, hypothesis], [hypothesis, class], [class, .]]

>> Trigrams: 
[[Broadly, speaking, ,], [speaking, ,, discriminative], [,, discriminative, models], [discriminative, models, assumptions], [models, assumptions, distribution], [assumptions, distribution, inputs], [distribution, inputs, x], [inputs, x, prone], [x, prone, bias], [prone, bias, caused], [bias, caused, misspecification], [caused, misspecification, hypothesis], [misspecification, hypothesis, class], [hypothesis, class, .]]

>> Noun Phrases are: 
[discriminative models, any assumptions, the distribution, the inputs, a misspecification, the hypothesis class]

>> Named Entities are: 
[]


============================ Sentence 277 =============================

On the flip side, generative models may be able to capture more of the structure present in the data and consequently improve the performance of the predictor [29]. 


>> Tokens are: 
[flip, ,, generative, models, able, capture, structure, present, data, consequently, improve, performance, predictor, [, 29, ], .] 

>> PoS Tags are: 
[('flip', 'ADJ'), (',', 'PUNCT'), ('generative', 'ADJ'), ('models', 'NOUN'), ('able', 'ADJ'), ('capture', 'VERB'), ('structure', 'NOUN'), ('present', 'ADJ'), ('data', 'NOUN'), ('consequently', 'ADV'), ('improve', 'VERB'), ('performance', 'NOUN'), ('predictor', 'NOUN'), ('[', 'PUNCT'), ('29', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('flip', 'amod'), (',', 'punct'), ('generative', 'amod'), ('models', 'nsubj'), ('able', 'acomp'), ('capture', 'xcomp'), ('structure', 'pobj'), ('present', 'amod'), ('data', 'pobj'), ('consequently', 'advmod'), ('improve', 'conj'), ('performance', 'dobj'), ('predictor', 'pobj'), ('[', 'punct'), ('29', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[flip, ,], [,, generative], [generative, models], [models, able], [able, capture], [capture, structure], [structure, present], [present, data], [data, consequently], [consequently, improve], [improve, performance], [performance, predictor], [predictor, [], [[, 29], [29, ]], [], .]]

>> Trigrams: 
[[flip, ,, generative], [,, generative, models], [generative, models, able], [models, able, capture], [able, capture, structure], [capture, structure, present], [structure, present, data], [present, data, consequently], [data, consequently, improve], [consequently, improve, performance], [improve, performance, predictor], [performance, predictor, [], [predictor, [, 29], [[, 29, ]], [29, ], .]]

>> Noun Phrases are: 
[the flip side, generative models, the structure, the data, the performance, the predictor]

>> Named Entities are: 
[('29', 'CARDINAL')]


============================ Sentence 278 =============================

For both types of models, the hypothesis class is typically selected from a common set of probability distributions that lead to efficient learning algorithms in Step 2. 


>> Tokens are: 
[types, models, ,, hypothesis, class, typically, selected, common, set, probability, distributions, lead, efficient, learning, algorithms, Step, 2, .] 

>> PoS Tags are: 
[('types', 'NOUN'), ('models', 'NOUN'), (',', 'PUNCT'), ('hypothesis', 'NOUN'), ('class', 'NOUN'), ('typically', 'ADV'), ('selected', 'VERB'), ('common', 'ADJ'), ('set', 'NOUN'), ('probability', 'NOUN'), ('distributions', 'NOUN'), ('lead', 'VERB'), ('efficient', 'ADJ'), ('learning', 'VERB'), ('algorithms', 'NOUN'), ('Step', 'PROPN'), ('2', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('types', 'pobj'), ('models', 'pobj'), (',', 'punct'), ('hypothesis', 'compound'), ('class', 'nsubjpass'), ('typically', 'advmod'), ('selected', 'ROOT'), ('common', 'amod'), ('set', 'pobj'), ('probability', 'compound'), ('distributions', 'pobj'), ('lead', 'relcl'), ('efficient', 'amod'), ('learning', 'amod'), ('algorithms', 'pobj'), ('Step', 'pobj'), ('2', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[types, models], [models, ,], [,, hypothesis], [hypothesis, class], [class, typically], [typically, selected], [selected, common], [common, set], [set, probability], [probability, distributions], [distributions, lead], [lead, efficient], [efficient, learning], [learning, algorithms], [algorithms, Step], [Step, 2], [2, .]]

>> Trigrams: 
[[types, models, ,], [models, ,, hypothesis], [,, hypothesis, class], [hypothesis, class, typically], [class, typically, selected], [typically, selected, common], [selected, common, set], [common, set, probability], [set, probability, distributions], [probability, distributions, lead], [distributions, lead, efficient], [lead, efficient, learning], [efficient, learning, algorithms], [learning, algorithms, Step], [algorithms, Step, 2], [Step, 2, .]]

>> Noun Phrases are: 
[both types, models, the hypothesis class, a common set, probability distributions, efficient learning algorithms, Step]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 279 =============================

Furthermore, any available basic domain knowledge can be in principle incorporated in the selection of the model (see also Sec VII). 


>> Tokens are: 
[Furthermore, ,, available, basic, domain, knowledge, principle, incorporated, selection, model, (, Sec, VII, ), .] 

>> PoS Tags are: 
[('Furthermore', 'ADV'), (',', 'PUNCT'), ('available', 'ADJ'), ('basic', 'ADJ'), ('domain', 'NOUN'), ('knowledge', 'NOUN'), ('principle', 'NOUN'), ('incorporated', 'VERB'), ('selection', 'NOUN'), ('model', 'NOUN'), ('(', 'PUNCT'), ('Sec', 'PROPN'), ('VII', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Furthermore', 'advmod'), (',', 'punct'), ('available', 'amod'), ('basic', 'amod'), ('domain', 'compound'), ('knowledge', 'nsubj'), ('principle', 'pobj'), ('incorporated', 'acomp'), ('selection', 'pobj'), ('model', 'pobj'), ('(', 'punct'), ('Sec', 'compound'), ('VII', 'nsubj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Furthermore, ,], [,, available], [available, basic], [basic, domain], [domain, knowledge], [knowledge, principle], [principle, incorporated], [incorporated, selection], [selection, model], [model, (], [(, Sec], [Sec, VII], [VII, )], [), .]]

>> Trigrams: 
[[Furthermore, ,, available], [,, available, basic], [available, basic, domain], [basic, domain, knowledge], [domain, knowledge, principle], [knowledge, principle, incorporated], [principle, incorporated, selection], [incorporated, selection, model], [selection, model, (], [model, (, Sec], [(, Sec, VII], [Sec, VII, )], [VII, ), .]]

>> Noun Phrases are: 
[any available basic domain knowledge, principle, the selection, the model, also Sec VII]

>> Named Entities are: 
[('Sec VII', 'PERSON')]


============================ Sentence 280 =============================

 2. 


>> Tokens are: 
[ , 2, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('2', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('2', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[ , 2], [2, .]]

>> Trigrams: 
[[ , 2, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 281 =============================

Learning: 


>> Tokens are: 
[Learning, :] 

>> PoS Tags are: 
[('Learning', 'VERB'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Learning', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[Learning, :]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 282 =============================

Given data D, in the learning step, a learning criterion is optimized in order to obtain the parameter vector θ and identify a distribution p(x, t|θ) or p(t|x, θ), depending on whether a generative or dis- criminative model was selected at Step 1. 


>> Tokens are: 
[Given, data, D, ,, learning, step, ,, learning, criterion, optimized, order, obtain, parameter, vector, θ, identify, distribution, p(x, ,, t|θ, ), p(t|x, ,, θ, ), ,, depending, generative, dis-, criminative, model, selected, Step, 1, .] 

>> PoS Tags are: 
[('Given', 'VERB'), ('data', 'NOUN'), ('D', 'PROPN'), (',', 'PUNCT'), ('learning', 'NOUN'), ('step', 'NOUN'), (',', 'PUNCT'), ('learning', 'VERB'), ('criterion', 'NOUN'), ('optimized', 'VERB'), ('order', 'NOUN'), ('obtain', 'VERB'), ('parameter', 'NOUN'), ('vector', 'NOUN'), ('θ', 'PUNCT'), ('identify', 'VERB'), ('distribution', 'NOUN'), ('p(x', 'PROPN'), (',', 'PUNCT'), ('t|θ', 'PROPN'), (')', 'PUNCT'), ('p(t|x', 'NOUN'), (',', 'PUNCT'), ('θ', 'X'), (')', 'PUNCT'), (',', 'PUNCT'), ('depending', 'VERB'), ('generative', 'ADJ'), ('dis-', 'ADJ'), ('criminative', 'ADJ'), ('model', 'NOUN'), ('selected', 'VERB'), ('Step', 'PROPN'), ('1', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Given', 'advcl'), ('data', 'compound'), ('D', 'pobj'), (',', 'punct'), ('learning', 'compound'), ('step', 'pobj'), (',', 'punct'), ('learning', 'compound'), ('criterion', 'nsubjpass'), ('optimized', 'ROOT'), ('order', 'pobj'), ('obtain', 'acl'), ('parameter', 'compound'), ('vector', 'dobj'), ('θ', 'punct'), ('identify', 'conj'), ('distribution', 'dobj'), ('p(x', 'dobj'), (',', 'punct'), ('t|θ', 'npadvmod'), (')', 'punct'), ('p(t|x', 'conj'), (',', 'punct'), ('θ', 'prep'), (')', 'punct'), (',', 'punct'), ('depending', 'prep'), ('generative', 'amod'), ('dis-', 'conj'), ('criminative', 'amod'), ('model', 'nsubjpass'), ('selected', 'pcomp'), ('Step', 'pobj'), ('1', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[Given, data], [data, D], [D, ,], [,, learning], [learning, step], [step, ,], [,, learning], [learning, criterion], [criterion, optimized], [optimized, order], [order, obtain], [obtain, parameter], [parameter, vector], [vector, θ], [θ, identify], [identify, distribution], [distribution, p(x], [p(x, ,], [,, t|θ], [t|θ, )], [), p(t|x], [p(t|x, ,], [,, θ], [θ, )], [), ,], [,, depending], [depending, generative], [generative, dis-], [dis-, criminative], [criminative, model], [model, selected], [selected, Step], [Step, 1], [1, .]]

>> Trigrams: 
[[Given, data, D], [data, D, ,], [D, ,, learning], [,, learning, step], [learning, step, ,], [step, ,, learning], [,, learning, criterion], [learning, criterion, optimized], [criterion, optimized, order], [optimized, order, obtain], [order, obtain, parameter], [obtain, parameter, vector], [parameter, vector, θ], [vector, θ, identify], [θ, identify, distribution], [identify, distribution, p(x], [distribution, p(x, ,], [p(x, ,, t|θ], [,, t|θ, )], [t|θ, ), p(t|x], [), p(t|x, ,], [p(t|x, ,, θ], [,, θ, )], [θ, ), ,], [), ,, depending], [,, depending, generative], [depending, generative, dis-], [generative, dis-, criminative], [dis-, criminative, model], [criminative, model, selected], [model, selected, Step], [selected, Step, 1], [Step, 1, .]]

>> Noun Phrases are: 
[data D, the learning step, a learning criterion, order, the parameter vector, a distribution, p(x, p(t|x, a generative or dis- criminative model, Step]

>> Named Entities are: 
[('p(x', 'ORG'), ('1', 'CARDINAL')]


============================ Sentence 283 =============================

 3. 


>> Tokens are: 
[ , 3, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('3', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('3', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[ , 3], [3, .]]

>> Trigrams: 
[[ , 3, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('3', 'CARDINAL')]


============================ Sentence 284 =============================

Inference: 


>> Tokens are: 
[Inference, :] 

>> PoS Tags are: 
[('Inference', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Inference', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[Inference, :]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Inference]

>> Named Entities are: 
[]


============================ Sentence 285 =============================

In the inference step, the learned model is used to obtain the predictor t̂(x) by using (4) with the learned model in lieu of the true distribution. 


>> Tokens are: 
[inference, step, ,, learned, model, obtain, predictor, t̂(x, ), (, 4, ), learned, model, lieu, true, distribution, .] 

>> PoS Tags are: 
[('inference', 'NOUN'), ('step', 'NOUN'), (',', 'PUNCT'), ('learned', 'VERB'), ('model', 'NOUN'), ('obtain', 'VERB'), ('predictor', 'NOUN'), ('t̂(x', 'NOUN'), (')', 'PUNCT'), ('(', 'PUNCT'), ('4', 'NUM'), (')', 'PUNCT'), ('learned', 'VERB'), ('model', 'NOUN'), ('lieu', 'NOUN'), ('true', 'ADJ'), ('distribution', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('inference', 'compound'), ('step', 'pobj'), (',', 'punct'), ('learned', 'amod'), ('model', 'nsubjpass'), ('obtain', 'xcomp'), ('predictor', 'dobj'), ('t̂(x', 'advmod'), (')', 'punct'), ('(', 'punct'), ('4', 'dobj'), (')', 'punct'), ('learned', 'amod'), ('model', 'pobj'), ('lieu', 'pobj'), ('true', 'amod'), ('distribution', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[inference, step], [step, ,], [,, learned], [learned, model], [model, obtain], [obtain, predictor], [predictor, t̂(x], [t̂(x, )], [), (], [(, 4], [4, )], [), learned], [learned, model], [model, lieu], [lieu, true], [true, distribution], [distribution, .]]

>> Trigrams: 
[[inference, step, ,], [step, ,, learned], [,, learned, model], [learned, model, obtain], [model, obtain, predictor], [obtain, predictor, t̂(x], [predictor, t̂(x, )], [t̂(x, ), (], [), (, 4], [(, 4, )], [4, ), learned], [), learned, model], [learned, model, lieu], [model, lieu, true], [lieu, true, distribution], [true, distribution, .]]

>> Noun Phrases are: 
[the inference step, the learned model, the predictor, the learned model, lieu, the true distribution]

>> Named Entities are: 
[('4', 'CARDINAL')]


============================ Sentence 286 =============================

Note that generative models require the calculation of the predictive distribution p(t|x) via marginalization, while discriminative models provide directly the predictive  7    distribution. 


>> Tokens are: 
[Note, generative, models, require, calculation, predictive, distribution, p(t|x, ), marginalization, ,, discriminative, models, provide, directly, predictive,  , 7,    , distribution, .] 

>> PoS Tags are: 
[('Note', 'VERB'), ('generative', 'ADJ'), ('models', 'NOUN'), ('require', 'VERB'), ('calculation', 'NOUN'), ('predictive', 'ADJ'), ('distribution', 'NOUN'), ('p(t|x', 'NOUN'), (')', 'PUNCT'), ('marginalization', 'NOUN'), (',', 'PUNCT'), ('discriminative', 'ADJ'), ('models', 'NOUN'), ('provide', 'VERB'), ('directly', 'ADV'), ('predictive', 'ADJ'), (' ', 'SPACE'), ('7', 'NUM'), ('   ', 'SPACE'), ('distribution', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Note', 'ROOT'), ('generative', 'amod'), ('models', 'nsubj'), ('require', 'ccomp'), ('calculation', 'dobj'), ('predictive', 'amod'), ('distribution', 'pobj'), ('p(t|x', 'appos'), (')', 'punct'), ('marginalization', 'pobj'), (',', 'punct'), ('discriminative', 'amod'), ('models', 'nsubj'), ('provide', 'advcl'), ('directly', 'advmod'), ('predictive', 'amod'), (' ', 'nmod'), ('7', 'nummod'), ('   ', 'nummod'), ('distribution', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Note, generative], [generative, models], [models, require], [require, calculation], [calculation, predictive], [predictive, distribution], [distribution, p(t|x], [p(t|x, )], [), marginalization], [marginalization, ,], [,, discriminative], [discriminative, models], [models, provide], [provide, directly], [directly, predictive], [predictive,  ], [ , 7], [7,    ], [   , distribution], [distribution, .]]

>> Trigrams: 
[[Note, generative, models], [generative, models, require], [models, require, calculation], [require, calculation, predictive], [calculation, predictive, distribution], [predictive, distribution, p(t|x], [distribution, p(t|x, )], [p(t|x, ), marginalization], [), marginalization, ,], [marginalization, ,, discriminative], [,, discriminative, models], [discriminative, models, provide], [models, provide, directly], [provide, directly, predictive], [directly, predictive,  ], [predictive,  , 7], [ , 7,    ], [7,    , distribution], [   , distribution, .]]

>> Noun Phrases are: 
[generative models, the calculation, the predictive distribution, p(t|x, marginalization, discriminative models, the predictive  7    distribution]

>> Named Entities are: 
[('7', 'CARDINAL')]


============================ Sentence 287 =============================

As mentioned, the predictor should be eval- uated on test data that is different from the training set D. As we will discuss, the design cycle typically entails a loop between validation of the predictor at Step 3 and model selection at Step 1.   


>> Tokens are: 
[mentioned, ,, predictor, eval-, uated, test, data, different, training, set, D., discuss, ,, design, cycle, typically, entails, loop, validation, predictor, Step, 3, model, selection, Step, 1, .,  ] 

>> PoS Tags are: 
[('mentioned', 'VERB'), (',', 'PUNCT'), ('predictor', 'NOUN'), ('eval-', 'VERB'), ('uated', 'ADJ'), ('test', 'NOUN'), ('data', 'NOUN'), ('different', 'ADJ'), ('training', 'NOUN'), ('set', 'VERB'), ('D.', 'PROPN'), ('discuss', 'VERB'), (',', 'PUNCT'), ('design', 'NOUN'), ('cycle', 'NOUN'), ('typically', 'ADV'), ('entails', 'VERB'), ('loop', 'NOUN'), ('validation', 'NOUN'), ('predictor', 'NOUN'), ('Step', 'PROPN'), ('3', 'NUM'), ('model', 'NOUN'), ('selection', 'NOUN'), ('Step', 'PROPN'), ('1', 'NUM'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('mentioned', 'advcl'), (',', 'punct'), ('predictor', 'nsubjpass'), ('eval-', 'nsubjpass'), ('uated', 'ROOT'), ('test', 'compound'), ('data', 'pobj'), ('different', 'acomp'), ('training', 'pobj'), ('set', 'acl'), ('D.', 'dobj'), ('discuss', 'advcl'), (',', 'punct'), ('design', 'compound'), ('cycle', 'nsubj'), ('typically', 'advmod'), ('entails', 'conj'), ('loop', 'dobj'), ('validation', 'pobj'), ('predictor', 'pobj'), ('Step', 'pobj'), ('3', 'nummod'), ('model', 'compound'), ('selection', 'conj'), ('Step', 'pobj'), ('1', 'nummod'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[mentioned, ,], [,, predictor], [predictor, eval-], [eval-, uated], [uated, test], [test, data], [data, different], [different, training], [training, set], [set, D.], [D., discuss], [discuss, ,], [,, design], [design, cycle], [cycle, typically], [typically, entails], [entails, loop], [loop, validation], [validation, predictor], [predictor, Step], [Step, 3], [3, model], [model, selection], [selection, Step], [Step, 1], [1, .], [.,  ]]

>> Trigrams: 
[[mentioned, ,, predictor], [,, predictor, eval-], [predictor, eval-, uated], [eval-, uated, test], [uated, test, data], [test, data, different], [data, different, training], [different, training, set], [training, set, D.], [set, D., discuss], [D., discuss, ,], [discuss, ,, design], [,, design, cycle], [design, cycle, typically], [cycle, typically, entails], [typically, entails, loop], [entails, loop, validation], [loop, validation, predictor], [validation, predictor, Step], [predictor, Step, 3], [Step, 3, model], [3, model, selection], [model, selection, Step], [selection, Step, 1], [Step, 1, .], [1, .,  ]]

>> Noun Phrases are: 
[the predictor, test data, the training, D., we, the design cycle, a loop, validation, the predictor, Step, model selection, Step]

>> Named Entities are: 
[('3', 'CARDINAL'), ('1', 'CARDINAL')]


============================ Sentence 288 =============================

The next examples illustrate the three steps introduced above for a binary classification problem. 


>> Tokens are: 
[examples, illustrate, steps, introduced, binary, classification, problem, .] 

>> PoS Tags are: 
[('examples', 'NOUN'), ('illustrate', 'VERB'), ('steps', 'NOUN'), ('introduced', 'VERB'), ('binary', 'ADJ'), ('classification', 'NOUN'), ('problem', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('examples', 'nsubj'), ('illustrate', 'ROOT'), ('steps', 'dobj'), ('introduced', 'acl'), ('binary', 'amod'), ('classification', 'compound'), ('problem', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[examples, illustrate], [illustrate, steps], [steps, introduced], [introduced, binary], [binary, classification], [classification, problem], [problem, .]]

>> Trigrams: 
[[examples, illustrate, steps], [illustrate, steps, introduced], [steps, introduced, binary], [introduced, binary, classification], [binary, classification, problem], [classification, problem, .]]

>> Noun Phrases are: 
[The next examples, the three steps, a binary classification problem]

>> Named Entities are: 
[('three', 'CARDINAL')]


============================ Sentence 289 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 290 =============================

Example 1: Consider a binary classification problem in which the input is a generic D-dimensional vector x = 


>> Tokens are: 
[Example, 1, :, Consider, binary, classification, problem, input, generic, D, -, dimensional, vector, x, =] 

>> PoS Tags are: 
[('Example', 'NOUN'), ('1', 'NUM'), (':', 'PUNCT'), ('Consider', 'VERB'), ('binary', 'ADJ'), ('classification', 'NOUN'), ('problem', 'NOUN'), ('input', 'NOUN'), ('generic', 'ADJ'), ('D', 'NOUN'), ('-', 'PUNCT'), ('dimensional', 'ADJ'), ('vector', 'NOUN'), ('x', 'X'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('Example', 'npadvmod'), ('1', 'nummod'), (':', 'punct'), ('Consider', 'ROOT'), ('binary', 'amod'), ('classification', 'compound'), ('problem', 'dobj'), ('input', 'nsubj'), ('generic', 'amod'), ('D', 'npadvmod'), ('-', 'punct'), ('dimensional', 'amod'), ('vector', 'attr'), ('x', 'punct'), ('=', 'punct')]

>> Bigrams: 
[[Example, 1], [1, :], [:, Consider], [Consider, binary], [binary, classification], [classification, problem], [problem, input], [input, generic], [generic, D], [D, -], [-, dimensional], [dimensional, vector], [vector, x], [x, =]]

>> Trigrams: 
[[Example, 1, :], [1, :, Consider], [:, Consider, binary], [Consider, binary, classification], [binary, classification, problem], [classification, problem, input], [problem, input, generic], [input, generic, D], [generic, D, -], [D, -, dimensional], [-, dimensional, vector], [dimensional, vector, x], [vector, x, =]]

>> Noun Phrases are: 
[a binary classification problem, the input, a generic D-dimensional vector]

>> Named Entities are: 
[]


============================ Sentence 291 =============================

[x1, ..., xD]  T and the output is binary, i.e.--, t ∈ {0, 1}. 


>> Tokens are: 
[[, x1, ,, ..., ,, xD, ],  , T, output, binary, ,, i.e.--, ,, t, ∈, {, 0, ,, 1, }, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('x1', 'NUM'), (',', 'PUNCT'), ('...', 'PUNCT'), (',', 'PUNCT'), ('xD', 'X'), (']', 'PUNCT'), (' ', 'SPACE'), ('T', 'PROPN'), ('output', 'NOUN'), ('binary', 'ADJ'), (',', 'PUNCT'), ('i.e.--', 'ADJ'), (',', 'PUNCT'), ('t', 'PROPN'), ('∈', 'PROPN'), ('{', 'PUNCT'), ('0', 'NUM'), (',', 'PUNCT'), ('1', 'NUM'), ('}', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('x1', 'meta'), (',', 'punct'), ('...', 'punct'), (',', 'punct'), ('xD', 'punct'), (']', 'punct'), (' ', 'compound'), ('T', 'nsubj'), ('output', 'conj'), ('binary', 'acomp'), (',', 'punct'), ('i.e.--', 'dep'), (',', 'punct'), ('t', 'compound'), ('∈', 'dep'), ('{', 'punct'), ('0', 'appos'), (',', 'punct'), ('1', 'appos'), ('}', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, x1], [x1, ,], [,, ...], [..., ,], [,, xD], [xD, ]], [],  ], [ , T], [T, output], [output, binary], [binary, ,], [,, i.e.--], [i.e.--, ,], [,, t], [t, ∈], [∈, {], [{, 0], [0, ,], [,, 1], [1, }], [}, .]]

>> Trigrams: 
[[[, x1, ,], [x1, ,, ...], [,, ..., ,], [..., ,, xD], [,, xD, ]], [xD, ],  ], [],  , T], [ , T, output], [T, output, binary], [output, binary, ,], [binary, ,, i.e.--], [,, i.e.--, ,], [i.e.--, ,, t], [,, t, ∈], [t, ∈, {], [∈, {, 0], [{, 0, ,], [0, ,, 1], [,, 1, }], [1, }, .]]

>> Noun Phrases are: 
[ T, the output]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 292 =============================

The superscript “T ” represents transposition. 


>> Tokens are: 
[superscript, “, T, ”, represents, transposition, .] 

>> PoS Tags are: 
[('superscript', 'ADJ'), ('“', 'PUNCT'), ('T', 'PROPN'), ('”', 'PUNCT'), ('represents', 'VERB'), ('transposition', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('superscript', 'amod'), ('“', 'punct'), ('T', 'nsubj'), ('”', 'punct'), ('represents', 'ROOT'), ('transposition', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[superscript, “], [“, T], [T, ”], [”, represents], [represents, transposition], [transposition, .]]

>> Trigrams: 
[[superscript, “, T], [“, T, ”], [T, ”, represents], [”, represents, transposition], [represents, transposition, .]]

>> Noun Phrases are: 
[The superscript “T, transposition]

>> Named Entities are: 
[]


============================ Sentence 293 =============================

In Step 1, we select a model, that is, a parameterized family of distributions. 


>> Tokens are: 
[Step, 1, ,, select, model, ,, ,, parameterized, family, distributions, .] 

>> PoS Tags are: 
[('Step', 'PROPN'), ('1', 'NUM'), (',', 'PUNCT'), ('select', 'VERB'), ('model', 'NOUN'), (',', 'PUNCT'), (',', 'PUNCT'), ('parameterized', 'ADJ'), ('family', 'NOUN'), ('distributions', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Step', 'pobj'), ('1', 'nummod'), (',', 'punct'), ('select', 'ROOT'), ('model', 'dobj'), (',', 'punct'), (',', 'punct'), ('parameterized', 'amod'), ('family', 'dobj'), ('distributions', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Step, 1], [1, ,], [,, select], [select, model], [model, ,], [,, ,], [,, parameterized], [parameterized, family], [family, distributions], [distributions, .]]

>> Trigrams: 
[[Step, 1, ,], [1, ,, select], [,, select, model], [select, model, ,], [model, ,, ,], [,, ,, parameterized], [,, parameterized, family], [parameterized, family, distributions], [family, distributions, .]]

>> Noun Phrases are: 
[Step, we, a model, that is, a parameterized family, distributions]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 294 =============================

A common choice is given by logistic regression1, which is a discriminative model whereby the predictive distribution p(t|x, θ) is parameterized as illustrated in Fig. 


>> Tokens are: 
[common, choice, given, logistic, regression1, ,, discriminative, model, predictive, distribution, p(t|x, ,, θ, ), parameterized, illustrated, Fig, .] 

>> PoS Tags are: 
[('common', 'ADJ'), ('choice', 'NOUN'), ('given', 'VERB'), ('logistic', 'ADJ'), ('regression1', 'NOUN'), (',', 'PUNCT'), ('discriminative', 'ADJ'), ('model', 'NOUN'), ('predictive', 'ADJ'), ('distribution', 'NOUN'), ('p(t|x', 'NOUN'), (',', 'PUNCT'), ('θ', 'NOUN'), (')', 'PUNCT'), ('parameterized', 'VERB'), ('illustrated', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('common', 'amod'), ('choice', 'nsubjpass'), ('given', 'ROOT'), ('logistic', 'amod'), ('regression1', 'pobj'), (',', 'punct'), ('discriminative', 'amod'), ('model', 'attr'), ('predictive', 'amod'), ('distribution', 'nsubjpass'), ('p(t|x', 'appos'), (',', 'punct'), ('θ', 'appos'), (')', 'punct'), ('parameterized', 'relcl'), ('illustrated', 'advcl'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[common, choice], [choice, given], [given, logistic], [logistic, regression1], [regression1, ,], [,, discriminative], [discriminative, model], [model, predictive], [predictive, distribution], [distribution, p(t|x], [p(t|x, ,], [,, θ], [θ, )], [), parameterized], [parameterized, illustrated], [illustrated, Fig], [Fig, .]]

>> Trigrams: 
[[common, choice, given], [choice, given, logistic], [given, logistic, regression1], [logistic, regression1, ,], [regression1, ,, discriminative], [,, discriminative, model], [discriminative, model, predictive], [model, predictive, distribution], [predictive, distribution, p(t|x], [distribution, p(t|x, ,], [p(t|x, ,, θ], [,, θ, )], [θ, ), parameterized], [), parameterized, illustrated], [parameterized, illustrated, Fig], [illustrated, Fig, .]]

>> Noun Phrases are: 
[A common choice, logistic regression1, a discriminative model, the predictive distribution, p(t|x, θ, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 295 =============================

7. 


>> Tokens are: 
[7, .] 

>> PoS Tags are: 
[('7', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('7', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[7, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('7', 'CARDINAL')]


============================ Sentence 296 =============================

The model first computes D′ fixed features φ(x) = 


>> Tokens are: 
[model, computes, D′, fixed, features, φ(x, ), =] 

>> PoS Tags are: 
[('model', 'NOUN'), ('computes', 'NOUN'), ('D′', 'AUX'), ('fixed', 'VERB'), ('features', 'VERB'), ('φ(x', 'PROPN'), (')', 'PUNCT'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('model', 'nsubj'), ('computes', 'nsubjpass'), ('D′', 'auxpass'), ('fixed', 'amod'), ('features', 'ROOT'), ('φ(x', 'dobj'), (')', 'punct'), ('=', 'punct')]

>> Bigrams: 
[[model, computes], [computes, D′], [D′, fixed], [fixed, features], [features, φ(x], [φ(x, )], [), =]]

>> Trigrams: 
[[model, computes, D′], [computes, D′, fixed], [D′, fixed, features], [fixed, features, φ(x], [features, φ(x, )], [φ(x, ), =]]

>> Noun Phrases are: 
[The model, φ(x]

>> Named Entities are: 
[('first', 'ORDINAL'), ('D′', 'CARDINAL')]


============================ Sentence 297 =============================

[φ1(x) · · ·φD′(x)]T of the input, where a feature is a function of the data. 


>> Tokens are: 
[[, φ1(x, ), ·, ·, ·, φD′(x)]T, input, ,, feature, function, data, .] 

>> PoS Tags are: 
[('[', 'X'), ('φ1(x', 'X'), (')', 'PUNCT'), ('·', 'PUNCT'), ('·', 'PUNCT'), ('·', 'PUNCT'), ('φD′(x)]T', 'NOUN'), ('input', 'NOUN'), (',', 'PUNCT'), ('feature', 'NOUN'), ('function', 'NOUN'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('φ1(x', 'dep'), (')', 'punct'), ('·', 'punct'), ('·', 'punct'), ('·', 'punct'), ('φD′(x)]T', 'ROOT'), ('input', 'pobj'), (',', 'punct'), ('feature', 'nsubj'), ('function', 'attr'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[[, φ1(x], [φ1(x, )], [), ·], [·, ·], [·, ·], [·, φD′(x)]T], [φD′(x)]T, input], [input, ,], [,, feature], [feature, function], [function, data], [data, .]]

>> Trigrams: 
[[[, φ1(x, )], [φ1(x, ), ·], [), ·, ·], [·, ·, ·], [·, ·, φD′(x)]T], [·, φD′(x)]T, input], [φD′(x)]T, input, ,], [input, ,, feature], [,, feature, function], [feature, function, data], [function, data, .]]

>> Noun Phrases are: 
[[φ1(x) · · ·φD′(x)]T, the input, a feature, a function, the data]

>> Named Entities are: 
[]


============================ Sentence 298 =============================

Then, it computes the predictive probability as  p(t = 1|x,w) = σ(wTφ(x)), (7)  where w is the set of learnable weights – i.e.--, the pa- rameter θ defined above – and σ(a) = 


>> Tokens are: 
[,, computes, predictive, probability,  , p(t, =, 1|x, ,, w, ), =, σ(wTφ(x, ), ), ,, (, 7, ),  , w, set, learnable, weights, –, i.e.--, ,, pa-, rameter, θ, defined, –, σ(a, ), =] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('computes', 'VERB'), ('predictive', 'ADJ'), ('probability', 'NOUN'), (' ', 'SPACE'), ('p(t', 'PROPN'), ('=', 'SYM'), ('1|x', 'NUM'), (',', 'PUNCT'), ('w', 'ADP'), (')', 'PUNCT'), ('=', 'SYM'), ('σ(wTφ(x', 'AUX'), (')', 'PUNCT'), (')', 'PUNCT'), (',', 'PUNCT'), ('(', 'PUNCT'), ('7', 'X'), (')', 'PUNCT'), (' ', 'SPACE'), ('w', 'ADV'), ('set', 'NOUN'), ('learnable', 'ADJ'), ('weights', 'NOUN'), ('–', 'PUNCT'), ('i.e.--', 'X'), (',', 'PUNCT'), ('pa-', 'NOUN'), ('rameter', 'NOUN'), ('θ', 'NOUN'), ('defined', 'VERB'), ('–', 'PUNCT'), ('σ(a', 'PROPN'), (')', 'PUNCT'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('computes', 'ROOT'), ('predictive', 'amod'), ('probability', 'dobj'), (' ', 'pobj'), ('p(t', 'compound'), ('=', 'compound'), ('1|x', 'appos'), (',', 'punct'), ('w', 'prep'), (')', 'punct'), ('=', 'punct'), ('σ(wTφ(x', 'dep'), (')', 'punct'), (')', 'punct'), (',', 'punct'), ('(', 'punct'), ('7', 'parataxis'), (')', 'punct'), (' ', 'dobj'), ('w', 'advmod'), ('set', 'attr'), ('learnable', 'amod'), ('weights', 'pobj'), ('–', 'punct'), ('i.e.--', 'punct'), (',', 'punct'), ('pa-', 'compound'), ('rameter', 'conj'), ('θ', 'punct'), ('defined', 'acl'), ('–', 'punct'), ('σ(a', 'conj'), (')', 'punct'), ('=', 'punct')]

>> Bigrams: 
[[,, computes], [computes, predictive], [predictive, probability], [probability,  ], [ , p(t], [p(t, =], [=, 1|x], [1|x, ,], [,, w], [w, )], [), =], [=, σ(wTφ(x], [σ(wTφ(x, )], [), )], [), ,], [,, (], [(, 7], [7, )], [),  ], [ , w], [w, set], [set, learnable], [learnable, weights], [weights, –], [–, i.e.--], [i.e.--, ,], [,, pa-], [pa-, rameter], [rameter, θ], [θ, defined], [defined, –], [–, σ(a], [σ(a, )], [), =]]

>> Trigrams: 
[[,, computes, predictive], [computes, predictive, probability], [predictive, probability,  ], [probability,  , p(t], [ , p(t, =], [p(t, =, 1|x], [=, 1|x, ,], [1|x, ,, w], [,, w, )], [w, ), =], [), =, σ(wTφ(x], [=, σ(wTφ(x, )], [σ(wTφ(x, ), )], [), ), ,], [), ,, (], [,, (, 7], [(, 7, )], [7, ),  ], [),  , w], [ , w, set], [w, set, learnable], [set, learnable, weights], [learnable, weights, –], [weights, –, i.e.--], [–, i.e.--, ,], [i.e.--, ,, pa-], [,, pa-, rameter], [pa-, rameter, θ], [rameter, θ, defined], [θ, defined, –], [defined, –, σ(a], [–, σ(a, )], [σ(a, ), =]]

>> Noun Phrases are: 
[it, the predictive probability, the set, learnable weights, σ(a]

>> Named Entities are: 
[('1|x', 'CARDINAL')]


============================ Sentence 299 =============================

(1+exp(−a))−1 is the sigmoid function. 


>> Tokens are: 
[(, 1+exp(−a))−1, sigmoid, function, .] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('1+exp(−a))−1', 'PROPN'), ('sigmoid', 'NOUN'), ('function', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('1+exp(−a))−1', 'nsubj'), ('sigmoid', 'compound'), ('function', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[(, 1+exp(−a))−1], [1+exp(−a))−1, sigmoid], [sigmoid, function], [function, .]]

>> Trigrams: 
[[(, 1+exp(−a))−1, sigmoid], [1+exp(−a))−1, sigmoid, function], [sigmoid, function, .]]

>> Noun Phrases are: 
[1+exp(−a))−1, the sigmoid function]

>> Named Entities are: 
[('1+exp(−a))−1', 'CARDINAL')]


============================ Sentence 300 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 301 =============================

Under logistic regression, the probability that the label is t = 1 increases as the linear combination of features becomes more positive, and we have p(t = 1|x,w) > 0.5 for wTφ(x) > 0. 


>> Tokens are: 
[logistic, regression, ,, probability, label, t, =, 1, increases, linear, combination, features, positive, ,, p(t, =, 1|x, ,, w, ), >, 0.5, wTφ(x, ), >, 0, .] 

>> PoS Tags are: 
[('logistic', 'ADJ'), ('regression', 'NOUN'), (',', 'PUNCT'), ('probability', 'NOUN'), ('label', 'NOUN'), ('t', 'NOUN'), ('=', 'SYM'), ('1', 'NUM'), ('increases', 'NOUN'), ('linear', 'ADJ'), ('combination', 'NOUN'), ('features', 'NOUN'), ('positive', 'ADJ'), (',', 'PUNCT'), ('p(t', 'PROPN'), ('=', 'SYM'), ('1|x', 'NUM'), (',', 'PUNCT'), ('w', 'ADP'), (')', 'PUNCT'), ('>', 'PUNCT'), ('0.5', 'NUM'), ('wTφ(x', 'NUM'), (')', 'PUNCT'), ('>', 'PUNCT'), ('0', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('logistic', 'amod'), ('regression', 'pobj'), (',', 'punct'), ('probability', 'pobj'), ('label', 'nsubj'), ('t', 'quantmod'), ('=', 'punct'), ('1', 'nummod'), ('increases', 'attr'), ('linear', 'amod'), ('combination', 'pobj'), ('features', 'pobj'), ('positive', 'acomp'), (',', 'punct'), ('p(t', 'compound'), ('=', 'compound'), ('1|x', 'dobj'), (',', 'punct'), ('w', 'prep'), (')', 'punct'), ('>', 'nmod'), ('0.5', 'pobj'), ('wTφ(x', 'pobj'), (')', 'punct'), ('>', 'pobj'), ('0', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[logistic, regression], [regression, ,], [,, probability], [probability, label], [label, t], [t, =], [=, 1], [1, increases], [increases, linear], [linear, combination], [combination, features], [features, positive], [positive, ,], [,, p(t], [p(t, =], [=, 1|x], [1|x, ,], [,, w], [w, )], [), >], [>, 0.5], [0.5, wTφ(x], [wTφ(x, )], [), >], [>, 0], [0, .]]

>> Trigrams: 
[[logistic, regression, ,], [regression, ,, probability], [,, probability, label], [probability, label, t], [label, t, =], [t, =, 1], [=, 1, increases], [1, increases, linear], [increases, linear, combination], [linear, combination, features], [combination, features, positive], [features, positive, ,], [positive, ,, p(t], [,, p(t, =], [p(t, =, 1|x], [=, 1|x, ,], [1|x, ,, w], [,, w, )], [w, ), >], [), >, 0.5], [>, 0.5, wTφ(x], [0.5, wTφ(x, )], [wTφ(x, ), >], [), >, 0], [>, 0, .]]

>> Noun Phrases are: 
[logistic regression, the probability, the label, t = 1 increases, the linear combination, features, we]

>> Named Entities are: 
[('1', 'CARDINAL'), ('1|x', 'CARDINAL'), ('0.5', 'CARDINAL')]


============================ Sentence 302 =============================

Conversely, the probability that the label is t = 0 increases as the linear combination of features becomes more negative, with p(t = 0|x,w) > 0.5 for wTφ(x) < 0. 


>> Tokens are: 
[Conversely, ,, probability, label, t, =, 0, increases, linear, combination, features, negative, ,, p(t, =, 0|x, ,, w, ), >, 0.5, wTφ(x, ), <, 0, .] 

>> PoS Tags are: 
[('Conversely', 'ADV'), (',', 'PUNCT'), ('probability', 'NOUN'), ('label', 'NOUN'), ('t', 'NOUN'), ('=', 'SYM'), ('0', 'NUM'), ('increases', 'NOUN'), ('linear', 'ADJ'), ('combination', 'NOUN'), ('features', 'NOUN'), ('negative', 'ADJ'), (',', 'PUNCT'), ('p(t', 'PROPN'), ('=', 'SYM'), ('0|x', 'PROPN'), (',', 'PUNCT'), ('w', 'ADP'), (')', 'PUNCT'), ('>', 'PUNCT'), ('0.5', 'NUM'), ('wTφ(x', 'NUM'), (')', 'PUNCT'), ('<', 'X'), ('0', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Conversely', 'advmod'), (',', 'punct'), ('probability', 'nsubj'), ('label', 'nsubj'), ('t', 'attr'), ('=', 'punct'), ('0', 'nummod'), ('increases', 'attr'), ('linear', 'amod'), ('combination', 'pobj'), ('features', 'pobj'), ('negative', 'acomp'), (',', 'punct'), ('p(t', 'compound'), ('=', 'punct'), ('0|x', 'pobj'), (',', 'punct'), ('w', 'prep'), (')', 'punct'), ('>', 'punct'), ('0.5', 'appos'), ('wTφ(x', 'pobj'), (')', 'punct'), ('<', 'punct'), ('0', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[Conversely, ,], [,, probability], [probability, label], [label, t], [t, =], [=, 0], [0, increases], [increases, linear], [linear, combination], [combination, features], [features, negative], [negative, ,], [,, p(t], [p(t, =], [=, 0|x], [0|x, ,], [,, w], [w, )], [), >], [>, 0.5], [0.5, wTφ(x], [wTφ(x, )], [), <], [<, 0], [0, .]]

>> Trigrams: 
[[Conversely, ,, probability], [,, probability, label], [probability, label, t], [label, t, =], [t, =, 0], [=, 0, increases], [0, increases, linear], [increases, linear, combination], [linear, combination, features], [combination, features, negative], [features, negative, ,], [negative, ,, p(t], [,, p(t, =], [p(t, =, 0|x], [=, 0|x, ,], [0|x, ,, w], [,, w, )], [w, ), >], [), >, 0.5], [>, 0.5, wTφ(x], [0.5, wTφ(x, )], [wTφ(x, ), <], [), <, 0], [<, 0, .]]

>> Noun Phrases are: 
[the probability, the label, t, increases, the linear combination, features, p(t = 0|x]

>> Named Entities are: 
[('0', 'CARDINAL'), ('0|x', 'DATE'), ('0.5', 'CARDINAL')]


============================ Sentence 303 =============================

As a specific instance of this problem, if we wish to classify emails between spam and non-spam ones, possible useful features may count the number of times that certain suspicious words appear in the text. 


>> Tokens are: 
[specific, instance, problem, ,, wish, classify, emails, spam, non, -, spam, ones, ,, possible, useful, features, count, number, times, certain, suspicious, words, appear, text, .] 

>> PoS Tags are: 
[('specific', 'ADJ'), ('instance', 'NOUN'), ('problem', 'NOUN'), (',', 'PUNCT'), ('wish', 'VERB'), ('classify', 'VERB'), ('emails', 'NOUN'), ('spam', 'NOUN'), ('non', 'ADJ'), ('-', 'ADJ'), ('spam', 'ADJ'), ('ones', 'NOUN'), (',', 'PUNCT'), ('possible', 'ADJ'), ('useful', 'ADJ'), ('features', 'NOUN'), ('count', 'VERB'), ('number', 'NOUN'), ('times', 'NOUN'), ('certain', 'ADJ'), ('suspicious', 'ADJ'), ('words', 'NOUN'), ('appear', 'VERB'), ('text', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('specific', 'amod'), ('instance', 'pobj'), ('problem', 'pobj'), (',', 'punct'), ('wish', 'advcl'), ('classify', 'xcomp'), ('emails', 'dobj'), ('spam', 'nmod'), ('non', 'conj'), ('-', 'conj'), ('spam', 'amod'), ('ones', 'pobj'), (',', 'punct'), ('possible', 'amod'), ('useful', 'amod'), ('features', 'nsubj'), ('count', 'ROOT'), ('number', 'dobj'), ('times', 'pobj'), ('certain', 'amod'), ('suspicious', 'amod'), ('words', 'nsubj'), ('appear', 'relcl'), ('text', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[specific, instance], [instance, problem], [problem, ,], [,, wish], [wish, classify], [classify, emails], [emails, spam], [spam, non], [non, -], [-, spam], [spam, ones], [ones, ,], [,, possible], [possible, useful], [useful, features], [features, count], [count, number], [number, times], [times, certain], [certain, suspicious], [suspicious, words], [words, appear], [appear, text], [text, .]]

>> Trigrams: 
[[specific, instance, problem], [instance, problem, ,], [problem, ,, wish], [,, wish, classify], [wish, classify, emails], [classify, emails, spam], [emails, spam, non], [spam, non, -], [non, -, spam], [-, spam, ones], [spam, ones, ,], [ones, ,, possible], [,, possible, useful], [possible, useful, features], [useful, features, count], [features, count, number], [count, number, times], [number, times, certain], [times, certain, suspicious], [certain, suspicious, words], [suspicious, words, appear], [words, appear, text], [appear, text, .]]

>> Noun Phrases are: 
[a specific instance, this problem, we, emails, spam and non-spam ones, possible useful features, the number, times, certain suspicious words, the text]

>> Named Entities are: 
[]


============================ Sentence 304 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 305 =============================

Step 2 amounts to the identification of the weight vector w on the basis of the training set D with the ideal goal of minimizing the generalization loss (2). 


>> Tokens are: 
[Step, 2, amounts, identification, weight, vector, w, basis, training, set, D, ideal, goal, minimizing, generalization, loss, (, 2, ), .] 

>> PoS Tags are: 
[('Step', 'NOUN'), ('2', 'NUM'), ('amounts', 'VERB'), ('identification', 'NOUN'), ('weight', 'NOUN'), ('vector', 'NOUN'), ('w', 'ADP'), ('basis', 'NOUN'), ('training', 'NOUN'), ('set', 'NOUN'), ('D', 'NOUN'), ('ideal', 'ADJ'), ('goal', 'NOUN'), ('minimizing', 'VERB'), ('generalization', 'NOUN'), ('loss', 'NOUN'), ('(', 'PUNCT'), ('2', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Step', 'nsubj'), ('2', 'nummod'), ('amounts', 'ROOT'), ('identification', 'pobj'), ('weight', 'compound'), ('vector', 'pobj'), ('w', 'advmod'), ('basis', 'pobj'), ('training', 'compound'), ('set', 'amod'), ('D', 'pobj'), ('ideal', 'amod'), ('goal', 'pobj'), ('minimizing', 'pcomp'), ('generalization', 'compound'), ('loss', 'dobj'), ('(', 'punct'), ('2', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Step, 2], [2, amounts], [amounts, identification], [identification, weight], [weight, vector], [vector, w], [w, basis], [basis, training], [training, set], [set, D], [D, ideal], [ideal, goal], [goal, minimizing], [minimizing, generalization], [generalization, loss], [loss, (], [(, 2], [2, )], [), .]]

>> Trigrams: 
[[Step, 2, amounts], [2, amounts, identification], [amounts, identification, weight], [identification, weight, vector], [weight, vector, w], [vector, w, basis], [w, basis, training], [basis, training, set], [training, set, D], [set, D, ideal], [D, ideal, goal], [ideal, goal, minimizing], [goal, minimizing, generalization], [minimizing, generalization, loss], [generalization, loss, (], [loss, (, 2], [(, 2, )], [2, ), .]]

>> Noun Phrases are: 
[Step, the identification, the weight vector, the basis, the training set D, the ideal goal, the generalization loss]

>> Named Entities are: 
[('2', 'CARDINAL'), ('2', 'CARDINAL')]


============================ Sentence 306 =============================

This step will be further discussed in the next subsection. 


>> Tokens are: 
[step, discussed, subsection, .] 

>> PoS Tags are: 
[('step', 'NOUN'), ('discussed', 'VERB'), ('subsection', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('step', 'nsubjpass'), ('discussed', 'ROOT'), ('subsection', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[step, discussed], [discussed, subsection], [subsection, .]]

>> Trigrams: 
[[step, discussed, subsection], [discussed, subsection, .]]

>> Noun Phrases are: 
[This step, the next subsection]

>> Named Entities are: 
[]


============================ Sentence 307 =============================

Finally, in Step 3, the optimal predictor is obtained by assuming that the learned model p(t|x,w) is the true predictive distribution. 


>> Tokens are: 
[Finally, ,, Step, 3, ,, optimal, predictor, obtained, assuming, learned, model, p(t|x, ,, w, ), true, predictive, distribution, .] 

>> PoS Tags are: 
[('Finally', 'ADV'), (',', 'PUNCT'), ('Step', 'PROPN'), ('3', 'NUM'), (',', 'PUNCT'), ('optimal', 'ADJ'), ('predictor', 'NOUN'), ('obtained', 'VERB'), ('assuming', 'VERB'), ('learned', 'VERB'), ('model', 'NOUN'), ('p(t|x', 'NOUN'), (',', 'PUNCT'), ('w', 'ADP'), (')', 'PUNCT'), ('true', 'ADJ'), ('predictive', 'ADJ'), ('distribution', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Finally', 'advmod'), (',', 'punct'), ('Step', 'pobj'), ('3', 'nummod'), (',', 'punct'), ('optimal', 'amod'), ('predictor', 'nsubjpass'), ('obtained', 'ROOT'), ('assuming', 'pcomp'), ('learned', 'amod'), ('model', 'nsubj'), ('p(t|x', 'appos'), (',', 'punct'), ('w', 'appos'), (')', 'punct'), ('true', 'amod'), ('predictive', 'amod'), ('distribution', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[Finally, ,], [,, Step], [Step, 3], [3, ,], [,, optimal], [optimal, predictor], [predictor, obtained], [obtained, assuming], [assuming, learned], [learned, model], [model, p(t|x], [p(t|x, ,], [,, w], [w, )], [), true], [true, predictive], [predictive, distribution], [distribution, .]]

>> Trigrams: 
[[Finally, ,, Step], [,, Step, 3], [Step, 3, ,], [3, ,, optimal], [,, optimal, predictor], [optimal, predictor, obtained], [predictor, obtained, assuming], [obtained, assuming, learned], [assuming, learned, model], [learned, model, p(t|x], [model, p(t|x, ,], [p(t|x, ,, w], [,, w, )], [w, ), true], [), true, predictive], [true, predictive, distribution], [predictive, distribution, .]]

>> Noun Phrases are: 
[Step, the optimal predictor, the learned model, p(t|x, the true predictive distribution]

>> Named Entities are: 
[('3', 'CARDINAL')]


============================ Sentence 308 =============================

Assuming an error rate loss function, following the discussion in Sec. 


>> Tokens are: 
[Assuming, error, rate, loss, function, ,, following, discussion, Sec, .] 

>> PoS Tags are: 
[('Assuming', 'VERB'), ('error', 'NOUN'), ('rate', 'NOUN'), ('loss', 'NOUN'), ('function', 'NOUN'), (',', 'PUNCT'), ('following', 'VERB'), ('discussion', 'NOUN'), ('Sec', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Assuming', 'ROOT'), ('error', 'compound'), ('rate', 'compound'), ('loss', 'compound'), ('function', 'dobj'), (',', 'punct'), ('following', 'prep'), ('discussion', 'pobj'), ('Sec', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Assuming, error], [error, rate], [rate, loss], [loss, function], [function, ,], [,, following], [following, discussion], [discussion, Sec], [Sec, .]]

>> Trigrams: 
[[Assuming, error, rate], [error, rate, loss], [rate, loss, function], [loss, function, ,], [function, ,, following], [,, following, discussion], [following, discussion, Sec], [discussion, Sec, .]]

>> Noun Phrases are: 
[an error rate loss function, the discussion, Sec]

>> Named Entities are: 
[('Sec', 'PERSON')]


============================ Sentence 309 =============================

III-C, the optimal predictor is given by the MAP choice t̂∗(x) = 1 if wTφ(x) > 0 and t̂∗(x) = 0 otherwise. 


>> Tokens are: 
[III, -, C, ,, optimal, predictor, given, MAP, choice, t̂∗(x, ), =, 1, wTφ(x, ), >, 0, t̂∗(x, ), =, 0, .] 

>> PoS Tags are: 
[('III', 'NUM'), ('-', 'PUNCT'), ('C', 'PROPN'), (',', 'PUNCT'), ('optimal', 'ADJ'), ('predictor', 'NOUN'), ('given', 'VERB'), ('MAP', 'PROPN'), ('choice', 'NOUN'), ('t̂∗(x', 'NOUN'), (')', 'PUNCT'), ('=', 'SYM'), ('1', 'NUM'), ('wTφ(x', 'NUM'), (')', 'PUNCT'), ('>', 'PUNCT'), ('0', 'NUM'), ('t̂∗(x', 'ADJ'), (')', 'PUNCT'), ('=', 'SYM'), ('0', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('III', 'nummod'), ('-', 'punct'), ('C', 'nsubjpass'), (',', 'punct'), ('optimal', 'amod'), ('predictor', 'nsubjpass'), ('given', 'ROOT'), ('MAP', 'compound'), ('choice', 'compound'), ('t̂∗(x', 'pobj'), (')', 'punct'), ('=', 'punct'), ('1', 'prep'), ('wTφ(x', 'npadvmod'), (')', 'punct'), ('>', 'punct'), ('0', 'appos'), ('t̂∗(x', 'conj'), (')', 'punct'), ('=', 'punct'), ('0', 'prep'), ('.', 'punct')]

>> Bigrams: 
[[III, -], [-, C], [C, ,], [,, optimal], [optimal, predictor], [predictor, given], [given, MAP], [MAP, choice], [choice, t̂∗(x], [t̂∗(x, )], [), =], [=, 1], [1, wTφ(x], [wTφ(x, )], [), >], [>, 0], [0, t̂∗(x], [t̂∗(x, )], [), =], [=, 0], [0, .]]

>> Trigrams: 
[[III, -, C], [-, C, ,], [C, ,, optimal], [,, optimal, predictor], [optimal, predictor, given], [predictor, given, MAP], [given, MAP, choice], [MAP, choice, t̂∗(x], [choice, t̂∗(x, )], [t̂∗(x, ), =], [), =, 1], [=, 1, wTφ(x], [1, wTφ(x, )], [wTφ(x, ), >], [), >, 0], [>, 0, t̂∗(x], [0, t̂∗(x, )], [t̂∗(x, ), =], [), =, 0], [=, 0, .]]

>> Noun Phrases are: 
[III-C, the optimal predictor, the MAP choice t̂∗(x]

>> Named Entities are: 
[('MAP', 'ORG'), ('1', 'CARDINAL'), ('0', 'CARDINAL')]


============================ Sentence 310 =============================

It is noted that the linear combination wTφ(x) is also known as logit or log-likelihood ratio (LLR). 


>> Tokens are: 
[noted, linear, combination, wTφ(x, ), known, logit, log, -, likelihood, ratio, (, LLR, ), .] 

>> PoS Tags are: 
[('noted', 'VERB'), ('linear', 'ADJ'), ('combination', 'NOUN'), ('wTφ(x', 'NOUN'), (')', 'PUNCT'), ('known', 'VERB'), ('logit', 'NOUN'), ('log', 'NOUN'), ('-', 'PUNCT'), ('likelihood', 'NOUN'), ('ratio', 'NOUN'), ('(', 'PUNCT'), ('LLR', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('noted', 'ROOT'), ('linear', 'amod'), ('combination', 'nsubjpass'), ('wTφ(x', 'appos'), (')', 'punct'), ('known', 'ccomp'), ('logit', 'pobj'), ('log', 'compound'), ('-', 'punct'), ('likelihood', 'compound'), ('ratio', 'conj'), ('(', 'punct'), ('LLR', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[noted, linear], [linear, combination], [combination, wTφ(x], [wTφ(x, )], [), known], [known, logit], [logit, log], [log, -], [-, likelihood], [likelihood, ratio], [ratio, (], [(, LLR], [LLR, )], [), .]]

>> Trigrams: 
[[noted, linear, combination], [linear, combination, wTφ(x], [combination, wTφ(x, )], [wTφ(x, ), known], [), known, logit], [known, logit, log], [logit, log, -], [log, -, likelihood], [-, likelihood, ratio], [likelihood, ratio, (], [ratio, (, LLR], [(, LLR, )], [LLR, ), .]]

>> Noun Phrases are: 
[It, the linear combination, wTφ(x, logit, log-likelihood ratio, (LLR]

>> Named Entities are: 
[('LLR', 'ORG')]


============================ Sentence 311 =============================

This rule can be seen to correspond to a linear classifier [19]. 


>> Tokens are: 
[rule, seen, correspond, linear, classifier, [, 19, ], .] 

>> PoS Tags are: 
[('rule', 'NOUN'), ('seen', 'VERB'), ('correspond', 'VERB'), ('linear', 'ADJ'), ('classifier', 'NOUN'), ('[', 'PUNCT'), ('19', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('rule', 'nsubjpass'), ('seen', 'ROOT'), ('correspond', 'xcomp'), ('linear', 'amod'), ('classifier', 'pobj'), ('[', 'punct'), ('19', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[rule, seen], [seen, correspond], [correspond, linear], [linear, classifier], [classifier, [], [[, 19], [19, ]], [], .]]

>> Trigrams: 
[[rule, seen, correspond], [seen, correspond, linear], [correspond, linear, classifier], [linear, classifier, [], [classifier, [, 19], [[, 19, ]], [19, ], .]]

>> Noun Phrases are: 
[This rule, a linear classifier]

>> Named Entities are: 
[('19', 'CARDINAL')]


============================ Sentence 312 =============================

The performance  1The term ”regression” may be confusing, since the model applies to classification.   


>> Tokens are: 
[performance,  , 1The, term, ”, regression, ”, confusing, ,, model, applies, classification, .,  ] 

>> PoS Tags are: 
[('performance', 'NOUN'), (' ', 'SPACE'), ('1The', 'NUM'), ('term', 'NOUN'), ('”', 'PUNCT'), ('regression', 'NOUN'), ('”', 'PUNCT'), ('confusing', 'ADJ'), (',', 'PUNCT'), ('model', 'NOUN'), ('applies', 'VERB'), ('classification', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('performance', 'nsubj'), (' ', 'nsubj'), ('1The', 'nummod'), ('term', 'nmod'), ('”', 'punct'), ('regression', 'dobj'), ('”', 'punct'), ('confusing', 'acomp'), (',', 'punct'), ('model', 'nsubj'), ('applies', 'advcl'), ('classification', 'pobj'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[performance,  ], [ , 1The], [1The, term], [term, ”], [”, regression], [regression, ”], [”, confusing], [confusing, ,], [,, model], [model, applies], [applies, classification], [classification, .], [.,  ]]

>> Trigrams: 
[[performance,  , 1The], [ , 1The, term], [1The, term, ”], [term, ”, regression], [”, regression, ”], [regression, ”, confusing], [”, confusing, ,], [confusing, ,, model], [,, model, applies], [model, applies, classification], [applies, classification, .], [classification, .,  ]]

>> Noun Phrases are: 
[The performance, 1The term ”regression, the model, classification]

>> Named Entities are: 
[]


============================ Sentence 313 =============================

Fig. 


>> Tokens are: 
[Fig, .] 

>> PoS Tags are: 
[('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Fig', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Fig, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 314 =============================

7. 


>> Tokens are: 
[7, .] 

>> PoS Tags are: 
[('7', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('7', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[7, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('7', 'CARDINAL')]


============================ Sentence 315 =============================

An illustration of the hypothesis class p(t|x,w) assumed by logistic regression using a neural network representation: functions φi, with i = 1, ..., D′, are fixed and compute features of the input vector x = 


>> Tokens are: 
[illustration, hypothesis, class, p(t|x, ,, w, ), assumed, logistic, regression, neural, network, representation, :, functions, φi, ,, =, 1, ,, ..., ,, D′, ,, fixed, compute, features, input, vector, x, =] 

>> PoS Tags are: 
[('illustration', 'NOUN'), ('hypothesis', 'NOUN'), ('class', 'NOUN'), ('p(t|x', 'NOUN'), (',', 'PUNCT'), ('w', 'ADP'), (')', 'PUNCT'), ('assumed', 'VERB'), ('logistic', 'ADJ'), ('regression', 'NOUN'), ('neural', 'ADJ'), ('network', 'NOUN'), ('representation', 'NOUN'), (':', 'PUNCT'), ('functions', 'NOUN'), ('φi', 'NOUN'), (',', 'PUNCT'), ('=', 'SYM'), ('1', 'NUM'), (',', 'PUNCT'), ('...', 'PUNCT'), (',', 'PUNCT'), ('D′', 'NOUN'), (',', 'PUNCT'), ('fixed', 'VERB'), ('compute', 'ADJ'), ('features', 'NOUN'), ('input', 'NOUN'), ('vector', 'NOUN'), ('x', 'X'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('illustration', 'nsubjpass'), ('hypothesis', 'compound'), ('class', 'compound'), ('p(t|x', 'pobj'), (',', 'punct'), ('w', 'prep'), (')', 'punct'), ('assumed', 'acl'), ('logistic', 'amod'), ('regression', 'pobj'), ('neural', 'amod'), ('network', 'compound'), ('representation', 'dobj'), (':', 'punct'), ('functions', 'compound'), ('φi', 'appos'), (',', 'punct'), ('=', 'punct'), ('1', 'prep'), (',', 'punct'), ('...', 'punct'), (',', 'punct'), ('D′', 'appos'), (',', 'punct'), ('fixed', 'amod'), ('compute', 'conj'), ('features', 'ROOT'), ('input', 'compound'), ('vector', 'pobj'), ('x', 'punct'), ('=', 'appos')]

>> Bigrams: 
[[illustration, hypothesis], [hypothesis, class], [class, p(t|x], [p(t|x, ,], [,, w], [w, )], [), assumed], [assumed, logistic], [logistic, regression], [regression, neural], [neural, network], [network, representation], [representation, :], [:, functions], [functions, φi], [φi, ,], [,, =], [=, 1], [1, ,], [,, ...], [..., ,], [,, D′], [D′, ,], [,, fixed], [fixed, compute], [compute, features], [features, input], [input, vector], [vector, x], [x, =]]

>> Trigrams: 
[[illustration, hypothesis, class], [hypothesis, class, p(t|x], [class, p(t|x, ,], [p(t|x, ,, w], [,, w, )], [w, ), assumed], [), assumed, logistic], [assumed, logistic, regression], [logistic, regression, neural], [regression, neural, network], [neural, network, representation], [network, representation, :], [representation, :, functions], [:, functions, φi], [functions, φi, ,], [φi, ,, =], [,, =, 1], [=, 1, ,], [1, ,, ...], [,, ..., ,], [..., ,, D′], [,, D′, ,], [D′, ,, fixed], [,, fixed, compute], [fixed, compute, features], [compute, features, input], [features, input, vector], [input, vector, x], [vector, x, =]]

>> Noun Phrases are: 
[An illustration, the hypothesis class p(t|x, logistic regression, a neural network representation, functions φi, i, D′, the input vector]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 316 =============================

[x1, ..., xD]. 


>> Tokens are: 
[[, x1, ,, ..., ,, xD, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('x1', 'NUM'), (',', 'PUNCT'), ('...', 'PUNCT'), (',', 'PUNCT'), ('xD', 'X'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('x1', 'ROOT'), (',', 'punct'), ('...', 'punct'), (',', 'punct'), ('xD', 'punct'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, x1], [x1, ,], [,, ...], [..., ,], [,, xD], [xD, ]], [], .]]

>> Trigrams: 
[[[, x1, ,], [x1, ,, ...], [,, ..., ,], [..., ,, xD], [,, xD, ]], [xD, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 317 =============================

The learnable parameter vector θ here corresponds to the weights w used to linearly combine the features in (7). 


>> Tokens are: 
[learnable, parameter, vector, θ, corresponds, weights, w, linearly, combine, features, (, 7, ), .] 

>> PoS Tags are: 
[('learnable', 'ADJ'), ('parameter', 'NOUN'), ('vector', 'NOUN'), ('θ', 'NOUN'), ('corresponds', 'VERB'), ('weights', 'NOUN'), ('w', 'ADP'), ('linearly', 'ADV'), ('combine', 'VERB'), ('features', 'NOUN'), ('(', 'PUNCT'), ('7', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('learnable', 'amod'), ('parameter', 'compound'), ('vector', 'nsubj'), ('θ', 'appos'), ('corresponds', 'ROOT'), ('weights', 'pobj'), ('w', 'nsubj'), ('linearly', 'advmod'), ('combine', 'xcomp'), ('features', 'dobj'), ('(', 'punct'), ('7', 'pobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[learnable, parameter], [parameter, vector], [vector, θ], [θ, corresponds], [corresponds, weights], [weights, w], [w, linearly], [linearly, combine], [combine, features], [features, (], [(, 7], [7, )], [), .]]

>> Trigrams: 
[[learnable, parameter, vector], [parameter, vector, θ], [vector, θ, corresponds], [θ, corresponds, weights], [corresponds, weights, w], [weights, w, linearly], [w, linearly, combine], [linearly, combine, features], [combine, features, (], [features, (, 7], [(, 7, )], [7, ), .]]

>> Noun Phrases are: 
[The learnable parameter vector, θ, the weights, the features]

>> Named Entities are: 
[]


============================ Sentence 318 =============================

 of the predictor should be tested on new, test, input- output pairs, e.g.--.-, new emails in the spam classification example. 


>> Tokens are: 
[ , predictor, tested, new, ,, test, ,, input-, output, pairs, ,, e.g.--.-, ,, new, emails, spam, classification, example, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('predictor', 'NOUN'), ('tested', 'VERB'), ('new', 'ADJ'), (',', 'PUNCT'), ('test', 'NOUN'), (',', 'PUNCT'), ('input-', 'NOUN'), ('output', 'NOUN'), ('pairs', 'NOUN'), (',', 'PUNCT'), ('e.g.--.-', 'ADJ'), (',', 'PUNCT'), ('new', 'ADJ'), ('emails', 'NOUN'), ('spam', 'NOUN'), ('classification', 'NOUN'), ('example', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nsubjpass'), ('predictor', 'pobj'), ('tested', 'ROOT'), ('new', 'amod'), (',', 'punct'), ('test', 'pobj'), (',', 'punct'), ('input-', 'compound'), ('output', 'compound'), ('pairs', 'conj'), (',', 'punct'), ('e.g.--.-', 'conj'), (',', 'punct'), ('new', 'amod'), ('emails', 'conj'), ('spam', 'compound'), ('classification', 'compound'), ('example', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , predictor], [predictor, tested], [tested, new], [new, ,], [,, test], [test, ,], [,, input-], [input-, output], [output, pairs], [pairs, ,], [,, e.g.--.-], [e.g.--.-, ,], [,, new], [new, emails], [emails, spam], [spam, classification], [classification, example], [example, .]]

>> Trigrams: 
[[ , predictor, tested], [predictor, tested, new], [tested, new, ,], [new, ,, test], [,, test, ,], [test, ,, input-], [,, input-, output], [input-, output, pairs], [output, pairs, ,], [pairs, ,, e.g.--.-], [,, e.g.--.-, ,], [e.g.--.-, ,, new], [,, new, emails], [new, emails, spam], [emails, spam, classification], [spam, classification, example], [classification, example, .]]

>> Noun Phrases are: 
[the predictor, new, test, input- output pairs, , new emails, the spam classification example]

>> Named Entities are: 
[]


============================ Sentence 319 =============================

�   


>> Tokens are: 
[�,  ] 

>> PoS Tags are: 
[('�', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('�', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[�,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[�]

>> Named Entities are: 
[]


============================ Sentence 320 =============================

Example 2: Logistic regression requires to specify a suitable vector of features φ(x). 


>> Tokens are: 
[Example, 2, :, Logistic, regression, requires, specify, suitable, vector, features, φ(x, ), .] 

>> PoS Tags are: 
[('Example', 'NOUN'), ('2', 'NUM'), (':', 'PUNCT'), ('Logistic', 'ADJ'), ('regression', 'NOUN'), ('requires', 'VERB'), ('specify', 'VERB'), ('suitable', 'ADJ'), ('vector', 'NOUN'), ('features', 'NOUN'), ('φ(x', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Example', 'dep'), ('2', 'nummod'), (':', 'punct'), ('Logistic', 'amod'), ('regression', 'nsubj'), ('requires', 'ROOT'), ('specify', 'xcomp'), ('suitable', 'amod'), ('vector', 'dobj'), ('features', 'compound'), ('φ(x', 'pobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Example, 2], [2, :], [:, Logistic], [Logistic, regression], [regression, requires], [requires, specify], [specify, suitable], [suitable, vector], [vector, features], [features, φ(x], [φ(x, )], [), .]]

>> Trigrams: 
[[Example, 2, :], [2, :, Logistic], [:, Logistic, regression], [Logistic, regression, requires], [regression, requires, specify], [requires, specify, suitable], [specify, suitable, vector], [suitable, vector, features], [vector, features, φ(x], [features, φ(x, )], [φ(x, ), .]]

>> Noun Phrases are: 
[Logistic regression, a suitable vector, features φ(x]

>> Named Entities are: 
[]


============================ Sentence 321 =============================

As seen in the email spam classification example, this entails the availability of some domain knowledge to be able to ascertain which functions of the input x may be more relevant for the classification task at hand. 


>> Tokens are: 
[seen, email, spam, classification, example, ,, entails, availability, domain, knowledge, able, ascertain, functions, input, x, relevant, classification, task, hand, .] 

>> PoS Tags are: 
[('seen', 'VERB'), ('email', 'NOUN'), ('spam', 'NOUN'), ('classification', 'NOUN'), ('example', 'NOUN'), (',', 'PUNCT'), ('entails', 'VERB'), ('availability', 'NOUN'), ('domain', 'NOUN'), ('knowledge', 'NOUN'), ('able', 'ADJ'), ('ascertain', 'VERB'), ('functions', 'NOUN'), ('input', 'NOUN'), ('x', 'PUNCT'), ('relevant', 'ADJ'), ('classification', 'NOUN'), ('task', 'NOUN'), ('hand', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('seen', 'advcl'), ('email', 'compound'), ('spam', 'compound'), ('classification', 'compound'), ('example', 'pobj'), (',', 'punct'), ('entails', 'ROOT'), ('availability', 'dobj'), ('domain', 'compound'), ('knowledge', 'pobj'), ('able', 'acomp'), ('ascertain', 'xcomp'), ('functions', 'dobj'), ('input', 'pobj'), ('x', 'punct'), ('relevant', 'acomp'), ('classification', 'compound'), ('task', 'pobj'), ('hand', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[seen, email], [email, spam], [spam, classification], [classification, example], [example, ,], [,, entails], [entails, availability], [availability, domain], [domain, knowledge], [knowledge, able], [able, ascertain], [ascertain, functions], [functions, input], [input, x], [x, relevant], [relevant, classification], [classification, task], [task, hand], [hand, .]]

>> Trigrams: 
[[seen, email, spam], [email, spam, classification], [spam, classification, example], [classification, example, ,], [example, ,, entails], [,, entails, availability], [entails, availability, domain], [availability, domain, knowledge], [domain, knowledge, able], [knowledge, able, ascertain], [able, ascertain, functions], [ascertain, functions, input], [functions, input, x], [input, x, relevant], [x, relevant, classification], [relevant, classification, task], [classification, task, hand], [task, hand, .]]

>> Noun Phrases are: 
[the email spam classification example, the availability, some domain knowledge, which functions, the input, the classification task, hand]

>> Named Entities are: 
[]


============================ Sentence 322 =============================

As discussed in Sec. 


>> Tokens are: 
[discussed, Sec, .] 

>> PoS Tags are: 
[('discussed', 'VERB'), ('Sec', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('discussed', 'ROOT'), ('Sec', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[discussed, Sec], [Sec, .]]

>> Trigrams: 
[[discussed, Sec, .]]

>> Noun Phrases are: 
[Sec]

>> Named Entities are: 
[('Sec', 'PERSON')]


============================ Sentence 323 =============================

I, this knowledge may not be available due to, e.g.--.-, cost or time constraints. 


>> Tokens are: 
[,, knowledge, available, ,, e.g.--.-, ,, cost, time, constraints, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('knowledge', 'NOUN'), ('available', 'ADJ'), (',', 'PUNCT'), ('e.g.--.-', 'X'), (',', 'PUNCT'), ('cost', 'NOUN'), ('time', 'NOUN'), ('constraints', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('knowledge', 'nsubj'), ('available', 'acomp'), (',', 'punct'), ('e.g.--.-', 'nmod'), (',', 'punct'), ('cost', 'nmod'), ('time', 'conj'), ('constraints', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[,, knowledge], [knowledge, available], [available, ,], [,, e.g.--.-], [e.g.--.-, ,], [,, cost], [cost, time], [time, constraints], [constraints, .]]

>> Trigrams: 
[[,, knowledge, available], [knowledge, available, ,], [available, ,, e.g.--.-], [,, e.g.--.-, ,], [e.g.--.-, ,, cost], [,, cost, time], [cost, time, constraints], [time, constraints, .]]

>> Noun Phrases are: 
[I, this knowledge, e.g.--.-, cost or time constraints]

>> Named Entities are: 
[]


============================ Sentence 324 =============================

Multi-layer neural networks provide an alternative model choice at Step 1 that obviates the need for hand-crafted features. 


>> Tokens are: 
[Multi, -, layer, neural, networks, provide, alternative, model, choice, Step, 1, obviates, need, hand, -, crafted, features, .] 

>> PoS Tags are: 
[('Multi', 'PROPN'), ('-', 'ADJ'), ('layer', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('provide', 'VERB'), ('alternative', 'ADJ'), ('model', 'NOUN'), ('choice', 'NOUN'), ('Step', 'PROPN'), ('1', 'NUM'), ('obviates', 'VERB'), ('need', 'NOUN'), ('hand', 'NOUN'), ('-', 'PUNCT'), ('crafted', 'VERB'), ('features', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Multi', 'amod'), ('-', 'amod'), ('layer', 'nmod'), ('neural', 'amod'), ('networks', 'nsubj'), ('provide', 'ROOT'), ('alternative', 'amod'), ('model', 'compound'), ('choice', 'dobj'), ('Step', 'pobj'), ('1', 'nummod'), ('obviates', 'relcl'), ('need', 'dobj'), ('hand', 'npadvmod'), ('-', 'punct'), ('crafted', 'amod'), ('features', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Multi, -], [-, layer], [layer, neural], [neural, networks], [networks, provide], [provide, alternative], [alternative, model], [model, choice], [choice, Step], [Step, 1], [1, obviates], [obviates, need], [need, hand], [hand, -], [-, crafted], [crafted, features], [features, .]]

>> Trigrams: 
[[Multi, -, layer], [-, layer, neural], [layer, neural, networks], [neural, networks, provide], [networks, provide, alternative], [provide, alternative, model], [alternative, model, choice], [model, choice, Step], [choice, Step, 1], [Step, 1, obviates], [1, obviates, need], [obviates, need, hand], [need, hand, -], [hand, -, crafted], [-, crafted, features], [crafted, features, .]]

>> Noun Phrases are: 
[Multi-layer neural networks, an alternative model choice, Step, the need, hand-crafted features]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 325 =============================

The model is illustrated in Fig. 


>> Tokens are: 
[model, illustrated, Fig, .] 

>> PoS Tags are: 
[('model', 'NOUN'), ('illustrated', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('model', 'nsubjpass'), ('illustrated', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[model, illustrated], [illustrated, Fig], [Fig, .]]

>> Trigrams: 
[[model, illustrated, Fig], [illustrated, Fig, .]]

>> Noun Phrases are: 
[The model, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 326 =============================

8. 


>> Tokens are: 
[8, .] 

>> PoS Tags are: 
[('8', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('8', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[8, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('8', 'CARDINAL')]


============================ Sentence 327 =============================

Unlike linear regression, in a multi-layer neural network, the feature vector φ(x) used by the last layer to compute the logit, or LLR, that determines the predictive probability (7) is not fixed a priori. 


>> Tokens are: 
[Unlike, linear, regression, ,, multi, -, layer, neural, network, ,, feature, vector, φ(x, ), layer, compute, logit, ,, LLR, ,, determines, predictive, probability, (, 7, ), fixed, priori, .] 

>> PoS Tags are: 
[('Unlike', 'ADP'), ('linear', 'ADJ'), ('regression', 'NOUN'), (',', 'PUNCT'), ('multi', 'ADJ'), ('-', 'ADJ'), ('layer', 'ADJ'), ('neural', 'ADJ'), ('network', 'NOUN'), (',', 'PUNCT'), ('feature', 'NOUN'), ('vector', 'NOUN'), ('φ(x', 'PROPN'), (')', 'PUNCT'), ('layer', 'NOUN'), ('compute', 'VERB'), ('logit', 'NOUN'), (',', 'PUNCT'), ('LLR', 'NOUN'), (',', 'PUNCT'), ('determines', 'VERB'), ('predictive', 'ADJ'), ('probability', 'NOUN'), ('(', 'PUNCT'), ('7', 'NUM'), (')', 'PUNCT'), ('fixed', 'VERB'), ('priori', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Unlike', 'prep'), ('linear', 'amod'), ('regression', 'pobj'), (',', 'punct'), ('multi', 'amod'), ('-', 'amod'), ('layer', 'amod'), ('neural', 'amod'), ('network', 'pobj'), (',', 'punct'), ('feature', 'compound'), ('vector', 'compound'), ('φ(x', 'nsubjpass'), (')', 'punct'), ('layer', 'pobj'), ('compute', 'xcomp'), ('logit', 'dobj'), (',', 'punct'), ('LLR', 'conj'), (',', 'punct'), ('determines', 'relcl'), ('predictive', 'amod'), ('probability', 'dobj'), ('(', 'punct'), ('7', 'appos'), (')', 'punct'), ('fixed', 'ROOT'), ('priori', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[Unlike, linear], [linear, regression], [regression, ,], [,, multi], [multi, -], [-, layer], [layer, neural], [neural, network], [network, ,], [,, feature], [feature, vector], [vector, φ(x], [φ(x, )], [), layer], [layer, compute], [compute, logit], [logit, ,], [,, LLR], [LLR, ,], [,, determines], [determines, predictive], [predictive, probability], [probability, (], [(, 7], [7, )], [), fixed], [fixed, priori], [priori, .]]

>> Trigrams: 
[[Unlike, linear, regression], [linear, regression, ,], [regression, ,, multi], [,, multi, -], [multi, -, layer], [-, layer, neural], [layer, neural, network], [neural, network, ,], [network, ,, feature], [,, feature, vector], [feature, vector, φ(x], [vector, φ(x, )], [φ(x, ), layer], [), layer, compute], [layer, compute, logit], [compute, logit, ,], [logit, ,, LLR], [,, LLR, ,], [LLR, ,, determines], [,, determines, predictive], [determines, predictive, probability], [predictive, probability, (], [probability, (, 7], [(, 7, )], [7, ), fixed], [), fixed, priori], [fixed, priori, .]]

>> Noun Phrases are: 
[linear regression, a multi-layer neural network, the feature vector φ(x, the last layer, the logit, LLR, the predictive probability]

>> Named Entities are: 
[('φ(x', 'NORP'), ('LLR', 'ORG')]


============================ Sentence 328 =============================

Rather, the feature vector is computed by the previous layers. 


>> Tokens are: 
[,, feature, vector, computed, previous, layers, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('feature', 'NOUN'), ('vector', 'NOUN'), ('computed', 'VERB'), ('previous', 'ADJ'), ('layers', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('feature', 'compound'), ('vector', 'nsubjpass'), ('computed', 'ROOT'), ('previous', 'amod'), ('layers', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[,, feature], [feature, vector], [vector, computed], [computed, previous], [previous, layers], [layers, .]]

>> Trigrams: 
[[,, feature, vector], [feature, vector, computed], [vector, computed, previous], [computed, previous, layers], [previous, layers, .]]

>> Noun Phrases are: 
[the feature vector, the previous layers]

>> Named Entities are: 
[]


============================ Sentence 329 =============================

To this end, each neuron, represented as a circle in Fig. 8, computes a fixed non-linear function, e.g.--.-, sigmoid, of a linear combination of the values obtained from the previous layer. 


>> Tokens are: 
[end, ,, neuron, ,, represented, circle, Fig, ., 8, ,, computes, fixed, non, -, linear, function, ,, e.g.--.-, ,, sigmoid, ,, linear, combination, values, obtained, previous, layer, .] 

>> PoS Tags are: 
[('end', 'NOUN'), (',', 'PUNCT'), ('neuron', 'NOUN'), (',', 'PUNCT'), ('represented', 'VERB'), ('circle', 'NOUN'), ('Fig', 'PROPN'), ('.', 'PUNCT'), ('8', 'NUM'), (',', 'PUNCT'), ('computes', 'VERB'), ('fixed', 'VERB'), ('non', 'ADJ'), ('-', 'ADJ'), ('linear', 'ADJ'), ('function', 'NOUN'), (',', 'PUNCT'), ('e.g.--.-', 'X'), (',', 'PUNCT'), ('sigmoid', 'NOUN'), (',', 'PUNCT'), ('linear', 'ADJ'), ('combination', 'NOUN'), ('values', 'NOUN'), ('obtained', 'VERB'), ('previous', 'ADJ'), ('layer', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('end', 'pobj'), (',', 'punct'), ('neuron', 'nsubj'), (',', 'punct'), ('represented', 'acl'), ('circle', 'pobj'), ('Fig', 'pobj'), ('.', 'punct'), ('8', 'appos'), (',', 'punct'), ('computes', 'ROOT'), ('fixed', 'amod'), ('non', 'amod'), ('-', 'amod'), ('linear', 'amod'), ('function', 'dobj'), (',', 'punct'), ('e.g.--.-', 'conj'), (',', 'punct'), ('sigmoid', 'conj'), (',', 'punct'), ('linear', 'amod'), ('combination', 'pobj'), ('values', 'pobj'), ('obtained', 'acl'), ('previous', 'amod'), ('layer', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[end, ,], [,, neuron], [neuron, ,], [,, represented], [represented, circle], [circle, Fig], [Fig, .], [., 8], [8, ,], [,, computes], [computes, fixed], [fixed, non], [non, -], [-, linear], [linear, function], [function, ,], [,, e.g.--.-], [e.g.--.-, ,], [,, sigmoid], [sigmoid, ,], [,, linear], [linear, combination], [combination, values], [values, obtained], [obtained, previous], [previous, layer], [layer, .]]

>> Trigrams: 
[[end, ,, neuron], [,, neuron, ,], [neuron, ,, represented], [,, represented, circle], [represented, circle, Fig], [circle, Fig, .], [Fig, ., 8], [., 8, ,], [8, ,, computes], [,, computes, fixed], [computes, fixed, non], [fixed, non, -], [non, -, linear], [-, linear, function], [linear, function, ,], [function, ,, e.g.--.-], [,, e.g.--.-, ,], [e.g.--.-, ,, sigmoid], [,, sigmoid, ,], [sigmoid, ,, linear], [,, linear, combination], [linear, combination, values], [combination, values, obtained], [values, obtained, previous], [obtained, previous, layer], [previous, layer, .]]

>> Noun Phrases are: 
[this end, each neuron, a circle, Fig, a fixed non-linear function, sigmoid, a linear combination, the values, the previous layer]

>> Named Entities are: 
[('Fig', 'PERSON'), ('8', 'CARDINAL')]


============================ Sentence 330 =============================

The weights of these linear combinations are part of the learnable parameters θ, along with the weights of the last layer. 


>> Tokens are: 
[weights, linear, combinations, learnable, parameters, θ, ,, weights, layer, .] 

>> PoS Tags are: 
[('weights', 'NOUN'), ('linear', 'ADJ'), ('combinations', 'NOUN'), ('learnable', 'ADJ'), ('parameters', 'NOUN'), ('θ', 'NOUN'), (',', 'PUNCT'), ('weights', 'NOUN'), ('layer', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('weights', 'nsubj'), ('linear', 'amod'), ('combinations', 'pobj'), ('learnable', 'amod'), ('parameters', 'pobj'), ('θ', 'dep'), (',', 'punct'), ('weights', 'pobj'), ('layer', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[weights, linear], [linear, combinations], [combinations, learnable], [learnable, parameters], [parameters, θ], [θ, ,], [,, weights], [weights, layer], [layer, .]]

>> Trigrams: 
[[weights, linear, combinations], [linear, combinations, learnable], [combinations, learnable, parameters], [learnable, parameters, θ], [parameters, θ, ,], [θ, ,, weights], [,, weights, layer], [weights, layer, .]]

>> Noun Phrases are: 
[The weights, these linear combinations, part, the learnable parameters, the weights, the last layer]

>> Named Entities are: 
[]


============================ Sentence 331 =============================

By allowing the weights at all layers of the model to be trained simultaneously, multi-layer neural networks enable the joint learning of the last-layer linear classifier and of the features φ(x) the classifier operates on. 


>> Tokens are: 
[allowing, weights, layers, model, trained, simultaneously, ,, multi, -, layer, neural, networks, enable, joint, learning, -, layer, linear, classifier, features, φ(x, ), classifier, operates, .] 

>> PoS Tags are: 
[('allowing', 'VERB'), ('weights', 'NOUN'), ('layers', 'NOUN'), ('model', 'NOUN'), ('trained', 'VERB'), ('simultaneously', 'ADV'), (',', 'PUNCT'), ('multi', 'ADJ'), ('-', 'ADJ'), ('layer', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('enable', 'VERB'), ('joint', 'ADJ'), ('learning', 'NOUN'), ('-', 'PUNCT'), ('layer', 'NOUN'), ('linear', 'ADJ'), ('classifier', 'NOUN'), ('features', 'NOUN'), ('φ(x', 'PROPN'), (')', 'PUNCT'), ('classifier', 'NOUN'), ('operates', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('allowing', 'pcomp'), ('weights', 'dobj'), ('layers', 'pobj'), ('model', 'pobj'), ('trained', 'ccomp'), ('simultaneously', 'advmod'), (',', 'punct'), ('multi', 'amod'), ('-', 'amod'), ('layer', 'amod'), ('neural', 'amod'), ('networks', 'nsubj'), ('enable', 'ROOT'), ('joint', 'amod'), ('learning', 'dobj'), ('-', 'punct'), ('layer', 'compound'), ('linear', 'amod'), ('classifier', 'pobj'), ('features', 'pobj'), ('φ(x', 'pobj'), (')', 'punct'), ('classifier', 'nsubj'), ('operates', 'ccomp'), ('.', 'punct')]

>> Bigrams: 
[[allowing, weights], [weights, layers], [layers, model], [model, trained], [trained, simultaneously], [simultaneously, ,], [,, multi], [multi, -], [-, layer], [layer, neural], [neural, networks], [networks, enable], [enable, joint], [joint, learning], [learning, -], [-, layer], [layer, linear], [linear, classifier], [classifier, features], [features, φ(x], [φ(x, )], [), classifier], [classifier, operates], [operates, .]]

>> Trigrams: 
[[allowing, weights, layers], [weights, layers, model], [layers, model, trained], [model, trained, simultaneously], [trained, simultaneously, ,], [simultaneously, ,, multi], [,, multi, -], [multi, -, layer], [-, layer, neural], [layer, neural, networks], [neural, networks, enable], [networks, enable, joint], [enable, joint, learning], [joint, learning, -], [learning, -, layer], [-, layer, linear], [layer, linear, classifier], [linear, classifier, features], [classifier, features, φ(x], [features, φ(x, )], [φ(x, ), classifier], [), classifier, operates], [classifier, operates, .]]

>> Noun Phrases are: 
[the weights, all layers, the model, , multi-layer neural networks, the joint learning, the last-layer linear classifier, the features, φ(x, the classifier]

>> Named Entities are: 
[]


============================ Sentence 332 =============================

As a notable example, deep neural networks are characterized by a large number of intermediate layers that tend to learn increasingly abstract features of the input [7]. 


>> Tokens are: 
[notable, example, ,, deep, neural, networks, characterized, large, number, intermediate, layers, tend, learn, increasingly, abstract, features, input, [, 7, ], .] 

>> PoS Tags are: 
[('notable', 'ADJ'), ('example', 'NOUN'), (',', 'PUNCT'), ('deep', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('characterized', 'VERB'), ('large', 'ADJ'), ('number', 'NOUN'), ('intermediate', 'ADJ'), ('layers', 'NOUN'), ('tend', 'VERB'), ('learn', 'VERB'), ('increasingly', 'ADV'), ('abstract', 'ADJ'), ('features', 'NOUN'), ('input', 'NOUN'), ('[', 'PUNCT'), ('7', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('notable', 'amod'), ('example', 'pobj'), (',', 'punct'), ('deep', 'amod'), ('neural', 'amod'), ('networks', 'nsubjpass'), ('characterized', 'ROOT'), ('large', 'amod'), ('number', 'pobj'), ('intermediate', 'amod'), ('layers', 'pobj'), ('tend', 'relcl'), ('learn', 'xcomp'), ('increasingly', 'advmod'), ('abstract', 'amod'), ('features', 'dobj'), ('input', 'pobj'), ('[', 'punct'), ('7', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[notable, example], [example, ,], [,, deep], [deep, neural], [neural, networks], [networks, characterized], [characterized, large], [large, number], [number, intermediate], [intermediate, layers], [layers, tend], [tend, learn], [learn, increasingly], [increasingly, abstract], [abstract, features], [features, input], [input, [], [[, 7], [7, ]], [], .]]

>> Trigrams: 
[[notable, example, ,], [example, ,, deep], [,, deep, neural], [deep, neural, networks], [neural, networks, characterized], [networks, characterized, large], [characterized, large, number], [large, number, intermediate], [number, intermediate, layers], [intermediate, layers, tend], [layers, tend, learn], [tend, learn, increasingly], [learn, increasingly, abstract], [increasingly, abstract, features], [abstract, features, input], [features, input, [], [input, [, 7], [[, 7, ]], [7, ], .]]

>> Noun Phrases are: 
[a notable example, deep neural networks, a large number, intermediate layers, increasingly abstract features, the input]

>> Named Entities are: 
[]


============================ Sentence 333 =============================

�   


>> Tokens are: 
[�,  ] 

>> PoS Tags are: 
[('�', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('�', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[�,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 334 =============================

In the rest of this section, we first provide some technical details about Step 2, i.e.--, learning, and then we return to Step 1, i.e.--, model selection. 


>> Tokens are: 
[rest, section, ,, provide, technical, details, Step, 2, ,, i.e.--, ,, learning, ,, return, Step, 1, ,, i.e.--, ,, model, selection, .] 

>> PoS Tags are: 
[('rest', 'NOUN'), ('section', 'NOUN'), (',', 'PUNCT'), ('provide', 'VERB'), ('technical', 'ADJ'), ('details', 'NOUN'), ('Step', 'NOUN'), ('2', 'NUM'), (',', 'PUNCT'), ('i.e.--', 'X'), (',', 'PUNCT'), ('learning', 'VERB'), (',', 'PUNCT'), ('return', 'VERB'), ('Step', 'PROPN'), ('1', 'NUM'), (',', 'PUNCT'), ('i.e.--', 'NUM'), (',', 'PUNCT'), ('model', 'NOUN'), ('selection', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('rest', 'pobj'), ('section', 'pobj'), (',', 'punct'), ('provide', 'ROOT'), ('technical', 'amod'), ('details', 'dobj'), ('Step', 'pobj'), ('2', 'nummod'), (',', 'punct'), ('i.e.--', 'npadvmod'), (',', 'punct'), ('learning', 'advcl'), (',', 'punct'), ('return', 'conj'), ('Step', 'pobj'), ('1', 'nummod'), (',', 'punct'), ('i.e.--', 'npadvmod'), (',', 'punct'), ('model', 'compound'), ('selection', 'dep'), ('.', 'punct')]

>> Bigrams: 
[[rest, section], [section, ,], [,, provide], [provide, technical], [technical, details], [details, Step], [Step, 2], [2, ,], [,, i.e.--], [i.e.--, ,], [,, learning], [learning, ,], [,, return], [return, Step], [Step, 1], [1, ,], [,, i.e.--], [i.e.--, ,], [,, model], [model, selection], [selection, .]]

>> Trigrams: 
[[rest, section, ,], [section, ,, provide], [,, provide, technical], [provide, technical, details], [technical, details, Step], [details, Step, 2], [Step, 2, ,], [2, ,, i.e.--], [,, i.e.--, ,], [i.e.--, ,, learning], [,, learning, ,], [learning, ,, return], [,, return, Step], [return, Step, 1], [Step, 1, ,], [1, ,, i.e.--], [,, i.e.--, ,], [i.e.--, ,, model], [,, model, selection], [model, selection, .]]

>> Noun Phrases are: 
[the rest, this section, we, some technical details, Step, we, Step]

>> Named Entities are: 
[('first', 'ORDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL')]


============================ Sentence 335 =============================

As it will be seen, this order is dictated by the fact that model selection requires some understanding of the learning process. 


>> Tokens are: 
[seen, ,, order, dictated, fact, model, selection, requires, understanding, learning, process, .] 

>> PoS Tags are: 
[('seen', 'VERB'), (',', 'PUNCT'), ('order', 'NOUN'), ('dictated', 'VERB'), ('fact', 'NOUN'), ('model', 'NOUN'), ('selection', 'NOUN'), ('requires', 'VERB'), ('understanding', 'NOUN'), ('learning', 'NOUN'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('seen', 'advcl'), (',', 'punct'), ('order', 'nsubjpass'), ('dictated', 'ROOT'), ('fact', 'pobj'), ('model', 'compound'), ('selection', 'nsubj'), ('requires', 'acl'), ('understanding', 'dobj'), ('learning', 'compound'), ('process', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[seen, ,], [,, order], [order, dictated], [dictated, fact], [fact, model], [model, selection], [selection, requires], [requires, understanding], [understanding, learning], [learning, process], [process, .]]

>> Trigrams: 
[[seen, ,, order], [,, order, dictated], [order, dictated, fact], [dictated, fact, model], [fact, model, selection], [model, selection, requires], [selection, requires, understanding], [requires, understanding, learning], [understanding, learning, process], [learning, process, .]]

>> Noun Phrases are: 
[it, this order, the fact, model selection, some understanding, the learning process]

>> Named Entities are: 
[]


============================ Sentence 336 =============================

 8    Fig. 8. 


>> Tokens are: 
[ , 8,    , Fig, ., 8, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('8', 'NUM'), ('   ', 'SPACE'), ('Fig', 'NOUN'), ('.', 'PUNCT'), ('8', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('8', 'compound'), ('   ', 'nummod'), ('Fig', 'npadvmod'), ('.', 'punct'), ('8', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[ , 8], [8,    ], [   , Fig], [Fig, .], [., 8], [8, .]]

>> Trigrams: 
[[ , 8,    ], [8,    , Fig], [   , Fig, .], [Fig, ., 8], [., 8, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('8', 'CARDINAL')]


============================ Sentence 337 =============================

An illustration of the hypothesis class p(t|x,w) assumed by multi-layer neural networks. 


>> Tokens are: 
[illustration, hypothesis, class, p(t|x, ,, w, ), assumed, multi, -, layer, neural, networks, .] 

>> PoS Tags are: 
[('illustration', 'NOUN'), ('hypothesis', 'NOUN'), ('class', 'NOUN'), ('p(t|x', 'NOUN'), (',', 'PUNCT'), ('w', 'ADP'), (')', 'PUNCT'), ('assumed', 'VERB'), ('multi', 'ADJ'), ('-', 'ADJ'), ('layer', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('illustration', 'ROOT'), ('hypothesis', 'compound'), ('class', 'compound'), ('p(t|x', 'pobj'), (',', 'punct'), ('w', 'prep'), (')', 'punct'), ('assumed', 'acl'), ('multi', 'amod'), ('-', 'amod'), ('layer', 'amod'), ('neural', 'amod'), ('networks', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[illustration, hypothesis], [hypothesis, class], [class, p(t|x], [p(t|x, ,], [,, w], [w, )], [), assumed], [assumed, multi], [multi, -], [-, layer], [layer, neural], [neural, networks], [networks, .]]

>> Trigrams: 
[[illustration, hypothesis, class], [hypothesis, class, p(t|x], [class, p(t|x, ,], [p(t|x, ,, w], [,, w, )], [w, ), assumed], [), assumed, multi], [assumed, multi, -], [multi, -, layer], [-, layer, neural], [layer, neural, networks], [neural, networks, .]]

>> Noun Phrases are: 
[An illustration, the hypothesis class p(t|x, multi-layer neural networks]

>> Named Entities are: 
[]


============================ Sentence 338 =============================

The learnable parameter vector θ here corresponds to the weights wL used at the last layer to linearly combine the features φ(x) and the weight matrices W 1, ...,WL−1  used at the preceding layers in order to compute the feature vector. 


>> Tokens are: 
[learnable, parameter, vector, θ, corresponds, weights, wL, layer, linearly, combine, features, φ(x, ), weight, matrices, W, 1, ,, ..., ,, WL−1,  , preceding, layers, order, compute, feature, vector, .] 

>> PoS Tags are: 
[('learnable', 'ADJ'), ('parameter', 'NOUN'), ('vector', 'NOUN'), ('θ', 'NOUN'), ('corresponds', 'VERB'), ('weights', 'NOUN'), ('wL', 'PUNCT'), ('layer', 'NOUN'), ('linearly', 'ADV'), ('combine', 'VERB'), ('features', 'NOUN'), ('φ(x', 'PROPN'), (')', 'PUNCT'), ('weight', 'NOUN'), ('matrices', 'NOUN'), ('W', 'PROPN'), ('1', 'NUM'), (',', 'PUNCT'), ('...', 'PUNCT'), (',', 'PUNCT'), ('WL−1', 'VERB'), (' ', 'SPACE'), ('preceding', 'VERB'), ('layers', 'NOUN'), ('order', 'NOUN'), ('compute', 'VERB'), ('feature', 'NOUN'), ('vector', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('learnable', 'amod'), ('parameter', 'compound'), ('vector', 'nsubj'), ('θ', 'appos'), ('corresponds', 'ROOT'), ('weights', 'pobj'), ('wL', 'punct'), ('layer', 'pobj'), ('linearly', 'advmod'), ('combine', 'xcomp'), ('features', 'dobj'), ('φ(x', 'dobj'), (')', 'punct'), ('weight', 'compound'), ('matrices', 'conj'), ('W', 'appos'), ('1', 'nummod'), (',', 'punct'), ('...', 'punct'), (',', 'punct'), ('WL−1', 'dep'), (' ', 'dep'), ('preceding', 'amod'), ('layers', 'pobj'), ('order', 'pobj'), ('compute', 'acl'), ('feature', 'compound'), ('vector', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[learnable, parameter], [parameter, vector], [vector, θ], [θ, corresponds], [corresponds, weights], [weights, wL], [wL, layer], [layer, linearly], [linearly, combine], [combine, features], [features, φ(x], [φ(x, )], [), weight], [weight, matrices], [matrices, W], [W, 1], [1, ,], [,, ...], [..., ,], [,, WL−1], [WL−1,  ], [ , preceding], [preceding, layers], [layers, order], [order, compute], [compute, feature], [feature, vector], [vector, .]]

>> Trigrams: 
[[learnable, parameter, vector], [parameter, vector, θ], [vector, θ, corresponds], [θ, corresponds, weights], [corresponds, weights, wL], [weights, wL, layer], [wL, layer, linearly], [layer, linearly, combine], [linearly, combine, features], [combine, features, φ(x], [features, φ(x, )], [φ(x, ), weight], [), weight, matrices], [weight, matrices, W], [matrices, W, 1], [W, 1, ,], [1, ,, ...], [,, ..., ,], [..., ,, WL−1], [,, WL−1,  ], [WL−1,  , preceding], [ , preceding, layers], [preceding, layers, order], [layers, order, compute], [order, compute, feature], [compute, feature, vector], [feature, vector, .]]

>> Noun Phrases are: 
[The learnable parameter vector, θ, the weights, the last layer, the features, φ(x, the weight matrices, W, the preceding layers, order, the feature vector]

>> Named Entities are: 
[]


============================ Sentence 339 =============================

 E. Learning   


>> Tokens are: 
[ , E., Learning,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('E.', 'PROPN'), ('Learning', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('E.', 'compound'), ('Learning', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[ , E.], [E., Learning], [Learning,  ]]

>> Trigrams: 
[[ , E., Learning], [E., Learning,  ]]

>> Noun Phrases are: 
[ E. Learning]

>> Named Entities are: 
[]


============================ Sentence 340 =============================

Ideally, a learning rule should obtain a predictor that minimizes the generalization error (2). 


>> Tokens are: 
[Ideally, ,, learning, rule, obtain, predictor, minimizes, generalization, error, (, 2, ), .] 

>> PoS Tags are: 
[('Ideally', 'ADV'), (',', 'PUNCT'), ('learning', 'VERB'), ('rule', 'NOUN'), ('obtain', 'VERB'), ('predictor', 'NOUN'), ('minimizes', 'VERB'), ('generalization', 'NOUN'), ('error', 'NOUN'), ('(', 'PUNCT'), ('2', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Ideally', 'advmod'), (',', 'punct'), ('learning', 'compound'), ('rule', 'nsubj'), ('obtain', 'ROOT'), ('predictor', 'dobj'), ('minimizes', 'relcl'), ('generalization', 'compound'), ('error', 'dobj'), ('(', 'punct'), ('2', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Ideally, ,], [,, learning], [learning, rule], [rule, obtain], [obtain, predictor], [predictor, minimizes], [minimizes, generalization], [generalization, error], [error, (], [(, 2], [2, )], [), .]]

>> Trigrams: 
[[Ideally, ,, learning], [,, learning, rule], [learning, rule, obtain], [rule, obtain, predictor], [obtain, predictor, minimizes], [predictor, minimizes, generalization], [minimizes, generalization, error], [generalization, error, (], [error, (, 2], [(, 2, )], [2, ), .]]

>> Noun Phrases are: 
[a learning rule, a predictor, the generalization error]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 341 =============================

However, as discussed in Sec. 


>> Tokens are: 
[,, discussed, Sec, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('discussed', 'VERB'), ('Sec', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('discussed', 'ROOT'), ('Sec', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[,, discussed], [discussed, Sec], [Sec, .]]

>> Trigrams: 
[[,, discussed, Sec], [discussed, Sec, .]]

>> Noun Phrases are: 
[Sec]

>> Named Entities are: 
[('Sec', 'PERSON')]


============================ Sentence 342 =============================

III-C, this task is out of reach without knowledge of the true joint distribution p(x, t). 


>> Tokens are: 
[III, -, C, ,, task, reach, knowledge, true, joint, distribution, p(x, ,, t, ), .] 

>> PoS Tags are: 
[('III', 'NUM'), ('-', 'PUNCT'), ('C', 'PROPN'), (',', 'PUNCT'), ('task', 'NOUN'), ('reach', 'NOUN'), ('knowledge', 'NOUN'), ('true', 'ADJ'), ('joint', 'ADJ'), ('distribution', 'NOUN'), ('p(x', 'PROPN'), (',', 'PUNCT'), ('t', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('III', 'nummod'), ('-', 'punct'), ('C', 'npadvmod'), (',', 'punct'), ('task', 'nsubj'), ('reach', 'pobj'), ('knowledge', 'pobj'), ('true', 'amod'), ('joint', 'amod'), ('distribution', 'pobj'), ('p(x', 'appos'), (',', 'punct'), ('t', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[III, -], [-, C], [C, ,], [,, task], [task, reach], [reach, knowledge], [knowledge, true], [true, joint], [joint, distribution], [distribution, p(x], [p(x, ,], [,, t], [t, )], [), .]]

>> Trigrams: 
[[III, -, C], [-, C, ,], [C, ,, task], [,, task, reach], [task, reach, knowledge], [reach, knowledge, true], [knowledge, true, joint], [true, joint, distribution], [joint, distribution, p(x], [distribution, p(x, ,], [p(x, ,, t], [,, t, )], [t, ), .]]

>> Noun Phrases are: 
[this task, reach, knowledge, the true joint distribution, p(x, t]

>> Named Entities are: 
[('p(x', 'ORG')]


============================ Sentence 343 =============================

There- fore, alternative learning criteria need to be considered that rely on the training set D rather than on the true distribution. 


>> Tokens are: 
[There-, fore, ,, alternative, learning, criteria, need, considered, rely, training, set, D, true, distribution, .] 

>> PoS Tags are: 
[('There-', 'ADJ'), ('fore', 'NOUN'), (',', 'PUNCT'), ('alternative', 'ADJ'), ('learning', 'VERB'), ('criteria', 'NOUN'), ('need', 'VERB'), ('considered', 'VERB'), ('rely', 'VERB'), ('training', 'NOUN'), ('set', 'NOUN'), ('D', 'NOUN'), ('true', 'ADJ'), ('distribution', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('There-', 'amod'), ('fore', 'npadvmod'), (',', 'punct'), ('alternative', 'amod'), ('learning', 'amod'), ('criteria', 'nsubj'), ('need', 'ROOT'), ('considered', 'xcomp'), ('rely', 'ccomp'), ('training', 'compound'), ('set', 'amod'), ('D', 'pobj'), ('true', 'amod'), ('distribution', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[There-, fore], [fore, ,], [,, alternative], [alternative, learning], [learning, criteria], [criteria, need], [need, considered], [considered, rely], [rely, training], [training, set], [set, D], [D, true], [true, distribution], [distribution, .]]

>> Trigrams: 
[[There-, fore, ,], [fore, ,, alternative], [,, alternative, learning], [alternative, learning, criteria], [learning, criteria, need], [criteria, need, considered], [need, considered, rely], [considered, rely, training], [rely, training, set], [training, set, D], [set, D, true], [D, true, distribution], [true, distribution, .]]

>> Noun Phrases are: 
[alternative learning criteria, the training set D, the true distribution]

>> Named Entities are: 
[]


============================ Sentence 344 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 345 =============================

In the context of probabilistic models, the most basic learning criterion is Maximum Likelihood (ML). 


>> Tokens are: 
[context, probabilistic, models, ,, basic, learning, criterion, Maximum, Likelihood, (, ML, ), .] 

>> PoS Tags are: 
[('context', 'NOUN'), ('probabilistic', 'ADJ'), ('models', 'NOUN'), (',', 'PUNCT'), ('basic', 'ADJ'), ('learning', 'NOUN'), ('criterion', 'NOUN'), ('Maximum', 'PROPN'), ('Likelihood', 'PROPN'), ('(', 'PUNCT'), ('ML', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('context', 'pobj'), ('probabilistic', 'amod'), ('models', 'pobj'), (',', 'punct'), ('basic', 'amod'), ('learning', 'compound'), ('criterion', 'nsubj'), ('Maximum', 'compound'), ('Likelihood', 'attr'), ('(', 'punct'), ('ML', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[context, probabilistic], [probabilistic, models], [models, ,], [,, basic], [basic, learning], [learning, criterion], [criterion, Maximum], [Maximum, Likelihood], [Likelihood, (], [(, ML], [ML, )], [), .]]

>> Trigrams: 
[[context, probabilistic, models], [probabilistic, models, ,], [models, ,, basic], [,, basic, learning], [basic, learning, criterion], [learning, criterion, Maximum], [criterion, Maximum, Likelihood], [Maximum, Likelihood, (], [Likelihood, (, ML], [(, ML, )], [ML, ), .]]

>> Noun Phrases are: 
[the context, probabilistic models, the most basic learning criterion, Maximum Likelihood, (ML]

>> Named Entities are: 
[('Maximum Likelihood', 'PERSON'), ('ML', 'ORG')]


============================ Sentence 346 =============================

ML selects a value of θ in the parameterized family of models p(x, t|θ) or p(t|x, θ) that is the most likely to have generated the observed training set D. Mathematically, ML solves the problem of maximizing the log-likelihood function  maximize ln p(D|θ) 


>> Tokens are: 
[ML, selects, value, θ, parameterized, family, models, p(x, ,, t|θ, ), p(t|x, ,, θ, ), likely, generated, observed, training, set, D., Mathematically, ,, ML, solves, problem, maximizing, log, -, likelihood, function,  , maximize, ln, p(D|θ, )] 

>> PoS Tags are: 
[('ML', 'PROPN'), ('selects', 'VERB'), ('value', 'NOUN'), ('θ', 'NOUN'), ('parameterized', 'ADJ'), ('family', 'NOUN'), ('models', 'NOUN'), ('p(x', 'PROPN'), (',', 'PUNCT'), ('t|θ', 'PROPN'), (')', 'PUNCT'), ('p(t|x', 'NOUN'), (',', 'PUNCT'), ('θ', 'X'), (')', 'PUNCT'), ('likely', 'ADJ'), ('generated', 'VERB'), ('observed', 'ADJ'), ('training', 'NOUN'), ('set', 'NOUN'), ('D.', 'PROPN'), ('Mathematically', 'PROPN'), (',', 'PUNCT'), ('ML', 'PROPN'), ('solves', 'VERB'), ('problem', 'NOUN'), ('maximizing', 'VERB'), ('log', 'NOUN'), ('-', 'PUNCT'), ('likelihood', 'NOUN'), ('function', 'NOUN'), (' ', 'SPACE'), ('maximize', 'VERB'), ('ln', 'NOUN'), ('p(D|θ', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('ML', 'nsubj'), ('selects', 'ccomp'), ('value', 'dobj'), ('θ', 'pobj'), ('parameterized', 'amod'), ('family', 'pobj'), ('models', 'pobj'), ('p(x', 'conj'), (',', 'punct'), ('t|θ', 'npadvmod'), (')', 'punct'), ('p(t|x', 'conj'), (',', 'punct'), ('θ', 'prep'), (')', 'punct'), ('likely', 'acomp'), ('generated', 'xcomp'), ('observed', 'amod'), ('training', 'dobj'), ('set', 'acl'), ('D.', 'compound'), ('Mathematically', 'appos'), (',', 'punct'), ('ML', 'nsubj'), ('solves', 'ROOT'), ('problem', 'dobj'), ('maximizing', 'pcomp'), ('log', 'compound'), ('-', 'punct'), ('likelihood', 'compound'), ('function', 'dobj'), (' ', 'nsubj'), ('maximize', 'relcl'), ('ln', 'compound'), ('p(D|θ', 'dobj'), (')', 'punct')]

>> Bigrams: 
[[ML, selects], [selects, value], [value, θ], [θ, parameterized], [parameterized, family], [family, models], [models, p(x], [p(x, ,], [,, t|θ], [t|θ, )], [), p(t|x], [p(t|x, ,], [,, θ], [θ, )], [), likely], [likely, generated], [generated, observed], [observed, training], [training, set], [set, D.], [D., Mathematically], [Mathematically, ,], [,, ML], [ML, solves], [solves, problem], [problem, maximizing], [maximizing, log], [log, -], [-, likelihood], [likelihood, function], [function,  ], [ , maximize], [maximize, ln], [ln, p(D|θ], [p(D|θ, )]]

>> Trigrams: 
[[ML, selects, value], [selects, value, θ], [value, θ, parameterized], [θ, parameterized, family], [parameterized, family, models], [family, models, p(x], [models, p(x, ,], [p(x, ,, t|θ], [,, t|θ, )], [t|θ, ), p(t|x], [), p(t|x, ,], [p(t|x, ,, θ], [,, θ, )], [θ, ), likely], [), likely, generated], [likely, generated, observed], [generated, observed, training], [observed, training, set], [training, set, D.], [set, D., Mathematically], [D., Mathematically, ,], [Mathematically, ,, ML], [,, ML, solves], [ML, solves, problem], [solves, problem, maximizing], [problem, maximizing, log], [maximizing, log, -], [log, -, likelihood], [-, likelihood, function], [likelihood, function,  ], [function,  , maximize], [ , maximize, ln], [maximize, ln, p(D|θ], [ln, p(D|θ, )]]

>> Noun Phrases are: 
[ML, a value, θ, the parameterized family, models, p(x, p(t|x, the observed training, D. Mathematically, ML, the problem, the log-likelihood function, ln p(D|θ]

>> Named Entities are: 
[('ML', 'ORG'), ('p(x', 'ORG'), ('D. Mathematically', 'PERSON'), ('ML', 'ORG')]


============================ Sentence 347 =============================

(8)  over θ, where p(D|θ) is the probability of the data set D for a given value of θ. 


>> Tokens are: 
[(, 8),  , θ, ,, p(D|θ, ), probability, data, set, D, given, value, θ, .] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('8)', 'NOUN'), (' ', 'SPACE'), ('θ', 'NOUN'), (',', 'PUNCT'), ('p(D|θ', 'NOUN'), (')', 'PUNCT'), ('probability', 'NOUN'), ('data', 'NOUN'), ('set', 'VERB'), ('D', 'PROPN'), ('given', 'VERB'), ('value', 'NOUN'), ('θ', 'DET'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('8)', 'nsubj'), (' ', 'acl'), ('θ', 'appos'), (',', 'punct'), ('p(D|θ', 'appos'), (')', 'punct'), ('probability', 'attr'), ('data', 'pobj'), ('set', 'acl'), ('D', 'dobj'), ('given', 'amod'), ('value', 'pobj'), ('θ', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[(, 8)], [8),  ], [ , θ], [θ, ,], [,, p(D|θ], [p(D|θ, )], [), probability], [probability, data], [data, set], [set, D], [D, given], [given, value], [value, θ], [θ, .]]

>> Trigrams: 
[[(, 8),  ], [8),  , θ], [ , θ, ,], [θ, ,, p(D|θ], [,, p(D|θ, )], [p(D|θ, ), probability], [), probability, data], [probability, data, set], [data, set, D], [set, D, given], [D, given, value], [given, value, θ], [value, θ, .]]

>> Noun Phrases are: 
[(8), θ, where p(D|θ, the probability, the data, D, a given value]

>> Named Entities are: 
[('8)', 'CARDINAL')]


============================ Sentence 348 =============================

Given the assumption of i.i.d. 


>> Tokens are: 
[Given, assumption, i.i.d, .] 

>> PoS Tags are: 
[('Given', 'VERB'), ('assumption', 'NOUN'), ('i.i.d', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Given', 'ROOT'), ('assumption', 'pobj'), ('i.i.d', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Given, assumption], [assumption, i.i.d], [i.i.d, .]]

>> Trigrams: 
[[Given, assumption, i.i.d], [assumption, i.i.d, .]]

>> Noun Phrases are: 
[the assumption, i.i.d]

>> Named Entities are: 
[]


============================ Sentence 349 =============================

data points in D (see Sec III-B), the log-likelihood can be written as  ln p(D|θ) = 


>> Tokens are: 
[data, points, D, (, Sec, III, -, B, ), ,, log, -, likelihood, written,  , ln, p(D|θ, ), =] 

>> PoS Tags are: 
[('data', 'NOUN'), ('points', 'NOUN'), ('D', 'PROPN'), ('(', 'PUNCT'), ('Sec', 'PROPN'), ('III', 'PROPN'), ('-', 'PUNCT'), ('B', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('log', 'NOUN'), ('-', 'PUNCT'), ('likelihood', 'NOUN'), ('written', 'VERB'), (' ', 'SPACE'), ('ln', 'ADP'), ('p(D|θ', 'NOUN'), (')', 'PUNCT'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('data', 'compound'), ('points', 'dep'), ('D', 'pobj'), ('(', 'punct'), ('Sec', 'compound'), ('III', 'compound'), ('-', 'punct'), ('B', 'dobj'), (')', 'punct'), (',', 'punct'), ('log', 'compound'), ('-', 'punct'), ('likelihood', 'nsubjpass'), ('written', 'ROOT'), (' ', 'pobj'), ('ln', 'nmod'), ('p(D|θ', 'pobj'), (')', 'punct'), ('=', 'punct')]

>> Bigrams: 
[[data, points], [points, D], [D, (], [(, Sec], [Sec, III], [III, -], [-, B], [B, )], [), ,], [,, log], [log, -], [-, likelihood], [likelihood, written], [written,  ], [ , ln], [ln, p(D|θ], [p(D|θ, )], [), =]]

>> Trigrams: 
[[data, points, D], [points, D, (], [D, (, Sec], [(, Sec, III], [Sec, III, -], [III, -, B], [-, B, )], [B, ), ,], [), ,, log], [,, log, -], [log, -, likelihood], [-, likelihood, written], [likelihood, written,  ], [written,  , ln], [ , ln, p(D|θ], [ln, p(D|θ, )], [p(D|θ, ), =]]

>> Noun Phrases are: 
[D, Sec III-B, the log-likelihood, ln p(D|θ]

>> Named Entities are: 
[('D', 'GPE'), ('Sec III-B', 'PERSON')]


============================ Sentence 350 =============================

N∑ n=1  ln p(tn|xn, θ), (9)  where we have used as an example the case of discrim- inative models. 


>> Tokens are: 
[N∑, n=1,  , ln, p(tn|xn, ,, θ, ), ,, (, 9, ),  , example, case, discrim-, inative, models, .] 

>> PoS Tags are: 
[('N∑', 'PROPN'), ('n=1', 'X'), (' ', 'SPACE'), ('ln', 'ADP'), ('p(tn|xn', 'NOUN'), (',', 'PUNCT'), ('θ', 'X'), (')', 'PUNCT'), (',', 'PUNCT'), ('(', 'PUNCT'), ('9', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE'), ('example', 'NOUN'), ('case', 'NOUN'), ('discrim-', 'ADJ'), ('inative', 'ADJ'), ('models', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('N∑', 'ROOT'), ('n=1', 'punct'), (' ', 'nmod'), ('ln', 'compound'), ('p(tn|xn', 'dep'), (',', 'punct'), ('θ', 'appos'), (')', 'punct'), (',', 'punct'), ('(', 'punct'), ('9', 'meta'), (')', 'punct'), (' ', 'appos'), ('example', 'pobj'), ('case', 'dobj'), ('discrim-', 'amod'), ('inative', 'amod'), ('models', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[N∑, n=1], [n=1,  ], [ , ln], [ln, p(tn|xn], [p(tn|xn, ,], [,, θ], [θ, )], [), ,], [,, (], [(, 9], [9, )], [),  ], [ , example], [example, case], [case, discrim-], [discrim-, inative], [inative, models], [models, .]]

>> Trigrams: 
[[N∑, n=1,  ], [n=1,  , ln], [ , ln, p(tn|xn], [ln, p(tn|xn, ,], [p(tn|xn, ,, θ], [,, θ, )], [θ, ), ,], [), ,, (], [,, (, 9], [(, 9, )], [9, ),  ], [),  , example], [ , example, case], [example, case, discrim-], [case, discrim-, inative], [discrim-, inative, models], [inative, models, .]]

>> Noun Phrases are: 
[N∑, we, an example, the case, discrim- inative models]

>> Named Entities are: 
[]


============================ Sentence 351 =============================

Note that most learning criteria used in practice can be interpreted as ML problems, including the least squares criterion – ML for Gaussian models – and cross-entropy – ML for categorical models. 


>> Tokens are: 
[Note, learning, criteria, practice, interpreted, ML, problems, ,, including, squares, criterion, –, ML, Gaussian, models, –, cross, -, entropy, –, ML, categorical, models, .] 

>> PoS Tags are: 
[('Note', 'VERB'), ('learning', 'VERB'), ('criteria', 'NOUN'), ('practice', 'NOUN'), ('interpreted', 'VERB'), ('ML', 'PROPN'), ('problems', 'NOUN'), (',', 'PUNCT'), ('including', 'VERB'), ('squares', 'NOUN'), ('criterion', 'NOUN'), ('–', 'PUNCT'), ('ML', 'PROPN'), ('Gaussian', 'PROPN'), ('models', 'NOUN'), ('–', 'PUNCT'), ('cross', 'ADJ'), ('-', 'NOUN'), ('entropy', 'ADJ'), ('–', 'PUNCT'), ('ML', 'PROPN'), ('categorical', 'ADJ'), ('models', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Note', 'ROOT'), ('learning', 'amod'), ('criteria', 'nsubjpass'), ('practice', 'pobj'), ('interpreted', 'ccomp'), ('ML', 'compound'), ('problems', 'pobj'), (',', 'punct'), ('including', 'prep'), ('squares', 'compound'), ('criterion', 'pobj'), ('–', 'punct'), ('ML', 'appos'), ('Gaussian', 'compound'), ('models', 'pobj'), ('–', 'punct'), ('cross', 'conj'), ('-', 'conj'), ('entropy', 'conj'), ('–', 'punct'), ('ML', 'appos'), ('categorical', 'amod'), ('models', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Note, learning], [learning, criteria], [criteria, practice], [practice, interpreted], [interpreted, ML], [ML, problems], [problems, ,], [,, including], [including, squares], [squares, criterion], [criterion, –], [–, ML], [ML, Gaussian], [Gaussian, models], [models, –], [–, cross], [cross, -], [-, entropy], [entropy, –], [–, ML], [ML, categorical], [categorical, models], [models, .]]

>> Trigrams: 
[[Note, learning, criteria], [learning, criteria, practice], [criteria, practice, interpreted], [practice, interpreted, ML], [interpreted, ML, problems], [ML, problems, ,], [problems, ,, including], [,, including, squares], [including, squares, criterion], [squares, criterion, –], [criterion, –, ML], [–, ML, Gaussian], [ML, Gaussian, models], [Gaussian, models, –], [models, –, cross], [–, cross, -], [cross, -, entropy], [-, entropy, –], [entropy, –, ML], [–, ML, categorical], [ML, categorical, models], [categorical, models, .]]

>> Noun Phrases are: 
[most learning criteria, practice, ML problems, the least squares criterion, ML, Gaussian models, -, ML, categorical models]

>> Named Entities are: 
[('ML', 'ORG')]


============================ Sentence 352 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 353 =============================

The ML problem (8) rarely has analytical solutions and is typically addressed by Stochastic Gradient De- scent (SGD). 


>> Tokens are: 
[ML, problem, (, 8), rarely, analytical, solutions, typically, addressed, Stochastic, Gradient, De-, scent, (, SGD, ), .] 

>> PoS Tags are: 
[('ML', 'PROPN'), ('problem', 'NOUN'), ('(', 'PUNCT'), ('8)', 'NUM'), ('rarely', 'ADV'), ('analytical', 'ADJ'), ('solutions', 'NOUN'), ('typically', 'ADV'), ('addressed', 'VERB'), ('Stochastic', 'PROPN'), ('Gradient', 'PROPN'), ('De-', 'PROPN'), ('scent', 'NOUN'), ('(', 'PUNCT'), ('SGD', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ML', 'compound'), ('problem', 'ROOT'), ('(', 'punct'), ('8)', 'nsubj'), ('rarely', 'advmod'), ('analytical', 'amod'), ('solutions', 'dobj'), ('typically', 'advmod'), ('addressed', 'conj'), ('Stochastic', 'compound'), ('Gradient', 'compound'), ('De-', 'compound'), ('scent', 'pobj'), ('(', 'punct'), ('SGD', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[ML, problem], [problem, (], [(, 8)], [8), rarely], [rarely, analytical], [analytical, solutions], [solutions, typically], [typically, addressed], [addressed, Stochastic], [Stochastic, Gradient], [Gradient, De-], [De-, scent], [scent, (], [(, SGD], [SGD, )], [), .]]

>> Trigrams: 
[[ML, problem, (], [problem, (, 8)], [(, 8), rarely], [8), rarely, analytical], [rarely, analytical, solutions], [analytical, solutions, typically], [solutions, typically, addressed], [typically, addressed, Stochastic], [addressed, Stochastic, Gradient], [Stochastic, Gradient, De-], [Gradient, De-, scent], [De-, scent, (], [scent, (, SGD], [(, SGD, )], [SGD, ), .]]

>> Noun Phrases are: 
[The ML problem, analytical solutions, Stochastic Gradient De- scent, (SGD]

>> Named Entities are: 
[('ML', 'FAC'), ('8)', 'CARDINAL'), ('Stochastic Gradient', 'ORG')]


============================ Sentence 354 =============================

Accordingly, at each iteration, subsets of examples, also known as mini-batches, are selected from the training set, and the parameter vector is updated in the direction of gradient of the log-likelihood function as evaluated on these examples. 


>> Tokens are: 
[Accordingly, ,, iteration, ,, subsets, examples, ,, known, mini, -, batches, ,, selected, training, set, ,, parameter, vector, updated, direction, gradient, log, -, likelihood, function, evaluated, examples, .] 

>> PoS Tags are: 
[('Accordingly', 'ADV'), (',', 'PUNCT'), ('iteration', 'NOUN'), (',', 'PUNCT'), ('subsets', 'NOUN'), ('examples', 'NOUN'), (',', 'PUNCT'), ('known', 'VERB'), ('mini', 'NOUN'), ('-', 'NOUN'), ('batches', 'NOUN'), (',', 'PUNCT'), ('selected', 'VERB'), ('training', 'NOUN'), ('set', 'NOUN'), (',', 'PUNCT'), ('parameter', 'NOUN'), ('vector', 'NOUN'), ('updated', 'VERB'), ('direction', 'NOUN'), ('gradient', 'NOUN'), ('log', 'NOUN'), ('-', 'PUNCT'), ('likelihood', 'NOUN'), ('function', 'NOUN'), ('evaluated', 'VERB'), ('examples', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Accordingly', 'advmod'), (',', 'punct'), ('iteration', 'pobj'), (',', 'punct'), ('subsets', 'nsubjpass'), ('examples', 'pobj'), (',', 'punct'), ('known', 'acl'), ('mini', 'pobj'), ('-', 'pobj'), ('batches', 'pobj'), (',', 'punct'), ('selected', 'ROOT'), ('training', 'compound'), ('set', 'pobj'), (',', 'punct'), ('parameter', 'compound'), ('vector', 'nsubjpass'), ('updated', 'conj'), ('direction', 'pobj'), ('gradient', 'pobj'), ('log', 'compound'), ('-', 'punct'), ('likelihood', 'compound'), ('function', 'pobj'), ('evaluated', 'advcl'), ('examples', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Accordingly, ,], [,, iteration], [iteration, ,], [,, subsets], [subsets, examples], [examples, ,], [,, known], [known, mini], [mini, -], [-, batches], [batches, ,], [,, selected], [selected, training], [training, set], [set, ,], [,, parameter], [parameter, vector], [vector, updated], [updated, direction], [direction, gradient], [gradient, log], [log, -], [-, likelihood], [likelihood, function], [function, evaluated], [evaluated, examples], [examples, .]]

>> Trigrams: 
[[Accordingly, ,, iteration], [,, iteration, ,], [iteration, ,, subsets], [,, subsets, examples], [subsets, examples, ,], [examples, ,, known], [,, known, mini], [known, mini, -], [mini, -, batches], [-, batches, ,], [batches, ,, selected], [,, selected, training], [selected, training, set], [training, set, ,], [set, ,, parameter], [,, parameter, vector], [parameter, vector, updated], [vector, updated, direction], [updated, direction, gradient], [direction, gradient, log], [gradient, log, -], [log, -, likelihood], [-, likelihood, function], [likelihood, function, evaluated], [function, evaluated, examples], [evaluated, examples, .]]

>> Noun Phrases are: 
[each iteration, subsets, examples, mini, -, batches, the training set, the parameter vector, the direction, gradient, the log-likelihood function, these examples]

>> Named Entities are: 
[]


============================ Sentence 355 =============================

The resulting learning rule can be written as  θnew ← θold + γ∇θ ln p(tn|xn, θ)|θ=θold , (10)  where we have defined as γ > 0 the learning rate, and, for simplicity of notation, we have considered a mini- batch given by a single example (xn, tn). 


>> Tokens are: 
[resulting, learning, rule, written,  , θnew, ←, θold, +, γ∇θ, ln, p(tn|xn, ,, θ)|θ, =, θold, ,, (, 10, ),  , defined, γ, >, 0, learning, rate, ,, ,, simplicity, notation, ,, considered, mini-, batch, given, single, example, (, xn, ,, tn, ), .] 

>> PoS Tags are: 
[('resulting', 'VERB'), ('learning', 'NOUN'), ('rule', 'NOUN'), ('written', 'VERB'), (' ', 'SPACE'), ('θnew', 'NOUN'), ('←', 'NUM'), ('θold', 'NOUN'), ('+', 'CCONJ'), ('γ∇θ', 'NOUN'), ('ln', 'NOUN'), ('p(tn|xn', 'ADV'), (',', 'PUNCT'), ('θ)|θ', 'PRON'), ('=', 'PUNCT'), ('θold', 'ADJ'), (',', 'PUNCT'), ('(', 'PUNCT'), ('10', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE'), ('defined', 'VERB'), ('γ', 'NOUN'), ('>', 'PUNCT'), ('0', 'PUNCT'), ('learning', 'NOUN'), ('rate', 'NOUN'), (',', 'PUNCT'), (',', 'PUNCT'), ('simplicity', 'NOUN'), ('notation', 'NOUN'), (',', 'PUNCT'), ('considered', 'VERB'), ('mini-', 'NOUN'), ('batch', 'NOUN'), ('given', 'VERB'), ('single', 'ADJ'), ('example', 'NOUN'), ('(', 'PUNCT'), ('xn', 'NUM'), (',', 'PUNCT'), ('tn', 'ADV'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('resulting', 'amod'), ('learning', 'compound'), ('rule', 'nsubjpass'), ('written', 'ROOT'), (' ', 'nsubj'), ('θnew', 'nsubj'), ('←', 'nummod'), ('θold', 'pobj'), ('+', 'cc'), ('γ∇θ', 'dep'), ('ln', 'nmod'), ('p(tn|xn', 'advmod'), (',', 'punct'), ('θ)|θ', 'nsubj'), ('=', 'advmod'), ('θold', 'conj'), (',', 'punct'), ('(', 'punct'), ('10', 'npadvmod'), (')', 'punct'), (' ', 'punct'), ('defined', 'relcl'), ('γ', 'pobj'), ('>', 'punct'), ('0', 'punct'), ('learning', 'compound'), ('rate', 'appos'), (',', 'punct'), (',', 'punct'), ('simplicity', 'pobj'), ('notation', 'pobj'), (',', 'punct'), ('considered', 'conj'), ('mini-', 'compound'), ('batch', 'dobj'), ('given', 'acl'), ('single', 'amod'), ('example', 'pobj'), ('(', 'punct'), ('xn', 'appos'), (',', 'punct'), ('tn', 'advmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[resulting, learning], [learning, rule], [rule, written], [written,  ], [ , θnew], [θnew, ←], [←, θold], [θold, +], [+, γ∇θ], [γ∇θ, ln], [ln, p(tn|xn], [p(tn|xn, ,], [,, θ)|θ], [θ)|θ, =], [=, θold], [θold, ,], [,, (], [(, 10], [10, )], [),  ], [ , defined], [defined, γ], [γ, >], [>, 0], [0, learning], [learning, rate], [rate, ,], [,, ,], [,, simplicity], [simplicity, notation], [notation, ,], [,, considered], [considered, mini-], [mini-, batch], [batch, given], [given, single], [single, example], [example, (], [(, xn], [xn, ,], [,, tn], [tn, )], [), .]]

>> Trigrams: 
[[resulting, learning, rule], [learning, rule, written], [rule, written,  ], [written,  , θnew], [ , θnew, ←], [θnew, ←, θold], [←, θold, +], [θold, +, γ∇θ], [+, γ∇θ, ln], [γ∇θ, ln, p(tn|xn], [ln, p(tn|xn, ,], [p(tn|xn, ,, θ)|θ], [,, θ)|θ, =], [θ)|θ, =, θold], [=, θold, ,], [θold, ,, (], [,, (, 10], [(, 10, )], [10, ),  ], [),  , defined], [ , defined, γ], [defined, γ, >], [γ, >, 0], [>, 0, learning], [0, learning, rate], [learning, rate, ,], [rate, ,, ,], [,, ,, simplicity], [,, simplicity, notation], [simplicity, notation, ,], [notation, ,, considered], [,, considered, mini-], [considered, mini-, batch], [mini-, batch, given], [batch, given, single], [given, single, example], [single, example, (], [example, (, xn], [(, xn, ,], [xn, ,, tn], [,, tn, )], [tn, ), .]]

>> Noun Phrases are: 
[The resulting learning rule,  θnew, θ)|θ, we, γ, the learning rate, simplicity, notation, we, a mini- batch, a single example]

>> Named Entities are: 
[('+ γ∇θ', 'TIME'), ('θ)|θ', 'PERSON'), ('10', 'CARDINAL')]


============================ Sentence 356 =============================

It is noted that, with multi-layer neural networks, the computation of the gradient ∇θ 


>> Tokens are: 
[noted, ,, multi, -, layer, neural, networks, ,, computation, gradient, ∇θ] 

>> PoS Tags are: 
[('noted', 'VERB'), (',', 'PUNCT'), ('multi', 'ADJ'), ('-', 'ADJ'), ('layer', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), (',', 'PUNCT'), ('computation', 'NOUN'), ('gradient', 'NOUN'), ('∇θ', 'NOUN')] 

>> Dependency Tags are: 
[('noted', 'ROOT'), (',', 'punct'), ('multi', 'amod'), ('-', 'amod'), ('layer', 'amod'), ('neural', 'amod'), ('networks', 'pobj'), (',', 'punct'), ('computation', 'nsubj'), ('gradient', 'pobj'), ('∇θ', 'ccomp')]

>> Bigrams: 
[[noted, ,], [,, multi], [multi, -], [-, layer], [layer, neural], [neural, networks], [networks, ,], [,, computation], [computation, gradient], [gradient, ∇θ]]

>> Trigrams: 
[[noted, ,, multi], [,, multi, -], [multi, -, layer], [-, layer, neural], [layer, neural, networks], [neural, networks, ,], [networks, ,, computation], [,, computation, gradient], [computation, gradient, ∇θ]]

>> Noun Phrases are: 
[It, multi-layer neural networks, the computation, the gradient]

>> Named Entities are: 
[]


============================ Sentence 357 =============================

ln p(tn|xn, θ) yields the standard backpropagation algorithm 


>> Tokens are: 
[ln, p(tn|xn, ,, θ, ), yields, standard, backpropagation, algorithm] 

>> PoS Tags are: 
[('ln', 'INTJ'), ('p(tn|xn', 'INTJ'), (',', 'PUNCT'), ('θ', 'X'), (')', 'PUNCT'), ('yields', 'VERB'), ('standard', 'ADJ'), ('backpropagation', 'NOUN'), ('algorithm', 'NOUN')] 

>> Dependency Tags are: 
[('ln', 'advmod'), ('p(tn|xn', 'dep'), (',', 'punct'), ('θ', 'meta'), (')', 'punct'), ('yields', 'ROOT'), ('standard', 'amod'), ('backpropagation', 'dobj'), ('algorithm', 'punct')]

>> Bigrams: 
[[ln, p(tn|xn], [p(tn|xn, ,], [,, θ], [θ, )], [), yields], [yields, standard], [standard, backpropagation], [backpropagation, algorithm]]

>> Trigrams: 
[[ln, p(tn|xn, ,], [p(tn|xn, ,, θ], [,, θ, )], [θ, ), yields], [), yields, standard], [yields, standard, backpropagation], [standard, backpropagation, algorithm]]

>> Noun Phrases are: 
[the standard backpropagation]

>> Named Entities are: 
[]


============================ Sentence 358 =============================

[7], [19]. 


>> Tokens are: 
[[, 7, ], ,, [, 19, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('7', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('[', 'PUNCT'), ('19', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('7', 'ROOT'), (']', 'punct'), (',', 'punct'), ('[', 'punct'), ('19', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 7], [7, ]], [], ,], [,, [], [[, 19], [19, ]], [], .]]

>> Trigrams: 
[[[, 7, ]], [7, ], ,], [], ,, [], [,, [, 19], [[, 19, ]], [19, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('7', 'CARDINAL'), ('19', 'CARDINAL')]


============================ Sentence 359 =============================

The learning rate is an example of hyperparameters that define the learning algorithm. 


>> Tokens are: 
[learning, rate, example, hyperparameters, define, learning, algorithm, .] 

>> PoS Tags are: 
[('learning', 'NOUN'), ('rate', 'NOUN'), ('example', 'NOUN'), ('hyperparameters', 'NOUN'), ('define', 'VERB'), ('learning', 'NOUN'), ('algorithm', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('learning', 'compound'), ('rate', 'nsubj'), ('example', 'attr'), ('hyperparameters', 'pobj'), ('define', 'relcl'), ('learning', 'amod'), ('algorithm', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[learning, rate], [rate, example], [example, hyperparameters], [hyperparameters, define], [define, learning], [learning, algorithm], [algorithm, .]]

>> Trigrams: 
[[learning, rate, example], [rate, example, hyperparameters], [example, hyperparameters, define], [hyperparameters, define, learning], [define, learning, algorithm], [learning, algorithm, .]]

>> Noun Phrases are: 
[The learning rate, an example, hyperparameters, the learning algorithm]

>> Named Entities are: 
[]


============================ Sentence 360 =============================

Many variations of SGD have been proposed that aim at improving convergence (see, e.g.--.-, [7], [19]). 


>> Tokens are: 
[variations, SGD, proposed, aim, improving, convergence, (, ,, e.g.--.-, ,, [, 7, ], ,, [, 19, ], ), .] 

>> PoS Tags are: 
[('variations', 'NOUN'), ('SGD', 'PROPN'), ('proposed', 'VERB'), ('aim', 'NOUN'), ('improving', 'VERB'), ('convergence', 'NOUN'), ('(', 'PUNCT'), (',', 'PUNCT'), ('e.g.--.-', 'X'), (',', 'PUNCT'), ('[', 'PUNCT'), ('7', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('[', 'PUNCT'), ('19', 'NUM'), (']', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('variations', 'nsubjpass'), ('SGD', 'pobj'), ('proposed', 'ROOT'), ('aim', 'ccomp'), ('improving', 'pcomp'), ('convergence', 'dobj'), ('(', 'punct'), (',', 'punct'), ('e.g.--.-', 'intj'), (',', 'punct'), ('[', 'punct'), ('7', 'dep'), (']', 'punct'), (',', 'punct'), ('[', 'npadvmod'), ('19', 'dep'), (']', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[variations, SGD], [SGD, proposed], [proposed, aim], [aim, improving], [improving, convergence], [convergence, (], [(, ,], [,, e.g.--.-], [e.g.--.-, ,], [,, [], [[, 7], [7, ]], [], ,], [,, [], [[, 19], [19, ]], [], )], [), .]]

>> Trigrams: 
[[variations, SGD, proposed], [SGD, proposed, aim], [proposed, aim, improving], [aim, improving, convergence], [improving, convergence, (], [convergence, (, ,], [(, ,, e.g.--.-], [,, e.g.--.-, ,], [e.g.--.-, ,, [], [,, [, 7], [[, 7, ]], [7, ], ,], [], ,, [], [,, [, 19], [[, 19, ]], [19, ], )], [], ), .]]

>> Noun Phrases are: 
[Many variations, SGD, convergence]

>> Named Entities are: 
[('SGD', 'ORG'), ('19', 'CARDINAL')]


============================ Sentence 361 =============================

 ML has evident drawbacks as an indirect means of minimizing the generalization error. 


>> Tokens are: 
[ , ML, evident, drawbacks, indirect, means, minimizing, generalization, error, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('ML', 'PROPN'), ('evident', 'ADJ'), ('drawbacks', 'NOUN'), ('indirect', 'ADJ'), ('means', 'NOUN'), ('minimizing', 'VERB'), ('generalization', 'NOUN'), ('error', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('ML', 'nsubj'), ('evident', 'amod'), ('drawbacks', 'dobj'), ('indirect', 'amod'), ('means', 'pobj'), ('minimizing', 'pcomp'), ('generalization', 'compound'), ('error', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[ , ML], [ML, evident], [evident, drawbacks], [drawbacks, indirect], [indirect, means], [means, minimizing], [minimizing, generalization], [generalization, error], [error, .]]

>> Trigrams: 
[[ , ML, evident], [ML, evident, drawbacks], [evident, drawbacks, indirect], [drawbacks, indirect, means], [indirect, means, minimizing], [means, minimizing, generalization], [minimizing, generalization, error], [generalization, error, .]]

>> Noun Phrases are: 
[ ML, evident drawbacks, an indirect means, the generalization error]

>> Named Entities are: 
[('ML', 'ORG')]


============================ Sentence 362 =============================

In fact, ML only considers the fit of the probabilistic model on the training set without any consideration for the performance on unobserved input-output pairs. 


>> Tokens are: 
[fact, ,, ML, considers, fit, probabilistic, model, training, set, consideration, performance, unobserved, input, -, output, pairs, .] 

>> PoS Tags are: 
[('fact', 'NOUN'), (',', 'PUNCT'), ('ML', 'PROPN'), ('considers', 'VERB'), ('fit', 'NOUN'), ('probabilistic', 'ADJ'), ('model', 'NOUN'), ('training', 'NOUN'), ('set', 'VERB'), ('consideration', 'NOUN'), ('performance', 'NOUN'), ('unobserved', 'ADJ'), ('input', 'NOUN'), ('-', 'PUNCT'), ('output', 'NOUN'), ('pairs', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('fact', 'pobj'), (',', 'punct'), ('ML', 'nsubj'), ('considers', 'ROOT'), ('fit', 'dobj'), ('probabilistic', 'amod'), ('model', 'pobj'), ('training', 'pobj'), ('set', 'acl'), ('consideration', 'pobj'), ('performance', 'pobj'), ('unobserved', 'amod'), ('input', 'compound'), ('-', 'punct'), ('output', 'compound'), ('pairs', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[fact, ,], [,, ML], [ML, considers], [considers, fit], [fit, probabilistic], [probabilistic, model], [model, training], [training, set], [set, consideration], [consideration, performance], [performance, unobserved], [unobserved, input], [input, -], [-, output], [output, pairs], [pairs, .]]

>> Trigrams: 
[[fact, ,, ML], [,, ML, considers], [ML, considers, fit], [considers, fit, probabilistic], [fit, probabilistic, model], [probabilistic, model, training], [model, training, set], [training, set, consideration], [set, consideration, performance], [consideration, performance, unobserved], [performance, unobserved, input], [unobserved, input, -], [input, -, output], [-, output, pairs], [output, pairs, .]]

>> Noun Phrases are: 
[fact, ML, the fit, the probabilistic model, the training, any consideration, the performance, unobserved input-output pairs]

>> Named Entities are: 
[('ML', 'ORG')]


============================ Sentence 363 =============================

This weakness can be somewhat mitigated by regularization [7], [19] during learning and by a proper selection of the model via validation, as discussed in the next subsection. 


>> Tokens are: 
[weakness, somewhat, mitigated, regularization, [, 7, ], ,, [, 19, ], learning, proper, selection, model, validation, ,, discussed, subsection, .] 

>> PoS Tags are: 
[('weakness', 'NOUN'), ('somewhat', 'ADV'), ('mitigated', 'VERB'), ('regularization', 'NOUN'), ('[', 'PUNCT'), ('7', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('[', 'PUNCT'), ('19', 'NUM'), (']', 'PUNCT'), ('learning', 'NOUN'), ('proper', 'ADJ'), ('selection', 'NOUN'), ('model', 'NOUN'), ('validation', 'NOUN'), (',', 'PUNCT'), ('discussed', 'VERB'), ('subsection', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('weakness', 'nsubjpass'), ('somewhat', 'advmod'), ('mitigated', 'ROOT'), ('regularization', 'pobj'), ('[', 'punct'), ('7', 'npadvmod'), (']', 'punct'), (',', 'punct'), ('[', 'npadvmod'), ('19', 'dep'), (']', 'punct'), ('learning', 'pobj'), ('proper', 'amod'), ('selection', 'pobj'), ('model', 'pobj'), ('validation', 'pobj'), (',', 'punct'), ('discussed', 'advcl'), ('subsection', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[weakness, somewhat], [somewhat, mitigated], [mitigated, regularization], [regularization, [], [[, 7], [7, ]], [], ,], [,, [], [[, 19], [19, ]], [], learning], [learning, proper], [proper, selection], [selection, model], [model, validation], [validation, ,], [,, discussed], [discussed, subsection], [subsection, .]]

>> Trigrams: 
[[weakness, somewhat, mitigated], [somewhat, mitigated, regularization], [mitigated, regularization, [], [regularization, [, 7], [[, 7, ]], [7, ], ,], [], ,, [], [,, [, 19], [[, 19, ]], [19, ], learning], [], learning, proper], [learning, proper, selection], [proper, selection, model], [selection, model, validation], [model, validation, ,], [validation, ,, discussed], [,, discussed, subsection], [discussed, subsection, .]]

>> Noun Phrases are: 
[This weakness, regularization, learning, a proper selection, the model, validation, the next subsection]

>> Named Entities are: 
[('7', 'CARDINAL'), ('19', 'CARDINAL')]


============================ Sentence 364 =============================

Regu- larization adds a penalty term to the log-likelihood that depends on the model parameters θ. 


>> Tokens are: 
[Regu-, larization, adds, penalty, term, log, -, likelihood, depends, model, parameters, θ, .] 

>> PoS Tags are: 
[('Regu-', 'X'), ('larization', 'NOUN'), ('adds', 'VERB'), ('penalty', 'NOUN'), ('term', 'NOUN'), ('log', 'NOUN'), ('-', 'PUNCT'), ('likelihood', 'NOUN'), ('depends', 'VERB'), ('model', 'NOUN'), ('parameters', 'NOUN'), ('θ', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Regu-', 'amod'), ('larization', 'nsubj'), ('adds', 'ROOT'), ('penalty', 'compound'), ('term', 'dobj'), ('log', 'compound'), ('-', 'punct'), ('likelihood', 'pobj'), ('depends', 'relcl'), ('model', 'compound'), ('parameters', 'pobj'), ('θ', 'ccomp'), ('.', 'punct')]

>> Bigrams: 
[[Regu-, larization], [larization, adds], [adds, penalty], [penalty, term], [term, log], [log, -], [-, likelihood], [likelihood, depends], [depends, model], [model, parameters], [parameters, θ], [θ, .]]

>> Trigrams: 
[[Regu-, larization, adds], [larization, adds, penalty], [adds, penalty, term], [penalty, term, log], [term, log, -], [log, -, likelihood], [-, likelihood, depends], [likelihood, depends, model], [depends, model, parameters], [model, parameters, θ], [parameters, θ, .]]

>> Noun Phrases are: 
[Regu- larization, a penalty term, the log-likelihood, the model parameters]

>> Named Entities are: 
[]


============================ Sentence 365 =============================

The goal is to prevent the learned model parameters θ to assume values that are a priori too unlikely and that are hence possible symptoms of overfitting. 


>> Tokens are: 
[goal, prevent, learned, model, parameters, θ, assume, values, priori, unlikely, possible, symptoms, overfitting, .] 

>> PoS Tags are: 
[('goal', 'NOUN'), ('prevent', 'VERB'), ('learned', 'VERB'), ('model', 'NOUN'), ('parameters', 'NOUN'), ('θ', 'VERB'), ('assume', 'VERB'), ('values', 'NOUN'), ('priori', 'ADV'), ('unlikely', 'ADJ'), ('possible', 'ADJ'), ('symptoms', 'NOUN'), ('overfitting', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('goal', 'nsubj'), ('prevent', 'xcomp'), ('learned', 'amod'), ('model', 'compound'), ('parameters', 'dobj'), ('θ', 'ccomp'), ('assume', 'xcomp'), ('values', 'dobj'), ('priori', 'advmod'), ('unlikely', 'acomp'), ('possible', 'amod'), ('symptoms', 'attr'), ('overfitting', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[goal, prevent], [prevent, learned], [learned, model], [model, parameters], [parameters, θ], [θ, assume], [assume, values], [values, priori], [priori, unlikely], [unlikely, possible], [possible, symptoms], [symptoms, overfitting], [overfitting, .]]

>> Trigrams: 
[[goal, prevent, learned], [prevent, learned, model], [learned, model, parameters], [model, parameters, θ], [parameters, θ, assume], [θ, assume, values], [assume, values, priori], [values, priori, unlikely], [priori, unlikely, possible], [unlikely, possible, symptoms], [possible, symptoms, overfitting], [symptoms, overfitting, .]]

>> Noun Phrases are: 
[The goal, the learned model parameters, values, hence possible symptoms]

>> Named Entities are: 
[]


============================ Sentence 366 =============================

As an example, for logistic regression, one can add a penalty that is proportional to the norm ||w||2 of the weight vector w in order to prevent the weights to assume excessively high values when fitting the data in the learning step. 


>> Tokens are: 
[example, ,, logistic, regression, ,, add, penalty, proportional, norm, ||w||2, weight, vector, w, order, prevent, weights, assume, excessively, high, values, fitting, data, learning, step, .] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), ('logistic', 'ADJ'), ('regression', 'NOUN'), (',', 'PUNCT'), ('add', 'VERB'), ('penalty', 'NOUN'), ('proportional', 'ADJ'), ('norm', 'NOUN'), ('||w||2', 'NOUN'), ('weight', 'NOUN'), ('vector', 'NOUN'), ('w', 'ADP'), ('order', 'NOUN'), ('prevent', 'VERB'), ('weights', 'NOUN'), ('assume', 'VERB'), ('excessively', 'ADV'), ('high', 'ADJ'), ('values', 'NOUN'), ('fitting', 'VERB'), ('data', 'NOUN'), ('learning', 'NOUN'), ('step', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct'), ('logistic', 'amod'), ('regression', 'pobj'), (',', 'punct'), ('add', 'ROOT'), ('penalty', 'dobj'), ('proportional', 'acomp'), ('norm', 'pobj'), ('||w||2', 'advmod'), ('weight', 'compound'), ('vector', 'pobj'), ('w', 'advmod'), ('order', 'pobj'), ('prevent', 'acl'), ('weights', 'dobj'), ('assume', 'advcl'), ('excessively', 'advmod'), ('high', 'amod'), ('values', 'dobj'), ('fitting', 'advcl'), ('data', 'dobj'), ('learning', 'compound'), ('step', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[example, ,], [,, logistic], [logistic, regression], [regression, ,], [,, add], [add, penalty], [penalty, proportional], [proportional, norm], [norm, ||w||2], [||w||2, weight], [weight, vector], [vector, w], [w, order], [order, prevent], [prevent, weights], [weights, assume], [assume, excessively], [excessively, high], [high, values], [values, fitting], [fitting, data], [data, learning], [learning, step], [step, .]]

>> Trigrams: 
[[example, ,, logistic], [,, logistic, regression], [logistic, regression, ,], [regression, ,, add], [,, add, penalty], [add, penalty, proportional], [penalty, proportional, norm], [proportional, norm, ||w||2], [norm, ||w||2, weight], [||w||2, weight, vector], [weight, vector, w], [vector, w, order], [w, order, prevent], [order, prevent, weights], [prevent, weights, assume], [weights, assume, excessively], [assume, excessively, high], [excessively, high, values], [high, values, fitting], [values, fitting, data], [fitting, data, learning], [data, learning, step], [learning, step, .]]

>> Noun Phrases are: 
[an example, logistic regression, one, a penalty, the norm, the weight vector, order, the weights, excessively high values, the data, the learning step]

>> Named Entities are: 
[]


============================ Sentence 367 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 368 =============================

F. Model Selection   


>> Tokens are: 
[F., Model, Selection,  ] 

>> PoS Tags are: 
[('F.', 'PROPN'), ('Model', 'PROPN'), ('Selection', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('F.', 'compound'), ('Model', 'compound'), ('Selection', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[F., Model], [Model, Selection], [Selection,  ]]

>> Trigrams: 
[[F., Model, Selection], [Model, Selection,  ]]

>> Noun Phrases are: 
[F. Model Selection]

>> Named Entities are: 
[]


============================ Sentence 369 =============================

We now discuss the first, key, step of model selection, which defines the inductive bias adopted in the learning process. 


>> Tokens are: 
[discuss, ,, key, ,, step, model, selection, ,, defines, inductive, bias, adopted, learning, process, .] 

>> PoS Tags are: 
[('discuss', 'VERB'), (',', 'PUNCT'), ('key', 'ADJ'), (',', 'PUNCT'), ('step', 'NOUN'), ('model', 'NOUN'), ('selection', 'NOUN'), (',', 'PUNCT'), ('defines', 'VERB'), ('inductive', 'ADJ'), ('bias', 'NOUN'), ('adopted', 'VERB'), ('learning', 'NOUN'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('discuss', 'ROOT'), (',', 'punct'), ('key', 'amod'), (',', 'punct'), ('step', 'dobj'), ('model', 'compound'), ('selection', 'pobj'), (',', 'punct'), ('defines', 'relcl'), ('inductive', 'amod'), ('bias', 'dobj'), ('adopted', 'acl'), ('learning', 'compound'), ('process', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[discuss, ,], [,, key], [key, ,], [,, step], [step, model], [model, selection], [selection, ,], [,, defines], [defines, inductive], [inductive, bias], [bias, adopted], [adopted, learning], [learning, process], [process, .]]

>> Trigrams: 
[[discuss, ,, key], [,, key, ,], [key, ,, step], [,, step, model], [step, model, selection], [model, selection, ,], [selection, ,, defines], [,, defines, inductive], [defines, inductive, bias], [inductive, bias, adopted], [bias, adopted, learning], [adopted, learning, process], [learning, process, .]]

>> Noun Phrases are: 
[We, the first, key, step, model selection, the inductive bias, the learning process]

>> Named Entities are: 
[('first', 'ORDINAL')]


============================ Sentence 370 =============================

In order to illustrate the main ideas, here we study a particular aspect of model selection, namely that of model order selection. 


>> Tokens are: 
[order, illustrate, main, ideas, ,, study, particular, aspect, model, selection, ,, model, order, selection, .] 

>> PoS Tags are: 
[('order', 'NOUN'), ('illustrate', 'VERB'), ('main', 'ADJ'), ('ideas', 'NOUN'), (',', 'PUNCT'), ('study', 'VERB'), ('particular', 'ADJ'), ('aspect', 'NOUN'), ('model', 'NOUN'), ('selection', 'NOUN'), (',', 'PUNCT'), ('model', 'NOUN'), ('order', 'NOUN'), ('selection', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('order', 'pobj'), ('illustrate', 'acl'), ('main', 'amod'), ('ideas', 'dobj'), (',', 'punct'), ('study', 'ROOT'), ('particular', 'amod'), ('aspect', 'dobj'), ('model', 'compound'), ('selection', 'pobj'), (',', 'punct'), ('model', 'compound'), ('order', 'compound'), ('selection', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[order, illustrate], [illustrate, main], [main, ideas], [ideas, ,], [,, study], [study, particular], [particular, aspect], [aspect, model], [model, selection], [selection, ,], [,, model], [model, order], [order, selection], [selection, .]]

>> Trigrams: 
[[order, illustrate, main], [illustrate, main, ideas], [main, ideas, ,], [ideas, ,, study], [,, study, particular], [study, particular, aspect], [particular, aspect, model], [aspect, model, selection], [model, selection, ,], [selection, ,, model], [,, model, order], [model, order, selection], [order, selection, .]]

>> Noun Phrases are: 
[order, the main ideas, we, a particular aspect, model selection, model order selection]

>> Named Entities are: 
[]


============================ Sentence 371 =============================

To this end, we consider a hierarchical set of models of increasing complexity and we address the problem of selecting (in Step 1) the order, or the complexity, of the specific model to be posited for learning (in Step 2). 


>> Tokens are: 
[end, ,, consider, hierarchical, set, models, increasing, complexity, address, problem, selecting, (, Step, 1, ), order, ,, complexity, ,, specific, model, posited, learning, (, Step, 2, ), .] 

>> PoS Tags are: 
[('end', 'NOUN'), (',', 'PUNCT'), ('consider', 'VERB'), ('hierarchical', 'ADJ'), ('set', 'NOUN'), ('models', 'NOUN'), ('increasing', 'VERB'), ('complexity', 'NOUN'), ('address', 'VERB'), ('problem', 'NOUN'), ('selecting', 'VERB'), ('(', 'PUNCT'), ('Step', 'PROPN'), ('1', 'NUM'), (')', 'PUNCT'), ('order', 'NOUN'), (',', 'PUNCT'), ('complexity', 'NOUN'), (',', 'PUNCT'), ('specific', 'ADJ'), ('model', 'NOUN'), ('posited', 'VERB'), ('learning', 'VERB'), ('(', 'PUNCT'), ('Step', 'PROPN'), ('2', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('end', 'pobj'), (',', 'punct'), ('consider', 'ROOT'), ('hierarchical', 'amod'), ('set', 'dobj'), ('models', 'pobj'), ('increasing', 'amod'), ('complexity', 'pobj'), ('address', 'conj'), ('problem', 'dobj'), ('selecting', 'pcomp'), ('(', 'punct'), ('Step', 'pobj'), ('1', 'nummod'), (')', 'punct'), ('order', 'dobj'), (',', 'punct'), ('complexity', 'conj'), (',', 'punct'), ('specific', 'amod'), ('model', 'pobj'), ('posited', 'relcl'), ('learning', 'pcomp'), ('(', 'punct'), ('Step', 'pobj'), ('2', 'nummod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[end, ,], [,, consider], [consider, hierarchical], [hierarchical, set], [set, models], [models, increasing], [increasing, complexity], [complexity, address], [address, problem], [problem, selecting], [selecting, (], [(, Step], [Step, 1], [1, )], [), order], [order, ,], [,, complexity], [complexity, ,], [,, specific], [specific, model], [model, posited], [posited, learning], [learning, (], [(, Step], [Step, 2], [2, )], [), .]]

>> Trigrams: 
[[end, ,, consider], [,, consider, hierarchical], [consider, hierarchical, set], [hierarchical, set, models], [set, models, increasing], [models, increasing, complexity], [increasing, complexity, address], [complexity, address, problem], [address, problem, selecting], [problem, selecting, (], [selecting, (, Step], [(, Step, 1], [Step, 1, )], [1, ), order], [), order, ,], [order, ,, complexity], [,, complexity, ,], [complexity, ,, specific], [,, specific, model], [specific, model, posited], [model, posited, learning], [posited, learning, (], [learning, (, Step], [(, Step, 2], [Step, 2, )], [2, ), .]]

>> Noun Phrases are: 
[this end, we, a hierarchical set, models, increasing complexity, we, the problem, Step, the order, the complexity, the specific model, Step]

>> Named Entities are: 
[('1', 'CARDINAL'), ('2', 'CARDINAL')]


============================ Sentence 372 =============================

As an example of model order selection, one may fix a set of models including multi- layer networks of varying number of intermediate layers and focus on determining the number of layers. 


>> Tokens are: 
[example, model, order, selection, ,, fix, set, models, including, multi-, layer, networks, varying, number, intermediate, layers, focus, determining, number, layers, .] 

>> PoS Tags are: 
[('example', 'NOUN'), ('model', 'NOUN'), ('order', 'NOUN'), ('selection', 'NOUN'), (',', 'PUNCT'), ('fix', 'VERB'), ('set', 'NOUN'), ('models', 'NOUN'), ('including', 'VERB'), ('multi-', 'ADJ'), ('layer', 'NOUN'), ('networks', 'NOUN'), ('varying', 'VERB'), ('number', 'NOUN'), ('intermediate', 'ADJ'), ('layers', 'NOUN'), ('focus', 'VERB'), ('determining', 'VERB'), ('number', 'NOUN'), ('layers', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), ('model', 'compound'), ('order', 'compound'), ('selection', 'pobj'), (',', 'punct'), ('fix', 'ROOT'), ('set', 'dobj'), ('models', 'pobj'), ('including', 'prep'), ('multi-', 'amod'), ('layer', 'compound'), ('networks', 'pobj'), ('varying', 'amod'), ('number', 'pobj'), ('intermediate', 'amod'), ('layers', 'pobj'), ('focus', 'conj'), ('determining', 'pcomp'), ('number', 'dobj'), ('layers', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[example, model], [model, order], [order, selection], [selection, ,], [,, fix], [fix, set], [set, models], [models, including], [including, multi-], [multi-, layer], [layer, networks], [networks, varying], [varying, number], [number, intermediate], [intermediate, layers], [layers, focus], [focus, determining], [determining, number], [number, layers], [layers, .]]

>> Trigrams: 
[[example, model, order], [model, order, selection], [order, selection, ,], [selection, ,, fix], [,, fix, set], [fix, set, models], [set, models, including], [models, including, multi-], [including, multi-, layer], [multi-, layer, networks], [layer, networks, varying], [networks, varying, number], [varying, number, intermediate], [number, intermediate, layers], [intermediate, layers, focus], [layers, focus, determining], [focus, determining, number], [determining, number, layers], [number, layers, .]]

>> Noun Phrases are: 
[an example, model order selection, one, a set, models, multi- layer networks, varying number, intermediate layers, the number, layers]

>> Named Entities are: 
[]


============================ Sentence 373 =============================

It is emphasized that the scope of model selection goes much beyond model order selection, including the possible incorporation of domain knowledge and the tuning of the hyperparameters of the learning algorithm. 


>> Tokens are: 
[emphasized, scope, model, selection, goes, model, order, selection, ,, including, possible, incorporation, domain, knowledge, tuning, hyperparameters, learning, algorithm, .] 

>> PoS Tags are: 
[('emphasized', 'VERB'), ('scope', 'NOUN'), ('model', 'NOUN'), ('selection', 'NOUN'), ('goes', 'VERB'), ('model', 'NOUN'), ('order', 'NOUN'), ('selection', 'NOUN'), (',', 'PUNCT'), ('including', 'VERB'), ('possible', 'ADJ'), ('incorporation', 'NOUN'), ('domain', 'NOUN'), ('knowledge', 'NOUN'), ('tuning', 'NOUN'), ('hyperparameters', 'NOUN'), ('learning', 'NOUN'), ('algorithm', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('emphasized', 'ROOT'), ('scope', 'nsubj'), ('model', 'compound'), ('selection', 'pobj'), ('goes', 'ccomp'), ('model', 'compound'), ('order', 'compound'), ('selection', 'pobj'), (',', 'punct'), ('including', 'prep'), ('possible', 'amod'), ('incorporation', 'pobj'), ('domain', 'compound'), ('knowledge', 'pobj'), ('tuning', 'conj'), ('hyperparameters', 'pobj'), ('learning', 'amod'), ('algorithm', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[emphasized, scope], [scope, model], [model, selection], [selection, goes], [goes, model], [model, order], [order, selection], [selection, ,], [,, including], [including, possible], [possible, incorporation], [incorporation, domain], [domain, knowledge], [knowledge, tuning], [tuning, hyperparameters], [hyperparameters, learning], [learning, algorithm], [algorithm, .]]

>> Trigrams: 
[[emphasized, scope, model], [scope, model, selection], [model, selection, goes], [selection, goes, model], [goes, model, order], [model, order, selection], [order, selection, ,], [selection, ,, including], [,, including, possible], [including, possible, incorporation], [possible, incorporation, domain], [incorporation, domain, knowledge], [domain, knowledge, tuning], [knowledge, tuning, hyperparameters], [tuning, hyperparameters, learning], [hyperparameters, learning, algorithm], [learning, algorithm, .]]

>> Noun Phrases are: 
[It, the scope, model selection, model order selection, the possible incorporation, domain knowledge, the tuning, the hyperparameters, the learning algorithm]

>> Named Entities are: 
[]


============================ Sentence 374 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 375 =============================

For concreteness, we focus on the regression problem illustrated in Fig. 


>> Tokens are: 
[concreteness, ,, focus, regression, problem, illustrated, Fig, .] 

>> PoS Tags are: 
[('concreteness', 'NOUN'), (',', 'PUNCT'), ('focus', 'VERB'), ('regression', 'NOUN'), ('problem', 'NOUN'), ('illustrated', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('concreteness', 'pobj'), (',', 'punct'), ('focus', 'ROOT'), ('regression', 'compound'), ('problem', 'pobj'), ('illustrated', 'acl'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[concreteness, ,], [,, focus], [focus, regression], [regression, problem], [problem, illustrated], [illustrated, Fig], [Fig, .]]

>> Trigrams: 
[[concreteness, ,, focus], [,, focus, regression], [focus, regression, problem], [regression, problem, illustrated], [problem, illustrated, Fig], [illustrated, Fig, .]]

>> Noun Phrases are: 
[concreteness, we, the regression problem, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 376 =============================

5 and assume a set of discriminative models p(t|x,w) under which the output t is distributed as  M∑ m=0  wmx m +N (0, 1). 


>> Tokens are: 
[5, assume, set, discriminative, models, p(t|x, ,, w, ), output, t, distributed,  , M∑, m=0,  , wmx, m, +, N, (, 0, ,, 1, ), .] 

>> PoS Tags are: 
[('5', 'NUM'), ('assume', 'VERB'), ('set', 'NOUN'), ('discriminative', 'NOUN'), ('models', 'NOUN'), ('p(t|x', 'X'), (',', 'PUNCT'), ('w', 'ADP'), (')', 'PUNCT'), ('output', 'NOUN'), ('t', 'NOUN'), ('distributed', 'VERB'), (' ', 'SPACE'), ('M∑', 'PROPN'), ('m=0', 'X'), (' ', 'SPACE'), ('wmx', 'PROPN'), ('m', 'VERB'), ('+', 'ADV'), ('N', 'NUM'), ('(', 'PUNCT'), ('0', 'NUM'), (',', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('5', 'nummod'), ('assume', 'conj'), ('set', 'dobj'), ('discriminative', 'amod'), ('models', 'pobj'), ('p(t|x', 'npadvmod'), (',', 'punct'), ('w', 'prep'), (')', 'punct'), ('output', 'compound'), ('t', 'nsubjpass'), ('distributed', 'relcl'), (' ', 'nmod'), ('M∑', 'nmod'), ('m=0', 'punct'), (' ', 'compound'), ('wmx', 'pobj'), ('m', 'conj'), ('+', 'prep'), ('N', 'ROOT'), ('(', 'punct'), ('0', 'prep'), (',', 'punct'), ('1', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[5, assume], [assume, set], [set, discriminative], [discriminative, models], [models, p(t|x], [p(t|x, ,], [,, w], [w, )], [), output], [output, t], [t, distributed], [distributed,  ], [ , M∑], [M∑, m=0], [m=0,  ], [ , wmx], [wmx, m], [m, +], [+, N], [N, (], [(, 0], [0, ,], [,, 1], [1, )], [), .]]

>> Trigrams: 
[[5, assume, set], [assume, set, discriminative], [set, discriminative, models], [discriminative, models, p(t|x], [models, p(t|x, ,], [p(t|x, ,, w], [,, w, )], [w, ), output], [), output, t], [output, t, distributed], [t, distributed,  ], [distributed,  , M∑], [ , M∑, m=0], [M∑, m=0,  ], [m=0,  , wmx], [ , wmx, m], [wmx, m, +], [m, +, N], [+, N, (], [N, (, 0], [(, 0, ,], [0, ,, 1], [,, 1, )], [1, ), .]]

>> Noun Phrases are: 
[a set, discriminative models, the output t,  M∑ m=0  wmx]

>> Named Entities are: 
[('5', 'CARDINAL'), ('1', 'CARDINAL')]


============================ Sentence 377 =============================

(11)  9    0 0.2 


>> Tokens are: 
[(, 11, ),  , 9,    , 0, 0.2] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('11', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE'), ('9', 'NUM'), ('   ', 'SPACE'), ('0', 'NUM'), ('0.2', 'NUM')] 

>> Dependency Tags are: 
[('(', 'punct'), ('11', 'meta'), (')', 'punct'), (' ', 'ROOT'), ('9', 'compound'), ('   ', 'dobj'), ('0', 'punct'), ('0.2', 'prep')]

>> Bigrams: 
[[(, 11], [11, )], [),  ], [ , 9], [9,    ], [   , 0], [0, 0.2]]

>> Trigrams: 
[[(, 11, )], [11, ),  ], [),  , 9], [ , 9,    ], [9,    , 0], [   , 0, 0.2]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('11', 'CARDINAL'), ('9', 'CARDINAL')]


============================ Sentence 378 =============================

0.4 0.6 0.8 1 -3  -2  -1  0  1  2  3  = 9M  M= 1  M= 3  Fig. 


>> Tokens are: 
[0.4, 0.6, 0.8, 1, -3,  , -2,  , -1,  , 0,  , 1,  , 2,  , 3,  , =, 9, M,  , M=, 1,  , M=, 3,  , Fig, .] 

>> PoS Tags are: 
[('0.4', 'NUM'), ('0.6', 'NUM'), ('0.8', 'NUM'), ('1', 'NUM'), ('-3', 'PUNCT'), (' ', 'SPACE'), ('-2', 'PUNCT'), (' ', 'SPACE'), ('-1', 'PUNCT'), (' ', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE'), ('1', 'NUM'), (' ', 'SPACE'), ('2', 'NUM'), (' ', 'SPACE'), ('3', 'NUM'), (' ', 'SPACE'), ('=', 'SYM'), ('9', 'NUM'), ('M', 'PROPN'), (' ', 'SPACE'), ('M=', 'PROPN'), ('1', 'NUM'), (' ', 'SPACE'), ('M=', 'PROPN'), ('3', 'NUM'), (' ', 'SPACE'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('0.4', 'compound'), ('0.6', 'quantmod'), ('0.8', 'compound'), ('1', 'ROOT'), ('-3', 'punct'), (' ', 'appos'), ('-2', 'punct'), (' ', 'appos'), ('-1', 'punct'), (' ', 'punct'), ('0', 'punct'), (' ', 'npadvmod'), ('1', 'nummod'), (' ', 'npadvmod'), ('2', 'nummod'), (' ', 'appos'), ('3', 'nummod'), (' ', 'appos'), ('=', 'punct'), ('9', 'compound'), ('M', 'nsubj'), (' ', 'appos'), ('M=', 'quantmod'), ('1', 'nummod'), (' ', 'npadvmod'), ('M=', 'npadvmod'), ('3', 'punct'), (' ', 'punct'), ('Fig', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[0.4, 0.6], [0.6, 0.8], [0.8, 1], [1, -3], [-3,  ], [ , -2], [-2,  ], [ , -1], [-1,  ], [ , 0], [0,  ], [ , 1], [1,  ], [ , 2], [2,  ], [ , 3], [3,  ], [ , =], [=, 9], [9, M], [M,  ], [ , M=], [M=, 1], [1,  ], [ , M=], [M=, 3], [3,  ], [ , Fig], [Fig, .]]

>> Trigrams: 
[[0.4, 0.6, 0.8], [0.6, 0.8, 1], [0.8, 1, -3], [1, -3,  ], [-3,  , -2], [ , -2,  ], [-2,  , -1], [ , -1,  ], [-1,  , 0], [ , 0,  ], [0,  , 1], [ , 1,  ], [1,  , 2], [ , 2,  ], [2,  , 3], [ , 3,  ], [3,  , =], [ , =, 9], [=, 9, M], [9, M,  ], [M,  , M=], [ , M=, 1], [M=, 1,  ], [1,  , M=], [ , M=, 3], [M=, 3,  ], [3,  , Fig], [ , Fig, .]]

>> Noun Phrases are: 
[9M]

>> Named Entities are: 
[('0', 'CARDINAL'), ('2', 'CARDINAL'), ('3', 'CARDINAL'), ('Fig', 'PERSON')]


============================ Sentence 379 =============================

9. 


>> Tokens are: 
[9, .] 

>> PoS Tags are: 
[('9', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('9', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[9, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('9', 'CARDINAL')]


============================ Sentence 380 =============================

Training set in Fig. 


>> Tokens are: 
[Training, set, Fig, .] 

>> PoS Tags are: 
[('Training', 'NOUN'), ('set', 'NOUN'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Training', 'ROOT'), ('set', 'acl'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Training, set], [set, Fig], [Fig, .]]

>> Trigrams: 
[[Training, set, Fig], [set, Fig, .]]

>> Noun Phrases are: 
[Training, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 381 =============================

5, along with a predictor trained by using the discriminative model (11) and ML for different values of the model order M . 


>> Tokens are: 
[5, ,, predictor, trained, discriminative, model, (, 11, ), ML, different, values, model, order, M, .] 

>> PoS Tags are: 
[('5', 'NUM'), (',', 'PUNCT'), ('predictor', 'NOUN'), ('trained', 'VERB'), ('discriminative', 'ADJ'), ('model', 'NOUN'), ('(', 'PUNCT'), ('11', 'NUM'), (')', 'PUNCT'), ('ML', 'PROPN'), ('different', 'ADJ'), ('values', 'NOUN'), ('model', 'NOUN'), ('order', 'NOUN'), ('M', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('5', 'ROOT'), (',', 'punct'), ('predictor', 'pobj'), ('trained', 'acl'), ('discriminative', 'amod'), ('model', 'dobj'), ('(', 'punct'), ('11', 'appos'), (')', 'punct'), ('ML', 'conj'), ('different', 'amod'), ('values', 'pobj'), ('model', 'compound'), ('order', 'compound'), ('M', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[5, ,], [,, predictor], [predictor, trained], [trained, discriminative], [discriminative, model], [model, (], [(, 11], [11, )], [), ML], [ML, different], [different, values], [values, model], [model, order], [order, M], [M, .]]

>> Trigrams: 
[[5, ,, predictor], [,, predictor, trained], [predictor, trained, discriminative], [trained, discriminative, model], [discriminative, model, (], [model, (, 11], [(, 11, )], [11, ), ML], [), ML, different], [ML, different, values], [different, values, model], [values, model, order], [model, order, M], [order, M, .]]

>> Noun Phrases are: 
[a predictor, the discriminative model, ML, different values, the model order M]

>> Named Entities are: 
[('5', 'CARDINAL'), ('11', 'CARDINAL'), ('ML', 'ORG')]


============================ Sentence 382 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 383 =============================

In words, the output t is given by a polynomial function of order M of the input x plus zero-mean Gaussian noise of power equal to one. 


>> Tokens are: 
[words, ,, output, t, given, polynomial, function, order, M, input, x, plus, zero, -, mean, Gaussian, noise, power, equal, .] 

>> PoS Tags are: 
[('words', 'NOUN'), (',', 'PUNCT'), ('output', 'NOUN'), ('t', 'NOUN'), ('given', 'VERB'), ('polynomial', 'ADJ'), ('function', 'NOUN'), ('order', 'NOUN'), ('M', 'PROPN'), ('input', 'NOUN'), ('x', 'SYM'), ('plus', 'CCONJ'), ('zero', 'NUM'), ('-', 'PUNCT'), ('mean', 'NOUN'), ('Gaussian', 'ADJ'), ('noise', 'NOUN'), ('power', 'NOUN'), ('equal', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('words', 'pobj'), (',', 'punct'), ('output', 'compound'), ('t', 'nsubjpass'), ('given', 'ROOT'), ('polynomial', 'amod'), ('function', 'pobj'), ('order', 'compound'), ('M', 'pobj'), ('input', 'pobj'), ('x', 'punct'), ('plus', 'cc'), ('zero', 'nummod'), ('-', 'punct'), ('mean', 'conj'), ('Gaussian', 'compound'), ('noise', 'conj'), ('power', 'pobj'), ('equal', 'amod'), ('.', 'punct')]

>> Bigrams: 
[[words, ,], [,, output], [output, t], [t, given], [given, polynomial], [polynomial, function], [function, order], [order, M], [M, input], [input, x], [x, plus], [plus, zero], [zero, -], [-, mean], [mean, Gaussian], [Gaussian, noise], [noise, power], [power, equal], [equal, .]]

>> Trigrams: 
[[words, ,, output], [,, output, t], [output, t, given], [t, given, polynomial], [given, polynomial, function], [polynomial, function, order], [function, order, M], [order, M, input], [M, input, x], [input, x, plus], [x, plus, zero], [plus, zero, -], [zero, -, mean], [-, mean, Gaussian], [mean, Gaussian, noise], [Gaussian, noise, power], [noise, power, equal], [power, equal, .]]

>> Noun Phrases are: 
[words, the output t, a polynomial function, order M, the input, zero-mean, Gaussian noise, power]

>> Named Entities are: 
[('zero', 'CARDINAL'), ('Gaussian', 'PERSON')]


============================ Sentence 384 =============================

The learnable parameter vector θ is given by the weights w = [w0, ..., wM−1]T . 


>> Tokens are: 
[learnable, parameter, vector, θ, given, weights, w, =, [, w0, ,, ..., ,, wM−1]T, .] 

>> PoS Tags are: 
[('learnable', 'ADJ'), ('parameter', 'NOUN'), ('vector', 'NOUN'), ('θ', 'NOUN'), ('given', 'VERB'), ('weights', 'NOUN'), ('w', 'ADP'), ('=', 'PUNCT'), ('[', 'PUNCT'), ('w0', 'PROPN'), (',', 'PUNCT'), ('...', 'PUNCT'), (',', 'PUNCT'), ('wM−1]T', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('learnable', 'amod'), ('parameter', 'compound'), ('vector', 'nsubjpass'), ('θ', 'nsubjpass'), ('given', 'ROOT'), ('weights', 'pobj'), ('w', 'prep'), ('=', 'pobj'), ('[', 'punct'), ('w0', 'npadvmod'), (',', 'punct'), ('...', 'punct'), (',', 'punct'), ('wM−1]T', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[learnable, parameter], [parameter, vector], [vector, θ], [θ, given], [given, weights], [weights, w], [w, =], [=, [], [[, w0], [w0, ,], [,, ...], [..., ,], [,, wM−1]T], [wM−1]T, .]]

>> Trigrams: 
[[learnable, parameter, vector], [parameter, vector, θ], [vector, θ, given], [θ, given, weights], [given, weights, w], [weights, w, =], [w, =, [], [=, [, w0], [[, w0, ,], [w0, ,, ...], [,, ..., ,], [..., ,, wM−1]T], [,, wM−1]T, .]]

>> Noun Phrases are: 
[The learnable parameter vector, θ, the weights, wM−1]T]

>> Named Entities are: 
[]


============================ Sentence 385 =============================

Model selection, to be carried out in Step 1, amounts to the choice of the model order M .   


>> Tokens are: 
[Model, selection, ,, carried, Step, 1, ,, amounts, choice, model, order, M, .,  ] 

>> PoS Tags are: 
[('Model', 'NOUN'), ('selection', 'NOUN'), (',', 'PUNCT'), ('carried', 'VERB'), ('Step', 'PROPN'), ('1', 'NUM'), (',', 'PUNCT'), ('amounts', 'VERB'), ('choice', 'NOUN'), ('model', 'NOUN'), ('order', 'NOUN'), ('M', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Model', 'compound'), ('selection', 'nsubjpass'), (',', 'punct'), ('carried', 'ROOT'), ('Step', 'pobj'), ('1', 'nummod'), (',', 'punct'), ('amounts', 'conj'), ('choice', 'pobj'), ('model', 'compound'), ('order', 'compound'), ('M', 'pobj'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Model, selection], [selection, ,], [,, carried], [carried, Step], [Step, 1], [1, ,], [,, amounts], [amounts, choice], [choice, model], [model, order], [order, M], [M, .], [.,  ]]

>> Trigrams: 
[[Model, selection, ,], [selection, ,, carried], [,, carried, Step], [carried, Step, 1], [Step, 1, ,], [1, ,, amounts], [,, amounts, choice], [amounts, choice, model], [choice, model, order], [model, order, M], [order, M, .], [M, .,  ]]

>> Noun Phrases are: 
[Model selection, Step, the choice, the model order M]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 386 =============================

Having chosen M in Step 1, the weights w can be learned in Step 2 using ML, and then the optimal pre- dictor can be obtained for inference in Step 3. 


>> Tokens are: 
[Having, chosen, M, Step, 1, ,, weights, w, learned, Step, 2, ML, ,, optimal, pre-, dictor, obtained, inference, Step, 3, .] 

>> PoS Tags are: 
[('Having', 'AUX'), ('chosen', 'VERB'), ('M', 'PROPN'), ('Step', 'PROPN'), ('1', 'NUM'), (',', 'PUNCT'), ('weights', 'NOUN'), ('w', 'ADP'), ('learned', 'VERB'), ('Step', 'PROPN'), ('2', 'NUM'), ('ML', 'PROPN'), (',', 'PUNCT'), ('optimal', 'ADJ'), ('pre-', 'NOUN'), ('dictor', 'NOUN'), ('obtained', 'VERB'), ('inference', 'NOUN'), ('Step', 'PROPN'), ('3', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Having', 'aux'), ('chosen', 'advcl'), ('M', 'dobj'), ('Step', 'pobj'), ('1', 'nummod'), (',', 'punct'), ('weights', 'nsubjpass'), ('w', 'nsubjpass'), ('learned', 'ROOT'), ('Step', 'pobj'), ('2', 'nummod'), ('ML', 'dobj'), (',', 'punct'), ('optimal', 'amod'), ('pre-', 'compound'), ('dictor', 'nsubjpass'), ('obtained', 'conj'), ('inference', 'pobj'), ('Step', 'pobj'), ('3', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[Having, chosen], [chosen, M], [M, Step], [Step, 1], [1, ,], [,, weights], [weights, w], [w, learned], [learned, Step], [Step, 2], [2, ML], [ML, ,], [,, optimal], [optimal, pre-], [pre-, dictor], [dictor, obtained], [obtained, inference], [inference, Step], [Step, 3], [3, .]]

>> Trigrams: 
[[Having, chosen, M], [chosen, M, Step], [M, Step, 1], [Step, 1, ,], [1, ,, weights], [,, weights, w], [weights, w, learned], [w, learned, Step], [learned, Step, 2], [Step, 2, ML], [2, ML, ,], [ML, ,, optimal], [,, optimal, pre-], [optimal, pre-, dictor], [pre-, dictor, obtained], [dictor, obtained, inference], [obtained, inference, Step], [inference, Step, 3], [Step, 3, .]]

>> Noun Phrases are: 
[M, Step, the weights, Step, ML, the optimal pre- dictor, inference, Step]

>> Named Entities are: 
[('1', 'CARDINAL'), ('2', 'CARDINAL'), ('ML', 'ORG'), ('3', 'CARDINAL')]


============================ Sentence 387 =============================

Assuming the quadratic loss, the optimal predictor is given by the posterior mean t̂(x) =   


>> Tokens are: 
[Assuming, quadratic, loss, ,, optimal, predictor, given, posterior, mean, t̂(x, ), =,  ] 

>> PoS Tags are: 
[('Assuming', 'VERB'), ('quadratic', 'ADJ'), ('loss', 'NOUN'), (',', 'PUNCT'), ('optimal', 'ADJ'), ('predictor', 'NOUN'), ('given', 'VERB'), ('posterior', 'ADJ'), ('mean', 'ADJ'), ('t̂(x', 'NOUN'), (')', 'PUNCT'), ('=', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Assuming', 'advcl'), ('quadratic', 'amod'), ('loss', 'dobj'), (',', 'punct'), ('optimal', 'amod'), ('predictor', 'nsubjpass'), ('given', 'ROOT'), ('posterior', 'amod'), ('mean', 'amod'), ('t̂(x', 'pobj'), (')', 'punct'), ('=', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Assuming, quadratic], [quadratic, loss], [loss, ,], [,, optimal], [optimal, predictor], [predictor, given], [given, posterior], [posterior, mean], [mean, t̂(x], [t̂(x, )], [), =], [=,  ]]

>> Trigrams: 
[[Assuming, quadratic, loss], [quadratic, loss, ,], [loss, ,, optimal], [,, optimal, predictor], [optimal, predictor, given], [predictor, given, posterior], [given, posterior, mean], [posterior, mean, t̂(x], [mean, t̂(x, )], [t̂(x, ), =], [), =,  ]]

>> Noun Phrases are: 
[the quadratic loss, the optimal predictor, the posterior mean t̂(x]

>> Named Entities are: 
[]


============================ Sentence 388 =============================

∑M m=0wmx  m for the learned parameters w. This predictor is plotted in Fig. 


>> Tokens are: 
[∑M, m=0wmx,  , m, learned, parameters, w., predictor, plotted, Fig, .] 

>> PoS Tags are: 
[('∑M', 'PROPN'), ('m=0wmx', 'PROPN'), (' ', 'SPACE'), ('m', 'VERB'), ('learned', 'ADJ'), ('parameters', 'NOUN'), ('w.', 'NOUN'), ('predictor', 'NOUN'), ('plotted', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('∑M', 'compound'), ('m=0wmx', 'nsubj'), (' ', 'appos'), ('m', 'appos'), ('learned', 'amod'), ('parameters', 'pobj'), ('w.', 'npadvmod'), ('predictor', 'nsubjpass'), ('plotted', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[∑M, m=0wmx], [m=0wmx,  ], [ , m], [m, learned], [learned, parameters], [parameters, w.], [w., predictor], [predictor, plotted], [plotted, Fig], [Fig, .]]

>> Trigrams: 
[[∑M, m=0wmx,  ], [m=0wmx,  , m], [ , m, learned], [m, learned, parameters], [learned, parameters, w.], [parameters, w., predictor], [w., predictor, plotted], [predictor, plotted, Fig], [plotted, Fig, .]]

>> Noun Phrases are: 
[∑M m=0wmx, the learned parameters, This predictor, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 389 =============================

9 for different values of M , along with the training set of Fig. 


>> Tokens are: 
[9, different, values, M, ,, training, set, Fig, .] 

>> PoS Tags are: 
[('9', 'NUM'), ('different', 'ADJ'), ('values', 'NOUN'), ('M', 'NOUN'), (',', 'PUNCT'), ('training', 'NOUN'), ('set', 'NOUN'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('9', 'ROOT'), ('different', 'amod'), ('values', 'pobj'), ('M', 'pobj'), (',', 'punct'), ('training', 'compound'), ('set', 'pobj'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[9, different], [different, values], [values, M], [M, ,], [,, training], [training, set], [set, Fig], [Fig, .]]

>> Trigrams: 
[[9, different, values], [different, values, M], [values, M, ,], [M, ,, training], [,, training, set], [training, set, Fig], [set, Fig, .]]

>> Noun Phrases are: 
[different values, M, the training set, Fig]

>> Named Entities are: 
[('9', 'CARDINAL'), ('Fig', 'ORG')]


============================ Sentence 390 =============================

5. 


>> Tokens are: 
[5, .] 

>> PoS Tags are: 
[('5', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('5', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[5, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('5', 'CARDINAL')]


============================ Sentence 391 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 392 =============================

With M = 1, the predictor t̂(x) is seen to underfit the training data. 


>> Tokens are: 
[M, =, 1, ,, predictor, t̂(x, ), seen, underfit, training, data, .] 

>> PoS Tags are: 
[('M', 'PROPN'), ('=', 'SYM'), ('1', 'NUM'), (',', 'PUNCT'), ('predictor', 'NOUN'), ('t̂(x', 'NOUN'), (')', 'PUNCT'), ('seen', 'VERB'), ('underfit', 'VERB'), ('training', 'NOUN'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('M', 'nsubj'), ('=', 'punct'), ('1', 'pobj'), (',', 'punct'), ('predictor', 'nsubjpass'), ('t̂(x', 'advmod'), (')', 'punct'), ('seen', 'ROOT'), ('underfit', 'xcomp'), ('training', 'compound'), ('data', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[M, =], [=, 1], [1, ,], [,, predictor], [predictor, t̂(x], [t̂(x, )], [), seen], [seen, underfit], [underfit, training], [training, data], [data, .]]

>> Trigrams: 
[[M, =, 1], [=, 1, ,], [1, ,, predictor], [,, predictor, t̂(x], [predictor, t̂(x, )], [t̂(x, ), seen], [), seen, underfit], [seen, underfit, training], [underfit, training, data], [training, data, .]]

>> Noun Phrases are: 
[M, the predictor, the training data]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 393 =============================

This is in the sense that the model is not rich enough to capture the variations present in the training data, and, as a result, we obtain a large training loss  LD(w) = 


>> Tokens are: 
[sense, model, rich, capture, variations, present, training, data, ,, ,, result, ,, obtain, large, training, loss,  , LD(w, ), =] 

>> PoS Tags are: 
[('sense', 'NOUN'), ('model', 'NOUN'), ('rich', 'ADJ'), ('capture', 'VERB'), ('variations', 'NOUN'), ('present', 'ADJ'), ('training', 'NOUN'), ('data', 'NOUN'), (',', 'PUNCT'), (',', 'PUNCT'), ('result', 'NOUN'), (',', 'PUNCT'), ('obtain', 'VERB'), ('large', 'ADJ'), ('training', 'NOUN'), ('loss', 'NOUN'), (' ', 'SPACE'), ('LD(w', 'PROPN'), (')', 'PUNCT'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('sense', 'pobj'), ('model', 'nsubj'), ('rich', 'acomp'), ('capture', 'xcomp'), ('variations', 'dobj'), ('present', 'amod'), ('training', 'compound'), ('data', 'pobj'), (',', 'punct'), (',', 'punct'), ('result', 'pobj'), (',', 'punct'), ('obtain', 'conj'), ('large', 'amod'), ('training', 'compound'), ('loss', 'dobj'), (' ', 'compound'), ('LD(w', 'appos'), (')', 'punct'), ('=', 'punct')]

>> Bigrams: 
[[sense, model], [model, rich], [rich, capture], [capture, variations], [variations, present], [present, training], [training, data], [data, ,], [,, ,], [,, result], [result, ,], [,, obtain], [obtain, large], [large, training], [training, loss], [loss,  ], [ , LD(w], [LD(w, )], [), =]]

>> Trigrams: 
[[sense, model, rich], [model, rich, capture], [rich, capture, variations], [capture, variations, present], [variations, present, training], [present, training, data], [training, data, ,], [data, ,, ,], [,, ,, result], [,, result, ,], [result, ,, obtain], [,, obtain, large], [obtain, large, training], [large, training, loss], [training, loss,  ], [loss,  , LD(w], [ , LD(w, )], [LD(w, ), =]]

>> Noun Phrases are: 
[the sense, the model, the variations, the training data, a result, we, a large training loss,  LD(w]

>> Named Entities are: 
[]


============================ Sentence 394 =============================

1  N  N∑ n=1  (tn − t̂(xn))2. 


>> Tokens are: 
[1,  , N,  , N∑, n=1,  , (, tn, −, t̂(xn))2, .] 

>> PoS Tags are: 
[('1', 'NUM'), (' ', 'SPACE'), ('N', 'PROPN'), (' ', 'SPACE'), ('N∑', 'PROPN'), ('n=1', 'PROPN'), (' ', 'SPACE'), ('(', 'PUNCT'), ('tn', 'ADP'), ('−', 'PROPN'), ('t̂(xn))2', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1', 'nummod'), (' ', 'ROOT'), ('N', 'npadvmod'), (' ', 'appos'), ('N∑', 'npadvmod'), ('n=1', 'punct'), (' ', 'appos'), ('(', 'punct'), ('tn', 'advmod'), ('−', 'compound'), ('t̂(xn))2', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[1,  ], [ , N], [N,  ], [ , N∑], [N∑, n=1], [n=1,  ], [ , (], [(, tn], [tn, −], [−, t̂(xn))2], [t̂(xn))2, .]]

>> Trigrams: 
[[1,  , N], [ , N,  ], [N,  , N∑], [ , N∑, n=1], [N∑, n=1,  ], [n=1,  , (], [ , (, tn], [(, tn, −], [tn, −, t̂(xn))2], [−, t̂(xn))2, .]]

>> Noun Phrases are: 
[tn − t̂(xn))2]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 395 =============================

(12)   


>> Tokens are: 
[(, 12, ),  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('12', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('12', 'ROOT'), (')', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[(, 12], [12, )], [),  ]]

>> Trigrams: 
[[(, 12, )], [12, ),  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('12', 'CARDINAL')]


============================ Sentence 396 =============================

The training loss measures the quality of the predictor defined by weights w on the points in the training set. 


>> Tokens are: 
[training, loss, measures, quality, predictor, defined, weights, w, points, training, set, .] 

>> PoS Tags are: 
[('training', 'NOUN'), ('loss', 'NOUN'), ('measures', 'VERB'), ('quality', 'NOUN'), ('predictor', 'NOUN'), ('defined', 'VERB'), ('weights', 'NOUN'), ('w', 'ADP'), ('points', 'NOUN'), ('training', 'NOUN'), ('set', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('training', 'compound'), ('loss', 'compound'), ('measures', 'ROOT'), ('quality', 'dobj'), ('predictor', 'pobj'), ('defined', 'acl'), ('weights', 'pobj'), ('w', 'prep'), ('points', 'pobj'), ('training', 'compound'), ('set', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[training, loss], [loss, measures], [measures, quality], [quality, predictor], [predictor, defined], [defined, weights], [weights, w], [w, points], [points, training], [training, set], [set, .]]

>> Trigrams: 
[[training, loss, measures], [loss, measures, quality], [measures, quality, predictor], [quality, predictor, defined], [predictor, defined, weights], [defined, weights, w], [weights, w, points], [w, points, training], [points, training, set], [training, set, .]]

>> Noun Phrases are: 
[the quality, the predictor, weights, the points, the training set]

>> Named Entities are: 
[]


============================ Sentence 397 =============================

In contrast, with M = 9, the predictor fits well the training data – so much so that it appears to overfit it. 


>> Tokens are: 
[contrast, ,, M, =, 9, ,, predictor, fits, training, data, –, appears, overfit, .] 

>> PoS Tags are: 
[('contrast', 'NOUN'), (',', 'PUNCT'), ('M', 'PROPN'), ('=', 'SYM'), ('9', 'NUM'), (',', 'PUNCT'), ('predictor', 'NOUN'), ('fits', 'VERB'), ('training', 'NOUN'), ('data', 'NOUN'), ('–', 'PUNCT'), ('appears', 'VERB'), ('overfit', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('contrast', 'pobj'), (',', 'punct'), ('M', 'nsubj'), ('=', 'punct'), ('9', 'pobj'), (',', 'punct'), ('predictor', 'nsubj'), ('fits', 'ROOT'), ('training', 'compound'), ('data', 'dobj'), ('–', 'punct'), ('appears', 'advcl'), ('overfit', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[contrast, ,], [,, M], [M, =], [=, 9], [9, ,], [,, predictor], [predictor, fits], [fits, training], [training, data], [data, –], [–, appears], [appears, overfit], [overfit, .]]

>> Trigrams: 
[[contrast, ,, M], [,, M, =], [M, =, 9], [=, 9, ,], [9, ,, predictor], [,, predictor, fits], [predictor, fits, training], [fits, training, data], [training, data, –], [data, –, appears], [–, appears, overfit], [appears, overfit, .]]

>> Noun Phrases are: 
[contrast, M, the predictor, the training data, it, it]

>> Named Entities are: 
[('9', 'CARDINAL')]


============================ Sentence 398 =============================

In other words, the model is too rich and, in order to account for the observations in the training set, it appears to yield inaccurate predictions outside it. 


>> Tokens are: 
[words, ,, model, rich, ,, order, account, observations, training, set, ,, appears, yield, inaccurate, predictions, outside, .] 

>> PoS Tags are: 
[('words', 'NOUN'), (',', 'PUNCT'), ('model', 'NOUN'), ('rich', 'ADJ'), (',', 'PUNCT'), ('order', 'NOUN'), ('account', 'VERB'), ('observations', 'NOUN'), ('training', 'NOUN'), ('set', 'NOUN'), (',', 'PUNCT'), ('appears', 'VERB'), ('yield', 'VERB'), ('inaccurate', 'ADJ'), ('predictions', 'NOUN'), ('outside', 'ADP'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('words', 'pobj'), (',', 'punct'), ('model', 'nsubj'), ('rich', 'acomp'), (',', 'punct'), ('order', 'pobj'), ('account', 'acl'), ('observations', 'pobj'), ('training', 'compound'), ('set', 'pobj'), (',', 'punct'), ('appears', 'conj'), ('yield', 'xcomp'), ('inaccurate', 'amod'), ('predictions', 'dobj'), ('outside', 'prep'), ('.', 'punct')]

>> Bigrams: 
[[words, ,], [,, model], [model, rich], [rich, ,], [,, order], [order, account], [account, observations], [observations, training], [training, set], [set, ,], [,, appears], [appears, yield], [yield, inaccurate], [inaccurate, predictions], [predictions, outside], [outside, .]]

>> Trigrams: 
[[words, ,, model], [,, model, rich], [model, rich, ,], [rich, ,, order], [,, order, account], [order, account, observations], [account, observations, training], [observations, training, set], [training, set, ,], [set, ,, appears], [,, appears, yield], [appears, yield, inaccurate], [yield, inaccurate, predictions], [inaccurate, predictions, outside], [predictions, outside, .]]

>> Noun Phrases are: 
[other words, the model, order, the observations, the training set, it, inaccurate predictions, it]

>> Named Entities are: 
[]


============================ Sentence 399 =============================

As a compromise between underfitting and overfitting, the selection M = 3 seems to be preferable. 


>> Tokens are: 
[compromise, underfitting, overfitting, ,, selection, M, =, 3, preferable, .] 

>> PoS Tags are: 
[('compromise', 'NOUN'), ('underfitting', 'VERB'), ('overfitting', 'VERB'), (',', 'PUNCT'), ('selection', 'NOUN'), ('M', 'PROPN'), ('=', 'SYM'), ('3', 'NUM'), ('preferable', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('compromise', 'pobj'), ('underfitting', 'pobj'), ('overfitting', 'conj'), (',', 'punct'), ('selection', 'compound'), ('M', 'compound'), ('=', 'punct'), ('3', 'nsubj'), ('preferable', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[compromise, underfitting], [underfitting, overfitting], [overfitting, ,], [,, selection], [selection, M], [M, =], [=, 3], [3, preferable], [preferable, .]]

>> Trigrams: 
[[compromise, underfitting, overfitting], [underfitting, overfitting, ,], [overfitting, ,, selection], [,, selection, M], [selection, M, =], [M, =, 3], [=, 3, preferable], [3, preferable, .]]

>> Noun Phrases are: 
[a compromise]

>> Named Entities are: 
[('3', 'CARDINAL')]


============================ Sentence 400 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 401 =============================

As implied by the discussion above, underfitting can be detected by observing solely the training data D via the evaluation of the training loss (12). 


>> Tokens are: 
[implied, discussion, ,, underfitting, detected, observing, solely, training, data, D, evaluation, training, loss, (, 12, ), .] 

>> PoS Tags are: 
[('implied', 'VERB'), ('discussion', 'NOUN'), (',', 'PUNCT'), ('underfitting', 'NOUN'), ('detected', 'VERB'), ('observing', 'VERB'), ('solely', 'ADV'), ('training', 'NOUN'), ('data', 'NOUN'), ('D', 'PROPN'), ('evaluation', 'NOUN'), ('training', 'NOUN'), ('loss', 'NOUN'), ('(', 'PUNCT'), ('12', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('implied', 'advcl'), ('discussion', 'pobj'), (',', 'punct'), ('underfitting', 'nsubjpass'), ('detected', 'ROOT'), ('observing', 'pcomp'), ('solely', 'advmod'), ('training', 'compound'), ('data', 'dobj'), ('D', 'dobj'), ('evaluation', 'pobj'), ('training', 'compound'), ('loss', 'pobj'), ('(', 'punct'), ('12', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[implied, discussion], [discussion, ,], [,, underfitting], [underfitting, detected], [detected, observing], [observing, solely], [solely, training], [training, data], [data, D], [D, evaluation], [evaluation, training], [training, loss], [loss, (], [(, 12], [12, )], [), .]]

>> Trigrams: 
[[implied, discussion, ,], [discussion, ,, underfitting], [,, underfitting, detected], [underfitting, detected, observing], [detected, observing, solely], [observing, solely, training], [solely, training, data], [training, data, D], [data, D, evaluation], [D, evaluation, training], [evaluation, training, loss], [training, loss, (], [loss, (, 12], [(, 12, )], [12, ), .]]

>> Noun Phrases are: 
[the discussion, underfitting, the training data, D, the evaluation, the training loss]

>> Named Entities are: 
[('12', 'CARDINAL')]


============================ Sentence 402 =============================

In contrast, over-  fitting cannot be ascertained on the basis of the training data as it refers to the performance of the predictor out- side D. 


>> Tokens are: 
[contrast, ,, over-,  , fitting, ascertained, basis, training, data, refers, performance, predictor, out-, D.] 

>> PoS Tags are: 
[('contrast', 'NOUN'), (',', 'PUNCT'), ('over-', 'NOUN'), (' ', 'SPACE'), ('fitting', 'NOUN'), ('ascertained', 'VERB'), ('basis', 'NOUN'), ('training', 'NOUN'), ('data', 'NOUN'), ('refers', 'VERB'), ('performance', 'NOUN'), ('predictor', 'NOUN'), ('out-', 'ADV'), ('D.', 'PROPN')] 

>> Dependency Tags are: 
[('contrast', 'pobj'), (',', 'punct'), ('over-', 'nmod'), (' ', 'compound'), ('fitting', 'nsubjpass'), ('ascertained', 'ROOT'), ('basis', 'pobj'), ('training', 'compound'), ('data', 'pobj'), ('refers', 'advcl'), ('performance', 'pobj'), ('predictor', 'pobj'), ('out-', 'advmod'), ('D.', 'punct')]

>> Bigrams: 
[[contrast, ,], [,, over-], [over-,  ], [ , fitting], [fitting, ascertained], [ascertained, basis], [basis, training], [training, data], [data, refers], [refers, performance], [performance, predictor], [predictor, out-], [out-, D.]]

>> Trigrams: 
[[contrast, ,, over-], [,, over-,  ], [over-,  , fitting], [ , fitting, ascertained], [fitting, ascertained, basis], [ascertained, basis, training], [basis, training, data], [training, data, refers], [data, refers, performance], [refers, performance, predictor], [performance, predictor, out-], [predictor, out-, D.]]

>> Noun Phrases are: 
[contrast, over-  fitting, the basis, the training data, it, the performance, the predictor, out- side]

>> Named Entities are: 
[('D.', 'NORP')]


============================ Sentence 403 =============================

It follows that model selection cannot be carried out by observing only the training set. 


>> Tokens are: 
[follows, model, selection, carried, observing, training, set, .] 

>> PoS Tags are: 
[('follows', 'VERB'), ('model', 'NOUN'), ('selection', 'NOUN'), ('carried', 'VERB'), ('observing', 'VERB'), ('training', 'NOUN'), ('set', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('follows', 'ROOT'), ('model', 'compound'), ('selection', 'nsubjpass'), ('carried', 'ccomp'), ('observing', 'pcomp'), ('training', 'compound'), ('set', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[follows, model], [model, selection], [selection, carried], [carried, observing], [observing, training], [training, set], [set, .]]

>> Trigrams: 
[[follows, model, selection], [model, selection, carried], [selection, carried, observing], [carried, observing, training], [observing, training, set], [training, set, .]]

>> Noun Phrases are: 
[It, that model selection, only the training set]

>> Named Entities are: 
[]


============================ Sentence 404 =============================

Rather, some information must be available about the generalization performance of the predictor. 


>> Tokens are: 
[,, information, available, generalization, performance, predictor, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('information', 'NOUN'), ('available', 'ADJ'), ('generalization', 'NOUN'), ('performance', 'NOUN'), ('predictor', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('information', 'nsubj'), ('available', 'acomp'), ('generalization', 'compound'), ('performance', 'pobj'), ('predictor', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[,, information], [information, available], [available, generalization], [generalization, performance], [performance, predictor], [predictor, .]]

>> Trigrams: 
[[,, information, available], [information, available, generalization], [available, generalization, performance], [generalization, performance, predictor], [performance, predictor, .]]

>> Noun Phrases are: 
[some information, the generalization performance, the predictor]

>> Named Entities are: 
[]


============================ Sentence 405 =============================

This is typically obtained by means of validation. 


>> Tokens are: 
[typically, obtained, means, validation, .] 

>> PoS Tags are: 
[('typically', 'ADV'), ('obtained', 'VERB'), ('means', 'NOUN'), ('validation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('typically', 'advmod'), ('obtained', 'ROOT'), ('means', 'pobj'), ('validation', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[typically, obtained], [obtained, means], [means, validation], [validation, .]]

>> Trigrams: 
[[typically, obtained, means], [obtained, means, validation], [means, validation, .]]

>> Noun Phrases are: 
[means, validation]

>> Named Entities are: 
[]


============================ Sentence 406 =============================

In its simplest instantiation, validation partitions the available data into two sets, a training set D and a validation set. 


>> Tokens are: 
[simplest, instantiation, ,, validation, partitions, available, data, sets, ,, training, set, D, validation, set, .] 

>> PoS Tags are: 
[('simplest', 'ADJ'), ('instantiation', 'NOUN'), (',', 'PUNCT'), ('validation', 'NOUN'), ('partitions', 'VERB'), ('available', 'ADJ'), ('data', 'NOUN'), ('sets', 'NOUN'), (',', 'PUNCT'), ('training', 'NOUN'), ('set', 'VERB'), ('D', 'NOUN'), ('validation', 'NOUN'), ('set', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('simplest', 'amod'), ('instantiation', 'pobj'), (',', 'punct'), ('validation', 'nsubj'), ('partitions', 'ROOT'), ('available', 'amod'), ('data', 'dobj'), ('sets', 'pobj'), (',', 'punct'), ('training', 'npadvmod'), ('set', 'amod'), ('D', 'appos'), ('validation', 'compound'), ('set', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[simplest, instantiation], [instantiation, ,], [,, validation], [validation, partitions], [partitions, available], [available, data], [data, sets], [sets, ,], [,, training], [training, set], [set, D], [D, validation], [validation, set], [set, .]]

>> Trigrams: 
[[simplest, instantiation, ,], [instantiation, ,, validation], [,, validation, partitions], [validation, partitions, available], [partitions, available, data], [available, data, sets], [data, sets, ,], [sets, ,, training], [,, training, set], [training, set, D], [set, D, validation], [D, validation, set], [validation, set, .]]

>> Noun Phrases are: 
[its simplest instantiation, validation, the available data, two sets, a training set D, a validation set]

>> Named Entities are: 
[('two', 'CARDINAL')]


============================ Sentence 407 =============================

The training set is used for learning as discussed in Sec. 


>> Tokens are: 
[training, set, learning, discussed, Sec, .] 

>> PoS Tags are: 
[('training', 'NOUN'), ('set', 'NOUN'), ('learning', 'VERB'), ('discussed', 'VERB'), ('Sec', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('training', 'compound'), ('set', 'nsubjpass'), ('learning', 'pcomp'), ('discussed', 'advcl'), ('Sec', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[training, set], [set, learning], [learning, discussed], [discussed, Sec], [Sec, .]]

>> Trigrams: 
[[training, set, learning], [set, learning, discussed], [learning, discussed, Sec], [discussed, Sec, .]]

>> Noun Phrases are: 
[The training set, Sec]

>> Named Entities are: 
[('Sec', 'PERSON')]


============================ Sentence 408 =============================

III-E, while the validation set is used to estimate the generalization loss. 


>> Tokens are: 
[III, -, E, ,, validation, set, estimate, generalization, loss, .] 

>> PoS Tags are: 
[('III', 'NUM'), ('-', 'PUNCT'), ('E', 'NOUN'), (',', 'PUNCT'), ('validation', 'NOUN'), ('set', 'NOUN'), ('estimate', 'VERB'), ('generalization', 'NOUN'), ('loss', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('III', 'nummod'), ('-', 'punct'), ('E', 'ROOT'), (',', 'punct'), ('validation', 'compound'), ('set', 'nsubjpass'), ('estimate', 'xcomp'), ('generalization', 'compound'), ('loss', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[III, -], [-, E], [E, ,], [,, validation], [validation, set], [set, estimate], [estimate, generalization], [generalization, loss], [loss, .]]

>> Trigrams: 
[[III, -, E], [-, E, ,], [E, ,, validation], [,, validation, set], [validation, set, estimate], [set, estimate, generalization], [estimate, generalization, loss], [generalization, loss, .]]

>> Noun Phrases are: 
[III-E, the validation set, the generalization loss]

>> Named Entities are: 
[]


============================ Sentence 409 =============================

This is done by computing the average in (12) only over the validation set. 


>> Tokens are: 
[computing, average, (, 12, ), validation, set, .] 

>> PoS Tags are: 
[('computing', 'VERB'), ('average', 'NOUN'), ('(', 'PUNCT'), ('12', 'NUM'), (')', 'PUNCT'), ('validation', 'NOUN'), ('set', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('computing', 'pcomp'), ('average', 'dobj'), ('(', 'punct'), ('12', 'pobj'), (')', 'punct'), ('validation', 'compound'), ('set', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[computing, average], [average, (], [(, 12], [12, )], [), validation], [validation, set], [set, .]]

>> Trigrams: 
[[computing, average, (], [average, (, 12], [(, 12, )], [12, ), validation], [), validation, set], [validation, set, .]]

>> Noun Phrases are: 
[the average, the validation set]

>> Named Entities are: 
[('12', 'CARDINAL')]


============================ Sentence 410 =============================

More sophisticated forms of validation exist, including cross-validation [7]. 


>> Tokens are: 
[sophisticated, forms, validation, exist, ,, including, cross, -, validation, [, 7, ], .] 

>> PoS Tags are: 
[('sophisticated', 'ADJ'), ('forms', 'NOUN'), ('validation', 'NOUN'), ('exist', 'VERB'), (',', 'PUNCT'), ('including', 'VERB'), ('cross', 'ADJ'), ('-', 'ADJ'), ('validation', 'ADJ'), ('[', 'PUNCT'), ('7', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('sophisticated', 'amod'), ('forms', 'nsubj'), ('validation', 'pobj'), ('exist', 'ROOT'), (',', 'punct'), ('including', 'prep'), ('cross', 'pobj'), ('-', 'pobj'), ('validation', 'amod'), ('[', 'punct'), ('7', 'pobj'), (']', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[sophisticated, forms], [forms, validation], [validation, exist], [exist, ,], [,, including], [including, cross], [cross, -], [-, validation], [validation, [], [[, 7], [7, ]], [], .]]

>> Trigrams: 
[[sophisticated, forms, validation], [forms, validation, exist], [validation, exist, ,], [exist, ,, including], [,, including, cross], [including, cross, -], [cross, -, validation], [-, validation, [], [validation, [, 7], [[, 7, ]], [7, ], .]]

>> Noun Phrases are: 
[More sophisticated forms, validation]

>> Named Entities are: 
[('7', 'CARDINAL')]


============================ Sentence 411 =============================

 Keeping some data aside for validation 


>> Tokens are: 
[ , Keeping, data, aside, validation] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Keeping', 'VERB'), ('data', 'NOUN'), ('aside', 'ADV'), ('validation', 'NOUN')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('Keeping', 'acl'), ('data', 'dobj'), ('aside', 'advmod'), ('validation', 'pobj')]

>> Bigrams: 
[[ , Keeping], [Keeping, data], [data, aside], [aside, validation]]

>> Trigrams: 
[[ , Keeping, data], [Keeping, data, aside], [data, aside, validation]]

>> Noun Phrases are: 
[some data, validation]

>> Named Entities are: 
[]


============================ Sentence 412 =============================

, one can obtain a plot as in Fig. 


>> Tokens are: 
[,, obtain, plot, Fig, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('obtain', 'VERB'), ('plot', 'NOUN'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('obtain', 'ROOT'), ('plot', 'dobj'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[,, obtain], [obtain, plot], [plot, Fig], [Fig, .]]

>> Trigrams: 
[[,, obtain, plot], [obtain, plot, Fig], [plot, Fig, .]]

>> Noun Phrases are: 
[one, a plot, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 413 =============================

10, where the training loss (12) is compared with the generalization loss (2) estimated via validation. 


>> Tokens are: 
[10, ,, training, loss, (, 12, ), compared, generalization, loss, (, 2, ), estimated, validation, .] 

>> PoS Tags are: 
[('10', 'NUM'), (',', 'PUNCT'), ('training', 'NOUN'), ('loss', 'NOUN'), ('(', 'PUNCT'), ('12', 'NUM'), (')', 'PUNCT'), ('compared', 'VERB'), ('generalization', 'NOUN'), ('loss', 'NOUN'), ('(', 'PUNCT'), ('2', 'NUM'), (')', 'PUNCT'), ('estimated', 'VERB'), ('validation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('10', 'ROOT'), (',', 'punct'), ('training', 'compound'), ('loss', 'nsubjpass'), ('(', 'punct'), ('12', 'appos'), (')', 'punct'), ('compared', 'relcl'), ('generalization', 'compound'), ('loss', 'pobj'), ('(', 'punct'), ('2', 'appos'), (')', 'punct'), ('estimated', 'relcl'), ('validation', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[10, ,], [,, training], [training, loss], [loss, (], [(, 12], [12, )], [), compared], [compared, generalization], [generalization, loss], [loss, (], [(, 2], [2, )], [), estimated], [estimated, validation], [validation, .]]

>> Trigrams: 
[[10, ,, training], [,, training, loss], [training, loss, (], [loss, (, 12], [(, 12, )], [12, ), compared], [), compared, generalization], [compared, generalization, loss], [generalization, loss, (], [loss, (, 2], [(, 2, )], [2, ), estimated], [), estimated, validation], [estimated, validation, .]]

>> Noun Phrases are: 
[the training loss, the generalization loss, validation]

>> Named Entities are: 
[('10', 'CARDINAL'), ('12', 'CARDINAL'), ('2', 'CARDINAL')]


============================ Sentence 414 =============================

The figure allows us to conclude that, when M is large enough, the generalization loss starts increasing, indicating overfitting. 


>> Tokens are: 
[figure, allows, conclude, ,, M, large, ,, generalization, loss, starts, increasing, ,, indicating, overfitting, .] 

>> PoS Tags are: 
[('figure', 'NOUN'), ('allows', 'VERB'), ('conclude', 'VERB'), (',', 'PUNCT'), ('M', 'PROPN'), ('large', 'ADJ'), (',', 'PUNCT'), ('generalization', 'NOUN'), ('loss', 'NOUN'), ('starts', 'VERB'), ('increasing', 'VERB'), (',', 'PUNCT'), ('indicating', 'VERB'), ('overfitting', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('figure', 'nsubj'), ('allows', 'ROOT'), ('conclude', 'ccomp'), (',', 'punct'), ('M', 'nsubj'), ('large', 'acomp'), (',', 'punct'), ('generalization', 'compound'), ('loss', 'nsubj'), ('starts', 'ccomp'), ('increasing', 'xcomp'), (',', 'punct'), ('indicating', 'advcl'), ('overfitting', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[figure, allows], [allows, conclude], [conclude, ,], [,, M], [M, large], [large, ,], [,, generalization], [generalization, loss], [loss, starts], [starts, increasing], [increasing, ,], [,, indicating], [indicating, overfitting], [overfitting, .]]

>> Trigrams: 
[[figure, allows, conclude], [allows, conclude, ,], [conclude, ,, M], [,, M, large], [M, large, ,], [large, ,, generalization], [,, generalization, loss], [generalization, loss, starts], [loss, starts, increasing], [starts, increasing, ,], [increasing, ,, indicating], [,, indicating, overfitting], [indicating, overfitting, .]]

>> Noun Phrases are: 
[The figure, us, M, the generalization loss]

>> Named Entities are: 
[]


============================ Sentence 415 =============================

Note, in contrast, that underfitting is detectable by observing the training loss. 


>> Tokens are: 
[Note, ,, contrast, ,, underfitting, detectable, observing, training, loss, .] 

>> PoS Tags are: 
[('Note', 'VERB'), (',', 'PUNCT'), ('contrast', 'NOUN'), (',', 'PUNCT'), ('underfitting', 'NOUN'), ('detectable', 'ADJ'), ('observing', 'VERB'), ('training', 'NOUN'), ('loss', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Note', 'advcl'), (',', 'punct'), ('contrast', 'pobj'), (',', 'punct'), ('underfitting', 'nsubj'), ('detectable', 'acomp'), ('observing', 'pcomp'), ('training', 'compound'), ('loss', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Note, ,], [,, contrast], [contrast, ,], [,, underfitting], [underfitting, detectable], [detectable, observing], [observing, training], [training, loss], [loss, .]]

>> Trigrams: 
[[Note, ,, contrast], [,, contrast, ,], [contrast, ,, underfitting], [,, underfitting, detectable], [underfitting, detectable, observing], [detectable, observing, training], [observing, training, loss], [training, loss, .]]

>> Noun Phrases are: 
[contrast, that underfitting, the training loss]

>> Named Entities are: 
[]


============================ Sentence 416 =============================

A figure such as Fig. 


>> Tokens are: 
[figure, Fig, .] 

>> PoS Tags are: 
[('figure', 'NOUN'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('figure', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[figure, Fig], [Fig, .]]

>> Trigrams: 
[[figure, Fig, .]]

>> Noun Phrases are: 
[A figure, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 417 =============================

10 can be used to choose a value of M that approximately minimizes the generalization loss. 


>> Tokens are: 
[10, choose, value, M, approximately, minimizes, generalization, loss, .] 

>> PoS Tags are: 
[('10', 'NUM'), ('choose', 'VERB'), ('value', 'NOUN'), ('M', 'PROPN'), ('approximately', 'ADV'), ('minimizes', 'VERB'), ('generalization', 'NOUN'), ('loss', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('10', 'nsubjpass'), ('choose', 'xcomp'), ('value', 'dobj'), ('M', 'pobj'), ('approximately', 'advmod'), ('minimizes', 'relcl'), ('generalization', 'compound'), ('loss', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[10, choose], [choose, value], [value, M], [M, approximately], [approximately, minimizes], [minimizes, generalization], [generalization, loss], [loss, .]]

>> Trigrams: 
[[10, choose, value], [choose, value, M], [value, M, approximately], [M, approximately, minimizes], [approximately, minimizes, generalization], [minimizes, generalization, loss], [generalization, loss, .]]

>> Noun Phrases are: 
[a value, M, the generalization loss]

>> Named Entities are: 
[('10', 'CARDINAL')]


============================ Sentence 418 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 419 =============================

More generally, validation allows for model selection, as well as for the selection of the parameters used by learning the algorithm, such as the learning rate γ in (10). 


>> Tokens are: 
[generally, ,, validation, allows, model, selection, ,, selection, parameters, learning, algorithm, ,, learning, rate, γ, (, 10, ), .] 

>> PoS Tags are: 
[('generally', 'ADV'), (',', 'PUNCT'), ('validation', 'NOUN'), ('allows', 'VERB'), ('model', 'NOUN'), ('selection', 'NOUN'), (',', 'PUNCT'), ('selection', 'NOUN'), ('parameters', 'NOUN'), ('learning', 'VERB'), ('algorithm', 'NOUN'), (',', 'PUNCT'), ('learning', 'NOUN'), ('rate', 'NOUN'), ('γ', 'NOUN'), ('(', 'PUNCT'), ('10', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('generally', 'advmod'), (',', 'punct'), ('validation', 'nsubj'), ('allows', 'ROOT'), ('model', 'compound'), ('selection', 'pobj'), (',', 'punct'), ('selection', 'pobj'), ('parameters', 'pobj'), ('learning', 'pcomp'), ('algorithm', 'dobj'), (',', 'punct'), ('learning', 'compound'), ('rate', 'pobj'), ('γ', 'intj'), ('(', 'punct'), ('10', 'pobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[generally, ,], [,, validation], [validation, allows], [allows, model], [model, selection], [selection, ,], [,, selection], [selection, parameters], [parameters, learning], [learning, algorithm], [algorithm, ,], [,, learning], [learning, rate], [rate, γ], [γ, (], [(, 10], [10, )], [), .]]

>> Trigrams: 
[[generally, ,, validation], [,, validation, allows], [validation, allows, model], [allows, model, selection], [model, selection, ,], [selection, ,, selection], [,, selection, parameters], [selection, parameters, learning], [parameters, learning, algorithm], [learning, algorithm, ,], [algorithm, ,, learning], [,, learning, rate], [learning, rate, γ], [rate, γ, (], [γ, (, 10], [(, 10, )], [10, ), .]]

>> Noun Phrases are: 
[validation, model selection, the selection, the parameters, the algorithm, the learning rate]

>> Named Entities are: 
[('10', 'CARDINAL')]


============================ Sentence 420 =============================

To this end, one compares the generalization loss, estimated via validation, for a number of models and then chooses the one with the smallest estimated generalization loss.   


>> Tokens are: 
[end, ,, compares, generalization, loss, ,, estimated, validation, ,, number, models, chooses, smallest, estimated, generalization, loss, .,  ] 

>> PoS Tags are: 
[('end', 'NOUN'), (',', 'PUNCT'), ('compares', 'VERB'), ('generalization', 'NOUN'), ('loss', 'NOUN'), (',', 'PUNCT'), ('estimated', 'VERB'), ('validation', 'NOUN'), (',', 'PUNCT'), ('number', 'NOUN'), ('models', 'NOUN'), ('chooses', 'VERB'), ('smallest', 'ADJ'), ('estimated', 'VERB'), ('generalization', 'NOUN'), ('loss', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('end', 'pobj'), (',', 'punct'), ('compares', 'ROOT'), ('generalization', 'compound'), ('loss', 'dobj'), (',', 'punct'), ('estimated', 'advcl'), ('validation', 'pobj'), (',', 'punct'), ('number', 'pobj'), ('models', 'pobj'), ('chooses', 'conj'), ('smallest', 'amod'), ('estimated', 'amod'), ('generalization', 'compound'), ('loss', 'pobj'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[end, ,], [,, compares], [compares, generalization], [generalization, loss], [loss, ,], [,, estimated], [estimated, validation], [validation, ,], [,, number], [number, models], [models, chooses], [chooses, smallest], [smallest, estimated], [estimated, generalization], [generalization, loss], [loss, .], [.,  ]]

>> Trigrams: 
[[end, ,, compares], [,, compares, generalization], [compares, generalization, loss], [generalization, loss, ,], [loss, ,, estimated], [,, estimated, validation], [estimated, validation, ,], [validation, ,, number], [,, number, models], [number, models, chooses], [models, chooses, smallest], [chooses, smallest, estimated], [smallest, estimated, generalization], [estimated, generalization, loss], [generalization, loss, .], [loss, .,  ]]

>> Noun Phrases are: 
[this end, one, the generalization loss, validation, a number, models, the smallest estimated generalization loss]

>> Named Entities are: 
[('one', 'CARDINAL')]


============================ Sentence 421 =============================

Finally, it is important to remark that the performance of the model selected via validation should be estimated on the basis of a separate data set, typically called the test set. 


>> Tokens are: 
[Finally, ,, important, remark, performance, model, selected, validation, estimated, basis, separate, data, set, ,, typically, called, test, set, .] 

>> PoS Tags are: 
[('Finally', 'ADV'), (',', 'PUNCT'), ('important', 'ADJ'), ('remark', 'VERB'), ('performance', 'NOUN'), ('model', 'NOUN'), ('selected', 'VERB'), ('validation', 'NOUN'), ('estimated', 'VERB'), ('basis', 'NOUN'), ('separate', 'ADJ'), ('data', 'NOUN'), ('set', 'VERB'), (',', 'PUNCT'), ('typically', 'ADV'), ('called', 'VERB'), ('test', 'NOUN'), ('set', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Finally', 'advmod'), (',', 'punct'), ('important', 'acomp'), ('remark', 'xcomp'), ('performance', 'nsubjpass'), ('model', 'pobj'), ('selected', 'acl'), ('validation', 'pobj'), ('estimated', 'ccomp'), ('basis', 'pobj'), ('separate', 'amod'), ('data', 'compound'), ('set', 'pobj'), (',', 'punct'), ('typically', 'advmod'), ('called', 'dep'), ('test', 'compound'), ('set', 'oprd'), ('.', 'punct')]

>> Bigrams: 
[[Finally, ,], [,, important], [important, remark], [remark, performance], [performance, model], [model, selected], [selected, validation], [validation, estimated], [estimated, basis], [basis, separate], [separate, data], [data, set], [set, ,], [,, typically], [typically, called], [called, test], [test, set], [set, .]]

>> Trigrams: 
[[Finally, ,, important], [,, important, remark], [important, remark, performance], [remark, performance, model], [performance, model, selected], [model, selected, validation], [selected, validation, estimated], [validation, estimated, basis], [estimated, basis, separate], [basis, separate, data], [separate, data, set], [data, set, ,], [set, ,, typically], [,, typically, called], [typically, called, test], [called, test, set], [test, set, .]]

>> Noun Phrases are: 
[it, the performance, the model, validation, the basis]

>> Named Entities are: 
[]


============================ Sentence 422 =============================

This is because the generalization loss estimated using validation is a biased estimate of the true generalization loss (2) due to the process of model selection. 


>> Tokens are: 
[generalization, loss, estimated, validation, biased, estimate, true, generalization, loss, (, 2, ), process, model, selection, .] 

>> PoS Tags are: 
[('generalization', 'NOUN'), ('loss', 'NOUN'), ('estimated', 'VERB'), ('validation', 'NOUN'), ('biased', 'ADJ'), ('estimate', 'NOUN'), ('true', 'ADJ'), ('generalization', 'NOUN'), ('loss', 'NOUN'), ('(', 'PUNCT'), ('2', 'NUM'), (')', 'PUNCT'), ('process', 'NOUN'), ('model', 'NOUN'), ('selection', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('generalization', 'compound'), ('loss', 'nsubj'), ('estimated', 'acl'), ('validation', 'dobj'), ('biased', 'amod'), ('estimate', 'attr'), ('true', 'amod'), ('generalization', 'compound'), ('loss', 'pobj'), ('(', 'punct'), ('2', 'appos'), (')', 'punct'), ('process', 'pobj'), ('model', 'compound'), ('selection', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[generalization, loss], [loss, estimated], [estimated, validation], [validation, biased], [biased, estimate], [estimate, true], [true, generalization], [generalization, loss], [loss, (], [(, 2], [2, )], [), process], [process, model], [model, selection], [selection, .]]

>> Trigrams: 
[[generalization, loss, estimated], [loss, estimated, validation], [estimated, validation, biased], [validation, biased, estimate], [biased, estimate, true], [estimate, true, generalization], [true, generalization, loss], [generalization, loss, (], [loss, (, 2], [(, 2, )], [2, ), process], [), process, model], [process, model, selection], [model, selection, .]]

>> Noun Phrases are: 
[the generalization loss, validation, a biased estimate, the true generalization loss, the process, model selection]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 423 =============================

In particular, the loss on the validation set will tend to be small, since the model was selected during validation with the aim of minimizing it. 


>> Tokens are: 
[particular, ,, loss, validation, set, tend, small, ,, model, selected, validation, aim, minimizing, .] 

>> PoS Tags are: 
[('particular', 'ADJ'), (',', 'PUNCT'), ('loss', 'NOUN'), ('validation', 'NOUN'), ('set', 'NOUN'), ('tend', 'VERB'), ('small', 'ADJ'), (',', 'PUNCT'), ('model', 'NOUN'), ('selected', 'VERB'), ('validation', 'NOUN'), ('aim', 'NOUN'), ('minimizing', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('particular', 'amod'), (',', 'punct'), ('loss', 'nsubj'), ('validation', 'compound'), ('set', 'pobj'), ('tend', 'ROOT'), ('small', 'acomp'), (',', 'punct'), ('model', 'nsubjpass'), ('selected', 'advcl'), ('validation', 'pobj'), ('aim', 'pobj'), ('minimizing', 'pcomp'), ('.', 'punct')]

>> Bigrams: 
[[particular, ,], [,, loss], [loss, validation], [validation, set], [set, tend], [tend, small], [small, ,], [,, model], [model, selected], [selected, validation], [validation, aim], [aim, minimizing], [minimizing, .]]

>> Trigrams: 
[[particular, ,, loss], [,, loss, validation], [loss, validation, set], [validation, set, tend], [set, tend, small], [tend, small, ,], [small, ,, model], [,, model, selected], [model, selected, validation], [selected, validation, aim], [validation, aim, minimizing], [aim, minimizing, .]]

>> Noun Phrases are: 
[the loss, the validation set, the model, validation, the aim, it]

>> Named Entities are: 
[]


============================ Sentence 424 =============================

Importantly, the test set should never be used during the three steps that make up the machine learning methodology and should ideally only be used once to test the trained predictor. 


>> Tokens are: 
[Importantly, ,, test, set, steps, machine, learning, methodology, ideally, test, trained, predictor, .] 

>> PoS Tags are: 
[('Importantly', 'ADV'), (',', 'PUNCT'), ('test', 'NOUN'), ('set', 'NOUN'), ('steps', 'NOUN'), ('machine', 'NOUN'), ('learning', 'VERB'), ('methodology', 'NOUN'), ('ideally', 'ADV'), ('test', 'VERB'), ('trained', 'VERB'), ('predictor', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Importantly', 'advmod'), (',', 'punct'), ('test', 'compound'), ('set', 'nsubjpass'), ('steps', 'pobj'), ('machine', 'npadvmod'), ('learning', 'amod'), ('methodology', 'dobj'), ('ideally', 'advmod'), ('test', 'xcomp'), ('trained', 'amod'), ('predictor', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Importantly, ,], [,, test], [test, set], [set, steps], [steps, machine], [machine, learning], [learning, methodology], [methodology, ideally], [ideally, test], [test, trained], [trained, predictor], [predictor, .]]

>> Trigrams: 
[[Importantly, ,, test], [,, test, set], [test, set, steps], [set, steps, machine], [steps, machine, learning], [machine, learning, methodology], [learning, methodology, ideally], [methodology, ideally, test], [ideally, test, trained], [test, trained, predictor], [trained, predictor, .]]

>> Noun Phrases are: 
[the test set, the three steps, the machine learning methodology, the trained predictor]

>> Named Entities are: 
[('three', 'CARDINAL')]


============================ Sentence 425 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 426 =============================

IV. 


>> Tokens are: 
[IV, .] 

>> PoS Tags are: 
[('IV', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('IV', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[IV, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[IV]

>> Named Entities are: 
[]


============================ Sentence 427 =============================

APPLICATIONS OF SUPERVISED LEARNING TO COMMUNICATION SYSTEMS   


>> Tokens are: 
[APPLICATIONS, SUPERVISED, LEARNING, COMMUNICATION, SYSTEMS,  ] 

>> PoS Tags are: 
[('APPLICATIONS', 'NOUN'), ('SUPERVISED', 'ADJ'), ('LEARNING', 'NOUN'), ('COMMUNICATION', 'PROPN'), ('SYSTEMS', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('APPLICATIONS', 'ROOT'), ('SUPERVISED', 'amod'), ('LEARNING', 'pobj'), ('COMMUNICATION', 'pobj'), ('SYSTEMS', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[APPLICATIONS, SUPERVISED], [SUPERVISED, LEARNING], [LEARNING, COMMUNICATION], [COMMUNICATION, SYSTEMS], [SYSTEMS,  ]]

>> Trigrams: 
[[APPLICATIONS, SUPERVISED, LEARNING], [SUPERVISED, LEARNING, COMMUNICATION], [LEARNING, COMMUNICATION, SYSTEMS], [COMMUNICATION, SYSTEMS,  ]]

>> Noun Phrases are: 
[APPLICATIONS, SUPERVISED LEARNING, COMMUNICATION, SYSTEMS]

>> Named Entities are: 
[]


============================ Sentence 428 =============================

In this section, we provide some pointers to existing applications of supervised learning to communication networks. 


>> Tokens are: 
[section, ,, provide, pointers, existing, applications, supervised, learning, communication, networks, .] 

>> PoS Tags are: 
[('section', 'NOUN'), (',', 'PUNCT'), ('provide', 'VERB'), ('pointers', 'NOUN'), ('existing', 'VERB'), ('applications', 'NOUN'), ('supervised', 'ADJ'), ('learning', 'NOUN'), ('communication', 'NOUN'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('section', 'pobj'), (',', 'punct'), ('provide', 'ROOT'), ('pointers', 'dobj'), ('existing', 'amod'), ('applications', 'pobj'), ('supervised', 'amod'), ('learning', 'pobj'), ('communication', 'compound'), ('networks', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[section, ,], [,, provide], [provide, pointers], [pointers, existing], [existing, applications], [applications, supervised], [supervised, learning], [learning, communication], [communication, networks], [networks, .]]

>> Trigrams: 
[[section, ,, provide], [,, provide, pointers], [provide, pointers, existing], [pointers, existing, applications], [existing, applications, supervised], [applications, supervised, learning], [supervised, learning, communication], [learning, communication, networks], [communication, networks, .]]

>> Noun Phrases are: 
[this section, we, some pointers, existing applications, supervised learning, communication networks]

>> Named Entities are: 
[]


============================ Sentence 429 =============================

The discussion is organized by following the approach described in Sec. 


>> Tokens are: 
[discussion, organized, following, approach, described, Sec, .] 

>> PoS Tags are: 
[('discussion', 'NOUN'), ('organized', 'VERB'), ('following', 'VERB'), ('approach', 'NOUN'), ('described', 'VERB'), ('Sec', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('discussion', 'nsubjpass'), ('organized', 'ROOT'), ('following', 'pcomp'), ('approach', 'dobj'), ('described', 'acl'), ('Sec', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[discussion, organized], [organized, following], [following, approach], [approach, described], [described, Sec], [Sec, .]]

>> Trigrams: 
[[discussion, organized, following], [organized, following, approach], [following, approach, described], [approach, described, Sec], [described, Sec, .]]

>> Noun Phrases are: 
[The discussion, the approach, Sec]

>> Named Entities are: 
[('Sec', 'PERSON')]


============================ Sentence 430 =============================

II. 


>> Tokens are: 
[II, .] 

>> PoS Tags are: 
[('II', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('II', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[II, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[II]

>> Named Entities are: 
[]


============================ Sentence 431 =============================

Accordingly, we distin- guish between tasks carried out at edge and cloud (see  10    1 2 3 4 5 6 7 8 9 0  0.2  0.4  0.6  0.8  1  1.2  1.4  1.6 ro  ot  a  ve 


>> Tokens are: 
[Accordingly, ,, distin-, guish, tasks, carried, edge, cloud, (,  , 10,    , 1, 2, 3, 4, 5, 6, 7, 8, 9, 0,  , 0.2,  , 0.4,  , 0.6,  , 0.8,  , 1,  , 1.2,  , 1.4,  , 1.6, ro,  , ot,  ,  , ve] 

>> PoS Tags are: 
[('Accordingly', 'ADV'), (',', 'PUNCT'), ('distin-', 'VERB'), ('guish', 'ADJ'), ('tasks', 'NOUN'), ('carried', 'VERB'), ('edge', 'NOUN'), ('cloud', 'NOUN'), ('(', 'PUNCT'), (' ', 'SPACE'), ('10', 'NUM'), ('   ', 'SPACE'), ('1', 'NUM'), ('2', 'NUM'), ('3', 'NUM'), ('4', 'NUM'), ('5', 'NUM'), ('6', 'NUM'), ('7', 'NUM'), ('8', 'NUM'), ('9', 'NUM'), ('0', 'NUM'), (' ', 'SPACE'), ('0.2', 'NUM'), (' ', 'SPACE'), ('0.4', 'NUM'), (' ', 'SPACE'), ('0.6', 'NUM'), (' ', 'SPACE'), ('0.8', 'NUM'), (' ', 'SPACE'), ('1', 'NUM'), (' ', 'SPACE'), ('1.2', 'NUM'), (' ', 'SPACE'), ('1.4', 'NUM'), (' ', 'SPACE'), ('1.6', 'NUM'), ('ro', 'ADP'), (' ', 'SPACE'), ('ot', 'X'), (' ', 'SPACE'), (' ', 'SPACE'), ('ve', 'VERB')] 

>> Dependency Tags are: 
[('Accordingly', 'advmod'), (',', 'punct'), ('distin-', 'ROOT'), ('guish', 'acomp'), ('tasks', 'pobj'), ('carried', 'acl'), ('edge', 'pobj'), ('cloud', 'conj'), ('(', 'punct'), (' ', 'dobj'), ('10', 'nummod'), ('   ', 'quantmod'), ('1', 'compound'), ('2', 'npadvmod'), ('3', 'dobj'), ('4', 'npadvmod'), ('5', 'npadvmod'), ('6', 'nummod'), ('7', 'dobj'), ('8', 'dobj'), ('9', 'dobj'), ('0', 'punct'), (' ', 'dobj'), ('0.2', 'nummod'), (' ', 'punct'), ('0.4', 'nummod'), (' ', 'appos'), ('0.6', 'nummod'), (' ', 'dobj'), ('0.8', 'nummod'), (' ', 'dobj'), ('1', 'nummod'), (' ', 'dobj'), ('1.2', 'nummod'), (' ', 'dobj'), ('1.4', 'nummod'), (' ', 'dobj'), ('1.6', 'npadvmod'), ('ro', 'prep'), (' ', 'pobj'), ('ot', 'prep'), (' ', 'pobj'), (' ', 'nsubj'), ('ve', 'advcl')]

>> Bigrams: 
[[Accordingly, ,], [,, distin-], [distin-, guish], [guish, tasks], [tasks, carried], [carried, edge], [edge, cloud], [cloud, (], [(,  ], [ , 10], [10,    ], [   , 1], [1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7], [7, 8], [8, 9], [9, 0], [0,  ], [ , 0.2], [0.2,  ], [ , 0.4], [0.4,  ], [ , 0.6], [0.6,  ], [ , 0.8], [0.8,  ], [ , 1], [1,  ], [ , 1.2], [1.2,  ], [ , 1.4], [1.4,  ], [ , 1.6], [1.6, ro], [ro,  ], [ , ot], [ot,  ], [ ,  ], [ , ve]]

>> Trigrams: 
[[Accordingly, ,, distin-], [,, distin-, guish], [distin-, guish, tasks], [guish, tasks, carried], [tasks, carried, edge], [carried, edge, cloud], [edge, cloud, (], [cloud, (,  ], [(,  , 10], [ , 10,    ], [10,    , 1], [   , 1, 2], [1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6], [5, 6, 7], [6, 7, 8], [7, 8, 9], [8, 9, 0], [9, 0,  ], [0,  , 0.2], [ , 0.2,  ], [0.2,  , 0.4], [ , 0.4,  ], [0.4,  , 0.6], [ , 0.6,  ], [0.6,  , 0.8], [ , 0.8,  ], [0.8,  , 1], [ , 1,  ], [1,  , 1.2], [ , 1.2,  ], [1.2,  , 1.4], [ , 1.4,  ], [1.4,  , 1.6], [ , 1.6, ro], [1.6, ro,  ], [ro,  , ot], [ , ot,  ], [ot,  ,  ], [ ,  , ve]]

>> Noun Phrases are: 
[we, tasks, edge, cloud]

>> Named Entities are: 
[('0.2', 'CARDINAL'), ('0.4', 'CARDINAL'), ('0.6', 'CARDINAL'), ('0.8', 'CARDINAL'), ('1  1.2  1.4  1.6 ro  ot  a', 'TIME')]


============================ Sentence 432 =============================

ra  ge  s   


>> Tokens are: 
[ra,  , ge,  , s,  ] 

>> PoS Tags are: 
[('ra', 'DET'), (' ', 'SPACE'), ('ge', 'PROPN'), (' ', 'SPACE'), ('s', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('ra', 'nsubj'), (' ', 'appos'), ('ge', 'compound'), (' ', 'appos'), ('s', 'ROOT'), (' ', 'attr')]

>> Bigrams: 
[[ra,  ], [ , ge], [ge,  ], [ , s], [s,  ]]

>> Trigrams: 
[[ra,  , ge], [ , ge,  ], [ge,  , s], [ , s,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 433 =============================

qu ar  ed   


>> Tokens are: 
[qu, ar,  , ed,  ] 

>> PoS Tags are: 
[('qu', 'X'), ('ar', 'ADP'), (' ', 'SPACE'), ('ed', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('qu', 'ROOT'), ('ar', 'prep'), (' ', 'pobj'), ('ed', 'punct'), (' ', 'pobj')]

>> Bigrams: 
[[qu, ar], [ar,  ], [ , ed], [ed,  ]]

>> Trigrams: 
[[qu, ar,  ], [ar,  , ed], [ , ed,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 434 =============================

l  os s  training  generalization  (via validation)  overfittingunderfitting   


>> Tokens are: 
[l,  , os, s,  , training,  , generalization,  , (, validation, ),  , overfittingunderfitting,  ] 

>> PoS Tags are: 
[('l', 'X'), (' ', 'SPACE'), ('os', 'ADV'), ('s', 'X'), (' ', 'SPACE'), ('training', 'VERB'), (' ', 'SPACE'), ('generalization', 'NOUN'), (' ', 'SPACE'), ('(', 'PUNCT'), ('validation', 'NOUN'), (')', 'PUNCT'), (' ', 'SPACE'), ('overfittingunderfitting', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('l', 'dep'), (' ', 'pobj'), ('os', 'advmod'), ('s', 'ROOT'), (' ', 'attr'), ('training', 'acl'), (' ', 'dobj'), ('generalization', 'compound'), (' ', 'dobj'), ('(', 'punct'), ('validation', 'pobj'), (')', 'punct'), (' ', 'attr'), ('overfittingunderfitting', 'acl'), (' ', 'dobj')]

>> Bigrams: 
[[l,  ], [ , os], [os, s], [s,  ], [ , training], [training,  ], [ , generalization], [generalization,  ], [ , (], [(, validation], [validation, )], [),  ], [ , overfittingunderfitting], [overfittingunderfitting,  ]]

>> Trigrams: 
[[l,  , os], [ , os, s], [os, s,  ], [s,  , training], [ , training,  ], [training,  , generalization], [ , generalization,  ], [generalization,  , (], [ , (, validation], [(, validation, )], [validation, ),  ], [),  , overfittingunderfitting], [ , overfittingunderfitting,  ]]

>> Noun Phrases are: 
[validation]

>> Named Entities are: 
[]


============================ Sentence 435 =============================

Fig 10 Training loss and generalization loss, estimated via valida- tion, as a function of the model order M for the example in Fig 9  Fig 4), as well as at different layers of the protocol stack. 


>> Tokens are: 
[Fig, 10, Training, loss, generalization, loss, ,, estimated, valida-, tion, ,, function, model, order, M, example, Fig, 9,  , Fig, 4, ), ,, different, layers, protocol, stack, .] 

>> PoS Tags are: 
[('Fig', 'PROPN'), ('10', 'NUM'), ('Training', 'NOUN'), ('loss', 'NOUN'), ('generalization', 'NOUN'), ('loss', 'NOUN'), (',', 'PUNCT'), ('estimated', 'VERB'), ('valida-', 'ADJ'), ('tion', 'NOUN'), (',', 'PUNCT'), ('function', 'NOUN'), ('model', 'NOUN'), ('order', 'NOUN'), ('M', 'PROPN'), ('example', 'NOUN'), ('Fig', 'PROPN'), ('9', 'NUM'), (' ', 'SPACE'), ('Fig', 'PROPN'), ('4', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('different', 'ADJ'), ('layers', 'NOUN'), ('protocol', 'NOUN'), ('stack', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Fig', 'nmod'), ('10', 'nummod'), ('Training', 'compound'), ('loss', 'ROOT'), ('generalization', 'compound'), ('loss', 'conj'), (',', 'punct'), ('estimated', 'acl'), ('valida-', 'amod'), ('tion', 'pobj'), (',', 'punct'), ('function', 'pobj'), ('model', 'compound'), ('order', 'pobj'), ('M', 'pobj'), ('example', 'pobj'), ('Fig', 'pobj'), ('9', 'nummod'), (' ', 'appos'), ('Fig', 'appos'), ('4', 'nummod'), (')', 'punct'), (',', 'punct'), ('different', 'amod'), ('layers', 'pobj'), ('protocol', 'compound'), ('stack', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Fig, 10], [10, Training], [Training, loss], [loss, generalization], [generalization, loss], [loss, ,], [,, estimated], [estimated, valida-], [valida-, tion], [tion, ,], [,, function], [function, model], [model, order], [order, M], [M, example], [example, Fig], [Fig, 9], [9,  ], [ , Fig], [Fig, 4], [4, )], [), ,], [,, different], [different, layers], [layers, protocol], [protocol, stack], [stack, .]]

>> Trigrams: 
[[Fig, 10, Training], [10, Training, loss], [Training, loss, generalization], [loss, generalization, loss], [generalization, loss, ,], [loss, ,, estimated], [,, estimated, valida-], [estimated, valida-, tion], [valida-, tion, ,], [tion, ,, function], [,, function, model], [function, model, order], [model, order, M], [order, M, example], [M, example, Fig], [example, Fig, 9], [Fig, 9,  ], [9,  , Fig], [ , Fig, 4], [Fig, 4, )], [4, ), ,], [), ,, different], [,, different, layers], [different, layers, protocol], [layers, protocol, stack], [protocol, stack, .]]

>> Noun Phrases are: 
[Fig 10 Training loss, generalization loss, valida- tion, a function, the model order, M, the example, Fig, Fig, different layers, the protocol stack]

>> Named Entities are: 
[]


============================ Sentence 436 =============================

We refer to Table I and Table II for examples of data types that may be available at the edge and cloud segments. 


>> Tokens are: 
[refer, Table, Table, II, examples, data, types, available, edge, cloud, segments, .] 

>> PoS Tags are: 
[('refer', 'VERB'), ('Table', 'PROPN'), ('Table', 'PROPN'), ('II', 'PROPN'), ('examples', 'NOUN'), ('data', 'NOUN'), ('types', 'NOUN'), ('available', 'ADJ'), ('edge', 'NOUN'), ('cloud', 'NOUN'), ('segments', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('refer', 'ROOT'), ('Table', 'compound'), ('Table', 'compound'), ('II', 'conj'), ('examples', 'pobj'), ('data', 'compound'), ('types', 'pobj'), ('available', 'acomp'), ('edge', 'nmod'), ('cloud', 'conj'), ('segments', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[refer, Table], [Table, Table], [Table, II], [II, examples], [examples, data], [data, types], [types, available], [available, edge], [edge, cloud], [cloud, segments], [segments, .]]

>> Trigrams: 
[[refer, Table, Table], [Table, Table, II], [Table, II, examples], [II, examples, data], [examples, data, types], [data, types, available], [types, available, edge], [available, edge, cloud], [edge, cloud, segments], [cloud, segments, .]]

>> Noun Phrases are: 
[We, Table I, Table II, examples, data types, the edge and cloud segments]

>> Named Entities are: 
[('Table I and Table II', 'ORG')]


============================ Sentence 437 =============================

 A. 


>> Tokens are: 
[ , A.] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('A.', 'NOUN')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('A.', 'ROOT')]

>> Bigrams: 
[[ , A.]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[ A.]

>> Named Entities are: 
[]


============================ Sentence 438 =============================

At the Edge  Consider first tasks to be carried out at the edge, i.e.--, at the base stations or at the associated edge computing platform. 


>> Tokens are: 
[Edge,  , Consider, tasks, carried, edge, ,, i.e.--, ,, base, stations, associated, edge, computing, platform, .] 

>> PoS Tags are: 
[('Edge', 'NOUN'), (' ', 'SPACE'), ('Consider', 'VERB'), ('tasks', 'NOUN'), ('carried', 'VERB'), ('edge', 'NOUN'), (',', 'PUNCT'), ('i.e.--', 'PUNCT'), (',', 'PUNCT'), ('base', 'NOUN'), ('stations', 'NOUN'), ('associated', 'VERB'), ('edge', 'NOUN'), ('computing', 'NOUN'), ('platform', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Edge', 'pobj'), (' ', 'pobj'), ('Consider', 'ROOT'), ('tasks', 'dobj'), ('carried', 'relcl'), ('edge', 'pobj'), (',', 'punct'), ('i.e.--', 'dep'), (',', 'punct'), ('base', 'compound'), ('stations', 'pobj'), ('associated', 'amod'), ('edge', 'compound'), ('computing', 'compound'), ('platform', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Edge,  ], [ , Consider], [Consider, tasks], [tasks, carried], [carried, edge], [edge, ,], [,, i.e.--], [i.e.--, ,], [,, base], [base, stations], [stations, associated], [associated, edge], [edge, computing], [computing, platform], [platform, .]]

>> Trigrams: 
[[Edge,  , Consider], [ , Consider, tasks], [Consider, tasks, carried], [tasks, carried, edge], [carried, edge, ,], [edge, ,, i.e.--], [,, i.e.--, ,], [i.e.--, ,, base], [,, base, stations], [base, stations, associated], [stations, associated, edge], [associated, edge, computing], [edge, computing, platform], [computing, platform, .]]

>> Noun Phrases are: 
[the Edge, first tasks, the edge, the base stations, the associated edge computing platform]

>> Named Entities are: 
[('first', 'ORDINAL')]


============================ Sentence 439 =============================

 (1) Physical Layer: For the physical layer, we focus first on the receiver side and then on the transmitter. 


>> Tokens are: 
[ , (, 1, ), Physical, Layer, :, physical, layer, ,, focus, receiver, transmitter, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('(', 'PUNCT'), ('1', 'X'), (')', 'PUNCT'), ('Physical', 'PROPN'), ('Layer', 'PROPN'), (':', 'PUNCT'), ('physical', 'ADJ'), ('layer', 'NOUN'), (',', 'PUNCT'), ('focus', 'VERB'), ('receiver', 'ADJ'), ('transmitter', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'dep'), ('(', 'punct'), ('1', 'appos'), (')', 'punct'), ('Physical', 'compound'), ('Layer', 'appos'), (':', 'punct'), ('physical', 'amod'), ('layer', 'pobj'), (',', 'punct'), ('focus', 'ROOT'), ('receiver', 'amod'), ('transmitter', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , (], [(, 1], [1, )], [), Physical], [Physical, Layer], [Layer, :], [:, physical], [physical, layer], [layer, ,], [,, focus], [focus, receiver], [receiver, transmitter], [transmitter, .]]

>> Trigrams: 
[[ , (, 1], [(, 1, )], [1, ), Physical], [), Physical, Layer], [Physical, Layer, :], [Layer, :, physical], [:, physical, layer], [physical, layer, ,], [layer, ,, focus], [,, focus, receiver], [focus, receiver, transmitter], [receiver, transmitter, .]]

>> Noun Phrases are: 
[Physical Layer, the physical layer, we, the receiver side, the transmitter]

>> Named Entities are: 
[('1', 'CARDINAL'), ('first', 'ORDINAL')]


============================ Sentence 440 =============================

At the receiver, a central task that can potentially ben- efit from machine learning is channel detection and decoding. 


>> Tokens are: 
[receiver, ,, central, task, potentially, ben-, efit, machine, learning, channel, detection, decoding, .] 

>> PoS Tags are: 
[('receiver', 'NOUN'), (',', 'PUNCT'), ('central', 'ADJ'), ('task', 'NOUN'), ('potentially', 'ADV'), ('ben-', 'ADV'), ('efit', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('channel', 'NOUN'), ('detection', 'NOUN'), ('decoding', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('receiver', 'pobj'), (',', 'punct'), ('central', 'amod'), ('task', 'nsubj'), ('potentially', 'advmod'), ('ben-', 'advmod'), ('efit', 'relcl'), ('machine', 'compound'), ('learning', 'pobj'), ('channel', 'compound'), ('detection', 'attr'), ('decoding', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[receiver, ,], [,, central], [central, task], [task, potentially], [potentially, ben-], [ben-, efit], [efit, machine], [machine, learning], [learning, channel], [channel, detection], [detection, decoding], [decoding, .]]

>> Trigrams: 
[[receiver, ,, central], [,, central, task], [central, task, potentially], [task, potentially, ben-], [potentially, ben-, efit], [ben-, efit, machine], [efit, machine, learning], [machine, learning, channel], [learning, channel, detection], [channel, detection, decoding], [detection, decoding, .]]

>> Noun Phrases are: 
[the receiver, a central task, machine learning, channel detection, decoding]

>> Named Entities are: 
[]


============================ Sentence 441 =============================

This amounts to a multi-class classification problem, in which the input x is given by the received baseband signal and the output is the label of the correct transmitted message (e.g.--.-, the transmitted bits) 


>> Tokens are: 
[amounts, multi, -, class, classification, problem, ,, input, x, given, received, baseband, signal, output, label, correct, transmitted, message, (, e.g.--.-, ,, transmitted, bits, )] 

>> PoS Tags are: 
[('amounts', 'VERB'), ('multi', 'ADJ'), ('-', 'ADJ'), ('class', 'ADJ'), ('classification', 'NOUN'), ('problem', 'NOUN'), (',', 'PUNCT'), ('input', 'NOUN'), ('x', 'PUNCT'), ('given', 'VERB'), ('received', 'VERB'), ('baseband', 'NOUN'), ('signal', 'NOUN'), ('output', 'NOUN'), ('label', 'NOUN'), ('correct', 'ADJ'), ('transmitted', 'VERB'), ('message', 'NOUN'), ('(', 'PUNCT'), ('e.g.--.-', 'X'), (',', 'PUNCT'), ('transmitted', 'VERB'), ('bits', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('amounts', 'ROOT'), ('multi', 'amod'), ('-', 'amod'), ('class', 'amod'), ('classification', 'compound'), ('problem', 'pobj'), (',', 'punct'), ('input', 'nsubjpass'), ('x', 'punct'), ('given', 'relcl'), ('received', 'amod'), ('baseband', 'compound'), ('signal', 'pobj'), ('output', 'nsubj'), ('label', 'attr'), ('correct', 'amod'), ('transmitted', 'amod'), ('message', 'pobj'), ('(', 'punct'), ('e.g.--.-', 'appos'), (',', 'punct'), ('transmitted', 'amod'), ('bits', 'appos'), (')', 'punct')]

>> Bigrams: 
[[amounts, multi], [multi, -], [-, class], [class, classification], [classification, problem], [problem, ,], [,, input], [input, x], [x, given], [given, received], [received, baseband], [baseband, signal], [signal, output], [output, label], [label, correct], [correct, transmitted], [transmitted, message], [message, (], [(, e.g.--.-], [e.g.--.-, ,], [,, transmitted], [transmitted, bits], [bits, )]]

>> Trigrams: 
[[amounts, multi, -], [multi, -, class], [-, class, classification], [class, classification, problem], [classification, problem, ,], [problem, ,, input], [,, input, x], [input, x, given], [x, given, received], [given, received, baseband], [received, baseband, signal], [baseband, signal, output], [signal, output, label], [output, label, correct], [label, correct, transmitted], [correct, transmitted, message], [transmitted, message, (], [message, (, e.g.--.-], [(, e.g.--.-, ,], [e.g.--.-, ,, transmitted], [,, transmitted, bits], [transmitted, bits, )]]

>> Noun Phrases are: 
[a multi-class classification problem, the input, the received baseband signal, the output, the label, the correct transmitted message, the transmitted bits]

>> Named Entities are: 
[]


============================ Sentence 442 =============================

[13], [30]. 


>> Tokens are: 
[[, 13, ], ,, [, 30, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('13', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('[', 'PUNCT'), ('30', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('13', 'ROOT'), (']', 'punct'), (',', 'punct'), ('[', 'punct'), ('30', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 13], [13, ]], [], ,], [,, [], [[, 30], [30, ]], [], .]]

>> Trigrams: 
[[[, 13, ]], [13, ], ,], [], ,, [], [,, [, 30], [[, 30, ]], [30, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('13', 'CARDINAL'), ('30', 'CARDINAL')]


============================ Sentence 443 =============================

When can machine learning help? 


>> Tokens are: 
[machine, learning, help, ?] 

>> PoS Tags are: 
[('machine', 'VERB'), ('learning', 'NOUN'), ('help', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('machine', 'ROOT'), ('learning', 'compound'), ('help', 'dobj'), ('?', 'punct')]

>> Bigrams: 
[[machine, learning], [learning, help], [help, ?]]

>> Trigrams: 
[[machine, learning, help], [learning, help, ?]]

>> Noun Phrases are: 
[learning help]

>> Named Entities are: 
[]


============================ Sentence 444 =============================

Recalling the discussion in Sec. 


>> Tokens are: 
[Recalling, discussion, Sec, .] 

>> PoS Tags are: 
[('Recalling', 'VERB'), ('discussion', 'NOUN'), ('Sec', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Recalling', 'ROOT'), ('discussion', 'dobj'), ('Sec', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Recalling, discussion], [discussion, Sec], [Sec, .]]

>> Trigrams: 
[[Recalling, discussion, Sec], [discussion, Sec, .]]

>> Noun Phrases are: 
[the discussion, Sec]

>> Named Entities are: 
[('Sec', 'PERSON')]


============================ Sentence 445 =============================

II, we should first ask whether a modelling or algorithmic deficit exists. 


>> Tokens are: 
[II, ,, ask, modelling, algorithmic, deficit, exists, .] 

>> PoS Tags are: 
[('II', 'NUM'), (',', 'PUNCT'), ('ask', 'VERB'), ('modelling', 'NOUN'), ('algorithmic', 'ADJ'), ('deficit', 'NOUN'), ('exists', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('II', 'npadvmod'), (',', 'punct'), ('ask', 'ROOT'), ('modelling', 'amod'), ('algorithmic', 'conj'), ('deficit', 'nsubj'), ('exists', 'ccomp'), ('.', 'punct')]

>> Bigrams: 
[[II, ,], [,, ask], [ask, modelling], [modelling, algorithmic], [algorithmic, deficit], [deficit, exists], [exists, .]]

>> Trigrams: 
[[II, ,, ask], [,, ask, modelling], [ask, modelling, algorithmic], [modelling, algorithmic, deficit], [algorithmic, deficit, exists], [deficit, exists, .]]

>> Noun Phrases are: 
[we, a modelling or algorithmic deficit]

>> Named Entities are: 
[('first', 'ORDINAL')]


============================ Sentence 446 =============================

A model deficit may occur when operating over channels that do not have well-established mathematical models, such as for molecular communications [31]. 


>> Tokens are: 
[model, deficit, occur, operating, channels, -, established, mathematical, models, ,, molecular, communications, [, 31, ], .] 

>> PoS Tags are: 
[('model', 'NOUN'), ('deficit', 'NOUN'), ('occur', 'VERB'), ('operating', 'VERB'), ('channels', 'NOUN'), ('-', 'PUNCT'), ('established', 'VERB'), ('mathematical', 'ADJ'), ('models', 'NOUN'), (',', 'PUNCT'), ('molecular', 'ADJ'), ('communications', 'NOUN'), ('[', 'PUNCT'), ('31', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('model', 'compound'), ('deficit', 'nsubj'), ('occur', 'ROOT'), ('operating', 'advcl'), ('channels', 'pobj'), ('-', 'punct'), ('established', 'amod'), ('mathematical', 'amod'), ('models', 'dobj'), (',', 'punct'), ('molecular', 'amod'), ('communications', 'pobj'), ('[', 'punct'), ('31', 'dep'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[model, deficit], [deficit, occur], [occur, operating], [operating, channels], [channels, -], [-, established], [established, mathematical], [mathematical, models], [models, ,], [,, molecular], [molecular, communications], [communications, [], [[, 31], [31, ]], [], .]]

>> Trigrams: 
[[model, deficit, occur], [deficit, occur, operating], [occur, operating, channels], [operating, channels, -], [channels, -, established], [-, established, mathematical], [established, mathematical, models], [mathematical, models, ,], [models, ,, molecular], [,, molecular, communications], [molecular, communications, [], [communications, [, 31], [[, 31, ]], [31, ], .]]

>> Noun Phrases are: 
[A model deficit, channels, well-established mathematical models, molecular communications]

>> Named Entities are: 
[('31', 'CARDINAL')]


============================ Sentence 447 =============================

Algorithm deficit is more common, given that optimal decoders over a number of well-established channel models tend to be computationally complex. 


>> Tokens are: 
[Algorithm, deficit, common, ,, given, optimal, decoders, number, -, established, channel, models, tend, computationally, complex, .] 

>> PoS Tags are: 
[('Algorithm', 'NOUN'), ('deficit', 'NOUN'), ('common', 'ADJ'), (',', 'PUNCT'), ('given', 'VERB'), ('optimal', 'ADJ'), ('decoders', 'NOUN'), ('number', 'NOUN'), ('-', 'PUNCT'), ('established', 'VERB'), ('channel', 'NOUN'), ('models', 'NOUN'), ('tend', 'VERB'), ('computationally', 'ADV'), ('complex', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Algorithm', 'compound'), ('deficit', 'nsubj'), ('common', 'acomp'), (',', 'punct'), ('given', 'prep'), ('optimal', 'amod'), ('decoders', 'pobj'), ('number', 'pobj'), ('-', 'punct'), ('established', 'amod'), ('channel', 'compound'), ('models', 'pobj'), ('tend', 'advcl'), ('computationally', 'advmod'), ('complex', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[Algorithm, deficit], [deficit, common], [common, ,], [,, given], [given, optimal], [optimal, decoders], [decoders, number], [number, -], [-, established], [established, channel], [channel, models], [models, tend], [tend, computationally], [computationally, complex], [complex, .]]

>> Trigrams: 
[[Algorithm, deficit, common], [deficit, common, ,], [common, ,, given], [,, given, optimal], [given, optimal, decoders], [optimal, decoders, number], [decoders, number, -], [number, -, established], [-, established, channel], [established, channel, models], [channel, models, tend], [models, tend, computationally], [tend, computationally, complex], [computationally, complex, .]]

>> Noun Phrases are: 
[Algorithm deficit, that optimal decoders, a number, well-established channel models]

>> Named Entities are: 
[]


============================ Sentence 448 =============================

This is the case for channels with strong non-linearities, as recognized as early as the nineties in the context of satellite communication [2], [32] and more recently for optical communications [33]; or for modulation schemes such as continuous phase modulation [34] – another work from the nineties – or in multi–user networks [35].   


>> Tokens are: 
[case, channels, strong, non, -, linearities, ,, recognized, early, nineties, context, satellite, communication, [, 2, ], ,, [, 32, ], recently, optical, communications, [, 33, ], ;, modulation, schemes, continuous, phase, modulation, [, 34, ], –, work, nineties, –, multi, –, user, networks, [, 35, ], .,  ] 

>> PoS Tags are: 
[('case', 'NOUN'), ('channels', 'NOUN'), ('strong', 'ADJ'), ('non', 'ADJ'), ('-', 'NOUN'), ('linearities', 'NOUN'), (',', 'PUNCT'), ('recognized', 'VERB'), ('early', 'ADV'), ('nineties', 'NOUN'), ('context', 'NOUN'), ('satellite', 'NOUN'), ('communication', 'NOUN'), ('[', 'PUNCT'), ('2', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('[', 'PUNCT'), ('32', 'NUM'), (']', 'PUNCT'), ('recently', 'ADV'), ('optical', 'ADJ'), ('communications', 'NOUN'), ('[', 'PUNCT'), ('33', 'NUM'), (']', 'PUNCT'), (';', 'PUNCT'), ('modulation', 'NOUN'), ('schemes', 'NOUN'), ('continuous', 'ADJ'), ('phase', 'NOUN'), ('modulation', 'NOUN'), ('[', 'PUNCT'), ('34', 'NUM'), (']', 'PUNCT'), ('–', 'PUNCT'), ('work', 'NOUN'), ('nineties', 'NOUN'), ('–', 'PUNCT'), ('multi', 'ADJ'), ('–', 'PUNCT'), ('user', 'NOUN'), ('networks', 'NOUN'), ('[', 'PUNCT'), ('35', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('case', 'attr'), ('channels', 'pobj'), ('strong', 'amod'), ('non', 'pobj'), ('-', 'pobj'), ('linearities', 'pobj'), (',', 'punct'), ('recognized', 'advcl'), ('early', 'advmod'), ('nineties', 'pobj'), ('context', 'pobj'), ('satellite', 'compound'), ('communication', 'pobj'), ('[', 'punct'), ('2', 'dep'), (']', 'punct'), (',', 'punct'), ('[', 'dep'), ('32', 'dep'), (']', 'punct'), ('recently', 'advmod'), ('optical', 'amod'), ('communications', 'pobj'), ('[', 'punct'), ('33', 'dep'), (']', 'punct'), (';', 'punct'), ('modulation', 'compound'), ('schemes', 'pobj'), ('continuous', 'amod'), ('phase', 'compound'), ('modulation', 'pobj'), ('[', 'punct'), ('34', 'appos'), (']', 'punct'), ('–', 'punct'), ('work', 'conj'), ('nineties', 'pobj'), ('–', 'punct'), ('multi', 'amod'), ('–', 'punct'), ('user', 'compound'), ('networks', 'pobj'), ('[', 'punct'), ('35', 'appos'), (']', 'punct'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[case, channels], [channels, strong], [strong, non], [non, -], [-, linearities], [linearities, ,], [,, recognized], [recognized, early], [early, nineties], [nineties, context], [context, satellite], [satellite, communication], [communication, [], [[, 2], [2, ]], [], ,], [,, [], [[, 32], [32, ]], [], recently], [recently, optical], [optical, communications], [communications, [], [[, 33], [33, ]], [], ;], [;, modulation], [modulation, schemes], [schemes, continuous], [continuous, phase], [phase, modulation], [modulation, [], [[, 34], [34, ]], [], –], [–, work], [work, nineties], [nineties, –], [–, multi], [multi, –], [–, user], [user, networks], [networks, [], [[, 35], [35, ]], [], .], [.,  ]]

>> Trigrams: 
[[case, channels, strong], [channels, strong, non], [strong, non, -], [non, -, linearities], [-, linearities, ,], [linearities, ,, recognized], [,, recognized, early], [recognized, early, nineties], [early, nineties, context], [nineties, context, satellite], [context, satellite, communication], [satellite, communication, [], [communication, [, 2], [[, 2, ]], [2, ], ,], [], ,, [], [,, [, 32], [[, 32, ]], [32, ], recently], [], recently, optical], [recently, optical, communications], [optical, communications, [], [communications, [, 33], [[, 33, ]], [33, ], ;], [], ;, modulation], [;, modulation, schemes], [modulation, schemes, continuous], [schemes, continuous, phase], [continuous, phase, modulation], [phase, modulation, [], [modulation, [, 34], [[, 34, ]], [34, ], –], [], –, work], [–, work, nineties], [work, nineties, –], [nineties, –, multi], [–, multi, –], [multi, –, user], [–, user, networks], [user, networks, [], [networks, [, 35], [[, 35, ]], [35, ], .], [], .,  ]]

>> Noun Phrases are: 
[the case, channels, -, linearities, the nineties, the context, satellite communication, optical communications, modulation schemes, continuous phase modulation, the nineties, –user networks]

>> Named Entities are: 
[('2', 'CARDINAL'), ('32', 'CARDINAL'), ('33', 'CARDINAL'), ('34', 'CARDINAL'), ('35', 'CARDINAL')]


============================ Sentence 449 =============================

Assuming that the problem at hand is characterized by a modelling or algorithmic deficit, then one should also  check the remaining criteria listed in Sec. 


>> Tokens are: 
[Assuming, problem, hand, characterized, modelling, algorithmic, deficit, ,,  , check, remaining, criteria, listed, Sec, .] 

>> PoS Tags are: 
[('Assuming', 'VERB'), ('problem', 'NOUN'), ('hand', 'NOUN'), ('characterized', 'VERB'), ('modelling', 'NOUN'), ('algorithmic', 'ADJ'), ('deficit', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('check', 'VERB'), ('remaining', 'VERB'), ('criteria', 'NOUN'), ('listed', 'VERB'), ('Sec', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Assuming', 'advcl'), ('problem', 'nsubjpass'), ('hand', 'pobj'), ('characterized', 'ccomp'), ('modelling', 'amod'), ('algorithmic', 'conj'), ('deficit', 'pobj'), (',', 'punct'), (' ', 'nsubj'), ('check', 'ROOT'), ('remaining', 'amod'), ('criteria', 'dobj'), ('listed', 'acl'), ('Sec', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Assuming, problem], [problem, hand], [hand, characterized], [characterized, modelling], [modelling, algorithmic], [algorithmic, deficit], [deficit, ,], [,,  ], [ , check], [check, remaining], [remaining, criteria], [criteria, listed], [listed, Sec], [Sec, .]]

>> Trigrams: 
[[Assuming, problem, hand], [problem, hand, characterized], [hand, characterized, modelling], [characterized, modelling, algorithmic], [modelling, algorithmic, deficit], [algorithmic, deficit, ,], [deficit, ,,  ], [,,  , check], [ , check, remaining], [check, remaining, criteria], [remaining, criteria, listed], [criteria, listed, Sec], [listed, Sec, .]]

>> Noun Phrases are: 
[the problem, hand, a modelling or algorithmic deficit, one, the remaining criteria, Sec]

>> Named Entities are: 
[('Sec', 'PERSON')]


============================ Sentence 450 =============================

II, particularly those regarding the rate of change of the phenomenon under study and the requirements in terms of perfor- mance guarantees. 


>> Tokens are: 
[II, ,, particularly, rate, change, phenomenon, study, requirements, terms, perfor-, mance, guarantees, .] 

>> PoS Tags are: 
[('II', 'NUM'), (',', 'PUNCT'), ('particularly', 'ADV'), ('rate', 'NOUN'), ('change', 'NOUN'), ('phenomenon', 'NOUN'), ('study', 'NOUN'), ('requirements', 'NOUN'), ('terms', 'NOUN'), ('perfor-', 'NOUN'), ('mance', 'NOUN'), ('guarantees', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('II', 'ROOT'), (',', 'punct'), ('particularly', 'advmod'), ('rate', 'pobj'), ('change', 'pobj'), ('phenomenon', 'pobj'), ('study', 'pobj'), ('requirements', 'conj'), ('terms', 'pobj'), ('perfor-', 'compound'), ('mance', 'compound'), ('guarantees', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[II, ,], [,, particularly], [particularly, rate], [rate, change], [change, phenomenon], [phenomenon, study], [study, requirements], [requirements, terms], [terms, perfor-], [perfor-, mance], [mance, guarantees], [guarantees, .]]

>> Trigrams: 
[[II, ,, particularly], [,, particularly, rate], [particularly, rate, change], [rate, change, phenomenon], [change, phenomenon, study], [phenomenon, study, requirements], [study, requirements, terms], [requirements, terms, perfor-], [terms, perfor-, mance], [perfor-, mance, guarantees], [mance, guarantees, .]]

>> Noun Phrases are: 
[the rate, change, the phenomenon, study, the requirements, terms, perfor- mance guarantees]

>> Named Entities are: 
[('II', 'ORG')]


============================ Sentence 451 =============================

For channel decoding, the presence of fast-varying channels may make the first criterion hard to be satisfied in practice (unless channel estimation is made part of the learning process); while stringent reliability requirements may preclude the use of machine learning in the presence of a model deficit. 


>> Tokens are: 
[channel, decoding, ,, presence, fast, -, varying, channels, criterion, hard, satisfied, practice, (, channel, estimation, learning, process, ), ;, stringent, reliability, requirements, preclude, use, machine, learning, presence, model, deficit, .] 

>> PoS Tags are: 
[('channel', 'NOUN'), ('decoding', 'VERB'), (',', 'PUNCT'), ('presence', 'NOUN'), ('fast', 'ADV'), ('-', 'PUNCT'), ('varying', 'VERB'), ('channels', 'NOUN'), ('criterion', 'NOUN'), ('hard', 'ADV'), ('satisfied', 'ADJ'), ('practice', 'NOUN'), ('(', 'PUNCT'), ('channel', 'NOUN'), ('estimation', 'NOUN'), ('learning', 'NOUN'), ('process', 'NOUN'), (')', 'PUNCT'), (';', 'PUNCT'), ('stringent', 'ADJ'), ('reliability', 'NOUN'), ('requirements', 'NOUN'), ('preclude', 'VERB'), ('use', 'NOUN'), ('machine', 'NOUN'), ('learning', 'VERB'), ('presence', 'NOUN'), ('model', 'NOUN'), ('deficit', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('channel', 'nsubj'), ('decoding', 'pobj'), (',', 'punct'), ('presence', 'nsubj'), ('fast', 'advmod'), ('-', 'punct'), ('varying', 'amod'), ('channels', 'pobj'), ('criterion', 'nsubj'), ('hard', 'ccomp'), ('satisfied', 'acomp'), ('practice', 'pobj'), ('(', 'punct'), ('channel', 'compound'), ('estimation', 'nsubjpass'), ('learning', 'compound'), ('process', 'pobj'), (')', 'punct'), (';', 'punct'), ('stringent', 'amod'), ('reliability', 'compound'), ('requirements', 'nsubj'), ('preclude', 'advcl'), ('use', 'dobj'), ('machine', 'compound'), ('learning', 'pobj'), ('presence', 'pobj'), ('model', 'compound'), ('deficit', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[channel, decoding], [decoding, ,], [,, presence], [presence, fast], [fast, -], [-, varying], [varying, channels], [channels, criterion], [criterion, hard], [hard, satisfied], [satisfied, practice], [practice, (], [(, channel], [channel, estimation], [estimation, learning], [learning, process], [process, )], [), ;], [;, stringent], [stringent, reliability], [reliability, requirements], [requirements, preclude], [preclude, use], [use, machine], [machine, learning], [learning, presence], [presence, model], [model, deficit], [deficit, .]]

>> Trigrams: 
[[channel, decoding, ,], [decoding, ,, presence], [,, presence, fast], [presence, fast, -], [fast, -, varying], [-, varying, channels], [varying, channels, criterion], [channels, criterion, hard], [criterion, hard, satisfied], [hard, satisfied, practice], [satisfied, practice, (], [practice, (, channel], [(, channel, estimation], [channel, estimation, learning], [estimation, learning, process], [learning, process, )], [process, ), ;], [), ;, stringent], [;, stringent, reliability], [stringent, reliability, requirements], [reliability, requirements, preclude], [requirements, preclude, use], [preclude, use, machine], [use, machine, learning], [machine, learning, presence], [learning, presence, model], [presence, model, deficit], [model, deficit, .]]

>> Noun Phrases are: 
[channel, the presence, fast-varying channels, the first criterion, practice, channel estimation, part, the learning process, stringent reliability requirements, the use, the presence, a model deficit]

>> Named Entities are: 
[('first', 'ORDINAL')]


============================ Sentence 452 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 453 =============================

As mentioned, a generally beneficial idea in the use of data-aided methods is that of incorporating domain knowledge in the definition of the hypothesis class. 


>> Tokens are: 
[mentioned, ,, generally, beneficial, idea, use, data, -, aided, methods, incorporating, domain, knowledge, definition, hypothesis, class, .] 

>> PoS Tags are: 
[('mentioned', 'VERB'), (',', 'PUNCT'), ('generally', 'ADV'), ('beneficial', 'ADJ'), ('idea', 'NOUN'), ('use', 'NOUN'), ('data', 'NOUN'), ('-', 'PUNCT'), ('aided', 'VERB'), ('methods', 'NOUN'), ('incorporating', 'VERB'), ('domain', 'NOUN'), ('knowledge', 'NOUN'), ('definition', 'NOUN'), ('hypothesis', 'NOUN'), ('class', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('mentioned', 'advcl'), (',', 'punct'), ('generally', 'advmod'), ('beneficial', 'amod'), ('idea', 'nsubj'), ('use', 'pobj'), ('data', 'npadvmod'), ('-', 'punct'), ('aided', 'amod'), ('methods', 'pobj'), ('incorporating', 'pcomp'), ('domain', 'compound'), ('knowledge', 'dobj'), ('definition', 'pobj'), ('hypothesis', 'compound'), ('class', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[mentioned, ,], [,, generally], [generally, beneficial], [beneficial, idea], [idea, use], [use, data], [data, -], [-, aided], [aided, methods], [methods, incorporating], [incorporating, domain], [domain, knowledge], [knowledge, definition], [definition, hypothesis], [hypothesis, class], [class, .]]

>> Trigrams: 
[[mentioned, ,, generally], [,, generally, beneficial], [generally, beneficial, idea], [beneficial, idea, use], [idea, use, data], [use, data, -], [data, -, aided], [-, aided, methods], [aided, methods, incorporating], [methods, incorporating, domain], [incorporating, domain, knowledge], [domain, knowledge, definition], [knowledge, definition, hypothesis], [definition, hypothesis, class], [hypothesis, class, .]]

>> Noun Phrases are: 
[a generally beneficial idea, the use, data-aided methods, domain knowledge, the definition, the hypothesis class]

>> Named Entities are: 
[]


============================ Sentence 454 =============================

As notable examples related to channel decoding, in [36], [37], knowledge of the near-optimality of message pass- ing methods for the decoding of sparse graphical codes is used to set up a parameterized model that borrows the message passing structure and that is trained to decode more general codes. 


>> Tokens are: 
[notable, examples, related, channel, decoding, ,, [, 36, ], ,, [, 37, ], ,, knowledge, near, -, optimality, message, pass-, ing, methods, decoding, sparse, graphical, codes, set, parameterized, model, borrows, message, passing, structure, trained, decode, general, codes, .] 

>> PoS Tags are: 
[('notable', 'ADJ'), ('examples', 'NOUN'), ('related', 'VERB'), ('channel', 'VERB'), ('decoding', 'VERB'), (',', 'PUNCT'), ('[', 'PUNCT'), ('36', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('[', 'PUNCT'), ('37', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('knowledge', 'NOUN'), ('near', 'ADJ'), ('-', 'PUNCT'), ('optimality', 'NOUN'), ('message', 'NOUN'), ('pass-', 'X'), ('ing', 'ADJ'), ('methods', 'NOUN'), ('decoding', 'NOUN'), ('sparse', 'ADJ'), ('graphical', 'ADJ'), ('codes', 'NOUN'), ('set', 'VERB'), ('parameterized', 'ADJ'), ('model', 'NOUN'), ('borrows', 'VERB'), ('message', 'NOUN'), ('passing', 'VERB'), ('structure', 'NOUN'), ('trained', 'VERB'), ('decode', 'VERB'), ('general', 'ADJ'), ('codes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('notable', 'amod'), ('examples', 'pobj'), ('related', 'acl'), ('channel', 'compound'), ('decoding', 'pobj'), (',', 'punct'), ('[', 'pobj'), ('36', 'pobj'), (']', 'punct'), (',', 'punct'), ('[', 'punct'), ('37', 'pobj'), (']', 'punct'), (',', 'punct'), ('knowledge', 'pobj'), ('near', 'amod'), ('-', 'punct'), ('optimality', 'pobj'), ('message', 'pobj'), ('pass-', 'advcl'), ('ing', 'amod'), ('methods', 'dobj'), ('decoding', 'pobj'), ('sparse', 'amod'), ('graphical', 'amod'), ('codes', 'pobj'), ('set', 'xcomp'), ('parameterized', 'amod'), ('model', 'dobj'), ('borrows', 'relcl'), ('message', 'npadvmod'), ('passing', 'amod'), ('structure', 'dobj'), ('trained', 'conj'), ('decode', 'xcomp'), ('general', 'amod'), ('codes', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[notable, examples], [examples, related], [related, channel], [channel, decoding], [decoding, ,], [,, [], [[, 36], [36, ]], [], ,], [,, [], [[, 37], [37, ]], [], ,], [,, knowledge], [knowledge, near], [near, -], [-, optimality], [optimality, message], [message, pass-], [pass-, ing], [ing, methods], [methods, decoding], [decoding, sparse], [sparse, graphical], [graphical, codes], [codes, set], [set, parameterized], [parameterized, model], [model, borrows], [borrows, message], [message, passing], [passing, structure], [structure, trained], [trained, decode], [decode, general], [general, codes], [codes, .]]

>> Trigrams: 
[[notable, examples, related], [examples, related, channel], [related, channel, decoding], [channel, decoding, ,], [decoding, ,, [], [,, [, 36], [[, 36, ]], [36, ], ,], [], ,, [], [,, [, 37], [[, 37, ]], [37, ], ,], [], ,, knowledge], [,, knowledge, near], [knowledge, near, -], [near, -, optimality], [-, optimality, message], [optimality, message, pass-], [message, pass-, ing], [pass-, ing, methods], [ing, methods, decoding], [methods, decoding, sparse], [decoding, sparse, graphical], [sparse, graphical, codes], [graphical, codes, set], [codes, set, parameterized], [set, parameterized, model], [parameterized, model, borrows], [model, borrows, message], [borrows, message, passing], [message, passing, structure], [passing, structure, trained], [structure, trained, decode], [trained, decode, general], [decode, general, codes], [general, codes, .]]

>> Noun Phrases are: 
[notable examples, knowledge, the near-optimality, message, ing methods, the decoding, sparse graphical codes, a parameterized model, the message passing structure, more general codes]

>> Named Entities are: 
[('36', 'CARDINAL'), ('37', 'CARDINAL')]


============================ Sentence 455 =============================

A related approach is investigated in [38] for polar codes. 


>> Tokens are: 
[related, approach, investigated, [, 38, ], polar, codes, .] 

>> PoS Tags are: 
[('related', 'ADJ'), ('approach', 'NOUN'), ('investigated', 'VERB'), ('[', 'PUNCT'), ('38', 'NUM'), (']', 'PUNCT'), ('polar', 'ADJ'), ('codes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('related', 'amod'), ('approach', 'nsubjpass'), ('investigated', 'ROOT'), ('[', 'punct'), ('38', 'pobj'), (']', 'punct'), ('polar', 'amod'), ('codes', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[related, approach], [approach, investigated], [investigated, [], [[, 38], [38, ]], [], polar], [polar, codes], [codes, .]]

>> Trigrams: 
[[related, approach, investigated], [approach, investigated, [], [investigated, [, 38], [[, 38, ]], [38, ], polar], [], polar, codes], [polar, codes, .]]

>> Noun Phrases are: 
[A related approach, polar codes]

>> Named Entities are: 
[('38', 'CARDINAL')]


============================ Sentence 456 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 457 =============================

Another useful idea is that of directly integrating algorithms designed using the standard engineering flow with trained machines. 


>> Tokens are: 
[useful, idea, directly, integrating, algorithms, designed, standard, engineering, flow, trained, machines, .] 

>> PoS Tags are: 
[('useful', 'ADJ'), ('idea', 'NOUN'), ('directly', 'ADV'), ('integrating', 'VERB'), ('algorithms', 'NOUN'), ('designed', 'VERB'), ('standard', 'ADJ'), ('engineering', 'NOUN'), ('flow', 'NOUN'), ('trained', 'VERB'), ('machines', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('useful', 'amod'), ('idea', 'nsubj'), ('directly', 'advmod'), ('integrating', 'pcomp'), ('algorithms', 'dobj'), ('designed', 'acl'), ('standard', 'amod'), ('engineering', 'compound'), ('flow', 'dobj'), ('trained', 'amod'), ('machines', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[useful, idea], [idea, directly], [directly, integrating], [integrating, algorithms], [algorithms, designed], [designed, standard], [standard, engineering], [engineering, flow], [flow, trained], [trained, machines], [machines, .]]

>> Trigrams: 
[[useful, idea, directly], [idea, directly, integrating], [directly, integrating, algorithms], [integrating, algorithms, designed], [algorithms, designed, standard], [designed, standard, engineering], [standard, engineering, flow], [engineering, flow, trained], [flow, trained, machines], [trained, machines, .]]

>> Noun Phrases are: 
[Another useful idea, algorithms, the standard engineering flow, trained machines]

>> Named Entities are: 
[]


============================ Sentence 458 =============================

Instances of this idea include [39] in which a conventional channel decoder is deployed in tandem with a channel equalizer at its input that is trained to compensate for hardware impairments. 


>> Tokens are: 
[Instances, idea, include, [, 39, ], conventional, channel, decoder, deployed, tandem, channel, equalizer, input, trained, compensate, hardware, impairments, .] 

>> PoS Tags are: 
[('Instances', 'NOUN'), ('idea', 'NOUN'), ('include', 'VERB'), ('[', 'PUNCT'), ('39', 'NUM'), (']', 'PUNCT'), ('conventional', 'ADJ'), ('channel', 'NOUN'), ('decoder', 'NOUN'), ('deployed', 'VERB'), ('tandem', 'NOUN'), ('channel', 'NOUN'), ('equalizer', 'NOUN'), ('input', 'NOUN'), ('trained', 'VERB'), ('compensate', 'VERB'), ('hardware', 'NOUN'), ('impairments', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Instances', 'nsubj'), ('idea', 'pobj'), ('include', 'ROOT'), ('[', 'punct'), ('39', 'dobj'), (']', 'punct'), ('conventional', 'amod'), ('channel', 'compound'), ('decoder', 'nsubjpass'), ('deployed', 'ccomp'), ('tandem', 'pobj'), ('channel', 'compound'), ('equalizer', 'pobj'), ('input', 'pobj'), ('trained', 'relcl'), ('compensate', 'xcomp'), ('hardware', 'compound'), ('impairments', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Instances, idea], [idea, include], [include, [], [[, 39], [39, ]], [], conventional], [conventional, channel], [channel, decoder], [decoder, deployed], [deployed, tandem], [tandem, channel], [channel, equalizer], [equalizer, input], [input, trained], [trained, compensate], [compensate, hardware], [hardware, impairments], [impairments, .]]

>> Trigrams: 
[[Instances, idea, include], [idea, include, [], [include, [, 39], [[, 39, ]], [39, ], conventional], [], conventional, channel], [conventional, channel, decoder], [channel, decoder, deployed], [decoder, deployed, tandem], [deployed, tandem, channel], [tandem, channel, equalizer], [channel, equalizer, input], [equalizer, input, trained], [input, trained, compensate], [trained, compensate, hardware], [compensate, hardware, impairments], [hardware, impairments, .]]

>> Noun Phrases are: 
[Instances, this idea, a conventional channel decoder, tandem, a channel equalizer, its input, hardware impairments]

>> Named Entities are: 
[('39', 'CARDINAL')]


============================ Sentence 459 =============================

A related approach is proposed in [40], whereby a conventional decoder is implemented within a turbo-like iterative loop with a machine learning-based regressor that has the role of estimating the channel noise. 


>> Tokens are: 
[related, approach, proposed, [, 40, ], ,, conventional, decoder, implemented, turbo, -, like, iterative, loop, machine, learning, -, based, regressor, role, estimating, channel, noise, .] 

>> PoS Tags are: 
[('related', 'ADJ'), ('approach', 'NOUN'), ('proposed', 'VERB'), ('[', 'PUNCT'), ('40', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('conventional', 'ADJ'), ('decoder', 'NOUN'), ('implemented', 'VERB'), ('turbo', 'NOUN'), ('-', 'PUNCT'), ('like', 'ADJ'), ('iterative', 'ADJ'), ('loop', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('regressor', 'NOUN'), ('role', 'NOUN'), ('estimating', 'VERB'), ('channel', 'NOUN'), ('noise', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('related', 'amod'), ('approach', 'nsubjpass'), ('proposed', 'ROOT'), ('[', 'punct'), ('40', 'pobj'), (']', 'punct'), (',', 'punct'), ('conventional', 'amod'), ('decoder', 'nsubjpass'), ('implemented', 'advcl'), ('turbo', 'npadvmod'), ('-', 'punct'), ('like', 'amod'), ('iterative', 'amod'), ('loop', 'pobj'), ('machine', 'npadvmod'), ('learning', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('regressor', 'pobj'), ('role', 'dobj'), ('estimating', 'pcomp'), ('channel', 'compound'), ('noise', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[related, approach], [approach, proposed], [proposed, [], [[, 40], [40, ]], [], ,], [,, conventional], [conventional, decoder], [decoder, implemented], [implemented, turbo], [turbo, -], [-, like], [like, iterative], [iterative, loop], [loop, machine], [machine, learning], [learning, -], [-, based], [based, regressor], [regressor, role], [role, estimating], [estimating, channel], [channel, noise], [noise, .]]

>> Trigrams: 
[[related, approach, proposed], [approach, proposed, [], [proposed, [, 40], [[, 40, ]], [40, ], ,], [], ,, conventional], [,, conventional, decoder], [conventional, decoder, implemented], [decoder, implemented, turbo], [implemented, turbo, -], [turbo, -, like], [-, like, iterative], [like, iterative, loop], [iterative, loop, machine], [loop, machine, learning], [machine, learning, -], [learning, -, based], [-, based, regressor], [based, regressor, role], [regressor, role, estimating], [role, estimating, channel], [estimating, channel, noise], [channel, noise, .]]

>> Noun Phrases are: 
[A related approach, a conventional decoder, a turbo-like iterative loop, a machine learning-based regressor, the role, the channel noise]

>> Named Entities are: 
[('40', 'CARDINAL')]


============================ Sentence 460 =============================

 Other tasks that can potentially benefit from machine learning at the receiver’s side include modulation clas- sification, which is a classification problem justified by the complexity of optimal solutions (algorithm deficit) 


>> Tokens are: 
[ , tasks, potentially, benefit, machine, learning, receiver, include, modulation, clas-, sification, ,, classification, problem, justified, complexity, optimal, solutions, (, algorithm, deficit, )] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('tasks', 'NOUN'), ('potentially', 'ADV'), ('benefit', 'VERB'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('receiver', 'NOUN'), ('include', 'VERB'), ('modulation', 'NOUN'), ('clas-', 'ADP'), ('sification', 'NOUN'), (',', 'PUNCT'), ('classification', 'NOUN'), ('problem', 'NOUN'), ('justified', 'VERB'), ('complexity', 'NOUN'), ('optimal', 'ADJ'), ('solutions', 'NOUN'), ('(', 'PUNCT'), ('algorithm', 'NOUN'), ('deficit', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nmod'), ('tasks', 'nsubj'), ('potentially', 'advmod'), ('benefit', 'relcl'), ('machine', 'compound'), ('learning', 'pobj'), ('receiver', 'poss'), ('include', 'ROOT'), ('modulation', 'nmod'), ('clas-', 'compound'), ('sification', 'dobj'), (',', 'punct'), ('classification', 'compound'), ('problem', 'attr'), ('justified', 'acl'), ('complexity', 'pobj'), ('optimal', 'amod'), ('solutions', 'pobj'), ('(', 'punct'), ('algorithm', 'compound'), ('deficit', 'appos'), (')', 'punct')]

>> Bigrams: 
[[ , tasks], [tasks, potentially], [potentially, benefit], [benefit, machine], [machine, learning], [learning, receiver], [receiver, include], [include, modulation], [modulation, clas-], [clas-, sification], [sification, ,], [,, classification], [classification, problem], [problem, justified], [justified, complexity], [complexity, optimal], [optimal, solutions], [solutions, (], [(, algorithm], [algorithm, deficit], [deficit, )]]

>> Trigrams: 
[[ , tasks, potentially], [tasks, potentially, benefit], [potentially, benefit, machine], [benefit, machine, learning], [machine, learning, receiver], [learning, receiver, include], [receiver, include, modulation], [include, modulation, clas-], [modulation, clas-, sification], [clas-, sification, ,], [sification, ,, classification], [,, classification, problem], [classification, problem, justified], [problem, justified, complexity], [justified, complexity, optimal], [complexity, optimal, solutions], [optimal, solutions, (], [solutions, (, algorithm], [(, algorithm, deficit], [algorithm, deficit, )]]

>> Noun Phrases are: 
[ Other tasks, machine learning, the receiver’s side, modulation clas- sification, a classification problem, the complexity, optimal solutions, algorithm deficit]

>> Named Entities are: 
[]


============================ Sentence 461 =============================

[41]; localization, which is a regression problem, typ- ically motivated by the lack of tractable channels for complex propagation environments (model deficit) 


>> Tokens are: 
[[, 41, ], ;, localization, ,, regression, problem, ,, typ-, ically, motivated, lack, tractable, channels, complex, propagation, environments, (, model, deficit, )] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('41', 'NUM'), (']', 'PUNCT'), (';', 'PUNCT'), ('localization', 'NOUN'), (',', 'PUNCT'), ('regression', 'NOUN'), ('problem', 'NOUN'), (',', 'PUNCT'), ('typ-', 'NOUN'), ('ically', 'ADV'), ('motivated', 'VERB'), ('lack', 'NOUN'), ('tractable', 'ADJ'), ('channels', 'NOUN'), ('complex', 'ADJ'), ('propagation', 'NOUN'), ('environments', 'NOUN'), ('(', 'PUNCT'), ('model', 'NOUN'), ('deficit', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('41', 'nmod'), (']', 'punct'), (';', 'punct'), ('localization', 'ROOT'), (',', 'punct'), ('regression', 'compound'), ('problem', 'attr'), (',', 'punct'), ('typ-', 'appos'), ('ically', 'advmod'), ('motivated', 'acl'), ('lack', 'pobj'), ('tractable', 'amod'), ('channels', 'pobj'), ('complex', 'amod'), ('propagation', 'compound'), ('environments', 'pobj'), ('(', 'punct'), ('model', 'compound'), ('deficit', 'appos'), (')', 'punct')]

>> Bigrams: 
[[[, 41], [41, ]], [], ;], [;, localization], [localization, ,], [,, regression], [regression, problem], [problem, ,], [,, typ-], [typ-, ically], [ically, motivated], [motivated, lack], [lack, tractable], [tractable, channels], [channels, complex], [complex, propagation], [propagation, environments], [environments, (], [(, model], [model, deficit], [deficit, )]]

>> Trigrams: 
[[[, 41, ]], [41, ], ;], [], ;, localization], [;, localization, ,], [localization, ,, regression], [,, regression, problem], [regression, problem, ,], [problem, ,, typ-], [,, typ-, ically], [typ-, ically, motivated], [ically, motivated, lack], [motivated, lack, tractable], [lack, tractable, channels], [tractable, channels, complex], [channels, complex, propagation], [complex, propagation, environments], [propagation, environments, (], [environments, (, model], [(, model, deficit], [model, deficit, )]]

>> Noun Phrases are: 
[[41]; localization, a regression problem, typ-, the lack, tractable channels, complex propagation environments, (model deficit]

>> Named Entities are: 
[('41', 'CARDINAL')]


============================ Sentence 462 =============================

[42]; and channel state information-based authentication, a classification problem made difficult by the absence of well-established models relating channel features with devices’ identities (model deficit) 


>> Tokens are: 
[[, 42, ], ;, channel, state, information, -, based, authentication, ,, classification, problem, difficult, absence, -, established, models, relating, channel, features, devices, ’, identities, (, model, deficit, )] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('42', 'NUM'), (']', 'PUNCT'), (';', 'PUNCT'), ('channel', 'VERB'), ('state', 'NOUN'), ('information', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('authentication', 'NOUN'), (',', 'PUNCT'), ('classification', 'NOUN'), ('problem', 'NOUN'), ('difficult', 'ADJ'), ('absence', 'NOUN'), ('-', 'PUNCT'), ('established', 'VERB'), ('models', 'NOUN'), ('relating', 'VERB'), ('channel', 'NOUN'), ('features', 'NOUN'), ('devices', 'NOUN'), ('’', 'PART'), ('identities', 'NOUN'), ('(', 'PUNCT'), ('model', 'NOUN'), ('deficit', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('42', 'ROOT'), (']', 'punct'), (';', 'punct'), ('channel', 'compound'), ('state', 'compound'), ('information', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('authentication', 'conj'), (',', 'punct'), ('classification', 'compound'), ('problem', 'appos'), ('difficult', 'oprd'), ('absence', 'pobj'), ('-', 'punct'), ('established', 'amod'), ('models', 'pobj'), ('relating', 'acl'), ('channel', 'compound'), ('features', 'dobj'), ('devices', 'poss'), ('’', 'case'), ('identities', 'pobj'), ('(', 'punct'), ('model', 'compound'), ('deficit', 'appos'), (')', 'punct')]

>> Bigrams: 
[[[, 42], [42, ]], [], ;], [;, channel], [channel, state], [state, information], [information, -], [-, based], [based, authentication], [authentication, ,], [,, classification], [classification, problem], [problem, difficult], [difficult, absence], [absence, -], [-, established], [established, models], [models, relating], [relating, channel], [channel, features], [features, devices], [devices, ’], [’, identities], [identities, (], [(, model], [model, deficit], [deficit, )]]

>> Trigrams: 
[[[, 42, ]], [42, ], ;], [], ;, channel], [;, channel, state], [channel, state, information], [state, information, -], [information, -, based], [-, based, authentication], [based, authentication, ,], [authentication, ,, classification], [,, classification, problem], [classification, problem, difficult], [problem, difficult, absence], [difficult, absence, -], [absence, -, established], [-, established, models], [established, models, relating], [models, relating, channel], [relating, channel, features], [channel, features, devices], [features, devices, ’], [devices, ’, identities], [’, identities, (], [identities, (, model], [(, model, deficit], [model, deficit, )]]

>> Noun Phrases are: 
[channel state information-based authentication, a classification problem, the absence, well-established models, channel features, devices’ identities, model deficit]

>> Named Entities are: 
[('42', 'CARDINAL')]


============================ Sentence 463 =============================

[43]. 


>> Tokens are: 
[[, 43, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('43', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('43', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 43], [43, ]], [], .]]

>> Trigrams: 
[[[, 43, ]], [43, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('43', 'CARDINAL')]


============================ Sentence 464 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 465 =============================

Turning to the transmitter side, most emerging ap- plications tackle the algorithmic deficit related to the complexity of the non-convex programs that typically underlie power control and precoding optimization for the downlink. 


>> Tokens are: 
[Turning, transmitter, ,, emerging, ap-, plications, tackle, algorithmic, deficit, related, complexity, non, -, convex, programs, typically, underlie, power, control, precoding, optimization, downlink, .] 

>> PoS Tags are: 
[('Turning', 'VERB'), ('transmitter', 'NOUN'), (',', 'PUNCT'), ('emerging', 'VERB'), ('ap-', 'DET'), ('plications', 'NOUN'), ('tackle', 'VERB'), ('algorithmic', 'ADJ'), ('deficit', 'NOUN'), ('related', 'VERB'), ('complexity', 'NOUN'), ('non', 'ADJ'), ('-', 'ADJ'), ('convex', 'ADJ'), ('programs', 'NOUN'), ('typically', 'ADV'), ('underlie', 'VERB'), ('power', 'NOUN'), ('control', 'NOUN'), ('precoding', 'VERB'), ('optimization', 'NOUN'), ('downlink', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Turning', 'advcl'), ('transmitter', 'compound'), (',', 'punct'), ('emerging', 'amod'), ('ap-', 'compound'), ('plications', 'nsubj'), ('tackle', 'ROOT'), ('algorithmic', 'amod'), ('deficit', 'dobj'), ('related', 'acl'), ('complexity', 'pobj'), ('non', 'amod'), ('-', 'amod'), ('convex', 'amod'), ('programs', 'pobj'), ('typically', 'advmod'), ('underlie', 'relcl'), ('power', 'compound'), ('control', 'dobj'), ('precoding', 'conj'), ('optimization', 'dobj'), ('downlink', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Turning, transmitter], [transmitter, ,], [,, emerging], [emerging, ap-], [ap-, plications], [plications, tackle], [tackle, algorithmic], [algorithmic, deficit], [deficit, related], [related, complexity], [complexity, non], [non, -], [-, convex], [convex, programs], [programs, typically], [typically, underlie], [underlie, power], [power, control], [control, precoding], [precoding, optimization], [optimization, downlink], [downlink, .]]

>> Trigrams: 
[[Turning, transmitter, ,], [transmitter, ,, emerging], [,, emerging, ap-], [emerging, ap-, plications], [ap-, plications, tackle], [plications, tackle, algorithmic], [tackle, algorithmic, deficit], [algorithmic, deficit, related], [deficit, related, complexity], [related, complexity, non], [complexity, non, -], [non, -, convex], [-, convex, programs], [convex, programs, typically], [programs, typically, underlie], [typically, underlie, power], [underlie, power, control], [power, control, precoding], [control, precoding, optimization], [precoding, optimization, downlink], [optimization, downlink, .]]

>> Noun Phrases are: 
[the transmitter side, most emerging ap- plications, the algorithmic deficit, the complexity, the non-convex programs, power control, optimization, the downlink]

>> Named Entities are: 
[]


============================ Sentence 466 =============================

Notably, in [44], a training set is ob- tained by running a non-convex solver to produce an optimized output power vector for given input channels. 


>> Tokens are: 
[Notably, ,, [, 44, ], ,, training, set, ob-, tained, running, non, -, convex, solver, produce, optimized, output, power, vector, given, input, channels, .] 

>> PoS Tags are: 
[('Notably', 'ADV'), (',', 'PUNCT'), ('[', 'PUNCT'), ('44', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('training', 'NOUN'), ('set', 'NOUN'), ('ob-', 'ADV'), ('tained', 'VERB'), ('running', 'VERB'), ('non', 'ADJ'), ('-', 'ADJ'), ('convex', 'ADJ'), ('solver', 'NOUN'), ('produce', 'VERB'), ('optimized', 'VERB'), ('output', 'NOUN'), ('power', 'NOUN'), ('vector', 'NOUN'), ('given', 'VERB'), ('input', 'NOUN'), ('channels', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Notably', 'advmod'), (',', 'punct'), ('[', 'pobj'), ('44', 'pobj'), (']', 'punct'), (',', 'punct'), ('training', 'compound'), ('set', 'nsubjpass'), ('ob-', 'dep'), ('tained', 'ROOT'), ('running', 'pcomp'), ('non', 'amod'), ('-', 'amod'), ('convex', 'amod'), ('solver', 'dobj'), ('produce', 'advcl'), ('optimized', 'amod'), ('output', 'compound'), ('power', 'compound'), ('vector', 'dobj'), ('given', 'prep'), ('input', 'compound'), ('channels', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Notably, ,], [,, [], [[, 44], [44, ]], [], ,], [,, training], [training, set], [set, ob-], [ob-, tained], [tained, running], [running, non], [non, -], [-, convex], [convex, solver], [solver, produce], [produce, optimized], [optimized, output], [output, power], [power, vector], [vector, given], [given, input], [input, channels], [channels, .]]

>> Trigrams: 
[[Notably, ,, [], [,, [, 44], [[, 44, ]], [44, ], ,], [], ,, training], [,, training, set], [training, set, ob-], [set, ob-, tained], [ob-, tained, running], [tained, running, non], [running, non, -], [non, -, convex], [-, convex, solver], [convex, solver, produce], [solver, produce, optimized], [produce, optimized, output], [optimized, output, power], [output, power, vector], [power, vector, given], [vector, given, input], [given, input, channels], [input, channels, .]]

>> Noun Phrases are: 
[a training set, a non-convex solver, an optimized output power vector, input channels]

>> Named Entities are: 
[('44', 'CARDINAL')]


============================ Sentence 467 =============================

Note that the approach does not directly optimize the performance criterion of interest, such as the sum-rate. 


>> Tokens are: 
[Note, approach, directly, optimize, performance, criterion, interest, ,, sum, -, rate, .] 

>> PoS Tags are: 
[('Note', 'VERB'), ('approach', 'NOUN'), ('directly', 'ADV'), ('optimize', 'VERB'), ('performance', 'NOUN'), ('criterion', 'NOUN'), ('interest', 'NOUN'), (',', 'PUNCT'), ('sum', 'NOUN'), ('-', 'PUNCT'), ('rate', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Note', 'ROOT'), ('approach', 'nsubj'), ('directly', 'advmod'), ('optimize', 'ccomp'), ('performance', 'compound'), ('criterion', 'dobj'), ('interest', 'pobj'), (',', 'punct'), ('sum', 'compound'), ('-', 'punct'), ('rate', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Note, approach], [approach, directly], [directly, optimize], [optimize, performance], [performance, criterion], [criterion, interest], [interest, ,], [,, sum], [sum, -], [-, rate], [rate, .]]

>> Trigrams: 
[[Note, approach, directly], [approach, directly, optimize], [directly, optimize, performance], [optimize, performance, criterion], [performance, criterion, interest], [criterion, interest, ,], [interest, ,, sum], [,, sum, -], [sum, -, rate], [-, rate, .]]

>> Noun Phrases are: 
[the approach, the performance criterion, interest, the sum-rate]

>> Named Entities are: 
[]


============================ Sentence 468 =============================

Rather, it relies on the assumption that similar inputs – the channel coefficients – generally yield similar optimal solutions – the power allocation vector. 


>> Tokens are: 
[,, relies, assumption, similar, inputs, –, channel, coefficients, –, generally, yield, similar, optimal, solutions, –, power, allocation, vector, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('relies', 'VERB'), ('assumption', 'NOUN'), ('similar', 'ADJ'), ('inputs', 'NOUN'), ('–', 'PUNCT'), ('channel', 'NOUN'), ('coefficients', 'NOUN'), ('–', 'PUNCT'), ('generally', 'ADV'), ('yield', 'VERB'), ('similar', 'ADJ'), ('optimal', 'ADJ'), ('solutions', 'NOUN'), ('–', 'PUNCT'), ('power', 'NOUN'), ('allocation', 'NOUN'), ('vector', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('relies', 'ROOT'), ('assumption', 'pobj'), ('similar', 'amod'), ('inputs', 'nsubj'), ('–', 'punct'), ('channel', 'compound'), ('coefficients', 'appos'), ('–', 'punct'), ('generally', 'advmod'), ('yield', 'acl'), ('similar', 'amod'), ('optimal', 'amod'), ('solutions', 'dobj'), ('–', 'punct'), ('power', 'compound'), ('allocation', 'compound'), ('vector', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[,, relies], [relies, assumption], [assumption, similar], [similar, inputs], [inputs, –], [–, channel], [channel, coefficients], [coefficients, –], [–, generally], [generally, yield], [yield, similar], [similar, optimal], [optimal, solutions], [solutions, –], [–, power], [power, allocation], [allocation, vector], [vector, .]]

>> Trigrams: 
[[,, relies, assumption], [relies, assumption, similar], [assumption, similar, inputs], [similar, inputs, –], [inputs, –, channel], [–, channel, coefficients], [channel, coefficients, –], [coefficients, –, generally], [–, generally, yield], [generally, yield, similar], [yield, similar, optimal], [similar, optimal, solutions], [optimal, solutions, –], [solutions, –, power], [–, power, allocation], [power, allocation, vector], [allocation, vector, .]]

>> Noun Phrases are: 
[it, the assumption, similar inputs, the channel coefficients, similar optimal solutions, the power allocation vector]

>> Named Entities are: 
[]


============================ Sentence 469 =============================

if the analytical  11    model available based on domain knowledge is only a coarse approximation of the physical model, the resulting training set can be used to augment the data in order to carry out a preliminary training of a machine learning model [45]2. 


>> Tokens are: 
[analytical,  , 11,    , model, available, based, domain, knowledge, coarse, approximation, physical, model, ,, resulting, training, set, augment, data, order, carry, preliminary, training, machine, learning, model, [, 45]2, .] 

>> PoS Tags are: 
[('analytical', 'ADJ'), (' ', 'SPACE'), ('11', 'NUM'), ('   ', 'SPACE'), ('model', 'NOUN'), ('available', 'ADJ'), ('based', 'VERB'), ('domain', 'NOUN'), ('knowledge', 'NOUN'), ('coarse', 'ADJ'), ('approximation', 'NOUN'), ('physical', 'ADJ'), ('model', 'NOUN'), (',', 'PUNCT'), ('resulting', 'VERB'), ('training', 'NOUN'), ('set', 'NOUN'), ('augment', 'VERB'), ('data', 'NOUN'), ('order', 'NOUN'), ('carry', 'VERB'), ('preliminary', 'ADJ'), ('training', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('model', 'NOUN'), ('[', 'PUNCT'), ('45]2', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('analytical', 'amod'), (' ', 'nmod'), ('11', 'nummod'), ('   ', 'nummod'), ('model', 'nsubj'), ('available', 'amod'), ('based', 'acl'), ('domain', 'compound'), ('knowledge', 'pobj'), ('coarse', 'amod'), ('approximation', 'attr'), ('physical', 'amod'), ('model', 'pobj'), (',', 'punct'), ('resulting', 'amod'), ('training', 'compound'), ('set', 'nsubjpass'), ('augment', 'xcomp'), ('data', 'dobj'), ('order', 'pobj'), ('carry', 'acl'), ('preliminary', 'amod'), ('training', 'dobj'), ('machine', 'compound'), ('learning', 'compound'), ('model', 'pobj'), ('[', 'punct'), ('45]2', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[analytical,  ], [ , 11], [11,    ], [   , model], [model, available], [available, based], [based, domain], [domain, knowledge], [knowledge, coarse], [coarse, approximation], [approximation, physical], [physical, model], [model, ,], [,, resulting], [resulting, training], [training, set], [set, augment], [augment, data], [data, order], [order, carry], [carry, preliminary], [preliminary, training], [training, machine], [machine, learning], [learning, model], [model, [], [[, 45]2], [45]2, .]]

>> Trigrams: 
[[analytical,  , 11], [ , 11,    ], [11,    , model], [   , model, available], [model, available, based], [available, based, domain], [based, domain, knowledge], [domain, knowledge, coarse], [knowledge, coarse, approximation], [coarse, approximation, physical], [approximation, physical, model], [physical, model, ,], [model, ,, resulting], [,, resulting, training], [resulting, training, set], [training, set, augment], [set, augment, data], [augment, data, order], [data, order, carry], [order, carry, preliminary], [carry, preliminary, training], [preliminary, training, machine], [training, machine, learning], [machine, learning, model], [learning, model, [], [model, [, 45]2], [[, 45]2, .]]

>> Noun Phrases are: 
[the analytical  11    model, domain knowledge, only a coarse approximation, the physical model, the resulting training set, the data, order, a preliminary training, a machine learning model]

>> Named Entities are: 
[('11', 'CARDINAL')]


============================ Sentence 470 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 471 =============================

For an application at a full-duplex transceiver, we refer to [47], which learns how to cancel self-interference in order to overcome the lack of well-established models for the transmitter-receiver chain of non-linearities. 


>> Tokens are: 
[application, -, duplex, transceiver, ,, refer, [, 47, ], ,, learns, cancel, self, -, interference, order, overcome, lack, -, established, models, transmitter, -, receiver, chain, non, -, linearities, .] 

>> PoS Tags are: 
[('application', 'NOUN'), ('-', 'PUNCT'), ('duplex', 'NOUN'), ('transceiver', 'NOUN'), (',', 'PUNCT'), ('refer', 'VERB'), ('[', 'PUNCT'), ('47', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('learns', 'VERB'), ('cancel', 'VERB'), ('self', 'NOUN'), ('-', 'PUNCT'), ('interference', 'NOUN'), ('order', 'NOUN'), ('overcome', 'VERB'), ('lack', 'NOUN'), ('-', 'PUNCT'), ('established', 'VERB'), ('models', 'NOUN'), ('transmitter', 'NOUN'), ('-', 'PUNCT'), ('receiver', 'NOUN'), ('chain', 'NOUN'), ('non', 'ADJ'), ('-', 'NOUN'), ('linearities', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('application', 'pobj'), ('-', 'punct'), ('duplex', 'compound'), ('transceiver', 'pobj'), (',', 'punct'), ('refer', 'ROOT'), ('[', 'pobj'), ('47', 'pobj'), (']', 'punct'), (',', 'punct'), ('learns', 'advcl'), ('cancel', 'xcomp'), ('self', 'compound'), ('-', 'punct'), ('interference', 'dobj'), ('order', 'pobj'), ('overcome', 'acl'), ('lack', 'dobj'), ('-', 'punct'), ('established', 'amod'), ('models', 'pobj'), ('transmitter', 'npadvmod'), ('-', 'punct'), ('receiver', 'compound'), ('chain', 'pobj'), ('non', 'pobj'), ('-', 'pobj'), ('linearities', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[application, -], [-, duplex], [duplex, transceiver], [transceiver, ,], [,, refer], [refer, [], [[, 47], [47, ]], [], ,], [,, learns], [learns, cancel], [cancel, self], [self, -], [-, interference], [interference, order], [order, overcome], [overcome, lack], [lack, -], [-, established], [established, models], [models, transmitter], [transmitter, -], [-, receiver], [receiver, chain], [chain, non], [non, -], [-, linearities], [linearities, .]]

>> Trigrams: 
[[application, -, duplex], [-, duplex, transceiver], [duplex, transceiver, ,], [transceiver, ,, refer], [,, refer, [], [refer, [, 47], [[, 47, ]], [47, ], ,], [], ,, learns], [,, learns, cancel], [learns, cancel, self], [cancel, self, -], [self, -, interference], [-, interference, order], [interference, order, overcome], [order, overcome, lack], [overcome, lack, -], [lack, -, established], [-, established, models], [established, models, transmitter], [models, transmitter, -], [transmitter, -, receiver], [-, receiver, chain], [receiver, chain, non], [chain, non, -], [non, -, linearities], [-, linearities, .]]

>> Noun Phrases are: 
[an application, a full-duplex transceiver, we, self-interference, order, the lack, well-established models, the transmitter-receiver chain, -, linearities]

>> Named Entities are: 
[('47', 'CARDINAL')]


============================ Sentence 472 =============================

 (2) Link and Medium Access Control Layers: 


>> Tokens are: 
[ , (, 2, ), Link, Medium, Access, Control, Layers, :] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('(', 'PUNCT'), ('2', 'X'), (')', 'PUNCT'), ('Link', 'PROPN'), ('Medium', 'PROPN'), ('Access', 'PROPN'), ('Control', 'PROPN'), ('Layers', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('(', 'punct'), ('2', 'appos'), (')', 'punct'), ('Link', 'nmod'), ('Medium', 'compound'), ('Access', 'compound'), ('Control', 'compound'), ('Layers', 'appos'), (':', 'punct')]

>> Bigrams: 
[[ , (], [(, 2], [2, )], [), Link], [Link, Medium], [Medium, Access], [Access, Control], [Control, Layers], [Layers, :]]

>> Trigrams: 
[[ , (, 2], [(, 2, )], [2, ), Link], [), Link, Medium], [Link, Medium, Access], [Medium, Access, Control], [Access, Control, Layers], [Control, Layers, :]]

>> Noun Phrases are: 
[Link and Medium Access Control Layers]

>> Named Entities are: 
[('Medium Access Control Layers', 'ORG')]


============================ Sentence 473 =============================

At the medium access control layer, we highlight some ap- plications of machine learning that tackle the lack of mathematical models for complex access protocols and communication environments. 


>> Tokens are: 
[medium, access, control, layer, ,, highlight, ap-, plications, machine, learning, tackle, lack, mathematical, models, complex, access, protocols, communication, environments, .] 

>> PoS Tags are: 
[('medium', 'ADJ'), ('access', 'NOUN'), ('control', 'NOUN'), ('layer', 'NOUN'), (',', 'PUNCT'), ('highlight', 'VERB'), ('ap-', 'ADJ'), ('plications', 'NOUN'), ('machine', 'NOUN'), ('learning', 'VERB'), ('tackle', 'VERB'), ('lack', 'NOUN'), ('mathematical', 'ADJ'), ('models', 'NOUN'), ('complex', 'ADJ'), ('access', 'NOUN'), ('protocols', 'NOUN'), ('communication', 'NOUN'), ('environments', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('medium', 'amod'), ('access', 'compound'), ('control', 'compound'), ('layer', 'pobj'), (',', 'punct'), ('highlight', 'ROOT'), ('ap-', 'amod'), ('plications', 'dobj'), ('machine', 'compound'), ('learning', 'pobj'), ('tackle', 'relcl'), ('lack', 'dobj'), ('mathematical', 'amod'), ('models', 'pobj'), ('complex', 'amod'), ('access', 'compound'), ('protocols', 'pobj'), ('communication', 'compound'), ('environments', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[medium, access], [access, control], [control, layer], [layer, ,], [,, highlight], [highlight, ap-], [ap-, plications], [plications, machine], [machine, learning], [learning, tackle], [tackle, lack], [lack, mathematical], [mathematical, models], [models, complex], [complex, access], [access, protocols], [protocols, communication], [communication, environments], [environments, .]]

>> Trigrams: 
[[medium, access, control], [access, control, layer], [control, layer, ,], [layer, ,, highlight], [,, highlight, ap-], [highlight, ap-, plications], [ap-, plications, machine], [plications, machine, learning], [machine, learning, tackle], [learning, tackle, lack], [tackle, lack, mathematical], [lack, mathematical, models], [mathematical, models, complex], [models, complex, access], [complex, access, protocols], [access, protocols, communication], [protocols, communication, environments], [communication, environments, .]]

>> Noun Phrases are: 
[the medium access control layer, we, some ap- plications, the lack, mathematical models, complex access protocols, communication environments]

>> Named Entities are: 
[]


============================ Sentence 474 =============================

In [48], a mechanism is proposed to predict whether a channel decoder will suc- ceed on the basis of the outputs of the first few iterations of the iterative decoding process. 


>> Tokens are: 
[[, 48, ], ,, mechanism, proposed, predict, channel, decoder, suc-, ceed, basis, outputs, iterations, iterative, decoding, process, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('48', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('mechanism', 'NOUN'), ('proposed', 'VERB'), ('predict', 'VERB'), ('channel', 'NOUN'), ('decoder', 'NOUN'), ('suc-', 'VERB'), ('ceed', 'VERB'), ('basis', 'NOUN'), ('outputs', 'NOUN'), ('iterations', 'NOUN'), ('iterative', 'ADJ'), ('decoding', 'VERB'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'pobj'), ('48', 'pobj'), (']', 'pobj'), (',', 'punct'), ('mechanism', 'nsubjpass'), ('proposed', 'ROOT'), ('predict', 'xcomp'), ('channel', 'compound'), ('decoder', 'nsubj'), ('suc-', 'ccomp'), ('ceed', 'dobj'), ('basis', 'pobj'), ('outputs', 'pobj'), ('iterations', 'pobj'), ('iterative', 'amod'), ('decoding', 'amod'), ('process', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[[, 48], [48, ]], [], ,], [,, mechanism], [mechanism, proposed], [proposed, predict], [predict, channel], [channel, decoder], [decoder, suc-], [suc-, ceed], [ceed, basis], [basis, outputs], [outputs, iterations], [iterations, iterative], [iterative, decoding], [decoding, process], [process, .]]

>> Trigrams: 
[[[, 48, ]], [48, ], ,], [], ,, mechanism], [,, mechanism, proposed], [mechanism, proposed, predict], [proposed, predict, channel], [predict, channel, decoder], [channel, decoder, suc-], [decoder, suc-, ceed], [suc-, ceed, basis], [ceed, basis, outputs], [basis, outputs, iterations], [outputs, iterations, iterative], [iterations, iterative, decoding], [iterative, decoding, process], [decoding, process, .]]

>> Noun Phrases are: 
[a mechanism, a channel decoder, the basis, the outputs, the first few iterations, the iterative decoding process]

>> Named Entities are: 
[('48', 'CARDINAL'), ('first', 'ORDINAL')]


============================ Sentence 475 =============================

This binary predictor is useful in order to request an early retransmission at the link layer using Automatic Retransmission Request (ARQ) or Hybrid ARQ (HARQ) in order to reduce latency. 


>> Tokens are: 
[binary, predictor, useful, order, request, early, retransmission, link, layer, Automatic, Retransmission, Request, (, ARQ, ), Hybrid, ARQ, (, HARQ, ), order, reduce, latency, .] 

>> PoS Tags are: 
[('binary', 'ADJ'), ('predictor', 'NOUN'), ('useful', 'ADJ'), ('order', 'NOUN'), ('request', 'VERB'), ('early', 'ADJ'), ('retransmission', 'NOUN'), ('link', 'NOUN'), ('layer', 'NOUN'), ('Automatic', 'ADJ'), ('Retransmission', 'PROPN'), ('Request', 'NOUN'), ('(', 'PUNCT'), ('ARQ', 'PROPN'), (')', 'PUNCT'), ('Hybrid', 'PROPN'), ('ARQ', 'PROPN'), ('(', 'PUNCT'), ('HARQ', 'PROPN'), (')', 'PUNCT'), ('order', 'NOUN'), ('reduce', 'VERB'), ('latency', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('binary', 'amod'), ('predictor', 'nsubj'), ('useful', 'acomp'), ('order', 'pobj'), ('request', 'acl'), ('early', 'amod'), ('retransmission', 'dobj'), ('link', 'compound'), ('layer', 'pobj'), ('Automatic', 'amod'), ('Retransmission', 'compound'), ('Request', 'dobj'), ('(', 'punct'), ('ARQ', 'appos'), (')', 'punct'), ('Hybrid', 'compound'), ('ARQ', 'conj'), ('(', 'punct'), ('HARQ', 'appos'), (')', 'punct'), ('order', 'pobj'), ('reduce', 'acl'), ('latency', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[binary, predictor], [predictor, useful], [useful, order], [order, request], [request, early], [early, retransmission], [retransmission, link], [link, layer], [layer, Automatic], [Automatic, Retransmission], [Retransmission, Request], [Request, (], [(, ARQ], [ARQ, )], [), Hybrid], [Hybrid, ARQ], [ARQ, (], [(, HARQ], [HARQ, )], [), order], [order, reduce], [reduce, latency], [latency, .]]

>> Trigrams: 
[[binary, predictor, useful], [predictor, useful, order], [useful, order, request], [order, request, early], [request, early, retransmission], [early, retransmission, link], [retransmission, link, layer], [link, layer, Automatic], [layer, Automatic, Retransmission], [Automatic, Retransmission, Request], [Retransmission, Request, (], [Request, (, ARQ], [(, ARQ, )], [ARQ, ), Hybrid], [), Hybrid, ARQ], [Hybrid, ARQ, (], [ARQ, (, HARQ], [(, HARQ, )], [HARQ, ), order], [), order, reduce], [order, reduce, latency], [reduce, latency, .]]

>> Noun Phrases are: 
[This binary predictor, order, an early retransmission, the link layer, Automatic Retransmission Request, (ARQ, Hybrid ARQ, HARQ, order, latency]

>> Named Entities are: 
[('Automatic Retransmission Request', 'ORG')]


============================ Sentence 476 =============================

At the medium access control layer, data-aided methods can instead be used to predict the availability of spectrum in the presence of interfering incumbent devices with complex activation patterns for cognitive radio applications [49] (see also [50]). 


>> Tokens are: 
[medium, access, control, layer, ,, data, -, aided, methods, instead, predict, availability, spectrum, presence, interfering, incumbent, devices, complex, activation, patterns, cognitive, radio, applications, [, 49, ], (, [, 50, ], ), .] 

>> PoS Tags are: 
[('medium', 'ADJ'), ('access', 'NOUN'), ('control', 'NOUN'), ('layer', 'NOUN'), (',', 'PUNCT'), ('data', 'NOUN'), ('-', 'PUNCT'), ('aided', 'VERB'), ('methods', 'NOUN'), ('instead', 'ADV'), ('predict', 'VERB'), ('availability', 'NOUN'), ('spectrum', 'NOUN'), ('presence', 'NOUN'), ('interfering', 'VERB'), ('incumbent', 'ADJ'), ('devices', 'NOUN'), ('complex', 'ADJ'), ('activation', 'NOUN'), ('patterns', 'NOUN'), ('cognitive', 'ADJ'), ('radio', 'NOUN'), ('applications', 'NOUN'), ('[', 'PUNCT'), ('49', 'NUM'), (']', 'PUNCT'), ('(', 'PUNCT'), ('[', 'PUNCT'), ('50', 'NUM'), (']', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('medium', 'amod'), ('access', 'compound'), ('control', 'compound'), ('layer', 'pobj'), (',', 'punct'), ('data', 'npadvmod'), ('-', 'punct'), ('aided', 'amod'), ('methods', 'nsubjpass'), ('instead', 'advmod'), ('predict', 'xcomp'), ('availability', 'dobj'), ('spectrum', 'pobj'), ('presence', 'pobj'), ('interfering', 'pcomp'), ('incumbent', 'amod'), ('devices', 'dobj'), ('complex', 'amod'), ('activation', 'compound'), ('patterns', 'pobj'), ('cognitive', 'amod'), ('radio', 'compound'), ('applications', 'pobj'), ('[', 'punct'), ('49', 'npadvmod'), (']', 'punct'), ('(', 'punct'), ('[', 'punct'), ('50', 'dobj'), (']', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[medium, access], [access, control], [control, layer], [layer, ,], [,, data], [data, -], [-, aided], [aided, methods], [methods, instead], [instead, predict], [predict, availability], [availability, spectrum], [spectrum, presence], [presence, interfering], [interfering, incumbent], [incumbent, devices], [devices, complex], [complex, activation], [activation, patterns], [patterns, cognitive], [cognitive, radio], [radio, applications], [applications, [], [[, 49], [49, ]], [], (], [(, [], [[, 50], [50, ]], [], )], [), .]]

>> Trigrams: 
[[medium, access, control], [access, control, layer], [control, layer, ,], [layer, ,, data], [,, data, -], [data, -, aided], [-, aided, methods], [aided, methods, instead], [methods, instead, predict], [instead, predict, availability], [predict, availability, spectrum], [availability, spectrum, presence], [spectrum, presence, interfering], [presence, interfering, incumbent], [interfering, incumbent, devices], [incumbent, devices, complex], [devices, complex, activation], [complex, activation, patterns], [activation, patterns, cognitive], [patterns, cognitive, radio], [cognitive, radio, applications], [radio, applications, [], [applications, [, 49], [[, 49, ]], [49, ], (], [], (, [], [(, [, 50], [[, 50, ]], [50, ], )], [], ), .]]

>> Noun Phrases are: 
[the medium access control layer, data-aided methods, the availability, spectrum, the presence, incumbent devices, complex activation patterns, cognitive radio applications]

>> Named Entities are: 
[('49', 'CARDINAL'), ('50', 'CARDINAL')]


============================ Sentence 477 =============================

An approach that leverages depth images to detect the availability of mmwave channels is proposed in [51]. 


>> Tokens are: 
[approach, leverages, depth, images, detect, availability, mmwave, channels, proposed, [, 51, ], .] 

>> PoS Tags are: 
[('approach', 'NOUN'), ('leverages', 'NOUN'), ('depth', 'VERB'), ('images', 'NOUN'), ('detect', 'VERB'), ('availability', 'NOUN'), ('mmwave', 'NOUN'), ('channels', 'NOUN'), ('proposed', 'VERB'), ('[', 'PUNCT'), ('51', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('approach', 'ROOT'), ('leverages', 'nsubjpass'), ('depth', 'compound'), ('images', 'appos'), ('detect', 'acl'), ('availability', 'dobj'), ('mmwave', 'compound'), ('channels', 'pobj'), ('proposed', 'acl'), ('[', 'punct'), ('51', 'pobj'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[approach, leverages], [leverages, depth], [depth, images], [images, detect], [detect, availability], [availability, mmwave], [mmwave, channels], [channels, proposed], [proposed, [], [[, 51], [51, ]], [], .]]

>> Trigrams: 
[[approach, leverages, depth], [leverages, depth, images], [depth, images, detect], [images, detect, availability], [detect, availability, mmwave], [availability, mmwave, channels], [mmwave, channels, proposed], [channels, proposed, [], [proposed, [, 51], [[, 51, ]], [51, ], .]]

>> Noun Phrases are: 
[An approach, leverages, depth images, the availability, mmwave channels]

>> Named Entities are: 
[('51', 'CARDINAL')]


============================ Sentence 478 =============================

 (3) Network and Application Layers: A task that is particularly well-suited for machine learning is the caching of popular contents for reduced latency and network congestion [52]. 


>> Tokens are: 
[ , (, 3, ), Network, Application, Layers, :, task, particularly, -, suited, machine, learning, caching, popular, contents, reduced, latency, network, congestion, [, 52, ], .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('(', 'PUNCT'), ('3', 'X'), (')', 'PUNCT'), ('Network', 'PROPN'), ('Application', 'PROPN'), ('Layers', 'PROPN'), (':', 'PUNCT'), ('task', 'NOUN'), ('particularly', 'ADV'), ('-', 'PUNCT'), ('suited', 'VERB'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('caching', 'NOUN'), ('popular', 'ADJ'), ('contents', 'NOUN'), ('reduced', 'VERB'), ('latency', 'NOUN'), ('network', 'NOUN'), ('congestion', 'NOUN'), ('[', 'PUNCT'), ('52', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'dep'), ('(', 'punct'), ('3', 'appos'), (')', 'punct'), ('Network', 'appos'), ('Application', 'compound'), ('Layers', 'conj'), (':', 'punct'), ('task', 'appos'), ('particularly', 'advmod'), ('-', 'punct'), ('suited', 'acomp'), ('machine', 'compound'), ('learning', 'pobj'), ('caching', 'attr'), ('popular', 'amod'), ('contents', 'pobj'), ('reduced', 'amod'), ('latency', 'pobj'), ('network', 'compound'), ('congestion', 'conj'), ('[', 'punct'), ('52', 'dep'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[ , (], [(, 3], [3, )], [), Network], [Network, Application], [Application, Layers], [Layers, :], [:, task], [task, particularly], [particularly, -], [-, suited], [suited, machine], [machine, learning], [learning, caching], [caching, popular], [popular, contents], [contents, reduced], [reduced, latency], [latency, network], [network, congestion], [congestion, [], [[, 52], [52, ]], [], .]]

>> Trigrams: 
[[ , (, 3], [(, 3, )], [3, ), Network], [), Network, Application], [Network, Application, Layers], [Application, Layers, :], [Layers, :, task], [:, task, particularly], [task, particularly, -], [particularly, -, suited], [-, suited, machine], [suited, machine, learning], [machine, learning, caching], [learning, caching, popular], [caching, popular, contents], [popular, contents, reduced], [contents, reduced, latency], [reduced, latency, network], [latency, network, congestion], [network, congestion, [], [congestion, [, 52], [[, 52, ]], [52, ], .]]

>> Noun Phrases are: 
[Network, Application Layers, A task, machine learning, the caching, popular contents, reduced latency, network congestion]

>> Named Entities are: 
[('52', 'CARDINAL')]


============================ Sentence 479 =============================

Caching may take place at the edge and, more traditionally, within the core network segment. 


>> Tokens are: 
[Caching, place, edge, ,, traditionally, ,, core, network, segment, .] 

>> PoS Tags are: 
[('Caching', 'ADJ'), ('place', 'NOUN'), ('edge', 'NOUN'), (',', 'PUNCT'), ('traditionally', 'ADV'), (',', 'PUNCT'), ('core', 'NOUN'), ('network', 'NOUN'), ('segment', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Caching', 'nsubj'), ('place', 'dobj'), ('edge', 'pobj'), (',', 'punct'), ('traditionally', 'advmod'), (',', 'punct'), ('core', 'compound'), ('network', 'compound'), ('segment', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Caching, place], [place, edge], [edge, ,], [,, traditionally], [traditionally, ,], [,, core], [core, network], [network, segment], [segment, .]]

>> Trigrams: 
[[Caching, place, edge], [place, edge, ,], [edge, ,, traditionally], [,, traditionally, ,], [traditionally, ,, core], [,, core, network], [core, network, segment], [network, segment, .]]

>> Noun Phrases are: 
[place, the edge, the core network segment]

>> Named Entities are: 
[]


============================ Sentence 480 =============================

Caching at the edge has the advantage of catering directly to the preference of the local population of users, but it generally suffers from a reduced hit rate due to the smaller available storage capacity. 


>> Tokens are: 
[Caching, edge, advantage, catering, directly, preference, local, population, users, ,, generally, suffers, reduced, hit, rate, smaller, available, storage, capacity, .] 

>> PoS Tags are: 
[('Caching', 'ADJ'), ('edge', 'NOUN'), ('advantage', 'NOUN'), ('catering', 'VERB'), ('directly', 'ADV'), ('preference', 'NOUN'), ('local', 'ADJ'), ('population', 'NOUN'), ('users', 'NOUN'), (',', 'PUNCT'), ('generally', 'ADV'), ('suffers', 'VERB'), ('reduced', 'VERB'), ('hit', 'NOUN'), ('rate', 'NOUN'), ('smaller', 'ADJ'), ('available', 'ADJ'), ('storage', 'NOUN'), ('capacity', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Caching', 'nsubj'), ('edge', 'pobj'), ('advantage', 'dobj'), ('catering', 'pcomp'), ('directly', 'advmod'), ('preference', 'pobj'), ('local', 'amod'), ('population', 'pobj'), ('users', 'pobj'), (',', 'punct'), ('generally', 'advmod'), ('suffers', 'conj'), ('reduced', 'amod'), ('hit', 'compound'), ('rate', 'pobj'), ('smaller', 'amod'), ('available', 'amod'), ('storage', 'compound'), ('capacity', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Caching, edge], [edge, advantage], [advantage, catering], [catering, directly], [directly, preference], [preference, local], [local, population], [population, users], [users, ,], [,, generally], [generally, suffers], [suffers, reduced], [reduced, hit], [hit, rate], [rate, smaller], [smaller, available], [available, storage], [storage, capacity], [capacity, .]]

>> Trigrams: 
[[Caching, edge, advantage], [edge, advantage, catering], [advantage, catering, directly], [catering, directly, preference], [directly, preference, local], [preference, local, population], [local, population, users], [population, users, ,], [users, ,, generally], [,, generally, suffers], [generally, suffers, reduced], [suffers, reduced, hit], [reduced, hit, rate], [hit, rate, smaller], [rate, smaller, available], [smaller, available, storage], [available, storage, capacity], [storage, capacity, .]]

>> Noun Phrases are: 
[the edge, the advantage, the preference, the local population, users, it, a reduced hit rate, the smaller available storage capacity]

>> Named Entities are: 
[]


============================ Sentence 481 =============================

Optimizing the selection of contents to be stored at the edge can be formulated as a classification problem that can benefit from a data-driven approach in order to adapt to the specific features of the local traffic [52]. 


>> Tokens are: 
[Optimizing, selection, contents, stored, edge, formulated, classification, problem, benefit, data, -, driven, approach, order, adapt, specific, features, local, traffic, [, 52, ], .] 

>> PoS Tags are: 
[('Optimizing', 'VERB'), ('selection', 'NOUN'), ('contents', 'NOUN'), ('stored', 'VERB'), ('edge', 'NOUN'), ('formulated', 'VERB'), ('classification', 'NOUN'), ('problem', 'NOUN'), ('benefit', 'VERB'), ('data', 'NOUN'), ('-', 'PUNCT'), ('driven', 'VERB'), ('approach', 'NOUN'), ('order', 'NOUN'), ('adapt', 'VERB'), ('specific', 'ADJ'), ('features', 'NOUN'), ('local', 'ADJ'), ('traffic', 'NOUN'), ('[', 'PUNCT'), ('52', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Optimizing', 'csubjpass'), ('selection', 'dobj'), ('contents', 'pobj'), ('stored', 'relcl'), ('edge', 'pobj'), ('formulated', 'ROOT'), ('classification', 'compound'), ('problem', 'pobj'), ('benefit', 'relcl'), ('data', 'npadvmod'), ('-', 'punct'), ('driven', 'amod'), ('approach', 'pobj'), ('order', 'pobj'), ('adapt', 'acl'), ('specific', 'amod'), ('features', 'pobj'), ('local', 'amod'), ('traffic', 'pobj'), ('[', 'punct'), ('52', 'npadvmod'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Optimizing, selection], [selection, contents], [contents, stored], [stored, edge], [edge, formulated], [formulated, classification], [classification, problem], [problem, benefit], [benefit, data], [data, -], [-, driven], [driven, approach], [approach, order], [order, adapt], [adapt, specific], [specific, features], [features, local], [local, traffic], [traffic, [], [[, 52], [52, ]], [], .]]

>> Trigrams: 
[[Optimizing, selection, contents], [selection, contents, stored], [contents, stored, edge], [stored, edge, formulated], [edge, formulated, classification], [formulated, classification, problem], [classification, problem, benefit], [problem, benefit, data], [benefit, data, -], [data, -, driven], [-, driven, approach], [driven, approach, order], [approach, order, adapt], [order, adapt, specific], [adapt, specific, features], [specific, features, local], [features, local, traffic], [local, traffic, [], [traffic, [, 52], [[, 52, ]], [52, ], .]]

>> Noun Phrases are: 
[the selection, contents, the edge, a classification problem, a data-driven approach, order, the specific features, the local traffic]

>> Named Entities are: 
[('52', 'CARDINAL')]


============================ Sentence 482 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 483 =============================

B. 


>> Tokens are: 
[B.] 

>> PoS Tags are: 
[('B.', 'PROPN')] 

>> Dependency Tags are: 
[('B.', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[B.]

>> Named Entities are: 
[]


============================ Sentence 484 =============================

At the Cloud   


>> Tokens are: 
[Cloud,  ] 

>> PoS Tags are: 
[('Cloud', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Cloud', 'pobj'), (' ', 'pobj')]

>> Bigrams: 
[[Cloud,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[the Cloud]

>> Named Entities are: 
[]


============================ Sentence 485 =============================

We now turn to some relevant tasks to be carried out at the cloud at both network and application layers. 


>> Tokens are: 
[turn, relevant, tasks, carried, cloud, network, application, layers, .] 

>> PoS Tags are: 
[('turn', 'VERB'), ('relevant', 'ADJ'), ('tasks', 'NOUN'), ('carried', 'VERB'), ('cloud', 'NOUN'), ('network', 'NOUN'), ('application', 'NOUN'), ('layers', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('turn', 'ROOT'), ('relevant', 'amod'), ('tasks', 'pobj'), ('carried', 'xcomp'), ('cloud', 'pobj'), ('network', 'pobj'), ('application', 'compound'), ('layers', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[turn, relevant], [relevant, tasks], [tasks, carried], [carried, cloud], [cloud, network], [network, application], [application, layers], [layers, .]]

>> Trigrams: 
[[turn, relevant, tasks], [relevant, tasks, carried], [tasks, carried, cloud], [carried, cloud, network], [cloud, network, application], [network, application, layers], [application, layers, .]]

>> Noun Phrases are: 
[We, some relevant tasks, the cloud, both network, application layers]

>> Named Entities are: 
[]


============================ Sentence 486 =============================

 (1) Network: The main task of the network layer is routing (see [53] for further discussion). 


>> Tokens are: 
[ , (, 1, ), Network, :, main, task, network, layer, routing, (, [, 53, ], discussion, ), .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('(', 'PUNCT'), ('1', 'X'), (')', 'PUNCT'), ('Network', 'PROPN'), (':', 'PUNCT'), ('main', 'ADJ'), ('task', 'NOUN'), ('network', 'NOUN'), ('layer', 'NOUN'), ('routing', 'VERB'), ('(', 'PUNCT'), ('[', 'PUNCT'), ('53', 'NUM'), (']', 'PUNCT'), ('discussion', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'dep'), ('(', 'punct'), ('1', 'meta'), (')', 'punct'), ('Network', 'ROOT'), (':', 'punct'), ('main', 'amod'), ('task', 'nsubj'), ('network', 'compound'), ('layer', 'pobj'), ('routing', 'acl'), ('(', 'punct'), ('[', 'punct'), ('53', 'dobj'), (']', 'punct'), ('discussion', 'pobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[ , (], [(, 1], [1, )], [), Network], [Network, :], [:, main], [main, task], [task, network], [network, layer], [layer, routing], [routing, (], [(, [], [[, 53], [53, ]], [], discussion], [discussion, )], [), .]]

>> Trigrams: 
[[ , (, 1], [(, 1, )], [1, ), Network], [), Network, :], [Network, :, main], [:, main, task], [main, task, network], [task, network, layer], [network, layer, routing], [layer, routing, (], [routing, (, [], [(, [, 53], [[, 53, ]], [53, ], discussion], [], discussion, )], [discussion, ), .]]

>> Noun Phrases are: 
[ (1) Network, The main task, the network layer, further discussion]

>> Named Entities are: 
[]


============================ Sentence 487 =============================

Considering a software-defined networking implementation, routing re- quires the availability at a network controller of informa- tion regarding the quality of individual communication  2This can be thought of as an example of experience learning as part of small-sample learning techniques [46]. 


>> Tokens are: 
[Considering, software, -, defined, networking, implementation, ,, routing, re-, quires, availability, network, controller, informa-, tion, quality, individual, communication,  , 2This, thought, example, experience, learning, small, -, sample, learning, techniques, [, 46, ], .] 

>> PoS Tags are: 
[('Considering', 'VERB'), ('software', 'NOUN'), ('-', 'PUNCT'), ('defined', 'VERB'), ('networking', 'NOUN'), ('implementation', 'NOUN'), (',', 'PUNCT'), ('routing', 'VERB'), ('re-', 'ADP'), ('quires', 'VERB'), ('availability', 'NOUN'), ('network', 'NOUN'), ('controller', 'NOUN'), ('informa-', 'ADJ'), ('tion', 'NOUN'), ('quality', 'NOUN'), ('individual', 'ADJ'), ('communication', 'NOUN'), (' ', 'SPACE'), ('2This', 'PROPN'), ('thought', 'VERB'), ('example', 'NOUN'), ('experience', 'NOUN'), ('learning', 'VERB'), ('small', 'ADJ'), ('-', 'PUNCT'), ('sample', 'NOUN'), ('learning', 'NOUN'), ('techniques', 'NOUN'), ('[', 'PUNCT'), ('46', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Considering', 'advcl'), ('software', 'npadvmod'), ('-', 'punct'), ('defined', 'amod'), ('networking', 'compound'), ('implementation', 'dobj'), (',', 'punct'), ('routing', 'csubj'), ('re-', 'advmod'), ('quires', 'ROOT'), ('availability', 'dobj'), ('network', 'compound'), ('controller', 'pobj'), ('informa-', 'compound'), ('tion', 'pobj'), ('quality', 'pobj'), ('individual', 'amod'), ('communication', 'pobj'), (' ', 'nmod'), ('2This', 'nsubjpass'), ('thought', 'ccomp'), ('example', 'pobj'), ('experience', 'compound'), ('learning', 'pobj'), ('small', 'amod'), ('-', 'punct'), ('sample', 'nmod'), ('learning', 'compound'), ('techniques', 'pobj'), ('[', 'punct'), ('46', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Considering, software], [software, -], [-, defined], [defined, networking], [networking, implementation], [implementation, ,], [,, routing], [routing, re-], [re-, quires], [quires, availability], [availability, network], [network, controller], [controller, informa-], [informa-, tion], [tion, quality], [quality, individual], [individual, communication], [communication,  ], [ , 2This], [2This, thought], [thought, example], [example, experience], [experience, learning], [learning, small], [small, -], [-, sample], [sample, learning], [learning, techniques], [techniques, [], [[, 46], [46, ]], [], .]]

>> Trigrams: 
[[Considering, software, -], [software, -, defined], [-, defined, networking], [defined, networking, implementation], [networking, implementation, ,], [implementation, ,, routing], [,, routing, re-], [routing, re-, quires], [re-, quires, availability], [quires, availability, network], [availability, network, controller], [network, controller, informa-], [controller, informa-, tion], [informa-, tion, quality], [tion, quality, individual], [quality, individual, communication], [individual, communication,  ], [communication,  , 2This], [ , 2This, thought], [2This, thought, example], [thought, example, experience], [example, experience, learning], [experience, learning, small], [learning, small, -], [small, -, sample], [-, sample, learning], [sample, learning, techniques], [learning, techniques, [], [techniques, [, 46], [[, 46, ]], [46, ], .]]

>> Noun Phrases are: 
[a software-defined networking implementation, the availability, a network controller, informa- tion, the quality, individual communication,  2This, an example, part, small-sample learning techniques]

>> Named Entities are: 
[('46', 'CARDINAL')]


============================ Sentence 488 =============================

 links in the core network, as well as regarding the status of the queues at the network routers. 


>> Tokens are: 
[ , links, core, network, ,, status, queues, network, routers, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('links', 'NOUN'), ('core', 'NOUN'), ('network', 'NOUN'), (',', 'PUNCT'), ('status', 'NOUN'), ('queues', 'NOUN'), ('network', 'NOUN'), ('routers', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nsubj'), ('links', 'ROOT'), ('core', 'compound'), ('network', 'pobj'), (',', 'punct'), ('status', 'dobj'), ('queues', 'pobj'), ('network', 'compound'), ('routers', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , links], [links, core], [core, network], [network, ,], [,, status], [status, queues], [queues, network], [network, routers], [routers, .]]

>> Trigrams: 
[[ , links, core], [links, core, network], [core, network, ,], [network, ,, status], [,, status, queues], [status, queues, network], [queues, network, routers], [network, routers, .]]

>> Noun Phrases are: 
[ links, the core network, the status, the queues, the network routers]

>> Named Entities are: 
[]


============================ Sentence 489 =============================

In the presence of wireless or optical communications, the quality of a link may not be available at the network controller, but it may be predicted using available historical data [33], [54] in the absence of agreed-upon dynamic availability models. 


>> Tokens are: 
[presence, wireless, optical, communications, ,, quality, link, available, network, controller, ,, predicted, available, historical, data, [, 33, ], ,, [, 54, ], absence, agreed, -, dynamic, availability, models, .] 

>> PoS Tags are: 
[('presence', 'NOUN'), ('wireless', 'ADJ'), ('optical', 'ADJ'), ('communications', 'NOUN'), (',', 'PUNCT'), ('quality', 'NOUN'), ('link', 'NOUN'), ('available', 'ADJ'), ('network', 'NOUN'), ('controller', 'NOUN'), (',', 'PUNCT'), ('predicted', 'VERB'), ('available', 'ADJ'), ('historical', 'ADJ'), ('data', 'NOUN'), ('[', 'PUNCT'), ('33', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('[', 'PUNCT'), ('54', 'NUM'), (']', 'PUNCT'), ('absence', 'NOUN'), ('agreed', 'VERB'), ('-', 'PUNCT'), ('dynamic', 'ADJ'), ('availability', 'NOUN'), ('models', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('presence', 'pobj'), ('wireless', 'amod'), ('optical', 'conj'), ('communications', 'pobj'), (',', 'punct'), ('quality', 'nsubj'), ('link', 'pobj'), ('available', 'acomp'), ('network', 'compound'), ('controller', 'pobj'), (',', 'punct'), ('predicted', 'conj'), ('available', 'amod'), ('historical', 'amod'), ('data', 'dobj'), ('[', 'punct'), ('33', 'dep'), (']', 'punct'), (',', 'punct'), ('[', 'dep'), ('54', 'dep'), (']', 'punct'), ('absence', 'pobj'), ('agreed', 'amod'), ('-', 'punct'), ('dynamic', 'amod'), ('availability', 'compound'), ('models', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[presence, wireless], [wireless, optical], [optical, communications], [communications, ,], [,, quality], [quality, link], [link, available], [available, network], [network, controller], [controller, ,], [,, predicted], [predicted, available], [available, historical], [historical, data], [data, [], [[, 33], [33, ]], [], ,], [,, [], [[, 54], [54, ]], [], absence], [absence, agreed], [agreed, -], [-, dynamic], [dynamic, availability], [availability, models], [models, .]]

>> Trigrams: 
[[presence, wireless, optical], [wireless, optical, communications], [optical, communications, ,], [communications, ,, quality], [,, quality, link], [quality, link, available], [link, available, network], [available, network, controller], [network, controller, ,], [controller, ,, predicted], [,, predicted, available], [predicted, available, historical], [available, historical, data], [historical, data, [], [data, [, 33], [[, 33, ]], [33, ], ,], [], ,, [], [,, [, 54], [[, 54, ]], [54, ], absence], [], absence, agreed], [absence, agreed, -], [agreed, -, dynamic], [-, dynamic, availability], [dynamic, availability, models], [availability, models, .]]

>> Noun Phrases are: 
[the presence, wireless or optical communications, the quality, a link, the network controller, it, available historical data, the absence, agreed-upon dynamic availability models]

>> Named Entities are: 
[('33', 'CARDINAL'), ('54', 'CARDINAL')]


============================ Sentence 490 =============================

In a similar manner, predicting congestion can be framed as a data-aided classification problem [55]. 


>> Tokens are: 
[similar, manner, ,, predicting, congestion, framed, data, -, aided, classification, problem, [, 55, ], .] 

>> PoS Tags are: 
[('similar', 'ADJ'), ('manner', 'NOUN'), (',', 'PUNCT'), ('predicting', 'VERB'), ('congestion', 'NOUN'), ('framed', 'VERB'), ('data', 'NOUN'), ('-', 'PUNCT'), ('aided', 'VERB'), ('classification', 'NOUN'), ('problem', 'NOUN'), ('[', 'PUNCT'), ('55', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('similar', 'amod'), ('manner', 'pobj'), (',', 'punct'), ('predicting', 'csubjpass'), ('congestion', 'dobj'), ('framed', 'ROOT'), ('data', 'npadvmod'), ('-', 'punct'), ('aided', 'amod'), ('classification', 'compound'), ('problem', 'pobj'), ('[', 'punct'), ('55', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[similar, manner], [manner, ,], [,, predicting], [predicting, congestion], [congestion, framed], [framed, data], [data, -], [-, aided], [aided, classification], [classification, problem], [problem, [], [[, 55], [55, ]], [], .]]

>> Trigrams: 
[[similar, manner, ,], [manner, ,, predicting], [,, predicting, congestion], [predicting, congestion, framed], [congestion, framed, data], [framed, data, -], [data, -, aided], [-, aided, classification], [aided, classification, problem], [classification, problem, [], [problem, [, 55], [[, 55, ]], [55, ], .]]

>> Noun Phrases are: 
[a similar manner, congestion, a data-aided classification problem]

>> Named Entities are: 
[('55', 'CARDINAL')]


============================ Sentence 491 =============================

 (2) Application: Finally, a relevant supervised learning task is that of traffic classification, whereby data streams are classified on the basis of some extracted features, such as packet sizes and inter-arrival times, in terms of their applications, e.g.--.-, Voice over IP. 


>> Tokens are: 
[ , (, 2, ), Application, :, Finally, ,, relevant, supervised, learning, task, traffic, classification, ,, data, streams, classified, basis, extracted, features, ,, packet, sizes, inter, -, arrival, times, ,, terms, applications, ,, e.g.--.-, ,, Voice, IP, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('(', 'PUNCT'), ('2', 'X'), (')', 'PUNCT'), ('Application', 'NOUN'), (':', 'PUNCT'), ('Finally', 'ADV'), (',', 'PUNCT'), ('relevant', 'ADJ'), ('supervised', 'ADJ'), ('learning', 'NOUN'), ('task', 'NOUN'), ('traffic', 'NOUN'), ('classification', 'NOUN'), (',', 'PUNCT'), ('data', 'NOUN'), ('streams', 'NOUN'), ('classified', 'VERB'), ('basis', 'NOUN'), ('extracted', 'VERB'), ('features', 'NOUN'), (',', 'PUNCT'), ('packet', 'NOUN'), ('sizes', 'NOUN'), ('inter', 'ADJ'), ('-', 'NOUN'), ('arrival', 'ADJ'), ('times', 'NOUN'), (',', 'PUNCT'), ('terms', 'NOUN'), ('applications', 'NOUN'), (',', 'PUNCT'), ('e.g.--.-', 'PROPN'), (',', 'PUNCT'), ('Voice', 'PROPN'), ('IP', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nmod'), ('(', 'punct'), ('2', 'appos'), (')', 'punct'), ('Application', 'ROOT'), (':', 'punct'), ('Finally', 'advmod'), (',', 'punct'), ('relevant', 'amod'), ('supervised', 'amod'), ('learning', 'compound'), ('task', 'nsubj'), ('traffic', 'compound'), ('classification', 'pobj'), (',', 'punct'), ('data', 'compound'), ('streams', 'nsubjpass'), ('classified', 'relcl'), ('basis', 'pobj'), ('extracted', 'amod'), ('features', 'pobj'), (',', 'punct'), ('packet', 'compound'), ('sizes', 'pobj'), ('inter', 'amod'), ('-', 'amod'), ('arrival', 'amod'), ('times', 'conj'), (',', 'punct'), ('terms', 'pobj'), ('applications', 'pobj'), (',', 'punct'), ('e.g.--.-', 'dep'), (',', 'punct'), ('Voice', 'dep'), ('IP', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , (], [(, 2], [2, )], [), Application], [Application, :], [:, Finally], [Finally, ,], [,, relevant], [relevant, supervised], [supervised, learning], [learning, task], [task, traffic], [traffic, classification], [classification, ,], [,, data], [data, streams], [streams, classified], [classified, basis], [basis, extracted], [extracted, features], [features, ,], [,, packet], [packet, sizes], [sizes, inter], [inter, -], [-, arrival], [arrival, times], [times, ,], [,, terms], [terms, applications], [applications, ,], [,, e.g.--.-], [e.g.--.-, ,], [,, Voice], [Voice, IP], [IP, .]]

>> Trigrams: 
[[ , (, 2], [(, 2, )], [2, ), Application], [), Application, :], [Application, :, Finally], [:, Finally, ,], [Finally, ,, relevant], [,, relevant, supervised], [relevant, supervised, learning], [supervised, learning, task], [learning, task, traffic], [task, traffic, classification], [traffic, classification, ,], [classification, ,, data], [,, data, streams], [data, streams, classified], [streams, classified, basis], [classified, basis, extracted], [basis, extracted, features], [extracted, features, ,], [features, ,, packet], [,, packet, sizes], [packet, sizes, inter], [sizes, inter, -], [inter, -, arrival], [-, arrival, times], [arrival, times, ,], [times, ,, terms], [,, terms, applications], [terms, applications, ,], [applications, ,, e.g.--.-], [,, e.g.--.-, ,], [e.g.--.-, ,, Voice], [,, Voice, IP], [Voice, IP, .]]

>> Noun Phrases are: 
[ (2) Application, a relevant supervised learning task, traffic classification, data streams, the basis, some extracted features, packet sizes, inter-arrival times, terms, their applications, IP]

>> Named Entities are: 
[('2', 'CARDINAL'), ('Voice', 'ORG'), ('IP', 'ORG')]


============================ Sentence 492 =============================

[56]  V. UNSUPERVISED LEARNING   


>> Tokens are: 
[[, 56, ],  , V., UNSUPERVISED, LEARNING,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('56', 'NUM'), (']', 'PUNCT'), (' ', 'SPACE'), ('V.', 'PROPN'), ('UNSUPERVISED', 'PROPN'), ('LEARNING', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('56', 'nummod'), (']', 'punct'), (' ', 'compound'), ('V.', 'compound'), ('UNSUPERVISED', 'nsubj'), ('LEARNING', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[[, 56], [56, ]], [],  ], [ , V.], [V., UNSUPERVISED], [UNSUPERVISED, LEARNING], [LEARNING,  ]]

>> Trigrams: 
[[[, 56, ]], [56, ],  ], [],  , V.], [ , V., UNSUPERVISED], [V., UNSUPERVISED, LEARNING], [UNSUPERVISED, LEARNING,  ]]

>> Noun Phrases are: 
[ V. UNSUPERVISED]

>> Named Entities are: 
[('56', 'CARDINAL')]


============================ Sentence 493 =============================

As introduced in Sec. 


>> Tokens are: 
[introduced, Sec, .] 

>> PoS Tags are: 
[('introduced', 'VERB'), ('Sec', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('introduced', 'ROOT'), ('Sec', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[introduced, Sec], [Sec, .]]

>> Trigrams: 
[[introduced, Sec, .]]

>> Noun Phrases are: 
[Sec]

>> Named Entities are: 
[('Sec', 'PERSON')]


============================ Sentence 494 =============================

I, unlike supervised learning, unsupervised learning tasks operate over unlabelled data sets consisting solely of the inputs xn, with n = 1, ..., N , and the general goal is that of discovering properties of the data. 


>> Tokens are: 
[,, unlike, supervised, learning, ,, unsupervised, learning, tasks, operate, unlabelled, data, sets, consisting, solely, inputs, xn, ,, n, =, 1, ,, ..., ,, N, ,, general, goal, discovering, properties, data, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('unlike', 'ADP'), ('supervised', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('unsupervised', 'ADJ'), ('learning', 'VERB'), ('tasks', 'NOUN'), ('operate', 'VERB'), ('unlabelled', 'ADJ'), ('data', 'NOUN'), ('sets', 'NOUN'), ('consisting', 'VERB'), ('solely', 'ADV'), ('inputs', 'NOUN'), ('xn', 'NUM'), (',', 'PUNCT'), ('n', 'CCONJ'), ('=', 'SYM'), ('1', 'NUM'), (',', 'PUNCT'), ('...', 'PUNCT'), (',', 'PUNCT'), ('N', 'PROPN'), (',', 'PUNCT'), ('general', 'ADJ'), ('goal', 'NOUN'), ('discovering', 'VERB'), ('properties', 'NOUN'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('unlike', 'prep'), ('supervised', 'amod'), ('learning', 'pobj'), (',', 'punct'), ('unsupervised', 'amod'), ('learning', 'compound'), ('tasks', 'nsubj'), ('operate', 'ROOT'), ('unlabelled', 'amod'), ('data', 'compound'), ('sets', 'pobj'), ('consisting', 'acl'), ('solely', 'advmod'), ('inputs', 'pobj'), ('xn', 'npadvmod'), (',', 'punct'), ('n', 'pobj'), ('=', 'dep'), ('1', 'prep'), (',', 'punct'), ('...', 'punct'), (',', 'punct'), ('N', 'npadvmod'), (',', 'punct'), ('general', 'amod'), ('goal', 'nsubj'), ('discovering', 'pcomp'), ('properties', 'dobj'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[,, unlike], [unlike, supervised], [supervised, learning], [learning, ,], [,, unsupervised], [unsupervised, learning], [learning, tasks], [tasks, operate], [operate, unlabelled], [unlabelled, data], [data, sets], [sets, consisting], [consisting, solely], [solely, inputs], [inputs, xn], [xn, ,], [,, n], [n, =], [=, 1], [1, ,], [,, ...], [..., ,], [,, N], [N, ,], [,, general], [general, goal], [goal, discovering], [discovering, properties], [properties, data], [data, .]]

>> Trigrams: 
[[,, unlike, supervised], [unlike, supervised, learning], [supervised, learning, ,], [learning, ,, unsupervised], [,, unsupervised, learning], [unsupervised, learning, tasks], [learning, tasks, operate], [tasks, operate, unlabelled], [operate, unlabelled, data], [unlabelled, data, sets], [data, sets, consisting], [sets, consisting, solely], [consisting, solely, inputs], [solely, inputs, xn], [inputs, xn, ,], [xn, ,, n], [,, n, =], [n, =, 1], [=, 1, ,], [1, ,, ...], [,, ..., ,], [..., ,, N], [,, N, ,], [N, ,, general], [,, general, goal], [general, goal, discovering], [goal, discovering, properties], [discovering, properties, data], [properties, data, .]]

>> Noun Phrases are: 
[I, supervised learning, unsupervised learning tasks, unlabelled data sets, the inputs, the general goal, properties, the data]

>> Named Entities are: 
[('1', 'CARDINAL'), ('N', 'GPE')]


============================ Sentence 495 =============================

We start this section by reviewing some of the typical specific unsupervised learning tasks. 


>> Tokens are: 
[start, section, reviewing, typical, specific, unsupervised, learning, tasks, .] 

>> PoS Tags are: 
[('start', 'VERB'), ('section', 'NOUN'), ('reviewing', 'VERB'), ('typical', 'ADJ'), ('specific', 'ADJ'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('tasks', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('start', 'ROOT'), ('section', 'dobj'), ('reviewing', 'pcomp'), ('typical', 'amod'), ('specific', 'amod'), ('unsupervised', 'amod'), ('learning', 'compound'), ('tasks', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[start, section], [section, reviewing], [reviewing, typical], [typical, specific], [specific, unsupervised], [unsupervised, learning], [learning, tasks], [tasks, .]]

>> Trigrams: 
[[start, section, reviewing], [section, reviewing, typical], [reviewing, typical, specific], [typical, specific, unsupervised], [specific, unsupervised, learning], [unsupervised, learning, tasks], [learning, tasks, .]]

>> Noun Phrases are: 
[We, this section, the typical specific unsupervised learning tasks]

>> Named Entities are: 
[]


============================ Sentence 496 =============================

We then cover methodology, models, and learning, includ- ing advanced methods such as Generative Adversarial Networks (GANs) 


>> Tokens are: 
[cover, methodology, ,, models, ,, learning, ,, includ-, ing, advanced, methods, Generative, Adversarial, Networks, (, GANs, )] 

>> PoS Tags are: 
[('cover', 'VERB'), ('methodology', 'NOUN'), (',', 'PUNCT'), ('models', 'NOUN'), (',', 'PUNCT'), ('learning', 'VERB'), (',', 'PUNCT'), ('includ-', 'ADJ'), ('ing', 'VERB'), ('advanced', 'ADJ'), ('methods', 'NOUN'), ('Generative', 'PROPN'), ('Adversarial', 'PROPN'), ('Networks', 'PROPN'), ('(', 'PUNCT'), ('GANs', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('cover', 'ROOT'), ('methodology', 'dobj'), (',', 'punct'), ('models', 'conj'), (',', 'punct'), ('learning', 'conj'), (',', 'punct'), ('includ-', 'conj'), ('ing', 'conj'), ('advanced', 'amod'), ('methods', 'dobj'), ('Generative', 'compound'), ('Adversarial', 'compound'), ('Networks', 'pobj'), ('(', 'punct'), ('GANs', 'appos'), (')', 'punct')]

>> Bigrams: 
[[cover, methodology], [methodology, ,], [,, models], [models, ,], [,, learning], [learning, ,], [,, includ-], [includ-, ing], [ing, advanced], [advanced, methods], [methods, Generative], [Generative, Adversarial], [Adversarial, Networks], [Networks, (], [(, GANs], [GANs, )]]

>> Trigrams: 
[[cover, methodology, ,], [methodology, ,, models], [,, models, ,], [models, ,, learning], [,, learning, ,], [learning, ,, includ-], [,, includ-, ing], [includ-, ing, advanced], [ing, advanced, methods], [advanced, methods, Generative], [methods, Generative, Adversarial], [Generative, Adversarial, Networks], [Adversarial, Networks, (], [Networks, (, GANs], [(, GANs, )]]

>> Noun Phrases are: 
[We, methodology, models, advanced methods, Generative Adversarial Networks, GANs]

>> Named Entities are: 
[('Generative Adversarial Networks', 'ORG')]


============================ Sentence 497 =============================

[7]. 


>> Tokens are: 
[[, 7, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('7', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('7', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 7], [7, ]], [], .]]

>> Trigrams: 
[[[, 7, ]], [7, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 498 =============================

 A. Goals and Definitions   


>> Tokens are: 
[ , A., Goals, Definitions,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('A.', 'NOUN'), ('Goals', 'NOUN'), ('Definitions', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('A.', 'compound'), ('Goals', 'ROOT'), ('Definitions', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[ , A.], [A., Goals], [Goals, Definitions], [Definitions,  ]]

>> Trigrams: 
[[ , A., Goals], [A., Goals, Definitions], [Goals, Definitions,  ]]

>> Noun Phrases are: 
[ A. Goals, Definitions]

>> Named Entities are: 
[]


============================ Sentence 499 =============================

In unsupervised learning, taking a frequentist formu- lation (see Sec III-A), we are given a training set D consisting of N i.i.d. 


>> Tokens are: 
[unsupervised, learning, ,, taking, frequentist, formu-, lation, (, Sec, III, -, ), ,, given, training, set, D, consisting, N, i.i.d, .] 

>> PoS Tags are: 
[('unsupervised', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('taking', 'VERB'), ('frequentist', 'NOUN'), ('formu-', 'NOUN'), ('lation', 'NOUN'), ('(', 'PUNCT'), ('Sec', 'PROPN'), ('III', 'PROPN'), ('-', 'PUNCT'), (')', 'PUNCT'), (',', 'PUNCT'), ('given', 'VERB'), ('training', 'NOUN'), ('set', 'NOUN'), ('D', 'NOUN'), ('consisting', 'VERB'), ('N', 'PROPN'), ('i.i.d', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('unsupervised', 'amod'), ('learning', 'pobj'), (',', 'punct'), ('taking', 'advcl'), ('frequentist', 'dobj'), ('formu-', 'compound'), ('lation', 'dobj'), ('(', 'punct'), ('Sec', 'compound'), ('III', 'compound'), ('-', 'punct'), (')', 'punct'), (',', 'punct'), ('given', 'ROOT'), ('training', 'compound'), ('set', 'amod'), ('D', 'dobj'), ('consisting', 'acl'), ('N', 'compound'), ('i.i.d', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[unsupervised, learning], [learning, ,], [,, taking], [taking, frequentist], [frequentist, formu-], [formu-, lation], [lation, (], [(, Sec], [Sec, III], [III, -], [-, )], [), ,], [,, given], [given, training], [training, set], [set, D], [D, consisting], [consisting, N], [N, i.i.d], [i.i.d, .]]

>> Trigrams: 
[[unsupervised, learning, ,], [learning, ,, taking], [,, taking, frequentist], [taking, frequentist, formu-], [frequentist, formu-, lation], [formu-, lation, (], [lation, (, Sec], [(, Sec, III], [Sec, III, -], [III, -, )], [-, ), ,], [), ,, given], [,, given, training], [given, training, set], [training, set, D], [set, D, consisting], [D, consisting, N], [consisting, N, i.i.d], [N, i.i.d, .]]

>> Noun Phrases are: 
[unsupervised learning, a frequentist, formu- lation, Sec III-A, we, a training set D, N i.i.d]

>> Named Entities are: 
[('Sec III-A', 'PERSON')]


============================ Sentence 500 =============================

samples xn ∼ p(x) with n = 1, ..., N generated from an unknown true distribution p(x). 


>> Tokens are: 
[samples, xn, ∼, p(x, ), n, =, 1, ,, ..., ,, N, generated, unknown, true, distribution, p(x, ), .] 

>> PoS Tags are: 
[('samples', 'NOUN'), ('xn', 'NUM'), ('∼', 'NOUN'), ('p(x', 'PROPN'), (')', 'PUNCT'), ('n', 'CCONJ'), ('=', 'SYM'), ('1', 'NUM'), (',', 'PUNCT'), ('...', 'PUNCT'), (',', 'PUNCT'), ('N', 'PROPN'), ('generated', 'VERB'), ('unknown', 'ADJ'), ('true', 'ADJ'), ('distribution', 'NOUN'), ('p(x', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('samples', 'ROOT'), ('xn', 'nummod'), ('∼', 'compound'), ('p(x', 'conj'), (')', 'punct'), ('n', 'cc'), ('=', 'conj'), ('1', 'prep'), (',', 'punct'), ('...', 'punct'), (',', 'punct'), ('N', 'nsubj'), ('generated', 'conj'), ('unknown', 'amod'), ('true', 'amod'), ('distribution', 'compound'), ('p(x', 'pobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[samples, xn], [xn, ∼], [∼, p(x], [p(x, )], [), n], [n, =], [=, 1], [1, ,], [,, ...], [..., ,], [,, N], [N, generated], [generated, unknown], [unknown, true], [true, distribution], [distribution, p(x], [p(x, )], [), .]]

>> Trigrams: 
[[samples, xn, ∼], [xn, ∼, p(x], [∼, p(x, )], [p(x, ), n], [), n, =], [n, =, 1], [=, 1, ,], [1, ,, ...], [,, ..., ,], [..., ,, N], [,, N, generated], [N, generated, unknown], [generated, unknown, true], [unknown, true, distribution], [true, distribution, p(x], [distribution, p(x, )], [p(x, ), .]]

>> Noun Phrases are: 
[samples, ∼ p(x, N, an unknown true distribution p(x]

>> Named Entities are: 
[('∼ p(x', 'PERSON'), ('1', 'CARDINAL'), ('p(x', 'ORG')]


============================ Sentence 501 =============================

The high-level goal is that of learning some useful properties of the distribution p(x). 


>> Tokens are: 
[high, -, level, goal, learning, useful, properties, distribution, p(x, ), .] 

>> PoS Tags are: 
[('high', 'ADJ'), ('-', 'PUNCT'), ('level', 'NOUN'), ('goal', 'NOUN'), ('learning', 'VERB'), ('useful', 'ADJ'), ('properties', 'NOUN'), ('distribution', 'NOUN'), ('p(x', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('high', 'amod'), ('-', 'punct'), ('level', 'compound'), ('goal', 'nsubj'), ('learning', 'pcomp'), ('useful', 'amod'), ('properties', 'dobj'), ('distribution', 'pobj'), ('p(x', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[high, -], [-, level], [level, goal], [goal, learning], [learning, useful], [useful, properties], [properties, distribution], [distribution, p(x], [p(x, )], [), .]]

>> Trigrams: 
[[high, -, level], [-, level, goal], [level, goal, learning], [goal, learning, useful], [learning, useful, properties], [useful, properties, distribution], [properties, distribution, p(x], [distribution, p(x, )], [p(x, ), .]]

>> Noun Phrases are: 
[The high-level goal, some useful properties, the distribution, p(x]

>> Named Entities are: 
[('p(x', 'ORG')]


============================ Sentence 502 =============================

More specifically, we can identify the following tasks. 


>> Tokens are: 
[specifically, ,, identify, following, tasks, .] 

>> PoS Tags are: 
[('specifically', 'ADV'), (',', 'PUNCT'), ('identify', 'VERB'), ('following', 'VERB'), ('tasks', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('specifically', 'advmod'), (',', 'punct'), ('identify', 'ROOT'), ('following', 'amod'), ('tasks', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[specifically, ,], [,, identify], [identify, following], [following, tasks], [tasks, .]]

>> Trigrams: 
[[specifically, ,, identify], [,, identify, following], [identify, following, tasks], [following, tasks, .]]

>> Noun Phrases are: 
[we, the following tasks]

>> Named Entities are: 
[]


============================ Sentence 503 =============================

• Density estimation: 


>> Tokens are: 
[•, Density, estimation, :] 

>> PoS Tags are: 
[('•', 'NUM'), ('Density', 'NOUN'), ('estimation', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('•', 'compound'), ('Density', 'compound'), ('estimation', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[•, Density], [Density, estimation], [estimation, :]]

>> Trigrams: 
[[•, Density, estimation], [Density, estimation, :]]

>> Noun Phrases are: 
[• Density estimation]

>> Named Entities are: 
[]


============================ Sentence 504 =============================

Density estimation aims at es-  timating directly the distribution p(x). 


>> Tokens are: 
[Density, estimation, aims, es-,  , timating, directly, distribution, p(x, ), .] 

>> PoS Tags are: 
[('Density', 'NOUN'), ('estimation', 'NOUN'), ('aims', 'VERB'), ('es-', 'X'), (' ', 'SPACE'), ('timating', 'VERB'), ('directly', 'ADV'), ('distribution', 'NOUN'), ('p(x', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Density', 'compound'), ('estimation', 'nsubj'), ('aims', 'ROOT'), ('es-', 'nmod'), (' ', 'pobj'), ('timating', 'advcl'), ('directly', 'advmod'), ('distribution', 'dobj'), ('p(x', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Density, estimation], [estimation, aims], [aims, es-], [es-,  ], [ , timating], [timating, directly], [directly, distribution], [distribution, p(x], [p(x, )], [), .]]

>> Trigrams: 
[[Density, estimation, aims], [estimation, aims, es-], [aims, es-,  ], [es-,  , timating], [ , timating, directly], [timating, directly, distribution], [directly, distribution, p(x], [distribution, p(x, )], [p(x, ), .]]

>> Noun Phrases are: 
[Density estimation, the distribution, p(x]

>> Named Entities are: 
[('p(x', 'ORG')]


============================ Sentence 505 =============================

This may be useful, for example, for use in plug-in estimators of information-theoretic quantities, for the design of compression algorithms, or to detect outliers;  • 


>> Tokens are: 
[useful, ,, example, ,, use, plug, -, estimators, information, -, theoretic, quantities, ,, design, compression, algorithms, ,, detect, outliers, ;,  , •] 

>> PoS Tags are: 
[('useful', 'ADJ'), (',', 'PUNCT'), ('example', 'NOUN'), (',', 'PUNCT'), ('use', 'NOUN'), ('plug', 'NOUN'), ('-', 'PUNCT'), ('estimators', 'NOUN'), ('information', 'NOUN'), ('-', 'PUNCT'), ('theoretic', 'ADJ'), ('quantities', 'NOUN'), (',', 'PUNCT'), ('design', 'NOUN'), ('compression', 'NOUN'), ('algorithms', 'NOUN'), (',', 'PUNCT'), ('detect', 'VERB'), ('outliers', 'NOUN'), (';', 'PUNCT'), (' ', 'SPACE'), ('•', 'PROPN')] 

>> Dependency Tags are: 
[('useful', 'acomp'), (',', 'punct'), ('example', 'pobj'), (',', 'punct'), ('use', 'pobj'), ('plug', 'amod'), ('-', 'punct'), ('estimators', 'pobj'), ('information', 'npadvmod'), ('-', 'punct'), ('theoretic', 'amod'), ('quantities', 'pobj'), (',', 'punct'), ('design', 'pobj'), ('compression', 'compound'), ('algorithms', 'pobj'), (',', 'punct'), ('detect', 'conj'), ('outliers', 'dobj'), (';', 'punct'), (' ', 'appos'), ('•', 'punct')]

>> Bigrams: 
[[useful, ,], [,, example], [example, ,], [,, use], [use, plug], [plug, -], [-, estimators], [estimators, information], [information, -], [-, theoretic], [theoretic, quantities], [quantities, ,], [,, design], [design, compression], [compression, algorithms], [algorithms, ,], [,, detect], [detect, outliers], [outliers, ;], [;,  ], [ , •]]

>> Trigrams: 
[[useful, ,, example], [,, example, ,], [example, ,, use], [,, use, plug], [use, plug, -], [plug, -, estimators], [-, estimators, information], [estimators, information, -], [information, -, theoretic], [-, theoretic, quantities], [theoretic, quantities, ,], [quantities, ,, design], [,, design, compression], [design, compression, algorithms], [compression, algorithms, ,], [algorithms, ,, detect], [,, detect, outliers], [detect, outliers, ;], [outliers, ;,  ], [;,  , •]]

>> Noun Phrases are: 
[example, use, plug-in estimators, information-theoretic quantities, the design, compression algorithms, outliers]

>> Named Entities are: 
[]


============================ Sentence 506 =============================

Clustering: 


>> Tokens are: 
[Clustering, :] 

>> PoS Tags are: 
[('Clustering', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Clustering', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[Clustering, :]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Clustering]

>> Named Entities are: 
[]


============================ Sentence 507 =============================

Clustering aims at partitioning all points in the data set D in groups of similar objects, where the notion of similarity is domain-dependent;  • Dimensionality reduction, representation, and fea- ture extraction: These three related tasks represent each data point xn in a different space, typically of lower dimensionality, in order to highlight in- dependent explanatory factors and/or to ease visu- alization, interpretation, or the implementation of successive tasks, e.g.--.-, classification;  • Generation of new samples: 


>> Tokens are: 
[Clustering, aims, partitioning, points, data, set, D, groups, similar, objects, ,, notion, similarity, domain, -, dependent, ;,  , •, Dimensionality, reduction, ,, representation, ,, fea-, ture, extraction, :, related, tasks, represent, data, point, xn, different, space, ,, typically, lower, dimensionality, ,, order, highlight, in-, dependent, explanatory, factors, and/or, ease, visu-, alization, ,, interpretation, ,, implementation, successive, tasks, ,, e.g.--.-, ,, classification, ;,  , •, Generation, new, samples, :] 

>> PoS Tags are: 
[('Clustering', 'NOUN'), ('aims', 'VERB'), ('partitioning', 'VERB'), ('points', 'NOUN'), ('data', 'NOUN'), ('set', 'VERB'), ('D', 'NOUN'), ('groups', 'NOUN'), ('similar', 'ADJ'), ('objects', 'NOUN'), (',', 'PUNCT'), ('notion', 'NOUN'), ('similarity', 'NOUN'), ('domain', 'NOUN'), ('-', 'PUNCT'), ('dependent', 'ADJ'), (';', 'PUNCT'), (' ', 'SPACE'), ('•', 'ADJ'), ('Dimensionality', 'NOUN'), ('reduction', 'NOUN'), (',', 'PUNCT'), ('representation', 'NOUN'), (',', 'PUNCT'), ('fea-', 'ADV'), ('ture', 'VERB'), ('extraction', 'NOUN'), (':', 'PUNCT'), ('related', 'VERB'), ('tasks', 'NOUN'), ('represent', 'VERB'), ('data', 'NOUN'), ('point', 'NOUN'), ('xn', 'NUM'), ('different', 'ADJ'), ('space', 'NOUN'), (',', 'PUNCT'), ('typically', 'ADV'), ('lower', 'ADJ'), ('dimensionality', 'NOUN'), (',', 'PUNCT'), ('order', 'NOUN'), ('highlight', 'VERB'), ('in-', 'NOUN'), ('dependent', 'ADJ'), ('explanatory', 'ADJ'), ('factors', 'NOUN'), ('and/or', 'CCONJ'), ('ease', 'VERB'), ('visu-', 'ADJ'), ('alization', 'NOUN'), (',', 'PUNCT'), ('interpretation', 'NOUN'), (',', 'PUNCT'), ('implementation', 'NOUN'), ('successive', 'ADJ'), ('tasks', 'NOUN'), (',', 'PUNCT'), ('e.g.--.-', 'ADJ'), (',', 'PUNCT'), ('classification', 'NOUN'), (';', 'PUNCT'), (' ', 'SPACE'), ('•', 'PRON'), ('Generation', 'PROPN'), ('new', 'ADJ'), ('samples', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Clustering', 'nsubj'), ('aims', 'ccomp'), ('partitioning', 'pcomp'), ('points', 'dobj'), ('data', 'pobj'), ('set', 'acl'), ('D', 'appos'), ('groups', 'pobj'), ('similar', 'amod'), ('objects', 'pobj'), (',', 'punct'), ('notion', 'nsubj'), ('similarity', 'pobj'), ('domain', 'npadvmod'), ('-', 'punct'), ('dependent', 'acomp'), (';', 'punct'), (' ', 'nmod'), ('•', 'punct'), ('Dimensionality', 'compound'), ('reduction', 'conj'), (',', 'punct'), ('representation', 'conj'), (',', 'punct'), ('fea-', 'advmod'), ('ture', 'conj'), ('extraction', 'dobj'), (':', 'punct'), ('related', 'amod'), ('tasks', 'nsubj'), ('represent', 'ROOT'), ('data', 'compound'), ('point', 'dobj'), ('xn', 'npadvmod'), ('different', 'amod'), ('space', 'pobj'), (',', 'punct'), ('typically', 'advmod'), ('lower', 'amod'), ('dimensionality', 'pobj'), (',', 'punct'), ('order', 'pobj'), ('highlight', 'acl'), ('in-', 'nmod'), ('dependent', 'amod'), ('explanatory', 'amod'), ('factors', 'dobj'), ('and/or', 'cc'), ('ease', 'conj'), ('visu-', 'amod'), ('alization', 'dobj'), (',', 'punct'), ('interpretation', 'conj'), (',', 'punct'), ('implementation', 'conj'), ('successive', 'amod'), ('tasks', 'pobj'), (',', 'punct'), ('e.g.--.-', 'intj'), (',', 'punct'), ('classification', 'conj'), (';', 'punct'), (' ', 'appos'), ('•', 'punct'), ('Generation', 'appos'), ('new', 'amod'), ('samples', 'pobj'), (':', 'punct')]

>> Bigrams: 
[[Clustering, aims], [aims, partitioning], [partitioning, points], [points, data], [data, set], [set, D], [D, groups], [groups, similar], [similar, objects], [objects, ,], [,, notion], [notion, similarity], [similarity, domain], [domain, -], [-, dependent], [dependent, ;], [;,  ], [ , •], [•, Dimensionality], [Dimensionality, reduction], [reduction, ,], [,, representation], [representation, ,], [,, fea-], [fea-, ture], [ture, extraction], [extraction, :], [:, related], [related, tasks], [tasks, represent], [represent, data], [data, point], [point, xn], [xn, different], [different, space], [space, ,], [,, typically], [typically, lower], [lower, dimensionality], [dimensionality, ,], [,, order], [order, highlight], [highlight, in-], [in-, dependent], [dependent, explanatory], [explanatory, factors], [factors, and/or], [and/or, ease], [ease, visu-], [visu-, alization], [alization, ,], [,, interpretation], [interpretation, ,], [,, implementation], [implementation, successive], [successive, tasks], [tasks, ,], [,, e.g.--.-], [e.g.--.-, ,], [,, classification], [classification, ;], [;,  ], [ , •], [•, Generation], [Generation, new], [new, samples], [samples, :]]

>> Trigrams: 
[[Clustering, aims, partitioning], [aims, partitioning, points], [partitioning, points, data], [points, data, set], [data, set, D], [set, D, groups], [D, groups, similar], [groups, similar, objects], [similar, objects, ,], [objects, ,, notion], [,, notion, similarity], [notion, similarity, domain], [similarity, domain, -], [domain, -, dependent], [-, dependent, ;], [dependent, ;,  ], [;,  , •], [ , •, Dimensionality], [•, Dimensionality, reduction], [Dimensionality, reduction, ,], [reduction, ,, representation], [,, representation, ,], [representation, ,, fea-], [,, fea-, ture], [fea-, ture, extraction], [ture, extraction, :], [extraction, :, related], [:, related, tasks], [related, tasks, represent], [tasks, represent, data], [represent, data, point], [data, point, xn], [point, xn, different], [xn, different, space], [different, space, ,], [space, ,, typically], [,, typically, lower], [typically, lower, dimensionality], [lower, dimensionality, ,], [dimensionality, ,, order], [,, order, highlight], [order, highlight, in-], [highlight, in-, dependent], [in-, dependent, explanatory], [dependent, explanatory, factors], [explanatory, factors, and/or], [factors, and/or, ease], [and/or, ease, visu-], [ease, visu-, alization], [visu-, alization, ,], [alization, ,, interpretation], [,, interpretation, ,], [interpretation, ,, implementation], [,, implementation, successive], [implementation, successive, tasks], [successive, tasks, ,], [tasks, ,, e.g.--.-], [,, e.g.--.-, ,], [e.g.--.-, ,, classification], [,, classification, ;], [classification, ;,  ], [;,  , •], [ , •, Generation], [•, Generation, new], [Generation, new, samples], [new, samples, :]]

>> Noun Phrases are: 
[Clustering, all points, the data, D, groups, similar objects, the notion, similarity, extraction, These three related tasks, each data point, a different space, lower dimensionality, order, in- dependent explanatory factors, visu- alization, interpretation, the implementation, successive tasks, Generation, new samples]

>> Named Entities are: 
[('three', 'CARDINAL')]


============================ Sentence 508 =============================

Given the data set D, we wish to learn a machine that produces sam- ples that are approximately distributed according  12    to p(x). 


>> Tokens are: 
[Given, data, set, D, ,, wish, learn, machine, produces, sam-, ples, approximately, distributed, according,  , 12,    , p(x, ), .] 

>> PoS Tags are: 
[('Given', 'VERB'), ('data', 'NOUN'), ('set', 'VERB'), ('D', 'NOUN'), (',', 'PUNCT'), ('wish', 'VERB'), ('learn', 'VERB'), ('machine', 'NOUN'), ('produces', 'VERB'), ('sam-', 'ADJ'), ('ples', 'NOUN'), ('approximately', 'ADV'), ('distributed', 'VERB'), ('according', 'VERB'), (' ', 'SPACE'), ('12', 'NUM'), ('   ', 'SPACE'), ('p(x', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Given', 'prep'), ('data', 'pobj'), ('set', 'acl'), ('D', 'appos'), (',', 'punct'), ('wish', 'ROOT'), ('learn', 'xcomp'), ('machine', 'dobj'), ('produces', 'relcl'), ('sam-', 'amod'), ('ples', 'dobj'), ('approximately', 'advmod'), ('distributed', 'relcl'), ('according', 'prep'), (' ', 'pobj'), ('12', 'nummod'), ('   ', 'pobj'), ('p(x', 'pobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Given, data], [data, set], [set, D], [D, ,], [,, wish], [wish, learn], [learn, machine], [machine, produces], [produces, sam-], [sam-, ples], [ples, approximately], [approximately, distributed], [distributed, according], [according,  ], [ , 12], [12,    ], [   , p(x], [p(x, )], [), .]]

>> Trigrams: 
[[Given, data, set], [data, set, D], [set, D, ,], [D, ,, wish], [,, wish, learn], [wish, learn, machine], [learn, machine, produces], [machine, produces, sam-], [produces, sam-, ples], [sam-, ples, approximately], [ples, approximately, distributed], [approximately, distributed, according], [distributed, according,  ], [according,  , 12], [ , 12,    ], [12,    , p(x], [   , p(x, )], [p(x, ), .]]

>> Noun Phrases are: 
[the data, D, we, a machine, sam- ples, p(x]

>> Named Entities are: 
[('12', 'CARDINAL'), ('p(x', 'ORG')]


============================ Sentence 509 =============================

As an example, if the data set contains images of celebrities, the idea is to produce plausi- ble images of non-existent celebrities. 


>> Tokens are: 
[example, ,, data, set, contains, images, celebrities, ,, idea, produce, plausi-, ble, images, non, -, existent, celebrities, .] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), ('data', 'NOUN'), ('set', 'NOUN'), ('contains', 'VERB'), ('images', 'NOUN'), ('celebrities', 'NOUN'), (',', 'PUNCT'), ('idea', 'NOUN'), ('produce', 'VERB'), ('plausi-', 'NOUN'), ('ble', 'ADJ'), ('images', 'NOUN'), ('non', 'ADJ'), ('-', 'ADJ'), ('existent', 'ADJ'), ('celebrities', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct'), ('data', 'compound'), ('set', 'nsubj'), ('contains', 'advcl'), ('images', 'dobj'), ('celebrities', 'pobj'), (',', 'punct'), ('idea', 'nsubj'), ('produce', 'xcomp'), ('plausi-', 'dative'), ('ble', 'amod'), ('images', 'dobj'), ('non', 'amod'), ('-', 'amod'), ('existent', 'amod'), ('celebrities', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[example, ,], [,, data], [data, set], [set, contains], [contains, images], [images, celebrities], [celebrities, ,], [,, idea], [idea, produce], [produce, plausi-], [plausi-, ble], [ble, images], [images, non], [non, -], [-, existent], [existent, celebrities], [celebrities, .]]

>> Trigrams: 
[[example, ,, data], [,, data, set], [data, set, contains], [set, contains, images], [contains, images, celebrities], [images, celebrities, ,], [celebrities, ,, idea], [,, idea, produce], [idea, produce, plausi-], [produce, plausi-, ble], [plausi-, ble, images], [ble, images, non], [images, non, -], [non, -, existent], [-, existent, celebrities], [existent, celebrities, .]]

>> Noun Phrases are: 
[an example, the data set, images, celebrities, the idea, plausi-, ble images, non-existent celebrities]

>> Named Entities are: 
[]


============================ Sentence 510 =============================

This can be useful, e.g.--.-, to produce artificial scenes for video parameterizes or films.   


>> Tokens are: 
[useful, ,, e.g.--.-, ,, produce, artificial, scenes, video, parameterizes, films, .,  ] 

>> PoS Tags are: 
[('useful', 'ADJ'), (',', 'PUNCT'), ('e.g.--.-', 'ADJ'), (',', 'PUNCT'), ('produce', 'VERB'), ('artificial', 'ADJ'), ('scenes', 'NOUN'), ('video', 'NOUN'), ('parameterizes', 'NOUN'), ('films', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('useful', 'acomp'), (',', 'punct'), ('e.g.--.-', 'dep'), (',', 'punct'), ('produce', 'advcl'), ('artificial', 'amod'), ('scenes', 'dobj'), ('video', 'compound'), ('parameterizes', 'pobj'), ('films', 'conj'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[useful, ,], [,, e.g.--.-], [e.g.--.-, ,], [,, produce], [produce, artificial], [artificial, scenes], [scenes, video], [video, parameterizes], [parameterizes, films], [films, .], [.,  ]]

>> Trigrams: 
[[useful, ,, e.g.--.-], [,, e.g.--.-, ,], [e.g.--.-, ,, produce], [,, produce, artificial], [produce, artificial, scenes], [artificial, scenes, video], [scenes, video, parameterizes], [video, parameterizes, films], [parameterizes, films, .], [films, .,  ]]

>> Noun Phrases are: 
[artificial scenes, video parameterizes, films]

>> Named Entities are: 
[]


============================ Sentence 511 =============================

As suggested by the variety of tasks listed above, unsupervised learning does not have a formal unified formulation as supervised learning. 


>> Tokens are: 
[suggested, variety, tasks, listed, ,, unsupervised, learning, formal, unified, formulation, supervised, learning, .] 

>> PoS Tags are: 
[('suggested', 'VERB'), ('variety', 'NOUN'), ('tasks', 'NOUN'), ('listed', 'VERB'), (',', 'PUNCT'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('formal', 'ADJ'), ('unified', 'ADJ'), ('formulation', 'NOUN'), ('supervised', 'ADJ'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('suggested', 'advcl'), ('variety', 'pobj'), ('tasks', 'pobj'), ('listed', 'acl'), (',', 'punct'), ('unsupervised', 'amod'), ('learning', 'nsubj'), ('formal', 'amod'), ('unified', 'amod'), ('formulation', 'dobj'), ('supervised', 'amod'), ('learning', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[suggested, variety], [variety, tasks], [tasks, listed], [listed, ,], [,, unsupervised], [unsupervised, learning], [learning, formal], [formal, unified], [unified, formulation], [formulation, supervised], [supervised, learning], [learning, .]]

>> Trigrams: 
[[suggested, variety, tasks], [variety, tasks, listed], [tasks, listed, ,], [listed, ,, unsupervised], [,, unsupervised, learning], [unsupervised, learning, formal], [learning, formal, unified], [formal, unified, formulation], [unified, formulation, supervised], [formulation, supervised, learning], [supervised, learning, .]]

>> Noun Phrases are: 
[the variety, tasks, unsupervised learning, a formal unified formulation, supervised learning]

>> Named Entities are: 
[]


============================ Sentence 512 =============================

Nevertheless, the general methodology follows three main steps in a manner similar to supervised learning (see Sec III-D). 


>> Tokens are: 
[,, general, methodology, follows, main, steps, manner, similar, supervised, learning, (, Sec, III, -, D, ), .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('general', 'ADJ'), ('methodology', 'NOUN'), ('follows', 'VERB'), ('main', 'ADJ'), ('steps', 'NOUN'), ('manner', 'NOUN'), ('similar', 'ADJ'), ('supervised', 'ADJ'), ('learning', 'NOUN'), ('(', 'PUNCT'), ('Sec', 'PROPN'), ('III', 'PROPN'), ('-', 'PUNCT'), ('D', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('general', 'amod'), ('methodology', 'nsubj'), ('follows', 'ROOT'), ('main', 'amod'), ('steps', 'dobj'), ('manner', 'pobj'), ('similar', 'amod'), ('supervised', 'amod'), ('learning', 'pobj'), ('(', 'punct'), ('Sec', 'compound'), ('III', 'compound'), ('-', 'punct'), ('D', 'nsubj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[,, general], [general, methodology], [methodology, follows], [follows, main], [main, steps], [steps, manner], [manner, similar], [similar, supervised], [supervised, learning], [learning, (], [(, Sec], [Sec, III], [III, -], [-, D], [D, )], [), .]]

>> Trigrams: 
[[,, general, methodology], [general, methodology, follows], [methodology, follows, main], [follows, main, steps], [main, steps, manner], [steps, manner, similar], [manner, similar, supervised], [similar, supervised, learning], [supervised, learning, (], [learning, (, Sec], [(, Sec, III], [Sec, III, -], [III, -, D], [-, D, )], [D, ), .]]

>> Noun Phrases are: 
[the general methodology, three main steps, a manner, supervised learning, Sec III-D]

>> Named Entities are: 
[('three', 'CARDINAL'), ('Sec III-D', 'PERSON')]


============================ Sentence 513 =============================

In Step 1 (model selection), a model, or a hypothesis class, is selected, defining the inductive bias of the learning process. 


>> Tokens are: 
[Step, 1, (, model, selection, ), ,, model, ,, hypothesis, class, ,, selected, ,, defining, inductive, bias, learning, process, .] 

>> PoS Tags are: 
[('Step', 'PROPN'), ('1', 'NUM'), ('(', 'PUNCT'), ('model', 'NOUN'), ('selection', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('model', 'NOUN'), (',', 'PUNCT'), ('hypothesis', 'NOUN'), ('class', 'NOUN'), (',', 'PUNCT'), ('selected', 'VERB'), (',', 'PUNCT'), ('defining', 'VERB'), ('inductive', 'ADJ'), ('bias', 'NOUN'), ('learning', 'NOUN'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Step', 'pobj'), ('1', 'nummod'), ('(', 'punct'), ('model', 'compound'), ('selection', 'pobj'), (')', 'punct'), (',', 'punct'), ('model', 'conj'), (',', 'punct'), ('hypothesis', 'compound'), ('class', 'conj'), (',', 'punct'), ('selected', 'ROOT'), (',', 'punct'), ('defining', 'advcl'), ('inductive', 'amod'), ('bias', 'dobj'), ('learning', 'compound'), ('process', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Step, 1], [1, (], [(, model], [model, selection], [selection, )], [), ,], [,, model], [model, ,], [,, hypothesis], [hypothesis, class], [class, ,], [,, selected], [selected, ,], [,, defining], [defining, inductive], [inductive, bias], [bias, learning], [learning, process], [process, .]]

>> Trigrams: 
[[Step, 1, (], [1, (, model], [(, model, selection], [model, selection, )], [selection, ), ,], [), ,, model], [,, model, ,], [model, ,, hypothesis], [,, hypothesis, class], [hypothesis, class, ,], [class, ,, selected], [,, selected, ,], [selected, ,, defining], [,, defining, inductive], [defining, inductive, bias], [inductive, bias, learning], [bias, learning, process], [learning, process, .]]

>> Noun Phrases are: 
[Step, (model selection, a model, a hypothesis class, the inductive bias, the learning process]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 514 =============================

This is done by positing a family of probability distributions p(x|θ) parameterized by a vector θ. 


>> Tokens are: 
[positing, family, probability, distributions, p(x|θ, ), parameterized, vector, θ, .] 

>> PoS Tags are: 
[('positing', 'VERB'), ('family', 'NOUN'), ('probability', 'NOUN'), ('distributions', 'NOUN'), ('p(x|θ', 'ADV'), (')', 'PUNCT'), ('parameterized', 'VERB'), ('vector', 'NOUN'), ('θ', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('positing', 'pcomp'), ('family', 'dobj'), ('probability', 'compound'), ('distributions', 'pobj'), ('p(x|θ', 'advmod'), (')', 'punct'), ('parameterized', 'ccomp'), ('vector', 'pobj'), ('θ', 'dep'), ('.', 'punct')]

>> Bigrams: 
[[positing, family], [family, probability], [probability, distributions], [distributions, p(x|θ], [p(x|θ, )], [), parameterized], [parameterized, vector], [vector, θ], [θ, .]]

>> Trigrams: 
[[positing, family, probability], [family, probability, distributions], [probability, distributions, p(x|θ], [distributions, p(x|θ, )], [p(x|θ, ), parameterized], [), parameterized, vector], [parameterized, vector, θ], [vector, θ, .]]

>> Noun Phrases are: 
[a family, probability distributions, a vector]

>> Named Entities are: 
[]


============================ Sentence 515 =============================

In Step 2 (learning), the data D is used to optimize a learning criterion with the aim of choosing a value for the parameter vector θ. 


>> Tokens are: 
[Step, 2, (, learning, ), ,, data, D, optimize, learning, criterion, aim, choosing, value, parameter, vector, θ, .] 

>> PoS Tags are: 
[('Step', 'PROPN'), ('2', 'NUM'), ('(', 'PUNCT'), ('learning', 'VERB'), (')', 'PUNCT'), (',', 'PUNCT'), ('data', 'NOUN'), ('D', 'PROPN'), ('optimize', 'VERB'), ('learning', 'VERB'), ('criterion', 'NOUN'), ('aim', 'NOUN'), ('choosing', 'VERB'), ('value', 'NOUN'), ('parameter', 'NOUN'), ('vector', 'NOUN'), ('θ', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Step', 'pobj'), ('2', 'nummod'), ('(', 'punct'), ('learning', 'appos'), (')', 'punct'), (',', 'punct'), ('data', 'compound'), ('D', 'nsubjpass'), ('optimize', 'xcomp'), ('learning', 'compound'), ('criterion', 'dobj'), ('aim', 'pobj'), ('choosing', 'pcomp'), ('value', 'dobj'), ('parameter', 'compound'), ('vector', 'pobj'), ('θ', 'dep'), ('.', 'punct')]

>> Bigrams: 
[[Step, 2], [2, (], [(, learning], [learning, )], [), ,], [,, data], [data, D], [D, optimize], [optimize, learning], [learning, criterion], [criterion, aim], [aim, choosing], [choosing, value], [value, parameter], [parameter, vector], [vector, θ], [θ, .]]

>> Trigrams: 
[[Step, 2, (], [2, (, learning], [(, learning, )], [learning, ), ,], [), ,, data], [,, data, D], [data, D, optimize], [D, optimize, learning], [optimize, learning, criterion], [learning, criterion, aim], [criterion, aim, choosing], [aim, choosing, value], [choosing, value, parameter], [value, parameter, vector], [parameter, vector, θ], [vector, θ, .]]

>> Noun Phrases are: 
[Step, the data D, a learning criterion, the aim, a value, the parameter vector]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 516 =============================

Finally, in Step 3, the trained model is leveraged in order to carry out the task of interest, e.g.--.-, clustering or sample generation. 


>> Tokens are: 
[Finally, ,, Step, 3, ,, trained, model, leveraged, order, carry, task, interest, ,, e.g.--.-, ,, clustering, sample, generation, .] 

>> PoS Tags are: 
[('Finally', 'ADV'), (',', 'PUNCT'), ('Step', 'PROPN'), ('3', 'NUM'), (',', 'PUNCT'), ('trained', 'VERB'), ('model', 'NOUN'), ('leveraged', 'VERB'), ('order', 'NOUN'), ('carry', 'VERB'), ('task', 'NOUN'), ('interest', 'NOUN'), (',', 'PUNCT'), ('e.g.--.-', 'X'), (',', 'PUNCT'), ('clustering', 'NOUN'), ('sample', 'NOUN'), ('generation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Finally', 'advmod'), (',', 'punct'), ('Step', 'pobj'), ('3', 'nummod'), (',', 'punct'), ('trained', 'amod'), ('model', 'nsubjpass'), ('leveraged', 'ROOT'), ('order', 'pobj'), ('carry', 'acl'), ('task', 'dobj'), ('interest', 'pobj'), (',', 'punct'), ('e.g.--.-', 'intj'), (',', 'punct'), ('clustering', 'conj'), ('sample', 'compound'), ('generation', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Finally, ,], [,, Step], [Step, 3], [3, ,], [,, trained], [trained, model], [model, leveraged], [leveraged, order], [order, carry], [carry, task], [task, interest], [interest, ,], [,, e.g.--.-], [e.g.--.-, ,], [,, clustering], [clustering, sample], [sample, generation], [generation, .]]

>> Trigrams: 
[[Finally, ,, Step], [,, Step, 3], [Step, 3, ,], [3, ,, trained], [,, trained, model], [trained, model, leveraged], [model, leveraged, order], [leveraged, order, carry], [order, carry, task], [carry, task, interest], [task, interest, ,], [interest, ,, e.g.--.-], [,, e.g.--.-, ,], [e.g.--.-, ,, clustering], [,, clustering, sample], [clustering, sample, generation], [sample, generation, .]]

>> Noun Phrases are: 
[Step, the trained model, order, the task, interest]

>> Named Entities are: 
[('3', 'CARDINAL')]


============================ Sentence 517 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 518 =============================

In the following, we discuss Step 1 (model selection) and Step 2 (learning). 


>> Tokens are: 
[following, ,, discuss, Step, 1, (, model, selection, ), Step, 2, (, learning, ), .] 

>> PoS Tags are: 
[('following', 'NOUN'), (',', 'PUNCT'), ('discuss', 'VERB'), ('Step', 'PROPN'), ('1', 'NUM'), ('(', 'PUNCT'), ('model', 'NOUN'), ('selection', 'NOUN'), (')', 'PUNCT'), ('Step', 'PROPN'), ('2', 'NUM'), ('(', 'PUNCT'), ('learning', 'VERB'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('following', 'pobj'), (',', 'punct'), ('discuss', 'ROOT'), ('Step', 'dobj'), ('1', 'nummod'), ('(', 'punct'), ('model', 'compound'), ('selection', 'appos'), (')', 'punct'), ('Step', 'conj'), ('2', 'nummod'), ('(', 'punct'), ('learning', 'advcl'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[following, ,], [,, discuss], [discuss, Step], [Step, 1], [1, (], [(, model], [model, selection], [selection, )], [), Step], [Step, 2], [2, (], [(, learning], [learning, )], [), .]]

>> Trigrams: 
[[following, ,, discuss], [,, discuss, Step], [discuss, Step, 1], [Step, 1, (], [1, (, model], [(, model, selection], [model, selection, )], [selection, ), Step], [), Step, 2], [Step, 2, (], [2, (, learning], [(, learning, )], [learning, ), .]]

>> Noun Phrases are: 
[the following, we, Step, (model selection, Step]

>> Named Entities are: 
[('1', 'CARDINAL'), ('2', 'CARDINAL')]


============================ Sentence 519 =============================

For the formulation of specific tasks to be carried out at Step 3, we refer to, e.g.--.-, [7], [19], [57]. 


>> Tokens are: 
[formulation, specific, tasks, carried, Step, 3, ,, refer, ,, e.g.--.-, ,, [, 7, ], ,, [, 19, ], ,, [, 57, ], .] 

>> PoS Tags are: 
[('formulation', 'NOUN'), ('specific', 'ADJ'), ('tasks', 'NOUN'), ('carried', 'VERB'), ('Step', 'PROPN'), ('3', 'NUM'), (',', 'PUNCT'), ('refer', 'VERB'), (',', 'PUNCT'), ('e.g.--.-', 'X'), (',', 'PUNCT'), ('[', 'PUNCT'), ('7', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('[', 'PUNCT'), ('19', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('[', 'PUNCT'), ('57', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('formulation', 'pobj'), ('specific', 'amod'), ('tasks', 'pobj'), ('carried', 'advcl'), ('Step', 'pobj'), ('3', 'nummod'), (',', 'punct'), ('refer', 'ROOT'), (',', 'punct'), ('e.g.--.-', 'intj'), (',', 'punct'), ('[', 'dep'), ('7', 'dep'), (']', 'punct'), (',', 'punct'), ('[', 'dep'), ('19', 'dep'), (']', 'punct'), (',', 'punct'), ('[', 'dep'), ('57', 'npadvmod'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[formulation, specific], [specific, tasks], [tasks, carried], [carried, Step], [Step, 3], [3, ,], [,, refer], [refer, ,], [,, e.g.--.-], [e.g.--.-, ,], [,, [], [[, 7], [7, ]], [], ,], [,, [], [[, 19], [19, ]], [], ,], [,, [], [[, 57], [57, ]], [], .]]

>> Trigrams: 
[[formulation, specific, tasks], [specific, tasks, carried], [tasks, carried, Step], [carried, Step, 3], [Step, 3, ,], [3, ,, refer], [,, refer, ,], [refer, ,, e.g.--.-], [,, e.g.--.-, ,], [e.g.--.-, ,, [], [,, [, 7], [[, 7, ]], [7, ], ,], [], ,, [], [,, [, 19], [[, 19, ]], [19, ], ,], [], ,, [], [,, [, 57], [[, 57, ]], [57, ], .]]

>> Noun Phrases are: 
[the formulation, specific tasks, Step, we]

>> Named Entities are: 
[('3', 'CARDINAL'), ('19', 'CARDINAL'), ('57', 'CARDINAL')]


============================ Sentence 520 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 521 =============================

B. Models   


>> Tokens are: 
[B., Models,  ] 

>> PoS Tags are: 
[('B.', 'PROPN'), ('Models', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('B.', 'compound'), ('Models', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[B., Models], [Models,  ]]

>> Trigrams: 
[[B., Models,  ]]

>> Noun Phrases are: 
[B. Models]

>> Named Entities are: 
[]


============================ Sentence 522 =============================

Unsupervised learning models, selected at Step 1 of the machine learning process, typically involve a hidden or latent (vector of) variables zn for each data point xn. 


>> Tokens are: 
[Unsupervised, learning, models, ,, selected, Step, 1, machine, learning, process, ,, typically, involve, hidden, latent, (, vector, ), variables, zn, data, point, xn, .] 

>> PoS Tags are: 
[('Unsupervised', 'PROPN'), ('learning', 'NOUN'), ('models', 'NOUN'), (',', 'PUNCT'), ('selected', 'VERB'), ('Step', 'PROPN'), ('1', 'NUM'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('process', 'NOUN'), (',', 'PUNCT'), ('typically', 'ADV'), ('involve', 'VERB'), ('hidden', 'ADJ'), ('latent', 'NOUN'), ('(', 'PUNCT'), ('vector', 'NOUN'), (')', 'PUNCT'), ('variables', 'NOUN'), ('zn', 'PRON'), ('data', 'NOUN'), ('point', 'NOUN'), ('xn', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Unsupervised', 'compound'), ('learning', 'compound'), ('models', 'nsubj'), (',', 'punct'), ('selected', 'acl'), ('Step', 'pobj'), ('1', 'nummod'), ('machine', 'compound'), ('learning', 'compound'), ('process', 'pobj'), (',', 'punct'), ('typically', 'advmod'), ('involve', 'ROOT'), ('hidden', 'amod'), ('latent', 'conj'), ('(', 'punct'), ('vector', 'dobj'), (')', 'punct'), ('variables', 'dobj'), ('zn', 'npadvmod'), ('data', 'compound'), ('point', 'pobj'), ('xn', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[Unsupervised, learning], [learning, models], [models, ,], [,, selected], [selected, Step], [Step, 1], [1, machine], [machine, learning], [learning, process], [process, ,], [,, typically], [typically, involve], [involve, hidden], [hidden, latent], [latent, (], [(, vector], [vector, )], [), variables], [variables, zn], [zn, data], [data, point], [point, xn], [xn, .]]

>> Trigrams: 
[[Unsupervised, learning, models], [learning, models, ,], [models, ,, selected], [,, selected, Step], [selected, Step, 1], [Step, 1, machine], [1, machine, learning], [machine, learning, process], [learning, process, ,], [process, ,, typically], [,, typically, involve], [typically, involve, hidden], [involve, hidden, latent], [hidden, latent, (], [latent, (, vector], [(, vector, )], [vector, ), variables], [), variables, zn], [variables, zn, data], [zn, data, point], [data, point, xn], [point, xn, .]]

>> Noun Phrases are: 
[Unsupervised learning models, Step, the machine learning process, a hidden or latent (vector, variables, each data point]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 523 =============================

For example, in a clustering problem, the latent variable zn represents the cluster index of xn. 


>> Tokens are: 
[example, ,, clustering, problem, ,, latent, variable, zn, represents, cluster, index, xn, .] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), ('clustering', 'ADJ'), ('problem', 'NOUN'), (',', 'PUNCT'), ('latent', 'NOUN'), ('variable', 'NOUN'), ('zn', 'PROPN'), ('represents', 'VERB'), ('cluster', 'NOUN'), ('index', 'NOUN'), ('xn', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct'), ('clustering', 'amod'), ('problem', 'pobj'), (',', 'punct'), ('latent', 'compound'), ('variable', 'nsubj'), ('zn', 'appos'), ('represents', 'ROOT'), ('cluster', 'compound'), ('index', 'dobj'), ('xn', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[example, ,], [,, clustering], [clustering, problem], [problem, ,], [,, latent], [latent, variable], [variable, zn], [zn, represents], [represents, cluster], [cluster, index], [index, xn], [xn, .]]

>> Trigrams: 
[[example, ,, clustering], [,, clustering, problem], [clustering, problem, ,], [problem, ,, latent], [,, latent, variable], [latent, variable, zn], [variable, zn, represents], [zn, represents, cluster], [represents, cluster, index], [cluster, index, xn], [index, xn, .]]

>> Noun Phrases are: 
[example, a clustering problem, the latent variable, zn, the cluster index]

>> Named Entities are: 
[]


============================ Sentence 524 =============================

Latent variables are hidden or unobserved in the sense that they do not appear for any of the data points xn in D.3 


>> Tokens are: 
[Latent, variables, hidden, unobserved, sense, appear, data, points, xn, D.3] 

>> PoS Tags are: 
[('Latent', 'NOUN'), ('variables', 'NOUN'), ('hidden', 'VERB'), ('unobserved', 'ADJ'), ('sense', 'NOUN'), ('appear', 'VERB'), ('data', 'NOUN'), ('points', 'NOUN'), ('xn', 'NUM'), ('D.3', 'PROPN')] 

>> Dependency Tags are: 
[('Latent', 'compound'), ('variables', 'nsubjpass'), ('hidden', 'ROOT'), ('unobserved', 'conj'), ('sense', 'pobj'), ('appear', 'acl'), ('data', 'compound'), ('points', 'pobj'), ('xn', 'npadvmod'), ('D.3', 'punct')]

>> Bigrams: 
[[Latent, variables], [variables, hidden], [hidden, unobserved], [unobserved, sense], [sense, appear], [appear, data], [data, points], [points, xn], [xn, D.3]]

>> Trigrams: 
[[Latent, variables, hidden], [variables, hidden, unobserved], [hidden, unobserved, sense], [unobserved, sense, appear], [sense, appear, data], [appear, data, points], [data, points, xn], [points, xn, D.3]]

>> Noun Phrases are: 
[Latent variables, the sense, they, the data points]

>> Named Entities are: 
[]


============================ Sentence 525 =============================

The relationship between latent variables zn and observable variables xn can be modelled in different ways, giving rise to a number of different types of models for unsupervised learning. 


>> Tokens are: 
[relationship, latent, variables, zn, observable, variables, xn, modelled, different, ways, ,, giving, rise, number, different, types, models, unsupervised, learning, .] 

>> PoS Tags are: 
[('relationship', 'NOUN'), ('latent', 'NOUN'), ('variables', 'NOUN'), ('zn', 'INTJ'), ('observable', 'ADJ'), ('variables', 'NOUN'), ('xn', 'NOUN'), ('modelled', 'VERB'), ('different', 'ADJ'), ('ways', 'NOUN'), (',', 'PUNCT'), ('giving', 'VERB'), ('rise', 'NOUN'), ('number', 'NOUN'), ('different', 'ADJ'), ('types', 'NOUN'), ('models', 'NOUN'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('relationship', 'nsubjpass'), ('latent', 'compound'), ('variables', 'pobj'), ('zn', 'appos'), ('observable', 'amod'), ('variables', 'conj'), ('xn', 'appos'), ('modelled', 'ROOT'), ('different', 'amod'), ('ways', 'pobj'), (',', 'punct'), ('giving', 'advcl'), ('rise', 'dobj'), ('number', 'pobj'), ('different', 'amod'), ('types', 'pobj'), ('models', 'pobj'), ('unsupervised', 'amod'), ('learning', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[relationship, latent], [latent, variables], [variables, zn], [zn, observable], [observable, variables], [variables, xn], [xn, modelled], [modelled, different], [different, ways], [ways, ,], [,, giving], [giving, rise], [rise, number], [number, different], [different, types], [types, models], [models, unsupervised], [unsupervised, learning], [learning, .]]

>> Trigrams: 
[[relationship, latent, variables], [latent, variables, zn], [variables, zn, observable], [zn, observable, variables], [observable, variables, xn], [variables, xn, modelled], [xn, modelled, different], [modelled, different, ways], [different, ways, ,], [ways, ,, giving], [,, giving, rise], [giving, rise, number], [rise, number, different], [number, different, types], [different, types, models], [types, models, unsupervised], [models, unsupervised, learning], [unsupervised, learning, .]]

>> Noun Phrases are: 
[The relationship, latent variables, observable variables, xn, different ways, rise, a number, different types, models, unsupervised learning]

>> Named Entities are: 
[]


============================ Sentence 526 =============================

These are illustrated in Fig. 


>> Tokens are: 
[illustrated, Fig, .] 

>> PoS Tags are: 
[('illustrated', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('illustrated', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[illustrated, Fig], [Fig, .]]

>> Trigrams: 
[[illustrated, Fig, .]]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 527 =============================

11 and discussed next. 


>> Tokens are: 
[11, discussed, .] 

>> PoS Tags are: 
[('11', 'NUM'), ('discussed', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('11', 'ROOT'), ('discussed', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[11, discussed], [discussed, .]]

>> Trigrams: 
[[11, discussed, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('11', 'CARDINAL')]


============================ Sentence 528 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 529 =============================

By way of a short round-up of types of models, with reference to Fig. 


>> Tokens are: 
[way, short, round, -, types, models, ,, reference, Fig, .] 

>> PoS Tags are: 
[('way', 'NOUN'), ('short', 'ADJ'), ('round', 'NOUN'), ('-', 'PUNCT'), ('types', 'NOUN'), ('models', 'NOUN'), (',', 'PUNCT'), ('reference', 'NOUN'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('way', 'pobj'), ('short', 'amod'), ('round', 'compound'), ('-', 'punct'), ('types', 'pobj'), ('models', 'pobj'), (',', 'punct'), ('reference', 'pobj'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[way, short], [short, round], [round, -], [-, types], [types, models], [models, ,], [,, reference], [reference, Fig], [Fig, .]]

>> Trigrams: 
[[way, short, round], [short, round, -], [round, -, types], [-, types, models], [types, models, ,], [models, ,, reference], [,, reference, Fig], [reference, Fig, .]]

>> Noun Phrases are: 
[way, a short round-up, types, models, reference, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 530 =============================

11, directed generative models, illustrated by Fig. 


>> Tokens are: 
[11, ,, directed, generative, models, ,, illustrated, Fig, .] 

>> PoS Tags are: 
[('11', 'NUM'), (',', 'PUNCT'), ('directed', 'VERB'), ('generative', 'ADJ'), ('models', 'NOUN'), (',', 'PUNCT'), ('illustrated', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('11', 'dep'), (',', 'punct'), ('directed', 'ROOT'), ('generative', 'amod'), ('models', 'dobj'), (',', 'punct'), ('illustrated', 'acl'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[11, ,], [,, directed], [directed, generative], [generative, models], [models, ,], [,, illustrated], [illustrated, Fig], [Fig, .]]

>> Trigrams: 
[[11, ,, directed], [,, directed, generative], [directed, generative, models], [generative, models, ,], [models, ,, illustrated], [,, illustrated, Fig], [illustrated, Fig, .]]

>> Noun Phrases are: 
[generative models, Fig]

>> Named Entities are: 
[('11', 'CARDINAL'), ('Fig', 'ORG')]


============================ Sentence 531 =============================

11(a), posit that there exist hidden causes z yielding the observation x. Undirected genera- tive models, represented in Fig. 


>> Tokens are: 
[11(a, ), ,, posit, exist, hidden, causes, z, yielding, observation, x., Undirected, genera-, tive, models, ,, represented, Fig, .] 

>> PoS Tags are: 
[('11(a', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('posit', 'VERB'), ('exist', 'VERB'), ('hidden', 'ADJ'), ('causes', 'NOUN'), ('z', 'DET'), ('yielding', 'VERB'), ('observation', 'NOUN'), ('x.', 'NOUN'), ('Undirected', 'PROPN'), ('genera-', 'PROPN'), ('tive', 'NOUN'), ('models', 'NOUN'), (',', 'PUNCT'), ('represented', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('11(a', 'npadvmod'), (')', 'punct'), (',', 'punct'), ('posit', 'ROOT'), ('exist', 'ccomp'), ('hidden', 'amod'), ('causes', 'dobj'), ('z', 'prep'), ('yielding', 'acl'), ('observation', 'compound'), ('x.', 'dobj'), ('Undirected', 'amod'), ('genera-', 'compound'), ('tive', 'compound'), ('models', 'dobj'), (',', 'punct'), ('represented', 'advcl'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[11(a, )], [), ,], [,, posit], [posit, exist], [exist, hidden], [hidden, causes], [causes, z], [z, yielding], [yielding, observation], [observation, x.], [x., Undirected], [Undirected, genera-], [genera-, tive], [tive, models], [models, ,], [,, represented], [represented, Fig], [Fig, .]]

>> Trigrams: 
[[11(a, ), ,], [), ,, posit], [,, posit, exist], [posit, exist, hidden], [exist, hidden, causes], [hidden, causes, z], [causes, z, yielding], [z, yielding, observation], [yielding, observation, x.], [observation, x., Undirected], [x., Undirected, genera-], [Undirected, genera-, tive], [genera-, tive, models], [tive, models, ,], [models, ,, represented], [,, represented, Fig], [represented, Fig, .]]

>> Noun Phrases are: 
[hidden causes, the observation x., Undirected genera- tive models, Fig]

>> Named Entities are: 
[('11(a', 'CARDINAL'), ('Fig', 'PERSON')]


============================ Sentence 532 =============================

11(b) 


>> Tokens are: 
[11(b, )] 

>> PoS Tags are: 
[('11(b', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('11(b', 'ROOT'), (')', 'punct')]

>> Bigrams: 
[[11(b, )]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 533 =============================

model the mutual correlation between x and z. Discriminative models, illustrated by Fig. 


>> Tokens are: 
[model, mutual, correlation, x, z., Discriminative, models, ,, illustrated, Fig, .] 

>> PoS Tags are: 
[('model', 'NOUN'), ('mutual', 'ADJ'), ('correlation', 'NOUN'), ('x', 'SYM'), ('z.', 'PROPN'), ('Discriminative', 'PROPN'), ('models', 'NOUN'), (',', 'PUNCT'), ('illustrated', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('model', 'ROOT'), ('mutual', 'amod'), ('correlation', 'dobj'), ('x', 'punct'), ('z.', 'compound'), ('Discriminative', 'conj'), ('models', 'pobj'), (',', 'punct'), ('illustrated', 'acl'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[model, mutual], [mutual, correlation], [correlation, x], [x, z.], [z., Discriminative], [Discriminative, models], [models, ,], [,, illustrated], [illustrated, Fig], [Fig, .]]

>> Trigrams: 
[[model, mutual, correlation], [mutual, correlation, x], [correlation, x, z.], [x, z., Discriminative], [z., Discriminative, models], [Discriminative, models, ,], [models, ,, illustrated], [,, illustrated, Fig], [illustrated, Fig, .]]

>> Noun Phrases are: 
[model, the mutual correlation, models, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 534 =============================

11(c) 


>> Tokens are: 
[11(c, )] 

>> PoS Tags are: 
[('11(c', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('11(c', 'ROOT'), (')', 'punct')]

>> Bigrams: 
[[11(c, )]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('11(c', 'CARDINAL')]


============================ Sentence 535 =============================

model the extraction of the latent representation z from x. Finally, autoencoders, represented in Fig. 


>> Tokens are: 
[model, extraction, latent, representation, z, x., Finally, ,, autoencoders, ,, represented, Fig, .] 

>> PoS Tags are: 
[('model', 'VERB'), ('extraction', 'NOUN'), ('latent', 'NOUN'), ('representation', 'NOUN'), ('z', 'NOUN'), ('x.', 'NOUN'), ('Finally', 'ADV'), (',', 'PUNCT'), ('autoencoders', 'NOUN'), (',', 'PUNCT'), ('represented', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('model', 'ROOT'), ('extraction', 'dobj'), ('latent', 'compound'), ('representation', 'pobj'), ('z', 'npadvmod'), ('x.', 'pobj'), ('Finally', 'advmod'), (',', 'punct'), ('autoencoders', 'nsubj'), (',', 'punct'), ('represented', 'conj'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[model, extraction], [extraction, latent], [latent, representation], [representation, z], [z, x.], [x., Finally], [Finally, ,], [,, autoencoders], [autoencoders, ,], [,, represented], [represented, Fig], [Fig, .]]

>> Trigrams: 
[[model, extraction, latent], [extraction, latent, representation], [latent, representation, z], [representation, z, x.], [z, x., Finally], [x., Finally, ,], [Finally, ,, autoencoders], [,, autoencoders, ,], [autoencoders, ,, represented], [,, represented, Fig], [represented, Fig, .]]

>> Noun Phrases are: 
[the extraction, the latent representation, x., autoencoders, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 536 =============================

11(d) assume that x is encoded into a latent representation z in such as way that x can then be approximately recovered from z. 


>> Tokens are: 
[11(d, ), assume, x, encoded, latent, representation, z, way, x, approximately, recovered, z.] 

>> PoS Tags are: 
[('11(d', 'NUM'), (')', 'PUNCT'), ('assume', 'VERB'), ('x', 'SYM'), ('encoded', 'VERB'), ('latent', 'ADJ'), ('representation', 'NOUN'), ('z', 'NOUN'), ('way', 'NOUN'), ('x', 'X'), ('approximately', 'ADV'), ('recovered', 'VERB'), ('z.', 'PROPN')] 

>> Dependency Tags are: 
[('11(d', 'nsubj'), (')', 'punct'), ('assume', 'ROOT'), ('x', 'nsubjpass'), ('encoded', 'ccomp'), ('latent', 'compound'), ('representation', 'pobj'), ('z', 'dep'), ('way', 'pobj'), ('x', 'nsubjpass'), ('approximately', 'advmod'), ('recovered', 'ccomp'), ('z.', 'pobj')]

>> Bigrams: 
[[11(d, )], [), assume], [assume, x], [x, encoded], [encoded, latent], [latent, representation], [representation, z], [z, way], [way, x], [x, approximately], [approximately, recovered], [recovered, z.]]

>> Trigrams: 
[[11(d, ), assume], [), assume, x], [assume, x, encoded], [x, encoded, latent], [encoded, latent, representation], [latent, representation, z], [representation, z, way], [z, way, x], [way, x, approximately], [x, approximately, recovered], [approximately, recovered, z.]]

>> Noun Phrases are: 
[a latent representation, way, z.]

>> Named Entities are: 
[('11(d', 'DATE')]


============================ Sentence 537 =============================

In the following, we provide some additional details about directed generative  3Problems in which some of the inputs in D are labelled by a value zn are filed under the rubric of semi-supervised learning [29]. 


>> Tokens are: 
[following, ,, provide, additional, details, directed, generative,  , 3Problems, inputs, D, labelled, value, zn, filed, rubric, semi, -, supervised, learning, [, 29, ], .] 

>> PoS Tags are: 
[('following', 'NOUN'), (',', 'PUNCT'), ('provide', 'VERB'), ('additional', 'ADJ'), ('details', 'NOUN'), ('directed', 'VERB'), ('generative', 'ADJ'), (' ', 'SPACE'), ('3Problems', 'NOUN'), ('inputs', 'NOUN'), ('D', 'NOUN'), ('labelled', 'VERB'), ('value', 'NOUN'), ('zn', 'DET'), ('filed', 'VERB'), ('rubric', 'NOUN'), ('semi', 'ADJ'), ('-', 'ADJ'), ('supervised', 'ADJ'), ('learning', 'NOUN'), ('[', 'PUNCT'), ('29', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('following', 'pobj'), (',', 'punct'), ('provide', 'ROOT'), ('additional', 'amod'), ('details', 'dobj'), ('directed', 'amod'), ('generative', 'amod'), (' ', 'compound'), ('3Problems', 'pobj'), ('inputs', 'pobj'), ('D', 'pobj'), ('labelled', 'relcl'), ('value', 'pobj'), ('zn', 'nsubjpass'), ('filed', 'relcl'), ('rubric', 'pobj'), ('semi', 'amod'), ('-', 'amod'), ('supervised', 'amod'), ('learning', 'pobj'), ('[', 'punct'), ('29', 'dobj'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[following, ,], [,, provide], [provide, additional], [additional, details], [details, directed], [directed, generative], [generative,  ], [ , 3Problems], [3Problems, inputs], [inputs, D], [D, labelled], [labelled, value], [value, zn], [zn, filed], [filed, rubric], [rubric, semi], [semi, -], [-, supervised], [supervised, learning], [learning, [], [[, 29], [29, ]], [], .]]

>> Trigrams: 
[[following, ,, provide], [,, provide, additional], [provide, additional, details], [additional, details, directed], [details, directed, generative], [directed, generative,  ], [generative,  , 3Problems], [ , 3Problems, inputs], [3Problems, inputs, D], [inputs, D, labelled], [D, labelled, value], [labelled, value, zn], [value, zn, filed], [zn, filed, rubric], [filed, rubric, semi], [rubric, semi, -], [semi, -, supervised], [-, supervised, learning], [supervised, learning, [], [learning, [, 29], [[, 29, ]], [29, ], .]]

>> Noun Phrases are: 
[the following, we, some additional details, directed generative  3Problems, the inputs, D, a value, the rubric, semi-supervised learning]

>> Named Entities are: 
[('3Problems', 'CARDINAL'), ('29', 'CARDINAL')]


============================ Sentence 538 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 539 =============================

Fig. 


>> Tokens are: 
[Fig, .] 

>> PoS Tags are: 
[('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Fig', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Fig, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 540 =============================

11. 


>> Tokens are: 
[11, .] 

>> PoS Tags are: 
[('11', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('11', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[11, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('11', 'CARDINAL')]


============================ Sentence 541 =============================

Illustration of typical unsupervised learning models: (a) directed generative models; (b) undirected generative models; (c) discriminative models; and (d) autoencoders.  models and autoencoders, and we point to [19] and references therein for a discussion about the remaining models.   


>> Tokens are: 
[Illustration, typical, unsupervised, learning, models, :, (, ), directed, generative, models, ;, (, b, ), undirected, generative, models, ;, (, c, ), discriminative, models, ;, (, d, ), autoencoders, .,  , models, autoencoders, ,, point, [, 19, ], references, discussion, remaining, models, .,  ] 

>> PoS Tags are: 
[('Illustration', 'NOUN'), ('typical', 'ADJ'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('models', 'NOUN'), (':', 'PUNCT'), ('(', 'PUNCT'), (')', 'PUNCT'), ('directed', 'VERB'), ('generative', 'ADJ'), ('models', 'NOUN'), (';', 'PUNCT'), ('(', 'PUNCT'), ('b', 'X'), (')', 'PUNCT'), ('undirected', 'ADJ'), ('generative', 'ADJ'), ('models', 'NOUN'), (';', 'PUNCT'), ('(', 'PUNCT'), ('c', 'NOUN'), (')', 'PUNCT'), ('discriminative', 'NOUN'), ('models', 'NOUN'), (';', 'PUNCT'), ('(', 'PUNCT'), ('d', 'X'), (')', 'PUNCT'), ('autoencoders', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE'), ('models', 'NOUN'), ('autoencoders', 'NOUN'), (',', 'PUNCT'), ('point', 'VERB'), ('[', 'PUNCT'), ('19', 'NUM'), (']', 'PUNCT'), ('references', 'NOUN'), ('discussion', 'NOUN'), ('remaining', 'VERB'), ('models', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Illustration', 'ROOT'), ('typical', 'amod'), ('unsupervised', 'amod'), ('learning', 'compound'), ('models', 'pobj'), (':', 'punct'), ('(', 'punct'), (')', 'punct'), ('directed', 'amod'), ('generative', 'amod'), ('models', 'appos'), (';', 'punct'), ('(', 'punct'), ('b', 'meta'), (')', 'punct'), ('undirected', 'amod'), ('generative', 'amod'), ('models', 'appos'), (';', 'punct'), ('(', 'punct'), ('c', 'nmod'), (')', 'punct'), ('discriminative', 'amod'), ('models', 'conj'), (';', 'punct'), ('(', 'punct'), ('d', 'nmod'), (')', 'punct'), ('autoencoders', 'conj'), ('.', 'punct'), (' ', 'compound'), ('models', 'conj'), ('autoencoders', 'conj'), (',', 'punct'), ('point', 'conj'), ('[', 'punct'), ('19', 'pobj'), (']', 'punct'), ('references', 'conj'), ('discussion', 'pobj'), ('remaining', 'amod'), ('models', 'pobj'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Illustration, typical], [typical, unsupervised], [unsupervised, learning], [learning, models], [models, :], [:, (], [(, )], [), directed], [directed, generative], [generative, models], [models, ;], [;, (], [(, b], [b, )], [), undirected], [undirected, generative], [generative, models], [models, ;], [;, (], [(, c], [c, )], [), discriminative], [discriminative, models], [models, ;], [;, (], [(, d], [d, )], [), autoencoders], [autoencoders, .], [.,  ], [ , models], [models, autoencoders], [autoencoders, ,], [,, point], [point, [], [[, 19], [19, ]], [], references], [references, discussion], [discussion, remaining], [remaining, models], [models, .], [.,  ]]

>> Trigrams: 
[[Illustration, typical, unsupervised], [typical, unsupervised, learning], [unsupervised, learning, models], [learning, models, :], [models, :, (], [:, (, )], [(, ), directed], [), directed, generative], [directed, generative, models], [generative, models, ;], [models, ;, (], [;, (, b], [(, b, )], [b, ), undirected], [), undirected, generative], [undirected, generative, models], [generative, models, ;], [models, ;, (], [;, (, c], [(, c, )], [c, ), discriminative], [), discriminative, models], [discriminative, models, ;], [models, ;, (], [;, (, d], [(, d, )], [d, ), autoencoders], [), autoencoders, .], [autoencoders, .,  ], [.,  , models], [ , models, autoencoders], [models, autoencoders, ,], [autoencoders, ,, point], [,, point, [], [point, [, 19], [[, 19, ]], [19, ], references], [], references, discussion], [references, discussion, remaining], [discussion, remaining, models], [remaining, models, .], [models, .,  ]]

>> Noun Phrases are: 
[Illustration, typical unsupervised learning models, (a) directed generative models, (b) undirected generative models, (c) discriminative models, (d) autoencoders,  models, autoencoders, we, references, a discussion, the remaining models]

>> Named Entities are: 
[('19', 'CARDINAL')]


============================ Sentence 542 =============================

As illustrated in Fig. 


>> Tokens are: 
[illustrated, Fig, .] 

>> PoS Tags are: 
[('illustrated', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('illustrated', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[illustrated, Fig], [Fig, .]]

>> Trigrams: 
[[illustrated, Fig, .]]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 543 =============================

11(a), directed generative models assume that each data point x is caused4 by a hidden variable z. 


>> Tokens are: 
[11(a, ), ,, directed, generative, models, assume, data, point, x, caused4, hidden, variable, z.] 

>> PoS Tags are: 
[('11(a', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('directed', 'VERB'), ('generative', 'ADJ'), ('models', 'NOUN'), ('assume', 'VERB'), ('data', 'NOUN'), ('point', 'NOUN'), ('x', 'PUNCT'), ('caused4', 'ADJ'), ('hidden', 'ADJ'), ('variable', 'NOUN'), ('z.', 'PROPN')] 

>> Dependency Tags are: 
[('11(a', 'nsubj'), (')', 'punct'), (',', 'punct'), ('directed', 'csubj'), ('generative', 'amod'), ('models', 'dobj'), ('assume', 'ROOT'), ('data', 'compound'), ('point', 'nsubj'), ('x', 'punct'), ('caused4', 'attr'), ('hidden', 'amod'), ('variable', 'pobj'), ('z.', 'punct')]

>> Bigrams: 
[[11(a, )], [), ,], [,, directed], [directed, generative], [generative, models], [models, assume], [assume, data], [data, point], [point, x], [x, caused4], [caused4, hidden], [hidden, variable], [variable, z.]]

>> Trigrams: 
[[11(a, ), ,], [), ,, directed], [,, directed, generative], [directed, generative, models], [generative, models, assume], [models, assume, data], [assume, data, point], [data, point, x], [point, x, caused4], [x, caused4, hidden], [caused4, hidden, variable], [hidden, variable, z.]]

>> Noun Phrases are: 
[generative models, each data point, a hidden variable]

>> Named Entities are: 
[('11(a', 'CARDINAL')]


============================ Sentence 544 =============================

This is in the sense that the joint distribution p(x, z|θ) is parameterized as p(x, z|θ) = p(z|θ)p(x|z, θ), where p(z|θ) is the distribution of the hidden cause and p(x|z, θ) is the conditional distribution of the data x given the cause z. 


>> Tokens are: 
[sense, joint, distribution, p(x, ,, z|θ, ), parameterized, p(x, ,, z|θ, ), =, p(z|θ)p(x|z, ,, θ, ), ,, p(z|θ, ), distribution, hidden, cause, p(x|z, ,, θ, ), conditional, distribution, data, x, given, cause, z.] 

>> PoS Tags are: 
[('sense', 'NOUN'), ('joint', 'ADJ'), ('distribution', 'NOUN'), ('p(x', 'PROPN'), (',', 'PUNCT'), ('z|θ', 'PROPN'), (')', 'PUNCT'), ('parameterized', 'VERB'), ('p(x', 'PROPN'), (',', 'PUNCT'), ('z|θ', 'PROPN'), (')', 'PUNCT'), ('=', 'PUNCT'), ('p(z|θ)p(x|z', 'NOUN'), (',', 'PUNCT'), ('θ', 'X'), (')', 'PUNCT'), (',', 'PUNCT'), ('p(z|θ', 'PROPN'), (')', 'PUNCT'), ('distribution', 'NOUN'), ('hidden', 'VERB'), ('cause', 'NOUN'), ('p(x|z', 'NOUN'), (',', 'PUNCT'), ('θ', 'X'), (')', 'PUNCT'), ('conditional', 'ADJ'), ('distribution', 'NOUN'), ('data', 'NOUN'), ('x', 'PUNCT'), ('given', 'VERB'), ('cause', 'NOUN'), ('z.', 'PROPN')] 

>> Dependency Tags are: 
[('sense', 'pobj'), ('joint', 'amod'), ('distribution', 'nsubjpass'), ('p(x', 'appos'), (',', 'punct'), ('z|θ', 'appos'), (')', 'punct'), ('parameterized', 'acl'), ('p(x', 'pobj'), (',', 'punct'), ('z|θ', 'npadvmod'), (')', 'punct'), ('=', 'punct'), ('p(z|θ)p(x|z', 'nsubj'), (',', 'punct'), ('θ', 'conj'), (')', 'punct'), (',', 'punct'), ('p(z|θ', 'relcl'), (')', 'punct'), ('distribution', 'attr'), ('hidden', 'amod'), ('cause', 'pobj'), ('p(x|z', 'conj'), (',', 'punct'), ('θ', 'prep'), (')', 'punct'), ('conditional', 'amod'), ('distribution', 'attr'), ('data', 'pobj'), ('x', 'punct'), ('given', 'prep'), ('cause', 'pobj'), ('z.', 'punct')]

>> Bigrams: 
[[sense, joint], [joint, distribution], [distribution, p(x], [p(x, ,], [,, z|θ], [z|θ, )], [), parameterized], [parameterized, p(x], [p(x, ,], [,, z|θ], [z|θ, )], [), =], [=, p(z|θ)p(x|z], [p(z|θ)p(x|z, ,], [,, θ], [θ, )], [), ,], [,, p(z|θ], [p(z|θ, )], [), distribution], [distribution, hidden], [hidden, cause], [cause, p(x|z], [p(x|z, ,], [,, θ], [θ, )], [), conditional], [conditional, distribution], [distribution, data], [data, x], [x, given], [given, cause], [cause, z.]]

>> Trigrams: 
[[sense, joint, distribution], [joint, distribution, p(x], [distribution, p(x, ,], [p(x, ,, z|θ], [,, z|θ, )], [z|θ, ), parameterized], [), parameterized, p(x], [parameterized, p(x, ,], [p(x, ,, z|θ], [,, z|θ, )], [z|θ, ), =], [), =, p(z|θ)p(x|z], [=, p(z|θ)p(x|z, ,], [p(z|θ)p(x|z, ,, θ], [,, θ, )], [θ, ), ,], [), ,, p(z|θ], [,, p(z|θ, )], [p(z|θ, ), distribution], [), distribution, hidden], [distribution, hidden, cause], [hidden, cause, p(x|z], [cause, p(x|z, ,], [p(x|z, ,, θ], [,, θ, )], [θ, ), conditional], [), conditional, distribution], [conditional, distribution, data], [distribution, data, x], [data, x, given], [x, given, cause], [given, cause, z.]]

>> Noun Phrases are: 
[the sense, the joint distribution, p(x, z|θ, p(x, = p(z|θ)p(x|z, the distribution, the hidden cause, p(x|z, the conditional distribution, the data, the cause]

>> Named Entities are: 
[('p(x', 'ORG'), ('z|θ', 'GPE'), ('p(x', 'ORG'), ('z|θ', 'GPE'), ('p(z|θ', 'CARDINAL'), ('z.', 'PERSON')]


============================ Sentence 545 =============================

As a result, under a directed generative model, the distribution of an observation x = x can be written as  p(x|θ) = ∑ 


>> Tokens are: 
[result, ,, directed, generative, model, ,, distribution, observation, x, =, x, written,  , p(x|θ, ), =, ∑] 

>> PoS Tags are: 
[('result', 'NOUN'), (',', 'PUNCT'), ('directed', 'VERB'), ('generative', 'ADJ'), ('model', 'NOUN'), (',', 'PUNCT'), ('distribution', 'NOUN'), ('observation', 'NOUN'), ('x', 'SYM'), ('=', 'PUNCT'), ('x', 'SYM'), ('written', 'VERB'), (' ', 'SPACE'), ('p(x|θ', 'ADV'), (')', 'PUNCT'), ('=', 'PUNCT'), ('∑', 'PUNCT')] 

>> Dependency Tags are: 
[('result', 'pobj'), (',', 'punct'), ('directed', 'amod'), ('generative', 'amod'), ('model', 'pobj'), (',', 'punct'), ('distribution', 'nsubjpass'), ('observation', 'pobj'), ('x', 'punct'), ('=', 'nmod'), ('x', 'punct'), ('written', 'ROOT'), (' ', 'pobj'), ('p(x|θ', 'advmod'), (')', 'punct'), ('=', 'punct'), ('∑', 'punct')]

>> Bigrams: 
[[result, ,], [,, directed], [directed, generative], [generative, model], [model, ,], [,, distribution], [distribution, observation], [observation, x], [x, =], [=, x], [x, written], [written,  ], [ , p(x|θ], [p(x|θ, )], [), =], [=, ∑]]

>> Trigrams: 
[[result, ,, directed], [,, directed, generative], [directed, generative, model], [generative, model, ,], [model, ,, distribution], [,, distribution, observation], [distribution, observation, x], [observation, x, =], [x, =, x], [=, x, written], [x, written,  ], [written,  , p(x|θ], [ , p(x|θ, )], [p(x|θ, ), =], [), =, ∑]]

>> Noun Phrases are: 
[a result, a directed generative model, the distribution, an observation]

>> Named Entities are: 
[]


============================ Sentence 546 =============================

z  p(z|θ)p(x|z, θ) = Ez∼p(z|θ)[ln p(x|z, θ)],  (13) where the sum in the second term should be replaced by an integration for continuous hidden variables, and the last equality expresses the marginalization over z as an expectation. 


>> Tokens are: 
[z,  , p(z|θ)p(x|z, ,, θ, ), =, Ez∼p(z|θ)[ln, p(x|z, ,, θ, ), ], ,,  , (, 13, ), sum, second, term, replaced, integration, continuous, hidden, variables, ,, equality, expresses, marginalization, z, expectation, .] 

>> PoS Tags are: 
[('z', 'X'), (' ', 'SPACE'), ('p(z|θ)p(x|z', 'NOUN'), (',', 'PUNCT'), ('θ', 'X'), (')', 'PUNCT'), ('=', 'SYM'), ('Ez∼p(z|θ)[ln', 'VERB'), ('p(x|z', 'NOUN'), (',', 'PUNCT'), ('θ', 'X'), (')', 'PUNCT'), (']', 'PUNCT'), (',', 'PUNCT'), (' ', 'SPACE'), ('(', 'PUNCT'), ('13', 'NUM'), (')', 'PUNCT'), ('sum', 'NOUN'), ('second', 'ADJ'), ('term', 'NOUN'), ('replaced', 'VERB'), ('integration', 'NOUN'), ('continuous', 'ADJ'), ('hidden', 'VERB'), ('variables', 'NOUN'), (',', 'PUNCT'), ('equality', 'NOUN'), ('expresses', 'VERB'), ('marginalization', 'NOUN'), ('z', 'PROPN'), ('expectation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('z', 'det'), (' ', 'nsubj'), ('p(z|θ)p(x|z', 'nmod'), (',', 'punct'), ('θ', 'nmod'), (')', 'punct'), ('=', 'dep'), ('Ez∼p(z|θ)[ln', 'nsubj'), ('p(x|z', 'dobj'), (',', 'punct'), ('θ', 'meta'), (')', 'punct'), (']', 'punct'), (',', 'punct'), (' ', 'nsubj'), ('(', 'punct'), ('13', 'appos'), (')', 'punct'), ('sum', 'nsubjpass'), ('second', 'amod'), ('term', 'pobj'), ('replaced', 'relcl'), ('integration', 'pobj'), ('continuous', 'amod'), ('hidden', 'amod'), ('variables', 'pobj'), (',', 'punct'), ('equality', 'nsubj'), ('expresses', 'ROOT'), ('marginalization', 'dobj'), ('z', 'pobj'), ('expectation', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[z,  ], [ , p(z|θ)p(x|z], [p(z|θ)p(x|z, ,], [,, θ], [θ, )], [), =], [=, Ez∼p(z|θ)[ln], [Ez∼p(z|θ)[ln, p(x|z], [p(x|z, ,], [,, θ], [θ, )], [), ]], [], ,], [,,  ], [ , (], [(, 13], [13, )], [), sum], [sum, second], [second, term], [term, replaced], [replaced, integration], [integration, continuous], [continuous, hidden], [hidden, variables], [variables, ,], [,, equality], [equality, expresses], [expresses, marginalization], [marginalization, z], [z, expectation], [expectation, .]]

>> Trigrams: 
[[z,  , p(z|θ)p(x|z], [ , p(z|θ)p(x|z, ,], [p(z|θ)p(x|z, ,, θ], [,, θ, )], [θ, ), =], [), =, Ez∼p(z|θ)[ln], [=, Ez∼p(z|θ)[ln, p(x|z], [Ez∼p(z|θ)[ln, p(x|z, ,], [p(x|z, ,, θ], [,, θ, )], [θ, ), ]], [), ], ,], [], ,,  ], [,,  , (], [ , (, 13], [(, 13, )], [13, ), sum], [), sum, second], [sum, second, term], [second, term, replaced], [term, replaced, integration], [replaced, integration, continuous], [integration, continuous, hidden], [continuous, hidden, variables], [hidden, variables, ,], [variables, ,, equality], [,, equality, expresses], [equality, expresses, marginalization], [expresses, marginalization, z], [marginalization, z, expectation], [z, expectation, .]]

>> Noun Phrases are: 
[p(x|z, the sum, the second term, an integration, continuous hidden variables, the last equality, the marginalization, z, an expectation]

>> Named Entities are: 
[('13', 'CARDINAL'), ('second', 'ORDINAL')]


============================ Sentence 547 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 548 =============================

As an example, for the problem of document clus- tering, variable x represents a document in the training set and z is interpreted as a latent topic that “causes” the generation of the document. 


>> Tokens are: 
[example, ,, problem, document, clus-, tering, ,, variable, x, represents, document, training, set, z, interpreted, latent, topic, “, causes, ”, generation, document, .] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), ('problem', 'NOUN'), ('document', 'NOUN'), ('clus-', 'NOUN'), ('tering', 'NOUN'), (',', 'PUNCT'), ('variable', 'NOUN'), ('x', 'SYM'), ('represents', 'VERB'), ('document', 'NOUN'), ('training', 'NOUN'), ('set', 'NOUN'), ('z', 'NOUN'), ('interpreted', 'VERB'), ('latent', 'NOUN'), ('topic', 'NOUN'), ('“', 'PUNCT'), ('causes', 'VERB'), ('”', 'PUNCT'), ('generation', 'NOUN'), ('document', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct'), ('problem', 'pobj'), ('document', 'compound'), ('clus-', 'compound'), ('tering', 'pobj'), (',', 'punct'), ('variable', 'appos'), ('x', 'punct'), ('represents', 'ROOT'), ('document', 'dobj'), ('training', 'compound'), ('set', 'pobj'), ('z', 'nsubjpass'), ('interpreted', 'conj'), ('latent', 'compound'), ('topic', 'pobj'), ('“', 'punct'), ('causes', 'relcl'), ('”', 'punct'), ('generation', 'dobj'), ('document', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[example, ,], [,, problem], [problem, document], [document, clus-], [clus-, tering], [tering, ,], [,, variable], [variable, x], [x, represents], [represents, document], [document, training], [training, set], [set, z], [z, interpreted], [interpreted, latent], [latent, topic], [topic, “], [“, causes], [causes, ”], [”, generation], [generation, document], [document, .]]

>> Trigrams: 
[[example, ,, problem], [,, problem, document], [problem, document, clus-], [document, clus-, tering], [clus-, tering, ,], [tering, ,, variable], [,, variable, x], [variable, x, represents], [x, represents, document], [represents, document, training], [document, training, set], [training, set, z], [set, z, interpreted], [z, interpreted, latent], [interpreted, latent, topic], [latent, topic, “], [topic, “, causes], [“, causes, ”], [causes, ”, generation], [”, generation, document], [generation, document, .]]

>> Noun Phrases are: 
[an example, the problem, document clus- tering, variable, a document, the training set, z, a latent topic, the generation, the document]

>> Named Entities are: 
[]


============================ Sentence 549 =============================

Model selection requires the specification of a parameterized distribution p(z|θ) over the topics, e.g.--.-, a categorical distribution with parameters equals to the probability of each possible value, and the distribution p(x|z, θ) of the document given a topic. 


>> Tokens are: 
[Model, selection, requires, specification, parameterized, distribution, p(z|θ, ), topics, ,, e.g.--.-, ,, categorical, distribution, parameters, equals, probability, possible, value, ,, distribution, p(x|z, ,, θ, ), document, given, topic, .] 

>> PoS Tags are: 
[('Model', 'NOUN'), ('selection', 'NOUN'), ('requires', 'VERB'), ('specification', 'NOUN'), ('parameterized', 'ADJ'), ('distribution', 'NOUN'), ('p(z|θ', 'NUM'), (')', 'PUNCT'), ('topics', 'NOUN'), (',', 'PUNCT'), ('e.g.--.-', 'X'), (',', 'PUNCT'), ('categorical', 'ADJ'), ('distribution', 'NOUN'), ('parameters', 'NOUN'), ('equals', 'VERB'), ('probability', 'NOUN'), ('possible', 'ADJ'), ('value', 'NOUN'), (',', 'PUNCT'), ('distribution', 'NOUN'), ('p(x|z', 'NOUN'), (',', 'PUNCT'), ('θ', 'X'), (')', 'PUNCT'), ('document', 'NOUN'), ('given', 'VERB'), ('topic', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Model', 'compound'), ('selection', 'nsubj'), ('requires', 'ROOT'), ('specification', 'dobj'), ('parameterized', 'amod'), ('distribution', 'pobj'), ('p(z|θ', 'appos'), (')', 'punct'), ('topics', 'pobj'), (',', 'punct'), ('e.g.--.-', 'dep'), (',', 'punct'), ('categorical', 'amod'), ('distribution', 'nsubj'), ('parameters', 'pobj'), ('equals', 'ccomp'), ('probability', 'pobj'), ('possible', 'amod'), ('value', 'pobj'), (',', 'punct'), ('distribution', 'compound'), ('p(x|z', 'nsubj'), (',', 'punct'), ('θ', 'appos'), (')', 'punct'), ('document', 'pobj'), ('given', 'advcl'), ('topic', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Model, selection], [selection, requires], [requires, specification], [specification, parameterized], [parameterized, distribution], [distribution, p(z|θ], [p(z|θ, )], [), topics], [topics, ,], [,, e.g.--.-], [e.g.--.-, ,], [,, categorical], [categorical, distribution], [distribution, parameters], [parameters, equals], [equals, probability], [probability, possible], [possible, value], [value, ,], [,, distribution], [distribution, p(x|z], [p(x|z, ,], [,, θ], [θ, )], [), document], [document, given], [given, topic], [topic, .]]

>> Trigrams: 
[[Model, selection, requires], [selection, requires, specification], [requires, specification, parameterized], [specification, parameterized, distribution], [parameterized, distribution, p(z|θ], [distribution, p(z|θ, )], [p(z|θ, ), topics], [), topics, ,], [topics, ,, e.g.--.-], [,, e.g.--.-, ,], [e.g.--.-, ,, categorical], [,, categorical, distribution], [categorical, distribution, parameters], [distribution, parameters, equals], [parameters, equals, probability], [equals, probability, possible], [probability, possible, value], [possible, value, ,], [value, ,, distribution], [,, distribution, p(x|z], [distribution, p(x|z, ,], [p(x|z, ,, θ], [,, θ, )], [θ, ), document], [), document, given], [document, given, topic], [given, topic, .]]

>> Noun Phrases are: 
[Model selection, the specification, a parameterized distribution, the topics, a categorical distribution, parameters, the probability, each possible value, the distribution p(x|z, the document, a topic]

>> Named Entities are: 
[('p(z|θ', 'CARDINAL')]


============================ Sentence 550 =============================

Basic representatives of directed generative models include mixture of Gaussians and likelihood-free models [19], [58]. 


>> Tokens are: 
[Basic, representatives, directed, generative, models, include, mixture, Gaussians, likelihood, -, free, models, [, 19, ], ,, [, 58, ], .] 

>> PoS Tags are: 
[('Basic', 'ADJ'), ('representatives', 'NOUN'), ('directed', 'VERB'), ('generative', 'ADJ'), ('models', 'NOUN'), ('include', 'VERB'), ('mixture', 'NOUN'), ('Gaussians', 'PROPN'), ('likelihood', 'NOUN'), ('-', 'PUNCT'), ('free', 'ADJ'), ('models', 'NOUN'), ('[', 'PUNCT'), ('19', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('[', 'PUNCT'), ('58', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Basic', 'amod'), ('representatives', 'nsubj'), ('directed', 'amod'), ('generative', 'amod'), ('models', 'pobj'), ('include', 'ROOT'), ('mixture', 'dobj'), ('Gaussians', 'pobj'), ('likelihood', 'npadvmod'), ('-', 'punct'), ('free', 'amod'), ('models', 'conj'), ('[', 'punct'), ('19', 'appos'), (']', 'punct'), (',', 'punct'), ('[', 'dep'), ('58', 'dobj'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Basic, representatives], [representatives, directed], [directed, generative], [generative, models], [models, include], [include, mixture], [mixture, Gaussians], [Gaussians, likelihood], [likelihood, -], [-, free], [free, models], [models, [], [[, 19], [19, ]], [], ,], [,, [], [[, 58], [58, ]], [], .]]

>> Trigrams: 
[[Basic, representatives, directed], [representatives, directed, generative], [directed, generative, models], [generative, models, include], [models, include, mixture], [include, mixture, Gaussians], [mixture, Gaussians, likelihood], [Gaussians, likelihood, -], [likelihood, -, free], [-, free, models], [free, models, [], [models, [, 19], [[, 19, ]], [19, ], ,], [], ,, [], [,, [, 58], [[, 58, ]], [58, ], .]]

>> Noun Phrases are: 
[Basic representatives, directed generative models, mixture, Gaussians, likelihood-free models]

>> Named Entities are: 
[('Gaussians', 'NORP'), ('19', 'CARDINAL')]


============================ Sentence 551 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 552 =============================

4The use of the term “cause” is meant to be taken in an intuitive, rather than formal, way. 


>> Tokens are: 
[4The, use, term, “, cause, ”, meant, taken, intuitive, ,, formal, ,, way, .] 

>> PoS Tags are: 
[('4The', 'NUM'), ('use', 'NOUN'), ('term', 'NOUN'), ('“', 'PUNCT'), ('cause', 'NOUN'), ('”', 'PUNCT'), ('meant', 'VERB'), ('taken', 'VERB'), ('intuitive', 'ADJ'), (',', 'PUNCT'), ('formal', 'ADJ'), (',', 'PUNCT'), ('way', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('4The', 'nummod'), ('use', 'nsubjpass'), ('term', 'nmod'), ('“', 'punct'), ('cause', 'pobj'), ('”', 'punct'), ('meant', 'ROOT'), ('taken', 'xcomp'), ('intuitive', 'pobj'), (',', 'punct'), ('formal', 'conj'), (',', 'punct'), ('way', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[4The, use], [use, term], [term, “], [“, cause], [cause, ”], [”, meant], [meant, taken], [taken, intuitive], [intuitive, ,], [,, formal], [formal, ,], [,, way], [way, .]]

>> Trigrams: 
[[4The, use, term], [use, term, “], [term, “, cause], [“, cause, ”], [cause, ”, meant], [”, meant, taken], [meant, taken, intuitive], [taken, intuitive, ,], [intuitive, ,, formal], [,, formal, ,], [formal, ,, way], [,, way, .]]

>> Noun Phrases are: 
[4The use, the term “cause]

>> Named Entities are: 
[('4The', 'CARDINAL')]


============================ Sentence 553 =============================

For a discussion on the study of causality, we refer to [8]. 


>> Tokens are: 
[discussion, study, causality, ,, refer, [, 8, ], .] 

>> PoS Tags are: 
[('discussion', 'NOUN'), ('study', 'NOUN'), ('causality', 'NOUN'), (',', 'PUNCT'), ('refer', 'VERB'), ('[', 'PUNCT'), ('8', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('discussion', 'pobj'), ('study', 'pobj'), ('causality', 'pobj'), (',', 'punct'), ('refer', 'ROOT'), ('[', 'punct'), ('8', 'pobj'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[discussion, study], [study, causality], [causality, ,], [,, refer], [refer, [], [[, 8], [8, ]], [], .]]

>> Trigrams: 
[[discussion, study, causality], [study, causality, ,], [causality, ,, refer], [,, refer, [], [refer, [, 8], [[, 8, ]], [8, ], .]]

>> Noun Phrases are: 
[a discussion, the study, causality, we]

>> Named Entities are: 
[('8', 'CARDINAL')]


============================ Sentence 554 =============================

 13    As represented in Fig. 


>> Tokens are: 
[ , 13,    , represented, Fig, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('13', 'NUM'), ('   ', 'SPACE'), ('represented', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('13', 'nummod'), ('   ', 'dobj'), ('represented', 'advcl'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , 13], [13,    ], [   , represented], [represented, Fig], [Fig, .]]

>> Trigrams: 
[[ , 13,    ], [13,    , represented], [   , represented, Fig], [represented, Fig, .]]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('13', 'CARDINAL'), ('Fig', 'PERSON')]


============================ Sentence 555 =============================

11(d), autoencoders model encoding from data x to hidden variables z, as well as de- coding from hidden variables back to data. 


>> Tokens are: 
[11(d, ), ,, autoencoders, model, encoding, data, x, hidden, variables, z, ,, de-, coding, hidden, variables, data, .] 

>> PoS Tags are: 
[('11(d', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('autoencoders', 'NOUN'), ('model', 'VERB'), ('encoding', 'VERB'), ('data', 'NOUN'), ('x', 'PUNCT'), ('hidden', 'ADJ'), ('variables', 'NOUN'), ('z', 'NOUN'), (',', 'PUNCT'), ('de-', 'PROPN'), ('coding', 'VERB'), ('hidden', 'ADJ'), ('variables', 'NOUN'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('11(d', 'meta'), (')', 'punct'), (',', 'punct'), ('autoencoders', 'nsubj'), ('model', 'ROOT'), ('encoding', 'dobj'), ('data', 'pobj'), ('x', 'punct'), ('hidden', 'amod'), ('variables', 'pobj'), ('z', 'appos'), (',', 'punct'), ('de-', 'conj'), ('coding', 'acl'), ('hidden', 'amod'), ('variables', 'pobj'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[11(d, )], [), ,], [,, autoencoders], [autoencoders, model], [model, encoding], [encoding, data], [data, x], [x, hidden], [hidden, variables], [variables, z], [z, ,], [,, de-], [de-, coding], [coding, hidden], [hidden, variables], [variables, data], [data, .]]

>> Trigrams: 
[[11(d, ), ,], [), ,, autoencoders], [,, autoencoders, model], [autoencoders, model, encoding], [model, encoding, data], [encoding, data, x], [data, x, hidden], [x, hidden, variables], [hidden, variables, z], [variables, z, ,], [z, ,, de-], [,, de-, coding], [de-, coding, hidden], [coding, hidden, variables], [hidden, variables, data], [variables, data, .]]

>> Noun Phrases are: 
[autoencoders, data, hidden variables, z, de-, hidden variables, data]

>> Named Entities are: 
[('11(d', 'DATE')]


============================ Sentence 556 =============================

Accordingly, model selection for autoencoders requires the specifica- tion of a parameterized family of encoders p(z|x, θ) and decoders p(x|z, θ). 


>> Tokens are: 
[Accordingly, ,, model, selection, autoencoders, requires, specifica-, tion, parameterized, family, encoders, p(z|x, ,, θ, ), decoders, p(x|z, ,, θ, ), .] 

>> PoS Tags are: 
[('Accordingly', 'ADV'), (',', 'PUNCT'), ('model', 'NOUN'), ('selection', 'NOUN'), ('autoencoders', 'NOUN'), ('requires', 'VERB'), ('specifica-', 'NOUN'), ('tion', 'NOUN'), ('parameterized', 'ADJ'), ('family', 'NOUN'), ('encoders', 'NOUN'), ('p(z|x', 'X'), (',', 'PUNCT'), ('θ', 'X'), (')', 'PUNCT'), ('decoders', 'NOUN'), ('p(x|z', 'NOUN'), (',', 'PUNCT'), ('θ', 'X'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Accordingly', 'advmod'), (',', 'punct'), ('model', 'compound'), ('selection', 'nsubj'), ('autoencoders', 'pobj'), ('requires', 'ROOT'), ('specifica-', 'compound'), ('tion', 'dobj'), ('parameterized', 'amod'), ('family', 'pobj'), ('encoders', 'pobj'), ('p(z|x', 'dep'), (',', 'punct'), ('θ', 'dep'), (')', 'punct'), ('decoders', 'conj'), ('p(x|z', 'nummod'), (',', 'punct'), ('θ', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Accordingly, ,], [,, model], [model, selection], [selection, autoencoders], [autoencoders, requires], [requires, specifica-], [specifica-, tion], [tion, parameterized], [parameterized, family], [family, encoders], [encoders, p(z|x], [p(z|x, ,], [,, θ], [θ, )], [), decoders], [decoders, p(x|z], [p(x|z, ,], [,, θ], [θ, )], [), .]]

>> Trigrams: 
[[Accordingly, ,, model], [,, model, selection], [model, selection, autoencoders], [selection, autoencoders, requires], [autoencoders, requires, specifica-], [requires, specifica-, tion], [specifica-, tion, parameterized], [tion, parameterized, family], [parameterized, family, encoders], [family, encoders, p(z|x], [encoders, p(z|x, ,], [p(z|x, ,, θ], [,, θ, )], [θ, ), decoders], [), decoders, p(x|z], [decoders, p(x|z, ,], [p(x|z, ,, θ], [,, θ, )], [θ, ), .]]

>> Noun Phrases are: 
[model selection, autoencoders, the specifica- tion, a parameterized family, encoders, decoders]

>> Named Entities are: 
[]


============================ Sentence 557 =============================

As an example, autoencoders can be used to learn how to compress an input signal x into a representation z in a smaller space so as to ensure that x can be recovered from z within an admissible level of distortion. 


>> Tokens are: 
[example, ,, autoencoders, learn, compress, input, signal, x, representation, z, smaller, space, ensure, x, recovered, z, admissible, level, distortion, .] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), ('autoencoders', 'NOUN'), ('learn', 'VERB'), ('compress', 'VERB'), ('input', 'NOUN'), ('signal', 'NOUN'), ('x', 'PUNCT'), ('representation', 'NOUN'), ('z', 'NOUN'), ('smaller', 'ADJ'), ('space', 'NOUN'), ('ensure', 'VERB'), ('x', 'X'), ('recovered', 'VERB'), ('z', 'DET'), ('admissible', 'ADJ'), ('level', 'NOUN'), ('distortion', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct'), ('autoencoders', 'nsubjpass'), ('learn', 'xcomp'), ('compress', 'xcomp'), ('input', 'compound'), ('signal', 'dobj'), ('x', 'punct'), ('representation', 'pobj'), ('z', 'dobj'), ('smaller', 'amod'), ('space', 'pobj'), ('ensure', 'advcl'), ('x', 'nsubjpass'), ('recovered', 'ccomp'), ('z', 'pobj'), ('admissible', 'amod'), ('level', 'pobj'), ('distortion', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[example, ,], [,, autoencoders], [autoencoders, learn], [learn, compress], [compress, input], [input, signal], [signal, x], [x, representation], [representation, z], [z, smaller], [smaller, space], [space, ensure], [ensure, x], [x, recovered], [recovered, z], [z, admissible], [admissible, level], [level, distortion], [distortion, .]]

>> Trigrams: 
[[example, ,, autoencoders], [,, autoencoders, learn], [autoencoders, learn, compress], [learn, compress, input], [compress, input, signal], [input, signal, x], [signal, x, representation], [x, representation, z], [representation, z, smaller], [z, smaller, space], [smaller, space, ensure], [space, ensure, x], [ensure, x, recovered], [x, recovered, z], [recovered, z, admissible], [z, admissible, level], [admissible, level, distortion], [level, distortion, .]]

>> Noun Phrases are: 
[an example, autoencoders, an input signal, a representation, z, a smaller space, an admissible level, distortion]

>> Named Entities are: 
[]


============================ Sentence 558 =============================

Representatives of autoencoders, which cor- respond to specific choices for the encoder and decoder families of distributions, include Principal Component Analysis (PCA), dictionary learning, and neural network- based autoencoders [19], 


>> Tokens are: 
[Representatives, autoencoders, ,, cor-, respond, specific, choices, encoder, decoder, families, distributions, ,, include, Principal, Component, Analysis, (, PCA, ), ,, dictionary, learning, ,, neural, network-, based, autoencoders, [, 19, ], ,] 

>> PoS Tags are: 
[('Representatives', 'NOUN'), ('autoencoders', 'NOUN'), (',', 'PUNCT'), ('cor-', 'PROPN'), ('respond', 'VERB'), ('specific', 'ADJ'), ('choices', 'NOUN'), ('encoder', 'NOUN'), ('decoder', 'NOUN'), ('families', 'NOUN'), ('distributions', 'NOUN'), (',', 'PUNCT'), ('include', 'VERB'), ('Principal', 'PROPN'), ('Component', 'PROPN'), ('Analysis', 'PROPN'), ('(', 'PUNCT'), ('PCA', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('dictionary', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('neural', 'ADJ'), ('network-', 'ADV'), ('based', 'VERB'), ('autoencoders', 'NOUN'), ('[', 'PUNCT'), ('19', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT')] 

>> Dependency Tags are: 
[('Representatives', 'nsubj'), ('autoencoders', 'pobj'), (',', 'punct'), ('cor-', 'nsubj'), ('respond', 'relcl'), ('specific', 'amod'), ('choices', 'pobj'), ('encoder', 'pobj'), ('decoder', 'compound'), ('families', 'conj'), ('distributions', 'pobj'), (',', 'punct'), ('include', 'ROOT'), ('Principal', 'compound'), ('Component', 'compound'), ('Analysis', 'dobj'), ('(', 'punct'), ('PCA', 'appos'), (')', 'punct'), (',', 'punct'), ('dictionary', 'amod'), ('learning', 'conj'), (',', 'punct'), ('neural', 'npadvmod'), ('network-', 'npadvmod'), ('based', 'amod'), ('autoencoders', 'conj'), ('[', 'punct'), ('19', 'appos'), (']', 'punct'), (',', 'punct')]

>> Bigrams: 
[[Representatives, autoencoders], [autoencoders, ,], [,, cor-], [cor-, respond], [respond, specific], [specific, choices], [choices, encoder], [encoder, decoder], [decoder, families], [families, distributions], [distributions, ,], [,, include], [include, Principal], [Principal, Component], [Component, Analysis], [Analysis, (], [(, PCA], [PCA, )], [), ,], [,, dictionary], [dictionary, learning], [learning, ,], [,, neural], [neural, network-], [network-, based], [based, autoencoders], [autoencoders, [], [[, 19], [19, ]], [], ,]]

>> Trigrams: 
[[Representatives, autoencoders, ,], [autoencoders, ,, cor-], [,, cor-, respond], [cor-, respond, specific], [respond, specific, choices], [specific, choices, encoder], [choices, encoder, decoder], [encoder, decoder, families], [decoder, families, distributions], [families, distributions, ,], [distributions, ,, include], [,, include, Principal], [include, Principal, Component], [Principal, Component, Analysis], [Component, Analysis, (], [Analysis, (, PCA], [(, PCA, )], [PCA, ), ,], [), ,, dictionary], [,, dictionary, learning], [dictionary, learning, ,], [learning, ,, neural], [,, neural, network-], [neural, network-, based], [network-, based, autoencoders], [based, autoencoders, [], [autoencoders, [, 19], [[, 19, ]], [19, ], ,]]

>> Noun Phrases are: 
[Representatives, autoencoders, cor-, specific choices, the encoder, decoder families, distributions, Principal Component Analysis, PCA, dictionary learning, neural network- based autoencoders]

>> Named Entities are: 
[('Principal Component Analysis', 'ORG'), ('PCA', 'ORG'), ('19', 'CARDINAL')]


============================ Sentence 559 =============================

[57], [58]. 


>> Tokens are: 
[[, 57, ], ,, [, 58, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('57', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('[', 'PUNCT'), ('58', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('57', 'ROOT'), (']', 'punct'), (',', 'punct'), ('[', 'punct'), ('58', 'dep'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 57], [57, ]], [], ,], [,, [], [[, 58], [58, ]], [], .]]

>> Trigrams: 
[[[, 57, ]], [57, ], ,], [], ,, [], [,, [, 58], [[, 58, ]], [58, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('57', 'CARDINAL')]


============================ Sentence 560 =============================

 C. Learning   


>> Tokens are: 
[ , C., Learning,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('C.', 'PROPN'), ('Learning', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('C.', 'compound'), ('Learning', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[ , C.], [C., Learning], [Learning,  ]]

>> Trigrams: 
[[ , C., Learning], [C., Learning,  ]]

>> Noun Phrases are: 
[ C. Learning]

>> Named Entities are: 
[]


============================ Sentence 561 =============================

We now discuss learning, to be carried out as Step 2. 


>> Tokens are: 
[discuss, learning, ,, carried, Step, 2, .] 

>> PoS Tags are: 
[('discuss', 'VERB'), ('learning', 'NOUN'), (',', 'PUNCT'), ('carried', 'VERB'), ('Step', 'PROPN'), ('2', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('discuss', 'ROOT'), ('learning', 'dobj'), (',', 'punct'), ('carried', 'xcomp'), ('Step', 'pobj'), ('2', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[discuss, learning], [learning, ,], [,, carried], [carried, Step], [Step, 2], [2, .]]

>> Trigrams: 
[[discuss, learning, ,], [learning, ,, carried], [,, carried, Step], [carried, Step, 2], [Step, 2, .]]

>> Noun Phrases are: 
[We, learning, Step]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 562 =============================

For brevity, we focus on directed generative models and refer to [19] and references therein for a treatment of learning for the other models in Fig. 


>> Tokens are: 
[brevity, ,, focus, directed, generative, models, refer, [, 19, ], references, treatment, learning, models, Fig, .] 

>> PoS Tags are: 
[('brevity', 'NOUN'), (',', 'PUNCT'), ('focus', 'VERB'), ('directed', 'VERB'), ('generative', 'ADJ'), ('models', 'NOUN'), ('refer', 'VERB'), ('[', 'PUNCT'), ('19', 'NUM'), (']', 'PUNCT'), ('references', 'NOUN'), ('treatment', 'NOUN'), ('learning', 'VERB'), ('models', 'NOUN'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('brevity', 'pobj'), (',', 'punct'), ('focus', 'ROOT'), ('directed', 'amod'), ('generative', 'amod'), ('models', 'pobj'), ('refer', 'conj'), ('[', 'punct'), ('19', 'pobj'), (']', 'punct'), ('references', 'conj'), ('treatment', 'pobj'), ('learning', 'pcomp'), ('models', 'pobj'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[brevity, ,], [,, focus], [focus, directed], [directed, generative], [generative, models], [models, refer], [refer, [], [[, 19], [19, ]], [], references], [references, treatment], [treatment, learning], [learning, models], [models, Fig], [Fig, .]]

>> Trigrams: 
[[brevity, ,, focus], [,, focus, directed], [focus, directed, generative], [directed, generative, models], [generative, models, refer], [models, refer, [], [refer, [, 19], [[, 19, ]], [19, ], references], [], references, treatment], [references, treatment, learning], [treatment, learning, models], [learning, models, Fig], [models, Fig, .]]

>> Noun Phrases are: 
[brevity, we, directed generative models, references, a treatment, the other models, Fig]

>> Named Entities are: 
[('19', 'CARDINAL'), ('Fig', 'PERSON')]


============================ Sentence 563 =============================

11. 


>> Tokens are: 
[11, .] 

>> PoS Tags are: 
[('11', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('11', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[11, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('11', 'CARDINAL')]


============================ Sentence 564 =============================

In this regard, we note that the problem of training autoencoders is akin to supervised learning in the sense that autoencoders specify the desired output for each input in the training set. 


>> Tokens are: 
[regard, ,, note, problem, training, autoencoders, akin, supervised, learning, sense, autoencoders, specify, desired, output, input, training, set, .] 

>> PoS Tags are: 
[('regard', 'NOUN'), (',', 'PUNCT'), ('note', 'VERB'), ('problem', 'NOUN'), ('training', 'NOUN'), ('autoencoders', 'NOUN'), ('akin', 'ADJ'), ('supervised', 'ADJ'), ('learning', 'NOUN'), ('sense', 'NOUN'), ('autoencoders', 'NOUN'), ('specify', 'VERB'), ('desired', 'VERB'), ('output', 'NOUN'), ('input', 'NOUN'), ('training', 'NOUN'), ('set', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('regard', 'pobj'), (',', 'punct'), ('note', 'ROOT'), ('problem', 'nsubj'), ('training', 'compound'), ('autoencoders', 'pobj'), ('akin', 'acomp'), ('supervised', 'amod'), ('learning', 'pobj'), ('sense', 'pobj'), ('autoencoders', 'nsubj'), ('specify', 'acl'), ('desired', 'amod'), ('output', 'dobj'), ('input', 'pobj'), ('training', 'compound'), ('set', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[regard, ,], [,, note], [note, problem], [problem, training], [training, autoencoders], [autoencoders, akin], [akin, supervised], [supervised, learning], [learning, sense], [sense, autoencoders], [autoencoders, specify], [specify, desired], [desired, output], [output, input], [input, training], [training, set], [set, .]]

>> Trigrams: 
[[regard, ,, note], [,, note, problem], [note, problem, training], [problem, training, autoencoders], [training, autoencoders, akin], [autoencoders, akin, supervised], [akin, supervised, learning], [supervised, learning, sense], [learning, sense, autoencoders], [sense, autoencoders, specify], [autoencoders, specify, desired], [specify, desired, output], [desired, output, input], [output, input, training], [input, training, set], [training, set, .]]

>> Noun Phrases are: 
[this regard, we, the problem, training autoencoders, supervised learning, the sense, autoencoders, the desired output, each input, the training set]

>> Named Entities are: 
[]


============================ Sentence 565 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 566 =============================

As for supervised learning, the most basic learning criterion for probabilistic models is ML. 


>> Tokens are: 
[supervised, learning, ,, basic, learning, criterion, probabilistic, models, ML, .] 

>> PoS Tags are: 
[('supervised', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('basic', 'ADJ'), ('learning', 'NOUN'), ('criterion', 'NOUN'), ('probabilistic', 'ADJ'), ('models', 'NOUN'), ('ML', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('supervised', 'amod'), ('learning', 'pobj'), (',', 'punct'), ('basic', 'amod'), ('learning', 'compound'), ('criterion', 'nsubj'), ('probabilistic', 'amod'), ('models', 'pobj'), ('ML', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[supervised, learning], [learning, ,], [,, basic], [basic, learning], [learning, criterion], [criterion, probabilistic], [probabilistic, models], [models, ML], [ML, .]]

>> Trigrams: 
[[supervised, learning, ,], [learning, ,, basic], [,, basic, learning], [basic, learning, criterion], [learning, criterion, probabilistic], [criterion, probabilistic, models], [probabilistic, models, ML], [models, ML, .]]

>> Noun Phrases are: 
[supervised learning, the most basic learning criterion, probabilistic models, ML]

>> Named Entities are: 
[('ML', 'ORG')]


============================ Sentence 567 =============================

Following the discussion in Sec. 


>> Tokens are: 
[Following, discussion, Sec, .] 

>> PoS Tags are: 
[('Following', 'VERB'), ('discussion', 'NOUN'), ('Sec', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Following', 'ROOT'), ('discussion', 'pobj'), ('Sec', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Following, discussion], [discussion, Sec], [Sec, .]]

>> Trigrams: 
[[Following, discussion, Sec], [discussion, Sec, .]]

>> Noun Phrases are: 
[the discussion, Sec]

>> Named Entities are: 
[('Sec', 'PERSON')]


============================ Sentence 568 =============================

III-E, ML tackles the problem of maximizing the log-likelihood of the data, i.e.--,  maximize θ  ln p(x|θ) = 


>> Tokens are: 
[III, -, E, ,, ML, tackles, problem, maximizing, log, -, likelihood, data, ,, i.e.--, ,,  , maximize, θ,  , ln, p(x|θ, ), =] 

>> PoS Tags are: 
[('III', 'NUM'), ('-', 'PUNCT'), ('E', 'NOUN'), (',', 'PUNCT'), ('ML', 'PROPN'), ('tackles', 'VERB'), ('problem', 'NOUN'), ('maximizing', 'VERB'), ('log', 'NOUN'), ('-', 'PUNCT'), ('likelihood', 'NOUN'), ('data', 'NOUN'), (',', 'PUNCT'), ('i.e.--', 'PUNCT'), (',', 'PUNCT'), (' ', 'SPACE'), ('maximize', 'VERB'), ('θ', 'ADP'), (' ', 'SPACE'), ('ln', 'ADP'), ('p(x|θ', 'X'), (')', 'PUNCT'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('III', 'nummod'), ('-', 'punct'), ('E', 'nsubj'), (',', 'punct'), ('ML', 'nsubj'), ('tackles', 'ROOT'), ('problem', 'dobj'), ('maximizing', 'pcomp'), ('log', 'compound'), ('-', 'punct'), ('likelihood', 'dobj'), ('data', 'pobj'), (',', 'punct'), ('i.e.--', 'npadvmod'), (',', 'punct'), (' ', 'nsubj'), ('maximize', 'conj'), ('θ', 'punct'), (' ', 'pobj'), ('ln', 'advmod'), ('p(x|θ', 'dep'), (')', 'punct'), ('=', 'punct')]

>> Bigrams: 
[[III, -], [-, E], [E, ,], [,, ML], [ML, tackles], [tackles, problem], [problem, maximizing], [maximizing, log], [log, -], [-, likelihood], [likelihood, data], [data, ,], [,, i.e.--], [i.e.--, ,], [,,  ], [ , maximize], [maximize, θ], [θ,  ], [ , ln], [ln, p(x|θ], [p(x|θ, )], [), =]]

>> Trigrams: 
[[III, -, E], [-, E, ,], [E, ,, ML], [,, ML, tackles], [ML, tackles, problem], [tackles, problem, maximizing], [problem, maximizing, log], [maximizing, log, -], [log, -, likelihood], [-, likelihood, data], [likelihood, data, ,], [data, ,, i.e.--], [,, i.e.--, ,], [i.e.--, ,,  ], [,,  , maximize], [ , maximize, θ], [maximize, θ,  ], [θ,  , ln], [ , ln, p(x|θ], [ln, p(x|θ, )], [p(x|θ, ), =]]

>> Noun Phrases are: 
[III-E, ML, the problem, the log-likelihood, the data]

>> Named Entities are: 
[('ML', 'ORG')]


============================ Sentence 569 =============================

lnEz∼p(z|θ)[ln p(x|z, θ)]. 


>> Tokens are: 
[lnEz∼p(z|θ)[ln, p(x|z, ,, θ, ), ], .] 

>> PoS Tags are: 
[('lnEz∼p(z|θ)[ln', 'PROPN'), ('p(x|z', 'NOUN'), (',', 'PUNCT'), ('θ', 'X'), (')', 'PUNCT'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('lnEz∼p(z|θ)[ln', 'compound'), ('p(x|z', 'ROOT'), (',', 'punct'), ('θ', 'appos'), (')', 'punct'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[lnEz∼p(z|θ)[ln, p(x|z], [p(x|z, ,], [,, θ], [θ, )], [), ]], [], .]]

>> Trigrams: 
[[lnEz∼p(z|θ)[ln, p(x|z, ,], [p(x|z, ,, θ], [,, θ, )], [θ, ), ]], [), ], .]]

>> Noun Phrases are: 
[lnEz∼p(z|θ)[ln p(x|z]

>> Named Entities are: 
[]


============================ Sentence 570 =============================

(14)   


>> Tokens are: 
[(, 14, ),  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('14', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('14', 'ROOT'), (')', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[(, 14], [14, )], [),  ]]

>> Trigrams: 
[[(, 14, )], [14, ),  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('14', 'CARDINAL')]


============================ Sentence 571 =============================

Note that problem (14) considers only one data point x in the data set for the purpose of simplifying the notation, but in practice the log-likelihood needs to be summed over the N examples in D.   


>> Tokens are: 
[Note, problem, (, 14, ), considers, data, point, x, data, set, purpose, simplifying, notation, ,, practice, log, -, likelihood, needs, summed, N, examples, D.,  ] 

>> PoS Tags are: 
[('Note', 'VERB'), ('problem', 'NOUN'), ('(', 'PUNCT'), ('14', 'NUM'), (')', 'PUNCT'), ('considers', 'VERB'), ('data', 'NOUN'), ('point', 'NOUN'), ('x', 'PUNCT'), ('data', 'NOUN'), ('set', 'VERB'), ('purpose', 'NOUN'), ('simplifying', 'VERB'), ('notation', 'NOUN'), (',', 'PUNCT'), ('practice', 'NOUN'), ('log', 'NOUN'), ('-', 'PUNCT'), ('likelihood', 'NOUN'), ('needs', 'VERB'), ('summed', 'VERB'), ('N', 'PROPN'), ('examples', 'NOUN'), ('D.', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Note', 'csubj'), ('problem', 'dobj'), ('(', 'punct'), ('14', 'appos'), (')', 'punct'), ('considers', 'ROOT'), ('data', 'compound'), ('point', 'dobj'), ('x', 'punct'), ('data', 'pobj'), ('set', 'acl'), ('purpose', 'pobj'), ('simplifying', 'pcomp'), ('notation', 'dobj'), (',', 'punct'), ('practice', 'pobj'), ('log', 'compound'), ('-', 'punct'), ('likelihood', 'nsubj'), ('needs', 'conj'), ('summed', 'xcomp'), ('N', 'compound'), ('examples', 'pobj'), ('D.', 'compound'), (' ', 'pobj')]

>> Bigrams: 
[[Note, problem], [problem, (], [(, 14], [14, )], [), considers], [considers, data], [data, point], [point, x], [x, data], [data, set], [set, purpose], [purpose, simplifying], [simplifying, notation], [notation, ,], [,, practice], [practice, log], [log, -], [-, likelihood], [likelihood, needs], [needs, summed], [summed, N], [N, examples], [examples, D.], [D.,  ]]

>> Trigrams: 
[[Note, problem, (], [problem, (, 14], [(, 14, )], [14, ), considers], [), considers, data], [considers, data, point], [data, point, x], [point, x, data], [x, data, set], [data, set, purpose], [set, purpose, simplifying], [purpose, simplifying, notation], [simplifying, notation, ,], [notation, ,, practice], [,, practice, log], [practice, log, -], [log, -, likelihood], [-, likelihood, needs], [likelihood, needs, summed], [needs, summed, N], [summed, N, examples], [N, examples, D.], [examples, D.,  ]]

>> Noun Phrases are: 
[that problem, only one data point, the data, the purpose, the notation, practice, the log-likelihood, the N examples]

>> Named Entities are: 
[('14', 'CARDINAL'), ('only one', 'CARDINAL'), ('D.', 'NORP')]


============================ Sentence 572 =============================

Unlike the corresponding problem for supervised learning (8), the likelihood in (14) requires an average over the hidden variables. 


>> Tokens are: 
[Unlike, corresponding, problem, supervised, learning, (, 8), ,, likelihood, (, 14, ), requires, average, hidden, variables, .] 

>> PoS Tags are: 
[('Unlike', 'ADP'), ('corresponding', 'ADJ'), ('problem', 'NOUN'), ('supervised', 'ADJ'), ('learning', 'NOUN'), ('(', 'PUNCT'), ('8)', 'NUM'), (',', 'PUNCT'), ('likelihood', 'NOUN'), ('(', 'PUNCT'), ('14', 'NUM'), (')', 'PUNCT'), ('requires', 'VERB'), ('average', 'NOUN'), ('hidden', 'ADJ'), ('variables', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Unlike', 'prep'), ('corresponding', 'amod'), ('problem', 'pobj'), ('supervised', 'amod'), ('learning', 'pobj'), ('(', 'punct'), ('8)', 'appos'), (',', 'punct'), ('likelihood', 'nsubj'), ('(', 'punct'), ('14', 'pobj'), (')', 'punct'), ('requires', 'ROOT'), ('average', 'dobj'), ('hidden', 'amod'), ('variables', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Unlike, corresponding], [corresponding, problem], [problem, supervised], [supervised, learning], [learning, (], [(, 8)], [8), ,], [,, likelihood], [likelihood, (], [(, 14], [14, )], [), requires], [requires, average], [average, hidden], [hidden, variables], [variables, .]]

>> Trigrams: 
[[Unlike, corresponding, problem], [corresponding, problem, supervised], [problem, supervised, learning], [supervised, learning, (], [learning, (, 8)], [(, 8), ,], [8), ,, likelihood], [,, likelihood, (], [likelihood, (, 14], [(, 14, )], [14, ), requires], [), requires, average], [requires, average, hidden], [average, hidden, variables], [hidden, variables, .]]

>> Noun Phrases are: 
[the corresponding problem, supervised learning, the likelihood, an average, the hidden variables]

>> Named Entities are: 
[('14', 'CARDINAL')]


============================ Sentence 573 =============================

This is because the value of the hidden variables z is not known, and hence the probability of the observation x needs to account for all possible values of z weighted by their probabilities p(z|θ). 


>> Tokens are: 
[value, hidden, variables, z, known, ,, probability, observation, x, needs, account, possible, values, z, weighted, probabilities, p(z|θ, ), .] 

>> PoS Tags are: 
[('value', 'NOUN'), ('hidden', 'ADJ'), ('variables', 'NOUN'), ('z', 'PROPN'), ('known', 'VERB'), (',', 'PUNCT'), ('probability', 'NOUN'), ('observation', 'NOUN'), ('x', 'SYM'), ('needs', 'VERB'), ('account', 'VERB'), ('possible', 'ADJ'), ('values', 'NOUN'), ('z', 'DET'), ('weighted', 'VERB'), ('probabilities', 'NOUN'), ('p(z|θ', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('value', 'nsubjpass'), ('hidden', 'amod'), ('variables', 'pobj'), ('z', 'appos'), ('known', 'advcl'), (',', 'punct'), ('probability', 'nsubj'), ('observation', 'pobj'), ('x', 'punct'), ('needs', 'conj'), ('account', 'xcomp'), ('possible', 'amod'), ('values', 'pobj'), ('z', 'pobj'), ('weighted', 'acl'), ('probabilities', 'pobj'), ('p(z|θ', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[value, hidden], [hidden, variables], [variables, z], [z, known], [known, ,], [,, probability], [probability, observation], [observation, x], [x, needs], [needs, account], [account, possible], [possible, values], [values, z], [z, weighted], [weighted, probabilities], [probabilities, p(z|θ], [p(z|θ, )], [), .]]

>> Trigrams: 
[[value, hidden, variables], [hidden, variables, z], [variables, z, known], [z, known, ,], [known, ,, probability], [,, probability, observation], [probability, observation, x], [observation, x, needs], [x, needs, account], [needs, account, possible], [account, possible, values], [possible, values, z], [values, z, weighted], [z, weighted, probabilities], [weighted, probabilities, p(z|θ], [probabilities, p(z|θ, )], [p(z|θ, ), .]]

>> Noun Phrases are: 
[the value, the hidden variables, z, hence the probability, the observation, all possible values, their probabilities]

>> Named Entities are: 
[('p(z|θ', 'CARDINAL')]


============================ Sentence 574 =============================

This creates a number of technical challenges. 


>> Tokens are: 
[creates, number, technical, challenges, .] 

>> PoS Tags are: 
[('creates', 'VERB'), ('number', 'NOUN'), ('technical', 'ADJ'), ('challenges', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('creates', 'ROOT'), ('number', 'dobj'), ('technical', 'amod'), ('challenges', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[creates, number], [number, technical], [technical, challenges], [challenges, .]]

>> Trigrams: 
[[creates, number, technical], [number, technical, challenges], [technical, challenges, .]]

>> Noun Phrases are: 
[a number, technical challenges]

>> Named Entities are: 
[]


============================ Sentence 575 =============================

First, the objective in (14) is generally more complex to optimize, since the average over z destroys the typical structure of the model p(x|z, θ), whose logarithm is often selected as a tractable function (see, e.g.--.-, logistic re- gression). 


>> Tokens are: 
[,, objective, (, 14, ), generally, complex, optimize, ,, average, z, destroys, typical, structure, model, p(x|z, ,, θ, ), ,, logarithm, selected, tractable, function, (, ,, e.g.--.-, ,, logistic, re-, gression, ), .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('objective', 'NOUN'), ('(', 'PUNCT'), ('14', 'NUM'), (')', 'PUNCT'), ('generally', 'ADV'), ('complex', 'ADJ'), ('optimize', 'VERB'), (',', 'PUNCT'), ('average', 'NOUN'), ('z', 'DET'), ('destroys', 'VERB'), ('typical', 'ADJ'), ('structure', 'NOUN'), ('model', 'NOUN'), ('p(x|z', 'NOUN'), (',', 'PUNCT'), ('θ', 'X'), (')', 'PUNCT'), (',', 'PUNCT'), ('logarithm', 'NOUN'), ('selected', 'VERB'), ('tractable', 'ADJ'), ('function', 'NOUN'), ('(', 'PUNCT'), (',', 'PUNCT'), ('e.g.--.-', 'ADJ'), (',', 'PUNCT'), ('logistic', 'ADJ'), ('re-', 'NOUN'), ('gression', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('objective', 'nsubj'), ('(', 'punct'), ('14', 'pobj'), (')', 'punct'), ('generally', 'advmod'), ('complex', 'acomp'), ('optimize', 'xcomp'), (',', 'punct'), ('average', 'nsubj'), ('z', 'pobj'), ('destroys', 'advcl'), ('typical', 'amod'), ('structure', 'dobj'), ('model', 'compound'), ('p(x|z', 'pobj'), (',', 'punct'), ('θ', 'prep'), (')', 'punct'), (',', 'punct'), ('logarithm', 'nsubjpass'), ('selected', 'relcl'), ('tractable', 'amod'), ('function', 'pobj'), ('(', 'punct'), (',', 'punct'), ('e.g.--.-', 'conj'), (',', 'punct'), ('logistic', 'amod'), ('re-', 'compound'), ('gression', 'dobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[,, objective], [objective, (], [(, 14], [14, )], [), generally], [generally, complex], [complex, optimize], [optimize, ,], [,, average], [average, z], [z, destroys], [destroys, typical], [typical, structure], [structure, model], [model, p(x|z], [p(x|z, ,], [,, θ], [θ, )], [), ,], [,, logarithm], [logarithm, selected], [selected, tractable], [tractable, function], [function, (], [(, ,], [,, e.g.--.-], [e.g.--.-, ,], [,, logistic], [logistic, re-], [re-, gression], [gression, )], [), .]]

>> Trigrams: 
[[,, objective, (], [objective, (, 14], [(, 14, )], [14, ), generally], [), generally, complex], [generally, complex, optimize], [complex, optimize, ,], [optimize, ,, average], [,, average, z], [average, z, destroys], [z, destroys, typical], [destroys, typical, structure], [typical, structure, model], [structure, model, p(x|z], [model, p(x|z, ,], [p(x|z, ,, θ], [,, θ, )], [θ, ), ,], [), ,, logarithm], [,, logarithm, selected], [logarithm, selected, tractable], [selected, tractable, function], [tractable, function, (], [function, (, ,], [(, ,, e.g.--.-], [,, e.g.--.-, ,], [e.g.--.-, ,, logistic], [,, logistic, re-], [logistic, re-, gression], [re-, gression, )], [gression, ), .]]

>> Noun Phrases are: 
[the objective, the average, the typical structure, the model p(x|z, whose logarithm, a tractable function, , logistic re- gression]

>> Named Entities are: 
[('First', 'ORDINAL'), ('14', 'CARDINAL')]


============================ Sentence 576 =============================

Second, the average in (14) cannot be directly approximated using Monte Carlo methods if the goal is to optimize over the model parameters θ, given that the distribution p(z|θ) generally depends on θ itself. 


>> Tokens are: 
[Second, ,, average, (, 14, ), directly, approximated, Monte, Carlo, methods, goal, optimize, model, parameters, θ, ,, given, distribution, p(z|θ, ), generally, depends, θ, .] 

>> PoS Tags are: 
[('Second', 'ADV'), (',', 'PUNCT'), ('average', 'NOUN'), ('(', 'PUNCT'), ('14', 'NUM'), (')', 'PUNCT'), ('directly', 'ADV'), ('approximated', 'VERB'), ('Monte', 'PROPN'), ('Carlo', 'PROPN'), ('methods', 'NOUN'), ('goal', 'NOUN'), ('optimize', 'VERB'), ('model', 'NOUN'), ('parameters', 'NOUN'), ('θ', 'X'), (',', 'PUNCT'), ('given', 'VERB'), ('distribution', 'NOUN'), ('p(z|θ', 'NUM'), (')', 'PUNCT'), ('generally', 'ADV'), ('depends', 'VERB'), ('θ', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Second', 'advmod'), (',', 'punct'), ('average', 'nsubjpass'), ('(', 'punct'), ('14', 'pobj'), (')', 'punct'), ('directly', 'advmod'), ('approximated', 'ROOT'), ('Monte', 'compound'), ('Carlo', 'compound'), ('methods', 'dobj'), ('goal', 'nsubj'), ('optimize', 'xcomp'), ('model', 'compound'), ('parameters', 'pobj'), ('θ', 'dobj'), (',', 'punct'), ('given', 'prep'), ('distribution', 'nsubj'), ('p(z|θ', 'appos'), (')', 'punct'), ('generally', 'advmod'), ('depends', 'pcomp'), ('θ', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Second, ,], [,, average], [average, (], [(, 14], [14, )], [), directly], [directly, approximated], [approximated, Monte], [Monte, Carlo], [Carlo, methods], [methods, goal], [goal, optimize], [optimize, model], [model, parameters], [parameters, θ], [θ, ,], [,, given], [given, distribution], [distribution, p(z|θ], [p(z|θ, )], [), generally], [generally, depends], [depends, θ], [θ, .]]

>> Trigrams: 
[[Second, ,, average], [,, average, (], [average, (, 14], [(, 14, )], [14, ), directly], [), directly, approximated], [directly, approximated, Monte], [approximated, Monte, Carlo], [Monte, Carlo, methods], [Carlo, methods, goal], [methods, goal, optimize], [goal, optimize, model], [optimize, model, parameters], [model, parameters, θ], [parameters, θ, ,], [θ, ,, given], [,, given, distribution], [given, distribution, p(z|θ], [distribution, p(z|θ, )], [p(z|θ, ), generally], [), generally, depends], [generally, depends, θ], [depends, θ, .]]

>> Noun Phrases are: 
[the average, Monte Carlo methods, the goal, the model parameters, the distribution]

>> Named Entities are: 
[('Second', 'ORDINAL'), ('14', 'CARDINAL'), ('Monte Carlo', 'PERSON')]


============================ Sentence 577 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 578 =============================

To tackle these issues, a standard approach is based on the introduction of a variational distribution q(z)  over the hidden variables and on the optimization of a tractable lower bound on the log-likelihood known as the Evidence Lower BOund (ELBO). 


>> Tokens are: 
[tackle, issues, ,, standard, approach, based, introduction, variational, distribution, q(z, ),  , hidden, variables, optimization, tractable, lower, bound, log, -, likelihood, known, Evidence, Lower, BOund, (, ELBO, ), .] 

>> PoS Tags are: 
[('tackle', 'VERB'), ('issues', 'NOUN'), (',', 'PUNCT'), ('standard', 'ADJ'), ('approach', 'NOUN'), ('based', 'VERB'), ('introduction', 'NOUN'), ('variational', 'ADJ'), ('distribution', 'NOUN'), ('q(z', 'X'), (')', 'PUNCT'), (' ', 'SPACE'), ('hidden', 'ADJ'), ('variables', 'NOUN'), ('optimization', 'NOUN'), ('tractable', 'ADJ'), ('lower', 'ADV'), ('bound', 'VERB'), ('log', 'NOUN'), ('-', 'PUNCT'), ('likelihood', 'NOUN'), ('known', 'VERB'), ('Evidence', 'NOUN'), ('Lower', 'PROPN'), ('BOund', 'PROPN'), ('(', 'PUNCT'), ('ELBO', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('tackle', 'advcl'), ('issues', 'dobj'), (',', 'punct'), ('standard', 'amod'), ('approach', 'nsubjpass'), ('based', 'ROOT'), ('introduction', 'pobj'), ('variational', 'amod'), ('distribution', 'pobj'), ('q(z', 'appos'), (')', 'punct'), (' ', 'appos'), ('hidden', 'amod'), ('variables', 'pobj'), ('optimization', 'pobj'), ('tractable', 'pobj'), ('lower', 'advmod'), ('bound', 'acl'), ('log', 'compound'), ('-', 'punct'), ('likelihood', 'pobj'), ('known', 'acl'), ('Evidence', 'compound'), ('Lower', 'compound'), ('BOund', 'pobj'), ('(', 'punct'), ('ELBO', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[tackle, issues], [issues, ,], [,, standard], [standard, approach], [approach, based], [based, introduction], [introduction, variational], [variational, distribution], [distribution, q(z], [q(z, )], [),  ], [ , hidden], [hidden, variables], [variables, optimization], [optimization, tractable], [tractable, lower], [lower, bound], [bound, log], [log, -], [-, likelihood], [likelihood, known], [known, Evidence], [Evidence, Lower], [Lower, BOund], [BOund, (], [(, ELBO], [ELBO, )], [), .]]

>> Trigrams: 
[[tackle, issues, ,], [issues, ,, standard], [,, standard, approach], [standard, approach, based], [approach, based, introduction], [based, introduction, variational], [introduction, variational, distribution], [variational, distribution, q(z], [distribution, q(z, )], [q(z, ),  ], [),  , hidden], [ , hidden, variables], [hidden, variables, optimization], [variables, optimization, tractable], [optimization, tractable, lower], [tractable, lower, bound], [lower, bound, log], [bound, log, -], [log, -, likelihood], [-, likelihood, known], [likelihood, known, Evidence], [known, Evidence, Lower], [Evidence, Lower, BOund], [Lower, BOund, (], [BOund, (, ELBO], [(, ELBO, )], [ELBO, ), .]]

>> Noun Phrases are: 
[these issues, a standard approach, the introduction, a variational distribution, the hidden variables, the optimization, the log-likelihood, the Evidence Lower BOund, ELBO]

>> Named Entities are: 
[]


============================ Sentence 579 =============================

To elaborate, for any fixed value x and any distribution q(z) on the latent variables z (possibly dependent on x), the ELBO L(q, θ) is defined as  L(q, θ) = 


>> Tokens are: 
[elaborate, ,, fixed, value, x, distribution, q(z, ), latent, variables, z, (, possibly, dependent, x, ), ,, ELBO, L(q, ,, θ, ), defined,  , L(q, ,, θ, ), =] 

>> PoS Tags are: 
[('elaborate', 'VERB'), (',', 'PUNCT'), ('fixed', 'VERB'), ('value', 'NOUN'), ('x', 'PUNCT'), ('distribution', 'NOUN'), ('q(z', 'X'), (')', 'PUNCT'), ('latent', 'NOUN'), ('variables', 'NOUN'), ('z', 'DET'), ('(', 'PUNCT'), ('possibly', 'ADV'), ('dependent', 'ADJ'), ('x', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('ELBO', 'NOUN'), ('L(q', 'X'), (',', 'PUNCT'), ('θ', 'X'), (')', 'PUNCT'), ('defined', 'VERB'), (' ', 'SPACE'), ('L(q', 'X'), (',', 'PUNCT'), ('θ', 'X'), (')', 'PUNCT'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('elaborate', 'advcl'), (',', 'punct'), ('fixed', 'amod'), ('value', 'pobj'), ('x', 'punct'), ('distribution', 'conj'), ('q(z', 'appos'), (')', 'punct'), ('latent', 'compound'), ('variables', 'pobj'), ('z', 'dep'), ('(', 'punct'), ('possibly', 'advmod'), ('dependent', 'advcl'), ('x', 'pobj'), (')', 'punct'), (',', 'punct'), ('ELBO', 'nsubjpass'), ('L(q', 'appos'), (',', 'punct'), ('θ', 'appos'), (')', 'punct'), ('defined', 'ROOT'), (' ', 'pobj'), ('L(q', 'punct'), (',', 'punct'), ('θ', 'dep'), (')', 'punct'), ('=', 'punct')]

>> Bigrams: 
[[elaborate, ,], [,, fixed], [fixed, value], [value, x], [x, distribution], [distribution, q(z], [q(z, )], [), latent], [latent, variables], [variables, z], [z, (], [(, possibly], [possibly, dependent], [dependent, x], [x, )], [), ,], [,, ELBO], [ELBO, L(q], [L(q, ,], [,, θ], [θ, )], [), defined], [defined,  ], [ , L(q], [L(q, ,], [,, θ], [θ, )], [), =]]

>> Trigrams: 
[[elaborate, ,, fixed], [,, fixed, value], [fixed, value, x], [value, x, distribution], [x, distribution, q(z], [distribution, q(z, )], [q(z, ), latent], [), latent, variables], [latent, variables, z], [variables, z, (], [z, (, possibly], [(, possibly, dependent], [possibly, dependent, x], [dependent, x, )], [x, ), ,], [), ,, ELBO], [,, ELBO, L(q], [ELBO, L(q, ,], [L(q, ,, θ], [,, θ, )], [θ, ), defined], [), defined,  ], [defined,  , L(q], [ , L(q, ,], [L(q, ,, θ], [,, θ, )], [θ, ), =]]

>> Noun Phrases are: 
[any fixed value, any distribution, the latent variables, the ELBO]

>> Named Entities are: 
[('the ELBO L(q', 'ORG')]


============================ Sentence 580 =============================

Ez∼q(z)[ln p(x|z, θ)]−KL(q(z)||p(z|θ)), (15)  where KL(q||p) = Ez∼q(z)[ln(q(z)/p(z))] is the Kullback-Leibler (KL) divergence. 


>> Tokens are: 
[Ez∼q(z)[ln, p(x|z, ,, θ)]−KL(q(z)||p(z|θ, ), ), ,, (, 15, ),  , KL(q||p, ), =, Ez∼q(z)[ln(q(z)/p(z, ), ), ], Kullback, -, Leibler, (, KL, ), divergence, .] 

>> PoS Tags are: 
[('Ez∼q(z)[ln', 'PROPN'), ('p(x|z', 'NOUN'), (',', 'PUNCT'), ('θ)]−KL(q(z)||p(z|θ', 'PROPN'), (')', 'PUNCT'), (')', 'PUNCT'), (',', 'PUNCT'), ('(', 'PUNCT'), ('15', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE'), ('KL(q||p', 'PROPN'), (')', 'PUNCT'), ('=', 'SYM'), ('Ez∼q(z)[ln(q(z)/p(z', 'PROPN'), (')', 'PUNCT'), (')', 'PUNCT'), (']', 'X'), ('Kullback', 'PROPN'), ('-', 'PUNCT'), ('Leibler', 'PROPN'), ('(', 'PUNCT'), ('KL', 'PROPN'), (')', 'PUNCT'), ('divergence', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Ez∼q(z)[ln', 'compound'), ('p(x|z', 'dep'), (',', 'punct'), ('θ)]−KL(q(z)||p(z|θ', 'npadvmod'), (')', 'punct'), (')', 'punct'), (',', 'punct'), ('(', 'punct'), ('15', 'appos'), (')', 'punct'), (' ', 'punct'), ('KL(q||p', 'relcl'), (')', 'punct'), ('=', 'punct'), ('Ez∼q(z)[ln(q(z)/p(z', 'nsubj'), (')', 'punct'), (')', 'punct'), (']', 'punct'), ('Kullback', 'compound'), ('-', 'punct'), ('Leibler', 'nmod'), ('(', 'punct'), ('KL', 'appos'), (')', 'punct'), ('divergence', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[Ez∼q(z)[ln, p(x|z], [p(x|z, ,], [,, θ)]−KL(q(z)||p(z|θ], [θ)]−KL(q(z)||p(z|θ, )], [), )], [), ,], [,, (], [(, 15], [15, )], [),  ], [ , KL(q||p], [KL(q||p, )], [), =], [=, Ez∼q(z)[ln(q(z)/p(z], [Ez∼q(z)[ln(q(z)/p(z, )], [), )], [), ]], [], Kullback], [Kullback, -], [-, Leibler], [Leibler, (], [(, KL], [KL, )], [), divergence], [divergence, .]]

>> Trigrams: 
[[Ez∼q(z)[ln, p(x|z, ,], [p(x|z, ,, θ)]−KL(q(z)||p(z|θ], [,, θ)]−KL(q(z)||p(z|θ, )], [θ)]−KL(q(z)||p(z|θ, ), )], [), ), ,], [), ,, (], [,, (, 15], [(, 15, )], [15, ),  ], [),  , KL(q||p], [ , KL(q||p, )], [KL(q||p, ), =], [), =, Ez∼q(z)[ln(q(z)/p(z], [=, Ez∼q(z)[ln(q(z)/p(z, )], [Ez∼q(z)[ln(q(z)/p(z, ), )], [), ), ]], [), ], Kullback], [], Kullback, -], [Kullback, -, Leibler], [-, Leibler, (], [Leibler, (, KL], [(, KL, )], [KL, ), divergence], [), divergence, .]]

>> Noun Phrases are: 
[Ez∼q(z)[ln p(x|z, θ)]−KL(q(z)||p(z|θ)), (15)  where KL(q||p) = Ez∼q(z)[ln(q(z)/p(z, (KL]

>> Named Entities are: 
[('15', 'CARDINAL'), ('the Kullback-Leibler', 'ORG'), ('KL', 'ORG')]


============================ Sentence 581 =============================

The latter is a mea- sure of the distance between the two distributions, as we will further discuss in Sec. 


>> Tokens are: 
[mea-, sure, distance, distributions, ,, discuss, Sec, .] 

>> PoS Tags are: 
[('mea-', 'ADJ'), ('sure', 'ADJ'), ('distance', 'NOUN'), ('distributions', 'NOUN'), (',', 'PUNCT'), ('discuss', 'VERB'), ('Sec', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('mea-', 'amod'), ('sure', 'attr'), ('distance', 'pobj'), ('distributions', 'pobj'), (',', 'punct'), ('discuss', 'advcl'), ('Sec', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[mea-, sure], [sure, distance], [distance, distributions], [distributions, ,], [,, discuss], [discuss, Sec], [Sec, .]]

>> Trigrams: 
[[mea-, sure, distance], [sure, distance, distributions], [distance, distributions, ,], [distributions, ,, discuss], [,, discuss, Sec], [discuss, Sec, .]]

>> Noun Phrases are: 
[the distance, the two distributions, we, Sec]

>> Named Entities are: 
[('two', 'CARDINAL'), ('Sec', 'PERSON')]


============================ Sentence 582 =============================

V-D (see [59], [60]). 


>> Tokens are: 
[V, -, D, (, [, 59, ], ,, [, 60, ], ), .] 

>> PoS Tags are: 
[('V', 'NOUN'), ('-', 'PUNCT'), ('D', 'NOUN'), ('(', 'PUNCT'), ('[', 'PUNCT'), ('59', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('[', 'PUNCT'), ('60', 'NUM'), (']', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('V', 'compound'), ('-', 'punct'), ('D', 'ROOT'), ('(', 'punct'), ('[', 'punct'), ('59', 'dobj'), (']', 'punct'), (',', 'punct'), ('[', 'punct'), ('60', 'appos'), (']', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[V, -], [-, D], [D, (], [(, [], [[, 59], [59, ]], [], ,], [,, [], [[, 60], [60, ]], [], )], [), .]]

>> Trigrams: 
[[V, -, D], [-, D, (], [D, (, [], [(, [, 59], [[, 59, ]], [59, ], ,], [], ,, [], [,, [, 60], [[, 60, ]], [60, ], )], [], ), .]]

>> Noun Phrases are: 
[V-D]

>> Named Entities are: 
[]


============================ Sentence 583 =============================

The analytical advantages of the ELBO L(q, θ) over the original log-likelihood are that: (i) it entails an expectation of the logarithm of the model p(x|z, θ), which, as mentioned, is typically a tractable function; and (ii) the average is over a fixed distribution q(z), which does not depend on the model parameter θ. 


>> Tokens are: 
[analytical, advantages, ELBO, L(q, ,, θ, ), original, log, -, likelihood, :, (, ), entails, expectation, logarithm, model, p(x|z, ,, θ, ), ,, ,, mentioned, ,, typically, tractable, function, ;, (, ii, ), average, fixed, distribution, q(z, ), ,, depend, model, parameter, θ, .] 

>> PoS Tags are: 
[('analytical', 'ADJ'), ('advantages', 'NOUN'), ('ELBO', 'PROPN'), ('L(q', 'NOUN'), (',', 'PUNCT'), ('θ', 'X'), (')', 'PUNCT'), ('original', 'ADJ'), ('log', 'NOUN'), ('-', 'PUNCT'), ('likelihood', 'NOUN'), (':', 'PUNCT'), ('(', 'PUNCT'), (')', 'PUNCT'), ('entails', 'VERB'), ('expectation', 'NOUN'), ('logarithm', 'NOUN'), ('model', 'NOUN'), ('p(x|z', 'NOUN'), (',', 'PUNCT'), ('θ', 'X'), (')', 'PUNCT'), (',', 'PUNCT'), (',', 'PUNCT'), ('mentioned', 'VERB'), (',', 'PUNCT'), ('typically', 'ADV'), ('tractable', 'ADJ'), ('function', 'NOUN'), (';', 'PUNCT'), ('(', 'PUNCT'), ('ii', 'X'), (')', 'PUNCT'), ('average', 'NOUN'), ('fixed', 'VERB'), ('distribution', 'NOUN'), ('q(z', 'X'), (')', 'PUNCT'), (',', 'PUNCT'), ('depend', 'VERB'), ('model', 'NOUN'), ('parameter', 'NOUN'), ('θ', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('analytical', 'amod'), ('advantages', 'nsubj'), ('ELBO', 'pobj'), ('L(q', 'punct'), (',', 'punct'), ('θ', 'appos'), (')', 'punct'), ('original', 'amod'), ('log', 'compound'), ('-', 'punct'), ('likelihood', 'pobj'), (':', 'punct'), ('(', 'punct'), (')', 'punct'), ('entails', 'ccomp'), ('expectation', 'dobj'), ('logarithm', 'pobj'), ('model', 'compound'), ('p(x|z', 'pobj'), (',', 'punct'), ('θ', 'dep'), (')', 'punct'), (',', 'punct'), (',', 'punct'), ('mentioned', 'advcl'), (',', 'punct'), ('typically', 'advmod'), ('tractable', 'amod'), ('function', 'attr'), (';', 'punct'), ('(', 'punct'), ('ii', 'nsubj'), (')', 'punct'), ('average', 'nsubj'), ('fixed', 'amod'), ('distribution', 'pobj'), ('q(z', 'appos'), (')', 'punct'), (',', 'punct'), ('depend', 'advcl'), ('model', 'compound'), ('parameter', 'pobj'), ('θ', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[analytical, advantages], [advantages, ELBO], [ELBO, L(q], [L(q, ,], [,, θ], [θ, )], [), original], [original, log], [log, -], [-, likelihood], [likelihood, :], [:, (], [(, )], [), entails], [entails, expectation], [expectation, logarithm], [logarithm, model], [model, p(x|z], [p(x|z, ,], [,, θ], [θ, )], [), ,], [,, ,], [,, mentioned], [mentioned, ,], [,, typically], [typically, tractable], [tractable, function], [function, ;], [;, (], [(, ii], [ii, )], [), average], [average, fixed], [fixed, distribution], [distribution, q(z], [q(z, )], [), ,], [,, depend], [depend, model], [model, parameter], [parameter, θ], [θ, .]]

>> Trigrams: 
[[analytical, advantages, ELBO], [advantages, ELBO, L(q], [ELBO, L(q, ,], [L(q, ,, θ], [,, θ, )], [θ, ), original], [), original, log], [original, log, -], [log, -, likelihood], [-, likelihood, :], [likelihood, :, (], [:, (, )], [(, ), entails], [), entails, expectation], [entails, expectation, logarithm], [expectation, logarithm, model], [logarithm, model, p(x|z], [model, p(x|z, ,], [p(x|z, ,, θ], [,, θ, )], [θ, ), ,], [), ,, ,], [,, ,, mentioned], [,, mentioned, ,], [mentioned, ,, typically], [,, typically, tractable], [typically, tractable, function], [tractable, function, ;], [function, ;, (], [;, (, ii], [(, ii, )], [ii, ), average], [), average, fixed], [average, fixed, distribution], [fixed, distribution, q(z], [distribution, q(z, )], [q(z, ), ,], [), ,, depend], [,, depend, model], [depend, model, parameter], [model, parameter, θ], [parameter, θ, .]]

>> Noun Phrases are: 
[The analytical advantages, the ELBO, the original log-likelihood, it, an expectation, the logarithm, the model p(x|z, a tractable function, the average, a fixed distribution, the model parameter]

>> Named Entities are: 
[('the ELBO L(q', 'ORG')]


============================ Sentence 584 =============================

 Using Jensen’s inequality, it can be seen that the ELBO (15) is a global lower bound on the log-likelihood function, that is,  ln p(x|θ) 


>> Tokens are: 
[ , Jensen, inequality, ,, seen, ELBO, (, 15, ), global, lower, bound, log, -, likelihood, function, ,, ,,  , ln, p(x|θ, )] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Jensen', 'PROPN'), ('inequality', 'NOUN'), (',', 'PUNCT'), ('seen', 'VERB'), ('ELBO', 'NOUN'), ('(', 'PUNCT'), ('15', 'NUM'), (')', 'PUNCT'), ('global', 'ADJ'), ('lower', 'ADV'), ('bound', 'VERB'), ('log', 'NOUN'), ('-', 'PUNCT'), ('likelihood', 'NOUN'), ('function', 'NOUN'), (',', 'PUNCT'), (',', 'PUNCT'), (' ', 'SPACE'), ('ln', 'ADP'), ('p(x|θ', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'dep'), ('Jensen', 'poss'), ('inequality', 'dobj'), (',', 'punct'), ('seen', 'ROOT'), ('ELBO', 'nsubj'), ('(', 'punct'), ('15', 'appos'), (')', 'punct'), ('global', 'attr'), ('lower', 'advmod'), ('bound', 'acl'), ('log', 'compound'), ('-', 'punct'), ('likelihood', 'compound'), ('function', 'pobj'), (',', 'punct'), (',', 'punct'), (' ', 'attr'), ('ln', 'nmod'), ('p(x|θ', 'dep'), (')', 'punct')]

>> Bigrams: 
[[ , Jensen], [Jensen, inequality], [inequality, ,], [,, seen], [seen, ELBO], [ELBO, (], [(, 15], [15, )], [), global], [global, lower], [lower, bound], [bound, log], [log, -], [-, likelihood], [likelihood, function], [function, ,], [,, ,], [,,  ], [ , ln], [ln, p(x|θ], [p(x|θ, )]]

>> Trigrams: 
[[ , Jensen, inequality], [Jensen, inequality, ,], [inequality, ,, seen], [,, seen, ELBO], [seen, ELBO, (], [ELBO, (, 15], [(, 15, )], [15, ), global], [), global, lower], [global, lower, bound], [lower, bound, log], [bound, log, -], [log, -, likelihood], [-, likelihood, function], [likelihood, function, ,], [function, ,, ,], [,, ,,  ], [,,  , ln], [ , ln, p(x|θ], [ln, p(x|θ, )]]

>> Noun Phrases are: 
[Jensen’s inequality, it, the ELBO, the log-likelihood function]

>> Named Entities are: 
[('Jensen', 'PERSON'), ('15', 'CARDINAL')]


============================ Sentence 585 =============================

≥ L(q, θ). 


>> Tokens are: 
[≥, L(q, ,, θ, ), .] 

>> PoS Tags are: 
[('≥', 'PROPN'), ('L(q', 'X'), (',', 'PUNCT'), ('θ', 'X'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('≥', 'ROOT'), ('L(q', 'punct'), (',', 'punct'), ('θ', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[≥, L(q], [L(q, ,], [,, θ], [θ, )], [), .]]

>> Trigrams: 
[[≥, L(q, ,], [L(q, ,, θ], [,, θ, )], [θ, ), .]]

>> Noun Phrases are: 
[≥]

>> Named Entities are: 
[('≥', 'PERSON')]


============================ Sentence 586 =============================

(16)   


>> Tokens are: 
[(, 16, ),  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('16', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('16', 'ROOT'), (')', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[(, 16], [16, )], [),  ]]

>> Trigrams: 
[[(, 16, )], [16, ),  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('16', 'CARDINAL')]


============================ Sentence 587 =============================

An illustration of the lower bounding property of the ELBO can be found in Fig. 


>> Tokens are: 
[illustration, lower, bounding, property, ELBO, found, Fig, .] 

>> PoS Tags are: 
[('illustration', 'NOUN'), ('lower', 'ADJ'), ('bounding', 'VERB'), ('property', 'NOUN'), ('ELBO', 'NOUN'), ('found', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('illustration', 'nsubjpass'), ('lower', 'amod'), ('bounding', 'compound'), ('property', 'pobj'), ('ELBO', 'pobj'), ('found', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[illustration, lower], [lower, bounding], [bounding, property], [property, ELBO], [ELBO, found], [found, Fig], [Fig, .]]

>> Trigrams: 
[[illustration, lower, bounding], [lower, bounding, property], [bounding, property, ELBO], [property, ELBO, found], [ELBO, found, Fig], [found, Fig, .]]

>> Noun Phrases are: 
[An illustration, the lower bounding property, the ELBO, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 588 =============================

12. 


>> Tokens are: 
[12, .] 

>> PoS Tags are: 
[('12', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('12', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[12, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('12', 'CARDINAL')]


============================ Sentence 589 =============================

An important feature of this inequality is that the ELBO “touches” the log- likelihood function at values θ0, if any, for which the distribution q(z) satisfies the equality  q(z) = p(z|x, θ0). 


>> Tokens are: 
[important, feature, inequality, ELBO, “, touches, ”, log-, likelihood, function, values, θ0, ,, ,, distribution, q(z, ), satisfies, equality,  , q(z, ), =, p(z|x, ,, θ0, ), .] 

>> PoS Tags are: 
[('important', 'ADJ'), ('feature', 'NOUN'), ('inequality', 'NOUN'), ('ELBO', 'PROPN'), ('“', 'PUNCT'), ('touches', 'VERB'), ('”', 'PUNCT'), ('log-', 'ADJ'), ('likelihood', 'NOUN'), ('function', 'NOUN'), ('values', 'NOUN'), ('θ0', 'NOUN'), (',', 'PUNCT'), (',', 'PUNCT'), ('distribution', 'NOUN'), ('q(z', 'PROPN'), (')', 'PUNCT'), ('satisfies', 'VERB'), ('equality', 'NOUN'), (' ', 'SPACE'), ('q(z', 'PROPN'), (')', 'PUNCT'), ('=', 'PUNCT'), ('p(z|x', 'PROPN'), (',', 'PUNCT'), ('θ0', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('important', 'amod'), ('feature', 'nsubj'), ('inequality', 'pobj'), ('ELBO', 'nmod'), ('“', 'punct'), ('touches', 'ccomp'), ('”', 'punct'), ('log-', 'amod'), ('likelihood', 'compound'), ('function', 'dobj'), ('values', 'pobj'), ('θ0', 'appos'), (',', 'punct'), (',', 'punct'), ('distribution', 'nsubj'), ('q(z', 'appos'), (')', 'punct'), ('satisfies', 'relcl'), ('equality', 'dobj'), (' ', 'compound'), ('q(z', 'attr'), (')', 'punct'), ('=', 'punct'), ('p(z|x', 'appos'), (',', 'punct'), ('θ0', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[important, feature], [feature, inequality], [inequality, ELBO], [ELBO, “], [“, touches], [touches, ”], [”, log-], [log-, likelihood], [likelihood, function], [function, values], [values, θ0], [θ0, ,], [,, ,], [,, distribution], [distribution, q(z], [q(z, )], [), satisfies], [satisfies, equality], [equality,  ], [ , q(z], [q(z, )], [), =], [=, p(z|x], [p(z|x, ,], [,, θ0], [θ0, )], [), .]]

>> Trigrams: 
[[important, feature, inequality], [feature, inequality, ELBO], [inequality, ELBO, “], [ELBO, “, touches], [“, touches, ”], [touches, ”, log-], [”, log-, likelihood], [log-, likelihood, function], [likelihood, function, values], [function, values, θ0], [values, θ0, ,], [θ0, ,, ,], [,, ,, distribution], [,, distribution, q(z], [distribution, q(z, )], [q(z, ), satisfies], [), satisfies, equality], [satisfies, equality,  ], [equality,  , q(z], [ , q(z, )], [q(z, ), =], [), =, p(z|x], [=, p(z|x, ,], [p(z|x, ,, θ0], [,, θ0, )], [θ0, ), .]]

>> Noun Phrases are: 
[An important feature, this inequality, the log- likelihood function, values, θ0, the distribution, q(z, the equality,  q(z, = p(z|x]

>> Named Entities are: 
[]


============================ Sentence 590 =============================

(17)   


>> Tokens are: 
[(, 17, ),  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('17', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('17', 'ROOT'), (')', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[(, 17], [17, )], [),  ]]

>> Trigrams: 
[[(, 17, )], [17, ),  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('17', 'CARDINAL')]


============================ Sentence 591 =============================

In words, the ELBO is tight if the variational distribution is selected to equal the posterior distribution of the hidden variables given the observation x under the model parameter θ0. 


>> Tokens are: 
[words, ,, ELBO, tight, variational, distribution, selected, equal, posterior, distribution, hidden, variables, given, observation, x, model, parameter, θ0, .] 

>> PoS Tags are: 
[('words', 'NOUN'), (',', 'PUNCT'), ('ELBO', 'NOUN'), ('tight', 'ADJ'), ('variational', 'ADJ'), ('distribution', 'NOUN'), ('selected', 'VERB'), ('equal', 'VERB'), ('posterior', 'ADJ'), ('distribution', 'NOUN'), ('hidden', 'ADJ'), ('variables', 'NOUN'), ('given', 'VERB'), ('observation', 'NOUN'), ('x', 'PUNCT'), ('model', 'NOUN'), ('parameter', 'NOUN'), ('θ0', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('words', 'pobj'), (',', 'punct'), ('ELBO', 'nsubj'), ('tight', 'acomp'), ('variational', 'amod'), ('distribution', 'nsubjpass'), ('selected', 'advcl'), ('equal', 'xcomp'), ('posterior', 'amod'), ('distribution', 'dobj'), ('hidden', 'amod'), ('variables', 'pobj'), ('given', 'prep'), ('observation', 'pobj'), ('x', 'punct'), ('model', 'compound'), ('parameter', 'compound'), ('θ0', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[words, ,], [,, ELBO], [ELBO, tight], [tight, variational], [variational, distribution], [distribution, selected], [selected, equal], [equal, posterior], [posterior, distribution], [distribution, hidden], [hidden, variables], [variables, given], [given, observation], [observation, x], [x, model], [model, parameter], [parameter, θ0], [θ0, .]]

>> Trigrams: 
[[words, ,, ELBO], [,, ELBO, tight], [ELBO, tight, variational], [tight, variational, distribution], [variational, distribution, selected], [distribution, selected, equal], [selected, equal, posterior], [equal, posterior, distribution], [posterior, distribution, hidden], [distribution, hidden, variables], [hidden, variables, given], [variables, given, observation], [given, observation, x], [observation, x, model], [x, model, parameter], [model, parameter, θ0], [parameter, θ0, .]]

>> Noun Phrases are: 
[words, the ELBO, the variational distribution, the posterior distribution, the hidden variables, the observation, the model parameter θ0]

>> Named Entities are: 
[]


============================ Sentence 592 =============================

Stated less formally, in order to ensure that the ELBO is tight at a value θ0, one needs to solve the problem of inferring the distribution of the hidden variables 


>> Tokens are: 
[Stated, formally, ,, order, ensure, ELBO, tight, value, θ0, ,, needs, solve, problem, inferring, distribution, hidden, variables] 

>> PoS Tags are: 
[('Stated', 'VERB'), ('formally', 'ADV'), (',', 'PUNCT'), ('order', 'NOUN'), ('ensure', 'VERB'), ('ELBO', 'NOUN'), ('tight', 'ADJ'), ('value', 'NOUN'), ('θ0', 'PROPN'), (',', 'PUNCT'), ('needs', 'VERB'), ('solve', 'VERB'), ('problem', 'NOUN'), ('inferring', 'VERB'), ('distribution', 'NOUN'), ('hidden', 'ADJ'), ('variables', 'NOUN')] 

>> Dependency Tags are: 
[('Stated', 'advcl'), ('formally', 'advmod'), (',', 'punct'), ('order', 'pobj'), ('ensure', 'acl'), ('ELBO', 'nsubj'), ('tight', 'acomp'), ('value', 'pobj'), ('θ0', 'appos'), (',', 'punct'), ('needs', 'ROOT'), ('solve', 'xcomp'), ('problem', 'dobj'), ('inferring', 'pcomp'), ('distribution', 'dobj'), ('hidden', 'amod'), ('variables', 'pobj')]

>> Bigrams: 
[[Stated, formally], [formally, ,], [,, order], [order, ensure], [ensure, ELBO], [ELBO, tight], [tight, value], [value, θ0], [θ0, ,], [,, needs], [needs, solve], [solve, problem], [problem, inferring], [inferring, distribution], [distribution, hidden], [hidden, variables]]

>> Trigrams: 
[[Stated, formally, ,], [formally, ,, order], [,, order, ensure], [order, ensure, ELBO], [ensure, ELBO, tight], [ELBO, tight, value], [tight, value, θ0], [value, θ0, ,], [θ0, ,, needs], [,, needs, solve], [needs, solve, problem], [solve, problem, inferring], [problem, inferring, distribution], [inferring, distribution, hidden], [distribution, hidden, variables]]

>> Noun Phrases are: 
[order, the ELBO, a value, θ0, one, the problem, the distribution, the hidden variables]

>> Named Entities are: 
[]


============================ Sentence 593 =============================

z given the observation x under the model identified by the value θ0. 


>> Tokens are: 
[z, given, observation, x, model, identified, value, θ0, .] 

>> PoS Tags are: 
[('z', 'NOUN'), ('given', 'VERB'), ('observation', 'NOUN'), ('x', 'PUNCT'), ('model', 'NOUN'), ('identified', 'VERB'), ('value', 'NOUN'), ('θ0', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('z', 'ROOT'), ('given', 'prep'), ('observation', 'pobj'), ('x', 'punct'), ('model', 'pobj'), ('identified', 'acl'), ('value', 'pobj'), ('θ0', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[z, given], [given, observation], [observation, x], [x, model], [model, identified], [identified, value], [value, θ0], [θ0, .]]

>> Trigrams: 
[[z, given, observation], [given, observation, x], [observation, x, model], [x, model, identified], [model, identified, value], [identified, value, θ0], [value, θ0, .]]

>> Noun Phrases are: 
[z, the observation, the model, the value, θ0]

>> Named Entities are: 
[]


============================ Sentence 594 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 595 =============================

The property (16) leads to the natural idea of the Expectation-Maximization (EM) algorithm as a means to tackle the ML problem. 


>> Tokens are: 
[property, (, 16, ), leads, natural, idea, Expectation, -, Maximization, (, EM, ), algorithm, means, tackle, ML, problem, .] 

>> PoS Tags are: 
[('property', 'NOUN'), ('(', 'PUNCT'), ('16', 'NUM'), (')', 'PUNCT'), ('leads', 'VERB'), ('natural', 'ADJ'), ('idea', 'NOUN'), ('Expectation', 'PROPN'), ('-', 'PUNCT'), ('Maximization', 'PROPN'), ('(', 'PUNCT'), ('EM', 'NOUN'), (')', 'PUNCT'), ('algorithm', 'NOUN'), ('means', 'NOUN'), ('tackle', 'VERB'), ('ML', 'PROPN'), ('problem', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('property', 'nsubj'), ('(', 'punct'), ('16', 'appos'), (')', 'punct'), ('leads', 'ROOT'), ('natural', 'amod'), ('idea', 'pobj'), ('Expectation', 'compound'), ('-', 'punct'), ('Maximization', 'nmod'), ('(', 'punct'), ('EM', 'appos'), (')', 'punct'), ('algorithm', 'pobj'), ('means', 'pobj'), ('tackle', 'relcl'), ('ML', 'compound'), ('problem', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[property, (], [(, 16], [16, )], [), leads], [leads, natural], [natural, idea], [idea, Expectation], [Expectation, -], [-, Maximization], [Maximization, (], [(, EM], [EM, )], [), algorithm], [algorithm, means], [means, tackle], [tackle, ML], [ML, problem], [problem, .]]

>> Trigrams: 
[[property, (, 16], [(, 16, )], [16, ), leads], [), leads, natural], [leads, natural, idea], [natural, idea, Expectation], [idea, Expectation, -], [Expectation, -, Maximization], [-, Maximization, (], [Maximization, (, EM], [(, EM, )], [EM, ), algorithm], [), algorithm, means], [algorithm, means, tackle], [means, tackle, ML], [tackle, ML, problem], [ML, problem, .]]

>> Noun Phrases are: 
[The property, the natural idea, (EM, a means, the ML problem]

>> Named Entities are: 
[('16', 'CARDINAL'), ('the Expectation-Maximization (EM', 'ORG'), ('ML', 'ORG')]


============================ Sentence 596 =============================

As illustrated in Fig. 


>> Tokens are: 
[illustrated, Fig, .] 

>> PoS Tags are: 
[('illustrated', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('illustrated', 'ROOT'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[illustrated, Fig], [Fig, .]]

>> Trigrams: 
[[illustrated, Fig, .]]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 597 =============================

13, EM maximizes the ELBO iteratively, where the ELBO at each iteration is computed to be tight at the current iterate for θ. 


>> Tokens are: 
[13, ,, EM, maximizes, ELBO, iteratively, ,, ELBO, iteration, computed, tight, current, iterate, θ, .] 

>> PoS Tags are: 
[('13', 'NUM'), (',', 'PUNCT'), ('EM', 'PROPN'), ('maximizes', 'VERB'), ('ELBO', 'NOUN'), ('iteratively', 'ADV'), (',', 'PUNCT'), ('ELBO', 'NOUN'), ('iteration', 'NOUN'), ('computed', 'VERB'), ('tight', 'ADJ'), ('current', 'ADJ'), ('iterate', 'NOUN'), ('θ', 'DET'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('13', 'dep'), (',', 'punct'), ('EM', 'nsubj'), ('maximizes', 'ROOT'), ('ELBO', 'dobj'), ('iteratively', 'advmod'), (',', 'punct'), ('ELBO', 'nsubjpass'), ('iteration', 'pobj'), ('computed', 'advcl'), ('tight', 'acomp'), ('current', 'amod'), ('iterate', 'pobj'), ('θ', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[13, ,], [,, EM], [EM, maximizes], [maximizes, ELBO], [ELBO, iteratively], [iteratively, ,], [,, ELBO], [ELBO, iteration], [iteration, computed], [computed, tight], [tight, current], [current, iterate], [iterate, θ], [θ, .]]

>> Trigrams: 
[[13, ,, EM], [,, EM, maximizes], [EM, maximizes, ELBO], [maximizes, ELBO, iteratively], [ELBO, iteratively, ,], [iteratively, ,, ELBO], [,, ELBO, iteration], [ELBO, iteration, computed], [iteration, computed, tight], [computed, tight, current], [tight, current, iterate], [current, iterate, θ], [iterate, θ, .]]

>> Noun Phrases are: 
[EM, the ELBO, the ELBO, each iteration, the current iterate]

>> Named Entities are: 
[('13', 'CARDINAL')]


============================ Sentence 598 =============================

More formally, the EM algorithm can be summarized as follows5. 


>> Tokens are: 
[formally, ,, EM, algorithm, summarized, follows5, .] 

>> PoS Tags are: 
[('formally', 'ADV'), (',', 'PUNCT'), ('EM', 'PROPN'), ('algorithm', 'NOUN'), ('summarized', 'VERB'), ('follows5', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('formally', 'advmod'), (',', 'punct'), ('EM', 'compound'), ('algorithm', 'nsubjpass'), ('summarized', 'ROOT'), ('follows5', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[formally, ,], [,, EM], [EM, algorithm], [algorithm, summarized], [summarized, follows5], [follows5, .]]

>> Trigrams: 
[[formally, ,, EM], [,, EM, algorithm], [EM, algorithm, summarized], [algorithm, summarized, follows5], [summarized, follows5, .]]

>> Noun Phrases are: 
[the EM algorithm, follows5]

>> Named Entities are: 
[('EM', 'ORG')]


============================ Sentence 599 =============================

The model vector is initialized to some value θold and then for each iteration the following two steps are performed. 


>> Tokens are: 
[model, vector, initialized, value, θold, iteration, following, steps, performed, .] 

>> PoS Tags are: 
[('model', 'NOUN'), ('vector', 'NOUN'), ('initialized', 'VERB'), ('value', 'NOUN'), ('θold', 'NOUN'), ('iteration', 'NOUN'), ('following', 'VERB'), ('steps', 'NOUN'), ('performed', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('model', 'compound'), ('vector', 'nsubjpass'), ('initialized', 'ROOT'), ('value', 'pobj'), ('θold', 'advcl'), ('iteration', 'pobj'), ('following', 'amod'), ('steps', 'nsubjpass'), ('performed', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[model, vector], [vector, initialized], [initialized, value], [value, θold], [θold, iteration], [iteration, following], [following, steps], [steps, performed], [performed, .]]

>> Trigrams: 
[[model, vector, initialized], [vector, initialized, value], [initialized, value, θold], [value, θold, iteration], [θold, iteration, following], [iteration, following, steps], [following, steps, performed], [steps, performed, .]]

>> Noun Phrases are: 
[The model vector, some value, each iteration, the following two steps]

>> Named Entities are: 
[('two', 'CARDINAL')]


============================ Sentence 600 =============================

 5EM is an instance of the more general Majorization-Minimization algorithm [61]. 


>> Tokens are: 
[ , 5EM, instance, general, Majorization, -, Minimization, algorithm, [, 61, ], .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('5EM', 'NUM'), ('instance', 'NOUN'), ('general', 'ADJ'), ('Majorization', 'PROPN'), ('-', 'PUNCT'), ('Minimization', 'PROPN'), ('algorithm', 'NOUN'), ('[', 'PUNCT'), ('61', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('5EM', 'nsubj'), ('instance', 'attr'), ('general', 'amod'), ('Majorization', 'compound'), ('-', 'punct'), ('Minimization', 'compound'), ('algorithm', 'pobj'), ('[', 'punct'), ('61', 'dep'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[ , 5EM], [5EM, instance], [instance, general], [general, Majorization], [Majorization, -], [-, Minimization], [Minimization, algorithm], [algorithm, [], [[, 61], [61, ]], [], .]]

>> Trigrams: 
[[ , 5EM, instance], [5EM, instance, general], [instance, general, Majorization], [general, Majorization, -], [Majorization, -, Minimization], [-, Minimization, algorithm], [Minimization, algorithm, [], [algorithm, [, 61], [[, 61, ]], [61, ], .]]

>> Noun Phrases are: 
[an instance, the more general Majorization-Minimization algorithm]

>> Named Entities are: 
[('5EM', 'CARDINAL'), ('Majorization-Minimization', 'ORG'), ('61', 'CARDINAL')]


============================ Sentence 601 =============================

 14    -4 


>> Tokens are: 
[ , 14,    , -4] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('14', 'NUM'), ('   ', 'SPACE'), ('-4', 'NOUN')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('14', 'nummod'), ('   ', 'nummod'), ('-4', 'npadvmod')]

>> Bigrams: 
[[ , 14], [14,    ], [   , -4]]

>> Trigrams: 
[[ , 14,    ], [14,    , -4]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('14', 'CARDINAL')]


============================ Sentence 602 =============================

-3 -2 -1 0 1 2 3 4 -5  -4.5  -4  -3.5  -3  -2.5  -2  -1.5 


>> Tokens are: 
[-3, -2, -1, 0, 1, 2, 3, 4, -5,  , -4.5,  , -4,  , -3.5,  , -3,  , -2.5,  , -2,  , -1.5] 

>> PoS Tags are: 
[('-3', 'INTJ'), ('-2', 'INTJ'), ('-1', 'SYM'), ('0', 'NUM'), ('1', 'NUM'), ('2', 'NUM'), ('3', 'NUM'), ('4', 'NUM'), ('-5', 'INTJ'), (' ', 'SPACE'), ('-4.5', 'PUNCT'), (' ', 'SPACE'), ('-4', 'PUNCT'), (' ', 'SPACE'), ('-3.5', 'X'), (' ', 'SPACE'), ('-3', 'PUNCT'), (' ', 'SPACE'), ('-2.5', 'INTJ'), (' ', 'SPACE'), ('-2', 'PUNCT'), (' ', 'SPACE'), ('-1.5', 'PUNCT')] 

>> Dependency Tags are: 
[('-3', 'punct'), ('-2', 'intj'), ('-1', 'punct'), ('0', 'quantmod'), ('1', 'compound'), ('2', 'appos'), ('3', 'appos'), ('4', 'appos'), ('-5', 'punct'), (' ', 'nmod'), ('-4.5', 'prep'), (' ', 'pobj'), ('-4', 'punct'), (' ', 'ROOT'), ('-3.5', 'punct'), (' ', 'appos'), ('-3', 'punct'), (' ', 'appos'), ('-2.5', 'punct'), (' ', 'appos'), ('-2', 'punct'), (' ', 'appos'), ('-1.5', 'punct')]

>> Bigrams: 
[[-3, -2], [-2, -1], [-1, 0], [0, 1], [1, 2], [2, 3], [3, 4], [4, -5], [-5,  ], [ , -4.5], [-4.5,  ], [ , -4], [-4,  ], [ , -3.5], [-3.5,  ], [ , -3], [-3,  ], [ , -2.5], [-2.5,  ], [ , -2], [-2,  ], [ , -1.5]]

>> Trigrams: 
[[-3, -2, -1], [-2, -1, 0], [-1, 0, 1], [0, 1, 2], [1, 2, 3], [2, 3, 4], [3, 4, -5], [4, -5,  ], [-5,  , -4.5], [ , -4.5,  ], [-4.5,  , -4], [ , -4,  ], [-4,  , -3.5], [ , -3.5,  ], [-3.5,  , -3], [ , -3,  ], [-3,  , -2.5], [ , -2.5,  ], [-2.5,  , -2], [ , -2,  ], [-2,  , -1.5]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 603 =============================

L  o g  -l ik  e lih  o o  d  ELBO ( 0 =  3)  ELBO ( 0  =  2)  LL  Fig. 12. 


>> Tokens are: 
[L,  , o, g,  , -l, ik,  , e, lih,  , o, o,  , d,  , ELBO, (, 0, =,  , 3, ),  , ELBO, (, 0,  , =,  , 2, ),  , LL,  , Fig, ., 12, .] 

>> PoS Tags are: 
[('L', 'NOUN'), (' ', 'SPACE'), ('o', 'PROPN'), ('g', 'NOUN'), (' ', 'SPACE'), ('-l', 'PUNCT'), ('ik', 'X'), (' ', 'SPACE'), ('e', 'NOUN'), ('lih', 'NOUN'), (' ', 'SPACE'), ('o', 'NOUN'), ('o', 'NOUN'), (' ', 'SPACE'), ('d', 'PROPN'), (' ', 'SPACE'), ('ELBO', 'PROPN'), ('(', 'PUNCT'), ('0', 'NUM'), ('=', 'SYM'), (' ', 'SPACE'), ('3', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE'), ('ELBO', 'PROPN'), ('(', 'PUNCT'), ('0', 'NUM'), (' ', 'SPACE'), ('=', 'SYM'), (' ', 'SPACE'), ('2', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE'), ('LL', 'PROPN'), (' ', 'SPACE'), ('Fig', 'PROPN'), ('.', 'PUNCT'), ('12', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('L', 'ROOT'), (' ', 'appos'), ('o', 'appos'), ('g', 'appos'), (' ', 'appos'), ('-l', 'punct'), ('ik', 'nmod'), (' ', 'appos'), ('e', 'appos'), ('lih', 'amod'), (' ', 'appos'), ('o', 'appos'), ('o', 'punct'), (' ', 'nmod'), ('d', 'nmod'), (' ', 'compound'), ('ELBO', 'appos'), ('(', 'punct'), ('0', 'appos'), ('=', 'punct'), (' ', 'prep'), ('3', 'appos'), (')', 'punct'), (' ', 'compound'), ('ELBO', 'appos'), ('(', 'punct'), ('0', 'appos'), (' ', 'appos'), ('=', 'punct'), (' ', 'appos'), ('2', 'nummod'), (')', 'punct'), (' ', 'prep'), ('LL', 'compound'), (' ', 'compound'), ('Fig', 'appos'), ('.', 'punct'), ('12', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[L,  ], [ , o], [o, g], [g,  ], [ , -l], [-l, ik], [ik,  ], [ , e], [e, lih], [lih,  ], [ , o], [o, o], [o,  ], [ , d], [d,  ], [ , ELBO], [ELBO, (], [(, 0], [0, =], [=,  ], [ , 3], [3, )], [),  ], [ , ELBO], [ELBO, (], [(, 0], [0,  ], [ , =], [=,  ], [ , 2], [2, )], [),  ], [ , LL], [LL,  ], [ , Fig], [Fig, .], [., 12], [12, .]]

>> Trigrams: 
[[L,  , o], [ , o, g], [o, g,  ], [g,  , -l], [ , -l, ik], [-l, ik,  ], [ik,  , e], [ , e, lih], [e, lih,  ], [lih,  , o], [ , o, o], [o, o,  ], [o,  , d], [ , d,  ], [d,  , ELBO], [ , ELBO, (], [ELBO, (, 0], [(, 0, =], [0, =,  ], [=,  , 3], [ , 3, )], [3, ),  ], [),  , ELBO], [ , ELBO, (], [ELBO, (, 0], [(, 0,  ], [0,  , =], [ , =,  ], [=,  , 2], [ , 2, )], [2, ),  ], [),  , LL], [ , LL,  ], [LL,  , Fig], [ , Fig, .], [Fig, ., 12], [., 12, .]]

>> Noun Phrases are: 
[L, o, g, e, o,  d  ELBO,  ELBO, LL  Fig]

>> Named Entities are: 
[('0', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('Fig', 'ORG'), ('12', 'CARDINAL')]


============================ Sentence 604 =============================

The ELBO (15) is a global lower bound on the log-likelihood that is tight at values of the model parameters θ0 for which equality (17) holds. 


>> Tokens are: 
[ELBO, (, 15, ), global, lower, bound, log, -, likelihood, tight, values, model, parameters, θ0, equality, (, 17, ), holds, .] 

>> PoS Tags are: 
[('ELBO', 'NOUN'), ('(', 'PUNCT'), ('15', 'NUM'), (')', 'PUNCT'), ('global', 'ADJ'), ('lower', 'ADV'), ('bound', 'VERB'), ('log', 'NOUN'), ('-', 'PUNCT'), ('likelihood', 'NOUN'), ('tight', 'ADJ'), ('values', 'NOUN'), ('model', 'NOUN'), ('parameters', 'NOUN'), ('θ0', 'PROPN'), ('equality', 'NOUN'), ('(', 'PUNCT'), ('17', 'NUM'), (')', 'PUNCT'), ('holds', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ELBO', 'nsubj'), ('(', 'punct'), ('15', 'appos'), (')', 'punct'), ('global', 'attr'), ('lower', 'advmod'), ('bound', 'acl'), ('log', 'compound'), ('-', 'punct'), ('likelihood', 'pobj'), ('tight', 'acomp'), ('values', 'pobj'), ('model', 'compound'), ('parameters', 'compound'), ('θ0', 'pobj'), ('equality', 'nsubj'), ('(', 'punct'), ('17', 'appos'), (')', 'punct'), ('holds', 'relcl'), ('.', 'punct')]

>> Bigrams: 
[[ELBO, (], [(, 15], [15, )], [), global], [global, lower], [lower, bound], [bound, log], [log, -], [-, likelihood], [likelihood, tight], [tight, values], [values, model], [model, parameters], [parameters, θ0], [θ0, equality], [equality, (], [(, 17], [17, )], [), holds], [holds, .]]

>> Trigrams: 
[[ELBO, (, 15], [(, 15, )], [15, ), global], [), global, lower], [global, lower, bound], [lower, bound, log], [bound, log, -], [log, -, likelihood], [-, likelihood, tight], [likelihood, tight, values], [tight, values, model], [values, model, parameters], [model, parameters, θ0], [parameters, θ0, equality], [θ0, equality, (], [equality, (, 17], [(, 17, )], [17, ), holds], [), holds, .]]

>> Noun Phrases are: 
[The ELBO, the log-likelihood, values, the model parameters θ0, for which equality]

>> Named Entities are: 
[('15', 'CARDINAL'), ('17', 'CARDINAL')]


============================ Sentence 605 =============================

 • Expectation, or E, step: For fixed parameter vector θold, solve the problem  maximize q  L(q, θold). 


>> Tokens are: 
[ , •, Expectation, ,, E, ,, step, :, fixed, parameter, vector, θold, ,, solve, problem,  , maximize, q,  , L(q, ,, θold, ), .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('•', 'PROPN'), ('Expectation', 'PROPN'), (',', 'PUNCT'), ('E', 'NOUN'), (',', 'PUNCT'), ('step', 'NOUN'), (':', 'PUNCT'), ('fixed', 'VERB'), ('parameter', 'NOUN'), ('vector', 'NOUN'), ('θold', 'NOUN'), (',', 'PUNCT'), ('solve', 'VERB'), ('problem', 'NOUN'), (' ', 'SPACE'), ('maximize', 'VERB'), ('q', 'PROPN'), (' ', 'SPACE'), ('L(q', 'X'), (',', 'PUNCT'), ('θold', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nsubj'), ('•', 'punct'), ('Expectation', 'conj'), (',', 'punct'), ('E', 'conj'), (',', 'punct'), ('step', 'appos'), (':', 'punct'), ('fixed', 'amod'), ('parameter', 'compound'), ('vector', 'compound'), ('θold', 'pobj'), (',', 'punct'), ('solve', 'ROOT'), ('problem', 'dobj'), (' ', 'nsubj'), ('maximize', 'relcl'), ('q', 'punct'), (' ', 'appos'), ('L(q', 'npadvmod'), (',', 'punct'), ('θold', 'conj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[ , •], [•, Expectation], [Expectation, ,], [,, E], [E, ,], [,, step], [step, :], [:, fixed], [fixed, parameter], [parameter, vector], [vector, θold], [θold, ,], [,, solve], [solve, problem], [problem,  ], [ , maximize], [maximize, q], [q,  ], [ , L(q], [L(q, ,], [,, θold], [θold, )], [), .]]

>> Trigrams: 
[[ , •, Expectation], [•, Expectation, ,], [Expectation, ,, E], [,, E, ,], [E, ,, step], [,, step, :], [step, :, fixed], [:, fixed, parameter], [fixed, parameter, vector], [parameter, vector, θold], [vector, θold, ,], [θold, ,, solve], [,, solve, problem], [solve, problem,  ], [problem,  , maximize], [ , maximize, q], [maximize, q,  ], [q,  , L(q], [ , L(q, ,], [L(q, ,, θold], [,, θold, )], [θold, ), .]]

>> Noun Phrases are: 
[Expectation, E, step, fixed parameter vector θold, the problem, θold]

>> Named Entities are: 
[]


============================ Sentence 606 =============================

(18)   


>> Tokens are: 
[(, 18, ),  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('18', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('18', 'ROOT'), (')', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[(, 18], [18, )], [),  ]]

>> Trigrams: 
[[(, 18, )], [18, ),  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('18', 'CARDINAL')]


============================ Sentence 607 =============================

The solution of this problem is given by qnew(z) 


>> Tokens are: 
[solution, problem, given, qnew(z, )] 

>> PoS Tags are: 
[('solution', 'NOUN'), ('problem', 'NOUN'), ('given', 'VERB'), ('qnew(z', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('solution', 'nsubjpass'), ('problem', 'pobj'), ('given', 'ROOT'), ('qnew(z', 'pobj'), (')', 'punct')]

>> Bigrams: 
[[solution, problem], [problem, given], [given, qnew(z], [qnew(z, )]]

>> Trigrams: 
[[solution, problem, given], [problem, given, qnew(z], [given, qnew(z, )]]

>> Noun Phrases are: 
[The solution, this problem, qnew(z]

>> Named Entities are: 
[]


============================ Sentence 608 =============================

= p(z|x, θold). 


>> Tokens are: 
[=, p(z|x, ,, θold, ), .] 

>> PoS Tags are: 
[('=', 'PUNCT'), ('p(z|x', 'PROPN'), (',', 'PUNCT'), ('θold', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('=', 'punct'), ('p(z|x', 'ROOT'), (',', 'punct'), ('θold', 'conj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[=, p(z|x], [p(z|x, ,], [,, θold], [θold, )], [), .]]

>> Trigrams: 
[[=, p(z|x, ,], [p(z|x, ,, θold], [,, θold, )], [θold, ), .]]

>> Noun Phrases are: 
[= p(z|x, θold]

>> Named Entities are: 
[]


============================ Sentence 609 =============================

In fact, as discussed, the tightest (i.e.--, largest) value of the ELBO is obtained by choosing the variational distribution q(z) as the posterior of the latent variables under the current model θold. 


>> Tokens are: 
[fact, ,, discussed, ,, tightest, (, i.e.--, ,, largest, ), value, ELBO, obtained, choosing, variational, distribution, q(z, ), posterior, latent, variables, current, model, θold, .] 

>> PoS Tags are: 
[('fact', 'NOUN'), (',', 'PUNCT'), ('discussed', 'VERB'), (',', 'PUNCT'), ('tightest', 'ADJ'), ('(', 'PUNCT'), ('i.e.--', 'X'), (',', 'PUNCT'), ('largest', 'ADJ'), (')', 'PUNCT'), ('value', 'NOUN'), ('ELBO', 'NOUN'), ('obtained', 'VERB'), ('choosing', 'VERB'), ('variational', 'ADJ'), ('distribution', 'NOUN'), ('q(z', 'X'), (')', 'PUNCT'), ('posterior', 'NOUN'), ('latent', 'NOUN'), ('variables', 'NOUN'), ('current', 'ADJ'), ('model', 'NOUN'), ('θold', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('fact', 'pobj'), (',', 'punct'), ('discussed', 'advcl'), (',', 'punct'), ('tightest', 'nsubjpass'), ('(', 'punct'), ('i.e.--', 'appos'), (',', 'punct'), ('largest', 'amod'), (')', 'punct'), ('value', 'appos'), ('ELBO', 'pobj'), ('obtained', 'ROOT'), ('choosing', 'pcomp'), ('variational', 'amod'), ('distribution', 'dobj'), ('q(z', 'appos'), (')', 'punct'), ('posterior', 'pobj'), ('latent', 'compound'), ('variables', 'pobj'), ('current', 'amod'), ('model', 'pobj'), ('θold', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[fact, ,], [,, discussed], [discussed, ,], [,, tightest], [tightest, (], [(, i.e.--], [i.e.--, ,], [,, largest], [largest, )], [), value], [value, ELBO], [ELBO, obtained], [obtained, choosing], [choosing, variational], [variational, distribution], [distribution, q(z], [q(z, )], [), posterior], [posterior, latent], [latent, variables], [variables, current], [current, model], [model, θold], [θold, .]]

>> Trigrams: 
[[fact, ,, discussed], [,, discussed, ,], [discussed, ,, tightest], [,, tightest, (], [tightest, (, i.e.--], [(, i.e.--, ,], [i.e.--, ,, largest], [,, largest, )], [largest, ), value], [), value, ELBO], [value, ELBO, obtained], [ELBO, obtained, choosing], [obtained, choosing, variational], [choosing, variational, distribution], [variational, distribution, q(z], [distribution, q(z, )], [q(z, ), posterior], [), posterior, latent], [posterior, latent, variables], [latent, variables, current], [variables, current, model], [current, model, θold], [model, θold, .]]

>> Noun Phrases are: 
[fact, , largest) value, the ELBO, the variational distribution, the posterior, the latent variables, the current model]

>> Named Entities are: 
[]


============================ Sentence 610 =============================

This step can be interpreted as estimating the latent variables z, via the predictive distribution p(z|x, θold), assuming that the current model θold is correct. 


>> Tokens are: 
[step, interpreted, estimating, latent, variables, z, ,, predictive, distribution, p(z|x, ,, θold, ), ,, assuming, current, model, θold, correct, .] 

>> PoS Tags are: 
[('step', 'NOUN'), ('interpreted', 'VERB'), ('estimating', 'VERB'), ('latent', 'NOUN'), ('variables', 'NOUN'), ('z', 'NOUN'), (',', 'PUNCT'), ('predictive', 'ADJ'), ('distribution', 'NOUN'), ('p(z|x', 'NOUN'), (',', 'PUNCT'), ('θold', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('assuming', 'VERB'), ('current', 'ADJ'), ('model', 'NOUN'), ('θold', 'NOUN'), ('correct', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('step', 'nsubjpass'), ('interpreted', 'ROOT'), ('estimating', 'pcomp'), ('latent', 'compound'), ('variables', 'dobj'), ('z', 'dep'), (',', 'punct'), ('predictive', 'amod'), ('distribution', 'pobj'), ('p(z|x', 'appos'), (',', 'punct'), ('θold', 'appos'), (')', 'punct'), (',', 'punct'), ('assuming', 'advcl'), ('current', 'amod'), ('model', 'nsubj'), ('θold', 'amod'), ('correct', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[step, interpreted], [interpreted, estimating], [estimating, latent], [latent, variables], [variables, z], [z, ,], [,, predictive], [predictive, distribution], [distribution, p(z|x], [p(z|x, ,], [,, θold], [θold, )], [), ,], [,, assuming], [assuming, current], [current, model], [model, θold], [θold, correct], [correct, .]]

>> Trigrams: 
[[step, interpreted, estimating], [interpreted, estimating, latent], [estimating, latent, variables], [latent, variables, z], [variables, z, ,], [z, ,, predictive], [,, predictive, distribution], [predictive, distribution, p(z|x], [distribution, p(z|x, ,], [p(z|x, ,, θold], [,, θold, )], [θold, ), ,], [), ,, assuming], [,, assuming, current], [assuming, current, model], [current, model, θold], [model, θold, correct], [θold, correct, .]]

>> Noun Phrases are: 
[This step, the latent variables, the predictive distribution, p(z|x, θold, the current model]

>> Named Entities are: 
[]


============================ Sentence 611 =============================

 • Maximization, or M, step: For fixed variational distribution qnew(z), solve the problem  maximize θ  L(qnew, θ) = Ez∼qnew(z) 


>> Tokens are: 
[ , •, Maximization, ,, M, ,, step, :, fixed, variational, distribution, qnew(z, ), ,, solve, problem,  , maximize, θ,  , L(qnew, ,, θ, ), =, Ez∼qnew(z, )] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('•', 'INTJ'), ('Maximization', 'PROPN'), (',', 'PUNCT'), ('M', 'NOUN'), (',', 'PUNCT'), ('step', 'NOUN'), (':', 'PUNCT'), ('fixed', 'VERB'), ('variational', 'ADJ'), ('distribution', 'NOUN'), ('qnew(z', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('solve', 'VERB'), ('problem', 'NOUN'), (' ', 'SPACE'), ('maximize', 'VERB'), ('θ', 'X'), (' ', 'SPACE'), ('L(qnew', 'NOUN'), (',', 'PUNCT'), ('θ', 'X'), (')', 'PUNCT'), ('=', 'SYM'), ('Ez∼qnew(z', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'dep'), ('•', 'punct'), ('Maximization', 'appos'), (',', 'punct'), ('M', 'conj'), (',', 'punct'), ('step', 'ROOT'), (':', 'punct'), ('fixed', 'amod'), ('variational', 'amod'), ('distribution', 'compound'), ('qnew(z', 'pobj'), (')', 'punct'), (',', 'punct'), ('solve', 'conj'), ('problem', 'dobj'), (' ', 'nsubj'), ('maximize', 'relcl'), ('θ', 'punct'), (' ', 'compound'), ('L(qnew', 'dobj'), (',', 'punct'), ('θ', 'prep'), (')', 'punct'), ('=', 'punct'), ('Ez∼qnew(z', 'appos'), (')', 'punct')]

>> Bigrams: 
[[ , •], [•, Maximization], [Maximization, ,], [,, M], [M, ,], [,, step], [step, :], [:, fixed], [fixed, variational], [variational, distribution], [distribution, qnew(z], [qnew(z, )], [), ,], [,, solve], [solve, problem], [problem,  ], [ , maximize], [maximize, θ], [θ,  ], [ , L(qnew], [L(qnew, ,], [,, θ], [θ, )], [), =], [=, Ez∼qnew(z], [Ez∼qnew(z, )]]

>> Trigrams: 
[[ , •, Maximization], [•, Maximization, ,], [Maximization, ,, M], [,, M, ,], [M, ,, step], [,, step, :], [step, :, fixed], [:, fixed, variational], [fixed, variational, distribution], [variational, distribution, qnew(z], [distribution, qnew(z, )], [qnew(z, ), ,], [), ,, solve], [,, solve, problem], [solve, problem,  ], [problem,  , maximize], [ , maximize, θ], [maximize, θ,  ], [θ,  , L(qnew], [ , L(qnew, ,], [L(qnew, ,, θ], [,, θ, )], [θ, ), =], [), =, Ez∼qnew(z], [=, Ez∼qnew(z, )]]

>> Noun Phrases are: 
[Maximization, M, fixed variational distribution qnew(z, the problem,  L(qnew, = Ez∼qnew(z]

>> Named Entities are: 
[]


============================ Sentence 612 =============================

[ln p(x, z|θ)] . 


>> Tokens are: 
[[, ln, p(x, ,, z|θ, ), ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('ln', 'INTJ'), ('p(x', 'PROPN'), (',', 'PUNCT'), ('z|θ', 'PROPN'), (')', 'PUNCT'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('ln', 'ROOT'), ('p(x', 'pobj'), (',', 'punct'), ('z|θ', 'appos'), (')', 'punct'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, ln], [ln, p(x], [p(x, ,], [,, z|θ], [z|θ, )], [), ]], [], .]]

>> Trigrams: 
[[[, ln, p(x], [ln, p(x, ,], [p(x, ,, z|θ], [,, z|θ, )], [z|θ, ), ]], [), ], .]]

>> Noun Phrases are: 
[p(x, z|θ]

>> Named Entities are: 
[('p(x', 'ORG'), ('z|θ', 'GPE')]


============================ Sentence 613 =============================

(19)   


>> Tokens are: 
[(, 19, ),  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('19', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('19', 'ROOT'), (')', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[(, 19], [19, )], [),  ]]

>> Trigrams: 
[[(, 19, )], [19, ),  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('19', 'CARDINAL')]


============================ Sentence 614 =============================

This optimization is akin to that carried out in the corresponding supervised learning problem with known latent variables z with the difference that these are randomly selected from the fixed varia- tional distribution qnew(z) obtained in the E step. 


>> Tokens are: 
[optimization, akin, carried, corresponding, supervised, learning, problem, known, latent, variables, z, difference, randomly, selected, fixed, varia-, tional, distribution, qnew(z, ), obtained, E, step, .] 

>> PoS Tags are: 
[('optimization', 'NOUN'), ('akin', 'ADJ'), ('carried', 'VERB'), ('corresponding', 'VERB'), ('supervised', 'ADJ'), ('learning', 'NOUN'), ('problem', 'NOUN'), ('known', 'VERB'), ('latent', 'NOUN'), ('variables', 'NOUN'), ('z', 'NOUN'), ('difference', 'NOUN'), ('randomly', 'ADV'), ('selected', 'VERB'), ('fixed', 'VERB'), ('varia-', 'ADJ'), ('tional', 'ADJ'), ('distribution', 'NOUN'), ('qnew(z', 'NOUN'), (')', 'PUNCT'), ('obtained', 'VERB'), ('E', 'NOUN'), ('step', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('optimization', 'nsubj'), ('akin', 'acomp'), ('carried', 'acl'), ('corresponding', 'amod'), ('supervised', 'amod'), ('learning', 'compound'), ('problem', 'pobj'), ('known', 'amod'), ('latent', 'compound'), ('variables', 'pobj'), ('z', 'dep'), ('difference', 'pobj'), ('randomly', 'advmod'), ('selected', 'acl'), ('fixed', 'amod'), ('varia-', 'amod'), ('tional', 'amod'), ('distribution', 'compound'), ('qnew(z', 'pobj'), (')', 'punct'), ('obtained', 'acl'), ('E', 'compound'), ('step', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[optimization, akin], [akin, carried], [carried, corresponding], [corresponding, supervised], [supervised, learning], [learning, problem], [problem, known], [known, latent], [latent, variables], [variables, z], [z, difference], [difference, randomly], [randomly, selected], [selected, fixed], [fixed, varia-], [varia-, tional], [tional, distribution], [distribution, qnew(z], [qnew(z, )], [), obtained], [obtained, E], [E, step], [step, .]]

>> Trigrams: 
[[optimization, akin, carried], [akin, carried, corresponding], [carried, corresponding, supervised], [corresponding, supervised, learning], [supervised, learning, problem], [learning, problem, known], [problem, known, latent], [known, latent, variables], [latent, variables, z], [variables, z, difference], [z, difference, randomly], [difference, randomly, selected], [randomly, selected, fixed], [selected, fixed, varia-], [fixed, varia-, tional], [varia-, tional, distribution], [tional, distribution, qnew(z], [distribution, qnew(z, )], [qnew(z, ), obtained], [), obtained, E], [obtained, E, step], [E, step, .]]

>> Noun Phrases are: 
[This optimization, the corresponding supervised learning problem, known latent variables, the difference, the fixed varia- tional distribution qnew(z, the E step]

>> Named Entities are: 
[]


============================ Sentence 615 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 616 =============================

Given that the EM algorithm maximizes at each step a lower bound on the log-likelihood that is tight at the current iterate θold, EM guarantees decreasing objective values along the iterations, which ensures convergence to a local optimum of the original problem. 


>> Tokens are: 
[Given, EM, algorithm, maximizes, step, lower, bound, log, -, likelihood, tight, current, iterate, θold, ,, EM, guarantees, decreasing, objective, values, iterations, ,, ensures, convergence, local, optimum, original, problem, .] 

>> PoS Tags are: 
[('Given', 'VERB'), ('EM', 'PROPN'), ('algorithm', 'NOUN'), ('maximizes', 'VERB'), ('step', 'NOUN'), ('lower', 'ADV'), ('bound', 'VERB'), ('log', 'NOUN'), ('-', 'PUNCT'), ('likelihood', 'NOUN'), ('tight', 'ADJ'), ('current', 'ADJ'), ('iterate', 'NOUN'), ('θold', 'NOUN'), (',', 'PUNCT'), ('EM', 'NOUN'), ('guarantees', 'VERB'), ('decreasing', 'VERB'), ('objective', 'ADJ'), ('values', 'NOUN'), ('iterations', 'NOUN'), (',', 'PUNCT'), ('ensures', 'VERB'), ('convergence', 'NOUN'), ('local', 'ADJ'), ('optimum', 'NOUN'), ('original', 'ADJ'), ('problem', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Given', 'prep'), ('EM', 'compound'), ('algorithm', 'nsubj'), ('maximizes', 'pcomp'), ('step', 'pobj'), ('lower', 'advmod'), ('bound', 'advcl'), ('log', 'compound'), ('-', 'punct'), ('likelihood', 'pobj'), ('tight', 'acomp'), ('current', 'amod'), ('iterate', 'compound'), ('θold', 'pobj'), (',', 'punct'), ('EM', 'nsubj'), ('guarantees', 'ROOT'), ('decreasing', 'xcomp'), ('objective', 'amod'), ('values', 'dobj'), ('iterations', 'pobj'), (',', 'punct'), ('ensures', 'relcl'), ('convergence', 'dobj'), ('local', 'amod'), ('optimum', 'pobj'), ('original', 'amod'), ('problem', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Given, EM], [EM, algorithm], [algorithm, maximizes], [maximizes, step], [step, lower], [lower, bound], [bound, log], [log, -], [-, likelihood], [likelihood, tight], [tight, current], [current, iterate], [iterate, θold], [θold, ,], [,, EM], [EM, guarantees], [guarantees, decreasing], [decreasing, objective], [objective, values], [values, iterations], [iterations, ,], [,, ensures], [ensures, convergence], [convergence, local], [local, optimum], [optimum, original], [original, problem], [problem, .]]

>> Trigrams: 
[[Given, EM, algorithm], [EM, algorithm, maximizes], [algorithm, maximizes, step], [maximizes, step, lower], [step, lower, bound], [lower, bound, log], [bound, log, -], [log, -, likelihood], [-, likelihood, tight], [likelihood, tight, current], [tight, current, iterate], [current, iterate, θold], [iterate, θold, ,], [θold, ,, EM], [,, EM, guarantees], [EM, guarantees, decreasing], [guarantees, decreasing, objective], [decreasing, objective, values], [objective, values, iterations], [values, iterations, ,], [iterations, ,, ensures], [,, ensures, convergence], [ensures, convergence, local], [convergence, local, optimum], [local, optimum, original], [optimum, original, problem], [original, problem, .]]

>> Noun Phrases are: 
[the EM algorithm, each step, the log-likelihood, the current iterate θold, EM, objective values, the iterations, convergence, a local optimum, the original problem]

>> Named Entities are: 
[('EM', 'ORG'), ('EM', 'ORG')]


============================ Sentence 617 =============================

We refer to [57], [58] for detailed examples. 


>> Tokens are: 
[refer, [, 57, ], ,, [, 58, ], detailed, examples, .] 

>> PoS Tags are: 
[('refer', 'VERB'), ('[', 'PUNCT'), ('57', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('[', 'PUNCT'), ('58', 'NUM'), (']', 'PUNCT'), ('detailed', 'ADJ'), ('examples', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('refer', 'ROOT'), ('[', 'pobj'), ('57', 'pobj'), (']', 'punct'), (',', 'punct'), ('[', 'npadvmod'), ('58', 'dep'), (']', 'punct'), ('detailed', 'amod'), ('examples', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[refer, [], [[, 57], [57, ]], [], ,], [,, [], [[, 58], [58, ]], [], detailed], [detailed, examples], [examples, .]]

>> Trigrams: 
[[refer, [, 57], [[, 57, ]], [57, ], ,], [], ,, [], [,, [, 58], [[, 58, ]], [58, ], detailed], [], detailed, examples], [detailed, examples, .]]

>> Noun Phrases are: 
[We, detailed examples]

>> Named Entities are: 
[('57', 'CARDINAL'), ('58', 'CARDINAL')]


============================ Sentence 618 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 619 =============================

The EM algorithm is generally impractical for large- scale problems due to the complexity of computing the posterior of the latent variables in the E step and of averaging over such distribution in the M step. 


>> Tokens are: 
[EM, algorithm, generally, impractical, large-, scale, problems, complexity, computing, posterior, latent, variables, E, step, averaging, distribution, M, step, .] 

>> PoS Tags are: 
[('EM', 'PROPN'), ('algorithm', 'NOUN'), ('generally', 'ADV'), ('impractical', 'ADJ'), ('large-', 'ADJ'), ('scale', 'NOUN'), ('problems', 'NOUN'), ('complexity', 'NOUN'), ('computing', 'VERB'), ('posterior', 'NOUN'), ('latent', 'NOUN'), ('variables', 'NOUN'), ('E', 'NOUN'), ('step', 'NOUN'), ('averaging', 'VERB'), ('distribution', 'NOUN'), ('M', 'PROPN'), ('step', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('EM', 'compound'), ('algorithm', 'nsubj'), ('generally', 'advmod'), ('impractical', 'acomp'), ('large-', 'amod'), ('scale', 'compound'), ('problems', 'pobj'), ('complexity', 'pobj'), ('computing', 'pcomp'), ('posterior', 'dobj'), ('latent', 'compound'), ('variables', 'pobj'), ('E', 'compound'), ('step', 'pobj'), ('averaging', 'pcomp'), ('distribution', 'pobj'), ('M', 'compound'), ('step', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[EM, algorithm], [algorithm, generally], [generally, impractical], [impractical, large-], [large-, scale], [scale, problems], [problems, complexity], [complexity, computing], [computing, posterior], [posterior, latent], [latent, variables], [variables, E], [E, step], [step, averaging], [averaging, distribution], [distribution, M], [M, step], [step, .]]

>> Trigrams: 
[[EM, algorithm, generally], [algorithm, generally, impractical], [generally, impractical, large-], [impractical, large-, scale], [large-, scale, problems], [scale, problems, complexity], [problems, complexity, computing], [complexity, computing, posterior], [computing, posterior, latent], [posterior, latent, variables], [latent, variables, E], [variables, E, step], [E, step, averaging], [step, averaging, distribution], [averaging, distribution, M], [distribution, M, step], [M, step, .]]

>> Noun Phrases are: 
[The EM algorithm, large- scale problems, the complexity, the posterior, the latent variables, the E step, such distribution, the M step]

>> Named Entities are: 
[('EM', 'ORG')]


============================ Sentence 620 =============================

Many state-of-the-art solutions to the problem of unsupervised  ... 


>> Tokens are: 
[state, -, -, -, art, solutions, problem, unsupervised,  , ...] 

>> PoS Tags are: 
[('state', 'NOUN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('art', 'NOUN'), ('solutions', 'NOUN'), ('problem', 'NOUN'), ('unsupervised', 'ADJ'), (' ', 'SPACE'), ('...', 'PUNCT')] 

>> Dependency Tags are: 
[('state', 'nmod'), ('-', 'punct'), ('-', 'punct'), ('-', 'punct'), ('art', 'pobj'), ('solutions', 'ROOT'), ('problem', 'pobj'), ('unsupervised', 'amod'), (' ', 'pobj'), ('...', 'punct')]

>> Bigrams: 
[[state, -], [-, -], [-, -], [-, art], [art, solutions], [solutions, problem], [problem, unsupervised], [unsupervised,  ], [ , ...]]

>> Trigrams: 
[[state, -, -], [-, -, -], [-, -, art], [-, art, solutions], [art, solutions, problem], [solutions, problem, unsupervised], [problem, unsupervised,  ], [unsupervised,  , ...]]

>> Noun Phrases are: 
[the-art, the problem]

>> Named Entities are: 
[]


============================ Sentence 621 =============================

 LL  newold   


>> Tokens are: 
[ , LL,  , newold,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('LL', 'PROPN'), (' ', 'SPACE'), ('newold', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('LL', 'ROOT'), (' ', 'appos'), ('newold', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[ , LL], [LL,  ], [ , newold], [newold,  ]]

>> Trigrams: 
[[ , LL,  ], [LL,  , newold], [ , newold,  ]]

>> Noun Phrases are: 
[ LL, newold]

>> Named Entities are: 
[]


============================ Sentence 622 =============================

Fig. 13. 


>> Tokens are: 
[Fig, ., 13, .] 

>> PoS Tags are: 
[('Fig', 'PROPN'), ('.', 'PUNCT'), ('13', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Fig', 'ROOT'), ('.', 'punct'), ('13', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[Fig, .], [., 13], [13, .]]

>> Trigrams: 
[[Fig, ., 13], [., 13, .]]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON'), ('13', 'CARDINAL')]


============================ Sentence 623 =============================

Illustration of the EM algorithm: 


>> Tokens are: 
[Illustration, EM, algorithm, :] 

>> PoS Tags are: 
[('Illustration', 'NOUN'), ('EM', 'PROPN'), ('algorithm', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Illustration', 'ROOT'), ('EM', 'compound'), ('algorithm', 'pobj'), (':', 'punct')]

>> Bigrams: 
[[Illustration, EM], [EM, algorithm], [algorithm, :]]

>> Trigrams: 
[[Illustration, EM, algorithm], [EM, algorithm, :]]

>> Noun Phrases are: 
[Illustration, the EM algorithm]

>> Named Entities are: 
[('EM', 'ORG')]


============================ Sentence 624 =============================

At each iteration, a tight ELBO is evaluated in the E step by solving the problem of estimating the latent variables (via the posterior distribution p(z|x, θ)), and then the ELBO is maximized in the M step by solving a problem akin to supervised learning with the estimated latent variables. 


>> Tokens are: 
[iteration, ,, tight, ELBO, evaluated, E, step, solving, problem, estimating, latent, variables, (, posterior, distribution, p(z|x, ,, θ, ), ), ,, ELBO, maximized, M, step, solving, problem, akin, supervised, learning, estimated, latent, variables, .] 

>> PoS Tags are: 
[('iteration', 'NOUN'), (',', 'PUNCT'), ('tight', 'ADJ'), ('ELBO', 'NOUN'), ('evaluated', 'VERB'), ('E', 'NOUN'), ('step', 'NOUN'), ('solving', 'VERB'), ('problem', 'NOUN'), ('estimating', 'VERB'), ('latent', 'NOUN'), ('variables', 'NOUN'), ('(', 'PUNCT'), ('posterior', 'ADJ'), ('distribution', 'NOUN'), ('p(z|x', 'NUM'), (',', 'PUNCT'), ('θ', 'X'), (')', 'PUNCT'), (')', 'PUNCT'), (',', 'PUNCT'), ('ELBO', 'NOUN'), ('maximized', 'VERB'), ('M', 'PROPN'), ('step', 'NOUN'), ('solving', 'VERB'), ('problem', 'NOUN'), ('akin', 'ADJ'), ('supervised', 'ADJ'), ('learning', 'NOUN'), ('estimated', 'VERB'), ('latent', 'NOUN'), ('variables', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('iteration', 'pobj'), (',', 'punct'), ('tight', 'amod'), ('ELBO', 'nsubjpass'), ('evaluated', 'ROOT'), ('E', 'compound'), ('step', 'pobj'), ('solving', 'pcomp'), ('problem', 'dobj'), ('estimating', 'pcomp'), ('latent', 'compound'), ('variables', 'dobj'), ('(', 'punct'), ('posterior', 'amod'), ('distribution', 'pobj'), ('p(z|x', 'appos'), (',', 'punct'), ('θ', 'dep'), (')', 'punct'), (')', 'punct'), (',', 'punct'), ('ELBO', 'nsubjpass'), ('maximized', 'conj'), ('M', 'compound'), ('step', 'pobj'), ('solving', 'pcomp'), ('problem', 'dobj'), ('akin', 'amod'), ('supervised', 'amod'), ('learning', 'pobj'), ('estimated', 'amod'), ('latent', 'compound'), ('variables', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[iteration, ,], [,, tight], [tight, ELBO], [ELBO, evaluated], [evaluated, E], [E, step], [step, solving], [solving, problem], [problem, estimating], [estimating, latent], [latent, variables], [variables, (], [(, posterior], [posterior, distribution], [distribution, p(z|x], [p(z|x, ,], [,, θ], [θ, )], [), )], [), ,], [,, ELBO], [ELBO, maximized], [maximized, M], [M, step], [step, solving], [solving, problem], [problem, akin], [akin, supervised], [supervised, learning], [learning, estimated], [estimated, latent], [latent, variables], [variables, .]]

>> Trigrams: 
[[iteration, ,, tight], [,, tight, ELBO], [tight, ELBO, evaluated], [ELBO, evaluated, E], [evaluated, E, step], [E, step, solving], [step, solving, problem], [solving, problem, estimating], [problem, estimating, latent], [estimating, latent, variables], [latent, variables, (], [variables, (, posterior], [(, posterior, distribution], [posterior, distribution, p(z|x], [distribution, p(z|x, ,], [p(z|x, ,, θ], [,, θ, )], [θ, ), )], [), ), ,], [), ,, ELBO], [,, ELBO, maximized], [ELBO, maximized, M], [maximized, M, step], [M, step, solving], [step, solving, problem], [solving, problem, akin], [problem, akin, supervised], [akin, supervised, learning], [supervised, learning, estimated], [learning, estimated, latent], [estimated, latent, variables], [latent, variables, .]]

>> Noun Phrases are: 
[each iteration, a tight ELBO, the E step, the problem, the latent variables, the posterior distribution, the ELBO, the M step, a problem, supervised learning, the estimated latent variables]

>> Named Entities are: 
[]


============================ Sentence 625 =============================

 learning with probabilistic models entail some approxi- mation of the EM algorithm. 


>> Tokens are: 
[ , learning, probabilistic, models, entail, approxi-, mation, EM, algorithm, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('learning', 'VERB'), ('probabilistic', 'ADJ'), ('models', 'NOUN'), ('entail', 'VERB'), ('approxi-', 'NOUN'), ('mation', 'NOUN'), ('EM', 'PROPN'), ('algorithm', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nsubj'), ('learning', 'acl'), ('probabilistic', 'amod'), ('models', 'pobj'), ('entail', 'ROOT'), ('approxi-', 'compound'), ('mation', 'dobj'), ('EM', 'compound'), ('algorithm', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , learning], [learning, probabilistic], [probabilistic, models], [models, entail], [entail, approxi-], [approxi-, mation], [mation, EM], [EM, algorithm], [algorithm, .]]

>> Trigrams: 
[[ , learning, probabilistic], [learning, probabilistic, models], [probabilistic, models, entail], [models, entail, approxi-], [entail, approxi-, mation], [approxi-, mation, EM], [mation, EM, algorithm], [EM, algorithm, .]]

>> Noun Phrases are: 
[probabilistic models, some approxi- mation, the EM algorithm]

>> Named Entities are: 
[('EM', 'ORG')]


============================ Sentence 626 =============================

Notably, the E step can be approximated by parametrizing the variational distribu- tion with some function q(z|ϕ), or q(z|x, ϕ) to include the dependence on x, and by maximizing ELBO over the variational parameters ϕ. This approach underlies the popular variational autoencoder technique [7]. 


>> Tokens are: 
[Notably, ,, E, step, approximated, parametrizing, variational, distribu-, tion, function, q(z|ϕ, ), ,, q(z|x, ,, ϕ, ), include, dependence, x, ,, maximizing, ELBO, variational, parameters, ϕ., approach, underlies, popular, variational, autoencoder, technique, [, 7, ], .] 

>> PoS Tags are: 
[('Notably', 'ADV'), (',', 'PUNCT'), ('E', 'NOUN'), ('step', 'NOUN'), ('approximated', 'VERB'), ('parametrizing', 'VERB'), ('variational', 'ADJ'), ('distribu-', 'NOUN'), ('tion', 'NOUN'), ('function', 'NOUN'), ('q(z|ϕ', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('q(z|x', 'INTJ'), (',', 'PUNCT'), ('ϕ', 'NOUN'), (')', 'PUNCT'), ('include', 'VERB'), ('dependence', 'NOUN'), ('x', 'NUM'), (',', 'PUNCT'), ('maximizing', 'VERB'), ('ELBO', 'NOUN'), ('variational', 'ADJ'), ('parameters', 'NOUN'), ('ϕ.', 'VERB'), ('approach', 'NOUN'), ('underlies', 'VERB'), ('popular', 'ADJ'), ('variational', 'ADJ'), ('autoencoder', 'NOUN'), ('technique', 'NOUN'), ('[', 'PUNCT'), ('7', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Notably', 'advmod'), (',', 'punct'), ('E', 'compound'), ('step', 'nsubjpass'), ('approximated', 'ROOT'), ('parametrizing', 'pcomp'), ('variational', 'amod'), ('distribu-', 'compound'), ('tion', 'dobj'), ('function', 'pobj'), ('q(z|ϕ', 'appos'), (')', 'punct'), (',', 'punct'), ('q(z|x', 'conj'), (',', 'punct'), ('ϕ', 'appos'), (')', 'punct'), ('include', 'advcl'), ('dependence', 'dobj'), ('x', 'pobj'), (',', 'punct'), ('maximizing', 'pcomp'), ('ELBO', 'dobj'), ('variational', 'amod'), ('parameters', 'pobj'), ('ϕ.', 'conj'), ('approach', 'nsubj'), ('underlies', 'conj'), ('popular', 'amod'), ('variational', 'amod'), ('autoencoder', 'compound'), ('technique', 'dobj'), ('[', 'punct'), ('7', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Notably, ,], [,, E], [E, step], [step, approximated], [approximated, parametrizing], [parametrizing, variational], [variational, distribu-], [distribu-, tion], [tion, function], [function, q(z|ϕ], [q(z|ϕ, )], [), ,], [,, q(z|x], [q(z|x, ,], [,, ϕ], [ϕ, )], [), include], [include, dependence], [dependence, x], [x, ,], [,, maximizing], [maximizing, ELBO], [ELBO, variational], [variational, parameters], [parameters, ϕ.], [ϕ., approach], [approach, underlies], [underlies, popular], [popular, variational], [variational, autoencoder], [autoencoder, technique], [technique, [], [[, 7], [7, ]], [], .]]

>> Trigrams: 
[[Notably, ,, E], [,, E, step], [E, step, approximated], [step, approximated, parametrizing], [approximated, parametrizing, variational], [parametrizing, variational, distribu-], [variational, distribu-, tion], [distribu-, tion, function], [tion, function, q(z|ϕ], [function, q(z|ϕ, )], [q(z|ϕ, ), ,], [), ,, q(z|x], [,, q(z|x, ,], [q(z|x, ,, ϕ], [,, ϕ, )], [ϕ, ), include], [), include, dependence], [include, dependence, x], [dependence, x, ,], [x, ,, maximizing], [,, maximizing, ELBO], [maximizing, ELBO, variational], [ELBO, variational, parameters], [variational, parameters, ϕ.], [parameters, ϕ., approach], [ϕ., approach, underlies], [approach, underlies, popular], [underlies, popular, variational], [popular, variational, autoencoder], [variational, autoencoder, technique], [autoencoder, technique, [], [technique, [, 7], [[, 7, ]], [7, ], .]]

>> Noun Phrases are: 
[the E step, the variational distribu- tion, some function, q(z|ϕ, ϕ, the dependence, ELBO, the variational parameters, This approach, the popular variational autoencoder technique]

>> Named Entities are: 
[('q(z|x', 'CARDINAL')]


============================ Sentence 627 =============================

In the M step, instead, one can approximate the expectation in (19) using Monte Carlo stochastic approximation based on randomly sampled values of z from the current distribution q(z). 


>> Tokens are: 
[M, step, ,, instead, ,, approximate, expectation, (, 19, ), Monte, Carlo, stochastic, approximation, based, randomly, sampled, values, z, current, distribution, q(z, ), .] 

>> PoS Tags are: 
[('M', 'PROPN'), ('step', 'NOUN'), (',', 'PUNCT'), ('instead', 'ADV'), (',', 'PUNCT'), ('approximate', 'VERB'), ('expectation', 'NOUN'), ('(', 'PUNCT'), ('19', 'NUM'), (')', 'PUNCT'), ('Monte', 'PROPN'), ('Carlo', 'PROPN'), ('stochastic', 'NOUN'), ('approximation', 'NOUN'), ('based', 'VERB'), ('randomly', 'ADV'), ('sampled', 'VERB'), ('values', 'NOUN'), ('z', 'DET'), ('current', 'ADJ'), ('distribution', 'NOUN'), ('q(z', 'X'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('M', 'compound'), ('step', 'pobj'), (',', 'punct'), ('instead', 'advmod'), (',', 'punct'), ('approximate', 'ROOT'), ('expectation', 'dobj'), ('(', 'punct'), ('19', 'pobj'), (')', 'punct'), ('Monte', 'compound'), ('Carlo', 'compound'), ('stochastic', 'compound'), ('approximation', 'dobj'), ('based', 'acl'), ('randomly', 'advmod'), ('sampled', 'amod'), ('values', 'pobj'), ('z', 'pobj'), ('current', 'amod'), ('distribution', 'pobj'), ('q(z', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[M, step], [step, ,], [,, instead], [instead, ,], [,, approximate], [approximate, expectation], [expectation, (], [(, 19], [19, )], [), Monte], [Monte, Carlo], [Carlo, stochastic], [stochastic, approximation], [approximation, based], [based, randomly], [randomly, sampled], [sampled, values], [values, z], [z, current], [current, distribution], [distribution, q(z], [q(z, )], [), .]]

>> Trigrams: 
[[M, step, ,], [step, ,, instead], [,, instead, ,], [instead, ,, approximate], [,, approximate, expectation], [approximate, expectation, (], [expectation, (, 19], [(, 19, )], [19, ), Monte], [), Monte, Carlo], [Monte, Carlo, stochastic], [Carlo, stochastic, approximation], [stochastic, approximation, based], [approximation, based, randomly], [based, randomly, sampled], [randomly, sampled, values], [sampled, values, z], [values, z, current], [z, current, distribution], [current, distribution, q(z], [distribution, q(z, )], [q(z, ), .]]

>> Noun Phrases are: 
[the M step, one, the expectation, Monte Carlo stochastic approximation, randomly sampled values, the current distribution]

>> Named Entities are: 
[('19', 'CARDINAL'), ('Monte Carlo', 'PERSON')]


============================ Sentence 628 =============================

Finally, gradient descent can be used to carry out the mentioned optimizations for both E and M steps (see, e.g.--.-, [62]). 


>> Tokens are: 
[Finally, ,, gradient, descent, carry, mentioned, optimizations, E, M, steps, (, ,, e.g.--.-, ,, [, 62, ], ), .] 

>> PoS Tags are: 
[('Finally', 'ADV'), (',', 'PUNCT'), ('gradient', 'ADJ'), ('descent', 'NOUN'), ('carry', 'VERB'), ('mentioned', 'VERB'), ('optimizations', 'NOUN'), ('E', 'PROPN'), ('M', 'PROPN'), ('steps', 'NOUN'), ('(', 'PUNCT'), (',', 'PUNCT'), ('e.g.--.-', 'X'), (',', 'PUNCT'), ('[', 'PUNCT'), ('62', 'NUM'), (']', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Finally', 'advmod'), (',', 'punct'), ('gradient', 'amod'), ('descent', 'nsubjpass'), ('carry', 'xcomp'), ('mentioned', 'amod'), ('optimizations', 'dobj'), ('E', 'nmod'), ('M', 'conj'), ('steps', 'pobj'), ('(', 'punct'), (',', 'punct'), ('e.g.--.-', 'dep'), (',', 'punct'), ('[', 'punct'), ('62', 'dep'), (']', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Finally, ,], [,, gradient], [gradient, descent], [descent, carry], [carry, mentioned], [mentioned, optimizations], [optimizations, E], [E, M], [M, steps], [steps, (], [(, ,], [,, e.g.--.-], [e.g.--.-, ,], [,, [], [[, 62], [62, ]], [], )], [), .]]

>> Trigrams: 
[[Finally, ,, gradient], [,, gradient, descent], [gradient, descent, carry], [descent, carry, mentioned], [carry, mentioned, optimizations], [mentioned, optimizations, E], [optimizations, E, M], [E, M, steps], [M, steps, (], [steps, (, ,], [(, ,, e.g.--.-], [,, e.g.--.-, ,], [e.g.--.-, ,, [], [,, [, 62], [[, 62, ]], [62, ], )], [], ), .]]

>> Noun Phrases are: 
[gradient descent, the mentioned optimizations, both E and M steps]

>> Named Entities are: 
[('62', 'CARDINAL')]


============================ Sentence 629 =============================

 D. Advanced Learning Methods  As discussed in the previous section, ML is generally prone to overfitting for supervised learning. 


>> Tokens are: 
[ , D., Advanced, Learning, Methods,  , discussed, previous, section, ,, ML, generally, prone, overfitting, supervised, learning, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('D.', 'PROPN'), ('Advanced', 'PROPN'), ('Learning', 'PROPN'), ('Methods', 'PROPN'), (' ', 'SPACE'), ('discussed', 'VERB'), ('previous', 'ADJ'), ('section', 'NOUN'), (',', 'PUNCT'), ('ML', 'PROPN'), ('generally', 'ADV'), ('prone', 'ADJ'), ('overfitting', 'VERB'), ('supervised', 'ADJ'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('D.', 'compound'), ('Advanced', 'compound'), ('Learning', 'compound'), ('Methods', 'nsubj'), (' ', 'appos'), ('discussed', 'advcl'), ('previous', 'amod'), ('section', 'pobj'), (',', 'punct'), ('ML', 'nsubj'), ('generally', 'advmod'), ('prone', 'acomp'), ('overfitting', 'pcomp'), ('supervised', 'amod'), ('learning', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , D.], [D., Advanced], [Advanced, Learning], [Learning, Methods], [Methods,  ], [ , discussed], [discussed, previous], [previous, section], [section, ,], [,, ML], [ML, generally], [generally, prone], [prone, overfitting], [overfitting, supervised], [supervised, learning], [learning, .]]

>> Trigrams: 
[[ , D., Advanced], [D., Advanced, Learning], [Advanced, Learning, Methods], [Learning, Methods,  ], [Methods,  , discussed], [ , discussed, previous], [discussed, previous, section], [previous, section, ,], [section, ,, ML], [,, ML, generally], [ML, generally, prone], [generally, prone, overfitting], [prone, overfitting, supervised], [overfitting, supervised, learning], [supervised, learning, .]]

>> Noun Phrases are: 
[ D. Advanced Learning Methods, the previous section, ML, supervised learning]

>> Named Entities are: 
[('ML', 'ORG')]


============================ Sentence 630 =============================

For unsu- pervised learning, the performance of ML depends on the task of interest. 


>> Tokens are: 
[unsu-, pervised, learning, ,, performance, ML, depends, task, interest, .] 

>> PoS Tags are: 
[('unsu-', 'ADJ'), ('pervised', 'VERB'), ('learning', 'NOUN'), (',', 'PUNCT'), ('performance', 'NOUN'), ('ML', 'PROPN'), ('depends', 'VERB'), ('task', 'NOUN'), ('interest', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('unsu-', 'amod'), ('pervised', 'amod'), ('learning', 'pobj'), (',', 'punct'), ('performance', 'nsubj'), ('ML', 'pobj'), ('depends', 'ROOT'), ('task', 'pobj'), ('interest', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[unsu-, pervised], [pervised, learning], [learning, ,], [,, performance], [performance, ML], [ML, depends], [depends, task], [task, interest], [interest, .]]

>> Trigrams: 
[[unsu-, pervised, learning], [pervised, learning, ,], [learning, ,, performance], [,, performance, ML], [performance, ML, depends], [ML, depends, task], [depends, task, interest], [task, interest, .]]

>> Noun Phrases are: 
[unsu- pervised learning, the performance, ML, the task, interest]

>> Named Entities are: 
[('ML', 'ORG')]


============================ Sentence 631 =============================

For example, consider the tasks of density estimation or of generation of new samples (see Sec V-A). 


>> Tokens are: 
[example, ,, consider, tasks, density, estimation, generation, new, samples, (, Sec, V, -, ), .] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), ('consider', 'VERB'), ('tasks', 'NOUN'), ('density', 'NOUN'), ('estimation', 'NOUN'), ('generation', 'NOUN'), ('new', 'ADJ'), ('samples', 'NOUN'), ('(', 'PUNCT'), ('Sec', 'PROPN'), ('V', 'PROPN'), ('-', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct'), ('consider', 'ROOT'), ('tasks', 'dobj'), ('density', 'compound'), ('estimation', 'pobj'), ('generation', 'pobj'), ('new', 'amod'), ('samples', 'pobj'), ('(', 'punct'), ('Sec', 'compound'), ('V', 'compound'), ('-', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[example, ,], [,, consider], [consider, tasks], [tasks, density], [density, estimation], [estimation, generation], [generation, new], [new, samples], [samples, (], [(, Sec], [Sec, V], [V, -], [-, )], [), .]]

>> Trigrams: 
[[example, ,, consider], [,, consider, tasks], [consider, tasks, density], [tasks, density, estimation], [density, estimation, generation], [estimation, generation, new], [generation, new, samples], [new, samples, (], [samples, (, Sec], [(, Sec, V], [Sec, V, -], [V, -, )], [-, ), .]]

>> Noun Phrases are: 
[example, the tasks, density estimation, generation, new samples, Sec V-A]

>> Named Entities are: 
[('Sec V-A', 'PERSON')]


============================ Sentence 632 =============================

In order to illustrate some of the typical issues encountered when applying the ML criterion, in Fig. 


>> Tokens are: 
[order, illustrate, typical, issues, encountered, applying, ML, criterion, ,, Fig, .] 

>> PoS Tags are: 
[('order', 'NOUN'), ('illustrate', 'VERB'), ('typical', 'ADJ'), ('issues', 'NOUN'), ('encountered', 'VERB'), ('applying', 'VERB'), ('ML', 'PROPN'), ('criterion', 'NOUN'), (',', 'PUNCT'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('order', 'pobj'), ('illustrate', 'acl'), ('typical', 'amod'), ('issues', 'pobj'), ('encountered', 'acl'), ('applying', 'advcl'), ('ML', 'compound'), ('criterion', 'dobj'), (',', 'punct'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[order, illustrate], [illustrate, typical], [typical, issues], [issues, encountered], [encountered, applying], [applying, ML], [ML, criterion], [criterion, ,], [,, Fig], [Fig, .]]

>> Trigrams: 
[[order, illustrate, typical], [illustrate, typical, issues], [typical, issues, encountered], [issues, encountered, applying], [encountered, applying, ML], [applying, ML, criterion], [ML, criterion, ,], [criterion, ,, Fig], [,, Fig, .]]

>> Noun Phrases are: 
[order, the typical issues, the ML criterion, Fig]

>> Named Entities are: 
[('ML', 'FAC'), ('Fig', 'PERSON')]


============================ Sentence 633 =============================

14 we report a numerical result for a problem in which the true data distribution p(x) is multi-modal and the model distribution p(x|θ) is assumed to be a mixture of Gaussians, i.e.--, a directed generative model. 


>> Tokens are: 
[14, report, numerical, result, problem, true, data, distribution, p(x, ), multi, -, modal, model, distribution, p(x|θ, ), assumed, mixture, Gaussians, ,, i.e.--, ,, directed, generative, model, .] 

>> PoS Tags are: 
[('14', 'NUM'), ('report', 'VERB'), ('numerical', 'ADJ'), ('result', 'NOUN'), ('problem', 'NOUN'), ('true', 'ADJ'), ('data', 'NOUN'), ('distribution', 'NOUN'), ('p(x', 'PROPN'), (')', 'PUNCT'), ('multi', 'ADJ'), ('-', 'ADJ'), ('modal', 'ADJ'), ('model', 'NOUN'), ('distribution', 'NOUN'), ('p(x|θ', 'ADV'), (')', 'PUNCT'), ('assumed', 'VERB'), ('mixture', 'NOUN'), ('Gaussians', 'PROPN'), (',', 'PUNCT'), ('i.e.--', 'X'), (',', 'PUNCT'), ('directed', 'VERB'), ('generative', 'ADJ'), ('model', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('14', 'nsubjpass'), ('report', 'relcl'), ('numerical', 'amod'), ('result', 'dobj'), ('problem', 'pobj'), ('true', 'amod'), ('data', 'compound'), ('distribution', 'nsubj'), ('p(x', 'appos'), (')', 'punct'), ('multi', 'acomp'), ('-', 'acomp'), ('modal', 'acomp'), ('model', 'compound'), ('distribution', 'conj'), ('p(x|θ', 'intj'), (')', 'punct'), ('assumed', 'ROOT'), ('mixture', 'attr'), ('Gaussians', 'pobj'), (',', 'punct'), ('i.e.--', 'punct'), (',', 'punct'), ('directed', 'amod'), ('generative', 'amod'), ('model', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[14, report], [report, numerical], [numerical, result], [result, problem], [problem, true], [true, data], [data, distribution], [distribution, p(x], [p(x, )], [), multi], [multi, -], [-, modal], [modal, model], [model, distribution], [distribution, p(x|θ], [p(x|θ, )], [), assumed], [assumed, mixture], [mixture, Gaussians], [Gaussians, ,], [,, i.e.--], [i.e.--, ,], [,, directed], [directed, generative], [generative, model], [model, .]]

>> Trigrams: 
[[14, report, numerical], [report, numerical, result], [numerical, result, problem], [result, problem, true], [problem, true, data], [true, data, distribution], [data, distribution, p(x], [distribution, p(x, )], [p(x, ), multi], [), multi, -], [multi, -, modal], [-, modal, model], [modal, model, distribution], [model, distribution, p(x|θ], [distribution, p(x|θ, )], [p(x|θ, ), assumed], [), assumed, mixture], [assumed, mixture, Gaussians], [mixture, Gaussians, ,], [Gaussians, ,, i.e.--], [,, i.e.--, ,], [i.e.--, ,, directed], [,, directed, generative], [directed, generative, model], [generative, model, .]]

>> Noun Phrases are: 
[we, a numerical result, a problem, the true data distribution, p(x, a mixture, Gaussians, a directed generative model]

>> Named Entities are: 
[('14', 'CARDINAL'), ('p(x', 'ORG'), ('Gaussians', 'NORP')]


============================ Sentence 634 =============================

The ML problem is tackled by using EM based on samples generated from the true distribution (see [19] for details). 


>> Tokens are: 
[ML, problem, tackled, EM, based, samples, generated, true, distribution, (, [, 19, ], details, ), .] 

>> PoS Tags are: 
[('ML', 'PROPN'), ('problem', 'NOUN'), ('tackled', 'VERB'), ('EM', 'PROPN'), ('based', 'VERB'), ('samples', 'NOUN'), ('generated', 'VERB'), ('true', 'ADJ'), ('distribution', 'NOUN'), ('(', 'PUNCT'), ('[', 'PUNCT'), ('19', 'NUM'), (']', 'PUNCT'), ('details', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ML', 'compound'), ('problem', 'nsubjpass'), ('tackled', 'ROOT'), ('EM', 'dobj'), ('based', 'prep'), ('samples', 'pobj'), ('generated', 'acl'), ('true', 'amod'), ('distribution', 'pobj'), ('(', 'punct'), ('[', 'punct'), ('19', 'dep'), (']', 'punct'), ('details', 'pobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[ML, problem], [problem, tackled], [tackled, EM], [EM, based], [based, samples], [samples, generated], [generated, true], [true, distribution], [distribution, (], [(, [], [[, 19], [19, ]], [], details], [details, )], [), .]]

>> Trigrams: 
[[ML, problem, tackled], [problem, tackled, EM], [tackled, EM, based], [EM, based, samples], [based, samples, generated], [samples, generated, true], [generated, true, distribution], [true, distribution, (], [distribution, (, [], [(, [, 19], [[, 19, ]], [19, ], details], [], details, )], [details, ), .]]

>> Noun Phrases are: 
[The ML problem, EM, samples, the true distribution, details]

>> Named Entities are: 
[('ML', 'FAC'), ('EM', 'ORG'), ('19', 'CARDINAL')]


============================ Sentence 635 =============================

The learned distribution is seen to be a rather“blurry” estimate that misses the modes of p(x) in an attempt of being inclusive of the full support of p(x). 


>> Tokens are: 
[learned, distribution, seen, rather“blurry, ”, estimate, misses, modes, p(x, ), attempt, inclusive, support, p(x, ), .] 

>> PoS Tags are: 
[('learned', 'ADJ'), ('distribution', 'NOUN'), ('seen', 'VERB'), ('rather“blurry', 'PROPN'), ('”', 'PUNCT'), ('estimate', 'NOUN'), ('misses', 'VERB'), ('modes', 'NOUN'), ('p(x', 'PROPN'), (')', 'PUNCT'), ('attempt', 'NOUN'), ('inclusive', 'ADJ'), ('support', 'NOUN'), ('p(x', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('learned', 'amod'), ('distribution', 'nsubjpass'), ('seen', 'ROOT'), ('rather“blurry', 'nmod'), ('”', 'punct'), ('estimate', 'attr'), ('misses', 'relcl'), ('modes', 'dobj'), ('p(x', 'pobj'), (')', 'punct'), ('attempt', 'pobj'), ('inclusive', 'acomp'), ('support', 'pobj'), ('p(x', 'pobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[learned, distribution], [distribution, seen], [seen, rather“blurry], [rather“blurry, ”], [”, estimate], [estimate, misses], [misses, modes], [modes, p(x], [p(x, )], [), attempt], [attempt, inclusive], [inclusive, support], [support, p(x], [p(x, )], [), .]]

>> Trigrams: 
[[learned, distribution, seen], [distribution, seen, rather“blurry], [seen, rather“blurry, ”], [rather“blurry, ”, estimate], [”, estimate, misses], [estimate, misses, modes], [misses, modes, p(x], [modes, p(x, )], [p(x, ), attempt], [), attempt, inclusive], [attempt, inclusive, support], [inclusive, support, p(x], [support, p(x, )], [p(x, ), .]]

>> Noun Phrases are: 
[The learned distribution, a rather“blurry” estimate, the modes, p(x, an attempt, the full support, p(x]

>> Named Entities are: 
[('p(x', 'ORG'), ('p(x', 'ORG')]


============================ Sentence 636 =============================

Being a poor estimate of the true distribution, the learned model  15    -5 0 5 0  0.05  0.1  0.15  0.2  0.25  0.3  0.35   


>> Tokens are: 
[poor, estimate, true, distribution, ,, learned, model,  , 15,    , -5, 0, 5, 0,  , 0.05,  , 0.1,  , 0.15,  , 0.2,  , 0.25,  , 0.3,  , 0.35,  ] 

>> PoS Tags are: 
[('poor', 'ADJ'), ('estimate', 'NOUN'), ('true', 'ADJ'), ('distribution', 'NOUN'), (',', 'PUNCT'), ('learned', 'VERB'), ('model', 'NOUN'), (' ', 'SPACE'), ('15', 'NUM'), ('   ', 'SPACE'), ('-5', 'NUM'), ('0', 'NUM'), ('5', 'NUM'), ('0', 'NUM'), (' ', 'SPACE'), ('0.05', 'NUM'), (' ', 'SPACE'), ('0.1', 'NUM'), (' ', 'SPACE'), ('0.15', 'NUM'), (' ', 'SPACE'), ('0.2', 'NUM'), (' ', 'SPACE'), ('0.25', 'NUM'), (' ', 'SPACE'), ('0.3', 'NUM'), (' ', 'SPACE'), ('0.35', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('poor', 'amod'), ('estimate', 'attr'), ('true', 'amod'), ('distribution', 'pobj'), (',', 'punct'), ('learned', 'amod'), ('model', 'npadvmod'), (' ', 'prep'), ('15', 'compound'), ('   ', 'pobj'), ('-5', 'punct'), ('0', 'prep'), ('5', 'nummod'), ('0', 'nummod'), (' ', 'dep'), ('0.05', 'nummod'), (' ', 'npadvmod'), ('0.1', 'nummod'), (' ', 'attr'), ('0.15', 'nummod'), (' ', 'attr'), ('0.2', 'nummod'), (' ', 'attr'), ('0.25', 'nummod'), (' ', 'attr'), ('0.3', 'nummod'), (' ', 'appos'), ('0.35', 'nummod'), (' ', 'appos')]

>> Bigrams: 
[[poor, estimate], [estimate, true], [true, distribution], [distribution, ,], [,, learned], [learned, model], [model,  ], [ , 15], [15,    ], [   , -5], [-5, 0], [0, 5], [5, 0], [0,  ], [ , 0.05], [0.05,  ], [ , 0.1], [0.1,  ], [ , 0.15], [0.15,  ], [ , 0.2], [0.2,  ], [ , 0.25], [0.25,  ], [ , 0.3], [0.3,  ], [ , 0.35], [0.35,  ]]

>> Trigrams: 
[[poor, estimate, true], [estimate, true, distribution], [true, distribution, ,], [distribution, ,, learned], [,, learned, model], [learned, model,  ], [model,  , 15], [ , 15,    ], [15,    , -5], [   , -5, 0], [-5, 0, 5], [0, 5, 0], [5, 0,  ], [0,  , 0.05], [ , 0.05,  ], [0.05,  , 0.1], [ , 0.1,  ], [0.1,  , 0.15], [ , 0.15,  ], [0.15,  , 0.2], [ , 0.2,  ], [0.2,  , 0.25], [ , 0.25,  ], [0.25,  , 0.3], [ , 0.3,  ], [0.3,  , 0.35], [ , 0.35,  ]]

>> Noun Phrases are: 
[a poor estimate, the true distribution]

>> Named Entities are: 
[('15', 'CARDINAL'), ('0.05', 'CARDINAL'), ('0.1', 'CARDINAL'), ('0.15', 'CARDINAL'), ('0.2', 'CARDINAL'), ('0.25', 'CARDINAL'), ('0.3', 'CARDINAL'), ('0.35', 'CARDINAL')]


============================ Sentence 637 =============================

Fig. 


>> Tokens are: 
[Fig, .] 

>> PoS Tags are: 
[('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Fig', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Fig, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 638 =============================

14. 


>> Tokens are: 
[14, .] 

>> PoS Tags are: 
[('14', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('14', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[14, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('14', 'CARDINAL')]


============================ Sentence 639 =============================

Illustration of the limitations of ML unsupervised learning, here obtained via the EM algorithm: 


>> Tokens are: 
[Illustration, limitations, ML, unsupervised, learning, ,, obtained, EM, algorithm, :] 

>> PoS Tags are: 
[('Illustration', 'NOUN'), ('limitations', 'NOUN'), ('ML', 'PROPN'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('obtained', 'VERB'), ('EM', 'PROPN'), ('algorithm', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Illustration', 'nsubj'), ('limitations', 'pobj'), ('ML', 'nmod'), ('unsupervised', 'amod'), ('learning', 'pobj'), (',', 'punct'), ('obtained', 'ROOT'), ('EM', 'compound'), ('algorithm', 'pobj'), (':', 'punct')]

>> Bigrams: 
[[Illustration, limitations], [limitations, ML], [ML, unsupervised], [unsupervised, learning], [learning, ,], [,, obtained], [obtained, EM], [EM, algorithm], [algorithm, :]]

>> Trigrams: 
[[Illustration, limitations, ML], [limitations, ML, unsupervised], [ML, unsupervised, learning], [unsupervised, learning, ,], [learning, ,, obtained], [,, obtained, EM], [obtained, EM, algorithm], [EM, algorithm, :]]

>> Noun Phrases are: 
[Illustration, the limitations, ML unsupervised learning, the EM algorithm]

>> Named Entities are: 
[('ML', 'ORG'), ('EM', 'ORG')]


============================ Sentence 640 =============================

The ML solution tends to be blurry, missing the modes of the true distribution p(x). 


>> Tokens are: 
[ML, solution, tends, blurry, ,, missing, modes, true, distribution, p(x, ), .] 

>> PoS Tags are: 
[('ML', 'PROPN'), ('solution', 'NOUN'), ('tends', 'VERB'), ('blurry', 'ADJ'), (',', 'PUNCT'), ('missing', 'VERB'), ('modes', 'NOUN'), ('true', 'ADJ'), ('distribution', 'NOUN'), ('p(x', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ML', 'compound'), ('solution', 'nsubj'), ('tends', 'ROOT'), ('blurry', 'acomp'), (',', 'punct'), ('missing', 'advcl'), ('modes', 'dobj'), ('true', 'amod'), ('distribution', 'pobj'), ('p(x', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[ML, solution], [solution, tends], [tends, blurry], [blurry, ,], [,, missing], [missing, modes], [modes, true], [true, distribution], [distribution, p(x], [p(x, )], [), .]]

>> Trigrams: 
[[ML, solution, tends], [solution, tends, blurry], [tends, blurry, ,], [blurry, ,, missing], [,, missing, modes], [missing, modes, true], [modes, true, distribution], [true, distribution, p(x], [distribution, p(x, )], [p(x, ), .]]

>> Noun Phrases are: 
[The ML solution, the modes, the true distribution, p(x]

>> Named Entities are: 
[('p(x', 'ORG')]


============================ Sentence 641 =============================

 can clearly also be problematic for sample generation in the sense that samples generated from the model would tend to be quite different from the data samples. 


>> Tokens are: 
[ , clearly, problematic, sample, generation, sense, samples, generated, model, tend, different, data, samples, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('clearly', 'ADV'), ('problematic', 'ADJ'), ('sample', 'NOUN'), ('generation', 'NOUN'), ('sense', 'NOUN'), ('samples', 'NOUN'), ('generated', 'VERB'), ('model', 'NOUN'), ('tend', 'VERB'), ('different', 'ADJ'), ('data', 'NOUN'), ('samples', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nsubj'), ('clearly', 'advmod'), ('problematic', 'acomp'), ('sample', 'compound'), ('generation', 'pobj'), ('sense', 'pobj'), ('samples', 'nsubj'), ('generated', 'acl'), ('model', 'pobj'), ('tend', 'acl'), ('different', 'acomp'), ('data', 'compound'), ('samples', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , clearly], [clearly, problematic], [problematic, sample], [sample, generation], [generation, sense], [sense, samples], [samples, generated], [generated, model], [model, tend], [tend, different], [different, data], [data, samples], [samples, .]]

>> Trigrams: 
[[ , clearly, problematic], [clearly, problematic, sample], [problematic, sample, generation], [sample, generation, sense], [generation, sense, samples], [sense, samples, generated], [samples, generated, model], [generated, model, tend], [model, tend, different], [tend, different, data], [different, data, samples], [data, samples, .]]

>> Noun Phrases are: 
[sample generation, the sense, samples, the model, the data samples]

>> Named Entities are: 
[]


============================ Sentence 642 =============================

In the rest of this section, we briefly review advanced learning methods that address this limitation of ML.   


>> Tokens are: 
[rest, section, ,, briefly, review, advanced, learning, methods, address, limitation, ML, .,  ] 

>> PoS Tags are: 
[('rest', 'NOUN'), ('section', 'NOUN'), (',', 'PUNCT'), ('briefly', 'ADV'), ('review', 'VERB'), ('advanced', 'ADJ'), ('learning', 'VERB'), ('methods', 'NOUN'), ('address', 'VERB'), ('limitation', 'NOUN'), ('ML', 'PROPN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('rest', 'pobj'), ('section', 'pobj'), (',', 'punct'), ('briefly', 'advmod'), ('review', 'ROOT'), ('advanced', 'amod'), ('learning', 'amod'), ('methods', 'dobj'), ('address', 'relcl'), ('limitation', 'dobj'), ('ML', 'pobj'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[rest, section], [section, ,], [,, briefly], [briefly, review], [review, advanced], [advanced, learning], [learning, methods], [methods, address], [address, limitation], [limitation, ML], [ML, .], [.,  ]]

>> Trigrams: 
[[rest, section, ,], [section, ,, briefly], [,, briefly, review], [briefly, review, advanced], [review, advanced, learning], [advanced, learning, methods], [learning, methods, address], [methods, address, limitation], [address, limitation, ML], [limitation, ML, .], [ML, .,  ]]

>> Noun Phrases are: 
[the rest, this section, we, advanced learning methods, this limitation, ML]

>> Named Entities are: 
[('ML', 'ORG')]


============================ Sentence 643 =============================

In order to move beyond ML, we first observe that ML can be proven to minimize the KL divergence 


>> Tokens are: 
[order, ML, ,, observe, ML, proven, minimize, KL, divergence] 

>> PoS Tags are: 
[('order', 'NOUN'), ('ML', 'PROPN'), (',', 'PUNCT'), ('observe', 'VERB'), ('ML', 'PROPN'), ('proven', 'VERB'), ('minimize', 'VERB'), ('KL', 'PROPN'), ('divergence', 'NOUN')] 

>> Dependency Tags are: 
[('order', 'pobj'), ('ML', 'pobj'), (',', 'punct'), ('observe', 'ROOT'), ('ML', 'nsubjpass'), ('proven', 'ccomp'), ('minimize', 'xcomp'), ('KL', 'compound'), ('divergence', 'dobj')]

>> Bigrams: 
[[order, ML], [ML, ,], [,, observe], [observe, ML], [ML, proven], [proven, minimize], [minimize, KL], [KL, divergence]]

>> Trigrams: 
[[order, ML, ,], [ML, ,, observe], [,, observe, ML], [observe, ML, proven], [ML, proven, minimize], [proven, minimize, KL], [minimize, KL, divergence]]

>> Noun Phrases are: 
[order, ML, we, ML, the KL divergence]

>> Named Entities are: 
[('ML', 'ORG'), ('first', 'ORDINAL'), ('KL', 'ORG')]


============================ Sentence 644 =============================

 KL(pD(x)||p(x|θ)) 


>> Tokens are: 
[ , KL(pD(x)||p(x|θ, ), )] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('KL(pD(x)||p(x|θ', 'X'), (')', 'PUNCT'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('KL(pD(x)||p(x|θ', 'appos'), (')', 'punct'), (')', 'punct')]

>> Bigrams: 
[[ , KL(pD(x)||p(x|θ], [KL(pD(x)||p(x|θ, )], [), )]]

>> Trigrams: 
[[ , KL(pD(x)||p(x|θ, )], [KL(pD(x)||p(x|θ, ), )]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 645 =============================

= Ez∼pD(x) 


>> Tokens are: 
[=, Ez∼pD(x, )] 

>> PoS Tags are: 
[('=', 'PUNCT'), ('Ez∼pD(x', 'PUNCT'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('=', 'meta'), ('Ez∼pD(x', 'ROOT'), (')', 'punct')]

>> Bigrams: 
[[=, Ez∼pD(x], [Ez∼pD(x, )]]

>> Trigrams: 
[[=, Ez∼pD(x, )]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 646 =============================

[ ln pD(x)  p(x|θ)  ] (20)  between the empirical distribution, or histogram, of the data  pD(x) 


>> Tokens are: 
[[, ln, pD(x, ),  , p(x|θ, ),  , ], (, 20, ),  , empirical, distribution, ,, histogram, ,, data,  , pD(x, )] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('ln', 'ADP'), ('pD(x', 'NOUN'), (')', 'PUNCT'), (' ', 'SPACE'), ('p(x|θ', 'ADV'), (')', 'PUNCT'), (' ', 'SPACE'), (']', 'PUNCT'), ('(', 'PUNCT'), ('20', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE'), ('empirical', 'ADJ'), ('distribution', 'NOUN'), (',', 'PUNCT'), ('histogram', 'NOUN'), (',', 'PUNCT'), ('data', 'NOUN'), (' ', 'SPACE'), ('pD(x', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('ln', 'amod'), ('pD(x', 'ROOT'), (')', 'punct'), (' ', 'appos'), ('p(x|θ', 'npadvmod'), (')', 'punct'), (' ', 'appos'), (']', 'punct'), ('(', 'punct'), ('20', 'parataxis'), (')', 'punct'), (' ', 'appos'), ('empirical', 'amod'), ('distribution', 'pobj'), (',', 'punct'), ('histogram', 'conj'), (',', 'punct'), ('data', 'pobj'), (' ', 'nmod'), ('pD(x', 'appos'), (')', 'punct')]

>> Bigrams: 
[[[, ln], [ln, pD(x], [pD(x, )], [),  ], [ , p(x|θ], [p(x|θ, )], [),  ], [ , ]], [], (], [(, 20], [20, )], [),  ], [ , empirical], [empirical, distribution], [distribution, ,], [,, histogram], [histogram, ,], [,, data], [data,  ], [ , pD(x], [pD(x, )]]

>> Trigrams: 
[[[, ln, pD(x], [ln, pD(x, )], [pD(x, ),  ], [),  , p(x|θ], [ , p(x|θ, )], [p(x|θ, ),  ], [),  , ]], [ , ], (], [], (, 20], [(, 20, )], [20, ),  ], [),  , empirical], [ , empirical, distribution], [empirical, distribution, ,], [distribution, ,, histogram], [,, histogram, ,], [histogram, ,, data], [,, data,  ], [data,  , pD(x], [ , pD(x, )]]

>> Noun Phrases are: 
[[ ln pD(x, the empirical distribution, histogram, the data, pD(x]

>> Named Entities are: 
[('20', 'CARDINAL')]


============================ Sentence 647 =============================

= 


>> Tokens are: 
[=] 

>> PoS Tags are: 
[('=', 'PUNCT')] 

>> Dependency Tags are: 
[('=', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 648 =============================

N 


>> Tokens are: 
[N] 

>> PoS Tags are: 
[('N', 'X')] 

>> Dependency Tags are: 
[('N', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 649 =============================

[x]  N , (21)  where N [x] counts the number of occurrences of value x in the data, and the parameterized model distribution p(x|θ). 


>> Tokens are: 
[[, x, ],  , N, ,, (, 21, ),  , N, [, x, ], counts, number, occurrences, value, x, data, ,, parameterized, model, distribution, p(x|θ, ), .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('x', 'X'), (']', 'PUNCT'), (' ', 'SPACE'), ('N', 'PROPN'), (',', 'PUNCT'), ('(', 'PUNCT'), ('21', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE'), ('N', 'PRON'), ('[', 'PUNCT'), ('x', 'X'), (']', 'PUNCT'), ('counts', 'VERB'), ('number', 'NOUN'), ('occurrences', 'NOUN'), ('value', 'NOUN'), ('x', 'PUNCT'), ('data', 'NOUN'), (',', 'PUNCT'), ('parameterized', 'VERB'), ('model', 'NOUN'), ('distribution', 'NOUN'), ('p(x|θ', 'ADV'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('x', 'punct'), (']', 'punct'), (' ', 'nmod'), ('N', 'appos'), (',', 'punct'), ('(', 'punct'), ('21', 'appos'), (')', 'punct'), (' ', 'ROOT'), ('N', 'nsubj'), ('[', 'punct'), ('x', 'punct'), (']', 'dep'), ('counts', 'relcl'), ('number', 'dobj'), ('occurrences', 'pobj'), ('value', 'pobj'), ('x', 'punct'), ('data', 'pobj'), (',', 'punct'), ('parameterized', 'amod'), ('model', 'compound'), ('distribution', 'conj'), ('p(x|θ', 'advmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, x], [x, ]], [],  ], [ , N], [N, ,], [,, (], [(, 21], [21, )], [),  ], [ , N], [N, [], [[, x], [x, ]], [], counts], [counts, number], [number, occurrences], [occurrences, value], [value, x], [x, data], [data, ,], [,, parameterized], [parameterized, model], [model, distribution], [distribution, p(x|θ], [p(x|θ, )], [), .]]

>> Trigrams: 
[[[, x, ]], [x, ],  ], [],  , N], [ , N, ,], [N, ,, (], [,, (, 21], [(, 21, )], [21, ),  ], [),  , N], [ , N, [], [N, [, x], [[, x, ]], [x, ], counts], [], counts, number], [counts, number, occurrences], [number, occurrences, value], [occurrences, value, x], [value, x, data], [x, data, ,], [data, ,, parameterized], [,, parameterized, model], [parameterized, model, distribution], [model, distribution, p(x|θ], [distribution, p(x|θ, )], [p(x|θ, ), .]]

>> Noun Phrases are: 
[N, N, the number, occurrences, value, the data]

>> Named Entities are: 
[('21', 'CARDINAL')]


============================ Sentence 650 =============================

In other words, ML fits the model to the his- togram of the data by using the KL divergence as a measure of fitness. 


>> Tokens are: 
[words, ,, ML, fits, model, his-, togram, data, KL, divergence, measure, fitness, .] 

>> PoS Tags are: 
[('words', 'NOUN'), (',', 'PUNCT'), ('ML', 'PROPN'), ('fits', 'VERB'), ('model', 'NOUN'), ('his-', 'ADJ'), ('togram', 'NOUN'), ('data', 'NOUN'), ('KL', 'PROPN'), ('divergence', 'NOUN'), ('measure', 'NOUN'), ('fitness', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('words', 'pobj'), (',', 'punct'), ('ML', 'nsubj'), ('fits', 'ROOT'), ('model', 'dobj'), ('his-', 'amod'), ('togram', 'pobj'), ('data', 'pobj'), ('KL', 'compound'), ('divergence', 'dobj'), ('measure', 'pobj'), ('fitness', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[words, ,], [,, ML], [ML, fits], [fits, model], [model, his-], [his-, togram], [togram, data], [data, KL], [KL, divergence], [divergence, measure], [measure, fitness], [fitness, .]]

>> Trigrams: 
[[words, ,, ML], [,, ML, fits], [ML, fits, model], [fits, model, his-], [model, his-, togram], [his-, togram, data], [togram, data, KL], [data, KL, divergence], [KL, divergence, measure], [divergence, measure, fitness], [measure, fitness, .]]

>> Noun Phrases are: 
[other words, ML, the model, the his- togram, the data, the KL divergence, a measure, fitness]

>> Named Entities are: 
[('KL', 'ORG')]


============================ Sentence 651 =============================

Indeed, as mentioned in Sec. 


>> Tokens are: 
[,, mentioned, Sec, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('mentioned', 'VERB'), ('Sec', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('mentioned', 'ROOT'), ('Sec', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[,, mentioned], [mentioned, Sec], [Sec, .]]

>> Trigrams: 
[[,, mentioned, Sec], [mentioned, Sec, .]]

>> Noun Phrases are: 
[Sec]

>> Named Entities are: 
[('Sec', 'PERSON')]


============================ Sentence 652 =============================

V-C, the KL divergence is a quantitative measure of “difference” between two distributions. 


>> Tokens are: 
[V, -, C, ,, KL, divergence, quantitative, measure, “, difference, ”, distributions, .] 

>> PoS Tags are: 
[('V', 'NOUN'), ('-', 'PUNCT'), ('C', 'PROPN'), (',', 'PUNCT'), ('KL', 'PROPN'), ('divergence', 'NOUN'), ('quantitative', 'ADJ'), ('measure', 'NOUN'), ('“', 'PUNCT'), ('difference', 'NOUN'), ('”', 'PUNCT'), ('distributions', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('V', 'compound'), ('-', 'punct'), ('C', 'nsubj'), (',', 'punct'), ('KL', 'compound'), ('divergence', 'nsubj'), ('quantitative', 'amod'), ('measure', 'attr'), ('“', 'punct'), ('difference', 'pobj'), ('”', 'punct'), ('distributions', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[V, -], [-, C], [C, ,], [,, KL], [KL, divergence], [divergence, quantitative], [quantitative, measure], [measure, “], [“, difference], [difference, ”], [”, distributions], [distributions, .]]

>> Trigrams: 
[[V, -, C], [-, C, ,], [C, ,, KL], [,, KL, divergence], [KL, divergence, quantitative], [divergence, quantitative, measure], [quantitative, measure, “], [measure, “, difference], [“, difference, ”], [difference, ”, distributions], [”, distributions, .]]

>> Noun Phrases are: 
[V-C, the KL divergence, a quantitative measure, “difference, two distributions]

>> Named Entities are: 
[('KL', 'ORG'), ('two', 'CARDINAL')]


============================ Sentence 653 =============================

More precisely, as per (20), the KL divergence KL(p||q) quantifies the difference between two distributions p(x) and q(x) by evaluating the average of the LLR ln(p(x)/q(x)) with respect to p(x). 


>> Tokens are: 
[precisely, ,, (, 20, ), ,, KL, divergence, KL(p||q, ), quantifies, difference, distributions, p(x, ), q(x, ), evaluating, average, LLR, ln(p(x)/q(x, ), ), respect, p(x, ), .] 

>> PoS Tags are: 
[('precisely', 'ADV'), (',', 'PUNCT'), ('(', 'PUNCT'), ('20', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('KL', 'PROPN'), ('divergence', 'NOUN'), ('KL(p||q', 'NOUN'), (')', 'PUNCT'), ('quantifies', 'VERB'), ('difference', 'NOUN'), ('distributions', 'NOUN'), ('p(x', 'PROPN'), (')', 'PUNCT'), ('q(x', 'PROPN'), (')', 'PUNCT'), ('evaluating', 'VERB'), ('average', 'NOUN'), ('LLR', 'NOUN'), ('ln(p(x)/q(x', 'NOUN'), (')', 'PUNCT'), (')', 'PUNCT'), ('respect', 'NOUN'), ('p(x', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('precisely', 'advmod'), (',', 'punct'), ('(', 'punct'), ('20', 'pobj'), (')', 'punct'), (',', 'punct'), ('KL', 'compound'), ('divergence', 'compound'), ('KL(p||q', 'nsubj'), (')', 'punct'), ('quantifies', 'ROOT'), ('difference', 'dobj'), ('distributions', 'pobj'), ('p(x', 'appos'), (')', 'punct'), ('q(x', 'conj'), (')', 'punct'), ('evaluating', 'pcomp'), ('average', 'dobj'), ('LLR', 'compound'), ('ln(p(x)/q(x', 'pobj'), (')', 'punct'), (')', 'punct'), ('respect', 'pobj'), ('p(x', 'pobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[precisely, ,], [,, (], [(, 20], [20, )], [), ,], [,, KL], [KL, divergence], [divergence, KL(p||q], [KL(p||q, )], [), quantifies], [quantifies, difference], [difference, distributions], [distributions, p(x], [p(x, )], [), q(x], [q(x, )], [), evaluating], [evaluating, average], [average, LLR], [LLR, ln(p(x)/q(x], [ln(p(x)/q(x, )], [), )], [), respect], [respect, p(x], [p(x, )], [), .]]

>> Trigrams: 
[[precisely, ,, (], [,, (, 20], [(, 20, )], [20, ), ,], [), ,, KL], [,, KL, divergence], [KL, divergence, KL(p||q], [divergence, KL(p||q, )], [KL(p||q, ), quantifies], [), quantifies, difference], [quantifies, difference, distributions], [difference, distributions, p(x], [distributions, p(x, )], [p(x, ), q(x], [), q(x, )], [q(x, ), evaluating], [), evaluating, average], [evaluating, average, LLR], [average, LLR, ln(p(x)/q(x], [LLR, ln(p(x)/q(x, )], [ln(p(x)/q(x, ), )], [), ), respect], [), respect, p(x], [respect, p(x, )], [p(x, ), .]]

>> Noun Phrases are: 
[More precisely, as per (20), the KL divergence KL(p||q, the difference, two distributions, p(x, q(x, the average, the LLR ln(p(x)/q(x, respect, p(x]

>> Named Entities are: 
[('20', 'CARDINAL'), ('two', 'CARDINAL'), ('p(x', 'ORG'), ('p(x', 'ORG')]


============================ Sentence 654 =============================

 Consider now the problem illustrated in Fig. 


>> Tokens are: 
[ , Consider, problem, illustrated, Fig, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Consider', 'VERB'), ('problem', 'NOUN'), ('illustrated', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nsubj'), ('Consider', 'ROOT'), ('problem', 'dobj'), ('illustrated', 'acl'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , Consider], [Consider, problem], [problem, illustrated], [illustrated, Fig], [Fig, .]]

>> Trigrams: 
[[ , Consider, problem], [Consider, problem, illustrated], [problem, illustrated, Fig], [illustrated, Fig, .]]

>> Noun Phrases are: 
[the problem, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 655 =============================

15, in which a discriminator wishes to distinguish between two hypotheses, namely the hypothesis that the data x is a sample from distribution p(x) and the hypothesis that it is instead generated from q(x). 


>> Tokens are: 
[15, ,, discriminator, wishes, distinguish, hypotheses, ,, hypothesis, data, x, sample, distribution, p(x, ), hypothesis, instead, generated, q(x, ), .] 

>> PoS Tags are: 
[('15', 'NUM'), (',', 'PUNCT'), ('discriminator', 'NOUN'), ('wishes', 'VERB'), ('distinguish', 'VERB'), ('hypotheses', 'NOUN'), (',', 'PUNCT'), ('hypothesis', 'NOUN'), ('data', 'NOUN'), ('x', 'SYM'), ('sample', 'NOUN'), ('distribution', 'NOUN'), ('p(x', 'PROPN'), (')', 'PUNCT'), ('hypothesis', 'NOUN'), ('instead', 'ADV'), ('generated', 'VERB'), ('q(x', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('15', 'ROOT'), (',', 'punct'), ('discriminator', 'nsubj'), ('wishes', 'relcl'), ('distinguish', 'xcomp'), ('hypotheses', 'pobj'), (',', 'punct'), ('hypothesis', 'appos'), ('data', 'nsubj'), ('x', 'punct'), ('sample', 'attr'), ('distribution', 'compound'), ('p(x', 'pobj'), (')', 'punct'), ('hypothesis', 'conj'), ('instead', 'advmod'), ('generated', 'relcl'), ('q(x', 'pobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[15, ,], [,, discriminator], [discriminator, wishes], [wishes, distinguish], [distinguish, hypotheses], [hypotheses, ,], [,, hypothesis], [hypothesis, data], [data, x], [x, sample], [sample, distribution], [distribution, p(x], [p(x, )], [), hypothesis], [hypothesis, instead], [instead, generated], [generated, q(x], [q(x, )], [), .]]

>> Trigrams: 
[[15, ,, discriminator], [,, discriminator, wishes], [discriminator, wishes, distinguish], [wishes, distinguish, hypotheses], [distinguish, hypotheses, ,], [hypotheses, ,, hypothesis], [,, hypothesis, data], [hypothesis, data, x], [data, x, sample], [x, sample, distribution], [sample, distribution, p(x], [distribution, p(x, )], [p(x, ), hypothesis], [), hypothesis, instead], [hypothesis, instead, generated], [instead, generated, q(x], [generated, q(x, )], [q(x, ), .]]

>> Noun Phrases are: 
[a discriminator, two hypotheses, namely the hypothesis, the data, a sample, distribution p(x, the hypothesis, it, q(x]

>> Named Entities are: 
[('15', 'CARDINAL'), ('two', 'CARDINAL'), ('p(x', 'ORG')]


============================ Sentence 656 =============================

To fix the ideas, one can focus as an example on the case where p(x) and q(x) are two Gaussian distributions with different means. 


>> Tokens are: 
[fix, ideas, ,, focus, example, case, p(x, ), q(x, ), Gaussian, distributions, different, means, .] 

>> PoS Tags are: 
[('fix', 'VERB'), ('ideas', 'NOUN'), (',', 'PUNCT'), ('focus', 'VERB'), ('example', 'NOUN'), ('case', 'NOUN'), ('p(x', 'PROPN'), (')', 'PUNCT'), ('q(x', 'PROPN'), (')', 'PUNCT'), ('Gaussian', 'ADJ'), ('distributions', 'NOUN'), ('different', 'ADJ'), ('means', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('fix', 'advcl'), ('ideas', 'dobj'), (',', 'punct'), ('focus', 'ROOT'), ('example', 'pobj'), ('case', 'pobj'), ('p(x', 'nsubj'), (')', 'punct'), ('q(x', 'conj'), (')', 'punct'), ('Gaussian', 'amod'), ('distributions', 'attr'), ('different', 'amod'), ('means', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[fix, ideas], [ideas, ,], [,, focus], [focus, example], [example, case], [case, p(x], [p(x, )], [), q(x], [q(x, )], [), Gaussian], [Gaussian, distributions], [distributions, different], [different, means], [means, .]]

>> Trigrams: 
[[fix, ideas, ,], [ideas, ,, focus], [,, focus, example], [focus, example, case], [example, case, p(x], [case, p(x, )], [p(x, ), q(x], [), q(x, )], [q(x, ), Gaussian], [), Gaussian, distributions], [Gaussian, distributions, different], [distributions, different, means], [different, means, .]]

>> Noun Phrases are: 
[the ideas, one, an example, the case, p(x, q(x, two Gaussian distributions, different means]

>> Named Entities are: 
[('p(x', 'ORG'), ('two', 'CARDINAL')]


============================ Sentence 657 =============================

To this end, the discriminator computes a statistic, that is, a function, T (x) of the data x, and then decides for the former hypothesis if T (x) is sufficiently large and for  𝑇(𝑥)  𝑥~𝑝(𝑥)  𝑥~𝑞(𝑥)  𝑝 𝑥 if 𝑇 𝑥 large  discriminator  𝑞 𝑥 if 𝑇 𝑥 small  Fig. 15. 


>> Tokens are: 
[end, ,, discriminator, computes, statistic, ,, ,, function, ,, T, (, x, ), data, x, ,, decides, hypothesis, T, (, x, ), sufficiently, large,  , 𝑇(𝑥, ),  , 𝑥~𝑝(𝑥, ),  , 𝑥~𝑞(𝑥, ),  , 𝑝, 𝑥, 𝑇, 𝑥, large,  , discriminator,  , 𝑞, 𝑥, 𝑇, 𝑥, small,  , Fig, ., 15, .] 

>> PoS Tags are: 
[('end', 'NOUN'), (',', 'PUNCT'), ('discriminator', 'NOUN'), ('computes', 'VERB'), ('statistic', 'NOUN'), (',', 'PUNCT'), (',', 'PUNCT'), ('function', 'NOUN'), (',', 'PUNCT'), ('T', 'NOUN'), ('(', 'PUNCT'), ('x', 'X'), (')', 'PUNCT'), ('data', 'NOUN'), ('x', 'SYM'), (',', 'PUNCT'), ('decides', 'VERB'), ('hypothesis', 'NOUN'), ('T', 'PROPN'), ('(', 'PUNCT'), ('x', 'X'), (')', 'PUNCT'), ('sufficiently', 'ADV'), ('large', 'ADJ'), (' ', 'SPACE'), ('𝑇(𝑥', 'X'), (')', 'PUNCT'), (' ', 'SPACE'), ('𝑥~𝑝(𝑥', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE'), ('𝑥~𝑞(𝑥', 'NOUN'), (')', 'PUNCT'), (' ', 'SPACE'), ('𝑝', 'NOUN'), ('𝑥', 'NUM'), ('𝑇', 'PROPN'), ('𝑥', 'DET'), ('large', 'ADJ'), (' ', 'SPACE'), ('discriminator', 'NOUN'), (' ', 'SPACE'), ('𝑞', 'PROPN'), ('𝑥', 'NUM'), ('𝑇', 'PROPN'), ('𝑥', 'DET'), ('small', 'ADJ'), (' ', 'SPACE'), ('Fig', 'PROPN'), ('.', 'PUNCT'), ('15', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('end', 'pobj'), (',', 'punct'), ('discriminator', 'nsubj'), ('computes', 'ROOT'), ('statistic', 'dobj'), (',', 'punct'), (',', 'punct'), ('function', 'npadvmod'), (',', 'punct'), ('T', 'appos'), ('(', 'punct'), ('x', 'appos'), (')', 'punct'), ('data', 'pobj'), ('x', 'punct'), (',', 'punct'), ('decides', 'conj'), ('hypothesis', 'pobj'), ('T', 'nsubj'), ('(', 'punct'), ('x', 'appos'), (')', 'punct'), ('sufficiently', 'advmod'), ('large', 'acomp'), (' ', 'pobj'), ('𝑇(𝑥', 'dep'), (')', 'punct'), (' ', 'conj'), ('𝑥~𝑝(𝑥', 'appos'), (')', 'punct'), (' ', 'compound'), ('𝑥~𝑞(𝑥', 'npadvmod'), (')', 'punct'), (' ', 'conj'), ('𝑝', 'quantmod'), ('𝑥', 'dobj'), ('𝑇', 'advcl'), ('𝑥', 'det'), ('large', 'amod'), (' ', 'compound'), ('discriminator', 'compound'), (' ', 'appos'), ('𝑞', 'prep'), ('𝑥', 'appos'), ('𝑇', 'nmod'), ('𝑥', 'det'), ('small', 'amod'), (' ', 'compound'), ('Fig', 'advcl'), ('.', 'punct'), ('15', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[end, ,], [,, discriminator], [discriminator, computes], [computes, statistic], [statistic, ,], [,, ,], [,, function], [function, ,], [,, T], [T, (], [(, x], [x, )], [), data], [data, x], [x, ,], [,, decides], [decides, hypothesis], [hypothesis, T], [T, (], [(, x], [x, )], [), sufficiently], [sufficiently, large], [large,  ], [ , 𝑇(𝑥], [𝑇(𝑥, )], [),  ], [ , 𝑥~𝑝(𝑥], [𝑥~𝑝(𝑥, )], [),  ], [ , 𝑥~𝑞(𝑥], [𝑥~𝑞(𝑥, )], [),  ], [ , 𝑝], [𝑝, 𝑥], [𝑥, 𝑇], [𝑇, 𝑥], [𝑥, large], [large,  ], [ , discriminator], [discriminator,  ], [ , 𝑞], [𝑞, 𝑥], [𝑥, 𝑇], [𝑇, 𝑥], [𝑥, small], [small,  ], [ , Fig], [Fig, .], [., 15], [15, .]]

>> Trigrams: 
[[end, ,, discriminator], [,, discriminator, computes], [discriminator, computes, statistic], [computes, statistic, ,], [statistic, ,, ,], [,, ,, function], [,, function, ,], [function, ,, T], [,, T, (], [T, (, x], [(, x, )], [x, ), data], [), data, x], [data, x, ,], [x, ,, decides], [,, decides, hypothesis], [decides, hypothesis, T], [hypothesis, T, (], [T, (, x], [(, x, )], [x, ), sufficiently], [), sufficiently, large], [sufficiently, large,  ], [large,  , 𝑇(𝑥], [ , 𝑇(𝑥, )], [𝑇(𝑥, ),  ], [),  , 𝑥~𝑝(𝑥], [ , 𝑥~𝑝(𝑥, )], [𝑥~𝑝(𝑥, ),  ], [),  , 𝑥~𝑞(𝑥], [ , 𝑥~𝑞(𝑥, )], [𝑥~𝑞(𝑥, ),  ], [),  , 𝑝], [ , 𝑝, 𝑥], [𝑝, 𝑥, 𝑇], [𝑥, 𝑇, 𝑥], [𝑇, 𝑥, large], [𝑥, large,  ], [large,  , discriminator], [ , discriminator,  ], [discriminator,  , 𝑞], [ , 𝑞, 𝑥], [𝑞, 𝑥, 𝑇], [𝑥, 𝑇, 𝑥], [𝑇, 𝑥, small], [𝑥, small,  ], [small,  , Fig], [ , Fig, .], [Fig, ., 15], [., 15, .]]

>> Noun Phrases are: 
[this end, the discriminator, a statistic, T, the data, the former hypothesis, T]

>> Named Entities are: 
[('𝑥~𝑞(𝑥', 'CARDINAL'), ('Fig', 'PERSON'), ('15', 'CARDINAL')]


============================ Sentence 658 =============================

Discriminator between the hypotheses x ∼ p(x) and x ∼ q(x) based on the statistic T (x). 


>> Tokens are: 
[Discriminator, hypotheses, x, ∼, p(x, ), x, ∼, q(x, ), based, statistic, T, (, x, ), .] 

>> PoS Tags are: 
[('Discriminator', 'NOUN'), ('hypotheses', 'NOUN'), ('x', 'SYM'), ('∼', 'PROPN'), ('p(x', 'PROPN'), (')', 'PUNCT'), ('x', 'PUNCT'), ('∼', 'VERB'), ('q(x', 'NOUN'), (')', 'PUNCT'), ('based', 'VERB'), ('statistic', 'NOUN'), ('T', 'NOUN'), ('(', 'PUNCT'), ('x', 'X'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Discriminator', 'ROOT'), ('hypotheses', 'pobj'), ('x', 'punct'), ('∼', 'compound'), ('p(x', 'appos'), (')', 'punct'), ('x', 'punct'), ('∼', 'compound'), ('q(x', 'conj'), (')', 'punct'), ('based', 'acl'), ('statistic', 'pobj'), ('T', 'appos'), ('(', 'punct'), ('x', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Discriminator, hypotheses], [hypotheses, x], [x, ∼], [∼, p(x], [p(x, )], [), x], [x, ∼], [∼, q(x], [q(x, )], [), based], [based, statistic], [statistic, T], [T, (], [(, x], [x, )], [), .]]

>> Trigrams: 
[[Discriminator, hypotheses, x], [hypotheses, x, ∼], [x, ∼, p(x], [∼, p(x, )], [p(x, ), x], [), x, ∼], [x, ∼, q(x], [∼, q(x, )], [q(x, ), based], [), based, statistic], [based, statistic, T], [statistic, T, (], [T, (, x], [(, x, )], [x, ), .]]

>> Noun Phrases are: 
[Discriminator, the hypotheses, x ∼ p(x, x ∼ q(x, the statistic, T]

>> Named Entities are: 
[('∼ p(x', 'PERSON')]


============================ Sentence 659 =============================

The performance of the optimal discriminator function T (x) under different design criteria yields a measure of the difference between the two distributions. 


>> Tokens are: 
[performance, optimal, discriminator, function, T, (, x, ), different, design, criteria, yields, measure, difference, distributions, .] 

>> PoS Tags are: 
[('performance', 'NOUN'), ('optimal', 'ADJ'), ('discriminator', 'NOUN'), ('function', 'NOUN'), ('T', 'NOUN'), ('(', 'PUNCT'), ('x', 'X'), (')', 'PUNCT'), ('different', 'ADJ'), ('design', 'NOUN'), ('criteria', 'NOUN'), ('yields', 'VERB'), ('measure', 'NOUN'), ('difference', 'NOUN'), ('distributions', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('performance', 'nsubj'), ('optimal', 'amod'), ('discriminator', 'compound'), ('function', 'pobj'), ('T', 'appos'), ('(', 'punct'), ('x', 'appos'), (')', 'punct'), ('different', 'amod'), ('design', 'compound'), ('criteria', 'pobj'), ('yields', 'ROOT'), ('measure', 'dobj'), ('difference', 'pobj'), ('distributions', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[performance, optimal], [optimal, discriminator], [discriminator, function], [function, T], [T, (], [(, x], [x, )], [), different], [different, design], [design, criteria], [criteria, yields], [yields, measure], [measure, difference], [difference, distributions], [distributions, .]]

>> Trigrams: 
[[performance, optimal, discriminator], [optimal, discriminator, function], [discriminator, function, T], [function, T, (], [T, (, x], [(, x, )], [x, ), different], [), different, design], [different, design, criteria], [design, criteria, yields], [criteria, yields, measure], [yields, measure, difference], [measure, difference, distributions], [difference, distributions, .]]

>> Noun Phrases are: 
[The performance, the optimal discriminator function, T, different design criteria, a measure, the difference, the two distributions]

>> Named Entities are: 
[('two', 'CARDINAL')]


============================ Sentence 660 =============================

 the latter hypothesis otherwise. 


>> Tokens are: 
[ , hypothesis, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('hypothesis', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'dep'), ('hypothesis', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[ , hypothesis], [hypothesis, .]]

>> Trigrams: 
[[ , hypothesis, .]]

>> Noun Phrases are: 
[ the latter hypothesis]

>> Named Entities are: 
[]


============================ Sentence 661 =============================

Intuitively, one should expect that, the more distinct the two distributions p(x) and q(x) are, the easier it is to design a discriminator that is able to choose the correct hypothesis with high probability. 


>> Tokens are: 
[Intuitively, ,, expect, ,, distinct, distributions, p(x, ), q(x, ), ,, easier, design, discriminator, able, choose, correct, hypothesis, high, probability, .] 

>> PoS Tags are: 
[('Intuitively', 'ADV'), (',', 'PUNCT'), ('expect', 'VERB'), (',', 'PUNCT'), ('distinct', 'ADJ'), ('distributions', 'NOUN'), ('p(x', 'PROPN'), (')', 'PUNCT'), ('q(x', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('easier', 'ADJ'), ('design', 'VERB'), ('discriminator', 'NOUN'), ('able', 'ADJ'), ('choose', 'VERB'), ('correct', 'ADJ'), ('hypothesis', 'NOUN'), ('high', 'ADJ'), ('probability', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Intuitively', 'advmod'), (',', 'punct'), ('expect', 'ccomp'), (',', 'punct'), ('distinct', 'amod'), ('distributions', 'nsubj'), ('p(x', 'appos'), (')', 'punct'), ('q(x', 'conj'), (')', 'punct'), (',', 'punct'), ('easier', 'amod'), ('design', 'xcomp'), ('discriminator', 'dobj'), ('able', 'acomp'), ('choose', 'xcomp'), ('correct', 'amod'), ('hypothesis', 'dobj'), ('high', 'amod'), ('probability', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Intuitively, ,], [,, expect], [expect, ,], [,, distinct], [distinct, distributions], [distributions, p(x], [p(x, )], [), q(x], [q(x, )], [), ,], [,, easier], [easier, design], [design, discriminator], [discriminator, able], [able, choose], [choose, correct], [correct, hypothesis], [hypothesis, high], [high, probability], [probability, .]]

>> Trigrams: 
[[Intuitively, ,, expect], [,, expect, ,], [expect, ,, distinct], [,, distinct, distributions], [distinct, distributions, p(x], [distributions, p(x, )], [p(x, ), q(x], [), q(x, )], [q(x, ), ,], [), ,, easier], [,, easier, design], [easier, design, discriminator], [design, discriminator, able], [discriminator, able, choose], [able, choose, correct], [choose, correct, hypothesis], [correct, hypothesis, high], [hypothesis, high, probability], [high, probability, .]]

>> Noun Phrases are: 
[one, the more distinct the two distributions, p(x, q(x, it, a discriminator, the correct hypothesis, high probability]

>> Named Entities are: 
[('two', 'CARDINAL'), ('p(x', 'ORG')]


============================ Sentence 662 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 663 =============================

The connection between the hypothesis testing prob- lem in Fig. 


>> Tokens are: 
[connection, hypothesis, testing, prob-, lem, Fig, .] 

>> PoS Tags are: 
[('connection', 'NOUN'), ('hypothesis', 'NOUN'), ('testing', 'NOUN'), ('prob-', 'X'), ('lem', 'NOUN'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('connection', 'ROOT'), ('hypothesis', 'compound'), ('testing', 'pobj'), ('prob-', 'acl'), ('lem', 'appos'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[connection, hypothesis], [hypothesis, testing], [testing, prob-], [prob-, lem], [lem, Fig], [Fig, .]]

>> Trigrams: 
[[connection, hypothesis, testing], [hypothesis, testing, prob-], [testing, prob-, lem], [prob-, lem, Fig], [lem, Fig, .]]

>> Noun Phrases are: 
[The connection, the hypothesis testing, lem, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 664 =============================

15 and the KL divergence becomes evident if one recalls that the LLR ln(p(x)/q(x)) is known to be the best statistic T (x) in the Neyman-Pearson sense [63]. 


>> Tokens are: 
[15, KL, divergence, evident, recalls, LLR, ln(p(x)/q(x, ), ), known, best, statistic, T, (, x, ), Neyman, -, Pearson, sense, [, 63, ], .] 

>> PoS Tags are: 
[('15', 'NUM'), ('KL', 'PROPN'), ('divergence', 'NOUN'), ('evident', 'ADJ'), ('recalls', 'VERB'), ('LLR', 'NOUN'), ('ln(p(x)/q(x', 'NOUN'), (')', 'PUNCT'), (')', 'PUNCT'), ('known', 'VERB'), ('best', 'ADJ'), ('statistic', 'NOUN'), ('T', 'NOUN'), ('(', 'PUNCT'), ('x', 'X'), (')', 'PUNCT'), ('Neyman', 'PROPN'), ('-', 'PUNCT'), ('Pearson', 'PROPN'), ('sense', 'NOUN'), ('[', 'PUNCT'), ('63', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('15', 'nsubj'), ('KL', 'compound'), ('divergence', 'conj'), ('evident', 'acomp'), ('recalls', 'advcl'), ('LLR', 'compound'), ('ln(p(x)/q(x', 'ccomp'), (')', 'punct'), (')', 'punct'), ('known', 'ccomp'), ('best', 'amod'), ('statistic', 'attr'), ('T', 'appos'), ('(', 'punct'), ('x', 'intj'), (')', 'punct'), ('Neyman', 'compound'), ('-', 'punct'), ('Pearson', 'compound'), ('sense', 'pobj'), ('[', 'punct'), ('63', 'npadvmod'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[15, KL], [KL, divergence], [divergence, evident], [evident, recalls], [recalls, LLR], [LLR, ln(p(x)/q(x], [ln(p(x)/q(x, )], [), )], [), known], [known, best], [best, statistic], [statistic, T], [T, (], [(, x], [x, )], [), Neyman], [Neyman, -], [-, Pearson], [Pearson, sense], [sense, [], [[, 63], [63, ]], [], .]]

>> Trigrams: 
[[15, KL, divergence], [KL, divergence, evident], [divergence, evident, recalls], [evident, recalls, LLR], [recalls, LLR, ln(p(x)/q(x], [LLR, ln(p(x)/q(x, )], [ln(p(x)/q(x, ), )], [), ), known], [), known, best], [known, best, statistic], [best, statistic, T], [statistic, T, (], [T, (, x], [(, x, )], [x, ), Neyman], [), Neyman, -], [Neyman, -, Pearson], [-, Pearson, sense], [Pearson, sense, [], [sense, [, 63], [[, 63, ]], [63, ], .]]

>> Noun Phrases are: 
[the KL divergence, one, the best statistic, T, the Neyman-Pearson sense]

>> Named Entities are: 
[('15', 'CARDINAL'), ('KL', 'ORG'), ('LLR', 'ORG'), ('63', 'CARDINAL')]


============================ Sentence 665 =============================

The KL divergence is hence associated to a particular way of evaluating the performance of the discriminator between the two distributions. 


>> Tokens are: 
[KL, divergence, associated, particular, way, evaluating, performance, discriminator, distributions, .] 

>> PoS Tags are: 
[('KL', 'PROPN'), ('divergence', 'NOUN'), ('associated', 'VERB'), ('particular', 'ADJ'), ('way', 'NOUN'), ('evaluating', 'VERB'), ('performance', 'NOUN'), ('discriminator', 'NOUN'), ('distributions', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('KL', 'compound'), ('divergence', 'nsubjpass'), ('associated', 'ROOT'), ('particular', 'amod'), ('way', 'pobj'), ('evaluating', 'pcomp'), ('performance', 'dobj'), ('discriminator', 'pobj'), ('distributions', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[KL, divergence], [divergence, associated], [associated, particular], [particular, way], [way, evaluating], [evaluating, performance], [performance, discriminator], [discriminator, distributions], [distributions, .]]

>> Trigrams: 
[[KL, divergence, associated], [divergence, associated, particular], [associated, particular, way], [particular, way, evaluating], [way, evaluating, performance], [evaluating, performance, discriminator], [performance, discriminator, distributions], [discriminator, distributions, .]]

>> Noun Phrases are: 
[The KL divergence, a particular way, the performance, the discriminator, the two distributions]

>> Named Entities are: 
[('KL', 'ORG'), ('two', 'CARDINAL')]


============================ Sentence 666 =============================

Considering a broader formulation of the problem of designing the discriminator in Fig. 


>> Tokens are: 
[Considering, broader, formulation, problem, designing, discriminator, Fig, .] 

>> PoS Tags are: 
[('Considering', 'VERB'), ('broader', 'ADJ'), ('formulation', 'NOUN'), ('problem', 'NOUN'), ('designing', 'VERB'), ('discriminator', 'NOUN'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Considering', 'ROOT'), ('broader', 'amod'), ('formulation', 'pobj'), ('problem', 'pobj'), ('designing', 'pcomp'), ('discriminator', 'dobj'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Considering, broader], [broader, formulation], [formulation, problem], [problem, designing], [designing, discriminator], [discriminator, Fig], [Fig, .]]

>> Trigrams: 
[[Considering, broader, formulation], [broader, formulation, problem], [formulation, problem, designing], [problem, designing, discriminator], [designing, discriminator, Fig], [discriminator, Fig, .]]

>> Noun Phrases are: 
[a broader formulation, the problem, the discriminator, Fig]

>> Named Entities are: 
[('Fig', 'ORG')]


============================ Sentence 667 =============================

15, one can generalize the notion of KL divergence to the class of f -divergences. 


>> Tokens are: 
[15, ,, generalize, notion, KL, divergence, class, f, -divergences, .] 

>> PoS Tags are: 
[('15', 'NUM'), (',', 'PUNCT'), ('generalize', 'VERB'), ('notion', 'NOUN'), ('KL', 'PROPN'), ('divergence', 'NOUN'), ('class', 'NOUN'), ('f', 'PROPN'), ('-divergences', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('15', 'dep'), (',', 'punct'), ('generalize', 'ROOT'), ('notion', 'dobj'), ('KL', 'compound'), ('divergence', 'pobj'), ('class', 'pobj'), ('f', 'pobj'), ('-divergences', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[15, ,], [,, generalize], [generalize, notion], [notion, KL], [KL, divergence], [divergence, class], [class, f], [f, -divergences], [-divergences, .]]

>> Trigrams: 
[[15, ,, generalize], [,, generalize, notion], [generalize, notion, KL], [notion, KL, divergence], [KL, divergence, class], [divergence, class, f], [class, f, -divergences], [f, -divergences, .]]

>> Noun Phrases are: 
[one, the notion, KL divergence, the class, f, -divergences]

>> Named Entities are: 
[('15', 'CARDINAL'), ('KL', 'ORG')]


============================ Sentence 668 =============================

These are defined as  Df (p||q) = max T (x)  Ex∼p(x)[T (x)]− Ex∼q(x)[g(T (x))], (22)  for some concave increasing function g(·). 


>> Tokens are: 
[defined,  , Df, (, p||q, ), =, max, T, (, x, ),  , Ex∼p(x)[T, (, x)]−, Ex∼q(x)[g(T, (, x, ), ), ], ,, (, 22, ),  , concave, increasing, function, g, (, ·, ), .] 

>> PoS Tags are: 
[('defined', 'VERB'), (' ', 'SPACE'), ('Df', 'PROPN'), ('(', 'PUNCT'), ('p||q', 'NOUN'), (')', 'PUNCT'), ('=', 'SYM'), ('max', 'NOUN'), ('T', 'NOUN'), ('(', 'PUNCT'), ('x', 'X'), (')', 'PUNCT'), (' ', 'SPACE'), ('Ex∼p(x)[T', 'PROPN'), ('(', 'PUNCT'), ('x)]−', 'X'), ('Ex∼q(x)[g(T', 'NOUN'), ('(', 'PUNCT'), ('x', 'X'), (')', 'PUNCT'), (')', 'PUNCT'), (']', 'PUNCT'), (',', 'PUNCT'), ('(', 'PUNCT'), ('22', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE'), ('concave', 'VERB'), ('increasing', 'VERB'), ('function', 'NOUN'), ('g', 'NOUN'), ('(', 'PUNCT'), ('·', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('defined', 'ROOT'), (' ', 'pobj'), ('Df', 'pobj'), ('(', 'punct'), ('p||q', 'appos'), (')', 'punct'), ('=', 'punct'), ('max', 'compound'), ('T', 'appos'), ('(', 'punct'), ('x', 'punct'), (')', 'punct'), (' ', 'appos'), ('Ex∼p(x)[T', 'pobj'), ('(', 'punct'), ('x)]−', 'punct'), ('Ex∼q(x)[g(T', 'nsubj'), ('(', 'punct'), ('x', 'punct'), (')', 'punct'), (')', 'punct'), (']', 'punct'), (',', 'punct'), ('(', 'punct'), ('22', 'appos'), (')', 'punct'), (' ', 'appos'), ('concave', 'conj'), ('increasing', 'amod'), ('function', 'compound'), ('g', 'dobj'), ('(', 'punct'), ('·', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[defined,  ], [ , Df], [Df, (], [(, p||q], [p||q, )], [), =], [=, max], [max, T], [T, (], [(, x], [x, )], [),  ], [ , Ex∼p(x)[T], [Ex∼p(x)[T, (], [(, x)]−], [x)]−, Ex∼q(x)[g(T], [Ex∼q(x)[g(T, (], [(, x], [x, )], [), )], [), ]], [], ,], [,, (], [(, 22], [22, )], [),  ], [ , concave], [concave, increasing], [increasing, function], [function, g], [g, (], [(, ·], [·, )], [), .]]

>> Trigrams: 
[[defined,  , Df], [ , Df, (], [Df, (, p||q], [(, p||q, )], [p||q, ), =], [), =, max], [=, max, T], [max, T, (], [T, (, x], [(, x, )], [x, ),  ], [),  , Ex∼p(x)[T], [ , Ex∼p(x)[T, (], [Ex∼p(x)[T, (, x)]−], [(, x)]−, Ex∼q(x)[g(T], [x)]−, Ex∼q(x)[g(T, (], [Ex∼q(x)[g(T, (, x], [(, x, )], [x, ), )], [), ), ]], [), ], ,], [], ,, (], [,, (, 22], [(, 22, )], [22, ),  ], [),  , concave], [ , concave, increasing], [concave, increasing, function], [increasing, function, g], [function, g, (], [g, (, ·], [(, ·, )], [·, ), .]]

>> Noun Phrases are: 
[Df, (p||q, = max T, Ex∼p(x)[T, (x)]− Ex∼q(x)[g(T, increasing function g]

>> Named Entities are: 
[('Df', 'PERSON'), ('Ex∼p(x)[T', 'PERSON'), ('22', 'CARDINAL')]


============================ Sentence 669 =============================

The expres- sion above can be interpreted as measuring the perfor- mance of the best discriminator T (x) when the design criterion is given by the right-hand side of (22), i.e.--, Ex∼p(x)[T (x)] 


>> Tokens are: 
[expres-, sion, interpreted, measuring, perfor-, mance, best, discriminator, T, (, x, ), design, criterion, given, right, -, hand, (, 22, ), ,, i.e.--, ,, Ex∼p(x)[T, (, x, ), ]] 

>> PoS Tags are: 
[('expres-', 'NOUN'), ('sion', 'NOUN'), ('interpreted', 'VERB'), ('measuring', 'VERB'), ('perfor-', 'ADJ'), ('mance', 'NOUN'), ('best', 'ADJ'), ('discriminator', 'NOUN'), ('T', 'NOUN'), ('(', 'PUNCT'), ('x', 'X'), (')', 'PUNCT'), ('design', 'NOUN'), ('criterion', 'NOUN'), ('given', 'VERB'), ('right', 'ADJ'), ('-', 'PUNCT'), ('hand', 'NOUN'), ('(', 'PUNCT'), ('22', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('i.e.--', 'X'), (',', 'PUNCT'), ('Ex∼p(x)[T', 'PROPN'), ('(', 'PUNCT'), ('x', 'X'), (')', 'PUNCT'), (']', 'PUNCT')] 

>> Dependency Tags are: 
[('expres-', 'compound'), ('sion', 'nsubjpass'), ('interpreted', 'ROOT'), ('measuring', 'pcomp'), ('perfor-', 'amod'), ('mance', 'dobj'), ('best', 'amod'), ('discriminator', 'pobj'), ('T', 'appos'), ('(', 'punct'), ('x', 'punct'), (')', 'punct'), ('design', 'compound'), ('criterion', 'nsubjpass'), ('given', 'advcl'), ('right', 'amod'), ('-', 'punct'), ('hand', 'compound'), ('(', 'punct'), ('22', 'pobj'), (')', 'punct'), (',', 'punct'), ('i.e.--', 'punct'), (',', 'punct'), ('Ex∼p(x)[T', 'npadvmod'), ('(', 'punct'), ('x', 'dep'), (')', 'punct'), (']', 'punct')]

>> Bigrams: 
[[expres-, sion], [sion, interpreted], [interpreted, measuring], [measuring, perfor-], [perfor-, mance], [mance, best], [best, discriminator], [discriminator, T], [T, (], [(, x], [x, )], [), design], [design, criterion], [criterion, given], [given, right], [right, -], [-, hand], [hand, (], [(, 22], [22, )], [), ,], [,, i.e.--], [i.e.--, ,], [,, Ex∼p(x)[T], [Ex∼p(x)[T, (], [(, x], [x, )], [), ]]]

>> Trigrams: 
[[expres-, sion, interpreted], [sion, interpreted, measuring], [interpreted, measuring, perfor-], [measuring, perfor-, mance], [perfor-, mance, best], [mance, best, discriminator], [best, discriminator, T], [discriminator, T, (], [T, (, x], [(, x, )], [x, ), design], [), design, criterion], [design, criterion, given], [criterion, given, right], [given, right, -], [right, -, hand], [-, hand, (], [hand, (, 22], [(, 22, )], [22, ), ,], [), ,, i.e.--], [,, i.e.--, ,], [i.e.--, ,, Ex∼p(x)[T], [,, Ex∼p(x)[T, (], [Ex∼p(x)[T, (, x], [(, x, )], [x, ), ]]]

>> Noun Phrases are: 
[The expres- sion, the perfor- mance, the best discriminator, T, the design criterion, the right-hand side]

>> Named Entities are: 
[('22', 'CARDINAL'), ('Ex∼p(x)[T', 'PERSON')]


============================ Sentence 670 =============================

− Ex∼q(x)[g(T (x))], for a given function g(·). 


>> Tokens are: 
[−, Ex∼q(x)[g(T, (, x, ), ), ], ,, given, function, g, (, ·, ), .] 

>> PoS Tags are: 
[('−', 'PROPN'), ('Ex∼q(x)[g(T', 'NOUN'), ('(', 'PUNCT'), ('x', 'X'), (')', 'PUNCT'), (')', 'PUNCT'), (']', 'PUNCT'), (',', 'PUNCT'), ('given', 'VERB'), ('function', 'NOUN'), ('g', 'NOUN'), ('(', 'PUNCT'), ('·', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('−', 'compound'), ('Ex∼q(x)[g(T', 'ROOT'), ('(', 'punct'), ('x', 'appos'), (')', 'punct'), (')', 'punct'), (']', 'punct'), (',', 'punct'), ('given', 'amod'), ('function', 'pobj'), ('g', 'nummod'), ('(', 'punct'), ('·', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[−, Ex∼q(x)[g(T], [Ex∼q(x)[g(T, (], [(, x], [x, )], [), )], [), ]], [], ,], [,, given], [given, function], [function, g], [g, (], [(, ·], [·, )], [), .]]

>> Trigrams: 
[[−, Ex∼q(x)[g(T, (], [Ex∼q(x)[g(T, (, x], [(, x, )], [x, ), )], [), ), ]], [), ], ,], [], ,, given], [,, given, function], [given, function, g], [function, g, (], [g, (, ·], [(, ·, )], [·, ), .]]

>> Noun Phrases are: 
[− Ex∼q(x)[g(T, a given function]

>> Named Entities are: 
[]


============================ Sentence 671 =============================

Note that this criterion is indeed larger for a discriminator that is able to output a large value of the statistic T (x) under p(x) and a small value under q(x). 


>> Tokens are: 
[Note, criterion, larger, discriminator, able, output, large, value, statistic, T, (, x, ), p(x, ), small, value, q(x, ), .] 

>> PoS Tags are: 
[('Note', 'VERB'), ('criterion', 'NOUN'), ('larger', 'ADJ'), ('discriminator', 'NOUN'), ('able', 'ADJ'), ('output', 'VERB'), ('large', 'ADJ'), ('value', 'NOUN'), ('statistic', 'NOUN'), ('T', 'NOUN'), ('(', 'PUNCT'), ('x', 'X'), (')', 'PUNCT'), ('p(x', 'PROPN'), (')', 'PUNCT'), ('small', 'ADJ'), ('value', 'NOUN'), ('q(x', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Note', 'ROOT'), ('criterion', 'nsubj'), ('larger', 'acomp'), ('discriminator', 'pobj'), ('able', 'acomp'), ('output', 'xcomp'), ('large', 'amod'), ('value', 'dobj'), ('statistic', 'pobj'), ('T', 'appos'), ('(', 'punct'), ('x', 'dep'), (')', 'punct'), ('p(x', 'pobj'), (')', 'punct'), ('small', 'amod'), ('value', 'conj'), ('q(x', 'pobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Note, criterion], [criterion, larger], [larger, discriminator], [discriminator, able], [able, output], [output, large], [large, value], [value, statistic], [statistic, T], [T, (], [(, x], [x, )], [), p(x], [p(x, )], [), small], [small, value], [value, q(x], [q(x, )], [), .]]

>> Trigrams: 
[[Note, criterion, larger], [criterion, larger, discriminator], [larger, discriminator, able], [discriminator, able, output], [able, output, large], [output, large, value], [large, value, statistic], [value, statistic, T], [statistic, T, (], [T, (, x], [(, x, )], [x, ), p(x], [), p(x, )], [p(x, ), small], [), small, value], [small, value, q(x], [value, q(x, )], [q(x, ), .]]

>> Noun Phrases are: 
[this criterion, a discriminator, a large value, the statistic, T, p(x, q(x]

>> Named Entities are: 
[('p(x', 'ORG')]


============================ Sentence 672 =============================

The KL divergence corresponds to a specific choice of such function (see [19] for details). 


>> Tokens are: 
[KL, divergence, corresponds, specific, choice, function, (, [, 19, ], details, ), .] 

>> PoS Tags are: 
[('KL', 'PROPN'), ('divergence', 'NOUN'), ('corresponds', 'VERB'), ('specific', 'ADJ'), ('choice', 'NOUN'), ('function', 'NOUN'), ('(', 'PUNCT'), ('[', 'PUNCT'), ('19', 'NUM'), (']', 'PUNCT'), ('details', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('KL', 'compound'), ('divergence', 'nsubj'), ('corresponds', 'ROOT'), ('specific', 'amod'), ('choice', 'pobj'), ('function', 'pobj'), ('(', 'punct'), ('[', 'punct'), ('19', 'dep'), (']', 'punct'), ('details', 'pobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[KL, divergence], [divergence, corresponds], [corresponds, specific], [specific, choice], [choice, function], [function, (], [(, [], [[, 19], [19, ]], [], details], [details, )], [), .]]

>> Trigrams: 
[[KL, divergence, corresponds], [divergence, corresponds, specific], [corresponds, specific, choice], [specific, choice, function], [choice, function, (], [function, (, [], [(, [, 19], [[, 19, ]], [19, ], details], [], details, )], [details, ), .]]

>> Noun Phrases are: 
[The KL divergence, a specific choice, such function, details]

>> Named Entities are: 
[('KL', 'ORG'), ('19', 'CARDINAL')]


============================ Sentence 673 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 674 =============================

In order to move beyond ML, one can then consider fitting the model distribution to the data histogram by using a divergence measure that is tailored to the data and that captures the features of the empirical distribution that are most relevant for a given application. 


>> Tokens are: 
[order, ML, ,, consider, fitting, model, distribution, data, histogram, divergence, measure, tailored, data, captures, features, empirical, distribution, relevant, given, application, .] 

>> PoS Tags are: 
[('order', 'NOUN'), ('ML', 'PROPN'), (',', 'PUNCT'), ('consider', 'VERB'), ('fitting', 'ADJ'), ('model', 'NOUN'), ('distribution', 'NOUN'), ('data', 'NOUN'), ('histogram', 'NOUN'), ('divergence', 'NOUN'), ('measure', 'NOUN'), ('tailored', 'VERB'), ('data', 'NOUN'), ('captures', 'VERB'), ('features', 'NOUN'), ('empirical', 'ADJ'), ('distribution', 'NOUN'), ('relevant', 'ADJ'), ('given', 'VERB'), ('application', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('order', 'pobj'), ('ML', 'pobj'), (',', 'punct'), ('consider', 'ROOT'), ('fitting', 'ccomp'), ('model', 'compound'), ('distribution', 'dobj'), ('data', 'compound'), ('histogram', 'pobj'), ('divergence', 'compound'), ('measure', 'dobj'), ('tailored', 'relcl'), ('data', 'pobj'), ('captures', 'conj'), ('features', 'dobj'), ('empirical', 'amod'), ('distribution', 'pobj'), ('relevant', 'acomp'), ('given', 'amod'), ('application', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[order, ML], [ML, ,], [,, consider], [consider, fitting], [fitting, model], [model, distribution], [distribution, data], [data, histogram], [histogram, divergence], [divergence, measure], [measure, tailored], [tailored, data], [data, captures], [captures, features], [features, empirical], [empirical, distribution], [distribution, relevant], [relevant, given], [given, application], [application, .]]

>> Trigrams: 
[[order, ML, ,], [ML, ,, consider], [,, consider, fitting], [consider, fitting, model], [fitting, model, distribution], [model, distribution, data], [distribution, data, histogram], [data, histogram, divergence], [histogram, divergence, measure], [divergence, measure, tailored], [measure, tailored, data], [tailored, data, captures], [data, captures, features], [captures, features, empirical], [features, empirical, distribution], [empirical, distribution, relevant], [distribution, relevant, given], [relevant, given, application], [given, application, .]]

>> Noun Phrases are: 
[order, ML, one, the model distribution, the data histogram, a divergence measure, the data, the features, the empirical distribution, a given application]

>> Named Entities are: 
[('ML', 'ORG')]


============================ Sentence 675 =============================

Such a divergence measure can be obtained by choosing a suitable function g(·) in (22) and by optimizing (22) over a parameterized (differentiable) discriminator function Tϕ(x). 


>> Tokens are: 
[divergence, measure, obtained, choosing, suitable, function, g, (, ·, ), (, 22, ), optimizing, (, 22, ), parameterized, (, differentiable, ), discriminator, function, Tϕ(x, ), .] 

>> PoS Tags are: 
[('divergence', 'NOUN'), ('measure', 'NOUN'), ('obtained', 'VERB'), ('choosing', 'VERB'), ('suitable', 'ADJ'), ('function', 'NOUN'), ('g', 'NOUN'), ('(', 'PUNCT'), ('·', 'PUNCT'), (')', 'PUNCT'), ('(', 'PUNCT'), ('22', 'NUM'), (')', 'PUNCT'), ('optimizing', 'VERB'), ('(', 'PUNCT'), ('22', 'NUM'), (')', 'PUNCT'), ('parameterized', 'VERB'), ('(', 'PUNCT'), ('differentiable', 'ADJ'), (')', 'PUNCT'), ('discriminator', 'NOUN'), ('function', 'NOUN'), ('Tϕ(x', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('divergence', 'compound'), ('measure', 'nsubjpass'), ('obtained', 'ROOT'), ('choosing', 'pcomp'), ('suitable', 'amod'), ('function', 'dobj'), ('g', 'nummod'), ('(', 'punct'), ('·', 'punct'), (')', 'punct'), ('(', 'punct'), ('22', 'pobj'), (')', 'punct'), ('optimizing', 'pcomp'), ('(', 'punct'), ('22', 'dobj'), (')', 'punct'), ('parameterized', 'amod'), ('(', 'punct'), ('differentiable', 'amod'), (')', 'punct'), ('discriminator', 'compound'), ('function', 'pobj'), ('Tϕ(x', 'pobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[divergence, measure], [measure, obtained], [obtained, choosing], [choosing, suitable], [suitable, function], [function, g], [g, (], [(, ·], [·, )], [), (], [(, 22], [22, )], [), optimizing], [optimizing, (], [(, 22], [22, )], [), parameterized], [parameterized, (], [(, differentiable], [differentiable, )], [), discriminator], [discriminator, function], [function, Tϕ(x], [Tϕ(x, )], [), .]]

>> Trigrams: 
[[divergence, measure, obtained], [measure, obtained, choosing], [obtained, choosing, suitable], [choosing, suitable, function], [suitable, function, g], [function, g, (], [g, (, ·], [(, ·, )], [·, ), (], [), (, 22], [(, 22, )], [22, ), optimizing], [), optimizing, (], [optimizing, (, 22], [(, 22, )], [22, ), parameterized], [), parameterized, (], [parameterized, (, differentiable], [(, differentiable, )], [differentiable, ), discriminator], [), discriminator, function], [discriminator, function, Tϕ(x], [function, Tϕ(x, )], [Tϕ(x, ), .]]

>> Noun Phrases are: 
[Such a divergence measure, a suitable function, a parameterized (differentiable) discriminator function, Tϕ(x]

>> Named Entities are: 
[('22', 'CARDINAL'), ('22', 'CARDINAL')]


============================ Sentence 676 =============================

Integrating the evaluation of the divergence with the problem of learning the model parameters yields the  16    min-max problem  min θ  max ϕ  Ex∼pD(x)[Tϕ(x)]− Ex∼p(x|θ)[g(Tϕ(x))]. 


>> Tokens are: 
[Integrating, evaluation, divergence, problem, learning, model, parameters, yields,  , 16,    , min, -, max, problem,  , min, θ,  , max, ϕ,  , Ex∼pD(x)[Tϕ(x)]−, Ex∼p(x|θ)[g(Tϕ(x, ), ), ], .] 

>> PoS Tags are: 
[('Integrating', 'VERB'), ('evaluation', 'NOUN'), ('divergence', 'NOUN'), ('problem', 'NOUN'), ('learning', 'VERB'), ('model', 'NOUN'), ('parameters', 'NOUN'), ('yields', 'VERB'), (' ', 'SPACE'), ('16', 'NUM'), ('   ', 'SPACE'), ('min', 'NOUN'), ('-', 'PUNCT'), ('max', 'NOUN'), ('problem', 'NOUN'), (' ', 'SPACE'), ('min', 'NOUN'), ('θ', 'PROPN'), (' ', 'SPACE'), ('max', 'NOUN'), ('ϕ', 'PROPN'), (' ', 'SPACE'), ('Ex∼pD(x)[Tϕ(x)]−', 'PROPN'), ('Ex∼p(x|θ)[g(Tϕ(x', 'NOUN'), (')', 'PUNCT'), (')', 'PUNCT'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Integrating', 'csubj'), ('evaluation', 'dobj'), ('divergence', 'pobj'), ('problem', 'pobj'), ('learning', 'pcomp'), ('model', 'compound'), ('parameters', 'nsubj'), ('yields', 'ROOT'), (' ', 'nmod'), ('16', 'nummod'), ('   ', 'nummod'), ('min', 'compound'), ('-', 'punct'), ('max', 'compound'), ('problem', 'dobj'), (' ', 'nmod'), ('min', 'compound'), ('θ', 'meta'), (' ', 'compound'), ('max', 'appos'), ('ϕ', 'punct'), (' ', 'npadvmod'), ('Ex∼pD(x)[Tϕ(x)]−', 'compound'), ('Ex∼p(x|θ)[g(Tϕ(x', 'appos'), (')', 'punct'), (')', 'punct'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Integrating, evaluation], [evaluation, divergence], [divergence, problem], [problem, learning], [learning, model], [model, parameters], [parameters, yields], [yields,  ], [ , 16], [16,    ], [   , min], [min, -], [-, max], [max, problem], [problem,  ], [ , min], [min, θ], [θ,  ], [ , max], [max, ϕ], [ϕ,  ], [ , Ex∼pD(x)[Tϕ(x)]−], [Ex∼pD(x)[Tϕ(x)]−, Ex∼p(x|θ)[g(Tϕ(x], [Ex∼p(x|θ)[g(Tϕ(x, )], [), )], [), ]], [], .]]

>> Trigrams: 
[[Integrating, evaluation, divergence], [evaluation, divergence, problem], [divergence, problem, learning], [problem, learning, model], [learning, model, parameters], [model, parameters, yields], [parameters, yields,  ], [yields,  , 16], [ , 16,    ], [16,    , min], [   , min, -], [min, -, max], [-, max, problem], [max, problem,  ], [problem,  , min], [ , min, θ], [min, θ,  ], [θ,  , max], [ , max, ϕ], [max, ϕ,  ], [ϕ,  , Ex∼pD(x)[Tϕ(x)]−], [ , Ex∼pD(x)[Tϕ(x)]−, Ex∼p(x|θ)[g(Tϕ(x], [Ex∼pD(x)[Tϕ(x)]−, Ex∼p(x|θ)[g(Tϕ(x, )], [Ex∼p(x|θ)[g(Tϕ(x, ), )], [), ), ]], [), ], .]]

>> Noun Phrases are: 
[the evaluation, the divergence, the problem, the model parameters, the  16    min-max problem,  min θ  max, Ex∼pD(x)[Tϕ(x)]− Ex∼p(x|θ)[g(Tϕ(x]

>> Named Entities are: 
[('16', 'CARDINAL')]


============================ Sentence 677 =============================

(23)   


>> Tokens are: 
[(, 23, ),  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('23', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('23', 'ROOT'), (')', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[(, 23], [23, )], [),  ]]

>> Trigrams: 
[[(, 23, )], [23, ),  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('23', 'CARDINAL')]


============================ Sentence 678 =============================

This can be famously interpreted as a game between the learner, which optimizes the model parameters θ, and the discriminator, which tries to find the best function Tϕ(x) to distinguish between data and generated samples. 


>> Tokens are: 
[famously, interpreted, game, learner, ,, optimizes, model, parameters, θ, ,, discriminator, ,, tries, find, best, function, Tϕ(x, ), distinguish, data, generated, samples, .] 

>> PoS Tags are: 
[('famously', 'ADV'), ('interpreted', 'VERB'), ('game', 'NOUN'), ('learner', 'NOUN'), (',', 'PUNCT'), ('optimizes', 'VERB'), ('model', 'NOUN'), ('parameters', 'NOUN'), ('θ', 'NOUN'), (',', 'PUNCT'), ('discriminator', 'NOUN'), (',', 'PUNCT'), ('tries', 'VERB'), ('find', 'VERB'), ('best', 'ADJ'), ('function', 'NOUN'), ('Tϕ(x', 'PROPN'), (')', 'PUNCT'), ('distinguish', 'VERB'), ('data', 'NOUN'), ('generated', 'VERB'), ('samples', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('famously', 'advmod'), ('interpreted', 'ROOT'), ('game', 'pobj'), ('learner', 'pobj'), (',', 'punct'), ('optimizes', 'relcl'), ('model', 'compound'), ('parameters', 'nsubj'), ('θ', 'ccomp'), (',', 'punct'), ('discriminator', 'conj'), (',', 'punct'), ('tries', 'relcl'), ('find', 'xcomp'), ('best', 'amod'), ('function', 'dobj'), ('Tϕ(x', 'appos'), (')', 'punct'), ('distinguish', 'advcl'), ('data', 'pobj'), ('generated', 'amod'), ('samples', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[famously, interpreted], [interpreted, game], [game, learner], [learner, ,], [,, optimizes], [optimizes, model], [model, parameters], [parameters, θ], [θ, ,], [,, discriminator], [discriminator, ,], [,, tries], [tries, find], [find, best], [best, function], [function, Tϕ(x], [Tϕ(x, )], [), distinguish], [distinguish, data], [data, generated], [generated, samples], [samples, .]]

>> Trigrams: 
[[famously, interpreted, game], [interpreted, game, learner], [game, learner, ,], [learner, ,, optimizes], [,, optimizes, model], [optimizes, model, parameters], [model, parameters, θ], [parameters, θ, ,], [θ, ,, discriminator], [,, discriminator, ,], [discriminator, ,, tries], [,, tries, find], [tries, find, best], [find, best, function], [best, function, Tϕ(x], [function, Tϕ(x, )], [Tϕ(x, ), distinguish], [), distinguish, data], [distinguish, data, generated], [data, generated, samples], [generated, samples, .]]

>> Noun Phrases are: 
[a game, the learner, the model parameters, the discriminator, the best function, Tϕ(x, data, generated samples]

>> Named Entities are: 
[]


============================ Sentence 679 =============================

The resulting method, known as GAN, has recently led to impressive improvements of ML for sample generation [64]. 


>> Tokens are: 
[resulting, method, ,, known, GAN, ,, recently, led, impressive, improvements, ML, sample, generation, [, 64, ], .] 

>> PoS Tags are: 
[('resulting', 'VERB'), ('method', 'NOUN'), (',', 'PUNCT'), ('known', 'VERB'), ('GAN', 'PROPN'), (',', 'PUNCT'), ('recently', 'ADV'), ('led', 'VERB'), ('impressive', 'ADJ'), ('improvements', 'NOUN'), ('ML', 'PROPN'), ('sample', 'NOUN'), ('generation', 'NOUN'), ('[', 'PUNCT'), ('64', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('resulting', 'amod'), ('method', 'nsubj'), (',', 'punct'), ('known', 'acl'), ('GAN', 'pobj'), (',', 'punct'), ('recently', 'advmod'), ('led', 'ROOT'), ('impressive', 'amod'), ('improvements', 'pobj'), ('ML', 'pobj'), ('sample', 'compound'), ('generation', 'pobj'), ('[', 'punct'), ('64', 'npadvmod'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[resulting, method], [method, ,], [,, known], [known, GAN], [GAN, ,], [,, recently], [recently, led], [led, impressive], [impressive, improvements], [improvements, ML], [ML, sample], [sample, generation], [generation, [], [[, 64], [64, ]], [], .]]

>> Trigrams: 
[[resulting, method, ,], [method, ,, known], [,, known, GAN], [known, GAN, ,], [GAN, ,, recently], [,, recently, led], [recently, led, impressive], [led, impressive, improvements], [impressive, improvements, ML], [improvements, ML, sample], [ML, sample, generation], [sample, generation, [], [generation, [, 64], [[, 64, ]], [64, ], .]]

>> Noun Phrases are: 
[The resulting method, GAN, impressive improvements, ML, sample generation]

>> Named Entities are: 
[('GAN', 'ORG'), ('ML', 'ORG'), ('64', 'CARDINAL')]


============================ Sentence 680 =============================

 VI. APPLICATIONS OF UNSUPERVISED LEARNING TO COMMUNICATION SYSTEMS   


>> Tokens are: 
[ , VI, ., APPLICATIONS, UNSUPERVISED, LEARNING, COMMUNICATION, SYSTEMS,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('VI', 'PROPN'), ('.', 'PUNCT'), ('APPLICATIONS', 'NOUN'), ('UNSUPERVISED', 'PROPN'), ('LEARNING', 'PROPN'), ('COMMUNICATION', 'PROPN'), ('SYSTEMS', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('VI', 'nmod'), ('.', 'punct'), ('APPLICATIONS', 'ROOT'), ('UNSUPERVISED', 'compound'), ('LEARNING', 'pobj'), ('COMMUNICATION', 'pobj'), ('SYSTEMS', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[ , VI], [VI, .], [., APPLICATIONS], [APPLICATIONS, UNSUPERVISED], [UNSUPERVISED, LEARNING], [LEARNING, COMMUNICATION], [COMMUNICATION, SYSTEMS], [SYSTEMS,  ]]

>> Trigrams: 
[[ , VI, .], [VI, ., APPLICATIONS], [., APPLICATIONS, UNSUPERVISED], [APPLICATIONS, UNSUPERVISED, LEARNING], [UNSUPERVISED, LEARNING, COMMUNICATION], [LEARNING, COMMUNICATION, SYSTEMS], [COMMUNICATION, SYSTEMS,  ]]

>> Noun Phrases are: 
[ VI. APPLICATIONS, UNSUPERVISED LEARNING, COMMUNICATION, SYSTEMS]

>> Named Entities are: 
[]


============================ Sentence 681 =============================

In this section, we highlight some applications of unsupervised learning to communication networks. 


>> Tokens are: 
[section, ,, highlight, applications, unsupervised, learning, communication, networks, .] 

>> PoS Tags are: 
[('section', 'NOUN'), (',', 'PUNCT'), ('highlight', 'VERB'), ('applications', 'NOUN'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('communication', 'NOUN'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('section', 'pobj'), (',', 'punct'), ('highlight', 'ROOT'), ('applications', 'dobj'), ('unsupervised', 'amod'), ('learning', 'pobj'), ('communication', 'compound'), ('networks', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[section, ,], [,, highlight], [highlight, applications], [applications, unsupervised], [unsupervised, learning], [learning, communication], [communication, networks], [networks, .]]

>> Trigrams: 
[[section, ,, highlight], [,, highlight, applications], [highlight, applications, unsupervised], [applications, unsupervised, learning], [unsupervised, learning, communication], [learning, communication, networks], [communication, networks, .]]

>> Noun Phrases are: 
[this section, we, some applications, unsupervised learning, communication networks]

>> Named Entities are: 
[]


============================ Sentence 682 =============================

 A. 


>> Tokens are: 
[ , A.] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('A.', 'NOUN')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('A.', 'ROOT')]

>> Bigrams: 
[[ , A.]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[ A.]

>> Named Entities are: 
[]


============================ Sentence 683 =============================

At the Edge  (1) Physical Layer: Let us first consider some appli- cations of autoencoders at the physical layer as imple- mented by the network edge nodes. 


>> Tokens are: 
[Edge,  , (, 1, ), Physical, Layer, :, Let, consider, appli-, cations, autoencoders, physical, layer, imple-, mented, network, edge, nodes, .] 

>> PoS Tags are: 
[('Edge', 'NOUN'), (' ', 'SPACE'), ('(', 'PUNCT'), ('1', 'X'), (')', 'PUNCT'), ('Physical', 'PROPN'), ('Layer', 'PROPN'), (':', 'PUNCT'), ('Let', 'VERB'), ('consider', 'VERB'), ('appli-', 'ADJ'), ('cations', 'NOUN'), ('autoencoders', 'NOUN'), ('physical', 'ADJ'), ('layer', 'NOUN'), ('imple-', 'NOUN'), ('mented', 'VERB'), ('network', 'NOUN'), ('edge', 'NOUN'), ('nodes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Edge', 'pobj'), (' ', 'pobj'), ('(', 'punct'), ('1', 'appos'), (')', 'punct'), ('Physical', 'compound'), ('Layer', 'appos'), (':', 'punct'), ('Let', 'ROOT'), ('consider', 'ccomp'), ('appli-', 'amod'), ('cations', 'dobj'), ('autoencoders', 'pobj'), ('physical', 'amod'), ('layer', 'pobj'), ('imple-', 'pobj'), ('mented', 'acl'), ('network', 'compound'), ('edge', 'compound'), ('nodes', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Edge,  ], [ , (], [(, 1], [1, )], [), Physical], [Physical, Layer], [Layer, :], [:, Let], [Let, consider], [consider, appli-], [appli-, cations], [cations, autoencoders], [autoencoders, physical], [physical, layer], [layer, imple-], [imple-, mented], [mented, network], [network, edge], [edge, nodes], [nodes, .]]

>> Trigrams: 
[[Edge,  , (], [ , (, 1], [(, 1, )], [1, ), Physical], [), Physical, Layer], [Physical, Layer, :], [Layer, :, Let], [:, Let, consider], [Let, consider, appli-], [consider, appli-, cations], [appli-, cations, autoencoders], [cations, autoencoders, physical], [autoencoders, physical, layer], [physical, layer, imple-], [layer, imple-, mented], [imple-, mented, network], [mented, network, edge], [network, edge, nodes], [edge, nodes, .]]

>> Noun Phrases are: 
[the Edge, Physical Layer, us, some appli- cations, autoencoders, the physical layer, imple-, the network edge nodes]

>> Named Entities are: 
[('Edge', 'FAC'), ('first', 'ORDINAL')]


============================ Sentence 684 =============================

A fundamental idea is to treat the chain of encoder, channel, and decoder in a communication link as an autoencoder, where, with reference to Fig. 


>> Tokens are: 
[fundamental, idea, treat, chain, encoder, ,, channel, ,, decoder, communication, link, autoencoder, ,, ,, reference, Fig, .] 

>> PoS Tags are: 
[('fundamental', 'ADJ'), ('idea', 'NOUN'), ('treat', 'VERB'), ('chain', 'NOUN'), ('encoder', 'NOUN'), (',', 'PUNCT'), ('channel', 'NOUN'), (',', 'PUNCT'), ('decoder', 'NOUN'), ('communication', 'NOUN'), ('link', 'NOUN'), ('autoencoder', 'NOUN'), (',', 'PUNCT'), (',', 'PUNCT'), ('reference', 'NOUN'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('fundamental', 'amod'), ('idea', 'nsubj'), ('treat', 'xcomp'), ('chain', 'dobj'), ('encoder', 'pobj'), (',', 'punct'), ('channel', 'conj'), (',', 'punct'), ('decoder', 'conj'), ('communication', 'compound'), ('link', 'pobj'), ('autoencoder', 'pobj'), (',', 'punct'), (',', 'punct'), ('reference', 'pobj'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[fundamental, idea], [idea, treat], [treat, chain], [chain, encoder], [encoder, ,], [,, channel], [channel, ,], [,, decoder], [decoder, communication], [communication, link], [link, autoencoder], [autoencoder, ,], [,, ,], [,, reference], [reference, Fig], [Fig, .]]

>> Trigrams: 
[[fundamental, idea, treat], [idea, treat, chain], [treat, chain, encoder], [chain, encoder, ,], [encoder, ,, channel], [,, channel, ,], [channel, ,, decoder], [,, decoder, communication], [decoder, communication, link], [communication, link, autoencoder], [link, autoencoder, ,], [autoencoder, ,, ,], [,, ,, reference], [,, reference, Fig], [reference, Fig, .]]

>> Noun Phrases are: 
[A fundamental idea, the chain, encoder, channel, decoder, a communication link, an autoencoder, reference, Fig]

>> Named Entities are: 
[('Fig', 'PERSON')]


============================ Sentence 685 =============================

11(d), the input message is x, the transmitted codewords and received signals represent the intermediate representation z, and the output of the decoder should match the input [30]. 


>> Tokens are: 
[11(d, ), ,, input, message, x, ,, transmitted, codewords, received, signals, represent, intermediate, representation, z, ,, output, decoder, match, input, [, 30, ], .] 

>> PoS Tags are: 
[('11(d', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('input', 'NOUN'), ('message', 'NOUN'), ('x', 'SYM'), (',', 'PUNCT'), ('transmitted', 'VERB'), ('codewords', 'NOUN'), ('received', 'VERB'), ('signals', 'NOUN'), ('represent', 'VERB'), ('intermediate', 'ADJ'), ('representation', 'NOUN'), ('z', 'NOUN'), (',', 'PUNCT'), ('output', 'NOUN'), ('decoder', 'NOUN'), ('match', 'VERB'), ('input', 'NOUN'), ('[', 'PUNCT'), ('30', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('11(d', 'meta'), (')', 'punct'), (',', 'punct'), ('input', 'compound'), ('message', 'nsubj'), ('x', 'punct'), (',', 'punct'), ('transmitted', 'amod'), ('codewords', 'dep'), ('received', 'conj'), ('signals', 'nsubj'), ('represent', 'ccomp'), ('intermediate', 'amod'), ('representation', 'dobj'), ('z', 'prep'), (',', 'punct'), ('output', 'nsubj'), ('decoder', 'pobj'), ('match', 'conj'), ('input', 'dobj'), ('[', 'punct'), ('30', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[11(d, )], [), ,], [,, input], [input, message], [message, x], [x, ,], [,, transmitted], [transmitted, codewords], [codewords, received], [received, signals], [signals, represent], [represent, intermediate], [intermediate, representation], [representation, z], [z, ,], [,, output], [output, decoder], [decoder, match], [match, input], [input, [], [[, 30], [30, ]], [], .]]

>> Trigrams: 
[[11(d, ), ,], [), ,, input], [,, input, message], [input, message, x], [message, x, ,], [x, ,, transmitted], [,, transmitted, codewords], [transmitted, codewords, received], [codewords, received, signals], [received, signals, represent], [signals, represent, intermediate], [represent, intermediate, representation], [intermediate, representation, z], [representation, z, ,], [z, ,, output], [,, output, decoder], [output, decoder, match], [decoder, match, input], [match, input, [], [input, [, 30], [[, 30, ]], [30, ], .]]

>> Noun Phrases are: 
[the input message, signals, the intermediate representation, the output, the decoder, the input]

>> Named Entities are: 
[('11(d', 'DATE'), ('30', 'CARDINAL')]


============================ Sentence 686 =============================

Note that, for this particular autoencoder, the mapping p(x|z) can only be partially learned, as it includes not only the encoder but also the communication channel, while the conditional distribution p(x|z) defining the decoder can be learned. 


>> Tokens are: 
[Note, ,, particular, autoencoder, ,, mapping, p(x|z, ), partially, learned, ,, includes, encoder, communication, channel, ,, conditional, distribution, p(x|z, ), defining, decoder, learned, .] 

>> PoS Tags are: 
[('Note', 'VERB'), (',', 'PUNCT'), ('particular', 'ADJ'), ('autoencoder', 'NOUN'), (',', 'PUNCT'), ('mapping', 'NOUN'), ('p(x|z', 'PROPN'), (')', 'PUNCT'), ('partially', 'ADV'), ('learned', 'VERB'), (',', 'PUNCT'), ('includes', 'VERB'), ('encoder', 'NOUN'), ('communication', 'NOUN'), ('channel', 'NOUN'), (',', 'PUNCT'), ('conditional', 'ADJ'), ('distribution', 'NOUN'), ('p(x|z', 'NOUN'), (')', 'PUNCT'), ('defining', 'VERB'), ('decoder', 'NOUN'), ('learned', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Note', 'ROOT'), (',', 'punct'), ('particular', 'amod'), ('autoencoder', 'pobj'), (',', 'punct'), ('mapping', 'compound'), ('p(x|z', 'meta'), (')', 'punct'), ('partially', 'advmod'), ('learned', 'ccomp'), (',', 'punct'), ('includes', 'advcl'), ('encoder', 'dobj'), ('communication', 'compound'), ('channel', 'conj'), (',', 'punct'), ('conditional', 'amod'), ('distribution', 'nsubj'), ('p(x|z', 'appos'), (')', 'punct'), ('defining', 'advcl'), ('decoder', 'nsubjpass'), ('learned', 'ccomp'), ('.', 'punct')]

>> Bigrams: 
[[Note, ,], [,, particular], [particular, autoencoder], [autoencoder, ,], [,, mapping], [mapping, p(x|z], [p(x|z, )], [), partially], [partially, learned], [learned, ,], [,, includes], [includes, encoder], [encoder, communication], [communication, channel], [channel, ,], [,, conditional], [conditional, distribution], [distribution, p(x|z], [p(x|z, )], [), defining], [defining, decoder], [decoder, learned], [learned, .]]

>> Trigrams: 
[[Note, ,, particular], [,, particular, autoencoder], [particular, autoencoder, ,], [autoencoder, ,, mapping], [,, mapping, p(x|z], [mapping, p(x|z, )], [p(x|z, ), partially], [), partially, learned], [partially, learned, ,], [learned, ,, includes], [,, includes, encoder], [includes, encoder, communication], [encoder, communication, channel], [communication, channel, ,], [channel, ,, conditional], [,, conditional, distribution], [conditional, distribution, p(x|z], [distribution, p(x|z, )], [p(x|z, ), defining], [), defining, decoder], [defining, decoder, learned], [decoder, learned, .]]

>> Noun Phrases are: 
[this particular autoencoder, it, not only the encoder, the communication channel, the conditional distribution, p(x|z, the decoder]

>> Named Entities are: 
[]


============================ Sentence 687 =============================

We should now ask when this viewpoint can be beneficial in light of the criteria reviewed in Sec. 


>> Tokens are: 
[ask, viewpoint, beneficial, light, criteria, reviewed, Sec, .] 

>> PoS Tags are: 
[('ask', 'VERB'), ('viewpoint', 'NOUN'), ('beneficial', 'ADJ'), ('light', 'NOUN'), ('criteria', 'NOUN'), ('reviewed', 'VERB'), ('Sec', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ask', 'ROOT'), ('viewpoint', 'nsubj'), ('beneficial', 'acomp'), ('light', 'pobj'), ('criteria', 'pobj'), ('reviewed', 'acl'), ('Sec', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ask, viewpoint], [viewpoint, beneficial], [beneficial, light], [light, criteria], [criteria, reviewed], [reviewed, Sec], [Sec, .]]

>> Trigrams: 
[[ask, viewpoint, beneficial], [viewpoint, beneficial, light], [beneficial, light, criteria], [light, criteria, reviewed], [criteria, reviewed, Sec], [reviewed, Sec, .]]

>> Noun Phrases are: 
[We, this viewpoint, light, the criteria, Sec]

>> Named Entities are: 
[('Sec', 'PERSON')]


============================ Sentence 688 =============================

I-C.   


>> Tokens are: 
[-, C.,  ] 

>> PoS Tags are: 
[('-', 'PUNCT'), ('C.', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('-', 'punct'), ('C.', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[-, C.], [C.,  ]]

>> Trigrams: 
[[-, C.,  ]]

>> Noun Phrases are: 
[I-C.]

>> Named Entities are: 
[]


============================ Sentence 689 =============================

To address this question, one should check whether a model or algorithm deficit exists to justify the use of machine learning tools. 


>> Tokens are: 
[address, question, ,, check, model, algorithm, deficit, exists, justify, use, machine, learning, tools, .] 

>> PoS Tags are: 
[('address', 'VERB'), ('question', 'NOUN'), (',', 'PUNCT'), ('check', 'VERB'), ('model', 'NOUN'), ('algorithm', 'NOUN'), ('deficit', 'NOUN'), ('exists', 'VERB'), ('justify', 'VERB'), ('use', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('tools', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('address', 'advcl'), ('question', 'dobj'), (',', 'punct'), ('check', 'ROOT'), ('model', 'nsubj'), ('algorithm', 'compound'), ('deficit', 'conj'), ('exists', 'ccomp'), ('justify', 'xcomp'), ('use', 'dobj'), ('machine', 'compound'), ('learning', 'compound'), ('tools', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[address, question], [question, ,], [,, check], [check, model], [model, algorithm], [algorithm, deficit], [deficit, exists], [exists, justify], [justify, use], [use, machine], [machine, learning], [learning, tools], [tools, .]]

>> Trigrams: 
[[address, question, ,], [question, ,, check], [,, check, model], [check, model, algorithm], [model, algorithm, deficit], [algorithm, deficit, exists], [deficit, exists, justify], [exists, justify, use], [justify, use, machine], [use, machine, learning], [machine, learning, tools], [learning, tools, .]]

>> Noun Phrases are: 
[this question, one, a model, algorithm deficit, the use, machine learning tools]

>> Named Entities are: 
[]


============================ Sentence 690 =============================

Training an autoencoder requires the availability of a model for the channel, and hence a model deficit would make this approach inapplicable unless further mechanisms are put in place (see below). 


>> Tokens are: 
[Training, autoencoder, requires, availability, model, channel, ,, model, deficit, approach, inapplicable, mechanisms, place, (, ), .] 

>> PoS Tags are: 
[('Training', 'VERB'), ('autoencoder', 'NOUN'), ('requires', 'VERB'), ('availability', 'NOUN'), ('model', 'NOUN'), ('channel', 'NOUN'), (',', 'PUNCT'), ('model', 'NOUN'), ('deficit', 'NOUN'), ('approach', 'NOUN'), ('inapplicable', 'ADJ'), ('mechanisms', 'NOUN'), ('place', 'NOUN'), ('(', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Training', 'csubj'), ('autoencoder', 'dobj'), ('requires', 'ROOT'), ('availability', 'dobj'), ('model', 'pobj'), ('channel', 'pobj'), (',', 'punct'), ('model', 'compound'), ('deficit', 'nsubj'), ('approach', 'nsubj'), ('inapplicable', 'ccomp'), ('mechanisms', 'nsubjpass'), ('place', 'pobj'), ('(', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Training, autoencoder], [autoencoder, requires], [requires, availability], [availability, model], [model, channel], [channel, ,], [,, model], [model, deficit], [deficit, approach], [approach, inapplicable], [inapplicable, mechanisms], [mechanisms, place], [place, (], [(, )], [), .]]

>> Trigrams: 
[[Training, autoencoder, requires], [autoencoder, requires, availability], [requires, availability, model], [availability, model, channel], [model, channel, ,], [channel, ,, model], [,, model, deficit], [model, deficit, approach], [deficit, approach, inapplicable], [approach, inapplicable, mechanisms], [inapplicable, mechanisms, place], [mechanisms, place, (], [place, (, )], [(, ), .]]

>> Noun Phrases are: 
[an autoencoder, the availability, a model, the channel, a model deficit, this approach, further mechanisms, place]

>> Named Entities are: 
[]


============================ Sentence 691 =============================

Examples of algorithm deficit include channels with complex non-linear dynamical models, such as optical links [65]; Gaussian channels with feedback, for which optimal practical encoding schemes are not known [66]; multiple access channels with sparse transmission codes [67]; and joint source-channel coding 


>> Tokens are: 
[Examples, algorithm, deficit, include, channels, complex, non, -, linear, dynamical, models, ,, optical, links, [, 65, ], ;, Gaussian, channels, feedback, ,, optimal, practical, encoding, schemes, known, [, 66, ], ;, multiple, access, channels, sparse, transmission, codes, [, 67, ], ;, joint, source, -, channel, coding] 

>> PoS Tags are: 
[('Examples', 'NOUN'), ('algorithm', 'ADJ'), ('deficit', 'NOUN'), ('include', 'VERB'), ('channels', 'NOUN'), ('complex', 'ADJ'), ('non', 'ADJ'), ('-', 'ADJ'), ('linear', 'ADJ'), ('dynamical', 'ADJ'), ('models', 'NOUN'), (',', 'PUNCT'), ('optical', 'ADJ'), ('links', 'NOUN'), ('[', 'PUNCT'), ('65', 'NUM'), (']', 'PUNCT'), (';', 'PUNCT'), ('Gaussian', 'ADJ'), ('channels', 'NOUN'), ('feedback', 'NOUN'), (',', 'PUNCT'), ('optimal', 'ADJ'), ('practical', 'ADJ'), ('encoding', 'NOUN'), ('schemes', 'NOUN'), ('known', 'VERB'), ('[', 'PUNCT'), ('66', 'NUM'), (']', 'PUNCT'), (';', 'PUNCT'), ('multiple', 'ADJ'), ('access', 'NOUN'), ('channels', 'NOUN'), ('sparse', 'ADJ'), ('transmission', 'NOUN'), ('codes', 'NOUN'), ('[', 'PUNCT'), ('67', 'NUM'), (']', 'PUNCT'), (';', 'PUNCT'), ('joint', 'ADJ'), ('source', 'NOUN'), ('-', 'PUNCT'), ('channel', 'NOUN'), ('coding', 'NOUN')] 

>> Dependency Tags are: 
[('Examples', 'nsubj'), ('algorithm', 'amod'), ('deficit', 'pobj'), ('include', 'ccomp'), ('channels', 'dobj'), ('complex', 'amod'), ('non', 'amod'), ('-', 'amod'), ('linear', 'amod'), ('dynamical', 'amod'), ('models', 'pobj'), (',', 'punct'), ('optical', 'amod'), ('links', 'pobj'), ('[', 'punct'), ('65', 'appos'), (']', 'punct'), (';', 'punct'), ('Gaussian', 'amod'), ('channels', 'ROOT'), ('feedback', 'pobj'), (',', 'punct'), ('optimal', 'amod'), ('practical', 'amod'), ('encoding', 'compound'), ('schemes', 'nsubjpass'), ('known', 'relcl'), ('[', 'punct'), ('66', 'npadvmod'), (']', 'punct'), (';', 'punct'), ('multiple', 'amod'), ('access', 'compound'), ('channels', 'conj'), ('sparse', 'amod'), ('transmission', 'compound'), ('codes', 'pobj'), ('[', 'punct'), ('67', 'appos'), (']', 'punct'), (';', 'punct'), ('joint', 'amod'), ('source', 'compound'), ('-', 'punct'), ('channel', 'compound'), ('coding', 'conj')]

>> Bigrams: 
[[Examples, algorithm], [algorithm, deficit], [deficit, include], [include, channels], [channels, complex], [complex, non], [non, -], [-, linear], [linear, dynamical], [dynamical, models], [models, ,], [,, optical], [optical, links], [links, [], [[, 65], [65, ]], [], ;], [;, Gaussian], [Gaussian, channels], [channels, feedback], [feedback, ,], [,, optimal], [optimal, practical], [practical, encoding], [encoding, schemes], [schemes, known], [known, [], [[, 66], [66, ]], [], ;], [;, multiple], [multiple, access], [access, channels], [channels, sparse], [sparse, transmission], [transmission, codes], [codes, [], [[, 67], [67, ]], [], ;], [;, joint], [joint, source], [source, -], [-, channel], [channel, coding]]

>> Trigrams: 
[[Examples, algorithm, deficit], [algorithm, deficit, include], [deficit, include, channels], [include, channels, complex], [channels, complex, non], [complex, non, -], [non, -, linear], [-, linear, dynamical], [linear, dynamical, models], [dynamical, models, ,], [models, ,, optical], [,, optical, links], [optical, links, [], [links, [, 65], [[, 65, ]], [65, ], ;], [], ;, Gaussian], [;, Gaussian, channels], [Gaussian, channels, feedback], [channels, feedback, ,], [feedback, ,, optimal], [,, optimal, practical], [optimal, practical, encoding], [practical, encoding, schemes], [encoding, schemes, known], [schemes, known, [], [known, [, 66], [[, 66, ]], [66, ], ;], [], ;, multiple], [;, multiple, access], [multiple, access, channels], [access, channels, sparse], [channels, sparse, transmission], [sparse, transmission, codes], [transmission, codes, [], [codes, [, 67], [[, 67, ]], [67, ], ;], [], ;, joint], [;, joint, source], [joint, source, -], [source, -, channel], [-, channel, coding]]

>> Noun Phrases are: 
[Examples, algorithm deficit, channels, complex non-linear dynamical models, optical links, feedback, optimal practical encoding schemes, multiple access channels, sparse transmission codes, joint source-channel coding]

>> Named Entities are: 
[('65', 'CARDINAL'), ('Gaussian', 'NORP'), ('66', 'CARDINAL'), ('67', 'CARDINAL')]


============================ Sentence 692 =============================

[68]. 


>> Tokens are: 
[[, 68, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('68', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('68', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 68], [68, ]], [], .]]

>> Trigrams: 
[[[, 68, ]], [68, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('68', 'CARDINAL')]


============================ Sentence 693 =============================

 Other applications at the physical layer leverage the use of autoencoders as compressors (see Sec V-B) or denoisers. 


>> Tokens are: 
[ , applications, physical, layer, leverage, use, autoencoders, compressors, (, Sec, V, -, B, ), denoisers, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('applications', 'NOUN'), ('physical', 'ADJ'), ('layer', 'NOUN'), ('leverage', 'NOUN'), ('use', 'NOUN'), ('autoencoders', 'NOUN'), ('compressors', 'NOUN'), ('(', 'PUNCT'), ('Sec', 'PROPN'), ('V', 'PROPN'), ('-', 'PUNCT'), ('B', 'PROPN'), (')', 'PUNCT'), ('denoisers', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nmod'), ('applications', 'nsubj'), ('physical', 'amod'), ('layer', 'compound'), ('leverage', 'pobj'), ('use', 'dobj'), ('autoencoders', 'pobj'), ('compressors', 'pobj'), ('(', 'punct'), ('Sec', 'compound'), ('V', 'compound'), ('-', 'punct'), ('B', 'dobj'), (')', 'punct'), ('denoisers', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[ , applications], [applications, physical], [physical, layer], [layer, leverage], [leverage, use], [use, autoencoders], [autoencoders, compressors], [compressors, (], [(, Sec], [Sec, V], [V, -], [-, B], [B, )], [), denoisers], [denoisers, .]]

>> Trigrams: 
[[ , applications, physical], [applications, physical, layer], [physical, layer, leverage], [layer, leverage, use], [leverage, use, autoencoders], [use, autoencoders, compressors], [autoencoders, compressors, (], [compressors, (, Sec], [(, Sec, V], [Sec, V, -], [V, -, B], [-, B, )], [B, ), denoisers], [), denoisers, .]]

>> Noun Phrases are: 
[ Other applications, the physical layer leverage, the use, autoencoders, compressors, Sec V-B, denoisers]

>> Named Entities are: 
[('Sec V-B', 'PERSON')]


============================ Sentence 694 =============================

For channels with a complex structure with unavailable channel models or with unknown optimal compression algorithms, autoencoders can be used to compress channel state information for the purpose of feedback on frequency-division duplex links [69]. 


>> Tokens are: 
[channels, complex, structure, unavailable, channel, models, unknown, optimal, compression, algorithms, ,, autoencoders, compress, channel, state, information, purpose, feedback, frequency, -, division, duplex, links, [, 69, ], .] 

>> PoS Tags are: 
[('channels', 'NOUN'), ('complex', 'ADJ'), ('structure', 'NOUN'), ('unavailable', 'ADJ'), ('channel', 'NOUN'), ('models', 'NOUN'), ('unknown', 'ADJ'), ('optimal', 'ADJ'), ('compression', 'NOUN'), ('algorithms', 'NOUN'), (',', 'PUNCT'), ('autoencoders', 'NOUN'), ('compress', 'VERB'), ('channel', 'NOUN'), ('state', 'NOUN'), ('information', 'NOUN'), ('purpose', 'NOUN'), ('feedback', 'NOUN'), ('frequency', 'NOUN'), ('-', 'PUNCT'), ('division', 'NOUN'), ('duplex', 'NOUN'), ('links', 'NOUN'), ('[', 'PUNCT'), ('69', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('channels', 'pobj'), ('complex', 'amod'), ('structure', 'pobj'), ('unavailable', 'amod'), ('channel', 'compound'), ('models', 'pobj'), ('unknown', 'amod'), ('optimal', 'amod'), ('compression', 'compound'), ('algorithms', 'pobj'), (',', 'punct'), ('autoencoders', 'nsubjpass'), ('compress', 'xcomp'), ('channel', 'compound'), ('state', 'compound'), ('information', 'dobj'), ('purpose', 'pobj'), ('feedback', 'pobj'), ('frequency', 'compound'), ('-', 'punct'), ('division', 'compound'), ('duplex', 'compound'), ('links', 'pobj'), ('[', 'punct'), ('69', 'npadvmod'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[channels, complex], [complex, structure], [structure, unavailable], [unavailable, channel], [channel, models], [models, unknown], [unknown, optimal], [optimal, compression], [compression, algorithms], [algorithms, ,], [,, autoencoders], [autoencoders, compress], [compress, channel], [channel, state], [state, information], [information, purpose], [purpose, feedback], [feedback, frequency], [frequency, -], [-, division], [division, duplex], [duplex, links], [links, [], [[, 69], [69, ]], [], .]]

>> Trigrams: 
[[channels, complex, structure], [complex, structure, unavailable], [structure, unavailable, channel], [unavailable, channel, models], [channel, models, unknown], [models, unknown, optimal], [unknown, optimal, compression], [optimal, compression, algorithms], [compression, algorithms, ,], [algorithms, ,, autoencoders], [,, autoencoders, compress], [autoencoders, compress, channel], [compress, channel, state], [channel, state, information], [state, information, purpose], [information, purpose, feedback], [purpose, feedback, frequency], [feedback, frequency, -], [frequency, -, division], [-, division, duplex], [division, duplex, links], [duplex, links, [], [links, [, 69], [[, 69, ]], [69, ], .]]

>> Noun Phrases are: 
[channels, a complex structure, unavailable channel models, unknown optimal compression algorithms, autoencoders, channel state information, the purpose, feedback, frequency-division duplex links]

>> Named Entities are: 
[('69', 'CARDINAL')]


============================ Sentence 695 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 696 =============================

Autoencoders can also be used for their capacity to denoise the input signal by means of filtering through the lower dimensional representation z. 


>> Tokens are: 
[Autoencoders, capacity, denoise, input, signal, means, filtering, lower, dimensional, representation, z.] 

>> PoS Tags are: 
[('Autoencoders', 'NOUN'), ('capacity', 'NOUN'), ('denoise', 'VERB'), ('input', 'NOUN'), ('signal', 'NOUN'), ('means', 'NOUN'), ('filtering', 'VERB'), ('lower', 'ADJ'), ('dimensional', 'ADJ'), ('representation', 'NOUN'), ('z.', 'PROPN')] 

>> Dependency Tags are: 
[('Autoencoders', 'nsubjpass'), ('capacity', 'pobj'), ('denoise', 'acl'), ('input', 'compound'), ('signal', 'dobj'), ('means', 'pobj'), ('filtering', 'pcomp'), ('lower', 'advmod'), ('dimensional', 'amod'), ('representation', 'pobj'), ('z.', 'punct')]

>> Bigrams: 
[[Autoencoders, capacity], [capacity, denoise], [denoise, input], [input, signal], [signal, means], [means, filtering], [filtering, lower], [lower, dimensional], [dimensional, representation], [representation, z.]]

>> Trigrams: 
[[Autoencoders, capacity, denoise], [capacity, denoise, input], [denoise, input, signal], [input, signal, means], [signal, means, filtering], [means, filtering, lower], [filtering, lower, dimensional], [lower, dimensional, representation], [dimensional, representation, z.]]

>> Noun Phrases are: 
[Autoencoders, their capacity, the input signal, means, the lower dimensional representation]

>> Named Entities are: 
[]


============================ Sentence 697 =============================

This is done in [70] for the task of localization on the basis of the received baseband signal. 


>> Tokens are: 
[[, 70, ], task, localization, basis, received, baseband, signal, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('70', 'NUM'), (']', 'PUNCT'), ('task', 'NOUN'), ('localization', 'NOUN'), ('basis', 'NOUN'), ('received', 'VERB'), ('baseband', 'NOUN'), ('signal', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('70', 'pobj'), (']', 'punct'), ('task', 'pobj'), ('localization', 'pobj'), ('basis', 'pobj'), ('received', 'amod'), ('baseband', 'compound'), ('signal', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[[, 70], [70, ]], [], task], [task, localization], [localization, basis], [basis, received], [received, baseband], [baseband, signal], [signal, .]]

>> Trigrams: 
[[[, 70, ]], [70, ], task], [], task, localization], [task, localization, basis], [localization, basis, received], [basis, received, baseband], [received, baseband, signal], [baseband, signal, .]]

>> Noun Phrases are: 
[the task, localization, the basis, the received baseband signal]

>> Named Entities are: 
[('70', 'CARDINAL')]


============================ Sentence 698 =============================

To this end, an autoencoder is learned for every reference position in space with the objective of denoising signals received from the given location. 


>> Tokens are: 
[end, ,, autoencoder, learned, reference, position, space, objective, denoising, signals, received, given, location, .] 

>> PoS Tags are: 
[('end', 'NOUN'), (',', 'PUNCT'), ('autoencoder', 'NOUN'), ('learned', 'VERB'), ('reference', 'NOUN'), ('position', 'NOUN'), ('space', 'NOUN'), ('objective', 'NOUN'), ('denoising', 'VERB'), ('signals', 'NOUN'), ('received', 'VERB'), ('given', 'VERB'), ('location', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('end', 'pobj'), (',', 'punct'), ('autoencoder', 'nsubjpass'), ('learned', 'ROOT'), ('reference', 'compound'), ('position', 'pobj'), ('space', 'pobj'), ('objective', 'pobj'), ('denoising', 'pcomp'), ('signals', 'dobj'), ('received', 'acl'), ('given', 'amod'), ('location', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[end, ,], [,, autoencoder], [autoencoder, learned], [learned, reference], [reference, position], [position, space], [space, objective], [objective, denoising], [denoising, signals], [signals, received], [received, given], [given, location], [location, .]]

>> Trigrams: 
[[end, ,, autoencoder], [,, autoencoder, learned], [autoencoder, learned, reference], [learned, reference, position], [reference, position, space], [position, space, objective], [space, objective, denoising], [objective, denoising, signals], [denoising, signals, received], [signals, received, given], [received, given, location], [given, location, .]]

>> Noun Phrases are: 
[this end, an autoencoder, every reference position, space, the objective, signals, the given location]

>> Named Entities are: 
[]


============================ Sentence 699 =============================

At test time, the location that corresponds to the autoencoder with the smallest reconstruction error is taken as an estimate of the unknown transmitting device.   


>> Tokens are: 
[test, time, ,, location, corresponds, autoencoder, smallest, reconstruction, error, taken, estimate, unknown, transmitting, device, .,  ] 

>> PoS Tags are: 
[('test', 'NOUN'), ('time', 'NOUN'), (',', 'PUNCT'), ('location', 'NOUN'), ('corresponds', 'VERB'), ('autoencoder', 'NOUN'), ('smallest', 'ADJ'), ('reconstruction', 'NOUN'), ('error', 'NOUN'), ('taken', 'VERB'), ('estimate', 'NOUN'), ('unknown', 'ADJ'), ('transmitting', 'VERB'), ('device', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('test', 'compound'), ('time', 'pobj'), (',', 'punct'), ('location', 'nsubjpass'), ('corresponds', 'relcl'), ('autoencoder', 'pobj'), ('smallest', 'amod'), ('reconstruction', 'compound'), ('error', 'pobj'), ('taken', 'ROOT'), ('estimate', 'pobj'), ('unknown', 'amod'), ('transmitting', 'amod'), ('device', 'pobj'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[test, time], [time, ,], [,, location], [location, corresponds], [corresponds, autoencoder], [autoencoder, smallest], [smallest, reconstruction], [reconstruction, error], [error, taken], [taken, estimate], [estimate, unknown], [unknown, transmitting], [transmitting, device], [device, .], [.,  ]]

>> Trigrams: 
[[test, time, ,], [time, ,, location], [,, location, corresponds], [location, corresponds, autoencoder], [corresponds, autoencoder, smallest], [autoencoder, smallest, reconstruction], [smallest, reconstruction, error], [reconstruction, error, taken], [error, taken, estimate], [taken, estimate, unknown], [estimate, unknown, transmitting], [unknown, transmitting, device], [transmitting, device, .], [device, .,  ]]

>> Noun Phrases are: 
[test time, the location, the autoencoder, the smallest reconstruction error, an estimate, the unknown transmitting device]

>> Named Entities are: 
[]


============================ Sentence 700 =============================

We now review some applications of the generative models illustrated in Fig. 


>> Tokens are: 
[review, applications, generative, models, illustrated, Fig, .] 

>> PoS Tags are: 
[('review', 'VERB'), ('applications', 'NOUN'), ('generative', 'ADJ'), ('models', 'NOUN'), ('illustrated', 'VERB'), ('Fig', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('review', 'ROOT'), ('applications', 'dobj'), ('generative', 'amod'), ('models', 'pobj'), ('illustrated', 'acl'), ('Fig', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[review, applications], [applications, generative], [generative, models], [models, illustrated], [illustrated, Fig], [Fig, .]]

>> Trigrams: 
[[review, applications, generative], [applications, generative, models], [generative, models, illustrated], [models, illustrated, Fig], [illustrated, Fig, .]]

>> Noun Phrases are: 
[We, some applications, the generative models, Fig]

>> Named Entities are: 
[('Fig', 'ORG')]


============================ Sentence 701 =============================

11(a). 


>> Tokens are: 
[11(a, ), .] 

>> PoS Tags are: 
[('11(a', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('11(a', 'ROOT'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[11(a, )], [), .]]

>> Trigrams: 
[[11(a, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('11(a', 'CARDINAL')]


============================ Sentence 702 =============================

A natural idea is that of using generative models to learn how to generate samples from a given channel [71], [72]. 


>> Tokens are: 
[natural, idea, generative, models, learn, generate, samples, given, channel, [, 71, ], ,, [, 72, ], .] 

>> PoS Tags are: 
[('natural', 'ADJ'), ('idea', 'NOUN'), ('generative', 'ADJ'), ('models', 'NOUN'), ('learn', 'VERB'), ('generate', 'VERB'), ('samples', 'NOUN'), ('given', 'VERB'), ('channel', 'NOUN'), ('[', 'PUNCT'), ('71', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('[', 'PUNCT'), ('72', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('natural', 'amod'), ('idea', 'nsubj'), ('generative', 'amod'), ('models', 'dobj'), ('learn', 'xcomp'), ('generate', 'xcomp'), ('samples', 'dobj'), ('given', 'amod'), ('channel', 'pobj'), ('[', 'punct'), ('71', 'attr'), (']', 'punct'), (',', 'punct'), ('[', 'punct'), ('72', 'dep'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[natural, idea], [idea, generative], [generative, models], [models, learn], [learn, generate], [generate, samples], [samples, given], [given, channel], [channel, [], [[, 71], [71, ]], [], ,], [,, [], [[, 72], [72, ]], [], .]]

>> Trigrams: 
[[natural, idea, generative], [idea, generative, models], [generative, models, learn], [models, learn, generate], [learn, generate, samples], [generate, samples, given], [samples, given, channel], [given, channel, [], [channel, [, 71], [[, 71, ]], [71, ], ,], [], ,, [], [,, [, 72], [[, 72, ]], [72, ], .]]

>> Noun Phrases are: 
[A natural idea, generative models, samples, a given channel]

>> Named Entities are: 
[('71', 'CARDINAL'), ('72', 'CARDINAL')]


============================ Sentence 703 =============================

This approach is sound for scenarios that lack tractable channel models. 


>> Tokens are: 
[approach, sound, scenarios, lack, tractable, channel, models, .] 

>> PoS Tags are: 
[('approach', 'NOUN'), ('sound', 'ADJ'), ('scenarios', 'NOUN'), ('lack', 'VERB'), ('tractable', 'ADJ'), ('channel', 'NOUN'), ('models', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('approach', 'nsubj'), ('sound', 'acomp'), ('scenarios', 'pobj'), ('lack', 'relcl'), ('tractable', 'amod'), ('channel', 'compound'), ('models', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[approach, sound], [sound, scenarios], [scenarios, lack], [lack, tractable], [tractable, channel], [channel, models], [models, .]]

>> Trigrams: 
[[approach, sound, scenarios], [sound, scenarios, lack], [scenarios, lack, tractable], [lack, tractable, channel], [tractable, channel, models], [channel, models, .]]

>> Noun Phrases are: 
[This approach, scenarios, tractable channel models]

>> Named Entities are: 
[]


============================ Sentence 704 =============================

As a pertinent example, generative models can be used to mimic and identify non-linear channels for satellite com- munications [2]. 


>> Tokens are: 
[pertinent, example, ,, generative, models, mimic, identify, non, -, linear, channels, satellite, com-, munications, [, 2, ], .] 

>> PoS Tags are: 
[('pertinent', 'ADJ'), ('example', 'NOUN'), (',', 'PUNCT'), ('generative', 'ADJ'), ('models', 'NOUN'), ('mimic', 'VERB'), ('identify', 'VERB'), ('non', 'ADJ'), ('-', 'ADJ'), ('linear', 'ADJ'), ('channels', 'NOUN'), ('satellite', 'NOUN'), ('com-', 'NOUN'), ('munications', 'NOUN'), ('[', 'PUNCT'), ('2', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('pertinent', 'amod'), ('example', 'pobj'), (',', 'punct'), ('generative', 'amod'), ('models', 'nsubjpass'), ('mimic', 'xcomp'), ('identify', 'conj'), ('non', 'amod'), ('-', 'amod'), ('linear', 'amod'), ('channels', 'dobj'), ('satellite', 'compound'), ('com-', 'compound'), ('munications', 'pobj'), ('[', 'punct'), ('2', 'npadvmod'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[pertinent, example], [example, ,], [,, generative], [generative, models], [models, mimic], [mimic, identify], [identify, non], [non, -], [-, linear], [linear, channels], [channels, satellite], [satellite, com-], [com-, munications], [munications, [], [[, 2], [2, ]], [], .]]

>> Trigrams: 
[[pertinent, example, ,], [example, ,, generative], [,, generative, models], [generative, models, mimic], [models, mimic, identify], [mimic, identify, non], [identify, non, -], [non, -, linear], [-, linear, channels], [linear, channels, satellite], [channels, satellite, com-], [satellite, com-, munications], [com-, munications, [], [munications, [, 2], [[, 2, ]], [2, ], .]]

>> Noun Phrases are: 
[a pertinent example, generative models, non-linear channels, satellite com- munications]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 705 =============================

The early works on the subject carried out in the nineties are also notable for the integration of the domain knowledge into the definition of machine learning models (see Sec IV). 


>> Tokens are: 
[early, works, subject, carried, nineties, notable, integration, domain, knowledge, definition, machine, learning, models, (, Sec, IV, ), .] 

>> PoS Tags are: 
[('early', 'ADJ'), ('works', 'NOUN'), ('subject', 'NOUN'), ('carried', 'VERB'), ('nineties', 'NOUN'), ('notable', 'ADJ'), ('integration', 'NOUN'), ('domain', 'NOUN'), ('knowledge', 'NOUN'), ('definition', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('models', 'NOUN'), ('(', 'PUNCT'), ('Sec', 'PROPN'), ('IV', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('early', 'amod'), ('works', 'nsubj'), ('subject', 'pobj'), ('carried', 'acl'), ('nineties', 'pobj'), ('notable', 'acomp'), ('integration', 'pobj'), ('domain', 'compound'), ('knowledge', 'pobj'), ('definition', 'pobj'), ('machine', 'compound'), ('learning', 'compound'), ('models', 'pobj'), ('(', 'punct'), ('Sec', 'compound'), ('IV', 'dobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[early, works], [works, subject], [subject, carried], [carried, nineties], [nineties, notable], [notable, integration], [integration, domain], [domain, knowledge], [knowledge, definition], [definition, machine], [machine, learning], [learning, models], [models, (], [(, Sec], [Sec, IV], [IV, )], [), .]]

>> Trigrams: 
[[early, works, subject], [works, subject, carried], [subject, carried, nineties], [carried, nineties, notable], [nineties, notable, integration], [notable, integration, domain], [integration, domain, knowledge], [domain, knowledge, definition], [knowledge, definition, machine], [definition, machine, learning], [machine, learning, models], [learning, models, (], [models, (, Sec], [(, Sec, IV], [Sec, IV, )], [IV, ), .]]

>> Noun Phrases are: 
[The early works, the subject, the nineties, the integration, the domain knowledge, the definition, machine learning models, Sec IV]

>> Named Entities are: 
[('the nineties', 'DATE'), ('Sec IV', 'PERSON')]


============================ Sentence 706 =============================

In fact, mindful of the strong linear components of the channels, these works posit a learnable model that includes linear filters and non-linearities [2]. 


>> Tokens are: 
[fact, ,, mindful, strong, linear, components, channels, ,, works, posit, learnable, model, includes, linear, filters, non, -, linearities, [, 2, ], .] 

>> PoS Tags are: 
[('fact', 'NOUN'), (',', 'PUNCT'), ('mindful', 'ADJ'), ('strong', 'ADJ'), ('linear', 'ADJ'), ('components', 'NOUN'), ('channels', 'NOUN'), (',', 'PUNCT'), ('works', 'NOUN'), ('posit', 'VERB'), ('learnable', 'ADJ'), ('model', 'NOUN'), ('includes', 'VERB'), ('linear', 'ADJ'), ('filters', 'NOUN'), ('non', 'ADJ'), ('-', 'NOUN'), ('linearities', 'NOUN'), ('[', 'PUNCT'), ('2', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('fact', 'pobj'), (',', 'punct'), ('mindful', 'advcl'), ('strong', 'amod'), ('linear', 'amod'), ('components', 'pobj'), ('channels', 'pobj'), (',', 'punct'), ('works', 'nsubj'), ('posit', 'ROOT'), ('learnable', 'amod'), ('model', 'dobj'), ('includes', 'relcl'), ('linear', 'amod'), ('filters', 'dobj'), ('non', 'conj'), ('-', 'conj'), ('linearities', 'conj'), ('[', 'punct'), ('2', 'dobj'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[fact, ,], [,, mindful], [mindful, strong], [strong, linear], [linear, components], [components, channels], [channels, ,], [,, works], [works, posit], [posit, learnable], [learnable, model], [model, includes], [includes, linear], [linear, filters], [filters, non], [non, -], [-, linearities], [linearities, [], [[, 2], [2, ]], [], .]]

>> Trigrams: 
[[fact, ,, mindful], [,, mindful, strong], [mindful, strong, linear], [strong, linear, components], [linear, components, channels], [components, channels, ,], [channels, ,, works], [,, works, posit], [works, posit, learnable], [posit, learnable, model], [learnable, model, includes], [model, includes, linear], [includes, linear, filters], [linear, filters, non], [filters, non, -], [non, -, linearities], [-, linearities, [], [linearities, [, 2], [[, 2, ]], [2, ], .]]

>> Noun Phrases are: 
[fact, the strong linear components, the channels, these works, a learnable model, linear filters, -, linearities]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 707 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 708 =============================

Another approach that can be considered as unsu- pervised was proposed in [73] in order to solve the challenging problem of power control for interference channels. 


>> Tokens are: 
[approach, considered, unsu-, pervised, proposed, [, 73, ], order, solve, challenging, problem, power, control, interference, channels, .] 

>> PoS Tags are: 
[('approach', 'NOUN'), ('considered', 'VERB'), ('unsu-', 'ADJ'), ('pervised', 'VERB'), ('proposed', 'VERB'), ('[', 'PUNCT'), ('73', 'NUM'), (']', 'PUNCT'), ('order', 'NOUN'), ('solve', 'VERB'), ('challenging', 'ADJ'), ('problem', 'NOUN'), ('power', 'NOUN'), ('control', 'NOUN'), ('interference', 'NOUN'), ('channels', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('approach', 'nsubjpass'), ('considered', 'relcl'), ('unsu-', 'amod'), ('pervised', 'oprd'), ('proposed', 'ROOT'), ('[', 'pobj'), ('73', 'pobj'), (']', 'punct'), ('order', 'pobj'), ('solve', 'acl'), ('challenging', 'amod'), ('problem', 'dobj'), ('power', 'compound'), ('control', 'pobj'), ('interference', 'compound'), ('channels', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[approach, considered], [considered, unsu-], [unsu-, pervised], [pervised, proposed], [proposed, [], [[, 73], [73, ]], [], order], [order, solve], [solve, challenging], [challenging, problem], [problem, power], [power, control], [control, interference], [interference, channels], [channels, .]]

>> Trigrams: 
[[approach, considered, unsu-], [considered, unsu-, pervised], [unsu-, pervised, proposed], [pervised, proposed, [], [proposed, [, 73], [[, 73, ]], [73, ], order], [], order, solve], [order, solve, challenging], [solve, challenging, problem], [challenging, problem, power], [problem, power, control], [power, control, interference], [control, interference, channels], [interference, channels, .]]

>> Noun Phrases are: 
[Another approach, order, the challenging problem, power control, interference channels]

>> Named Entities are: 
[('73', 'CARDINAL')]


============================ Sentence 709 =============================

The approach tackles the resulting algorithm deficit by means of a direct optimization of the sum-rate with the aim of obtaining the power allocation vector (as fractions of the maximal available powers) at the output of a neural network. 


>> Tokens are: 
[approach, tackles, resulting, algorithm, deficit, means, direct, optimization, sum, -, rate, aim, obtaining, power, allocation, vector, (, fractions, maximal, available, powers, ), output, neural, network, .] 

>> PoS Tags are: 
[('approach', 'NOUN'), ('tackles', 'VERB'), ('resulting', 'VERB'), ('algorithm', 'ADJ'), ('deficit', 'NOUN'), ('means', 'NOUN'), ('direct', 'ADJ'), ('optimization', 'NOUN'), ('sum', 'NOUN'), ('-', 'PUNCT'), ('rate', 'NOUN'), ('aim', 'NOUN'), ('obtaining', 'VERB'), ('power', 'NOUN'), ('allocation', 'NOUN'), ('vector', 'NOUN'), ('(', 'PUNCT'), ('fractions', 'NOUN'), ('maximal', 'ADJ'), ('available', 'ADJ'), ('powers', 'NOUN'), (')', 'PUNCT'), ('output', 'NOUN'), ('neural', 'ADJ'), ('network', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('approach', 'nsubj'), ('tackles', 'ROOT'), ('resulting', 'amod'), ('algorithm', 'amod'), ('deficit', 'dobj'), ('means', 'pobj'), ('direct', 'amod'), ('optimization', 'pobj'), ('sum', 'compound'), ('-', 'punct'), ('rate', 'pobj'), ('aim', 'pobj'), ('obtaining', 'pcomp'), ('power', 'compound'), ('allocation', 'compound'), ('vector', 'dobj'), ('(', 'punct'), ('fractions', 'pobj'), ('maximal', 'amod'), ('available', 'amod'), ('powers', 'pobj'), (')', 'punct'), ('output', 'pobj'), ('neural', 'amod'), ('network', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[approach, tackles], [tackles, resulting], [resulting, algorithm], [algorithm, deficit], [deficit, means], [means, direct], [direct, optimization], [optimization, sum], [sum, -], [-, rate], [rate, aim], [aim, obtaining], [obtaining, power], [power, allocation], [allocation, vector], [vector, (], [(, fractions], [fractions, maximal], [maximal, available], [available, powers], [powers, )], [), output], [output, neural], [neural, network], [network, .]]

>> Trigrams: 
[[approach, tackles, resulting], [tackles, resulting, algorithm], [resulting, algorithm, deficit], [algorithm, deficit, means], [deficit, means, direct], [means, direct, optimization], [direct, optimization, sum], [optimization, sum, -], [sum, -, rate], [-, rate, aim], [rate, aim, obtaining], [aim, obtaining, power], [obtaining, power, allocation], [power, allocation, vector], [allocation, vector, (], [vector, (, fractions], [(, fractions, maximal], [fractions, maximal, available], [maximal, available, powers], [available, powers, )], [powers, ), output], [), output, neural], [output, neural, network], [neural, network, .]]

>> Noun Phrases are: 
[The approach, the resulting algorithm deficit, means, a direct optimization, the sum-rate, the aim, the power allocation vector, fractions, the maximal available powers, the output, a neural network]

>> Named Entities are: 
[]


============================ Sentence 710 =============================

Related supervised learning methods were discussed in Sec. 


>> Tokens are: 
[Related, supervised, learning, methods, discussed, Sec, .] 

>> PoS Tags are: 
[('Related', 'VERB'), ('supervised', 'ADJ'), ('learning', 'VERB'), ('methods', 'NOUN'), ('discussed', 'VERB'), ('Sec', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Related', 'amod'), ('supervised', 'amod'), ('learning', 'amod'), ('methods', 'nsubjpass'), ('discussed', 'ROOT'), ('Sec', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Related, supervised], [supervised, learning], [learning, methods], [methods, discussed], [discussed, Sec], [Sec, .]]

>> Trigrams: 
[[Related, supervised, learning], [supervised, learning, methods], [learning, methods, discussed], [methods, discussed, Sec], [discussed, Sec, .]]

>> Noun Phrases are: 
[Related supervised learning methods, Sec]

>> Named Entities are: 
[('Sec', 'PERSON')]


============================ Sentence 711 =============================

IV. 


>> Tokens are: 
[IV, .] 

>> PoS Tags are: 
[('IV', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('IV', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[IV, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[IV]

>> Named Entities are: 
[]


============================ Sentence 712 =============================

A similar approach – also based on the idea of directly maximizing the criterion of interest so as to obtain an approximate solution at the output of a neural network – was considered in [74] for minimum mean squared error channel estimation with non-Gaussian channels, e.g.--.-, multi-path channels. 


>> Tokens are: 
[similar, approach, –, based, idea, directly, maximizing, criterion, interest, obtain, approximate, solution, output, neural, network, –, considered, [, 74, ], minimum, mean, squared, error, channel, estimation, non, -, Gaussian, channels, ,, e.g.--.-, ,, multi, -, path, channels, .] 

>> PoS Tags are: 
[('similar', 'ADJ'), ('approach', 'NOUN'), ('–', 'PUNCT'), ('based', 'VERB'), ('idea', 'NOUN'), ('directly', 'ADV'), ('maximizing', 'VERB'), ('criterion', 'NOUN'), ('interest', 'NOUN'), ('obtain', 'VERB'), ('approximate', 'ADJ'), ('solution', 'NOUN'), ('output', 'NOUN'), ('neural', 'ADJ'), ('network', 'NOUN'), ('–', 'PUNCT'), ('considered', 'VERB'), ('[', 'PUNCT'), ('74', 'NUM'), (']', 'PUNCT'), ('minimum', 'ADJ'), ('mean', 'ADJ'), ('squared', 'ADJ'), ('error', 'NOUN'), ('channel', 'NOUN'), ('estimation', 'NOUN'), ('non', 'ADJ'), ('-', 'ADJ'), ('Gaussian', 'ADJ'), ('channels', 'NOUN'), (',', 'PUNCT'), ('e.g.--.-', 'ADJ'), (',', 'PUNCT'), ('multi', 'ADJ'), ('-', 'ADJ'), ('path', 'ADJ'), ('channels', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('similar', 'amod'), ('approach', 'nsubjpass'), ('–', 'punct'), ('based', 'acl'), ('idea', 'pobj'), ('directly', 'advmod'), ('maximizing', 'pcomp'), ('criterion', 'dobj'), ('interest', 'pobj'), ('obtain', 'advcl'), ('approximate', 'amod'), ('solution', 'dobj'), ('output', 'pobj'), ('neural', 'amod'), ('network', 'pobj'), ('–', 'punct'), ('considered', 'ROOT'), ('[', 'pobj'), ('74', 'pobj'), (']', 'punct'), ('minimum', 'amod'), ('mean', 'amod'), ('squared', 'amod'), ('error', 'compound'), ('channel', 'compound'), ('estimation', 'pobj'), ('non', 'amod'), ('-', 'amod'), ('Gaussian', 'amod'), ('channels', 'pobj'), (',', 'punct'), ('e.g.--.-', 'amod'), (',', 'punct'), ('multi', 'amod'), ('-', 'amod'), ('path', 'amod'), ('channels', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[similar, approach], [approach, –], [–, based], [based, idea], [idea, directly], [directly, maximizing], [maximizing, criterion], [criterion, interest], [interest, obtain], [obtain, approximate], [approximate, solution], [solution, output], [output, neural], [neural, network], [network, –], [–, considered], [considered, [], [[, 74], [74, ]], [], minimum], [minimum, mean], [mean, squared], [squared, error], [error, channel], [channel, estimation], [estimation, non], [non, -], [-, Gaussian], [Gaussian, channels], [channels, ,], [,, e.g.--.-], [e.g.--.-, ,], [,, multi], [multi, -], [-, path], [path, channels], [channels, .]]

>> Trigrams: 
[[similar, approach, –], [approach, –, based], [–, based, idea], [based, idea, directly], [idea, directly, maximizing], [directly, maximizing, criterion], [maximizing, criterion, interest], [criterion, interest, obtain], [interest, obtain, approximate], [obtain, approximate, solution], [approximate, solution, output], [solution, output, neural], [output, neural, network], [neural, network, –], [network, –, considered], [–, considered, [], [considered, [, 74], [[, 74, ]], [74, ], minimum], [], minimum, mean], [minimum, mean, squared], [mean, squared, error], [squared, error, channel], [error, channel, estimation], [channel, estimation, non], [estimation, non, -], [non, -, Gaussian], [-, Gaussian, channels], [Gaussian, channels, ,], [channels, ,, e.g.--.-], [,, e.g.--.-, ,], [e.g.--.-, ,, multi], [,, multi, -], [multi, -, path], [-, path, channels], [path, channels, .]]

>> Noun Phrases are: 
[A similar approach, the idea, the criterion, interest, an approximate solution, the output, a neural network, minimum mean squared error channel estimation, non-Gaussian channels, e.g.--.-, multi-path channels]

>> Named Entities are: 
[('74', 'CARDINAL'), ('non-Gaussian', 'NORP')]


============================ Sentence 713 =============================

 (2) Medium Access Layer: 


>> Tokens are: 
[ , (, 2, ), Medium, Access, Layer, :] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('(', 'PUNCT'), ('2', 'X'), (')', 'PUNCT'), ('Medium', 'PROPN'), ('Access', 'PROPN'), ('Layer', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('(', 'punct'), ('2', 'appos'), (')', 'punct'), ('Medium', 'compound'), ('Access', 'compound'), ('Layer', 'appos'), (':', 'punct')]

>> Bigrams: 
[[ , (], [(, 2], [2, )], [), Medium], [Medium, Access], [Access, Layer], [Layer, :]]

>> Trigrams: 
[[ , (, 2], [(, 2, )], [2, ), Medium], [), Medium, Access], [Medium, Access, Layer], [Access, Layer, :]]

>> Noun Phrases are: 
[Medium Access Layer]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 714 =============================

At the medium access layer, generative models have been advocated in [75] as a way to generate new examples so as to augment a data set used to train a classifier for spectrum sensing (see Sec IV). 


>> Tokens are: 
[medium, access, layer, ,, generative, models, advocated, [, 75, ], way, generate, new, examples, augment, data, set, train, classifier, spectrum, sensing, (, Sec, IV, ), .] 

>> PoS Tags are: 
[('medium', 'ADJ'), ('access', 'NOUN'), ('layer', 'NOUN'), (',', 'PUNCT'), ('generative', 'ADJ'), ('models', 'NOUN'), ('advocated', 'VERB'), ('[', 'PUNCT'), ('75', 'NUM'), (']', 'PUNCT'), ('way', 'NOUN'), ('generate', 'VERB'), ('new', 'ADJ'), ('examples', 'NOUN'), ('augment', 'VERB'), ('data', 'NOUN'), ('set', 'NOUN'), ('train', 'VERB'), ('classifier', 'NOUN'), ('spectrum', 'NOUN'), ('sensing', 'NOUN'), ('(', 'PUNCT'), ('Sec', 'PROPN'), ('IV', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('medium', 'amod'), ('access', 'compound'), ('layer', 'pobj'), (',', 'punct'), ('generative', 'amod'), ('models', 'nsubjpass'), ('advocated', 'ROOT'), ('[', 'punct'), ('75', 'pobj'), (']', 'punct'), ('way', 'pobj'), ('generate', 'relcl'), ('new', 'amod'), ('examples', 'dobj'), ('augment', 'advcl'), ('data', 'compound'), ('set', 'dobj'), ('train', 'xcomp'), ('classifier', 'dobj'), ('spectrum', 'compound'), ('sensing', 'pobj'), ('(', 'punct'), ('Sec', 'compound'), ('IV', 'dobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[medium, access], [access, layer], [layer, ,], [,, generative], [generative, models], [models, advocated], [advocated, [], [[, 75], [75, ]], [], way], [way, generate], [generate, new], [new, examples], [examples, augment], [augment, data], [data, set], [set, train], [train, classifier], [classifier, spectrum], [spectrum, sensing], [sensing, (], [(, Sec], [Sec, IV], [IV, )], [), .]]

>> Trigrams: 
[[medium, access, layer], [access, layer, ,], [layer, ,, generative], [,, generative, models], [generative, models, advocated], [models, advocated, [], [advocated, [, 75], [[, 75, ]], [75, ], way], [], way, generate], [way, generate, new], [generate, new, examples], [new, examples, augment], [examples, augment, data], [augment, data, set], [data, set, train], [set, train, classifier], [train, classifier, spectrum], [classifier, spectrum, sensing], [spectrum, sensing, (], [sensing, (, Sec], [(, Sec, IV], [Sec, IV, )], [IV, ), .]]

>> Noun Phrases are: 
[the medium access layer, generative models, a way, new examples, a data set, a classifier, spectrum sensing, Sec IV]

>> Named Entities are: 
[('75', 'CARDINAL'), ('Sec IV', 'PERSON')]


============================ Sentence 715 =============================

An unsupervised learning task that has found many applications in communications is clustering. 


>> Tokens are: 
[unsupervised, learning, task, found, applications, communications, clustering, .] 

>> PoS Tags are: 
[('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('task', 'NOUN'), ('found', 'VERB'), ('applications', 'NOUN'), ('communications', 'NOUN'), ('clustering', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('unsupervised', 'amod'), ('learning', 'amod'), ('task', 'nsubjpass'), ('found', 'relcl'), ('applications', 'dobj'), ('communications', 'pobj'), ('clustering', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[unsupervised, learning], [learning, task], [task, found], [found, applications], [applications, communications], [communications, clustering], [clustering, .]]

>> Trigrams: 
[[unsupervised, learning, task], [learning, task, found], [task, found, applications], [found, applications, communications], [applications, communications, clustering], [communications, clustering, .]]

>> Noun Phrases are: 
[An unsupervised learning task, many applications, communications]

>> Named Entities are: 
[]


============================ Sentence 716 =============================

For example, in [76], clustering is used to support radio resource allocation in a heterogeneous network. 


>> Tokens are: 
[example, ,, [, 76, ], ,, clustering, support, radio, resource, allocation, heterogeneous, network, .] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), ('[', 'PUNCT'), ('76', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('clustering', 'NOUN'), ('support', 'VERB'), ('radio', 'NOUN'), ('resource', 'NOUN'), ('allocation', 'NOUN'), ('heterogeneous', 'ADJ'), ('network', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct'), ('[', 'pobj'), ('76', 'pobj'), (']', 'punct'), (',', 'punct'), ('clustering', 'nsubjpass'), ('support', 'xcomp'), ('radio', 'compound'), ('resource', 'compound'), ('allocation', 'dobj'), ('heterogeneous', 'amod'), ('network', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[example, ,], [,, [], [[, 76], [76, ]], [], ,], [,, clustering], [clustering, support], [support, radio], [radio, resource], [resource, allocation], [allocation, heterogeneous], [heterogeneous, network], [network, .]]

>> Trigrams: 
[[example, ,, [], [,, [, 76], [[, 76, ]], [76, ], ,], [], ,, clustering], [,, clustering, support], [clustering, support, radio], [support, radio, resource], [radio, resource, allocation], [resource, allocation, heterogeneous], [allocation, heterogeneous, network], [heterogeneous, network, .]]

>> Noun Phrases are: 
[example, clustering, radio resource allocation, a heterogeneous network]

>> Named Entities are: 
[('76', 'CARDINAL')]


============================ Sentence 717 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 718 =============================

B. 


>> Tokens are: 
[B.] 

>> PoS Tags are: 
[('B.', 'PROPN')] 

>> Dependency Tags are: 
[('B.', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[B.]

>> Named Entities are: 
[]


============================ Sentence 719 =============================

At the Cloud  (1) Network Layer: Another typical application of clustering is to enable hierarchical clustering for routing in self-organizing multi-hop networks. 


>> Tokens are: 
[Cloud,  , (, 1, ), Network, Layer, :, typical, application, clustering, enable, hierarchical, clustering, routing, self, -, organizing, multi, -, hop, networks, .] 

>> PoS Tags are: 
[('Cloud', 'PROPN'), (' ', 'SPACE'), ('(', 'PUNCT'), ('1', 'X'), (')', 'PUNCT'), ('Network', 'PROPN'), ('Layer', 'PROPN'), (':', 'PUNCT'), ('typical', 'ADJ'), ('application', 'NOUN'), ('clustering', 'NOUN'), ('enable', 'VERB'), ('hierarchical', 'ADJ'), ('clustering', 'NOUN'), ('routing', 'VERB'), ('self', 'NOUN'), ('-', 'PUNCT'), ('organizing', 'VERB'), ('multi', 'ADJ'), ('-', 'ADJ'), ('hop', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Cloud', 'pobj'), (' ', 'appos'), ('(', 'punct'), ('1', 'appos'), (')', 'punct'), ('Network', 'compound'), ('Layer', 'nsubj'), (':', 'punct'), ('typical', 'amod'), ('application', 'appos'), ('clustering', 'pobj'), ('enable', 'xcomp'), ('hierarchical', 'amod'), ('clustering', 'dobj'), ('routing', 'pcomp'), ('self', 'npadvmod'), ('-', 'punct'), ('organizing', 'amod'), ('multi', 'amod'), ('-', 'amod'), ('hop', 'amod'), ('networks', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Cloud,  ], [ , (], [(, 1], [1, )], [), Network], [Network, Layer], [Layer, :], [:, typical], [typical, application], [application, clustering], [clustering, enable], [enable, hierarchical], [hierarchical, clustering], [clustering, routing], [routing, self], [self, -], [-, organizing], [organizing, multi], [multi, -], [-, hop], [hop, networks], [networks, .]]

>> Trigrams: 
[[Cloud,  , (], [ , (, 1], [(, 1, )], [1, ), Network], [), Network, Layer], [Network, Layer, :], [Layer, :, typical], [:, typical, application], [typical, application, clustering], [application, clustering, enable], [clustering, enable, hierarchical], [enable, hierarchical, clustering], [hierarchical, clustering, routing], [clustering, routing, self], [routing, self, -], [self, -, organizing], [-, organizing, multi], [organizing, multi, -], [multi, -, hop], [-, hop, networks], [hop, networks, .]]

>> Noun Phrases are: 
[the Cloud, Another typical application, clustering, hierarchical clustering, self-organizing multi-hop networks]

>> Named Entities are: 
[]


============================ Sentence 720 =============================

Thanks to cluster- ing, routing can be carried out more efficiently by routing  17    first at the level of clusters, and then locally within each cluster [77]. 


>> Tokens are: 
[Thanks, cluster-, ing, ,, routing, carried, efficiently, routing,  , 17,    , level, clusters, ,, locally, cluster, [, 77, ], .] 

>> PoS Tags are: 
[('Thanks', 'NOUN'), ('cluster-', 'ADJ'), ('ing', 'NOUN'), (',', 'PUNCT'), ('routing', 'NOUN'), ('carried', 'VERB'), ('efficiently', 'ADV'), ('routing', 'VERB'), (' ', 'SPACE'), ('17', 'NUM'), ('   ', 'SPACE'), ('level', 'NOUN'), ('clusters', 'NOUN'), (',', 'PUNCT'), ('locally', 'ADV'), ('cluster', 'NOUN'), ('[', 'PUNCT'), ('77', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Thanks', 'npadvmod'), ('cluster-', 'pobj'), ('ing', 'pobj'), (',', 'punct'), ('routing', 'nsubjpass'), ('carried', 'ROOT'), ('efficiently', 'advmod'), ('routing', 'pcomp'), (' ', 'dobj'), ('17', 'nummod'), ('   ', 'dobj'), ('level', 'pobj'), ('clusters', 'pobj'), (',', 'punct'), ('locally', 'advmod'), ('cluster', 'pobj'), ('[', 'punct'), ('77', 'npadvmod'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Thanks, cluster-], [cluster-, ing], [ing, ,], [,, routing], [routing, carried], [carried, efficiently], [efficiently, routing], [routing,  ], [ , 17], [17,    ], [   , level], [level, clusters], [clusters, ,], [,, locally], [locally, cluster], [cluster, [], [[, 77], [77, ]], [], .]]

>> Trigrams: 
[[Thanks, cluster-, ing], [cluster-, ing, ,], [ing, ,, routing], [,, routing, carried], [routing, carried, efficiently], [carried, efficiently, routing], [efficiently, routing,  ], [routing,  , 17], [ , 17,    ], [17,    , level], [   , level, clusters], [level, clusters, ,], [clusters, ,, locally], [,, locally, cluster], [locally, cluster, [], [cluster, [, 77], [[, 77, ]], [77, ], .]]

>> Noun Phrases are: 
[ing, routing, the level, clusters, each cluster]

>> Named Entities are: 
[('17    first', 'TIME'), ('77', 'CARDINAL')]


============================ Sentence 721 =============================

For an application of the unsupervised learning task of density estimation, consider the problem of detecting anomalies in networks. 


>> Tokens are: 
[application, unsupervised, learning, task, density, estimation, ,, consider, problem, detecting, anomalies, networks, .] 

>> PoS Tags are: 
[('application', 'NOUN'), ('unsupervised', 'ADJ'), ('learning', 'VERB'), ('task', 'NOUN'), ('density', 'NOUN'), ('estimation', 'NOUN'), (',', 'PUNCT'), ('consider', 'VERB'), ('problem', 'NOUN'), ('detecting', 'VERB'), ('anomalies', 'NOUN'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('application', 'pobj'), ('unsupervised', 'amod'), ('learning', 'amod'), ('task', 'pobj'), ('density', 'compound'), ('estimation', 'pobj'), (',', 'punct'), ('consider', 'ROOT'), ('problem', 'dobj'), ('detecting', 'pcomp'), ('anomalies', 'dobj'), ('networks', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[application, unsupervised], [unsupervised, learning], [learning, task], [task, density], [density, estimation], [estimation, ,], [,, consider], [consider, problem], [problem, detecting], [detecting, anomalies], [anomalies, networks], [networks, .]]

>> Trigrams: 
[[application, unsupervised, learning], [unsupervised, learning, task], [learning, task, density], [task, density, estimation], [density, estimation, ,], [estimation, ,, consider], [,, consider, problem], [consider, problem, detecting], [problem, detecting, anomalies], [detecting, anomalies, networks], [anomalies, networks, .]]

>> Noun Phrases are: 
[an application, the unsupervised learning task, density estimation, the problem, anomalies, networks]

>> Named Entities are: 
[]


============================ Sentence 722 =============================

For instance, by learning the typical distribution of the features of a working link, one can identify malfunctioning ones. 


>> Tokens are: 
[instance, ,, learning, typical, distribution, features, working, link, ,, identify, malfunctioning, ones, .] 

>> PoS Tags are: 
[('instance', 'NOUN'), (',', 'PUNCT'), ('learning', 'VERB'), ('typical', 'ADJ'), ('distribution', 'NOUN'), ('features', 'NOUN'), ('working', 'NOUN'), ('link', 'NOUN'), (',', 'PUNCT'), ('identify', 'VERB'), ('malfunctioning', 'VERB'), ('ones', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('instance', 'pobj'), (',', 'punct'), ('learning', 'pcomp'), ('typical', 'amod'), ('distribution', 'dobj'), ('features', 'pobj'), ('working', 'compound'), ('link', 'pobj'), (',', 'punct'), ('identify', 'ROOT'), ('malfunctioning', 'amod'), ('ones', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[instance, ,], [,, learning], [learning, typical], [typical, distribution], [distribution, features], [features, working], [working, link], [link, ,], [,, identify], [identify, malfunctioning], [malfunctioning, ones], [ones, .]]

>> Trigrams: 
[[instance, ,, learning], [,, learning, typical], [learning, typical, distribution], [typical, distribution, features], [distribution, features, working], [features, working, link], [working, link, ,], [link, ,, identify], [,, identify, malfunctioning], [identify, malfunctioning, ones], [malfunctioning, ones, .]]

>> Noun Phrases are: 
[instance, the typical distribution, the features, a working link, one, malfunctioning ones]

>> Named Entities are: 
[]


============================ Sentence 723 =============================

This approach may be applied, e.g.--.-, to optical networks [54]. 


>> Tokens are: 
[approach, applied, ,, e.g.--.-, ,, optical, networks, [, 54, ], .] 

>> PoS Tags are: 
[('approach', 'NOUN'), ('applied', 'VERB'), (',', 'PUNCT'), ('e.g.--.-', 'X'), (',', 'PUNCT'), ('optical', 'ADJ'), ('networks', 'NOUN'), ('[', 'PUNCT'), ('54', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('approach', 'nsubjpass'), ('applied', 'ROOT'), (',', 'punct'), ('e.g.--.-', 'dep'), (',', 'punct'), ('optical', 'amod'), ('networks', 'pobj'), ('[', 'punct'), ('54', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[approach, applied], [applied, ,], [,, e.g.--.-], [e.g.--.-, ,], [,, optical], [optical, networks], [networks, [], [[, 54], [54, ]], [], .]]

>> Trigrams: 
[[approach, applied, ,], [applied, ,, e.g.--.-], [,, e.g.--.-, ,], [e.g.--.-, ,, optical], [,, optical, networks], [optical, networks, [], [networks, [, 54], [[, 54, ]], [54, ], .]]

>> Noun Phrases are: 
[This approach, optical networks]

>> Named Entities are: 
[('54', 'CARDINAL')]


============================ Sentence 724 =============================

 (2) Application Layer: Finally, we point to two in- stances of unsupervised learning at the application layer that are usually carried out at data centers in the cloud. 


>> Tokens are: 
[ , (, 2, ), Application, Layer, :, Finally, ,, point, in-, stances, unsupervised, learning, application, layer, usually, carried, data, centers, cloud, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('(', 'PUNCT'), ('2', 'X'), (')', 'PUNCT'), ('Application', 'PROPN'), ('Layer', 'PROPN'), (':', 'PUNCT'), ('Finally', 'ADV'), (',', 'PUNCT'), ('point', 'VERB'), ('in-', 'ADJ'), ('stances', 'NOUN'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('application', 'NOUN'), ('layer', 'NOUN'), ('usually', 'ADV'), ('carried', 'VERB'), ('data', 'NOUN'), ('centers', 'NOUN'), ('cloud', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'dep'), ('(', 'punct'), ('2', 'appos'), (')', 'punct'), ('Application', 'compound'), ('Layer', 'appos'), (':', 'punct'), ('Finally', 'advmod'), (',', 'punct'), ('point', 'ROOT'), ('in-', 'compound'), ('stances', 'pobj'), ('unsupervised', 'amod'), ('learning', 'pobj'), ('application', 'compound'), ('layer', 'pobj'), ('usually', 'advmod'), ('carried', 'relcl'), ('data', 'compound'), ('centers', 'pobj'), ('cloud', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , (], [(, 2], [2, )], [), Application], [Application, Layer], [Layer, :], [:, Finally], [Finally, ,], [,, point], [point, in-], [in-, stances], [stances, unsupervised], [unsupervised, learning], [learning, application], [application, layer], [layer, usually], [usually, carried], [carried, data], [data, centers], [centers, cloud], [cloud, .]]

>> Trigrams: 
[[ , (, 2], [(, 2, )], [2, ), Application], [), Application, Layer], [Application, Layer, :], [Layer, :, Finally], [:, Finally, ,], [Finally, ,, point], [,, point, in-], [point, in-, stances], [in-, stances, unsupervised], [stances, unsupervised, learning], [unsupervised, learning, application], [learning, application, layer], [application, layer, usually], [layer, usually, carried], [usually, carried, data], [carried, data, centers], [data, centers, cloud], [centers, cloud, .]]

>> Noun Phrases are: 
[Application Layer, we, two in- stances, unsupervised learning, the application layer, data centers, the cloud]

>> Named Entities are: 
[('2', 'CARDINAL'), ('two', 'CARDINAL')]


============================ Sentence 725 =============================

These tasks follow a conceptually different approach as they are based on discovering structure in graphs. 


>> Tokens are: 
[tasks, follow, conceptually, different, approach, based, discovering, structure, graphs, .] 

>> PoS Tags are: 
[('tasks', 'NOUN'), ('follow', 'VERB'), ('conceptually', 'ADV'), ('different', 'ADJ'), ('approach', 'NOUN'), ('based', 'VERB'), ('discovering', 'VERB'), ('structure', 'NOUN'), ('graphs', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('tasks', 'nsubj'), ('follow', 'ROOT'), ('conceptually', 'advmod'), ('different', 'amod'), ('approach', 'dobj'), ('based', 'advcl'), ('discovering', 'pcomp'), ('structure', 'dobj'), ('graphs', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[tasks, follow], [follow, conceptually], [conceptually, different], [different, approach], [approach, based], [based, discovering], [discovering, structure], [structure, graphs], [graphs, .]]

>> Trigrams: 
[[tasks, follow, conceptually], [follow, conceptually, different], [conceptually, different, approach], [different, approach, based], [approach, based, discovering], [based, discovering, structure], [discovering, structure, graphs], [structure, graphs, .]]

>> Noun Phrases are: 
[These tasks, a conceptually different approach, they, structure, graphs]

>> Named Entities are: 
[]


============================ Sentence 726 =============================

The first problem is community detection in social networks. 


>> Tokens are: 
[problem, community, detection, social, networks, .] 

>> PoS Tags are: 
[('problem', 'NOUN'), ('community', 'NOUN'), ('detection', 'NOUN'), ('social', 'ADJ'), ('networks', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('problem', 'nsubj'), ('community', 'compound'), ('detection', 'attr'), ('social', 'amod'), ('networks', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[problem, community], [community, detection], [detection, social], [social, networks], [networks, .]]

>> Trigrams: 
[[problem, community, detection], [community, detection, social], [detection, social, networks], [social, networks, .]]

>> Noun Phrases are: 
[The first problem, community detection, social networks]

>> Named Entities are: 
[('first', 'ORDINAL')]


============================ Sentence 727 =============================

This amounts to a clustering problem whereby one wishes to isolate communities of nodes in a social graph on the basis of the observation of a realization of the underlying true graph of relationships [78]. 


>> Tokens are: 
[amounts, clustering, problem, wishes, isolate, communities, nodes, social, graph, basis, observation, realization, underlying, true, graph, relationships, [, 78, ], .] 

>> PoS Tags are: 
[('amounts', 'VERB'), ('clustering', 'ADJ'), ('problem', 'NOUN'), ('wishes', 'VERB'), ('isolate', 'VERB'), ('communities', 'NOUN'), ('nodes', 'NOUN'), ('social', 'ADJ'), ('graph', 'NOUN'), ('basis', 'NOUN'), ('observation', 'NOUN'), ('realization', 'NOUN'), ('underlying', 'VERB'), ('true', 'ADJ'), ('graph', 'NOUN'), ('relationships', 'NOUN'), ('[', 'PUNCT'), ('78', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('amounts', 'ROOT'), ('clustering', 'amod'), ('problem', 'pobj'), ('wishes', 'relcl'), ('isolate', 'xcomp'), ('communities', 'dobj'), ('nodes', 'pobj'), ('social', 'amod'), ('graph', 'pobj'), ('basis', 'pobj'), ('observation', 'pobj'), ('realization', 'pobj'), ('underlying', 'amod'), ('true', 'amod'), ('graph', 'pobj'), ('relationships', 'pobj'), ('[', 'punct'), ('78', 'npadvmod'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[amounts, clustering], [clustering, problem], [problem, wishes], [wishes, isolate], [isolate, communities], [communities, nodes], [nodes, social], [social, graph], [graph, basis], [basis, observation], [observation, realization], [realization, underlying], [underlying, true], [true, graph], [graph, relationships], [relationships, [], [[, 78], [78, ]], [], .]]

>> Trigrams: 
[[amounts, clustering, problem], [clustering, problem, wishes], [problem, wishes, isolate], [wishes, isolate, communities], [isolate, communities, nodes], [communities, nodes, social], [nodes, social, graph], [social, graph, basis], [graph, basis, observation], [basis, observation, realization], [observation, realization, underlying], [realization, underlying, true], [underlying, true, graph], [true, graph, relationships], [graph, relationships, [], [relationships, [, 78], [[, 78, ]], [78, ], .]]

>> Noun Phrases are: 
[a clustering problem, communities, nodes, a social graph, the basis, the observation, a realization, the underlying true graph, relationships]

>> Named Entities are: 
[('one', 'CARDINAL'), ('78', 'CARDINAL')]


============================ Sentence 728 =============================

Another application is the ranking of webpages based on the graph of hyperlinks carried out by PageRank [19], [79]. 


>> Tokens are: 
[application, ranking, webpages, based, graph, hyperlinks, carried, PageRank, [, 19, ], ,, [, 79, ], .] 

>> PoS Tags are: 
[('application', 'NOUN'), ('ranking', 'NOUN'), ('webpages', 'NOUN'), ('based', 'VERB'), ('graph', 'NOUN'), ('hyperlinks', 'NOUN'), ('carried', 'VERB'), ('PageRank', 'PROPN'), ('[', 'PUNCT'), ('19', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('[', 'PUNCT'), ('79', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('application', 'nsubj'), ('ranking', 'attr'), ('webpages', 'pobj'), ('based', 'prep'), ('graph', 'pobj'), ('hyperlinks', 'pobj'), ('carried', 'acl'), ('PageRank', 'pobj'), ('[', 'punct'), ('19', 'dep'), (']', 'punct'), (',', 'punct'), ('[', 'punct'), ('79', 'dep'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[application, ranking], [ranking, webpages], [webpages, based], [based, graph], [graph, hyperlinks], [hyperlinks, carried], [carried, PageRank], [PageRank, [], [[, 19], [19, ]], [], ,], [,, [], [[, 79], [79, ]], [], .]]

>> Trigrams: 
[[application, ranking, webpages], [ranking, webpages, based], [webpages, based, graph], [based, graph, hyperlinks], [graph, hyperlinks, carried], [hyperlinks, carried, PageRank], [carried, PageRank, [], [PageRank, [, 19], [[, 19, ]], [19, ], ,], [], ,, [], [,, [, 79], [[, 79, ]], [79, ], .]]

>> Noun Phrases are: 
[Another application, the ranking, webpages, the graph, hyperlinks, PageRank]

>> Named Entities are: 
[('PageRank', 'ORG'), ('19', 'CARDINAL'), ('79', 'CARDINAL')]


============================ Sentence 729 =============================

 VII. 


>> Tokens are: 
[ , VII, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('VII', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('VII', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[ , VII], [VII, .]]

>> Trigrams: 
[[ , VII, .]]

>> Noun Phrases are: 
[ VII]

>> Named Entities are: 
[]


============================ Sentence 730 =============================

CONCLUDING REMARKS   


>> Tokens are: 
[CONCLUDING, REMARKS,  ] 

>> PoS Tags are: 
[('CONCLUDING', 'VERB'), ('REMARKS', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('CONCLUDING', 'ROOT'), ('REMARKS', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[CONCLUDING, REMARKS], [REMARKS,  ]]

>> Trigrams: 
[[CONCLUDING, REMARKS,  ]]

>> Noun Phrases are: 
[REMARKS]

>> Named Entities are: 
[]


============================ Sentence 731 =============================

In the presence of modelling or algorithmic deficien- cies in the conventional engineering flow based on the acquisition of domain knowledge, data-driven machine learning tools can speed up the design cycle, reduce the complexity and cost of implementation, and improve over the performance of known algorithms. 


>> Tokens are: 
[presence, modelling, algorithmic, deficien-, cies, conventional, engineering, flow, based, acquisition, domain, knowledge, ,, data, -, driven, machine, learning, tools, speed, design, cycle, ,, reduce, complexity, cost, implementation, ,, improve, performance, known, algorithms, .] 

>> PoS Tags are: 
[('presence', 'NOUN'), ('modelling', 'NOUN'), ('algorithmic', 'ADJ'), ('deficien-', 'ADJ'), ('cies', 'NOUN'), ('conventional', 'ADJ'), ('engineering', 'NOUN'), ('flow', 'NOUN'), ('based', 'VERB'), ('acquisition', 'NOUN'), ('domain', 'NOUN'), ('knowledge', 'NOUN'), (',', 'PUNCT'), ('data', 'NOUN'), ('-', 'PUNCT'), ('driven', 'VERB'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('tools', 'NOUN'), ('speed', 'VERB'), ('design', 'NOUN'), ('cycle', 'NOUN'), (',', 'PUNCT'), ('reduce', 'VERB'), ('complexity', 'NOUN'), ('cost', 'NOUN'), ('implementation', 'NOUN'), (',', 'PUNCT'), ('improve', 'VERB'), ('performance', 'NOUN'), ('known', 'VERB'), ('algorithms', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('presence', 'pobj'), ('modelling', 'pobj'), ('algorithmic', 'amod'), ('deficien-', 'amod'), ('cies', 'conj'), ('conventional', 'amod'), ('engineering', 'compound'), ('flow', 'pobj'), ('based', 'acl'), ('acquisition', 'pobj'), ('domain', 'compound'), ('knowledge', 'pobj'), (',', 'punct'), ('data', 'npadvmod'), ('-', 'punct'), ('driven', 'amod'), ('machine', 'compound'), ('learning', 'compound'), ('tools', 'nsubj'), ('speed', 'ROOT'), ('design', 'compound'), ('cycle', 'dobj'), (',', 'punct'), ('reduce', 'conj'), ('complexity', 'dobj'), ('cost', 'conj'), ('implementation', 'pobj'), (',', 'punct'), ('improve', 'conj'), ('performance', 'pobj'), ('known', 'amod'), ('algorithms', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[presence, modelling], [modelling, algorithmic], [algorithmic, deficien-], [deficien-, cies], [cies, conventional], [conventional, engineering], [engineering, flow], [flow, based], [based, acquisition], [acquisition, domain], [domain, knowledge], [knowledge, ,], [,, data], [data, -], [-, driven], [driven, machine], [machine, learning], [learning, tools], [tools, speed], [speed, design], [design, cycle], [cycle, ,], [,, reduce], [reduce, complexity], [complexity, cost], [cost, implementation], [implementation, ,], [,, improve], [improve, performance], [performance, known], [known, algorithms], [algorithms, .]]

>> Trigrams: 
[[presence, modelling, algorithmic], [modelling, algorithmic, deficien-], [algorithmic, deficien-, cies], [deficien-, cies, conventional], [cies, conventional, engineering], [conventional, engineering, flow], [engineering, flow, based], [flow, based, acquisition], [based, acquisition, domain], [acquisition, domain, knowledge], [domain, knowledge, ,], [knowledge, ,, data], [,, data, -], [data, -, driven], [-, driven, machine], [driven, machine, learning], [machine, learning, tools], [learning, tools, speed], [tools, speed, design], [speed, design, cycle], [design, cycle, ,], [cycle, ,, reduce], [,, reduce, complexity], [reduce, complexity, cost], [complexity, cost, implementation], [cost, implementation, ,], [implementation, ,, improve], [,, improve, performance], [improve, performance, known], [performance, known, algorithms], [known, algorithms, .]]

>> Noun Phrases are: 
[the presence, modelling, algorithmic deficien- cies, the conventional engineering flow, the acquisition, domain knowledge, data-driven machine learning tools, the design cycle, the complexity, cost, implementation, the performance, known algorithms]

>> Named Entities are: 
[]


============================ Sentence 732 =============================

To this end, machine learning can leverage the availability of data and computing resources in many engineering domains, including modern communication systems. 


>> Tokens are: 
[end, ,, machine, learning, leverage, availability, data, computing, resources, engineering, domains, ,, including, modern, communication, systems, .] 

>> PoS Tags are: 
[('end', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('leverage', 'VERB'), ('availability', 'NOUN'), ('data', 'NOUN'), ('computing', 'NOUN'), ('resources', 'NOUN'), ('engineering', 'NOUN'), ('domains', 'NOUN'), (',', 'PUNCT'), ('including', 'VERB'), ('modern', 'ADJ'), ('communication', 'NOUN'), ('systems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('end', 'pobj'), (',', 'punct'), ('machine', 'compound'), ('learning', 'nsubj'), ('leverage', 'ROOT'), ('availability', 'dobj'), ('data', 'pobj'), ('computing', 'conj'), ('resources', 'dobj'), ('engineering', 'compound'), ('domains', 'pobj'), (',', 'punct'), ('including', 'prep'), ('modern', 'amod'), ('communication', 'compound'), ('systems', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[end, ,], [,, machine], [machine, learning], [learning, leverage], [leverage, availability], [availability, data], [data, computing], [computing, resources], [resources, engineering], [engineering, domains], [domains, ,], [,, including], [including, modern], [modern, communication], [communication, systems], [systems, .]]

>> Trigrams: 
[[end, ,, machine], [,, machine, learning], [machine, learning, leverage], [learning, leverage, availability], [leverage, availability, data], [availability, data, computing], [data, computing, resources], [computing, resources, engineering], [resources, engineering, domains], [engineering, domains, ,], [domains, ,, including], [,, including, modern], [including, modern, communication], [modern, communication, systems], [communication, systems, .]]

>> Noun Phrases are: 
[this end, machine learning, the availability, data, computing, resources, many engineering domains, modern communication systems]

>> Named Entities are: 
[]


============================ Sentence 733 =============================

Supervised, unsupervised, and reinforcement learning paradigms lend themselves to different tasks depending on the availabil- ity of examples of desired behaviour or of feedback. 


>> Tokens are: 
[Supervised, ,, unsupervised, ,, reinforcement, learning, paradigms, lend, different, tasks, depending, availabil-, ity, examples, desired, behaviour, feedback, .] 

>> PoS Tags are: 
[('Supervised', 'ADJ'), (',', 'PUNCT'), ('unsupervised', 'ADJ'), (',', 'PUNCT'), ('reinforcement', 'NOUN'), ('learning', 'NOUN'), ('paradigms', 'NOUN'), ('lend', 'VERB'), ('different', 'ADJ'), ('tasks', 'NOUN'), ('depending', 'VERB'), ('availabil-', 'NOUN'), ('ity', 'NOUN'), ('examples', 'NOUN'), ('desired', 'VERB'), ('behaviour', 'NOUN'), ('feedback', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Supervised', 'amod'), (',', 'punct'), ('unsupervised', 'conj'), (',', 'punct'), ('reinforcement', 'compound'), ('learning', 'compound'), ('paradigms', 'nsubj'), ('lend', 'ROOT'), ('different', 'amod'), ('tasks', 'pobj'), ('depending', 'prep'), ('availabil-', 'amod'), ('ity', 'pobj'), ('examples', 'pobj'), ('desired', 'amod'), ('behaviour', 'pobj'), ('feedback', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Supervised, ,], [,, unsupervised], [unsupervised, ,], [,, reinforcement], [reinforcement, learning], [learning, paradigms], [paradigms, lend], [lend, different], [different, tasks], [tasks, depending], [depending, availabil-], [availabil-, ity], [ity, examples], [examples, desired], [desired, behaviour], [behaviour, feedback], [feedback, .]]

>> Trigrams: 
[[Supervised, ,, unsupervised], [,, unsupervised, ,], [unsupervised, ,, reinforcement], [,, reinforcement, learning], [reinforcement, learning, paradigms], [learning, paradigms, lend], [paradigms, lend, different], [lend, different, tasks], [different, tasks, depending], [tasks, depending, availabil-], [depending, availabil-, ity], [availabil-, ity, examples], [ity, examples, desired], [examples, desired, behaviour], [desired, behaviour, feedback], [behaviour, feedback, .]]

>> Noun Phrases are: 
[Supervised, unsupervised, and reinforcement learning paradigms, themselves, different tasks, the availabil- ity, examples, desired behaviour, feedback]

>> Named Entities are: 
[]


============================ Sentence 734 =============================

The applicability of learning methods hinges on specific features of the problem under study, including its time variability and its tolerance to errors. 


>> Tokens are: 
[applicability, learning, methods, hinges, specific, features, problem, study, ,, including, time, variability, tolerance, errors, .] 

>> PoS Tags are: 
[('applicability', 'NOUN'), ('learning', 'VERB'), ('methods', 'NOUN'), ('hinges', 'NOUN'), ('specific', 'ADJ'), ('features', 'NOUN'), ('problem', 'NOUN'), ('study', 'NOUN'), (',', 'PUNCT'), ('including', 'VERB'), ('time', 'NOUN'), ('variability', 'NOUN'), ('tolerance', 'NOUN'), ('errors', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('applicability', 'ROOT'), ('learning', 'pcomp'), ('methods', 'dobj'), ('hinges', 'dobj'), ('specific', 'amod'), ('features', 'pobj'), ('problem', 'pobj'), ('study', 'pobj'), (',', 'punct'), ('including', 'prep'), ('time', 'compound'), ('variability', 'pobj'), ('tolerance', 'conj'), ('errors', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[applicability, learning], [learning, methods], [methods, hinges], [hinges, specific], [specific, features], [features, problem], [problem, study], [study, ,], [,, including], [including, time], [time, variability], [variability, tolerance], [tolerance, errors], [errors, .]]

>> Trigrams: 
[[applicability, learning, methods], [learning, methods, hinges], [methods, hinges, specific], [hinges, specific, features], [specific, features, problem], [features, problem, study], [problem, study, ,], [study, ,, including], [,, including, time], [including, time, variability], [time, variability, tolerance], [variability, tolerance, errors], [tolerance, errors, .]]

>> Noun Phrases are: 
[The applicability, methods, hinges, specific features, the problem, study, its time variability, its tolerance, errors]

>> Named Entities are: 
[]


============================ Sentence 735 =============================

As such, a data- driven approach should not be considered as a universal solution, but rather as a useful tool whose suitability should be assessed on a case-by-case basis. 


>> Tokens are: 
[,, data-, driven, approach, considered, universal, solution, ,, useful, tool, suitability, assessed, case, -, -, case, basis, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('data-', 'X'), ('driven', 'VERB'), ('approach', 'NOUN'), ('considered', 'VERB'), ('universal', 'ADJ'), ('solution', 'NOUN'), (',', 'PUNCT'), ('useful', 'ADJ'), ('tool', 'NOUN'), ('suitability', 'NOUN'), ('assessed', 'VERB'), ('case', 'NOUN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('case', 'NOUN'), ('basis', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('data-', 'npadvmod'), ('driven', 'amod'), ('approach', 'nsubjpass'), ('considered', 'ROOT'), ('universal', 'amod'), ('solution', 'pobj'), (',', 'punct'), ('useful', 'amod'), ('tool', 'pobj'), ('suitability', 'nsubjpass'), ('assessed', 'relcl'), ('case', 'nmod'), ('-', 'punct'), ('-', 'punct'), ('case', 'pobj'), ('basis', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[,, data-], [data-, driven], [driven, approach], [approach, considered], [considered, universal], [universal, solution], [solution, ,], [,, useful], [useful, tool], [tool, suitability], [suitability, assessed], [assessed, case], [case, -], [-, -], [-, case], [case, basis], [basis, .]]

>> Trigrams: 
[[,, data-, driven], [data-, driven, approach], [driven, approach, considered], [approach, considered, universal], [considered, universal, solution], [universal, solution, ,], [solution, ,, useful], [,, useful, tool], [useful, tool, suitability], [tool, suitability, assessed], [suitability, assessed, case], [assessed, case, -], [case, -, -], [-, -, case], [-, case, basis], [case, basis, .]]

>> Noun Phrases are: 
[a data- driven approach, a universal solution, a useful tool, whose suitability, case]

>> Named Entities are: 
[]


============================ Sentence 736 =============================

Further- more, machine learning tools allow for the integration of traditional model-based engineering techniques and of existing domain knowledge in order to leverage the complementarity and synergy of the two solutions (see Fig 2). 


>> Tokens are: 
[Further-, ,, machine, learning, tools, allow, integration, traditional, model, -, based, engineering, techniques, existing, domain, knowledge, order, leverage, complementarity, synergy, solutions, (, Fig, 2, ), .] 

>> PoS Tags are: 
[('Further-', 'PROPN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('tools', 'NOUN'), ('allow', 'VERB'), ('integration', 'NOUN'), ('traditional', 'ADJ'), ('model', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('engineering', 'NOUN'), ('techniques', 'NOUN'), ('existing', 'VERB'), ('domain', 'NOUN'), ('knowledge', 'NOUN'), ('order', 'NOUN'), ('leverage', 'VERB'), ('complementarity', 'NOUN'), ('synergy', 'NOUN'), ('solutions', 'NOUN'), ('(', 'PUNCT'), ('Fig', 'PROPN'), ('2', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Further-', 'npadvmod'), (',', 'punct'), ('machine', 'compound'), ('learning', 'compound'), ('tools', 'nsubj'), ('allow', 'ROOT'), ('integration', 'pobj'), ('traditional', 'amod'), ('model', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('engineering', 'compound'), ('techniques', 'pobj'), ('existing', 'amod'), ('domain', 'compound'), ('knowledge', 'pobj'), ('order', 'pobj'), ('leverage', 'acl'), ('complementarity', 'dobj'), ('synergy', 'conj'), ('solutions', 'pobj'), ('(', 'punct'), ('Fig', 'dobj'), ('2', 'nummod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Further-, ,], [,, machine], [machine, learning], [learning, tools], [tools, allow], [allow, integration], [integration, traditional], [traditional, model], [model, -], [-, based], [based, engineering], [engineering, techniques], [techniques, existing], [existing, domain], [domain, knowledge], [knowledge, order], [order, leverage], [leverage, complementarity], [complementarity, synergy], [synergy, solutions], [solutions, (], [(, Fig], [Fig, 2], [2, )], [), .]]

>> Trigrams: 
[[Further-, ,, machine], [,, machine, learning], [machine, learning, tools], [learning, tools, allow], [tools, allow, integration], [allow, integration, traditional], [integration, traditional, model], [traditional, model, -], [model, -, based], [-, based, engineering], [based, engineering, techniques], [engineering, techniques, existing], [techniques, existing, domain], [existing, domain, knowledge], [domain, knowledge, order], [knowledge, order, leverage], [order, leverage, complementarity], [leverage, complementarity, synergy], [complementarity, synergy, solutions], [synergy, solutions, (], [solutions, (, Fig], [(, Fig, 2], [Fig, 2, )], [2, ), .]]

>> Noun Phrases are: 
[machine learning tools, the integration, traditional model-based engineering techniques, existing domain knowledge, order, the complementarity, synergy, the two solutions, Fig]

>> Named Entities are: 
[('two', 'CARDINAL'), ('Fig 2', 'PERSON')]


============================ Sentence 737 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 738 =============================

As a final note, while this paper has focused on appli- cations of machine learning to communication systems, communication is conversely a key element of distributed machine learning platforms. 


>> Tokens are: 
[final, note, ,, paper, focused, appli-, cations, machine, learning, communication, systems, ,, communication, conversely, key, element, distributed, machine, learning, platforms, .] 

>> PoS Tags are: 
[('final', 'ADJ'), ('note', 'NOUN'), (',', 'PUNCT'), ('paper', 'NOUN'), ('focused', 'VERB'), ('appli-', 'ADJ'), ('cations', 'NOUN'), ('machine', 'NOUN'), ('learning', 'VERB'), ('communication', 'NOUN'), ('systems', 'NOUN'), (',', 'PUNCT'), ('communication', 'NOUN'), ('conversely', 'ADV'), ('key', 'ADJ'), ('element', 'NOUN'), ('distributed', 'VERB'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('platforms', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('final', 'amod'), ('note', 'pobj'), (',', 'punct'), ('paper', 'nsubj'), ('focused', 'advcl'), ('appli-', 'amod'), ('cations', 'pobj'), ('machine', 'pobj'), ('learning', 'pobj'), ('communication', 'compound'), ('systems', 'pobj'), (',', 'punct'), ('communication', 'nsubj'), ('conversely', 'advmod'), ('key', 'amod'), ('element', 'attr'), ('distributed', 'amod'), ('machine', 'compound'), ('learning', 'compound'), ('platforms', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[final, note], [note, ,], [,, paper], [paper, focused], [focused, appli-], [appli-, cations], [cations, machine], [machine, learning], [learning, communication], [communication, systems], [systems, ,], [,, communication], [communication, conversely], [conversely, key], [key, element], [element, distributed], [distributed, machine], [machine, learning], [learning, platforms], [platforms, .]]

>> Trigrams: 
[[final, note, ,], [note, ,, paper], [,, paper, focused], [paper, focused, appli-], [focused, appli-, cations], [appli-, cations, machine], [cations, machine, learning], [machine, learning, communication], [learning, communication, systems], [communication, systems, ,], [systems, ,, communication], [,, communication, conversely], [communication, conversely, key], [conversely, key, element], [key, element, distributed], [element, distributed, machine], [distributed, machine, learning], [machine, learning, platforms], [learning, platforms, .]]

>> Noun Phrases are: 
[a final note, this paper, appli- cations, machine, communication systems, communication, a key element, distributed machine learning platforms]

>> Named Entities are: 
[]


============================ Sentence 739 =============================

In these systems, learning tasks are carried out at distributed machines that need to coordinate via communication, e.g.--.-, by transferring the results of intermediate computations. 


>> Tokens are: 
[systems, ,, learning, tasks, carried, distributed, machines, need, coordinate, communication, ,, e.g.--.-, ,, transferring, results, intermediate, computations, .] 

>> PoS Tags are: 
[('systems', 'NOUN'), (',', 'PUNCT'), ('learning', 'VERB'), ('tasks', 'NOUN'), ('carried', 'VERB'), ('distributed', 'VERB'), ('machines', 'NOUN'), ('need', 'VERB'), ('coordinate', 'VERB'), ('communication', 'NOUN'), (',', 'PUNCT'), ('e.g.--.-', 'INTJ'), (',', 'PUNCT'), ('transferring', 'VERB'), ('results', 'NOUN'), ('intermediate', 'ADJ'), ('computations', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('systems', 'pobj'), (',', 'punct'), ('learning', 'amod'), ('tasks', 'nsubjpass'), ('carried', 'ROOT'), ('distributed', 'amod'), ('machines', 'pobj'), ('need', 'relcl'), ('coordinate', 'xcomp'), ('communication', 'pobj'), (',', 'punct'), ('e.g.--.-', 'intj'), (',', 'punct'), ('transferring', 'pcomp'), ('results', 'dobj'), ('intermediate', 'amod'), ('computations', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[systems, ,], [,, learning], [learning, tasks], [tasks, carried], [carried, distributed], [distributed, machines], [machines, need], [need, coordinate], [coordinate, communication], [communication, ,], [,, e.g.--.-], [e.g.--.-, ,], [,, transferring], [transferring, results], [results, intermediate], [intermediate, computations], [computations, .]]

>> Trigrams: 
[[systems, ,, learning], [,, learning, tasks], [learning, tasks, carried], [tasks, carried, distributed], [carried, distributed, machines], [distributed, machines, need], [machines, need, coordinate], [need, coordinate, communication], [coordinate, communication, ,], [communication, ,, e.g.--.-], [,, e.g.--.-, ,], [e.g.--.-, ,, transferring], [,, transferring, results], [transferring, results, intermediate], [results, intermediate, computations], [intermediate, computations, .]]

>> Noun Phrases are: 
[these systems, learning tasks, distributed machines, communication, the results, intermediate computations]

>> Named Entities are: 
[]


============================ Sentence 740 =============================

A recent line  of work investigates the resulting interplay between computation and communication [80]. 


>> Tokens are: 
[recent, line,  , work, investigates, resulting, interplay, computation, communication, [, 80, ], .] 

>> PoS Tags are: 
[('recent', 'ADJ'), ('line', 'NOUN'), (' ', 'SPACE'), ('work', 'NOUN'), ('investigates', 'VERB'), ('resulting', 'VERB'), ('interplay', 'NOUN'), ('computation', 'NOUN'), ('communication', 'NOUN'), ('[', 'PUNCT'), ('80', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('recent', 'amod'), ('line', 'ROOT'), (' ', 'nsubj'), ('work', 'pobj'), ('investigates', 'relcl'), ('resulting', 'amod'), ('interplay', 'dobj'), ('computation', 'pobj'), ('communication', 'conj'), ('[', 'punct'), ('80', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[recent, line], [line,  ], [ , work], [work, investigates], [investigates, resulting], [resulting, interplay], [interplay, computation], [computation, communication], [communication, [], [[, 80], [80, ]], [], .]]

>> Trigrams: 
[[recent, line,  ], [line,  , work], [ , work, investigates], [work, investigates, resulting], [investigates, resulting, interplay], [resulting, interplay, computation], [interplay, computation, communication], [computation, communication, [], [communication, [, 80], [[, 80, ]], [80, ], .]]

>> Noun Phrases are: 
[A recent line, work, the resulting interplay, computation, communication]

>> Named Entities are: 
[('80', 'CARDINAL')]


============================ Sentence 741 =============================

 REFERENCES [1] G. Hinton, L. Deng, D. Yu, G. E. Dahl, A.-r. 


>> Tokens are: 
[ , REFERENCES, [, 1, ], G., Hinton, ,, L., Deng, ,, D., Yu, ,, G., E., Dahl, ,, A.-r, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('REFERENCES', 'NOUN'), ('[', 'PUNCT'), ('1', 'NUM'), (']', 'PUNCT'), ('G.', 'PROPN'), ('Hinton', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('Deng', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('Yu', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('E.', 'PROPN'), ('Dahl', 'PROPN'), (',', 'PUNCT'), ('A.-r', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('REFERENCES', 'ROOT'), ('[', 'punct'), ('1', 'appos'), (']', 'punct'), ('G.', 'compound'), ('Hinton', 'appos'), (',', 'punct'), ('L.', 'compound'), ('Deng', 'conj'), (',', 'punct'), ('D.', 'compound'), ('Yu', 'conj'), (',', 'punct'), ('G.', 'compound'), ('E.', 'compound'), ('Dahl', 'conj'), (',', 'punct'), ('A.-r', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[ , REFERENCES], [REFERENCES, [], [[, 1], [1, ]], [], G.], [G., Hinton], [Hinton, ,], [,, L.], [L., Deng], [Deng, ,], [,, D.], [D., Yu], [Yu, ,], [,, G.], [G., E.], [E., Dahl], [Dahl, ,], [,, A.-r], [A.-r, .]]

>> Trigrams: 
[[ , REFERENCES, [], [REFERENCES, [, 1], [[, 1, ]], [1, ], G.], [], G., Hinton], [G., Hinton, ,], [Hinton, ,, L.], [,, L., Deng], [L., Deng, ,], [Deng, ,, D.], [,, D., Yu], [D., Yu, ,], [Yu, ,, G.], [,, G., E.], [G., E., Dahl], [E., Dahl, ,], [Dahl, ,, A.-r], [,, A.-r, .]]

>> Noun Phrases are: 
[ REFERENCES, G. Hinton, L. Deng, D. Yu, G. E. Dahl, A.-r]

>> Named Entities are: 
[('1', 'CARDINAL'), ('G. Hinton', 'PERSON'), ('L. Deng', 'PERSON'), ('D. Yu', 'PERSON'), ('G. E. Dahl', 'PERSON'), ('A.-r', 'ORG')]


============================ Sentence 742 =============================

Mohamed,  N. Jaitly, A. Senior, V. Vanhoucke, P. Nguyen, T. N. Sainath et al. 


>> Tokens are: 
[Mohamed, ,,  , N., Jaitly, ,, A., Senior, ,, V., Vanhoucke, ,, P., Nguyen, ,, T., N., Sainath, et, al, .] 

>> PoS Tags are: 
[('Mohamed', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE'), ('N.', 'PROPN'), ('Jaitly', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('Senior', 'PROPN'), (',', 'PUNCT'), ('V.', 'PROPN'), ('Vanhoucke', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('Nguyen', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), ('N.', 'PROPN'), ('Sainath', 'PROPN'), ('et', 'PROPN'), ('al', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Mohamed', 'ROOT'), (',', 'punct'), (' ', 'appos'), ('N.', 'compound'), ('Jaitly', 'appos'), (',', 'punct'), ('A.', 'compound'), ('Senior', 'appos'), (',', 'punct'), ('V.', 'compound'), ('Vanhoucke', 'appos'), (',', 'punct'), ('P.', 'compound'), ('Nguyen', 'conj'), (',', 'punct'), ('T.', 'compound'), ('N.', 'compound'), ('Sainath', 'compound'), ('et', 'compound'), ('al', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Mohamed, ,], [,,  ], [ , N.], [N., Jaitly], [Jaitly, ,], [,, A.], [A., Senior], [Senior, ,], [,, V.], [V., Vanhoucke], [Vanhoucke, ,], [,, P.], [P., Nguyen], [Nguyen, ,], [,, T.], [T., N.], [N., Sainath], [Sainath, et], [et, al], [al, .]]

>> Trigrams: 
[[Mohamed, ,,  ], [,,  , N.], [ , N., Jaitly], [N., Jaitly, ,], [Jaitly, ,, A.], [,, A., Senior], [A., Senior, ,], [Senior, ,, V.], [,, V., Vanhoucke], [V., Vanhoucke, ,], [Vanhoucke, ,, P.], [,, P., Nguyen], [P., Nguyen, ,], [Nguyen, ,, T.], [,, T., N.], [T., N., Sainath], [N., Sainath, et], [Sainath, et, al], [et, al, .]]

>> Noun Phrases are: 
[Mohamed, N. Jaitly, A. Senior, V. Vanhoucke, P. Nguyen, T. N. Sainath et al]

>> Named Entities are: 
[('N. Jaitly', 'PERSON'), ('V. Vanhoucke', 'PERSON'), ('P. Nguyen', 'PERSON'), ('T. N. Sainath', 'PERSON')]


============================ Sentence 743 =============================

, “Deep neural networks for acoustic modeling in speech recognition: The shared views of four research groups,” IEEE Signal processing magazine, vol. 


>> Tokens are: 
[,, “, Deep, neural, networks, acoustic, modeling, speech, recognition, :, shared, views, research, groups, ,, ”, IEEE, Signal, processing, magazine, ,, vol, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('“', 'PUNCT'), ('Deep', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('acoustic', 'ADJ'), ('modeling', 'NOUN'), ('speech', 'NOUN'), ('recognition', 'NOUN'), (':', 'PUNCT'), ('shared', 'VERB'), ('views', 'NOUN'), ('research', 'NOUN'), ('groups', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('Signal', 'PROPN'), ('processing', 'NOUN'), ('magazine', 'NOUN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('“', 'punct'), ('Deep', 'amod'), ('neural', 'amod'), ('networks', 'ROOT'), ('acoustic', 'amod'), ('modeling', 'pobj'), ('speech', 'compound'), ('recognition', 'pobj'), (':', 'punct'), ('shared', 'amod'), ('views', 'appos'), ('research', 'compound'), ('groups', 'pobj'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('Signal', 'compound'), ('processing', 'compound'), ('magazine', 'appos'), (',', 'punct'), ('vol', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[,, “], [“, Deep], [Deep, neural], [neural, networks], [networks, acoustic], [acoustic, modeling], [modeling, speech], [speech, recognition], [recognition, :], [:, shared], [shared, views], [views, research], [research, groups], [groups, ,], [,, ”], [”, IEEE], [IEEE, Signal], [Signal, processing], [processing, magazine], [magazine, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[,, “, Deep], [“, Deep, neural], [Deep, neural, networks], [neural, networks, acoustic], [networks, acoustic, modeling], [acoustic, modeling, speech], [modeling, speech, recognition], [speech, recognition, :], [recognition, :, shared], [:, shared, views], [shared, views, research], [views, research, groups], [research, groups, ,], [groups, ,, ”], [,, ”, IEEE], [”, IEEE, Signal], [IEEE, Signal, processing], [Signal, processing, magazine], [processing, magazine, ,], [magazine, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[, “Deep neural networks, acoustic modeling, speech recognition, The shared views, four research groups, IEEE Signal processing magazine, vol]

>> Named Entities are: 
[('four', 'CARDINAL')]


============================ Sentence 744 =============================

29, no. 6, pp. 


>> Tokens are: 
[29, ,, ., 6, ,, pp, .] 

>> PoS Tags are: 
[('29', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('6', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('29', 'nummod'), (',', 'punct'), ('.', 'punct'), ('6', 'nummod'), (',', 'punct'), ('pp', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[29, ,], [,, .], [., 6], [6, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[29, ,, .], [,, ., 6], [., 6, ,], [6, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[29, no. 6, pp]

>> Named Entities are: 
[('29', 'CARDINAL'), ('6', 'CARDINAL')]


============================ Sentence 745 =============================

82–97, 2012. 


>> Tokens are: 
[82–97, ,, 2012, .] 

>> PoS Tags are: 
[('82–97', 'NUM'), (',', 'PUNCT'), ('2012', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('82–97', 'ROOT'), (',', 'punct'), ('2012', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[82–97, ,], [,, 2012], [2012, .]]

>> Trigrams: 
[[82–97, ,, 2012], [,, 2012, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 746 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 747 =============================

[2] M. Ibnkahla, “Applications of neural networks to digital communications–a survey,” Signal processing, vol. 


>> Tokens are: 
[[, 2, ], M., Ibnkahla, ,, “, Applications, neural, networks, digital, communications, –, survey, ,, ”, Signal, processing, ,, vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('2', 'NUM'), (']', 'PUNCT'), ('M.', 'PROPN'), ('Ibnkahla', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Applications', 'NOUN'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('digital', 'ADJ'), ('communications', 'NOUN'), ('–', 'PUNCT'), ('survey', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('Signal', 'PROPN'), ('processing', 'NOUN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('2', 'nummod'), (']', 'punct'), ('M.', 'compound'), ('Ibnkahla', 'ROOT'), (',', 'punct'), ('“', 'punct'), ('Applications', 'appos'), ('neural', 'amod'), ('networks', 'pobj'), ('digital', 'amod'), ('communications', 'pobj'), ('–', 'punct'), ('survey', 'appos'), (',', 'punct'), ('”', 'punct'), ('Signal', 'compound'), ('processing', 'appos'), (',', 'punct'), ('vol', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[[, 2], [2, ]], [], M.], [M., Ibnkahla], [Ibnkahla, ,], [,, “], [“, Applications], [Applications, neural], [neural, networks], [networks, digital], [digital, communications], [communications, –], [–, survey], [survey, ,], [,, ”], [”, Signal], [Signal, processing], [processing, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[[, 2, ]], [2, ], M.], [], M., Ibnkahla], [M., Ibnkahla, ,], [Ibnkahla, ,, “], [,, “, Applications], [“, Applications, neural], [Applications, neural, networks], [neural, networks, digital], [networks, digital, communications], [digital, communications, –], [communications, –, survey], [–, survey, ,], [survey, ,, ”], [,, ”, Signal], [”, Signal, processing], [Signal, processing, ,], [processing, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[[2] M. Ibnkahla, Applications, neural networks, digital communications, a survey, Signal processing, vol]

>> Named Entities are: 
[]


============================ Sentence 748 =============================

80, no. 7, pp. 


>> Tokens are: 
[80, ,, ., 7, ,, pp, .] 

>> PoS Tags are: 
[('80', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('7', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('80', 'nummod'), (',', 'punct'), ('.', 'punct'), ('7', 'nummod'), (',', 'punct'), ('pp', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[80, ,], [,, .], [., 7], [7, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[80, ,, .], [,, ., 7], [., 7, ,], [7, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[80, no. 7, pp]

>> Named Entities are: 
[('80', 'CARDINAL'), ('7', 'CARDINAL')]


============================ Sentence 749 =============================

1185–1215, 2000. 


>> Tokens are: 
[1185–1215, ,, 2000, .] 

>> PoS Tags are: 
[('1185–1215', 'NUM'), (',', 'PUNCT'), ('2000', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1185–1215', 'ROOT'), (',', 'punct'), ('2000', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[1185–1215, ,], [,, 2000], [2000, .]]

>> Trigrams: 
[[1185–1215, ,, 2000], [,, 2000, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2000', 'DATE')]


============================ Sentence 750 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 751 =============================

[3] H. J. Levesque, Common Sense, the Turing Test, and the Quest for Real AI: Reflections on Natural and Artificial Intelligence. 


>> Tokens are: 
[[, 3, ], H., J., Levesque, ,, Common, Sense, ,, Turing, Test, ,, Quest, Real, AI, :, Reflections, Natural, Artificial, Intelligence, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('3', 'NUM'), (']', 'PUNCT'), ('H.', 'PROPN'), ('J.', 'PROPN'), ('Levesque', 'PROPN'), (',', 'PUNCT'), ('Common', 'PROPN'), ('Sense', 'PROPN'), (',', 'PUNCT'), ('Turing', 'PROPN'), ('Test', 'PROPN'), (',', 'PUNCT'), ('Quest', 'PROPN'), ('Real', 'ADJ'), ('AI', 'PROPN'), (':', 'PUNCT'), ('Reflections', 'NOUN'), ('Natural', 'PROPN'), ('Artificial', 'PROPN'), ('Intelligence', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('3', 'dep'), (']', 'punct'), ('H.', 'compound'), ('J.', 'compound'), ('Levesque', 'ROOT'), (',', 'punct'), ('Common', 'amod'), ('Sense', 'appos'), (',', 'punct'), ('Turing', 'compound'), ('Test', 'conj'), (',', 'punct'), ('Quest', 'conj'), ('Real', 'compound'), ('AI', 'pobj'), (':', 'punct'), ('Reflections', 'appos'), ('Natural', 'nmod'), ('Artificial', 'conj'), ('Intelligence', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[[, 3], [3, ]], [], H.], [H., J.], [J., Levesque], [Levesque, ,], [,, Common], [Common, Sense], [Sense, ,], [,, Turing], [Turing, Test], [Test, ,], [,, Quest], [Quest, Real], [Real, AI], [AI, :], [:, Reflections], [Reflections, Natural], [Natural, Artificial], [Artificial, Intelligence], [Intelligence, .]]

>> Trigrams: 
[[[, 3, ]], [3, ], H.], [], H., J.], [H., J., Levesque], [J., Levesque, ,], [Levesque, ,, Common], [,, Common, Sense], [Common, Sense, ,], [Sense, ,, Turing], [,, Turing, Test], [Turing, Test, ,], [Test, ,, Quest], [,, Quest, Real], [Quest, Real, AI], [Real, AI, :], [AI, :, Reflections], [:, Reflections, Natural], [Reflections, Natural, Artificial], [Natural, Artificial, Intelligence], [Artificial, Intelligence, .]]

>> Noun Phrases are: 
[[3] H. J. Levesque, Common Sense, the Turing Test, the Quest, Real AI, Reflections, Natural and Artificial Intelligence]

>> Named Entities are: 
[('Common Sense', 'PERSON'), ('the Quest for Real AI', 'ORG'), ('Artificial Intelligence', 'ORG')]


============================ Sentence 752 =============================

MIT Press, 2017. 


>> Tokens are: 
[MIT, Press, ,, 2017, .] 

>> PoS Tags are: 
[('MIT', 'PROPN'), ('Press', 'PROPN'), (',', 'PUNCT'), ('2017', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('MIT', 'compound'), ('Press', 'ROOT'), (',', 'punct'), ('2017', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[MIT, Press], [Press, ,], [,, 2017], [2017, .]]

>> Trigrams: 
[[MIT, Press, ,], [Press, ,, 2017], [,, 2017, .]]

>> Noun Phrases are: 
[MIT Press]

>> Named Entities are: 
[('MIT Press', 'ORG'), ('2017', 'DATE')]


============================ Sentence 753 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 754 =============================

[4] D. E. Rumelhart, G. E. Hinton, and R. J. Williams, “Learning internal representations by error propagation,” California Univ San Diego La Jolla Inst for Cognitive Science, Tech. 


>> Tokens are: 
[[, 4, ], D., E., Rumelhart, ,, G., E., Hinton, ,, R., J., Williams, ,, “, Learning, internal, representations, error, propagation, ,, ”, California, Univ, San, Diego, La, Jolla, Inst, Cognitive, Science, ,, Tech, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('4', 'NUM'), (']', 'PUNCT'), ('D.', 'PROPN'), ('E.', 'PROPN'), ('Rumelhart', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('E.', 'PROPN'), ('Hinton', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('J.', 'PROPN'), ('Williams', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Learning', 'VERB'), ('internal', 'ADJ'), ('representations', 'NOUN'), ('error', 'NOUN'), ('propagation', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('California', 'PROPN'), ('Univ', 'PROPN'), ('San', 'PROPN'), ('Diego', 'PROPN'), ('La', 'PROPN'), ('Jolla', 'PROPN'), ('Inst', 'PROPN'), ('Cognitive', 'PROPN'), ('Science', 'PROPN'), (',', 'PUNCT'), ('Tech', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('4', 'dep'), (']', 'punct'), ('D.', 'compound'), ('E.', 'compound'), ('Rumelhart', 'ROOT'), (',', 'punct'), ('G.', 'compound'), ('E.', 'compound'), ('Hinton', 'appos'), (',', 'punct'), ('R.', 'compound'), ('J.', 'compound'), ('Williams', 'conj'), (',', 'punct'), ('“', 'punct'), ('Learning', 'acl'), ('internal', 'amod'), ('representations', 'dobj'), ('error', 'compound'), ('propagation', 'pobj'), (',', 'punct'), ('”', 'punct'), ('California', 'compound'), ('Univ', 'compound'), ('San', 'compound'), ('Diego', 'compound'), ('La', 'compound'), ('Jolla', 'compound'), ('Inst', 'appos'), ('Cognitive', 'compound'), ('Science', 'pobj'), (',', 'punct'), ('Tech', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 4], [4, ]], [], D.], [D., E.], [E., Rumelhart], [Rumelhart, ,], [,, G.], [G., E.], [E., Hinton], [Hinton, ,], [,, R.], [R., J.], [J., Williams], [Williams, ,], [,, “], [“, Learning], [Learning, internal], [internal, representations], [representations, error], [error, propagation], [propagation, ,], [,, ”], [”, California], [California, Univ], [Univ, San], [San, Diego], [Diego, La], [La, Jolla], [Jolla, Inst], [Inst, Cognitive], [Cognitive, Science], [Science, ,], [,, Tech], [Tech, .]]

>> Trigrams: 
[[[, 4, ]], [4, ], D.], [], D., E.], [D., E., Rumelhart], [E., Rumelhart, ,], [Rumelhart, ,, G.], [,, G., E.], [G., E., Hinton], [E., Hinton, ,], [Hinton, ,, R.], [,, R., J.], [R., J., Williams], [J., Williams, ,], [Williams, ,, “], [,, “, Learning], [“, Learning, internal], [Learning, internal, representations], [internal, representations, error], [representations, error, propagation], [error, propagation, ,], [propagation, ,, ”], [,, ”, California], [”, California, Univ], [California, Univ, San], [Univ, San, Diego], [San, Diego, La], [Diego, La, Jolla], [La, Jolla, Inst], [Jolla, Inst, Cognitive], [Inst, Cognitive, Science], [Cognitive, Science, ,], [Science, ,, Tech], [,, Tech, .]]

>> Noun Phrases are: 
[[4] D. E. Rumelhart, G. E. Hinton, R. J. Williams, internal representations, error propagation, California Univ San Diego La Jolla Inst, Cognitive Science, Tech]

>> Named Entities are: 
[('4', 'CARDINAL'), ('G. E. Hinton', 'PERSON'), ('R. J. Williams', 'PERSON'), ('California Univ San Diego La Jolla Inst for Cognitive Science', 'ORG')]


============================ Sentence 755 =============================

Rep., 1985. 


>> Tokens are: 
[Rep., ,, 1985, .] 

>> PoS Tags are: 
[('Rep.', 'PROPN'), (',', 'PUNCT'), ('1985', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Rep.', 'ROOT'), (',', 'punct'), ('1985', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Rep., ,], [,, 1985], [1985, .]]

>> Trigrams: 
[[Rep., ,, 1985], [,, 1985, .]]

>> Noun Phrases are: 
[Rep.]

>> Named Entities are: 
[('1985', 'DATE')]


============================ Sentence 756 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 757 =============================

[5] A. P. Dempster, N. M. Laird, and D. B. Rubin, “Maximum likelihood from incomplete data via the em algorithm,” Journal of the royal statistical society. 


>> Tokens are: 
[[, 5, ], A., P., Dempster, ,, N., M., Laird, ,, D., B., Rubin, ,, “, Maximum, likelihood, incomplete, data, em, algorithm, ,, ”, Journal, royal, statistical, society, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('5', 'NUM'), (']', 'PUNCT'), ('A.', 'PROPN'), ('P.', 'PROPN'), ('Dempster', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), ('M.', 'PROPN'), ('Laird', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('B.', 'PROPN'), ('Rubin', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Maximum', 'ADJ'), ('likelihood', 'NOUN'), ('incomplete', 'ADJ'), ('data', 'NOUN'), ('em', 'PRON'), ('algorithm', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('Journal', 'PROPN'), ('royal', 'ADJ'), ('statistical', 'ADJ'), ('society', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('5', 'dep'), (']', 'punct'), ('A.', 'compound'), ('P.', 'compound'), ('Dempster', 'ROOT'), (',', 'punct'), ('N.', 'compound'), ('M.', 'compound'), ('Laird', 'appos'), (',', 'punct'), ('D.', 'compound'), ('B.', 'compound'), ('Rubin', 'conj'), (',', 'punct'), ('“', 'punct'), ('Maximum', 'amod'), ('likelihood', 'appos'), ('incomplete', 'amod'), ('data', 'pobj'), ('em', 'pobj'), ('algorithm', 'pobj'), (',', 'punct'), ('”', 'punct'), ('Journal', 'appos'), ('royal', 'amod'), ('statistical', 'amod'), ('society', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[[, 5], [5, ]], [], A.], [A., P.], [P., Dempster], [Dempster, ,], [,, N.], [N., M.], [M., Laird], [Laird, ,], [,, D.], [D., B.], [B., Rubin], [Rubin, ,], [,, “], [“, Maximum], [Maximum, likelihood], [likelihood, incomplete], [incomplete, data], [data, em], [em, algorithm], [algorithm, ,], [,, ”], [”, Journal], [Journal, royal], [royal, statistical], [statistical, society], [society, .]]

>> Trigrams: 
[[[, 5, ]], [5, ], A.], [], A., P.], [A., P., Dempster], [P., Dempster, ,], [Dempster, ,, N.], [,, N., M.], [N., M., Laird], [M., Laird, ,], [Laird, ,, D.], [,, D., B.], [D., B., Rubin], [B., Rubin, ,], [Rubin, ,, “], [,, “, Maximum], [“, Maximum, likelihood], [Maximum, likelihood, incomplete], [likelihood, incomplete, data], [incomplete, data, em], [data, em, algorithm], [em, algorithm, ,], [algorithm, ,, ”], [,, ”, Journal], [”, Journal, royal], [Journal, royal, statistical], [royal, statistical, society], [statistical, society, .]]

>> Noun Phrases are: 
[[5] A. P. Dempster, N. M. Laird, D. B. Rubin, Maximum likelihood, incomplete data, the em, algorithm, Journal, the royal statistical society]

>> Named Entities are: 
[('N. M. Laird', 'PERSON'), ('D. B. Rubin', 'PERSON')]


============================ Sentence 758 =============================

Series B (methodological), pp. 


>> Tokens are: 
[Series, B, (, methodological, ), ,, pp, .] 

>> PoS Tags are: 
[('Series', 'NOUN'), ('B', 'PROPN'), ('(', 'PUNCT'), ('methodological', 'ADJ'), (')', 'PUNCT'), (',', 'PUNCT'), ('pp', 'INTJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Series', 'compound'), ('B', 'ROOT'), ('(', 'punct'), ('methodological', 'appos'), (')', 'punct'), (',', 'punct'), ('pp', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[Series, B], [B, (], [(, methodological], [methodological, )], [), ,], [,, pp], [pp, .]]

>> Trigrams: 
[[Series, B, (], [B, (, methodological], [(, methodological, )], [methodological, ), ,], [), ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[Series B]

>> Named Entities are: 
[]


============================ Sentence 759 =============================

1–38, 1977. 


>> Tokens are: 
[1–38, ,, 1977, .] 

>> PoS Tags are: 
[('1–38', 'NOUN'), (',', 'PUNCT'), ('1977', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1–38', 'ROOT'), (',', 'punct'), ('1977', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[1–38, ,], [,, 1977], [1977, .]]

>> Trigrams: 
[[1–38, ,, 1977], [,, 1977, .]]

>> Noun Phrases are: 
[1–38]

>> Named Entities are: 
[('1977', 'DATE')]


============================ Sentence 760 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 761 =============================

[6] C. Watkins, “Learning form delayed rewards,” Ph. D. thesis, King’s College, University of Cambridge, 1989. 


>> Tokens are: 
[[, 6, ], C., Watkins, ,, “, Learning, form, delayed, rewards, ,, ”, Ph, ., D., thesis, ,, King, College, ,, University, Cambridge, ,, 1989, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('6', 'NUM'), (']', 'PUNCT'), ('C.', 'PROPN'), ('Watkins', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Learning', 'NOUN'), ('form', 'NOUN'), ('delayed', 'VERB'), ('rewards', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('Ph', 'PROPN'), ('.', 'PROPN'), ('D.', 'PROPN'), ('thesis', 'NOUN'), (',', 'PUNCT'), ('King', 'PROPN'), ('College', 'PROPN'), (',', 'PUNCT'), ('University', 'PROPN'), ('Cambridge', 'PROPN'), (',', 'PUNCT'), ('1989', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('6', 'dep'), (']', 'punct'), ('C.', 'compound'), ('Watkins', 'ROOT'), (',', 'punct'), ('“', 'punct'), ('Learning', 'compound'), ('form', 'nsubj'), ('delayed', 'acl'), ('rewards', 'dobj'), (',', 'punct'), ('”', 'punct'), ('Ph', 'nmod'), ('.', 'compound'), ('D.', 'compound'), ('thesis', 'appos'), (',', 'punct'), ('King', 'poss'), ('College', 'conj'), (',', 'punct'), ('University', 'conj'), ('Cambridge', 'pobj'), (',', 'punct'), ('1989', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[[, 6], [6, ]], [], C.], [C., Watkins], [Watkins, ,], [,, “], [“, Learning], [Learning, form], [form, delayed], [delayed, rewards], [rewards, ,], [,, ”], [”, Ph], [Ph, .], [., D.], [D., thesis], [thesis, ,], [,, King], [King, College], [College, ,], [,, University], [University, Cambridge], [Cambridge, ,], [,, 1989], [1989, .]]

>> Trigrams: 
[[[, 6, ]], [6, ], C.], [], C., Watkins], [C., Watkins, ,], [Watkins, ,, “], [,, “, Learning], [“, Learning, form], [Learning, form, delayed], [form, delayed, rewards], [delayed, rewards, ,], [rewards, ,, ”], [,, ”, Ph], [”, Ph, .], [Ph, ., D.], [., D., thesis], [D., thesis, ,], [thesis, ,, King], [,, King, College], [King, College, ,], [College, ,, University], [,, University, Cambridge], [University, Cambridge, ,], [Cambridge, ,, 1989], [,, 1989, .]]

>> Noun Phrases are: 
[[6] C. Watkins, Learning form, rewards, ” Ph. D. thesis, King’s College, University, Cambridge]

>> Named Entities are: 
[('C. Watkins', 'PERSON'), ('King’s College', 'ORG'), ('University of Cambridge', 'ORG'), ('1989', 'DATE')]


============================ Sentence 762 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 763 =============================

[7] I. Goodfellow, Y. Bengio, A. Courville, and Y. Bengio, Deep learning. 


>> Tokens are: 
[[, 7, ], I., Goodfellow, ,, Y., Bengio, ,, A., Courville, ,, Y., Bengio, ,, Deep, learning, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('7', 'NUM'), (']', 'PUNCT'), ('I.', 'PROPN'), ('Goodfellow', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('Bengio', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('Courville', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('Bengio', 'PROPN'), (',', 'PUNCT'), ('Deep', 'ADJ'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('7', 'dep'), (']', 'punct'), ('I.', 'compound'), ('Goodfellow', 'ROOT'), (',', 'punct'), ('Y.', 'compound'), ('Bengio', 'appos'), (',', 'punct'), ('A.', 'compound'), ('Courville', 'appos'), (',', 'punct'), ('Y.', 'compound'), ('Bengio', 'conj'), (',', 'punct'), ('Deep', 'amod'), ('learning', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[[, 7], [7, ]], [], I.], [I., Goodfellow], [Goodfellow, ,], [,, Y.], [Y., Bengio], [Bengio, ,], [,, A.], [A., Courville], [Courville, ,], [,, Y.], [Y., Bengio], [Bengio, ,], [,, Deep], [Deep, learning], [learning, .]]

>> Trigrams: 
[[[, 7, ]], [7, ], I.], [], I., Goodfellow], [I., Goodfellow, ,], [Goodfellow, ,, Y.], [,, Y., Bengio], [Y., Bengio, ,], [Bengio, ,, A.], [,, A., Courville], [A., Courville, ,], [Courville, ,, Y.], [,, Y., Bengio], [Y., Bengio, ,], [Bengio, ,, Deep], [,, Deep, learning], [Deep, learning, .]]

>> Noun Phrases are: 
[[7] I. Goodfellow, Y. Bengio, A. Courville, Y. Bengio, Deep learning]

>> Named Entities are: 
[('7', 'CARDINAL'), ('Y. Bengio', 'PERSON'), ('A. Courville', 'PERSON'), ('Y. Bengio', 'PERSON'), ('Deep', 'PERSON')]


============================ Sentence 764 =============================

MIT press Cambridge, 2016, vol. 


>> Tokens are: 
[MIT, press, Cambridge, ,, 2016, ,, vol, .] 

>> PoS Tags are: 
[('MIT', 'PROPN'), ('press', 'NOUN'), ('Cambridge', 'PROPN'), (',', 'PUNCT'), ('2016', 'NUM'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('MIT', 'compound'), ('press', 'ROOT'), ('Cambridge', 'dobj'), (',', 'punct'), ('2016', 'appos'), (',', 'punct'), ('vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[MIT, press], [press, Cambridge], [Cambridge, ,], [,, 2016], [2016, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[MIT, press, Cambridge], [press, Cambridge, ,], [Cambridge, ,, 2016], [,, 2016, ,], [2016, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[MIT press, Cambridge]

>> Named Entities are: 
[('MIT', 'ORG'), ('Cambridge', 'GPE'), ('2016', 'DATE')]


============================ Sentence 765 =============================

1. 


>> Tokens are: 
[1, .] 

>> PoS Tags are: 
[('1', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[1, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 766 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 767 =============================

[8] J. Pearl and D. Mackenzie, The Book of Why: The New Science of Cause and Effect. 


>> Tokens are: 
[[, 8, ], J., Pearl, D., Mackenzie, ,, Book, :, New, Science, Cause, Effect, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('8', 'NUM'), (']', 'PUNCT'), ('J.', 'PROPN'), ('Pearl', 'PROPN'), ('D.', 'PROPN'), ('Mackenzie', 'PROPN'), (',', 'PUNCT'), ('Book', 'PROPN'), (':', 'PUNCT'), ('New', 'PROPN'), ('Science', 'PROPN'), ('Cause', 'PROPN'), ('Effect', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('8', 'dep'), (']', 'punct'), ('J.', 'compound'), ('Pearl', 'ROOT'), ('D.', 'compound'), ('Mackenzie', 'conj'), (',', 'punct'), ('Book', 'appos'), (':', 'punct'), ('New', 'compound'), ('Science', 'appos'), ('Cause', 'pobj'), ('Effect', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[[, 8], [8, ]], [], J.], [J., Pearl], [Pearl, D.], [D., Mackenzie], [Mackenzie, ,], [,, Book], [Book, :], [:, New], [New, Science], [Science, Cause], [Cause, Effect], [Effect, .]]

>> Trigrams: 
[[[, 8, ]], [8, ], J.], [], J., Pearl], [J., Pearl, D.], [Pearl, D., Mackenzie], [D., Mackenzie, ,], [Mackenzie, ,, Book], [,, Book, :], [Book, :, New], [:, New, Science], [New, Science, Cause], [Science, Cause, Effect], [Cause, Effect, .]]

>> Noun Phrases are: 
[[8] J. Pearl, D. Mackenzie, The Book, The New Science, Cause, Effect]

>> Named Entities are: 
[('8', 'CARDINAL'), ('J. Pearl', 'PERSON'), ('D. Mackenzie', 'LOC'), ('The Book of Why: The New Science of Cause and Effect', 'WORK_OF_ART')]


============================ Sentence 768 =============================

Basic Books, 2018. 


>> Tokens are: 
[Basic, Books, ,, 2018, .] 

>> PoS Tags are: 
[('Basic', 'PROPN'), ('Books', 'PROPN'), (',', 'PUNCT'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Basic', 'compound'), ('Books', 'ROOT'), (',', 'punct'), ('2018', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Basic, Books], [Books, ,], [,, 2018], [2018, .]]

>> Trigrams: 
[[Basic, Books, ,], [Books, ,, 2018], [,, 2018, .]]

>> Noun Phrases are: 
[Basic Books]

>> Named Entities are: 
[('2018', 'DATE')]


============================ Sentence 769 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 770 =============================

[9] M. A. Alsheikh, S. Lin, D. Niyato, and H.-P. Tan, “Machine learning in wireless sensor networks: 


>> Tokens are: 
[[, 9, ], M., A., Alsheikh, ,, S., Lin, ,, D., Niyato, ,, H.-P., Tan, ,, “, Machine, learning, wireless, sensor, networks, :] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('9', 'NUM'), (']', 'PUNCT'), ('M.', 'PROPN'), ('A.', 'NOUN'), ('Alsheikh', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('Lin', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('Niyato', 'PROPN'), (',', 'PUNCT'), ('H.-P.', 'NOUN'), ('Tan', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Machine', 'NOUN'), ('learning', 'NOUN'), ('wireless', 'ADJ'), ('sensor', 'NOUN'), ('networks', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('9', 'nummod'), (']', 'punct'), ('M.', 'compound'), ('A.', 'compound'), ('Alsheikh', 'ROOT'), (',', 'punct'), ('S.', 'compound'), ('Lin', 'appos'), (',', 'punct'), ('D.', 'compound'), ('Niyato', 'appos'), (',', 'punct'), ('H.-P.', 'compound'), ('Tan', 'conj'), (',', 'punct'), ('“', 'punct'), ('Machine', 'compound'), ('learning', 'acl'), ('wireless', 'amod'), ('sensor', 'compound'), ('networks', 'pobj'), (':', 'punct')]

>> Bigrams: 
[[[, 9], [9, ]], [], M.], [M., A.], [A., Alsheikh], [Alsheikh, ,], [,, S.], [S., Lin], [Lin, ,], [,, D.], [D., Niyato], [Niyato, ,], [,, H.-P.], [H.-P., Tan], [Tan, ,], [,, “], [“, Machine], [Machine, learning], [learning, wireless], [wireless, sensor], [sensor, networks], [networks, :]]

>> Trigrams: 
[[[, 9, ]], [9, ], M.], [], M., A.], [M., A., Alsheikh], [A., Alsheikh, ,], [Alsheikh, ,, S.], [,, S., Lin], [S., Lin, ,], [Lin, ,, D.], [,, D., Niyato], [D., Niyato, ,], [Niyato, ,, H.-P.], [,, H.-P., Tan], [H.-P., Tan, ,], [Tan, ,, “], [,, “, Machine], [“, Machine, learning], [Machine, learning, wireless], [learning, wireless, sensor], [wireless, sensor, networks], [sensor, networks, :]]

>> Noun Phrases are: 
[[9] M. A. Alsheikh, S. Lin, D. Niyato, H.-P. Tan, wireless sensor networks]

>> Named Entities are: 
[('9', 'CARDINAL'), ('S. Lin', 'PERSON'), ('D. Niyato', 'PERSON'), ('Tan', 'PERSON')]


============================ Sentence 771 =============================

Algorithms, strategies, and applications,” IEEE Communications Surveys & Tutorials, vol. 


>> Tokens are: 
[Algorithms, ,, strategies, ,, applications, ,, ”, IEEE, Communications, Surveys, &, Tutorials, ,, vol, .] 

>> PoS Tags are: 
[('Algorithms', 'PROPN'), (',', 'PUNCT'), ('strategies', 'NOUN'), (',', 'PUNCT'), ('applications', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('Communications', 'PROPN'), ('Surveys', 'PROPN'), ('&', 'CCONJ'), ('Tutorials', 'PROPN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Algorithms', 'ROOT'), (',', 'punct'), ('strategies', 'appos'), (',', 'punct'), ('applications', 'conj'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('Communications', 'compound'), ('Surveys', 'conj'), ('&', 'cc'), ('Tutorials', 'conj'), (',', 'punct'), ('vol', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Algorithms, ,], [,, strategies], [strategies, ,], [,, applications], [applications, ,], [,, ”], [”, IEEE], [IEEE, Communications], [Communications, Surveys], [Surveys, &], [&, Tutorials], [Tutorials, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[Algorithms, ,, strategies], [,, strategies, ,], [strategies, ,, applications], [,, applications, ,], [applications, ,, ”], [,, ”, IEEE], [”, IEEE, Communications], [IEEE, Communications, Surveys], [Communications, Surveys, &], [Surveys, &, Tutorials], [&, Tutorials, ,], [Tutorials, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[Algorithms, strategies, applications, IEEE Communications Surveys, Tutorials, vol]

>> Named Entities are: 
[('Algorithms', 'PERSON'), ('IEEE Communications Surveys & Tutorials', 'ORG')]


============================ Sentence 772 =============================

16, no. 4, pp. 


>> Tokens are: 
[16, ,, ., 4, ,, pp, .] 

>> PoS Tags are: 
[('16', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('4', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('16', 'ROOT'), (',', 'punct'), ('.', 'punct'), ('4', 'nummod'), (',', 'punct'), ('pp', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[16, ,], [,, .], [., 4], [4, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[16, ,, .], [,, ., 4], [., 4, ,], [4, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('16', 'CARDINAL'), ('4', 'CARDINAL')]


============================ Sentence 773 =============================

1996–2018, 2014. 


>> Tokens are: 
[1996–2018, ,, 2014, .] 

>> PoS Tags are: 
[('1996–2018', 'NUM'), (',', 'PUNCT'), ('2014', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1996–2018', 'ROOT'), (',', 'punct'), ('2014', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[1996–2018, ,], [,, 2014], [2014, .]]

>> Trigrams: 
[[1996–2018, ,, 2014], [,, 2014, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1996–2018, 2014', 'DATE')]


============================ Sentence 774 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 775 =============================

[10] C. Jiang, H. Zhang, Y. Ren, Z. Han, K.-C. Chen, and L. Hanzo, “Machine learning paradigms for next-generation wireless net- works,” IEEE Wireless Communications, vol. 


>> Tokens are: 
[[, 10, ], C., Jiang, ,, H., Zhang, ,, Y., Ren, ,, Z., Han, ,, K.-C., Chen, ,, L., Hanzo, ,, “, Machine, learning, paradigms, -, generation, wireless, net-, works, ,, ”, IEEE, Wireless, Communications, ,, vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('10', 'NUM'), (']', 'PUNCT'), ('C.', 'PROPN'), ('Jiang', 'PROPN'), (',', 'PUNCT'), ('H.', 'PROPN'), ('Zhang', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('Ren', 'PROPN'), (',', 'PUNCT'), ('Z.', 'PROPN'), ('Han', 'PROPN'), (',', 'PUNCT'), ('K.-C.', 'PROPN'), ('Chen', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('Hanzo', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Machine', 'NOUN'), ('learning', 'NOUN'), ('paradigms', 'VERB'), ('-', 'PUNCT'), ('generation', 'NOUN'), ('wireless', 'NOUN'), ('net-', 'NOUN'), ('works', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('Wireless', 'PROPN'), ('Communications', 'PROPN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('10', 'nummod'), (']', 'punct'), ('C.', 'compound'), ('Jiang', 'nsubj'), (',', 'punct'), ('H.', 'compound'), ('Zhang', 'conj'), (',', 'punct'), ('Y.', 'compound'), ('Ren', 'conj'), (',', 'punct'), ('Z.', 'compound'), ('Han', 'conj'), (',', 'punct'), ('K.-C.', 'compound'), ('Chen', 'appos'), (',', 'punct'), ('L.', 'compound'), ('Hanzo', 'conj'), (',', 'punct'), ('“', 'punct'), ('Machine', 'compound'), ('learning', 'nsubj'), ('paradigms', 'ROOT'), ('-', 'punct'), ('generation', 'compound'), ('wireless', 'amod'), ('net-', 'compound'), ('works', 'pobj'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('Wireless', 'compound'), ('Communications', 'dobj'), (',', 'punct'), ('vol', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 10], [10, ]], [], C.], [C., Jiang], [Jiang, ,], [,, H.], [H., Zhang], [Zhang, ,], [,, Y.], [Y., Ren], [Ren, ,], [,, Z.], [Z., Han], [Han, ,], [,, K.-C.], [K.-C., Chen], [Chen, ,], [,, L.], [L., Hanzo], [Hanzo, ,], [,, “], [“, Machine], [Machine, learning], [learning, paradigms], [paradigms, -], [-, generation], [generation, wireless], [wireless, net-], [net-, works], [works, ,], [,, ”], [”, IEEE], [IEEE, Wireless], [Wireless, Communications], [Communications, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[[, 10, ]], [10, ], C.], [], C., Jiang], [C., Jiang, ,], [Jiang, ,, H.], [,, H., Zhang], [H., Zhang, ,], [Zhang, ,, Y.], [,, Y., Ren], [Y., Ren, ,], [Ren, ,, Z.], [,, Z., Han], [Z., Han, ,], [Han, ,, K.-C.], [,, K.-C., Chen], [K.-C., Chen, ,], [Chen, ,, L.], [,, L., Hanzo], [L., Hanzo, ,], [Hanzo, ,, “], [,, “, Machine], [“, Machine, learning], [Machine, learning, paradigms], [learning, paradigms, -], [paradigms, -, generation], [-, generation, wireless], [generation, wireless, net-], [wireless, net-, works], [net-, works, ,], [works, ,, ”], [,, ”, IEEE], [”, IEEE, Wireless], [IEEE, Wireless, Communications], [Wireless, Communications, ,], [Communications, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[[10] C. Jiang, H. Zhang, Y. Ren, Z. Han, K.-C. Chen, L. Hanzo, Machine learning, next-generation wireless net- works, IEEE Wireless Communications, vol]

>> Named Entities are: 
[('10', 'CARDINAL'), ('C. Jiang', 'PERSON'), ('H. Zhang', 'PERSON'), ('Y. Ren', 'PERSON'), ('Z. Han', 'PERSON'), ('Chen', 'PERSON'), ('L. Hanzo', 'PERSON'), ('IEEE Wireless Communications', 'ORG')]


============================ Sentence 776 =============================

24, no. 2, pp. 


>> Tokens are: 
[24, ,, ., 2, ,, pp, .] 

>> PoS Tags are: 
[('24', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('2', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('24', 'ROOT'), (',', 'punct'), ('.', 'punct'), ('2', 'nummod'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[24, ,], [,, .], [., 2], [2, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[24, ,, .], [,, ., 2], [., 2, ,], [2, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[pp]

>> Named Entities are: 
[('24', 'CARDINAL'), ('2', 'CARDINAL')]


============================ Sentence 777 =============================

98– 105, 2017. 


>> Tokens are: 
[98, –, 105, ,, 2017, .] 

>> PoS Tags are: 
[('98', 'NUM'), ('–', 'SYM'), ('105', 'NUM'), (',', 'PUNCT'), ('2017', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('98', 'ROOT'), ('–', 'punct'), ('105', 'prep'), (',', 'punct'), ('2017', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[98, –], [–, 105], [105, ,], [,, 2017], [2017, .]]

>> Trigrams: 
[[98, –, 105], [–, 105, ,], [105, ,, 2017], [,, 2017, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('98', 'CARDINAL'), ('105', 'CARDINAL'), ('2017', 'DATE')]


============================ Sentence 778 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 779 =============================

[11] Z. Qin, H. Ye, G. Y. Li, and B.-H. F. Juang, “Deep Learning in Physical Layer Communications,” ArXiv e-prints, Jul. 2018. 


>> Tokens are: 
[[, 11, ], Z., Qin, ,, H., Ye, ,, G., Y., Li, ,, B.-H., F., Juang, ,, “, Deep, Learning, Physical, Layer, Communications, ,, ”, ArXiv, e, -, prints, ,, Jul., 2018, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('11', 'NUM'), (']', 'PUNCT'), ('Z.', 'PROPN'), ('Qin', 'PROPN'), (',', 'PUNCT'), ('H.', 'PROPN'), ('Ye', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('Y.', 'PROPN'), ('Li', 'PROPN'), (',', 'PUNCT'), ('B.-H.', 'NOUN'), ('F.', 'PROPN'), ('Juang', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Deep', 'PROPN'), ('Learning', 'PROPN'), ('Physical', 'PROPN'), ('Layer', 'PROPN'), ('Communications', 'PROPN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('ArXiv', 'PROPN'), ('e', 'NOUN'), ('-', 'NOUN'), ('prints', 'NOUN'), (',', 'PUNCT'), ('Jul.', 'PROPN'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('11', 'dep'), (']', 'punct'), ('Z.', 'compound'), ('Qin', 'ROOT'), (',', 'punct'), ('H.', 'compound'), ('Ye', 'appos'), (',', 'punct'), ('G.', 'compound'), ('Y.', 'compound'), ('Li', 'appos'), (',', 'punct'), ('B.-H.', 'compound'), ('F.', 'compound'), ('Juang', 'conj'), (',', 'punct'), ('“', 'punct'), ('Deep', 'compound'), ('Learning', 'appos'), ('Physical', 'compound'), ('Layer', 'compound'), ('Communications', 'pobj'), (',', 'punct'), ('”', 'punct'), ('ArXiv', 'appos'), ('e', 'punct'), ('-', 'punct'), ('prints', 'appos'), (',', 'punct'), ('Jul.', 'appos'), ('2018', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[[, 11], [11, ]], [], Z.], [Z., Qin], [Qin, ,], [,, H.], [H., Ye], [Ye, ,], [,, G.], [G., Y.], [Y., Li], [Li, ,], [,, B.-H.], [B.-H., F.], [F., Juang], [Juang, ,], [,, “], [“, Deep], [Deep, Learning], [Learning, Physical], [Physical, Layer], [Layer, Communications], [Communications, ,], [,, ”], [”, ArXiv], [ArXiv, e], [e, -], [-, prints], [prints, ,], [,, Jul.], [Jul., 2018], [2018, .]]

>> Trigrams: 
[[[, 11, ]], [11, ], Z.], [], Z., Qin], [Z., Qin, ,], [Qin, ,, H.], [,, H., Ye], [H., Ye, ,], [Ye, ,, G.], [,, G., Y.], [G., Y., Li], [Y., Li, ,], [Li, ,, B.-H.], [,, B.-H., F.], [B.-H., F., Juang], [F., Juang, ,], [Juang, ,, “], [,, “, Deep], [“, Deep, Learning], [Deep, Learning, Physical], [Learning, Physical, Layer], [Physical, Layer, Communications], [Layer, Communications, ,], [Communications, ,, ”], [,, ”, ArXiv], [”, ArXiv, e], [ArXiv, e, -], [e, -, prints], [-, prints, ,], [prints, ,, Jul.], [,, Jul., 2018], [Jul., 2018, .]]

>> Noun Phrases are: 
[[11] Z. Qin, H. Ye, G. Y. Li, B.-H. F. Juang, Deep Learning, Physical Layer Communications, ArXiv, prints, Jul.]

>> Named Entities are: 
[('11', 'CARDINAL'), ('Z. Qin', 'PERSON'), ('H. Ye', 'PERSON'), ('G. Y. Li', 'PERSON'), ('F. Juang', 'PERSON'), ('Deep Learning', 'WORK_OF_ART'), ('ArXiv', 'WORK_OF_ART'), ('Jul. 2018', 'DATE')]


============================ Sentence 780 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 781 =============================

[12] S. Lin and D. J. Costello, Error control coding. 


>> Tokens are: 
[[, 12, ], S., Lin, D., J., Costello, ,, Error, control, coding, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('12', 'NUM'), (']', 'PUNCT'), ('S.', 'PROPN'), ('Lin', 'PROPN'), ('D.', 'PROPN'), ('J.', 'PROPN'), ('Costello', 'PROPN'), (',', 'PUNCT'), ('Error', 'PROPN'), ('control', 'NOUN'), ('coding', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('12', 'nummod'), (']', 'punct'), ('S.', 'compound'), ('Lin', 'nsubj'), ('D.', 'compound'), ('J.', 'compound'), ('Costello', 'conj'), (',', 'punct'), ('Error', 'compound'), ('control', 'compound'), ('coding', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[[, 12], [12, ]], [], S.], [S., Lin], [Lin, D.], [D., J.], [J., Costello], [Costello, ,], [,, Error], [Error, control], [control, coding], [coding, .]]

>> Trigrams: 
[[[, 12, ]], [12, ], S.], [], S., Lin], [S., Lin, D.], [Lin, D., J.], [D., J., Costello], [J., Costello, ,], [Costello, ,, Error], [,, Error, control], [Error, control, coding], [control, coding, .]]

>> Noun Phrases are: 
[[12] S. Lin, D. J. Costello]

>> Named Entities are: 
[('12', 'CARDINAL'), ('S. Lin', 'PERSON'), ('D. J. Costello', 'PERSON')]


============================ Sentence 782 =============================

Pearson Education India, 2001. 


>> Tokens are: 
[Pearson, Education, India, ,, 2001, .] 

>> PoS Tags are: 
[('Pearson', 'PROPN'), ('Education', 'PROPN'), ('India', 'PROPN'), (',', 'PUNCT'), ('2001', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Pearson', 'compound'), ('Education', 'compound'), ('India', 'ROOT'), (',', 'punct'), ('2001', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Pearson, Education], [Education, India], [India, ,], [,, 2001], [2001, .]]

>> Trigrams: 
[[Pearson, Education, India], [Education, India, ,], [India, ,, 2001], [,, 2001, .]]

>> Noun Phrases are: 
[Pearson Education India]

>> Named Entities are: 
[('Pearson Education India', 'ORG'), ('2001', 'DATE')]


============================ Sentence 783 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 784 =============================

[13] T. Gruber, S. Cammerer, J. Hoydis, and S. ten Brink, “On deep learning-based channel decoding,” in CISS 2017, 2017, pp. 


>> Tokens are: 
[[, 13, ], T., Gruber, ,, S., Cammerer, ,, J., Hoydis, ,, S., Brink, ,, “, deep, learning, -, based, channel, decoding, ,, ”, CISS, 2017, ,, 2017, ,, pp, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('13', 'NUM'), (']', 'PUNCT'), ('T.', 'PROPN'), ('Gruber', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('Cammerer', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('Hoydis', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('Brink', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('channel', 'NOUN'), ('decoding', 'VERB'), (',', 'PUNCT'), ('”', 'PUNCT'), ('CISS', 'PROPN'), ('2017', 'NUM'), (',', 'PUNCT'), ('2017', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('13', 'nummod'), (']', 'punct'), ('T.', 'compound'), ('Gruber', 'ROOT'), (',', 'punct'), ('S.', 'compound'), ('Cammerer', 'appos'), (',', 'punct'), ('J.', 'compound'), ('Hoydis', 'conj'), (',', 'punct'), ('S.', 'compound'), ('Brink', 'conj'), (',', 'punct'), ('“', 'punct'), ('deep', 'amod'), ('learning', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('channel', 'nsubj'), ('decoding', 'pobj'), (',', 'punct'), ('”', 'punct'), ('CISS', 'pobj'), ('2017', 'nummod'), (',', 'punct'), ('2017', 'appos'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 13], [13, ]], [], T.], [T., Gruber], [Gruber, ,], [,, S.], [S., Cammerer], [Cammerer, ,], [,, J.], [J., Hoydis], [Hoydis, ,], [,, S.], [S., Brink], [Brink, ,], [,, “], [“, deep], [deep, learning], [learning, -], [-, based], [based, channel], [channel, decoding], [decoding, ,], [,, ”], [”, CISS], [CISS, 2017], [2017, ,], [,, 2017], [2017, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[[, 13, ]], [13, ], T.], [], T., Gruber], [T., Gruber, ,], [Gruber, ,, S.], [,, S., Cammerer], [S., Cammerer, ,], [Cammerer, ,, J.], [,, J., Hoydis], [J., Hoydis, ,], [Hoydis, ,, S.], [,, S., Brink], [S., Brink, ,], [Brink, ,, “], [,, “, deep], [“, deep, learning], [deep, learning, -], [learning, -, based], [-, based, channel], [based, channel, decoding], [channel, decoding, ,], [decoding, ,, ”], [,, ”, CISS], [”, CISS, 2017], [CISS, 2017, ,], [2017, ,, 2017], [,, 2017, ,], [2017, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[[13] T. Gruber, S. Cammerer, J. Hoydis, S. ten Brink, deep learning-based channel, CISS, pp]

>> Named Entities are: 
[('13', 'CARDINAL'), ('S. Cammerer', 'PERSON'), ('J. Hoydis', 'PERSON'), ('S. ten Brink', 'PERSON'), ('2017, 2017', 'DATE')]


============================ Sentence 785 =============================

1–6. 


>> Tokens are: 
[1–6, .] 

>> PoS Tags are: 
[('1–6', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1–6', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[1–6, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1–6', 'CARDINAL')]


============================ Sentence 786 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 787 =============================

[14] S. Shalev-Shwartz and S. Ben-David, Understanding machine learning: From theory to algorithms. 


>> Tokens are: 
[[, 14, ], S., Shalev, -, Shwartz, S., Ben, -, David, ,, Understanding, machine, learning, :, theory, algorithms, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('14', 'NUM'), (']', 'PUNCT'), ('S.', 'PROPN'), ('Shalev', 'PROPN'), ('-', 'PUNCT'), ('Shwartz', 'PROPN'), ('S.', 'PROPN'), ('Ben', 'PROPN'), ('-', 'PROPN'), ('David', 'PROPN'), (',', 'PUNCT'), ('Understanding', 'VERB'), ('machine', 'NOUN'), ('learning', 'NOUN'), (':', 'PUNCT'), ('theory', 'NOUN'), ('algorithms', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('14', 'nummod'), (']', 'punct'), ('S.', 'compound'), ('Shalev', 'compound'), ('-', 'punct'), ('Shwartz', 'nmod'), ('S.', 'compound'), ('Ben', 'conj'), ('-', 'punct'), ('David', 'appos'), (',', 'punct'), ('Understanding', 'acl'), ('machine', 'compound'), ('learning', 'ROOT'), (':', 'punct'), ('theory', 'pobj'), ('algorithms', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[[, 14], [14, ]], [], S.], [S., Shalev], [Shalev, -], [-, Shwartz], [Shwartz, S.], [S., Ben], [Ben, -], [-, David], [David, ,], [,, Understanding], [Understanding, machine], [machine, learning], [learning, :], [:, theory], [theory, algorithms], [algorithms, .]]

>> Trigrams: 
[[[, 14, ]], [14, ], S.], [], S., Shalev], [S., Shalev, -], [Shalev, -, Shwartz], [-, Shwartz, S.], [Shwartz, S., Ben], [S., Ben, -], [Ben, -, David], [-, David, ,], [David, ,, Understanding], [,, Understanding, machine], [Understanding, machine, learning], [machine, learning, :], [learning, :, theory], [:, theory, algorithms], [theory, algorithms, .]]

>> Noun Phrases are: 
[-David, theory, algorithms]

>> Named Entities are: 
[('14', 'CARDINAL'), ('S. Shalev-Shwartz', 'PERSON'), ('S. Ben-David', 'PERSON')]


============================ Sentence 788 =============================

Cambridge university press, 2014. 


>> Tokens are: 
[Cambridge, university, press, ,, 2014, .] 

>> PoS Tags are: 
[('Cambridge', 'NOUN'), ('university', 'NOUN'), ('press', 'NOUN'), (',', 'PUNCT'), ('2014', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Cambridge', 'amod'), ('university', 'compound'), ('press', 'ROOT'), (',', 'punct'), ('2014', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[Cambridge, university], [university, press], [press, ,], [,, 2014], [2014, .]]

>> Trigrams: 
[[Cambridge, university, press], [university, press, ,], [press, ,, 2014], [,, 2014, .]]

>> Noun Phrases are: 
[Cambridge university press]

>> Named Entities are: 
[('Cambridge', 'GPE'), ('2014', 'DATE')]


============================ Sentence 789 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 790 =============================

[15] D. Arpit, S. Jastrzȩbski, N. Ballas, D. Krueger, E. Bengio, M. S. Kanwal, T. Maharaj, A. Fischer, A. Courville, Y. Bengio, and S. Lacoste-Julien, “A Closer Look at Memorization in Deep Networks,” ArXiv e-prints, Jun. 2017. 


>> Tokens are: 
[[, 15, ], D., Arpit, ,, S., Jastrzȩbski, ,, N., Ballas, ,, D., Krueger, ,, E., Bengio, ,, M., S., Kanwal, ,, T., Maharaj, ,, A., Fischer, ,, A., Courville, ,, Y., Bengio, ,, S., Lacoste, -, Julien, ,, “, Closer, Look, Memorization, Deep, Networks, ,, ”, ArXiv, e, -, prints, ,, Jun., 2017, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('15', 'NUM'), (']', 'PUNCT'), ('D.', 'PROPN'), ('Arpit', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('Jastrzȩbski', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), ('Ballas', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('Krueger', 'PROPN'), (',', 'PUNCT'), ('E.', 'PROPN'), ('Bengio', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('S.', 'PROPN'), ('Kanwal', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), ('Maharaj', 'PROPN'), (',', 'PUNCT'), ('A.', 'NOUN'), ('Fischer', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('Courville', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('Bengio', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('Lacoste', 'PROPN'), ('-', 'PUNCT'), ('Julien', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Closer', 'ADJ'), ('Look', 'NOUN'), ('Memorization', 'PROPN'), ('Deep', 'PROPN'), ('Networks', 'PROPN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('ArXiv', 'PROPN'), ('e', 'NOUN'), ('-', 'NOUN'), ('prints', 'NOUN'), (',', 'PUNCT'), ('Jun.', 'PROPN'), ('2017', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('15', 'dep'), (']', 'punct'), ('D.', 'compound'), ('Arpit', 'ROOT'), (',', 'punct'), ('S.', 'compound'), ('Jastrzȩbski', 'appos'), (',', 'punct'), ('N.', 'compound'), ('Ballas', 'conj'), (',', 'punct'), ('D.', 'compound'), ('Krueger', 'appos'), (',', 'punct'), ('E.', 'compound'), ('Bengio', 'conj'), (',', 'punct'), ('M.', 'compound'), ('S.', 'compound'), ('Kanwal', 'conj'), (',', 'punct'), ('T.', 'compound'), ('Maharaj', 'conj'), (',', 'punct'), ('A.', 'compound'), ('Fischer', 'appos'), (',', 'punct'), ('A.', 'compound'), ('Courville', 'conj'), (',', 'punct'), ('Y.', 'compound'), ('Bengio', 'conj'), (',', 'punct'), ('S.', 'compound'), ('Lacoste', 'compound'), ('-', 'punct'), ('Julien', 'conj'), (',', 'punct'), ('“', 'punct'), ('Closer', 'amod'), ('Look', 'appos'), ('Memorization', 'pobj'), ('Deep', 'compound'), ('Networks', 'pobj'), (',', 'punct'), ('”', 'punct'), ('ArXiv', 'appos'), ('e', 'punct'), ('-', 'punct'), ('prints', 'appos'), (',', 'punct'), ('Jun.', 'appos'), ('2017', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[[, 15], [15, ]], [], D.], [D., Arpit], [Arpit, ,], [,, S.], [S., Jastrzȩbski], [Jastrzȩbski, ,], [,, N.], [N., Ballas], [Ballas, ,], [,, D.], [D., Krueger], [Krueger, ,], [,, E.], [E., Bengio], [Bengio, ,], [,, M.], [M., S.], [S., Kanwal], [Kanwal, ,], [,, T.], [T., Maharaj], [Maharaj, ,], [,, A.], [A., Fischer], [Fischer, ,], [,, A.], [A., Courville], [Courville, ,], [,, Y.], [Y., Bengio], [Bengio, ,], [,, S.], [S., Lacoste], [Lacoste, -], [-, Julien], [Julien, ,], [,, “], [“, Closer], [Closer, Look], [Look, Memorization], [Memorization, Deep], [Deep, Networks], [Networks, ,], [,, ”], [”, ArXiv], [ArXiv, e], [e, -], [-, prints], [prints, ,], [,, Jun.], [Jun., 2017], [2017, .]]

>> Trigrams: 
[[[, 15, ]], [15, ], D.], [], D., Arpit], [D., Arpit, ,], [Arpit, ,, S.], [,, S., Jastrzȩbski], [S., Jastrzȩbski, ,], [Jastrzȩbski, ,, N.], [,, N., Ballas], [N., Ballas, ,], [Ballas, ,, D.], [,, D., Krueger], [D., Krueger, ,], [Krueger, ,, E.], [,, E., Bengio], [E., Bengio, ,], [Bengio, ,, M.], [,, M., S.], [M., S., Kanwal], [S., Kanwal, ,], [Kanwal, ,, T.], [,, T., Maharaj], [T., Maharaj, ,], [Maharaj, ,, A.], [,, A., Fischer], [A., Fischer, ,], [Fischer, ,, A.], [,, A., Courville], [A., Courville, ,], [Courville, ,, Y.], [,, Y., Bengio], [Y., Bengio, ,], [Bengio, ,, S.], [,, S., Lacoste], [S., Lacoste, -], [Lacoste, -, Julien], [-, Julien, ,], [Julien, ,, “], [,, “, Closer], [“, Closer, Look], [Closer, Look, Memorization], [Look, Memorization, Deep], [Memorization, Deep, Networks], [Deep, Networks, ,], [Networks, ,, ”], [,, ”, ArXiv], [”, ArXiv, e], [ArXiv, e, -], [e, -, prints], [-, prints, ,], [prints, ,, Jun.], [,, Jun., 2017], [Jun., 2017, .]]

>> Noun Phrases are: 
[[15] D. Arpit, S. Jastrzȩbski, N. Ballas, D. Krueger, E. Bengio, M. S. Kanwal, T. Maharaj, A. Fischer, A. Courville, Y. Bengio, S. Lacoste-Julien, “A Closer Look, Memorization, Deep Networks, ArXiv, prints, Jun.]

>> Named Entities are: 
[('15', 'CARDINAL'), ('S. Jastrzȩbski', 'PERSON'), ('N. Ballas', 'PERSON'), ('D. Krueger', 'PERSON'), ('E. Bengio', 'PERSON'), ('M. S. Kanwal', 'PERSON'), ('T. Maharaj', 'PERSON'), ('A. Fischer', 'PERSON'), ('A. Courville', 'PERSON'), ('Y. Bengio', 'PERSON'), ('S. Lacoste-Julien', 'PERSON'), ('A Closer Look at Memorization in Deep Networks', 'WORK_OF_ART'), ('ArXiv', 'WORK_OF_ART'), ('Jun. 2017', 'DATE')]


============================ Sentence 791 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 792 =============================

[16] T. Hastie, R. Tibshirani, and J. Friedman, “Unsupervised learn- ing,” in The elements of statistical learning. 


>> Tokens are: 
[[, 16, ], T., Hastie, ,, R., Tibshirani, ,, J., Friedman, ,, “, Unsupervised, learn-, ing, ,, ”, elements, statistical, learning, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('16', 'NUM'), (']', 'PUNCT'), ('T.', 'PROPN'), ('Hastie', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('Tibshirani', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('Friedman', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Unsupervised', 'ADJ'), ('learn-', 'ADJ'), ('ing', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('elements', 'NOUN'), ('statistical', 'ADJ'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('16', 'nummod'), (']', 'punct'), ('T.', 'compound'), ('Hastie', 'ROOT'), (',', 'punct'), ('R.', 'compound'), ('Tibshirani', 'appos'), (',', 'punct'), ('J.', 'compound'), ('Friedman', 'conj'), (',', 'punct'), ('“', 'punct'), ('Unsupervised', 'amod'), ('learn-', 'amod'), ('ing', 'appos'), (',', 'punct'), ('”', 'punct'), ('elements', 'pobj'), ('statistical', 'amod'), ('learning', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[[, 16], [16, ]], [], T.], [T., Hastie], [Hastie, ,], [,, R.], [R., Tibshirani], [Tibshirani, ,], [,, J.], [J., Friedman], [Friedman, ,], [,, “], [“, Unsupervised], [Unsupervised, learn-], [learn-, ing], [ing, ,], [,, ”], [”, elements], [elements, statistical], [statistical, learning], [learning, .]]

>> Trigrams: 
[[[, 16, ]], [16, ], T.], [], T., Hastie], [T., Hastie, ,], [Hastie, ,, R.], [,, R., Tibshirani], [R., Tibshirani, ,], [Tibshirani, ,, J.], [,, J., Friedman], [J., Friedman, ,], [Friedman, ,, “], [,, “, Unsupervised], [“, Unsupervised, learn-], [Unsupervised, learn-, ing], [learn-, ing, ,], [ing, ,, ”], [,, ”, elements], [”, elements, statistical], [elements, statistical, learning], [statistical, learning, .]]

>> Noun Phrases are: 
[[16] T. Hastie, R. Tibshirani, J. Friedman, Unsupervised learn- ing, The elements, statistical learning]

>> Named Entities are: 
[('16', 'CARDINAL'), ('R. Tibshirani', 'PERSON'), ('J. Friedman', 'PERSON')]


============================ Sentence 793 =============================

Springer, 2009, pp. 


>> Tokens are: 
[Springer, ,, 2009, ,, pp, .] 

>> PoS Tags are: 
[('Springer', 'PROPN'), (',', 'PUNCT'), ('2009', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Springer', 'ROOT'), (',', 'punct'), ('2009', 'appos'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Springer, ,], [,, 2009], [2009, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[Springer, ,, 2009], [,, 2009, ,], [2009, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[Springer, pp]

>> Named Entities are: 
[('2009', 'DATE')]


============================ Sentence 794 =============================

485–585. 


>> Tokens are: 
[485–585, .] 

>> PoS Tags are: 
[('485–585', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('485–585', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[485–585, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('485–585', 'CARDINAL')]


============================ Sentence 795 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 796 =============================

[17] R. S. Sutton, A. G. Barto et al. 


>> Tokens are: 
[[, 17, ], R., S., Sutton, ,, A., G., Barto, et, al, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('17', 'NUM'), (']', 'PUNCT'), ('R.', 'PROPN'), ('S.', 'PROPN'), ('Sutton', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('G.', 'PROPN'), ('Barto', 'PROPN'), ('et', 'PROPN'), ('al', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('17', 'dep'), (']', 'punct'), ('R.', 'compound'), ('S.', 'compound'), ('Sutton', 'ROOT'), (',', 'punct'), ('A.', 'compound'), ('G.', 'compound'), ('Barto', 'appos'), ('et', 'compound'), ('al', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 17], [17, ]], [], R.], [R., S.], [S., Sutton], [Sutton, ,], [,, A.], [A., G.], [G., Barto], [Barto, et], [et, al], [al, .]]

>> Trigrams: 
[[[, 17, ]], [17, ], R.], [], R., S.], [R., S., Sutton], [S., Sutton, ,], [Sutton, ,, A.], [,, A., G.], [A., G., Barto], [G., Barto, et], [Barto, et, al], [et, al, .]]

>> Noun Phrases are: 
[[17] R. S. Sutton, A. G. Barto, et al]

>> Named Entities are: 
[('17', 'CARDINAL'), ('S. Sutton', 'PERSON'), ('A. G. Barto', 'PERSON')]


============================ Sentence 797 =============================

, Reinforcement learning: An introduction. 


>> Tokens are: 
[,, Reinforcement, learning, :, introduction, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('Reinforcement', 'PROPN'), ('learning', 'NOUN'), (':', 'PUNCT'), ('introduction', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('Reinforcement', 'compound'), ('learning', 'ROOT'), (':', 'punct'), ('introduction', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[,, Reinforcement], [Reinforcement, learning], [learning, :], [:, introduction], [introduction, .]]

>> Trigrams: 
[[,, Reinforcement, learning], [Reinforcement, learning, :], [learning, :, introduction], [:, introduction, .]]

>> Noun Phrases are: 
[, Reinforcement learning, An introduction]

>> Named Entities are: 
[]


============================ Sentence 798 =============================

MIT press, 2018. 


>> Tokens are: 
[MIT, press, ,, 2018, .] 

>> PoS Tags are: 
[('MIT', 'PROPN'), ('press', 'NOUN'), (',', 'PUNCT'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('MIT', 'compound'), ('press', 'ROOT'), (',', 'punct'), ('2018', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[MIT, press], [press, ,], [,, 2018], [2018, .]]

>> Trigrams: 
[[MIT, press, ,], [press, ,, 2018], [,, 2018, .]]

>> Noun Phrases are: 
[MIT press]

>> Named Entities are: 
[('MIT', 'ORG'), ('2018', 'DATE')]


============================ Sentence 799 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 800 =============================

[18] D. Silver, A. Huang, C. J. Maddison, A. Guez, L. Sifre, G. Van Den Driessche, J. Schrittwieser, I. Antonoglou, V. Panneershel- vam, M. Lanctot et al., “Mastering the game of go with deep neural networks and tree search,” Nature, vol. 


>> Tokens are: 
[[, 18, ], D., Silver, ,, A., Huang, ,, C., J., Maddison, ,, A., Guez, ,, L., Sifre, ,, G., Van, Den, Driessche, ,, J., Schrittwieser, ,, I., Antonoglou, ,, V., Panneershel-, vam, ,, M., Lanctot, et, al, ., ,, “, Mastering, game, deep, neural, networks, tree, search, ,, ”, Nature, ,, vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('18', 'NUM'), (']', 'PUNCT'), ('D.', 'PROPN'), ('Silver', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('Huang', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), ('J.', 'PROPN'), ('Maddison', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('Guez', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('Sifre', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('Van', 'PROPN'), ('Den', 'PROPN'), ('Driessche', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('Schrittwieser', 'PROPN'), (',', 'PUNCT'), ('I.', 'PROPN'), ('Antonoglou', 'PROPN'), (',', 'PUNCT'), ('V.', 'PROPN'), ('Panneershel-', 'PROPN'), ('vam', 'VERB'), (',', 'PUNCT'), ('M.', 'PROPN'), ('Lanctot', 'PROPN'), ('et', 'PROPN'), ('al', 'PROPN'), ('.', 'PUNCT'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Mastering', 'VERB'), ('game', 'NOUN'), ('deep', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('tree', 'NOUN'), ('search', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('Nature', 'NOUN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('18', 'nummod'), (']', 'punct'), ('D.', 'compound'), ('Silver', 'nsubj'), (',', 'punct'), ('A.', 'compound'), ('Huang', 'conj'), (',', 'punct'), ('C.', 'compound'), ('J.', 'compound'), ('Maddison', 'conj'), (',', 'punct'), ('A.', 'compound'), ('Guez', 'appos'), (',', 'punct'), ('L.', 'compound'), ('Sifre', 'conj'), (',', 'punct'), ('G.', 'compound'), ('Van', 'compound'), ('Den', 'compound'), ('Driessche', 'conj'), (',', 'punct'), ('J.', 'compound'), ('Schrittwieser', 'conj'), (',', 'punct'), ('I.', 'compound'), ('Antonoglou', 'conj'), (',', 'punct'), ('V.', 'compound'), ('Panneershel-', 'conj'), ('vam', 'ROOT'), (',', 'punct'), ('M.', 'compound'), ('Lanctot', 'compound'), ('et', 'compound'), ('al', 'npadvmod'), ('.', 'punct'), (',', 'punct'), ('“', 'punct'), ('Mastering', 'xcomp'), ('game', 'dobj'), ('deep', 'amod'), ('neural', 'amod'), ('networks', 'pobj'), ('tree', 'compound'), ('search', 'conj'), (',', 'punct'), ('”', 'punct'), ('Nature', 'conj'), (',', 'punct'), ('vol', 'intj'), ('.', 'punct')]

>> Bigrams: 
[[[, 18], [18, ]], [], D.], [D., Silver], [Silver, ,], [,, A.], [A., Huang], [Huang, ,], [,, C.], [C., J.], [J., Maddison], [Maddison, ,], [,, A.], [A., Guez], [Guez, ,], [,, L.], [L., Sifre], [Sifre, ,], [,, G.], [G., Van], [Van, Den], [Den, Driessche], [Driessche, ,], [,, J.], [J., Schrittwieser], [Schrittwieser, ,], [,, I.], [I., Antonoglou], [Antonoglou, ,], [,, V.], [V., Panneershel-], [Panneershel-, vam], [vam, ,], [,, M.], [M., Lanctot], [Lanctot, et], [et, al], [al, .], [., ,], [,, “], [“, Mastering], [Mastering, game], [game, deep], [deep, neural], [neural, networks], [networks, tree], [tree, search], [search, ,], [,, ”], [”, Nature], [Nature, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[[, 18, ]], [18, ], D.], [], D., Silver], [D., Silver, ,], [Silver, ,, A.], [,, A., Huang], [A., Huang, ,], [Huang, ,, C.], [,, C., J.], [C., J., Maddison], [J., Maddison, ,], [Maddison, ,, A.], [,, A., Guez], [A., Guez, ,], [Guez, ,, L.], [,, L., Sifre], [L., Sifre, ,], [Sifre, ,, G.], [,, G., Van], [G., Van, Den], [Van, Den, Driessche], [Den, Driessche, ,], [Driessche, ,, J.], [,, J., Schrittwieser], [J., Schrittwieser, ,], [Schrittwieser, ,, I.], [,, I., Antonoglou], [I., Antonoglou, ,], [Antonoglou, ,, V.], [,, V., Panneershel-], [V., Panneershel-, vam], [Panneershel-, vam, ,], [vam, ,, M.], [,, M., Lanctot], [M., Lanctot, et], [Lanctot, et, al], [et, al, .], [al, ., ,], [., ,, “], [,, “, Mastering], [“, Mastering, game], [Mastering, game, deep], [game, deep, neural], [deep, neural, networks], [neural, networks, tree], [networks, tree, search], [tree, search, ,], [search, ,, ”], [,, ”, Nature], [”, Nature, ,], [Nature, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[18] D. Silver, A. Huang, C. J. Maddison, A. Guez, L. Sifre, G. Van Den Driessche, J. Schrittwieser, I. Antonoglou, V. Panneershel-, the game, deep neural networks, tree search]

>> Named Entities are: 
[('18', 'CARDINAL'), ('A. Huang', 'PERSON'), ('C. J. Maddison', 'PERSON'), ('A. Guez', 'GPE'), ('L. Sifre', 'PERSON'), ('G. Van Den Driessche', 'PERSON'), ('J. Schrittwieser', 'PERSON'), ('I. Antonoglou', 'PERSON'), ('M. Lanctot', 'ORG')]


============================ Sentence 801 =============================

529, no. 7587, p. 484, 2016. 


>> Tokens are: 
[529, ,, ., 7587, ,, p., 484, ,, 2016, .] 

>> PoS Tags are: 
[('529', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('7587', 'NUM'), (',', 'PUNCT'), ('p.', 'NOUN'), ('484', 'NUM'), (',', 'PUNCT'), ('2016', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('529', 'ROOT'), (',', 'punct'), ('.', 'punct'), ('7587', 'npadvmod'), (',', 'punct'), ('p.', 'npadvmod'), ('484', 'nummod'), (',', 'punct'), ('2016', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[529, ,], [,, .], [., 7587], [7587, ,], [,, p.], [p., 484], [484, ,], [,, 2016], [2016, .]]

>> Trigrams: 
[[529, ,, .], [,, ., 7587], [., 7587, ,], [7587, ,, p.], [,, p., 484], [p., 484, ,], [484, ,, 2016], [,, 2016, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('529', 'CARDINAL'), ('484', 'CARDINAL'), ('2016', 'DATE')]


============================ Sentence 802 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 803 =============================

[19] O. Simeone, “A brief introduction to machine learning for en- gineers,” Foundations and Trends in Signal Processing, vol. 


>> Tokens are: 
[[, 19, ], O., Simeone, ,, “, brief, introduction, machine, learning, en-, gineers, ,, ”, Foundations, Trends, Signal, Processing, ,, vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('19', 'NUM'), (']', 'PUNCT'), ('O.', 'PROPN'), ('Simeone', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('brief', 'ADJ'), ('introduction', 'NOUN'), ('machine', 'NOUN'), ('learning', 'VERB'), ('en-', 'NOUN'), ('gineers', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('Foundations', 'PROPN'), ('Trends', 'PROPN'), ('Signal', 'PROPN'), ('Processing', 'PROPN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('19', 'nummod'), (']', 'punct'), ('O.', 'compound'), ('Simeone', 'ROOT'), (',', 'punct'), ('“', 'punct'), ('brief', 'amod'), ('introduction', 'appos'), ('machine', 'pobj'), ('learning', 'pobj'), ('en-', 'compound'), ('gineers', 'pobj'), (',', 'punct'), ('”', 'punct'), ('Foundations', 'appos'), ('Trends', 'conj'), ('Signal', 'compound'), ('Processing', 'pobj'), (',', 'punct'), ('vol', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[[, 19], [19, ]], [], O.], [O., Simeone], [Simeone, ,], [,, “], [“, brief], [brief, introduction], [introduction, machine], [machine, learning], [learning, en-], [en-, gineers], [gineers, ,], [,, ”], [”, Foundations], [Foundations, Trends], [Trends, Signal], [Signal, Processing], [Processing, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[[, 19, ]], [19, ], O.], [], O., Simeone], [O., Simeone, ,], [Simeone, ,, “], [,, “, brief], [“, brief, introduction], [brief, introduction, machine], [introduction, machine, learning], [machine, learning, en-], [learning, en-, gineers], [en-, gineers, ,], [gineers, ,, ”], [,, ”, Foundations], [”, Foundations, Trends], [Foundations, Trends, Signal], [Trends, Signal, Processing], [Signal, Processing, ,], [Processing, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[[19] O. Simeone, A brief introduction, machine, en- gineers, Foundations, Trends, Signal Processing, vol]

>> Named Entities are: 
[('O. Simeone', 'PERSON')]


============================ Sentence 804 =============================

12, no. 


>> Tokens are: 
[12, ,, .] 

>> PoS Tags are: 
[('12', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN')] 

>> Dependency Tags are: 
[('12', 'ROOT'), (',', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[12, ,], [,, .]]

>> Trigrams: 
[[12, ,, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('12', 'CARDINAL')]


============================ Sentence 805 =============================

3-4, pp. 


>> Tokens are: 
[3, -, 4, ,, pp, .] 

>> PoS Tags are: 
[('3', 'NUM'), ('-', 'SYM'), ('4', 'NUM'), (',', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('3', 'ROOT'), ('-', 'punct'), ('4', 'prep'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[3, -], [-, 4], [4, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[3, -, 4], [-, 4, ,], [4, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('3-4', 'DATE')]


============================ Sentence 806 =============================

200–431, 2018. 


>> Tokens are: 
[200–431, ,, 2018, .] 

>> PoS Tags are: 
[('200–431', 'NUM'), (',', 'PUNCT'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('200–431', 'ROOT'), (',', 'punct'), ('2018', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[200–431, ,], [,, 2018], [2018, .]]

>> Trigrams: 
[[200–431, ,, 2018], [,, 2018, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('200–431, 2018', 'DATE')]


============================ Sentence 807 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 808 =============================

[20] E. Brynjolfsson and T. Mitchell, “What can machine learning do? 


>> Tokens are: 
[[, 20, ], E., Brynjolfsson, T., Mitchell, ,, “, machine, learning, ?] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('20', 'NUM'), (']', 'PUNCT'), ('E.', 'PROPN'), ('Brynjolfsson', 'PROPN'), ('T.', 'PROPN'), ('Mitchell', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('machine', 'VERB'), ('learning', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('20', 'dep'), (']', 'punct'), ('E.', 'compound'), ('Brynjolfsson', 'ROOT'), ('T.', 'compound'), ('Mitchell', 'conj'), (',', 'punct'), ('“', 'punct'), ('machine', 'acl'), ('learning', 'dobj'), ('?', 'punct')]

>> Bigrams: 
[[[, 20], [20, ]], [], E.], [E., Brynjolfsson], [Brynjolfsson, T.], [T., Mitchell], [Mitchell, ,], [,, “], [“, machine], [machine, learning], [learning, ?]]

>> Trigrams: 
[[[, 20, ]], [20, ], E.], [], E., Brynjolfsson], [E., Brynjolfsson, T.], [Brynjolfsson, T., Mitchell], [T., Mitchell, ,], [Mitchell, ,, “], [,, “, machine], [“, machine, learning], [machine, learning, ?]]

>> Noun Phrases are: 
[[20] E. Brynjolfsson, T. Mitchell, What, learning]

>> Named Entities are: 
[('20', 'CARDINAL'), ('] E. Brynjolfsson', 'PERSON'), ('T. Mitchell', 'PERSON')]


============================ Sentence 809 =============================

Workforce implications,” Science, vol. 


>> Tokens are: 
[Workforce, implications, ,, ”, Science, ,, vol, .] 

>> PoS Tags are: 
[('Workforce', 'NOUN'), ('implications', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('Science', 'NOUN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Workforce', 'compound'), ('implications', 'ROOT'), (',', 'punct'), ('”', 'punct'), ('Science', 'appos'), (',', 'punct'), ('vol', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Workforce, implications], [implications, ,], [,, ”], [”, Science], [Science, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[Workforce, implications, ,], [implications, ,, ”], [,, ”, Science], [”, Science, ,], [Science, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[Workforce implications, Science, vol]

>> Named Entities are: 
[]


============================ Sentence 810 =============================

358, no. 


>> Tokens are: 
[358, ,, .] 

>> PoS Tags are: 
[('358', 'NUM'), (',', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('358', 'ROOT'), (',', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[358, ,], [,, .]]

>> Trigrams: 
[[358, ,, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('358', 'CARDINAL')]


============================ Sentence 811 =============================

6370, pp. 


>> Tokens are: 
[6370, ,, pp, .] 

>> PoS Tags are: 
[('6370', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('6370', 'ROOT'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[6370, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[6370, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[pp]

>> Named Entities are: 
[('6370', 'CARDINAL')]


============================ Sentence 812 =============================

1530–1534, 2017. 


>> Tokens are: 
[1530–1534, ,, 2017, .] 

>> PoS Tags are: 
[('1530–1534', 'NUM'), (',', 'PUNCT'), ('2017', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1530–1534', 'ROOT'), (',', 'punct'), ('2017', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[1530–1534, ,], [,, 2017], [2017, .]]

>> Trigrams: 
[[1530–1534, ,, 2017], [,, 2017, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1530–1534, 2017', 'DATE')]


============================ Sentence 813 =============================

 18    [21] S. Kannan, H. Kim, and 


>> Tokens are: 
[ , 18,    , [, 21, ], S., Kannan, ,, H., Kim, ,] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('18', 'NUM'), ('   ', 'SPACE'), ('[', 'PUNCT'), ('21', 'NUM'), (']', 'PUNCT'), ('S.', 'PROPN'), ('Kannan', 'PROPN'), (',', 'PUNCT'), ('H.', 'PROPN'), ('Kim', 'PROPN'), (',', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('18', 'nummod'), ('   ', 'dobj'), ('[', 'punct'), ('21', 'appos'), (']', 'punct'), ('S.', 'compound'), ('Kannan', 'appos'), (',', 'punct'), ('H.', 'compound'), ('Kim', 'conj'), (',', 'punct')]

>> Bigrams: 
[[ , 18], [18,    ], [   , [], [[, 21], [21, ]], [], S.], [S., Kannan], [Kannan, ,], [,, H.], [H., Kim], [Kim, ,]]

>> Trigrams: 
[[ , 18,    ], [18,    , [], [   , [, 21], [[, 21, ]], [21, ], S.], [], S., Kannan], [S., Kannan, ,], [Kannan, ,, H.], [,, H., Kim], [H., Kim, ,]]

>> Noun Phrases are: 
[S. Kannan, H. Kim]

>> Named Entities are: 
[('18', 'CARDINAL'), ('21', 'CARDINAL'), ('S. Kannan', 'PERSON'), ('H. Kim', 'PERSON')]


============================ Sentence 814 =============================

S. Oh, “Deep learning and information theory: An emerging interface,” IEEE ISIT 2018 Tutorial. 


>> Tokens are: 
[S., Oh, ,, “, Deep, learning, information, theory, :, emerging, interface, ,, ”, IEEE, ISIT, 2018, Tutorial, .] 

>> PoS Tags are: 
[('S.', 'PROPN'), ('Oh', 'INTJ'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Deep', 'ADJ'), ('learning', 'NOUN'), ('information', 'NOUN'), ('theory', 'NOUN'), (':', 'PUNCT'), ('emerging', 'VERB'), ('interface', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'ADJ'), ('ISIT', 'VERB'), ('2018', 'NUM'), ('Tutorial', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('S.', 'compound'), ('Oh', 'intj'), (',', 'punct'), ('“', 'punct'), ('Deep', 'amod'), ('learning', 'nmod'), ('information', 'conj'), ('theory', 'ROOT'), (':', 'punct'), ('emerging', 'amod'), ('interface', 'appos'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'appos'), ('ISIT', 'ccomp'), ('2018', 'nummod'), ('Tutorial', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[S., Oh], [Oh, ,], [,, “], [“, Deep], [Deep, learning], [learning, information], [information, theory], [theory, :], [:, emerging], [emerging, interface], [interface, ,], [,, ”], [”, IEEE], [IEEE, ISIT], [ISIT, 2018], [2018, Tutorial], [Tutorial, .]]

>> Trigrams: 
[[S., Oh, ,], [Oh, ,, “], [,, “, Deep], [“, Deep, learning], [Deep, learning, information], [learning, information, theory], [information, theory, :], [theory, :, emerging], [:, emerging, interface], [emerging, interface, ,], [interface, ,, ”], [,, ”, IEEE], [”, IEEE, ISIT], [IEEE, ISIT, 2018], [ISIT, 2018, Tutorial], [2018, Tutorial, .]]

>> Noun Phrases are: 
[S. Oh, “Deep learning and information theory, An emerging interface, 2018 Tutorial]

>> Named Entities are: 
[('S. Oh', 'PERSON')]


============================ Sentence 815 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 816 =============================

[22] M. Davies, N. Srinivasa, T.-H. Lin, G. Chinya, Y. Cao, S. H. Choday, G. Dimou, P. Joshi, N. Imam, S. Jain et al. 


>> Tokens are: 
[[, 22, ], M., Davies, ,, N., Srinivasa, ,, T.-H., Lin, ,, G., Chinya, ,, Y., Cao, ,, S., H., Choday, ,, G., Dimou, ,, P., Joshi, ,, N., Imam, ,, S., Jain, et, al, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('22', 'NUM'), (']', 'PUNCT'), ('M.', 'PROPN'), ('Davies', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), ('Srinivasa', 'PROPN'), (',', 'PUNCT'), ('T.-H.', 'PROPN'), ('Lin', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('Chinya', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('Cao', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('H.', 'PROPN'), ('Choday', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('Dimou', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('Joshi', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), ('Imam', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('Jain', 'PROPN'), ('et', 'PROPN'), ('al', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('22', 'dep'), (']', 'dep'), ('M.', 'compound'), ('Davies', 'ROOT'), (',', 'punct'), ('N.', 'compound'), ('Srinivasa', 'appos'), (',', 'punct'), ('T.-H.', 'compound'), ('Lin', 'appos'), (',', 'punct'), ('G.', 'compound'), ('Chinya', 'conj'), (',', 'punct'), ('Y.', 'compound'), ('Cao', 'conj'), (',', 'punct'), ('S.', 'compound'), ('H.', 'compound'), ('Choday', 'appos'), (',', 'punct'), ('G.', 'compound'), ('Dimou', 'conj'), (',', 'punct'), ('P.', 'compound'), ('Joshi', 'conj'), (',', 'punct'), ('N.', 'compound'), ('Imam', 'conj'), (',', 'punct'), ('S.', 'compound'), ('Jain', 'appos'), ('et', 'compound'), ('al', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 22], [22, ]], [], M.], [M., Davies], [Davies, ,], [,, N.], [N., Srinivasa], [Srinivasa, ,], [,, T.-H.], [T.-H., Lin], [Lin, ,], [,, G.], [G., Chinya], [Chinya, ,], [,, Y.], [Y., Cao], [Cao, ,], [,, S.], [S., H.], [H., Choday], [Choday, ,], [,, G.], [G., Dimou], [Dimou, ,], [,, P.], [P., Joshi], [Joshi, ,], [,, N.], [N., Imam], [Imam, ,], [,, S.], [S., Jain], [Jain, et], [et, al], [al, .]]

>> Trigrams: 
[[[, 22, ]], [22, ], M.], [], M., Davies], [M., Davies, ,], [Davies, ,, N.], [,, N., Srinivasa], [N., Srinivasa, ,], [Srinivasa, ,, T.-H.], [,, T.-H., Lin], [T.-H., Lin, ,], [Lin, ,, G.], [,, G., Chinya], [G., Chinya, ,], [Chinya, ,, Y.], [,, Y., Cao], [Y., Cao, ,], [Cao, ,, S.], [,, S., H.], [S., H., Choday], [H., Choday, ,], [Choday, ,, G.], [,, G., Dimou], [G., Dimou, ,], [Dimou, ,, P.], [,, P., Joshi], [P., Joshi, ,], [Joshi, ,, N.], [,, N., Imam], [N., Imam, ,], [Imam, ,, S.], [,, S., Jain], [S., Jain, et], [Jain, et, al], [et, al, .]]

>> Noun Phrases are: 
[[22] M. Davies, N. Srinivasa, T.-H. Lin, G. Chinya, Y. Cao, S. H. Choday, G. Dimou, P. Joshi, N. Imam, S. Jain, et al]

>> Named Entities are: 
[('22', 'CARDINAL'), ('N. Srinivasa', 'PERSON'), ('Lin', 'PERSON'), ('G. Chinya', 'PERSON'), ('Y. Cao', 'PERSON'), ('S. H. Choday', 'PERSON'), ('G. Dimou', 'PERSON'), ('P. Joshi', 'PERSON'), ('N. Imam', 'PERSON'), ('S. Jain', 'PERSON')]


============================ Sentence 817 =============================

, “Loihi: A neuromorphic manycore processor with on-chip learning,” IEEE Micro, vol. 


>> Tokens are: 
[,, “, Loihi, :, neuromorphic, manycore, processor, -, chip, learning, ,, ”, IEEE, Micro, ,, vol, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('“', 'PUNCT'), ('Loihi', 'NOUN'), (':', 'PUNCT'), ('neuromorphic', 'ADJ'), ('manycore', 'NOUN'), ('processor', 'NOUN'), ('-', 'PUNCT'), ('chip', 'NOUN'), ('learning', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('Micro', 'PROPN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('“', 'punct'), ('Loihi', 'ROOT'), (':', 'punct'), ('neuromorphic', 'amod'), ('manycore', 'compound'), ('processor', 'appos'), ('-', 'punct'), ('chip', 'pobj'), ('learning', 'pobj'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('Micro', 'appos'), (',', 'punct'), ('vol', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[,, “], [“, Loihi], [Loihi, :], [:, neuromorphic], [neuromorphic, manycore], [manycore, processor], [processor, -], [-, chip], [chip, learning], [learning, ,], [,, ”], [”, IEEE], [IEEE, Micro], [Micro, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[,, “, Loihi], [“, Loihi, :], [Loihi, :, neuromorphic], [:, neuromorphic, manycore], [neuromorphic, manycore, processor], [manycore, processor, -], [processor, -, chip], [-, chip, learning], [chip, learning, ,], [learning, ,, ”], [,, ”, IEEE], [”, IEEE, Micro], [IEEE, Micro, ,], [Micro, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[, “Loihi, A neuromorphic manycore processor, -chip, IEEE Micro, vol]

>> Named Entities are: 
[('IEEE Micro', 'ORG')]


============================ Sentence 818 =============================

38, no. 1, pp. 


>> Tokens are: 
[38, ,, ., 1, ,, pp, .] 

>> PoS Tags are: 
[('38', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('1', 'NUM'), (',', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('38', 'ROOT'), (',', 'punct'), ('.', 'conj'), ('1', 'nummod'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[38, ,], [,, .], [., 1], [1, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[38, ,, .], [,, ., 1], [., 1, ,], [1, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[.]

>> Named Entities are: 
[('38', 'CARDINAL'), ('1', 'CARDINAL')]


============================ Sentence 819 =============================

82–99, 2018. 


>> Tokens are: 
[82–99, ,, 2018, .] 

>> PoS Tags are: 
[('82–99', 'NUM'), (',', 'PUNCT'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('82–99', 'ROOT'), (',', 'punct'), ('2018', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[82–99, ,], [,, 2018], [2018, .]]

>> Trigrams: 
[[82–99, ,, 2018], [,, 2018, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2018', 'DATE')]


============================ Sentence 820 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 821 =============================

[23] A. Bagheri, O. Simeone, and B. Rajendran, “Training proba- bilistic spiking neural networks with first-to-spike decoding,” arXiv preprint arXiv:1710.10704, 2017. 


>> Tokens are: 
[[, 23, ], A., Bagheri, ,, O., Simeone, ,, B., Rajendran, ,, “, Training, proba-, bilistic, spiking, neural, networks, -, -, spike, decoding, ,, ”, arXiv, preprint, arXiv:1710.10704, ,, 2017, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('23', 'NUM'), (']', 'PUNCT'), ('A.', 'PROPN'), ('Bagheri', 'PROPN'), (',', 'PUNCT'), ('O.', 'PROPN'), ('Simeone', 'PROPN'), (',', 'PUNCT'), ('B.', 'PROPN'), ('Rajendran', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Training', 'VERB'), ('proba-', 'NOUN'), ('bilistic', 'ADJ'), ('spiking', 'VERB'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('spike', 'NOUN'), ('decoding', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('arXiv', 'NOUN'), ('preprint', 'NOUN'), ('arXiv:1710.10704', 'PROPN'), (',', 'PUNCT'), ('2017', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('23', 'nummod'), (']', 'punct'), ('A.', 'compound'), ('Bagheri', 'ROOT'), (',', 'punct'), ('O.', 'compound'), ('Simeone', 'appos'), (',', 'punct'), ('B.', 'compound'), ('Rajendran', 'conj'), (',', 'punct'), ('“', 'punct'), ('Training', 'compound'), ('proba-', 'npadvmod'), ('bilistic', 'amod'), ('spiking', 'amod'), ('neural', 'amod'), ('networks', 'appos'), ('-', 'punct'), ('-', 'punct'), ('spike', 'pobj'), ('decoding', 'pobj'), (',', 'punct'), ('”', 'punct'), ('arXiv', 'compound'), ('preprint', 'compound'), ('arXiv:1710.10704', 'appos'), (',', 'punct'), ('2017', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[[, 23], [23, ]], [], A.], [A., Bagheri], [Bagheri, ,], [,, O.], [O., Simeone], [Simeone, ,], [,, B.], [B., Rajendran], [Rajendran, ,], [,, “], [“, Training], [Training, proba-], [proba-, bilistic], [bilistic, spiking], [spiking, neural], [neural, networks], [networks, -], [-, -], [-, spike], [spike, decoding], [decoding, ,], [,, ”], [”, arXiv], [arXiv, preprint], [preprint, arXiv:1710.10704], [arXiv:1710.10704, ,], [,, 2017], [2017, .]]

>> Trigrams: 
[[[, 23, ]], [23, ], A.], [], A., Bagheri], [A., Bagheri, ,], [Bagheri, ,, O.], [,, O., Simeone], [O., Simeone, ,], [Simeone, ,, B.], [,, B., Rajendran], [B., Rajendran, ,], [Rajendran, ,, “], [,, “, Training], [“, Training, proba-], [Training, proba-, bilistic], [proba-, bilistic, spiking], [bilistic, spiking, neural], [spiking, neural, networks], [neural, networks, -], [networks, -, -], [-, -, spike], [-, spike, decoding], [spike, decoding, ,], [decoding, ,, ”], [,, ”, arXiv], [”, arXiv, preprint], [arXiv, preprint, arXiv:1710.10704], [preprint, arXiv:1710.10704, ,], [arXiv:1710.10704, ,, 2017], [,, 2017, .]]

>> Noun Phrases are: 
[[23] A. Bagheri, O. Simeone, B. Rajendran, Training proba- bilistic spiking neural networks, spike, arXiv preprint arXiv:1710.10704]

>> Named Entities are: 
[('23', 'CARDINAL'), ('O. Simeone', 'PERSON'), ('B. Rajendran', 'PERSON'), ('first', 'ORDINAL'), ('2017', 'DATE')]


============================ Sentence 822 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 823 =============================

[24] J. Chen, L. Song, M. J. Wainwright, and M. I. Jordan, “Learn- ing to explain: An information-theoretic perspective on model interpretation,” arXiv preprint arXiv:1802.07814, 2018. 


>> Tokens are: 
[[, 24, ], J., Chen, ,, L., Song, ,, M., J., Wainwright, ,, M., I., Jordan, ,, “, Learn-, ing, explain, :, information, -, theoretic, perspective, model, interpretation, ,, ”, arXiv, preprint, arXiv:1802.07814, ,, 2018, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('24', 'NUM'), (']', 'PUNCT'), ('J.', 'PROPN'), ('Chen', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('Song', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('J.', 'PROPN'), ('Wainwright', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('I.', 'PROPN'), ('Jordan', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Learn-', 'ADJ'), ('ing', 'NOUN'), ('explain', 'VERB'), (':', 'PUNCT'), ('information', 'NOUN'), ('-', 'PUNCT'), ('theoretic', 'ADJ'), ('perspective', 'NOUN'), ('model', 'NOUN'), ('interpretation', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('arXiv', 'NOUN'), ('preprint', 'NOUN'), ('arXiv:1802.07814', 'PROPN'), (',', 'PUNCT'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('24', 'nummod'), (']', 'punct'), ('J.', 'compound'), ('Chen', 'ROOT'), (',', 'punct'), ('L.', 'compound'), ('Song', 'conj'), (',', 'punct'), ('M.', 'compound'), ('J.', 'compound'), ('Wainwright', 'conj'), (',', 'punct'), ('M.', 'compound'), ('I.', 'compound'), ('Jordan', 'conj'), (',', 'punct'), ('“', 'punct'), ('Learn-', 'amod'), ('ing', 'appos'), ('explain', 'relcl'), (':', 'punct'), ('information', 'npadvmod'), ('-', 'punct'), ('theoretic', 'amod'), ('perspective', 'appos'), ('model', 'compound'), ('interpretation', 'pobj'), (',', 'punct'), ('”', 'punct'), ('arXiv', 'compound'), ('preprint', 'compound'), ('arXiv:1802.07814', 'appos'), (',', 'punct'), ('2018', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 24], [24, ]], [], J.], [J., Chen], [Chen, ,], [,, L.], [L., Song], [Song, ,], [,, M.], [M., J.], [J., Wainwright], [Wainwright, ,], [,, M.], [M., I.], [I., Jordan], [Jordan, ,], [,, “], [“, Learn-], [Learn-, ing], [ing, explain], [explain, :], [:, information], [information, -], [-, theoretic], [theoretic, perspective], [perspective, model], [model, interpretation], [interpretation, ,], [,, ”], [”, arXiv], [arXiv, preprint], [preprint, arXiv:1802.07814], [arXiv:1802.07814, ,], [,, 2018], [2018, .]]

>> Trigrams: 
[[[, 24, ]], [24, ], J.], [], J., Chen], [J., Chen, ,], [Chen, ,, L.], [,, L., Song], [L., Song, ,], [Song, ,, M.], [,, M., J.], [M., J., Wainwright], [J., Wainwright, ,], [Wainwright, ,, M.], [,, M., I.], [M., I., Jordan], [I., Jordan, ,], [Jordan, ,, “], [,, “, Learn-], [“, Learn-, ing], [Learn-, ing, explain], [ing, explain, :], [explain, :, information], [:, information, -], [information, -, theoretic], [-, theoretic, perspective], [theoretic, perspective, model], [perspective, model, interpretation], [model, interpretation, ,], [interpretation, ,, ”], [,, ”, arXiv], [”, arXiv, preprint], [arXiv, preprint, arXiv:1802.07814], [preprint, arXiv:1802.07814, ,], [arXiv:1802.07814, ,, 2018], [,, 2018, .]]

>> Noun Phrases are: 
[[24] J. Chen, L. Song, M. J. Wainwright, M. I. Jordan, Learn- ing, An information-theoretic perspective, model interpretation, arXiv preprint arXiv:1802.07814]

>> Named Entities are: 
[('24', 'CARDINAL'), ('J. Chen', 'PERSON'), ('L. Song', 'PERSON'), ('M. J. Wainwright', 'PERSON'), ('M. I. Jordan', 'PERSON'), ('arXiv:1802.07814, 2018', 'DATE')]


============================ Sentence 824 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 825 =============================

[25] M. Polese, R. Jana, V. Kounev, K. Zhang, S. Deb, and M. Zorzi, “Machine Learning at the Edge: A Data-Driven Architecture with Applications to 5G Cellular Networks,” ArXiv e-prints, Aug. 2018. 


>> Tokens are: 
[[, 25, ], M., Polese, ,, R., Jana, ,, V., Kounev, ,, K., Zhang, ,, S., Deb, ,, M., Zorzi, ,, “, Machine, Learning, Edge, :, Data, -, Driven, Architecture, Applications, 5, G, Cellular, Networks, ,, ”, ArXiv, e, -, prints, ,, Aug., 2018, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('25', 'NUM'), (']', 'PUNCT'), ('M.', 'PROPN'), ('Polese', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('Jana', 'PROPN'), (',', 'PUNCT'), ('V.', 'PROPN'), ('Kounev', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), ('Zhang', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('Deb', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('Zorzi', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Machine', 'NOUN'), ('Learning', 'PROPN'), ('Edge', 'NOUN'), (':', 'PUNCT'), ('Data', 'PROPN'), ('-', 'PUNCT'), ('Driven', 'VERB'), ('Architecture', 'PROPN'), ('Applications', 'PROPN'), ('5', 'NUM'), ('G', 'PROPN'), ('Cellular', 'PROPN'), ('Networks', 'PROPN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('ArXiv', 'PROPN'), ('e', 'NOUN'), ('-', 'NOUN'), ('prints', 'NOUN'), (',', 'PUNCT'), ('Aug.', 'PROPN'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('25', 'nummod'), (']', 'punct'), ('M.', 'compound'), ('Polese', 'ROOT'), (',', 'punct'), ('R.', 'compound'), ('Jana', 'appos'), (',', 'punct'), ('V.', 'compound'), ('Kounev', 'appos'), (',', 'punct'), ('K.', 'compound'), ('Zhang', 'conj'), (',', 'punct'), ('S.', 'compound'), ('Deb', 'conj'), (',', 'punct'), ('M.', 'compound'), ('Zorzi', 'conj'), (',', 'punct'), ('“', 'punct'), ('Machine', 'compound'), ('Learning', 'appos'), ('Edge', 'pobj'), (':', 'punct'), ('Data', 'compound'), ('-', 'punct'), ('Driven', 'compound'), ('Architecture', 'appos'), ('Applications', 'pobj'), ('5', 'nummod'), ('G', 'compound'), ('Cellular', 'compound'), ('Networks', 'pobj'), (',', 'punct'), ('”', 'punct'), ('ArXiv', 'appos'), ('e', 'punct'), ('-', 'punct'), ('prints', 'appos'), (',', 'punct'), ('Aug.', 'npadvmod'), ('2018', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[[, 25], [25, ]], [], M.], [M., Polese], [Polese, ,], [,, R.], [R., Jana], [Jana, ,], [,, V.], [V., Kounev], [Kounev, ,], [,, K.], [K., Zhang], [Zhang, ,], [,, S.], [S., Deb], [Deb, ,], [,, M.], [M., Zorzi], [Zorzi, ,], [,, “], [“, Machine], [Machine, Learning], [Learning, Edge], [Edge, :], [:, Data], [Data, -], [-, Driven], [Driven, Architecture], [Architecture, Applications], [Applications, 5], [5, G], [G, Cellular], [Cellular, Networks], [Networks, ,], [,, ”], [”, ArXiv], [ArXiv, e], [e, -], [-, prints], [prints, ,], [,, Aug.], [Aug., 2018], [2018, .]]

>> Trigrams: 
[[[, 25, ]], [25, ], M.], [], M., Polese], [M., Polese, ,], [Polese, ,, R.], [,, R., Jana], [R., Jana, ,], [Jana, ,, V.], [,, V., Kounev], [V., Kounev, ,], [Kounev, ,, K.], [,, K., Zhang], [K., Zhang, ,], [Zhang, ,, S.], [,, S., Deb], [S., Deb, ,], [Deb, ,, M.], [,, M., Zorzi], [M., Zorzi, ,], [Zorzi, ,, “], [,, “, Machine], [“, Machine, Learning], [Machine, Learning, Edge], [Learning, Edge, :], [Edge, :, Data], [:, Data, -], [Data, -, Driven], [-, Driven, Architecture], [Driven, Architecture, Applications], [Architecture, Applications, 5], [Applications, 5, G], [5, G, Cellular], [G, Cellular, Networks], [Cellular, Networks, ,], [Networks, ,, ”], [,, ”, ArXiv], [”, ArXiv, e], [ArXiv, e, -], [e, -, prints], [-, prints, ,], [prints, ,, Aug.], [,, Aug., 2018], [Aug., 2018, .]]

>> Noun Phrases are: 
[[25] M. Polese, R. Jana, V. Kounev, K. Zhang, S. Deb, M. Zorzi, Machine Learning, the Edge, A Data-Driven Architecture, Applications, 5G Cellular Networks, ArXiv, prints]

>> Named Entities are: 
[('25', 'CARDINAL'), ('R. Jana', 'PERSON'), ('V. Kounev', 'PERSON'), ('K. Zhang', 'PERSON'), ('S. Deb', 'PERSON'), ('M. Zorzi', 'PERSON'), ('Machine Learning', 'WORK_OF_ART'), ('ArXiv', 'WORK_OF_ART'), ('Aug. 2018', 'DATE')]


============================ Sentence 826 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 827 =============================

[26] G. Paschos, E. Bastug, I. Land, G. Caire, and M. Debbah, “Wireless caching: Technical misconceptions and business bar- riers,” IEEE Communications Magazine, vol. 


>> Tokens are: 
[[, 26, ], G., Paschos, ,, E., Bastug, ,, I., Land, ,, G., Caire, ,, M., Debbah, ,, “, Wireless, caching, :, Technical, misconceptions, business, bar-, riers, ,, ”, IEEE, Communications, Magazine, ,, vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('26', 'NUM'), (']', 'PUNCT'), ('G.', 'PROPN'), ('Paschos', 'PROPN'), (',', 'PUNCT'), ('E.', 'PROPN'), ('Bastug', 'PROPN'), (',', 'PUNCT'), ('I.', 'PROPN'), ('Land', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('Caire', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('Debbah', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Wireless', 'ADJ'), ('caching', 'ADJ'), (':', 'PUNCT'), ('Technical', 'ADJ'), ('misconceptions', 'NOUN'), ('business', 'NOUN'), ('bar-', 'NOUN'), ('riers', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('Communications', 'PROPN'), ('Magazine', 'PROPN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('26', 'dep'), (']', 'punct'), ('G.', 'compound'), ('Paschos', 'ROOT'), (',', 'punct'), ('E.', 'compound'), ('Bastug', 'conj'), (',', 'punct'), ('I.', 'compound'), ('Land', 'conj'), (',', 'punct'), ('G.', 'compound'), ('Caire', 'conj'), (',', 'punct'), ('M.', 'compound'), ('Debbah', 'conj'), (',', 'punct'), ('“', 'punct'), ('Wireless', 'amod'), ('caching', 'appos'), (':', 'punct'), ('Technical', 'amod'), ('misconceptions', 'appos'), ('business', 'conj'), ('bar-', 'amod'), ('riers', 'conj'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('Communications', 'compound'), ('Magazine', 'appos'), (',', 'punct'), ('vol', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[[, 26], [26, ]], [], G.], [G., Paschos], [Paschos, ,], [,, E.], [E., Bastug], [Bastug, ,], [,, I.], [I., Land], [Land, ,], [,, G.], [G., Caire], [Caire, ,], [,, M.], [M., Debbah], [Debbah, ,], [,, “], [“, Wireless], [Wireless, caching], [caching, :], [:, Technical], [Technical, misconceptions], [misconceptions, business], [business, bar-], [bar-, riers], [riers, ,], [,, ”], [”, IEEE], [IEEE, Communications], [Communications, Magazine], [Magazine, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[[, 26, ]], [26, ], G.], [], G., Paschos], [G., Paschos, ,], [Paschos, ,, E.], [,, E., Bastug], [E., Bastug, ,], [Bastug, ,, I.], [,, I., Land], [I., Land, ,], [Land, ,, G.], [,, G., Caire], [G., Caire, ,], [Caire, ,, M.], [,, M., Debbah], [M., Debbah, ,], [Debbah, ,, “], [,, “, Wireless], [“, Wireless, caching], [Wireless, caching, :], [caching, :, Technical], [:, Technical, misconceptions], [Technical, misconceptions, business], [misconceptions, business, bar-], [business, bar-, riers], [bar-, riers, ,], [riers, ,, ”], [,, ”, IEEE], [”, IEEE, Communications], [IEEE, Communications, Magazine], [Communications, Magazine, ,], [Magazine, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[[26] G. Paschos, E. Bastug, I. Land, G. Caire, M. Debbah, Technical misconceptions, business, bar- riers, IEEE Communications Magazine, vol]

>> Named Entities are: 
[('26', 'CARDINAL'), ('G. Paschos', 'PERSON'), ('E. Bastug', 'PERSON'), ('I. Land, G. Caire', 'ORG'), ('M. Debbah', 'PERSON'), ('IEEE Communications Magazine', 'ORG')]


============================ Sentence 828 =============================

54, no. 8, pp. 


>> Tokens are: 
[54, ,, ., 8, ,, pp, .] 

>> PoS Tags are: 
[('54', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('8', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('54', 'ROOT'), (',', 'punct'), ('.', 'punct'), ('8', 'nummod'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[54, ,], [,, .], [., 8], [8, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[54, ,, .], [,, ., 8], [., 8, ,], [8, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[pp]

>> Named Entities are: 
[('54', 'DATE'), ('8', 'CARDINAL')]


============================ Sentence 829 =============================

16– 22, 2016. 


>> Tokens are: 
[16, –, 22, ,, 2016, .] 

>> PoS Tags are: 
[('16', 'NUM'), ('–', 'SYM'), ('22', 'NUM'), (',', 'PUNCT'), ('2016', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('16', 'ROOT'), ('–', 'punct'), ('22', 'prep'), (',', 'punct'), ('2016', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[16, –], [–, 22], [22, ,], [,, 2016], [2016, .]]

>> Trigrams: 
[[16, –, 22], [–, 22, ,], [22, ,, 2016], [,, 2016, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('16', 'CARDINAL')]


============================ Sentence 830 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 831 =============================

[27] M. Chen, U. Challita, W. Saad, C. Yin, and M. Debbah, “Machine learning for wireless networks with artificial in- telligence: A tutorial on neural networks,” arXiv preprint arXiv:1710.02913, 2017. 


>> Tokens are: 
[[, 27, ], M., Chen, ,, U., Challita, ,, W., Saad, ,, C., Yin, ,, M., Debbah, ,, “, Machine, learning, wireless, networks, artificial, in-, telligence, :, tutorial, neural, networks, ,, ”, arXiv, preprint, arXiv:1710.02913, ,, 2017, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('27', 'NUM'), (']', 'PUNCT'), ('M.', 'PROPN'), ('Chen', 'PROPN'), (',', 'PUNCT'), ('U.', 'PROPN'), ('Challita', 'PROPN'), (',', 'PUNCT'), ('W.', 'PROPN'), ('Saad', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), ('Yin', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('Debbah', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Machine', 'NOUN'), ('learning', 'VERB'), ('wireless', 'ADJ'), ('networks', 'NOUN'), ('artificial', 'ADJ'), ('in-', 'NOUN'), ('telligence', 'NOUN'), (':', 'PUNCT'), ('tutorial', 'NOUN'), ('neural', 'ADJ'), ('networks', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('arXiv', 'NOUN'), ('preprint', 'NOUN'), ('arXiv:1710.02913', 'PROPN'), (',', 'PUNCT'), ('2017', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('27', 'nummod'), (']', 'punct'), ('M.', 'compound'), ('Chen', 'nsubj'), (',', 'punct'), ('U.', 'compound'), ('Challita', 'appos'), (',', 'punct'), ('W.', 'compound'), ('Saad', 'conj'), (',', 'punct'), ('C.', 'compound'), ('Yin', 'appos'), (',', 'punct'), ('M.', 'compound'), ('Debbah', 'conj'), (',', 'punct'), ('“', 'punct'), ('Machine', 'compound'), ('learning', 'relcl'), ('wireless', 'amod'), ('networks', 'pobj'), ('artificial', 'amod'), ('in-', 'compound'), ('telligence', 'pobj'), (':', 'punct'), ('tutorial', 'appos'), ('neural', 'amod'), ('networks', 'pobj'), (',', 'punct'), ('”', 'punct'), ('arXiv', 'compound'), ('preprint', 'ROOT'), ('arXiv:1710.02913', 'dobj'), (',', 'punct'), ('2017', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 27], [27, ]], [], M.], [M., Chen], [Chen, ,], [,, U.], [U., Challita], [Challita, ,], [,, W.], [W., Saad], [Saad, ,], [,, C.], [C., Yin], [Yin, ,], [,, M.], [M., Debbah], [Debbah, ,], [,, “], [“, Machine], [Machine, learning], [learning, wireless], [wireless, networks], [networks, artificial], [artificial, in-], [in-, telligence], [telligence, :], [:, tutorial], [tutorial, neural], [neural, networks], [networks, ,], [,, ”], [”, arXiv], [arXiv, preprint], [preprint, arXiv:1710.02913], [arXiv:1710.02913, ,], [,, 2017], [2017, .]]

>> Trigrams: 
[[[, 27, ]], [27, ], M.], [], M., Chen], [M., Chen, ,], [Chen, ,, U.], [,, U., Challita], [U., Challita, ,], [Challita, ,, W.], [,, W., Saad], [W., Saad, ,], [Saad, ,, C.], [,, C., Yin], [C., Yin, ,], [Yin, ,, M.], [,, M., Debbah], [M., Debbah, ,], [Debbah, ,, “], [,, “, Machine], [“, Machine, learning], [Machine, learning, wireless], [learning, wireless, networks], [wireless, networks, artificial], [networks, artificial, in-], [artificial, in-, telligence], [in-, telligence, :], [telligence, :, tutorial], [:, tutorial, neural], [tutorial, neural, networks], [neural, networks, ,], [networks, ,, ”], [,, ”, arXiv], [”, arXiv, preprint], [arXiv, preprint, arXiv:1710.02913], [preprint, arXiv:1710.02913, ,], [arXiv:1710.02913, ,, 2017], [,, 2017, .]]

>> Noun Phrases are: 
[[27] M. Chen, U. Challita, W. Saad, C. Yin, M. Debbah, wireless networks, artificial in- telligence, A tutorial, neural networks, arXiv:1710.02913]

>> Named Entities are: 
[('27', 'CARDINAL'), ('M. Chen', 'PERSON'), ('W. Saad', 'PERSON'), ('C. Yin', 'PERSON'), ('M. Debbah', 'PERSON'), ('2017', 'DATE')]


============================ Sentence 832 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 833 =============================

[28] M. Angjelichinoski, K. F. Trillingsgaard, and P. Popovski, “A statistical learning approach to ultra-reliable low latency communication,” arXiv preprint arXiv:1809.05515, 2018. 


>> Tokens are: 
[[, 28, ], M., Angjelichinoski, ,, K., F., Trillingsgaard, ,, P., Popovski, ,, “, statistical, learning, approach, ultra, -, reliable, low, latency, communication, ,, ”, arXiv, preprint, arXiv:1809.05515, ,, 2018, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('28', 'NUM'), (']', 'PUNCT'), ('M.', 'PROPN'), ('Angjelichinoski', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), ('F.', 'PROPN'), ('Trillingsgaard', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('Popovski', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('statistical', 'ADJ'), ('learning', 'NOUN'), ('approach', 'NOUN'), ('ultra', 'ADJ'), ('-', 'ADJ'), ('reliable', 'ADJ'), ('low', 'ADJ'), ('latency', 'NOUN'), ('communication', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('arXiv', 'NOUN'), ('preprint', 'VERB'), ('arXiv:1809.05515', 'PROPN'), (',', 'PUNCT'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('28', 'dep'), (']', 'punct'), ('M.', 'compound'), ('Angjelichinoski', 'nsubj'), (',', 'punct'), ('K.', 'compound'), ('F.', 'compound'), ('Trillingsgaard', 'conj'), (',', 'punct'), ('P.', 'compound'), ('Popovski', 'conj'), (',', 'punct'), ('“', 'punct'), ('statistical', 'amod'), ('learning', 'compound'), ('approach', 'appos'), ('ultra', 'amod'), ('-', 'amod'), ('reliable', 'amod'), ('low', 'amod'), ('latency', 'compound'), ('communication', 'pobj'), (',', 'punct'), ('”', 'punct'), ('arXiv', 'appos'), ('preprint', 'ROOT'), ('arXiv:1809.05515', 'dobj'), (',', 'punct'), ('2018', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 28], [28, ]], [], M.], [M., Angjelichinoski], [Angjelichinoski, ,], [,, K.], [K., F.], [F., Trillingsgaard], [Trillingsgaard, ,], [,, P.], [P., Popovski], [Popovski, ,], [,, “], [“, statistical], [statistical, learning], [learning, approach], [approach, ultra], [ultra, -], [-, reliable], [reliable, low], [low, latency], [latency, communication], [communication, ,], [,, ”], [”, arXiv], [arXiv, preprint], [preprint, arXiv:1809.05515], [arXiv:1809.05515, ,], [,, 2018], [2018, .]]

>> Trigrams: 
[[[, 28, ]], [28, ], M.], [], M., Angjelichinoski], [M., Angjelichinoski, ,], [Angjelichinoski, ,, K.], [,, K., F.], [K., F., Trillingsgaard], [F., Trillingsgaard, ,], [Trillingsgaard, ,, P.], [,, P., Popovski], [P., Popovski, ,], [Popovski, ,, “], [,, “, statistical], [“, statistical, learning], [statistical, learning, approach], [learning, approach, ultra], [approach, ultra, -], [ultra, -, reliable], [-, reliable, low], [reliable, low, latency], [low, latency, communication], [latency, communication, ,], [communication, ,, ”], [,, ”, arXiv], [”, arXiv, preprint], [arXiv, preprint, arXiv:1809.05515], [preprint, arXiv:1809.05515, ,], [arXiv:1809.05515, ,, 2018], [,, 2018, .]]

>> Noun Phrases are: 
[[28] M. Angjelichinoski, K. F. Trillingsgaard, P. Popovski, A statistical learning approach, ultra-reliable low latency communication, arXiv, arXiv:1809.05515]

>> Named Entities are: 
[('28', 'CARDINAL'), ('K. F. Trillingsgaard', 'PERSON'), ('P. Popovski', 'PERSON'), ('arXiv:1809.05515, 2018', 'DATE')]


============================ Sentence 834 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 835 =============================

[29] M. Seeger, “A taxonomy for semi-supervised learning methods,” MIT Press, Tech. 


>> Tokens are: 
[[, 29, ], M., Seeger, ,, “, taxonomy, semi, -, supervised, learning, methods, ,, ”, MIT, Press, ,, Tech, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('29', 'NUM'), (']', 'PUNCT'), ('M.', 'PROPN'), ('Seeger', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('taxonomy', 'NOUN'), ('semi', 'ADJ'), ('-', 'ADJ'), ('supervised', 'ADJ'), ('learning', 'NOUN'), ('methods', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('MIT', 'PROPN'), ('Press', 'PROPN'), (',', 'PUNCT'), ('Tech', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('29', 'nummod'), (']', 'punct'), ('M.', 'compound'), ('Seeger', 'ROOT'), (',', 'punct'), ('“', 'punct'), ('taxonomy', 'appos'), ('semi', 'amod'), ('-', 'amod'), ('supervised', 'amod'), ('learning', 'compound'), ('methods', 'pobj'), (',', 'punct'), ('”', 'punct'), ('MIT', 'compound'), ('Press', 'appos'), (',', 'punct'), ('Tech', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 29], [29, ]], [], M.], [M., Seeger], [Seeger, ,], [,, “], [“, taxonomy], [taxonomy, semi], [semi, -], [-, supervised], [supervised, learning], [learning, methods], [methods, ,], [,, ”], [”, MIT], [MIT, Press], [Press, ,], [,, Tech], [Tech, .]]

>> Trigrams: 
[[[, 29, ]], [29, ], M.], [], M., Seeger], [M., Seeger, ,], [Seeger, ,, “], [,, “, taxonomy], [“, taxonomy, semi], [taxonomy, semi, -], [semi, -, supervised], [-, supervised, learning], [supervised, learning, methods], [learning, methods, ,], [methods, ,, ”], [,, ”, MIT], [”, MIT, Press], [MIT, Press, ,], [Press, ,, Tech], [,, Tech, .]]

>> Noun Phrases are: 
[[29] M. Seeger, A taxonomy, semi-supervised learning methods, MIT Press, Tech]

>> Named Entities are: 
[('29', 'CARDINAL'), ('MIT Press', 'ORG')]


============================ Sentence 836 =============================

Rep., 2006.   


>> Tokens are: 
[Rep., ,, 2006, .,  ] 

>> PoS Tags are: 
[('Rep.', 'PROPN'), (',', 'PUNCT'), ('2006', 'NUM'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Rep.', 'ROOT'), (',', 'punct'), ('2006', 'appos'), ('.', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Rep., ,], [,, 2006], [2006, .], [.,  ]]

>> Trigrams: 
[[Rep., ,, 2006], [,, 2006, .], [2006, .,  ]]

>> Noun Phrases are: 
[Rep.]

>> Named Entities are: 
[('2006', 'DATE')]


============================ Sentence 837 =============================

[30] T. J. O’Shea and J. Hoydis, “An introduction to machine learning communications systems,” arXiv preprint, vol. 


>> Tokens are: 
[[, 30, ], T., J., O’Shea, J., Hoydis, ,, “, introduction, machine, learning, communications, systems, ,, ”, arXiv, preprint, ,, vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('30', 'NUM'), (']', 'PUNCT'), ('T.', 'PROPN'), ('J.', 'PROPN'), ('O’Shea', 'PROPN'), ('J.', 'PROPN'), ('Hoydis', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('introduction', 'NOUN'), ('machine', 'NOUN'), ('learning', 'VERB'), ('communications', 'NOUN'), ('systems', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('arXiv', 'NOUN'), ('preprint', 'NOUN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('30', 'nummod'), (']', 'punct'), ('T.', 'compound'), ('J.', 'compound'), ('O’Shea', 'ROOT'), ('J.', 'compound'), ('Hoydis', 'conj'), (',', 'punct'), ('“', 'punct'), ('introduction', 'appos'), ('machine', 'compound'), ('learning', 'compound'), ('communications', 'compound'), ('systems', 'pobj'), (',', 'punct'), ('”', 'punct'), ('arXiv', 'compound'), ('preprint', 'appos'), (',', 'punct'), ('vol', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 30], [30, ]], [], T.], [T., J.], [J., O’Shea], [O’Shea, J.], [J., Hoydis], [Hoydis, ,], [,, “], [“, introduction], [introduction, machine], [machine, learning], [learning, communications], [communications, systems], [systems, ,], [,, ”], [”, arXiv], [arXiv, preprint], [preprint, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[[, 30, ]], [30, ], T.], [], T., J.], [T., J., O’Shea], [J., O’Shea, J.], [O’Shea, J., Hoydis], [J., Hoydis, ,], [Hoydis, ,, “], [,, “, introduction], [“, introduction, machine], [introduction, machine, learning], [machine, learning, communications], [learning, communications, systems], [communications, systems, ,], [systems, ,, ”], [,, ”, arXiv], [”, arXiv, preprint], [arXiv, preprint, ,], [preprint, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[[30] T. J. O’Shea, J. Hoydis, An introduction, machine learning communications systems, arXiv preprint, vol]

>> Named Entities are: 
[('30', 'CARDINAL'), ('J. Hoydis', 'PERSON')]


============================ Sentence 838 =============================

1702, 2017. 


>> Tokens are: 
[1702, ,, 2017, .] 

>> PoS Tags are: 
[('1702', 'NUM'), (',', 'PUNCT'), ('2017', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1702', 'ROOT'), (',', 'punct'), ('2017', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[1702, ,], [,, 2017], [2017, .]]

>> Trigrams: 
[[1702, ,, 2017], [,, 2017, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1702, 2017', 'DATE')]


============================ Sentence 839 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 840 =============================

[31] N. Farsad and A. Goldsmith, “Neural network detection of data sequences in communication systems,” arXiv preprint arXiv:1802.02046, 2018. 


>> Tokens are: 
[[, 31, ], N., Farsad, A., Goldsmith, ,, “, Neural, network, detection, data, sequences, communication, systems, ,, ”, arXiv, preprint, arXiv:1802.02046, ,, 2018, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('31', 'NUM'), (']', 'PUNCT'), ('N.', 'PROPN'), ('Farsad', 'PROPN'), ('A.', 'PROPN'), ('Goldsmith', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Neural', 'ADJ'), ('network', 'NOUN'), ('detection', 'NOUN'), ('data', 'NOUN'), ('sequences', 'NOUN'), ('communication', 'NOUN'), ('systems', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('arXiv', 'NOUN'), ('preprint', 'VERB'), ('arXiv:1802.02046', 'PROPN'), (',', 'PUNCT'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('31', 'dep'), (']', 'punct'), ('N.', 'compound'), ('Farsad', 'nsubj'), ('A.', 'compound'), ('Goldsmith', 'conj'), (',', 'punct'), ('“', 'punct'), ('Neural', 'compound'), ('network', 'compound'), ('detection', 'appos'), ('data', 'compound'), ('sequences', 'pobj'), ('communication', 'compound'), ('systems', 'pobj'), (',', 'punct'), ('”', 'punct'), ('arXiv', 'appos'), ('preprint', 'ROOT'), ('arXiv:1802.02046', 'dobj'), (',', 'punct'), ('2018', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 31], [31, ]], [], N.], [N., Farsad], [Farsad, A.], [A., Goldsmith], [Goldsmith, ,], [,, “], [“, Neural], [Neural, network], [network, detection], [detection, data], [data, sequences], [sequences, communication], [communication, systems], [systems, ,], [,, ”], [”, arXiv], [arXiv, preprint], [preprint, arXiv:1802.02046], [arXiv:1802.02046, ,], [,, 2018], [2018, .]]

>> Trigrams: 
[[[, 31, ]], [31, ], N.], [], N., Farsad], [N., Farsad, A.], [Farsad, A., Goldsmith], [A., Goldsmith, ,], [Goldsmith, ,, “], [,, “, Neural], [“, Neural, network], [Neural, network, detection], [network, detection, data], [detection, data, sequences], [data, sequences, communication], [sequences, communication, systems], [communication, systems, ,], [systems, ,, ”], [,, ”, arXiv], [”, arXiv, preprint], [arXiv, preprint, arXiv:1802.02046], [preprint, arXiv:1802.02046, ,], [arXiv:1802.02046, ,, 2018], [,, 2018, .]]

>> Noun Phrases are: 
[[31] N. Farsad, A. Goldsmith, Neural network detection, data sequences, communication systems, arXiv, arXiv:1802.02046]

>> Named Entities are: 
[('31', 'CARDINAL'), ('A. Goldsmith', 'PERSON'), ('2018', 'DATE')]


============================ Sentence 841 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 842 =============================

[32] S. Bouchired, D. Roviras, and F. Castanié, “Equalisation of satellite mobile channels with neural network techniques,” Space Communications, vol. 


>> Tokens are: 
[[, 32, ], S., Bouchired, ,, D., Roviras, ,, F., Castanié, ,, “, Equalisation, satellite, mobile, channels, neural, network, techniques, ,, ”, Space, Communications, ,, vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('32', 'NUM'), (']', 'PUNCT'), ('S.', 'PROPN'), ('Bouchired', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('Roviras', 'PROPN'), (',', 'PUNCT'), ('F.', 'PROPN'), ('Castanié', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Equalisation', 'NOUN'), ('satellite', 'NOUN'), ('mobile', 'ADJ'), ('channels', 'NOUN'), ('neural', 'ADJ'), ('network', 'NOUN'), ('techniques', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('Space', 'PROPN'), ('Communications', 'PROPN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('32', 'dep'), (']', 'punct'), ('S.', 'compound'), ('Bouchired', 'ROOT'), (',', 'punct'), ('D.', 'compound'), ('Roviras', 'appos'), (',', 'punct'), ('F.', 'compound'), ('Castanié', 'conj'), (',', 'punct'), ('“', 'punct'), ('Equalisation', 'appos'), ('satellite', 'compound'), ('mobile', 'amod'), ('channels', 'pobj'), ('neural', 'amod'), ('network', 'compound'), ('techniques', 'pobj'), (',', 'punct'), ('”', 'punct'), ('Space', 'compound'), ('Communications', 'appos'), (',', 'punct'), ('vol', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[[, 32], [32, ]], [], S.], [S., Bouchired], [Bouchired, ,], [,, D.], [D., Roviras], [Roviras, ,], [,, F.], [F., Castanié], [Castanié, ,], [,, “], [“, Equalisation], [Equalisation, satellite], [satellite, mobile], [mobile, channels], [channels, neural], [neural, network], [network, techniques], [techniques, ,], [,, ”], [”, Space], [Space, Communications], [Communications, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[[, 32, ]], [32, ], S.], [], S., Bouchired], [S., Bouchired, ,], [Bouchired, ,, D.], [,, D., Roviras], [D., Roviras, ,], [Roviras, ,, F.], [,, F., Castanié], [F., Castanié, ,], [Castanié, ,, “], [,, “, Equalisation], [“, Equalisation, satellite], [Equalisation, satellite, mobile], [satellite, mobile, channels], [mobile, channels, neural], [channels, neural, network], [neural, network, techniques], [network, techniques, ,], [techniques, ,, ”], [,, ”, Space], [”, Space, Communications], [Space, Communications, ,], [Communications, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[[32] S. Bouchired, D. Roviras, F. Castanié, Equalisation, satellite mobile channels, neural network techniques, Space Communications, vol]

>> Named Entities are: 
[('32', 'CARDINAL'), ('S. Bouchired', 'PERSON'), ('D. Roviras', 'GPE'), ('F. Castanié', 'PERSON'), ('Space Communications', 'ORG')]


============================ Sentence 843 =============================

15, no. 4, pp. 


>> Tokens are: 
[15, ,, ., 4, ,, pp, .] 

>> PoS Tags are: 
[('15', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('4', 'NUM'), (',', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('15', 'ROOT'), (',', 'punct'), ('.', 'punct'), ('4', 'nummod'), (',', 'punct'), ('pp', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[15, ,], [,, .], [., 4], [4, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[15, ,, .], [,, ., 4], [., 4, ,], [4, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('15', 'CARDINAL'), ('4', 'CARDINAL')]


============================ Sentence 844 =============================

209–220, 1998. 


>> Tokens are: 
[209–220, ,, 1998, .] 

>> PoS Tags are: 
[('209–220', 'NUM'), (',', 'PUNCT'), ('1998', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('209–220', 'ROOT'), (',', 'punct'), ('1998', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[209–220, ,], [,, 1998], [1998, .]]

>> Trigrams: 
[[209–220, ,, 1998], [,, 1998, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1998', 'DATE')]


============================ Sentence 845 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 846 =============================

[33] Y. Wang, M. Martonosi, and L.-S. Peh, “A supervised learning approach for routing optimizations in wireless sensor networks,” in Proc. 


>> Tokens are: 
[[, 33, ], Y., Wang, ,, M., Martonosi, ,, L.-S., Peh, ,, “, supervised, learning, approach, routing, optimizations, wireless, sensor, networks, ,, ”, Proc, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('33', 'NUM'), (']', 'PUNCT'), ('Y.', 'PROPN'), ('Wang', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('Martonosi', 'PROPN'), (',', 'PUNCT'), ('L.-S.', 'VERB'), ('Peh', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('supervised', 'ADJ'), ('learning', 'NOUN'), ('approach', 'NOUN'), ('routing', 'VERB'), ('optimizations', 'NOUN'), ('wireless', 'ADJ'), ('sensor', 'NOUN'), ('networks', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('Proc', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('33', 'dep'), (']', 'punct'), ('Y.', 'compound'), ('Wang', 'ROOT'), (',', 'punct'), ('M.', 'compound'), ('Martonosi', 'npadvmod'), (',', 'punct'), ('L.-S.', 'compound'), ('Peh', 'conj'), (',', 'punct'), ('“', 'punct'), ('supervised', 'amod'), ('learning', 'compound'), ('approach', 'appos'), ('routing', 'pcomp'), ('optimizations', 'dobj'), ('wireless', 'amod'), ('sensor', 'compound'), ('networks', 'pobj'), (',', 'punct'), ('”', 'punct'), ('Proc', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[[, 33], [33, ]], [], Y.], [Y., Wang], [Wang, ,], [,, M.], [M., Martonosi], [Martonosi, ,], [,, L.-S.], [L.-S., Peh], [Peh, ,], [,, “], [“, supervised], [supervised, learning], [learning, approach], [approach, routing], [routing, optimizations], [optimizations, wireless], [wireless, sensor], [sensor, networks], [networks, ,], [,, ”], [”, Proc], [Proc, .]]

>> Trigrams: 
[[[, 33, ]], [33, ], Y.], [], Y., Wang], [Y., Wang, ,], [Wang, ,, M.], [,, M., Martonosi], [M., Martonosi, ,], [Martonosi, ,, L.-S.], [,, L.-S., Peh], [L.-S., Peh, ,], [Peh, ,, “], [,, “, supervised], [“, supervised, learning], [supervised, learning, approach], [learning, approach, routing], [approach, routing, optimizations], [routing, optimizations, wireless], [optimizations, wireless, sensor], [wireless, sensor, networks], [sensor, networks, ,], [networks, ,, ”], [,, ”, Proc], [”, Proc, .]]

>> Noun Phrases are: 
[[33] Y. Wang, L.-S. Peh, A supervised learning approach, optimizations, wireless sensor networks, Proc]

>> Named Entities are: 
[('33', 'CARDINAL'), ('Y. Wang', 'PERSON'), ('M. Martonosi', 'PERSON')]


============================ Sentence 847 =============================

Int. 


>> Tokens are: 
[Int, .] 

>> PoS Tags are: 
[('Int', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Int', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Int, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Int]

>> Named Entities are: 
[]


============================ Sentence 848 =============================

Workshop on Multi-hop ad hoc Networks. 


>> Tokens are: 
[Workshop, Multi, -, hop, ad, hoc, Networks, .] 

>> PoS Tags are: 
[('Workshop', 'PROPN'), ('Multi', 'PROPN'), ('-', 'ADJ'), ('hop', 'NOUN'), ('ad', 'NOUN'), ('hoc', 'X'), ('Networks', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Workshop', 'ROOT'), ('Multi', 'compound'), ('-', 'amod'), ('hop', 'compound'), ('ad', 'nmod'), ('hoc', 'compound'), ('Networks', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Workshop, Multi], [Multi, -], [-, hop], [hop, ad], [ad, hoc], [hoc, Networks], [Networks, .]]

>> Trigrams: 
[[Workshop, Multi, -], [Multi, -, hop], [-, hop, ad], [hop, ad, hoc], [ad, hoc, Networks], [hoc, Networks, .]]

>> Noun Phrases are: 
[Workshop, Multi-hop ad hoc Networks]

>> Named Entities are: 
[('Networks', 'GPE')]


============================ Sentence 849 =============================

ACM, 2006, pp. 


>> Tokens are: 
[ACM, ,, 2006, ,, pp, .] 

>> PoS Tags are: 
[('ACM', 'PROPN'), (',', 'PUNCT'), ('2006', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ACM', 'ROOT'), (',', 'punct'), ('2006', 'appos'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[ACM, ,], [,, 2006], [2006, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[ACM, ,, 2006], [,, 2006, ,], [2006, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[ACM, pp]

>> Named Entities are: 
[('ACM', 'ORG'), ('2006', 'DATE')]


============================ Sentence 850 =============================

79–86. 


>> Tokens are: 
[79–86, .] 

>> PoS Tags are: 
[('79–86', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('79–86', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[79–86, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 851 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 852 =============================

[34] G. De Veciana and A. Zakhor, “Neural net-based continuous phase modulation receivers,” IEEE Transactions on Communi- cations, vol. 


>> Tokens are: 
[[, 34, ], G., De, Veciana, A., Zakhor, ,, “, Neural, net, -, based, continuous, phase, modulation, receivers, ,, ”, IEEE, Transactions, Communi-, cations, ,, vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('34', 'NUM'), (']', 'PUNCT'), ('G.', 'PROPN'), ('De', 'PROPN'), ('Veciana', 'PROPN'), ('A.', 'PROPN'), ('Zakhor', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Neural', 'ADJ'), ('net', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('continuous', 'ADJ'), ('phase', 'NOUN'), ('modulation', 'NOUN'), ('receivers', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('Transactions', 'PROPN'), ('Communi-', 'PROPN'), ('cations', 'NOUN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('34', 'nummod'), (']', 'punct'), ('G.', 'compound'), ('De', 'compound'), ('Veciana', 'ROOT'), ('A.', 'compound'), ('Zakhor', 'conj'), (',', 'punct'), ('“', 'punct'), ('Neural', 'amod'), ('net', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('continuous', 'amod'), ('phase', 'compound'), ('modulation', 'compound'), ('receivers', 'appos'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('Transactions', 'conj'), ('Communi-', 'compound'), ('cations', 'pobj'), (',', 'punct'), ('vol', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[[, 34], [34, ]], [], G.], [G., De], [De, Veciana], [Veciana, A.], [A., Zakhor], [Zakhor, ,], [,, “], [“, Neural], [Neural, net], [net, -], [-, based], [based, continuous], [continuous, phase], [phase, modulation], [modulation, receivers], [receivers, ,], [,, ”], [”, IEEE], [IEEE, Transactions], [Transactions, Communi-], [Communi-, cations], [cations, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[[, 34, ]], [34, ], G.], [], G., De], [G., De, Veciana], [De, Veciana, A.], [Veciana, A., Zakhor], [A., Zakhor, ,], [Zakhor, ,, “], [,, “, Neural], [“, Neural, net], [Neural, net, -], [net, -, based], [-, based, continuous], [based, continuous, phase], [continuous, phase, modulation], [phase, modulation, receivers], [modulation, receivers, ,], [receivers, ,, ”], [,, ”, IEEE], [”, IEEE, Transactions], [IEEE, Transactions, Communi-], [Transactions, Communi-, cations], [Communi-, cations, ,], [cations, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[[34] G. De Veciana, A. Zakhor, Neural net-based continuous phase modulation receivers, IEEE Transactions, Communi- cations, vol]

>> Named Entities are: 
[('34', 'CARDINAL'), ('G. De Veciana', 'PERSON'), ('A. Zakhor', 'PERSON'), ('IEEE Transactions on Communi-', 'WORK_OF_ART')]


============================ Sentence 853 =============================

40, no. 8, pp. 


>> Tokens are: 
[40, ,, ., 8, ,, pp, .] 

>> PoS Tags are: 
[('40', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('8', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('40', 'ROOT'), (',', 'punct'), ('.', 'punct'), ('8', 'nummod'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[40, ,], [,, .], [., 8], [8, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[40, ,, .], [,, ., 8], [., 8, ,], [8, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[pp]

>> Named Entities are: 
[('40', 'CARDINAL'), ('8', 'CARDINAL')]


============================ Sentence 854 =============================

1396–1408, 1992. 


>> Tokens are: 
[1396–1408, ,, 1992, .] 

>> PoS Tags are: 
[('1396–1408', 'NUM'), (',', 'PUNCT'), ('1992', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1396–1408', 'ROOT'), (',', 'punct'), ('1992', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[1396–1408, ,], [,, 1992], [1992, .]]

>> Trigrams: 
[[1396–1408, ,, 1992], [,, 1992, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 855 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 856 =============================

[35] X. Jin and H.-N. Kim, “Deep Learning Detection Networks in MIMO Decode-Forward Relay Channels,” ArXiv e-prints, Jul. 2018. 


>> Tokens are: 
[[, 35, ], X., Jin, H.-N., Kim, ,, “, Deep, Learning, Detection, Networks, MIMO, Decode, -, Forward, Relay, Channels, ,, ”, ArXiv, e, -, prints, ,, Jul., 2018, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('35', 'NUM'), (']', 'PUNCT'), ('X.', 'PROPN'), ('Jin', 'PROPN'), ('H.-N.', 'PRON'), ('Kim', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Deep', 'PROPN'), ('Learning', 'PROPN'), ('Detection', 'PROPN'), ('Networks', 'PROPN'), ('MIMO', 'PROPN'), ('Decode', 'PROPN'), ('-', 'PUNCT'), ('Forward', 'PROPN'), ('Relay', 'PROPN'), ('Channels', 'PROPN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('ArXiv', 'PROPN'), ('e', 'NOUN'), ('-', 'NOUN'), ('prints', 'NOUN'), (',', 'PUNCT'), ('Jul.', 'PROPN'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('35', 'nummod'), (']', 'punct'), ('X.', 'compound'), ('Jin', 'ROOT'), ('H.-N.', 'amod'), ('Kim', 'conj'), (',', 'punct'), ('“', 'punct'), ('Deep', 'compound'), ('Learning', 'compound'), ('Detection', 'compound'), ('Networks', 'appos'), ('MIMO', 'compound'), ('Decode', 'compound'), ('-', 'punct'), ('Forward', 'compound'), ('Relay', 'compound'), ('Channels', 'pobj'), (',', 'punct'), ('”', 'punct'), ('ArXiv', 'appos'), ('e', 'punct'), ('-', 'punct'), ('prints', 'appos'), (',', 'punct'), ('Jul.', 'npadvmod'), ('2018', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[[, 35], [35, ]], [], X.], [X., Jin], [Jin, H.-N.], [H.-N., Kim], [Kim, ,], [,, “], [“, Deep], [Deep, Learning], [Learning, Detection], [Detection, Networks], [Networks, MIMO], [MIMO, Decode], [Decode, -], [-, Forward], [Forward, Relay], [Relay, Channels], [Channels, ,], [,, ”], [”, ArXiv], [ArXiv, e], [e, -], [-, prints], [prints, ,], [,, Jul.], [Jul., 2018], [2018, .]]

>> Trigrams: 
[[[, 35, ]], [35, ], X.], [], X., Jin], [X., Jin, H.-N.], [Jin, H.-N., Kim], [H.-N., Kim, ,], [Kim, ,, “], [,, “, Deep], [“, Deep, Learning], [Deep, Learning, Detection], [Learning, Detection, Networks], [Detection, Networks, MIMO], [Networks, MIMO, Decode], [MIMO, Decode, -], [Decode, -, Forward], [-, Forward, Relay], [Forward, Relay, Channels], [Relay, Channels, ,], [Channels, ,, ”], [,, ”, ArXiv], [”, ArXiv, e], [ArXiv, e, -], [e, -, prints], [-, prints, ,], [prints, ,, Jul.], [,, Jul., 2018], [Jul., 2018, .]]

>> Noun Phrases are: 
[[35] X. Jin, H.-N. Kim, Deep Learning Detection Networks, MIMO Decode-Forward Relay Channels, ArXiv, prints]

>> Named Entities are: 
[('35', 'CARDINAL'), ('X. Jin', 'PERSON'), ('Kim', 'PERSON'), ('Deep Learning Detection Networks in MIMO Decode-Forward Relay Channels', 'WORK_OF_ART'), ('ArXiv', 'WORK_OF_ART'), ('Jul. 2018', 'DATE')]


============================ Sentence 857 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 858 =============================

[36] E. Nachmani, E. Marciano, L. Lugosch, W. J. Gross, D. Bur- shtein, and Y. Be’ery, “Deep learning methods for improved decoding of linear codes,” IEEE Journal of Selected Topics in Signal Processing, vol. 


>> Tokens are: 
[[, 36, ], E., Nachmani, ,, E., Marciano, ,, L., Lugosch, ,, W., J., Gross, ,, D., Bur-, shtein, ,, Y., Be’ery, ,, “, Deep, learning, methods, improved, decoding, linear, codes, ,, ”, IEEE, Journal, Selected, Topics, Signal, Processing, ,, vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('36', 'NUM'), (']', 'PUNCT'), ('E.', 'PROPN'), ('Nachmani', 'PROPN'), (',', 'PUNCT'), ('E.', 'PROPN'), ('Marciano', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('Lugosch', 'PROPN'), (',', 'PUNCT'), ('W.', 'PROPN'), ('J.', 'PROPN'), ('Gross', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('Bur-', 'PROPN'), ('shtein', 'NOUN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('Be’ery', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Deep', 'ADJ'), ('learning', 'NOUN'), ('methods', 'NOUN'), ('improved', 'ADJ'), ('decoding', 'NOUN'), ('linear', 'ADJ'), ('codes', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('Journal', 'PROPN'), ('Selected', 'PROPN'), ('Topics', 'PROPN'), ('Signal', 'PROPN'), ('Processing', 'PROPN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('36', 'dep'), (']', 'punct'), ('E.', 'compound'), ('Nachmani', 'ROOT'), (',', 'punct'), ('E.', 'compound'), ('Marciano', 'appos'), (',', 'punct'), ('L.', 'compound'), ('Lugosch', 'conj'), (',', 'punct'), ('W.', 'compound'), ('J.', 'compound'), ('Gross', 'conj'), (',', 'punct'), ('D.', 'compound'), ('Bur-', 'compound'), ('shtein', 'appos'), (',', 'punct'), ('Y.', 'compound'), ('Be’ery', 'conj'), (',', 'punct'), ('“', 'punct'), ('Deep', 'amod'), ('learning', 'amod'), ('methods', 'appos'), ('improved', 'amod'), ('decoding', 'pobj'), ('linear', 'amod'), ('codes', 'pobj'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('Journal', 'appos'), ('Selected', 'amod'), ('Topics', 'pobj'), ('Signal', 'compound'), ('Processing', 'pobj'), (',', 'punct'), ('vol', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[[, 36], [36, ]], [], E.], [E., Nachmani], [Nachmani, ,], [,, E.], [E., Marciano], [Marciano, ,], [,, L.], [L., Lugosch], [Lugosch, ,], [,, W.], [W., J.], [J., Gross], [Gross, ,], [,, D.], [D., Bur-], [Bur-, shtein], [shtein, ,], [,, Y.], [Y., Be’ery], [Be’ery, ,], [,, “], [“, Deep], [Deep, learning], [learning, methods], [methods, improved], [improved, decoding], [decoding, linear], [linear, codes], [codes, ,], [,, ”], [”, IEEE], [IEEE, Journal], [Journal, Selected], [Selected, Topics], [Topics, Signal], [Signal, Processing], [Processing, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[[, 36, ]], [36, ], E.], [], E., Nachmani], [E., Nachmani, ,], [Nachmani, ,, E.], [,, E., Marciano], [E., Marciano, ,], [Marciano, ,, L.], [,, L., Lugosch], [L., Lugosch, ,], [Lugosch, ,, W.], [,, W., J.], [W., J., Gross], [J., Gross, ,], [Gross, ,, D.], [,, D., Bur-], [D., Bur-, shtein], [Bur-, shtein, ,], [shtein, ,, Y.], [,, Y., Be’ery], [Y., Be’ery, ,], [Be’ery, ,, “], [,, “, Deep], [“, Deep, learning], [Deep, learning, methods], [learning, methods, improved], [methods, improved, decoding], [improved, decoding, linear], [decoding, linear, codes], [linear, codes, ,], [codes, ,, ”], [,, ”, IEEE], [”, IEEE, Journal], [IEEE, Journal, Selected], [Journal, Selected, Topics], [Selected, Topics, Signal], [Topics, Signal, Processing], [Signal, Processing, ,], [Processing, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[[36] E. Nachmani, E. Marciano, L. Lugosch, W. J. Gross, D. Bur- shtein, Y. Be’ery, Deep learning methods, improved decoding, linear codes, IEEE Journal, Selected Topics, Signal Processing, vol]

>> Named Entities are: 
[('36', 'CARDINAL'), ('] E. Nachmani', 'PERSON'), ('E. Marciano', 'PERSON'), ('L. Lugosch', 'PERSON'), ('W. J. Gross', 'PERSON'), ('D.', 'NORP'), ('IEEE Journal of Selected Topics', 'ORG'), ('Signal Processing', 'ORG')]


============================ Sentence 859 =============================

12, no. 1, pp. 


>> Tokens are: 
[12, ,, ., 1, ,, pp, .] 

>> PoS Tags are: 
[('12', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('1', 'NUM'), (',', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('12', 'nummod'), (',', 'punct'), ('.', 'ROOT'), ('1', 'nummod'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[12, ,], [,, .], [., 1], [1, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[12, ,, .], [,, ., 1], [., 1, ,], [1, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[12, no.]

>> Named Entities are: 
[('12', 'CARDINAL'), ('1', 'CARDINAL')]


============================ Sentence 860 =============================

119–131, 2018. 


>> Tokens are: 
[119–131, ,, 2018, .] 

>> PoS Tags are: 
[('119–131', 'NUM'), (',', 'PUNCT'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('119–131', 'ROOT'), (',', 'punct'), ('2018', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[119–131, ,], [,, 2018], [2018, .]]

>> Trigrams: 
[[119–131, ,, 2018], [,, 2018, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2018', 'DATE')]


============================ Sentence 861 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 862 =============================

[37] L. Lugosch and W. J. Gross, “Neural offset min-sum decoding,” in IEEE int. 


>> Tokens are: 
[[, 37, ], L., Lugosch, W., J., Gross, ,, “, Neural, offset, min, -, sum, decoding, ,, ”, IEEE, int, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('37', 'NUM'), (']', 'PUNCT'), ('L.', 'PROPN'), ('Lugosch', 'PROPN'), ('W.', 'PROPN'), ('J.', 'PROPN'), ('Gross', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Neural', 'PROPN'), ('offset', 'VERB'), ('min', 'NOUN'), ('-', 'PUNCT'), ('sum', 'NOUN'), ('decoding', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('int', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('37', 'nummod'), (']', 'punct'), ('L.', 'compound'), ('Lugosch', 'ROOT'), ('W.', 'compound'), ('J.', 'compound'), ('Gross', 'conj'), (',', 'punct'), ('“', 'punct'), ('Neural', 'npadvmod'), ('offset', 'amod'), ('min', 'compound'), ('-', 'punct'), ('sum', 'compound'), ('decoding', 'appos'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('int', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[[, 37], [37, ]], [], L.], [L., Lugosch], [Lugosch, W.], [W., J.], [J., Gross], [Gross, ,], [,, “], [“, Neural], [Neural, offset], [offset, min], [min, -], [-, sum], [sum, decoding], [decoding, ,], [,, ”], [”, IEEE], [IEEE, int], [int, .]]

>> Trigrams: 
[[[, 37, ]], [37, ], L.], [], L., Lugosch], [L., Lugosch, W.], [Lugosch, W., J.], [W., J., Gross], [J., Gross, ,], [Gross, ,, “], [,, “, Neural], [“, Neural, offset], [Neural, offset, min], [offset, min, -], [min, -, sum], [-, sum, decoding], [sum, decoding, ,], [decoding, ,, ”], [,, ”, IEEE], [”, IEEE, int], [IEEE, int, .]]

>> Noun Phrases are: 
[[37] L. Lugosch, W. J. Gross, “Neural offset min-sum decoding, IEEE int]

>> Named Entities are: 
[('37', 'CARDINAL'), ('L. Lugosch', 'PERSON'), ('W. J. Gross', 'PERSON')]


============================ Sentence 863 =============================

Symp. 


>> Tokens are: 
[Symp, .] 

>> PoS Tags are: 
[('Symp', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Symp', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Symp, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Symp]

>> Named Entities are: 
[]


============================ Sentence 864 =============================

Information Theory (ISIT 2017). 


>> Tokens are: 
[Information, Theory, (, ISIT, 2017, ), .] 

>> PoS Tags are: 
[('Information', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('ISIT', 'PROPN'), ('2017', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Information', 'compound'), ('Theory', 'ROOT'), ('(', 'punct'), ('ISIT', 'appos'), ('2017', 'nummod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Information, Theory], [Theory, (], [(, ISIT], [ISIT, 2017], [2017, )], [), .]]

>> Trigrams: 
[[Information, Theory, (], [Theory, (, ISIT], [(, ISIT, 2017], [ISIT, 2017, )], [2017, ), .]]

>> Noun Phrases are: 
[Information Theory, ISIT]

>> Named Entities are: 
[]


============================ Sentence 865 =============================

IEEE, 2017, pp. 


>> Tokens are: 
[IEEE, ,, 2017, ,, pp, .] 

>> PoS Tags are: 
[('IEEE', 'PROPN'), (',', 'PUNCT'), ('2017', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('IEEE', 'ROOT'), (',', 'punct'), ('2017', 'npadvmod'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[IEEE, ,], [,, 2017], [2017, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[IEEE, ,, 2017], [,, 2017, ,], [2017, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[IEEE, pp]

>> Named Entities are: 
[('2017', 'DATE')]


============================ Sentence 866 =============================

1361–1365. 


>> Tokens are: 
[1361–1365, .] 

>> PoS Tags are: 
[('1361–1365', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1361–1365', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[1361–1365, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1361–1365', 'CARDINAL')]


============================ Sentence 867 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 868 =============================

[38] S. Cammerer, T. Gruber, J. Hoydis, and S. ten Brink, “Scaling deep learning-based decoding of polar codes via partitioning,” in IEEE GLOBECOM 2017, 2017, pp. 


>> Tokens are: 
[[, 38, ], S., Cammerer, ,, T., Gruber, ,, J., Hoydis, ,, S., Brink, ,, “, Scaling, deep, learning, -, based, decoding, polar, codes, partitioning, ,, ”, IEEE, GLOBECOM, 2017, ,, 2017, ,, pp, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('38', 'NUM'), (']', 'PUNCT'), ('S.', 'PROPN'), ('Cammerer', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), ('Gruber', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('Hoydis', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('Brink', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Scaling', 'VERB'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('decoding', 'NOUN'), ('polar', 'ADJ'), ('codes', 'NOUN'), ('partitioning', 'VERB'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'NOUN'), ('GLOBECOM', 'PROPN'), ('2017', 'NUM'), (',', 'PUNCT'), ('2017', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('38', 'nummod'), (']', 'punct'), ('S.', 'compound'), ('Cammerer', 'nsubj'), (',', 'punct'), ('T.', 'compound'), ('Gruber', 'npadvmod'), (',', 'punct'), ('J.', 'compound'), ('Hoydis', 'conj'), (',', 'punct'), ('S.', 'compound'), ('Brink', 'conj'), (',', 'punct'), ('“', 'punct'), ('Scaling', 'ROOT'), ('deep', 'advmod'), ('learning', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('decoding', 'dobj'), ('polar', 'amod'), ('codes', 'pobj'), ('partitioning', 'pcomp'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'pobj'), ('GLOBECOM', 'pobj'), ('2017', 'npadvmod'), (',', 'punct'), ('2017', 'appos'), (',', 'punct'), ('pp', 'dep'), ('.', 'punct')]

>> Bigrams: 
[[[, 38], [38, ]], [], S.], [S., Cammerer], [Cammerer, ,], [,, T.], [T., Gruber], [Gruber, ,], [,, J.], [J., Hoydis], [Hoydis, ,], [,, S.], [S., Brink], [Brink, ,], [,, “], [“, Scaling], [Scaling, deep], [deep, learning], [learning, -], [-, based], [based, decoding], [decoding, polar], [polar, codes], [codes, partitioning], [partitioning, ,], [,, ”], [”, IEEE], [IEEE, GLOBECOM], [GLOBECOM, 2017], [2017, ,], [,, 2017], [2017, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[[, 38, ]], [38, ], S.], [], S., Cammerer], [S., Cammerer, ,], [Cammerer, ,, T.], [,, T., Gruber], [T., Gruber, ,], [Gruber, ,, J.], [,, J., Hoydis], [J., Hoydis, ,], [Hoydis, ,, S.], [,, S., Brink], [S., Brink, ,], [Brink, ,, “], [,, “, Scaling], [“, Scaling, deep], [Scaling, deep, learning], [deep, learning, -], [learning, -, based], [-, based, decoding], [based, decoding, polar], [decoding, polar, codes], [polar, codes, partitioning], [codes, partitioning, ,], [partitioning, ,, ”], [,, ”, IEEE], [”, IEEE, GLOBECOM], [IEEE, GLOBECOM, 2017], [GLOBECOM, 2017, ,], [2017, ,, 2017], [,, 2017, ,], [2017, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[[38] S. Cammerer, deep learning-based decoding, polar codes, IEEE, GLOBECOM]

>> Named Entities are: 
[('38', 'CARDINAL'), ('] S. Cammerer', 'PERSON'), ('T. Gruber', 'ORG'), ('J. Hoydis', 'PERSON'), ('S. ten Brink', 'PERSON'), ('2017, 2017', 'DATE')]


============================ Sentence 869 =============================

1–6. 


>> Tokens are: 
[1–6, .] 

>> PoS Tags are: 
[('1–6', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1–6', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[1–6, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1–6', 'CARDINAL')]


============================ Sentence 870 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 871 =============================

[39] S. Schibisch, S. Cammerer, S. Dörner, J. Hoydis, and S. t. Brink, “Online label recovery for deep learning-based com- munication through error correcting codes,” arXiv preprint arXiv:1807.00747, 2018. 


>> Tokens are: 
[[, 39, ], S., Schibisch, ,, S., Cammerer, ,, S., Dörner, ,, J., Hoydis, ,, S., t., Brink, ,, “, Online, label, recovery, deep, learning, -, based, com-, munication, error, correcting, codes, ,, ”, arXiv, preprint, arXiv:1807.00747, ,, 2018, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('39', 'NUM'), (']', 'PUNCT'), ('S.', 'PROPN'), ('Schibisch', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('Cammerer', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('Dörner', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('Hoydis', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('t.', 'PROPN'), ('Brink', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Online', 'ADJ'), ('label', 'NOUN'), ('recovery', 'NOUN'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('com-', 'NOUN'), ('munication', 'NOUN'), ('error', 'NOUN'), ('correcting', 'NOUN'), ('codes', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('arXiv', 'NOUN'), ('preprint', 'NOUN'), ('arXiv:1807.00747', 'PROPN'), (',', 'PUNCT'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('39', 'nummod'), (']', 'punct'), ('S.', 'compound'), ('Schibisch', 'nsubj'), (',', 'punct'), ('S.', 'compound'), ('Cammerer', 'appos'), (',', 'punct'), ('S.', 'compound'), ('Dörner', 'appos'), (',', 'punct'), ('J.', 'compound'), ('Hoydis', 'conj'), (',', 'punct'), ('S.', 'compound'), ('t.', 'compound'), ('Brink', 'conj'), (',', 'punct'), ('“', 'punct'), ('Online', 'amod'), ('label', 'compound'), ('recovery', 'appos'), ('deep', 'amod'), ('learning', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('com-', 'compound'), ('munication', 'pobj'), ('error', 'compound'), ('correcting', 'compound'), ('codes', 'pobj'), (',', 'punct'), ('”', 'punct'), ('arXiv', 'appos'), ('preprint', 'ROOT'), ('arXiv:1807.00747', 'dobj'), (',', 'punct'), ('2018', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[[, 39], [39, ]], [], S.], [S., Schibisch], [Schibisch, ,], [,, S.], [S., Cammerer], [Cammerer, ,], [,, S.], [S., Dörner], [Dörner, ,], [,, J.], [J., Hoydis], [Hoydis, ,], [,, S.], [S., t.], [t., Brink], [Brink, ,], [,, “], [“, Online], [Online, label], [label, recovery], [recovery, deep], [deep, learning], [learning, -], [-, based], [based, com-], [com-, munication], [munication, error], [error, correcting], [correcting, codes], [codes, ,], [,, ”], [”, arXiv], [arXiv, preprint], [preprint, arXiv:1807.00747], [arXiv:1807.00747, ,], [,, 2018], [2018, .]]

>> Trigrams: 
[[[, 39, ]], [39, ], S.], [], S., Schibisch], [S., Schibisch, ,], [Schibisch, ,, S.], [,, S., Cammerer], [S., Cammerer, ,], [Cammerer, ,, S.], [,, S., Dörner], [S., Dörner, ,], [Dörner, ,, J.], [,, J., Hoydis], [J., Hoydis, ,], [Hoydis, ,, S.], [,, S., t.], [S., t., Brink], [t., Brink, ,], [Brink, ,, “], [,, “, Online], [“, Online, label], [Online, label, recovery], [label, recovery, deep], [recovery, deep, learning], [deep, learning, -], [learning, -, based], [-, based, com-], [based, com-, munication], [com-, munication, error], [munication, error, correcting], [error, correcting, codes], [correcting, codes, ,], [codes, ,, ”], [,, ”, arXiv], [”, arXiv, preprint], [arXiv, preprint, arXiv:1807.00747], [preprint, arXiv:1807.00747, ,], [arXiv:1807.00747, ,, 2018], [,, 2018, .]]

>> Noun Phrases are: 
[[39] S. Schibisch, S. Cammerer, S. Dörner, J. Hoydis, S. t. Brink, Online label recovery, deep learning-based com- munication, error correcting codes, arXiv, arXiv:1807.00747]

>> Named Entities are: 
[('39', 'CARDINAL'), ('S. Schibisch', 'PERSON'), ('S. Cammerer', 'PERSON'), ('S. Dörner', 'PERSON'), ('J. Hoydis', 'PERSON'), ('S.', 'ORG'), ('2018', 'DATE')]


============================ Sentence 872 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 873 =============================

[40] F. Liang, C. Shen, and F. Wu, “An iterative bp-cnn architecture for channel decoding,” IEEE Journal of Selected Topics in Signal Processing, vol. 


>> Tokens are: 
[[, 40, ], F., Liang, ,, C., Shen, ,, F., Wu, ,, “, iterative, bp, -, cnn, architecture, channel, decoding, ,, ”, IEEE, Journal, Selected, Topics, Signal, Processing, ,, vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('40', 'NUM'), (']', 'PUNCT'), ('F.', 'PROPN'), ('Liang', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), ('Shen', 'PROPN'), (',', 'PUNCT'), ('F.', 'PROPN'), ('Wu', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('iterative', 'ADJ'), ('bp', 'NOUN'), ('-', 'PUNCT'), ('cnn', 'NOUN'), ('architecture', 'NOUN'), ('channel', 'NOUN'), ('decoding', 'VERB'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('Journal', 'PROPN'), ('Selected', 'PROPN'), ('Topics', 'PROPN'), ('Signal', 'PROPN'), ('Processing', 'PROPN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('40', 'ROOT'), (']', 'punct'), ('F.', 'compound'), ('Liang', 'appos'), (',', 'punct'), ('C.', 'compound'), ('Shen', 'appos'), (',', 'punct'), ('F.', 'compound'), ('Wu', 'conj'), (',', 'punct'), ('“', 'punct'), ('iterative', 'amod'), ('bp', 'compound'), ('-', 'punct'), ('cnn', 'compound'), ('architecture', 'appos'), ('channel', 'compound'), ('decoding', 'pobj'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('Journal', 'appos'), ('Selected', 'amod'), ('Topics', 'pobj'), ('Signal', 'compound'), ('Processing', 'pobj'), (',', 'punct'), ('vol', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[[, 40], [40, ]], [], F.], [F., Liang], [Liang, ,], [,, C.], [C., Shen], [Shen, ,], [,, F.], [F., Wu], [Wu, ,], [,, “], [“, iterative], [iterative, bp], [bp, -], [-, cnn], [cnn, architecture], [architecture, channel], [channel, decoding], [decoding, ,], [,, ”], [”, IEEE], [IEEE, Journal], [Journal, Selected], [Selected, Topics], [Topics, Signal], [Signal, Processing], [Processing, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[[, 40, ]], [40, ], F.], [], F., Liang], [F., Liang, ,], [Liang, ,, C.], [,, C., Shen], [C., Shen, ,], [Shen, ,, F.], [,, F., Wu], [F., Wu, ,], [Wu, ,, “], [,, “, iterative], [“, iterative, bp], [iterative, bp, -], [bp, -, cnn], [-, cnn, architecture], [cnn, architecture, channel], [architecture, channel, decoding], [channel, decoding, ,], [decoding, ,, ”], [,, ”, IEEE], [”, IEEE, Journal], [IEEE, Journal, Selected], [Journal, Selected, Topics], [Selected, Topics, Signal], [Topics, Signal, Processing], [Signal, Processing, ,], [Processing, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[F. Liang, C. Shen, F. Wu, An iterative bp-cnn architecture, IEEE Journal, Selected Topics, Signal Processing, vol]

>> Named Entities are: 
[('40', 'CARDINAL'), ('F. Liang', 'PERSON'), ('C. Shen', 'PERSON'), ('F. Wu', 'PERSON'), ('IEEE Journal of Selected Topics', 'ORG'), ('Signal Processing', 'ORG')]


============================ Sentence 874 =============================

12, no. 1, pp. 


>> Tokens are: 
[12, ,, ., 1, ,, pp, .] 

>> PoS Tags are: 
[('12', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('1', 'NUM'), (',', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('12', 'nummod'), (',', 'punct'), ('.', 'punct'), ('1', 'nummod'), (',', 'punct'), ('pp', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[12, ,], [,, .], [., 1], [1, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[12, ,, .], [,, ., 1], [., 1, ,], [1, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('12', 'CARDINAL'), ('1', 'CARDINAL')]


============================ Sentence 875 =============================

144–159, Feb 2018. 


>> Tokens are: 
[144–159, ,, Feb, 2018, .] 

>> PoS Tags are: 
[('144–159', 'NUM'), (',', 'PUNCT'), ('Feb', 'PROPN'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('144–159', 'ROOT'), (',', 'punct'), ('Feb', 'npadvmod'), ('2018', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[144–159, ,], [,, Feb], [Feb, 2018], [2018, .]]

>> Trigrams: 
[[144–159, ,, Feb], [,, Feb, 2018], [Feb, 2018, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('144–159', 'CARDINAL'), ('Feb 2018', 'DATE')]


============================ Sentence 876 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 877 =============================

[41] H. Agirman-Tosun, Y. Liu, A. M. Haimovich, O. Simeone, W. Su, J. Dabin, and E. Kanterakis, “Modulation classification of mimo-ofdm signals by independent component analysis and support vector machines,” in Proc. 


>> Tokens are: 
[[, 41, ], H., Agirman, -, Tosun, ,, Y., Liu, ,, A., M., Haimovich, ,, O., Simeone, ,, W., Su, ,, J., Dabin, ,, E., Kanterakis, ,, “, Modulation, classification, mimo, -, ofdm, signals, independent, component, analysis, support, vector, machines, ,, ”, Proc, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('41', 'NUM'), (']', 'PUNCT'), ('H.', 'PROPN'), ('Agirman', 'PROPN'), ('-', 'PUNCT'), ('Tosun', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('Liu', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('M.', 'PROPN'), ('Haimovich', 'PROPN'), (',', 'PUNCT'), ('O.', 'PROPN'), ('Simeone', 'PROPN'), (',', 'PUNCT'), ('W.', 'PROPN'), ('Su', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('Dabin', 'PROPN'), (',', 'PUNCT'), ('E.', 'PROPN'), ('Kanterakis', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Modulation', 'NOUN'), ('classification', 'NOUN'), ('mimo', 'ADJ'), ('-', 'PUNCT'), ('ofdm', 'NOUN'), ('signals', 'NOUN'), ('independent', 'ADJ'), ('component', 'NOUN'), ('analysis', 'NOUN'), ('support', 'NOUN'), ('vector', 'NOUN'), ('machines', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('Proc', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('41', 'nummod'), (']', 'punct'), ('H.', 'compound'), ('Agirman', 'compound'), ('-', 'punct'), ('Tosun', 'ROOT'), (',', 'punct'), ('Y.', 'compound'), ('Liu', 'conj'), (',', 'punct'), ('A.', 'compound'), ('M.', 'compound'), ('Haimovich', 'conj'), (',', 'punct'), ('O.', 'compound'), ('Simeone', 'conj'), (',', 'punct'), ('W.', 'compound'), ('Su', 'conj'), (',', 'punct'), ('J.', 'compound'), ('Dabin', 'conj'), (',', 'punct'), ('E.', 'compound'), ('Kanterakis', 'conj'), (',', 'punct'), ('“', 'punct'), ('Modulation', 'compound'), ('classification', 'appos'), ('mimo', 'amod'), ('-', 'punct'), ('ofdm', 'compound'), ('signals', 'pobj'), ('independent', 'amod'), ('component', 'compound'), ('analysis', 'pobj'), ('support', 'compound'), ('vector', 'compound'), ('machines', 'conj'), (',', 'punct'), ('”', 'punct'), ('Proc', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[[, 41], [41, ]], [], H.], [H., Agirman], [Agirman, -], [-, Tosun], [Tosun, ,], [,, Y.], [Y., Liu], [Liu, ,], [,, A.], [A., M.], [M., Haimovich], [Haimovich, ,], [,, O.], [O., Simeone], [Simeone, ,], [,, W.], [W., Su], [Su, ,], [,, J.], [J., Dabin], [Dabin, ,], [,, E.], [E., Kanterakis], [Kanterakis, ,], [,, “], [“, Modulation], [Modulation, classification], [classification, mimo], [mimo, -], [-, ofdm], [ofdm, signals], [signals, independent], [independent, component], [component, analysis], [analysis, support], [support, vector], [vector, machines], [machines, ,], [,, ”], [”, Proc], [Proc, .]]

>> Trigrams: 
[[[, 41, ]], [41, ], H.], [], H., Agirman], [H., Agirman, -], [Agirman, -, Tosun], [-, Tosun, ,], [Tosun, ,, Y.], [,, Y., Liu], [Y., Liu, ,], [Liu, ,, A.], [,, A., M.], [A., M., Haimovich], [M., Haimovich, ,], [Haimovich, ,, O.], [,, O., Simeone], [O., Simeone, ,], [Simeone, ,, W.], [,, W., Su], [W., Su, ,], [Su, ,, J.], [,, J., Dabin], [J., Dabin, ,], [Dabin, ,, E.], [,, E., Kanterakis], [E., Kanterakis, ,], [Kanterakis, ,, “], [,, “, Modulation], [“, Modulation, classification], [Modulation, classification, mimo], [classification, mimo, -], [mimo, -, ofdm], [-, ofdm, signals], [ofdm, signals, independent], [signals, independent, component], [independent, component, analysis], [component, analysis, support], [analysis, support, vector], [support, vector, machines], [vector, machines, ,], [machines, ,, ”], [,, ”, Proc], [”, Proc, .]]

>> Noun Phrases are: 
[[41] H. Agirman-Tosun, Y. Liu, A. M. Haimovich, O. Simeone, W. Su, J. Dabin, E. Kanterakis, Modulation classification, mimo-ofdm signals, independent component analysis, support vector machines, Proc]

>> Named Entities are: 
[('41', 'CARDINAL'), ('Y. Liu', 'PERSON'), ('A. M. Haimovich', 'PERSON'), ('O. Simeone', 'PERSON'), ('W. Su', 'PERSON'), ('J. Dabin', 'PERSON'), ('E. Kanterakis', 'PERSON')]


============================ Sentence 878 =============================

ASILOMAR 2011, 2011, pp. 


>> Tokens are: 
[ASILOMAR, 2011, ,, 2011, ,, pp, .] 

>> PoS Tags are: 
[('ASILOMAR', 'PROPN'), ('2011', 'NUM'), (',', 'PUNCT'), ('2011', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ASILOMAR', 'ROOT'), ('2011', 'nummod'), (',', 'punct'), ('2011', 'appos'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[ASILOMAR, 2011], [2011, ,], [,, 2011], [2011, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[ASILOMAR, 2011, ,], [2011, ,, 2011], [,, 2011, ,], [2011, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[ASILOMAR, pp]

>> Named Entities are: 
[('2011', 'DATE')]


============================ Sentence 879 =============================

1903–1907. 


>> Tokens are: 
[1903–1907, .] 

>> PoS Tags are: 
[('1903–1907', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1903–1907', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[1903–1907, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1903–1907', 'CARDINAL')]


============================ Sentence 880 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 881 =============================

[42] S.-H. Fang and T.-N. Lin, “Indoor location system based on discriminant-adaptive neural network in ieee 802.11 environ- ments,” IEEE Transactions on Neural networks, vol. 


>> Tokens are: 
[[, 42, ], S.-H., Fang, T.-N., Lin, ,, “, Indoor, location, system, based, discriminant, -, adaptive, neural, network, ieee, 802.11, environ-, ments, ,, ”, IEEE, Transactions, Neural, networks, ,, vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('42', 'NUM'), (']', 'PUNCT'), ('S.-H.', 'NOUN'), ('Fang', 'PROPN'), ('T.-N.', 'VERB'), ('Lin', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Indoor', 'ADJ'), ('location', 'NOUN'), ('system', 'NOUN'), ('based', 'VERB'), ('discriminant', 'ADJ'), ('-', 'PUNCT'), ('adaptive', 'NOUN'), ('neural', 'ADJ'), ('network', 'NOUN'), ('ieee', 'NOUN'), ('802.11', 'NUM'), ('environ-', 'NOUN'), ('ments', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('Transactions', 'PROPN'), ('Neural', 'PROPN'), ('networks', 'NOUN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('42', 'nummod'), (']', 'punct'), ('S.-H.', 'compound'), ('Fang', 'ROOT'), ('T.-N.', 'conj'), ('Lin', 'dobj'), (',', 'punct'), ('“', 'punct'), ('Indoor', 'compound'), ('location', 'compound'), ('system', 'appos'), ('based', 'acl'), ('discriminant', 'amod'), ('-', 'punct'), ('adaptive', 'nmod'), ('neural', 'amod'), ('network', 'pobj'), ('ieee', 'nmod'), ('802.11', 'nummod'), ('environ-', 'compound'), ('ments', 'pobj'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('Transactions', 'appos'), ('Neural', 'compound'), ('networks', 'pobj'), (',', 'punct'), ('vol', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[[, 42], [42, ]], [], S.-H.], [S.-H., Fang], [Fang, T.-N.], [T.-N., Lin], [Lin, ,], [,, “], [“, Indoor], [Indoor, location], [location, system], [system, based], [based, discriminant], [discriminant, -], [-, adaptive], [adaptive, neural], [neural, network], [network, ieee], [ieee, 802.11], [802.11, environ-], [environ-, ments], [ments, ,], [,, ”], [”, IEEE], [IEEE, Transactions], [Transactions, Neural], [Neural, networks], [networks, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[[, 42, ]], [42, ], S.-H.], [], S.-H., Fang], [S.-H., Fang, T.-N.], [Fang, T.-N., Lin], [T.-N., Lin, ,], [Lin, ,, “], [,, “, Indoor], [“, Indoor, location], [Indoor, location, system], [location, system, based], [system, based, discriminant], [based, discriminant, -], [discriminant, -, adaptive], [-, adaptive, neural], [adaptive, neural, network], [neural, network, ieee], [network, ieee, 802.11], [ieee, 802.11, environ-], [802.11, environ-, ments], [environ-, ments, ,], [ments, ,, ”], [,, ”, IEEE], [”, IEEE, Transactions], [IEEE, Transactions, Neural], [Transactions, Neural, networks], [Neural, networks, ,], [networks, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[[42] S.-H. Fang, Lin, “Indoor location system, discriminant-adaptive neural network, ieee 802.11 environ- ments, ” IEEE Transactions, Neural networks, vol]

>> Named Entities are: 
[('42', 'CARDINAL'), ('Lin', 'PERSON'), ('802.11', 'CARDINAL'), ('IEEE Transactions on Neural', 'WORK_OF_ART')]


============================ Sentence 882 =============================

19, no. 11, pp. 


>> Tokens are: 
[19, ,, ., 11, ,, pp, .] 

>> PoS Tags are: 
[('19', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('11', 'NUM'), (',', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('19', 'nummod'), (',', 'punct'), ('.', 'punct'), ('11', 'nummod'), (',', 'punct'), ('pp', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[19, ,], [,, .], [., 11], [11, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[19, ,, .], [,, ., 11], [., 11, ,], [11, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('19', 'CARDINAL'), ('11', 'CARDINAL')]


============================ Sentence 883 =============================

1973–1978, 2008. 


>> Tokens are: 
[1973–1978, ,, 2008, .] 

>> PoS Tags are: 
[('1973–1978', 'NUM'), (',', 'PUNCT'), ('2008', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1973–1978', 'ROOT'), (',', 'punct'), ('2008', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[1973–1978, ,], [,, 2008], [2008, .]]

>> Trigrams: 
[[1973–1978, ,, 2008], [,, 2008, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1973–1978, 2008', 'DATE')]


============================ Sentence 884 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 885 =============================

[43] Q. Wang, H. Li, Z. Chen, D. Zhao, S. Ye, and J. Cai, “Su- pervised and Semi-Supervised Deep Neural Networks for CSI- Based Authentication,” ArXiv e-prints, Jul. 2018. 


>> Tokens are: 
[[, 43, ], Q., Wang, ,, H., Li, ,, Z., Chen, ,, D., Zhao, ,, S., Ye, ,, J., Cai, ,, “, Su-, pervised, Semi, -, Supervised, Deep, Neural, Networks, CSI-, Based, Authentication, ,, ”, ArXiv, e, -, prints, ,, Jul., 2018, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('43', 'NUM'), (']', 'PUNCT'), ('Q.', 'PROPN'), ('Wang', 'PROPN'), (',', 'PUNCT'), ('H.', 'PROPN'), ('Li', 'PROPN'), (',', 'PUNCT'), ('Z.', 'PROPN'), ('Chen', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('Zhao', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('Ye', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('Cai', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Su-', 'PROPN'), ('pervised', 'ADJ'), ('Semi', 'ADJ'), ('-', 'ADJ'), ('Supervised', 'ADJ'), ('Deep', 'PROPN'), ('Neural', 'PROPN'), ('Networks', 'PROPN'), ('CSI-', 'PROPN'), ('Based', 'VERB'), ('Authentication', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('ArXiv', 'PROPN'), ('e', 'NOUN'), ('-', 'NOUN'), ('prints', 'NOUN'), (',', 'PUNCT'), ('Jul.', 'PROPN'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('43', 'nummod'), (']', 'punct'), ('Q.', 'compound'), ('Wang', 'ROOT'), (',', 'punct'), ('H.', 'compound'), ('Li', 'appos'), (',', 'punct'), ('Z.', 'compound'), ('Chen', 'conj'), (',', 'punct'), ('D.', 'compound'), ('Zhao', 'conj'), (',', 'punct'), ('S.', 'compound'), ('Ye', 'conj'), (',', 'punct'), ('J.', 'compound'), ('Cai', 'conj'), (',', 'punct'), ('“', 'punct'), ('Su-', 'npadvmod'), ('pervised', 'punct'), ('Semi', 'amod'), ('-', 'amod'), ('Supervised', 'amod'), ('Deep', 'compound'), ('Neural', 'compound'), ('Networks', 'conj'), ('CSI-', 'compound'), ('Based', 'compound'), ('Authentication', 'pobj'), (',', 'punct'), ('”', 'punct'), ('ArXiv', 'appos'), ('e', 'punct'), ('-', 'punct'), ('prints', 'appos'), (',', 'punct'), ('Jul.', 'appos'), ('2018', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[[, 43], [43, ]], [], Q.], [Q., Wang], [Wang, ,], [,, H.], [H., Li], [Li, ,], [,, Z.], [Z., Chen], [Chen, ,], [,, D.], [D., Zhao], [Zhao, ,], [,, S.], [S., Ye], [Ye, ,], [,, J.], [J., Cai], [Cai, ,], [,, “], [“, Su-], [Su-, pervised], [pervised, Semi], [Semi, -], [-, Supervised], [Supervised, Deep], [Deep, Neural], [Neural, Networks], [Networks, CSI-], [CSI-, Based], [Based, Authentication], [Authentication, ,], [,, ”], [”, ArXiv], [ArXiv, e], [e, -], [-, prints], [prints, ,], [,, Jul.], [Jul., 2018], [2018, .]]

>> Trigrams: 
[[[, 43, ]], [43, ], Q.], [], Q., Wang], [Q., Wang, ,], [Wang, ,, H.], [,, H., Li], [H., Li, ,], [Li, ,, Z.], [,, Z., Chen], [Z., Chen, ,], [Chen, ,, D.], [,, D., Zhao], [D., Zhao, ,], [Zhao, ,, S.], [,, S., Ye], [S., Ye, ,], [Ye, ,, J.], [,, J., Cai], [J., Cai, ,], [Cai, ,, “], [,, “, Su-], [“, Su-, pervised], [Su-, pervised, Semi], [pervised, Semi, -], [Semi, -, Supervised], [-, Supervised, Deep], [Supervised, Deep, Neural], [Deep, Neural, Networks], [Neural, Networks, CSI-], [Networks, CSI-, Based], [CSI-, Based, Authentication], [Based, Authentication, ,], [Authentication, ,, ”], [,, ”, ArXiv], [”, ArXiv, e], [ArXiv, e, -], [e, -, prints], [-, prints, ,], [prints, ,, Jul.], [,, Jul., 2018], [Jul., 2018, .]]

>> Noun Phrases are: 
[[43] Q. Wang, H. Li, Z. Chen, D. Zhao, S. Ye, J. Cai, Semi-Supervised Deep Neural Networks, CSI- Based Authentication, ArXiv, prints, Jul.]

>> Named Entities are: 
[('43', 'CARDINAL'), ('Q. Wang', 'PERSON'), ('H. Li', 'PERSON'), ('Z. Chen', 'PERSON'), ('D. Zhao', 'PERSON'), ('S. Ye', 'PERSON'), ('J. Cai', 'PERSON'), ('CSI- Based Authentication', 'ORG'), ('Jul. 2018', 'DATE')]


============================ Sentence 886 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 887 =============================

[44] H. Sun, X. Chen, Q. Shi, M. Hong, X. Fu, and N. D. Sidiropou- los, “Learning to optimize: Training deep neural networks for wireless resource management,” in IEEE Signal Processing Advances in Wireless Communications (SPAWC) 2017, 2017, pp. 


>> Tokens are: 
[[, 44, ], H., Sun, ,, X., Chen, ,, Q., Shi, ,, M., Hong, ,, X., Fu, ,, N., D., Sidiropou-, los, ,, “, Learning, optimize, :, Training, deep, neural, networks, wireless, resource, management, ,, ”, IEEE, Signal, Processing, Advances, Wireless, Communications, (, SPAWC, ), 2017, ,, 2017, ,, pp, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('44', 'NUM'), (']', 'PUNCT'), ('H.', 'PROPN'), ('Sun', 'PROPN'), (',', 'PUNCT'), ('X.', 'PROPN'), ('Chen', 'PROPN'), (',', 'PUNCT'), ('Q.', 'PROPN'), ('Shi', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('Hong', 'PROPN'), (',', 'PUNCT'), ('X.', 'PROPN'), ('Fu', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), ('D.', 'PROPN'), ('Sidiropou-', 'PROPN'), ('los', 'X'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Learning', 'VERB'), ('optimize', 'VERB'), (':', 'PUNCT'), ('Training', 'VERB'), ('deep', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('wireless', 'ADJ'), ('resource', 'NOUN'), ('management', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('Signal', 'PROPN'), ('Processing', 'PROPN'), ('Advances', 'PROPN'), ('Wireless', 'PROPN'), ('Communications', 'PROPN'), ('(', 'PUNCT'), ('SPAWC', 'PROPN'), (')', 'PUNCT'), ('2017', 'NUM'), (',', 'PUNCT'), ('2017', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('44', 'nummod'), (']', 'punct'), ('H.', 'compound'), ('Sun', 'ROOT'), (',', 'punct'), ('X.', 'compound'), ('Chen', 'appos'), (',', 'punct'), ('Q.', 'compound'), ('Shi', 'conj'), (',', 'punct'), ('M.', 'compound'), ('Hong', 'conj'), (',', 'punct'), ('X.', 'compound'), ('Fu', 'conj'), (',', 'punct'), ('N.', 'compound'), ('D.', 'compound'), ('Sidiropou-', 'compound'), ('los', 'conj'), (',', 'punct'), ('“', 'punct'), ('Learning', 'acl'), ('optimize', 'xcomp'), (':', 'punct'), ('Training', 'acl'), ('deep', 'amod'), ('neural', 'amod'), ('networks', 'dobj'), ('wireless', 'amod'), ('resource', 'compound'), ('management', 'pobj'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('Signal', 'compound'), ('Processing', 'compound'), ('Advances', 'pobj'), ('Wireless', 'compound'), ('Communications', 'pobj'), ('(', 'punct'), ('SPAWC', 'appos'), (')', 'punct'), ('2017', 'npadvmod'), (',', 'punct'), ('2017', 'appos'), (',', 'punct'), ('pp', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[[, 44], [44, ]], [], H.], [H., Sun], [Sun, ,], [,, X.], [X., Chen], [Chen, ,], [,, Q.], [Q., Shi], [Shi, ,], [,, M.], [M., Hong], [Hong, ,], [,, X.], [X., Fu], [Fu, ,], [,, N.], [N., D.], [D., Sidiropou-], [Sidiropou-, los], [los, ,], [,, “], [“, Learning], [Learning, optimize], [optimize, :], [:, Training], [Training, deep], [deep, neural], [neural, networks], [networks, wireless], [wireless, resource], [resource, management], [management, ,], [,, ”], [”, IEEE], [IEEE, Signal], [Signal, Processing], [Processing, Advances], [Advances, Wireless], [Wireless, Communications], [Communications, (], [(, SPAWC], [SPAWC, )], [), 2017], [2017, ,], [,, 2017], [2017, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[[, 44, ]], [44, ], H.], [], H., Sun], [H., Sun, ,], [Sun, ,, X.], [,, X., Chen], [X., Chen, ,], [Chen, ,, Q.], [,, Q., Shi], [Q., Shi, ,], [Shi, ,, M.], [,, M., Hong], [M., Hong, ,], [Hong, ,, X.], [,, X., Fu], [X., Fu, ,], [Fu, ,, N.], [,, N., D.], [N., D., Sidiropou-], [D., Sidiropou-, los], [Sidiropou-, los, ,], [los, ,, “], [,, “, Learning], [“, Learning, optimize], [Learning, optimize, :], [optimize, :, Training], [:, Training, deep], [Training, deep, neural], [deep, neural, networks], [neural, networks, wireless], [networks, wireless, resource], [wireless, resource, management], [resource, management, ,], [management, ,, ”], [,, ”, IEEE], [”, IEEE, Signal], [IEEE, Signal, Processing], [Signal, Processing, Advances], [Processing, Advances, Wireless], [Advances, Wireless, Communications], [Wireless, Communications, (], [Communications, (, SPAWC], [(, SPAWC, )], [SPAWC, ), 2017], [), 2017, ,], [2017, ,, 2017], [,, 2017, ,], [2017, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[[44] H. Sun, X. Chen, Q. Shi, M. Hong, X. Fu, deep neural networks, wireless resource management, IEEE Signal Processing Advances, Wireless Communications, (SPAWC]

>> Named Entities are: 
[('H. Sun', 'PERSON'), ('X. Chen', 'PERSON'), ('Q. Shi', 'PERSON'), ('M. Hong', 'PERSON'), ('X. Fu', 'PERSON'), ('N. D.', 'NORP'), ('IEEE Signal Processing Advances', 'ORG'), ('2017', 'DATE'), ('2017', 'DATE')]


============================ Sentence 888 =============================

1–6. 


>> Tokens are: 
[1–6, .] 

>> PoS Tags are: 
[('1–6', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1–6', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[1–6, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1–6', 'CARDINAL')]


============================ Sentence 889 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 890 =============================

[45] A. Zappone, M. Di Renzo, M. Debbah, T. T. Lam, and X. Qian, “Model-Aided Wireless Artificial Intelligence: Embedding Ex- pert Knowledge in Deep Neural Networks Towards Wireless Systems Optimization,” ArXiv e-prints, Aug. 2018. 


>> Tokens are: 
[[, 45, ], A., Zappone, ,, M., Di, Renzo, ,, M., Debbah, ,, T., T., Lam, ,, X., Qian, ,, “, Model, -, Aided, Wireless, Artificial, Intelligence, :, Embedding, Ex-, pert, Knowledge, Deep, Neural, Networks, Wireless, Systems, Optimization, ,, ”, ArXiv, e, -, prints, ,, Aug., 2018, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('45', 'NUM'), (']', 'PUNCT'), ('A.', 'PROPN'), ('Zappone', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('Di', 'PROPN'), ('Renzo', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('Debbah', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), ('T.', 'PROPN'), ('Lam', 'PROPN'), (',', 'PUNCT'), ('X.', 'PROPN'), ('Qian', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Model', 'PROPN'), ('-', 'PUNCT'), ('Aided', 'PROPN'), ('Wireless', 'PROPN'), ('Artificial', 'PROPN'), ('Intelligence', 'PROPN'), (':', 'PUNCT'), ('Embedding', 'VERB'), ('Ex-', 'ADP'), ('pert', 'NOUN'), ('Knowledge', 'PROPN'), ('Deep', 'PROPN'), ('Neural', 'PROPN'), ('Networks', 'PROPN'), ('Wireless', 'PROPN'), ('Systems', 'PROPN'), ('Optimization', 'PROPN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('ArXiv', 'PROPN'), ('e', 'NOUN'), ('-', 'NOUN'), ('prints', 'NOUN'), (',', 'PUNCT'), ('Aug.', 'PROPN'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('45', 'dep'), (']', 'punct'), ('A.', 'compound'), ('Zappone', 'nsubj'), (',', 'punct'), ('M.', 'compound'), ('Di', 'compound'), ('Renzo', 'conj'), (',', 'punct'), ('M.', 'compound'), ('Debbah', 'conj'), (',', 'punct'), ('T.', 'compound'), ('T.', 'compound'), ('Lam', 'conj'), (',', 'punct'), ('X.', 'compound'), ('Qian', 'conj'), (',', 'punct'), ('“', 'punct'), ('Model', 'npadvmod'), ('-', 'punct'), ('Aided', 'amod'), ('Wireless', 'compound'), ('Artificial', 'compound'), ('Intelligence', 'appos'), (':', 'punct'), ('Embedding', 'acl'), ('Ex-', 'prep'), ('pert', 'ROOT'), ('Knowledge', 'dobj'), ('Deep', 'compound'), ('Neural', 'compound'), ('Networks', 'pobj'), ('Wireless', 'compound'), ('Systems', 'compound'), ('Optimization', 'pobj'), (',', 'punct'), ('”', 'punct'), ('ArXiv', 'appos'), ('e', 'punct'), ('-', 'appos'), ('prints', 'appos'), (',', 'punct'), ('Aug.', 'npadvmod'), ('2018', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[[, 45], [45, ]], [], A.], [A., Zappone], [Zappone, ,], [,, M.], [M., Di], [Di, Renzo], [Renzo, ,], [,, M.], [M., Debbah], [Debbah, ,], [,, T.], [T., T.], [T., Lam], [Lam, ,], [,, X.], [X., Qian], [Qian, ,], [,, “], [“, Model], [Model, -], [-, Aided], [Aided, Wireless], [Wireless, Artificial], [Artificial, Intelligence], [Intelligence, :], [:, Embedding], [Embedding, Ex-], [Ex-, pert], [pert, Knowledge], [Knowledge, Deep], [Deep, Neural], [Neural, Networks], [Networks, Wireless], [Wireless, Systems], [Systems, Optimization], [Optimization, ,], [,, ”], [”, ArXiv], [ArXiv, e], [e, -], [-, prints], [prints, ,], [,, Aug.], [Aug., 2018], [2018, .]]

>> Trigrams: 
[[[, 45, ]], [45, ], A.], [], A., Zappone], [A., Zappone, ,], [Zappone, ,, M.], [,, M., Di], [M., Di, Renzo], [Di, Renzo, ,], [Renzo, ,, M.], [,, M., Debbah], [M., Debbah, ,], [Debbah, ,, T.], [,, T., T.], [T., T., Lam], [T., Lam, ,], [Lam, ,, X.], [,, X., Qian], [X., Qian, ,], [Qian, ,, “], [,, “, Model], [“, Model, -], [Model, -, Aided], [-, Aided, Wireless], [Aided, Wireless, Artificial], [Wireless, Artificial, Intelligence], [Artificial, Intelligence, :], [Intelligence, :, Embedding], [:, Embedding, Ex-], [Embedding, Ex-, pert], [Ex-, pert, Knowledge], [pert, Knowledge, Deep], [Knowledge, Deep, Neural], [Deep, Neural, Networks], [Neural, Networks, Wireless], [Networks, Wireless, Systems], [Wireless, Systems, Optimization], [Systems, Optimization, ,], [Optimization, ,, ”], [,, ”, ArXiv], [”, ArXiv, e], [ArXiv, e, -], [e, -, prints], [-, prints, ,], [prints, ,, Aug.], [,, Aug., 2018], [Aug., 2018, .]]

>> Noun Phrases are: 
[[45] A. Zappone, M. Di Renzo, M. Debbah, T. T. Lam, X. Qian, Model-Aided Wireless Artificial Intelligence, Knowledge, Deep Neural Networks, Wireless Systems Optimization, ArXiv, -, prints]

>> Named Entities are: 
[('M. Debbah', 'PERSON'), ('T. T. Lam', 'PERSON'), ('X. Qian', 'PERSON'), ('Model-Aided Wireless Artificial Intelligence: Embedding Ex- pert Knowledge', 'WORK_OF_ART'), ('ArXiv', 'WORK_OF_ART'), ('Aug. 2018', 'DATE')]


============================ Sentence 891 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 892 =============================

[46] J. Shu, Z. Xu, and D. Meng, “Small Sample Learning in Big Data Era,” ArXiv e-prints, Aug. 2018. 


>> Tokens are: 
[[, 46, ], J., Shu, ,, Z., Xu, ,, D., Meng, ,, “, Small, Sample, Learning, Big, Data, Era, ,, ”, ArXiv, e, -, prints, ,, Aug., 2018, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('46', 'NUM'), (']', 'PUNCT'), ('J.', 'PROPN'), ('Shu', 'PROPN'), (',', 'PUNCT'), ('Z.', 'PROPN'), ('Xu', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('Meng', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Small', 'ADJ'), ('Sample', 'PROPN'), ('Learning', 'PROPN'), ('Big', 'PROPN'), ('Data', 'PROPN'), ('Era', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('ArXiv', 'PROPN'), ('e', 'NOUN'), ('-', 'NOUN'), ('prints', 'NOUN'), (',', 'PUNCT'), ('Aug.', 'PROPN'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('46', 'nummod'), (']', 'punct'), ('J.', 'compound'), ('Shu', 'ROOT'), (',', 'punct'), ('Z.', 'compound'), ('Xu', 'appos'), (',', 'punct'), ('D.', 'compound'), ('Meng', 'conj'), (',', 'punct'), ('“', 'punct'), ('Small', 'amod'), ('Sample', 'compound'), ('Learning', 'appos'), ('Big', 'compound'), ('Data', 'compound'), ('Era', 'pobj'), (',', 'punct'), ('”', 'punct'), ('ArXiv', 'appos'), ('e', 'punct'), ('-', 'appos'), ('prints', 'appos'), (',', 'punct'), ('Aug.', 'npadvmod'), ('2018', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[[, 46], [46, ]], [], J.], [J., Shu], [Shu, ,], [,, Z.], [Z., Xu], [Xu, ,], [,, D.], [D., Meng], [Meng, ,], [,, “], [“, Small], [Small, Sample], [Sample, Learning], [Learning, Big], [Big, Data], [Data, Era], [Era, ,], [,, ”], [”, ArXiv], [ArXiv, e], [e, -], [-, prints], [prints, ,], [,, Aug.], [Aug., 2018], [2018, .]]

>> Trigrams: 
[[[, 46, ]], [46, ], J.], [], J., Shu], [J., Shu, ,], [Shu, ,, Z.], [,, Z., Xu], [Z., Xu, ,], [Xu, ,, D.], [,, D., Meng], [D., Meng, ,], [Meng, ,, “], [,, “, Small], [“, Small, Sample], [Small, Sample, Learning], [Sample, Learning, Big], [Learning, Big, Data], [Big, Data, Era], [Data, Era, ,], [Era, ,, ”], [,, ”, ArXiv], [”, ArXiv, e], [ArXiv, e, -], [e, -, prints], [-, prints, ,], [prints, ,, Aug.], [,, Aug., 2018], [Aug., 2018, .]]

>> Noun Phrases are: 
[[46] J. Shu, Z. Xu, D. Meng, Small Sample Learning, Big Data Era, ArXiv, -, prints]

>> Named Entities are: 
[('46', 'CARDINAL'), ('J. Shu', 'PERSON'), ('Z. Xu', 'PERSON'), ('D. Meng', 'PERSON'), ('Small Sample Learning', 'WORK_OF_ART'), ('Big Data Era', 'ORG'), ('ArXiv', 'WORK_OF_ART'), ('Aug. 2018', 'DATE')]


============================ Sentence 893 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 894 =============================

[47] A. Balatsoukas-Stimming, “Non-linear digital self-interference cancellation for in-band full-duplex radios using neural net- works,” arXiv preprint arXiv:1711.00379, 2017. 


>> Tokens are: 
[[, 47, ], A., Balatsoukas, -, Stimming, ,, “, Non, -, linear, digital, self, -, interference, cancellation, -, band, -, duplex, radios, neural, net-, works, ,, ”, arXiv, preprint, arXiv:1711.00379, ,, 2017, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('47', 'NUM'), (']', 'PUNCT'), ('A.', 'PROPN'), ('Balatsoukas', 'PROPN'), ('-', 'PUNCT'), ('Stimming', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Non', 'ADJ'), ('-', 'ADJ'), ('linear', 'ADJ'), ('digital', 'ADJ'), ('self', 'NOUN'), ('-', 'PUNCT'), ('interference', 'NOUN'), ('cancellation', 'NOUN'), ('-', 'PUNCT'), ('band', 'NOUN'), ('-', 'PUNCT'), ('duplex', 'NOUN'), ('radios', 'NOUN'), ('neural', 'ADJ'), ('net-', 'ADJ'), ('works', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('arXiv', 'NOUN'), ('preprint', 'NOUN'), ('arXiv:1711.00379', 'PROPN'), (',', 'PUNCT'), ('2017', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('47', 'dep'), (']', 'punct'), ('A.', 'compound'), ('Balatsoukas', 'compound'), ('-', 'punct'), ('Stimming', 'nsubj'), (',', 'punct'), ('“', 'punct'), ('Non', 'amod'), ('-', 'amod'), ('linear', 'amod'), ('digital', 'amod'), ('self', 'compound'), ('-', 'punct'), ('interference', 'compound'), ('cancellation', 'appos'), ('-', 'punct'), ('band', 'nmod'), ('-', 'punct'), ('duplex', 'compound'), ('radios', 'pobj'), ('neural', 'amod'), ('net-', 'compound'), ('works', 'dobj'), (',', 'punct'), ('”', 'punct'), ('arXiv', 'nsubj'), ('preprint', 'ROOT'), ('arXiv:1711.00379', 'dobj'), (',', 'punct'), ('2017', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[[, 47], [47, ]], [], A.], [A., Balatsoukas], [Balatsoukas, -], [-, Stimming], [Stimming, ,], [,, “], [“, Non], [Non, -], [-, linear], [linear, digital], [digital, self], [self, -], [-, interference], [interference, cancellation], [cancellation, -], [-, band], [band, -], [-, duplex], [duplex, radios], [radios, neural], [neural, net-], [net-, works], [works, ,], [,, ”], [”, arXiv], [arXiv, preprint], [preprint, arXiv:1711.00379], [arXiv:1711.00379, ,], [,, 2017], [2017, .]]

>> Trigrams: 
[[[, 47, ]], [47, ], A.], [], A., Balatsoukas], [A., Balatsoukas, -], [Balatsoukas, -, Stimming], [-, Stimming, ,], [Stimming, ,, “], [,, “, Non], [“, Non, -], [Non, -, linear], [-, linear, digital], [linear, digital, self], [digital, self, -], [self, -, interference], [-, interference, cancellation], [interference, cancellation, -], [cancellation, -, band], [-, band, -], [band, -, duplex], [-, duplex, radios], [duplex, radios, neural], [radios, neural, net-], [neural, net-, works], [net-, works, ,], [works, ,, ”], [,, ”, arXiv], [”, arXiv, preprint], [arXiv, preprint, arXiv:1711.00379], [preprint, arXiv:1711.00379, ,], [arXiv:1711.00379, ,, 2017], [,, 2017, .]]

>> Noun Phrases are: 
[[47] A. Balatsoukas-Stimming, “Non-linear digital self-interference cancellation, in-band full-duplex radios, neural net- works, arXiv, arXiv:1711.00379]

>> Named Entities are: 
[('47', 'CARDINAL'), ('2017', 'DATE')]


============================ Sentence 895 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 896 =============================

[48] N. Strodthoff, B. Göktepe, T. Schierl, C. Hellge, and W. Samek, “Enhanced Machine Learning Techniques for Early HARQ Feedback Prediction in 5G,” ArXiv e-prints, Jul. 2018. 


>> Tokens are: 
[[, 48, ], N., Strodthoff, ,, B., Göktepe, ,, T., Schierl, ,, C., Hellge, ,, W., Samek, ,, “, Enhanced, Machine, Learning, Techniques, Early, HARQ, Feedback, Prediction, 5, G, ,, ”, ArXiv, e, -, prints, ,, Jul., 2018, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('48', 'NUM'), (']', 'PUNCT'), ('N.', 'PROPN'), ('Strodthoff', 'PROPN'), (',', 'PUNCT'), ('B.', 'PROPN'), ('Göktepe', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), ('Schierl', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), ('Hellge', 'PROPN'), (',', 'PUNCT'), ('W.', 'PROPN'), ('Samek', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Enhanced', 'ADJ'), ('Machine', 'NOUN'), ('Learning', 'PROPN'), ('Techniques', 'PROPN'), ('Early', 'PROPN'), ('HARQ', 'PROPN'), ('Feedback', 'PROPN'), ('Prediction', 'PROPN'), ('5', 'NUM'), ('G', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('ArXiv', 'PROPN'), ('e', 'NOUN'), ('-', 'NOUN'), ('prints', 'NOUN'), (',', 'PUNCT'), ('Jul.', 'PROPN'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('48', 'dep'), (']', 'punct'), ('N.', 'compound'), ('Strodthoff', 'ROOT'), (',', 'punct'), ('B.', 'compound'), ('Göktepe', 'appos'), (',', 'punct'), ('T.', 'compound'), ('Schierl', 'conj'), (',', 'punct'), ('C.', 'compound'), ('Hellge', 'appos'), (',', 'punct'), ('W.', 'compound'), ('Samek', 'conj'), (',', 'punct'), ('“', 'punct'), ('Enhanced', 'amod'), ('Machine', 'compound'), ('Learning', 'compound'), ('Techniques', 'appos'), ('Early', 'amod'), ('HARQ', 'compound'), ('Feedback', 'compound'), ('Prediction', 'pobj'), ('5', 'nummod'), ('G', 'pobj'), (',', 'punct'), ('”', 'punct'), ('ArXiv', 'appos'), ('e', 'punct'), ('-', 'punct'), ('prints', 'appos'), (',', 'punct'), ('Jul.', 'appos'), ('2018', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[[, 48], [48, ]], [], N.], [N., Strodthoff], [Strodthoff, ,], [,, B.], [B., Göktepe], [Göktepe, ,], [,, T.], [T., Schierl], [Schierl, ,], [,, C.], [C., Hellge], [Hellge, ,], [,, W.], [W., Samek], [Samek, ,], [,, “], [“, Enhanced], [Enhanced, Machine], [Machine, Learning], [Learning, Techniques], [Techniques, Early], [Early, HARQ], [HARQ, Feedback], [Feedback, Prediction], [Prediction, 5], [5, G], [G, ,], [,, ”], [”, ArXiv], [ArXiv, e], [e, -], [-, prints], [prints, ,], [,, Jul.], [Jul., 2018], [2018, .]]

>> Trigrams: 
[[[, 48, ]], [48, ], N.], [], N., Strodthoff], [N., Strodthoff, ,], [Strodthoff, ,, B.], [,, B., Göktepe], [B., Göktepe, ,], [Göktepe, ,, T.], [,, T., Schierl], [T., Schierl, ,], [Schierl, ,, C.], [,, C., Hellge], [C., Hellge, ,], [Hellge, ,, W.], [,, W., Samek], [W., Samek, ,], [Samek, ,, “], [,, “, Enhanced], [“, Enhanced, Machine], [Enhanced, Machine, Learning], [Machine, Learning, Techniques], [Learning, Techniques, Early], [Techniques, Early, HARQ], [Early, HARQ, Feedback], [HARQ, Feedback, Prediction], [Feedback, Prediction, 5], [Prediction, 5, G], [5, G, ,], [G, ,, ”], [,, ”, ArXiv], [”, ArXiv, e], [ArXiv, e, -], [e, -, prints], [-, prints, ,], [prints, ,, Jul.], [,, Jul., 2018], [Jul., 2018, .]]

>> Noun Phrases are: 
[[48] N. Strodthoff, B. Göktepe, T. Schierl, C. Hellge, W. Samek, Enhanced Machine Learning Techniques, Early HARQ Feedback Prediction, 5G, ArXiv, prints, Jul.]

>> Named Entities are: 
[('48', 'CARDINAL'), ('N. Strodthoff', 'PERSON'), ('B. Göktepe', 'PERSON'), ('T. Schierl', 'PERSON'), ('C. Hellge', 'PERSON'), ('W. Samek', 'PERSON'), ('Enhanced Machine Learning Techniques for Early HARQ Feedback Prediction', 'WORK_OF_ART'), ('5', 'CARDINAL'), ('ArXiv', 'WORK_OF_ART'), ('Jul. 2018', 'DATE')]


============================ Sentence 897 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 898 =============================

[49] V. K. Tumuluru, P. Wang, and D. Niyato, “A neural net- work based spectrum prediction scheme for cognitive radio,” in IEEE International Conference on Communications (ICC 2010), 2010, pp. 


>> Tokens are: 
[[, 49, ], V., K., Tumuluru, ,, P., Wang, ,, D., Niyato, ,, “, neural, net-, work, based, spectrum, prediction, scheme, cognitive, radio, ,, ”, IEEE, International, Conference, Communications, (, ICC, 2010, ), ,, 2010, ,, pp, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('49', 'NUM'), (']', 'PUNCT'), ('V.', 'PROPN'), ('K.', 'PROPN'), ('Tumuluru', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('Wang', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('Niyato', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('neural', 'ADJ'), ('net-', 'NOUN'), ('work', 'NOUN'), ('based', 'VERB'), ('spectrum', 'NOUN'), ('prediction', 'NOUN'), ('scheme', 'NOUN'), ('cognitive', 'ADJ'), ('radio', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('International', 'PROPN'), ('Conference', 'PROPN'), ('Communications', 'PROPN'), ('(', 'PUNCT'), ('ICC', 'PROPN'), ('2010', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('2010', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('49', 'nummod'), (']', 'punct'), ('V.', 'compound'), ('K.', 'compound'), ('Tumuluru', 'ROOT'), (',', 'punct'), ('P.', 'compound'), ('Wang', 'conj'), (',', 'punct'), ('D.', 'compound'), ('Niyato', 'conj'), (',', 'punct'), ('“', 'punct'), ('neural', 'amod'), ('net-', 'amod'), ('work', 'nmod'), ('based', 'prep'), ('spectrum', 'compound'), ('prediction', 'compound'), ('scheme', 'appos'), ('cognitive', 'amod'), ('radio', 'pobj'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('International', 'compound'), ('Conference', 'pobj'), ('Communications', 'pobj'), ('(', 'punct'), ('ICC', 'appos'), ('2010', 'nummod'), (')', 'punct'), (',', 'punct'), ('2010', 'npadvmod'), (',', 'punct'), ('pp', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[[, 49], [49, ]], [], V.], [V., K.], [K., Tumuluru], [Tumuluru, ,], [,, P.], [P., Wang], [Wang, ,], [,, D.], [D., Niyato], [Niyato, ,], [,, “], [“, neural], [neural, net-], [net-, work], [work, based], [based, spectrum], [spectrum, prediction], [prediction, scheme], [scheme, cognitive], [cognitive, radio], [radio, ,], [,, ”], [”, IEEE], [IEEE, International], [International, Conference], [Conference, Communications], [Communications, (], [(, ICC], [ICC, 2010], [2010, )], [), ,], [,, 2010], [2010, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[[, 49, ]], [49, ], V.], [], V., K.], [V., K., Tumuluru], [K., Tumuluru, ,], [Tumuluru, ,, P.], [,, P., Wang], [P., Wang, ,], [Wang, ,, D.], [,, D., Niyato], [D., Niyato, ,], [Niyato, ,, “], [,, “, neural], [“, neural, net-], [neural, net-, work], [net-, work, based], [work, based, spectrum], [based, spectrum, prediction], [spectrum, prediction, scheme], [prediction, scheme, cognitive], [scheme, cognitive, radio], [cognitive, radio, ,], [radio, ,, ”], [,, ”, IEEE], [”, IEEE, International], [IEEE, International, Conference], [International, Conference, Communications], [Conference, Communications, (], [Communications, (, ICC], [(, ICC, 2010], [ICC, 2010, )], [2010, ), ,], [), ,, 2010], [,, 2010, ,], [2010, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[[49] V. K. Tumuluru, P. Wang, D. Niyato, A neural net- work based spectrum prediction scheme, cognitive radio, IEEE International Conference, Communications, ICC]

>> Named Entities are: 
[('49', 'CARDINAL'), ('V. K. Tumuluru', 'PERSON'), ('P. Wang', 'PERSON'), ('D. Niyato', 'ORG'), ('IEEE International Conference on Communications', 'ORG'), ('2010', 'DATE'), ('2010', 'DATE')]


============================ Sentence 899 =============================

1–5. 


>> Tokens are: 
[1–5, .] 

>> PoS Tags are: 
[('1–5', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1–5', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[1–5, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 900 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 901 =============================

[50] D. Del Testa, M. Danieletto, G. M. Di Nunzio, and M. Zorzi, “Estimating the number of receiving nodes in 802.11 networks via machine learning techniques,” in IEEE Global Communica- tions Conference (GLOBECOM), 2016, pp. 


>> Tokens are: 
[[, 50, ], D., Del, Testa, ,, M., Danieletto, ,, G., M., Di, Nunzio, ,, M., Zorzi, ,, “, Estimating, number, receiving, nodes, 802.11, networks, machine, learning, techniques, ,, ”, IEEE, Global, Communica-, tions, Conference, (, GLOBECOM, ), ,, 2016, ,, pp, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('50', 'NUM'), (']', 'PUNCT'), ('D.', 'PROPN'), ('Del', 'PROPN'), ('Testa', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('Danieletto', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('M.', 'PROPN'), ('Di', 'PROPN'), ('Nunzio', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('Zorzi', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Estimating', 'VERB'), ('number', 'NOUN'), ('receiving', 'VERB'), ('nodes', 'NOUN'), ('802.11', 'NUM'), ('networks', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('techniques', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('Global', 'PROPN'), ('Communica-', 'PROPN'), ('tions', 'NOUN'), ('Conference', 'PROPN'), ('(', 'PUNCT'), ('GLOBECOM', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('2016', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('50', 'dep'), (']', 'punct'), ('D.', 'compound'), ('Del', 'compound'), ('Testa', 'nsubj'), (',', 'punct'), ('M.', 'compound'), ('Danieletto', 'appos'), (',', 'punct'), ('G.', 'compound'), ('M.', 'compound'), ('Di', 'compound'), ('Nunzio', 'conj'), (',', 'punct'), ('M.', 'compound'), ('Zorzi', 'conj'), (',', 'punct'), ('“', 'punct'), ('Estimating', 'ROOT'), ('number', 'dobj'), ('receiving', 'pcomp'), ('nodes', 'dobj'), ('802.11', 'nummod'), ('networks', 'pobj'), ('machine', 'compound'), ('learning', 'compound'), ('techniques', 'pobj'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('Global', 'compound'), ('Communica-', 'pobj'), ('tions', 'dep'), ('Conference', 'dobj'), ('(', 'punct'), ('GLOBECOM', 'appos'), (')', 'punct'), (',', 'punct'), ('2016', 'appos'), (',', 'punct'), ('pp', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[[, 50], [50, ]], [], D.], [D., Del], [Del, Testa], [Testa, ,], [,, M.], [M., Danieletto], [Danieletto, ,], [,, G.], [G., M.], [M., Di], [Di, Nunzio], [Nunzio, ,], [,, M.], [M., Zorzi], [Zorzi, ,], [,, “], [“, Estimating], [Estimating, number], [number, receiving], [receiving, nodes], [nodes, 802.11], [802.11, networks], [networks, machine], [machine, learning], [learning, techniques], [techniques, ,], [,, ”], [”, IEEE], [IEEE, Global], [Global, Communica-], [Communica-, tions], [tions, Conference], [Conference, (], [(, GLOBECOM], [GLOBECOM, )], [), ,], [,, 2016], [2016, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[[, 50, ]], [50, ], D.], [], D., Del], [D., Del, Testa], [Del, Testa, ,], [Testa, ,, M.], [,, M., Danieletto], [M., Danieletto, ,], [Danieletto, ,, G.], [,, G., M.], [G., M., Di], [M., Di, Nunzio], [Di, Nunzio, ,], [Nunzio, ,, M.], [,, M., Zorzi], [M., Zorzi, ,], [Zorzi, ,, “], [,, “, Estimating], [“, Estimating, number], [Estimating, number, receiving], [number, receiving, nodes], [receiving, nodes, 802.11], [nodes, 802.11, networks], [802.11, networks, machine], [networks, machine, learning], [machine, learning, techniques], [learning, techniques, ,], [techniques, ,, ”], [,, ”, IEEE], [”, IEEE, Global], [IEEE, Global, Communica-], [Global, Communica-, tions], [Communica-, tions, Conference], [tions, Conference, (], [Conference, (, GLOBECOM], [(, GLOBECOM, )], [GLOBECOM, ), ,], [), ,, 2016], [,, 2016, ,], [2016, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[[50] D. Del Testa, M. Danieletto, G. M. Di Nunzio, M. Zorzi, the number, nodes, 802.11 networks, machine learning techniques, IEEE Global Communica-, Conference, GLOBECOM]

>> Named Entities are: 
[('50', 'CARDINAL'), ('M. Danieletto', 'PERSON'), ('G. M. Di Nunzio', 'PERSON'), ('M. Zorzi', 'PERSON'), ('802.11', 'CARDINAL'), ('2016', 'DATE')]


============================ Sentence 902 =============================

1–7. 


>> Tokens are: 
[1–7, .] 

>> PoS Tags are: 
[('1–7', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1–7', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[1–7, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 903 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 904 =============================

[51] H. Okamoto, T. Nishio, K. Nakashima, Y. Koda, K. Ya- 


>> Tokens are: 
[[, 51, ], H., Okamoto, ,, T., Nishio, ,, K., Nakashima, ,, Y., Koda, ,, K., Ya-] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('51', 'NUM'), (']', 'PUNCT'), ('H.', 'PROPN'), ('Okamoto', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), ('Nishio', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), ('Nakashima', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('Koda', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), ('Ya-', 'PROPN')] 

>> Dependency Tags are: 
[('[', 'punct'), ('51', 'nummod'), (']', 'punct'), ('H.', 'compound'), ('Okamoto', 'ROOT'), (',', 'punct'), ('T.', 'compound'), ('Nishio', 'conj'), (',', 'punct'), ('K.', 'compound'), ('Nakashima', 'conj'), (',', 'punct'), ('Y.', 'compound'), ('Koda', 'conj'), (',', 'punct'), ('K.', 'compound'), ('Ya-', 'punct')]

>> Bigrams: 
[[[, 51], [51, ]], [], H.], [H., Okamoto], [Okamoto, ,], [,, T.], [T., Nishio], [Nishio, ,], [,, K.], [K., Nakashima], [Nakashima, ,], [,, Y.], [Y., Koda], [Koda, ,], [,, K.], [K., Ya-]]

>> Trigrams: 
[[[, 51, ]], [51, ], H.], [], H., Okamoto], [H., Okamoto, ,], [Okamoto, ,, T.], [,, T., Nishio], [T., Nishio, ,], [Nishio, ,, K.], [,, K., Nakashima], [K., Nakashima, ,], [Nakashima, ,, Y.], [,, Y., Koda], [Y., Koda, ,], [Koda, ,, K.], [,, K., Ya-]]

>> Noun Phrases are: 
[[51] H. Okamoto, T. Nishio, K. Nakashima, Y. Koda]

>> Named Entities are: 
[('51] H. Okamoto', 'CARDINAL'), ('T. Nishio', 'GPE'), ('K. Nakashima', 'ORG'), ('Y. Koda', 'PERSON'), ('K.', 'NORP')]


============================ Sentence 905 =============================

mamoto, M. Morikura, Y. Asai, and R. Miyatake, “Machine- learning-based future received signal strength prediction using depth images for mmwave communications,” arXiv preprint arXiv:1803.09698, 2018. 


>> Tokens are: 
[mamoto, ,, M., Morikura, ,, Y., Asai, ,, R., Miyatake, ,, “, Machine-, learning, -, based, future, received, signal, strength, prediction, depth, images, mmwave, communications, ,, ”, arXiv, preprint, arXiv:1803.09698, ,, 2018, .] 

>> PoS Tags are: 
[('mamoto', 'NOUN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('Morikura', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('Asai', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('Miyatake', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Machine-', 'PROPN'), ('learning', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('future', 'NOUN'), ('received', 'VERB'), ('signal', 'NOUN'), ('strength', 'NOUN'), ('prediction', 'NOUN'), ('depth', 'NOUN'), ('images', 'NOUN'), ('mmwave', 'NOUN'), ('communications', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('arXiv', 'NOUN'), ('preprint', 'VERB'), ('arXiv:1803.09698', 'PROPN'), (',', 'PUNCT'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('mamoto', 'nsubj'), (',', 'punct'), ('M.', 'compound'), ('Morikura', 'appos'), (',', 'punct'), ('Y.', 'compound'), ('Asai', 'conj'), (',', 'punct'), ('R.', 'compound'), ('Miyatake', 'conj'), (',', 'punct'), ('“', 'punct'), ('Machine-', 'amod'), ('learning', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('future', 'nsubj'), ('received', 'ccomp'), ('signal', 'compound'), ('strength', 'compound'), ('prediction', 'dobj'), ('depth', 'compound'), ('images', 'dobj'), ('mmwave', 'compound'), ('communications', 'pobj'), (',', 'punct'), ('”', 'punct'), ('arXiv', 'nsubj'), ('preprint', 'ROOT'), ('arXiv:1803.09698', 'dobj'), (',', 'punct'), ('2018', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[mamoto, ,], [,, M.], [M., Morikura], [Morikura, ,], [,, Y.], [Y., Asai], [Asai, ,], [,, R.], [R., Miyatake], [Miyatake, ,], [,, “], [“, Machine-], [Machine-, learning], [learning, -], [-, based], [based, future], [future, received], [received, signal], [signal, strength], [strength, prediction], [prediction, depth], [depth, images], [images, mmwave], [mmwave, communications], [communications, ,], [,, ”], [”, arXiv], [arXiv, preprint], [preprint, arXiv:1803.09698], [arXiv:1803.09698, ,], [,, 2018], [2018, .]]

>> Trigrams: 
[[mamoto, ,, M.], [,, M., Morikura], [M., Morikura, ,], [Morikura, ,, Y.], [,, Y., Asai], [Y., Asai, ,], [Asai, ,, R.], [,, R., Miyatake], [R., Miyatake, ,], [Miyatake, ,, “], [,, “, Machine-], [“, Machine-, learning], [Machine-, learning, -], [learning, -, based], [-, based, future], [based, future, received], [future, received, signal], [received, signal, strength], [signal, strength, prediction], [strength, prediction, depth], [prediction, depth, images], [depth, images, mmwave], [images, mmwave, communications], [mmwave, communications, ,], [communications, ,, ”], [,, ”, arXiv], [”, arXiv, preprint], [arXiv, preprint, arXiv:1803.09698], [preprint, arXiv:1803.09698, ,], [arXiv:1803.09698, ,, 2018], [,, 2018, .]]

>> Noun Phrases are: 
[mamoto, M. Morikura, Y. Asai, R. Miyatake, Machine- learning-based future, signal strength prediction, depth images, mmwave communications, arXiv, arXiv:1803.09698]

>> Named Entities are: 
[('M. Morikura', 'PERSON'), ('Y. Asai', 'PERSON'), ('R. Miyatake', 'PERSON'), ('2018', 'DATE')]


============================ Sentence 906 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 907 =============================

[52] M. Chen, W. Saad, C. Yin, and M. Debbah, “Echo state networks for proactive caching in cloud-based radio access networks with mobile users,” IEEE Transactions on Wireless Communications, vol. 


>> Tokens are: 
[[, 52, ], M., Chen, ,, W., Saad, ,, C., Yin, ,, M., Debbah, ,, “, Echo, state, networks, proactive, caching, cloud, -, based, radio, access, networks, mobile, users, ,, ”, IEEE, Transactions, Wireless, Communications, ,, vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('52', 'NUM'), (']', 'PUNCT'), ('M.', 'PROPN'), ('Chen', 'PROPN'), (',', 'PUNCT'), ('W.', 'PROPN'), ('Saad', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), ('Yin', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('Debbah', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Echo', 'PROPN'), ('state', 'NOUN'), ('networks', 'NOUN'), ('proactive', 'ADJ'), ('caching', 'NOUN'), ('cloud', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('radio', 'NOUN'), ('access', 'NOUN'), ('networks', 'NOUN'), ('mobile', 'ADJ'), ('users', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('Transactions', 'PROPN'), ('Wireless', 'PROPN'), ('Communications', 'PROPN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('52', 'nummod'), (']', 'punct'), ('M.', 'compound'), ('Chen', 'ROOT'), (',', 'punct'), ('W.', 'compound'), ('Saad', 'appos'), (',', 'punct'), ('C.', 'compound'), ('Yin', 'appos'), (',', 'punct'), ('M.', 'compound'), ('Debbah', 'conj'), (',', 'punct'), ('“', 'punct'), ('Echo', 'compound'), ('state', 'compound'), ('networks', 'appos'), ('proactive', 'amod'), ('caching', 'pobj'), ('cloud', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('radio', 'compound'), ('access', 'compound'), ('networks', 'pobj'), ('mobile', 'amod'), ('users', 'pobj'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('Transactions', 'appos'), ('Wireless', 'compound'), ('Communications', 'pobj'), (',', 'punct'), ('vol', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[[, 52], [52, ]], [], M.], [M., Chen], [Chen, ,], [,, W.], [W., Saad], [Saad, ,], [,, C.], [C., Yin], [Yin, ,], [,, M.], [M., Debbah], [Debbah, ,], [,, “], [“, Echo], [Echo, state], [state, networks], [networks, proactive], [proactive, caching], [caching, cloud], [cloud, -], [-, based], [based, radio], [radio, access], [access, networks], [networks, mobile], [mobile, users], [users, ,], [,, ”], [”, IEEE], [IEEE, Transactions], [Transactions, Wireless], [Wireless, Communications], [Communications, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[[, 52, ]], [52, ], M.], [], M., Chen], [M., Chen, ,], [Chen, ,, W.], [,, W., Saad], [W., Saad, ,], [Saad, ,, C.], [,, C., Yin], [C., Yin, ,], [Yin, ,, M.], [,, M., Debbah], [M., Debbah, ,], [Debbah, ,, “], [,, “, Echo], [“, Echo, state], [Echo, state, networks], [state, networks, proactive], [networks, proactive, caching], [proactive, caching, cloud], [caching, cloud, -], [cloud, -, based], [-, based, radio], [based, radio, access], [radio, access, networks], [access, networks, mobile], [networks, mobile, users], [mobile, users, ,], [users, ,, ”], [,, ”, IEEE], [”, IEEE, Transactions], [IEEE, Transactions, Wireless], [Transactions, Wireless, Communications], [Wireless, Communications, ,], [Communications, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[[52] M. Chen, W. Saad, C. Yin, M. Debbah, Echo state networks, proactive caching, cloud-based radio access networks, mobile users, IEEE Transactions, Wireless Communications, vol]

>> Named Entities are: 
[('52', 'CARDINAL'), ('M. Chen', 'PERSON'), ('W. Saad', 'PERSON'), ('C. Yin', 'PERSON'), ('M. Debbah', 'PERSON'), ('Echo', 'ORG'), ('IEEE Transactions on Wireless Communications', 'WORK_OF_ART')]


============================ Sentence 908 =============================

16, no. 6, pp. 


>> Tokens are: 
[16, ,, ., 6, ,, pp, .] 

>> PoS Tags are: 
[('16', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('6', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('16', 'nummod'), (',', 'punct'), ('.', 'punct'), ('6', 'nummod'), (',', 'punct'), ('pp', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[16, ,], [,, .], [., 6], [6, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[16, ,, .], [,, ., 6], [., 6, ,], [6, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[16, no. 6, pp]

>> Named Entities are: 
[('16', 'CARDINAL'), ('6', 'CARDINAL')]


============================ Sentence 909 =============================

3520–3535, 2017. 


>> Tokens are: 
[3520–3535, ,, 2017, .] 

>> PoS Tags are: 
[('3520–3535', 'NUM'), (',', 'PUNCT'), ('2017', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('3520–3535', 'ROOT'), (',', 'punct'), ('2017', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[3520–3535, ,], [,, 2017], [2017, .]]

>> Trigrams: 
[[3520–3535, ,, 2017], [,, 2017, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2017', 'DATE')]


============================ Sentence 910 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 911 =============================

[53] M. Zorzi, A. Zanella, A. Testolin, M. D. F. De Grazia, and M. Zorzi, “Cognition-based networks: A new perspective on network optimization using learning and distributed intelli- gence,” IEEE Access, vol. 


>> Tokens are: 
[[, 53, ], M., Zorzi, ,, A., Zanella, ,, A., Testolin, ,, M., D., F., De, Grazia, ,, M., Zorzi, ,, “, Cognition, -, based, networks, :, new, perspective, network, optimization, learning, distributed, intelli-, gence, ,, ”, IEEE, Access, ,, vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('53', 'NUM'), (']', 'PUNCT'), ('M.', 'PROPN'), ('Zorzi', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('Zanella', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('Testolin', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('D.', 'PROPN'), ('F.', 'PROPN'), ('De', 'PROPN'), ('Grazia', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('Zorzi', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Cognition', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('networks', 'NOUN'), (':', 'PUNCT'), ('new', 'ADJ'), ('perspective', 'NOUN'), ('network', 'NOUN'), ('optimization', 'NOUN'), ('learning', 'NOUN'), ('distributed', 'VERB'), ('intelli-', 'ADJ'), ('gence', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('Access', 'PROPN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('53', 'dep'), (']', 'punct'), ('M.', 'compound'), ('Zorzi', 'ROOT'), (',', 'punct'), ('A.', 'compound'), ('Zanella', 'appos'), (',', 'punct'), ('A.', 'compound'), ('Testolin', 'appos'), (',', 'punct'), ('M.', 'compound'), ('D.', 'compound'), ('F.', 'compound'), ('De', 'compound'), ('Grazia', 'appos'), (',', 'punct'), ('M.', 'compound'), ('Zorzi', 'conj'), (',', 'punct'), ('“', 'punct'), ('Cognition', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('networks', 'appos'), (':', 'punct'), ('new', 'amod'), ('perspective', 'appos'), ('network', 'compound'), ('optimization', 'pobj'), ('learning', 'dobj'), ('distributed', 'conj'), ('intelli-', 'amod'), ('gence', 'dobj'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('Access', 'appos'), (',', 'punct'), ('vol', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[[, 53], [53, ]], [], M.], [M., Zorzi], [Zorzi, ,], [,, A.], [A., Zanella], [Zanella, ,], [,, A.], [A., Testolin], [Testolin, ,], [,, M.], [M., D.], [D., F.], [F., De], [De, Grazia], [Grazia, ,], [,, M.], [M., Zorzi], [Zorzi, ,], [,, “], [“, Cognition], [Cognition, -], [-, based], [based, networks], [networks, :], [:, new], [new, perspective], [perspective, network], [network, optimization], [optimization, learning], [learning, distributed], [distributed, intelli-], [intelli-, gence], [gence, ,], [,, ”], [”, IEEE], [IEEE, Access], [Access, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[[, 53, ]], [53, ], M.], [], M., Zorzi], [M., Zorzi, ,], [Zorzi, ,, A.], [,, A., Zanella], [A., Zanella, ,], [Zanella, ,, A.], [,, A., Testolin], [A., Testolin, ,], [Testolin, ,, M.], [,, M., D.], [M., D., F.], [D., F., De], [F., De, Grazia], [De, Grazia, ,], [Grazia, ,, M.], [,, M., Zorzi], [M., Zorzi, ,], [Zorzi, ,, “], [,, “, Cognition], [“, Cognition, -], [Cognition, -, based], [-, based, networks], [based, networks, :], [networks, :, new], [:, new, perspective], [new, perspective, network], [perspective, network, optimization], [network, optimization, learning], [optimization, learning, distributed], [learning, distributed, intelli-], [distributed, intelli-, gence], [intelli-, gence, ,], [gence, ,, ”], [,, ”, IEEE], [”, IEEE, Access], [IEEE, Access, ,], [Access, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[[53] M. Zorzi, A. Zanella, A. Testolin, M. D. F. De Grazia, M. Zorzi, Cognition-based networks, A new perspective, network optimization, learning, intelli- gence, IEEE Access, vol]

>> Named Entities are: 
[('53', 'CARDINAL'), ('A. Testolin', 'PERSON'), ('M. D. F. De Grazia', 'NORP'), ('M. Zorzi', 'PERSON')]


============================ Sentence 912 =============================

3, pp. 


>> Tokens are: 
[3, ,, pp, .] 

>> PoS Tags are: 
[('3', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('3', 'ROOT'), (',', 'punct'), ('pp', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[3, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[3, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('3', 'CARDINAL')]


============================ Sentence 913 =============================

1512–1530, 2015. 


>> Tokens are: 
[1512–1530, ,, 2015, .] 

>> PoS Tags are: 
[('1512–1530', 'NUM'), (',', 'PUNCT'), ('2015', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1512–1530', 'ROOT'), (',', 'punct'), ('2015', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[1512–1530, ,], [,, 2015], [2015, .]]

>> Trigrams: 
[[1512–1530, ,, 2015], [,, 2015, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1512–1530, 2015', 'DATE')]


============================ Sentence 914 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 915 =============================

[54] F. Musumeci, C. Rottondi, A. Nag, I. Macaluso, D. Zibar, M. Ruffini, and M. Tornatore, “A survey on application of ma- chine learning techniques in optical networks,” arXiv preprint arXiv:1803.07976, 2018. 


>> Tokens are: 
[[, 54, ], F., Musumeci, ,, C., Rottondi, ,, A., Nag, ,, I., Macaluso, ,, D., Zibar, ,, M., Ruffini, ,, M., Tornatore, ,, “, survey, application, ma-, chine, learning, techniques, optical, networks, ,, ”, arXiv, preprint, arXiv:1803.07976, ,, 2018, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('54', 'NUM'), (']', 'PUNCT'), ('F.', 'PROPN'), ('Musumeci', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), ('Rottondi', 'PROPN'), (',', 'PUNCT'), ('A.', 'PROPN'), ('Nag', 'PROPN'), (',', 'PUNCT'), ('I.', 'PROPN'), ('Macaluso', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('Zibar', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('Ruffini', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('Tornatore', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('survey', 'NOUN'), ('application', 'NOUN'), ('ma-', 'NOUN'), ('chine', 'NOUN'), ('learning', 'VERB'), ('techniques', 'NOUN'), ('optical', 'ADJ'), ('networks', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('arXiv', 'NOUN'), ('preprint', 'VERB'), ('arXiv:1803.07976', 'ADV'), (',', 'PUNCT'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('54', 'dep'), (']', 'punct'), ('F.', 'compound'), ('Musumeci', 'nsubj'), (',', 'punct'), ('C.', 'compound'), ('Rottondi', 'appos'), (',', 'punct'), ('A.', 'compound'), ('Nag', 'appos'), (',', 'punct'), ('I.', 'compound'), ('Macaluso', 'conj'), (',', 'punct'), ('D.', 'compound'), ('Zibar', 'conj'), (',', 'punct'), ('M.', 'compound'), ('Ruffini', 'conj'), (',', 'punct'), ('M.', 'compound'), ('Tornatore', 'conj'), (',', 'punct'), ('“', 'punct'), ('survey', 'appos'), ('application', 'pobj'), ('ma-', 'nmod'), ('chine', 'amod'), ('learning', 'amod'), ('techniques', 'pobj'), ('optical', 'amod'), ('networks', 'pobj'), (',', 'punct'), ('”', 'punct'), ('arXiv', 'appos'), ('preprint', 'ROOT'), ('arXiv:1803.07976', 'advmod'), (',', 'punct'), ('2018', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[[, 54], [54, ]], [], F.], [F., Musumeci], [Musumeci, ,], [,, C.], [C., Rottondi], [Rottondi, ,], [,, A.], [A., Nag], [Nag, ,], [,, I.], [I., Macaluso], [Macaluso, ,], [,, D.], [D., Zibar], [Zibar, ,], [,, M.], [M., Ruffini], [Ruffini, ,], [,, M.], [M., Tornatore], [Tornatore, ,], [,, “], [“, survey], [survey, application], [application, ma-], [ma-, chine], [chine, learning], [learning, techniques], [techniques, optical], [optical, networks], [networks, ,], [,, ”], [”, arXiv], [arXiv, preprint], [preprint, arXiv:1803.07976], [arXiv:1803.07976, ,], [,, 2018], [2018, .]]

>> Trigrams: 
[[[, 54, ]], [54, ], F.], [], F., Musumeci], [F., Musumeci, ,], [Musumeci, ,, C.], [,, C., Rottondi], [C., Rottondi, ,], [Rottondi, ,, A.], [,, A., Nag], [A., Nag, ,], [Nag, ,, I.], [,, I., Macaluso], [I., Macaluso, ,], [Macaluso, ,, D.], [,, D., Zibar], [D., Zibar, ,], [Zibar, ,, M.], [,, M., Ruffini], [M., Ruffini, ,], [Ruffini, ,, M.], [,, M., Tornatore], [M., Tornatore, ,], [Tornatore, ,, “], [,, “, survey], [“, survey, application], [survey, application, ma-], [application, ma-, chine], [ma-, chine, learning], [chine, learning, techniques], [learning, techniques, optical], [techniques, optical, networks], [optical, networks, ,], [networks, ,, ”], [,, ”, arXiv], [”, arXiv, preprint], [arXiv, preprint, arXiv:1803.07976], [preprint, arXiv:1803.07976, ,], [arXiv:1803.07976, ,, 2018], [,, 2018, .]]

>> Noun Phrases are: 
[] F. Musumeci, C. Rottondi, A. Nag, I. Macaluso, D. Zibar, M. Ruffini, M. Tornatore, A survey, application, ma- chine learning techniques, optical networks, arXiv]

>> Named Entities are: 
[('54', 'CARDINAL'), ('] F. Musumeci', 'PERSON'), ('C. Rottondi', 'PERSON'), ('A. Nag', 'PERSON'), ('I. Macaluso', 'PERSON'), ('D. Zibar', 'PERSON'), ('M. Ruffini', 'PERSON'), ('2018', 'DATE')]


============================ Sentence 916 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 917 =============================

[55] F. Tang, B. Mao, Z. M. Fadlullah, N. Kato, O. Akashi, T. Inoue, and K. Mizutani, “On removing routing protocol from future wireless networks: A real-time deep learning approach for intel- ligent traffic control,” IEEE Wireless Communications, vol. 


>> Tokens are: 
[[, 55, ], F., Tang, ,, B., Mao, ,, Z., M., Fadlullah, ,, N., Kato, ,, O., Akashi, ,, T., Inoue, ,, K., Mizutani, ,, “, removing, routing, protocol, future, wireless, networks, :, real, -, time, deep, learning, approach, intel-, ligent, traffic, control, ,, ”, IEEE, Wireless, Communications, ,, vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('55', 'NUM'), (']', 'PUNCT'), ('F.', 'PROPN'), ('Tang', 'PROPN'), (',', 'PUNCT'), ('B.', 'PROPN'), ('Mao', 'PROPN'), (',', 'PUNCT'), ('Z.', 'PROPN'), ('M.', 'PROPN'), ('Fadlullah', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), ('Kato', 'PROPN'), (',', 'PUNCT'), ('O.', 'PROPN'), ('Akashi', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), ('Inoue', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), ('Mizutani', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('removing', 'VERB'), ('routing', 'VERB'), ('protocol', 'NOUN'), ('future', 'ADJ'), ('wireless', 'ADJ'), ('networks', 'NOUN'), (':', 'PUNCT'), ('real', 'ADJ'), ('-', 'PUNCT'), ('time', 'NOUN'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('approach', 'NOUN'), ('intel-', 'NOUN'), ('ligent', 'NOUN'), ('traffic', 'NOUN'), ('control', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('Wireless', 'PROPN'), ('Communications', 'PROPN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('55', 'nummod'), (']', 'punct'), ('F.', 'compound'), ('Tang', 'ROOT'), (',', 'punct'), ('B.', 'compound'), ('Mao', 'conj'), (',', 'punct'), ('Z.', 'compound'), ('M.', 'compound'), ('Fadlullah', 'appos'), (',', 'punct'), ('N.', 'compound'), ('Kato', 'conj'), (',', 'punct'), ('O.', 'compound'), ('Akashi', 'conj'), (',', 'punct'), ('T.', 'compound'), ('Inoue', 'conj'), (',', 'punct'), ('K.', 'compound'), ('Mizutani', 'conj'), (',', 'punct'), ('“', 'punct'), ('removing', 'pcomp'), ('routing', 'xcomp'), ('protocol', 'dobj'), ('future', 'amod'), ('wireless', 'amod'), ('networks', 'pobj'), (':', 'punct'), ('real', 'amod'), ('-', 'punct'), ('time', 'nmod'), ('deep', 'amod'), ('learning', 'compound'), ('approach', 'appos'), ('intel-', 'compound'), ('ligent', 'compound'), ('traffic', 'compound'), ('control', 'pobj'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('Wireless', 'compound'), ('Communications', 'appos'), (',', 'punct'), ('vol', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[[, 55], [55, ]], [], F.], [F., Tang], [Tang, ,], [,, B.], [B., Mao], [Mao, ,], [,, Z.], [Z., M.], [M., Fadlullah], [Fadlullah, ,], [,, N.], [N., Kato], [Kato, ,], [,, O.], [O., Akashi], [Akashi, ,], [,, T.], [T., Inoue], [Inoue, ,], [,, K.], [K., Mizutani], [Mizutani, ,], [,, “], [“, removing], [removing, routing], [routing, protocol], [protocol, future], [future, wireless], [wireless, networks], [networks, :], [:, real], [real, -], [-, time], [time, deep], [deep, learning], [learning, approach], [approach, intel-], [intel-, ligent], [ligent, traffic], [traffic, control], [control, ,], [,, ”], [”, IEEE], [IEEE, Wireless], [Wireless, Communications], [Communications, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[[, 55, ]], [55, ], F.], [], F., Tang], [F., Tang, ,], [Tang, ,, B.], [,, B., Mao], [B., Mao, ,], [Mao, ,, Z.], [,, Z., M.], [Z., M., Fadlullah], [M., Fadlullah, ,], [Fadlullah, ,, N.], [,, N., Kato], [N., Kato, ,], [Kato, ,, O.], [,, O., Akashi], [O., Akashi, ,], [Akashi, ,, T.], [,, T., Inoue], [T., Inoue, ,], [Inoue, ,, K.], [,, K., Mizutani], [K., Mizutani, ,], [Mizutani, ,, “], [,, “, removing], [“, removing, routing], [removing, routing, protocol], [routing, protocol, future], [protocol, future, wireless], [future, wireless, networks], [wireless, networks, :], [networks, :, real], [:, real, -], [real, -, time], [-, time, deep], [time, deep, learning], [deep, learning, approach], [learning, approach, intel-], [approach, intel-, ligent], [intel-, ligent, traffic], [ligent, traffic, control], [traffic, control, ,], [control, ,, ”], [,, ”, IEEE], [”, IEEE, Wireless], [IEEE, Wireless, Communications], [Wireless, Communications, ,], [Communications, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[[55] F. Tang, B. Mao, Z. M. Fadlullah, N. Kato, O. Akashi, T. Inoue, K. Mizutani, protocol, future wireless networks, A real-time deep learning approach, intel- ligent traffic control, IEEE Wireless Communications, vol]

>> Named Entities are: 
[('55', 'CARDINAL'), ('F. Tang', 'PERSON'), ('B. Mao', 'PERSON'), ('Z. M. Fadlullah', 'PERSON'), ('N. Kato', 'PERSON'), ('O. Akashi', 'PERSON'), ('T. Inoue', 'PERSON'), ('K. Mizutani', 'PERSON'), ('IEEE Wireless Communications', 'ORG')]


============================ Sentence 918 =============================

25, no. 1, pp. 


>> Tokens are: 
[25, ,, ., 1, ,, pp, .] 

>> PoS Tags are: 
[('25', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('1', 'NUM'), (',', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('25', 'nummod'), (',', 'punct'), ('.', 'ROOT'), ('1', 'nummod'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[25, ,], [,, .], [., 1], [1, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[25, ,, .], [,, ., 1], [., 1, ,], [1, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[25, no.]

>> Named Entities are: 
[('25', 'CARDINAL'), ('1', 'CARDINAL')]


============================ Sentence 919 =============================

154–160, 2018. 


>> Tokens are: 
[154–160, ,, 2018, .] 

>> PoS Tags are: 
[('154–160', 'NUM'), (',', 'PUNCT'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('154–160', 'ROOT'), (',', 'punct'), ('2018', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[154–160, ,], [,, 2018], [2018, .]]

>> Trigrams: 
[[154–160, ,, 2018], [,, 2018, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('154–160, 2018', 'DATE')]


============================ Sentence 920 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 921 =============================

[56] T. T. Nguyen and G. Armitage, “A survey of techniques for internet traffic classification using machine learning,” IEEE Communications Surveys & Tutorials, vol. 


>> Tokens are: 
[[, 56, ], T., T., Nguyen, G., Armitage, ,, “, survey, techniques, internet, traffic, classification, machine, learning, ,, ”, IEEE, Communications, Surveys, &, Tutorials, ,, vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('56', 'NUM'), (']', 'PUNCT'), ('T.', 'PROPN'), ('T.', 'PROPN'), ('Nguyen', 'PROPN'), ('G.', 'PROPN'), ('Armitage', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('survey', 'NOUN'), ('techniques', 'NOUN'), ('internet', 'NOUN'), ('traffic', 'NOUN'), ('classification', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('Communications', 'PROPN'), ('Surveys', 'PROPN'), ('&', 'CCONJ'), ('Tutorials', 'PROPN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('56', 'nummod'), (']', 'punct'), ('T.', 'compound'), ('T.', 'compound'), ('Nguyen', 'ROOT'), ('G.', 'compound'), ('Armitage', 'conj'), (',', 'punct'), ('“', 'punct'), ('survey', 'appos'), ('techniques', 'pobj'), ('internet', 'compound'), ('traffic', 'compound'), ('classification', 'pobj'), ('machine', 'compound'), ('learning', 'dobj'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('Communications', 'compound'), ('Surveys', 'appos'), ('&', 'cc'), ('Tutorials', 'conj'), (',', 'punct'), ('vol', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 56], [56, ]], [], T.], [T., T.], [T., Nguyen], [Nguyen, G.], [G., Armitage], [Armitage, ,], [,, “], [“, survey], [survey, techniques], [techniques, internet], [internet, traffic], [traffic, classification], [classification, machine], [machine, learning], [learning, ,], [,, ”], [”, IEEE], [IEEE, Communications], [Communications, Surveys], [Surveys, &], [&, Tutorials], [Tutorials, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[[, 56, ]], [56, ], T.], [], T., T.], [T., T., Nguyen], [T., Nguyen, G.], [Nguyen, G., Armitage], [G., Armitage, ,], [Armitage, ,, “], [,, “, survey], [“, survey, techniques], [survey, techniques, internet], [techniques, internet, traffic], [internet, traffic, classification], [traffic, classification, machine], [classification, machine, learning], [machine, learning, ,], [learning, ,, ”], [,, ”, IEEE], [”, IEEE, Communications], [IEEE, Communications, Surveys], [Communications, Surveys, &], [Surveys, &, Tutorials], [&, Tutorials, ,], [Tutorials, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[[56] T. T. Nguyen, G. Armitage, A survey, techniques, internet traffic classification, machine learning, IEEE Communications Surveys, Tutorials, vol]

>> Named Entities are: 
[('56', 'CARDINAL'), ('G. Armitage', 'PERSON'), ('IEEE Communications Surveys & Tutorials', 'ORG')]


============================ Sentence 922 =============================

10, no. 4, pp. 


>> Tokens are: 
[10, ,, ., 4, ,, pp, .] 

>> PoS Tags are: 
[('10', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('4', 'NUM'), (',', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('10', 'ROOT'), (',', 'punct'), ('.', 'punct'), ('4', 'nummod'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[10, ,], [,, .], [., 4], [4, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[10, ,, .], [,, ., 4], [., 4, ,], [4, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('10', 'CARDINAL'), ('4', 'CARDINAL')]


============================ Sentence 923 =============================

56–76, 2008. 


>> Tokens are: 
[56–76, ,, 2008, .] 

>> PoS Tags are: 
[('56–76', 'NUM'), (',', 'PUNCT'), ('2008', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('56–76', 'ROOT'), (',', 'punct'), ('2008', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[56–76, ,], [,, 2008], [2008, .]]

>> Trigrams: 
[[56–76, ,, 2008], [,, 2008, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 924 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 925 =============================

[57] C. M. Bishop, Pattern recognition and machine learning. 


>> Tokens are: 
[[, 57, ], C., M., Bishop, ,, Pattern, recognition, machine, learning, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('57', 'NUM'), (']', 'PUNCT'), ('C.', 'PROPN'), ('M.', 'PROPN'), ('Bishop', 'PROPN'), (',', 'PUNCT'), ('Pattern', 'PROPN'), ('recognition', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('57', 'dep'), (']', 'punct'), ('C.', 'compound'), ('M.', 'compound'), ('Bishop', 'ROOT'), (',', 'punct'), ('Pattern', 'compound'), ('recognition', 'conj'), ('machine', 'compound'), ('learning', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[[, 57], [57, ]], [], C.], [C., M.], [M., Bishop], [Bishop, ,], [,, Pattern], [Pattern, recognition], [recognition, machine], [machine, learning], [learning, .]]

>> Trigrams: 
[[[, 57, ]], [57, ], C.], [], C., M.], [C., M., Bishop], [M., Bishop, ,], [Bishop, ,, Pattern], [,, Pattern, recognition], [Pattern, recognition, machine], [recognition, machine, learning], [machine, learning, .]]

>> Noun Phrases are: 
[[57] C. M. Bishop, Pattern recognition, machine learning]

>> Named Entities are: 
[('57', 'CARDINAL'), ('C. M. Bishop', 'PERSON')]


============================ Sentence 926 =============================

springer, 2006. 


>> Tokens are: 
[springer, ,, 2006, .] 

>> PoS Tags are: 
[('springer', 'NOUN'), (',', 'PUNCT'), ('2006', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('springer', 'ROOT'), (',', 'punct'), ('2006', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[springer, ,], [,, 2006], [2006, .]]

>> Trigrams: 
[[springer, ,, 2006], [,, 2006, .]]

>> Noun Phrases are: 
[springer]

>> Named Entities are: 
[('2006', 'DATE')]


============================ Sentence 927 =============================

 19     


>> Tokens are: 
[ , 19,    ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('19', 'NUM'), ('   ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('19', 'nummod'), ('   ', 'appos')]

>> Bigrams: 
[[ , 19], [19,    ]]

>> Trigrams: 
[[ , 19,    ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('19', 'CARDINAL')]


============================ Sentence 928 =============================

[58] K. P. Murphy, Machine learning: a probabilistic perspective. 


>> Tokens are: 
[[, 58, ], K., P., Murphy, ,, Machine, learning, :, probabilistic, perspective, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('58', 'NUM'), (']', 'PUNCT'), ('K.', 'PROPN'), ('P.', 'PROPN'), ('Murphy', 'PROPN'), (',', 'PUNCT'), ('Machine', 'NOUN'), ('learning', 'NOUN'), (':', 'PUNCT'), ('probabilistic', 'ADJ'), ('perspective', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('58', 'nummod'), (']', 'punct'), ('K.', 'compound'), ('P.', 'compound'), ('Murphy', 'ROOT'), (',', 'punct'), ('Machine', 'compound'), ('learning', 'appos'), (':', 'punct'), ('probabilistic', 'amod'), ('perspective', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 58], [58, ]], [], K.], [K., P.], [P., Murphy], [Murphy, ,], [,, Machine], [Machine, learning], [learning, :], [:, probabilistic], [probabilistic, perspective], [perspective, .]]

>> Trigrams: 
[[[, 58, ]], [58, ], K.], [], K., P.], [K., P., Murphy], [P., Murphy, ,], [Murphy, ,, Machine], [,, Machine, learning], [Machine, learning, :], [learning, :, probabilistic], [:, probabilistic, perspective], [probabilistic, perspective, .]]

>> Noun Phrases are: 
[[58] K. P. Murphy, Machine learning, a probabilistic perspective]

>> Named Entities are: 
[('58', 'CARDINAL'), ('K. P. Murphy', 'PERSON'), ('Machine', 'PERSON')]


============================ Sentence 929 =============================

MIT press, 2012. 


>> Tokens are: 
[MIT, press, ,, 2012, .] 

>> PoS Tags are: 
[('MIT', 'PROPN'), ('press', 'NOUN'), (',', 'PUNCT'), ('2012', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('MIT', 'compound'), ('press', 'ROOT'), (',', 'punct'), ('2012', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[MIT, press], [press, ,], [,, 2012], [2012, .]]

>> Trigrams: 
[[MIT, press, ,], [press, ,, 2012], [,, 2012, .]]

>> Noun Phrases are: 
[MIT press]

>> Named Entities are: 
[('MIT', 'ORG'), ('2012', 'DATE')]


============================ Sentence 930 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 931 =============================

[59] T. M. Cover and J. A. Thomas, Elements of information theory. 


>> Tokens are: 
[[, 59, ], T., M., Cover, J., A., Thomas, ,, Elements, information, theory, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('59', 'NUM'), (']', 'PUNCT'), ('T.', 'PROPN'), ('M.', 'PROPN'), ('Cover', 'PROPN'), ('J.', 'PROPN'), ('A.', 'PROPN'), ('Thomas', 'PROPN'), (',', 'PUNCT'), ('Elements', 'NOUN'), ('information', 'NOUN'), ('theory', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('59', 'nummod'), (']', 'punct'), ('T.', 'compound'), ('M.', 'compound'), ('Cover', 'ROOT'), ('J.', 'compound'), ('A.', 'compound'), ('Thomas', 'conj'), (',', 'punct'), ('Elements', 'appos'), ('information', 'compound'), ('theory', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[[, 59], [59, ]], [], T.], [T., M.], [M., Cover], [Cover, J.], [J., A.], [A., Thomas], [Thomas, ,], [,, Elements], [Elements, information], [information, theory], [theory, .]]

>> Trigrams: 
[[[, 59, ]], [59, ], T.], [], T., M.], [T., M., Cover], [M., Cover, J.], [Cover, J., A.], [J., A., Thomas], [A., Thomas, ,], [Thomas, ,, Elements], [,, Elements, information], [Elements, information, theory], [information, theory, .]]

>> Noun Phrases are: 
[[59] T. M. Cover, J. A. Thomas, Elements, information theory]

>> Named Entities are: 
[('59', 'CARDINAL'), ('J. A. Thomas', 'PERSON')]


============================ Sentence 932 =============================

John Wiley & Sons, 2012. 


>> Tokens are: 
[John, Wiley, &, Sons, ,, 2012, .] 

>> PoS Tags are: 
[('John', 'PROPN'), ('Wiley', 'PROPN'), ('&', 'CCONJ'), ('Sons', 'PROPN'), (',', 'PUNCT'), ('2012', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('John', 'compound'), ('Wiley', 'ROOT'), ('&', 'cc'), ('Sons', 'conj'), (',', 'punct'), ('2012', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[John, Wiley], [Wiley, &], [&, Sons], [Sons, ,], [,, 2012], [2012, .]]

>> Trigrams: 
[[John, Wiley, &], [Wiley, &, Sons], [&, Sons, ,], [Sons, ,, 2012], [,, 2012, .]]

>> Noun Phrases are: 
[John Wiley, Sons]

>> Named Entities are: 
[('John Wiley & Sons', 'ORG'), ('2012', 'DATE')]


============================ Sentence 933 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 934 =============================

[60] O. Simeone, “Introducing information measures via inference [lecture notes],” IEEE Signal Processing Magazine, vol. 


>> Tokens are: 
[[, 60, ], O., Simeone, ,, “, Introducing, information, measures, inference, [, lecture, notes, ], ,, ”, IEEE, Signal, Processing, Magazine, ,, vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('60', 'NUM'), (']', 'PUNCT'), ('O.', 'PROPN'), ('Simeone', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Introducing', 'VERB'), ('information', 'NOUN'), ('measures', 'NOUN'), ('inference', 'NOUN'), ('[', 'PUNCT'), ('lecture', 'NOUN'), ('notes', 'NOUN'), (']', 'PUNCT'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('Signal', 'PROPN'), ('Processing', 'PROPN'), ('Magazine', 'PROPN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('60', 'dep'), (']', 'punct'), ('O.', 'compound'), ('Simeone', 'ROOT'), (',', 'punct'), ('“', 'punct'), ('Introducing', 'acl'), ('information', 'compound'), ('measures', 'dobj'), ('inference', 'pobj'), ('[', 'punct'), ('lecture', 'compound'), ('notes', 'appos'), (']', 'punct'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('Signal', 'compound'), ('Processing', 'compound'), ('Magazine', 'appos'), (',', 'punct'), ('vol', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 60], [60, ]], [], O.], [O., Simeone], [Simeone, ,], [,, “], [“, Introducing], [Introducing, information], [information, measures], [measures, inference], [inference, [], [[, lecture], [lecture, notes], [notes, ]], [], ,], [,, ”], [”, IEEE], [IEEE, Signal], [Signal, Processing], [Processing, Magazine], [Magazine, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[[, 60, ]], [60, ], O.], [], O., Simeone], [O., Simeone, ,], [Simeone, ,, “], [,, “, Introducing], [“, Introducing, information], [Introducing, information, measures], [information, measures, inference], [measures, inference, [], [inference, [, lecture], [[, lecture, notes], [lecture, notes, ]], [notes, ], ,], [], ,, ”], [,, ”, IEEE], [”, IEEE, Signal], [IEEE, Signal, Processing], [Signal, Processing, Magazine], [Processing, Magazine, ,], [Magazine, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[[60] O. Simeone, information measures, inference, lecture notes, IEEE Signal Processing Magazine, vol]

>> Named Entities are: 
[('O. Simeone', 'PERSON'), ('IEEE Signal Processing Magazine', 'ORG')]


============================ Sentence 935 =============================

35, no. 1, pp. 


>> Tokens are: 
[35, ,, ., 1, ,, pp, .] 

>> PoS Tags are: 
[('35', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('1', 'NUM'), (',', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('35', 'nummod'), (',', 'punct'), ('.', 'punct'), ('1', 'nummod'), (',', 'punct'), ('pp', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[35, ,], [,, .], [., 1], [1, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[35, ,, .], [,, ., 1], [., 1, ,], [1, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('35', 'CARDINAL'), ('1', 'CARDINAL')]


============================ Sentence 936 =============================

167–171, 2018. 


>> Tokens are: 
[167–171, ,, 2018, .] 

>> PoS Tags are: 
[('167–171', 'NUM'), (',', 'PUNCT'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('167–171', 'ROOT'), (',', 'punct'), ('2018', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[167–171, ,], [,, 2018], [2018, .]]

>> Trigrams: 
[[167–171, ,, 2018], [,, 2018, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('167–171, 2018', 'DATE')]


============================ Sentence 937 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 938 =============================

[61] Y. Sun, P. Babu, and D. P. Palomar, “Majorization-minimization algorithms in signal processing, communications, and machine learning,” IEEE Transactions on Signal Processing, vol. 


>> Tokens are: 
[[, 61, ], Y., Sun, ,, P., Babu, ,, D., P., Palomar, ,, “, Majorization, -, minimization, algorithms, signal, processing, ,, communications, ,, machine, learning, ,, ”, IEEE, Transactions, Signal, Processing, ,, vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('61', 'NUM'), (']', 'PUNCT'), ('Y.', 'PROPN'), ('Sun', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('Babu', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('P.', 'PROPN'), ('Palomar', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Majorization', 'NOUN'), ('-', 'PUNCT'), ('minimization', 'NOUN'), ('algorithms', 'NOUN'), ('signal', 'NOUN'), ('processing', 'NOUN'), (',', 'PUNCT'), ('communications', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('learning', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('Transactions', 'PROPN'), ('Signal', 'PROPN'), ('Processing', 'PROPN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('61', 'dep'), (']', 'punct'), ('Y.', 'compound'), ('Sun', 'ROOT'), (',', 'punct'), ('P.', 'compound'), ('Babu', 'appos'), (',', 'punct'), ('D.', 'compound'), ('P.', 'compound'), ('Palomar', 'conj'), (',', 'punct'), ('“', 'punct'), ('Majorization', 'compound'), ('-', 'punct'), ('minimization', 'compound'), ('algorithms', 'appos'), ('signal', 'compound'), ('processing', 'pobj'), (',', 'punct'), ('communications', 'conj'), (',', 'punct'), ('machine', 'compound'), ('learning', 'conj'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('Transactions', 'appos'), ('Signal', 'compound'), ('Processing', 'pobj'), (',', 'punct'), ('vol', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[[, 61], [61, ]], [], Y.], [Y., Sun], [Sun, ,], [,, P.], [P., Babu], [Babu, ,], [,, D.], [D., P.], [P., Palomar], [Palomar, ,], [,, “], [“, Majorization], [Majorization, -], [-, minimization], [minimization, algorithms], [algorithms, signal], [signal, processing], [processing, ,], [,, communications], [communications, ,], [,, machine], [machine, learning], [learning, ,], [,, ”], [”, IEEE], [IEEE, Transactions], [Transactions, Signal], [Signal, Processing], [Processing, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[[, 61, ]], [61, ], Y.], [], Y., Sun], [Y., Sun, ,], [Sun, ,, P.], [,, P., Babu], [P., Babu, ,], [Babu, ,, D.], [,, D., P.], [D., P., Palomar], [P., Palomar, ,], [Palomar, ,, “], [,, “, Majorization], [“, Majorization, -], [Majorization, -, minimization], [-, minimization, algorithms], [minimization, algorithms, signal], [algorithms, signal, processing], [signal, processing, ,], [processing, ,, communications], [,, communications, ,], [communications, ,, machine], [,, machine, learning], [machine, learning, ,], [learning, ,, ”], [,, ”, IEEE], [”, IEEE, Transactions], [IEEE, Transactions, Signal], [Transactions, Signal, Processing], [Signal, Processing, ,], [Processing, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[[61] Y. Sun, P. Babu, D. P. Palomar, Majorization-minimization algorithms, signal processing, communications, machine learning, IEEE Transactions, Signal Processing, vol]

>> Named Entities are: 
[('61', 'CARDINAL'), ('Y. Sun', 'PERSON'), ('P. Babu', 'PERSON'), ('D. P. Palomar', 'PERSON'), ('IEEE Transactions on Signal Processing', 'WORK_OF_ART')]


============================ Sentence 939 =============================

65, no. 3, pp. 


>> Tokens are: 
[65, ,, ., 3, ,, pp, .] 

>> PoS Tags are: 
[('65', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('3', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('65', 'nummod'), (',', 'punct'), ('.', 'punct'), ('3', 'nummod'), (',', 'punct'), ('pp', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[65, ,], [,, .], [., 3], [3, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[65, ,, .], [,, ., 3], [., 3, ,], [3, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[65, no. 3, pp]

>> Named Entities are: 
[('65', 'CARDINAL'), ('3', 'CARDINAL')]


============================ Sentence 940 =============================

794–816, 2017. 


>> Tokens are: 
[794–816, ,, 2017, .] 

>> PoS Tags are: 
[('794–816', 'NUM'), (',', 'PUNCT'), ('2017', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('794–816', 'ROOT'), (',', 'punct'), ('2017', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[794–816, ,], [,, 2017], [2017, .]]

>> Trigrams: 
[[794–816, ,, 2017], [,, 2017, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('794–816', 'CARDINAL'), ('2017', 'DATE')]


============================ Sentence 941 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 942 =============================

[62] A. Mnih and K. Gregor, “Neural variational inference and learning in belief networks,” arXiv preprint arXiv:1402.0030, 2014. 


>> Tokens are: 
[[, 62, ], A., Mnih, K., Gregor, ,, “, Neural, variational, inference, learning, belief, networks, ,, ”, arXiv, preprint, arXiv:1402.0030, ,, 2014, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('62', 'NUM'), (']', 'PUNCT'), ('A.', 'PROPN'), ('Mnih', 'PROPN'), ('K.', 'PROPN'), ('Gregor', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Neural', 'ADJ'), ('variational', 'ADJ'), ('inference', 'NOUN'), ('learning', 'VERB'), ('belief', 'NOUN'), ('networks', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('arXiv', 'NOUN'), ('preprint', 'NOUN'), ('arXiv:1402.0030', 'PROPN'), (',', 'PUNCT'), ('2014', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('62', 'dep'), (']', 'punct'), ('A.', 'compound'), ('Mnih', 'nmod'), ('K.', 'compound'), ('Gregor', 'conj'), (',', 'punct'), ('“', 'punct'), ('Neural', 'amod'), ('variational', 'amod'), ('inference', 'appos'), ('learning', 'conj'), ('belief', 'compound'), ('networks', 'pobj'), (',', 'punct'), ('”', 'punct'), ('arXiv', 'nsubj'), ('preprint', 'ROOT'), ('arXiv:1402.0030', 'dobj'), (',', 'punct'), ('2014', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[[, 62], [62, ]], [], A.], [A., Mnih], [Mnih, K.], [K., Gregor], [Gregor, ,], [,, “], [“, Neural], [Neural, variational], [variational, inference], [inference, learning], [learning, belief], [belief, networks], [networks, ,], [,, ”], [”, arXiv], [arXiv, preprint], [preprint, arXiv:1402.0030], [arXiv:1402.0030, ,], [,, 2014], [2014, .]]

>> Trigrams: 
[[[, 62, ]], [62, ], A.], [], A., Mnih], [A., Mnih, K.], [Mnih, K., Gregor], [K., Gregor, ,], [Gregor, ,, “], [,, “, Neural], [“, Neural, variational], [Neural, variational, inference], [variational, inference, learning], [inference, learning, belief], [learning, belief, networks], [belief, networks, ,], [networks, ,, ”], [,, ”, arXiv], [”, arXiv, preprint], [arXiv, preprint, arXiv:1402.0030], [preprint, arXiv:1402.0030, ,], [arXiv:1402.0030, ,, 2014], [,, 2014, .]]

>> Noun Phrases are: 
[Neural variational inference, belief networks, arXiv:1402.0030]

>> Named Entities are: 
[('62', 'CARDINAL'), ('K. Gregor', 'ORG'), ('arXiv:1402.0030', 'LANGUAGE'), ('2014', 'DATE')]


============================ Sentence 943 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 944 =============================

[63] H. V. Poor, An introduction to signal detection and estimation. 


>> Tokens are: 
[[, 63, ], H., V., Poor, ,, introduction, signal, detection, estimation, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('63', 'NUM'), (']', 'PUNCT'), ('H.', 'PROPN'), ('V.', 'PROPN'), ('Poor', 'PROPN'), (',', 'PUNCT'), ('introduction', 'NOUN'), ('signal', 'VERB'), ('detection', 'NOUN'), ('estimation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('63', 'dep'), (']', 'punct'), ('H.', 'compound'), ('V.', 'compound'), ('Poor', 'ROOT'), (',', 'punct'), ('introduction', 'appos'), ('signal', 'acl'), ('detection', 'dobj'), ('estimation', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[[, 63], [63, ]], [], H.], [H., V.], [V., Poor], [Poor, ,], [,, introduction], [introduction, signal], [signal, detection], [detection, estimation], [estimation, .]]

>> Trigrams: 
[[[, 63, ]], [63, ], H.], [], H., V.], [H., V., Poor], [V., Poor, ,], [Poor, ,, introduction], [,, introduction, signal], [introduction, signal, detection], [signal, detection, estimation], [detection, estimation, .]]

>> Noun Phrases are: 
[[63] H. V. Poor, An introduction, detection, estimation]

>> Named Entities are: 
[('H. V. Poor', 'PERSON')]


============================ Sentence 945 =============================

Springer Science & Business Media, 2013. 


>> Tokens are: 
[Springer, Science, &, Business, Media, ,, 2013, .] 

>> PoS Tags are: 
[('Springer', 'PROPN'), ('Science', 'PROPN'), ('&', 'CCONJ'), ('Business', 'PROPN'), ('Media', 'PROPN'), (',', 'PUNCT'), ('2013', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Springer', 'compound'), ('Science', 'nmod'), ('&', 'cc'), ('Business', 'conj'), ('Media', 'ROOT'), (',', 'punct'), ('2013', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Springer, Science], [Science, &], [&, Business], [Business, Media], [Media, ,], [,, 2013], [2013, .]]

>> Trigrams: 
[[Springer, Science, &], [Science, &, Business], [&, Business, Media], [Business, Media, ,], [Media, ,, 2013], [,, 2013, .]]

>> Noun Phrases are: 
[Springer Science & Business Media]

>> Named Entities are: 
[('Science & Business Media', 'ORG'), ('2013', 'DATE')]


============================ Sentence 946 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 947 =============================

[64] I. Goodfellow, “NIPS 2016 tutorial: Generative adversarial networks,” arXiv preprint arXiv:1701.00160, 2016. 


>> Tokens are: 
[[, 64, ], I., Goodfellow, ,, “, NIPS, 2016, tutorial, :, Generative, adversarial, networks, ,, ”, arXiv, preprint, arXiv:1701.00160, ,, 2016, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('64', 'NUM'), (']', 'PUNCT'), ('I.', 'PROPN'), ('Goodfellow', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('NIPS', 'PROPN'), ('2016', 'NUM'), ('tutorial', 'NOUN'), (':', 'PUNCT'), ('Generative', 'ADJ'), ('adversarial', 'ADJ'), ('networks', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('arXiv', 'NOUN'), ('preprint', 'NOUN'), ('arXiv:1701.00160', 'PROPN'), (',', 'PUNCT'), ('2016', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('64', 'nummod'), (']', 'punct'), ('I.', 'compound'), ('Goodfellow', 'ROOT'), (',', 'punct'), ('“', 'punct'), ('NIPS', 'nmod'), ('2016', 'nummod'), ('tutorial', 'appos'), (':', 'punct'), ('Generative', 'amod'), ('adversarial', 'amod'), ('networks', 'appos'), (',', 'punct'), ('”', 'punct'), ('arXiv', 'compound'), ('preprint', 'compound'), ('arXiv:1701.00160', 'appos'), (',', 'punct'), ('2016', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 64], [64, ]], [], I.], [I., Goodfellow], [Goodfellow, ,], [,, “], [“, NIPS], [NIPS, 2016], [2016, tutorial], [tutorial, :], [:, Generative], [Generative, adversarial], [adversarial, networks], [networks, ,], [,, ”], [”, arXiv], [arXiv, preprint], [preprint, arXiv:1701.00160], [arXiv:1701.00160, ,], [,, 2016], [2016, .]]

>> Trigrams: 
[[[, 64, ]], [64, ], I.], [], I., Goodfellow], [I., Goodfellow, ,], [Goodfellow, ,, “], [,, “, NIPS], [“, NIPS, 2016], [NIPS, 2016, tutorial], [2016, tutorial, :], [tutorial, :, Generative], [:, Generative, adversarial], [Generative, adversarial, networks], [adversarial, networks, ,], [networks, ,, ”], [,, ”, arXiv], [”, arXiv, preprint], [arXiv, preprint, arXiv:1701.00160], [preprint, arXiv:1701.00160, ,], [arXiv:1701.00160, ,, 2016], [,, 2016, .]]

>> Noun Phrases are: 
[[64] I. Goodfellow, NIPS 2016 tutorial, Generative adversarial networks, arXiv preprint arXiv:1701.00160]

>> Named Entities are: 
[('64', 'CARDINAL'), ('I. Goodfellow', 'PERSON'), ('2016', 'DATE')]


============================ Sentence 948 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 949 =============================

[65] B. Karanov, M. Chagnon, F. Thouin, T. A. Eriksson, H. Bülow, D. Lavery, P. Bayvel, and L. Schmalen, “End-to-end deep learning of optical fiber communications,” arXiv preprint arXiv:1804.04097, 2018. 


>> Tokens are: 
[[, 65, ], B., Karanov, ,, M., Chagnon, ,, F., Thouin, ,, T., A., Eriksson, ,, H., Bülow, ,, D., Lavery, ,, P., Bayvel, ,, L., Schmalen, ,, “, End, -, -, end, deep, learning, optical, fiber, communications, ,, ”, arXiv, preprint, arXiv:1804.04097, ,, 2018, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('65', 'NUM'), (']', 'PUNCT'), ('B.', 'PROPN'), ('Karanov', 'PROPN'), (',', 'PUNCT'), ('M.', 'PROPN'), ('Chagnon', 'PROPN'), (',', 'PUNCT'), ('F.', 'PROPN'), ('Thouin', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), ('A.', 'NOUN'), ('Eriksson', 'PROPN'), (',', 'PUNCT'), ('H.', 'PROPN'), ('Bülow', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('Lavery', 'PROPN'), (',', 'PUNCT'), ('P.', 'PROPN'), ('Bayvel', 'PROPN'), (',', 'PUNCT'), ('L.', 'PROPN'), ('Schmalen', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('End', 'NOUN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('end', 'NOUN'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('optical', 'ADJ'), ('fiber', 'NOUN'), ('communications', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('arXiv', 'NOUN'), ('preprint', 'VERB'), ('arXiv:1804.04097', 'ADV'), (',', 'PUNCT'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('65', 'nummod'), (']', 'punct'), ('B.', 'compound'), ('Karanov', 'nsubj'), (',', 'punct'), ('M.', 'compound'), ('Chagnon', 'appos'), (',', 'punct'), ('F.', 'compound'), ('Thouin', 'appos'), (',', 'punct'), ('T.', 'compound'), ('A.', 'compound'), ('Eriksson', 'appos'), (',', 'punct'), ('H.', 'compound'), ('Bülow', 'conj'), (',', 'punct'), ('D.', 'compound'), ('Lavery', 'conj'), (',', 'punct'), ('P.', 'compound'), ('Bayvel', 'conj'), (',', 'punct'), ('L.', 'compound'), ('Schmalen', 'conj'), (',', 'punct'), ('“', 'punct'), ('End', 'nmod'), ('-', 'punct'), ('-', 'punct'), ('end', 'pobj'), ('deep', 'amod'), ('learning', 'appos'), ('optical', 'amod'), ('fiber', 'compound'), ('communications', 'pobj'), (',', 'punct'), ('”', 'punct'), ('arXiv', 'appos'), ('preprint', 'ROOT'), ('arXiv:1804.04097', 'advmod'), (',', 'punct'), ('2018', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[[, 65], [65, ]], [], B.], [B., Karanov], [Karanov, ,], [,, M.], [M., Chagnon], [Chagnon, ,], [,, F.], [F., Thouin], [Thouin, ,], [,, T.], [T., A.], [A., Eriksson], [Eriksson, ,], [,, H.], [H., Bülow], [Bülow, ,], [,, D.], [D., Lavery], [Lavery, ,], [,, P.], [P., Bayvel], [Bayvel, ,], [,, L.], [L., Schmalen], [Schmalen, ,], [,, “], [“, End], [End, -], [-, -], [-, end], [end, deep], [deep, learning], [learning, optical], [optical, fiber], [fiber, communications], [communications, ,], [,, ”], [”, arXiv], [arXiv, preprint], [preprint, arXiv:1804.04097], [arXiv:1804.04097, ,], [,, 2018], [2018, .]]

>> Trigrams: 
[[[, 65, ]], [65, ], B.], [], B., Karanov], [B., Karanov, ,], [Karanov, ,, M.], [,, M., Chagnon], [M., Chagnon, ,], [Chagnon, ,, F.], [,, F., Thouin], [F., Thouin, ,], [Thouin, ,, T.], [,, T., A.], [T., A., Eriksson], [A., Eriksson, ,], [Eriksson, ,, H.], [,, H., Bülow], [H., Bülow, ,], [Bülow, ,, D.], [,, D., Lavery], [D., Lavery, ,], [Lavery, ,, P.], [,, P., Bayvel], [P., Bayvel, ,], [Bayvel, ,, L.], [,, L., Schmalen], [L., Schmalen, ,], [Schmalen, ,, “], [,, “, End], [“, End, -], [End, -, -], [-, -, end], [-, end, deep], [end, deep, learning], [deep, learning, optical], [learning, optical, fiber], [optical, fiber, communications], [fiber, communications, ,], [communications, ,, ”], [,, ”, arXiv], [”, arXiv, preprint], [arXiv, preprint, arXiv:1804.04097], [preprint, arXiv:1804.04097, ,], [arXiv:1804.04097, ,, 2018], [,, 2018, .]]

>> Noun Phrases are: 
[[65] B. Karanov, M. Chagnon, F. Thouin, T. A. Eriksson, H. Bülow, D. Lavery, P. Bayvel, L. Schmalen, end, optical fiber communications, arXiv]

>> Named Entities are: 
[('65', 'CARDINAL'), ('M. Chagnon', 'PERSON'), ('F. Thouin', 'PERSON'), ('T. A. Eriksson', 'PERSON'), ('D. Lavery', 'ORG'), ('P. Bayvel', 'PERSON'), ('L. Schmalen', 'PERSON')]


============================ Sentence 950 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 951 =============================

[66] H. Kim, Y. Jiang, S. Kannan, S. Oh, and P. Viswanath, “Deepcode: Feedback codes via deep learning,” arXiv preprint arXiv:1807.00801, 2018. 


>> Tokens are: 
[[, 66, ], H., Kim, ,, Y., Jiang, ,, S., Kannan, ,, S., Oh, ,, P., Viswanath, ,, “, Deepcode, :, Feedback, codes, deep, learning, ,, ”, arXiv, preprint, arXiv:1807.00801, ,, 2018, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('66', 'NUM'), (']', 'PUNCT'), ('H.', 'PROPN'), ('Kim', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('Jiang', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('Kannan', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('Oh', 'INTJ'), (',', 'PUNCT'), ('P.', 'PROPN'), ('Viswanath', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Deepcode', 'PROPN'), (':', 'PUNCT'), ('Feedback', 'NOUN'), ('codes', 'NOUN'), ('deep', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('arXiv', 'NOUN'), ('preprint', 'VERB'), ('arXiv:1807.00801', 'PROPN'), (',', 'PUNCT'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('66', 'dep'), (']', 'punct'), ('H.', 'compound'), ('Kim', 'nsubj'), (',', 'punct'), ('Y.', 'compound'), ('Jiang', 'conj'), (',', 'punct'), ('S.', 'compound'), ('Kannan', 'conj'), (',', 'punct'), ('S.', 'compound'), ('Oh', 'intj'), (',', 'punct'), ('P.', 'compound'), ('Viswanath', 'conj'), (',', 'punct'), ('“', 'punct'), ('Deepcode', 'appos'), (':', 'punct'), ('Feedback', 'compound'), ('codes', 'appos'), ('deep', 'amod'), ('learning', 'pobj'), (',', 'punct'), ('”', 'punct'), ('arXiv', 'appos'), ('preprint', 'ROOT'), ('arXiv:1807.00801', 'dobj'), (',', 'punct'), ('2018', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 66], [66, ]], [], H.], [H., Kim], [Kim, ,], [,, Y.], [Y., Jiang], [Jiang, ,], [,, S.], [S., Kannan], [Kannan, ,], [,, S.], [S., Oh], [Oh, ,], [,, P.], [P., Viswanath], [Viswanath, ,], [,, “], [“, Deepcode], [Deepcode, :], [:, Feedback], [Feedback, codes], [codes, deep], [deep, learning], [learning, ,], [,, ”], [”, arXiv], [arXiv, preprint], [preprint, arXiv:1807.00801], [arXiv:1807.00801, ,], [,, 2018], [2018, .]]

>> Trigrams: 
[[[, 66, ]], [66, ], H.], [], H., Kim], [H., Kim, ,], [Kim, ,, Y.], [,, Y., Jiang], [Y., Jiang, ,], [Jiang, ,, S.], [,, S., Kannan], [S., Kannan, ,], [Kannan, ,, S.], [,, S., Oh], [S., Oh, ,], [Oh, ,, P.], [,, P., Viswanath], [P., Viswanath, ,], [Viswanath, ,, “], [,, “, Deepcode], [“, Deepcode, :], [Deepcode, :, Feedback], [:, Feedback, codes], [Feedback, codes, deep], [codes, deep, learning], [deep, learning, ,], [learning, ,, ”], [,, ”, arXiv], [”, arXiv, preprint], [arXiv, preprint, arXiv:1807.00801], [preprint, arXiv:1807.00801, ,], [arXiv:1807.00801, ,, 2018], [,, 2018, .]]

>> Noun Phrases are: 
[[66] H. Kim, Y. Jiang, S. Kannan, P. Viswanath, “Deepcode, Feedback codes, deep learning, arXiv, arXiv:1807.00801]

>> Named Entities are: 
[('66', 'CARDINAL'), ('H. Kim', 'PERSON'), ('Y. Jiang', 'PERSON'), ('S. Kannan', 'PERSON'), ('S. Oh', 'PERSON'), ('P. Viswanath', 'PERSON'), ('Deepcode: Feedback', 'WORK_OF_ART'), ('2018', 'DATE')]


============================ Sentence 952 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 953 =============================

[67] M. Kim, N. I. Kim, W. Lee, and D. H. Cho, “Deep learning- aided scma,” IEEE Communications Letters, vol. 


>> Tokens are: 
[[, 67, ], M., Kim, ,, N., I., Kim, ,, W., Lee, ,, D., H., Cho, ,, “, Deep, learning-, aided, scma, ,, ”, IEEE, Communications, Letters, ,, vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('67', 'NUM'), (']', 'PUNCT'), ('M.', 'PROPN'), ('Kim', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), ('I.', 'PROPN'), ('Kim', 'PROPN'), (',', 'PUNCT'), ('W.', 'PROPN'), ('Lee', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('H.', 'PROPN'), ('Cho', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Deep', 'ADJ'), ('learning-', 'ADJ'), ('aided', 'VERB'), ('scma', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('Communications', 'PROPN'), ('Letters', 'PROPN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('67', 'nummod'), (']', 'punct'), ('M.', 'compound'), ('Kim', 'ROOT'), (',', 'punct'), ('N.', 'compound'), ('I.', 'compound'), ('Kim', 'appos'), (',', 'punct'), ('W.', 'compound'), ('Lee', 'conj'), (',', 'punct'), ('D.', 'compound'), ('H.', 'compound'), ('Cho', 'conj'), (',', 'punct'), ('“', 'punct'), ('Deep', 'amod'), ('learning-', 'nmod'), ('aided', 'amod'), ('scma', 'appos'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('Communications', 'compound'), ('Letters', 'appos'), (',', 'punct'), ('vol', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[[, 67], [67, ]], [], M.], [M., Kim], [Kim, ,], [,, N.], [N., I.], [I., Kim], [Kim, ,], [,, W.], [W., Lee], [Lee, ,], [,, D.], [D., H.], [H., Cho], [Cho, ,], [,, “], [“, Deep], [Deep, learning-], [learning-, aided], [aided, scma], [scma, ,], [,, ”], [”, IEEE], [IEEE, Communications], [Communications, Letters], [Letters, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[[, 67, ]], [67, ], M.], [], M., Kim], [M., Kim, ,], [Kim, ,, N.], [,, N., I.], [N., I., Kim], [I., Kim, ,], [Kim, ,, W.], [,, W., Lee], [W., Lee, ,], [Lee, ,, D.], [,, D., H.], [D., H., Cho], [H., Cho, ,], [Cho, ,, “], [,, “, Deep], [“, Deep, learning-], [Deep, learning-, aided], [learning-, aided, scma], [aided, scma, ,], [scma, ,, ”], [,, ”, IEEE], [”, IEEE, Communications], [IEEE, Communications, Letters], [Communications, Letters, ,], [Letters, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[[67] M. Kim, N. I. Kim, W. Lee, D. H. Cho, Deep learning- aided scma, IEEE Communications Letters, vol]

>> Named Entities are: 
[('67', 'CARDINAL'), ('M. Kim', 'PERSON'), ('N. I. Kim', 'PERSON'), ('W. Lee', 'PERSON'), ('D. H. Cho', 'PERSON'), ('IEEE Communications Letters', 'ORG')]


============================ Sentence 954 =============================

22, no. 4, pp. 


>> Tokens are: 
[22, ,, ., 4, ,, pp, .] 

>> PoS Tags are: 
[('22', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('4', 'NUM'), (',', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('22', 'ROOT'), (',', 'punct'), ('.', 'punct'), ('4', 'nummod'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[22, ,], [,, .], [., 4], [4, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[22, ,, .], [,, ., 4], [., 4, ,], [4, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('22', 'CARDINAL'), ('4', 'CARDINAL')]


============================ Sentence 955 =============================

720–723, April 2018. 


>> Tokens are: 
[720–723, ,, April, 2018, .] 

>> PoS Tags are: 
[('720–723', 'NUM'), (',', 'PUNCT'), ('April', 'PROPN'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('720–723', 'ROOT'), (',', 'punct'), ('April', 'npadvmod'), ('2018', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[720–723, ,], [,, April], [April, 2018], [2018, .]]

>> Trigrams: 
[[720–723, ,, April], [,, April, 2018], [April, 2018, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('720–723', 'ORG'), ('April 2018', 'DATE')]


============================ Sentence 956 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 957 =============================

[68] E. Bourtsoulatze, D. Burth Kurka, and D. Gunduz, “Deep Joint Source-Channel Coding for Wireless Image Transmission,” ArXiv e-prints, Sep. 2018. 


>> Tokens are: 
[[, 68, ], E., Bourtsoulatze, ,, D., Burth, Kurka, ,, D., Gunduz, ,, “, Deep, Joint, Source, -, Channel, Coding, Wireless, Image, Transmission, ,, ”, ArXiv, e, -, prints, ,, Sep., 2018, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('68', 'NUM'), (']', 'PUNCT'), ('E.', 'PROPN'), ('Bourtsoulatze', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('Burth', 'PROPN'), ('Kurka', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('Gunduz', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Deep', 'ADJ'), ('Joint', 'PROPN'), ('Source', 'PROPN'), ('-', 'PUNCT'), ('Channel', 'PROPN'), ('Coding', 'PROPN'), ('Wireless', 'PROPN'), ('Image', 'PROPN'), ('Transmission', 'PROPN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('ArXiv', 'PROPN'), ('e', 'NOUN'), ('-', 'NOUN'), ('prints', 'NOUN'), (',', 'PUNCT'), ('Sep.', 'PROPN'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('68', 'dep'), (']', 'punct'), ('E.', 'compound'), ('Bourtsoulatze', 'ROOT'), (',', 'punct'), ('D.', 'compound'), ('Burth', 'compound'), ('Kurka', 'conj'), (',', 'punct'), ('D.', 'compound'), ('Gunduz', 'conj'), (',', 'punct'), ('“', 'punct'), ('Deep', 'amod'), ('Joint', 'compound'), ('Source', 'compound'), ('-', 'punct'), ('Channel', 'compound'), ('Coding', 'appos'), ('Wireless', 'compound'), ('Image', 'compound'), ('Transmission', 'pobj'), (',', 'punct'), ('”', 'punct'), ('ArXiv', 'appos'), ('e', 'punct'), ('-', 'punct'), ('prints', 'appos'), (',', 'punct'), ('Sep.', 'appos'), ('2018', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[[, 68], [68, ]], [], E.], [E., Bourtsoulatze], [Bourtsoulatze, ,], [,, D.], [D., Burth], [Burth, Kurka], [Kurka, ,], [,, D.], [D., Gunduz], [Gunduz, ,], [,, “], [“, Deep], [Deep, Joint], [Joint, Source], [Source, -], [-, Channel], [Channel, Coding], [Coding, Wireless], [Wireless, Image], [Image, Transmission], [Transmission, ,], [,, ”], [”, ArXiv], [ArXiv, e], [e, -], [-, prints], [prints, ,], [,, Sep.], [Sep., 2018], [2018, .]]

>> Trigrams: 
[[[, 68, ]], [68, ], E.], [], E., Bourtsoulatze], [E., Bourtsoulatze, ,], [Bourtsoulatze, ,, D.], [,, D., Burth], [D., Burth, Kurka], [Burth, Kurka, ,], [Kurka, ,, D.], [,, D., Gunduz], [D., Gunduz, ,], [Gunduz, ,, “], [,, “, Deep], [“, Deep, Joint], [Deep, Joint, Source], [Joint, Source, -], [Source, -, Channel], [-, Channel, Coding], [Channel, Coding, Wireless], [Coding, Wireless, Image], [Wireless, Image, Transmission], [Image, Transmission, ,], [Transmission, ,, ”], [,, ”, ArXiv], [”, ArXiv, e], [ArXiv, e, -], [e, -, prints], [-, prints, ,], [prints, ,, Sep.], [,, Sep., 2018], [Sep., 2018, .]]

>> Noun Phrases are: 
[[68] E. Bourtsoulatze, D. Burth Kurka, D. Gunduz, Deep Joint Source-Channel Coding, Wireless Image Transmission, ArXiv, prints, Sep.]

>> Named Entities are: 
[('68', 'CARDINAL'), ('D.', 'NORP'), ('Burth Kurka', 'PERSON'), ('D. Gunduz', 'PERSON'), ('Deep Joint Source-Channel Coding for Wireless Image Transmission', 'WORK_OF_ART'), ('ArXiv', 'WORK_OF_ART'), ('Sep. 2018', 'DATE')]


============================ Sentence 958 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 959 =============================

[69] C.-K. Wen, W.-T. Shih, and S. Jin, “Deep learning for massive mimo csi feedback,” IEEE Wireless Communications Letters, 2018. 


>> Tokens are: 
[[, 69, ], C.-K., Wen, ,, W.-T., Shih, ,, S., Jin, ,, “, Deep, learning, massive, mimo, csi, feedback, ,, ”, IEEE, Wireless, Communications, Letters, ,, 2018, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('69', 'NUM'), (']', 'PUNCT'), ('C.-K.', 'PROPN'), ('Wen', 'PROPN'), (',', 'PUNCT'), ('W.-T.', 'PROPN'), ('Shih', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('Jin', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Deep', 'ADJ'), ('learning', 'NOUN'), ('massive', 'ADJ'), ('mimo', 'ADJ'), ('csi', 'ADJ'), ('feedback', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('Wireless', 'PROPN'), ('Communications', 'PROPN'), ('Letters', 'PROPN'), (',', 'PUNCT'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('69', 'dep'), (']', 'punct'), ('C.-K.', 'compound'), ('Wen', 'ROOT'), (',', 'punct'), ('W.-T.', 'compound'), ('Shih', 'conj'), (',', 'punct'), ('S.', 'compound'), ('Jin', 'conj'), (',', 'punct'), ('“', 'punct'), ('Deep', 'amod'), ('learning', 'appos'), ('massive', 'amod'), ('mimo', 'amod'), ('csi', 'amod'), ('feedback', 'pobj'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('Wireless', 'compound'), ('Communications', 'compound'), ('Letters', 'appos'), (',', 'punct'), ('2018', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 69], [69, ]], [], C.-K.], [C.-K., Wen], [Wen, ,], [,, W.-T.], [W.-T., Shih], [Shih, ,], [,, S.], [S., Jin], [Jin, ,], [,, “], [“, Deep], [Deep, learning], [learning, massive], [massive, mimo], [mimo, csi], [csi, feedback], [feedback, ,], [,, ”], [”, IEEE], [IEEE, Wireless], [Wireless, Communications], [Communications, Letters], [Letters, ,], [,, 2018], [2018, .]]

>> Trigrams: 
[[[, 69, ]], [69, ], C.-K.], [], C.-K., Wen], [C.-K., Wen, ,], [Wen, ,, W.-T.], [,, W.-T., Shih], [W.-T., Shih, ,], [Shih, ,, S.], [,, S., Jin], [S., Jin, ,], [Jin, ,, “], [,, “, Deep], [“, Deep, learning], [Deep, learning, massive], [learning, massive, mimo], [massive, mimo, csi], [mimo, csi, feedback], [csi, feedback, ,], [feedback, ,, ”], [,, ”, IEEE], [”, IEEE, Wireless], [IEEE, Wireless, Communications], [Wireless, Communications, Letters], [Communications, Letters, ,], [Letters, ,, 2018], [,, 2018, .]]

>> Noun Phrases are: 
[[69] C.-K. Wen, W.-T. Shih, S. Jin, Deep learning, massive mimo csi feedback, IEEE Wireless Communications Letters]

>> Named Entities are: 
[('69', 'CARDINAL'), ('Shih', 'PERSON'), ('S. Jin', 'PERSON'), ('2018', 'DATE')]


============================ Sentence 960 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 961 =============================

[70] C. Xiao, D. Yang, Z. Chen, and G. Tan, “3-d ble indoor localization based on denoising autoencoder,” IEEE Access, vol. 


>> Tokens are: 
[[, 70, ], C., Xiao, ,, D., Yang, ,, Z., Chen, ,, G., Tan, ,, “, 3, -, d, ble, indoor, localization, based, denoising, autoencoder, ,, ”, IEEE, Access, ,, vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('70', 'NUM'), (']', 'PUNCT'), ('C.', 'PROPN'), ('Xiao', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('Yang', 'PROPN'), (',', 'PUNCT'), ('Z.', 'PROPN'), ('Chen', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('Tan', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('3', 'NUM'), ('-', 'PUNCT'), ('d', 'NOUN'), ('ble', 'ADV'), ('indoor', 'ADJ'), ('localization', 'NOUN'), ('based', 'VERB'), ('denoising', 'VERB'), ('autoencoder', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('Access', 'PROPN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('70', 'dep'), (']', 'punct'), ('C.', 'compound'), ('Xiao', 'ROOT'), (',', 'punct'), ('D.', 'compound'), ('Yang', 'appos'), (',', 'punct'), ('Z.', 'compound'), ('Chen', 'conj'), (',', 'punct'), ('G.', 'compound'), ('Tan', 'conj'), (',', 'punct'), ('“', 'punct'), ('3', 'nummod'), ('-', 'punct'), ('d', 'prep'), ('ble', 'amod'), ('indoor', 'amod'), ('localization', 'appos'), ('based', 'acl'), ('denoising', 'pcomp'), ('autoencoder', 'dobj'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('Access', 'appos'), (',', 'punct'), ('vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[[, 70], [70, ]], [], C.], [C., Xiao], [Xiao, ,], [,, D.], [D., Yang], [Yang, ,], [,, Z.], [Z., Chen], [Chen, ,], [,, G.], [G., Tan], [Tan, ,], [,, “], [“, 3], [3, -], [-, d], [d, ble], [ble, indoor], [indoor, localization], [localization, based], [based, denoising], [denoising, autoencoder], [autoencoder, ,], [,, ”], [”, IEEE], [IEEE, Access], [Access, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[[, 70, ]], [70, ], C.], [], C., Xiao], [C., Xiao, ,], [Xiao, ,, D.], [,, D., Yang], [D., Yang, ,], [Yang, ,, Z.], [,, Z., Chen], [Z., Chen, ,], [Chen, ,, G.], [,, G., Tan], [G., Tan, ,], [Tan, ,, “], [,, “, 3], [“, 3, -], [3, -, d], [-, d, ble], [d, ble, indoor], [ble, indoor, localization], [indoor, localization, based], [localization, based, denoising], [based, denoising, autoencoder], [denoising, autoencoder, ,], [autoencoder, ,, ”], [,, ”, IEEE], [”, IEEE, Access], [IEEE, Access, ,], [Access, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[[70] C. Xiao, D. Yang, Z. Chen, G. Tan, 3-d ble indoor localization, autoencoder, IEEE Access]

>> Named Entities are: 
[('70', 'CARDINAL'), ('C. Xiao', 'PERSON'), ('D. Yang', 'PERSON'), ('Z. Chen', 'PERSON'), ('G. Tan', 'PERSON'), ('3', 'CARDINAL')]


============================ Sentence 962 =============================

5, pp. 


>> Tokens are: 
[5, ,, pp, .] 

>> PoS Tags are: 
[('5', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('5', 'ROOT'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[5, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[5, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[pp]

>> Named Entities are: 
[('5', 'CARDINAL')]


============================ Sentence 963 =============================

12 751–12 760, 2017. 


>> Tokens are: 
[12, 751–12, 760, ,, 2017, .] 

>> PoS Tags are: 
[('12', 'NUM'), ('751–12', 'NOUN'), ('760', 'NUM'), (',', 'PUNCT'), ('2017', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('12', 'nummod'), ('751–12', 'ROOT'), ('760', 'nummod'), (',', 'punct'), ('2017', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[12, 751–12], [751–12, 760], [760, ,], [,, 2017], [2017, .]]

>> Trigrams: 
[[12, 751–12, 760], [751–12, 760, ,], [760, ,, 2017], [,, 2017, .]]

>> Noun Phrases are: 
[12 751–12]

>> Named Entities are: 
[('12', 'CARDINAL'), ('760', 'CARDINAL'), ('2017', 'DATE')]


============================ Sentence 964 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 965 =============================

[71] T. J. O’Shea, T. Roy, and N. West, “Approximating the void: Learning stochastic channel models from observation with variational generative adversarial networks,” arXiv preprint arXiv:1805.06350, 2018. 


>> Tokens are: 
[[, 71, ], T., J., O’Shea, ,, T., Roy, ,, N., West, ,, “, Approximating, void, :, Learning, stochastic, channel, models, observation, variational, generative, adversarial, networks, ,, ”, arXiv, preprint, arXiv:1805.06350, ,, 2018, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('71', 'NUM'), (']', 'PUNCT'), ('T.', 'PROPN'), ('J.', 'PROPN'), ('O’Shea', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), ('Roy', 'PROPN'), (',', 'PUNCT'), ('N.', 'PROPN'), ('West', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Approximating', 'VERB'), ('void', 'NOUN'), (':', 'PUNCT'), ('Learning', 'VERB'), ('stochastic', 'NOUN'), ('channel', 'NOUN'), ('models', 'NOUN'), ('observation', 'NOUN'), ('variational', 'ADJ'), ('generative', 'ADJ'), ('adversarial', 'ADJ'), ('networks', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('arXiv', 'NOUN'), ('preprint', 'NOUN'), ('arXiv:1805.06350', 'PROPN'), (',', 'PUNCT'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('71', 'dep'), (']', 'dep'), ('T.', 'compound'), ('J.', 'compound'), ('O’Shea', 'nsubj'), (',', 'punct'), ('T.', 'compound'), ('Roy', 'appos'), (',', 'punct'), ('N.', 'compound'), ('West', 'conj'), (',', 'punct'), ('“', 'punct'), ('Approximating', 'acl'), ('void', 'dobj'), (':', 'punct'), ('Learning', 'acl'), ('stochastic', 'amod'), ('channel', 'compound'), ('models', 'dobj'), ('observation', 'pobj'), ('variational', 'amod'), ('generative', 'amod'), ('adversarial', 'amod'), ('networks', 'pobj'), (',', 'punct'), ('”', 'punct'), ('arXiv', 'appos'), ('preprint', 'ROOT'), ('arXiv:1805.06350', 'dobj'), (',', 'punct'), ('2018', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 71], [71, ]], [], T.], [T., J.], [J., O’Shea], [O’Shea, ,], [,, T.], [T., Roy], [Roy, ,], [,, N.], [N., West], [West, ,], [,, “], [“, Approximating], [Approximating, void], [void, :], [:, Learning], [Learning, stochastic], [stochastic, channel], [channel, models], [models, observation], [observation, variational], [variational, generative], [generative, adversarial], [adversarial, networks], [networks, ,], [,, ”], [”, arXiv], [arXiv, preprint], [preprint, arXiv:1805.06350], [arXiv:1805.06350, ,], [,, 2018], [2018, .]]

>> Trigrams: 
[[[, 71, ]], [71, ], T.], [], T., J.], [T., J., O’Shea], [J., O’Shea, ,], [O’Shea, ,, T.], [,, T., Roy], [T., Roy, ,], [Roy, ,, N.], [,, N., West], [N., West, ,], [West, ,, “], [,, “, Approximating], [“, Approximating, void], [Approximating, void, :], [void, :, Learning], [:, Learning, stochastic], [Learning, stochastic, channel], [stochastic, channel, models], [channel, models, observation], [models, observation, variational], [observation, variational, generative], [variational, generative, adversarial], [generative, adversarial, networks], [adversarial, networks, ,], [networks, ,, ”], [,, ”, arXiv], [”, arXiv, preprint], [arXiv, preprint, arXiv:1805.06350], [preprint, arXiv:1805.06350, ,], [arXiv:1805.06350, ,, 2018], [,, 2018, .]]

>> Noun Phrases are: 
[[71] T. J. O’Shea, T. Roy, N. West, the void, stochastic channel models, observation, variational generative adversarial networks, arXiv, arXiv:1805.06350]

>> Named Entities are: 
[('71', 'CARDINAL'), ('T. Roy', 'PERSON'), ('N. West', 'PERSON'), ('2018', 'DATE')]


============================ Sentence 966 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 967 =============================

[72] H. Ye, G. Y. Li, B.-H. F. Juang, and K. Sivanesan, “Channel agnostic end-to-end learning based communication systems with conditional gan,” arXiv preprint arXiv:1807.00447, 2018. 


>> Tokens are: 
[[, 72, ], H., Ye, ,, G., Y., Li, ,, B.-H., F., Juang, ,, K., Sivanesan, ,, “, Channel, agnostic, end, -, -, end, learning, based, communication, systems, conditional, gan, ,, ”, arXiv, preprint, arXiv:1807.00447, ,, 2018, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('72', 'NUM'), (']', 'PUNCT'), ('H.', 'PROPN'), ('Ye', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('Y.', 'PROPN'), ('Li', 'PROPN'), (',', 'PUNCT'), ('B.-H.', 'NOUN'), ('F.', 'PROPN'), ('Juang', 'PROPN'), (',', 'PUNCT'), ('K.', 'PROPN'), ('Sivanesan', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Channel', 'PROPN'), ('agnostic', 'ADJ'), ('end', 'NOUN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('end', 'NOUN'), ('learning', 'NOUN'), ('based', 'VERB'), ('communication', 'NOUN'), ('systems', 'NOUN'), ('conditional', 'ADJ'), ('gan', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('arXiv', 'NOUN'), ('preprint', 'NOUN'), ('arXiv:1807.00447', 'PROPN'), (',', 'PUNCT'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('72', 'dep'), (']', 'punct'), ('H.', 'compound'), ('Ye', 'ROOT'), (',', 'punct'), ('G.', 'compound'), ('Y.', 'compound'), ('Li', 'appos'), (',', 'punct'), ('B.-H.', 'compound'), ('F.', 'compound'), ('Juang', 'conj'), (',', 'punct'), ('K.', 'compound'), ('Sivanesan', 'conj'), (',', 'punct'), ('“', 'punct'), ('Channel', 'nmod'), ('agnostic', 'amod'), ('end', 'nmod'), ('-', 'punct'), ('-', 'punct'), ('end', 'pobj'), ('learning', 'npadvmod'), ('based', 'amod'), ('communication', 'compound'), ('systems', 'appos'), ('conditional', 'amod'), ('gan', 'pobj'), (',', 'punct'), ('”', 'punct'), ('arXiv', 'compound'), ('preprint', 'compound'), ('arXiv:1807.00447', 'appos'), (',', 'punct'), ('2018', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 72], [72, ]], [], H.], [H., Ye], [Ye, ,], [,, G.], [G., Y.], [Y., Li], [Li, ,], [,, B.-H.], [B.-H., F.], [F., Juang], [Juang, ,], [,, K.], [K., Sivanesan], [Sivanesan, ,], [,, “], [“, Channel], [Channel, agnostic], [agnostic, end], [end, -], [-, -], [-, end], [end, learning], [learning, based], [based, communication], [communication, systems], [systems, conditional], [conditional, gan], [gan, ,], [,, ”], [”, arXiv], [arXiv, preprint], [preprint, arXiv:1807.00447], [arXiv:1807.00447, ,], [,, 2018], [2018, .]]

>> Trigrams: 
[[[, 72, ]], [72, ], H.], [], H., Ye], [H., Ye, ,], [Ye, ,, G.], [,, G., Y.], [G., Y., Li], [Y., Li, ,], [Li, ,, B.-H.], [,, B.-H., F.], [B.-H., F., Juang], [F., Juang, ,], [Juang, ,, K.], [,, K., Sivanesan], [K., Sivanesan, ,], [Sivanesan, ,, “], [,, “, Channel], [“, Channel, agnostic], [Channel, agnostic, end], [agnostic, end, -], [end, -, -], [-, -, end], [-, end, learning], [end, learning, based], [learning, based, communication], [based, communication, systems], [communication, systems, conditional], [systems, conditional, gan], [conditional, gan, ,], [gan, ,, ”], [,, ”, arXiv], [”, arXiv, preprint], [arXiv, preprint, arXiv:1807.00447], [preprint, arXiv:1807.00447, ,], [arXiv:1807.00447, ,, 2018], [,, 2018, .]]

>> Noun Phrases are: 
[[72] H. Ye, G. Y. Li, B.-H. F. Juang, K. Sivanesan, end, conditional gan, arXiv preprint arXiv:1807.00447]

>> Named Entities are: 
[('72', 'CARDINAL'), ('H. Ye', 'PERSON'), ('G. Y. Li', 'PERSON'), ('F. Juang', 'PERSON'), ('K. Sivanesan', 'PERSON'), ('2018', 'DATE')]


============================ Sentence 968 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 969 =============================

[73] F. Liang, C. Shen, W. Yu, and F. Wu, “Towards Optimal Power Control via Ensembling Deep Neural Networks,” ArXiv e-prints, Jul. 2018. 


>> Tokens are: 
[[, 73, ], F., Liang, ,, C., Shen, ,, W., Yu, ,, F., Wu, ,, “, Optimal, Power, Control, Ensembling, Deep, Neural, Networks, ,, ”, ArXiv, e, -, prints, ,, Jul., 2018, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('73', 'NUM'), (']', 'PUNCT'), ('F.', 'PROPN'), ('Liang', 'PROPN'), (',', 'PUNCT'), ('C.', 'PROPN'), ('Shen', 'PROPN'), (',', 'PUNCT'), ('W.', 'PROPN'), ('Yu', 'PROPN'), (',', 'PUNCT'), ('F.', 'PROPN'), ('Wu', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Optimal', 'PROPN'), ('Power', 'PROPN'), ('Control', 'PROPN'), ('Ensembling', 'PROPN'), ('Deep', 'PROPN'), ('Neural', 'PROPN'), ('Networks', 'PROPN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('ArXiv', 'PROPN'), ('e', 'NOUN'), ('-', 'NOUN'), ('prints', 'NOUN'), (',', 'PUNCT'), ('Jul.', 'PROPN'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('73', 'dep'), (']', 'punct'), ('F.', 'compound'), ('Liang', 'ROOT'), (',', 'punct'), ('C.', 'compound'), ('Shen', 'appos'), (',', 'punct'), ('W.', 'compound'), ('Yu', 'conj'), (',', 'punct'), ('F.', 'compound'), ('Wu', 'conj'), (',', 'punct'), ('“', 'punct'), ('Optimal', 'compound'), ('Power', 'compound'), ('Control', 'pobj'), ('Ensembling', 'compound'), ('Deep', 'compound'), ('Neural', 'compound'), ('Networks', 'pobj'), (',', 'punct'), ('”', 'punct'), ('ArXiv', 'appos'), ('e', 'punct'), ('-', 'appos'), ('prints', 'appos'), (',', 'punct'), ('Jul.', 'appos'), ('2018', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[[, 73], [73, ]], [], F.], [F., Liang], [Liang, ,], [,, C.], [C., Shen], [Shen, ,], [,, W.], [W., Yu], [Yu, ,], [,, F.], [F., Wu], [Wu, ,], [,, “], [“, Optimal], [Optimal, Power], [Power, Control], [Control, Ensembling], [Ensembling, Deep], [Deep, Neural], [Neural, Networks], [Networks, ,], [,, ”], [”, ArXiv], [ArXiv, e], [e, -], [-, prints], [prints, ,], [,, Jul.], [Jul., 2018], [2018, .]]

>> Trigrams: 
[[[, 73, ]], [73, ], F.], [], F., Liang], [F., Liang, ,], [Liang, ,, C.], [,, C., Shen], [C., Shen, ,], [Shen, ,, W.], [,, W., Yu], [W., Yu, ,], [Yu, ,, F.], [,, F., Wu], [F., Wu, ,], [Wu, ,, “], [,, “, Optimal], [“, Optimal, Power], [Optimal, Power, Control], [Power, Control, Ensembling], [Control, Ensembling, Deep], [Ensembling, Deep, Neural], [Deep, Neural, Networks], [Neural, Networks, ,], [Networks, ,, ”], [,, ”, ArXiv], [”, ArXiv, e], [ArXiv, e, -], [e, -, prints], [-, prints, ,], [prints, ,, Jul.], [,, Jul., 2018], [Jul., 2018, .]]

>> Noun Phrases are: 
[[73] F. Liang, C. Shen, W. Yu, F. Wu, Optimal Power Control, Ensembling Deep Neural Networks, ArXiv, -, prints, Jul.]

>> Named Entities are: 
[('73', 'CARDINAL'), ('F. Liang', 'PERSON'), ('C. Shen', 'PERSON'), ('W. Yu', 'PERSON'), ('F. Wu', 'PERSON'), ('Towards Optimal Power Control via Ensembling Deep Neural Networks', 'WORK_OF_ART'), ('ArXiv', 'WORK_OF_ART'), ('Jul. 2018', 'DATE')]


============================ Sentence 970 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 971 =============================

[74] D. Neumann, T. Wiese, and W. Utschick, “Learning the mmse channel estimator,” IEEE Transactions on Signal Processing, 2018. 


>> Tokens are: 
[[, 74, ], D., Neumann, ,, T., Wiese, ,, W., Utschick, ,, “, Learning, mmse, channel, estimator, ,, ”, IEEE, Transactions, Signal, Processing, ,, 2018, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('74', 'NUM'), (']', 'PUNCT'), ('D.', 'PROPN'), ('Neumann', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), ('Wiese', 'PROPN'), (',', 'PUNCT'), ('W.', 'PROPN'), ('Utschick', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Learning', 'VERB'), ('mmse', 'ADJ'), ('channel', 'NOUN'), ('estimator', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('Transactions', 'PROPN'), ('Signal', 'PROPN'), ('Processing', 'PROPN'), (',', 'PUNCT'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('74', 'dep'), (']', 'punct'), ('D.', 'compound'), ('Neumann', 'ROOT'), (',', 'punct'), ('T.', 'compound'), ('Wiese', 'appos'), (',', 'punct'), ('W.', 'compound'), ('Utschick', 'conj'), (',', 'punct'), ('“', 'punct'), ('Learning', 'acl'), ('mmse', 'amod'), ('channel', 'compound'), ('estimator', 'dobj'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('Transactions', 'appos'), ('Signal', 'compound'), ('Processing', 'pobj'), (',', 'punct'), ('2018', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 74], [74, ]], [], D.], [D., Neumann], [Neumann, ,], [,, T.], [T., Wiese], [Wiese, ,], [,, W.], [W., Utschick], [Utschick, ,], [,, “], [“, Learning], [Learning, mmse], [mmse, channel], [channel, estimator], [estimator, ,], [,, ”], [”, IEEE], [IEEE, Transactions], [Transactions, Signal], [Signal, Processing], [Processing, ,], [,, 2018], [2018, .]]

>> Trigrams: 
[[[, 74, ]], [74, ], D.], [], D., Neumann], [D., Neumann, ,], [Neumann, ,, T.], [,, T., Wiese], [T., Wiese, ,], [Wiese, ,, W.], [,, W., Utschick], [W., Utschick, ,], [Utschick, ,, “], [,, “, Learning], [“, Learning, mmse], [Learning, mmse, channel], [mmse, channel, estimator], [channel, estimator, ,], [estimator, ,, ”], [,, ”, IEEE], [”, IEEE, Transactions], [IEEE, Transactions, Signal], [Transactions, Signal, Processing], [Signal, Processing, ,], [Processing, ,, 2018], [,, 2018, .]]

>> Noun Phrases are: 
[[74] D. Neumann, T. Wiese, W. Utschick, the mmse channel estimator, ” IEEE Transactions, Signal Processing]

>> Named Entities are: 
[('74', 'CARDINAL'), ('T. Wiese', 'PERSON'), ('W. Utschick', 'PERSON'), ('IEEE Transactions on Signal Processing, 2018', 'WORK_OF_ART')]


============================ Sentence 972 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 973 =============================

[75] K. Davaslioglu and Y. E. Sagduyu, “Generative ad- versarial learning for spectrum sensing,” arXiv preprint arXiv:1804.00709, 2018. 


>> Tokens are: 
[[, 75, ], K., Davaslioglu, Y., E., Sagduyu, ,, “, Generative, ad-, versarial, learning, spectrum, sensing, ,, ”, arXiv, preprint, arXiv:1804.00709, ,, 2018, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('75', 'NUM'), (']', 'PUNCT'), ('K.', 'PROPN'), ('Davaslioglu', 'PROPN'), ('Y.', 'PROPN'), ('E.', 'PROPN'), ('Sagduyu', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Generative', 'ADJ'), ('ad-', 'X'), ('versarial', 'ADJ'), ('learning', 'NOUN'), ('spectrum', 'NOUN'), ('sensing', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('arXiv', 'NOUN'), ('preprint', 'VERB'), ('arXiv:1804.00709', 'PROPN'), (',', 'PUNCT'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('75', 'dep'), (']', 'punct'), ('K.', 'compound'), ('Davaslioglu', 'nsubj'), ('Y.', 'compound'), ('E.', 'compound'), ('Sagduyu', 'conj'), (',', 'punct'), ('“', 'punct'), ('Generative', 'amod'), ('ad-', 'nmod'), ('versarial', 'amod'), ('learning', 'appos'), ('spectrum', 'compound'), ('sensing', 'pobj'), (',', 'punct'), ('”', 'punct'), ('arXiv', 'nsubj'), ('preprint', 'ROOT'), ('arXiv:1804.00709', 'dobj'), (',', 'punct'), ('2018', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[[, 75], [75, ]], [], K.], [K., Davaslioglu], [Davaslioglu, Y.], [Y., E.], [E., Sagduyu], [Sagduyu, ,], [,, “], [“, Generative], [Generative, ad-], [ad-, versarial], [versarial, learning], [learning, spectrum], [spectrum, sensing], [sensing, ,], [,, ”], [”, arXiv], [arXiv, preprint], [preprint, arXiv:1804.00709], [arXiv:1804.00709, ,], [,, 2018], [2018, .]]

>> Trigrams: 
[[[, 75, ]], [75, ], K.], [], K., Davaslioglu], [K., Davaslioglu, Y.], [Davaslioglu, Y., E.], [Y., E., Sagduyu], [E., Sagduyu, ,], [Sagduyu, ,, “], [,, “, Generative], [“, Generative, ad-], [Generative, ad-, versarial], [ad-, versarial, learning], [versarial, learning, spectrum], [learning, spectrum, sensing], [spectrum, sensing, ,], [sensing, ,, ”], [,, ”, arXiv], [”, arXiv, preprint], [arXiv, preprint, arXiv:1804.00709], [preprint, arXiv:1804.00709, ,], [arXiv:1804.00709, ,, 2018], [,, 2018, .]]

>> Noun Phrases are: 
[[75] K. Davaslioglu, Y. E. Sagduyu, Generative ad- versarial learning, spectrum sensing, arXiv, arXiv:1804.00709]

>> Named Entities are: 
[('75', 'CARDINAL'), ('K. Davaslioglu', 'PERSON'), ('Y. E. Sagduyu', 'PERSON'), ('2018', 'DATE')]


============================ Sentence 974 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 975 =============================

[76] A. Abdelnasser, E. Hossain, and D. I. Kim, “Clustering and resource allocation for dense femtocells in a two-tier cellular ofdma network,” IEEE Transactions on Wireless Communica- tions, vol. 


>> Tokens are: 
[[, 76, ], A., Abdelnasser, ,, E., Hossain, ,, D., I., Kim, ,, “, Clustering, resource, allocation, dense, femtocells, -, tier, cellular, ofdma, network, ,, ”, IEEE, Transactions, Wireless, Communica-, tions, ,, vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('76', 'NUM'), (']', 'PUNCT'), ('A.', 'PROPN'), ('Abdelnasser', 'PROPN'), (',', 'PUNCT'), ('E.', 'PROPN'), ('Hossain', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('I.', 'PROPN'), ('Kim', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Clustering', 'NOUN'), ('resource', 'NOUN'), ('allocation', 'NOUN'), ('dense', 'ADJ'), ('femtocells', 'NOUN'), ('-', 'PUNCT'), ('tier', 'NOUN'), ('cellular', 'ADJ'), ('ofdma', 'NOUN'), ('network', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('IEEE', 'PROPN'), ('Transactions', 'PROPN'), ('Wireless', 'PROPN'), ('Communica-', 'PROPN'), ('tions', 'NOUN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('76', 'nummod'), (']', 'punct'), ('A.', 'compound'), ('Abdelnasser', 'ROOT'), (',', 'punct'), ('E.', 'compound'), ('Hossain', 'conj'), (',', 'punct'), ('D.', 'compound'), ('I.', 'compound'), ('Kim', 'conj'), (',', 'punct'), ('“', 'punct'), ('Clustering', 'amod'), ('resource', 'conj'), ('allocation', 'appos'), ('dense', 'amod'), ('femtocells', 'pobj'), ('-', 'punct'), ('tier', 'nmod'), ('cellular', 'amod'), ('ofdma', 'compound'), ('network', 'pobj'), (',', 'punct'), ('”', 'punct'), ('IEEE', 'compound'), ('Transactions', 'appos'), ('Wireless', 'compound'), ('Communica-', 'compound'), ('tions', 'pobj'), (',', 'punct'), ('vol', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 76], [76, ]], [], A.], [A., Abdelnasser], [Abdelnasser, ,], [,, E.], [E., Hossain], [Hossain, ,], [,, D.], [D., I.], [I., Kim], [Kim, ,], [,, “], [“, Clustering], [Clustering, resource], [resource, allocation], [allocation, dense], [dense, femtocells], [femtocells, -], [-, tier], [tier, cellular], [cellular, ofdma], [ofdma, network], [network, ,], [,, ”], [”, IEEE], [IEEE, Transactions], [Transactions, Wireless], [Wireless, Communica-], [Communica-, tions], [tions, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[[, 76, ]], [76, ], A.], [], A., Abdelnasser], [A., Abdelnasser, ,], [Abdelnasser, ,, E.], [,, E., Hossain], [E., Hossain, ,], [Hossain, ,, D.], [,, D., I.], [D., I., Kim], [I., Kim, ,], [Kim, ,, “], [,, “, Clustering], [“, Clustering, resource], [Clustering, resource, allocation], [resource, allocation, dense], [allocation, dense, femtocells], [dense, femtocells, -], [femtocells, -, tier], [-, tier, cellular], [tier, cellular, ofdma], [cellular, ofdma, network], [ofdma, network, ,], [network, ,, ”], [,, ”, IEEE], [”, IEEE, Transactions], [IEEE, Transactions, Wireless], [Transactions, Wireless, Communica-], [Wireless, Communica-, tions], [Communica-, tions, ,], [tions, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[[76] A. Abdelnasser, E. Hossain, D. I. Kim, Clustering and resource allocation, dense femtocells, a two-tier cellular ofdma network, IEEE Transactions, Wireless Communica- tions, vol]

>> Named Entities are: 
[('76', 'CARDINAL'), ('E. Hossain', 'PERSON'), ('D. I. Kim', 'NORP'), ('two', 'CARDINAL'), ('IEEE Transactions on Wireless', 'WORK_OF_ART')]


============================ Sentence 976 =============================

13, no. 3, pp. 


>> Tokens are: 
[13, ,, ., 3, ,, pp, .] 

>> PoS Tags are: 
[('13', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('3', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('13', 'ROOT'), (',', 'punct'), ('.', 'punct'), ('3', 'nummod'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[13, ,], [,, .], [., 3], [3, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[13, ,, .], [,, ., 3], [., 3, ,], [3, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[pp]

>> Named Entities are: 
[('13', 'CARDINAL'), ('3', 'CARDINAL')]


============================ Sentence 977 =============================

1628–1641, 2014. 


>> Tokens are: 
[1628–1641, ,, 2014, .] 

>> PoS Tags are: 
[('1628–1641', 'NUM'), (',', 'PUNCT'), ('2014', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1628–1641', 'ROOT'), (',', 'punct'), ('2014', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[1628–1641, ,], [,, 2014], [2014, .]]

>> Trigrams: 
[[1628–1641, ,, 2014], [,, 2014, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1628–1641', 'CARDINAL')]


============================ Sentence 978 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 979 =============================

[77] A. A. Abbasi and M. Younis, “A survey on clustering algo- rithms for wireless sensor networks,” Computer communica- tions, vol. 


>> Tokens are: 
[[, 77, ], A., A., Abbasi, M., Younis, ,, “, survey, clustering, algo-, rithms, wireless, sensor, networks, ,, ”, Computer, communica-, tions, ,, vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('77', 'NUM'), (']', 'PUNCT'), ('A.', 'NOUN'), ('A.', 'PROPN'), ('Abbasi', 'PROPN'), ('M.', 'PROPN'), ('Younis', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('survey', 'NOUN'), ('clustering', 'VERB'), ('algo-', 'ADJ'), ('rithms', 'NOUN'), ('wireless', 'ADJ'), ('sensor', 'NOUN'), ('networks', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('Computer', 'NOUN'), ('communica-', 'NOUN'), ('tions', 'NOUN'), (',', 'PUNCT'), ('vol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('77', 'nummod'), (']', 'punct'), ('A.', 'compound'), ('A.', 'compound'), ('Abbasi', 'ROOT'), ('M.', 'compound'), ('Younis', 'conj'), (',', 'punct'), ('“', 'punct'), ('survey', 'appos'), ('clustering', 'amod'), ('algo-', 'amod'), ('rithms', 'pobj'), ('wireless', 'amod'), ('sensor', 'compound'), ('networks', 'pobj'), (',', 'punct'), ('”', 'punct'), ('Computer', 'compound'), ('communica-', 'compound'), ('tions', 'appos'), (',', 'punct'), ('vol', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[[, 77], [77, ]], [], A.], [A., A.], [A., Abbasi], [Abbasi, M.], [M., Younis], [Younis, ,], [,, “], [“, survey], [survey, clustering], [clustering, algo-], [algo-, rithms], [rithms, wireless], [wireless, sensor], [sensor, networks], [networks, ,], [,, ”], [”, Computer], [Computer, communica-], [communica-, tions], [tions, ,], [,, vol], [vol, .]]

>> Trigrams: 
[[[, 77, ]], [77, ], A.], [], A., A.], [A., A., Abbasi], [A., Abbasi, M.], [Abbasi, M., Younis], [M., Younis, ,], [Younis, ,, “], [,, “, survey], [“, survey, clustering], [survey, clustering, algo-], [clustering, algo-, rithms], [algo-, rithms, wireless], [rithms, wireless, sensor], [wireless, sensor, networks], [sensor, networks, ,], [networks, ,, ”], [,, ”, Computer], [”, Computer, communica-], [Computer, communica-, tions], [communica-, tions, ,], [tions, ,, vol], [,, vol, .]]

>> Noun Phrases are: 
[[77] A. A. Abbasi, M. Younis, A survey, clustering algo- rithms, wireless sensor networks, ” Computer communica- tions, vol]

>> Named Entities are: 
[('A. A. Abbasi', 'PERSON'), ('M. Younis', 'PERSON')]


============================ Sentence 980 =============================

30, no. 


>> Tokens are: 
[30, ,, .] 

>> PoS Tags are: 
[('30', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN')] 

>> Dependency Tags are: 
[('30', 'nummod'), (',', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[30, ,], [,, .]]

>> Trigrams: 
[[30, ,, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('30', 'CARDINAL')]


============================ Sentence 981 =============================

14-15, pp. 


>> Tokens are: 
[14, -, 15, ,, pp, .] 

>> PoS Tags are: 
[('14', 'NUM'), ('-', 'SYM'), ('15', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('14', 'nummod'), ('-', 'punct'), ('15', 'prep'), (',', 'punct'), ('pp', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[14, -], [-, 15], [15, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[14, -, 15], [-, 15, ,], [15, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[14-15, pp]

>> Named Entities are: 
[('14-15', 'CARDINAL')]


============================ Sentence 982 =============================

2826–2841, 2007. 


>> Tokens are: 
[2826–2841, ,, 2007, .] 

>> PoS Tags are: 
[('2826–2841', 'NUM'), (',', 'PUNCT'), ('2007', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('2826–2841', 'ROOT'), (',', 'punct'), ('2007', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[2826–2841, ,], [,, 2007], [2007, .]]

>> Trigrams: 
[[2826–2841, ,, 2007], [,, 2007, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2826–2841, 2007', 'DATE')]


============================ Sentence 983 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 984 =============================

[78] E. Abbe, A. S. Bandeira, and G. Hall, “Exact recovery in the stochastic block model,” arXiv preprint arXiv:1405.3267, 2014. 


>> Tokens are: 
[[, 78, ], E., Abbe, ,, A., S., Bandeira, ,, G., Hall, ,, “, Exact, recovery, stochastic, block, model, ,, ”, arXiv, preprint, arXiv:1405.3267, ,, 2014, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('78', 'NUM'), (']', 'PUNCT'), ('E.', 'PROPN'), ('Abbe', 'PROPN'), (',', 'PUNCT'), ('A.', 'NOUN'), ('S.', 'PROPN'), ('Bandeira', 'PROPN'), (',', 'PUNCT'), ('G.', 'PROPN'), ('Hall', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Exact', 'ADJ'), ('recovery', 'NOUN'), ('stochastic', 'ADJ'), ('block', 'NOUN'), ('model', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('arXiv', 'NOUN'), ('preprint', 'NOUN'), ('arXiv:1405.3267', 'PROPN'), (',', 'PUNCT'), ('2014', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('78', 'dep'), (']', 'punct'), ('E.', 'compound'), ('Abbe', 'appos'), (',', 'punct'), ('A.', 'compound'), ('S.', 'compound'), ('Bandeira', 'appos'), (',', 'punct'), ('G.', 'compound'), ('Hall', 'conj'), (',', 'punct'), ('“', 'punct'), ('Exact', 'amod'), ('recovery', 'appos'), ('stochastic', 'amod'), ('block', 'compound'), ('model', 'pobj'), (',', 'punct'), ('”', 'punct'), ('arXiv', 'appos'), ('preprint', 'ROOT'), ('arXiv:1405.3267', 'dobj'), (',', 'punct'), ('2014', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[[, 78], [78, ]], [], E.], [E., Abbe], [Abbe, ,], [,, A.], [A., S.], [S., Bandeira], [Bandeira, ,], [,, G.], [G., Hall], [Hall, ,], [,, “], [“, Exact], [Exact, recovery], [recovery, stochastic], [stochastic, block], [block, model], [model, ,], [,, ”], [”, arXiv], [arXiv, preprint], [preprint, arXiv:1405.3267], [arXiv:1405.3267, ,], [,, 2014], [2014, .]]

>> Trigrams: 
[[[, 78, ]], [78, ], E.], [], E., Abbe], [E., Abbe, ,], [Abbe, ,, A.], [,, A., S.], [A., S., Bandeira], [S., Bandeira, ,], [Bandeira, ,, G.], [,, G., Hall], [G., Hall, ,], [Hall, ,, “], [,, “, Exact], [“, Exact, recovery], [Exact, recovery, stochastic], [recovery, stochastic, block], [stochastic, block, model], [block, model, ,], [model, ,, ”], [,, ”, arXiv], [”, arXiv, preprint], [arXiv, preprint, arXiv:1405.3267], [preprint, arXiv:1405.3267, ,], [arXiv:1405.3267, ,, 2014], [,, 2014, .]]

>> Noun Phrases are: 
[E. Abbe, A. S. Bandeira, G. Hall, “Exact recovery, the stochastic block model, arXiv, arXiv:1405.3267]

>> Named Entities are: 
[('] E. Abbe', 'PERSON'), ('A. S. Bandeira', 'PERSON'), ('G. Hall', 'PERSON'), ('2014', 'DATE')]


============================ Sentence 985 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 986 =============================

[79] L. Page, S. Brin, R. Motwani, and T. Winograd, “The PageRank citation ranking: Bringing order to the web.” 


>> Tokens are: 
[[, 79, ], L., Page, ,, S., Brin, ,, R., Motwani, ,, T., Winograd, ,, “, PageRank, citation, ranking, :, Bringing, order, web, ., ”] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('79', 'NUM'), (']', 'PUNCT'), ('L.', 'PROPN'), ('Page', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('Brin', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('Motwani', 'PROPN'), (',', 'PUNCT'), ('T.', 'PROPN'), ('Winograd', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('PageRank', 'PROPN'), ('citation', 'NOUN'), ('ranking', 'NOUN'), (':', 'PUNCT'), ('Bringing', 'VERB'), ('order', 'NOUN'), ('web', 'NOUN'), ('.', 'PUNCT'), ('”', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('79', 'nummod'), (']', 'punct'), ('L.', 'compound'), ('Page', 'ROOT'), (',', 'punct'), ('S.', 'compound'), ('Brin', 'appos'), (',', 'punct'), ('R.', 'compound'), ('Motwani', 'conj'), (',', 'punct'), ('T.', 'compound'), ('Winograd', 'conj'), (',', 'punct'), ('“', 'punct'), ('PageRank', 'compound'), ('citation', 'appos'), ('ranking', 'acl'), (':', 'punct'), ('Bringing', 'acl'), ('order', 'dobj'), ('web', 'pobj'), ('.', 'punct'), ('”', 'punct')]

>> Bigrams: 
[[[, 79], [79, ]], [], L.], [L., Page], [Page, ,], [,, S.], [S., Brin], [Brin, ,], [,, R.], [R., Motwani], [Motwani, ,], [,, T.], [T., Winograd], [Winograd, ,], [,, “], [“, PageRank], [PageRank, citation], [citation, ranking], [ranking, :], [:, Bringing], [Bringing, order], [order, web], [web, .], [., ”]]

>> Trigrams: 
[[[, 79, ]], [79, ], L.], [], L., Page], [L., Page, ,], [Page, ,, S.], [,, S., Brin], [S., Brin, ,], [Brin, ,, R.], [,, R., Motwani], [R., Motwani, ,], [Motwani, ,, T.], [,, T., Winograd], [T., Winograd, ,], [Winograd, ,, “], [,, “, PageRank], [“, PageRank, citation], [PageRank, citation, ranking], [citation, ranking, :], [ranking, :, Bringing], [:, Bringing, order], [Bringing, order, web], [order, web, .], [web, ., ”]]

>> Noun Phrases are: 
[[79] L. Page, S. Brin, R. Motwani, T. Winograd, The PageRank citation, order, the web]

>> Named Entities are: 
[('79', 'CARDINAL'), ('L. Page', 'PERSON'), ('S. Brin', 'PERSON'), ('R. Motwani', 'PERSON'), ('T. Winograd', 'PERSON'), ('PageRank', 'ORG')]


============================ Sentence 987 =============================

Stanford InfoLab, Tech. 


>> Tokens are: 
[Stanford, InfoLab, ,, Tech, .] 

>> PoS Tags are: 
[('Stanford', 'PROPN'), ('InfoLab', 'PROPN'), (',', 'PUNCT'), ('Tech', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Stanford', 'compound'), ('InfoLab', 'ROOT'), (',', 'punct'), ('Tech', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Stanford, InfoLab], [InfoLab, ,], [,, Tech], [Tech, .]]

>> Trigrams: 
[[Stanford, InfoLab, ,], [InfoLab, ,, Tech], [,, Tech, .]]

>> Noun Phrases are: 
[Stanford InfoLab, Tech]

>> Named Entities are: 
[('Tech', 'ORG')]


============================ Sentence 988 =============================

Rep., 1999. 


>> Tokens are: 
[Rep., ,, 1999, .] 

>> PoS Tags are: 
[('Rep.', 'PROPN'), (',', 'PUNCT'), ('1999', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Rep.', 'ROOT'), (',', 'punct'), ('1999', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Rep., ,], [,, 1999], [1999, .]]

>> Trigrams: 
[[Rep., ,, 1999], [,, 1999, .]]

>> Noun Phrases are: 
[Rep.]

>> Named Entities are: 
[('1999', 'DATE')]


============================ Sentence 989 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 990 =============================

[80] C. Karakus, Y. Sun, S. Diggavi, and W. Yin, “Redundancy techniques for straggler mitigation in distributed optimization and learning,” arXiv preprint arXiv:1803.05397, 2018. 


>> Tokens are: 
[[, 80, ], C., Karakus, ,, Y., Sun, ,, S., Diggavi, ,, W., Yin, ,, “, Redundancy, techniques, straggler, mitigation, distributed, optimization, learning, ,, ”, arXiv, preprint, arXiv:1803.05397, ,, 2018, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('80', 'NUM'), (']', 'PUNCT'), ('C.', 'PROPN'), ('Karakus', 'PROPN'), (',', 'PUNCT'), ('Y.', 'PROPN'), ('Sun', 'PROPN'), (',', 'PUNCT'), ('S.', 'PROPN'), ('Diggavi', 'PROPN'), (',', 'PUNCT'), ('W.', 'PROPN'), ('Yin', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Redundancy', 'NOUN'), ('techniques', 'NOUN'), ('straggler', 'ADJ'), ('mitigation', 'NOUN'), ('distributed', 'VERB'), ('optimization', 'NOUN'), ('learning', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('arXiv', 'NOUN'), ('preprint', 'NOUN'), ('arXiv:1803.05397', 'PROPN'), (',', 'PUNCT'), ('2018', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('80', 'nummod'), (']', 'punct'), ('C.', 'compound'), ('Karakus', 'dep'), (',', 'punct'), ('Y.', 'compound'), ('Sun', 'conj'), (',', 'punct'), ('S.', 'compound'), ('Diggavi', 'appos'), (',', 'punct'), ('W.', 'compound'), ('Yin', 'conj'), (',', 'punct'), ('“', 'punct'), ('Redundancy', 'compound'), ('techniques', 'ccomp'), ('straggler', 'amod'), ('mitigation', 'pobj'), ('distributed', 'amod'), ('optimization', 'pobj'), ('learning', 'conj'), (',', 'punct'), ('”', 'punct'), ('arXiv', 'nsubj'), ('preprint', 'ROOT'), ('arXiv:1803.05397', 'dobj'), (',', 'punct'), ('2018', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[[, 80], [80, ]], [], C.], [C., Karakus], [Karakus, ,], [,, Y.], [Y., Sun], [Sun, ,], [,, S.], [S., Diggavi], [Diggavi, ,], [,, W.], [W., Yin], [Yin, ,], [,, “], [“, Redundancy], [Redundancy, techniques], [techniques, straggler], [straggler, mitigation], [mitigation, distributed], [distributed, optimization], [optimization, learning], [learning, ,], [,, ”], [”, arXiv], [arXiv, preprint], [preprint, arXiv:1803.05397], [arXiv:1803.05397, ,], [,, 2018], [2018, .]]

>> Trigrams: 
[[[, 80, ]], [80, ], C.], [], C., Karakus], [C., Karakus, ,], [Karakus, ,, Y.], [,, Y., Sun], [Y., Sun, ,], [Sun, ,, S.], [,, S., Diggavi], [S., Diggavi, ,], [Diggavi, ,, W.], [,, W., Yin], [W., Yin, ,], [Yin, ,, “], [,, “, Redundancy], [“, Redundancy, techniques], [Redundancy, techniques, straggler], [techniques, straggler, mitigation], [straggler, mitigation, distributed], [mitigation, distributed, optimization], [distributed, optimization, learning], [optimization, learning, ,], [learning, ,, ”], [,, ”, arXiv], [”, arXiv, preprint], [arXiv, preprint, arXiv:1803.05397], [preprint, arXiv:1803.05397, ,], [arXiv:1803.05397, ,, 2018], [,, 2018, .]]

>> Noun Phrases are: 
[S. Diggavi, W. Yin, straggler mitigation, distributed optimization, learning, arXiv, arXiv:1803.05397]

>> Named Entities are: 
[('80', 'CARDINAL'), ('C. Karakus', 'PERSON'), ('Y. Sun', 'PERSON'), ('S. Diggavi', 'PERSON'), ('W. Yin', 'PERSON'), ('2018', 'DATE')]


============================ Sentence 991 =============================

 20   	 


>> Tokens are: 
[ , 20,   	] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('20', 'NUM'), ('  \t', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('20', 'nummod'), ('  \t', 'dobj')]

>> Bigrams: 
[[ , 20], [20,   	]]

>> Trigrams: 
[[ , 20,   	]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('20', 'CARDINAL')]


============================ Sentence 992 =============================

I 


>> Tokens are: 
[] 

>> PoS Tags are: 
[] 

>> Dependency Tags are: 
[]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[I]

>> Named Entities are: 
[]


============================ Sentence 993 =============================

Introduction 


>> Tokens are: 
[Introduction] 

>> PoS Tags are: 
[('Introduction', 'NOUN')] 

>> Dependency Tags are: 
[('Introduction', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Introduction]

>> Named Entities are: 
[]


============================ Sentence 994 =============================

	I-A 


>> Tokens are: 
[	, -] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('-', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('-', 'punct')]

>> Bigrams: 
[[	, -]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[	I-A]

>> Named Entities are: 
[]


============================ Sentence 995 =============================

What is Machine Learning? 


>> Tokens are: 
[Machine, Learning, ?] 

>> PoS Tags are: 
[('Machine', 'PROPN'), ('Learning', 'PROPN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('Machine', 'compound'), ('Learning', 'nsubj'), ('?', 'punct')]

>> Bigrams: 
[[Machine, Learning], [Learning, ?]]

>> Trigrams: 
[[Machine, Learning, ?]]

>> Noun Phrases are: 
[What, Machine Learning]

>> Named Entities are: 
[]


============================ Sentence 996 =============================

	I-B Taxonomy of Machine Learning Methods 	I-C 


>> Tokens are: 
[	, -, B, Taxonomy, Machine, Learning, Methods, 	, -, C] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('-', 'PUNCT'), ('B', 'PROPN'), ('Taxonomy', 'PROPN'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('Methods', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('C', 'PROPN')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('-', 'punct'), ('B', 'compound'), ('Taxonomy', 'ROOT'), ('Machine', 'compound'), ('Learning', 'compound'), ('Methods', 'compound'), ('\t', 'pobj'), ('-', 'punct'), ('C', 'appos')]

>> Bigrams: 
[[	, -], [-, B], [B, Taxonomy], [Taxonomy, Machine], [Machine, Learning], [Learning, Methods], [Methods, 	], [	, -], [-, C]]

>> Trigrams: 
[[	, -, B], [-, B, Taxonomy], [B, Taxonomy, Machine], [Taxonomy, Machine, Learning], [Machine, Learning, Methods], [Learning, Methods, 	], [Methods, 	, -], [	, -, C]]

>> Noun Phrases are: 
[	I-B Taxonomy, I-C]

>> Named Entities are: 
[]


============================ Sentence 997 =============================

When to Use Machine Learning? 


>> Tokens are: 
[Use, Machine, Learning, ?] 

>> PoS Tags are: 
[('Use', 'VERB'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('Use', 'ROOT'), ('Machine', 'compound'), ('Learning', 'dobj'), ('?', 'punct')]

>> Bigrams: 
[[Use, Machine], [Machine, Learning], [Learning, ?]]

>> Trigrams: 
[[Use, Machine, Learning], [Machine, Learning, ?]]

>> Noun Phrases are: 
[Machine Learning]

>> Named Entities are: 
[]


============================ Sentence 998 =============================

 	II Machine Learning for Communication Networks 	III Supervised Learning 	III-A Goals 	III-B Defining Supervised Learning 	III-C 


>> Tokens are: 
[ 	, II, Machine, Learning, Communication, Networks, 	, III, Supervised, Learning, 	, III, -, Goals, 	, III, -, B, Defining, Supervised, Learning, 	, III, -, C] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('II', 'PROPN'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('Communication', 'PROPN'), ('Networks', 'PROPN'), ('\t', 'SPACE'), ('III', 'PROPN'), ('Supervised', 'ADJ'), ('Learning', 'PROPN'), ('\t', 'SPACE'), ('III', 'PROPN'), ('-', 'PUNCT'), ('Goals', 'PROPN'), ('\t', 'SPACE'), ('III', 'PROPN'), ('-', 'PUNCT'), ('B', 'PROPN'), ('Defining', 'PROPN'), ('Supervised', 'PROPN'), ('Learning', 'PROPN'), ('\t', 'SPACE'), ('III', 'PROPN'), ('-', 'PUNCT'), ('C', 'PROPN')] 

>> Dependency Tags are: 
[(' \t', 'compound'), ('II', 'compound'), ('Machine', 'compound'), ('Learning', 'nmod'), ('Communication', 'compound'), ('Networks', 'pobj'), ('\t', 'compound'), ('III', 'appos'), ('Supervised', 'amod'), ('Learning', 'compound'), ('\t', 'compound'), ('III', 'compound'), ('-', 'punct'), ('Goals', 'meta'), ('\t', 'compound'), ('III', 'compound'), ('-', 'punct'), ('B', 'compound'), ('Defining', 'appos'), ('Supervised', 'amod'), ('Learning', 'compound'), ('\t', 'compound'), ('III', 'compound'), ('-', 'punct'), ('C', 'ROOT')]

>> Bigrams: 
[[ 	, II], [II, Machine], [Machine, Learning], [Learning, Communication], [Communication, Networks], [Networks, 	], [	, III], [III, Supervised], [Supervised, Learning], [Learning, 	], [	, III], [III, -], [-, Goals], [Goals, 	], [	, III], [III, -], [-, B], [B, Defining], [Defining, Supervised], [Supervised, Learning], [Learning, 	], [	, III], [III, -], [-, C]]

>> Trigrams: 
[[ 	, II, Machine], [II, Machine, Learning], [Machine, Learning, Communication], [Learning, Communication, Networks], [Communication, Networks, 	], [Networks, 	, III], [	, III, Supervised], [III, Supervised, Learning], [Supervised, Learning, 	], [Learning, 	, III], [	, III, -], [III, -, Goals], [-, Goals, 	], [Goals, 	, III], [	, III, -], [III, -, B], [-, B, Defining], [B, Defining, Supervised], [Defining, Supervised, Learning], [Supervised, Learning, 	], [Learning, 	, III], [	, III, -], [III, -, C]]

>> Noun Phrases are: 
[Communication Networks, 	III, 	III-B Defining]

>> Named Entities are: 
[('II Machine Learning for Communication Networks \tIII Supervised Learning', 'ORG')]


============================ Sentence 999 =============================

When The True Distribution p(x,t) is Known: Inference 	III-D When the True Distribution p(x,t) is Not Known: Machine Learning 	III-E Learning 	III-F Model Selection  	IV Applications of Supervised Learning to Communication Systems 	IV-A 


>> Tokens are: 
[True, Distribution, p(x, ,, t, ), Known, :, Inference, 	, III, -, D, True, Distribution, p(x, ,, t, ), Known, :, Machine, Learning, 	, III, -, E, Learning, 	, III, -, F, Model, Selection,  	, IV, Applications, Supervised, Learning, Communication, Systems, 	, IV, -] 

>> PoS Tags are: 
[('True', 'ADJ'), ('Distribution', 'PROPN'), ('p(x', 'PROPN'), (',', 'PUNCT'), ('t', 'NOUN'), (')', 'PUNCT'), ('Known', 'VERB'), (':', 'PUNCT'), ('Inference', 'PROPN'), ('\t', 'SPACE'), ('III', 'PROPN'), ('-', 'PUNCT'), ('D', 'NOUN'), ('True', 'ADJ'), ('Distribution', 'PROPN'), ('p(x', 'PROPN'), (',', 'PUNCT'), ('t', 'NOUN'), (')', 'PUNCT'), ('Known', 'ADJ'), (':', 'PUNCT'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('\t', 'SPACE'), ('III', 'PROPN'), ('-', 'PUNCT'), ('E', 'NOUN'), ('Learning', 'PROPN'), ('\t', 'SPACE'), ('III', 'PROPN'), ('-', 'PUNCT'), ('F', 'PROPN'), ('Model', 'PROPN'), ('Selection', 'PROPN'), (' \t', 'SPACE'), ('IV', 'PROPN'), ('Applications', 'PROPN'), ('Supervised', 'PROPN'), ('Learning', 'PROPN'), ('Communication', 'PROPN'), ('Systems', 'PROPN'), ('\t', 'SPACE'), ('IV', 'PROPN'), ('-', 'PUNCT')] 

>> Dependency Tags are: 
[('True', 'amod'), ('Distribution', 'compound'), ('p(x', 'nsubjpass'), (',', 'punct'), ('t', 'appos'), (')', 'punct'), ('Known', 'advcl'), (':', 'punct'), ('Inference', 'compound'), ('\t', 'compound'), ('III', 'compound'), ('-', 'punct'), ('D', 'amod'), ('True', 'amod'), ('Distribution', 'compound'), ('p(x', 'nsubj'), (',', 'punct'), ('t', 'appos'), (')', 'punct'), ('Known', 'acomp'), (':', 'punct'), ('Machine', 'compound'), ('Learning', 'compound'), ('\t', 'compound'), ('III', 'compound'), ('-', 'punct'), ('E', 'compound'), ('Learning', 'compound'), ('\t', 'compound'), ('III', 'compound'), ('-', 'punct'), ('F', 'compound'), ('Model', 'compound'), ('Selection', 'nmod'), (' \t', 'compound'), ('IV', 'compound'), ('Applications', 'ROOT'), ('Supervised', 'compound'), ('Learning', 'pobj'), ('Communication', 'compound'), ('Systems', 'nmod'), ('\t', 'compound'), ('IV', 'compound'), ('-', 'punct')]

>> Bigrams: 
[[True, Distribution], [Distribution, p(x], [p(x, ,], [,, t], [t, )], [), Known], [Known, :], [:, Inference], [Inference, 	], [	, III], [III, -], [-, D], [D, True], [True, Distribution], [Distribution, p(x], [p(x, ,], [,, t], [t, )], [), Known], [Known, :], [:, Machine], [Machine, Learning], [Learning, 	], [	, III], [III, -], [-, E], [E, Learning], [Learning, 	], [	, III], [III, -], [-, F], [F, Model], [Model, Selection], [Selection,  	], [ 	, IV], [IV, Applications], [Applications, Supervised], [Supervised, Learning], [Learning, Communication], [Communication, Systems], [Systems, 	], [	, IV], [IV, -]]

>> Trigrams: 
[[True, Distribution, p(x], [Distribution, p(x, ,], [p(x, ,, t], [,, t, )], [t, ), Known], [), Known, :], [Known, :, Inference], [:, Inference, 	], [Inference, 	, III], [	, III, -], [III, -, D], [-, D, True], [D, True, Distribution], [True, Distribution, p(x], [Distribution, p(x, ,], [p(x, ,, t], [,, t, )], [t, ), Known], [), Known, :], [Known, :, Machine], [:, Machine, Learning], [Machine, Learning, 	], [Learning, 	, III], [	, III, -], [III, -, E], [-, E, Learning], [E, Learning, 	], [Learning, 	, III], [	, III, -], [III, -, F], [-, F, Model], [F, Model, Selection], [Model, Selection,  	], [Selection,  	, IV], [ 	, IV, Applications], [IV, Applications, Supervised], [Applications, Supervised, Learning], [Supervised, Learning, Communication], [Learning, Communication, Systems], [Communication, Systems, 	], [Systems, 	, IV], [	, IV, -]]

>> Noun Phrases are: 
[The True Distribution p(x, t, the True Distribution p(x, t, Supervised Learning, Communication Systems 	IV-A]

>> Named Entities are: 
[]


============================ Sentence 1000 =============================

At the Edge 	IV-A1 Physical Layer 	IV-A2 Link and Medium Access Control Layers 	IV-A3 Network and Application Layers  	IV-B 


>> Tokens are: 
[Edge, 	, IV, -, A1, Physical, Layer, 	, IV, -, A2, Link, Medium, Access, Control, Layers, 	, IV, -, A3, Network, Application, Layers,  	, IV, -, B] 

>> PoS Tags are: 
[('Edge', 'PROPN'), ('\t', 'SPACE'), ('IV', 'PROPN'), ('-', 'PUNCT'), ('A1', 'PROPN'), ('Physical', 'PROPN'), ('Layer', 'PROPN'), ('\t', 'SPACE'), ('IV', 'PROPN'), ('-', 'PUNCT'), ('A2', 'PROPN'), ('Link', 'PROPN'), ('Medium', 'PROPN'), ('Access', 'PROPN'), ('Control', 'PROPN'), ('Layers', 'PROPN'), ('\t', 'SPACE'), ('IV', 'PROPN'), ('-', 'PUNCT'), ('A3', 'PROPN'), ('Network', 'PROPN'), ('Application', 'PROPN'), ('Layers', 'PROPN'), (' \t', 'SPACE'), ('IV', 'PROPN'), ('-', 'PUNCT'), ('B', 'PROPN')] 

>> Dependency Tags are: 
[('Edge', 'nmod'), ('\t', 'nmod'), ('IV', 'compound'), ('-', 'punct'), ('A1', 'nmod'), ('Physical', 'compound'), ('Layer', 'nmod'), ('\t', 'nmod'), ('IV', 'compound'), ('-', 'punct'), ('A2', 'nmod'), ('Link', 'nmod'), ('Medium', 'compound'), ('Access', 'compound'), ('Control', 'nmod'), ('Layers', 'nmod'), ('\t', 'nmod'), ('IV', 'compound'), ('-', 'punct'), ('A3', 'nmod'), ('Network', 'nmod'), ('Application', 'compound'), ('Layers', 'conj'), (' \t', 'compound'), ('IV', 'compound'), ('-', 'punct'), ('B', 'pobj')]

>> Bigrams: 
[[Edge, 	], [	, IV], [IV, -], [-, A1], [A1, Physical], [Physical, Layer], [Layer, 	], [	, IV], [IV, -], [-, A2], [A2, Link], [Link, Medium], [Medium, Access], [Access, Control], [Control, Layers], [Layers, 	], [	, IV], [IV, -], [-, A3], [A3, Network], [Network, Application], [Application, Layers], [Layers,  	], [ 	, IV], [IV, -], [-, B]]

>> Trigrams: 
[[Edge, 	, IV], [	, IV, -], [IV, -, A1], [-, A1, Physical], [A1, Physical, Layer], [Physical, Layer, 	], [Layer, 	, IV], [	, IV, -], [IV, -, A2], [-, A2, Link], [A2, Link, Medium], [Link, Medium, Access], [Medium, Access, Control], [Access, Control, Layers], [Control, Layers, 	], [Layers, 	, IV], [	, IV, -], [IV, -, A3], [-, A3, Network], [A3, Network, Application], [Network, Application, Layers], [Application, Layers,  	], [Layers,  	, IV], [ 	, IV, -], [IV, -, B]]

>> Noun Phrases are: 
[the Edge 	IV-A1 Physical Layer 	IV-A2 Link and Medium Access Control Layers 	IV-A3 Network and Application Layers  	IV-B]

>> Named Entities are: 
[('Medium Access Control Layers', 'ORG')]


============================ Sentence 1001 =============================

At the Cloud 	IV-B1 Network 	IV-B2 Application   	V Unsupervised Learning 	V-A Goals and Definitions 	V-B Models 	V-C Learning 	V-D Advanced Learning Methods  	VI Applications of Unsupervised Learning to Communication Systems 	VI-A At the Edge 


>> Tokens are: 
[Cloud, 	, IV, -, B1, Network, 	, IV, -, B2, Application,   	, V, Unsupervised, Learning, 	, V, -, Goals, Definitions, 	, V, -, B, Models, 	, V, -, C, Learning, 	, V, -, D, Advanced, Learning, Methods,  	, VI, Applications, Unsupervised, Learning, Communication, Systems, 	, VI, -, Edge] 

>> PoS Tags are: 
[('Cloud', 'PROPN'), ('\t', 'SPACE'), ('IV', 'PROPN'), ('-', 'PUNCT'), ('B1', 'PROPN'), ('Network', 'PROPN'), ('\t', 'SPACE'), ('IV', 'PROPN'), ('-', 'PUNCT'), ('B2', 'NOUN'), ('Application', 'NOUN'), ('  \t', 'SPACE'), ('V', 'NOUN'), ('Unsupervised', 'PROPN'), ('Learning', 'PROPN'), ('\t', 'SPACE'), ('V', 'PROPN'), ('-', 'PUNCT'), ('Goals', 'PROPN'), ('Definitions', 'PROPN'), ('\t', 'SPACE'), ('V', 'PROPN'), ('-', 'PUNCT'), ('B', 'PROPN'), ('Models', 'PROPN'), ('\t', 'SPACE'), ('V', 'PROPN'), ('-', 'PUNCT'), ('C', 'PROPN'), ('Learning', 'PROPN'), ('\t', 'SPACE'), ('V', 'PROPN'), ('-', 'PUNCT'), ('D', 'PROPN'), ('Advanced', 'PROPN'), ('Learning', 'PROPN'), ('Methods', 'PROPN'), (' \t', 'SPACE'), ('VI', 'PROPN'), ('Applications', 'PROPN'), ('Unsupervised', 'PROPN'), ('Learning', 'PROPN'), ('Communication', 'PROPN'), ('Systems', 'PROPN'), ('\t', 'SPACE'), ('VI', 'PROPN'), ('-', 'PUNCT'), ('Edge', 'PROPN')] 

>> Dependency Tags are: 
[('Cloud', 'nmod'), ('\t', 'compound'), ('IV', 'compound'), ('-', 'punct'), ('B1', 'nmod'), ('Network', 'compound'), ('\t', 'compound'), ('IV', 'compound'), ('-', 'punct'), ('B2', 'compound'), ('Application', 'pobj'), ('  \t', 'compound'), ('V', 'compound'), ('Unsupervised', 'compound'), ('Learning', 'compound'), ('\t', 'compound'), ('V', 'compound'), ('-', 'punct'), ('Goals', 'nmod'), ('Definitions', 'conj'), ('\t', 'nmod'), ('V', 'compound'), ('-', 'punct'), ('B', 'compound'), ('Models', 'nmod'), ('\t', 'compound'), ('V', 'compound'), ('-', 'punct'), ('C', 'compound'), ('Learning', 'compound'), ('\t', 'compound'), ('V', 'compound'), ('-', 'punct'), ('D', 'nmod'), ('Advanced', 'amod'), ('Learning', 'compound'), ('Methods', 'dobj'), (' \t', 'compound'), ('VI', 'compound'), ('Applications', 'pobj'), ('Unsupervised', 'compound'), ('Learning', 'pobj'), ('Communication', 'compound'), ('Systems', 'compound'), ('\t', 'compound'), ('VI', 'compound'), ('-', 'punct'), ('Edge', 'pobj')]

>> Bigrams: 
[[Cloud, 	], [	, IV], [IV, -], [-, B1], [B1, Network], [Network, 	], [	, IV], [IV, -], [-, B2], [B2, Application], [Application,   	], [  	, V], [V, Unsupervised], [Unsupervised, Learning], [Learning, 	], [	, V], [V, -], [-, Goals], [Goals, Definitions], [Definitions, 	], [	, V], [V, -], [-, B], [B, Models], [Models, 	], [	, V], [V, -], [-, C], [C, Learning], [Learning, 	], [	, V], [V, -], [-, D], [D, Advanced], [Advanced, Learning], [Learning, Methods], [Methods,  	], [ 	, VI], [VI, Applications], [Applications, Unsupervised], [Unsupervised, Learning], [Learning, Communication], [Communication, Systems], [Systems, 	], [	, VI], [VI, -], [-, Edge]]

>> Trigrams: 
[[Cloud, 	, IV], [	, IV, -], [IV, -, B1], [-, B1, Network], [B1, Network, 	], [Network, 	, IV], [	, IV, -], [IV, -, B2], [-, B2, Application], [B2, Application,   	], [Application,   	, V], [  	, V, Unsupervised], [V, Unsupervised, Learning], [Unsupervised, Learning, 	], [Learning, 	, V], [	, V, -], [V, -, Goals], [-, Goals, Definitions], [Goals, Definitions, 	], [Definitions, 	, V], [	, V, -], [V, -, B], [-, B, Models], [B, Models, 	], [Models, 	, V], [	, V, -], [V, -, C], [-, C, Learning], [C, Learning, 	], [Learning, 	, V], [	, V, -], [V, -, D], [-, D, Advanced], [D, Advanced, Learning], [Advanced, Learning, Methods], [Learning, Methods,  	], [Methods,  	, VI], [ 	, VI, Applications], [VI, Applications, Unsupervised], [Applications, Unsupervised, Learning], [Unsupervised, Learning, Communication], [Learning, Communication, Systems], [Communication, Systems, 	], [Systems, 	, VI], [	, VI, -], [VI, -, Edge]]

>> Noun Phrases are: 
[the Cloud 	IV-B1 Network 	IV-B2 Application, Advanced Learning Methods, Unsupervised Learning, Communication Systems 	VI-A, the Edge]

>> Named Entities are: 
[('IV-B2 Application   \tV Unsupervised Learning \tV-A Goals and Definitions', 'ORG')]


============================ Sentence 1002 =============================

	VI-A1 Physical Layer 	VI-A2 Medium Access Layer  	VI-B At the Cloud 	VI-B1 Network Layer 	VI-B2 Application Layer   	 


>> Tokens are: 
[	, VI, -, A1, Physical, Layer, 	, VI, -, A2, Medium, Access, Layer,  	, VI, -, B, Cloud, 	, VI, -, B1, Network, Layer, 	, VI, -, B2, Application, Layer,   	] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('VI', 'PROPN'), ('-', 'PUNCT'), ('A1', 'PROPN'), ('Physical', 'PROPN'), ('Layer', 'PROPN'), ('\t', 'SPACE'), ('VI', 'PROPN'), ('-', 'PUNCT'), ('A2', 'PROPN'), ('Medium', 'PROPN'), ('Access', 'PROPN'), ('Layer', 'PROPN'), (' \t', 'SPACE'), ('VI', 'PROPN'), ('-', 'PUNCT'), ('B', 'NOUN'), ('Cloud', 'PROPN'), ('\t', 'SPACE'), ('VI', 'PROPN'), ('-', 'PUNCT'), ('B1', 'PROPN'), ('Network', 'PROPN'), ('Layer', 'PROPN'), ('\t', 'SPACE'), ('VI', 'PROPN'), ('-', 'PUNCT'), ('B2', 'NOUN'), ('Application', 'PROPN'), ('Layer', 'PROPN'), ('  \t', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('VI', 'compound'), ('-', 'punct'), ('A1', 'compound'), ('Physical', 'compound'), ('Layer', 'compound'), ('\t', 'nmod'), ('VI', 'compound'), ('-', 'punct'), ('A2', 'nmod'), ('Medium', 'compound'), ('Access', 'compound'), ('Layer', 'nmod'), (' \t', 'compound'), ('VI', 'compound'), ('-', 'punct'), ('B', 'ROOT'), ('Cloud', 'compound'), ('\t', 'compound'), ('VI', 'compound'), ('-', 'punct'), ('B1', 'compound'), ('Network', 'compound'), ('Layer', 'compound'), ('\t', 'compound'), ('VI', 'compound'), ('-', 'punct'), ('B2', 'compound'), ('Application', 'compound'), ('Layer', 'pobj'), ('  \t', 'nmod')]

>> Bigrams: 
[[	, VI], [VI, -], [-, A1], [A1, Physical], [Physical, Layer], [Layer, 	], [	, VI], [VI, -], [-, A2], [A2, Medium], [Medium, Access], [Access, Layer], [Layer,  	], [ 	, VI], [VI, -], [-, B], [B, Cloud], [Cloud, 	], [	, VI], [VI, -], [-, B1], [B1, Network], [Network, Layer], [Layer, 	], [	, VI], [VI, -], [-, B2], [B2, Application], [Application, Layer], [Layer,   	]]

>> Trigrams: 
[[	, VI, -], [VI, -, A1], [-, A1, Physical], [A1, Physical, Layer], [Physical, Layer, 	], [Layer, 	, VI], [	, VI, -], [VI, -, A2], [-, A2, Medium], [A2, Medium, Access], [Medium, Access, Layer], [Access, Layer,  	], [Layer,  	, VI], [ 	, VI, -], [VI, -, B], [-, B, Cloud], [B, Cloud, 	], [Cloud, 	, VI], [	, VI, -], [VI, -, B1], [-, B1, Network], [B1, Network, Layer], [Network, Layer, 	], [Layer, 	, VI], [	, VI, -], [VI, -, B2], [-, B2, Application], [B2, Application, Layer], [Application, Layer,   	]]

>> Noun Phrases are: 
[	VI-A1 Physical Layer 	VI-A2 Medium Access Layer  	VI-B, the Cloud 	VI-B1 Network Layer 	VI-B2 Application Layer]

>> Named Entities are: 
[('Network Layer', 'PERSON')]


============================ Sentence 1003 =============================

VII Concluding Remarks 	References 


>> Tokens are: 
[VII, Concluding, Remarks, 	, References] 

>> PoS Tags are: 
[('VII', 'PROPN'), ('Concluding', 'PROPN'), ('Remarks', 'PROPN'), ('\t', 'SPACE'), ('References', 'PROPN')] 

>> Dependency Tags are: 
[('VII', 'compound'), ('Concluding', 'compound'), ('Remarks', 'compound'), ('\t', 'compound'), ('References', 'ROOT')]

>> Bigrams: 
[[VII, Concluding], [Concluding, Remarks], [Remarks, 	], [	, References]]

>> Trigrams: 
[[VII, Concluding, Remarks], [Concluding, Remarks, 	], [Remarks, 	, References]]

>> Noun Phrases are: 
[VII Concluding Remarks 	References]

>> Named Entities are: 
[]
