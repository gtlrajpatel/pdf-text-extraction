

========================== Sentence 1 ===========================

 Natural Language Understanding white paper   White PaperCustomer Service Solutions Natural language understanding  Natural language  understanding Learning to speak customer-ese. 

Tokens are: 
>> ['Natural', 'Language', 'Understanding', 'white', 'paper', 'White', 'PaperCustomer', 'Service', 'Solutions', 'Natural', 'language', 'understanding', 'Natural', 'language', 'understanding', 'Learning', 'to', 'speak', 'customer', '-ese', '.'] 

 UPOS tags are: 
>> [('Natural', 'ADJ'), ('Language', 'NOUN'), ('Understanding', 'NOUN'), ('white', 'ADJ'), ('paper', 'NOUN'), ('White', 'ADJ'), ('PaperCustomer', 'PROPN'), ('Service', 'NOUN'), ('Solutions', 'NOUN'), ('Natural', 'ADJ'), ('language', 'NOUN'), ('understanding', 'VERB'), ('Natural', 'ADJ'), ('language', 'NOUN'), ('understanding', 'NOUN'), ('Learning', 'VERB'), ('to', 'PART'), ('speak', 'VERB'), ('customer', 'NOUN'), ('-ese', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Natural', 'JJ'), ('Language', 'NN'), ('Understanding', 'NN'), ('white', 'JJ'), ('paper', 'NN'), ('White', 'JJ'), ('PaperCustomer', 'NNP'), ('Service', 'NN'), ('Solutions', 'NNS'), ('Natural', 'JJ'), ('language', 'NN'), ('understanding', 'VBG'), ('Natural', 'JJ'), ('language', 'NN'), ('understanding', 'NN'), ('Learning', 'VBG'), ('to', 'TO'), ('speak', 'VB'), ('customer', 'NN'), ('-ese', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Natural', 'Natural'), ('Language', 'language'), ('Understanding', 'understanding'), ('white', 'white'), ('paper', 'paper'), ('White', 'White'), ('PaperCustomer', 'PaperCustomer'), ('Service', 'service'), ('Solutions', 'solution'), ('Natural', 'Natural'), ('language', 'language'), ('understanding', 'understand'), ('Natural', 'Natural'), ('language', 'language'), ('understanding', 'understanding'), ('Learning', 'learning'), ('to', 'to'), ('speak', 'speak'), ('customer', 'customer'), ('-ese', '-ese'), ('.', '.')] 

 Dependency tags are: 
>> [(('Natural', 'Language'), 'amod'), (('Language', 'Understanding'), 'compound'), (('Understanding', 'root'), 'root'), (('white', 'paper'), 'amod'), (('paper', 'Solutions'), 'compound'), (('White', 'Service'), 'amod'), (('PaperCustomer', 'Service'), 'compound'), (('Service', 'Solutions'), 'compound'), (('Solutions', 'language'), 'compound'), (('Natural', 'language'), 'amod'), (('language', 'Understanding'), 'conj'), (('understanding', 'language'), 'acl'), (('Natural', 'understanding'), 'amod'), (('language', 'understanding'), 'compound'), (('understanding', 'understanding'), 'obj'), (('Learning', 'understanding'), 'xcomp'), (('to', 'speak'), 'mark'), (('speak', 'Learning'), 'xcomp'), (('customer', '-ese'), 'compound'), (('-ese', 'speak'), 'obj'), (('.', 'Understanding'), 'punct')]

 Named Entities are: 
>> [('White PaperCustomer Service Solutions', 'ORG')]

========================== Sentence 2 ===========================

 Table of contents  1 Speech-enabled automation / p2  2 Learning to speak customer-ese / p3  3 Make the translation book bigger / p4  4 Learn to recognize variations of phrases / p4  5	 Become	fluent	/	p4  6	 Provide	a	more	flexible	script	/	p5  7 Conclusion / p6  White PaperCustomer Service Solutions Natural language understanding1 

Tokens are: 
>> ['Table', 'of', 'contents', '1', 'Speech-enabled', 'automation', '/', 'p2', '2', 'Learning', 'to', 'speak', 'customer', '-ese', '/', 'p3', '3', 'Make', 'the', 'translation', 'book', 'bigger', '/', 'p4', '4', 'Learn', 'to', 'recognize', 'variations', 'of', 'phrases', '/', 'p4', '5', 'Become', 'fluent', '/', 'p4', '6', 'Provide', 'a', 'more', 'flexible', 'script', '/', 'p5', '7', 'Conclusion', '/', 'p6', 'White', 'PaperCustomer', 'Service', 'Solutions', 'Natural', 'language', 'understanding', '1'] 

 UPOS tags are: 
>> [('Table', 'NOUN'), ('of', 'ADP'), ('contents', 'NOUN'), ('1', 'NUM'), ('Speech-enabled', 'ADJ'), ('automation', 'NOUN'), ('/', 'SYM'), ('p2', 'NOUN'), ('2', 'NUM'), ('Learning', 'NOUN'), ('to', 'PART'), ('speak', 'VERB'), ('customer', 'NOUN'), ('-ese', 'NOUN'), ('/', 'SYM'), ('p3', 'NOUN'), ('3', 'NUM'), ('Make', 'VERB'), ('the', 'DET'), ('translation', 'NOUN'), ('book', 'NOUN'), ('bigger', 'ADJ'), ('/', 'SYM'), ('p4', 'NOUN'), ('4', 'NUM'), ('Learn', 'NOUN'), ('to', 'PART'), ('recognize', 'VERB'), ('variations', 'NOUN'), ('of', 'ADP'), ('phrases', 'NOUN'), ('/', 'SYM'), ('p4', 'NOUN'), ('5', 'NUM'), ('Become', 'NOUN'), ('fluent', 'ADJ'), ('/', 'SYM'), ('p4', 'NOUN'), ('6', 'NUM'), ('Provide', 'VERB'), ('a', 'DET'), ('more', 'ADV'), ('flexible', 'ADJ'), ('script', 'NOUN'), ('/', 'SYM'), ('p5', 'NOUN'), ('7', 'NUM'), ('Conclusion', 'NOUN'), ('/', 'SYM'), ('p6', 'NOUN'), ('White', 'ADJ'), ('PaperCustomer', 'NOUN'), ('Service', 'NOUN'), ('Solutions', 'NOUN'), ('Natural', 'ADJ'), ('language', 'NOUN'), ('understanding', 'NOUN'), ('1', 'NUM')] 

 XPOS tags are: 
>> [('Table', 'NN'), ('of', 'IN'), ('contents', 'NNS'), ('1', 'CD'), ('Speech-enabled', 'JJ'), ('automation', 'NN'), ('/', ','), ('p2', 'NN'), ('2', 'CD'), ('Learning', 'NN'), ('to', 'TO'), ('speak', 'VB'), ('customer', 'NN'), ('-ese', 'NN'), ('/', ','), ('p3', 'NN'), ('3', 'CD'), ('Make', 'VB'), ('the', 'DT'), ('translation', 'NN'), ('book', 'NN'), ('bigger', 'JJR'), ('/', ','), ('p4', 'NN'), ('4', 'CD'), ('Learn', 'NN'), ('to', 'TO'), ('recognize', 'VB'), ('variations', 'NNS'), ('of', 'IN'), ('phrases', 'NNS'), ('/', ','), ('p4', 'NN'), ('5', 'CD'), ('Become', 'NN'), ('fluent', 'JJ'), ('/', ','), ('p4', 'NN'), ('6', 'CD'), ('Provide', 'VB'), ('a', 'DT'), ('more', 'RBR'), ('flexible', 'JJ'), ('script', 'NN'), ('/', ','), ('p5', 'NN'), ('7', 'CD'), ('Conclusion', 'NN'), ('/', ','), ('p6', 'NN'), ('White', 'JJ'), ('PaperCustomer', 'NN'), ('Service', 'NN'), ('Solutions', 'NNS'), ('Natural', 'JJ'), ('language', 'NN'), ('understanding', 'NN'), ('1', 'CD')] 

 Lemmas are: 
>> [('Table', 'table'), ('of', 'of'), ('contents', 'content'), ('1', '1'), ('Speech-enabled', 'speech-enabled'), ('automation', 'automation'), ('/', '/'), ('p2', 'p2'), ('2', '2'), ('Learning', 'learning'), ('to', 'to'), ('speak', 'speak'), ('customer', 'customer'), ('-ese', '-ese'), ('/', '/'), ('p3', 'p3'), ('3', '3'), ('Make', 'make'), ('the', 'the'), ('translation', 'translation'), ('book', 'book'), ('bigger', 'big'), ('/', '/'), ('p4', 'p4'), ('4', '4'), ('Learn', 'learn'), ('to', 'to'), ('recognize', 'recognize'), ('variations', 'variation'), ('of', 'of'), ('phrases', 'phrase'), ('/', '/'), ('p4', 'p4'), ('5', '5'), ('Become', 'become'), ('fluent', 'fluent'), ('/', '/'), ('p4', 'p4'), ('6', '6'), ('Provide', 'provide'), ('a', 'a'), ('more', 'more'), ('flexible', 'flexible'), ('script', 'script'), ('/', '/'), ('p5', 'p5'), ('7', '7'), ('Conclusion', 'conclusion'), ('/', '/'), ('p6', 'p6'), ('White', 'White'), ('PaperCustomer', 'papercustomer'), ('Service', 'service'), ('Solutions', 'solution'), ('Natural', 'Natural'), ('language', 'language'), ('understanding', 'understanding'), ('1', '1')] 

 Dependency tags are: 
>> [(('Table', 'Make'), 'nsubj'), (('of', 'contents'), 'case'), (('contents', 'Table'), 'nmod'), (('1', 'automation'), 'nummod'), (('Speech-enabled', 'Learning'), 'amod'), (('automation', 'Learning'), 'compound'), (('/', 'p2'), 'cc'), (('p2', 'Learning'), 'compound'), (('2', 'Learning'), 'nummod'), (('Learning', 'Table'), 'nmod'), (('to', 'speak'), 'mark'), (('speak', 'Learning'), 'acl'), (('customer', '-ese'), 'compound'), (('-ese', 'speak'), 'obj'), (('/', 'p3'), 'cc'), (('p3', '-ese'), 'conj'), (('3', 'p3'), 'nummod'), (('Make', 'root'), 'root'), (('the', 'book'), 'det'), (('translation', 'book'), 'compound'), (('book', 'Make'), 'obj'), (('bigger', 'Learn'), 'amod'), (('/', 'p4'), 'cc'), (('p4', 'bigger'), 'conj'), (('4', 'Learn'), 'nummod'), (('Learn', 'book'), 'conj'), (('to', 'recognize'), 'mark'), (('recognize', 'Learn'), 'acl'), (('variations', 'recognize'), 'obj'), (('of', 'phrases'), 'case'), (('phrases', 'variations'), 'nmod'), (('/', 'p4'), 'cc'), (('p4', 'phrases'), 'conj'), (('5', 'Become'), 'nummod'), (('Become', 'phrases'), 'conj'), (('fluent', 'Become'), 'amod'), (('/', 'p4'), 'cc'), (('p4', 'fluent'), 'conj'), (('6', 'p4'), 'nummod'), (('Provide', 'Become'), 'ccomp'), (('a', 'script'), 'det'), (('more', 'flexible'), 'advmod'), (('flexible', 'script'), 'amod'), (('script', 'Provide'), 'obj'), (('/', 'p5'), 'punct'), (('p5', 'script'), 'conj'), (('7', 'Conclusion'), 'nummod'), (('Conclusion', 'script'), 'conj'), (('/', 'p6'), 'punct'), (('p6', 'Solutions'), 'compound'), (('White', 'Service'), 'amod'), (('PaperCustomer', 'Service'), 'compound'), (('Service', 'Solutions'), 'compound'), (('Solutions', 'understanding'), 'compound'), (('Natural', 'understanding'), 'amod'), (('language', 'understanding'), 'compound'), (('understanding', 'Conclusion'), 'conj'), (('1', 'understanding'), 'nummod')]

 Named Entities are: 
>> [('1', 'CARDINAL')]

========================== Sentence 3 ===========================

 In recent years speech recognition systems have made impressive advances  in their ability to provide rich and natural interactions with callers. 

Tokens are: 
>> ['In', 'recent', 'years', 'speech', 'recognition', 'systems', 'have', 'made', 'impressive', 'advances', 'in', 'their', 'ability', 'to', 'provide', 'rich', 'and', 'natural', 'interactions', 'with', 'callers', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('recent', 'ADJ'), ('years', 'NOUN'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('systems', 'NOUN'), ('have', 'AUX'), ('made', 'VERB'), ('impressive', 'ADJ'), ('advances', 'NOUN'), ('in', 'ADP'), ('their', 'PRON'), ('ability', 'NOUN'), ('to', 'PART'), ('provide', 'VERB'), ('rich', 'ADJ'), ('and', 'CCONJ'), ('natural', 'ADJ'), ('interactions', 'NOUN'), ('with', 'ADP'), ('callers', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('recent', 'JJ'), ('years', 'NNS'), ('speech', 'NN'), ('recognition', 'NN'), ('systems', 'NNS'), ('have', 'VBP'), ('made', 'VBN'), ('impressive', 'JJ'), ('advances', 'NNS'), ('in', 'IN'), ('their', 'PRP$'), ('ability', 'NN'), ('to', 'TO'), ('provide', 'VB'), ('rich', 'JJ'), ('and', 'CC'), ('natural', 'JJ'), ('interactions', 'NNS'), ('with', 'IN'), ('callers', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('recent', 'recent'), ('years', 'year'), ('speech', 'speech'), ('recognition', 'recognition'), ('systems', 'system'), ('have', 'have'), ('made', 'make'), ('impressive', 'impressive'), ('advances', 'advance'), ('in', 'in'), ('their', 'they'), ('ability', 'ability'), ('to', 'to'), ('provide', 'provide'), ('rich', 'rich'), ('and', 'and'), ('natural', 'natural'), ('interactions', 'interaction'), ('with', 'with'), ('callers', 'caller'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'years'), 'case'), (('recent', 'years'), 'amod'), (('years', 'made'), 'obl'), (('speech', 'systems'), 'compound'), (('recognition', 'systems'), 'compound'), (('systems', 'made'), 'nsubj'), (('have', 'made'), 'aux'), (('made', 'root'), 'root'), (('impressive', 'advances'), 'amod'), (('advances', 'made'), 'obj'), (('in', 'ability'), 'case'), (('their', 'ability'), 'nmod:poss'), (('ability', 'advances'), 'nmod'), (('to', 'provide'), 'mark'), (('provide', 'ability'), 'acl'), (('rich', 'interactions'), 'amod'), (('and', 'natural'), 'cc'), (('natural', 'rich'), 'conj'), (('interactions', 'provide'), 'obj'), (('with', 'callers'), 'case'), (('callers', 'provide'), 'obl'), (('.', 'made'), 'punct')]

 Named Entities are: 
>> [('recent years', 'DATE')]

========================== Sentence 4 ===========================

 The term  Natural Language (NL)—and its family of synonymous abbreviations: Natural  Language Understanding (NLU), Natural Language Processing (NLP), and  Natural Language Technology (NLT)—have been held up as the panacea for  improving the accuracy of a speech system. 

Tokens are: 
>> ['The', 'term', 'Natural', 'Language', '(', 'NL', ')', '—', 'and', 'its', 'family', 'of', 'synonymous', 'abbreviations', ':', 'Natural', 'Language', 'Understanding', '(', 'NLU', ')', ',', 'Natural', 'Language', 'Processing', '(', 'NLP', ')', ',', 'and', 'Natural', 'Language', 'Technology', '(', 'NLT', ')', '—', 'have', 'been', 'held', 'up', 'as', 'the', 'panacea', 'for', 'improving', 'the', 'accuracy', 'of', 'a', 'speech', 'system', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('term', 'NOUN'), ('Natural', 'ADJ'), ('Language', 'PROPN'), ('(', 'PUNCT'), ('NL', 'PROPN'), (')', 'PUNCT'), ('—', 'PUNCT'), ('and', 'CCONJ'), ('its', 'PRON'), ('family', 'NOUN'), ('of', 'ADP'), ('synonymous', 'ADJ'), ('abbreviations', 'NOUN'), (':', 'PUNCT'), ('Natural', 'ADJ'), ('Language', 'NOUN'), ('Understanding', 'NOUN'), ('(', 'PUNCT'), ('NLU', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('Natural', 'ADJ'), ('Language', 'NOUN'), ('Processing', 'NOUN'), ('(', 'PUNCT'), ('NLP', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('and', 'CCONJ'), ('Natural', 'ADJ'), ('Language', 'NOUN'), ('Technology', 'NOUN'), ('(', 'PUNCT'), ('NLT', 'PROPN'), (')', 'PUNCT'), ('—', 'PUNCT'), ('have', 'AUX'), ('been', 'AUX'), ('held', 'VERB'), ('up', 'ADP'), ('as', 'ADP'), ('the', 'DET'), ('panacea', 'NOUN'), ('for', 'SCONJ'), ('improving', 'VERB'), ('the', 'DET'), ('accuracy', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('speech', 'NOUN'), ('system', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('term', 'NN'), ('Natural', 'NNP'), ('Language', 'NNP'), ('(', '-LRB-'), ('NL', 'NNP'), (')', '-RRB-'), ('—', ':'), ('and', 'CC'), ('its', 'PRP$'), ('family', 'NN'), ('of', 'IN'), ('synonymous', 'JJ'), ('abbreviations', 'NNS'), (':', ':'), ('Natural', 'JJ'), ('Language', 'NN'), ('Understanding', 'NN'), ('(', '-LRB-'), ('NLU', 'NNP'), (')', '-RRB-'), (',', ','), ('Natural', 'JJ'), ('Language', 'NN'), ('Processing', 'NN'), ('(', '-LRB-'), ('NLP', 'NN'), (')', '-RRB-'), (',', ','), ('and', 'CC'), ('Natural', 'JJ'), ('Language', 'NN'), ('Technology', 'NN'), ('(', '-LRB-'), ('NLT', 'NNP'), (')', '-RRB-'), ('—', ':'), ('have', 'VBP'), ('been', 'VBN'), ('held', 'VBN'), ('up', 'RP'), ('as', 'IN'), ('the', 'DT'), ('panacea', 'NN'), ('for', 'IN'), ('improving', 'VBG'), ('the', 'DT'), ('accuracy', 'NN'), ('of', 'IN'), ('a', 'DT'), ('speech', 'NN'), ('system', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('term', 'term'), ('Natural', 'Natural'), ('Language', 'Language'), ('(', '('), ('NL', 'NL'), (')', ')'), ('—', '—'), ('and', 'and'), ('its', 'its'), ('family', 'family'), ('of', 'of'), ('synonymous', 'synonymous'), ('abbreviations', 'abbreviation'), (':', ':'), ('Natural', 'Natural'), ('Language', 'language'), ('Understanding', 'understanding'), ('(', '('), ('NLU', 'NLU'), (')', ')'), (',', ','), ('Natural', 'Natural'), ('Language', 'language'), ('Processing', 'processing'), ('(', '('), ('NLP', 'nlp'), (')', ')'), (',', ','), ('and', 'and'), ('Natural', 'Natural'), ('Language', 'language'), ('Technology', 'technology'), ('(', '('), ('NLT', 'NLT'), (')', ')'), ('—', '—'), ('have', 'have'), ('been', 'be'), ('held', 'hold'), ('up', 'up'), ('as', 'as'), ('the', 'the'), ('panacea', 'panacea'), ('for', 'for'), ('improving', 'improve'), ('the', 'the'), ('accuracy', 'accuracy'), ('of', 'of'), ('a', 'a'), ('speech', 'speech'), ('system', 'system'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'term'), 'det'), (('term', 'Language'), 'compound'), (('Natural', 'Language'), 'amod'), (('Language', 'held'), 'nsubj:pass'), (('(', 'NL'), 'punct'), (('NL', 'Language'), 'appos'), ((')', 'NL'), 'punct'), (('—', 'family'), 'punct'), (('and', 'family'), 'cc'), (('its', 'family'), 'nmod:poss'), (('family', 'Language'), 'conj'), (('of', 'abbreviations'), 'case'), (('synonymous', 'abbreviations'), 'amod'), (('abbreviations', 'family'), 'nmod'), ((':', 'Understanding'), 'punct'), (('Natural', 'Understanding'), 'amod'), (('Language', 'Understanding'), 'compound'), (('Understanding', 'Language'), 'appos'), (('(', 'NLU'), 'punct'), (('NLU', 'Understanding'), 'appos'), ((')', 'NLU'), 'punct'), ((',', 'Processing'), 'punct'), (('Natural', 'Language'), 'amod'), (('Language', 'Processing'), 'compound'), (('Processing', 'Understanding'), 'conj'), (('(', 'NLP'), 'punct'), (('NLP', 'Processing'), 'appos'), ((')', 'NLP'), 'punct'), ((',', 'Technology'), 'punct'), (('and', 'Technology'), 'cc'), (('Natural', 'Technology'), 'amod'), (('Language', 'Technology'), 'compound'), (('Technology', 'Understanding'), 'conj'), (('(', 'NLT'), 'punct'), (('NLT', 'Technology'), 'appos'), ((')', 'NLT'), 'punct'), (('—', 'held'), 'punct'), (('have', 'held'), 'aux'), (('been', 'held'), 'aux:pass'), (('held', 'root'), 'root'), (('up', 'held'), 'compound:prt'), (('as', 'panacea'), 'case'), (('the', 'panacea'), 'det'), (('panacea', 'held'), 'obl'), (('for', 'improving'), 'mark'), (('improving', 'panacea'), 'acl'), (('the', 'accuracy'), 'det'), (('accuracy', 'improving'), 'obj'), (('of', 'system'), 'case'), (('a', 'system'), 'det'), (('speech', 'system'), 'compound'), (('system', 'accuracy'), 'nmod'), (('.', 'held'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 5 ===========================

 Natural language suggests that,  rather than constrain a caller to a list of choices, the caller can say anything in  any context and be understood by the system. 

Tokens are: 
>> ['Natural', 'language', 'suggests', 'that', ',', 'rather', 'than', 'constrain', 'a', 'caller', 'to', 'a', 'list', 'of', 'choices', ',', 'the', 'caller', 'can', 'say', 'anything', 'in', 'any', 'context', 'and', 'be', 'understood', 'by', 'the', 'system', '.'] 

 UPOS tags are: 
>> [('Natural', 'ADJ'), ('language', 'NOUN'), ('suggests', 'VERB'), ('that', 'SCONJ'), (',', 'PUNCT'), ('rather', 'ADV'), ('than', 'ADP'), ('constrain', 'VERB'), ('a', 'DET'), ('caller', 'NOUN'), ('to', 'ADP'), ('a', 'DET'), ('list', 'NOUN'), ('of', 'ADP'), ('choices', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('caller', 'NOUN'), ('can', 'AUX'), ('say', 'VERB'), ('anything', 'PRON'), ('in', 'ADP'), ('any', 'DET'), ('context', 'NOUN'), ('and', 'CCONJ'), ('be', 'AUX'), ('understood', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('system', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Natural', 'JJ'), ('language', 'NN'), ('suggests', 'VBZ'), ('that', 'IN'), (',', ','), ('rather', 'RB'), ('than', 'IN'), ('constrain', 'VB'), ('a', 'DT'), ('caller', 'NN'), ('to', 'IN'), ('a', 'DT'), ('list', 'NN'), ('of', 'IN'), ('choices', 'NNS'), (',', ','), ('the', 'DT'), ('caller', 'NN'), ('can', 'MD'), ('say', 'VB'), ('anything', 'NN'), ('in', 'IN'), ('any', 'DT'), ('context', 'NN'), ('and', 'CC'), ('be', 'VB'), ('understood', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('system', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Natural', 'Natural'), ('language', 'language'), ('suggests', 'suggest'), ('that', 'that'), (',', ','), ('rather', 'rather'), ('than', 'than'), ('constrain', 'constrain'), ('a', 'a'), ('caller', 'caller'), ('to', 'to'), ('a', 'a'), ('list', 'list'), ('of', 'of'), ('choices', 'choice'), (',', ','), ('the', 'the'), ('caller', 'caller'), ('can', 'can'), ('say', 'say'), ('anything', 'anything'), ('in', 'in'), ('any', 'any'), ('context', 'context'), ('and', 'and'), ('be', 'be'), ('understood', 'understand'), ('by', 'by'), ('the', 'the'), ('system', 'system'), ('.', '.')] 

 Dependency tags are: 
>> [(('Natural', 'language'), 'amod'), (('language', 'suggests'), 'nsubj'), (('suggests', 'root'), 'root'), (('that', 'say'), 'mark'), ((',', 'say'), 'punct'), (('rather', 'constrain'), 'cc'), (('than', 'rather'), 'fixed'), (('constrain', 'say'), 'advcl'), (('a', 'caller'), 'det'), (('caller', 'constrain'), 'obj'), (('to', 'list'), 'case'), (('a', 'list'), 'det'), (('list', 'constrain'), 'obl'), (('of', 'choices'), 'case'), (('choices', 'list'), 'nmod'), ((',', 'say'), 'punct'), (('the', 'caller'), 'det'), (('caller', 'say'), 'nsubj'), (('can', 'say'), 'aux'), (('say', 'suggests'), 'ccomp'), (('anything', 'say'), 'obj'), (('in', 'context'), 'case'), (('any', 'context'), 'det'), (('context', 'anything'), 'nmod'), (('and', 'understood'), 'cc'), (('be', 'understood'), 'aux:pass'), (('understood', 'say'), 'conj'), (('by', 'system'), 'case'), (('the', 'system'), 'det'), (('system', 'understood'), 'obl'), (('.', 'suggests'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 6 ===========================

 Speech vendors trumpet their  NL capabilities, linguists at research labs talk about advancements in NLP  technology, contact centers evaluating vendor proposals ask for explanations  of available NLU features and industry press proclaim NLT as the future of  speech recognition. 

Tokens are: 
>> ['Speech', 'vendors', 'trumpet', 'their', 'NL', 'capabilities', ',', 'linguists', 'at', 'research', 'labs', 'talk', 'about', 'advancements', 'in', 'NLP', 'technology', ',', 'contact', 'centers', 'evaluating', 'vendor', 'proposals', 'ask', 'for', 'explanations', 'of', 'available', 'NLU', 'features', 'and', 'industry', 'press', 'proclaim', 'NLT', 'as', 'the', 'future', 'of', 'speech', 'recognition', '.'] 

 UPOS tags are: 
>> [('Speech', 'NOUN'), ('vendors', 'NOUN'), ('trumpet', 'VERB'), ('their', 'PRON'), ('NL', 'NOUN'), ('capabilities', 'NOUN'), (',', 'PUNCT'), ('linguists', 'NOUN'), ('at', 'ADP'), ('research', 'NOUN'), ('labs', 'NOUN'), ('talk', 'VERB'), ('about', 'ADP'), ('advancements', 'NOUN'), ('in', 'ADP'), ('NLP', 'NOUN'), ('technology', 'NOUN'), (',', 'PUNCT'), ('contact', 'NOUN'), ('centers', 'NOUN'), ('evaluating', 'VERB'), ('vendor', 'NOUN'), ('proposals', 'NOUN'), ('ask', 'VERB'), ('for', 'ADP'), ('explanations', 'NOUN'), ('of', 'ADP'), ('available', 'ADJ'), ('NLU', 'NOUN'), ('features', 'NOUN'), ('and', 'CCONJ'), ('industry', 'NOUN'), ('press', 'NOUN'), ('proclaim', 'VERB'), ('NLT', 'PROPN'), ('as', 'ADP'), ('the', 'DET'), ('future', 'NOUN'), ('of', 'ADP'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Speech', 'NN'), ('vendors', 'NNS'), ('trumpet', 'VBP'), ('their', 'PRP$'), ('NL', 'NN'), ('capabilities', 'NNS'), (',', ','), ('linguists', 'NNS'), ('at', 'IN'), ('research', 'NN'), ('labs', 'NNS'), ('talk', 'VBP'), ('about', 'IN'), ('advancements', 'NNS'), ('in', 'IN'), ('NLP', 'NN'), ('technology', 'NN'), (',', ','), ('contact', 'NN'), ('centers', 'NNS'), ('evaluating', 'VBG'), ('vendor', 'NN'), ('proposals', 'NNS'), ('ask', 'VB'), ('for', 'IN'), ('explanations', 'NNS'), ('of', 'IN'), ('available', 'JJ'), ('NLU', 'NN'), ('features', 'NNS'), ('and', 'CC'), ('industry', 'NN'), ('press', 'NN'), ('proclaim', 'VB'), ('NLT', 'NNP'), ('as', 'IN'), ('the', 'DT'), ('future', 'NN'), ('of', 'IN'), ('speech', 'NN'), ('recognition', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Speech', 'speech'), ('vendors', 'vendor'), ('trumpet', 'trumpet'), ('their', 'they'), ('NL', 'nl'), ('capabilities', 'capability'), (',', ','), ('linguists', 'linguist'), ('at', 'at'), ('research', 'research'), ('labs', 'lab'), ('talk', 'talk'), ('about', 'about'), ('advancements', 'advancement'), ('in', 'in'), ('NLP', 'nlp'), ('technology', 'technology'), (',', ','), ('contact', 'contact'), ('centers', 'center'), ('evaluating', 'evaluate'), ('vendor', 'vendor'), ('proposals', 'proposal'), ('ask', 'ask'), ('for', 'for'), ('explanations', 'explanation'), ('of', 'of'), ('available', 'available'), ('NLU', 'nlu'), ('features', 'feature'), ('and', 'and'), ('industry', 'industry'), ('press', 'press'), ('proclaim', 'proclaim'), ('NLT', 'NLT'), ('as', 'as'), ('the', 'the'), ('future', 'future'), ('of', 'of'), ('speech', 'speech'), ('recognition', 'recognition'), ('.', '.')] 

 Dependency tags are: 
>> [(('Speech', 'vendors'), 'compound'), (('vendors', 'trumpet'), 'nsubj'), (('trumpet', 'root'), 'root'), (('their', 'capabilities'), 'nmod:poss'), (('NL', 'capabilities'), 'compound'), (('capabilities', 'trumpet'), 'obj'), ((',', 'talk'), 'punct'), (('linguists', 'talk'), 'nsubj'), (('at', 'labs'), 'case'), (('research', 'labs'), 'compound'), (('labs', 'linguists'), 'nmod'), (('talk', 'trumpet'), 'conj'), (('about', 'advancements'), 'case'), (('advancements', 'talk'), 'obl'), (('in', 'technology'), 'case'), (('NLP', 'technology'), 'compound'), (('technology', 'advancements'), 'nmod'), ((',', 'centers'), 'punct'), (('contact', 'centers'), 'compound'), (('centers', 'technology'), 'conj'), (('evaluating', 'talk'), 'advcl'), (('vendor', 'proposals'), 'compound'), (('proposals', 'evaluating'), 'obj'), (('ask', 'evaluating'), 'xcomp'), (('for', 'explanations'), 'case'), (('explanations', 'ask'), 'obl'), (('of', 'features'), 'case'), (('available', 'features'), 'amod'), (('NLU', 'features'), 'compound'), (('features', 'explanations'), 'nmod'), (('and', 'press'), 'cc'), (('industry', 'press'), 'compound'), (('press', 'features'), 'conj'), (('proclaim', 'ask'), 'conj'), (('NLT', 'proclaim'), 'obj'), (('as', 'future'), 'case'), (('the', 'future'), 'det'), (('future', 'proclaim'), 'obl'), (('of', 'recognition'), 'case'), (('speech', 'recognition'), 'compound'), (('recognition', 'future'), 'nmod'), (('.', 'trumpet'), 'punct')]

 Named Entities are: 
>> [('NLT', 'WORK_OF_ART')]

========================== Sentence 7 ===========================

 The problem is that the term “natural language” has become meaningless. 

Tokens are: 
>> ['The', 'problem', 'is', 'that', 'the', 'term', '“', 'natural', 'language', '”', 'has', 'become', 'meaningless', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('problem', 'NOUN'), ('is', 'VERB'), ('that', 'SCONJ'), ('the', 'DET'), ('term', 'NOUN'), ('“', 'PUNCT'), ('natural', 'ADJ'), ('language', 'NOUN'), ('”', 'PUNCT'), ('has', 'AUX'), ('become', 'VERB'), ('meaningless', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('problem', 'NN'), ('is', 'VBZ'), ('that', 'IN'), ('the', 'DT'), ('term', 'NN'), ('“', '``'), ('natural', 'JJ'), ('language', 'NN'), ('”', "''"), ('has', 'VBZ'), ('become', 'VBN'), ('meaningless', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('problem', 'problem'), ('is', 'be'), ('that', 'that'), ('the', 'the'), ('term', 'term'), ('“', "''"), ('natural', 'natural'), ('language', 'language'), ('”', "''"), ('has', 'have'), ('become', 'become'), ('meaningless', 'meaningless'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'problem'), 'det'), (('problem', 'is'), 'nsubj'), (('is', 'root'), 'root'), (('that', 'become'), 'mark'), (('the', 'term'), 'det'), (('term', 'become'), 'nsubj'), (('“', 'language'), 'punct'), (('natural', 'language'), 'amod'), (('language', 'term'), 'appos'), (('”', 'language'), 'punct'), (('has', 'become'), 'aux'), (('become', 'is'), 'ccomp'), (('meaningless', 'become'), 'xcomp'), (('.', 'is'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 8 ===========================

 This standard speech industry terminology is anything but standard. 

Tokens are: 
>> ['This', 'standard', 'speech', 'industry', 'terminology', 'is', 'anything', 'but', 'standard', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('standard', 'ADJ'), ('speech', 'NOUN'), ('industry', 'NOUN'), ('terminology', 'NOUN'), ('is', 'AUX'), ('anything', 'PRON'), ('but', 'CCONJ'), ('standard', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('standard', 'JJ'), ('speech', 'NN'), ('industry', 'NN'), ('terminology', 'NN'), ('is', 'VBZ'), ('anything', 'NN'), ('but', 'CC'), ('standard', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('standard', 'standard'), ('speech', 'speech'), ('industry', 'industry'), ('terminology', 'terminology'), ('is', 'be'), ('anything', 'anything'), ('but', 'but'), ('standard', 'standard'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'terminology'), 'det'), (('standard', 'terminology'), 'amod'), (('speech', 'industry'), 'compound'), (('industry', 'terminology'), 'compound'), (('terminology', 'anything'), 'nsubj'), (('is', 'anything'), 'cop'), (('anything', 'root'), 'root'), (('but', 'standard'), 'cc'), (('standard', 'anything'), 'conj'), (('.', 'anything'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 9 ===========================

 It implies  that you could call up a travel service and say, “I’d like a flight to London for  the 25th, for two adults, no wait make that two adults and an infant on my  lap, and can I have two aisle seats next to each other?” 

Tokens are: 
>> ['It', 'implies', 'that', 'you', 'could', 'call', 'up', 'a', 'travel', 'service', 'and', 'say', ',', '“', 'I', '’d', 'like', 'a', 'flight', 'to', 'London', 'for', 'the', '25th', ',', 'for', 'two', 'adults', ',', 'no', 'wait', 'make', 'that', 'two', 'adults', 'and', 'an', 'infant', 'on', 'my', 'lap', ',', 'and', 'can', 'I', 'have', 'two', 'aisle', 'seats', 'next', 'to', 'each', 'other', '?', '”'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('implies', 'VERB'), ('that', 'SCONJ'), ('you', 'PRON'), ('could', 'AUX'), ('call', 'VERB'), ('up', 'ADP'), ('a', 'DET'), ('travel', 'NOUN'), ('service', 'NOUN'), ('and', 'CCONJ'), ('say', 'VERB'), (',', 'PUNCT'), ('“', 'PUNCT'), ('I', 'PRON'), ('’d', 'AUX'), ('like', 'VERB'), ('a', 'DET'), ('flight', 'NOUN'), ('to', 'ADP'), ('London', 'PROPN'), ('for', 'ADP'), ('the', 'DET'), ('25th', 'NOUN'), (',', 'PUNCT'), ('for', 'ADP'), ('two', 'NUM'), ('adults', 'NOUN'), (',', 'PUNCT'), ('no', 'DET'), ('wait', 'NOUN'), ('make', 'VERB'), ('that', 'DET'), ('two', 'NUM'), ('adults', 'NOUN'), ('and', 'CCONJ'), ('an', 'DET'), ('infant', 'NOUN'), ('on', 'ADP'), ('my', 'PRON'), ('lap', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('can', 'AUX'), ('I', 'PRON'), ('have', 'VERB'), ('two', 'NUM'), ('aisle', 'ADJ'), ('seats', 'NOUN'), ('next', 'ADV'), ('to', 'ADP'), ('each', 'DET'), ('other', 'ADJ'), ('?', 'PUNCT'), ('”', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('implies', 'VBZ'), ('that', 'IN'), ('you', 'PRP'), ('could', 'MD'), ('call', 'VB'), ('up', 'RP'), ('a', 'DT'), ('travel', 'NN'), ('service', 'NN'), ('and', 'CC'), ('say', 'VB'), (',', ','), ('“', '``'), ('I', 'PRP'), ('’d', 'MD'), ('like', 'VB'), ('a', 'DT'), ('flight', 'NN'), ('to', 'IN'), ('London', 'NNP'), ('for', 'IN'), ('the', 'DT'), ('25th', 'NN'), (',', ','), ('for', 'IN'), ('two', 'CD'), ('adults', 'NNS'), (',', ','), ('no', 'DT'), ('wait', 'NN'), ('make', 'VB'), ('that', 'DT'), ('two', 'CD'), ('adults', 'NNS'), ('and', 'CC'), ('an', 'DT'), ('infant', 'NN'), ('on', 'IN'), ('my', 'PRP$'), ('lap', 'NN'), (',', ','), ('and', 'CC'), ('can', 'MD'), ('I', 'PRP'), ('have', 'VB'), ('two', 'CD'), ('aisle', 'JJ'), ('seats', 'NNS'), ('next', 'RB'), ('to', 'IN'), ('each', 'DT'), ('other', 'JJ'), ('?', '.'), ('”', "''")] 

 Lemmas are: 
>> [('It', 'it'), ('implies', 'imply'), ('that', 'that'), ('you', 'you'), ('could', 'could'), ('call', 'call'), ('up', 'up'), ('a', 'a'), ('travel', 'travel'), ('service', 'service'), ('and', 'and'), ('say', 'say'), (',', ','), ('“', "''"), ('I', 'I'), ('’d', 'have'), ('like', 'like'), ('a', 'a'), ('flight', 'flight'), ('to', 'to'), ('London', 'London'), ('for', 'for'), ('the', 'the'), ('25th', '25th'), (',', ','), ('for', 'for'), ('two', 'two'), ('adults', 'adult'), (',', ','), ('no', 'no'), ('wait', 'wait'), ('make', 'make'), ('that', 'that'), ('two', 'two'), ('adults', 'adult'), ('and', 'and'), ('an', 'a'), ('infant', 'infant'), ('on', 'on'), ('my', 'my'), ('lap', 'lap'), (',', ','), ('and', 'and'), ('can', 'can'), ('I', 'I'), ('have', 'have'), ('two', 'two'), ('aisle', 'aisle'), ('seats', 'seat'), ('next', 'next'), ('to', 'to'), ('each', 'each'), ('other', 'other'), ('?', '?'), ('”', "''")] 

 Dependency tags are: 
>> [(('It', 'implies'), 'nsubj'), (('implies', 'root'), 'root'), (('that', 'call'), 'mark'), (('you', 'call'), 'nsubj'), (('could', 'call'), 'aux'), (('call', 'implies'), 'ccomp'), (('up', 'call'), 'compound:prt'), (('a', 'service'), 'det'), (('travel', 'service'), 'compound'), (('service', 'call'), 'obj'), (('and', 'say'), 'cc'), (('say', 'call'), 'conj'), ((',', 'like'), 'punct'), (('“', 'like'), 'punct'), (('I', 'like'), 'nsubj'), (('’d', 'like'), 'aux'), (('like', 'say'), 'ccomp'), (('a', 'flight'), 'det'), (('flight', 'like'), 'obj'), (('to', 'London'), 'case'), (('London', 'flight'), 'nmod'), (('for', '25th'), 'case'), (('the', '25th'), 'det'), (('25th', 'like'), 'obl'), ((',', 'like'), 'punct'), (('for', 'adults'), 'case'), (('two', 'adults'), 'nummod'), (('adults', 'make'), 'obl'), ((',', 'make'), 'punct'), (('no', 'wait'), 'det'), (('wait', 'make'), 'nsubj'), (('make', 'like'), 'conj'), (('that', 'adults'), 'det'), (('two', 'adults'), 'nummod'), (('adults', 'make'), 'obj'), (('and', 'infant'), 'cc'), (('an', 'infant'), 'det'), (('infant', 'adults'), 'conj'), (('on', 'lap'), 'case'), (('my', 'lap'), 'nmod:poss'), (('lap', 'infant'), 'nmod'), ((',', 'have'), 'punct'), (('and', 'have'), 'cc'), (('can', 'have'), 'aux'), (('I', 'have'), 'nsubj'), (('have', 'like'), 'conj'), (('two', 'seats'), 'nummod'), (('aisle', 'seats'), 'amod'), (('seats', 'have'), 'obj'), (('next', 'have'), 'advmod'), (('to', 'other'), 'case'), (('each', 'other'), 'det'), (('other', 'next'), 'obl'), (('?', 'like'), 'punct'), (('”', 'like'), 'punct')]

 Named Entities are: 
>> [('London', 'GPE'), ('the 25th', 'DATE'), ('two', 'CARDINAL'), ('two', 'CARDINAL'), ('two', 'CARDINAL')]

========================== Sentence 10 ===========================

 The term natural  language is vague and overused, full of promise, yet promising nothing. 

Tokens are: 
>> ['The', 'term', 'natural', 'language', 'is', 'vague', 'and', 'overused', ',', 'full', 'of', 'promise', ',', 'yet', 'promising', 'nothing', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('term', 'NOUN'), ('natural', 'ADJ'), ('language', 'NOUN'), ('is', 'AUX'), ('vague', 'ADJ'), ('and', 'CCONJ'), ('overused', 'ADJ'), (',', 'PUNCT'), ('full', 'ADJ'), ('of', 'ADP'), ('promise', 'NOUN'), (',', 'PUNCT'), ('yet', 'CCONJ'), ('promising', 'VERB'), ('nothing', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('term', 'NN'), ('natural', 'JJ'), ('language', 'NN'), ('is', 'VBZ'), ('vague', 'JJ'), ('and', 'CC'), ('overused', 'JJ'), (',', ','), ('full', 'JJ'), ('of', 'IN'), ('promise', 'NN'), (',', ','), ('yet', 'CC'), ('promising', 'VBG'), ('nothing', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('term', 'term'), ('natural', 'natural'), ('language', 'language'), ('is', 'be'), ('vague', 'vague'), ('and', 'and'), ('overused', 'overused'), (',', ','), ('full', 'full'), ('of', 'of'), ('promise', 'promise'), (',', ','), ('yet', 'yet'), ('promising', 'promise'), ('nothing', 'nothing'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'language'), 'det'), (('term', 'language'), 'compound'), (('natural', 'language'), 'amod'), (('language', 'vague'), 'nsubj'), (('is', 'vague'), 'cop'), (('vague', 'root'), 'root'), (('and', 'overused'), 'cc'), (('overused', 'vague'), 'conj'), ((',', 'full'), 'punct'), (('full', 'vague'), 'conj'), (('of', 'promise'), 'case'), (('promise', 'full'), 'obl'), ((',', 'promising'), 'punct'), (('yet', 'promising'), 'cc'), (('promising', 'vague'), 'conj'), (('nothing', 'promising'), 'obj'), (('.', 'vague'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 11 ===========================

 For it  to mean something, one needs specifics. 

Tokens are: 
>> ['For', 'it', 'to', 'mean', 'something', ',', 'one', 'needs', 'specifics', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('it', 'PRON'), ('to', 'PART'), ('mean', 'VERB'), ('something', 'PRON'), (',', 'PUNCT'), ('one', 'NUM'), ('needs', 'VERB'), ('specifics', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('it', 'PRP'), ('to', 'TO'), ('mean', 'VB'), ('something', 'NN'), (',', ','), ('one', 'CD'), ('needs', 'VBZ'), ('specifics', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('it', 'it'), ('to', 'to'), ('mean', 'mean'), ('something', 'something'), (',', ','), ('one', 'one'), ('needs', 'need'), ('specifics', 'specifics'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'it'), 'case'), (('it', 'needs'), 'obl'), (('to', 'mean'), 'mark'), (('mean', 'needs'), 'advcl'), (('something', 'mean'), 'obj'), ((',', 'needs'), 'punct'), (('one', 'needs'), 'nsubj'), (('needs', 'root'), 'root'), (('specifics', 'needs'), 'obj'), (('.', 'needs'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 12 ===========================

 In this paper, the specific benefits of natural language in speech recognition  are explained and the approaches examined in detail. 

Tokens are: 
>> ['In', 'this', 'paper', ',', 'the', 'specific', 'benefits', 'of', 'natural', 'language', 'in', 'speech', 'recognition', 'are', 'explained', 'and', 'the', 'approaches', 'examined', 'in', 'detail', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('this', 'DET'), ('paper', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('specific', 'ADJ'), ('benefits', 'NOUN'), ('of', 'ADP'), ('natural', 'ADJ'), ('language', 'NOUN'), ('in', 'ADP'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('are', 'AUX'), ('explained', 'VERB'), ('and', 'CCONJ'), ('the', 'DET'), ('approaches', 'NOUN'), ('examined', 'VERB'), ('in', 'ADP'), ('detail', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('this', 'DT'), ('paper', 'NN'), (',', ','), ('the', 'DT'), ('specific', 'JJ'), ('benefits', 'NNS'), ('of', 'IN'), ('natural', 'JJ'), ('language', 'NN'), ('in', 'IN'), ('speech', 'NN'), ('recognition', 'NN'), ('are', 'VBP'), ('explained', 'VBN'), ('and', 'CC'), ('the', 'DT'), ('approaches', 'NNS'), ('examined', 'VBN'), ('in', 'IN'), ('detail', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('this', 'this'), ('paper', 'paper'), (',', ','), ('the', 'the'), ('specific', 'specific'), ('benefits', 'benefit'), ('of', 'of'), ('natural', 'natural'), ('language', 'language'), ('in', 'in'), ('speech', 'speech'), ('recognition', 'recognition'), ('are', 'be'), ('explained', 'explain'), ('and', 'and'), ('the', 'the'), ('approaches', 'approach'), ('examined', 'examine'), ('in', 'in'), ('detail', 'detail'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'paper'), 'case'), (('this', 'paper'), 'det'), (('paper', 'explained'), 'obl'), ((',', 'explained'), 'punct'), (('the', 'benefits'), 'det'), (('specific', 'benefits'), 'amod'), (('benefits', 'explained'), 'nsubj:pass'), (('of', 'language'), 'case'), (('natural', 'language'), 'amod'), (('language', 'benefits'), 'nmod'), (('in', 'recognition'), 'case'), (('speech', 'recognition'), 'compound'), (('recognition', 'language'), 'nmod'), (('are', 'explained'), 'aux:pass'), (('explained', 'root'), 'root'), (('and', 'approaches'), 'cc'), (('the', 'approaches'), 'det'), (('approaches', 'explained'), 'conj'), (('examined', 'approaches'), 'acl'), (('in', 'detail'), 'case'), (('detail', 'examined'), 'obl'), (('.', 'explained'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 13 ===========================

 By the time you’ve  finished reading, you’ll understand natural language and how it can be  effective in improving the overall accuracy of your speech-based IVR system  while providing callers a more engaging experience. 

Tokens are: 
>> ['By', 'the', 'time', 'you', '’ve', 'finished', 'reading', ',', 'you', '’ll', 'understand', 'natural', 'language', 'and', 'how', 'it', 'can', 'be', 'effective', 'in', 'improving', 'the', 'overall', 'accuracy', 'of', 'your', 'speech', '-', 'based', 'IVR', 'system', 'while', 'providing', 'callers', 'a', 'more', 'engaging', 'experience', '.'] 

 UPOS tags are: 
>> [('By', 'ADP'), ('the', 'DET'), ('time', 'NOUN'), ('you', 'PRON'), ('’ve', 'AUX'), ('finished', 'VERB'), ('reading', 'VERB'), (',', 'PUNCT'), ('you', 'PRON'), ('’ll', 'AUX'), ('understand', 'VERB'), ('natural', 'ADJ'), ('language', 'NOUN'), ('and', 'CCONJ'), ('how', 'SCONJ'), ('it', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('effective', 'ADJ'), ('in', 'SCONJ'), ('improving', 'VERB'), ('the', 'DET'), ('overall', 'ADJ'), ('accuracy', 'NOUN'), ('of', 'ADP'), ('your', 'PRON'), ('speech', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('IVR', 'PROPN'), ('system', 'NOUN'), ('while', 'SCONJ'), ('providing', 'VERB'), ('callers', 'NOUN'), ('a', 'DET'), ('more', 'ADV'), ('engaging', 'ADJ'), ('experience', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('By', 'IN'), ('the', 'DT'), ('time', 'NN'), ('you', 'PRP'), ('’ve', 'VBP'), ('finished', 'VBN'), ('reading', 'VBG'), (',', ','), ('you', 'PRP'), ('’ll', 'MD'), ('understand', 'VB'), ('natural', 'JJ'), ('language', 'NN'), ('and', 'CC'), ('how', 'WRB'), ('it', 'PRP'), ('can', 'MD'), ('be', 'VB'), ('effective', 'JJ'), ('in', 'IN'), ('improving', 'VBG'), ('the', 'DT'), ('overall', 'JJ'), ('accuracy', 'NN'), ('of', 'IN'), ('your', 'PRP$'), ('speech', 'NN'), ('-', 'HYPH'), ('based', 'VBN'), ('IVR', 'NNP'), ('system', 'NN'), ('while', 'IN'), ('providing', 'VBG'), ('callers', 'NNS'), ('a', 'DT'), ('more', 'RBR'), ('engaging', 'JJ'), ('experience', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('By', 'by'), ('the', 'the'), ('time', 'time'), ('you', 'you'), ('’ve', 'have'), ('finished', 'finish'), ('reading', 'read'), (',', ','), ('you', 'you'), ('’ll', 'will'), ('understand', 'understand'), ('natural', 'natural'), ('language', 'language'), ('and', 'and'), ('how', 'how'), ('it', 'it'), ('can', 'can'), ('be', 'be'), ('effective', 'effective'), ('in', 'in'), ('improving', 'improve'), ('the', 'the'), ('overall', 'overall'), ('accuracy', 'accuracy'), ('of', 'of'), ('your', 'you'), ('speech', 'speech'), ('-', '-'), ('based', 'base'), ('IVR', 'IVR'), ('system', 'system'), ('while', 'while'), ('providing', 'provide'), ('callers', 'caller'), ('a', 'a'), ('more', 'more'), ('engaging', 'engaging'), ('experience', 'experience'), ('.', '.')] 

 Dependency tags are: 
>> [(('By', 'time'), 'case'), (('the', 'time'), 'det'), (('time', 'understand'), 'obl'), (('you', 'finished'), 'nsubj'), (('’ve', 'finished'), 'aux'), (('finished', 'time'), 'acl:relcl'), (('reading', 'finished'), 'xcomp'), ((',', 'understand'), 'punct'), (('you', 'understand'), 'nsubj'), (('’ll', 'understand'), 'aux'), (('understand', 'root'), 'root'), (('natural', 'language'), 'amod'), (('language', 'understand'), 'obj'), (('and', 'effective'), 'cc'), (('how', 'effective'), 'mark'), (('it', 'effective'), 'expl'), (('can', 'effective'), 'aux'), (('be', 'effective'), 'cop'), (('effective', 'understand'), 'conj'), (('in', 'improving'), 'mark'), (('improving', 'effective'), 'advcl'), (('the', 'accuracy'), 'det'), (('overall', 'accuracy'), 'amod'), (('accuracy', 'improving'), 'obj'), (('of', 'system'), 'case'), (('your', 'system'), 'nmod:poss'), (('speech', 'based'), 'obl:npmod'), (('-', 'based'), 'punct'), (('based', 'system'), 'amod'), (('IVR', 'system'), 'compound'), (('system', 'accuracy'), 'nmod'), (('while', 'providing'), 'mark'), (('providing', 'improving'), 'advcl'), (('callers', 'providing'), 'obj'), (('a', 'experience'), 'det'), (('more', 'engaging'), 'advmod'), (('engaging', 'experience'), 'amod'), (('experience', 'providing'), 'obj'), (('.', 'understand'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 14 ===========================

 Speech-enabled automation Interactive Voice Response (IVR) systems are at the heart of today’s contact  center self-service solutions. 

Tokens are: 
>> ['Speech', '-enabled', 'automation', 'Interactive', 'Voice', 'Response', '(', 'IVR', ')', 'systems', 'are', 'at', 'the', 'heart', 'of', 'today', '’s', 'contact', 'center', 'self', '-', 'service', 'solutions', '.'] 

 UPOS tags are: 
>> [('Speech', 'NOUN'), ('-enabled', 'VERB'), ('automation', 'NOUN'), ('Interactive', 'ADJ'), ('Voice', 'PROPN'), ('Response', 'NOUN'), ('(', 'PUNCT'), ('IVR', 'PROPN'), (')', 'PUNCT'), ('systems', 'NOUN'), ('are', 'AUX'), ('at', 'ADP'), ('the', 'DET'), ('heart', 'NOUN'), ('of', 'ADP'), ('today', 'NOUN'), ('’s', 'PART'), ('contact', 'NOUN'), ('center', 'NOUN'), ('self', 'NOUN'), ('-', 'PUNCT'), ('service', 'NOUN'), ('solutions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Speech', 'NN'), ('-enabled', 'VBN'), ('automation', 'NN'), ('Interactive', 'JJ'), ('Voice', 'NNP'), ('Response', 'NN'), ('(', '-LRB-'), ('IVR', 'NNP'), (')', '-RRB-'), ('systems', 'NNS'), ('are', 'VBP'), ('at', 'IN'), ('the', 'DT'), ('heart', 'NN'), ('of', 'IN'), ('today', 'NN'), ('’s', 'POS'), ('contact', 'NN'), ('center', 'NN'), ('self', 'NN'), ('-', 'HYPH'), ('service', 'NN'), ('solutions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Speech', 'speech'), ('-enabled', '-enable'), ('automation', 'automation'), ('Interactive', 'interactive'), ('Voice', 'Voice'), ('Response', 'response'), ('(', '('), ('IVR', 'IVR'), (')', ')'), ('systems', 'system'), ('are', 'be'), ('at', 'at'), ('the', 'the'), ('heart', 'heart'), ('of', 'of'), ('today', 'today'), ('’s', "'s"), ('contact', 'contact'), ('center', 'center'), ('self', 'self'), ('-', '-'), ('service', 'service'), ('solutions', 'solution'), ('.', '.')] 

 Dependency tags are: 
>> [(('Speech', '-enabled'), 'obl:npmod'), (('-enabled', 'systems'), 'amod'), (('automation', 'Response'), 'compound'), (('Interactive', 'Response'), 'amod'), (('Voice', 'Response'), 'compound'), (('Response', 'heart'), 'nsubj'), (('(', 'IVR'), 'punct'), (('IVR', 'Response'), 'appos'), ((')', 'IVR'), 'punct'), (('systems', 'heart'), 'nsubj'), (('are', 'heart'), 'cop'), (('at', 'heart'), 'case'), (('the', 'heart'), 'det'), (('heart', 'root'), 'root'), (('of', 'solutions'), 'case'), (('today', 'solutions'), 'nmod:poss'), (('’s', 'today'), 'case'), (('contact', 'center'), 'compound'), (('center', 'solutions'), 'compound'), (('self', 'service'), 'compound'), (('-', 'service'), 'punct'), (('service', 'solutions'), 'compound'), (('solutions', 'heart'), 'nmod'), (('.', 'heart'), 'punct')]

 Named Entities are: 
>> [('Interactive Voice Response', 'PRODUCT'), ('today', 'DATE')]

========================== Sentence 15 ===========================

 Without IVR systems to automate calls, most  contact centers would be overwhelmed by operating costs and by angry  customers facing long queue times. 

Tokens are: 
>> ['Without', 'IVR', 'systems', 'to', 'automate', 'calls', ',', 'most', 'contact', 'centers', 'would', 'be', 'overwhelmed', 'by', 'operating', 'costs', 'and', 'by', 'angry', 'customers', 'facing', 'long', 'queue', 'times', '.'] 

 UPOS tags are: 
>> [('Without', 'ADP'), ('IVR', 'NOUN'), ('systems', 'NOUN'), ('to', 'PART'), ('automate', 'VERB'), ('calls', 'NOUN'), (',', 'PUNCT'), ('most', 'ADJ'), ('contact', 'NOUN'), ('centers', 'NOUN'), ('would', 'AUX'), ('be', 'AUX'), ('overwhelmed', 'VERB'), ('by', 'ADP'), ('operating', 'NOUN'), ('costs', 'NOUN'), ('and', 'CCONJ'), ('by', 'ADP'), ('angry', 'ADJ'), ('customers', 'NOUN'), ('facing', 'VERB'), ('long', 'ADJ'), ('queue', 'NOUN'), ('times', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Without', 'IN'), ('IVR', 'NN'), ('systems', 'NNS'), ('to', 'TO'), ('automate', 'VB'), ('calls', 'NNS'), (',', ','), ('most', 'JJS'), ('contact', 'NN'), ('centers', 'NNS'), ('would', 'MD'), ('be', 'VB'), ('overwhelmed', 'VBN'), ('by', 'IN'), ('operating', 'NN'), ('costs', 'NNS'), ('and', 'CC'), ('by', 'IN'), ('angry', 'JJ'), ('customers', 'NNS'), ('facing', 'VBG'), ('long', 'JJ'), ('queue', 'NN'), ('times', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Without', 'without'), ('IVR', 'IVR'), ('systems', 'system'), ('to', 'to'), ('automate', 'automate'), ('calls', 'call'), (',', ','), ('most', 'most'), ('contact', 'contact'), ('centers', 'center'), ('would', 'would'), ('be', 'be'), ('overwhelmed', 'overwhelm'), ('by', 'by'), ('operating', 'operating'), ('costs', 'cost'), ('and', 'and'), ('by', 'by'), ('angry', 'angry'), ('customers', 'customer'), ('facing', 'face'), ('long', 'long'), ('queue', 'queue'), ('times', 'time'), ('.', '.')] 

 Dependency tags are: 
>> [(('Without', 'systems'), 'case'), (('IVR', 'systems'), 'compound'), (('systems', 'overwhelmed'), 'obl'), (('to', 'automate'), 'mark'), (('automate', 'systems'), 'acl'), (('calls', 'automate'), 'obj'), ((',', 'overwhelmed'), 'punct'), (('most', 'centers'), 'amod'), (('contact', 'centers'), 'compound'), (('centers', 'overwhelmed'), 'nsubj:pass'), (('would', 'overwhelmed'), 'aux'), (('be', 'overwhelmed'), 'aux:pass'), (('overwhelmed', 'root'), 'root'), (('by', 'costs'), 'case'), (('operating', 'costs'), 'compound'), (('costs', 'overwhelmed'), 'obl'), (('and', 'customers'), 'cc'), (('by', 'customers'), 'case'), (('angry', 'customers'), 'amod'), (('customers', 'costs'), 'conj'), (('facing', 'customers'), 'acl'), (('long', 'times'), 'amod'), (('queue', 'times'), 'compound'), (('times', 'facing'), 'obj'), (('.', 'overwhelmed'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 16 ===========================

 But by automating common customer  service requests, customers can resolve many issues quickly and agents can  focus on helping the customers who truly need them. 

Tokens are: 
>> ['But', 'by', 'automating', 'common', 'customer', 'service', 'requests', ',', 'customers', 'can', 'resolve', 'many', 'issues', 'quickly', 'and', 'agents', 'can', 'focus', 'on', 'helping', 'the', 'customers', 'who', 'truly', 'need', 'them', '.'] 

 UPOS tags are: 
>> [('But', 'CCONJ'), ('by', 'SCONJ'), ('automating', 'VERB'), ('common', 'ADJ'), ('customer', 'NOUN'), ('service', 'NOUN'), ('requests', 'NOUN'), (',', 'PUNCT'), ('customers', 'NOUN'), ('can', 'AUX'), ('resolve', 'VERB'), ('many', 'ADJ'), ('issues', 'NOUN'), ('quickly', 'ADV'), ('and', 'CCONJ'), ('agents', 'NOUN'), ('can', 'AUX'), ('focus', 'VERB'), ('on', 'SCONJ'), ('helping', 'VERB'), ('the', 'DET'), ('customers', 'NOUN'), ('who', 'PRON'), ('truly', 'ADV'), ('need', 'VERB'), ('them', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('But', 'CC'), ('by', 'IN'), ('automating', 'VBG'), ('common', 'JJ'), ('customer', 'NN'), ('service', 'NN'), ('requests', 'NNS'), (',', ','), ('customers', 'NNS'), ('can', 'MD'), ('resolve', 'VB'), ('many', 'JJ'), ('issues', 'NNS'), ('quickly', 'RB'), ('and', 'CC'), ('agents', 'NNS'), ('can', 'MD'), ('focus', 'VB'), ('on', 'IN'), ('helping', 'VBG'), ('the', 'DT'), ('customers', 'NNS'), ('who', 'WP'), ('truly', 'RB'), ('need', 'VBP'), ('them', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('But', 'but'), ('by', 'by'), ('automating', 'automate'), ('common', 'common'), ('customer', 'customer'), ('service', 'service'), ('requests', 'request'), (',', ','), ('customers', 'customer'), ('can', 'can'), ('resolve', 'resolve'), ('many', 'many'), ('issues', 'issue'), ('quickly', 'quickly'), ('and', 'and'), ('agents', 'agent'), ('can', 'can'), ('focus', 'focus'), ('on', 'on'), ('helping', 'help'), ('the', 'the'), ('customers', 'customer'), ('who', 'who'), ('truly', 'truly'), ('need', 'need'), ('them', 'they'), ('.', '.')] 

 Dependency tags are: 
>> [(('But', 'resolve'), 'cc'), (('by', 'automating'), 'mark'), (('automating', 'resolve'), 'advcl'), (('common', 'requests'), 'amod'), (('customer', 'service'), 'compound'), (('service', 'requests'), 'compound'), (('requests', 'automating'), 'obj'), ((',', 'resolve'), 'punct'), (('customers', 'resolve'), 'nsubj'), (('can', 'resolve'), 'aux'), (('resolve', 'root'), 'root'), (('many', 'issues'), 'amod'), (('issues', 'resolve'), 'obj'), (('quickly', 'resolve'), 'advmod'), (('and', 'focus'), 'cc'), (('agents', 'focus'), 'nsubj'), (('can', 'focus'), 'aux'), (('focus', 'resolve'), 'conj'), (('on', 'helping'), 'mark'), (('helping', 'focus'), 'advcl'), (('the', 'customers'), 'det'), (('customers', 'helping'), 'obj'), (('who', 'need'), 'nsubj'), (('truly', 'need'), 'advmod'), (('need', 'customers'), 'acl:relcl'), (('them', 'need'), 'obj'), (('.', 'resolve'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 17 ===========================

 Speech-enabled IVRs improve the overall automation rate of self-service  systems. 

Tokens are: 
>> ['Speech-enabled', 'IVRs', 'improve', 'the', 'overall', 'automation', 'rate', 'of', 'self', '-', 'service', 'systems', '.'] 

 UPOS tags are: 
>> [('Speech-enabled', 'ADJ'), ('IVRs', 'NOUN'), ('improve', 'VERB'), ('the', 'DET'), ('overall', 'ADJ'), ('automation', 'NOUN'), ('rate', 'NOUN'), ('of', 'ADP'), ('self', 'NOUN'), ('-', 'PUNCT'), ('service', 'NOUN'), ('systems', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Speech-enabled', 'JJ'), ('IVRs', 'NNS'), ('improve', 'VBP'), ('the', 'DT'), ('overall', 'JJ'), ('automation', 'NN'), ('rate', 'NN'), ('of', 'IN'), ('self', 'NN'), ('-', 'HYPH'), ('service', 'NN'), ('systems', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Speech-enabled', 'speech-enabled'), ('IVRs', 'ivr'), ('improve', 'improve'), ('the', 'the'), ('overall', 'overall'), ('automation', 'automation'), ('rate', 'rate'), ('of', 'of'), ('self', 'self'), ('-', '-'), ('service', 'service'), ('systems', 'system'), ('.', '.')] 

 Dependency tags are: 
>> [(('Speech-enabled', 'IVRs'), 'amod'), (('IVRs', 'improve'), 'nsubj'), (('improve', 'root'), 'root'), (('the', 'rate'), 'det'), (('overall', 'rate'), 'amod'), (('automation', 'rate'), 'compound'), (('rate', 'improve'), 'obj'), (('of', 'systems'), 'case'), (('self', 'service'), 'compound'), (('-', 'service'), 'punct'), (('service', 'systems'), 'compound'), (('systems', 'rate'), 'nmod'), (('.', 'improve'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 18 ===========================

 Unlike an IVR with only touchtone options, a speech-based self-ser- vice system can handle more complex tasks, like updating an address, and  can simplifying existing tasks to further increase automation. 

Tokens are: 
>> ['Unlike', 'an', 'IVR', 'with', 'only', 'touchtone', 'options', ',', 'a', 'speech', '-', 'based', 'self', '-', 'ser', '-', 'vice', 'system', 'can', 'handle', 'more', 'complex', 'tasks', ',', 'like', 'updating', 'an', 'address', ',', 'and', 'can', 'simplifying', 'existing', 'tasks', 'to', 'further', 'increase', 'automation', '.'] 

 UPOS tags are: 
>> [('Unlike', 'ADP'), ('an', 'DET'), ('IVR', 'NOUN'), ('with', 'ADP'), ('only', 'ADV'), ('touchtone', 'NOUN'), ('options', 'NOUN'), (',', 'PUNCT'), ('a', 'DET'), ('speech', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('self', 'NOUN'), ('-', 'PUNCT'), ('ser', 'NOUN'), ('-', 'PUNCT'), ('vice', 'NOUN'), ('system', 'NOUN'), ('can', 'AUX'), ('handle', 'VERB'), ('more', 'ADV'), ('complex', 'ADJ'), ('tasks', 'NOUN'), (',', 'PUNCT'), ('like', 'SCONJ'), ('updating', 'VERB'), ('an', 'DET'), ('address', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('can', 'AUX'), ('simplifying', 'VERB'), ('existing', 'VERB'), ('tasks', 'NOUN'), ('to', 'PART'), ('further', 'ADV'), ('increase', 'VERB'), ('automation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Unlike', 'IN'), ('an', 'DT'), ('IVR', 'NN'), ('with', 'IN'), ('only', 'RB'), ('touchtone', 'NN'), ('options', 'NNS'), (',', ','), ('a', 'DT'), ('speech', 'NN'), ('-', 'HYPH'), ('based', 'VBN'), ('self', 'NN'), ('-', 'HYPH'), ('ser', 'NN'), ('-', 'HYPH'), ('vice', 'NN'), ('system', 'NN'), ('can', 'MD'), ('handle', 'VB'), ('more', 'RBR'), ('complex', 'JJ'), ('tasks', 'NNS'), (',', ','), ('like', 'IN'), ('updating', 'VBG'), ('an', 'DT'), ('address', 'NN'), (',', ','), ('and', 'CC'), ('can', 'MD'), ('simplifying', 'VBG'), ('existing', 'VBG'), ('tasks', 'NNS'), ('to', 'TO'), ('further', 'RB'), ('increase', 'VB'), ('automation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Unlike', 'unlike'), ('an', 'a'), ('IVR', 'IVR'), ('with', 'with'), ('only', 'only'), ('touchtone', 'touchtone'), ('options', 'option'), (',', ','), ('a', 'a'), ('speech', 'speech'), ('-', '-'), ('based', 'base'), ('self', 'self'), ('-', '-'), ('ser', 'ser'), ('-', '-'), ('vice', 'vice'), ('system', 'system'), ('can', 'can'), ('handle', 'handle'), ('more', 'more'), ('complex', 'complex'), ('tasks', 'task'), (',', ','), ('like', 'like'), ('updating', 'update'), ('an', 'a'), ('address', 'address'), (',', ','), ('and', 'and'), ('can', 'can'), ('simplifying', 'simplify'), ('existing', 'exist'), ('tasks', 'task'), ('to', 'to'), ('further', 'further'), ('increase', 'increase'), ('automation', 'automation'), ('.', '.')] 

 Dependency tags are: 
>> [(('Unlike', 'IVR'), 'case'), (('an', 'IVR'), 'det'), (('IVR', 'handle'), 'obl'), (('with', 'options'), 'case'), (('only', 'options'), 'advmod'), (('touchtone', 'options'), 'compound'), (('options', 'IVR'), 'nmod'), ((',', 'handle'), 'punct'), (('a', 'system'), 'det'), (('speech', 'based'), 'compound'), (('-', 'based'), 'punct'), (('based', 'system'), 'amod'), (('self', 'based'), 'compound'), (('-', 'based'), 'punct'), (('ser', 'vice'), 'compound'), (('-', 'vice'), 'punct'), (('vice', 'system'), 'compound'), (('system', 'handle'), 'nsubj'), (('can', 'handle'), 'aux'), (('handle', 'root'), 'root'), (('more', 'complex'), 'advmod'), (('complex', 'tasks'), 'amod'), (('tasks', 'handle'), 'obj'), ((',', 'updating'), 'punct'), (('like', 'updating'), 'mark'), (('updating', 'handle'), 'advcl'), (('an', 'address'), 'det'), (('address', 'updating'), 'obj'), ((',', 'simplifying'), 'punct'), (('and', 'simplifying'), 'cc'), (('can', 'simplifying'), 'aux'), (('simplifying', 'handle'), 'conj'), (('existing', 'tasks'), 'amod'), (('tasks', 'simplifying'), 'obj'), (('to', 'increase'), 'mark'), (('further', 'increase'), 'advmod'), (('increase', 'simplifying'), 'advcl'), (('automation', 'increase'), 'obj'), (('.', 'handle'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 19 ===========================

 The resulting  increase in automation rates mean more satisfied customers and lower costs  for the contact center. 

Tokens are: 
>> ['The', 'resulting', 'increase', 'in', 'automation', 'rates', 'mean', 'more', 'satisfied', 'customers', 'and', 'lower', 'costs', 'for', 'the', 'contact', 'center', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('resulting', 'VERB'), ('increase', 'NOUN'), ('in', 'ADP'), ('automation', 'NOUN'), ('rates', 'NOUN'), ('mean', 'VERB'), ('more', 'ADV'), ('satisfied', 'ADJ'), ('customers', 'NOUN'), ('and', 'CCONJ'), ('lower', 'ADJ'), ('costs', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('contact', 'NOUN'), ('center', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('resulting', 'VBG'), ('increase', 'NN'), ('in', 'IN'), ('automation', 'NN'), ('rates', 'NNS'), ('mean', 'VBP'), ('more', 'RBR'), ('satisfied', 'JJ'), ('customers', 'NNS'), ('and', 'CC'), ('lower', 'JJR'), ('costs', 'NNS'), ('for', 'IN'), ('the', 'DT'), ('contact', 'NN'), ('center', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('resulting', 'result'), ('increase', 'increase'), ('in', 'in'), ('automation', 'automation'), ('rates', 'rate'), ('mean', 'mean'), ('more', 'more'), ('satisfied', 'satisfied'), ('customers', 'customer'), ('and', 'and'), ('lower', 'low'), ('costs', 'cost'), ('for', 'for'), ('the', 'the'), ('contact', 'contact'), ('center', 'center'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'increase'), 'det'), (('resulting', 'increase'), 'amod'), (('increase', 'mean'), 'nsubj'), (('in', 'rates'), 'case'), (('automation', 'rates'), 'compound'), (('rates', 'increase'), 'nmod'), (('mean', 'root'), 'root'), (('more', 'satisfied'), 'advmod'), (('satisfied', 'customers'), 'amod'), (('customers', 'mean'), 'obj'), (('and', 'costs'), 'cc'), (('lower', 'costs'), 'amod'), (('costs', 'customers'), 'conj'), (('for', 'center'), 'case'), (('the', 'center'), 'det'), (('contact', 'center'), 'compound'), (('center', 'costs'), 'nmod'), (('.', 'mean'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 20 ===========================

 Nevertheless, the automation rate can only be as good as the accuracy  during the caller’s entire interaction with a speech recognition system. 

Tokens are: 
>> ['Nevertheless', ',', 'the', 'automation', 'rate', 'can', 'only', 'be', 'as', 'good', 'as', 'the', 'accuracy', 'during', 'the', 'caller', '’s', 'entire', 'interaction', 'with', 'a', 'speech', 'recognition', 'system', '.'] 

 UPOS tags are: 
>> [('Nevertheless', 'ADV'), (',', 'PUNCT'), ('the', 'DET'), ('automation', 'NOUN'), ('rate', 'NOUN'), ('can', 'AUX'), ('only', 'ADV'), ('be', 'AUX'), ('as', 'ADV'), ('good', 'ADJ'), ('as', 'ADP'), ('the', 'DET'), ('accuracy', 'NOUN'), ('during', 'ADP'), ('the', 'DET'), ('caller', 'NOUN'), ('’s', 'PART'), ('entire', 'ADJ'), ('interaction', 'NOUN'), ('with', 'ADP'), ('a', 'DET'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('system', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Nevertheless', 'RB'), (',', ','), ('the', 'DT'), ('automation', 'NN'), ('rate', 'NN'), ('can', 'MD'), ('only', 'RB'), ('be', 'VB'), ('as', 'RB'), ('good', 'JJ'), ('as', 'IN'), ('the', 'DT'), ('accuracy', 'NN'), ('during', 'IN'), ('the', 'DT'), ('caller', 'NN'), ('’s', 'POS'), ('entire', 'JJ'), ('interaction', 'NN'), ('with', 'IN'), ('a', 'DT'), ('speech', 'NN'), ('recognition', 'NN'), ('system', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Nevertheless', 'nevertheless'), (',', ','), ('the', 'the'), ('automation', 'automation'), ('rate', 'rate'), ('can', 'can'), ('only', 'only'), ('be', 'be'), ('as', 'as'), ('good', 'good'), ('as', 'as'), ('the', 'the'), ('accuracy', 'accuracy'), ('during', 'during'), ('the', 'the'), ('caller', 'caller'), ('’s', "'s"), ('entire', 'entire'), ('interaction', 'interaction'), ('with', 'with'), ('a', 'a'), ('speech', 'speech'), ('recognition', 'recognition'), ('system', 'system'), ('.', '.')] 

 Dependency tags are: 
>> [(('Nevertheless', 'good'), 'advmod'), ((',', 'good'), 'punct'), (('the', 'rate'), 'det'), (('automation', 'rate'), 'compound'), (('rate', 'good'), 'nsubj'), (('can', 'good'), 'aux'), (('only', 'good'), 'advmod'), (('be', 'good'), 'cop'), (('as', 'good'), 'advmod'), (('good', 'root'), 'root'), (('as', 'accuracy'), 'case'), (('the', 'accuracy'), 'det'), (('accuracy', 'good'), 'obl'), (('during', 'interaction'), 'case'), (('the', 'caller'), 'det'), (('caller', 'interaction'), 'nmod:poss'), (('’s', 'caller'), 'case'), (('entire', 'interaction'), 'amod'), (('interaction', 'accuracy'), 'nmod'), (('with', 'system'), 'case'), (('a', 'system'), 'det'), (('speech', 'system'), 'compound'), (('recognition', 'system'), 'compound'), (('system', 'interaction'), 'nmod'), (('.', 'good'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 21 ===========================

 Several recognition factors can limit the automation rate of a speech system. 

Tokens are: 
>> ['Several', 'recognition', 'factors', 'can', 'limit', 'the', 'automation', 'rate', 'of', 'a', 'speech', 'system', '.'] 

 UPOS tags are: 
>> [('Several', 'ADJ'), ('recognition', 'NOUN'), ('factors', 'NOUN'), ('can', 'AUX'), ('limit', 'VERB'), ('the', 'DET'), ('automation', 'NOUN'), ('rate', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('speech', 'NOUN'), ('system', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Several', 'JJ'), ('recognition', 'NN'), ('factors', 'NNS'), ('can', 'MD'), ('limit', 'VB'), ('the', 'DT'), ('automation', 'NN'), ('rate', 'NN'), ('of', 'IN'), ('a', 'DT'), ('speech', 'NN'), ('system', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Several', 'several'), ('recognition', 'recognition'), ('factors', 'factor'), ('can', 'can'), ('limit', 'limit'), ('the', 'the'), ('automation', 'automation'), ('rate', 'rate'), ('of', 'of'), ('a', 'a'), ('speech', 'speech'), ('system', 'system'), ('.', '.')] 

 Dependency tags are: 
>> [(('Several', 'factors'), 'amod'), (('recognition', 'factors'), 'compound'), (('factors', 'limit'), 'nsubj'), (('can', 'limit'), 'aux'), (('limit', 'root'), 'root'), (('the', 'rate'), 'det'), (('automation', 'rate'), 'compound'), (('rate', 'limit'), 'obj'), (('of', 'system'), 'case'), (('a', 'system'), 'det'), (('speech', 'system'), 'compound'), (('system', 'rate'), 'nmod'), (('.', 'limit'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 22 ===========================

 White PaperCustomer Service Solutions Natural language understanding 

Tokens are: 
>> ['White', 'PaperCustomer', 'Service', 'Solutions', 'Natural', 'language', 'understanding'] 

 UPOS tags are: 
>> [('White', 'ADJ'), ('PaperCustomer', 'NOUN'), ('Service', 'NOUN'), ('Solutions', 'NOUN'), ('Natural', 'ADJ'), ('language', 'NOUN'), ('understanding', 'NOUN')] 

 XPOS tags are: 
>> [('White', 'JJ'), ('PaperCustomer', 'NN'), ('Service', 'NN'), ('Solutions', 'NNS'), ('Natural', 'JJ'), ('language', 'NN'), ('understanding', 'NN')] 

 Lemmas are: 
>> [('White', 'White'), ('PaperCustomer', 'papercustomer'), ('Service', 'service'), ('Solutions', 'solution'), ('Natural', 'Natural'), ('language', 'language'), ('understanding', 'understanding')] 

 Dependency tags are: 
>> [(('White', 'Service'), 'amod'), (('PaperCustomer', 'Service'), 'compound'), (('Service', 'root'), 'root'), (('Solutions', 'understanding'), 'compound'), (('Natural', 'language'), 'amod'), (('language', 'understanding'), 'compound'), (('understanding', 'Service'), 'conj')]

 Named Entities are: 
>> [('White PaperCustomer Service Solutions', 'ORG')]

========================== Sentence 23 ===========================

 2  Automation Preferences 

Tokens are: 
>> ['2', 'Automation', 'Preferences'] 

 UPOS tags are: 
>> [('2', 'NUM'), ('Automation', 'NOUN'), ('Preferences', 'NOUN')] 

 XPOS tags are: 
>> [('2', 'CD'), ('Automation', 'NN'), ('Preferences', 'NNS')] 

 Lemmas are: 
>> [('2', '2'), ('Automation', 'automation'), ('Preferences', 'preference')] 

 Dependency tags are: 
>> [(('2', 'Preferences'), 'nummod'), (('Automation', 'Preferences'), 'compound'), (('Preferences', 'root'), 'root')]

 Named Entities are: 
>> [('2', 'CARDINAL')]

========================== Sentence 24 ===========================

 “Which of the example systems do you find most appealing?” 

Tokens are: 
>> ['“', 'Which', 'of', 'the', 'example', 'systems', 'do', 'you', 'find', 'most', 'appealing', '?', '”'] 

 UPOS tags are: 
>> [('“', 'PUNCT'), ('Which', 'PRON'), ('of', 'ADP'), ('the', 'DET'), ('example', 'NOUN'), ('systems', 'NOUN'), ('do', 'AUX'), ('you', 'PRON'), ('find', 'VERB'), ('most', 'ADV'), ('appealing', 'ADJ'), ('?', 'PUNCT'), ('”', 'PUNCT')] 

 XPOS tags are: 
>> [('“', '``'), ('Which', 'WDT'), ('of', 'IN'), ('the', 'DT'), ('example', 'NN'), ('systems', 'NNS'), ('do', 'VBP'), ('you', 'PRP'), ('find', 'VB'), ('most', 'RBS'), ('appealing', 'JJ'), ('?', '.'), ('”', "''")] 

 Lemmas are: 
>> [('“', "''"), ('Which', 'which'), ('of', 'of'), ('the', 'the'), ('example', 'example'), ('systems', 'system'), ('do', 'do'), ('you', 'you'), ('find', 'find'), ('most', 'most'), ('appealing', 'appealing'), ('?', '?'), ('”', "''")] 

 Dependency tags are: 
>> [(('“', 'find'), 'punct'), (('Which', 'find'), 'obj'), (('of', 'systems'), 'case'), (('the', 'systems'), 'det'), (('example', 'systems'), 'compound'), (('systems', 'Which'), 'nmod'), (('do', 'find'), 'aux'), (('you', 'find'), 'nsubj'), (('find', 'root'), 'root'), (('most', 'appealing'), 'advmod'), (('appealing', 'find'), 'xcomp'), (('?', 'find'), 'punct'), (('”', 'find'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 25 ===========================

 Consumers found the  speech applications  overwhelmingly more appealing. 

Tokens are: 
>> ['Consumers', 'found', 'the', 'speech', 'applications', 'overwhelmingly', 'more', 'appealing', '.'] 

 UPOS tags are: 
>> [('Consumers', 'NOUN'), ('found', 'VERB'), ('the', 'DET'), ('speech', 'NOUN'), ('applications', 'NOUN'), ('overwhelmingly', 'ADV'), ('more', 'ADV'), ('appealing', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Consumers', 'NNS'), ('found', 'VBD'), ('the', 'DT'), ('speech', 'NN'), ('applications', 'NNS'), ('overwhelmingly', 'RB'), ('more', 'RBR'), ('appealing', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('Consumers', 'Consumer'), ('found', 'find'), ('the', 'the'), ('speech', 'speech'), ('applications', 'application'), ('overwhelmingly', 'overwhelmingly'), ('more', 'more'), ('appealing', 'appealing'), ('.', '.')] 

 Dependency tags are: 
>> [(('Consumers', 'found'), 'nsubj'), (('found', 'root'), 'root'), (('the', 'applications'), 'det'), (('speech', 'applications'), 'compound'), (('applications', 'found'), 'obj'), (('overwhelmingly', 'more'), 'advmod'), (('more', 'appealing'), 'advmod'), (('appealing', 'found'), 'xcomp'), (('.', 'found'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 26 ===========================

 Source: Harris Interactive  41% 

Tokens are: 
>> ['Source', ':', 'Harris', 'Interactive', '41', '%'] 

 UPOS tags are: 
>> [('Source', 'NOUN'), (':', 'PUNCT'), ('Harris', 'PROPN'), ('Interactive', 'PROPN'), ('41', 'NUM'), ('%', 'SYM')] 

 XPOS tags are: 
>> [('Source', 'NN'), (':', ':'), ('Harris', 'NNP'), ('Interactive', 'NNP'), ('41', 'CD'), ('%', 'NN')] 

 Lemmas are: 
>> [('Source', 'source'), (':', ':'), ('Harris', 'Harris'), ('Interactive', 'Interactive'), ('41', '41'), ('%', '%')] 

 Dependency tags are: 
>> [(('Source', 'root'), 'root'), ((':', 'Source'), 'punct'), (('Harris', 'Interactive'), 'compound'), (('Interactive', 'Source'), 'appos'), (('41', '%'), 'nummod'), (('%', 'Interactive'), 'appos')]

 Named Entities are: 
>> [('Harris Interactive', 'ORG'), ('41%', 'PERCENT')]

========================== Sentence 27 ===========================

 Natural Language  38%Directed dialog  20% 

Tokens are: 
>> ['Natural', 'Language', '38', '%', 'Directed', 'dialog', '20', '%'] 

 UPOS tags are: 
>> [('Natural', 'ADJ'), ('Language', 'NOUN'), ('38', 'NUM'), ('%', 'SYM'), ('Directed', 'VERB'), ('dialog', 'NOUN'), ('20', 'NUM'), ('%', 'SYM')] 

 XPOS tags are: 
>> [('Natural', 'JJ'), ('Language', 'NN'), ('38', 'CD'), ('%', 'NN'), ('Directed', 'VBN'), ('dialog', 'NN'), ('20', 'CD'), ('%', 'NN')] 

 Lemmas are: 
>> [('Natural', 'Natural'), ('Language', 'language'), ('38', '38'), ('%', '%'), ('Directed', 'direct'), ('dialog', 'dialog'), ('20', '20'), ('%', '%')] 

 Dependency tags are: 
>> [(('Natural', 'Language'), 'amod'), (('Language', 'root'), 'root'), (('38', '%'), 'nummod'), (('%', 'Directed'), 'obl:npmod'), (('Directed', 'dialog'), 'amod'), (('dialog', 'Language'), 'list'), (('20', '%'), 'nummod'), (('%', 'dialog'), 'nmod:npmod')]

 Named Entities are: 
>> [('38%', 'PERCENT'), ('20%', 'PERCENT')]

========================== Sentence 28 ===========================

 Touch tone    Noisy backgrounds, confused callers, very heavy accents, and mumbled  responses can make it hard for a system to complete a call. 

Tokens are: 
>> ['Touch', 'tone', 'Noisy', 'backgrounds', ',', 'confused', 'callers', ',', 'very', 'heavy', 'accents', ',', 'and', 'mumbled', 'responses', 'can', 'make', 'it', 'hard', 'for', 'a', 'system', 'to', 'complete', 'a', 'call', '.'] 

 UPOS tags are: 
>> [('Touch', 'VERB'), ('tone', 'NOUN'), ('Noisy', 'ADJ'), ('backgrounds', 'NOUN'), (',', 'PUNCT'), ('confused', 'ADJ'), ('callers', 'NOUN'), (',', 'PUNCT'), ('very', 'ADV'), ('heavy', 'ADJ'), ('accents', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('mumbled', 'VERB'), ('responses', 'NOUN'), ('can', 'AUX'), ('make', 'VERB'), ('it', 'PRON'), ('hard', 'ADV'), ('for', 'ADP'), ('a', 'DET'), ('system', 'NOUN'), ('to', 'PART'), ('complete', 'VERB'), ('a', 'DET'), ('call', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Touch', 'VB'), ('tone', 'NN'), ('Noisy', 'JJ'), ('backgrounds', 'NNS'), (',', ','), ('confused', 'JJ'), ('callers', 'NNS'), (',', ','), ('very', 'RB'), ('heavy', 'JJ'), ('accents', 'NNS'), (',', ','), ('and', 'CC'), ('mumbled', 'VBN'), ('responses', 'NNS'), ('can', 'MD'), ('make', 'VB'), ('it', 'PRP'), ('hard', 'RB'), ('for', 'IN'), ('a', 'DT'), ('system', 'NN'), ('to', 'TO'), ('complete', 'VB'), ('a', 'DT'), ('call', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Touch', 'touch'), ('tone', 'tone'), ('Noisy', 'noisy'), ('backgrounds', 'background'), (',', ','), ('confused', 'confused'), ('callers', 'caller'), (',', ','), ('very', 'very'), ('heavy', 'heavy'), ('accents', 'accent'), (',', ','), ('and', 'and'), ('mumbled', 'mumble'), ('responses', 'response'), ('can', 'can'), ('make', 'make'), ('it', 'it'), ('hard', 'hard'), ('for', 'for'), ('a', 'a'), ('system', 'system'), ('to', 'to'), ('complete', 'complete'), ('a', 'a'), ('call', 'call'), ('.', '.')] 

 Dependency tags are: 
>> [(('Touch', 'root'), 'root'), (('tone', 'backgrounds'), 'compound'), (('Noisy', 'backgrounds'), 'amod'), (('backgrounds', 'Touch'), 'obj'), ((',', 'callers'), 'punct'), (('confused', 'callers'), 'amod'), (('callers', 'backgrounds'), 'conj'), ((',', 'accents'), 'punct'), (('very', 'heavy'), 'advmod'), (('heavy', 'accents'), 'amod'), (('accents', 'backgrounds'), 'conj'), ((',', 'make'), 'punct'), (('and', 'make'), 'cc'), (('mumbled', 'responses'), 'amod'), (('responses', 'make'), 'nsubj'), (('can', 'make'), 'aux'), (('make', 'Touch'), 'conj'), (('it', 'make'), 'obj'), (('hard', 'make'), 'advmod'), (('for', 'system'), 'case'), (('a', 'system'), 'det'), (('system', 'make'), 'obl'), (('to', 'complete'), 'mark'), (('complete', 'system'), 'acl'), (('a', 'call'), 'det'), (('call', 'complete'), 'obj'), (('.', 'Touch'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 29 ===========================

 Of course, those  factors can affect the ability of a live agent to complete those calls as well. 

Tokens are: 
>> ['Of', 'course', ',', 'those', 'factors', 'can', 'affect', 'the', 'ability', 'of', 'a', 'live', 'agent', 'to', 'complete', 'those', 'calls', 'as', 'well', '.'] 

 UPOS tags are: 
>> [('Of', 'ADP'), ('course', 'NOUN'), (',', 'PUNCT'), ('those', 'DET'), ('factors', 'NOUN'), ('can', 'AUX'), ('affect', 'VERB'), ('the', 'DET'), ('ability', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('live', 'ADJ'), ('agent', 'NOUN'), ('to', 'PART'), ('complete', 'VERB'), ('those', 'DET'), ('calls', 'NOUN'), ('as', 'ADV'), ('well', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Of', 'IN'), ('course', 'NN'), (',', ','), ('those', 'DT'), ('factors', 'NNS'), ('can', 'MD'), ('affect', 'VB'), ('the', 'DT'), ('ability', 'NN'), ('of', 'IN'), ('a', 'DT'), ('live', 'JJ'), ('agent', 'NN'), ('to', 'TO'), ('complete', 'VB'), ('those', 'DT'), ('calls', 'NNS'), ('as', 'RB'), ('well', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('Of', 'of'), ('course', 'course'), (',', ','), ('those', 'that'), ('factors', 'factor'), ('can', 'can'), ('affect', 'affect'), ('the', 'the'), ('ability', 'ability'), ('of', 'of'), ('a', 'a'), ('live', 'live'), ('agent', 'agent'), ('to', 'to'), ('complete', 'complete'), ('those', 'that'), ('calls', 'call'), ('as', 'as'), ('well', 'well'), ('.', '.')] 

 Dependency tags are: 
>> [(('Of', 'affect'), 'advmod'), (('course', 'Of'), 'fixed'), ((',', 'affect'), 'punct'), (('those', 'factors'), 'det'), (('factors', 'affect'), 'nsubj'), (('can', 'affect'), 'aux'), (('affect', 'root'), 'root'), (('the', 'ability'), 'det'), (('ability', 'affect'), 'obj'), (('of', 'agent'), 'case'), (('a', 'agent'), 'det'), (('live', 'agent'), 'amod'), (('agent', 'ability'), 'nmod'), (('to', 'complete'), 'mark'), (('complete', 'affect'), 'advcl'), (('those', 'calls'), 'det'), (('calls', 'complete'), 'obj'), (('as', 'complete'), 'advmod'), (('well', 'as'), 'fixed'), (('.', 'affect'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 30 ===========================

 And despite much advancement in technology, it is still possible for a speech  recognition engine to simply make a mistake. 

Tokens are: 
>> ['And', 'despite', 'much', 'advancement', 'in', 'technology', ',', 'it', 'is', 'still', 'possible', 'for', 'a', 'speech', 'recognition', 'engine', 'to', 'simply', 'make', 'a', 'mistake', '.'] 

 UPOS tags are: 
>> [('And', 'CCONJ'), ('despite', 'ADP'), ('much', 'ADJ'), ('advancement', 'NOUN'), ('in', 'ADP'), ('technology', 'NOUN'), (',', 'PUNCT'), ('it', 'PRON'), ('is', 'AUX'), ('still', 'ADV'), ('possible', 'ADJ'), ('for', 'ADP'), ('a', 'DET'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('engine', 'NOUN'), ('to', 'PART'), ('simply', 'ADV'), ('make', 'VERB'), ('a', 'DET'), ('mistake', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('And', 'CC'), ('despite', 'IN'), ('much', 'JJ'), ('advancement', 'NN'), ('in', 'IN'), ('technology', 'NN'), (',', ','), ('it', 'PRP'), ('is', 'VBZ'), ('still', 'RB'), ('possible', 'JJ'), ('for', 'IN'), ('a', 'DT'), ('speech', 'NN'), ('recognition', 'NN'), ('engine', 'NN'), ('to', 'TO'), ('simply', 'RB'), ('make', 'VB'), ('a', 'DT'), ('mistake', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('And', 'and'), ('despite', 'despite'), ('much', 'much'), ('advancement', 'advancement'), ('in', 'in'), ('technology', 'technology'), (',', ','), ('it', 'it'), ('is', 'be'), ('still', 'still'), ('possible', 'possible'), ('for', 'for'), ('a', 'a'), ('speech', 'speech'), ('recognition', 'recognition'), ('engine', 'engine'), ('to', 'to'), ('simply', 'simply'), ('make', 'make'), ('a', 'a'), ('mistake', 'mistake'), ('.', '.')] 

 Dependency tags are: 
>> [(('And', 'possible'), 'cc'), (('despite', 'advancement'), 'case'), (('much', 'advancement'), 'amod'), (('advancement', 'possible'), 'obl'), (('in', 'technology'), 'case'), (('technology', 'advancement'), 'nmod'), ((',', 'possible'), 'punct'), (('it', 'possible'), 'expl'), (('is', 'possible'), 'cop'), (('still', 'possible'), 'advmod'), (('possible', 'root'), 'root'), (('for', 'engine'), 'case'), (('a', 'engine'), 'det'), (('speech', 'recognition'), 'compound'), (('recognition', 'engine'), 'compound'), (('engine', 'possible'), 'obl'), (('to', 'make'), 'mark'), (('simply', 'make'), 'advmod'), (('make', 'possible'), 'csubj'), (('a', 'mistake'), 'det'), (('mistake', 'make'), 'obj'), (('.', 'possible'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 31 ===========================

 Learning to speak customer-ese 

Tokens are: 
>> ['Learning', 'to', 'speak', 'customer', '-ese'] 

 UPOS tags are: 
>> [('Learning', 'VERB'), ('to', 'PART'), ('speak', 'VERB'), ('customer', 'NOUN'), ('-ese', 'PUNCT')] 

 XPOS tags are: 
>> [('Learning', 'VBG'), ('to', 'TO'), ('speak', 'VB'), ('customer', 'NN'), ('-ese', '.')] 

 Lemmas are: 
>> [('Learning', 'learning'), ('to', 'to'), ('speak', 'speak'), ('customer', 'customer'), ('-ese', '-ese')] 

 Dependency tags are: 
>> [(('Learning', 'root'), 'root'), (('to', 'speak'), 'mark'), (('speak', 'Learning'), 'advcl'), (('customer', 'speak'), 'obj'), (('-ese', 'Learning'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 32 ===========================

 As all contact center agents know, callers truly believe they are speaking in  a clear and obvious manner when they are explaining their concerns. 

Tokens are: 
>> ['As', 'all', 'contact', 'center', 'agents', 'know', ',', 'callers', 'truly', 'believe', 'they', 'are', 'speaking', 'in', 'a', 'clear', 'and', 'obvious', 'manner', 'when', 'they', 'are', 'explaining', 'their', 'concerns', '.'] 

 UPOS tags are: 
>> [('As', 'SCONJ'), ('all', 'DET'), ('contact', 'NOUN'), ('center', 'NOUN'), ('agents', 'NOUN'), ('know', 'VERB'), (',', 'PUNCT'), ('callers', 'NOUN'), ('truly', 'ADV'), ('believe', 'VERB'), ('they', 'PRON'), ('are', 'AUX'), ('speaking', 'VERB'), ('in', 'ADP'), ('a', 'DET'), ('clear', 'ADJ'), ('and', 'CCONJ'), ('obvious', 'ADJ'), ('manner', 'NOUN'), ('when', 'SCONJ'), ('they', 'PRON'), ('are', 'AUX'), ('explaining', 'VERB'), ('their', 'PRON'), ('concerns', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('As', 'IN'), ('all', 'DT'), ('contact', 'NN'), ('center', 'NN'), ('agents', 'NNS'), ('know', 'VBP'), (',', ','), ('callers', 'NNS'), ('truly', 'RB'), ('believe', 'VBP'), ('they', 'PRP'), ('are', 'VBP'), ('speaking', 'VBG'), ('in', 'IN'), ('a', 'DT'), ('clear', 'JJ'), ('and', 'CC'), ('obvious', 'JJ'), ('manner', 'NN'), ('when', 'WRB'), ('they', 'PRP'), ('are', 'VBP'), ('explaining', 'VBG'), ('their', 'PRP$'), ('concerns', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('As', 'as'), ('all', 'all'), ('contact', 'contact'), ('center', 'center'), ('agents', 'agent'), ('know', 'know'), (',', ','), ('callers', 'caller'), ('truly', 'truly'), ('believe', 'believe'), ('they', 'they'), ('are', 'be'), ('speaking', 'speak'), ('in', 'in'), ('a', 'a'), ('clear', 'clear'), ('and', 'and'), ('obvious', 'obvious'), ('manner', 'manner'), ('when', 'when'), ('they', 'they'), ('are', 'be'), ('explaining', 'explain'), ('their', 'they'), ('concerns', 'concern'), ('.', '.')] 

 Dependency tags are: 
>> [(('As', 'know'), 'mark'), (('all', 'agents'), 'det'), (('contact', 'center'), 'compound'), (('center', 'agents'), 'compound'), (('agents', 'know'), 'nsubj'), (('know', 'believe'), 'advcl'), ((',', 'believe'), 'punct'), (('callers', 'believe'), 'nsubj'), (('truly', 'believe'), 'advmod'), (('believe', 'root'), 'root'), (('they', 'speaking'), 'nsubj'), (('are', 'speaking'), 'aux'), (('speaking', 'believe'), 'ccomp'), (('in', 'manner'), 'case'), (('a', 'manner'), 'det'), (('clear', 'manner'), 'amod'), (('and', 'obvious'), 'cc'), (('obvious', 'clear'), 'conj'), (('manner', 'speaking'), 'obl'), (('when', 'explaining'), 'mark'), (('they', 'explaining'), 'nsubj'), (('are', 'explaining'), 'aux'), (('explaining', 'speaking'), 'advcl'), (('their', 'concerns'), 'nmod:poss'), (('concerns', 'explaining'), 'obj'), (('.', 'believe'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 33 ===========================

 In fact,  each caller is really speaking in ‘customer-ese’, their own personal dialect  that agents and IVR systems need to decode. 

Tokens are: 
>> ['In', 'fact', ',', 'each', 'caller', 'is', 'really', 'speaking', 'in', '‘', 'customer', '-', 'ese', '’', ',', 'their', 'own', 'personal', 'dialect', 'that', 'agents', 'and', 'IVR', 'systems', 'need', 'to', 'decode', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('fact', 'NOUN'), (',', 'PUNCT'), ('each', 'DET'), ('caller', 'NOUN'), ('is', 'AUX'), ('really', 'ADV'), ('speaking', 'VERB'), ('in', 'ADP'), ('‘', 'PUNCT'), ('customer', 'NOUN'), ('-', 'PUNCT'), ('ese', 'X'), ('’', 'PUNCT'), (',', 'PUNCT'), ('their', 'PRON'), ('own', 'ADJ'), ('personal', 'ADJ'), ('dialect', 'NOUN'), ('that', 'PRON'), ('agents', 'NOUN'), ('and', 'CCONJ'), ('IVR', 'NOUN'), ('systems', 'NOUN'), ('need', 'VERB'), ('to', 'PART'), ('decode', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('fact', 'NN'), (',', ','), ('each', 'DT'), ('caller', 'NN'), ('is', 'VBZ'), ('really', 'RB'), ('speaking', 'VBG'), ('in', 'IN'), ('‘', '``'), ('customer', 'NN'), ('-', 'HYPH'), ('ese', 'FW'), ('’', "''"), (',', ','), ('their', 'PRP$'), ('own', 'JJ'), ('personal', 'JJ'), ('dialect', 'NN'), ('that', 'WDT'), ('agents', 'NNS'), ('and', 'CC'), ('IVR', 'NN'), ('systems', 'NNS'), ('need', 'VBP'), ('to', 'TO'), ('decode', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('fact', 'fact'), (',', ','), ('each', 'each'), ('caller', 'caller'), ('is', 'be'), ('really', 'really'), ('speaking', 'speak'), ('in', 'in'), ('‘', "'"), ('customer', 'customer'), ('-', '-'), ('ese', 'ese'), ('’', "'"), (',', ','), ('their', 'they'), ('own', 'own'), ('personal', 'personal'), ('dialect', 'dialect'), ('that', 'that'), ('agents', 'agent'), ('and', 'and'), ('IVR', 'IVR'), ('systems', 'system'), ('need', 'need'), ('to', 'to'), ('decode', 'decode'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'fact'), 'case'), (('fact', 'speaking'), 'obl'), ((',', 'speaking'), 'punct'), (('each', 'caller'), 'det'), (('caller', 'speaking'), 'nsubj'), (('is', 'speaking'), 'aux'), (('really', 'speaking'), 'advmod'), (('speaking', 'root'), 'root'), (('in', 'ese'), 'case'), (('‘', 'ese'), 'punct'), (('customer', 'ese'), 'compound'), (('-', 'ese'), 'punct'), (('ese', 'speaking'), 'obl'), (('’', 'ese'), 'punct'), ((',', 'dialect'), 'punct'), (('their', 'dialect'), 'nmod:poss'), (('own', 'dialect'), 'amod'), (('personal', 'dialect'), 'amod'), (('dialect', 'speaking'), 'parataxis'), (('that', 'need'), 'obj'), (('agents', 'need'), 'nsubj'), (('and', 'systems'), 'cc'), (('IVR', 'systems'), 'compound'), (('systems', 'agents'), 'conj'), (('need', 'dialect'), 'acl:relcl'), (('to', 'decode'), 'mark'), (('decode', 'need'), 'xcomp'), (('.', 'speaking'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 34 ===========================

 This interpretation process  is very similar to learning a new foreign language. 

Tokens are: 
>> ['This', 'interpretation', 'process', 'is', 'very', 'similar', 'to', 'learning', 'a', 'new', 'foreign', 'language', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('interpretation', 'NOUN'), ('process', 'NOUN'), ('is', 'AUX'), ('very', 'ADV'), ('similar', 'ADJ'), ('to', 'SCONJ'), ('learning', 'VERB'), ('a', 'DET'), ('new', 'ADJ'), ('foreign', 'ADJ'), ('language', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('interpretation', 'NN'), ('process', 'NN'), ('is', 'VBZ'), ('very', 'RB'), ('similar', 'JJ'), ('to', 'IN'), ('learning', 'VBG'), ('a', 'DT'), ('new', 'JJ'), ('foreign', 'JJ'), ('language', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('interpretation', 'interpretation'), ('process', 'process'), ('is', 'be'), ('very', 'very'), ('similar', 'similar'), ('to', 'to'), ('learning', 'learn'), ('a', 'a'), ('new', 'new'), ('foreign', 'foreign'), ('language', 'language'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'process'), 'det'), (('interpretation', 'process'), 'compound'), (('process', 'similar'), 'nsubj'), (('is', 'similar'), 'cop'), (('very', 'similar'), 'advmod'), (('similar', 'root'), 'root'), (('to', 'learning'), 'mark'), (('learning', 'similar'), 'advcl'), (('a', 'language'), 'det'), (('new', 'language'), 'amod'), (('foreign', 'language'), 'amod'), (('language', 'learning'), 'obj'), (('.', 'similar'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 35 ===========================

 To address the challenge  many speech recognition systems have a list of acceptable phrases, known  as the grammar, that the system is programmed to recognize at any given  time. 

Tokens are: 
>> ['To', 'address', 'the', 'challenge', 'many', 'speech', 'recognition', 'systems', 'have', 'a', 'list', 'of', 'acceptable', 'phrases', ',', 'known', 'as', 'the', 'grammar', ',', 'that', 'the', 'system', 'is', 'programmed', 'to', 'recognize', 'at', 'any', 'given', 'time', '.'] 

 UPOS tags are: 
>> [('To', 'PART'), ('address', 'VERB'), ('the', 'DET'), ('challenge', 'NOUN'), ('many', 'ADJ'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('systems', 'NOUN'), ('have', 'VERB'), ('a', 'DET'), ('list', 'NOUN'), ('of', 'ADP'), ('acceptable', 'ADJ'), ('phrases', 'NOUN'), (',', 'PUNCT'), ('known', 'VERB'), ('as', 'ADP'), ('the', 'DET'), ('grammar', 'NOUN'), (',', 'PUNCT'), ('that', 'SCONJ'), ('the', 'DET'), ('system', 'NOUN'), ('is', 'AUX'), ('programmed', 'VERB'), ('to', 'PART'), ('recognize', 'VERB'), ('at', 'ADP'), ('any', 'DET'), ('given', 'VERB'), ('time', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('To', 'TO'), ('address', 'VB'), ('the', 'DT'), ('challenge', 'NN'), ('many', 'JJ'), ('speech', 'NN'), ('recognition', 'NN'), ('systems', 'NNS'), ('have', 'VBP'), ('a', 'DT'), ('list', 'NN'), ('of', 'IN'), ('acceptable', 'JJ'), ('phrases', 'NNS'), (',', ','), ('known', 'VBN'), ('as', 'IN'), ('the', 'DT'), ('grammar', 'NN'), (',', ','), ('that', 'IN'), ('the', 'DT'), ('system', 'NN'), ('is', 'VBZ'), ('programmed', 'VBN'), ('to', 'TO'), ('recognize', 'VB'), ('at', 'IN'), ('any', 'DT'), ('given', 'VBN'), ('time', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('To', 'to'), ('address', 'address'), ('the', 'the'), ('challenge', 'challenge'), ('many', 'many'), ('speech', 'speech'), ('recognition', 'recognition'), ('systems', 'system'), ('have', 'have'), ('a', 'a'), ('list', 'list'), ('of', 'of'), ('acceptable', 'acceptable'), ('phrases', 'phrase'), (',', ','), ('known', 'know'), ('as', 'as'), ('the', 'the'), ('grammar', 'grammar'), (',', ','), ('that', 'that'), ('the', 'the'), ('system', 'system'), ('is', 'be'), ('programmed', 'program'), ('to', 'to'), ('recognize', 'recognize'), ('at', 'at'), ('any', 'any'), ('given', 'give'), ('time', 'time'), ('.', '.')] 

 Dependency tags are: 
>> [(('To', 'address'), 'mark'), (('address', 'have'), 'advcl'), (('the', 'challenge'), 'det'), (('challenge', 'address'), 'obj'), (('many', 'systems'), 'amod'), (('speech', 'recognition'), 'compound'), (('recognition', 'systems'), 'compound'), (('systems', 'have'), 'nsubj'), (('have', 'root'), 'root'), (('a', 'list'), 'det'), (('list', 'have'), 'obj'), (('of', 'phrases'), 'case'), (('acceptable', 'phrases'), 'amod'), (('phrases', 'list'), 'nmod'), ((',', 'known'), 'punct'), (('known', 'phrases'), 'acl'), (('as', 'grammar'), 'case'), (('the', 'grammar'), 'det'), (('grammar', 'known'), 'obl'), ((',', 'programmed'), 'punct'), (('that', 'programmed'), 'mark'), (('the', 'system'), 'det'), (('system', 'programmed'), 'nsubj:pass'), (('is', 'programmed'), 'aux:pass'), (('programmed', 'have'), 'advcl'), (('to', 'recognize'), 'mark'), (('recognize', 'programmed'), 'xcomp'), (('at', 'time'), 'case'), (('any', 'time'), 'det'), (('given', 'time'), 'amod'), (('time', 'recognize'), 'obl'), (('.', 'have'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 36 ===========================

 Grammars ensure that a speech recognition engine knows that the  phrase “new to speech” is not a “nudist beach”, and that “agent,” “operator,”  and “I want to speak to someone” all direct the caller to a live person. 

Tokens are: 
>> ['Grammars', 'ensure', 'that', 'a', 'speech', 'recognition', 'engine', 'knows', 'that', 'the', 'phrase', '“', 'new', 'to', 'speech', '”', 'is', 'not', 'a', '“', 'nudist', 'beach', '”', ',', 'and', 'that', '“', 'agent', ',', '”', '“', 'operator', ',', '”', 'and', '“', 'I', 'want', 'to', 'speak', 'to', 'someone', '”', 'all', 'direct', 'the', 'caller', 'to', 'a', 'live', 'person', '.'] 

 UPOS tags are: 
>> [('Grammars', 'NOUN'), ('ensure', 'VERB'), ('that', 'SCONJ'), ('a', 'DET'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('engine', 'NOUN'), ('knows', 'VERB'), ('that', 'SCONJ'), ('the', 'DET'), ('phrase', 'NOUN'), ('“', 'PUNCT'), ('new', 'ADJ'), ('to', 'ADP'), ('speech', 'NOUN'), ('”', 'PUNCT'), ('is', 'AUX'), ('not', 'PART'), ('a', 'DET'), ('“', 'PUNCT'), ('nudist', 'ADJ'), ('beach', 'NOUN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('and', 'CCONJ'), ('that', 'DET'), ('“', 'PUNCT'), ('agent', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('“', 'PUNCT'), ('operator', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('and', 'CCONJ'), ('“', 'PUNCT'), ('I', 'PRON'), ('want', 'VERB'), ('to', 'PART'), ('speak', 'VERB'), ('to', 'ADP'), ('someone', 'PRON'), ('”', 'PUNCT'), ('all', 'DET'), ('direct', 'VERB'), ('the', 'DET'), ('caller', 'NOUN'), ('to', 'ADP'), ('a', 'DET'), ('live', 'ADJ'), ('person', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Grammars', 'NNS'), ('ensure', 'VBP'), ('that', 'IN'), ('a', 'DT'), ('speech', 'NN'), ('recognition', 'NN'), ('engine', 'NN'), ('knows', 'VBZ'), ('that', 'IN'), ('the', 'DT'), ('phrase', 'NN'), ('“', '``'), ('new', 'JJ'), ('to', 'IN'), ('speech', 'NN'), ('”', "''"), ('is', 'VBZ'), ('not', 'RB'), ('a', 'DT'), ('“', '``'), ('nudist', 'JJ'), ('beach', 'NN'), ('”', "''"), (',', ','), ('and', 'CC'), ('that', 'DT'), ('“', '``'), ('agent', 'NN'), (',', ','), ('”', "''"), ('“', '``'), ('operator', 'NN'), (',', ','), ('”', "''"), ('and', 'CC'), ('“', '``'), ('I', 'PRP'), ('want', 'VBP'), ('to', 'TO'), ('speak', 'VB'), ('to', 'IN'), ('someone', 'NN'), ('”', "''"), ('all', 'DT'), ('direct', 'VB'), ('the', 'DT'), ('caller', 'NN'), ('to', 'IN'), ('a', 'DT'), ('live', 'JJ'), ('person', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Grammars', 'grammar'), ('ensure', 'ensure'), ('that', 'that'), ('a', 'a'), ('speech', 'speech'), ('recognition', 'recognition'), ('engine', 'engine'), ('knows', 'know'), ('that', 'that'), ('the', 'the'), ('phrase', 'phrase'), ('“', "''"), ('new', 'new'), ('to', 'to'), ('speech', 'speech'), ('”', "''"), ('is', 'be'), ('not', 'not'), ('a', 'a'), ('“', "''"), ('nudist', 'nudist'), ('beach', 'beach'), ('”', "''"), (',', ','), ('and', 'and'), ('that', 'that'), ('“', "''"), ('agent', 'agent'), (',', ','), ('”', "''"), ('“', "''"), ('operator', 'operator'), (',', ','), ('”', "''"), ('and', 'and'), ('“', "''"), ('I', 'I'), ('want', 'want'), ('to', 'to'), ('speak', 'speak'), ('to', 'to'), ('someone', 'someone'), ('”', "''"), ('all', 'all'), ('direct', 'direct'), ('the', 'the'), ('caller', 'caller'), ('to', 'to'), ('a', 'a'), ('live', 'live'), ('person', 'person'), ('.', '.')] 

 Dependency tags are: 
>> [(('Grammars', 'ensure'), 'nsubj'), (('ensure', 'root'), 'root'), (('that', 'knows'), 'mark'), (('a', 'engine'), 'det'), (('speech', 'recognition'), 'compound'), (('recognition', 'engine'), 'compound'), (('engine', 'knows'), 'nsubj'), (('knows', 'ensure'), 'ccomp'), (('that', 'beach'), 'mark'), (('the', 'phrase'), 'det'), (('phrase', 'beach'), 'nsubj'), (('“', 'new'), 'punct'), (('new', 'phrase'), 'amod'), (('to', 'speech'), 'case'), (('speech', 'new'), 'obl'), (('”', 'new'), 'punct'), (('is', 'beach'), 'cop'), (('not', 'beach'), 'advmod'), (('a', 'beach'), 'det'), (('“', 'beach'), 'punct'), (('nudist', 'beach'), 'amod'), (('beach', 'knows'), 'ccomp'), (('”', 'beach'), 'punct'), ((',', 'agent'), 'punct'), (('and', 'agent'), 'cc'), (('that', 'agent'), 'det'), (('“', 'agent'), 'punct'), (('agent', 'beach'), 'conj'), ((',', 'agent'), 'punct'), (('”', 'agent'), 'punct'), (('“', 'operator'), 'punct'), (('operator', 'agent'), 'appos'), ((',', 'operator'), 'punct'), (('”', 'operator'), 'punct'), (('and', 'want'), 'cc'), (('“', 'want'), 'punct'), (('I', 'want'), 'nsubj'), (('want', 'operator'), 'conj'), (('to', 'speak'), 'mark'), (('speak', 'want'), 'xcomp'), (('to', 'someone'), 'case'), (('someone', 'speak'), 'obl'), (('”', 'want'), 'punct'), (('all', 'direct'), 'obl:npmod'), (('direct', 'ensure'), 'parataxis'), (('the', 'caller'), 'det'), (('caller', 'direct'), 'obj'), (('to', 'person'), 'case'), (('a', 'person'), 'det'), (('live', 'person'), 'amod'), (('person', 'direct'), 'obl'), (('.', 'direct'), 'punct')]

 Named Entities are: 
>> [('Grammars', 'PERSON')]

========================== Sentence 37 ===========================

 If implementing a speech-enabled self-service system is like teaching a  foreign language, then a grammar is like a translation book, mapping com- mon phrases to their meaning. 

Tokens are: 
>> ['If', 'implementing', 'a', 'speech', '-', 'enabled', 'self', '-', 'service', 'system', 'is', 'like', 'teaching', 'a', 'foreign', 'language', ',', 'then', 'a', 'grammar', 'is', 'like', 'a', 'translation', 'book', ',', 'mapping', 'com', '-', 'mon', 'phrases', 'to', 'their', 'meaning', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('implementing', 'VERB'), ('a', 'DET'), ('speech', 'NOUN'), ('-', 'PUNCT'), ('enabled', 'VERB'), ('self', 'NOUN'), ('-', 'PUNCT'), ('service', 'NOUN'), ('system', 'NOUN'), ('is', 'AUX'), ('like', 'SCONJ'), ('teaching', 'VERB'), ('a', 'DET'), ('foreign', 'ADJ'), ('language', 'NOUN'), (',', 'PUNCT'), ('then', 'ADV'), ('a', 'DET'), ('grammar', 'NOUN'), ('is', 'AUX'), ('like', 'ADP'), ('a', 'DET'), ('translation', 'NOUN'), ('book', 'NOUN'), (',', 'PUNCT'), ('mapping', 'VERB'), ('com', 'NOUN'), ('-', 'PUNCT'), ('mon', 'NOUN'), ('phrases', 'NOUN'), ('to', 'ADP'), ('their', 'PRON'), ('meaning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('implementing', 'VBG'), ('a', 'DT'), ('speech', 'NN'), ('-', 'HYPH'), ('enabled', 'VBN'), ('self', 'NN'), ('-', 'HYPH'), ('service', 'NN'), ('system', 'NN'), ('is', 'VBZ'), ('like', 'IN'), ('teaching', 'VBG'), ('a', 'DT'), ('foreign', 'JJ'), ('language', 'NN'), (',', ','), ('then', 'RB'), ('a', 'DT'), ('grammar', 'NN'), ('is', 'VBZ'), ('like', 'IN'), ('a', 'DT'), ('translation', 'NN'), ('book', 'NN'), (',', ','), ('mapping', 'VBG'), ('com', 'NN'), ('-', 'HYPH'), ('mon', 'NN'), ('phrases', 'NNS'), ('to', 'IN'), ('their', 'PRP$'), ('meaning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('implementing', 'implement'), ('a', 'a'), ('speech', 'speech'), ('-', '-'), ('enabled', 'enable'), ('self', 'self'), ('-', '-'), ('service', 'service'), ('system', 'system'), ('is', 'be'), ('like', 'like'), ('teaching', 'teach'), ('a', 'a'), ('foreign', 'foreign'), ('language', 'language'), (',', ','), ('then', 'then'), ('a', 'a'), ('grammar', 'grammar'), ('is', 'be'), ('like', 'like'), ('a', 'a'), ('translation', 'translation'), ('book', 'book'), (',', ','), ('mapping', 'map'), ('com', 'com'), ('-', '-'), ('mon', 'mon'), ('phrases', 'phrase'), ('to', 'to'), ('their', 'they'), ('meaning', 'meaning'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'implementing'), 'mark'), (('implementing', 'teaching'), 'csubj'), (('a', 'system'), 'det'), (('speech', 'enabled'), 'obl:npmod'), (('-', 'enabled'), 'punct'), (('enabled', 'system'), 'amod'), (('self', 'service'), 'compound'), (('-', 'service'), 'punct'), (('service', 'system'), 'compound'), (('system', 'implementing'), 'obj'), (('is', 'teaching'), 'cop'), (('like', 'teaching'), 'mark'), (('teaching', 'book'), 'advcl'), (('a', 'language'), 'det'), (('foreign', 'language'), 'amod'), (('language', 'teaching'), 'obj'), ((',', 'teaching'), 'punct'), (('then', 'book'), 'advmod'), (('a', 'grammar'), 'det'), (('grammar', 'book'), 'nsubj'), (('is', 'book'), 'cop'), (('like', 'book'), 'case'), (('a', 'book'), 'det'), (('translation', 'book'), 'compound'), (('book', 'root'), 'root'), ((',', 'book'), 'punct'), (('mapping', 'book'), 'acl'), (('com', 'mon'), 'compound'), (('-', 'mon'), 'punct'), (('mon', 'phrases'), 'compound'), (('phrases', 'mapping'), 'obj'), (('to', 'meaning'), 'case'), (('their', 'meaning'), 'nmod:poss'), (('meaning', 'mapping'), 'obl'), (('.', 'book'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 38 ===========================

 It works quite well… as long as people stick to  those phrases. 

Tokens are: 
>> ['It', 'works', 'quite', 'well', '…', 'as', 'long', 'as', 'people', 'stick', 'to', 'those', 'phrases', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('works', 'VERB'), ('quite', 'ADV'), ('well', 'ADV'), ('…', 'PUNCT'), ('as', 'ADV'), ('long', 'ADV'), ('as', 'SCONJ'), ('people', 'NOUN'), ('stick', 'VERB'), ('to', 'ADP'), ('those', 'DET'), ('phrases', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('works', 'VBZ'), ('quite', 'RB'), ('well', 'RB'), ('…', ','), ('as', 'RB'), ('long', 'RB'), ('as', 'IN'), ('people', 'NNS'), ('stick', 'VBP'), ('to', 'IN'), ('those', 'DT'), ('phrases', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('works', 'work'), ('quite', 'quite'), ('well', 'well'), ('…', '…'), ('as', 'as'), ('long', 'long'), ('as', 'as'), ('people', 'people'), ('stick', 'stick'), ('to', 'to'), ('those', 'that'), ('phrases', 'phrase'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'works'), 'nsubj'), (('works', 'root'), 'root'), (('quite', 'well'), 'advmod'), (('well', 'works'), 'advmod'), (('…', 'works'), 'punct'), (('as', 'long'), 'advmod'), (('long', 'works'), 'advmod'), (('as', 'stick'), 'mark'), (('people', 'stick'), 'nsubj'), (('stick', 'long'), 'advcl'), (('to', 'phrases'), 'case'), (('those', 'phrases'), 'det'), (('phrases', 'stick'), 'obl'), (('.', 'works'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 39 ===========================

 So what happens if a phrase is not in the book? 

Tokens are: 
>> ['So', 'what', 'happens', 'if', 'a', 'phrase', 'is', 'not', 'in', 'the', 'book', '?'] 

 UPOS tags are: 
>> [('So', 'ADV'), ('what', 'PRON'), ('happens', 'VERB'), ('if', 'SCONJ'), ('a', 'DET'), ('phrase', 'NOUN'), ('is', 'AUX'), ('not', 'PART'), ('in', 'ADP'), ('the', 'DET'), ('book', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('So', 'RB'), ('what', 'WP'), ('happens', 'VBZ'), ('if', 'IN'), ('a', 'DT'), ('phrase', 'NN'), ('is', 'VBZ'), ('not', 'RB'), ('in', 'IN'), ('the', 'DT'), ('book', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('So', 'so'), ('what', 'what'), ('happens', 'happen'), ('if', 'if'), ('a', 'a'), ('phrase', 'phrase'), ('is', 'be'), ('not', 'not'), ('in', 'in'), ('the', 'the'), ('book', 'book'), ('?', '?')] 

 Dependency tags are: 
>> [(('So', 'happens'), 'advmod'), (('what', 'happens'), 'nsubj'), (('happens', 'root'), 'root'), (('if', 'book'), 'mark'), (('a', 'phrase'), 'det'), (('phrase', 'book'), 'nsubj'), (('is', 'book'), 'cop'), (('not', 'book'), 'advmod'), (('in', 'book'), 'case'), (('the', 'book'), 'det'), (('book', 'happens'), 'advcl'), (('?', 'happens'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 40 ===========================

 When a caller believes that a speech system has misrecognized his or her  response, it is more likely that the caller spoke something which was out-of- grammar—the system simply wasn’t expecting the caller to respond quite like  that. 

Tokens are: 
>> ['When', 'a', 'caller', 'believes', 'that', 'a', 'speech', 'system', 'has', 'misrecognized', 'his', 'or', 'her', 'response', ',', 'it', 'is', 'more', 'likely', 'that', 'the', 'caller', 'spoke', 'something', 'which', 'was', 'out', '-', 'of', '-', 'grammar', '—', 'the', 'system', 'simply', 'was', 'n’t', 'expecting', 'the', 'caller', 'to', 'respond', 'quite', 'like', 'that', '.'] 

 UPOS tags are: 
>> [('When', 'SCONJ'), ('a', 'DET'), ('caller', 'NOUN'), ('believes', 'VERB'), ('that', 'SCONJ'), ('a', 'DET'), ('speech', 'NOUN'), ('system', 'NOUN'), ('has', 'AUX'), ('misrecognized', 'VERB'), ('his', 'PRON'), ('or', 'CCONJ'), ('her', 'PRON'), ('response', 'NOUN'), (',', 'PUNCT'), ('it', 'PRON'), ('is', 'AUX'), ('more', 'ADV'), ('likely', 'ADJ'), ('that', 'SCONJ'), ('the', 'DET'), ('caller', 'NOUN'), ('spoke', 'VERB'), ('something', 'PRON'), ('which', 'PRON'), ('was', 'AUX'), ('out', 'ADP'), ('-', 'PUNCT'), ('of', 'ADP'), ('-', 'PUNCT'), ('grammar', 'NOUN'), ('—', 'PUNCT'), ('the', 'DET'), ('system', 'NOUN'), ('simply', 'ADV'), ('was', 'AUX'), ('n’t', 'PART'), ('expecting', 'VERB'), ('the', 'DET'), ('caller', 'NOUN'), ('to', 'PART'), ('respond', 'VERB'), ('quite', 'ADV'), ('like', 'ADP'), ('that', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('When', 'WRB'), ('a', 'DT'), ('caller', 'NN'), ('believes', 'VBZ'), ('that', 'IN'), ('a', 'DT'), ('speech', 'NN'), ('system', 'NN'), ('has', 'VBZ'), ('misrecognized', 'VBN'), ('his', 'PRP$'), ('or', 'CC'), ('her', 'PRP$'), ('response', 'NN'), (',', ','), ('it', 'PRP'), ('is', 'VBZ'), ('more', 'RBR'), ('likely', 'JJ'), ('that', 'IN'), ('the', 'DT'), ('caller', 'NN'), ('spoke', 'VBD'), ('something', 'NN'), ('which', 'WDT'), ('was', 'VBD'), ('out', 'IN'), ('-', 'HYPH'), ('of', 'IN'), ('-', 'HYPH'), ('grammar', 'NN'), ('—', ':'), ('the', 'DT'), ('system', 'NN'), ('simply', 'RB'), ('was', 'VBD'), ('n’t', 'RB'), ('expecting', 'VBG'), ('the', 'DT'), ('caller', 'NN'), ('to', 'TO'), ('respond', 'VB'), ('quite', 'RB'), ('like', 'IN'), ('that', 'DT'), ('.', '.')] 

 Lemmas are: 
>> [('When', 'when'), ('a', 'a'), ('caller', 'caller'), ('believes', 'believe'), ('that', 'that'), ('a', 'a'), ('speech', 'speech'), ('system', 'system'), ('has', 'have'), ('misrecognized', 'misrecognize'), ('his', 'he'), ('or', 'or'), ('her', 'she'), ('response', 'response'), (',', ','), ('it', 'it'), ('is', 'be'), ('more', 'more'), ('likely', 'likely'), ('that', 'that'), ('the', 'the'), ('caller', 'caller'), ('spoke', 'speak'), ('something', 'something'), ('which', 'which'), ('was', 'be'), ('out', 'out'), ('-', '-'), ('of', 'of'), ('-', '-'), ('grammar', 'grammar'), ('—', '—'), ('the', 'the'), ('system', 'system'), ('simply', 'simply'), ('was', 'be'), ('n’t', 'not'), ('expecting', 'expect'), ('the', 'the'), ('caller', 'caller'), ('to', 'to'), ('respond', 'respond'), ('quite', 'quite'), ('like', 'like'), ('that', 'that'), ('.', '.')] 

 Dependency tags are: 
>> [(('When', 'believes'), 'mark'), (('a', 'caller'), 'det'), (('caller', 'believes'), 'nsubj'), (('believes', 'likely'), 'advcl'), (('that', 'misrecognized'), 'mark'), (('a', 'system'), 'det'), (('speech', 'system'), 'compound'), (('system', 'misrecognized'), 'nsubj'), (('has', 'misrecognized'), 'aux'), (('misrecognized', 'believes'), 'ccomp'), (('his', 'response'), 'nmod:poss'), (('or', 'her'), 'cc'), (('her', 'his'), 'conj'), (('response', 'misrecognized'), 'obj'), ((',', 'likely'), 'punct'), (('it', 'likely'), 'expl'), (('is', 'likely'), 'cop'), (('more', 'likely'), 'advmod'), (('likely', 'root'), 'root'), (('that', 'spoke'), 'mark'), (('the', 'caller'), 'det'), (('caller', 'spoke'), 'nsubj'), (('spoke', 'likely'), 'csubj'), (('something', 'spoke'), 'obj'), (('which', 'grammar'), 'nsubj'), (('was', 'grammar'), 'cop'), (('out', 'grammar'), 'case'), (('-', 'grammar'), 'punct'), (('of', 'grammar'), 'case'), (('-', 'grammar'), 'punct'), (('grammar', 'something'), 'acl:relcl'), (('—', 'expecting'), 'punct'), (('the', 'system'), 'det'), (('system', 'expecting'), 'nsubj'), (('simply', 'expecting'), 'advmod'), (('was', 'expecting'), 'aux'), (('n’t', 'expecting'), 'advmod'), (('expecting', 'likely'), 'csubj'), (('the', 'caller'), 'det'), (('caller', 'expecting'), 'obj'), (('to', 'respond'), 'mark'), (('respond', 'expecting'), 'xcomp'), (('quite', 'that'), 'advmod'), (('like', 'that'), 'case'), (('that', 'respond'), 'obl'), (('.', 'likely'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 41 ===========================

 An analysis of a number of representative speech applications confirms that  out-of-grammar errors outnumber misrecognition errors by a factor of as high  as 5-to-1. 

Tokens are: 
>> ['An', 'analysis', 'of', 'a', 'number', 'of', 'representative', 'speech', 'applications', 'confirms', 'that', 'out', '-', 'of', '-', 'grammar', 'errors', 'outnumber', 'misrecognition', 'errors', 'by', 'a', 'factor', 'of', 'as', 'high', 'as', '5', '-', 'to', '-', '1', '.'] 

 UPOS tags are: 
>> [('An', 'DET'), ('analysis', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('number', 'NOUN'), ('of', 'ADP'), ('representative', 'ADJ'), ('speech', 'NOUN'), ('applications', 'NOUN'), ('confirms', 'VERB'), ('that', 'SCONJ'), ('out', 'ADP'), ('-', 'PUNCT'), ('of', 'ADP'), ('-', 'PUNCT'), ('grammar', 'NOUN'), ('errors', 'NOUN'), ('outnumber', 'VERB'), ('misrecognition', 'NOUN'), ('errors', 'NOUN'), ('by', 'ADP'), ('a', 'DET'), ('factor', 'NOUN'), ('of', 'ADP'), ('as', 'ADV'), ('high', 'ADJ'), ('as', 'ADP'), ('5', 'NUM'), ('-', 'SYM'), ('to', 'ADP'), ('-', 'SYM'), ('1', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('An', 'DT'), ('analysis', 'NN'), ('of', 'IN'), ('a', 'DT'), ('number', 'NN'), ('of', 'IN'), ('representative', 'JJ'), ('speech', 'NN'), ('applications', 'NNS'), ('confirms', 'VBZ'), ('that', 'IN'), ('out', 'IN'), ('-', 'HYPH'), ('of', 'IN'), ('-', 'HYPH'), ('grammar', 'NN'), ('errors', 'NNS'), ('outnumber', 'VBP'), ('misrecognition', 'NN'), ('errors', 'NNS'), ('by', 'IN'), ('a', 'DT'), ('factor', 'NN'), ('of', 'IN'), ('as', 'RB'), ('high', 'JJ'), ('as', 'IN'), ('5', 'CD'), ('-', 'SYM'), ('to', 'IN'), ('-', 'SYM'), ('1', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('An', 'a'), ('analysis', 'analysis'), ('of', 'of'), ('a', 'a'), ('number', 'number'), ('of', 'of'), ('representative', 'representative'), ('speech', 'speech'), ('applications', 'application'), ('confirms', 'confirm'), ('that', 'that'), ('out', 'out'), ('-', '-'), ('of', 'of'), ('-', '-'), ('grammar', 'grammar'), ('errors', 'error'), ('outnumber', 'outnumber'), ('misrecognition', 'misrecognition'), ('errors', 'error'), ('by', 'by'), ('a', 'a'), ('factor', 'factor'), ('of', 'of'), ('as', 'as'), ('high', 'high'), ('as', 'as'), ('5', '5'), ('-', '-'), ('to', 'to'), ('-', '-'), ('1', '1'), ('.', '.')] 

 Dependency tags are: 
>> [(('An', 'analysis'), 'det'), (('analysis', 'confirms'), 'nsubj'), (('of', 'number'), 'case'), (('a', 'number'), 'det'), (('number', 'analysis'), 'nmod'), (('of', 'applications'), 'case'), (('representative', 'applications'), 'amod'), (('speech', 'applications'), 'compound'), (('applications', 'number'), 'nmod'), (('confirms', 'root'), 'root'), (('that', 'outnumber'), 'mark'), (('out', 'errors'), 'compound'), (('-', 'grammar'), 'punct'), (('of', 'grammar'), 'case'), (('-', 'grammar'), 'punct'), (('grammar', 'out'), 'nmod'), (('errors', 'outnumber'), 'nsubj'), (('outnumber', 'confirms'), 'ccomp'), (('misrecognition', 'errors'), 'compound'), (('errors', 'outnumber'), 'obj'), (('by', 'factor'), 'case'), (('a', 'factor'), 'det'), (('factor', 'outnumber'), 'obl'), (('of', 'high'), 'case'), (('as', 'high'), 'advmod'), (('high', 'factor'), 'nmod'), (('as', '5'), 'case'), (('5', 'high'), 'obl'), (('-', 'to'), 'case'), (('to', '5'), 'nmod'), (('-', '1'), 'case'), (('1', '5'), 'nmod'), (('.', 'confirms'), 'punct')]

 Named Entities are: 
>> [('as high  as 5-to-1', 'CARDINAL')]

========================== Sentence 42 ===========================

 Put simply, the problem is not recognizing what the caller said…  it’s knowing what the caller meant. 

Tokens are: 
>> ['Put', 'simply', ',', 'the', 'problem', 'is', 'not', 'recognizing', 'what', 'the', 'caller', 'said', '…', 'it', '’s', 'knowing', 'what', 'the', 'caller', 'meant', '.'] 

 UPOS tags are: 
>> [('Put', 'VERB'), ('simply', 'ADV'), (',', 'PUNCT'), ('the', 'DET'), ('problem', 'NOUN'), ('is', 'AUX'), ('not', 'PART'), ('recognizing', 'VERB'), ('what', 'PRON'), ('the', 'DET'), ('caller', 'NOUN'), ('said', 'VERB'), ('…', 'PUNCT'), ('it', 'PRON'), ('’s', 'AUX'), ('knowing', 'VERB'), ('what', 'PRON'), ('the', 'DET'), ('caller', 'NOUN'), ('meant', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Put', 'VB'), ('simply', 'RB'), (',', ','), ('the', 'DT'), ('problem', 'NN'), ('is', 'VBZ'), ('not', 'RB'), ('recognizing', 'VBG'), ('what', 'WP'), ('the', 'DT'), ('caller', 'NN'), ('said', 'VBD'), ('…', ','), ('it', 'PRP'), ('’s', 'VBZ'), ('knowing', 'VBG'), ('what', 'WP'), ('the', 'DT'), ('caller', 'NN'), ('meant', 'VBD'), ('.', '.')] 

 Lemmas are: 
>> [('Put', 'put'), ('simply', 'simply'), (',', ','), ('the', 'the'), ('problem', 'problem'), ('is', 'be'), ('not', 'not'), ('recognizing', 'recognize'), ('what', 'what'), ('the', 'the'), ('caller', 'caller'), ('said', 'say'), ('…', '…'), ('it', 'it'), ('’s', 'be'), ('knowing', 'know'), ('what', 'what'), ('the', 'the'), ('caller', 'caller'), ('meant', 'mean'), ('.', '.')] 

 Dependency tags are: 
>> [(('Put', 'root'), 'root'), (('simply', 'Put'), 'advmod'), ((',', 'Put'), 'punct'), (('the', 'problem'), 'det'), (('problem', 'recognizing'), 'nsubj'), (('is', 'recognizing'), 'aux'), (('not', 'recognizing'), 'advmod'), (('recognizing', 'Put'), 'parataxis'), (('what', 'recognizing'), 'obj'), (('the', 'caller'), 'det'), (('caller', 'said'), 'nsubj'), (('said', 'what'), 'acl:relcl'), (('…', 'knowing'), 'punct'), (('it', 'knowing'), 'nsubj'), (('’s', 'knowing'), 'aux'), (('knowing', 'Put'), 'parataxis'), (('what', 'knowing'), 'obj'), (('the', 'caller'), 'det'), (('caller', 'meant'), 'nsubj'), (('meant', 'what'), 'acl:relcl'), (('.', 'Put'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 43 ===========================

 Therefore, to increase the accuracy of any  system—improving its automation rate, making customers happier with the  use of the system, and lowering overall costs for the contact center—a critical  factor is to reduce these out-of-grammar errors. 

Tokens are: 
>> ['Therefore', ',', 'to', 'increase', 'the', 'accuracy', 'of', 'any', 'system', '—', 'improving', 'its', 'automation', 'rate', ',', 'making', 'customers', 'happier', 'with', 'the', 'use', 'of', 'the', 'system', ',', 'and', 'lowering', 'overall', 'costs', 'for', 'the', 'contact', 'center', '—', 'a', 'critical', 'factor', 'is', 'to', 'reduce', 'these', 'out', '-', 'of', '-', 'grammar', 'errors', '.'] 

 UPOS tags are: 
>> [('Therefore', 'ADV'), (',', 'PUNCT'), ('to', 'PART'), ('increase', 'VERB'), ('the', 'DET'), ('accuracy', 'NOUN'), ('of', 'ADP'), ('any', 'DET'), ('system', 'NOUN'), ('—', 'PUNCT'), ('improving', 'VERB'), ('its', 'PRON'), ('automation', 'NOUN'), ('rate', 'NOUN'), (',', 'PUNCT'), ('making', 'VERB'), ('customers', 'NOUN'), ('happier', 'ADJ'), ('with', 'ADP'), ('the', 'DET'), ('use', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('system', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('lowering', 'VERB'), ('overall', 'ADJ'), ('costs', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('contact', 'NOUN'), ('center', 'NOUN'), ('—', 'PUNCT'), ('a', 'DET'), ('critical', 'ADJ'), ('factor', 'NOUN'), ('is', 'VERB'), ('to', 'PART'), ('reduce', 'VERB'), ('these', 'DET'), ('out', 'ADP'), ('-', 'PUNCT'), ('of', 'ADP'), ('-', 'PUNCT'), ('grammar', 'NOUN'), ('errors', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Therefore', 'RB'), (',', ','), ('to', 'TO'), ('increase', 'VB'), ('the', 'DT'), ('accuracy', 'NN'), ('of', 'IN'), ('any', 'DT'), ('system', 'NN'), ('—', ':'), ('improving', 'VBG'), ('its', 'PRP$'), ('automation', 'NN'), ('rate', 'NN'), (',', ','), ('making', 'VBG'), ('customers', 'NNS'), ('happier', 'JJR'), ('with', 'IN'), ('the', 'DT'), ('use', 'NN'), ('of', 'IN'), ('the', 'DT'), ('system', 'NN'), (',', ','), ('and', 'CC'), ('lowering', 'VBG'), ('overall', 'JJ'), ('costs', 'NNS'), ('for', 'IN'), ('the', 'DT'), ('contact', 'NN'), ('center', 'NN'), ('—', ':'), ('a', 'DT'), ('critical', 'JJ'), ('factor', 'NN'), ('is', 'VBZ'), ('to', 'TO'), ('reduce', 'VB'), ('these', 'DT'), ('out', 'IN'), ('-', 'HYPH'), ('of', 'IN'), ('-', 'HYPH'), ('grammar', 'NN'), ('errors', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Therefore', 'therefore'), (',', ','), ('to', 'to'), ('increase', 'increase'), ('the', 'the'), ('accuracy', 'accuracy'), ('of', 'of'), ('any', 'any'), ('system', 'system'), ('—', '—'), ('improving', 'improve'), ('its', 'its'), ('automation', 'automation'), ('rate', 'rate'), (',', ','), ('making', 'make'), ('customers', 'customer'), ('happier', 'happy'), ('with', 'with'), ('the', 'the'), ('use', 'use'), ('of', 'of'), ('the', 'the'), ('system', 'system'), (',', ','), ('and', 'and'), ('lowering', 'lower'), ('overall', 'overall'), ('costs', 'cost'), ('for', 'for'), ('the', 'the'), ('contact', 'contact'), ('center', 'center'), ('—', '—'), ('a', 'a'), ('critical', 'critical'), ('factor', 'factor'), ('is', 'be'), ('to', 'to'), ('reduce', 'reduce'), ('these', 'this'), ('out', 'out'), ('-', '-'), ('of', 'of'), ('-', '-'), ('grammar', 'grammar'), ('errors', 'error'), ('.', '.')] 

 Dependency tags are: 
>> [(('Therefore', 'is'), 'advmod'), ((',', 'is'), 'punct'), (('to', 'increase'), 'mark'), (('increase', 'is'), 'advcl'), (('the', 'accuracy'), 'det'), (('accuracy', 'increase'), 'obj'), (('of', 'system'), 'case'), (('any', 'system'), 'det'), (('system', 'accuracy'), 'nmod'), (('—', 'improving'), 'punct'), (('improving', 'increase'), 'advcl'), (('its', 'rate'), 'nmod:poss'), (('automation', 'rate'), 'compound'), (('rate', 'improving'), 'obj'), ((',', 'making'), 'punct'), (('making', 'improving'), 'conj'), (('customers', 'making'), 'obj'), (('happier', 'making'), 'xcomp'), (('with', 'use'), 'case'), (('the', 'use'), 'det'), (('use', 'happier'), 'obl'), (('of', 'system'), 'case'), (('the', 'system'), 'det'), (('system', 'use'), 'nmod'), ((',', 'lowering'), 'punct'), (('and', 'lowering'), 'cc'), (('lowering', 'making'), 'conj'), (('overall', 'costs'), 'amod'), (('costs', 'lowering'), 'obj'), (('for', 'center'), 'case'), (('the', 'center'), 'det'), (('contact', 'center'), 'compound'), (('center', 'costs'), 'nmod'), (('—', 'is'), 'punct'), (('a', 'factor'), 'det'), (('critical', 'factor'), 'amod'), (('factor', 'is'), 'nsubj'), (('is', 'root'), 'root'), (('to', 'reduce'), 'mark'), (('reduce', 'is'), 'ccomp'), (('these', 'errors'), 'det'), (('out', 'errors'), 'compound'), (('-', 'out'), 'punct'), (('of', 'grammar'), 'case'), (('-', 'grammar'), 'punct'), (('grammar', 'out'), 'nmod'), (('errors', 'reduce'), 'obj'), (('.', 'is'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 44 ===========================

 So how can we teach a speech recognition system to speak this language  of the customer? 

Tokens are: 
>> ['So', 'how', 'can', 'we', 'teach', 'a', 'speech', 'recognition', 'system', 'to', 'speak', 'this', 'language', 'of', 'the', 'customer', '?'] 

 UPOS tags are: 
>> [('So', 'ADV'), ('how', 'ADV'), ('can', 'AUX'), ('we', 'PRON'), ('teach', 'VERB'), ('a', 'DET'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('system', 'NOUN'), ('to', 'PART'), ('speak', 'VERB'), ('this', 'DET'), ('language', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('customer', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('So', 'RB'), ('how', 'WRB'), ('can', 'MD'), ('we', 'PRP'), ('teach', 'VB'), ('a', 'DT'), ('speech', 'NN'), ('recognition', 'NN'), ('system', 'NN'), ('to', 'TO'), ('speak', 'VB'), ('this', 'DT'), ('language', 'NN'), ('of', 'IN'), ('the', 'DT'), ('customer', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('So', 'so'), ('how', 'how'), ('can', 'can'), ('we', 'we'), ('teach', 'teach'), ('a', 'a'), ('speech', 'speech'), ('recognition', 'recognition'), ('system', 'system'), ('to', 'to'), ('speak', 'speak'), ('this', 'this'), ('language', 'language'), ('of', 'of'), ('the', 'the'), ('customer', 'customer'), ('?', '?')] 

 Dependency tags are: 
>> [(('So', 'teach'), 'advmod'), (('how', 'teach'), 'advmod'), (('can', 'teach'), 'aux'), (('we', 'teach'), 'nsubj'), (('teach', 'root'), 'root'), (('a', 'system'), 'det'), (('speech', 'recognition'), 'compound'), (('recognition', 'system'), 'compound'), (('system', 'teach'), 'obj'), (('to', 'speak'), 'mark'), (('speak', 'teach'), 'advcl'), (('this', 'language'), 'det'), (('language', 'speak'), 'obj'), (('of', 'customer'), 'case'), (('the', 'customer'), 'det'), (('customer', 'language'), 'nmod'), (('?', 'teach'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 45 ===========================

 Different natural language capabilities provide different  approaches to tackling that problem. 

Tokens are: 
>> ['Different', 'natural', 'language', 'capabilities', 'provide', 'different', 'approaches', 'to', 'tackling', 'that', 'problem', '.'] 

 UPOS tags are: 
>> [('Different', 'ADJ'), ('natural', 'ADJ'), ('language', 'NOUN'), ('capabilities', 'NOUN'), ('provide', 'VERB'), ('different', 'ADJ'), ('approaches', 'NOUN'), ('to', 'SCONJ'), ('tackling', 'VERB'), ('that', 'DET'), ('problem', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Different', 'JJ'), ('natural', 'JJ'), ('language', 'NN'), ('capabilities', 'NNS'), ('provide', 'VBP'), ('different', 'JJ'), ('approaches', 'NNS'), ('to', 'IN'), ('tackling', 'VBG'), ('that', 'DT'), ('problem', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Different', 'different'), ('natural', 'natural'), ('language', 'language'), ('capabilities', 'capability'), ('provide', 'provide'), ('different', 'different'), ('approaches', 'approach'), ('to', 'to'), ('tackling', 'tackle'), ('that', 'that'), ('problem', 'problem'), ('.', '.')] 

 Dependency tags are: 
>> [(('Different', 'capabilities'), 'amod'), (('natural', 'language'), 'amod'), (('language', 'capabilities'), 'compound'), (('capabilities', 'provide'), 'nsubj'), (('provide', 'root'), 'root'), (('different', 'approaches'), 'amod'), (('approaches', 'provide'), 'obj'), (('to', 'tackling'), 'mark'), (('tackling', 'approaches'), 'acl'), (('that', 'problem'), 'det'), (('problem', 'tackling'), 'obj'), (('.', 'provide'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 46 ===========================

 White PaperCustomer Service Solutions Natural language understanding 

Tokens are: 
>> ['White', 'PaperCustomer', 'Service', 'Solutions', 'Natural', 'language', 'understanding'] 

 UPOS tags are: 
>> [('White', 'ADJ'), ('PaperCustomer', 'NOUN'), ('Service', 'NOUN'), ('Solutions', 'NOUN'), ('Natural', 'ADJ'), ('language', 'NOUN'), ('understanding', 'NOUN')] 

 XPOS tags are: 
>> [('White', 'JJ'), ('PaperCustomer', 'NN'), ('Service', 'NN'), ('Solutions', 'NNS'), ('Natural', 'JJ'), ('language', 'NN'), ('understanding', 'NN')] 

 Lemmas are: 
>> [('White', 'White'), ('PaperCustomer', 'papercustomer'), ('Service', 'service'), ('Solutions', 'solution'), ('Natural', 'Natural'), ('language', 'language'), ('understanding', 'understanding')] 

 Dependency tags are: 
>> [(('White', 'Service'), 'amod'), (('PaperCustomer', 'Service'), 'compound'), (('Service', 'root'), 'root'), (('Solutions', 'understanding'), 'compound'), (('Natural', 'language'), 'amod'), (('language', 'understanding'), 'compound'), (('understanding', 'Service'), 'conj')]

 Named Entities are: 
>> [('White PaperCustomer Service Solutions', 'ORG')]

========================== Sentence 47 ===========================

 3 

Tokens are: 
>> ['3'] 

 UPOS tags are: 
>> [('3', 'X')] 

 XPOS tags are: 
>> [('3', 'LS')] 

 Lemmas are: 
>> [('3', '3')] 

 Dependency tags are: 
>> [(('3', 'root'), 'root')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 48 ===========================

 The Need for Natural Language A Typical Example  CALLER: I guess I’d like  billing. 

Tokens are: 
>> ['The', 'Need', 'for', 'Natural', 'Language', 'A', 'Typical', 'Example', 'CALLER', ':', 'I', 'guess', 'I', '’d', 'like', 'billing', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('Need', 'NOUN'), ('for', 'ADP'), ('Natural', 'ADJ'), ('Language', 'PROPN'), ('A', 'DET'), ('Typical', 'ADJ'), ('Example', 'NOUN'), ('CALLER', 'NOUN'), (':', 'PUNCT'), ('I', 'PRON'), ('guess', 'VERB'), ('I', 'PRON'), ('’d', 'AUX'), ('like', 'VERB'), ('billing', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('Need', 'NN'), ('for', 'IN'), ('Natural', 'JJ'), ('Language', 'NNP'), ('A', 'DT'), ('Typical', 'JJ'), ('Example', 'NN'), ('CALLER', 'NN'), (':', ':'), ('I', 'PRP'), ('guess', 'VBP'), ('I', 'PRP'), ('’d', 'MD'), ('like', 'VB'), ('billing', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('Need', 'need'), ('for', 'for'), ('Natural', 'Natural'), ('Language', 'Language'), ('A', 'a'), ('Typical', 'Typical'), ('Example', 'example'), ('CALLER', 'caller'), (':', ':'), ('I', 'I'), ('guess', 'guess'), ('I', 'I'), ('’d', 'have'), ('like', 'like'), ('billing', 'billing'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'Need'), 'det'), (('Need', 'CALLER'), 'nsubj'), (('for', 'Language'), 'case'), (('Natural', 'Language'), 'amod'), (('Language', 'Need'), 'nmod'), (('A', 'CALLER'), 'det'), (('Typical', 'CALLER'), 'amod'), (('Example', 'CALLER'), 'compound'), (('CALLER', 'root'), 'root'), ((':', 'CALLER'), 'punct'), (('I', 'guess'), 'nsubj'), (('guess', 'CALLER'), 'parataxis'), (('I', 'like'), 'nsubj'), (('’d', 'like'), 'aux'), (('like', 'guess'), 'ccomp'), (('billing', 'like'), 'obj'), (('.', 'CALLER'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 49 ===========================

 I said billing! 

Tokens are: 
>> ['I', 'said', 'billing', '!'] 

 UPOS tags are: 
>> [('I', 'PRON'), ('said', 'VERB'), ('billing', 'NOUN'), ('!', 'PUNCT')] 

 XPOS tags are: 
>> [('I', 'PRP'), ('said', 'VBD'), ('billing', 'NN'), ('!', '.')] 

 Lemmas are: 
>> [('I', 'I'), ('said', 'say'), ('billing', 'billing'), ('!', '!')] 

 Dependency tags are: 
>> [(('I', 'said'), 'nsubj'), (('said', 'root'), 'root'), (('billing', 'said'), 'obj'), (('!', 'said'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 50 ===========================

 Billing! 

Tokens are: 
>> ['Billing', '!'] 

 UPOS tags are: 
>> [('Billing', 'NOUN'), ('!', 'PUNCT')] 

 XPOS tags are: 
>> [('Billing', 'NN'), ('!', '.')] 

 Lemmas are: 
>> [('Billing', 'billing'), ('!', '!')] 

 Dependency tags are: 
>> [(('Billing', 'root'), 'root'), (('!', 'Billing'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 51 ===========================

 BILLING! 

Tokens are: 
>> ['BILLING', '!'] 

 UPOS tags are: 
>> [('BILLING', 'NOUN'), ('!', 'PUNCT')] 

 XPOS tags are: 
>> [('BILLING', 'NN'), ('!', '.')] 

 Lemmas are: 
>> [('BILLING', 'billing'), ('!', '!')] 

 Dependency tags are: 
>> [(('BILLING', 'root'), 'root'), (('!', 'BILLING'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 52 ===========================

 Would you like account information,  billing, or technical support? 

Tokens are: 
>> ['Would', 'you', 'like', 'account', 'information', ',', 'billing', ',', 'or', 'technical', 'support', '?'] 

 UPOS tags are: 
>> [('Would', 'AUX'), ('you', 'PRON'), ('like', 'VERB'), ('account', 'NOUN'), ('information', 'NOUN'), (',', 'PUNCT'), ('billing', 'NOUN'), (',', 'PUNCT'), ('or', 'CCONJ'), ('technical', 'ADJ'), ('support', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Would', 'MD'), ('you', 'PRP'), ('like', 'VB'), ('account', 'NN'), ('information', 'NN'), (',', ','), ('billing', 'NN'), (',', ','), ('or', 'CC'), ('technical', 'JJ'), ('support', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Would', 'would'), ('you', 'you'), ('like', 'like'), ('account', 'account'), ('information', 'information'), (',', ','), ('billing', 'billing'), (',', ','), ('or', 'or'), ('technical', 'technical'), ('support', 'support'), ('?', '?')] 

 Dependency tags are: 
>> [(('Would', 'like'), 'aux'), (('you', 'like'), 'nsubj'), (('like', 'root'), 'root'), (('account', 'information'), 'compound'), (('information', 'like'), 'obj'), ((',', 'billing'), 'punct'), (('billing', 'information'), 'conj'), ((',', 'support'), 'punct'), (('or', 'support'), 'cc'), (('technical', 'support'), 'amod'), (('support', 'information'), 'conj'), (('?', 'like'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 53 ===========================

 SYSTEM:  I’m sorry, I didn’t understand what  you said... 

Tokens are: 
>> ['SYSTEM', ':', 'I', '’m', 'sorry', ',', 'I', 'did', 'n’t', 'understand', 'what', 'you', 'said', '...'] 

 UPOS tags are: 
>> [('SYSTEM', 'NOUN'), (':', 'PUNCT'), ('I', 'PRON'), ('’m', 'AUX'), ('sorry', 'ADJ'), (',', 'PUNCT'), ('I', 'PRON'), ('did', 'AUX'), ('n’t', 'PART'), ('understand', 'VERB'), ('what', 'PRON'), ('you', 'PRON'), ('said', 'VERB'), ('...', 'PUNCT')] 

 XPOS tags are: 
>> [('SYSTEM', 'NN'), (':', ':'), ('I', 'PRP'), ('’m', 'VBP'), ('sorry', 'JJ'), (',', ','), ('I', 'PRP'), ('did', 'VBD'), ('n’t', 'RB'), ('understand', 'VB'), ('what', 'WP'), ('you', 'PRP'), ('said', 'VBD'), ('...', '.')] 

 Lemmas are: 
>> [('SYSTEM', 'system'), (':', ':'), ('I', 'I'), ('’m', 'be'), ('sorry', 'sorry'), (',', ','), ('I', 'I'), ('did', 'do'), ('n’t', 'not'), ('understand', 'understand'), ('what', 'what'), ('you', 'you'), ('said', 'say'), ('...', '...')] 

 Dependency tags are: 
>> [(('SYSTEM', 'root'), 'root'), ((':', 'SYSTEM'), 'punct'), (('I', 'sorry'), 'nsubj'), (('’m', 'sorry'), 'cop'), (('sorry', 'SYSTEM'), 'appos'), ((',', 'sorry'), 'punct'), (('I', 'understand'), 'nsubj'), (('did', 'understand'), 'aux'), (('n’t', 'understand'), 'advmod'), (('understand', 'SYSTEM'), 'appos'), (('what', 'said'), 'obj'), (('you', 'said'), 'nsubj'), (('said', 'understand'), 'ccomp'), (('...', 'SYSTEM'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 54 ===========================

 I’m sorry, I didn’t understand what  you said... please wait for the next  available agent. 

Tokens are: 
>> ['I', '’m', 'sorry', ',', 'I', 'did', 'n’t', 'understand', 'what', 'you', 'said', '...', 'please', 'wait', 'for', 'the', 'next', 'available', 'agent', '.'] 

 UPOS tags are: 
>> [('I', 'PRON'), ('’m', 'AUX'), ('sorry', 'ADJ'), (',', 'PUNCT'), ('I', 'PRON'), ('did', 'AUX'), ('n’t', 'PART'), ('understand', 'VERB'), ('what', 'PRON'), ('you', 'PRON'), ('said', 'VERB'), ('...', 'PUNCT'), ('please', 'INTJ'), ('wait', 'VERB'), ('for', 'ADP'), ('the', 'DET'), ('next', 'ADJ'), ('available', 'ADJ'), ('agent', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('I', 'PRP'), ('’m', 'VBP'), ('sorry', 'JJ'), (',', ','), ('I', 'PRP'), ('did', 'VBD'), ('n’t', 'RB'), ('understand', 'VB'), ('what', 'WP'), ('you', 'PRP'), ('said', 'VBD'), ('...', ','), ('please', 'UH'), ('wait', 'VB'), ('for', 'IN'), ('the', 'DT'), ('next', 'JJ'), ('available', 'JJ'), ('agent', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('I', 'I'), ('’m', 'be'), ('sorry', 'sorry'), (',', ','), ('I', 'I'), ('did', 'do'), ('n’t', 'not'), ('understand', 'understand'), ('what', 'what'), ('you', 'you'), ('said', 'say'), ('...', '...'), ('please', 'please'), ('wait', 'wait'), ('for', 'for'), ('the', 'the'), ('next', 'next'), ('available', 'available'), ('agent', 'agent'), ('.', '.')] 

 Dependency tags are: 
>> [(('I', 'sorry'), 'nsubj'), (('’m', 'sorry'), 'cop'), (('sorry', 'root'), 'root'), ((',', 'sorry'), 'punct'), (('I', 'understand'), 'nsubj'), (('did', 'understand'), 'aux'), (('n’t', 'understand'), 'advmod'), (('understand', 'sorry'), 'parataxis'), (('what', 'understand'), 'obj'), (('you', 'said'), 'nsubj'), (('said', 'what'), 'acl:relcl'), (('...', 'sorry'), 'punct'), (('please', 'wait'), 'discourse'), (('wait', 'sorry'), 'parataxis'), (('for', 'agent'), 'case'), (('the', 'agent'), 'det'), (('next', 'agent'), 'amod'), (('available', 'agent'), 'amod'), (('agent', 'wait'), 'obl'), (('.', 'sorry'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 55 ===========================

 Make the translation book bigger 

Tokens are: 
>> ['Make', 'the', 'translation', 'book', 'bigger'] 

 UPOS tags are: 
>> [('Make', 'VERB'), ('the', 'DET'), ('translation', 'NOUN'), ('book', 'NOUN'), ('bigger', 'ADJ')] 

 XPOS tags are: 
>> [('Make', 'VB'), ('the', 'DT'), ('translation', 'NN'), ('book', 'NN'), ('bigger', 'JJR')] 

 Lemmas are: 
>> [('Make', 'make'), ('the', 'the'), ('translation', 'translation'), ('book', 'book'), ('bigger', 'big')] 

 Dependency tags are: 
>> [(('Make', 'root'), 'root'), (('the', 'book'), 'det'), (('translation', 'book'), 'compound'), (('book', 'Make'), 'obj'), (('bigger', 'Make'), 'xcomp')]

 Named Entities are: 
>> []

========================== Sentence 56 ===========================

 You can make the grammar contain a larger list of entries to appear like   natural language is at work. 

Tokens are: 
>> ['You', 'can', 'make', 'the', 'grammar', 'contain', 'a', 'larger', 'list', 'of', 'entries', 'to', 'appear', 'like', 'natural', 'language', 'is', 'at', 'work', '.'] 

 UPOS tags are: 
>> [('You', 'PRON'), ('can', 'AUX'), ('make', 'VERB'), ('the', 'DET'), ('grammar', 'NOUN'), ('contain', 'VERB'), ('a', 'DET'), ('larger', 'ADJ'), ('list', 'NOUN'), ('of', 'ADP'), ('entries', 'NOUN'), ('to', 'PART'), ('appear', 'VERB'), ('like', 'ADP'), ('natural', 'ADJ'), ('language', 'NOUN'), ('is', 'AUX'), ('at', 'ADP'), ('work', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('You', 'PRP'), ('can', 'MD'), ('make', 'VB'), ('the', 'DT'), ('grammar', 'NN'), ('contain', 'VB'), ('a', 'DT'), ('larger', 'JJR'), ('list', 'NN'), ('of', 'IN'), ('entries', 'NNS'), ('to', 'TO'), ('appear', 'VB'), ('like', 'IN'), ('natural', 'JJ'), ('language', 'NN'), ('is', 'VBZ'), ('at', 'IN'), ('work', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('You', 'you'), ('can', 'can'), ('make', 'make'), ('the', 'the'), ('grammar', 'grammar'), ('contain', 'contain'), ('a', 'a'), ('larger', 'large'), ('list', 'list'), ('of', 'of'), ('entries', 'entry'), ('to', 'to'), ('appear', 'appear'), ('like', 'like'), ('natural', 'natural'), ('language', 'language'), ('is', 'be'), ('at', 'at'), ('work', 'work'), ('.', '.')] 

 Dependency tags are: 
>> [(('You', 'make'), 'nsubj'), (('can', 'make'), 'aux'), (('make', 'root'), 'root'), (('the', 'grammar'), 'det'), (('grammar', 'make'), 'obj'), (('contain', 'make'), 'xcomp'), (('a', 'list'), 'det'), (('larger', 'list'), 'amod'), (('list', 'contain'), 'obj'), (('of', 'entries'), 'case'), (('entries', 'list'), 'nmod'), (('to', 'appear'), 'mark'), (('appear', 'entries'), 'acl'), (('like', 'language'), 'case'), (('natural', 'language'), 'amod'), (('language', 'appear'), 'obl'), (('is', 'work'), 'cop'), (('at', 'work'), 'case'), (('work', 'appear'), 'obl'), (('.', 'make'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 57 ===========================

 This works best when trying to pick between  a limited number of responses – for instance, a confirmation dialog may  recognize yes, yup, you betcha, sure, heck yeah, as well as many other  variations of a positive response. 

Tokens are: 
>> ['This', 'works', 'best', 'when', 'trying', 'to', 'pick', 'between', 'a', 'limited', 'number', 'of', 'responses', '–', 'for', 'instance', ',', 'a', 'confirmation', 'dialog', 'may', 'recognize', 'yes', ',', 'yup', ',', 'you', 'betcha', ',', 'sure', ',', 'heck', 'yeah', ',', 'as', 'well', 'as', 'many', 'other', 'variations', 'of', 'a', 'positive', 'response', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('works', 'VERB'), ('best', 'ADJ'), ('when', 'SCONJ'), ('trying', 'VERB'), ('to', 'PART'), ('pick', 'VERB'), ('between', 'ADP'), ('a', 'DET'), ('limited', 'ADJ'), ('number', 'NOUN'), ('of', 'ADP'), ('responses', 'NOUN'), ('–', 'PUNCT'), ('for', 'ADP'), ('instance', 'NOUN'), (',', 'PUNCT'), ('a', 'DET'), ('confirmation', 'NOUN'), ('dialog', 'NOUN'), ('may', 'AUX'), ('recognize', 'VERB'), ('yes', 'INTJ'), (',', 'PUNCT'), ('yup', 'INTJ'), (',', 'PUNCT'), ('you', 'PRON'), ('betcha', 'VERB'), (',', 'PUNCT'), ('sure', 'ADJ'), (',', 'PUNCT'), ('heck', 'INTJ'), ('yeah', 'INTJ'), (',', 'PUNCT'), ('as', 'ADV'), ('well', 'ADV'), ('as', 'ADP'), ('many', 'ADJ'), ('other', 'ADJ'), ('variations', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('positive', 'ADJ'), ('response', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('works', 'VBZ'), ('best', 'JJS'), ('when', 'WRB'), ('trying', 'VBG'), ('to', 'TO'), ('pick', 'VB'), ('between', 'IN'), ('a', 'DT'), ('limited', 'JJ'), ('number', 'NN'), ('of', 'IN'), ('responses', 'NNS'), ('–', ':'), ('for', 'IN'), ('instance', 'NN'), (',', ','), ('a', 'DT'), ('confirmation', 'NN'), ('dialog', 'NN'), ('may', 'MD'), ('recognize', 'VB'), ('yes', 'UH'), (',', ','), ('yup', 'UH'), (',', ','), ('you', 'PRP'), ('betcha', 'VBP'), (',', ','), ('sure', 'JJ'), (',', ','), ('heck', 'UH'), ('yeah', 'UH'), (',', ','), ('as', 'RB'), ('well', 'RB'), ('as', 'IN'), ('many', 'JJ'), ('other', 'JJ'), ('variations', 'NNS'), ('of', 'IN'), ('a', 'DT'), ('positive', 'JJ'), ('response', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('works', 'work'), ('best', 'good'), ('when', 'when'), ('trying', 'try'), ('to', 'to'), ('pick', 'pick'), ('between', 'between'), ('a', 'a'), ('limited', 'limited'), ('number', 'number'), ('of', 'of'), ('responses', 'response'), ('–', '-'), ('for', 'for'), ('instance', 'instance'), (',', ','), ('a', 'a'), ('confirmation', 'confirmation'), ('dialog', 'dialog'), ('may', 'may'), ('recognize', 'recognize'), ('yes', 'yes'), (',', ','), ('yup', 'yup'), (',', ','), ('you', 'you'), ('betcha', 'betch'), (',', ','), ('sure', 'sure'), (',', ','), ('heck', 'heck'), ('yeah', 'yeah'), (',', ','), ('as', 'as'), ('well', 'well'), ('as', 'as'), ('many', 'many'), ('other', 'other'), ('variations', 'variation'), ('of', 'of'), ('a', 'a'), ('positive', 'positive'), ('response', 'response'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'works'), 'nsubj'), (('works', 'root'), 'root'), (('best', 'works'), 'xcomp'), (('when', 'trying'), 'mark'), (('trying', 'works'), 'advcl'), (('to', 'pick'), 'mark'), (('pick', 'trying'), 'xcomp'), (('between', 'number'), 'case'), (('a', 'number'), 'det'), (('limited', 'number'), 'amod'), (('number', 'pick'), 'obl'), (('of', 'responses'), 'case'), (('responses', 'number'), 'nmod'), (('–', 'recognize'), 'punct'), (('for', 'instance'), 'case'), (('instance', 'recognize'), 'obl'), ((',', 'instance'), 'punct'), (('a', 'dialog'), 'det'), (('confirmation', 'dialog'), 'compound'), (('dialog', 'recognize'), 'nsubj'), (('may', 'recognize'), 'aux'), (('recognize', 'works'), 'parataxis'), (('yes', 'recognize'), 'discourse'), ((',', 'yup'), 'punct'), (('yup', 'sure'), 'discourse'), ((',', 'yup'), 'punct'), (('you', 'betcha'), 'nsubj'), (('betcha', 'recognize'), 'parataxis'), ((',', 'betcha'), 'punct'), (('sure', 'recognize'), 'parataxis'), ((',', 'heck'), 'punct'), (('heck', 'variations'), 'discourse'), (('yeah', 'variations'), 'discourse'), ((',', 'variations'), 'punct'), (('as', 'variations'), 'cc'), (('well', 'as'), 'fixed'), (('as', 'as'), 'fixed'), (('many', 'variations'), 'amod'), (('other', 'variations'), 'amod'), (('variations', 'sure'), 'conj'), (('of', 'response'), 'case'), (('a', 'response'), 'det'), (('positive', 'response'), 'amod'), (('response', 'variations'), 'nmod'), (('.', 'works'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 58 ===========================

 This straightforward, brute-force technique can provide a semblance of  natural language understanding. 

Tokens are: 
>> ['This', 'straightforward', ',', 'brute', '-', 'force', 'technique', 'can', 'provide', 'a', 'semblance', 'of', 'natural', 'language', 'understanding', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('straightforward', 'ADJ'), (',', 'PUNCT'), ('brute', 'ADJ'), ('-', 'PUNCT'), ('force', 'NOUN'), ('technique', 'NOUN'), ('can', 'AUX'), ('provide', 'VERB'), ('a', 'DET'), ('semblance', 'NOUN'), ('of', 'ADP'), ('natural', 'ADJ'), ('language', 'NOUN'), ('understanding', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('straightforward', 'JJ'), (',', ','), ('brute', 'JJ'), ('-', 'HYPH'), ('force', 'NN'), ('technique', 'NN'), ('can', 'MD'), ('provide', 'VB'), ('a', 'DT'), ('semblance', 'NN'), ('of', 'IN'), ('natural', 'JJ'), ('language', 'NN'), ('understanding', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('straightforward', 'straightforward'), (',', ','), ('brute', 'brute'), ('-', '-'), ('force', 'force'), ('technique', 'technique'), ('can', 'can'), ('provide', 'provide'), ('a', 'a'), ('semblance', 'semblance'), ('of', 'of'), ('natural', 'natural'), ('language', 'language'), ('understanding', 'understanding'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'technique'), 'det'), (('straightforward', 'technique'), 'amod'), ((',', 'technique'), 'punct'), (('brute', 'force'), 'amod'), (('-', 'force'), 'punct'), (('force', 'technique'), 'compound'), (('technique', 'provide'), 'nsubj'), (('can', 'provide'), 'aux'), (('provide', 'root'), 'root'), (('a', 'semblance'), 'det'), (('semblance', 'provide'), 'obj'), (('of', 'understanding'), 'case'), (('natural', 'understanding'), 'amod'), (('language', 'understanding'), 'compound'), (('understanding', 'semblance'), 'nmod'), (('.', 'provide'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 59 ===========================

 However, the approach has significant  drawbacks as the list of possible responses gets longer and longer. 

Tokens are: 
>> ['However', ',', 'the', 'approach', 'has', 'significant', 'drawbacks', 'as', 'the', 'list', 'of', 'possible', 'responses', 'gets', 'longer', 'and', 'longer', '.'] 

 UPOS tags are: 
>> [('However', 'ADV'), (',', 'PUNCT'), ('the', 'DET'), ('approach', 'NOUN'), ('has', 'VERB'), ('significant', 'ADJ'), ('drawbacks', 'NOUN'), ('as', 'SCONJ'), ('the', 'DET'), ('list', 'NOUN'), ('of', 'ADP'), ('possible', 'ADJ'), ('responses', 'NOUN'), ('gets', 'VERB'), ('longer', 'ADV'), ('and', 'CCONJ'), ('longer', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('However', 'RB'), (',', ','), ('the', 'DT'), ('approach', 'NN'), ('has', 'VBZ'), ('significant', 'JJ'), ('drawbacks', 'NNS'), ('as', 'IN'), ('the', 'DT'), ('list', 'NN'), ('of', 'IN'), ('possible', 'JJ'), ('responses', 'NNS'), ('gets', 'VBZ'), ('longer', 'RBR'), ('and', 'CC'), ('longer', 'RBR'), ('.', '.')] 

 Lemmas are: 
>> [('However', 'however'), (',', ','), ('the', 'the'), ('approach', 'approach'), ('has', 'have'), ('significant', 'significant'), ('drawbacks', 'drawback'), ('as', 'as'), ('the', 'the'), ('list', 'list'), ('of', 'of'), ('possible', 'possible'), ('responses', 'response'), ('gets', 'get'), ('longer', 'long'), ('and', 'and'), ('longer', 'long'), ('.', '.')] 

 Dependency tags are: 
>> [(('However', 'has'), 'advmod'), ((',', 'has'), 'punct'), (('the', 'approach'), 'det'), (('approach', 'has'), 'nsubj'), (('has', 'root'), 'root'), (('significant', 'drawbacks'), 'amod'), (('drawbacks', 'has'), 'obj'), (('as', 'gets'), 'mark'), (('the', 'list'), 'det'), (('list', 'gets'), 'nsubj'), (('of', 'responses'), 'case'), (('possible', 'responses'), 'amod'), (('responses', 'list'), 'nmod'), (('gets', 'has'), 'advcl'), (('longer', 'gets'), 'advmod'), (('and', 'longer'), 'cc'), (('longer', 'longer'), 'conj'), (('.', 'has'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 60 ===========================

 It  becomes harder to tune and maintain a system while keeping track of all  these options. 

Tokens are: 
>> ['It', 'becomes', 'harder', 'to', 'tune', 'and', 'maintain', 'a', 'system', 'while', 'keeping', 'track', 'of', 'all', 'these', 'options', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('becomes', 'VERB'), ('harder', 'ADJ'), ('to', 'PART'), ('tune', 'VERB'), ('and', 'CCONJ'), ('maintain', 'VERB'), ('a', 'DET'), ('system', 'NOUN'), ('while', 'SCONJ'), ('keeping', 'VERB'), ('track', 'NOUN'), ('of', 'ADP'), ('all', 'DET'), ('these', 'DET'), ('options', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('becomes', 'VBZ'), ('harder', 'JJR'), ('to', 'TO'), ('tune', 'VB'), ('and', 'CC'), ('maintain', 'VB'), ('a', 'DT'), ('system', 'NN'), ('while', 'IN'), ('keeping', 'VBG'), ('track', 'NN'), ('of', 'IN'), ('all', 'PDT'), ('these', 'DT'), ('options', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('becomes', 'become'), ('harder', 'hard'), ('to', 'to'), ('tune', 'tune'), ('and', 'and'), ('maintain', 'maintain'), ('a', 'a'), ('system', 'system'), ('while', 'while'), ('keeping', 'keep'), ('track', 'track'), ('of', 'of'), ('all', 'all'), ('these', 'this'), ('options', 'option'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'becomes'), 'expl'), (('becomes', 'root'), 'root'), (('harder', 'becomes'), 'xcomp'), (('to', 'tune'), 'mark'), (('tune', 'harder'), 'xcomp'), (('and', 'maintain'), 'cc'), (('maintain', 'tune'), 'conj'), (('a', 'system'), 'det'), (('system', 'maintain'), 'obj'), (('while', 'keeping'), 'mark'), (('keeping', 'maintain'), 'advcl'), (('track', 'keeping'), 'obj'), (('of', 'options'), 'case'), (('all', 'options'), 'det:predet'), (('these', 'options'), 'det'), (('options', 'track'), 'nmod'), (('.', 'becomes'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 61 ===========================

 Even worse, it is possible for the overall performance of the  system to decrease as the recognition engine struggles to compare the  caller’s response to such a potentially confusing list of phrases. 

Tokens are: 
>> ['Even', 'worse', ',', 'it', 'is', 'possible', 'for', 'the', 'overall', 'performance', 'of', 'the', 'system', 'to', 'decrease', 'as', 'the', 'recognition', 'engine', 'struggles', 'to', 'compare', 'the', 'caller', '’s', 'response', 'to', 'such', 'a', 'potentially', 'confusing', 'list', 'of', 'phrases', '.'] 

 UPOS tags are: 
>> [('Even', 'ADV'), ('worse', 'ADJ'), (',', 'PUNCT'), ('it', 'PRON'), ('is', 'AUX'), ('possible', 'ADJ'), ('for', 'ADP'), ('the', 'DET'), ('overall', 'ADJ'), ('performance', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('system', 'NOUN'), ('to', 'PART'), ('decrease', 'VERB'), ('as', 'SCONJ'), ('the', 'DET'), ('recognition', 'NOUN'), ('engine', 'NOUN'), ('struggles', 'VERB'), ('to', 'PART'), ('compare', 'VERB'), ('the', 'DET'), ('caller', 'NOUN'), ('’s', 'PART'), ('response', 'NOUN'), ('to', 'ADP'), ('such', 'DET'), ('a', 'DET'), ('potentially', 'ADV'), ('confusing', 'ADJ'), ('list', 'NOUN'), ('of', 'ADP'), ('phrases', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Even', 'RB'), ('worse', 'JJR'), (',', ','), ('it', 'PRP'), ('is', 'VBZ'), ('possible', 'JJ'), ('for', 'IN'), ('the', 'DT'), ('overall', 'JJ'), ('performance', 'NN'), ('of', 'IN'), ('the', 'DT'), ('system', 'NN'), ('to', 'TO'), ('decrease', 'VB'), ('as', 'IN'), ('the', 'DT'), ('recognition', 'NN'), ('engine', 'NN'), ('struggles', 'VBZ'), ('to', 'TO'), ('compare', 'VB'), ('the', 'DT'), ('caller', 'NN'), ('’s', 'POS'), ('response', 'NN'), ('to', 'IN'), ('such', 'PDT'), ('a', 'DT'), ('potentially', 'RB'), ('confusing', 'JJ'), ('list', 'NN'), ('of', 'IN'), ('phrases', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Even', 'even'), ('worse', 'bad'), (',', ','), ('it', 'it'), ('is', 'be'), ('possible', 'possible'), ('for', 'for'), ('the', 'the'), ('overall', 'overall'), ('performance', 'performance'), ('of', 'of'), ('the', 'the'), ('system', 'system'), ('to', 'to'), ('decrease', 'decrease'), ('as', 'as'), ('the', 'the'), ('recognition', 'recognition'), ('engine', 'engine'), ('struggles', 'struggle'), ('to', 'to'), ('compare', 'compare'), ('the', 'the'), ('caller', 'caller'), ('’s', "'s"), ('response', 'response'), ('to', 'to'), ('such', 'such'), ('a', 'a'), ('potentially', 'potentially'), ('confusing', 'confusing'), ('list', 'list'), ('of', 'of'), ('phrases', 'phrase'), ('.', '.')] 

 Dependency tags are: 
>> [(('Even', 'worse'), 'advmod'), (('worse', 'possible'), 'advcl'), ((',', 'worse'), 'punct'), (('it', 'possible'), 'expl'), (('is', 'possible'), 'cop'), (('possible', 'root'), 'root'), (('for', 'performance'), 'case'), (('the', 'performance'), 'det'), (('overall', 'performance'), 'amod'), (('performance', 'possible'), 'obl'), (('of', 'system'), 'case'), (('the', 'system'), 'det'), (('system', 'performance'), 'nmod'), (('to', 'decrease'), 'mark'), (('decrease', 'possible'), 'csubj'), (('as', 'struggles'), 'mark'), (('the', 'engine'), 'det'), (('recognition', 'engine'), 'compound'), (('engine', 'struggles'), 'nsubj'), (('struggles', 'decrease'), 'advcl'), (('to', 'compare'), 'mark'), (('compare', 'struggles'), 'advcl'), (('the', 'caller'), 'det'), (('caller', 'response'), 'nmod:poss'), (('’s', 'caller'), 'case'), (('response', 'compare'), 'obj'), (('to', 'list'), 'case'), (('such', 'list'), 'det:predet'), (('a', 'list'), 'det'), (('potentially', 'confusing'), 'advmod'), (('confusing', 'list'), 'amod'), (('list', 'compare'), 'obl'), (('of', 'phrases'), 'case'), (('phrases', 'list'), 'nmod'), (('.', 'possible'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 62 ===========================

 The reality is that it is impossible to foresee and capture every conceivable  response variant even in a very large grammar. 

Tokens are: 
>> ['The', 'reality', 'is', 'that', 'it', 'is', 'impossible', 'to', 'foresee', 'and', 'capture', 'every', 'conceivable', 'response', 'variant', 'even', 'in', 'a', 'very', 'large', 'grammar', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('reality', 'NOUN'), ('is', 'VERB'), ('that', 'SCONJ'), ('it', 'PRON'), ('is', 'AUX'), ('impossible', 'ADJ'), ('to', 'PART'), ('foresee', 'VERB'), ('and', 'CCONJ'), ('capture', 'VERB'), ('every', 'DET'), ('conceivable', 'ADJ'), ('response', 'NOUN'), ('variant', 'NOUN'), ('even', 'ADV'), ('in', 'ADP'), ('a', 'DET'), ('very', 'ADV'), ('large', 'ADJ'), ('grammar', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('reality', 'NN'), ('is', 'VBZ'), ('that', 'IN'), ('it', 'PRP'), ('is', 'VBZ'), ('impossible', 'JJ'), ('to', 'TO'), ('foresee', 'VB'), ('and', 'CC'), ('capture', 'VB'), ('every', 'DT'), ('conceivable', 'JJ'), ('response', 'NN'), ('variant', 'NN'), ('even', 'RB'), ('in', 'IN'), ('a', 'DT'), ('very', 'RB'), ('large', 'JJ'), ('grammar', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('reality', 'reality'), ('is', 'be'), ('that', 'that'), ('it', 'it'), ('is', 'be'), ('impossible', 'impossible'), ('to', 'to'), ('foresee', 'foresee'), ('and', 'and'), ('capture', 'capture'), ('every', 'every'), ('conceivable', 'conceivable'), ('response', 'response'), ('variant', 'variant'), ('even', 'even'), ('in', 'in'), ('a', 'a'), ('very', 'very'), ('large', 'large'), ('grammar', 'grammar'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'reality'), 'det'), (('reality', 'is'), 'nsubj'), (('is', 'root'), 'root'), (('that', 'impossible'), 'mark'), (('it', 'impossible'), 'expl'), (('is', 'impossible'), 'cop'), (('impossible', 'is'), 'ccomp'), (('to', 'foresee'), 'mark'), (('foresee', 'impossible'), 'csubj'), (('and', 'capture'), 'cc'), (('capture', 'foresee'), 'conj'), (('every', 'variant'), 'det'), (('conceivable', 'variant'), 'amod'), (('response', 'variant'), 'compound'), (('variant', 'capture'), 'obj'), (('even', 'grammar'), 'advmod'), (('in', 'grammar'), 'case'), (('a', 'grammar'), 'det'), (('very', 'large'), 'advmod'), (('large', 'grammar'), 'amod'), (('grammar', 'capture'), 'obl'), (('.', 'is'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 63 ===========================

 To learn to speak customer-  ese, the self-service system needs more natural language capabilities. 

Tokens are: 
>> ['To', 'learn', 'to', 'speak', 'customer', '-', 'ese', ',', 'the', 'self', '-', 'service', 'system', 'needs', 'more', 'natural', 'language', 'capabilities', '.'] 

 UPOS tags are: 
>> [('To', 'PART'), ('learn', 'VERB'), ('to', 'PART'), ('speak', 'VERB'), ('customer', 'NOUN'), ('-', 'PUNCT'), ('ese', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('self', 'NOUN'), ('-', 'PUNCT'), ('service', 'NOUN'), ('system', 'NOUN'), ('needs', 'VERB'), ('more', 'ADV'), ('natural', 'ADJ'), ('language', 'NOUN'), ('capabilities', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('To', 'TO'), ('learn', 'VB'), ('to', 'TO'), ('speak', 'VB'), ('customer', 'NN'), ('-', 'HYPH'), ('ese', 'NN'), (',', ','), ('the', 'DT'), ('self', 'NN'), ('-', 'HYPH'), ('service', 'NN'), ('system', 'NN'), ('needs', 'VBZ'), ('more', 'RBR'), ('natural', 'JJ'), ('language', 'NN'), ('capabilities', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('To', 'to'), ('learn', 'learn'), ('to', 'to'), ('speak', 'speak'), ('customer', 'customer'), ('-', '-'), ('ese', 'ese'), (',', ','), ('the', 'the'), ('self', 'self'), ('-', '-'), ('service', 'service'), ('system', 'system'), ('needs', 'need'), ('more', 'more'), ('natural', 'natural'), ('language', 'language'), ('capabilities', 'capability'), ('.', '.')] 

 Dependency tags are: 
>> [(('To', 'learn'), 'mark'), (('learn', 'needs'), 'advcl'), (('to', 'speak'), 'mark'), (('speak', 'learn'), 'xcomp'), (('customer', 'ese'), 'compound'), (('-', 'ese'), 'punct'), (('ese', 'speak'), 'obj'), ((',', 'needs'), 'punct'), (('the', 'system'), 'det'), (('self', 'service'), 'compound'), (('-', 'service'), 'punct'), (('service', 'system'), 'compound'), (('system', 'needs'), 'nsubj'), (('needs', 'root'), 'root'), (('more', 'natural'), 'advmod'), (('natural', 'capabilities'), 'amod'), (('language', 'capabilities'), 'compound'), (('capabilities', 'needs'), 'obj'), (('.', 'needs'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 64 ===========================

 Learn to recognize variations of phrases Since every caller expresses themselves in a unique manner, often adding  extraneous information to their response, focusing on recognizing certain  keywords is another approach for avoiding out-of-grammar errors and  achieving higher automation rates. 

Tokens are: 
>> ['Learn', 'to', 'recognize', 'variations', 'of', 'phrases', 'Since', 'every', 'caller', 'expresses', 'themselves', 'in', 'a', 'unique', 'manner', ',', 'often', 'adding', 'extraneous', 'information', 'to', 'their', 'response', ',', 'focusing', 'on', 'recognizing', 'certain', 'keywords', 'is', 'another', 'approach', 'for', 'avoiding', 'out', '-', 'of', '-', 'grammar', 'errors', 'and', 'achieving', 'higher', 'automation', 'rates', '.'] 

 UPOS tags are: 
>> [('Learn', 'VERB'), ('to', 'PART'), ('recognize', 'VERB'), ('variations', 'NOUN'), ('of', 'ADP'), ('phrases', 'NOUN'), ('Since', 'SCONJ'), ('every', 'DET'), ('caller', 'NOUN'), ('expresses', 'VERB'), ('themselves', 'PRON'), ('in', 'ADP'), ('a', 'DET'), ('unique', 'ADJ'), ('manner', 'NOUN'), (',', 'PUNCT'), ('often', 'ADV'), ('adding', 'VERB'), ('extraneous', 'ADJ'), ('information', 'NOUN'), ('to', 'ADP'), ('their', 'PRON'), ('response', 'NOUN'), (',', 'PUNCT'), ('focusing', 'VERB'), ('on', 'SCONJ'), ('recognizing', 'VERB'), ('certain', 'ADJ'), ('keywords', 'NOUN'), ('is', 'AUX'), ('another', 'DET'), ('approach', 'NOUN'), ('for', 'SCONJ'), ('avoiding', 'VERB'), ('out', 'ADP'), ('-', 'PUNCT'), ('of', 'ADP'), ('-', 'PUNCT'), ('grammar', 'NOUN'), ('errors', 'NOUN'), ('and', 'CCONJ'), ('achieving', 'VERB'), ('higher', 'ADJ'), ('automation', 'NOUN'), ('rates', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Learn', 'VB'), ('to', 'TO'), ('recognize', 'VB'), ('variations', 'NNS'), ('of', 'IN'), ('phrases', 'NNS'), ('Since', 'IN'), ('every', 'DT'), ('caller', 'NN'), ('expresses', 'VBZ'), ('themselves', 'PRP'), ('in', 'IN'), ('a', 'DT'), ('unique', 'JJ'), ('manner', 'NN'), (',', ','), ('often', 'RB'), ('adding', 'VBG'), ('extraneous', 'JJ'), ('information', 'NN'), ('to', 'IN'), ('their', 'PRP$'), ('response', 'NN'), (',', ','), ('focusing', 'VBG'), ('on', 'IN'), ('recognizing', 'VBG'), ('certain', 'JJ'), ('keywords', 'NNS'), ('is', 'VBZ'), ('another', 'DT'), ('approach', 'NN'), ('for', 'IN'), ('avoiding', 'VBG'), ('out', 'RP'), ('-', 'HYPH'), ('of', 'IN'), ('-', 'HYPH'), ('grammar', 'NN'), ('errors', 'NNS'), ('and', 'CC'), ('achieving', 'VBG'), ('higher', 'JJR'), ('automation', 'NN'), ('rates', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Learn', 'learn'), ('to', 'to'), ('recognize', 'recognize'), ('variations', 'variation'), ('of', 'of'), ('phrases', 'phrase'), ('Since', 'since'), ('every', 'every'), ('caller', 'caller'), ('expresses', 'express'), ('themselves', 'themselves'), ('in', 'in'), ('a', 'a'), ('unique', 'unique'), ('manner', 'manner'), (',', ','), ('often', 'often'), ('adding', 'add'), ('extraneous', 'extraneous'), ('information', 'information'), ('to', 'to'), ('their', 'they'), ('response', 'response'), (',', ','), ('focusing', 'focus'), ('on', 'on'), ('recognizing', 'recognize'), ('certain', 'certain'), ('keywords', 'keyword'), ('is', 'be'), ('another', 'another'), ('approach', 'approach'), ('for', 'for'), ('avoiding', 'avoid'), ('out', 'out'), ('-', '-'), ('of', 'of'), ('-', '-'), ('grammar', 'grammar'), ('errors', 'error'), ('and', 'and'), ('achieving', 'achieve'), ('higher', 'high'), ('automation', 'automation'), ('rates', 'rate'), ('.', '.')] 

 Dependency tags are: 
>> [(('Learn', 'root'), 'root'), (('to', 'recognize'), 'mark'), (('recognize', 'Learn'), 'xcomp'), (('variations', 'recognize'), 'obj'), (('of', 'phrases'), 'case'), (('phrases', 'variations'), 'nmod'), (('Since', 'expresses'), 'mark'), (('every', 'caller'), 'det'), (('caller', 'expresses'), 'nsubj'), (('expresses', 'recognize'), 'advcl'), (('themselves', 'expresses'), 'obj'), (('in', 'manner'), 'case'), (('a', 'manner'), 'det'), (('unique', 'manner'), 'amod'), (('manner', 'expresses'), 'obl'), ((',', 'adding'), 'punct'), (('often', 'adding'), 'advmod'), (('adding', 'expresses'), 'advcl'), (('extraneous', 'information'), 'amod'), (('information', 'adding'), 'obj'), (('to', 'response'), 'case'), (('their', 'response'), 'nmod:poss'), (('response', 'adding'), 'obl'), ((',', 'approach'), 'punct'), (('focusing', 'adding'), 'advcl'), (('on', 'recognizing'), 'mark'), (('recognizing', 'focusing'), 'advcl'), (('certain', 'keywords'), 'amod'), (('keywords', 'recognizing'), 'obj'), (('is', 'approach'), 'cop'), (('another', 'approach'), 'det'), (('approach', 'focusing'), 'ccomp'), (('for', 'avoiding'), 'mark'), (('avoiding', 'approach'), 'acl'), (('out', 'avoiding'), 'compound:prt'), (('-', 'grammar'), 'punct'), (('of', 'grammar'), 'case'), (('-', 'grammar'), 'punct'), (('grammar', 'errors'), 'compound'), (('errors', 'avoiding'), 'obj'), (('and', 'achieving'), 'cc'), (('achieving', 'avoiding'), 'conj'), (('higher', 'rates'), 'amod'), (('automation', 'rates'), 'compound'), (('rates', 'achieving'), 'obj'), (('.', 'Learn'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 65 ===========================

 Keyword spotting, sometimes referred to as robust parsing, is used when a  caller says what the system is expecting but surrounds their response with  filler phrases. 

Tokens are: 
>> ['Keyword', 'spotting', ',', 'sometimes', 'referred', 'to', 'as', 'robust', 'parsing', ',', 'is', 'used', 'when', 'a', 'caller', 'says', 'what', 'the', 'system', 'is', 'expecting', 'but', 'surrounds', 'their', 'response', 'with', 'filler', 'phrases', '.'] 

 UPOS tags are: 
>> [('Keyword', 'NOUN'), ('spotting', 'NOUN'), (',', 'PUNCT'), ('sometimes', 'ADV'), ('referred', 'VERB'), ('to', 'ADP'), ('as', 'ADP'), ('robust', 'ADJ'), ('parsing', 'NOUN'), (',', 'PUNCT'), ('is', 'AUX'), ('used', 'VERB'), ('when', 'SCONJ'), ('a', 'DET'), ('caller', 'NOUN'), ('says', 'VERB'), ('what', 'PRON'), ('the', 'DET'), ('system', 'NOUN'), ('is', 'AUX'), ('expecting', 'VERB'), ('but', 'CCONJ'), ('surrounds', 'VERB'), ('their', 'PRON'), ('response', 'NOUN'), ('with', 'ADP'), ('filler', 'NOUN'), ('phrases', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Keyword', 'NN'), ('spotting', 'NN'), (',', ','), ('sometimes', 'RB'), ('referred', 'VBN'), ('to', 'IN'), ('as', 'IN'), ('robust', 'JJ'), ('parsing', 'NN'), (',', ','), ('is', 'VBZ'), ('used', 'VBN'), ('when', 'WRB'), ('a', 'DT'), ('caller', 'NN'), ('says', 'VBZ'), ('what', 'WP'), ('the', 'DT'), ('system', 'NN'), ('is', 'VBZ'), ('expecting', 'VBG'), ('but', 'CC'), ('surrounds', 'VBZ'), ('their', 'PRP$'), ('response', 'NN'), ('with', 'IN'), ('filler', 'NN'), ('phrases', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Keyword', 'keyword'), ('spotting', 'spotting'), (',', ','), ('sometimes', 'sometimes'), ('referred', 'refer'), ('to', 'to'), ('as', 'as'), ('robust', 'robust'), ('parsing', 'parsing'), (',', ','), ('is', 'be'), ('used', 'use'), ('when', 'when'), ('a', 'a'), ('caller', 'caller'), ('says', 'say'), ('what', 'what'), ('the', 'the'), ('system', 'system'), ('is', 'be'), ('expecting', 'expect'), ('but', 'but'), ('surrounds', 'surround'), ('their', 'they'), ('response', 'response'), ('with', 'with'), ('filler', 'filler'), ('phrases', 'phrase'), ('.', '.')] 

 Dependency tags are: 
>> [(('Keyword', 'spotting'), 'compound'), (('spotting', 'used'), 'nsubj:pass'), ((',', 'referred'), 'punct'), (('sometimes', 'referred'), 'advmod'), (('referred', 'spotting'), 'acl'), (('to', 'referred'), 'obl'), (('as', 'parsing'), 'case'), (('robust', 'parsing'), 'amod'), (('parsing', 'referred'), 'obl'), ((',', 'used'), 'punct'), (('is', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('when', 'says'), 'mark'), (('a', 'caller'), 'det'), (('caller', 'says'), 'nsubj'), (('says', 'used'), 'advcl'), (('what', 'says'), 'obj'), (('the', 'system'), 'det'), (('system', 'expecting'), 'nsubj'), (('is', 'expecting'), 'aux'), (('expecting', 'what'), 'acl:relcl'), (('but', 'surrounds'), 'cc'), (('surrounds', 'says'), 'conj'), (('their', 'response'), 'nmod:poss'), (('response', 'surrounds'), 'obj'), (('with', 'phrases'), 'case'), (('filler', 'phrases'), 'compound'), (('phrases', 'response'), 'nmod'), (('.', 'used'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 66 ===========================

 Instead of simply saying “Yes” they may actually say “Um, I  think so, yes”. 

Tokens are: 
>> ['Instead', 'of', 'simply', 'saying', '“', 'Yes', '”', 'they', 'may', 'actually', 'say', '“', 'Um', ',', 'I', 'think', 'so', ',', 'yes', '”', '.'] 

 UPOS tags are: 
>> [('Instead', 'ADV'), ('of', 'SCONJ'), ('simply', 'ADV'), ('saying', 'VERB'), ('“', 'PUNCT'), ('Yes', 'INTJ'), ('”', 'PUNCT'), ('they', 'PRON'), ('may', 'AUX'), ('actually', 'ADV'), ('say', 'VERB'), ('“', 'PUNCT'), ('Um', 'INTJ'), (',', 'PUNCT'), ('I', 'PRON'), ('think', 'VERB'), ('so', 'ADV'), (',', 'PUNCT'), ('yes', 'INTJ'), ('”', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Instead', 'RB'), ('of', 'IN'), ('simply', 'RB'), ('saying', 'VBG'), ('“', '``'), ('Yes', 'UH'), ('”', "''"), ('they', 'PRP'), ('may', 'MD'), ('actually', 'RB'), ('say', 'VB'), ('“', '``'), ('Um', 'UH'), (',', ','), ('I', 'PRP'), ('think', 'VBP'), ('so', 'RB'), (',', ','), ('yes', 'UH'), ('”', "''"), ('.', '.')] 

 Lemmas are: 
>> [('Instead', 'instead'), ('of', 'of'), ('simply', 'simply'), ('saying', 'say'), ('“', "''"), ('Yes', 'yes'), ('”', "''"), ('they', 'they'), ('may', 'may'), ('actually', 'actually'), ('say', 'say'), ('“', "''"), ('Um', 'um'), (',', ','), ('I', 'I'), ('think', 'think'), ('so', 'so'), (',', ','), ('yes', 'yes'), ('”', "''"), ('.', '.')] 

 Dependency tags are: 
>> [(('Instead', 'saying'), 'mark'), (('of', 'Instead'), 'fixed'), (('simply', 'saying'), 'advmod'), (('saying', 'say'), 'advcl'), (('“', 'Yes'), 'punct'), (('Yes', 'saying'), 'obj'), (('”', 'Yes'), 'punct'), (('they', 'say'), 'nsubj'), (('may', 'say'), 'aux'), (('actually', 'say'), 'advmod'), (('say', 'root'), 'root'), (('“', 'think'), 'punct'), (('Um', 'think'), 'discourse'), ((',', 'think'), 'punct'), (('I', 'think'), 'nsubj'), (('think', 'say'), 'ccomp'), (('so', 'think'), 'advmod'), ((',', 'yes'), 'punct'), (('yes', 'think'), 'discourse'), (('”', 'think'), 'punct'), (('.', 'say'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 67 ===========================

 The keyword spotting approach is most effective with short  menus and yes/no dialogs which typically account for more than 70% of  speech-enabled application interactions. 

Tokens are: 
>> ['The', 'keyword', 'spotting', 'approach', 'is', 'most', 'effective', 'with', 'short', 'menus', 'and', 'yes', '/', 'no', 'dialogs', 'which', 'typically', 'account', 'for', 'more', 'than', '70', '%', 'of', 'speech', '-', 'enabled', 'application', 'interactions', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('keyword', 'NOUN'), ('spotting', 'NOUN'), ('approach', 'NOUN'), ('is', 'AUX'), ('most', 'ADV'), ('effective', 'ADJ'), ('with', 'ADP'), ('short', 'ADJ'), ('menus', 'NOUN'), ('and', 'CCONJ'), ('yes', 'INTJ'), ('/', 'SYM'), ('no', 'DET'), ('dialogs', 'NOUN'), ('which', 'PRON'), ('typically', 'ADV'), ('account', 'VERB'), ('for', 'ADP'), ('more', 'ADJ'), ('than', 'ADP'), ('70', 'NUM'), ('%', 'SYM'), ('of', 'ADP'), ('speech', 'NOUN'), ('-', 'PUNCT'), ('enabled', 'VERB'), ('application', 'NOUN'), ('interactions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('keyword', 'NN'), ('spotting', 'NN'), ('approach', 'NN'), ('is', 'VBZ'), ('most', 'RBS'), ('effective', 'JJ'), ('with', 'IN'), ('short', 'JJ'), ('menus', 'NNS'), ('and', 'CC'), ('yes', 'UH'), ('/', ','), ('no', 'DT'), ('dialogs', 'NNS'), ('which', 'WDT'), ('typically', 'RB'), ('account', 'VBP'), ('for', 'IN'), ('more', 'JJR'), ('than', 'IN'), ('70', 'CD'), ('%', 'NN'), ('of', 'IN'), ('speech', 'NN'), ('-', 'HYPH'), ('enabled', 'VBN'), ('application', 'NN'), ('interactions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('keyword', 'keyword'), ('spotting', 'spotting'), ('approach', 'approach'), ('is', 'be'), ('most', 'most'), ('effective', 'effective'), ('with', 'with'), ('short', 'short'), ('menus', 'menus'), ('and', 'and'), ('yes', 'yes'), ('/', '/'), ('no', 'no'), ('dialogs', 'dialog'), ('which', 'which'), ('typically', 'typically'), ('account', 'account'), ('for', 'for'), ('more', 'more'), ('than', 'than'), ('70', '70'), ('%', '%'), ('of', 'of'), ('speech', 'speech'), ('-', '-'), ('enabled', 'enable'), ('application', 'application'), ('interactions', 'interaction'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'approach'), 'det'), (('keyword', 'approach'), 'compound'), (('spotting', 'approach'), 'compound'), (('approach', 'effective'), 'nsubj'), (('is', 'effective'), 'cop'), (('most', 'effective'), 'advmod'), (('effective', 'root'), 'root'), (('with', 'menus'), 'case'), (('short', 'menus'), 'amod'), (('menus', 'effective'), 'obl'), (('and', 'dialogs'), 'cc'), (('yes', 'dialogs'), 'discourse'), (('/', 'dialogs'), 'cc'), (('no', 'dialogs'), 'det'), (('dialogs', 'menus'), 'conj'), (('which', 'account'), 'nsubj'), (('typically', 'account'), 'advmod'), (('account', 'dialogs'), 'acl:relcl'), (('for', '%'), 'case'), (('more', '70'), 'advmod'), (('than', 'more'), 'fixed'), (('70', '%'), 'nummod'), (('%', 'account'), 'obl'), (('of', 'interactions'), 'case'), (('speech', 'enabled'), 'compound'), (('-', 'enabled'), 'punct'), (('enabled', 'interactions'), 'amod'), (('application', 'interactions'), 'compound'), (('interactions', '%'), 'nmod'), (('.', 'effective'), 'punct')]

 Named Entities are: 
>> [('more than 70%', 'PERCENT')]

========================== Sentence 68 ===========================

 This statistical technique is based on comparing vocabularies of filler phrases  created from transcriptions of previous calls or from classes of common  phrases refined over time. 

Tokens are: 
>> ['This', 'statistical', 'technique', 'is', 'based', 'on', 'comparing', 'vocabularies', 'of', 'filler', 'phrases', 'created', 'from', 'transcriptions', 'of', 'previous', 'calls', 'or', 'from', 'classes', 'of', 'common', 'phrases', 'refined', 'over', 'time', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('statistical', 'ADJ'), ('technique', 'NOUN'), ('is', 'AUX'), ('based', 'VERB'), ('on', 'SCONJ'), ('comparing', 'VERB'), ('vocabularies', 'NOUN'), ('of', 'ADP'), ('filler', 'NOUN'), ('phrases', 'NOUN'), ('created', 'VERB'), ('from', 'ADP'), ('transcriptions', 'NOUN'), ('of', 'ADP'), ('previous', 'ADJ'), ('calls', 'NOUN'), ('or', 'CCONJ'), ('from', 'ADP'), ('classes', 'NOUN'), ('of', 'ADP'), ('common', 'ADJ'), ('phrases', 'NOUN'), ('refined', 'VERB'), ('over', 'ADP'), ('time', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('statistical', 'JJ'), ('technique', 'NN'), ('is', 'VBZ'), ('based', 'VBN'), ('on', 'IN'), ('comparing', 'VBG'), ('vocabularies', 'NNS'), ('of', 'IN'), ('filler', 'NN'), ('phrases', 'NNS'), ('created', 'VBN'), ('from', 'IN'), ('transcriptions', 'NNS'), ('of', 'IN'), ('previous', 'JJ'), ('calls', 'NNS'), ('or', 'CC'), ('from', 'IN'), ('classes', 'NNS'), ('of', 'IN'), ('common', 'JJ'), ('phrases', 'NNS'), ('refined', 'VBN'), ('over', 'IN'), ('time', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('statistical', 'statistical'), ('technique', 'technique'), ('is', 'be'), ('based', 'base'), ('on', 'on'), ('comparing', 'compare'), ('vocabularies', 'vocabulary'), ('of', 'of'), ('filler', 'filler'), ('phrases', 'phrase'), ('created', 'create'), ('from', 'from'), ('transcriptions', 'transcription'), ('of', 'of'), ('previous', 'previous'), ('calls', 'call'), ('or', 'or'), ('from', 'from'), ('classes', 'class'), ('of', 'of'), ('common', 'common'), ('phrases', 'phrase'), ('refined', 'refine'), ('over', 'over'), ('time', 'time'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'technique'), 'det'), (('statistical', 'technique'), 'amod'), (('technique', 'based'), 'nsubj:pass'), (('is', 'based'), 'aux:pass'), (('based', 'root'), 'root'), (('on', 'comparing'), 'mark'), (('comparing', 'based'), 'advcl'), (('vocabularies', 'comparing'), 'obj'), (('of', 'phrases'), 'case'), (('filler', 'phrases'), 'compound'), (('phrases', 'vocabularies'), 'nmod'), (('created', 'phrases'), 'acl'), (('from', 'transcriptions'), 'case'), (('transcriptions', 'created'), 'obl'), (('of', 'calls'), 'case'), (('previous', 'calls'), 'amod'), (('calls', 'transcriptions'), 'nmod'), (('or', 'classes'), 'cc'), (('from', 'classes'), 'case'), (('classes', 'transcriptions'), 'conj'), (('of', 'phrases'), 'case'), (('common', 'phrases'), 'amod'), (('phrases', 'classes'), 'nmod'), (('refined', 'phrases'), 'acl'), (('over', 'time'), 'case'), (('time', 'refined'), 'obl'), (('.', 'based'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 69 ===========================

 Applying these vocabularies can provide an  impressive 30% or more increase in recognition accuracy. 

Tokens are: 
>> ['Applying', 'these', 'vocabularies', 'can', 'provide', 'an', 'impressive', '30', '%', 'or', 'more', 'increase', 'in', 'recognition', 'accuracy', '.'] 

 UPOS tags are: 
>> [('Applying', 'VERB'), ('these', 'DET'), ('vocabularies', 'NOUN'), ('can', 'AUX'), ('provide', 'VERB'), ('an', 'DET'), ('impressive', 'ADJ'), ('30', 'NUM'), ('%', 'SYM'), ('or', 'CCONJ'), ('more', 'ADJ'), ('increase', 'NOUN'), ('in', 'ADP'), ('recognition', 'NOUN'), ('accuracy', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Applying', 'VBG'), ('these', 'DT'), ('vocabularies', 'NNS'), ('can', 'MD'), ('provide', 'VB'), ('an', 'DT'), ('impressive', 'JJ'), ('30', 'CD'), ('%', 'NN'), ('or', 'CC'), ('more', 'JJR'), ('increase', 'NN'), ('in', 'IN'), ('recognition', 'NN'), ('accuracy', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Applying', 'apply'), ('these', 'this'), ('vocabularies', 'vocabulary'), ('can', 'can'), ('provide', 'provide'), ('an', 'a'), ('impressive', 'impressive'), ('30', '30'), ('%', '%'), ('or', 'or'), ('more', 'more'), ('increase', 'increase'), ('in', 'in'), ('recognition', 'recognition'), ('accuracy', 'accuracy'), ('.', '.')] 

 Dependency tags are: 
>> [(('Applying', 'provide'), 'csubj'), (('these', 'vocabularies'), 'det'), (('vocabularies', 'Applying'), 'obj'), (('can', 'provide'), 'aux'), (('provide', 'root'), 'root'), (('an', 'increase'), 'det'), (('impressive', 'increase'), 'amod'), (('30', '%'), 'nummod'), (('%', 'increase'), 'compound'), (('or', 'more'), 'cc'), (('more', '%'), 'conj'), (('increase', 'provide'), 'obj'), (('in', 'accuracy'), 'case'), (('recognition', 'accuracy'), 'compound'), (('accuracy', 'increase'), 'nmod'), (('.', 'provide'), 'punct')]

 Named Entities are: 
>> [('30%', 'PERCENT')]

========================== Sentence 70 ===========================

 As callers have more flexibility in how they can exactly respond, the caller’s  perceived accuracy is typically very high when using keyword spotting. 

Tokens are: 
>> ['As', 'callers', 'have', 'more', 'flexibility', 'in', 'how', 'they', 'can', 'exactly', 'respond', ',', 'the', 'caller', '’s', 'perceived', 'accuracy', 'is', 'typically', 'very', 'high', 'when', 'using', 'keyword', 'spotting', '.'] 

 UPOS tags are: 
>> [('As', 'SCONJ'), ('callers', 'NOUN'), ('have', 'VERB'), ('more', 'ADJ'), ('flexibility', 'NOUN'), ('in', 'SCONJ'), ('how', 'SCONJ'), ('they', 'PRON'), ('can', 'AUX'), ('exactly', 'ADV'), ('respond', 'VERB'), (',', 'PUNCT'), ('the', 'DET'), ('caller', 'NOUN'), ('’s', 'PART'), ('perceived', 'VERB'), ('accuracy', 'NOUN'), ('is', 'AUX'), ('typically', 'ADV'), ('very', 'ADV'), ('high', 'ADJ'), ('when', 'SCONJ'), ('using', 'VERB'), ('keyword', 'NOUN'), ('spotting', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('As', 'IN'), ('callers', 'NNS'), ('have', 'VBP'), ('more', 'JJR'), ('flexibility', 'NN'), ('in', 'IN'), ('how', 'WRB'), ('they', 'PRP'), ('can', 'MD'), ('exactly', 'RB'), ('respond', 'VB'), (',', ','), ('the', 'DT'), ('caller', 'NN'), ('’s', 'POS'), ('perceived', 'VBN'), ('accuracy', 'NN'), ('is', 'VBZ'), ('typically', 'RB'), ('very', 'RB'), ('high', 'JJ'), ('when', 'WRB'), ('using', 'VBG'), ('keyword', 'NN'), ('spotting', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('As', 'as'), ('callers', 'caller'), ('have', 'have'), ('more', 'more'), ('flexibility', 'flexibility'), ('in', 'in'), ('how', 'how'), ('they', 'they'), ('can', 'can'), ('exactly', 'exactly'), ('respond', 'respond'), (',', ','), ('the', 'the'), ('caller', 'caller'), ('’s', "'s"), ('perceived', 'perceive'), ('accuracy', 'accuracy'), ('is', 'be'), ('typically', 'typically'), ('very', 'very'), ('high', 'high'), ('when', 'when'), ('using', 'use'), ('keyword', 'keyword'), ('spotting', 'spotting'), ('.', '.')] 

 Dependency tags are: 
>> [(('As', 'have'), 'mark'), (('callers', 'have'), 'nsubj'), (('have', 'high'), 'advcl'), (('more', 'flexibility'), 'amod'), (('flexibility', 'have'), 'obj'), (('in', 'respond'), 'mark'), (('how', 'flexibility'), 'nmod'), (('they', 'respond'), 'nsubj'), (('can', 'respond'), 'aux'), (('exactly', 'respond'), 'advmod'), (('respond', 'how'), 'acl:relcl'), ((',', 'high'), 'punct'), (('the', 'caller'), 'det'), (('caller', 'accuracy'), 'nmod:poss'), (('’s', 'caller'), 'case'), (('perceived', 'accuracy'), 'amod'), (('accuracy', 'high'), 'nsubj'), (('is', 'high'), 'cop'), (('typically', 'high'), 'advmod'), (('very', 'high'), 'advmod'), (('high', 'root'), 'root'), (('when', 'using'), 'mark'), (('using', 'high'), 'advcl'), (('keyword', 'spotting'), 'compound'), (('spotting', 'using'), 'obj'), (('.', 'high'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 71 ===========================

 As  with any increase in accuracy, callers also appreciate interactions that avoid  retry prompts and repeated confirmations. 

Tokens are: 
>> ['As', 'with', 'any', 'increase', 'in', 'accuracy', ',', 'callers', 'also', 'appreciate', 'interactions', 'that', 'avoid', 'retry', 'prompts', 'and', 'repeated', 'confirmations', '.'] 

 UPOS tags are: 
>> [('As', 'ADP'), ('with', 'ADP'), ('any', 'DET'), ('increase', 'NOUN'), ('in', 'ADP'), ('accuracy', 'NOUN'), (',', 'PUNCT'), ('callers', 'NOUN'), ('also', 'ADV'), ('appreciate', 'VERB'), ('interactions', 'NOUN'), ('that', 'PRON'), ('avoid', 'VERB'), ('retry', 'NOUN'), ('prompts', 'NOUN'), ('and', 'CCONJ'), ('repeated', 'VERB'), ('confirmations', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('As', 'IN'), ('with', 'IN'), ('any', 'DT'), ('increase', 'NN'), ('in', 'IN'), ('accuracy', 'NN'), (',', ','), ('callers', 'NNS'), ('also', 'RB'), ('appreciate', 'VBP'), ('interactions', 'NNS'), ('that', 'WDT'), ('avoid', 'VBP'), ('retry', 'NN'), ('prompts', 'NNS'), ('and', 'CC'), ('repeated', 'VBN'), ('confirmations', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('As', 'as'), ('with', 'with'), ('any', 'any'), ('increase', 'increase'), ('in', 'in'), ('accuracy', 'accuracy'), (',', ','), ('callers', 'caller'), ('also', 'also'), ('appreciate', 'appreciate'), ('interactions', 'interaction'), ('that', 'that'), ('avoid', 'avoid'), ('retry', 'retry'), ('prompts', 'prompt'), ('and', 'and'), ('repeated', 'repeat'), ('confirmations', 'confirmation'), ('.', '.')] 

 Dependency tags are: 
>> [(('As', 'increase'), 'case'), (('with', 'increase'), 'case'), (('any', 'increase'), 'det'), (('increase', 'appreciate'), 'obl'), (('in', 'accuracy'), 'case'), (('accuracy', 'increase'), 'nmod'), ((',', 'appreciate'), 'punct'), (('callers', 'appreciate'), 'nsubj'), (('also', 'appreciate'), 'advmod'), (('appreciate', 'root'), 'root'), (('interactions', 'appreciate'), 'obj'), (('that', 'avoid'), 'nsubj'), (('avoid', 'interactions'), 'acl:relcl'), (('retry', 'prompts'), 'compound'), (('prompts', 'avoid'), 'obj'), (('and', 'confirmations'), 'cc'), (('repeated', 'confirmations'), 'amod'), (('confirmations', 'prompts'), 'conj'), (('.', 'appreciate'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 72 ===========================

 Although the self-service system has already taken a big step towards  learning to speak customer-ese, the caller’s responses are still limited to  words that have been chosen for them rather than allowing them to use their  own words. 

Tokens are: 
>> ['Although', 'the', 'self', '-', 'service', 'system', 'has', 'already', 'taken', 'a', 'big', 'step', 'towards', 'learning', 'to', 'speak', 'customer', '-ese', ',', 'the', 'caller', '’s', 'responses', 'are', 'still', 'limited', 'to', 'words', 'that', 'have', 'been', 'chosen', 'for', 'them', 'rather', 'than', 'allowing', 'them', 'to', 'use', 'their', 'own', 'words', '.'] 

 UPOS tags are: 
>> [('Although', 'SCONJ'), ('the', 'DET'), ('self', 'NOUN'), ('-', 'PUNCT'), ('service', 'NOUN'), ('system', 'NOUN'), ('has', 'AUX'), ('already', 'ADV'), ('taken', 'VERB'), ('a', 'DET'), ('big', 'ADJ'), ('step', 'NOUN'), ('towards', 'SCONJ'), ('learning', 'VERB'), ('to', 'PART'), ('speak', 'VERB'), ('customer', 'NOUN'), ('-ese', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('caller', 'NOUN'), ('’s', 'PART'), ('responses', 'NOUN'), ('are', 'AUX'), ('still', 'ADV'), ('limited', 'VERB'), ('to', 'ADP'), ('words', 'NOUN'), ('that', 'PRON'), ('have', 'AUX'), ('been', 'AUX'), ('chosen', 'VERB'), ('for', 'ADP'), ('them', 'PRON'), ('rather', 'ADV'), ('than', 'SCONJ'), ('allowing', 'VERB'), ('them', 'PRON'), ('to', 'PART'), ('use', 'VERB'), ('their', 'PRON'), ('own', 'ADJ'), ('words', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Although', 'IN'), ('the', 'DT'), ('self', 'NN'), ('-', 'HYPH'), ('service', 'NN'), ('system', 'NN'), ('has', 'VBZ'), ('already', 'RB'), ('taken', 'VBN'), ('a', 'DT'), ('big', 'JJ'), ('step', 'NN'), ('towards', 'IN'), ('learning', 'VBG'), ('to', 'TO'), ('speak', 'VB'), ('customer', 'NN'), ('-ese', 'NN'), (',', ','), ('the', 'DT'), ('caller', 'NN'), ('’s', 'POS'), ('responses', 'NNS'), ('are', 'VBP'), ('still', 'RB'), ('limited', 'VBN'), ('to', 'IN'), ('words', 'NNS'), ('that', 'WDT'), ('have', 'VBP'), ('been', 'VBN'), ('chosen', 'VBN'), ('for', 'IN'), ('them', 'PRP'), ('rather', 'RB'), ('than', 'IN'), ('allowing', 'VBG'), ('them', 'PRP'), ('to', 'TO'), ('use', 'VB'), ('their', 'PRP$'), ('own', 'JJ'), ('words', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Although', 'although'), ('the', 'the'), ('self', 'self'), ('-', '-'), ('service', 'service'), ('system', 'system'), ('has', 'have'), ('already', 'already'), ('taken', 'take'), ('a', 'a'), ('big', 'big'), ('step', 'step'), ('towards', 'towards'), ('learning', 'learn'), ('to', 'to'), ('speak', 'speak'), ('customer', 'customer'), ('-ese', '-ese'), (',', ','), ('the', 'the'), ('caller', 'caller'), ('’s', "'s"), ('responses', 'response'), ('are', 'be'), ('still', 'still'), ('limited', 'limit'), ('to', 'to'), ('words', 'word'), ('that', 'that'), ('have', 'have'), ('been', 'be'), ('chosen', 'choose'), ('for', 'for'), ('them', 'they'), ('rather', 'rather'), ('than', 'than'), ('allowing', 'allow'), ('them', 'they'), ('to', 'to'), ('use', 'use'), ('their', 'they'), ('own', 'own'), ('words', 'word'), ('.', '.')] 

 Dependency tags are: 
>> [(('Although', 'taken'), 'mark'), (('the', 'system'), 'det'), (('self', 'service'), 'compound'), (('-', 'service'), 'punct'), (('service', 'system'), 'compound'), (('system', 'taken'), 'nsubj'), (('has', 'taken'), 'aux'), (('already', 'taken'), 'advmod'), (('taken', 'limited'), 'advcl'), (('a', 'step'), 'det'), (('big', 'step'), 'amod'), (('step', 'taken'), 'obj'), (('towards', 'learning'), 'mark'), (('learning', 'taken'), 'advcl'), (('to', 'speak'), 'mark'), (('speak', 'learning'), 'xcomp'), (('customer', '-ese'), 'compound'), (('-ese', 'speak'), 'obj'), ((',', 'limited'), 'punct'), (('the', 'caller'), 'det'), (('caller', 'responses'), 'nmod:poss'), (('’s', 'caller'), 'case'), (('responses', 'limited'), 'nsubj:pass'), (('are', 'limited'), 'aux:pass'), (('still', 'limited'), 'advmod'), (('limited', 'root'), 'root'), (('to', 'words'), 'case'), (('words', 'limited'), 'obl'), (('that', 'chosen'), 'nsubj:pass'), (('have', 'chosen'), 'aux'), (('been', 'chosen'), 'aux:pass'), (('chosen', 'words'), 'acl:relcl'), (('for', 'them'), 'case'), (('them', 'chosen'), 'obl'), (('rather', 'allowing'), 'cc'), (('than', 'rather'), 'fixed'), (('allowing', 'chosen'), 'conj'), (('them', 'allowing'), 'obj'), (('to', 'use'), 'mark'), (('use', 'allowing'), 'xcomp'), (('their', 'words'), 'nmod:poss'), (('own', 'words'), 'amod'), (('words', 'use'), 'obj'), (('.', 'limited'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 73 ===========================

 There are still more natural language capabilities to explore. 

Tokens are: 
>> ['There', 'are', 'still', 'more', 'natural', 'language', 'capabilities', 'to', 'explore', '.'] 

 UPOS tags are: 
>> [('There', 'PRON'), ('are', 'VERB'), ('still', 'ADV'), ('more', 'ADV'), ('natural', 'ADJ'), ('language', 'NOUN'), ('capabilities', 'NOUN'), ('to', 'PART'), ('explore', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('There', 'EX'), ('are', 'VBP'), ('still', 'RB'), ('more', 'RBR'), ('natural', 'JJ'), ('language', 'NN'), ('capabilities', 'NNS'), ('to', 'TO'), ('explore', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('There', 'there'), ('are', 'be'), ('still', 'still'), ('more', 'more'), ('natural', 'natural'), ('language', 'language'), ('capabilities', 'capability'), ('to', 'to'), ('explore', 'explore'), ('.', '.')] 

 Dependency tags are: 
>> [(('There', 'are'), 'expl'), (('are', 'root'), 'root'), (('still', 'are'), 'advmod'), (('more', 'natural'), 'advmod'), (('natural', 'capabilities'), 'amod'), (('language', 'capabilities'), 'compound'), (('capabilities', 'are'), 'nsubj'), (('to', 'explore'), 'mark'), (('explore', 'capabilities'), 'acl'), (('.', 'are'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 74 ===========================

 Become	fluent Rather than focusing only on matches within and around a grammar, another  approach for determining meaning is to ask callers to describe a problem in  their own words. 

Tokens are: 
>> ['Become', 'fluent', 'Rather', 'than', 'focusing', 'only', 'on', 'matches', 'within', 'and', 'around', 'a', 'grammar', ',', 'another', 'approach', 'for', 'determining', 'meaning', 'is', 'to', 'ask', 'callers', 'to', 'describe', 'a', 'problem', 'in', 'their', 'own', 'words', '.'] 

 UPOS tags are: 
>> [('Become', 'VERB'), ('fluent', 'ADJ'), ('Rather', 'ADV'), ('than', 'SCONJ'), ('focusing', 'VERB'), ('only', 'ADV'), ('on', 'ADP'), ('matches', 'NOUN'), ('within', 'ADP'), ('and', 'CCONJ'), ('around', 'ADP'), ('a', 'DET'), ('grammar', 'NOUN'), (',', 'PUNCT'), ('another', 'DET'), ('approach', 'NOUN'), ('for', 'SCONJ'), ('determining', 'VERB'), ('meaning', 'NOUN'), ('is', 'VERB'), ('to', 'PART'), ('ask', 'VERB'), ('callers', 'NOUN'), ('to', 'PART'), ('describe', 'VERB'), ('a', 'DET'), ('problem', 'NOUN'), ('in', 'ADP'), ('their', 'PRON'), ('own', 'ADJ'), ('words', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Become', 'VB'), ('fluent', 'JJ'), ('Rather', 'RB'), ('than', 'IN'), ('focusing', 'VBG'), ('only', 'RB'), ('on', 'IN'), ('matches', 'NNS'), ('within', 'IN'), ('and', 'CC'), ('around', 'IN'), ('a', 'DT'), ('grammar', 'NN'), (',', ','), ('another', 'DT'), ('approach', 'NN'), ('for', 'IN'), ('determining', 'VBG'), ('meaning', 'NN'), ('is', 'VBZ'), ('to', 'TO'), ('ask', 'VB'), ('callers', 'NNS'), ('to', 'TO'), ('describe', 'VB'), ('a', 'DT'), ('problem', 'NN'), ('in', 'IN'), ('their', 'PRP$'), ('own', 'JJ'), ('words', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Become', 'become'), ('fluent', 'fluent'), ('Rather', 'rather'), ('than', 'than'), ('focusing', 'focus'), ('only', 'only'), ('on', 'on'), ('matches', 'match'), ('within', 'within'), ('and', 'and'), ('around', 'around'), ('a', 'a'), ('grammar', 'grammar'), (',', ','), ('another', 'another'), ('approach', 'approach'), ('for', 'for'), ('determining', 'determine'), ('meaning', 'meaning'), ('is', 'be'), ('to', 'to'), ('ask', 'ask'), ('callers', 'caller'), ('to', 'to'), ('describe', 'describe'), ('a', 'a'), ('problem', 'problem'), ('in', 'in'), ('their', 'they'), ('own', 'own'), ('words', 'word'), ('.', '.')] 

 Dependency tags are: 
>> [(('Become', 'root'), 'root'), (('fluent', 'Become'), 'xcomp'), (('Rather', 'focusing'), 'cc'), (('than', 'Rather'), 'fixed'), (('focusing', 'ask'), 'advcl'), (('only', 'matches'), 'advmod'), (('on', 'matches'), 'case'), (('matches', 'focusing'), 'obl'), (('within', 'grammar'), 'case'), (('and', 'around'), 'cc'), (('around', 'within'), 'conj'), (('a', 'grammar'), 'det'), (('grammar', 'focusing'), 'obl'), ((',', 'is'), 'punct'), (('another', 'approach'), 'det'), (('approach', 'is'), 'nsubj'), (('for', 'determining'), 'mark'), (('determining', 'approach'), 'acl'), (('meaning', 'determining'), 'obj'), (('is', 'Become'), 'parataxis'), (('to', 'ask'), 'mark'), (('ask', 'is'), 'ccomp'), (('callers', 'ask'), 'obj'), (('to', 'describe'), 'mark'), (('describe', 'ask'), 'xcomp'), (('a', 'problem'), 'det'), (('problem', 'describe'), 'obj'), (('in', 'words'), 'case'), (('their', 'words'), 'nmod:poss'), (('own', 'words'), 'amod'), (('words', 'problem'), 'nmod'), (('.', 'ask'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 75 ===========================

 This approach often begins by offering callers an open-ended prompt  such as “how may I help you?” 

Tokens are: 
>> ['This', 'approach', 'often', 'begins', 'by', 'offering', 'callers', 'an', 'open-ended', 'prompt', 'such', 'as', '“', 'how', 'may', 'I', 'help', 'you', '?', '”'] 

 UPOS tags are: 
>> [('This', 'DET'), ('approach', 'NOUN'), ('often', 'ADV'), ('begins', 'VERB'), ('by', 'SCONJ'), ('offering', 'VERB'), ('callers', 'NOUN'), ('an', 'DET'), ('open-ended', 'ADJ'), ('prompt', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('“', 'PUNCT'), ('how', 'ADV'), ('may', 'AUX'), ('I', 'PRON'), ('help', 'VERB'), ('you', 'PRON'), ('?', 'PUNCT'), ('”', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('approach', 'NN'), ('often', 'RB'), ('begins', 'VBZ'), ('by', 'IN'), ('offering', 'VBG'), ('callers', 'NNS'), ('an', 'DT'), ('open-ended', 'JJ'), ('prompt', 'NN'), ('such', 'JJ'), ('as', 'IN'), ('“', '``'), ('how', 'WRB'), ('may', 'MD'), ('I', 'PRP'), ('help', 'VB'), ('you', 'PRP'), ('?', '.'), ('”', "''")] 

 Lemmas are: 
>> [('This', 'this'), ('approach', 'approach'), ('often', 'often'), ('begins', 'begin'), ('by', 'by'), ('offering', 'offer'), ('callers', 'caller'), ('an', 'a'), ('open-ended', 'open-ended'), ('prompt', 'prompt'), ('such', 'such'), ('as', 'as'), ('“', "''"), ('how', 'how'), ('may', 'may'), ('I', 'I'), ('help', 'help'), ('you', 'you'), ('?', '?'), ('”', "''")] 

 Dependency tags are: 
>> [(('This', 'approach'), 'det'), (('approach', 'begins'), 'nsubj'), (('often', 'begins'), 'advmod'), (('begins', 'root'), 'root'), (('by', 'offering'), 'mark'), (('offering', 'begins'), 'advcl'), (('callers', 'offering'), 'iobj'), (('an', 'prompt'), 'det'), (('open-ended', 'prompt'), 'amod'), (('prompt', 'offering'), 'obj'), (('such', 'help'), 'mark'), (('as', 'such'), 'fixed'), (('“', 'help'), 'punct'), (('how', 'help'), 'advmod'), (('may', 'help'), 'aux'), (('I', 'help'), 'nsubj'), (('help', 'begins'), 'parataxis'), (('you', 'help'), 'obj'), (('?', 'help'), 'punct'), (('”', 'help'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 76 ===========================

 Callers respond by describing in their own  words why they are calling, perhaps by saying “there’s a strange charge on  my credit card statement”. 

Tokens are: 
>> ['Callers', 'respond', 'by', 'describing', 'in', 'their', 'own', 'words', 'why', 'they', 'are', 'calling', ',', 'perhaps', 'by', 'saying', '“', 'there', '’s', 'a', 'strange', 'charge', 'on', 'my', 'credit', 'card', 'statement', '”', '.'] 

 UPOS tags are: 
>> [('Callers', 'NOUN'), ('respond', 'VERB'), ('by', 'SCONJ'), ('describing', 'VERB'), ('in', 'ADP'), ('their', 'PRON'), ('own', 'ADJ'), ('words', 'NOUN'), ('why', 'SCONJ'), ('they', 'PRON'), ('are', 'AUX'), ('calling', 'VERB'), (',', 'PUNCT'), ('perhaps', 'ADV'), ('by', 'SCONJ'), ('saying', 'VERB'), ('“', 'PUNCT'), ('there', 'PRON'), ('’s', 'VERB'), ('a', 'DET'), ('strange', 'ADJ'), ('charge', 'NOUN'), ('on', 'ADP'), ('my', 'PRON'), ('credit', 'NOUN'), ('card', 'NOUN'), ('statement', 'NOUN'), ('”', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Callers', 'NNS'), ('respond', 'VBP'), ('by', 'IN'), ('describing', 'VBG'), ('in', 'IN'), ('their', 'PRP$'), ('own', 'JJ'), ('words', 'NNS'), ('why', 'WRB'), ('they', 'PRP'), ('are', 'VBP'), ('calling', 'VBG'), (',', ','), ('perhaps', 'RB'), ('by', 'IN'), ('saying', 'VBG'), ('“', '``'), ('there', 'EX'), ('’s', 'VBZ'), ('a', 'DT'), ('strange', 'JJ'), ('charge', 'NN'), ('on', 'IN'), ('my', 'PRP$'), ('credit', 'NN'), ('card', 'NN'), ('statement', 'NN'), ('”', "''"), ('.', '.')] 

 Lemmas are: 
>> [('Callers', 'caller'), ('respond', 'respond'), ('by', 'by'), ('describing', 'describe'), ('in', 'in'), ('their', 'they'), ('own', 'own'), ('words', 'word'), ('why', 'why'), ('they', 'they'), ('are', 'be'), ('calling', 'call'), (',', ','), ('perhaps', 'perhaps'), ('by', 'by'), ('saying', 'say'), ('“', "''"), ('there', 'there'), ('’s', 'be'), ('a', 'a'), ('strange', 'strange'), ('charge', 'charge'), ('on', 'on'), ('my', 'my'), ('credit', 'credit'), ('card', 'card'), ('statement', 'statement'), ('”', "''"), ('.', '.')] 

 Dependency tags are: 
>> [(('Callers', 'respond'), 'nsubj'), (('respond', 'root'), 'root'), (('by', 'describing'), 'mark'), (('describing', 'respond'), 'advcl'), (('in', 'words'), 'case'), (('their', 'words'), 'nmod:poss'), (('own', 'words'), 'amod'), (('words', 'describing'), 'obl'), (('why', 'calling'), 'mark'), (('they', 'calling'), 'nsubj'), (('are', 'calling'), 'aux'), (('calling', 'words'), 'acl:relcl'), ((',', 'saying'), 'punct'), (('perhaps', 'saying'), 'advmod'), (('by', 'saying'), 'mark'), (('saying', 'describing'), 'advcl'), (('“', '’s'), 'punct'), (('there', '’s'), 'expl'), (('’s', 'saying'), 'ccomp'), (('a', 'charge'), 'det'), (('strange', 'charge'), 'amod'), (('charge', '’s'), 'nsubj'), (('on', 'statement'), 'case'), (('my', 'statement'), 'nmod:poss'), (('credit', 'card'), 'compound'), (('card', 'statement'), 'compound'), (('statement', 'charge'), 'nmod'), (('”', '’s'), 'punct'), (('.', 'respond'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 77 ===========================

 The system then uses sophisticated statistical  modeling to identify key phrases and look for a match in a list of example  phrases that have known meanings. 

Tokens are: 
>> ['The', 'system', 'then', 'uses', 'sophisticated', 'statistical', 'modeling', 'to', 'identify', 'key', 'phrases', 'and', 'look', 'for', 'a', 'match', 'in', 'a', 'list', 'of', 'example', 'phrases', 'that', 'have', 'known', 'meanings', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('system', 'NOUN'), ('then', 'ADV'), ('uses', 'VERB'), ('sophisticated', 'ADJ'), ('statistical', 'ADJ'), ('modeling', 'NOUN'), ('to', 'PART'), ('identify', 'VERB'), ('key', 'ADJ'), ('phrases', 'NOUN'), ('and', 'CCONJ'), ('look', 'VERB'), ('for', 'ADP'), ('a', 'DET'), ('match', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('list', 'NOUN'), ('of', 'ADP'), ('example', 'NOUN'), ('phrases', 'NOUN'), ('that', 'PRON'), ('have', 'VERB'), ('known', 'VERB'), ('meanings', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('system', 'NN'), ('then', 'RB'), ('uses', 'VBZ'), ('sophisticated', 'JJ'), ('statistical', 'JJ'), ('modeling', 'NN'), ('to', 'TO'), ('identify', 'VB'), ('key', 'JJ'), ('phrases', 'NNS'), ('and', 'CC'), ('look', 'VB'), ('for', 'IN'), ('a', 'DT'), ('match', 'NN'), ('in', 'IN'), ('a', 'DT'), ('list', 'NN'), ('of', 'IN'), ('example', 'NN'), ('phrases', 'NNS'), ('that', 'WDT'), ('have', 'VBP'), ('known', 'VBN'), ('meanings', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('system', 'system'), ('then', 'then'), ('uses', 'use'), ('sophisticated', 'sophisticated'), ('statistical', 'statistical'), ('modeling', 'modeling'), ('to', 'to'), ('identify', 'identify'), ('key', 'key'), ('phrases', 'phrase'), ('and', 'and'), ('look', 'look'), ('for', 'for'), ('a', 'a'), ('match', 'match'), ('in', 'in'), ('a', 'a'), ('list', 'list'), ('of', 'of'), ('example', 'example'), ('phrases', 'phrase'), ('that', 'that'), ('have', 'have'), ('known', 'know'), ('meanings', 'meaning'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'system'), 'det'), (('system', 'uses'), 'nsubj'), (('then', 'uses'), 'advmod'), (('uses', 'root'), 'root'), (('sophisticated', 'modeling'), 'amod'), (('statistical', 'modeling'), 'amod'), (('modeling', 'uses'), 'obj'), (('to', 'identify'), 'mark'), (('identify', 'uses'), 'advcl'), (('key', 'phrases'), 'amod'), (('phrases', 'identify'), 'obj'), (('and', 'look'), 'cc'), (('look', 'identify'), 'conj'), (('for', 'match'), 'case'), (('a', 'match'), 'det'), (('match', 'look'), 'obl'), (('in', 'list'), 'case'), (('a', 'list'), 'det'), (('list', 'look'), 'obl'), (('of', 'phrases'), 'case'), (('example', 'phrases'), 'compound'), (('phrases', 'list'), 'nmod'), (('that', 'have'), 'nsubj'), (('have', 'phrases'), 'acl:relcl'), (('known', 'meanings'), 'amod'), (('meanings', 'have'), 'obj'), (('.', 'uses'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 78 ===========================

 In this case, the likely meaning would be  associated with billing even though the word ‘billing’ was never spoken. 

Tokens are: 
>> ['In', 'this', 'case', ',', 'the', 'likely', 'meaning', 'would', 'be', 'associated', 'with', 'billing', 'even', 'though', 'the', 'word', '‘', 'billing', '’', 'was', 'never', 'spoken', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('this', 'DET'), ('case', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('likely', 'ADJ'), ('meaning', 'NOUN'), ('would', 'AUX'), ('be', 'AUX'), ('associated', 'VERB'), ('with', 'ADP'), ('billing', 'NOUN'), ('even', 'ADV'), ('though', 'SCONJ'), ('the', 'DET'), ('word', 'NOUN'), ('‘', 'PUNCT'), ('billing', 'NOUN'), ('’', 'PUNCT'), ('was', 'AUX'), ('never', 'ADV'), ('spoken', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('this', 'DT'), ('case', 'NN'), (',', ','), ('the', 'DT'), ('likely', 'JJ'), ('meaning', 'NN'), ('would', 'MD'), ('be', 'VB'), ('associated', 'VBN'), ('with', 'IN'), ('billing', 'NN'), ('even', 'RB'), ('though', 'IN'), ('the', 'DT'), ('word', 'NN'), ('‘', '``'), ('billing', 'NN'), ('’', "''"), ('was', 'VBD'), ('never', 'RB'), ('spoken', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('this', 'this'), ('case', 'case'), (',', ','), ('the', 'the'), ('likely', 'likely'), ('meaning', 'meaning'), ('would', 'would'), ('be', 'be'), ('associated', 'associate'), ('with', 'with'), ('billing', 'billing'), ('even', 'even'), ('though', 'though'), ('the', 'the'), ('word', 'word'), ('‘', "'"), ('billing', 'billing'), ('’', "'"), ('was', 'be'), ('never', 'never'), ('spoken', 'speak'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'case'), 'case'), (('this', 'case'), 'det'), (('case', 'associated'), 'obl'), ((',', 'associated'), 'punct'), (('the', 'meaning'), 'det'), (('likely', 'meaning'), 'amod'), (('meaning', 'associated'), 'nsubj:pass'), (('would', 'associated'), 'aux'), (('be', 'associated'), 'aux:pass'), (('associated', 'root'), 'root'), (('with', 'billing'), 'case'), (('billing', 'associated'), 'obl'), (('even', 'spoken'), 'advmod'), (('though', 'spoken'), 'mark'), (('the', 'word'), 'det'), (('word', 'spoken'), 'nsubj:pass'), (('‘', 'billing'), 'punct'), (('billing', 'word'), 'appos'), (('’', 'billing'), 'punct'), (('was', 'spoken'), 'aux:pass'), (('never', 'spoken'), 'advmod'), (('spoken', 'associated'), 'advcl'), (('.', 'associated'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 79 ===========================

 SmartListener™ technology  increases automation by interpreting  the meaning of caller responses that  include filler phrases that do not  exactly match expected dialogs. 

Tokens are: 
>> ['SmartListener™', 'technology', 'increases', 'automation', 'by', 'interpreting', 'the', 'meaning', 'of', 'caller', 'responses', 'that', 'include', 'filler', 'phrases', 'that', 'do', 'not', 'exactly', 'match', 'expected', 'dialogs', '.'] 

 UPOS tags are: 
>> [('SmartListener™', 'ADJ'), ('technology', 'NOUN'), ('increases', 'VERB'), ('automation', 'NOUN'), ('by', 'SCONJ'), ('interpreting', 'VERB'), ('the', 'DET'), ('meaning', 'NOUN'), ('of', 'ADP'), ('caller', 'NOUN'), ('responses', 'NOUN'), ('that', 'PRON'), ('include', 'VERB'), ('filler', 'NOUN'), ('phrases', 'NOUN'), ('that', 'PRON'), ('do', 'AUX'), ('not', 'PART'), ('exactly', 'ADV'), ('match', 'VERB'), ('expected', 'VERB'), ('dialogs', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('SmartListener™', 'JJ'), ('technology', 'NN'), ('increases', 'VBZ'), ('automation', 'NN'), ('by', 'IN'), ('interpreting', 'VBG'), ('the', 'DT'), ('meaning', 'NN'), ('of', 'IN'), ('caller', 'NN'), ('responses', 'NNS'), ('that', 'WDT'), ('include', 'VBP'), ('filler', 'NN'), ('phrases', 'NNS'), ('that', 'WDT'), ('do', 'VBP'), ('not', 'RB'), ('exactly', 'RB'), ('match', 'VB'), ('expected', 'VBN'), ('dialogs', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('SmartListener™', 'SmartListener™'), ('technology', 'technology'), ('increases', 'increase'), ('automation', 'automation'), ('by', 'by'), ('interpreting', 'interpret'), ('the', 'the'), ('meaning', 'meaning'), ('of', 'of'), ('caller', 'caller'), ('responses', 'response'), ('that', 'that'), ('include', 'include'), ('filler', 'filler'), ('phrases', 'phrase'), ('that', 'that'), ('do', 'do'), ('not', 'not'), ('exactly', 'exactly'), ('match', 'match'), ('expected', 'expect'), ('dialogs', 'dialog'), ('.', '.')] 

 Dependency tags are: 
>> [(('SmartListener™', 'technology'), 'amod'), (('technology', 'increases'), 'nsubj'), (('increases', 'root'), 'root'), (('automation', 'increases'), 'obj'), (('by', 'interpreting'), 'mark'), (('interpreting', 'increases'), 'advcl'), (('the', 'meaning'), 'det'), (('meaning', 'interpreting'), 'obj'), (('of', 'responses'), 'case'), (('caller', 'responses'), 'compound'), (('responses', 'meaning'), 'nmod'), (('that', 'include'), 'nsubj'), (('include', 'responses'), 'acl:relcl'), (('filler', 'phrases'), 'compound'), (('phrases', 'include'), 'obj'), (('that', 'match'), 'nsubj'), (('do', 'match'), 'aux'), (('not', 'match'), 'advmod'), (('exactly', 'match'), 'advmod'), (('match', 'phrases'), 'acl:relcl'), (('expected', 'dialogs'), 'amod'), (('dialogs', 'match'), 'obj'), (('.', 'increases'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 80 ===========================

 White PaperCustomer Service Solutions Natural language understanding4 

Tokens are: 
>> ['White', 'PaperCustomer', 'Service', 'Solutions', 'Natural', 'language', 'understanding', '4'] 

 UPOS tags are: 
>> [('White', 'ADJ'), ('PaperCustomer', 'NOUN'), ('Service', 'NOUN'), ('Solutions', 'NOUN'), ('Natural', 'ADJ'), ('language', 'NOUN'), ('understanding', 'NOUN'), ('4', 'NUM')] 

 XPOS tags are: 
>> [('White', 'JJ'), ('PaperCustomer', 'NN'), ('Service', 'NN'), ('Solutions', 'NNS'), ('Natural', 'JJ'), ('language', 'NN'), ('understanding', 'NN'), ('4', 'CD')] 

 Lemmas are: 
>> [('White', 'White'), ('PaperCustomer', 'papercustomer'), ('Service', 'service'), ('Solutions', 'solution'), ('Natural', 'Natural'), ('language', 'language'), ('understanding', 'understanding'), ('4', '4')] 

 Dependency tags are: 
>> [(('White', 'Service'), 'amod'), (('PaperCustomer', 'Service'), 'compound'), (('Service', 'root'), 'root'), (('Solutions', 'Service'), 'compound'), (('Natural', 'language'), 'amod'), (('language', 'understanding'), 'compound'), (('understanding', 'Solutions'), 'conj'), (('4', 'understanding'), 'nummod')]

 Named Entities are: 
>> [('White PaperCustomer Service Solutions', 'ORG')]

========================== Sentence 81 ===========================

 Although developing the detailed statistical models involves manual efforts to  define and assign the agreed upon meanings to each transcription, the result  is very high automation rates and high customer satisfaction. 

Tokens are: 
>> ['Although', 'developing', 'the', 'detailed', 'statistical', 'models', 'involves', 'manual', 'efforts', 'to', 'define', 'and', 'assign', 'the', 'agreed', 'upon', 'meanings', 'to', 'each', 'transcription', ',', 'the', 'result', 'is', 'very', 'high', 'automation', 'rates', 'and', 'high', 'customer', 'satisfaction', '.'] 

 UPOS tags are: 
>> [('Although', 'SCONJ'), ('developing', 'VERB'), ('the', 'DET'), ('detailed', 'ADJ'), ('statistical', 'ADJ'), ('models', 'NOUN'), ('involves', 'VERB'), ('manual', 'ADJ'), ('efforts', 'NOUN'), ('to', 'PART'), ('define', 'VERB'), ('and', 'CCONJ'), ('assign', 'VERB'), ('the', 'DET'), ('agreed', 'VERB'), ('upon', 'ADP'), ('meanings', 'NOUN'), ('to', 'ADP'), ('each', 'DET'), ('transcription', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('result', 'NOUN'), ('is', 'AUX'), ('very', 'ADV'), ('high', 'ADJ'), ('automation', 'NOUN'), ('rates', 'NOUN'), ('and', 'CCONJ'), ('high', 'ADJ'), ('customer', 'NOUN'), ('satisfaction', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Although', 'IN'), ('developing', 'VBG'), ('the', 'DT'), ('detailed', 'JJ'), ('statistical', 'JJ'), ('models', 'NNS'), ('involves', 'VBZ'), ('manual', 'JJ'), ('efforts', 'NNS'), ('to', 'TO'), ('define', 'VB'), ('and', 'CC'), ('assign', 'VB'), ('the', 'DT'), ('agreed', 'VBN'), ('upon', 'IN'), ('meanings', 'NNS'), ('to', 'IN'), ('each', 'DT'), ('transcription', 'NN'), (',', ','), ('the', 'DT'), ('result', 'NN'), ('is', 'VBZ'), ('very', 'RB'), ('high', 'JJ'), ('automation', 'NN'), ('rates', 'NNS'), ('and', 'CC'), ('high', 'JJ'), ('customer', 'NN'), ('satisfaction', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Although', 'although'), ('developing', 'develop'), ('the', 'the'), ('detailed', 'detailed'), ('statistical', 'statistical'), ('models', 'model'), ('involves', 'involve'), ('manual', 'manual'), ('efforts', 'effort'), ('to', 'to'), ('define', 'define'), ('and', 'and'), ('assign', 'assign'), ('the', 'the'), ('agreed', 'agree'), ('upon', 'upon'), ('meanings', 'meaning'), ('to', 'to'), ('each', 'each'), ('transcription', 'transcription'), (',', ','), ('the', 'the'), ('result', 'result'), ('is', 'be'), ('very', 'very'), ('high', 'high'), ('automation', 'automation'), ('rates', 'rate'), ('and', 'and'), ('high', 'high'), ('customer', 'customer'), ('satisfaction', 'satisfaction'), ('.', '.')] 

 Dependency tags are: 
>> [(('Although', 'involves'), 'mark'), (('developing', 'involves'), 'csubj'), (('the', 'models'), 'det'), (('detailed', 'models'), 'amod'), (('statistical', 'models'), 'amod'), (('models', 'developing'), 'obj'), (('involves', 'rates'), 'advcl'), (('manual', 'efforts'), 'amod'), (('efforts', 'involves'), 'obj'), (('to', 'define'), 'mark'), (('define', 'efforts'), 'acl'), (('and', 'assign'), 'cc'), (('assign', 'define'), 'conj'), (('the', 'agreed'), 'det'), (('agreed', 'meanings'), 'amod'), (('upon', 'meanings'), 'case'), (('meanings', 'assign'), 'obl'), (('to', 'transcription'), 'case'), (('each', 'transcription'), 'det'), (('transcription', 'meanings'), 'nmod'), ((',', 'rates'), 'punct'), (('the', 'result'), 'det'), (('result', 'rates'), 'nsubj'), (('is', 'rates'), 'cop'), (('very', 'high'), 'advmod'), (('high', 'rates'), 'amod'), (('automation', 'rates'), 'compound'), (('rates', 'root'), 'root'), (('and', 'satisfaction'), 'cc'), (('high', 'satisfaction'), 'amod'), (('customer', 'satisfaction'), 'compound'), (('satisfaction', 'rates'), 'conj'), (('.', 'rates'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 82 ===========================

 The key to  extracting the correct meaning from this open-ended approach is the proper  tagging of previously transcribed phrases. 

Tokens are: 
>> ['The', 'key', 'to', 'extracting', 'the', 'correct', 'meaning', 'from', 'this', 'open-ended', 'approach', 'is', 'the', 'proper', 'tagging', 'of', 'previously', 'transcribed', 'phrases', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('key', 'NOUN'), ('to', 'SCONJ'), ('extracting', 'VERB'), ('the', 'DET'), ('correct', 'ADJ'), ('meaning', 'NOUN'), ('from', 'ADP'), ('this', 'DET'), ('open-ended', 'ADJ'), ('approach', 'NOUN'), ('is', 'AUX'), ('the', 'DET'), ('proper', 'ADJ'), ('tagging', 'NOUN'), ('of', 'ADP'), ('previously', 'ADV'), ('transcribed', 'VERB'), ('phrases', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('key', 'NN'), ('to', 'IN'), ('extracting', 'VBG'), ('the', 'DT'), ('correct', 'JJ'), ('meaning', 'NN'), ('from', 'IN'), ('this', 'DT'), ('open-ended', 'JJ'), ('approach', 'NN'), ('is', 'VBZ'), ('the', 'DT'), ('proper', 'JJ'), ('tagging', 'NN'), ('of', 'IN'), ('previously', 'RB'), ('transcribed', 'VBN'), ('phrases', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('key', 'key'), ('to', 'to'), ('extracting', 'extract'), ('the', 'the'), ('correct', 'correct'), ('meaning', 'meaning'), ('from', 'from'), ('this', 'this'), ('open-ended', 'open-ended'), ('approach', 'approach'), ('is', 'be'), ('the', 'the'), ('proper', 'proper'), ('tagging', 'tagging'), ('of', 'of'), ('previously', 'previously'), ('transcribed', 'transcribe'), ('phrases', 'phrase'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'key'), 'det'), (('key', 'tagging'), 'nsubj'), (('to', 'extracting'), 'mark'), (('extracting', 'key'), 'acl'), (('the', 'meaning'), 'det'), (('correct', 'meaning'), 'amod'), (('meaning', 'extracting'), 'obj'), (('from', 'approach'), 'case'), (('this', 'approach'), 'det'), (('open-ended', 'approach'), 'amod'), (('approach', 'meaning'), 'nmod'), (('is', 'tagging'), 'cop'), (('the', 'tagging'), 'det'), (('proper', 'tagging'), 'amod'), (('tagging', 'root'), 'root'), (('of', 'phrases'), 'case'), (('previously', 'transcribed'), 'advmod'), (('transcribed', 'phrases'), 'amod'), (('phrases', 'tagging'), 'nmod'), (('.', 'tagging'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 83 ===========================

 As with grammars, if the caller  gives a completely unexpected response, like talking about ‘pizza toppings’  to an electricity provider’s system, there will not be a match. 

Tokens are: 
>> ['As', 'with', 'grammars', ',', 'if', 'the', 'caller', 'gives', 'a', 'completely', 'unexpected', 'response', ',', 'like', 'talking', 'about', '‘', 'pizza', 'toppings', '’', 'to', 'an', 'electricity', 'provider', '’s', 'system', ',', 'there', 'will', 'not', 'be', 'a', 'match', '.'] 

 UPOS tags are: 
>> [('As', 'ADP'), ('with', 'ADP'), ('grammars', 'NOUN'), (',', 'PUNCT'), ('if', 'SCONJ'), ('the', 'DET'), ('caller', 'NOUN'), ('gives', 'VERB'), ('a', 'DET'), ('completely', 'ADV'), ('unexpected', 'ADJ'), ('response', 'NOUN'), (',', 'PUNCT'), ('like', 'SCONJ'), ('talking', 'VERB'), ('about', 'ADP'), ('‘', 'PUNCT'), ('pizza', 'NOUN'), ('toppings', 'NOUN'), ('’', 'PUNCT'), ('to', 'ADP'), ('an', 'DET'), ('electricity', 'NOUN'), ('provider', 'NOUN'), ('’s', 'PART'), ('system', 'NOUN'), (',', 'PUNCT'), ('there', 'PRON'), ('will', 'AUX'), ('not', 'PART'), ('be', 'AUX'), ('a', 'DET'), ('match', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('As', 'IN'), ('with', 'IN'), ('grammars', 'NNS'), (',', ','), ('if', 'IN'), ('the', 'DT'), ('caller', 'NN'), ('gives', 'VBZ'), ('a', 'DT'), ('completely', 'RB'), ('unexpected', 'JJ'), ('response', 'NN'), (',', ','), ('like', 'IN'), ('talking', 'VBG'), ('about', 'IN'), ('‘', '``'), ('pizza', 'NN'), ('toppings', 'NNS'), ('’', "''"), ('to', 'IN'), ('an', 'DT'), ('electricity', 'NN'), ('provider', 'NN'), ('’s', 'POS'), ('system', 'NN'), (',', ','), ('there', 'EX'), ('will', 'MD'), ('not', 'RB'), ('be', 'VB'), ('a', 'DT'), ('match', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('As', 'as'), ('with', 'with'), ('grammars', 'grammar'), (',', ','), ('if', 'if'), ('the', 'the'), ('caller', 'caller'), ('gives', 'give'), ('a', 'a'), ('completely', 'completely'), ('unexpected', 'unexpected'), ('response', 'response'), (',', ','), ('like', 'like'), ('talking', 'talk'), ('about', 'about'), ('‘', "'"), ('pizza', 'pizza'), ('toppings', 'topping'), ('’', "'"), ('to', 'to'), ('an', 'a'), ('electricity', 'electricity'), ('provider', 'provider'), ('’s', "'s"), ('system', 'system'), (',', ','), ('there', 'there'), ('will', 'will'), ('not', 'not'), ('be', 'be'), ('a', 'a'), ('match', 'match'), ('.', '.')] 

 Dependency tags are: 
>> [(('As', 'grammars'), 'case'), (('with', 'grammars'), 'case'), (('grammars', 'match'), 'obl'), ((',', 'grammars'), 'punct'), (('if', 'gives'), 'mark'), (('the', 'caller'), 'det'), (('caller', 'gives'), 'nsubj'), (('gives', 'match'), 'advcl'), (('a', 'response'), 'det'), (('completely', 'unexpected'), 'advmod'), (('unexpected', 'response'), 'amod'), (('response', 'gives'), 'obj'), ((',', 'talking'), 'punct'), (('like', 'talking'), 'mark'), (('talking', 'gives'), 'advcl'), (('about', 'toppings'), 'case'), (('‘', 'toppings'), 'punct'), (('pizza', 'toppings'), 'compound'), (('toppings', 'talking'), 'obl'), (('’', 'toppings'), 'punct'), (('to', 'system'), 'case'), (('an', 'provider'), 'det'), (('electricity', 'provider'), 'compound'), (('provider', 'system'), 'nmod:poss'), (('’s', 'provider'), 'case'), (('system', 'talking'), 'obl'), ((',', 'match'), 'punct'), (('there', 'match'), 'expl'), (('will', 'match'), 'aux'), (('not', 'match'), 'advmod'), (('be', 'match'), 'cop'), (('a', 'match'), 'det'), (('match', 'root'), 'root'), (('.', 'match'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 84 ===========================

 When there is no match, the system will offer a fall-back alternative that  uses traditional grammars to determine the caller’s intent such as “I’m sorry  I did not get that, would you like mortgages, credit cards, …” Experience  has shown that applying the keyword spotting approach to these fall-back  grammars often leads to a successful interaction. 

Tokens are: 
>> ['When', 'there', 'is', 'no', 'match', ',', 'the', 'system', 'will', 'offer', 'a', 'fall', '-', 'back', 'alternative', 'that', 'uses', 'traditional', 'grammars', 'to', 'determine', 'the', 'caller', '’s', 'intent', 'such', 'as', '“', 'I', '’m', 'sorry', 'I', 'did', 'not', 'get', 'that', ',', 'would', 'you', 'like', 'mortgages', ',', 'credit', 'cards', ',', '…', '”', 'Experience', 'has', 'shown', 'that', 'applying', 'the', 'keyword', 'spotting', 'approach', 'to', 'these', 'fall', '-', 'back', 'grammars', 'often', 'leads', 'to', 'a', 'successful', 'interaction', '.'] 

 UPOS tags are: 
>> [('When', 'SCONJ'), ('there', 'PRON'), ('is', 'VERB'), ('no', 'DET'), ('match', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('system', 'NOUN'), ('will', 'AUX'), ('offer', 'VERB'), ('a', 'DET'), ('fall', 'NOUN'), ('-', 'PUNCT'), ('back', 'NOUN'), ('alternative', 'NOUN'), ('that', 'PRON'), ('uses', 'VERB'), ('traditional', 'ADJ'), ('grammars', 'NOUN'), ('to', 'PART'), ('determine', 'VERB'), ('the', 'DET'), ('caller', 'NOUN'), ('’s', 'PART'), ('intent', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('“', 'PUNCT'), ('I', 'PRON'), ('’m', 'AUX'), ('sorry', 'ADJ'), ('I', 'PRON'), ('did', 'AUX'), ('not', 'PART'), ('get', 'VERB'), ('that', 'PRON'), (',', 'PUNCT'), ('would', 'AUX'), ('you', 'PRON'), ('like', 'VERB'), ('mortgages', 'NOUN'), (',', 'PUNCT'), ('credit', 'NOUN'), ('cards', 'NOUN'), (',', 'PUNCT'), ('…', 'PUNCT'), ('”', 'PUNCT'), ('Experience', 'NOUN'), ('has', 'AUX'), ('shown', 'VERB'), ('that', 'SCONJ'), ('applying', 'VERB'), ('the', 'DET'), ('keyword', 'NOUN'), ('spotting', 'NOUN'), ('approach', 'NOUN'), ('to', 'ADP'), ('these', 'DET'), ('fall', 'NOUN'), ('-', 'PUNCT'), ('back', 'NOUN'), ('grammars', 'NOUN'), ('often', 'ADV'), ('leads', 'VERB'), ('to', 'ADP'), ('a', 'DET'), ('successful', 'ADJ'), ('interaction', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('When', 'WRB'), ('there', 'EX'), ('is', 'VBZ'), ('no', 'DT'), ('match', 'NN'), (',', ','), ('the', 'DT'), ('system', 'NN'), ('will', 'MD'), ('offer', 'VB'), ('a', 'DT'), ('fall', 'NN'), ('-', 'HYPH'), ('back', 'NN'), ('alternative', 'NN'), ('that', 'WDT'), ('uses', 'VBZ'), ('traditional', 'JJ'), ('grammars', 'NNS'), ('to', 'TO'), ('determine', 'VB'), ('the', 'DT'), ('caller', 'NN'), ('’s', 'POS'), ('intent', 'NN'), ('such', 'JJ'), ('as', 'IN'), ('“', '``'), ('I', 'PRP'), ('’m', 'VBP'), ('sorry', 'JJ'), ('I', 'PRP'), ('did', 'VBD'), ('not', 'RB'), ('get', 'VB'), ('that', 'DT'), (',', ','), ('would', 'MD'), ('you', 'PRP'), ('like', 'VB'), ('mortgages', 'NNS'), (',', ','), ('credit', 'NN'), ('cards', 'NNS'), (',', ','), ('…', ','), ('”', "''"), ('Experience', 'NN'), ('has', 'VBZ'), ('shown', 'VBN'), ('that', 'IN'), ('applying', 'VBG'), ('the', 'DT'), ('keyword', 'NN'), ('spotting', 'NN'), ('approach', 'NN'), ('to', 'IN'), ('these', 'DT'), ('fall', 'NN'), ('-', 'HYPH'), ('back', 'NN'), ('grammars', 'NNS'), ('often', 'RB'), ('leads', 'VBZ'), ('to', 'IN'), ('a', 'DT'), ('successful', 'JJ'), ('interaction', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('When', 'when'), ('there', 'there'), ('is', 'be'), ('no', 'no'), ('match', 'match'), (',', ','), ('the', 'the'), ('system', 'system'), ('will', 'will'), ('offer', 'offer'), ('a', 'a'), ('fall', 'fall'), ('-', '-'), ('back', 'back'), ('alternative', 'alternative'), ('that', 'that'), ('uses', 'use'), ('traditional', 'traditional'), ('grammars', 'grammar'), ('to', 'to'), ('determine', 'determine'), ('the', 'the'), ('caller', 'caller'), ('’s', "'s"), ('intent', 'intent'), ('such', 'such'), ('as', 'as'), ('“', "''"), ('I', 'I'), ('’m', 'be'), ('sorry', 'sorry'), ('I', 'I'), ('did', 'do'), ('not', 'not'), ('get', 'get'), ('that', 'that'), (',', ','), ('would', 'would'), ('you', 'you'), ('like', 'like'), ('mortgages', 'mortgage'), (',', ','), ('credit', 'credit'), ('cards', 'card'), (',', ','), ('…', '…'), ('”', "''"), ('Experience', 'experience'), ('has', 'have'), ('shown', 'show'), ('that', 'that'), ('applying', 'apply'), ('the', 'the'), ('keyword', 'keyword'), ('spotting', 'spotting'), ('approach', 'approach'), ('to', 'to'), ('these', 'this'), ('fall', 'fall'), ('-', '-'), ('back', 'back'), ('grammars', 'grammar'), ('often', 'often'), ('leads', 'lead'), ('to', 'to'), ('a', 'a'), ('successful', 'successful'), ('interaction', 'interaction'), ('.', '.')] 

 Dependency tags are: 
>> [(('When', 'is'), 'mark'), (('there', 'is'), 'expl'), (('is', 'offer'), 'advcl'), (('no', 'match'), 'det'), (('match', 'is'), 'nsubj'), ((',', 'offer'), 'punct'), (('the', 'system'), 'det'), (('system', 'offer'), 'nsubj'), (('will', 'offer'), 'aux'), (('offer', 'root'), 'root'), (('a', 'alternative'), 'det'), (('fall', 'back'), 'compound'), (('-', 'back'), 'punct'), (('back', 'alternative'), 'compound'), (('alternative', 'offer'), 'obj'), (('that', 'uses'), 'nsubj'), (('uses', 'alternative'), 'acl:relcl'), (('traditional', 'grammars'), 'amod'), (('grammars', 'uses'), 'obj'), (('to', 'determine'), 'mark'), (('determine', 'uses'), 'advcl'), (('the', 'caller'), 'det'), (('caller', 'intent'), 'nmod:poss'), (('’s', 'caller'), 'case'), (('intent', 'determine'), 'obj'), (('such', 'sorry'), 'mark'), (('as', 'such'), 'fixed'), (('“', 'sorry'), 'punct'), (('I', 'sorry'), 'nsubj'), (('’m', 'sorry'), 'cop'), (('sorry', 'intent'), 'acl'), (('I', 'get'), 'nsubj'), (('did', 'get'), 'aux'), (('not', 'get'), 'advmod'), (('get', 'sorry'), 'ccomp'), (('that', 'get'), 'obj'), ((',', 'like'), 'punct'), (('would', 'like'), 'aux'), (('you', 'like'), 'nsubj'), (('like', 'sorry'), 'parataxis'), (('mortgages', 'like'), 'obj'), ((',', 'cards'), 'punct'), (('credit', 'cards'), 'compound'), (('cards', 'mortgages'), 'conj'), ((',', 'sorry'), 'punct'), (('…', 'sorry'), 'punct'), (('”', 'sorry'), 'punct'), (('Experience', 'shown'), 'nsubj'), (('has', 'shown'), 'aux'), (('shown', 'offer'), 'parataxis'), (('that', 'leads'), 'mark'), (('applying', 'leads'), 'csubj'), (('the', 'approach'), 'det'), (('keyword', 'spotting'), 'compound'), (('spotting', 'approach'), 'compound'), (('approach', 'applying'), 'obj'), (('to', 'grammars'), 'case'), (('these', 'grammars'), 'det'), (('fall', 'back'), 'compound'), (('-', 'back'), 'punct'), (('back', 'grammars'), 'compound'), (('grammars', 'approach'), 'nmod'), (('often', 'leads'), 'advmod'), (('leads', 'shown'), 'ccomp'), (('to', 'interaction'), 'case'), (('a', 'interaction'), 'det'), (('successful', 'interaction'), 'amod'), (('interaction', 'leads'), 'obl'), (('.', 'shown'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 85 ===========================

 Appropriate for determining the meaning of any open-ended response, this  powerful approach is highly effective for call routing applications. 

Tokens are: 
>> ['Appropriate', 'for', 'determining', 'the', 'meaning', 'of', 'any', 'open-ended', 'response', ',', 'this', 'powerful', 'approach', 'is', 'highly', 'effective', 'for', 'call', 'routing', 'applications', '.'] 

 UPOS tags are: 
>> [('Appropriate', 'ADJ'), ('for', 'SCONJ'), ('determining', 'VERB'), ('the', 'DET'), ('meaning', 'NOUN'), ('of', 'ADP'), ('any', 'DET'), ('open-ended', 'ADJ'), ('response', 'NOUN'), (',', 'PUNCT'), ('this', 'DET'), ('powerful', 'ADJ'), ('approach', 'NOUN'), ('is', 'AUX'), ('highly', 'ADV'), ('effective', 'ADJ'), ('for', 'ADP'), ('call', 'NOUN'), ('routing', 'NOUN'), ('applications', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Appropriate', 'JJ'), ('for', 'IN'), ('determining', 'VBG'), ('the', 'DT'), ('meaning', 'NN'), ('of', 'IN'), ('any', 'DT'), ('open-ended', 'JJ'), ('response', 'NN'), (',', ','), ('this', 'DT'), ('powerful', 'JJ'), ('approach', 'NN'), ('is', 'VBZ'), ('highly', 'RB'), ('effective', 'JJ'), ('for', 'IN'), ('call', 'NN'), ('routing', 'NN'), ('applications', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Appropriate', 'appropriate'), ('for', 'for'), ('determining', 'determine'), ('the', 'the'), ('meaning', 'meaning'), ('of', 'of'), ('any', 'any'), ('open-ended', 'open-ended'), ('response', 'response'), (',', ','), ('this', 'this'), ('powerful', 'powerful'), ('approach', 'approach'), ('is', 'be'), ('highly', 'highly'), ('effective', 'effective'), ('for', 'for'), ('call', 'call'), ('routing', 'routing'), ('applications', 'application'), ('.', '.')] 

 Dependency tags are: 
>> [(('Appropriate', 'effective'), 'advcl'), (('for', 'determining'), 'mark'), (('determining', 'Appropriate'), 'advcl'), (('the', 'meaning'), 'det'), (('meaning', 'determining'), 'obj'), (('of', 'response'), 'case'), (('any', 'response'), 'det'), (('open-ended', 'response'), 'amod'), (('response', 'meaning'), 'nmod'), ((',', 'effective'), 'punct'), (('this', 'approach'), 'det'), (('powerful', 'approach'), 'amod'), (('approach', 'effective'), 'nsubj'), (('is', 'effective'), 'cop'), (('highly', 'effective'), 'advmod'), (('effective', 'root'), 'root'), (('for', 'applications'), 'case'), (('call', 'applications'), 'compound'), (('routing', 'applications'), 'compound'), (('applications', 'effective'), 'obl'), (('.', 'effective'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 86 ===========================

 When  callers use their own words, there tends to be drastically fewer zero-outs  and misroutes as complicated menus are bypassed and confusing or arcane  jargon is avoided. 

Tokens are: 
>> ['When', 'callers', 'use', 'their', 'own', 'words', ',', 'there', 'tends', 'to', 'be', 'drastically', 'fewer', 'zero-outs', 'and', 'misroutes', 'as', 'complicated', 'menus', 'are', 'bypassed', 'and', 'confusing', 'or', 'arcane', 'jargon', 'is', 'avoided', '.'] 

 UPOS tags are: 
>> [('When', 'SCONJ'), ('callers', 'NOUN'), ('use', 'VERB'), ('their', 'PRON'), ('own', 'ADJ'), ('words', 'NOUN'), (',', 'PUNCT'), ('there', 'PRON'), ('tends', 'VERB'), ('to', 'PART'), ('be', 'AUX'), ('drastically', 'ADV'), ('fewer', 'ADJ'), ('zero-outs', 'NOUN'), ('and', 'CCONJ'), ('misroutes', 'NOUN'), ('as', 'SCONJ'), ('complicated', 'ADJ'), ('menus', 'NOUN'), ('are', 'AUX'), ('bypassed', 'VERB'), ('and', 'CCONJ'), ('confusing', 'ADJ'), ('or', 'CCONJ'), ('arcane', 'ADJ'), ('jargon', 'NOUN'), ('is', 'AUX'), ('avoided', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('When', 'WRB'), ('callers', 'NNS'), ('use', 'VBP'), ('their', 'PRP$'), ('own', 'JJ'), ('words', 'NNS'), (',', ','), ('there', 'EX'), ('tends', 'VBZ'), ('to', 'TO'), ('be', 'VB'), ('drastically', 'RB'), ('fewer', 'JJR'), ('zero-outs', 'NNS'), ('and', 'CC'), ('misroutes', 'NNS'), ('as', 'IN'), ('complicated', 'JJ'), ('menus', 'NNS'), ('are', 'VBP'), ('bypassed', 'VBN'), ('and', 'CC'), ('confusing', 'JJ'), ('or', 'CC'), ('arcane', 'JJ'), ('jargon', 'NN'), ('is', 'VBZ'), ('avoided', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('When', 'when'), ('callers', 'caller'), ('use', 'use'), ('their', 'they'), ('own', 'own'), ('words', 'word'), (',', ','), ('there', 'there'), ('tends', 'tend'), ('to', 'to'), ('be', 'be'), ('drastically', 'drastically'), ('fewer', 'few'), ('zero-outs', 'zero-out'), ('and', 'and'), ('misroutes', 'misroute'), ('as', 'as'), ('complicated', 'complicated'), ('menus', 'menus'), ('are', 'be'), ('bypassed', 'bypass'), ('and', 'and'), ('confusing', 'confusing'), ('or', 'or'), ('arcane', 'arcane'), ('jargon', 'jargon'), ('is', 'be'), ('avoided', 'avoid'), ('.', '.')] 

 Dependency tags are: 
>> [(('When', 'use'), 'mark'), (('callers', 'use'), 'nsubj'), (('use', 'tends'), 'advcl'), (('their', 'words'), 'nmod:poss'), (('own', 'words'), 'amod'), (('words', 'use'), 'obj'), ((',', 'tends'), 'punct'), (('there', 'tends'), 'expl'), (('tends', 'root'), 'root'), (('to', 'zero-outs'), 'mark'), (('be', 'zero-outs'), 'cop'), (('drastically', 'fewer'), 'advmod'), (('fewer', 'zero-outs'), 'amod'), (('zero-outs', 'tends'), 'xcomp'), (('and', 'misroutes'), 'cc'), (('misroutes', 'zero-outs'), 'conj'), (('as', 'bypassed'), 'mark'), (('complicated', 'menus'), 'amod'), (('menus', 'bypassed'), 'nsubj:pass'), (('are', 'bypassed'), 'aux:pass'), (('bypassed', 'tends'), 'advcl'), (('and', 'confusing'), 'cc'), (('confusing', 'bypassed'), 'conj'), (('or', 'avoided'), 'cc'), (('arcane', 'jargon'), 'amod'), (('jargon', 'avoided'), 'nsubj:pass'), (('is', 'avoided'), 'aux:pass'), (('avoided', 'bypassed'), 'conj'), (('.', 'tends'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 87 ===========================

 Provide	a	more	flexible	script Accurately recognizing the meaning of what a caller says is only part of how  natural language can improve automation. 

Tokens are: 
>> ['Provide', 'a', 'more', 'flexible', 'script', 'Accurately', 'recognizing', 'the', 'meaning', 'of', 'what', 'a', 'caller', 'says', 'is', 'only', 'part', 'of', 'how', 'natural', 'language', 'can', 'improve', 'automation', '.'] 

 UPOS tags are: 
>> [('Provide', 'VERB'), ('a', 'DET'), ('more', 'ADV'), ('flexible', 'ADJ'), ('script', 'NOUN'), ('Accurately', 'ADV'), ('recognizing', 'VERB'), ('the', 'DET'), ('meaning', 'NOUN'), ('of', 'ADP'), ('what', 'PRON'), ('a', 'DET'), ('caller', 'NOUN'), ('says', 'VERB'), ('is', 'AUX'), ('only', 'ADV'), ('part', 'NOUN'), ('of', 'ADP'), ('how', 'SCONJ'), ('natural', 'ADJ'), ('language', 'NOUN'), ('can', 'AUX'), ('improve', 'VERB'), ('automation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Provide', 'VB'), ('a', 'DT'), ('more', 'RBR'), ('flexible', 'JJ'), ('script', 'NN'), ('Accurately', 'RB'), ('recognizing', 'VBG'), ('the', 'DT'), ('meaning', 'NN'), ('of', 'IN'), ('what', 'WP'), ('a', 'DT'), ('caller', 'NN'), ('says', 'VBZ'), ('is', 'VBZ'), ('only', 'RB'), ('part', 'NN'), ('of', 'IN'), ('how', 'WRB'), ('natural', 'JJ'), ('language', 'NN'), ('can', 'MD'), ('improve', 'VB'), ('automation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Provide', 'provide'), ('a', 'a'), ('more', 'more'), ('flexible', 'flexible'), ('script', 'script'), ('Accurately', 'accurately'), ('recognizing', 'recognize'), ('the', 'the'), ('meaning', 'meaning'), ('of', 'of'), ('what', 'what'), ('a', 'a'), ('caller', 'caller'), ('says', 'say'), ('is', 'be'), ('only', 'only'), ('part', 'part'), ('of', 'of'), ('how', 'how'), ('natural', 'natural'), ('language', 'language'), ('can', 'can'), ('improve', 'improve'), ('automation', 'automation'), ('.', '.')] 

 Dependency tags are: 
>> [(('Provide', 'root'), 'root'), (('a', 'script'), 'det'), (('more', 'flexible'), 'advmod'), (('flexible', 'script'), 'amod'), (('script', 'Provide'), 'obj'), (('Accurately', 'recognizing'), 'advmod'), (('recognizing', 'Provide'), 'advcl'), (('the', 'meaning'), 'det'), (('meaning', 'recognizing'), 'obj'), (('of', 'what'), 'case'), (('what', 'meaning'), 'nmod'), (('a', 'caller'), 'det'), (('caller', 'says'), 'nsubj'), (('says', 'what'), 'acl:relcl'), (('is', 'part'), 'cop'), (('only', 'part'), 'advmod'), (('part', 'says'), 'ccomp'), (('of', 'how'), 'case'), (('how', 'improve'), 'mark'), (('natural', 'language'), 'amod'), (('language', 'improve'), 'nsubj'), (('can', 'improve'), 'aux'), (('improve', 'part'), 'acl:relcl'), (('automation', 'improve'), 'obj'), (('.', 'Provide'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 88 ===========================

 The next step in learning to speak  customer-ese is for the self-service system to have a conversation with the  caller. 

Tokens are: 
>> ['The', 'next', 'step', 'in', 'learning', 'to', 'speak', 'customer', '-', 'ese', 'is', 'for', 'the', 'self', '-', 'service', 'system', 'to', 'have', 'a', 'conversation', 'with', 'the', 'caller', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('next', 'ADJ'), ('step', 'NOUN'), ('in', 'SCONJ'), ('learning', 'VERB'), ('to', 'PART'), ('speak', 'VERB'), ('customer', 'NOUN'), ('-', 'PUNCT'), ('ese', 'NOUN'), ('is', 'AUX'), ('for', 'ADP'), ('the', 'DET'), ('self', 'NOUN'), ('-', 'PUNCT'), ('service', 'NOUN'), ('system', 'NOUN'), ('to', 'PART'), ('have', 'VERB'), ('a', 'DET'), ('conversation', 'NOUN'), ('with', 'ADP'), ('the', 'DET'), ('caller', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('next', 'JJ'), ('step', 'NN'), ('in', 'IN'), ('learning', 'VBG'), ('to', 'TO'), ('speak', 'VB'), ('customer', 'NN'), ('-', 'HYPH'), ('ese', 'NN'), ('is', 'VBZ'), ('for', 'IN'), ('the', 'DT'), ('self', 'NN'), ('-', 'HYPH'), ('service', 'NN'), ('system', 'NN'), ('to', 'TO'), ('have', 'VB'), ('a', 'DT'), ('conversation', 'NN'), ('with', 'IN'), ('the', 'DT'), ('caller', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('next', 'next'), ('step', 'step'), ('in', 'in'), ('learning', 'learn'), ('to', 'to'), ('speak', 'speak'), ('customer', 'customer'), ('-', '-'), ('ese', 'ese'), ('is', 'be'), ('for', 'for'), ('the', 'the'), ('self', 'self'), ('-', '-'), ('service', 'service'), ('system', 'system'), ('to', 'to'), ('have', 'have'), ('a', 'a'), ('conversation', 'conversation'), ('with', 'with'), ('the', 'the'), ('caller', 'caller'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'step'), 'det'), (('next', 'step'), 'amod'), (('step', 'system'), 'nsubj'), (('in', 'learning'), 'mark'), (('learning', 'step'), 'acl'), (('to', 'speak'), 'mark'), (('speak', 'learning'), 'xcomp'), (('customer', 'ese'), 'compound'), (('-', 'ese'), 'punct'), (('ese', 'speak'), 'obj'), (('is', 'system'), 'cop'), (('for', 'system'), 'case'), (('the', 'system'), 'det'), (('self', 'service'), 'compound'), (('-', 'service'), 'punct'), (('service', 'system'), 'compound'), (('system', 'root'), 'root'), (('to', 'have'), 'mark'), (('have', 'system'), 'acl'), (('a', 'conversation'), 'det'), (('conversation', 'have'), 'obj'), (('with', 'caller'), 'case'), (('the', 'caller'), 'det'), (('caller', 'conversation'), 'nmod'), (('.', 'system'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 89 ===========================

 The conversational approach relies on dialogs that continuously adapt to  the information provided. 

Tokens are: 
>> ['The', 'conversational', 'approach', 'relies', 'on', 'dialogs', 'that', 'continuously', 'adapt', 'to', 'the', 'information', 'provided', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('conversational', 'ADJ'), ('approach', 'NOUN'), ('relies', 'VERB'), ('on', 'ADP'), ('dialogs', 'NOUN'), ('that', 'PRON'), ('continuously', 'ADV'), ('adapt', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('information', 'NOUN'), ('provided', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('conversational', 'JJ'), ('approach', 'NN'), ('relies', 'VBZ'), ('on', 'IN'), ('dialogs', 'NNS'), ('that', 'WDT'), ('continuously', 'RB'), ('adapt', 'VBP'), ('to', 'IN'), ('the', 'DT'), ('information', 'NN'), ('provided', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('conversational', 'conversational'), ('approach', 'approach'), ('relies', 'rely'), ('on', 'on'), ('dialogs', 'dialog'), ('that', 'that'), ('continuously', 'continuously'), ('adapt', 'adapt'), ('to', 'to'), ('the', 'the'), ('information', 'information'), ('provided', 'provide'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'approach'), 'det'), (('conversational', 'approach'), 'amod'), (('approach', 'relies'), 'nsubj'), (('relies', 'root'), 'root'), (('on', 'dialogs'), 'case'), (('dialogs', 'relies'), 'obl'), (('that', 'adapt'), 'nsubj'), (('continuously', 'adapt'), 'advmod'), (('adapt', 'dialogs'), 'acl:relcl'), (('to', 'information'), 'case'), (('the', 'information'), 'det'), (('information', 'adapt'), 'obl'), (('provided', 'information'), 'acl'), (('.', 'relies'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 90 ===========================

 This way the caller has a personalized experience  while they control the conversation. 

Tokens are: 
>> ['This', 'way', 'the', 'caller', 'has', 'a', 'personalized', 'experience', 'while', 'they', 'control', 'the', 'conversation', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('way', 'NOUN'), ('the', 'DET'), ('caller', 'NOUN'), ('has', 'VERB'), ('a', 'DET'), ('personalized', 'VERB'), ('experience', 'NOUN'), ('while', 'SCONJ'), ('they', 'PRON'), ('control', 'VERB'), ('the', 'DET'), ('conversation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('way', 'NN'), ('the', 'DT'), ('caller', 'NN'), ('has', 'VBZ'), ('a', 'DT'), ('personalized', 'VBN'), ('experience', 'NN'), ('while', 'IN'), ('they', 'PRP'), ('control', 'VBP'), ('the', 'DT'), ('conversation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('way', 'way'), ('the', 'the'), ('caller', 'caller'), ('has', 'have'), ('a', 'a'), ('personalized', 'personalize'), ('experience', 'experience'), ('while', 'while'), ('they', 'they'), ('control', 'control'), ('the', 'the'), ('conversation', 'conversation'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'way'), 'det'), (('way', 'has'), 'obl:npmod'), (('the', 'caller'), 'det'), (('caller', 'has'), 'nsubj'), (('has', 'root'), 'root'), (('a', 'experience'), 'det'), (('personalized', 'experience'), 'amod'), (('experience', 'has'), 'obj'), (('while', 'control'), 'mark'), (('they', 'control'), 'nsubj'), (('control', 'has'), 'advcl'), (('the', 'conversation'), 'det'), (('conversation', 'control'), 'obj'), (('.', 'has'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 91 ===========================

 For example, callers often provide  more information than prompted for. 

Tokens are: 
>> ['For', 'example', ',', 'callers', 'often', 'provide', 'more', 'information', 'than', 'prompted', 'for', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('callers', 'NOUN'), ('often', 'ADV'), ('provide', 'VERB'), ('more', 'ADJ'), ('information', 'NOUN'), ('than', 'SCONJ'), ('prompted', 'VERB'), ('for', 'ADP'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('example', 'NN'), (',', ','), ('callers', 'NNS'), ('often', 'RB'), ('provide', 'VBP'), ('more', 'JJR'), ('information', 'NN'), ('than', 'IN'), ('prompted', 'VBN'), ('for', 'IN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('example', 'example'), (',', ','), ('callers', 'caller'), ('often', 'often'), ('provide', 'provide'), ('more', 'more'), ('information', 'information'), ('than', 'than'), ('prompted', 'prompt'), ('for', 'for'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'example'), 'case'), (('example', 'provide'), 'obl'), ((',', 'provide'), 'punct'), (('callers', 'provide'), 'nsubj'), (('often', 'provide'), 'advmod'), (('provide', 'root'), 'root'), (('more', 'information'), 'amod'), (('information', 'provide'), 'obj'), (('than', 'prompted'), 'mark'), (('prompted', 'information'), 'acl'), (('for', 'prompted'), 'obl'), (('.', 'provide'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 92 ===========================

 A system that can respond to varying  amounts of information will have more productive and shorter calls. 

Tokens are: 
>> ['A', 'system', 'that', 'can', 'respond', 'to', 'varying', 'amounts', 'of', 'information', 'will', 'have', 'more', 'productive', 'and', 'shorter', 'calls', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('system', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('respond', 'VERB'), ('to', 'ADP'), ('varying', 'VERB'), ('amounts', 'NOUN'), ('of', 'ADP'), ('information', 'NOUN'), ('will', 'AUX'), ('have', 'VERB'), ('more', 'ADV'), ('productive', 'ADJ'), ('and', 'CCONJ'), ('shorter', 'ADJ'), ('calls', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('system', 'NN'), ('that', 'WDT'), ('can', 'MD'), ('respond', 'VB'), ('to', 'IN'), ('varying', 'VBG'), ('amounts', 'NNS'), ('of', 'IN'), ('information', 'NN'), ('will', 'MD'), ('have', 'VB'), ('more', 'RBR'), ('productive', 'JJ'), ('and', 'CC'), ('shorter', 'JJR'), ('calls', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('system', 'system'), ('that', 'that'), ('can', 'can'), ('respond', 'respond'), ('to', 'to'), ('varying', 'vary'), ('amounts', 'amount'), ('of', 'of'), ('information', 'information'), ('will', 'will'), ('have', 'have'), ('more', 'more'), ('productive', 'productive'), ('and', 'and'), ('shorter', 'short'), ('calls', 'call'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'system'), 'det'), (('system', 'have'), 'nsubj'), (('that', 'respond'), 'nsubj'), (('can', 'respond'), 'aux'), (('respond', 'system'), 'acl:relcl'), (('to', 'amounts'), 'case'), (('varying', 'amounts'), 'amod'), (('amounts', 'respond'), 'obl'), (('of', 'information'), 'case'), (('information', 'amounts'), 'nmod'), (('will', 'have'), 'aux'), (('have', 'root'), 'root'), (('more', 'productive'), 'advmod'), (('productive', 'calls'), 'amod'), (('and', 'shorter'), 'cc'), (('shorter', 'productive'), 'conj'), (('calls', 'have'), 'obj'), (('.', 'have'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 93 ===========================

 Notice in  the dialog at the right the caller provides the ‘extra’ information of the return  date allowing the system to avoid having to ask for it. 

Tokens are: 
>> ['Notice', 'in', 'the', 'dialog', 'at', 'the', 'right', 'the', 'caller', 'provides', 'the', '‘', 'extra', '’', 'information', 'of', 'the', 'return', 'date', 'allowing', 'the', 'system', 'to', 'avoid', 'having', 'to', 'ask', 'for', 'it', '.'] 

 UPOS tags are: 
>> [('Notice', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('dialog', 'NOUN'), ('at', 'ADP'), ('the', 'DET'), ('right', 'NOUN'), ('the', 'DET'), ('caller', 'NOUN'), ('provides', 'VERB'), ('the', 'DET'), ('‘', 'PUNCT'), ('extra', 'ADJ'), ('’', 'PUNCT'), ('information', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('return', 'NOUN'), ('date', 'NOUN'), ('allowing', 'VERB'), ('the', 'DET'), ('system', 'NOUN'), ('to', 'PART'), ('avoid', 'VERB'), ('having', 'VERB'), ('to', 'PART'), ('ask', 'VERB'), ('for', 'ADP'), ('it', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Notice', 'VB'), ('in', 'IN'), ('the', 'DT'), ('dialog', 'NN'), ('at', 'IN'), ('the', 'DT'), ('right', 'NN'), ('the', 'DT'), ('caller', 'NN'), ('provides', 'VBZ'), ('the', 'DT'), ('‘', '``'), ('extra', 'JJ'), ('’', "''"), ('information', 'NN'), ('of', 'IN'), ('the', 'DT'), ('return', 'NN'), ('date', 'NN'), ('allowing', 'VBG'), ('the', 'DT'), ('system', 'NN'), ('to', 'TO'), ('avoid', 'VB'), ('having', 'VBG'), ('to', 'TO'), ('ask', 'VB'), ('for', 'IN'), ('it', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('Notice', 'notice'), ('in', 'in'), ('the', 'the'), ('dialog', 'dialog'), ('at', 'at'), ('the', 'the'), ('right', 'right'), ('the', 'the'), ('caller', 'caller'), ('provides', 'provide'), ('the', 'the'), ('‘', "'"), ('extra', 'extra'), ('’', "'"), ('information', 'information'), ('of', 'of'), ('the', 'the'), ('return', 'return'), ('date', 'date'), ('allowing', 'allow'), ('the', 'the'), ('system', 'system'), ('to', 'to'), ('avoid', 'avoid'), ('having', 'have'), ('to', 'to'), ('ask', 'ask'), ('for', 'for'), ('it', 'it'), ('.', '.')] 

 Dependency tags are: 
>> [(('Notice', 'root'), 'root'), (('in', 'dialog'), 'case'), (('the', 'dialog'), 'det'), (('dialog', 'Notice'), 'obl'), (('at', 'right'), 'case'), (('the', 'right'), 'det'), (('right', 'Notice'), 'obl'), (('the', 'caller'), 'det'), (('caller', 'provides'), 'nsubj'), (('provides', 'right'), 'acl:relcl'), (('the', 'information'), 'det'), (('‘', 'information'), 'punct'), (('extra', 'information'), 'amod'), (('’', 'information'), 'punct'), (('information', 'provides'), 'obj'), (('of', 'date'), 'case'), (('the', 'date'), 'det'), (('return', 'date'), 'compound'), (('date', 'information'), 'nmod'), (('allowing', 'date'), 'acl'), (('the', 'system'), 'det'), (('system', 'allowing'), 'obj'), (('to', 'avoid'), 'mark'), (('avoid', 'allowing'), 'xcomp'), (('having', 'avoid'), 'xcomp'), (('to', 'ask'), 'mark'), (('ask', 'having'), 'xcomp'), (('for', 'it'), 'case'), (('it', 'ask'), 'obl'), (('.', 'Notice'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 94 ===========================

 More than collecting information, a natural language conversation needs  to flow smoothly. 

Tokens are: 
>> ['More', 'than', 'collecting', 'information', ',', 'a', 'natural', 'language', 'conversation', 'needs', 'to', 'flow', 'smoothly', '.'] 

 UPOS tags are: 
>> [('More', 'ADV'), ('than', 'SCONJ'), ('collecting', 'VERB'), ('information', 'NOUN'), (',', 'PUNCT'), ('a', 'DET'), ('natural', 'ADJ'), ('language', 'NOUN'), ('conversation', 'NOUN'), ('needs', 'VERB'), ('to', 'PART'), ('flow', 'VERB'), ('smoothly', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('More', 'RBR'), ('than', 'IN'), ('collecting', 'VBG'), ('information', 'NN'), (',', ','), ('a', 'DT'), ('natural', 'JJ'), ('language', 'NN'), ('conversation', 'NN'), ('needs', 'VBZ'), ('to', 'TO'), ('flow', 'VB'), ('smoothly', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('More', 'more'), ('than', 'than'), ('collecting', 'collect'), ('information', 'information'), (',', ','), ('a', 'a'), ('natural', 'natural'), ('language', 'language'), ('conversation', 'conversation'), ('needs', 'need'), ('to', 'to'), ('flow', 'flow'), ('smoothly', 'smoothly'), ('.', '.')] 

 Dependency tags are: 
>> [(('More', 'needs'), 'advmod'), (('than', 'collecting'), 'mark'), (('collecting', 'needs'), 'advcl'), (('information', 'collecting'), 'obj'), ((',', 'needs'), 'punct'), (('a', 'conversation'), 'det'), (('natural', 'conversation'), 'amod'), (('language', 'conversation'), 'compound'), (('conversation', 'needs'), 'nsubj'), (('needs', 'root'), 'root'), (('to', 'flow'), 'mark'), (('flow', 'needs'), 'xcomp'), (('smoothly', 'flow'), 'advmod'), (('.', 'needs'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 95 ===========================

 A system that constantly asks for confirmations creates a  disjointed conversation that callers tend to reject. 

Tokens are: 
>> ['A', 'system', 'that', 'constantly', 'asks', 'for', 'confirmations', 'creates', 'a', 'disjointed', 'conversation', 'that', 'callers', 'tend', 'to', 'reject', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('system', 'NOUN'), ('that', 'PRON'), ('constantly', 'ADV'), ('asks', 'VERB'), ('for', 'ADP'), ('confirmations', 'NOUN'), ('creates', 'VERB'), ('a', 'DET'), ('disjointed', 'ADJ'), ('conversation', 'NOUN'), ('that', 'PRON'), ('callers', 'NOUN'), ('tend', 'VERB'), ('to', 'PART'), ('reject', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('system', 'NN'), ('that', 'WDT'), ('constantly', 'RB'), ('asks', 'VBZ'), ('for', 'IN'), ('confirmations', 'NNS'), ('creates', 'VBZ'), ('a', 'DT'), ('disjointed', 'JJ'), ('conversation', 'NN'), ('that', 'WDT'), ('callers', 'NNS'), ('tend', 'VBP'), ('to', 'TO'), ('reject', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('system', 'system'), ('that', 'that'), ('constantly', 'constantly'), ('asks', 'ask'), ('for', 'for'), ('confirmations', 'confirmation'), ('creates', 'create'), ('a', 'a'), ('disjointed', 'disjointed'), ('conversation', 'conversation'), ('that', 'that'), ('callers', 'caller'), ('tend', 'tend'), ('to', 'to'), ('reject', 'reject'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'system'), 'det'), (('system', 'creates'), 'nsubj'), (('that', 'asks'), 'nsubj'), (('constantly', 'asks'), 'advmod'), (('asks', 'system'), 'acl:relcl'), (('for', 'confirmations'), 'case'), (('confirmations', 'asks'), 'obl'), (('creates', 'root'), 'root'), (('a', 'conversation'), 'det'), (('disjointed', 'conversation'), 'amod'), (('conversation', 'creates'), 'obj'), (('that', 'tend'), 'obj'), (('callers', 'tend'), 'nsubj'), (('tend', 'conversation'), 'acl:relcl'), (('to', 'reject'), 'mark'), (('reject', 'tend'), 'xcomp'), (('.', 'creates'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 96 ===========================

 However systems that can  handle corrections and verifications by dynamically embedding the confir- mations in the next prompt are more engaging, leading to better automation  rates. 

Tokens are: 
>> ['However', 'systems', 'that', 'can', 'handle', 'corrections', 'and', 'verifications', 'by', 'dynamically', 'embedding', 'the', 'confir-', 'mations', 'in', 'the', 'next', 'prompt', 'are', 'more', 'engaging', ',', 'leading', 'to', 'better', 'automation', 'rates', '.'] 

 UPOS tags are: 
>> [('However', 'ADV'), ('systems', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('handle', 'VERB'), ('corrections', 'NOUN'), ('and', 'CCONJ'), ('verifications', 'NOUN'), ('by', 'SCONJ'), ('dynamically', 'ADV'), ('embedding', 'VERB'), ('the', 'DET'), ('confir-', 'NOUN'), ('mations', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('next', 'ADJ'), ('prompt', 'NOUN'), ('are', 'AUX'), ('more', 'ADV'), ('engaging', 'ADJ'), (',', 'PUNCT'), ('leading', 'VERB'), ('to', 'ADP'), ('better', 'ADJ'), ('automation', 'NOUN'), ('rates', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('However', 'RB'), ('systems', 'NNS'), ('that', 'WDT'), ('can', 'MD'), ('handle', 'VB'), ('corrections', 'NNS'), ('and', 'CC'), ('verifications', 'NNS'), ('by', 'IN'), ('dynamically', 'RB'), ('embedding', 'VBG'), ('the', 'DT'), ('confir-', 'NN'), ('mations', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('next', 'JJ'), ('prompt', 'NN'), ('are', 'VBP'), ('more', 'RBR'), ('engaging', 'JJ'), (',', ','), ('leading', 'VBG'), ('to', 'IN'), ('better', 'JJR'), ('automation', 'NN'), ('rates', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('However', 'however'), ('systems', 'system'), ('that', 'that'), ('can', 'can'), ('handle', 'handle'), ('corrections', 'correction'), ('and', 'and'), ('verifications', 'verification'), ('by', 'by'), ('dynamically', 'dynamically'), ('embedding', 'embed'), ('the', 'the'), ('confir-', 'confir-'), ('mations', 'mation'), ('in', 'in'), ('the', 'the'), ('next', 'next'), ('prompt', 'prompt'), ('are', 'be'), ('more', 'more'), ('engaging', 'engaging'), (',', ','), ('leading', 'lead'), ('to', 'to'), ('better', 'good'), ('automation', 'automation'), ('rates', 'rate'), ('.', '.')] 

 Dependency tags are: 
>> [(('However', 'engaging'), 'advmod'), (('systems', 'engaging'), 'nsubj'), (('that', 'handle'), 'nsubj'), (('can', 'handle'), 'aux'), (('handle', 'systems'), 'acl:relcl'), (('corrections', 'handle'), 'obj'), (('and', 'verifications'), 'cc'), (('verifications', 'corrections'), 'conj'), (('by', 'embedding'), 'mark'), (('dynamically', 'embedding'), 'advmod'), (('embedding', 'handle'), 'advcl'), (('the', 'mations'), 'det'), (('confir-', 'mations'), 'compound'), (('mations', 'embedding'), 'obj'), (('in', 'prompt'), 'case'), (('the', 'prompt'), 'det'), (('next', 'prompt'), 'amod'), (('prompt', 'mations'), 'nmod'), (('are', 'engaging'), 'cop'), (('more', 'engaging'), 'advmod'), (('engaging', 'root'), 'root'), ((',', 'leading'), 'punct'), (('leading', 'engaging'), 'advcl'), (('to', 'rates'), 'case'), (('better', 'rates'), 'amod'), (('automation', 'rates'), 'compound'), (('rates', 'leading'), 'obl'), (('.', 'engaging'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 97 ===========================

 Notice in the dialog below how the system confirms the change to  Boston when the caller requests a window seat. 

Tokens are: 
>> ['Notice', 'in', 'the', 'dialog', 'below', 'how', 'the', 'system', 'confirms', 'the', 'change', 'to', 'Boston', 'when', 'the', 'caller', 'requests', 'a', 'window', 'seat', '.'] 

 UPOS tags are: 
>> [('Notice', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('dialog', 'NOUN'), ('below', 'ADP'), ('how', 'SCONJ'), ('the', 'DET'), ('system', 'NOUN'), ('confirms', 'VERB'), ('the', 'DET'), ('change', 'NOUN'), ('to', 'ADP'), ('Boston', 'PROPN'), ('when', 'SCONJ'), ('the', 'DET'), ('caller', 'NOUN'), ('requests', 'VERB'), ('a', 'DET'), ('window', 'NOUN'), ('seat', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Notice', 'VB'), ('in', 'IN'), ('the', 'DT'), ('dialog', 'NN'), ('below', 'IN'), ('how', 'WRB'), ('the', 'DT'), ('system', 'NN'), ('confirms', 'VBZ'), ('the', 'DT'), ('change', 'NN'), ('to', 'IN'), ('Boston', 'NNP'), ('when', 'WRB'), ('the', 'DT'), ('caller', 'NN'), ('requests', 'VBZ'), ('a', 'DT'), ('window', 'NN'), ('seat', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Notice', 'notice'), ('in', 'in'), ('the', 'the'), ('dialog', 'dialog'), ('below', 'below'), ('how', 'how'), ('the', 'the'), ('system', 'system'), ('confirms', 'confirm'), ('the', 'the'), ('change', 'change'), ('to', 'to'), ('Boston', 'Boston'), ('when', 'when'), ('the', 'the'), ('caller', 'caller'), ('requests', 'request'), ('a', 'a'), ('window', 'window'), ('seat', 'seat'), ('.', '.')] 

 Dependency tags are: 
>> [(('Notice', 'root'), 'root'), (('in', 'dialog'), 'case'), (('the', 'dialog'), 'det'), (('dialog', 'Notice'), 'obl'), (('below', 'how'), 'case'), (('how', 'confirms'), 'mark'), (('the', 'system'), 'det'), (('system', 'confirms'), 'nsubj'), (('confirms', 'dialog'), 'acl'), (('the', 'change'), 'det'), (('change', 'confirms'), 'obj'), (('to', 'Boston'), 'case'), (('Boston', 'change'), 'nmod'), (('when', 'requests'), 'mark'), (('the', 'caller'), 'det'), (('caller', 'requests'), 'nsubj'), (('requests', 'confirms'), 'advcl'), (('a', 'seat'), 'det'), (('window', 'seat'), 'compound'), (('seat', 'requests'), 'obj'), (('.', 'Notice'), 'punct')]

 Named Entities are: 
>> [('Boston', 'GPE')]

========================== Sentence 98 ===========================

 Natural Language Understanding  technology increases automation by  correctly interpreting the meaning  behind open-ended caller responses  allowing callers to use their own words  rather than words chosen for them. 

Tokens are: 
>> ['Natural', 'Language', 'Understanding', 'technology', 'increases', 'automation', 'by', 'correctly', 'interpreting', 'the', 'meaning', 'behind', 'open-ended', 'caller', 'responses', 'allowing', 'callers', 'to', 'use', 'their', 'own', 'words', 'rather', 'than', 'words', 'chosen', 'for', 'them', '.'] 

 UPOS tags are: 
>> [('Natural', 'ADJ'), ('Language', 'NOUN'), ('Understanding', 'NOUN'), ('technology', 'NOUN'), ('increases', 'VERB'), ('automation', 'NOUN'), ('by', 'SCONJ'), ('correctly', 'ADV'), ('interpreting', 'VERB'), ('the', 'DET'), ('meaning', 'NOUN'), ('behind', 'ADP'), ('open-ended', 'ADJ'), ('caller', 'NOUN'), ('responses', 'NOUN'), ('allowing', 'VERB'), ('callers', 'NOUN'), ('to', 'PART'), ('use', 'VERB'), ('their', 'PRON'), ('own', 'ADJ'), ('words', 'NOUN'), ('rather', 'ADV'), ('than', 'ADP'), ('words', 'NOUN'), ('chosen', 'VERB'), ('for', 'ADP'), ('them', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Natural', 'JJ'), ('Language', 'NN'), ('Understanding', 'NN'), ('technology', 'NN'), ('increases', 'VBZ'), ('automation', 'NN'), ('by', 'IN'), ('correctly', 'RB'), ('interpreting', 'VBG'), ('the', 'DT'), ('meaning', 'NN'), ('behind', 'IN'), ('open-ended', 'JJ'), ('caller', 'NN'), ('responses', 'NNS'), ('allowing', 'VBG'), ('callers', 'NNS'), ('to', 'TO'), ('use', 'VB'), ('their', 'PRP$'), ('own', 'JJ'), ('words', 'NNS'), ('rather', 'RB'), ('than', 'IN'), ('words', 'NNS'), ('chosen', 'VBN'), ('for', 'IN'), ('them', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('Natural', 'Natural'), ('Language', 'language'), ('Understanding', 'understanding'), ('technology', 'technology'), ('increases', 'increase'), ('automation', 'automation'), ('by', 'by'), ('correctly', 'correctly'), ('interpreting', 'interpret'), ('the', 'the'), ('meaning', 'meaning'), ('behind', 'behind'), ('open-ended', 'open-ended'), ('caller', 'caller'), ('responses', 'response'), ('allowing', 'allow'), ('callers', 'caller'), ('to', 'to'), ('use', 'use'), ('their', 'they'), ('own', 'own'), ('words', 'word'), ('rather', 'rather'), ('than', 'than'), ('words', 'word'), ('chosen', 'choose'), ('for', 'for'), ('them', 'they'), ('.', '.')] 

 Dependency tags are: 
>> [(('Natural', 'technology'), 'amod'), (('Language', 'Understanding'), 'compound'), (('Understanding', 'technology'), 'compound'), (('technology', 'increases'), 'nsubj'), (('increases', 'root'), 'root'), (('automation', 'increases'), 'obj'), (('by', 'interpreting'), 'mark'), (('correctly', 'interpreting'), 'advmod'), (('interpreting', 'increases'), 'advcl'), (('the', 'meaning'), 'det'), (('meaning', 'interpreting'), 'obj'), (('behind', 'responses'), 'case'), (('open-ended', 'responses'), 'amod'), (('caller', 'responses'), 'compound'), (('responses', 'meaning'), 'nmod'), (('allowing', 'responses'), 'acl'), (('callers', 'allowing'), 'obj'), (('to', 'use'), 'mark'), (('use', 'allowing'), 'xcomp'), (('their', 'words'), 'nmod:poss'), (('own', 'words'), 'amod'), (('words', 'use'), 'obj'), (('rather', 'words'), 'cc'), (('than', 'rather'), 'fixed'), (('words', 'words'), 'conj'), (('chosen', 'words'), 'acl'), (('for', 'them'), 'case'), (('them', 'chosen'), 'obl'), (('.', 'increases'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 99 ===========================

 White PaperCustomer Service Solutions Natural language understanding 

Tokens are: 
>> ['White', 'PaperCustomer', 'Service', 'Solutions', 'Natural', 'language', 'understanding'] 

 UPOS tags are: 
>> [('White', 'ADJ'), ('PaperCustomer', 'NOUN'), ('Service', 'NOUN'), ('Solutions', 'NOUN'), ('Natural', 'ADJ'), ('language', 'NOUN'), ('understanding', 'NOUN')] 

 XPOS tags are: 
>> [('White', 'JJ'), ('PaperCustomer', 'NN'), ('Service', 'NN'), ('Solutions', 'NNS'), ('Natural', 'JJ'), ('language', 'NN'), ('understanding', 'NN')] 

 Lemmas are: 
>> [('White', 'White'), ('PaperCustomer', 'papercustomer'), ('Service', 'service'), ('Solutions', 'solution'), ('Natural', 'Natural'), ('language', 'language'), ('understanding', 'understanding')] 

 Dependency tags are: 
>> [(('White', 'Service'), 'amod'), (('PaperCustomer', 'Service'), 'compound'), (('Service', 'root'), 'root'), (('Solutions', 'understanding'), 'compound'), (('Natural', 'language'), 'amod'), (('language', 'understanding'), 'compound'), (('understanding', 'Service'), 'conj')]

 Named Entities are: 
>> [('White PaperCustomer Service Solutions', 'ORG')]

========================== Sentence 100 ===========================

 5  Natural  Language   Understanding  Directed Dialogue or DTMF Method Only -  Requires Pre-Defined Menu 

Tokens are: 
>> ['5', 'Natural', 'Language', 'Understanding', 'Directed', 'Dialogue', 'or', 'DTMF', 'Method', 'Only', '-', 'Requires', 'Pre-Defined', 'Menu'] 

 UPOS tags are: 
>> [('5', 'NUM'), ('Natural', 'ADJ'), ('Language', 'NOUN'), ('Understanding', 'NOUN'), ('Directed', 'VERB'), ('Dialogue', 'NOUN'), ('or', 'CCONJ'), ('DTMF', 'NOUN'), ('Method', 'NOUN'), ('Only', 'ADV'), ('-', 'PUNCT'), ('Requires', 'VERB'), ('Pre-Defined', 'ADJ'), ('Menu', 'NOUN')] 

 XPOS tags are: 
>> [('5', 'CD'), ('Natural', 'JJ'), ('Language', 'NN'), ('Understanding', 'NN'), ('Directed', 'VBN'), ('Dialogue', 'NN'), ('or', 'CC'), ('DTMF', 'NN'), ('Method', 'NN'), ('Only', 'RB'), ('-', ','), ('Requires', 'VBZ'), ('Pre-Defined', 'JJ'), ('Menu', 'NN')] 

 Lemmas are: 
>> [('5', '5'), ('Natural', 'Natural'), ('Language', 'language'), ('Understanding', 'understanding'), ('Directed', 'direct'), ('Dialogue', 'dialogue'), ('or', 'or'), ('DTMF', 'dtmf'), ('Method', 'method'), ('Only', 'only'), ('-', '-'), ('Requires', 'require'), ('Pre-Defined', 'pre-defined'), ('Menu', 'menu')] 

 Dependency tags are: 
>> [(('5', 'Understanding'), 'nummod'), (('Natural', 'Understanding'), 'amod'), (('Language', 'Understanding'), 'compound'), (('Understanding', 'root'), 'root'), (('Directed', 'Understanding'), 'acl'), (('Dialogue', 'Understanding'), 'appos'), (('or', 'Method'), 'cc'), (('DTMF', 'Method'), 'compound'), (('Method', 'Dialogue'), 'conj'), (('Only', 'Method'), 'advmod'), (('-', 'Requires'), 'punct'), (('Requires', 'Understanding'), 'parataxis'), (('Pre-Defined', 'Menu'), 'amod'), (('Menu', 'Requires'), 'obj')]

 Named Entities are: 
>> [('5', 'CARDINAL')]

========================== Sentence 101 ===========================

 Tree 

Tokens are: 
>> ['Tree'] 

 UPOS tags are: 
>> [('Tree', 'NOUN')] 

 XPOS tags are: 
>> [('Tree', 'NN')] 

 Lemmas are: 
>> [('Tree', 'tree')] 

 Dependency tags are: 
>> [(('Tree', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 102 ===========================

 I lost my card and need another one. 

Tokens are: 
>> ['I', 'lost', 'my', 'card', 'and', 'need', 'another', 'one', '.'] 

 UPOS tags are: 
>> [('I', 'PRON'), ('lost', 'VERB'), ('my', 'PRON'), ('card', 'NOUN'), ('and', 'CCONJ'), ('need', 'VERB'), ('another', 'DET'), ('one', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('I', 'PRP'), ('lost', 'VBD'), ('my', 'PRP$'), ('card', 'NN'), ('and', 'CC'), ('need', 'VBP'), ('another', 'DT'), ('one', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('I', 'I'), ('lost', 'lose'), ('my', 'my'), ('card', 'card'), ('and', 'and'), ('need', 'need'), ('another', 'another'), ('one', 'one'), ('.', '.')] 

 Dependency tags are: 
>> [(('I', 'lost'), 'nsubj'), (('lost', 'root'), 'root'), (('my', 'card'), 'nmod:poss'), (('card', 'lost'), 'obj'), (('and', 'need'), 'cc'), (('need', 'lost'), 'conj'), (('another', 'one'), 'det'), (('one', 'need'), 'obj'), (('.', 'lost'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 103 ===========================

 Replacement  Card  Conversational dialogs can build in confirmations without having to explicitly ask for them  CALLER: 

Tokens are: 
>> ['Replacement', 'Card', 'Conversational', 'dialogs', 'can', 'build', 'in', 'confirmations', 'without', 'having', 'to', 'explicitly', 'ask', 'for', 'them', 'CALLER', ':'] 

 UPOS tags are: 
>> [('Replacement', 'NOUN'), ('Card', 'NOUN'), ('Conversational', 'ADJ'), ('dialogs', 'NOUN'), ('can', 'AUX'), ('build', 'VERB'), ('in', 'ADP'), ('confirmations', 'NOUN'), ('without', 'SCONJ'), ('having', 'VERB'), ('to', 'PART'), ('explicitly', 'ADV'), ('ask', 'VERB'), ('for', 'ADP'), ('them', 'PRON'), ('CALLER', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Replacement', 'NN'), ('Card', 'NN'), ('Conversational', 'JJ'), ('dialogs', 'NNS'), ('can', 'MD'), ('build', 'VB'), ('in', 'IN'), ('confirmations', 'NNS'), ('without', 'IN'), ('having', 'VBG'), ('to', 'TO'), ('explicitly', 'RB'), ('ask', 'VB'), ('for', 'IN'), ('them', 'PRP'), ('CALLER', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('Replacement', 'replacement'), ('Card', 'Card'), ('Conversational', 'conversational'), ('dialogs', 'dialog'), ('can', 'can'), ('build', 'build'), ('in', 'in'), ('confirmations', 'confirmation'), ('without', 'without'), ('having', 'have'), ('to', 'to'), ('explicitly', 'explicitly'), ('ask', 'ask'), ('for', 'for'), ('them', 'they'), ('CALLER', 'caller'), (':', ':')] 

 Dependency tags are: 
>> [(('Replacement', 'Card'), 'compound'), (('Card', 'dialogs'), 'compound'), (('Conversational', 'dialogs'), 'amod'), (('dialogs', 'build'), 'nsubj'), (('can', 'build'), 'aux'), (('build', 'root'), 'root'), (('in', 'confirmations'), 'case'), (('confirmations', 'build'), 'obl'), (('without', 'having'), 'mark'), (('having', 'build'), 'advcl'), (('to', 'ask'), 'mark'), (('explicitly', 'ask'), 'advmod'), (('ask', 'having'), 'xcomp'), (('for', 'them'), 'case'), (('them', 'ask'), 'obl'), (('CALLER', 'ask'), 'obl'), ((':', 'build'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 104 ===========================

 No, not Austin, Boston! 

Tokens are: 
>> ['No', ',', 'not', 'Austin', ',', 'Boston', '!'] 

 UPOS tags are: 
>> [('No', 'INTJ'), (',', 'PUNCT'), ('not', 'ADV'), ('Austin', 'PROPN'), (',', 'PUNCT'), ('Boston', 'PROPN'), ('!', 'PUNCT')] 

 XPOS tags are: 
>> [('No', 'UH'), (',', ','), ('not', 'RB'), ('Austin', 'NNP'), (',', ','), ('Boston', 'NNP'), ('!', '.')] 

 Lemmas are: 
>> [('No', 'no'), (',', ','), ('not', 'not'), ('Austin', 'Austin'), (',', ','), ('Boston', 'Boston'), ('!', '!')] 

 Dependency tags are: 
>> [(('No', 'Austin'), 'discourse'), ((',', 'Austin'), 'punct'), (('not', 'Austin'), 'advmod'), (('Austin', 'root'), 'root'), ((',', 'Austin'), 'punct'), (('Boston', 'Austin'), 'vocative'), (('!', 'Austin'), 'punct')]

 Named Entities are: 
>> [('Austin', 'GPE'), ('Boston', 'GPE')]

========================== Sentence 105 ===========================

 Window. 

Tokens are: 
>> ['Window', '.'] 

 UPOS tags are: 
>> [('Window', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Window', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Window', 'window'), ('.', '.')] 

 Dependency tags are: 
>> [(('Window', 'root'), 'root'), (('.', 'Window'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 106 ===========================

 Would you like to fly to Austin? 

Tokens are: 
>> ['Would', 'you', 'like', 'to', 'fly', 'to', 'Austin', '?'] 

 UPOS tags are: 
>> [('Would', 'AUX'), ('you', 'PRON'), ('like', 'VERB'), ('to', 'PART'), ('fly', 'VERB'), ('to', 'ADP'), ('Austin', 'PROPN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Would', 'MD'), ('you', 'PRP'), ('like', 'VB'), ('to', 'TO'), ('fly', 'VB'), ('to', 'IN'), ('Austin', 'NNP'), ('?', '.')] 

 Lemmas are: 
>> [('Would', 'would'), ('you', 'you'), ('like', 'like'), ('to', 'to'), ('fly', 'fly'), ('to', 'to'), ('Austin', 'Austin'), ('?', '?')] 

 Dependency tags are: 
>> [(('Would', 'like'), 'aux'), (('you', 'like'), 'nsubj'), (('like', 'root'), 'root'), (('to', 'fly'), 'mark'), (('fly', 'like'), 'xcomp'), (('to', 'Austin'), 'case'), (('Austin', 'fly'), 'obl'), (('?', 'like'), 'punct')]

 Named Entities are: 
>> [('Austin', 'GPE')]

========================== Sentence 107 ===========================

 SYSTEM:  Okay, do you prefer a window or  aisle seat to Boston? 

Tokens are: 
>> ['SYSTEM', ':', 'Okay', ',', 'do', 'you', 'prefer', 'a', 'window', 'or', 'aisle', 'seat', 'to', 'Boston', '?'] 

 UPOS tags are: 
>> [('SYSTEM', 'NOUN'), (':', 'PUNCT'), ('Okay', 'INTJ'), (',', 'PUNCT'), ('do', 'AUX'), ('you', 'PRON'), ('prefer', 'VERB'), ('a', 'DET'), ('window', 'NOUN'), ('or', 'CCONJ'), ('aisle', 'ADJ'), ('seat', 'NOUN'), ('to', 'ADP'), ('Boston', 'PROPN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('SYSTEM', 'NN'), (':', ':'), ('Okay', 'UH'), (',', ','), ('do', 'VBP'), ('you', 'PRP'), ('prefer', 'VB'), ('a', 'DT'), ('window', 'NN'), ('or', 'CC'), ('aisle', 'JJ'), ('seat', 'NN'), ('to', 'IN'), ('Boston', 'NNP'), ('?', '.')] 

 Lemmas are: 
>> [('SYSTEM', 'system'), (':', ':'), ('Okay', 'okay'), (',', ','), ('do', 'do'), ('you', 'you'), ('prefer', 'prefer'), ('a', 'a'), ('window', 'window'), ('or', 'or'), ('aisle', 'aisle'), ('seat', 'seat'), ('to', 'to'), ('Boston', 'Boston'), ('?', '?')] 

 Dependency tags are: 
>> [(('SYSTEM', 'root'), 'root'), ((':', 'SYSTEM'), 'punct'), (('Okay', 'prefer'), 'discourse'), ((',', 'prefer'), 'punct'), (('do', 'prefer'), 'aux'), (('you', 'prefer'), 'nsubj'), (('prefer', 'SYSTEM'), 'appos'), (('a', 'window'), 'det'), (('window', 'prefer'), 'obj'), (('or', 'seat'), 'cc'), (('aisle', 'seat'), 'amod'), (('seat', 'window'), 'conj'), (('to', 'Boston'), 'case'), (('Boston', 'prefer'), 'obl'), (('?', 'SYSTEM'), 'punct')]

 Named Entities are: 
>> [('Boston', 'GPE')]

========================== Sentence 108 ===========================

 Conversational dialogs can  handle more than one piece  of information  Natural Language Understanding Caller provides responses the way  they want to and the system accepts  and interprets the information. 

Tokens are: 
>> ['Conversational', 'dialogs', 'can', 'handle', 'more', 'than', 'one', 'piece', 'of', 'information', 'Natural', 'Language', 'Understanding', 'Caller', 'provides', 'responses', 'the', 'way', 'they', 'want', 'to', 'and', 'the', 'system', 'accepts', 'and', 'interprets', 'the', 'information', '.'] 

 UPOS tags are: 
>> [('Conversational', 'ADJ'), ('dialogs', 'NOUN'), ('can', 'AUX'), ('handle', 'VERB'), ('more', 'ADJ'), ('than', 'ADP'), ('one', 'NUM'), ('piece', 'NOUN'), ('of', 'ADP'), ('information', 'NOUN'), ('Natural', 'ADJ'), ('Language', 'NOUN'), ('Understanding', 'NOUN'), ('Caller', 'NOUN'), ('provides', 'VERB'), ('responses', 'NOUN'), ('the', 'DET'), ('way', 'NOUN'), ('they', 'PRON'), ('want', 'VERB'), ('to', 'PART'), ('and', 'CCONJ'), ('the', 'DET'), ('system', 'NOUN'), ('accepts', 'VERB'), ('and', 'CCONJ'), ('interprets', 'VERB'), ('the', 'DET'), ('information', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Conversational', 'JJ'), ('dialogs', 'NNS'), ('can', 'MD'), ('handle', 'VB'), ('more', 'JJR'), ('than', 'IN'), ('one', 'CD'), ('piece', 'NN'), ('of', 'IN'), ('information', 'NN'), ('Natural', 'JJ'), ('Language', 'NN'), ('Understanding', 'NN'), ('Caller', 'NN'), ('provides', 'VBZ'), ('responses', 'NNS'), ('the', 'DT'), ('way', 'NN'), ('they', 'PRP'), ('want', 'VBP'), ('to', 'TO'), ('and', 'CC'), ('the', 'DT'), ('system', 'NN'), ('accepts', 'VBZ'), ('and', 'CC'), ('interprets', 'VBZ'), ('the', 'DT'), ('information', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Conversational', 'conversational'), ('dialogs', 'dialog'), ('can', 'can'), ('handle', 'handle'), ('more', 'more'), ('than', 'than'), ('one', 'one'), ('piece', 'piece'), ('of', 'of'), ('information', 'information'), ('Natural', 'Natural'), ('Language', 'language'), ('Understanding', 'understanding'), ('Caller', 'caller'), ('provides', 'provide'), ('responses', 'response'), ('the', 'the'), ('way', 'way'), ('they', 'they'), ('want', 'want'), ('to', 'to'), ('and', 'and'), ('the', 'the'), ('system', 'system'), ('accepts', 'accept'), ('and', 'and'), ('interprets', 'interpret'), ('the', 'the'), ('information', 'information'), ('.', '.')] 

 Dependency tags are: 
>> [(('Conversational', 'dialogs'), 'amod'), (('dialogs', 'handle'), 'nsubj'), (('can', 'handle'), 'aux'), (('handle', 'root'), 'root'), (('more', 'one'), 'advmod'), (('than', 'more'), 'fixed'), (('one', 'piece'), 'nummod'), (('piece', 'handle'), 'obj'), (('of', 'information'), 'case'), (('information', 'piece'), 'nmod'), (('Natural', 'Caller'), 'amod'), (('Language', 'Understanding'), 'compound'), (('Understanding', 'Caller'), 'compound'), (('Caller', 'provides'), 'nsubj'), (('provides', 'handle'), 'conj'), (('responses', 'provides'), 'obj'), (('the', 'way'), 'det'), (('way', 'provides'), 'obj'), (('they', 'want'), 'nsubj'), (('want', 'way'), 'acl:relcl'), (('to', 'want'), 'xcomp'), (('and', 'accepts'), 'cc'), (('the', 'system'), 'det'), (('system', 'accepts'), 'nsubj'), (('accepts', 'provides'), 'conj'), (('and', 'interprets'), 'cc'), (('interprets', 'accepts'), 'conj'), (('the', 'information'), 'det'), (('information', 'interprets'), 'obj'), (('.', 'handle'), 'punct')]

 Named Entities are: 
>> [('more than one', 'CARDINAL'), ('Natural Language Understanding Caller', 'LAW')]

========================== Sentence 109 ===========================

 AIRLINE SYSTEM with  Natural Language Understanding:  Information to Collect  Departure City Departure Date Number of Adults Number of Children Return City Return Date Seating Assignments  CALLER: 

Tokens are: 
>> ['AIRLINE', 'SYSTEM', 'with', 'Natural', 'Language', 'Understanding', ':', 'Information', 'to', 'Collect', 'Departure', 'City', 'Departure', 'Date', 'Number', 'of', 'Adults', 'Number', 'of', 'Children', 'Return', 'City', 'Return', 'Date', 'Seating', 'Assignments', 'CALLER', ':'] 

 UPOS tags are: 
>> [('AIRLINE', 'NOUN'), ('SYSTEM', 'NOUN'), ('with', 'ADP'), ('Natural', 'ADJ'), ('Language', 'NOUN'), ('Understanding', 'NOUN'), (':', 'PUNCT'), ('Information', 'NOUN'), ('to', 'PART'), ('Collect', 'VERB'), ('Departure', 'NOUN'), ('City', 'NOUN'), ('Departure', 'NOUN'), ('Date', 'NOUN'), ('Number', 'NOUN'), ('of', 'ADP'), ('Adults', 'NOUN'), ('Number', 'NOUN'), ('of', 'ADP'), ('Children', 'PROPN'), ('Return', 'NOUN'), ('City', 'NOUN'), ('Return', 'NOUN'), ('Date', 'NOUN'), ('Seating', 'NOUN'), ('Assignments', 'NOUN'), ('CALLER', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('AIRLINE', 'NN'), ('SYSTEM', 'NN'), ('with', 'IN'), ('Natural', 'JJ'), ('Language', 'NN'), ('Understanding', 'NN'), (':', ':'), ('Information', 'NN'), ('to', 'TO'), ('Collect', 'VB'), ('Departure', 'NN'), ('City', 'NN'), ('Departure', 'NN'), ('Date', 'NN'), ('Number', 'NN'), ('of', 'IN'), ('Adults', 'NNS'), ('Number', 'NN'), ('of', 'IN'), ('Children', 'NNPS'), ('Return', 'NN'), ('City', 'NN'), ('Return', 'NN'), ('Date', 'NN'), ('Seating', 'NN'), ('Assignments', 'NNS'), ('CALLER', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('AIRLINE', 'airline'), ('SYSTEM', 'system'), ('with', 'with'), ('Natural', 'Natural'), ('Language', 'language'), ('Understanding', 'understanding'), (':', ':'), ('Information', 'information'), ('to', 'to'), ('Collect', 'collect'), ('Departure', 'departure'), ('City', 'city'), ('Departure', 'departure'), ('Date', 'date'), ('Number', 'number'), ('of', 'of'), ('Adults', 'adult'), ('Number', 'number'), ('of', 'of'), ('Children', 'Children'), ('Return', 'return'), ('City', 'city'), ('Return', 'return'), ('Date', 'date'), ('Seating', 'seating'), ('Assignments', 'assignment'), ('CALLER', 'caller'), (':', ':')] 

 Dependency tags are: 
>> [(('AIRLINE', 'SYSTEM'), 'compound'), (('SYSTEM', 'root'), 'root'), (('with', 'Understanding'), 'case'), (('Natural', 'Language'), 'amod'), (('Language', 'Understanding'), 'compound'), (('Understanding', 'SYSTEM'), 'nmod'), ((':', 'Information'), 'punct'), (('Information', 'SYSTEM'), 'parataxis'), (('to', 'Collect'), 'mark'), (('Collect', 'Information'), 'acl'), (('Departure', 'Number'), 'compound'), (('City', 'Departure'), 'compound'), (('Departure', 'Date'), 'compound'), (('Date', 'Number'), 'compound'), (('Number', 'Collect'), 'obj'), (('of', 'Adults'), 'case'), (('Adults', 'Number'), 'compound'), (('Number', 'Number'), 'nmod'), (('of', 'Children'), 'case'), (('Children', 'Return'), 'compound'), (('Return', 'Return'), 'compound'), (('City', 'Return'), 'compound'), (('Return', 'Date'), 'compound'), (('Date', 'Assignments'), 'compound'), (('Seating', 'Assignments'), 'compound'), (('Assignments', 'CALLER'), 'compound'), (('CALLER', 'Number'), 'nmod'), ((':', 'SYSTEM'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 110 ===========================

 On Wednesday and returning on Friday. 

Tokens are: 
>> ['On', 'Wednesday', 'and', 'returning', 'on', 'Friday', '.'] 

 UPOS tags are: 
>> [('On', 'ADP'), ('Wednesday', 'PROPN'), ('and', 'CCONJ'), ('returning', 'VERB'), ('on', 'ADP'), ('Friday', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('On', 'IN'), ('Wednesday', 'NNP'), ('and', 'CC'), ('returning', 'VBG'), ('on', 'IN'), ('Friday', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('On', 'on'), ('Wednesday', 'Wednesday'), ('and', 'and'), ('returning', 'return'), ('on', 'on'), ('Friday', 'Friday'), ('.', '.')] 

 Dependency tags are: 
>> [(('On', 'Wednesday'), 'case'), (('Wednesday', 'root'), 'root'), (('and', 'returning'), 'cc'), (('returning', 'Wednesday'), 'conj'), (('on', 'Friday'), 'case'), (('Friday', 'returning'), 'obl'), (('.', 'Wednesday'), 'punct')]

 Named Entities are: 
>> [('Wednesday', 'DATE'), ('Friday', 'DATE')]

========================== Sentence 111 ===========================

 What day are you leaving? 

Tokens are: 
>> ['What', 'day', 'are', 'you', 'leaving', '?'] 

 UPOS tags are: 
>> [('What', 'DET'), ('day', 'NOUN'), ('are', 'AUX'), ('you', 'PRON'), ('leaving', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WDT'), ('day', 'NN'), ('are', 'VBP'), ('you', 'PRP'), ('leaving', 'VBG'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('day', 'day'), ('are', 'be'), ('you', 'you'), ('leaving', 'leave'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'day'), 'det'), (('day', 'leaving'), 'obj'), (('are', 'leaving'), 'aux'), (('you', 'leaving'), 'nsubj'), (('leaving', 'root'), 'root'), (('?', 'leaving'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 112 ===========================

 SYSTEM:  � � � � � � �  �  �    White PaperCustomer Service Solutions Natural language understanding6 

Tokens are: 
>> ['SYSTEM', ':', '�', '�', '�', '�', '�', '�', '�', '�', '�', 'White', 'PaperCustomer', 'Service', 'Solutions', 'Natural', 'language', 'understanding', '6'] 

 UPOS tags are: 
>> [('SYSTEM', 'NOUN'), (':', 'PUNCT'), ('�', 'PRON'), ('�', 'NOUN'), ('�', 'NOUN'), ('�', 'NOUN'), ('�', 'NOUN'), ('�', 'NOUN'), ('�', 'NOUN'), ('�', 'NOUN'), ('�', 'NOUN'), ('White', 'ADJ'), ('PaperCustomer', 'NOUN'), ('Service', 'NOUN'), ('Solutions', 'NOUN'), ('Natural', 'ADJ'), ('language', 'NOUN'), ('understanding', 'NOUN'), ('6', 'NUM')] 

 XPOS tags are: 
>> [('SYSTEM', 'NN'), (':', ':'), ('�', 'PRP'), ('�', 'NN'), ('�', 'NN'), ('�', 'NN'), ('�', 'NN'), ('�', 'NN'), ('�', 'NN'), ('�', 'NN'), ('�', 'NN'), ('White', 'JJ'), ('PaperCustomer', 'NN'), ('Service', 'NN'), ('Solutions', 'NNS'), ('Natural', 'JJ'), ('language', 'NN'), ('understanding', 'NN'), ('6', 'CD')] 

 Lemmas are: 
>> [('SYSTEM', 'system'), (':', ':'), ('�', '�'), ('�', '�'), ('�', '�'), ('�', '�'), ('�', '�'), ('�', '�'), ('�', '�'), ('�', '�'), ('�', '�'), ('White', 'White'), ('PaperCustomer', 'papercustomer'), ('Service', 'service'), ('Solutions', 'solution'), ('Natural', 'Natural'), ('language', 'language'), ('understanding', 'understanding'), ('6', '6')] 

 Dependency tags are: 
>> [(('SYSTEM', 'root'), 'root'), ((':', 'SYSTEM'), 'punct'), (('�', '�'), 'nsubj'), (('�', '�'), 'advmod'), (('�', 'SYSTEM'), 'appos'), (('�', '�'), 'obj'), (('�', '�'), 'obj'), (('�', '�'), 'obj'), (('�', '�'), 'case'), (('�', '�'), 'obj'), (('�', 'Service'), 'case'), (('White', 'Service'), 'amod'), (('PaperCustomer', 'Service'), 'compound'), (('Service', 'Solutions'), 'compound'), (('Solutions', '�'), 'nmod'), (('Natural', 'understanding'), 'amod'), (('language', 'understanding'), 'compound'), (('understanding', 'Solutions'), 'obj'), (('6', 'understanding'), 'nummod')]

 Named Entities are: 
>> []

========================== Sentence 113 ===========================

 This dialog flexibility is controlled by rules designed into prompts themselves  so the system can respond and guide callers rather than dictate to them. 

Tokens are: 
>> ['This', 'dialog', 'flexibility', 'is', 'controlled', 'by', 'rules', 'designed', 'into', 'prompts', 'themselves', 'so', 'the', 'system', 'can', 'respond', 'and', 'guide', 'callers', 'rather', 'than', 'dictate', 'to', 'them', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('dialog', 'NOUN'), ('flexibility', 'NOUN'), ('is', 'AUX'), ('controlled', 'VERB'), ('by', 'ADP'), ('rules', 'NOUN'), ('designed', 'VERB'), ('into', 'ADP'), ('prompts', 'NOUN'), ('themselves', 'PRON'), ('so', 'ADV'), ('the', 'DET'), ('system', 'NOUN'), ('can', 'AUX'), ('respond', 'VERB'), ('and', 'CCONJ'), ('guide', 'VERB'), ('callers', 'NOUN'), ('rather', 'ADV'), ('than', 'ADP'), ('dictate', 'VERB'), ('to', 'ADP'), ('them', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('dialog', 'NN'), ('flexibility', 'NN'), ('is', 'VBZ'), ('controlled', 'VBN'), ('by', 'IN'), ('rules', 'NNS'), ('designed', 'VBN'), ('into', 'IN'), ('prompts', 'NNS'), ('themselves', 'PRP'), ('so', 'RB'), ('the', 'DT'), ('system', 'NN'), ('can', 'MD'), ('respond', 'VB'), ('and', 'CC'), ('guide', 'VB'), ('callers', 'NNS'), ('rather', 'RB'), ('than', 'IN'), ('dictate', 'VB'), ('to', 'IN'), ('them', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('dialog', 'dialog'), ('flexibility', 'flexibility'), ('is', 'be'), ('controlled', 'control'), ('by', 'by'), ('rules', 'rule'), ('designed', 'design'), ('into', 'into'), ('prompts', 'prompt'), ('themselves', 'themselves'), ('so', 'so'), ('the', 'the'), ('system', 'system'), ('can', 'can'), ('respond', 'respond'), ('and', 'and'), ('guide', 'guide'), ('callers', 'caller'), ('rather', 'rather'), ('than', 'than'), ('dictate', 'dictate'), ('to', 'to'), ('them', 'they'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'flexibility'), 'det'), (('dialog', 'flexibility'), 'compound'), (('flexibility', 'controlled'), 'nsubj:pass'), (('is', 'controlled'), 'aux:pass'), (('controlled', 'root'), 'root'), (('by', 'rules'), 'case'), (('rules', 'controlled'), 'obl'), (('designed', 'rules'), 'acl'), (('into', 'prompts'), 'case'), (('prompts', 'designed'), 'obl'), (('themselves', 'prompts'), 'nmod:npmod'), (('so', 'respond'), 'mark'), (('the', 'system'), 'det'), (('system', 'respond'), 'nsubj'), (('can', 'respond'), 'aux'), (('respond', 'controlled'), 'advcl'), (('and', 'guide'), 'cc'), (('guide', 'respond'), 'conj'), (('callers', 'guide'), 'obj'), (('rather', 'dictate'), 'cc'), (('than', 'rather'), 'fixed'), (('dictate', 'respond'), 'conj'), (('to', 'them'), 'case'), (('them', 'dictate'), 'obl'), (('.', 'controlled'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 114 ===========================

 Perhaps the defining characteristic of a natural language experience is  engaging callers with intuitive and direct conversations. 

Tokens are: 
>> ['Perhaps', 'the', 'defining', 'characteristic', 'of', 'a', 'natural', 'language', 'experience', 'is', 'engaging', 'callers', 'with', 'intuitive', 'and', 'direct', 'conversations', '.'] 

 UPOS tags are: 
>> [('Perhaps', 'ADV'), ('the', 'DET'), ('defining', 'VERB'), ('characteristic', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('natural', 'ADJ'), ('language', 'NOUN'), ('experience', 'NOUN'), ('is', 'AUX'), ('engaging', 'VERB'), ('callers', 'NOUN'), ('with', 'ADP'), ('intuitive', 'ADJ'), ('and', 'CCONJ'), ('direct', 'ADJ'), ('conversations', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Perhaps', 'RB'), ('the', 'DT'), ('defining', 'VBG'), ('characteristic', 'NN'), ('of', 'IN'), ('a', 'DT'), ('natural', 'JJ'), ('language', 'NN'), ('experience', 'NN'), ('is', 'VBZ'), ('engaging', 'VBG'), ('callers', 'NNS'), ('with', 'IN'), ('intuitive', 'JJ'), ('and', 'CC'), ('direct', 'JJ'), ('conversations', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Perhaps', 'perhaps'), ('the', 'the'), ('defining', 'define'), ('characteristic', 'characteristic'), ('of', 'of'), ('a', 'a'), ('natural', 'natural'), ('language', 'language'), ('experience', 'experience'), ('is', 'be'), ('engaging', 'engage'), ('callers', 'caller'), ('with', 'with'), ('intuitive', 'intuitive'), ('and', 'and'), ('direct', 'direct'), ('conversations', 'conversation'), ('.', '.')] 

 Dependency tags are: 
>> [(('Perhaps', 'engaging'), 'advmod'), (('the', 'characteristic'), 'det'), (('defining', 'characteristic'), 'amod'), (('characteristic', 'engaging'), 'nsubj'), (('of', 'experience'), 'case'), (('a', 'experience'), 'det'), (('natural', 'experience'), 'amod'), (('language', 'experience'), 'compound'), (('experience', 'characteristic'), 'nmod'), (('is', 'engaging'), 'aux'), (('engaging', 'root'), 'root'), (('callers', 'engaging'), 'obj'), (('with', 'conversations'), 'case'), (('intuitive', 'conversations'), 'amod'), (('and', 'direct'), 'cc'), (('direct', 'intuitive'), 'conj'), (('conversations', 'engaging'), 'obl'), (('.', 'engaging'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 115 ===========================

 Conclusion 

Tokens are: 
>> ['Conclusion'] 

 UPOS tags are: 
>> [('Conclusion', 'NOUN')] 

 XPOS tags are: 
>> [('Conclusion', 'NN')] 

 Lemmas are: 
>> [('Conclusion', 'conclusion')] 

 Dependency tags are: 
>> [(('Conclusion', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 116 ===========================

 In challenging economic conditions, the importance of cost-savings can not  be underestimated. 

Tokens are: 
>> ['In', 'challenging', 'economic', 'conditions', ',', 'the', 'importance', 'of', 'cost', '-savings', 'can', 'not', 'be', 'underestimated', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('challenging', 'VERB'), ('economic', 'ADJ'), ('conditions', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('importance', 'NOUN'), ('of', 'ADP'), ('cost', 'NOUN'), ('-savings', 'NOUN'), ('can', 'AUX'), ('not', 'PART'), ('be', 'AUX'), ('underestimated', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('challenging', 'VBG'), ('economic', 'JJ'), ('conditions', 'NNS'), (',', ','), ('the', 'DT'), ('importance', 'NN'), ('of', 'IN'), ('cost', 'NN'), ('-savings', 'NNS'), ('can', 'MD'), ('not', 'RB'), ('be', 'VB'), ('underestimated', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('challenging', 'challenge'), ('economic', 'economic'), ('conditions', 'condition'), (',', ','), ('the', 'the'), ('importance', 'importance'), ('of', 'of'), ('cost', 'cost'), ('-savings', '-saving'), ('can', 'can'), ('not', 'not'), ('be', 'be'), ('underestimated', 'underestimate'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'challenging'), 'mark'), (('challenging', 'underestimated'), 'advcl'), (('economic', 'conditions'), 'amod'), (('conditions', 'challenging'), 'obj'), ((',', 'underestimated'), 'punct'), (('the', 'importance'), 'det'), (('importance', 'underestimated'), 'nsubj:pass'), (('of', '-savings'), 'case'), (('cost', '-savings'), 'compound'), (('-savings', 'importance'), 'nmod'), (('can', 'underestimated'), 'aux'), (('not', 'underestimated'), 'advmod'), (('be', 'underestimated'), 'aux:pass'), (('underestimated', 'root'), 'root'), (('.', 'underestimated'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 117 ===========================

 By applying effective natural language techniques to a  speech-enabled self-service IVR system, automation rates will increase lead- ing directly to lower costs. 

Tokens are: 
>> ['By', 'applying', 'effective', 'natural', 'language', 'techniques', 'to', 'a', 'speech', '-', 'enabled', 'self', '-', 'service', 'IVR', 'system', ',', 'automation', 'rates', 'will', 'increase', 'lead', '-', 'ing', 'directly', 'to', 'lower', 'costs', '.'] 

 UPOS tags are: 
>> [('By', 'SCONJ'), ('applying', 'VERB'), ('effective', 'ADJ'), ('natural', 'ADJ'), ('language', 'NOUN'), ('techniques', 'NOUN'), ('to', 'ADP'), ('a', 'DET'), ('speech', 'NOUN'), ('-', 'PUNCT'), ('enabled', 'VERB'), ('self', 'NOUN'), ('-', 'PUNCT'), ('service', 'NOUN'), ('IVR', 'NOUN'), ('system', 'NOUN'), (',', 'PUNCT'), ('automation', 'NOUN'), ('rates', 'NOUN'), ('will', 'AUX'), ('increase', 'VERB'), ('lead', 'NOUN'), ('-', 'PUNCT'), ('ing', 'NOUN'), ('directly', 'ADV'), ('to', 'ADP'), ('lower', 'ADJ'), ('costs', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('By', 'IN'), ('applying', 'VBG'), ('effective', 'JJ'), ('natural', 'JJ'), ('language', 'NN'), ('techniques', 'NNS'), ('to', 'IN'), ('a', 'DT'), ('speech', 'NN'), ('-', 'HYPH'), ('enabled', 'VBN'), ('self', 'NN'), ('-', 'HYPH'), ('service', 'NN'), ('IVR', 'NN'), ('system', 'NN'), (',', ','), ('automation', 'NN'), ('rates', 'NNS'), ('will', 'MD'), ('increase', 'VB'), ('lead', 'NN'), ('-', 'HYPH'), ('ing', 'NN'), ('directly', 'RB'), ('to', 'IN'), ('lower', 'JJR'), ('costs', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('By', 'by'), ('applying', 'apply'), ('effective', 'effective'), ('natural', 'natural'), ('language', 'language'), ('techniques', 'technique'), ('to', 'to'), ('a', 'a'), ('speech', 'speech'), ('-', '-'), ('enabled', 'enable'), ('self', 'self'), ('-', '-'), ('service', 'service'), ('IVR', 'IVR'), ('system', 'system'), (',', ','), ('automation', 'automation'), ('rates', 'rate'), ('will', 'will'), ('increase', 'increase'), ('lead', 'lead'), ('-', '-'), ('ing', 'ing'), ('directly', 'directly'), ('to', 'to'), ('lower', 'low'), ('costs', 'cost'), ('.', '.')] 

 Dependency tags are: 
>> [(('By', 'applying'), 'mark'), (('applying', 'increase'), 'advcl'), (('effective', 'techniques'), 'amod'), (('natural', 'language'), 'amod'), (('language', 'techniques'), 'compound'), (('techniques', 'applying'), 'obj'), (('to', 'system'), 'case'), (('a', 'system'), 'det'), (('speech', 'enabled'), 'compound'), (('-', 'enabled'), 'punct'), (('enabled', 'system'), 'amod'), (('self', 'service'), 'compound'), (('-', 'service'), 'punct'), (('service', 'system'), 'compound'), (('IVR', 'system'), 'compound'), (('system', 'applying'), 'obl'), ((',', 'increase'), 'punct'), (('automation', 'rates'), 'compound'), (('rates', 'increase'), 'nsubj'), (('will', 'increase'), 'aux'), (('increase', 'root'), 'root'), (('lead', 'ing'), 'compound'), (('-', 'ing'), 'punct'), (('ing', 'increase'), 'obj'), (('directly', 'costs'), 'advmod'), (('to', 'costs'), 'case'), (('lower', 'costs'), 'amod'), (('costs', 'increase'), 'obl'), (('.', 'increase'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 118 ===========================

 This paper has shown that different approaches to  natural language can be applied throughout the caller’s interaction to achieve  these improved automation rates. 

Tokens are: 
>> ['This', 'paper', 'has', 'shown', 'that', 'different', 'approaches', 'to', 'natural', 'language', 'can', 'be', 'applied', 'throughout', 'the', 'caller', '’s', 'interaction', 'to', 'achieve', 'these', 'improved', 'automation', 'rates', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('paper', 'NOUN'), ('has', 'AUX'), ('shown', 'VERB'), ('that', 'SCONJ'), ('different', 'ADJ'), ('approaches', 'NOUN'), ('to', 'ADP'), ('natural', 'ADJ'), ('language', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('applied', 'VERB'), ('throughout', 'ADP'), ('the', 'DET'), ('caller', 'NOUN'), ('’s', 'PART'), ('interaction', 'NOUN'), ('to', 'PART'), ('achieve', 'VERB'), ('these', 'DET'), ('improved', 'VERB'), ('automation', 'NOUN'), ('rates', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('paper', 'NN'), ('has', 'VBZ'), ('shown', 'VBN'), ('that', 'IN'), ('different', 'JJ'), ('approaches', 'NNS'), ('to', 'IN'), ('natural', 'JJ'), ('language', 'NN'), ('can', 'MD'), ('be', 'VB'), ('applied', 'VBN'), ('throughout', 'IN'), ('the', 'DT'), ('caller', 'NN'), ('’s', 'POS'), ('interaction', 'NN'), ('to', 'TO'), ('achieve', 'VB'), ('these', 'DT'), ('improved', 'VBN'), ('automation', 'NN'), ('rates', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('paper', 'paper'), ('has', 'have'), ('shown', 'show'), ('that', 'that'), ('different', 'different'), ('approaches', 'approach'), ('to', 'to'), ('natural', 'natural'), ('language', 'language'), ('can', 'can'), ('be', 'be'), ('applied', 'apply'), ('throughout', 'throughout'), ('the', 'the'), ('caller', 'caller'), ('’s', "'s"), ('interaction', 'interaction'), ('to', 'to'), ('achieve', 'achieve'), ('these', 'this'), ('improved', 'improve'), ('automation', 'automation'), ('rates', 'rate'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'paper'), 'det'), (('paper', 'shown'), 'nsubj'), (('has', 'shown'), 'aux'), (('shown', 'root'), 'root'), (('that', 'applied'), 'mark'), (('different', 'approaches'), 'amod'), (('approaches', 'applied'), 'nsubj:pass'), (('to', 'language'), 'case'), (('natural', 'language'), 'amod'), (('language', 'approaches'), 'nmod'), (('can', 'applied'), 'aux'), (('be', 'applied'), 'aux:pass'), (('applied', 'shown'), 'ccomp'), (('throughout', 'interaction'), 'case'), (('the', 'caller'), 'det'), (('caller', 'interaction'), 'nmod:poss'), (('’s', 'caller'), 'case'), (('interaction', 'applied'), 'obl'), (('to', 'achieve'), 'mark'), (('achieve', 'interaction'), 'acl'), (('these', 'rates'), 'det'), (('improved', 'rates'), 'amod'), (('automation', 'rates'), 'compound'), (('rates', 'achieve'), 'obj'), (('.', 'shown'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 119 ===========================

 The three complementary natural language  approaches of increasing the recognition accuracy within and around  grammars, allowing callers to give open-ended responses, and interacting  with adaptive dialogs all lead to more efficient and appealing calls. 

Tokens are: 
>> ['The', 'three', 'complementary', 'natural', 'language', 'approaches', 'of', 'increasing', 'the', 'recognition', 'accuracy', 'within', 'and', 'around', 'grammars', ',', 'allowing', 'callers', 'to', 'give', 'open-ended', 'responses', ',', 'and', 'interacting', 'with', 'adaptive', 'dialogs', 'all', 'lead', 'to', 'more', 'efficient', 'and', 'appealing', 'calls', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('three', 'NUM'), ('complementary', 'ADJ'), ('natural', 'ADJ'), ('language', 'NOUN'), ('approaches', 'NOUN'), ('of', 'SCONJ'), ('increasing', 'VERB'), ('the', 'DET'), ('recognition', 'NOUN'), ('accuracy', 'NOUN'), ('within', 'ADP'), ('and', 'CCONJ'), ('around', 'ADP'), ('grammars', 'NOUN'), (',', 'PUNCT'), ('allowing', 'VERB'), ('callers', 'NOUN'), ('to', 'PART'), ('give', 'VERB'), ('open-ended', 'ADJ'), ('responses', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('interacting', 'VERB'), ('with', 'ADP'), ('adaptive', 'ADJ'), ('dialogs', 'NOUN'), ('all', 'ADV'), ('lead', 'VERB'), ('to', 'ADP'), ('more', 'ADV'), ('efficient', 'ADJ'), ('and', 'CCONJ'), ('appealing', 'ADJ'), ('calls', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('three', 'CD'), ('complementary', 'JJ'), ('natural', 'JJ'), ('language', 'NN'), ('approaches', 'NNS'), ('of', 'IN'), ('increasing', 'VBG'), ('the', 'DT'), ('recognition', 'NN'), ('accuracy', 'NN'), ('within', 'IN'), ('and', 'CC'), ('around', 'IN'), ('grammars', 'NNS'), (',', ','), ('allowing', 'VBG'), ('callers', 'NNS'), ('to', 'TO'), ('give', 'VB'), ('open-ended', 'JJ'), ('responses', 'NNS'), (',', ','), ('and', 'CC'), ('interacting', 'VBG'), ('with', 'IN'), ('adaptive', 'JJ'), ('dialogs', 'NNS'), ('all', 'RB'), ('lead', 'VBP'), ('to', 'IN'), ('more', 'RBR'), ('efficient', 'JJ'), ('and', 'CC'), ('appealing', 'JJ'), ('calls', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('three', 'three'), ('complementary', 'complementary'), ('natural', 'natural'), ('language', 'language'), ('approaches', 'approach'), ('of', 'of'), ('increasing', 'increase'), ('the', 'the'), ('recognition', 'recognition'), ('accuracy', 'accuracy'), ('within', 'within'), ('and', 'and'), ('around', 'around'), ('grammars', 'grammar'), (',', ','), ('allowing', 'allow'), ('callers', 'caller'), ('to', 'to'), ('give', 'give'), ('open-ended', 'open-ended'), ('responses', 'response'), (',', ','), ('and', 'and'), ('interacting', 'interact'), ('with', 'with'), ('adaptive', 'adaptive'), ('dialogs', 'dialog'), ('all', 'all'), ('lead', 'lead'), ('to', 'to'), ('more', 'more'), ('efficient', 'efficient'), ('and', 'and'), ('appealing', 'appealing'), ('calls', 'call'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'approaches'), 'det'), (('three', 'approaches'), 'nummod'), (('complementary', 'approaches'), 'amod'), (('natural', 'language'), 'amod'), (('language', 'approaches'), 'compound'), (('approaches', 'lead'), 'nsubj'), (('of', 'increasing'), 'mark'), (('increasing', 'approaches'), 'acl'), (('the', 'accuracy'), 'det'), (('recognition', 'accuracy'), 'compound'), (('accuracy', 'increasing'), 'obj'), (('within', 'grammars'), 'case'), (('and', 'around'), 'cc'), (('around', 'within'), 'conj'), (('grammars', 'increasing'), 'obl'), ((',', 'allowing'), 'punct'), (('allowing', 'increasing'), 'conj'), (('callers', 'allowing'), 'obj'), (('to', 'give'), 'mark'), (('give', 'allowing'), 'xcomp'), (('open-ended', 'responses'), 'amod'), (('responses', 'give'), 'obj'), ((',', 'interacting'), 'punct'), (('and', 'interacting'), 'cc'), (('interacting', 'allowing'), 'conj'), (('with', 'dialogs'), 'case'), (('adaptive', 'dialogs'), 'amod'), (('dialogs', 'interacting'), 'obl'), (('all', 'lead'), 'advmod'), (('lead', 'root'), 'root'), (('to', 'calls'), 'case'), (('more', 'efficient'), 'advmod'), (('efficient', 'calls'), 'amod'), (('and', 'appealing'), 'cc'), (('appealing', 'efficient'), 'conj'), (('calls', 'lead'), 'obl'), (('.', 'lead'), 'punct')]

 Named Entities are: 
>> [('three', 'CARDINAL')]

========================== Sentence 120 ===========================

 Copyright © 2015 Nuance Communications, Inc. 

Tokens are: 
>> ['Copyright', '©', '2015', 'Nuance', 'Communications', ',', 'Inc', '.'] 

 UPOS tags are: 
>> [('Copyright', 'NOUN'), ('©', 'ADP'), ('2015', 'NUM'), ('Nuance', 'PROPN'), ('Communications', 'PROPN'), (',', 'PUNCT'), ('Inc', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Copyright', 'NN'), ('©', 'IN'), ('2015', 'CD'), ('Nuance', 'NNP'), ('Communications', 'NNPS'), (',', ','), ('Inc', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('Copyright', 'copyright'), ('©', 'at'), ('2015', '2015'), ('Nuance', 'Nuance'), ('Communications', 'Communication'), (',', ','), ('Inc', 'Inc'), ('.', '.')] 

 Dependency tags are: 
>> [(('Copyright', 'root'), 'root'), (('©', 'Communications'), 'case'), (('2015', 'Communications'), 'nummod'), (('Nuance', 'Communications'), 'compound'), (('Communications', 'Copyright'), 'nmod'), ((',', 'Communications'), 'punct'), (('Inc', 'Communications'), 'appos'), (('.', 'Copyright'), 'punct')]

 Named Entities are: 
>> [('Copyright © 2015 Nuance Communications, Inc', 'ORG')]

========================== Sentence 121 ===========================

 All rights reserved. 

Tokens are: 
>> ['All', 'rights', 'reserved', '.'] 

 UPOS tags are: 
>> [('All', 'DET'), ('rights', 'NOUN'), ('reserved', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('All', 'DT'), ('rights', 'NNS'), ('reserved', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('All', 'all'), ('rights', 'rights'), ('reserved', 'reserve'), ('.', '.')] 

 Dependency tags are: 
>> [(('All', 'rights'), 'det'), (('rights', 'reserved'), 'nsubj:pass'), (('reserved', 'root'), 'root'), (('.', 'reserved'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 122 ===========================

 Nuance, and the Nuance logo, are trademarks and/or  registered trademarks, of Nuance Communications, Inc. or its affiliates in the United States and/or other countries. 

Tokens are: 
>> ['Nuance', ',', 'and', 'the', 'Nuance', 'logo', ',', 'are', 'trademarks', 'and', '/', 'or', 'registered', 'trademarks', ',', 'of', 'Nuance', 'Communications', ',', 'Inc.', 'or', 'its', 'affiliates', 'in', 'the', 'United', 'States', 'and', '/', 'or', 'other', 'countries', '.'] 

 UPOS tags are: 
>> [('Nuance', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('the', 'DET'), ('Nuance', 'NOUN'), ('logo', 'NOUN'), (',', 'PUNCT'), ('are', 'VERB'), ('trademarks', 'NOUN'), ('and', 'CCONJ'), ('/', 'PUNCT'), ('or', 'CCONJ'), ('registered', 'VERB'), ('trademarks', 'NOUN'), (',', 'PUNCT'), ('of', 'ADP'), ('Nuance', 'PROPN'), ('Communications', 'PROPN'), (',', 'PUNCT'), ('Inc.', 'PROPN'), ('or', 'CCONJ'), ('its', 'PRON'), ('affiliates', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('United', 'ADJ'), ('States', 'PROPN'), ('and', 'CCONJ'), ('/', 'PUNCT'), ('or', 'CCONJ'), ('other', 'ADJ'), ('countries', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Nuance', 'NN'), (',', ','), ('and', 'CC'), ('the', 'DT'), ('Nuance', 'NN'), ('logo', 'NN'), (',', ','), ('are', 'VBP'), ('trademarks', 'NNS'), ('and', 'CC'), ('/', ','), ('or', 'CC'), ('registered', 'VBN'), ('trademarks', 'NNS'), (',', ','), ('of', 'IN'), ('Nuance', 'NNP'), ('Communications', 'NNPS'), (',', ','), ('Inc.', 'NNP'), ('or', 'CC'), ('its', 'PRP$'), ('affiliates', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('United', 'NNP'), ('States', 'NNPS'), ('and', 'CC'), ('/', ','), ('or', 'CC'), ('other', 'JJ'), ('countries', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Nuance', 'nuance'), (',', ','), ('and', 'and'), ('the', 'the'), ('Nuance', 'nuance'), ('logo', 'logo'), (',', ','), ('are', 'be'), ('trademarks', 'trademark'), ('and', 'and'), ('/', '/'), ('or', 'or'), ('registered', 'register'), ('trademarks', 'trademark'), (',', ','), ('of', 'of'), ('Nuance', 'Nuance'), ('Communications', 'Communication'), (',', ','), ('Inc.', 'Inc.'), ('or', 'or'), ('its', 'its'), ('affiliates', 'affiliate'), ('in', 'in'), ('the', 'the'), ('United', 'United'), ('States', 'State'), ('and', 'and'), ('/', '/'), ('or', 'or'), ('other', 'other'), ('countries', 'country'), ('.', '.')] 

 Dependency tags are: 
>> [(('Nuance', 'are'), 'nsubj'), ((',', 'logo'), 'punct'), (('and', 'logo'), 'cc'), (('the', 'logo'), 'det'), (('Nuance', 'logo'), 'compound'), (('logo', 'Nuance'), 'conj'), ((',', 'Nuance'), 'punct'), (('are', 'root'), 'root'), (('trademarks', 'are'), 'nsubj'), (('and', 'trademarks'), 'cc'), (('/', 'or'), 'punct'), (('or', 'trademarks'), 'cc'), (('registered', 'trademarks'), 'amod'), (('trademarks', 'trademarks'), 'conj'), ((',', 'Communications'), 'punct'), (('of', 'Communications'), 'case'), (('Nuance', 'Communications'), 'compound'), (('Communications', 'trademarks'), 'nmod'), ((',', 'Inc.'), 'punct'), (('Inc.', 'Communications'), 'conj'), (('or', 'affiliates'), 'cc'), (('its', 'affiliates'), 'nmod:poss'), (('affiliates', 'Communications'), 'conj'), (('in', 'States'), 'case'), (('the', 'States'), 'det'), (('United', 'States'), 'amod'), (('States', 'affiliates'), 'nmod'), (('and', 'countries'), 'cc'), (('/', 'or'), 'punct'), (('or', 'countries'), 'cc'), (('other', 'countries'), 'amod'), (('countries', 'States'), 'conj'), (('.', 'are'), 'punct')]

 Named Entities are: 
>> [('Nuance', 'ORG'), ('Nuance', 'ORG'), ('Nuance Communications, Inc.', 'ORG'), ('the United States', 'GPE')]

========================== Sentence 123 ===========================

 All other  brand and product names are trademarks or registered trademarks of their respective companies. 

Tokens are: 
>> ['All', 'other', 'brand', 'and', 'product', 'names', 'are', 'trademarks', 'or', 'registered', 'trademarks', 'of', 'their', 'respective', 'companies', '.'] 

 UPOS tags are: 
>> [('All', 'DET'), ('other', 'ADJ'), ('brand', 'NOUN'), ('and', 'CCONJ'), ('product', 'NOUN'), ('names', 'NOUN'), ('are', 'AUX'), ('trademarks', 'NOUN'), ('or', 'CCONJ'), ('registered', 'VERB'), ('trademarks', 'NOUN'), ('of', 'ADP'), ('their', 'PRON'), ('respective', 'ADJ'), ('companies', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('All', 'DT'), ('other', 'JJ'), ('brand', 'NN'), ('and', 'CC'), ('product', 'NN'), ('names', 'NNS'), ('are', 'VBP'), ('trademarks', 'NNS'), ('or', 'CC'), ('registered', 'VBN'), ('trademarks', 'NNS'), ('of', 'IN'), ('their', 'PRP$'), ('respective', 'JJ'), ('companies', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('All', 'all'), ('other', 'other'), ('brand', 'brand'), ('and', 'and'), ('product', 'product'), ('names', 'name'), ('are', 'be'), ('trademarks', 'trademark'), ('or', 'or'), ('registered', 'register'), ('trademarks', 'trademark'), ('of', 'of'), ('their', 'they'), ('respective', 'respective'), ('companies', 'company'), ('.', '.')] 

 Dependency tags are: 
>> [(('All', 'brand'), 'det'), (('other', 'brand'), 'amod'), (('brand', 'trademarks'), 'nsubj'), (('and', 'names'), 'cc'), (('product', 'names'), 'compound'), (('names', 'brand'), 'conj'), (('are', 'trademarks'), 'cop'), (('trademarks', 'root'), 'root'), (('or', 'trademarks'), 'cc'), (('registered', 'trademarks'), 'amod'), (('trademarks', 'trademarks'), 'conj'), (('of', 'companies'), 'case'), (('their', 'companies'), 'nmod:poss'), (('respective', 'companies'), 'amod'), (('companies', 'trademarks'), 'nmod'), (('.', 'trademarks'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 124 ===========================

 NUAN–CS–385–01–WP, Feb 17 2015  About Nuance Communications, Inc. Nuance Communications is reinventing the relationship between people and technology. 

Tokens are: 
>> ['NUAN–CS–385–01', '–WP', ',', 'Feb', '17', '2015', 'About', 'Nuance', 'Communications', ',', 'Inc.', 'Nuance', 'Communications', 'is', 'reinventing', 'the', 'relationship', 'between', 'people', 'and', 'technology', '.'] 

 UPOS tags are: 
>> [('NUAN–CS–385–01', 'PROPN'), ('–WP', 'PROPN'), (',', 'PUNCT'), ('Feb', 'PROPN'), ('17', 'NUM'), ('2015', 'NUM'), ('About', 'ADP'), ('Nuance', 'PROPN'), ('Communications', 'PROPN'), (',', 'PUNCT'), ('Inc.', 'PROPN'), ('Nuance', 'PROPN'), ('Communications', 'PROPN'), ('is', 'AUX'), ('reinventing', 'VERB'), ('the', 'DET'), ('relationship', 'NOUN'), ('between', 'ADP'), ('people', 'NOUN'), ('and', 'CCONJ'), ('technology', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('NUAN–CS–385–01', 'NNP'), ('–WP', 'NNP'), (',', ','), ('Feb', 'NNP'), ('17', 'CD'), ('2015', 'CD'), ('About', 'IN'), ('Nuance', 'NNP'), ('Communications', 'NNPS'), (',', ','), ('Inc.', 'NNP'), ('Nuance', 'NNP'), ('Communications', 'NNPS'), ('is', 'VBZ'), ('reinventing', 'VBG'), ('the', 'DT'), ('relationship', 'NN'), ('between', 'IN'), ('people', 'NNS'), ('and', 'CC'), ('technology', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('NUAN–CS–385–01', 'NUAN–CS–385–01'), ('–WP', '–WP'), (',', ','), ('Feb', 'Feb'), ('17', '17'), ('2015', '2015'), ('About', 'about'), ('Nuance', 'Nuance'), ('Communications', 'Communication'), (',', ','), ('Inc.', 'Inc.'), ('Nuance', 'Nuance'), ('Communications', 'Communication'), ('is', 'be'), ('reinventing', 'reinvent'), ('the', 'the'), ('relationship', 'relationship'), ('between', 'between'), ('people', 'people'), ('and', 'and'), ('technology', 'technology'), ('.', '.')] 

 Dependency tags are: 
>> [(('NUAN–CS–385–01', 'reinventing'), 'nsubj'), (('–WP', 'NUAN–CS–385–01'), 'flat'), ((',', 'Feb'), 'punct'), (('Feb', 'NUAN–CS–385–01'), 'list'), (('17', 'Feb'), 'nummod'), (('2015', 'Feb'), 'nmod:tmod'), (('About', 'Communications'), 'case'), (('Nuance', 'Communications'), 'compound'), (('Communications', 'Communications'), 'compound'), ((',', 'Inc.'), 'punct'), (('Inc.', 'Communications'), 'compound'), (('Nuance', 'Communications'), 'compound'), (('Communications', 'reinventing'), 'nsubj'), (('is', 'reinventing'), 'aux'), (('reinventing', 'root'), 'root'), (('the', 'relationship'), 'det'), (('relationship', 'reinventing'), 'obj'), (('between', 'people'), 'case'), (('people', 'relationship'), 'nmod'), (('and', 'technology'), 'cc'), (('technology', 'people'), 'conj'), (('.', 'reinventing'), 'punct')]

 Named Entities are: 
>> [('Feb 17 2015', 'DATE'), ('Nuance Communications, Inc.', 'ORG'), ('Nuance Communications', 'ORG')]

========================== Sentence 125 ===========================

 Through its voice and  language offerings, the company is creating a more human conversation with the many systems, devices, electronics,  apps and services around us. 

Tokens are: 
>> ['Through', 'its', 'voice', 'and', 'language', 'offerings', ',', 'the', 'company', 'is', 'creating', 'a', 'more', 'human', 'conversation', 'with', 'the', 'many', 'systems', ',', 'devices', ',', 'electronics', ',', 'apps', 'and', 'services', 'around', 'us', '.'] 

 UPOS tags are: 
>> [('Through', 'ADP'), ('its', 'PRON'), ('voice', 'NOUN'), ('and', 'CCONJ'), ('language', 'NOUN'), ('offerings', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('company', 'NOUN'), ('is', 'AUX'), ('creating', 'VERB'), ('a', 'DET'), ('more', 'ADV'), ('human', 'ADJ'), ('conversation', 'NOUN'), ('with', 'ADP'), ('the', 'DET'), ('many', 'ADJ'), ('systems', 'NOUN'), (',', 'PUNCT'), ('devices', 'NOUN'), (',', 'PUNCT'), ('electronics', 'NOUN'), (',', 'PUNCT'), ('apps', 'NOUN'), ('and', 'CCONJ'), ('services', 'NOUN'), ('around', 'ADP'), ('us', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Through', 'IN'), ('its', 'PRP$'), ('voice', 'NN'), ('and', 'CC'), ('language', 'NN'), ('offerings', 'NNS'), (',', ','), ('the', 'DT'), ('company', 'NN'), ('is', 'VBZ'), ('creating', 'VBG'), ('a', 'DT'), ('more', 'RBR'), ('human', 'JJ'), ('conversation', 'NN'), ('with', 'IN'), ('the', 'DT'), ('many', 'JJ'), ('systems', 'NNS'), (',', ','), ('devices', 'NNS'), (',', ','), ('electronics', 'NNS'), (',', ','), ('apps', 'NNS'), ('and', 'CC'), ('services', 'NNS'), ('around', 'IN'), ('us', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('Through', 'through'), ('its', 'its'), ('voice', 'voice'), ('and', 'and'), ('language', 'language'), ('offerings', 'offering'), (',', ','), ('the', 'the'), ('company', 'company'), ('is', 'be'), ('creating', 'create'), ('a', 'a'), ('more', 'more'), ('human', 'human'), ('conversation', 'conversation'), ('with', 'with'), ('the', 'the'), ('many', 'many'), ('systems', 'system'), (',', ','), ('devices', 'device'), (',', ','), ('electronics', 'electronics'), (',', ','), ('apps', 'app'), ('and', 'and'), ('services', 'service'), ('around', 'around'), ('us', 'we'), ('.', '.')] 

 Dependency tags are: 
>> [(('Through', 'voice'), 'case'), (('its', 'voice'), 'nmod:poss'), (('voice', 'creating'), 'obl'), (('and', 'offerings'), 'cc'), (('language', 'offerings'), 'compound'), (('offerings', 'voice'), 'conj'), ((',', 'creating'), 'punct'), (('the', 'company'), 'det'), (('company', 'creating'), 'nsubj'), (('is', 'creating'), 'aux'), (('creating', 'root'), 'root'), (('a', 'conversation'), 'det'), (('more', 'human'), 'advmod'), (('human', 'conversation'), 'amod'), (('conversation', 'creating'), 'obj'), (('with', 'systems'), 'case'), (('the', 'systems'), 'det'), (('many', 'systems'), 'amod'), (('systems', 'conversation'), 'nmod'), ((',', 'devices'), 'punct'), (('devices', 'systems'), 'conj'), ((',', 'electronics'), 'punct'), (('electronics', 'systems'), 'conj'), ((',', 'apps'), 'punct'), (('apps', 'systems'), 'conj'), (('and', 'services'), 'cc'), (('services', 'systems'), 'conj'), (('around', 'us'), 'case'), (('us', 'systems'), 'nmod'), (('.', 'creating'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 126 ===========================

 Every day, millions of people and thousands of businesses experience Nuance through  intelligent systems that can listen, understand, learn and adapt to your life and your work. 

Tokens are: 
>> ['Every', 'day', ',', 'millions', 'of', 'people', 'and', 'thousands', 'of', 'businesses', 'experience', 'Nuance', 'through', 'intelligent', 'systems', 'that', 'can', 'listen', ',', 'understand', ',', 'learn', 'and', 'adapt', 'to', 'your', 'life', 'and', 'your', 'work', '.'] 

 UPOS tags are: 
>> [('Every', 'DET'), ('day', 'NOUN'), (',', 'PUNCT'), ('millions', 'NOUN'), ('of', 'ADP'), ('people', 'NOUN'), ('and', 'CCONJ'), ('thousands', 'NOUN'), ('of', 'ADP'), ('businesses', 'NOUN'), ('experience', 'VERB'), ('Nuance', 'NOUN'), ('through', 'ADP'), ('intelligent', 'ADJ'), ('systems', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('listen', 'VERB'), (',', 'PUNCT'), ('understand', 'VERB'), (',', 'PUNCT'), ('learn', 'VERB'), ('and', 'CCONJ'), ('adapt', 'VERB'), ('to', 'ADP'), ('your', 'PRON'), ('life', 'NOUN'), ('and', 'CCONJ'), ('your', 'PRON'), ('work', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Every', 'DT'), ('day', 'NN'), (',', ','), ('millions', 'NNS'), ('of', 'IN'), ('people', 'NNS'), ('and', 'CC'), ('thousands', 'NNS'), ('of', 'IN'), ('businesses', 'NNS'), ('experience', 'VBP'), ('Nuance', 'NN'), ('through', 'IN'), ('intelligent', 'JJ'), ('systems', 'NNS'), ('that', 'WDT'), ('can', 'MD'), ('listen', 'VB'), (',', ','), ('understand', 'VB'), (',', ','), ('learn', 'VB'), ('and', 'CC'), ('adapt', 'VB'), ('to', 'IN'), ('your', 'PRP$'), ('life', 'NN'), ('and', 'CC'), ('your', 'PRP$'), ('work', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Every', 'every'), ('day', 'day'), (',', ','), ('millions', 'million'), ('of', 'of'), ('people', 'people'), ('and', 'and'), ('thousands', 'thousand'), ('of', 'of'), ('businesses', 'business'), ('experience', 'experience'), ('Nuance', 'nuance'), ('through', 'through'), ('intelligent', 'intelligent'), ('systems', 'system'), ('that', 'that'), ('can', 'can'), ('listen', 'listen'), (',', ','), ('understand', 'understand'), (',', ','), ('learn', 'learn'), ('and', 'and'), ('adapt', 'adapt'), ('to', 'to'), ('your', 'you'), ('life', 'life'), ('and', 'and'), ('your', 'you'), ('work', 'work'), ('.', '.')] 

 Dependency tags are: 
>> [(('Every', 'day'), 'det'), (('day', 'experience'), 'obl:tmod'), ((',', 'experience'), 'punct'), (('millions', 'experience'), 'nsubj'), (('of', 'people'), 'case'), (('people', 'millions'), 'nmod'), (('and', 'thousands'), 'cc'), (('thousands', 'millions'), 'conj'), (('of', 'businesses'), 'case'), (('businesses', 'thousands'), 'nmod'), (('experience', 'root'), 'root'), (('Nuance', 'experience'), 'obj'), (('through', 'systems'), 'case'), (('intelligent', 'systems'), 'amod'), (('systems', 'experience'), 'obl'), (('that', 'listen'), 'nsubj'), (('can', 'listen'), 'aux'), (('listen', 'systems'), 'acl:relcl'), ((',', 'understand'), 'punct'), (('understand', 'listen'), 'conj'), ((',', 'learn'), 'punct'), (('learn', 'listen'), 'conj'), (('and', 'adapt'), 'cc'), (('adapt', 'listen'), 'conj'), (('to', 'life'), 'case'), (('your', 'life'), 'nmod:poss'), (('life', 'adapt'), 'obl'), (('and', 'work'), 'cc'), (('your', 'work'), 'nmod:poss'), (('work', 'life'), 'conj'), (('.', 'experience'), 'punct')]

 Named Entities are: 
>> [('millions', 'CARDINAL'), ('thousands', 'CARDINAL'), ('Nuance', 'ORG')]

========================== Sentence 127 ===========================

 For more information, please  visit nuance.com. 

Tokens are: 
>> ['For', 'more', 'information', ',', 'please', 'visit', 'nuance.com', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('more', 'ADJ'), ('information', 'NOUN'), (',', 'PUNCT'), ('please', 'INTJ'), ('visit', 'VERB'), ('nuance.com', 'X'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('more', 'JJR'), ('information', 'NN'), (',', ','), ('please', 'UH'), ('visit', 'VB'), ('nuance.com', 'ADD'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('more', 'more'), ('information', 'information'), (',', ','), ('please', 'please'), ('visit', 'visit'), ('nuance.com', 'nuance.com'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'information'), 'case'), (('more', 'information'), 'amod'), (('information', 'visit'), 'obl'), ((',', 'visit'), 'punct'), (('please', 'visit'), 'discourse'), (('visit', 'root'), 'root'), (('nuance.com', 'visit'), 'obj'), (('.', 'visit'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 128 ===========================

 Nuance Adaptive Dialog Modules  are specialized building blocks used  to efficiently create intuitive speech- enabled dialogs that drive automation. 

Tokens are: 
>> ['Nuance', 'Adaptive', 'Dialog', 'Modules', 'are', 'specialized', 'building', 'blocks', 'used', 'to', 'efficiently', 'create', 'intuitive', 'speech', '-', 'enabled', 'dialogs', 'that', 'drive', 'automation', '.'] 

 UPOS tags are: 
>> [('Nuance', 'NOUN'), ('Adaptive', 'ADJ'), ('Dialog', 'NOUN'), ('Modules', 'NOUN'), ('are', 'AUX'), ('specialized', 'VERB'), ('building', 'NOUN'), ('blocks', 'NOUN'), ('used', 'VERB'), ('to', 'PART'), ('efficiently', 'ADV'), ('create', 'VERB'), ('intuitive', 'ADJ'), ('speech', 'NOUN'), ('-', 'PUNCT'), ('enabled', 'VERB'), ('dialogs', 'NOUN'), ('that', 'PRON'), ('drive', 'VERB'), ('automation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Nuance', 'NN'), ('Adaptive', 'JJ'), ('Dialog', 'NN'), ('Modules', 'NNS'), ('are', 'VBP'), ('specialized', 'VBN'), ('building', 'NN'), ('blocks', 'NNS'), ('used', 'VBN'), ('to', 'TO'), ('efficiently', 'RB'), ('create', 'VB'), ('intuitive', 'JJ'), ('speech', 'NN'), ('-', 'HYPH'), ('enabled', 'VBN'), ('dialogs', 'NNS'), ('that', 'WDT'), ('drive', 'VBP'), ('automation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Nuance', 'nuance'), ('Adaptive', 'adaptive'), ('Dialog', 'dialog'), ('Modules', 'module'), ('are', 'be'), ('specialized', 'specialize'), ('building', 'building'), ('blocks', 'block'), ('used', 'use'), ('to', 'to'), ('efficiently', 'efficiently'), ('create', 'create'), ('intuitive', 'intuitive'), ('speech', 'speech'), ('-', '-'), ('enabled', 'enable'), ('dialogs', 'dialog'), ('that', 'that'), ('drive', 'drive'), ('automation', 'automation'), ('.', '.')] 

 Dependency tags are: 
>> [(('Nuance', 'Modules'), 'compound'), (('Adaptive', 'Modules'), 'amod'), (('Dialog', 'Modules'), 'compound'), (('Modules', 'specialized'), 'nsubj:pass'), (('are', 'specialized'), 'aux:pass'), (('specialized', 'root'), 'root'), (('building', 'blocks'), 'compound'), (('blocks', 'specialized'), 'obj'), (('used', 'blocks'), 'acl'), (('to', 'create'), 'mark'), (('efficiently', 'create'), 'advmod'), (('create', 'used'), 'xcomp'), (('intuitive', 'dialogs'), 'amod'), (('speech', 'enabled'), 'compound'), (('-', 'enabled'), 'punct'), (('enabled', 'dialogs'), 'amod'), (('dialogs', 'create'), 'obj'), (('that', 'drive'), 'nsubj'), (('drive', 'dialogs'), 'acl:relcl'), (('automation', 'drive'), 'obj'), (('.', 'specialized'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 129 ===========================

 http://www.nuance.com 

Tokens are: 
>> ['http://www.nuance.com'] 

 UPOS tags are: 
>> [('http://www.nuance.com', 'X')] 

 XPOS tags are: 
>> [('http://www.nuance.com', 'ADD')] 

 Lemmas are: 
>> [('http://www.nuance.com', 'http://www.nuance.com')] 

 Dependency tags are: 
>> [(('http://www.nuance.com', 'root'), 'root')]

 Named Entities are: 
>> []