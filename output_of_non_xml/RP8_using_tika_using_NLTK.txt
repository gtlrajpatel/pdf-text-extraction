				 *** Text Processing using NLTK *** 


============================ Sentence 1 =============================

Artificial Intelligence and Human Thinking   Abstract   Research in AI has built upon the tools and techniques of  many different disciplines, including formal logic, probabil- ity theory, decision theory, management science, linguistics  and philosophy. 


>> Tokens are: 
 ['Artificial', 'Intelligence', 'Human', 'Thinking', 'Abstract', 'Research', 'AI', 'built', 'upon', 'tools', 'techniques', 'many', 'different', 'disciplines', ',', 'including', 'formal', 'logic', ',', 'probabil-', 'ity', 'theory', ',', 'decision', 'theory', ',', 'management', 'science', ',', 'linguistics', 'philosophy', '.']

>> Bigrams are: 
 [('Artificial', 'Intelligence'), ('Intelligence', 'Human'), ('Human', 'Thinking'), ('Thinking', 'Abstract'), ('Abstract', 'Research'), ('Research', 'AI'), ('AI', 'built'), ('built', 'upon'), ('upon', 'tools'), ('tools', 'techniques'), ('techniques', 'many'), ('many', 'different'), ('different', 'disciplines'), ('disciplines', ','), (',', 'including'), ('including', 'formal'), ('formal', 'logic'), ('logic', ','), (',', 'probabil-'), ('probabil-', 'ity'), ('ity', 'theory'), ('theory', ','), (',', 'decision'), ('decision', 'theory'), ('theory', ','), (',', 'management'), ('management', 'science'), ('science', ','), (',', 'linguistics'), ('linguistics', 'philosophy'), ('philosophy', '.')]

>> Trigrams are: 
 [('Artificial', 'Intelligence', 'Human'), ('Intelligence', 'Human', 'Thinking'), ('Human', 'Thinking', 'Abstract'), ('Thinking', 'Abstract', 'Research'), ('Abstract', 'Research', 'AI'), ('Research', 'AI', 'built'), ('AI', 'built', 'upon'), ('built', 'upon', 'tools'), ('upon', 'tools', 'techniques'), ('tools', 'techniques', 'many'), ('techniques', 'many', 'different'), ('many', 'different', 'disciplines'), ('different', 'disciplines', ','), ('disciplines', ',', 'including'), (',', 'including', 'formal'), ('including', 'formal', 'logic'), ('formal', 'logic', ','), ('logic', ',', 'probabil-'), (',', 'probabil-', 'ity'), ('probabil-', 'ity', 'theory'), ('ity', 'theory', ','), ('theory', ',', 'decision'), (',', 'decision', 'theory'), ('decision', 'theory', ','), ('theory', ',', 'management'), (',', 'management', 'science'), ('management', 'science', ','), ('science', ',', 'linguistics'), (',', 'linguistics', 'philosophy'), ('linguistics', 'philosophy', '.')]

>> POS Tags are: 
 [('Artificial', 'JJ'), ('Intelligence', 'NNP'), ('Human', 'NNP'), ('Thinking', 'NNP'), ('Abstract', 'NNP'), ('Research', 'NNP'), ('AI', 'NNP'), ('built', 'VBD'), ('upon', 'IN'), ('tools', 'NNS'), ('techniques', 'NNS'), ('many', 'JJ'), ('different', 'JJ'), ('disciplines', 'NNS'), (',', ','), ('including', 'VBG'), ('formal', 'JJ'), ('logic', 'NN'), (',', ','), ('probabil-', 'JJ'), ('ity', 'NN'), ('theory', 'NN'), (',', ','), ('decision', 'NN'), ('theory', 'NN'), (',', ','), ('management', 'NN'), ('science', 'NN'), (',', ','), ('linguistics', 'NNS'), ('philosophy', 'NN'), ('.', '.')]

 (S
  (NP
    Artificial/JJ
    Intelligence/NNP
    Human/NNP
    Thinking/NNP
    Abstract/NNP
    Research/NNP
    AI/NNP)
  built/VBD
  upon/IN
  (NP tools/NNS techniques/NNS)
  (NP many/JJ different/JJ disciplines/NNS)
  ,/,
  including/VBG
  (NP formal/JJ logic/NN)
  ,/,
  (NP probabil-/JJ ity/NN theory/NN)
  ,/,
  (NP decision/NN theory/NN)
  ,/,
  (NP management/NN science/NN)
  ,/,
  (NP linguistics/NNS philosophy/NN)
  ./.) 


>> Noun Phrases are: 
 ['Artificial Intelligence Human Thinking Abstract Research AI', 'tools techniques', 'many different disciplines', 'formal logic', 'probabil- ity theory', 'decision theory', 'management science', 'linguistics philosophy']

>> Named Entities are: 
 [('ORGANIZATION', 'Intelligence')] 

>> Stemming using Porter Stemmer: 
 [('Artificial', 'artifici'), ('Intelligence', 'intellig'), ('Human', 'human'), ('Thinking', 'think'), ('Abstract', 'abstract'), ('Research', 'research'), ('AI', 'ai'), ('built', 'built'), ('upon', 'upon'), ('tools', 'tool'), ('techniques', 'techniqu'), ('many', 'mani'), ('different', 'differ'), ('disciplines', 'disciplin'), (',', ','), ('including', 'includ'), ('formal', 'formal'), ('logic', 'logic'), (',', ','), ('probabil-', 'probabil-'), ('ity', 'iti'), ('theory', 'theori'), (',', ','), ('decision', 'decis'), ('theory', 'theori'), (',', ','), ('management', 'manag'), ('science', 'scienc'), (',', ','), ('linguistics', 'linguist'), ('philosophy', 'philosophi'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Artificial', 'artifici'), ('Intelligence', 'intellig'), ('Human', 'human'), ('Thinking', 'think'), ('Abstract', 'abstract'), ('Research', 'research'), ('AI', 'ai'), ('built', 'built'), ('upon', 'upon'), ('tools', 'tool'), ('techniques', 'techniqu'), ('many', 'mani'), ('different', 'differ'), ('disciplines', 'disciplin'), (',', ','), ('including', 'includ'), ('formal', 'formal'), ('logic', 'logic'), (',', ','), ('probabil-', 'probabil-'), ('ity', 'iti'), ('theory', 'theori'), (',', ','), ('decision', 'decis'), ('theory', 'theori'), (',', ','), ('management', 'manag'), ('science', 'scienc'), (',', ','), ('linguistics', 'linguist'), ('philosophy', 'philosophi'), ('.', '.')]

>> Lemmatization: 
 [('Artificial', 'Artificial'), ('Intelligence', 'Intelligence'), ('Human', 'Human'), ('Thinking', 'Thinking'), ('Abstract', 'Abstract'), ('Research', 'Research'), ('AI', 'AI'), ('built', 'built'), ('upon', 'upon'), ('tools', 'tool'), ('techniques', 'technique'), ('many', 'many'), ('different', 'different'), ('disciplines', 'discipline'), (',', ','), ('including', 'including'), ('formal', 'formal'), ('logic', 'logic'), (',', ','), ('probabil-', 'probabil-'), ('ity', 'ity'), ('theory', 'theory'), (',', ','), ('decision', 'decision'), ('theory', 'theory'), (',', ','), ('management', 'management'), ('science', 'science'), (',', ','), ('linguistics', 'linguistics'), ('philosophy', 'philosophy'), ('.', '.')]



============================ Sentence 2 =============================

However, the application of these disci- plines in AI has necessitated the development of many en- hancements and extensions. 


>> Tokens are: 
 ['However', ',', 'application', 'disci-', 'plines', 'AI', 'necessitated', 'development', 'many', 'en-', 'hancements', 'extensions', '.']

>> Bigrams are: 
 [('However', ','), (',', 'application'), ('application', 'disci-'), ('disci-', 'plines'), ('plines', 'AI'), ('AI', 'necessitated'), ('necessitated', 'development'), ('development', 'many'), ('many', 'en-'), ('en-', 'hancements'), ('hancements', 'extensions'), ('extensions', '.')]

>> Trigrams are: 
 [('However', ',', 'application'), (',', 'application', 'disci-'), ('application', 'disci-', 'plines'), ('disci-', 'plines', 'AI'), ('plines', 'AI', 'necessitated'), ('AI', 'necessitated', 'development'), ('necessitated', 'development', 'many'), ('development', 'many', 'en-'), ('many', 'en-', 'hancements'), ('en-', 'hancements', 'extensions'), ('hancements', 'extensions', '.')]

>> POS Tags are: 
 [('However', 'RB'), (',', ','), ('application', 'NN'), ('disci-', 'JJ'), ('plines', 'NNS'), ('AI', 'NNP'), ('necessitated', 'VBD'), ('development', 'NN'), ('many', 'JJ'), ('en-', 'JJ'), ('hancements', 'NNS'), ('extensions', 'NNS'), ('.', '.')]

 (S
  However/RB
  ,/,
  (NP application/NN)
  (NP disci-/JJ plines/NNS AI/NNP)
  necessitated/VBD
  (NP development/NN)
  (NP many/JJ en-/JJ hancements/NNS extensions/NNS)
  ./.) 


>> Noun Phrases are: 
 ['application', 'disci- plines AI', 'development', 'many en- hancements extensions']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('However', 'howev'), (',', ','), ('application', 'applic'), ('disci-', 'disci-'), ('plines', 'pline'), ('AI', 'ai'), ('necessitated', 'necessit'), ('development', 'develop'), ('many', 'mani'), ('en-', 'en-'), ('hancements', 'hancement'), ('extensions', 'extens'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('However', 'howev'), (',', ','), ('application', 'applic'), ('disci-', 'disci-'), ('plines', 'pline'), ('AI', 'ai'), ('necessitated', 'necessit'), ('development', 'develop'), ('many', 'mani'), ('en-', 'en-'), ('hancements', 'hancement'), ('extensions', 'extens'), ('.', '.')]

>> Lemmatization: 
 [('However', 'However'), (',', ','), ('application', 'application'), ('disci-', 'disci-'), ('plines', 'plines'), ('AI', 'AI'), ('necessitated', 'necessitated'), ('development', 'development'), ('many', 'many'), ('en-', 'en-'), ('hancements', 'hancements'), ('extensions', 'extension'), ('.', '.')]



============================ Sentence 3 =============================

Among the most powerful of  these are the methods of computational logic. 


>> Tokens are: 
 ['Among', 'powerful', 'methods', 'computational', 'logic', '.']

>> Bigrams are: 
 [('Among', 'powerful'), ('powerful', 'methods'), ('methods', 'computational'), ('computational', 'logic'), ('logic', '.')]

>> Trigrams are: 
 [('Among', 'powerful', 'methods'), ('powerful', 'methods', 'computational'), ('methods', 'computational', 'logic'), ('computational', 'logic', '.')]

>> POS Tags are: 
 [('Among', 'IN'), ('powerful', 'JJ'), ('methods', 'NNS'), ('computational', 'JJ'), ('logic', 'NN'), ('.', '.')]

 (S
  Among/IN
  (NP powerful/JJ methods/NNS)
  (NP computational/JJ logic/NN)
  ./.) 


>> Noun Phrases are: 
 ['powerful methods', 'computational logic']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Among', 'among'), ('powerful', 'power'), ('methods', 'method'), ('computational', 'comput'), ('logic', 'logic'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Among', 'among'), ('powerful', 'power'), ('methods', 'method'), ('computational', 'comput'), ('logic', 'logic'), ('.', '.')]

>> Lemmatization: 
 [('Among', 'Among'), ('powerful', 'powerful'), ('methods', 'method'), ('computational', 'computational'), ('logic', 'logic'), ('.', '.')]



============================ Sentence 4 =============================

I will argue that computational logic, embedded in an  agent cycle, combines and improves upon both traditional  logic and classical decision theory. 


>> Tokens are: 
 ['I', 'argue', 'computational', 'logic', ',', 'embedded', 'agent', 'cycle', ',', 'combines', 'improves', 'upon', 'traditional', 'logic', 'classical', 'decision', 'theory', '.']

>> Bigrams are: 
 [('I', 'argue'), ('argue', 'computational'), ('computational', 'logic'), ('logic', ','), (',', 'embedded'), ('embedded', 'agent'), ('agent', 'cycle'), ('cycle', ','), (',', 'combines'), ('combines', 'improves'), ('improves', 'upon'), ('upon', 'traditional'), ('traditional', 'logic'), ('logic', 'classical'), ('classical', 'decision'), ('decision', 'theory'), ('theory', '.')]

>> Trigrams are: 
 [('I', 'argue', 'computational'), ('argue', 'computational', 'logic'), ('computational', 'logic', ','), ('logic', ',', 'embedded'), (',', 'embedded', 'agent'), ('embedded', 'agent', 'cycle'), ('agent', 'cycle', ','), ('cycle', ',', 'combines'), (',', 'combines', 'improves'), ('combines', 'improves', 'upon'), ('improves', 'upon', 'traditional'), ('upon', 'traditional', 'logic'), ('traditional', 'logic', 'classical'), ('logic', 'classical', 'decision'), ('classical', 'decision', 'theory'), ('decision', 'theory', '.')]

>> POS Tags are: 
 [('I', 'PRP'), ('argue', 'VBP'), ('computational', 'JJ'), ('logic', 'NN'), (',', ','), ('embedded', 'VBD'), ('agent', 'JJ'), ('cycle', 'NN'), (',', ','), ('combines', 'NNS'), ('improves', 'VBZ'), ('upon', 'IN'), ('traditional', 'JJ'), ('logic', 'JJ'), ('classical', 'JJ'), ('decision', 'NN'), ('theory', 'NN'), ('.', '.')]

 (S
  I/PRP
  argue/VBP
  (NP computational/JJ logic/NN)
  ,/,
  embedded/VBD
  (NP agent/JJ cycle/NN)
  ,/,
  (NP combines/NNS)
  improves/VBZ
  upon/IN
  (NP traditional/JJ logic/JJ classical/JJ decision/NN theory/NN)
  ./.) 


>> Noun Phrases are: 
 ['computational logic', 'agent cycle', 'combines', 'traditional logic classical decision theory']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('I', 'i'), ('argue', 'argu'), ('computational', 'comput'), ('logic', 'logic'), (',', ','), ('embedded', 'embed'), ('agent', 'agent'), ('cycle', 'cycl'), (',', ','), ('combines', 'combin'), ('improves', 'improv'), ('upon', 'upon'), ('traditional', 'tradit'), ('logic', 'logic'), ('classical', 'classic'), ('decision', 'decis'), ('theory', 'theori'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('I', 'i'), ('argue', 'argu'), ('computational', 'comput'), ('logic', 'logic'), (',', ','), ('embedded', 'embed'), ('agent', 'agent'), ('cycle', 'cycl'), (',', ','), ('combines', 'combin'), ('improves', 'improv'), ('upon', 'upon'), ('traditional', 'tradit'), ('logic', 'logic'), ('classical', 'classic'), ('decision', 'decis'), ('theory', 'theori'), ('.', '.')]

>> Lemmatization: 
 [('I', 'I'), ('argue', 'argue'), ('computational', 'computational'), ('logic', 'logic'), (',', ','), ('embedded', 'embedded'), ('agent', 'agent'), ('cycle', 'cycle'), (',', ','), ('combines', 'combine'), ('improves', 'improves'), ('upon', 'upon'), ('traditional', 'traditional'), ('logic', 'logic'), ('classical', 'classical'), ('decision', 'decision'), ('theory', 'theory'), ('.', '.')]



============================ Sentence 5 =============================

I will also argue that  many of its methods can be used, not only in AI, but also in  ordinary life, to help people improve their own human intel- ligence without the assistance of computers. 


>> Tokens are: 
 ['I', 'also', 'argue', 'many', 'methods', 'used', ',', 'AI', ',', 'also', 'ordinary', 'life', ',', 'help', 'people', 'improve', 'human', 'intel-', 'ligence', 'without', 'assistance', 'computers', '.']

>> Bigrams are: 
 [('I', 'also'), ('also', 'argue'), ('argue', 'many'), ('many', 'methods'), ('methods', 'used'), ('used', ','), (',', 'AI'), ('AI', ','), (',', 'also'), ('also', 'ordinary'), ('ordinary', 'life'), ('life', ','), (',', 'help'), ('help', 'people'), ('people', 'improve'), ('improve', 'human'), ('human', 'intel-'), ('intel-', 'ligence'), ('ligence', 'without'), ('without', 'assistance'), ('assistance', 'computers'), ('computers', '.')]

>> Trigrams are: 
 [('I', 'also', 'argue'), ('also', 'argue', 'many'), ('argue', 'many', 'methods'), ('many', 'methods', 'used'), ('methods', 'used', ','), ('used', ',', 'AI'), (',', 'AI', ','), ('AI', ',', 'also'), (',', 'also', 'ordinary'), ('also', 'ordinary', 'life'), ('ordinary', 'life', ','), ('life', ',', 'help'), (',', 'help', 'people'), ('help', 'people', 'improve'), ('people', 'improve', 'human'), ('improve', 'human', 'intel-'), ('human', 'intel-', 'ligence'), ('intel-', 'ligence', 'without'), ('ligence', 'without', 'assistance'), ('without', 'assistance', 'computers'), ('assistance', 'computers', '.')]

>> POS Tags are: 
 [('I', 'PRP'), ('also', 'RB'), ('argue', 'VBP'), ('many', 'JJ'), ('methods', 'NNS'), ('used', 'VBN'), (',', ','), ('AI', 'NNP'), (',', ','), ('also', 'RB'), ('ordinary', 'JJ'), ('life', 'NN'), (',', ','), ('help', 'NN'), ('people', 'NNS'), ('improve', 'VB'), ('human', 'JJ'), ('intel-', 'JJ'), ('ligence', 'NN'), ('without', 'IN'), ('assistance', 'NN'), ('computers', 'NNS'), ('.', '.')]

 (S
  I/PRP
  also/RB
  argue/VBP
  (NP many/JJ methods/NNS)
  used/VBN
  ,/,
  (NP AI/NNP)
  ,/,
  also/RB
  (NP ordinary/JJ life/NN)
  ,/,
  (NP help/NN people/NNS)
  improve/VB
  (NP human/JJ intel-/JJ ligence/NN)
  without/IN
  (NP assistance/NN computers/NNS)
  ./.) 


>> Noun Phrases are: 
 ['many methods', 'AI', 'ordinary life', 'help people', 'human intel- ligence', 'assistance computers']

>> Named Entities are: 
 [('ORGANIZATION', 'AI')] 

>> Stemming using Porter Stemmer: 
 [('I', 'i'), ('also', 'also'), ('argue', 'argu'), ('many', 'mani'), ('methods', 'method'), ('used', 'use'), (',', ','), ('AI', 'ai'), (',', ','), ('also', 'also'), ('ordinary', 'ordinari'), ('life', 'life'), (',', ','), ('help', 'help'), ('people', 'peopl'), ('improve', 'improv'), ('human', 'human'), ('intel-', 'intel-'), ('ligence', 'ligenc'), ('without', 'without'), ('assistance', 'assist'), ('computers', 'comput'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('I', 'i'), ('also', 'also'), ('argue', 'argu'), ('many', 'mani'), ('methods', 'method'), ('used', 'use'), (',', ','), ('AI', 'ai'), (',', ','), ('also', 'also'), ('ordinary', 'ordinari'), ('life', 'life'), (',', ','), ('help', 'help'), ('people', 'peopl'), ('improve', 'improv'), ('human', 'human'), ('intel-', 'intel-'), ('ligence', 'ligenc'), ('without', 'without'), ('assistance', 'assist'), ('computers', 'comput'), ('.', '.')]

>> Lemmatization: 
 [('I', 'I'), ('also', 'also'), ('argue', 'argue'), ('many', 'many'), ('methods', 'method'), ('used', 'used'), (',', ','), ('AI', 'AI'), (',', ','), ('also', 'also'), ('ordinary', 'ordinary'), ('life', 'life'), (',', ','), ('help', 'help'), ('people', 'people'), ('improve', 'improve'), ('human', 'human'), ('intel-', 'intel-'), ('ligence', 'ligence'), ('without', 'without'), ('assistance', 'assistance'), ('computers', 'computer'), ('.', '.')]



============================ Sentence 6 =============================

1 Introduction   Computational logic, like other kinds of logic, comes in  many forms. 


>> Tokens are: 
 ['1', 'Introduction', 'Computational', 'logic', ',', 'like', 'kinds', 'logic', ',', 'comes', 'many', 'forms', '.']

>> Bigrams are: 
 [('1', 'Introduction'), ('Introduction', 'Computational'), ('Computational', 'logic'), ('logic', ','), (',', 'like'), ('like', 'kinds'), ('kinds', 'logic'), ('logic', ','), (',', 'comes'), ('comes', 'many'), ('many', 'forms'), ('forms', '.')]

>> Trigrams are: 
 [('1', 'Introduction', 'Computational'), ('Introduction', 'Computational', 'logic'), ('Computational', 'logic', ','), ('logic', ',', 'like'), (',', 'like', 'kinds'), ('like', 'kinds', 'logic'), ('kinds', 'logic', ','), ('logic', ',', 'comes'), (',', 'comes', 'many'), ('comes', 'many', 'forms'), ('many', 'forms', '.')]

>> POS Tags are: 
 [('1', 'CD'), ('Introduction', 'NNP'), ('Computational', 'NNP'), ('logic', 'NN'), (',', ','), ('like', 'IN'), ('kinds', 'NNS'), ('logic', 'JJ'), (',', ','), ('comes', 'VBZ'), ('many', 'JJ'), ('forms', 'NNS'), ('.', '.')]

 (S
  1/CD
  (NP Introduction/NNP Computational/NNP logic/NN)
  ,/,
  like/IN
  (NP kinds/NNS)
  logic/JJ
  ,/,
  comes/VBZ
  (NP many/JJ forms/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Introduction Computational logic', 'kinds', 'many forms']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('1', '1'), ('Introduction', 'introduct'), ('Computational', 'comput'), ('logic', 'logic'), (',', ','), ('like', 'like'), ('kinds', 'kind'), ('logic', 'logic'), (',', ','), ('comes', 'come'), ('many', 'mani'), ('forms', 'form'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('1', '1'), ('Introduction', 'introduct'), ('Computational', 'comput'), ('logic', 'logic'), (',', ','), ('like', 'like'), ('kinds', 'kind'), ('logic', 'logic'), (',', ','), ('comes', 'come'), ('many', 'mani'), ('forms', 'form'), ('.', '.')]

>> Lemmatization: 
 [('1', '1'), ('Introduction', 'Introduction'), ('Computational', 'Computational'), ('logic', 'logic'), (',', ','), ('like', 'like'), ('kinds', 'kind'), ('logic', 'logic'), (',', ','), ('comes', 'come'), ('many', 'many'), ('forms', 'form'), ('.', '.')]



============================ Sentence 7 =============================

In this paper, I will focus on the abductive  logic programming (ALP) form of computational logic. 


>> Tokens are: 
 ['In', 'paper', ',', 'I', 'focus', 'abductive', 'logic', 'programming', '(', 'ALP', ')', 'form', 'computational', 'logic', '.']

>> Bigrams are: 
 [('In', 'paper'), ('paper', ','), (',', 'I'), ('I', 'focus'), ('focus', 'abductive'), ('abductive', 'logic'), ('logic', 'programming'), ('programming', '('), ('(', 'ALP'), ('ALP', ')'), (')', 'form'), ('form', 'computational'), ('computational', 'logic'), ('logic', '.')]

>> Trigrams are: 
 [('In', 'paper', ','), ('paper', ',', 'I'), (',', 'I', 'focus'), ('I', 'focus', 'abductive'), ('focus', 'abductive', 'logic'), ('abductive', 'logic', 'programming'), ('logic', 'programming', '('), ('programming', '(', 'ALP'), ('(', 'ALP', ')'), ('ALP', ')', 'form'), (')', 'form', 'computational'), ('form', 'computational', 'logic'), ('computational', 'logic', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('paper', 'NN'), (',', ','), ('I', 'PRP'), ('focus', 'VBP'), ('abductive', 'JJ'), ('logic', 'NN'), ('programming', 'NN'), ('(', '('), ('ALP', 'NNP'), (')', ')'), ('form', 'VBP'), ('computational', 'JJ'), ('logic', 'NN'), ('.', '.')]

 (S
  In/IN
  (NP paper/NN)
  ,/,
  I/PRP
  focus/VBP
  (NP abductive/JJ logic/NN programming/NN)
  (/(
  (NP ALP/NNP)
  )/)
  form/VBP
  (NP computational/JJ logic/NN)
  ./.) 


>> Noun Phrases are: 
 ['paper', 'abductive logic programming', 'ALP', 'computational logic']

>> Named Entities are: 
 [('ORGANIZATION', 'ALP')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('paper', 'paper'), (',', ','), ('I', 'i'), ('focus', 'focu'), ('abductive', 'abduct'), ('logic', 'logic'), ('programming', 'program'), ('(', '('), ('ALP', 'alp'), (')', ')'), ('form', 'form'), ('computational', 'comput'), ('logic', 'logic'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('paper', 'paper'), (',', ','), ('I', 'i'), ('focus', 'focus'), ('abductive', 'abduct'), ('logic', 'logic'), ('programming', 'program'), ('(', '('), ('ALP', 'alp'), (')', ')'), ('form', 'form'), ('computational', 'comput'), ('logic', 'logic'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('paper', 'paper'), (',', ','), ('I', 'I'), ('focus', 'focus'), ('abductive', 'abductive'), ('logic', 'logic'), ('programming', 'programming'), ('(', '('), ('ALP', 'ALP'), (')', ')'), ('form', 'form'), ('computational', 'computational'), ('logic', 'logic'), ('.', '.')]



============================ Sentence 8 =============================

I will argue that the ALP agent model, which embeds  ALP in an agent cycle, is a powerful model of both descrip- tive and normative thinking. 


>> Tokens are: 
 ['I', 'argue', 'ALP', 'agent', 'model', ',', 'embeds', 'ALP', 'agent', 'cycle', ',', 'powerful', 'model', 'descrip-', 'tive', 'normative', 'thinking', '.']

>> Bigrams are: 
 [('I', 'argue'), ('argue', 'ALP'), ('ALP', 'agent'), ('agent', 'model'), ('model', ','), (',', 'embeds'), ('embeds', 'ALP'), ('ALP', 'agent'), ('agent', 'cycle'), ('cycle', ','), (',', 'powerful'), ('powerful', 'model'), ('model', 'descrip-'), ('descrip-', 'tive'), ('tive', 'normative'), ('normative', 'thinking'), ('thinking', '.')]

>> Trigrams are: 
 [('I', 'argue', 'ALP'), ('argue', 'ALP', 'agent'), ('ALP', 'agent', 'model'), ('agent', 'model', ','), ('model', ',', 'embeds'), (',', 'embeds', 'ALP'), ('embeds', 'ALP', 'agent'), ('ALP', 'agent', 'cycle'), ('agent', 'cycle', ','), ('cycle', ',', 'powerful'), (',', 'powerful', 'model'), ('powerful', 'model', 'descrip-'), ('model', 'descrip-', 'tive'), ('descrip-', 'tive', 'normative'), ('tive', 'normative', 'thinking'), ('normative', 'thinking', '.')]

>> POS Tags are: 
 [('I', 'PRP'), ('argue', 'VBP'), ('ALP', 'NNP'), ('agent', 'NN'), ('model', 'NN'), (',', ','), ('embeds', 'VBZ'), ('ALP', 'NNP'), ('agent', 'NN'), ('cycle', 'NN'), (',', ','), ('powerful', 'JJ'), ('model', 'FW'), ('descrip-', 'JJ'), ('tive', 'JJ'), ('normative', 'JJ'), ('thinking', 'NN'), ('.', '.')]

 (S
  I/PRP
  argue/VBP
  (NP ALP/NNP agent/NN model/NN)
  ,/,
  embeds/VBZ
  (NP ALP/NNP agent/NN cycle/NN)
  ,/,
  powerful/JJ
  model/FW
  (NP descrip-/JJ tive/JJ normative/JJ thinking/NN)
  ./.) 


>> Noun Phrases are: 
 ['ALP agent model', 'ALP agent cycle', 'descrip- tive normative thinking']

>> Named Entities are: 
 [('ORGANIZATION', 'ALP'), ('ORGANIZATION', 'ALP')] 

>> Stemming using Porter Stemmer: 
 [('I', 'i'), ('argue', 'argu'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), (',', ','), ('embeds', 'emb'), ('ALP', 'alp'), ('agent', 'agent'), ('cycle', 'cycl'), (',', ','), ('powerful', 'power'), ('model', 'model'), ('descrip-', 'descrip-'), ('tive', 'tive'), ('normative', 'norm'), ('thinking', 'think'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('I', 'i'), ('argue', 'argu'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), (',', ','), ('embeds', 'emb'), ('ALP', 'alp'), ('agent', 'agent'), ('cycle', 'cycl'), (',', ','), ('powerful', 'power'), ('model', 'model'), ('descrip-', 'descrip-'), ('tive', 'tive'), ('normative', 'normat'), ('thinking', 'think'), ('.', '.')]

>> Lemmatization: 
 [('I', 'I'), ('argue', 'argue'), ('ALP', 'ALP'), ('agent', 'agent'), ('model', 'model'), (',', ','), ('embeds', 'embeds'), ('ALP', 'ALP'), ('agent', 'agent'), ('cycle', 'cycle'), (',', ','), ('powerful', 'powerful'), ('model', 'model'), ('descrip-', 'descrip-'), ('tive', 'tive'), ('normative', 'normative'), ('thinking', 'thinking'), ('.', '.')]



============================ Sentence 9 =============================

As a descriptive model, it in- cludes production systems as a special case; and as a norma- tive model, it includes classical logic and is compatible with  classical decision theory. 


>> Tokens are: 
 ['As', 'descriptive', 'model', ',', 'in-', 'cludes', 'production', 'systems', 'special', 'case', ';', 'norma-', 'tive', 'model', ',', 'includes', 'classical', 'logic', 'compatible', 'classical', 'decision', 'theory', '.']

>> Bigrams are: 
 [('As', 'descriptive'), ('descriptive', 'model'), ('model', ','), (',', 'in-'), ('in-', 'cludes'), ('cludes', 'production'), ('production', 'systems'), ('systems', 'special'), ('special', 'case'), ('case', ';'), (';', 'norma-'), ('norma-', 'tive'), ('tive', 'model'), ('model', ','), (',', 'includes'), ('includes', 'classical'), ('classical', 'logic'), ('logic', 'compatible'), ('compatible', 'classical'), ('classical', 'decision'), ('decision', 'theory'), ('theory', '.')]

>> Trigrams are: 
 [('As', 'descriptive', 'model'), ('descriptive', 'model', ','), ('model', ',', 'in-'), (',', 'in-', 'cludes'), ('in-', 'cludes', 'production'), ('cludes', 'production', 'systems'), ('production', 'systems', 'special'), ('systems', 'special', 'case'), ('special', 'case', ';'), ('case', ';', 'norma-'), (';', 'norma-', 'tive'), ('norma-', 'tive', 'model'), ('tive', 'model', ','), ('model', ',', 'includes'), (',', 'includes', 'classical'), ('includes', 'classical', 'logic'), ('classical', 'logic', 'compatible'), ('logic', 'compatible', 'classical'), ('compatible', 'classical', 'decision'), ('classical', 'decision', 'theory'), ('decision', 'theory', '.')]

>> POS Tags are: 
 [('As', 'IN'), ('descriptive', 'JJ'), ('model', 'NN'), (',', ','), ('in-', 'JJ'), ('cludes', 'NNS'), ('production', 'NN'), ('systems', 'NNS'), ('special', 'JJ'), ('case', 'NN'), (';', ':'), ('norma-', 'JJ'), ('tive', 'JJ'), ('model', 'NN'), (',', ','), ('includes', 'VBZ'), ('classical', 'JJ'), ('logic', 'NN'), ('compatible', 'JJ'), ('classical', 'JJ'), ('decision', 'NN'), ('theory', 'NN'), ('.', '.')]

 (S
  As/IN
  (NP descriptive/JJ model/NN)
  ,/,
  (NP in-/JJ cludes/NNS production/NN systems/NNS)
  (NP special/JJ case/NN)
  ;/:
  (NP norma-/JJ tive/JJ model/NN)
  ,/,
  includes/VBZ
  (NP classical/JJ logic/NN)
  (NP compatible/JJ classical/JJ decision/NN theory/NN)
  ./.) 


>> Noun Phrases are: 
 ['descriptive model', 'in- cludes production systems', 'special case', 'norma- tive model', 'classical logic', 'compatible classical decision theory']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('As', 'as'), ('descriptive', 'descript'), ('model', 'model'), (',', ','), ('in-', 'in-'), ('cludes', 'clude'), ('production', 'product'), ('systems', 'system'), ('special', 'special'), ('case', 'case'), (';', ';'), ('norma-', 'norma-'), ('tive', 'tive'), ('model', 'model'), (',', ','), ('includes', 'includ'), ('classical', 'classic'), ('logic', 'logic'), ('compatible', 'compat'), ('classical', 'classic'), ('decision', 'decis'), ('theory', 'theori'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('As', 'as'), ('descriptive', 'descript'), ('model', 'model'), (',', ','), ('in-', 'in-'), ('cludes', 'clude'), ('production', 'product'), ('systems', 'system'), ('special', 'special'), ('case', 'case'), (';', ';'), ('norma-', 'norma-'), ('tive', 'tive'), ('model', 'model'), (',', ','), ('includes', 'includ'), ('classical', 'classic'), ('logic', 'logic'), ('compatible', 'compat'), ('classical', 'classic'), ('decision', 'decis'), ('theory', 'theori'), ('.', '.')]

>> Lemmatization: 
 [('As', 'As'), ('descriptive', 'descriptive'), ('model', 'model'), (',', ','), ('in-', 'in-'), ('cludes', 'cludes'), ('production', 'production'), ('systems', 'system'), ('special', 'special'), ('case', 'case'), (';', ';'), ('norma-', 'norma-'), ('tive', 'tive'), ('model', 'model'), (',', ','), ('includes', 'includes'), ('classical', 'classical'), ('logic', 'logic'), ('compatible', 'compatible'), ('classical', 'classical'), ('decision', 'decision'), ('theory', 'theory'), ('.', '.')]



============================ Sentence 10 =============================

These descriptive and normative properties of the ALP  agent model make it a dual process theory, which combines  both intuitive and deliberative thinking. 


>> Tokens are: 
 ['These', 'descriptive', 'normative', 'properties', 'ALP', 'agent', 'model', 'make', 'dual', 'process', 'theory', ',', 'combines', 'intuitive', 'deliberative', 'thinking', '.']

>> Bigrams are: 
 [('These', 'descriptive'), ('descriptive', 'normative'), ('normative', 'properties'), ('properties', 'ALP'), ('ALP', 'agent'), ('agent', 'model'), ('model', 'make'), ('make', 'dual'), ('dual', 'process'), ('process', 'theory'), ('theory', ','), (',', 'combines'), ('combines', 'intuitive'), ('intuitive', 'deliberative'), ('deliberative', 'thinking'), ('thinking', '.')]

>> Trigrams are: 
 [('These', 'descriptive', 'normative'), ('descriptive', 'normative', 'properties'), ('normative', 'properties', 'ALP'), ('properties', 'ALP', 'agent'), ('ALP', 'agent', 'model'), ('agent', 'model', 'make'), ('model', 'make', 'dual'), ('make', 'dual', 'process'), ('dual', 'process', 'theory'), ('process', 'theory', ','), ('theory', ',', 'combines'), (',', 'combines', 'intuitive'), ('combines', 'intuitive', 'deliberative'), ('intuitive', 'deliberative', 'thinking'), ('deliberative', 'thinking', '.')]

>> POS Tags are: 
 [('These', 'DT'), ('descriptive', 'JJ'), ('normative', 'NN'), ('properties', 'NNS'), ('ALP', 'NNP'), ('agent', 'NN'), ('model', 'NN'), ('make', 'VBP'), ('dual', 'JJ'), ('process', 'NN'), ('theory', 'NN'), (',', ','), ('combines', 'NNS'), ('intuitive', 'VBP'), ('deliberative', 'JJ'), ('thinking', 'NN'), ('.', '.')]

 (S
  (NP
    These/DT
    descriptive/JJ
    normative/NN
    properties/NNS
    ALP/NNP
    agent/NN
    model/NN)
  make/VBP
  (NP dual/JJ process/NN theory/NN)
  ,/,
  (NP combines/NNS)
  intuitive/VBP
  (NP deliberative/JJ thinking/NN)
  ./.) 


>> Noun Phrases are: 
 ['These descriptive normative properties ALP agent model', 'dual process theory', 'combines', 'deliberative thinking']

>> Named Entities are: 
 [('ORGANIZATION', 'ALP')] 

>> Stemming using Porter Stemmer: 
 [('These', 'these'), ('descriptive', 'descript'), ('normative', 'norm'), ('properties', 'properti'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), ('make', 'make'), ('dual', 'dual'), ('process', 'process'), ('theory', 'theori'), (',', ','), ('combines', 'combin'), ('intuitive', 'intuit'), ('deliberative', 'delib'), ('thinking', 'think'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('These', 'these'), ('descriptive', 'descript'), ('normative', 'normat'), ('properties', 'properti'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), ('make', 'make'), ('dual', 'dual'), ('process', 'process'), ('theory', 'theori'), (',', ','), ('combines', 'combin'), ('intuitive', 'intuit'), ('deliberative', 'delib'), ('thinking', 'think'), ('.', '.')]

>> Lemmatization: 
 [('These', 'These'), ('descriptive', 'descriptive'), ('normative', 'normative'), ('properties', 'property'), ('ALP', 'ALP'), ('agent', 'agent'), ('model', 'model'), ('make', 'make'), ('dual', 'dual'), ('process', 'process'), ('theory', 'theory'), (',', ','), ('combines', 'combine'), ('intuitive', 'intuitive'), ('deliberative', 'deliberative'), ('thinking', 'thinking'), ('.', '.')]



============================ Sentence 11 =============================

Like most theories,  dual process theories also come in many forms. 


>> Tokens are: 
 ['Like', 'theories', ',', 'dual', 'process', 'theories', 'also', 'come', 'many', 'forms', '.']

>> Bigrams are: 
 [('Like', 'theories'), ('theories', ','), (',', 'dual'), ('dual', 'process'), ('process', 'theories'), ('theories', 'also'), ('also', 'come'), ('come', 'many'), ('many', 'forms'), ('forms', '.')]

>> Trigrams are: 
 [('Like', 'theories', ','), ('theories', ',', 'dual'), (',', 'dual', 'process'), ('dual', 'process', 'theories'), ('process', 'theories', 'also'), ('theories', 'also', 'come'), ('also', 'come', 'many'), ('come', 'many', 'forms'), ('many', 'forms', '.')]

>> POS Tags are: 
 [('Like', 'IN'), ('theories', 'NNS'), (',', ','), ('dual', 'JJ'), ('process', 'NN'), ('theories', 'NNS'), ('also', 'RB'), ('come', 'VBP'), ('many', 'JJ'), ('forms', 'NNS'), ('.', '.')]

 (S
  Like/IN
  (NP theories/NNS)
  ,/,
  (NP dual/JJ process/NN theories/NNS)
  also/RB
  come/VBP
  (NP many/JJ forms/NNS)
  ./.) 


>> Noun Phrases are: 
 ['theories', 'dual process theories', 'many forms']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Like', 'like'), ('theories', 'theori'), (',', ','), ('dual', 'dual'), ('process', 'process'), ('theories', 'theori'), ('also', 'also'), ('come', 'come'), ('many', 'mani'), ('forms', 'form'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Like', 'like'), ('theories', 'theori'), (',', ','), ('dual', 'dual'), ('process', 'process'), ('theories', 'theori'), ('also', 'also'), ('come', 'come'), ('many', 'mani'), ('forms', 'form'), ('.', '.')]

>> Lemmatization: 
 [('Like', 'Like'), ('theories', 'theory'), (',', ','), ('dual', 'dual'), ('process', 'process'), ('theories', 'theory'), ('also', 'also'), ('come', 'come'), ('many', 'many'), ('forms', 'form'), ('.', '.')]



============================ Sentence 12 =============================

But in one  form, as Kahneman and Frederick [2002] put it, intuitive  thinking “quickly proposes intuitive answers to judgement  problems as they arise”, while deliberative thinking “moni- tors the quality of these proposals, which it may endorse,  correct, or override”. 


>> Tokens are: 
 ['But', 'one', 'form', ',', 'Kahneman', 'Frederick', '[', '2002', ']', 'put', ',', 'intuitive', 'thinking', '“', 'quickly', 'proposes', 'intuitive', 'answers', 'judgement', 'problems', 'arise', '”', ',', 'deliberative', 'thinking', '“', 'moni-', 'tors', 'quality', 'proposals', ',', 'may', 'endorse', ',', 'correct', ',', 'override', '”', '.']

>> Bigrams are: 
 [('But', 'one'), ('one', 'form'), ('form', ','), (',', 'Kahneman'), ('Kahneman', 'Frederick'), ('Frederick', '['), ('[', '2002'), ('2002', ']'), (']', 'put'), ('put', ','), (',', 'intuitive'), ('intuitive', 'thinking'), ('thinking', '“'), ('“', 'quickly'), ('quickly', 'proposes'), ('proposes', 'intuitive'), ('intuitive', 'answers'), ('answers', 'judgement'), ('judgement', 'problems'), ('problems', 'arise'), ('arise', '”'), ('”', ','), (',', 'deliberative'), ('deliberative', 'thinking'), ('thinking', '“'), ('“', 'moni-'), ('moni-', 'tors'), ('tors', 'quality'), ('quality', 'proposals'), ('proposals', ','), (',', 'may'), ('may', 'endorse'), ('endorse', ','), (',', 'correct'), ('correct', ','), (',', 'override'), ('override', '”'), ('”', '.')]

>> Trigrams are: 
 [('But', 'one', 'form'), ('one', 'form', ','), ('form', ',', 'Kahneman'), (',', 'Kahneman', 'Frederick'), ('Kahneman', 'Frederick', '['), ('Frederick', '[', '2002'), ('[', '2002', ']'), ('2002', ']', 'put'), (']', 'put', ','), ('put', ',', 'intuitive'), (',', 'intuitive', 'thinking'), ('intuitive', 'thinking', '“'), ('thinking', '“', 'quickly'), ('“', 'quickly', 'proposes'), ('quickly', 'proposes', 'intuitive'), ('proposes', 'intuitive', 'answers'), ('intuitive', 'answers', 'judgement'), ('answers', 'judgement', 'problems'), ('judgement', 'problems', 'arise'), ('problems', 'arise', '”'), ('arise', '”', ','), ('”', ',', 'deliberative'), (',', 'deliberative', 'thinking'), ('deliberative', 'thinking', '“'), ('thinking', '“', 'moni-'), ('“', 'moni-', 'tors'), ('moni-', 'tors', 'quality'), ('tors', 'quality', 'proposals'), ('quality', 'proposals', ','), ('proposals', ',', 'may'), (',', 'may', 'endorse'), ('may', 'endorse', ','), ('endorse', ',', 'correct'), (',', 'correct', ','), ('correct', ',', 'override'), (',', 'override', '”'), ('override', '”', '.')]

>> POS Tags are: 
 [('But', 'CC'), ('one', 'CD'), ('form', 'NN'), (',', ','), ('Kahneman', 'NNP'), ('Frederick', 'NNP'), ('[', 'NNP'), ('2002', 'CD'), (']', 'NNP'), ('put', 'VBD'), (',', ','), ('intuitive', 'JJ'), ('thinking', 'NN'), ('“', 'JJ'), ('quickly', 'RB'), ('proposes', 'VBZ'), ('intuitive', 'JJ'), ('answers', 'NNS'), ('judgement', 'JJ'), ('problems', 'NNS'), ('arise', 'VBP'), ('”', 'RB'), (',', ','), ('deliberative', 'JJ'), ('thinking', 'NN'), ('“', 'JJ'), ('moni-', 'JJ'), ('tors', 'NNS'), ('quality', 'NN'), ('proposals', 'NNS'), (',', ','), ('may', 'MD'), ('endorse', 'VB'), (',', ','), ('correct', 'VB'), (',', ','), ('override', 'VB'), ('”', 'NNP'), ('.', '.')]

 (S
  But/CC
  one/CD
  (NP form/NN)
  ,/,
  (NP Kahneman/NNP Frederick/NNP [/NNP)
  2002/CD
  (NP ]/NNP)
  put/VBD
  ,/,
  (NP intuitive/JJ thinking/NN)
  “/JJ
  quickly/RB
  proposes/VBZ
  (NP intuitive/JJ answers/NNS)
  (NP judgement/JJ problems/NNS)
  arise/VBP
  ”/RB
  ,/,
  (NP deliberative/JJ thinking/NN)
  (NP “/JJ moni-/JJ tors/NNS quality/NN proposals/NNS)
  ,/,
  may/MD
  endorse/VB
  ,/,
  correct/VB
  ,/,
  override/VB
  (NP ”/NNP)
  ./.) 


>> Noun Phrases are: 
 ['form', 'Kahneman Frederick [', ']', 'intuitive thinking', 'intuitive answers', 'judgement problems', 'deliberative thinking', '“ moni- tors quality proposals', '”']

>> Named Entities are: 
 [('PERSON', 'Kahneman Frederick')] 

>> Stemming using Porter Stemmer: 
 [('But', 'but'), ('one', 'one'), ('form', 'form'), (',', ','), ('Kahneman', 'kahneman'), ('Frederick', 'frederick'), ('[', '['), ('2002', '2002'), (']', ']'), ('put', 'put'), (',', ','), ('intuitive', 'intuit'), ('thinking', 'think'), ('“', '“'), ('quickly', 'quickli'), ('proposes', 'propos'), ('intuitive', 'intuit'), ('answers', 'answer'), ('judgement', 'judgement'), ('problems', 'problem'), ('arise', 'aris'), ('”', '”'), (',', ','), ('deliberative', 'delib'), ('thinking', 'think'), ('“', '“'), ('moni-', 'moni-'), ('tors', 'tor'), ('quality', 'qualiti'), ('proposals', 'propos'), (',', ','), ('may', 'may'), ('endorse', 'endors'), (',', ','), ('correct', 'correct'), (',', ','), ('override', 'overrid'), ('”', '”'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('But', 'but'), ('one', 'one'), ('form', 'form'), (',', ','), ('Kahneman', 'kahneman'), ('Frederick', 'frederick'), ('[', '['), ('2002', '2002'), (']', ']'), ('put', 'put'), (',', ','), ('intuitive', 'intuit'), ('thinking', 'think'), ('“', '“'), ('quickly', 'quick'), ('proposes', 'propos'), ('intuitive', 'intuit'), ('answers', 'answer'), ('judgement', 'judgement'), ('problems', 'problem'), ('arise', 'aris'), ('”', '”'), (',', ','), ('deliberative', 'delib'), ('thinking', 'think'), ('“', '“'), ('moni-', 'moni-'), ('tors', 'tor'), ('quality', 'qualiti'), ('proposals', 'propos'), (',', ','), ('may', 'may'), ('endorse', 'endors'), (',', ','), ('correct', 'correct'), (',', ','), ('override', 'overrid'), ('”', '”'), ('.', '.')]

>> Lemmatization: 
 [('But', 'But'), ('one', 'one'), ('form', 'form'), (',', ','), ('Kahneman', 'Kahneman'), ('Frederick', 'Frederick'), ('[', '['), ('2002', '2002'), (']', ']'), ('put', 'put'), (',', ','), ('intuitive', 'intuitive'), ('thinking', 'thinking'), ('“', '“'), ('quickly', 'quickly'), ('proposes', 'proposes'), ('intuitive', 'intuitive'), ('answers', 'answer'), ('judgement', 'judgement'), ('problems', 'problem'), ('arise', 'arise'), ('”', '”'), (',', ','), ('deliberative', 'deliberative'), ('thinking', 'thinking'), ('“', '“'), ('moni-', 'moni-'), ('tors', 'tor'), ('quality', 'quality'), ('proposals', 'proposal'), (',', ','), ('may', 'may'), ('endorse', 'endorse'), (',', ','), ('correct', 'correct'), (',', ','), ('override', 'override'), ('”', '”'), ('.', '.')]



============================ Sentence 13 =============================

In this paper, I will be concerned mainly with the norma- tive features of the ALP agent model, and on ways in which  it can help us to improve our own human thinking and be- haviour. 


>> Tokens are: 
 ['In', 'paper', ',', 'I', 'concerned', 'mainly', 'norma-', 'tive', 'features', 'ALP', 'agent', 'model', ',', 'ways', 'help', 'us', 'improve', 'human', 'thinking', 'be-', 'haviour', '.']

>> Bigrams are: 
 [('In', 'paper'), ('paper', ','), (',', 'I'), ('I', 'concerned'), ('concerned', 'mainly'), ('mainly', 'norma-'), ('norma-', 'tive'), ('tive', 'features'), ('features', 'ALP'), ('ALP', 'agent'), ('agent', 'model'), ('model', ','), (',', 'ways'), ('ways', 'help'), ('help', 'us'), ('us', 'improve'), ('improve', 'human'), ('human', 'thinking'), ('thinking', 'be-'), ('be-', 'haviour'), ('haviour', '.')]

>> Trigrams are: 
 [('In', 'paper', ','), ('paper', ',', 'I'), (',', 'I', 'concerned'), ('I', 'concerned', 'mainly'), ('concerned', 'mainly', 'norma-'), ('mainly', 'norma-', 'tive'), ('norma-', 'tive', 'features'), ('tive', 'features', 'ALP'), ('features', 'ALP', 'agent'), ('ALP', 'agent', 'model'), ('agent', 'model', ','), ('model', ',', 'ways'), (',', 'ways', 'help'), ('ways', 'help', 'us'), ('help', 'us', 'improve'), ('us', 'improve', 'human'), ('improve', 'human', 'thinking'), ('human', 'thinking', 'be-'), ('thinking', 'be-', 'haviour'), ('be-', 'haviour', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('paper', 'NN'), (',', ','), ('I', 'PRP'), ('concerned', 'VBD'), ('mainly', 'RB'), ('norma-', 'JJ'), ('tive', 'JJ'), ('features', 'NNS'), ('ALP', 'NNP'), ('agent', 'NN'), ('model', 'NN'), (',', ','), ('ways', 'NNS'), ('help', 'VBP'), ('us', 'PRP'), ('improve', 'VB'), ('human', 'JJ'), ('thinking', 'VBG'), ('be-', 'JJ'), ('haviour', 'NN'), ('.', '.')]

 (S
  In/IN
  (NP paper/NN)
  ,/,
  I/PRP
  concerned/VBD
  mainly/RB
  (NP norma-/JJ tive/JJ features/NNS ALP/NNP agent/NN model/NN)
  ,/,
  (NP ways/NNS)
  help/VBP
  us/PRP
  improve/VB
  human/JJ
  thinking/VBG
  (NP be-/JJ haviour/NN)
  ./.) 


>> Noun Phrases are: 
 ['paper', 'norma- tive features ALP agent model', 'ways', 'be- haviour']

>> Named Entities are: 
 [('ORGANIZATION', 'ALP')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('paper', 'paper'), (',', ','), ('I', 'i'), ('concerned', 'concern'), ('mainly', 'mainli'), ('norma-', 'norma-'), ('tive', 'tive'), ('features', 'featur'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), (',', ','), ('ways', 'way'), ('help', 'help'), ('us', 'us'), ('improve', 'improv'), ('human', 'human'), ('thinking', 'think'), ('be-', 'be-'), ('haviour', 'haviour'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('paper', 'paper'), (',', ','), ('I', 'i'), ('concerned', 'concern'), ('mainly', 'main'), ('norma-', 'norma-'), ('tive', 'tive'), ('features', 'featur'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), (',', ','), ('ways', 'way'), ('help', 'help'), ('us', 'us'), ('improve', 'improv'), ('human', 'human'), ('thinking', 'think'), ('be-', 'be-'), ('haviour', 'haviour'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('paper', 'paper'), (',', ','), ('I', 'I'), ('concerned', 'concerned'), ('mainly', 'mainly'), ('norma-', 'norma-'), ('tive', 'tive'), ('features', 'feature'), ('ALP', 'ALP'), ('agent', 'agent'), ('model', 'model'), (',', ','), ('ways', 'way'), ('help', 'help'), ('us', 'u'), ('improve', 'improve'), ('human', 'human'), ('thinking', 'thinking'), ('be-', 'be-'), ('haviour', 'haviour'), ('.', '.')]



============================ Sentence 14 =============================

I will focus, in particular, on ways it can help us  both to communicate more effectively with other people and  to make better decisions in our lives. 


>> Tokens are: 
 ['I', 'focus', ',', 'particular', ',', 'ways', 'help', 'us', 'communicate', 'effectively', 'people', 'make', 'better', 'decisions', 'lives', '.']

>> Bigrams are: 
 [('I', 'focus'), ('focus', ','), (',', 'particular'), ('particular', ','), (',', 'ways'), ('ways', 'help'), ('help', 'us'), ('us', 'communicate'), ('communicate', 'effectively'), ('effectively', 'people'), ('people', 'make'), ('make', 'better'), ('better', 'decisions'), ('decisions', 'lives'), ('lives', '.')]

>> Trigrams are: 
 [('I', 'focus', ','), ('focus', ',', 'particular'), (',', 'particular', ','), ('particular', ',', 'ways'), (',', 'ways', 'help'), ('ways', 'help', 'us'), ('help', 'us', 'communicate'), ('us', 'communicate', 'effectively'), ('communicate', 'effectively', 'people'), ('effectively', 'people', 'make'), ('people', 'make', 'better'), ('make', 'better', 'decisions'), ('better', 'decisions', 'lives'), ('decisions', 'lives', '.')]

>> POS Tags are: 
 [('I', 'PRP'), ('focus', 'VBP'), (',', ','), ('particular', 'JJ'), (',', ','), ('ways', 'NNS'), ('help', 'VBP'), ('us', 'PRP'), ('communicate', 'VB'), ('effectively', 'RB'), ('people', 'NNS'), ('make', 'VBP'), ('better', 'JJR'), ('decisions', 'NNS'), ('lives', 'NNS'), ('.', '.')]

 (S
  I/PRP
  focus/VBP
  ,/,
  particular/JJ
  ,/,
  (NP ways/NNS)
  help/VBP
  us/PRP
  communicate/VB
  effectively/RB
  (NP people/NNS)
  make/VBP
  better/JJR
  (NP decisions/NNS lives/NNS)
  ./.) 


>> Noun Phrases are: 
 ['ways', 'people', 'decisions lives']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('I', 'i'), ('focus', 'focu'), (',', ','), ('particular', 'particular'), (',', ','), ('ways', 'way'), ('help', 'help'), ('us', 'us'), ('communicate', 'commun'), ('effectively', 'effect'), ('people', 'peopl'), ('make', 'make'), ('better', 'better'), ('decisions', 'decis'), ('lives', 'live'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('I', 'i'), ('focus', 'focus'), (',', ','), ('particular', 'particular'), (',', ','), ('ways', 'way'), ('help', 'help'), ('us', 'us'), ('communicate', 'communic'), ('effectively', 'effect'), ('people', 'peopl'), ('make', 'make'), ('better', 'better'), ('decisions', 'decis'), ('lives', 'live'), ('.', '.')]

>> Lemmatization: 
 [('I', 'I'), ('focus', 'focus'), (',', ','), ('particular', 'particular'), (',', ','), ('ways', 'way'), ('help', 'help'), ('us', 'u'), ('communicate', 'communicate'), ('effectively', 'effectively'), ('people', 'people'), ('make', 'make'), ('better', 'better'), ('decisions', 'decision'), ('lives', 'life'), ('.', '.')]



============================ Sentence 15 =============================

I will argue that it pro- vides a theoretical underpinning both for such guidelines on  English writing style as [Williams, 1990, 1995], and for   such advice on better decision-making as [Hammond et al.,  1999]. 


>> Tokens are: 
 ['I', 'argue', 'pro-', 'vides', 'theoretical', 'underpinning', 'guidelines', 'English', 'writing', 'style', '[', 'Williams', ',', '1990', ',', '1995', ']', ',', 'advice', 'better', 'decision-making', '[', 'Hammond', 'et', 'al.', ',', '1999', ']', '.']

>> Bigrams are: 
 [('I', 'argue'), ('argue', 'pro-'), ('pro-', 'vides'), ('vides', 'theoretical'), ('theoretical', 'underpinning'), ('underpinning', 'guidelines'), ('guidelines', 'English'), ('English', 'writing'), ('writing', 'style'), ('style', '['), ('[', 'Williams'), ('Williams', ','), (',', '1990'), ('1990', ','), (',', '1995'), ('1995', ']'), (']', ','), (',', 'advice'), ('advice', 'better'), ('better', 'decision-making'), ('decision-making', '['), ('[', 'Hammond'), ('Hammond', 'et'), ('et', 'al.'), ('al.', ','), (',', '1999'), ('1999', ']'), (']', '.')]

>> Trigrams are: 
 [('I', 'argue', 'pro-'), ('argue', 'pro-', 'vides'), ('pro-', 'vides', 'theoretical'), ('vides', 'theoretical', 'underpinning'), ('theoretical', 'underpinning', 'guidelines'), ('underpinning', 'guidelines', 'English'), ('guidelines', 'English', 'writing'), ('English', 'writing', 'style'), ('writing', 'style', '['), ('style', '[', 'Williams'), ('[', 'Williams', ','), ('Williams', ',', '1990'), (',', '1990', ','), ('1990', ',', '1995'), (',', '1995', ']'), ('1995', ']', ','), (']', ',', 'advice'), (',', 'advice', 'better'), ('advice', 'better', 'decision-making'), ('better', 'decision-making', '['), ('decision-making', '[', 'Hammond'), ('[', 'Hammond', 'et'), ('Hammond', 'et', 'al.'), ('et', 'al.', ','), ('al.', ',', '1999'), (',', '1999', ']'), ('1999', ']', '.')]

>> POS Tags are: 
 [('I', 'PRP'), ('argue', 'VBP'), ('pro-', 'JJ'), ('vides', 'NNS'), ('theoretical', 'JJ'), ('underpinning', 'JJ'), ('guidelines', 'NNS'), ('English', 'JJ'), ('writing', 'VBG'), ('style', 'NN'), ('[', 'NN'), ('Williams', 'NNP'), (',', ','), ('1990', 'CD'), (',', ','), ('1995', 'CD'), (']', 'NN'), (',', ','), ('advice', 'NN'), ('better', 'RBR'), ('decision-making', 'JJ'), ('[', 'JJ'), ('Hammond', 'NNP'), ('et', 'NN'), ('al.', 'NN'), (',', ','), ('1999', 'CD'), (']', 'NN'), ('.', '.')]

 (S
  I/PRP
  argue/VBP
  (NP pro-/JJ vides/NNS)
  (NP theoretical/JJ underpinning/JJ guidelines/NNS)
  English/JJ
  writing/VBG
  (NP style/NN [/NN Williams/NNP)
  ,/,
  1990/CD
  ,/,
  1995/CD
  (NP ]/NN)
  ,/,
  (NP advice/NN)
  better/RBR
  (NP decision-making/JJ [/JJ Hammond/NNP et/NN al./NN)
  ,/,
  1999/CD
  (NP ]/NN)
  ./.) 


>> Noun Phrases are: 
 ['pro- vides', 'theoretical underpinning guidelines', 'style [ Williams', ']', 'advice', 'decision-making [ Hammond et al.', ']']

>> Named Entities are: 
 [('PERSON', 'Williams')] 

>> Stemming using Porter Stemmer: 
 [('I', 'i'), ('argue', 'argu'), ('pro-', 'pro-'), ('vides', 'vide'), ('theoretical', 'theoret'), ('underpinning', 'underpin'), ('guidelines', 'guidelin'), ('English', 'english'), ('writing', 'write'), ('style', 'style'), ('[', '['), ('Williams', 'william'), (',', ','), ('1990', '1990'), (',', ','), ('1995', '1995'), (']', ']'), (',', ','), ('advice', 'advic'), ('better', 'better'), ('decision-making', 'decision-mak'), ('[', '['), ('Hammond', 'hammond'), ('et', 'et'), ('al.', 'al.'), (',', ','), ('1999', '1999'), (']', ']'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('I', 'i'), ('argue', 'argu'), ('pro-', 'pro-'), ('vides', 'vide'), ('theoretical', 'theoret'), ('underpinning', 'underpin'), ('guidelines', 'guidelin'), ('English', 'english'), ('writing', 'write'), ('style', 'style'), ('[', '['), ('Williams', 'william'), (',', ','), ('1990', '1990'), (',', ','), ('1995', '1995'), (']', ']'), (',', ','), ('advice', 'advic'), ('better', 'better'), ('decision-making', 'decision-mak'), ('[', '['), ('Hammond', 'hammond'), ('et', 'et'), ('al.', 'al.'), (',', ','), ('1999', '1999'), (']', ']'), ('.', '.')]

>> Lemmatization: 
 [('I', 'I'), ('argue', 'argue'), ('pro-', 'pro-'), ('vides', 'vides'), ('theoretical', 'theoretical'), ('underpinning', 'underpinning'), ('guidelines', 'guideline'), ('English', 'English'), ('writing', 'writing'), ('style', 'style'), ('[', '['), ('Williams', 'Williams'), (',', ','), ('1990', '1990'), (',', ','), ('1995', '1995'), (']', ']'), (',', ','), ('advice', 'advice'), ('better', 'better'), ('decision-making', 'decision-making'), ('[', '['), ('Hammond', 'Hammond'), ('et', 'et'), ('al.', 'al.'), (',', ','), ('1999', '1999'), (']', ']'), ('.', '.')]



============================ Sentence 16 =============================

This paper is based upon [Kowalski, 2011], which  contains the technical underpinnings of the ALP agent  model, as well as references to related work. 


>> Tokens are: 
 ['This', 'paper', 'based', 'upon', '[', 'Kowalski', ',', '2011', ']', ',', 'contains', 'technical', 'underpinnings', 'ALP', 'agent', 'model', ',', 'well', 'references', 'related', 'work', '.']

>> Bigrams are: 
 [('This', 'paper'), ('paper', 'based'), ('based', 'upon'), ('upon', '['), ('[', 'Kowalski'), ('Kowalski', ','), (',', '2011'), ('2011', ']'), (']', ','), (',', 'contains'), ('contains', 'technical'), ('technical', 'underpinnings'), ('underpinnings', 'ALP'), ('ALP', 'agent'), ('agent', 'model'), ('model', ','), (',', 'well'), ('well', 'references'), ('references', 'related'), ('related', 'work'), ('work', '.')]

>> Trigrams are: 
 [('This', 'paper', 'based'), ('paper', 'based', 'upon'), ('based', 'upon', '['), ('upon', '[', 'Kowalski'), ('[', 'Kowalski', ','), ('Kowalski', ',', '2011'), (',', '2011', ']'), ('2011', ']', ','), (']', ',', 'contains'), (',', 'contains', 'technical'), ('contains', 'technical', 'underpinnings'), ('technical', 'underpinnings', 'ALP'), ('underpinnings', 'ALP', 'agent'), ('ALP', 'agent', 'model'), ('agent', 'model', ','), ('model', ',', 'well'), (',', 'well', 'references'), ('well', 'references', 'related'), ('references', 'related', 'work'), ('related', 'work', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('paper', 'NN'), ('based', 'VBN'), ('upon', 'IN'), ('[', 'NNP'), ('Kowalski', 'NNP'), (',', ','), ('2011', 'CD'), (']', 'NN'), (',', ','), ('contains', 'VBZ'), ('technical', 'JJ'), ('underpinnings', 'NNS'), ('ALP', 'NNP'), ('agent', 'NN'), ('model', 'NN'), (',', ','), ('well', 'RB'), ('references', 'NNS'), ('related', 'JJ'), ('work', 'NN'), ('.', '.')]

 (S
  (NP This/DT paper/NN)
  based/VBN
  upon/IN
  (NP [/NNP Kowalski/NNP)
  ,/,
  2011/CD
  (NP ]/NN)
  ,/,
  contains/VBZ
  (NP technical/JJ underpinnings/NNS ALP/NNP agent/NN model/NN)
  ,/,
  well/RB
  (NP references/NNS)
  (NP related/JJ work/NN)
  ./.) 


>> Noun Phrases are: 
 ['This paper', '[ Kowalski', ']', 'technical underpinnings ALP agent model', 'references', 'related work']

>> Named Entities are: 
 [('ORGANIZATION', 'ALP')] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('paper', 'paper'), ('based', 'base'), ('upon', 'upon'), ('[', '['), ('Kowalski', 'kowalski'), (',', ','), ('2011', '2011'), (']', ']'), (',', ','), ('contains', 'contain'), ('technical', 'technic'), ('underpinnings', 'underpin'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), (',', ','), ('well', 'well'), ('references', 'refer'), ('related', 'relat'), ('work', 'work'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('paper', 'paper'), ('based', 'base'), ('upon', 'upon'), ('[', '['), ('Kowalski', 'kowalski'), (',', ','), ('2011', '2011'), (']', ']'), (',', ','), ('contains', 'contain'), ('technical', 'technic'), ('underpinnings', 'underpin'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), (',', ','), ('well', 'well'), ('references', 'refer'), ('related', 'relat'), ('work', 'work'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('paper', 'paper'), ('based', 'based'), ('upon', 'upon'), ('[', '['), ('Kowalski', 'Kowalski'), (',', ','), ('2011', '2011'), (']', ']'), (',', ','), ('contains', 'contains'), ('technical', 'technical'), ('underpinnings', 'underpinnings'), ('ALP', 'ALP'), ('agent', 'agent'), ('model', 'model'), (',', ','), ('well', 'well'), ('references', 'reference'), ('related', 'related'), ('work', 'work'), ('.', '.')]



============================ Sentence 17 =============================

Figure 1. 


>> Tokens are: 
 ['Figure', '1', '.']

>> Bigrams are: 
 [('Figure', '1'), ('1', '.')]

>> Trigrams are: 
 [('Figure', '1', '.')]

>> POS Tags are: 
 [('Figure', 'NN'), ('1', 'CD'), ('.', '.')]

 (S (NP Figure/NN) 1/CD ./.) 


>> Noun Phrases are: 
 ['Figure']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Figure', 'figur'), ('1', '1'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Figure', 'figur'), ('1', '1'), ('.', '.')]

>> Lemmatization: 
 [('Figure', 'Figure'), ('1', '1'), ('.', '.')]



============================ Sentence 18 =============================

The basic ALP agent cycle    2 A Brief Introduction to ALP Agents   The ALP agent model can be viewed as a variant of the BDI  model, in which agents use their beliefs to satisfy their de- sires by generating intentions, which are selected plans of  actions. 


>> Tokens are: 
 ['The', 'basic', 'ALP', 'agent', 'cycle', '2', 'A', 'Brief', 'Introduction', 'ALP', 'Agents', 'The', 'ALP', 'agent', 'model', 'viewed', 'variant', 'BDI', 'model', ',', 'agents', 'use', 'beliefs', 'satisfy', 'de-', 'sires', 'generating', 'intentions', ',', 'selected', 'plans', 'actions', '.']

>> Bigrams are: 
 [('The', 'basic'), ('basic', 'ALP'), ('ALP', 'agent'), ('agent', 'cycle'), ('cycle', '2'), ('2', 'A'), ('A', 'Brief'), ('Brief', 'Introduction'), ('Introduction', 'ALP'), ('ALP', 'Agents'), ('Agents', 'The'), ('The', 'ALP'), ('ALP', 'agent'), ('agent', 'model'), ('model', 'viewed'), ('viewed', 'variant'), ('variant', 'BDI'), ('BDI', 'model'), ('model', ','), (',', 'agents'), ('agents', 'use'), ('use', 'beliefs'), ('beliefs', 'satisfy'), ('satisfy', 'de-'), ('de-', 'sires'), ('sires', 'generating'), ('generating', 'intentions'), ('intentions', ','), (',', 'selected'), ('selected', 'plans'), ('plans', 'actions'), ('actions', '.')]

>> Trigrams are: 
 [('The', 'basic', 'ALP'), ('basic', 'ALP', 'agent'), ('ALP', 'agent', 'cycle'), ('agent', 'cycle', '2'), ('cycle', '2', 'A'), ('2', 'A', 'Brief'), ('A', 'Brief', 'Introduction'), ('Brief', 'Introduction', 'ALP'), ('Introduction', 'ALP', 'Agents'), ('ALP', 'Agents', 'The'), ('Agents', 'The', 'ALP'), ('The', 'ALP', 'agent'), ('ALP', 'agent', 'model'), ('agent', 'model', 'viewed'), ('model', 'viewed', 'variant'), ('viewed', 'variant', 'BDI'), ('variant', 'BDI', 'model'), ('BDI', 'model', ','), ('model', ',', 'agents'), (',', 'agents', 'use'), ('agents', 'use', 'beliefs'), ('use', 'beliefs', 'satisfy'), ('beliefs', 'satisfy', 'de-'), ('satisfy', 'de-', 'sires'), ('de-', 'sires', 'generating'), ('sires', 'generating', 'intentions'), ('generating', 'intentions', ','), ('intentions', ',', 'selected'), (',', 'selected', 'plans'), ('selected', 'plans', 'actions'), ('plans', 'actions', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('basic', 'JJ'), ('ALP', 'NNP'), ('agent', 'NN'), ('cycle', 'NN'), ('2', 'CD'), ('A', 'NNP'), ('Brief', 'NNP'), ('Introduction', 'NNP'), ('ALP', 'NNP'), ('Agents', 'VBZ'), ('The', 'DT'), ('ALP', 'NNP'), ('agent', 'NN'), ('model', 'NN'), ('viewed', 'VBD'), ('variant', 'JJ'), ('BDI', 'NNP'), ('model', 'NN'), (',', ','), ('agents', 'NNS'), ('use', 'VBP'), ('beliefs', 'JJ'), ('satisfy', 'JJ'), ('de-', 'NN'), ('sires', 'NNS'), ('generating', 'VBG'), ('intentions', 'NNS'), (',', ','), ('selected', 'VBN'), ('plans', 'NNS'), ('actions', 'NNS'), ('.', '.')]

 (S
  (NP The/DT basic/JJ ALP/NNP agent/NN cycle/NN)
  2/CD
  (NP A/NNP Brief/NNP Introduction/NNP ALP/NNP)
  Agents/VBZ
  (NP The/DT ALP/NNP agent/NN model/NN)
  viewed/VBD
  (NP variant/JJ BDI/NNP model/NN)
  ,/,
  (NP agents/NNS)
  use/VBP
  (NP beliefs/JJ satisfy/JJ de-/NN sires/NNS)
  generating/VBG
  (NP intentions/NNS)
  ,/,
  selected/VBN
  (NP plans/NNS actions/NNS)
  ./.) 


>> Noun Phrases are: 
 ['The basic ALP agent cycle', 'A Brief Introduction ALP', 'The ALP agent model', 'variant BDI model', 'agents', 'beliefs satisfy de- sires', 'intentions', 'plans actions']

>> Named Entities are: 
 [('ORGANIZATION', 'ALP'), ('ORGANIZATION', 'ALP'), ('ORGANIZATION', 'BDI')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('basic', 'basic'), ('ALP', 'alp'), ('agent', 'agent'), ('cycle', 'cycl'), ('2', '2'), ('A', 'a'), ('Brief', 'brief'), ('Introduction', 'introduct'), ('ALP', 'alp'), ('Agents', 'agent'), ('The', 'the'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), ('viewed', 'view'), ('variant', 'variant'), ('BDI', 'bdi'), ('model', 'model'), (',', ','), ('agents', 'agent'), ('use', 'use'), ('beliefs', 'belief'), ('satisfy', 'satisfi'), ('de-', 'de-'), ('sires', 'sire'), ('generating', 'gener'), ('intentions', 'intent'), (',', ','), ('selected', 'select'), ('plans', 'plan'), ('actions', 'action'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('basic', 'basic'), ('ALP', 'alp'), ('agent', 'agent'), ('cycle', 'cycl'), ('2', '2'), ('A', 'a'), ('Brief', 'brief'), ('Introduction', 'introduct'), ('ALP', 'alp'), ('Agents', 'agent'), ('The', 'the'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), ('viewed', 'view'), ('variant', 'variant'), ('BDI', 'bdi'), ('model', 'model'), (',', ','), ('agents', 'agent'), ('use', 'use'), ('beliefs', 'belief'), ('satisfy', 'satisfi'), ('de-', 'de-'), ('sires', 'sire'), ('generating', 'generat'), ('intentions', 'intent'), (',', ','), ('selected', 'select'), ('plans', 'plan'), ('actions', 'action'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('basic', 'basic'), ('ALP', 'ALP'), ('agent', 'agent'), ('cycle', 'cycle'), ('2', '2'), ('A', 'A'), ('Brief', 'Brief'), ('Introduction', 'Introduction'), ('ALP', 'ALP'), ('Agents', 'Agents'), ('The', 'The'), ('ALP', 'ALP'), ('agent', 'agent'), ('model', 'model'), ('viewed', 'viewed'), ('variant', 'variant'), ('BDI', 'BDI'), ('model', 'model'), (',', ','), ('agents', 'agent'), ('use', 'use'), ('beliefs', 'belief'), ('satisfy', 'satisfy'), ('de-', 'de-'), ('sires', 'sire'), ('generating', 'generating'), ('intentions', 'intention'), (',', ','), ('selected', 'selected'), ('plans', 'plan'), ('actions', 'action'), ('.', '.')]



============================ Sentence 19 =============================

In ALP agents, beliefs and desires (or goals) are  both represented as conditionals in the clausal form of logic. 


>> Tokens are: 
 ['In', 'ALP', 'agents', ',', 'beliefs', 'desires', '(', 'goals', ')', 'represented', 'conditionals', 'clausal', 'form', 'logic', '.']

>> Bigrams are: 
 [('In', 'ALP'), ('ALP', 'agents'), ('agents', ','), (',', 'beliefs'), ('beliefs', 'desires'), ('desires', '('), ('(', 'goals'), ('goals', ')'), (')', 'represented'), ('represented', 'conditionals'), ('conditionals', 'clausal'), ('clausal', 'form'), ('form', 'logic'), ('logic', '.')]

>> Trigrams are: 
 [('In', 'ALP', 'agents'), ('ALP', 'agents', ','), ('agents', ',', 'beliefs'), (',', 'beliefs', 'desires'), ('beliefs', 'desires', '('), ('desires', '(', 'goals'), ('(', 'goals', ')'), ('goals', ')', 'represented'), (')', 'represented', 'conditionals'), ('represented', 'conditionals', 'clausal'), ('conditionals', 'clausal', 'form'), ('clausal', 'form', 'logic'), ('form', 'logic', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('ALP', 'NNP'), ('agents', 'NNS'), (',', ','), ('beliefs', 'NNS'), ('desires', 'NNS'), ('(', '('), ('goals', 'NNS'), (')', ')'), ('represented', 'VBN'), ('conditionals', 'NNS'), ('clausal', 'JJ'), ('form', 'JJ'), ('logic', 'NN'), ('.', '.')]

 (S
  In/IN
  (NP ALP/NNP agents/NNS)
  ,/,
  (NP beliefs/NNS desires/NNS)
  (/(
  (NP goals/NNS)
  )/)
  represented/VBN
  (NP conditionals/NNS)
  (NP clausal/JJ form/JJ logic/NN)
  ./.) 


>> Noun Phrases are: 
 ['ALP agents', 'beliefs desires', 'goals', 'conditionals', 'clausal form logic']

>> Named Entities are: 
 [('ORGANIZATION', 'ALP')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('ALP', 'alp'), ('agents', 'agent'), (',', ','), ('beliefs', 'belief'), ('desires', 'desir'), ('(', '('), ('goals', 'goal'), (')', ')'), ('represented', 'repres'), ('conditionals', 'condit'), ('clausal', 'clausal'), ('form', 'form'), ('logic', 'logic'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('ALP', 'alp'), ('agents', 'agent'), (',', ','), ('beliefs', 'belief'), ('desires', 'desir'), ('(', '('), ('goals', 'goal'), (')', ')'), ('represented', 'repres'), ('conditionals', 'condit'), ('clausal', 'clausal'), ('form', 'form'), ('logic', 'logic'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('ALP', 'ALP'), ('agents', 'agent'), (',', ','), ('beliefs', 'belief'), ('desires', 'desire'), ('(', '('), ('goals', 'goal'), (')', ')'), ('represented', 'represented'), ('conditionals', 'conditionals'), ('clausal', 'clausal'), ('form', 'form'), ('logic', 'logic'), ('.', '.')]



============================ Sentence 20 =============================

Beliefs are represented as logic programming clauses, and  goals are represented as more general clauses, with the ex- pressive power of full first-order logic (FOL). 


>> Tokens are: 
 ['Beliefs', 'represented', 'logic', 'programming', 'clauses', ',', 'goals', 'represented', 'general', 'clauses', ',', 'ex-', 'pressive', 'power', 'full', 'first-order', 'logic', '(', 'FOL', ')', '.']

>> Bigrams are: 
 [('Beliefs', 'represented'), ('represented', 'logic'), ('logic', 'programming'), ('programming', 'clauses'), ('clauses', ','), (',', 'goals'), ('goals', 'represented'), ('represented', 'general'), ('general', 'clauses'), ('clauses', ','), (',', 'ex-'), ('ex-', 'pressive'), ('pressive', 'power'), ('power', 'full'), ('full', 'first-order'), ('first-order', 'logic'), ('logic', '('), ('(', 'FOL'), ('FOL', ')'), (')', '.')]

>> Trigrams are: 
 [('Beliefs', 'represented', 'logic'), ('represented', 'logic', 'programming'), ('logic', 'programming', 'clauses'), ('programming', 'clauses', ','), ('clauses', ',', 'goals'), (',', 'goals', 'represented'), ('goals', 'represented', 'general'), ('represented', 'general', 'clauses'), ('general', 'clauses', ','), ('clauses', ',', 'ex-'), (',', 'ex-', 'pressive'), ('ex-', 'pressive', 'power'), ('pressive', 'power', 'full'), ('power', 'full', 'first-order'), ('full', 'first-order', 'logic'), ('first-order', 'logic', '('), ('logic', '(', 'FOL'), ('(', 'FOL', ')'), ('FOL', ')', '.')]

>> POS Tags are: 
 [('Beliefs', 'NNP'), ('represented', 'VBD'), ('logic', 'JJ'), ('programming', 'NN'), ('clauses', 'NNS'), (',', ','), ('goals', 'NNS'), ('represented', 'VBD'), ('general', 'JJ'), ('clauses', 'NNS'), (',', ','), ('ex-', 'JJ'), ('pressive', 'JJ'), ('power', 'NN'), ('full', 'JJ'), ('first-order', 'NN'), ('logic', 'NN'), ('(', '('), ('FOL', 'NNP'), (')', ')'), ('.', '.')]

 (S
  (NP Beliefs/NNP)
  represented/VBD
  (NP logic/JJ programming/NN clauses/NNS)
  ,/,
  (NP goals/NNS)
  represented/VBD
  (NP general/JJ clauses/NNS)
  ,/,
  (NP ex-/JJ pressive/JJ power/NN)
  (NP full/JJ first-order/NN logic/NN)
  (/(
  (NP FOL/NNP)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['Beliefs', 'logic programming clauses', 'goals', 'general clauses', 'ex- pressive power', 'full first-order logic', 'FOL']

>> Named Entities are: 
 [('GPE', 'Beliefs'), ('ORGANIZATION', 'FOL')] 

>> Stemming using Porter Stemmer: 
 [('Beliefs', 'belief'), ('represented', 'repres'), ('logic', 'logic'), ('programming', 'program'), ('clauses', 'claus'), (',', ','), ('goals', 'goal'), ('represented', 'repres'), ('general', 'gener'), ('clauses', 'claus'), (',', ','), ('ex-', 'ex-'), ('pressive', 'pressiv'), ('power', 'power'), ('full', 'full'), ('first-order', 'first-ord'), ('logic', 'logic'), ('(', '('), ('FOL', 'fol'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Beliefs', 'belief'), ('represented', 'repres'), ('logic', 'logic'), ('programming', 'program'), ('clauses', 'claus'), (',', ','), ('goals', 'goal'), ('represented', 'repres'), ('general', 'general'), ('clauses', 'claus'), (',', ','), ('ex-', 'ex-'), ('pressive', 'pressiv'), ('power', 'power'), ('full', 'full'), ('first-order', 'first-ord'), ('logic', 'logic'), ('(', '('), ('FOL', 'fol'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('Beliefs', 'Beliefs'), ('represented', 'represented'), ('logic', 'logic'), ('programming', 'programming'), ('clauses', 'clause'), (',', ','), ('goals', 'goal'), ('represented', 'represented'), ('general', 'general'), ('clauses', 'clause'), (',', ','), ('ex-', 'ex-'), ('pressive', 'pressive'), ('power', 'power'), ('full', 'full'), ('first-order', 'first-order'), ('logic', 'logic'), ('(', '('), ('FOL', 'FOL'), (')', ')'), ('.', '.')]



============================ Sentence 21 =============================

For example,  the first sentence below expresses a goal, and the other four  sentences express beliefs:     If there is an emergency     then I deal with it myself or I get help or I escape. 


>> Tokens are: 
 ['For', 'example', ',', 'first', 'sentence', 'expresses', 'goal', ',', 'four', 'sentences', 'express', 'beliefs', ':', 'If', 'emergency', 'I', 'deal', 'I', 'get', 'help', 'I', 'escape', '.']

>> Bigrams are: 
 [('For', 'example'), ('example', ','), (',', 'first'), ('first', 'sentence'), ('sentence', 'expresses'), ('expresses', 'goal'), ('goal', ','), (',', 'four'), ('four', 'sentences'), ('sentences', 'express'), ('express', 'beliefs'), ('beliefs', ':'), (':', 'If'), ('If', 'emergency'), ('emergency', 'I'), ('I', 'deal'), ('deal', 'I'), ('I', 'get'), ('get', 'help'), ('help', 'I'), ('I', 'escape'), ('escape', '.')]

>> Trigrams are: 
 [('For', 'example', ','), ('example', ',', 'first'), (',', 'first', 'sentence'), ('first', 'sentence', 'expresses'), ('sentence', 'expresses', 'goal'), ('expresses', 'goal', ','), ('goal', ',', 'four'), (',', 'four', 'sentences'), ('four', 'sentences', 'express'), ('sentences', 'express', 'beliefs'), ('express', 'beliefs', ':'), ('beliefs', ':', 'If'), (':', 'If', 'emergency'), ('If', 'emergency', 'I'), ('emergency', 'I', 'deal'), ('I', 'deal', 'I'), ('deal', 'I', 'get'), ('I', 'get', 'help'), ('get', 'help', 'I'), ('help', 'I', 'escape'), ('I', 'escape', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('example', 'NN'), (',', ','), ('first', 'JJ'), ('sentence', 'NN'), ('expresses', 'NNS'), ('goal', 'NN'), (',', ','), ('four', 'CD'), ('sentences', 'NNS'), ('express', 'RB'), ('beliefs', 'NNS'), (':', ':'), ('If', 'IN'), ('emergency', 'NN'), ('I', 'PRP'), ('deal', 'VBP'), ('I', 'PRP'), ('get', 'VBP'), ('help', 'NN'), ('I', 'PRP'), ('escape', 'VBP'), ('.', '.')]

 (S
  For/IN
  (NP example/NN)
  ,/,
  (NP first/JJ sentence/NN expresses/NNS goal/NN)
  ,/,
  four/CD
  (NP sentences/NNS)
  express/RB
  (NP beliefs/NNS)
  :/:
  If/IN
  (NP emergency/NN)
  I/PRP
  deal/VBP
  I/PRP
  get/VBP
  (NP help/NN)
  I/PRP
  escape/VBP
  ./.) 


>> Noun Phrases are: 
 ['example', 'first sentence expresses goal', 'sentences', 'beliefs', 'emergency', 'help']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('first', 'first'), ('sentence', 'sentenc'), ('expresses', 'express'), ('goal', 'goal'), (',', ','), ('four', 'four'), ('sentences', 'sentenc'), ('express', 'express'), ('beliefs', 'belief'), (':', ':'), ('If', 'if'), ('emergency', 'emerg'), ('I', 'i'), ('deal', 'deal'), ('I', 'i'), ('get', 'get'), ('help', 'help'), ('I', 'i'), ('escape', 'escap'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('first', 'first'), ('sentence', 'sentenc'), ('expresses', 'express'), ('goal', 'goal'), (',', ','), ('four', 'four'), ('sentences', 'sentenc'), ('express', 'express'), ('beliefs', 'belief'), (':', ':'), ('If', 'if'), ('emergency', 'emerg'), ('I', 'i'), ('deal', 'deal'), ('I', 'i'), ('get', 'get'), ('help', 'help'), ('I', 'i'), ('escape', 'escap'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('example', 'example'), (',', ','), ('first', 'first'), ('sentence', 'sentence'), ('expresses', 'express'), ('goal', 'goal'), (',', ','), ('four', 'four'), ('sentences', 'sentence'), ('express', 'express'), ('beliefs', 'belief'), (':', ':'), ('If', 'If'), ('emergency', 'emergency'), ('I', 'I'), ('deal', 'deal'), ('I', 'I'), ('get', 'get'), ('help', 'help'), ('I', 'I'), ('escape', 'escape'), ('.', '.')]



============================ Sentence 22 =============================

There is an emergency if there is a fire. 


>> Tokens are: 
 ['There', 'emergency', 'fire', '.']

>> Bigrams are: 
 [('There', 'emergency'), ('emergency', 'fire'), ('fire', '.')]

>> Trigrams are: 
 [('There', 'emergency', 'fire'), ('emergency', 'fire', '.')]

>> POS Tags are: 
 [('There', 'EX'), ('emergency', 'NN'), ('fire', 'NN'), ('.', '.')]

 (S There/EX (NP emergency/NN fire/NN) ./.) 


>> Noun Phrases are: 
 ['emergency fire']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('There', 'there'), ('emergency', 'emerg'), ('fire', 'fire'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('There', 'there'), ('emergency', 'emerg'), ('fire', 'fire'), ('.', '.')]

>> Lemmatization: 
 [('There', 'There'), ('emergency', 'emergency'), ('fire', 'fire'), ('.', '.')]



============================ Sentence 23 =============================

I get help if I am on a train   and I alert the driver of the train. 


>> Tokens are: 
 ['I', 'get', 'help', 'I', 'train', 'I', 'alert', 'driver', 'train', '.']

>> Bigrams are: 
 [('I', 'get'), ('get', 'help'), ('help', 'I'), ('I', 'train'), ('train', 'I'), ('I', 'alert'), ('alert', 'driver'), ('driver', 'train'), ('train', '.')]

>> Trigrams are: 
 [('I', 'get', 'help'), ('get', 'help', 'I'), ('help', 'I', 'train'), ('I', 'train', 'I'), ('train', 'I', 'alert'), ('I', 'alert', 'driver'), ('alert', 'driver', 'train'), ('driver', 'train', '.')]

>> POS Tags are: 
 [('I', 'PRP'), ('get', 'VBP'), ('help', 'NN'), ('I', 'PRP'), ('train', 'VBP'), ('I', 'PRP'), ('alert', 'VBP'), ('driver', 'RB'), ('train', 'NN'), ('.', '.')]

 (S
  I/PRP
  get/VBP
  (NP help/NN)
  I/PRP
  train/VBP
  I/PRP
  alert/VBP
  driver/RB
  (NP train/NN)
  ./.) 


>> Noun Phrases are: 
 ['help', 'train']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('I', 'i'), ('get', 'get'), ('help', 'help'), ('I', 'i'), ('train', 'train'), ('I', 'i'), ('alert', 'alert'), ('driver', 'driver'), ('train', 'train'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('I', 'i'), ('get', 'get'), ('help', 'help'), ('I', 'i'), ('train', 'train'), ('I', 'i'), ('alert', 'alert'), ('driver', 'driver'), ('train', 'train'), ('.', '.')]

>> Lemmatization: 
 [('I', 'I'), ('get', 'get'), ('help', 'help'), ('I', 'I'), ('train', 'train'), ('I', 'I'), ('alert', 'alert'), ('driver', 'driver'), ('train', 'train'), ('.', '.')]



============================ Sentence 24 =============================

I alert the driver of the train if I am on a train and       Forward    reasoning  Forward    reasoning   Backward    reasoning   Conse-  Decide   Maintenance    goal   Achievement    goal   Observe Act  The World   stimulus-response        associations   Forward    reasoning   Artificial Intelligence and Human Thinking   Robert Kowalski  Imperial College London   United Kingdom  rak@doc.ic.ac.uk   11  Proceedings of the Twenty-Second International Joint Conference on Artificial Intelligence    I press the alarm button. 


>> Tokens are: 
 ['I', 'alert', 'driver', 'train', 'I', 'train', 'Forward', 'reasoning', 'Forward', 'reasoning', 'Backward', 'reasoning', 'Conse-', 'Decide', 'Maintenance', 'goal', 'Achievement', 'goal', 'Observe', 'Act', 'The', 'World', 'stimulus-response', 'associations', 'Forward', 'reasoning', 'Artificial', 'Intelligence', 'Human', 'Thinking', 'Robert', 'Kowalski', 'Imperial', 'College', 'London', 'United', 'Kingdom', 'rak', '@', 'doc.ic.ac.uk', '11', 'Proceedings', 'Twenty-Second', 'International', 'Joint', 'Conference', 'Artificial', 'Intelligence', 'I', 'press', 'alarm', 'button', '.']

>> Bigrams are: 
 [('I', 'alert'), ('alert', 'driver'), ('driver', 'train'), ('train', 'I'), ('I', 'train'), ('train', 'Forward'), ('Forward', 'reasoning'), ('reasoning', 'Forward'), ('Forward', 'reasoning'), ('reasoning', 'Backward'), ('Backward', 'reasoning'), ('reasoning', 'Conse-'), ('Conse-', 'Decide'), ('Decide', 'Maintenance'), ('Maintenance', 'goal'), ('goal', 'Achievement'), ('Achievement', 'goal'), ('goal', 'Observe'), ('Observe', 'Act'), ('Act', 'The'), ('The', 'World'), ('World', 'stimulus-response'), ('stimulus-response', 'associations'), ('associations', 'Forward'), ('Forward', 'reasoning'), ('reasoning', 'Artificial'), ('Artificial', 'Intelligence'), ('Intelligence', 'Human'), ('Human', 'Thinking'), ('Thinking', 'Robert'), ('Robert', 'Kowalski'), ('Kowalski', 'Imperial'), ('Imperial', 'College'), ('College', 'London'), ('London', 'United'), ('United', 'Kingdom'), ('Kingdom', 'rak'), ('rak', '@'), ('@', 'doc.ic.ac.uk'), ('doc.ic.ac.uk', '11'), ('11', 'Proceedings'), ('Proceedings', 'Twenty-Second'), ('Twenty-Second', 'International'), ('International', 'Joint'), ('Joint', 'Conference'), ('Conference', 'Artificial'), ('Artificial', 'Intelligence'), ('Intelligence', 'I'), ('I', 'press'), ('press', 'alarm'), ('alarm', 'button'), ('button', '.')]

>> Trigrams are: 
 [('I', 'alert', 'driver'), ('alert', 'driver', 'train'), ('driver', 'train', 'I'), ('train', 'I', 'train'), ('I', 'train', 'Forward'), ('train', 'Forward', 'reasoning'), ('Forward', 'reasoning', 'Forward'), ('reasoning', 'Forward', 'reasoning'), ('Forward', 'reasoning', 'Backward'), ('reasoning', 'Backward', 'reasoning'), ('Backward', 'reasoning', 'Conse-'), ('reasoning', 'Conse-', 'Decide'), ('Conse-', 'Decide', 'Maintenance'), ('Decide', 'Maintenance', 'goal'), ('Maintenance', 'goal', 'Achievement'), ('goal', 'Achievement', 'goal'), ('Achievement', 'goal', 'Observe'), ('goal', 'Observe', 'Act'), ('Observe', 'Act', 'The'), ('Act', 'The', 'World'), ('The', 'World', 'stimulus-response'), ('World', 'stimulus-response', 'associations'), ('stimulus-response', 'associations', 'Forward'), ('associations', 'Forward', 'reasoning'), ('Forward', 'reasoning', 'Artificial'), ('reasoning', 'Artificial', 'Intelligence'), ('Artificial', 'Intelligence', 'Human'), ('Intelligence', 'Human', 'Thinking'), ('Human', 'Thinking', 'Robert'), ('Thinking', 'Robert', 'Kowalski'), ('Robert', 'Kowalski', 'Imperial'), ('Kowalski', 'Imperial', 'College'), ('Imperial', 'College', 'London'), ('College', 'London', 'United'), ('London', 'United', 'Kingdom'), ('United', 'Kingdom', 'rak'), ('Kingdom', 'rak', '@'), ('rak', '@', 'doc.ic.ac.uk'), ('@', 'doc.ic.ac.uk', '11'), ('doc.ic.ac.uk', '11', 'Proceedings'), ('11', 'Proceedings', 'Twenty-Second'), ('Proceedings', 'Twenty-Second', 'International'), ('Twenty-Second', 'International', 'Joint'), ('International', 'Joint', 'Conference'), ('Joint', 'Conference', 'Artificial'), ('Conference', 'Artificial', 'Intelligence'), ('Artificial', 'Intelligence', 'I'), ('Intelligence', 'I', 'press'), ('I', 'press', 'alarm'), ('press', 'alarm', 'button'), ('alarm', 'button', '.')]

>> POS Tags are: 
 [('I', 'PRP'), ('alert', 'VBP'), ('driver', 'RB'), ('train', 'VBP'), ('I', 'PRP'), ('train', 'VBP'), ('Forward', 'RB'), ('reasoning', 'VBG'), ('Forward', 'NNP'), ('reasoning', 'VBG'), ('Backward', 'NNP'), ('reasoning', 'VBG'), ('Conse-', 'NNP'), ('Decide', 'NNP'), ('Maintenance', 'NNP'), ('goal', 'NN'), ('Achievement', 'NNP'), ('goal', 'NN'), ('Observe', 'NNP'), ('Act', 'NNP'), ('The', 'DT'), ('World', 'NNP'), ('stimulus-response', 'JJ'), ('associations', 'NNS'), ('Forward', 'NNP'), ('reasoning', 'VBG'), ('Artificial', 'NNP'), ('Intelligence', 'NNP'), ('Human', 'NNP'), ('Thinking', 'NNP'), ('Robert', 'NNP'), ('Kowalski', 'NNP'), ('Imperial', 'NNP'), ('College', 'NNP'), ('London', 'NNP'), ('United', 'NNP'), ('Kingdom', 'NNP'), ('rak', 'NN'), ('@', 'NNP'), ('doc.ic.ac.uk', 'VBZ'), ('11', 'CD'), ('Proceedings', 'NNP'), ('Twenty-Second', 'NNP'), ('International', 'NNP'), ('Joint', 'NNP'), ('Conference', 'NNP'), ('Artificial', 'NNP'), ('Intelligence', 'NNP'), ('I', 'PRP'), ('press', 'VBP'), ('alarm', 'JJ'), ('button', 'NN'), ('.', '.')]

 (S
  I/PRP
  alert/VBP
  driver/RB
  train/VBP
  I/PRP
  train/VBP
  Forward/RB
  reasoning/VBG
  (NP Forward/NNP)
  reasoning/VBG
  (NP Backward/NNP)
  reasoning/VBG
  (NP
    Conse-/NNP
    Decide/NNP
    Maintenance/NNP
    goal/NN
    Achievement/NNP
    goal/NN
    Observe/NNP
    Act/NNP)
  (NP The/DT World/NNP)
  (NP stimulus-response/JJ associations/NNS Forward/NNP)
  reasoning/VBG
  (NP
    Artificial/NNP
    Intelligence/NNP
    Human/NNP
    Thinking/NNP
    Robert/NNP
    Kowalski/NNP
    Imperial/NNP
    College/NNP
    London/NNP
    United/NNP
    Kingdom/NNP
    rak/NN
    @/NNP)
  doc.ic.ac.uk/VBZ
  11/CD
  (NP
    Proceedings/NNP
    Twenty-Second/NNP
    International/NNP
    Joint/NNP
    Conference/NNP
    Artificial/NNP
    Intelligence/NNP)
  I/PRP
  press/VBP
  (NP alarm/JJ button/NN)
  ./.) 


>> Noun Phrases are: 
 ['Forward', 'Backward', 'Conse- Decide Maintenance goal Achievement goal Observe Act', 'The World', 'stimulus-response associations Forward', 'Artificial Intelligence Human Thinking Robert Kowalski Imperial College London United Kingdom rak @', 'Proceedings Twenty-Second International Joint Conference Artificial Intelligence', 'alarm button']

>> Named Entities are: 
 [('ORGANIZATION', 'Forward'), ('PERSON', 'Backward'), ('PERSON', 'Observe Act'), ('ORGANIZATION', 'Artificial Intelligence'), ('PERSON', 'Robert Kowalski Imperial College London United Kingdom'), ('ORGANIZATION', 'International Joint Conference Artificial')] 

>> Stemming using Porter Stemmer: 
 [('I', 'i'), ('alert', 'alert'), ('driver', 'driver'), ('train', 'train'), ('I', 'i'), ('train', 'train'), ('Forward', 'forward'), ('reasoning', 'reason'), ('Forward', 'forward'), ('reasoning', 'reason'), ('Backward', 'backward'), ('reasoning', 'reason'), ('Conse-', 'conse-'), ('Decide', 'decid'), ('Maintenance', 'mainten'), ('goal', 'goal'), ('Achievement', 'achiev'), ('goal', 'goal'), ('Observe', 'observ'), ('Act', 'act'), ('The', 'the'), ('World', 'world'), ('stimulus-response', 'stimulus-respons'), ('associations', 'associ'), ('Forward', 'forward'), ('reasoning', 'reason'), ('Artificial', 'artifici'), ('Intelligence', 'intellig'), ('Human', 'human'), ('Thinking', 'think'), ('Robert', 'robert'), ('Kowalski', 'kowalski'), ('Imperial', 'imperi'), ('College', 'colleg'), ('London', 'london'), ('United', 'unit'), ('Kingdom', 'kingdom'), ('rak', 'rak'), ('@', '@'), ('doc.ic.ac.uk', 'doc.ic.ac.uk'), ('11', '11'), ('Proceedings', 'proceed'), ('Twenty-Second', 'twenty-second'), ('International', 'intern'), ('Joint', 'joint'), ('Conference', 'confer'), ('Artificial', 'artifici'), ('Intelligence', 'intellig'), ('I', 'i'), ('press', 'press'), ('alarm', 'alarm'), ('button', 'button'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('I', 'i'), ('alert', 'alert'), ('driver', 'driver'), ('train', 'train'), ('I', 'i'), ('train', 'train'), ('Forward', 'forward'), ('reasoning', 'reason'), ('Forward', 'forward'), ('reasoning', 'reason'), ('Backward', 'backward'), ('reasoning', 'reason'), ('Conse-', 'conse-'), ('Decide', 'decid'), ('Maintenance', 'mainten'), ('goal', 'goal'), ('Achievement', 'achiev'), ('goal', 'goal'), ('Observe', 'observ'), ('Act', 'act'), ('The', 'the'), ('World', 'world'), ('stimulus-response', 'stimulus-respons'), ('associations', 'associ'), ('Forward', 'forward'), ('reasoning', 'reason'), ('Artificial', 'artifici'), ('Intelligence', 'intellig'), ('Human', 'human'), ('Thinking', 'think'), ('Robert', 'robert'), ('Kowalski', 'kowalski'), ('Imperial', 'imperi'), ('College', 'colleg'), ('London', 'london'), ('United', 'unit'), ('Kingdom', 'kingdom'), ('rak', 'rak'), ('@', '@'), ('doc.ic.ac.uk', 'doc.ic.ac.uk'), ('11', '11'), ('Proceedings', 'proceed'), ('Twenty-Second', 'twenty-second'), ('International', 'intern'), ('Joint', 'joint'), ('Conference', 'confer'), ('Artificial', 'artifici'), ('Intelligence', 'intellig'), ('I', 'i'), ('press', 'press'), ('alarm', 'alarm'), ('button', 'button'), ('.', '.')]

>> Lemmatization: 
 [('I', 'I'), ('alert', 'alert'), ('driver', 'driver'), ('train', 'train'), ('I', 'I'), ('train', 'train'), ('Forward', 'Forward'), ('reasoning', 'reasoning'), ('Forward', 'Forward'), ('reasoning', 'reasoning'), ('Backward', 'Backward'), ('reasoning', 'reasoning'), ('Conse-', 'Conse-'), ('Decide', 'Decide'), ('Maintenance', 'Maintenance'), ('goal', 'goal'), ('Achievement', 'Achievement'), ('goal', 'goal'), ('Observe', 'Observe'), ('Act', 'Act'), ('The', 'The'), ('World', 'World'), ('stimulus-response', 'stimulus-response'), ('associations', 'association'), ('Forward', 'Forward'), ('reasoning', 'reasoning'), ('Artificial', 'Artificial'), ('Intelligence', 'Intelligence'), ('Human', 'Human'), ('Thinking', 'Thinking'), ('Robert', 'Robert'), ('Kowalski', 'Kowalski'), ('Imperial', 'Imperial'), ('College', 'College'), ('London', 'London'), ('United', 'United'), ('Kingdom', 'Kingdom'), ('rak', 'rak'), ('@', '@'), ('doc.ic.ac.uk', 'doc.ic.ac.uk'), ('11', '11'), ('Proceedings', 'Proceedings'), ('Twenty-Second', 'Twenty-Second'), ('International', 'International'), ('Joint', 'Joint'), ('Conference', 'Conference'), ('Artificial', 'Artificial'), ('Intelligence', 'Intelligence'), ('I', 'I'), ('press', 'press'), ('alarm', 'alarm'), ('button', 'button'), ('.', '.')]



============================ Sentence 25 =============================

I am on a train. 


>> Tokens are: 
 ['I', 'train', '.']

>> Bigrams are: 
 [('I', 'train'), ('train', '.')]

>> Trigrams are: 
 [('I', 'train', '.')]

>> POS Tags are: 
 [('I', 'PRP'), ('train', 'VBP'), ('.', '.')]

 (S I/PRP train/VBP ./.) 


>> Noun Phrases are: 
 []

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('I', 'i'), ('train', 'train'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('I', 'i'), ('train', 'train'), ('.', '.')]

>> Lemmatization: 
 [('I', 'I'), ('train', 'train'), ('.', '.')]



============================ Sentence 26 =============================

In this paper, goals are written conditions first, because, like  production rules, they are always used to reason forwards. 


>> Tokens are: 
 ['In', 'paper', ',', 'goals', 'written', 'conditions', 'first', ',', ',', 'like', 'production', 'rules', ',', 'always', 'used', 'reason', 'forwards', '.']

>> Bigrams are: 
 [('In', 'paper'), ('paper', ','), (',', 'goals'), ('goals', 'written'), ('written', 'conditions'), ('conditions', 'first'), ('first', ','), (',', ','), (',', 'like'), ('like', 'production'), ('production', 'rules'), ('rules', ','), (',', 'always'), ('always', 'used'), ('used', 'reason'), ('reason', 'forwards'), ('forwards', '.')]

>> Trigrams are: 
 [('In', 'paper', ','), ('paper', ',', 'goals'), (',', 'goals', 'written'), ('goals', 'written', 'conditions'), ('written', 'conditions', 'first'), ('conditions', 'first', ','), ('first', ',', ','), (',', ',', 'like'), (',', 'like', 'production'), ('like', 'production', 'rules'), ('production', 'rules', ','), ('rules', ',', 'always'), (',', 'always', 'used'), ('always', 'used', 'reason'), ('used', 'reason', 'forwards'), ('reason', 'forwards', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('paper', 'NN'), (',', ','), ('goals', 'NNS'), ('written', 'VBN'), ('conditions', 'NNS'), ('first', 'RB'), (',', ','), (',', ','), ('like', 'IN'), ('production', 'NN'), ('rules', 'NNS'), (',', ','), ('always', 'RB'), ('used', 'VBD'), ('reason', 'NN'), ('forwards', 'NNS'), ('.', '.')]

 (S
  In/IN
  (NP paper/NN)
  ,/,
  (NP goals/NNS)
  written/VBN
  (NP conditions/NNS)
  first/RB
  ,/,
  ,/,
  like/IN
  (NP production/NN rules/NNS)
  ,/,
  always/RB
  used/VBD
  (NP reason/NN forwards/NNS)
  ./.) 


>> Noun Phrases are: 
 ['paper', 'goals', 'conditions', 'production rules', 'reason forwards']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('paper', 'paper'), (',', ','), ('goals', 'goal'), ('written', 'written'), ('conditions', 'condit'), ('first', 'first'), (',', ','), (',', ','), ('like', 'like'), ('production', 'product'), ('rules', 'rule'), (',', ','), ('always', 'alway'), ('used', 'use'), ('reason', 'reason'), ('forwards', 'forward'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('paper', 'paper'), (',', ','), ('goals', 'goal'), ('written', 'written'), ('conditions', 'condit'), ('first', 'first'), (',', ','), (',', ','), ('like', 'like'), ('production', 'product'), ('rules', 'rule'), (',', ','), ('always', 'alway'), ('used', 'use'), ('reason', 'reason'), ('forwards', 'forward'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('paper', 'paper'), (',', ','), ('goals', 'goal'), ('written', 'written'), ('conditions', 'condition'), ('first', 'first'), (',', ','), (',', ','), ('like', 'like'), ('production', 'production'), ('rules', 'rule'), (',', ','), ('always', 'always'), ('used', 'used'), ('reason', 'reason'), ('forwards', 'forward'), ('.', '.')]



============================ Sentence 27 =============================

Beliefs are usually written conclusion first, because, like  logic programs, they are usually used to reason backwards. 


>> Tokens are: 
 ['Beliefs', 'usually', 'written', 'conclusion', 'first', ',', ',', 'like', 'logic', 'programs', ',', 'usually', 'used', 'reason', 'backwards', '.']

>> Bigrams are: 
 [('Beliefs', 'usually'), ('usually', 'written'), ('written', 'conclusion'), ('conclusion', 'first'), ('first', ','), (',', ','), (',', 'like'), ('like', 'logic'), ('logic', 'programs'), ('programs', ','), (',', 'usually'), ('usually', 'used'), ('used', 'reason'), ('reason', 'backwards'), ('backwards', '.')]

>> Trigrams are: 
 [('Beliefs', 'usually', 'written'), ('usually', 'written', 'conclusion'), ('written', 'conclusion', 'first'), ('conclusion', 'first', ','), ('first', ',', ','), (',', ',', 'like'), (',', 'like', 'logic'), ('like', 'logic', 'programs'), ('logic', 'programs', ','), ('programs', ',', 'usually'), (',', 'usually', 'used'), ('usually', 'used', 'reason'), ('used', 'reason', 'backwards'), ('reason', 'backwards', '.')]

>> POS Tags are: 
 [('Beliefs', 'NNP'), ('usually', 'RB'), ('written', 'VBN'), ('conclusion', 'NN'), ('first', 'RB'), (',', ','), (',', ','), ('like', 'IN'), ('logic', 'JJ'), ('programs', 'NNS'), (',', ','), ('usually', 'RB'), ('used', 'VBN'), ('reason', 'NN'), ('backwards', 'NNS'), ('.', '.')]

 (S
  (NP Beliefs/NNP)
  usually/RB
  written/VBN
  (NP conclusion/NN)
  first/RB
  ,/,
  ,/,
  like/IN
  (NP logic/JJ programs/NNS)
  ,/,
  usually/RB
  used/VBN
  (NP reason/NN backwards/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Beliefs', 'conclusion', 'logic programs', 'reason backwards']

>> Named Entities are: 
 [('GPE', 'Beliefs')] 

>> Stemming using Porter Stemmer: 
 [('Beliefs', 'belief'), ('usually', 'usual'), ('written', 'written'), ('conclusion', 'conclus'), ('first', 'first'), (',', ','), (',', ','), ('like', 'like'), ('logic', 'logic'), ('programs', 'program'), (',', ','), ('usually', 'usual'), ('used', 'use'), ('reason', 'reason'), ('backwards', 'backward'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Beliefs', 'belief'), ('usually', 'usual'), ('written', 'written'), ('conclusion', 'conclus'), ('first', 'first'), (',', ','), (',', ','), ('like', 'like'), ('logic', 'logic'), ('programs', 'program'), (',', ','), ('usually', 'usual'), ('used', 'use'), ('reason', 'reason'), ('backwards', 'backward'), ('.', '.')]

>> Lemmatization: 
 [('Beliefs', 'Beliefs'), ('usually', 'usually'), ('written', 'written'), ('conclusion', 'conclusion'), ('first', 'first'), (',', ','), (',', ','), ('like', 'like'), ('logic', 'logic'), ('programs', 'program'), (',', ','), ('usually', 'usually'), ('used', 'used'), ('reason', 'reason'), ('backwards', 'backwards'), ('.', '.')]



============================ Sentence 28 =============================

But beliefs are sometimes written conditions first, because  in ALP they can be used to reason backwards or forwards. 


>> Tokens are: 
 ['But', 'beliefs', 'sometimes', 'written', 'conditions', 'first', ',', 'ALP', 'used', 'reason', 'backwards', 'forwards', '.']

>> Bigrams are: 
 [('But', 'beliefs'), ('beliefs', 'sometimes'), ('sometimes', 'written'), ('written', 'conditions'), ('conditions', 'first'), ('first', ','), (',', 'ALP'), ('ALP', 'used'), ('used', 'reason'), ('reason', 'backwards'), ('backwards', 'forwards'), ('forwards', '.')]

>> Trigrams are: 
 [('But', 'beliefs', 'sometimes'), ('beliefs', 'sometimes', 'written'), ('sometimes', 'written', 'conditions'), ('written', 'conditions', 'first'), ('conditions', 'first', ','), ('first', ',', 'ALP'), (',', 'ALP', 'used'), ('ALP', 'used', 'reason'), ('used', 'reason', 'backwards'), ('reason', 'backwards', 'forwards'), ('backwards', 'forwards', '.')]

>> POS Tags are: 
 [('But', 'CC'), ('beliefs', 'NNS'), ('sometimes', 'RB'), ('written', 'VBN'), ('conditions', 'NNS'), ('first', 'RB'), (',', ','), ('ALP', 'NNP'), ('used', 'VBD'), ('reason', 'NN'), ('backwards', 'NNS'), ('forwards', 'NNS'), ('.', '.')]

 (S
  But/CC
  (NP beliefs/NNS)
  sometimes/RB
  written/VBN
  (NP conditions/NNS)
  first/RB
  ,/,
  (NP ALP/NNP)
  used/VBD
  (NP reason/NN backwards/NNS forwards/NNS)
  ./.) 


>> Noun Phrases are: 
 ['beliefs', 'conditions', 'ALP', 'reason backwards forwards']

>> Named Entities are: 
 [('ORGANIZATION', 'ALP')] 

>> Stemming using Porter Stemmer: 
 [('But', 'but'), ('beliefs', 'belief'), ('sometimes', 'sometim'), ('written', 'written'), ('conditions', 'condit'), ('first', 'first'), (',', ','), ('ALP', 'alp'), ('used', 'use'), ('reason', 'reason'), ('backwards', 'backward'), ('forwards', 'forward'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('But', 'but'), ('beliefs', 'belief'), ('sometimes', 'sometim'), ('written', 'written'), ('conditions', 'condit'), ('first', 'first'), (',', ','), ('ALP', 'alp'), ('used', 'use'), ('reason', 'reason'), ('backwards', 'backward'), ('forwards', 'forward'), ('.', '.')]

>> Lemmatization: 
 [('But', 'But'), ('beliefs', 'belief'), ('sometimes', 'sometimes'), ('written', 'written'), ('conditions', 'condition'), ('first', 'first'), (',', ','), ('ALP', 'ALP'), ('used', 'used'), ('reason', 'reason'), ('backwards', 'backwards'), ('forwards', 'forward'), ('.', '.')]



============================ Sentence 29 =============================

In the semantics, it does not matter whether conditionals of  any kind are written forwards or backwards. 


>> Tokens are: 
 ['In', 'semantics', ',', 'matter', 'whether', 'conditionals', 'kind', 'written', 'forwards', 'backwards', '.']

>> Bigrams are: 
 [('In', 'semantics'), ('semantics', ','), (',', 'matter'), ('matter', 'whether'), ('whether', 'conditionals'), ('conditionals', 'kind'), ('kind', 'written'), ('written', 'forwards'), ('forwards', 'backwards'), ('backwards', '.')]

>> Trigrams are: 
 [('In', 'semantics', ','), ('semantics', ',', 'matter'), (',', 'matter', 'whether'), ('matter', 'whether', 'conditionals'), ('whether', 'conditionals', 'kind'), ('conditionals', 'kind', 'written'), ('kind', 'written', 'forwards'), ('written', 'forwards', 'backwards'), ('forwards', 'backwards', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('semantics', 'NNS'), (',', ','), ('matter', 'NN'), ('whether', 'IN'), ('conditionals', 'NNS'), ('kind', 'NN'), ('written', 'VBN'), ('forwards', 'NNS'), ('backwards', 'NNS'), ('.', '.')]

 (S
  In/IN
  (NP semantics/NNS)
  ,/,
  (NP matter/NN)
  whether/IN
  (NP conditionals/NNS kind/NN)
  written/VBN
  (NP forwards/NNS backwards/NNS)
  ./.) 


>> Noun Phrases are: 
 ['semantics', 'matter', 'conditionals kind', 'forwards backwards']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('semantics', 'semant'), (',', ','), ('matter', 'matter'), ('whether', 'whether'), ('conditionals', 'condit'), ('kind', 'kind'), ('written', 'written'), ('forwards', 'forward'), ('backwards', 'backward'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('semantics', 'semant'), (',', ','), ('matter', 'matter'), ('whether', 'whether'), ('conditionals', 'condit'), ('kind', 'kind'), ('written', 'written'), ('forwards', 'forward'), ('backwards', 'backward'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('semantics', 'semantics'), (',', ','), ('matter', 'matter'), ('whether', 'whether'), ('conditionals', 'conditionals'), ('kind', 'kind'), ('written', 'written'), ('forwards', 'forward'), ('backwards', 'backwards'), ('.', '.')]



============================ Sentence 30 =============================

2.1 Model-theoretic and Operational Semantics   Informally speaking, in the semantics of ALP agents, beliefs  describe the world as the agent sees it, and goals describe  the world as the agent would like it to be. 


>> Tokens are: 
 ['2.1', 'Model-theoretic', 'Operational', 'Semantics', 'Informally', 'speaking', ',', 'semantics', 'ALP', 'agents', ',', 'beliefs', 'describe', 'world', 'agent', 'sees', ',', 'goals', 'describe', 'world', 'agent', 'would', 'like', '.']

>> Bigrams are: 
 [('2.1', 'Model-theoretic'), ('Model-theoretic', 'Operational'), ('Operational', 'Semantics'), ('Semantics', 'Informally'), ('Informally', 'speaking'), ('speaking', ','), (',', 'semantics'), ('semantics', 'ALP'), ('ALP', 'agents'), ('agents', ','), (',', 'beliefs'), ('beliefs', 'describe'), ('describe', 'world'), ('world', 'agent'), ('agent', 'sees'), ('sees', ','), (',', 'goals'), ('goals', 'describe'), ('describe', 'world'), ('world', 'agent'), ('agent', 'would'), ('would', 'like'), ('like', '.')]

>> Trigrams are: 
 [('2.1', 'Model-theoretic', 'Operational'), ('Model-theoretic', 'Operational', 'Semantics'), ('Operational', 'Semantics', 'Informally'), ('Semantics', 'Informally', 'speaking'), ('Informally', 'speaking', ','), ('speaking', ',', 'semantics'), (',', 'semantics', 'ALP'), ('semantics', 'ALP', 'agents'), ('ALP', 'agents', ','), ('agents', ',', 'beliefs'), (',', 'beliefs', 'describe'), ('beliefs', 'describe', 'world'), ('describe', 'world', 'agent'), ('world', 'agent', 'sees'), ('agent', 'sees', ','), ('sees', ',', 'goals'), (',', 'goals', 'describe'), ('goals', 'describe', 'world'), ('describe', 'world', 'agent'), ('world', 'agent', 'would'), ('agent', 'would', 'like'), ('would', 'like', '.')]

>> POS Tags are: 
 [('2.1', 'CD'), ('Model-theoretic', 'JJ'), ('Operational', 'NNP'), ('Semantics', 'NNP'), ('Informally', 'NNP'), ('speaking', 'NN'), (',', ','), ('semantics', 'NNS'), ('ALP', 'VBP'), ('agents', 'NNS'), (',', ','), ('beliefs', 'NNS'), ('describe', 'VBP'), ('world', 'NN'), ('agent', 'NN'), ('sees', 'NNS'), (',', ','), ('goals', 'NNS'), ('describe', 'VBP'), ('world', 'NN'), ('agent', 'NN'), ('would', 'MD'), ('like', 'VB'), ('.', '.')]

 (S
  2.1/CD
  (NP
    Model-theoretic/JJ
    Operational/NNP
    Semantics/NNP
    Informally/NNP
    speaking/NN)
  ,/,
  (NP semantics/NNS)
  ALP/VBP
  (NP agents/NNS)
  ,/,
  (NP beliefs/NNS)
  describe/VBP
  (NP world/NN agent/NN sees/NNS)
  ,/,
  (NP goals/NNS)
  describe/VBP
  (NP world/NN agent/NN)
  would/MD
  like/VB
  ./.) 


>> Noun Phrases are: 
 ['Model-theoretic Operational Semantics Informally speaking', 'semantics', 'agents', 'beliefs', 'world agent sees', 'goals', 'world agent']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('2.1', '2.1'), ('Model-theoretic', 'model-theoret'), ('Operational', 'oper'), ('Semantics', 'semant'), ('Informally', 'inform'), ('speaking', 'speak'), (',', ','), ('semantics', 'semant'), ('ALP', 'alp'), ('agents', 'agent'), (',', ','), ('beliefs', 'belief'), ('describe', 'describ'), ('world', 'world'), ('agent', 'agent'), ('sees', 'see'), (',', ','), ('goals', 'goal'), ('describe', 'describ'), ('world', 'world'), ('agent', 'agent'), ('would', 'would'), ('like', 'like'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('2.1', '2.1'), ('Model-theoretic', 'model-theoret'), ('Operational', 'oper'), ('Semantics', 'semant'), ('Informally', 'inform'), ('speaking', 'speak'), (',', ','), ('semantics', 'semant'), ('ALP', 'alp'), ('agents', 'agent'), (',', ','), ('beliefs', 'belief'), ('describe', 'describ'), ('world', 'world'), ('agent', 'agent'), ('sees', 'see'), (',', ','), ('goals', 'goal'), ('describe', 'describ'), ('world', 'world'), ('agent', 'agent'), ('would', 'would'), ('like', 'like'), ('.', '.')]

>> Lemmatization: 
 [('2.1', '2.1'), ('Model-theoretic', 'Model-theoretic'), ('Operational', 'Operational'), ('Semantics', 'Semantics'), ('Informally', 'Informally'), ('speaking', 'speaking'), (',', ','), ('semantics', 'semantics'), ('ALP', 'ALP'), ('agents', 'agent'), (',', ','), ('beliefs', 'belief'), ('describe', 'describe'), ('world', 'world'), ('agent', 'agent'), ('sees', 'see'), (',', ','), ('goals', 'goal'), ('describe', 'describe'), ('world', 'world'), ('agent', 'agent'), ('would', 'would'), ('like', 'like'), ('.', '.')]



============================ Sentence 31 =============================

In deductive data- bases, beliefs represent the data, and goals represent data- base queries and integrity constraints. 


>> Tokens are: 
 ['In', 'deductive', 'data-', 'bases', ',', 'beliefs', 'represent', 'data', ',', 'goals', 'represent', 'data-', 'base', 'queries', 'integrity', 'constraints', '.']

>> Bigrams are: 
 [('In', 'deductive'), ('deductive', 'data-'), ('data-', 'bases'), ('bases', ','), (',', 'beliefs'), ('beliefs', 'represent'), ('represent', 'data'), ('data', ','), (',', 'goals'), ('goals', 'represent'), ('represent', 'data-'), ('data-', 'base'), ('base', 'queries'), ('queries', 'integrity'), ('integrity', 'constraints'), ('constraints', '.')]

>> Trigrams are: 
 [('In', 'deductive', 'data-'), ('deductive', 'data-', 'bases'), ('data-', 'bases', ','), ('bases', ',', 'beliefs'), (',', 'beliefs', 'represent'), ('beliefs', 'represent', 'data'), ('represent', 'data', ','), ('data', ',', 'goals'), (',', 'goals', 'represent'), ('goals', 'represent', 'data-'), ('represent', 'data-', 'base'), ('data-', 'base', 'queries'), ('base', 'queries', 'integrity'), ('queries', 'integrity', 'constraints'), ('integrity', 'constraints', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('deductive', 'JJ'), ('data-', 'NN'), ('bases', 'NNS'), (',', ','), ('beliefs', 'JJ'), ('represent', 'NN'), ('data', 'NNS'), (',', ','), ('goals', 'NNS'), ('represent', 'VBP'), ('data-', 'JJ'), ('base', 'NN'), ('queries', 'NNS'), ('integrity', 'NN'), ('constraints', 'NNS'), ('.', '.')]

 (S
  In/IN
  (NP deductive/JJ data-/NN bases/NNS)
  ,/,
  (NP beliefs/JJ represent/NN data/NNS)
  ,/,
  (NP goals/NNS)
  represent/VBP
  (NP data-/JJ base/NN queries/NNS integrity/NN constraints/NNS)
  ./.) 


>> Noun Phrases are: 
 ['deductive data- bases', 'beliefs represent data', 'goals', 'data- base queries integrity constraints']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('deductive', 'deduct'), ('data-', 'data-'), ('bases', 'base'), (',', ','), ('beliefs', 'belief'), ('represent', 'repres'), ('data', 'data'), (',', ','), ('goals', 'goal'), ('represent', 'repres'), ('data-', 'data-'), ('base', 'base'), ('queries', 'queri'), ('integrity', 'integr'), ('constraints', 'constraint'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('deductive', 'deduct'), ('data-', 'data-'), ('bases', 'base'), (',', ','), ('beliefs', 'belief'), ('represent', 'repres'), ('data', 'data'), (',', ','), ('goals', 'goal'), ('represent', 'repres'), ('data-', 'data-'), ('base', 'base'), ('queries', 'queri'), ('integrity', 'integr'), ('constraints', 'constraint'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('deductive', 'deductive'), ('data-', 'data-'), ('bases', 'base'), (',', ','), ('beliefs', 'belief'), ('represent', 'represent'), ('data', 'data'), (',', ','), ('goals', 'goal'), ('represent', 'represent'), ('data-', 'data-'), ('base', 'base'), ('queries', 'query'), ('integrity', 'integrity'), ('constraints', 'constraint'), ('.', '.')]



============================ Sentence 32 =============================

More formally, in the model-theoretic semantics of the  ALP agent model, the task of an agent having beliefs B,  goals G and observations O is to generate a set � of actions  and assumptions about the world such that:      G � O is true in the minimal model  determined by B � �. 


>> Tokens are: 
 ['More', 'formally', ',', 'model-theoretic', 'semantics', 'ALP', 'agent', 'model', ',', 'task', 'agent', 'beliefs', 'B', ',', 'goals', 'G', 'observations', 'O', 'generate', 'set', '�', 'actions', 'assumptions', 'world', ':', 'G', '�', 'O', 'true', 'minimal', 'model', 'determined', 'B', '�', '�', '.']

>> Bigrams are: 
 [('More', 'formally'), ('formally', ','), (',', 'model-theoretic'), ('model-theoretic', 'semantics'), ('semantics', 'ALP'), ('ALP', 'agent'), ('agent', 'model'), ('model', ','), (',', 'task'), ('task', 'agent'), ('agent', 'beliefs'), ('beliefs', 'B'), ('B', ','), (',', 'goals'), ('goals', 'G'), ('G', 'observations'), ('observations', 'O'), ('O', 'generate'), ('generate', 'set'), ('set', '�'), ('�', 'actions'), ('actions', 'assumptions'), ('assumptions', 'world'), ('world', ':'), (':', 'G'), ('G', '�'), ('�', 'O'), ('O', 'true'), ('true', 'minimal'), ('minimal', 'model'), ('model', 'determined'), ('determined', 'B'), ('B', '�'), ('�', '�'), ('�', '.')]

>> Trigrams are: 
 [('More', 'formally', ','), ('formally', ',', 'model-theoretic'), (',', 'model-theoretic', 'semantics'), ('model-theoretic', 'semantics', 'ALP'), ('semantics', 'ALP', 'agent'), ('ALP', 'agent', 'model'), ('agent', 'model', ','), ('model', ',', 'task'), (',', 'task', 'agent'), ('task', 'agent', 'beliefs'), ('agent', 'beliefs', 'B'), ('beliefs', 'B', ','), ('B', ',', 'goals'), (',', 'goals', 'G'), ('goals', 'G', 'observations'), ('G', 'observations', 'O'), ('observations', 'O', 'generate'), ('O', 'generate', 'set'), ('generate', 'set', '�'), ('set', '�', 'actions'), ('�', 'actions', 'assumptions'), ('actions', 'assumptions', 'world'), ('assumptions', 'world', ':'), ('world', ':', 'G'), (':', 'G', '�'), ('G', '�', 'O'), ('�', 'O', 'true'), ('O', 'true', 'minimal'), ('true', 'minimal', 'model'), ('minimal', 'model', 'determined'), ('model', 'determined', 'B'), ('determined', 'B', '�'), ('B', '�', '�'), ('�', '�', '.')]

>> POS Tags are: 
 [('More', 'RBR'), ('formally', 'RB'), (',', ','), ('model-theoretic', 'JJ'), ('semantics', 'NNS'), ('ALP', 'NNP'), ('agent', 'NN'), ('model', 'NN'), (',', ','), ('task', 'NN'), ('agent', 'NN'), ('beliefs', 'NN'), ('B', 'NNP'), (',', ','), ('goals', 'NNS'), ('G', 'NNP'), ('observations', 'NNS'), ('O', 'NNP'), ('generate', 'NN'), ('set', 'NN'), ('�', 'NNP'), ('actions', 'NNS'), ('assumptions', 'NNS'), ('world', 'NN'), (':', ':'), ('G', 'NNP'), ('�', 'NNP'), ('O', 'NNP'), ('true', 'JJ'), ('minimal', 'JJ'), ('model', 'NN'), ('determined', 'VBD'), ('B', 'NNP'), ('�', 'NNP'), ('�', 'NNP'), ('.', '.')]

 (S
  More/RBR
  formally/RB
  ,/,
  (NP model-theoretic/JJ semantics/NNS ALP/NNP agent/NN model/NN)
  ,/,
  (NP task/NN agent/NN beliefs/NN B/NNP)
  ,/,
  (NP
    goals/NNS
    G/NNP
    observations/NNS
    O/NNP
    generate/NN
    set/NN
    �/NNP
    actions/NNS
    assumptions/NNS
    world/NN)
  :/:
  (NP G/NNP �/NNP O/NNP)
  (NP true/JJ minimal/JJ model/NN)
  determined/VBD
  (NP B/NNP �/NNP �/NNP)
  ./.) 


>> Noun Phrases are: 
 ['model-theoretic semantics ALP agent model', 'task agent beliefs B', 'goals G observations O generate set � actions assumptions world', 'G � O', 'true minimal model', 'B � �']

>> Named Entities are: 
 [('ORGANIZATION', 'ALP')] 

>> Stemming using Porter Stemmer: 
 [('More', 'more'), ('formally', 'formal'), (',', ','), ('model-theoretic', 'model-theoret'), ('semantics', 'semant'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), (',', ','), ('task', 'task'), ('agent', 'agent'), ('beliefs', 'belief'), ('B', 'b'), (',', ','), ('goals', 'goal'), ('G', 'g'), ('observations', 'observ'), ('O', 'o'), ('generate', 'gener'), ('set', 'set'), ('�', '�'), ('actions', 'action'), ('assumptions', 'assumpt'), ('world', 'world'), (':', ':'), ('G', 'g'), ('�', '�'), ('O', 'o'), ('true', 'true'), ('minimal', 'minim'), ('model', 'model'), ('determined', 'determin'), ('B', 'b'), ('�', '�'), ('�', '�'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('More', 'more'), ('formally', 'formal'), (',', ','), ('model-theoretic', 'model-theoret'), ('semantics', 'semant'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), (',', ','), ('task', 'task'), ('agent', 'agent'), ('beliefs', 'belief'), ('B', 'b'), (',', ','), ('goals', 'goal'), ('G', 'g'), ('observations', 'observ'), ('O', 'o'), ('generate', 'generat'), ('set', 'set'), ('�', '�'), ('actions', 'action'), ('assumptions', 'assumpt'), ('world', 'world'), (':', ':'), ('G', 'g'), ('�', '�'), ('O', 'o'), ('true', 'true'), ('minimal', 'minim'), ('model', 'model'), ('determined', 'determin'), ('B', 'b'), ('�', '�'), ('�', '�'), ('.', '.')]

>> Lemmatization: 
 [('More', 'More'), ('formally', 'formally'), (',', ','), ('model-theoretic', 'model-theoretic'), ('semantics', 'semantics'), ('ALP', 'ALP'), ('agent', 'agent'), ('model', 'model'), (',', ','), ('task', 'task'), ('agent', 'agent'), ('beliefs', 'belief'), ('B', 'B'), (',', ','), ('goals', 'goal'), ('G', 'G'), ('observations', 'observation'), ('O', 'O'), ('generate', 'generate'), ('set', 'set'), ('�', '�'), ('actions', 'action'), ('assumptions', 'assumption'), ('world', 'world'), (':', ':'), ('G', 'G'), ('�', '�'), ('O', 'O'), ('true', 'true'), ('minimal', 'minimal'), ('model', 'model'), ('determined', 'determined'), ('B', 'B'), ('�', '�'), ('�', '�'), ('.', '.')]



============================ Sentence 33 =============================

In the simple case where B is a set of Horn clauses, B � �  always has a unique minimal model. 


>> Tokens are: 
 ['In', 'simple', 'case', 'B', 'set', 'Horn', 'clauses', ',', 'B', '�', '�', 'always', 'unique', 'minimal', 'model', '.']

>> Bigrams are: 
 [('In', 'simple'), ('simple', 'case'), ('case', 'B'), ('B', 'set'), ('set', 'Horn'), ('Horn', 'clauses'), ('clauses', ','), (',', 'B'), ('B', '�'), ('�', '�'), ('�', 'always'), ('always', 'unique'), ('unique', 'minimal'), ('minimal', 'model'), ('model', '.')]

>> Trigrams are: 
 [('In', 'simple', 'case'), ('simple', 'case', 'B'), ('case', 'B', 'set'), ('B', 'set', 'Horn'), ('set', 'Horn', 'clauses'), ('Horn', 'clauses', ','), ('clauses', ',', 'B'), (',', 'B', '�'), ('B', '�', '�'), ('�', '�', 'always'), ('�', 'always', 'unique'), ('always', 'unique', 'minimal'), ('unique', 'minimal', 'model'), ('minimal', 'model', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('simple', 'JJ'), ('case', 'NN'), ('B', 'NNP'), ('set', 'NN'), ('Horn', 'NNP'), ('clauses', 'NNS'), (',', ','), ('B', 'NNP'), ('�', 'NNP'), ('�', 'NNP'), ('always', 'RB'), ('unique', 'VBP'), ('minimal', 'JJ'), ('model', 'NN'), ('.', '.')]

 (S
  In/IN
  (NP simple/JJ case/NN B/NNP set/NN Horn/NNP clauses/NNS)
  ,/,
  (NP B/NNP �/NNP �/NNP)
  always/RB
  unique/VBP
  (NP minimal/JJ model/NN)
  ./.) 


>> Noun Phrases are: 
 ['simple case B set Horn clauses', 'B � �', 'minimal model']

>> Named Entities are: 
 [('PERSON', 'B')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('simple', 'simpl'), ('case', 'case'), ('B', 'b'), ('set', 'set'), ('Horn', 'horn'), ('clauses', 'claus'), (',', ','), ('B', 'b'), ('�', '�'), ('�', '�'), ('always', 'alway'), ('unique', 'uniqu'), ('minimal', 'minim'), ('model', 'model'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('simple', 'simpl'), ('case', 'case'), ('B', 'b'), ('set', 'set'), ('Horn', 'horn'), ('clauses', 'claus'), (',', ','), ('B', 'b'), ('�', '�'), ('�', '�'), ('always', 'alway'), ('unique', 'uniqu'), ('minimal', 'minim'), ('model', 'model'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('simple', 'simple'), ('case', 'case'), ('B', 'B'), ('set', 'set'), ('Horn', 'Horn'), ('clauses', 'clause'), (',', ','), ('B', 'B'), ('�', '�'), ('�', '�'), ('always', 'always'), ('unique', 'unique'), ('minimal', 'minimal'), ('model', 'model'), ('.', '.')]



============================ Sentence 34 =============================

Other cases can be  reduced to the Horn clause case, but these technicalities are  not important here. 


>> Tokens are: 
 ['Other', 'cases', 'reduced', 'Horn', 'clause', 'case', ',', 'technicalities', 'important', '.']

>> Bigrams are: 
 [('Other', 'cases'), ('cases', 'reduced'), ('reduced', 'Horn'), ('Horn', 'clause'), ('clause', 'case'), ('case', ','), (',', 'technicalities'), ('technicalities', 'important'), ('important', '.')]

>> Trigrams are: 
 [('Other', 'cases', 'reduced'), ('cases', 'reduced', 'Horn'), ('reduced', 'Horn', 'clause'), ('Horn', 'clause', 'case'), ('clause', 'case', ','), ('case', ',', 'technicalities'), (',', 'technicalities', 'important'), ('technicalities', 'important', '.')]

>> POS Tags are: 
 [('Other', 'JJ'), ('cases', 'NNS'), ('reduced', 'VBN'), ('Horn', 'NNP'), ('clause', 'NN'), ('case', 'NN'), (',', ','), ('technicalities', 'NNS'), ('important', 'JJ'), ('.', '.')]

 (S
  (NP Other/JJ cases/NNS)
  reduced/VBN
  (NP Horn/NNP clause/NN case/NN)
  ,/,
  (NP technicalities/NNS)
  important/JJ
  ./.) 


>> Noun Phrases are: 
 ['Other cases', 'Horn clause case', 'technicalities']

>> Named Entities are: 
 [('PERSON', 'Horn')] 

>> Stemming using Porter Stemmer: 
 [('Other', 'other'), ('cases', 'case'), ('reduced', 'reduc'), ('Horn', 'horn'), ('clause', 'claus'), ('case', 'case'), (',', ','), ('technicalities', 'technic'), ('important', 'import'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Other', 'other'), ('cases', 'case'), ('reduced', 'reduc'), ('Horn', 'horn'), ('clause', 'claus'), ('case', 'case'), (',', ','), ('technicalities', 'technic'), ('important', 'import'), ('.', '.')]

>> Lemmatization: 
 [('Other', 'Other'), ('cases', 'case'), ('reduced', 'reduced'), ('Horn', 'Horn'), ('clause', 'clause'), ('case', 'case'), (',', ','), ('technicalities', 'technicality'), ('important', 'important'), ('.', '.')]



============================ Sentence 35 =============================

In the operational semantics, ALP agents reason forwards  from observations, and forwards and backwards from be- liefs, to determine whether some instance of the conditions  of a goal is true, and to derive the corresponding instance of  the conclusion of the goal as an achievement goal, to make  true. 


>> Tokens are: 
 ['In', 'operational', 'semantics', ',', 'ALP', 'agents', 'reason', 'forwards', 'observations', ',', 'forwards', 'backwards', 'be-', 'liefs', ',', 'determine', 'whether', 'instance', 'conditions', 'goal', 'true', ',', 'derive', 'corresponding', 'instance', 'conclusion', 'goal', 'achievement', 'goal', ',', 'make', 'true', '.']

>> Bigrams are: 
 [('In', 'operational'), ('operational', 'semantics'), ('semantics', ','), (',', 'ALP'), ('ALP', 'agents'), ('agents', 'reason'), ('reason', 'forwards'), ('forwards', 'observations'), ('observations', ','), (',', 'forwards'), ('forwards', 'backwards'), ('backwards', 'be-'), ('be-', 'liefs'), ('liefs', ','), (',', 'determine'), ('determine', 'whether'), ('whether', 'instance'), ('instance', 'conditions'), ('conditions', 'goal'), ('goal', 'true'), ('true', ','), (',', 'derive'), ('derive', 'corresponding'), ('corresponding', 'instance'), ('instance', 'conclusion'), ('conclusion', 'goal'), ('goal', 'achievement'), ('achievement', 'goal'), ('goal', ','), (',', 'make'), ('make', 'true'), ('true', '.')]

>> Trigrams are: 
 [('In', 'operational', 'semantics'), ('operational', 'semantics', ','), ('semantics', ',', 'ALP'), (',', 'ALP', 'agents'), ('ALP', 'agents', 'reason'), ('agents', 'reason', 'forwards'), ('reason', 'forwards', 'observations'), ('forwards', 'observations', ','), ('observations', ',', 'forwards'), (',', 'forwards', 'backwards'), ('forwards', 'backwards', 'be-'), ('backwards', 'be-', 'liefs'), ('be-', 'liefs', ','), ('liefs', ',', 'determine'), (',', 'determine', 'whether'), ('determine', 'whether', 'instance'), ('whether', 'instance', 'conditions'), ('instance', 'conditions', 'goal'), ('conditions', 'goal', 'true'), ('goal', 'true', ','), ('true', ',', 'derive'), (',', 'derive', 'corresponding'), ('derive', 'corresponding', 'instance'), ('corresponding', 'instance', 'conclusion'), ('instance', 'conclusion', 'goal'), ('conclusion', 'goal', 'achievement'), ('goal', 'achievement', 'goal'), ('achievement', 'goal', ','), ('goal', ',', 'make'), (',', 'make', 'true'), ('make', 'true', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('operational', 'JJ'), ('semantics', 'NNS'), (',', ','), ('ALP', 'NNP'), ('agents', 'NNS'), ('reason', 'NN'), ('forwards', 'NNS'), ('observations', 'NNS'), (',', ','), ('forwards', 'NNS'), ('backwards', 'NNS'), ('be-', 'JJ'), ('liefs', 'NNS'), (',', ','), ('determine', 'VBP'), ('whether', 'IN'), ('instance', 'NN'), ('conditions', 'NNS'), ('goal', 'NN'), ('true', 'JJ'), (',', ','), ('derive', 'JJ'), ('corresponding', 'VBG'), ('instance', 'NN'), ('conclusion', 'NN'), ('goal', 'NN'), ('achievement', 'NN'), ('goal', 'NN'), (',', ','), ('make', 'VBP'), ('true', 'JJ'), ('.', '.')]

 (S
  In/IN
  (NP operational/JJ semantics/NNS)
  ,/,
  (NP ALP/NNP agents/NNS reason/NN forwards/NNS observations/NNS)
  ,/,
  (NP forwards/NNS backwards/NNS)
  (NP be-/JJ liefs/NNS)
  ,/,
  determine/VBP
  whether/IN
  (NP instance/NN conditions/NNS goal/NN)
  true/JJ
  ,/,
  derive/JJ
  corresponding/VBG
  (NP instance/NN conclusion/NN goal/NN achievement/NN goal/NN)
  ,/,
  make/VBP
  true/JJ
  ./.) 


>> Noun Phrases are: 
 ['operational semantics', 'ALP agents reason forwards observations', 'forwards backwards', 'be- liefs', 'instance conditions goal', 'instance conclusion goal achievement goal']

>> Named Entities are: 
 [('ORGANIZATION', 'ALP')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('operational', 'oper'), ('semantics', 'semant'), (',', ','), ('ALP', 'alp'), ('agents', 'agent'), ('reason', 'reason'), ('forwards', 'forward'), ('observations', 'observ'), (',', ','), ('forwards', 'forward'), ('backwards', 'backward'), ('be-', 'be-'), ('liefs', 'lief'), (',', ','), ('determine', 'determin'), ('whether', 'whether'), ('instance', 'instanc'), ('conditions', 'condit'), ('goal', 'goal'), ('true', 'true'), (',', ','), ('derive', 'deriv'), ('corresponding', 'correspond'), ('instance', 'instanc'), ('conclusion', 'conclus'), ('goal', 'goal'), ('achievement', 'achiev'), ('goal', 'goal'), (',', ','), ('make', 'make'), ('true', 'true'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('operational', 'oper'), ('semantics', 'semant'), (',', ','), ('ALP', 'alp'), ('agents', 'agent'), ('reason', 'reason'), ('forwards', 'forward'), ('observations', 'observ'), (',', ','), ('forwards', 'forward'), ('backwards', 'backward'), ('be-', 'be-'), ('liefs', 'lief'), (',', ','), ('determine', 'determin'), ('whether', 'whether'), ('instance', 'instanc'), ('conditions', 'condit'), ('goal', 'goal'), ('true', 'true'), (',', ','), ('derive', 'deriv'), ('corresponding', 'correspond'), ('instance', 'instanc'), ('conclusion', 'conclus'), ('goal', 'goal'), ('achievement', 'achiev'), ('goal', 'goal'), (',', ','), ('make', 'make'), ('true', 'true'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('operational', 'operational'), ('semantics', 'semantics'), (',', ','), ('ALP', 'ALP'), ('agents', 'agent'), ('reason', 'reason'), ('forwards', 'forward'), ('observations', 'observation'), (',', ','), ('forwards', 'forward'), ('backwards', 'backwards'), ('be-', 'be-'), ('liefs', 'liefs'), (',', ','), ('determine', 'determine'), ('whether', 'whether'), ('instance', 'instance'), ('conditions', 'condition'), ('goal', 'goal'), ('true', 'true'), (',', ','), ('derive', 'derive'), ('corresponding', 'corresponding'), ('instance', 'instance'), ('conclusion', 'conclusion'), ('goal', 'goal'), ('achievement', 'achievement'), ('goal', 'goal'), (',', ','), ('make', 'make'), ('true', 'true'), ('.', '.')]



============================ Sentence 36 =============================

Forward reasoning from observations is like forward  chaining in production systems, but it has the semantics of  aiming to make the goal true by making its conclusion true  whenever its conditions become true. 


>> Tokens are: 
 ['Forward', 'reasoning', 'observations', 'like', 'forward', 'chaining', 'production', 'systems', ',', 'semantics', 'aiming', 'make', 'goal', 'true', 'making', 'conclusion', 'true', 'whenever', 'conditions', 'become', 'true', '.']

>> Bigrams are: 
 [('Forward', 'reasoning'), ('reasoning', 'observations'), ('observations', 'like'), ('like', 'forward'), ('forward', 'chaining'), ('chaining', 'production'), ('production', 'systems'), ('systems', ','), (',', 'semantics'), ('semantics', 'aiming'), ('aiming', 'make'), ('make', 'goal'), ('goal', 'true'), ('true', 'making'), ('making', 'conclusion'), ('conclusion', 'true'), ('true', 'whenever'), ('whenever', 'conditions'), ('conditions', 'become'), ('become', 'true'), ('true', '.')]

>> Trigrams are: 
 [('Forward', 'reasoning', 'observations'), ('reasoning', 'observations', 'like'), ('observations', 'like', 'forward'), ('like', 'forward', 'chaining'), ('forward', 'chaining', 'production'), ('chaining', 'production', 'systems'), ('production', 'systems', ','), ('systems', ',', 'semantics'), (',', 'semantics', 'aiming'), ('semantics', 'aiming', 'make'), ('aiming', 'make', 'goal'), ('make', 'goal', 'true'), ('goal', 'true', 'making'), ('true', 'making', 'conclusion'), ('making', 'conclusion', 'true'), ('conclusion', 'true', 'whenever'), ('true', 'whenever', 'conditions'), ('whenever', 'conditions', 'become'), ('conditions', 'become', 'true'), ('become', 'true', '.')]

>> POS Tags are: 
 [('Forward', 'NNP'), ('reasoning', 'VBG'), ('observations', 'NNS'), ('like', 'IN'), ('forward', 'NN'), ('chaining', 'VBG'), ('production', 'NN'), ('systems', 'NNS'), (',', ','), ('semantics', 'NNS'), ('aiming', 'VBG'), ('make', 'VBP'), ('goal', 'NN'), ('true', 'JJ'), ('making', 'VBG'), ('conclusion', 'NN'), ('true', 'JJ'), ('whenever', 'WRB'), ('conditions', 'NNS'), ('become', 'VBP'), ('true', 'JJ'), ('.', '.')]

 (S
  (NP Forward/NNP)
  reasoning/VBG
  (NP observations/NNS)
  like/IN
  (NP forward/NN)
  chaining/VBG
  (NP production/NN systems/NNS)
  ,/,
  (NP semantics/NNS)
  aiming/VBG
  make/VBP
  (NP goal/NN)
  true/JJ
  making/VBG
  (NP conclusion/NN)
  true/JJ
  whenever/WRB
  (NP conditions/NNS)
  become/VBP
  true/JJ
  ./.) 


>> Noun Phrases are: 
 ['Forward', 'observations', 'forward', 'production systems', 'semantics', 'goal', 'conclusion', 'conditions']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Forward', 'forward'), ('reasoning', 'reason'), ('observations', 'observ'), ('like', 'like'), ('forward', 'forward'), ('chaining', 'chain'), ('production', 'product'), ('systems', 'system'), (',', ','), ('semantics', 'semant'), ('aiming', 'aim'), ('make', 'make'), ('goal', 'goal'), ('true', 'true'), ('making', 'make'), ('conclusion', 'conclus'), ('true', 'true'), ('whenever', 'whenev'), ('conditions', 'condit'), ('become', 'becom'), ('true', 'true'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Forward', 'forward'), ('reasoning', 'reason'), ('observations', 'observ'), ('like', 'like'), ('forward', 'forward'), ('chaining', 'chain'), ('production', 'product'), ('systems', 'system'), (',', ','), ('semantics', 'semant'), ('aiming', 'aim'), ('make', 'make'), ('goal', 'goal'), ('true', 'true'), ('making', 'make'), ('conclusion', 'conclus'), ('true', 'true'), ('whenever', 'whenev'), ('conditions', 'condit'), ('become', 'becom'), ('true', 'true'), ('.', '.')]

>> Lemmatization: 
 [('Forward', 'Forward'), ('reasoning', 'reasoning'), ('observations', 'observation'), ('like', 'like'), ('forward', 'forward'), ('chaining', 'chaining'), ('production', 'production'), ('systems', 'system'), (',', ','), ('semantics', 'semantics'), ('aiming', 'aiming'), ('make', 'make'), ('goal', 'goal'), ('true', 'true'), ('making', 'making'), ('conclusion', 'conclusion'), ('true', 'true'), ('whenever', 'whenever'), ('conditions', 'condition'), ('become', 'become'), ('true', 'true'), ('.', '.')]



============================ Sentence 37 =============================

Conditional goals  understood in this way are also called maintenance goals. 


>> Tokens are: 
 ['Conditional', 'goals', 'understood', 'way', 'also', 'called', 'maintenance', 'goals', '.']

>> Bigrams are: 
 [('Conditional', 'goals'), ('goals', 'understood'), ('understood', 'way'), ('way', 'also'), ('also', 'called'), ('called', 'maintenance'), ('maintenance', 'goals'), ('goals', '.')]

>> Trigrams are: 
 [('Conditional', 'goals', 'understood'), ('goals', 'understood', 'way'), ('understood', 'way', 'also'), ('way', 'also', 'called'), ('also', 'called', 'maintenance'), ('called', 'maintenance', 'goals'), ('maintenance', 'goals', '.')]

>> POS Tags are: 
 [('Conditional', 'JJ'), ('goals', 'NNS'), ('understood', 'JJ'), ('way', 'NN'), ('also', 'RB'), ('called', 'VBD'), ('maintenance', 'NN'), ('goals', 'NNS'), ('.', '.')]

 (S
  (NP Conditional/JJ goals/NNS)
  (NP understood/JJ way/NN)
  also/RB
  called/VBD
  (NP maintenance/NN goals/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Conditional goals', 'understood way', 'maintenance goals']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Conditional', 'condit'), ('goals', 'goal'), ('understood', 'understood'), ('way', 'way'), ('also', 'also'), ('called', 'call'), ('maintenance', 'mainten'), ('goals', 'goal'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Conditional', 'condit'), ('goals', 'goal'), ('understood', 'understood'), ('way', 'way'), ('also', 'also'), ('called', 'call'), ('maintenance', 'mainten'), ('goals', 'goal'), ('.', '.')]

>> Lemmatization: 
 [('Conditional', 'Conditional'), ('goals', 'goal'), ('understood', 'understood'), ('way', 'way'), ('also', 'also'), ('called', 'called'), ('maintenance', 'maintenance'), ('goals', 'goal'), ('.', '.')]



============================ Sentence 38 =============================

Achievement goals are solved by reasoning backwards,  searching for a plan of actions whose execution solves the  goals. 


>> Tokens are: 
 ['Achievement', 'goals', 'solved', 'reasoning', 'backwards', ',', 'searching', 'plan', 'actions', 'whose', 'execution', 'solves', 'goals', '.']

>> Bigrams are: 
 [('Achievement', 'goals'), ('goals', 'solved'), ('solved', 'reasoning'), ('reasoning', 'backwards'), ('backwards', ','), (',', 'searching'), ('searching', 'plan'), ('plan', 'actions'), ('actions', 'whose'), ('whose', 'execution'), ('execution', 'solves'), ('solves', 'goals'), ('goals', '.')]

>> Trigrams are: 
 [('Achievement', 'goals', 'solved'), ('goals', 'solved', 'reasoning'), ('solved', 'reasoning', 'backwards'), ('reasoning', 'backwards', ','), ('backwards', ',', 'searching'), (',', 'searching', 'plan'), ('searching', 'plan', 'actions'), ('plan', 'actions', 'whose'), ('actions', 'whose', 'execution'), ('whose', 'execution', 'solves'), ('execution', 'solves', 'goals'), ('solves', 'goals', '.')]

>> POS Tags are: 
 [('Achievement', 'JJ'), ('goals', 'NNS'), ('solved', 'VBD'), ('reasoning', 'VBG'), ('backwards', 'NNS'), (',', ','), ('searching', 'VBG'), ('plan', 'NN'), ('actions', 'NNS'), ('whose', 'WP$'), ('execution', 'NN'), ('solves', 'VBZ'), ('goals', 'NNS'), ('.', '.')]

 (S
  (NP Achievement/JJ goals/NNS)
  solved/VBD
  reasoning/VBG
  (NP backwards/NNS)
  ,/,
  searching/VBG
  (NP plan/NN actions/NNS)
  whose/WP$
  (NP execution/NN)
  solves/VBZ
  (NP goals/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Achievement goals', 'backwards', 'plan actions', 'execution', 'goals']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Achievement', 'achiev'), ('goals', 'goal'), ('solved', 'solv'), ('reasoning', 'reason'), ('backwards', 'backward'), (',', ','), ('searching', 'search'), ('plan', 'plan'), ('actions', 'action'), ('whose', 'whose'), ('execution', 'execut'), ('solves', 'solv'), ('goals', 'goal'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Achievement', 'achiev'), ('goals', 'goal'), ('solved', 'solv'), ('reasoning', 'reason'), ('backwards', 'backward'), (',', ','), ('searching', 'search'), ('plan', 'plan'), ('actions', 'action'), ('whose', 'whose'), ('execution', 'execut'), ('solves', 'solv'), ('goals', 'goal'), ('.', '.')]

>> Lemmatization: 
 [('Achievement', 'Achievement'), ('goals', 'goal'), ('solved', 'solved'), ('reasoning', 'reasoning'), ('backwards', 'backwards'), (',', ','), ('searching', 'searching'), ('plan', 'plan'), ('actions', 'action'), ('whose', 'whose'), ('execution', 'execution'), ('solves', 'solves'), ('goals', 'goal'), ('.', '.')]



============================ Sentence 39 =============================

Backwards reasoning is a form of goal-reduction, and  executable actions are a special case of atomic sub-goals. 


>> Tokens are: 
 ['Backwards', 'reasoning', 'form', 'goal-reduction', ',', 'executable', 'actions', 'special', 'case', 'atomic', 'sub-goals', '.']

>> Bigrams are: 
 [('Backwards', 'reasoning'), ('reasoning', 'form'), ('form', 'goal-reduction'), ('goal-reduction', ','), (',', 'executable'), ('executable', 'actions'), ('actions', 'special'), ('special', 'case'), ('case', 'atomic'), ('atomic', 'sub-goals'), ('sub-goals', '.')]

>> Trigrams are: 
 [('Backwards', 'reasoning', 'form'), ('reasoning', 'form', 'goal-reduction'), ('form', 'goal-reduction', ','), ('goal-reduction', ',', 'executable'), (',', 'executable', 'actions'), ('executable', 'actions', 'special'), ('actions', 'special', 'case'), ('special', 'case', 'atomic'), ('case', 'atomic', 'sub-goals'), ('atomic', 'sub-goals', '.')]

>> POS Tags are: 
 [('Backwards', 'NNS'), ('reasoning', 'VBG'), ('form', 'NN'), ('goal-reduction', 'NN'), (',', ','), ('executable', 'JJ'), ('actions', 'NNS'), ('special', 'JJ'), ('case', 'NN'), ('atomic', 'JJ'), ('sub-goals', 'NNS'), ('.', '.')]

 (S
  (NP Backwards/NNS)
  reasoning/VBG
  (NP form/NN goal-reduction/NN)
  ,/,
  (NP executable/JJ actions/NNS)
  (NP special/JJ case/NN)
  (NP atomic/JJ sub-goals/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Backwards', 'form goal-reduction', 'executable actions', 'special case', 'atomic sub-goals']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Backwards', 'backward'), ('reasoning', 'reason'), ('form', 'form'), ('goal-reduction', 'goal-reduct'), (',', ','), ('executable', 'execut'), ('actions', 'action'), ('special', 'special'), ('case', 'case'), ('atomic', 'atom'), ('sub-goals', 'sub-goal'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Backwards', 'backward'), ('reasoning', 'reason'), ('form', 'form'), ('goal-reduction', 'goal-reduct'), (',', ','), ('executable', 'execut'), ('actions', 'action'), ('special', 'special'), ('case', 'case'), ('atomic', 'atom'), ('sub-goals', 'sub-goal'), ('.', '.')]

>> Lemmatization: 
 [('Backwards', 'Backwards'), ('reasoning', 'reasoning'), ('form', 'form'), ('goal-reduction', 'goal-reduction'), (',', ','), ('executable', 'executable'), ('actions', 'action'), ('special', 'special'), ('case', 'case'), ('atomic', 'atomic'), ('sub-goals', 'sub-goals'), ('.', '.')]



============================ Sentence 40 =============================

Suppose, for example, that I observe there is a fire. 


>> Tokens are: 
 ['Suppose', ',', 'example', ',', 'I', 'observe', 'fire', '.']

>> Bigrams are: 
 [('Suppose', ','), (',', 'example'), ('example', ','), (',', 'I'), ('I', 'observe'), ('observe', 'fire'), ('fire', '.')]

>> Trigrams are: 
 [('Suppose', ',', 'example'), (',', 'example', ','), ('example', ',', 'I'), (',', 'I', 'observe'), ('I', 'observe', 'fire'), ('observe', 'fire', '.')]

>> POS Tags are: 
 [('Suppose', 'NNP'), (',', ','), ('example', 'NN'), (',', ','), ('I', 'PRP'), ('observe', 'VBP'), ('fire', 'NN'), ('.', '.')]

 (S
  (NP Suppose/NNP)
  ,/,
  (NP example/NN)
  ,/,
  I/PRP
  observe/VBP
  (NP fire/NN)
  ./.) 


>> Noun Phrases are: 
 ['Suppose', 'example', 'fire']

>> Named Entities are: 
 [('GPE', 'Suppose')] 

>> Stemming using Porter Stemmer: 
 [('Suppose', 'suppos'), (',', ','), ('example', 'exampl'), (',', ','), ('I', 'i'), ('observe', 'observ'), ('fire', 'fire'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Suppose', 'suppos'), (',', ','), ('example', 'exampl'), (',', ','), ('I', 'i'), ('observe', 'observ'), ('fire', 'fire'), ('.', '.')]

>> Lemmatization: 
 [('Suppose', 'Suppose'), (',', ','), ('example', 'example'), (',', ','), ('I', 'I'), ('observe', 'observe'), ('fire', 'fire'), ('.', '.')]



============================ Sentence 41 =============================

I can  then reason with the goal and beliefs given above, conclud- ing by forward reasoning that there is an emergency, and  deriving the achievement goal I deal with it myself or I get  help or I escape. 


>> Tokens are: 
 ['I', 'reason', 'goal', 'beliefs', 'given', ',', 'conclud-', 'ing', 'forward', 'reasoning', 'emergency', ',', 'deriving', 'achievement', 'goal', 'I', 'deal', 'I', 'get', 'help', 'I', 'escape', '.']

>> Bigrams are: 
 [('I', 'reason'), ('reason', 'goal'), ('goal', 'beliefs'), ('beliefs', 'given'), ('given', ','), (',', 'conclud-'), ('conclud-', 'ing'), ('ing', 'forward'), ('forward', 'reasoning'), ('reasoning', 'emergency'), ('emergency', ','), (',', 'deriving'), ('deriving', 'achievement'), ('achievement', 'goal'), ('goal', 'I'), ('I', 'deal'), ('deal', 'I'), ('I', 'get'), ('get', 'help'), ('help', 'I'), ('I', 'escape'), ('escape', '.')]

>> Trigrams are: 
 [('I', 'reason', 'goal'), ('reason', 'goal', 'beliefs'), ('goal', 'beliefs', 'given'), ('beliefs', 'given', ','), ('given', ',', 'conclud-'), (',', 'conclud-', 'ing'), ('conclud-', 'ing', 'forward'), ('ing', 'forward', 'reasoning'), ('forward', 'reasoning', 'emergency'), ('reasoning', 'emergency', ','), ('emergency', ',', 'deriving'), (',', 'deriving', 'achievement'), ('deriving', 'achievement', 'goal'), ('achievement', 'goal', 'I'), ('goal', 'I', 'deal'), ('I', 'deal', 'I'), ('deal', 'I', 'get'), ('I', 'get', 'help'), ('get', 'help', 'I'), ('help', 'I', 'escape'), ('I', 'escape', '.')]

>> POS Tags are: 
 [('I', 'PRP'), ('reason', 'NN'), ('goal', 'NN'), ('beliefs', 'NN'), ('given', 'VBN'), (',', ','), ('conclud-', 'JJ'), ('ing', 'VBG'), ('forward', 'RB'), ('reasoning', 'VBG'), ('emergency', 'NN'), (',', ','), ('deriving', 'VBG'), ('achievement', 'JJ'), ('goal', 'NN'), ('I', 'PRP'), ('deal', 'VBP'), ('I', 'PRP'), ('get', 'VBP'), ('help', 'NN'), ('I', 'PRP'), ('escape', 'VBP'), ('.', '.')]

 (S
  I/PRP
  (NP reason/NN goal/NN beliefs/NN)
  given/VBN
  ,/,
  conclud-/JJ
  ing/VBG
  forward/RB
  reasoning/VBG
  (NP emergency/NN)
  ,/,
  deriving/VBG
  (NP achievement/JJ goal/NN)
  I/PRP
  deal/VBP
  I/PRP
  get/VBP
  (NP help/NN)
  I/PRP
  escape/VBP
  ./.) 


>> Noun Phrases are: 
 ['reason goal beliefs', 'emergency', 'achievement goal', 'help']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('I', 'i'), ('reason', 'reason'), ('goal', 'goal'), ('beliefs', 'belief'), ('given', 'given'), (',', ','), ('conclud-', 'conclud-'), ('ing', 'ing'), ('forward', 'forward'), ('reasoning', 'reason'), ('emergency', 'emerg'), (',', ','), ('deriving', 'deriv'), ('achievement', 'achiev'), ('goal', 'goal'), ('I', 'i'), ('deal', 'deal'), ('I', 'i'), ('get', 'get'), ('help', 'help'), ('I', 'i'), ('escape', 'escap'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('I', 'i'), ('reason', 'reason'), ('goal', 'goal'), ('beliefs', 'belief'), ('given', 'given'), (',', ','), ('conclud-', 'conclud-'), ('ing', 'ing'), ('forward', 'forward'), ('reasoning', 'reason'), ('emergency', 'emerg'), (',', ','), ('deriving', 'deriv'), ('achievement', 'achiev'), ('goal', 'goal'), ('I', 'i'), ('deal', 'deal'), ('I', 'i'), ('get', 'get'), ('help', 'help'), ('I', 'i'), ('escape', 'escap'), ('.', '.')]

>> Lemmatization: 
 [('I', 'I'), ('reason', 'reason'), ('goal', 'goal'), ('beliefs', 'belief'), ('given', 'given'), (',', ','), ('conclud-', 'conclud-'), ('ing', 'ing'), ('forward', 'forward'), ('reasoning', 'reasoning'), ('emergency', 'emergency'), (',', ','), ('deriving', 'deriving'), ('achievement', 'achievement'), ('goal', 'goal'), ('I', 'I'), ('deal', 'deal'), ('I', 'I'), ('get', 'get'), ('help', 'help'), ('I', 'I'), ('escape', 'escape'), ('.', '.')]



============================ Sentence 42 =============================

These three alternatives represent an initial  search space. 


>> Tokens are: 
 ['These', 'three', 'alternatives', 'represent', 'initial', 'search', 'space', '.']

>> Bigrams are: 
 [('These', 'three'), ('three', 'alternatives'), ('alternatives', 'represent'), ('represent', 'initial'), ('initial', 'search'), ('search', 'space'), ('space', '.')]

>> Trigrams are: 
 [('These', 'three', 'alternatives'), ('three', 'alternatives', 'represent'), ('alternatives', 'represent', 'initial'), ('represent', 'initial', 'search'), ('initial', 'search', 'space'), ('search', 'space', '.')]

>> POS Tags are: 
 [('These', 'DT'), ('three', 'CD'), ('alternatives', 'NNS'), ('represent', 'VBP'), ('initial', 'JJ'), ('search', 'NN'), ('space', 'NN'), ('.', '.')]

 (S
  These/DT
  three/CD
  (NP alternatives/NNS)
  represent/VBP
  (NP initial/JJ search/NN space/NN)
  ./.) 


>> Noun Phrases are: 
 ['alternatives', 'initial search space']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('These', 'these'), ('three', 'three'), ('alternatives', 'altern'), ('represent', 'repres'), ('initial', 'initi'), ('search', 'search'), ('space', 'space'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('These', 'these'), ('three', 'three'), ('alternatives', 'altern'), ('represent', 'repres'), ('initial', 'initi'), ('search', 'search'), ('space', 'space'), ('.', '.')]

>> Lemmatization: 
 [('These', 'These'), ('three', 'three'), ('alternatives', 'alternative'), ('represent', 'represent'), ('initial', 'initial'), ('search', 'search'), ('space', 'space'), ('.', '.')]



============================ Sentence 43 =============================

I can solve the achievement goal by reasoning  backward, reducing the goal I get help to the consecutive  sub-goals I alert the driver of the train and I press the alarm  button. 


>> Tokens are: 
 ['I', 'solve', 'achievement', 'goal', 'reasoning', 'backward', ',', 'reducing', 'goal', 'I', 'get', 'help', 'consecutive', 'sub-goals', 'I', 'alert', 'driver', 'train', 'I', 'press', 'alarm', 'button', '.']

>> Bigrams are: 
 [('I', 'solve'), ('solve', 'achievement'), ('achievement', 'goal'), ('goal', 'reasoning'), ('reasoning', 'backward'), ('backward', ','), (',', 'reducing'), ('reducing', 'goal'), ('goal', 'I'), ('I', 'get'), ('get', 'help'), ('help', 'consecutive'), ('consecutive', 'sub-goals'), ('sub-goals', 'I'), ('I', 'alert'), ('alert', 'driver'), ('driver', 'train'), ('train', 'I'), ('I', 'press'), ('press', 'alarm'), ('alarm', 'button'), ('button', '.')]

>> Trigrams are: 
 [('I', 'solve', 'achievement'), ('solve', 'achievement', 'goal'), ('achievement', 'goal', 'reasoning'), ('goal', 'reasoning', 'backward'), ('reasoning', 'backward', ','), ('backward', ',', 'reducing'), (',', 'reducing', 'goal'), ('reducing', 'goal', 'I'), ('goal', 'I', 'get'), ('I', 'get', 'help'), ('get', 'help', 'consecutive'), ('help', 'consecutive', 'sub-goals'), ('consecutive', 'sub-goals', 'I'), ('sub-goals', 'I', 'alert'), ('I', 'alert', 'driver'), ('alert', 'driver', 'train'), ('driver', 'train', 'I'), ('train', 'I', 'press'), ('I', 'press', 'alarm'), ('press', 'alarm', 'button'), ('alarm', 'button', '.')]

>> POS Tags are: 
 [('I', 'PRP'), ('solve', 'VBP'), ('achievement', 'JJ'), ('goal', 'NN'), ('reasoning', 'VBG'), ('backward', 'RB'), (',', ','), ('reducing', 'VBG'), ('goal', 'NN'), ('I', 'PRP'), ('get', 'VBP'), ('help', 'JJ'), ('consecutive', 'JJ'), ('sub-goals', 'NNS'), ('I', 'PRP'), ('alert', 'VBP'), ('driver', 'RB'), ('train', 'VBP'), ('I', 'PRP'), ('press', 'VBP'), ('alarm', 'JJ'), ('button', 'NN'), ('.', '.')]

 (S
  I/PRP
  solve/VBP
  (NP achievement/JJ goal/NN)
  reasoning/VBG
  backward/RB
  ,/,
  reducing/VBG
  (NP goal/NN)
  I/PRP
  get/VBP
  (NP help/JJ consecutive/JJ sub-goals/NNS)
  I/PRP
  alert/VBP
  driver/RB
  train/VBP
  I/PRP
  press/VBP
  (NP alarm/JJ button/NN)
  ./.) 


>> Noun Phrases are: 
 ['achievement goal', 'goal', 'help consecutive sub-goals', 'alarm button']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('I', 'i'), ('solve', 'solv'), ('achievement', 'achiev'), ('goal', 'goal'), ('reasoning', 'reason'), ('backward', 'backward'), (',', ','), ('reducing', 'reduc'), ('goal', 'goal'), ('I', 'i'), ('get', 'get'), ('help', 'help'), ('consecutive', 'consecut'), ('sub-goals', 'sub-goal'), ('I', 'i'), ('alert', 'alert'), ('driver', 'driver'), ('train', 'train'), ('I', 'i'), ('press', 'press'), ('alarm', 'alarm'), ('button', 'button'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('I', 'i'), ('solve', 'solv'), ('achievement', 'achiev'), ('goal', 'goal'), ('reasoning', 'reason'), ('backward', 'backward'), (',', ','), ('reducing', 'reduc'), ('goal', 'goal'), ('I', 'i'), ('get', 'get'), ('help', 'help'), ('consecutive', 'consecut'), ('sub-goals', 'sub-goal'), ('I', 'i'), ('alert', 'alert'), ('driver', 'driver'), ('train', 'train'), ('I', 'i'), ('press', 'press'), ('alarm', 'alarm'), ('button', 'button'), ('.', '.')]

>> Lemmatization: 
 [('I', 'I'), ('solve', 'solve'), ('achievement', 'achievement'), ('goal', 'goal'), ('reasoning', 'reasoning'), ('backward', 'backward'), (',', ','), ('reducing', 'reducing'), ('goal', 'goal'), ('I', 'I'), ('get', 'get'), ('help', 'help'), ('consecutive', 'consecutive'), ('sub-goals', 'sub-goals'), ('I', 'I'), ('alert', 'alert'), ('driver', 'driver'), ('train', 'train'), ('I', 'I'), ('press', 'press'), ('alarm', 'alarm'), ('button', 'button'), ('.', '.')]



============================ Sentence 44 =============================

If this last sub-goal is an atomic action, then it can  be executed directly. 


>> Tokens are: 
 ['If', 'last', 'sub-goal', 'atomic', 'action', ',', 'executed', 'directly', '.']

>> Bigrams are: 
 [('If', 'last'), ('last', 'sub-goal'), ('sub-goal', 'atomic'), ('atomic', 'action'), ('action', ','), (',', 'executed'), ('executed', 'directly'), ('directly', '.')]

>> Trigrams are: 
 [('If', 'last', 'sub-goal'), ('last', 'sub-goal', 'atomic'), ('sub-goal', 'atomic', 'action'), ('atomic', 'action', ','), ('action', ',', 'executed'), (',', 'executed', 'directly'), ('executed', 'directly', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('last', 'JJ'), ('sub-goal', 'JJ'), ('atomic', 'JJ'), ('action', 'NN'), (',', ','), ('executed', 'VBN'), ('directly', 'RB'), ('.', '.')]

 (S
  If/IN
  (NP last/JJ sub-goal/JJ atomic/JJ action/NN)
  ,/,
  executed/VBN
  directly/RB
  ./.) 


>> Noun Phrases are: 
 ['last sub-goal atomic action']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('last', 'last'), ('sub-goal', 'sub-goal'), ('atomic', 'atom'), ('action', 'action'), (',', ','), ('executed', 'execut'), ('directly', 'directli'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('last', 'last'), ('sub-goal', 'sub-goal'), ('atomic', 'atom'), ('action', 'action'), (',', ','), ('executed', 'execut'), ('directly', 'direct'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('last', 'last'), ('sub-goal', 'sub-goal'), ('atomic', 'atomic'), ('action', 'action'), (',', ','), ('executed', 'executed'), ('directly', 'directly'), ('.', '.')]



============================ Sentence 45 =============================

If the action succeeds, then it makes  the achievement goal and this instance of the maintenance  goal both true. 


>> Tokens are: 
 ['If', 'action', 'succeeds', ',', 'makes', 'achievement', 'goal', 'instance', 'maintenance', 'goal', 'true', '.']

>> Bigrams are: 
 [('If', 'action'), ('action', 'succeeds'), ('succeeds', ','), (',', 'makes'), ('makes', 'achievement'), ('achievement', 'goal'), ('goal', 'instance'), ('instance', 'maintenance'), ('maintenance', 'goal'), ('goal', 'true'), ('true', '.')]

>> Trigrams are: 
 [('If', 'action', 'succeeds'), ('action', 'succeeds', ','), ('succeeds', ',', 'makes'), (',', 'makes', 'achievement'), ('makes', 'achievement', 'goal'), ('achievement', 'goal', 'instance'), ('goal', 'instance', 'maintenance'), ('instance', 'maintenance', 'goal'), ('maintenance', 'goal', 'true'), ('goal', 'true', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('action', 'NN'), ('succeeds', 'VBZ'), (',', ','), ('makes', 'VBZ'), ('achievement', 'JJ'), ('goal', 'NN'), ('instance', 'NN'), ('maintenance', 'NN'), ('goal', 'NN'), ('true', 'JJ'), ('.', '.')]

 (S
  If/IN
  (NP action/NN)
  succeeds/VBZ
  ,/,
  makes/VBZ
  (NP achievement/JJ goal/NN instance/NN maintenance/NN goal/NN)
  true/JJ
  ./.) 


>> Noun Phrases are: 
 ['action', 'achievement goal instance maintenance goal']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('action', 'action'), ('succeeds', 'succe'), (',', ','), ('makes', 'make'), ('achievement', 'achiev'), ('goal', 'goal'), ('instance', 'instanc'), ('maintenance', 'mainten'), ('goal', 'goal'), ('true', 'true'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('action', 'action'), ('succeeds', 'succeed'), (',', ','), ('makes', 'make'), ('achievement', 'achiev'), ('goal', 'goal'), ('instance', 'instanc'), ('maintenance', 'mainten'), ('goal', 'goal'), ('true', 'true'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('action', 'action'), ('succeeds', 'succeeds'), (',', ','), ('makes', 'make'), ('achievement', 'achievement'), ('goal', 'goal'), ('instance', 'instance'), ('maintenance', 'maintenance'), ('goal', 'goal'), ('true', 'true'), ('.', '.')]



============================ Sentence 46 =============================

In the model-theoretic semantics, the agent needs to gen- erate, not only actions, but also assumptions about the   world. 


>> Tokens are: 
 ['In', 'model-theoretic', 'semantics', ',', 'agent', 'needs', 'gen-', 'erate', ',', 'actions', ',', 'also', 'assumptions', 'world', '.']

>> Bigrams are: 
 [('In', 'model-theoretic'), ('model-theoretic', 'semantics'), ('semantics', ','), (',', 'agent'), ('agent', 'needs'), ('needs', 'gen-'), ('gen-', 'erate'), ('erate', ','), (',', 'actions'), ('actions', ','), (',', 'also'), ('also', 'assumptions'), ('assumptions', 'world'), ('world', '.')]

>> Trigrams are: 
 [('In', 'model-theoretic', 'semantics'), ('model-theoretic', 'semantics', ','), ('semantics', ',', 'agent'), (',', 'agent', 'needs'), ('agent', 'needs', 'gen-'), ('needs', 'gen-', 'erate'), ('gen-', 'erate', ','), ('erate', ',', 'actions'), (',', 'actions', ','), ('actions', ',', 'also'), (',', 'also', 'assumptions'), ('also', 'assumptions', 'world'), ('assumptions', 'world', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('model-theoretic', 'JJ'), ('semantics', 'NNS'), (',', ','), ('agent', 'JJ'), ('needs', 'VBZ'), ('gen-', 'JJ'), ('erate', 'NN'), (',', ','), ('actions', 'NNS'), (',', ','), ('also', 'RB'), ('assumptions', 'VBZ'), ('world', 'NN'), ('.', '.')]

 (S
  In/IN
  (NP model-theoretic/JJ semantics/NNS)
  ,/,
  agent/JJ
  needs/VBZ
  (NP gen-/JJ erate/NN)
  ,/,
  (NP actions/NNS)
  ,/,
  also/RB
  assumptions/VBZ
  (NP world/NN)
  ./.) 


>> Noun Phrases are: 
 ['model-theoretic semantics', 'gen- erate', 'actions', 'world']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('model-theoretic', 'model-theoret'), ('semantics', 'semant'), (',', ','), ('agent', 'agent'), ('needs', 'need'), ('gen-', 'gen-'), ('erate', 'erat'), (',', ','), ('actions', 'action'), (',', ','), ('also', 'also'), ('assumptions', 'assumpt'), ('world', 'world'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('model-theoretic', 'model-theoret'), ('semantics', 'semant'), (',', ','), ('agent', 'agent'), ('needs', 'need'), ('gen-', 'gen-'), ('erate', 'erat'), (',', ','), ('actions', 'action'), (',', ','), ('also', 'also'), ('assumptions', 'assumpt'), ('world', 'world'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('model-theoretic', 'model-theoretic'), ('semantics', 'semantics'), (',', ','), ('agent', 'agent'), ('needs', 'need'), ('gen-', 'gen-'), ('erate', 'erate'), (',', ','), ('actions', 'action'), (',', ','), ('also', 'also'), ('assumptions', 'assumption'), ('world', 'world'), ('.', '.')]



============================ Sentence 47 =============================

These assumptions explain the use of the term ab- duction in ALP. 


>> Tokens are: 
 ['These', 'assumptions', 'explain', 'use', 'term', 'ab-', 'duction', 'ALP', '.']

>> Bigrams are: 
 [('These', 'assumptions'), ('assumptions', 'explain'), ('explain', 'use'), ('use', 'term'), ('term', 'ab-'), ('ab-', 'duction'), ('duction', 'ALP'), ('ALP', '.')]

>> Trigrams are: 
 [('These', 'assumptions', 'explain'), ('assumptions', 'explain', 'use'), ('explain', 'use', 'term'), ('use', 'term', 'ab-'), ('term', 'ab-', 'duction'), ('ab-', 'duction', 'ALP'), ('duction', 'ALP', '.')]

>> POS Tags are: 
 [('These', 'DT'), ('assumptions', 'NNS'), ('explain', 'VBP'), ('use', 'JJ'), ('term', 'NN'), ('ab-', 'JJ'), ('duction', 'NN'), ('ALP', 'NNP'), ('.', '.')]

 (S
  (NP These/DT assumptions/NNS)
  explain/VBP
  (NP use/JJ term/NN)
  (NP ab-/JJ duction/NN ALP/NNP)
  ./.) 


>> Noun Phrases are: 
 ['These assumptions', 'use term', 'ab- duction ALP']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('These', 'these'), ('assumptions', 'assumpt'), ('explain', 'explain'), ('use', 'use'), ('term', 'term'), ('ab-', 'ab-'), ('duction', 'duction'), ('ALP', 'alp'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('These', 'these'), ('assumptions', 'assumpt'), ('explain', 'explain'), ('use', 'use'), ('term', 'term'), ('ab-', 'ab-'), ('duction', 'duction'), ('ALP', 'alp'), ('.', '.')]

>> Lemmatization: 
 [('These', 'These'), ('assumptions', 'assumption'), ('explain', 'explain'), ('use', 'use'), ('term', 'term'), ('ab-', 'ab-'), ('duction', 'duction'), ('ALP', 'ALP'), ('.', '.')]



============================ Sentence 48 =============================

Abduction is the generation of assumptions  � to explain observations O. 


>> Tokens are: 
 ['Abduction', 'generation', 'assumptions', '�', 'explain', 'observations', 'O', '.']

>> Bigrams are: 
 [('Abduction', 'generation'), ('generation', 'assumptions'), ('assumptions', '�'), ('�', 'explain'), ('explain', 'observations'), ('observations', 'O'), ('O', '.')]

>> Trigrams are: 
 [('Abduction', 'generation', 'assumptions'), ('generation', 'assumptions', '�'), ('assumptions', '�', 'explain'), ('�', 'explain', 'observations'), ('explain', 'observations', 'O'), ('observations', 'O', '.')]

>> POS Tags are: 
 [('Abduction', 'NNP'), ('generation', 'NN'), ('assumptions', 'NNS'), ('�', 'VBP'), ('explain', 'JJ'), ('observations', 'NNS'), ('O', 'NNP'), ('.', '.')]

 (S
  (NP Abduction/NNP generation/NN assumptions/NNS)
  �/VBP
  (NP explain/JJ observations/NNS O/NNP)
  ./.) 


>> Noun Phrases are: 
 ['Abduction generation assumptions', 'explain observations O']

>> Named Entities are: 
 [('GPE', 'Abduction')] 

>> Stemming using Porter Stemmer: 
 [('Abduction', 'abduct'), ('generation', 'gener'), ('assumptions', 'assumpt'), ('�', '�'), ('explain', 'explain'), ('observations', 'observ'), ('O', 'o'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Abduction', 'abduct'), ('generation', 'generat'), ('assumptions', 'assumpt'), ('�', '�'), ('explain', 'explain'), ('observations', 'observ'), ('O', 'o'), ('.', '.')]

>> Lemmatization: 
 [('Abduction', 'Abduction'), ('generation', 'generation'), ('assumptions', 'assumption'), ('�', '�'), ('explain', 'explain'), ('observations', 'observation'), ('O', 'O'), ('.', '.')]



============================ Sentence 49 =============================

For example, if instead of ob- serving fire, I observe there is smoke, and I believe:     there is smoke if there is a fire. 


>> Tokens are: 
 ['For', 'example', ',', 'instead', 'ob-', 'serving', 'fire', ',', 'I', 'observe', 'smoke', ',', 'I', 'believe', ':', 'smoke', 'fire', '.']

>> Bigrams are: 
 [('For', 'example'), ('example', ','), (',', 'instead'), ('instead', 'ob-'), ('ob-', 'serving'), ('serving', 'fire'), ('fire', ','), (',', 'I'), ('I', 'observe'), ('observe', 'smoke'), ('smoke', ','), (',', 'I'), ('I', 'believe'), ('believe', ':'), (':', 'smoke'), ('smoke', 'fire'), ('fire', '.')]

>> Trigrams are: 
 [('For', 'example', ','), ('example', ',', 'instead'), (',', 'instead', 'ob-'), ('instead', 'ob-', 'serving'), ('ob-', 'serving', 'fire'), ('serving', 'fire', ','), ('fire', ',', 'I'), (',', 'I', 'observe'), ('I', 'observe', 'smoke'), ('observe', 'smoke', ','), ('smoke', ',', 'I'), (',', 'I', 'believe'), ('I', 'believe', ':'), ('believe', ':', 'smoke'), (':', 'smoke', 'fire'), ('smoke', 'fire', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('example', 'NN'), (',', ','), ('instead', 'RB'), ('ob-', 'JJ'), ('serving', 'VBG'), ('fire', 'NN'), (',', ','), ('I', 'PRP'), ('observe', 'VBP'), ('smoke', 'NN'), (',', ','), ('I', 'PRP'), ('believe', 'VBP'), (':', ':'), ('smoke', 'NN'), ('fire', 'NN'), ('.', '.')]

 (S
  For/IN
  (NP example/NN)
  ,/,
  instead/RB
  ob-/JJ
  serving/VBG
  (NP fire/NN)
  ,/,
  I/PRP
  observe/VBP
  (NP smoke/NN)
  ,/,
  I/PRP
  believe/VBP
  :/:
  (NP smoke/NN fire/NN)
  ./.) 


>> Noun Phrases are: 
 ['example', 'fire', 'smoke', 'smoke fire']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('instead', 'instead'), ('ob-', 'ob-'), ('serving', 'serv'), ('fire', 'fire'), (',', ','), ('I', 'i'), ('observe', 'observ'), ('smoke', 'smoke'), (',', ','), ('I', 'i'), ('believe', 'believ'), (':', ':'), ('smoke', 'smoke'), ('fire', 'fire'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('instead', 'instead'), ('ob-', 'ob-'), ('serving', 'serv'), ('fire', 'fire'), (',', ','), ('I', 'i'), ('observe', 'observ'), ('smoke', 'smoke'), (',', ','), ('I', 'i'), ('believe', 'believ'), (':', ':'), ('smoke', 'smoke'), ('fire', 'fire'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('example', 'example'), (',', ','), ('instead', 'instead'), ('ob-', 'ob-'), ('serving', 'serving'), ('fire', 'fire'), (',', ','), ('I', 'I'), ('observe', 'observe'), ('smoke', 'smoke'), (',', ','), ('I', 'I'), ('believe', 'believe'), (':', ':'), ('smoke', 'smoke'), ('fire', 'fire'), ('.', '.')]



============================ Sentence 50 =============================

then backwards reasoning from the observation generates an  assumption that there is a fire. 


>> Tokens are: 
 ['backwards', 'reasoning', 'observation', 'generates', 'assumption', 'fire', '.']

>> Bigrams are: 
 [('backwards', 'reasoning'), ('reasoning', 'observation'), ('observation', 'generates'), ('generates', 'assumption'), ('assumption', 'fire'), ('fire', '.')]

>> Trigrams are: 
 [('backwards', 'reasoning', 'observation'), ('reasoning', 'observation', 'generates'), ('observation', 'generates', 'assumption'), ('generates', 'assumption', 'fire'), ('assumption', 'fire', '.')]

>> POS Tags are: 
 [('backwards', 'NNS'), ('reasoning', 'VBG'), ('observation', 'NN'), ('generates', 'NNS'), ('assumption', 'NN'), ('fire', 'NN'), ('.', '.')]

 (S
  (NP backwards/NNS)
  reasoning/VBG
  (NP observation/NN generates/NNS assumption/NN fire/NN)
  ./.) 


>> Noun Phrases are: 
 ['backwards', 'observation generates assumption fire']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('backwards', 'backward'), ('reasoning', 'reason'), ('observation', 'observ'), ('generates', 'gener'), ('assumption', 'assumpt'), ('fire', 'fire'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('backwards', 'backward'), ('reasoning', 'reason'), ('observation', 'observ'), ('generates', 'generat'), ('assumption', 'assumpt'), ('fire', 'fire'), ('.', '.')]

>> Lemmatization: 
 [('backwards', 'backwards'), ('reasoning', 'reasoning'), ('observation', 'observation'), ('generates', 'generates'), ('assumption', 'assumption'), ('fire', 'fire'), ('.', '.')]



============================ Sentence 51 =============================

Forward and backward rea- soning then continue as before. 


>> Tokens are: 
 ['Forward', 'backward', 'rea-', 'soning', 'continue', '.']

>> Bigrams are: 
 [('Forward', 'backward'), ('backward', 'rea-'), ('rea-', 'soning'), ('soning', 'continue'), ('continue', '.')]

>> Trigrams are: 
 [('Forward', 'backward', 'rea-'), ('backward', 'rea-', 'soning'), ('rea-', 'soning', 'continue'), ('soning', 'continue', '.')]

>> POS Tags are: 
 [('Forward', 'RB'), ('backward', 'RB'), ('rea-', 'JJ'), ('soning', 'NN'), ('continue', 'NN'), ('.', '.')]

 (S Forward/RB backward/RB (NP rea-/JJ soning/NN continue/NN) ./.) 


>> Noun Phrases are: 
 ['rea- soning continue']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Forward', 'forward'), ('backward', 'backward'), ('rea-', 'rea-'), ('soning', 'sone'), ('continue', 'continu'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Forward', 'forward'), ('backward', 'backward'), ('rea-', 'rea-'), ('soning', 'sone'), ('continue', 'continu'), ('.', '.')]

>> Lemmatization: 
 [('Forward', 'Forward'), ('backward', 'backward'), ('rea-', 'rea-'), ('soning', 'soning'), ('continue', 'continue'), ('.', '.')]



============================ Sentence 52 =============================

In the model-theoretic and operational semantics, obser- vations O and goals G are treated similarly, by reasoning  forwards and backwards to generate actions and other as- sumptions �, to make G � O true in the minimal model of  the world determined by B � �. 


>> Tokens are: 
 ['In', 'model-theoretic', 'operational', 'semantics', ',', 'obser-', 'vations', 'O', 'goals', 'G', 'treated', 'similarly', ',', 'reasoning', 'forwards', 'backwards', 'generate', 'actions', 'as-', 'sumptions', '�', ',', 'make', 'G', '�', 'O', 'true', 'minimal', 'model', 'world', 'determined', 'B', '�', '�', '.']

>> Bigrams are: 
 [('In', 'model-theoretic'), ('model-theoretic', 'operational'), ('operational', 'semantics'), ('semantics', ','), (',', 'obser-'), ('obser-', 'vations'), ('vations', 'O'), ('O', 'goals'), ('goals', 'G'), ('G', 'treated'), ('treated', 'similarly'), ('similarly', ','), (',', 'reasoning'), ('reasoning', 'forwards'), ('forwards', 'backwards'), ('backwards', 'generate'), ('generate', 'actions'), ('actions', 'as-'), ('as-', 'sumptions'), ('sumptions', '�'), ('�', ','), (',', 'make'), ('make', 'G'), ('G', '�'), ('�', 'O'), ('O', 'true'), ('true', 'minimal'), ('minimal', 'model'), ('model', 'world'), ('world', 'determined'), ('determined', 'B'), ('B', '�'), ('�', '�'), ('�', '.')]

>> Trigrams are: 
 [('In', 'model-theoretic', 'operational'), ('model-theoretic', 'operational', 'semantics'), ('operational', 'semantics', ','), ('semantics', ',', 'obser-'), (',', 'obser-', 'vations'), ('obser-', 'vations', 'O'), ('vations', 'O', 'goals'), ('O', 'goals', 'G'), ('goals', 'G', 'treated'), ('G', 'treated', 'similarly'), ('treated', 'similarly', ','), ('similarly', ',', 'reasoning'), (',', 'reasoning', 'forwards'), ('reasoning', 'forwards', 'backwards'), ('forwards', 'backwards', 'generate'), ('backwards', 'generate', 'actions'), ('generate', 'actions', 'as-'), ('actions', 'as-', 'sumptions'), ('as-', 'sumptions', '�'), ('sumptions', '�', ','), ('�', ',', 'make'), (',', 'make', 'G'), ('make', 'G', '�'), ('G', '�', 'O'), ('�', 'O', 'true'), ('O', 'true', 'minimal'), ('true', 'minimal', 'model'), ('minimal', 'model', 'world'), ('model', 'world', 'determined'), ('world', 'determined', 'B'), ('determined', 'B', '�'), ('B', '�', '�'), ('�', '�', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('model-theoretic', 'JJ'), ('operational', 'JJ'), ('semantics', 'NNS'), (',', ','), ('obser-', 'JJ'), ('vations', 'NNS'), ('O', 'NNP'), ('goals', 'NNS'), ('G', 'NNP'), ('treated', 'VBD'), ('similarly', 'RB'), (',', ','), ('reasoning', 'VBG'), ('forwards', 'NNS'), ('backwards', 'NNS'), ('generate', 'VBP'), ('actions', 'NNS'), ('as-', 'JJ'), ('sumptions', 'NNS'), ('�', 'VBP'), (',', ','), ('make', 'VBP'), ('G', 'NNP'), ('�', 'NNP'), ('O', 'NNP'), ('true', 'JJ'), ('minimal', 'JJ'), ('model', 'NN'), ('world', 'NN'), ('determined', 'VBD'), ('B', 'NNP'), ('�', 'NNP'), ('�', 'NNP'), ('.', '.')]

 (S
  In/IN
  (NP model-theoretic/JJ operational/JJ semantics/NNS)
  ,/,
  (NP obser-/JJ vations/NNS O/NNP goals/NNS G/NNP)
  treated/VBD
  similarly/RB
  ,/,
  reasoning/VBG
  (NP forwards/NNS backwards/NNS)
  generate/VBP
  (NP actions/NNS)
  (NP as-/JJ sumptions/NNS)
  �/VBP
  ,/,
  make/VBP
  (NP G/NNP �/NNP O/NNP)
  (NP true/JJ minimal/JJ model/NN world/NN)
  determined/VBD
  (NP B/NNP �/NNP �/NNP)
  ./.) 


>> Noun Phrases are: 
 ['model-theoretic operational semantics', 'obser- vations O goals G', 'forwards backwards', 'actions', 'as- sumptions', 'G � O', 'true minimal model world', 'B � �']

>> Named Entities are: 
 [('PERSON', 'G')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('model-theoretic', 'model-theoret'), ('operational', 'oper'), ('semantics', 'semant'), (',', ','), ('obser-', 'obser-'), ('vations', 'vation'), ('O', 'o'), ('goals', 'goal'), ('G', 'g'), ('treated', 'treat'), ('similarly', 'similarli'), (',', ','), ('reasoning', 'reason'), ('forwards', 'forward'), ('backwards', 'backward'), ('generate', 'gener'), ('actions', 'action'), ('as-', 'as-'), ('sumptions', 'sumption'), ('�', '�'), (',', ','), ('make', 'make'), ('G', 'g'), ('�', '�'), ('O', 'o'), ('true', 'true'), ('minimal', 'minim'), ('model', 'model'), ('world', 'world'), ('determined', 'determin'), ('B', 'b'), ('�', '�'), ('�', '�'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('model-theoretic', 'model-theoret'), ('operational', 'oper'), ('semantics', 'semant'), (',', ','), ('obser-', 'obser-'), ('vations', 'vation'), ('O', 'o'), ('goals', 'goal'), ('G', 'g'), ('treated', 'treat'), ('similarly', 'similar'), (',', ','), ('reasoning', 'reason'), ('forwards', 'forward'), ('backwards', 'backward'), ('generate', 'generat'), ('actions', 'action'), ('as-', 'as-'), ('sumptions', 'sumption'), ('�', '�'), (',', ','), ('make', 'make'), ('G', 'g'), ('�', '�'), ('O', 'o'), ('true', 'true'), ('minimal', 'minim'), ('model', 'model'), ('world', 'world'), ('determined', 'determin'), ('B', 'b'), ('�', '�'), ('�', '�'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('model-theoretic', 'model-theoretic'), ('operational', 'operational'), ('semantics', 'semantics'), (',', ','), ('obser-', 'obser-'), ('vations', 'vations'), ('O', 'O'), ('goals', 'goal'), ('G', 'G'), ('treated', 'treated'), ('similarly', 'similarly'), (',', ','), ('reasoning', 'reasoning'), ('forwards', 'forward'), ('backwards', 'backwards'), ('generate', 'generate'), ('actions', 'action'), ('as-', 'as-'), ('sumptions', 'sumptions'), ('�', '�'), (',', ','), ('make', 'make'), ('G', 'G'), ('�', '�'), ('O', 'O'), ('true', 'true'), ('minimal', 'minimal'), ('model', 'model'), ('world', 'world'), ('determined', 'determined'), ('B', 'B'), ('�', '�'), ('�', '�'), ('.', '.')]



============================ Sentence 53 =============================

In the example above,  given O = {there is smoke}, then � = {there is a fire, I press  the alarm button} together with B makes G and O both true. 


>> Tokens are: 
 ['In', 'example', ',', 'given', 'O', '=', '{', 'smoke', '}', ',', '�', '=', '{', 'fire', ',', 'I', 'press', 'alarm', 'button', '}', 'together', 'B', 'makes', 'G', 'O', 'true', '.']

>> Bigrams are: 
 [('In', 'example'), ('example', ','), (',', 'given'), ('given', 'O'), ('O', '='), ('=', '{'), ('{', 'smoke'), ('smoke', '}'), ('}', ','), (',', '�'), ('�', '='), ('=', '{'), ('{', 'fire'), ('fire', ','), (',', 'I'), ('I', 'press'), ('press', 'alarm'), ('alarm', 'button'), ('button', '}'), ('}', 'together'), ('together', 'B'), ('B', 'makes'), ('makes', 'G'), ('G', 'O'), ('O', 'true'), ('true', '.')]

>> Trigrams are: 
 [('In', 'example', ','), ('example', ',', 'given'), (',', 'given', 'O'), ('given', 'O', '='), ('O', '=', '{'), ('=', '{', 'smoke'), ('{', 'smoke', '}'), ('smoke', '}', ','), ('}', ',', '�'), (',', '�', '='), ('�', '=', '{'), ('=', '{', 'fire'), ('{', 'fire', ','), ('fire', ',', 'I'), (',', 'I', 'press'), ('I', 'press', 'alarm'), ('press', 'alarm', 'button'), ('alarm', 'button', '}'), ('button', '}', 'together'), ('}', 'together', 'B'), ('together', 'B', 'makes'), ('B', 'makes', 'G'), ('makes', 'G', 'O'), ('G', 'O', 'true'), ('O', 'true', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('example', 'NN'), (',', ','), ('given', 'VBN'), ('O', 'NNP'), ('=', 'NNP'), ('{', '('), ('smoke', 'NN'), ('}', ')'), (',', ','), ('�', 'NNP'), ('=', 'NNP'), ('{', '('), ('fire', 'NN'), (',', ','), ('I', 'PRP'), ('press', 'VBP'), ('alarm', 'JJ'), ('button', 'NN'), ('}', ')'), ('together', 'RB'), ('B', 'NNP'), ('makes', 'VBZ'), ('G', 'NNP'), ('O', 'NNP'), ('true', 'JJ'), ('.', '.')]

 (S
  In/IN
  (NP example/NN)
  ,/,
  given/VBN
  (NP O/NNP =/NNP)
  {/(
  (NP smoke/NN)
  }/)
  ,/,
  (NP �/NNP =/NNP)
  {/(
  (NP fire/NN)
  ,/,
  I/PRP
  press/VBP
  (NP alarm/JJ button/NN)
  }/)
  together/RB
  (NP B/NNP)
  makes/VBZ
  (NP G/NNP O/NNP)
  true/JJ
  ./.) 


>> Noun Phrases are: 
 ['example', 'O =', 'smoke', '� =', 'fire', 'alarm button', 'B', 'G O']

>> Named Entities are: 
 [('PERSON', 'O'), ('PERSON', 'G O')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('example', 'exampl'), (',', ','), ('given', 'given'), ('O', 'o'), ('=', '='), ('{', '{'), ('smoke', 'smoke'), ('}', '}'), (',', ','), ('�', '�'), ('=', '='), ('{', '{'), ('fire', 'fire'), (',', ','), ('I', 'i'), ('press', 'press'), ('alarm', 'alarm'), ('button', 'button'), ('}', '}'), ('together', 'togeth'), ('B', 'b'), ('makes', 'make'), ('G', 'g'), ('O', 'o'), ('true', 'true'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('example', 'exampl'), (',', ','), ('given', 'given'), ('O', 'o'), ('=', '='), ('{', '{'), ('smoke', 'smoke'), ('}', '}'), (',', ','), ('�', '�'), ('=', '='), ('{', '{'), ('fire', 'fire'), (',', ','), ('I', 'i'), ('press', 'press'), ('alarm', 'alarm'), ('button', 'button'), ('}', '}'), ('together', 'togeth'), ('B', 'b'), ('makes', 'make'), ('G', 'g'), ('O', 'o'), ('true', 'true'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('example', 'example'), (',', ','), ('given', 'given'), ('O', 'O'), ('=', '='), ('{', '{'), ('smoke', 'smoke'), ('}', '}'), (',', ','), ('�', '�'), ('=', '='), ('{', '{'), ('fire', 'fire'), (',', ','), ('I', 'I'), ('press', 'press'), ('alarm', 'alarm'), ('button', 'button'), ('}', '}'), ('together', 'together'), ('B', 'B'), ('makes', 'make'), ('G', 'G'), ('O', 'O'), ('true', 'true'), ('.', '.')]



============================ Sentence 54 =============================

The operational semantics is sound with respect to the  model-theoretic semantics. 


>> Tokens are: 
 ['The', 'operational', 'semantics', 'sound', 'respect', 'model-theoretic', 'semantics', '.']

>> Bigrams are: 
 [('The', 'operational'), ('operational', 'semantics'), ('semantics', 'sound'), ('sound', 'respect'), ('respect', 'model-theoretic'), ('model-theoretic', 'semantics'), ('semantics', '.')]

>> Trigrams are: 
 [('The', 'operational', 'semantics'), ('operational', 'semantics', 'sound'), ('semantics', 'sound', 'respect'), ('sound', 'respect', 'model-theoretic'), ('respect', 'model-theoretic', 'semantics'), ('model-theoretic', 'semantics', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('operational', 'JJ'), ('semantics', 'NNS'), ('sound', 'JJ'), ('respect', 'JJ'), ('model-theoretic', 'JJ'), ('semantics', 'NNS'), ('.', '.')]

 (S
  (NP The/DT operational/JJ semantics/NNS)
  (NP sound/JJ respect/JJ model-theoretic/JJ semantics/NNS)
  ./.) 


>> Noun Phrases are: 
 ['The operational semantics', 'sound respect model-theoretic semantics']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('operational', 'oper'), ('semantics', 'semant'), ('sound', 'sound'), ('respect', 'respect'), ('model-theoretic', 'model-theoret'), ('semantics', 'semant'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('operational', 'oper'), ('semantics', 'semant'), ('sound', 'sound'), ('respect', 'respect'), ('model-theoretic', 'model-theoret'), ('semantics', 'semant'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('operational', 'operational'), ('semantics', 'semantics'), ('sound', 'sound'), ('respect', 'respect'), ('model-theoretic', 'model-theoretic'), ('semantics', 'semantics'), ('.', '.')]



============================ Sentence 55 =============================

With modest assumptions, it is  also complete. 


>> Tokens are: 
 ['With', 'modest', 'assumptions', ',', 'also', 'complete', '.']

>> Bigrams are: 
 [('With', 'modest'), ('modest', 'assumptions'), ('assumptions', ','), (',', 'also'), ('also', 'complete'), ('complete', '.')]

>> Trigrams are: 
 [('With', 'modest', 'assumptions'), ('modest', 'assumptions', ','), ('assumptions', ',', 'also'), (',', 'also', 'complete'), ('also', 'complete', '.')]

>> POS Tags are: 
 [('With', 'IN'), ('modest', 'JJ'), ('assumptions', 'NNS'), (',', ','), ('also', 'RB'), ('complete', 'JJ'), ('.', '.')]

 (S
  With/IN
  (NP modest/JJ assumptions/NNS)
  ,/,
  also/RB
  complete/JJ
  ./.) 


>> Noun Phrases are: 
 ['modest assumptions']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('With', 'with'), ('modest', 'modest'), ('assumptions', 'assumpt'), (',', ','), ('also', 'also'), ('complete', 'complet'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('With', 'with'), ('modest', 'modest'), ('assumptions', 'assumpt'), (',', ','), ('also', 'also'), ('complete', 'complet'), ('.', '.')]

>> Lemmatization: 
 [('With', 'With'), ('modest', 'modest'), ('assumptions', 'assumption'), (',', ','), ('also', 'also'), ('complete', 'complete'), ('.', '.')]



============================ Sentence 56 =============================

2.2 Choosing the Best Solution    There can be several, alternative � that, together with B,  make G and O both true. 


>> Tokens are: 
 ['2.2', 'Choosing', 'Best', 'Solution', 'There', 'several', ',', 'alternative', '�', ',', 'together', 'B', ',', 'make', 'G', 'O', 'true', '.']

>> Bigrams are: 
 [('2.2', 'Choosing'), ('Choosing', 'Best'), ('Best', 'Solution'), ('Solution', 'There'), ('There', 'several'), ('several', ','), (',', 'alternative'), ('alternative', '�'), ('�', ','), (',', 'together'), ('together', 'B'), ('B', ','), (',', 'make'), ('make', 'G'), ('G', 'O'), ('O', 'true'), ('true', '.')]

>> Trigrams are: 
 [('2.2', 'Choosing', 'Best'), ('Choosing', 'Best', 'Solution'), ('Best', 'Solution', 'There'), ('Solution', 'There', 'several'), ('There', 'several', ','), ('several', ',', 'alternative'), (',', 'alternative', '�'), ('alternative', '�', ','), ('�', ',', 'together'), (',', 'together', 'B'), ('together', 'B', ','), ('B', ',', 'make'), (',', 'make', 'G'), ('make', 'G', 'O'), ('G', 'O', 'true'), ('O', 'true', '.')]

>> POS Tags are: 
 [('2.2', 'CD'), ('Choosing', 'VBG'), ('Best', 'NNP'), ('Solution', 'NNP'), ('There', 'EX'), ('several', 'JJ'), (',', ','), ('alternative', 'JJ'), ('�', 'NN'), (',', ','), ('together', 'RB'), ('B', 'NNP'), (',', ','), ('make', 'VBP'), ('G', 'NNP'), ('O', 'NNP'), ('true', 'JJ'), ('.', '.')]

 (S
  2.2/CD
  Choosing/VBG
  (NP Best/NNP Solution/NNP)
  There/EX
  several/JJ
  ,/,
  (NP alternative/JJ �/NN)
  ,/,
  together/RB
  (NP B/NNP)
  ,/,
  make/VBP
  (NP G/NNP O/NNP)
  true/JJ
  ./.) 


>> Noun Phrases are: 
 ['Best Solution', 'alternative �', 'B', 'G O']

>> Named Entities are: 
 [('PERSON', 'Best Solution'), ('PERSON', 'G O')] 

>> Stemming using Porter Stemmer: 
 [('2.2', '2.2'), ('Choosing', 'choos'), ('Best', 'best'), ('Solution', 'solut'), ('There', 'there'), ('several', 'sever'), (',', ','), ('alternative', 'altern'), ('�', '�'), (',', ','), ('together', 'togeth'), ('B', 'b'), (',', ','), ('make', 'make'), ('G', 'g'), ('O', 'o'), ('true', 'true'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('2.2', '2.2'), ('Choosing', 'choos'), ('Best', 'best'), ('Solution', 'solut'), ('There', 'there'), ('several', 'sever'), (',', ','), ('alternative', 'altern'), ('�', '�'), (',', ','), ('together', 'togeth'), ('B', 'b'), (',', ','), ('make', 'make'), ('G', 'g'), ('O', 'o'), ('true', 'true'), ('.', '.')]

>> Lemmatization: 
 [('2.2', '2.2'), ('Choosing', 'Choosing'), ('Best', 'Best'), ('Solution', 'Solution'), ('There', 'There'), ('several', 'several'), (',', ','), ('alternative', 'alternative'), ('�', '�'), (',', ','), ('together', 'together'), ('B', 'B'), (',', ','), ('make', 'make'), ('G', 'G'), ('O', 'O'), ('true', 'true'), ('.', '.')]



============================ Sentence 57 =============================

These � can have different values,  and the challenge for an intelligent agent is to find the best  � possible within the computational resources available. 


>> Tokens are: 
 ['These', '�', 'different', 'values', ',', 'challenge', 'intelligent', 'agent', 'find', 'best', '�', 'possible', 'within', 'computational', 'resources', 'available', '.']

>> Bigrams are: 
 [('These', '�'), ('�', 'different'), ('different', 'values'), ('values', ','), (',', 'challenge'), ('challenge', 'intelligent'), ('intelligent', 'agent'), ('agent', 'find'), ('find', 'best'), ('best', '�'), ('�', 'possible'), ('possible', 'within'), ('within', 'computational'), ('computational', 'resources'), ('resources', 'available'), ('available', '.')]

>> Trigrams are: 
 [('These', '�', 'different'), ('�', 'different', 'values'), ('different', 'values', ','), ('values', ',', 'challenge'), (',', 'challenge', 'intelligent'), ('challenge', 'intelligent', 'agent'), ('intelligent', 'agent', 'find'), ('agent', 'find', 'best'), ('find', 'best', '�'), ('best', '�', 'possible'), ('�', 'possible', 'within'), ('possible', 'within', 'computational'), ('within', 'computational', 'resources'), ('computational', 'resources', 'available'), ('resources', 'available', '.')]

>> POS Tags are: 
 [('These', 'DT'), ('�', 'CD'), ('different', 'JJ'), ('values', 'NNS'), (',', ','), ('challenge', 'VBP'), ('intelligent', 'JJ'), ('agent', 'NN'), ('find', 'VB'), ('best', 'JJS'), ('�', 'NN'), ('possible', 'JJ'), ('within', 'IN'), ('computational', 'JJ'), ('resources', 'NNS'), ('available', 'JJ'), ('.', '.')]

 (S
  These/DT
  �/CD
  (NP different/JJ values/NNS)
  ,/,
  challenge/VBP
  (NP intelligent/JJ agent/NN)
  find/VB
  best/JJS
  (NP �/NN)
  possible/JJ
  within/IN
  (NP computational/JJ resources/NNS)
  available/JJ
  ./.) 


>> Noun Phrases are: 
 ['different values', 'intelligent agent', '�', 'computational resources']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('These', 'these'), ('�', '�'), ('different', 'differ'), ('values', 'valu'), (',', ','), ('challenge', 'challeng'), ('intelligent', 'intellig'), ('agent', 'agent'), ('find', 'find'), ('best', 'best'), ('�', '�'), ('possible', 'possibl'), ('within', 'within'), ('computational', 'comput'), ('resources', 'resourc'), ('available', 'avail'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('These', 'these'), ('�', '�'), ('different', 'differ'), ('values', 'valu'), (',', ','), ('challenge', 'challeng'), ('intelligent', 'intellig'), ('agent', 'agent'), ('find', 'find'), ('best', 'best'), ('�', '�'), ('possible', 'possibl'), ('within', 'within'), ('computational', 'comput'), ('resources', 'resourc'), ('available', 'avail'), ('.', '.')]

>> Lemmatization: 
 [('These', 'These'), ('�', '�'), ('different', 'different'), ('values', 'value'), (',', ','), ('challenge', 'challenge'), ('intelligent', 'intelligent'), ('agent', 'agent'), ('find', 'find'), ('best', 'best'), ('�', '�'), ('possible', 'possible'), ('within', 'within'), ('computational', 'computational'), ('resources', 'resource'), ('available', 'available'), ('.', '.')]



============================ Sentence 58 =============================

In classical decision theory, the value of an action is  measured by the expected utility of its consequences. 


>> Tokens are: 
 ['In', 'classical', 'decision', 'theory', ',', 'value', 'action', 'measured', 'expected', 'utility', 'consequences', '.']

>> Bigrams are: 
 [('In', 'classical'), ('classical', 'decision'), ('decision', 'theory'), ('theory', ','), (',', 'value'), ('value', 'action'), ('action', 'measured'), ('measured', 'expected'), ('expected', 'utility'), ('utility', 'consequences'), ('consequences', '.')]

>> Trigrams are: 
 [('In', 'classical', 'decision'), ('classical', 'decision', 'theory'), ('decision', 'theory', ','), ('theory', ',', 'value'), (',', 'value', 'action'), ('value', 'action', 'measured'), ('action', 'measured', 'expected'), ('measured', 'expected', 'utility'), ('expected', 'utility', 'consequences'), ('utility', 'consequences', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('classical', 'JJ'), ('decision', 'NN'), ('theory', 'NN'), (',', ','), ('value', 'NN'), ('action', 'NN'), ('measured', 'VBD'), ('expected', 'JJ'), ('utility', 'NN'), ('consequences', 'NNS'), ('.', '.')]

 (S
  In/IN
  (NP classical/JJ decision/NN theory/NN)
  ,/,
  (NP value/NN action/NN)
  measured/VBD
  (NP expected/JJ utility/NN consequences/NNS)
  ./.) 


>> Noun Phrases are: 
 ['classical decision theory', 'value action', 'expected utility consequences']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('classical', 'classic'), ('decision', 'decis'), ('theory', 'theori'), (',', ','), ('value', 'valu'), ('action', 'action'), ('measured', 'measur'), ('expected', 'expect'), ('utility', 'util'), ('consequences', 'consequ'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('classical', 'classic'), ('decision', 'decis'), ('theory', 'theori'), (',', ','), ('value', 'valu'), ('action', 'action'), ('measured', 'measur'), ('expected', 'expect'), ('utility', 'util'), ('consequences', 'consequ'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('classical', 'classical'), ('decision', 'decision'), ('theory', 'theory'), (',', ','), ('value', 'value'), ('action', 'action'), ('measured', 'measured'), ('expected', 'expected'), ('utility', 'utility'), ('consequences', 'consequence'), ('.', '.')]



============================ Sentence 59 =============================

In the  philosophy of science, the value of an explanation is meas- ured similarly in terms of its probability and explanatory  power. 


>> Tokens are: 
 ['In', 'philosophy', 'science', ',', 'value', 'explanation', 'meas-', 'ured', 'similarly', 'terms', 'probability', 'explanatory', 'power', '.']

>> Bigrams are: 
 [('In', 'philosophy'), ('philosophy', 'science'), ('science', ','), (',', 'value'), ('value', 'explanation'), ('explanation', 'meas-'), ('meas-', 'ured'), ('ured', 'similarly'), ('similarly', 'terms'), ('terms', 'probability'), ('probability', 'explanatory'), ('explanatory', 'power'), ('power', '.')]

>> Trigrams are: 
 [('In', 'philosophy', 'science'), ('philosophy', 'science', ','), ('science', ',', 'value'), (',', 'value', 'explanation'), ('value', 'explanation', 'meas-'), ('explanation', 'meas-', 'ured'), ('meas-', 'ured', 'similarly'), ('ured', 'similarly', 'terms'), ('similarly', 'terms', 'probability'), ('terms', 'probability', 'explanatory'), ('probability', 'explanatory', 'power'), ('explanatory', 'power', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('philosophy', 'NN'), ('science', 'NN'), (',', ','), ('value', 'NN'), ('explanation', 'NN'), ('meas-', 'NN'), ('ured', 'VBD'), ('similarly', 'RB'), ('terms', 'NNS'), ('probability', 'NN'), ('explanatory', 'NN'), ('power', 'NN'), ('.', '.')]

 (S
  In/IN
  (NP philosophy/NN science/NN)
  ,/,
  (NP value/NN explanation/NN meas-/NN)
  ured/VBD
  similarly/RB
  (NP terms/NNS probability/NN explanatory/NN power/NN)
  ./.) 


>> Noun Phrases are: 
 ['philosophy science', 'value explanation meas-', 'terms probability explanatory power']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('philosophy', 'philosophi'), ('science', 'scienc'), (',', ','), ('value', 'valu'), ('explanation', 'explan'), ('meas-', 'meas-'), ('ured', 'ure'), ('similarly', 'similarli'), ('terms', 'term'), ('probability', 'probabl'), ('explanatory', 'explanatori'), ('power', 'power'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('philosophy', 'philosophi'), ('science', 'scienc'), (',', ','), ('value', 'valu'), ('explanation', 'explan'), ('meas-', 'meas-'), ('ured', 'ure'), ('similarly', 'similar'), ('terms', 'term'), ('probability', 'probabl'), ('explanatory', 'explanatori'), ('power', 'power'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('philosophy', 'philosophy'), ('science', 'science'), (',', ','), ('value', 'value'), ('explanation', 'explanation'), ('meas-', 'meas-'), ('ured', 'ured'), ('similarly', 'similarly'), ('terms', 'term'), ('probability', 'probability'), ('explanatory', 'explanatory'), ('power', 'power'), ('.', '.')]



============================ Sentence 60 =============================

(The more observations explained the better.) 


>> Tokens are: 
 ['(', 'The', 'observations', 'explained', 'better', '.', ')']

>> Bigrams are: 
 [('(', 'The'), ('The', 'observations'), ('observations', 'explained'), ('explained', 'better'), ('better', '.'), ('.', ')')]

>> Trigrams are: 
 [('(', 'The', 'observations'), ('The', 'observations', 'explained'), ('observations', 'explained', 'better'), ('explained', 'better', '.'), ('better', '.', ')')]

>> POS Tags are: 
 [('(', '('), ('The', 'DT'), ('observations', 'NNS'), ('explained', 'VBD'), ('better', 'RBR'), ('.', '.'), (')', ')')]

 (S (/( (NP The/DT observations/NNS) explained/VBD better/RBR ./. )/)) 


>> Noun Phrases are: 
 ['The observations']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('(', '('), ('The', 'the'), ('observations', 'observ'), ('explained', 'explain'), ('better', 'better'), ('.', '.'), (')', ')')]

>> Stemming using Snowball Stemmer: 
 [('(', '('), ('The', 'the'), ('observations', 'observ'), ('explained', 'explain'), ('better', 'better'), ('.', '.'), (')', ')')]

>> Lemmatization: 
 [('(', '('), ('The', 'The'), ('observations', 'observation'), ('explained', 'explained'), ('better', 'better'), ('.', '.'), (')', ')')]



============================ Sentence 61 =============================

In  ALP agents, the same measures can be used to evaluate both  candidate actions and candidate explanations. 


>> Tokens are: 
 ['In', 'ALP', 'agents', ',', 'measures', 'used', 'evaluate', 'candidate', 'actions', 'candidate', 'explanations', '.']

>> Bigrams are: 
 [('In', 'ALP'), ('ALP', 'agents'), ('agents', ','), (',', 'measures'), ('measures', 'used'), ('used', 'evaluate'), ('evaluate', 'candidate'), ('candidate', 'actions'), ('actions', 'candidate'), ('candidate', 'explanations'), ('explanations', '.')]

>> Trigrams are: 
 [('In', 'ALP', 'agents'), ('ALP', 'agents', ','), ('agents', ',', 'measures'), (',', 'measures', 'used'), ('measures', 'used', 'evaluate'), ('used', 'evaluate', 'candidate'), ('evaluate', 'candidate', 'actions'), ('candidate', 'actions', 'candidate'), ('actions', 'candidate', 'explanations'), ('candidate', 'explanations', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('ALP', 'NNP'), ('agents', 'NNS'), (',', ','), ('measures', 'NNS'), ('used', 'VBD'), ('evaluate', 'JJ'), ('candidate', 'NN'), ('actions', 'NNS'), ('candidate', 'VBP'), ('explanations', 'NNS'), ('.', '.')]

 (S
  In/IN
  (NP ALP/NNP agents/NNS)
  ,/,
  (NP measures/NNS)
  used/VBD
  (NP evaluate/JJ candidate/NN actions/NNS)
  candidate/VBP
  (NP explanations/NNS)
  ./.) 


>> Noun Phrases are: 
 ['ALP agents', 'measures', 'evaluate candidate actions', 'explanations']

>> Named Entities are: 
 [('ORGANIZATION', 'ALP')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('ALP', 'alp'), ('agents', 'agent'), (',', ','), ('measures', 'measur'), ('used', 'use'), ('evaluate', 'evalu'), ('candidate', 'candid'), ('actions', 'action'), ('candidate', 'candid'), ('explanations', 'explan'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('ALP', 'alp'), ('agents', 'agent'), (',', ','), ('measures', 'measur'), ('used', 'use'), ('evaluate', 'evalu'), ('candidate', 'candid'), ('actions', 'action'), ('candidate', 'candid'), ('explanations', 'explan'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('ALP', 'ALP'), ('agents', 'agent'), (',', ','), ('measures', 'measure'), ('used', 'used'), ('evaluate', 'evaluate'), ('candidate', 'candidate'), ('actions', 'action'), ('candidate', 'candidate'), ('explanations', 'explanation'), ('.', '.')]



============================ Sentence 62 =============================

In both cases,  candidate assumptions in � are evaluated by reasoning for- wards to generate consequences of the assumptions in �. 


>> Tokens are: 
 ['In', 'cases', ',', 'candidate', 'assumptions', '�', 'evaluated', 'reasoning', 'for-', 'wards', 'generate', 'consequences', 'assumptions', '�', '.']

>> Bigrams are: 
 [('In', 'cases'), ('cases', ','), (',', 'candidate'), ('candidate', 'assumptions'), ('assumptions', '�'), ('�', 'evaluated'), ('evaluated', 'reasoning'), ('reasoning', 'for-'), ('for-', 'wards'), ('wards', 'generate'), ('generate', 'consequences'), ('consequences', 'assumptions'), ('assumptions', '�'), ('�', '.')]

>> Trigrams are: 
 [('In', 'cases', ','), ('cases', ',', 'candidate'), (',', 'candidate', 'assumptions'), ('candidate', 'assumptions', '�'), ('assumptions', '�', 'evaluated'), ('�', 'evaluated', 'reasoning'), ('evaluated', 'reasoning', 'for-'), ('reasoning', 'for-', 'wards'), ('for-', 'wards', 'generate'), ('wards', 'generate', 'consequences'), ('generate', 'consequences', 'assumptions'), ('consequences', 'assumptions', '�'), ('assumptions', '�', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('cases', 'NNS'), (',', ','), ('candidate', 'NN'), ('assumptions', 'NNS'), ('�', 'VBP'), ('evaluated', 'VBN'), ('reasoning', 'VBG'), ('for-', 'JJ'), ('wards', 'NNS'), ('generate', 'NN'), ('consequences', 'NNS'), ('assumptions', 'NNS'), ('�', 'VBP'), ('.', '.')]

 (S
  In/IN
  (NP cases/NNS)
  ,/,
  (NP candidate/NN assumptions/NNS)
  �/VBP
  evaluated/VBN
  reasoning/VBG
  (NP for-/JJ wards/NNS generate/NN consequences/NNS assumptions/NNS)
  �/VBP
  ./.) 


>> Noun Phrases are: 
 ['cases', 'candidate assumptions', 'for- wards generate consequences assumptions']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('cases', 'case'), (',', ','), ('candidate', 'candid'), ('assumptions', 'assumpt'), ('�', '�'), ('evaluated', 'evalu'), ('reasoning', 'reason'), ('for-', 'for-'), ('wards', 'ward'), ('generate', 'gener'), ('consequences', 'consequ'), ('assumptions', 'assumpt'), ('�', '�'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('cases', 'case'), (',', ','), ('candidate', 'candid'), ('assumptions', 'assumpt'), ('�', '�'), ('evaluated', 'evalu'), ('reasoning', 'reason'), ('for-', 'for-'), ('wards', 'ward'), ('generate', 'generat'), ('consequences', 'consequ'), ('assumptions', 'assumpt'), ('�', '�'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('cases', 'case'), (',', ','), ('candidate', 'candidate'), ('assumptions', 'assumption'), ('�', '�'), ('evaluated', 'evaluated'), ('reasoning', 'reasoning'), ('for-', 'for-'), ('wards', 'ward'), ('generate', 'generate'), ('consequences', 'consequence'), ('assumptions', 'assumption'), ('�', '�'), ('.', '.')]



============================ Sentence 63 =============================

In ALP agents, the task of finding the best � is incorpo- rated into the search strategy for reasoning backwards to  generate �, using some form of best-first search, like A* or  branch-and-bound. 


>> Tokens are: 
 ['In', 'ALP', 'agents', ',', 'task', 'finding', 'best', '�', 'incorpo-', 'rated', 'search', 'strategy', 'reasoning', 'backwards', 'generate', '�', ',', 'using', 'form', 'best-first', 'search', ',', 'like', 'A', '*', 'branch-and-bound', '.']

>> Bigrams are: 
 [('In', 'ALP'), ('ALP', 'agents'), ('agents', ','), (',', 'task'), ('task', 'finding'), ('finding', 'best'), ('best', '�'), ('�', 'incorpo-'), ('incorpo-', 'rated'), ('rated', 'search'), ('search', 'strategy'), ('strategy', 'reasoning'), ('reasoning', 'backwards'), ('backwards', 'generate'), ('generate', '�'), ('�', ','), (',', 'using'), ('using', 'form'), ('form', 'best-first'), ('best-first', 'search'), ('search', ','), (',', 'like'), ('like', 'A'), ('A', '*'), ('*', 'branch-and-bound'), ('branch-and-bound', '.')]

>> Trigrams are: 
 [('In', 'ALP', 'agents'), ('ALP', 'agents', ','), ('agents', ',', 'task'), (',', 'task', 'finding'), ('task', 'finding', 'best'), ('finding', 'best', '�'), ('best', '�', 'incorpo-'), ('�', 'incorpo-', 'rated'), ('incorpo-', 'rated', 'search'), ('rated', 'search', 'strategy'), ('search', 'strategy', 'reasoning'), ('strategy', 'reasoning', 'backwards'), ('reasoning', 'backwards', 'generate'), ('backwards', 'generate', '�'), ('generate', '�', ','), ('�', ',', 'using'), (',', 'using', 'form'), ('using', 'form', 'best-first'), ('form', 'best-first', 'search'), ('best-first', 'search', ','), ('search', ',', 'like'), (',', 'like', 'A'), ('like', 'A', '*'), ('A', '*', 'branch-and-bound'), ('*', 'branch-and-bound', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('ALP', 'NNP'), ('agents', 'NNS'), (',', ','), ('task', 'NN'), ('finding', 'VBG'), ('best', 'JJS'), ('�', 'JJ'), ('incorpo-', 'NN'), ('rated', 'VBN'), ('search', 'JJ'), ('strategy', 'NN'), ('reasoning', 'VBG'), ('backwards', 'NNS'), ('generate', 'NN'), ('�', 'NN'), (',', ','), ('using', 'VBG'), ('form', 'JJ'), ('best-first', 'JJ'), ('search', 'NN'), (',', ','), ('like', 'IN'), ('A', 'DT'), ('*', 'JJ'), ('branch-and-bound', 'NN'), ('.', '.')]

 (S
  In/IN
  (NP ALP/NNP agents/NNS)
  ,/,
  (NP task/NN)
  finding/VBG
  best/JJS
  (NP �/JJ incorpo-/NN)
  rated/VBN
  (NP search/JJ strategy/NN)
  reasoning/VBG
  (NP backwards/NNS generate/NN �/NN)
  ,/,
  using/VBG
  (NP form/JJ best-first/JJ search/NN)
  ,/,
  like/IN
  (NP A/DT */JJ branch-and-bound/NN)
  ./.) 


>> Noun Phrases are: 
 ['ALP agents', 'task', '� incorpo-', 'search strategy', 'backwards generate �', 'form best-first search', 'A * branch-and-bound']

>> Named Entities are: 
 [('ORGANIZATION', 'ALP')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('ALP', 'alp'), ('agents', 'agent'), (',', ','), ('task', 'task'), ('finding', 'find'), ('best', 'best'), ('�', '�'), ('incorpo-', 'incorpo-'), ('rated', 'rate'), ('search', 'search'), ('strategy', 'strategi'), ('reasoning', 'reason'), ('backwards', 'backward'), ('generate', 'gener'), ('�', '�'), (',', ','), ('using', 'use'), ('form', 'form'), ('best-first', 'best-first'), ('search', 'search'), (',', ','), ('like', 'like'), ('A', 'a'), ('*', '*'), ('branch-and-bound', 'branch-and-bound'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('ALP', 'alp'), ('agents', 'agent'), (',', ','), ('task', 'task'), ('finding', 'find'), ('best', 'best'), ('�', '�'), ('incorpo-', 'incorpo-'), ('rated', 'rate'), ('search', 'search'), ('strategy', 'strategi'), ('reasoning', 'reason'), ('backwards', 'backward'), ('generate', 'generat'), ('�', '�'), (',', ','), ('using', 'use'), ('form', 'form'), ('best-first', 'best-first'), ('search', 'search'), (',', ','), ('like', 'like'), ('A', 'a'), ('*', '*'), ('branch-and-bound', 'branch-and-bound'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('ALP', 'ALP'), ('agents', 'agent'), (',', ','), ('task', 'task'), ('finding', 'finding'), ('best', 'best'), ('�', '�'), ('incorpo-', 'incorpo-'), ('rated', 'rated'), ('search', 'search'), ('strategy', 'strategy'), ('reasoning', 'reasoning'), ('backwards', 'backwards'), ('generate', 'generate'), ('�', '�'), (',', ','), ('using', 'using'), ('form', 'form'), ('best-first', 'best-first'), ('search', 'search'), (',', ','), ('like', 'like'), ('A', 'A'), ('*', '*'), ('branch-and-bound', 'branch-and-bound'), ('.', '.')]



============================ Sentence 64 =============================

This task is analogous to the much sim- pler problem of conflict resolution in production systems. 


>> Tokens are: 
 ['This', 'task', 'analogous', 'much', 'sim-', 'pler', 'problem', 'conflict', 'resolution', 'production', 'systems', '.']

>> Bigrams are: 
 [('This', 'task'), ('task', 'analogous'), ('analogous', 'much'), ('much', 'sim-'), ('sim-', 'pler'), ('pler', 'problem'), ('problem', 'conflict'), ('conflict', 'resolution'), ('resolution', 'production'), ('production', 'systems'), ('systems', '.')]

>> Trigrams are: 
 [('This', 'task', 'analogous'), ('task', 'analogous', 'much'), ('analogous', 'much', 'sim-'), ('much', 'sim-', 'pler'), ('sim-', 'pler', 'problem'), ('pler', 'problem', 'conflict'), ('problem', 'conflict', 'resolution'), ('conflict', 'resolution', 'production'), ('resolution', 'production', 'systems'), ('production', 'systems', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('task', 'NN'), ('analogous', 'JJ'), ('much', 'JJ'), ('sim-', 'JJ'), ('pler', 'NN'), ('problem', 'NN'), ('conflict', 'NN'), ('resolution', 'NN'), ('production', 'NN'), ('systems', 'NNS'), ('.', '.')]

 (S
  (NP This/DT task/NN)
  (NP
    analogous/JJ
    much/JJ
    sim-/JJ
    pler/NN
    problem/NN
    conflict/NN
    resolution/NN
    production/NN
    systems/NNS)
  ./.) 


>> Noun Phrases are: 
 ['This task', 'analogous much sim- pler problem conflict resolution production systems']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('task', 'task'), ('analogous', 'analog'), ('much', 'much'), ('sim-', 'sim-'), ('pler', 'pler'), ('problem', 'problem'), ('conflict', 'conflict'), ('resolution', 'resolut'), ('production', 'product'), ('systems', 'system'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('task', 'task'), ('analogous', 'analog'), ('much', 'much'), ('sim-', 'sim-'), ('pler', 'pler'), ('problem', 'problem'), ('conflict', 'conflict'), ('resolution', 'resolut'), ('production', 'product'), ('systems', 'system'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('task', 'task'), ('analogous', 'analogous'), ('much', 'much'), ('sim-', 'sim-'), ('pler', 'pler'), ('problem', 'problem'), ('conflict', 'conflict'), ('resolution', 'resolution'), ('production', 'production'), ('systems', 'system'), ('.', '.')]



============================ Sentence 65 =============================

Conventional production systems avoid complex deci- sion-theory and abductive reasoning mainly by compiling  higher-level goals, beliefs and decisions into lower-level  heuristics and stimulus-response associations. 


>> Tokens are: 
 ['Conventional', 'production', 'systems', 'avoid', 'complex', 'deci-', 'sion-theory', 'abductive', 'reasoning', 'mainly', 'compiling', 'higher-level', 'goals', ',', 'beliefs', 'decisions', 'lower-level', 'heuristics', 'stimulus-response', 'associations', '.']

>> Bigrams are: 
 [('Conventional', 'production'), ('production', 'systems'), ('systems', 'avoid'), ('avoid', 'complex'), ('complex', 'deci-'), ('deci-', 'sion-theory'), ('sion-theory', 'abductive'), ('abductive', 'reasoning'), ('reasoning', 'mainly'), ('mainly', 'compiling'), ('compiling', 'higher-level'), ('higher-level', 'goals'), ('goals', ','), (',', 'beliefs'), ('beliefs', 'decisions'), ('decisions', 'lower-level'), ('lower-level', 'heuristics'), ('heuristics', 'stimulus-response'), ('stimulus-response', 'associations'), ('associations', '.')]

>> Trigrams are: 
 [('Conventional', 'production', 'systems'), ('production', 'systems', 'avoid'), ('systems', 'avoid', 'complex'), ('avoid', 'complex', 'deci-'), ('complex', 'deci-', 'sion-theory'), ('deci-', 'sion-theory', 'abductive'), ('sion-theory', 'abductive', 'reasoning'), ('abductive', 'reasoning', 'mainly'), ('reasoning', 'mainly', 'compiling'), ('mainly', 'compiling', 'higher-level'), ('compiling', 'higher-level', 'goals'), ('higher-level', 'goals', ','), ('goals', ',', 'beliefs'), (',', 'beliefs', 'decisions'), ('beliefs', 'decisions', 'lower-level'), ('decisions', 'lower-level', 'heuristics'), ('lower-level', 'heuristics', 'stimulus-response'), ('heuristics', 'stimulus-response', 'associations'), ('stimulus-response', 'associations', '.')]

>> POS Tags are: 
 [('Conventional', 'JJ'), ('production', 'NN'), ('systems', 'NNS'), ('avoid', 'VBP'), ('complex', 'JJ'), ('deci-', 'JJ'), ('sion-theory', 'JJ'), ('abductive', 'JJ'), ('reasoning', 'VBG'), ('mainly', 'RB'), ('compiling', 'VBG'), ('higher-level', 'JJ'), ('goals', 'NNS'), (',', ','), ('beliefs', 'JJ'), ('decisions', 'NNS'), ('lower-level', 'JJ'), ('heuristics', 'NNS'), ('stimulus-response', 'JJ'), ('associations', 'NNS'), ('.', '.')]

 (S
  (NP Conventional/JJ production/NN systems/NNS)
  avoid/VBP
  complex/JJ
  deci-/JJ
  sion-theory/JJ
  abductive/JJ
  reasoning/VBG
  mainly/RB
  compiling/VBG
  (NP higher-level/JJ goals/NNS)
  ,/,
  (NP beliefs/JJ decisions/NNS)
  (NP lower-level/JJ heuristics/NNS)
  (NP stimulus-response/JJ associations/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Conventional production systems', 'higher-level goals', 'beliefs decisions', 'lower-level heuristics', 'stimulus-response associations']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Conventional', 'convent'), ('production', 'product'), ('systems', 'system'), ('avoid', 'avoid'), ('complex', 'complex'), ('deci-', 'deci-'), ('sion-theory', 'sion-theori'), ('abductive', 'abduct'), ('reasoning', 'reason'), ('mainly', 'mainli'), ('compiling', 'compil'), ('higher-level', 'higher-level'), ('goals', 'goal'), (',', ','), ('beliefs', 'belief'), ('decisions', 'decis'), ('lower-level', 'lower-level'), ('heuristics', 'heurist'), ('stimulus-response', 'stimulus-respons'), ('associations', 'associ'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Conventional', 'convent'), ('production', 'product'), ('systems', 'system'), ('avoid', 'avoid'), ('complex', 'complex'), ('deci-', 'deci-'), ('sion-theory', 'sion-theori'), ('abductive', 'abduct'), ('reasoning', 'reason'), ('mainly', 'main'), ('compiling', 'compil'), ('higher-level', 'higher-level'), ('goals', 'goal'), (',', ','), ('beliefs', 'belief'), ('decisions', 'decis'), ('lower-level', 'lower-level'), ('heuristics', 'heurist'), ('stimulus-response', 'stimulus-respons'), ('associations', 'associ'), ('.', '.')]

>> Lemmatization: 
 [('Conventional', 'Conventional'), ('production', 'production'), ('systems', 'system'), ('avoid', 'avoid'), ('complex', 'complex'), ('deci-', 'deci-'), ('sion-theory', 'sion-theory'), ('abductive', 'abductive'), ('reasoning', 'reasoning'), ('mainly', 'mainly'), ('compiling', 'compiling'), ('higher-level', 'higher-level'), ('goals', 'goal'), (',', ','), ('beliefs', 'belief'), ('decisions', 'decision'), ('lower-level', 'lower-level'), ('heuristics', 'heuristic'), ('stimulus-response', 'stimulus-response'), ('associations', 'association'), ('.', '.')]



============================ Sentence 66 =============================

For example:     if there is smoke and I am on a train   then I press the alarm button. 


>> Tokens are: 
 ['For', 'example', ':', 'smoke', 'I', 'train', 'I', 'press', 'alarm', 'button', '.']

>> Bigrams are: 
 [('For', 'example'), ('example', ':'), (':', 'smoke'), ('smoke', 'I'), ('I', 'train'), ('train', 'I'), ('I', 'press'), ('press', 'alarm'), ('alarm', 'button'), ('button', '.')]

>> Trigrams are: 
 [('For', 'example', ':'), ('example', ':', 'smoke'), (':', 'smoke', 'I'), ('smoke', 'I', 'train'), ('I', 'train', 'I'), ('train', 'I', 'press'), ('I', 'press', 'alarm'), ('press', 'alarm', 'button'), ('alarm', 'button', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('example', 'NN'), (':', ':'), ('smoke', 'NN'), ('I', 'PRP'), ('train', 'VBP'), ('I', 'PRP'), ('press', 'VBP'), ('alarm', 'JJ'), ('button', 'NN'), ('.', '.')]

 (S
  For/IN
  (NP example/NN)
  :/:
  (NP smoke/NN)
  I/PRP
  train/VBP
  I/PRP
  press/VBP
  (NP alarm/JJ button/NN)
  ./.) 


>> Noun Phrases are: 
 ['example', 'smoke', 'alarm button']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (':', ':'), ('smoke', 'smoke'), ('I', 'i'), ('train', 'train'), ('I', 'i'), ('press', 'press'), ('alarm', 'alarm'), ('button', 'button'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (':', ':'), ('smoke', 'smoke'), ('I', 'i'), ('train', 'train'), ('I', 'i'), ('press', 'press'), ('alarm', 'alarm'), ('button', 'button'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('example', 'example'), (':', ':'), ('smoke', 'smoke'), ('I', 'I'), ('train', 'train'), ('I', 'I'), ('press', 'press'), ('alarm', 'alarm'), ('button', 'button'), ('.', '.')]



============================ Sentence 67 =============================

In ALP agents, such lower-level rules and higher-level  thinking and decision-making can be combined, as in dual  process theories, to get the best of both worlds. 


>> Tokens are: 
 ['In', 'ALP', 'agents', ',', 'lower-level', 'rules', 'higher-level', 'thinking', 'decision-making', 'combined', ',', 'dual', 'process', 'theories', ',', 'get', 'best', 'worlds', '.']

>> Bigrams are: 
 [('In', 'ALP'), ('ALP', 'agents'), ('agents', ','), (',', 'lower-level'), ('lower-level', 'rules'), ('rules', 'higher-level'), ('higher-level', 'thinking'), ('thinking', 'decision-making'), ('decision-making', 'combined'), ('combined', ','), (',', 'dual'), ('dual', 'process'), ('process', 'theories'), ('theories', ','), (',', 'get'), ('get', 'best'), ('best', 'worlds'), ('worlds', '.')]

>> Trigrams are: 
 [('In', 'ALP', 'agents'), ('ALP', 'agents', ','), ('agents', ',', 'lower-level'), (',', 'lower-level', 'rules'), ('lower-level', 'rules', 'higher-level'), ('rules', 'higher-level', 'thinking'), ('higher-level', 'thinking', 'decision-making'), ('thinking', 'decision-making', 'combined'), ('decision-making', 'combined', ','), ('combined', ',', 'dual'), (',', 'dual', 'process'), ('dual', 'process', 'theories'), ('process', 'theories', ','), ('theories', ',', 'get'), (',', 'get', 'best'), ('get', 'best', 'worlds'), ('best', 'worlds', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('ALP', 'NNP'), ('agents', 'NNS'), (',', ','), ('lower-level', 'JJ'), ('rules', 'NNS'), ('higher-level', 'JJ'), ('thinking', 'VBG'), ('decision-making', 'NN'), ('combined', 'VBN'), (',', ','), ('dual', 'JJ'), ('process', 'NN'), ('theories', 'NNS'), (',', ','), ('get', 'VB'), ('best', 'JJS'), ('worlds', 'NNS'), ('.', '.')]

 (S
  In/IN
  (NP ALP/NNP agents/NNS)
  ,/,
  (NP lower-level/JJ rules/NNS)
  higher-level/JJ
  thinking/VBG
  (NP decision-making/NN)
  combined/VBN
  ,/,
  (NP dual/JJ process/NN theories/NNS)
  ,/,
  get/VB
  best/JJS
  (NP worlds/NNS)
  ./.) 


>> Noun Phrases are: 
 ['ALP agents', 'lower-level rules', 'decision-making', 'dual process theories', 'worlds']

>> Named Entities are: 
 [('ORGANIZATION', 'ALP')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('ALP', 'alp'), ('agents', 'agent'), (',', ','), ('lower-level', 'lower-level'), ('rules', 'rule'), ('higher-level', 'higher-level'), ('thinking', 'think'), ('decision-making', 'decision-mak'), ('combined', 'combin'), (',', ','), ('dual', 'dual'), ('process', 'process'), ('theories', 'theori'), (',', ','), ('get', 'get'), ('best', 'best'), ('worlds', 'world'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('ALP', 'alp'), ('agents', 'agent'), (',', ','), ('lower-level', 'lower-level'), ('rules', 'rule'), ('higher-level', 'higher-level'), ('thinking', 'think'), ('decision-making', 'decision-mak'), ('combined', 'combin'), (',', ','), ('dual', 'dual'), ('process', 'process'), ('theories', 'theori'), (',', ','), ('get', 'get'), ('best', 'best'), ('worlds', 'world'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('ALP', 'ALP'), ('agents', 'agent'), (',', ','), ('lower-level', 'lower-level'), ('rules', 'rule'), ('higher-level', 'higher-level'), ('thinking', 'thinking'), ('decision-making', 'decision-making'), ('combined', 'combined'), (',', ','), ('dual', 'dual'), ('process', 'process'), ('theories', 'theory'), (',', ','), ('get', 'get'), ('best', 'best'), ('worlds', 'world'), ('.', '.')]



============================ Sentence 68 =============================

Like BDI agents, ALP agents interleave thinking with ob- serving and acting, and do not need to construct complete  plans before starting to act. 


>> Tokens are: 
 ['Like', 'BDI', 'agents', ',', 'ALP', 'agents', 'interleave', 'thinking', 'ob-', 'serving', 'acting', ',', 'need', 'construct', 'complete', 'plans', 'starting', 'act', '.']

>> Bigrams are: 
 [('Like', 'BDI'), ('BDI', 'agents'), ('agents', ','), (',', 'ALP'), ('ALP', 'agents'), ('agents', 'interleave'), ('interleave', 'thinking'), ('thinking', 'ob-'), ('ob-', 'serving'), ('serving', 'acting'), ('acting', ','), (',', 'need'), ('need', 'construct'), ('construct', 'complete'), ('complete', 'plans'), ('plans', 'starting'), ('starting', 'act'), ('act', '.')]

>> Trigrams are: 
 [('Like', 'BDI', 'agents'), ('BDI', 'agents', ','), ('agents', ',', 'ALP'), (',', 'ALP', 'agents'), ('ALP', 'agents', 'interleave'), ('agents', 'interleave', 'thinking'), ('interleave', 'thinking', 'ob-'), ('thinking', 'ob-', 'serving'), ('ob-', 'serving', 'acting'), ('serving', 'acting', ','), ('acting', ',', 'need'), (',', 'need', 'construct'), ('need', 'construct', 'complete'), ('construct', 'complete', 'plans'), ('complete', 'plans', 'starting'), ('plans', 'starting', 'act'), ('starting', 'act', '.')]

>> POS Tags are: 
 [('Like', 'IN'), ('BDI', 'NNP'), ('agents', 'NNS'), (',', ','), ('ALP', 'NNP'), ('agents', 'NNS'), ('interleave', 'VBP'), ('thinking', 'VBG'), ('ob-', 'JJ'), ('serving', 'VBG'), ('acting', 'NN'), (',', ','), ('need', 'VBP'), ('construct', 'NN'), ('complete', 'JJ'), ('plans', 'NNS'), ('starting', 'VBG'), ('act', 'NN'), ('.', '.')]

 (S
  Like/IN
  (NP BDI/NNP agents/NNS)
  ,/,
  (NP ALP/NNP agents/NNS)
  interleave/VBP
  thinking/VBG
  ob-/JJ
  serving/VBG
  (NP acting/NN)
  ,/,
  need/VBP
  (NP construct/NN)
  (NP complete/JJ plans/NNS)
  starting/VBG
  (NP act/NN)
  ./.) 


>> Noun Phrases are: 
 ['BDI agents', 'ALP agents', 'acting', 'construct', 'complete plans', 'act']

>> Named Entities are: 
 [('ORGANIZATION', 'BDI'), ('ORGANIZATION', 'ALP')] 

>> Stemming using Porter Stemmer: 
 [('Like', 'like'), ('BDI', 'bdi'), ('agents', 'agent'), (',', ','), ('ALP', 'alp'), ('agents', 'agent'), ('interleave', 'interleav'), ('thinking', 'think'), ('ob-', 'ob-'), ('serving', 'serv'), ('acting', 'act'), (',', ','), ('need', 'need'), ('construct', 'construct'), ('complete', 'complet'), ('plans', 'plan'), ('starting', 'start'), ('act', 'act'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Like', 'like'), ('BDI', 'bdi'), ('agents', 'agent'), (',', ','), ('ALP', 'alp'), ('agents', 'agent'), ('interleave', 'interleav'), ('thinking', 'think'), ('ob-', 'ob-'), ('serving', 'serv'), ('acting', 'act'), (',', ','), ('need', 'need'), ('construct', 'construct'), ('complete', 'complet'), ('plans', 'plan'), ('starting', 'start'), ('act', 'act'), ('.', '.')]

>> Lemmatization: 
 [('Like', 'Like'), ('BDI', 'BDI'), ('agents', 'agent'), (',', ','), ('ALP', 'ALP'), ('agents', 'agent'), ('interleave', 'interleave'), ('thinking', 'thinking'), ('ob-', 'ob-'), ('serving', 'serving'), ('acting', 'acting'), (',', ','), ('need', 'need'), ('construct', 'construct'), ('complete', 'complete'), ('plans', 'plan'), ('starting', 'starting'), ('act', 'act'), ('.', '.')]



============================ Sentence 69 =============================

However, whereas most BDI  agents select and commit to a single plan at a time, ALP  agents select and commit only to individual actions. 


>> Tokens are: 
 ['However', ',', 'whereas', 'BDI', 'agents', 'select', 'commit', 'single', 'plan', 'time', ',', 'ALP', 'agents', 'select', 'commit', 'individual', 'actions', '.']

>> Bigrams are: 
 [('However', ','), (',', 'whereas'), ('whereas', 'BDI'), ('BDI', 'agents'), ('agents', 'select'), ('select', 'commit'), ('commit', 'single'), ('single', 'plan'), ('plan', 'time'), ('time', ','), (',', 'ALP'), ('ALP', 'agents'), ('agents', 'select'), ('select', 'commit'), ('commit', 'individual'), ('individual', 'actions'), ('actions', '.')]

>> Trigrams are: 
 [('However', ',', 'whereas'), (',', 'whereas', 'BDI'), ('whereas', 'BDI', 'agents'), ('BDI', 'agents', 'select'), ('agents', 'select', 'commit'), ('select', 'commit', 'single'), ('commit', 'single', 'plan'), ('single', 'plan', 'time'), ('plan', 'time', ','), ('time', ',', 'ALP'), (',', 'ALP', 'agents'), ('ALP', 'agents', 'select'), ('agents', 'select', 'commit'), ('select', 'commit', 'individual'), ('commit', 'individual', 'actions'), ('individual', 'actions', '.')]

>> POS Tags are: 
 [('However', 'RB'), (',', ','), ('whereas', 'JJ'), ('BDI', 'NNP'), ('agents', 'NNS'), ('select', 'JJ'), ('commit', 'NN'), ('single', 'JJ'), ('plan', 'NN'), ('time', 'NN'), (',', ','), ('ALP', 'NNP'), ('agents', 'NNS'), ('select', 'JJ'), ('commit', 'VBP'), ('individual', 'JJ'), ('actions', 'NNS'), ('.', '.')]

 (S
  However/RB
  ,/,
  (NP whereas/JJ BDI/NNP agents/NNS)
  (NP select/JJ commit/NN)
  (NP single/JJ plan/NN time/NN)
  ,/,
  (NP ALP/NNP agents/NNS)
  select/JJ
  commit/VBP
  (NP individual/JJ actions/NNS)
  ./.) 


>> Noun Phrases are: 
 ['whereas BDI agents', 'select commit', 'single plan time', 'ALP agents', 'individual actions']

>> Named Entities are: 
 [('ORGANIZATION', 'BDI'), ('ORGANIZATION', 'ALP')] 

>> Stemming using Porter Stemmer: 
 [('However', 'howev'), (',', ','), ('whereas', 'wherea'), ('BDI', 'bdi'), ('agents', 'agent'), ('select', 'select'), ('commit', 'commit'), ('single', 'singl'), ('plan', 'plan'), ('time', 'time'), (',', ','), ('ALP', 'alp'), ('agents', 'agent'), ('select', 'select'), ('commit', 'commit'), ('individual', 'individu'), ('actions', 'action'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('However', 'howev'), (',', ','), ('whereas', 'wherea'), ('BDI', 'bdi'), ('agents', 'agent'), ('select', 'select'), ('commit', 'commit'), ('single', 'singl'), ('plan', 'plan'), ('time', 'time'), (',', ','), ('ALP', 'alp'), ('agents', 'agent'), ('select', 'select'), ('commit', 'commit'), ('individual', 'individu'), ('actions', 'action'), ('.', '.')]

>> Lemmatization: 
 [('However', 'However'), (',', ','), ('whereas', 'whereas'), ('BDI', 'BDI'), ('agents', 'agent'), ('select', 'select'), ('commit', 'commit'), ('single', 'single'), ('plan', 'plan'), ('time', 'time'), (',', ','), ('ALP', 'ALP'), ('agents', 'agent'), ('select', 'select'), ('commit', 'commit'), ('individual', 'individual'), ('actions', 'action'), ('.', '.')]



============================ Sentence 70 =============================

Unlike most BDI agents, ALP agents can interleave the  pursuit of several alternative plans, to improve the chances   12    of success. 


>> Tokens are: 
 ['Unlike', 'BDI', 'agents', ',', 'ALP', 'agents', 'interleave', 'pursuit', 'several', 'alternative', 'plans', ',', 'improve', 'chances', '12', 'success', '.']

>> Bigrams are: 
 [('Unlike', 'BDI'), ('BDI', 'agents'), ('agents', ','), (',', 'ALP'), ('ALP', 'agents'), ('agents', 'interleave'), ('interleave', 'pursuit'), ('pursuit', 'several'), ('several', 'alternative'), ('alternative', 'plans'), ('plans', ','), (',', 'improve'), ('improve', 'chances'), ('chances', '12'), ('12', 'success'), ('success', '.')]

>> Trigrams are: 
 [('Unlike', 'BDI', 'agents'), ('BDI', 'agents', ','), ('agents', ',', 'ALP'), (',', 'ALP', 'agents'), ('ALP', 'agents', 'interleave'), ('agents', 'interleave', 'pursuit'), ('interleave', 'pursuit', 'several'), ('pursuit', 'several', 'alternative'), ('several', 'alternative', 'plans'), ('alternative', 'plans', ','), ('plans', ',', 'improve'), (',', 'improve', 'chances'), ('improve', 'chances', '12'), ('chances', '12', 'success'), ('12', 'success', '.')]

>> POS Tags are: 
 [('Unlike', 'IN'), ('BDI', 'NNP'), ('agents', 'NNS'), (',', ','), ('ALP', 'NNP'), ('agents', 'NNS'), ('interleave', 'VBP'), ('pursuit', 'JJ'), ('several', 'JJ'), ('alternative', 'JJ'), ('plans', 'NNS'), (',', ','), ('improve', 'VB'), ('chances', 'NNS'), ('12', 'CD'), ('success', 'NN'), ('.', '.')]

 (S
  Unlike/IN
  (NP BDI/NNP agents/NNS)
  ,/,
  (NP ALP/NNP agents/NNS)
  interleave/VBP
  (NP pursuit/JJ several/JJ alternative/JJ plans/NNS)
  ,/,
  improve/VB
  (NP chances/NNS)
  12/CD
  (NP success/NN)
  ./.) 


>> Noun Phrases are: 
 ['BDI agents', 'ALP agents', 'pursuit several alternative plans', 'chances', 'success']

>> Named Entities are: 
 [('ORGANIZATION', 'BDI'), ('ORGANIZATION', 'ALP')] 

>> Stemming using Porter Stemmer: 
 [('Unlike', 'unlik'), ('BDI', 'bdi'), ('agents', 'agent'), (',', ','), ('ALP', 'alp'), ('agents', 'agent'), ('interleave', 'interleav'), ('pursuit', 'pursuit'), ('several', 'sever'), ('alternative', 'altern'), ('plans', 'plan'), (',', ','), ('improve', 'improv'), ('chances', 'chanc'), ('12', '12'), ('success', 'success'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unlike', 'unlik'), ('BDI', 'bdi'), ('agents', 'agent'), (',', ','), ('ALP', 'alp'), ('agents', 'agent'), ('interleave', 'interleav'), ('pursuit', 'pursuit'), ('several', 'sever'), ('alternative', 'altern'), ('plans', 'plan'), (',', ','), ('improve', 'improv'), ('chances', 'chanc'), ('12', '12'), ('success', 'success'), ('.', '.')]

>> Lemmatization: 
 [('Unlike', 'Unlike'), ('BDI', 'BDI'), ('agents', 'agent'), (',', ','), ('ALP', 'ALP'), ('agents', 'agent'), ('interleave', 'interleave'), ('pursuit', 'pursuit'), ('several', 'several'), ('alternative', 'alternative'), ('plans', 'plan'), (',', ','), ('improve', 'improve'), ('chances', 'chance'), ('12', '12'), ('success', 'success'), ('.', '.')]



============================ Sentence 71 =============================

For example, in an emergency an agent can both  press the alarm button and try to escape more or less at the  same time. 


>> Tokens are: 
 ['For', 'example', ',', 'emergency', 'agent', 'press', 'alarm', 'button', 'try', 'escape', 'less', 'time', '.']

>> Bigrams are: 
 [('For', 'example'), ('example', ','), (',', 'emergency'), ('emergency', 'agent'), ('agent', 'press'), ('press', 'alarm'), ('alarm', 'button'), ('button', 'try'), ('try', 'escape'), ('escape', 'less'), ('less', 'time'), ('time', '.')]

>> Trigrams are: 
 [('For', 'example', ','), ('example', ',', 'emergency'), (',', 'emergency', 'agent'), ('emergency', 'agent', 'press'), ('agent', 'press', 'alarm'), ('press', 'alarm', 'button'), ('alarm', 'button', 'try'), ('button', 'try', 'escape'), ('try', 'escape', 'less'), ('escape', 'less', 'time'), ('less', 'time', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('example', 'NN'), (',', ','), ('emergency', 'NN'), ('agent', 'NN'), ('press', 'NN'), ('alarm', 'NN'), ('button', 'NN'), ('try', 'VB'), ('escape', 'NN'), ('less', 'JJR'), ('time', 'NN'), ('.', '.')]

 (S
  For/IN
  (NP example/NN)
  ,/,
  (NP emergency/NN agent/NN press/NN alarm/NN button/NN)
  try/VB
  (NP escape/NN)
  less/JJR
  (NP time/NN)
  ./.) 


>> Noun Phrases are: 
 ['example', 'emergency agent press alarm button', 'escape', 'time']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('emergency', 'emerg'), ('agent', 'agent'), ('press', 'press'), ('alarm', 'alarm'), ('button', 'button'), ('try', 'tri'), ('escape', 'escap'), ('less', 'less'), ('time', 'time'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('emergency', 'emerg'), ('agent', 'agent'), ('press', 'press'), ('alarm', 'alarm'), ('button', 'button'), ('try', 'tri'), ('escape', 'escap'), ('less', 'less'), ('time', 'time'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('example', 'example'), (',', ','), ('emergency', 'emergency'), ('agent', 'agent'), ('press', 'press'), ('alarm', 'alarm'), ('button', 'button'), ('try', 'try'), ('escape', 'escape'), ('less', 'le'), ('time', 'time'), ('.', '.')]



============================ Sentence 72 =============================

Whether an ALP agent works on one plan or  several alternative plans at a time depends on the search  strategy. 


>> Tokens are: 
 ['Whether', 'ALP', 'agent', 'works', 'one', 'plan', 'several', 'alternative', 'plans', 'time', 'depends', 'search', 'strategy', '.']

>> Bigrams are: 
 [('Whether', 'ALP'), ('ALP', 'agent'), ('agent', 'works'), ('works', 'one'), ('one', 'plan'), ('plan', 'several'), ('several', 'alternative'), ('alternative', 'plans'), ('plans', 'time'), ('time', 'depends'), ('depends', 'search'), ('search', 'strategy'), ('strategy', '.')]

>> Trigrams are: 
 [('Whether', 'ALP', 'agent'), ('ALP', 'agent', 'works'), ('agent', 'works', 'one'), ('works', 'one', 'plan'), ('one', 'plan', 'several'), ('plan', 'several', 'alternative'), ('several', 'alternative', 'plans'), ('alternative', 'plans', 'time'), ('plans', 'time', 'depends'), ('time', 'depends', 'search'), ('depends', 'search', 'strategy'), ('search', 'strategy', '.')]

>> POS Tags are: 
 [('Whether', 'NNP'), ('ALP', 'NNP'), ('agent', 'NN'), ('works', 'VBZ'), ('one', 'CD'), ('plan', 'NN'), ('several', 'JJ'), ('alternative', 'JJ'), ('plans', 'NNS'), ('time', 'NN'), ('depends', 'VBZ'), ('search', 'JJ'), ('strategy', 'NN'), ('.', '.')]

 (S
  (NP Whether/NNP ALP/NNP agent/NN)
  works/VBZ
  one/CD
  (NP plan/NN)
  (NP several/JJ alternative/JJ plans/NNS time/NN)
  depends/VBZ
  (NP search/JJ strategy/NN)
  ./.) 


>> Noun Phrases are: 
 ['Whether ALP agent', 'plan', 'several alternative plans time', 'search strategy']

>> Named Entities are: 
 [('PERSON', 'Whether'), ('ORGANIZATION', 'ALP')] 

>> Stemming using Porter Stemmer: 
 [('Whether', 'whether'), ('ALP', 'alp'), ('agent', 'agent'), ('works', 'work'), ('one', 'one'), ('plan', 'plan'), ('several', 'sever'), ('alternative', 'altern'), ('plans', 'plan'), ('time', 'time'), ('depends', 'depend'), ('search', 'search'), ('strategy', 'strategi'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Whether', 'whether'), ('ALP', 'alp'), ('agent', 'agent'), ('works', 'work'), ('one', 'one'), ('plan', 'plan'), ('several', 'sever'), ('alternative', 'altern'), ('plans', 'plan'), ('time', 'time'), ('depends', 'depend'), ('search', 'search'), ('strategy', 'strategi'), ('.', '.')]

>> Lemmatization: 
 [('Whether', 'Whether'), ('ALP', 'ALP'), ('agent', 'agent'), ('works', 'work'), ('one', 'one'), ('plan', 'plan'), ('several', 'several'), ('alternative', 'alternative'), ('plans', 'plan'), ('time', 'time'), ('depends', 'depends'), ('search', 'search'), ('strategy', 'strategy'), ('.', '.')]



============================ Sentence 73 =============================

Depth-first search works on one plan at a time, but  other search strategies are often more desirable. 


>> Tokens are: 
 ['Depth-first', 'search', 'works', 'one', 'plan', 'time', ',', 'search', 'strategies', 'often', 'desirable', '.']

>> Bigrams are: 
 [('Depth-first', 'search'), ('search', 'works'), ('works', 'one'), ('one', 'plan'), ('plan', 'time'), ('time', ','), (',', 'search'), ('search', 'strategies'), ('strategies', 'often'), ('often', 'desirable'), ('desirable', '.')]

>> Trigrams are: 
 [('Depth-first', 'search', 'works'), ('search', 'works', 'one'), ('works', 'one', 'plan'), ('one', 'plan', 'time'), ('plan', 'time', ','), ('time', ',', 'search'), (',', 'search', 'strategies'), ('search', 'strategies', 'often'), ('strategies', 'often', 'desirable'), ('often', 'desirable', '.')]

>> POS Tags are: 
 [('Depth-first', 'NNP'), ('search', 'NN'), ('works', 'VBZ'), ('one', 'CD'), ('plan', 'NN'), ('time', 'NN'), (',', ','), ('search', 'NN'), ('strategies', 'NNS'), ('often', 'RB'), ('desirable', 'JJ'), ('.', '.')]

 (S
  (NP Depth-first/NNP search/NN)
  works/VBZ
  one/CD
  (NP plan/NN time/NN)
  ,/,
  (NP search/NN strategies/NNS)
  often/RB
  desirable/JJ
  ./.) 


>> Noun Phrases are: 
 ['Depth-first search', 'plan time', 'search strategies']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Depth-first', 'depth-first'), ('search', 'search'), ('works', 'work'), ('one', 'one'), ('plan', 'plan'), ('time', 'time'), (',', ','), ('search', 'search'), ('strategies', 'strategi'), ('often', 'often'), ('desirable', 'desir'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Depth-first', 'depth-first'), ('search', 'search'), ('works', 'work'), ('one', 'one'), ('plan', 'plan'), ('time', 'time'), (',', ','), ('search', 'search'), ('strategies', 'strategi'), ('often', 'often'), ('desirable', 'desir'), ('.', '.')]

>> Lemmatization: 
 [('Depth-first', 'Depth-first'), ('search', 'search'), ('works', 'work'), ('one', 'one'), ('plan', 'plan'), ('time', 'time'), (',', ','), ('search', 'search'), ('strategies', 'strategy'), ('often', 'often'), ('desirable', 'desirable'), ('.', '.')]



============================ Sentence 74 =============================

The ALP agent model can be used to develop artificial  agents, but it can also be used as a descriptive model of hu- man thinking and deciding. 


>> Tokens are: 
 ['The', 'ALP', 'agent', 'model', 'used', 'develop', 'artificial', 'agents', ',', 'also', 'used', 'descriptive', 'model', 'hu-', 'man', 'thinking', 'deciding', '.']

>> Bigrams are: 
 [('The', 'ALP'), ('ALP', 'agent'), ('agent', 'model'), ('model', 'used'), ('used', 'develop'), ('develop', 'artificial'), ('artificial', 'agents'), ('agents', ','), (',', 'also'), ('also', 'used'), ('used', 'descriptive'), ('descriptive', 'model'), ('model', 'hu-'), ('hu-', 'man'), ('man', 'thinking'), ('thinking', 'deciding'), ('deciding', '.')]

>> Trigrams are: 
 [('The', 'ALP', 'agent'), ('ALP', 'agent', 'model'), ('agent', 'model', 'used'), ('model', 'used', 'develop'), ('used', 'develop', 'artificial'), ('develop', 'artificial', 'agents'), ('artificial', 'agents', ','), ('agents', ',', 'also'), (',', 'also', 'used'), ('also', 'used', 'descriptive'), ('used', 'descriptive', 'model'), ('descriptive', 'model', 'hu-'), ('model', 'hu-', 'man'), ('hu-', 'man', 'thinking'), ('man', 'thinking', 'deciding'), ('thinking', 'deciding', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('ALP', 'NNP'), ('agent', 'NN'), ('model', 'NN'), ('used', 'VBN'), ('develop', 'VB'), ('artificial', 'JJ'), ('agents', 'NNS'), (',', ','), ('also', 'RB'), ('used', 'VBD'), ('descriptive', 'JJ'), ('model', 'NN'), ('hu-', 'JJ'), ('man', 'NN'), ('thinking', 'VBG'), ('deciding', 'VBG'), ('.', '.')]

 (S
  (NP The/DT ALP/NNP agent/NN model/NN)
  used/VBN
  develop/VB
  (NP artificial/JJ agents/NNS)
  ,/,
  also/RB
  used/VBD
  (NP descriptive/JJ model/NN)
  (NP hu-/JJ man/NN)
  thinking/VBG
  deciding/VBG
  ./.) 


>> Noun Phrases are: 
 ['The ALP agent model', 'artificial agents', 'descriptive model', 'hu- man']

>> Named Entities are: 
 [('ORGANIZATION', 'ALP')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), ('used', 'use'), ('develop', 'develop'), ('artificial', 'artifici'), ('agents', 'agent'), (',', ','), ('also', 'also'), ('used', 'use'), ('descriptive', 'descript'), ('model', 'model'), ('hu-', 'hu-'), ('man', 'man'), ('thinking', 'think'), ('deciding', 'decid'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), ('used', 'use'), ('develop', 'develop'), ('artificial', 'artifici'), ('agents', 'agent'), (',', ','), ('also', 'also'), ('used', 'use'), ('descriptive', 'descript'), ('model', 'model'), ('hu-', 'hu-'), ('man', 'man'), ('thinking', 'think'), ('deciding', 'decid'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('ALP', 'ALP'), ('agent', 'agent'), ('model', 'model'), ('used', 'used'), ('develop', 'develop'), ('artificial', 'artificial'), ('agents', 'agent'), (',', ','), ('also', 'also'), ('used', 'used'), ('descriptive', 'descriptive'), ('model', 'model'), ('hu-', 'hu-'), ('man', 'man'), ('thinking', 'thinking'), ('deciding', 'deciding'), ('.', '.')]



============================ Sentence 75 =============================

However, in the remainder of  this paper I will argue that it can also be used as a normative  (or prescriptive) model, which combines and improves upon  both traditional logic and classical decision theory. 


>> Tokens are: 
 ['However', ',', 'remainder', 'paper', 'I', 'argue', 'also', 'used', 'normative', '(', 'prescriptive', ')', 'model', ',', 'combines', 'improves', 'upon', 'traditional', 'logic', 'classical', 'decision', 'theory', '.']

>> Bigrams are: 
 [('However', ','), (',', 'remainder'), ('remainder', 'paper'), ('paper', 'I'), ('I', 'argue'), ('argue', 'also'), ('also', 'used'), ('used', 'normative'), ('normative', '('), ('(', 'prescriptive'), ('prescriptive', ')'), (')', 'model'), ('model', ','), (',', 'combines'), ('combines', 'improves'), ('improves', 'upon'), ('upon', 'traditional'), ('traditional', 'logic'), ('logic', 'classical'), ('classical', 'decision'), ('decision', 'theory'), ('theory', '.')]

>> Trigrams are: 
 [('However', ',', 'remainder'), (',', 'remainder', 'paper'), ('remainder', 'paper', 'I'), ('paper', 'I', 'argue'), ('I', 'argue', 'also'), ('argue', 'also', 'used'), ('also', 'used', 'normative'), ('used', 'normative', '('), ('normative', '(', 'prescriptive'), ('(', 'prescriptive', ')'), ('prescriptive', ')', 'model'), (')', 'model', ','), ('model', ',', 'combines'), (',', 'combines', 'improves'), ('combines', 'improves', 'upon'), ('improves', 'upon', 'traditional'), ('upon', 'traditional', 'logic'), ('traditional', 'logic', 'classical'), ('logic', 'classical', 'decision'), ('classical', 'decision', 'theory'), ('decision', 'theory', '.')]

>> POS Tags are: 
 [('However', 'RB'), (',', ','), ('remainder', 'VBP'), ('paper', 'NN'), ('I', 'PRP'), ('argue', 'VBP'), ('also', 'RB'), ('used', 'VBN'), ('normative', 'JJ'), ('(', '('), ('prescriptive', 'JJ'), (')', ')'), ('model', 'NN'), (',', ','), ('combines', 'NNS'), ('improves', 'VBZ'), ('upon', 'IN'), ('traditional', 'JJ'), ('logic', 'JJ'), ('classical', 'JJ'), ('decision', 'NN'), ('theory', 'NN'), ('.', '.')]

 (S
  However/RB
  ,/,
  remainder/VBP
  (NP paper/NN)
  I/PRP
  argue/VBP
  also/RB
  used/VBN
  normative/JJ
  (/(
  prescriptive/JJ
  )/)
  (NP model/NN)
  ,/,
  (NP combines/NNS)
  improves/VBZ
  upon/IN
  (NP traditional/JJ logic/JJ classical/JJ decision/NN theory/NN)
  ./.) 


>> Noun Phrases are: 
 ['paper', 'model', 'combines', 'traditional logic classical decision theory']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('However', 'howev'), (',', ','), ('remainder', 'remaind'), ('paper', 'paper'), ('I', 'i'), ('argue', 'argu'), ('also', 'also'), ('used', 'use'), ('normative', 'norm'), ('(', '('), ('prescriptive', 'prescript'), (')', ')'), ('model', 'model'), (',', ','), ('combines', 'combin'), ('improves', 'improv'), ('upon', 'upon'), ('traditional', 'tradit'), ('logic', 'logic'), ('classical', 'classic'), ('decision', 'decis'), ('theory', 'theori'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('However', 'howev'), (',', ','), ('remainder', 'remaind'), ('paper', 'paper'), ('I', 'i'), ('argue', 'argu'), ('also', 'also'), ('used', 'use'), ('normative', 'normat'), ('(', '('), ('prescriptive', 'prescript'), (')', ')'), ('model', 'model'), (',', ','), ('combines', 'combin'), ('improves', 'improv'), ('upon', 'upon'), ('traditional', 'tradit'), ('logic', 'logic'), ('classical', 'classic'), ('decision', 'decis'), ('theory', 'theori'), ('.', '.')]

>> Lemmatization: 
 [('However', 'However'), (',', ','), ('remainder', 'remainder'), ('paper', 'paper'), ('I', 'I'), ('argue', 'argue'), ('also', 'also'), ('used', 'used'), ('normative', 'normative'), ('(', '('), ('prescriptive', 'prescriptive'), (')', ')'), ('model', 'model'), (',', ','), ('combines', 'combine'), ('improves', 'improves'), ('upon', 'upon'), ('traditional', 'traditional'), ('logic', 'logic'), ('classical', 'classical'), ('decision', 'decision'), ('theory', 'theory'), ('.', '.')]



============================ Sentence 76 =============================

The argument for basing a better decision theory on the  ALP agent model depends on the claim that the clausal logic  of ALP is a plausible model of the language of thought  (LOT). 


>> Tokens are: 
 ['The', 'argument', 'basing', 'better', 'decision', 'theory', 'ALP', 'agent', 'model', 'depends', 'claim', 'clausal', 'logic', 'ALP', 'plausible', 'model', 'language', 'thought', '(', 'LOT', ')', '.']

>> Bigrams are: 
 [('The', 'argument'), ('argument', 'basing'), ('basing', 'better'), ('better', 'decision'), ('decision', 'theory'), ('theory', 'ALP'), ('ALP', 'agent'), ('agent', 'model'), ('model', 'depends'), ('depends', 'claim'), ('claim', 'clausal'), ('clausal', 'logic'), ('logic', 'ALP'), ('ALP', 'plausible'), ('plausible', 'model'), ('model', 'language'), ('language', 'thought'), ('thought', '('), ('(', 'LOT'), ('LOT', ')'), (')', '.')]

>> Trigrams are: 
 [('The', 'argument', 'basing'), ('argument', 'basing', 'better'), ('basing', 'better', 'decision'), ('better', 'decision', 'theory'), ('decision', 'theory', 'ALP'), ('theory', 'ALP', 'agent'), ('ALP', 'agent', 'model'), ('agent', 'model', 'depends'), ('model', 'depends', 'claim'), ('depends', 'claim', 'clausal'), ('claim', 'clausal', 'logic'), ('clausal', 'logic', 'ALP'), ('logic', 'ALP', 'plausible'), ('ALP', 'plausible', 'model'), ('plausible', 'model', 'language'), ('model', 'language', 'thought'), ('language', 'thought', '('), ('thought', '(', 'LOT'), ('(', 'LOT', ')'), ('LOT', ')', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('argument', 'NN'), ('basing', 'VBG'), ('better', 'JJR'), ('decision', 'NN'), ('theory', 'NN'), ('ALP', 'NNP'), ('agent', 'NN'), ('model', 'NN'), ('depends', 'VBZ'), ('claim', 'JJ'), ('clausal', 'JJ'), ('logic', 'JJ'), ('ALP', 'NNP'), ('plausible', 'JJ'), ('model', 'NN'), ('language', 'NN'), ('thought', 'VBN'), ('(', '('), ('LOT', 'NNP'), (')', ')'), ('.', '.')]

 (S
  (NP The/DT argument/NN)
  basing/VBG
  better/JJR
  (NP decision/NN theory/NN ALP/NNP agent/NN model/NN)
  depends/VBZ
  (NP claim/JJ clausal/JJ logic/JJ ALP/NNP)
  (NP plausible/JJ model/NN language/NN)
  thought/VBN
  (/(
  (NP LOT/NNP)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['The argument', 'decision theory ALP agent model', 'claim clausal logic ALP', 'plausible model language', 'LOT']

>> Named Entities are: 
 [('ORGANIZATION', 'ALP'), ('ORGANIZATION', 'LOT')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('argument', 'argument'), ('basing', 'base'), ('better', 'better'), ('decision', 'decis'), ('theory', 'theori'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), ('depends', 'depend'), ('claim', 'claim'), ('clausal', 'clausal'), ('logic', 'logic'), ('ALP', 'alp'), ('plausible', 'plausibl'), ('model', 'model'), ('language', 'languag'), ('thought', 'thought'), ('(', '('), ('LOT', 'lot'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('argument', 'argument'), ('basing', 'base'), ('better', 'better'), ('decision', 'decis'), ('theory', 'theori'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), ('depends', 'depend'), ('claim', 'claim'), ('clausal', 'clausal'), ('logic', 'logic'), ('ALP', 'alp'), ('plausible', 'plausibl'), ('model', 'model'), ('language', 'languag'), ('thought', 'thought'), ('(', '('), ('LOT', 'lot'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('argument', 'argument'), ('basing', 'basing'), ('better', 'better'), ('decision', 'decision'), ('theory', 'theory'), ('ALP', 'ALP'), ('agent', 'agent'), ('model', 'model'), ('depends', 'depends'), ('claim', 'claim'), ('clausal', 'clausal'), ('logic', 'logic'), ('ALP', 'ALP'), ('plausible', 'plausible'), ('model', 'model'), ('language', 'language'), ('thought', 'thought'), ('(', '('), ('LOT', 'LOT'), (')', ')'), ('.', '.')]



============================ Sentence 77 =============================

In the next few sections, I will support this claim by  comparing clausal logic with natural language. 


>> Tokens are: 
 ['In', 'next', 'sections', ',', 'I', 'support', 'claim', 'comparing', 'clausal', 'logic', 'natural', 'language', '.']

>> Bigrams are: 
 [('In', 'next'), ('next', 'sections'), ('sections', ','), (',', 'I'), ('I', 'support'), ('support', 'claim'), ('claim', 'comparing'), ('comparing', 'clausal'), ('clausal', 'logic'), ('logic', 'natural'), ('natural', 'language'), ('language', '.')]

>> Trigrams are: 
 [('In', 'next', 'sections'), ('next', 'sections', ','), ('sections', ',', 'I'), (',', 'I', 'support'), ('I', 'support', 'claim'), ('support', 'claim', 'comparing'), ('claim', 'comparing', 'clausal'), ('comparing', 'clausal', 'logic'), ('clausal', 'logic', 'natural'), ('logic', 'natural', 'language'), ('natural', 'language', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('next', 'JJ'), ('sections', 'NNS'), (',', ','), ('I', 'PRP'), ('support', 'VBP'), ('claim', 'NN'), ('comparing', 'VBG'), ('clausal', 'NN'), ('logic', 'JJ'), ('natural', 'JJ'), ('language', 'NN'), ('.', '.')]

 (S
  In/IN
  (NP next/JJ sections/NNS)
  ,/,
  I/PRP
  support/VBP
  (NP claim/NN)
  comparing/VBG
  (NP clausal/NN)
  (NP logic/JJ natural/JJ language/NN)
  ./.) 


>> Noun Phrases are: 
 ['next sections', 'claim', 'clausal', 'logic natural language']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('next', 'next'), ('sections', 'section'), (',', ','), ('I', 'i'), ('support', 'support'), ('claim', 'claim'), ('comparing', 'compar'), ('clausal', 'clausal'), ('logic', 'logic'), ('natural', 'natur'), ('language', 'languag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('next', 'next'), ('sections', 'section'), (',', ','), ('I', 'i'), ('support', 'support'), ('claim', 'claim'), ('comparing', 'compar'), ('clausal', 'clausal'), ('logic', 'logic'), ('natural', 'natur'), ('language', 'languag'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('next', 'next'), ('sections', 'section'), (',', ','), ('I', 'I'), ('support', 'support'), ('claim', 'claim'), ('comparing', 'comparing'), ('clausal', 'clausal'), ('logic', 'logic'), ('natural', 'natural'), ('language', 'language'), ('.', '.')]



============================ Sentence 78 =============================

Moreover, I  will argue that people can use this model to help them  communicate with other people more clearly and more co- herently. 


>> Tokens are: 
 ['Moreover', ',', 'I', 'argue', 'people', 'use', 'model', 'help', 'communicate', 'people', 'clearly', 'co-', 'herently', '.']

>> Bigrams are: 
 [('Moreover', ','), (',', 'I'), ('I', 'argue'), ('argue', 'people'), ('people', 'use'), ('use', 'model'), ('model', 'help'), ('help', 'communicate'), ('communicate', 'people'), ('people', 'clearly'), ('clearly', 'co-'), ('co-', 'herently'), ('herently', '.')]

>> Trigrams are: 
 [('Moreover', ',', 'I'), (',', 'I', 'argue'), ('I', 'argue', 'people'), ('argue', 'people', 'use'), ('people', 'use', 'model'), ('use', 'model', 'help'), ('model', 'help', 'communicate'), ('help', 'communicate', 'people'), ('communicate', 'people', 'clearly'), ('people', 'clearly', 'co-'), ('clearly', 'co-', 'herently'), ('co-', 'herently', '.')]

>> POS Tags are: 
 [('Moreover', 'RB'), (',', ','), ('I', 'PRP'), ('argue', 'VBP'), ('people', 'NNS'), ('use', 'VBP'), ('model', 'NN'), ('help', 'NN'), ('communicate', 'VB'), ('people', 'NNS'), ('clearly', 'RB'), ('co-', 'VBP'), ('herently', 'RB'), ('.', '.')]

 (S
  Moreover/RB
  ,/,
  I/PRP
  argue/VBP
  (NP people/NNS)
  use/VBP
  (NP model/NN help/NN)
  communicate/VB
  (NP people/NNS)
  clearly/RB
  co-/VBP
  herently/RB
  ./.) 


>> Noun Phrases are: 
 ['people', 'model help', 'people']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Moreover', 'moreov'), (',', ','), ('I', 'i'), ('argue', 'argu'), ('people', 'peopl'), ('use', 'use'), ('model', 'model'), ('help', 'help'), ('communicate', 'commun'), ('people', 'peopl'), ('clearly', 'clearli'), ('co-', 'co-'), ('herently', 'herent'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Moreover', 'moreov'), (',', ','), ('I', 'i'), ('argue', 'argu'), ('people', 'peopl'), ('use', 'use'), ('model', 'model'), ('help', 'help'), ('communicate', 'communic'), ('people', 'peopl'), ('clearly', 'clear'), ('co-', 'co-'), ('herently', 'herent'), ('.', '.')]

>> Lemmatization: 
 [('Moreover', 'Moreover'), (',', ','), ('I', 'I'), ('argue', 'argue'), ('people', 'people'), ('use', 'use'), ('model', 'model'), ('help', 'help'), ('communicate', 'communicate'), ('people', 'people'), ('clearly', 'clearly'), ('co-', 'co-'), ('herently', 'herently'), ('.', '.')]



============================ Sentence 79 =============================

I will return to the use of the ALP agent model, to  help people make better choices, in section 6. 


>> Tokens are: 
 ['I', 'return', 'use', 'ALP', 'agent', 'model', ',', 'help', 'people', 'make', 'better', 'choices', ',', 'section', '6', '.']

>> Bigrams are: 
 [('I', 'return'), ('return', 'use'), ('use', 'ALP'), ('ALP', 'agent'), ('agent', 'model'), ('model', ','), (',', 'help'), ('help', 'people'), ('people', 'make'), ('make', 'better'), ('better', 'choices'), ('choices', ','), (',', 'section'), ('section', '6'), ('6', '.')]

>> Trigrams are: 
 [('I', 'return', 'use'), ('return', 'use', 'ALP'), ('use', 'ALP', 'agent'), ('ALP', 'agent', 'model'), ('agent', 'model', ','), ('model', ',', 'help'), (',', 'help', 'people'), ('help', 'people', 'make'), ('people', 'make', 'better'), ('make', 'better', 'choices'), ('better', 'choices', ','), ('choices', ',', 'section'), (',', 'section', '6'), ('section', '6', '.')]

>> POS Tags are: 
 [('I', 'PRP'), ('return', 'VBP'), ('use', 'JJ'), ('ALP', 'NNP'), ('agent', 'NN'), ('model', 'NN'), (',', ','), ('help', 'VBP'), ('people', 'NNS'), ('make', 'VBP'), ('better', 'JJR'), ('choices', 'NNS'), (',', ','), ('section', 'NN'), ('6', 'CD'), ('.', '.')]

 (S
  I/PRP
  return/VBP
  (NP use/JJ ALP/NNP agent/NN model/NN)
  ,/,
  help/VBP
  (NP people/NNS)
  make/VBP
  better/JJR
  (NP choices/NNS)
  ,/,
  (NP section/NN)
  6/CD
  ./.) 


>> Noun Phrases are: 
 ['use ALP agent model', 'people', 'choices', 'section']

>> Named Entities are: 
 [('ORGANIZATION', 'ALP')] 

>> Stemming using Porter Stemmer: 
 [('I', 'i'), ('return', 'return'), ('use', 'use'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), (',', ','), ('help', 'help'), ('people', 'peopl'), ('make', 'make'), ('better', 'better'), ('choices', 'choic'), (',', ','), ('section', 'section'), ('6', '6'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('I', 'i'), ('return', 'return'), ('use', 'use'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), (',', ','), ('help', 'help'), ('people', 'peopl'), ('make', 'make'), ('better', 'better'), ('choices', 'choic'), (',', ','), ('section', 'section'), ('6', '6'), ('.', '.')]

>> Lemmatization: 
 [('I', 'I'), ('return', 'return'), ('use', 'use'), ('ALP', 'ALP'), ('agent', 'agent'), ('model', 'model'), (',', ','), ('help', 'help'), ('people', 'people'), ('make', 'make'), ('better', 'better'), ('choices', 'choice'), (',', ','), ('section', 'section'), ('6', '6'), ('.', '.')]



============================ Sentence 80 =============================

3 Clausal Logic as an Agent’s LOT   In the philosophy of language, there are three main schools  of thought regarding the relationship between language and  thought:     • The LOT is a private, language-like representation,   which is independent of public, natural languages. 


>> Tokens are: 
 ['3', 'Clausal', 'Logic', 'Agent', '’', 'LOT', 'In', 'philosophy', 'language', ',', 'three', 'main', 'schools', 'thought', 'regarding', 'relationship', 'language', 'thought', ':', '•', 'The', 'LOT', 'private', ',', 'language-like', 'representation', ',', 'independent', 'public', ',', 'natural', 'languages', '.']

>> Bigrams are: 
 [('3', 'Clausal'), ('Clausal', 'Logic'), ('Logic', 'Agent'), ('Agent', '’'), ('’', 'LOT'), ('LOT', 'In'), ('In', 'philosophy'), ('philosophy', 'language'), ('language', ','), (',', 'three'), ('three', 'main'), ('main', 'schools'), ('schools', 'thought'), ('thought', 'regarding'), ('regarding', 'relationship'), ('relationship', 'language'), ('language', 'thought'), ('thought', ':'), (':', '•'), ('•', 'The'), ('The', 'LOT'), ('LOT', 'private'), ('private', ','), (',', 'language-like'), ('language-like', 'representation'), ('representation', ','), (',', 'independent'), ('independent', 'public'), ('public', ','), (',', 'natural'), ('natural', 'languages'), ('languages', '.')]

>> Trigrams are: 
 [('3', 'Clausal', 'Logic'), ('Clausal', 'Logic', 'Agent'), ('Logic', 'Agent', '’'), ('Agent', '’', 'LOT'), ('’', 'LOT', 'In'), ('LOT', 'In', 'philosophy'), ('In', 'philosophy', 'language'), ('philosophy', 'language', ','), ('language', ',', 'three'), (',', 'three', 'main'), ('three', 'main', 'schools'), ('main', 'schools', 'thought'), ('schools', 'thought', 'regarding'), ('thought', 'regarding', 'relationship'), ('regarding', 'relationship', 'language'), ('relationship', 'language', 'thought'), ('language', 'thought', ':'), ('thought', ':', '•'), (':', '•', 'The'), ('•', 'The', 'LOT'), ('The', 'LOT', 'private'), ('LOT', 'private', ','), ('private', ',', 'language-like'), (',', 'language-like', 'representation'), ('language-like', 'representation', ','), ('representation', ',', 'independent'), (',', 'independent', 'public'), ('independent', 'public', ','), ('public', ',', 'natural'), (',', 'natural', 'languages'), ('natural', 'languages', '.')]

>> POS Tags are: 
 [('3', 'CD'), ('Clausal', 'NNP'), ('Logic', 'NNP'), ('Agent', 'NNP'), ('’', 'NNP'), ('LOT', 'NNP'), ('In', 'IN'), ('philosophy', 'NN'), ('language', 'NN'), (',', ','), ('three', 'CD'), ('main', 'JJ'), ('schools', 'NNS'), ('thought', 'VBD'), ('regarding', 'VBG'), ('relationship', 'NN'), ('language', 'NN'), ('thought', 'VBD'), (':', ':'), ('•', 'VB'), ('The', 'DT'), ('LOT', 'NNP'), ('private', 'JJ'), (',', ','), ('language-like', 'JJ'), ('representation', 'NN'), (',', ','), ('independent', 'JJ'), ('public', 'NN'), (',', ','), ('natural', 'JJ'), ('languages', 'NNS'), ('.', '.')]

 (S
  3/CD
  (NP Clausal/NNP Logic/NNP Agent/NNP ’/NNP LOT/NNP)
  In/IN
  (NP philosophy/NN language/NN)
  ,/,
  three/CD
  (NP main/JJ schools/NNS)
  thought/VBD
  regarding/VBG
  (NP relationship/NN language/NN)
  thought/VBD
  :/:
  •/VB
  (NP The/DT LOT/NNP)
  private/JJ
  ,/,
  (NP language-like/JJ representation/NN)
  ,/,
  (NP independent/JJ public/NN)
  ,/,
  (NP natural/JJ languages/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Clausal Logic Agent ’ LOT', 'philosophy language', 'main schools', 'relationship language', 'The LOT', 'language-like representation', 'independent public', 'natural languages']

>> Named Entities are: 
 [('ORGANIZATION', 'LOT')] 

>> Stemming using Porter Stemmer: 
 [('3', '3'), ('Clausal', 'clausal'), ('Logic', 'logic'), ('Agent', 'agent'), ('’', '’'), ('LOT', 'lot'), ('In', 'in'), ('philosophy', 'philosophi'), ('language', 'languag'), (',', ','), ('three', 'three'), ('main', 'main'), ('schools', 'school'), ('thought', 'thought'), ('regarding', 'regard'), ('relationship', 'relationship'), ('language', 'languag'), ('thought', 'thought'), (':', ':'), ('•', '•'), ('The', 'the'), ('LOT', 'lot'), ('private', 'privat'), (',', ','), ('language-like', 'language-lik'), ('representation', 'represent'), (',', ','), ('independent', 'independ'), ('public', 'public'), (',', ','), ('natural', 'natur'), ('languages', 'languag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('3', '3'), ('Clausal', 'clausal'), ('Logic', 'logic'), ('Agent', 'agent'), ('’', '’'), ('LOT', 'lot'), ('In', 'in'), ('philosophy', 'philosophi'), ('language', 'languag'), (',', ','), ('three', 'three'), ('main', 'main'), ('schools', 'school'), ('thought', 'thought'), ('regarding', 'regard'), ('relationship', 'relationship'), ('language', 'languag'), ('thought', 'thought'), (':', ':'), ('•', '•'), ('The', 'the'), ('LOT', 'lot'), ('private', 'privat'), (',', ','), ('language-like', 'language-lik'), ('representation', 'represent'), (',', ','), ('independent', 'independ'), ('public', 'public'), (',', ','), ('natural', 'natur'), ('languages', 'languag'), ('.', '.')]

>> Lemmatization: 
 [('3', '3'), ('Clausal', 'Clausal'), ('Logic', 'Logic'), ('Agent', 'Agent'), ('’', '’'), ('LOT', 'LOT'), ('In', 'In'), ('philosophy', 'philosophy'), ('language', 'language'), (',', ','), ('three', 'three'), ('main', 'main'), ('schools', 'school'), ('thought', 'thought'), ('regarding', 'regarding'), ('relationship', 'relationship'), ('language', 'language'), ('thought', 'thought'), (':', ':'), ('•', '•'), ('The', 'The'), ('LOT', 'LOT'), ('private', 'private'), (',', ','), ('language-like', 'language-like'), ('representation', 'representation'), (',', ','), ('independent', 'independent'), ('public', 'public'), (',', ','), ('natural', 'natural'), ('languages', 'language'), ('.', '.')]



============================ Sentence 81 =============================

• The LOT is a form of public language; and the natural   language that we speak influences the way that we think. 


>> Tokens are: 
 ['•', 'The', 'LOT', 'form', 'public', 'language', ';', 'natural', 'language', 'speak', 'influences', 'way', 'think', '.']

>> Bigrams are: 
 [('•', 'The'), ('The', 'LOT'), ('LOT', 'form'), ('form', 'public'), ('public', 'language'), ('language', ';'), (';', 'natural'), ('natural', 'language'), ('language', 'speak'), ('speak', 'influences'), ('influences', 'way'), ('way', 'think'), ('think', '.')]

>> Trigrams are: 
 [('•', 'The', 'LOT'), ('The', 'LOT', 'form'), ('LOT', 'form', 'public'), ('form', 'public', 'language'), ('public', 'language', ';'), ('language', ';', 'natural'), (';', 'natural', 'language'), ('natural', 'language', 'speak'), ('language', 'speak', 'influences'), ('speak', 'influences', 'way'), ('influences', 'way', 'think'), ('way', 'think', '.')]

>> POS Tags are: 
 [('•', 'VB'), ('The', 'DT'), ('LOT', 'NNP'), ('form', 'VB'), ('public', 'JJ'), ('language', 'NN'), (';', ':'), ('natural', 'JJ'), ('language', 'NN'), ('speak', 'NN'), ('influences', 'VBZ'), ('way', 'NN'), ('think', 'NN'), ('.', '.')]

 (S
  •/VB
  (NP The/DT LOT/NNP)
  form/VB
  (NP public/JJ language/NN)
  ;/:
  (NP natural/JJ language/NN speak/NN)
  influences/VBZ
  (NP way/NN think/NN)
  ./.) 


>> Noun Phrases are: 
 ['The LOT', 'public language', 'natural language speak', 'way think']

>> Named Entities are: 
 [('ORGANIZATION', 'LOT')] 

>> Stemming using Porter Stemmer: 
 [('•', '•'), ('The', 'the'), ('LOT', 'lot'), ('form', 'form'), ('public', 'public'), ('language', 'languag'), (';', ';'), ('natural', 'natur'), ('language', 'languag'), ('speak', 'speak'), ('influences', 'influenc'), ('way', 'way'), ('think', 'think'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('•', '•'), ('The', 'the'), ('LOT', 'lot'), ('form', 'form'), ('public', 'public'), ('language', 'languag'), (';', ';'), ('natural', 'natur'), ('language', 'languag'), ('speak', 'speak'), ('influences', 'influenc'), ('way', 'way'), ('think', 'think'), ('.', '.')]

>> Lemmatization: 
 [('•', '•'), ('The', 'The'), ('LOT', 'LOT'), ('form', 'form'), ('public', 'public'), ('language', 'language'), (';', ';'), ('natural', 'natural'), ('language', 'language'), ('speak', 'speak'), ('influences', 'influence'), ('way', 'way'), ('think', 'think'), ('.', '.')]



============================ Sentence 82 =============================

• Human thinking does not have a language-like structure. 


>> Tokens are: 
 ['•', 'Human', 'thinking', 'language-like', 'structure', '.']

>> Bigrams are: 
 [('•', 'Human'), ('Human', 'thinking'), ('thinking', 'language-like'), ('language-like', 'structure'), ('structure', '.')]

>> Trigrams are: 
 [('•', 'Human', 'thinking'), ('Human', 'thinking', 'language-like'), ('thinking', 'language-like', 'structure'), ('language-like', 'structure', '.')]

>> POS Tags are: 
 [('•', 'JJ'), ('Human', 'NNP'), ('thinking', 'VBG'), ('language-like', 'JJ'), ('structure', 'NN'), ('.', '.')]

 (S
  (NP •/JJ Human/NNP)
  thinking/VBG
  (NP language-like/JJ structure/NN)
  ./.) 


>> Noun Phrases are: 
 ['• Human', 'language-like structure']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('•', '•'), ('Human', 'human'), ('thinking', 'think'), ('language-like', 'language-lik'), ('structure', 'structur'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('•', '•'), ('Human', 'human'), ('thinking', 'think'), ('language-like', 'language-lik'), ('structure', 'structur'), ('.', '.')]

>> Lemmatization: 
 [('•', '•'), ('Human', 'Human'), ('thinking', 'thinking'), ('language-like', 'language-like'), ('structure', 'structure'), ('.', '.')]



============================ Sentence 83 =============================

The ALP agent model belongs to the first school of thought,  opposes the second school, but is compatible with the third. 


>> Tokens are: 
 ['The', 'ALP', 'agent', 'model', 'belongs', 'first', 'school', 'thought', ',', 'opposes', 'second', 'school', ',', 'compatible', 'third', '.']

>> Bigrams are: 
 [('The', 'ALP'), ('ALP', 'agent'), ('agent', 'model'), ('model', 'belongs'), ('belongs', 'first'), ('first', 'school'), ('school', 'thought'), ('thought', ','), (',', 'opposes'), ('opposes', 'second'), ('second', 'school'), ('school', ','), (',', 'compatible'), ('compatible', 'third'), ('third', '.')]

>> Trigrams are: 
 [('The', 'ALP', 'agent'), ('ALP', 'agent', 'model'), ('agent', 'model', 'belongs'), ('model', 'belongs', 'first'), ('belongs', 'first', 'school'), ('first', 'school', 'thought'), ('school', 'thought', ','), ('thought', ',', 'opposes'), (',', 'opposes', 'second'), ('opposes', 'second', 'school'), ('second', 'school', ','), ('school', ',', 'compatible'), (',', 'compatible', 'third'), ('compatible', 'third', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('ALP', 'NNP'), ('agent', 'NN'), ('model', 'NN'), ('belongs', 'NNS'), ('first', 'JJ'), ('school', 'NN'), ('thought', 'NN'), (',', ','), ('opposes', 'VBZ'), ('second', 'JJ'), ('school', 'NN'), (',', ','), ('compatible', 'JJ'), ('third', 'JJ'), ('.', '.')]

 (S
  (NP The/DT ALP/NNP agent/NN model/NN belongs/NNS)
  (NP first/JJ school/NN thought/NN)
  ,/,
  opposes/VBZ
  (NP second/JJ school/NN)
  ,/,
  compatible/JJ
  third/JJ
  ./.) 


>> Noun Phrases are: 
 ['The ALP agent model belongs', 'first school thought', 'second school']

>> Named Entities are: 
 [('ORGANIZATION', 'ALP')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), ('belongs', 'belong'), ('first', 'first'), ('school', 'school'), ('thought', 'thought'), (',', ','), ('opposes', 'oppos'), ('second', 'second'), ('school', 'school'), (',', ','), ('compatible', 'compat'), ('third', 'third'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), ('belongs', 'belong'), ('first', 'first'), ('school', 'school'), ('thought', 'thought'), (',', ','), ('opposes', 'oppos'), ('second', 'second'), ('school', 'school'), (',', ','), ('compatible', 'compat'), ('third', 'third'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('ALP', 'ALP'), ('agent', 'agent'), ('model', 'model'), ('belongs', 'belongs'), ('first', 'first'), ('school', 'school'), ('thought', 'thought'), (',', ','), ('opposes', 'opposes'), ('second', 'second'), ('school', 'school'), (',', ','), ('compatible', 'compatible'), ('third', 'third'), ('.', '.')]



============================ Sentence 84 =============================

It opposes the second school, partly because the ALP logical  model of thinking does not require the existence of natural  languages and partly because, by AI standards, natural lan- guage is too ambiguous and incoherent to serve as a useful  model of human thinking. 


>> Tokens are: 
 ['It', 'opposes', 'second', 'school', ',', 'partly', 'ALP', 'logical', 'model', 'thinking', 'require', 'existence', 'natural', 'languages', 'partly', ',', 'AI', 'standards', ',', 'natural', 'lan-', 'guage', 'ambiguous', 'incoherent', 'serve', 'useful', 'model', 'human', 'thinking', '.']

>> Bigrams are: 
 [('It', 'opposes'), ('opposes', 'second'), ('second', 'school'), ('school', ','), (',', 'partly'), ('partly', 'ALP'), ('ALP', 'logical'), ('logical', 'model'), ('model', 'thinking'), ('thinking', 'require'), ('require', 'existence'), ('existence', 'natural'), ('natural', 'languages'), ('languages', 'partly'), ('partly', ','), (',', 'AI'), ('AI', 'standards'), ('standards', ','), (',', 'natural'), ('natural', 'lan-'), ('lan-', 'guage'), ('guage', 'ambiguous'), ('ambiguous', 'incoherent'), ('incoherent', 'serve'), ('serve', 'useful'), ('useful', 'model'), ('model', 'human'), ('human', 'thinking'), ('thinking', '.')]

>> Trigrams are: 
 [('It', 'opposes', 'second'), ('opposes', 'second', 'school'), ('second', 'school', ','), ('school', ',', 'partly'), (',', 'partly', 'ALP'), ('partly', 'ALP', 'logical'), ('ALP', 'logical', 'model'), ('logical', 'model', 'thinking'), ('model', 'thinking', 'require'), ('thinking', 'require', 'existence'), ('require', 'existence', 'natural'), ('existence', 'natural', 'languages'), ('natural', 'languages', 'partly'), ('languages', 'partly', ','), ('partly', ',', 'AI'), (',', 'AI', 'standards'), ('AI', 'standards', ','), ('standards', ',', 'natural'), (',', 'natural', 'lan-'), ('natural', 'lan-', 'guage'), ('lan-', 'guage', 'ambiguous'), ('guage', 'ambiguous', 'incoherent'), ('ambiguous', 'incoherent', 'serve'), ('incoherent', 'serve', 'useful'), ('serve', 'useful', 'model'), ('useful', 'model', 'human'), ('model', 'human', 'thinking'), ('human', 'thinking', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('opposes', 'VBZ'), ('second', 'JJ'), ('school', 'NN'), (',', ','), ('partly', 'RB'), ('ALP', 'NNP'), ('logical', 'JJ'), ('model', 'NN'), ('thinking', 'VBG'), ('require', 'NN'), ('existence', 'NN'), ('natural', 'JJ'), ('languages', 'NNS'), ('partly', 'RB'), (',', ','), ('AI', 'NNP'), ('standards', 'NNS'), (',', ','), ('natural', 'JJ'), ('lan-', 'JJ'), ('guage', 'NN'), ('ambiguous', 'JJ'), ('incoherent', 'NN'), ('serve', 'NN'), ('useful', 'JJ'), ('model', 'NN'), ('human', 'JJ'), ('thinking', 'NN'), ('.', '.')]

 (S
  It/PRP
  opposes/VBZ
  (NP second/JJ school/NN)
  ,/,
  partly/RB
  (NP ALP/NNP)
  (NP logical/JJ model/NN)
  thinking/VBG
  (NP require/NN existence/NN)
  (NP natural/JJ languages/NNS)
  partly/RB
  ,/,
  (NP AI/NNP standards/NNS)
  ,/,
  (NP natural/JJ lan-/JJ guage/NN)
  (NP ambiguous/JJ incoherent/NN serve/NN)
  (NP useful/JJ model/NN)
  (NP human/JJ thinking/NN)
  ./.) 


>> Noun Phrases are: 
 ['second school', 'ALP', 'logical model', 'require existence', 'natural languages', 'AI standards', 'natural lan- guage', 'ambiguous incoherent serve', 'useful model', 'human thinking']

>> Named Entities are: 
 [('ORGANIZATION', 'ALP'), ('ORGANIZATION', 'AI')] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('opposes', 'oppos'), ('second', 'second'), ('school', 'school'), (',', ','), ('partly', 'partli'), ('ALP', 'alp'), ('logical', 'logic'), ('model', 'model'), ('thinking', 'think'), ('require', 'requir'), ('existence', 'exist'), ('natural', 'natur'), ('languages', 'languag'), ('partly', 'partli'), (',', ','), ('AI', 'ai'), ('standards', 'standard'), (',', ','), ('natural', 'natur'), ('lan-', 'lan-'), ('guage', 'guag'), ('ambiguous', 'ambigu'), ('incoherent', 'incoher'), ('serve', 'serv'), ('useful', 'use'), ('model', 'model'), ('human', 'human'), ('thinking', 'think'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('opposes', 'oppos'), ('second', 'second'), ('school', 'school'), (',', ','), ('partly', 'part'), ('ALP', 'alp'), ('logical', 'logic'), ('model', 'model'), ('thinking', 'think'), ('require', 'requir'), ('existence', 'exist'), ('natural', 'natur'), ('languages', 'languag'), ('partly', 'part'), (',', ','), ('AI', 'ai'), ('standards', 'standard'), (',', ','), ('natural', 'natur'), ('lan-', 'lan-'), ('guage', 'guag'), ('ambiguous', 'ambigu'), ('incoherent', 'incoher'), ('serve', 'serv'), ('useful', 'use'), ('model', 'model'), ('human', 'human'), ('thinking', 'think'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('opposes', 'opposes'), ('second', 'second'), ('school', 'school'), (',', ','), ('partly', 'partly'), ('ALP', 'ALP'), ('logical', 'logical'), ('model', 'model'), ('thinking', 'thinking'), ('require', 'require'), ('existence', 'existence'), ('natural', 'natural'), ('languages', 'language'), ('partly', 'partly'), (',', ','), ('AI', 'AI'), ('standards', 'standard'), (',', ','), ('natural', 'natural'), ('lan-', 'lan-'), ('guage', 'guage'), ('ambiguous', 'ambiguous'), ('incoherent', 'incoherent'), ('serve', 'serve'), ('useful', 'useful'), ('model', 'model'), ('human', 'human'), ('thinking', 'thinking'), ('.', '.')]



============================ Sentence 85 =============================

But it supports the third school,  because, as we will see in section 4, it has a connectionist  implementation, which conceals its linguistic nature. 


>> Tokens are: 
 ['But', 'supports', 'third', 'school', ',', ',', 'see', 'section', '4', ',', 'connectionist', 'implementation', ',', 'conceals', 'linguistic', 'nature', '.']

>> Bigrams are: 
 [('But', 'supports'), ('supports', 'third'), ('third', 'school'), ('school', ','), (',', ','), (',', 'see'), ('see', 'section'), ('section', '4'), ('4', ','), (',', 'connectionist'), ('connectionist', 'implementation'), ('implementation', ','), (',', 'conceals'), ('conceals', 'linguistic'), ('linguistic', 'nature'), ('nature', '.')]

>> Trigrams are: 
 [('But', 'supports', 'third'), ('supports', 'third', 'school'), ('third', 'school', ','), ('school', ',', ','), (',', ',', 'see'), (',', 'see', 'section'), ('see', 'section', '4'), ('section', '4', ','), ('4', ',', 'connectionist'), (',', 'connectionist', 'implementation'), ('connectionist', 'implementation', ','), ('implementation', ',', 'conceals'), (',', 'conceals', 'linguistic'), ('conceals', 'linguistic', 'nature'), ('linguistic', 'nature', '.')]

>> POS Tags are: 
 [('But', 'CC'), ('supports', 'NNS'), ('third', 'JJ'), ('school', 'NN'), (',', ','), (',', ','), ('see', 'VBP'), ('section', 'NN'), ('4', 'CD'), (',', ','), ('connectionist', 'NN'), ('implementation', 'NN'), (',', ','), ('conceals', 'NNS'), ('linguistic', 'JJ'), ('nature', 'NN'), ('.', '.')]

 (S
  But/CC
  (NP supports/NNS)
  (NP third/JJ school/NN)
  ,/,
  ,/,
  see/VBP
  (NP section/NN)
  4/CD
  ,/,
  (NP connectionist/NN implementation/NN)
  ,/,
  (NP conceals/NNS)
  (NP linguistic/JJ nature/NN)
  ./.) 


>> Noun Phrases are: 
 ['supports', 'third school', 'section', 'connectionist implementation', 'conceals', 'linguistic nature']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('But', 'but'), ('supports', 'support'), ('third', 'third'), ('school', 'school'), (',', ','), (',', ','), ('see', 'see'), ('section', 'section'), ('4', '4'), (',', ','), ('connectionist', 'connectionist'), ('implementation', 'implement'), (',', ','), ('conceals', 'conceal'), ('linguistic', 'linguist'), ('nature', 'natur'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('But', 'but'), ('supports', 'support'), ('third', 'third'), ('school', 'school'), (',', ','), (',', ','), ('see', 'see'), ('section', 'section'), ('4', '4'), (',', ','), ('connectionist', 'connectionist'), ('implementation', 'implement'), (',', ','), ('conceals', 'conceal'), ('linguistic', 'linguist'), ('nature', 'natur'), ('.', '.')]

>> Lemmatization: 
 [('But', 'But'), ('supports', 'support'), ('third', 'third'), ('school', 'school'), (',', ','), (',', ','), ('see', 'see'), ('section', 'section'), ('4', '4'), (',', ','), ('connectionist', 'connectionist'), ('implementation', 'implementation'), (',', ','), ('conceals', 'conceals'), ('linguistic', 'linguistic'), ('nature', 'nature'), ('.', '.')]



============================ Sentence 86 =============================

In AI, the notion that some form of logic is an agent’s  LOT is strongly associated with GOFAI (good old fash- ioned AI), which has been partly overshadowed in recent  years by connectionist and Bayesian approaches. 


>> Tokens are: 
 ['In', 'AI', ',', 'notion', 'form', 'logic', 'agent', '’', 'LOT', 'strongly', 'associated', 'GOFAI', '(', 'good', 'old', 'fash-', 'ioned', 'AI', ')', ',', 'partly', 'overshadowed', 'recent', 'years', 'connectionist', 'Bayesian', 'approaches', '.']

>> Bigrams are: 
 [('In', 'AI'), ('AI', ','), (',', 'notion'), ('notion', 'form'), ('form', 'logic'), ('logic', 'agent'), ('agent', '’'), ('’', 'LOT'), ('LOT', 'strongly'), ('strongly', 'associated'), ('associated', 'GOFAI'), ('GOFAI', '('), ('(', 'good'), ('good', 'old'), ('old', 'fash-'), ('fash-', 'ioned'), ('ioned', 'AI'), ('AI', ')'), (')', ','), (',', 'partly'), ('partly', 'overshadowed'), ('overshadowed', 'recent'), ('recent', 'years'), ('years', 'connectionist'), ('connectionist', 'Bayesian'), ('Bayesian', 'approaches'), ('approaches', '.')]

>> Trigrams are: 
 [('In', 'AI', ','), ('AI', ',', 'notion'), (',', 'notion', 'form'), ('notion', 'form', 'logic'), ('form', 'logic', 'agent'), ('logic', 'agent', '’'), ('agent', '’', 'LOT'), ('’', 'LOT', 'strongly'), ('LOT', 'strongly', 'associated'), ('strongly', 'associated', 'GOFAI'), ('associated', 'GOFAI', '('), ('GOFAI', '(', 'good'), ('(', 'good', 'old'), ('good', 'old', 'fash-'), ('old', 'fash-', 'ioned'), ('fash-', 'ioned', 'AI'), ('ioned', 'AI', ')'), ('AI', ')', ','), (')', ',', 'partly'), (',', 'partly', 'overshadowed'), ('partly', 'overshadowed', 'recent'), ('overshadowed', 'recent', 'years'), ('recent', 'years', 'connectionist'), ('years', 'connectionist', 'Bayesian'), ('connectionist', 'Bayesian', 'approaches'), ('Bayesian', 'approaches', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('AI', 'NNP'), (',', ','), ('notion', 'NN'), ('form', 'NN'), ('logic', 'JJ'), ('agent', 'NN'), ('’', 'NNP'), ('LOT', 'NNP'), ('strongly', 'RB'), ('associated', 'VBD'), ('GOFAI', 'NNP'), ('(', '('), ('good', 'JJ'), ('old', 'JJ'), ('fash-', 'NN'), ('ioned', 'VBD'), ('AI', 'NNP'), (')', ')'), (',', ','), ('partly', 'RB'), ('overshadowed', 'VBN'), ('recent', 'JJ'), ('years', 'NNS'), ('connectionist', 'VBP'), ('Bayesian', 'JJ'), ('approaches', 'NNS'), ('.', '.')]

 (S
  In/IN
  (NP AI/NNP)
  ,/,
  (NP notion/NN form/NN)
  (NP logic/JJ agent/NN ’/NNP LOT/NNP)
  strongly/RB
  associated/VBD
  (NP GOFAI/NNP)
  (/(
  (NP good/JJ old/JJ fash-/NN)
  ioned/VBD
  (NP AI/NNP)
  )/)
  ,/,
  partly/RB
  overshadowed/VBN
  (NP recent/JJ years/NNS)
  connectionist/VBP
  (NP Bayesian/JJ approaches/NNS)
  ./.) 


>> Noun Phrases are: 
 ['AI', 'notion form', 'logic agent ’ LOT', 'GOFAI', 'good old fash-', 'AI', 'recent years', 'Bayesian approaches']

>> Named Entities are: 
 [('GPE', 'AI'), ('ORGANIZATION', 'GOFAI'), ('GPE', 'Bayesian')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('AI', 'ai'), (',', ','), ('notion', 'notion'), ('form', 'form'), ('logic', 'logic'), ('agent', 'agent'), ('’', '’'), ('LOT', 'lot'), ('strongly', 'strongli'), ('associated', 'associ'), ('GOFAI', 'gofai'), ('(', '('), ('good', 'good'), ('old', 'old'), ('fash-', 'fash-'), ('ioned', 'ion'), ('AI', 'ai'), (')', ')'), (',', ','), ('partly', 'partli'), ('overshadowed', 'overshadow'), ('recent', 'recent'), ('years', 'year'), ('connectionist', 'connectionist'), ('Bayesian', 'bayesian'), ('approaches', 'approach'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('AI', 'ai'), (',', ','), ('notion', 'notion'), ('form', 'form'), ('logic', 'logic'), ('agent', 'agent'), ('’', '’'), ('LOT', 'lot'), ('strongly', 'strong'), ('associated', 'associ'), ('GOFAI', 'gofai'), ('(', '('), ('good', 'good'), ('old', 'old'), ('fash-', 'fash-'), ('ioned', 'ion'), ('AI', 'ai'), (')', ')'), (',', ','), ('partly', 'part'), ('overshadowed', 'overshadow'), ('recent', 'recent'), ('years', 'year'), ('connectionist', 'connectionist'), ('Bayesian', 'bayesian'), ('approaches', 'approach'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('AI', 'AI'), (',', ','), ('notion', 'notion'), ('form', 'form'), ('logic', 'logic'), ('agent', 'agent'), ('’', '’'), ('LOT', 'LOT'), ('strongly', 'strongly'), ('associated', 'associated'), ('GOFAI', 'GOFAI'), ('(', '('), ('good', 'good'), ('old', 'old'), ('fash-', 'fash-'), ('ioned', 'ioned'), ('AI', 'AI'), (')', ')'), (',', ','), ('partly', 'partly'), ('overshadowed', 'overshadowed'), ('recent', 'recent'), ('years', 'year'), ('connectionist', 'connectionist'), ('Bayesian', 'Bayesian'), ('approaches', 'approach'), ('.', '.')]



============================ Sentence 87 =============================

I will ar- gue that the ALP model of thinking potentially reconciles  the conflict between logic, connectionism and Bayesian  approaches. 


>> Tokens are: 
 ['I', 'ar-', 'gue', 'ALP', 'model', 'thinking', 'potentially', 'reconciles', 'conflict', 'logic', ',', 'connectionism', 'Bayesian', 'approaches', '.']

>> Bigrams are: 
 [('I', 'ar-'), ('ar-', 'gue'), ('gue', 'ALP'), ('ALP', 'model'), ('model', 'thinking'), ('thinking', 'potentially'), ('potentially', 'reconciles'), ('reconciles', 'conflict'), ('conflict', 'logic'), ('logic', ','), (',', 'connectionism'), ('connectionism', 'Bayesian'), ('Bayesian', 'approaches'), ('approaches', '.')]

>> Trigrams are: 
 [('I', 'ar-', 'gue'), ('ar-', 'gue', 'ALP'), ('gue', 'ALP', 'model'), ('ALP', 'model', 'thinking'), ('model', 'thinking', 'potentially'), ('thinking', 'potentially', 'reconciles'), ('potentially', 'reconciles', 'conflict'), ('reconciles', 'conflict', 'logic'), ('conflict', 'logic', ','), ('logic', ',', 'connectionism'), (',', 'connectionism', 'Bayesian'), ('connectionism', 'Bayesian', 'approaches'), ('Bayesian', 'approaches', '.')]

>> POS Tags are: 
 [('I', 'PRP'), ('ar-', 'VBP'), ('gue', 'JJ'), ('ALP', 'NNP'), ('model', 'NN'), ('thinking', 'VBG'), ('potentially', 'RB'), ('reconciles', 'VBZ'), ('conflict', 'NN'), ('logic', 'NN'), (',', ','), ('connectionism', 'NN'), ('Bayesian', 'JJ'), ('approaches', 'NNS'), ('.', '.')]

 (S
  I/PRP
  ar-/VBP
  (NP gue/JJ ALP/NNP model/NN)
  thinking/VBG
  potentially/RB
  reconciles/VBZ
  (NP conflict/NN logic/NN)
  ,/,
  (NP connectionism/NN)
  (NP Bayesian/JJ approaches/NNS)
  ./.) 


>> Noun Phrases are: 
 ['gue ALP model', 'conflict logic', 'connectionism', 'Bayesian approaches']

>> Named Entities are: 
 [('GPE', 'Bayesian')] 

>> Stemming using Porter Stemmer: 
 [('I', 'i'), ('ar-', 'ar-'), ('gue', 'gue'), ('ALP', 'alp'), ('model', 'model'), ('thinking', 'think'), ('potentially', 'potenti'), ('reconciles', 'reconcil'), ('conflict', 'conflict'), ('logic', 'logic'), (',', ','), ('connectionism', 'connection'), ('Bayesian', 'bayesian'), ('approaches', 'approach'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('I', 'i'), ('ar-', 'ar-'), ('gue', 'gue'), ('ALP', 'alp'), ('model', 'model'), ('thinking', 'think'), ('potentially', 'potenti'), ('reconciles', 'reconcil'), ('conflict', 'conflict'), ('logic', 'logic'), (',', ','), ('connectionism', 'connection'), ('Bayesian', 'bayesian'), ('approaches', 'approach'), ('.', '.')]

>> Lemmatization: 
 [('I', 'I'), ('ar-', 'ar-'), ('gue', 'gue'), ('ALP', 'ALP'), ('model', 'model'), ('thinking', 'thinking'), ('potentially', 'potentially'), ('reconciles', 'reconciles'), ('conflict', 'conflict'), ('logic', 'logic'), (',', ','), ('connectionism', 'connectionism'), ('Bayesian', 'Bayesian'), ('approaches', 'approach'), ('.', '.')]



============================ Sentence 88 =============================

This is because the clausal logic of ALP is  much simpler than standard FOL, has a connectionist im- plementation that accommodates Bayesian probability, and  bears a similar relationship to standard FOL as the LOT  bears to natural language. 


>> Tokens are: 
 ['This', 'clausal', 'logic', 'ALP', 'much', 'simpler', 'standard', 'FOL', ',', 'connectionist', 'im-', 'plementation', 'accommodates', 'Bayesian', 'probability', ',', 'bears', 'similar', 'relationship', 'standard', 'FOL', 'LOT', 'bears', 'natural', 'language', '.']

>> Bigrams are: 
 [('This', 'clausal'), ('clausal', 'logic'), ('logic', 'ALP'), ('ALP', 'much'), ('much', 'simpler'), ('simpler', 'standard'), ('standard', 'FOL'), ('FOL', ','), (',', 'connectionist'), ('connectionist', 'im-'), ('im-', 'plementation'), ('plementation', 'accommodates'), ('accommodates', 'Bayesian'), ('Bayesian', 'probability'), ('probability', ','), (',', 'bears'), ('bears', 'similar'), ('similar', 'relationship'), ('relationship', 'standard'), ('standard', 'FOL'), ('FOL', 'LOT'), ('LOT', 'bears'), ('bears', 'natural'), ('natural', 'language'), ('language', '.')]

>> Trigrams are: 
 [('This', 'clausal', 'logic'), ('clausal', 'logic', 'ALP'), ('logic', 'ALP', 'much'), ('ALP', 'much', 'simpler'), ('much', 'simpler', 'standard'), ('simpler', 'standard', 'FOL'), ('standard', 'FOL', ','), ('FOL', ',', 'connectionist'), (',', 'connectionist', 'im-'), ('connectionist', 'im-', 'plementation'), ('im-', 'plementation', 'accommodates'), ('plementation', 'accommodates', 'Bayesian'), ('accommodates', 'Bayesian', 'probability'), ('Bayesian', 'probability', ','), ('probability', ',', 'bears'), (',', 'bears', 'similar'), ('bears', 'similar', 'relationship'), ('similar', 'relationship', 'standard'), ('relationship', 'standard', 'FOL'), ('standard', 'FOL', 'LOT'), ('FOL', 'LOT', 'bears'), ('LOT', 'bears', 'natural'), ('bears', 'natural', 'language'), ('natural', 'language', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('clausal', 'NN'), ('logic', 'VBZ'), ('ALP', 'NNP'), ('much', 'RB'), ('simpler', 'VBZ'), ('standard', 'JJ'), ('FOL', 'NNP'), (',', ','), ('connectionist', 'JJ'), ('im-', 'JJ'), ('plementation', 'NN'), ('accommodates', 'VBZ'), ('Bayesian', 'JJ'), ('probability', 'NN'), (',', ','), ('bears', 'VBZ'), ('similar', 'JJ'), ('relationship', 'NN'), ('standard', 'NN'), ('FOL', 'NNP'), ('LOT', 'NNP'), ('bears', 'VBZ'), ('natural', 'JJ'), ('language', 'NN'), ('.', '.')]

 (S
  (NP This/DT clausal/NN)
  logic/VBZ
  (NP ALP/NNP)
  much/RB
  simpler/VBZ
  (NP standard/JJ FOL/NNP)
  ,/,
  (NP connectionist/JJ im-/JJ plementation/NN)
  accommodates/VBZ
  (NP Bayesian/JJ probability/NN)
  ,/,
  bears/VBZ
  (NP similar/JJ relationship/NN standard/NN FOL/NNP LOT/NNP)
  bears/VBZ
  (NP natural/JJ language/NN)
  ./.) 


>> Noun Phrases are: 
 ['This clausal', 'ALP', 'standard FOL', 'connectionist im- plementation', 'Bayesian probability', 'similar relationship standard FOL LOT', 'natural language']

>> Named Entities are: 
 [('ORGANIZATION', 'ALP'), ('ORGANIZATION', 'FOL'), ('GPE', 'Bayesian'), ('ORGANIZATION', 'FOL')] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('clausal', 'clausal'), ('logic', 'logic'), ('ALP', 'alp'), ('much', 'much'), ('simpler', 'simpler'), ('standard', 'standard'), ('FOL', 'fol'), (',', ','), ('connectionist', 'connectionist'), ('im-', 'im-'), ('plementation', 'plement'), ('accommodates', 'accommod'), ('Bayesian', 'bayesian'), ('probability', 'probabl'), (',', ','), ('bears', 'bear'), ('similar', 'similar'), ('relationship', 'relationship'), ('standard', 'standard'), ('FOL', 'fol'), ('LOT', 'lot'), ('bears', 'bear'), ('natural', 'natur'), ('language', 'languag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('clausal', 'clausal'), ('logic', 'logic'), ('ALP', 'alp'), ('much', 'much'), ('simpler', 'simpler'), ('standard', 'standard'), ('FOL', 'fol'), (',', ','), ('connectionist', 'connectionist'), ('im-', 'im-'), ('plementation', 'plement'), ('accommodates', 'accommod'), ('Bayesian', 'bayesian'), ('probability', 'probabl'), (',', ','), ('bears', 'bear'), ('similar', 'similar'), ('relationship', 'relationship'), ('standard', 'standard'), ('FOL', 'fol'), ('LOT', 'lot'), ('bears', 'bear'), ('natural', 'natur'), ('language', 'languag'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('clausal', 'clausal'), ('logic', 'logic'), ('ALP', 'ALP'), ('much', 'much'), ('simpler', 'simpler'), ('standard', 'standard'), ('FOL', 'FOL'), (',', ','), ('connectionist', 'connectionist'), ('im-', 'im-'), ('plementation', 'plementation'), ('accommodates', 'accommodates'), ('Bayesian', 'Bayesian'), ('probability', 'probability'), (',', ','), ('bears', 'bear'), ('similar', 'similar'), ('relationship', 'relationship'), ('standard', 'standard'), ('FOL', 'FOL'), ('LOT', 'LOT'), ('bears', 'bear'), ('natural', 'natural'), ('language', 'language'), ('.', '.')]



============================ Sentence 89 =============================

The first step of the argument is based on relevance the- ory [Sperber and Wilson, 1986], which maintains that peo- ple understand natural language by attempting to extract the  most information for the least processing cost. 


>> Tokens are: 
 ['The', 'first', 'step', 'argument', 'based', 'relevance', 'the-', 'ory', '[', 'Sperber', 'Wilson', ',', '1986', ']', ',', 'maintains', 'peo-', 'ple', 'understand', 'natural', 'language', 'attempting', 'extract', 'information', 'least', 'processing', 'cost', '.']

>> Bigrams are: 
 [('The', 'first'), ('first', 'step'), ('step', 'argument'), ('argument', 'based'), ('based', 'relevance'), ('relevance', 'the-'), ('the-', 'ory'), ('ory', '['), ('[', 'Sperber'), ('Sperber', 'Wilson'), ('Wilson', ','), (',', '1986'), ('1986', ']'), (']', ','), (',', 'maintains'), ('maintains', 'peo-'), ('peo-', 'ple'), ('ple', 'understand'), ('understand', 'natural'), ('natural', 'language'), ('language', 'attempting'), ('attempting', 'extract'), ('extract', 'information'), ('information', 'least'), ('least', 'processing'), ('processing', 'cost'), ('cost', '.')]

>> Trigrams are: 
 [('The', 'first', 'step'), ('first', 'step', 'argument'), ('step', 'argument', 'based'), ('argument', 'based', 'relevance'), ('based', 'relevance', 'the-'), ('relevance', 'the-', 'ory'), ('the-', 'ory', '['), ('ory', '[', 'Sperber'), ('[', 'Sperber', 'Wilson'), ('Sperber', 'Wilson', ','), ('Wilson', ',', '1986'), (',', '1986', ']'), ('1986', ']', ','), (']', ',', 'maintains'), (',', 'maintains', 'peo-'), ('maintains', 'peo-', 'ple'), ('peo-', 'ple', 'understand'), ('ple', 'understand', 'natural'), ('understand', 'natural', 'language'), ('natural', 'language', 'attempting'), ('language', 'attempting', 'extract'), ('attempting', 'extract', 'information'), ('extract', 'information', 'least'), ('information', 'least', 'processing'), ('least', 'processing', 'cost'), ('processing', 'cost', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('first', 'JJ'), ('step', 'NN'), ('argument', 'NN'), ('based', 'VBN'), ('relevance', 'NN'), ('the-', 'JJ'), ('ory', 'NN'), ('[', 'NNP'), ('Sperber', 'NNP'), ('Wilson', 'NNP'), (',', ','), ('1986', 'CD'), (']', 'NN'), (',', ','), ('maintains', 'VBZ'), ('peo-', 'JJ'), ('ple', 'NN'), ('understand', 'JJ'), ('natural', 'JJ'), ('language', 'NN'), ('attempting', 'VBG'), ('extract', 'JJ'), ('information', 'NN'), ('least', 'JJS'), ('processing', 'NN'), ('cost', 'NN'), ('.', '.')]

 (S
  (NP The/DT first/JJ step/NN argument/NN)
  based/VBN
  (NP relevance/NN)
  (NP the-/JJ ory/NN [/NNP Sperber/NNP Wilson/NNP)
  ,/,
  1986/CD
  (NP ]/NN)
  ,/,
  maintains/VBZ
  (NP peo-/JJ ple/NN)
  (NP understand/JJ natural/JJ language/NN)
  attempting/VBG
  (NP extract/JJ information/NN)
  least/JJS
  (NP processing/NN cost/NN)
  ./.) 


>> Noun Phrases are: 
 ['The first step argument', 'relevance', 'the- ory [ Sperber Wilson', ']', 'peo- ple', 'understand natural language', 'extract information', 'processing cost']

>> Named Entities are: 
 [('PERSON', 'Wilson')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('first', 'first'), ('step', 'step'), ('argument', 'argument'), ('based', 'base'), ('relevance', 'relev'), ('the-', 'the-'), ('ory', 'ori'), ('[', '['), ('Sperber', 'sperber'), ('Wilson', 'wilson'), (',', ','), ('1986', '1986'), (']', ']'), (',', ','), ('maintains', 'maintain'), ('peo-', 'peo-'), ('ple', 'ple'), ('understand', 'understand'), ('natural', 'natur'), ('language', 'languag'), ('attempting', 'attempt'), ('extract', 'extract'), ('information', 'inform'), ('least', 'least'), ('processing', 'process'), ('cost', 'cost'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('first', 'first'), ('step', 'step'), ('argument', 'argument'), ('based', 'base'), ('relevance', 'relev'), ('the-', 'the-'), ('ory', 'ori'), ('[', '['), ('Sperber', 'sperber'), ('Wilson', 'wilson'), (',', ','), ('1986', '1986'), (']', ']'), (',', ','), ('maintains', 'maintain'), ('peo-', 'peo-'), ('ple', 'ple'), ('understand', 'understand'), ('natural', 'natur'), ('language', 'languag'), ('attempting', 'attempt'), ('extract', 'extract'), ('information', 'inform'), ('least', 'least'), ('processing', 'process'), ('cost', 'cost'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('first', 'first'), ('step', 'step'), ('argument', 'argument'), ('based', 'based'), ('relevance', 'relevance'), ('the-', 'the-'), ('ory', 'ory'), ('[', '['), ('Sperber', 'Sperber'), ('Wilson', 'Wilson'), (',', ','), ('1986', '1986'), (']', ']'), (',', ','), ('maintains', 'maintains'), ('peo-', 'peo-'), ('ple', 'ple'), ('understand', 'understand'), ('natural', 'natural'), ('language', 'language'), ('attempting', 'attempting'), ('extract', 'extract'), ('information', 'information'), ('least', 'least'), ('processing', 'processing'), ('cost', 'cost'), ('.', '.')]



============================ Sentence 90 =============================

It follows, as  a corollary of the theory, that, the closer a communication is   to its intended meaning, the easier it is for a reader (or lis- tener) to extract that meaning of the communication. 


>> Tokens are: 
 ['It', 'follows', ',', 'corollary', 'theory', ',', ',', 'closer', 'communication', 'intended', 'meaning', ',', 'easier', 'reader', '(', 'lis-', 'tener', ')', 'extract', 'meaning', 'communication', '.']

>> Bigrams are: 
 [('It', 'follows'), ('follows', ','), (',', 'corollary'), ('corollary', 'theory'), ('theory', ','), (',', ','), (',', 'closer'), ('closer', 'communication'), ('communication', 'intended'), ('intended', 'meaning'), ('meaning', ','), (',', 'easier'), ('easier', 'reader'), ('reader', '('), ('(', 'lis-'), ('lis-', 'tener'), ('tener', ')'), (')', 'extract'), ('extract', 'meaning'), ('meaning', 'communication'), ('communication', '.')]

>> Trigrams are: 
 [('It', 'follows', ','), ('follows', ',', 'corollary'), (',', 'corollary', 'theory'), ('corollary', 'theory', ','), ('theory', ',', ','), (',', ',', 'closer'), (',', 'closer', 'communication'), ('closer', 'communication', 'intended'), ('communication', 'intended', 'meaning'), ('intended', 'meaning', ','), ('meaning', ',', 'easier'), (',', 'easier', 'reader'), ('easier', 'reader', '('), ('reader', '(', 'lis-'), ('(', 'lis-', 'tener'), ('lis-', 'tener', ')'), ('tener', ')', 'extract'), (')', 'extract', 'meaning'), ('extract', 'meaning', 'communication'), ('meaning', 'communication', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('follows', 'VBZ'), (',', ','), ('corollary', 'JJ'), ('theory', 'NN'), (',', ','), (',', ','), ('closer', 'JJR'), ('communication', 'NN'), ('intended', 'VBD'), ('meaning', 'NN'), (',', ','), ('easier', 'JJR'), ('reader', 'NN'), ('(', '('), ('lis-', 'JJ'), ('tener', 'NN'), (')', ')'), ('extract', 'NN'), ('meaning', 'VBG'), ('communication', 'NN'), ('.', '.')]

 (S
  It/PRP
  follows/VBZ
  ,/,
  (NP corollary/JJ theory/NN)
  ,/,
  ,/,
  closer/JJR
  (NP communication/NN)
  intended/VBD
  (NP meaning/NN)
  ,/,
  easier/JJR
  (NP reader/NN)
  (/(
  (NP lis-/JJ tener/NN)
  )/)
  (NP extract/NN)
  meaning/VBG
  (NP communication/NN)
  ./.) 


>> Noun Phrases are: 
 ['corollary theory', 'communication', 'meaning', 'reader', 'lis- tener', 'extract', 'communication']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('follows', 'follow'), (',', ','), ('corollary', 'corollari'), ('theory', 'theori'), (',', ','), (',', ','), ('closer', 'closer'), ('communication', 'commun'), ('intended', 'intend'), ('meaning', 'mean'), (',', ','), ('easier', 'easier'), ('reader', 'reader'), ('(', '('), ('lis-', 'lis-'), ('tener', 'tener'), (')', ')'), ('extract', 'extract'), ('meaning', 'mean'), ('communication', 'commun'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('follows', 'follow'), (',', ','), ('corollary', 'corollari'), ('theory', 'theori'), (',', ','), (',', ','), ('closer', 'closer'), ('communication', 'communic'), ('intended', 'intend'), ('meaning', 'mean'), (',', ','), ('easier', 'easier'), ('reader', 'reader'), ('(', '('), ('lis-', 'lis-'), ('tener', 'tener'), (')', ')'), ('extract', 'extract'), ('meaning', 'mean'), ('communication', 'communic'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('follows', 'follows'), (',', ','), ('corollary', 'corollary'), ('theory', 'theory'), (',', ','), (',', ','), ('closer', 'closer'), ('communication', 'communication'), ('intended', 'intended'), ('meaning', 'meaning'), (',', ','), ('easier', 'easier'), ('reader', 'reader'), ('(', '('), ('lis-', 'lis-'), ('tener', 'tener'), (')', ')'), ('extract', 'extract'), ('meaning', 'meaning'), ('communication', 'communication'), ('.', '.')]



============================ Sentence 91 =============================

Thus one way to determine whether there is a LOT, and  what it might look like, is to look at situations where it can  be a matter of life or death that readers understand a com- munication as intended and with as little effort as possible. 


>> Tokens are: 
 ['Thus', 'one', 'way', 'determine', 'whether', 'LOT', ',', 'might', 'look', 'like', ',', 'look', 'situations', 'matter', 'life', 'death', 'readers', 'understand', 'com-', 'munication', 'intended', 'little', 'effort', 'possible', '.']

>> Bigrams are: 
 [('Thus', 'one'), ('one', 'way'), ('way', 'determine'), ('determine', 'whether'), ('whether', 'LOT'), ('LOT', ','), (',', 'might'), ('might', 'look'), ('look', 'like'), ('like', ','), (',', 'look'), ('look', 'situations'), ('situations', 'matter'), ('matter', 'life'), ('life', 'death'), ('death', 'readers'), ('readers', 'understand'), ('understand', 'com-'), ('com-', 'munication'), ('munication', 'intended'), ('intended', 'little'), ('little', 'effort'), ('effort', 'possible'), ('possible', '.')]

>> Trigrams are: 
 [('Thus', 'one', 'way'), ('one', 'way', 'determine'), ('way', 'determine', 'whether'), ('determine', 'whether', 'LOT'), ('whether', 'LOT', ','), ('LOT', ',', 'might'), (',', 'might', 'look'), ('might', 'look', 'like'), ('look', 'like', ','), ('like', ',', 'look'), (',', 'look', 'situations'), ('look', 'situations', 'matter'), ('situations', 'matter', 'life'), ('matter', 'life', 'death'), ('life', 'death', 'readers'), ('death', 'readers', 'understand'), ('readers', 'understand', 'com-'), ('understand', 'com-', 'munication'), ('com-', 'munication', 'intended'), ('munication', 'intended', 'little'), ('intended', 'little', 'effort'), ('little', 'effort', 'possible'), ('effort', 'possible', '.')]

>> POS Tags are: 
 [('Thus', 'RB'), ('one', 'CD'), ('way', 'NN'), ('determine', 'VBZ'), ('whether', 'IN'), ('LOT', 'NNP'), (',', ','), ('might', 'MD'), ('look', 'VB'), ('like', 'IN'), (',', ','), ('look', 'VB'), ('situations', 'NNS'), ('matter', 'JJ'), ('life', 'NN'), ('death', 'NN'), ('readers', 'NNS'), ('understand', 'VBP'), ('com-', 'JJ'), ('munication', 'NN'), ('intended', 'VBD'), ('little', 'JJ'), ('effort', 'NN'), ('possible', 'JJ'), ('.', '.')]

 (S
  Thus/RB
  one/CD
  (NP way/NN)
  determine/VBZ
  whether/IN
  (NP LOT/NNP)
  ,/,
  might/MD
  look/VB
  like/IN
  ,/,
  look/VB
  (NP situations/NNS)
  (NP matter/JJ life/NN death/NN readers/NNS)
  understand/VBP
  (NP com-/JJ munication/NN)
  intended/VBD
  (NP little/JJ effort/NN)
  possible/JJ
  ./.) 


>> Noun Phrases are: 
 ['way', 'LOT', 'situations', 'matter life death readers', 'com- munication', 'little effort']

>> Named Entities are: 
 [('ORGANIZATION', 'LOT')] 

>> Stemming using Porter Stemmer: 
 [('Thus', 'thu'), ('one', 'one'), ('way', 'way'), ('determine', 'determin'), ('whether', 'whether'), ('LOT', 'lot'), (',', ','), ('might', 'might'), ('look', 'look'), ('like', 'like'), (',', ','), ('look', 'look'), ('situations', 'situat'), ('matter', 'matter'), ('life', 'life'), ('death', 'death'), ('readers', 'reader'), ('understand', 'understand'), ('com-', 'com-'), ('munication', 'munic'), ('intended', 'intend'), ('little', 'littl'), ('effort', 'effort'), ('possible', 'possibl'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Thus', 'thus'), ('one', 'one'), ('way', 'way'), ('determine', 'determin'), ('whether', 'whether'), ('LOT', 'lot'), (',', ','), ('might', 'might'), ('look', 'look'), ('like', 'like'), (',', ','), ('look', 'look'), ('situations', 'situat'), ('matter', 'matter'), ('life', 'life'), ('death', 'death'), ('readers', 'reader'), ('understand', 'understand'), ('com-', 'com-'), ('munication', 'munic'), ('intended', 'intend'), ('little', 'littl'), ('effort', 'effort'), ('possible', 'possibl'), ('.', '.')]

>> Lemmatization: 
 [('Thus', 'Thus'), ('one', 'one'), ('way', 'way'), ('determine', 'determine'), ('whether', 'whether'), ('LOT', 'LOT'), (',', ','), ('might', 'might'), ('look', 'look'), ('like', 'like'), (',', ','), ('look', 'look'), ('situations', 'situation'), ('matter', 'matter'), ('life', 'life'), ('death', 'death'), ('readers', 'reader'), ('understand', 'understand'), ('com-', 'com-'), ('munication', 'munication'), ('intended', 'intended'), ('little', 'little'), ('effort', 'effort'), ('possible', 'possible'), ('.', '.')]



============================ Sentence 92 =============================

We will see that, in the case of the London underground  Emergency Notice, the communication is easy to understand  because its English sentences are structured explicitly or  implicitly as logical conditionals. 


>> Tokens are: 
 ['We', 'see', ',', 'case', 'London', 'underground', 'Emergency', 'Notice', ',', 'communication', 'easy', 'understand', 'English', 'sentences', 'structured', 'explicitly', 'implicitly', 'logical', 'conditionals', '.']

>> Bigrams are: 
 [('We', 'see'), ('see', ','), (',', 'case'), ('case', 'London'), ('London', 'underground'), ('underground', 'Emergency'), ('Emergency', 'Notice'), ('Notice', ','), (',', 'communication'), ('communication', 'easy'), ('easy', 'understand'), ('understand', 'English'), ('English', 'sentences'), ('sentences', 'structured'), ('structured', 'explicitly'), ('explicitly', 'implicitly'), ('implicitly', 'logical'), ('logical', 'conditionals'), ('conditionals', '.')]

>> Trigrams are: 
 [('We', 'see', ','), ('see', ',', 'case'), (',', 'case', 'London'), ('case', 'London', 'underground'), ('London', 'underground', 'Emergency'), ('underground', 'Emergency', 'Notice'), ('Emergency', 'Notice', ','), ('Notice', ',', 'communication'), (',', 'communication', 'easy'), ('communication', 'easy', 'understand'), ('easy', 'understand', 'English'), ('understand', 'English', 'sentences'), ('English', 'sentences', 'structured'), ('sentences', 'structured', 'explicitly'), ('structured', 'explicitly', 'implicitly'), ('explicitly', 'implicitly', 'logical'), ('implicitly', 'logical', 'conditionals'), ('logical', 'conditionals', '.')]

>> POS Tags are: 
 [('We', 'PRP'), ('see', 'VBP'), (',', ','), ('case', 'NN'), ('London', 'NNP'), ('underground', 'JJ'), ('Emergency', 'NNP'), ('Notice', 'NNP'), (',', ','), ('communication', 'NN'), ('easy', 'JJ'), ('understand', 'JJ'), ('English', 'NNP'), ('sentences', 'NNS'), ('structured', 'VBD'), ('explicitly', 'RB'), ('implicitly', 'RB'), ('logical', 'JJ'), ('conditionals', 'NNS'), ('.', '.')]

 (S
  We/PRP
  see/VBP
  ,/,
  (NP case/NN London/NNP)
  (NP underground/JJ Emergency/NNP Notice/NNP)
  ,/,
  (NP communication/NN)
  (NP easy/JJ understand/JJ English/NNP sentences/NNS)
  structured/VBD
  explicitly/RB
  implicitly/RB
  (NP logical/JJ conditionals/NNS)
  ./.) 


>> Noun Phrases are: 
 ['case London', 'underground Emergency Notice', 'communication', 'easy understand English sentences', 'logical conditionals']

>> Named Entities are: 
 [('GPE', 'London'), ('ORGANIZATION', 'Emergency Notice'), ('GPE', 'English')] 

>> Stemming using Porter Stemmer: 
 [('We', 'we'), ('see', 'see'), (',', ','), ('case', 'case'), ('London', 'london'), ('underground', 'underground'), ('Emergency', 'emerg'), ('Notice', 'notic'), (',', ','), ('communication', 'commun'), ('easy', 'easi'), ('understand', 'understand'), ('English', 'english'), ('sentences', 'sentenc'), ('structured', 'structur'), ('explicitly', 'explicitli'), ('implicitly', 'implicitli'), ('logical', 'logic'), ('conditionals', 'condit'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('We', 'we'), ('see', 'see'), (',', ','), ('case', 'case'), ('London', 'london'), ('underground', 'underground'), ('Emergency', 'emerg'), ('Notice', 'notic'), (',', ','), ('communication', 'communic'), ('easy', 'easi'), ('understand', 'understand'), ('English', 'english'), ('sentences', 'sentenc'), ('structured', 'structur'), ('explicitly', 'explicit'), ('implicitly', 'implicit'), ('logical', 'logic'), ('conditionals', 'condit'), ('.', '.')]

>> Lemmatization: 
 [('We', 'We'), ('see', 'see'), (',', ','), ('case', 'case'), ('London', 'London'), ('underground', 'underground'), ('Emergency', 'Emergency'), ('Notice', 'Notice'), (',', ','), ('communication', 'communication'), ('easy', 'easy'), ('understand', 'understand'), ('English', 'English'), ('sentences', 'sentence'), ('structured', 'structured'), ('explicitly', 'explicitly'), ('implicitly', 'implicitly'), ('logical', 'logical'), ('conditionals', 'conditionals'), ('.', '.')]



============================ Sentence 93 =============================

3.1    What to do in an Emergency     Press the alarm signal button to alert the driver. 


>> Tokens are: 
 ['3.1', 'What', 'Emergency', 'Press', 'alarm', 'signal', 'button', 'alert', 'driver', '.']

>> Bigrams are: 
 [('3.1', 'What'), ('What', 'Emergency'), ('Emergency', 'Press'), ('Press', 'alarm'), ('alarm', 'signal'), ('signal', 'button'), ('button', 'alert'), ('alert', 'driver'), ('driver', '.')]

>> Trigrams are: 
 [('3.1', 'What', 'Emergency'), ('What', 'Emergency', 'Press'), ('Emergency', 'Press', 'alarm'), ('Press', 'alarm', 'signal'), ('alarm', 'signal', 'button'), ('signal', 'button', 'alert'), ('button', 'alert', 'driver'), ('alert', 'driver', '.')]

>> POS Tags are: 
 [('3.1', 'CD'), ('What', 'WP'), ('Emergency', 'NNP'), ('Press', 'NNP'), ('alarm', 'VBD'), ('signal', 'JJ'), ('button', 'NN'), ('alert', 'NN'), ('driver', 'NN'), ('.', '.')]

 (S
  3.1/CD
  What/WP
  (NP Emergency/NNP Press/NNP)
  alarm/VBD
  (NP signal/JJ button/NN alert/NN driver/NN)
  ./.) 


>> Noun Phrases are: 
 ['Emergency Press', 'signal button alert driver']

>> Named Entities are: 
 [('PERSON', 'Emergency Press')] 

>> Stemming using Porter Stemmer: 
 [('3.1', '3.1'), ('What', 'what'), ('Emergency', 'emerg'), ('Press', 'press'), ('alarm', 'alarm'), ('signal', 'signal'), ('button', 'button'), ('alert', 'alert'), ('driver', 'driver'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('3.1', '3.1'), ('What', 'what'), ('Emergency', 'emerg'), ('Press', 'press'), ('alarm', 'alarm'), ('signal', 'signal'), ('button', 'button'), ('alert', 'alert'), ('driver', 'driver'), ('.', '.')]

>> Lemmatization: 
 [('3.1', '3.1'), ('What', 'What'), ('Emergency', 'Emergency'), ('Press', 'Press'), ('alarm', 'alarm'), ('signal', 'signal'), ('button', 'button'), ('alert', 'alert'), ('driver', 'driver'), ('.', '.')]



============================ Sentence 94 =============================

The driver will stop if any part of the train is in a station. 


>> Tokens are: 
 ['The', 'driver', 'stop', 'part', 'train', 'station', '.']

>> Bigrams are: 
 [('The', 'driver'), ('driver', 'stop'), ('stop', 'part'), ('part', 'train'), ('train', 'station'), ('station', '.')]

>> Trigrams are: 
 [('The', 'driver', 'stop'), ('driver', 'stop', 'part'), ('stop', 'part', 'train'), ('part', 'train', 'station'), ('train', 'station', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('driver', 'NN'), ('stop', 'VB'), ('part', 'NN'), ('train', 'NN'), ('station', 'NN'), ('.', '.')]

 (S
  (NP The/DT driver/NN)
  stop/VB
  (NP part/NN train/NN station/NN)
  ./.) 


>> Noun Phrases are: 
 ['The driver', 'part train station']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('driver', 'driver'), ('stop', 'stop'), ('part', 'part'), ('train', 'train'), ('station', 'station'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('driver', 'driver'), ('stop', 'stop'), ('part', 'part'), ('train', 'train'), ('station', 'station'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('driver', 'driver'), ('stop', 'stop'), ('part', 'part'), ('train', 'train'), ('station', 'station'), ('.', '.')]



============================ Sentence 95 =============================

If not, the train will continue to the next station,    where help can more easily be given. 


>> Tokens are: 
 ['If', ',', 'train', 'continue', 'next', 'station', ',', 'help', 'easily', 'given', '.']

>> Bigrams are: 
 [('If', ','), (',', 'train'), ('train', 'continue'), ('continue', 'next'), ('next', 'station'), ('station', ','), (',', 'help'), ('help', 'easily'), ('easily', 'given'), ('given', '.')]

>> Trigrams are: 
 [('If', ',', 'train'), (',', 'train', 'continue'), ('train', 'continue', 'next'), ('continue', 'next', 'station'), ('next', 'station', ','), ('station', ',', 'help'), (',', 'help', 'easily'), ('help', 'easily', 'given'), ('easily', 'given', '.')]

>> POS Tags are: 
 [('If', 'IN'), (',', ','), ('train', 'VBP'), ('continue', 'VBP'), ('next', 'JJ'), ('station', 'NN'), (',', ','), ('help', 'VBP'), ('easily', 'RB'), ('given', 'VBN'), ('.', '.')]

 (S
  If/IN
  ,/,
  train/VBP
  continue/VBP
  (NP next/JJ station/NN)
  ,/,
  help/VBP
  easily/RB
  given/VBN
  ./.) 


>> Noun Phrases are: 
 ['next station']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), (',', ','), ('train', 'train'), ('continue', 'continu'), ('next', 'next'), ('station', 'station'), (',', ','), ('help', 'help'), ('easily', 'easili'), ('given', 'given'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), (',', ','), ('train', 'train'), ('continue', 'continu'), ('next', 'next'), ('station', 'station'), (',', ','), ('help', 'help'), ('easily', 'easili'), ('given', 'given'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), (',', ','), ('train', 'train'), ('continue', 'continue'), ('next', 'next'), ('station', 'station'), (',', ','), ('help', 'help'), ('easily', 'easily'), ('given', 'given'), ('.', '.')]



============================ Sentence 96 =============================

There is a 50 pound penalty for improper use. 


>> Tokens are: 
 ['There', '50', 'pound', 'penalty', 'improper', 'use', '.']

>> Bigrams are: 
 [('There', '50'), ('50', 'pound'), ('pound', 'penalty'), ('penalty', 'improper'), ('improper', 'use'), ('use', '.')]

>> Trigrams are: 
 [('There', '50', 'pound'), ('50', 'pound', 'penalty'), ('pound', 'penalty', 'improper'), ('penalty', 'improper', 'use'), ('improper', 'use', '.')]

>> POS Tags are: 
 [('There', 'EX'), ('50', 'CD'), ('pound', 'NN'), ('penalty', 'NN'), ('improper', 'NN'), ('use', 'NN'), ('.', '.')]

 (S There/EX 50/CD (NP pound/NN penalty/NN improper/NN use/NN) ./.) 


>> Noun Phrases are: 
 ['pound penalty improper use']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('There', 'there'), ('50', '50'), ('pound', 'pound'), ('penalty', 'penalti'), ('improper', 'improp'), ('use', 'use'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('There', 'there'), ('50', '50'), ('pound', 'pound'), ('penalty', 'penalti'), ('improper', 'improp'), ('use', 'use'), ('.', '.')]

>> Lemmatization: 
 [('There', 'There'), ('50', '50'), ('pound', 'pound'), ('penalty', 'penalty'), ('improper', 'improper'), ('use', 'use'), ('.', '.')]



============================ Sentence 97 =============================

The first sentence is a goal-reduction procedure, whose  underlying logic is a logic programming clause:     the driver is alerted   if you press the alarm signal button. 


>> Tokens are: 
 ['The', 'first', 'sentence', 'goal-reduction', 'procedure', ',', 'whose', 'underlying', 'logic', 'logic', 'programming', 'clause', ':', 'driver', 'alerted', 'press', 'alarm', 'signal', 'button', '.']

>> Bigrams are: 
 [('The', 'first'), ('first', 'sentence'), ('sentence', 'goal-reduction'), ('goal-reduction', 'procedure'), ('procedure', ','), (',', 'whose'), ('whose', 'underlying'), ('underlying', 'logic'), ('logic', 'logic'), ('logic', 'programming'), ('programming', 'clause'), ('clause', ':'), (':', 'driver'), ('driver', 'alerted'), ('alerted', 'press'), ('press', 'alarm'), ('alarm', 'signal'), ('signal', 'button'), ('button', '.')]

>> Trigrams are: 
 [('The', 'first', 'sentence'), ('first', 'sentence', 'goal-reduction'), ('sentence', 'goal-reduction', 'procedure'), ('goal-reduction', 'procedure', ','), ('procedure', ',', 'whose'), (',', 'whose', 'underlying'), ('whose', 'underlying', 'logic'), ('underlying', 'logic', 'logic'), ('logic', 'logic', 'programming'), ('logic', 'programming', 'clause'), ('programming', 'clause', ':'), ('clause', ':', 'driver'), (':', 'driver', 'alerted'), ('driver', 'alerted', 'press'), ('alerted', 'press', 'alarm'), ('press', 'alarm', 'signal'), ('alarm', 'signal', 'button'), ('signal', 'button', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('first', 'JJ'), ('sentence', 'NN'), ('goal-reduction', 'NN'), ('procedure', 'NN'), (',', ','), ('whose', 'WP$'), ('underlying', 'VBG'), ('logic', 'JJ'), ('logic', 'JJ'), ('programming', 'NN'), ('clause', 'NN'), (':', ':'), ('driver', 'NN'), ('alerted', 'VBD'), ('press', 'NN'), ('alarm', 'NN'), ('signal', 'JJ'), ('button', 'NN'), ('.', '.')]

 (S
  (NP The/DT first/JJ sentence/NN goal-reduction/NN procedure/NN)
  ,/,
  whose/WP$
  underlying/VBG
  (NP logic/JJ logic/JJ programming/NN clause/NN)
  :/:
  (NP driver/NN)
  alerted/VBD
  (NP press/NN alarm/NN)
  (NP signal/JJ button/NN)
  ./.) 


>> Noun Phrases are: 
 ['The first sentence goal-reduction procedure', 'logic logic programming clause', 'driver', 'press alarm', 'signal button']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('first', 'first'), ('sentence', 'sentenc'), ('goal-reduction', 'goal-reduct'), ('procedure', 'procedur'), (',', ','), ('whose', 'whose'), ('underlying', 'underli'), ('logic', 'logic'), ('logic', 'logic'), ('programming', 'program'), ('clause', 'claus'), (':', ':'), ('driver', 'driver'), ('alerted', 'alert'), ('press', 'press'), ('alarm', 'alarm'), ('signal', 'signal'), ('button', 'button'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('first', 'first'), ('sentence', 'sentenc'), ('goal-reduction', 'goal-reduct'), ('procedure', 'procedur'), (',', ','), ('whose', 'whose'), ('underlying', 'under'), ('logic', 'logic'), ('logic', 'logic'), ('programming', 'program'), ('clause', 'claus'), (':', ':'), ('driver', 'driver'), ('alerted', 'alert'), ('press', 'press'), ('alarm', 'alarm'), ('signal', 'signal'), ('button', 'button'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('first', 'first'), ('sentence', 'sentence'), ('goal-reduction', 'goal-reduction'), ('procedure', 'procedure'), (',', ','), ('whose', 'whose'), ('underlying', 'underlying'), ('logic', 'logic'), ('logic', 'logic'), ('programming', 'programming'), ('clause', 'clause'), (':', ':'), ('driver', 'driver'), ('alerted', 'alerted'), ('press', 'press'), ('alarm', 'alarm'), ('signal', 'signal'), ('button', 'button'), ('.', '.')]



============================ Sentence 98 =============================

The second sentence is explicitly in logic programming  clausal form, but is ambiguous; and one of its conditions has  been omitted. 


>> Tokens are: 
 ['The', 'second', 'sentence', 'explicitly', 'logic', 'programming', 'clausal', 'form', ',', 'ambiguous', ';', 'one', 'conditions', 'omitted', '.']

>> Bigrams are: 
 [('The', 'second'), ('second', 'sentence'), ('sentence', 'explicitly'), ('explicitly', 'logic'), ('logic', 'programming'), ('programming', 'clausal'), ('clausal', 'form'), ('form', ','), (',', 'ambiguous'), ('ambiguous', ';'), (';', 'one'), ('one', 'conditions'), ('conditions', 'omitted'), ('omitted', '.')]

>> Trigrams are: 
 [('The', 'second', 'sentence'), ('second', 'sentence', 'explicitly'), ('sentence', 'explicitly', 'logic'), ('explicitly', 'logic', 'programming'), ('logic', 'programming', 'clausal'), ('programming', 'clausal', 'form'), ('clausal', 'form', ','), ('form', ',', 'ambiguous'), (',', 'ambiguous', ';'), ('ambiguous', ';', 'one'), (';', 'one', 'conditions'), ('one', 'conditions', 'omitted'), ('conditions', 'omitted', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('second', 'JJ'), ('sentence', 'NN'), ('explicitly', 'RB'), ('logic', 'VBZ'), ('programming', 'VBG'), ('clausal', 'JJ'), ('form', 'NN'), (',', ','), ('ambiguous', 'JJ'), (';', ':'), ('one', 'CD'), ('conditions', 'NNS'), ('omitted', 'VBN'), ('.', '.')]

 (S
  (NP The/DT second/JJ sentence/NN)
  explicitly/RB
  logic/VBZ
  programming/VBG
  (NP clausal/JJ form/NN)
  ,/,
  ambiguous/JJ
  ;/:
  one/CD
  (NP conditions/NNS)
  omitted/VBN
  ./.) 


>> Noun Phrases are: 
 ['The second sentence', 'clausal form', 'conditions']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('second', 'second'), ('sentence', 'sentenc'), ('explicitly', 'explicitli'), ('logic', 'logic'), ('programming', 'program'), ('clausal', 'clausal'), ('form', 'form'), (',', ','), ('ambiguous', 'ambigu'), (';', ';'), ('one', 'one'), ('conditions', 'condit'), ('omitted', 'omit'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('second', 'second'), ('sentence', 'sentenc'), ('explicitly', 'explicit'), ('logic', 'logic'), ('programming', 'program'), ('clausal', 'clausal'), ('form', 'form'), (',', ','), ('ambiguous', 'ambigu'), (';', ';'), ('one', 'one'), ('conditions', 'condit'), ('omitted', 'omit'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('second', 'second'), ('sentence', 'sentence'), ('explicitly', 'explicitly'), ('logic', 'logic'), ('programming', 'programming'), ('clausal', 'clausal'), ('form', 'form'), (',', ','), ('ambiguous', 'ambiguous'), (';', ';'), ('one', 'one'), ('conditions', 'condition'), ('omitted', 'omitted'), ('.', '.')]



============================ Sentence 99 =============================

Arguably, its intended meaning is:      the driver will stop the train in a station     if the driver is alerted    and any part of the train is in the station. 


>> Tokens are: 
 ['Arguably', ',', 'intended', 'meaning', ':', 'driver', 'stop', 'train', 'station', 'driver', 'alerted', 'part', 'train', 'station', '.']

>> Bigrams are: 
 [('Arguably', ','), (',', 'intended'), ('intended', 'meaning'), ('meaning', ':'), (':', 'driver'), ('driver', 'stop'), ('stop', 'train'), ('train', 'station'), ('station', 'driver'), ('driver', 'alerted'), ('alerted', 'part'), ('part', 'train'), ('train', 'station'), ('station', '.')]

>> Trigrams are: 
 [('Arguably', ',', 'intended'), (',', 'intended', 'meaning'), ('intended', 'meaning', ':'), ('meaning', ':', 'driver'), (':', 'driver', 'stop'), ('driver', 'stop', 'train'), ('stop', 'train', 'station'), ('train', 'station', 'driver'), ('station', 'driver', 'alerted'), ('driver', 'alerted', 'part'), ('alerted', 'part', 'train'), ('part', 'train', 'station'), ('train', 'station', '.')]

>> POS Tags are: 
 [('Arguably', 'RB'), (',', ','), ('intended', 'VBD'), ('meaning', 'NN'), (':', ':'), ('driver', 'NN'), ('stop', 'VB'), ('train', 'NN'), ('station', 'NN'), ('driver', 'NN'), ('alerted', 'VBD'), ('part', 'NN'), ('train', 'NN'), ('station', 'NN'), ('.', '.')]

 (S
  Arguably/RB
  ,/,
  intended/VBD
  (NP meaning/NN)
  :/:
  (NP driver/NN)
  stop/VB
  (NP train/NN station/NN driver/NN)
  alerted/VBD
  (NP part/NN train/NN station/NN)
  ./.) 


>> Noun Phrases are: 
 ['meaning', 'driver', 'train station driver', 'part train station']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Arguably', 'arguabl'), (',', ','), ('intended', 'intend'), ('meaning', 'mean'), (':', ':'), ('driver', 'driver'), ('stop', 'stop'), ('train', 'train'), ('station', 'station'), ('driver', 'driver'), ('alerted', 'alert'), ('part', 'part'), ('train', 'train'), ('station', 'station'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Arguably', 'arguabl'), (',', ','), ('intended', 'intend'), ('meaning', 'mean'), (':', ':'), ('driver', 'driver'), ('stop', 'stop'), ('train', 'train'), ('station', 'station'), ('driver', 'driver'), ('alerted', 'alert'), ('part', 'part'), ('train', 'train'), ('station', 'station'), ('.', '.')]

>> Lemmatization: 
 [('Arguably', 'Arguably'), (',', ','), ('intended', 'intended'), ('meaning', 'meaning'), (':', ':'), ('driver', 'driver'), ('stop', 'stop'), ('train', 'train'), ('station', 'station'), ('driver', 'driver'), ('alerted', 'alerted'), ('part', 'part'), ('train', 'train'), ('station', 'station'), ('.', '.')]



============================ Sentence 100 =============================

The logic of the third sentence is two sentences, say:     the driver will stop the train in the next station    if the driver is alerted    and not any part of the train is in a station. 


>> Tokens are: 
 ['The', 'logic', 'third', 'sentence', 'two', 'sentences', ',', 'say', ':', 'driver', 'stop', 'train', 'next', 'station', 'driver', 'alerted', 'part', 'train', 'station', '.']

>> Bigrams are: 
 [('The', 'logic'), ('logic', 'third'), ('third', 'sentence'), ('sentence', 'two'), ('two', 'sentences'), ('sentences', ','), (',', 'say'), ('say', ':'), (':', 'driver'), ('driver', 'stop'), ('stop', 'train'), ('train', 'next'), ('next', 'station'), ('station', 'driver'), ('driver', 'alerted'), ('alerted', 'part'), ('part', 'train'), ('train', 'station'), ('station', '.')]

>> Trigrams are: 
 [('The', 'logic', 'third'), ('logic', 'third', 'sentence'), ('third', 'sentence', 'two'), ('sentence', 'two', 'sentences'), ('two', 'sentences', ','), ('sentences', ',', 'say'), (',', 'say', ':'), ('say', ':', 'driver'), (':', 'driver', 'stop'), ('driver', 'stop', 'train'), ('stop', 'train', 'next'), ('train', 'next', 'station'), ('next', 'station', 'driver'), ('station', 'driver', 'alerted'), ('driver', 'alerted', 'part'), ('alerted', 'part', 'train'), ('part', 'train', 'station'), ('train', 'station', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('logic', 'JJ'), ('third', 'JJ'), ('sentence', 'NN'), ('two', 'CD'), ('sentences', 'NNS'), (',', ','), ('say', 'VBP'), (':', ':'), ('driver', 'NN'), ('stop', 'VB'), ('train', 'NN'), ('next', 'JJ'), ('station', 'NN'), ('driver', 'NN'), ('alerted', 'VBD'), ('part', 'NN'), ('train', 'NN'), ('station', 'NN'), ('.', '.')]

 (S
  (NP The/DT logic/JJ third/JJ sentence/NN)
  two/CD
  (NP sentences/NNS)
  ,/,
  say/VBP
  :/:
  (NP driver/NN)
  stop/VB
  (NP train/NN)
  (NP next/JJ station/NN driver/NN)
  alerted/VBD
  (NP part/NN train/NN station/NN)
  ./.) 


>> Noun Phrases are: 
 ['The logic third sentence', 'sentences', 'driver', 'train', 'next station driver', 'part train station']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('logic', 'logic'), ('third', 'third'), ('sentence', 'sentenc'), ('two', 'two'), ('sentences', 'sentenc'), (',', ','), ('say', 'say'), (':', ':'), ('driver', 'driver'), ('stop', 'stop'), ('train', 'train'), ('next', 'next'), ('station', 'station'), ('driver', 'driver'), ('alerted', 'alert'), ('part', 'part'), ('train', 'train'), ('station', 'station'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('logic', 'logic'), ('third', 'third'), ('sentence', 'sentenc'), ('two', 'two'), ('sentences', 'sentenc'), (',', ','), ('say', 'say'), (':', ':'), ('driver', 'driver'), ('stop', 'stop'), ('train', 'train'), ('next', 'next'), ('station', 'station'), ('driver', 'driver'), ('alerted', 'alert'), ('part', 'part'), ('train', 'train'), ('station', 'station'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('logic', 'logic'), ('third', 'third'), ('sentence', 'sentence'), ('two', 'two'), ('sentences', 'sentence'), (',', ','), ('say', 'say'), (':', ':'), ('driver', 'driver'), ('stop', 'stop'), ('train', 'train'), ('next', 'next'), ('station', 'station'), ('driver', 'driver'), ('alerted', 'alerted'), ('part', 'part'), ('train', 'train'), ('station', 'station'), ('.', '.')]



============================ Sentence 101 =============================

help can more easily be given in an emergency    if the train is in a station. 


>> Tokens are: 
 ['help', 'easily', 'given', 'emergency', 'train', 'station', '.']

>> Bigrams are: 
 [('help', 'easily'), ('easily', 'given'), ('given', 'emergency'), ('emergency', 'train'), ('train', 'station'), ('station', '.')]

>> Trigrams are: 
 [('help', 'easily', 'given'), ('easily', 'given', 'emergency'), ('given', 'emergency', 'train'), ('emergency', 'train', 'station'), ('train', 'station', '.')]

>> POS Tags are: 
 [('help', 'NN'), ('easily', 'RB'), ('given', 'VBN'), ('emergency', 'NN'), ('train', 'NN'), ('station', 'NN'), ('.', '.')]

 (S
  (NP help/NN)
  easily/RB
  given/VBN
  (NP emergency/NN train/NN station/NN)
  ./.) 


>> Noun Phrases are: 
 ['help', 'emergency train station']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('help', 'help'), ('easily', 'easili'), ('given', 'given'), ('emergency', 'emerg'), ('train', 'train'), ('station', 'station'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('help', 'help'), ('easily', 'easili'), ('given', 'given'), ('emergency', 'emerg'), ('train', 'train'), ('station', 'station'), ('.', '.')]

>> Lemmatization: 
 [('help', 'help'), ('easily', 'easily'), ('given', 'given'), ('emergency', 'emergency'), ('train', 'train'), ('station', 'station'), ('.', '.')]



============================ Sentence 102 =============================

Presumably, the relative clause beginning with where adds  an extra conclusion to the sentence rather than an extra con- dition. 


>> Tokens are: 
 ['Presumably', ',', 'relative', 'clause', 'beginning', 'adds', 'extra', 'conclusion', 'sentence', 'rather', 'extra', 'con-', 'dition', '.']

>> Bigrams are: 
 [('Presumably', ','), (',', 'relative'), ('relative', 'clause'), ('clause', 'beginning'), ('beginning', 'adds'), ('adds', 'extra'), ('extra', 'conclusion'), ('conclusion', 'sentence'), ('sentence', 'rather'), ('rather', 'extra'), ('extra', 'con-'), ('con-', 'dition'), ('dition', '.')]

>> Trigrams are: 
 [('Presumably', ',', 'relative'), (',', 'relative', 'clause'), ('relative', 'clause', 'beginning'), ('clause', 'beginning', 'adds'), ('beginning', 'adds', 'extra'), ('adds', 'extra', 'conclusion'), ('extra', 'conclusion', 'sentence'), ('conclusion', 'sentence', 'rather'), ('sentence', 'rather', 'extra'), ('rather', 'extra', 'con-'), ('extra', 'con-', 'dition'), ('con-', 'dition', '.')]

>> POS Tags are: 
 [('Presumably', 'RB'), (',', ','), ('relative', 'JJ'), ('clause', 'NN'), ('beginning', 'VBG'), ('adds', 'VBZ'), ('extra', 'JJ'), ('conclusion', 'NN'), ('sentence', 'NN'), ('rather', 'RB'), ('extra', 'JJ'), ('con-', 'JJ'), ('dition', 'NN'), ('.', '.')]

 (S
  Presumably/RB
  ,/,
  (NP relative/JJ clause/NN)
  beginning/VBG
  adds/VBZ
  (NP extra/JJ conclusion/NN sentence/NN)
  rather/RB
  (NP extra/JJ con-/JJ dition/NN)
  ./.) 


>> Noun Phrases are: 
 ['relative clause', 'extra conclusion sentence', 'extra con- dition']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Presumably', 'presum'), (',', ','), ('relative', 'rel'), ('clause', 'claus'), ('beginning', 'begin'), ('adds', 'add'), ('extra', 'extra'), ('conclusion', 'conclus'), ('sentence', 'sentenc'), ('rather', 'rather'), ('extra', 'extra'), ('con-', 'con-'), ('dition', 'dition'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Presumably', 'presum'), (',', ','), ('relative', 'relat'), ('clause', 'claus'), ('beginning', 'begin'), ('adds', 'add'), ('extra', 'extra'), ('conclusion', 'conclus'), ('sentence', 'sentenc'), ('rather', 'rather'), ('extra', 'extra'), ('con-', 'con-'), ('dition', 'dition'), ('.', '.')]

>> Lemmatization: 
 [('Presumably', 'Presumably'), (',', ','), ('relative', 'relative'), ('clause', 'clause'), ('beginning', 'beginning'), ('adds', 'add'), ('extra', 'extra'), ('conclusion', 'conclusion'), ('sentence', 'sentence'), ('rather', 'rather'), ('extra', 'extra'), ('con-', 'con-'), ('dition', 'dition'), ('.', '.')]



============================ Sentence 103 =============================

If the relative clause were meant to add an extra con- dition, then this would mean that the driver will not neces- sarily stop the train at the next station, but at the next station  where help can more easily be given. 


>> Tokens are: 
 ['If', 'relative', 'clause', 'meant', 'add', 'extra', 'con-', 'dition', ',', 'would', 'mean', 'driver', 'neces-', 'sarily', 'stop', 'train', 'next', 'station', ',', 'next', 'station', 'help', 'easily', 'given', '.']

>> Bigrams are: 
 [('If', 'relative'), ('relative', 'clause'), ('clause', 'meant'), ('meant', 'add'), ('add', 'extra'), ('extra', 'con-'), ('con-', 'dition'), ('dition', ','), (',', 'would'), ('would', 'mean'), ('mean', 'driver'), ('driver', 'neces-'), ('neces-', 'sarily'), ('sarily', 'stop'), ('stop', 'train'), ('train', 'next'), ('next', 'station'), ('station', ','), (',', 'next'), ('next', 'station'), ('station', 'help'), ('help', 'easily'), ('easily', 'given'), ('given', '.')]

>> Trigrams are: 
 [('If', 'relative', 'clause'), ('relative', 'clause', 'meant'), ('clause', 'meant', 'add'), ('meant', 'add', 'extra'), ('add', 'extra', 'con-'), ('extra', 'con-', 'dition'), ('con-', 'dition', ','), ('dition', ',', 'would'), (',', 'would', 'mean'), ('would', 'mean', 'driver'), ('mean', 'driver', 'neces-'), ('driver', 'neces-', 'sarily'), ('neces-', 'sarily', 'stop'), ('sarily', 'stop', 'train'), ('stop', 'train', 'next'), ('train', 'next', 'station'), ('next', 'station', ','), ('station', ',', 'next'), (',', 'next', 'station'), ('next', 'station', 'help'), ('station', 'help', 'easily'), ('help', 'easily', 'given'), ('easily', 'given', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('relative', 'JJ'), ('clause', 'NN'), ('meant', 'VBD'), ('add', 'JJ'), ('extra', 'JJ'), ('con-', 'JJ'), ('dition', 'NN'), (',', ','), ('would', 'MD'), ('mean', 'VB'), ('driver', 'RB'), ('neces-', 'JJ'), ('sarily', 'RB'), ('stop', 'VB'), ('train', 'NN'), ('next', 'JJ'), ('station', 'NN'), (',', ','), ('next', 'JJ'), ('station', 'NN'), ('help', 'NN'), ('easily', 'RB'), ('given', 'VBN'), ('.', '.')]

 (S
  If/IN
  (NP relative/JJ clause/NN)
  meant/VBD
  (NP add/JJ extra/JJ con-/JJ dition/NN)
  ,/,
  would/MD
  mean/VB
  driver/RB
  neces-/JJ
  sarily/RB
  stop/VB
  (NP train/NN)
  (NP next/JJ station/NN)
  ,/,
  (NP next/JJ station/NN help/NN)
  easily/RB
  given/VBN
  ./.) 


>> Noun Phrases are: 
 ['relative clause', 'add extra con- dition', 'train', 'next station', 'next station help']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('relative', 'rel'), ('clause', 'claus'), ('meant', 'meant'), ('add', 'add'), ('extra', 'extra'), ('con-', 'con-'), ('dition', 'dition'), (',', ','), ('would', 'would'), ('mean', 'mean'), ('driver', 'driver'), ('neces-', 'neces-'), ('sarily', 'sarili'), ('stop', 'stop'), ('train', 'train'), ('next', 'next'), ('station', 'station'), (',', ','), ('next', 'next'), ('station', 'station'), ('help', 'help'), ('easily', 'easili'), ('given', 'given'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('relative', 'relat'), ('clause', 'claus'), ('meant', 'meant'), ('add', 'add'), ('extra', 'extra'), ('con-', 'con-'), ('dition', 'dition'), (',', ','), ('would', 'would'), ('mean', 'mean'), ('driver', 'driver'), ('neces-', 'neces-'), ('sarily', 'sarili'), ('stop', 'stop'), ('train', 'train'), ('next', 'next'), ('station', 'station'), (',', ','), ('next', 'next'), ('station', 'station'), ('help', 'help'), ('easily', 'easili'), ('given', 'given'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('relative', 'relative'), ('clause', 'clause'), ('meant', 'meant'), ('add', 'add'), ('extra', 'extra'), ('con-', 'con-'), ('dition', 'dition'), (',', ','), ('would', 'would'), ('mean', 'mean'), ('driver', 'driver'), ('neces-', 'neces-'), ('sarily', 'sarily'), ('stop', 'stop'), ('train', 'train'), ('next', 'next'), ('station', 'station'), (',', ','), ('next', 'next'), ('station', 'station'), ('help', 'help'), ('easily', 'easily'), ('given', 'given'), ('.', '.')]



============================ Sentence 104 =============================

The fourth sentence is also a conditional, but in disguise:      You may be liable to a £50 penalty    if you use the alarm signal button improperly. 


>> Tokens are: 
 ['The', 'fourth', 'sentence', 'also', 'conditional', ',', 'disguise', ':', 'You', 'may', 'liable', '£50', 'penalty', 'use', 'alarm', 'signal', 'button', 'improperly', '.']

>> Bigrams are: 
 [('The', 'fourth'), ('fourth', 'sentence'), ('sentence', 'also'), ('also', 'conditional'), ('conditional', ','), (',', 'disguise'), ('disguise', ':'), (':', 'You'), ('You', 'may'), ('may', 'liable'), ('liable', '£50'), ('£50', 'penalty'), ('penalty', 'use'), ('use', 'alarm'), ('alarm', 'signal'), ('signal', 'button'), ('button', 'improperly'), ('improperly', '.')]

>> Trigrams are: 
 [('The', 'fourth', 'sentence'), ('fourth', 'sentence', 'also'), ('sentence', 'also', 'conditional'), ('also', 'conditional', ','), ('conditional', ',', 'disguise'), (',', 'disguise', ':'), ('disguise', ':', 'You'), (':', 'You', 'may'), ('You', 'may', 'liable'), ('may', 'liable', '£50'), ('liable', '£50', 'penalty'), ('£50', 'penalty', 'use'), ('penalty', 'use', 'alarm'), ('use', 'alarm', 'signal'), ('alarm', 'signal', 'button'), ('signal', 'button', 'improperly'), ('button', 'improperly', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('fourth', 'JJ'), ('sentence', 'NN'), ('also', 'RB'), ('conditional', 'JJ'), (',', ','), ('disguise', 'NN'), (':', ':'), ('You', 'PRP'), ('may', 'MD'), ('liable', 'VB'), ('£50', 'NNP'), ('penalty', 'NN'), ('use', 'NN'), ('alarm', 'JJ'), ('signal', 'NN'), ('button', 'NN'), ('improperly', 'RB'), ('.', '.')]

 (S
  (NP The/DT fourth/JJ sentence/NN)
  also/RB
  conditional/JJ
  ,/,
  (NP disguise/NN)
  :/:
  You/PRP
  may/MD
  liable/VB
  (NP £50/NNP penalty/NN use/NN)
  (NP alarm/JJ signal/NN button/NN)
  improperly/RB
  ./.) 


>> Noun Phrases are: 
 ['The fourth sentence', 'disguise', '£50 penalty use', 'alarm signal button']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('fourth', 'fourth'), ('sentence', 'sentenc'), ('also', 'also'), ('conditional', 'condit'), (',', ','), ('disguise', 'disguis'), (':', ':'), ('You', 'you'), ('may', 'may'), ('liable', 'liabl'), ('£50', '£50'), ('penalty', 'penalti'), ('use', 'use'), ('alarm', 'alarm'), ('signal', 'signal'), ('button', 'button'), ('improperly', 'improperli'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('fourth', 'fourth'), ('sentence', 'sentenc'), ('also', 'also'), ('conditional', 'condit'), (',', ','), ('disguise', 'disguis'), (':', ':'), ('You', 'you'), ('may', 'may'), ('liable', 'liabl'), ('£50', '£50'), ('penalty', 'penalti'), ('use', 'use'), ('alarm', 'alarm'), ('signal', 'signal'), ('button', 'button'), ('improperly', 'improp'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('fourth', 'fourth'), ('sentence', 'sentence'), ('also', 'also'), ('conditional', 'conditional'), (',', ','), ('disguise', 'disguise'), (':', ':'), ('You', 'You'), ('may', 'may'), ('liable', 'liable'), ('£50', '£50'), ('penalty', 'penalty'), ('use', 'use'), ('alarm', 'alarm'), ('signal', 'signal'), ('button', 'button'), ('improperly', 'improperly'), ('.', '.')]



============================ Sentence 105 =============================

Arguably, the Emergency Notice is relatively easy to under- stand, because its expression is relatively close to its in- tended meaning in the LOT. 


>> Tokens are: 
 ['Arguably', ',', 'Emergency', 'Notice', 'relatively', 'easy', 'under-', 'stand', ',', 'expression', 'relatively', 'close', 'in-', 'tended', 'meaning', 'LOT', '.']

>> Bigrams are: 
 [('Arguably', ','), (',', 'Emergency'), ('Emergency', 'Notice'), ('Notice', 'relatively'), ('relatively', 'easy'), ('easy', 'under-'), ('under-', 'stand'), ('stand', ','), (',', 'expression'), ('expression', 'relatively'), ('relatively', 'close'), ('close', 'in-'), ('in-', 'tended'), ('tended', 'meaning'), ('meaning', 'LOT'), ('LOT', '.')]

>> Trigrams are: 
 [('Arguably', ',', 'Emergency'), (',', 'Emergency', 'Notice'), ('Emergency', 'Notice', 'relatively'), ('Notice', 'relatively', 'easy'), ('relatively', 'easy', 'under-'), ('easy', 'under-', 'stand'), ('under-', 'stand', ','), ('stand', ',', 'expression'), (',', 'expression', 'relatively'), ('expression', 'relatively', 'close'), ('relatively', 'close', 'in-'), ('close', 'in-', 'tended'), ('in-', 'tended', 'meaning'), ('tended', 'meaning', 'LOT'), ('meaning', 'LOT', '.')]

>> POS Tags are: 
 [('Arguably', 'RB'), (',', ','), ('Emergency', 'NNP'), ('Notice', 'NNP'), ('relatively', 'RB'), ('easy', 'JJ'), ('under-', 'JJ'), ('stand', 'NN'), (',', ','), ('expression', 'NN'), ('relatively', 'RB'), ('close', 'JJ'), ('in-', 'NNS'), ('tended', 'VBD'), ('meaning', 'NN'), ('LOT', 'NNP'), ('.', '.')]

 (S
  Arguably/RB
  ,/,
  (NP Emergency/NNP Notice/NNP)
  relatively/RB
  (NP easy/JJ under-/JJ stand/NN)
  ,/,
  (NP expression/NN)
  relatively/RB
  (NP close/JJ in-/NNS)
  tended/VBD
  (NP meaning/NN LOT/NNP)
  ./.) 


>> Noun Phrases are: 
 ['Emergency Notice', 'easy under- stand', 'expression', 'close in-', 'meaning LOT']

>> Named Entities are: 
 [('PERSON', 'Emergency Notice'), ('ORGANIZATION', 'LOT')] 

>> Stemming using Porter Stemmer: 
 [('Arguably', 'arguabl'), (',', ','), ('Emergency', 'emerg'), ('Notice', 'notic'), ('relatively', 'rel'), ('easy', 'easi'), ('under-', 'under-'), ('stand', 'stand'), (',', ','), ('expression', 'express'), ('relatively', 'rel'), ('close', 'close'), ('in-', 'in-'), ('tended', 'tend'), ('meaning', 'mean'), ('LOT', 'lot'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Arguably', 'arguabl'), (',', ','), ('Emergency', 'emerg'), ('Notice', 'notic'), ('relatively', 'relat'), ('easy', 'easi'), ('under-', 'under-'), ('stand', 'stand'), (',', ','), ('expression', 'express'), ('relatively', 'relat'), ('close', 'close'), ('in-', 'in-'), ('tended', 'tend'), ('meaning', 'mean'), ('LOT', 'lot'), ('.', '.')]

>> Lemmatization: 
 [('Arguably', 'Arguably'), (',', ','), ('Emergency', 'Emergency'), ('Notice', 'Notice'), ('relatively', 'relatively'), ('easy', 'easy'), ('under-', 'under-'), ('stand', 'stand'), (',', ','), ('expression', 'expression'), ('relatively', 'relatively'), ('close', 'close'), ('in-', 'in-'), ('tended', 'tended'), ('meaning', 'meaning'), ('LOT', 'LOT'), ('.', '.')]



============================ Sentence 106 =============================

Moreover, it is coherent, be- cause the consecutive sentences are logically connected both  with one another and with the reader’s likely pre-existing  goals and beliefs about what to do in an emergency. 


>> Tokens are: 
 ['Moreover', ',', 'coherent', ',', 'be-', 'cause', 'consecutive', 'sentences', 'logically', 'connected', 'one', 'another', 'reader', '’', 'likely', 'pre-existing', 'goals', 'beliefs', 'emergency', '.']

>> Bigrams are: 
 [('Moreover', ','), (',', 'coherent'), ('coherent', ','), (',', 'be-'), ('be-', 'cause'), ('cause', 'consecutive'), ('consecutive', 'sentences'), ('sentences', 'logically'), ('logically', 'connected'), ('connected', 'one'), ('one', 'another'), ('another', 'reader'), ('reader', '’'), ('’', 'likely'), ('likely', 'pre-existing'), ('pre-existing', 'goals'), ('goals', 'beliefs'), ('beliefs', 'emergency'), ('emergency', '.')]

>> Trigrams are: 
 [('Moreover', ',', 'coherent'), (',', 'coherent', ','), ('coherent', ',', 'be-'), (',', 'be-', 'cause'), ('be-', 'cause', 'consecutive'), ('cause', 'consecutive', 'sentences'), ('consecutive', 'sentences', 'logically'), ('sentences', 'logically', 'connected'), ('logically', 'connected', 'one'), ('connected', 'one', 'another'), ('one', 'another', 'reader'), ('another', 'reader', '’'), ('reader', '’', 'likely'), ('’', 'likely', 'pre-existing'), ('likely', 'pre-existing', 'goals'), ('pre-existing', 'goals', 'beliefs'), ('goals', 'beliefs', 'emergency'), ('beliefs', 'emergency', '.')]

>> POS Tags are: 
 [('Moreover', 'RB'), (',', ','), ('coherent', 'NN'), (',', ','), ('be-', 'JJ'), ('cause', 'NN'), ('consecutive', 'JJ'), ('sentences', 'NNS'), ('logically', 'RB'), ('connected', 'VBD'), ('one', 'CD'), ('another', 'DT'), ('reader', 'NN'), ('’', 'NNP'), ('likely', 'RB'), ('pre-existing', 'JJ'), ('goals', 'NNS'), ('beliefs', 'JJ'), ('emergency', 'NN'), ('.', '.')]

 (S
  Moreover/RB
  ,/,
  (NP coherent/NN)
  ,/,
  (NP be-/JJ cause/NN)
  (NP consecutive/JJ sentences/NNS)
  logically/RB
  connected/VBD
  one/CD
  (NP another/DT reader/NN ’/NNP)
  likely/RB
  (NP pre-existing/JJ goals/NNS)
  (NP beliefs/JJ emergency/NN)
  ./.) 


>> Noun Phrases are: 
 ['coherent', 'be- cause', 'consecutive sentences', 'another reader ’', 'pre-existing goals', 'beliefs emergency']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Moreover', 'moreov'), (',', ','), ('coherent', 'coher'), (',', ','), ('be-', 'be-'), ('cause', 'caus'), ('consecutive', 'consecut'), ('sentences', 'sentenc'), ('logically', 'logic'), ('connected', 'connect'), ('one', 'one'), ('another', 'anoth'), ('reader', 'reader'), ('’', '’'), ('likely', 'like'), ('pre-existing', 'pre-exist'), ('goals', 'goal'), ('beliefs', 'belief'), ('emergency', 'emerg'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Moreover', 'moreov'), (',', ','), ('coherent', 'coher'), (',', ','), ('be-', 'be-'), ('cause', 'caus'), ('consecutive', 'consecut'), ('sentences', 'sentenc'), ('logically', 'logic'), ('connected', 'connect'), ('one', 'one'), ('another', 'anoth'), ('reader', 'reader'), ('’', '’'), ('likely', 'like'), ('pre-existing', 'pre-exist'), ('goals', 'goal'), ('beliefs', 'belief'), ('emergency', 'emerg'), ('.', '.')]

>> Lemmatization: 
 [('Moreover', 'Moreover'), (',', ','), ('coherent', 'coherent'), (',', ','), ('be-', 'be-'), ('cause', 'cause'), ('consecutive', 'consecutive'), ('sentences', 'sentence'), ('logically', 'logically'), ('connected', 'connected'), ('one', 'one'), ('another', 'another'), ('reader', 'reader'), ('’', '’'), ('likely', 'likely'), ('pre-existing', 'pre-existing'), ('goals', 'goal'), ('beliefs', 'belief'), ('emergency', 'emergency'), ('.', '.')]



============================ Sentence 107 =============================

13    One reason the English sentences are not closer to their  intended meaning is because omitting conditions and other  details sometimes promotes coherence. 


>> Tokens are: 
 ['13', 'One', 'reason', 'English', 'sentences', 'closer', 'intended', 'meaning', 'omitting', 'conditions', 'details', 'sometimes', 'promotes', 'coherence', '.']

>> Bigrams are: 
 [('13', 'One'), ('One', 'reason'), ('reason', 'English'), ('English', 'sentences'), ('sentences', 'closer'), ('closer', 'intended'), ('intended', 'meaning'), ('meaning', 'omitting'), ('omitting', 'conditions'), ('conditions', 'details'), ('details', 'sometimes'), ('sometimes', 'promotes'), ('promotes', 'coherence'), ('coherence', '.')]

>> Trigrams are: 
 [('13', 'One', 'reason'), ('One', 'reason', 'English'), ('reason', 'English', 'sentences'), ('English', 'sentences', 'closer'), ('sentences', 'closer', 'intended'), ('closer', 'intended', 'meaning'), ('intended', 'meaning', 'omitting'), ('meaning', 'omitting', 'conditions'), ('omitting', 'conditions', 'details'), ('conditions', 'details', 'sometimes'), ('details', 'sometimes', 'promotes'), ('sometimes', 'promotes', 'coherence'), ('promotes', 'coherence', '.')]

>> POS Tags are: 
 [('13', 'CD'), ('One', 'CD'), ('reason', 'NN'), ('English', 'JJ'), ('sentences', 'NNS'), ('closer', 'RBR'), ('intended', 'VBN'), ('meaning', 'VBG'), ('omitting', 'VBG'), ('conditions', 'NNS'), ('details', 'NNS'), ('sometimes', 'RB'), ('promotes', 'VBZ'), ('coherence', 'NN'), ('.', '.')]

 (S
  13/CD
  One/CD
  (NP reason/NN)
  (NP English/JJ sentences/NNS)
  closer/RBR
  intended/VBN
  meaning/VBG
  omitting/VBG
  (NP conditions/NNS details/NNS)
  sometimes/RB
  promotes/VBZ
  (NP coherence/NN)
  ./.) 


>> Noun Phrases are: 
 ['reason', 'English sentences', 'conditions details', 'coherence']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('13', '13'), ('One', 'one'), ('reason', 'reason'), ('English', 'english'), ('sentences', 'sentenc'), ('closer', 'closer'), ('intended', 'intend'), ('meaning', 'mean'), ('omitting', 'omit'), ('conditions', 'condit'), ('details', 'detail'), ('sometimes', 'sometim'), ('promotes', 'promot'), ('coherence', 'coher'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('13', '13'), ('One', 'one'), ('reason', 'reason'), ('English', 'english'), ('sentences', 'sentenc'), ('closer', 'closer'), ('intended', 'intend'), ('meaning', 'mean'), ('omitting', 'omit'), ('conditions', 'condit'), ('details', 'detail'), ('sometimes', 'sometim'), ('promotes', 'promot'), ('coherence', 'coher'), ('.', '.')]

>> Lemmatization: 
 [('13', '13'), ('One', 'One'), ('reason', 'reason'), ('English', 'English'), ('sentences', 'sentence'), ('closer', 'closer'), ('intended', 'intended'), ('meaning', 'meaning'), ('omitting', 'omitting'), ('conditions', 'condition'), ('details', 'detail'), ('sometimes', 'sometimes'), ('promotes', 'promotes'), ('coherence', 'coherence'), ('.', '.')]



============================ Sentence 108 =============================

Williams [1990,  1995] emphasizes another way of achieving coherence: by  placing old, familiar ideas at the beginning of sentences and  new ideas at their end. 


>> Tokens are: 
 ['Williams', '[', '1990', ',', '1995', ']', 'emphasizes', 'another', 'way', 'achieving', 'coherence', ':', 'placing', 'old', ',', 'familiar', 'ideas', 'beginning', 'sentences', 'new', 'ideas', 'end', '.']

>> Bigrams are: 
 [('Williams', '['), ('[', '1990'), ('1990', ','), (',', '1995'), ('1995', ']'), (']', 'emphasizes'), ('emphasizes', 'another'), ('another', 'way'), ('way', 'achieving'), ('achieving', 'coherence'), ('coherence', ':'), (':', 'placing'), ('placing', 'old'), ('old', ','), (',', 'familiar'), ('familiar', 'ideas'), ('ideas', 'beginning'), ('beginning', 'sentences'), ('sentences', 'new'), ('new', 'ideas'), ('ideas', 'end'), ('end', '.')]

>> Trigrams are: 
 [('Williams', '[', '1990'), ('[', '1990', ','), ('1990', ',', '1995'), (',', '1995', ']'), ('1995', ']', 'emphasizes'), (']', 'emphasizes', 'another'), ('emphasizes', 'another', 'way'), ('another', 'way', 'achieving'), ('way', 'achieving', 'coherence'), ('achieving', 'coherence', ':'), ('coherence', ':', 'placing'), (':', 'placing', 'old'), ('placing', 'old', ','), ('old', ',', 'familiar'), (',', 'familiar', 'ideas'), ('familiar', 'ideas', 'beginning'), ('ideas', 'beginning', 'sentences'), ('beginning', 'sentences', 'new'), ('sentences', 'new', 'ideas'), ('new', 'ideas', 'end'), ('ideas', 'end', '.')]

>> POS Tags are: 
 [('Williams', 'NNP'), ('[', 'NN'), ('1990', 'CD'), (',', ','), ('1995', 'CD'), (']', 'NN'), ('emphasizes', 'VBZ'), ('another', 'DT'), ('way', 'NN'), ('achieving', 'VBG'), ('coherence', 'NN'), (':', ':'), ('placing', 'NN'), ('old', 'JJ'), (',', ','), ('familiar', 'JJ'), ('ideas', 'NNS'), ('beginning', 'VBG'), ('sentences', 'NNS'), ('new', 'JJ'), ('ideas', 'NNS'), ('end', 'VBP'), ('.', '.')]

 (S
  (NP Williams/NNP [/NN)
  1990/CD
  ,/,
  1995/CD
  (NP ]/NN)
  emphasizes/VBZ
  (NP another/DT way/NN)
  achieving/VBG
  (NP coherence/NN)
  :/:
  (NP placing/NN)
  old/JJ
  ,/,
  (NP familiar/JJ ideas/NNS)
  beginning/VBG
  (NP sentences/NNS)
  (NP new/JJ ideas/NNS)
  end/VBP
  ./.) 


>> Noun Phrases are: 
 ['Williams [', ']', 'another way', 'coherence', 'placing', 'familiar ideas', 'sentences', 'new ideas']

>> Named Entities are: 
 [('GPE', 'Williams')] 

>> Stemming using Porter Stemmer: 
 [('Williams', 'william'), ('[', '['), ('1990', '1990'), (',', ','), ('1995', '1995'), (']', ']'), ('emphasizes', 'emphas'), ('another', 'anoth'), ('way', 'way'), ('achieving', 'achiev'), ('coherence', 'coher'), (':', ':'), ('placing', 'place'), ('old', 'old'), (',', ','), ('familiar', 'familiar'), ('ideas', 'idea'), ('beginning', 'begin'), ('sentences', 'sentenc'), ('new', 'new'), ('ideas', 'idea'), ('end', 'end'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Williams', 'william'), ('[', '['), ('1990', '1990'), (',', ','), ('1995', '1995'), (']', ']'), ('emphasizes', 'emphas'), ('another', 'anoth'), ('way', 'way'), ('achieving', 'achiev'), ('coherence', 'coher'), (':', ':'), ('placing', 'place'), ('old', 'old'), (',', ','), ('familiar', 'familiar'), ('ideas', 'idea'), ('beginning', 'begin'), ('sentences', 'sentenc'), ('new', 'new'), ('ideas', 'idea'), ('end', 'end'), ('.', '.')]

>> Lemmatization: 
 [('Williams', 'Williams'), ('[', '['), ('1990', '1990'), (',', ','), ('1995', '1995'), (']', ']'), ('emphasizes', 'emphasizes'), ('another', 'another'), ('way', 'way'), ('achieving', 'achieving'), ('coherence', 'coherence'), (':', ':'), ('placing', 'placing'), ('old', 'old'), (',', ','), ('familiar', 'familiar'), ('ideas', 'idea'), ('beginning', 'beginning'), ('sentences', 'sentence'), ('new', 'new'), ('ideas', 'idea'), ('end', 'end'), ('.', '.')]



============================ Sentence 109 =============================

In a succession of sentences, a new  idea at the end of one sentence becomes an old idea that can  be put at the beginning of the next sentence. 


>> Tokens are: 
 ['In', 'succession', 'sentences', ',', 'new', 'idea', 'end', 'one', 'sentence', 'becomes', 'old', 'idea', 'put', 'beginning', 'next', 'sentence', '.']

>> Bigrams are: 
 [('In', 'succession'), ('succession', 'sentences'), ('sentences', ','), (',', 'new'), ('new', 'idea'), ('idea', 'end'), ('end', 'one'), ('one', 'sentence'), ('sentence', 'becomes'), ('becomes', 'old'), ('old', 'idea'), ('idea', 'put'), ('put', 'beginning'), ('beginning', 'next'), ('next', 'sentence'), ('sentence', '.')]

>> Trigrams are: 
 [('In', 'succession', 'sentences'), ('succession', 'sentences', ','), ('sentences', ',', 'new'), (',', 'new', 'idea'), ('new', 'idea', 'end'), ('idea', 'end', 'one'), ('end', 'one', 'sentence'), ('one', 'sentence', 'becomes'), ('sentence', 'becomes', 'old'), ('becomes', 'old', 'idea'), ('old', 'idea', 'put'), ('idea', 'put', 'beginning'), ('put', 'beginning', 'next'), ('beginning', 'next', 'sentence'), ('next', 'sentence', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('succession', 'NN'), ('sentences', 'NNS'), (',', ','), ('new', 'JJ'), ('idea', 'NN'), ('end', 'NN'), ('one', 'CD'), ('sentence', 'NN'), ('becomes', 'VBZ'), ('old', 'JJ'), ('idea', 'NN'), ('put', 'VBD'), ('beginning', 'VBG'), ('next', 'JJ'), ('sentence', 'NN'), ('.', '.')]

 (S
  In/IN
  (NP succession/NN sentences/NNS)
  ,/,
  (NP new/JJ idea/NN end/NN)
  one/CD
  (NP sentence/NN)
  becomes/VBZ
  (NP old/JJ idea/NN)
  put/VBD
  beginning/VBG
  (NP next/JJ sentence/NN)
  ./.) 


>> Noun Phrases are: 
 ['succession sentences', 'new idea end', 'sentence', 'old idea', 'next sentence']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('succession', 'success'), ('sentences', 'sentenc'), (',', ','), ('new', 'new'), ('idea', 'idea'), ('end', 'end'), ('one', 'one'), ('sentence', 'sentenc'), ('becomes', 'becom'), ('old', 'old'), ('idea', 'idea'), ('put', 'put'), ('beginning', 'begin'), ('next', 'next'), ('sentence', 'sentenc'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('succession', 'success'), ('sentences', 'sentenc'), (',', ','), ('new', 'new'), ('idea', 'idea'), ('end', 'end'), ('one', 'one'), ('sentence', 'sentenc'), ('becomes', 'becom'), ('old', 'old'), ('idea', 'idea'), ('put', 'put'), ('beginning', 'begin'), ('next', 'next'), ('sentence', 'sentenc'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('succession', 'succession'), ('sentences', 'sentence'), (',', ','), ('new', 'new'), ('idea', 'idea'), ('end', 'end'), ('one', 'one'), ('sentence', 'sentence'), ('becomes', 'becomes'), ('old', 'old'), ('idea', 'idea'), ('put', 'put'), ('beginning', 'beginning'), ('next', 'next'), ('sentence', 'sentence'), ('.', '.')]



============================ Sentence 110 =============================

The first three sentences of the Emergency Notice il- lustrate Williams’ advice. 


>> Tokens are: 
 ['The', 'first', 'three', 'sentences', 'Emergency', 'Notice', 'il-', 'lustrate', 'Williams', '’', 'advice', '.']

>> Bigrams are: 
 [('The', 'first'), ('first', 'three'), ('three', 'sentences'), ('sentences', 'Emergency'), ('Emergency', 'Notice'), ('Notice', 'il-'), ('il-', 'lustrate'), ('lustrate', 'Williams'), ('Williams', '’'), ('’', 'advice'), ('advice', '.')]

>> Trigrams are: 
 [('The', 'first', 'three'), ('first', 'three', 'sentences'), ('three', 'sentences', 'Emergency'), ('sentences', 'Emergency', 'Notice'), ('Emergency', 'Notice', 'il-'), ('Notice', 'il-', 'lustrate'), ('il-', 'lustrate', 'Williams'), ('lustrate', 'Williams', '’'), ('Williams', '’', 'advice'), ('’', 'advice', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('first', 'JJ'), ('three', 'CD'), ('sentences', 'NNS'), ('Emergency', 'NNP'), ('Notice', 'NNP'), ('il-', 'JJ'), ('lustrate', 'NN'), ('Williams', 'NNP'), ('’', 'NNP'), ('advice', 'NN'), ('.', '.')]

 (S
  The/DT
  first/JJ
  three/CD
  (NP sentences/NNS Emergency/NNP Notice/NNP)
  (NP il-/JJ lustrate/NN Williams/NNP ’/NNP advice/NN)
  ./.) 


>> Noun Phrases are: 
 ['sentences Emergency Notice', 'il- lustrate Williams ’ advice']

>> Named Entities are: 
 [('PERSON', 'Emergency Notice'), ('PERSON', 'Williams')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('first', 'first'), ('three', 'three'), ('sentences', 'sentenc'), ('Emergency', 'emerg'), ('Notice', 'notic'), ('il-', 'il-'), ('lustrate', 'lustrat'), ('Williams', 'william'), ('’', '’'), ('advice', 'advic'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('first', 'first'), ('three', 'three'), ('sentences', 'sentenc'), ('Emergency', 'emerg'), ('Notice', 'notic'), ('il-', 'il-'), ('lustrate', 'lustrat'), ('Williams', 'william'), ('’', '’'), ('advice', 'advic'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('first', 'first'), ('three', 'three'), ('sentences', 'sentence'), ('Emergency', 'Emergency'), ('Notice', 'Notice'), ('il-', 'il-'), ('lustrate', 'lustrate'), ('Williams', 'Williams'), ('’', '’'), ('advice', 'advice'), ('.', '.')]



============================ Sentence 111 =============================

Here is another example, which  incidentally illustrates the kind of reasoning that is catered  for in the ALP agent model:       It is raining. 


>> Tokens are: 
 ['Here', 'another', 'example', ',', 'incidentally', 'illustrates', 'kind', 'reasoning', 'catered', 'ALP', 'agent', 'model', ':', 'It', 'raining', '.']

>> Bigrams are: 
 [('Here', 'another'), ('another', 'example'), ('example', ','), (',', 'incidentally'), ('incidentally', 'illustrates'), ('illustrates', 'kind'), ('kind', 'reasoning'), ('reasoning', 'catered'), ('catered', 'ALP'), ('ALP', 'agent'), ('agent', 'model'), ('model', ':'), (':', 'It'), ('It', 'raining'), ('raining', '.')]

>> Trigrams are: 
 [('Here', 'another', 'example'), ('another', 'example', ','), ('example', ',', 'incidentally'), (',', 'incidentally', 'illustrates'), ('incidentally', 'illustrates', 'kind'), ('illustrates', 'kind', 'reasoning'), ('kind', 'reasoning', 'catered'), ('reasoning', 'catered', 'ALP'), ('catered', 'ALP', 'agent'), ('ALP', 'agent', 'model'), ('agent', 'model', ':'), ('model', ':', 'It'), (':', 'It', 'raining'), ('It', 'raining', '.')]

>> POS Tags are: 
 [('Here', 'RB'), ('another', 'DT'), ('example', 'NN'), (',', ','), ('incidentally', 'RB'), ('illustrates', 'VBZ'), ('kind', 'NN'), ('reasoning', 'NN'), ('catered', 'VBD'), ('ALP', 'NNP'), ('agent', 'JJ'), ('model', 'NN'), (':', ':'), ('It', 'PRP'), ('raining', 'VBG'), ('.', '.')]

 (S
  Here/RB
  (NP another/DT example/NN)
  ,/,
  incidentally/RB
  illustrates/VBZ
  (NP kind/NN reasoning/NN)
  catered/VBD
  (NP ALP/NNP)
  (NP agent/JJ model/NN)
  :/:
  It/PRP
  raining/VBG
  ./.) 


>> Noun Phrases are: 
 ['another example', 'kind reasoning', 'ALP', 'agent model']

>> Named Entities are: 
 [('ORGANIZATION', 'ALP')] 

>> Stemming using Porter Stemmer: 
 [('Here', 'here'), ('another', 'anoth'), ('example', 'exampl'), (',', ','), ('incidentally', 'incident'), ('illustrates', 'illustr'), ('kind', 'kind'), ('reasoning', 'reason'), ('catered', 'cater'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), (':', ':'), ('It', 'it'), ('raining', 'rain'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Here', 'here'), ('another', 'anoth'), ('example', 'exampl'), (',', ','), ('incidentally', 'incident'), ('illustrates', 'illustr'), ('kind', 'kind'), ('reasoning', 'reason'), ('catered', 'cater'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), (':', ':'), ('It', 'it'), ('raining', 'rain'), ('.', '.')]

>> Lemmatization: 
 [('Here', 'Here'), ('another', 'another'), ('example', 'example'), (',', ','), ('incidentally', 'incidentally'), ('illustrates', 'illustrates'), ('kind', 'kind'), ('reasoning', 'reasoning'), ('catered', 'catered'), ('ALP', 'ALP'), ('agent', 'agent'), ('model', 'model'), (':', ':'), ('It', 'It'), ('raining', 'raining'), ('.', '.')]



============================ Sentence 112 =============================

If it is raining and you go out without an umbrella,      then you will get wet. 


>> Tokens are: 
 ['If', 'raining', 'go', 'without', 'umbrella', ',', 'get', 'wet', '.']

>> Bigrams are: 
 [('If', 'raining'), ('raining', 'go'), ('go', 'without'), ('without', 'umbrella'), ('umbrella', ','), (',', 'get'), ('get', 'wet'), ('wet', '.')]

>> Trigrams are: 
 [('If', 'raining', 'go'), ('raining', 'go', 'without'), ('go', 'without', 'umbrella'), ('without', 'umbrella', ','), ('umbrella', ',', 'get'), (',', 'get', 'wet'), ('get', 'wet', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('raining', 'VBG'), ('go', 'VBP'), ('without', 'IN'), ('umbrella', 'NN'), (',', ','), ('get', 'VB'), ('wet', 'NN'), ('.', '.')]

 (S
  If/IN
  raining/VBG
  go/VBP
  without/IN
  (NP umbrella/NN)
  ,/,
  get/VB
  (NP wet/NN)
  ./.) 


>> Noun Phrases are: 
 ['umbrella', 'wet']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('raining', 'rain'), ('go', 'go'), ('without', 'without'), ('umbrella', 'umbrella'), (',', ','), ('get', 'get'), ('wet', 'wet'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('raining', 'rain'), ('go', 'go'), ('without', 'without'), ('umbrella', 'umbrella'), (',', ','), ('get', 'get'), ('wet', 'wet'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('raining', 'raining'), ('go', 'go'), ('without', 'without'), ('umbrella', 'umbrella'), (',', ','), ('get', 'get'), ('wet', 'wet'), ('.', '.')]



============================ Sentence 113 =============================

If you get wet, then you may catch a cold. 


>> Tokens are: 
 ['If', 'get', 'wet', ',', 'may', 'catch', 'cold', '.']

>> Bigrams are: 
 [('If', 'get'), ('get', 'wet'), ('wet', ','), (',', 'may'), ('may', 'catch'), ('catch', 'cold'), ('cold', '.')]

>> Trigrams are: 
 [('If', 'get', 'wet'), ('get', 'wet', ','), ('wet', ',', 'may'), (',', 'may', 'catch'), ('may', 'catch', 'cold'), ('catch', 'cold', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('get', 'VBN'), ('wet', 'NN'), (',', ','), ('may', 'MD'), ('catch', 'VB'), ('cold', 'NN'), ('.', '.')]

 (S If/IN get/VBN (NP wet/NN) ,/, may/MD catch/VB (NP cold/NN) ./.) 


>> Noun Phrases are: 
 ['wet', 'cold']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('get', 'get'), ('wet', 'wet'), (',', ','), ('may', 'may'), ('catch', 'catch'), ('cold', 'cold'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('get', 'get'), ('wet', 'wet'), (',', ','), ('may', 'may'), ('catch', 'catch'), ('cold', 'cold'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('get', 'get'), ('wet', 'wet'), (',', ','), ('may', 'may'), ('catch', 'catch'), ('cold', 'cold'), ('.', '.')]



============================ Sentence 114 =============================

If you catch a cold, then you will be sorry. 


>> Tokens are: 
 ['If', 'catch', 'cold', ',', 'sorry', '.']

>> Bigrams are: 
 [('If', 'catch'), ('catch', 'cold'), ('cold', ','), (',', 'sorry'), ('sorry', '.')]

>> Trigrams are: 
 [('If', 'catch', 'cold'), ('catch', 'cold', ','), ('cold', ',', 'sorry'), (',', 'sorry', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('catch', 'NN'), ('cold', 'NN'), (',', ','), ('sorry', 'NN'), ('.', '.')]

 (S If/IN (NP catch/NN cold/NN) ,/, (NP sorry/NN) ./.) 


>> Noun Phrases are: 
 ['catch cold', 'sorry']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('catch', 'catch'), ('cold', 'cold'), (',', ','), ('sorry', 'sorri'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('catch', 'catch'), ('cold', 'cold'), (',', ','), ('sorry', 'sorri'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('catch', 'catch'), ('cold', 'cold'), (',', ','), ('sorry', 'sorry'), ('.', '.')]



============================ Sentence 115 =============================

You don’t want to be sorry. 


>> Tokens are: 
 ['You', '’', 'want', 'sorry', '.']

>> Bigrams are: 
 [('You', '’'), ('’', 'want'), ('want', 'sorry'), ('sorry', '.')]

>> Trigrams are: 
 [('You', '’', 'want'), ('’', 'want', 'sorry'), ('want', 'sorry', '.')]

>> POS Tags are: 
 [('You', 'PRP'), ('’', 'VBP'), ('want', 'JJ'), ('sorry', 'NN'), ('.', '.')]

 (S You/PRP ’/VBP (NP want/JJ sorry/NN) ./.) 


>> Noun Phrases are: 
 ['want sorry']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('You', 'you'), ('’', '’'), ('want', 'want'), ('sorry', 'sorri'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('You', 'you'), ('’', '’'), ('want', 'want'), ('sorry', 'sorri'), ('.', '.')]

>> Lemmatization: 
 [('You', 'You'), ('’', '’'), ('want', 'want'), ('sorry', 'sorry'), ('.', '.')]



============================ Sentence 116 =============================

So you do not want to go out without an umbrella. 


>> Tokens are: 
 ['So', 'want', 'go', 'without', 'umbrella', '.']

>> Bigrams are: 
 [('So', 'want'), ('want', 'go'), ('go', 'without'), ('without', 'umbrella'), ('umbrella', '.')]

>> Trigrams are: 
 [('So', 'want', 'go'), ('want', 'go', 'without'), ('go', 'without', 'umbrella'), ('without', 'umbrella', '.')]

>> POS Tags are: 
 [('So', 'RB'), ('want', 'JJ'), ('go', 'NN'), ('without', 'IN'), ('umbrella', 'NN'), ('.', '.')]

 (S So/RB (NP want/JJ go/NN) without/IN (NP umbrella/NN) ./.) 


>> Noun Phrases are: 
 ['want go', 'umbrella']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('So', 'so'), ('want', 'want'), ('go', 'go'), ('without', 'without'), ('umbrella', 'umbrella'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('So', 'so'), ('want', 'want'), ('go', 'go'), ('without', 'without'), ('umbrella', 'umbrella'), ('.', '.')]

>> Lemmatization: 
 [('So', 'So'), ('want', 'want'), ('go', 'go'), ('without', 'without'), ('umbrella', 'umbrella'), ('.', '.')]



============================ Sentence 117 =============================

I will argue in section 4 that the kind of coherence il- lustrated in these sentences can be understood in terms of  logical connections between the conclusions and conditions  of sentences. 


>> Tokens are: 
 ['I', 'argue', 'section', '4', 'kind', 'coherence', 'il-', 'lustrated', 'sentences', 'understood', 'terms', 'logical', 'connections', 'conclusions', 'conditions', 'sentences', '.']

>> Bigrams are: 
 [('I', 'argue'), ('argue', 'section'), ('section', '4'), ('4', 'kind'), ('kind', 'coherence'), ('coherence', 'il-'), ('il-', 'lustrated'), ('lustrated', 'sentences'), ('sentences', 'understood'), ('understood', 'terms'), ('terms', 'logical'), ('logical', 'connections'), ('connections', 'conclusions'), ('conclusions', 'conditions'), ('conditions', 'sentences'), ('sentences', '.')]

>> Trigrams are: 
 [('I', 'argue', 'section'), ('argue', 'section', '4'), ('section', '4', 'kind'), ('4', 'kind', 'coherence'), ('kind', 'coherence', 'il-'), ('coherence', 'il-', 'lustrated'), ('il-', 'lustrated', 'sentences'), ('lustrated', 'sentences', 'understood'), ('sentences', 'understood', 'terms'), ('understood', 'terms', 'logical'), ('terms', 'logical', 'connections'), ('logical', 'connections', 'conclusions'), ('connections', 'conclusions', 'conditions'), ('conclusions', 'conditions', 'sentences'), ('conditions', 'sentences', '.')]

>> POS Tags are: 
 [('I', 'PRP'), ('argue', 'VBP'), ('section', 'NN'), ('4', 'CD'), ('kind', 'NN'), ('coherence', 'NN'), ('il-', 'NN'), ('lustrated', 'VBD'), ('sentences', 'NNS'), ('understood', 'JJ'), ('terms', 'NNS'), ('logical', 'JJ'), ('connections', 'NNS'), ('conclusions', 'NNS'), ('conditions', 'NNS'), ('sentences', 'NNS'), ('.', '.')]

 (S
  I/PRP
  argue/VBP
  (NP section/NN)
  4/CD
  (NP kind/NN coherence/NN il-/NN)
  lustrated/VBD
  (NP sentences/NNS)
  (NP understood/JJ terms/NNS)
  (NP
    logical/JJ
    connections/NNS
    conclusions/NNS
    conditions/NNS
    sentences/NNS)
  ./.) 


>> Noun Phrases are: 
 ['section', 'kind coherence il-', 'sentences', 'understood terms', 'logical connections conclusions conditions sentences']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('I', 'i'), ('argue', 'argu'), ('section', 'section'), ('4', '4'), ('kind', 'kind'), ('coherence', 'coher'), ('il-', 'il-'), ('lustrated', 'lustrat'), ('sentences', 'sentenc'), ('understood', 'understood'), ('terms', 'term'), ('logical', 'logic'), ('connections', 'connect'), ('conclusions', 'conclus'), ('conditions', 'condit'), ('sentences', 'sentenc'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('I', 'i'), ('argue', 'argu'), ('section', 'section'), ('4', '4'), ('kind', 'kind'), ('coherence', 'coher'), ('il-', 'il-'), ('lustrated', 'lustrat'), ('sentences', 'sentenc'), ('understood', 'understood'), ('terms', 'term'), ('logical', 'logic'), ('connections', 'connect'), ('conclusions', 'conclus'), ('conditions', 'condit'), ('sentences', 'sentenc'), ('.', '.')]

>> Lemmatization: 
 [('I', 'I'), ('argue', 'argue'), ('section', 'section'), ('4', '4'), ('kind', 'kind'), ('coherence', 'coherence'), ('il-', 'il-'), ('lustrated', 'lustrated'), ('sentences', 'sentence'), ('understood', 'understood'), ('terms', 'term'), ('logical', 'logical'), ('connections', 'connection'), ('conclusions', 'conclusion'), ('conditions', 'condition'), ('sentences', 'sentence'), ('.', '.')]



============================ Sentence 118 =============================

3.2 Natural Language and the LOT   In contrast with the problem of understanding communica- tions that are designed to be as clear and coherent as possi- ble, the problem of understanding ordinary, every-day natu- ral language communications is much harder. 


>> Tokens are: 
 ['3.2', 'Natural', 'Language', 'LOT', 'In', 'contrast', 'problem', 'understanding', 'communica-', 'tions', 'designed', 'clear', 'coherent', 'possi-', 'ble', ',', 'problem', 'understanding', 'ordinary', ',', 'every-day', 'natu-', 'ral', 'language', 'communications', 'much', 'harder', '.']

>> Bigrams are: 
 [('3.2', 'Natural'), ('Natural', 'Language'), ('Language', 'LOT'), ('LOT', 'In'), ('In', 'contrast'), ('contrast', 'problem'), ('problem', 'understanding'), ('understanding', 'communica-'), ('communica-', 'tions'), ('tions', 'designed'), ('designed', 'clear'), ('clear', 'coherent'), ('coherent', 'possi-'), ('possi-', 'ble'), ('ble', ','), (',', 'problem'), ('problem', 'understanding'), ('understanding', 'ordinary'), ('ordinary', ','), (',', 'every-day'), ('every-day', 'natu-'), ('natu-', 'ral'), ('ral', 'language'), ('language', 'communications'), ('communications', 'much'), ('much', 'harder'), ('harder', '.')]

>> Trigrams are: 
 [('3.2', 'Natural', 'Language'), ('Natural', 'Language', 'LOT'), ('Language', 'LOT', 'In'), ('LOT', 'In', 'contrast'), ('In', 'contrast', 'problem'), ('contrast', 'problem', 'understanding'), ('problem', 'understanding', 'communica-'), ('understanding', 'communica-', 'tions'), ('communica-', 'tions', 'designed'), ('tions', 'designed', 'clear'), ('designed', 'clear', 'coherent'), ('clear', 'coherent', 'possi-'), ('coherent', 'possi-', 'ble'), ('possi-', 'ble', ','), ('ble', ',', 'problem'), (',', 'problem', 'understanding'), ('problem', 'understanding', 'ordinary'), ('understanding', 'ordinary', ','), ('ordinary', ',', 'every-day'), (',', 'every-day', 'natu-'), ('every-day', 'natu-', 'ral'), ('natu-', 'ral', 'language'), ('ral', 'language', 'communications'), ('language', 'communications', 'much'), ('communications', 'much', 'harder'), ('much', 'harder', '.')]

>> POS Tags are: 
 [('3.2', 'CD'), ('Natural', 'JJ'), ('Language', 'NNP'), ('LOT', 'NNP'), ('In', 'IN'), ('contrast', 'NN'), ('problem', 'NN'), ('understanding', 'VBG'), ('communica-', 'JJ'), ('tions', 'NNS'), ('designed', 'VBN'), ('clear', 'JJ'), ('coherent', 'NN'), ('possi-', 'NN'), ('ble', 'JJ'), (',', ','), ('problem', 'NN'), ('understanding', 'NN'), ('ordinary', 'JJ'), (',', ','), ('every-day', 'JJ'), ('natu-', 'JJ'), ('ral', 'JJ'), ('language', 'NN'), ('communications', 'NNS'), ('much', 'JJ'), ('harder', 'JJR'), ('.', '.')]

 (S
  3.2/CD
  (NP Natural/JJ Language/NNP LOT/NNP)
  In/IN
  (NP contrast/NN problem/NN)
  understanding/VBG
  (NP communica-/JJ tions/NNS)
  designed/VBN
  (NP clear/JJ coherent/NN possi-/NN)
  ble/JJ
  ,/,
  (NP problem/NN understanding/NN)
  ordinary/JJ
  ,/,
  (NP every-day/JJ natu-/JJ ral/JJ language/NN communications/NNS)
  much/JJ
  harder/JJR
  ./.) 


>> Noun Phrases are: 
 ['Natural Language LOT', 'contrast problem', 'communica- tions', 'clear coherent possi-', 'problem understanding', 'every-day natu- ral language communications']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('3.2', '3.2'), ('Natural', 'natur'), ('Language', 'languag'), ('LOT', 'lot'), ('In', 'in'), ('contrast', 'contrast'), ('problem', 'problem'), ('understanding', 'understand'), ('communica-', 'communica-'), ('tions', 'tion'), ('designed', 'design'), ('clear', 'clear'), ('coherent', 'coher'), ('possi-', 'possi-'), ('ble', 'ble'), (',', ','), ('problem', 'problem'), ('understanding', 'understand'), ('ordinary', 'ordinari'), (',', ','), ('every-day', 'every-day'), ('natu-', 'natu-'), ('ral', 'ral'), ('language', 'languag'), ('communications', 'commun'), ('much', 'much'), ('harder', 'harder'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('3.2', '3.2'), ('Natural', 'natur'), ('Language', 'languag'), ('LOT', 'lot'), ('In', 'in'), ('contrast', 'contrast'), ('problem', 'problem'), ('understanding', 'understand'), ('communica-', 'communica-'), ('tions', 'tion'), ('designed', 'design'), ('clear', 'clear'), ('coherent', 'coher'), ('possi-', 'possi-'), ('ble', 'ble'), (',', ','), ('problem', 'problem'), ('understanding', 'understand'), ('ordinary', 'ordinari'), (',', ','), ('every-day', 'every-day'), ('natu-', 'natu-'), ('ral', 'ral'), ('language', 'languag'), ('communications', 'communic'), ('much', 'much'), ('harder', 'harder'), ('.', '.')]

>> Lemmatization: 
 [('3.2', '3.2'), ('Natural', 'Natural'), ('Language', 'Language'), ('LOT', 'LOT'), ('In', 'In'), ('contrast', 'contrast'), ('problem', 'problem'), ('understanding', 'understanding'), ('communica-', 'communica-'), ('tions', 'tions'), ('designed', 'designed'), ('clear', 'clear'), ('coherent', 'coherent'), ('possi-', 'possi-'), ('ble', 'ble'), (',', ','), ('problem', 'problem'), ('understanding', 'understanding'), ('ordinary', 'ordinary'), (',', ','), ('every-day', 'every-day'), ('natu-', 'natu-'), ('ral', 'ral'), ('language', 'language'), ('communications', 'communication'), ('much', 'much'), ('harder', 'harder'), ('.', '.')]



============================ Sentence 119 =============================

This harder  problem has two parts. 


>> Tokens are: 
 ['This', 'harder', 'problem', 'two', 'parts', '.']

>> Bigrams are: 
 [('This', 'harder'), ('harder', 'problem'), ('problem', 'two'), ('two', 'parts'), ('parts', '.')]

>> Trigrams are: 
 [('This', 'harder', 'problem'), ('harder', 'problem', 'two'), ('problem', 'two', 'parts'), ('two', 'parts', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('harder', 'NN'), ('problem', 'NN'), ('two', 'CD'), ('parts', 'NNS'), ('.', '.')]

 (S (NP This/DT harder/NN problem/NN) two/CD (NP parts/NNS) ./.) 


>> Noun Phrases are: 
 ['This harder problem', 'parts']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('harder', 'harder'), ('problem', 'problem'), ('two', 'two'), ('parts', 'part'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('harder', 'harder'), ('problem', 'problem'), ('two', 'two'), ('parts', 'part'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('harder', 'harder'), ('problem', 'problem'), ('two', 'two'), ('parts', 'part'), ('.', '.')]



============================ Sentence 120 =============================

The first part is to identify the in- tended meaning of the communication. 


>> Tokens are: 
 ['The', 'first', 'part', 'identify', 'in-', 'tended', 'meaning', 'communication', '.']

>> Bigrams are: 
 [('The', 'first'), ('first', 'part'), ('part', 'identify'), ('identify', 'in-'), ('in-', 'tended'), ('tended', 'meaning'), ('meaning', 'communication'), ('communication', '.')]

>> Trigrams are: 
 [('The', 'first', 'part'), ('first', 'part', 'identify'), ('part', 'identify', 'in-'), ('identify', 'in-', 'tended'), ('in-', 'tended', 'meaning'), ('tended', 'meaning', 'communication'), ('meaning', 'communication', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('first', 'JJ'), ('part', 'NN'), ('identify', 'VB'), ('in-', 'JJ'), ('tended', 'JJ'), ('meaning', 'NN'), ('communication', 'NN'), ('.', '.')]

 (S
  (NP The/DT first/JJ part/NN)
  identify/VB
  (NP in-/JJ tended/JJ meaning/NN communication/NN)
  ./.) 


>> Noun Phrases are: 
 ['The first part', 'in- tended meaning communication']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('first', 'first'), ('part', 'part'), ('identify', 'identifi'), ('in-', 'in-'), ('tended', 'tend'), ('meaning', 'mean'), ('communication', 'commun'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('first', 'first'), ('part', 'part'), ('identify', 'identifi'), ('in-', 'in-'), ('tended', 'tend'), ('meaning', 'mean'), ('communication', 'communic'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('first', 'first'), ('part', 'part'), ('identify', 'identify'), ('in-', 'in-'), ('tended', 'tended'), ('meaning', 'meaning'), ('communication', 'communication'), ('.', '.')]



============================ Sentence 121 =============================

For example, to un- derstand the ambiguous English sentence “he gave her the  book” it is necessary to identify the individuals, say John  and Mary, referred to by “he” and “her”. 


>> Tokens are: 
 ['For', 'example', ',', 'un-', 'derstand', 'ambiguous', 'English', 'sentence', '“', 'gave', 'book', '”', 'necessary', 'identify', 'individuals', ',', 'say', 'John', 'Mary', ',', 'referred', '“', '”', '“', '”', '.']

>> Bigrams are: 
 [('For', 'example'), ('example', ','), (',', 'un-'), ('un-', 'derstand'), ('derstand', 'ambiguous'), ('ambiguous', 'English'), ('English', 'sentence'), ('sentence', '“'), ('“', 'gave'), ('gave', 'book'), ('book', '”'), ('”', 'necessary'), ('necessary', 'identify'), ('identify', 'individuals'), ('individuals', ','), (',', 'say'), ('say', 'John'), ('John', 'Mary'), ('Mary', ','), (',', 'referred'), ('referred', '“'), ('“', '”'), ('”', '“'), ('“', '”'), ('”', '.')]

>> Trigrams are: 
 [('For', 'example', ','), ('example', ',', 'un-'), (',', 'un-', 'derstand'), ('un-', 'derstand', 'ambiguous'), ('derstand', 'ambiguous', 'English'), ('ambiguous', 'English', 'sentence'), ('English', 'sentence', '“'), ('sentence', '“', 'gave'), ('“', 'gave', 'book'), ('gave', 'book', '”'), ('book', '”', 'necessary'), ('”', 'necessary', 'identify'), ('necessary', 'identify', 'individuals'), ('identify', 'individuals', ','), ('individuals', ',', 'say'), (',', 'say', 'John'), ('say', 'John', 'Mary'), ('John', 'Mary', ','), ('Mary', ',', 'referred'), (',', 'referred', '“'), ('referred', '“', '”'), ('“', '”', '“'), ('”', '“', '”'), ('“', '”', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('example', 'NN'), (',', ','), ('un-', 'JJ'), ('derstand', 'NN'), ('ambiguous', 'JJ'), ('English', 'JJ'), ('sentence', 'NN'), ('“', 'NNS'), ('gave', 'VBD'), ('book', 'NN'), ('”', 'NN'), ('necessary', 'JJ'), ('identify', 'NN'), ('individuals', 'NNS'), (',', ','), ('say', 'VBP'), ('John', 'NNP'), ('Mary', 'NNP'), (',', ','), ('referred', 'VBD'), ('“', 'NNP'), ('”', 'NNP'), ('“', 'NNP'), ('”', 'NNP'), ('.', '.')]

 (S
  For/IN
  (NP example/NN)
  ,/,
  (NP un-/JJ derstand/NN)
  (NP ambiguous/JJ English/JJ sentence/NN “/NNS)
  gave/VBD
  (NP book/NN ”/NN)
  (NP necessary/JJ identify/NN individuals/NNS)
  ,/,
  say/VBP
  (NP John/NNP Mary/NNP)
  ,/,
  referred/VBD
  (NP “/NNP ”/NNP “/NNP ”/NNP)
  ./.) 


>> Noun Phrases are: 
 ['example', 'un- derstand', 'ambiguous English sentence “', 'book ”', 'necessary identify individuals', 'John Mary', '“ ” “ ”']

>> Named Entities are: 
 [('GPE', 'English'), ('PERSON', 'John Mary')] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('un-', 'un-'), ('derstand', 'derstand'), ('ambiguous', 'ambigu'), ('English', 'english'), ('sentence', 'sentenc'), ('“', '“'), ('gave', 'gave'), ('book', 'book'), ('”', '”'), ('necessary', 'necessari'), ('identify', 'identifi'), ('individuals', 'individu'), (',', ','), ('say', 'say'), ('John', 'john'), ('Mary', 'mari'), (',', ','), ('referred', 'refer'), ('“', '“'), ('”', '”'), ('“', '“'), ('”', '”'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('un-', 'un-'), ('derstand', 'derstand'), ('ambiguous', 'ambigu'), ('English', 'english'), ('sentence', 'sentenc'), ('“', '“'), ('gave', 'gave'), ('book', 'book'), ('”', '”'), ('necessary', 'necessari'), ('identify', 'identifi'), ('individuals', 'individu'), (',', ','), ('say', 'say'), ('John', 'john'), ('Mary', 'mari'), (',', ','), ('referred', 'refer'), ('“', '“'), ('”', '”'), ('“', '“'), ('”', '”'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('example', 'example'), (',', ','), ('un-', 'un-'), ('derstand', 'derstand'), ('ambiguous', 'ambiguous'), ('English', 'English'), ('sentence', 'sentence'), ('“', '“'), ('gave', 'gave'), ('book', 'book'), ('”', '”'), ('necessary', 'necessary'), ('identify', 'identify'), ('individuals', 'individual'), (',', ','), ('say', 'say'), ('John', 'John'), ('Mary', 'Mary'), (',', ','), ('referred', 'referred'), ('“', '“'), ('”', '”'), ('“', '“'), ('”', '”'), ('.', '.')]



============================ Sentence 122 =============================

The second part is to represent the intended meaning in a  canonical form, so that equivalent communications are rep- resented in the same way. 


>> Tokens are: 
 ['The', 'second', 'part', 'represent', 'intended', 'meaning', 'canonical', 'form', ',', 'equivalent', 'communications', 'rep-', 'resented', 'way', '.']

>> Bigrams are: 
 [('The', 'second'), ('second', 'part'), ('part', 'represent'), ('represent', 'intended'), ('intended', 'meaning'), ('meaning', 'canonical'), ('canonical', 'form'), ('form', ','), (',', 'equivalent'), ('equivalent', 'communications'), ('communications', 'rep-'), ('rep-', 'resented'), ('resented', 'way'), ('way', '.')]

>> Trigrams are: 
 [('The', 'second', 'part'), ('second', 'part', 'represent'), ('part', 'represent', 'intended'), ('represent', 'intended', 'meaning'), ('intended', 'meaning', 'canonical'), ('meaning', 'canonical', 'form'), ('canonical', 'form', ','), ('form', ',', 'equivalent'), (',', 'equivalent', 'communications'), ('equivalent', 'communications', 'rep-'), ('communications', 'rep-', 'resented'), ('rep-', 'resented', 'way'), ('resented', 'way', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('second', 'JJ'), ('part', 'NN'), ('represent', 'NN'), ('intended', 'VBD'), ('meaning', 'VBG'), ('canonical', 'JJ'), ('form', 'NN'), (',', ','), ('equivalent', 'JJ'), ('communications', 'NNS'), ('rep-', 'NNS'), ('resented', 'VBD'), ('way', 'NN'), ('.', '.')]

 (S
  (NP The/DT second/JJ part/NN represent/NN)
  intended/VBD
  meaning/VBG
  (NP canonical/JJ form/NN)
  ,/,
  (NP equivalent/JJ communications/NNS rep-/NNS)
  resented/VBD
  (NP way/NN)
  ./.) 


>> Noun Phrases are: 
 ['The second part represent', 'canonical form', 'equivalent communications rep-', 'way']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('second', 'second'), ('part', 'part'), ('represent', 'repres'), ('intended', 'intend'), ('meaning', 'mean'), ('canonical', 'canon'), ('form', 'form'), (',', ','), ('equivalent', 'equival'), ('communications', 'commun'), ('rep-', 'rep-'), ('resented', 'resent'), ('way', 'way'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('second', 'second'), ('part', 'part'), ('represent', 'repres'), ('intended', 'intend'), ('meaning', 'mean'), ('canonical', 'canon'), ('form', 'form'), (',', ','), ('equivalent', 'equival'), ('communications', 'communic'), ('rep-', 'rep-'), ('resented', 'resent'), ('way', 'way'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('second', 'second'), ('part', 'part'), ('represent', 'represent'), ('intended', 'intended'), ('meaning', 'meaning'), ('canonical', 'canonical'), ('form', 'form'), (',', ','), ('equivalent', 'equivalent'), ('communications', 'communication'), ('rep-', 'rep-'), ('resented', 'resented'), ('way', 'way'), ('.', '.')]



============================ Sentence 123 =============================

For example, the following Eng- lish sentences all have the same meaning:     John gave Mary the book. 


>> Tokens are: 
 ['For', 'example', ',', 'following', 'Eng-', 'lish', 'sentences', 'meaning', ':', 'John', 'gave', 'Mary', 'book', '.']

>> Bigrams are: 
 [('For', 'example'), ('example', ','), (',', 'following'), ('following', 'Eng-'), ('Eng-', 'lish'), ('lish', 'sentences'), ('sentences', 'meaning'), ('meaning', ':'), (':', 'John'), ('John', 'gave'), ('gave', 'Mary'), ('Mary', 'book'), ('book', '.')]

>> Trigrams are: 
 [('For', 'example', ','), ('example', ',', 'following'), (',', 'following', 'Eng-'), ('following', 'Eng-', 'lish'), ('Eng-', 'lish', 'sentences'), ('lish', 'sentences', 'meaning'), ('sentences', 'meaning', ':'), ('meaning', ':', 'John'), (':', 'John', 'gave'), ('John', 'gave', 'Mary'), ('gave', 'Mary', 'book'), ('Mary', 'book', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('example', 'NN'), (',', ','), ('following', 'VBG'), ('Eng-', 'JJ'), ('lish', 'JJ'), ('sentences', 'NNS'), ('meaning', 'NN'), (':', ':'), ('John', 'NNP'), ('gave', 'VBD'), ('Mary', 'NNP'), ('book', 'NN'), ('.', '.')]

 (S
  For/IN
  (NP example/NN)
  ,/,
  following/VBG
  (NP Eng-/JJ lish/JJ sentences/NNS meaning/NN)
  :/:
  (NP John/NNP)
  gave/VBD
  (NP Mary/NNP book/NN)
  ./.) 


>> Noun Phrases are: 
 ['example', 'Eng- lish sentences meaning', 'John', 'Mary book']

>> Named Entities are: 
 [('PERSON', 'John'), ('PERSON', 'Mary')] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('following', 'follow'), ('Eng-', 'eng-'), ('lish', 'lish'), ('sentences', 'sentenc'), ('meaning', 'mean'), (':', ':'), ('John', 'john'), ('gave', 'gave'), ('Mary', 'mari'), ('book', 'book'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('following', 'follow'), ('Eng-', 'eng-'), ('lish', 'lish'), ('sentences', 'sentenc'), ('meaning', 'mean'), (':', ':'), ('John', 'john'), ('gave', 'gave'), ('Mary', 'mari'), ('book', 'book'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('example', 'example'), (',', ','), ('following', 'following'), ('Eng-', 'Eng-'), ('lish', 'lish'), ('sentences', 'sentence'), ('meaning', 'meaning'), (':', ':'), ('John', 'John'), ('gave', 'gave'), ('Mary', 'Mary'), ('book', 'book'), ('.', '.')]



============================ Sentence 124 =============================

John gave the book to Mary. 


>> Tokens are: 
 ['John', 'gave', 'book', 'Mary', '.']

>> Bigrams are: 
 [('John', 'gave'), ('gave', 'book'), ('book', 'Mary'), ('Mary', '.')]

>> Trigrams are: 
 [('John', 'gave', 'book'), ('gave', 'book', 'Mary'), ('book', 'Mary', '.')]

>> POS Tags are: 
 [('John', 'NNP'), ('gave', 'VBD'), ('book', 'NN'), ('Mary', 'NNP'), ('.', '.')]

 (S (NP John/NNP) gave/VBD (NP book/NN Mary/NNP) ./.) 


>> Noun Phrases are: 
 ['John', 'book Mary']

>> Named Entities are: 
 [('PERSON', 'John')] 

>> Stemming using Porter Stemmer: 
 [('John', 'john'), ('gave', 'gave'), ('book', 'book'), ('Mary', 'mari'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('John', 'john'), ('gave', 'gave'), ('book', 'book'), ('Mary', 'mari'), ('.', '.')]

>> Lemmatization: 
 [('John', 'John'), ('gave', 'gave'), ('book', 'book'), ('Mary', 'Mary'), ('.', '.')]



============================ Sentence 125 =============================

Mary received the book from John. 


>> Tokens are: 
 ['Mary', 'received', 'book', 'John', '.']

>> Bigrams are: 
 [('Mary', 'received'), ('received', 'book'), ('book', 'John'), ('John', '.')]

>> Trigrams are: 
 [('Mary', 'received', 'book'), ('received', 'book', 'John'), ('book', 'John', '.')]

>> POS Tags are: 
 [('Mary', 'NNP'), ('received', 'VBD'), ('book', 'NN'), ('John', 'NNP'), ('.', '.')]

 (S (NP Mary/NNP) received/VBD (NP book/NN John/NNP) ./.) 


>> Noun Phrases are: 
 ['Mary', 'book John']

>> Named Entities are: 
 [('PERSON', 'Mary'), ('PERSON', 'John')] 

>> Stemming using Porter Stemmer: 
 [('Mary', 'mari'), ('received', 'receiv'), ('book', 'book'), ('John', 'john'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Mary', 'mari'), ('received', 'receiv'), ('book', 'book'), ('John', 'john'), ('.', '.')]

>> Lemmatization: 
 [('Mary', 'Mary'), ('received', 'received'), ('book', 'book'), ('John', 'John'), ('.', '.')]



============================ Sentence 126 =============================

The book was given to Mary by John. 


>> Tokens are: 
 ['The', 'book', 'given', 'Mary', 'John', '.']

>> Bigrams are: 
 [('The', 'book'), ('book', 'given'), ('given', 'Mary'), ('Mary', 'John'), ('John', '.')]

>> Trigrams are: 
 [('The', 'book', 'given'), ('book', 'given', 'Mary'), ('given', 'Mary', 'John'), ('Mary', 'John', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('book', 'NN'), ('given', 'VBN'), ('Mary', 'NNP'), ('John', 'NNP'), ('.', '.')]

 (S (NP The/DT book/NN) given/VBN (NP Mary/NNP John/NNP) ./.) 


>> Noun Phrases are: 
 ['The book', 'Mary John']

>> Named Entities are: 
 [('PERSON', 'Mary John')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('book', 'book'), ('given', 'given'), ('Mary', 'mari'), ('John', 'john'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('book', 'book'), ('given', 'given'), ('Mary', 'mari'), ('John', 'john'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('book', 'book'), ('given', 'given'), ('Mary', 'Mary'), ('John', 'John'), ('.', '.')]



============================ Sentence 127 =============================

The use of a canonical form in a mental representation  makes it easier to reason with the representation later. 


>> Tokens are: 
 ['The', 'use', 'canonical', 'form', 'mental', 'representation', 'makes', 'easier', 'reason', 'representation', 'later', '.']

>> Bigrams are: 
 [('The', 'use'), ('use', 'canonical'), ('canonical', 'form'), ('form', 'mental'), ('mental', 'representation'), ('representation', 'makes'), ('makes', 'easier'), ('easier', 'reason'), ('reason', 'representation'), ('representation', 'later'), ('later', '.')]

>> Trigrams are: 
 [('The', 'use', 'canonical'), ('use', 'canonical', 'form'), ('canonical', 'form', 'mental'), ('form', 'mental', 'representation'), ('mental', 'representation', 'makes'), ('representation', 'makes', 'easier'), ('makes', 'easier', 'reason'), ('easier', 'reason', 'representation'), ('reason', 'representation', 'later'), ('representation', 'later', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('use', 'NN'), ('canonical', 'JJ'), ('form', 'NN'), ('mental', 'JJ'), ('representation', 'NN'), ('makes', 'VBZ'), ('easier', 'JJR'), ('reason', 'NN'), ('representation', 'NN'), ('later', 'RB'), ('.', '.')]

 (S
  (NP The/DT use/NN)
  (NP canonical/JJ form/NN)
  (NP mental/JJ representation/NN)
  makes/VBZ
  easier/JJR
  (NP reason/NN representation/NN)
  later/RB
  ./.) 


>> Noun Phrases are: 
 ['The use', 'canonical form', 'mental representation', 'reason representation']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('use', 'use'), ('canonical', 'canon'), ('form', 'form'), ('mental', 'mental'), ('representation', 'represent'), ('makes', 'make'), ('easier', 'easier'), ('reason', 'reason'), ('representation', 'represent'), ('later', 'later'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('use', 'use'), ('canonical', 'canon'), ('form', 'form'), ('mental', 'mental'), ('representation', 'represent'), ('makes', 'make'), ('easier', 'easier'), ('reason', 'reason'), ('representation', 'represent'), ('later', 'later'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('use', 'use'), ('canonical', 'canonical'), ('form', 'form'), ('mental', 'mental'), ('representation', 'representation'), ('makes', 'make'), ('easier', 'easier'), ('reason', 'reason'), ('representation', 'representation'), ('later', 'later'), ('.', '.')]



============================ Sentence 128 =============================

In this  case, the common meaning of the different sentences could  be represented either in the logical form give(john, mary,  book) or in the more precise form:     event(e1000). 


>> Tokens are: 
 ['In', 'case', ',', 'common', 'meaning', 'different', 'sentences', 'could', 'represented', 'either', 'logical', 'form', 'give', '(', 'john', ',', 'mary', ',', 'book', ')', 'precise', 'form', ':', 'event', '(', 'e1000', ')', '.']

>> Bigrams are: 
 [('In', 'case'), ('case', ','), (',', 'common'), ('common', 'meaning'), ('meaning', 'different'), ('different', 'sentences'), ('sentences', 'could'), ('could', 'represented'), ('represented', 'either'), ('either', 'logical'), ('logical', 'form'), ('form', 'give'), ('give', '('), ('(', 'john'), ('john', ','), (',', 'mary'), ('mary', ','), (',', 'book'), ('book', ')'), (')', 'precise'), ('precise', 'form'), ('form', ':'), (':', 'event'), ('event', '('), ('(', 'e1000'), ('e1000', ')'), (')', '.')]

>> Trigrams are: 
 [('In', 'case', ','), ('case', ',', 'common'), (',', 'common', 'meaning'), ('common', 'meaning', 'different'), ('meaning', 'different', 'sentences'), ('different', 'sentences', 'could'), ('sentences', 'could', 'represented'), ('could', 'represented', 'either'), ('represented', 'either', 'logical'), ('either', 'logical', 'form'), ('logical', 'form', 'give'), ('form', 'give', '('), ('give', '(', 'john'), ('(', 'john', ','), ('john', ',', 'mary'), (',', 'mary', ','), ('mary', ',', 'book'), (',', 'book', ')'), ('book', ')', 'precise'), (')', 'precise', 'form'), ('precise', 'form', ':'), ('form', ':', 'event'), (':', 'event', '('), ('event', '(', 'e1000'), ('(', 'e1000', ')'), ('e1000', ')', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('case', 'NN'), (',', ','), ('common', 'JJ'), ('meaning', 'VBG'), ('different', 'JJ'), ('sentences', 'NNS'), ('could', 'MD'), ('represented', 'VB'), ('either', 'CC'), ('logical', 'JJ'), ('form', 'NN'), ('give', 'NN'), ('(', '('), ('john', 'NN'), (',', ','), ('mary', 'JJ'), (',', ','), ('book', 'NN'), (')', ')'), ('precise', 'JJ'), ('form', 'NN'), (':', ':'), ('event', 'NN'), ('(', '('), ('e1000', 'NN'), (')', ')'), ('.', '.')]

 (S
  In/IN
  (NP case/NN)
  ,/,
  common/JJ
  meaning/VBG
  (NP different/JJ sentences/NNS)
  could/MD
  represented/VB
  either/CC
  (NP logical/JJ form/NN give/NN)
  (/(
  (NP john/NN)
  ,/,
  mary/JJ
  ,/,
  (NP book/NN)
  )/)
  (NP precise/JJ form/NN)
  :/:
  (NP event/NN)
  (/(
  (NP e1000/NN)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['case', 'different sentences', 'logical form give', 'john', 'book', 'precise form', 'event', 'e1000']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('case', 'case'), (',', ','), ('common', 'common'), ('meaning', 'mean'), ('different', 'differ'), ('sentences', 'sentenc'), ('could', 'could'), ('represented', 'repres'), ('either', 'either'), ('logical', 'logic'), ('form', 'form'), ('give', 'give'), ('(', '('), ('john', 'john'), (',', ','), ('mary', 'mari'), (',', ','), ('book', 'book'), (')', ')'), ('precise', 'precis'), ('form', 'form'), (':', ':'), ('event', 'event'), ('(', '('), ('e1000', 'e1000'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('case', 'case'), (',', ','), ('common', 'common'), ('meaning', 'mean'), ('different', 'differ'), ('sentences', 'sentenc'), ('could', 'could'), ('represented', 'repres'), ('either', 'either'), ('logical', 'logic'), ('form', 'form'), ('give', 'give'), ('(', '('), ('john', 'john'), (',', ','), ('mary', 'mari'), (',', ','), ('book', 'book'), (')', ')'), ('precise', 'precis'), ('form', 'form'), (':', ':'), ('event', 'event'), ('(', '('), ('e1000', 'e1000'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('case', 'case'), (',', ','), ('common', 'common'), ('meaning', 'meaning'), ('different', 'different'), ('sentences', 'sentence'), ('could', 'could'), ('represented', 'represented'), ('either', 'either'), ('logical', 'logical'), ('form', 'form'), ('give', 'give'), ('(', '('), ('john', 'john'), (',', ','), ('mary', 'mary'), (',', ','), ('book', 'book'), (')', ')'), ('precise', 'precise'), ('form', 'form'), (':', ':'), ('event', 'event'), ('(', '('), ('e1000', 'e1000'), (')', ')'), ('.', '.')]



============================ Sentence 129 =============================

act(e1000, giving). 


>> Tokens are: 
 ['act', '(', 'e1000', ',', 'giving', ')', '.']

>> Bigrams are: 
 [('act', '('), ('(', 'e1000'), ('e1000', ','), (',', 'giving'), ('giving', ')'), (')', '.')]

>> Trigrams are: 
 [('act', '(', 'e1000'), ('(', 'e1000', ','), ('e1000', ',', 'giving'), (',', 'giving', ')'), ('giving', ')', '.')]

>> POS Tags are: 
 [('act', 'NN'), ('(', '('), ('e1000', 'CD'), (',', ','), ('giving', 'VBG'), (')', ')'), ('.', '.')]

 (S (NP act/NN) (/( e1000/CD ,/, giving/VBG )/) ./.) 


>> Noun Phrases are: 
 ['act']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('act', 'act'), ('(', '('), ('e1000', 'e1000'), (',', ','), ('giving', 'give'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('act', 'act'), ('(', '('), ('e1000', 'e1000'), (',', ','), ('giving', 'give'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('act', 'act'), ('(', '('), ('e1000', 'e1000'), (',', ','), ('giving', 'giving'), (')', ')'), ('.', '.')]



============================ Sentence 130 =============================

agent(e1000, john). 


>> Tokens are: 
 ['agent', '(', 'e1000', ',', 'john', ')', '.']

>> Bigrams are: 
 [('agent', '('), ('(', 'e1000'), ('e1000', ','), (',', 'john'), ('john', ')'), (')', '.')]

>> Trigrams are: 
 [('agent', '(', 'e1000'), ('(', 'e1000', ','), ('e1000', ',', 'john'), (',', 'john', ')'), ('john', ')', '.')]

>> POS Tags are: 
 [('agent', 'NN'), ('(', '('), ('e1000', 'NN'), (',', ','), ('john', 'NN'), (')', ')'), ('.', '.')]

 (S (NP agent/NN) (/( (NP e1000/NN) ,/, (NP john/NN) )/) ./.) 


>> Noun Phrases are: 
 ['agent', 'e1000', 'john']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('agent', 'agent'), ('(', '('), ('e1000', 'e1000'), (',', ','), ('john', 'john'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('agent', 'agent'), ('(', '('), ('e1000', 'e1000'), (',', ','), ('john', 'john'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('agent', 'agent'), ('(', '('), ('e1000', 'e1000'), (',', ','), ('john', 'john'), (')', ')'), ('.', '.')]



============================ Sentence 131 =============================

recipient(e1000, mary). 


>> Tokens are: 
 ['recipient', '(', 'e1000', ',', 'mary', ')', '.']

>> Bigrams are: 
 [('recipient', '('), ('(', 'e1000'), ('e1000', ','), (',', 'mary'), ('mary', ')'), (')', '.')]

>> Trigrams are: 
 [('recipient', '(', 'e1000'), ('(', 'e1000', ','), ('e1000', ',', 'mary'), (',', 'mary', ')'), ('mary', ')', '.')]

>> POS Tags are: 
 [('recipient', 'NN'), ('(', '('), ('e1000', 'CD'), (',', ','), ('mary', 'NN'), (')', ')'), ('.', '.')]

 (S (NP recipient/NN) (/( e1000/CD ,/, (NP mary/NN) )/) ./.) 


>> Noun Phrases are: 
 ['recipient', 'mary']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('recipient', 'recipi'), ('(', '('), ('e1000', 'e1000'), (',', ','), ('mary', 'mari'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('recipient', 'recipi'), ('(', '('), ('e1000', 'e1000'), (',', ','), ('mary', 'mari'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('recipient', 'recipient'), ('(', '('), ('e1000', 'e1000'), (',', ','), ('mary', 'mary'), (')', ')'), ('.', '.')]



============================ Sentence 132 =============================

object(e1000, book21). 


>> Tokens are: 
 ['object', '(', 'e1000', ',', 'book21', ')', '.']

>> Bigrams are: 
 [('object', '('), ('(', 'e1000'), ('e1000', ','), (',', 'book21'), ('book21', ')'), (')', '.')]

>> Trigrams are: 
 [('object', '(', 'e1000'), ('(', 'e1000', ','), ('e1000', ',', 'book21'), (',', 'book21', ')'), ('book21', ')', '.')]

>> POS Tags are: 
 [('object', 'NN'), ('(', '('), ('e1000', 'CD'), (',', ','), ('book21', 'NN'), (')', ')'), ('.', '.')]

 (S (NP object/NN) (/( e1000/CD ,/, (NP book21/NN) )/) ./.) 


>> Noun Phrases are: 
 ['object', 'book21']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('object', 'object'), ('(', '('), ('e1000', 'e1000'), (',', ','), ('book21', 'book21'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('object', 'object'), ('(', '('), ('e1000', 'e1000'), (',', ','), ('book21', 'book21'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('object', 'object'), ('(', '('), ('e1000', 'e1000'), (',', ','), ('book21', 'book21'), (')', ')'), ('.', '.')]



============================ Sentence 133 =============================

isa(book21, book). 


>> Tokens are: 
 ['isa', '(', 'book21', ',', 'book', ')', '.']

>> Bigrams are: 
 [('isa', '('), ('(', 'book21'), ('book21', ','), (',', 'book'), ('book', ')'), (')', '.')]

>> Trigrams are: 
 [('isa', '(', 'book21'), ('(', 'book21', ','), ('book21', ',', 'book'), (',', 'book', ')'), ('book', ')', '.')]

>> POS Tags are: 
 [('isa', 'NN'), ('(', '('), ('book21', 'NN'), (',', ','), ('book', 'NN'), (')', ')'), ('.', '.')]

 (S (NP isa/NN) (/( (NP book21/NN) ,/, (NP book/NN) )/) ./.) 


>> Noun Phrases are: 
 ['isa', 'book21', 'book']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('isa', 'isa'), ('(', '('), ('book21', 'book21'), (',', ','), ('book', 'book'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('isa', 'isa'), ('(', '('), ('book21', 'book21'), (',', ','), ('book', 'book'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('isa', 'isa'), ('(', '('), ('book21', 'book21'), (',', ','), ('book', 'book'), (')', ')'), ('.', '.')]



============================ Sentence 134 =============================

The more precise form is one way of distinguishing between  similar events and similar books. 


>> Tokens are: 
 ['The', 'precise', 'form', 'one', 'way', 'distinguishing', 'similar', 'events', 'similar', 'books', '.']

>> Bigrams are: 
 [('The', 'precise'), ('precise', 'form'), ('form', 'one'), ('one', 'way'), ('way', 'distinguishing'), ('distinguishing', 'similar'), ('similar', 'events'), ('events', 'similar'), ('similar', 'books'), ('books', '.')]

>> Trigrams are: 
 [('The', 'precise', 'form'), ('precise', 'form', 'one'), ('form', 'one', 'way'), ('one', 'way', 'distinguishing'), ('way', 'distinguishing', 'similar'), ('distinguishing', 'similar', 'events'), ('similar', 'events', 'similar'), ('events', 'similar', 'books'), ('similar', 'books', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('precise', 'JJ'), ('form', 'NN'), ('one', 'CD'), ('way', 'NN'), ('distinguishing', 'VBG'), ('similar', 'JJ'), ('events', 'NNS'), ('similar', 'JJ'), ('books', 'NNS'), ('.', '.')]

 (S
  (NP The/DT precise/JJ form/NN)
  one/CD
  (NP way/NN)
  distinguishing/VBG
  (NP similar/JJ events/NNS)
  (NP similar/JJ books/NNS)
  ./.) 


>> Noun Phrases are: 
 ['The precise form', 'way', 'similar events', 'similar books']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('precise', 'precis'), ('form', 'form'), ('one', 'one'), ('way', 'way'), ('distinguishing', 'distinguish'), ('similar', 'similar'), ('events', 'event'), ('similar', 'similar'), ('books', 'book'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('precise', 'precis'), ('form', 'form'), ('one', 'one'), ('way', 'way'), ('distinguishing', 'distinguish'), ('similar', 'similar'), ('events', 'event'), ('similar', 'similar'), ('books', 'book'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('precise', 'precise'), ('form', 'form'), ('one', 'one'), ('way', 'way'), ('distinguishing', 'distinguishing'), ('similar', 'similar'), ('events', 'event'), ('similar', 'similar'), ('books', 'book'), ('.', '.')]



============================ Sentence 135 =============================

It follows from the tenets of relevance theory that, if you  want your communications to be easy to understand, then  you should express them in a form that is close to their men- tal representations. 


>> Tokens are: 
 ['It', 'follows', 'tenets', 'relevance', 'theory', ',', 'want', 'communications', 'easy', 'understand', ',', 'express', 'form', 'close', 'men-', 'tal', 'representations', '.']

>> Bigrams are: 
 [('It', 'follows'), ('follows', 'tenets'), ('tenets', 'relevance'), ('relevance', 'theory'), ('theory', ','), (',', 'want'), ('want', 'communications'), ('communications', 'easy'), ('easy', 'understand'), ('understand', ','), (',', 'express'), ('express', 'form'), ('form', 'close'), ('close', 'men-'), ('men-', 'tal'), ('tal', 'representations'), ('representations', '.')]

>> Trigrams are: 
 [('It', 'follows', 'tenets'), ('follows', 'tenets', 'relevance'), ('tenets', 'relevance', 'theory'), ('relevance', 'theory', ','), ('theory', ',', 'want'), (',', 'want', 'communications'), ('want', 'communications', 'easy'), ('communications', 'easy', 'understand'), ('easy', 'understand', ','), ('understand', ',', 'express'), (',', 'express', 'form'), ('express', 'form', 'close'), ('form', 'close', 'men-'), ('close', 'men-', 'tal'), ('men-', 'tal', 'representations'), ('tal', 'representations', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('follows', 'VBZ'), ('tenets', 'NNS'), ('relevance', 'NN'), ('theory', 'NN'), (',', ','), ('want', 'VBP'), ('communications', 'NNS'), ('easy', 'JJ'), ('understand', 'NN'), (',', ','), ('express', 'RB'), ('form', 'NN'), ('close', 'JJ'), ('men-', 'JJ'), ('tal', 'JJ'), ('representations', 'NNS'), ('.', '.')]

 (S
  It/PRP
  follows/VBZ
  (NP tenets/NNS relevance/NN theory/NN)
  ,/,
  want/VBP
  (NP communications/NNS)
  (NP easy/JJ understand/NN)
  ,/,
  express/RB
  (NP form/NN)
  (NP close/JJ men-/JJ tal/JJ representations/NNS)
  ./.) 


>> Noun Phrases are: 
 ['tenets relevance theory', 'communications', 'easy understand', 'form', 'close men- tal representations']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('follows', 'follow'), ('tenets', 'tenet'), ('relevance', 'relev'), ('theory', 'theori'), (',', ','), ('want', 'want'), ('communications', 'commun'), ('easy', 'easi'), ('understand', 'understand'), (',', ','), ('express', 'express'), ('form', 'form'), ('close', 'close'), ('men-', 'men-'), ('tal', 'tal'), ('representations', 'represent'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('follows', 'follow'), ('tenets', 'tenet'), ('relevance', 'relev'), ('theory', 'theori'), (',', ','), ('want', 'want'), ('communications', 'communic'), ('easy', 'easi'), ('understand', 'understand'), (',', ','), ('express', 'express'), ('form', 'form'), ('close', 'close'), ('men-', 'men-'), ('tal', 'tal'), ('representations', 'represent'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('follows', 'follows'), ('tenets', 'tenet'), ('relevance', 'relevance'), ('theory', 'theory'), (',', ','), ('want', 'want'), ('communications', 'communication'), ('easy', 'easy'), ('understand', 'understand'), (',', ','), ('express', 'express'), ('form', 'form'), ('close', 'close'), ('men-', 'men-'), ('tal', 'tal'), ('representations', 'representation'), ('.', '.')]



============================ Sentence 136 =============================

They should be clear, so that extracting  their meaning is easy, and they should be simple, so that  their meaning is close to the canonical form in which they  are represented. 


>> Tokens are: 
 ['They', 'clear', ',', 'extracting', 'meaning', 'easy', ',', 'simple', ',', 'meaning', 'close', 'canonical', 'form', 'represented', '.']

>> Bigrams are: 
 [('They', 'clear'), ('clear', ','), (',', 'extracting'), ('extracting', 'meaning'), ('meaning', 'easy'), ('easy', ','), (',', 'simple'), ('simple', ','), (',', 'meaning'), ('meaning', 'close'), ('close', 'canonical'), ('canonical', 'form'), ('form', 'represented'), ('represented', '.')]

>> Trigrams are: 
 [('They', 'clear', ','), ('clear', ',', 'extracting'), (',', 'extracting', 'meaning'), ('extracting', 'meaning', 'easy'), ('meaning', 'easy', ','), ('easy', ',', 'simple'), (',', 'simple', ','), ('simple', ',', 'meaning'), (',', 'meaning', 'close'), ('meaning', 'close', 'canonical'), ('close', 'canonical', 'form'), ('canonical', 'form', 'represented'), ('form', 'represented', '.')]

>> POS Tags are: 
 [('They', 'PRP'), ('clear', 'VBP'), (',', ','), ('extracting', 'VBG'), ('meaning', 'VBG'), ('easy', 'JJ'), (',', ','), ('simple', 'JJ'), (',', ','), ('meaning', 'VBG'), ('close', 'JJ'), ('canonical', 'JJ'), ('form', 'NN'), ('represented', 'VBN'), ('.', '.')]

 (S
  They/PRP
  clear/VBP
  ,/,
  extracting/VBG
  meaning/VBG
  easy/JJ
  ,/,
  simple/JJ
  ,/,
  meaning/VBG
  (NP close/JJ canonical/JJ form/NN)
  represented/VBN
  ./.) 


>> Noun Phrases are: 
 ['close canonical form']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('They', 'they'), ('clear', 'clear'), (',', ','), ('extracting', 'extract'), ('meaning', 'mean'), ('easy', 'easi'), (',', ','), ('simple', 'simpl'), (',', ','), ('meaning', 'mean'), ('close', 'close'), ('canonical', 'canon'), ('form', 'form'), ('represented', 'repres'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('They', 'they'), ('clear', 'clear'), (',', ','), ('extracting', 'extract'), ('meaning', 'mean'), ('easy', 'easi'), (',', ','), ('simple', 'simpl'), (',', ','), ('meaning', 'mean'), ('close', 'close'), ('canonical', 'canon'), ('form', 'form'), ('represented', 'repres'), ('.', '.')]

>> Lemmatization: 
 [('They', 'They'), ('clear', 'clear'), (',', ','), ('extracting', 'extracting'), ('meaning', 'meaning'), ('easy', 'easy'), (',', ','), ('simple', 'simple'), (',', ','), ('meaning', 'meaning'), ('close', 'close'), ('canonical', 'canonical'), ('form', 'form'), ('represented', 'represented'), ('.', '.')]



============================ Sentence 137 =============================

For example, don’t say  “Every bird which belongs to  class aves has feathers ”. 


>> Tokens are: 
 ['For', 'example', ',', '’', 'say', '“', 'Every', 'bird', 'belongs', 'class', 'aves', 'feathers', '”', '.']

>> Bigrams are: 
 [('For', 'example'), ('example', ','), (',', '’'), ('’', 'say'), ('say', '“'), ('“', 'Every'), ('Every', 'bird'), ('bird', 'belongs'), ('belongs', 'class'), ('class', 'aves'), ('aves', 'feathers'), ('feathers', '”'), ('”', '.')]

>> Trigrams are: 
 [('For', 'example', ','), ('example', ',', '’'), (',', '’', 'say'), ('’', 'say', '“'), ('say', '“', 'Every'), ('“', 'Every', 'bird'), ('Every', 'bird', 'belongs'), ('bird', 'belongs', 'class'), ('belongs', 'class', 'aves'), ('class', 'aves', 'feathers'), ('aves', 'feathers', '”'), ('feathers', '”', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('example', 'NN'), (',', ','), ('’', 'NNP'), ('say', 'VBP'), ('“', 'JJ'), ('Every', 'NNP'), ('bird', 'NN'), ('belongs', 'NNS'), ('class', 'NN'), ('aves', 'VBZ'), ('feathers', 'NNS'), ('”', 'NNP'), ('.', '.')]

 (S
  For/IN
  (NP example/NN)
  ,/,
  (NP ’/NNP)
  say/VBP
  (NP “/JJ Every/NNP bird/NN belongs/NNS class/NN)
  aves/VBZ
  (NP feathers/NNS ”/NNP)
  ./.) 


>> Noun Phrases are: 
 ['example', '’', '“ Every bird belongs class', 'feathers ”']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('’', '’'), ('say', 'say'), ('“', '“'), ('Every', 'everi'), ('bird', 'bird'), ('belongs', 'belong'), ('class', 'class'), ('aves', 'ave'), ('feathers', 'feather'), ('”', '”'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('’', '’'), ('say', 'say'), ('“', '“'), ('Every', 'everi'), ('bird', 'bird'), ('belongs', 'belong'), ('class', 'class'), ('aves', 'ave'), ('feathers', 'feather'), ('”', '”'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('example', 'example'), (',', ','), ('’', '’'), ('say', 'say'), ('“', '“'), ('Every', 'Every'), ('bird', 'bird'), ('belongs', 'belongs'), ('class', 'class'), ('aves', 'aves'), ('feathers', 'feather'), ('”', '”'), ('.', '.')]



============================ Sentence 138 =============================

But say:      every bird has feathers. 


>> Tokens are: 
 ['But', 'say', ':', 'every', 'bird', 'feathers', '.']

>> Bigrams are: 
 [('But', 'say'), ('say', ':'), (':', 'every'), ('every', 'bird'), ('bird', 'feathers'), ('feathers', '.')]

>> Trigrams are: 
 [('But', 'say', ':'), ('say', ':', 'every'), (':', 'every', 'bird'), ('every', 'bird', 'feathers'), ('bird', 'feathers', '.')]

>> POS Tags are: 
 [('But', 'CC'), ('say', 'VBP'), (':', ':'), ('every', 'DT'), ('bird', 'NN'), ('feathers', 'NNS'), ('.', '.')]

 (S But/CC say/VBP :/: (NP every/DT bird/NN feathers/NNS) ./.) 


>> Noun Phrases are: 
 ['every bird feathers']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('But', 'but'), ('say', 'say'), (':', ':'), ('every', 'everi'), ('bird', 'bird'), ('feathers', 'feather'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('But', 'but'), ('say', 'say'), (':', ':'), ('every', 'everi'), ('bird', 'bird'), ('feathers', 'feather'), ('.', '.')]

>> Lemmatization: 
 [('But', 'But'), ('say', 'say'), (':', ':'), ('every', 'every'), ('bird', 'bird'), ('feathers', 'feather'), ('.', '.')]



============================ Sentence 139 =============================

every bird belongs to class aves. 


>> Tokens are: 
 ['every', 'bird', 'belongs', 'class', 'aves', '.']

>> Bigrams are: 
 [('every', 'bird'), ('bird', 'belongs'), ('belongs', 'class'), ('class', 'aves'), ('aves', '.')]

>> Trigrams are: 
 [('every', 'bird', 'belongs'), ('bird', 'belongs', 'class'), ('belongs', 'class', 'aves'), ('class', 'aves', '.')]

>> POS Tags are: 
 [('every', 'DT'), ('bird', 'NN'), ('belongs', 'VBZ'), ('class', 'NN'), ('aves', 'NNS'), ('.', '.')]

 (S (NP every/DT bird/NN) belongs/VBZ (NP class/NN aves/NNS) ./.) 


>> Noun Phrases are: 
 ['every bird', 'class aves']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('every', 'everi'), ('bird', 'bird'), ('belongs', 'belong'), ('class', 'class'), ('aves', 'ave'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('every', 'everi'), ('bird', 'bird'), ('belongs', 'belong'), ('class', 'class'), ('aves', 'ave'), ('.', '.')]

>> Lemmatization: 
 [('every', 'every'), ('bird', 'bird'), ('belongs', 'belongs'), ('class', 'class'), ('aves', 'aves'), ('.', '.')]



============================ Sentence 140 =============================

or     a bird has feathers if the bird belongs to class aves. 


>> Tokens are: 
 ['bird', 'feathers', 'bird', 'belongs', 'class', 'aves', '.']

>> Bigrams are: 
 [('bird', 'feathers'), ('feathers', 'bird'), ('bird', 'belongs'), ('belongs', 'class'), ('class', 'aves'), ('aves', '.')]

>> Trigrams are: 
 [('bird', 'feathers', 'bird'), ('feathers', 'bird', 'belongs'), ('bird', 'belongs', 'class'), ('belongs', 'class', 'aves'), ('class', 'aves', '.')]

>> POS Tags are: 
 [('bird', 'NN'), ('feathers', 'NNS'), ('bird', 'VBP'), ('belongs', 'NNS'), ('class', 'NN'), ('aves', 'NNS'), ('.', '.')]

 (S
  (NP bird/NN feathers/NNS)
  bird/VBP
  (NP belongs/NNS class/NN aves/NNS)
  ./.) 


>> Noun Phrases are: 
 ['bird feathers', 'belongs class aves']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('bird', 'bird'), ('feathers', 'feather'), ('bird', 'bird'), ('belongs', 'belong'), ('class', 'class'), ('aves', 'ave'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('bird', 'bird'), ('feathers', 'feather'), ('bird', 'bird'), ('belongs', 'belong'), ('class', 'class'), ('aves', 'ave'), ('.', '.')]

>> Lemmatization: 
 [('bird', 'bird'), ('feathers', 'feather'), ('bird', 'bird'), ('belongs', 'belongs'), ('class', 'class'), ('aves', 'aves'), ('.', '.')]



============================ Sentence 141 =============================

depending on what you mean. 


>> Tokens are: 
 ['depending', 'mean', '.']

>> Bigrams are: 
 [('depending', 'mean'), ('mean', '.')]

>> Trigrams are: 
 [('depending', 'mean', '.')]

>> POS Tags are: 
 [('depending', 'VBG'), ('mean', 'NN'), ('.', '.')]

 (S depending/VBG (NP mean/NN) ./.) 


>> Noun Phrases are: 
 ['mean']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('depending', 'depend'), ('mean', 'mean'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('depending', 'depend'), ('mean', 'mean'), ('.', '.')]

>> Lemmatization: 
 [('depending', 'depending'), ('mean', 'mean'), ('.', '.')]



============================ Sentence 142 =============================

In written English, the differ- ent meanings can be signaled by the presence or absence of  commas before and after the relative clause beginning with  the word “which”. 


>> Tokens are: 
 ['In', 'written', 'English', ',', 'differ-', 'ent', 'meanings', 'signaled', 'presence', 'absence', 'commas', 'relative', 'clause', 'beginning', 'word', '“', '”', '.']

>> Bigrams are: 
 [('In', 'written'), ('written', 'English'), ('English', ','), (',', 'differ-'), ('differ-', 'ent'), ('ent', 'meanings'), ('meanings', 'signaled'), ('signaled', 'presence'), ('presence', 'absence'), ('absence', 'commas'), ('commas', 'relative'), ('relative', 'clause'), ('clause', 'beginning'), ('beginning', 'word'), ('word', '“'), ('“', '”'), ('”', '.')]

>> Trigrams are: 
 [('In', 'written', 'English'), ('written', 'English', ','), ('English', ',', 'differ-'), (',', 'differ-', 'ent'), ('differ-', 'ent', 'meanings'), ('ent', 'meanings', 'signaled'), ('meanings', 'signaled', 'presence'), ('signaled', 'presence', 'absence'), ('presence', 'absence', 'commas'), ('absence', 'commas', 'relative'), ('commas', 'relative', 'clause'), ('relative', 'clause', 'beginning'), ('clause', 'beginning', 'word'), ('beginning', 'word', '“'), ('word', '“', '”'), ('“', '”', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('written', 'VBN'), ('English', 'NNP'), (',', ','), ('differ-', 'JJ'), ('ent', 'JJ'), ('meanings', 'NNS'), ('signaled', 'VBD'), ('presence', 'NN'), ('absence', 'NN'), ('commas', 'NN'), ('relative', 'JJ'), ('clause', 'NN'), ('beginning', 'VBG'), ('word', 'NN'), ('“', 'NNP'), ('”', 'NNP'), ('.', '.')]

 (S
  In/IN
  written/VBN
  (NP English/NNP)
  ,/,
  (NP differ-/JJ ent/JJ meanings/NNS)
  signaled/VBD
  (NP presence/NN absence/NN commas/NN)
  (NP relative/JJ clause/NN)
  beginning/VBG
  (NP word/NN “/NNP ”/NNP)
  ./.) 


>> Noun Phrases are: 
 ['English', 'differ- ent meanings', 'presence absence commas', 'relative clause', 'word “ ”']

>> Named Entities are: 
 [('GPE', 'English')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('written', 'written'), ('English', 'english'), (',', ','), ('differ-', 'differ-'), ('ent', 'ent'), ('meanings', 'mean'), ('signaled', 'signal'), ('presence', 'presenc'), ('absence', 'absenc'), ('commas', 'comma'), ('relative', 'rel'), ('clause', 'claus'), ('beginning', 'begin'), ('word', 'word'), ('“', '“'), ('”', '”'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('written', 'written'), ('English', 'english'), (',', ','), ('differ-', 'differ-'), ('ent', 'ent'), ('meanings', 'mean'), ('signaled', 'signal'), ('presence', 'presenc'), ('absence', 'absenc'), ('commas', 'comma'), ('relative', 'relat'), ('clause', 'claus'), ('beginning', 'begin'), ('word', 'word'), ('“', '“'), ('”', '”'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('written', 'written'), ('English', 'English'), (',', ','), ('differ-', 'differ-'), ('ent', 'ent'), ('meanings', 'meaning'), ('signaled', 'signaled'), ('presence', 'presence'), ('absence', 'absence'), ('commas', 'comma'), ('relative', 'relative'), ('clause', 'clause'), ('beginning', 'beginning'), ('word', 'word'), ('“', '“'), ('”', '”'), ('.', '.')]



============================ Sentence 143 =============================

In clausal logic, they are represented by  the difference between conclusions and conditions. 


>> Tokens are: 
 ['In', 'clausal', 'logic', ',', 'represented', 'difference', 'conclusions', 'conditions', '.']

>> Bigrams are: 
 [('In', 'clausal'), ('clausal', 'logic'), ('logic', ','), (',', 'represented'), ('represented', 'difference'), ('difference', 'conclusions'), ('conclusions', 'conditions'), ('conditions', '.')]

>> Trigrams are: 
 [('In', 'clausal', 'logic'), ('clausal', 'logic', ','), ('logic', ',', 'represented'), (',', 'represented', 'difference'), ('represented', 'difference', 'conclusions'), ('difference', 'conclusions', 'conditions'), ('conclusions', 'conditions', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('clausal', 'NN'), ('logic', 'NN'), (',', ','), ('represented', 'VBN'), ('difference', 'NN'), ('conclusions', 'NNS'), ('conditions', 'NNS'), ('.', '.')]

 (S
  In/IN
  (NP clausal/NN logic/NN)
  ,/,
  represented/VBN
  (NP difference/NN conclusions/NNS conditions/NNS)
  ./.) 


>> Noun Phrases are: 
 ['clausal logic', 'difference conclusions conditions']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('clausal', 'clausal'), ('logic', 'logic'), (',', ','), ('represented', 'repres'), ('difference', 'differ'), ('conclusions', 'conclus'), ('conditions', 'condit'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('clausal', 'clausal'), ('logic', 'logic'), (',', ','), ('represented', 'repres'), ('difference', 'differ'), ('conclusions', 'conclus'), ('conditions', 'condit'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('clausal', 'clausal'), ('logic', 'logic'), (',', ','), ('represented', 'represented'), ('difference', 'difference'), ('conclusions', 'conclusion'), ('conditions', 'condition'), ('.', '.')]



============================ Sentence 144 =============================

Examples such as these suggest that the difference and  the relationship between conditions and conclusions are a  fundamental feature of the LOT, and they add further sup- port to the thesis that something like the conditional form of  clausal logic is a plausible candidate for the LOT. 


>> Tokens are: 
 ['Examples', 'suggest', 'difference', 'relationship', 'conditions', 'conclusions', 'fundamental', 'feature', 'LOT', ',', 'add', 'sup-', 'port', 'thesis', 'something', 'like', 'conditional', 'form', 'clausal', 'logic', 'plausible', 'candidate', 'LOT', '.']

>> Bigrams are: 
 [('Examples', 'suggest'), ('suggest', 'difference'), ('difference', 'relationship'), ('relationship', 'conditions'), ('conditions', 'conclusions'), ('conclusions', 'fundamental'), ('fundamental', 'feature'), ('feature', 'LOT'), ('LOT', ','), (',', 'add'), ('add', 'sup-'), ('sup-', 'port'), ('port', 'thesis'), ('thesis', 'something'), ('something', 'like'), ('like', 'conditional'), ('conditional', 'form'), ('form', 'clausal'), ('clausal', 'logic'), ('logic', 'plausible'), ('plausible', 'candidate'), ('candidate', 'LOT'), ('LOT', '.')]

>> Trigrams are: 
 [('Examples', 'suggest', 'difference'), ('suggest', 'difference', 'relationship'), ('difference', 'relationship', 'conditions'), ('relationship', 'conditions', 'conclusions'), ('conditions', 'conclusions', 'fundamental'), ('conclusions', 'fundamental', 'feature'), ('fundamental', 'feature', 'LOT'), ('feature', 'LOT', ','), ('LOT', ',', 'add'), (',', 'add', 'sup-'), ('add', 'sup-', 'port'), ('sup-', 'port', 'thesis'), ('port', 'thesis', 'something'), ('thesis', 'something', 'like'), ('something', 'like', 'conditional'), ('like', 'conditional', 'form'), ('conditional', 'form', 'clausal'), ('form', 'clausal', 'logic'), ('clausal', 'logic', 'plausible'), ('logic', 'plausible', 'candidate'), ('plausible', 'candidate', 'LOT'), ('candidate', 'LOT', '.')]

>> POS Tags are: 
 [('Examples', 'NNS'), ('suggest', 'VBP'), ('difference', 'NN'), ('relationship', 'NN'), ('conditions', 'NNS'), ('conclusions', 'NNS'), ('fundamental', 'JJ'), ('feature', 'NN'), ('LOT', 'NNP'), (',', ','), ('add', 'VB'), ('sup-', 'JJ'), ('port', 'NN'), ('thesis', 'NN'), ('something', 'NN'), ('like', 'IN'), ('conditional', 'JJ'), ('form', 'NN'), ('clausal', 'NN'), ('logic', 'RBR'), ('plausible', 'JJ'), ('candidate', 'NN'), ('LOT', 'NNP'), ('.', '.')]

 (S
  (NP Examples/NNS)
  suggest/VBP
  (NP difference/NN relationship/NN conditions/NNS conclusions/NNS)
  (NP fundamental/JJ feature/NN LOT/NNP)
  ,/,
  add/VB
  (NP sup-/JJ port/NN thesis/NN something/NN)
  like/IN
  (NP conditional/JJ form/NN clausal/NN)
  logic/RBR
  (NP plausible/JJ candidate/NN LOT/NNP)
  ./.) 


>> Noun Phrases are: 
 ['Examples', 'difference relationship conditions conclusions', 'fundamental feature LOT', 'sup- port thesis something', 'conditional form clausal', 'plausible candidate LOT']

>> Named Entities are: 
 [('ORGANIZATION', 'LOT'), ('ORGANIZATION', 'LOT')] 

>> Stemming using Porter Stemmer: 
 [('Examples', 'exampl'), ('suggest', 'suggest'), ('difference', 'differ'), ('relationship', 'relationship'), ('conditions', 'condit'), ('conclusions', 'conclus'), ('fundamental', 'fundament'), ('feature', 'featur'), ('LOT', 'lot'), (',', ','), ('add', 'add'), ('sup-', 'sup-'), ('port', 'port'), ('thesis', 'thesi'), ('something', 'someth'), ('like', 'like'), ('conditional', 'condit'), ('form', 'form'), ('clausal', 'clausal'), ('logic', 'logic'), ('plausible', 'plausibl'), ('candidate', 'candid'), ('LOT', 'lot'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Examples', 'exampl'), ('suggest', 'suggest'), ('difference', 'differ'), ('relationship', 'relationship'), ('conditions', 'condit'), ('conclusions', 'conclus'), ('fundamental', 'fundament'), ('feature', 'featur'), ('LOT', 'lot'), (',', ','), ('add', 'add'), ('sup-', 'sup-'), ('port', 'port'), ('thesis', 'thesi'), ('something', 'someth'), ('like', 'like'), ('conditional', 'condit'), ('form', 'form'), ('clausal', 'clausal'), ('logic', 'logic'), ('plausible', 'plausibl'), ('candidate', 'candid'), ('LOT', 'lot'), ('.', '.')]

>> Lemmatization: 
 [('Examples', 'Examples'), ('suggest', 'suggest'), ('difference', 'difference'), ('relationship', 'relationship'), ('conditions', 'condition'), ('conclusions', 'conclusion'), ('fundamental', 'fundamental'), ('feature', 'feature'), ('LOT', 'LOT'), (',', ','), ('add', 'add'), ('sup-', 'sup-'), ('port', 'port'), ('thesis', 'thesis'), ('something', 'something'), ('like', 'like'), ('conditional', 'conditional'), ('form', 'form'), ('clausal', 'clausal'), ('logic', 'logic'), ('plausible', 'plausible'), ('candidate', 'candidate'), ('LOT', 'LOT'), ('.', '.')]



============================ Sentence 145 =============================

3.3 Standard FOL and Clausal Logic   Various forms of logic have been used for knowledge repre- sentation in AI, and rival clausal logic as a candidate for the  LOT. 


>> Tokens are: 
 ['3.3', 'Standard', 'FOL', 'Clausal', 'Logic', 'Various', 'forms', 'logic', 'used', 'knowledge', 'repre-', 'sentation', 'AI', ',', 'rival', 'clausal', 'logic', 'candidate', 'LOT', '.']

>> Bigrams are: 
 [('3.3', 'Standard'), ('Standard', 'FOL'), ('FOL', 'Clausal'), ('Clausal', 'Logic'), ('Logic', 'Various'), ('Various', 'forms'), ('forms', 'logic'), ('logic', 'used'), ('used', 'knowledge'), ('knowledge', 'repre-'), ('repre-', 'sentation'), ('sentation', 'AI'), ('AI', ','), (',', 'rival'), ('rival', 'clausal'), ('clausal', 'logic'), ('logic', 'candidate'), ('candidate', 'LOT'), ('LOT', '.')]

>> Trigrams are: 
 [('3.3', 'Standard', 'FOL'), ('Standard', 'FOL', 'Clausal'), ('FOL', 'Clausal', 'Logic'), ('Clausal', 'Logic', 'Various'), ('Logic', 'Various', 'forms'), ('Various', 'forms', 'logic'), ('forms', 'logic', 'used'), ('logic', 'used', 'knowledge'), ('used', 'knowledge', 'repre-'), ('knowledge', 'repre-', 'sentation'), ('repre-', 'sentation', 'AI'), ('sentation', 'AI', ','), ('AI', ',', 'rival'), (',', 'rival', 'clausal'), ('rival', 'clausal', 'logic'), ('clausal', 'logic', 'candidate'), ('logic', 'candidate', 'LOT'), ('candidate', 'LOT', '.')]

>> POS Tags are: 
 [('3.3', 'CD'), ('Standard', 'NNP'), ('FOL', 'NNP'), ('Clausal', 'NNP'), ('Logic', 'NNP'), ('Various', 'NNP'), ('forms', 'NNS'), ('logic', 'VBP'), ('used', 'VBN'), ('knowledge', 'NN'), ('repre-', 'JJ'), ('sentation', 'NN'), ('AI', 'NNP'), (',', ','), ('rival', 'JJ'), ('clausal', 'NN'), ('logic', 'JJ'), ('candidate', 'NN'), ('LOT', 'NNP'), ('.', '.')]

 (S
  3.3/CD
  (NP
    Standard/NNP
    FOL/NNP
    Clausal/NNP
    Logic/NNP
    Various/NNP
    forms/NNS)
  logic/VBP
  used/VBN
  (NP knowledge/NN)
  (NP repre-/JJ sentation/NN AI/NNP)
  ,/,
  (NP rival/JJ clausal/NN)
  (NP logic/JJ candidate/NN LOT/NNP)
  ./.) 


>> Noun Phrases are: 
 ['Standard FOL Clausal Logic Various forms', 'knowledge', 'repre- sentation AI', 'rival clausal', 'logic candidate LOT']

>> Named Entities are: 
 [('PERSON', 'Standard FOL Clausal Logic Various'), ('ORGANIZATION', 'LOT')] 

>> Stemming using Porter Stemmer: 
 [('3.3', '3.3'), ('Standard', 'standard'), ('FOL', 'fol'), ('Clausal', 'clausal'), ('Logic', 'logic'), ('Various', 'variou'), ('forms', 'form'), ('logic', 'logic'), ('used', 'use'), ('knowledge', 'knowledg'), ('repre-', 'repre-'), ('sentation', 'sentat'), ('AI', 'ai'), (',', ','), ('rival', 'rival'), ('clausal', 'clausal'), ('logic', 'logic'), ('candidate', 'candid'), ('LOT', 'lot'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('3.3', '3.3'), ('Standard', 'standard'), ('FOL', 'fol'), ('Clausal', 'clausal'), ('Logic', 'logic'), ('Various', 'various'), ('forms', 'form'), ('logic', 'logic'), ('used', 'use'), ('knowledge', 'knowledg'), ('repre-', 'repre-'), ('sentation', 'sentat'), ('AI', 'ai'), (',', ','), ('rival', 'rival'), ('clausal', 'clausal'), ('logic', 'logic'), ('candidate', 'candid'), ('LOT', 'lot'), ('.', '.')]

>> Lemmatization: 
 [('3.3', '3.3'), ('Standard', 'Standard'), ('FOL', 'FOL'), ('Clausal', 'Clausal'), ('Logic', 'Logic'), ('Various', 'Various'), ('forms', 'form'), ('logic', 'logic'), ('used', 'used'), ('knowledge', 'knowledge'), ('repre-', 'repre-'), ('sentation', 'sentation'), ('AI', 'AI'), (',', ','), ('rival', 'rival'), ('clausal', 'clausal'), ('logic', 'logic'), ('candidate', 'candidate'), ('LOT', 'LOT'), ('.', '.')]



============================ Sentence 146 =============================

But compared with standard FOL, not only does  clausal logic stand out because of its simple, conditional  form, but it is just as powerful. 


>> Tokens are: 
 ['But', 'compared', 'standard', 'FOL', ',', 'clausal', 'logic', 'stand', 'simple', ',', 'conditional', 'form', ',', 'powerful', '.']

>> Bigrams are: 
 [('But', 'compared'), ('compared', 'standard'), ('standard', 'FOL'), ('FOL', ','), (',', 'clausal'), ('clausal', 'logic'), ('logic', 'stand'), ('stand', 'simple'), ('simple', ','), (',', 'conditional'), ('conditional', 'form'), ('form', ','), (',', 'powerful'), ('powerful', '.')]

>> Trigrams are: 
 [('But', 'compared', 'standard'), ('compared', 'standard', 'FOL'), ('standard', 'FOL', ','), ('FOL', ',', 'clausal'), (',', 'clausal', 'logic'), ('clausal', 'logic', 'stand'), ('logic', 'stand', 'simple'), ('stand', 'simple', ','), ('simple', ',', 'conditional'), (',', 'conditional', 'form'), ('conditional', 'form', ','), ('form', ',', 'powerful'), (',', 'powerful', '.')]

>> POS Tags are: 
 [('But', 'CC'), ('compared', 'VBN'), ('standard', 'JJ'), ('FOL', 'NNP'), (',', ','), ('clausal', 'NN'), ('logic', 'JJ'), ('stand', 'NN'), ('simple', 'NN'), (',', ','), ('conditional', 'JJ'), ('form', 'NN'), (',', ','), ('powerful', 'JJ'), ('.', '.')]

 (S
  But/CC
  compared/VBN
  (NP standard/JJ FOL/NNP)
  ,/,
  (NP clausal/NN)
  (NP logic/JJ stand/NN simple/NN)
  ,/,
  (NP conditional/JJ form/NN)
  ,/,
  powerful/JJ
  ./.) 


>> Noun Phrases are: 
 ['standard FOL', 'clausal', 'logic stand simple', 'conditional form']

>> Named Entities are: 
 [('ORGANIZATION', 'FOL')] 

>> Stemming using Porter Stemmer: 
 [('But', 'but'), ('compared', 'compar'), ('standard', 'standard'), ('FOL', 'fol'), (',', ','), ('clausal', 'clausal'), ('logic', 'logic'), ('stand', 'stand'), ('simple', 'simpl'), (',', ','), ('conditional', 'condit'), ('form', 'form'), (',', ','), ('powerful', 'power'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('But', 'but'), ('compared', 'compar'), ('standard', 'standard'), ('FOL', 'fol'), (',', ','), ('clausal', 'clausal'), ('logic', 'logic'), ('stand', 'stand'), ('simple', 'simpl'), (',', ','), ('conditional', 'condit'), ('form', 'form'), (',', ','), ('powerful', 'power'), ('.', '.')]

>> Lemmatization: 
 [('But', 'But'), ('compared', 'compared'), ('standard', 'standard'), ('FOL', 'FOL'), (',', ','), ('clausal', 'clausal'), ('logic', 'logic'), ('stand', 'stand'), ('simple', 'simple'), (',', ','), ('conditional', 'conditional'), ('form', 'form'), (',', ','), ('powerful', 'powerful'), ('.', '.')]



============================ Sentence 147 =============================

It compensates for the lack  of explicit existential quantifiers by employing Skolemiza- tion to give individuals that are supposed to exist a name,  like the names e1000 and book21 above. 


>> Tokens are: 
 ['It', 'compensates', 'lack', 'explicit', 'existential', 'quantifiers', 'employing', 'Skolemiza-', 'tion', 'give', 'individuals', 'supposed', 'exist', 'name', ',', 'like', 'names', 'e1000', 'book21', '.']

>> Bigrams are: 
 [('It', 'compensates'), ('compensates', 'lack'), ('lack', 'explicit'), ('explicit', 'existential'), ('existential', 'quantifiers'), ('quantifiers', 'employing'), ('employing', 'Skolemiza-'), ('Skolemiza-', 'tion'), ('tion', 'give'), ('give', 'individuals'), ('individuals', 'supposed'), ('supposed', 'exist'), ('exist', 'name'), ('name', ','), (',', 'like'), ('like', 'names'), ('names', 'e1000'), ('e1000', 'book21'), ('book21', '.')]

>> Trigrams are: 
 [('It', 'compensates', 'lack'), ('compensates', 'lack', 'explicit'), ('lack', 'explicit', 'existential'), ('explicit', 'existential', 'quantifiers'), ('existential', 'quantifiers', 'employing'), ('quantifiers', 'employing', 'Skolemiza-'), ('employing', 'Skolemiza-', 'tion'), ('Skolemiza-', 'tion', 'give'), ('tion', 'give', 'individuals'), ('give', 'individuals', 'supposed'), ('individuals', 'supposed', 'exist'), ('supposed', 'exist', 'name'), ('exist', 'name', ','), ('name', ',', 'like'), (',', 'like', 'names'), ('like', 'names', 'e1000'), ('names', 'e1000', 'book21'), ('e1000', 'book21', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('compensates', 'VBZ'), ('lack', 'JJ'), ('explicit', 'JJ'), ('existential', 'JJ'), ('quantifiers', 'NNS'), ('employing', 'VBG'), ('Skolemiza-', 'JJ'), ('tion', 'NN'), ('give', 'JJ'), ('individuals', 'NNS'), ('supposed', 'VBN'), ('exist', 'NN'), ('name', 'NN'), (',', ','), ('like', 'IN'), ('names', 'NNS'), ('e1000', 'VBP'), ('book21', 'NN'), ('.', '.')]

 (S
  It/PRP
  compensates/VBZ
  (NP lack/JJ explicit/JJ existential/JJ quantifiers/NNS)
  employing/VBG
  (NP Skolemiza-/JJ tion/NN)
  (NP give/JJ individuals/NNS)
  supposed/VBN
  (NP exist/NN name/NN)
  ,/,
  like/IN
  (NP names/NNS)
  e1000/VBP
  (NP book21/NN)
  ./.) 


>> Noun Phrases are: 
 ['lack explicit existential quantifiers', 'Skolemiza- tion', 'give individuals', 'exist name', 'names', 'book21']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('compensates', 'compens'), ('lack', 'lack'), ('explicit', 'explicit'), ('existential', 'existenti'), ('quantifiers', 'quantifi'), ('employing', 'employ'), ('Skolemiza-', 'skolemiza-'), ('tion', 'tion'), ('give', 'give'), ('individuals', 'individu'), ('supposed', 'suppos'), ('exist', 'exist'), ('name', 'name'), (',', ','), ('like', 'like'), ('names', 'name'), ('e1000', 'e1000'), ('book21', 'book21'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('compensates', 'compens'), ('lack', 'lack'), ('explicit', 'explicit'), ('existential', 'existenti'), ('quantifiers', 'quantifi'), ('employing', 'employ'), ('Skolemiza-', 'skolemiza-'), ('tion', 'tion'), ('give', 'give'), ('individuals', 'individu'), ('supposed', 'suppos'), ('exist', 'exist'), ('name', 'name'), (',', ','), ('like', 'like'), ('names', 'name'), ('e1000', 'e1000'), ('book21', 'book21'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('compensates', 'compensates'), ('lack', 'lack'), ('explicit', 'explicit'), ('existential', 'existential'), ('quantifiers', 'quantifier'), ('employing', 'employing'), ('Skolemiza-', 'Skolemiza-'), ('tion', 'tion'), ('give', 'give'), ('individuals', 'individual'), ('supposed', 'supposed'), ('exist', 'exist'), ('name', 'name'), (',', ','), ('like', 'like'), ('names', 'name'), ('e1000', 'e1000'), ('book21', 'book21'), ('.', '.')]



============================ Sentence 148 =============================

In another respect,  it is also more powerful than FOL, when it is used in con- junction with the minimal model semantics. 


>> Tokens are: 
 ['In', 'another', 'respect', ',', 'also', 'powerful', 'FOL', ',', 'used', 'con-', 'junction', 'minimal', 'model', 'semantics', '.']

>> Bigrams are: 
 [('In', 'another'), ('another', 'respect'), ('respect', ','), (',', 'also'), ('also', 'powerful'), ('powerful', 'FOL'), ('FOL', ','), (',', 'used'), ('used', 'con-'), ('con-', 'junction'), ('junction', 'minimal'), ('minimal', 'model'), ('model', 'semantics'), ('semantics', '.')]

>> Trigrams are: 
 [('In', 'another', 'respect'), ('another', 'respect', ','), ('respect', ',', 'also'), (',', 'also', 'powerful'), ('also', 'powerful', 'FOL'), ('powerful', 'FOL', ','), ('FOL', ',', 'used'), (',', 'used', 'con-'), ('used', 'con-', 'junction'), ('con-', 'junction', 'minimal'), ('junction', 'minimal', 'model'), ('minimal', 'model', 'semantics'), ('model', 'semantics', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('another', 'DT'), ('respect', 'NN'), (',', ','), ('also', 'RB'), ('powerful', 'JJ'), ('FOL', 'NNP'), (',', ','), ('used', 'VBD'), ('con-', 'JJ'), ('junction', 'NN'), ('minimal', 'JJ'), ('model', 'NN'), ('semantics', 'NNS'), ('.', '.')]

 (S
  In/IN
  (NP another/DT respect/NN)
  ,/,
  also/RB
  (NP powerful/JJ FOL/NNP)
  ,/,
  used/VBD
  (NP con-/JJ junction/NN)
  (NP minimal/JJ model/NN semantics/NNS)
  ./.) 


>> Noun Phrases are: 
 ['another respect', 'powerful FOL', 'con- junction', 'minimal model semantics']

>> Named Entities are: 
 [('ORGANIZATION', 'FOL')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('another', 'anoth'), ('respect', 'respect'), (',', ','), ('also', 'also'), ('powerful', 'power'), ('FOL', 'fol'), (',', ','), ('used', 'use'), ('con-', 'con-'), ('junction', 'junction'), ('minimal', 'minim'), ('model', 'model'), ('semantics', 'semant'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('another', 'anoth'), ('respect', 'respect'), (',', ','), ('also', 'also'), ('powerful', 'power'), ('FOL', 'fol'), (',', ','), ('used', 'use'), ('con-', 'con-'), ('junction', 'junction'), ('minimal', 'minim'), ('model', 'model'), ('semantics', 'semant'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('another', 'another'), ('respect', 'respect'), (',', ','), ('also', 'also'), ('powerful', 'powerful'), ('FOL', 'FOL'), (',', ','), ('used', 'used'), ('con-', 'con-'), ('junction', 'junction'), ('minimal', 'minimal'), ('model', 'model'), ('semantics', 'semantics'), ('.', '.')]



============================ Sentence 149 =============================

Reasoning is also much simpler in clausal logic than in  standard FOL, and for the most part can be reduced to just  forward and backward reasoning. 


>> Tokens are: 
 ['Reasoning', 'also', 'much', 'simpler', 'clausal', 'logic', 'standard', 'FOL', ',', 'part', 'reduced', 'forward', 'backward', 'reasoning', '.']

>> Bigrams are: 
 [('Reasoning', 'also'), ('also', 'much'), ('much', 'simpler'), ('simpler', 'clausal'), ('clausal', 'logic'), ('logic', 'standard'), ('standard', 'FOL'), ('FOL', ','), (',', 'part'), ('part', 'reduced'), ('reduced', 'forward'), ('forward', 'backward'), ('backward', 'reasoning'), ('reasoning', '.')]

>> Trigrams are: 
 [('Reasoning', 'also', 'much'), ('also', 'much', 'simpler'), ('much', 'simpler', 'clausal'), ('simpler', 'clausal', 'logic'), ('clausal', 'logic', 'standard'), ('logic', 'standard', 'FOL'), ('standard', 'FOL', ','), ('FOL', ',', 'part'), (',', 'part', 'reduced'), ('part', 'reduced', 'forward'), ('reduced', 'forward', 'backward'), ('forward', 'backward', 'reasoning'), ('backward', 'reasoning', '.')]

>> POS Tags are: 
 [('Reasoning', 'VBG'), ('also', 'RB'), ('much', 'JJ'), ('simpler', 'NN'), ('clausal', 'NN'), ('logic', 'JJ'), ('standard', 'NN'), ('FOL', 'NNP'), (',', ','), ('part', 'NN'), ('reduced', 'VBD'), ('forward', 'RB'), ('backward', 'JJ'), ('reasoning', 'NN'), ('.', '.')]

 (S
  Reasoning/VBG
  also/RB
  (NP much/JJ simpler/NN clausal/NN)
  (NP logic/JJ standard/NN FOL/NNP)
  ,/,
  (NP part/NN)
  reduced/VBD
  forward/RB
  (NP backward/JJ reasoning/NN)
  ./.) 


>> Noun Phrases are: 
 ['much simpler clausal', 'logic standard FOL', 'part', 'backward reasoning']

>> Named Entities are: 
 [('ORGANIZATION', 'FOL')] 

>> Stemming using Porter Stemmer: 
 [('Reasoning', 'reason'), ('also', 'also'), ('much', 'much'), ('simpler', 'simpler'), ('clausal', 'clausal'), ('logic', 'logic'), ('standard', 'standard'), ('FOL', 'fol'), (',', ','), ('part', 'part'), ('reduced', 'reduc'), ('forward', 'forward'), ('backward', 'backward'), ('reasoning', 'reason'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Reasoning', 'reason'), ('also', 'also'), ('much', 'much'), ('simpler', 'simpler'), ('clausal', 'clausal'), ('logic', 'logic'), ('standard', 'standard'), ('FOL', 'fol'), (',', ','), ('part', 'part'), ('reduced', 'reduc'), ('forward', 'forward'), ('backward', 'backward'), ('reasoning', 'reason'), ('.', '.')]

>> Lemmatization: 
 [('Reasoning', 'Reasoning'), ('also', 'also'), ('much', 'much'), ('simpler', 'simpler'), ('clausal', 'clausal'), ('logic', 'logic'), ('standard', 'standard'), ('FOL', 'FOL'), (',', ','), ('part', 'part'), ('reduced', 'reduced'), ('forward', 'forward'), ('backward', 'backward'), ('reasoning', 'reasoning'), ('.', '.')]



============================ Sentence 150 =============================

In conjunction with the  minimal model semantics, reasoning in clausal logic also  includes default reasoning with negation as failure. 


>> Tokens are: 
 ['In', 'conjunction', 'minimal', 'model', 'semantics', ',', 'reasoning', 'clausal', 'logic', 'also', 'includes', 'default', 'reasoning', 'negation', 'failure', '.']

>> Bigrams are: 
 [('In', 'conjunction'), ('conjunction', 'minimal'), ('minimal', 'model'), ('model', 'semantics'), ('semantics', ','), (',', 'reasoning'), ('reasoning', 'clausal'), ('clausal', 'logic'), ('logic', 'also'), ('also', 'includes'), ('includes', 'default'), ('default', 'reasoning'), ('reasoning', 'negation'), ('negation', 'failure'), ('failure', '.')]

>> Trigrams are: 
 [('In', 'conjunction', 'minimal'), ('conjunction', 'minimal', 'model'), ('minimal', 'model', 'semantics'), ('model', 'semantics', ','), ('semantics', ',', 'reasoning'), (',', 'reasoning', 'clausal'), ('reasoning', 'clausal', 'logic'), ('clausal', 'logic', 'also'), ('logic', 'also', 'includes'), ('also', 'includes', 'default'), ('includes', 'default', 'reasoning'), ('default', 'reasoning', 'negation'), ('reasoning', 'negation', 'failure'), ('negation', 'failure', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('conjunction', 'NN'), ('minimal', 'JJ'), ('model', 'NN'), ('semantics', 'NNS'), (',', ','), ('reasoning', 'VBG'), ('clausal', 'NN'), ('logic', 'NN'), ('also', 'RB'), ('includes', 'VBZ'), ('default', 'NN'), ('reasoning', 'VBG'), ('negation', 'JJ'), ('failure', 'NN'), ('.', '.')]

 (S
  In/IN
  (NP conjunction/NN)
  (NP minimal/JJ model/NN semantics/NNS)
  ,/,
  reasoning/VBG
  (NP clausal/NN logic/NN)
  also/RB
  includes/VBZ
  (NP default/NN)
  reasoning/VBG
  (NP negation/JJ failure/NN)
  ./.) 


>> Noun Phrases are: 
 ['conjunction', 'minimal model semantics', 'clausal logic', 'default', 'negation failure']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('conjunction', 'conjunct'), ('minimal', 'minim'), ('model', 'model'), ('semantics', 'semant'), (',', ','), ('reasoning', 'reason'), ('clausal', 'clausal'), ('logic', 'logic'), ('also', 'also'), ('includes', 'includ'), ('default', 'default'), ('reasoning', 'reason'), ('negation', 'negat'), ('failure', 'failur'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('conjunction', 'conjunct'), ('minimal', 'minim'), ('model', 'model'), ('semantics', 'semant'), (',', ','), ('reasoning', 'reason'), ('clausal', 'clausal'), ('logic', 'logic'), ('also', 'also'), ('includes', 'includ'), ('default', 'default'), ('reasoning', 'reason'), ('negation', 'negat'), ('failure', 'failur'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('conjunction', 'conjunction'), ('minimal', 'minimal'), ('model', 'model'), ('semantics', 'semantics'), (',', ','), ('reasoning', 'reasoning'), ('clausal', 'clausal'), ('logic', 'logic'), ('also', 'also'), ('includes', 'includes'), ('default', 'default'), ('reasoning', 'reasoning'), ('negation', 'negation'), ('failure', 'failure'), ('.', '.')]



============================ Sentence 151 =============================

Arguably, the relationship between standard FOL and  clausal form is similar to the relationship between natural  language and the LOT. 


>> Tokens are: 
 ['Arguably', ',', 'relationship', 'standard', 'FOL', 'clausal', 'form', 'similar', 'relationship', 'natural', 'language', 'LOT', '.']

>> Bigrams are: 
 [('Arguably', ','), (',', 'relationship'), ('relationship', 'standard'), ('standard', 'FOL'), ('FOL', 'clausal'), ('clausal', 'form'), ('form', 'similar'), ('similar', 'relationship'), ('relationship', 'natural'), ('natural', 'language'), ('language', 'LOT'), ('LOT', '.')]

>> Trigrams are: 
 [('Arguably', ',', 'relationship'), (',', 'relationship', 'standard'), ('relationship', 'standard', 'FOL'), ('standard', 'FOL', 'clausal'), ('FOL', 'clausal', 'form'), ('clausal', 'form', 'similar'), ('form', 'similar', 'relationship'), ('similar', 'relationship', 'natural'), ('relationship', 'natural', 'language'), ('natural', 'language', 'LOT'), ('language', 'LOT', '.')]

>> POS Tags are: 
 [('Arguably', 'RB'), (',', ','), ('relationship', 'NN'), ('standard', 'JJ'), ('FOL', 'NNP'), ('clausal', 'NN'), ('form', 'NN'), ('similar', 'JJ'), ('relationship', 'NN'), ('natural', 'JJ'), ('language', 'NN'), ('LOT', 'NNP'), ('.', '.')]

 (S
  Arguably/RB
  ,/,
  (NP relationship/NN)
  (NP standard/JJ FOL/NNP clausal/NN form/NN)
  (NP similar/JJ relationship/NN)
  (NP natural/JJ language/NN LOT/NNP)
  ./.) 


>> Noun Phrases are: 
 ['relationship', 'standard FOL clausal form', 'similar relationship', 'natural language LOT']

>> Named Entities are: 
 [('ORGANIZATION', 'FOL'), ('ORGANIZATION', 'LOT')] 

>> Stemming using Porter Stemmer: 
 [('Arguably', 'arguabl'), (',', ','), ('relationship', 'relationship'), ('standard', 'standard'), ('FOL', 'fol'), ('clausal', 'clausal'), ('form', 'form'), ('similar', 'similar'), ('relationship', 'relationship'), ('natural', 'natur'), ('language', 'languag'), ('LOT', 'lot'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Arguably', 'arguabl'), (',', ','), ('relationship', 'relationship'), ('standard', 'standard'), ('FOL', 'fol'), ('clausal', 'clausal'), ('form', 'form'), ('similar', 'similar'), ('relationship', 'relationship'), ('natural', 'natur'), ('language', 'languag'), ('LOT', 'lot'), ('.', '.')]

>> Lemmatization: 
 [('Arguably', 'Arguably'), (',', ','), ('relationship', 'relationship'), ('standard', 'standard'), ('FOL', 'FOL'), ('clausal', 'clausal'), ('form', 'form'), ('similar', 'similar'), ('relationship', 'relationship'), ('natural', 'natural'), ('language', 'language'), ('LOT', 'LOT'), ('.', '.')]



============================ Sentence 152 =============================

In both cases, inferences can be par- titioned into two kinds, performed in two stages. 


>> Tokens are: 
 ['In', 'cases', ',', 'inferences', 'par-', 'titioned', 'two', 'kinds', ',', 'performed', 'two', 'stages', '.']

>> Bigrams are: 
 [('In', 'cases'), ('cases', ','), (',', 'inferences'), ('inferences', 'par-'), ('par-', 'titioned'), ('titioned', 'two'), ('two', 'kinds'), ('kinds', ','), (',', 'performed'), ('performed', 'two'), ('two', 'stages'), ('stages', '.')]

>> Trigrams are: 
 [('In', 'cases', ','), ('cases', ',', 'inferences'), (',', 'inferences', 'par-'), ('inferences', 'par-', 'titioned'), ('par-', 'titioned', 'two'), ('titioned', 'two', 'kinds'), ('two', 'kinds', ','), ('kinds', ',', 'performed'), (',', 'performed', 'two'), ('performed', 'two', 'stages'), ('two', 'stages', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('cases', 'NNS'), (',', ','), ('inferences', 'NNS'), ('par-', 'VBP'), ('titioned', 'VBD'), ('two', 'CD'), ('kinds', 'NNS'), (',', ','), ('performed', 'VBD'), ('two', 'CD'), ('stages', 'NNS'), ('.', '.')]

 (S
  In/IN
  (NP cases/NNS)
  ,/,
  (NP inferences/NNS)
  par-/VBP
  titioned/VBD
  two/CD
  (NP kinds/NNS)
  ,/,
  performed/VBD
  two/CD
  (NP stages/NNS)
  ./.) 


>> Noun Phrases are: 
 ['cases', 'inferences', 'kinds', 'stages']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('cases', 'case'), (',', ','), ('inferences', 'infer'), ('par-', 'par-'), ('titioned', 'tition'), ('two', 'two'), ('kinds', 'kind'), (',', ','), ('performed', 'perform'), ('two', 'two'), ('stages', 'stage'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('cases', 'case'), (',', ','), ('inferences', 'infer'), ('par-', 'par-'), ('titioned', 'tition'), ('two', 'two'), ('kinds', 'kind'), (',', ','), ('performed', 'perform'), ('two', 'two'), ('stages', 'stage'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('cases', 'case'), (',', ','), ('inferences', 'inference'), ('par-', 'par-'), ('titioned', 'titioned'), ('two', 'two'), ('kinds', 'kind'), (',', ','), ('performed', 'performed'), ('two', 'two'), ('stages', 'stage'), ('.', '.')]



============================ Sentence 153 =============================

The first  kind converts sentences into canonical form, and the second  kind reasons with the resulting canonical form. 


>> Tokens are: 
 ['The', 'first', 'kind', 'converts', 'sentences', 'canonical', 'form', ',', 'second', 'kind', 'reasons', 'resulting', 'canonical', 'form', '.']

>> Bigrams are: 
 [('The', 'first'), ('first', 'kind'), ('kind', 'converts'), ('converts', 'sentences'), ('sentences', 'canonical'), ('canonical', 'form'), ('form', ','), (',', 'second'), ('second', 'kind'), ('kind', 'reasons'), ('reasons', 'resulting'), ('resulting', 'canonical'), ('canonical', 'form'), ('form', '.')]

>> Trigrams are: 
 [('The', 'first', 'kind'), ('first', 'kind', 'converts'), ('kind', 'converts', 'sentences'), ('converts', 'sentences', 'canonical'), ('sentences', 'canonical', 'form'), ('canonical', 'form', ','), ('form', ',', 'second'), (',', 'second', 'kind'), ('second', 'kind', 'reasons'), ('kind', 'reasons', 'resulting'), ('reasons', 'resulting', 'canonical'), ('resulting', 'canonical', 'form'), ('canonical', 'form', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('first', 'JJ'), ('kind', 'NN'), ('converts', 'NNS'), ('sentences', 'NNS'), ('canonical', 'JJ'), ('form', 'NN'), (',', ','), ('second', 'JJ'), ('kind', 'NN'), ('reasons', 'NNS'), ('resulting', 'VBG'), ('canonical', 'JJ'), ('form', 'NN'), ('.', '.')]

 (S
  (NP The/DT first/JJ kind/NN converts/NNS sentences/NNS)
  (NP canonical/JJ form/NN)
  ,/,
  (NP second/JJ kind/NN reasons/NNS)
  resulting/VBG
  (NP canonical/JJ form/NN)
  ./.) 


>> Noun Phrases are: 
 ['The first kind converts sentences', 'canonical form', 'second kind reasons', 'canonical form']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('first', 'first'), ('kind', 'kind'), ('converts', 'convert'), ('sentences', 'sentenc'), ('canonical', 'canon'), ('form', 'form'), (',', ','), ('second', 'second'), ('kind', 'kind'), ('reasons', 'reason'), ('resulting', 'result'), ('canonical', 'canon'), ('form', 'form'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('first', 'first'), ('kind', 'kind'), ('converts', 'convert'), ('sentences', 'sentenc'), ('canonical', 'canon'), ('form', 'form'), (',', ','), ('second', 'second'), ('kind', 'kind'), ('reasons', 'reason'), ('resulting', 'result'), ('canonical', 'canon'), ('form', 'form'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('first', 'first'), ('kind', 'kind'), ('converts', 'convert'), ('sentences', 'sentence'), ('canonical', 'canonical'), ('form', 'form'), (',', ','), ('second', 'second'), ('kind', 'kind'), ('reasons', 'reason'), ('resulting', 'resulting'), ('canonical', 'canonical'), ('form', 'form'), ('.', '.')]



============================ Sentence 154 =============================

In FOL, the first kind of inference rule (including both  Skolemization and the replacement of not(A or B) by not A  and not B)  can be viewed as converting sentences into  clausal form. 


>> Tokens are: 
 ['In', 'FOL', ',', 'first', 'kind', 'inference', 'rule', '(', 'including', 'Skolemization', 'replacement', '(', 'A', 'B', ')', 'A', 'B', ')', 'viewed', 'converting', 'sentences', 'clausal', 'form', '.']

>> Bigrams are: 
 [('In', 'FOL'), ('FOL', ','), (',', 'first'), ('first', 'kind'), ('kind', 'inference'), ('inference', 'rule'), ('rule', '('), ('(', 'including'), ('including', 'Skolemization'), ('Skolemization', 'replacement'), ('replacement', '('), ('(', 'A'), ('A', 'B'), ('B', ')'), (')', 'A'), ('A', 'B'), ('B', ')'), (')', 'viewed'), ('viewed', 'converting'), ('converting', 'sentences'), ('sentences', 'clausal'), ('clausal', 'form'), ('form', '.')]

>> Trigrams are: 
 [('In', 'FOL', ','), ('FOL', ',', 'first'), (',', 'first', 'kind'), ('first', 'kind', 'inference'), ('kind', 'inference', 'rule'), ('inference', 'rule', '('), ('rule', '(', 'including'), ('(', 'including', 'Skolemization'), ('including', 'Skolemization', 'replacement'), ('Skolemization', 'replacement', '('), ('replacement', '(', 'A'), ('(', 'A', 'B'), ('A', 'B', ')'), ('B', ')', 'A'), (')', 'A', 'B'), ('A', 'B', ')'), ('B', ')', 'viewed'), (')', 'viewed', 'converting'), ('viewed', 'converting', 'sentences'), ('converting', 'sentences', 'clausal'), ('sentences', 'clausal', 'form'), ('clausal', 'form', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('FOL', 'NNP'), (',', ','), ('first', 'RB'), ('kind', 'NN'), ('inference', 'NN'), ('rule', 'NN'), ('(', '('), ('including', 'VBG'), ('Skolemization', 'NNP'), ('replacement', 'NN'), ('(', '('), ('A', 'NNP'), ('B', 'NNP'), (')', ')'), ('A', 'NNP'), ('B', 'NNP'), (')', ')'), ('viewed', 'VBD'), ('converting', 'VBG'), ('sentences', 'NNS'), ('clausal', 'JJ'), ('form', 'NN'), ('.', '.')]

 (S
  In/IN
  (NP FOL/NNP)
  ,/,
  first/RB
  (NP kind/NN inference/NN rule/NN)
  (/(
  including/VBG
  (NP Skolemization/NNP replacement/NN)
  (/(
  (NP A/NNP B/NNP)
  )/)
  (NP A/NNP B/NNP)
  )/)
  viewed/VBD
  converting/VBG
  (NP sentences/NNS)
  (NP clausal/JJ form/NN)
  ./.) 


>> Noun Phrases are: 
 ['FOL', 'kind inference rule', 'Skolemization replacement', 'A B', 'A B', 'sentences', 'clausal form']

>> Named Entities are: 
 [('ORGANIZATION', 'FOL')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('FOL', 'fol'), (',', ','), ('first', 'first'), ('kind', 'kind'), ('inference', 'infer'), ('rule', 'rule'), ('(', '('), ('including', 'includ'), ('Skolemization', 'skolem'), ('replacement', 'replac'), ('(', '('), ('A', 'a'), ('B', 'b'), (')', ')'), ('A', 'a'), ('B', 'b'), (')', ')'), ('viewed', 'view'), ('converting', 'convert'), ('sentences', 'sentenc'), ('clausal', 'clausal'), ('form', 'form'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('FOL', 'fol'), (',', ','), ('first', 'first'), ('kind', 'kind'), ('inference', 'infer'), ('rule', 'rule'), ('(', '('), ('including', 'includ'), ('Skolemization', 'skolem'), ('replacement', 'replac'), ('(', '('), ('A', 'a'), ('B', 'b'), (')', ')'), ('A', 'a'), ('B', 'b'), (')', ')'), ('viewed', 'view'), ('converting', 'convert'), ('sentences', 'sentenc'), ('clausal', 'clausal'), ('form', 'form'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('FOL', 'FOL'), (',', ','), ('first', 'first'), ('kind', 'kind'), ('inference', 'inference'), ('rule', 'rule'), ('(', '('), ('including', 'including'), ('Skolemization', 'Skolemization'), ('replacement', 'replacement'), ('(', '('), ('A', 'A'), ('B', 'B'), (')', ')'), ('A', 'A'), ('B', 'B'), (')', ')'), ('viewed', 'viewed'), ('converting', 'converting'), ('sentences', 'sentence'), ('clausal', 'clausal'), ('form', 'form'), ('.', '.')]



============================ Sentence 155 =============================

The second kind (including the inference of  P(t) from �XP(X) ) can be viewed as reasoning with clausal  form, and is built into forward and backward reasoning. 


>> Tokens are: 
 ['The', 'second', 'kind', '(', 'including', 'inference', 'P', '(', ')', '�XP', '(', 'X', ')', ')', 'viewed', 'reasoning', 'clausal', 'form', ',', 'built', 'forward', 'backward', 'reasoning', '.']

>> Bigrams are: 
 [('The', 'second'), ('second', 'kind'), ('kind', '('), ('(', 'including'), ('including', 'inference'), ('inference', 'P'), ('P', '('), ('(', ')'), (')', '�XP'), ('�XP', '('), ('(', 'X'), ('X', ')'), (')', ')'), (')', 'viewed'), ('viewed', 'reasoning'), ('reasoning', 'clausal'), ('clausal', 'form'), ('form', ','), (',', 'built'), ('built', 'forward'), ('forward', 'backward'), ('backward', 'reasoning'), ('reasoning', '.')]

>> Trigrams are: 
 [('The', 'second', 'kind'), ('second', 'kind', '('), ('kind', '(', 'including'), ('(', 'including', 'inference'), ('including', 'inference', 'P'), ('inference', 'P', '('), ('P', '(', ')'), ('(', ')', '�XP'), (')', '�XP', '('), ('�XP', '(', 'X'), ('(', 'X', ')'), ('X', ')', ')'), (')', ')', 'viewed'), (')', 'viewed', 'reasoning'), ('viewed', 'reasoning', 'clausal'), ('reasoning', 'clausal', 'form'), ('clausal', 'form', ','), ('form', ',', 'built'), (',', 'built', 'forward'), ('built', 'forward', 'backward'), ('forward', 'backward', 'reasoning'), ('backward', 'reasoning', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('second', 'JJ'), ('kind', 'NN'), ('(', '('), ('including', 'VBG'), ('inference', 'NN'), ('P', 'NNP'), ('(', '('), (')', ')'), ('�XP', 'NN'), ('(', '('), ('X', 'NNP'), (')', ')'), (')', ')'), ('viewed', 'VBD'), ('reasoning', 'VBG'), ('clausal', 'NN'), ('form', 'NN'), (',', ','), ('built', 'VBN'), ('forward', 'RB'), ('backward', 'RB'), ('reasoning', 'VBG'), ('.', '.')]

 (S
  (NP The/DT second/JJ kind/NN)
  (/(
  including/VBG
  (NP inference/NN P/NNP)
  (/(
  )/)
  (NP �XP/NN)
  (/(
  (NP X/NNP)
  )/)
  )/)
  viewed/VBD
  reasoning/VBG
  (NP clausal/NN form/NN)
  ,/,
  built/VBN
  forward/RB
  backward/RB
  reasoning/VBG
  ./.) 


>> Noun Phrases are: 
 ['The second kind', 'inference P', '�XP', 'X', 'clausal form']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('second', 'second'), ('kind', 'kind'), ('(', '('), ('including', 'includ'), ('inference', 'infer'), ('P', 'p'), ('(', '('), (')', ')'), ('�XP', '�xp'), ('(', '('), ('X', 'x'), (')', ')'), (')', ')'), ('viewed', 'view'), ('reasoning', 'reason'), ('clausal', 'clausal'), ('form', 'form'), (',', ','), ('built', 'built'), ('forward', 'forward'), ('backward', 'backward'), ('reasoning', 'reason'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('second', 'second'), ('kind', 'kind'), ('(', '('), ('including', 'includ'), ('inference', 'infer'), ('P', 'p'), ('(', '('), (')', ')'), ('�XP', '�xp'), ('(', '('), ('X', 'x'), (')', ')'), (')', ')'), ('viewed', 'view'), ('reasoning', 'reason'), ('clausal', 'clausal'), ('form', 'form'), (',', ','), ('built', 'built'), ('forward', 'forward'), ('backward', 'backward'), ('reasoning', 'reason'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('second', 'second'), ('kind', 'kind'), ('(', '('), ('including', 'including'), ('inference', 'inference'), ('P', 'P'), ('(', '('), (')', ')'), ('�XP', '�XP'), ('(', '('), ('X', 'X'), (')', ')'), (')', ')'), ('viewed', 'viewed'), ('reasoning', 'reasoning'), ('clausal', 'clausal'), ('form', 'form'), (',', ','), ('built', 'built'), ('forward', 'forward'), ('backward', 'backward'), ('reasoning', 'reasoning'), ('.', '.')]



============================ Sentence 156 =============================

As we have seen, in natural language, there are many  ways of expressing the same information. 


>> Tokens are: 
 ['As', 'seen', ',', 'natural', 'language', ',', 'many', 'ways', 'expressing', 'information', '.']

>> Bigrams are: 
 [('As', 'seen'), ('seen', ','), (',', 'natural'), ('natural', 'language'), ('language', ','), (',', 'many'), ('many', 'ways'), ('ways', 'expressing'), ('expressing', 'information'), ('information', '.')]

>> Trigrams are: 
 [('As', 'seen', ','), ('seen', ',', 'natural'), (',', 'natural', 'language'), ('natural', 'language', ','), ('language', ',', 'many'), (',', 'many', 'ways'), ('many', 'ways', 'expressing'), ('ways', 'expressing', 'information'), ('expressing', 'information', '.')]

>> POS Tags are: 
 [('As', 'IN'), ('seen', 'VBN'), (',', ','), ('natural', 'JJ'), ('language', 'NN'), (',', ','), ('many', 'JJ'), ('ways', 'NNS'), ('expressing', 'VBG'), ('information', 'NN'), ('.', '.')]

 (S
  As/IN
  seen/VBN
  ,/,
  (NP natural/JJ language/NN)
  ,/,
  (NP many/JJ ways/NNS)
  expressing/VBG
  (NP information/NN)
  ./.) 


>> Noun Phrases are: 
 ['natural language', 'many ways', 'information']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('As', 'as'), ('seen', 'seen'), (',', ','), ('natural', 'natur'), ('language', 'languag'), (',', ','), ('many', 'mani'), ('ways', 'way'), ('expressing', 'express'), ('information', 'inform'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('As', 'as'), ('seen', 'seen'), (',', ','), ('natural', 'natur'), ('language', 'languag'), (',', ','), ('many', 'mani'), ('ways', 'way'), ('expressing', 'express'), ('information', 'inform'), ('.', '.')]

>> Lemmatization: 
 [('As', 'As'), ('seen', 'seen'), (',', ','), ('natural', 'natural'), ('language', 'language'), (',', ','), ('many', 'many'), ('ways', 'way'), ('expressing', 'expressing'), ('information', 'information'), ('.', '.')]



============================ Sentence 157 =============================

Similarly in FOL,  there are infinitely many, arbitrarily complex ways of ex- pressing information equivalently. 


>> Tokens are: 
 ['Similarly', 'FOL', ',', 'infinitely', 'many', ',', 'arbitrarily', 'complex', 'ways', 'ex-', 'pressing', 'information', 'equivalently', '.']

>> Bigrams are: 
 [('Similarly', 'FOL'), ('FOL', ','), (',', 'infinitely'), ('infinitely', 'many'), ('many', ','), (',', 'arbitrarily'), ('arbitrarily', 'complex'), ('complex', 'ways'), ('ways', 'ex-'), ('ex-', 'pressing'), ('pressing', 'information'), ('information', 'equivalently'), ('equivalently', '.')]

>> Trigrams are: 
 [('Similarly', 'FOL', ','), ('FOL', ',', 'infinitely'), (',', 'infinitely', 'many'), ('infinitely', 'many', ','), ('many', ',', 'arbitrarily'), (',', 'arbitrarily', 'complex'), ('arbitrarily', 'complex', 'ways'), ('complex', 'ways', 'ex-'), ('ways', 'ex-', 'pressing'), ('ex-', 'pressing', 'information'), ('pressing', 'information', 'equivalently'), ('information', 'equivalently', '.')]

>> POS Tags are: 
 [('Similarly', 'RB'), ('FOL', 'NNP'), (',', ','), ('infinitely', 'RB'), ('many', 'JJ'), (',', ','), ('arbitrarily', 'RB'), ('complex', 'JJ'), ('ways', 'NNS'), ('ex-', 'JJ'), ('pressing', 'VBG'), ('information', 'NN'), ('equivalently', 'RB'), ('.', '.')]

 (S
  Similarly/RB
  (NP FOL/NNP)
  ,/,
  infinitely/RB
  many/JJ
  ,/,
  arbitrarily/RB
  (NP complex/JJ ways/NNS)
  ex-/JJ
  pressing/VBG
  (NP information/NN)
  equivalently/RB
  ./.) 


>> Noun Phrases are: 
 ['FOL', 'complex ways', 'information']

>> Named Entities are: 
 [('ORGANIZATION', 'FOL')] 

>> Stemming using Porter Stemmer: 
 [('Similarly', 'similarli'), ('FOL', 'fol'), (',', ','), ('infinitely', 'infinit'), ('many', 'mani'), (',', ','), ('arbitrarily', 'arbitrarili'), ('complex', 'complex'), ('ways', 'way'), ('ex-', 'ex-'), ('pressing', 'press'), ('information', 'inform'), ('equivalently', 'equival'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Similarly', 'similar'), ('FOL', 'fol'), (',', ','), ('infinitely', 'infinit'), ('many', 'mani'), (',', ','), ('arbitrarily', 'arbitrarili'), ('complex', 'complex'), ('ways', 'way'), ('ex-', 'ex-'), ('pressing', 'press'), ('information', 'inform'), ('equivalently', 'equival'), ('.', '.')]

>> Lemmatization: 
 [('Similarly', 'Similarly'), ('FOL', 'FOL'), (',', ','), ('infinitely', 'infinitely'), ('many', 'many'), (',', ','), ('arbitrarily', 'arbitrarily'), ('complex', 'complex'), ('ways', 'way'), ('ex-', 'ex-'), ('pressing', 'pressing'), ('information', 'information'), ('equivalently', 'equivalently'), ('.', '.')]



============================ Sentence 158 =============================

For example, to express   14    that all birds have feathers and john is a bird, we can write,  not only �X(bird(X)�feathers(X)) � bird(john), but also:     ¬(�X((¬feathers(X)�¬bird(john))�(bird(X)�¬bird(john)))). 


>> Tokens are: 
 ['For', 'example', ',', 'express', '14', 'birds', 'feathers', 'john', 'bird', ',', 'write', ',', '�X', '(', 'bird', '(', 'X', ')', '�feathers', '(', 'X', ')', ')', '�', 'bird', '(', 'john', ')', ',', 'also', ':', '¬', '(', '�X', '(', '(', '¬feathers', '(', 'X', ')', '�¬bird', '(', 'john', ')', ')', '�', '(', 'bird', '(', 'X', ')', '�¬bird', '(', 'john', ')', ')', ')', ')', '.']

>> Bigrams are: 
 [('For', 'example'), ('example', ','), (',', 'express'), ('express', '14'), ('14', 'birds'), ('birds', 'feathers'), ('feathers', 'john'), ('john', 'bird'), ('bird', ','), (',', 'write'), ('write', ','), (',', '�X'), ('�X', '('), ('(', 'bird'), ('bird', '('), ('(', 'X'), ('X', ')'), (')', '�feathers'), ('�feathers', '('), ('(', 'X'), ('X', ')'), (')', ')'), (')', '�'), ('�', 'bird'), ('bird', '('), ('(', 'john'), ('john', ')'), (')', ','), (',', 'also'), ('also', ':'), (':', '¬'), ('¬', '('), ('(', '�X'), ('�X', '('), ('(', '('), ('(', '¬feathers'), ('¬feathers', '('), ('(', 'X'), ('X', ')'), (')', '�¬bird'), ('�¬bird', '('), ('(', 'john'), ('john', ')'), (')', ')'), (')', '�'), ('�', '('), ('(', 'bird'), ('bird', '('), ('(', 'X'), ('X', ')'), (')', '�¬bird'), ('�¬bird', '('), ('(', 'john'), ('john', ')'), (')', ')'), (')', ')'), (')', ')'), (')', '.')]

>> Trigrams are: 
 [('For', 'example', ','), ('example', ',', 'express'), (',', 'express', '14'), ('express', '14', 'birds'), ('14', 'birds', 'feathers'), ('birds', 'feathers', 'john'), ('feathers', 'john', 'bird'), ('john', 'bird', ','), ('bird', ',', 'write'), (',', 'write', ','), ('write', ',', '�X'), (',', '�X', '('), ('�X', '(', 'bird'), ('(', 'bird', '('), ('bird', '(', 'X'), ('(', 'X', ')'), ('X', ')', '�feathers'), (')', '�feathers', '('), ('�feathers', '(', 'X'), ('(', 'X', ')'), ('X', ')', ')'), (')', ')', '�'), (')', '�', 'bird'), ('�', 'bird', '('), ('bird', '(', 'john'), ('(', 'john', ')'), ('john', ')', ','), (')', ',', 'also'), (',', 'also', ':'), ('also', ':', '¬'), (':', '¬', '('), ('¬', '(', '�X'), ('(', '�X', '('), ('�X', '(', '('), ('(', '(', '¬feathers'), ('(', '¬feathers', '('), ('¬feathers', '(', 'X'), ('(', 'X', ')'), ('X', ')', '�¬bird'), (')', '�¬bird', '('), ('�¬bird', '(', 'john'), ('(', 'john', ')'), ('john', ')', ')'), (')', ')', '�'), (')', '�', '('), ('�', '(', 'bird'), ('(', 'bird', '('), ('bird', '(', 'X'), ('(', 'X', ')'), ('X', ')', '�¬bird'), (')', '�¬bird', '('), ('�¬bird', '(', 'john'), ('(', 'john', ')'), ('john', ')', ')'), (')', ')', ')'), (')', ')', ')'), (')', ')', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('example', 'NN'), (',', ','), ('express', 'RB'), ('14', 'CD'), ('birds', 'NNS'), ('feathers', 'NNS'), ('john', 'VBP'), ('bird', 'NN'), (',', ','), ('write', 'NN'), (',', ','), ('�X', 'NNP'), ('(', '('), ('bird', 'NN'), ('(', '('), ('X', 'NNP'), (')', ')'), ('�feathers', 'NNS'), ('(', '('), ('X', 'NNP'), (')', ')'), (')', ')'), ('�', 'FW'), ('bird', 'NN'), ('(', '('), ('john', 'NN'), (')', ')'), (',', ','), ('also', 'RB'), (':', ':'), ('¬', 'NN'), ('(', '('), ('�X', 'NNP'), ('(', '('), ('(', '('), ('¬feathers', 'NNS'), ('(', '('), ('X', 'NNP'), (')', ')'), ('�¬bird', 'NN'), ('(', '('), ('john', 'NN'), (')', ')'), (')', ')'), ('�', 'FW'), ('(', '('), ('bird', 'NN'), ('(', '('), ('X', 'NNP'), (')', ')'), ('�¬bird', 'NN'), ('(', '('), ('john', 'NN'), (')', ')'), (')', ')'), (')', ')'), (')', ')'), ('.', '.')]

 (S
  For/IN
  (NP example/NN)
  ,/,
  express/RB
  14/CD
  (NP birds/NNS feathers/NNS)
  john/VBP
  (NP bird/NN)
  ,/,
  (NP write/NN)
  ,/,
  (NP �X/NNP)
  (/(
  (NP bird/NN)
  (/(
  (NP X/NNP)
  )/)
  (NP �feathers/NNS)
  (/(
  (NP X/NNP)
  )/)
  )/)
  �/FW
  (NP bird/NN)
  (/(
  (NP john/NN)
  )/)
  ,/,
  also/RB
  :/:
  (NP ¬/NN)
  (/(
  (NP �X/NNP)
  (/(
  (/(
  (NP ¬feathers/NNS)
  (/(
  (NP X/NNP)
  )/)
  (NP �¬bird/NN)
  (/(
  (NP john/NN)
  )/)
  )/)
  �/FW
  (/(
  (NP bird/NN)
  (/(
  (NP X/NNP)
  )/)
  (NP �¬bird/NN)
  (/(
  (NP john/NN)
  )/)
  )/)
  )/)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['example', 'birds feathers', 'bird', 'write', '�X', 'bird', 'X', '�feathers', 'X', 'bird', 'john', '¬', '�X', '¬feathers', 'X', '�¬bird', 'john', 'bird', 'X', '�¬bird', 'john']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('express', 'express'), ('14', '14'), ('birds', 'bird'), ('feathers', 'feather'), ('john', 'john'), ('bird', 'bird'), (',', ','), ('write', 'write'), (',', ','), ('�X', '�x'), ('(', '('), ('bird', 'bird'), ('(', '('), ('X', 'x'), (')', ')'), ('�feathers', '�feather'), ('(', '('), ('X', 'x'), (')', ')'), (')', ')'), ('�', '�'), ('bird', 'bird'), ('(', '('), ('john', 'john'), (')', ')'), (',', ','), ('also', 'also'), (':', ':'), ('¬', '¬'), ('(', '('), ('�X', '�x'), ('(', '('), ('(', '('), ('¬feathers', '¬feather'), ('(', '('), ('X', 'x'), (')', ')'), ('�¬bird', '�¬bird'), ('(', '('), ('john', 'john'), (')', ')'), (')', ')'), ('�', '�'), ('(', '('), ('bird', 'bird'), ('(', '('), ('X', 'x'), (')', ')'), ('�¬bird', '�¬bird'), ('(', '('), ('john', 'john'), (')', ')'), (')', ')'), (')', ')'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('express', 'express'), ('14', '14'), ('birds', 'bird'), ('feathers', 'feather'), ('john', 'john'), ('bird', 'bird'), (',', ','), ('write', 'write'), (',', ','), ('�X', '�x'), ('(', '('), ('bird', 'bird'), ('(', '('), ('X', 'x'), (')', ')'), ('�feathers', '�feather'), ('(', '('), ('X', 'x'), (')', ')'), (')', ')'), ('�', '�'), ('bird', 'bird'), ('(', '('), ('john', 'john'), (')', ')'), (',', ','), ('also', 'also'), (':', ':'), ('¬', '¬'), ('(', '('), ('�X', '�x'), ('(', '('), ('(', '('), ('¬feathers', '¬feather'), ('(', '('), ('X', 'x'), (')', ')'), ('�¬bird', '�¬bird'), ('(', '('), ('john', 'john'), (')', ')'), (')', ')'), ('�', '�'), ('(', '('), ('bird', 'bird'), ('(', '('), ('X', 'x'), (')', ')'), ('�¬bird', '�¬bird'), ('(', '('), ('john', 'john'), (')', ')'), (')', ')'), (')', ')'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('example', 'example'), (',', ','), ('express', 'express'), ('14', '14'), ('birds', 'bird'), ('feathers', 'feather'), ('john', 'john'), ('bird', 'bird'), (',', ','), ('write', 'write'), (',', ','), ('�X', '�X'), ('(', '('), ('bird', 'bird'), ('(', '('), ('X', 'X'), (')', ')'), ('�feathers', '�feathers'), ('(', '('), ('X', 'X'), (')', ')'), (')', ')'), ('�', '�'), ('bird', 'bird'), ('(', '('), ('john', 'john'), (')', ')'), (',', ','), ('also', 'also'), (':', ':'), ('¬', '¬'), ('(', '('), ('�X', '�X'), ('(', '('), ('(', '('), ('¬feathers', '¬feathers'), ('(', '('), ('X', 'X'), (')', ')'), ('�¬bird', '�¬bird'), ('(', '('), ('john', 'john'), (')', ')'), (')', ')'), ('�', '�'), ('(', '('), ('bird', 'bird'), ('(', '('), ('X', 'X'), (')', ')'), ('�¬bird', '�¬bird'), ('(', '('), ('john', 'john'), (')', ')'), (')', ')'), (')', ')'), (')', ')'), ('.', '.')]



============================ Sentence 159 =============================

In clausal form there is only one way of expressing the same  information canonically, in this example in the form of two  clauses: feathers(X) if bird(X) and bird(john). 


>> Tokens are: 
 ['In', 'clausal', 'form', 'one', 'way', 'expressing', 'information', 'canonically', ',', 'example', 'form', 'two', 'clauses', ':', 'feathers', '(', 'X', ')', 'bird', '(', 'X', ')', 'bird', '(', 'john', ')', '.']

>> Bigrams are: 
 [('In', 'clausal'), ('clausal', 'form'), ('form', 'one'), ('one', 'way'), ('way', 'expressing'), ('expressing', 'information'), ('information', 'canonically'), ('canonically', ','), (',', 'example'), ('example', 'form'), ('form', 'two'), ('two', 'clauses'), ('clauses', ':'), (':', 'feathers'), ('feathers', '('), ('(', 'X'), ('X', ')'), (')', 'bird'), ('bird', '('), ('(', 'X'), ('X', ')'), (')', 'bird'), ('bird', '('), ('(', 'john'), ('john', ')'), (')', '.')]

>> Trigrams are: 
 [('In', 'clausal', 'form'), ('clausal', 'form', 'one'), ('form', 'one', 'way'), ('one', 'way', 'expressing'), ('way', 'expressing', 'information'), ('expressing', 'information', 'canonically'), ('information', 'canonically', ','), ('canonically', ',', 'example'), (',', 'example', 'form'), ('example', 'form', 'two'), ('form', 'two', 'clauses'), ('two', 'clauses', ':'), ('clauses', ':', 'feathers'), (':', 'feathers', '('), ('feathers', '(', 'X'), ('(', 'X', ')'), ('X', ')', 'bird'), (')', 'bird', '('), ('bird', '(', 'X'), ('(', 'X', ')'), ('X', ')', 'bird'), (')', 'bird', '('), ('bird', '(', 'john'), ('(', 'john', ')'), ('john', ')', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('clausal', 'JJ'), ('form', 'NN'), ('one', 'CD'), ('way', 'NN'), ('expressing', 'VBG'), ('information', 'NN'), ('canonically', 'RB'), (',', ','), ('example', 'NN'), ('form', 'NN'), ('two', 'CD'), ('clauses', 'NNS'), (':', ':'), ('feathers', 'NNS'), ('(', '('), ('X', 'NNP'), (')', ')'), ('bird', 'NN'), ('(', '('), ('X', 'NNP'), (')', ')'), ('bird', 'NN'), ('(', '('), ('john', 'NN'), (')', ')'), ('.', '.')]

 (S
  In/IN
  (NP clausal/JJ form/NN)
  one/CD
  (NP way/NN)
  expressing/VBG
  (NP information/NN)
  canonically/RB
  ,/,
  (NP example/NN form/NN)
  two/CD
  (NP clauses/NNS)
  :/:
  (NP feathers/NNS)
  (/(
  (NP X/NNP)
  )/)
  (NP bird/NN)
  (/(
  (NP X/NNP)
  )/)
  (NP bird/NN)
  (/(
  (NP john/NN)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['clausal form', 'way', 'information', 'example form', 'clauses', 'feathers', 'X', 'bird', 'X', 'bird', 'john']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('clausal', 'clausal'), ('form', 'form'), ('one', 'one'), ('way', 'way'), ('expressing', 'express'), ('information', 'inform'), ('canonically', 'canon'), (',', ','), ('example', 'exampl'), ('form', 'form'), ('two', 'two'), ('clauses', 'claus'), (':', ':'), ('feathers', 'feather'), ('(', '('), ('X', 'x'), (')', ')'), ('bird', 'bird'), ('(', '('), ('X', 'x'), (')', ')'), ('bird', 'bird'), ('(', '('), ('john', 'john'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('clausal', 'clausal'), ('form', 'form'), ('one', 'one'), ('way', 'way'), ('expressing', 'express'), ('information', 'inform'), ('canonically', 'canon'), (',', ','), ('example', 'exampl'), ('form', 'form'), ('two', 'two'), ('clauses', 'claus'), (':', ':'), ('feathers', 'feather'), ('(', '('), ('X', 'x'), (')', ')'), ('bird', 'bird'), ('(', '('), ('X', 'x'), (')', ')'), ('bird', 'bird'), ('(', '('), ('john', 'john'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('clausal', 'clausal'), ('form', 'form'), ('one', 'one'), ('way', 'way'), ('expressing', 'expressing'), ('information', 'information'), ('canonically', 'canonically'), (',', ','), ('example', 'example'), ('form', 'form'), ('two', 'two'), ('clauses', 'clause'), (':', ':'), ('feathers', 'feather'), ('(', '('), ('X', 'X'), (')', ')'), ('bird', 'bird'), ('(', '('), ('X', 'X'), (')', ')'), ('bird', 'bird'), ('(', '('), ('john', 'john'), (')', ')'), ('.', '.')]



============================ Sentence 160 =============================

Thus clausal logic stands in relation to standard FOL, as  the LOT stands in relation to natural language. 


>> Tokens are: 
 ['Thus', 'clausal', 'logic', 'stands', 'relation', 'standard', 'FOL', ',', 'LOT', 'stands', 'relation', 'natural', 'language', '.']

>> Bigrams are: 
 [('Thus', 'clausal'), ('clausal', 'logic'), ('logic', 'stands'), ('stands', 'relation'), ('relation', 'standard'), ('standard', 'FOL'), ('FOL', ','), (',', 'LOT'), ('LOT', 'stands'), ('stands', 'relation'), ('relation', 'natural'), ('natural', 'language'), ('language', '.')]

>> Trigrams are: 
 [('Thus', 'clausal', 'logic'), ('clausal', 'logic', 'stands'), ('logic', 'stands', 'relation'), ('stands', 'relation', 'standard'), ('relation', 'standard', 'FOL'), ('standard', 'FOL', ','), ('FOL', ',', 'LOT'), (',', 'LOT', 'stands'), ('LOT', 'stands', 'relation'), ('stands', 'relation', 'natural'), ('relation', 'natural', 'language'), ('natural', 'language', '.')]

>> POS Tags are: 
 [('Thus', 'RB'), ('clausal', 'NN'), ('logic', 'JJ'), ('stands', 'VBZ'), ('relation', 'JJ'), ('standard', 'NN'), ('FOL', 'NNP'), (',', ','), ('LOT', 'NNP'), ('stands', 'VBZ'), ('relation', 'JJ'), ('natural', 'JJ'), ('language', 'NN'), ('.', '.')]

 (S
  Thus/RB
  (NP clausal/NN)
  logic/JJ
  stands/VBZ
  (NP relation/JJ standard/NN FOL/NNP)
  ,/,
  (NP LOT/NNP)
  stands/VBZ
  (NP relation/JJ natural/JJ language/NN)
  ./.) 


>> Noun Phrases are: 
 ['clausal', 'relation standard FOL', 'LOT', 'relation natural language']

>> Named Entities are: 
 [('ORGANIZATION', 'FOL'), ('ORGANIZATION', 'LOT')] 

>> Stemming using Porter Stemmer: 
 [('Thus', 'thu'), ('clausal', 'clausal'), ('logic', 'logic'), ('stands', 'stand'), ('relation', 'relat'), ('standard', 'standard'), ('FOL', 'fol'), (',', ','), ('LOT', 'lot'), ('stands', 'stand'), ('relation', 'relat'), ('natural', 'natur'), ('language', 'languag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Thus', 'thus'), ('clausal', 'clausal'), ('logic', 'logic'), ('stands', 'stand'), ('relation', 'relat'), ('standard', 'standard'), ('FOL', 'fol'), (',', ','), ('LOT', 'lot'), ('stands', 'stand'), ('relation', 'relat'), ('natural', 'natur'), ('language', 'languag'), ('.', '.')]

>> Lemmatization: 
 [('Thus', 'Thus'), ('clausal', 'clausal'), ('logic', 'logic'), ('stands', 'stand'), ('relation', 'relation'), ('standard', 'standard'), ('FOL', 'FOL'), (',', ','), ('LOT', 'LOT'), ('stands', 'stand'), ('relation', 'relation'), ('natural', 'natural'), ('language', 'language'), ('.', '.')]



============================ Sentence 161 =============================

In the same  way that the LOT can be regarded as a simplified and ca- nonical form of unambiguous sentences in natural language,  clausal logic is a simplified, canonical form of FOL. 


>> Tokens are: 
 ['In', 'way', 'LOT', 'regarded', 'simplified', 'ca-', 'nonical', 'form', 'unambiguous', 'sentences', 'natural', 'language', ',', 'clausal', 'logic', 'simplified', ',', 'canonical', 'form', 'FOL', '.']

>> Bigrams are: 
 [('In', 'way'), ('way', 'LOT'), ('LOT', 'regarded'), ('regarded', 'simplified'), ('simplified', 'ca-'), ('ca-', 'nonical'), ('nonical', 'form'), ('form', 'unambiguous'), ('unambiguous', 'sentences'), ('sentences', 'natural'), ('natural', 'language'), ('language', ','), (',', 'clausal'), ('clausal', 'logic'), ('logic', 'simplified'), ('simplified', ','), (',', 'canonical'), ('canonical', 'form'), ('form', 'FOL'), ('FOL', '.')]

>> Trigrams are: 
 [('In', 'way', 'LOT'), ('way', 'LOT', 'regarded'), ('LOT', 'regarded', 'simplified'), ('regarded', 'simplified', 'ca-'), ('simplified', 'ca-', 'nonical'), ('ca-', 'nonical', 'form'), ('nonical', 'form', 'unambiguous'), ('form', 'unambiguous', 'sentences'), ('unambiguous', 'sentences', 'natural'), ('sentences', 'natural', 'language'), ('natural', 'language', ','), ('language', ',', 'clausal'), (',', 'clausal', 'logic'), ('clausal', 'logic', 'simplified'), ('logic', 'simplified', ','), ('simplified', ',', 'canonical'), (',', 'canonical', 'form'), ('canonical', 'form', 'FOL'), ('form', 'FOL', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('way', 'NN'), ('LOT', 'NNP'), ('regarded', 'VBD'), ('simplified', 'VBN'), ('ca-', 'JJ'), ('nonical', 'JJ'), ('form', 'NN'), ('unambiguous', 'JJ'), ('sentences', 'NNS'), ('natural', 'JJ'), ('language', 'NN'), (',', ','), ('clausal', 'NN'), ('logic', 'NN'), ('simplified', 'VBD'), (',', ','), ('canonical', 'JJ'), ('form', 'NN'), ('FOL', 'NNP'), ('.', '.')]

 (S
  In/IN
  (NP way/NN LOT/NNP)
  regarded/VBD
  simplified/VBN
  (NP ca-/JJ nonical/JJ form/NN)
  (NP unambiguous/JJ sentences/NNS)
  (NP natural/JJ language/NN)
  ,/,
  (NP clausal/NN logic/NN)
  simplified/VBD
  ,/,
  (NP canonical/JJ form/NN FOL/NNP)
  ./.) 


>> Noun Phrases are: 
 ['way LOT', 'ca- nonical form', 'unambiguous sentences', 'natural language', 'clausal logic', 'canonical form FOL']

>> Named Entities are: 
 [('ORGANIZATION', 'LOT')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('way', 'way'), ('LOT', 'lot'), ('regarded', 'regard'), ('simplified', 'simplifi'), ('ca-', 'ca-'), ('nonical', 'nonic'), ('form', 'form'), ('unambiguous', 'unambigu'), ('sentences', 'sentenc'), ('natural', 'natur'), ('language', 'languag'), (',', ','), ('clausal', 'clausal'), ('logic', 'logic'), ('simplified', 'simplifi'), (',', ','), ('canonical', 'canon'), ('form', 'form'), ('FOL', 'fol'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('way', 'way'), ('LOT', 'lot'), ('regarded', 'regard'), ('simplified', 'simplifi'), ('ca-', 'ca-'), ('nonical', 'nonic'), ('form', 'form'), ('unambiguous', 'unambigu'), ('sentences', 'sentenc'), ('natural', 'natur'), ('language', 'languag'), (',', ','), ('clausal', 'clausal'), ('logic', 'logic'), ('simplified', 'simplifi'), (',', ','), ('canonical', 'canon'), ('form', 'form'), ('FOL', 'fol'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('way', 'way'), ('LOT', 'LOT'), ('regarded', 'regarded'), ('simplified', 'simplified'), ('ca-', 'ca-'), ('nonical', 'nonical'), ('form', 'form'), ('unambiguous', 'unambiguous'), ('sentences', 'sentence'), ('natural', 'natural'), ('language', 'language'), (',', ','), ('clausal', 'clausal'), ('logic', 'logic'), ('simplified', 'simplified'), (',', ','), ('canonical', 'canonical'), ('form', 'form'), ('FOL', 'FOL'), ('.', '.')]



============================ Sentence 162 =============================

This  analogy further supports the argument for viewing clausal  logic as a formalisation of the LOT. 


>> Tokens are: 
 ['This', 'analogy', 'supports', 'argument', 'viewing', 'clausal', 'logic', 'formalisation', 'LOT', '.']

>> Bigrams are: 
 [('This', 'analogy'), ('analogy', 'supports'), ('supports', 'argument'), ('argument', 'viewing'), ('viewing', 'clausal'), ('clausal', 'logic'), ('logic', 'formalisation'), ('formalisation', 'LOT'), ('LOT', '.')]

>> Trigrams are: 
 [('This', 'analogy', 'supports'), ('analogy', 'supports', 'argument'), ('supports', 'argument', 'viewing'), ('argument', 'viewing', 'clausal'), ('viewing', 'clausal', 'logic'), ('clausal', 'logic', 'formalisation'), ('logic', 'formalisation', 'LOT'), ('formalisation', 'LOT', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('analogy', 'NN'), ('supports', 'VBZ'), ('argument', 'NN'), ('viewing', 'VBG'), ('clausal', 'NN'), ('logic', 'JJ'), ('formalisation', 'NN'), ('LOT', 'NNP'), ('.', '.')]

 (S
  (NP This/DT analogy/NN)
  supports/VBZ
  (NP argument/NN)
  viewing/VBG
  (NP clausal/NN)
  (NP logic/JJ formalisation/NN LOT/NNP)
  ./.) 


>> Noun Phrases are: 
 ['This analogy', 'argument', 'clausal', 'logic formalisation LOT']

>> Named Entities are: 
 [('ORGANIZATION', 'LOT')] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('analogy', 'analog'), ('supports', 'support'), ('argument', 'argument'), ('viewing', 'view'), ('clausal', 'clausal'), ('logic', 'logic'), ('formalisation', 'formalis'), ('LOT', 'lot'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('analogy', 'analog'), ('supports', 'support'), ('argument', 'argument'), ('viewing', 'view'), ('clausal', 'clausal'), ('logic', 'logic'), ('formalisation', 'formalis'), ('LOT', 'lot'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('analogy', 'analogy'), ('supports', 'support'), ('argument', 'argument'), ('viewing', 'viewing'), ('clausal', 'clausal'), ('logic', 'logic'), ('formalisation', 'formalisation'), ('LOT', 'LOT'), ('.', '.')]



============================ Sentence 163 =============================

Certainly in the case of artificial agents in AI, clausal  logic has proved to be a practical knowledge representation  language, independent from any language an agent might  use for communicating with other agents. 


>> Tokens are: 
 ['Certainly', 'case', 'artificial', 'agents', 'AI', ',', 'clausal', 'logic', 'proved', 'practical', 'knowledge', 'representation', 'language', ',', 'independent', 'language', 'agent', 'might', 'use', 'communicating', 'agents', '.']

>> Bigrams are: 
 [('Certainly', 'case'), ('case', 'artificial'), ('artificial', 'agents'), ('agents', 'AI'), ('AI', ','), (',', 'clausal'), ('clausal', 'logic'), ('logic', 'proved'), ('proved', 'practical'), ('practical', 'knowledge'), ('knowledge', 'representation'), ('representation', 'language'), ('language', ','), (',', 'independent'), ('independent', 'language'), ('language', 'agent'), ('agent', 'might'), ('might', 'use'), ('use', 'communicating'), ('communicating', 'agents'), ('agents', '.')]

>> Trigrams are: 
 [('Certainly', 'case', 'artificial'), ('case', 'artificial', 'agents'), ('artificial', 'agents', 'AI'), ('agents', 'AI', ','), ('AI', ',', 'clausal'), (',', 'clausal', 'logic'), ('clausal', 'logic', 'proved'), ('logic', 'proved', 'practical'), ('proved', 'practical', 'knowledge'), ('practical', 'knowledge', 'representation'), ('knowledge', 'representation', 'language'), ('representation', 'language', ','), ('language', ',', 'independent'), (',', 'independent', 'language'), ('independent', 'language', 'agent'), ('language', 'agent', 'might'), ('agent', 'might', 'use'), ('might', 'use', 'communicating'), ('use', 'communicating', 'agents'), ('communicating', 'agents', '.')]

>> POS Tags are: 
 [('Certainly', 'RB'), ('case', 'NN'), ('artificial', 'JJ'), ('agents', 'NNS'), ('AI', 'NNP'), (',', ','), ('clausal', 'NN'), ('logic', 'NN'), ('proved', 'VBD'), ('practical', 'JJ'), ('knowledge', 'NN'), ('representation', 'NN'), ('language', 'NN'), (',', ','), ('independent', 'JJ'), ('language', 'NN'), ('agent', 'NN'), ('might', 'MD'), ('use', 'VB'), ('communicating', 'VBG'), ('agents', 'NNS'), ('.', '.')]

 (S
  Certainly/RB
  (NP case/NN)
  (NP artificial/JJ agents/NNS AI/NNP)
  ,/,
  (NP clausal/NN logic/NN)
  proved/VBD
  (NP practical/JJ knowledge/NN representation/NN language/NN)
  ,/,
  (NP independent/JJ language/NN agent/NN)
  might/MD
  use/VB
  communicating/VBG
  (NP agents/NNS)
  ./.) 


>> Noun Phrases are: 
 ['case', 'artificial agents AI', 'clausal logic', 'practical knowledge representation language', 'independent language agent', 'agents']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Certainly', 'certainli'), ('case', 'case'), ('artificial', 'artifici'), ('agents', 'agent'), ('AI', 'ai'), (',', ','), ('clausal', 'clausal'), ('logic', 'logic'), ('proved', 'prove'), ('practical', 'practic'), ('knowledge', 'knowledg'), ('representation', 'represent'), ('language', 'languag'), (',', ','), ('independent', 'independ'), ('language', 'languag'), ('agent', 'agent'), ('might', 'might'), ('use', 'use'), ('communicating', 'commun'), ('agents', 'agent'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Certainly', 'certain'), ('case', 'case'), ('artificial', 'artifici'), ('agents', 'agent'), ('AI', 'ai'), (',', ','), ('clausal', 'clausal'), ('logic', 'logic'), ('proved', 'prove'), ('practical', 'practic'), ('knowledge', 'knowledg'), ('representation', 'represent'), ('language', 'languag'), (',', ','), ('independent', 'independ'), ('language', 'languag'), ('agent', 'agent'), ('might', 'might'), ('use', 'use'), ('communicating', 'communic'), ('agents', 'agent'), ('.', '.')]

>> Lemmatization: 
 [('Certainly', 'Certainly'), ('case', 'case'), ('artificial', 'artificial'), ('agents', 'agent'), ('AI', 'AI'), (',', ','), ('clausal', 'clausal'), ('logic', 'logic'), ('proved', 'proved'), ('practical', 'practical'), ('knowledge', 'knowledge'), ('representation', 'representation'), ('language', 'language'), (',', ','), ('independent', 'independent'), ('language', 'language'), ('agent', 'agent'), ('might', 'might'), ('use', 'use'), ('communicating', 'communicating'), ('agents', 'agent'), ('.', '.')]



============================ Sentence 164 =============================

In the case of hu- man agents, clausal logic can also help people communicate  more effectively, by expressing their communications in a  form that is closer to the LOT. 


>> Tokens are: 
 ['In', 'case', 'hu-', 'man', 'agents', ',', 'clausal', 'logic', 'also', 'help', 'people', 'communicate', 'effectively', ',', 'expressing', 'communications', 'form', 'closer', 'LOT', '.']

>> Bigrams are: 
 [('In', 'case'), ('case', 'hu-'), ('hu-', 'man'), ('man', 'agents'), ('agents', ','), (',', 'clausal'), ('clausal', 'logic'), ('logic', 'also'), ('also', 'help'), ('help', 'people'), ('people', 'communicate'), ('communicate', 'effectively'), ('effectively', ','), (',', 'expressing'), ('expressing', 'communications'), ('communications', 'form'), ('form', 'closer'), ('closer', 'LOT'), ('LOT', '.')]

>> Trigrams are: 
 [('In', 'case', 'hu-'), ('case', 'hu-', 'man'), ('hu-', 'man', 'agents'), ('man', 'agents', ','), ('agents', ',', 'clausal'), (',', 'clausal', 'logic'), ('clausal', 'logic', 'also'), ('logic', 'also', 'help'), ('also', 'help', 'people'), ('help', 'people', 'communicate'), ('people', 'communicate', 'effectively'), ('communicate', 'effectively', ','), ('effectively', ',', 'expressing'), (',', 'expressing', 'communications'), ('expressing', 'communications', 'form'), ('communications', 'form', 'closer'), ('form', 'closer', 'LOT'), ('closer', 'LOT', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('case', 'NN'), ('hu-', 'JJ'), ('man', 'NN'), ('agents', 'NNS'), (',', ','), ('clausal', 'NN'), ('logic', 'NN'), ('also', 'RB'), ('help', 'VBP'), ('people', 'NNS'), ('communicate', 'VB'), ('effectively', 'RB'), (',', ','), ('expressing', 'VBG'), ('communications', 'NNS'), ('form', 'VBP'), ('closer', 'JJR'), ('LOT', 'NNP'), ('.', '.')]

 (S
  In/IN
  (NP case/NN)
  (NP hu-/JJ man/NN agents/NNS)
  ,/,
  (NP clausal/NN logic/NN)
  also/RB
  help/VBP
  (NP people/NNS)
  communicate/VB
  effectively/RB
  ,/,
  expressing/VBG
  (NP communications/NNS)
  form/VBP
  closer/JJR
  (NP LOT/NNP)
  ./.) 


>> Noun Phrases are: 
 ['case', 'hu- man agents', 'clausal logic', 'people', 'communications', 'LOT']

>> Named Entities are: 
 [('ORGANIZATION', 'LOT')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('case', 'case'), ('hu-', 'hu-'), ('man', 'man'), ('agents', 'agent'), (',', ','), ('clausal', 'clausal'), ('logic', 'logic'), ('also', 'also'), ('help', 'help'), ('people', 'peopl'), ('communicate', 'commun'), ('effectively', 'effect'), (',', ','), ('expressing', 'express'), ('communications', 'commun'), ('form', 'form'), ('closer', 'closer'), ('LOT', 'lot'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('case', 'case'), ('hu-', 'hu-'), ('man', 'man'), ('agents', 'agent'), (',', ','), ('clausal', 'clausal'), ('logic', 'logic'), ('also', 'also'), ('help', 'help'), ('people', 'peopl'), ('communicate', 'communic'), ('effectively', 'effect'), (',', ','), ('expressing', 'express'), ('communications', 'communic'), ('form', 'form'), ('closer', 'closer'), ('LOT', 'lot'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('case', 'case'), ('hu-', 'hu-'), ('man', 'man'), ('agents', 'agent'), (',', ','), ('clausal', 'clausal'), ('logic', 'logic'), ('also', 'also'), ('help', 'help'), ('people', 'people'), ('communicate', 'communicate'), ('effectively', 'effectively'), (',', ','), ('expressing', 'expressing'), ('communications', 'communication'), ('form', 'form'), ('closer', 'closer'), ('LOT', 'LOT'), ('.', '.')]



============================ Sentence 165 =============================

Clausal logic can help people communicate more coher- ently, by helping them to link new information with old  information. 


>> Tokens are: 
 ['Clausal', 'logic', 'help', 'people', 'communicate', 'coher-', 'ently', ',', 'helping', 'link', 'new', 'information', 'old', 'information', '.']

>> Bigrams are: 
 [('Clausal', 'logic'), ('logic', 'help'), ('help', 'people'), ('people', 'communicate'), ('communicate', 'coher-'), ('coher-', 'ently'), ('ently', ','), (',', 'helping'), ('helping', 'link'), ('link', 'new'), ('new', 'information'), ('information', 'old'), ('old', 'information'), ('information', '.')]

>> Trigrams are: 
 [('Clausal', 'logic', 'help'), ('logic', 'help', 'people'), ('help', 'people', 'communicate'), ('people', 'communicate', 'coher-'), ('communicate', 'coher-', 'ently'), ('coher-', 'ently', ','), ('ently', ',', 'helping'), (',', 'helping', 'link'), ('helping', 'link', 'new'), ('link', 'new', 'information'), ('new', 'information', 'old'), ('information', 'old', 'information'), ('old', 'information', '.')]

>> POS Tags are: 
 [('Clausal', 'NNP'), ('logic', 'VBZ'), ('help', 'NN'), ('people', 'NNS'), ('communicate', 'VBP'), ('coher-', 'JJ'), ('ently', 'RB'), (',', ','), ('helping', 'VBG'), ('link', 'VB'), ('new', 'JJ'), ('information', 'NN'), ('old', 'JJ'), ('information', 'NN'), ('.', '.')]

 (S
  (NP Clausal/NNP)
  logic/VBZ
  (NP help/NN people/NNS)
  communicate/VBP
  coher-/JJ
  ently/RB
  ,/,
  helping/VBG
  link/VB
  (NP new/JJ information/NN)
  (NP old/JJ information/NN)
  ./.) 


>> Noun Phrases are: 
 ['Clausal', 'help people', 'new information', 'old information']

>> Named Entities are: 
 [('GPE', 'Clausal')] 

>> Stemming using Porter Stemmer: 
 [('Clausal', 'clausal'), ('logic', 'logic'), ('help', 'help'), ('people', 'peopl'), ('communicate', 'commun'), ('coher-', 'coher-'), ('ently', 'entli'), (',', ','), ('helping', 'help'), ('link', 'link'), ('new', 'new'), ('information', 'inform'), ('old', 'old'), ('information', 'inform'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Clausal', 'clausal'), ('logic', 'logic'), ('help', 'help'), ('people', 'peopl'), ('communicate', 'communic'), ('coher-', 'coher-'), ('ently', 'entli'), (',', ','), ('helping', 'help'), ('link', 'link'), ('new', 'new'), ('information', 'inform'), ('old', 'old'), ('information', 'inform'), ('.', '.')]

>> Lemmatization: 
 [('Clausal', 'Clausal'), ('logic', 'logic'), ('help', 'help'), ('people', 'people'), ('communicate', 'communicate'), ('coher-', 'coher-'), ('ently', 'ently'), (',', ','), ('helping', 'helping'), ('link', 'link'), ('new', 'new'), ('information', 'information'), ('old', 'old'), ('information', 'information'), ('.', '.')]



============================ Sentence 166 =============================

This model of coherence exploits the fact that  clausal logic lends itself to a connectionist representation, in  which information is stored in a connection graph of goals  and beliefs [Kowalski, 1975, 1979, 2011]. 


>> Tokens are: 
 ['This', 'model', 'coherence', 'exploits', 'fact', 'clausal', 'logic', 'lends', 'connectionist', 'representation', ',', 'information', 'stored', 'connection', 'graph', 'goals', 'beliefs', '[', 'Kowalski', ',', '1975', ',', '1979', ',', '2011', ']', '.']

>> Bigrams are: 
 [('This', 'model'), ('model', 'coherence'), ('coherence', 'exploits'), ('exploits', 'fact'), ('fact', 'clausal'), ('clausal', 'logic'), ('logic', 'lends'), ('lends', 'connectionist'), ('connectionist', 'representation'), ('representation', ','), (',', 'information'), ('information', 'stored'), ('stored', 'connection'), ('connection', 'graph'), ('graph', 'goals'), ('goals', 'beliefs'), ('beliefs', '['), ('[', 'Kowalski'), ('Kowalski', ','), (',', '1975'), ('1975', ','), (',', '1979'), ('1979', ','), (',', '2011'), ('2011', ']'), (']', '.')]

>> Trigrams are: 
 [('This', 'model', 'coherence'), ('model', 'coherence', 'exploits'), ('coherence', 'exploits', 'fact'), ('exploits', 'fact', 'clausal'), ('fact', 'clausal', 'logic'), ('clausal', 'logic', 'lends'), ('logic', 'lends', 'connectionist'), ('lends', 'connectionist', 'representation'), ('connectionist', 'representation', ','), ('representation', ',', 'information'), (',', 'information', 'stored'), ('information', 'stored', 'connection'), ('stored', 'connection', 'graph'), ('connection', 'graph', 'goals'), ('graph', 'goals', 'beliefs'), ('goals', 'beliefs', '['), ('beliefs', '[', 'Kowalski'), ('[', 'Kowalski', ','), ('Kowalski', ',', '1975'), (',', '1975', ','), ('1975', ',', '1979'), (',', '1979', ','), ('1979', ',', '2011'), (',', '2011', ']'), ('2011', ']', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('model', 'NN'), ('coherence', 'NN'), ('exploits', 'NNS'), ('fact', 'NN'), ('clausal', 'VBP'), ('logic', 'JJ'), ('lends', 'NNS'), ('connectionist', 'JJ'), ('representation', 'NN'), (',', ','), ('information', 'NN'), ('stored', 'VBN'), ('connection', 'NN'), ('graph', 'NN'), ('goals', 'NNS'), ('beliefs', 'VBP'), ('[', 'JJ'), ('Kowalski', 'NNP'), (',', ','), ('1975', 'CD'), (',', ','), ('1979', 'CD'), (',', ','), ('2011', 'CD'), (']', 'NN'), ('.', '.')]

 (S
  (NP This/DT model/NN coherence/NN exploits/NNS fact/NN)
  clausal/VBP
  (NP logic/JJ lends/NNS)
  (NP connectionist/JJ representation/NN)
  ,/,
  (NP information/NN)
  stored/VBN
  (NP connection/NN graph/NN goals/NNS)
  beliefs/VBP
  (NP [/JJ Kowalski/NNP)
  ,/,
  1975/CD
  ,/,
  1979/CD
  ,/,
  2011/CD
  (NP ]/NN)
  ./.) 


>> Noun Phrases are: 
 ['This model coherence exploits fact', 'logic lends', 'connectionist representation', 'information', 'connection graph goals', '[ Kowalski', ']']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('model', 'model'), ('coherence', 'coher'), ('exploits', 'exploit'), ('fact', 'fact'), ('clausal', 'clausal'), ('logic', 'logic'), ('lends', 'lend'), ('connectionist', 'connectionist'), ('representation', 'represent'), (',', ','), ('information', 'inform'), ('stored', 'store'), ('connection', 'connect'), ('graph', 'graph'), ('goals', 'goal'), ('beliefs', 'belief'), ('[', '['), ('Kowalski', 'kowalski'), (',', ','), ('1975', '1975'), (',', ','), ('1979', '1979'), (',', ','), ('2011', '2011'), (']', ']'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('model', 'model'), ('coherence', 'coher'), ('exploits', 'exploit'), ('fact', 'fact'), ('clausal', 'clausal'), ('logic', 'logic'), ('lends', 'lend'), ('connectionist', 'connectionist'), ('representation', 'represent'), (',', ','), ('information', 'inform'), ('stored', 'store'), ('connection', 'connect'), ('graph', 'graph'), ('goals', 'goal'), ('beliefs', 'belief'), ('[', '['), ('Kowalski', 'kowalski'), (',', ','), ('1975', '1975'), (',', ','), ('1979', '1979'), (',', ','), ('2011', '2011'), (']', ']'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('model', 'model'), ('coherence', 'coherence'), ('exploits', 'exploit'), ('fact', 'fact'), ('clausal', 'clausal'), ('logic', 'logic'), ('lends', 'lends'), ('connectionist', 'connectionist'), ('representation', 'representation'), (',', ','), ('information', 'information'), ('stored', 'stored'), ('connection', 'connection'), ('graph', 'graph'), ('goals', 'goal'), ('beliefs', 'belief'), ('[', '['), ('Kowalski', 'Kowalski'), (',', ','), ('1975', '1975'), (',', ','), ('1979', '1979'), (',', ','), ('2011', '2011'), (']', ']'), ('.', '.')]



============================ Sentence 167 =============================

4 A Connectionist Form of Clausal Logic    Similar to the way that clausal logic implements FOL, by  first converting sentences into canonical form, the connec- tion graph proof procedure implements clausal logic, by pre- computing links between conditions and conclusions, and  by labeling links with their unifying substitutions. 


>> Tokens are: 
 ['4', 'A', 'Connectionist', 'Form', 'Clausal', 'Logic', 'Similar', 'way', 'clausal', 'logic', 'implements', 'FOL', ',', 'first', 'converting', 'sentences', 'canonical', 'form', ',', 'connec-', 'tion', 'graph', 'proof', 'procedure', 'implements', 'clausal', 'logic', ',', 'pre-', 'computing', 'links', 'conditions', 'conclusions', ',', 'labeling', 'links', 'unifying', 'substitutions', '.']

>> Bigrams are: 
 [('4', 'A'), ('A', 'Connectionist'), ('Connectionist', 'Form'), ('Form', 'Clausal'), ('Clausal', 'Logic'), ('Logic', 'Similar'), ('Similar', 'way'), ('way', 'clausal'), ('clausal', 'logic'), ('logic', 'implements'), ('implements', 'FOL'), ('FOL', ','), (',', 'first'), ('first', 'converting'), ('converting', 'sentences'), ('sentences', 'canonical'), ('canonical', 'form'), ('form', ','), (',', 'connec-'), ('connec-', 'tion'), ('tion', 'graph'), ('graph', 'proof'), ('proof', 'procedure'), ('procedure', 'implements'), ('implements', 'clausal'), ('clausal', 'logic'), ('logic', ','), (',', 'pre-'), ('pre-', 'computing'), ('computing', 'links'), ('links', 'conditions'), ('conditions', 'conclusions'), ('conclusions', ','), (',', 'labeling'), ('labeling', 'links'), ('links', 'unifying'), ('unifying', 'substitutions'), ('substitutions', '.')]

>> Trigrams are: 
 [('4', 'A', 'Connectionist'), ('A', 'Connectionist', 'Form'), ('Connectionist', 'Form', 'Clausal'), ('Form', 'Clausal', 'Logic'), ('Clausal', 'Logic', 'Similar'), ('Logic', 'Similar', 'way'), ('Similar', 'way', 'clausal'), ('way', 'clausal', 'logic'), ('clausal', 'logic', 'implements'), ('logic', 'implements', 'FOL'), ('implements', 'FOL', ','), ('FOL', ',', 'first'), (',', 'first', 'converting'), ('first', 'converting', 'sentences'), ('converting', 'sentences', 'canonical'), ('sentences', 'canonical', 'form'), ('canonical', 'form', ','), ('form', ',', 'connec-'), (',', 'connec-', 'tion'), ('connec-', 'tion', 'graph'), ('tion', 'graph', 'proof'), ('graph', 'proof', 'procedure'), ('proof', 'procedure', 'implements'), ('procedure', 'implements', 'clausal'), ('implements', 'clausal', 'logic'), ('clausal', 'logic', ','), ('logic', ',', 'pre-'), (',', 'pre-', 'computing'), ('pre-', 'computing', 'links'), ('computing', 'links', 'conditions'), ('links', 'conditions', 'conclusions'), ('conditions', 'conclusions', ','), ('conclusions', ',', 'labeling'), (',', 'labeling', 'links'), ('labeling', 'links', 'unifying'), ('links', 'unifying', 'substitutions'), ('unifying', 'substitutions', '.')]

>> POS Tags are: 
 [('4', 'CD'), ('A', 'DT'), ('Connectionist', 'JJ'), ('Form', 'NNP'), ('Clausal', 'NNP'), ('Logic', 'NNP'), ('Similar', 'NNP'), ('way', 'NN'), ('clausal', 'NN'), ('logic', 'JJ'), ('implements', 'NNS'), ('FOL', 'NNP'), (',', ','), ('first', 'RB'), ('converting', 'VBG'), ('sentences', 'NNS'), ('canonical', 'JJ'), ('form', 'NN'), (',', ','), ('connec-', 'JJ'), ('tion', 'NN'), ('graph', 'NN'), ('proof', 'NN'), ('procedure', 'NN'), ('implements', 'NNS'), ('clausal', 'VBP'), ('logic', 'JJ'), (',', ','), ('pre-', 'JJ'), ('computing', 'VBG'), ('links', 'JJ'), ('conditions', 'NNS'), ('conclusions', 'NNS'), (',', ','), ('labeling', 'VBG'), ('links', 'NNS'), ('unifying', 'JJ'), ('substitutions', 'NNS'), ('.', '.')]

 (S
  4/CD
  (NP
    A/DT
    Connectionist/JJ
    Form/NNP
    Clausal/NNP
    Logic/NNP
    Similar/NNP
    way/NN
    clausal/NN)
  (NP logic/JJ implements/NNS FOL/NNP)
  ,/,
  first/RB
  converting/VBG
  (NP sentences/NNS)
  (NP canonical/JJ form/NN)
  ,/,
  (NP
    connec-/JJ
    tion/NN
    graph/NN
    proof/NN
    procedure/NN
    implements/NNS)
  clausal/VBP
  logic/JJ
  ,/,
  pre-/JJ
  computing/VBG
  (NP links/JJ conditions/NNS conclusions/NNS)
  ,/,
  labeling/VBG
  (NP links/NNS)
  (NP unifying/JJ substitutions/NNS)
  ./.) 


>> Noun Phrases are: 
 ['A Connectionist Form Clausal Logic Similar way clausal', 'logic implements FOL', 'sentences', 'canonical form', 'connec- tion graph proof procedure implements', 'links conditions conclusions', 'links', 'unifying substitutions']

>> Named Entities are: 
 [('ORGANIZATION', 'Connectionist Form Clausal Logic Similar'), ('ORGANIZATION', 'FOL')] 

>> Stemming using Porter Stemmer: 
 [('4', '4'), ('A', 'a'), ('Connectionist', 'connectionist'), ('Form', 'form'), ('Clausal', 'clausal'), ('Logic', 'logic'), ('Similar', 'similar'), ('way', 'way'), ('clausal', 'clausal'), ('logic', 'logic'), ('implements', 'implement'), ('FOL', 'fol'), (',', ','), ('first', 'first'), ('converting', 'convert'), ('sentences', 'sentenc'), ('canonical', 'canon'), ('form', 'form'), (',', ','), ('connec-', 'connec-'), ('tion', 'tion'), ('graph', 'graph'), ('proof', 'proof'), ('procedure', 'procedur'), ('implements', 'implement'), ('clausal', 'clausal'), ('logic', 'logic'), (',', ','), ('pre-', 'pre-'), ('computing', 'comput'), ('links', 'link'), ('conditions', 'condit'), ('conclusions', 'conclus'), (',', ','), ('labeling', 'label'), ('links', 'link'), ('unifying', 'unifi'), ('substitutions', 'substitut'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('4', '4'), ('A', 'a'), ('Connectionist', 'connectionist'), ('Form', 'form'), ('Clausal', 'clausal'), ('Logic', 'logic'), ('Similar', 'similar'), ('way', 'way'), ('clausal', 'clausal'), ('logic', 'logic'), ('implements', 'implement'), ('FOL', 'fol'), (',', ','), ('first', 'first'), ('converting', 'convert'), ('sentences', 'sentenc'), ('canonical', 'canon'), ('form', 'form'), (',', ','), ('connec-', 'connec-'), ('tion', 'tion'), ('graph', 'graph'), ('proof', 'proof'), ('procedure', 'procedur'), ('implements', 'implement'), ('clausal', 'clausal'), ('logic', 'logic'), (',', ','), ('pre-', 'pre-'), ('computing', 'comput'), ('links', 'link'), ('conditions', 'condit'), ('conclusions', 'conclus'), (',', ','), ('labeling', 'label'), ('links', 'link'), ('unifying', 'unifi'), ('substitutions', 'substitut'), ('.', '.')]

>> Lemmatization: 
 [('4', '4'), ('A', 'A'), ('Connectionist', 'Connectionist'), ('Form', 'Form'), ('Clausal', 'Clausal'), ('Logic', 'Logic'), ('Similar', 'Similar'), ('way', 'way'), ('clausal', 'clausal'), ('logic', 'logic'), ('implements', 'implement'), ('FOL', 'FOL'), (',', ','), ('first', 'first'), ('converting', 'converting'), ('sentences', 'sentence'), ('canonical', 'canonical'), ('form', 'form'), (',', ','), ('connec-', 'connec-'), ('tion', 'tion'), ('graph', 'graph'), ('proof', 'proof'), ('procedure', 'procedure'), ('implements', 'implement'), ('clausal', 'clausal'), ('logic', 'logic'), (',', ','), ('pre-', 'pre-'), ('computing', 'computing'), ('links', 'link'), ('conditions', 'condition'), ('conclusions', 'conclusion'), (',', ','), ('labeling', 'labeling'), ('links', 'link'), ('unifying', 'unifying'), ('substitutions', 'substitution'), ('.', '.')]



============================ Sentence 168 =============================

These  links can then be activated later, either forwards or back- wards, as and when the need arises. 


>> Tokens are: 
 ['These', 'links', 'activated', 'later', ',', 'either', 'forwards', 'back-', 'wards', ',', 'need', 'arises', '.']

>> Bigrams are: 
 [('These', 'links'), ('links', 'activated'), ('activated', 'later'), ('later', ','), (',', 'either'), ('either', 'forwards'), ('forwards', 'back-'), ('back-', 'wards'), ('wards', ','), (',', 'need'), ('need', 'arises'), ('arises', '.')]

>> Trigrams are: 
 [('These', 'links', 'activated'), ('links', 'activated', 'later'), ('activated', 'later', ','), ('later', ',', 'either'), (',', 'either', 'forwards'), ('either', 'forwards', 'back-'), ('forwards', 'back-', 'wards'), ('back-', 'wards', ','), ('wards', ',', 'need'), (',', 'need', 'arises'), ('need', 'arises', '.')]

>> POS Tags are: 
 [('These', 'DT'), ('links', 'NNS'), ('activated', 'VBD'), ('later', 'RB'), (',', ','), ('either', 'DT'), ('forwards', 'NNS'), ('back-', 'JJ'), ('wards', 'NNS'), (',', ','), ('need', 'VBP'), ('arises', 'NNS'), ('.', '.')]

 (S
  (NP These/DT links/NNS)
  activated/VBD
  later/RB
  ,/,
  (NP either/DT forwards/NNS)
  (NP back-/JJ wards/NNS)
  ,/,
  need/VBP
  (NP arises/NNS)
  ./.) 


>> Noun Phrases are: 
 ['These links', 'either forwards', 'back- wards', 'arises']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('These', 'these'), ('links', 'link'), ('activated', 'activ'), ('later', 'later'), (',', ','), ('either', 'either'), ('forwards', 'forward'), ('back-', 'back-'), ('wards', 'ward'), (',', ','), ('need', 'need'), ('arises', 'aris'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('These', 'these'), ('links', 'link'), ('activated', 'activ'), ('later', 'later'), (',', ','), ('either', 'either'), ('forwards', 'forward'), ('back-', 'back-'), ('wards', 'ward'), (',', ','), ('need', 'need'), ('arises', 'aris'), ('.', '.')]

>> Lemmatization: 
 [('These', 'These'), ('links', 'link'), ('activated', 'activated'), ('later', 'later'), (',', ','), ('either', 'either'), ('forwards', 'forward'), ('back-', 'back-'), ('wards', 'ward'), (',', ','), ('need', 'need'), ('arises', 'arises'), ('.', '.')]



============================ Sentence 169 =============================

Links that are activated  frequently can be compiled into shortcuts, which achieve the  same effects more directly, in the manner of heuristic rules  and stimulus-response associations. 


>> Tokens are: 
 ['Links', 'activated', 'frequently', 'compiled', 'shortcuts', ',', 'achieve', 'effects', 'directly', ',', 'manner', 'heuristic', 'rules', 'stimulus-response', 'associations', '.']

>> Bigrams are: 
 [('Links', 'activated'), ('activated', 'frequently'), ('frequently', 'compiled'), ('compiled', 'shortcuts'), ('shortcuts', ','), (',', 'achieve'), ('achieve', 'effects'), ('effects', 'directly'), ('directly', ','), (',', 'manner'), ('manner', 'heuristic'), ('heuristic', 'rules'), ('rules', 'stimulus-response'), ('stimulus-response', 'associations'), ('associations', '.')]

>> Trigrams are: 
 [('Links', 'activated', 'frequently'), ('activated', 'frequently', 'compiled'), ('frequently', 'compiled', 'shortcuts'), ('compiled', 'shortcuts', ','), ('shortcuts', ',', 'achieve'), (',', 'achieve', 'effects'), ('achieve', 'effects', 'directly'), ('effects', 'directly', ','), ('directly', ',', 'manner'), (',', 'manner', 'heuristic'), ('manner', 'heuristic', 'rules'), ('heuristic', 'rules', 'stimulus-response'), ('rules', 'stimulus-response', 'associations'), ('stimulus-response', 'associations', '.')]

>> POS Tags are: 
 [('Links', 'NNS'), ('activated', 'VBD'), ('frequently', 'RB'), ('compiled', 'VBN'), ('shortcuts', 'NNS'), (',', ','), ('achieve', 'VBP'), ('effects', 'NNS'), ('directly', 'RB'), (',', ','), ('manner', 'RBR'), ('heuristic', 'JJ'), ('rules', 'NNS'), ('stimulus-response', 'JJ'), ('associations', 'NNS'), ('.', '.')]

 (S
  (NP Links/NNS)
  activated/VBD
  frequently/RB
  compiled/VBN
  (NP shortcuts/NNS)
  ,/,
  achieve/VBP
  (NP effects/NNS)
  directly/RB
  ,/,
  manner/RBR
  (NP heuristic/JJ rules/NNS)
  (NP stimulus-response/JJ associations/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Links', 'shortcuts', 'effects', 'heuristic rules', 'stimulus-response associations']

>> Named Entities are: 
 [('PERSON', 'Links')] 

>> Stemming using Porter Stemmer: 
 [('Links', 'link'), ('activated', 'activ'), ('frequently', 'frequent'), ('compiled', 'compil'), ('shortcuts', 'shortcut'), (',', ','), ('achieve', 'achiev'), ('effects', 'effect'), ('directly', 'directli'), (',', ','), ('manner', 'manner'), ('heuristic', 'heurist'), ('rules', 'rule'), ('stimulus-response', 'stimulus-respons'), ('associations', 'associ'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Links', 'link'), ('activated', 'activ'), ('frequently', 'frequent'), ('compiled', 'compil'), ('shortcuts', 'shortcut'), (',', ','), ('achieve', 'achiev'), ('effects', 'effect'), ('directly', 'direct'), (',', ','), ('manner', 'manner'), ('heuristic', 'heurist'), ('rules', 'rule'), ('stimulus-response', 'stimulus-respons'), ('associations', 'associ'), ('.', '.')]

>> Lemmatization: 
 [('Links', 'Links'), ('activated', 'activated'), ('frequently', 'frequently'), ('compiled', 'compiled'), ('shortcuts', 'shortcut'), (',', ','), ('achieve', 'achieve'), ('effects', 'effect'), ('directly', 'directly'), (',', ','), ('manner', 'manner'), ('heuristic', 'heuristic'), ('rules', 'rule'), ('stimulus-response', 'stimulus-response'), ('associations', 'association'), ('.', '.')]



============================ Sentence 170 =============================

Although clausal logic is a symbolic representation, once  all the links and their unifying substitutions have been com- puted, the names of the predicate symbols no longer matter. 


>> Tokens are: 
 ['Although', 'clausal', 'logic', 'symbolic', 'representation', ',', 'links', 'unifying', 'substitutions', 'com-', 'puted', ',', 'names', 'predicate', 'symbols', 'longer', 'matter', '.']

>> Bigrams are: 
 [('Although', 'clausal'), ('clausal', 'logic'), ('logic', 'symbolic'), ('symbolic', 'representation'), ('representation', ','), (',', 'links'), ('links', 'unifying'), ('unifying', 'substitutions'), ('substitutions', 'com-'), ('com-', 'puted'), ('puted', ','), (',', 'names'), ('names', 'predicate'), ('predicate', 'symbols'), ('symbols', 'longer'), ('longer', 'matter'), ('matter', '.')]

>> Trigrams are: 
 [('Although', 'clausal', 'logic'), ('clausal', 'logic', 'symbolic'), ('logic', 'symbolic', 'representation'), ('symbolic', 'representation', ','), ('representation', ',', 'links'), (',', 'links', 'unifying'), ('links', 'unifying', 'substitutions'), ('unifying', 'substitutions', 'com-'), ('substitutions', 'com-', 'puted'), ('com-', 'puted', ','), ('puted', ',', 'names'), (',', 'names', 'predicate'), ('names', 'predicate', 'symbols'), ('predicate', 'symbols', 'longer'), ('symbols', 'longer', 'matter'), ('longer', 'matter', '.')]

>> POS Tags are: 
 [('Although', 'IN'), ('clausal', 'NN'), ('logic', 'JJ'), ('symbolic', 'JJ'), ('representation', 'NN'), (',', ','), ('links', 'VBZ'), ('unifying', 'JJ'), ('substitutions', 'NNS'), ('com-', 'RB'), ('puted', 'VBD'), (',', ','), ('names', 'NNS'), ('predicate', 'VBP'), ('symbols', 'NNS'), ('longer', 'RBR'), ('matter', 'NN'), ('.', '.')]

 (S
  Although/IN
  (NP clausal/NN)
  (NP logic/JJ symbolic/JJ representation/NN)
  ,/,
  links/VBZ
  (NP unifying/JJ substitutions/NNS)
  com-/RB
  puted/VBD
  ,/,
  (NP names/NNS)
  predicate/VBP
  (NP symbols/NNS)
  longer/RBR
  (NP matter/NN)
  ./.) 


>> Noun Phrases are: 
 ['clausal', 'logic symbolic representation', 'unifying substitutions', 'names', 'symbols', 'matter']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Although', 'although'), ('clausal', 'clausal'), ('logic', 'logic'), ('symbolic', 'symbol'), ('representation', 'represent'), (',', ','), ('links', 'link'), ('unifying', 'unifi'), ('substitutions', 'substitut'), ('com-', 'com-'), ('puted', 'pute'), (',', ','), ('names', 'name'), ('predicate', 'predic'), ('symbols', 'symbol'), ('longer', 'longer'), ('matter', 'matter'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Although', 'although'), ('clausal', 'clausal'), ('logic', 'logic'), ('symbolic', 'symbol'), ('representation', 'represent'), (',', ','), ('links', 'link'), ('unifying', 'unifi'), ('substitutions', 'substitut'), ('com-', 'com-'), ('puted', 'pute'), (',', ','), ('names', 'name'), ('predicate', 'predic'), ('symbols', 'symbol'), ('longer', 'longer'), ('matter', 'matter'), ('.', '.')]

>> Lemmatization: 
 [('Although', 'Although'), ('clausal', 'clausal'), ('logic', 'logic'), ('symbolic', 'symbolic'), ('representation', 'representation'), (',', ','), ('links', 'link'), ('unifying', 'unifying'), ('substitutions', 'substitution'), ('com-', 'com-'), ('puted', 'puted'), (',', ','), ('names', 'name'), ('predicate', 'predicate'), ('symbols', 'symbol'), ('longer', 'longer'), ('matter', 'matter'), ('.', '.')]



============================ Sentence 171 =============================

All further reasoning can be reduced to the activation of the  links, and to the generation of new clauses, whose new links  are inherited from the links of their parent clauses. 


>> Tokens are: 
 ['All', 'reasoning', 'reduced', 'activation', 'links', ',', 'generation', 'new', 'clauses', ',', 'whose', 'new', 'links', 'inherited', 'links', 'parent', 'clauses', '.']

>> Bigrams are: 
 [('All', 'reasoning'), ('reasoning', 'reduced'), ('reduced', 'activation'), ('activation', 'links'), ('links', ','), (',', 'generation'), ('generation', 'new'), ('new', 'clauses'), ('clauses', ','), (',', 'whose'), ('whose', 'new'), ('new', 'links'), ('links', 'inherited'), ('inherited', 'links'), ('links', 'parent'), ('parent', 'clauses'), ('clauses', '.')]

>> Trigrams are: 
 [('All', 'reasoning', 'reduced'), ('reasoning', 'reduced', 'activation'), ('reduced', 'activation', 'links'), ('activation', 'links', ','), ('links', ',', 'generation'), (',', 'generation', 'new'), ('generation', 'new', 'clauses'), ('new', 'clauses', ','), ('clauses', ',', 'whose'), (',', 'whose', 'new'), ('whose', 'new', 'links'), ('new', 'links', 'inherited'), ('links', 'inherited', 'links'), ('inherited', 'links', 'parent'), ('links', 'parent', 'clauses'), ('parent', 'clauses', '.')]

>> POS Tags are: 
 [('All', 'DT'), ('reasoning', 'NN'), ('reduced', 'VBN'), ('activation', 'NN'), ('links', 'NNS'), (',', ','), ('generation', 'NN'), ('new', 'JJ'), ('clauses', 'NNS'), (',', ','), ('whose', 'WP$'), ('new', 'JJ'), ('links', 'NNS'), ('inherited', 'VBN'), ('links', 'NNS'), ('parent', 'NN'), ('clauses', 'NNS'), ('.', '.')]

 (S
  (NP All/DT reasoning/NN)
  reduced/VBN
  (NP activation/NN links/NNS)
  ,/,
  (NP generation/NN)
  (NP new/JJ clauses/NNS)
  ,/,
  whose/WP$
  (NP new/JJ links/NNS)
  inherited/VBN
  (NP links/NNS parent/NN clauses/NNS)
  ./.) 


>> Noun Phrases are: 
 ['All reasoning', 'activation links', 'generation', 'new clauses', 'new links', 'links parent clauses']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('All', 'all'), ('reasoning', 'reason'), ('reduced', 'reduc'), ('activation', 'activ'), ('links', 'link'), (',', ','), ('generation', 'gener'), ('new', 'new'), ('clauses', 'claus'), (',', ','), ('whose', 'whose'), ('new', 'new'), ('links', 'link'), ('inherited', 'inherit'), ('links', 'link'), ('parent', 'parent'), ('clauses', 'claus'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('All', 'all'), ('reasoning', 'reason'), ('reduced', 'reduc'), ('activation', 'activ'), ('links', 'link'), (',', ','), ('generation', 'generat'), ('new', 'new'), ('clauses', 'claus'), (',', ','), ('whose', 'whose'), ('new', 'new'), ('links', 'link'), ('inherited', 'inherit'), ('links', 'link'), ('parent', 'parent'), ('clauses', 'claus'), ('.', '.')]

>> Lemmatization: 
 [('All', 'All'), ('reasoning', 'reasoning'), ('reduced', 'reduced'), ('activation', 'activation'), ('links', 'link'), (',', ','), ('generation', 'generation'), ('new', 'new'), ('clauses', 'clause'), (',', ','), ('whose', 'whose'), ('new', 'new'), ('links', 'link'), ('inherited', 'inherited'), ('links', 'link'), ('parent', 'parent'), ('clauses', 'clause'), ('.', '.')]



============================ Sentence 172 =============================

In many  cases, parent clauses can be deleted or over-written, when  all their links have been activated. 


>> Tokens are: 
 ['In', 'many', 'cases', ',', 'parent', 'clauses', 'deleted', 'over-written', ',', 'links', 'activated', '.']

>> Bigrams are: 
 [('In', 'many'), ('many', 'cases'), ('cases', ','), (',', 'parent'), ('parent', 'clauses'), ('clauses', 'deleted'), ('deleted', 'over-written'), ('over-written', ','), (',', 'links'), ('links', 'activated'), ('activated', '.')]

>> Trigrams are: 
 [('In', 'many', 'cases'), ('many', 'cases', ','), ('cases', ',', 'parent'), (',', 'parent', 'clauses'), ('parent', 'clauses', 'deleted'), ('clauses', 'deleted', 'over-written'), ('deleted', 'over-written', ','), ('over-written', ',', 'links'), (',', 'links', 'activated'), ('links', 'activated', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('many', 'JJ'), ('cases', 'NNS'), (',', ','), ('parent', 'NN'), ('clauses', 'NNS'), ('deleted', 'VBD'), ('over-written', 'JJ'), (',', ','), ('links', 'NNS'), ('activated', 'VBD'), ('.', '.')]

 (S
  In/IN
  (NP many/JJ cases/NNS)
  ,/,
  (NP parent/NN clauses/NNS)
  deleted/VBD
  over-written/JJ
  ,/,
  (NP links/NNS)
  activated/VBD
  ./.) 


>> Noun Phrases are: 
 ['many cases', 'parent clauses', 'links']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('many', 'mani'), ('cases', 'case'), (',', ','), ('parent', 'parent'), ('clauses', 'claus'), ('deleted', 'delet'), ('over-written', 'over-written'), (',', ','), ('links', 'link'), ('activated', 'activ'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('many', 'mani'), ('cases', 'case'), (',', ','), ('parent', 'parent'), ('clauses', 'claus'), ('deleted', 'delet'), ('over-written', 'over-written'), (',', ','), ('links', 'link'), ('activated', 'activ'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('many', 'many'), ('cases', 'case'), (',', ','), ('parent', 'parent'), ('clauses', 'clause'), ('deleted', 'deleted'), ('over-written', 'over-written'), (',', ','), ('links', 'link'), ('activated', 'activated'), ('.', '.')]



============================ Sentence 173 =============================

Any link can be selected for activation at any time. 


>> Tokens are: 
 ['Any', 'link', 'selected', 'activation', 'time', '.']

>> Bigrams are: 
 [('Any', 'link'), ('link', 'selected'), ('selected', 'activation'), ('activation', 'time'), ('time', '.')]

>> Trigrams are: 
 [('Any', 'link', 'selected'), ('link', 'selected', 'activation'), ('selected', 'activation', 'time'), ('activation', 'time', '.')]

>> POS Tags are: 
 [('Any', 'DT'), ('link', 'NN'), ('selected', 'VBN'), ('activation', 'NN'), ('time', 'NN'), ('.', '.')]

 (S (NP Any/DT link/NN) selected/VBN (NP activation/NN time/NN) ./.) 


>> Noun Phrases are: 
 ['Any link', 'activation time']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Any', 'ani'), ('link', 'link'), ('selected', 'select'), ('activation', 'activ'), ('time', 'time'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Any', 'ani'), ('link', 'link'), ('selected', 'select'), ('activation', 'activ'), ('time', 'time'), ('.', '.')]

>> Lemmatization: 
 [('Any', 'Any'), ('link', 'link'), ('selected', 'selected'), ('activation', 'activation'), ('time', 'time'), ('.', '.')]



============================ Sentence 174 =============================

But  most of the time, it makes sense to activate links only when  new clauses are added to the graph as the result of new ob- servations, including observations of communications. 


>> Tokens are: 
 ['But', 'time', ',', 'makes', 'sense', 'activate', 'links', 'new', 'clauses', 'added', 'graph', 'result', 'new', 'ob-', 'servations', ',', 'including', 'observations', 'communications', '.']

>> Bigrams are: 
 [('But', 'time'), ('time', ','), (',', 'makes'), ('makes', 'sense'), ('sense', 'activate'), ('activate', 'links'), ('links', 'new'), ('new', 'clauses'), ('clauses', 'added'), ('added', 'graph'), ('graph', 'result'), ('result', 'new'), ('new', 'ob-'), ('ob-', 'servations'), ('servations', ','), (',', 'including'), ('including', 'observations'), ('observations', 'communications'), ('communications', '.')]

>> Trigrams are: 
 [('But', 'time', ','), ('time', ',', 'makes'), (',', 'makes', 'sense'), ('makes', 'sense', 'activate'), ('sense', 'activate', 'links'), ('activate', 'links', 'new'), ('links', 'new', 'clauses'), ('new', 'clauses', 'added'), ('clauses', 'added', 'graph'), ('added', 'graph', 'result'), ('graph', 'result', 'new'), ('result', 'new', 'ob-'), ('new', 'ob-', 'servations'), ('ob-', 'servations', ','), ('servations', ',', 'including'), (',', 'including', 'observations'), ('including', 'observations', 'communications'), ('observations', 'communications', '.')]

>> POS Tags are: 
 [('But', 'CC'), ('time', 'NN'), (',', ','), ('makes', 'VBZ'), ('sense', 'NN'), ('activate', 'JJ'), ('links', 'NNS'), ('new', 'JJ'), ('clauses', 'NNS'), ('added', 'VBD'), ('graph', 'NN'), ('result', 'NN'), ('new', 'JJ'), ('ob-', 'JJ'), ('servations', 'NNS'), (',', ','), ('including', 'VBG'), ('observations', 'NNS'), ('communications', 'NNS'), ('.', '.')]

 (S
  But/CC
  (NP time/NN)
  ,/,
  makes/VBZ
  (NP sense/NN)
  (NP activate/JJ links/NNS)
  (NP new/JJ clauses/NNS)
  added/VBD
  (NP graph/NN result/NN)
  (NP new/JJ ob-/JJ servations/NNS)
  ,/,
  including/VBG
  (NP observations/NNS communications/NNS)
  ./.) 


>> Noun Phrases are: 
 ['time', 'sense', 'activate links', 'new clauses', 'graph result', 'new ob- servations', 'observations communications']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('But', 'but'), ('time', 'time'), (',', ','), ('makes', 'make'), ('sense', 'sens'), ('activate', 'activ'), ('links', 'link'), ('new', 'new'), ('clauses', 'claus'), ('added', 'ad'), ('graph', 'graph'), ('result', 'result'), ('new', 'new'), ('ob-', 'ob-'), ('servations', 'servat'), (',', ','), ('including', 'includ'), ('observations', 'observ'), ('communications', 'commun'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('But', 'but'), ('time', 'time'), (',', ','), ('makes', 'make'), ('sense', 'sens'), ('activate', 'activ'), ('links', 'link'), ('new', 'new'), ('clauses', 'claus'), ('added', 'ad'), ('graph', 'graph'), ('result', 'result'), ('new', 'new'), ('ob-', 'ob-'), ('servations', 'servat'), (',', ','), ('including', 'includ'), ('observations', 'observ'), ('communications', 'communic'), ('.', '.')]

>> Lemmatization: 
 [('But', 'But'), ('time', 'time'), (',', ','), ('makes', 'make'), ('sense', 'sense'), ('activate', 'activate'), ('links', 'link'), ('new', 'new'), ('clauses', 'clause'), ('added', 'added'), ('graph', 'graph'), ('result', 'result'), ('new', 'new'), ('ob-', 'ob-'), ('servations', 'servations'), (',', ','), ('including', 'including'), ('observations', 'observation'), ('communications', 'communication'), ('.', '.')]



============================ Sentence 175 =============================

The activation of links can be guided by assigning differ- ent strengths to different observations and goals, reflecting  their relative importance (or utility). 


>> Tokens are: 
 ['The', 'activation', 'links', 'guided', 'assigning', 'differ-', 'ent', 'strengths', 'different', 'observations', 'goals', ',', 'reflecting', 'relative', 'importance', '(', 'utility', ')', '.']

>> Bigrams are: 
 [('The', 'activation'), ('activation', 'links'), ('links', 'guided'), ('guided', 'assigning'), ('assigning', 'differ-'), ('differ-', 'ent'), ('ent', 'strengths'), ('strengths', 'different'), ('different', 'observations'), ('observations', 'goals'), ('goals', ','), (',', 'reflecting'), ('reflecting', 'relative'), ('relative', 'importance'), ('importance', '('), ('(', 'utility'), ('utility', ')'), (')', '.')]

>> Trigrams are: 
 [('The', 'activation', 'links'), ('activation', 'links', 'guided'), ('links', 'guided', 'assigning'), ('guided', 'assigning', 'differ-'), ('assigning', 'differ-', 'ent'), ('differ-', 'ent', 'strengths'), ('ent', 'strengths', 'different'), ('strengths', 'different', 'observations'), ('different', 'observations', 'goals'), ('observations', 'goals', ','), ('goals', ',', 'reflecting'), (',', 'reflecting', 'relative'), ('reflecting', 'relative', 'importance'), ('relative', 'importance', '('), ('importance', '(', 'utility'), ('(', 'utility', ')'), ('utility', ')', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('activation', 'NN'), ('links', 'NNS'), ('guided', 'VBD'), ('assigning', 'VBG'), ('differ-', 'JJ'), ('ent', 'JJ'), ('strengths', 'NNS'), ('different', 'JJ'), ('observations', 'NNS'), ('goals', 'NNS'), (',', ','), ('reflecting', 'VBG'), ('relative', 'JJ'), ('importance', 'NN'), ('(', '('), ('utility', 'NN'), (')', ')'), ('.', '.')]

 (S
  (NP The/DT activation/NN links/NNS)
  guided/VBD
  assigning/VBG
  (NP differ-/JJ ent/JJ strengths/NNS)
  (NP different/JJ observations/NNS goals/NNS)
  ,/,
  reflecting/VBG
  (NP relative/JJ importance/NN)
  (/(
  (NP utility/NN)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['The activation links', 'differ- ent strengths', 'different observations goals', 'relative importance', 'utility']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('activation', 'activ'), ('links', 'link'), ('guided', 'guid'), ('assigning', 'assign'), ('differ-', 'differ-'), ('ent', 'ent'), ('strengths', 'strength'), ('different', 'differ'), ('observations', 'observ'), ('goals', 'goal'), (',', ','), ('reflecting', 'reflect'), ('relative', 'rel'), ('importance', 'import'), ('(', '('), ('utility', 'util'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('activation', 'activ'), ('links', 'link'), ('guided', 'guid'), ('assigning', 'assign'), ('differ-', 'differ-'), ('ent', 'ent'), ('strengths', 'strength'), ('different', 'differ'), ('observations', 'observ'), ('goals', 'goal'), (',', ','), ('reflecting', 'reflect'), ('relative', 'relat'), ('importance', 'import'), ('(', '('), ('utility', 'util'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('activation', 'activation'), ('links', 'link'), ('guided', 'guided'), ('assigning', 'assigning'), ('differ-', 'differ-'), ('ent', 'ent'), ('strengths', 'strength'), ('different', 'different'), ('observations', 'observation'), ('goals', 'goal'), (',', ','), ('reflecting', 'reflecting'), ('relative', 'relative'), ('importance', 'importance'), ('(', '('), ('utility', 'utility'), (')', ')'), ('.', '.')]



============================ Sentence 176 =============================

In addition, different  weights can be assigned to different links, reflecting statisti- cal information about how often their activation has con- tributed to useful outcomes in the past. 


>> Tokens are: 
 ['In', 'addition', ',', 'different', 'weights', 'assigned', 'different', 'links', ',', 'reflecting', 'statisti-', 'cal', 'information', 'often', 'activation', 'con-', 'tributed', 'useful', 'outcomes', 'past', '.']

>> Bigrams are: 
 [('In', 'addition'), ('addition', ','), (',', 'different'), ('different', 'weights'), ('weights', 'assigned'), ('assigned', 'different'), ('different', 'links'), ('links', ','), (',', 'reflecting'), ('reflecting', 'statisti-'), ('statisti-', 'cal'), ('cal', 'information'), ('information', 'often'), ('often', 'activation'), ('activation', 'con-'), ('con-', 'tributed'), ('tributed', 'useful'), ('useful', 'outcomes'), ('outcomes', 'past'), ('past', '.')]

>> Trigrams are: 
 [('In', 'addition', ','), ('addition', ',', 'different'), (',', 'different', 'weights'), ('different', 'weights', 'assigned'), ('weights', 'assigned', 'different'), ('assigned', 'different', 'links'), ('different', 'links', ','), ('links', ',', 'reflecting'), (',', 'reflecting', 'statisti-'), ('reflecting', 'statisti-', 'cal'), ('statisti-', 'cal', 'information'), ('cal', 'information', 'often'), ('information', 'often', 'activation'), ('often', 'activation', 'con-'), ('activation', 'con-', 'tributed'), ('con-', 'tributed', 'useful'), ('tributed', 'useful', 'outcomes'), ('useful', 'outcomes', 'past'), ('outcomes', 'past', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('addition', 'NN'), (',', ','), ('different', 'JJ'), ('weights', 'NNS'), ('assigned', 'VBN'), ('different', 'JJ'), ('links', 'NNS'), (',', ','), ('reflecting', 'VBG'), ('statisti-', 'JJ'), ('cal', 'JJ'), ('information', 'NN'), ('often', 'RB'), ('activation', 'JJ'), ('con-', 'NNS'), ('tributed', 'VBN'), ('useful', 'JJ'), ('outcomes', 'NNS'), ('past', 'IN'), ('.', '.')]

 (S
  In/IN
  (NP addition/NN)
  ,/,
  (NP different/JJ weights/NNS)
  assigned/VBN
  (NP different/JJ links/NNS)
  ,/,
  reflecting/VBG
  (NP statisti-/JJ cal/JJ information/NN)
  often/RB
  (NP activation/JJ con-/NNS)
  tributed/VBN
  (NP useful/JJ outcomes/NNS)
  past/IN
  ./.) 


>> Noun Phrases are: 
 ['addition', 'different weights', 'different links', 'statisti- cal information', 'activation con-', 'useful outcomes']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('addition', 'addit'), (',', ','), ('different', 'differ'), ('weights', 'weight'), ('assigned', 'assign'), ('different', 'differ'), ('links', 'link'), (',', ','), ('reflecting', 'reflect'), ('statisti-', 'statisti-'), ('cal', 'cal'), ('information', 'inform'), ('often', 'often'), ('activation', 'activ'), ('con-', 'con-'), ('tributed', 'tribut'), ('useful', 'use'), ('outcomes', 'outcom'), ('past', 'past'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('addition', 'addit'), (',', ','), ('different', 'differ'), ('weights', 'weight'), ('assigned', 'assign'), ('different', 'differ'), ('links', 'link'), (',', ','), ('reflecting', 'reflect'), ('statisti-', 'statisti-'), ('cal', 'cal'), ('information', 'inform'), ('often', 'often'), ('activation', 'activ'), ('con-', 'con-'), ('tributed', 'tribut'), ('useful', 'use'), ('outcomes', 'outcom'), ('past', 'past'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('addition', 'addition'), (',', ','), ('different', 'different'), ('weights', 'weight'), ('assigned', 'assigned'), ('different', 'different'), ('links', 'link'), (',', ','), ('reflecting', 'reflecting'), ('statisti-', 'statisti-'), ('cal', 'cal'), ('information', 'information'), ('often', 'often'), ('activation', 'activation'), ('con-', 'con-'), ('tributed', 'tributed'), ('useful', 'useful'), ('outcomes', 'outcome'), ('past', 'past'), ('.', '.')]



============================ Sentence 177 =============================

Figure 2. 


>> Tokens are: 
 ['Figure', '2', '.']

>> Bigrams are: 
 [('Figure', '2'), ('2', '.')]

>> Trigrams are: 
 [('Figure', '2', '.')]

>> POS Tags are: 
 [('Figure', 'NN'), ('2', 'CD'), ('.', '.')]

 (S (NP Figure/NN) 2/CD ./.) 


>> Noun Phrases are: 
 ['Figure']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Figure', 'figur'), ('2', '2'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Figure', 'figur'), ('2', '2'), ('.', '.')]

>> Lemmatization: 
 [('Figure', 'Figure'), ('2', '2'), ('.', '.')]



============================ Sentence 178 =============================

A simplified connection graph of goals and beliefs. 


>> Tokens are: 
 ['A', 'simplified', 'connection', 'graph', 'goals', 'beliefs', '.']

>> Bigrams are: 
 [('A', 'simplified'), ('simplified', 'connection'), ('connection', 'graph'), ('graph', 'goals'), ('goals', 'beliefs'), ('beliefs', '.')]

>> Trigrams are: 
 [('A', 'simplified', 'connection'), ('simplified', 'connection', 'graph'), ('connection', 'graph', 'goals'), ('graph', 'goals', 'beliefs'), ('goals', 'beliefs', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('simplified', 'JJ'), ('connection', 'NN'), ('graph', 'NN'), ('goals', 'NNS'), ('beliefs', 'NNS'), ('.', '.')]

 (S
  (NP
    A/DT
    simplified/JJ
    connection/NN
    graph/NN
    goals/NNS
    beliefs/NNS)
  ./.) 


>> Noun Phrases are: 
 ['A simplified connection graph goals beliefs']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('simplified', 'simplifi'), ('connection', 'connect'), ('graph', 'graph'), ('goals', 'goal'), ('beliefs', 'belief'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('simplified', 'simplifi'), ('connection', 'connect'), ('graph', 'graph'), ('goals', 'goal'), ('beliefs', 'belief'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('simplified', 'simplified'), ('connection', 'connection'), ('graph', 'graph'), ('goals', 'goal'), ('beliefs', 'belief'), ('.', '.')]



============================ Sentence 179 =============================

No-  tice that only A, F and H are “grounded” in the world. 


>> Tokens are: 
 ['No-', 'tice', 'A', ',', 'F', 'H', '“', 'grounded', '”', 'world', '.']

>> Bigrams are: 
 [('No-', 'tice'), ('tice', 'A'), ('A', ','), (',', 'F'), ('F', 'H'), ('H', '“'), ('“', 'grounded'), ('grounded', '”'), ('”', 'world'), ('world', '.')]

>> Trigrams are: 
 [('No-', 'tice', 'A'), ('tice', 'A', ','), ('A', ',', 'F'), (',', 'F', 'H'), ('F', 'H', '“'), ('H', '“', 'grounded'), ('“', 'grounded', '”'), ('grounded', '”', 'world'), ('”', 'world', '.')]

>> POS Tags are: 
 [('No-', 'JJ'), ('tice', 'NN'), ('A', 'NNP'), (',', ','), ('F', 'NNP'), ('H', 'NNP'), ('“', 'NNP'), ('grounded', 'VBD'), ('”', 'JJ'), ('world', 'NN'), ('.', '.')]

 (S
  (NP No-/JJ tice/NN A/NNP)
  ,/,
  (NP F/NNP H/NNP “/NNP)
  grounded/VBD
  (NP ”/JJ world/NN)
  ./.) 


>> Noun Phrases are: 
 ['No- tice A', 'F H “', '” world']

>> Named Entities are: 
 [('PERSON', 'F H')] 

>> Stemming using Porter Stemmer: 
 [('No-', 'no-'), ('tice', 'tice'), ('A', 'a'), (',', ','), ('F', 'f'), ('H', 'h'), ('“', '“'), ('grounded', 'ground'), ('”', '”'), ('world', 'world'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('No-', 'no-'), ('tice', 'tice'), ('A', 'a'), (',', ','), ('F', 'f'), ('H', 'h'), ('“', '“'), ('grounded', 'ground'), ('”', '”'), ('world', 'world'), ('.', '.')]

>> Lemmatization: 
 [('No-', 'No-'), ('tice', 'tice'), ('A', 'A'), (',', ','), ('F', 'F'), ('H', 'H'), ('“', '“'), ('grounded', 'grounded'), ('”', '”'), ('world', 'world'), ('.', '.')]



============================ Sentence 180 =============================

B, C and D   are mental concepts that help the agent organize its thoughts and   regulate its behaviour. 


>> Tokens are: 
 ['B', ',', 'C', 'D', 'mental', 'concepts', 'help', 'agent', 'organize', 'thoughts', 'regulate', 'behaviour', '.']

>> Bigrams are: 
 [('B', ','), (',', 'C'), ('C', 'D'), ('D', 'mental'), ('mental', 'concepts'), ('concepts', 'help'), ('help', 'agent'), ('agent', 'organize'), ('organize', 'thoughts'), ('thoughts', 'regulate'), ('regulate', 'behaviour'), ('behaviour', '.')]

>> Trigrams are: 
 [('B', ',', 'C'), (',', 'C', 'D'), ('C', 'D', 'mental'), ('D', 'mental', 'concepts'), ('mental', 'concepts', 'help'), ('concepts', 'help', 'agent'), ('help', 'agent', 'organize'), ('agent', 'organize', 'thoughts'), ('organize', 'thoughts', 'regulate'), ('thoughts', 'regulate', 'behaviour'), ('regulate', 'behaviour', '.')]

>> POS Tags are: 
 [('B', 'NNP'), (',', ','), ('C', 'NNP'), ('D', 'NNP'), ('mental', 'JJ'), ('concepts', 'NNS'), ('help', 'VBP'), ('agent', 'VB'), ('organize', 'VB'), ('thoughts', 'NNS'), ('regulate', 'VB'), ('behaviour', 'NNS'), ('.', '.')]

 (S
  (NP B/NNP)
  ,/,
  (NP C/NNP D/NNP)
  (NP mental/JJ concepts/NNS)
  help/VBP
  agent/VB
  organize/VB
  (NP thoughts/NNS)
  regulate/VB
  (NP behaviour/NNS)
  ./.) 


>> Noun Phrases are: 
 ['B', 'C D', 'mental concepts', 'thoughts', 'behaviour']

>> Named Entities are: 
 [('PERSON', 'C D')] 

>> Stemming using Porter Stemmer: 
 [('B', 'b'), (',', ','), ('C', 'c'), ('D', 'd'), ('mental', 'mental'), ('concepts', 'concept'), ('help', 'help'), ('agent', 'agent'), ('organize', 'organ'), ('thoughts', 'thought'), ('regulate', 'regul'), ('behaviour', 'behaviour'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('B', 'b'), (',', ','), ('C', 'c'), ('D', 'd'), ('mental', 'mental'), ('concepts', 'concept'), ('help', 'help'), ('agent', 'agent'), ('organize', 'organ'), ('thoughts', 'thought'), ('regulate', 'regul'), ('behaviour', 'behaviour'), ('.', '.')]

>> Lemmatization: 
 [('B', 'B'), (',', ','), ('C', 'C'), ('D', 'D'), ('mental', 'mental'), ('concepts', 'concept'), ('help', 'help'), ('agent', 'agent'), ('organize', 'organize'), ('thoughts', 'thought'), ('regulate', 'regulate'), ('behaviour', 'behaviour'), ('.', '.')]



============================ Sentence 181 =============================

The status of E and G is unspecified. 


>> Tokens are: 
 ['The', 'status', 'E', 'G', 'unspecified', '.']

>> Bigrams are: 
 [('The', 'status'), ('status', 'E'), ('E', 'G'), ('G', 'unspecified'), ('unspecified', '.')]

>> Trigrams are: 
 [('The', 'status', 'E'), ('status', 'E', 'G'), ('E', 'G', 'unspecified'), ('G', 'unspecified', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('status', 'NN'), ('E', 'NNP'), ('G', 'NNP'), ('unspecified', 'VBD'), ('.', '.')]

 (S (NP The/DT status/NN E/NNP G/NNP) unspecified/VBD ./.) 


>> Noun Phrases are: 
 ['The status E G']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('status', 'statu'), ('E', 'e'), ('G', 'g'), ('unspecified', 'unspecifi'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('status', 'status'), ('E', 'e'), ('G', 'g'), ('unspecified', 'unspecifi'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('status', 'status'), ('E', 'E'), ('G', 'G'), ('unspecified', 'unspecified'), ('.', '.')]



============================ Sentence 182 =============================

Notice   too that the same effect can be obtained more directly by means of   the lower-level goal if A then ((E and F) or (G and H)). 


>> Tokens are: 
 ['Notice', 'effect', 'obtained', 'directly', 'means', 'lower-level', 'goal', 'A', '(', '(', 'E', 'F', ')', '(', 'G', 'H', ')', ')', '.']

>> Bigrams are: 
 [('Notice', 'effect'), ('effect', 'obtained'), ('obtained', 'directly'), ('directly', 'means'), ('means', 'lower-level'), ('lower-level', 'goal'), ('goal', 'A'), ('A', '('), ('(', '('), ('(', 'E'), ('E', 'F'), ('F', ')'), (')', '('), ('(', 'G'), ('G', 'H'), ('H', ')'), (')', ')'), (')', '.')]

>> Trigrams are: 
 [('Notice', 'effect', 'obtained'), ('effect', 'obtained', 'directly'), ('obtained', 'directly', 'means'), ('directly', 'means', 'lower-level'), ('means', 'lower-level', 'goal'), ('lower-level', 'goal', 'A'), ('goal', 'A', '('), ('A', '(', '('), ('(', '(', 'E'), ('(', 'E', 'F'), ('E', 'F', ')'), ('F', ')', '('), (')', '(', 'G'), ('(', 'G', 'H'), ('G', 'H', ')'), ('H', ')', ')'), (')', ')', '.')]

>> POS Tags are: 
 [('Notice', 'NNP'), ('effect', 'NN'), ('obtained', 'VBN'), ('directly', 'RB'), ('means', 'VBZ'), ('lower-level', 'JJ'), ('goal', 'NN'), ('A', 'NNP'), ('(', '('), ('(', '('), ('E', 'NNP'), ('F', 'NNP'), (')', ')'), ('(', '('), ('G', 'NNP'), ('H', 'NNP'), (')', ')'), (')', ')'), ('.', '.')]

 (S
  (NP Notice/NNP effect/NN)
  obtained/VBN
  directly/RB
  means/VBZ
  (NP lower-level/JJ goal/NN A/NNP)
  (/(
  (/(
  (NP E/NNP F/NNP)
  )/)
  (/(
  (NP G/NNP H/NNP)
  )/)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['Notice effect', 'lower-level goal A', 'E F', 'G H']

>> Named Entities are: 
 [('GPE', 'Notice')] 

>> Stemming using Porter Stemmer: 
 [('Notice', 'notic'), ('effect', 'effect'), ('obtained', 'obtain'), ('directly', 'directli'), ('means', 'mean'), ('lower-level', 'lower-level'), ('goal', 'goal'), ('A', 'a'), ('(', '('), ('(', '('), ('E', 'e'), ('F', 'f'), (')', ')'), ('(', '('), ('G', 'g'), ('H', 'h'), (')', ')'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Notice', 'notic'), ('effect', 'effect'), ('obtained', 'obtain'), ('directly', 'direct'), ('means', 'mean'), ('lower-level', 'lower-level'), ('goal', 'goal'), ('A', 'a'), ('(', '('), ('(', '('), ('E', 'e'), ('F', 'f'), (')', ')'), ('(', '('), ('G', 'g'), ('H', 'h'), (')', ')'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('Notice', 'Notice'), ('effect', 'effect'), ('obtained', 'obtained'), ('directly', 'directly'), ('means', 'mean'), ('lower-level', 'lower-level'), ('goal', 'goal'), ('A', 'A'), ('(', '('), ('(', '('), ('E', 'E'), ('F', 'F'), (')', ')'), ('(', '('), ('G', 'G'), ('H', 'H'), (')', ')'), (')', ')'), ('.', '.')]



============================ Sentence 183 =============================

The strength of observations and goals can be propagated  throughout the graph in proportion to the weights on the  links. 


>> Tokens are: 
 ['The', 'strength', 'observations', 'goals', 'propagated', 'throughout', 'graph', 'proportion', 'weights', 'links', '.']

>> Bigrams are: 
 [('The', 'strength'), ('strength', 'observations'), ('observations', 'goals'), ('goals', 'propagated'), ('propagated', 'throughout'), ('throughout', 'graph'), ('graph', 'proportion'), ('proportion', 'weights'), ('weights', 'links'), ('links', '.')]

>> Trigrams are: 
 [('The', 'strength', 'observations'), ('strength', 'observations', 'goals'), ('observations', 'goals', 'propagated'), ('goals', 'propagated', 'throughout'), ('propagated', 'throughout', 'graph'), ('throughout', 'graph', 'proportion'), ('graph', 'proportion', 'weights'), ('proportion', 'weights', 'links'), ('weights', 'links', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('strength', 'NN'), ('observations', 'NNS'), ('goals', 'NNS'), ('propagated', 'VBD'), ('throughout', 'IN'), ('graph', 'JJ'), ('proportion', 'NN'), ('weights', 'NNS'), ('links', 'NNS'), ('.', '.')]

 (S
  (NP The/DT strength/NN observations/NNS goals/NNS)
  propagated/VBD
  throughout/IN
  (NP graph/JJ proportion/NN weights/NNS links/NNS)
  ./.) 


>> Noun Phrases are: 
 ['The strength observations goals', 'graph proportion weights links']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('strength', 'strength'), ('observations', 'observ'), ('goals', 'goal'), ('propagated', 'propag'), ('throughout', 'throughout'), ('graph', 'graph'), ('proportion', 'proport'), ('weights', 'weight'), ('links', 'link'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('strength', 'strength'), ('observations', 'observ'), ('goals', 'goal'), ('propagated', 'propag'), ('throughout', 'throughout'), ('graph', 'graph'), ('proportion', 'proport'), ('weights', 'weight'), ('links', 'link'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('strength', 'strength'), ('observations', 'observation'), ('goals', 'goal'), ('propagated', 'propagated'), ('throughout', 'throughout'), ('graph', 'graph'), ('proportion', 'proportion'), ('weights', 'weight'), ('links', 'link'), ('.', '.')]



============================ Sentence 184 =============================

The resulting proof procedure, which activates links  with the current highest weighted strength, is similar to the  activation networks of [Maes, 1990]. 


>> Tokens are: 
 ['The', 'resulting', 'proof', 'procedure', ',', 'activates', 'links', 'current', 'highest', 'weighted', 'strength', ',', 'similar', 'activation', 'networks', '[', 'Maes', ',', '1990', ']', '.']

>> Bigrams are: 
 [('The', 'resulting'), ('resulting', 'proof'), ('proof', 'procedure'), ('procedure', ','), (',', 'activates'), ('activates', 'links'), ('links', 'current'), ('current', 'highest'), ('highest', 'weighted'), ('weighted', 'strength'), ('strength', ','), (',', 'similar'), ('similar', 'activation'), ('activation', 'networks'), ('networks', '['), ('[', 'Maes'), ('Maes', ','), (',', '1990'), ('1990', ']'), (']', '.')]

>> Trigrams are: 
 [('The', 'resulting', 'proof'), ('resulting', 'proof', 'procedure'), ('proof', 'procedure', ','), ('procedure', ',', 'activates'), (',', 'activates', 'links'), ('activates', 'links', 'current'), ('links', 'current', 'highest'), ('current', 'highest', 'weighted'), ('highest', 'weighted', 'strength'), ('weighted', 'strength', ','), ('strength', ',', 'similar'), (',', 'similar', 'activation'), ('similar', 'activation', 'networks'), ('activation', 'networks', '['), ('networks', '[', 'Maes'), ('[', 'Maes', ','), ('Maes', ',', '1990'), (',', '1990', ']'), ('1990', ']', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('resulting', 'VBG'), ('proof', 'JJ'), ('procedure', 'NN'), (',', ','), ('activates', 'VBZ'), ('links', 'NNS'), ('current', 'JJ'), ('highest', 'JJS'), ('weighted', 'JJ'), ('strength', 'NN'), (',', ','), ('similar', 'JJ'), ('activation', 'NN'), ('networks', 'NNS'), ('[', 'VBP'), ('Maes', 'NNP'), (',', ','), ('1990', 'CD'), (']', 'NN'), ('.', '.')]

 (S
  The/DT
  resulting/VBG
  (NP proof/JJ procedure/NN)
  ,/,
  activates/VBZ
  (NP links/NNS)
  current/JJ
  highest/JJS
  (NP weighted/JJ strength/NN)
  ,/,
  (NP similar/JJ activation/NN networks/NNS)
  [/VBP
  (NP Maes/NNP)
  ,/,
  1990/CD
  (NP ]/NN)
  ./.) 


>> Noun Phrases are: 
 ['proof procedure', 'links', 'weighted strength', 'similar activation networks', 'Maes', ']']

>> Named Entities are: 
 [('PERSON', 'Maes')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('resulting', 'result'), ('proof', 'proof'), ('procedure', 'procedur'), (',', ','), ('activates', 'activ'), ('links', 'link'), ('current', 'current'), ('highest', 'highest'), ('weighted', 'weight'), ('strength', 'strength'), (',', ','), ('similar', 'similar'), ('activation', 'activ'), ('networks', 'network'), ('[', '['), ('Maes', 'mae'), (',', ','), ('1990', '1990'), (']', ']'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('resulting', 'result'), ('proof', 'proof'), ('procedure', 'procedur'), (',', ','), ('activates', 'activ'), ('links', 'link'), ('current', 'current'), ('highest', 'highest'), ('weighted', 'weight'), ('strength', 'strength'), (',', ','), ('similar', 'similar'), ('activation', 'activ'), ('networks', 'network'), ('[', '['), ('Maes', 'mae'), (',', ','), ('1990', '1990'), (']', ']'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('resulting', 'resulting'), ('proof', 'proof'), ('procedure', 'procedure'), (',', ','), ('activates', 'activates'), ('links', 'link'), ('current', 'current'), ('highest', 'highest'), ('weighted', 'weighted'), ('strength', 'strength'), (',', ','), ('similar', 'similar'), ('activation', 'activation'), ('networks', 'network'), ('[', '['), ('Maes', 'Maes'), (',', ','), ('1990', '1990'), (']', ']'), ('.', '.')]



============================ Sentence 185 =============================

Moreover, it automati- cally implements an ALP style of forward and backward  reasoning, combined with a form of best-first search. 


>> Tokens are: 
 ['Moreover', ',', 'automati-', 'cally', 'implements', 'ALP', 'style', 'forward', 'backward', 'reasoning', ',', 'combined', 'form', 'best-first', 'search', '.']

>> Bigrams are: 
 [('Moreover', ','), (',', 'automati-'), ('automati-', 'cally'), ('cally', 'implements'), ('implements', 'ALP'), ('ALP', 'style'), ('style', 'forward'), ('forward', 'backward'), ('backward', 'reasoning'), ('reasoning', ','), (',', 'combined'), ('combined', 'form'), ('form', 'best-first'), ('best-first', 'search'), ('search', '.')]

>> Trigrams are: 
 [('Moreover', ',', 'automati-'), (',', 'automati-', 'cally'), ('automati-', 'cally', 'implements'), ('cally', 'implements', 'ALP'), ('implements', 'ALP', 'style'), ('ALP', 'style', 'forward'), ('style', 'forward', 'backward'), ('forward', 'backward', 'reasoning'), ('backward', 'reasoning', ','), ('reasoning', ',', 'combined'), (',', 'combined', 'form'), ('combined', 'form', 'best-first'), ('form', 'best-first', 'search'), ('best-first', 'search', '.')]

>> POS Tags are: 
 [('Moreover', 'RB'), (',', ','), ('automati-', 'JJ'), ('cally', 'NN'), ('implements', 'NNS'), ('ALP', 'NNP'), ('style', 'NN'), ('forward', 'RB'), ('backward', 'RB'), ('reasoning', 'VBG'), (',', ','), ('combined', 'VBN'), ('form', 'NN'), ('best-first', 'JJ'), ('search', 'NN'), ('.', '.')]

 (S
  Moreover/RB
  ,/,
  (NP automati-/JJ cally/NN implements/NNS ALP/NNP style/NN)
  forward/RB
  backward/RB
  reasoning/VBG
  ,/,
  combined/VBN
  (NP form/NN)
  (NP best-first/JJ search/NN)
  ./.) 


>> Noun Phrases are: 
 ['automati- cally implements ALP style', 'form', 'best-first search']

>> Named Entities are: 
 [('ORGANIZATION', 'ALP')] 

>> Stemming using Porter Stemmer: 
 [('Moreover', 'moreov'), (',', ','), ('automati-', 'automati-'), ('cally', 'calli'), ('implements', 'implement'), ('ALP', 'alp'), ('style', 'style'), ('forward', 'forward'), ('backward', 'backward'), ('reasoning', 'reason'), (',', ','), ('combined', 'combin'), ('form', 'form'), ('best-first', 'best-first'), ('search', 'search'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Moreover', 'moreov'), (',', ','), ('automati-', 'automati-'), ('cally', 'calli'), ('implements', 'implement'), ('ALP', 'alp'), ('style', 'style'), ('forward', 'forward'), ('backward', 'backward'), ('reasoning', 'reason'), (',', ','), ('combined', 'combin'), ('form', 'form'), ('best-first', 'best-first'), ('search', 'search'), ('.', '.')]

>> Lemmatization: 
 [('Moreover', 'Moreover'), (',', ','), ('automati-', 'automati-'), ('cally', 'cally'), ('implements', 'implement'), ('ALP', 'ALP'), ('style', 'style'), ('forward', 'forward'), ('backward', 'backward'), ('reasoning', 'reasoning'), (',', ','), ('combined', 'combined'), ('form', 'form'), ('best-first', 'best-first'), ('search', 'search'), ('.', '.')]



============================ Sentence 186 =============================

The connection graph model of thinking can give the mis- leading impression that thinking does not have a linguistic  or logical character at all. 


>> Tokens are: 
 ['The', 'connection', 'graph', 'model', 'thinking', 'give', 'mis-', 'leading', 'impression', 'thinking', 'linguistic', 'logical', 'character', '.']

>> Bigrams are: 
 [('The', 'connection'), ('connection', 'graph'), ('graph', 'model'), ('model', 'thinking'), ('thinking', 'give'), ('give', 'mis-'), ('mis-', 'leading'), ('leading', 'impression'), ('impression', 'thinking'), ('thinking', 'linguistic'), ('linguistic', 'logical'), ('logical', 'character'), ('character', '.')]

>> Trigrams are: 
 [('The', 'connection', 'graph'), ('connection', 'graph', 'model'), ('graph', 'model', 'thinking'), ('model', 'thinking', 'give'), ('thinking', 'give', 'mis-'), ('give', 'mis-', 'leading'), ('mis-', 'leading', 'impression'), ('leading', 'impression', 'thinking'), ('impression', 'thinking', 'linguistic'), ('thinking', 'linguistic', 'logical'), ('linguistic', 'logical', 'character'), ('logical', 'character', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('connection', 'NN'), ('graph', 'NN'), ('model', 'NN'), ('thinking', 'VBG'), ('give', 'JJ'), ('mis-', 'JJ'), ('leading', 'VBG'), ('impression', 'NN'), ('thinking', 'VBG'), ('linguistic', 'JJ'), ('logical', 'JJ'), ('character', 'NN'), ('.', '.')]

 (S
  (NP The/DT connection/NN graph/NN model/NN)
  thinking/VBG
  give/JJ
  mis-/JJ
  leading/VBG
  (NP impression/NN)
  thinking/VBG
  (NP linguistic/JJ logical/JJ character/NN)
  ./.) 


>> Noun Phrases are: 
 ['The connection graph model', 'impression', 'linguistic logical character']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('connection', 'connect'), ('graph', 'graph'), ('model', 'model'), ('thinking', 'think'), ('give', 'give'), ('mis-', 'mis-'), ('leading', 'lead'), ('impression', 'impress'), ('thinking', 'think'), ('linguistic', 'linguist'), ('logical', 'logic'), ('character', 'charact'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('connection', 'connect'), ('graph', 'graph'), ('model', 'model'), ('thinking', 'think'), ('give', 'give'), ('mis-', 'mis-'), ('leading', 'lead'), ('impression', 'impress'), ('thinking', 'think'), ('linguistic', 'linguist'), ('logical', 'logic'), ('character', 'charact'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('connection', 'connection'), ('graph', 'graph'), ('model', 'model'), ('thinking', 'thinking'), ('give', 'give'), ('mis-', 'mis-'), ('leading', 'leading'), ('impression', 'impression'), ('thinking', 'thinking'), ('linguistic', 'linguistic'), ('logical', 'logical'), ('character', 'character'), ('.', '.')]



============================ Sentence 187 =============================

But the difference between think- ing in connection graphs and reasoning in clausal logic is  nothing other than the conventional computer science dis- tinction between an optimized, low-level implementation,  which is close to the hardware, and a high-level representa- tion, which is close to the problem domain. 


>> Tokens are: 
 ['But', 'difference', 'think-', 'ing', 'connection', 'graphs', 'reasoning', 'clausal', 'logic', 'nothing', 'conventional', 'computer', 'science', 'dis-', 'tinction', 'optimized', ',', 'low-level', 'implementation', ',', 'close', 'hardware', ',', 'high-level', 'representa-', 'tion', ',', 'close', 'problem', 'domain', '.']

>> Bigrams are: 
 [('But', 'difference'), ('difference', 'think-'), ('think-', 'ing'), ('ing', 'connection'), ('connection', 'graphs'), ('graphs', 'reasoning'), ('reasoning', 'clausal'), ('clausal', 'logic'), ('logic', 'nothing'), ('nothing', 'conventional'), ('conventional', 'computer'), ('computer', 'science'), ('science', 'dis-'), ('dis-', 'tinction'), ('tinction', 'optimized'), ('optimized', ','), (',', 'low-level'), ('low-level', 'implementation'), ('implementation', ','), (',', 'close'), ('close', 'hardware'), ('hardware', ','), (',', 'high-level'), ('high-level', 'representa-'), ('representa-', 'tion'), ('tion', ','), (',', 'close'), ('close', 'problem'), ('problem', 'domain'), ('domain', '.')]

>> Trigrams are: 
 [('But', 'difference', 'think-'), ('difference', 'think-', 'ing'), ('think-', 'ing', 'connection'), ('ing', 'connection', 'graphs'), ('connection', 'graphs', 'reasoning'), ('graphs', 'reasoning', 'clausal'), ('reasoning', 'clausal', 'logic'), ('clausal', 'logic', 'nothing'), ('logic', 'nothing', 'conventional'), ('nothing', 'conventional', 'computer'), ('conventional', 'computer', 'science'), ('computer', 'science', 'dis-'), ('science', 'dis-', 'tinction'), ('dis-', 'tinction', 'optimized'), ('tinction', 'optimized', ','), ('optimized', ',', 'low-level'), (',', 'low-level', 'implementation'), ('low-level', 'implementation', ','), ('implementation', ',', 'close'), (',', 'close', 'hardware'), ('close', 'hardware', ','), ('hardware', ',', 'high-level'), (',', 'high-level', 'representa-'), ('high-level', 'representa-', 'tion'), ('representa-', 'tion', ','), ('tion', ',', 'close'), (',', 'close', 'problem'), ('close', 'problem', 'domain'), ('problem', 'domain', '.')]

>> POS Tags are: 
 [('But', 'CC'), ('difference', 'NN'), ('think-', 'JJ'), ('ing', 'JJ'), ('connection', 'NN'), ('graphs', 'NN'), ('reasoning', 'VBG'), ('clausal', 'JJ'), ('logic', 'JJ'), ('nothing', 'NN'), ('conventional', 'JJ'), ('computer', 'NN'), ('science', 'NN'), ('dis-', 'JJ'), ('tinction', 'NN'), ('optimized', 'VBN'), (',', ','), ('low-level', 'JJ'), ('implementation', 'NN'), (',', ','), ('close', 'RB'), ('hardware', 'NN'), (',', ','), ('high-level', 'JJ'), ('representa-', 'JJ'), ('tion', 'NN'), (',', ','), ('close', 'JJ'), ('problem', 'NN'), ('domain', 'NN'), ('.', '.')]

 (S
  But/CC
  (NP difference/NN)
  (NP think-/JJ ing/JJ connection/NN graphs/NN)
  reasoning/VBG
  (NP clausal/JJ logic/JJ nothing/NN)
  (NP conventional/JJ computer/NN science/NN)
  (NP dis-/JJ tinction/NN)
  optimized/VBN
  ,/,
  (NP low-level/JJ implementation/NN)
  ,/,
  close/RB
  (NP hardware/NN)
  ,/,
  (NP high-level/JJ representa-/JJ tion/NN)
  ,/,
  (NP close/JJ problem/NN domain/NN)
  ./.) 


>> Noun Phrases are: 
 ['difference', 'think- ing connection graphs', 'clausal logic nothing', 'conventional computer science', 'dis- tinction', 'low-level implementation', 'hardware', 'high-level representa- tion', 'close problem domain']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('But', 'but'), ('difference', 'differ'), ('think-', 'think-'), ('ing', 'ing'), ('connection', 'connect'), ('graphs', 'graph'), ('reasoning', 'reason'), ('clausal', 'clausal'), ('logic', 'logic'), ('nothing', 'noth'), ('conventional', 'convent'), ('computer', 'comput'), ('science', 'scienc'), ('dis-', 'dis-'), ('tinction', 'tinction'), ('optimized', 'optim'), (',', ','), ('low-level', 'low-level'), ('implementation', 'implement'), (',', ','), ('close', 'close'), ('hardware', 'hardwar'), (',', ','), ('high-level', 'high-level'), ('representa-', 'representa-'), ('tion', 'tion'), (',', ','), ('close', 'close'), ('problem', 'problem'), ('domain', 'domain'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('But', 'but'), ('difference', 'differ'), ('think-', 'think-'), ('ing', 'ing'), ('connection', 'connect'), ('graphs', 'graph'), ('reasoning', 'reason'), ('clausal', 'clausal'), ('logic', 'logic'), ('nothing', 'noth'), ('conventional', 'convent'), ('computer', 'comput'), ('science', 'scienc'), ('dis-', 'dis-'), ('tinction', 'tinction'), ('optimized', 'optim'), (',', ','), ('low-level', 'low-level'), ('implementation', 'implement'), (',', ','), ('close', 'close'), ('hardware', 'hardwar'), (',', ','), ('high-level', 'high-level'), ('representa-', 'representa-'), ('tion', 'tion'), (',', ','), ('close', 'close'), ('problem', 'problem'), ('domain', 'domain'), ('.', '.')]

>> Lemmatization: 
 [('But', 'But'), ('difference', 'difference'), ('think-', 'think-'), ('ing', 'ing'), ('connection', 'connection'), ('graphs', 'graph'), ('reasoning', 'reasoning'), ('clausal', 'clausal'), ('logic', 'logic'), ('nothing', 'nothing'), ('conventional', 'conventional'), ('computer', 'computer'), ('science', 'science'), ('dis-', 'dis-'), ('tinction', 'tinction'), ('optimized', 'optimized'), (',', ','), ('low-level', 'low-level'), ('implementation', 'implementation'), (',', ','), ('close', 'close'), ('hardware', 'hardware'), (',', ','), ('high-level', 'high-level'), ('representa-', 'representa-'), ('tion', 'tion'), (',', ','), ('close', 'close'), ('problem', 'problem'), ('domain', 'domain'), ('.', '.')]



============================ Sentence 188 =============================

The connection graph model of the mind adds further  support to the argument that thinking takes place in a LOT  that is independent from natural language. 


>> Tokens are: 
 ['The', 'connection', 'graph', 'model', 'mind', 'adds', 'support', 'argument', 'thinking', 'takes', 'place', 'LOT', 'independent', 'natural', 'language', '.']

>> Bigrams are: 
 [('The', 'connection'), ('connection', 'graph'), ('graph', 'model'), ('model', 'mind'), ('mind', 'adds'), ('adds', 'support'), ('support', 'argument'), ('argument', 'thinking'), ('thinking', 'takes'), ('takes', 'place'), ('place', 'LOT'), ('LOT', 'independent'), ('independent', 'natural'), ('natural', 'language'), ('language', '.')]

>> Trigrams are: 
 [('The', 'connection', 'graph'), ('connection', 'graph', 'model'), ('graph', 'model', 'mind'), ('model', 'mind', 'adds'), ('mind', 'adds', 'support'), ('adds', 'support', 'argument'), ('support', 'argument', 'thinking'), ('argument', 'thinking', 'takes'), ('thinking', 'takes', 'place'), ('takes', 'place', 'LOT'), ('place', 'LOT', 'independent'), ('LOT', 'independent', 'natural'), ('independent', 'natural', 'language'), ('natural', 'language', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('connection', 'NN'), ('graph', 'NN'), ('model', 'NN'), ('mind', 'NN'), ('adds', 'VBZ'), ('support', 'NN'), ('argument', 'NN'), ('thinking', 'VBG'), ('takes', 'VBZ'), ('place', 'NN'), ('LOT', 'NNP'), ('independent', 'JJ'), ('natural', 'JJ'), ('language', 'NN'), ('.', '.')]

 (S
  (NP The/DT connection/NN graph/NN model/NN mind/NN)
  adds/VBZ
  (NP support/NN argument/NN)
  thinking/VBG
  takes/VBZ
  (NP place/NN LOT/NNP)
  (NP independent/JJ natural/JJ language/NN)
  ./.) 


>> Noun Phrases are: 
 ['The connection graph model mind', 'support argument', 'place LOT', 'independent natural language']

>> Named Entities are: 
 [('ORGANIZATION', 'LOT')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('connection', 'connect'), ('graph', 'graph'), ('model', 'model'), ('mind', 'mind'), ('adds', 'add'), ('support', 'support'), ('argument', 'argument'), ('thinking', 'think'), ('takes', 'take'), ('place', 'place'), ('LOT', 'lot'), ('independent', 'independ'), ('natural', 'natur'), ('language', 'languag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('connection', 'connect'), ('graph', 'graph'), ('model', 'model'), ('mind', 'mind'), ('adds', 'add'), ('support', 'support'), ('argument', 'argument'), ('thinking', 'think'), ('takes', 'take'), ('place', 'place'), ('LOT', 'lot'), ('independent', 'independ'), ('natural', 'natur'), ('language', 'languag'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('connection', 'connection'), ('graph', 'graph'), ('model', 'model'), ('mind', 'mind'), ('adds', 'add'), ('support', 'support'), ('argument', 'argument'), ('thinking', 'thinking'), ('takes', 'take'), ('place', 'place'), ('LOT', 'LOT'), ('independent', 'independent'), ('natural', 'natural'), ('language', 'language'), ('.', '.')]



============================ Sentence 189 =============================

The LOT may  facilitate the development of natural language, but it does  not depend upon its prior existence. 


>> Tokens are: 
 ['The', 'LOT', 'may', 'facilitate', 'development', 'natural', 'language', ',', 'depend', 'upon', 'prior', 'existence', '.']

>> Bigrams are: 
 [('The', 'LOT'), ('LOT', 'may'), ('may', 'facilitate'), ('facilitate', 'development'), ('development', 'natural'), ('natural', 'language'), ('language', ','), (',', 'depend'), ('depend', 'upon'), ('upon', 'prior'), ('prior', 'existence'), ('existence', '.')]

>> Trigrams are: 
 [('The', 'LOT', 'may'), ('LOT', 'may', 'facilitate'), ('may', 'facilitate', 'development'), ('facilitate', 'development', 'natural'), ('development', 'natural', 'language'), ('natural', 'language', ','), ('language', ',', 'depend'), (',', 'depend', 'upon'), ('depend', 'upon', 'prior'), ('upon', 'prior', 'existence'), ('prior', 'existence', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('LOT', 'NNP'), ('may', 'MD'), ('facilitate', 'VB'), ('development', 'NN'), ('natural', 'JJ'), ('language', 'NN'), (',', ','), ('depend', 'VBP'), ('upon', 'IN'), ('prior', 'JJ'), ('existence', 'NN'), ('.', '.')]

 (S
  (NP The/DT LOT/NNP)
  may/MD
  facilitate/VB
  (NP development/NN)
  (NP natural/JJ language/NN)
  ,/,
  depend/VBP
  upon/IN
  (NP prior/JJ existence/NN)
  ./.) 


>> Noun Phrases are: 
 ['The LOT', 'development', 'natural language', 'prior existence']

>> Named Entities are: 
 [('ORGANIZATION', 'LOT')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('LOT', 'lot'), ('may', 'may'), ('facilitate', 'facilit'), ('development', 'develop'), ('natural', 'natur'), ('language', 'languag'), (',', ','), ('depend', 'depend'), ('upon', 'upon'), ('prior', 'prior'), ('existence', 'exist'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('LOT', 'lot'), ('may', 'may'), ('facilitate', 'facilit'), ('development', 'develop'), ('natural', 'natur'), ('language', 'languag'), (',', ','), ('depend', 'depend'), ('upon', 'upon'), ('prior', 'prior'), ('existence', 'exist'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('LOT', 'LOT'), ('may', 'may'), ('facilitate', 'facilitate'), ('development', 'development'), ('natural', 'natural'), ('language', 'language'), (',', ','), ('depend', 'depend'), ('upon', 'upon'), ('prior', 'prior'), ('existence', 'existence'), ('.', '.')]



============================ Sentence 190 =============================

The connection graph model also suggests that expressing  thoughts in natural language is like decompiling low-level  programs into higher-level program specifications. 


>> Tokens are: 
 ['The', 'connection', 'graph', 'model', 'also', 'suggests', 'expressing', 'thoughts', 'natural', 'language', 'like', 'decompiling', 'low-level', 'programs', 'higher-level', 'program', 'specifications', '.']

>> Bigrams are: 
 [('The', 'connection'), ('connection', 'graph'), ('graph', 'model'), ('model', 'also'), ('also', 'suggests'), ('suggests', 'expressing'), ('expressing', 'thoughts'), ('thoughts', 'natural'), ('natural', 'language'), ('language', 'like'), ('like', 'decompiling'), ('decompiling', 'low-level'), ('low-level', 'programs'), ('programs', 'higher-level'), ('higher-level', 'program'), ('program', 'specifications'), ('specifications', '.')]

>> Trigrams are: 
 [('The', 'connection', 'graph'), ('connection', 'graph', 'model'), ('graph', 'model', 'also'), ('model', 'also', 'suggests'), ('also', 'suggests', 'expressing'), ('suggests', 'expressing', 'thoughts'), ('expressing', 'thoughts', 'natural'), ('thoughts', 'natural', 'language'), ('natural', 'language', 'like'), ('language', 'like', 'decompiling'), ('like', 'decompiling', 'low-level'), ('decompiling', 'low-level', 'programs'), ('low-level', 'programs', 'higher-level'), ('programs', 'higher-level', 'program'), ('higher-level', 'program', 'specifications'), ('program', 'specifications', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('connection', 'NN'), ('graph', 'NN'), ('model', 'NN'), ('also', 'RB'), ('suggests', 'VBZ'), ('expressing', 'VBG'), ('thoughts', 'NNS'), ('natural', 'JJ'), ('language', 'NN'), ('like', 'IN'), ('decompiling', 'VBG'), ('low-level', 'JJ'), ('programs', 'NNS'), ('higher-level', 'JJ'), ('program', 'NN'), ('specifications', 'NNS'), ('.', '.')]

 (S
  (NP The/DT connection/NN graph/NN model/NN)
  also/RB
  suggests/VBZ
  expressing/VBG
  (NP thoughts/NNS)
  (NP natural/JJ language/NN)
  like/IN
  decompiling/VBG
  (NP low-level/JJ programs/NNS)
  (NP higher-level/JJ program/NN specifications/NNS)
  ./.) 


>> Noun Phrases are: 
 ['The connection graph model', 'thoughts', 'natural language', 'low-level programs', 'higher-level program specifications']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('connection', 'connect'), ('graph', 'graph'), ('model', 'model'), ('also', 'also'), ('suggests', 'suggest'), ('expressing', 'express'), ('thoughts', 'thought'), ('natural', 'natur'), ('language', 'languag'), ('like', 'like'), ('decompiling', 'decompil'), ('low-level', 'low-level'), ('programs', 'program'), ('higher-level', 'higher-level'), ('program', 'program'), ('specifications', 'specif'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('connection', 'connect'), ('graph', 'graph'), ('model', 'model'), ('also', 'also'), ('suggests', 'suggest'), ('expressing', 'express'), ('thoughts', 'thought'), ('natural', 'natur'), ('language', 'languag'), ('like', 'like'), ('decompiling', 'decompil'), ('low-level', 'low-level'), ('programs', 'program'), ('higher-level', 'higher-level'), ('program', 'program'), ('specifications', 'specif'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('connection', 'connection'), ('graph', 'graph'), ('model', 'model'), ('also', 'also'), ('suggests', 'suggests'), ('expressing', 'expressing'), ('thoughts', 'thought'), ('natural', 'natural'), ('language', 'language'), ('like', 'like'), ('decompiling', 'decompiling'), ('low-level', 'low-level'), ('programs', 'program'), ('higher-level', 'higher-level'), ('program', 'program'), ('specifications', 'specification'), ('.', '.')]



============================ Sentence 191 =============================

In com- puting, decompiling programs is hard. 


>> Tokens are: 
 ['In', 'com-', 'puting', ',', 'decompiling', 'programs', 'hard', '.']

>> Bigrams are: 
 [('In', 'com-'), ('com-', 'puting'), ('puting', ','), (',', 'decompiling'), ('decompiling', 'programs'), ('programs', 'hard'), ('hard', '.')]

>> Trigrams are: 
 [('In', 'com-', 'puting'), ('com-', 'puting', ','), ('puting', ',', 'decompiling'), (',', 'decompiling', 'programs'), ('decompiling', 'programs', 'hard'), ('programs', 'hard', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('com-', 'JJ'), ('puting', 'NN'), (',', ','), ('decompiling', 'VBG'), ('programs', 'NNS'), ('hard', 'RB'), ('.', '.')]

 (S
  In/IN
  (NP com-/JJ puting/NN)
  ,/,
  decompiling/VBG
  (NP programs/NNS)
  hard/RB
  ./.) 


>> Noun Phrases are: 
 ['com- puting', 'programs']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('com-', 'com-'), ('puting', 'pute'), (',', ','), ('decompiling', 'decompil'), ('programs', 'program'), ('hard', 'hard'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('com-', 'com-'), ('puting', 'pute'), (',', ','), ('decompiling', 'decompil'), ('programs', 'program'), ('hard', 'hard'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('com-', 'com-'), ('puting', 'puting'), (',', ','), ('decompiling', 'decompiling'), ('programs', 'program'), ('hard', 'hard'), ('.', '.')]



============================ Sentence 192 =============================

This may help to  explain why it is often hard to put our thoughts into words. 


>> Tokens are: 
 ['This', 'may', 'help', 'explain', 'often', 'hard', 'put', 'thoughts', 'words', '.']

>> Bigrams are: 
 [('This', 'may'), ('may', 'help'), ('help', 'explain'), ('explain', 'often'), ('often', 'hard'), ('hard', 'put'), ('put', 'thoughts'), ('thoughts', 'words'), ('words', '.')]

>> Trigrams are: 
 [('This', 'may', 'help'), ('may', 'help', 'explain'), ('help', 'explain', 'often'), ('explain', 'often', 'hard'), ('often', 'hard', 'put'), ('hard', 'put', 'thoughts'), ('put', 'thoughts', 'words'), ('thoughts', 'words', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('may', 'MD'), ('help', 'VB'), ('explain', 'VB'), ('often', 'RB'), ('hard', 'JJ'), ('put', 'VBD'), ('thoughts', 'NNS'), ('words', 'NNS'), ('.', '.')]

 (S
  This/DT
  may/MD
  help/VB
  explain/VB
  often/RB
  hard/JJ
  put/VBD
  (NP thoughts/NNS words/NNS)
  ./.) 


>> Noun Phrases are: 
 ['thoughts words']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('may', 'may'), ('help', 'help'), ('explain', 'explain'), ('often', 'often'), ('hard', 'hard'), ('put', 'put'), ('thoughts', 'thought'), ('words', 'word'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('may', 'may'), ('help', 'help'), ('explain', 'explain'), ('often', 'often'), ('hard', 'hard'), ('put', 'put'), ('thoughts', 'thought'), ('words', 'word'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('may', 'may'), ('help', 'help'), ('explain', 'explain'), ('often', 'often'), ('hard', 'hard'), ('put', 'put'), ('thoughts', 'thought'), ('words', 'word'), ('.', '.')]



============================ Sentence 193 =============================

5 Representing Uncertainty   The links in connection graphs include internal links, which  organize the agent’s thoughts, and external links, which  ground the agent’s thoughts in reality. 


>> Tokens are: 
 ['5', 'Representing', 'Uncertainty', 'The', 'links', 'connection', 'graphs', 'include', 'internal', 'links', ',', 'organize', 'agent', '’', 'thoughts', ',', 'external', 'links', ',', 'ground', 'agent', '’', 'thoughts', 'reality', '.']

>> Bigrams are: 
 [('5', 'Representing'), ('Representing', 'Uncertainty'), ('Uncertainty', 'The'), ('The', 'links'), ('links', 'connection'), ('connection', 'graphs'), ('graphs', 'include'), ('include', 'internal'), ('internal', 'links'), ('links', ','), (',', 'organize'), ('organize', 'agent'), ('agent', '’'), ('’', 'thoughts'), ('thoughts', ','), (',', 'external'), ('external', 'links'), ('links', ','), (',', 'ground'), ('ground', 'agent'), ('agent', '’'), ('’', 'thoughts'), ('thoughts', 'reality'), ('reality', '.')]

>> Trigrams are: 
 [('5', 'Representing', 'Uncertainty'), ('Representing', 'Uncertainty', 'The'), ('Uncertainty', 'The', 'links'), ('The', 'links', 'connection'), ('links', 'connection', 'graphs'), ('connection', 'graphs', 'include'), ('graphs', 'include', 'internal'), ('include', 'internal', 'links'), ('internal', 'links', ','), ('links', ',', 'organize'), (',', 'organize', 'agent'), ('organize', 'agent', '’'), ('agent', '’', 'thoughts'), ('’', 'thoughts', ','), ('thoughts', ',', 'external'), (',', 'external', 'links'), ('external', 'links', ','), ('links', ',', 'ground'), (',', 'ground', 'agent'), ('ground', 'agent', '’'), ('agent', '’', 'thoughts'), ('’', 'thoughts', 'reality'), ('thoughts', 'reality', '.')]

>> POS Tags are: 
 [('5', 'CD'), ('Representing', 'VBG'), ('Uncertainty', 'NNP'), ('The', 'DT'), ('links', 'JJ'), ('connection', 'NN'), ('graphs', 'NNS'), ('include', 'VBP'), ('internal', 'JJ'), ('links', 'NNS'), (',', ','), ('organize', 'VB'), ('agent', 'NN'), ('’', 'NNP'), ('thoughts', 'NNS'), (',', ','), ('external', 'JJ'), ('links', 'NNS'), (',', ','), ('ground', 'NN'), ('agent', 'NN'), ('’', 'NNP'), ('thoughts', 'NNS'), ('reality', 'NN'), ('.', '.')]

 (S
  5/CD
  Representing/VBG
  (NP Uncertainty/NNP)
  (NP The/DT links/JJ connection/NN graphs/NNS)
  include/VBP
  (NP internal/JJ links/NNS)
  ,/,
  organize/VB
  (NP agent/NN ’/NNP thoughts/NNS)
  ,/,
  (NP external/JJ links/NNS)
  ,/,
  (NP ground/NN agent/NN ’/NNP thoughts/NNS reality/NN)
  ./.) 


>> Noun Phrases are: 
 ['Uncertainty', 'The links connection graphs', 'internal links', 'agent ’ thoughts', 'external links', 'ground agent ’ thoughts reality']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('5', '5'), ('Representing', 'repres'), ('Uncertainty', 'uncertainti'), ('The', 'the'), ('links', 'link'), ('connection', 'connect'), ('graphs', 'graph'), ('include', 'includ'), ('internal', 'intern'), ('links', 'link'), (',', ','), ('organize', 'organ'), ('agent', 'agent'), ('’', '’'), ('thoughts', 'thought'), (',', ','), ('external', 'extern'), ('links', 'link'), (',', ','), ('ground', 'ground'), ('agent', 'agent'), ('’', '’'), ('thoughts', 'thought'), ('reality', 'realiti'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('5', '5'), ('Representing', 'repres'), ('Uncertainty', 'uncertainti'), ('The', 'the'), ('links', 'link'), ('connection', 'connect'), ('graphs', 'graph'), ('include', 'includ'), ('internal', 'intern'), ('links', 'link'), (',', ','), ('organize', 'organ'), ('agent', 'agent'), ('’', '’'), ('thoughts', 'thought'), (',', ','), ('external', 'extern'), ('links', 'link'), (',', ','), ('ground', 'ground'), ('agent', 'agent'), ('’', '’'), ('thoughts', 'thought'), ('reality', 'realiti'), ('.', '.')]

>> Lemmatization: 
 [('5', '5'), ('Representing', 'Representing'), ('Uncertainty', 'Uncertainty'), ('The', 'The'), ('links', 'link'), ('connection', 'connection'), ('graphs', 'graph'), ('include', 'include'), ('internal', 'internal'), ('links', 'link'), (',', ','), ('organize', 'organize'), ('agent', 'agent'), ('’', '’'), ('thoughts', 'thought'), (',', ','), ('external', 'external'), ('links', 'link'), (',', ','), ('ground', 'ground'), ('agent', 'agent'), ('’', '’'), ('thoughts', 'thought'), ('reality', 'reality'), ('.', '.')]



============================ Sentence 194 =============================

The external links are  activated by observations and by the agent’s own actions. 


>> Tokens are: 
 ['The', 'external', 'links', 'activated', 'observations', 'agent', '’', 'actions', '.']

>> Bigrams are: 
 [('The', 'external'), ('external', 'links'), ('links', 'activated'), ('activated', 'observations'), ('observations', 'agent'), ('agent', '’'), ('’', 'actions'), ('actions', '.')]

>> Trigrams are: 
 [('The', 'external', 'links'), ('external', 'links', 'activated'), ('links', 'activated', 'observations'), ('activated', 'observations', 'agent'), ('observations', 'agent', '’'), ('agent', '’', 'actions'), ('’', 'actions', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('external', 'JJ'), ('links', 'NNS'), ('activated', 'VBD'), ('observations', 'NNS'), ('agent', 'JJ'), ('’', 'JJ'), ('actions', 'NNS'), ('.', '.')]

 (S
  (NP The/DT external/JJ links/NNS)
  activated/VBD
  (NP observations/NNS)
  (NP agent/JJ ’/JJ actions/NNS)
  ./.) 


>> Noun Phrases are: 
 ['The external links', 'observations', 'agent ’ actions']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('external', 'extern'), ('links', 'link'), ('activated', 'activ'), ('observations', 'observ'), ('agent', 'agent'), ('’', '’'), ('actions', 'action'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('external', 'extern'), ('links', 'link'), ('activated', 'activ'), ('observations', 'observ'), ('agent', 'agent'), ('’', '’'), ('actions', 'action'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('external', 'external'), ('links', 'link'), ('activated', 'activated'), ('observations', 'observation'), ('agent', 'agent'), ('’', '’'), ('actions', 'action'), ('.', '.')]



============================ Sentence 195 =============================

They may also include links to unobserved properties of the  world. 


>> Tokens are: 
 ['They', 'may', 'also', 'include', 'links', 'unobserved', 'properties', 'world', '.']

>> Bigrams are: 
 [('They', 'may'), ('may', 'also'), ('also', 'include'), ('include', 'links'), ('links', 'unobserved'), ('unobserved', 'properties'), ('properties', 'world'), ('world', '.')]

>> Trigrams are: 
 [('They', 'may', 'also'), ('may', 'also', 'include'), ('also', 'include', 'links'), ('include', 'links', 'unobserved'), ('links', 'unobserved', 'properties'), ('unobserved', 'properties', 'world'), ('properties', 'world', '.')]

>> POS Tags are: 
 [('They', 'PRP'), ('may', 'MD'), ('also', 'RB'), ('include', 'VB'), ('links', 'NNS'), ('unobserved', 'JJ'), ('properties', 'NNS'), ('world', 'NN'), ('.', '.')]

 (S
  They/PRP
  may/MD
  also/RB
  include/VB
  (NP links/NNS)
  (NP unobserved/JJ properties/NNS world/NN)
  ./.) 


>> Noun Phrases are: 
 ['links', 'unobserved properties world']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('They', 'they'), ('may', 'may'), ('also', 'also'), ('include', 'includ'), ('links', 'link'), ('unobserved', 'unobserv'), ('properties', 'properti'), ('world', 'world'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('They', 'they'), ('may', 'may'), ('also', 'also'), ('include', 'includ'), ('links', 'link'), ('unobserved', 'unobserv'), ('properties', 'properti'), ('world', 'world'), ('.', '.')]

>> Lemmatization: 
 [('They', 'They'), ('may', 'may'), ('also', 'also'), ('include', 'include'), ('links', 'link'), ('unobserved', 'unobserved'), ('properties', 'property'), ('world', 'world'), ('.', '.')]



============================ Sentence 196 =============================

The agent can make assumptions about these proper- ties, and can attempt to judge their probabilities. 


>> Tokens are: 
 ['The', 'agent', 'make', 'assumptions', 'proper-', 'ties', ',', 'attempt', 'judge', 'probabilities', '.']

>> Bigrams are: 
 [('The', 'agent'), ('agent', 'make'), ('make', 'assumptions'), ('assumptions', 'proper-'), ('proper-', 'ties'), ('ties', ','), (',', 'attempt'), ('attempt', 'judge'), ('judge', 'probabilities'), ('probabilities', '.')]

>> Trigrams are: 
 [('The', 'agent', 'make'), ('agent', 'make', 'assumptions'), ('make', 'assumptions', 'proper-'), ('assumptions', 'proper-', 'ties'), ('proper-', 'ties', ','), ('ties', ',', 'attempt'), (',', 'attempt', 'judge'), ('attempt', 'judge', 'probabilities'), ('judge', 'probabilities', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('agent', 'NN'), ('make', 'VBP'), ('assumptions', 'NNS'), ('proper-', 'JJ'), ('ties', 'NNS'), (',', ','), ('attempt', 'NN'), ('judge', 'NN'), ('probabilities', 'NNS'), ('.', '.')]

 (S
  (NP The/DT agent/NN)
  make/VBP
  (NP assumptions/NNS)
  (NP proper-/JJ ties/NNS)
  ,/,
  (NP attempt/NN judge/NN probabilities/NNS)
  ./.) 


>> Noun Phrases are: 
 ['The agent', 'assumptions', 'proper- ties', 'attempt judge probabilities']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('agent', 'agent'), ('make', 'make'), ('assumptions', 'assumpt'), ('proper-', 'proper-'), ('ties', 'tie'), (',', ','), ('attempt', 'attempt'), ('judge', 'judg'), ('probabilities', 'probabl'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('agent', 'agent'), ('make', 'make'), ('assumptions', 'assumpt'), ('proper-', 'proper-'), ('ties', 'tie'), (',', ','), ('attempt', 'attempt'), ('judge', 'judg'), ('probabilities', 'probabl'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('agent', 'agent'), ('make', 'make'), ('assumptions', 'assumption'), ('proper-', 'proper-'), ('ties', 'tie'), (',', ','), ('attempt', 'attempt'), ('judge', 'judge'), ('probabilities', 'probability'), ('.', '.')]



============================ Sentence 197 =============================

C if A   Goal:      if   C then  D   D if E and F  B if A   D if G and H   15     The probability that an assumption is true contributes to  the probability that an agent’s actions will have a particular  outcome. 


>> Tokens are: 
 ['C', 'A', 'Goal', ':', 'C', 'D', 'D', 'E', 'F', 'B', 'A', 'D', 'G', 'H', '15', 'The', 'probability', 'assumption', 'true', 'contributes', 'probability', 'agent', '’', 'actions', 'particular', 'outcome', '.']

>> Bigrams are: 
 [('C', 'A'), ('A', 'Goal'), ('Goal', ':'), (':', 'C'), ('C', 'D'), ('D', 'D'), ('D', 'E'), ('E', 'F'), ('F', 'B'), ('B', 'A'), ('A', 'D'), ('D', 'G'), ('G', 'H'), ('H', '15'), ('15', 'The'), ('The', 'probability'), ('probability', 'assumption'), ('assumption', 'true'), ('true', 'contributes'), ('contributes', 'probability'), ('probability', 'agent'), ('agent', '’'), ('’', 'actions'), ('actions', 'particular'), ('particular', 'outcome'), ('outcome', '.')]

>> Trigrams are: 
 [('C', 'A', 'Goal'), ('A', 'Goal', ':'), ('Goal', ':', 'C'), (':', 'C', 'D'), ('C', 'D', 'D'), ('D', 'D', 'E'), ('D', 'E', 'F'), ('E', 'F', 'B'), ('F', 'B', 'A'), ('B', 'A', 'D'), ('A', 'D', 'G'), ('D', 'G', 'H'), ('G', 'H', '15'), ('H', '15', 'The'), ('15', 'The', 'probability'), ('The', 'probability', 'assumption'), ('probability', 'assumption', 'true'), ('assumption', 'true', 'contributes'), ('true', 'contributes', 'probability'), ('contributes', 'probability', 'agent'), ('probability', 'agent', '’'), ('agent', '’', 'actions'), ('’', 'actions', 'particular'), ('actions', 'particular', 'outcome'), ('particular', 'outcome', '.')]

>> POS Tags are: 
 [('C', 'VB'), ('A', 'DT'), ('Goal', 'NN'), (':', ':'), ('C', 'NNP'), ('D', 'NNP'), ('D', 'NNP'), ('E', 'NNP'), ('F', 'NNP'), ('B', 'NNP'), ('A', 'NNP'), ('D', 'NNP'), ('G', 'NNP'), ('H', 'NNP'), ('15', 'CD'), ('The', 'DT'), ('probability', 'NN'), ('assumption', 'NN'), ('true', 'JJ'), ('contributes', 'NNS'), ('probability', 'NN'), ('agent', 'NN'), ('’', 'NNP'), ('actions', 'NNS'), ('particular', 'JJ'), ('outcome', 'NN'), ('.', '.')]

 (S
  C/VB
  (NP A/DT Goal/NN)
  :/:
  (NP C/NNP D/NNP D/NNP E/NNP F/NNP B/NNP A/NNP D/NNP G/NNP H/NNP)
  15/CD
  (NP The/DT probability/NN assumption/NN)
  (NP
    true/JJ
    contributes/NNS
    probability/NN
    agent/NN
    ’/NNP
    actions/NNS)
  (NP particular/JJ outcome/NN)
  ./.) 


>> Noun Phrases are: 
 ['A Goal', 'C D D E F B A D G H', 'The probability assumption', 'true contributes probability agent ’ actions', 'particular outcome']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('C', 'c'), ('A', 'a'), ('Goal', 'goal'), (':', ':'), ('C', 'c'), ('D', 'd'), ('D', 'd'), ('E', 'e'), ('F', 'f'), ('B', 'b'), ('A', 'a'), ('D', 'd'), ('G', 'g'), ('H', 'h'), ('15', '15'), ('The', 'the'), ('probability', 'probabl'), ('assumption', 'assumpt'), ('true', 'true'), ('contributes', 'contribut'), ('probability', 'probabl'), ('agent', 'agent'), ('’', '’'), ('actions', 'action'), ('particular', 'particular'), ('outcome', 'outcom'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('C', 'c'), ('A', 'a'), ('Goal', 'goal'), (':', ':'), ('C', 'c'), ('D', 'd'), ('D', 'd'), ('E', 'e'), ('F', 'f'), ('B', 'b'), ('A', 'a'), ('D', 'd'), ('G', 'g'), ('H', 'h'), ('15', '15'), ('The', 'the'), ('probability', 'probabl'), ('assumption', 'assumpt'), ('true', 'true'), ('contributes', 'contribut'), ('probability', 'probabl'), ('agent', 'agent'), ('’', '’'), ('actions', 'action'), ('particular', 'particular'), ('outcome', 'outcom'), ('.', '.')]

>> Lemmatization: 
 [('C', 'C'), ('A', 'A'), ('Goal', 'Goal'), (':', ':'), ('C', 'C'), ('D', 'D'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('B', 'B'), ('A', 'A'), ('D', 'D'), ('G', 'G'), ('H', 'H'), ('15', '15'), ('The', 'The'), ('probability', 'probability'), ('assumption', 'assumption'), ('true', 'true'), ('contributes', 'contributes'), ('probability', 'probability'), ('agent', 'agent'), ('’', '’'), ('actions', 'action'), ('particular', 'particular'), ('outcome', 'outcome'), ('.', '.')]



============================ Sentence 198 =============================

For example:      You will be rich if you buy a lottery ticket    and your number is chosen. 


>> Tokens are: 
 ['For', 'example', ':', 'You', 'rich', 'buy', 'lottery', 'ticket', 'number', 'chosen', '.']

>> Bigrams are: 
 [('For', 'example'), ('example', ':'), (':', 'You'), ('You', 'rich'), ('rich', 'buy'), ('buy', 'lottery'), ('lottery', 'ticket'), ('ticket', 'number'), ('number', 'chosen'), ('chosen', '.')]

>> Trigrams are: 
 [('For', 'example', ':'), ('example', ':', 'You'), (':', 'You', 'rich'), ('You', 'rich', 'buy'), ('rich', 'buy', 'lottery'), ('buy', 'lottery', 'ticket'), ('lottery', 'ticket', 'number'), ('ticket', 'number', 'chosen'), ('number', 'chosen', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('example', 'NN'), (':', ':'), ('You', 'PRP'), ('rich', 'VBP'), ('buy', 'VB'), ('lottery', 'NN'), ('ticket', 'NN'), ('number', 'NN'), ('chosen', 'VBN'), ('.', '.')]

 (S
  For/IN
  (NP example/NN)
  :/:
  You/PRP
  rich/VBP
  buy/VB
  (NP lottery/NN ticket/NN number/NN)
  chosen/VBN
  ./.) 


>> Noun Phrases are: 
 ['example', 'lottery ticket number']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (':', ':'), ('You', 'you'), ('rich', 'rich'), ('buy', 'buy'), ('lottery', 'lotteri'), ('ticket', 'ticket'), ('number', 'number'), ('chosen', 'chosen'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (':', ':'), ('You', 'you'), ('rich', 'rich'), ('buy', 'buy'), ('lottery', 'lotteri'), ('ticket', 'ticket'), ('number', 'number'), ('chosen', 'chosen'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('example', 'example'), (':', ':'), ('You', 'You'), ('rich', 'rich'), ('buy', 'buy'), ('lottery', 'lottery'), ('ticket', 'ticket'), ('number', 'number'), ('chosen', 'chosen'), ('.', '.')]



============================ Sentence 199 =============================

It will rain if you do a rain dance   and the gods are pleased. 


>> Tokens are: 
 ['It', 'rain', 'rain', 'dance', 'gods', 'pleased', '.']

>> Bigrams are: 
 [('It', 'rain'), ('rain', 'rain'), ('rain', 'dance'), ('dance', 'gods'), ('gods', 'pleased'), ('pleased', '.')]

>> Trigrams are: 
 [('It', 'rain', 'rain'), ('rain', 'rain', 'dance'), ('rain', 'dance', 'gods'), ('dance', 'gods', 'pleased'), ('gods', 'pleased', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('rain', 'VBZ'), ('rain', 'JJ'), ('dance', 'NN'), ('gods', 'NNS'), ('pleased', 'VBD'), ('.', '.')]

 (S It/PRP rain/VBZ (NP rain/JJ dance/NN gods/NNS) pleased/VBD ./.) 


>> Noun Phrases are: 
 ['rain dance gods']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('rain', 'rain'), ('rain', 'rain'), ('dance', 'danc'), ('gods', 'god'), ('pleased', 'pleas'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('rain', 'rain'), ('rain', 'rain'), ('dance', 'danc'), ('gods', 'god'), ('pleased', 'pleas'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('rain', 'rain'), ('rain', 'rain'), ('dance', 'dance'), ('gods', 'god'), ('pleased', 'pleased'), ('.', '.')]



============================ Sentence 200 =============================

You can control your own actions (like buying a ticket or  doing a rain dance), but you cannot always control the ac- tions of others or the state of the world (your number is cho- sen or the gods are pleased). 


>> Tokens are: 
 ['You', 'control', 'actions', '(', 'like', 'buying', 'ticket', 'rain', 'dance', ')', ',', 'always', 'control', 'ac-', 'tions', 'others', 'state', 'world', '(', 'number', 'cho-', 'sen', 'gods', 'pleased', ')', '.']

>> Bigrams are: 
 [('You', 'control'), ('control', 'actions'), ('actions', '('), ('(', 'like'), ('like', 'buying'), ('buying', 'ticket'), ('ticket', 'rain'), ('rain', 'dance'), ('dance', ')'), (')', ','), (',', 'always'), ('always', 'control'), ('control', 'ac-'), ('ac-', 'tions'), ('tions', 'others'), ('others', 'state'), ('state', 'world'), ('world', '('), ('(', 'number'), ('number', 'cho-'), ('cho-', 'sen'), ('sen', 'gods'), ('gods', 'pleased'), ('pleased', ')'), (')', '.')]

>> Trigrams are: 
 [('You', 'control', 'actions'), ('control', 'actions', '('), ('actions', '(', 'like'), ('(', 'like', 'buying'), ('like', 'buying', 'ticket'), ('buying', 'ticket', 'rain'), ('ticket', 'rain', 'dance'), ('rain', 'dance', ')'), ('dance', ')', ','), (')', ',', 'always'), (',', 'always', 'control'), ('always', 'control', 'ac-'), ('control', 'ac-', 'tions'), ('ac-', 'tions', 'others'), ('tions', 'others', 'state'), ('others', 'state', 'world'), ('state', 'world', '('), ('world', '(', 'number'), ('(', 'number', 'cho-'), ('number', 'cho-', 'sen'), ('cho-', 'sen', 'gods'), ('sen', 'gods', 'pleased'), ('gods', 'pleased', ')'), ('pleased', ')', '.')]

>> POS Tags are: 
 [('You', 'PRP'), ('control', 'VBP'), ('actions', 'NNS'), ('(', '('), ('like', 'IN'), ('buying', 'VBG'), ('ticket', 'NN'), ('rain', 'NN'), ('dance', 'NN'), (')', ')'), (',', ','), ('always', 'RB'), ('control', 'VB'), ('ac-', 'JJ'), ('tions', 'NNS'), ('others', 'NNS'), ('state', 'NN'), ('world', 'NN'), ('(', '('), ('number', 'NN'), ('cho-', 'NN'), ('sen', 'JJ'), ('gods', 'NNS'), ('pleased', 'VBN'), (')', ')'), ('.', '.')]

 (S
  You/PRP
  control/VBP
  (NP actions/NNS)
  (/(
  like/IN
  buying/VBG
  (NP ticket/NN rain/NN dance/NN)
  )/)
  ,/,
  always/RB
  control/VB
  (NP ac-/JJ tions/NNS others/NNS state/NN world/NN)
  (/(
  (NP number/NN cho-/NN)
  (NP sen/JJ gods/NNS)
  pleased/VBN
  )/)
  ./.) 


>> Noun Phrases are: 
 ['actions', 'ticket rain dance', 'ac- tions others state world', 'number cho-', 'sen gods']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('You', 'you'), ('control', 'control'), ('actions', 'action'), ('(', '('), ('like', 'like'), ('buying', 'buy'), ('ticket', 'ticket'), ('rain', 'rain'), ('dance', 'danc'), (')', ')'), (',', ','), ('always', 'alway'), ('control', 'control'), ('ac-', 'ac-'), ('tions', 'tion'), ('others', 'other'), ('state', 'state'), ('world', 'world'), ('(', '('), ('number', 'number'), ('cho-', 'cho-'), ('sen', 'sen'), ('gods', 'god'), ('pleased', 'pleas'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('You', 'you'), ('control', 'control'), ('actions', 'action'), ('(', '('), ('like', 'like'), ('buying', 'buy'), ('ticket', 'ticket'), ('rain', 'rain'), ('dance', 'danc'), (')', ')'), (',', ','), ('always', 'alway'), ('control', 'control'), ('ac-', 'ac-'), ('tions', 'tion'), ('others', 'other'), ('state', 'state'), ('world', 'world'), ('(', '('), ('number', 'number'), ('cho-', 'cho-'), ('sen', 'sen'), ('gods', 'god'), ('pleased', 'pleas'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('You', 'You'), ('control', 'control'), ('actions', 'action'), ('(', '('), ('like', 'like'), ('buying', 'buying'), ('ticket', 'ticket'), ('rain', 'rain'), ('dance', 'dance'), (')', ')'), (',', ','), ('always', 'always'), ('control', 'control'), ('ac-', 'ac-'), ('tions', 'tions'), ('others', 'others'), ('state', 'state'), ('world', 'world'), ('(', '('), ('number', 'number'), ('cho-', 'cho-'), ('sen', 'sen'), ('gods', 'god'), ('pleased', 'pleased'), (')', ')'), ('.', '.')]



============================ Sentence 201 =============================

At best, you might be able  only to judge the probability that the world is or will be in a  particular state (one in a million?). 


>> Tokens are: 
 ['At', 'best', ',', 'might', 'able', 'judge', 'probability', 'world', 'particular', 'state', '(', 'one', 'million', '?', ')', '.']

>> Bigrams are: 
 [('At', 'best'), ('best', ','), (',', 'might'), ('might', 'able'), ('able', 'judge'), ('judge', 'probability'), ('probability', 'world'), ('world', 'particular'), ('particular', 'state'), ('state', '('), ('(', 'one'), ('one', 'million'), ('million', '?'), ('?', ')'), (')', '.')]

>> Trigrams are: 
 [('At', 'best', ','), ('best', ',', 'might'), (',', 'might', 'able'), ('might', 'able', 'judge'), ('able', 'judge', 'probability'), ('judge', 'probability', 'world'), ('probability', 'world', 'particular'), ('world', 'particular', 'state'), ('particular', 'state', '('), ('state', '(', 'one'), ('(', 'one', 'million'), ('one', 'million', '?'), ('million', '?', ')'), ('?', ')', '.')]

>> POS Tags are: 
 [('At', 'IN'), ('best', 'JJS'), (',', ','), ('might', 'MD'), ('able', 'JJ'), ('judge', 'NN'), ('probability', 'NN'), ('world', 'NN'), ('particular', 'JJ'), ('state', 'NN'), ('(', '('), ('one', 'CD'), ('million', 'CD'), ('?', '.'), (')', ')'), ('.', '.')]

 (S
  At/IN
  best/JJS
  ,/,
  might/MD
  (NP able/JJ judge/NN probability/NN world/NN)
  (NP particular/JJ state/NN)
  (/(
  one/CD
  million/CD
  ?/.
  )/)
  ./.) 


>> Noun Phrases are: 
 ['able judge probability world', 'particular state']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('At', 'at'), ('best', 'best'), (',', ','), ('might', 'might'), ('able', 'abl'), ('judge', 'judg'), ('probability', 'probabl'), ('world', 'world'), ('particular', 'particular'), ('state', 'state'), ('(', '('), ('one', 'one'), ('million', 'million'), ('?', '?'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('At', 'at'), ('best', 'best'), (',', ','), ('might', 'might'), ('able', 'abl'), ('judge', 'judg'), ('probability', 'probabl'), ('world', 'world'), ('particular', 'particular'), ('state', 'state'), ('(', '('), ('one', 'one'), ('million', 'million'), ('?', '?'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('At', 'At'), ('best', 'best'), (',', ','), ('might', 'might'), ('able', 'able'), ('judge', 'judge'), ('probability', 'probability'), ('world', 'world'), ('particular', 'particular'), ('state', 'state'), ('(', '('), ('one', 'one'), ('million', 'million'), ('?', '?'), (')', ')'), ('.', '.')]



============================ Sentence 202 =============================

David Poole [1997] has  shown that associating probabilities with such assumptions  gives ALP the expressive power of Bayesian networks. 


>> Tokens are: 
 ['David', 'Poole', '[', '1997', ']', 'shown', 'associating', 'probabilities', 'assumptions', 'gives', 'ALP', 'expressive', 'power', 'Bayesian', 'networks', '.']

>> Bigrams are: 
 [('David', 'Poole'), ('Poole', '['), ('[', '1997'), ('1997', ']'), (']', 'shown'), ('shown', 'associating'), ('associating', 'probabilities'), ('probabilities', 'assumptions'), ('assumptions', 'gives'), ('gives', 'ALP'), ('ALP', 'expressive'), ('expressive', 'power'), ('power', 'Bayesian'), ('Bayesian', 'networks'), ('networks', '.')]

>> Trigrams are: 
 [('David', 'Poole', '['), ('Poole', '[', '1997'), ('[', '1997', ']'), ('1997', ']', 'shown'), (']', 'shown', 'associating'), ('shown', 'associating', 'probabilities'), ('associating', 'probabilities', 'assumptions'), ('probabilities', 'assumptions', 'gives'), ('assumptions', 'gives', 'ALP'), ('gives', 'ALP', 'expressive'), ('ALP', 'expressive', 'power'), ('expressive', 'power', 'Bayesian'), ('power', 'Bayesian', 'networks'), ('Bayesian', 'networks', '.')]

>> POS Tags are: 
 [('David', 'NNP'), ('Poole', 'NNP'), ('[', 'NN'), ('1997', 'CD'), (']', 'NNP'), ('shown', 'VBN'), ('associating', 'VBG'), ('probabilities', 'NNS'), ('assumptions', 'NNS'), ('gives', 'VBZ'), ('ALP', 'NNP'), ('expressive', 'JJ'), ('power', 'NN'), ('Bayesian', 'NNP'), ('networks', 'NNS'), ('.', '.')]

 (S
  (NP David/NNP Poole/NNP [/NN)
  1997/CD
  (NP ]/NNP)
  shown/VBN
  associating/VBG
  (NP probabilities/NNS assumptions/NNS)
  gives/VBZ
  (NP ALP/NNP)
  (NP expressive/JJ power/NN Bayesian/NNP networks/NNS)
  ./.) 


>> Noun Phrases are: 
 ['David Poole [', ']', 'probabilities assumptions', 'ALP', 'expressive power Bayesian networks']

>> Named Entities are: 
 [('PERSON', 'David'), ('ORGANIZATION', 'Poole'), ('ORGANIZATION', 'ALP'), ('GPE', 'Bayesian')] 

>> Stemming using Porter Stemmer: 
 [('David', 'david'), ('Poole', 'pool'), ('[', '['), ('1997', '1997'), (']', ']'), ('shown', 'shown'), ('associating', 'associ'), ('probabilities', 'probabl'), ('assumptions', 'assumpt'), ('gives', 'give'), ('ALP', 'alp'), ('expressive', 'express'), ('power', 'power'), ('Bayesian', 'bayesian'), ('networks', 'network'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('David', 'david'), ('Poole', 'pool'), ('[', '['), ('1997', '1997'), (']', ']'), ('shown', 'shown'), ('associating', 'associ'), ('probabilities', 'probabl'), ('assumptions', 'assumpt'), ('gives', 'give'), ('ALP', 'alp'), ('expressive', 'express'), ('power', 'power'), ('Bayesian', 'bayesian'), ('networks', 'network'), ('.', '.')]

>> Lemmatization: 
 [('David', 'David'), ('Poole', 'Poole'), ('[', '['), ('1997', '1997'), (']', ']'), ('shown', 'shown'), ('associating', 'associating'), ('probabilities', 'probability'), ('assumptions', 'assumption'), ('gives', 'give'), ('ALP', 'ALP'), ('expressive', 'expressive'), ('power', 'power'), ('Bayesian', 'Bayesian'), ('networks', 'network'), ('.', '.')]



============================ Sentence 203 =============================

6 Better Decision-making   Uncertainty about the state of the world is only one of the  complications contributing to the problem of deciding what  to do. 


>> Tokens are: 
 ['6', 'Better', 'Decision-making', 'Uncertainty', 'state', 'world', 'one', 'complications', 'contributing', 'problem', 'deciding', '.']

>> Bigrams are: 
 [('6', 'Better'), ('Better', 'Decision-making'), ('Decision-making', 'Uncertainty'), ('Uncertainty', 'state'), ('state', 'world'), ('world', 'one'), ('one', 'complications'), ('complications', 'contributing'), ('contributing', 'problem'), ('problem', 'deciding'), ('deciding', '.')]

>> Trigrams are: 
 [('6', 'Better', 'Decision-making'), ('Better', 'Decision-making', 'Uncertainty'), ('Decision-making', 'Uncertainty', 'state'), ('Uncertainty', 'state', 'world'), ('state', 'world', 'one'), ('world', 'one', 'complications'), ('one', 'complications', 'contributing'), ('complications', 'contributing', 'problem'), ('contributing', 'problem', 'deciding'), ('problem', 'deciding', '.')]

>> POS Tags are: 
 [('6', 'CD'), ('Better', 'NNP'), ('Decision-making', 'NNP'), ('Uncertainty', 'NNP'), ('state', 'NN'), ('world', 'NN'), ('one', 'CD'), ('complications', 'NNS'), ('contributing', 'VBG'), ('problem', 'NN'), ('deciding', 'NN'), ('.', '.')]

 (S
  6/CD
  (NP
    Better/NNP
    Decision-making/NNP
    Uncertainty/NNP
    state/NN
    world/NN)
  one/CD
  (NP complications/NNS)
  contributing/VBG
  (NP problem/NN deciding/NN)
  ./.) 


>> Noun Phrases are: 
 ['Better Decision-making Uncertainty state world', 'complications', 'problem deciding']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('6', '6'), ('Better', 'better'), ('Decision-making', 'decision-mak'), ('Uncertainty', 'uncertainti'), ('state', 'state'), ('world', 'world'), ('one', 'one'), ('complications', 'complic'), ('contributing', 'contribut'), ('problem', 'problem'), ('deciding', 'decid'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('6', '6'), ('Better', 'better'), ('Decision-making', 'decision-mak'), ('Uncertainty', 'uncertainti'), ('state', 'state'), ('world', 'world'), ('one', 'one'), ('complications', 'complic'), ('contributing', 'contribut'), ('problem', 'problem'), ('deciding', 'decid'), ('.', '.')]

>> Lemmatization: 
 [('6', '6'), ('Better', 'Better'), ('Decision-making', 'Decision-making'), ('Uncertainty', 'Uncertainty'), ('state', 'state'), ('world', 'world'), ('one', 'one'), ('complications', 'complication'), ('contributing', 'contributing'), ('problem', 'problem'), ('deciding', 'deciding'), ('.', '.')]



============================ Sentence 204 =============================

To reduce this complexity, classical decision theory  makes simplifying assumptions. 


>> Tokens are: 
 ['To', 'reduce', 'complexity', ',', 'classical', 'decision', 'theory', 'makes', 'simplifying', 'assumptions', '.']

>> Bigrams are: 
 [('To', 'reduce'), ('reduce', 'complexity'), ('complexity', ','), (',', 'classical'), ('classical', 'decision'), ('decision', 'theory'), ('theory', 'makes'), ('makes', 'simplifying'), ('simplifying', 'assumptions'), ('assumptions', '.')]

>> Trigrams are: 
 [('To', 'reduce', 'complexity'), ('reduce', 'complexity', ','), ('complexity', ',', 'classical'), (',', 'classical', 'decision'), ('classical', 'decision', 'theory'), ('decision', 'theory', 'makes'), ('theory', 'makes', 'simplifying'), ('makes', 'simplifying', 'assumptions'), ('simplifying', 'assumptions', '.')]

>> POS Tags are: 
 [('To', 'TO'), ('reduce', 'VB'), ('complexity', 'NN'), (',', ','), ('classical', 'JJ'), ('decision', 'NN'), ('theory', 'NN'), ('makes', 'VBZ'), ('simplifying', 'VBG'), ('assumptions', 'NNS'), ('.', '.')]

 (S
  To/TO
  reduce/VB
  (NP complexity/NN)
  ,/,
  (NP classical/JJ decision/NN theory/NN)
  makes/VBZ
  simplifying/VBG
  (NP assumptions/NNS)
  ./.) 


>> Noun Phrases are: 
 ['complexity', 'classical decision theory', 'assumptions']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('To', 'to'), ('reduce', 'reduc'), ('complexity', 'complex'), (',', ','), ('classical', 'classic'), ('decision', 'decis'), ('theory', 'theori'), ('makes', 'make'), ('simplifying', 'simplifi'), ('assumptions', 'assumpt'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('To', 'to'), ('reduce', 'reduc'), ('complexity', 'complex'), (',', ','), ('classical', 'classic'), ('decision', 'decis'), ('theory', 'theori'), ('makes', 'make'), ('simplifying', 'simplifi'), ('assumptions', 'assumpt'), ('.', '.')]

>> Lemmatization: 
 [('To', 'To'), ('reduce', 'reduce'), ('complexity', 'complexity'), (',', ','), ('classical', 'classical'), ('decision', 'decision'), ('theory', 'theory'), ('makes', 'make'), ('simplifying', 'simplifying'), ('assumptions', 'assumption'), ('.', '.')]



============================ Sentence 205 =============================

The most restrictive of  these is the assumption that all of the alternatives to be de- cided between are given in advance. 


>> Tokens are: 
 ['The', 'restrictive', 'assumption', 'alternatives', 'de-', 'cided', 'given', 'advance', '.']

>> Bigrams are: 
 [('The', 'restrictive'), ('restrictive', 'assumption'), ('assumption', 'alternatives'), ('alternatives', 'de-'), ('de-', 'cided'), ('cided', 'given'), ('given', 'advance'), ('advance', '.')]

>> Trigrams are: 
 [('The', 'restrictive', 'assumption'), ('restrictive', 'assumption', 'alternatives'), ('assumption', 'alternatives', 'de-'), ('alternatives', 'de-', 'cided'), ('de-', 'cided', 'given'), ('cided', 'given', 'advance'), ('given', 'advance', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('restrictive', 'JJ'), ('assumption', 'NN'), ('alternatives', 'NNS'), ('de-', 'JJ'), ('cided', 'VBD'), ('given', 'VBN'), ('advance', 'NN'), ('.', '.')]

 (S
  (NP The/DT restrictive/JJ assumption/NN alternatives/NNS)
  de-/JJ
  cided/VBD
  given/VBN
  (NP advance/NN)
  ./.) 


>> Noun Phrases are: 
 ['The restrictive assumption alternatives', 'advance']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('restrictive', 'restrict'), ('assumption', 'assumpt'), ('alternatives', 'altern'), ('de-', 'de-'), ('cided', 'cide'), ('given', 'given'), ('advance', 'advanc'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('restrictive', 'restrict'), ('assumption', 'assumpt'), ('alternatives', 'altern'), ('de-', 'de-'), ('cided', 'cide'), ('given', 'given'), ('advance', 'advanc'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('restrictive', 'restrictive'), ('assumption', 'assumption'), ('alternatives', 'alternative'), ('de-', 'de-'), ('cided', 'cided'), ('given', 'given'), ('advance', 'advance'), ('.', '.')]



============================ Sentence 206 =============================

For example, if you are  looking for a new job, it would assume that all of the job  options are given, and it would focus on the problem of de- ciding which of the given options is most likely to result in  the best outcome. 


>> Tokens are: 
 ['For', 'example', ',', 'looking', 'new', 'job', ',', 'would', 'assume', 'job', 'options', 'given', ',', 'would', 'focus', 'problem', 'de-', 'ciding', 'given', 'options', 'likely', 'result', 'best', 'outcome', '.']

>> Bigrams are: 
 [('For', 'example'), ('example', ','), (',', 'looking'), ('looking', 'new'), ('new', 'job'), ('job', ','), (',', 'would'), ('would', 'assume'), ('assume', 'job'), ('job', 'options'), ('options', 'given'), ('given', ','), (',', 'would'), ('would', 'focus'), ('focus', 'problem'), ('problem', 'de-'), ('de-', 'ciding'), ('ciding', 'given'), ('given', 'options'), ('options', 'likely'), ('likely', 'result'), ('result', 'best'), ('best', 'outcome'), ('outcome', '.')]

>> Trigrams are: 
 [('For', 'example', ','), ('example', ',', 'looking'), (',', 'looking', 'new'), ('looking', 'new', 'job'), ('new', 'job', ','), ('job', ',', 'would'), (',', 'would', 'assume'), ('would', 'assume', 'job'), ('assume', 'job', 'options'), ('job', 'options', 'given'), ('options', 'given', ','), ('given', ',', 'would'), (',', 'would', 'focus'), ('would', 'focus', 'problem'), ('focus', 'problem', 'de-'), ('problem', 'de-', 'ciding'), ('de-', 'ciding', 'given'), ('ciding', 'given', 'options'), ('given', 'options', 'likely'), ('options', 'likely', 'result'), ('likely', 'result', 'best'), ('result', 'best', 'outcome'), ('best', 'outcome', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('example', 'NN'), (',', ','), ('looking', 'VBG'), ('new', 'JJ'), ('job', 'NN'), (',', ','), ('would', 'MD'), ('assume', 'VB'), ('job', 'NN'), ('options', 'NNS'), ('given', 'VBN'), (',', ','), ('would', 'MD'), ('focus', 'VB'), ('problem', 'NN'), ('de-', 'NN'), ('ciding', 'VBG'), ('given', 'VBN'), ('options', 'NNS'), ('likely', 'JJ'), ('result', 'NN'), ('best', 'JJS'), ('outcome', 'NN'), ('.', '.')]

 (S
  For/IN
  (NP example/NN)
  ,/,
  looking/VBG
  (NP new/JJ job/NN)
  ,/,
  would/MD
  assume/VB
  (NP job/NN options/NNS)
  given/VBN
  ,/,
  would/MD
  focus/VB
  (NP problem/NN de-/NN)
  ciding/VBG
  given/VBN
  (NP options/NNS)
  (NP likely/JJ result/NN)
  best/JJS
  (NP outcome/NN)
  ./.) 


>> Noun Phrases are: 
 ['example', 'new job', 'job options', 'problem de-', 'options', 'likely result', 'outcome']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('looking', 'look'), ('new', 'new'), ('job', 'job'), (',', ','), ('would', 'would'), ('assume', 'assum'), ('job', 'job'), ('options', 'option'), ('given', 'given'), (',', ','), ('would', 'would'), ('focus', 'focu'), ('problem', 'problem'), ('de-', 'de-'), ('ciding', 'cide'), ('given', 'given'), ('options', 'option'), ('likely', 'like'), ('result', 'result'), ('best', 'best'), ('outcome', 'outcom'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('looking', 'look'), ('new', 'new'), ('job', 'job'), (',', ','), ('would', 'would'), ('assume', 'assum'), ('job', 'job'), ('options', 'option'), ('given', 'given'), (',', ','), ('would', 'would'), ('focus', 'focus'), ('problem', 'problem'), ('de-', 'de-'), ('ciding', 'cide'), ('given', 'given'), ('options', 'option'), ('likely', 'like'), ('result', 'result'), ('best', 'best'), ('outcome', 'outcom'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('example', 'example'), (',', ','), ('looking', 'looking'), ('new', 'new'), ('job', 'job'), (',', ','), ('would', 'would'), ('assume', 'assume'), ('job', 'job'), ('options', 'option'), ('given', 'given'), (',', ','), ('would', 'would'), ('focus', 'focus'), ('problem', 'problem'), ('de-', 'de-'), ('ciding', 'ciding'), ('given', 'given'), ('options', 'option'), ('likely', 'likely'), ('result', 'result'), ('best', 'best'), ('outcome', 'outcome'), ('.', '.')]



============================ Sentence 207 =============================

But as [Keeney, 1992; Hammond et al., 1999; Carlson et  al., 2008]] and other decision analysts point out, this as- sumption is not only unrealistic as a descriptive model of  human decision making, but it is unhelpful as a normative  (or prescriptive) model: To make a good decision between  alternatives, it is necessary first to establish the goals (or  problem) that motivate the alternatives. 


>> Tokens are: 
 ['But', '[', 'Keeney', ',', '1992', ';', 'Hammond', 'et', 'al.', ',', '1999', ';', 'Carlson', 'et', 'al.', ',', '2008', ']', ']', 'decision', 'analysts', 'point', ',', 'as-', 'sumption', 'unrealistic', 'descriptive', 'model', 'human', 'decision', 'making', ',', 'unhelpful', 'normative', '(', 'prescriptive', ')', 'model', ':', 'To', 'make', 'good', 'decision', 'alternatives', ',', 'necessary', 'first', 'establish', 'goals', '(', 'problem', ')', 'motivate', 'alternatives', '.']

>> Bigrams are: 
 [('But', '['), ('[', 'Keeney'), ('Keeney', ','), (',', '1992'), ('1992', ';'), (';', 'Hammond'), ('Hammond', 'et'), ('et', 'al.'), ('al.', ','), (',', '1999'), ('1999', ';'), (';', 'Carlson'), ('Carlson', 'et'), ('et', 'al.'), ('al.', ','), (',', '2008'), ('2008', ']'), (']', ']'), (']', 'decision'), ('decision', 'analysts'), ('analysts', 'point'), ('point', ','), (',', 'as-'), ('as-', 'sumption'), ('sumption', 'unrealistic'), ('unrealistic', 'descriptive'), ('descriptive', 'model'), ('model', 'human'), ('human', 'decision'), ('decision', 'making'), ('making', ','), (',', 'unhelpful'), ('unhelpful', 'normative'), ('normative', '('), ('(', 'prescriptive'), ('prescriptive', ')'), (')', 'model'), ('model', ':'), (':', 'To'), ('To', 'make'), ('make', 'good'), ('good', 'decision'), ('decision', 'alternatives'), ('alternatives', ','), (',', 'necessary'), ('necessary', 'first'), ('first', 'establish'), ('establish', 'goals'), ('goals', '('), ('(', 'problem'), ('problem', ')'), (')', 'motivate'), ('motivate', 'alternatives'), ('alternatives', '.')]

>> Trigrams are: 
 [('But', '[', 'Keeney'), ('[', 'Keeney', ','), ('Keeney', ',', '1992'), (',', '1992', ';'), ('1992', ';', 'Hammond'), (';', 'Hammond', 'et'), ('Hammond', 'et', 'al.'), ('et', 'al.', ','), ('al.', ',', '1999'), (',', '1999', ';'), ('1999', ';', 'Carlson'), (';', 'Carlson', 'et'), ('Carlson', 'et', 'al.'), ('et', 'al.', ','), ('al.', ',', '2008'), (',', '2008', ']'), ('2008', ']', ']'), (']', ']', 'decision'), (']', 'decision', 'analysts'), ('decision', 'analysts', 'point'), ('analysts', 'point', ','), ('point', ',', 'as-'), (',', 'as-', 'sumption'), ('as-', 'sumption', 'unrealistic'), ('sumption', 'unrealistic', 'descriptive'), ('unrealistic', 'descriptive', 'model'), ('descriptive', 'model', 'human'), ('model', 'human', 'decision'), ('human', 'decision', 'making'), ('decision', 'making', ','), ('making', ',', 'unhelpful'), (',', 'unhelpful', 'normative'), ('unhelpful', 'normative', '('), ('normative', '(', 'prescriptive'), ('(', 'prescriptive', ')'), ('prescriptive', ')', 'model'), (')', 'model', ':'), ('model', ':', 'To'), (':', 'To', 'make'), ('To', 'make', 'good'), ('make', 'good', 'decision'), ('good', 'decision', 'alternatives'), ('decision', 'alternatives', ','), ('alternatives', ',', 'necessary'), (',', 'necessary', 'first'), ('necessary', 'first', 'establish'), ('first', 'establish', 'goals'), ('establish', 'goals', '('), ('goals', '(', 'problem'), ('(', 'problem', ')'), ('problem', ')', 'motivate'), (')', 'motivate', 'alternatives'), ('motivate', 'alternatives', '.')]

>> POS Tags are: 
 [('But', 'CC'), ('[', 'NNP'), ('Keeney', 'NNP'), (',', ','), ('1992', 'CD'), (';', ':'), ('Hammond', 'NNP'), ('et', 'FW'), ('al.', 'NN'), (',', ','), ('1999', 'CD'), (';', ':'), ('Carlson', 'NNP'), ('et', 'FW'), ('al.', 'NN'), (',', ','), ('2008', 'CD'), (']', 'NN'), (']', 'NNP'), ('decision', 'NN'), ('analysts', 'NNS'), ('point', 'VBP'), (',', ','), ('as-', 'JJ'), ('sumption', 'NN'), ('unrealistic', 'JJ'), ('descriptive', 'JJ'), ('model', 'NN'), ('human', 'JJ'), ('decision', 'NN'), ('making', 'NN'), (',', ','), ('unhelpful', 'JJ'), ('normative', 'JJ'), ('(', '('), ('prescriptive', 'JJ'), (')', ')'), ('model', 'NN'), (':', ':'), ('To', 'TO'), ('make', 'VB'), ('good', 'JJ'), ('decision', 'NN'), ('alternatives', 'NNS'), (',', ','), ('necessary', 'JJ'), ('first', 'JJ'), ('establish', 'VB'), ('goals', 'NNS'), ('(', '('), ('problem', 'NN'), (')', ')'), ('motivate', 'NN'), ('alternatives', 'NNS'), ('.', '.')]

 (S
  But/CC
  (NP [/NNP Keeney/NNP)
  ,/,
  1992/CD
  ;/:
  (NP Hammond/NNP)
  et/FW
  (NP al./NN)
  ,/,
  1999/CD
  ;/:
  (NP Carlson/NNP)
  et/FW
  (NP al./NN)
  ,/,
  2008/CD
  (NP ]/NN ]/NNP decision/NN analysts/NNS)
  point/VBP
  ,/,
  (NP as-/JJ sumption/NN)
  (NP unrealistic/JJ descriptive/JJ model/NN)
  (NP human/JJ decision/NN making/NN)
  ,/,
  unhelpful/JJ
  normative/JJ
  (/(
  prescriptive/JJ
  )/)
  (NP model/NN)
  :/:
  To/TO
  make/VB
  (NP good/JJ decision/NN alternatives/NNS)
  ,/,
  necessary/JJ
  first/JJ
  establish/VB
  (NP goals/NNS)
  (/(
  (NP problem/NN)
  )/)
  (NP motivate/NN alternatives/NNS)
  ./.) 


>> Noun Phrases are: 
 ['[ Keeney', 'Hammond', 'al.', 'Carlson', 'al.', '] ] decision analysts', 'as- sumption', 'unrealistic descriptive model', 'human decision making', 'model', 'good decision alternatives', 'goals', 'problem', 'motivate alternatives']

>> Named Entities are: 
 [('PERSON', 'Hammond'), ('PERSON', 'Carlson')] 

>> Stemming using Porter Stemmer: 
 [('But', 'but'), ('[', '['), ('Keeney', 'keeney'), (',', ','), ('1992', '1992'), (';', ';'), ('Hammond', 'hammond'), ('et', 'et'), ('al.', 'al.'), (',', ','), ('1999', '1999'), (';', ';'), ('Carlson', 'carlson'), ('et', 'et'), ('al.', 'al.'), (',', ','), ('2008', '2008'), (']', ']'), (']', ']'), ('decision', 'decis'), ('analysts', 'analyst'), ('point', 'point'), (',', ','), ('as-', 'as-'), ('sumption', 'sumption'), ('unrealistic', 'unrealist'), ('descriptive', 'descript'), ('model', 'model'), ('human', 'human'), ('decision', 'decis'), ('making', 'make'), (',', ','), ('unhelpful', 'unhelp'), ('normative', 'norm'), ('(', '('), ('prescriptive', 'prescript'), (')', ')'), ('model', 'model'), (':', ':'), ('To', 'to'), ('make', 'make'), ('good', 'good'), ('decision', 'decis'), ('alternatives', 'altern'), (',', ','), ('necessary', 'necessari'), ('first', 'first'), ('establish', 'establish'), ('goals', 'goal'), ('(', '('), ('problem', 'problem'), (')', ')'), ('motivate', 'motiv'), ('alternatives', 'altern'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('But', 'but'), ('[', '['), ('Keeney', 'keeney'), (',', ','), ('1992', '1992'), (';', ';'), ('Hammond', 'hammond'), ('et', 'et'), ('al.', 'al.'), (',', ','), ('1999', '1999'), (';', ';'), ('Carlson', 'carlson'), ('et', 'et'), ('al.', 'al.'), (',', ','), ('2008', '2008'), (']', ']'), (']', ']'), ('decision', 'decis'), ('analysts', 'analyst'), ('point', 'point'), (',', ','), ('as-', 'as-'), ('sumption', 'sumption'), ('unrealistic', 'unrealist'), ('descriptive', 'descript'), ('model', 'model'), ('human', 'human'), ('decision', 'decis'), ('making', 'make'), (',', ','), ('unhelpful', 'unhelp'), ('normative', 'normat'), ('(', '('), ('prescriptive', 'prescript'), (')', ')'), ('model', 'model'), (':', ':'), ('To', 'to'), ('make', 'make'), ('good', 'good'), ('decision', 'decis'), ('alternatives', 'altern'), (',', ','), ('necessary', 'necessari'), ('first', 'first'), ('establish', 'establish'), ('goals', 'goal'), ('(', '('), ('problem', 'problem'), (')', ')'), ('motivate', 'motiv'), ('alternatives', 'altern'), ('.', '.')]

>> Lemmatization: 
 [('But', 'But'), ('[', '['), ('Keeney', 'Keeney'), (',', ','), ('1992', '1992'), (';', ';'), ('Hammond', 'Hammond'), ('et', 'et'), ('al.', 'al.'), (',', ','), ('1999', '1999'), (';', ';'), ('Carlson', 'Carlson'), ('et', 'et'), ('al.', 'al.'), (',', ','), ('2008', '2008'), (']', ']'), (']', ']'), ('decision', 'decision'), ('analysts', 'analyst'), ('point', 'point'), (',', ','), ('as-', 'as-'), ('sumption', 'sumption'), ('unrealistic', 'unrealistic'), ('descriptive', 'descriptive'), ('model', 'model'), ('human', 'human'), ('decision', 'decision'), ('making', 'making'), (',', ','), ('unhelpful', 'unhelpful'), ('normative', 'normative'), ('(', '('), ('prescriptive', 'prescriptive'), (')', ')'), ('model', 'model'), (':', ':'), ('To', 'To'), ('make', 'make'), ('good', 'good'), ('decision', 'decision'), ('alternatives', 'alternative'), (',', ','), ('necessary', 'necessary'), ('first', 'first'), ('establish', 'establish'), ('goals', 'goal'), ('(', '('), ('problem', 'problem'), (')', ')'), ('motivate', 'motivate'), ('alternatives', 'alternative'), ('.', '.')]



============================ Sentence 208 =============================

These goals might  come from explicitly represented maintenance goals or they  might be hidden implicitly in lower-level heuristic rules or  stimulus-response associations. 


>> Tokens are: 
 ['These', 'goals', 'might', 'come', 'explicitly', 'represented', 'maintenance', 'goals', 'might', 'hidden', 'implicitly', 'lower-level', 'heuristic', 'rules', 'stimulus-response', 'associations', '.']

>> Bigrams are: 
 [('These', 'goals'), ('goals', 'might'), ('might', 'come'), ('come', 'explicitly'), ('explicitly', 'represented'), ('represented', 'maintenance'), ('maintenance', 'goals'), ('goals', 'might'), ('might', 'hidden'), ('hidden', 'implicitly'), ('implicitly', 'lower-level'), ('lower-level', 'heuristic'), ('heuristic', 'rules'), ('rules', 'stimulus-response'), ('stimulus-response', 'associations'), ('associations', '.')]

>> Trigrams are: 
 [('These', 'goals', 'might'), ('goals', 'might', 'come'), ('might', 'come', 'explicitly'), ('come', 'explicitly', 'represented'), ('explicitly', 'represented', 'maintenance'), ('represented', 'maintenance', 'goals'), ('maintenance', 'goals', 'might'), ('goals', 'might', 'hidden'), ('might', 'hidden', 'implicitly'), ('hidden', 'implicitly', 'lower-level'), ('implicitly', 'lower-level', 'heuristic'), ('lower-level', 'heuristic', 'rules'), ('heuristic', 'rules', 'stimulus-response'), ('rules', 'stimulus-response', 'associations'), ('stimulus-response', 'associations', '.')]

>> POS Tags are: 
 [('These', 'DT'), ('goals', 'NNS'), ('might', 'MD'), ('come', 'VB'), ('explicitly', 'RB'), ('represented', 'VBN'), ('maintenance', 'NN'), ('goals', 'NNS'), ('might', 'MD'), ('hidden', 'VB'), ('implicitly', 'RB'), ('lower-level', 'JJ'), ('heuristic', 'JJ'), ('rules', 'NNS'), ('stimulus-response', 'JJ'), ('associations', 'NNS'), ('.', '.')]

 (S
  (NP These/DT goals/NNS)
  might/MD
  come/VB
  explicitly/RB
  represented/VBN
  (NP maintenance/NN goals/NNS)
  might/MD
  hidden/VB
  implicitly/RB
  (NP lower-level/JJ heuristic/JJ rules/NNS)
  (NP stimulus-response/JJ associations/NNS)
  ./.) 


>> Noun Phrases are: 
 ['These goals', 'maintenance goals', 'lower-level heuristic rules', 'stimulus-response associations']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('These', 'these'), ('goals', 'goal'), ('might', 'might'), ('come', 'come'), ('explicitly', 'explicitli'), ('represented', 'repres'), ('maintenance', 'mainten'), ('goals', 'goal'), ('might', 'might'), ('hidden', 'hidden'), ('implicitly', 'implicitli'), ('lower-level', 'lower-level'), ('heuristic', 'heurist'), ('rules', 'rule'), ('stimulus-response', 'stimulus-respons'), ('associations', 'associ'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('These', 'these'), ('goals', 'goal'), ('might', 'might'), ('come', 'come'), ('explicitly', 'explicit'), ('represented', 'repres'), ('maintenance', 'mainten'), ('goals', 'goal'), ('might', 'might'), ('hidden', 'hidden'), ('implicitly', 'implicit'), ('lower-level', 'lower-level'), ('heuristic', 'heurist'), ('rules', 'rule'), ('stimulus-response', 'stimulus-respons'), ('associations', 'associ'), ('.', '.')]

>> Lemmatization: 
 [('These', 'These'), ('goals', 'goal'), ('might', 'might'), ('come', 'come'), ('explicitly', 'explicitly'), ('represented', 'represented'), ('maintenance', 'maintenance'), ('goals', 'goal'), ('might', 'might'), ('hidden', 'hidden'), ('implicitly', 'implicitly'), ('lower-level', 'lower-level'), ('heuristic', 'heuristic'), ('rules', 'rule'), ('stimulus-response', 'stimulus-response'), ('associations', 'association'), ('.', '.')]



============================ Sentence 209 =============================

For example, you might receive an offer of a new job  when you are not looking for one, and you may be tempted  to limit your options simply to deciding between accepting  or rejecting the offer. 


>> Tokens are: 
 ['For', 'example', ',', 'might', 'receive', 'offer', 'new', 'job', 'looking', 'one', ',', 'may', 'tempted', 'limit', 'options', 'simply', 'deciding', 'accepting', 'rejecting', 'offer', '.']

>> Bigrams are: 
 [('For', 'example'), ('example', ','), (',', 'might'), ('might', 'receive'), ('receive', 'offer'), ('offer', 'new'), ('new', 'job'), ('job', 'looking'), ('looking', 'one'), ('one', ','), (',', 'may'), ('may', 'tempted'), ('tempted', 'limit'), ('limit', 'options'), ('options', 'simply'), ('simply', 'deciding'), ('deciding', 'accepting'), ('accepting', 'rejecting'), ('rejecting', 'offer'), ('offer', '.')]

>> Trigrams are: 
 [('For', 'example', ','), ('example', ',', 'might'), (',', 'might', 'receive'), ('might', 'receive', 'offer'), ('receive', 'offer', 'new'), ('offer', 'new', 'job'), ('new', 'job', 'looking'), ('job', 'looking', 'one'), ('looking', 'one', ','), ('one', ',', 'may'), (',', 'may', 'tempted'), ('may', 'tempted', 'limit'), ('tempted', 'limit', 'options'), ('limit', 'options', 'simply'), ('options', 'simply', 'deciding'), ('simply', 'deciding', 'accepting'), ('deciding', 'accepting', 'rejecting'), ('accepting', 'rejecting', 'offer'), ('rejecting', 'offer', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('example', 'NN'), (',', ','), ('might', 'MD'), ('receive', 'VB'), ('offer', 'NN'), ('new', 'JJ'), ('job', 'NN'), ('looking', 'VBG'), ('one', 'CD'), (',', ','), ('may', 'MD'), ('tempted', 'VB'), ('limit', 'NN'), ('options', 'NNS'), ('simply', 'RB'), ('deciding', 'VBG'), ('accepting', 'VBG'), ('rejecting', 'VBG'), ('offer', 'NN'), ('.', '.')]

 (S
  For/IN
  (NP example/NN)
  ,/,
  might/MD
  receive/VB
  (NP offer/NN)
  (NP new/JJ job/NN)
  looking/VBG
  one/CD
  ,/,
  may/MD
  tempted/VB
  (NP limit/NN options/NNS)
  simply/RB
  deciding/VBG
  accepting/VBG
  rejecting/VBG
  (NP offer/NN)
  ./.) 


>> Noun Phrases are: 
 ['example', 'offer', 'new job', 'limit options', 'offer']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('might', 'might'), ('receive', 'receiv'), ('offer', 'offer'), ('new', 'new'), ('job', 'job'), ('looking', 'look'), ('one', 'one'), (',', ','), ('may', 'may'), ('tempted', 'tempt'), ('limit', 'limit'), ('options', 'option'), ('simply', 'simpli'), ('deciding', 'decid'), ('accepting', 'accept'), ('rejecting', 'reject'), ('offer', 'offer'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('might', 'might'), ('receive', 'receiv'), ('offer', 'offer'), ('new', 'new'), ('job', 'job'), ('looking', 'look'), ('one', 'one'), (',', ','), ('may', 'may'), ('tempted', 'tempt'), ('limit', 'limit'), ('options', 'option'), ('simply', 'simpli'), ('deciding', 'decid'), ('accepting', 'accept'), ('rejecting', 'reject'), ('offer', 'offer'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('example', 'example'), (',', ','), ('might', 'might'), ('receive', 'receive'), ('offer', 'offer'), ('new', 'new'), ('job', 'job'), ('looking', 'looking'), ('one', 'one'), (',', ','), ('may', 'may'), ('tempted', 'tempted'), ('limit', 'limit'), ('options', 'option'), ('simply', 'simply'), ('deciding', 'deciding'), ('accepting', 'accepting'), ('rejecting', 'rejecting'), ('offer', 'offer'), ('.', '.')]



============================ Sentence 210 =============================

But if you step back and think about  the broader context of your goals, then you might generate  other alternatives, like perhaps using the job offer to negoti- ate an improvement in your current employment. 


>> Tokens are: 
 ['But', 'step', 'back', 'think', 'broader', 'context', 'goals', ',', 'might', 'generate', 'alternatives', ',', 'like', 'perhaps', 'using', 'job', 'offer', 'negoti-', 'ate', 'improvement', 'current', 'employment', '.']

>> Bigrams are: 
 [('But', 'step'), ('step', 'back'), ('back', 'think'), ('think', 'broader'), ('broader', 'context'), ('context', 'goals'), ('goals', ','), (',', 'might'), ('might', 'generate'), ('generate', 'alternatives'), ('alternatives', ','), (',', 'like'), ('like', 'perhaps'), ('perhaps', 'using'), ('using', 'job'), ('job', 'offer'), ('offer', 'negoti-'), ('negoti-', 'ate'), ('ate', 'improvement'), ('improvement', 'current'), ('current', 'employment'), ('employment', '.')]

>> Trigrams are: 
 [('But', 'step', 'back'), ('step', 'back', 'think'), ('back', 'think', 'broader'), ('think', 'broader', 'context'), ('broader', 'context', 'goals'), ('context', 'goals', ','), ('goals', ',', 'might'), (',', 'might', 'generate'), ('might', 'generate', 'alternatives'), ('generate', 'alternatives', ','), ('alternatives', ',', 'like'), (',', 'like', 'perhaps'), ('like', 'perhaps', 'using'), ('perhaps', 'using', 'job'), ('using', 'job', 'offer'), ('job', 'offer', 'negoti-'), ('offer', 'negoti-', 'ate'), ('negoti-', 'ate', 'improvement'), ('ate', 'improvement', 'current'), ('improvement', 'current', 'employment'), ('current', 'employment', '.')]

>> POS Tags are: 
 [('But', 'CC'), ('step', 'VB'), ('back', 'RB'), ('think', 'VBP'), ('broader', 'JJR'), ('context', 'NN'), ('goals', 'NNS'), (',', ','), ('might', 'MD'), ('generate', 'VB'), ('alternatives', 'NNS'), (',', ','), ('like', 'IN'), ('perhaps', 'RB'), ('using', 'VBG'), ('job', 'NN'), ('offer', 'VBP'), ('negoti-', 'JJ'), ('ate', 'NN'), ('improvement', 'NN'), ('current', 'JJ'), ('employment', 'NN'), ('.', '.')]

 (S
  But/CC
  step/VB
  back/RB
  think/VBP
  broader/JJR
  (NP context/NN goals/NNS)
  ,/,
  might/MD
  generate/VB
  (NP alternatives/NNS)
  ,/,
  like/IN
  perhaps/RB
  using/VBG
  (NP job/NN)
  offer/VBP
  (NP negoti-/JJ ate/NN improvement/NN)
  (NP current/JJ employment/NN)
  ./.) 


>> Noun Phrases are: 
 ['context goals', 'alternatives', 'job', 'negoti- ate improvement', 'current employment']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('But', 'but'), ('step', 'step'), ('back', 'back'), ('think', 'think'), ('broader', 'broader'), ('context', 'context'), ('goals', 'goal'), (',', ','), ('might', 'might'), ('generate', 'gener'), ('alternatives', 'altern'), (',', ','), ('like', 'like'), ('perhaps', 'perhap'), ('using', 'use'), ('job', 'job'), ('offer', 'offer'), ('negoti-', 'negoti-'), ('ate', 'ate'), ('improvement', 'improv'), ('current', 'current'), ('employment', 'employ'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('But', 'but'), ('step', 'step'), ('back', 'back'), ('think', 'think'), ('broader', 'broader'), ('context', 'context'), ('goals', 'goal'), (',', ','), ('might', 'might'), ('generate', 'generat'), ('alternatives', 'altern'), (',', ','), ('like', 'like'), ('perhaps', 'perhap'), ('using', 'use'), ('job', 'job'), ('offer', 'offer'), ('negoti-', 'negoti-'), ('ate', 'ate'), ('improvement', 'improv'), ('current', 'current'), ('employment', 'employ'), ('.', '.')]

>> Lemmatization: 
 [('But', 'But'), ('step', 'step'), ('back', 'back'), ('think', 'think'), ('broader', 'broader'), ('context', 'context'), ('goals', 'goal'), (',', ','), ('might', 'might'), ('generate', 'generate'), ('alternatives', 'alternative'), (',', ','), ('like', 'like'), ('perhaps', 'perhaps'), ('using', 'using'), ('job', 'job'), ('offer', 'offer'), ('negoti-', 'negoti-'), ('ate', 'ate'), ('improvement', 'improvement'), ('current', 'current'), ('employment', 'employment'), ('.', '.')]



============================ Sentence 211 =============================

Decision analysis provides informal strategies for making  better choices by paying greater attention to the goals that  motivate the alternatives. 


>> Tokens are: 
 ['Decision', 'analysis', 'provides', 'informal', 'strategies', 'making', 'better', 'choices', 'paying', 'greater', 'attention', 'goals', 'motivate', 'alternatives', '.']

>> Bigrams are: 
 [('Decision', 'analysis'), ('analysis', 'provides'), ('provides', 'informal'), ('informal', 'strategies'), ('strategies', 'making'), ('making', 'better'), ('better', 'choices'), ('choices', 'paying'), ('paying', 'greater'), ('greater', 'attention'), ('attention', 'goals'), ('goals', 'motivate'), ('motivate', 'alternatives'), ('alternatives', '.')]

>> Trigrams are: 
 [('Decision', 'analysis', 'provides'), ('analysis', 'provides', 'informal'), ('provides', 'informal', 'strategies'), ('informal', 'strategies', 'making'), ('strategies', 'making', 'better'), ('making', 'better', 'choices'), ('better', 'choices', 'paying'), ('choices', 'paying', 'greater'), ('paying', 'greater', 'attention'), ('greater', 'attention', 'goals'), ('attention', 'goals', 'motivate'), ('goals', 'motivate', 'alternatives'), ('motivate', 'alternatives', '.')]

>> POS Tags are: 
 [('Decision', 'NN'), ('analysis', 'NN'), ('provides', 'VBZ'), ('informal', 'JJ'), ('strategies', 'NNS'), ('making', 'VBG'), ('better', 'JJR'), ('choices', 'NNS'), ('paying', 'VBG'), ('greater', 'JJR'), ('attention', 'NN'), ('goals', 'NNS'), ('motivate', 'VBP'), ('alternatives', 'NNS'), ('.', '.')]

 (S
  (NP Decision/NN analysis/NN)
  provides/VBZ
  (NP informal/JJ strategies/NNS)
  making/VBG
  better/JJR
  (NP choices/NNS)
  paying/VBG
  greater/JJR
  (NP attention/NN goals/NNS)
  motivate/VBP
  (NP alternatives/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Decision analysis', 'informal strategies', 'choices', 'attention goals', 'alternatives']

>> Named Entities are: 
 [('GPE', 'Decision')] 

>> Stemming using Porter Stemmer: 
 [('Decision', 'decis'), ('analysis', 'analysi'), ('provides', 'provid'), ('informal', 'inform'), ('strategies', 'strategi'), ('making', 'make'), ('better', 'better'), ('choices', 'choic'), ('paying', 'pay'), ('greater', 'greater'), ('attention', 'attent'), ('goals', 'goal'), ('motivate', 'motiv'), ('alternatives', 'altern'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Decision', 'decis'), ('analysis', 'analysi'), ('provides', 'provid'), ('informal', 'inform'), ('strategies', 'strategi'), ('making', 'make'), ('better', 'better'), ('choices', 'choic'), ('paying', 'pay'), ('greater', 'greater'), ('attention', 'attent'), ('goals', 'goal'), ('motivate', 'motiv'), ('alternatives', 'altern'), ('.', '.')]

>> Lemmatization: 
 [('Decision', 'Decision'), ('analysis', 'analysis'), ('provides', 'provides'), ('informal', 'informal'), ('strategies', 'strategy'), ('making', 'making'), ('better', 'better'), ('choices', 'choice'), ('paying', 'paying'), ('greater', 'greater'), ('attention', 'attention'), ('goals', 'goal'), ('motivate', 'motivate'), ('alternatives', 'alternative'), ('.', '.')]



============================ Sentence 212 =============================

The ALP agent model provides a  simple framework, which can help to formalize such strate- gies, by integrating them with a comprehensive model of  human thinking. 


>> Tokens are: 
 ['The', 'ALP', 'agent', 'model', 'provides', 'simple', 'framework', ',', 'help', 'formalize', 'strate-', 'gies', ',', 'integrating', 'comprehensive', 'model', 'human', 'thinking', '.']

>> Bigrams are: 
 [('The', 'ALP'), ('ALP', 'agent'), ('agent', 'model'), ('model', 'provides'), ('provides', 'simple'), ('simple', 'framework'), ('framework', ','), (',', 'help'), ('help', 'formalize'), ('formalize', 'strate-'), ('strate-', 'gies'), ('gies', ','), (',', 'integrating'), ('integrating', 'comprehensive'), ('comprehensive', 'model'), ('model', 'human'), ('human', 'thinking'), ('thinking', '.')]

>> Trigrams are: 
 [('The', 'ALP', 'agent'), ('ALP', 'agent', 'model'), ('agent', 'model', 'provides'), ('model', 'provides', 'simple'), ('provides', 'simple', 'framework'), ('simple', 'framework', ','), ('framework', ',', 'help'), (',', 'help', 'formalize'), ('help', 'formalize', 'strate-'), ('formalize', 'strate-', 'gies'), ('strate-', 'gies', ','), ('gies', ',', 'integrating'), (',', 'integrating', 'comprehensive'), ('integrating', 'comprehensive', 'model'), ('comprehensive', 'model', 'human'), ('model', 'human', 'thinking'), ('human', 'thinking', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('ALP', 'NNP'), ('agent', 'NN'), ('model', 'NN'), ('provides', 'VBZ'), ('simple', 'JJ'), ('framework', 'NN'), (',', ','), ('help', 'NN'), ('formalize', 'VB'), ('strate-', 'JJ'), ('gies', 'NNS'), (',', ','), ('integrating', 'VBG'), ('comprehensive', 'JJ'), ('model', 'NN'), ('human', 'JJ'), ('thinking', 'NN'), ('.', '.')]

 (S
  (NP The/DT ALP/NNP agent/NN model/NN)
  provides/VBZ
  (NP simple/JJ framework/NN)
  ,/,
  (NP help/NN)
  formalize/VB
  (NP strate-/JJ gies/NNS)
  ,/,
  integrating/VBG
  (NP comprehensive/JJ model/NN)
  (NP human/JJ thinking/NN)
  ./.) 


>> Noun Phrases are: 
 ['The ALP agent model', 'simple framework', 'help', 'strate- gies', 'comprehensive model', 'human thinking']

>> Named Entities are: 
 [('ORGANIZATION', 'ALP')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), ('provides', 'provid'), ('simple', 'simpl'), ('framework', 'framework'), (',', ','), ('help', 'help'), ('formalize', 'formal'), ('strate-', 'strate-'), ('gies', 'gie'), (',', ','), ('integrating', 'integr'), ('comprehensive', 'comprehens'), ('model', 'model'), ('human', 'human'), ('thinking', 'think'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), ('provides', 'provid'), ('simple', 'simpl'), ('framework', 'framework'), (',', ','), ('help', 'help'), ('formalize', 'formal'), ('strate-', 'strate-'), ('gies', 'gie'), (',', ','), ('integrating', 'integr'), ('comprehensive', 'comprehens'), ('model', 'model'), ('human', 'human'), ('thinking', 'think'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('ALP', 'ALP'), ('agent', 'agent'), ('model', 'model'), ('provides', 'provides'), ('simple', 'simple'), ('framework', 'framework'), (',', ','), ('help', 'help'), ('formalize', 'formalize'), ('strate-', 'strate-'), ('gies', 'gy'), (',', ','), ('integrating', 'integrating'), ('comprehensive', 'comprehensive'), ('model', 'model'), ('human', 'human'), ('thinking', 'thinking'), ('.', '.')]



============================ Sentence 213 =============================

In particular, it shows how the same crite- ria of expected utility, which are used in classical decision  theory to choose between alternatives, can also be used to  guide the search for alternatives in some form of best-first  search. 


>> Tokens are: 
 ['In', 'particular', ',', 'shows', 'crite-', 'ria', 'expected', 'utility', ',', 'used', 'classical', 'decision', 'theory', 'choose', 'alternatives', ',', 'also', 'used', 'guide', 'search', 'alternatives', 'form', 'best-first', 'search', '.']

>> Bigrams are: 
 [('In', 'particular'), ('particular', ','), (',', 'shows'), ('shows', 'crite-'), ('crite-', 'ria'), ('ria', 'expected'), ('expected', 'utility'), ('utility', ','), (',', 'used'), ('used', 'classical'), ('classical', 'decision'), ('decision', 'theory'), ('theory', 'choose'), ('choose', 'alternatives'), ('alternatives', ','), (',', 'also'), ('also', 'used'), ('used', 'guide'), ('guide', 'search'), ('search', 'alternatives'), ('alternatives', 'form'), ('form', 'best-first'), ('best-first', 'search'), ('search', '.')]

>> Trigrams are: 
 [('In', 'particular', ','), ('particular', ',', 'shows'), (',', 'shows', 'crite-'), ('shows', 'crite-', 'ria'), ('crite-', 'ria', 'expected'), ('ria', 'expected', 'utility'), ('expected', 'utility', ','), ('utility', ',', 'used'), (',', 'used', 'classical'), ('used', 'classical', 'decision'), ('classical', 'decision', 'theory'), ('decision', 'theory', 'choose'), ('theory', 'choose', 'alternatives'), ('choose', 'alternatives', ','), ('alternatives', ',', 'also'), (',', 'also', 'used'), ('also', 'used', 'guide'), ('used', 'guide', 'search'), ('guide', 'search', 'alternatives'), ('search', 'alternatives', 'form'), ('alternatives', 'form', 'best-first'), ('form', 'best-first', 'search'), ('best-first', 'search', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('particular', 'JJ'), (',', ','), ('shows', 'VBZ'), ('crite-', 'NN'), ('ria', 'NN'), ('expected', 'VBN'), ('utility', 'NN'), (',', ','), ('used', 'VBD'), ('classical', 'JJ'), ('decision', 'NN'), ('theory', 'NN'), ('choose', 'JJ'), ('alternatives', 'NNS'), (',', ','), ('also', 'RB'), ('used', 'VBD'), ('guide', 'JJ'), ('search', 'NN'), ('alternatives', 'NNS'), ('form', 'VBP'), ('best-first', 'JJ'), ('search', 'NN'), ('.', '.')]

 (S
  In/IN
  particular/JJ
  ,/,
  shows/VBZ
  (NP crite-/NN ria/NN)
  expected/VBN
  (NP utility/NN)
  ,/,
  used/VBD
  (NP classical/JJ decision/NN theory/NN)
  (NP choose/JJ alternatives/NNS)
  ,/,
  also/RB
  used/VBD
  (NP guide/JJ search/NN alternatives/NNS)
  form/VBP
  (NP best-first/JJ search/NN)
  ./.) 


>> Noun Phrases are: 
 ['crite- ria', 'utility', 'classical decision theory', 'choose alternatives', 'guide search alternatives', 'best-first search']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('particular', 'particular'), (',', ','), ('shows', 'show'), ('crite-', 'crite-'), ('ria', 'ria'), ('expected', 'expect'), ('utility', 'util'), (',', ','), ('used', 'use'), ('classical', 'classic'), ('decision', 'decis'), ('theory', 'theori'), ('choose', 'choos'), ('alternatives', 'altern'), (',', ','), ('also', 'also'), ('used', 'use'), ('guide', 'guid'), ('search', 'search'), ('alternatives', 'altern'), ('form', 'form'), ('best-first', 'best-first'), ('search', 'search'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('particular', 'particular'), (',', ','), ('shows', 'show'), ('crite-', 'crite-'), ('ria', 'ria'), ('expected', 'expect'), ('utility', 'util'), (',', ','), ('used', 'use'), ('classical', 'classic'), ('decision', 'decis'), ('theory', 'theori'), ('choose', 'choos'), ('alternatives', 'altern'), (',', ','), ('also', 'also'), ('used', 'use'), ('guide', 'guid'), ('search', 'search'), ('alternatives', 'altern'), ('form', 'form'), ('best-first', 'best-first'), ('search', 'search'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('particular', 'particular'), (',', ','), ('shows', 'show'), ('crite-', 'crite-'), ('ria', 'ria'), ('expected', 'expected'), ('utility', 'utility'), (',', ','), ('used', 'used'), ('classical', 'classical'), ('decision', 'decision'), ('theory', 'theory'), ('choose', 'choose'), ('alternatives', 'alternative'), (',', ','), ('also', 'also'), ('used', 'used'), ('guide', 'guide'), ('search', 'search'), ('alternatives', 'alternative'), ('form', 'form'), ('best-first', 'best-first'), ('search', 'search'), ('.', '.')]



============================ Sentence 214 =============================

Moreover, it shows how heuristics and even stimu- lus-responses can be integrated with logical thinking and  decision theory in the spirit of dual process models. 


>> Tokens are: 
 ['Moreover', ',', 'shows', 'heuristics', 'even', 'stimu-', 'lus-responses', 'integrated', 'logical', 'thinking', 'decision', 'theory', 'spirit', 'dual', 'process', 'models', '.']

>> Bigrams are: 
 [('Moreover', ','), (',', 'shows'), ('shows', 'heuristics'), ('heuristics', 'even'), ('even', 'stimu-'), ('stimu-', 'lus-responses'), ('lus-responses', 'integrated'), ('integrated', 'logical'), ('logical', 'thinking'), ('thinking', 'decision'), ('decision', 'theory'), ('theory', 'spirit'), ('spirit', 'dual'), ('dual', 'process'), ('process', 'models'), ('models', '.')]

>> Trigrams are: 
 [('Moreover', ',', 'shows'), (',', 'shows', 'heuristics'), ('shows', 'heuristics', 'even'), ('heuristics', 'even', 'stimu-'), ('even', 'stimu-', 'lus-responses'), ('stimu-', 'lus-responses', 'integrated'), ('lus-responses', 'integrated', 'logical'), ('integrated', 'logical', 'thinking'), ('logical', 'thinking', 'decision'), ('thinking', 'decision', 'theory'), ('decision', 'theory', 'spirit'), ('theory', 'spirit', 'dual'), ('spirit', 'dual', 'process'), ('dual', 'process', 'models'), ('process', 'models', '.')]

>> POS Tags are: 
 [('Moreover', 'RB'), (',', ','), ('shows', 'VBZ'), ('heuristics', 'NNS'), ('even', 'RB'), ('stimu-', 'VBP'), ('lus-responses', 'NNS'), ('integrated', 'JJ'), ('logical', 'JJ'), ('thinking', 'VBG'), ('decision', 'NN'), ('theory', 'NN'), ('spirit', 'JJ'), ('dual', 'JJ'), ('process', 'NN'), ('models', 'NNS'), ('.', '.')]

 (S
  Moreover/RB
  ,/,
  shows/VBZ
  (NP heuristics/NNS)
  even/RB
  stimu-/VBP
  (NP lus-responses/NNS)
  integrated/JJ
  logical/JJ
  thinking/VBG
  (NP decision/NN theory/NN)
  (NP spirit/JJ dual/JJ process/NN models/NNS)
  ./.) 


>> Noun Phrases are: 
 ['heuristics', 'lus-responses', 'decision theory', 'spirit dual process models']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Moreover', 'moreov'), (',', ','), ('shows', 'show'), ('heuristics', 'heurist'), ('even', 'even'), ('stimu-', 'stimu-'), ('lus-responses', 'lus-respons'), ('integrated', 'integr'), ('logical', 'logic'), ('thinking', 'think'), ('decision', 'decis'), ('theory', 'theori'), ('spirit', 'spirit'), ('dual', 'dual'), ('process', 'process'), ('models', 'model'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Moreover', 'moreov'), (',', ','), ('shows', 'show'), ('heuristics', 'heurist'), ('even', 'even'), ('stimu-', 'stimu-'), ('lus-responses', 'lus-respons'), ('integrated', 'integr'), ('logical', 'logic'), ('thinking', 'think'), ('decision', 'decis'), ('theory', 'theori'), ('spirit', 'spirit'), ('dual', 'dual'), ('process', 'process'), ('models', 'model'), ('.', '.')]

>> Lemmatization: 
 [('Moreover', 'Moreover'), (',', ','), ('shows', 'show'), ('heuristics', 'heuristic'), ('even', 'even'), ('stimu-', 'stimu-'), ('lus-responses', 'lus-responses'), ('integrated', 'integrated'), ('logical', 'logical'), ('thinking', 'thinking'), ('decision', 'decision'), ('theory', 'theory'), ('spirit', 'spirit'), ('dual', 'dual'), ('process', 'process'), ('models', 'model'), ('.', '.')]



============================ Sentence 215 =============================

7 Conclusions   I have sketched two ways in which the ALP agent model,  building upon many different developments in Artificial  Intelligence, can be used by ordinary people to improve  their own human intelligence. 


>> Tokens are: 
 ['7', 'Conclusions', 'I', 'sketched', 'two', 'ways', 'ALP', 'agent', 'model', ',', 'building', 'upon', 'many', 'different', 'developments', 'Artificial', 'Intelligence', ',', 'used', 'ordinary', 'people', 'improve', 'human', 'intelligence', '.']

>> Bigrams are: 
 [('7', 'Conclusions'), ('Conclusions', 'I'), ('I', 'sketched'), ('sketched', 'two'), ('two', 'ways'), ('ways', 'ALP'), ('ALP', 'agent'), ('agent', 'model'), ('model', ','), (',', 'building'), ('building', 'upon'), ('upon', 'many'), ('many', 'different'), ('different', 'developments'), ('developments', 'Artificial'), ('Artificial', 'Intelligence'), ('Intelligence', ','), (',', 'used'), ('used', 'ordinary'), ('ordinary', 'people'), ('people', 'improve'), ('improve', 'human'), ('human', 'intelligence'), ('intelligence', '.')]

>> Trigrams are: 
 [('7', 'Conclusions', 'I'), ('Conclusions', 'I', 'sketched'), ('I', 'sketched', 'two'), ('sketched', 'two', 'ways'), ('two', 'ways', 'ALP'), ('ways', 'ALP', 'agent'), ('ALP', 'agent', 'model'), ('agent', 'model', ','), ('model', ',', 'building'), (',', 'building', 'upon'), ('building', 'upon', 'many'), ('upon', 'many', 'different'), ('many', 'different', 'developments'), ('different', 'developments', 'Artificial'), ('developments', 'Artificial', 'Intelligence'), ('Artificial', 'Intelligence', ','), ('Intelligence', ',', 'used'), (',', 'used', 'ordinary'), ('used', 'ordinary', 'people'), ('ordinary', 'people', 'improve'), ('people', 'improve', 'human'), ('improve', 'human', 'intelligence'), ('human', 'intelligence', '.')]

>> POS Tags are: 
 [('7', 'CD'), ('Conclusions', 'NNS'), ('I', 'PRP'), ('sketched', 'VBD'), ('two', 'CD'), ('ways', 'NNS'), ('ALP', 'NNP'), ('agent', 'NN'), ('model', 'NN'), (',', ','), ('building', 'VBG'), ('upon', 'IN'), ('many', 'JJ'), ('different', 'JJ'), ('developments', 'NNS'), ('Artificial', 'JJ'), ('Intelligence', 'NNP'), (',', ','), ('used', 'VBD'), ('ordinary', 'JJ'), ('people', 'NNS'), ('improve', 'VBP'), ('human', 'JJ'), ('intelligence', 'NN'), ('.', '.')]

 (S
  7/CD
  (NP Conclusions/NNS)
  I/PRP
  sketched/VBD
  two/CD
  (NP ways/NNS ALP/NNP agent/NN model/NN)
  ,/,
  building/VBG
  upon/IN
  (NP many/JJ different/JJ developments/NNS)
  (NP Artificial/JJ Intelligence/NNP)
  ,/,
  used/VBD
  (NP ordinary/JJ people/NNS)
  improve/VBP
  (NP human/JJ intelligence/NN)
  ./.) 


>> Noun Phrases are: 
 ['Conclusions', 'ways ALP agent model', 'many different developments', 'Artificial Intelligence', 'ordinary people', 'human intelligence']

>> Named Entities are: 
 [('ORGANIZATION', 'ALP'), ('ORGANIZATION', 'Artificial Intelligence')] 

>> Stemming using Porter Stemmer: 
 [('7', '7'), ('Conclusions', 'conclus'), ('I', 'i'), ('sketched', 'sketch'), ('two', 'two'), ('ways', 'way'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), (',', ','), ('building', 'build'), ('upon', 'upon'), ('many', 'mani'), ('different', 'differ'), ('developments', 'develop'), ('Artificial', 'artifici'), ('Intelligence', 'intellig'), (',', ','), ('used', 'use'), ('ordinary', 'ordinari'), ('people', 'peopl'), ('improve', 'improv'), ('human', 'human'), ('intelligence', 'intellig'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('7', '7'), ('Conclusions', 'conclus'), ('I', 'i'), ('sketched', 'sketch'), ('two', 'two'), ('ways', 'way'), ('ALP', 'alp'), ('agent', 'agent'), ('model', 'model'), (',', ','), ('building', 'build'), ('upon', 'upon'), ('many', 'mani'), ('different', 'differ'), ('developments', 'develop'), ('Artificial', 'artifici'), ('Intelligence', 'intellig'), (',', ','), ('used', 'use'), ('ordinary', 'ordinari'), ('people', 'peopl'), ('improve', 'improv'), ('human', 'human'), ('intelligence', 'intellig'), ('.', '.')]

>> Lemmatization: 
 [('7', '7'), ('Conclusions', 'Conclusions'), ('I', 'I'), ('sketched', 'sketched'), ('two', 'two'), ('ways', 'way'), ('ALP', 'ALP'), ('agent', 'agent'), ('model', 'model'), (',', ','), ('building', 'building'), ('upon', 'upon'), ('many', 'many'), ('different', 'different'), ('developments', 'development'), ('Artificial', 'Artificial'), ('Intelligence', 'Intelligence'), (',', ','), ('used', 'used'), ('ordinary', 'ordinary'), ('people', 'people'), ('improve', 'improve'), ('human', 'human'), ('intelligence', 'intelligence'), ('.', '.')]



============================ Sentence 216 =============================

It can help them express their  thoughts more clearly and coherently, and it can help them  make better choices. 


>> Tokens are: 
 ['It', 'help', 'express', 'thoughts', 'clearly', 'coherently', ',', 'help', 'make', 'better', 'choices', '.']

>> Bigrams are: 
 [('It', 'help'), ('help', 'express'), ('express', 'thoughts'), ('thoughts', 'clearly'), ('clearly', 'coherently'), ('coherently', ','), (',', 'help'), ('help', 'make'), ('make', 'better'), ('better', 'choices'), ('choices', '.')]

>> Trigrams are: 
 [('It', 'help', 'express'), ('help', 'express', 'thoughts'), ('express', 'thoughts', 'clearly'), ('thoughts', 'clearly', 'coherently'), ('clearly', 'coherently', ','), ('coherently', ',', 'help'), (',', 'help', 'make'), ('help', 'make', 'better'), ('make', 'better', 'choices'), ('better', 'choices', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('help', 'VBZ'), ('express', 'VB'), ('thoughts', 'NNS'), ('clearly', 'RB'), ('coherently', 'RB'), (',', ','), ('help', 'VBP'), ('make', 'VB'), ('better', 'JJR'), ('choices', 'NNS'), ('.', '.')]

 (S
  It/PRP
  help/VBZ
  express/VB
  (NP thoughts/NNS)
  clearly/RB
  coherently/RB
  ,/,
  help/VBP
  make/VB
  better/JJR
  (NP choices/NNS)
  ./.) 


>> Noun Phrases are: 
 ['thoughts', 'choices']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('help', 'help'), ('express', 'express'), ('thoughts', 'thought'), ('clearly', 'clearli'), ('coherently', 'coher'), (',', ','), ('help', 'help'), ('make', 'make'), ('better', 'better'), ('choices', 'choic'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('help', 'help'), ('express', 'express'), ('thoughts', 'thought'), ('clearly', 'clear'), ('coherently', 'coher'), (',', ','), ('help', 'help'), ('make', 'make'), ('better', 'better'), ('choices', 'choic'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('help', 'help'), ('express', 'express'), ('thoughts', 'thought'), ('clearly', 'clearly'), ('coherently', 'coherently'), (',', ','), ('help', 'help'), ('make', 'make'), ('better', 'better'), ('choices', 'choice'), ('.', '.')]



============================ Sentence 217 =============================

I believe that the application of such  techniques is a fruitful direction of research for the future,  and a promising area for collaboration between researchers  in AI and researchers in more humanistic disciplines. 


>> Tokens are: 
 ['I', 'believe', 'application', 'techniques', 'fruitful', 'direction', 'research', 'future', ',', 'promising', 'area', 'collaboration', 'researchers', 'AI', 'researchers', 'humanistic', 'disciplines', '.']

>> Bigrams are: 
 [('I', 'believe'), ('believe', 'application'), ('application', 'techniques'), ('techniques', 'fruitful'), ('fruitful', 'direction'), ('direction', 'research'), ('research', 'future'), ('future', ','), (',', 'promising'), ('promising', 'area'), ('area', 'collaboration'), ('collaboration', 'researchers'), ('researchers', 'AI'), ('AI', 'researchers'), ('researchers', 'humanistic'), ('humanistic', 'disciplines'), ('disciplines', '.')]

>> Trigrams are: 
 [('I', 'believe', 'application'), ('believe', 'application', 'techniques'), ('application', 'techniques', 'fruitful'), ('techniques', 'fruitful', 'direction'), ('fruitful', 'direction', 'research'), ('direction', 'research', 'future'), ('research', 'future', ','), ('future', ',', 'promising'), (',', 'promising', 'area'), ('promising', 'area', 'collaboration'), ('area', 'collaboration', 'researchers'), ('collaboration', 'researchers', 'AI'), ('researchers', 'AI', 'researchers'), ('AI', 'researchers', 'humanistic'), ('researchers', 'humanistic', 'disciplines'), ('humanistic', 'disciplines', '.')]

>> POS Tags are: 
 [('I', 'PRP'), ('believe', 'VBP'), ('application', 'NN'), ('techniques', 'NNS'), ('fruitful', 'JJ'), ('direction', 'NN'), ('research', 'NN'), ('future', 'NN'), (',', ','), ('promising', 'VBG'), ('area', 'NN'), ('collaboration', 'NN'), ('researchers', 'NNS'), ('AI', 'NNP'), ('researchers', 'NNS'), ('humanistic', 'JJ'), ('disciplines', 'NNS'), ('.', '.')]

 (S
  I/PRP
  believe/VBP
  (NP application/NN techniques/NNS)
  (NP fruitful/JJ direction/NN research/NN future/NN)
  ,/,
  promising/VBG
  (NP
    area/NN
    collaboration/NN
    researchers/NNS
    AI/NNP
    researchers/NNS)
  (NP humanistic/JJ disciplines/NNS)
  ./.) 


>> Noun Phrases are: 
 ['application techniques', 'fruitful direction research future', 'area collaboration researchers AI researchers', 'humanistic disciplines']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('I', 'i'), ('believe', 'believ'), ('application', 'applic'), ('techniques', 'techniqu'), ('fruitful', 'fruit'), ('direction', 'direct'), ('research', 'research'), ('future', 'futur'), (',', ','), ('promising', 'promis'), ('area', 'area'), ('collaboration', 'collabor'), ('researchers', 'research'), ('AI', 'ai'), ('researchers', 'research'), ('humanistic', 'humanist'), ('disciplines', 'disciplin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('I', 'i'), ('believe', 'believ'), ('application', 'applic'), ('techniques', 'techniqu'), ('fruitful', 'fruit'), ('direction', 'direct'), ('research', 'research'), ('future', 'futur'), (',', ','), ('promising', 'promis'), ('area', 'area'), ('collaboration', 'collabor'), ('researchers', 'research'), ('AI', 'ai'), ('researchers', 'research'), ('humanistic', 'humanist'), ('disciplines', 'disciplin'), ('.', '.')]

>> Lemmatization: 
 [('I', 'I'), ('believe', 'believe'), ('application', 'application'), ('techniques', 'technique'), ('fruitful', 'fruitful'), ('direction', 'direction'), ('research', 'research'), ('future', 'future'), (',', ','), ('promising', 'promising'), ('area', 'area'), ('collaboration', 'collaboration'), ('researchers', 'researcher'), ('AI', 'AI'), ('researchers', 'researcher'), ('humanistic', 'humanistic'), ('disciplines', 'discipline'), ('.', '.')]



============================ Sentence 218 =============================

Acknowledgments   Many thanks to Tony Burton, Keith Clark, Jacinto Davila,  Luis Pereira, Fariba Sadri and Maarten van Emden and  Toby Walsh for their helpful comments on earlier drafts of  this paper. 


>> Tokens are: 
 ['Acknowledgments', 'Many', 'thanks', 'Tony', 'Burton', ',', 'Keith', 'Clark', ',', 'Jacinto', 'Davila', ',', 'Luis', 'Pereira', ',', 'Fariba', 'Sadri', 'Maarten', 'van', 'Emden', 'Toby', 'Walsh', 'helpful', 'comments', 'earlier', 'drafts', 'paper', '.']

>> Bigrams are: 
 [('Acknowledgments', 'Many'), ('Many', 'thanks'), ('thanks', 'Tony'), ('Tony', 'Burton'), ('Burton', ','), (',', 'Keith'), ('Keith', 'Clark'), ('Clark', ','), (',', 'Jacinto'), ('Jacinto', 'Davila'), ('Davila', ','), (',', 'Luis'), ('Luis', 'Pereira'), ('Pereira', ','), (',', 'Fariba'), ('Fariba', 'Sadri'), ('Sadri', 'Maarten'), ('Maarten', 'van'), ('van', 'Emden'), ('Emden', 'Toby'), ('Toby', 'Walsh'), ('Walsh', 'helpful'), ('helpful', 'comments'), ('comments', 'earlier'), ('earlier', 'drafts'), ('drafts', 'paper'), ('paper', '.')]

>> Trigrams are: 
 [('Acknowledgments', 'Many', 'thanks'), ('Many', 'thanks', 'Tony'), ('thanks', 'Tony', 'Burton'), ('Tony', 'Burton', ','), ('Burton', ',', 'Keith'), (',', 'Keith', 'Clark'), ('Keith', 'Clark', ','), ('Clark', ',', 'Jacinto'), (',', 'Jacinto', 'Davila'), ('Jacinto', 'Davila', ','), ('Davila', ',', 'Luis'), (',', 'Luis', 'Pereira'), ('Luis', 'Pereira', ','), ('Pereira', ',', 'Fariba'), (',', 'Fariba', 'Sadri'), ('Fariba', 'Sadri', 'Maarten'), ('Sadri', 'Maarten', 'van'), ('Maarten', 'van', 'Emden'), ('van', 'Emden', 'Toby'), ('Emden', 'Toby', 'Walsh'), ('Toby', 'Walsh', 'helpful'), ('Walsh', 'helpful', 'comments'), ('helpful', 'comments', 'earlier'), ('comments', 'earlier', 'drafts'), ('earlier', 'drafts', 'paper'), ('drafts', 'paper', '.')]

>> POS Tags are: 
 [('Acknowledgments', 'NNS'), ('Many', 'JJ'), ('thanks', 'NNS'), ('Tony', 'NNP'), ('Burton', 'NNP'), (',', ','), ('Keith', 'NNP'), ('Clark', 'NNP'), (',', ','), ('Jacinto', 'NNP'), ('Davila', 'NNP'), (',', ','), ('Luis', 'NNP'), ('Pereira', 'NNP'), (',', ','), ('Fariba', 'NNP'), ('Sadri', 'NNP'), ('Maarten', 'NNP'), ('van', 'NNP'), ('Emden', 'NNP'), ('Toby', 'NNP'), ('Walsh', 'NNP'), ('helpful', 'JJ'), ('comments', 'NNS'), ('earlier', 'RBR'), ('drafts', 'NNS'), ('paper', 'NN'), ('.', '.')]

 (S
  (NP Acknowledgments/NNS)
  (NP Many/JJ thanks/NNS Tony/NNP Burton/NNP)
  ,/,
  (NP Keith/NNP Clark/NNP)
  ,/,
  (NP Jacinto/NNP Davila/NNP)
  ,/,
  (NP Luis/NNP Pereira/NNP)
  ,/,
  (NP
    Fariba/NNP
    Sadri/NNP
    Maarten/NNP
    van/NNP
    Emden/NNP
    Toby/NNP
    Walsh/NNP)
  (NP helpful/JJ comments/NNS)
  earlier/RBR
  (NP drafts/NNS paper/NN)
  ./.) 


>> Noun Phrases are: 
 ['Acknowledgments', 'Many thanks Tony Burton', 'Keith Clark', 'Jacinto Davila', 'Luis Pereira', 'Fariba Sadri Maarten van Emden Toby Walsh', 'helpful comments', 'drafts paper']

>> Named Entities are: 
 [('PERSON', 'Tony Burton'), ('PERSON', 'Keith Clark'), ('PERSON', 'Jacinto Davila'), ('PERSON', 'Luis Pereira'), ('PERSON', 'Fariba Sadri Maarten'), ('PERSON', 'Emden Toby Walsh')] 

>> Stemming using Porter Stemmer: 
 [('Acknowledgments', 'acknowledg'), ('Many', 'mani'), ('thanks', 'thank'), ('Tony', 'toni'), ('Burton', 'burton'), (',', ','), ('Keith', 'keith'), ('Clark', 'clark'), (',', ','), ('Jacinto', 'jacinto'), ('Davila', 'davila'), (',', ','), ('Luis', 'lui'), ('Pereira', 'pereira'), (',', ','), ('Fariba', 'fariba'), ('Sadri', 'sadri'), ('Maarten', 'maarten'), ('van', 'van'), ('Emden', 'emden'), ('Toby', 'tobi'), ('Walsh', 'walsh'), ('helpful', 'help'), ('comments', 'comment'), ('earlier', 'earlier'), ('drafts', 'draft'), ('paper', 'paper'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Acknowledgments', 'acknowledg'), ('Many', 'mani'), ('thanks', 'thank'), ('Tony', 'toni'), ('Burton', 'burton'), (',', ','), ('Keith', 'keith'), ('Clark', 'clark'), (',', ','), ('Jacinto', 'jacinto'), ('Davila', 'davila'), (',', ','), ('Luis', 'lui'), ('Pereira', 'pereira'), (',', ','), ('Fariba', 'fariba'), ('Sadri', 'sadri'), ('Maarten', 'maarten'), ('van', 'van'), ('Emden', 'emden'), ('Toby', 'tobi'), ('Walsh', 'walsh'), ('helpful', 'help'), ('comments', 'comment'), ('earlier', 'earlier'), ('drafts', 'draft'), ('paper', 'paper'), ('.', '.')]

>> Lemmatization: 
 [('Acknowledgments', 'Acknowledgments'), ('Many', 'Many'), ('thanks', 'thanks'), ('Tony', 'Tony'), ('Burton', 'Burton'), (',', ','), ('Keith', 'Keith'), ('Clark', 'Clark'), (',', ','), ('Jacinto', 'Jacinto'), ('Davila', 'Davila'), (',', ','), ('Luis', 'Luis'), ('Pereira', 'Pereira'), (',', ','), ('Fariba', 'Fariba'), ('Sadri', 'Sadri'), ('Maarten', 'Maarten'), ('van', 'van'), ('Emden', 'Emden'), ('Toby', 'Toby'), ('Walsh', 'Walsh'), ('helpful', 'helpful'), ('comments', 'comment'), ('earlier', 'earlier'), ('drafts', 'draft'), ('paper', 'paper'), ('.', '.')]



============================ Sentence 219 =============================

References   [Carlson et al., 2008] Kurt A. Carlson, Chris Janiszewski,  Ralph L. Keeney, David H. Krantz, Howard C. Kun- reuther, Mary Frances Luce, J. Edward Russo, Stijn M.  J. van Osselaer and Detlof von Winterfeldt. 


>> Tokens are: 
 ['References', '[', 'Carlson', 'et', 'al.', ',', '2008', ']', 'Kurt', 'A.', 'Carlson', ',', 'Chris', 'Janiszewski', ',', 'Ralph', 'L.', 'Keeney', ',', 'David', 'H.', 'Krantz', ',', 'Howard', 'C.', 'Kun-', 'reuther', ',', 'Mary', 'Frances', 'Luce', ',', 'J.', 'Edward', 'Russo', ',', 'Stijn', 'M.', 'J.', 'van', 'Osselaer', 'Detlof', 'von', 'Winterfeldt', '.']

>> Bigrams are: 
 [('References', '['), ('[', 'Carlson'), ('Carlson', 'et'), ('et', 'al.'), ('al.', ','), (',', '2008'), ('2008', ']'), (']', 'Kurt'), ('Kurt', 'A.'), ('A.', 'Carlson'), ('Carlson', ','), (',', 'Chris'), ('Chris', 'Janiszewski'), ('Janiszewski', ','), (',', 'Ralph'), ('Ralph', 'L.'), ('L.', 'Keeney'), ('Keeney', ','), (',', 'David'), ('David', 'H.'), ('H.', 'Krantz'), ('Krantz', ','), (',', 'Howard'), ('Howard', 'C.'), ('C.', 'Kun-'), ('Kun-', 'reuther'), ('reuther', ','), (',', 'Mary'), ('Mary', 'Frances'), ('Frances', 'Luce'), ('Luce', ','), (',', 'J.'), ('J.', 'Edward'), ('Edward', 'Russo'), ('Russo', ','), (',', 'Stijn'), ('Stijn', 'M.'), ('M.', 'J.'), ('J.', 'van'), ('van', 'Osselaer'), ('Osselaer', 'Detlof'), ('Detlof', 'von'), ('von', 'Winterfeldt'), ('Winterfeldt', '.')]

>> Trigrams are: 
 [('References', '[', 'Carlson'), ('[', 'Carlson', 'et'), ('Carlson', 'et', 'al.'), ('et', 'al.', ','), ('al.', ',', '2008'), (',', '2008', ']'), ('2008', ']', 'Kurt'), (']', 'Kurt', 'A.'), ('Kurt', 'A.', 'Carlson'), ('A.', 'Carlson', ','), ('Carlson', ',', 'Chris'), (',', 'Chris', 'Janiszewski'), ('Chris', 'Janiszewski', ','), ('Janiszewski', ',', 'Ralph'), (',', 'Ralph', 'L.'), ('Ralph', 'L.', 'Keeney'), ('L.', 'Keeney', ','), ('Keeney', ',', 'David'), (',', 'David', 'H.'), ('David', 'H.', 'Krantz'), ('H.', 'Krantz', ','), ('Krantz', ',', 'Howard'), (',', 'Howard', 'C.'), ('Howard', 'C.', 'Kun-'), ('C.', 'Kun-', 'reuther'), ('Kun-', 'reuther', ','), ('reuther', ',', 'Mary'), (',', 'Mary', 'Frances'), ('Mary', 'Frances', 'Luce'), ('Frances', 'Luce', ','), ('Luce', ',', 'J.'), (',', 'J.', 'Edward'), ('J.', 'Edward', 'Russo'), ('Edward', 'Russo', ','), ('Russo', ',', 'Stijn'), (',', 'Stijn', 'M.'), ('Stijn', 'M.', 'J.'), ('M.', 'J.', 'van'), ('J.', 'van', 'Osselaer'), ('van', 'Osselaer', 'Detlof'), ('Osselaer', 'Detlof', 'von'), ('Detlof', 'von', 'Winterfeldt'), ('von', 'Winterfeldt', '.')]

>> POS Tags are: 
 [('References', 'NNS'), ('[', 'VBP'), ('Carlson', 'NNP'), ('et', 'FW'), ('al.', 'NN'), (',', ','), ('2008', 'CD'), (']', 'NN'), ('Kurt', 'NNP'), ('A.', 'NN'), ('Carlson', 'NNP'), (',', ','), ('Chris', 'NNP'), ('Janiszewski', 'NNP'), (',', ','), ('Ralph', 'NNP'), ('L.', 'NNP'), ('Keeney', 'NNP'), (',', ','), ('David', 'NNP'), ('H.', 'NNP'), ('Krantz', 'NNP'), (',', ','), ('Howard', 'NNP'), ('C.', 'NNP'), ('Kun-', 'NNP'), ('reuther', 'NN'), (',', ','), ('Mary', 'NNP'), ('Frances', 'NNP'), ('Luce', 'NNP'), (',', ','), ('J.', 'NNP'), ('Edward', 'NNP'), ('Russo', 'NNP'), (',', ','), ('Stijn', 'NNP'), ('M.', 'NNP'), ('J.', 'NNP'), ('van', 'NN'), ('Osselaer', 'NNP'), ('Detlof', 'NNP'), ('von', 'NNP'), ('Winterfeldt', 'NNP'), ('.', '.')]

 (S
  (NP References/NNS)
  [/VBP
  (NP Carlson/NNP)
  et/FW
  (NP al./NN)
  ,/,
  2008/CD
  (NP ]/NN Kurt/NNP A./NN Carlson/NNP)
  ,/,
  (NP Chris/NNP Janiszewski/NNP)
  ,/,
  (NP Ralph/NNP L./NNP Keeney/NNP)
  ,/,
  (NP David/NNP H./NNP Krantz/NNP)
  ,/,
  (NP Howard/NNP C./NNP Kun-/NNP reuther/NN)
  ,/,
  (NP Mary/NNP Frances/NNP Luce/NNP)
  ,/,
  (NP J./NNP Edward/NNP Russo/NNP)
  ,/,
  (NP
    Stijn/NNP
    M./NNP
    J./NNP
    van/NN
    Osselaer/NNP
    Detlof/NNP
    von/NNP
    Winterfeldt/NNP)
  ./.) 


>> Noun Phrases are: 
 ['References', 'Carlson', 'al.', '] Kurt A. Carlson', 'Chris Janiszewski', 'Ralph L. Keeney', 'David H. Krantz', 'Howard C. Kun- reuther', 'Mary Frances Luce', 'J. Edward Russo', 'Stijn M. J. van Osselaer Detlof von Winterfeldt']

>> Named Entities are: 
 [('PERSON', 'Carlson'), ('PERSON', 'Kurt'), ('PERSON', 'Carlson'), ('PERSON', 'Chris Janiszewski'), ('PERSON', 'Ralph L. Keeney'), ('PERSON', 'David H. Krantz'), ('PERSON', 'Howard C.'), ('PERSON', 'Mary Frances Luce'), ('PERSON', 'J. Edward Russo'), ('PERSON', 'Stijn M. J.'), ('PERSON', 'Osselaer Detlof')] 

>> Stemming using Porter Stemmer: 
 [('References', 'refer'), ('[', '['), ('Carlson', 'carlson'), ('et', 'et'), ('al.', 'al.'), (',', ','), ('2008', '2008'), (']', ']'), ('Kurt', 'kurt'), ('A.', 'a.'), ('Carlson', 'carlson'), (',', ','), ('Chris', 'chri'), ('Janiszewski', 'janiszewski'), (',', ','), ('Ralph', 'ralph'), ('L.', 'l.'), ('Keeney', 'keeney'), (',', ','), ('David', 'david'), ('H.', 'h.'), ('Krantz', 'krantz'), (',', ','), ('Howard', 'howard'), ('C.', 'c.'), ('Kun-', 'kun-'), ('reuther', 'reuther'), (',', ','), ('Mary', 'mari'), ('Frances', 'franc'), ('Luce', 'luce'), (',', ','), ('J.', 'j.'), ('Edward', 'edward'), ('Russo', 'russo'), (',', ','), ('Stijn', 'stijn'), ('M.', 'm.'), ('J.', 'j.'), ('van', 'van'), ('Osselaer', 'ossela'), ('Detlof', 'detlof'), ('von', 'von'), ('Winterfeldt', 'winterfeldt'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('References', 'refer'), ('[', '['), ('Carlson', 'carlson'), ('et', 'et'), ('al.', 'al.'), (',', ','), ('2008', '2008'), (']', ']'), ('Kurt', 'kurt'), ('A.', 'a.'), ('Carlson', 'carlson'), (',', ','), ('Chris', 'chris'), ('Janiszewski', 'janiszewski'), (',', ','), ('Ralph', 'ralph'), ('L.', 'l.'), ('Keeney', 'keeney'), (',', ','), ('David', 'david'), ('H.', 'h.'), ('Krantz', 'krantz'), (',', ','), ('Howard', 'howard'), ('C.', 'c.'), ('Kun-', 'kun-'), ('reuther', 'reuther'), (',', ','), ('Mary', 'mari'), ('Frances', 'franc'), ('Luce', 'luce'), (',', ','), ('J.', 'j.'), ('Edward', 'edward'), ('Russo', 'russo'), (',', ','), ('Stijn', 'stijn'), ('M.', 'm.'), ('J.', 'j.'), ('van', 'van'), ('Osselaer', 'ossela'), ('Detlof', 'detlof'), ('von', 'von'), ('Winterfeldt', 'winterfeldt'), ('.', '.')]

>> Lemmatization: 
 [('References', 'References'), ('[', '['), ('Carlson', 'Carlson'), ('et', 'et'), ('al.', 'al.'), (',', ','), ('2008', '2008'), (']', ']'), ('Kurt', 'Kurt'), ('A.', 'A.'), ('Carlson', 'Carlson'), (',', ','), ('Chris', 'Chris'), ('Janiszewski', 'Janiszewski'), (',', ','), ('Ralph', 'Ralph'), ('L.', 'L.'), ('Keeney', 'Keeney'), (',', ','), ('David', 'David'), ('H.', 'H.'), ('Krantz', 'Krantz'), (',', ','), ('Howard', 'Howard'), ('C.', 'C.'), ('Kun-', 'Kun-'), ('reuther', 'reuther'), (',', ','), ('Mary', 'Mary'), ('Frances', 'Frances'), ('Luce', 'Luce'), (',', ','), ('J.', 'J.'), ('Edward', 'Edward'), ('Russo', 'Russo'), (',', ','), ('Stijn', 'Stijn'), ('M.', 'M.'), ('J.', 'J.'), ('van', 'van'), ('Osselaer', 'Osselaer'), ('Detlof', 'Detlof'), ('von', 'von'), ('Winterfeldt', 'Winterfeldt'), ('.', '.')]



============================ Sentence 220 =============================

A theoretical  framework for goal-based choice and for prescriptive  analysis. 


>> Tokens are: 
 ['A', 'theoretical', 'framework', 'goal-based', 'choice', 'prescriptive', 'analysis', '.']

>> Bigrams are: 
 [('A', 'theoretical'), ('theoretical', 'framework'), ('framework', 'goal-based'), ('goal-based', 'choice'), ('choice', 'prescriptive'), ('prescriptive', 'analysis'), ('analysis', '.')]

>> Trigrams are: 
 [('A', 'theoretical', 'framework'), ('theoretical', 'framework', 'goal-based'), ('framework', 'goal-based', 'choice'), ('goal-based', 'choice', 'prescriptive'), ('choice', 'prescriptive', 'analysis'), ('prescriptive', 'analysis', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('theoretical', 'JJ'), ('framework', 'NN'), ('goal-based', 'JJ'), ('choice', 'NN'), ('prescriptive', 'JJ'), ('analysis', 'NN'), ('.', '.')]

 (S
  (NP A/DT theoretical/JJ framework/NN)
  (NP goal-based/JJ choice/NN)
  (NP prescriptive/JJ analysis/NN)
  ./.) 


>> Noun Phrases are: 
 ['A theoretical framework', 'goal-based choice', 'prescriptive analysis']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('theoretical', 'theoret'), ('framework', 'framework'), ('goal-based', 'goal-bas'), ('choice', 'choic'), ('prescriptive', 'prescript'), ('analysis', 'analysi'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('theoretical', 'theoret'), ('framework', 'framework'), ('goal-based', 'goal-bas'), ('choice', 'choic'), ('prescriptive', 'prescript'), ('analysis', 'analysi'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('theoretical', 'theoretical'), ('framework', 'framework'), ('goal-based', 'goal-based'), ('choice', 'choice'), ('prescriptive', 'prescriptive'), ('analysis', 'analysis'), ('.', '.')]



============================ Sentence 221 =============================

Marketing Letters, 19(3-4):241-254. 


>> Tokens are: 
 ['Marketing', 'Letters', ',', '19', '(', '3-4', ')', ':241-254', '.']

>> Bigrams are: 
 [('Marketing', 'Letters'), ('Letters', ','), (',', '19'), ('19', '('), ('(', '3-4'), ('3-4', ')'), (')', ':241-254'), (':241-254', '.')]

>> Trigrams are: 
 [('Marketing', 'Letters', ','), ('Letters', ',', '19'), (',', '19', '('), ('19', '(', '3-4'), ('(', '3-4', ')'), ('3-4', ')', ':241-254'), (')', ':241-254', '.')]

>> POS Tags are: 
 [('Marketing', 'VBG'), ('Letters', 'NNS'), (',', ','), ('19', 'CD'), ('(', '('), ('3-4', 'JJ'), (')', ')'), (':241-254', 'NN'), ('.', '.')]

 (S
  Marketing/VBG
  (NP Letters/NNS)
  ,/,
  19/CD
  (/(
  3-4/JJ
  )/)
  (NP :241-254/NN)
  ./.) 


>> Noun Phrases are: 
 ['Letters', ':241-254']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Marketing', 'market'), ('Letters', 'letter'), (',', ','), ('19', '19'), ('(', '('), ('3-4', '3-4'), (')', ')'), (':241-254', ':241-254'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Marketing', 'market'), ('Letters', 'letter'), (',', ','), ('19', '19'), ('(', '('), ('3-4', '3-4'), (')', ')'), (':241-254', ':241-254'), ('.', '.')]

>> Lemmatization: 
 [('Marketing', 'Marketing'), ('Letters', 'Letters'), (',', ','), ('19', '19'), ('(', '('), ('3-4', '3-4'), (')', ')'), (':241-254', ':241-254'), ('.', '.')]



============================ Sentence 222 =============================

[Hammond et al., 1999] John Hammond, Ralph Keeney and  Howard Raiffa. 


>> Tokens are: 
 ['[', 'Hammond', 'et', 'al.', ',', '1999', ']', 'John', 'Hammond', ',', 'Ralph', 'Keeney', 'Howard', 'Raiffa', '.']

>> Bigrams are: 
 [('[', 'Hammond'), ('Hammond', 'et'), ('et', 'al.'), ('al.', ','), (',', '1999'), ('1999', ']'), (']', 'John'), ('John', 'Hammond'), ('Hammond', ','), (',', 'Ralph'), ('Ralph', 'Keeney'), ('Keeney', 'Howard'), ('Howard', 'Raiffa'), ('Raiffa', '.')]

>> Trigrams are: 
 [('[', 'Hammond', 'et'), ('Hammond', 'et', 'al.'), ('et', 'al.', ','), ('al.', ',', '1999'), (',', '1999', ']'), ('1999', ']', 'John'), (']', 'John', 'Hammond'), ('John', 'Hammond', ','), ('Hammond', ',', 'Ralph'), (',', 'Ralph', 'Keeney'), ('Ralph', 'Keeney', 'Howard'), ('Keeney', 'Howard', 'Raiffa'), ('Howard', 'Raiffa', '.')]

>> POS Tags are: 
 [('[', 'JJ'), ('Hammond', 'NNP'), ('et', 'NN'), ('al.', 'NN'), (',', ','), ('1999', 'CD'), (']', 'NNP'), ('John', 'NNP'), ('Hammond', 'NNP'), (',', ','), ('Ralph', 'NNP'), ('Keeney', 'NNP'), ('Howard', 'NNP'), ('Raiffa', 'NNP'), ('.', '.')]

 (S
  (NP [/JJ Hammond/NNP et/NN al./NN)
  ,/,
  1999/CD
  (NP ]/NNP John/NNP Hammond/NNP)
  ,/,
  (NP Ralph/NNP Keeney/NNP Howard/NNP Raiffa/NNP)
  ./.) 


>> Noun Phrases are: 
 ['[ Hammond et al.', '] John Hammond', 'Ralph Keeney Howard Raiffa']

>> Named Entities are: 
 [('PERSON', 'John Hammond'), ('PERSON', 'Ralph Keeney Howard Raiffa')] 

>> Stemming using Porter Stemmer: 
 [('[', '['), ('Hammond', 'hammond'), ('et', 'et'), ('al.', 'al.'), (',', ','), ('1999', '1999'), (']', ']'), ('John', 'john'), ('Hammond', 'hammond'), (',', ','), ('Ralph', 'ralph'), ('Keeney', 'keeney'), ('Howard', 'howard'), ('Raiffa', 'raiffa'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('[', '['), ('Hammond', 'hammond'), ('et', 'et'), ('al.', 'al.'), (',', ','), ('1999', '1999'), (']', ']'), ('John', 'john'), ('Hammond', 'hammond'), (',', ','), ('Ralph', 'ralph'), ('Keeney', 'keeney'), ('Howard', 'howard'), ('Raiffa', 'raiffa'), ('.', '.')]

>> Lemmatization: 
 [('[', '['), ('Hammond', 'Hammond'), ('et', 'et'), ('al.', 'al.'), (',', ','), ('1999', '1999'), (']', ']'), ('John', 'John'), ('Hammond', 'Hammond'), (',', ','), ('Ralph', 'Ralph'), ('Keeney', 'Keeney'), ('Howard', 'Howard'), ('Raiffa', 'Raiffa'), ('.', '.')]



============================ Sentence 223 =============================

Smart Choices  - A practical guide to  making better decisions. 


>> Tokens are: 
 ['Smart', 'Choices', '-', 'A', 'practical', 'guide', 'making', 'better', 'decisions', '.']

>> Bigrams are: 
 [('Smart', 'Choices'), ('Choices', '-'), ('-', 'A'), ('A', 'practical'), ('practical', 'guide'), ('guide', 'making'), ('making', 'better'), ('better', 'decisions'), ('decisions', '.')]

>> Trigrams are: 
 [('Smart', 'Choices', '-'), ('Choices', '-', 'A'), ('-', 'A', 'practical'), ('A', 'practical', 'guide'), ('practical', 'guide', 'making'), ('guide', 'making', 'better'), ('making', 'better', 'decisions'), ('better', 'decisions', '.')]

>> POS Tags are: 
 [('Smart', 'NNP'), ('Choices', 'NNP'), ('-', ':'), ('A', 'DT'), ('practical', 'JJ'), ('guide', 'NN'), ('making', 'VBG'), ('better', 'JJR'), ('decisions', 'NNS'), ('.', '.')]

 (S
  (NP Smart/NNP Choices/NNP)
  -/:
  (NP A/DT practical/JJ guide/NN)
  making/VBG
  better/JJR
  (NP decisions/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Smart Choices', 'A practical guide', 'decisions']

>> Named Entities are: 
 [('PERSON', 'Smart'), ('ORGANIZATION', 'Choices')] 

>> Stemming using Porter Stemmer: 
 [('Smart', 'smart'), ('Choices', 'choic'), ('-', '-'), ('A', 'a'), ('practical', 'practic'), ('guide', 'guid'), ('making', 'make'), ('better', 'better'), ('decisions', 'decis'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Smart', 'smart'), ('Choices', 'choic'), ('-', '-'), ('A', 'a'), ('practical', 'practic'), ('guide', 'guid'), ('making', 'make'), ('better', 'better'), ('decisions', 'decis'), ('.', '.')]

>> Lemmatization: 
 [('Smart', 'Smart'), ('Choices', 'Choices'), ('-', '-'), ('A', 'A'), ('practical', 'practical'), ('guide', 'guide'), ('making', 'making'), ('better', 'better'), ('decisions', 'decision'), ('.', '.')]



============================ Sentence 224 =============================

Harvard Business School Press. 


>> Tokens are: 
 ['Harvard', 'Business', 'School', 'Press', '.']

>> Bigrams are: 
 [('Harvard', 'Business'), ('Business', 'School'), ('School', 'Press'), ('Press', '.')]

>> Trigrams are: 
 [('Harvard', 'Business', 'School'), ('Business', 'School', 'Press'), ('School', 'Press', '.')]

>> POS Tags are: 
 [('Harvard', 'NNP'), ('Business', 'NNP'), ('School', 'NNP'), ('Press', 'NNP'), ('.', '.')]

 (S (NP Harvard/NNP Business/NNP School/NNP Press/NNP) ./.) 


>> Noun Phrases are: 
 ['Harvard Business School Press']

>> Named Entities are: 
 [('PERSON', 'Harvard'), ('ORGANIZATION', 'Business School')] 

>> Stemming using Porter Stemmer: 
 [('Harvard', 'harvard'), ('Business', 'busi'), ('School', 'school'), ('Press', 'press'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Harvard', 'harvard'), ('Business', 'busi'), ('School', 'school'), ('Press', 'press'), ('.', '.')]

>> Lemmatization: 
 [('Harvard', 'Harvard'), ('Business', 'Business'), ('School', 'School'), ('Press', 'Press'), ('.', '.')]



============================ Sentence 225 =============================

[Kahneman, and Frederick, 2002] Daniel Kahneman and  Shane Frederick. 


>> Tokens are: 
 ['[', 'Kahneman', ',', 'Frederick', ',', '2002', ']', 'Daniel', 'Kahneman', 'Shane', 'Frederick', '.']

>> Bigrams are: 
 [('[', 'Kahneman'), ('Kahneman', ','), (',', 'Frederick'), ('Frederick', ','), (',', '2002'), ('2002', ']'), (']', 'Daniel'), ('Daniel', 'Kahneman'), ('Kahneman', 'Shane'), ('Shane', 'Frederick'), ('Frederick', '.')]

>> Trigrams are: 
 [('[', 'Kahneman', ','), ('Kahneman', ',', 'Frederick'), (',', 'Frederick', ','), ('Frederick', ',', '2002'), (',', '2002', ']'), ('2002', ']', 'Daniel'), (']', 'Daniel', 'Kahneman'), ('Daniel', 'Kahneman', 'Shane'), ('Kahneman', 'Shane', 'Frederick'), ('Shane', 'Frederick', '.')]

>> POS Tags are: 
 [('[', 'JJ'), ('Kahneman', 'NNP'), (',', ','), ('Frederick', 'NNP'), (',', ','), ('2002', 'CD'), (']', 'NNP'), ('Daniel', 'NNP'), ('Kahneman', 'NNP'), ('Shane', 'NNP'), ('Frederick', 'NNP'), ('.', '.')]

 (S
  (NP [/JJ Kahneman/NNP)
  ,/,
  (NP Frederick/NNP)
  ,/,
  2002/CD
  (NP ]/NNP Daniel/NNP Kahneman/NNP Shane/NNP Frederick/NNP)
  ./.) 


>> Noun Phrases are: 
 ['[ Kahneman', 'Frederick', '] Daniel Kahneman Shane Frederick']

>> Named Entities are: 
 [('PERSON', 'Frederick'), ('PERSON', 'Daniel Kahneman Shane Frederick')] 

>> Stemming using Porter Stemmer: 
 [('[', '['), ('Kahneman', 'kahneman'), (',', ','), ('Frederick', 'frederick'), (',', ','), ('2002', '2002'), (']', ']'), ('Daniel', 'daniel'), ('Kahneman', 'kahneman'), ('Shane', 'shane'), ('Frederick', 'frederick'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('[', '['), ('Kahneman', 'kahneman'), (',', ','), ('Frederick', 'frederick'), (',', ','), ('2002', '2002'), (']', ']'), ('Daniel', 'daniel'), ('Kahneman', 'kahneman'), ('Shane', 'shane'), ('Frederick', 'frederick'), ('.', '.')]

>> Lemmatization: 
 [('[', '['), ('Kahneman', 'Kahneman'), (',', ','), ('Frederick', 'Frederick'), (',', ','), ('2002', '2002'), (']', ']'), ('Daniel', 'Daniel'), ('Kahneman', 'Kahneman'), ('Shane', 'Shane'), ('Frederick', 'Frederick'), ('.', '.')]



============================ Sentence 226 =============================

Representativeness revisited: attribute  substitution in intuitive judgment. 


>> Tokens are: 
 ['Representativeness', 'revisited', ':', 'attribute', 'substitution', 'intuitive', 'judgment', '.']

>> Bigrams are: 
 [('Representativeness', 'revisited'), ('revisited', ':'), (':', 'attribute'), ('attribute', 'substitution'), ('substitution', 'intuitive'), ('intuitive', 'judgment'), ('judgment', '.')]

>> Trigrams are: 
 [('Representativeness', 'revisited', ':'), ('revisited', ':', 'attribute'), (':', 'attribute', 'substitution'), ('attribute', 'substitution', 'intuitive'), ('substitution', 'intuitive', 'judgment'), ('intuitive', 'judgment', '.')]

>> POS Tags are: 
 [('Representativeness', 'RB'), ('revisited', 'VBN'), (':', ':'), ('attribute', 'JJ'), ('substitution', 'NN'), ('intuitive', 'JJ'), ('judgment', 'NN'), ('.', '.')]

 (S
  Representativeness/RB
  revisited/VBN
  :/:
  (NP attribute/JJ substitution/NN)
  (NP intuitive/JJ judgment/NN)
  ./.) 


>> Noun Phrases are: 
 ['attribute substitution', 'intuitive judgment']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Representativeness', 'repres'), ('revisited', 'revisit'), (':', ':'), ('attribute', 'attribut'), ('substitution', 'substitut'), ('intuitive', 'intuit'), ('judgment', 'judgment'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Representativeness', 'repres'), ('revisited', 'revisit'), (':', ':'), ('attribute', 'attribut'), ('substitution', 'substitut'), ('intuitive', 'intuit'), ('judgment', 'judgment'), ('.', '.')]

>> Lemmatization: 
 [('Representativeness', 'Representativeness'), ('revisited', 'revisited'), (':', ':'), ('attribute', 'attribute'), ('substitution', 'substitution'), ('intuitive', 'intuitive'), ('judgment', 'judgment'), ('.', '.')]



============================ Sentence 227 =============================

In Heuristics and Bi- ases – The Psychology of Intuitive Judgement. 


>> Tokens are: 
 ['In', 'Heuristics', 'Bi-', 'ases', '–', 'The', 'Psychology', 'Intuitive', 'Judgement', '.']

>> Bigrams are: 
 [('In', 'Heuristics'), ('Heuristics', 'Bi-'), ('Bi-', 'ases'), ('ases', '–'), ('–', 'The'), ('The', 'Psychology'), ('Psychology', 'Intuitive'), ('Intuitive', 'Judgement'), ('Judgement', '.')]

>> Trigrams are: 
 [('In', 'Heuristics', 'Bi-'), ('Heuristics', 'Bi-', 'ases'), ('Bi-', 'ases', '–'), ('ases', '–', 'The'), ('–', 'The', 'Psychology'), ('The', 'Psychology', 'Intuitive'), ('Psychology', 'Intuitive', 'Judgement'), ('Intuitive', 'Judgement', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('Heuristics', 'NNP'), ('Bi-', 'NNP'), ('ases', 'VBZ'), ('–', 'VBP'), ('The', 'DT'), ('Psychology', 'NNP'), ('Intuitive', 'NNP'), ('Judgement', 'NNP'), ('.', '.')]

 (S
  In/IN
  (NP Heuristics/NNP Bi-/NNP)
  ases/VBZ
  –/VBP
  (NP The/DT Psychology/NNP Intuitive/NNP Judgement/NNP)
  ./.) 


>> Noun Phrases are: 
 ['Heuristics Bi-', 'The Psychology Intuitive Judgement']

>> Named Entities are: 
 [('GPE', 'Heuristics'), ('ORGANIZATION', 'Psychology')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('Heuristics', 'heurist'), ('Bi-', 'bi-'), ('ases', 'ase'), ('–', '–'), ('The', 'the'), ('Psychology', 'psycholog'), ('Intuitive', 'intuit'), ('Judgement', 'judgement'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('Heuristics', 'heurist'), ('Bi-', 'bi-'), ('ases', 'ase'), ('–', '–'), ('The', 'the'), ('Psychology', 'psycholog'), ('Intuitive', 'intuit'), ('Judgement', 'judgement'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('Heuristics', 'Heuristics'), ('Bi-', 'Bi-'), ('ases', 'as'), ('–', '–'), ('The', 'The'), ('Psychology', 'Psychology'), ('Intuitive', 'Intuitive'), ('Judgement', 'Judgement'), ('.', '.')]



============================ Sentence 228 =============================

Cam- bridge University Press. 


>> Tokens are: 
 ['Cam-', 'bridge', 'University', 'Press', '.']

>> Bigrams are: 
 [('Cam-', 'bridge'), ('bridge', 'University'), ('University', 'Press'), ('Press', '.')]

>> Trigrams are: 
 [('Cam-', 'bridge', 'University'), ('bridge', 'University', 'Press'), ('University', 'Press', '.')]

>> POS Tags are: 
 [('Cam-', 'NNP'), ('bridge', 'NN'), ('University', 'NNP'), ('Press', 'NNP'), ('.', '.')]

 (S (NP Cam-/NNP bridge/NN University/NNP Press/NNP) ./.) 


>> Noun Phrases are: 
 ['Cam- bridge University Press']

>> Named Entities are: 
 [('ORGANIZATION', 'University Press')] 

>> Stemming using Porter Stemmer: 
 [('Cam-', 'cam-'), ('bridge', 'bridg'), ('University', 'univers'), ('Press', 'press'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Cam-', 'cam-'), ('bridge', 'bridg'), ('University', 'univers'), ('Press', 'press'), ('.', '.')]

>> Lemmatization: 
 [('Cam-', 'Cam-'), ('bridge', 'bridge'), ('University', 'University'), ('Press', 'Press'), ('.', '.')]



============================ Sentence 229 =============================

[Keeney, 1992] Ralph Keeney. 


>> Tokens are: 
 ['[', 'Keeney', ',', '1992', ']', 'Ralph', 'Keeney', '.']

>> Bigrams are: 
 [('[', 'Keeney'), ('Keeney', ','), (',', '1992'), ('1992', ']'), (']', 'Ralph'), ('Ralph', 'Keeney'), ('Keeney', '.')]

>> Trigrams are: 
 [('[', 'Keeney', ','), ('Keeney', ',', '1992'), (',', '1992', ']'), ('1992', ']', 'Ralph'), (']', 'Ralph', 'Keeney'), ('Ralph', 'Keeney', '.')]

>> POS Tags are: 
 [('[', 'JJ'), ('Keeney', 'NNP'), (',', ','), ('1992', 'CD'), (']', 'NN'), ('Ralph', 'NNP'), ('Keeney', 'NNP'), ('.', '.')]

 (S
  (NP [/JJ Keeney/NNP)
  ,/,
  1992/CD
  (NP ]/NN Ralph/NNP Keeney/NNP)
  ./.) 


>> Noun Phrases are: 
 ['[ Keeney', '] Ralph Keeney']

>> Named Entities are: 
 [('PERSON', 'Ralph Keeney')] 

>> Stemming using Porter Stemmer: 
 [('[', '['), ('Keeney', 'keeney'), (',', ','), ('1992', '1992'), (']', ']'), ('Ralph', 'ralph'), ('Keeney', 'keeney'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('[', '['), ('Keeney', 'keeney'), (',', ','), ('1992', '1992'), (']', ']'), ('Ralph', 'ralph'), ('Keeney', 'keeney'), ('.', '.')]

>> Lemmatization: 
 [('[', '['), ('Keeney', 'Keeney'), (',', ','), ('1992', '1992'), (']', ']'), ('Ralph', 'Ralph'), ('Keeney', 'Keeney'), ('.', '.')]



============================ Sentence 230 =============================

Value-focused thinking: a  path to creative decision-making. 


>> Tokens are: 
 ['Value-focused', 'thinking', ':', 'path', 'creative', 'decision-making', '.']

>> Bigrams are: 
 [('Value-focused', 'thinking'), ('thinking', ':'), (':', 'path'), ('path', 'creative'), ('creative', 'decision-making'), ('decision-making', '.')]

>> Trigrams are: 
 [('Value-focused', 'thinking', ':'), ('thinking', ':', 'path'), (':', 'path', 'creative'), ('path', 'creative', 'decision-making'), ('creative', 'decision-making', '.')]

>> POS Tags are: 
 [('Value-focused', 'JJ'), ('thinking', 'NN'), (':', ':'), ('path', 'NN'), ('creative', 'JJ'), ('decision-making', 'NN'), ('.', '.')]

 (S
  (NP Value-focused/JJ thinking/NN)
  :/:
  (NP path/NN)
  (NP creative/JJ decision-making/NN)
  ./.) 


>> Noun Phrases are: 
 ['Value-focused thinking', 'path', 'creative decision-making']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Value-focused', 'value-focus'), ('thinking', 'think'), (':', ':'), ('path', 'path'), ('creative', 'creativ'), ('decision-making', 'decision-mak'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Value-focused', 'value-focus'), ('thinking', 'think'), (':', ':'), ('path', 'path'), ('creative', 'creativ'), ('decision-making', 'decision-mak'), ('.', '.')]

>> Lemmatization: 
 [('Value-focused', 'Value-focused'), ('thinking', 'thinking'), (':', ':'), ('path', 'path'), ('creative', 'creative'), ('decision-making', 'decision-making'), ('.', '.')]



============================ Sentence 231 =============================

Harvard University  Press. 


>> Tokens are: 
 ['Harvard', 'University', 'Press', '.']

>> Bigrams are: 
 [('Harvard', 'University'), ('University', 'Press'), ('Press', '.')]

>> Trigrams are: 
 [('Harvard', 'University', 'Press'), ('University', 'Press', '.')]

>> POS Tags are: 
 [('Harvard', 'NNP'), ('University', 'NNP'), ('Press', 'NNP'), ('.', '.')]

 (S (NP Harvard/NNP University/NNP Press/NNP) ./.) 


>> Noun Phrases are: 
 ['Harvard University Press']

>> Named Entities are: 
 [('ORGANIZATION', 'Harvard'), ('ORGANIZATION', 'University Press')] 

>> Stemming using Porter Stemmer: 
 [('Harvard', 'harvard'), ('University', 'univers'), ('Press', 'press'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Harvard', 'harvard'), ('University', 'univers'), ('Press', 'press'), ('.', '.')]

>> Lemmatization: 
 [('Harvard', 'Harvard'), ('University', 'University'), ('Press', 'Press'), ('.', '.')]



============================ Sentence 232 =============================

[Kowalski, 1975] Robert Kowalski. 


>> Tokens are: 
 ['[', 'Kowalski', ',', '1975', ']', 'Robert', 'Kowalski', '.']

>> Bigrams are: 
 [('[', 'Kowalski'), ('Kowalski', ','), (',', '1975'), ('1975', ']'), (']', 'Robert'), ('Robert', 'Kowalski'), ('Kowalski', '.')]

>> Trigrams are: 
 [('[', 'Kowalski', ','), ('Kowalski', ',', '1975'), (',', '1975', ']'), ('1975', ']', 'Robert'), (']', 'Robert', 'Kowalski'), ('Robert', 'Kowalski', '.')]

>> POS Tags are: 
 [('[', 'JJ'), ('Kowalski', 'NNP'), (',', ','), ('1975', 'CD'), (']', 'NN'), ('Robert', 'NNP'), ('Kowalski', 'NNP'), ('.', '.')]

 (S
  (NP [/JJ Kowalski/NNP)
  ,/,
  1975/CD
  (NP ]/NN Robert/NNP Kowalski/NNP)
  ./.) 


>> Noun Phrases are: 
 ['[ Kowalski', '] Robert Kowalski']

>> Named Entities are: 
 [('PERSON', 'Robert Kowalski')] 

>> Stemming using Porter Stemmer: 
 [('[', '['), ('Kowalski', 'kowalski'), (',', ','), ('1975', '1975'), (']', ']'), ('Robert', 'robert'), ('Kowalski', 'kowalski'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('[', '['), ('Kowalski', 'kowalski'), (',', ','), ('1975', '1975'), (']', ']'), ('Robert', 'robert'), ('Kowalski', 'kowalski'), ('.', '.')]

>> Lemmatization: 
 [('[', '['), ('Kowalski', 'Kowalski'), (',', ','), ('1975', '1975'), (']', ']'), ('Robert', 'Robert'), ('Kowalski', 'Kowalski'), ('.', '.')]



============================ Sentence 233 =============================

A proof procedure us- ing connection graphs, JACM, 22(4):572-595. 


>> Tokens are: 
 ['A', 'proof', 'procedure', 'us-', 'ing', 'connection', 'graphs', ',', 'JACM', ',', '22', '(', '4', ')', ':572-595', '.']

>> Bigrams are: 
 [('A', 'proof'), ('proof', 'procedure'), ('procedure', 'us-'), ('us-', 'ing'), ('ing', 'connection'), ('connection', 'graphs'), ('graphs', ','), (',', 'JACM'), ('JACM', ','), (',', '22'), ('22', '('), ('(', '4'), ('4', ')'), (')', ':572-595'), (':572-595', '.')]

>> Trigrams are: 
 [('A', 'proof', 'procedure'), ('proof', 'procedure', 'us-'), ('procedure', 'us-', 'ing'), ('us-', 'ing', 'connection'), ('ing', 'connection', 'graphs'), ('connection', 'graphs', ','), ('graphs', ',', 'JACM'), (',', 'JACM', ','), ('JACM', ',', '22'), (',', '22', '('), ('22', '(', '4'), ('(', '4', ')'), ('4', ')', ':572-595'), (')', ':572-595', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('proof', 'JJ'), ('procedure', 'NN'), ('us-', 'JJ'), ('ing', 'NN'), ('connection', 'NN'), ('graphs', 'NN'), (',', ','), ('JACM', 'NNP'), (',', ','), ('22', 'CD'), ('(', '('), ('4', 'CD'), (')', ')'), (':572-595', 'NN'), ('.', '.')]

 (S
  (NP A/DT proof/JJ procedure/NN)
  (NP us-/JJ ing/NN connection/NN graphs/NN)
  ,/,
  (NP JACM/NNP)
  ,/,
  22/CD
  (/(
  4/CD
  )/)
  (NP :572-595/NN)
  ./.) 


>> Noun Phrases are: 
 ['A proof procedure', 'us- ing connection graphs', 'JACM', ':572-595']

>> Named Entities are: 
 [('ORGANIZATION', 'JACM')] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('proof', 'proof'), ('procedure', 'procedur'), ('us-', 'us-'), ('ing', 'ing'), ('connection', 'connect'), ('graphs', 'graph'), (',', ','), ('JACM', 'jacm'), (',', ','), ('22', '22'), ('(', '('), ('4', '4'), (')', ')'), (':572-595', ':572-595'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('proof', 'proof'), ('procedure', 'procedur'), ('us-', 'us-'), ('ing', 'ing'), ('connection', 'connect'), ('graphs', 'graph'), (',', ','), ('JACM', 'jacm'), (',', ','), ('22', '22'), ('(', '('), ('4', '4'), (')', ')'), (':572-595', ':572-595'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('proof', 'proof'), ('procedure', 'procedure'), ('us-', 'us-'), ('ing', 'ing'), ('connection', 'connection'), ('graphs', 'graph'), (',', ','), ('JACM', 'JACM'), (',', ','), ('22', '22'), ('(', '('), ('4', '4'), (')', ')'), (':572-595', ':572-595'), ('.', '.')]



============================ Sentence 234 =============================

[Kowalski, 1979] Robert Kowalski. 


>> Tokens are: 
 ['[', 'Kowalski', ',', '1979', ']', 'Robert', 'Kowalski', '.']

>> Bigrams are: 
 [('[', 'Kowalski'), ('Kowalski', ','), (',', '1979'), ('1979', ']'), (']', 'Robert'), ('Robert', 'Kowalski'), ('Kowalski', '.')]

>> Trigrams are: 
 [('[', 'Kowalski', ','), ('Kowalski', ',', '1979'), (',', '1979', ']'), ('1979', ']', 'Robert'), (']', 'Robert', 'Kowalski'), ('Robert', 'Kowalski', '.')]

>> POS Tags are: 
 [('[', 'JJ'), ('Kowalski', 'NNP'), (',', ','), ('1979', 'CD'), (']', 'NN'), ('Robert', 'NNP'), ('Kowalski', 'NNP'), ('.', '.')]

 (S
  (NP [/JJ Kowalski/NNP)
  ,/,
  1979/CD
  (NP ]/NN Robert/NNP Kowalski/NNP)
  ./.) 


>> Noun Phrases are: 
 ['[ Kowalski', '] Robert Kowalski']

>> Named Entities are: 
 [('PERSON', 'Robert Kowalski')] 

>> Stemming using Porter Stemmer: 
 [('[', '['), ('Kowalski', 'kowalski'), (',', ','), ('1979', '1979'), (']', ']'), ('Robert', 'robert'), ('Kowalski', 'kowalski'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('[', '['), ('Kowalski', 'kowalski'), (',', ','), ('1979', '1979'), (']', ']'), ('Robert', 'robert'), ('Kowalski', 'kowalski'), ('.', '.')]

>> Lemmatization: 
 [('[', '['), ('Kowalski', 'Kowalski'), (',', ','), ('1979', '1979'), (']', ']'), ('Robert', 'Robert'), ('Kowalski', 'Kowalski'), ('.', '.')]



============================ Sentence 235 =============================

Logic for Problem  Solving. 


>> Tokens are: 
 ['Logic', 'Problem', 'Solving', '.']

>> Bigrams are: 
 [('Logic', 'Problem'), ('Problem', 'Solving'), ('Solving', '.')]

>> Trigrams are: 
 [('Logic', 'Problem', 'Solving'), ('Problem', 'Solving', '.')]

>> POS Tags are: 
 [('Logic', 'NNP'), ('Problem', 'NNP'), ('Solving', 'NNP'), ('.', '.')]

 (S (NP Logic/NNP Problem/NNP Solving/NNP) ./.) 


>> Noun Phrases are: 
 ['Logic Problem Solving']

>> Named Entities are: 
 [('PERSON', 'Logic'), ('ORGANIZATION', 'Problem Solving')] 

>> Stemming using Porter Stemmer: 
 [('Logic', 'logic'), ('Problem', 'problem'), ('Solving', 'solv'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Logic', 'logic'), ('Problem', 'problem'), ('Solving', 'solv'), ('.', '.')]

>> Lemmatization: 
 [('Logic', 'Logic'), ('Problem', 'Problem'), ('Solving', 'Solving'), ('.', '.')]



============================ Sentence 236 =============================

North Holland Elsevier (1979). 


>> Tokens are: 
 ['North', 'Holland', 'Elsevier', '(', '1979', ')', '.']

>> Bigrams are: 
 [('North', 'Holland'), ('Holland', 'Elsevier'), ('Elsevier', '('), ('(', '1979'), ('1979', ')'), (')', '.')]

>> Trigrams are: 
 [('North', 'Holland', 'Elsevier'), ('Holland', 'Elsevier', '('), ('Elsevier', '(', '1979'), ('(', '1979', ')'), ('1979', ')', '.')]

>> POS Tags are: 
 [('North', 'NNP'), ('Holland', 'NNP'), ('Elsevier', 'NNP'), ('(', '('), ('1979', 'CD'), (')', ')'), ('.', '.')]

 (S (NP North/NNP Holland/NNP Elsevier/NNP) (/( 1979/CD )/) ./.) 


>> Noun Phrases are: 
 ['North Holland Elsevier']

>> Named Entities are: 
 [('GPE', 'North'), ('ORGANIZATION', 'Holland Elsevier')] 

>> Stemming using Porter Stemmer: 
 [('North', 'north'), ('Holland', 'holland'), ('Elsevier', 'elsevi'), ('(', '('), ('1979', '1979'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('North', 'north'), ('Holland', 'holland'), ('Elsevier', 'elsevi'), ('(', '('), ('1979', '1979'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('North', 'North'), ('Holland', 'Holland'), ('Elsevier', 'Elsevier'), ('(', '('), ('1979', '1979'), (')', ')'), ('.', '.')]



============================ Sentence 237 =============================

Also at  http://www.doc.ic.ac.uk/~rak/. 


>> Tokens are: 
 ['Also', 'http', ':', '//www.doc.ic.ac.uk/~rak/', '.']

>> Bigrams are: 
 [('Also', 'http'), ('http', ':'), (':', '//www.doc.ic.ac.uk/~rak/'), ('//www.doc.ic.ac.uk/~rak/', '.')]

>> Trigrams are: 
 [('Also', 'http', ':'), ('http', ':', '//www.doc.ic.ac.uk/~rak/'), (':', '//www.doc.ic.ac.uk/~rak/', '.')]

>> POS Tags are: 
 [('Also', 'RB'), ('http', 'NN'), (':', ':'), ('//www.doc.ic.ac.uk/~rak/', 'NN'), ('.', '.')]

 (S Also/RB (NP http/NN) :/: (NP //www.doc.ic.ac.uk/~rak//NN) ./.) 


>> Noun Phrases are: 
 ['http', '//www.doc.ic.ac.uk/~rak/']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Also', 'also'), ('http', 'http'), (':', ':'), ('//www.doc.ic.ac.uk/~rak/', '//www.doc.ic.ac.uk/~rak/'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Also', 'also'), ('http', 'http'), (':', ':'), ('//www.doc.ic.ac.uk/~rak/', '//www.doc.ic.ac.uk/~rak/'), ('.', '.')]

>> Lemmatization: 
 [('Also', 'Also'), ('http', 'http'), (':', ':'), ('//www.doc.ic.ac.uk/~rak/', '//www.doc.ic.ac.uk/~rak/'), ('.', '.')]



============================ Sentence 238 =============================

[Kowalski, 2011]. 


>> Tokens are: 
 ['[', 'Kowalski', ',', '2011', ']', '.']

>> Bigrams are: 
 [('[', 'Kowalski'), ('Kowalski', ','), (',', '2011'), ('2011', ']'), (']', '.')]

>> Trigrams are: 
 [('[', 'Kowalski', ','), ('Kowalski', ',', '2011'), (',', '2011', ']'), ('2011', ']', '.')]

>> POS Tags are: 
 [('[', 'JJ'), ('Kowalski', 'NNP'), (',', ','), ('2011', 'CD'), (']', 'NN'), ('.', '.')]

 (S (NP [/JJ Kowalski/NNP) ,/, 2011/CD (NP ]/NN) ./.) 


>> Noun Phrases are: 
 ['[ Kowalski', ']']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('[', '['), ('Kowalski', 'kowalski'), (',', ','), ('2011', '2011'), (']', ']'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('[', '['), ('Kowalski', 'kowalski'), (',', ','), ('2011', '2011'), (']', ']'), ('.', '.')]

>> Lemmatization: 
 [('[', '['), ('Kowalski', 'Kowalski'), (',', ','), ('2011', '2011'), (']', ']'), ('.', '.')]



============================ Sentence 239 =============================

Robert Kowalski. 


>> Tokens are: 
 ['Robert', 'Kowalski', '.']

>> Bigrams are: 
 [('Robert', 'Kowalski'), ('Kowalski', '.')]

>> Trigrams are: 
 [('Robert', 'Kowalski', '.')]

>> POS Tags are: 
 [('Robert', 'NNP'), ('Kowalski', 'NNP'), ('.', '.')]

 (S (NP Robert/NNP Kowalski/NNP) ./.) 


>> Noun Phrases are: 
 ['Robert Kowalski']

>> Named Entities are: 
 [('PERSON', 'Robert'), ('ORGANIZATION', 'Kowalski')] 

>> Stemming using Porter Stemmer: 
 [('Robert', 'robert'), ('Kowalski', 'kowalski'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Robert', 'robert'), ('Kowalski', 'kowalski'), ('.', '.')]

>> Lemmatization: 
 [('Robert', 'Robert'), ('Kowalski', 'Kowalski'), ('.', '.')]



============================ Sentence 240 =============================

Computational Logic  and Human Thinking – How to be Artificially Intelligent. 


>> Tokens are: 
 ['Computational', 'Logic', 'Human', 'Thinking', '–', 'How', 'Artificially', 'Intelligent', '.']

>> Bigrams are: 
 [('Computational', 'Logic'), ('Logic', 'Human'), ('Human', 'Thinking'), ('Thinking', '–'), ('–', 'How'), ('How', 'Artificially'), ('Artificially', 'Intelligent'), ('Intelligent', '.')]

>> Trigrams are: 
 [('Computational', 'Logic', 'Human'), ('Logic', 'Human', 'Thinking'), ('Human', 'Thinking', '–'), ('Thinking', '–', 'How'), ('–', 'How', 'Artificially'), ('How', 'Artificially', 'Intelligent'), ('Artificially', 'Intelligent', '.')]

>> POS Tags are: 
 [('Computational', 'NNP'), ('Logic', 'NNP'), ('Human', 'NNP'), ('Thinking', 'NNP'), ('–', 'NNP'), ('How', 'NNP'), ('Artificially', 'NNP'), ('Intelligent', 'NNP'), ('.', '.')]

 (S
  (NP
    Computational/NNP
    Logic/NNP
    Human/NNP
    Thinking/NNP
    –/NNP
    How/NNP
    Artificially/NNP
    Intelligent/NNP)
  ./.) 


>> Noun Phrases are: 
 ['Computational Logic Human Thinking – How Artificially Intelligent']

>> Named Entities are: 
 [('PERSON', 'Logic Human Thinking')] 

>> Stemming using Porter Stemmer: 
 [('Computational', 'comput'), ('Logic', 'logic'), ('Human', 'human'), ('Thinking', 'think'), ('–', '–'), ('How', 'how'), ('Artificially', 'artifici'), ('Intelligent', 'intellig'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Computational', 'comput'), ('Logic', 'logic'), ('Human', 'human'), ('Thinking', 'think'), ('–', '–'), ('How', 'how'), ('Artificially', 'artifici'), ('Intelligent', 'intellig'), ('.', '.')]

>> Lemmatization: 
 [('Computational', 'Computational'), ('Logic', 'Logic'), ('Human', 'Human'), ('Thinking', 'Thinking'), ('–', '–'), ('How', 'How'), ('Artificially', 'Artificially'), ('Intelligent', 'Intelligent'), ('.', '.')]



============================ Sentence 241 =============================

Cambridge University Press. 


>> Tokens are: 
 ['Cambridge', 'University', 'Press', '.']

>> Bigrams are: 
 [('Cambridge', 'University'), ('University', 'Press'), ('Press', '.')]

>> Trigrams are: 
 [('Cambridge', 'University', 'Press'), ('University', 'Press', '.')]

>> POS Tags are: 
 [('Cambridge', 'NNP'), ('University', 'NNP'), ('Press', 'NNP'), ('.', '.')]

 (S (NP Cambridge/NNP University/NNP Press/NNP) ./.) 


>> Noun Phrases are: 
 ['Cambridge University Press']

>> Named Entities are: 
 [('PERSON', 'Cambridge'), ('ORGANIZATION', 'University Press')] 

>> Stemming using Porter Stemmer: 
 [('Cambridge', 'cambridg'), ('University', 'univers'), ('Press', 'press'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Cambridge', 'cambridg'), ('University', 'univers'), ('Press', 'press'), ('.', '.')]

>> Lemmatization: 
 [('Cambridge', 'Cambridge'), ('University', 'University'), ('Press', 'Press'), ('.', '.')]



============================ Sentence 242 =============================

[Maes, 1990] Pattie Maes. 


>> Tokens are: 
 ['[', 'Maes', ',', '1990', ']', 'Pattie', 'Maes', '.']

>> Bigrams are: 
 [('[', 'Maes'), ('Maes', ','), (',', '1990'), ('1990', ']'), (']', 'Pattie'), ('Pattie', 'Maes'), ('Maes', '.')]

>> Trigrams are: 
 [('[', 'Maes', ','), ('Maes', ',', '1990'), (',', '1990', ']'), ('1990', ']', 'Pattie'), (']', 'Pattie', 'Maes'), ('Pattie', 'Maes', '.')]

>> POS Tags are: 
 [('[', 'NN'), ('Maes', 'NNP'), (',', ','), ('1990', 'CD'), (']', 'NNP'), ('Pattie', 'NNP'), ('Maes', 'NNP'), ('.', '.')]

 (S (NP [/NN Maes/NNP) ,/, 1990/CD (NP ]/NNP Pattie/NNP Maes/NNP) ./.) 


>> Noun Phrases are: 
 ['[ Maes', '] Pattie Maes']

>> Named Entities are: 
 [('PERSON', 'Maes'), ('PERSON', 'Pattie Maes')] 

>> Stemming using Porter Stemmer: 
 [('[', '['), ('Maes', 'mae'), (',', ','), ('1990', '1990'), (']', ']'), ('Pattie', 'patti'), ('Maes', 'mae'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('[', '['), ('Maes', 'mae'), (',', ','), ('1990', '1990'), (']', ']'), ('Pattie', 'patti'), ('Maes', 'mae'), ('.', '.')]

>> Lemmatization: 
 [('[', '['), ('Maes', 'Maes'), (',', ','), ('1990', '1990'), (']', ']'), ('Pattie', 'Pattie'), ('Maes', 'Maes'), ('.', '.')]



============================ Sentence 243 =============================

Situated agents can have goals. 


>> Tokens are: 
 ['Situated', 'agents', 'goals', '.']

>> Bigrams are: 
 [('Situated', 'agents'), ('agents', 'goals'), ('goals', '.')]

>> Trigrams are: 
 [('Situated', 'agents', 'goals'), ('agents', 'goals', '.')]

>> POS Tags are: 
 [('Situated', 'VBN'), ('agents', 'NNS'), ('goals', 'NNS'), ('.', '.')]

 (S Situated/VBN (NP agents/NNS goals/NNS) ./.) 


>> Noun Phrases are: 
 ['agents goals']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Situated', 'situat'), ('agents', 'agent'), ('goals', 'goal'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Situated', 'situat'), ('agents', 'agent'), ('goals', 'goal'), ('.', '.')]

>> Lemmatization: 
 [('Situated', 'Situated'), ('agents', 'agent'), ('goals', 'goal'), ('.', '.')]



============================ Sentence 244 =============================

Robot. 


>> Tokens are: 
 ['Robot', '.']

>> Bigrams are: 
 [('Robot', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('Robot', 'NNP'), ('.', '.')]

 (S (NP Robot/NNP) ./.) 


>> Noun Phrases are: 
 ['Robot']

>> Named Entities are: 
 [('GPE', 'Robot')] 

>> Stemming using Porter Stemmer: 
 [('Robot', 'robot'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Robot', 'robot'), ('.', '.')]

>> Lemmatization: 
 [('Robot', 'Robot'), ('.', '.')]



============================ Sentence 245 =============================

Autonomous Syst. 


>> Tokens are: 
 ['Autonomous', 'Syst', '.']

>> Bigrams are: 
 [('Autonomous', 'Syst'), ('Syst', '.')]

>> Trigrams are: 
 [('Autonomous', 'Syst', '.')]

>> POS Tags are: 
 [('Autonomous', 'JJ'), ('Syst', 'NNP'), ('.', '.')]

 (S (NP Autonomous/JJ Syst/NNP) ./.) 


>> Noun Phrases are: 
 ['Autonomous Syst']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Autonomous', 'autonom'), ('Syst', 'syst'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Autonomous', 'autonom'), ('Syst', 'syst'), ('.', '.')]

>> Lemmatization: 
 [('Autonomous', 'Autonomous'), ('Syst', 'Syst'), ('.', '.')]



============================ Sentence 246 =============================

6(1-2):49-70. 


>> Tokens are: 
 ['6', '(', '1-2', ')', ':49-70', '.']

>> Bigrams are: 
 [('6', '('), ('(', '1-2'), ('1-2', ')'), (')', ':49-70'), (':49-70', '.')]

>> Trigrams are: 
 [('6', '(', '1-2'), ('(', '1-2', ')'), ('1-2', ')', ':49-70'), (')', ':49-70', '.')]

>> POS Tags are: 
 [('6', 'CD'), ('(', '('), ('1-2', 'JJ'), (')', ')'), (':49-70', 'NN'), ('.', '.')]

 (S 6/CD (/( 1-2/JJ )/) (NP :49-70/NN) ./.) 


>> Noun Phrases are: 
 [':49-70']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('6', '6'), ('(', '('), ('1-2', '1-2'), (')', ')'), (':49-70', ':49-70'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('6', '6'), ('(', '('), ('1-2', '1-2'), (')', ')'), (':49-70', ':49-70'), ('.', '.')]

>> Lemmatization: 
 [('6', '6'), ('(', '('), ('1-2', '1-2'), (')', ')'), (':49-70', ':49-70'), ('.', '.')]



============================ Sentence 247 =============================

[Poole, 1997]  David Poole. 


>> Tokens are: 
 ['[', 'Poole', ',', '1997', ']', 'David', 'Poole', '.']

>> Bigrams are: 
 [('[', 'Poole'), ('Poole', ','), (',', '1997'), ('1997', ']'), (']', 'David'), ('David', 'Poole'), ('Poole', '.')]

>> Trigrams are: 
 [('[', 'Poole', ','), ('Poole', ',', '1997'), (',', '1997', ']'), ('1997', ']', 'David'), (']', 'David', 'Poole'), ('David', 'Poole', '.')]

>> POS Tags are: 
 [('[', 'JJ'), ('Poole', 'NNP'), (',', ','), ('1997', 'CD'), (']', 'NN'), ('David', 'NNP'), ('Poole', 'NNP'), ('.', '.')]

 (S (NP [/JJ Poole/NNP) ,/, 1997/CD (NP ]/NN David/NNP Poole/NNP) ./.) 


>> Noun Phrases are: 
 ['[ Poole', '] David Poole']

>> Named Entities are: 
 [('PERSON', 'David Poole')] 

>> Stemming using Porter Stemmer: 
 [('[', '['), ('Poole', 'pool'), (',', ','), ('1997', '1997'), (']', ']'), ('David', 'david'), ('Poole', 'pool'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('[', '['), ('Poole', 'pool'), (',', ','), ('1997', '1997'), (']', ']'), ('David', 'david'), ('Poole', 'pool'), ('.', '.')]

>> Lemmatization: 
 [('[', '['), ('Poole', 'Poole'), (',', ','), ('1997', '1997'), (']', ']'), ('David', 'David'), ('Poole', 'Poole'), ('.', '.')]



============================ Sentence 248 =============================

The independent choice logic  for modeling multiple agents under uncertainty. 


>> Tokens are: 
 ['The', 'independent', 'choice', 'logic', 'modeling', 'multiple', 'agents', 'uncertainty', '.']

>> Bigrams are: 
 [('The', 'independent'), ('independent', 'choice'), ('choice', 'logic'), ('logic', 'modeling'), ('modeling', 'multiple'), ('multiple', 'agents'), ('agents', 'uncertainty'), ('uncertainty', '.')]

>> Trigrams are: 
 [('The', 'independent', 'choice'), ('independent', 'choice', 'logic'), ('choice', 'logic', 'modeling'), ('logic', 'modeling', 'multiple'), ('modeling', 'multiple', 'agents'), ('multiple', 'agents', 'uncertainty'), ('agents', 'uncertainty', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('independent', 'JJ'), ('choice', 'NN'), ('logic', 'VBD'), ('modeling', 'VBG'), ('multiple', 'JJ'), ('agents', 'NNS'), ('uncertainty', 'NN'), ('.', '.')]

 (S
  (NP The/DT independent/JJ choice/NN)
  logic/VBD
  modeling/VBG
  (NP multiple/JJ agents/NNS uncertainty/NN)
  ./.) 


>> Noun Phrases are: 
 ['The independent choice', 'multiple agents uncertainty']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('independent', 'independ'), ('choice', 'choic'), ('logic', 'logic'), ('modeling', 'model'), ('multiple', 'multipl'), ('agents', 'agent'), ('uncertainty', 'uncertainti'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('independent', 'independ'), ('choice', 'choic'), ('logic', 'logic'), ('modeling', 'model'), ('multiple', 'multipl'), ('agents', 'agent'), ('uncertainty', 'uncertainti'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('independent', 'independent'), ('choice', 'choice'), ('logic', 'logic'), ('modeling', 'modeling'), ('multiple', 'multiple'), ('agents', 'agent'), ('uncertainty', 'uncertainty'), ('.', '.')]



============================ Sentence 249 =============================

Artifi- cial Intelligence, 94:7-56. 


>> Tokens are: 
 ['Artifi-', 'cial', 'Intelligence', ',', '94:7-56', '.']

>> Bigrams are: 
 [('Artifi-', 'cial'), ('cial', 'Intelligence'), ('Intelligence', ','), (',', '94:7-56'), ('94:7-56', '.')]

>> Trigrams are: 
 [('Artifi-', 'cial', 'Intelligence'), ('cial', 'Intelligence', ','), ('Intelligence', ',', '94:7-56'), (',', '94:7-56', '.')]

>> POS Tags are: 
 [('Artifi-', 'JJ'), ('cial', 'JJ'), ('Intelligence', 'NNP'), (',', ','), ('94:7-56', 'CD'), ('.', '.')]

 (S (NP Artifi-/JJ cial/JJ Intelligence/NNP) ,/, 94:7-56/CD ./.) 


>> Noun Phrases are: 
 ['Artifi- cial Intelligence']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Artifi-', 'artifi-'), ('cial', 'cial'), ('Intelligence', 'intellig'), (',', ','), ('94:7-56', '94:7-56'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Artifi-', 'artifi-'), ('cial', 'cial'), ('Intelligence', 'intellig'), (',', ','), ('94:7-56', '94:7-56'), ('.', '.')]

>> Lemmatization: 
 [('Artifi-', 'Artifi-'), ('cial', 'cial'), ('Intelligence', 'Intelligence'), (',', ','), ('94:7-56', '94:7-56'), ('.', '.')]



============================ Sentence 250 =============================

[Sperber, and Wilson, 1986] Daniel Sperber, and Deidre  Wilson. 


>> Tokens are: 
 ['[', 'Sperber', ',', 'Wilson', ',', '1986', ']', 'Daniel', 'Sperber', ',', 'Deidre', 'Wilson', '.']

>> Bigrams are: 
 [('[', 'Sperber'), ('Sperber', ','), (',', 'Wilson'), ('Wilson', ','), (',', '1986'), ('1986', ']'), (']', 'Daniel'), ('Daniel', 'Sperber'), ('Sperber', ','), (',', 'Deidre'), ('Deidre', 'Wilson'), ('Wilson', '.')]

>> Trigrams are: 
 [('[', 'Sperber', ','), ('Sperber', ',', 'Wilson'), (',', 'Wilson', ','), ('Wilson', ',', '1986'), (',', '1986', ']'), ('1986', ']', 'Daniel'), (']', 'Daniel', 'Sperber'), ('Daniel', 'Sperber', ','), ('Sperber', ',', 'Deidre'), (',', 'Deidre', 'Wilson'), ('Deidre', 'Wilson', '.')]

>> POS Tags are: 
 [('[', 'JJ'), ('Sperber', 'NNP'), (',', ','), ('Wilson', 'NNP'), (',', ','), ('1986', 'CD'), (']', 'NNP'), ('Daniel', 'NNP'), ('Sperber', 'NNP'), (',', ','), ('Deidre', 'NNP'), ('Wilson', 'NNP'), ('.', '.')]

 (S
  (NP [/JJ Sperber/NNP)
  ,/,
  (NP Wilson/NNP)
  ,/,
  1986/CD
  (NP ]/NNP Daniel/NNP Sperber/NNP)
  ,/,
  (NP Deidre/NNP Wilson/NNP)
  ./.) 


>> Noun Phrases are: 
 ['[ Sperber', 'Wilson', '] Daniel Sperber', 'Deidre Wilson']

>> Named Entities are: 
 [('PERSON', 'Wilson'), ('PERSON', 'Daniel Sperber'), ('PERSON', 'Deidre Wilson')] 

>> Stemming using Porter Stemmer: 
 [('[', '['), ('Sperber', 'sperber'), (',', ','), ('Wilson', 'wilson'), (',', ','), ('1986', '1986'), (']', ']'), ('Daniel', 'daniel'), ('Sperber', 'sperber'), (',', ','), ('Deidre', 'deidr'), ('Wilson', 'wilson'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('[', '['), ('Sperber', 'sperber'), (',', ','), ('Wilson', 'wilson'), (',', ','), ('1986', '1986'), (']', ']'), ('Daniel', 'daniel'), ('Sperber', 'sperber'), (',', ','), ('Deidre', 'deidr'), ('Wilson', 'wilson'), ('.', '.')]

>> Lemmatization: 
 [('[', '['), ('Sperber', 'Sperber'), (',', ','), ('Wilson', 'Wilson'), (',', ','), ('1986', '1986'), (']', ']'), ('Daniel', 'Daniel'), ('Sperber', 'Sperber'), (',', ','), ('Deidre', 'Deidre'), ('Wilson', 'Wilson'), ('.', '.')]



============================ Sentence 251 =============================

Relevance. 


>> Tokens are: 
 ['Relevance', '.']

>> Bigrams are: 
 [('Relevance', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('Relevance', 'NN'), ('.', '.')]

 (S (NP Relevance/NN) ./.) 


>> Noun Phrases are: 
 ['Relevance']

>> Named Entities are: 
 [('GPE', 'Relevance')] 

>> Stemming using Porter Stemmer: 
 [('Relevance', 'relev'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Relevance', 'relev'), ('.', '.')]

>> Lemmatization: 
 [('Relevance', 'Relevance'), ('.', '.')]



============================ Sentence 252 =============================

Blackwell, Oxford. 


>> Tokens are: 
 ['Blackwell', ',', 'Oxford', '.']

>> Bigrams are: 
 [('Blackwell', ','), (',', 'Oxford'), ('Oxford', '.')]

>> Trigrams are: 
 [('Blackwell', ',', 'Oxford'), (',', 'Oxford', '.')]

>> POS Tags are: 
 [('Blackwell', 'NNP'), (',', ','), ('Oxford', 'NNP'), ('.', '.')]

 (S (NP Blackwell/NNP) ,/, (NP Oxford/NNP) ./.) 


>> Noun Phrases are: 
 ['Blackwell', 'Oxford']

>> Named Entities are: 
 [('GPE', 'Blackwell'), ('GPE', 'Oxford')] 

>> Stemming using Porter Stemmer: 
 [('Blackwell', 'blackwel'), (',', ','), ('Oxford', 'oxford'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Blackwell', 'blackwel'), (',', ','), ('Oxford', 'oxford'), ('.', '.')]

>> Lemmatization: 
 [('Blackwell', 'Blackwell'), (',', ','), ('Oxford', 'Oxford'), ('.', '.')]



============================ Sentence 253 =============================

[Williams, 1990, 1995] Joseph Williams. 


>> Tokens are: 
 ['[', 'Williams', ',', '1990', ',', '1995', ']', 'Joseph', 'Williams', '.']

>> Bigrams are: 
 [('[', 'Williams'), ('Williams', ','), (',', '1990'), ('1990', ','), (',', '1995'), ('1995', ']'), (']', 'Joseph'), ('Joseph', 'Williams'), ('Williams', '.')]

>> Trigrams are: 
 [('[', 'Williams', ','), ('Williams', ',', '1990'), (',', '1990', ','), ('1990', ',', '1995'), (',', '1995', ']'), ('1995', ']', 'Joseph'), (']', 'Joseph', 'Williams'), ('Joseph', 'Williams', '.')]

>> POS Tags are: 
 [('[', 'JJ'), ('Williams', 'NNP'), (',', ','), ('1990', 'CD'), (',', ','), ('1995', 'CD'), (']', 'NNP'), ('Joseph', 'NNP'), ('Williams', 'NNP'), ('.', '.')]

 (S
  (NP [/JJ Williams/NNP)
  ,/,
  1990/CD
  ,/,
  1995/CD
  (NP ]/NNP Joseph/NNP Williams/NNP)
  ./.) 


>> Noun Phrases are: 
 ['[ Williams', '] Joseph Williams']

>> Named Entities are: 
 [('PERSON', 'Williams'), ('PERSON', 'Joseph Williams')] 

>> Stemming using Porter Stemmer: 
 [('[', '['), ('Williams', 'william'), (',', ','), ('1990', '1990'), (',', ','), ('1995', '1995'), (']', ']'), ('Joseph', 'joseph'), ('Williams', 'william'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('[', '['), ('Williams', 'william'), (',', ','), ('1990', '1990'), (',', ','), ('1995', '1995'), (']', ']'), ('Joseph', 'joseph'), ('Williams', 'william'), ('.', '.')]

>> Lemmatization: 
 [('[', '['), ('Williams', 'Williams'), (',', ','), ('1990', '1990'), (',', ','), ('1995', '1995'), (']', ']'), ('Joseph', 'Joseph'), ('Williams', 'Williams'), ('.', '.')]



============================ Sentence 254 =============================

Style: Toward  Clarity and Grace. 


>> Tokens are: 
 ['Style', ':', 'Toward', 'Clarity', 'Grace', '.']

>> Bigrams are: 
 [('Style', ':'), (':', 'Toward'), ('Toward', 'Clarity'), ('Clarity', 'Grace'), ('Grace', '.')]

>> Trigrams are: 
 [('Style', ':', 'Toward'), (':', 'Toward', 'Clarity'), ('Toward', 'Clarity', 'Grace'), ('Clarity', 'Grace', '.')]

>> POS Tags are: 
 [('Style', 'NN'), (':', ':'), ('Toward', 'NNP'), ('Clarity', 'NNP'), ('Grace', 'NNP'), ('.', '.')]

 (S (NP Style/NN) :/: (NP Toward/NNP Clarity/NNP Grace/NNP) ./.) 


>> Noun Phrases are: 
 ['Style', 'Toward Clarity Grace']

>> Named Entities are: 
 [('GPE', 'Style'), ('PERSON', 'Toward Clarity Grace')] 

>> Stemming using Porter Stemmer: 
 [('Style', 'style'), (':', ':'), ('Toward', 'toward'), ('Clarity', 'clariti'), ('Grace', 'grace'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Style', 'style'), (':', ':'), ('Toward', 'toward'), ('Clarity', 'clariti'), ('Grace', 'grace'), ('.', '.')]

>> Lemmatization: 
 [('Style', 'Style'), (':', ':'), ('Toward', 'Toward'), ('Clarity', 'Clarity'), ('Grace', 'Grace'), ('.', '.')]



============================ Sentence 255 =============================

University of Chicago Press. 


>> Tokens are: 
 ['University', 'Chicago', 'Press', '.']

>> Bigrams are: 
 [('University', 'Chicago'), ('Chicago', 'Press'), ('Press', '.')]

>> Trigrams are: 
 [('University', 'Chicago', 'Press'), ('Chicago', 'Press', '.')]

>> POS Tags are: 
 [('University', 'NNP'), ('Chicago', 'NNP'), ('Press', 'NNP'), ('.', '.')]

 (S (NP University/NNP Chicago/NNP Press/NNP) ./.) 


>> Noun Phrases are: 
 ['University Chicago Press']

>> Named Entities are: 
 [('ORGANIZATION', 'University'), ('ORGANIZATION', 'Chicago')] 

>> Stemming using Porter Stemmer: 
 [('University', 'univers'), ('Chicago', 'chicago'), ('Press', 'press'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('University', 'univers'), ('Chicago', 'chicago'), ('Press', 'press'), ('.', '.')]

>> Lemmatization: 
 [('University', 'University'), ('Chicago', 'Chicago'), ('Press', 'Press'), ('.', '.')]



============================ Sentence 256 =============================

16 


>> Tokens are: 
 ['16']

>> Bigrams are: 
 []

>> Trigrams are: 
 []

>> POS Tags are: 
 [('16', 'CD')]

 (S 16/CD) 


>> Noun Phrases are: 
 []

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('16', '16')]

>> Stemming using Snowball Stemmer: 
 [('16', '16')]

>> Lemmatization: 
 [('16', '16')]

